command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3512186	File	data/converged/CVE-2019-16718~_radare2/libr_asm_p_asm_x86_nz.c								
ANR	3512187	DeclStmt									
ANR	3512188	Decl							ut64	"ut64 ( RAsm * a , const char * s )"	getnum
ANR	3512189	DeclStmt									
ANR	3512190	Decl							const ut8	const ut8 [ ]	SEG_REG_PREFIXES
ANR	3512191	ClassDef	tokentype_t	82:8:2960:3039							
ANR	3512192	DeclStmt									
ANR	3512193	Decl							tokentype_t	tokentype_t	x86newTokenType
ANR	3512194	ClassDef	register_t	89:8:3050:3783							
ANR	3512195	DeclStmt									
ANR	3512196	Decl							register_t	register_t	Register
ANR	3512197	ClassDef	operand_t	101:8:3794:4156							
ANR	3512198	DeclStmt									
ANR	3512199	Decl							ut32	ut32	type
ANR	3512200	DeclStmt									
ANR	3512201	Decl							st8	st8	sign
ANR	3512202	ClassDef	<unnamed>	104:1:3837:3880							
ANR	3512203	DeclStmt									
ANR	3512204	Decl							Register	Register	reg
ANR	3512205	DeclStmt									
ANR	3512206	Decl							bool	bool	extended
ANR	3512207	ClassDef	<unnamed>	108:1:3884:4090							
ANR	3512208	ClassDef	<unnamed>	109:2:3894:3979							
ANR	3512209	DeclStmt									
ANR	3512210	Decl							ut64	ut64	offset
ANR	3512211	DeclStmt									
ANR	3512212	Decl							st8	st8	offset_sign
ANR	3512213	DeclStmt									
ANR	3512214	Decl							Register	Register [ 2 ]	regs
ANR	3512215	DeclStmt									
ANR	3512216	Decl							int	int [ 2 ]	scale
ANR	3512217	ClassDef	<unnamed>	115:2:3984:4036							
ANR	3512218	DeclStmt									
ANR	3512219	Decl							ut64	ut64	immediate
ANR	3512220	DeclStmt									
ANR	3512221	Decl							bool	bool	is_good_flag
ANR	3512222	ClassDef	<unnamed>	119:2:4041:4086							
ANR	3512223	DeclStmt									
ANR	3512224	Decl							char	char [ MAX_REPOP_LENGTH ]	rep_op
ANR	3512225	DeclStmt									
ANR	3512226	Decl							bool	bool	explicit_size
ANR	3512227	DeclStmt									
ANR	3512228	Decl							ut32	ut32	dest_size
ANR	3512229	DeclStmt									
ANR	3512230	Decl							ut32	ut32	reg_size
ANR	3512231	DeclStmt									
ANR	3512232	Decl							operand_t	operand_t	Operand
ANR	3512233	ClassDef	Opcode_t	128:8:4167:4340							
ANR	3512234	DeclStmt									
ANR	3512235	Decl							char	char *	mnemonic
ANR	3512236	DeclStmt									
ANR	3512237	Decl							ut32	ut32 [ 3 ]	op
ANR	3512238	DeclStmt									
ANR	3512239	Decl							size_t	size_t	op_len
ANR	3512240	DeclStmt									
ANR	3512241	Decl							bool	bool	is_short
ANR	3512242	DeclStmt									
ANR	3512243	Decl							ut8	ut8 [ 3 ]	opcode
ANR	3512244	DeclStmt									
ANR	3512245	Decl							int	int	operands_count
ANR	3512246	DeclStmt									
ANR	3512247	Decl							Operand	Operand [ MAX_OPERANDS ]	operands
ANR	3512248	DeclStmt									
ANR	3512249	Decl							bool	bool	has_bnd
ANR	3512250	DeclStmt									
ANR	3512251	Decl							Opcode_t	Opcode_t	Opcode
ANR	3512252	Function	is_debug_or_control	139:0:4343:4460							
ANR	3512253	FunctionDef	is_debug_or_control (Operand op)		3512252	0					
ANR	3512254	CompoundStatement		139:51:4394:4460	3512252	0					
ANR	3512255	ReturnStatement	return ( op . type & OT_REGTYPE ) & ( OT_CONTROLREG | OT_DEBUGREG ) ;	140:1:4397:4458	3512252	0	True				
ANR	3512256	BitAndExpression	( op . type & OT_REGTYPE ) & ( OT_CONTROLREG | OT_DEBUGREG )		3512252	0		&			
ANR	3512257	BitAndExpression	op . type & OT_REGTYPE		3512252	0		&			
ANR	3512258	MemberAccess	op . type		3512252	0					
ANR	3512259	Identifier	op		3512252	0					
ANR	3512260	Identifier	type		3512252	1					
ANR	3512261	Identifier	OT_REGTYPE		3512252	1					
ANR	3512262	InclusiveOrExpression	OT_CONTROLREG | OT_DEBUGREG		3512252	1		|			
ANR	3512263	Identifier	OT_CONTROLREG		3512252	0					
ANR	3512264	Identifier	OT_DEBUGREG		3512252	1					
ANR	3512265	ReturnType	static inline bool		3512252	1					
ANR	3512266	Identifier	is_debug_or_control		3512252	2					
ANR	3512267	ParameterList	Operand op		3512252	3					
ANR	3512268	Parameter	Operand op	139:39:4382:4391	3512252	0	True				
ANR	3512269	ParameterType	Operand		3512252	0					
ANR	3512270	Identifier	op		3512252	1					
ANR	3512271	CFGEntryNode	ENTRY		3512252		True				
ANR	3512272	CFGExitNode	EXIT		3512252		True				
ANR	3512273	Symbol	op		3512252						
ANR	3512274	Symbol	OT_CONTROLREG		3512252						
ANR	3512275	Symbol	op . type		3512252						
ANR	3512276	Symbol	OT_DEBUGREG		3512252						
ANR	3512277	Symbol	OT_REGTYPE		3512252						
ANR	3512278	Function	getsib	143:0:4463:4581							
ANR	3512279	FunctionDef	getsib (const ut8 sib)		3512278	0					
ANR	3512280	CompoundStatement		143:33:4496:4581	3512278	0					
ANR	3512281	IfStatement	if ( ! sib )		3512278	0					
ANR	3512282	Condition	! sib	144:5:4503:4506	3512278	0	True				
ANR	3512283	UnaryOperationExpression	! sib		3512278	0					
ANR	3512284	UnaryOperator	!		3512278	0					
ANR	3512285	Identifier	sib		3512278	1					
ANR	3512286	CompoundStatement		2:11:12:12	3512278	1					
ANR	3512287	ReturnStatement	return 0 ;	145:2:4513:4521	3512278	0	True				
ANR	3512288	PrimaryExpression	0		3512278	0					
ANR	3512289	ReturnStatement	return ( sib & 0x8 ) ? 3 : getsib ( ( sib << 1 ) | 1 ) - 1 ;	147:1:4527:4579	3512278	1	True				
ANR	3512290	ConditionalExpression	( sib & 0x8 ) ? 3 : getsib ( ( sib << 1 ) | 1 ) - 1		3512278	0					
ANR	3512291	Condition	sib & 0x8		3512278	0					
ANR	3512292	BitAndExpression	sib & 0x8		3512278	0		&			
ANR	3512293	Identifier	sib		3512278	0					
ANR	3512294	PrimaryExpression	0x8		3512278	1					
ANR	3512295	PrimaryExpression	3		3512278	1					
ANR	3512296	AdditiveExpression	getsib ( ( sib << 1 ) | 1 ) - 1		3512278	2		-			
ANR	3512297	CallExpression	getsib ( ( sib << 1 ) | 1 )		3512278	0					
ANR	3512298	Callee	getsib		3512278	0					
ANR	3512299	Identifier	getsib		3512278	0					
ANR	3512300	ArgumentList	( sib << 1 ) | 1		3512278	1					
ANR	3512301	Argument	( sib << 1 ) | 1		3512278	0					
ANR	3512302	InclusiveOrExpression	( sib << 1 ) | 1		3512278	0		|			
ANR	3512303	ShiftExpression	sib << 1		3512278	0		<<			
ANR	3512304	Identifier	sib		3512278	0					
ANR	3512305	PrimaryExpression	1		3512278	1					
ANR	3512306	PrimaryExpression	1		3512278	1					
ANR	3512307	PrimaryExpression	1		3512278	1					
ANR	3512308	ReturnType	static ut8		3512278	1					
ANR	3512309	Identifier	getsib		3512278	2					
ANR	3512310	ParameterList	const ut8 sib		3512278	3					
ANR	3512311	Parameter	const ut8 sib	143:18:4481:4493	3512278	0	True				
ANR	3512312	ParameterType	const ut8		3512278	0					
ANR	3512313	Identifier	sib		3512278	1					
ANR	3512314	CFGEntryNode	ENTRY		3512278		True				
ANR	3512315	CFGExitNode	EXIT		3512278		True				
ANR	3512316	Symbol	sib		3512278						
ANR	3512317	Symbol	getsib		3512278						
ANR	3512318	Function	is_al_reg	150:0:4584:4745							
ANR	3512319	FunctionDef	is_al_reg (const Operand * op)		3512318	0					
ANR	3512320	CompoundStatement		150:40:4624:4745	3512318	0					
ANR	3512321	IfStatement	if ( op -> type & OT_MEMORY )		3512318	0					
ANR	3512322	Condition	op -> type & OT_MEMORY	151:5:4631:4650	3512318	0	True				
ANR	3512323	BitAndExpression	op -> type & OT_MEMORY		3512318	0		&			
ANR	3512324	PtrMemberAccess	op -> type		3512318	0					
ANR	3512325	Identifier	op		3512318	0					
ANR	3512326	Identifier	type		3512318	1					
ANR	3512327	Identifier	OT_MEMORY		3512318	1					
ANR	3512328	CompoundStatement		2:27:28:28	3512318	1					
ANR	3512329	ReturnStatement	return 0 ;	152:2:4657:4665	3512318	0	True				
ANR	3512330	PrimaryExpression	0		3512318	0					
ANR	3512331	IfStatement	if ( op -> reg == X86R_AL && op -> type & OT_BYTE )		3512318	1					
ANR	3512332	Condition	op -> reg == X86R_AL && op -> type & OT_BYTE	154:5:4675:4714	3512318	0	True				
ANR	3512333	AndExpression	op -> reg == X86R_AL && op -> type & OT_BYTE		3512318	0		&&			
ANR	3512334	EqualityExpression	op -> reg == X86R_AL		3512318	0		==			
ANR	3512335	PtrMemberAccess	op -> reg		3512318	0					
ANR	3512336	Identifier	op		3512318	0					
ANR	3512337	Identifier	reg		3512318	1					
ANR	3512338	Identifier	X86R_AL		3512318	1					
ANR	3512339	BitAndExpression	op -> type & OT_BYTE		3512318	1		&			
ANR	3512340	PtrMemberAccess	op -> type		3512318	0					
ANR	3512341	Identifier	op		3512318	0					
ANR	3512342	Identifier	type		3512318	1					
ANR	3512343	Identifier	OT_BYTE		3512318	1					
ANR	3512344	CompoundStatement		5:47:92:92	3512318	1					
ANR	3512345	ReturnStatement	return 1 ;	155:2:4721:4729	3512318	0	True				
ANR	3512346	PrimaryExpression	1		3512318	0					
ANR	3512347	ReturnStatement	return 0 ;	157:1:4735:4743	3512318	2	True				
ANR	3512348	PrimaryExpression	0		3512318	0					
ANR	3512349	ReturnType	static int		3512318	1					
ANR	3512350	Identifier	is_al_reg		3512318	2					
ANR	3512351	ParameterList	const Operand * op		3512318	3					
ANR	3512352	Parameter	const Operand * op	150:21:4605:4621	3512318	0	True				
ANR	3512353	ParameterType	const Operand *		3512318	0					
ANR	3512354	Identifier	op		3512318	1					
ANR	3512355	CFGEntryNode	ENTRY		3512318		True				
ANR	3512356	CFGExitNode	EXIT		3512318		True				
ANR	3512357	Symbol	op		3512318						
ANR	3512358	Symbol	* op		3512318						
ANR	3512359	Symbol	op -> type		3512318						
ANR	3512360	Symbol	OT_MEMORY		3512318						
ANR	3512361	Symbol	X86R_AL		3512318						
ANR	3512362	Symbol	op -> reg		3512318						
ANR	3512363	Symbol	OT_BYTE		3512318						
ANR	3512364	DeclStmt									
ANR	3512365	Decl							int	"int ( RAsm * a , ut8 * data , const Opcode * op )"	oprep
ANR	3512366	Function	process_16bit_group_1	162:0:4805:5420							
ANR	3512367	FunctionDef	"process_16bit_group_1 (RAsm * a , ut8 * data , const Opcode * op , int op1)"		3512366	0					
ANR	3512368	CompoundStatement		162:80:4885:5420	3512366	0					
ANR	3512369	ExpressionStatement	is_valid_registers ( op )	163:1:4888:4911	3512366	0	True				
ANR	3512370	CallExpression	is_valid_registers ( op )		3512366	0					
ANR	3512371	Callee	is_valid_registers		3512366	0					
ANR	3512372	Identifier	is_valid_registers		3512366	0					
ANR	3512373	ArgumentList	op		3512366	1					
ANR	3512374	Argument	op		3512366	0					
ANR	3512375	Identifier	op		3512366	0					
ANR	3512376	IdentifierDeclStatement	int l = 0 ;	164:1:4914:4923	3512366	1	True				
ANR	3512377	IdentifierDecl	l = 0		3512366	0					
ANR	3512378	IdentifierDeclType	int		3512366	0					
ANR	3512379	Identifier	l		3512366	1					
ANR	3512380	AssignmentExpression	l = 0		3512366	2		=			
ANR	3512381	Identifier	l		3512366	0					
ANR	3512382	PrimaryExpression	0		3512366	1					
ANR	3512383	IdentifierDeclStatement	int immediate = op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign ;	165:1:4926:4990	3512366	2	True				
ANR	3512384	IdentifierDecl	immediate = op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign		3512366	0					
ANR	3512385	IdentifierDeclType	int		3512366	0					
ANR	3512386	Identifier	immediate		3512366	1					
ANR	3512387	AssignmentExpression	immediate = op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign		3512366	2		=			
ANR	3512388	Identifier	immediate		3512366	0					
ANR	3512389	MultiplicativeExpression	op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign		3512366	1		*			
ANR	3512390	MemberAccess	op -> operands [ 1 ] . immediate		3512366	0					
ANR	3512391	ArrayIndexing	op -> operands [ 1 ]		3512366	0					
ANR	3512392	PtrMemberAccess	op -> operands		3512366	0					
ANR	3512393	Identifier	op		3512366	0					
ANR	3512394	Identifier	operands		3512366	1					
ANR	3512395	PrimaryExpression	1		3512366	1					
ANR	3512396	Identifier	immediate		3512366	1					
ANR	3512397	MemberAccess	op -> operands [ 1 ] . sign		3512366	1					
ANR	3512398	ArrayIndexing	op -> operands [ 1 ]		3512366	0					
ANR	3512399	PtrMemberAccess	op -> operands		3512366	0					
ANR	3512400	Identifier	op		3512366	0					
ANR	3512401	Identifier	operands		3512366	1					
ANR	3512402	PrimaryExpression	1		3512366	1					
ANR	3512403	Identifier	sign		3512366	1					
ANR	3512404	ExpressionStatement	data [ l ++ ] = 0x66	167:1:4994:5010	3512366	3	True				
ANR	3512405	AssignmentExpression	data [ l ++ ] = 0x66		3512366	0		=			
ANR	3512406	ArrayIndexing	data [ l ++ ]		3512366	0					
ANR	3512407	Identifier	data		3512366	0					
ANR	3512408	PostIncDecOperationExpression	l ++		3512366	1					
ANR	3512409	Identifier	l		3512366	0					
ANR	3512410	IncDec	++		3512366	1					
ANR	3512411	PrimaryExpression	0x66		3512366	1					
ANR	3512412	IfStatement	if ( op -> operands [ 1 ] . immediate < 128 )		3512366	4					
ANR	3512413	Condition	op -> operands [ 1 ] . immediate < 128	168:5:5017:5047	3512366	0	True				
ANR	3512414	RelationalExpression	op -> operands [ 1 ] . immediate < 128		3512366	0		<			
ANR	3512415	MemberAccess	op -> operands [ 1 ] . immediate		3512366	0					
ANR	3512416	ArrayIndexing	op -> operands [ 1 ]		3512366	0					
ANR	3512417	PtrMemberAccess	op -> operands		3512366	0					
ANR	3512418	Identifier	op		3512366	0					
ANR	3512419	Identifier	operands		3512366	1					
ANR	3512420	PrimaryExpression	1		3512366	1					
ANR	3512421	Identifier	immediate		3512366	1					
ANR	3512422	PrimaryExpression	128		3512366	1					
ANR	3512423	CompoundStatement		7:38:164:164	3512366	1					
ANR	3512424	ExpressionStatement	data [ l ++ ] = 0x83	169:2:5054:5070	3512366	0	True				
ANR	3512425	AssignmentExpression	data [ l ++ ] = 0x83		3512366	0		=			
ANR	3512426	ArrayIndexing	data [ l ++ ]		3512366	0					
ANR	3512427	Identifier	data		3512366	0					
ANR	3512428	PostIncDecOperationExpression	l ++		3512366	1					
ANR	3512429	Identifier	l		3512366	0					
ANR	3512430	IncDec	++		3512366	1					
ANR	3512431	PrimaryExpression	0x83		3512366	1					
ANR	3512432	ExpressionStatement	data [ l ++ ] = op -> operands [ 0 ] . reg | ( 0xc0 + op1 + op -> operands [ 0 ] . reg )	170:2:5074:5142	3512366	1	True				
ANR	3512433	AssignmentExpression	data [ l ++ ] = op -> operands [ 0 ] . reg | ( 0xc0 + op1 + op -> operands [ 0 ] . reg )		3512366	0		=			
ANR	3512434	ArrayIndexing	data [ l ++ ]		3512366	0					
ANR	3512435	Identifier	data		3512366	0					
ANR	3512436	PostIncDecOperationExpression	l ++		3512366	1					
ANR	3512437	Identifier	l		3512366	0					
ANR	3512438	IncDec	++		3512366	1					
ANR	3512439	InclusiveOrExpression	op -> operands [ 0 ] . reg | ( 0xc0 + op1 + op -> operands [ 0 ] . reg )		3512366	1		|			
ANR	3512440	MemberAccess	op -> operands [ 0 ] . reg		3512366	0					
ANR	3512441	ArrayIndexing	op -> operands [ 0 ]		3512366	0					
ANR	3512442	PtrMemberAccess	op -> operands		3512366	0					
ANR	3512443	Identifier	op		3512366	0					
ANR	3512444	Identifier	operands		3512366	1					
ANR	3512445	PrimaryExpression	0		3512366	1					
ANR	3512446	Identifier	reg		3512366	1					
ANR	3512447	AdditiveExpression	0xc0 + op1 + op -> operands [ 0 ] . reg		3512366	1		+			
ANR	3512448	PrimaryExpression	0xc0		3512366	0					
ANR	3512449	AdditiveExpression	op1 + op -> operands [ 0 ] . reg		3512366	1		+			
ANR	3512450	Identifier	op1		3512366	0					
ANR	3512451	MemberAccess	op -> operands [ 0 ] . reg		3512366	1					
ANR	3512452	ArrayIndexing	op -> operands [ 0 ]		3512366	0					
ANR	3512453	PtrMemberAccess	op -> operands		3512366	0					
ANR	3512454	Identifier	op		3512366	0					
ANR	3512455	Identifier	operands		3512366	1					
ANR	3512456	PrimaryExpression	0		3512366	1					
ANR	3512457	Identifier	reg		3512366	1					
ANR	3512458	ElseStatement	else		3512366	0					
ANR	3512459	CompoundStatement		10:8:266:266	3512366	0					
ANR	3512460	IfStatement	if ( op -> operands [ 0 ] . reg == X86R_AX )		3512366	0					
ANR	3512461	Condition	op -> operands [ 0 ] . reg == X86R_AX	172:6:5160:5189	3512366	0	True				
ANR	3512462	EqualityExpression	op -> operands [ 0 ] . reg == X86R_AX		3512366	0		==			
ANR	3512463	MemberAccess	op -> operands [ 0 ] . reg		3512366	0					
ANR	3512464	ArrayIndexing	op -> operands [ 0 ]		3512366	0					
ANR	3512465	PtrMemberAccess	op -> operands		3512366	0					
ANR	3512466	Identifier	op		3512366	0					
ANR	3512467	Identifier	operands		3512366	1					
ANR	3512468	PrimaryExpression	0		3512366	1					
ANR	3512469	Identifier	reg		3512366	1					
ANR	3512470	Identifier	X86R_AX		3512366	1					
ANR	3512471	CompoundStatement		11:38:306:306	3512366	1					
ANR	3512472	ExpressionStatement	data [ l ++ ] = 0x05 + op1	173:3:5197:5219	3512366	0	True				
ANR	3512473	AssignmentExpression	data [ l ++ ] = 0x05 + op1		3512366	0		=			
ANR	3512474	ArrayIndexing	data [ l ++ ]		3512366	0					
ANR	3512475	Identifier	data		3512366	0					
ANR	3512476	PostIncDecOperationExpression	l ++		3512366	1					
ANR	3512477	Identifier	l		3512366	0					
ANR	3512478	IncDec	++		3512366	1					
ANR	3512479	AdditiveExpression	0x05 + op1		3512366	1		+			
ANR	3512480	PrimaryExpression	0x05		3512366	0					
ANR	3512481	Identifier	op1		3512366	1					
ANR	3512482	ElseStatement	else		3512366	0					
ANR	3512483	CompoundStatement		13:9:344:344	3512366	0					
ANR	3512484	ExpressionStatement	data [ l ++ ] = 0x81	175:3:5235:5251	3512366	0	True				
ANR	3512485	AssignmentExpression	data [ l ++ ] = 0x81		3512366	0		=			
ANR	3512486	ArrayIndexing	data [ l ++ ]		3512366	0					
ANR	3512487	Identifier	data		3512366	0					
ANR	3512488	PostIncDecOperationExpression	l ++		3512366	1					
ANR	3512489	Identifier	l		3512366	0					
ANR	3512490	IncDec	++		3512366	1					
ANR	3512491	PrimaryExpression	0x81		3512366	1					
ANR	3512492	ExpressionStatement	data [ l ++ ] = ( 0xc0 + op1 ) | op -> operands [ 0 ] . reg	176:3:5256:5302	3512366	1	True				
ANR	3512493	AssignmentExpression	data [ l ++ ] = ( 0xc0 + op1 ) | op -> operands [ 0 ] . reg		3512366	0		=			
ANR	3512494	ArrayIndexing	data [ l ++ ]		3512366	0					
ANR	3512495	Identifier	data		3512366	0					
ANR	3512496	PostIncDecOperationExpression	l ++		3512366	1					
ANR	3512497	Identifier	l		3512366	0					
ANR	3512498	IncDec	++		3512366	1					
ANR	3512499	InclusiveOrExpression	( 0xc0 + op1 ) | op -> operands [ 0 ] . reg		3512366	1		|			
ANR	3512500	AdditiveExpression	0xc0 + op1		3512366	0		+			
ANR	3512501	PrimaryExpression	0xc0		3512366	0					
ANR	3512502	Identifier	op1		3512366	1					
ANR	3512503	MemberAccess	op -> operands [ 0 ] . reg		3512366	1					
ANR	3512504	ArrayIndexing	op -> operands [ 0 ]		3512366	0					
ANR	3512505	PtrMemberAccess	op -> operands		3512366	0					
ANR	3512506	Identifier	op		3512366	0					
ANR	3512507	Identifier	operands		3512366	1					
ANR	3512508	PrimaryExpression	0		3512366	1					
ANR	3512509	Identifier	reg		3512366	1					
ANR	3512510	ExpressionStatement	data [ l ++ ] = immediate	179:1:5312:5333	3512366	5	True				
ANR	3512511	AssignmentExpression	data [ l ++ ] = immediate		3512366	0		=			
ANR	3512512	ArrayIndexing	data [ l ++ ]		3512366	0					
ANR	3512513	Identifier	data		3512366	0					
ANR	3512514	PostIncDecOperationExpression	l ++		3512366	1					
ANR	3512515	Identifier	l		3512366	0					
ANR	3512516	IncDec	++		3512366	1					
ANR	3512517	Identifier	immediate		3512366	1					
ANR	3512518	IfStatement	if ( op -> operands [ 1 ] . immediate > 127 )		3512366	6					
ANR	3512519	Condition	op -> operands [ 1 ] . immediate > 127	180:5:5340:5370	3512366	0	True				
ANR	3512520	RelationalExpression	op -> operands [ 1 ] . immediate > 127		3512366	0		>			
ANR	3512521	MemberAccess	op -> operands [ 1 ] . immediate		3512366	0					
ANR	3512522	ArrayIndexing	op -> operands [ 1 ]		3512366	0					
ANR	3512523	PtrMemberAccess	op -> operands		3512366	0					
ANR	3512524	Identifier	op		3512366	0					
ANR	3512525	Identifier	operands		3512366	1					
ANR	3512526	PrimaryExpression	1		3512366	1					
ANR	3512527	Identifier	immediate		3512366	1					
ANR	3512528	PrimaryExpression	127		3512366	1					
ANR	3512529	CompoundStatement		19:38:487:487	3512366	1					
ANR	3512530	ExpressionStatement	data [ l ++ ] = immediate >> 8	181:2:5377:5403	3512366	0	True				
ANR	3512531	AssignmentExpression	data [ l ++ ] = immediate >> 8		3512366	0		=			
ANR	3512532	ArrayIndexing	data [ l ++ ]		3512366	0					
ANR	3512533	Identifier	data		3512366	0					
ANR	3512534	PostIncDecOperationExpression	l ++		3512366	1					
ANR	3512535	Identifier	l		3512366	0					
ANR	3512536	IncDec	++		3512366	1					
ANR	3512537	ShiftExpression	immediate >> 8		3512366	1		>>			
ANR	3512538	Identifier	immediate		3512366	0					
ANR	3512539	PrimaryExpression	8		3512366	1					
ANR	3512540	ReturnStatement	return l ;	184:1:5410:5418	3512366	7	True				
ANR	3512541	Identifier	l		3512366	0					
ANR	3512542	ReturnType	static int		3512366	1					
ANR	3512543	Identifier	process_16bit_group_1		3512366	2					
ANR	3512544	ParameterList	"RAsm * a , ut8 * data , const Opcode * op , int op1"		3512366	3					
ANR	3512545	Parameter	RAsm * a	162:33:4838:4844	3512366	0	True				
ANR	3512546	ParameterType	RAsm *		3512366	0					
ANR	3512547	Identifier	a		3512366	1					
ANR	3512548	Parameter	ut8 * data	162:42:4847:4855	3512366	1	True				
ANR	3512549	ParameterType	ut8 *		3512366	0					
ANR	3512550	Identifier	data		3512366	1					
ANR	3512551	Parameter	const Opcode * op	162:53:4858:4873	3512366	2	True				
ANR	3512552	ParameterType	const Opcode *		3512366	0					
ANR	3512553	Identifier	op		3512366	1					
ANR	3512554	Parameter	int op1	162:71:4876:4882	3512366	3	True				
ANR	3512555	ParameterType	int		3512366	0					
ANR	3512556	Identifier	op1		3512366	1					
ANR	3512557	CFGEntryNode	ENTRY		3512366		True				
ANR	3512558	CFGExitNode	EXIT		3512366		True				
ANR	3512559	Symbol	a		3512366						
ANR	3512560	Symbol	op		3512366						
ANR	3512561	Symbol	data		3512366						
ANR	3512562	Symbol	* op		3512366						
ANR	3512563	Symbol	X86R_AX		3512366						
ANR	3512564	Symbol	op -> operands [ 1 ] . immediate		3512366						
ANR	3512565	Symbol	l		3512366						
ANR	3512566	Symbol	* * op		3512366						
ANR	3512567	Symbol	op1		3512366						
ANR	3512568	Symbol	* op -> operands		3512366						
ANR	3512569	Symbol	immediate		3512366						
ANR	3512570	Symbol	op -> operands [ 1 ] . sign		3512366						
ANR	3512571	Symbol	op -> operands [ 0 ] . reg		3512366						
ANR	3512572	Symbol	op -> operands		3512366						
ANR	3512573	Symbol	* data		3512366						
ANR	3512574	Function	process_group_1	187:0:5423:7891							
ANR	3512575	FunctionDef	"process_group_1 (RAsm * a , ut8 * data , const Opcode * op)"		3512574	0					
ANR	3512576	CompoundStatement		187:65:5488:7891	3512574	0					
ANR	3512577	ExpressionStatement	is_valid_registers ( op )	188:1:5491:5514	3512574	0	True				
ANR	3512578	CallExpression	is_valid_registers ( op )		3512574	0					
ANR	3512579	Callee	is_valid_registers		3512574	0					
ANR	3512580	Identifier	is_valid_registers		3512574	0					
ANR	3512581	ArgumentList	op		3512574	1					
ANR	3512582	Argument	op		3512574	0					
ANR	3512583	Identifier	op		3512574	0					
ANR	3512584	IdentifierDeclStatement	int l = 0 ;	189:1:5517:5526	3512574	1	True				
ANR	3512585	IdentifierDecl	l = 0		3512574	0					
ANR	3512586	IdentifierDeclType	int		3512574	0					
ANR	3512587	Identifier	l		3512574	1					
ANR	3512588	AssignmentExpression	l = 0		3512574	2		=			
ANR	3512589	Identifier	l		3512574	0					
ANR	3512590	PrimaryExpression	0		3512574	1					
ANR	3512591	IdentifierDeclStatement	int modrm = 0 ;	190:1:5529:5542	3512574	2	True				
ANR	3512592	IdentifierDecl	modrm = 0		3512574	0					
ANR	3512593	IdentifierDeclType	int		3512574	0					
ANR	3512594	Identifier	modrm		3512574	1					
ANR	3512595	AssignmentExpression	modrm = 0		3512574	2		=			
ANR	3512596	Identifier	modrm		3512574	0					
ANR	3512597	PrimaryExpression	0		3512574	1					
ANR	3512598	IdentifierDeclStatement	int mod_byte = 0 ;	191:1:5545:5561	3512574	3	True				
ANR	3512599	IdentifierDecl	mod_byte = 0		3512574	0					
ANR	3512600	IdentifierDeclType	int		3512574	0					
ANR	3512601	Identifier	mod_byte		3512574	1					
ANR	3512602	AssignmentExpression	mod_byte = 0		3512574	2		=			
ANR	3512603	Identifier	mod_byte		3512574	0					
ANR	3512604	PrimaryExpression	0		3512574	1					
ANR	3512605	IdentifierDeclStatement	int offset = 0 ;	192:1:5564:5578	3512574	4	True				
ANR	3512606	IdentifierDecl	offset = 0		3512574	0					
ANR	3512607	IdentifierDeclType	int		3512574	0					
ANR	3512608	Identifier	offset		3512574	1					
ANR	3512609	AssignmentExpression	offset = 0		3512574	2		=			
ANR	3512610	Identifier	offset		3512574	0					
ANR	3512611	PrimaryExpression	0		3512574	1					
ANR	3512612	IdentifierDeclStatement	int mem_ref = 0 ;	193:1:5581:5596	3512574	5	True				
ANR	3512613	IdentifierDecl	mem_ref = 0		3512574	0					
ANR	3512614	IdentifierDeclType	int		3512574	0					
ANR	3512615	Identifier	mem_ref		3512574	1					
ANR	3512616	AssignmentExpression	mem_ref = 0		3512574	2		=			
ANR	3512617	Identifier	mem_ref		3512574	0					
ANR	3512618	PrimaryExpression	0		3512574	1					
ANR	3512619	IdentifierDeclStatement	st32 immediate = 0 ;	194:1:5599:5617	3512574	6	True				
ANR	3512620	IdentifierDecl	immediate = 0		3512574	0					
ANR	3512621	IdentifierDeclType	st32		3512574	0					
ANR	3512622	Identifier	immediate		3512574	1					
ANR	3512623	AssignmentExpression	immediate = 0		3512574	2		=			
ANR	3512624	Identifier	immediate		3512574	0					
ANR	3512625	PrimaryExpression	0		3512574	1					
ANR	3512626	IfStatement	if ( ! op -> operands [ 1 ] . is_good_flag )		3512574	7					
ANR	3512627	Condition	! op -> operands [ 1 ] . is_good_flag	196:5:5625:5653	3512574	0	True				
ANR	3512628	UnaryOperationExpression	! op -> operands [ 1 ] . is_good_flag		3512574	0					
ANR	3512629	UnaryOperator	!		3512574	0					
ANR	3512630	MemberAccess	op -> operands [ 1 ] . is_good_flag		3512574	1					
ANR	3512631	ArrayIndexing	op -> operands [ 1 ]		3512574	0					
ANR	3512632	PtrMemberAccess	op -> operands		3512574	0					
ANR	3512633	Identifier	op		3512574	0					
ANR	3512634	Identifier	operands		3512574	1					
ANR	3512635	PrimaryExpression	1		3512574	1					
ANR	3512636	Identifier	is_good_flag		3512574	1					
ANR	3512637	CompoundStatement		10:36:167:167	3512574	1					
ANR	3512638	ReturnStatement	return - 1 ;	197:2:5660:5669	3512574	0	True				
ANR	3512639	UnaryOperationExpression	- 1		3512574	0					
ANR	3512640	UnaryOperator	-		3512574	0					
ANR	3512641	PrimaryExpression	1		3512574	1					
ANR	3512642	IfStatement	if ( a -> bits == 64 && op -> operands [ 0 ] . type & OT_QWORD )		3512574	8					
ANR	3512643	Condition	a -> bits == 64 && op -> operands [ 0 ] . type & OT_QWORD	199:5:5679:5726	3512574	0	True				
ANR	3512644	AndExpression	a -> bits == 64 && op -> operands [ 0 ] . type & OT_QWORD		3512574	0		&&			
ANR	3512645	EqualityExpression	a -> bits == 64		3512574	0		==			
ANR	3512646	PtrMemberAccess	a -> bits		3512574	0					
ANR	3512647	Identifier	a		3512574	0					
ANR	3512648	Identifier	bits		3512574	1					
ANR	3512649	PrimaryExpression	64		3512574	1					
ANR	3512650	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		3512574	1		&			
ANR	3512651	MemberAccess	op -> operands [ 0 ] . type		3512574	0					
ANR	3512652	ArrayIndexing	op -> operands [ 0 ]		3512574	0					
ANR	3512653	PtrMemberAccess	op -> operands		3512574	0					
ANR	3512654	Identifier	op		3512574	0					
ANR	3512655	Identifier	operands		3512574	1					
ANR	3512656	PrimaryExpression	0		3512574	1					
ANR	3512657	Identifier	type		3512574	1					
ANR	3512658	Identifier	OT_QWORD		3512574	1					
ANR	3512659	CompoundStatement		13:55:240:240	3512574	1					
ANR	3512660	ExpressionStatement	data [ l ++ ] = 0x48	200:2:5733:5749	3512574	0	True				
ANR	3512661	AssignmentExpression	data [ l ++ ] = 0x48		3512574	0		=			
ANR	3512662	ArrayIndexing	data [ l ++ ]		3512574	0					
ANR	3512663	Identifier	data		3512574	0					
ANR	3512664	PostIncDecOperationExpression	l ++		3512574	1					
ANR	3512665	Identifier	l		3512574	0					
ANR	3512666	IncDec	++		3512574	1					
ANR	3512667	PrimaryExpression	0x48		3512574	1					
ANR	3512668	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""adc"" ) )"		3512574	9					
ANR	3512669	Condition	"! strcmp ( op -> mnemonic , ""adc"" )"	202:5:5759:5787	3512574	0	True				
ANR	3512670	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""adc"" )"		3512574	0					
ANR	3512671	UnaryOperator	!		3512574	0					
ANR	3512672	CallExpression	"strcmp ( op -> mnemonic , ""adc"" )"		3512574	1					
ANR	3512673	Callee	strcmp		3512574	0					
ANR	3512674	Identifier	strcmp		3512574	0					
ANR	3512675	ArgumentList	op -> mnemonic		3512574	1					
ANR	3512676	Argument	op -> mnemonic		3512574	0					
ANR	3512677	PtrMemberAccess	op -> mnemonic		3512574	0					
ANR	3512678	Identifier	op		3512574	0					
ANR	3512679	Identifier	mnemonic		3512574	1					
ANR	3512680	Argument	"""adc"""		3512574	1					
ANR	3512681	PrimaryExpression	"""adc"""		3512574	0					
ANR	3512682	CompoundStatement		16:36:301:301	3512574	1					
ANR	3512683	ExpressionStatement	modrm = 2	203:2:5794:5803	3512574	0	True				
ANR	3512684	AssignmentExpression	modrm = 2		3512574	0		=			
ANR	3512685	Identifier	modrm		3512574	0					
ANR	3512686	PrimaryExpression	2		3512574	1					
ANR	3512687	ElseStatement	else		3512574	0					
ANR	3512688	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""add"" ) )"		3512574	0					
ANR	3512689	Condition	"! strcmp ( op -> mnemonic , ""add"" )"	204:12:5817:5845	3512574	0	True				
ANR	3512690	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""add"" )"		3512574	0					
ANR	3512691	UnaryOperator	!		3512574	0					
ANR	3512692	CallExpression	"strcmp ( op -> mnemonic , ""add"" )"		3512574	1					
ANR	3512693	Callee	strcmp		3512574	0					
ANR	3512694	Identifier	strcmp		3512574	0					
ANR	3512695	ArgumentList	op -> mnemonic		3512574	1					
ANR	3512696	Argument	op -> mnemonic		3512574	0					
ANR	3512697	PtrMemberAccess	op -> mnemonic		3512574	0					
ANR	3512698	Identifier	op		3512574	0					
ANR	3512699	Identifier	mnemonic		3512574	1					
ANR	3512700	Argument	"""add"""		3512574	1					
ANR	3512701	PrimaryExpression	"""add"""		3512574	0					
ANR	3512702	CompoundStatement		18:43:359:359	3512574	1					
ANR	3512703	ExpressionStatement	modrm = 0	205:2:5852:5861	3512574	0	True				
ANR	3512704	AssignmentExpression	modrm = 0		3512574	0		=			
ANR	3512705	Identifier	modrm		3512574	0					
ANR	3512706	PrimaryExpression	0		3512574	1					
ANR	3512707	ElseStatement	else		3512574	0					
ANR	3512708	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""or"" ) )"		3512574	0					
ANR	3512709	Condition	"! strcmp ( op -> mnemonic , ""or"" )"	206:12:5875:5902	3512574	0	True				
ANR	3512710	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""or"" )"		3512574	0					
ANR	3512711	UnaryOperator	!		3512574	0					
ANR	3512712	CallExpression	"strcmp ( op -> mnemonic , ""or"" )"		3512574	1					
ANR	3512713	Callee	strcmp		3512574	0					
ANR	3512714	Identifier	strcmp		3512574	0					
ANR	3512715	ArgumentList	op -> mnemonic		3512574	1					
ANR	3512716	Argument	op -> mnemonic		3512574	0					
ANR	3512717	PtrMemberAccess	op -> mnemonic		3512574	0					
ANR	3512718	Identifier	op		3512574	0					
ANR	3512719	Identifier	mnemonic		3512574	1					
ANR	3512720	Argument	"""or"""		3512574	1					
ANR	3512721	PrimaryExpression	"""or"""		3512574	0					
ANR	3512722	CompoundStatement		20:42:416:416	3512574	1					
ANR	3512723	ExpressionStatement	modrm = 1	207:2:5909:5918	3512574	0	True				
ANR	3512724	AssignmentExpression	modrm = 1		3512574	0		=			
ANR	3512725	Identifier	modrm		3512574	0					
ANR	3512726	PrimaryExpression	1		3512574	1					
ANR	3512727	ElseStatement	else		3512574	0					
ANR	3512728	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""and"" ) )"		3512574	0					
ANR	3512729	Condition	"! strcmp ( op -> mnemonic , ""and"" )"	208:12:5932:5960	3512574	0	True				
ANR	3512730	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""and"" )"		3512574	0					
ANR	3512731	UnaryOperator	!		3512574	0					
ANR	3512732	CallExpression	"strcmp ( op -> mnemonic , ""and"" )"		3512574	1					
ANR	3512733	Callee	strcmp		3512574	0					
ANR	3512734	Identifier	strcmp		3512574	0					
ANR	3512735	ArgumentList	op -> mnemonic		3512574	1					
ANR	3512736	Argument	op -> mnemonic		3512574	0					
ANR	3512737	PtrMemberAccess	op -> mnemonic		3512574	0					
ANR	3512738	Identifier	op		3512574	0					
ANR	3512739	Identifier	mnemonic		3512574	1					
ANR	3512740	Argument	"""and"""		3512574	1					
ANR	3512741	PrimaryExpression	"""and"""		3512574	0					
ANR	3512742	CompoundStatement		22:43:474:474	3512574	1					
ANR	3512743	ExpressionStatement	modrm = 4	209:2:5967:5976	3512574	0	True				
ANR	3512744	AssignmentExpression	modrm = 4		3512574	0		=			
ANR	3512745	Identifier	modrm		3512574	0					
ANR	3512746	PrimaryExpression	4		3512574	1					
ANR	3512747	ElseStatement	else		3512574	0					
ANR	3512748	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""xor"" ) )"		3512574	0					
ANR	3512749	Condition	"! strcmp ( op -> mnemonic , ""xor"" )"	210:12:5990:6018	3512574	0	True				
ANR	3512750	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""xor"" )"		3512574	0					
ANR	3512751	UnaryOperator	!		3512574	0					
ANR	3512752	CallExpression	"strcmp ( op -> mnemonic , ""xor"" )"		3512574	1					
ANR	3512753	Callee	strcmp		3512574	0					
ANR	3512754	Identifier	strcmp		3512574	0					
ANR	3512755	ArgumentList	op -> mnemonic		3512574	1					
ANR	3512756	Argument	op -> mnemonic		3512574	0					
ANR	3512757	PtrMemberAccess	op -> mnemonic		3512574	0					
ANR	3512758	Identifier	op		3512574	0					
ANR	3512759	Identifier	mnemonic		3512574	1					
ANR	3512760	Argument	"""xor"""		3512574	1					
ANR	3512761	PrimaryExpression	"""xor"""		3512574	0					
ANR	3512762	CompoundStatement		24:43:532:532	3512574	1					
ANR	3512763	ExpressionStatement	modrm = 6	211:2:6025:6034	3512574	0	True				
ANR	3512764	AssignmentExpression	modrm = 6		3512574	0		=			
ANR	3512765	Identifier	modrm		3512574	0					
ANR	3512766	PrimaryExpression	6		3512574	1					
ANR	3512767	ElseStatement	else		3512574	0					
ANR	3512768	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""sbb"" ) )"		3512574	0					
ANR	3512769	Condition	"! strcmp ( op -> mnemonic , ""sbb"" )"	212:12:6048:6076	3512574	0	True				
ANR	3512770	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""sbb"" )"		3512574	0					
ANR	3512771	UnaryOperator	!		3512574	0					
ANR	3512772	CallExpression	"strcmp ( op -> mnemonic , ""sbb"" )"		3512574	1					
ANR	3512773	Callee	strcmp		3512574	0					
ANR	3512774	Identifier	strcmp		3512574	0					
ANR	3512775	ArgumentList	op -> mnemonic		3512574	1					
ANR	3512776	Argument	op -> mnemonic		3512574	0					
ANR	3512777	PtrMemberAccess	op -> mnemonic		3512574	0					
ANR	3512778	Identifier	op		3512574	0					
ANR	3512779	Identifier	mnemonic		3512574	1					
ANR	3512780	Argument	"""sbb"""		3512574	1					
ANR	3512781	PrimaryExpression	"""sbb"""		3512574	0					
ANR	3512782	CompoundStatement		26:43:590:590	3512574	1					
ANR	3512783	ExpressionStatement	modrm = 3	213:2:6083:6092	3512574	0	True				
ANR	3512784	AssignmentExpression	modrm = 3		3512574	0		=			
ANR	3512785	Identifier	modrm		3512574	0					
ANR	3512786	PrimaryExpression	3		3512574	1					
ANR	3512787	ElseStatement	else		3512574	0					
ANR	3512788	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""sub"" ) )"		3512574	0					
ANR	3512789	Condition	"! strcmp ( op -> mnemonic , ""sub"" )"	214:12:6106:6134	3512574	0	True				
ANR	3512790	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""sub"" )"		3512574	0					
ANR	3512791	UnaryOperator	!		3512574	0					
ANR	3512792	CallExpression	"strcmp ( op -> mnemonic , ""sub"" )"		3512574	1					
ANR	3512793	Callee	strcmp		3512574	0					
ANR	3512794	Identifier	strcmp		3512574	0					
ANR	3512795	ArgumentList	op -> mnemonic		3512574	1					
ANR	3512796	Argument	op -> mnemonic		3512574	0					
ANR	3512797	PtrMemberAccess	op -> mnemonic		3512574	0					
ANR	3512798	Identifier	op		3512574	0					
ANR	3512799	Identifier	mnemonic		3512574	1					
ANR	3512800	Argument	"""sub"""		3512574	1					
ANR	3512801	PrimaryExpression	"""sub"""		3512574	0					
ANR	3512802	CompoundStatement		28:43:648:648	3512574	1					
ANR	3512803	ExpressionStatement	modrm = 5	215:2:6141:6150	3512574	0	True				
ANR	3512804	AssignmentExpression	modrm = 5		3512574	0		=			
ANR	3512805	Identifier	modrm		3512574	0					
ANR	3512806	PrimaryExpression	5		3512574	1					
ANR	3512807	ElseStatement	else		3512574	0					
ANR	3512808	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""cmp"" ) )"		3512574	0					
ANR	3512809	Condition	"! strcmp ( op -> mnemonic , ""cmp"" )"	216:12:6164:6192	3512574	0	True				
ANR	3512810	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""cmp"" )"		3512574	0					
ANR	3512811	UnaryOperator	!		3512574	0					
ANR	3512812	CallExpression	"strcmp ( op -> mnemonic , ""cmp"" )"		3512574	1					
ANR	3512813	Callee	strcmp		3512574	0					
ANR	3512814	Identifier	strcmp		3512574	0					
ANR	3512815	ArgumentList	op -> mnemonic		3512574	1					
ANR	3512816	Argument	op -> mnemonic		3512574	0					
ANR	3512817	PtrMemberAccess	op -> mnemonic		3512574	0					
ANR	3512818	Identifier	op		3512574	0					
ANR	3512819	Identifier	mnemonic		3512574	1					
ANR	3512820	Argument	"""cmp"""		3512574	1					
ANR	3512821	PrimaryExpression	"""cmp"""		3512574	0					
ANR	3512822	CompoundStatement		30:43:706:706	3512574	1					
ANR	3512823	ExpressionStatement	modrm = 7	217:2:6199:6208	3512574	0	True				
ANR	3512824	AssignmentExpression	modrm = 7		3512574	0		=			
ANR	3512825	Identifier	modrm		3512574	0					
ANR	3512826	PrimaryExpression	7		3512574	1					
ANR	3512827	ExpressionStatement	immediate = op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign	219:1:6214:6274	3512574	10	True				
ANR	3512828	AssignmentExpression	immediate = op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign		3512574	0		=			
ANR	3512829	Identifier	immediate		3512574	0					
ANR	3512830	MultiplicativeExpression	op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign		3512574	1		*			
ANR	3512831	MemberAccess	op -> operands [ 1 ] . immediate		3512574	0					
ANR	3512832	ArrayIndexing	op -> operands [ 1 ]		3512574	0					
ANR	3512833	PtrMemberAccess	op -> operands		3512574	0					
ANR	3512834	Identifier	op		3512574	0					
ANR	3512835	Identifier	operands		3512574	1					
ANR	3512836	PrimaryExpression	1		3512574	1					
ANR	3512837	Identifier	immediate		3512574	1					
ANR	3512838	MemberAccess	op -> operands [ 1 ] . sign		3512574	1					
ANR	3512839	ArrayIndexing	op -> operands [ 1 ]		3512574	0					
ANR	3512840	PtrMemberAccess	op -> operands		3512574	0					
ANR	3512841	Identifier	op		3512574	0					
ANR	3512842	Identifier	operands		3512574	1					
ANR	3512843	PrimaryExpression	1		3512574	1					
ANR	3512844	Identifier	sign		3512574	1					
ANR	3512845	IfStatement	if ( op -> operands [ 0 ] . type & OT_DWORD || op -> operands [ 0 ] . type & OT_QWORD )		3512574	11					
ANR	3512846	Condition	op -> operands [ 0 ] . type & OT_DWORD || op -> operands [ 0 ] . type & OT_QWORD	221:5:6282:6349	3512574	0	True				
ANR	3512847	OrExpression	op -> operands [ 0 ] . type & OT_DWORD || op -> operands [ 0 ] . type & OT_QWORD		3512574	0		||			
ANR	3512848	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		3512574	0		&			
ANR	3512849	MemberAccess	op -> operands [ 0 ] . type		3512574	0					
ANR	3512850	ArrayIndexing	op -> operands [ 0 ]		3512574	0					
ANR	3512851	PtrMemberAccess	op -> operands		3512574	0					
ANR	3512852	Identifier	op		3512574	0					
ANR	3512853	Identifier	operands		3512574	1					
ANR	3512854	PrimaryExpression	0		3512574	1					
ANR	3512855	Identifier	type		3512574	1					
ANR	3512856	Identifier	OT_DWORD		3512574	1					
ANR	3512857	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		3512574	1		&			
ANR	3512858	MemberAccess	op -> operands [ 0 ] . type		3512574	0					
ANR	3512859	ArrayIndexing	op -> operands [ 0 ]		3512574	0					
ANR	3512860	PtrMemberAccess	op -> operands		3512574	0					
ANR	3512861	Identifier	op		3512574	0					
ANR	3512862	Identifier	operands		3512574	1					
ANR	3512863	PrimaryExpression	0		3512574	1					
ANR	3512864	Identifier	type		3512574	1					
ANR	3512865	Identifier	OT_QWORD		3512574	1					
ANR	3512866	CompoundStatement		36:35:863:863	3512574	1					
ANR	3512867	IfStatement	if ( op -> operands [ 1 ] . immediate < 128 )		3512574	0					
ANR	3512868	Condition	op -> operands [ 1 ] . immediate < 128	223:6:6360:6390	3512574	0	True				
ANR	3512869	RelationalExpression	op -> operands [ 1 ] . immediate < 128		3512574	0		<			
ANR	3512870	MemberAccess	op -> operands [ 1 ] . immediate		3512574	0					
ANR	3512871	ArrayIndexing	op -> operands [ 1 ]		3512574	0					
ANR	3512872	PtrMemberAccess	op -> operands		3512574	0					
ANR	3512873	Identifier	op		3512574	0					
ANR	3512874	Identifier	operands		3512574	1					
ANR	3512875	PrimaryExpression	1		3512574	1					
ANR	3512876	Identifier	immediate		3512574	1					
ANR	3512877	PrimaryExpression	128		3512574	1					
ANR	3512878	CompoundStatement		37:39:904:904	3512574	1					
ANR	3512879	ExpressionStatement	data [ l ++ ] = 0x83	224:3:6398:6414	3512574	0	True				
ANR	3512880	AssignmentExpression	data [ l ++ ] = 0x83		3512574	0		=			
ANR	3512881	ArrayIndexing	data [ l ++ ]		3512574	0					
ANR	3512882	Identifier	data		3512574	0					
ANR	3512883	PostIncDecOperationExpression	l ++		3512574	1					
ANR	3512884	Identifier	l		3512574	0					
ANR	3512885	IncDec	++		3512574	1					
ANR	3512886	PrimaryExpression	0x83		3512574	1					
ANR	3512887	ElseStatement	else		3512574	0					
ANR	3512888	IfStatement	if ( op -> operands [ 0 ] . reg != X86R_EAX || op -> operands [ 0 ] . type & OT_MEMORY )		3512574	0					
ANR	3512889	Condition	op -> operands [ 0 ] . reg != X86R_EAX || op -> operands [ 0 ] . type & OT_MEMORY	225:13:6429:6508	3512574	0	True				
ANR	3512890	OrExpression	op -> operands [ 0 ] . reg != X86R_EAX || op -> operands [ 0 ] . type & OT_MEMORY		3512574	0		||			
ANR	3512891	EqualityExpression	op -> operands [ 0 ] . reg != X86R_EAX		3512574	0		!=			
ANR	3512892	MemberAccess	op -> operands [ 0 ] . reg		3512574	0					
ANR	3512893	ArrayIndexing	op -> operands [ 0 ]		3512574	0					
ANR	3512894	PtrMemberAccess	op -> operands		3512574	0					
ANR	3512895	Identifier	op		3512574	0					
ANR	3512896	Identifier	operands		3512574	1					
ANR	3512897	PrimaryExpression	0		3512574	1					
ANR	3512898	Identifier	reg		3512574	1					
ANR	3512899	Identifier	X86R_EAX		3512574	1					
ANR	3512900	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3512574	1		&			
ANR	3512901	MemberAccess	op -> operands [ 0 ] . type		3512574	0					
ANR	3512902	ArrayIndexing	op -> operands [ 0 ]		3512574	0					
ANR	3512903	PtrMemberAccess	op -> operands		3512574	0					
ANR	3512904	Identifier	op		3512574	0					
ANR	3512905	Identifier	operands		3512574	1					
ANR	3512906	PrimaryExpression	0		3512574	1					
ANR	3512907	Identifier	type		3512574	1					
ANR	3512908	Identifier	OT_MEMORY		3512574	1					
ANR	3512909	CompoundStatement		40:47:1022:1022	3512574	1					
ANR	3512910	ExpressionStatement	data [ l ++ ] = 0x81	227:3:6516:6532	3512574	0	True				
ANR	3512911	AssignmentExpression	data [ l ++ ] = 0x81		3512574	0		=			
ANR	3512912	ArrayIndexing	data [ l ++ ]		3512574	0					
ANR	3512913	Identifier	data		3512574	0					
ANR	3512914	PostIncDecOperationExpression	l ++		3512574	1					
ANR	3512915	Identifier	l		3512574	0					
ANR	3512916	IncDec	++		3512574	1					
ANR	3512917	PrimaryExpression	0x81		3512574	1					
ANR	3512918	ElseStatement	else		3512574	0					
ANR	3512919	IfStatement	if ( op -> operands [ 0 ] . type & OT_BYTE )		3512574	0					
ANR	3512920	Condition	op -> operands [ 0 ] . type & OT_BYTE	229:12:6550:6579	3512574	0	True				
ANR	3512921	BitAndExpression	op -> operands [ 0 ] . type & OT_BYTE		3512574	0		&			
ANR	3512922	MemberAccess	op -> operands [ 0 ] . type		3512574	0					
ANR	3512923	ArrayIndexing	op -> operands [ 0 ]		3512574	0					
ANR	3512924	PtrMemberAccess	op -> operands		3512574	0					
ANR	3512925	Identifier	op		3512574	0					
ANR	3512926	Identifier	operands		3512574	1					
ANR	3512927	PrimaryExpression	0		3512574	1					
ANR	3512928	Identifier	type		3512574	1					
ANR	3512929	Identifier	OT_BYTE		3512574	1					
ANR	3512930	CompoundStatement		43:44:1093:1093	3512574	1					
ANR	3512931	IfStatement	if ( op -> operands [ 1 ] . immediate > 255 )		3512574	0					
ANR	3512932	Condition	op -> operands [ 1 ] . immediate > 255	230:6:6590:6620	3512574	0	True				
ANR	3512933	RelationalExpression	op -> operands [ 1 ] . immediate > 255		3512574	0		>			
ANR	3512934	MemberAccess	op -> operands [ 1 ] . immediate		3512574	0					
ANR	3512935	ArrayIndexing	op -> operands [ 1 ]		3512574	0					
ANR	3512936	PtrMemberAccess	op -> operands		3512574	0					
ANR	3512937	Identifier	op		3512574	0					
ANR	3512938	Identifier	operands		3512574	1					
ANR	3512939	PrimaryExpression	1		3512574	1					
ANR	3512940	Identifier	immediate		3512574	1					
ANR	3512941	PrimaryExpression	255		3512574	1					
ANR	3512942	CompoundStatement		44:39:1134:1134	3512574	1					
ANR	3512943	ExpressionStatement	"eprintf ( ""Error: Immediate exceeds bounds\\n"" )"	231:3:6628:6673	3512574	0	True				
ANR	3512944	CallExpression	"eprintf ( ""Error: Immediate exceeds bounds\\n"" )"		3512574	0					
ANR	3512945	Callee	eprintf		3512574	0					
ANR	3512946	Identifier	eprintf		3512574	0					
ANR	3512947	ArgumentList	"""Error: Immediate exceeds bounds\\n"""		3512574	1					
ANR	3512948	Argument	"""Error: Immediate exceeds bounds\\n"""		3512574	0					
ANR	3512949	PrimaryExpression	"""Error: Immediate exceeds bounds\\n"""		3512574	0					
ANR	3512950	ReturnStatement	return - 1 ;	232:3:6678:6687	3512574	1	True				
ANR	3512951	UnaryOperationExpression	- 1		3512574	0					
ANR	3512952	UnaryOperator	-		3512574	0					
ANR	3512953	PrimaryExpression	1		3512574	1					
ANR	3512954	ExpressionStatement	data [ l ++ ] = 0x80	234:2:6695:6711	3512574	1	True				
ANR	3512955	AssignmentExpression	data [ l ++ ] = 0x80		3512574	0		=			
ANR	3512956	ArrayIndexing	data [ l ++ ]		3512574	0					
ANR	3512957	Identifier	data		3512574	0					
ANR	3512958	PostIncDecOperationExpression	l ++		3512574	1					
ANR	3512959	Identifier	l		3512574	0					
ANR	3512960	IncDec	++		3512574	1					
ANR	3512961	PrimaryExpression	0x80		3512574	1					
ANR	3512962	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3512574	12					
ANR	3512963	Condition	op -> operands [ 0 ] . type & OT_MEMORY	236:5:6721:6752	3512574	0	True				
ANR	3512964	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3512574	0		&			
ANR	3512965	MemberAccess	op -> operands [ 0 ] . type		3512574	0					
ANR	3512966	ArrayIndexing	op -> operands [ 0 ]		3512574	0					
ANR	3512967	PtrMemberAccess	op -> operands		3512574	0					
ANR	3512968	Identifier	op		3512574	0					
ANR	3512969	Identifier	operands		3512574	1					
ANR	3512970	PrimaryExpression	0		3512574	1					
ANR	3512971	Identifier	type		3512574	1					
ANR	3512972	Identifier	OT_MEMORY		3512574	1					
ANR	3512973	CompoundStatement		58:2:1494:1528	3512574	1					
ANR	3512974	ExpressionStatement	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign	237:2:6759:6820	3512574	0	True				
ANR	3512975	AssignmentExpression	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		3512574	0		=			
ANR	3512976	Identifier	offset		3512574	0					
ANR	3512977	MultiplicativeExpression	op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		3512574	1		*			
ANR	3512978	MemberAccess	op -> operands [ 0 ] . offset		3512574	0					
ANR	3512979	ArrayIndexing	op -> operands [ 0 ]		3512574	0					
ANR	3512980	PtrMemberAccess	op -> operands		3512574	0					
ANR	3512981	Identifier	op		3512574	0					
ANR	3512982	Identifier	operands		3512574	1					
ANR	3512983	PrimaryExpression	0		3512574	1					
ANR	3512984	Identifier	offset		3512574	1					
ANR	3512985	MemberAccess	op -> operands [ 0 ] . offset_sign		3512574	1					
ANR	3512986	ArrayIndexing	op -> operands [ 0 ]		3512574	0					
ANR	3512987	PtrMemberAccess	op -> operands		3512574	0					
ANR	3512988	Identifier	op		3512574	0					
ANR	3512989	Identifier	operands		3512574	1					
ANR	3512990	PrimaryExpression	0		3512574	1					
ANR	3512991	Identifier	offset_sign		3512574	1					
ANR	3512992	IfStatement	if ( op -> operands [ 0 ] . offset || op -> operands [ 0 ] . regs [ 0 ] == X86R_EBP )		3512574	1					
ANR	3512993	Condition	op -> operands [ 0 ] . offset || op -> operands [ 0 ] . regs [ 0 ] == X86R_EBP	238:6:6828:6888	3512574	0	True				
ANR	3512994	OrExpression	op -> operands [ 0 ] . offset || op -> operands [ 0 ] . regs [ 0 ] == X86R_EBP		3512574	0		||			
ANR	3512995	MemberAccess	op -> operands [ 0 ] . offset		3512574	0					
ANR	3512996	ArrayIndexing	op -> operands [ 0 ]		3512574	0					
ANR	3512997	PtrMemberAccess	op -> operands		3512574	0					
ANR	3512998	Identifier	op		3512574	0					
ANR	3512999	Identifier	operands		3512574	1					
ANR	3513000	PrimaryExpression	0		3512574	1					
ANR	3513001	Identifier	offset		3512574	1					
ANR	3513002	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_EBP		3512574	1		==			
ANR	3513003	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3512574	0					
ANR	3513004	MemberAccess	op -> operands [ 0 ] . regs		3512574	0					
ANR	3513005	ArrayIndexing	op -> operands [ 0 ]		3512574	0					
ANR	3513006	PtrMemberAccess	op -> operands		3512574	0					
ANR	3513007	Identifier	op		3512574	0					
ANR	3513008	Identifier	operands		3512574	1					
ANR	3513009	PrimaryExpression	0		3512574	1					
ANR	3513010	Identifier	regs		3512574	1					
ANR	3513011	PrimaryExpression	0		3512574	1					
ANR	3513012	Identifier	X86R_EBP		3512574	1					
ANR	3513013	CompoundStatement		52:69:1402:1402	3512574	1					
ANR	3513014	ExpressionStatement	mod_byte = 1	239:3:6896:6908	3512574	0	True				
ANR	3513015	AssignmentExpression	mod_byte = 1		3512574	0		=			
ANR	3513016	Identifier	mod_byte		3512574	0					
ANR	3513017	PrimaryExpression	1		3512574	1					
ANR	3513018	IfStatement	if ( offset < ST8_MIN || offset > ST8_MAX )		3512574	2					
ANR	3513019	Condition	offset < ST8_MIN || offset > ST8_MAX	241:6:6920:6955	3512574	0	True				
ANR	3513020	OrExpression	offset < ST8_MIN || offset > ST8_MAX		3512574	0		||			
ANR	3513021	RelationalExpression	offset < ST8_MIN		3512574	0		<			
ANR	3513022	Identifier	offset		3512574	0					
ANR	3513023	Identifier	ST8_MIN		3512574	1					
ANR	3513024	RelationalExpression	offset > ST8_MAX		3512574	1		>			
ANR	3513025	Identifier	offset		3512574	0					
ANR	3513026	Identifier	ST8_MAX		3512574	1					
ANR	3513027	CompoundStatement		55:44:1469:1469	3512574	1					
ANR	3513028	ExpressionStatement	mod_byte = 2	242:3:6963:6975	3512574	0	True				
ANR	3513029	AssignmentExpression	mod_byte = 2		3512574	0		=			
ANR	3513030	Identifier	mod_byte		3512574	0					
ANR	3513031	PrimaryExpression	2		3512574	1					
ANR	3513032	IdentifierDeclStatement	int reg0 = op -> operands [ 0 ] . regs [ 0 ] ;	244:2:6983:7017	3512574	3	True				
ANR	3513033	IdentifierDecl	reg0 = op -> operands [ 0 ] . regs [ 0 ]		3512574	0					
ANR	3513034	IdentifierDeclType	int		3512574	0					
ANR	3513035	Identifier	reg0		3512574	1					
ANR	3513036	AssignmentExpression	reg0 = op -> operands [ 0 ] . regs [ 0 ]		3512574	2		=			
ANR	3513037	Identifier	reg0		3512574	0					
ANR	3513038	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3512574	1					
ANR	3513039	MemberAccess	op -> operands [ 0 ] . regs		3512574	0					
ANR	3513040	ArrayIndexing	op -> operands [ 0 ]		3512574	0					
ANR	3513041	PtrMemberAccess	op -> operands		3512574	0					
ANR	3513042	Identifier	op		3512574	0					
ANR	3513043	Identifier	operands		3512574	1					
ANR	3513044	PrimaryExpression	0		3512574	1					
ANR	3513045	Identifier	regs		3512574	1					
ANR	3513046	PrimaryExpression	0		3512574	1					
ANR	3513047	IfStatement	if ( reg0 == - 1 )		3512574	4					
ANR	3513048	Condition	reg0 == - 1	245:6:7025:7034	3512574	0	True				
ANR	3513049	EqualityExpression	reg0 == - 1		3512574	0		==			
ANR	3513050	Identifier	reg0		3512574	0					
ANR	3513051	UnaryOperationExpression	- 1		3512574	1					
ANR	3513052	UnaryOperator	-		3512574	0					
ANR	3513053	PrimaryExpression	1		3512574	1					
ANR	3513054	CompoundStatement		59:18:1548:1548	3512574	1					
ANR	3513055	ExpressionStatement	mem_ref = 1	246:3:7042:7053	3512574	0	True				
ANR	3513056	AssignmentExpression	mem_ref = 1		3512574	0		=			
ANR	3513057	Identifier	mem_ref		3512574	0					
ANR	3513058	PrimaryExpression	1		3512574	1					
ANR	3513059	ExpressionStatement	reg0 = 5	247:3:7058:7066	3512574	1	True				
ANR	3513060	AssignmentExpression	reg0 = 5		3512574	0		=			
ANR	3513061	Identifier	reg0		3512574	0					
ANR	3513062	PrimaryExpression	5		3512574	1					
ANR	3513063	ExpressionStatement	mod_byte = 0	248:3:7071:7083	3512574	2	True				
ANR	3513064	AssignmentExpression	mod_byte = 0		3512574	0		=			
ANR	3513065	Identifier	mod_byte		3512574	0					
ANR	3513066	PrimaryExpression	0		3512574	1					
ANR	3513067	ExpressionStatement	data [ l ++ ] = mod_byte << 6 | modrm << 3 | reg0	250:2:7091:7136	3512574	5	True				
ANR	3513068	AssignmentExpression	data [ l ++ ] = mod_byte << 6 | modrm << 3 | reg0		3512574	0		=			
ANR	3513069	ArrayIndexing	data [ l ++ ]		3512574	0					
ANR	3513070	Identifier	data		3512574	0					
ANR	3513071	PostIncDecOperationExpression	l ++		3512574	1					
ANR	3513072	Identifier	l		3512574	0					
ANR	3513073	IncDec	++		3512574	1					
ANR	3513074	InclusiveOrExpression	mod_byte << 6 | modrm << 3 | reg0		3512574	1		|			
ANR	3513075	ShiftExpression	mod_byte << 6		3512574	0		<<			
ANR	3513076	Identifier	mod_byte		3512574	0					
ANR	3513077	PrimaryExpression	6		3512574	1					
ANR	3513078	InclusiveOrExpression	modrm << 3 | reg0		3512574	1		|			
ANR	3513079	ShiftExpression	modrm << 3		3512574	0		<<			
ANR	3513080	Identifier	modrm		3512574	0					
ANR	3513081	PrimaryExpression	3		3512574	1					
ANR	3513082	Identifier	reg0		3512574	1					
ANR	3513083	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP )		3512574	6					
ANR	3513084	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP	251:6:7144:7178	3512574	0	True				
ANR	3513085	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP		3512574	0		==			
ANR	3513086	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3512574	0					
ANR	3513087	MemberAccess	op -> operands [ 0 ] . regs		3512574	0					
ANR	3513088	ArrayIndexing	op -> operands [ 0 ]		3512574	0					
ANR	3513089	PtrMemberAccess	op -> operands		3512574	0					
ANR	3513090	Identifier	op		3512574	0					
ANR	3513091	Identifier	operands		3512574	1					
ANR	3513092	PrimaryExpression	0		3512574	1					
ANR	3513093	Identifier	regs		3512574	1					
ANR	3513094	PrimaryExpression	0		3512574	1					
ANR	3513095	Identifier	X86R_ESP		3512574	1					
ANR	3513096	CompoundStatement		65:43:1692:1692	3512574	1					
ANR	3513097	ExpressionStatement	data [ l ++ ] = 0x24	252:3:7186:7202	3512574	0	True				
ANR	3513098	AssignmentExpression	data [ l ++ ] = 0x24		3512574	0		=			
ANR	3513099	ArrayIndexing	data [ l ++ ]		3512574	0					
ANR	3513100	Identifier	data		3512574	0					
ANR	3513101	PostIncDecOperationExpression	l ++		3512574	1					
ANR	3513102	Identifier	l		3512574	0					
ANR	3513103	IncDec	++		3512574	1					
ANR	3513104	PrimaryExpression	0x24		3512574	1					
ANR	3513105	IfStatement	if ( mod_byte || mem_ref )		3512574	7					
ANR	3513106	Condition	mod_byte || mem_ref	254:6:7214:7232	3512574	0	True				
ANR	3513107	OrExpression	mod_byte || mem_ref		3512574	0		||			
ANR	3513108	Identifier	mod_byte		3512574	0					
ANR	3513109	Identifier	mem_ref		3512574	1					
ANR	3513110	CompoundStatement		68:27:1746:1746	3512574	1					
ANR	3513111	ExpressionStatement	data [ l ++ ] = offset	255:3:7240:7258	3512574	0	True				
ANR	3513112	AssignmentExpression	data [ l ++ ] = offset		3512574	0		=			
ANR	3513113	ArrayIndexing	data [ l ++ ]		3512574	0					
ANR	3513114	Identifier	data		3512574	0					
ANR	3513115	PostIncDecOperationExpression	l ++		3512574	1					
ANR	3513116	Identifier	l		3512574	0					
ANR	3513117	IncDec	++		3512574	1					
ANR	3513118	Identifier	offset		3512574	1					
ANR	3513119	IfStatement	if ( mod_byte == 2 || mem_ref )		3512574	1					
ANR	3513120	Condition	mod_byte == 2 || mem_ref	256:7:7267:7290	3512574	0	True				
ANR	3513121	OrExpression	mod_byte == 2 || mem_ref		3512574	0		||			
ANR	3513122	EqualityExpression	mod_byte == 2		3512574	0		==			
ANR	3513123	Identifier	mod_byte		3512574	0					
ANR	3513124	PrimaryExpression	2		3512574	1					
ANR	3513125	Identifier	mem_ref		3512574	1					
ANR	3513126	CompoundStatement		70:33:1804:1804	3512574	1					
ANR	3513127	ExpressionStatement	data [ l ++ ] = offset >> 8	257:4:7299:7322	3512574	0	True				
ANR	3513128	AssignmentExpression	data [ l ++ ] = offset >> 8		3512574	0		=			
ANR	3513129	ArrayIndexing	data [ l ++ ]		3512574	0					
ANR	3513130	Identifier	data		3512574	0					
ANR	3513131	PostIncDecOperationExpression	l ++		3512574	1					
ANR	3513132	Identifier	l		3512574	0					
ANR	3513133	IncDec	++		3512574	1					
ANR	3513134	ShiftExpression	offset >> 8		3512574	1		>>			
ANR	3513135	Identifier	offset		3512574	0					
ANR	3513136	PrimaryExpression	8		3512574	1					
ANR	3513137	ExpressionStatement	data [ l ++ ] = offset >> 16	258:4:7328:7352	3512574	1	True				
ANR	3513138	AssignmentExpression	data [ l ++ ] = offset >> 16		3512574	0		=			
ANR	3513139	ArrayIndexing	data [ l ++ ]		3512574	0					
ANR	3513140	Identifier	data		3512574	0					
ANR	3513141	PostIncDecOperationExpression	l ++		3512574	1					
ANR	3513142	Identifier	l		3512574	0					
ANR	3513143	IncDec	++		3512574	1					
ANR	3513144	ShiftExpression	offset >> 16		3512574	1		>>			
ANR	3513145	Identifier	offset		3512574	0					
ANR	3513146	PrimaryExpression	16		3512574	1					
ANR	3513147	ExpressionStatement	data [ l ++ ] = offset >> 24	259:4:7358:7382	3512574	2	True				
ANR	3513148	AssignmentExpression	data [ l ++ ] = offset >> 24		3512574	0		=			
ANR	3513149	ArrayIndexing	data [ l ++ ]		3512574	0					
ANR	3513150	Identifier	data		3512574	0					
ANR	3513151	PostIncDecOperationExpression	l ++		3512574	1					
ANR	3513152	Identifier	l		3512574	0					
ANR	3513153	IncDec	++		3512574	1					
ANR	3513154	ShiftExpression	offset >> 24		3512574	1		>>			
ANR	3513155	Identifier	offset		3512574	0					
ANR	3513156	PrimaryExpression	24		3512574	1					
ANR	3513157	ElseStatement	else		3512574	0					
ANR	3513158	CompoundStatement		76:8:1912:1912	3512574	0					
ANR	3513159	IfStatement	if ( op -> operands [ 1 ] . immediate > 127 && op -> operands [ 0 ] . reg == X86R_EAX )		3512574	0					
ANR	3513160	Condition	op -> operands [ 1 ] . immediate > 127 && op -> operands [ 0 ] . reg == X86R_EAX	263:6:7409:7474	3512574	0	True				
ANR	3513161	AndExpression	op -> operands [ 1 ] . immediate > 127 && op -> operands [ 0 ] . reg == X86R_EAX		3512574	0		&&			
ANR	3513162	RelationalExpression	op -> operands [ 1 ] . immediate > 127		3512574	0		>			
ANR	3513163	MemberAccess	op -> operands [ 1 ] . immediate		3512574	0					
ANR	3513164	ArrayIndexing	op -> operands [ 1 ]		3512574	0					
ANR	3513165	PtrMemberAccess	op -> operands		3512574	0					
ANR	3513166	Identifier	op		3512574	0					
ANR	3513167	Identifier	operands		3512574	1					
ANR	3513168	PrimaryExpression	1		3512574	1					
ANR	3513169	Identifier	immediate		3512574	1					
ANR	3513170	PrimaryExpression	127		3512574	1					
ANR	3513171	EqualityExpression	op -> operands [ 0 ] . reg == X86R_EAX		3512574	1		==			
ANR	3513172	MemberAccess	op -> operands [ 0 ] . reg		3512574	0					
ANR	3513173	ArrayIndexing	op -> operands [ 0 ]		3512574	0					
ANR	3513174	PtrMemberAccess	op -> operands		3512574	0					
ANR	3513175	Identifier	op		3512574	0					
ANR	3513176	Identifier	operands		3512574	1					
ANR	3513177	PrimaryExpression	0		3512574	1					
ANR	3513178	Identifier	reg		3512574	1					
ANR	3513179	Identifier	X86R_EAX		3512574	1					
ANR	3513180	CompoundStatement		77:74:1988:1988	3512574	1					
ANR	3513181	ExpressionStatement	data [ l ++ ] = 5 | modrm << 3 | op -> operands [ 0 ] . reg	264:3:7482:7530	3512574	0	True				
ANR	3513182	AssignmentExpression	data [ l ++ ] = 5 | modrm << 3 | op -> operands [ 0 ] . reg		3512574	0		=			
ANR	3513183	ArrayIndexing	data [ l ++ ]		3512574	0					
ANR	3513184	Identifier	data		3512574	0					
ANR	3513185	PostIncDecOperationExpression	l ++		3512574	1					
ANR	3513186	Identifier	l		3512574	0					
ANR	3513187	IncDec	++		3512574	1					
ANR	3513188	InclusiveOrExpression	5 | modrm << 3 | op -> operands [ 0 ] . reg		3512574	1		|			
ANR	3513189	PrimaryExpression	5		3512574	0					
ANR	3513190	InclusiveOrExpression	modrm << 3 | op -> operands [ 0 ] . reg		3512574	1		|			
ANR	3513191	ShiftExpression	modrm << 3		3512574	0		<<			
ANR	3513192	Identifier	modrm		3512574	0					
ANR	3513193	PrimaryExpression	3		3512574	1					
ANR	3513194	MemberAccess	op -> operands [ 0 ] . reg		3512574	1					
ANR	3513195	ArrayIndexing	op -> operands [ 0 ]		3512574	0					
ANR	3513196	PtrMemberAccess	op -> operands		3512574	0					
ANR	3513197	Identifier	op		3512574	0					
ANR	3513198	Identifier	operands		3512574	1					
ANR	3513199	PrimaryExpression	0		3512574	1					
ANR	3513200	Identifier	reg		3512574	1					
ANR	3513201	ElseStatement	else		3512574	0					
ANR	3513202	CompoundStatement		79:9:2052:2052	3512574	0					
ANR	3513203	ExpressionStatement	mod_byte = 3	266:3:7546:7558	3512574	0	True				
ANR	3513204	AssignmentExpression	mod_byte = 3		3512574	0		=			
ANR	3513205	Identifier	mod_byte		3512574	0					
ANR	3513206	PrimaryExpression	3		3512574	1					
ANR	3513207	ExpressionStatement	data [ l ++ ] = mod_byte << 6 | modrm << 3 | op -> operands [ 0 ] . reg	267:3:7563:7623	3512574	1	True				
ANR	3513208	AssignmentExpression	data [ l ++ ] = mod_byte << 6 | modrm << 3 | op -> operands [ 0 ] . reg		3512574	0		=			
ANR	3513209	ArrayIndexing	data [ l ++ ]		3512574	0					
ANR	3513210	Identifier	data		3512574	0					
ANR	3513211	PostIncDecOperationExpression	l ++		3512574	1					
ANR	3513212	Identifier	l		3512574	0					
ANR	3513213	IncDec	++		3512574	1					
ANR	3513214	InclusiveOrExpression	mod_byte << 6 | modrm << 3 | op -> operands [ 0 ] . reg		3512574	1		|			
ANR	3513215	ShiftExpression	mod_byte << 6		3512574	0		<<			
ANR	3513216	Identifier	mod_byte		3512574	0					
ANR	3513217	PrimaryExpression	6		3512574	1					
ANR	3513218	InclusiveOrExpression	modrm << 3 | op -> operands [ 0 ] . reg		3512574	1		|			
ANR	3513219	ShiftExpression	modrm << 3		3512574	0		<<			
ANR	3513220	Identifier	modrm		3512574	0					
ANR	3513221	PrimaryExpression	3		3512574	1					
ANR	3513222	MemberAccess	op -> operands [ 0 ] . reg		3512574	1					
ANR	3513223	ArrayIndexing	op -> operands [ 0 ]		3512574	0					
ANR	3513224	PtrMemberAccess	op -> operands		3512574	0					
ANR	3513225	Identifier	op		3512574	0					
ANR	3513226	Identifier	operands		3512574	1					
ANR	3513227	PrimaryExpression	0		3512574	1					
ANR	3513228	Identifier	reg		3512574	1					
ANR	3513229	ExpressionStatement	data [ l ++ ] = immediate	272:1:7635:7656	3512574	13	True				
ANR	3513230	AssignmentExpression	data [ l ++ ] = immediate		3512574	0		=			
ANR	3513231	ArrayIndexing	data [ l ++ ]		3512574	0					
ANR	3513232	Identifier	data		3512574	0					
ANR	3513233	PostIncDecOperationExpression	l ++		3512574	1					
ANR	3513234	Identifier	l		3512574	0					
ANR	3513235	IncDec	++		3512574	1					
ANR	3513236	Identifier	immediate		3512574	1					
ANR	3513237	IfStatement	if ( ( immediate > 127 || immediate < - 128 ) && ( ( op -> operands [ 0 ] . type & OT_DWORD ) || ( op -> operands [ 0 ] . type & OT_QWORD ) ) )		3512574	14					
ANR	3513238	Condition	( immediate > 127 || immediate < - 128 ) && ( ( op -> operands [ 0 ] . type & OT_DWORD ) || ( op -> operands [ 0 ] . type & OT_QWORD ) )	273:5:7663:7780	3512574	0	True				
ANR	3513239	AndExpression	( immediate > 127 || immediate < - 128 ) && ( ( op -> operands [ 0 ] . type & OT_DWORD ) || ( op -> operands [ 0 ] . type & OT_QWORD ) )		3512574	0		&&			
ANR	3513240	OrExpression	immediate > 127 || immediate < - 128		3512574	0		||			
ANR	3513241	RelationalExpression	immediate > 127		3512574	0		>			
ANR	3513242	Identifier	immediate		3512574	0					
ANR	3513243	PrimaryExpression	127		3512574	1					
ANR	3513244	RelationalExpression	immediate < - 128		3512574	1		<			
ANR	3513245	Identifier	immediate		3512574	0					
ANR	3513246	UnaryOperationExpression	- 128		3512574	1					
ANR	3513247	UnaryOperator	-		3512574	0					
ANR	3513248	PrimaryExpression	128		3512574	1					
ANR	3513249	OrExpression	( op -> operands [ 0 ] . type & OT_DWORD ) || ( op -> operands [ 0 ] . type & OT_QWORD )		3512574	1		||			
ANR	3513250	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		3512574	0		&			
ANR	3513251	MemberAccess	op -> operands [ 0 ] . type		3512574	0					
ANR	3513252	ArrayIndexing	op -> operands [ 0 ]		3512574	0					
ANR	3513253	PtrMemberAccess	op -> operands		3512574	0					
ANR	3513254	Identifier	op		3512574	0					
ANR	3513255	Identifier	operands		3512574	1					
ANR	3513256	PrimaryExpression	0		3512574	1					
ANR	3513257	Identifier	type		3512574	1					
ANR	3513258	Identifier	OT_DWORD		3512574	1					
ANR	3513259	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		3512574	1		&			
ANR	3513260	MemberAccess	op -> operands [ 0 ] . type		3512574	0					
ANR	3513261	ArrayIndexing	op -> operands [ 0 ]		3512574	0					
ANR	3513262	PtrMemberAccess	op -> operands		3512574	0					
ANR	3513263	Identifier	op		3512574	0					
ANR	3513264	Identifier	operands		3512574	1					
ANR	3513265	PrimaryExpression	0		3512574	1					
ANR	3513266	Identifier	type		3512574	1					
ANR	3513267	Identifier	OT_QWORD		3512574	1					
ANR	3513268	CompoundStatement		88:79:2294:2294	3512574	1					
ANR	3513269	ExpressionStatement	data [ l ++ ] = immediate >> 8	275:2:7787:7813	3512574	0	True				
ANR	3513270	AssignmentExpression	data [ l ++ ] = immediate >> 8		3512574	0		=			
ANR	3513271	ArrayIndexing	data [ l ++ ]		3512574	0					
ANR	3513272	Identifier	data		3512574	0					
ANR	3513273	PostIncDecOperationExpression	l ++		3512574	1					
ANR	3513274	Identifier	l		3512574	0					
ANR	3513275	IncDec	++		3512574	1					
ANR	3513276	ShiftExpression	immediate >> 8		3512574	1		>>			
ANR	3513277	Identifier	immediate		3512574	0					
ANR	3513278	PrimaryExpression	8		3512574	1					
ANR	3513279	ExpressionStatement	data [ l ++ ] = immediate >> 16	276:2:7817:7844	3512574	1	True				
ANR	3513280	AssignmentExpression	data [ l ++ ] = immediate >> 16		3512574	0		=			
ANR	3513281	ArrayIndexing	data [ l ++ ]		3512574	0					
ANR	3513282	Identifier	data		3512574	0					
ANR	3513283	PostIncDecOperationExpression	l ++		3512574	1					
ANR	3513284	Identifier	l		3512574	0					
ANR	3513285	IncDec	++		3512574	1					
ANR	3513286	ShiftExpression	immediate >> 16		3512574	1		>>			
ANR	3513287	Identifier	immediate		3512574	0					
ANR	3513288	PrimaryExpression	16		3512574	1					
ANR	3513289	ExpressionStatement	data [ l ++ ] = immediate >> 24	277:2:7848:7875	3512574	2	True				
ANR	3513290	AssignmentExpression	data [ l ++ ] = immediate >> 24		3512574	0		=			
ANR	3513291	ArrayIndexing	data [ l ++ ]		3512574	0					
ANR	3513292	Identifier	data		3512574	0					
ANR	3513293	PostIncDecOperationExpression	l ++		3512574	1					
ANR	3513294	Identifier	l		3512574	0					
ANR	3513295	IncDec	++		3512574	1					
ANR	3513296	ShiftExpression	immediate >> 24		3512574	1		>>			
ANR	3513297	Identifier	immediate		3512574	0					
ANR	3513298	PrimaryExpression	24		3512574	1					
ANR	3513299	ReturnStatement	return l ;	279:1:7881:7889	3512574	15	True				
ANR	3513300	Identifier	l		3512574	0					
ANR	3513301	ReturnType	static int		3512574	1					
ANR	3513302	Identifier	process_group_1		3512574	2					
ANR	3513303	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3512574	3					
ANR	3513304	Parameter	RAsm * a	187:27:5450:5456	3512574	0	True				
ANR	3513305	ParameterType	RAsm *		3512574	0					
ANR	3513306	Identifier	a		3512574	1					
ANR	3513307	Parameter	ut8 * data	187:36:5459:5467	3512574	1	True				
ANR	3513308	ParameterType	ut8 *		3512574	0					
ANR	3513309	Identifier	data		3512574	1					
ANR	3513310	Parameter	const Opcode * op	187:47:5470:5485	3512574	2	True				
ANR	3513311	ParameterType	const Opcode *		3512574	0					
ANR	3513312	Identifier	op		3512574	1					
ANR	3513313	CFGEntryNode	ENTRY		3512574		True				
ANR	3513314	CFGExitNode	EXIT		3512574		True				
ANR	3513315	Symbol	op -> operands [ 0 ] . offset_sign		3512574						
ANR	3513316	Symbol	ST8_MAX		3512574						
ANR	3513317	Symbol	OT_QWORD		3512574						
ANR	3513318	Symbol	data		3512574						
ANR	3513319	Symbol	* op		3512574						
ANR	3513320	Symbol	op -> mnemonic		3512574						
ANR	3513321	Symbol	X86R_ESP		3512574						
ANR	3513322	Symbol	X86R_EBP		3512574						
ANR	3513323	Symbol	op -> operands [ 1 ] . immediate		3512574						
ANR	3513324	Symbol	modrm		3512574						
ANR	3513325	Symbol	* * op		3512574						
ANR	3513326	Symbol	* op -> operands		3512574						
ANR	3513327	Symbol	ST8_MIN		3512574						
ANR	3513328	Symbol	op -> operands [ 0 ] . type		3512574						
ANR	3513329	Symbol	op -> operands [ 0 ] . reg		3512574						
ANR	3513330	Symbol	op -> operands [ 0 ] . offset		3512574						
ANR	3513331	Symbol	OT_MEMORY		3512574						
ANR	3513332	Symbol	op -> operands [ 1 ] . is_good_flag		3512574						
ANR	3513333	Symbol	a -> bits		3512574						
ANR	3513334	Symbol	OT_BYTE		3512574						
ANR	3513335	Symbol	strcmp		3512574						
ANR	3513336	Symbol	X86R_EAX		3512574						
ANR	3513337	Symbol	a		3512574						
ANR	3513338	Symbol	op		3512574						
ANR	3513339	Symbol	mod_byte		3512574						
ANR	3513340	Symbol	offset		3512574						
ANR	3513341	Symbol	mem_ref		3512574						
ANR	3513342	Symbol	reg0		3512574						
ANR	3513343	Symbol	* a		3512574						
ANR	3513344	Symbol	* * op -> operands		3512574						
ANR	3513345	Symbol	l		3512574						
ANR	3513346	Symbol	immediate		3512574						
ANR	3513347	Symbol	op -> operands [ 1 ] . sign		3512574						
ANR	3513348	Symbol	* op -> operands [ 0 ] . regs		3512574						
ANR	3513349	Symbol	* * * op		3512574						
ANR	3513350	Symbol	op -> operands		3512574						
ANR	3513351	Symbol	* data		3512574						
ANR	3513352	Symbol	op -> operands [ 0 ] . regs		3512574						
ANR	3513353	Symbol	OT_DWORD		3512574						
ANR	3513354	Function	process_group_2	282:0:7894:9765							
ANR	3513355	FunctionDef	"process_group_2 (RAsm * a , ut8 * data , const Opcode * op)"		3513354	0					
ANR	3513356	CompoundStatement		282:65:7959:9765	3513354	0					
ANR	3513357	ExpressionStatement	is_valid_registers ( op )	283:1:7962:7985	3513354	0	True				
ANR	3513358	CallExpression	is_valid_registers ( op )		3513354	0					
ANR	3513359	Callee	is_valid_registers		3513354	0					
ANR	3513360	Identifier	is_valid_registers		3513354	0					
ANR	3513361	ArgumentList	op		3513354	1					
ANR	3513362	Argument	op		3513354	0					
ANR	3513363	Identifier	op		3513354	0					
ANR	3513364	IdentifierDeclStatement	int l = 0 ;	284:1:7988:7997	3513354	1	True				
ANR	3513365	IdentifierDecl	l = 0		3513354	0					
ANR	3513366	IdentifierDeclType	int		3513354	0					
ANR	3513367	Identifier	l		3513354	1					
ANR	3513368	AssignmentExpression	l = 0		3513354	2		=			
ANR	3513369	Identifier	l		3513354	0					
ANR	3513370	PrimaryExpression	0		3513354	1					
ANR	3513371	IdentifierDeclStatement	int modrm = 0 ;	285:1:8000:8013	3513354	2	True				
ANR	3513372	IdentifierDecl	modrm = 0		3513354	0					
ANR	3513373	IdentifierDeclType	int		3513354	0					
ANR	3513374	Identifier	modrm		3513354	1					
ANR	3513375	AssignmentExpression	modrm = 0		3513354	2		=			
ANR	3513376	Identifier	modrm		3513354	0					
ANR	3513377	PrimaryExpression	0		3513354	1					
ANR	3513378	IdentifierDeclStatement	int mod_byte = 0 ;	286:1:8016:8032	3513354	3	True				
ANR	3513379	IdentifierDecl	mod_byte = 0		3513354	0					
ANR	3513380	IdentifierDeclType	int		3513354	0					
ANR	3513381	Identifier	mod_byte		3513354	1					
ANR	3513382	AssignmentExpression	mod_byte = 0		3513354	2		=			
ANR	3513383	Identifier	mod_byte		3513354	0					
ANR	3513384	PrimaryExpression	0		3513354	1					
ANR	3513385	IdentifierDeclStatement	int reg0 = 0 ;	287:1:8035:8047	3513354	4	True				
ANR	3513386	IdentifierDecl	reg0 = 0		3513354	0					
ANR	3513387	IdentifierDeclType	int		3513354	0					
ANR	3513388	Identifier	reg0		3513354	1					
ANR	3513389	AssignmentExpression	reg0 = 0		3513354	2		=			
ANR	3513390	Identifier	reg0		3513354	0					
ANR	3513391	PrimaryExpression	0		3513354	1					
ANR	3513392	IfStatement	if ( a -> bits == 64 && op -> operands [ 0 ] . type & OT_QWORD )		3513354	5					
ANR	3513393	Condition	a -> bits == 64 && op -> operands [ 0 ] . type & OT_QWORD	289:5:8055:8102	3513354	0	True				
ANR	3513394	AndExpression	a -> bits == 64 && op -> operands [ 0 ] . type & OT_QWORD		3513354	0		&&			
ANR	3513395	EqualityExpression	a -> bits == 64		3513354	0		==			
ANR	3513396	PtrMemberAccess	a -> bits		3513354	0					
ANR	3513397	Identifier	a		3513354	0					
ANR	3513398	Identifier	bits		3513354	1					
ANR	3513399	PrimaryExpression	64		3513354	1					
ANR	3513400	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		3513354	1		&			
ANR	3513401	MemberAccess	op -> operands [ 0 ] . type		3513354	0					
ANR	3513402	ArrayIndexing	op -> operands [ 0 ]		3513354	0					
ANR	3513403	PtrMemberAccess	op -> operands		3513354	0					
ANR	3513404	Identifier	op		3513354	0					
ANR	3513405	Identifier	operands		3513354	1					
ANR	3513406	PrimaryExpression	0		3513354	1					
ANR	3513407	Identifier	type		3513354	1					
ANR	3513408	Identifier	OT_QWORD		3513354	1					
ANR	3513409	CompoundStatement		8:55:145:145	3513354	1					
ANR	3513410	ExpressionStatement	data [ l ++ ] = 0x48	289:57:8107:8123	3513354	0	True				
ANR	3513411	AssignmentExpression	data [ l ++ ] = 0x48		3513354	0		=			
ANR	3513412	ArrayIndexing	data [ l ++ ]		3513354	0					
ANR	3513413	Identifier	data		3513354	0					
ANR	3513414	PostIncDecOperationExpression	l ++		3513354	1					
ANR	3513415	Identifier	l		3513354	0					
ANR	3513416	IncDec	++		3513354	1					
ANR	3513417	PrimaryExpression	0x48		3513354	1					
ANR	3513418	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""rol"" ) )"		3513354	6					
ANR	3513419	Condition	"! strcmp ( op -> mnemonic , ""rol"" )"	291:5:8133:8161	3513354	0	True				
ANR	3513420	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""rol"" )"		3513354	0					
ANR	3513421	UnaryOperator	!		3513354	0					
ANR	3513422	CallExpression	"strcmp ( op -> mnemonic , ""rol"" )"		3513354	1					
ANR	3513423	Callee	strcmp		3513354	0					
ANR	3513424	Identifier	strcmp		3513354	0					
ANR	3513425	ArgumentList	op -> mnemonic		3513354	1					
ANR	3513426	Argument	op -> mnemonic		3513354	0					
ANR	3513427	PtrMemberAccess	op -> mnemonic		3513354	0					
ANR	3513428	Identifier	op		3513354	0					
ANR	3513429	Identifier	mnemonic		3513354	1					
ANR	3513430	Argument	"""rol"""		3513354	1					
ANR	3513431	PrimaryExpression	"""rol"""		3513354	0					
ANR	3513432	CompoundStatement		10:36:204:204	3513354	1					
ANR	3513433	ExpressionStatement	modrm = 0	292:2:8168:8177	3513354	0	True				
ANR	3513434	AssignmentExpression	modrm = 0		3513354	0		=			
ANR	3513435	Identifier	modrm		3513354	0					
ANR	3513436	PrimaryExpression	0		3513354	1					
ANR	3513437	ElseStatement	else		3513354	0					
ANR	3513438	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""ror"" ) )"		3513354	0					
ANR	3513439	Condition	"! strcmp ( op -> mnemonic , ""ror"" )"	293:12:8191:8219	3513354	0	True				
ANR	3513440	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""ror"" )"		3513354	0					
ANR	3513441	UnaryOperator	!		3513354	0					
ANR	3513442	CallExpression	"strcmp ( op -> mnemonic , ""ror"" )"		3513354	1					
ANR	3513443	Callee	strcmp		3513354	0					
ANR	3513444	Identifier	strcmp		3513354	0					
ANR	3513445	ArgumentList	op -> mnemonic		3513354	1					
ANR	3513446	Argument	op -> mnemonic		3513354	0					
ANR	3513447	PtrMemberAccess	op -> mnemonic		3513354	0					
ANR	3513448	Identifier	op		3513354	0					
ANR	3513449	Identifier	mnemonic		3513354	1					
ANR	3513450	Argument	"""ror"""		3513354	1					
ANR	3513451	PrimaryExpression	"""ror"""		3513354	0					
ANR	3513452	CompoundStatement		12:43:262:262	3513354	1					
ANR	3513453	ExpressionStatement	modrm = 1	294:2:8226:8235	3513354	0	True				
ANR	3513454	AssignmentExpression	modrm = 1		3513354	0		=			
ANR	3513455	Identifier	modrm		3513354	0					
ANR	3513456	PrimaryExpression	1		3513354	1					
ANR	3513457	ElseStatement	else		3513354	0					
ANR	3513458	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""rcl"" ) )"		3513354	0					
ANR	3513459	Condition	"! strcmp ( op -> mnemonic , ""rcl"" )"	295:12:8249:8277	3513354	0	True				
ANR	3513460	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""rcl"" )"		3513354	0					
ANR	3513461	UnaryOperator	!		3513354	0					
ANR	3513462	CallExpression	"strcmp ( op -> mnemonic , ""rcl"" )"		3513354	1					
ANR	3513463	Callee	strcmp		3513354	0					
ANR	3513464	Identifier	strcmp		3513354	0					
ANR	3513465	ArgumentList	op -> mnemonic		3513354	1					
ANR	3513466	Argument	op -> mnemonic		3513354	0					
ANR	3513467	PtrMemberAccess	op -> mnemonic		3513354	0					
ANR	3513468	Identifier	op		3513354	0					
ANR	3513469	Identifier	mnemonic		3513354	1					
ANR	3513470	Argument	"""rcl"""		3513354	1					
ANR	3513471	PrimaryExpression	"""rcl"""		3513354	0					
ANR	3513472	CompoundStatement		14:43:320:320	3513354	1					
ANR	3513473	ExpressionStatement	modrm = 2	296:2:8284:8293	3513354	0	True				
ANR	3513474	AssignmentExpression	modrm = 2		3513354	0		=			
ANR	3513475	Identifier	modrm		3513354	0					
ANR	3513476	PrimaryExpression	2		3513354	1					
ANR	3513477	ElseStatement	else		3513354	0					
ANR	3513478	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""rcr"" ) )"		3513354	0					
ANR	3513479	Condition	"! strcmp ( op -> mnemonic , ""rcr"" )"	297:12:8307:8335	3513354	0	True				
ANR	3513480	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""rcr"" )"		3513354	0					
ANR	3513481	UnaryOperator	!		3513354	0					
ANR	3513482	CallExpression	"strcmp ( op -> mnemonic , ""rcr"" )"		3513354	1					
ANR	3513483	Callee	strcmp		3513354	0					
ANR	3513484	Identifier	strcmp		3513354	0					
ANR	3513485	ArgumentList	op -> mnemonic		3513354	1					
ANR	3513486	Argument	op -> mnemonic		3513354	0					
ANR	3513487	PtrMemberAccess	op -> mnemonic		3513354	0					
ANR	3513488	Identifier	op		3513354	0					
ANR	3513489	Identifier	mnemonic		3513354	1					
ANR	3513490	Argument	"""rcr"""		3513354	1					
ANR	3513491	PrimaryExpression	"""rcr"""		3513354	0					
ANR	3513492	CompoundStatement		16:43:378:378	3513354	1					
ANR	3513493	ExpressionStatement	modrm = 3	298:2:8342:8351	3513354	0	True				
ANR	3513494	AssignmentExpression	modrm = 3		3513354	0		=			
ANR	3513495	Identifier	modrm		3513354	0					
ANR	3513496	PrimaryExpression	3		3513354	1					
ANR	3513497	ElseStatement	else		3513354	0					
ANR	3513498	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""shl"" ) )"		3513354	0					
ANR	3513499	Condition	"! strcmp ( op -> mnemonic , ""shl"" )"	299:12:8365:8393	3513354	0	True				
ANR	3513500	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""shl"" )"		3513354	0					
ANR	3513501	UnaryOperator	!		3513354	0					
ANR	3513502	CallExpression	"strcmp ( op -> mnemonic , ""shl"" )"		3513354	1					
ANR	3513503	Callee	strcmp		3513354	0					
ANR	3513504	Identifier	strcmp		3513354	0					
ANR	3513505	ArgumentList	op -> mnemonic		3513354	1					
ANR	3513506	Argument	op -> mnemonic		3513354	0					
ANR	3513507	PtrMemberAccess	op -> mnemonic		3513354	0					
ANR	3513508	Identifier	op		3513354	0					
ANR	3513509	Identifier	mnemonic		3513354	1					
ANR	3513510	Argument	"""shl"""		3513354	1					
ANR	3513511	PrimaryExpression	"""shl"""		3513354	0					
ANR	3513512	CompoundStatement		18:43:436:436	3513354	1					
ANR	3513513	ExpressionStatement	modrm = 4	300:2:8400:8409	3513354	0	True				
ANR	3513514	AssignmentExpression	modrm = 4		3513354	0		=			
ANR	3513515	Identifier	modrm		3513354	0					
ANR	3513516	PrimaryExpression	4		3513354	1					
ANR	3513517	ElseStatement	else		3513354	0					
ANR	3513518	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""shr"" ) )"		3513354	0					
ANR	3513519	Condition	"! strcmp ( op -> mnemonic , ""shr"" )"	301:12:8423:8451	3513354	0	True				
ANR	3513520	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""shr"" )"		3513354	0					
ANR	3513521	UnaryOperator	!		3513354	0					
ANR	3513522	CallExpression	"strcmp ( op -> mnemonic , ""shr"" )"		3513354	1					
ANR	3513523	Callee	strcmp		3513354	0					
ANR	3513524	Identifier	strcmp		3513354	0					
ANR	3513525	ArgumentList	op -> mnemonic		3513354	1					
ANR	3513526	Argument	op -> mnemonic		3513354	0					
ANR	3513527	PtrMemberAccess	op -> mnemonic		3513354	0					
ANR	3513528	Identifier	op		3513354	0					
ANR	3513529	Identifier	mnemonic		3513354	1					
ANR	3513530	Argument	"""shr"""		3513354	1					
ANR	3513531	PrimaryExpression	"""shr"""		3513354	0					
ANR	3513532	CompoundStatement		20:43:494:494	3513354	1					
ANR	3513533	ExpressionStatement	modrm = 5	302:2:8458:8467	3513354	0	True				
ANR	3513534	AssignmentExpression	modrm = 5		3513354	0		=			
ANR	3513535	Identifier	modrm		3513354	0					
ANR	3513536	PrimaryExpression	5		3513354	1					
ANR	3513537	ElseStatement	else		3513354	0					
ANR	3513538	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""sal"" ) )"		3513354	0					
ANR	3513539	Condition	"! strcmp ( op -> mnemonic , ""sal"" )"	303:12:8481:8509	3513354	0	True				
ANR	3513540	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""sal"" )"		3513354	0					
ANR	3513541	UnaryOperator	!		3513354	0					
ANR	3513542	CallExpression	"strcmp ( op -> mnemonic , ""sal"" )"		3513354	1					
ANR	3513543	Callee	strcmp		3513354	0					
ANR	3513544	Identifier	strcmp		3513354	0					
ANR	3513545	ArgumentList	op -> mnemonic		3513354	1					
ANR	3513546	Argument	op -> mnemonic		3513354	0					
ANR	3513547	PtrMemberAccess	op -> mnemonic		3513354	0					
ANR	3513548	Identifier	op		3513354	0					
ANR	3513549	Identifier	mnemonic		3513354	1					
ANR	3513550	Argument	"""sal"""		3513354	1					
ANR	3513551	PrimaryExpression	"""sal"""		3513354	0					
ANR	3513552	CompoundStatement		22:43:552:552	3513354	1					
ANR	3513553	ExpressionStatement	modrm = 6	304:2:8516:8525	3513354	0	True				
ANR	3513554	AssignmentExpression	modrm = 6		3513354	0		=			
ANR	3513555	Identifier	modrm		3513354	0					
ANR	3513556	PrimaryExpression	6		3513354	1					
ANR	3513557	ElseStatement	else		3513354	0					
ANR	3513558	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""sar"" ) )"		3513354	0					
ANR	3513559	Condition	"! strcmp ( op -> mnemonic , ""sar"" )"	305:12:8539:8567	3513354	0	True				
ANR	3513560	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""sar"" )"		3513354	0					
ANR	3513561	UnaryOperator	!		3513354	0					
ANR	3513562	CallExpression	"strcmp ( op -> mnemonic , ""sar"" )"		3513354	1					
ANR	3513563	Callee	strcmp		3513354	0					
ANR	3513564	Identifier	strcmp		3513354	0					
ANR	3513565	ArgumentList	op -> mnemonic		3513354	1					
ANR	3513566	Argument	op -> mnemonic		3513354	0					
ANR	3513567	PtrMemberAccess	op -> mnemonic		3513354	0					
ANR	3513568	Identifier	op		3513354	0					
ANR	3513569	Identifier	mnemonic		3513354	1					
ANR	3513570	Argument	"""sar"""		3513354	1					
ANR	3513571	PrimaryExpression	"""sar"""		3513354	0					
ANR	3513572	CompoundStatement		24:43:610:610	3513354	1					
ANR	3513573	ExpressionStatement	modrm = 7	306:2:8574:8583	3513354	0	True				
ANR	3513574	AssignmentExpression	modrm = 7		3513354	0		=			
ANR	3513575	Identifier	modrm		3513354	0					
ANR	3513576	PrimaryExpression	7		3513354	1					
ANR	3513577	IdentifierDeclStatement	st32 immediate = op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign ;	309:1:8590:8655	3513354	7	True				
ANR	3513578	IdentifierDecl	immediate = op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign		3513354	0					
ANR	3513579	IdentifierDeclType	st32		3513354	0					
ANR	3513580	Identifier	immediate		3513354	1					
ANR	3513581	AssignmentExpression	immediate = op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign		3513354	2		=			
ANR	3513582	Identifier	immediate		3513354	0					
ANR	3513583	MultiplicativeExpression	op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign		3513354	1		*			
ANR	3513584	MemberAccess	op -> operands [ 1 ] . immediate		3513354	0					
ANR	3513585	ArrayIndexing	op -> operands [ 1 ]		3513354	0					
ANR	3513586	PtrMemberAccess	op -> operands		3513354	0					
ANR	3513587	Identifier	op		3513354	0					
ANR	3513588	Identifier	operands		3513354	1					
ANR	3513589	PrimaryExpression	1		3513354	1					
ANR	3513590	Identifier	immediate		3513354	1					
ANR	3513591	MemberAccess	op -> operands [ 1 ] . sign		3513354	1					
ANR	3513592	ArrayIndexing	op -> operands [ 1 ]		3513354	0					
ANR	3513593	PtrMemberAccess	op -> operands		3513354	0					
ANR	3513594	Identifier	op		3513354	0					
ANR	3513595	Identifier	operands		3513354	1					
ANR	3513596	PrimaryExpression	1		3513354	1					
ANR	3513597	Identifier	sign		3513354	1					
ANR	3513598	IfStatement	if ( immediate > 255 || immediate < - 128 )		3513354	8					
ANR	3513599	Condition	immediate > 255 || immediate < - 128	310:5:8662:8696	3513354	0	True				
ANR	3513600	OrExpression	immediate > 255 || immediate < - 128		3513354	0		||			
ANR	3513601	RelationalExpression	immediate > 255		3513354	0		>			
ANR	3513602	Identifier	immediate		3513354	0					
ANR	3513603	PrimaryExpression	255		3513354	1					
ANR	3513604	RelationalExpression	immediate < - 128		3513354	1		<			
ANR	3513605	Identifier	immediate		3513354	0					
ANR	3513606	UnaryOperationExpression	- 128		3513354	1					
ANR	3513607	UnaryOperator	-		3513354	0					
ANR	3513608	PrimaryExpression	128		3513354	1					
ANR	3513609	CompoundStatement		29:42:739:739	3513354	1					
ANR	3513610	ExpressionStatement	"eprintf ( ""Error: Immediate exceeds bounds\\n"" )"	311:2:8703:8748	3513354	0	True				
ANR	3513611	CallExpression	"eprintf ( ""Error: Immediate exceeds bounds\\n"" )"		3513354	0					
ANR	3513612	Callee	eprintf		3513354	0					
ANR	3513613	Identifier	eprintf		3513354	0					
ANR	3513614	ArgumentList	"""Error: Immediate exceeds bounds\\n"""		3513354	1					
ANR	3513615	Argument	"""Error: Immediate exceeds bounds\\n"""		3513354	0					
ANR	3513616	PrimaryExpression	"""Error: Immediate exceeds bounds\\n"""		3513354	0					
ANR	3513617	ReturnStatement	return - 1 ;	312:2:8752:8761	3513354	1	True				
ANR	3513618	UnaryOperationExpression	- 1		3513354	0					
ANR	3513619	UnaryOperator	-		3513354	0					
ANR	3513620	PrimaryExpression	1		3513354	1					
ANR	3513621	IfStatement	if ( op -> operands [ 0 ] . type & ( OT_DWORD | OT_QWORD ) )		3513354	9					
ANR	3513622	Condition	op -> operands [ 0 ] . type & ( OT_DWORD | OT_QWORD )	315:5:8772:8815	3513354	0	True				
ANR	3513623	BitAndExpression	op -> operands [ 0 ] . type & ( OT_DWORD | OT_QWORD )		3513354	0		&			
ANR	3513624	MemberAccess	op -> operands [ 0 ] . type		3513354	0					
ANR	3513625	ArrayIndexing	op -> operands [ 0 ]		3513354	0					
ANR	3513626	PtrMemberAccess	op -> operands		3513354	0					
ANR	3513627	Identifier	op		3513354	0					
ANR	3513628	Identifier	operands		3513354	1					
ANR	3513629	PrimaryExpression	0		3513354	1					
ANR	3513630	Identifier	type		3513354	1					
ANR	3513631	InclusiveOrExpression	OT_DWORD | OT_QWORD		3513354	1		|			
ANR	3513632	Identifier	OT_DWORD		3513354	0					
ANR	3513633	Identifier	OT_QWORD		3513354	1					
ANR	3513634	CompoundStatement		34:51:858:858	3513354	1					
ANR	3513635	IfStatement	if ( op -> operands [ 1 ] . type & ( OT_GPREG | OT_BYTE ) )		3513354	0					
ANR	3513636	Condition	op -> operands [ 1 ] . type & ( OT_GPREG | OT_BYTE )	316:6:8826:8868	3513354	0	True				
ANR	3513637	BitAndExpression	op -> operands [ 1 ] . type & ( OT_GPREG | OT_BYTE )		3513354	0		&			
ANR	3513638	MemberAccess	op -> operands [ 1 ] . type		3513354	0					
ANR	3513639	ArrayIndexing	op -> operands [ 1 ]		3513354	0					
ANR	3513640	PtrMemberAccess	op -> operands		3513354	0					
ANR	3513641	Identifier	op		3513354	0					
ANR	3513642	Identifier	operands		3513354	1					
ANR	3513643	PrimaryExpression	1		3513354	1					
ANR	3513644	Identifier	type		3513354	1					
ANR	3513645	InclusiveOrExpression	OT_GPREG | OT_BYTE		3513354	1		|			
ANR	3513646	Identifier	OT_GPREG		3513354	0					
ANR	3513647	Identifier	OT_BYTE		3513354	1					
ANR	3513648	CompoundStatement		35:51:911:911	3513354	1					
ANR	3513649	ExpressionStatement	data [ l ++ ] = 0xd3	317:3:8876:8892	3513354	0	True				
ANR	3513650	AssignmentExpression	data [ l ++ ] = 0xd3		3513354	0		=			
ANR	3513651	ArrayIndexing	data [ l ++ ]		3513354	0					
ANR	3513652	Identifier	data		3513354	0					
ANR	3513653	PostIncDecOperationExpression	l ++		3513354	1					
ANR	3513654	Identifier	l		3513354	0					
ANR	3513655	IncDec	++		3513354	1					
ANR	3513656	PrimaryExpression	0xd3		3513354	1					
ANR	3513657	ElseStatement	else		3513354	0					
ANR	3513658	IfStatement	if ( immediate == 1 )		3513354	0					
ANR	3513659	Condition	immediate == 1	318:13:8907:8920	3513354	0	True				
ANR	3513660	EqualityExpression	immediate == 1		3513354	0		==			
ANR	3513661	Identifier	immediate		3513354	0					
ANR	3513662	PrimaryExpression	1		3513354	1					
ANR	3513663	CompoundStatement		37:29:963:963	3513354	1					
ANR	3513664	ExpressionStatement	data [ l ++ ] = 0xd1	319:3:8928:8944	3513354	0	True				
ANR	3513665	AssignmentExpression	data [ l ++ ] = 0xd1		3513354	0		=			
ANR	3513666	ArrayIndexing	data [ l ++ ]		3513354	0					
ANR	3513667	Identifier	data		3513354	0					
ANR	3513668	PostIncDecOperationExpression	l ++		3513354	1					
ANR	3513669	Identifier	l		3513354	0					
ANR	3513670	IncDec	++		3513354	1					
ANR	3513671	PrimaryExpression	0xd1		3513354	1					
ANR	3513672	ElseStatement	else		3513354	0					
ANR	3513673	CompoundStatement		39:9:995:995	3513354	0					
ANR	3513674	ExpressionStatement	data [ l ++ ] = 0xc1	321:3:8960:8976	3513354	0	True				
ANR	3513675	AssignmentExpression	data [ l ++ ] = 0xc1		3513354	0		=			
ANR	3513676	ArrayIndexing	data [ l ++ ]		3513354	0					
ANR	3513677	Identifier	data		3513354	0					
ANR	3513678	PostIncDecOperationExpression	l ++		3513354	1					
ANR	3513679	Identifier	l		3513354	0					
ANR	3513680	IncDec	++		3513354	1					
ANR	3513681	PrimaryExpression	0xc1		3513354	1					
ANR	3513682	ElseStatement	else		3513354	0					
ANR	3513683	IfStatement	if ( op -> operands [ 0 ] . type & OT_BYTE )		3513354	0					
ANR	3513684	Condition	op -> operands [ 0 ] . type & OT_BYTE	323:12:8994:9023	3513354	0	True				
ANR	3513685	BitAndExpression	op -> operands [ 0 ] . type & OT_BYTE		3513354	0		&			
ANR	3513686	MemberAccess	op -> operands [ 0 ] . type		3513354	0					
ANR	3513687	ArrayIndexing	op -> operands [ 0 ]		3513354	0					
ANR	3513688	PtrMemberAccess	op -> operands		3513354	0					
ANR	3513689	Identifier	op		3513354	0					
ANR	3513690	Identifier	operands		3513354	1					
ANR	3513691	PrimaryExpression	0		3513354	1					
ANR	3513692	Identifier	type		3513354	1					
ANR	3513693	Identifier	OT_BYTE		3513354	1					
ANR	3513694	CompoundStatement		43:2:1070:1105	3513354	1					
ANR	3513695	IdentifierDeclStatement	const Operand * o = & op -> operands [ 0 ] ;	324:2:9030:9065	3513354	0	True				
ANR	3513696	IdentifierDecl	* o = & op -> operands [ 0 ]		3513354	0					
ANR	3513697	IdentifierDeclType	const Operand *		3513354	0					
ANR	3513698	Identifier	o		3513354	1					
ANR	3513699	AssignmentExpression	* o = & op -> operands [ 0 ]		3513354	2		=			
ANR	3513700	Identifier	o		3513354	0					
ANR	3513701	UnaryOperationExpression	& op -> operands [ 0 ]		3513354	1					
ANR	3513702	UnaryOperator	&		3513354	0					
ANR	3513703	ArrayIndexing	op -> operands [ 0 ]		3513354	1					
ANR	3513704	PtrMemberAccess	op -> operands		3513354	0					
ANR	3513705	Identifier	op		3513354	0					
ANR	3513706	Identifier	operands		3513354	1					
ANR	3513707	PrimaryExpression	0		3513354	1					
ANR	3513708	IfStatement	if ( o -> regs [ 0 ] != - 1 && o -> regs [ 1 ] != - 1 )		3513354	1					
ANR	3513709	Condition	o -> regs [ 0 ] != - 1 && o -> regs [ 1 ] != - 1	325:6:9073:9108	3513354	0	True				
ANR	3513710	AndExpression	o -> regs [ 0 ] != - 1 && o -> regs [ 1 ] != - 1		3513354	0		&&			
ANR	3513711	EqualityExpression	o -> regs [ 0 ] != - 1		3513354	0		!=			
ANR	3513712	ArrayIndexing	o -> regs [ 0 ]		3513354	0					
ANR	3513713	PtrMemberAccess	o -> regs		3513354	0					
ANR	3513714	Identifier	o		3513354	0					
ANR	3513715	Identifier	regs		3513354	1					
ANR	3513716	PrimaryExpression	0		3513354	1					
ANR	3513717	UnaryOperationExpression	- 1		3513354	1					
ANR	3513718	UnaryOperator	-		3513354	0					
ANR	3513719	PrimaryExpression	1		3513354	1					
ANR	3513720	EqualityExpression	o -> regs [ 1 ] != - 1		3513354	1		!=			
ANR	3513721	ArrayIndexing	o -> regs [ 1 ]		3513354	0					
ANR	3513722	PtrMemberAccess	o -> regs		3513354	0					
ANR	3513723	Identifier	o		3513354	0					
ANR	3513724	Identifier	regs		3513354	1					
ANR	3513725	PrimaryExpression	1		3513354	1					
ANR	3513726	UnaryOperationExpression	- 1		3513354	1					
ANR	3513727	UnaryOperator	-		3513354	0					
ANR	3513728	PrimaryExpression	1		3513354	1					
ANR	3513729	CompoundStatement		44:44:1151:1151	3513354	1					
ANR	3513730	ExpressionStatement	data [ l ++ ] = 0xc0	326:3:9116:9132	3513354	0	True				
ANR	3513731	AssignmentExpression	data [ l ++ ] = 0xc0		3513354	0		=			
ANR	3513732	ArrayIndexing	data [ l ++ ]		3513354	0					
ANR	3513733	Identifier	data		3513354	0					
ANR	3513734	PostIncDecOperationExpression	l ++		3513354	1					
ANR	3513735	Identifier	l		3513354	0					
ANR	3513736	IncDec	++		3513354	1					
ANR	3513737	PrimaryExpression	0xc0		3513354	1					
ANR	3513738	ExpressionStatement	data [ l ++ ] = 0x44	327:3:9137:9153	3513354	1	True				
ANR	3513739	AssignmentExpression	data [ l ++ ] = 0x44		3513354	0		=			
ANR	3513740	ArrayIndexing	data [ l ++ ]		3513354	0					
ANR	3513741	Identifier	data		3513354	0					
ANR	3513742	PostIncDecOperationExpression	l ++		3513354	1					
ANR	3513743	Identifier	l		3513354	0					
ANR	3513744	IncDec	++		3513354	1					
ANR	3513745	PrimaryExpression	0x44		3513354	1					
ANR	3513746	ExpressionStatement	data [ l ++ ] = o -> regs [ 0 ] | ( o -> regs [ 1 ] << 3 )	328:3:9158:9197	3513354	2	True				
ANR	3513747	AssignmentExpression	data [ l ++ ] = o -> regs [ 0 ] | ( o -> regs [ 1 ] << 3 )		3513354	0		=			
ANR	3513748	ArrayIndexing	data [ l ++ ]		3513354	0					
ANR	3513749	Identifier	data		3513354	0					
ANR	3513750	PostIncDecOperationExpression	l ++		3513354	1					
ANR	3513751	Identifier	l		3513354	0					
ANR	3513752	IncDec	++		3513354	1					
ANR	3513753	InclusiveOrExpression	o -> regs [ 0 ] | ( o -> regs [ 1 ] << 3 )		3513354	1		|			
ANR	3513754	ArrayIndexing	o -> regs [ 0 ]		3513354	0					
ANR	3513755	PtrMemberAccess	o -> regs		3513354	0					
ANR	3513756	Identifier	o		3513354	0					
ANR	3513757	Identifier	regs		3513354	1					
ANR	3513758	PrimaryExpression	0		3513354	1					
ANR	3513759	ShiftExpression	o -> regs [ 1 ] << 3		3513354	1		<<			
ANR	3513760	ArrayIndexing	o -> regs [ 1 ]		3513354	0					
ANR	3513761	PtrMemberAccess	o -> regs		3513354	0					
ANR	3513762	Identifier	o		3513354	0					
ANR	3513763	Identifier	regs		3513354	1					
ANR	3513764	PrimaryExpression	1		3513354	1					
ANR	3513765	PrimaryExpression	3		3513354	1					
ANR	3513766	ExpressionStatement	data [ l ++ ] = ( ut8 ) ( ( o -> offset * o -> offset_sign ) & 0xff )	329:3:9202:9254	3513354	3	True				
ANR	3513767	AssignmentExpression	data [ l ++ ] = ( ut8 ) ( ( o -> offset * o -> offset_sign ) & 0xff )		3513354	0		=			
ANR	3513768	ArrayIndexing	data [ l ++ ]		3513354	0					
ANR	3513769	Identifier	data		3513354	0					
ANR	3513770	PostIncDecOperationExpression	l ++		3513354	1					
ANR	3513771	Identifier	l		3513354	0					
ANR	3513772	IncDec	++		3513354	1					
ANR	3513773	CastExpression	( ut8 ) ( ( o -> offset * o -> offset_sign ) & 0xff )		3513354	1					
ANR	3513774	CastTarget	ut8		3513354	0					
ANR	3513775	BitAndExpression	( o -> offset * o -> offset_sign ) & 0xff		3513354	1		&			
ANR	3513776	MultiplicativeExpression	o -> offset * o -> offset_sign		3513354	0		*			
ANR	3513777	PtrMemberAccess	o -> offset		3513354	0					
ANR	3513778	Identifier	o		3513354	0					
ANR	3513779	Identifier	offset		3513354	1					
ANR	3513780	PtrMemberAccess	o -> offset_sign		3513354	1					
ANR	3513781	Identifier	o		3513354	0					
ANR	3513782	Identifier	offset_sign		3513354	1					
ANR	3513783	PrimaryExpression	0xff		3513354	1					
ANR	3513784	ExpressionStatement	data [ l ++ ] = immediate	330:3:9259:9280	3513354	4	True				
ANR	3513785	AssignmentExpression	data [ l ++ ] = immediate		3513354	0		=			
ANR	3513786	ArrayIndexing	data [ l ++ ]		3513354	0					
ANR	3513787	Identifier	data		3513354	0					
ANR	3513788	PostIncDecOperationExpression	l ++		3513354	1					
ANR	3513789	Identifier	l		3513354	0					
ANR	3513790	IncDec	++		3513354	1					
ANR	3513791	Identifier	immediate		3513354	1					
ANR	3513792	ReturnStatement	return l ;	331:3:9285:9293	3513354	5	True				
ANR	3513793	Identifier	l		3513354	0					
ANR	3513794	ElseStatement	else		3513354	0					
ANR	3513795	IfStatement	if ( op -> operands [ 1 ] . type & ( OT_GPREG | OT_WORD ) )		3513354	0					
ANR	3513796	Condition	op -> operands [ 1 ] . type & ( OT_GPREG | OT_WORD )	332:13:9308:9350	3513354	0	True				
ANR	3513797	BitAndExpression	op -> operands [ 1 ] . type & ( OT_GPREG | OT_WORD )		3513354	0		&			
ANR	3513798	MemberAccess	op -> operands [ 1 ] . type		3513354	0					
ANR	3513799	ArrayIndexing	op -> operands [ 1 ]		3513354	0					
ANR	3513800	PtrMemberAccess	op -> operands		3513354	0					
ANR	3513801	Identifier	op		3513354	0					
ANR	3513802	Identifier	operands		3513354	1					
ANR	3513803	PrimaryExpression	1		3513354	1					
ANR	3513804	Identifier	type		3513354	1					
ANR	3513805	InclusiveOrExpression	OT_GPREG | OT_WORD		3513354	1		|			
ANR	3513806	Identifier	OT_GPREG		3513354	0					
ANR	3513807	Identifier	OT_WORD		3513354	1					
ANR	3513808	CompoundStatement		51:58:1393:1393	3513354	1					
ANR	3513809	ExpressionStatement	data [ l ++ ] = 0xd2	333:3:9358:9374	3513354	0	True				
ANR	3513810	AssignmentExpression	data [ l ++ ] = 0xd2		3513354	0		=			
ANR	3513811	ArrayIndexing	data [ l ++ ]		3513354	0					
ANR	3513812	Identifier	data		3513354	0					
ANR	3513813	PostIncDecOperationExpression	l ++		3513354	1					
ANR	3513814	Identifier	l		3513354	0					
ANR	3513815	IncDec	++		3513354	1					
ANR	3513816	PrimaryExpression	0xd2		3513354	1					
ANR	3513817	ElseStatement	else		3513354	0					
ANR	3513818	IfStatement	if ( immediate == 1 )		3513354	0					
ANR	3513819	Condition	immediate == 1	334:13:9389:9402	3513354	0	True				
ANR	3513820	EqualityExpression	immediate == 1		3513354	0		==			
ANR	3513821	Identifier	immediate		3513354	0					
ANR	3513822	PrimaryExpression	1		3513354	1					
ANR	3513823	CompoundStatement		53:29:1445:1445	3513354	1					
ANR	3513824	ExpressionStatement	data [ l ++ ] = 0xd0	335:3:9410:9426	3513354	0	True				
ANR	3513825	AssignmentExpression	data [ l ++ ] = 0xd0		3513354	0		=			
ANR	3513826	ArrayIndexing	data [ l ++ ]		3513354	0					
ANR	3513827	Identifier	data		3513354	0					
ANR	3513828	PostIncDecOperationExpression	l ++		3513354	1					
ANR	3513829	Identifier	l		3513354	0					
ANR	3513830	IncDec	++		3513354	1					
ANR	3513831	PrimaryExpression	0xd0		3513354	1					
ANR	3513832	ElseStatement	else		3513354	0					
ANR	3513833	CompoundStatement		55:9:1477:1477	3513354	0					
ANR	3513834	ExpressionStatement	data [ l ++ ] = 0xc0	337:3:9442:9458	3513354	0	True				
ANR	3513835	AssignmentExpression	data [ l ++ ] = 0xc0		3513354	0		=			
ANR	3513836	ArrayIndexing	data [ l ++ ]		3513354	0					
ANR	3513837	Identifier	data		3513354	0					
ANR	3513838	PostIncDecOperationExpression	l ++		3513354	1					
ANR	3513839	Identifier	l		3513354	0					
ANR	3513840	IncDec	++		3513354	1					
ANR	3513841	PrimaryExpression	0xc0		3513354	1					
ANR	3513842	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3513354	10					
ANR	3513843	Condition	op -> operands [ 0 ] . type & OT_MEMORY	340:5:9472:9503	3513354	0	True				
ANR	3513844	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3513354	0		&			
ANR	3513845	MemberAccess	op -> operands [ 0 ] . type		3513354	0					
ANR	3513846	ArrayIndexing	op -> operands [ 0 ]		3513354	0					
ANR	3513847	PtrMemberAccess	op -> operands		3513354	0					
ANR	3513848	Identifier	op		3513354	0					
ANR	3513849	Identifier	operands		3513354	1					
ANR	3513850	PrimaryExpression	0		3513354	1					
ANR	3513851	Identifier	type		3513354	1					
ANR	3513852	Identifier	OT_MEMORY		3513354	1					
ANR	3513853	CompoundStatement		59:39:1546:1546	3513354	1					
ANR	3513854	ExpressionStatement	reg0 = op -> operands [ 0 ] . regs [ 0 ]	341:2:9510:9540	3513354	0	True				
ANR	3513855	AssignmentExpression	reg0 = op -> operands [ 0 ] . regs [ 0 ]		3513354	0		=			
ANR	3513856	Identifier	reg0		3513354	0					
ANR	3513857	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3513354	1					
ANR	3513858	MemberAccess	op -> operands [ 0 ] . regs		3513354	0					
ANR	3513859	ArrayIndexing	op -> operands [ 0 ]		3513354	0					
ANR	3513860	PtrMemberAccess	op -> operands		3513354	0					
ANR	3513861	Identifier	op		3513354	0					
ANR	3513862	Identifier	operands		3513354	1					
ANR	3513863	PrimaryExpression	0		3513354	1					
ANR	3513864	Identifier	regs		3513354	1					
ANR	3513865	PrimaryExpression	0		3513354	1					
ANR	3513866	ExpressionStatement	mod_byte = 0	342:2:9544:9556	3513354	1	True				
ANR	3513867	AssignmentExpression	mod_byte = 0		3513354	0		=			
ANR	3513868	Identifier	mod_byte		3513354	0					
ANR	3513869	PrimaryExpression	0		3513354	1					
ANR	3513870	ElseStatement	else		3513354	0					
ANR	3513871	CompoundStatement		62:8:1606:1606	3513354	0					
ANR	3513872	ExpressionStatement	reg0 = op -> operands [ 0 ] . reg	344:2:9570:9596	3513354	0	True				
ANR	3513873	AssignmentExpression	reg0 = op -> operands [ 0 ] . reg		3513354	0		=			
ANR	3513874	Identifier	reg0		3513354	0					
ANR	3513875	MemberAccess	op -> operands [ 0 ] . reg		3513354	1					
ANR	3513876	ArrayIndexing	op -> operands [ 0 ]		3513354	0					
ANR	3513877	PtrMemberAccess	op -> operands		3513354	0					
ANR	3513878	Identifier	op		3513354	0					
ANR	3513879	Identifier	operands		3513354	1					
ANR	3513880	PrimaryExpression	0		3513354	1					
ANR	3513881	Identifier	reg		3513354	1					
ANR	3513882	ExpressionStatement	mod_byte = 3	345:2:9600:9612	3513354	1	True				
ANR	3513883	AssignmentExpression	mod_byte = 3		3513354	0		=			
ANR	3513884	Identifier	mod_byte		3513354	0					
ANR	3513885	PrimaryExpression	3		3513354	1					
ANR	3513886	ExpressionStatement	data [ l ++ ] = mod_byte << 6 | modrm << 3 | reg0	347:1:9618:9663	3513354	11	True				
ANR	3513887	AssignmentExpression	data [ l ++ ] = mod_byte << 6 | modrm << 3 | reg0		3513354	0		=			
ANR	3513888	ArrayIndexing	data [ l ++ ]		3513354	0					
ANR	3513889	Identifier	data		3513354	0					
ANR	3513890	PostIncDecOperationExpression	l ++		3513354	1					
ANR	3513891	Identifier	l		3513354	0					
ANR	3513892	IncDec	++		3513354	1					
ANR	3513893	InclusiveOrExpression	mod_byte << 6 | modrm << 3 | reg0		3513354	1		|			
ANR	3513894	ShiftExpression	mod_byte << 6		3513354	0		<<			
ANR	3513895	Identifier	mod_byte		3513354	0					
ANR	3513896	PrimaryExpression	6		3513354	1					
ANR	3513897	InclusiveOrExpression	modrm << 3 | reg0		3513354	1		|			
ANR	3513898	ShiftExpression	modrm << 3		3513354	0		<<			
ANR	3513899	Identifier	modrm		3513354	0					
ANR	3513900	PrimaryExpression	3		3513354	1					
ANR	3513901	Identifier	reg0		3513354	1					
ANR	3513902	IfStatement	if ( immediate != 1 && ! ( op -> operands [ 1 ] . type & OT_GPREG ) )		3513354	12					
ANR	3513903	Condition	immediate != 1 && ! ( op -> operands [ 1 ] . type & OT_GPREG )	348:5:9670:9721	3513354	0	True				
ANR	3513904	AndExpression	immediate != 1 && ! ( op -> operands [ 1 ] . type & OT_GPREG )		3513354	0		&&			
ANR	3513905	EqualityExpression	immediate != 1		3513354	0		!=			
ANR	3513906	Identifier	immediate		3513354	0					
ANR	3513907	PrimaryExpression	1		3513354	1					
ANR	3513908	UnaryOperationExpression	! ( op -> operands [ 1 ] . type & OT_GPREG )		3513354	1					
ANR	3513909	UnaryOperator	!		3513354	0					
ANR	3513910	BitAndExpression	op -> operands [ 1 ] . type & OT_GPREG		3513354	1		&			
ANR	3513911	MemberAccess	op -> operands [ 1 ] . type		3513354	0					
ANR	3513912	ArrayIndexing	op -> operands [ 1 ]		3513354	0					
ANR	3513913	PtrMemberAccess	op -> operands		3513354	0					
ANR	3513914	Identifier	op		3513354	0					
ANR	3513915	Identifier	operands		3513354	1					
ANR	3513916	PrimaryExpression	1		3513354	1					
ANR	3513917	Identifier	type		3513354	1					
ANR	3513918	Identifier	OT_GPREG		3513354	1					
ANR	3513919	CompoundStatement		67:59:1764:1764	3513354	1					
ANR	3513920	ExpressionStatement	data [ l ++ ] = immediate	349:2:9728:9749	3513354	0	True				
ANR	3513921	AssignmentExpression	data [ l ++ ] = immediate		3513354	0		=			
ANR	3513922	ArrayIndexing	data [ l ++ ]		3513354	0					
ANR	3513923	Identifier	data		3513354	0					
ANR	3513924	PostIncDecOperationExpression	l ++		3513354	1					
ANR	3513925	Identifier	l		3513354	0					
ANR	3513926	IncDec	++		3513354	1					
ANR	3513927	Identifier	immediate		3513354	1					
ANR	3513928	ReturnStatement	return l ;	351:1:9755:9763	3513354	13	True				
ANR	3513929	Identifier	l		3513354	0					
ANR	3513930	ReturnType	static int		3513354	1					
ANR	3513931	Identifier	process_group_2		3513354	2					
ANR	3513932	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3513354	3					
ANR	3513933	Parameter	RAsm * a	282:27:7921:7927	3513354	0	True				
ANR	3513934	ParameterType	RAsm *		3513354	0					
ANR	3513935	Identifier	a		3513354	1					
ANR	3513936	Parameter	ut8 * data	282:36:7930:7938	3513354	1	True				
ANR	3513937	ParameterType	ut8 *		3513354	0					
ANR	3513938	Identifier	data		3513354	1					
ANR	3513939	Parameter	const Opcode * op	282:47:7941:7956	3513354	2	True				
ANR	3513940	ParameterType	const Opcode *		3513354	0					
ANR	3513941	Identifier	op		3513354	1					
ANR	3513942	CFGEntryNode	ENTRY		3513354		True				
ANR	3513943	CFGExitNode	EXIT		3513354		True				
ANR	3513944	Symbol	OT_QWORD		3513354						
ANR	3513945	Symbol	data		3513354						
ANR	3513946	Symbol	* op		3513354						
ANR	3513947	Symbol	op -> mnemonic		3513354						
ANR	3513948	Symbol	* o -> regs		3513354						
ANR	3513949	Symbol	op -> operands [ 1 ] . immediate		3513354						
ANR	3513950	Symbol	modrm		3513354						
ANR	3513951	Symbol	* * op		3513354						
ANR	3513952	Symbol	* op -> operands		3513354						
ANR	3513953	Symbol	o -> offset		3513354						
ANR	3513954	Symbol	op -> operands [ 0 ] . type		3513354						
ANR	3513955	Symbol	op -> operands [ 0 ] . reg		3513354						
ANR	3513956	Symbol	* * o		3513354						
ANR	3513957	Symbol	OT_MEMORY		3513354						
ANR	3513958	Symbol	a -> bits		3513354						
ANR	3513959	Symbol	OT_BYTE		3513354						
ANR	3513960	Symbol	strcmp		3513354						
ANR	3513961	Symbol	a		3513354						
ANR	3513962	Symbol	op		3513354						
ANR	3513963	Symbol	o -> offset_sign		3513354						
ANR	3513964	Symbol	OT_WORD		3513354						
ANR	3513965	Symbol	OT_GPREG		3513354						
ANR	3513966	Symbol	mod_byte		3513354						
ANR	3513967	Symbol	reg0		3513354						
ANR	3513968	Symbol	* a		3513354						
ANR	3513969	Symbol	* * op -> operands		3513354						
ANR	3513970	Symbol	l		3513354						
ANR	3513971	Symbol	o		3513354						
ANR	3513972	Symbol	o -> regs		3513354						
ANR	3513973	Symbol	immediate		3513354						
ANR	3513974	Symbol	op -> operands [ 1 ] . type		3513354						
ANR	3513975	Symbol	op -> operands [ 1 ] . sign		3513354						
ANR	3513976	Symbol	* op -> operands [ 0 ] . regs		3513354						
ANR	3513977	Symbol	* o		3513354						
ANR	3513978	Symbol	* * * op		3513354						
ANR	3513979	Symbol	op -> operands		3513354						
ANR	3513980	Symbol	* data		3513354						
ANR	3513981	Symbol	op -> operands [ 0 ] . regs		3513354						
ANR	3513982	Symbol	OT_DWORD		3513354						
ANR	3513983	Function	process_1byte_op	354:0:9768:13765							
ANR	3513984	FunctionDef	"process_1byte_op (RAsm * a , ut8 * data , const Opcode * op , int op1)"		3513983	0					
ANR	3513985	CompoundStatement		354:75:9843:13765	3513983	0					
ANR	3513986	ExpressionStatement	is_valid_registers ( op )	355:1:9846:9869	3513983	0	True				
ANR	3513987	CallExpression	is_valid_registers ( op )		3513983	0					
ANR	3513988	Callee	is_valid_registers		3513983	0					
ANR	3513989	Identifier	is_valid_registers		3513983	0					
ANR	3513990	ArgumentList	op		3513983	1					
ANR	3513991	Argument	op		3513983	0					
ANR	3513992	Identifier	op		3513983	0					
ANR	3513993	IdentifierDeclStatement	int l = 0 ;	356:1:9872:9881	3513983	1	True				
ANR	3513994	IdentifierDecl	l = 0		3513983	0					
ANR	3513995	IdentifierDeclType	int		3513983	0					
ANR	3513996	Identifier	l		3513983	1					
ANR	3513997	AssignmentExpression	l = 0		3513983	2		=			
ANR	3513998	Identifier	l		3513983	0					
ANR	3513999	PrimaryExpression	0		3513983	1					
ANR	3514000	IdentifierDeclStatement	int mod_byte = 0 ;	357:1:9884:9900	3513983	2	True				
ANR	3514001	IdentifierDecl	mod_byte = 0		3513983	0					
ANR	3514002	IdentifierDeclType	int		3513983	0					
ANR	3514003	Identifier	mod_byte		3513983	1					
ANR	3514004	AssignmentExpression	mod_byte = 0		3513983	2		=			
ANR	3514005	Identifier	mod_byte		3513983	0					
ANR	3514006	PrimaryExpression	0		3513983	1					
ANR	3514007	IdentifierDeclStatement	int reg = 0 ;	358:1:9903:9914	3513983	3	True				
ANR	3514008	IdentifierDecl	reg = 0		3513983	0					
ANR	3514009	IdentifierDeclType	int		3513983	0					
ANR	3514010	Identifier	reg		3513983	1					
ANR	3514011	AssignmentExpression	reg = 0		3513983	2		=			
ANR	3514012	Identifier	reg		3513983	0					
ANR	3514013	PrimaryExpression	0		3513983	1					
ANR	3514014	IdentifierDeclStatement	int rm = 0 ;	359:1:9917:9927	3513983	4	True				
ANR	3514015	IdentifierDecl	rm = 0		3513983	0					
ANR	3514016	IdentifierDeclType	int		3513983	0					
ANR	3514017	Identifier	rm		3513983	1					
ANR	3514018	AssignmentExpression	rm = 0		3513983	2		=			
ANR	3514019	Identifier	rm		3513983	0					
ANR	3514020	PrimaryExpression	0		3513983	1					
ANR	3514021	IdentifierDeclStatement	int rex = 0 ;	360:1:9930:9941	3513983	5	True				
ANR	3514022	IdentifierDecl	rex = 0		3513983	0					
ANR	3514023	IdentifierDeclType	int		3513983	0					
ANR	3514024	Identifier	rex		3513983	1					
ANR	3514025	AssignmentExpression	rex = 0		3513983	2		=			
ANR	3514026	Identifier	rex		3513983	0					
ANR	3514027	PrimaryExpression	0		3513983	1					
ANR	3514028	IdentifierDeclStatement	int mem_ref = 0 ;	361:1:9944:9959	3513983	6	True				
ANR	3514029	IdentifierDecl	mem_ref = 0		3513983	0					
ANR	3514030	IdentifierDeclType	int		3513983	0					
ANR	3514031	Identifier	mem_ref		3513983	1					
ANR	3514032	AssignmentExpression	mem_ref = 0		3513983	2		=			
ANR	3514033	Identifier	mem_ref		3513983	0					
ANR	3514034	PrimaryExpression	0		3513983	1					
ANR	3514035	IdentifierDeclStatement	st32 offset = 0 ;	362:1:9962:9977	3513983	7	True				
ANR	3514036	IdentifierDecl	offset = 0		3513983	0					
ANR	3514037	IdentifierDeclType	st32		3513983	0					
ANR	3514038	Identifier	offset		3513983	1					
ANR	3514039	AssignmentExpression	offset = 0		3513983	2		=			
ANR	3514040	Identifier	offset		3513983	0					
ANR	3514041	PrimaryExpression	0		3513983	1					
ANR	3514042	IdentifierDeclStatement	int ebp_reg = 0 ;	363:1:9980:9995	3513983	8	True				
ANR	3514043	IdentifierDecl	ebp_reg = 0		3513983	0					
ANR	3514044	IdentifierDeclType	int		3513983	0					
ANR	3514045	Identifier	ebp_reg		3513983	1					
ANR	3514046	AssignmentExpression	ebp_reg = 0		3513983	2		=			
ANR	3514047	Identifier	ebp_reg		3513983	0					
ANR	3514048	PrimaryExpression	0		3513983	1					
ANR	3514049	IfStatement	if ( ! op -> operands [ 1 ] . is_good_flag )		3513983	9					
ANR	3514050	Condition	! op -> operands [ 1 ] . is_good_flag	365:5:10003:10031	3513983	0	True				
ANR	3514051	UnaryOperationExpression	! op -> operands [ 1 ] . is_good_flag		3513983	0					
ANR	3514052	UnaryOperator	!		3513983	0					
ANR	3514053	MemberAccess	op -> operands [ 1 ] . is_good_flag		3513983	1					
ANR	3514054	ArrayIndexing	op -> operands [ 1 ]		3513983	0					
ANR	3514055	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514056	Identifier	op		3513983	0					
ANR	3514057	Identifier	operands		3513983	1					
ANR	3514058	PrimaryExpression	1		3513983	1					
ANR	3514059	Identifier	is_good_flag		3513983	1					
ANR	3514060	CompoundStatement		12:36:190:190	3513983	1					
ANR	3514061	ReturnStatement	return - 1 ;	366:2:10038:10047	3513983	0	True				
ANR	3514062	UnaryOperationExpression	- 1		3513983	0					
ANR	3514063	UnaryOperator	-		3513983	0					
ANR	3514064	PrimaryExpression	1		3513983	1					
ANR	3514065	IfStatement	if ( op -> operands [ 0 ] . reg == X86R_AL && op -> operands [ 1 ] . type & OT_CONSTANT )		3513983	10					
ANR	3514066	Condition	op -> operands [ 0 ] . reg == X86R_AL && op -> operands [ 1 ] . type & OT_CONSTANT	369:5:10058:10125	3513983	0	True				
ANR	3514067	AndExpression	op -> operands [ 0 ] . reg == X86R_AL && op -> operands [ 1 ] . type & OT_CONSTANT		3513983	0		&&			
ANR	3514068	EqualityExpression	op -> operands [ 0 ] . reg == X86R_AL		3513983	0		==			
ANR	3514069	MemberAccess	op -> operands [ 0 ] . reg		3513983	0					
ANR	3514070	ArrayIndexing	op -> operands [ 0 ]		3513983	0					
ANR	3514071	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514072	Identifier	op		3513983	0					
ANR	3514073	Identifier	operands		3513983	1					
ANR	3514074	PrimaryExpression	0		3513983	1					
ANR	3514075	Identifier	reg		3513983	1					
ANR	3514076	Identifier	X86R_AL		3513983	1					
ANR	3514077	BitAndExpression	op -> operands [ 1 ] . type & OT_CONSTANT		3513983	1		&			
ANR	3514078	MemberAccess	op -> operands [ 1 ] . type		3513983	0					
ANR	3514079	ArrayIndexing	op -> operands [ 1 ]		3513983	0					
ANR	3514080	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514081	Identifier	op		3513983	0					
ANR	3514082	Identifier	operands		3513983	1					
ANR	3514083	PrimaryExpression	1		3513983	1					
ANR	3514084	Identifier	type		3513983	1					
ANR	3514085	Identifier	OT_CONSTANT		3513983	1					
ANR	3514086	CompoundStatement		16:75:284:284	3513983	1					
ANR	3514087	ExpressionStatement	data [ l ++ ] = op1 + 4	370:2:10132:10151	3513983	0	True				
ANR	3514088	AssignmentExpression	data [ l ++ ] = op1 + 4		3513983	0		=			
ANR	3514089	ArrayIndexing	data [ l ++ ]		3513983	0					
ANR	3514090	Identifier	data		3513983	0					
ANR	3514091	PostIncDecOperationExpression	l ++		3513983	1					
ANR	3514092	Identifier	l		3513983	0					
ANR	3514093	IncDec	++		3513983	1					
ANR	3514094	AdditiveExpression	op1 + 4		3513983	1		+			
ANR	3514095	Identifier	op1		3513983	0					
ANR	3514096	PrimaryExpression	4		3513983	1					
ANR	3514097	ExpressionStatement	data [ l ++ ] = op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign	371:2:10155:10215	3513983	1	True				
ANR	3514098	AssignmentExpression	data [ l ++ ] = op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign		3513983	0		=			
ANR	3514099	ArrayIndexing	data [ l ++ ]		3513983	0					
ANR	3514100	Identifier	data		3513983	0					
ANR	3514101	PostIncDecOperationExpression	l ++		3513983	1					
ANR	3514102	Identifier	l		3513983	0					
ANR	3514103	IncDec	++		3513983	1					
ANR	3514104	MultiplicativeExpression	op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign		3513983	1		*			
ANR	3514105	MemberAccess	op -> operands [ 1 ] . immediate		3513983	0					
ANR	3514106	ArrayIndexing	op -> operands [ 1 ]		3513983	0					
ANR	3514107	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514108	Identifier	op		3513983	0					
ANR	3514109	Identifier	operands		3513983	1					
ANR	3514110	PrimaryExpression	1		3513983	1					
ANR	3514111	Identifier	immediate		3513983	1					
ANR	3514112	MemberAccess	op -> operands [ 1 ] . sign		3513983	1					
ANR	3514113	ArrayIndexing	op -> operands [ 1 ]		3513983	0					
ANR	3514114	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514115	Identifier	op		3513983	0					
ANR	3514116	Identifier	operands		3513983	1					
ANR	3514117	PrimaryExpression	1		3513983	1					
ANR	3514118	Identifier	sign		3513983	1					
ANR	3514119	ReturnStatement	return l ;	372:2:10219:10227	3513983	2	True				
ANR	3514120	Identifier	l		3513983	0					
ANR	3514121	IfStatement	if ( a -> bits == 64 )		3513983	11					
ANR	3514122	Condition	a -> bits == 64	375:5:10238:10250	3513983	0	True				
ANR	3514123	EqualityExpression	a -> bits == 64		3513983	0		==			
ANR	3514124	PtrMemberAccess	a -> bits		3513983	0					
ANR	3514125	Identifier	a		3513983	0					
ANR	3514126	Identifier	bits		3513983	1					
ANR	3514127	PrimaryExpression	64		3513983	1					
ANR	3514128	CompoundStatement		22:20:409:409	3513983	1					
ANR	3514129	IfStatement	if ( ! ( op -> operands [ 0 ] . type & op -> operands [ 1 ] . type ) )		3513983	0					
ANR	3514130	Condition	! ( op -> operands [ 0 ] . type & op -> operands [ 1 ] . type )	376:6:10261:10306	3513983	0	True				
ANR	3514131	UnaryOperationExpression	! ( op -> operands [ 0 ] . type & op -> operands [ 1 ] . type )		3513983	0					
ANR	3514132	UnaryOperator	!		3513983	0					
ANR	3514133	BitAndExpression	op -> operands [ 0 ] . type & op -> operands [ 1 ] . type		3513983	1		&			
ANR	3514134	MemberAccess	op -> operands [ 0 ] . type		3513983	0					
ANR	3514135	ArrayIndexing	op -> operands [ 0 ]		3513983	0					
ANR	3514136	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514137	Identifier	op		3513983	0					
ANR	3514138	Identifier	operands		3513983	1					
ANR	3514139	PrimaryExpression	0		3513983	1					
ANR	3514140	Identifier	type		3513983	1					
ANR	3514141	MemberAccess	op -> operands [ 1 ] . type		3513983	1					
ANR	3514142	ArrayIndexing	op -> operands [ 1 ]		3513983	0					
ANR	3514143	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514144	Identifier	op		3513983	0					
ANR	3514145	Identifier	operands		3513983	1					
ANR	3514146	PrimaryExpression	1		3513983	1					
ANR	3514147	Identifier	type		3513983	1					
ANR	3514148	CompoundStatement		23:54:465:465	3513983	1					
ANR	3514149	ReturnStatement	return - 1 ;	377:3:10314:10323	3513983	0	True				
ANR	3514150	UnaryOperationExpression	- 1		3513983	0					
ANR	3514151	UnaryOperator	-		3513983	0					
ANR	3514152	PrimaryExpression	1		3513983	1					
ANR	3514153	IfStatement	if ( a -> bits == 64 && ( ( op -> operands [ 0 ] . type & OT_QWORD ) | ( op -> operands [ 1 ] . type & OT_QWORD ) ) )		3513983	12					
ANR	3514154	Condition	a -> bits == 64 && ( ( op -> operands [ 0 ] . type & OT_QWORD ) | ( op -> operands [ 1 ] . type & OT_QWORD ) )	381:5:10338:10425	3513983	0	True				
ANR	3514155	AndExpression	a -> bits == 64 && ( ( op -> operands [ 0 ] . type & OT_QWORD ) | ( op -> operands [ 1 ] . type & OT_QWORD ) )		3513983	0		&&			
ANR	3514156	EqualityExpression	a -> bits == 64		3513983	0		==			
ANR	3514157	PtrMemberAccess	a -> bits		3513983	0					
ANR	3514158	Identifier	a		3513983	0					
ANR	3514159	Identifier	bits		3513983	1					
ANR	3514160	PrimaryExpression	64		3513983	1					
ANR	3514161	InclusiveOrExpression	( op -> operands [ 0 ] . type & OT_QWORD ) | ( op -> operands [ 1 ] . type & OT_QWORD )		3513983	1		|			
ANR	3514162	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		3513983	0		&			
ANR	3514163	MemberAccess	op -> operands [ 0 ] . type		3513983	0					
ANR	3514164	ArrayIndexing	op -> operands [ 0 ]		3513983	0					
ANR	3514165	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514166	Identifier	op		3513983	0					
ANR	3514167	Identifier	operands		3513983	1					
ANR	3514168	PrimaryExpression	0		3513983	1					
ANR	3514169	Identifier	type		3513983	1					
ANR	3514170	Identifier	OT_QWORD		3513983	1					
ANR	3514171	BitAndExpression	op -> operands [ 1 ] . type & OT_QWORD		3513983	1		&			
ANR	3514172	MemberAccess	op -> operands [ 1 ] . type		3513983	0					
ANR	3514173	ArrayIndexing	op -> operands [ 1 ]		3513983	0					
ANR	3514174	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514175	Identifier	op		3513983	0					
ANR	3514176	Identifier	operands		3513983	1					
ANR	3514177	PrimaryExpression	1		3513983	1					
ANR	3514178	Identifier	type		3513983	1					
ANR	3514179	Identifier	OT_QWORD		3513983	1					
ANR	3514180	CompoundStatement		28:95:584:584	3513983	1					
ANR	3514181	IfStatement	if ( op -> operands [ 0 ] . extended )		3513983	0					
ANR	3514182	Condition	op -> operands [ 0 ] . extended	382:6:10436:10459	3513983	0	True				
ANR	3514183	MemberAccess	op -> operands [ 0 ] . extended		3513983	0					
ANR	3514184	ArrayIndexing	op -> operands [ 0 ]		3513983	0					
ANR	3514185	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514186	Identifier	op		3513983	0					
ANR	3514187	Identifier	operands		3513983	1					
ANR	3514188	PrimaryExpression	0		3513983	1					
ANR	3514189	Identifier	extended		3513983	1					
ANR	3514190	CompoundStatement		29:32:618:618	3513983	1					
ANR	3514191	ExpressionStatement	rex = 1	383:4:10468:10475	3513983	0	True				
ANR	3514192	AssignmentExpression	rex = 1		3513983	0		=			
ANR	3514193	Identifier	rex		3513983	0					
ANR	3514194	PrimaryExpression	1		3513983	1					
ANR	3514195	IfStatement	if ( op -> operands [ 1 ] . extended )		3513983	1					
ANR	3514196	Condition	op -> operands [ 1 ] . extended	385:6:10487:10510	3513983	0	True				
ANR	3514197	MemberAccess	op -> operands [ 1 ] . extended		3513983	0					
ANR	3514198	ArrayIndexing	op -> operands [ 1 ]		3513983	0					
ANR	3514199	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514200	Identifier	op		3513983	0					
ANR	3514201	Identifier	operands		3513983	1					
ANR	3514202	PrimaryExpression	1		3513983	1					
ANR	3514203	Identifier	extended		3513983	1					
ANR	3514204	CompoundStatement		32:32:669:669	3513983	1					
ANR	3514205	ExpressionStatement	rex += 4	386:3:10518:10526	3513983	0	True				
ANR	3514206	AssignmentExpression	rex += 4		3513983	0		+=			
ANR	3514207	Identifier	rex		3513983	0					
ANR	3514208	PrimaryExpression	4		3513983	1					
ANR	3514209	ExpressionStatement	data [ l ++ ] = 0x48 | rex	388:2:10534:10556	3513983	2	True				
ANR	3514210	AssignmentExpression	data [ l ++ ] = 0x48 | rex		3513983	0		=			
ANR	3514211	ArrayIndexing	data [ l ++ ]		3513983	0					
ANR	3514212	Identifier	data		3513983	0					
ANR	3514213	PostIncDecOperationExpression	l ++		3513983	1					
ANR	3514214	Identifier	l		3513983	0					
ANR	3514215	IncDec	++		3513983	1					
ANR	3514216	InclusiveOrExpression	0x48 | rex		3513983	1		|			
ANR	3514217	PrimaryExpression	0x48		3513983	0					
ANR	3514218	Identifier	rex		3513983	1					
ANR	3514219	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 1 ] . type & OT_REGALL )		3513983	13					
ANR	3514220	Condition	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 1 ] . type & OT_REGALL	391:5:10567:10634	3513983	0	True				
ANR	3514221	AndExpression	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 1 ] . type & OT_REGALL		3513983	0		&&			
ANR	3514222	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3513983	0		&			
ANR	3514223	MemberAccess	op -> operands [ 0 ] . type		3513983	0					
ANR	3514224	ArrayIndexing	op -> operands [ 0 ]		3513983	0					
ANR	3514225	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514226	Identifier	op		3513983	0					
ANR	3514227	Identifier	operands		3513983	1					
ANR	3514228	PrimaryExpression	0		3513983	1					
ANR	3514229	Identifier	type		3513983	1					
ANR	3514230	Identifier	OT_MEMORY		3513983	1					
ANR	3514231	BitAndExpression	op -> operands [ 1 ] . type & OT_REGALL		3513983	1		&			
ANR	3514232	MemberAccess	op -> operands [ 1 ] . type		3513983	0					
ANR	3514233	ArrayIndexing	op -> operands [ 1 ]		3513983	0					
ANR	3514234	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514235	Identifier	op		3513983	0					
ANR	3514236	Identifier	operands		3513983	1					
ANR	3514237	PrimaryExpression	1		3513983	1					
ANR	3514238	Identifier	type		3513983	1					
ANR	3514239	Identifier	OT_REGALL		3513983	1					
ANR	3514240	CompoundStatement		38:75:793:793	3513983	1					
ANR	3514241	IfStatement	if ( a -> bits == 64 && ( op -> operands [ 0 ] . type & OT_DWORD ) && ( op -> operands [ 1 ] . type & OT_DWORD ) )		3513983	0					
ANR	3514242	Condition	a -> bits == 64 && ( op -> operands [ 0 ] . type & OT_DWORD ) && ( op -> operands [ 1 ] . type & OT_DWORD )	392:6:10645:10737	3513983	0	True				
ANR	3514243	AndExpression	a -> bits == 64 && ( op -> operands [ 0 ] . type & OT_DWORD ) && ( op -> operands [ 1 ] . type & OT_DWORD )		3513983	0		&&			
ANR	3514244	EqualityExpression	a -> bits == 64		3513983	0		==			
ANR	3514245	PtrMemberAccess	a -> bits		3513983	0					
ANR	3514246	Identifier	a		3513983	0					
ANR	3514247	Identifier	bits		3513983	1					
ANR	3514248	PrimaryExpression	64		3513983	1					
ANR	3514249	AndExpression	( op -> operands [ 0 ] . type & OT_DWORD ) && ( op -> operands [ 1 ] . type & OT_DWORD )		3513983	1		&&			
ANR	3514250	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		3513983	0		&			
ANR	3514251	MemberAccess	op -> operands [ 0 ] . type		3513983	0					
ANR	3514252	ArrayIndexing	op -> operands [ 0 ]		3513983	0					
ANR	3514253	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514254	Identifier	op		3513983	0					
ANR	3514255	Identifier	operands		3513983	1					
ANR	3514256	PrimaryExpression	0		3513983	1					
ANR	3514257	Identifier	type		3513983	1					
ANR	3514258	Identifier	OT_DWORD		3513983	1					
ANR	3514259	BitAndExpression	op -> operands [ 1 ] . type & OT_DWORD		3513983	1		&			
ANR	3514260	MemberAccess	op -> operands [ 1 ] . type		3513983	0					
ANR	3514261	ArrayIndexing	op -> operands [ 1 ]		3513983	0					
ANR	3514262	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514263	Identifier	op		3513983	0					
ANR	3514264	Identifier	operands		3513983	1					
ANR	3514265	PrimaryExpression	1		3513983	1					
ANR	3514266	Identifier	type		3513983	1					
ANR	3514267	Identifier	OT_DWORD		3513983	1					
ANR	3514268	CompoundStatement		40:41:896:896	3513983	1					
ANR	3514269	ExpressionStatement	data [ l ++ ] = 0x67	394:3:10745:10761	3513983	0	True				
ANR	3514270	AssignmentExpression	data [ l ++ ] = 0x67		3513983	0		=			
ANR	3514271	ArrayIndexing	data [ l ++ ]		3513983	0					
ANR	3514272	Identifier	data		3513983	0					
ANR	3514273	PostIncDecOperationExpression	l ++		3513983	1					
ANR	3514274	Identifier	l		3513983	0					
ANR	3514275	IncDec	++		3513983	1					
ANR	3514276	PrimaryExpression	0x67		3513983	1					
ANR	3514277	IfStatement	if ( op -> operands [ 0 ] . type & OT_BYTE && op -> operands [ 1 ] . type & OT_BYTE )		3513983	1					
ANR	3514278	Condition	op -> operands [ 0 ] . type & OT_BYTE && op -> operands [ 1 ] . type & OT_BYTE	396:6:10773:10836	3513983	0	True				
ANR	3514279	AndExpression	op -> operands [ 0 ] . type & OT_BYTE && op -> operands [ 1 ] . type & OT_BYTE		3513983	0		&&			
ANR	3514280	BitAndExpression	op -> operands [ 0 ] . type & OT_BYTE		3513983	0		&			
ANR	3514281	MemberAccess	op -> operands [ 0 ] . type		3513983	0					
ANR	3514282	ArrayIndexing	op -> operands [ 0 ]		3513983	0					
ANR	3514283	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514284	Identifier	op		3513983	0					
ANR	3514285	Identifier	operands		3513983	1					
ANR	3514286	PrimaryExpression	0		3513983	1					
ANR	3514287	Identifier	type		3513983	1					
ANR	3514288	Identifier	OT_BYTE		3513983	1					
ANR	3514289	BitAndExpression	op -> operands [ 1 ] . type & OT_BYTE		3513983	1		&			
ANR	3514290	MemberAccess	op -> operands [ 1 ] . type		3513983	0					
ANR	3514291	ArrayIndexing	op -> operands [ 1 ]		3513983	0					
ANR	3514292	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514293	Identifier	op		3513983	0					
ANR	3514294	Identifier	operands		3513983	1					
ANR	3514295	PrimaryExpression	1		3513983	1					
ANR	3514296	Identifier	type		3513983	1					
ANR	3514297	Identifier	OT_BYTE		3513983	1					
ANR	3514298	CompoundStatement		43:72:995:995	3513983	1					
ANR	3514299	ExpressionStatement	data [ l ++ ] = op1	397:3:10844:10859	3513983	0	True				
ANR	3514300	AssignmentExpression	data [ l ++ ] = op1		3513983	0		=			
ANR	3514301	ArrayIndexing	data [ l ++ ]		3513983	0					
ANR	3514302	Identifier	data		3513983	0					
ANR	3514303	PostIncDecOperationExpression	l ++		3513983	1					
ANR	3514304	Identifier	l		3513983	0					
ANR	3514305	IncDec	++		3513983	1					
ANR	3514306	Identifier	op1		3513983	1					
ANR	3514307	ElseStatement	else		3513983	0					
ANR	3514308	IfStatement	if ( op -> operands [ 0 ] . type & ( OT_DWORD | OT_QWORD ) && op -> operands [ 1 ] . type & ( OT_DWORD | OT_QWORD ) )		3513983	0					
ANR	3514309	Condition	op -> operands [ 0 ] . type & ( OT_DWORD | OT_QWORD ) && op -> operands [ 1 ] . type & ( OT_DWORD | OT_QWORD )	398:13:10874:10971	3513983	0	True				
ANR	3514310	AndExpression	op -> operands [ 0 ] . type & ( OT_DWORD | OT_QWORD ) && op -> operands [ 1 ] . type & ( OT_DWORD | OT_QWORD )		3513983	0		&&			
ANR	3514311	BitAndExpression	op -> operands [ 0 ] . type & ( OT_DWORD | OT_QWORD )		3513983	0		&			
ANR	3514312	MemberAccess	op -> operands [ 0 ] . type		3513983	0					
ANR	3514313	ArrayIndexing	op -> operands [ 0 ]		3513983	0					
ANR	3514314	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514315	Identifier	op		3513983	0					
ANR	3514316	Identifier	operands		3513983	1					
ANR	3514317	PrimaryExpression	0		3513983	1					
ANR	3514318	Identifier	type		3513983	1					
ANR	3514319	InclusiveOrExpression	OT_DWORD | OT_QWORD		3513983	1		|			
ANR	3514320	Identifier	OT_DWORD		3513983	0					
ANR	3514321	Identifier	OT_QWORD		3513983	1					
ANR	3514322	BitAndExpression	op -> operands [ 1 ] . type & ( OT_DWORD | OT_QWORD )		3513983	1		&			
ANR	3514323	MemberAccess	op -> operands [ 1 ] . type		3513983	0					
ANR	3514324	ArrayIndexing	op -> operands [ 1 ]		3513983	0					
ANR	3514325	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514326	Identifier	op		3513983	0					
ANR	3514327	Identifier	operands		3513983	1					
ANR	3514328	PrimaryExpression	1		3513983	1					
ANR	3514329	Identifier	type		3513983	1					
ANR	3514330	InclusiveOrExpression	OT_DWORD | OT_QWORD		3513983	1		|			
ANR	3514331	Identifier	OT_DWORD		3513983	0					
ANR	3514332	Identifier	OT_QWORD		3513983	1					
ANR	3514333	CompoundStatement		46:52:1130:1130	3513983	1					
ANR	3514334	ExpressionStatement	data [ l ++ ] = op1 + 0x1	400:3:10979:11000	3513983	0	True				
ANR	3514335	AssignmentExpression	data [ l ++ ] = op1 + 0x1		3513983	0		=			
ANR	3514336	ArrayIndexing	data [ l ++ ]		3513983	0					
ANR	3514337	Identifier	data		3513983	0					
ANR	3514338	PostIncDecOperationExpression	l ++		3513983	1					
ANR	3514339	Identifier	l		3513983	0					
ANR	3514340	IncDec	++		3513983	1					
ANR	3514341	AdditiveExpression	op1 + 0x1		3513983	1		+			
ANR	3514342	Identifier	op1		3513983	0					
ANR	3514343	PrimaryExpression	0x1		3513983	1					
ANR	3514344	ElseStatement	else		3513983	0					
ANR	3514345	CompoundStatement		48:9:1167:1167	3513983	0					
ANR	3514346	ExpressionStatement	"eprintf ( ""Error: mismatched operand sizes\\n"" )"	402:3:11016:11061	3513983	0	True				
ANR	3514347	CallExpression	"eprintf ( ""Error: mismatched operand sizes\\n"" )"		3513983	0					
ANR	3514348	Callee	eprintf		3513983	0					
ANR	3514349	Identifier	eprintf		3513983	0					
ANR	3514350	ArgumentList	"""Error: mismatched operand sizes\\n"""		3513983	1					
ANR	3514351	Argument	"""Error: mismatched operand sizes\\n"""		3513983	0					
ANR	3514352	PrimaryExpression	"""Error: mismatched operand sizes\\n"""		3513983	0					
ANR	3514353	ReturnStatement	return - 1 ;	403:3:11066:11075	3513983	1	True				
ANR	3514354	UnaryOperationExpression	- 1		3513983	0					
ANR	3514355	UnaryOperator	-		3513983	0					
ANR	3514356	PrimaryExpression	1		3513983	1					
ANR	3514357	ExpressionStatement	reg = op -> operands [ 1 ] . reg	405:2:11083:11108	3513983	2	True				
ANR	3514358	AssignmentExpression	reg = op -> operands [ 1 ] . reg		3513983	0		=			
ANR	3514359	Identifier	reg		3513983	0					
ANR	3514360	MemberAccess	op -> operands [ 1 ] . reg		3513983	1					
ANR	3514361	ArrayIndexing	op -> operands [ 1 ]		3513983	0					
ANR	3514362	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514363	Identifier	op		3513983	0					
ANR	3514364	Identifier	operands		3513983	1					
ANR	3514365	PrimaryExpression	1		3513983	1					
ANR	3514366	Identifier	reg		3513983	1					
ANR	3514367	ExpressionStatement	rm = op -> operands [ 0 ] . regs [ 0 ]	406:2:11112:11140	3513983	3	True				
ANR	3514368	AssignmentExpression	rm = op -> operands [ 0 ] . regs [ 0 ]		3513983	0		=			
ANR	3514369	Identifier	rm		3513983	0					
ANR	3514370	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3513983	1					
ANR	3514371	MemberAccess	op -> operands [ 0 ] . regs		3513983	0					
ANR	3514372	ArrayIndexing	op -> operands [ 0 ]		3513983	0					
ANR	3514373	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514374	Identifier	op		3513983	0					
ANR	3514375	Identifier	operands		3513983	1					
ANR	3514376	PrimaryExpression	0		3513983	1					
ANR	3514377	Identifier	regs		3513983	1					
ANR	3514378	PrimaryExpression	0		3513983	1					
ANR	3514379	ExpressionStatement	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign	407:2:11144:11205	3513983	4	True				
ANR	3514380	AssignmentExpression	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		3513983	0		=			
ANR	3514381	Identifier	offset		3513983	0					
ANR	3514382	MultiplicativeExpression	op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		3513983	1		*			
ANR	3514383	MemberAccess	op -> operands [ 0 ] . offset		3513983	0					
ANR	3514384	ArrayIndexing	op -> operands [ 0 ]		3513983	0					
ANR	3514385	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514386	Identifier	op		3513983	0					
ANR	3514387	Identifier	operands		3513983	1					
ANR	3514388	PrimaryExpression	0		3513983	1					
ANR	3514389	Identifier	offset		3513983	1					
ANR	3514390	MemberAccess	op -> operands [ 0 ] . offset_sign		3513983	1					
ANR	3514391	ArrayIndexing	op -> operands [ 0 ]		3513983	0					
ANR	3514392	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514393	Identifier	op		3513983	0					
ANR	3514394	Identifier	operands		3513983	1					
ANR	3514395	PrimaryExpression	0		3513983	1					
ANR	3514396	Identifier	offset_sign		3513983	1					
ANR	3514397	IfStatement	if ( rm == - 1 )		3513983	5					
ANR	3514398	Condition	rm == - 1	408:6:11213:11220	3513983	0	True				
ANR	3514399	EqualityExpression	rm == - 1		3513983	0		==			
ANR	3514400	Identifier	rm		3513983	0					
ANR	3514401	UnaryOperationExpression	- 1		3513983	1					
ANR	3514402	UnaryOperator	-		3513983	0					
ANR	3514403	PrimaryExpression	1		3513983	1					
ANR	3514404	CompoundStatement		55:16:1379:1379	3513983	1					
ANR	3514405	ExpressionStatement	rm = 5	409:3:11228:11234	3513983	0	True				
ANR	3514406	AssignmentExpression	rm = 5		3513983	0		=			
ANR	3514407	Identifier	rm		3513983	0					
ANR	3514408	PrimaryExpression	5		3513983	1					
ANR	3514409	ExpressionStatement	mem_ref = 1	410:3:11239:11250	3513983	1	True				
ANR	3514410	AssignmentExpression	mem_ref = 1		3513983	0		=			
ANR	3514411	Identifier	mem_ref		3513983	0					
ANR	3514412	PrimaryExpression	1		3513983	1					
ANR	3514413	ElseStatement	else		3513983	0					
ANR	3514414	CompoundStatement		58:9:1417:1417	3513983	0					
ANR	3514415	IfStatement	if ( offset )		3513983	0					
ANR	3514416	Condition	offset	412:7:11270:11275	3513983	0	True				
ANR	3514417	Identifier	offset		3513983	0					
ANR	3514418	CompoundStatement		59:15:1434:1434	3513983	1					
ANR	3514419	ExpressionStatement	mod_byte = 1	413:4:11284:11296	3513983	0	True				
ANR	3514420	AssignmentExpression	mod_byte = 1		3513983	0		=			
ANR	3514421	Identifier	mod_byte		3513983	0					
ANR	3514422	PrimaryExpression	1		3513983	1					
ANR	3514423	IfStatement	if ( offset < ST8_MIN || offset > ST8_MAX )		3513983	1					
ANR	3514424	Condition	offset < ST8_MIN || offset > ST8_MAX	414:8:11306:11341	3513983	0	True				
ANR	3514425	OrExpression	offset < ST8_MIN || offset > ST8_MAX		3513983	0		||			
ANR	3514426	RelationalExpression	offset < ST8_MIN		3513983	0		<			
ANR	3514427	Identifier	offset		3513983	0					
ANR	3514428	Identifier	ST8_MIN		3513983	1					
ANR	3514429	RelationalExpression	offset > ST8_MAX		3513983	1		>			
ANR	3514430	Identifier	offset		3513983	0					
ANR	3514431	Identifier	ST8_MAX		3513983	1					
ANR	3514432	CompoundStatement		61:46:1500:1500	3513983	1					
ANR	3514433	ExpressionStatement	mod_byte = 2	415:5:11351:11363	3513983	0	True				
ANR	3514434	AssignmentExpression	mod_byte = 2		3513983	0		=			
ANR	3514435	Identifier	mod_byte		3513983	0					
ANR	3514436	PrimaryExpression	2		3513983	1					
ANR	3514437	ElseStatement	else		3513983	0					
ANR	3514438	IfStatement	if ( op -> operands [ 0 ] . regs [ 1 ] != X86R_UNDEFINED )		3513983	0					
ANR	3514439	Condition	op -> operands [ 0 ] . regs [ 1 ] != X86R_UNDEFINED	417:14:11385:11425	3513983	0	True				
ANR	3514440	EqualityExpression	op -> operands [ 0 ] . regs [ 1 ] != X86R_UNDEFINED		3513983	0		!=			
ANR	3514441	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		3513983	0					
ANR	3514442	MemberAccess	op -> operands [ 0 ] . regs		3513983	0					
ANR	3514443	ArrayIndexing	op -> operands [ 0 ]		3513983	0					
ANR	3514444	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514445	Identifier	op		3513983	0					
ANR	3514446	Identifier	operands		3513983	1					
ANR	3514447	PrimaryExpression	0		3513983	1					
ANR	3514448	Identifier	regs		3513983	1					
ANR	3514449	PrimaryExpression	1		3513983	1					
ANR	3514450	Identifier	X86R_UNDEFINED		3513983	1					
ANR	3514451	CompoundStatement		64:57:1584:1584	3513983	1					
ANR	3514452	ExpressionStatement	rm = 4	418:4:11434:11440	3513983	0	True				
ANR	3514453	AssignmentExpression	rm = 4		3513983	0		=			
ANR	3514454	Identifier	rm		3513983	0					
ANR	3514455	PrimaryExpression	4		3513983	1					
ANR	3514456	ExpressionStatement	offset = op -> operands [ 0 ] . regs [ 1 ] << 3	419:4:11446:11483	3513983	1	True				
ANR	3514457	AssignmentExpression	offset = op -> operands [ 0 ] . regs [ 1 ] << 3		3513983	0		=			
ANR	3514458	Identifier	offset		3513983	0					
ANR	3514459	ShiftExpression	op -> operands [ 0 ] . regs [ 1 ] << 3		3513983	1		<<			
ANR	3514460	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		3513983	0					
ANR	3514461	MemberAccess	op -> operands [ 0 ] . regs		3513983	0					
ANR	3514462	ArrayIndexing	op -> operands [ 0 ]		3513983	0					
ANR	3514463	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514464	Identifier	op		3513983	0					
ANR	3514465	Identifier	operands		3513983	1					
ANR	3514466	PrimaryExpression	0		3513983	1					
ANR	3514467	Identifier	regs		3513983	1					
ANR	3514468	PrimaryExpression	1		3513983	1					
ANR	3514469	PrimaryExpression	3		3513983	1					
ANR	3514470	ElseStatement	else		3513983	0					
ANR	3514471	IfStatement	if ( op -> operands [ 0 ] . type & OT_REGALL )		3513983	0					
ANR	3514472	Condition	op -> operands [ 0 ] . type & OT_REGALL	422:12:11506:11537	3513983	0	True				
ANR	3514473	BitAndExpression	op -> operands [ 0 ] . type & OT_REGALL		3513983	0		&			
ANR	3514474	MemberAccess	op -> operands [ 0 ] . type		3513983	0					
ANR	3514475	ArrayIndexing	op -> operands [ 0 ]		3513983	0					
ANR	3514476	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514477	Identifier	op		3513983	0					
ANR	3514478	Identifier	operands		3513983	1					
ANR	3514479	PrimaryExpression	0		3513983	1					
ANR	3514480	Identifier	type		3513983	1					
ANR	3514481	Identifier	OT_REGALL		3513983	1					
ANR	3514482	CompoundStatement		69:46:1696:1696	3513983	1					
ANR	3514483	IfStatement	if ( op -> operands [ 1 ] . type & OT_MEMORY )		3513983	0					
ANR	3514484	Condition	op -> operands [ 1 ] . type & OT_MEMORY	423:6:11548:11579	3513983	0	True				
ANR	3514485	BitAndExpression	op -> operands [ 1 ] . type & OT_MEMORY		3513983	0		&			
ANR	3514486	MemberAccess	op -> operands [ 1 ] . type		3513983	0					
ANR	3514487	ArrayIndexing	op -> operands [ 1 ]		3513983	0					
ANR	3514488	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514489	Identifier	op		3513983	0					
ANR	3514490	Identifier	operands		3513983	1					
ANR	3514491	PrimaryExpression	1		3513983	1					
ANR	3514492	Identifier	type		3513983	1					
ANR	3514493	Identifier	OT_MEMORY		3513983	1					
ANR	3514494	CompoundStatement		70:40:1738:1738	3513983	1					
ANR	3514495	IfStatement	if ( op -> operands [ 0 ] . type & OT_BYTE && op -> operands [ 1 ] . type & OT_BYTE )		3513983	0					
ANR	3514496	Condition	op -> operands [ 0 ] . type & OT_BYTE && op -> operands [ 1 ] . type & OT_BYTE	424:7:11591:11654	3513983	0	True				
ANR	3514497	AndExpression	op -> operands [ 0 ] . type & OT_BYTE && op -> operands [ 1 ] . type & OT_BYTE		3513983	0		&&			
ANR	3514498	BitAndExpression	op -> operands [ 0 ] . type & OT_BYTE		3513983	0		&			
ANR	3514499	MemberAccess	op -> operands [ 0 ] . type		3513983	0					
ANR	3514500	ArrayIndexing	op -> operands [ 0 ]		3513983	0					
ANR	3514501	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514502	Identifier	op		3513983	0					
ANR	3514503	Identifier	operands		3513983	1					
ANR	3514504	PrimaryExpression	0		3513983	1					
ANR	3514505	Identifier	type		3513983	1					
ANR	3514506	Identifier	OT_BYTE		3513983	1					
ANR	3514507	BitAndExpression	op -> operands [ 1 ] . type & OT_BYTE		3513983	1		&			
ANR	3514508	MemberAccess	op -> operands [ 1 ] . type		3513983	0					
ANR	3514509	ArrayIndexing	op -> operands [ 1 ]		3513983	0					
ANR	3514510	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514511	Identifier	op		3513983	0					
ANR	3514512	Identifier	operands		3513983	1					
ANR	3514513	PrimaryExpression	1		3513983	1					
ANR	3514514	Identifier	type		3513983	1					
ANR	3514515	Identifier	OT_BYTE		3513983	1					
ANR	3514516	CompoundStatement		71:73:1813:1813	3513983	1					
ANR	3514517	ExpressionStatement	data [ l ++ ] = op1 + 0x2	425:4:11663:11684	3513983	0	True				
ANR	3514518	AssignmentExpression	data [ l ++ ] = op1 + 0x2		3513983	0		=			
ANR	3514519	ArrayIndexing	data [ l ++ ]		3513983	0					
ANR	3514520	Identifier	data		3513983	0					
ANR	3514521	PostIncDecOperationExpression	l ++		3513983	1					
ANR	3514522	Identifier	l		3513983	0					
ANR	3514523	IncDec	++		3513983	1					
ANR	3514524	AdditiveExpression	op1 + 0x2		3513983	1		+			
ANR	3514525	Identifier	op1		3513983	0					
ANR	3514526	PrimaryExpression	0x2		3513983	1					
ANR	3514527	ElseStatement	else		3513983	0					
ANR	3514528	IfStatement	if ( op -> operands [ 0 ] . type & ( OT_DWORD | OT_QWORD ) && op -> operands [ 1 ] . type & ( OT_DWORD | OT_QWORD ) )		3513983	0					
ANR	3514529	Condition	op -> operands [ 0 ] . type & ( OT_DWORD | OT_QWORD ) && op -> operands [ 1 ] . type & ( OT_DWORD | OT_QWORD )	426:14:11700:11799	3513983	0	True				
ANR	3514530	AndExpression	op -> operands [ 0 ] . type & ( OT_DWORD | OT_QWORD ) && op -> operands [ 1 ] . type & ( OT_DWORD | OT_QWORD )		3513983	0		&&			
ANR	3514531	BitAndExpression	op -> operands [ 0 ] . type & ( OT_DWORD | OT_QWORD )		3513983	0		&			
ANR	3514532	MemberAccess	op -> operands [ 0 ] . type		3513983	0					
ANR	3514533	ArrayIndexing	op -> operands [ 0 ]		3513983	0					
ANR	3514534	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514535	Identifier	op		3513983	0					
ANR	3514536	Identifier	operands		3513983	1					
ANR	3514537	PrimaryExpression	0		3513983	1					
ANR	3514538	Identifier	type		3513983	1					
ANR	3514539	InclusiveOrExpression	OT_DWORD | OT_QWORD		3513983	1		|			
ANR	3514540	Identifier	OT_DWORD		3513983	0					
ANR	3514541	Identifier	OT_QWORD		3513983	1					
ANR	3514542	BitAndExpression	op -> operands [ 1 ] . type & ( OT_DWORD | OT_QWORD )		3513983	1		&			
ANR	3514543	MemberAccess	op -> operands [ 1 ] . type		3513983	0					
ANR	3514544	ArrayIndexing	op -> operands [ 1 ]		3513983	0					
ANR	3514545	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514546	Identifier	op		3513983	0					
ANR	3514547	Identifier	operands		3513983	1					
ANR	3514548	PrimaryExpression	1		3513983	1					
ANR	3514549	Identifier	type		3513983	1					
ANR	3514550	InclusiveOrExpression	OT_DWORD | OT_QWORD		3513983	1		|			
ANR	3514551	Identifier	OT_DWORD		3513983	0					
ANR	3514552	Identifier	OT_QWORD		3513983	1					
ANR	3514553	CompoundStatement		74:54:1958:1958	3513983	1					
ANR	3514554	ExpressionStatement	data [ l ++ ] = op1 + 0x3	428:4:11808:11829	3513983	0	True				
ANR	3514555	AssignmentExpression	data [ l ++ ] = op1 + 0x3		3513983	0		=			
ANR	3514556	ArrayIndexing	data [ l ++ ]		3513983	0					
ANR	3514557	Identifier	data		3513983	0					
ANR	3514558	PostIncDecOperationExpression	l ++		3513983	1					
ANR	3514559	Identifier	l		3513983	0					
ANR	3514560	IncDec	++		3513983	1					
ANR	3514561	AdditiveExpression	op1 + 0x3		3513983	1		+			
ANR	3514562	Identifier	op1		3513983	0					
ANR	3514563	PrimaryExpression	0x3		3513983	1					
ANR	3514564	ElseStatement	else		3513983	0					
ANR	3514565	CompoundStatement		76:10:1997:1997	3513983	0					
ANR	3514566	ExpressionStatement	"eprintf ( ""Error: mismatched operand sizes\\n"" )"	430:4:11847:11892	3513983	0	True				
ANR	3514567	CallExpression	"eprintf ( ""Error: mismatched operand sizes\\n"" )"		3513983	0					
ANR	3514568	Callee	eprintf		3513983	0					
ANR	3514569	Identifier	eprintf		3513983	0					
ANR	3514570	ArgumentList	"""Error: mismatched operand sizes\\n"""		3513983	1					
ANR	3514571	Argument	"""Error: mismatched operand sizes\\n"""		3513983	0					
ANR	3514572	PrimaryExpression	"""Error: mismatched operand sizes\\n"""		3513983	0					
ANR	3514573	ReturnStatement	return - 1 ;	431:4:11898:11907	3513983	1	True				
ANR	3514574	UnaryOperationExpression	- 1		3513983	0					
ANR	3514575	UnaryOperator	-		3513983	0					
ANR	3514576	PrimaryExpression	1		3513983	1					
ANR	3514577	ExpressionStatement	reg = op -> operands [ 0 ] . reg	433:3:11917:11942	3513983	1	True				
ANR	3514578	AssignmentExpression	reg = op -> operands [ 0 ] . reg		3513983	0		=			
ANR	3514579	Identifier	reg		3513983	0					
ANR	3514580	MemberAccess	op -> operands [ 0 ] . reg		3513983	1					
ANR	3514581	ArrayIndexing	op -> operands [ 0 ]		3513983	0					
ANR	3514582	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514583	Identifier	op		3513983	0					
ANR	3514584	Identifier	operands		3513983	1					
ANR	3514585	PrimaryExpression	0		3513983	1					
ANR	3514586	Identifier	reg		3513983	1					
ANR	3514587	ExpressionStatement	rm = op -> operands [ 1 ] . regs [ 0 ]	434:3:11947:11975	3513983	2	True				
ANR	3514588	AssignmentExpression	rm = op -> operands [ 1 ] . regs [ 0 ]		3513983	0		=			
ANR	3514589	Identifier	rm		3513983	0					
ANR	3514590	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3513983	1					
ANR	3514591	MemberAccess	op -> operands [ 1 ] . regs		3513983	0					
ANR	3514592	ArrayIndexing	op -> operands [ 1 ]		3513983	0					
ANR	3514593	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514594	Identifier	op		3513983	0					
ANR	3514595	Identifier	operands		3513983	1					
ANR	3514596	PrimaryExpression	1		3513983	1					
ANR	3514597	Identifier	regs		3513983	1					
ANR	3514598	PrimaryExpression	0		3513983	1					
ANR	3514599	IfStatement	if ( op -> operands [ 1 ] . scale [ 0 ] > 1 )		3513983	3					
ANR	3514600	Condition	op -> operands [ 1 ] . scale [ 0 ] > 1	436:7:11985:12012	3513983	0	True				
ANR	3514601	RelationalExpression	op -> operands [ 1 ] . scale [ 0 ] > 1		3513983	0		>			
ANR	3514602	ArrayIndexing	op -> operands [ 1 ] . scale [ 0 ]		3513983	0					
ANR	3514603	MemberAccess	op -> operands [ 1 ] . scale		3513983	0					
ANR	3514604	ArrayIndexing	op -> operands [ 1 ]		3513983	0					
ANR	3514605	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514606	Identifier	op		3513983	0					
ANR	3514607	Identifier	operands		3513983	1					
ANR	3514608	PrimaryExpression	1		3513983	1					
ANR	3514609	Identifier	scale		3513983	1					
ANR	3514610	PrimaryExpression	0		3513983	1					
ANR	3514611	PrimaryExpression	1		3513983	1					
ANR	3514612	CompoundStatement		83:37:2171:2171	3513983	1					
ANR	3514613	IfStatement	if ( op -> operands [ 1 ] . regs [ 1 ] != X86R_UNDEFINED )		3513983	0					
ANR	3514614	Condition	op -> operands [ 1 ] . regs [ 1 ] != X86R_UNDEFINED	437:8:12025:12065	3513983	0	True				
ANR	3514615	EqualityExpression	op -> operands [ 1 ] . regs [ 1 ] != X86R_UNDEFINED		3513983	0		!=			
ANR	3514616	ArrayIndexing	op -> operands [ 1 ] . regs [ 1 ]		3513983	0					
ANR	3514617	MemberAccess	op -> operands [ 1 ] . regs		3513983	0					
ANR	3514618	ArrayIndexing	op -> operands [ 1 ]		3513983	0					
ANR	3514619	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514620	Identifier	op		3513983	0					
ANR	3514621	Identifier	operands		3513983	1					
ANR	3514622	PrimaryExpression	1		3513983	1					
ANR	3514623	Identifier	regs		3513983	1					
ANR	3514624	PrimaryExpression	1		3513983	1					
ANR	3514625	Identifier	X86R_UNDEFINED		3513983	1					
ANR	3514626	CompoundStatement		84:51:2224:2224	3513983	1					
ANR	3514627	ExpressionStatement	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | 4	438:5:12075:12115	3513983	0	True				
ANR	3514628	AssignmentExpression	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | 4		3513983	0		=			
ANR	3514629	ArrayIndexing	data [ l ++ ]		3513983	0					
ANR	3514630	Identifier	data		3513983	0					
ANR	3514631	PostIncDecOperationExpression	l ++		3513983	1					
ANR	3514632	Identifier	l		3513983	0					
ANR	3514633	IncDec	++		3513983	1					
ANR	3514634	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | 4		3513983	1		|			
ANR	3514635	ShiftExpression	op -> operands [ 0 ] . reg << 3		3513983	0		<<			
ANR	3514636	MemberAccess	op -> operands [ 0 ] . reg		3513983	0					
ANR	3514637	ArrayIndexing	op -> operands [ 0 ]		3513983	0					
ANR	3514638	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514639	Identifier	op		3513983	0					
ANR	3514640	Identifier	operands		3513983	1					
ANR	3514641	PrimaryExpression	0		3513983	1					
ANR	3514642	Identifier	reg		3513983	1					
ANR	3514643	PrimaryExpression	3		3513983	1					
ANR	3514644	PrimaryExpression	4		3513983	1					
ANR	3514645	ExpressionStatement	data [ l ++ ] = getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 6 | op -> operands [ 1 ] . regs [ 0 ] << 3 | op -> operands [ 1 ] . regs [ 1 ]	439:5:12122:12249	3513983	1	True				
ANR	3514646	AssignmentExpression	data [ l ++ ] = getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 6 | op -> operands [ 1 ] . regs [ 0 ] << 3 | op -> operands [ 1 ] . regs [ 1 ]		3513983	0		=			
ANR	3514647	ArrayIndexing	data [ l ++ ]		3513983	0					
ANR	3514648	Identifier	data		3513983	0					
ANR	3514649	PostIncDecOperationExpression	l ++		3513983	1					
ANR	3514650	Identifier	l		3513983	0					
ANR	3514651	IncDec	++		3513983	1					
ANR	3514652	InclusiveOrExpression	getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 6 | op -> operands [ 1 ] . regs [ 0 ] << 3 | op -> operands [ 1 ] . regs [ 1 ]		3513983	1		|			
ANR	3514653	ShiftExpression	getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 6		3513983	0		<<			
ANR	3514654	CallExpression	getsib ( op -> operands [ 1 ] . scale [ 0 ] )		3513983	0					
ANR	3514655	Callee	getsib		3513983	0					
ANR	3514656	Identifier	getsib		3513983	0					
ANR	3514657	ArgumentList	op -> operands [ 1 ] . scale [ 0 ]		3513983	1					
ANR	3514658	Argument	op -> operands [ 1 ] . scale [ 0 ]		3513983	0					
ANR	3514659	ArrayIndexing	op -> operands [ 1 ] . scale [ 0 ]		3513983	0					
ANR	3514660	MemberAccess	op -> operands [ 1 ] . scale		3513983	0					
ANR	3514661	ArrayIndexing	op -> operands [ 1 ]		3513983	0					
ANR	3514662	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514663	Identifier	op		3513983	0					
ANR	3514664	Identifier	operands		3513983	1					
ANR	3514665	PrimaryExpression	1		3513983	1					
ANR	3514666	Identifier	scale		3513983	1					
ANR	3514667	PrimaryExpression	0		3513983	1					
ANR	3514668	PrimaryExpression	6		3513983	1					
ANR	3514669	InclusiveOrExpression	op -> operands [ 1 ] . regs [ 0 ] << 3 | op -> operands [ 1 ] . regs [ 1 ]		3513983	1		|			
ANR	3514670	ShiftExpression	op -> operands [ 1 ] . regs [ 0 ] << 3		3513983	0		<<			
ANR	3514671	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3513983	0					
ANR	3514672	MemberAccess	op -> operands [ 1 ] . regs		3513983	0					
ANR	3514673	ArrayIndexing	op -> operands [ 1 ]		3513983	0					
ANR	3514674	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514675	Identifier	op		3513983	0					
ANR	3514676	Identifier	operands		3513983	1					
ANR	3514677	PrimaryExpression	1		3513983	1					
ANR	3514678	Identifier	regs		3513983	1					
ANR	3514679	PrimaryExpression	0		3513983	1					
ANR	3514680	PrimaryExpression	3		3513983	1					
ANR	3514681	ArrayIndexing	op -> operands [ 1 ] . regs [ 1 ]		3513983	1					
ANR	3514682	MemberAccess	op -> operands [ 1 ] . regs		3513983	0					
ANR	3514683	ArrayIndexing	op -> operands [ 1 ]		3513983	0					
ANR	3514684	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514685	Identifier	op		3513983	0					
ANR	3514686	Identifier	operands		3513983	1					
ANR	3514687	PrimaryExpression	1		3513983	1					
ANR	3514688	Identifier	regs		3513983	1					
ANR	3514689	PrimaryExpression	1		3513983	1					
ANR	3514690	ReturnStatement	return l ;	442:5:12256:12264	3513983	2	True				
ANR	3514691	Identifier	l		3513983	0					
ANR	3514692	ExpressionStatement	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | 4	444:4:12276:12316	3513983	1	True				
ANR	3514693	AssignmentExpression	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | 4		3513983	0		=			
ANR	3514694	ArrayIndexing	data [ l ++ ]		3513983	0					
ANR	3514695	Identifier	data		3513983	0					
ANR	3514696	PostIncDecOperationExpression	l ++		3513983	1					
ANR	3514697	Identifier	l		3513983	0					
ANR	3514698	IncDec	++		3513983	1					
ANR	3514699	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | 4		3513983	1		|			
ANR	3514700	ShiftExpression	op -> operands [ 0 ] . reg << 3		3513983	0		<<			
ANR	3514701	MemberAccess	op -> operands [ 0 ] . reg		3513983	0					
ANR	3514702	ArrayIndexing	op -> operands [ 0 ]		3513983	0					
ANR	3514703	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514704	Identifier	op		3513983	0					
ANR	3514705	Identifier	operands		3513983	1					
ANR	3514706	PrimaryExpression	0		3513983	1					
ANR	3514707	Identifier	reg		3513983	1					
ANR	3514708	PrimaryExpression	3		3513983	1					
ANR	3514709	PrimaryExpression	4		3513983	1					
ANR	3514710	ExpressionStatement	data [ l ++ ] = getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 6 | op -> operands [ 1 ] . regs [ 0 ] << 3 | 5	445:4:12333:12418	3513983	2	True				
ANR	3514711	AssignmentExpression	data [ l ++ ] = getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 6 | op -> operands [ 1 ] . regs [ 0 ] << 3 | 5		3513983	0		=			
ANR	3514712	ArrayIndexing	data [ l ++ ]		3513983	0					
ANR	3514713	Identifier	data		3513983	0					
ANR	3514714	PostIncDecOperationExpression	l ++		3513983	1					
ANR	3514715	Identifier	l		3513983	0					
ANR	3514716	IncDec	++		3513983	1					
ANR	3514717	InclusiveOrExpression	getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 6 | op -> operands [ 1 ] . regs [ 0 ] << 3 | 5		3513983	1		|			
ANR	3514718	ShiftExpression	getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 6		3513983	0		<<			
ANR	3514719	CallExpression	getsib ( op -> operands [ 1 ] . scale [ 0 ] )		3513983	0					
ANR	3514720	Callee	getsib		3513983	0					
ANR	3514721	Identifier	getsib		3513983	0					
ANR	3514722	ArgumentList	op -> operands [ 1 ] . scale [ 0 ]		3513983	1					
ANR	3514723	Argument	op -> operands [ 1 ] . scale [ 0 ]		3513983	0					
ANR	3514724	ArrayIndexing	op -> operands [ 1 ] . scale [ 0 ]		3513983	0					
ANR	3514725	MemberAccess	op -> operands [ 1 ] . scale		3513983	0					
ANR	3514726	ArrayIndexing	op -> operands [ 1 ]		3513983	0					
ANR	3514727	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514728	Identifier	op		3513983	0					
ANR	3514729	Identifier	operands		3513983	1					
ANR	3514730	PrimaryExpression	1		3513983	1					
ANR	3514731	Identifier	scale		3513983	1					
ANR	3514732	PrimaryExpression	0		3513983	1					
ANR	3514733	PrimaryExpression	6		3513983	1					
ANR	3514734	InclusiveOrExpression	op -> operands [ 1 ] . regs [ 0 ] << 3 | 5		3513983	1		|			
ANR	3514735	ShiftExpression	op -> operands [ 1 ] . regs [ 0 ] << 3		3513983	0		<<			
ANR	3514736	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3513983	0					
ANR	3514737	MemberAccess	op -> operands [ 1 ] . regs		3513983	0					
ANR	3514738	ArrayIndexing	op -> operands [ 1 ]		3513983	0					
ANR	3514739	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514740	Identifier	op		3513983	0					
ANR	3514741	Identifier	operands		3513983	1					
ANR	3514742	PrimaryExpression	1		3513983	1					
ANR	3514743	Identifier	regs		3513983	1					
ANR	3514744	PrimaryExpression	0		3513983	1					
ANR	3514745	PrimaryExpression	3		3513983	1					
ANR	3514746	PrimaryExpression	5		3513983	1					
ANR	3514747	ExpressionStatement	data [ l ++ ] = op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign	446:4:12424:12488	3513983	3	True				
ANR	3514748	AssignmentExpression	data [ l ++ ] = op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign		3513983	0		=			
ANR	3514749	ArrayIndexing	data [ l ++ ]		3513983	0					
ANR	3514750	Identifier	data		3513983	0					
ANR	3514751	PostIncDecOperationExpression	l ++		3513983	1					
ANR	3514752	Identifier	l		3513983	0					
ANR	3514753	IncDec	++		3513983	1					
ANR	3514754	MultiplicativeExpression	op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign		3513983	1		*			
ANR	3514755	MemberAccess	op -> operands [ 1 ] . offset		3513983	0					
ANR	3514756	ArrayIndexing	op -> operands [ 1 ]		3513983	0					
ANR	3514757	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514758	Identifier	op		3513983	0					
ANR	3514759	Identifier	operands		3513983	1					
ANR	3514760	PrimaryExpression	1		3513983	1					
ANR	3514761	Identifier	offset		3513983	1					
ANR	3514762	MemberAccess	op -> operands [ 1 ] . offset_sign		3513983	1					
ANR	3514763	ArrayIndexing	op -> operands [ 1 ]		3513983	0					
ANR	3514764	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514765	Identifier	op		3513983	0					
ANR	3514766	Identifier	operands		3513983	1					
ANR	3514767	PrimaryExpression	1		3513983	1					
ANR	3514768	Identifier	offset_sign		3513983	1					
ANR	3514769	ExpressionStatement	data [ l ++ ] = 0	447:4:12494:12507	3513983	4	True				
ANR	3514770	AssignmentExpression	data [ l ++ ] = 0		3513983	0		=			
ANR	3514771	ArrayIndexing	data [ l ++ ]		3513983	0					
ANR	3514772	Identifier	data		3513983	0					
ANR	3514773	PostIncDecOperationExpression	l ++		3513983	1					
ANR	3514774	Identifier	l		3513983	0					
ANR	3514775	IncDec	++		3513983	1					
ANR	3514776	PrimaryExpression	0		3513983	1					
ANR	3514777	ExpressionStatement	data [ l ++ ] = 0	448:4:12513:12526	3513983	5	True				
ANR	3514778	AssignmentExpression	data [ l ++ ] = 0		3513983	0		=			
ANR	3514779	ArrayIndexing	data [ l ++ ]		3513983	0					
ANR	3514780	Identifier	data		3513983	0					
ANR	3514781	PostIncDecOperationExpression	l ++		3513983	1					
ANR	3514782	Identifier	l		3513983	0					
ANR	3514783	IncDec	++		3513983	1					
ANR	3514784	PrimaryExpression	0		3513983	1					
ANR	3514785	ExpressionStatement	data [ l ++ ] = 0	449:4:12532:12545	3513983	6	True				
ANR	3514786	AssignmentExpression	data [ l ++ ] = 0		3513983	0		=			
ANR	3514787	ArrayIndexing	data [ l ++ ]		3513983	0					
ANR	3514788	Identifier	data		3513983	0					
ANR	3514789	PostIncDecOperationExpression	l ++		3513983	1					
ANR	3514790	Identifier	l		3513983	0					
ANR	3514791	IncDec	++		3513983	1					
ANR	3514792	PrimaryExpression	0		3513983	1					
ANR	3514793	ReturnStatement	return l ;	450:4:12551:12559	3513983	7	True				
ANR	3514794	Identifier	l		3513983	0					
ANR	3514795	ExpressionStatement	offset = op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign	452:3:12569:12630	3513983	4	True				
ANR	3514796	AssignmentExpression	offset = op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign		3513983	0		=			
ANR	3514797	Identifier	offset		3513983	0					
ANR	3514798	MultiplicativeExpression	op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign		3513983	1		*			
ANR	3514799	MemberAccess	op -> operands [ 1 ] . offset		3513983	0					
ANR	3514800	ArrayIndexing	op -> operands [ 1 ]		3513983	0					
ANR	3514801	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514802	Identifier	op		3513983	0					
ANR	3514803	Identifier	operands		3513983	1					
ANR	3514804	PrimaryExpression	1		3513983	1					
ANR	3514805	Identifier	offset		3513983	1					
ANR	3514806	MemberAccess	op -> operands [ 1 ] . offset_sign		3513983	1					
ANR	3514807	ArrayIndexing	op -> operands [ 1 ]		3513983	0					
ANR	3514808	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514809	Identifier	op		3513983	0					
ANR	3514810	Identifier	operands		3513983	1					
ANR	3514811	PrimaryExpression	1		3513983	1					
ANR	3514812	Identifier	offset_sign		3513983	1					
ANR	3514813	IfStatement	if ( offset )		3513983	5					
ANR	3514814	Condition	offset	453:7:12639:12644	3513983	0	True				
ANR	3514815	Identifier	offset		3513983	0					
ANR	3514816	CompoundStatement		100:15:2803:2803	3513983	1					
ANR	3514817	ExpressionStatement	mod_byte = 1	454:4:12653:12665	3513983	0	True				
ANR	3514818	AssignmentExpression	mod_byte = 1		3513983	0		=			
ANR	3514819	Identifier	mod_byte		3513983	0					
ANR	3514820	PrimaryExpression	1		3513983	1					
ANR	3514821	IfStatement	if ( offset < ST8_MIN || offset > ST8_MAX )		3513983	1					
ANR	3514822	Condition	offset < ST8_MIN || offset > ST8_MAX	455:8:12675:12710	3513983	0	True				
ANR	3514823	OrExpression	offset < ST8_MIN || offset > ST8_MAX		3513983	0		||			
ANR	3514824	RelationalExpression	offset < ST8_MIN		3513983	0		<			
ANR	3514825	Identifier	offset		3513983	0					
ANR	3514826	Identifier	ST8_MIN		3513983	1					
ANR	3514827	RelationalExpression	offset > ST8_MAX		3513983	1		>			
ANR	3514828	Identifier	offset		3513983	0					
ANR	3514829	Identifier	ST8_MAX		3513983	1					
ANR	3514830	CompoundStatement		102:46:2869:2869	3513983	1					
ANR	3514831	ExpressionStatement	mod_byte = 2	456:5:12720:12732	3513983	0	True				
ANR	3514832	AssignmentExpression	mod_byte = 2		3513983	0		=			
ANR	3514833	Identifier	mod_byte		3513983	0					
ANR	3514834	PrimaryExpression	2		3513983	1					
ANR	3514835	ElseStatement	else		3513983	0					
ANR	3514836	IfStatement	if ( op -> operands [ 1 ] . type & OT_REGALL )		3513983	0					
ANR	3514837	Condition	op -> operands [ 1 ] . type & OT_REGALL	460:13:12759:12790	3513983	0	True				
ANR	3514838	BitAndExpression	op -> operands [ 1 ] . type & OT_REGALL		3513983	0		&			
ANR	3514839	MemberAccess	op -> operands [ 1 ] . type		3513983	0					
ANR	3514840	ArrayIndexing	op -> operands [ 1 ]		3513983	0					
ANR	3514841	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514842	Identifier	op		3513983	0					
ANR	3514843	Identifier	operands		3513983	1					
ANR	3514844	PrimaryExpression	1		3513983	1					
ANR	3514845	Identifier	type		3513983	1					
ANR	3514846	Identifier	OT_REGALL		3513983	1					
ANR	3514847	CompoundStatement		107:47:2949:2949	3513983	1					
ANR	3514848	IfStatement	if ( op -> operands [ 0 ] . type & OT_BYTE && op -> operands [ 1 ] . type & OT_BYTE )		3513983	0					
ANR	3514849	Condition	op -> operands [ 0 ] . type & OT_BYTE && op -> operands [ 1 ] . type & OT_BYTE	461:7:12802:12865	3513983	0	True				
ANR	3514850	AndExpression	op -> operands [ 0 ] . type & OT_BYTE && op -> operands [ 1 ] . type & OT_BYTE		3513983	0		&&			
ANR	3514851	BitAndExpression	op -> operands [ 0 ] . type & OT_BYTE		3513983	0		&			
ANR	3514852	MemberAccess	op -> operands [ 0 ] . type		3513983	0					
ANR	3514853	ArrayIndexing	op -> operands [ 0 ]		3513983	0					
ANR	3514854	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514855	Identifier	op		3513983	0					
ANR	3514856	Identifier	operands		3513983	1					
ANR	3514857	PrimaryExpression	0		3513983	1					
ANR	3514858	Identifier	type		3513983	1					
ANR	3514859	Identifier	OT_BYTE		3513983	1					
ANR	3514860	BitAndExpression	op -> operands [ 1 ] . type & OT_BYTE		3513983	1		&			
ANR	3514861	MemberAccess	op -> operands [ 1 ] . type		3513983	0					
ANR	3514862	ArrayIndexing	op -> operands [ 1 ]		3513983	0					
ANR	3514863	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514864	Identifier	op		3513983	0					
ANR	3514865	Identifier	operands		3513983	1					
ANR	3514866	PrimaryExpression	1		3513983	1					
ANR	3514867	Identifier	type		3513983	1					
ANR	3514868	Identifier	OT_BYTE		3513983	1					
ANR	3514869	CompoundStatement		108:73:3024:3024	3513983	1					
ANR	3514870	ExpressionStatement	data [ l ++ ] = op1	462:4:12874:12889	3513983	0	True				
ANR	3514871	AssignmentExpression	data [ l ++ ] = op1		3513983	0		=			
ANR	3514872	ArrayIndexing	data [ l ++ ]		3513983	0					
ANR	3514873	Identifier	data		3513983	0					
ANR	3514874	PostIncDecOperationExpression	l ++		3513983	1					
ANR	3514875	Identifier	l		3513983	0					
ANR	3514876	IncDec	++		3513983	1					
ANR	3514877	Identifier	op1		3513983	1					
ANR	3514878	ElseStatement	else		3513983	0					
ANR	3514879	IfStatement	if ( op -> operands [ 0 ] . type & OT_DWORD && op -> operands [ 1 ] . type & OT_DWORD )		3513983	0					
ANR	3514880	Condition	op -> operands [ 0 ] . type & OT_DWORD && op -> operands [ 1 ] . type & OT_DWORD	463:14:12905:12970	3513983	0	True				
ANR	3514881	AndExpression	op -> operands [ 0 ] . type & OT_DWORD && op -> operands [ 1 ] . type & OT_DWORD		3513983	0		&&			
ANR	3514882	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		3513983	0		&			
ANR	3514883	MemberAccess	op -> operands [ 0 ] . type		3513983	0					
ANR	3514884	ArrayIndexing	op -> operands [ 0 ]		3513983	0					
ANR	3514885	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514886	Identifier	op		3513983	0					
ANR	3514887	Identifier	operands		3513983	1					
ANR	3514888	PrimaryExpression	0		3513983	1					
ANR	3514889	Identifier	type		3513983	1					
ANR	3514890	Identifier	OT_DWORD		3513983	1					
ANR	3514891	BitAndExpression	op -> operands [ 1 ] . type & OT_DWORD		3513983	1		&			
ANR	3514892	MemberAccess	op -> operands [ 1 ] . type		3513983	0					
ANR	3514893	ArrayIndexing	op -> operands [ 1 ]		3513983	0					
ANR	3514894	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514895	Identifier	op		3513983	0					
ANR	3514896	Identifier	operands		3513983	1					
ANR	3514897	PrimaryExpression	1		3513983	1					
ANR	3514898	Identifier	type		3513983	1					
ANR	3514899	Identifier	OT_DWORD		3513983	1					
ANR	3514900	CompoundStatement		110:82:3129:3129	3513983	1					
ANR	3514901	ExpressionStatement	data [ l ++ ] = op1 + 0x1	464:4:12979:13000	3513983	0	True				
ANR	3514902	AssignmentExpression	data [ l ++ ] = op1 + 0x1		3513983	0		=			
ANR	3514903	ArrayIndexing	data [ l ++ ]		3513983	0					
ANR	3514904	Identifier	data		3513983	0					
ANR	3514905	PostIncDecOperationExpression	l ++		3513983	1					
ANR	3514906	Identifier	l		3513983	0					
ANR	3514907	IncDec	++		3513983	1					
ANR	3514908	AdditiveExpression	op1 + 0x1		3513983	1		+			
ANR	3514909	Identifier	op1		3513983	0					
ANR	3514910	PrimaryExpression	0x1		3513983	1					
ANR	3514911	IfStatement	if ( a -> bits == 64 )		3513983	1					
ANR	3514912	Condition	a -> bits == 64	466:7:13014:13026	3513983	0	True				
ANR	3514913	EqualityExpression	a -> bits == 64		3513983	0		==			
ANR	3514914	PtrMemberAccess	a -> bits		3513983	0					
ANR	3514915	Identifier	a		3513983	0					
ANR	3514916	Identifier	bits		3513983	1					
ANR	3514917	PrimaryExpression	64		3513983	1					
ANR	3514918	CompoundStatement		113:22:3185:3185	3513983	1					
ANR	3514919	IfStatement	if ( op -> operands [ 0 ] . type & OT_QWORD && op -> operands [ 1 ] . type & OT_QWORD )		3513983	0					
ANR	3514920	Condition	op -> operands [ 0 ] . type & OT_QWORD && op -> operands [ 1 ] . type & OT_QWORD	467:8:13039:13109	3513983	0	True				
ANR	3514921	AndExpression	op -> operands [ 0 ] . type & OT_QWORD && op -> operands [ 1 ] . type & OT_QWORD		3513983	0		&&			
ANR	3514922	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		3513983	0		&			
ANR	3514923	MemberAccess	op -> operands [ 0 ] . type		3513983	0					
ANR	3514924	ArrayIndexing	op -> operands [ 0 ]		3513983	0					
ANR	3514925	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514926	Identifier	op		3513983	0					
ANR	3514927	Identifier	operands		3513983	1					
ANR	3514928	PrimaryExpression	0		3513983	1					
ANR	3514929	Identifier	type		3513983	1					
ANR	3514930	Identifier	OT_QWORD		3513983	1					
ANR	3514931	BitAndExpression	op -> operands [ 1 ] . type & OT_QWORD		3513983	1		&			
ANR	3514932	MemberAccess	op -> operands [ 1 ] . type		3513983	0					
ANR	3514933	ArrayIndexing	op -> operands [ 1 ]		3513983	0					
ANR	3514934	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514935	Identifier	op		3513983	0					
ANR	3514936	Identifier	operands		3513983	1					
ANR	3514937	PrimaryExpression	1		3513983	1					
ANR	3514938	Identifier	type		3513983	1					
ANR	3514939	Identifier	OT_QWORD		3513983	1					
ANR	3514940	CompoundStatement		115:38:3268:3268	3513983	1					
ANR	3514941	ExpressionStatement	data [ l ++ ] = op1 + 0x1	469:5:13119:13140	3513983	0	True				
ANR	3514942	AssignmentExpression	data [ l ++ ] = op1 + 0x1		3513983	0		=			
ANR	3514943	ArrayIndexing	data [ l ++ ]		3513983	0					
ANR	3514944	Identifier	data		3513983	0					
ANR	3514945	PostIncDecOperationExpression	l ++		3513983	1					
ANR	3514946	Identifier	l		3513983	0					
ANR	3514947	IncDec	++		3513983	1					
ANR	3514948	AdditiveExpression	op1 + 0x1		3513983	1		+			
ANR	3514949	Identifier	op1		3513983	0					
ANR	3514950	PrimaryExpression	0x1		3513983	1					
ANR	3514951	ExpressionStatement	mod_byte = 3	473:3:13157:13169	3513983	2	True				
ANR	3514952	AssignmentExpression	mod_byte = 3		3513983	0		=			
ANR	3514953	Identifier	mod_byte		3513983	0					
ANR	3514954	PrimaryExpression	3		3513983	1					
ANR	3514955	ExpressionStatement	reg = op -> operands [ 1 ] . reg	474:3:13174:13199	3513983	3	True				
ANR	3514956	AssignmentExpression	reg = op -> operands [ 1 ] . reg		3513983	0		=			
ANR	3514957	Identifier	reg		3513983	0					
ANR	3514958	MemberAccess	op -> operands [ 1 ] . reg		3513983	1					
ANR	3514959	ArrayIndexing	op -> operands [ 1 ]		3513983	0					
ANR	3514960	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514961	Identifier	op		3513983	0					
ANR	3514962	Identifier	operands		3513983	1					
ANR	3514963	PrimaryExpression	1		3513983	1					
ANR	3514964	Identifier	reg		3513983	1					
ANR	3514965	ExpressionStatement	rm = op -> operands [ 0 ] . reg	475:3:13204:13228	3513983	4	True				
ANR	3514966	AssignmentExpression	rm = op -> operands [ 0 ] . reg		3513983	0		=			
ANR	3514967	Identifier	rm		3513983	0					
ANR	3514968	MemberAccess	op -> operands [ 0 ] . reg		3513983	1					
ANR	3514969	ArrayIndexing	op -> operands [ 0 ]		3513983	0					
ANR	3514970	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514971	Identifier	op		3513983	0					
ANR	3514972	Identifier	operands		3513983	1					
ANR	3514973	PrimaryExpression	0		3513983	1					
ANR	3514974	Identifier	reg		3513983	1					
ANR	3514975	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_EBP || op -> operands [ 1 ] . regs [ 0 ] == X86R_EBP )		3513983	14					
ANR	3514976	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_EBP || op -> operands [ 1 ] . regs [ 0 ] == X86R_EBP	478:5:13242:13320	3513983	0	True				
ANR	3514977	OrExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_EBP || op -> operands [ 1 ] . regs [ 0 ] == X86R_EBP		3513983	0		||			
ANR	3514978	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_EBP		3513983	0		==			
ANR	3514979	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3513983	0					
ANR	3514980	MemberAccess	op -> operands [ 0 ] . regs		3513983	0					
ANR	3514981	ArrayIndexing	op -> operands [ 0 ]		3513983	0					
ANR	3514982	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514983	Identifier	op		3513983	0					
ANR	3514984	Identifier	operands		3513983	1					
ANR	3514985	PrimaryExpression	0		3513983	1					
ANR	3514986	Identifier	regs		3513983	1					
ANR	3514987	PrimaryExpression	0		3513983	1					
ANR	3514988	Identifier	X86R_EBP		3513983	1					
ANR	3514989	EqualityExpression	op -> operands [ 1 ] . regs [ 0 ] == X86R_EBP		3513983	1		==			
ANR	3514990	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3513983	0					
ANR	3514991	MemberAccess	op -> operands [ 1 ] . regs		3513983	0					
ANR	3514992	ArrayIndexing	op -> operands [ 1 ]		3513983	0					
ANR	3514993	PtrMemberAccess	op -> operands		3513983	0					
ANR	3514994	Identifier	op		3513983	0					
ANR	3514995	Identifier	operands		3513983	1					
ANR	3514996	PrimaryExpression	1		3513983	1					
ANR	3514997	Identifier	regs		3513983	1					
ANR	3514998	PrimaryExpression	0		3513983	1					
ANR	3514999	Identifier	X86R_EBP		3513983	1					
ANR	3515000	CompoundStatement		126:42:3479:3479	3513983	1					
ANR	3515001	ExpressionStatement	ebp_reg = 1	481:3:13343:13354	3513983	0	True				
ANR	3515002	AssignmentExpression	ebp_reg = 1		3513983	0		=			
ANR	3515003	Identifier	ebp_reg		3513983	0					
ANR	3515004	PrimaryExpression	1		3513983	1					
ANR	3515005	ExpressionStatement	data [ l ++ ] = mod_byte << 6 | reg << 3 | rm	483:1:13360:13401	3513983	15	True				
ANR	3515006	AssignmentExpression	data [ l ++ ] = mod_byte << 6 | reg << 3 | rm		3513983	0		=			
ANR	3515007	ArrayIndexing	data [ l ++ ]		3513983	0					
ANR	3515008	Identifier	data		3513983	0					
ANR	3515009	PostIncDecOperationExpression	l ++		3513983	1					
ANR	3515010	Identifier	l		3513983	0					
ANR	3515011	IncDec	++		3513983	1					
ANR	3515012	InclusiveOrExpression	mod_byte << 6 | reg << 3 | rm		3513983	1		|			
ANR	3515013	ShiftExpression	mod_byte << 6		3513983	0		<<			
ANR	3515014	Identifier	mod_byte		3513983	0					
ANR	3515015	PrimaryExpression	6		3513983	1					
ANR	3515016	InclusiveOrExpression	reg << 3 | rm		3513983	1		|			
ANR	3515017	ShiftExpression	reg << 3		3513983	0		<<			
ANR	3515018	Identifier	reg		3513983	0					
ANR	3515019	PrimaryExpression	3		3513983	1					
ANR	3515020	Identifier	rm		3513983	1					
ANR	3515021	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP || op -> operands [ 1 ] . regs [ 0 ] == X86R_ESP )		3513983	16					
ANR	3515022	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP || op -> operands [ 1 ] . regs [ 0 ] == X86R_ESP	485:5:13409:13487	3513983	0	True				
ANR	3515023	OrExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP || op -> operands [ 1 ] . regs [ 0 ] == X86R_ESP		3513983	0		||			
ANR	3515024	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP		3513983	0		==			
ANR	3515025	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3513983	0					
ANR	3515026	MemberAccess	op -> operands [ 0 ] . regs		3513983	0					
ANR	3515027	ArrayIndexing	op -> operands [ 0 ]		3513983	0					
ANR	3515028	PtrMemberAccess	op -> operands		3513983	0					
ANR	3515029	Identifier	op		3513983	0					
ANR	3515030	Identifier	operands		3513983	1					
ANR	3515031	PrimaryExpression	0		3513983	1					
ANR	3515032	Identifier	regs		3513983	1					
ANR	3515033	PrimaryExpression	0		3513983	1					
ANR	3515034	Identifier	X86R_ESP		3513983	1					
ANR	3515035	EqualityExpression	op -> operands [ 1 ] . regs [ 0 ] == X86R_ESP		3513983	1		==			
ANR	3515036	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3513983	0					
ANR	3515037	MemberAccess	op -> operands [ 1 ] . regs		3513983	0					
ANR	3515038	ArrayIndexing	op -> operands [ 1 ]		3513983	0					
ANR	3515039	PtrMemberAccess	op -> operands		3513983	0					
ANR	3515040	Identifier	op		3513983	0					
ANR	3515041	Identifier	operands		3513983	1					
ANR	3515042	PrimaryExpression	1		3513983	1					
ANR	3515043	Identifier	regs		3513983	1					
ANR	3515044	PrimaryExpression	0		3513983	1					
ANR	3515045	Identifier	X86R_ESP		3513983	1					
ANR	3515046	CompoundStatement		133:42:3646:3646	3513983	1					
ANR	3515047	ExpressionStatement	data [ l ++ ] = 0x24	487:3:13495:13511	3513983	0	True				
ANR	3515048	AssignmentExpression	data [ l ++ ] = 0x24		3513983	0		=			
ANR	3515049	ArrayIndexing	data [ l ++ ]		3513983	0					
ANR	3515050	Identifier	data		3513983	0					
ANR	3515051	PostIncDecOperationExpression	l ++		3513983	1					
ANR	3515052	Identifier	l		3513983	0					
ANR	3515053	IncDec	++		3513983	1					
ANR	3515054	PrimaryExpression	0x24		3513983	1					
ANR	3515055	IfStatement	if ( offset || mem_ref || ebp_reg )		3513983	17					
ANR	3515056	Condition	offset || mem_ref || ebp_reg	489:5:13521:13548	3513983	0	True				
ANR	3515057	OrExpression	offset || mem_ref || ebp_reg		3513983	0		||			
ANR	3515058	Identifier	offset		3513983	0					
ANR	3515059	OrExpression	mem_ref || ebp_reg		3513983	1		||			
ANR	3515060	Identifier	mem_ref		3513983	0					
ANR	3515061	Identifier	ebp_reg		3513983	1					
ANR	3515062	CompoundStatement		136:35:3707:3707	3513983	1					
ANR	3515063	ExpressionStatement	data [ l ++ ] = offset	491:2:13607:13625	3513983	0	True				
ANR	3515064	AssignmentExpression	data [ l ++ ] = offset		3513983	0		=			
ANR	3515065	ArrayIndexing	data [ l ++ ]		3513983	0					
ANR	3515066	Identifier	data		3513983	0					
ANR	3515067	PostIncDecOperationExpression	l ++		3513983	1					
ANR	3515068	Identifier	l		3513983	0					
ANR	3515069	IncDec	++		3513983	1					
ANR	3515070	Identifier	offset		3513983	1					
ANR	3515071	IfStatement	if ( mod_byte == 2 || mem_ref )		3513983	1					
ANR	3515072	Condition	mod_byte == 2 || mem_ref	492:6:13633:13656	3513983	0	True				
ANR	3515073	OrExpression	mod_byte == 2 || mem_ref		3513983	0		||			
ANR	3515074	EqualityExpression	mod_byte == 2		3513983	0		==			
ANR	3515075	Identifier	mod_byte		3513983	0					
ANR	3515076	PrimaryExpression	2		3513983	1					
ANR	3515077	Identifier	mem_ref		3513983	1					
ANR	3515078	CompoundStatement		139:32:3815:3815	3513983	1					
ANR	3515079	ExpressionStatement	data [ l ++ ] = offset >> 8	493:3:13664:13687	3513983	0	True				
ANR	3515080	AssignmentExpression	data [ l ++ ] = offset >> 8		3513983	0		=			
ANR	3515081	ArrayIndexing	data [ l ++ ]		3513983	0					
ANR	3515082	Identifier	data		3513983	0					
ANR	3515083	PostIncDecOperationExpression	l ++		3513983	1					
ANR	3515084	Identifier	l		3513983	0					
ANR	3515085	IncDec	++		3513983	1					
ANR	3515086	ShiftExpression	offset >> 8		3513983	1		>>			
ANR	3515087	Identifier	offset		3513983	0					
ANR	3515088	PrimaryExpression	8		3513983	1					
ANR	3515089	ExpressionStatement	data [ l ++ ] = offset >> 16	494:3:13692:13716	3513983	1	True				
ANR	3515090	AssignmentExpression	data [ l ++ ] = offset >> 16		3513983	0		=			
ANR	3515091	ArrayIndexing	data [ l ++ ]		3513983	0					
ANR	3515092	Identifier	data		3513983	0					
ANR	3515093	PostIncDecOperationExpression	l ++		3513983	1					
ANR	3515094	Identifier	l		3513983	0					
ANR	3515095	IncDec	++		3513983	1					
ANR	3515096	ShiftExpression	offset >> 16		3513983	1		>>			
ANR	3515097	Identifier	offset		3513983	0					
ANR	3515098	PrimaryExpression	16		3513983	1					
ANR	3515099	ExpressionStatement	data [ l ++ ] = offset >> 24	495:3:13721:13745	3513983	2	True				
ANR	3515100	AssignmentExpression	data [ l ++ ] = offset >> 24		3513983	0		=			
ANR	3515101	ArrayIndexing	data [ l ++ ]		3513983	0					
ANR	3515102	Identifier	data		3513983	0					
ANR	3515103	PostIncDecOperationExpression	l ++		3513983	1					
ANR	3515104	Identifier	l		3513983	0					
ANR	3515105	IncDec	++		3513983	1					
ANR	3515106	ShiftExpression	offset >> 24		3513983	1		>>			
ANR	3515107	Identifier	offset		3513983	0					
ANR	3515108	PrimaryExpression	24		3513983	1					
ANR	3515109	ReturnStatement	return l ;	498:1:13755:13763	3513983	18	True				
ANR	3515110	Identifier	l		3513983	0					
ANR	3515111	ReturnType	static int		3513983	1					
ANR	3515112	Identifier	process_1byte_op		3513983	2					
ANR	3515113	ParameterList	"RAsm * a , ut8 * data , const Opcode * op , int op1"		3513983	3					
ANR	3515114	Parameter	RAsm * a	354:28:9796:9802	3513983	0	True				
ANR	3515115	ParameterType	RAsm *		3513983	0					
ANR	3515116	Identifier	a		3513983	1					
ANR	3515117	Parameter	ut8 * data	354:37:9805:9813	3513983	1	True				
ANR	3515118	ParameterType	ut8 *		3513983	0					
ANR	3515119	Identifier	data		3513983	1					
ANR	3515120	Parameter	const Opcode * op	354:48:9816:9831	3513983	2	True				
ANR	3515121	ParameterType	const Opcode *		3513983	0					
ANR	3515122	Identifier	op		3513983	1					
ANR	3515123	Parameter	int op1	354:66:9834:9840	3513983	3	True				
ANR	3515124	ParameterType	int		3513983	0					
ANR	3515125	Identifier	op1		3513983	1					
ANR	3515126	CFGEntryNode	ENTRY		3513983		True				
ANR	3515127	CFGExitNode	EXIT		3513983		True				
ANR	3515128	Symbol	op -> operands [ 0 ] . offset_sign		3513983						
ANR	3515129	Symbol	data		3513983						
ANR	3515130	Symbol	* op		3513983						
ANR	3515131	Symbol	op -> operands [ 1 ] . immediate		3513983						
ANR	3515132	Symbol	op -> operands [ 0 ] . extended		3513983						
ANR	3515133	Symbol	* op -> operands [ 1 ] . regs		3513983						
ANR	3515134	Symbol	* op -> operands		3513983						
ANR	3515135	Symbol	reg		3513983						
ANR	3515136	Symbol	op -> operands [ 0 ] . reg		3513983						
ANR	3515137	Symbol	op -> operands [ 0 ] . offset		3513983						
ANR	3515138	Symbol	a -> bits		3513983						
ANR	3515139	Symbol	OT_BYTE		3513983						
ANR	3515140	Symbol	op -> operands [ 1 ] . scale		3513983						
ANR	3515141	Symbol	rex		3513983						
ANR	3515142	Symbol	mem_ref		3513983						
ANR	3515143	Symbol	offset		3513983						
ANR	3515144	Symbol	op -> operands [ 1 ] . reg		3513983						
ANR	3515145	Symbol	op -> operands [ 1 ] . offset		3513983						
ANR	3515146	Symbol	ebp_reg		3513983						
ANR	3515147	Symbol	* * * op		3513983						
ANR	3515148	Symbol	rm		3513983						
ANR	3515149	Symbol	op -> operands [ 0 ] . regs		3513983						
ANR	3515150	Symbol	getsib		3513983						
ANR	3515151	Symbol	ST8_MAX		3513983						
ANR	3515152	Symbol	OT_QWORD		3513983						
ANR	3515153	Symbol	X86R_ESP		3513983						
ANR	3515154	Symbol	X86R_EBP		3513983						
ANR	3515155	Symbol	op -> operands [ 1 ] . extended		3513983						
ANR	3515156	Symbol	* * op		3513983						
ANR	3515157	Symbol	op -> operands [ 1 ] . regs		3513983						
ANR	3515158	Symbol	ST8_MIN		3513983						
ANR	3515159	Symbol	op -> operands [ 0 ] . type		3513983						
ANR	3515160	Symbol	op -> operands [ 1 ] . offset_sign		3513983						
ANR	3515161	Symbol	* op -> operands [ 1 ] . scale		3513983						
ANR	3515162	Symbol	X86R_AL		3513983						
ANR	3515163	Symbol	OT_MEMORY		3513983						
ANR	3515164	Symbol	op -> operands [ 1 ] . is_good_flag		3513983						
ANR	3515165	Symbol	a		3513983						
ANR	3515166	Symbol	op		3513983						
ANR	3515167	Symbol	OT_CONSTANT		3513983						
ANR	3515168	Symbol	mod_byte		3513983						
ANR	3515169	Symbol	* a		3513983						
ANR	3515170	Symbol	* * op -> operands		3513983						
ANR	3515171	Symbol	l		3513983						
ANR	3515172	Symbol	OT_REGALL		3513983						
ANR	3515173	Symbol	op1		3513983						
ANR	3515174	Symbol	X86R_UNDEFINED		3513983						
ANR	3515175	Symbol	op -> operands [ 1 ] . type		3513983						
ANR	3515176	Symbol	op -> operands [ 1 ] . sign		3513983						
ANR	3515177	Symbol	* op -> operands [ 0 ] . regs		3513983						
ANR	3515178	Symbol	op -> operands		3513983						
ANR	3515179	Symbol	* data		3513983						
ANR	3515180	Symbol	OT_DWORD		3513983						
ANR	3515181	Function	opadc	501:0:13768:14139							
ANR	3515182	FunctionDef	"opadc (RAsm * a , ut8 * data , const Opcode * op)"		3515181	0					
ANR	3515183	CompoundStatement		501:55:13823:14139	3515181	0					
ANR	3515184	IfStatement	if ( op -> operands [ 1 ] . type & OT_CONSTANT )		3515181	0					
ANR	3515185	Condition	op -> operands [ 1 ] . type & OT_CONSTANT	502:5:13830:13863	3515181	0	True				
ANR	3515186	BitAndExpression	op -> operands [ 1 ] . type & OT_CONSTANT		3515181	0		&			
ANR	3515187	MemberAccess	op -> operands [ 1 ] . type		3515181	0					
ANR	3515188	ArrayIndexing	op -> operands [ 1 ]		3515181	0					
ANR	3515189	PtrMemberAccess	op -> operands		3515181	0					
ANR	3515190	Identifier	op		3515181	0					
ANR	3515191	Identifier	operands		3515181	1					
ANR	3515192	PrimaryExpression	1		3515181	1					
ANR	3515193	Identifier	type		3515181	1					
ANR	3515194	Identifier	OT_CONSTANT		3515181	1					
ANR	3515195	CompoundStatement		2:41:42:42	3515181	1					
ANR	3515196	IfStatement	if ( op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD )		3515181	0					
ANR	3515197	Condition	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD	503:6:13874:13944	3515181	0	True				
ANR	3515198	AndExpression	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD		3515181	0		&&			
ANR	3515199	BitAndExpression	op -> operands [ 0 ] . type & OT_GPREG		3515181	0		&			
ANR	3515200	MemberAccess	op -> operands [ 0 ] . type		3515181	0					
ANR	3515201	ArrayIndexing	op -> operands [ 0 ]		3515181	0					
ANR	3515202	PtrMemberAccess	op -> operands		3515181	0					
ANR	3515203	Identifier	op		3515181	0					
ANR	3515204	Identifier	operands		3515181	1					
ANR	3515205	PrimaryExpression	0		3515181	1					
ANR	3515206	Identifier	type		3515181	1					
ANR	3515207	Identifier	OT_GPREG		3515181	1					
ANR	3515208	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		3515181	1		&			
ANR	3515209	MemberAccess	op -> operands [ 0 ] . type		3515181	0					
ANR	3515210	ArrayIndexing	op -> operands [ 0 ]		3515181	0					
ANR	3515211	PtrMemberAccess	op -> operands		3515181	0					
ANR	3515212	Identifier	op		3515181	0					
ANR	3515213	Identifier	operands		3515181	1					
ANR	3515214	PrimaryExpression	0		3515181	1					
ANR	3515215	Identifier	type		3515181	1					
ANR	3515216	Identifier	OT_WORD		3515181	1					
ANR	3515217	CompoundStatement		4:38:123:123	3515181	1					
ANR	3515218	ReturnStatement	"return process_16bit_group_1 ( a , data , op , 0x10 ) ;"	505:3:13952:14000	3515181	0	True				
ANR	3515219	CallExpression	"process_16bit_group_1 ( a , data , op , 0x10 )"		3515181	0					
ANR	3515220	Callee	process_16bit_group_1		3515181	0					
ANR	3515221	Identifier	process_16bit_group_1		3515181	0					
ANR	3515222	ArgumentList	a		3515181	1					
ANR	3515223	Argument	a		3515181	0					
ANR	3515224	Identifier	a		3515181	0					
ANR	3515225	Argument	data		3515181	1					
ANR	3515226	Identifier	data		3515181	0					
ANR	3515227	Argument	op		3515181	2					
ANR	3515228	Identifier	op		3515181	0					
ANR	3515229	Argument	0x10		3515181	3					
ANR	3515230	PrimaryExpression	0x10		3515181	0					
ANR	3515231	IfStatement	if ( ! is_al_reg ( & op -> operands [ 0 ] ) )		3515181	1					
ANR	3515232	Condition	! is_al_reg ( & op -> operands [ 0 ] )	507:6:14012:14040	3515181	0	True				
ANR	3515233	UnaryOperationExpression	! is_al_reg ( & op -> operands [ 0 ] )		3515181	0					
ANR	3515234	UnaryOperator	!		3515181	0					
ANR	3515235	CallExpression	is_al_reg ( & op -> operands [ 0 ] )		3515181	1					
ANR	3515236	Callee	is_al_reg		3515181	0					
ANR	3515237	Identifier	is_al_reg		3515181	0					
ANR	3515238	ArgumentList	& op -> operands [ 0 ]		3515181	1					
ANR	3515239	Argument	& op -> operands [ 0 ]		3515181	0					
ANR	3515240	UnaryOperationExpression	& op -> operands [ 0 ]		3515181	0					
ANR	3515241	UnaryOperator	&		3515181	0					
ANR	3515242	ArrayIndexing	op -> operands [ 0 ]		3515181	1					
ANR	3515243	PtrMemberAccess	op -> operands		3515181	0					
ANR	3515244	Identifier	op		3515181	0					
ANR	3515245	Identifier	operands		3515181	1					
ANR	3515246	PrimaryExpression	0		3515181	1					
ANR	3515247	CompoundStatement		7:37:219:219	3515181	1					
ANR	3515248	ReturnStatement	"return process_group_1 ( a , data , op ) ;"	508:3:14048:14084	3515181	0	True				
ANR	3515249	CallExpression	"process_group_1 ( a , data , op )"		3515181	0					
ANR	3515250	Callee	process_group_1		3515181	0					
ANR	3515251	Identifier	process_group_1		3515181	0					
ANR	3515252	ArgumentList	a		3515181	1					
ANR	3515253	Argument	a		3515181	0					
ANR	3515254	Identifier	a		3515181	0					
ANR	3515255	Argument	data		3515181	1					
ANR	3515256	Identifier	data		3515181	0					
ANR	3515257	Argument	op		3515181	2					
ANR	3515258	Identifier	op		3515181	0					
ANR	3515259	ReturnStatement	"return process_1byte_op ( a , data , op , 0x10 ) ;"	511:1:14094:14137	3515181	1	True				
ANR	3515260	CallExpression	"process_1byte_op ( a , data , op , 0x10 )"		3515181	0					
ANR	3515261	Callee	process_1byte_op		3515181	0					
ANR	3515262	Identifier	process_1byte_op		3515181	0					
ANR	3515263	ArgumentList	a		3515181	1					
ANR	3515264	Argument	a		3515181	0					
ANR	3515265	Identifier	a		3515181	0					
ANR	3515266	Argument	data		3515181	1					
ANR	3515267	Identifier	data		3515181	0					
ANR	3515268	Argument	op		3515181	2					
ANR	3515269	Identifier	op		3515181	0					
ANR	3515270	Argument	0x10		3515181	3					
ANR	3515271	PrimaryExpression	0x10		3515181	0					
ANR	3515272	ReturnType	static int		3515181	1					
ANR	3515273	Identifier	opadc		3515181	2					
ANR	3515274	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3515181	3					
ANR	3515275	Parameter	RAsm * a	501:17:13785:13791	3515181	0	True				
ANR	3515276	ParameterType	RAsm *		3515181	0					
ANR	3515277	Identifier	a		3515181	1					
ANR	3515278	Parameter	ut8 * data	501:26:13794:13802	3515181	1	True				
ANR	3515279	ParameterType	ut8 *		3515181	0					
ANR	3515280	Identifier	data		3515181	1					
ANR	3515281	Parameter	const Opcode * op	501:37:13805:13820	3515181	2	True				
ANR	3515282	ParameterType	const Opcode *		3515181	0					
ANR	3515283	Identifier	op		3515181	1					
ANR	3515284	CFGEntryNode	ENTRY		3515181		True				
ANR	3515285	CFGExitNode	EXIT		3515181		True				
ANR	3515286	Symbol	a		3515181						
ANR	3515287	Symbol	op		3515181						
ANR	3515288	Symbol	OT_CONSTANT		3515181						
ANR	3515289	Symbol	OT_WORD		3515181						
ANR	3515290	Symbol	OT_GPREG		3515181						
ANR	3515291	Symbol	data		3515181						
ANR	3515292	Symbol	* op		3515181						
ANR	3515293	Symbol	process_group_1		3515181						
ANR	3515294	Symbol	process_1byte_op		3515181						
ANR	3515295	Symbol	* * op		3515181						
ANR	3515296	Symbol	* op -> operands		3515181						
ANR	3515297	Symbol	process_16bit_group_1		3515181						
ANR	3515298	Symbol	op -> operands [ 1 ] . type		3515181						
ANR	3515299	Symbol	op -> operands [ 0 ] . type		3515181						
ANR	3515300	Symbol	is_al_reg		3515181						
ANR	3515301	Symbol	op -> operands		3515181						
ANR	3515302	Function	opadd	514:0:14142:14513							
ANR	3515303	FunctionDef	"opadd (RAsm * a , ut8 * data , const Opcode * op)"		3515302	0					
ANR	3515304	CompoundStatement		514:55:14197:14513	3515302	0					
ANR	3515305	IfStatement	if ( op -> operands [ 1 ] . type & OT_CONSTANT )		3515302	0					
ANR	3515306	Condition	op -> operands [ 1 ] . type & OT_CONSTANT	515:5:14204:14237	3515302	0	True				
ANR	3515307	BitAndExpression	op -> operands [ 1 ] . type & OT_CONSTANT		3515302	0		&			
ANR	3515308	MemberAccess	op -> operands [ 1 ] . type		3515302	0					
ANR	3515309	ArrayIndexing	op -> operands [ 1 ]		3515302	0					
ANR	3515310	PtrMemberAccess	op -> operands		3515302	0					
ANR	3515311	Identifier	op		3515302	0					
ANR	3515312	Identifier	operands		3515302	1					
ANR	3515313	PrimaryExpression	1		3515302	1					
ANR	3515314	Identifier	type		3515302	1					
ANR	3515315	Identifier	OT_CONSTANT		3515302	1					
ANR	3515316	CompoundStatement		2:41:42:42	3515302	1					
ANR	3515317	IfStatement	if ( op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD )		3515302	0					
ANR	3515318	Condition	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD	516:6:14248:14318	3515302	0	True				
ANR	3515319	AndExpression	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD		3515302	0		&&			
ANR	3515320	BitAndExpression	op -> operands [ 0 ] . type & OT_GPREG		3515302	0		&			
ANR	3515321	MemberAccess	op -> operands [ 0 ] . type		3515302	0					
ANR	3515322	ArrayIndexing	op -> operands [ 0 ]		3515302	0					
ANR	3515323	PtrMemberAccess	op -> operands		3515302	0					
ANR	3515324	Identifier	op		3515302	0					
ANR	3515325	Identifier	operands		3515302	1					
ANR	3515326	PrimaryExpression	0		3515302	1					
ANR	3515327	Identifier	type		3515302	1					
ANR	3515328	Identifier	OT_GPREG		3515302	1					
ANR	3515329	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		3515302	1		&			
ANR	3515330	MemberAccess	op -> operands [ 0 ] . type		3515302	0					
ANR	3515331	ArrayIndexing	op -> operands [ 0 ]		3515302	0					
ANR	3515332	PtrMemberAccess	op -> operands		3515302	0					
ANR	3515333	Identifier	op		3515302	0					
ANR	3515334	Identifier	operands		3515302	1					
ANR	3515335	PrimaryExpression	0		3515302	1					
ANR	3515336	Identifier	type		3515302	1					
ANR	3515337	Identifier	OT_WORD		3515302	1					
ANR	3515338	CompoundStatement		4:38:123:123	3515302	1					
ANR	3515339	ReturnStatement	"return process_16bit_group_1 ( a , data , op , 0x00 ) ;"	518:3:14326:14374	3515302	0	True				
ANR	3515340	CallExpression	"process_16bit_group_1 ( a , data , op , 0x00 )"		3515302	0					
ANR	3515341	Callee	process_16bit_group_1		3515302	0					
ANR	3515342	Identifier	process_16bit_group_1		3515302	0					
ANR	3515343	ArgumentList	a		3515302	1					
ANR	3515344	Argument	a		3515302	0					
ANR	3515345	Identifier	a		3515302	0					
ANR	3515346	Argument	data		3515302	1					
ANR	3515347	Identifier	data		3515302	0					
ANR	3515348	Argument	op		3515302	2					
ANR	3515349	Identifier	op		3515302	0					
ANR	3515350	Argument	0x00		3515302	3					
ANR	3515351	PrimaryExpression	0x00		3515302	0					
ANR	3515352	IfStatement	if ( ! is_al_reg ( & op -> operands [ 0 ] ) )		3515302	1					
ANR	3515353	Condition	! is_al_reg ( & op -> operands [ 0 ] )	520:6:14386:14414	3515302	0	True				
ANR	3515354	UnaryOperationExpression	! is_al_reg ( & op -> operands [ 0 ] )		3515302	0					
ANR	3515355	UnaryOperator	!		3515302	0					
ANR	3515356	CallExpression	is_al_reg ( & op -> operands [ 0 ] )		3515302	1					
ANR	3515357	Callee	is_al_reg		3515302	0					
ANR	3515358	Identifier	is_al_reg		3515302	0					
ANR	3515359	ArgumentList	& op -> operands [ 0 ]		3515302	1					
ANR	3515360	Argument	& op -> operands [ 0 ]		3515302	0					
ANR	3515361	UnaryOperationExpression	& op -> operands [ 0 ]		3515302	0					
ANR	3515362	UnaryOperator	&		3515302	0					
ANR	3515363	ArrayIndexing	op -> operands [ 0 ]		3515302	1					
ANR	3515364	PtrMemberAccess	op -> operands		3515302	0					
ANR	3515365	Identifier	op		3515302	0					
ANR	3515366	Identifier	operands		3515302	1					
ANR	3515367	PrimaryExpression	0		3515302	1					
ANR	3515368	CompoundStatement		7:37:219:219	3515302	1					
ANR	3515369	ReturnStatement	"return process_group_1 ( a , data , op ) ;"	521:3:14422:14458	3515302	0	True				
ANR	3515370	CallExpression	"process_group_1 ( a , data , op )"		3515302	0					
ANR	3515371	Callee	process_group_1		3515302	0					
ANR	3515372	Identifier	process_group_1		3515302	0					
ANR	3515373	ArgumentList	a		3515302	1					
ANR	3515374	Argument	a		3515302	0					
ANR	3515375	Identifier	a		3515302	0					
ANR	3515376	Argument	data		3515302	1					
ANR	3515377	Identifier	data		3515302	0					
ANR	3515378	Argument	op		3515302	2					
ANR	3515379	Identifier	op		3515302	0					
ANR	3515380	ReturnStatement	"return process_1byte_op ( a , data , op , 0x00 ) ;"	524:1:14468:14511	3515302	1	True				
ANR	3515381	CallExpression	"process_1byte_op ( a , data , op , 0x00 )"		3515302	0					
ANR	3515382	Callee	process_1byte_op		3515302	0					
ANR	3515383	Identifier	process_1byte_op		3515302	0					
ANR	3515384	ArgumentList	a		3515302	1					
ANR	3515385	Argument	a		3515302	0					
ANR	3515386	Identifier	a		3515302	0					
ANR	3515387	Argument	data		3515302	1					
ANR	3515388	Identifier	data		3515302	0					
ANR	3515389	Argument	op		3515302	2					
ANR	3515390	Identifier	op		3515302	0					
ANR	3515391	Argument	0x00		3515302	3					
ANR	3515392	PrimaryExpression	0x00		3515302	0					
ANR	3515393	ReturnType	static int		3515302	1					
ANR	3515394	Identifier	opadd		3515302	2					
ANR	3515395	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3515302	3					
ANR	3515396	Parameter	RAsm * a	514:17:14159:14165	3515302	0	True				
ANR	3515397	ParameterType	RAsm *		3515302	0					
ANR	3515398	Identifier	a		3515302	1					
ANR	3515399	Parameter	ut8 * data	514:26:14168:14176	3515302	1	True				
ANR	3515400	ParameterType	ut8 *		3515302	0					
ANR	3515401	Identifier	data		3515302	1					
ANR	3515402	Parameter	const Opcode * op	514:37:14179:14194	3515302	2	True				
ANR	3515403	ParameterType	const Opcode *		3515302	0					
ANR	3515404	Identifier	op		3515302	1					
ANR	3515405	CFGEntryNode	ENTRY		3515302		True				
ANR	3515406	CFGExitNode	EXIT		3515302		True				
ANR	3515407	Symbol	a		3515302						
ANR	3515408	Symbol	op		3515302						
ANR	3515409	Symbol	OT_CONSTANT		3515302						
ANR	3515410	Symbol	OT_WORD		3515302						
ANR	3515411	Symbol	OT_GPREG		3515302						
ANR	3515412	Symbol	data		3515302						
ANR	3515413	Symbol	* op		3515302						
ANR	3515414	Symbol	process_group_1		3515302						
ANR	3515415	Symbol	process_1byte_op		3515302						
ANR	3515416	Symbol	* * op		3515302						
ANR	3515417	Symbol	* op -> operands		3515302						
ANR	3515418	Symbol	process_16bit_group_1		3515302						
ANR	3515419	Symbol	op -> operands [ 1 ] . type		3515302						
ANR	3515420	Symbol	op -> operands [ 0 ] . type		3515302						
ANR	3515421	Symbol	is_al_reg		3515302						
ANR	3515422	Symbol	op -> operands		3515302						
ANR	3515423	Function	opand	527:0:14516:14887							
ANR	3515424	FunctionDef	"opand (RAsm * a , ut8 * data , const Opcode * op)"		3515423	0					
ANR	3515425	CompoundStatement		527:55:14571:14887	3515423	0					
ANR	3515426	IfStatement	if ( op -> operands [ 1 ] . type & OT_CONSTANT )		3515423	0					
ANR	3515427	Condition	op -> operands [ 1 ] . type & OT_CONSTANT	528:5:14578:14611	3515423	0	True				
ANR	3515428	BitAndExpression	op -> operands [ 1 ] . type & OT_CONSTANT		3515423	0		&			
ANR	3515429	MemberAccess	op -> operands [ 1 ] . type		3515423	0					
ANR	3515430	ArrayIndexing	op -> operands [ 1 ]		3515423	0					
ANR	3515431	PtrMemberAccess	op -> operands		3515423	0					
ANR	3515432	Identifier	op		3515423	0					
ANR	3515433	Identifier	operands		3515423	1					
ANR	3515434	PrimaryExpression	1		3515423	1					
ANR	3515435	Identifier	type		3515423	1					
ANR	3515436	Identifier	OT_CONSTANT		3515423	1					
ANR	3515437	CompoundStatement		2:41:42:42	3515423	1					
ANR	3515438	IfStatement	if ( op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD )		3515423	0					
ANR	3515439	Condition	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD	529:6:14622:14692	3515423	0	True				
ANR	3515440	AndExpression	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD		3515423	0		&&			
ANR	3515441	BitAndExpression	op -> operands [ 0 ] . type & OT_GPREG		3515423	0		&			
ANR	3515442	MemberAccess	op -> operands [ 0 ] . type		3515423	0					
ANR	3515443	ArrayIndexing	op -> operands [ 0 ]		3515423	0					
ANR	3515444	PtrMemberAccess	op -> operands		3515423	0					
ANR	3515445	Identifier	op		3515423	0					
ANR	3515446	Identifier	operands		3515423	1					
ANR	3515447	PrimaryExpression	0		3515423	1					
ANR	3515448	Identifier	type		3515423	1					
ANR	3515449	Identifier	OT_GPREG		3515423	1					
ANR	3515450	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		3515423	1		&			
ANR	3515451	MemberAccess	op -> operands [ 0 ] . type		3515423	0					
ANR	3515452	ArrayIndexing	op -> operands [ 0 ]		3515423	0					
ANR	3515453	PtrMemberAccess	op -> operands		3515423	0					
ANR	3515454	Identifier	op		3515423	0					
ANR	3515455	Identifier	operands		3515423	1					
ANR	3515456	PrimaryExpression	0		3515423	1					
ANR	3515457	Identifier	type		3515423	1					
ANR	3515458	Identifier	OT_WORD		3515423	1					
ANR	3515459	CompoundStatement		4:38:123:123	3515423	1					
ANR	3515460	ReturnStatement	"return process_16bit_group_1 ( a , data , op , 0x20 ) ;"	531:3:14700:14748	3515423	0	True				
ANR	3515461	CallExpression	"process_16bit_group_1 ( a , data , op , 0x20 )"		3515423	0					
ANR	3515462	Callee	process_16bit_group_1		3515423	0					
ANR	3515463	Identifier	process_16bit_group_1		3515423	0					
ANR	3515464	ArgumentList	a		3515423	1					
ANR	3515465	Argument	a		3515423	0					
ANR	3515466	Identifier	a		3515423	0					
ANR	3515467	Argument	data		3515423	1					
ANR	3515468	Identifier	data		3515423	0					
ANR	3515469	Argument	op		3515423	2					
ANR	3515470	Identifier	op		3515423	0					
ANR	3515471	Argument	0x20		3515423	3					
ANR	3515472	PrimaryExpression	0x20		3515423	0					
ANR	3515473	IfStatement	if ( ! is_al_reg ( & op -> operands [ 0 ] ) )		3515423	1					
ANR	3515474	Condition	! is_al_reg ( & op -> operands [ 0 ] )	533:6:14760:14788	3515423	0	True				
ANR	3515475	UnaryOperationExpression	! is_al_reg ( & op -> operands [ 0 ] )		3515423	0					
ANR	3515476	UnaryOperator	!		3515423	0					
ANR	3515477	CallExpression	is_al_reg ( & op -> operands [ 0 ] )		3515423	1					
ANR	3515478	Callee	is_al_reg		3515423	0					
ANR	3515479	Identifier	is_al_reg		3515423	0					
ANR	3515480	ArgumentList	& op -> operands [ 0 ]		3515423	1					
ANR	3515481	Argument	& op -> operands [ 0 ]		3515423	0					
ANR	3515482	UnaryOperationExpression	& op -> operands [ 0 ]		3515423	0					
ANR	3515483	UnaryOperator	&		3515423	0					
ANR	3515484	ArrayIndexing	op -> operands [ 0 ]		3515423	1					
ANR	3515485	PtrMemberAccess	op -> operands		3515423	0					
ANR	3515486	Identifier	op		3515423	0					
ANR	3515487	Identifier	operands		3515423	1					
ANR	3515488	PrimaryExpression	0		3515423	1					
ANR	3515489	CompoundStatement		7:37:219:219	3515423	1					
ANR	3515490	ReturnStatement	"return process_group_1 ( a , data , op ) ;"	534:3:14796:14832	3515423	0	True				
ANR	3515491	CallExpression	"process_group_1 ( a , data , op )"		3515423	0					
ANR	3515492	Callee	process_group_1		3515423	0					
ANR	3515493	Identifier	process_group_1		3515423	0					
ANR	3515494	ArgumentList	a		3515423	1					
ANR	3515495	Argument	a		3515423	0					
ANR	3515496	Identifier	a		3515423	0					
ANR	3515497	Argument	data		3515423	1					
ANR	3515498	Identifier	data		3515423	0					
ANR	3515499	Argument	op		3515423	2					
ANR	3515500	Identifier	op		3515423	0					
ANR	3515501	ReturnStatement	"return process_1byte_op ( a , data , op , 0x20 ) ;"	537:1:14842:14885	3515423	1	True				
ANR	3515502	CallExpression	"process_1byte_op ( a , data , op , 0x20 )"		3515423	0					
ANR	3515503	Callee	process_1byte_op		3515423	0					
ANR	3515504	Identifier	process_1byte_op		3515423	0					
ANR	3515505	ArgumentList	a		3515423	1					
ANR	3515506	Argument	a		3515423	0					
ANR	3515507	Identifier	a		3515423	0					
ANR	3515508	Argument	data		3515423	1					
ANR	3515509	Identifier	data		3515423	0					
ANR	3515510	Argument	op		3515423	2					
ANR	3515511	Identifier	op		3515423	0					
ANR	3515512	Argument	0x20		3515423	3					
ANR	3515513	PrimaryExpression	0x20		3515423	0					
ANR	3515514	ReturnType	static int		3515423	1					
ANR	3515515	Identifier	opand		3515423	2					
ANR	3515516	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3515423	3					
ANR	3515517	Parameter	RAsm * a	527:17:14533:14539	3515423	0	True				
ANR	3515518	ParameterType	RAsm *		3515423	0					
ANR	3515519	Identifier	a		3515423	1					
ANR	3515520	Parameter	ut8 * data	527:26:14542:14550	3515423	1	True				
ANR	3515521	ParameterType	ut8 *		3515423	0					
ANR	3515522	Identifier	data		3515423	1					
ANR	3515523	Parameter	const Opcode * op	527:37:14553:14568	3515423	2	True				
ANR	3515524	ParameterType	const Opcode *		3515423	0					
ANR	3515525	Identifier	op		3515423	1					
ANR	3515526	CFGEntryNode	ENTRY		3515423		True				
ANR	3515527	CFGExitNode	EXIT		3515423		True				
ANR	3515528	Symbol	a		3515423						
ANR	3515529	Symbol	op		3515423						
ANR	3515530	Symbol	OT_CONSTANT		3515423						
ANR	3515531	Symbol	OT_WORD		3515423						
ANR	3515532	Symbol	OT_GPREG		3515423						
ANR	3515533	Symbol	data		3515423						
ANR	3515534	Symbol	* op		3515423						
ANR	3515535	Symbol	process_group_1		3515423						
ANR	3515536	Symbol	process_1byte_op		3515423						
ANR	3515537	Symbol	* * op		3515423						
ANR	3515538	Symbol	* op -> operands		3515423						
ANR	3515539	Symbol	process_16bit_group_1		3515423						
ANR	3515540	Symbol	op -> operands [ 1 ] . type		3515423						
ANR	3515541	Symbol	op -> operands [ 0 ] . type		3515423						
ANR	3515542	Symbol	is_al_reg		3515423						
ANR	3515543	Symbol	op -> operands		3515423						
ANR	3515544	Function	opcmp	540:0:14890:15261							
ANR	3515545	FunctionDef	"opcmp (RAsm * a , ut8 * data , const Opcode * op)"		3515544	0					
ANR	3515546	CompoundStatement		540:55:14945:15261	3515544	0					
ANR	3515547	IfStatement	if ( op -> operands [ 1 ] . type & OT_CONSTANT )		3515544	0					
ANR	3515548	Condition	op -> operands [ 1 ] . type & OT_CONSTANT	541:5:14952:14985	3515544	0	True				
ANR	3515549	BitAndExpression	op -> operands [ 1 ] . type & OT_CONSTANT		3515544	0		&			
ANR	3515550	MemberAccess	op -> operands [ 1 ] . type		3515544	0					
ANR	3515551	ArrayIndexing	op -> operands [ 1 ]		3515544	0					
ANR	3515552	PtrMemberAccess	op -> operands		3515544	0					
ANR	3515553	Identifier	op		3515544	0					
ANR	3515554	Identifier	operands		3515544	1					
ANR	3515555	PrimaryExpression	1		3515544	1					
ANR	3515556	Identifier	type		3515544	1					
ANR	3515557	Identifier	OT_CONSTANT		3515544	1					
ANR	3515558	CompoundStatement		2:41:42:42	3515544	1					
ANR	3515559	IfStatement	if ( op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD )		3515544	0					
ANR	3515560	Condition	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD	542:6:14996:15066	3515544	0	True				
ANR	3515561	AndExpression	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD		3515544	0		&&			
ANR	3515562	BitAndExpression	op -> operands [ 0 ] . type & OT_GPREG		3515544	0		&			
ANR	3515563	MemberAccess	op -> operands [ 0 ] . type		3515544	0					
ANR	3515564	ArrayIndexing	op -> operands [ 0 ]		3515544	0					
ANR	3515565	PtrMemberAccess	op -> operands		3515544	0					
ANR	3515566	Identifier	op		3515544	0					
ANR	3515567	Identifier	operands		3515544	1					
ANR	3515568	PrimaryExpression	0		3515544	1					
ANR	3515569	Identifier	type		3515544	1					
ANR	3515570	Identifier	OT_GPREG		3515544	1					
ANR	3515571	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		3515544	1		&			
ANR	3515572	MemberAccess	op -> operands [ 0 ] . type		3515544	0					
ANR	3515573	ArrayIndexing	op -> operands [ 0 ]		3515544	0					
ANR	3515574	PtrMemberAccess	op -> operands		3515544	0					
ANR	3515575	Identifier	op		3515544	0					
ANR	3515576	Identifier	operands		3515544	1					
ANR	3515577	PrimaryExpression	0		3515544	1					
ANR	3515578	Identifier	type		3515544	1					
ANR	3515579	Identifier	OT_WORD		3515544	1					
ANR	3515580	CompoundStatement		4:38:123:123	3515544	1					
ANR	3515581	ReturnStatement	"return process_16bit_group_1 ( a , data , op , 0x38 ) ;"	544:3:15074:15122	3515544	0	True				
ANR	3515582	CallExpression	"process_16bit_group_1 ( a , data , op , 0x38 )"		3515544	0					
ANR	3515583	Callee	process_16bit_group_1		3515544	0					
ANR	3515584	Identifier	process_16bit_group_1		3515544	0					
ANR	3515585	ArgumentList	a		3515544	1					
ANR	3515586	Argument	a		3515544	0					
ANR	3515587	Identifier	a		3515544	0					
ANR	3515588	Argument	data		3515544	1					
ANR	3515589	Identifier	data		3515544	0					
ANR	3515590	Argument	op		3515544	2					
ANR	3515591	Identifier	op		3515544	0					
ANR	3515592	Argument	0x38		3515544	3					
ANR	3515593	PrimaryExpression	0x38		3515544	0					
ANR	3515594	IfStatement	if ( ! is_al_reg ( & op -> operands [ 0 ] ) )		3515544	1					
ANR	3515595	Condition	! is_al_reg ( & op -> operands [ 0 ] )	546:6:15134:15162	3515544	0	True				
ANR	3515596	UnaryOperationExpression	! is_al_reg ( & op -> operands [ 0 ] )		3515544	0					
ANR	3515597	UnaryOperator	!		3515544	0					
ANR	3515598	CallExpression	is_al_reg ( & op -> operands [ 0 ] )		3515544	1					
ANR	3515599	Callee	is_al_reg		3515544	0					
ANR	3515600	Identifier	is_al_reg		3515544	0					
ANR	3515601	ArgumentList	& op -> operands [ 0 ]		3515544	1					
ANR	3515602	Argument	& op -> operands [ 0 ]		3515544	0					
ANR	3515603	UnaryOperationExpression	& op -> operands [ 0 ]		3515544	0					
ANR	3515604	UnaryOperator	&		3515544	0					
ANR	3515605	ArrayIndexing	op -> operands [ 0 ]		3515544	1					
ANR	3515606	PtrMemberAccess	op -> operands		3515544	0					
ANR	3515607	Identifier	op		3515544	0					
ANR	3515608	Identifier	operands		3515544	1					
ANR	3515609	PrimaryExpression	0		3515544	1					
ANR	3515610	CompoundStatement		7:37:219:219	3515544	1					
ANR	3515611	ReturnStatement	"return process_group_1 ( a , data , op ) ;"	547:3:15170:15206	3515544	0	True				
ANR	3515612	CallExpression	"process_group_1 ( a , data , op )"		3515544	0					
ANR	3515613	Callee	process_group_1		3515544	0					
ANR	3515614	Identifier	process_group_1		3515544	0					
ANR	3515615	ArgumentList	a		3515544	1					
ANR	3515616	Argument	a		3515544	0					
ANR	3515617	Identifier	a		3515544	0					
ANR	3515618	Argument	data		3515544	1					
ANR	3515619	Identifier	data		3515544	0					
ANR	3515620	Argument	op		3515544	2					
ANR	3515621	Identifier	op		3515544	0					
ANR	3515622	ReturnStatement	"return process_1byte_op ( a , data , op , 0x38 ) ;"	550:1:15216:15259	3515544	1	True				
ANR	3515623	CallExpression	"process_1byte_op ( a , data , op , 0x38 )"		3515544	0					
ANR	3515624	Callee	process_1byte_op		3515544	0					
ANR	3515625	Identifier	process_1byte_op		3515544	0					
ANR	3515626	ArgumentList	a		3515544	1					
ANR	3515627	Argument	a		3515544	0					
ANR	3515628	Identifier	a		3515544	0					
ANR	3515629	Argument	data		3515544	1					
ANR	3515630	Identifier	data		3515544	0					
ANR	3515631	Argument	op		3515544	2					
ANR	3515632	Identifier	op		3515544	0					
ANR	3515633	Argument	0x38		3515544	3					
ANR	3515634	PrimaryExpression	0x38		3515544	0					
ANR	3515635	ReturnType	static int		3515544	1					
ANR	3515636	Identifier	opcmp		3515544	2					
ANR	3515637	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3515544	3					
ANR	3515638	Parameter	RAsm * a	540:17:14907:14913	3515544	0	True				
ANR	3515639	ParameterType	RAsm *		3515544	0					
ANR	3515640	Identifier	a		3515544	1					
ANR	3515641	Parameter	ut8 * data	540:26:14916:14924	3515544	1	True				
ANR	3515642	ParameterType	ut8 *		3515544	0					
ANR	3515643	Identifier	data		3515544	1					
ANR	3515644	Parameter	const Opcode * op	540:37:14927:14942	3515544	2	True				
ANR	3515645	ParameterType	const Opcode *		3515544	0					
ANR	3515646	Identifier	op		3515544	1					
ANR	3515647	CFGEntryNode	ENTRY		3515544		True				
ANR	3515648	CFGExitNode	EXIT		3515544		True				
ANR	3515649	Symbol	a		3515544						
ANR	3515650	Symbol	op		3515544						
ANR	3515651	Symbol	OT_CONSTANT		3515544						
ANR	3515652	Symbol	OT_WORD		3515544						
ANR	3515653	Symbol	OT_GPREG		3515544						
ANR	3515654	Symbol	data		3515544						
ANR	3515655	Symbol	* op		3515544						
ANR	3515656	Symbol	process_group_1		3515544						
ANR	3515657	Symbol	process_1byte_op		3515544						
ANR	3515658	Symbol	* * op		3515544						
ANR	3515659	Symbol	* op -> operands		3515544						
ANR	3515660	Symbol	process_16bit_group_1		3515544						
ANR	3515661	Symbol	op -> operands [ 1 ] . type		3515544						
ANR	3515662	Symbol	op -> operands [ 0 ] . type		3515544						
ANR	3515663	Symbol	is_al_reg		3515544						
ANR	3515664	Symbol	op -> operands		3515544						
ANR	3515665	Function	opsub	553:0:15264:15635							
ANR	3515666	FunctionDef	"opsub (RAsm * a , ut8 * data , const Opcode * op)"		3515665	0					
ANR	3515667	CompoundStatement		553:55:15319:15635	3515665	0					
ANR	3515668	IfStatement	if ( op -> operands [ 1 ] . type & OT_CONSTANT )		3515665	0					
ANR	3515669	Condition	op -> operands [ 1 ] . type & OT_CONSTANT	554:5:15326:15359	3515665	0	True				
ANR	3515670	BitAndExpression	op -> operands [ 1 ] . type & OT_CONSTANT		3515665	0		&			
ANR	3515671	MemberAccess	op -> operands [ 1 ] . type		3515665	0					
ANR	3515672	ArrayIndexing	op -> operands [ 1 ]		3515665	0					
ANR	3515673	PtrMemberAccess	op -> operands		3515665	0					
ANR	3515674	Identifier	op		3515665	0					
ANR	3515675	Identifier	operands		3515665	1					
ANR	3515676	PrimaryExpression	1		3515665	1					
ANR	3515677	Identifier	type		3515665	1					
ANR	3515678	Identifier	OT_CONSTANT		3515665	1					
ANR	3515679	CompoundStatement		2:41:42:42	3515665	1					
ANR	3515680	IfStatement	if ( op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD )		3515665	0					
ANR	3515681	Condition	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD	555:6:15370:15440	3515665	0	True				
ANR	3515682	AndExpression	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD		3515665	0		&&			
ANR	3515683	BitAndExpression	op -> operands [ 0 ] . type & OT_GPREG		3515665	0		&			
ANR	3515684	MemberAccess	op -> operands [ 0 ] . type		3515665	0					
ANR	3515685	ArrayIndexing	op -> operands [ 0 ]		3515665	0					
ANR	3515686	PtrMemberAccess	op -> operands		3515665	0					
ANR	3515687	Identifier	op		3515665	0					
ANR	3515688	Identifier	operands		3515665	1					
ANR	3515689	PrimaryExpression	0		3515665	1					
ANR	3515690	Identifier	type		3515665	1					
ANR	3515691	Identifier	OT_GPREG		3515665	1					
ANR	3515692	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		3515665	1		&			
ANR	3515693	MemberAccess	op -> operands [ 0 ] . type		3515665	0					
ANR	3515694	ArrayIndexing	op -> operands [ 0 ]		3515665	0					
ANR	3515695	PtrMemberAccess	op -> operands		3515665	0					
ANR	3515696	Identifier	op		3515665	0					
ANR	3515697	Identifier	operands		3515665	1					
ANR	3515698	PrimaryExpression	0		3515665	1					
ANR	3515699	Identifier	type		3515665	1					
ANR	3515700	Identifier	OT_WORD		3515665	1					
ANR	3515701	CompoundStatement		4:38:123:123	3515665	1					
ANR	3515702	ReturnStatement	"return process_16bit_group_1 ( a , data , op , 0x28 ) ;"	557:3:15448:15496	3515665	0	True				
ANR	3515703	CallExpression	"process_16bit_group_1 ( a , data , op , 0x28 )"		3515665	0					
ANR	3515704	Callee	process_16bit_group_1		3515665	0					
ANR	3515705	Identifier	process_16bit_group_1		3515665	0					
ANR	3515706	ArgumentList	a		3515665	1					
ANR	3515707	Argument	a		3515665	0					
ANR	3515708	Identifier	a		3515665	0					
ANR	3515709	Argument	data		3515665	1					
ANR	3515710	Identifier	data		3515665	0					
ANR	3515711	Argument	op		3515665	2					
ANR	3515712	Identifier	op		3515665	0					
ANR	3515713	Argument	0x28		3515665	3					
ANR	3515714	PrimaryExpression	0x28		3515665	0					
ANR	3515715	IfStatement	if ( ! is_al_reg ( & op -> operands [ 0 ] ) )		3515665	1					
ANR	3515716	Condition	! is_al_reg ( & op -> operands [ 0 ] )	559:6:15508:15536	3515665	0	True				
ANR	3515717	UnaryOperationExpression	! is_al_reg ( & op -> operands [ 0 ] )		3515665	0					
ANR	3515718	UnaryOperator	!		3515665	0					
ANR	3515719	CallExpression	is_al_reg ( & op -> operands [ 0 ] )		3515665	1					
ANR	3515720	Callee	is_al_reg		3515665	0					
ANR	3515721	Identifier	is_al_reg		3515665	0					
ANR	3515722	ArgumentList	& op -> operands [ 0 ]		3515665	1					
ANR	3515723	Argument	& op -> operands [ 0 ]		3515665	0					
ANR	3515724	UnaryOperationExpression	& op -> operands [ 0 ]		3515665	0					
ANR	3515725	UnaryOperator	&		3515665	0					
ANR	3515726	ArrayIndexing	op -> operands [ 0 ]		3515665	1					
ANR	3515727	PtrMemberAccess	op -> operands		3515665	0					
ANR	3515728	Identifier	op		3515665	0					
ANR	3515729	Identifier	operands		3515665	1					
ANR	3515730	PrimaryExpression	0		3515665	1					
ANR	3515731	CompoundStatement		7:37:219:219	3515665	1					
ANR	3515732	ReturnStatement	"return process_group_1 ( a , data , op ) ;"	560:3:15544:15580	3515665	0	True				
ANR	3515733	CallExpression	"process_group_1 ( a , data , op )"		3515665	0					
ANR	3515734	Callee	process_group_1		3515665	0					
ANR	3515735	Identifier	process_group_1		3515665	0					
ANR	3515736	ArgumentList	a		3515665	1					
ANR	3515737	Argument	a		3515665	0					
ANR	3515738	Identifier	a		3515665	0					
ANR	3515739	Argument	data		3515665	1					
ANR	3515740	Identifier	data		3515665	0					
ANR	3515741	Argument	op		3515665	2					
ANR	3515742	Identifier	op		3515665	0					
ANR	3515743	ReturnStatement	"return process_1byte_op ( a , data , op , 0x28 ) ;"	563:1:15590:15633	3515665	1	True				
ANR	3515744	CallExpression	"process_1byte_op ( a , data , op , 0x28 )"		3515665	0					
ANR	3515745	Callee	process_1byte_op		3515665	0					
ANR	3515746	Identifier	process_1byte_op		3515665	0					
ANR	3515747	ArgumentList	a		3515665	1					
ANR	3515748	Argument	a		3515665	0					
ANR	3515749	Identifier	a		3515665	0					
ANR	3515750	Argument	data		3515665	1					
ANR	3515751	Identifier	data		3515665	0					
ANR	3515752	Argument	op		3515665	2					
ANR	3515753	Identifier	op		3515665	0					
ANR	3515754	Argument	0x28		3515665	3					
ANR	3515755	PrimaryExpression	0x28		3515665	0					
ANR	3515756	ReturnType	static int		3515665	1					
ANR	3515757	Identifier	opsub		3515665	2					
ANR	3515758	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3515665	3					
ANR	3515759	Parameter	RAsm * a	553:17:15281:15287	3515665	0	True				
ANR	3515760	ParameterType	RAsm *		3515665	0					
ANR	3515761	Identifier	a		3515665	1					
ANR	3515762	Parameter	ut8 * data	553:26:15290:15298	3515665	1	True				
ANR	3515763	ParameterType	ut8 *		3515665	0					
ANR	3515764	Identifier	data		3515665	1					
ANR	3515765	Parameter	const Opcode * op	553:37:15301:15316	3515665	2	True				
ANR	3515766	ParameterType	const Opcode *		3515665	0					
ANR	3515767	Identifier	op		3515665	1					
ANR	3515768	CFGEntryNode	ENTRY		3515665		True				
ANR	3515769	CFGExitNode	EXIT		3515665		True				
ANR	3515770	Symbol	a		3515665						
ANR	3515771	Symbol	op		3515665						
ANR	3515772	Symbol	OT_CONSTANT		3515665						
ANR	3515773	Symbol	OT_WORD		3515665						
ANR	3515774	Symbol	OT_GPREG		3515665						
ANR	3515775	Symbol	data		3515665						
ANR	3515776	Symbol	* op		3515665						
ANR	3515777	Symbol	process_group_1		3515665						
ANR	3515778	Symbol	process_1byte_op		3515665						
ANR	3515779	Symbol	* * op		3515665						
ANR	3515780	Symbol	* op -> operands		3515665						
ANR	3515781	Symbol	process_16bit_group_1		3515665						
ANR	3515782	Symbol	op -> operands [ 1 ] . type		3515665						
ANR	3515783	Symbol	op -> operands [ 0 ] . type		3515665						
ANR	3515784	Symbol	is_al_reg		3515665						
ANR	3515785	Symbol	op -> operands		3515665						
ANR	3515786	Function	opor	566:0:15638:16009							
ANR	3515787	FunctionDef	"opor (RAsm * a , ut8 * data , const Opcode * op)"		3515786	0					
ANR	3515788	CompoundStatement		566:55:15693:16009	3515786	0					
ANR	3515789	IfStatement	if ( op -> operands [ 1 ] . type & OT_CONSTANT )		3515786	0					
ANR	3515790	Condition	op -> operands [ 1 ] . type & OT_CONSTANT	567:5:15700:15733	3515786	0	True				
ANR	3515791	BitAndExpression	op -> operands [ 1 ] . type & OT_CONSTANT		3515786	0		&			
ANR	3515792	MemberAccess	op -> operands [ 1 ] . type		3515786	0					
ANR	3515793	ArrayIndexing	op -> operands [ 1 ]		3515786	0					
ANR	3515794	PtrMemberAccess	op -> operands		3515786	0					
ANR	3515795	Identifier	op		3515786	0					
ANR	3515796	Identifier	operands		3515786	1					
ANR	3515797	PrimaryExpression	1		3515786	1					
ANR	3515798	Identifier	type		3515786	1					
ANR	3515799	Identifier	OT_CONSTANT		3515786	1					
ANR	3515800	CompoundStatement		2:41:42:42	3515786	1					
ANR	3515801	IfStatement	if ( op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD )		3515786	0					
ANR	3515802	Condition	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD	568:6:15744:15814	3515786	0	True				
ANR	3515803	AndExpression	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD		3515786	0		&&			
ANR	3515804	BitAndExpression	op -> operands [ 0 ] . type & OT_GPREG		3515786	0		&			
ANR	3515805	MemberAccess	op -> operands [ 0 ] . type		3515786	0					
ANR	3515806	ArrayIndexing	op -> operands [ 0 ]		3515786	0					
ANR	3515807	PtrMemberAccess	op -> operands		3515786	0					
ANR	3515808	Identifier	op		3515786	0					
ANR	3515809	Identifier	operands		3515786	1					
ANR	3515810	PrimaryExpression	0		3515786	1					
ANR	3515811	Identifier	type		3515786	1					
ANR	3515812	Identifier	OT_GPREG		3515786	1					
ANR	3515813	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		3515786	1		&			
ANR	3515814	MemberAccess	op -> operands [ 0 ] . type		3515786	0					
ANR	3515815	ArrayIndexing	op -> operands [ 0 ]		3515786	0					
ANR	3515816	PtrMemberAccess	op -> operands		3515786	0					
ANR	3515817	Identifier	op		3515786	0					
ANR	3515818	Identifier	operands		3515786	1					
ANR	3515819	PrimaryExpression	0		3515786	1					
ANR	3515820	Identifier	type		3515786	1					
ANR	3515821	Identifier	OT_WORD		3515786	1					
ANR	3515822	CompoundStatement		4:38:123:123	3515786	1					
ANR	3515823	ReturnStatement	"return process_16bit_group_1 ( a , data , op , 0x08 ) ;"	570:3:15822:15870	3515786	0	True				
ANR	3515824	CallExpression	"process_16bit_group_1 ( a , data , op , 0x08 )"		3515786	0					
ANR	3515825	Callee	process_16bit_group_1		3515786	0					
ANR	3515826	Identifier	process_16bit_group_1		3515786	0					
ANR	3515827	ArgumentList	a		3515786	1					
ANR	3515828	Argument	a		3515786	0					
ANR	3515829	Identifier	a		3515786	0					
ANR	3515830	Argument	data		3515786	1					
ANR	3515831	Identifier	data		3515786	0					
ANR	3515832	Argument	op		3515786	2					
ANR	3515833	Identifier	op		3515786	0					
ANR	3515834	Argument	0x08		3515786	3					
ANR	3515835	PrimaryExpression	0x08		3515786	0					
ANR	3515836	IfStatement	if ( ! is_al_reg ( & op -> operands [ 0 ] ) )		3515786	1					
ANR	3515837	Condition	! is_al_reg ( & op -> operands [ 0 ] )	572:6:15882:15910	3515786	0	True				
ANR	3515838	UnaryOperationExpression	! is_al_reg ( & op -> operands [ 0 ] )		3515786	0					
ANR	3515839	UnaryOperator	!		3515786	0					
ANR	3515840	CallExpression	is_al_reg ( & op -> operands [ 0 ] )		3515786	1					
ANR	3515841	Callee	is_al_reg		3515786	0					
ANR	3515842	Identifier	is_al_reg		3515786	0					
ANR	3515843	ArgumentList	& op -> operands [ 0 ]		3515786	1					
ANR	3515844	Argument	& op -> operands [ 0 ]		3515786	0					
ANR	3515845	UnaryOperationExpression	& op -> operands [ 0 ]		3515786	0					
ANR	3515846	UnaryOperator	&		3515786	0					
ANR	3515847	ArrayIndexing	op -> operands [ 0 ]		3515786	1					
ANR	3515848	PtrMemberAccess	op -> operands		3515786	0					
ANR	3515849	Identifier	op		3515786	0					
ANR	3515850	Identifier	operands		3515786	1					
ANR	3515851	PrimaryExpression	0		3515786	1					
ANR	3515852	CompoundStatement		7:37:219:219	3515786	1					
ANR	3515853	ReturnStatement	"return process_group_1 ( a , data , op ) ;"	573:3:15918:15954	3515786	0	True				
ANR	3515854	CallExpression	"process_group_1 ( a , data , op )"		3515786	0					
ANR	3515855	Callee	process_group_1		3515786	0					
ANR	3515856	Identifier	process_group_1		3515786	0					
ANR	3515857	ArgumentList	a		3515786	1					
ANR	3515858	Argument	a		3515786	0					
ANR	3515859	Identifier	a		3515786	0					
ANR	3515860	Argument	data		3515786	1					
ANR	3515861	Identifier	data		3515786	0					
ANR	3515862	Argument	op		3515786	2					
ANR	3515863	Identifier	op		3515786	0					
ANR	3515864	ReturnStatement	"return process_1byte_op ( a , data , op , 0x08 ) ;"	576:1:15964:16007	3515786	1	True				
ANR	3515865	CallExpression	"process_1byte_op ( a , data , op , 0x08 )"		3515786	0					
ANR	3515866	Callee	process_1byte_op		3515786	0					
ANR	3515867	Identifier	process_1byte_op		3515786	0					
ANR	3515868	ArgumentList	a		3515786	1					
ANR	3515869	Argument	a		3515786	0					
ANR	3515870	Identifier	a		3515786	0					
ANR	3515871	Argument	data		3515786	1					
ANR	3515872	Identifier	data		3515786	0					
ANR	3515873	Argument	op		3515786	2					
ANR	3515874	Identifier	op		3515786	0					
ANR	3515875	Argument	0x08		3515786	3					
ANR	3515876	PrimaryExpression	0x08		3515786	0					
ANR	3515877	ReturnType	static int		3515786	1					
ANR	3515878	Identifier	opor		3515786	2					
ANR	3515879	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3515786	3					
ANR	3515880	Parameter	RAsm * a	566:16:15654:15660	3515786	0	True				
ANR	3515881	ParameterType	RAsm *		3515786	0					
ANR	3515882	Identifier	a		3515786	1					
ANR	3515883	Parameter	ut8 * data	566:25:15663:15672	3515786	1	True				
ANR	3515884	ParameterType	ut8 *		3515786	0					
ANR	3515885	Identifier	data		3515786	1					
ANR	3515886	Parameter	const Opcode * op	566:37:15675:15690	3515786	2	True				
ANR	3515887	ParameterType	const Opcode *		3515786	0					
ANR	3515888	Identifier	op		3515786	1					
ANR	3515889	CFGEntryNode	ENTRY		3515786		True				
ANR	3515890	CFGExitNode	EXIT		3515786		True				
ANR	3515891	Symbol	a		3515786						
ANR	3515892	Symbol	op		3515786						
ANR	3515893	Symbol	OT_CONSTANT		3515786						
ANR	3515894	Symbol	OT_WORD		3515786						
ANR	3515895	Symbol	OT_GPREG		3515786						
ANR	3515896	Symbol	data		3515786						
ANR	3515897	Symbol	* op		3515786						
ANR	3515898	Symbol	process_group_1		3515786						
ANR	3515899	Symbol	process_1byte_op		3515786						
ANR	3515900	Symbol	* * op		3515786						
ANR	3515901	Symbol	* op -> operands		3515786						
ANR	3515902	Symbol	process_16bit_group_1		3515786						
ANR	3515903	Symbol	op -> operands [ 1 ] . type		3515786						
ANR	3515904	Symbol	op -> operands [ 0 ] . type		3515786						
ANR	3515905	Symbol	is_al_reg		3515786						
ANR	3515906	Symbol	op -> operands		3515786						
ANR	3515907	Function	opxadd	579:0:16012:16566							
ANR	3515908	FunctionDef	"opxadd (RAsm * a , ut8 * data , const Opcode * op)"		3515907	0					
ANR	3515909	CompoundStatement		579:56:16068:16566	3515907	0					
ANR	3515910	ExpressionStatement	is_valid_registers ( op )	580:1:16071:16094	3515907	0	True				
ANR	3515911	CallExpression	is_valid_registers ( op )		3515907	0					
ANR	3515912	Callee	is_valid_registers		3515907	0					
ANR	3515913	Identifier	is_valid_registers		3515907	0					
ANR	3515914	ArgumentList	op		3515907	1					
ANR	3515915	Argument	op		3515907	0					
ANR	3515916	Identifier	op		3515907	0					
ANR	3515917	IdentifierDeclStatement	int i = 0 ;	581:1:16097:16106	3515907	1	True				
ANR	3515918	IdentifierDecl	i = 0		3515907	0					
ANR	3515919	IdentifierDeclType	int		3515907	0					
ANR	3515920	Identifier	i		3515907	1					
ANR	3515921	AssignmentExpression	i = 0		3515907	2		=			
ANR	3515922	Identifier	i		3515907	0					
ANR	3515923	PrimaryExpression	0		3515907	1					
ANR	3515924	IfStatement	if ( op -> operands_count < 2 )		3515907	2					
ANR	3515925	Condition	op -> operands_count < 2	582:5:16113:16134	3515907	0	True				
ANR	3515926	RelationalExpression	op -> operands_count < 2		3515907	0		<			
ANR	3515927	PtrMemberAccess	op -> operands_count		3515907	0					
ANR	3515928	Identifier	op		3515907	0					
ANR	3515929	Identifier	operands_count		3515907	1					
ANR	3515930	PrimaryExpression	2		3515907	1					
ANR	3515931	CompoundStatement		4:30:69:69	3515907	1					
ANR	3515932	ReturnStatement	return - 1 ;	583:2:16142:16151	3515907	0	True				
ANR	3515933	UnaryOperationExpression	- 1		3515907	0					
ANR	3515934	UnaryOperator	-		3515907	0					
ANR	3515935	PrimaryExpression	1		3515907	1					
ANR	3515936	IfStatement	if ( a -> bits == 64 )		3515907	3					
ANR	3515937	Condition	a -> bits == 64	585:5:16161:16173	3515907	0	True				
ANR	3515938	EqualityExpression	a -> bits == 64		3515907	0		==			
ANR	3515939	PtrMemberAccess	a -> bits		3515907	0					
ANR	3515940	Identifier	a		3515907	0					
ANR	3515941	Identifier	bits		3515907	1					
ANR	3515942	PrimaryExpression	64		3515907	1					
ANR	3515943	CompoundStatement		7:20:107:107	3515907	1					
ANR	3515944	ExpressionStatement	data [ i ++ ] = 0x48	586:2:16180:16196	3515907	0	True				
ANR	3515945	AssignmentExpression	data [ i ++ ] = 0x48		3515907	0		=			
ANR	3515946	ArrayIndexing	data [ i ++ ]		3515907	0					
ANR	3515947	Identifier	data		3515907	0					
ANR	3515948	PostIncDecOperationExpression	i ++		3515907	1					
ANR	3515949	Identifier	i		3515907	0					
ANR	3515950	IncDec	++		3515907	1					
ANR	3515951	PrimaryExpression	0x48		3515907	1					
ANR	3515952	ExpressionStatement		587:2:16200:16200	3515907	4	True				
ANR	3515953	ExpressionStatement	data [ i ++ ] = 0x0f	588:1:16203:16219	3515907	5	True				
ANR	3515954	AssignmentExpression	data [ i ++ ] = 0x0f		3515907	0		=			
ANR	3515955	ArrayIndexing	data [ i ++ ]		3515907	0					
ANR	3515956	Identifier	data		3515907	0					
ANR	3515957	PostIncDecOperationExpression	i ++		3515907	1					
ANR	3515958	Identifier	i		3515907	0					
ANR	3515959	IncDec	++		3515907	1					
ANR	3515960	PrimaryExpression	0x0f		3515907	1					
ANR	3515961	IfStatement	if ( op -> operands [ 0 ] . type & OT_BYTE && op -> operands [ 1 ] . type & OT_BYTE )		3515907	6					
ANR	3515962	Condition	op -> operands [ 0 ] . type & OT_BYTE && op -> operands [ 1 ] . type & OT_BYTE	589:5:16226:16293	3515907	0	True				
ANR	3515963	AndExpression	op -> operands [ 0 ] . type & OT_BYTE && op -> operands [ 1 ] . type & OT_BYTE		3515907	0		&&			
ANR	3515964	BitAndExpression	op -> operands [ 0 ] . type & OT_BYTE		3515907	0		&			
ANR	3515965	MemberAccess	op -> operands [ 0 ] . type		3515907	0					
ANR	3515966	ArrayIndexing	op -> operands [ 0 ]		3515907	0					
ANR	3515967	PtrMemberAccess	op -> operands		3515907	0					
ANR	3515968	Identifier	op		3515907	0					
ANR	3515969	Identifier	operands		3515907	1					
ANR	3515970	PrimaryExpression	0		3515907	1					
ANR	3515971	Identifier	type		3515907	1					
ANR	3515972	Identifier	OT_BYTE		3515907	1					
ANR	3515973	BitAndExpression	op -> operands [ 1 ] . type & OT_BYTE		3515907	1		&			
ANR	3515974	MemberAccess	op -> operands [ 1 ] . type		3515907	0					
ANR	3515975	ArrayIndexing	op -> operands [ 1 ]		3515907	0					
ANR	3515976	PtrMemberAccess	op -> operands		3515907	0					
ANR	3515977	Identifier	op		3515907	0					
ANR	3515978	Identifier	operands		3515907	1					
ANR	3515979	PrimaryExpression	1		3515907	1					
ANR	3515980	Identifier	type		3515907	1					
ANR	3515981	Identifier	OT_BYTE		3515907	1					
ANR	3515982	CompoundStatement		12:36:227:227	3515907	1					
ANR	3515983	ExpressionStatement	data [ i ++ ] = 0xc0	591:2:16300:16316	3515907	0	True				
ANR	3515984	AssignmentExpression	data [ i ++ ] = 0xc0		3515907	0		=			
ANR	3515985	ArrayIndexing	data [ i ++ ]		3515907	0					
ANR	3515986	Identifier	data		3515907	0					
ANR	3515987	PostIncDecOperationExpression	i ++		3515907	1					
ANR	3515988	Identifier	i		3515907	0					
ANR	3515989	IncDec	++		3515907	1					
ANR	3515990	PrimaryExpression	0xc0		3515907	1					
ANR	3515991	ElseStatement	else		3515907	0					
ANR	3515992	CompoundStatement		14:8:257:257	3515907	0					
ANR	3515993	ExpressionStatement	data [ i ++ ] = 0xc1	593:2:16330:16346	3515907	0	True				
ANR	3515994	AssignmentExpression	data [ i ++ ] = 0xc1		3515907	0		=			
ANR	3515995	ArrayIndexing	data [ i ++ ]		3515907	0					
ANR	3515996	Identifier	data		3515907	0					
ANR	3515997	PostIncDecOperationExpression	i ++		3515907	1					
ANR	3515998	Identifier	i		3515907	0					
ANR	3515999	IncDec	++		3515907	1					
ANR	3516000	PrimaryExpression	0xc1		3515907	1					
ANR	3516001	IfStatement	if ( op -> operands [ 0 ] . type & OT_REGALL && op -> operands [ 1 ] . type & OT_REGALL )		3515907	7					
ANR	3516002	Condition	op -> operands [ 0 ] . type & OT_REGALL && op -> operands [ 1 ] . type & OT_REGALL	595:5:16356:16430	3515907	0	True				
ANR	3516003	AndExpression	op -> operands [ 0 ] . type & OT_REGALL && op -> operands [ 1 ] . type & OT_REGALL		3515907	0		&&			
ANR	3516004	BitAndExpression	op -> operands [ 0 ] . type & OT_REGALL		3515907	0		&			
ANR	3516005	MemberAccess	op -> operands [ 0 ] . type		3515907	0					
ANR	3516006	ArrayIndexing	op -> operands [ 0 ]		3515907	0					
ANR	3516007	PtrMemberAccess	op -> operands		3515907	0					
ANR	3516008	Identifier	op		3515907	0					
ANR	3516009	Identifier	operands		3515907	1					
ANR	3516010	PrimaryExpression	0		3515907	1					
ANR	3516011	Identifier	type		3515907	1					
ANR	3516012	Identifier	OT_REGALL		3515907	1					
ANR	3516013	BitAndExpression	op -> operands [ 1 ] . type & OT_REGALL		3515907	1		&			
ANR	3516014	MemberAccess	op -> operands [ 1 ] . type		3515907	0					
ANR	3516015	ArrayIndexing	op -> operands [ 1 ]		3515907	0					
ANR	3516016	PtrMemberAccess	op -> operands		3515907	0					
ANR	3516017	Identifier	op		3515907	0					
ANR	3516018	Identifier	operands		3515907	1					
ANR	3516019	PrimaryExpression	1		3515907	1					
ANR	3516020	Identifier	type		3515907	1					
ANR	3516021	Identifier	OT_REGALL		3515907	1					
ANR	3516022	CompoundStatement		18:41:364:364	3515907	1					
ANR	3516023	ExpressionStatement	data [ i ] |= 0xc0	597:2:16458:16473	3515907	0	True				
ANR	3516024	AssignmentExpression	data [ i ] |= 0xc0		3515907	0		|=			
ANR	3516025	ArrayIndexing	data [ i ]		3515907	0					
ANR	3516026	Identifier	data		3515907	0					
ANR	3516027	Identifier	i		3515907	1					
ANR	3516028	PrimaryExpression	0xc0		3515907	1					
ANR	3516029	ExpressionStatement	data [ i ] |= ( op -> operands [ 1 ] . reg << 3 )	598:2:16477:16514	3515907	1	True				
ANR	3516030	AssignmentExpression	data [ i ] |= ( op -> operands [ 1 ] . reg << 3 )		3515907	0		|=			
ANR	3516031	ArrayIndexing	data [ i ]		3515907	0					
ANR	3516032	Identifier	data		3515907	0					
ANR	3516033	Identifier	i		3515907	1					
ANR	3516034	ShiftExpression	op -> operands [ 1 ] . reg << 3		3515907	1		<<			
ANR	3516035	MemberAccess	op -> operands [ 1 ] . reg		3515907	0					
ANR	3516036	ArrayIndexing	op -> operands [ 1 ]		3515907	0					
ANR	3516037	PtrMemberAccess	op -> operands		3515907	0					
ANR	3516038	Identifier	op		3515907	0					
ANR	3516039	Identifier	operands		3515907	1					
ANR	3516040	PrimaryExpression	1		3515907	1					
ANR	3516041	Identifier	reg		3515907	1					
ANR	3516042	PrimaryExpression	3		3515907	1					
ANR	3516043	ExpressionStatement	data [ i ++ ] |= op -> operands [ 0 ] . reg	599:2:16518:16550	3515907	2	True				
ANR	3516044	AssignmentExpression	data [ i ++ ] |= op -> operands [ 0 ] . reg		3515907	0		|=			
ANR	3516045	ArrayIndexing	data [ i ++ ]		3515907	0					
ANR	3516046	Identifier	data		3515907	0					
ANR	3516047	PostIncDecOperationExpression	i ++		3515907	1					
ANR	3516048	Identifier	i		3515907	0					
ANR	3516049	IncDec	++		3515907	1					
ANR	3516050	MemberAccess	op -> operands [ 0 ] . reg		3515907	1					
ANR	3516051	ArrayIndexing	op -> operands [ 0 ]		3515907	0					
ANR	3516052	PtrMemberAccess	op -> operands		3515907	0					
ANR	3516053	Identifier	op		3515907	0					
ANR	3516054	Identifier	operands		3515907	1					
ANR	3516055	PrimaryExpression	0		3515907	1					
ANR	3516056	Identifier	reg		3515907	1					
ANR	3516057	ReturnStatement	return i ;	601:1:16556:16564	3515907	8	True				
ANR	3516058	Identifier	i		3515907	0					
ANR	3516059	ReturnType	static int		3515907	1					
ANR	3516060	Identifier	opxadd		3515907	2					
ANR	3516061	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3515907	3					
ANR	3516062	Parameter	RAsm * a	579:18:16030:16036	3515907	0	True				
ANR	3516063	ParameterType	RAsm *		3515907	0					
ANR	3516064	Identifier	a		3515907	1					
ANR	3516065	Parameter	ut8 * data	579:27:16039:16047	3515907	1	True				
ANR	3516066	ParameterType	ut8 *		3515907	0					
ANR	3516067	Identifier	data		3515907	1					
ANR	3516068	Parameter	const Opcode * op	579:38:16050:16065	3515907	2	True				
ANR	3516069	ParameterType	const Opcode *		3515907	0					
ANR	3516070	Identifier	op		3515907	1					
ANR	3516071	CFGEntryNode	ENTRY		3515907		True				
ANR	3516072	CFGExitNode	EXIT		3515907		True				
ANR	3516073	Symbol	a		3515907						
ANR	3516074	Symbol	op		3515907						
ANR	3516075	Symbol	data		3515907						
ANR	3516076	Symbol	* op		3515907						
ANR	3516077	Symbol	op -> operands [ 1 ] . reg		3515907						
ANR	3516078	Symbol	i		3515907						
ANR	3516079	Symbol	* a		3515907						
ANR	3516080	Symbol	OT_REGALL		3515907						
ANR	3516081	Symbol	* * op		3515907						
ANR	3516082	Symbol	* op -> operands		3515907						
ANR	3516083	Symbol	* i		3515907						
ANR	3516084	Symbol	op -> operands [ 1 ] . type		3515907						
ANR	3516085	Symbol	op -> operands_count		3515907						
ANR	3516086	Symbol	op -> operands [ 0 ] . type		3515907						
ANR	3516087	Symbol	op -> operands [ 0 ] . reg		3515907						
ANR	3516088	Symbol	op -> operands		3515907						
ANR	3516089	Symbol	* data		3515907						
ANR	3516090	Symbol	a -> bits		3515907						
ANR	3516091	Symbol	OT_BYTE		3515907						
ANR	3516092	Function	opxor	604:0:16569:17202							
ANR	3516093	FunctionDef	"opxor (RAsm * a , ut8 * data , const Opcode * op)"		3516092	0					
ANR	3516094	CompoundStatement		604:56:16625:17202	3516092	0					
ANR	3516095	ExpressionStatement	is_valid_registers ( op )	605:1:16628:16651	3516092	0	True				
ANR	3516096	CallExpression	is_valid_registers ( op )		3516092	0					
ANR	3516097	Callee	is_valid_registers		3516092	0					
ANR	3516098	Identifier	is_valid_registers		3516092	0					
ANR	3516099	ArgumentList	op		3516092	1					
ANR	3516100	Argument	op		3516092	0					
ANR	3516101	Identifier	op		3516092	0					
ANR	3516102	IfStatement	if ( op -> operands_count < 2 )		3516092	1					
ANR	3516103	Condition	op -> operands_count < 2	606:5:16658:16679	3516092	0	True				
ANR	3516104	RelationalExpression	op -> operands_count < 2		3516092	0		<			
ANR	3516105	PtrMemberAccess	op -> operands_count		3516092	0					
ANR	3516106	Identifier	op		3516092	0					
ANR	3516107	Identifier	operands_count		3516092	1					
ANR	3516108	PrimaryExpression	2		3516092	1					
ANR	3516109	CompoundStatement		3:29:56:56	3516092	1					
ANR	3516110	ReturnStatement	return - 1 ;	607:2:16686:16695	3516092	0	True				
ANR	3516111	UnaryOperationExpression	- 1		3516092	0					
ANR	3516112	UnaryOperator	-		3516092	0					
ANR	3516113	PrimaryExpression	1		3516092	1					
ANR	3516114	IfStatement	if ( op -> operands [ 0 ] . type == 0x80 && op -> operands [ 0 ] . reg == X86R_UNDEFINED )		3516092	2					
ANR	3516115	Condition	op -> operands [ 0 ] . type == 0x80 && op -> operands [ 0 ] . reg == X86R_UNDEFINED	609:5:16705:16773	3516092	0	True				
ANR	3516116	AndExpression	op -> operands [ 0 ] . type == 0x80 && op -> operands [ 0 ] . reg == X86R_UNDEFINED		3516092	0		&&			
ANR	3516117	EqualityExpression	op -> operands [ 0 ] . type == 0x80		3516092	0		==			
ANR	3516118	MemberAccess	op -> operands [ 0 ] . type		3516092	0					
ANR	3516119	ArrayIndexing	op -> operands [ 0 ]		3516092	0					
ANR	3516120	PtrMemberAccess	op -> operands		3516092	0					
ANR	3516121	Identifier	op		3516092	0					
ANR	3516122	Identifier	operands		3516092	1					
ANR	3516123	PrimaryExpression	0		3516092	1					
ANR	3516124	Identifier	type		3516092	1					
ANR	3516125	PrimaryExpression	0x80		3516092	1					
ANR	3516126	EqualityExpression	op -> operands [ 0 ] . reg == X86R_UNDEFINED		3516092	1		==			
ANR	3516127	MemberAccess	op -> operands [ 0 ] . reg		3516092	0					
ANR	3516128	ArrayIndexing	op -> operands [ 0 ]		3516092	0					
ANR	3516129	PtrMemberAccess	op -> operands		3516092	0					
ANR	3516130	Identifier	op		3516092	0					
ANR	3516131	Identifier	operands		3516092	1					
ANR	3516132	PrimaryExpression	0		3516092	1					
ANR	3516133	Identifier	reg		3516092	1					
ANR	3516134	Identifier	X86R_UNDEFINED		3516092	1					
ANR	3516135	CompoundStatement		6:76:150:150	3516092	1					
ANR	3516136	ReturnStatement	return - 1 ;	610:2:16780:16789	3516092	0	True				
ANR	3516137	UnaryOperationExpression	- 1		3516092	0					
ANR	3516138	UnaryOperator	-		3516092	0					
ANR	3516139	PrimaryExpression	1		3516092	1					
ANR	3516140	IfStatement	if ( op -> operands [ 1 ] . type == 0x80 && op -> operands [ 0 ] . reg == X86R_UNDEFINED )		3516092	3					
ANR	3516141	Condition	op -> operands [ 1 ] . type == 0x80 && op -> operands [ 0 ] . reg == X86R_UNDEFINED	612:5:16799:16867	3516092	0	True				
ANR	3516142	AndExpression	op -> operands [ 1 ] . type == 0x80 && op -> operands [ 0 ] . reg == X86R_UNDEFINED		3516092	0		&&			
ANR	3516143	EqualityExpression	op -> operands [ 1 ] . type == 0x80		3516092	0		==			
ANR	3516144	MemberAccess	op -> operands [ 1 ] . type		3516092	0					
ANR	3516145	ArrayIndexing	op -> operands [ 1 ]		3516092	0					
ANR	3516146	PtrMemberAccess	op -> operands		3516092	0					
ANR	3516147	Identifier	op		3516092	0					
ANR	3516148	Identifier	operands		3516092	1					
ANR	3516149	PrimaryExpression	1		3516092	1					
ANR	3516150	Identifier	type		3516092	1					
ANR	3516151	PrimaryExpression	0x80		3516092	1					
ANR	3516152	EqualityExpression	op -> operands [ 0 ] . reg == X86R_UNDEFINED		3516092	1		==			
ANR	3516153	MemberAccess	op -> operands [ 0 ] . reg		3516092	0					
ANR	3516154	ArrayIndexing	op -> operands [ 0 ]		3516092	0					
ANR	3516155	PtrMemberAccess	op -> operands		3516092	0					
ANR	3516156	Identifier	op		3516092	0					
ANR	3516157	Identifier	operands		3516092	1					
ANR	3516158	PrimaryExpression	0		3516092	1					
ANR	3516159	Identifier	reg		3516092	1					
ANR	3516160	Identifier	X86R_UNDEFINED		3516092	1					
ANR	3516161	CompoundStatement		9:76:244:244	3516092	1					
ANR	3516162	ReturnStatement	return - 1 ;	613:2:16874:16883	3516092	0	True				
ANR	3516163	UnaryOperationExpression	- 1		3516092	0					
ANR	3516164	UnaryOperator	-		3516092	0					
ANR	3516165	PrimaryExpression	1		3516092	1					
ANR	3516166	IfStatement	if ( op -> operands [ 1 ] . type & OT_CONSTANT )		3516092	4					
ANR	3516167	Condition	op -> operands [ 1 ] . type & OT_CONSTANT	615:5:16893:16926	3516092	0	True				
ANR	3516168	BitAndExpression	op -> operands [ 1 ] . type & OT_CONSTANT		3516092	0		&			
ANR	3516169	MemberAccess	op -> operands [ 1 ] . type		3516092	0					
ANR	3516170	ArrayIndexing	op -> operands [ 1 ]		3516092	0					
ANR	3516171	PtrMemberAccess	op -> operands		3516092	0					
ANR	3516172	Identifier	op		3516092	0					
ANR	3516173	Identifier	operands		3516092	1					
ANR	3516174	PrimaryExpression	1		3516092	1					
ANR	3516175	Identifier	type		3516092	1					
ANR	3516176	Identifier	OT_CONSTANT		3516092	1					
ANR	3516177	CompoundStatement		12:41:303:303	3516092	1					
ANR	3516178	IfStatement	if ( op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD )		3516092	0					
ANR	3516179	Condition	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD	616:6:16937:17007	3516092	0	True				
ANR	3516180	AndExpression	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD		3516092	0		&&			
ANR	3516181	BitAndExpression	op -> operands [ 0 ] . type & OT_GPREG		3516092	0		&			
ANR	3516182	MemberAccess	op -> operands [ 0 ] . type		3516092	0					
ANR	3516183	ArrayIndexing	op -> operands [ 0 ]		3516092	0					
ANR	3516184	PtrMemberAccess	op -> operands		3516092	0					
ANR	3516185	Identifier	op		3516092	0					
ANR	3516186	Identifier	operands		3516092	1					
ANR	3516187	PrimaryExpression	0		3516092	1					
ANR	3516188	Identifier	type		3516092	1					
ANR	3516189	Identifier	OT_GPREG		3516092	1					
ANR	3516190	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		3516092	1		&			
ANR	3516191	MemberAccess	op -> operands [ 0 ] . type		3516092	0					
ANR	3516192	ArrayIndexing	op -> operands [ 0 ]		3516092	0					
ANR	3516193	PtrMemberAccess	op -> operands		3516092	0					
ANR	3516194	Identifier	op		3516092	0					
ANR	3516195	Identifier	operands		3516092	1					
ANR	3516196	PrimaryExpression	0		3516092	1					
ANR	3516197	Identifier	type		3516092	1					
ANR	3516198	Identifier	OT_WORD		3516092	1					
ANR	3516199	CompoundStatement		14:38:384:384	3516092	1					
ANR	3516200	ReturnStatement	"return process_16bit_group_1 ( a , data , op , 0x30 ) ;"	618:3:17015:17063	3516092	0	True				
ANR	3516201	CallExpression	"process_16bit_group_1 ( a , data , op , 0x30 )"		3516092	0					
ANR	3516202	Callee	process_16bit_group_1		3516092	0					
ANR	3516203	Identifier	process_16bit_group_1		3516092	0					
ANR	3516204	ArgumentList	a		3516092	1					
ANR	3516205	Argument	a		3516092	0					
ANR	3516206	Identifier	a		3516092	0					
ANR	3516207	Argument	data		3516092	1					
ANR	3516208	Identifier	data		3516092	0					
ANR	3516209	Argument	op		3516092	2					
ANR	3516210	Identifier	op		3516092	0					
ANR	3516211	Argument	0x30		3516092	3					
ANR	3516212	PrimaryExpression	0x30		3516092	0					
ANR	3516213	IfStatement	if ( ! is_al_reg ( & op -> operands [ 0 ] ) )		3516092	1					
ANR	3516214	Condition	! is_al_reg ( & op -> operands [ 0 ] )	620:6:17075:17103	3516092	0	True				
ANR	3516215	UnaryOperationExpression	! is_al_reg ( & op -> operands [ 0 ] )		3516092	0					
ANR	3516216	UnaryOperator	!		3516092	0					
ANR	3516217	CallExpression	is_al_reg ( & op -> operands [ 0 ] )		3516092	1					
ANR	3516218	Callee	is_al_reg		3516092	0					
ANR	3516219	Identifier	is_al_reg		3516092	0					
ANR	3516220	ArgumentList	& op -> operands [ 0 ]		3516092	1					
ANR	3516221	Argument	& op -> operands [ 0 ]		3516092	0					
ANR	3516222	UnaryOperationExpression	& op -> operands [ 0 ]		3516092	0					
ANR	3516223	UnaryOperator	&		3516092	0					
ANR	3516224	ArrayIndexing	op -> operands [ 0 ]		3516092	1					
ANR	3516225	PtrMemberAccess	op -> operands		3516092	0					
ANR	3516226	Identifier	op		3516092	0					
ANR	3516227	Identifier	operands		3516092	1					
ANR	3516228	PrimaryExpression	0		3516092	1					
ANR	3516229	CompoundStatement		17:37:480:480	3516092	1					
ANR	3516230	ReturnStatement	"return process_group_1 ( a , data , op ) ;"	621:3:17111:17147	3516092	0	True				
ANR	3516231	CallExpression	"process_group_1 ( a , data , op )"		3516092	0					
ANR	3516232	Callee	process_group_1		3516092	0					
ANR	3516233	Identifier	process_group_1		3516092	0					
ANR	3516234	ArgumentList	a		3516092	1					
ANR	3516235	Argument	a		3516092	0					
ANR	3516236	Identifier	a		3516092	0					
ANR	3516237	Argument	data		3516092	1					
ANR	3516238	Identifier	data		3516092	0					
ANR	3516239	Argument	op		3516092	2					
ANR	3516240	Identifier	op		3516092	0					
ANR	3516241	ReturnStatement	"return process_1byte_op ( a , data , op , 0x30 ) ;"	624:1:17157:17200	3516092	5	True				
ANR	3516242	CallExpression	"process_1byte_op ( a , data , op , 0x30 )"		3516092	0					
ANR	3516243	Callee	process_1byte_op		3516092	0					
ANR	3516244	Identifier	process_1byte_op		3516092	0					
ANR	3516245	ArgumentList	a		3516092	1					
ANR	3516246	Argument	a		3516092	0					
ANR	3516247	Identifier	a		3516092	0					
ANR	3516248	Argument	data		3516092	1					
ANR	3516249	Identifier	data		3516092	0					
ANR	3516250	Argument	op		3516092	2					
ANR	3516251	Identifier	op		3516092	0					
ANR	3516252	Argument	0x30		3516092	3					
ANR	3516253	PrimaryExpression	0x30		3516092	0					
ANR	3516254	ReturnType	static int		3516092	1					
ANR	3516255	Identifier	opxor		3516092	2					
ANR	3516256	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3516092	3					
ANR	3516257	Parameter	RAsm * a	604:17:16586:16592	3516092	0	True				
ANR	3516258	ParameterType	RAsm *		3516092	0					
ANR	3516259	Identifier	a		3516092	1					
ANR	3516260	Parameter	ut8 * data	604:26:16595:16604	3516092	1	True				
ANR	3516261	ParameterType	ut8 *		3516092	0					
ANR	3516262	Identifier	data		3516092	1					
ANR	3516263	Parameter	const Opcode * op	604:38:16607:16622	3516092	2	True				
ANR	3516264	ParameterType	const Opcode *		3516092	0					
ANR	3516265	Identifier	op		3516092	1					
ANR	3516266	CFGEntryNode	ENTRY		3516092		True				
ANR	3516267	CFGExitNode	EXIT		3516092		True				
ANR	3516268	Symbol	a		3516092						
ANR	3516269	Symbol	op		3516092						
ANR	3516270	Symbol	OT_CONSTANT		3516092						
ANR	3516271	Symbol	OT_WORD		3516092						
ANR	3516272	Symbol	OT_GPREG		3516092						
ANR	3516273	Symbol	data		3516092						
ANR	3516274	Symbol	* op		3516092						
ANR	3516275	Symbol	process_group_1		3516092						
ANR	3516276	Symbol	process_1byte_op		3516092						
ANR	3516277	Symbol	* * op		3516092						
ANR	3516278	Symbol	* op -> operands		3516092						
ANR	3516279	Symbol	process_16bit_group_1		3516092						
ANR	3516280	Symbol	X86R_UNDEFINED		3516092						
ANR	3516281	Symbol	op -> operands [ 1 ] . type		3516092						
ANR	3516282	Symbol	op -> operands_count		3516092						
ANR	3516283	Symbol	op -> operands [ 0 ] . type		3516092						
ANR	3516284	Symbol	is_al_reg		3516092						
ANR	3516285	Symbol	op -> operands [ 0 ] . reg		3516092						
ANR	3516286	Symbol	op -> operands		3516092						
ANR	3516287	Function	opnot	627:0:17205:17806							
ANR	3516288	FunctionDef	"opnot (RAsm * a , ut8 * data , const Opcode * op)"		3516287	0					
ANR	3516289	CompoundStatement		627:56:17261:17806	3516287	0					
ANR	3516290	ExpressionStatement	is_valid_registers ( op )	628:1:17264:17287	3516287	0	True				
ANR	3516291	CallExpression	is_valid_registers ( op )		3516287	0					
ANR	3516292	Callee	is_valid_registers		3516287	0					
ANR	3516293	Identifier	is_valid_registers		3516287	0					
ANR	3516294	ArgumentList	op		3516287	1					
ANR	3516295	Argument	op		3516287	0					
ANR	3516296	Identifier	op		3516287	0					
ANR	3516297	IdentifierDeclStatement	int l = 0 ;	629:1:17290:17299	3516287	1	True				
ANR	3516298	IdentifierDecl	l = 0		3516287	0					
ANR	3516299	IdentifierDeclType	int		3516287	0					
ANR	3516300	Identifier	l		3516287	1					
ANR	3516301	AssignmentExpression	l = 0		3516287	2		=			
ANR	3516302	Identifier	l		3516287	0					
ANR	3516303	PrimaryExpression	0		3516287	1					
ANR	3516304	IfStatement	if ( op -> operands [ 0 ] . reg == X86R_UNDEFINED )		3516287	2					
ANR	3516305	Condition	op -> operands [ 0 ] . reg == X86R_UNDEFINED	631:5:17307:17343	3516287	0	True				
ANR	3516306	EqualityExpression	op -> operands [ 0 ] . reg == X86R_UNDEFINED		3516287	0		==			
ANR	3516307	MemberAccess	op -> operands [ 0 ] . reg		3516287	0					
ANR	3516308	ArrayIndexing	op -> operands [ 0 ]		3516287	0					
ANR	3516309	PtrMemberAccess	op -> operands		3516287	0					
ANR	3516310	Identifier	op		3516287	0					
ANR	3516311	Identifier	operands		3516287	1					
ANR	3516312	PrimaryExpression	0		3516287	1					
ANR	3516313	Identifier	reg		3516287	1					
ANR	3516314	Identifier	X86R_UNDEFINED		3516287	1					
ANR	3516315	CompoundStatement		5:45:85:85	3516287	1					
ANR	3516316	ReturnStatement	return - 1 ;	632:2:17351:17360	3516287	0	True				
ANR	3516317	UnaryOperationExpression	- 1		3516287	0					
ANR	3516318	UnaryOperator	-		3516287	0					
ANR	3516319	PrimaryExpression	1		3516287	1					
ANR	3516320	IdentifierDeclStatement	int size = op -> operands [ 0 ] . type & ALL_SIZE ;	635:1:17367:17409	3516287	3	True				
ANR	3516321	IdentifierDecl	size = op -> operands [ 0 ] . type & ALL_SIZE		3516287	0					
ANR	3516322	IdentifierDeclType	int		3516287	0					
ANR	3516323	Identifier	size		3516287	1					
ANR	3516324	AssignmentExpression	size = op -> operands [ 0 ] . type & ALL_SIZE		3516287	2		=			
ANR	3516325	Identifier	size		3516287	0					
ANR	3516326	BitAndExpression	op -> operands [ 0 ] . type & ALL_SIZE		3516287	1		&			
ANR	3516327	MemberAccess	op -> operands [ 0 ] . type		3516287	0					
ANR	3516328	ArrayIndexing	op -> operands [ 0 ]		3516287	0					
ANR	3516329	PtrMemberAccess	op -> operands		3516287	0					
ANR	3516330	Identifier	op		3516287	0					
ANR	3516331	Identifier	operands		3516287	1					
ANR	3516332	PrimaryExpression	0		3516287	1					
ANR	3516333	Identifier	type		3516287	1					
ANR	3516334	Identifier	ALL_SIZE		3516287	1					
ANR	3516335	IfStatement	if ( op -> operands [ 0 ] . explicit_size )		3516287	4					
ANR	3516336	Condition	op -> operands [ 0 ] . explicit_size	636:5:17416:17444	3516287	0	True				
ANR	3516337	MemberAccess	op -> operands [ 0 ] . explicit_size		3516287	0					
ANR	3516338	ArrayIndexing	op -> operands [ 0 ]		3516287	0					
ANR	3516339	PtrMemberAccess	op -> operands		3516287	0					
ANR	3516340	Identifier	op		3516287	0					
ANR	3516341	Identifier	operands		3516287	1					
ANR	3516342	PrimaryExpression	0		3516287	1					
ANR	3516343	Identifier	explicit_size		3516287	1					
ANR	3516344	CompoundStatement		10:36:185:185	3516287	1					
ANR	3516345	ExpressionStatement	size = op -> operands [ 0 ] . dest_size	637:2:17451:17483	3516287	0	True				
ANR	3516346	AssignmentExpression	size = op -> operands [ 0 ] . dest_size		3516287	0		=			
ANR	3516347	Identifier	size		3516287	0					
ANR	3516348	MemberAccess	op -> operands [ 0 ] . dest_size		3516287	1					
ANR	3516349	ArrayIndexing	op -> operands [ 0 ]		3516287	0					
ANR	3516350	PtrMemberAccess	op -> operands		3516287	0					
ANR	3516351	Identifier	op		3516287	0					
ANR	3516352	Identifier	operands		3516287	1					
ANR	3516353	PrimaryExpression	0		3516287	1					
ANR	3516354	Identifier	dest_size		3516287	1					
ANR	3516355	IdentifierDeclStatement	int rex = 1 << 6 ;	640:1:17503:17519	3516287	5	True				
ANR	3516356	IdentifierDecl	rex = 1 << 6		3516287	0					
ANR	3516357	IdentifierDeclType	int		3516287	0					
ANR	3516358	Identifier	rex		3516287	1					
ANR	3516359	AssignmentExpression	rex = 1 << 6		3516287	2		=			
ANR	3516360	Identifier	rex		3516287	0					
ANR	3516361	ShiftExpression	1 << 6		3516287	1		<<			
ANR	3516362	PrimaryExpression	1		3516287	0					
ANR	3516363	PrimaryExpression	6		3516287	1					
ANR	3516364	IdentifierDeclStatement	bool use_rex = false ;	641:1:17522:17542	3516287	6	True				
ANR	3516365	IdentifierDecl	use_rex = false		3516287	0					
ANR	3516366	IdentifierDeclType	bool		3516287	0					
ANR	3516367	Identifier	use_rex		3516287	1					
ANR	3516368	AssignmentExpression	use_rex = false		3516287	2		=			
ANR	3516369	Identifier	false		3516287	0					
ANR	3516370	Identifier	false		3516287	1					
ANR	3516371	IfStatement	if ( size & OT_QWORD )		3516287	7					
ANR	3516372	Condition	size & OT_QWORD	642:5:17549:17563	3516287	0	True				
ANR	3516373	BitAndExpression	size & OT_QWORD		3516287	0		&			
ANR	3516374	Identifier	size		3516287	0					
ANR	3516375	Identifier	OT_QWORD		3516287	1					
ANR	3516376	CompoundStatement		16:22:304:304	3516287	1					
ANR	3516377	ExpressionStatement	use_rex = true	643:2:17582:17596	3516287	0	True				
ANR	3516378	AssignmentExpression	use_rex = true		3516287	0		=			
ANR	3516379	Identifier	use_rex		3516287	0					
ANR	3516380	Identifier	true		3516287	1					
ANR	3516381	ExpressionStatement	rex |= 1 << 3	644:2:17600:17613	3516287	1	True				
ANR	3516382	AssignmentExpression	rex |= 1 << 3		3516287	0		|=			
ANR	3516383	Identifier	rex		3516287	0					
ANR	3516384	ShiftExpression	1 << 3		3516287	1		<<			
ANR	3516385	PrimaryExpression	1		3516287	0					
ANR	3516386	PrimaryExpression	3		3516287	1					
ANR	3516387	IfStatement	if ( op -> operands [ 0 ] . extended )		3516287	8					
ANR	3516388	Condition	op -> operands [ 0 ] . extended	646:5:17623:17646	3516287	0	True				
ANR	3516389	MemberAccess	op -> operands [ 0 ] . extended		3516287	0					
ANR	3516390	ArrayIndexing	op -> operands [ 0 ]		3516287	0					
ANR	3516391	PtrMemberAccess	op -> operands		3516287	0					
ANR	3516392	Identifier	op		3516287	0					
ANR	3516393	Identifier	operands		3516287	1					
ANR	3516394	PrimaryExpression	0		3516287	1					
ANR	3516395	Identifier	extended		3516287	1					
ANR	3516396	CompoundStatement		20:31:387:387	3516287	1					
ANR	3516397	ExpressionStatement	use_rex = true	647:2:17664:17678	3516287	0	True				
ANR	3516398	AssignmentExpression	use_rex = true		3516287	0		=			
ANR	3516399	Identifier	use_rex		3516287	0					
ANR	3516400	Identifier	true		3516287	1					
ANR	3516401	ExpressionStatement	rex |= 1	648:2:17682:17690	3516287	1	True				
ANR	3516402	AssignmentExpression	rex |= 1		3516287	0		|=			
ANR	3516403	Identifier	rex		3516287	0					
ANR	3516404	PrimaryExpression	1		3516287	1					
ANR	3516405	IfStatement	if ( use_rex )		3516287	9					
ANR	3516406	Condition	use_rex	651:5:17701:17707	3516287	0	True				
ANR	3516407	Identifier	use_rex		3516287	0					
ANR	3516408	CompoundStatement		25:14:448:448	3516287	1					
ANR	3516409	ExpressionStatement	data [ l ++ ] = rex	652:2:17714:17729	3516287	0	True				
ANR	3516410	AssignmentExpression	data [ l ++ ] = rex		3516287	0		=			
ANR	3516411	ArrayIndexing	data [ l ++ ]		3516287	0					
ANR	3516412	Identifier	data		3516287	0					
ANR	3516413	PostIncDecOperationExpression	l ++		3516287	1					
ANR	3516414	Identifier	l		3516287	0					
ANR	3516415	IncDec	++		3516287	1					
ANR	3516416	Identifier	rex		3516287	1					
ANR	3516417	ExpressionStatement	data [ l ++ ] = 0xf7	654:1:17735:17751	3516287	10	True				
ANR	3516418	AssignmentExpression	data [ l ++ ] = 0xf7		3516287	0		=			
ANR	3516419	ArrayIndexing	data [ l ++ ]		3516287	0					
ANR	3516420	Identifier	data		3516287	0					
ANR	3516421	PostIncDecOperationExpression	l ++		3516287	1					
ANR	3516422	Identifier	l		3516287	0					
ANR	3516423	IncDec	++		3516287	1					
ANR	3516424	PrimaryExpression	0xf7		3516287	1					
ANR	3516425	ExpressionStatement	data [ l ++ ] = 0xd0 | op -> operands [ 0 ] . reg	655:1:17754:17792	3516287	11	True				
ANR	3516426	AssignmentExpression	data [ l ++ ] = 0xd0 | op -> operands [ 0 ] . reg		3516287	0		=			
ANR	3516427	ArrayIndexing	data [ l ++ ]		3516287	0					
ANR	3516428	Identifier	data		3516287	0					
ANR	3516429	PostIncDecOperationExpression	l ++		3516287	1					
ANR	3516430	Identifier	l		3516287	0					
ANR	3516431	IncDec	++		3516287	1					
ANR	3516432	InclusiveOrExpression	0xd0 | op -> operands [ 0 ] . reg		3516287	1		|			
ANR	3516433	PrimaryExpression	0xd0		3516287	0					
ANR	3516434	MemberAccess	op -> operands [ 0 ] . reg		3516287	1					
ANR	3516435	ArrayIndexing	op -> operands [ 0 ]		3516287	0					
ANR	3516436	PtrMemberAccess	op -> operands		3516287	0					
ANR	3516437	Identifier	op		3516287	0					
ANR	3516438	Identifier	operands		3516287	1					
ANR	3516439	PrimaryExpression	0		3516287	1					
ANR	3516440	Identifier	reg		3516287	1					
ANR	3516441	ReturnStatement	return l ;	657:1:17796:17804	3516287	12	True				
ANR	3516442	Identifier	l		3516287	0					
ANR	3516443	ReturnType	static int		3516287	1					
ANR	3516444	Identifier	opnot		3516287	2					
ANR	3516445	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3516287	3					
ANR	3516446	Parameter	RAsm * a	627:17:17222:17228	3516287	0	True				
ANR	3516447	ParameterType	RAsm *		3516287	0					
ANR	3516448	Identifier	a		3516287	1					
ANR	3516449	Parameter	ut8 * data	627:26:17231:17240	3516287	1	True				
ANR	3516450	ParameterType	ut8 *		3516287	0					
ANR	3516451	Identifier	data		3516287	1					
ANR	3516452	Parameter	const Opcode * op	627:38:17243:17258	3516287	2	True				
ANR	3516453	ParameterType	const Opcode *		3516287	0					
ANR	3516454	Identifier	op		3516287	1					
ANR	3516455	CFGEntryNode	ENTRY		3516287		True				
ANR	3516456	CFGExitNode	EXIT		3516287		True				
ANR	3516457	Symbol	a		3516287						
ANR	3516458	Symbol	op		3516287						
ANR	3516459	Symbol	OT_QWORD		3516287						
ANR	3516460	Symbol	data		3516287						
ANR	3516461	Symbol	* op		3516287						
ANR	3516462	Symbol	rex		3516287						
ANR	3516463	Symbol	op -> operands [ 0 ] . explicit_size		3516287						
ANR	3516464	Symbol	op -> operands [ 0 ] . dest_size		3516287						
ANR	3516465	Symbol	ALL_SIZE		3516287						
ANR	3516466	Symbol	false		3516287						
ANR	3516467	Symbol	l		3516287						
ANR	3516468	Symbol	* * op		3516287						
ANR	3516469	Symbol	op -> operands [ 0 ] . extended		3516287						
ANR	3516470	Symbol	* op -> operands		3516287						
ANR	3516471	Symbol	X86R_UNDEFINED		3516287						
ANR	3516472	Symbol	size		3516287						
ANR	3516473	Symbol	op -> operands [ 0 ] . type		3516287						
ANR	3516474	Symbol	true		3516287						
ANR	3516475	Symbol	op -> operands [ 0 ] . reg		3516287						
ANR	3516476	Symbol	op -> operands		3516287						
ANR	3516477	Symbol	* data		3516287						
ANR	3516478	Symbol	use_rex		3516287						
ANR	3516479	Function	opsbb	660:0:17809:18180							
ANR	3516480	FunctionDef	"opsbb (RAsm * a , ut8 * data , const Opcode * op)"		3516479	0					
ANR	3516481	CompoundStatement		660:55:17864:18180	3516479	0					
ANR	3516482	IfStatement	if ( op -> operands [ 1 ] . type & OT_CONSTANT )		3516479	0					
ANR	3516483	Condition	op -> operands [ 1 ] . type & OT_CONSTANT	661:5:17871:17904	3516479	0	True				
ANR	3516484	BitAndExpression	op -> operands [ 1 ] . type & OT_CONSTANT		3516479	0		&			
ANR	3516485	MemberAccess	op -> operands [ 1 ] . type		3516479	0					
ANR	3516486	ArrayIndexing	op -> operands [ 1 ]		3516479	0					
ANR	3516487	PtrMemberAccess	op -> operands		3516479	0					
ANR	3516488	Identifier	op		3516479	0					
ANR	3516489	Identifier	operands		3516479	1					
ANR	3516490	PrimaryExpression	1		3516479	1					
ANR	3516491	Identifier	type		3516479	1					
ANR	3516492	Identifier	OT_CONSTANT		3516479	1					
ANR	3516493	CompoundStatement		2:41:42:42	3516479	1					
ANR	3516494	IfStatement	if ( op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD )		3516479	0					
ANR	3516495	Condition	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD	662:6:17915:17985	3516479	0	True				
ANR	3516496	AndExpression	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD		3516479	0		&&			
ANR	3516497	BitAndExpression	op -> operands [ 0 ] . type & OT_GPREG		3516479	0		&			
ANR	3516498	MemberAccess	op -> operands [ 0 ] . type		3516479	0					
ANR	3516499	ArrayIndexing	op -> operands [ 0 ]		3516479	0					
ANR	3516500	PtrMemberAccess	op -> operands		3516479	0					
ANR	3516501	Identifier	op		3516479	0					
ANR	3516502	Identifier	operands		3516479	1					
ANR	3516503	PrimaryExpression	0		3516479	1					
ANR	3516504	Identifier	type		3516479	1					
ANR	3516505	Identifier	OT_GPREG		3516479	1					
ANR	3516506	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		3516479	1		&			
ANR	3516507	MemberAccess	op -> operands [ 0 ] . type		3516479	0					
ANR	3516508	ArrayIndexing	op -> operands [ 0 ]		3516479	0					
ANR	3516509	PtrMemberAccess	op -> operands		3516479	0					
ANR	3516510	Identifier	op		3516479	0					
ANR	3516511	Identifier	operands		3516479	1					
ANR	3516512	PrimaryExpression	0		3516479	1					
ANR	3516513	Identifier	type		3516479	1					
ANR	3516514	Identifier	OT_WORD		3516479	1					
ANR	3516515	CompoundStatement		4:38:123:123	3516479	1					
ANR	3516516	ReturnStatement	"return process_16bit_group_1 ( a , data , op , 0x18 ) ;"	664:3:17993:18041	3516479	0	True				
ANR	3516517	CallExpression	"process_16bit_group_1 ( a , data , op , 0x18 )"		3516479	0					
ANR	3516518	Callee	process_16bit_group_1		3516479	0					
ANR	3516519	Identifier	process_16bit_group_1		3516479	0					
ANR	3516520	ArgumentList	a		3516479	1					
ANR	3516521	Argument	a		3516479	0					
ANR	3516522	Identifier	a		3516479	0					
ANR	3516523	Argument	data		3516479	1					
ANR	3516524	Identifier	data		3516479	0					
ANR	3516525	Argument	op		3516479	2					
ANR	3516526	Identifier	op		3516479	0					
ANR	3516527	Argument	0x18		3516479	3					
ANR	3516528	PrimaryExpression	0x18		3516479	0					
ANR	3516529	IfStatement	if ( ! is_al_reg ( & op -> operands [ 0 ] ) )		3516479	1					
ANR	3516530	Condition	! is_al_reg ( & op -> operands [ 0 ] )	666:6:18053:18081	3516479	0	True				
ANR	3516531	UnaryOperationExpression	! is_al_reg ( & op -> operands [ 0 ] )		3516479	0					
ANR	3516532	UnaryOperator	!		3516479	0					
ANR	3516533	CallExpression	is_al_reg ( & op -> operands [ 0 ] )		3516479	1					
ANR	3516534	Callee	is_al_reg		3516479	0					
ANR	3516535	Identifier	is_al_reg		3516479	0					
ANR	3516536	ArgumentList	& op -> operands [ 0 ]		3516479	1					
ANR	3516537	Argument	& op -> operands [ 0 ]		3516479	0					
ANR	3516538	UnaryOperationExpression	& op -> operands [ 0 ]		3516479	0					
ANR	3516539	UnaryOperator	&		3516479	0					
ANR	3516540	ArrayIndexing	op -> operands [ 0 ]		3516479	1					
ANR	3516541	PtrMemberAccess	op -> operands		3516479	0					
ANR	3516542	Identifier	op		3516479	0					
ANR	3516543	Identifier	operands		3516479	1					
ANR	3516544	PrimaryExpression	0		3516479	1					
ANR	3516545	CompoundStatement		7:37:219:219	3516479	1					
ANR	3516546	ReturnStatement	"return process_group_1 ( a , data , op ) ;"	667:3:18089:18125	3516479	0	True				
ANR	3516547	CallExpression	"process_group_1 ( a , data , op )"		3516479	0					
ANR	3516548	Callee	process_group_1		3516479	0					
ANR	3516549	Identifier	process_group_1		3516479	0					
ANR	3516550	ArgumentList	a		3516479	1					
ANR	3516551	Argument	a		3516479	0					
ANR	3516552	Identifier	a		3516479	0					
ANR	3516553	Argument	data		3516479	1					
ANR	3516554	Identifier	data		3516479	0					
ANR	3516555	Argument	op		3516479	2					
ANR	3516556	Identifier	op		3516479	0					
ANR	3516557	ReturnStatement	"return process_1byte_op ( a , data , op , 0x18 ) ;"	670:1:18135:18178	3516479	1	True				
ANR	3516558	CallExpression	"process_1byte_op ( a , data , op , 0x18 )"		3516479	0					
ANR	3516559	Callee	process_1byte_op		3516479	0					
ANR	3516560	Identifier	process_1byte_op		3516479	0					
ANR	3516561	ArgumentList	a		3516479	1					
ANR	3516562	Argument	a		3516479	0					
ANR	3516563	Identifier	a		3516479	0					
ANR	3516564	Argument	data		3516479	1					
ANR	3516565	Identifier	data		3516479	0					
ANR	3516566	Argument	op		3516479	2					
ANR	3516567	Identifier	op		3516479	0					
ANR	3516568	Argument	0x18		3516479	3					
ANR	3516569	PrimaryExpression	0x18		3516479	0					
ANR	3516570	ReturnType	static int		3516479	1					
ANR	3516571	Identifier	opsbb		3516479	2					
ANR	3516572	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3516479	3					
ANR	3516573	Parameter	RAsm * a	660:17:17826:17832	3516479	0	True				
ANR	3516574	ParameterType	RAsm *		3516479	0					
ANR	3516575	Identifier	a		3516479	1					
ANR	3516576	Parameter	ut8 * data	660:26:17835:17843	3516479	1	True				
ANR	3516577	ParameterType	ut8 *		3516479	0					
ANR	3516578	Identifier	data		3516479	1					
ANR	3516579	Parameter	const Opcode * op	660:37:17846:17861	3516479	2	True				
ANR	3516580	ParameterType	const Opcode *		3516479	0					
ANR	3516581	Identifier	op		3516479	1					
ANR	3516582	CFGEntryNode	ENTRY		3516479		True				
ANR	3516583	CFGExitNode	EXIT		3516479		True				
ANR	3516584	Symbol	a		3516479						
ANR	3516585	Symbol	op		3516479						
ANR	3516586	Symbol	OT_CONSTANT		3516479						
ANR	3516587	Symbol	OT_WORD		3516479						
ANR	3516588	Symbol	OT_GPREG		3516479						
ANR	3516589	Symbol	data		3516479						
ANR	3516590	Symbol	* op		3516479						
ANR	3516591	Symbol	process_group_1		3516479						
ANR	3516592	Symbol	process_1byte_op		3516479						
ANR	3516593	Symbol	* * op		3516479						
ANR	3516594	Symbol	* op -> operands		3516479						
ANR	3516595	Symbol	process_16bit_group_1		3516479						
ANR	3516596	Symbol	op -> operands [ 1 ] . type		3516479						
ANR	3516597	Symbol	op -> operands [ 0 ] . type		3516479						
ANR	3516598	Symbol	is_al_reg		3516479						
ANR	3516599	Symbol	op -> operands		3516479						
ANR	3516600	Function	opbs	673:0:18183:19303							
ANR	3516601	FunctionDef	"opbs (RAsm * a , ut8 * data , const Opcode * op)"		3516600	0					
ANR	3516602	CompoundStatement		673:54:18237:19303	3516600	0					
ANR	3516603	IdentifierDeclStatement	int l = 0 ;	674:1:18240:18249	3516600	0	True				
ANR	3516604	IdentifierDecl	l = 0		3516600	0					
ANR	3516605	IdentifierDeclType	int		3516600	0					
ANR	3516606	Identifier	l		3516600	1					
ANR	3516607	AssignmentExpression	l = 0		3516600	2		=			
ANR	3516608	Identifier	l		3516600	0					
ANR	3516609	PrimaryExpression	0		3516600	1					
ANR	3516610	IfStatement	if ( a -> bits >= 32 && op -> operands [ 1 ] . type & OT_MEMORY && op -> operands [ 1 ] . reg_size & OT_WORD )		3516600	1					
ANR	3516611	Condition	a -> bits >= 32 && op -> operands [ 1 ] . type & OT_MEMORY && op -> operands [ 1 ] . reg_size & OT_WORD	675:5:18256:18342	3516600	0	True				
ANR	3516612	AndExpression	a -> bits >= 32 && op -> operands [ 1 ] . type & OT_MEMORY && op -> operands [ 1 ] . reg_size & OT_WORD		3516600	0		&&			
ANR	3516613	RelationalExpression	a -> bits >= 32		3516600	0		>=			
ANR	3516614	PtrMemberAccess	a -> bits		3516600	0					
ANR	3516615	Identifier	a		3516600	0					
ANR	3516616	Identifier	bits		3516600	1					
ANR	3516617	PrimaryExpression	32		3516600	1					
ANR	3516618	AndExpression	op -> operands [ 1 ] . type & OT_MEMORY && op -> operands [ 1 ] . reg_size & OT_WORD		3516600	1		&&			
ANR	3516619	BitAndExpression	op -> operands [ 1 ] . type & OT_MEMORY		3516600	0		&			
ANR	3516620	MemberAccess	op -> operands [ 1 ] . type		3516600	0					
ANR	3516621	ArrayIndexing	op -> operands [ 1 ]		3516600	0					
ANR	3516622	PtrMemberAccess	op -> operands		3516600	0					
ANR	3516623	Identifier	op		3516600	0					
ANR	3516624	Identifier	operands		3516600	1					
ANR	3516625	PrimaryExpression	1		3516600	1					
ANR	3516626	Identifier	type		3516600	1					
ANR	3516627	Identifier	OT_MEMORY		3516600	1					
ANR	3516628	BitAndExpression	op -> operands [ 1 ] . reg_size & OT_WORD		3516600	1		&			
ANR	3516629	MemberAccess	op -> operands [ 1 ] . reg_size		3516600	0					
ANR	3516630	ArrayIndexing	op -> operands [ 1 ]		3516600	0					
ANR	3516631	PtrMemberAccess	op -> operands		3516600	0					
ANR	3516632	Identifier	op		3516600	0					
ANR	3516633	Identifier	operands		3516600	1					
ANR	3516634	PrimaryExpression	1		3516600	1					
ANR	3516635	Identifier	reg_size		3516600	1					
ANR	3516636	Identifier	OT_WORD		3516600	1					
ANR	3516637	CompoundStatement		3:94:107:107	3516600	1					
ANR	3516638	ReturnStatement	return - 1 ;	676:2:18349:18358	3516600	0	True				
ANR	3516639	UnaryOperationExpression	- 1		3516600	0					
ANR	3516640	UnaryOperator	-		3516600	0					
ANR	3516641	PrimaryExpression	1		3516600	1					
ANR	3516642	IfStatement	if ( ! ( op -> operands [ 1 ] . type & OT_MEMORY ) && ! ( ( op -> operands [ 0 ] . type & ALL_SIZE ) == ( op -> operands [ 1 ] . type & ALL_SIZE ) ) )		3516600	2					
ANR	3516643	Condition	! ( op -> operands [ 1 ] . type & OT_MEMORY ) && ! ( ( op -> operands [ 0 ] . type & ALL_SIZE ) == ( op -> operands [ 1 ] . type & ALL_SIZE ) )	678:5:18368:18482	3516600	0	True				
ANR	3516644	AndExpression	! ( op -> operands [ 1 ] . type & OT_MEMORY ) && ! ( ( op -> operands [ 0 ] . type & ALL_SIZE ) == ( op -> operands [ 1 ] . type & ALL_SIZE ) )		3516600	0		&&			
ANR	3516645	UnaryOperationExpression	! ( op -> operands [ 1 ] . type & OT_MEMORY )		3516600	0					
ANR	3516646	UnaryOperator	!		3516600	0					
ANR	3516647	BitAndExpression	op -> operands [ 1 ] . type & OT_MEMORY		3516600	1		&			
ANR	3516648	MemberAccess	op -> operands [ 1 ] . type		3516600	0					
ANR	3516649	ArrayIndexing	op -> operands [ 1 ]		3516600	0					
ANR	3516650	PtrMemberAccess	op -> operands		3516600	0					
ANR	3516651	Identifier	op		3516600	0					
ANR	3516652	Identifier	operands		3516600	1					
ANR	3516653	PrimaryExpression	1		3516600	1					
ANR	3516654	Identifier	type		3516600	1					
ANR	3516655	Identifier	OT_MEMORY		3516600	1					
ANR	3516656	UnaryOperationExpression	! ( ( op -> operands [ 0 ] . type & ALL_SIZE ) == ( op -> operands [ 1 ] . type & ALL_SIZE ) )		3516600	1					
ANR	3516657	UnaryOperator	!		3516600	0					
ANR	3516658	EqualityExpression	( op -> operands [ 0 ] . type & ALL_SIZE ) == ( op -> operands [ 1 ] . type & ALL_SIZE )		3516600	1		==			
ANR	3516659	BitAndExpression	op -> operands [ 0 ] . type & ALL_SIZE		3516600	0		&			
ANR	3516660	MemberAccess	op -> operands [ 0 ] . type		3516600	0					
ANR	3516661	ArrayIndexing	op -> operands [ 0 ]		3516600	0					
ANR	3516662	PtrMemberAccess	op -> operands		3516600	0					
ANR	3516663	Identifier	op		3516600	0					
ANR	3516664	Identifier	operands		3516600	1					
ANR	3516665	PrimaryExpression	0		3516600	1					
ANR	3516666	Identifier	type		3516600	1					
ANR	3516667	Identifier	ALL_SIZE		3516600	1					
ANR	3516668	BitAndExpression	op -> operands [ 1 ] . type & ALL_SIZE		3516600	1		&			
ANR	3516669	MemberAccess	op -> operands [ 1 ] . type		3516600	0					
ANR	3516670	ArrayIndexing	op -> operands [ 1 ]		3516600	0					
ANR	3516671	PtrMemberAccess	op -> operands		3516600	0					
ANR	3516672	Identifier	op		3516600	0					
ANR	3516673	Identifier	operands		3516600	1					
ANR	3516674	PrimaryExpression	1		3516600	1					
ANR	3516675	Identifier	type		3516600	1					
ANR	3516676	Identifier	ALL_SIZE		3516600	1					
ANR	3516677	CompoundStatement		7:77:247:247	3516600	1					
ANR	3516678	ReturnStatement	return - 1 ;	680:2:18489:18498	3516600	0	True				
ANR	3516679	UnaryOperationExpression	- 1		3516600	0					
ANR	3516680	UnaryOperator	-		3516600	0					
ANR	3516681	PrimaryExpression	1		3516600	1					
ANR	3516682	IfStatement	if ( op -> operands [ 0 ] . type & OT_GPREG && ! ( op -> operands [ 0 ] . type & OT_MEMORY ) )		3516600	3					
ANR	3516683	Condition	op -> operands [ 0 ] . type & OT_GPREG && ! ( op -> operands [ 0 ] . type & OT_MEMORY )	682:5:18508:18577	3516600	0	True				
ANR	3516684	AndExpression	op -> operands [ 0 ] . type & OT_GPREG && ! ( op -> operands [ 0 ] . type & OT_MEMORY )		3516600	0		&&			
ANR	3516685	BitAndExpression	op -> operands [ 0 ] . type & OT_GPREG		3516600	0		&			
ANR	3516686	MemberAccess	op -> operands [ 0 ] . type		3516600	0					
ANR	3516687	ArrayIndexing	op -> operands [ 0 ]		3516600	0					
ANR	3516688	PtrMemberAccess	op -> operands		3516600	0					
ANR	3516689	Identifier	op		3516600	0					
ANR	3516690	Identifier	operands		3516600	1					
ANR	3516691	PrimaryExpression	0		3516600	1					
ANR	3516692	Identifier	type		3516600	1					
ANR	3516693	Identifier	OT_GPREG		3516600	1					
ANR	3516694	UnaryOperationExpression	! ( op -> operands [ 0 ] . type & OT_MEMORY )		3516600	1					
ANR	3516695	UnaryOperator	!		3516600	0					
ANR	3516696	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3516600	1		&			
ANR	3516697	MemberAccess	op -> operands [ 0 ] . type		3516600	0					
ANR	3516698	ArrayIndexing	op -> operands [ 0 ]		3516600	0					
ANR	3516699	PtrMemberAccess	op -> operands		3516600	0					
ANR	3516700	Identifier	op		3516600	0					
ANR	3516701	Identifier	operands		3516600	1					
ANR	3516702	PrimaryExpression	0		3516600	1					
ANR	3516703	Identifier	type		3516600	1					
ANR	3516704	Identifier	OT_MEMORY		3516600	1					
ANR	3516705	CompoundStatement		10:77:342:342	3516600	1					
ANR	3516706	IfStatement	if ( a -> bits == 64 )		3516600	0					
ANR	3516707	Condition	a -> bits == 64	683:6:18588:18600	3516600	0	True				
ANR	3516708	EqualityExpression	a -> bits == 64		3516600	0		==			
ANR	3516709	PtrMemberAccess	a -> bits		3516600	0					
ANR	3516710	Identifier	a		3516600	0					
ANR	3516711	Identifier	bits		3516600	1					
ANR	3516712	PrimaryExpression	64		3516600	1					
ANR	3516713	CompoundStatement		11:21:365:365	3516600	1					
ANR	3516714	IfStatement	if ( op -> operands [ 1 ] . type & OT_MEMORY && op -> operands [ 1 ] . reg_size & OT_DWORD )		3516600	0					
ANR	3516715	Condition	op -> operands [ 1 ] . type & OT_MEMORY && op -> operands [ 1 ] . reg_size & OT_DWORD	684:7:18612:18687	3516600	0	True				
ANR	3516716	AndExpression	op -> operands [ 1 ] . type & OT_MEMORY && op -> operands [ 1 ] . reg_size & OT_DWORD		3516600	0		&&			
ANR	3516717	BitAndExpression	op -> operands [ 1 ] . type & OT_MEMORY		3516600	0		&			
ANR	3516718	MemberAccess	op -> operands [ 1 ] . type		3516600	0					
ANR	3516719	ArrayIndexing	op -> operands [ 1 ]		3516600	0					
ANR	3516720	PtrMemberAccess	op -> operands		3516600	0					
ANR	3516721	Identifier	op		3516600	0					
ANR	3516722	Identifier	operands		3516600	1					
ANR	3516723	PrimaryExpression	1		3516600	1					
ANR	3516724	Identifier	type		3516600	1					
ANR	3516725	Identifier	OT_MEMORY		3516600	1					
ANR	3516726	BitAndExpression	op -> operands [ 1 ] . reg_size & OT_DWORD		3516600	1		&			
ANR	3516727	MemberAccess	op -> operands [ 1 ] . reg_size		3516600	0					
ANR	3516728	ArrayIndexing	op -> operands [ 1 ]		3516600	0					
ANR	3516729	PtrMemberAccess	op -> operands		3516600	0					
ANR	3516730	Identifier	op		3516600	0					
ANR	3516731	Identifier	operands		3516600	1					
ANR	3516732	PrimaryExpression	1		3516600	1					
ANR	3516733	Identifier	reg_size		3516600	1					
ANR	3516734	Identifier	OT_DWORD		3516600	1					
ANR	3516735	CompoundStatement		13:41:452:452	3516600	1					
ANR	3516736	ExpressionStatement	data [ l ++ ] = 0x67	686:4:18696:18712	3516600	0	True				
ANR	3516737	AssignmentExpression	data [ l ++ ] = 0x67		3516600	0		=			
ANR	3516738	ArrayIndexing	data [ l ++ ]		3516600	0					
ANR	3516739	Identifier	data		3516600	0					
ANR	3516740	PostIncDecOperationExpression	l ++		3516600	1					
ANR	3516741	Identifier	l		3516600	0					
ANR	3516742	IncDec	++		3516600	1					
ANR	3516743	PrimaryExpression	0x67		3516600	1					
ANR	3516744	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		3516600	1					
ANR	3516745	Condition	op -> operands [ 0 ] . type & OT_WORD	688:7:18726:18755	3516600	0	True				
ANR	3516746	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		3516600	0		&			
ANR	3516747	MemberAccess	op -> operands [ 0 ] . type		3516600	0					
ANR	3516748	ArrayIndexing	op -> operands [ 0 ]		3516600	0					
ANR	3516749	PtrMemberAccess	op -> operands		3516600	0					
ANR	3516750	Identifier	op		3516600	0					
ANR	3516751	Identifier	operands		3516600	1					
ANR	3516752	PrimaryExpression	0		3516600	1					
ANR	3516753	Identifier	type		3516600	1					
ANR	3516754	Identifier	OT_WORD		3516600	1					
ANR	3516755	CompoundStatement		16:39:520:520	3516600	1					
ANR	3516756	ExpressionStatement	data [ l ++ ] = 0x66	689:4:18764:18780	3516600	0	True				
ANR	3516757	AssignmentExpression	data [ l ++ ] = 0x66		3516600	0		=			
ANR	3516758	ArrayIndexing	data [ l ++ ]		3516600	0					
ANR	3516759	Identifier	data		3516600	0					
ANR	3516760	PostIncDecOperationExpression	l ++		3516600	1					
ANR	3516761	Identifier	l		3516600	0					
ANR	3516762	IncDec	++		3516600	1					
ANR	3516763	PrimaryExpression	0x66		3516600	1					
ANR	3516764	IfStatement	if ( op -> operands [ 0 ] . type & OT_QWORD )		3516600	2					
ANR	3516765	Condition	op -> operands [ 0 ] . type & OT_QWORD	691:7:18794:18824	3516600	0	True				
ANR	3516766	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		3516600	0		&			
ANR	3516767	MemberAccess	op -> operands [ 0 ] . type		3516600	0					
ANR	3516768	ArrayIndexing	op -> operands [ 0 ]		3516600	0					
ANR	3516769	PtrMemberAccess	op -> operands		3516600	0					
ANR	3516770	Identifier	op		3516600	0					
ANR	3516771	Identifier	operands		3516600	1					
ANR	3516772	PrimaryExpression	0		3516600	1					
ANR	3516773	Identifier	type		3516600	1					
ANR	3516774	Identifier	OT_QWORD		3516600	1					
ANR	3516775	CompoundStatement		19:40:589:589	3516600	1					
ANR	3516776	ExpressionStatement	data [ l ++ ] = 0x48	692:4:18833:18849	3516600	0	True				
ANR	3516777	AssignmentExpression	data [ l ++ ] = 0x48		3516600	0		=			
ANR	3516778	ArrayIndexing	data [ l ++ ]		3516600	0					
ANR	3516779	Identifier	data		3516600	0					
ANR	3516780	PostIncDecOperationExpression	l ++		3516600	1					
ANR	3516781	Identifier	l		3516600	0					
ANR	3516782	IncDec	++		3516600	1					
ANR	3516783	PrimaryExpression	0x48		3516600	1					
ANR	3516784	ElseStatement	else		3516600	0					
ANR	3516785	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		3516600	0					
ANR	3516786	Condition	op -> operands [ 0 ] . type & OT_WORD	694:13:18869:18898	3516600	0	True				
ANR	3516787	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		3516600	0		&			
ANR	3516788	MemberAccess	op -> operands [ 0 ] . type		3516600	0					
ANR	3516789	ArrayIndexing	op -> operands [ 0 ]		3516600	0					
ANR	3516790	PtrMemberAccess	op -> operands		3516600	0					
ANR	3516791	Identifier	op		3516600	0					
ANR	3516792	Identifier	operands		3516600	1					
ANR	3516793	PrimaryExpression	0		3516600	1					
ANR	3516794	Identifier	type		3516600	1					
ANR	3516795	Identifier	OT_WORD		3516600	1					
ANR	3516796	CompoundStatement		22:45:663:663	3516600	1					
ANR	3516797	ExpressionStatement	data [ l ++ ] = 0x66	695:4:18907:18923	3516600	0	True				
ANR	3516798	AssignmentExpression	data [ l ++ ] = 0x66		3516600	0		=			
ANR	3516799	ArrayIndexing	data [ l ++ ]		3516600	0					
ANR	3516800	Identifier	data		3516600	0					
ANR	3516801	PostIncDecOperationExpression	l ++		3516600	1					
ANR	3516802	Identifier	l		3516600	0					
ANR	3516803	IncDec	++		3516600	1					
ANR	3516804	PrimaryExpression	0x66		3516600	1					
ANR	3516805	ExpressionStatement	data [ l ++ ] = 0x0f	697:2:18931:18947	3516600	1	True				
ANR	3516806	AssignmentExpression	data [ l ++ ] = 0x0f		3516600	0		=			
ANR	3516807	ArrayIndexing	data [ l ++ ]		3516600	0					
ANR	3516808	Identifier	data		3516600	0					
ANR	3516809	PostIncDecOperationExpression	l ++		3516600	1					
ANR	3516810	Identifier	l		3516600	0					
ANR	3516811	IncDec	++		3516600	1					
ANR	3516812	PrimaryExpression	0x0f		3516600	1					
ANR	3516813	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""bsf"" ) )"		3516600	2					
ANR	3516814	Condition	"! strcmp ( op -> mnemonic , ""bsf"" )"	698:6:18955:18983	3516600	0	True				
ANR	3516815	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""bsf"" )"		3516600	0					
ANR	3516816	UnaryOperator	!		3516600	0					
ANR	3516817	CallExpression	"strcmp ( op -> mnemonic , ""bsf"" )"		3516600	1					
ANR	3516818	Callee	strcmp		3516600	0					
ANR	3516819	Identifier	strcmp		3516600	0					
ANR	3516820	ArgumentList	op -> mnemonic		3516600	1					
ANR	3516821	Argument	op -> mnemonic		3516600	0					
ANR	3516822	PtrMemberAccess	op -> mnemonic		3516600	0					
ANR	3516823	Identifier	op		3516600	0					
ANR	3516824	Identifier	mnemonic		3516600	1					
ANR	3516825	Argument	"""bsf"""		3516600	1					
ANR	3516826	PrimaryExpression	"""bsf"""		3516600	0					
ANR	3516827	CompoundStatement		26:37:748:748	3516600	1					
ANR	3516828	ExpressionStatement	data [ l ++ ] = 0xbc	699:3:18991:19007	3516600	0	True				
ANR	3516829	AssignmentExpression	data [ l ++ ] = 0xbc		3516600	0		=			
ANR	3516830	ArrayIndexing	data [ l ++ ]		3516600	0					
ANR	3516831	Identifier	data		3516600	0					
ANR	3516832	PostIncDecOperationExpression	l ++		3516600	1					
ANR	3516833	Identifier	l		3516600	0					
ANR	3516834	IncDec	++		3516600	1					
ANR	3516835	PrimaryExpression	0xbc		3516600	1					
ANR	3516836	ElseStatement	else		3516600	0					
ANR	3516837	CompoundStatement		28:9:780:780	3516600	0					
ANR	3516838	ExpressionStatement	data [ l ++ ] = 0xbd	701:3:19023:19039	3516600	0	True				
ANR	3516839	AssignmentExpression	data [ l ++ ] = 0xbd		3516600	0		=			
ANR	3516840	ArrayIndexing	data [ l ++ ]		3516600	0					
ANR	3516841	Identifier	data		3516600	0					
ANR	3516842	PostIncDecOperationExpression	l ++		3516600	1					
ANR	3516843	Identifier	l		3516600	0					
ANR	3516844	IncDec	++		3516600	1					
ANR	3516845	PrimaryExpression	0xbd		3516600	1					
ANR	3516846	IfStatement	if ( op -> operands [ 1 ] . type & OT_GPREG && ! ( op -> operands [ 1 ] . type & OT_MEMORY ) )		3516600	3					
ANR	3516847	Condition	op -> operands [ 1 ] . type & OT_GPREG && ! ( op -> operands [ 1 ] . type & OT_MEMORY )	703:6:19051:19120	3516600	0	True				
ANR	3516848	AndExpression	op -> operands [ 1 ] . type & OT_GPREG && ! ( op -> operands [ 1 ] . type & OT_MEMORY )		3516600	0		&&			
ANR	3516849	BitAndExpression	op -> operands [ 1 ] . type & OT_GPREG		3516600	0		&			
ANR	3516850	MemberAccess	op -> operands [ 1 ] . type		3516600	0					
ANR	3516851	ArrayIndexing	op -> operands [ 1 ]		3516600	0					
ANR	3516852	PtrMemberAccess	op -> operands		3516600	0					
ANR	3516853	Identifier	op		3516600	0					
ANR	3516854	Identifier	operands		3516600	1					
ANR	3516855	PrimaryExpression	1		3516600	1					
ANR	3516856	Identifier	type		3516600	1					
ANR	3516857	Identifier	OT_GPREG		3516600	1					
ANR	3516858	UnaryOperationExpression	! ( op -> operands [ 1 ] . type & OT_MEMORY )		3516600	1					
ANR	3516859	UnaryOperator	!		3516600	0					
ANR	3516860	BitAndExpression	op -> operands [ 1 ] . type & OT_MEMORY		3516600	1		&			
ANR	3516861	MemberAccess	op -> operands [ 1 ] . type		3516600	0					
ANR	3516862	ArrayIndexing	op -> operands [ 1 ]		3516600	0					
ANR	3516863	PtrMemberAccess	op -> operands		3516600	0					
ANR	3516864	Identifier	op		3516600	0					
ANR	3516865	Identifier	operands		3516600	1					
ANR	3516866	PrimaryExpression	1		3516600	1					
ANR	3516867	Identifier	type		3516600	1					
ANR	3516868	Identifier	OT_MEMORY		3516600	1					
ANR	3516869	CompoundStatement		31:78:885:885	3516600	1					
ANR	3516870	ExpressionStatement	data [ l ] = 0xc0	704:3:19128:19142	3516600	0	True				
ANR	3516871	AssignmentExpression	data [ l ] = 0xc0		3516600	0		=			
ANR	3516872	ArrayIndexing	data [ l ]		3516600	0					
ANR	3516873	Identifier	data		3516600	0					
ANR	3516874	Identifier	l		3516600	1					
ANR	3516875	PrimaryExpression	0xc0		3516600	1					
ANR	3516876	ElseStatement	else		3516600	0					
ANR	3516877	IfStatement	if ( ! ( op -> operands [ 1 ] . type & OT_MEMORY ) )		3516600	0					
ANR	3516878	Condition	! ( op -> operands [ 1 ] . type & OT_MEMORY )	705:13:19157:19191	3516600	0	True				
ANR	3516879	UnaryOperationExpression	! ( op -> operands [ 1 ] . type & OT_MEMORY )		3516600	0					
ANR	3516880	UnaryOperator	!		3516600	0					
ANR	3516881	BitAndExpression	op -> operands [ 1 ] . type & OT_MEMORY		3516600	1		&			
ANR	3516882	MemberAccess	op -> operands [ 1 ] . type		3516600	0					
ANR	3516883	ArrayIndexing	op -> operands [ 1 ]		3516600	0					
ANR	3516884	PtrMemberAccess	op -> operands		3516600	0					
ANR	3516885	Identifier	op		3516600	0					
ANR	3516886	Identifier	operands		3516600	1					
ANR	3516887	PrimaryExpression	1		3516600	1					
ANR	3516888	Identifier	type		3516600	1					
ANR	3516889	Identifier	OT_MEMORY		3516600	1					
ANR	3516890	CompoundStatement		33:50:956:956	3516600	1					
ANR	3516891	ReturnStatement	return - 1 ;	706:3:19199:19208	3516600	0	True				
ANR	3516892	UnaryOperationExpression	- 1		3516600	0					
ANR	3516893	UnaryOperator	-		3516600	0					
ANR	3516894	PrimaryExpression	1		3516600	1					
ANR	3516895	ExpressionStatement	data [ l ] += op -> operands [ 0 ] . reg << 3	708:2:19216:19251	3516600	4	True				
ANR	3516896	AssignmentExpression	data [ l ] += op -> operands [ 0 ] . reg << 3		3516600	0		+=			
ANR	3516897	ArrayIndexing	data [ l ]		3516600	0					
ANR	3516898	Identifier	data		3516600	0					
ANR	3516899	Identifier	l		3516600	1					
ANR	3516900	ShiftExpression	op -> operands [ 0 ] . reg << 3		3516600	1		<<			
ANR	3516901	MemberAccess	op -> operands [ 0 ] . reg		3516600	0					
ANR	3516902	ArrayIndexing	op -> operands [ 0 ]		3516600	0					
ANR	3516903	PtrMemberAccess	op -> operands		3516600	0					
ANR	3516904	Identifier	op		3516600	0					
ANR	3516905	Identifier	operands		3516600	1					
ANR	3516906	PrimaryExpression	0		3516600	1					
ANR	3516907	Identifier	reg		3516600	1					
ANR	3516908	PrimaryExpression	3		3516600	1					
ANR	3516909	ExpressionStatement	data [ l ++ ] += op -> operands [ 1 ] . reg	709:2:19255:19287	3516600	5	True				
ANR	3516910	AssignmentExpression	data [ l ++ ] += op -> operands [ 1 ] . reg		3516600	0		+=			
ANR	3516911	ArrayIndexing	data [ l ++ ]		3516600	0					
ANR	3516912	Identifier	data		3516600	0					
ANR	3516913	PostIncDecOperationExpression	l ++		3516600	1					
ANR	3516914	Identifier	l		3516600	0					
ANR	3516915	IncDec	++		3516600	1					
ANR	3516916	MemberAccess	op -> operands [ 1 ] . reg		3516600	1					
ANR	3516917	ArrayIndexing	op -> operands [ 1 ]		3516600	0					
ANR	3516918	PtrMemberAccess	op -> operands		3516600	0					
ANR	3516919	Identifier	op		3516600	0					
ANR	3516920	Identifier	operands		3516600	1					
ANR	3516921	PrimaryExpression	1		3516600	1					
ANR	3516922	Identifier	reg		3516600	1					
ANR	3516923	ReturnStatement	return l ;	711:1:19293:19301	3516600	4	True				
ANR	3516924	Identifier	l		3516600	0					
ANR	3516925	ReturnType	static int		3516600	1					
ANR	3516926	Identifier	opbs		3516600	2					
ANR	3516927	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3516600	3					
ANR	3516928	Parameter	RAsm * a	673:16:18199:18205	3516600	0	True				
ANR	3516929	ParameterType	RAsm *		3516600	0					
ANR	3516930	Identifier	a		3516600	1					
ANR	3516931	Parameter	ut8 * data	673:25:18208:18216	3516600	1	True				
ANR	3516932	ParameterType	ut8 *		3516600	0					
ANR	3516933	Identifier	data		3516600	1					
ANR	3516934	Parameter	const Opcode * op	673:36:18219:18234	3516600	2	True				
ANR	3516935	ParameterType	const Opcode *		3516600	0					
ANR	3516936	Identifier	op		3516600	1					
ANR	3516937	CFGEntryNode	ENTRY		3516600		True				
ANR	3516938	CFGExitNode	EXIT		3516600		True				
ANR	3516939	Symbol	op -> operands [ 1 ] . reg_size		3516600						
ANR	3516940	Symbol	OT_QWORD		3516600						
ANR	3516941	Symbol	data		3516600						
ANR	3516942	Symbol	* op		3516600						
ANR	3516943	Symbol	op -> mnemonic		3516600						
ANR	3516944	Symbol	* * op		3516600						
ANR	3516945	Symbol	* op -> operands		3516600						
ANR	3516946	Symbol	op -> operands [ 0 ] . type		3516600						
ANR	3516947	Symbol	op -> operands [ 0 ] . reg		3516600						
ANR	3516948	Symbol	OT_MEMORY		3516600						
ANR	3516949	Symbol	a -> bits		3516600						
ANR	3516950	Symbol	strcmp		3516600						
ANR	3516951	Symbol	a		3516600						
ANR	3516952	Symbol	op		3516600						
ANR	3516953	Symbol	OT_WORD		3516600						
ANR	3516954	Symbol	OT_GPREG		3516600						
ANR	3516955	Symbol	op -> operands [ 1 ] . reg		3516600						
ANR	3516956	Symbol	ALL_SIZE		3516600						
ANR	3516957	Symbol	* a		3516600						
ANR	3516958	Symbol	l		3516600						
ANR	3516959	Symbol	op -> operands [ 1 ] . type		3516600						
ANR	3516960	Symbol	* l		3516600						
ANR	3516961	Symbol	op -> operands		3516600						
ANR	3516962	Symbol	* data		3516600						
ANR	3516963	Symbol	OT_DWORD		3516600						
ANR	3516964	Function	opbswap	714:0:19306:19792							
ANR	3516965	FunctionDef	"opbswap (RAsm * a , ut8 * data , const Opcode * op)"		3516964	0					
ANR	3516966	CompoundStatement		714:57:19363:19792	3516964	0					
ANR	3516967	IdentifierDeclStatement	int l = 0 ;	715:1:19366:19375	3516964	0	True				
ANR	3516968	IdentifierDecl	l = 0		3516964	0					
ANR	3516969	IdentifierDeclType	int		3516964	0					
ANR	3516970	Identifier	l		3516964	1					
ANR	3516971	AssignmentExpression	l = 0		3516964	2		=			
ANR	3516972	Identifier	l		3516964	0					
ANR	3516973	PrimaryExpression	0		3516964	1					
ANR	3516974	IfStatement	if ( op -> operands [ 0 ] . type & OT_REGALL )		3516964	1					
ANR	3516975	Condition	op -> operands [ 0 ] . type & OT_REGALL	716:5:19382:19413	3516964	0	True				
ANR	3516976	BitAndExpression	op -> operands [ 0 ] . type & OT_REGALL		3516964	0		&			
ANR	3516977	MemberAccess	op -> operands [ 0 ] . type		3516964	0					
ANR	3516978	ArrayIndexing	op -> operands [ 0 ]		3516964	0					
ANR	3516979	PtrMemberAccess	op -> operands		3516964	0					
ANR	3516980	Identifier	op		3516964	0					
ANR	3516981	Identifier	operands		3516964	1					
ANR	3516982	PrimaryExpression	0		3516964	1					
ANR	3516983	Identifier	type		3516964	1					
ANR	3516984	Identifier	OT_REGALL		3516964	1					
ANR	3516985	CompoundStatement		3:39:52:52	3516964	1					
ANR	3516986	ExpressionStatement	is_valid_registers ( op )	717:2:19420:19443	3516964	0	True				
ANR	3516987	CallExpression	is_valid_registers ( op )		3516964	0					
ANR	3516988	Callee	is_valid_registers		3516964	0					
ANR	3516989	Identifier	is_valid_registers		3516964	0					
ANR	3516990	ArgumentList	op		3516964	1					
ANR	3516991	Argument	op		3516964	0					
ANR	3516992	Identifier	op		3516964	0					
ANR	3516993	IfStatement	if ( op -> operands [ 0 ] . reg == X86R_UNDEFINED )		3516964	1					
ANR	3516994	Condition	op -> operands [ 0 ] . reg == X86R_UNDEFINED	718:6:19451:19487	3516964	0	True				
ANR	3516995	EqualityExpression	op -> operands [ 0 ] . reg == X86R_UNDEFINED		3516964	0		==			
ANR	3516996	MemberAccess	op -> operands [ 0 ] . reg		3516964	0					
ANR	3516997	ArrayIndexing	op -> operands [ 0 ]		3516964	0					
ANR	3516998	PtrMemberAccess	op -> operands		3516964	0					
ANR	3516999	Identifier	op		3516964	0					
ANR	3517000	Identifier	operands		3516964	1					
ANR	3517001	PrimaryExpression	0		3516964	1					
ANR	3517002	Identifier	reg		3516964	1					
ANR	3517003	Identifier	X86R_UNDEFINED		3516964	1					
ANR	3517004	CompoundStatement		5:45:126:126	3516964	1					
ANR	3517005	ReturnStatement	return - 1 ;	719:3:19495:19504	3516964	0	True				
ANR	3517006	UnaryOperationExpression	- 1		3516964	0					
ANR	3517007	UnaryOperator	-		3516964	0					
ANR	3517008	PrimaryExpression	1		3516964	1					
ANR	3517009	IfStatement	if ( op -> operands [ 0 ] . type & OT_QWORD )		3516964	2					
ANR	3517010	Condition	op -> operands [ 0 ] . type & OT_QWORD	722:6:19517:19547	3516964	0	True				
ANR	3517011	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		3516964	0		&			
ANR	3517012	MemberAccess	op -> operands [ 0 ] . type		3516964	0					
ANR	3517013	ArrayIndexing	op -> operands [ 0 ]		3516964	0					
ANR	3517014	PtrMemberAccess	op -> operands		3516964	0					
ANR	3517015	Identifier	op		3516964	0					
ANR	3517016	Identifier	operands		3516964	1					
ANR	3517017	PrimaryExpression	0		3516964	1					
ANR	3517018	Identifier	type		3516964	1					
ANR	3517019	Identifier	OT_QWORD		3516964	1					
ANR	3517020	CompoundStatement		9:39:186:186	3516964	1					
ANR	3517021	ExpressionStatement	data [ l ++ ] = 0x48	723:3:19555:19571	3516964	0	True				
ANR	3517022	AssignmentExpression	data [ l ++ ] = 0x48		3516964	0		=			
ANR	3517023	ArrayIndexing	data [ l ++ ]		3516964	0					
ANR	3517024	Identifier	data		3516964	0					
ANR	3517025	PostIncDecOperationExpression	l ++		3516964	1					
ANR	3517026	Identifier	l		3516964	0					
ANR	3517027	IncDec	++		3516964	1					
ANR	3517028	PrimaryExpression	0x48		3516964	1					
ANR	3517029	ExpressionStatement	data [ l ++ ] = 0x0f	724:3:19576:19592	3516964	1	True				
ANR	3517030	AssignmentExpression	data [ l ++ ] = 0x0f		3516964	0		=			
ANR	3517031	ArrayIndexing	data [ l ++ ]		3516964	0					
ANR	3517032	Identifier	data		3516964	0					
ANR	3517033	PostIncDecOperationExpression	l ++		3516964	1					
ANR	3517034	Identifier	l		3516964	0					
ANR	3517035	IncDec	++		3516964	1					
ANR	3517036	PrimaryExpression	0x0f		3516964	1					
ANR	3517037	ExpressionStatement	data [ l ++ ] = 0xc8 + op -> operands [ 0 ] . reg	725:3:19597:19635	3516964	2	True				
ANR	3517038	AssignmentExpression	data [ l ++ ] = 0xc8 + op -> operands [ 0 ] . reg		3516964	0		=			
ANR	3517039	ArrayIndexing	data [ l ++ ]		3516964	0					
ANR	3517040	Identifier	data		3516964	0					
ANR	3517041	PostIncDecOperationExpression	l ++		3516964	1					
ANR	3517042	Identifier	l		3516964	0					
ANR	3517043	IncDec	++		3516964	1					
ANR	3517044	AdditiveExpression	0xc8 + op -> operands [ 0 ] . reg		3516964	1		+			
ANR	3517045	PrimaryExpression	0xc8		3516964	0					
ANR	3517046	MemberAccess	op -> operands [ 0 ] . reg		3516964	1					
ANR	3517047	ArrayIndexing	op -> operands [ 0 ]		3516964	0					
ANR	3517048	PtrMemberAccess	op -> operands		3516964	0					
ANR	3517049	Identifier	op		3516964	0					
ANR	3517050	Identifier	operands		3516964	1					
ANR	3517051	PrimaryExpression	0		3516964	1					
ANR	3517052	Identifier	reg		3516964	1					
ANR	3517053	ElseStatement	else		3516964	0					
ANR	3517054	IfStatement	if ( op -> operands [ 0 ] . type & OT_DWORD )		3516964	0					
ANR	3517055	Condition	op -> operands [ 0 ] . type & OT_DWORD	726:13:19650:19680	3516964	0	True				
ANR	3517056	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		3516964	0		&			
ANR	3517057	MemberAccess	op -> operands [ 0 ] . type		3516964	0					
ANR	3517058	ArrayIndexing	op -> operands [ 0 ]		3516964	0					
ANR	3517059	PtrMemberAccess	op -> operands		3516964	0					
ANR	3517060	Identifier	op		3516964	0					
ANR	3517061	Identifier	operands		3516964	1					
ANR	3517062	PrimaryExpression	0		3516964	1					
ANR	3517063	Identifier	type		3516964	1					
ANR	3517064	Identifier	OT_DWORD		3516964	1					
ANR	3517065	CompoundStatement		13:46:319:319	3516964	1					
ANR	3517066	ExpressionStatement	data [ l ++ ] = 0x0f	727:3:19688:19704	3516964	0	True				
ANR	3517067	AssignmentExpression	data [ l ++ ] = 0x0f		3516964	0		=			
ANR	3517068	ArrayIndexing	data [ l ++ ]		3516964	0					
ANR	3517069	Identifier	data		3516964	0					
ANR	3517070	PostIncDecOperationExpression	l ++		3516964	1					
ANR	3517071	Identifier	l		3516964	0					
ANR	3517072	IncDec	++		3516964	1					
ANR	3517073	PrimaryExpression	0x0f		3516964	1					
ANR	3517074	ExpressionStatement	data [ l ++ ] = 0xc8 + op -> operands [ 0 ] . reg	728:3:19709:19747	3516964	1	True				
ANR	3517075	AssignmentExpression	data [ l ++ ] = 0xc8 + op -> operands [ 0 ] . reg		3516964	0		=			
ANR	3517076	ArrayIndexing	data [ l ++ ]		3516964	0					
ANR	3517077	Identifier	data		3516964	0					
ANR	3517078	PostIncDecOperationExpression	l ++		3516964	1					
ANR	3517079	Identifier	l		3516964	0					
ANR	3517080	IncDec	++		3516964	1					
ANR	3517081	AdditiveExpression	0xc8 + op -> operands [ 0 ] . reg		3516964	1		+			
ANR	3517082	PrimaryExpression	0xc8		3516964	0					
ANR	3517083	MemberAccess	op -> operands [ 0 ] . reg		3516964	1					
ANR	3517084	ArrayIndexing	op -> operands [ 0 ]		3516964	0					
ANR	3517085	PtrMemberAccess	op -> operands		3516964	0					
ANR	3517086	Identifier	op		3516964	0					
ANR	3517087	Identifier	operands		3516964	1					
ANR	3517088	PrimaryExpression	0		3516964	1					
ANR	3517089	Identifier	reg		3516964	1					
ANR	3517090	ElseStatement	else		3516964	0					
ANR	3517091	CompoundStatement		16:9:394:394	3516964	0					
ANR	3517092	ReturnStatement	return - 1 ;	730:3:19763:19772	3516964	0	True				
ANR	3517093	UnaryOperationExpression	- 1		3516964	0					
ANR	3517094	UnaryOperator	-		3516964	0					
ANR	3517095	PrimaryExpression	1		3516964	1					
ANR	3517096	ReturnStatement	return l ;	733:1:19782:19790	3516964	2	True				
ANR	3517097	Identifier	l		3516964	0					
ANR	3517098	ReturnType	static int		3516964	1					
ANR	3517099	Identifier	opbswap		3516964	2					
ANR	3517100	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3516964	3					
ANR	3517101	Parameter	RAsm * a	714:19:19325:19331	3516964	0	True				
ANR	3517102	ParameterType	RAsm *		3516964	0					
ANR	3517103	Identifier	a		3516964	1					
ANR	3517104	Parameter	ut8 * data	714:28:19334:19342	3516964	1	True				
ANR	3517105	ParameterType	ut8 *		3516964	0					
ANR	3517106	Identifier	data		3516964	1					
ANR	3517107	Parameter	const Opcode * op	714:39:19345:19360	3516964	2	True				
ANR	3517108	ParameterType	const Opcode *		3516964	0					
ANR	3517109	Identifier	op		3516964	1					
ANR	3517110	CFGEntryNode	ENTRY		3516964		True				
ANR	3517111	CFGExitNode	EXIT		3516964		True				
ANR	3517112	Symbol	a		3516964						
ANR	3517113	Symbol	op		3516964						
ANR	3517114	Symbol	OT_QWORD		3516964						
ANR	3517115	Symbol	data		3516964						
ANR	3517116	Symbol	* op		3516964						
ANR	3517117	Symbol	l		3516964						
ANR	3517118	Symbol	OT_REGALL		3516964						
ANR	3517119	Symbol	* * op		3516964						
ANR	3517120	Symbol	* op -> operands		3516964						
ANR	3517121	Symbol	X86R_UNDEFINED		3516964						
ANR	3517122	Symbol	op -> operands [ 0 ] . type		3516964						
ANR	3517123	Symbol	op -> operands [ 0 ] . reg		3516964						
ANR	3517124	Symbol	op -> operands		3516964						
ANR	3517125	Symbol	* data		3516964						
ANR	3517126	Symbol	OT_DWORD		3516964						
ANR	3517127	Function	opcall	736:0:19795:21001							
ANR	3517128	FunctionDef	"opcall (RAsm * a , ut8 * data , const Opcode * op)"		3517127	0					
ANR	3517129	CompoundStatement		736:56:19851:21001	3517127	0					
ANR	3517130	ExpressionStatement	is_valid_registers ( op )	737:1:19854:19877	3517127	0	True				
ANR	3517131	CallExpression	is_valid_registers ( op )		3517127	0					
ANR	3517132	Callee	is_valid_registers		3517127	0					
ANR	3517133	Identifier	is_valid_registers		3517127	0					
ANR	3517134	ArgumentList	op		3517127	1					
ANR	3517135	Argument	op		3517127	0					
ANR	3517136	Identifier	op		3517127	0					
ANR	3517137	IdentifierDeclStatement	int l = 0 ;	738:1:19880:19889	3517127	1	True				
ANR	3517138	IdentifierDecl	l = 0		3517127	0					
ANR	3517139	IdentifierDeclType	int		3517127	0					
ANR	3517140	Identifier	l		3517127	1					
ANR	3517141	AssignmentExpression	l = 0		3517127	2		=			
ANR	3517142	Identifier	l		3517127	0					
ANR	3517143	PrimaryExpression	0		3517127	1					
ANR	3517144	IdentifierDeclStatement	int immediate = 0 ;	739:1:19892:19909	3517127	2	True				
ANR	3517145	IdentifierDecl	immediate = 0		3517127	0					
ANR	3517146	IdentifierDeclType	int		3517127	0					
ANR	3517147	Identifier	immediate		3517127	1					
ANR	3517148	AssignmentExpression	immediate = 0		3517127	2		=			
ANR	3517149	Identifier	immediate		3517127	0					
ANR	3517150	PrimaryExpression	0		3517127	1					
ANR	3517151	IdentifierDeclStatement	int offset = 0 ;	740:1:19912:19926	3517127	3	True				
ANR	3517152	IdentifierDecl	offset = 0		3517127	0					
ANR	3517153	IdentifierDeclType	int		3517127	0					
ANR	3517154	Identifier	offset		3517127	1					
ANR	3517155	AssignmentExpression	offset = 0		3517127	2		=			
ANR	3517156	Identifier	offset		3517127	0					
ANR	3517157	PrimaryExpression	0		3517127	1					
ANR	3517158	IdentifierDeclStatement	int mod = 0 ;	741:1:19929:19940	3517127	4	True				
ANR	3517159	IdentifierDecl	mod = 0		3517127	0					
ANR	3517160	IdentifierDeclType	int		3517127	0					
ANR	3517161	Identifier	mod		3517127	1					
ANR	3517162	AssignmentExpression	mod = 0		3517127	2		=			
ANR	3517163	Identifier	mod		3517127	0					
ANR	3517164	PrimaryExpression	0		3517127	1					
ANR	3517165	IfStatement	if ( op -> operands [ 0 ] . type & OT_GPREG )		3517127	5					
ANR	3517166	Condition	op -> operands [ 0 ] . type & OT_GPREG	743:5:19948:19978	3517127	0	True				
ANR	3517167	BitAndExpression	op -> operands [ 0 ] . type & OT_GPREG		3517127	0		&			
ANR	3517168	MemberAccess	op -> operands [ 0 ] . type		3517127	0					
ANR	3517169	ArrayIndexing	op -> operands [ 0 ]		3517127	0					
ANR	3517170	PtrMemberAccess	op -> operands		3517127	0					
ANR	3517171	Identifier	op		3517127	0					
ANR	3517172	Identifier	operands		3517127	1					
ANR	3517173	PrimaryExpression	0		3517127	1					
ANR	3517174	Identifier	type		3517127	1					
ANR	3517175	Identifier	OT_GPREG		3517127	1					
ANR	3517176	CompoundStatement		8:38:129:129	3517127	1					
ANR	3517177	IfStatement	if ( op -> operands [ 0 ] . reg == X86R_UNDEFINED )		3517127	0					
ANR	3517178	Condition	op -> operands [ 0 ] . reg == X86R_UNDEFINED	744:6:19989:20025	3517127	0	True				
ANR	3517179	EqualityExpression	op -> operands [ 0 ] . reg == X86R_UNDEFINED		3517127	0		==			
ANR	3517180	MemberAccess	op -> operands [ 0 ] . reg		3517127	0					
ANR	3517181	ArrayIndexing	op -> operands [ 0 ]		3517127	0					
ANR	3517182	PtrMemberAccess	op -> operands		3517127	0					
ANR	3517183	Identifier	op		3517127	0					
ANR	3517184	Identifier	operands		3517127	1					
ANR	3517185	PrimaryExpression	0		3517127	1					
ANR	3517186	Identifier	reg		3517127	1					
ANR	3517187	Identifier	X86R_UNDEFINED		3517127	1					
ANR	3517188	CompoundStatement		9:45:176:176	3517127	1					
ANR	3517189	ReturnStatement	return - 1 ;	745:3:20033:20042	3517127	0	True				
ANR	3517190	UnaryOperationExpression	- 1		3517127	0					
ANR	3517191	UnaryOperator	-		3517127	0					
ANR	3517192	PrimaryExpression	1		3517127	1					
ANR	3517193	IfStatement	if ( a -> bits == 64 && op -> operands [ 0 ] . extended )		3517127	1					
ANR	3517194	Condition	a -> bits == 64 && op -> operands [ 0 ] . extended	747:6:20054:20094	3517127	0	True				
ANR	3517195	AndExpression	a -> bits == 64 && op -> operands [ 0 ] . extended		3517127	0		&&			
ANR	3517196	EqualityExpression	a -> bits == 64		3517127	0		==			
ANR	3517197	PtrMemberAccess	a -> bits		3517127	0					
ANR	3517198	Identifier	a		3517127	0					
ANR	3517199	Identifier	bits		3517127	1					
ANR	3517200	PrimaryExpression	64		3517127	1					
ANR	3517201	MemberAccess	op -> operands [ 0 ] . extended		3517127	1					
ANR	3517202	ArrayIndexing	op -> operands [ 0 ]		3517127	0					
ANR	3517203	PtrMemberAccess	op -> operands		3517127	0					
ANR	3517204	Identifier	op		3517127	0					
ANR	3517205	Identifier	operands		3517127	1					
ANR	3517206	PrimaryExpression	0		3517127	1					
ANR	3517207	Identifier	extended		3517127	1					
ANR	3517208	CompoundStatement		12:49:245:245	3517127	1					
ANR	3517209	ExpressionStatement	data [ l ++ ] = 0x41	748:3:20102:20118	3517127	0	True				
ANR	3517210	AssignmentExpression	data [ l ++ ] = 0x41		3517127	0		=			
ANR	3517211	ArrayIndexing	data [ l ++ ]		3517127	0					
ANR	3517212	Identifier	data		3517127	0					
ANR	3517213	PostIncDecOperationExpression	l ++		3517127	1					
ANR	3517214	Identifier	l		3517127	0					
ANR	3517215	IncDec	++		3517127	1					
ANR	3517216	PrimaryExpression	0x41		3517127	1					
ANR	3517217	ExpressionStatement	data [ l ++ ] = 0xff	750:2:20126:20142	3517127	2	True				
ANR	3517218	AssignmentExpression	data [ l ++ ] = 0xff		3517127	0		=			
ANR	3517219	ArrayIndexing	data [ l ++ ]		3517127	0					
ANR	3517220	Identifier	data		3517127	0					
ANR	3517221	PostIncDecOperationExpression	l ++		3517127	1					
ANR	3517222	Identifier	l		3517127	0					
ANR	3517223	IncDec	++		3517127	1					
ANR	3517224	PrimaryExpression	0xff		3517127	1					
ANR	3517225	ExpressionStatement	mod = 3	751:2:20146:20153	3517127	3	True				
ANR	3517226	AssignmentExpression	mod = 3		3517127	0		=			
ANR	3517227	Identifier	mod		3517127	0					
ANR	3517228	PrimaryExpression	3		3517127	1					
ANR	3517229	ExpressionStatement	data [ l ++ ] = mod << 6 | 2 << 3 | op -> operands [ 0 ] . reg	752:2:20157:20208	3517127	4	True				
ANR	3517230	AssignmentExpression	data [ l ++ ] = mod << 6 | 2 << 3 | op -> operands [ 0 ] . reg		3517127	0		=			
ANR	3517231	ArrayIndexing	data [ l ++ ]		3517127	0					
ANR	3517232	Identifier	data		3517127	0					
ANR	3517233	PostIncDecOperationExpression	l ++		3517127	1					
ANR	3517234	Identifier	l		3517127	0					
ANR	3517235	IncDec	++		3517127	1					
ANR	3517236	InclusiveOrExpression	mod << 6 | 2 << 3 | op -> operands [ 0 ] . reg		3517127	1		|			
ANR	3517237	ShiftExpression	mod << 6		3517127	0		<<			
ANR	3517238	Identifier	mod		3517127	0					
ANR	3517239	PrimaryExpression	6		3517127	1					
ANR	3517240	InclusiveOrExpression	2 << 3 | op -> operands [ 0 ] . reg		3517127	1		|			
ANR	3517241	ShiftExpression	2 << 3		3517127	0		<<			
ANR	3517242	PrimaryExpression	2		3517127	0					
ANR	3517243	PrimaryExpression	3		3517127	1					
ANR	3517244	MemberAccess	op -> operands [ 0 ] . reg		3517127	1					
ANR	3517245	ArrayIndexing	op -> operands [ 0 ]		3517127	0					
ANR	3517246	PtrMemberAccess	op -> operands		3517127	0					
ANR	3517247	Identifier	op		3517127	0					
ANR	3517248	Identifier	operands		3517127	1					
ANR	3517249	PrimaryExpression	0		3517127	1					
ANR	3517250	Identifier	reg		3517127	1					
ANR	3517251	ElseStatement	else		3517127	0					
ANR	3517252	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3517127	0					
ANR	3517253	Condition	op -> operands [ 0 ] . type & OT_MEMORY	753:12:20222:20253	3517127	0	True				
ANR	3517254	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3517127	0		&			
ANR	3517255	MemberAccess	op -> operands [ 0 ] . type		3517127	0					
ANR	3517256	ArrayIndexing	op -> operands [ 0 ]		3517127	0					
ANR	3517257	PtrMemberAccess	op -> operands		3517127	0					
ANR	3517258	Identifier	op		3517127	0					
ANR	3517259	Identifier	operands		3517127	1					
ANR	3517260	PrimaryExpression	0		3517127	1					
ANR	3517261	Identifier	type		3517127	1					
ANR	3517262	Identifier	OT_MEMORY		3517127	1					
ANR	3517263	CompoundStatement		18:46:404:404	3517127	1					
ANR	3517264	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_UNDEFINED )		3517127	0					
ANR	3517265	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_UNDEFINED	754:6:20264:20304	3517127	0	True				
ANR	3517266	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_UNDEFINED		3517127	0		==			
ANR	3517267	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3517127	0					
ANR	3517268	MemberAccess	op -> operands [ 0 ] . regs		3517127	0					
ANR	3517269	ArrayIndexing	op -> operands [ 0 ]		3517127	0					
ANR	3517270	PtrMemberAccess	op -> operands		3517127	0					
ANR	3517271	Identifier	op		3517127	0					
ANR	3517272	Identifier	operands		3517127	1					
ANR	3517273	PrimaryExpression	0		3517127	1					
ANR	3517274	Identifier	regs		3517127	1					
ANR	3517275	PrimaryExpression	0		3517127	1					
ANR	3517276	Identifier	X86R_UNDEFINED		3517127	1					
ANR	3517277	CompoundStatement		19:49:455:455	3517127	1					
ANR	3517278	ReturnStatement	return - 1 ;	755:3:20312:20321	3517127	0	True				
ANR	3517279	UnaryOperationExpression	- 1		3517127	0					
ANR	3517280	UnaryOperator	-		3517127	0					
ANR	3517281	PrimaryExpression	1		3517127	1					
ANR	3517282	ExpressionStatement	data [ l ++ ] = 0xff	757:2:20329:20345	3517127	1	True				
ANR	3517283	AssignmentExpression	data [ l ++ ] = 0xff		3517127	0		=			
ANR	3517284	ArrayIndexing	data [ l ++ ]		3517127	0					
ANR	3517285	Identifier	data		3517127	0					
ANR	3517286	PostIncDecOperationExpression	l ++		3517127	1					
ANR	3517287	Identifier	l		3517127	0					
ANR	3517288	IncDec	++		3517127	1					
ANR	3517289	PrimaryExpression	0xff		3517127	1					
ANR	3517290	ExpressionStatement	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign	758:2:20349:20410	3517127	2	True				
ANR	3517291	AssignmentExpression	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		3517127	0		=			
ANR	3517292	Identifier	offset		3517127	0					
ANR	3517293	MultiplicativeExpression	op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		3517127	1		*			
ANR	3517294	MemberAccess	op -> operands [ 0 ] . offset		3517127	0					
ANR	3517295	ArrayIndexing	op -> operands [ 0 ]		3517127	0					
ANR	3517296	PtrMemberAccess	op -> operands		3517127	0					
ANR	3517297	Identifier	op		3517127	0					
ANR	3517298	Identifier	operands		3517127	1					
ANR	3517299	PrimaryExpression	0		3517127	1					
ANR	3517300	Identifier	offset		3517127	1					
ANR	3517301	MemberAccess	op -> operands [ 0 ] . offset_sign		3517127	1					
ANR	3517302	ArrayIndexing	op -> operands [ 0 ]		3517127	0					
ANR	3517303	PtrMemberAccess	op -> operands		3517127	0					
ANR	3517304	Identifier	op		3517127	0					
ANR	3517305	Identifier	operands		3517127	1					
ANR	3517306	PrimaryExpression	0		3517127	1					
ANR	3517307	Identifier	offset_sign		3517127	1					
ANR	3517308	IfStatement	if ( offset )		3517127	3					
ANR	3517309	Condition	offset	759:6:20418:20423	3517127	0	True				
ANR	3517310	Identifier	offset		3517127	0					
ANR	3517311	CompoundStatement		24:14:574:574	3517127	1					
ANR	3517312	ExpressionStatement	mod = 1	760:3:20431:20438	3517127	0	True				
ANR	3517313	AssignmentExpression	mod = 1		3517127	0		=			
ANR	3517314	Identifier	mod		3517127	0					
ANR	3517315	PrimaryExpression	1		3517127	1					
ANR	3517316	IfStatement	if ( offset > 127 || offset < - 128 )		3517127	1					
ANR	3517317	Condition	offset > 127 || offset < - 128	761:7:20447:20475	3517127	0	True				
ANR	3517318	OrExpression	offset > 127 || offset < - 128		3517127	0		||			
ANR	3517319	RelationalExpression	offset > 127		3517127	0		>			
ANR	3517320	Identifier	offset		3517127	0					
ANR	3517321	PrimaryExpression	127		3517127	1					
ANR	3517322	RelationalExpression	offset < - 128		3517127	1		<			
ANR	3517323	Identifier	offset		3517127	0					
ANR	3517324	UnaryOperationExpression	- 128		3517127	1					
ANR	3517325	UnaryOperator	-		3517127	0					
ANR	3517326	PrimaryExpression	128		3517127	1					
ANR	3517327	CompoundStatement		26:38:626:626	3517127	1					
ANR	3517328	ExpressionStatement	mod = 2	762:4:20484:20491	3517127	0	True				
ANR	3517329	AssignmentExpression	mod = 2		3517127	0		=			
ANR	3517330	Identifier	mod		3517127	0					
ANR	3517331	PrimaryExpression	2		3517127	1					
ANR	3517332	ExpressionStatement	data [ l ++ ] = mod << 6 | 2 << 3 | op -> operands [ 0 ] . regs [ 0 ]	765:2:20504:20559	3517127	4	True				
ANR	3517333	AssignmentExpression	data [ l ++ ] = mod << 6 | 2 << 3 | op -> operands [ 0 ] . regs [ 0 ]		3517127	0		=			
ANR	3517334	ArrayIndexing	data [ l ++ ]		3517127	0					
ANR	3517335	Identifier	data		3517127	0					
ANR	3517336	PostIncDecOperationExpression	l ++		3517127	1					
ANR	3517337	Identifier	l		3517127	0					
ANR	3517338	IncDec	++		3517127	1					
ANR	3517339	InclusiveOrExpression	mod << 6 | 2 << 3 | op -> operands [ 0 ] . regs [ 0 ]		3517127	1		|			
ANR	3517340	ShiftExpression	mod << 6		3517127	0		<<			
ANR	3517341	Identifier	mod		3517127	0					
ANR	3517342	PrimaryExpression	6		3517127	1					
ANR	3517343	InclusiveOrExpression	2 << 3 | op -> operands [ 0 ] . regs [ 0 ]		3517127	1		|			
ANR	3517344	ShiftExpression	2 << 3		3517127	0		<<			
ANR	3517345	PrimaryExpression	2		3517127	0					
ANR	3517346	PrimaryExpression	3		3517127	1					
ANR	3517347	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3517127	1					
ANR	3517348	MemberAccess	op -> operands [ 0 ] . regs		3517127	0					
ANR	3517349	ArrayIndexing	op -> operands [ 0 ]		3517127	0					
ANR	3517350	PtrMemberAccess	op -> operands		3517127	0					
ANR	3517351	Identifier	op		3517127	0					
ANR	3517352	Identifier	operands		3517127	1					
ANR	3517353	PrimaryExpression	0		3517127	1					
ANR	3517354	Identifier	regs		3517127	1					
ANR	3517355	PrimaryExpression	0		3517127	1					
ANR	3517356	IfStatement	if ( mod )		3517127	5					
ANR	3517357	Condition	mod	766:6:20567:20569	3517127	0	True				
ANR	3517358	Identifier	mod		3517127	0					
ANR	3517359	CompoundStatement		31:11:720:720	3517127	1					
ANR	3517360	ExpressionStatement	data [ l ++ ] = offset	767:3:20577:20595	3517127	0	True				
ANR	3517361	AssignmentExpression	data [ l ++ ] = offset		3517127	0		=			
ANR	3517362	ArrayIndexing	data [ l ++ ]		3517127	0					
ANR	3517363	Identifier	data		3517127	0					
ANR	3517364	PostIncDecOperationExpression	l ++		3517127	1					
ANR	3517365	Identifier	l		3517127	0					
ANR	3517366	IncDec	++		3517127	1					
ANR	3517367	Identifier	offset		3517127	1					
ANR	3517368	IfStatement	if ( mod == 2 )		3517127	1					
ANR	3517369	Condition	mod == 2	768:7:20604:20611	3517127	0	True				
ANR	3517370	EqualityExpression	mod == 2		3517127	0		==			
ANR	3517371	Identifier	mod		3517127	0					
ANR	3517372	PrimaryExpression	2		3517127	1					
ANR	3517373	CompoundStatement		33:17:762:762	3517127	1					
ANR	3517374	ExpressionStatement	data [ l ++ ] = offset >> 8	769:4:20620:20643	3517127	0	True				
ANR	3517375	AssignmentExpression	data [ l ++ ] = offset >> 8		3517127	0		=			
ANR	3517376	ArrayIndexing	data [ l ++ ]		3517127	0					
ANR	3517377	Identifier	data		3517127	0					
ANR	3517378	PostIncDecOperationExpression	l ++		3517127	1					
ANR	3517379	Identifier	l		3517127	0					
ANR	3517380	IncDec	++		3517127	1					
ANR	3517381	ShiftExpression	offset >> 8		3517127	1		>>			
ANR	3517382	Identifier	offset		3517127	0					
ANR	3517383	PrimaryExpression	8		3517127	1					
ANR	3517384	ExpressionStatement	data [ l ++ ] = offset >> 16	770:4:20649:20673	3517127	1	True				
ANR	3517385	AssignmentExpression	data [ l ++ ] = offset >> 16		3517127	0		=			
ANR	3517386	ArrayIndexing	data [ l ++ ]		3517127	0					
ANR	3517387	Identifier	data		3517127	0					
ANR	3517388	PostIncDecOperationExpression	l ++		3517127	1					
ANR	3517389	Identifier	l		3517127	0					
ANR	3517390	IncDec	++		3517127	1					
ANR	3517391	ShiftExpression	offset >> 16		3517127	1		>>			
ANR	3517392	Identifier	offset		3517127	0					
ANR	3517393	PrimaryExpression	16		3517127	1					
ANR	3517394	ExpressionStatement	data [ l ++ ] = offset >> 24	771:4:20679:20703	3517127	2	True				
ANR	3517395	AssignmentExpression	data [ l ++ ] = offset >> 24		3517127	0		=			
ANR	3517396	ArrayIndexing	data [ l ++ ]		3517127	0					
ANR	3517397	Identifier	data		3517127	0					
ANR	3517398	PostIncDecOperationExpression	l ++		3517127	1					
ANR	3517399	Identifier	l		3517127	0					
ANR	3517400	IncDec	++		3517127	1					
ANR	3517401	ShiftExpression	offset >> 24		3517127	1		>>			
ANR	3517402	Identifier	offset		3517127	0					
ANR	3517403	PrimaryExpression	24		3517127	1					
ANR	3517404	ElseStatement	else		3517127	0					
ANR	3517405	CompoundStatement		40:2:874:899	3517127	0					
ANR	3517406	IdentifierDeclStatement	ut64 instr_offset = a -> pc ;	775:2:20726:20751	3517127	0	True				
ANR	3517407	IdentifierDecl	instr_offset = a -> pc		3517127	0					
ANR	3517408	IdentifierDeclType	ut64		3517127	0					
ANR	3517409	Identifier	instr_offset		3517127	1					
ANR	3517410	AssignmentExpression	instr_offset = a -> pc		3517127	2		=			
ANR	3517411	Identifier	instr_offset		3517127	0					
ANR	3517412	PtrMemberAccess	a -> pc		3517127	1					
ANR	3517413	Identifier	a		3517127	0					
ANR	3517414	Identifier	pc		3517127	1					
ANR	3517415	ExpressionStatement	data [ l ++ ] = 0xe8	776:2:20755:20771	3517127	1	True				
ANR	3517416	AssignmentExpression	data [ l ++ ] = 0xe8		3517127	0		=			
ANR	3517417	ArrayIndexing	data [ l ++ ]		3517127	0					
ANR	3517418	Identifier	data		3517127	0					
ANR	3517419	PostIncDecOperationExpression	l ++		3517127	1					
ANR	3517420	Identifier	l		3517127	0					
ANR	3517421	IncDec	++		3517127	1					
ANR	3517422	PrimaryExpression	0xe8		3517127	1					
ANR	3517423	ExpressionStatement	immediate = op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign	777:2:20775:20835	3517127	2	True				
ANR	3517424	AssignmentExpression	immediate = op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign		3517127	0		=			
ANR	3517425	Identifier	immediate		3517127	0					
ANR	3517426	MultiplicativeExpression	op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign		3517127	1		*			
ANR	3517427	MemberAccess	op -> operands [ 0 ] . immediate		3517127	0					
ANR	3517428	ArrayIndexing	op -> operands [ 0 ]		3517127	0					
ANR	3517429	PtrMemberAccess	op -> operands		3517127	0					
ANR	3517430	Identifier	op		3517127	0					
ANR	3517431	Identifier	operands		3517127	1					
ANR	3517432	PrimaryExpression	0		3517127	1					
ANR	3517433	Identifier	immediate		3517127	1					
ANR	3517434	MemberAccess	op -> operands [ 0 ] . sign		3517127	1					
ANR	3517435	ArrayIndexing	op -> operands [ 0 ]		3517127	0					
ANR	3517436	PtrMemberAccess	op -> operands		3517127	0					
ANR	3517437	Identifier	op		3517127	0					
ANR	3517438	Identifier	operands		3517127	1					
ANR	3517439	PrimaryExpression	0		3517127	1					
ANR	3517440	Identifier	sign		3517127	1					
ANR	3517441	ExpressionStatement	immediate -= instr_offset + 5	778:2:20839:20868	3517127	3	True				
ANR	3517442	AssignmentExpression	immediate -= instr_offset + 5		3517127	0		-=			
ANR	3517443	Identifier	immediate		3517127	0					
ANR	3517444	AdditiveExpression	instr_offset + 5		3517127	1		+			
ANR	3517445	Identifier	instr_offset		3517127	0					
ANR	3517446	PrimaryExpression	5		3517127	1					
ANR	3517447	ExpressionStatement	data [ l ++ ] = immediate	779:2:20872:20893	3517127	4	True				
ANR	3517448	AssignmentExpression	data [ l ++ ] = immediate		3517127	0		=			
ANR	3517449	ArrayIndexing	data [ l ++ ]		3517127	0					
ANR	3517450	Identifier	data		3517127	0					
ANR	3517451	PostIncDecOperationExpression	l ++		3517127	1					
ANR	3517452	Identifier	l		3517127	0					
ANR	3517453	IncDec	++		3517127	1					
ANR	3517454	Identifier	immediate		3517127	1					
ANR	3517455	ExpressionStatement	data [ l ++ ] = immediate >> 8	780:2:20897:20923	3517127	5	True				
ANR	3517456	AssignmentExpression	data [ l ++ ] = immediate >> 8		3517127	0		=			
ANR	3517457	ArrayIndexing	data [ l ++ ]		3517127	0					
ANR	3517458	Identifier	data		3517127	0					
ANR	3517459	PostIncDecOperationExpression	l ++		3517127	1					
ANR	3517460	Identifier	l		3517127	0					
ANR	3517461	IncDec	++		3517127	1					
ANR	3517462	ShiftExpression	immediate >> 8		3517127	1		>>			
ANR	3517463	Identifier	immediate		3517127	0					
ANR	3517464	PrimaryExpression	8		3517127	1					
ANR	3517465	ExpressionStatement	data [ l ++ ] = immediate >> 16	781:2:20927:20954	3517127	6	True				
ANR	3517466	AssignmentExpression	data [ l ++ ] = immediate >> 16		3517127	0		=			
ANR	3517467	ArrayIndexing	data [ l ++ ]		3517127	0					
ANR	3517468	Identifier	data		3517127	0					
ANR	3517469	PostIncDecOperationExpression	l ++		3517127	1					
ANR	3517470	Identifier	l		3517127	0					
ANR	3517471	IncDec	++		3517127	1					
ANR	3517472	ShiftExpression	immediate >> 16		3517127	1		>>			
ANR	3517473	Identifier	immediate		3517127	0					
ANR	3517474	PrimaryExpression	16		3517127	1					
ANR	3517475	ExpressionStatement	data [ l ++ ] = immediate >> 24	782:2:20958:20985	3517127	7	True				
ANR	3517476	AssignmentExpression	data [ l ++ ] = immediate >> 24		3517127	0		=			
ANR	3517477	ArrayIndexing	data [ l ++ ]		3517127	0					
ANR	3517478	Identifier	data		3517127	0					
ANR	3517479	PostIncDecOperationExpression	l ++		3517127	1					
ANR	3517480	Identifier	l		3517127	0					
ANR	3517481	IncDec	++		3517127	1					
ANR	3517482	ShiftExpression	immediate >> 24		3517127	1		>>			
ANR	3517483	Identifier	immediate		3517127	0					
ANR	3517484	PrimaryExpression	24		3517127	1					
ANR	3517485	ReturnStatement	return l ;	784:1:20991:20999	3517127	6	True				
ANR	3517486	Identifier	l		3517127	0					
ANR	3517487	ReturnType	static int		3517127	1					
ANR	3517488	Identifier	opcall		3517127	2					
ANR	3517489	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3517127	3					
ANR	3517490	Parameter	RAsm * a	736:18:19813:19819	3517127	0	True				
ANR	3517491	ParameterType	RAsm *		3517127	0					
ANR	3517492	Identifier	a		3517127	1					
ANR	3517493	Parameter	ut8 * data	736:27:19822:19830	3517127	1	True				
ANR	3517494	ParameterType	ut8 *		3517127	0					
ANR	3517495	Identifier	data		3517127	1					
ANR	3517496	Parameter	const Opcode * op	736:38:19833:19848	3517127	2	True				
ANR	3517497	ParameterType	const Opcode *		3517127	0					
ANR	3517498	Identifier	op		3517127	1					
ANR	3517499	CFGEntryNode	ENTRY		3517127		True				
ANR	3517500	CFGExitNode	EXIT		3517127		True				
ANR	3517501	Symbol	op -> operands [ 0 ] . offset_sign		3517127						
ANR	3517502	Symbol	mod		3517127						
ANR	3517503	Symbol	data		3517127						
ANR	3517504	Symbol	* op		3517127						
ANR	3517505	Symbol	instr_offset		3517127						
ANR	3517506	Symbol	* * op		3517127						
ANR	3517507	Symbol	op -> operands [ 0 ] . extended		3517127						
ANR	3517508	Symbol	* op -> operands		3517127						
ANR	3517509	Symbol	op -> operands [ 0 ] . type		3517127						
ANR	3517510	Symbol	op -> operands [ 0 ] . reg		3517127						
ANR	3517511	Symbol	op -> operands [ 0 ] . offset		3517127						
ANR	3517512	Symbol	OT_MEMORY		3517127						
ANR	3517513	Symbol	a -> bits		3517127						
ANR	3517514	Symbol	op -> operands [ 0 ] . sign		3517127						
ANR	3517515	Symbol	a		3517127						
ANR	3517516	Symbol	op		3517127						
ANR	3517517	Symbol	OT_GPREG		3517127						
ANR	3517518	Symbol	offset		3517127						
ANR	3517519	Symbol	* a		3517127						
ANR	3517520	Symbol	* * op -> operands		3517127						
ANR	3517521	Symbol	l		3517127						
ANR	3517522	Symbol	op -> operands [ 0 ] . immediate		3517127						
ANR	3517523	Symbol	a -> pc		3517127						
ANR	3517524	Symbol	X86R_UNDEFINED		3517127						
ANR	3517525	Symbol	immediate		3517127						
ANR	3517526	Symbol	* op -> operands [ 0 ] . regs		3517127						
ANR	3517527	Symbol	* * * op		3517127						
ANR	3517528	Symbol	op -> operands		3517127						
ANR	3517529	Symbol	* data		3517127						
ANR	3517530	Symbol	op -> operands [ 0 ] . regs		3517127						
ANR	3517531	Function	opcmov	787:0:21004:24788							
ANR	3517532	FunctionDef	"opcmov (RAsm * a , ut8 * data , const Opcode * op)"		3517531	0					
ANR	3517533	CompoundStatement		787:56:21060:24788	3517531	0					
ANR	3517534	ExpressionStatement	is_valid_registers ( op )	788:1:21063:21086	3517531	0	True				
ANR	3517535	CallExpression	is_valid_registers ( op )		3517531	0					
ANR	3517536	Callee	is_valid_registers		3517531	0					
ANR	3517537	Identifier	is_valid_registers		3517531	0					
ANR	3517538	ArgumentList	op		3517531	1					
ANR	3517539	Argument	op		3517531	0					
ANR	3517540	Identifier	op		3517531	0					
ANR	3517541	IdentifierDeclStatement	int l = 0 ;	789:1:21089:21098	3517531	1	True				
ANR	3517542	IdentifierDecl	l = 0		3517531	0					
ANR	3517543	IdentifierDeclType	int		3517531	0					
ANR	3517544	Identifier	l		3517531	1					
ANR	3517545	AssignmentExpression	l = 0		3517531	2		=			
ANR	3517546	Identifier	l		3517531	0					
ANR	3517547	PrimaryExpression	0		3517531	1					
ANR	3517548	IdentifierDeclStatement	int mod_byte = 0 ;	790:1:21101:21117	3517531	2	True				
ANR	3517549	IdentifierDecl	mod_byte = 0		3517531	0					
ANR	3517550	IdentifierDeclType	int		3517531	0					
ANR	3517551	Identifier	mod_byte		3517531	1					
ANR	3517552	AssignmentExpression	mod_byte = 0		3517531	2		=			
ANR	3517553	Identifier	mod_byte		3517531	0					
ANR	3517554	PrimaryExpression	0		3517531	1					
ANR	3517555	IdentifierDeclStatement	int offset = 0 ;	791:1:21120:21134	3517531	3	True				
ANR	3517556	IdentifierDecl	offset = 0		3517531	0					
ANR	3517557	IdentifierDeclType	int		3517531	0					
ANR	3517558	Identifier	offset		3517531	1					
ANR	3517559	AssignmentExpression	offset = 0		3517531	2		=			
ANR	3517560	Identifier	offset		3517531	0					
ANR	3517561	PrimaryExpression	0		3517531	1					
ANR	3517562	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY || op -> operands [ 1 ] . type & OT_CONSTANT )		3517531	4					
ANR	3517563	Condition	op -> operands [ 0 ] . type & OT_MEMORY || op -> operands [ 1 ] . type & OT_CONSTANT	793:5:21142:21216	3517531	0	True				
ANR	3517564	OrExpression	op -> operands [ 0 ] . type & OT_MEMORY || op -> operands [ 1 ] . type & OT_CONSTANT		3517531	0		||			
ANR	3517565	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3517531	0		&			
ANR	3517566	MemberAccess	op -> operands [ 0 ] . type		3517531	0					
ANR	3517567	ArrayIndexing	op -> operands [ 0 ]		3517531	0					
ANR	3517568	PtrMemberAccess	op -> operands		3517531	0					
ANR	3517569	Identifier	op		3517531	0					
ANR	3517570	Identifier	operands		3517531	1					
ANR	3517571	PrimaryExpression	0		3517531	1					
ANR	3517572	Identifier	type		3517531	1					
ANR	3517573	Identifier	OT_MEMORY		3517531	1					
ANR	3517574	BitAndExpression	op -> operands [ 1 ] . type & OT_CONSTANT		3517531	1		&			
ANR	3517575	MemberAccess	op -> operands [ 1 ] . type		3517531	0					
ANR	3517576	ArrayIndexing	op -> operands [ 1 ]		3517531	0					
ANR	3517577	PtrMemberAccess	op -> operands		3517531	0					
ANR	3517578	Identifier	op		3517531	0					
ANR	3517579	Identifier	operands		3517531	1					
ANR	3517580	PrimaryExpression	1		3517531	1					
ANR	3517581	Identifier	type		3517531	1					
ANR	3517582	Identifier	OT_CONSTANT		3517531	1					
ANR	3517583	CompoundStatement		8:41:158:158	3517531	1					
ANR	3517584	ReturnStatement	return - 1 ;	795:2:21223:21232	3517531	0	True				
ANR	3517585	UnaryOperationExpression	- 1		3517531	0					
ANR	3517586	UnaryOperator	-		3517531	0					
ANR	3517587	PrimaryExpression	1		3517531	1					
ANR	3517588	ExpressionStatement	data [ l ++ ] = 0x0f	798:1:21239:21255	3517531	5	True				
ANR	3517589	AssignmentExpression	data [ l ++ ] = 0x0f		3517531	0		=			
ANR	3517590	ArrayIndexing	data [ l ++ ]		3517531	0					
ANR	3517591	Identifier	data		3517531	0					
ANR	3517592	PostIncDecOperationExpression	l ++		3517531	1					
ANR	3517593	Identifier	l		3517531	0					
ANR	3517594	IncDec	++		3517531	1					
ANR	3517595	PrimaryExpression	0x0f		3517531	1					
ANR	3517596	IdentifierDeclStatement	char * cmov = op -> mnemonic + 4 ;	799:1:21258:21287	3517531	6	True				
ANR	3517597	IdentifierDecl	* cmov = op -> mnemonic + 4		3517531	0					
ANR	3517598	IdentifierDeclType	char *		3517531	0					
ANR	3517599	Identifier	cmov		3517531	1					
ANR	3517600	AssignmentExpression	* cmov = op -> mnemonic + 4		3517531	2		=			
ANR	3517601	Identifier	cmov		3517531	0					
ANR	3517602	AdditiveExpression	op -> mnemonic + 4		3517531	1		+			
ANR	3517603	PtrMemberAccess	op -> mnemonic		3517531	0					
ANR	3517604	Identifier	op		3517531	0					
ANR	3517605	Identifier	mnemonic		3517531	1					
ANR	3517606	PrimaryExpression	4		3517531	1					
ANR	3517607	IfStatement	"if ( ! strcmp ( cmov , ""o"" ) )"		3517531	7					
ANR	3517608	Condition	"! strcmp ( cmov , ""o"" )"	800:5:21294:21312	3517531	0	True				
ANR	3517609	UnaryOperationExpression	"! strcmp ( cmov , ""o"" )"		3517531	0					
ANR	3517610	UnaryOperator	!		3517531	0					
ANR	3517611	CallExpression	"strcmp ( cmov , ""o"" )"		3517531	1					
ANR	3517612	Callee	strcmp		3517531	0					
ANR	3517613	Identifier	strcmp		3517531	0					
ANR	3517614	ArgumentList	cmov		3517531	1					
ANR	3517615	Argument	cmov		3517531	0					
ANR	3517616	Identifier	cmov		3517531	0					
ANR	3517617	Argument	"""o"""		3517531	1					
ANR	3517618	PrimaryExpression	"""o"""		3517531	0					
ANR	3517619	CompoundStatement		14:26:254:254	3517531	1					
ANR	3517620	ExpressionStatement	data [ l ++ ] = 0x40	801:2:21319:21335	3517531	0	True				
ANR	3517621	AssignmentExpression	data [ l ++ ] = 0x40		3517531	0		=			
ANR	3517622	ArrayIndexing	data [ l ++ ]		3517531	0					
ANR	3517623	Identifier	data		3517531	0					
ANR	3517624	PostIncDecOperationExpression	l ++		3517531	1					
ANR	3517625	Identifier	l		3517531	0					
ANR	3517626	IncDec	++		3517531	1					
ANR	3517627	PrimaryExpression	0x40		3517531	1					
ANR	3517628	ElseStatement	else		3517531	0					
ANR	3517629	IfStatement	"if ( ! strcmp ( cmov , ""no"" ) )"		3517531	0					
ANR	3517630	Condition	"! strcmp ( cmov , ""no"" )"	802:12:21349:21368	3517531	0	True				
ANR	3517631	UnaryOperationExpression	"! strcmp ( cmov , ""no"" )"		3517531	0					
ANR	3517632	UnaryOperator	!		3517531	0					
ANR	3517633	CallExpression	"strcmp ( cmov , ""no"" )"		3517531	1					
ANR	3517634	Callee	strcmp		3517531	0					
ANR	3517635	Identifier	strcmp		3517531	0					
ANR	3517636	ArgumentList	cmov		3517531	1					
ANR	3517637	Argument	cmov		3517531	0					
ANR	3517638	Identifier	cmov		3517531	0					
ANR	3517639	Argument	"""no"""		3517531	1					
ANR	3517640	PrimaryExpression	"""no"""		3517531	0					
ANR	3517641	CompoundStatement		16:34:310:310	3517531	1					
ANR	3517642	ExpressionStatement	data [ l ++ ] = 0x41	803:2:21375:21392	3517531	0	True				
ANR	3517643	AssignmentExpression	data [ l ++ ] = 0x41		3517531	0		=			
ANR	3517644	ArrayIndexing	data [ l ++ ]		3517531	0					
ANR	3517645	Identifier	data		3517531	0					
ANR	3517646	PostIncDecOperationExpression	l ++		3517531	1					
ANR	3517647	Identifier	l		3517531	0					
ANR	3517648	IncDec	++		3517531	1					
ANR	3517649	PrimaryExpression	0x41		3517531	1					
ANR	3517650	ElseStatement	else		3517531	0					
ANR	3517651	IfStatement	"if ( ! strcmp ( cmov , ""b"" ) || ! strcmp ( cmov , ""c"" ) || ! strcmp ( cmov , ""nae"" ) )"		3517531	0					
ANR	3517652	Condition	"! strcmp ( cmov , ""b"" ) || ! strcmp ( cmov , ""c"" ) || ! strcmp ( cmov , ""nae"" )"	804:12:21406:21496	3517531	0	True				
ANR	3517653	OrExpression	"! strcmp ( cmov , ""b"" ) || ! strcmp ( cmov , ""c"" ) || ! strcmp ( cmov , ""nae"" )"		3517531	0		||			
ANR	3517654	UnaryOperationExpression	"! strcmp ( cmov , ""b"" )"		3517531	0					
ANR	3517655	UnaryOperator	!		3517531	0					
ANR	3517656	CallExpression	"strcmp ( cmov , ""b"" )"		3517531	1					
ANR	3517657	Callee	strcmp		3517531	0					
ANR	3517658	Identifier	strcmp		3517531	0					
ANR	3517659	ArgumentList	cmov		3517531	1					
ANR	3517660	Argument	cmov		3517531	0					
ANR	3517661	Identifier	cmov		3517531	0					
ANR	3517662	Argument	"""b"""		3517531	1					
ANR	3517663	PrimaryExpression	"""b"""		3517531	0					
ANR	3517664	OrExpression	"! strcmp ( cmov , ""c"" ) || ! strcmp ( cmov , ""nae"" )"		3517531	1		||			
ANR	3517665	UnaryOperationExpression	"! strcmp ( cmov , ""c"" )"		3517531	0					
ANR	3517666	UnaryOperator	!		3517531	0					
ANR	3517667	CallExpression	"strcmp ( cmov , ""c"" )"		3517531	1					
ANR	3517668	Callee	strcmp		3517531	0					
ANR	3517669	Identifier	strcmp		3517531	0					
ANR	3517670	ArgumentList	cmov		3517531	1					
ANR	3517671	Argument	cmov		3517531	0					
ANR	3517672	Identifier	cmov		3517531	0					
ANR	3517673	Argument	"""c"""		3517531	1					
ANR	3517674	PrimaryExpression	"""c"""		3517531	0					
ANR	3517675	UnaryOperationExpression	"! strcmp ( cmov , ""nae"" )"		3517531	1					
ANR	3517676	UnaryOperator	!		3517531	0					
ANR	3517677	CallExpression	"strcmp ( cmov , ""nae"" )"		3517531	1					
ANR	3517678	Callee	strcmp		3517531	0					
ANR	3517679	Identifier	strcmp		3517531	0					
ANR	3517680	ArgumentList	cmov		3517531	1					
ANR	3517681	Argument	cmov		3517531	0					
ANR	3517682	Identifier	cmov		3517531	0					
ANR	3517683	Argument	"""nae"""		3517531	1					
ANR	3517684	PrimaryExpression	"""nae"""		3517531	0					
ANR	3517685	CompoundStatement		20:35:438:438	3517531	1					
ANR	3517686	ExpressionStatement	data [ l ++ ] = 0x42	807:2:21503:21520	3517531	0	True				
ANR	3517687	AssignmentExpression	data [ l ++ ] = 0x42		3517531	0		=			
ANR	3517688	ArrayIndexing	data [ l ++ ]		3517531	0					
ANR	3517689	Identifier	data		3517531	0					
ANR	3517690	PostIncDecOperationExpression	l ++		3517531	1					
ANR	3517691	Identifier	l		3517531	0					
ANR	3517692	IncDec	++		3517531	1					
ANR	3517693	PrimaryExpression	0x42		3517531	1					
ANR	3517694	ElseStatement	else		3517531	0					
ANR	3517695	IfStatement	"if ( ! strcmp ( cmov , ""ae"" ) || ! strcmp ( cmov , ""nb"" ) || ! strcmp ( cmov , ""nc"" ) )"		3517531	0					
ANR	3517696	Condition	"! strcmp ( cmov , ""ae"" ) || ! strcmp ( cmov , ""nb"" ) || ! strcmp ( cmov , ""nc"" )"	808:12:21534:21618	3517531	0	True				
ANR	3517697	OrExpression	"! strcmp ( cmov , ""ae"" ) || ! strcmp ( cmov , ""nb"" ) || ! strcmp ( cmov , ""nc"" )"		3517531	0		||			
ANR	3517698	UnaryOperationExpression	"! strcmp ( cmov , ""ae"" )"		3517531	0					
ANR	3517699	UnaryOperator	!		3517531	0					
ANR	3517700	CallExpression	"strcmp ( cmov , ""ae"" )"		3517531	1					
ANR	3517701	Callee	strcmp		3517531	0					
ANR	3517702	Identifier	strcmp		3517531	0					
ANR	3517703	ArgumentList	cmov		3517531	1					
ANR	3517704	Argument	cmov		3517531	0					
ANR	3517705	Identifier	cmov		3517531	0					
ANR	3517706	Argument	"""ae"""		3517531	1					
ANR	3517707	PrimaryExpression	"""ae"""		3517531	0					
ANR	3517708	OrExpression	"! strcmp ( cmov , ""nb"" ) || ! strcmp ( cmov , ""nc"" )"		3517531	1		||			
ANR	3517709	UnaryOperationExpression	"! strcmp ( cmov , ""nb"" )"		3517531	0					
ANR	3517710	UnaryOperator	!		3517531	0					
ANR	3517711	CallExpression	"strcmp ( cmov , ""nb"" )"		3517531	1					
ANR	3517712	Callee	strcmp		3517531	0					
ANR	3517713	Identifier	strcmp		3517531	0					
ANR	3517714	ArgumentList	cmov		3517531	1					
ANR	3517715	Argument	cmov		3517531	0					
ANR	3517716	Identifier	cmov		3517531	0					
ANR	3517717	Argument	"""nb"""		3517531	1					
ANR	3517718	PrimaryExpression	"""nb"""		3517531	0					
ANR	3517719	UnaryOperationExpression	"! strcmp ( cmov , ""nc"" )"		3517531	1					
ANR	3517720	UnaryOperator	!		3517531	0					
ANR	3517721	CallExpression	"strcmp ( cmov , ""nc"" )"		3517531	1					
ANR	3517722	Callee	strcmp		3517531	0					
ANR	3517723	Identifier	strcmp		3517531	0					
ANR	3517724	ArgumentList	cmov		3517531	1					
ANR	3517725	Argument	cmov		3517531	0					
ANR	3517726	Identifier	cmov		3517531	0					
ANR	3517727	Argument	"""nc"""		3517531	1					
ANR	3517728	PrimaryExpression	"""nc"""		3517531	0					
ANR	3517729	CompoundStatement		24:27:560:560	3517531	1					
ANR	3517730	ExpressionStatement	data [ l ++ ] = 0x43	811:2:21625:21642	3517531	0	True				
ANR	3517731	AssignmentExpression	data [ l ++ ] = 0x43		3517531	0		=			
ANR	3517732	ArrayIndexing	data [ l ++ ]		3517531	0					
ANR	3517733	Identifier	data		3517531	0					
ANR	3517734	PostIncDecOperationExpression	l ++		3517531	1					
ANR	3517735	Identifier	l		3517531	0					
ANR	3517736	IncDec	++		3517531	1					
ANR	3517737	PrimaryExpression	0x43		3517531	1					
ANR	3517738	ElseStatement	else		3517531	0					
ANR	3517739	IfStatement	"if ( ! strcmp ( cmov , ""e"" ) || ! strcmp ( cmov , ""z"" ) )"		3517531	0					
ANR	3517740	Condition	"! strcmp ( cmov , ""e"" ) || ! strcmp ( cmov , ""z"" )"	812:12:21656:21716	3517531	0	True				
ANR	3517741	OrExpression	"! strcmp ( cmov , ""e"" ) || ! strcmp ( cmov , ""z"" )"		3517531	0		||			
ANR	3517742	UnaryOperationExpression	"! strcmp ( cmov , ""e"" )"		3517531	0					
ANR	3517743	UnaryOperator	!		3517531	0					
ANR	3517744	CallExpression	"strcmp ( cmov , ""e"" )"		3517531	1					
ANR	3517745	Callee	strcmp		3517531	0					
ANR	3517746	Identifier	strcmp		3517531	0					
ANR	3517747	ArgumentList	cmov		3517531	1					
ANR	3517748	Argument	cmov		3517531	0					
ANR	3517749	Identifier	cmov		3517531	0					
ANR	3517750	Argument	"""e"""		3517531	1					
ANR	3517751	PrimaryExpression	"""e"""		3517531	0					
ANR	3517752	UnaryOperationExpression	"! strcmp ( cmov , ""z"" )"		3517531	1					
ANR	3517753	UnaryOperator	!		3517531	0					
ANR	3517754	CallExpression	"strcmp ( cmov , ""z"" )"		3517531	1					
ANR	3517755	Callee	strcmp		3517531	0					
ANR	3517756	Identifier	strcmp		3517531	0					
ANR	3517757	ArgumentList	cmov		3517531	1					
ANR	3517758	Argument	cmov		3517531	0					
ANR	3517759	Identifier	cmov		3517531	0					
ANR	3517760	Argument	"""z"""		3517531	1					
ANR	3517761	PrimaryExpression	"""z"""		3517531	0					
ANR	3517762	CompoundStatement		27:40:658:658	3517531	1					
ANR	3517763	ExpressionStatement	data [ l ++ ] = 0x44	814:2:21723:21740	3517531	0	True				
ANR	3517764	AssignmentExpression	data [ l ++ ] = 0x44		3517531	0		=			
ANR	3517765	ArrayIndexing	data [ l ++ ]		3517531	0					
ANR	3517766	Identifier	data		3517531	0					
ANR	3517767	PostIncDecOperationExpression	l ++		3517531	1					
ANR	3517768	Identifier	l		3517531	0					
ANR	3517769	IncDec	++		3517531	1					
ANR	3517770	PrimaryExpression	0x44		3517531	1					
ANR	3517771	ElseStatement	else		3517531	0					
ANR	3517772	IfStatement	"if ( ! strcmp ( cmov , ""ne"" ) || ! strcmp ( cmov , ""nz"" ) )"		3517531	0					
ANR	3517773	Condition	"! strcmp ( cmov , ""ne"" ) || ! strcmp ( cmov , ""nz"" )"	815:12:21754:21809	3517531	0	True				
ANR	3517774	OrExpression	"! strcmp ( cmov , ""ne"" ) || ! strcmp ( cmov , ""nz"" )"		3517531	0		||			
ANR	3517775	UnaryOperationExpression	"! strcmp ( cmov , ""ne"" )"		3517531	0					
ANR	3517776	UnaryOperator	!		3517531	0					
ANR	3517777	CallExpression	"strcmp ( cmov , ""ne"" )"		3517531	1					
ANR	3517778	Callee	strcmp		3517531	0					
ANR	3517779	Identifier	strcmp		3517531	0					
ANR	3517780	ArgumentList	cmov		3517531	1					
ANR	3517781	Argument	cmov		3517531	0					
ANR	3517782	Identifier	cmov		3517531	0					
ANR	3517783	Argument	"""ne"""		3517531	1					
ANR	3517784	PrimaryExpression	"""ne"""		3517531	0					
ANR	3517785	UnaryOperationExpression	"! strcmp ( cmov , ""nz"" )"		3517531	1					
ANR	3517786	UnaryOperator	!		3517531	0					
ANR	3517787	CallExpression	"strcmp ( cmov , ""nz"" )"		3517531	1					
ANR	3517788	Callee	strcmp		3517531	0					
ANR	3517789	Identifier	strcmp		3517531	0					
ANR	3517790	ArgumentList	cmov		3517531	1					
ANR	3517791	Argument	cmov		3517531	0					
ANR	3517792	Identifier	cmov		3517531	0					
ANR	3517793	Argument	"""nz"""		3517531	1					
ANR	3517794	PrimaryExpression	"""nz"""		3517531	0					
ANR	3517795	CompoundStatement		30:34:751:751	3517531	1					
ANR	3517796	ExpressionStatement	data [ l ++ ] = 0x45	817:2:21816:21833	3517531	0	True				
ANR	3517797	AssignmentExpression	data [ l ++ ] = 0x45		3517531	0		=			
ANR	3517798	ArrayIndexing	data [ l ++ ]		3517531	0					
ANR	3517799	Identifier	data		3517531	0					
ANR	3517800	PostIncDecOperationExpression	l ++		3517531	1					
ANR	3517801	Identifier	l		3517531	0					
ANR	3517802	IncDec	++		3517531	1					
ANR	3517803	PrimaryExpression	0x45		3517531	1					
ANR	3517804	ElseStatement	else		3517531	0					
ANR	3517805	IfStatement	"if ( ! strcmp ( cmov , ""be"" ) || ! strcmp ( cmov , ""na"" ) )"		3517531	0					
ANR	3517806	Condition	"! strcmp ( cmov , ""be"" ) || ! strcmp ( cmov , ""na"" )"	818:19:21854:21909	3517531	0	True				
ANR	3517807	OrExpression	"! strcmp ( cmov , ""be"" ) || ! strcmp ( cmov , ""na"" )"		3517531	0		||			
ANR	3517808	UnaryOperationExpression	"! strcmp ( cmov , ""be"" )"		3517531	0					
ANR	3517809	UnaryOperator	!		3517531	0					
ANR	3517810	CallExpression	"strcmp ( cmov , ""be"" )"		3517531	1					
ANR	3517811	Callee	strcmp		3517531	0					
ANR	3517812	Identifier	strcmp		3517531	0					
ANR	3517813	ArgumentList	cmov		3517531	1					
ANR	3517814	Argument	cmov		3517531	0					
ANR	3517815	Identifier	cmov		3517531	0					
ANR	3517816	Argument	"""be"""		3517531	1					
ANR	3517817	PrimaryExpression	"""be"""		3517531	0					
ANR	3517818	UnaryOperationExpression	"! strcmp ( cmov , ""na"" )"		3517531	1					
ANR	3517819	UnaryOperator	!		3517531	0					
ANR	3517820	CallExpression	"strcmp ( cmov , ""na"" )"		3517531	1					
ANR	3517821	Callee	strcmp		3517531	0					
ANR	3517822	Identifier	strcmp		3517531	0					
ANR	3517823	ArgumentList	cmov		3517531	1					
ANR	3517824	Argument	cmov		3517531	0					
ANR	3517825	Identifier	cmov		3517531	0					
ANR	3517826	Argument	"""na"""		3517531	1					
ANR	3517827	PrimaryExpression	"""na"""		3517531	0					
ANR	3517828	CompoundStatement		33:34:851:851	3517531	1					
ANR	3517829	ExpressionStatement	data [ l ++ ] = 0x46	820:2:21916:21933	3517531	0	True				
ANR	3517830	AssignmentExpression	data [ l ++ ] = 0x46		3517531	0		=			
ANR	3517831	ArrayIndexing	data [ l ++ ]		3517531	0					
ANR	3517832	Identifier	data		3517531	0					
ANR	3517833	PostIncDecOperationExpression	l ++		3517531	1					
ANR	3517834	Identifier	l		3517531	0					
ANR	3517835	IncDec	++		3517531	1					
ANR	3517836	PrimaryExpression	0x46		3517531	1					
ANR	3517837	ElseStatement	else		3517531	0					
ANR	3517838	IfStatement	"if ( ! strcmp ( cmov , ""a"" ) || ! strcmp ( cmov , ""nbe"" ) )"		3517531	0					
ANR	3517839	Condition	"! strcmp ( cmov , ""a"" ) || ! strcmp ( cmov , ""nbe"" )"	821:19:21954:22009	3517531	0	True				
ANR	3517840	OrExpression	"! strcmp ( cmov , ""a"" ) || ! strcmp ( cmov , ""nbe"" )"		3517531	0		||			
ANR	3517841	UnaryOperationExpression	"! strcmp ( cmov , ""a"" )"		3517531	0					
ANR	3517842	UnaryOperator	!		3517531	0					
ANR	3517843	CallExpression	"strcmp ( cmov , ""a"" )"		3517531	1					
ANR	3517844	Callee	strcmp		3517531	0					
ANR	3517845	Identifier	strcmp		3517531	0					
ANR	3517846	ArgumentList	cmov		3517531	1					
ANR	3517847	Argument	cmov		3517531	0					
ANR	3517848	Identifier	cmov		3517531	0					
ANR	3517849	Argument	"""a"""		3517531	1					
ANR	3517850	PrimaryExpression	"""a"""		3517531	0					
ANR	3517851	UnaryOperationExpression	"! strcmp ( cmov , ""nbe"" )"		3517531	1					
ANR	3517852	UnaryOperator	!		3517531	0					
ANR	3517853	CallExpression	"strcmp ( cmov , ""nbe"" )"		3517531	1					
ANR	3517854	Callee	strcmp		3517531	0					
ANR	3517855	Identifier	strcmp		3517531	0					
ANR	3517856	ArgumentList	cmov		3517531	1					
ANR	3517857	Argument	cmov		3517531	0					
ANR	3517858	Identifier	cmov		3517531	0					
ANR	3517859	Argument	"""nbe"""		3517531	1					
ANR	3517860	PrimaryExpression	"""nbe"""		3517531	0					
ANR	3517861	CompoundStatement		36:35:951:951	3517531	1					
ANR	3517862	ExpressionStatement	data [ l ++ ] = 0x47	823:2:22016:22033	3517531	0	True				
ANR	3517863	AssignmentExpression	data [ l ++ ] = 0x47		3517531	0		=			
ANR	3517864	ArrayIndexing	data [ l ++ ]		3517531	0					
ANR	3517865	Identifier	data		3517531	0					
ANR	3517866	PostIncDecOperationExpression	l ++		3517531	1					
ANR	3517867	Identifier	l		3517531	0					
ANR	3517868	IncDec	++		3517531	1					
ANR	3517869	PrimaryExpression	0x47		3517531	1					
ANR	3517870	ElseStatement	else		3517531	0					
ANR	3517871	IfStatement	"if ( ! strcmp ( cmov , ""s"" ) )"		3517531	0					
ANR	3517872	Condition	"! strcmp ( cmov , ""s"" )"	824:12:22047:22065	3517531	0	True				
ANR	3517873	UnaryOperationExpression	"! strcmp ( cmov , ""s"" )"		3517531	0					
ANR	3517874	UnaryOperator	!		3517531	0					
ANR	3517875	CallExpression	"strcmp ( cmov , ""s"" )"		3517531	1					
ANR	3517876	Callee	strcmp		3517531	0					
ANR	3517877	Identifier	strcmp		3517531	0					
ANR	3517878	ArgumentList	cmov		3517531	1					
ANR	3517879	Argument	cmov		3517531	0					
ANR	3517880	Identifier	cmov		3517531	0					
ANR	3517881	Argument	"""s"""		3517531	1					
ANR	3517882	PrimaryExpression	"""s"""		3517531	0					
ANR	3517883	CompoundStatement		38:33:1007:1007	3517531	1					
ANR	3517884	ExpressionStatement	data [ l ++ ] = 0x48	825:2:22072:22089	3517531	0	True				
ANR	3517885	AssignmentExpression	data [ l ++ ] = 0x48		3517531	0		=			
ANR	3517886	ArrayIndexing	data [ l ++ ]		3517531	0					
ANR	3517887	Identifier	data		3517531	0					
ANR	3517888	PostIncDecOperationExpression	l ++		3517531	1					
ANR	3517889	Identifier	l		3517531	0					
ANR	3517890	IncDec	++		3517531	1					
ANR	3517891	PrimaryExpression	0x48		3517531	1					
ANR	3517892	ElseStatement	else		3517531	0					
ANR	3517893	IfStatement	"if ( ! strcmp ( cmov , ""ns"" ) )"		3517531	0					
ANR	3517894	Condition	"! strcmp ( cmov , ""ns"" )"	826:19:22110:22129	3517531	0	True				
ANR	3517895	UnaryOperationExpression	"! strcmp ( cmov , ""ns"" )"		3517531	0					
ANR	3517896	UnaryOperator	!		3517531	0					
ANR	3517897	CallExpression	"strcmp ( cmov , ""ns"" )"		3517531	1					
ANR	3517898	Callee	strcmp		3517531	0					
ANR	3517899	Identifier	strcmp		3517531	0					
ANR	3517900	ArgumentList	cmov		3517531	1					
ANR	3517901	Argument	cmov		3517531	0					
ANR	3517902	Identifier	cmov		3517531	0					
ANR	3517903	Argument	"""ns"""		3517531	1					
ANR	3517904	PrimaryExpression	"""ns"""		3517531	0					
ANR	3517905	CompoundStatement		40:41:1071:1071	3517531	1					
ANR	3517906	ExpressionStatement	data [ l ++ ] = 0x49	827:2:22136:22153	3517531	0	True				
ANR	3517907	AssignmentExpression	data [ l ++ ] = 0x49		3517531	0		=			
ANR	3517908	ArrayIndexing	data [ l ++ ]		3517531	0					
ANR	3517909	Identifier	data		3517531	0					
ANR	3517910	PostIncDecOperationExpression	l ++		3517531	1					
ANR	3517911	Identifier	l		3517531	0					
ANR	3517912	IncDec	++		3517531	1					
ANR	3517913	PrimaryExpression	0x49		3517531	1					
ANR	3517914	ElseStatement	else		3517531	0					
ANR	3517915	IfStatement	"if ( ! strcmp ( cmov , ""p"" ) || ! strcmp ( cmov , ""pe"" ) )"		3517531	0					
ANR	3517916	Condition	"! strcmp ( cmov , ""p"" ) || ! strcmp ( cmov , ""pe"" )"	828:19:22174:22228	3517531	0	True				
ANR	3517917	OrExpression	"! strcmp ( cmov , ""p"" ) || ! strcmp ( cmov , ""pe"" )"		3517531	0		||			
ANR	3517918	UnaryOperationExpression	"! strcmp ( cmov , ""p"" )"		3517531	0					
ANR	3517919	UnaryOperator	!		3517531	0					
ANR	3517920	CallExpression	"strcmp ( cmov , ""p"" )"		3517531	1					
ANR	3517921	Callee	strcmp		3517531	0					
ANR	3517922	Identifier	strcmp		3517531	0					
ANR	3517923	ArgumentList	cmov		3517531	1					
ANR	3517924	Argument	cmov		3517531	0					
ANR	3517925	Identifier	cmov		3517531	0					
ANR	3517926	Argument	"""p"""		3517531	1					
ANR	3517927	PrimaryExpression	"""p"""		3517531	0					
ANR	3517928	UnaryOperationExpression	"! strcmp ( cmov , ""pe"" )"		3517531	1					
ANR	3517929	UnaryOperator	!		3517531	0					
ANR	3517930	CallExpression	"strcmp ( cmov , ""pe"" )"		3517531	1					
ANR	3517931	Callee	strcmp		3517531	0					
ANR	3517932	Identifier	strcmp		3517531	0					
ANR	3517933	ArgumentList	cmov		3517531	1					
ANR	3517934	Argument	cmov		3517531	0					
ANR	3517935	Identifier	cmov		3517531	0					
ANR	3517936	Argument	"""pe"""		3517531	1					
ANR	3517937	PrimaryExpression	"""pe"""		3517531	0					
ANR	3517938	CompoundStatement		43:34:1170:1170	3517531	1					
ANR	3517939	ExpressionStatement	data [ l ++ ] = 0x4a	830:2:22235:22252	3517531	0	True				
ANR	3517940	AssignmentExpression	data [ l ++ ] = 0x4a		3517531	0		=			
ANR	3517941	ArrayIndexing	data [ l ++ ]		3517531	0					
ANR	3517942	Identifier	data		3517531	0					
ANR	3517943	PostIncDecOperationExpression	l ++		3517531	1					
ANR	3517944	Identifier	l		3517531	0					
ANR	3517945	IncDec	++		3517531	1					
ANR	3517946	PrimaryExpression	0x4a		3517531	1					
ANR	3517947	ElseStatement	else		3517531	0					
ANR	3517948	IfStatement	"if ( ! strcmp ( cmov , ""np"" ) || ! strcmp ( cmov , ""po"" ) )"		3517531	0					
ANR	3517949	Condition	"! strcmp ( cmov , ""np"" ) || ! strcmp ( cmov , ""po"" )"	831:19:22273:22328	3517531	0	True				
ANR	3517950	OrExpression	"! strcmp ( cmov , ""np"" ) || ! strcmp ( cmov , ""po"" )"		3517531	0		||			
ANR	3517951	UnaryOperationExpression	"! strcmp ( cmov , ""np"" )"		3517531	0					
ANR	3517952	UnaryOperator	!		3517531	0					
ANR	3517953	CallExpression	"strcmp ( cmov , ""np"" )"		3517531	1					
ANR	3517954	Callee	strcmp		3517531	0					
ANR	3517955	Identifier	strcmp		3517531	0					
ANR	3517956	ArgumentList	cmov		3517531	1					
ANR	3517957	Argument	cmov		3517531	0					
ANR	3517958	Identifier	cmov		3517531	0					
ANR	3517959	Argument	"""np"""		3517531	1					
ANR	3517960	PrimaryExpression	"""np"""		3517531	0					
ANR	3517961	UnaryOperationExpression	"! strcmp ( cmov , ""po"" )"		3517531	1					
ANR	3517962	UnaryOperator	!		3517531	0					
ANR	3517963	CallExpression	"strcmp ( cmov , ""po"" )"		3517531	1					
ANR	3517964	Callee	strcmp		3517531	0					
ANR	3517965	Identifier	strcmp		3517531	0					
ANR	3517966	ArgumentList	cmov		3517531	1					
ANR	3517967	Argument	cmov		3517531	0					
ANR	3517968	Identifier	cmov		3517531	0					
ANR	3517969	Argument	"""po"""		3517531	1					
ANR	3517970	PrimaryExpression	"""po"""		3517531	0					
ANR	3517971	CompoundStatement		46:34:1270:1270	3517531	1					
ANR	3517972	ExpressionStatement	data [ l ++ ] = 0x4b	833:2:22335:22352	3517531	0	True				
ANR	3517973	AssignmentExpression	data [ l ++ ] = 0x4b		3517531	0		=			
ANR	3517974	ArrayIndexing	data [ l ++ ]		3517531	0					
ANR	3517975	Identifier	data		3517531	0					
ANR	3517976	PostIncDecOperationExpression	l ++		3517531	1					
ANR	3517977	Identifier	l		3517531	0					
ANR	3517978	IncDec	++		3517531	1					
ANR	3517979	PrimaryExpression	0x4b		3517531	1					
ANR	3517980	ElseStatement	else		3517531	0					
ANR	3517981	IfStatement	"if ( ! strcmp ( cmov , ""l"" ) || ! strcmp ( cmov , ""nge"" ) )"		3517531	0					
ANR	3517982	Condition	"! strcmp ( cmov , ""l"" ) || ! strcmp ( cmov , ""nge"" )"	834:19:22373:22428	3517531	0	True				
ANR	3517983	OrExpression	"! strcmp ( cmov , ""l"" ) || ! strcmp ( cmov , ""nge"" )"		3517531	0		||			
ANR	3517984	UnaryOperationExpression	"! strcmp ( cmov , ""l"" )"		3517531	0					
ANR	3517985	UnaryOperator	!		3517531	0					
ANR	3517986	CallExpression	"strcmp ( cmov , ""l"" )"		3517531	1					
ANR	3517987	Callee	strcmp		3517531	0					
ANR	3517988	Identifier	strcmp		3517531	0					
ANR	3517989	ArgumentList	cmov		3517531	1					
ANR	3517990	Argument	cmov		3517531	0					
ANR	3517991	Identifier	cmov		3517531	0					
ANR	3517992	Argument	"""l"""		3517531	1					
ANR	3517993	PrimaryExpression	"""l"""		3517531	0					
ANR	3517994	UnaryOperationExpression	"! strcmp ( cmov , ""nge"" )"		3517531	1					
ANR	3517995	UnaryOperator	!		3517531	0					
ANR	3517996	CallExpression	"strcmp ( cmov , ""nge"" )"		3517531	1					
ANR	3517997	Callee	strcmp		3517531	0					
ANR	3517998	Identifier	strcmp		3517531	0					
ANR	3517999	ArgumentList	cmov		3517531	1					
ANR	3518000	Argument	cmov		3517531	0					
ANR	3518001	Identifier	cmov		3517531	0					
ANR	3518002	Argument	"""nge"""		3517531	1					
ANR	3518003	PrimaryExpression	"""nge"""		3517531	0					
ANR	3518004	CompoundStatement		49:35:1370:1370	3517531	1					
ANR	3518005	ExpressionStatement	data [ l ++ ] = 0x4c	836:2:22435:22452	3517531	0	True				
ANR	3518006	AssignmentExpression	data [ l ++ ] = 0x4c		3517531	0		=			
ANR	3518007	ArrayIndexing	data [ l ++ ]		3517531	0					
ANR	3518008	Identifier	data		3517531	0					
ANR	3518009	PostIncDecOperationExpression	l ++		3517531	1					
ANR	3518010	Identifier	l		3517531	0					
ANR	3518011	IncDec	++		3517531	1					
ANR	3518012	PrimaryExpression	0x4c		3517531	1					
ANR	3518013	ElseStatement	else		3517531	0					
ANR	3518014	IfStatement	"if ( ! strcmp ( cmov , ""ge"" ) || ! strcmp ( cmov , ""nl"" ) )"		3517531	0					
ANR	3518015	Condition	"! strcmp ( cmov , ""ge"" ) || ! strcmp ( cmov , ""nl"" )"	837:19:22473:22528	3517531	0	True				
ANR	3518016	OrExpression	"! strcmp ( cmov , ""ge"" ) || ! strcmp ( cmov , ""nl"" )"		3517531	0		||			
ANR	3518017	UnaryOperationExpression	"! strcmp ( cmov , ""ge"" )"		3517531	0					
ANR	3518018	UnaryOperator	!		3517531	0					
ANR	3518019	CallExpression	"strcmp ( cmov , ""ge"" )"		3517531	1					
ANR	3518020	Callee	strcmp		3517531	0					
ANR	3518021	Identifier	strcmp		3517531	0					
ANR	3518022	ArgumentList	cmov		3517531	1					
ANR	3518023	Argument	cmov		3517531	0					
ANR	3518024	Identifier	cmov		3517531	0					
ANR	3518025	Argument	"""ge"""		3517531	1					
ANR	3518026	PrimaryExpression	"""ge"""		3517531	0					
ANR	3518027	UnaryOperationExpression	"! strcmp ( cmov , ""nl"" )"		3517531	1					
ANR	3518028	UnaryOperator	!		3517531	0					
ANR	3518029	CallExpression	"strcmp ( cmov , ""nl"" )"		3517531	1					
ANR	3518030	Callee	strcmp		3517531	0					
ANR	3518031	Identifier	strcmp		3517531	0					
ANR	3518032	ArgumentList	cmov		3517531	1					
ANR	3518033	Argument	cmov		3517531	0					
ANR	3518034	Identifier	cmov		3517531	0					
ANR	3518035	Argument	"""nl"""		3517531	1					
ANR	3518036	PrimaryExpression	"""nl"""		3517531	0					
ANR	3518037	CompoundStatement		52:34:1470:1470	3517531	1					
ANR	3518038	ExpressionStatement	data [ l ++ ] = 0x4d	839:2:22535:22552	3517531	0	True				
ANR	3518039	AssignmentExpression	data [ l ++ ] = 0x4d		3517531	0		=			
ANR	3518040	ArrayIndexing	data [ l ++ ]		3517531	0					
ANR	3518041	Identifier	data		3517531	0					
ANR	3518042	PostIncDecOperationExpression	l ++		3517531	1					
ANR	3518043	Identifier	l		3517531	0					
ANR	3518044	IncDec	++		3517531	1					
ANR	3518045	PrimaryExpression	0x4d		3517531	1					
ANR	3518046	ElseStatement	else		3517531	0					
ANR	3518047	IfStatement	"if ( ! strcmp ( cmov , ""le"" ) || ! strcmp ( cmov , ""ng"" ) )"		3517531	0					
ANR	3518048	Condition	"! strcmp ( cmov , ""le"" ) || ! strcmp ( cmov , ""ng"" )"	840:19:22573:22628	3517531	0	True				
ANR	3518049	OrExpression	"! strcmp ( cmov , ""le"" ) || ! strcmp ( cmov , ""ng"" )"		3517531	0		||			
ANR	3518050	UnaryOperationExpression	"! strcmp ( cmov , ""le"" )"		3517531	0					
ANR	3518051	UnaryOperator	!		3517531	0					
ANR	3518052	CallExpression	"strcmp ( cmov , ""le"" )"		3517531	1					
ANR	3518053	Callee	strcmp		3517531	0					
ANR	3518054	Identifier	strcmp		3517531	0					
ANR	3518055	ArgumentList	cmov		3517531	1					
ANR	3518056	Argument	cmov		3517531	0					
ANR	3518057	Identifier	cmov		3517531	0					
ANR	3518058	Argument	"""le"""		3517531	1					
ANR	3518059	PrimaryExpression	"""le"""		3517531	0					
ANR	3518060	UnaryOperationExpression	"! strcmp ( cmov , ""ng"" )"		3517531	1					
ANR	3518061	UnaryOperator	!		3517531	0					
ANR	3518062	CallExpression	"strcmp ( cmov , ""ng"" )"		3517531	1					
ANR	3518063	Callee	strcmp		3517531	0					
ANR	3518064	Identifier	strcmp		3517531	0					
ANR	3518065	ArgumentList	cmov		3517531	1					
ANR	3518066	Argument	cmov		3517531	0					
ANR	3518067	Identifier	cmov		3517531	0					
ANR	3518068	Argument	"""ng"""		3517531	1					
ANR	3518069	PrimaryExpression	"""ng"""		3517531	0					
ANR	3518070	CompoundStatement		55:34:1570:1570	3517531	1					
ANR	3518071	ExpressionStatement	data [ l ++ ] = 0x4e	842:2:22635:22652	3517531	0	True				
ANR	3518072	AssignmentExpression	data [ l ++ ] = 0x4e		3517531	0		=			
ANR	3518073	ArrayIndexing	data [ l ++ ]		3517531	0					
ANR	3518074	Identifier	data		3517531	0					
ANR	3518075	PostIncDecOperationExpression	l ++		3517531	1					
ANR	3518076	Identifier	l		3517531	0					
ANR	3518077	IncDec	++		3517531	1					
ANR	3518078	PrimaryExpression	0x4e		3517531	1					
ANR	3518079	ElseStatement	else		3517531	0					
ANR	3518080	IfStatement	"if ( ! strcmp ( cmov , ""g"" ) || ! strcmp ( cmov , ""nle"" ) )"		3517531	0					
ANR	3518081	Condition	"! strcmp ( cmov , ""g"" ) || ! strcmp ( cmov , ""nle"" )"	843:19:22673:22728	3517531	0	True				
ANR	3518082	OrExpression	"! strcmp ( cmov , ""g"" ) || ! strcmp ( cmov , ""nle"" )"		3517531	0		||			
ANR	3518083	UnaryOperationExpression	"! strcmp ( cmov , ""g"" )"		3517531	0					
ANR	3518084	UnaryOperator	!		3517531	0					
ANR	3518085	CallExpression	"strcmp ( cmov , ""g"" )"		3517531	1					
ANR	3518086	Callee	strcmp		3517531	0					
ANR	3518087	Identifier	strcmp		3517531	0					
ANR	3518088	ArgumentList	cmov		3517531	1					
ANR	3518089	Argument	cmov		3517531	0					
ANR	3518090	Identifier	cmov		3517531	0					
ANR	3518091	Argument	"""g"""		3517531	1					
ANR	3518092	PrimaryExpression	"""g"""		3517531	0					
ANR	3518093	UnaryOperationExpression	"! strcmp ( cmov , ""nle"" )"		3517531	1					
ANR	3518094	UnaryOperator	!		3517531	0					
ANR	3518095	CallExpression	"strcmp ( cmov , ""nle"" )"		3517531	1					
ANR	3518096	Callee	strcmp		3517531	0					
ANR	3518097	Identifier	strcmp		3517531	0					
ANR	3518098	ArgumentList	cmov		3517531	1					
ANR	3518099	Argument	cmov		3517531	0					
ANR	3518100	Identifier	cmov		3517531	0					
ANR	3518101	Argument	"""nle"""		3517531	1					
ANR	3518102	PrimaryExpression	"""nle"""		3517531	0					
ANR	3518103	CompoundStatement		58:35:1670:1670	3517531	1					
ANR	3518104	ExpressionStatement	data [ l ++ ] = 0x4f	845:2:22735:22752	3517531	0	True				
ANR	3518105	AssignmentExpression	data [ l ++ ] = 0x4f		3517531	0		=			
ANR	3518106	ArrayIndexing	data [ l ++ ]		3517531	0					
ANR	3518107	Identifier	data		3517531	0					
ANR	3518108	PostIncDecOperationExpression	l ++		3517531	1					
ANR	3518109	Identifier	l		3517531	0					
ANR	3518110	IncDec	++		3517531	1					
ANR	3518111	PrimaryExpression	0x4f		3517531	1					
ANR	3518112	IfStatement	if ( op -> operands [ 0 ] . type & OT_REGALL )		3517531	8					
ANR	3518113	Condition	op -> operands [ 0 ] . type & OT_REGALL	848:5:22770:22801	3517531	0	True				
ANR	3518114	BitAndExpression	op -> operands [ 0 ] . type & OT_REGALL		3517531	0		&			
ANR	3518115	MemberAccess	op -> operands [ 0 ] . type		3517531	0					
ANR	3518116	ArrayIndexing	op -> operands [ 0 ]		3517531	0					
ANR	3518117	PtrMemberAccess	op -> operands		3517531	0					
ANR	3518118	Identifier	op		3517531	0					
ANR	3518119	Identifier	operands		3517531	1					
ANR	3518120	PrimaryExpression	0		3517531	1					
ANR	3518121	Identifier	type		3517531	1					
ANR	3518122	Identifier	OT_REGALL		3517531	1					
ANR	3518123	CompoundStatement		62:39:1743:1743	3517531	1					
ANR	3518124	IfStatement	if ( op -> operands [ 1 ] . type & OT_MEMORY )		3517531	0					
ANR	3518125	Condition	op -> operands [ 1 ] . type & OT_MEMORY	849:6:22812:22843	3517531	0	True				
ANR	3518126	BitAndExpression	op -> operands [ 1 ] . type & OT_MEMORY		3517531	0		&			
ANR	3518127	MemberAccess	op -> operands [ 1 ] . type		3517531	0					
ANR	3518128	ArrayIndexing	op -> operands [ 1 ]		3517531	0					
ANR	3518129	PtrMemberAccess	op -> operands		3517531	0					
ANR	3518130	Identifier	op		3517531	0					
ANR	3518131	Identifier	operands		3517531	1					
ANR	3518132	PrimaryExpression	1		3517531	1					
ANR	3518133	Identifier	type		3517531	1					
ANR	3518134	Identifier	OT_MEMORY		3517531	1					
ANR	3518135	CompoundStatement		63:40:1785:1785	3517531	1					
ANR	3518136	IfStatement	if ( op -> operands [ 1 ] . scale [ 0 ] > 1 )		3517531	0					
ANR	3518137	Condition	op -> operands [ 1 ] . scale [ 0 ] > 1	850:7:22855:22882	3517531	0	True				
ANR	3518138	RelationalExpression	op -> operands [ 1 ] . scale [ 0 ] > 1		3517531	0		>			
ANR	3518139	ArrayIndexing	op -> operands [ 1 ] . scale [ 0 ]		3517531	0					
ANR	3518140	MemberAccess	op -> operands [ 1 ] . scale		3517531	0					
ANR	3518141	ArrayIndexing	op -> operands [ 1 ]		3517531	0					
ANR	3518142	PtrMemberAccess	op -> operands		3517531	0					
ANR	3518143	Identifier	op		3517531	0					
ANR	3518144	Identifier	operands		3517531	1					
ANR	3518145	PrimaryExpression	1		3517531	1					
ANR	3518146	Identifier	scale		3517531	1					
ANR	3518147	PrimaryExpression	0		3517531	1					
ANR	3518148	PrimaryExpression	1		3517531	1					
ANR	3518149	CompoundStatement		64:37:1824:1824	3517531	1					
ANR	3518150	IfStatement	if ( op -> operands [ 1 ] . regs [ 1 ] != X86R_UNDEFINED )		3517531	0					
ANR	3518151	Condition	op -> operands [ 1 ] . regs [ 1 ] != X86R_UNDEFINED	851:8:22895:22935	3517531	0	True				
ANR	3518152	EqualityExpression	op -> operands [ 1 ] . regs [ 1 ] != X86R_UNDEFINED		3517531	0		!=			
ANR	3518153	ArrayIndexing	op -> operands [ 1 ] . regs [ 1 ]		3517531	0					
ANR	3518154	MemberAccess	op -> operands [ 1 ] . regs		3517531	0					
ANR	3518155	ArrayIndexing	op -> operands [ 1 ]		3517531	0					
ANR	3518156	PtrMemberAccess	op -> operands		3517531	0					
ANR	3518157	Identifier	op		3517531	0					
ANR	3518158	Identifier	operands		3517531	1					
ANR	3518159	PrimaryExpression	1		3517531	1					
ANR	3518160	Identifier	regs		3517531	1					
ANR	3518161	PrimaryExpression	1		3517531	1					
ANR	3518162	Identifier	X86R_UNDEFINED		3517531	1					
ANR	3518163	CompoundStatement		65:51:1877:1877	3517531	1					
ANR	3518164	ExpressionStatement	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | 4	852:5:22945:22985	3517531	0	True				
ANR	3518165	AssignmentExpression	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | 4		3517531	0		=			
ANR	3518166	ArrayIndexing	data [ l ++ ]		3517531	0					
ANR	3518167	Identifier	data		3517531	0					
ANR	3518168	PostIncDecOperationExpression	l ++		3517531	1					
ANR	3518169	Identifier	l		3517531	0					
ANR	3518170	IncDec	++		3517531	1					
ANR	3518171	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | 4		3517531	1		|			
ANR	3518172	ShiftExpression	op -> operands [ 0 ] . reg << 3		3517531	0		<<			
ANR	3518173	MemberAccess	op -> operands [ 0 ] . reg		3517531	0					
ANR	3518174	ArrayIndexing	op -> operands [ 0 ]		3517531	0					
ANR	3518175	PtrMemberAccess	op -> operands		3517531	0					
ANR	3518176	Identifier	op		3517531	0					
ANR	3518177	Identifier	operands		3517531	1					
ANR	3518178	PrimaryExpression	0		3517531	1					
ANR	3518179	Identifier	reg		3517531	1					
ANR	3518180	PrimaryExpression	3		3517531	1					
ANR	3518181	PrimaryExpression	4		3517531	1					
ANR	3518182	ExpressionStatement	data [ l ++ ] = getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 6 | op -> operands [ 1 ] . regs [ 0 ] << 3 | op -> operands [ 1 ] . regs [ 1 ]	853:5:22992:23219	3517531	1	True				
ANR	3518183	AssignmentExpression	data [ l ++ ] = getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 6 | op -> operands [ 1 ] . regs [ 0 ] << 3 | op -> operands [ 1 ] . regs [ 1 ]		3517531	0		=			
ANR	3518184	ArrayIndexing	data [ l ++ ]		3517531	0					
ANR	3518185	Identifier	data		3517531	0					
ANR	3518186	PostIncDecOperationExpression	l ++		3517531	1					
ANR	3518187	Identifier	l		3517531	0					
ANR	3518188	IncDec	++		3517531	1					
ANR	3518189	InclusiveOrExpression	getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 6 | op -> operands [ 1 ] . regs [ 0 ] << 3 | op -> operands [ 1 ] . regs [ 1 ]		3517531	1		|			
ANR	3518190	ShiftExpression	getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 6		3517531	0		<<			
ANR	3518191	CallExpression	getsib ( op -> operands [ 1 ] . scale [ 0 ] )		3517531	0					
ANR	3518192	Callee	getsib		3517531	0					
ANR	3518193	Identifier	getsib		3517531	0					
ANR	3518194	ArgumentList	op -> operands [ 1 ] . scale [ 0 ]		3517531	1					
ANR	3518195	Argument	op -> operands [ 1 ] . scale [ 0 ]		3517531	0					
ANR	3518196	ArrayIndexing	op -> operands [ 1 ] . scale [ 0 ]		3517531	0					
ANR	3518197	MemberAccess	op -> operands [ 1 ] . scale		3517531	0					
ANR	3518198	ArrayIndexing	op -> operands [ 1 ]		3517531	0					
ANR	3518199	PtrMemberAccess	op -> operands		3517531	0					
ANR	3518200	Identifier	op		3517531	0					
ANR	3518201	Identifier	operands		3517531	1					
ANR	3518202	PrimaryExpression	1		3517531	1					
ANR	3518203	Identifier	scale		3517531	1					
ANR	3518204	PrimaryExpression	0		3517531	1					
ANR	3518205	PrimaryExpression	6		3517531	1					
ANR	3518206	InclusiveOrExpression	op -> operands [ 1 ] . regs [ 0 ] << 3 | op -> operands [ 1 ] . regs [ 1 ]		3517531	1		|			
ANR	3518207	ShiftExpression	op -> operands [ 1 ] . regs [ 0 ] << 3		3517531	0		<<			
ANR	3518208	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3517531	0					
ANR	3518209	MemberAccess	op -> operands [ 1 ] . regs		3517531	0					
ANR	3518210	ArrayIndexing	op -> operands [ 1 ]		3517531	0					
ANR	3518211	PtrMemberAccess	op -> operands		3517531	0					
ANR	3518212	Identifier	op		3517531	0					
ANR	3518213	Identifier	operands		3517531	1					
ANR	3518214	PrimaryExpression	1		3517531	1					
ANR	3518215	Identifier	regs		3517531	1					
ANR	3518216	PrimaryExpression	0		3517531	1					
ANR	3518217	PrimaryExpression	3		3517531	1					
ANR	3518218	ArrayIndexing	op -> operands [ 1 ] . regs [ 1 ]		3517531	1					
ANR	3518219	MemberAccess	op -> operands [ 1 ] . regs		3517531	0					
ANR	3518220	ArrayIndexing	op -> operands [ 1 ]		3517531	0					
ANR	3518221	PtrMemberAccess	op -> operands		3517531	0					
ANR	3518222	Identifier	op		3517531	0					
ANR	3518223	Identifier	operands		3517531	1					
ANR	3518224	PrimaryExpression	1		3517531	1					
ANR	3518225	Identifier	regs		3517531	1					
ANR	3518226	PrimaryExpression	1		3517531	1					
ANR	3518227	ReturnStatement	return l ;	856:5:23226:23234	3517531	2	True				
ANR	3518228	Identifier	l		3517531	0					
ANR	3518229	ExpressionStatement	offset = op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign	858:4:23246:23307	3517531	1	True				
ANR	3518230	AssignmentExpression	offset = op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign		3517531	0		=			
ANR	3518231	Identifier	offset		3517531	0					
ANR	3518232	MultiplicativeExpression	op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign		3517531	1		*			
ANR	3518233	MemberAccess	op -> operands [ 1 ] . offset		3517531	0					
ANR	3518234	ArrayIndexing	op -> operands [ 1 ]		3517531	0					
ANR	3518235	PtrMemberAccess	op -> operands		3517531	0					
ANR	3518236	Identifier	op		3517531	0					
ANR	3518237	Identifier	operands		3517531	1					
ANR	3518238	PrimaryExpression	1		3517531	1					
ANR	3518239	Identifier	offset		3517531	1					
ANR	3518240	MemberAccess	op -> operands [ 1 ] . offset_sign		3517531	1					
ANR	3518241	ArrayIndexing	op -> operands [ 1 ]		3517531	0					
ANR	3518242	PtrMemberAccess	op -> operands		3517531	0					
ANR	3518243	Identifier	op		3517531	0					
ANR	3518244	Identifier	operands		3517531	1					
ANR	3518245	PrimaryExpression	1		3517531	1					
ANR	3518246	Identifier	offset_sign		3517531	1					
ANR	3518247	IfStatement	if ( op -> operands [ 1 ] . scale [ 0 ] == 2 && offset )		3517531	2					
ANR	3518248	Condition	op -> operands [ 1 ] . scale [ 0 ] == 2 && offset	860:8:23318:23356	3517531	0	True				
ANR	3518249	AndExpression	op -> operands [ 1 ] . scale [ 0 ] == 2 && offset		3517531	0		&&			
ANR	3518250	EqualityExpression	op -> operands [ 1 ] . scale [ 0 ] == 2		3517531	0		==			
ANR	3518251	ArrayIndexing	op -> operands [ 1 ] . scale [ 0 ]		3517531	0					
ANR	3518252	MemberAccess	op -> operands [ 1 ] . scale		3517531	0					
ANR	3518253	ArrayIndexing	op -> operands [ 1 ]		3517531	0					
ANR	3518254	PtrMemberAccess	op -> operands		3517531	0					
ANR	3518255	Identifier	op		3517531	0					
ANR	3518256	Identifier	operands		3517531	1					
ANR	3518257	PrimaryExpression	1		3517531	1					
ANR	3518258	Identifier	scale		3517531	1					
ANR	3518259	PrimaryExpression	0		3517531	1					
ANR	3518260	PrimaryExpression	2		3517531	1					
ANR	3518261	Identifier	offset		3517531	1					
ANR	3518262	CompoundStatement		74:49:2298:2298	3517531	1					
ANR	3518263	ExpressionStatement	data [ l ++ ] = 0x40 | op -> operands [ 0 ] . reg << 3 | 4	861:5:23366:23413	3517531	0	True				
ANR	3518264	AssignmentExpression	data [ l ++ ] = 0x40 | op -> operands [ 0 ] . reg << 3 | 4		3517531	0		=			
ANR	3518265	ArrayIndexing	data [ l ++ ]		3517531	0					
ANR	3518266	Identifier	data		3517531	0					
ANR	3518267	PostIncDecOperationExpression	l ++		3517531	1					
ANR	3518268	Identifier	l		3517531	0					
ANR	3518269	IncDec	++		3517531	1					
ANR	3518270	InclusiveOrExpression	0x40 | op -> operands [ 0 ] . reg << 3 | 4		3517531	1		|			
ANR	3518271	PrimaryExpression	0x40		3517531	0					
ANR	3518272	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | 4		3517531	1		|			
ANR	3518273	ShiftExpression	op -> operands [ 0 ] . reg << 3		3517531	0		<<			
ANR	3518274	MemberAccess	op -> operands [ 0 ] . reg		3517531	0					
ANR	3518275	ArrayIndexing	op -> operands [ 0 ]		3517531	0					
ANR	3518276	PtrMemberAccess	op -> operands		3517531	0					
ANR	3518277	Identifier	op		3517531	0					
ANR	3518278	Identifier	operands		3517531	1					
ANR	3518279	PrimaryExpression	0		3517531	1					
ANR	3518280	Identifier	reg		3517531	1					
ANR	3518281	PrimaryExpression	3		3517531	1					
ANR	3518282	PrimaryExpression	4		3517531	1					
ANR	3518283	ElseStatement	else		3517531	0					
ANR	3518284	CompoundStatement		76:11:2376:2376	3517531	0					
ANR	3518285	ExpressionStatement	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | 4	863:5:23444:23484	3517531	0	True				
ANR	3518286	AssignmentExpression	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | 4		3517531	0		=			
ANR	3518287	ArrayIndexing	data [ l ++ ]		3517531	0					
ANR	3518288	Identifier	data		3517531	0					
ANR	3518289	PostIncDecOperationExpression	l ++		3517531	1					
ANR	3518290	Identifier	l		3517531	0					
ANR	3518291	IncDec	++		3517531	1					
ANR	3518292	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | 4		3517531	1		|			
ANR	3518293	ShiftExpression	op -> operands [ 0 ] . reg << 3		3517531	0		<<			
ANR	3518294	MemberAccess	op -> operands [ 0 ] . reg		3517531	0					
ANR	3518295	ArrayIndexing	op -> operands [ 0 ]		3517531	0					
ANR	3518296	PtrMemberAccess	op -> operands		3517531	0					
ANR	3518297	Identifier	op		3517531	0					
ANR	3518298	Identifier	operands		3517531	1					
ANR	3518299	PrimaryExpression	0		3517531	1					
ANR	3518300	Identifier	reg		3517531	1					
ANR	3518301	PrimaryExpression	3		3517531	1					
ANR	3518302	PrimaryExpression	4		3517531	1					
ANR	3518303	IfStatement	if ( op -> operands [ 1 ] . scale [ 0 ] == 2 )		3517531	3					
ANR	3518304	Condition	op -> operands [ 1 ] . scale [ 0 ] == 2	867:8:23513:23541	3517531	0	True				
ANR	3518305	EqualityExpression	op -> operands [ 1 ] . scale [ 0 ] == 2		3517531	0		==			
ANR	3518306	ArrayIndexing	op -> operands [ 1 ] . scale [ 0 ]		3517531	0					
ANR	3518307	MemberAccess	op -> operands [ 1 ] . scale		3517531	0					
ANR	3518308	ArrayIndexing	op -> operands [ 1 ]		3517531	0					
ANR	3518309	PtrMemberAccess	op -> operands		3517531	0					
ANR	3518310	Identifier	op		3517531	0					
ANR	3518311	Identifier	operands		3517531	1					
ANR	3518312	PrimaryExpression	1		3517531	1					
ANR	3518313	Identifier	scale		3517531	1					
ANR	3518314	PrimaryExpression	0		3517531	1					
ANR	3518315	PrimaryExpression	2		3517531	1					
ANR	3518316	CompoundStatement		81:39:2483:2483	3517531	1					
ANR	3518317	ExpressionStatement	data [ l ++ ] = op -> operands [ 1 ] . regs [ 0 ] << 3 | op -> operands [ 1 ] . regs [ 0 ]	868:5:23551:23617	3517531	0	True				
ANR	3518318	AssignmentExpression	data [ l ++ ] = op -> operands [ 1 ] . regs [ 0 ] << 3 | op -> operands [ 1 ] . regs [ 0 ]		3517531	0		=			
ANR	3518319	ArrayIndexing	data [ l ++ ]		3517531	0					
ANR	3518320	Identifier	data		3517531	0					
ANR	3518321	PostIncDecOperationExpression	l ++		3517531	1					
ANR	3518322	Identifier	l		3517531	0					
ANR	3518323	IncDec	++		3517531	1					
ANR	3518324	InclusiveOrExpression	op -> operands [ 1 ] . regs [ 0 ] << 3 | op -> operands [ 1 ] . regs [ 0 ]		3517531	1		|			
ANR	3518325	ShiftExpression	op -> operands [ 1 ] . regs [ 0 ] << 3		3517531	0		<<			
ANR	3518326	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3517531	0					
ANR	3518327	MemberAccess	op -> operands [ 1 ] . regs		3517531	0					
ANR	3518328	ArrayIndexing	op -> operands [ 1 ]		3517531	0					
ANR	3518329	PtrMemberAccess	op -> operands		3517531	0					
ANR	3518330	Identifier	op		3517531	0					
ANR	3518331	Identifier	operands		3517531	1					
ANR	3518332	PrimaryExpression	1		3517531	1					
ANR	3518333	Identifier	regs		3517531	1					
ANR	3518334	PrimaryExpression	0		3517531	1					
ANR	3518335	PrimaryExpression	3		3517531	1					
ANR	3518336	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3517531	1					
ANR	3518337	MemberAccess	op -> operands [ 1 ] . regs		3517531	0					
ANR	3518338	ArrayIndexing	op -> operands [ 1 ]		3517531	0					
ANR	3518339	PtrMemberAccess	op -> operands		3517531	0					
ANR	3518340	Identifier	op		3517531	0					
ANR	3518341	Identifier	operands		3517531	1					
ANR	3518342	PrimaryExpression	1		3517531	1					
ANR	3518343	Identifier	regs		3517531	1					
ANR	3518344	PrimaryExpression	0		3517531	1					
ANR	3518345	ElseStatement	else		3517531	0					
ANR	3518346	CompoundStatement		84:11:2570:2570	3517531	0					
ANR	3518347	ExpressionStatement	data [ l ++ ] = getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 6 | op -> operands [ 1 ] . regs [ 0 ] << 3 | 5	871:5:23638:23783	3517531	0	True				
ANR	3518348	AssignmentExpression	data [ l ++ ] = getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 6 | op -> operands [ 1 ] . regs [ 0 ] << 3 | 5		3517531	0		=			
ANR	3518349	ArrayIndexing	data [ l ++ ]		3517531	0					
ANR	3518350	Identifier	data		3517531	0					
ANR	3518351	PostIncDecOperationExpression	l ++		3517531	1					
ANR	3518352	Identifier	l		3517531	0					
ANR	3518353	IncDec	++		3517531	1					
ANR	3518354	InclusiveOrExpression	getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 6 | op -> operands [ 1 ] . regs [ 0 ] << 3 | 5		3517531	1		|			
ANR	3518355	ShiftExpression	getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 6		3517531	0		<<			
ANR	3518356	CallExpression	getsib ( op -> operands [ 1 ] . scale [ 0 ] )		3517531	0					
ANR	3518357	Callee	getsib		3517531	0					
ANR	3518358	Identifier	getsib		3517531	0					
ANR	3518359	ArgumentList	op -> operands [ 1 ] . scale [ 0 ]		3517531	1					
ANR	3518360	Argument	op -> operands [ 1 ] . scale [ 0 ]		3517531	0					
ANR	3518361	ArrayIndexing	op -> operands [ 1 ] . scale [ 0 ]		3517531	0					
ANR	3518362	MemberAccess	op -> operands [ 1 ] . scale		3517531	0					
ANR	3518363	ArrayIndexing	op -> operands [ 1 ]		3517531	0					
ANR	3518364	PtrMemberAccess	op -> operands		3517531	0					
ANR	3518365	Identifier	op		3517531	0					
ANR	3518366	Identifier	operands		3517531	1					
ANR	3518367	PrimaryExpression	1		3517531	1					
ANR	3518368	Identifier	scale		3517531	1					
ANR	3518369	PrimaryExpression	0		3517531	1					
ANR	3518370	PrimaryExpression	6		3517531	1					
ANR	3518371	InclusiveOrExpression	op -> operands [ 1 ] . regs [ 0 ] << 3 | 5		3517531	1		|			
ANR	3518372	ShiftExpression	op -> operands [ 1 ] . regs [ 0 ] << 3		3517531	0		<<			
ANR	3518373	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3517531	0					
ANR	3518374	MemberAccess	op -> operands [ 1 ] . regs		3517531	0					
ANR	3518375	ArrayIndexing	op -> operands [ 1 ]		3517531	0					
ANR	3518376	PtrMemberAccess	op -> operands		3517531	0					
ANR	3518377	Identifier	op		3517531	0					
ANR	3518378	Identifier	operands		3517531	1					
ANR	3518379	PrimaryExpression	1		3517531	1					
ANR	3518380	Identifier	regs		3517531	1					
ANR	3518381	PrimaryExpression	0		3517531	1					
ANR	3518382	PrimaryExpression	3		3517531	1					
ANR	3518383	PrimaryExpression	5		3517531	1					
ANR	3518384	IfStatement	if ( offset )		3517531	4					
ANR	3518385	Condition	offset	875:8:23800:23805	3517531	0	True				
ANR	3518386	Identifier	offset		3517531	0					
ANR	3518387	CompoundStatement		89:16:2747:2747	3517531	1					
ANR	3518388	ExpressionStatement	data [ l ++ ] = offset	876:5:23815:23833	3517531	0	True				
ANR	3518389	AssignmentExpression	data [ l ++ ] = offset		3517531	0		=			
ANR	3518390	ArrayIndexing	data [ l ++ ]		3517531	0					
ANR	3518391	Identifier	data		3517531	0					
ANR	3518392	PostIncDecOperationExpression	l ++		3517531	1					
ANR	3518393	Identifier	l		3517531	0					
ANR	3518394	IncDec	++		3517531	1					
ANR	3518395	Identifier	offset		3517531	1					
ANR	3518396	IfStatement	if ( offset < ST8_MIN || offset > ST8_MAX )		3517531	1					
ANR	3518397	Condition	offset < ST8_MIN || offset > ST8_MAX	877:9:23844:23879	3517531	0	True				
ANR	3518398	OrExpression	offset < ST8_MIN || offset > ST8_MAX		3517531	0		||			
ANR	3518399	RelationalExpression	offset < ST8_MIN		3517531	0		<			
ANR	3518400	Identifier	offset		3517531	0					
ANR	3518401	Identifier	ST8_MIN		3517531	1					
ANR	3518402	RelationalExpression	offset > ST8_MAX		3517531	1		>			
ANR	3518403	Identifier	offset		3517531	0					
ANR	3518404	Identifier	ST8_MAX		3517531	1					
ANR	3518405	CompoundStatement		91:47:2821:2821	3517531	1					
ANR	3518406	ExpressionStatement	data [ l ++ ] = offset >> 8	878:6:23890:23913	3517531	0	True				
ANR	3518407	AssignmentExpression	data [ l ++ ] = offset >> 8		3517531	0		=			
ANR	3518408	ArrayIndexing	data [ l ++ ]		3517531	0					
ANR	3518409	Identifier	data		3517531	0					
ANR	3518410	PostIncDecOperationExpression	l ++		3517531	1					
ANR	3518411	Identifier	l		3517531	0					
ANR	3518412	IncDec	++		3517531	1					
ANR	3518413	ShiftExpression	offset >> 8		3517531	1		>>			
ANR	3518414	Identifier	offset		3517531	0					
ANR	3518415	PrimaryExpression	8		3517531	1					
ANR	3518416	ExpressionStatement	data [ l ++ ] = offset >> 16	879:6:23921:23945	3517531	1	True				
ANR	3518417	AssignmentExpression	data [ l ++ ] = offset >> 16		3517531	0		=			
ANR	3518418	ArrayIndexing	data [ l ++ ]		3517531	0					
ANR	3518419	Identifier	data		3517531	0					
ANR	3518420	PostIncDecOperationExpression	l ++		3517531	1					
ANR	3518421	Identifier	l		3517531	0					
ANR	3518422	IncDec	++		3517531	1					
ANR	3518423	ShiftExpression	offset >> 16		3517531	1		>>			
ANR	3518424	Identifier	offset		3517531	0					
ANR	3518425	PrimaryExpression	16		3517531	1					
ANR	3518426	ExpressionStatement	data [ l ++ ] = offset >> 24	880:6:23953:23977	3517531	2	True				
ANR	3518427	AssignmentExpression	data [ l ++ ] = offset >> 24		3517531	0		=			
ANR	3518428	ArrayIndexing	data [ l ++ ]		3517531	0					
ANR	3518429	Identifier	data		3517531	0					
ANR	3518430	PostIncDecOperationExpression	l ++		3517531	1					
ANR	3518431	Identifier	l		3517531	0					
ANR	3518432	IncDec	++		3517531	1					
ANR	3518433	ShiftExpression	offset >> 24		3517531	1		>>			
ANR	3518434	Identifier	offset		3517531	0					
ANR	3518435	PrimaryExpression	24		3517531	1					
ANR	3518436	ReturnStatement	return l ;	883:4:23996:24004	3517531	5	True				
ANR	3518437	Identifier	l		3517531	0					
ANR	3518438	IfStatement	if ( op -> operands [ 1 ] . regs [ 1 ] != X86R_UNDEFINED )		3517531	1					
ANR	3518439	Condition	op -> operands [ 1 ] . regs [ 1 ] != X86R_UNDEFINED	885:7:24018:24058	3517531	0	True				
ANR	3518440	EqualityExpression	op -> operands [ 1 ] . regs [ 1 ] != X86R_UNDEFINED		3517531	0		!=			
ANR	3518441	ArrayIndexing	op -> operands [ 1 ] . regs [ 1 ]		3517531	0					
ANR	3518442	MemberAccess	op -> operands [ 1 ] . regs		3517531	0					
ANR	3518443	ArrayIndexing	op -> operands [ 1 ]		3517531	0					
ANR	3518444	PtrMemberAccess	op -> operands		3517531	0					
ANR	3518445	Identifier	op		3517531	0					
ANR	3518446	Identifier	operands		3517531	1					
ANR	3518447	PrimaryExpression	1		3517531	1					
ANR	3518448	Identifier	regs		3517531	1					
ANR	3518449	PrimaryExpression	1		3517531	1					
ANR	3518450	Identifier	X86R_UNDEFINED		3517531	1					
ANR	3518451	CompoundStatement		99:50:3000:3000	3517531	1					
ANR	3518452	ExpressionStatement	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | 4	886:4:24067:24107	3517531	0	True				
ANR	3518453	AssignmentExpression	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | 4		3517531	0		=			
ANR	3518454	ArrayIndexing	data [ l ++ ]		3517531	0					
ANR	3518455	Identifier	data		3517531	0					
ANR	3518456	PostIncDecOperationExpression	l ++		3517531	1					
ANR	3518457	Identifier	l		3517531	0					
ANR	3518458	IncDec	++		3517531	1					
ANR	3518459	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | 4		3517531	1		|			
ANR	3518460	ShiftExpression	op -> operands [ 0 ] . reg << 3		3517531	0		<<			
ANR	3518461	MemberAccess	op -> operands [ 0 ] . reg		3517531	0					
ANR	3518462	ArrayIndexing	op -> operands [ 0 ]		3517531	0					
ANR	3518463	PtrMemberAccess	op -> operands		3517531	0					
ANR	3518464	Identifier	op		3517531	0					
ANR	3518465	Identifier	operands		3517531	1					
ANR	3518466	PrimaryExpression	0		3517531	1					
ANR	3518467	Identifier	reg		3517531	1					
ANR	3518468	PrimaryExpression	3		3517531	1					
ANR	3518469	PrimaryExpression	4		3517531	1					
ANR	3518470	ExpressionStatement	data [ l ++ ] = op -> operands [ 1 ] . regs [ 1 ] << 3 | op -> operands [ 1 ] . regs [ 0 ]	887:4:24113:24179	3517531	1	True				
ANR	3518471	AssignmentExpression	data [ l ++ ] = op -> operands [ 1 ] . regs [ 1 ] << 3 | op -> operands [ 1 ] . regs [ 0 ]		3517531	0		=			
ANR	3518472	ArrayIndexing	data [ l ++ ]		3517531	0					
ANR	3518473	Identifier	data		3517531	0					
ANR	3518474	PostIncDecOperationExpression	l ++		3517531	1					
ANR	3518475	Identifier	l		3517531	0					
ANR	3518476	IncDec	++		3517531	1					
ANR	3518477	InclusiveOrExpression	op -> operands [ 1 ] . regs [ 1 ] << 3 | op -> operands [ 1 ] . regs [ 0 ]		3517531	1		|			
ANR	3518478	ShiftExpression	op -> operands [ 1 ] . regs [ 1 ] << 3		3517531	0		<<			
ANR	3518479	ArrayIndexing	op -> operands [ 1 ] . regs [ 1 ]		3517531	0					
ANR	3518480	MemberAccess	op -> operands [ 1 ] . regs		3517531	0					
ANR	3518481	ArrayIndexing	op -> operands [ 1 ]		3517531	0					
ANR	3518482	PtrMemberAccess	op -> operands		3517531	0					
ANR	3518483	Identifier	op		3517531	0					
ANR	3518484	Identifier	operands		3517531	1					
ANR	3518485	PrimaryExpression	1		3517531	1					
ANR	3518486	Identifier	regs		3517531	1					
ANR	3518487	PrimaryExpression	1		3517531	1					
ANR	3518488	PrimaryExpression	3		3517531	1					
ANR	3518489	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3517531	1					
ANR	3518490	MemberAccess	op -> operands [ 1 ] . regs		3517531	0					
ANR	3518491	ArrayIndexing	op -> operands [ 1 ]		3517531	0					
ANR	3518492	PtrMemberAccess	op -> operands		3517531	0					
ANR	3518493	Identifier	op		3517531	0					
ANR	3518494	Identifier	operands		3517531	1					
ANR	3518495	PrimaryExpression	1		3517531	1					
ANR	3518496	Identifier	regs		3517531	1					
ANR	3518497	PrimaryExpression	0		3517531	1					
ANR	3518498	ReturnStatement	return l ;	888:4:24185:24193	3517531	2	True				
ANR	3518499	Identifier	l		3517531	0					
ANR	3518500	ExpressionStatement	offset = op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign	891:3:24204:24265	3517531	2	True				
ANR	3518501	AssignmentExpression	offset = op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign		3517531	0		=			
ANR	3518502	Identifier	offset		3517531	0					
ANR	3518503	MultiplicativeExpression	op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign		3517531	1		*			
ANR	3518504	MemberAccess	op -> operands [ 1 ] . offset		3517531	0					
ANR	3518505	ArrayIndexing	op -> operands [ 1 ]		3517531	0					
ANR	3518506	PtrMemberAccess	op -> operands		3517531	0					
ANR	3518507	Identifier	op		3517531	0					
ANR	3518508	Identifier	operands		3517531	1					
ANR	3518509	PrimaryExpression	1		3517531	1					
ANR	3518510	Identifier	offset		3517531	1					
ANR	3518511	MemberAccess	op -> operands [ 1 ] . offset_sign		3517531	1					
ANR	3518512	ArrayIndexing	op -> operands [ 1 ]		3517531	0					
ANR	3518513	PtrMemberAccess	op -> operands		3517531	0					
ANR	3518514	Identifier	op		3517531	0					
ANR	3518515	Identifier	operands		3517531	1					
ANR	3518516	PrimaryExpression	1		3517531	1					
ANR	3518517	Identifier	offset_sign		3517531	1					
ANR	3518518	IfStatement	if ( op -> operands [ 1 ] . offset || op -> operands [ 1 ] . regs [ 0 ] == X86R_EBP )		3517531	3					
ANR	3518519	Condition	op -> operands [ 1 ] . offset || op -> operands [ 1 ] . regs [ 0 ] == X86R_EBP	892:7:24274:24334	3517531	0	True				
ANR	3518520	OrExpression	op -> operands [ 1 ] . offset || op -> operands [ 1 ] . regs [ 0 ] == X86R_EBP		3517531	0		||			
ANR	3518521	MemberAccess	op -> operands [ 1 ] . offset		3517531	0					
ANR	3518522	ArrayIndexing	op -> operands [ 1 ]		3517531	0					
ANR	3518523	PtrMemberAccess	op -> operands		3517531	0					
ANR	3518524	Identifier	op		3517531	0					
ANR	3518525	Identifier	operands		3517531	1					
ANR	3518526	PrimaryExpression	1		3517531	1					
ANR	3518527	Identifier	offset		3517531	1					
ANR	3518528	EqualityExpression	op -> operands [ 1 ] . regs [ 0 ] == X86R_EBP		3517531	1		==			
ANR	3518529	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3517531	0					
ANR	3518530	MemberAccess	op -> operands [ 1 ] . regs		3517531	0					
ANR	3518531	ArrayIndexing	op -> operands [ 1 ]		3517531	0					
ANR	3518532	PtrMemberAccess	op -> operands		3517531	0					
ANR	3518533	Identifier	op		3517531	0					
ANR	3518534	Identifier	operands		3517531	1					
ANR	3518535	PrimaryExpression	1		3517531	1					
ANR	3518536	Identifier	regs		3517531	1					
ANR	3518537	PrimaryExpression	0		3517531	1					
ANR	3518538	Identifier	X86R_EBP		3517531	1					
ANR	3518539	CompoundStatement		106:70:3276:3276	3517531	1					
ANR	3518540	ExpressionStatement	mod_byte = 1	893:4:24343:24355	3517531	0	True				
ANR	3518541	AssignmentExpression	mod_byte = 1		3517531	0		=			
ANR	3518542	Identifier	mod_byte		3517531	0					
ANR	3518543	PrimaryExpression	1		3517531	1					
ANR	3518544	IfStatement	if ( offset < ST8_MIN || offset > ST8_MAX )		3517531	4					
ANR	3518545	Condition	offset < ST8_MIN || offset > ST8_MAX	895:7:24369:24404	3517531	0	True				
ANR	3518546	OrExpression	offset < ST8_MIN || offset > ST8_MAX		3517531	0		||			
ANR	3518547	RelationalExpression	offset < ST8_MIN		3517531	0		<			
ANR	3518548	Identifier	offset		3517531	0					
ANR	3518549	Identifier	ST8_MIN		3517531	1					
ANR	3518550	RelationalExpression	offset > ST8_MAX		3517531	1		>			
ANR	3518551	Identifier	offset		3517531	0					
ANR	3518552	Identifier	ST8_MAX		3517531	1					
ANR	3518553	CompoundStatement		109:45:3346:3346	3517531	1					
ANR	3518554	ExpressionStatement	mod_byte = 2	896:4:24413:24425	3517531	0	True				
ANR	3518555	AssignmentExpression	mod_byte = 2		3517531	0		=			
ANR	3518556	Identifier	mod_byte		3517531	0					
ANR	3518557	PrimaryExpression	2		3517531	1					
ANR	3518558	ExpressionStatement	data [ l ++ ] = mod_byte << 6 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]	899:3:24436:24514	3517531	5	True				
ANR	3518559	AssignmentExpression	data [ l ++ ] = mod_byte << 6 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		3517531	0		=			
ANR	3518560	ArrayIndexing	data [ l ++ ]		3517531	0					
ANR	3518561	Identifier	data		3517531	0					
ANR	3518562	PostIncDecOperationExpression	l ++		3517531	1					
ANR	3518563	Identifier	l		3517531	0					
ANR	3518564	IncDec	++		3517531	1					
ANR	3518565	InclusiveOrExpression	mod_byte << 6 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		3517531	1		|			
ANR	3518566	ShiftExpression	mod_byte << 6		3517531	0		<<			
ANR	3518567	Identifier	mod_byte		3517531	0					
ANR	3518568	PrimaryExpression	6		3517531	1					
ANR	3518569	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		3517531	1		|			
ANR	3518570	ShiftExpression	op -> operands [ 0 ] . reg << 3		3517531	0		<<			
ANR	3518571	MemberAccess	op -> operands [ 0 ] . reg		3517531	0					
ANR	3518572	ArrayIndexing	op -> operands [ 0 ]		3517531	0					
ANR	3518573	PtrMemberAccess	op -> operands		3517531	0					
ANR	3518574	Identifier	op		3517531	0					
ANR	3518575	Identifier	operands		3517531	1					
ANR	3518576	PrimaryExpression	0		3517531	1					
ANR	3518577	Identifier	reg		3517531	1					
ANR	3518578	PrimaryExpression	3		3517531	1					
ANR	3518579	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3517531	1					
ANR	3518580	MemberAccess	op -> operands [ 1 ] . regs		3517531	0					
ANR	3518581	ArrayIndexing	op -> operands [ 1 ]		3517531	0					
ANR	3518582	PtrMemberAccess	op -> operands		3517531	0					
ANR	3518583	Identifier	op		3517531	0					
ANR	3518584	Identifier	operands		3517531	1					
ANR	3518585	PrimaryExpression	1		3517531	1					
ANR	3518586	Identifier	regs		3517531	1					
ANR	3518587	PrimaryExpression	0		3517531	1					
ANR	3518588	IfStatement	if ( mod_byte )		3517531	6					
ANR	3518589	Condition	mod_byte	901:7:24524:24531	3517531	0	True				
ANR	3518590	Identifier	mod_byte		3517531	0					
ANR	3518591	CompoundStatement		115:17:3473:3473	3517531	1					
ANR	3518592	ExpressionStatement	data [ l ++ ] = offset	902:4:24540:24558	3517531	0	True				
ANR	3518593	AssignmentExpression	data [ l ++ ] = offset		3517531	0		=			
ANR	3518594	ArrayIndexing	data [ l ++ ]		3517531	0					
ANR	3518595	Identifier	data		3517531	0					
ANR	3518596	PostIncDecOperationExpression	l ++		3517531	1					
ANR	3518597	Identifier	l		3517531	0					
ANR	3518598	IncDec	++		3517531	1					
ANR	3518599	Identifier	offset		3517531	1					
ANR	3518600	IfStatement	if ( mod_byte == 2 )		3517531	1					
ANR	3518601	Condition	mod_byte == 2	903:8:24568:24580	3517531	0	True				
ANR	3518602	EqualityExpression	mod_byte == 2		3517531	0		==			
ANR	3518603	Identifier	mod_byte		3517531	0					
ANR	3518604	PrimaryExpression	2		3517531	1					
ANR	3518605	CompoundStatement		117:23:3522:3522	3517531	1					
ANR	3518606	ExpressionStatement	data [ l ++ ] = offset >> 8	904:5:24590:24613	3517531	0	True				
ANR	3518607	AssignmentExpression	data [ l ++ ] = offset >> 8		3517531	0		=			
ANR	3518608	ArrayIndexing	data [ l ++ ]		3517531	0					
ANR	3518609	Identifier	data		3517531	0					
ANR	3518610	PostIncDecOperationExpression	l ++		3517531	1					
ANR	3518611	Identifier	l		3517531	0					
ANR	3518612	IncDec	++		3517531	1					
ANR	3518613	ShiftExpression	offset >> 8		3517531	1		>>			
ANR	3518614	Identifier	offset		3517531	0					
ANR	3518615	PrimaryExpression	8		3517531	1					
ANR	3518616	ExpressionStatement	data [ l ++ ] = offset >> 16	905:5:24620:24644	3517531	1	True				
ANR	3518617	AssignmentExpression	data [ l ++ ] = offset >> 16		3517531	0		=			
ANR	3518618	ArrayIndexing	data [ l ++ ]		3517531	0					
ANR	3518619	Identifier	data		3517531	0					
ANR	3518620	PostIncDecOperationExpression	l ++		3517531	1					
ANR	3518621	Identifier	l		3517531	0					
ANR	3518622	IncDec	++		3517531	1					
ANR	3518623	ShiftExpression	offset >> 16		3517531	1		>>			
ANR	3518624	Identifier	offset		3517531	0					
ANR	3518625	PrimaryExpression	16		3517531	1					
ANR	3518626	ExpressionStatement	data [ l ++ ] = offset >> 24	906:5:24651:24675	3517531	2	True				
ANR	3518627	AssignmentExpression	data [ l ++ ] = offset >> 24		3517531	0		=			
ANR	3518628	ArrayIndexing	data [ l ++ ]		3517531	0					
ANR	3518629	Identifier	data		3517531	0					
ANR	3518630	PostIncDecOperationExpression	l ++		3517531	1					
ANR	3518631	Identifier	l		3517531	0					
ANR	3518632	IncDec	++		3517531	1					
ANR	3518633	ShiftExpression	offset >> 24		3517531	1		>>			
ANR	3518634	Identifier	offset		3517531	0					
ANR	3518635	PrimaryExpression	24		3517531	1					
ANR	3518636	ElseStatement	else		3517531	0					
ANR	3518637	CompoundStatement		123:9:3636:3636	3517531	0					
ANR	3518638	ExpressionStatement	data [ l ++ ] = 0xc0 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . reg	910:3:24702:24767	3517531	0	True				
ANR	3518639	AssignmentExpression	data [ l ++ ] = 0xc0 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . reg		3517531	0		=			
ANR	3518640	ArrayIndexing	data [ l ++ ]		3517531	0					
ANR	3518641	Identifier	data		3517531	0					
ANR	3518642	PostIncDecOperationExpression	l ++		3517531	1					
ANR	3518643	Identifier	l		3517531	0					
ANR	3518644	IncDec	++		3517531	1					
ANR	3518645	InclusiveOrExpression	0xc0 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . reg		3517531	1		|			
ANR	3518646	PrimaryExpression	0xc0		3517531	0					
ANR	3518647	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . reg		3517531	1		|			
ANR	3518648	ShiftExpression	op -> operands [ 0 ] . reg << 3		3517531	0		<<			
ANR	3518649	MemberAccess	op -> operands [ 0 ] . reg		3517531	0					
ANR	3518650	ArrayIndexing	op -> operands [ 0 ]		3517531	0					
ANR	3518651	PtrMemberAccess	op -> operands		3517531	0					
ANR	3518652	Identifier	op		3517531	0					
ANR	3518653	Identifier	operands		3517531	1					
ANR	3518654	PrimaryExpression	0		3517531	1					
ANR	3518655	Identifier	reg		3517531	1					
ANR	3518656	PrimaryExpression	3		3517531	1					
ANR	3518657	MemberAccess	op -> operands [ 1 ] . reg		3517531	1					
ANR	3518658	ArrayIndexing	op -> operands [ 1 ]		3517531	0					
ANR	3518659	PtrMemberAccess	op -> operands		3517531	0					
ANR	3518660	Identifier	op		3517531	0					
ANR	3518661	Identifier	operands		3517531	1					
ANR	3518662	PrimaryExpression	1		3517531	1					
ANR	3518663	Identifier	reg		3517531	1					
ANR	3518664	ReturnStatement	return l ;	914:1:24778:24786	3517531	9	True				
ANR	3518665	Identifier	l		3517531	0					
ANR	3518666	ReturnType	static int		3517531	1					
ANR	3518667	Identifier	opcmov		3517531	2					
ANR	3518668	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3517531	3					
ANR	3518669	Parameter	RAsm * a	787:18:21022:21028	3517531	0	True				
ANR	3518670	ParameterType	RAsm *		3517531	0					
ANR	3518671	Identifier	a		3517531	1					
ANR	3518672	Parameter	ut8 * data	787:27:21031:21039	3517531	1	True				
ANR	3518673	ParameterType	ut8 *		3517531	0					
ANR	3518674	Identifier	data		3517531	1					
ANR	3518675	Parameter	const Opcode * op	787:38:21042:21057	3517531	2	True				
ANR	3518676	ParameterType	const Opcode *		3517531	0					
ANR	3518677	Identifier	op		3517531	1					
ANR	3518678	CFGEntryNode	ENTRY		3517531		True				
ANR	3518679	CFGExitNode	EXIT		3517531		True				
ANR	3518680	Symbol	ST8_MAX		3517531						
ANR	3518681	Symbol	data		3517531						
ANR	3518682	Symbol	* op		3517531						
ANR	3518683	Symbol	op -> mnemonic		3517531						
ANR	3518684	Symbol	X86R_EBP		3517531						
ANR	3518685	Symbol	* * op		3517531						
ANR	3518686	Symbol	* op -> operands [ 1 ] . regs		3517531						
ANR	3518687	Symbol	* op -> operands		3517531						
ANR	3518688	Symbol	op -> operands [ 1 ] . regs		3517531						
ANR	3518689	Symbol	ST8_MIN		3517531						
ANR	3518690	Symbol	op -> operands [ 0 ] . type		3517531						
ANR	3518691	Symbol	op -> operands [ 0 ] . reg		3517531						
ANR	3518692	Symbol	op -> operands [ 1 ] . offset_sign		3517531						
ANR	3518693	Symbol	* op -> operands [ 1 ] . scale		3517531						
ANR	3518694	Symbol	OT_MEMORY		3517531						
ANR	3518695	Symbol	strcmp		3517531						
ANR	3518696	Symbol	a		3517531						
ANR	3518697	Symbol	op		3517531						
ANR	3518698	Symbol	OT_CONSTANT		3517531						
ANR	3518699	Symbol	op -> operands [ 1 ] . scale		3517531						
ANR	3518700	Symbol	mod_byte		3517531						
ANR	3518701	Symbol	offset		3517531						
ANR	3518702	Symbol	op -> operands [ 1 ] . reg		3517531						
ANR	3518703	Symbol	op -> operands [ 1 ] . offset		3517531						
ANR	3518704	Symbol	* * op -> operands		3517531						
ANR	3518705	Symbol	l		3517531						
ANR	3518706	Symbol	OT_REGALL		3517531						
ANR	3518707	Symbol	X86R_UNDEFINED		3517531						
ANR	3518708	Symbol	op -> operands [ 1 ] . type		3517531						
ANR	3518709	Symbol	* * * op		3517531						
ANR	3518710	Symbol	op -> operands		3517531						
ANR	3518711	Symbol	* data		3517531						
ANR	3518712	Symbol	getsib		3517531						
ANR	3518713	Symbol	cmov		3517531						
ANR	3518714	Function	opmovx	917:0:24791:25372							
ANR	3518715	FunctionDef	"opmovx (RAsm * a , ut8 * data , const Opcode * op)"		3518714	0					
ANR	3518716	CompoundStatement		917:56:24847:25372	3518714	0					
ANR	3518717	ExpressionStatement	is_valid_registers ( op )	918:1:24850:24873	3518714	0	True				
ANR	3518718	CallExpression	is_valid_registers ( op )		3518714	0					
ANR	3518719	Callee	is_valid_registers		3518714	0					
ANR	3518720	Identifier	is_valid_registers		3518714	0					
ANR	3518721	ArgumentList	op		3518714	1					
ANR	3518722	Argument	op		3518714	0					
ANR	3518723	Identifier	op		3518714	0					
ANR	3518724	IdentifierDeclStatement	int l = 0 ;	919:1:24876:24885	3518714	1	True				
ANR	3518725	IdentifierDecl	l = 0		3518714	0					
ANR	3518726	IdentifierDeclType	int		3518714	0					
ANR	3518727	Identifier	l		3518714	1					
ANR	3518728	AssignmentExpression	l = 0		3518714	2		=			
ANR	3518729	Identifier	l		3518714	0					
ANR	3518730	PrimaryExpression	0		3518714	1					
ANR	3518731	IdentifierDeclStatement	int word = 0 ;	920:1:24888:24900	3518714	2	True				
ANR	3518732	IdentifierDecl	word = 0		3518714	0					
ANR	3518733	IdentifierDeclType	int		3518714	0					
ANR	3518734	Identifier	word		3518714	1					
ANR	3518735	AssignmentExpression	word = 0		3518714	2		=			
ANR	3518736	Identifier	word		3518714	0					
ANR	3518737	PrimaryExpression	0		3518714	1					
ANR	3518738	IdentifierDeclStatement	char * movx = op -> mnemonic + 3 ;	921:1:24903:24932	3518714	3	True				
ANR	3518739	IdentifierDecl	* movx = op -> mnemonic + 3		3518714	0					
ANR	3518740	IdentifierDeclType	char *		3518714	0					
ANR	3518741	Identifier	movx		3518714	1					
ANR	3518742	AssignmentExpression	* movx = op -> mnemonic + 3		3518714	2		=			
ANR	3518743	Identifier	movx		3518714	0					
ANR	3518744	AdditiveExpression	op -> mnemonic + 3		3518714	1		+			
ANR	3518745	PtrMemberAccess	op -> mnemonic		3518714	0					
ANR	3518746	Identifier	op		3518714	0					
ANR	3518747	Identifier	mnemonic		3518714	1					
ANR	3518748	PrimaryExpression	3		3518714	1					
ANR	3518749	IfStatement	if ( ! ( op -> operands [ 0 ] . type & OT_REGTYPE && op -> operands [ 1 ] . type & OT_MEMORY ) )		3518714	4					
ANR	3518750	Condition	! ( op -> operands [ 0 ] . type & OT_REGTYPE && op -> operands [ 1 ] . type & OT_MEMORY )	923:5:24940:25011	3518714	0	True				
ANR	3518751	UnaryOperationExpression	! ( op -> operands [ 0 ] . type & OT_REGTYPE && op -> operands [ 1 ] . type & OT_MEMORY )		3518714	0					
ANR	3518752	UnaryOperator	!		3518714	0					
ANR	3518753	AndExpression	op -> operands [ 0 ] . type & OT_REGTYPE && op -> operands [ 1 ] . type & OT_MEMORY		3518714	1		&&			
ANR	3518754	BitAndExpression	op -> operands [ 0 ] . type & OT_REGTYPE		3518714	0		&			
ANR	3518755	MemberAccess	op -> operands [ 0 ] . type		3518714	0					
ANR	3518756	ArrayIndexing	op -> operands [ 0 ]		3518714	0					
ANR	3518757	PtrMemberAccess	op -> operands		3518714	0					
ANR	3518758	Identifier	op		3518714	0					
ANR	3518759	Identifier	operands		3518714	1					
ANR	3518760	PrimaryExpression	0		3518714	1					
ANR	3518761	Identifier	type		3518714	1					
ANR	3518762	Identifier	OT_REGTYPE		3518714	1					
ANR	3518763	BitAndExpression	op -> operands [ 1 ] . type & OT_MEMORY		3518714	1		&			
ANR	3518764	MemberAccess	op -> operands [ 1 ] . type		3518714	0					
ANR	3518765	ArrayIndexing	op -> operands [ 1 ]		3518714	0					
ANR	3518766	PtrMemberAccess	op -> operands		3518714	0					
ANR	3518767	Identifier	op		3518714	0					
ANR	3518768	Identifier	operands		3518714	1					
ANR	3518769	PrimaryExpression	1		3518714	1					
ANR	3518770	Identifier	type		3518714	1					
ANR	3518771	Identifier	OT_MEMORY		3518714	1					
ANR	3518772	CompoundStatement		7:79:166:166	3518714	1					
ANR	3518773	ReturnStatement	return - 1 ;	924:2:25018:25027	3518714	0	True				
ANR	3518774	UnaryOperationExpression	- 1		3518714	0					
ANR	3518775	UnaryOperator	-		3518714	0					
ANR	3518776	PrimaryExpression	1		3518714	1					
ANR	3518777	IfStatement	if ( op -> operands [ 1 ] . type & OT_WORD )		3518714	5					
ANR	3518778	Condition	op -> operands [ 1 ] . type & OT_WORD	926:5:25037:25066	3518714	0	True				
ANR	3518779	BitAndExpression	op -> operands [ 1 ] . type & OT_WORD		3518714	0		&			
ANR	3518780	MemberAccess	op -> operands [ 1 ] . type		3518714	0					
ANR	3518781	ArrayIndexing	op -> operands [ 1 ]		3518714	0					
ANR	3518782	PtrMemberAccess	op -> operands		3518714	0					
ANR	3518783	Identifier	op		3518714	0					
ANR	3518784	Identifier	operands		3518714	1					
ANR	3518785	PrimaryExpression	1		3518714	1					
ANR	3518786	Identifier	type		3518714	1					
ANR	3518787	Identifier	OT_WORD		3518714	1					
ANR	3518788	CompoundStatement		10:37:221:221	3518714	1					
ANR	3518789	ExpressionStatement	word = 1	927:2:25073:25081	3518714	0	True				
ANR	3518790	AssignmentExpression	word = 1		3518714	0		=			
ANR	3518791	Identifier	word		3518714	0					
ANR	3518792	PrimaryExpression	1		3518714	1					
ANR	3518793	ExpressionStatement	data [ l ++ ] = 0x0f	930:1:25088:25104	3518714	6	True				
ANR	3518794	AssignmentExpression	data [ l ++ ] = 0x0f		3518714	0		=			
ANR	3518795	ArrayIndexing	data [ l ++ ]		3518714	0					
ANR	3518796	Identifier	data		3518714	0					
ANR	3518797	PostIncDecOperationExpression	l ++		3518714	1					
ANR	3518798	Identifier	l		3518714	0					
ANR	3518799	IncDec	++		3518714	1					
ANR	3518800	PrimaryExpression	0x0f		3518714	1					
ANR	3518801	IfStatement	"if ( ! strcmp ( movx , ""zx"" ) )"		3518714	7					
ANR	3518802	Condition	"! strcmp ( movx , ""zx"" )"	931:5:25111:25130	3518714	0	True				
ANR	3518803	UnaryOperationExpression	"! strcmp ( movx , ""zx"" )"		3518714	0					
ANR	3518804	UnaryOperator	!		3518714	0					
ANR	3518805	CallExpression	"strcmp ( movx , ""zx"" )"		3518714	1					
ANR	3518806	Callee	strcmp		3518714	0					
ANR	3518807	Identifier	strcmp		3518714	0					
ANR	3518808	ArgumentList	movx		3518714	1					
ANR	3518809	Argument	movx		3518714	0					
ANR	3518810	Identifier	movx		3518714	0					
ANR	3518811	Argument	"""zx"""		3518714	1					
ANR	3518812	PrimaryExpression	"""zx"""		3518714	0					
ANR	3518813	CompoundStatement		15:27:285:285	3518714	1					
ANR	3518814	ExpressionStatement	data [ l ++ ] = 0xb6 + word	932:2:25137:25160	3518714	0	True				
ANR	3518815	AssignmentExpression	data [ l ++ ] = 0xb6 + word		3518714	0		=			
ANR	3518816	ArrayIndexing	data [ l ++ ]		3518714	0					
ANR	3518817	Identifier	data		3518714	0					
ANR	3518818	PostIncDecOperationExpression	l ++		3518714	1					
ANR	3518819	Identifier	l		3518714	0					
ANR	3518820	IncDec	++		3518714	1					
ANR	3518821	AdditiveExpression	0xb6 + word		3518714	1		+			
ANR	3518822	PrimaryExpression	0xb6		3518714	0					
ANR	3518823	Identifier	word		3518714	1					
ANR	3518824	ElseStatement	else		3518714	0					
ANR	3518825	IfStatement	"if ( ! strcmp ( movx , ""sx"" ) )"		3518714	0					
ANR	3518826	Condition	"! strcmp ( movx , ""sx"" )"	933:12:25174:25193	3518714	0	True				
ANR	3518827	UnaryOperationExpression	"! strcmp ( movx , ""sx"" )"		3518714	0					
ANR	3518828	UnaryOperator	!		3518714	0					
ANR	3518829	CallExpression	"strcmp ( movx , ""sx"" )"		3518714	1					
ANR	3518830	Callee	strcmp		3518714	0					
ANR	3518831	Identifier	strcmp		3518714	0					
ANR	3518832	ArgumentList	movx		3518714	1					
ANR	3518833	Argument	movx		3518714	0					
ANR	3518834	Identifier	movx		3518714	0					
ANR	3518835	Argument	"""sx"""		3518714	1					
ANR	3518836	PrimaryExpression	"""sx"""		3518714	0					
ANR	3518837	CompoundStatement		17:34:348:348	3518714	1					
ANR	3518838	ExpressionStatement	data [ l ++ ] = 0xbe + word	934:2:25200:25223	3518714	0	True				
ANR	3518839	AssignmentExpression	data [ l ++ ] = 0xbe + word		3518714	0		=			
ANR	3518840	ArrayIndexing	data [ l ++ ]		3518714	0					
ANR	3518841	Identifier	data		3518714	0					
ANR	3518842	PostIncDecOperationExpression	l ++		3518714	1					
ANR	3518843	Identifier	l		3518714	0					
ANR	3518844	IncDec	++		3518714	1					
ANR	3518845	AdditiveExpression	0xbe + word		3518714	1		+			
ANR	3518846	PrimaryExpression	0xbe		3518714	0					
ANR	3518847	Identifier	word		3518714	1					
ANR	3518848	ExpressionStatement	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]	936:1:25229:25291	3518714	8	True				
ANR	3518849	AssignmentExpression	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		3518714	0		=			
ANR	3518850	ArrayIndexing	data [ l ++ ]		3518714	0					
ANR	3518851	Identifier	data		3518714	0					
ANR	3518852	PostIncDecOperationExpression	l ++		3518714	1					
ANR	3518853	Identifier	l		3518714	0					
ANR	3518854	IncDec	++		3518714	1					
ANR	3518855	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		3518714	1		|			
ANR	3518856	ShiftExpression	op -> operands [ 0 ] . reg << 3		3518714	0		<<			
ANR	3518857	MemberAccess	op -> operands [ 0 ] . reg		3518714	0					
ANR	3518858	ArrayIndexing	op -> operands [ 0 ]		3518714	0					
ANR	3518859	PtrMemberAccess	op -> operands		3518714	0					
ANR	3518860	Identifier	op		3518714	0					
ANR	3518861	Identifier	operands		3518714	1					
ANR	3518862	PrimaryExpression	0		3518714	1					
ANR	3518863	Identifier	reg		3518714	1					
ANR	3518864	PrimaryExpression	3		3518714	1					
ANR	3518865	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3518714	1					
ANR	3518866	MemberAccess	op -> operands [ 1 ] . regs		3518714	0					
ANR	3518867	ArrayIndexing	op -> operands [ 1 ]		3518714	0					
ANR	3518868	PtrMemberAccess	op -> operands		3518714	0					
ANR	3518869	Identifier	op		3518714	0					
ANR	3518870	Identifier	operands		3518714	1					
ANR	3518871	PrimaryExpression	1		3518714	1					
ANR	3518872	Identifier	regs		3518714	1					
ANR	3518873	PrimaryExpression	0		3518714	1					
ANR	3518874	IfStatement	if ( op -> operands [ 1 ] . regs [ 0 ] == X86R_ESP )		3518714	9					
ANR	3518875	Condition	op -> operands [ 1 ] . regs [ 0 ] == X86R_ESP	937:5:25298:25332	3518714	0	True				
ANR	3518876	EqualityExpression	op -> operands [ 1 ] . regs [ 0 ] == X86R_ESP		3518714	0		==			
ANR	3518877	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3518714	0					
ANR	3518878	MemberAccess	op -> operands [ 1 ] . regs		3518714	0					
ANR	3518879	ArrayIndexing	op -> operands [ 1 ]		3518714	0					
ANR	3518880	PtrMemberAccess	op -> operands		3518714	0					
ANR	3518881	Identifier	op		3518714	0					
ANR	3518882	Identifier	operands		3518714	1					
ANR	3518883	PrimaryExpression	1		3518714	1					
ANR	3518884	Identifier	regs		3518714	1					
ANR	3518885	PrimaryExpression	0		3518714	1					
ANR	3518886	Identifier	X86R_ESP		3518714	1					
ANR	3518887	CompoundStatement		21:42:487:487	3518714	1					
ANR	3518888	ExpressionStatement	data [ l ++ ] = 0x24	938:2:25339:25355	3518714	0	True				
ANR	3518889	AssignmentExpression	data [ l ++ ] = 0x24		3518714	0		=			
ANR	3518890	ArrayIndexing	data [ l ++ ]		3518714	0					
ANR	3518891	Identifier	data		3518714	0					
ANR	3518892	PostIncDecOperationExpression	l ++		3518714	1					
ANR	3518893	Identifier	l		3518714	0					
ANR	3518894	IncDec	++		3518714	1					
ANR	3518895	PrimaryExpression	0x24		3518714	1					
ANR	3518896	ReturnStatement	return l ;	941:1:25362:25370	3518714	10	True				
ANR	3518897	Identifier	l		3518714	0					
ANR	3518898	ReturnType	static int		3518714	1					
ANR	3518899	Identifier	opmovx		3518714	2					
ANR	3518900	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3518714	3					
ANR	3518901	Parameter	RAsm * a	917:18:24809:24815	3518714	0	True				
ANR	3518902	ParameterType	RAsm *		3518714	0					
ANR	3518903	Identifier	a		3518714	1					
ANR	3518904	Parameter	ut8 * data	917:27:24818:24826	3518714	1	True				
ANR	3518905	ParameterType	ut8 *		3518714	0					
ANR	3518906	Identifier	data		3518714	1					
ANR	3518907	Parameter	const Opcode * op	917:38:24829:24844	3518714	2	True				
ANR	3518908	ParameterType	const Opcode *		3518714	0					
ANR	3518909	Identifier	op		3518714	1					
ANR	3518910	CFGEntryNode	ENTRY		3518714		True				
ANR	3518911	CFGExitNode	EXIT		3518714		True				
ANR	3518912	Symbol	strcmp		3518714						
ANR	3518913	Symbol	a		3518714						
ANR	3518914	Symbol	op		3518714						
ANR	3518915	Symbol	OT_WORD		3518714						
ANR	3518916	Symbol	data		3518714						
ANR	3518917	Symbol	* op		3518714						
ANR	3518918	Symbol	op -> mnemonic		3518714						
ANR	3518919	Symbol	X86R_ESP		3518714						
ANR	3518920	Symbol	* * op -> operands		3518714						
ANR	3518921	Symbol	l		3518714						
ANR	3518922	Symbol	* * op		3518714						
ANR	3518923	Symbol	OT_REGTYPE		3518714						
ANR	3518924	Symbol	* op -> operands [ 1 ] . regs		3518714						
ANR	3518925	Symbol	* op -> operands		3518714						
ANR	3518926	Symbol	op -> operands [ 1 ] . type		3518714						
ANR	3518927	Symbol	op -> operands [ 1 ] . regs		3518714						
ANR	3518928	Symbol	movx		3518714						
ANR	3518929	Symbol	op -> operands [ 0 ] . type		3518714						
ANR	3518930	Symbol	op -> operands [ 0 ] . reg		3518714						
ANR	3518931	Symbol	* * * op		3518714						
ANR	3518932	Symbol	op -> operands		3518714						
ANR	3518933	Symbol	word		3518714						
ANR	3518934	Symbol	OT_MEMORY		3518714						
ANR	3518935	Symbol	* data		3518714						
ANR	3518936	Function	opaam	944:0:25375:25689							
ANR	3518937	FunctionDef	"opaam (RAsm * a , ut8 * data , const Opcode * op)"		3518936	0					
ANR	3518938	CompoundStatement		944:55:25430:25689	3518936	0					
ANR	3518939	ExpressionStatement	is_valid_registers ( op )	945:1:25433:25456	3518936	0	True				
ANR	3518940	CallExpression	is_valid_registers ( op )		3518936	0					
ANR	3518941	Callee	is_valid_registers		3518936	0					
ANR	3518942	Identifier	is_valid_registers		3518936	0					
ANR	3518943	ArgumentList	op		3518936	1					
ANR	3518944	Argument	op		3518936	0					
ANR	3518945	Identifier	op		3518936	0					
ANR	3518946	IdentifierDeclStatement	int l = 0 ;	946:1:25459:25468	3518936	1	True				
ANR	3518947	IdentifierDecl	l = 0		3518936	0					
ANR	3518948	IdentifierDeclType	int		3518936	0					
ANR	3518949	Identifier	l		3518936	1					
ANR	3518950	AssignmentExpression	l = 0		3518936	2		=			
ANR	3518951	Identifier	l		3518936	0					
ANR	3518952	PrimaryExpression	0		3518936	1					
ANR	3518953	IdentifierDeclStatement	int immediate = op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign ;	947:1:25471:25535	3518936	2	True				
ANR	3518954	IdentifierDecl	immediate = op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign		3518936	0					
ANR	3518955	IdentifierDeclType	int		3518936	0					
ANR	3518956	Identifier	immediate		3518936	1					
ANR	3518957	AssignmentExpression	immediate = op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign		3518936	2		=			
ANR	3518958	Identifier	immediate		3518936	0					
ANR	3518959	MultiplicativeExpression	op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign		3518936	1		*			
ANR	3518960	MemberAccess	op -> operands [ 0 ] . immediate		3518936	0					
ANR	3518961	ArrayIndexing	op -> operands [ 0 ]		3518936	0					
ANR	3518962	PtrMemberAccess	op -> operands		3518936	0					
ANR	3518963	Identifier	op		3518936	0					
ANR	3518964	Identifier	operands		3518936	1					
ANR	3518965	PrimaryExpression	0		3518936	1					
ANR	3518966	Identifier	immediate		3518936	1					
ANR	3518967	MemberAccess	op -> operands [ 0 ] . sign		3518936	1					
ANR	3518968	ArrayIndexing	op -> operands [ 0 ]		3518936	0					
ANR	3518969	PtrMemberAccess	op -> operands		3518936	0					
ANR	3518970	Identifier	op		3518936	0					
ANR	3518971	Identifier	operands		3518936	1					
ANR	3518972	PrimaryExpression	0		3518936	1					
ANR	3518973	Identifier	sign		3518936	1					
ANR	3518974	ExpressionStatement	data [ l ++ ] = 0xd4	948:1:25538:25554	3518936	3	True				
ANR	3518975	AssignmentExpression	data [ l ++ ] = 0xd4		3518936	0		=			
ANR	3518976	ArrayIndexing	data [ l ++ ]		3518936	0					
ANR	3518977	Identifier	data		3518936	0					
ANR	3518978	PostIncDecOperationExpression	l ++		3518936	1					
ANR	3518979	Identifier	l		3518936	0					
ANR	3518980	IncDec	++		3518936	1					
ANR	3518981	PrimaryExpression	0xd4		3518936	1					
ANR	3518982	IfStatement	if ( immediate == 0 )		3518936	4					
ANR	3518983	Condition	immediate == 0	949:5:25561:25574	3518936	0	True				
ANR	3518984	EqualityExpression	immediate == 0		3518936	0		==			
ANR	3518985	Identifier	immediate		3518936	0					
ANR	3518986	PrimaryExpression	0		3518936	1					
ANR	3518987	CompoundStatement		6:21:146:146	3518936	1					
ANR	3518988	ExpressionStatement	data [ l ++ ] = 0x0a	950:2:25581:25597	3518936	0	True				
ANR	3518989	AssignmentExpression	data [ l ++ ] = 0x0a		3518936	0		=			
ANR	3518990	ArrayIndexing	data [ l ++ ]		3518936	0					
ANR	3518991	Identifier	data		3518936	0					
ANR	3518992	PostIncDecOperationExpression	l ++		3518936	1					
ANR	3518993	Identifier	l		3518936	0					
ANR	3518994	IncDec	++		3518936	1					
ANR	3518995	PrimaryExpression	0x0a		3518936	1					
ANR	3518996	ElseStatement	else		3518936	0					
ANR	3518997	IfStatement	if ( immediate < 256 && immediate > - 129 )		3518936	0					
ANR	3518998	Condition	immediate < 256 && immediate > - 129	951:12:25611:25645	3518936	0	True				
ANR	3518999	AndExpression	immediate < 256 && immediate > - 129		3518936	0		&&			
ANR	3519000	RelationalExpression	immediate < 256		3518936	0		<			
ANR	3519001	Identifier	immediate		3518936	0					
ANR	3519002	PrimaryExpression	256		3518936	1					
ANR	3519003	RelationalExpression	immediate > - 129		3518936	1		>			
ANR	3519004	Identifier	immediate		3518936	0					
ANR	3519005	UnaryOperationExpression	- 129		3518936	1					
ANR	3519006	UnaryOperator	-		3518936	0					
ANR	3519007	PrimaryExpression	129		3518936	1					
ANR	3519008	CompoundStatement		8:49:217:217	3518936	1					
ANR	3519009	ExpressionStatement	data [ l ++ ] = immediate	952:2:25652:25673	3518936	0	True				
ANR	3519010	AssignmentExpression	data [ l ++ ] = immediate		3518936	0		=			
ANR	3519011	ArrayIndexing	data [ l ++ ]		3518936	0					
ANR	3519012	Identifier	data		3518936	0					
ANR	3519013	PostIncDecOperationExpression	l ++		3518936	1					
ANR	3519014	Identifier	l		3518936	0					
ANR	3519015	IncDec	++		3518936	1					
ANR	3519016	Identifier	immediate		3518936	1					
ANR	3519017	ReturnStatement	return l ;	954:1:25679:25687	3518936	5	True				
ANR	3519018	Identifier	l		3518936	0					
ANR	3519019	ReturnType	static int		3518936	1					
ANR	3519020	Identifier	opaam		3518936	2					
ANR	3519021	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3518936	3					
ANR	3519022	Parameter	RAsm * a	944:17:25392:25398	3518936	0	True				
ANR	3519023	ParameterType	RAsm *		3518936	0					
ANR	3519024	Identifier	a		3518936	1					
ANR	3519025	Parameter	ut8 * data	944:26:25401:25409	3518936	1	True				
ANR	3519026	ParameterType	ut8 *		3518936	0					
ANR	3519027	Identifier	data		3518936	1					
ANR	3519028	Parameter	const Opcode * op	944:37:25412:25427	3518936	2	True				
ANR	3519029	ParameterType	const Opcode *		3518936	0					
ANR	3519030	Identifier	op		3518936	1					
ANR	3519031	CFGEntryNode	ENTRY		3518936		True				
ANR	3519032	CFGExitNode	EXIT		3518936		True				
ANR	3519033	Symbol	a		3518936						
ANR	3519034	Symbol	op		3518936						
ANR	3519035	Symbol	* op -> operands		3518936						
ANR	3519036	Symbol	data		3518936						
ANR	3519037	Symbol	* op		3518936						
ANR	3519038	Symbol	immediate		3518936						
ANR	3519039	Symbol	l		3518936						
ANR	3519040	Symbol	op -> operands		3518936						
ANR	3519041	Symbol	op -> operands [ 0 ] . immediate		3518936						
ANR	3519042	Symbol	* data		3518936						
ANR	3519043	Symbol	* * op		3518936						
ANR	3519044	Symbol	op -> operands [ 0 ] . sign		3518936						
ANR	3519045	Function	opdec	957:0:25692:29034							
ANR	3519046	FunctionDef	"opdec (RAsm * a , ut8 * data , const Opcode * op)"		3519045	0					
ANR	3519047	CompoundStatement		957:55:25747:29034	3519045	0					
ANR	3519048	IfStatement	if ( op -> operands [ 1 ] . type )		3519045	0					
ANR	3519049	Condition	op -> operands [ 1 ] . type	958:5:25754:25773	3519045	0	True				
ANR	3519050	MemberAccess	op -> operands [ 1 ] . type		3519045	0					
ANR	3519051	ArrayIndexing	op -> operands [ 1 ]		3519045	0					
ANR	3519052	PtrMemberAccess	op -> operands		3519045	0					
ANR	3519053	Identifier	op		3519045	0					
ANR	3519054	Identifier	operands		3519045	1					
ANR	3519055	PrimaryExpression	1		3519045	1					
ANR	3519056	Identifier	type		3519045	1					
ANR	3519057	CompoundStatement		2:27:28:28	3519045	1					
ANR	3519058	ExpressionStatement	"eprintf ( ""Error: Invalid operands\\n"" )"	959:2:25780:25817	3519045	0	True				
ANR	3519059	CallExpression	"eprintf ( ""Error: Invalid operands\\n"" )"		3519045	0					
ANR	3519060	Callee	eprintf		3519045	0					
ANR	3519061	Identifier	eprintf		3519045	0					
ANR	3519062	ArgumentList	"""Error: Invalid operands\\n"""		3519045	1					
ANR	3519063	Argument	"""Error: Invalid operands\\n"""		3519045	0					
ANR	3519064	PrimaryExpression	"""Error: Invalid operands\\n"""		3519045	0					
ANR	3519065	ReturnStatement	return - 1 ;	960:2:25821:25830	3519045	1	True				
ANR	3519066	UnaryOperationExpression	- 1		3519045	0					
ANR	3519067	UnaryOperator	-		3519045	0					
ANR	3519068	PrimaryExpression	1		3519045	1					
ANR	3519069	ExpressionStatement	is_valid_registers ( op )	962:1:25836:25859	3519045	1	True				
ANR	3519070	CallExpression	is_valid_registers ( op )		3519045	0					
ANR	3519071	Callee	is_valid_registers		3519045	0					
ANR	3519072	Identifier	is_valid_registers		3519045	0					
ANR	3519073	ArgumentList	op		3519045	1					
ANR	3519074	Argument	op		3519045	0					
ANR	3519075	Identifier	op		3519045	0					
ANR	3519076	IdentifierDeclStatement	int l = 0 ;	963:1:25862:25871	3519045	2	True				
ANR	3519077	IdentifierDecl	l = 0		3519045	0					
ANR	3519078	IdentifierDeclType	int		3519045	0					
ANR	3519079	Identifier	l		3519045	1					
ANR	3519080	AssignmentExpression	l = 0		3519045	2		=			
ANR	3519081	Identifier	l		3519045	0					
ANR	3519082	PrimaryExpression	0		3519045	1					
ANR	3519083	IdentifierDeclStatement	int size = op -> operands [ 0 ] . type & ALL_SIZE ;	964:1:25874:25916	3519045	3	True				
ANR	3519084	IdentifierDecl	size = op -> operands [ 0 ] . type & ALL_SIZE		3519045	0					
ANR	3519085	IdentifierDeclType	int		3519045	0					
ANR	3519086	Identifier	size		3519045	1					
ANR	3519087	AssignmentExpression	size = op -> operands [ 0 ] . type & ALL_SIZE		3519045	2		=			
ANR	3519088	Identifier	size		3519045	0					
ANR	3519089	BitAndExpression	op -> operands [ 0 ] . type & ALL_SIZE		3519045	1		&			
ANR	3519090	MemberAccess	op -> operands [ 0 ] . type		3519045	0					
ANR	3519091	ArrayIndexing	op -> operands [ 0 ]		3519045	0					
ANR	3519092	PtrMemberAccess	op -> operands		3519045	0					
ANR	3519093	Identifier	op		3519045	0					
ANR	3519094	Identifier	operands		3519045	1					
ANR	3519095	PrimaryExpression	0		3519045	1					
ANR	3519096	Identifier	type		3519045	1					
ANR	3519097	Identifier	ALL_SIZE		3519045	1					
ANR	3519098	IfStatement	if ( op -> operands [ 0 ] . explicit_size )		3519045	4					
ANR	3519099	Condition	op -> operands [ 0 ] . explicit_size	965:5:25923:25951	3519045	0	True				
ANR	3519100	MemberAccess	op -> operands [ 0 ] . explicit_size		3519045	0					
ANR	3519101	ArrayIndexing	op -> operands [ 0 ]		3519045	0					
ANR	3519102	PtrMemberAccess	op -> operands		3519045	0					
ANR	3519103	Identifier	op		3519045	0					
ANR	3519104	Identifier	operands		3519045	1					
ANR	3519105	PrimaryExpression	0		3519045	1					
ANR	3519106	Identifier	explicit_size		3519045	1					
ANR	3519107	CompoundStatement		9:36:206:206	3519045	1					
ANR	3519108	ExpressionStatement	size = op -> operands [ 0 ] . dest_size	966:2:25958:25990	3519045	0	True				
ANR	3519109	AssignmentExpression	size = op -> operands [ 0 ] . dest_size		3519045	0		=			
ANR	3519110	Identifier	size		3519045	0					
ANR	3519111	MemberAccess	op -> operands [ 0 ] . dest_size		3519045	1					
ANR	3519112	ArrayIndexing	op -> operands [ 0 ]		3519045	0					
ANR	3519113	PtrMemberAccess	op -> operands		3519045	0					
ANR	3519114	Identifier	op		3519045	0					
ANR	3519115	Identifier	operands		3519045	1					
ANR	3519116	PrimaryExpression	0		3519045	1					
ANR	3519117	Identifier	dest_size		3519045	1					
ANR	3519118	IfStatement	if ( size & OT_WORD )		3519045	5					
ANR	3519119	Condition	size & OT_WORD	969:5:26001:26014	3519045	0	True				
ANR	3519120	BitAndExpression	size & OT_WORD		3519045	0		&			
ANR	3519121	Identifier	size		3519045	0					
ANR	3519122	Identifier	OT_WORD		3519045	1					
ANR	3519123	CompoundStatement		13:21:269:269	3519045	1					
ANR	3519124	ExpressionStatement	data [ l ++ ] = 0x66	970:2:26021:26037	3519045	0	True				
ANR	3519125	AssignmentExpression	data [ l ++ ] = 0x66		3519045	0		=			
ANR	3519126	ArrayIndexing	data [ l ++ ]		3519045	0					
ANR	3519127	Identifier	data		3519045	0					
ANR	3519128	PostIncDecOperationExpression	l ++		3519045	1					
ANR	3519129	Identifier	l		3519045	0					
ANR	3519130	IncDec	++		3519045	1					
ANR	3519131	PrimaryExpression	0x66		3519045	1					
ANR	3519132	IdentifierDeclStatement	int rex = 1 << 6 ;	974:1:26058:26074	3519045	6	True				
ANR	3519133	IdentifierDecl	rex = 1 << 6		3519045	0					
ANR	3519134	IdentifierDeclType	int		3519045	0					
ANR	3519135	Identifier	rex		3519045	1					
ANR	3519136	AssignmentExpression	rex = 1 << 6		3519045	2		=			
ANR	3519137	Identifier	rex		3519045	0					
ANR	3519138	ShiftExpression	1 << 6		3519045	1		<<			
ANR	3519139	PrimaryExpression	1		3519045	0					
ANR	3519140	PrimaryExpression	6		3519045	1					
ANR	3519141	IdentifierDeclStatement	bool use_rex = false ;	975:1:26077:26097	3519045	7	True				
ANR	3519142	IdentifierDecl	use_rex = false		3519045	0					
ANR	3519143	IdentifierDeclType	bool		3519045	0					
ANR	3519144	Identifier	use_rex		3519045	1					
ANR	3519145	AssignmentExpression	use_rex = false		3519045	2		=			
ANR	3519146	Identifier	false		3519045	0					
ANR	3519147	Identifier	false		3519045	1					
ANR	3519148	IfStatement	if ( size & OT_QWORD )		3519045	8					
ANR	3519149	Condition	size & OT_QWORD	976:5:26104:26118	3519045	0	True				
ANR	3519150	BitAndExpression	size & OT_QWORD		3519045	0		&			
ANR	3519151	Identifier	size		3519045	0					
ANR	3519152	Identifier	OT_QWORD		3519045	1					
ANR	3519153	CompoundStatement		20:22:373:373	3519045	1					
ANR	3519154	ExpressionStatement	use_rex = true	977:2:26137:26151	3519045	0	True				
ANR	3519155	AssignmentExpression	use_rex = true		3519045	0		=			
ANR	3519156	Identifier	use_rex		3519045	0					
ANR	3519157	Identifier	true		3519045	1					
ANR	3519158	ExpressionStatement	rex |= 1 << 3	978:2:26155:26168	3519045	1	True				
ANR	3519159	AssignmentExpression	rex |= 1 << 3		3519045	0		|=			
ANR	3519160	Identifier	rex		3519045	0					
ANR	3519161	ShiftExpression	1 << 3		3519045	1		<<			
ANR	3519162	PrimaryExpression	1		3519045	0					
ANR	3519163	PrimaryExpression	3		3519045	1					
ANR	3519164	IfStatement	if ( op -> operands [ 0 ] . extended )		3519045	9					
ANR	3519165	Condition	op -> operands [ 0 ] . extended	980:5:26178:26201	3519045	0	True				
ANR	3519166	MemberAccess	op -> operands [ 0 ] . extended		3519045	0					
ANR	3519167	ArrayIndexing	op -> operands [ 0 ]		3519045	0					
ANR	3519168	PtrMemberAccess	op -> operands		3519045	0					
ANR	3519169	Identifier	op		3519045	0					
ANR	3519170	Identifier	operands		3519045	1					
ANR	3519171	PrimaryExpression	0		3519045	1					
ANR	3519172	Identifier	extended		3519045	1					
ANR	3519173	CompoundStatement		24:31:456:456	3519045	1					
ANR	3519174	ExpressionStatement	use_rex = true	981:2:26219:26233	3519045	0	True				
ANR	3519175	AssignmentExpression	use_rex = true		3519045	0		=			
ANR	3519176	Identifier	use_rex		3519045	0					
ANR	3519177	Identifier	true		3519045	1					
ANR	3519178	ExpressionStatement	rex |= 1	982:2:26237:26245	3519045	1	True				
ANR	3519179	AssignmentExpression	rex |= 1		3519045	0		|=			
ANR	3519180	Identifier	rex		3519045	0					
ANR	3519181	PrimaryExpression	1		3519045	1					
ANR	3519182	IdentifierDeclStatement	int opcode ;	986:1:26272:26282	3519045	10	True				
ANR	3519183	IdentifierDecl	opcode		3519045	0					
ANR	3519184	IdentifierDeclType	int		3519045	0					
ANR	3519185	Identifier	opcode		3519045	1					
ANR	3519186	IfStatement	if ( size & OT_BYTE )		3519045	11					
ANR	3519187	Condition	size & OT_BYTE	987:5:26289:26302	3519045	0	True				
ANR	3519188	BitAndExpression	size & OT_BYTE		3519045	0		&			
ANR	3519189	Identifier	size		3519045	0					
ANR	3519190	Identifier	OT_BYTE		3519045	1					
ANR	3519191	CompoundStatement		31:21:557:557	3519045	1					
ANR	3519192	ExpressionStatement	opcode = 0xfe	988:2:26309:26322	3519045	0	True				
ANR	3519193	AssignmentExpression	opcode = 0xfe		3519045	0		=			
ANR	3519194	Identifier	opcode		3519045	0					
ANR	3519195	PrimaryExpression	0xfe		3519045	1					
ANR	3519196	ElseStatement	else		3519045	0					
ANR	3519197	CompoundStatement		33:8:584:584	3519045	0					
ANR	3519198	ExpressionStatement	opcode = 0xff	990:2:26336:26349	3519045	0	True				
ANR	3519199	AssignmentExpression	opcode = 0xff		3519045	0		=			
ANR	3519200	Identifier	opcode		3519045	0					
ANR	3519201	PrimaryExpression	0xff		3519045	1					
ANR	3519202	IfStatement	if ( ! ( op -> operands [ 0 ] . type & OT_MEMORY ) )		3519045	12					
ANR	3519203	Condition	! ( op -> operands [ 0 ] . type & OT_MEMORY )	993:5:26360:26394	3519045	0	True				
ANR	3519204	UnaryOperationExpression	! ( op -> operands [ 0 ] . type & OT_MEMORY )		3519045	0					
ANR	3519205	UnaryOperator	!		3519045	0					
ANR	3519206	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3519045	1		&			
ANR	3519207	MemberAccess	op -> operands [ 0 ] . type		3519045	0					
ANR	3519208	ArrayIndexing	op -> operands [ 0 ]		3519045	0					
ANR	3519209	PtrMemberAccess	op -> operands		3519045	0					
ANR	3519210	Identifier	op		3519045	0					
ANR	3519211	Identifier	operands		3519045	1					
ANR	3519212	PrimaryExpression	0		3519045	1					
ANR	3519213	Identifier	type		3519045	1					
ANR	3519214	Identifier	OT_MEMORY		3519045	1					
ANR	3519215	CompoundStatement		37:42:649:649	3519045	1					
ANR	3519216	IfStatement	if ( use_rex )		3519045	0					
ANR	3519217	Condition	use_rex	994:6:26405:26411	3519045	0	True				
ANR	3519218	Identifier	use_rex		3519045	0					
ANR	3519219	CompoundStatement		38:15:666:666	3519045	1					
ANR	3519220	ExpressionStatement	data [ l ++ ] = rex	995:3:26419:26434	3519045	0	True				
ANR	3519221	AssignmentExpression	data [ l ++ ] = rex		3519045	0		=			
ANR	3519222	ArrayIndexing	data [ l ++ ]		3519045	0					
ANR	3519223	Identifier	data		3519045	0					
ANR	3519224	PostIncDecOperationExpression	l ++		3519045	1					
ANR	3519225	Identifier	l		3519045	0					
ANR	3519226	IncDec	++		3519045	1					
ANR	3519227	Identifier	rex		3519045	1					
ANR	3519228	IfStatement	if ( a -> bits > 32 || size & OT_BYTE )		3519045	1					
ANR	3519229	Condition	a -> bits > 32 || size & OT_BYTE	997:6:26446:26475	3519045	0	True				
ANR	3519230	OrExpression	a -> bits > 32 || size & OT_BYTE		3519045	0		||			
ANR	3519231	RelationalExpression	a -> bits > 32		3519045	0		>			
ANR	3519232	PtrMemberAccess	a -> bits		3519045	0					
ANR	3519233	Identifier	a		3519045	0					
ANR	3519234	Identifier	bits		3519045	1					
ANR	3519235	PrimaryExpression	32		3519045	1					
ANR	3519236	BitAndExpression	size & OT_BYTE		3519045	1		&			
ANR	3519237	Identifier	size		3519045	0					
ANR	3519238	Identifier	OT_BYTE		3519045	1					
ANR	3519239	CompoundStatement		41:38:730:730	3519045	1					
ANR	3519240	ExpressionStatement	data [ l ++ ] = opcode	998:3:26483:26501	3519045	0	True				
ANR	3519241	AssignmentExpression	data [ l ++ ] = opcode		3519045	0		=			
ANR	3519242	ArrayIndexing	data [ l ++ ]		3519045	0					
ANR	3519243	Identifier	data		3519045	0					
ANR	3519244	PostIncDecOperationExpression	l ++		3519045	1					
ANR	3519245	Identifier	l		3519045	0					
ANR	3519246	IncDec	++		3519045	1					
ANR	3519247	Identifier	opcode		3519045	1					
ANR	3519248	IfStatement	if ( a -> bits == 32 && size & ( OT_DWORD | OT_WORD ) )		3519045	2					
ANR	3519249	Condition	a -> bits == 32 && size & ( OT_DWORD | OT_WORD )	1000:6:26513:26556	3519045	0	True				
ANR	3519250	AndExpression	a -> bits == 32 && size & ( OT_DWORD | OT_WORD )		3519045	0		&&			
ANR	3519251	EqualityExpression	a -> bits == 32		3519045	0		==			
ANR	3519252	PtrMemberAccess	a -> bits		3519045	0					
ANR	3519253	Identifier	a		3519045	0					
ANR	3519254	Identifier	bits		3519045	1					
ANR	3519255	PrimaryExpression	32		3519045	1					
ANR	3519256	BitAndExpression	size & ( OT_DWORD | OT_WORD )		3519045	1		&			
ANR	3519257	Identifier	size		3519045	0					
ANR	3519258	InclusiveOrExpression	OT_DWORD | OT_WORD		3519045	1		|			
ANR	3519259	Identifier	OT_DWORD		3519045	0					
ANR	3519260	Identifier	OT_WORD		3519045	1					
ANR	3519261	CompoundStatement		44:52:811:811	3519045	1					
ANR	3519262	ExpressionStatement	data [ l ++ ] = 0x48 | op -> operands [ 0 ] . reg	1001:3:26564:26602	3519045	0	True				
ANR	3519263	AssignmentExpression	data [ l ++ ] = 0x48 | op -> operands [ 0 ] . reg		3519045	0		=			
ANR	3519264	ArrayIndexing	data [ l ++ ]		3519045	0					
ANR	3519265	Identifier	data		3519045	0					
ANR	3519266	PostIncDecOperationExpression	l ++		3519045	1					
ANR	3519267	Identifier	l		3519045	0					
ANR	3519268	IncDec	++		3519045	1					
ANR	3519269	InclusiveOrExpression	0x48 | op -> operands [ 0 ] . reg		3519045	1		|			
ANR	3519270	PrimaryExpression	0x48		3519045	0					
ANR	3519271	MemberAccess	op -> operands [ 0 ] . reg		3519045	1					
ANR	3519272	ArrayIndexing	op -> operands [ 0 ]		3519045	0					
ANR	3519273	PtrMemberAccess	op -> operands		3519045	0					
ANR	3519274	Identifier	op		3519045	0					
ANR	3519275	Identifier	operands		3519045	1					
ANR	3519276	PrimaryExpression	0		3519045	1					
ANR	3519277	Identifier	reg		3519045	1					
ANR	3519278	ElseStatement	else		3519045	0					
ANR	3519279	CompoundStatement		46:9:865:865	3519045	0					
ANR	3519280	ExpressionStatement	data [ l ++ ] = 0xc8 | op -> operands [ 0 ] . reg	1003:3:26618:26656	3519045	0	True				
ANR	3519281	AssignmentExpression	data [ l ++ ] = 0xc8 | op -> operands [ 0 ] . reg		3519045	0		=			
ANR	3519282	ArrayIndexing	data [ l ++ ]		3519045	0					
ANR	3519283	Identifier	data		3519045	0					
ANR	3519284	PostIncDecOperationExpression	l ++		3519045	1					
ANR	3519285	Identifier	l		3519045	0					
ANR	3519286	IncDec	++		3519045	1					
ANR	3519287	InclusiveOrExpression	0xc8 | op -> operands [ 0 ] . reg		3519045	1		|			
ANR	3519288	PrimaryExpression	0xc8		3519045	0					
ANR	3519289	MemberAccess	op -> operands [ 0 ] . reg		3519045	1					
ANR	3519290	ArrayIndexing	op -> operands [ 0 ]		3519045	0					
ANR	3519291	PtrMemberAccess	op -> operands		3519045	0					
ANR	3519292	Identifier	op		3519045	0					
ANR	3519293	Identifier	operands		3519045	1					
ANR	3519294	PrimaryExpression	0		3519045	1					
ANR	3519295	Identifier	reg		3519045	1					
ANR	3519296	ReturnStatement	return l ;	1005:2:26664:26672	3519045	3	True				
ANR	3519297	Identifier	l		3519045	0					
ANR	3519298	IdentifierDeclStatement	bool rip_rel = op -> operands [ 0 ] . regs [ 0 ] == X86R_RIP ;	1009:1:26706:26756	3519045	13	True				
ANR	3519299	IdentifierDecl	rip_rel = op -> operands [ 0 ] . regs [ 0 ] == X86R_RIP		3519045	0					
ANR	3519300	IdentifierDeclType	bool		3519045	0					
ANR	3519301	Identifier	rip_rel		3519045	1					
ANR	3519302	AssignmentExpression	rip_rel = op -> operands [ 0 ] . regs [ 0 ] == X86R_RIP		3519045	2		=			
ANR	3519303	Identifier	rip_rel		3519045	0					
ANR	3519304	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_RIP		3519045	1		==			
ANR	3519305	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3519045	0					
ANR	3519306	MemberAccess	op -> operands [ 0 ] . regs		3519045	0					
ANR	3519307	ArrayIndexing	op -> operands [ 0 ]		3519045	0					
ANR	3519308	PtrMemberAccess	op -> operands		3519045	0					
ANR	3519309	Identifier	op		3519045	0					
ANR	3519310	Identifier	operands		3519045	1					
ANR	3519311	PrimaryExpression	0		3519045	1					
ANR	3519312	Identifier	regs		3519045	1					
ANR	3519313	PrimaryExpression	0		3519045	1					
ANR	3519314	Identifier	X86R_RIP		3519045	1					
ANR	3519315	IdentifierDeclStatement	int offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign ;	1010:1:26759:26824	3519045	14	True				
ANR	3519316	IdentifierDecl	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		3519045	0					
ANR	3519317	IdentifierDeclType	int		3519045	0					
ANR	3519318	Identifier	offset		3519045	1					
ANR	3519319	AssignmentExpression	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		3519045	2		=			
ANR	3519320	Identifier	offset		3519045	0					
ANR	3519321	MultiplicativeExpression	op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		3519045	1		*			
ANR	3519322	MemberAccess	op -> operands [ 0 ] . offset		3519045	0					
ANR	3519323	ArrayIndexing	op -> operands [ 0 ]		3519045	0					
ANR	3519324	PtrMemberAccess	op -> operands		3519045	0					
ANR	3519325	Identifier	op		3519045	0					
ANR	3519326	Identifier	operands		3519045	1					
ANR	3519327	PrimaryExpression	0		3519045	1					
ANR	3519328	Identifier	offset		3519045	1					
ANR	3519329	MemberAccess	op -> operands [ 0 ] . offset_sign		3519045	1					
ANR	3519330	ArrayIndexing	op -> operands [ 0 ]		3519045	0					
ANR	3519331	PtrMemberAccess	op -> operands		3519045	0					
ANR	3519332	Identifier	op		3519045	0					
ANR	3519333	Identifier	operands		3519045	1					
ANR	3519334	PrimaryExpression	0		3519045	1					
ANR	3519335	Identifier	offset_sign		3519045	1					
ANR	3519336	IdentifierDeclStatement	int modrm = 0 ;	1011:1:26827:26840	3519045	15	True				
ANR	3519337	IdentifierDecl	modrm = 0		3519045	0					
ANR	3519338	IdentifierDeclType	int		3519045	0					
ANR	3519339	Identifier	modrm		3519045	1					
ANR	3519340	AssignmentExpression	modrm = 0		3519045	2		=			
ANR	3519341	Identifier	modrm		3519045	0					
ANR	3519342	PrimaryExpression	0		3519045	1					
ANR	3519343	IdentifierDeclStatement	int mod ;	1012:1:26843:26850	3519045	16	True				
ANR	3519344	IdentifierDecl	mod		3519045	0					
ANR	3519345	IdentifierDeclType	int		3519045	0					
ANR	3519346	Identifier	mod		3519045	1					
ANR	3519347	IdentifierDeclStatement	int reg = 0 ;	1013:1:26853:26864	3519045	17	True				
ANR	3519348	IdentifierDecl	reg = 0		3519045	0					
ANR	3519349	IdentifierDeclType	int		3519045	0					
ANR	3519350	Identifier	reg		3519045	1					
ANR	3519351	AssignmentExpression	reg = 0		3519045	2		=			
ANR	3519352	Identifier	reg		3519045	0					
ANR	3519353	PrimaryExpression	0		3519045	1					
ANR	3519354	IdentifierDeclStatement	int rm ;	1014:1:26867:26873	3519045	18	True				
ANR	3519355	IdentifierDecl	rm		3519045	0					
ANR	3519356	IdentifierDeclType	int		3519045	0					
ANR	3519357	Identifier	rm		3519045	1					
ANR	3519358	IdentifierDeclStatement	bool use_sib = false ;	1015:1:26876:26896	3519045	19	True				
ANR	3519359	IdentifierDecl	use_sib = false		3519045	0					
ANR	3519360	IdentifierDeclType	bool		3519045	0					
ANR	3519361	Identifier	use_sib		3519045	1					
ANR	3519362	AssignmentExpression	use_sib = false		3519045	2		=			
ANR	3519363	Identifier	false		3519045	0					
ANR	3519364	Identifier	false		3519045	1					
ANR	3519365	IdentifierDeclStatement	int sib = 0 ;	1016:1:26899:26910	3519045	20	True				
ANR	3519366	IdentifierDecl	sib = 0		3519045	0					
ANR	3519367	IdentifierDeclType	int		3519045	0					
ANR	3519368	Identifier	sib		3519045	1					
ANR	3519369	AssignmentExpression	sib = 0		3519045	2		=			
ANR	3519370	Identifier	sib		3519045	0					
ANR	3519371	PrimaryExpression	0		3519045	1					
ANR	3519372	IfStatement	if ( offset == 0 )		3519045	21					
ANR	3519373	Condition	offset == 0	1018:5:26924:26934	3519045	0	True				
ANR	3519374	EqualityExpression	offset == 0		3519045	0		==			
ANR	3519375	Identifier	offset		3519045	0					
ANR	3519376	PrimaryExpression	0		3519045	1					
ANR	3519377	CompoundStatement		62:18:1189:1189	3519045	1					
ANR	3519378	ExpressionStatement	mod = 0	1019:2:26941:26948	3519045	0	True				
ANR	3519379	AssignmentExpression	mod = 0		3519045	0		=			
ANR	3519380	Identifier	mod		3519045	0					
ANR	3519381	PrimaryExpression	0		3519045	1					
ANR	3519382	ElseStatement	else		3519045	0					
ANR	3519383	IfStatement	if ( offset < 128 && offset > - 129 )		3519045	0					
ANR	3519384	Condition	offset < 128 && offset > - 129	1020:12:26962:26990	3519045	0	True				
ANR	3519385	AndExpression	offset < 128 && offset > - 129		3519045	0		&&			
ANR	3519386	RelationalExpression	offset < 128		3519045	0		<			
ANR	3519387	Identifier	offset		3519045	0					
ANR	3519388	PrimaryExpression	128		3519045	1					
ANR	3519389	RelationalExpression	offset > - 129		3519045	1		>			
ANR	3519390	Identifier	offset		3519045	0					
ANR	3519391	UnaryOperationExpression	- 129		3519045	1					
ANR	3519392	UnaryOperator	-		3519045	0					
ANR	3519393	PrimaryExpression	129		3519045	1					
ANR	3519394	CompoundStatement		64:43:1245:1245	3519045	1					
ANR	3519395	ExpressionStatement	mod = 1	1021:2:26997:27004	3519045	0	True				
ANR	3519396	AssignmentExpression	mod = 1		3519045	0		=			
ANR	3519397	Identifier	mod		3519045	0					
ANR	3519398	PrimaryExpression	1		3519045	1					
ANR	3519399	ElseStatement	else		3519045	0					
ANR	3519400	CompoundStatement		66:8:1266:1266	3519045	0					
ANR	3519401	ExpressionStatement	mod = 2	1023:2:27018:27025	3519045	0	True				
ANR	3519402	AssignmentExpression	mod = 2		3519045	0		=			
ANR	3519403	Identifier	mod		3519045	0					
ANR	3519404	PrimaryExpression	2		3519045	1					
ANR	3519405	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] & OT_WORD )		3519045	22					
ANR	3519406	Condition	op -> operands [ 0 ] . regs [ 0 ] & OT_WORD	1026:5:27036:27068	3519045	0	True				
ANR	3519407	BitAndExpression	op -> operands [ 0 ] . regs [ 0 ] & OT_WORD		3519045	0		&			
ANR	3519408	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3519045	0					
ANR	3519409	MemberAccess	op -> operands [ 0 ] . regs		3519045	0					
ANR	3519410	ArrayIndexing	op -> operands [ 0 ]		3519045	0					
ANR	3519411	PtrMemberAccess	op -> operands		3519045	0					
ANR	3519412	Identifier	op		3519045	0					
ANR	3519413	Identifier	operands		3519045	1					
ANR	3519414	PrimaryExpression	0		3519045	1					
ANR	3519415	Identifier	regs		3519045	1					
ANR	3519416	PrimaryExpression	0		3519045	1					
ANR	3519417	Identifier	OT_WORD		3519045	1					
ANR	3519418	CompoundStatement		70:40:1323:1323	3519045	1					
ANR	3519419	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == X86R_SI )		3519045	0					
ANR	3519420	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == X86R_SI	1027:6:27079:27150	3519045	0	True				
ANR	3519421	AndExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == X86R_SI		3519045	0		&&			
ANR	3519422	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX		3519045	0		==			
ANR	3519423	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3519045	0					
ANR	3519424	MemberAccess	op -> operands [ 0 ] . regs		3519045	0					
ANR	3519425	ArrayIndexing	op -> operands [ 0 ]		3519045	0					
ANR	3519426	PtrMemberAccess	op -> operands		3519045	0					
ANR	3519427	Identifier	op		3519045	0					
ANR	3519428	Identifier	operands		3519045	1					
ANR	3519429	PrimaryExpression	0		3519045	1					
ANR	3519430	Identifier	regs		3519045	1					
ANR	3519431	PrimaryExpression	0		3519045	1					
ANR	3519432	Identifier	X86R_BX		3519045	1					
ANR	3519433	EqualityExpression	op -> operands [ 0 ] . regs [ 1 ] == X86R_SI		3519045	1		==			
ANR	3519434	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		3519045	0					
ANR	3519435	MemberAccess	op -> operands [ 0 ] . regs		3519045	0					
ANR	3519436	ArrayIndexing	op -> operands [ 0 ]		3519045	0					
ANR	3519437	PtrMemberAccess	op -> operands		3519045	0					
ANR	3519438	Identifier	op		3519045	0					
ANR	3519439	Identifier	operands		3519045	1					
ANR	3519440	PrimaryExpression	0		3519045	1					
ANR	3519441	Identifier	regs		3519045	1					
ANR	3519442	PrimaryExpression	1		3519045	1					
ANR	3519443	Identifier	X86R_SI		3519045	1					
ANR	3519444	CompoundStatement		71:80:1405:1405	3519045	1					
ANR	3519445	ExpressionStatement	rm = B0000	1028:3:27158:27168	3519045	0	True				
ANR	3519446	AssignmentExpression	rm = B0000		3519045	0		=			
ANR	3519447	Identifier	rm		3519045	0					
ANR	3519448	Identifier	B0000		3519045	1					
ANR	3519449	ElseStatement	else		3519045	0					
ANR	3519450	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == X86R_DI )		3519045	0					
ANR	3519451	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == X86R_DI	1029:13:27183:27254	3519045	0	True				
ANR	3519452	AndExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == X86R_DI		3519045	0		&&			
ANR	3519453	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX		3519045	0		==			
ANR	3519454	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3519045	0					
ANR	3519455	MemberAccess	op -> operands [ 0 ] . regs		3519045	0					
ANR	3519456	ArrayIndexing	op -> operands [ 0 ]		3519045	0					
ANR	3519457	PtrMemberAccess	op -> operands		3519045	0					
ANR	3519458	Identifier	op		3519045	0					
ANR	3519459	Identifier	operands		3519045	1					
ANR	3519460	PrimaryExpression	0		3519045	1					
ANR	3519461	Identifier	regs		3519045	1					
ANR	3519462	PrimaryExpression	0		3519045	1					
ANR	3519463	Identifier	X86R_BX		3519045	1					
ANR	3519464	EqualityExpression	op -> operands [ 0 ] . regs [ 1 ] == X86R_DI		3519045	1		==			
ANR	3519465	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		3519045	0					
ANR	3519466	MemberAccess	op -> operands [ 0 ] . regs		3519045	0					
ANR	3519467	ArrayIndexing	op -> operands [ 0 ]		3519045	0					
ANR	3519468	PtrMemberAccess	op -> operands		3519045	0					
ANR	3519469	Identifier	op		3519045	0					
ANR	3519470	Identifier	operands		3519045	1					
ANR	3519471	PrimaryExpression	0		3519045	1					
ANR	3519472	Identifier	regs		3519045	1					
ANR	3519473	PrimaryExpression	1		3519045	1					
ANR	3519474	Identifier	X86R_DI		3519045	1					
ANR	3519475	CompoundStatement		73:87:1509:1509	3519045	1					
ANR	3519476	ExpressionStatement	rm = B0001	1030:3:27262:27272	3519045	0	True				
ANR	3519477	AssignmentExpression	rm = B0001		3519045	0		=			
ANR	3519478	Identifier	rm		3519045	0					
ANR	3519479	Identifier	B0001		3519045	1					
ANR	3519480	ElseStatement	else		3519045	0					
ANR	3519481	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_BP && op -> operands [ 0 ] . regs [ 1 ] == X86R_SI )		3519045	0					
ANR	3519482	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_BP && op -> operands [ 0 ] . regs [ 1 ] == X86R_SI	1031:13:27287:27358	3519045	0	True				
ANR	3519483	AndExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BP && op -> operands [ 0 ] . regs [ 1 ] == X86R_SI		3519045	0		&&			
ANR	3519484	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BP		3519045	0		==			
ANR	3519485	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3519045	0					
ANR	3519486	MemberAccess	op -> operands [ 0 ] . regs		3519045	0					
ANR	3519487	ArrayIndexing	op -> operands [ 0 ]		3519045	0					
ANR	3519488	PtrMemberAccess	op -> operands		3519045	0					
ANR	3519489	Identifier	op		3519045	0					
ANR	3519490	Identifier	operands		3519045	1					
ANR	3519491	PrimaryExpression	0		3519045	1					
ANR	3519492	Identifier	regs		3519045	1					
ANR	3519493	PrimaryExpression	0		3519045	1					
ANR	3519494	Identifier	X86R_BP		3519045	1					
ANR	3519495	EqualityExpression	op -> operands [ 0 ] . regs [ 1 ] == X86R_SI		3519045	1		==			
ANR	3519496	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		3519045	0					
ANR	3519497	MemberAccess	op -> operands [ 0 ] . regs		3519045	0					
ANR	3519498	ArrayIndexing	op -> operands [ 0 ]		3519045	0					
ANR	3519499	PtrMemberAccess	op -> operands		3519045	0					
ANR	3519500	Identifier	op		3519045	0					
ANR	3519501	Identifier	operands		3519045	1					
ANR	3519502	PrimaryExpression	0		3519045	1					
ANR	3519503	Identifier	regs		3519045	1					
ANR	3519504	PrimaryExpression	1		3519045	1					
ANR	3519505	Identifier	X86R_SI		3519045	1					
ANR	3519506	CompoundStatement		75:87:1613:1613	3519045	1					
ANR	3519507	ExpressionStatement	rm = B0010	1032:3:27366:27376	3519045	0	True				
ANR	3519508	AssignmentExpression	rm = B0010		3519045	0		=			
ANR	3519509	Identifier	rm		3519045	0					
ANR	3519510	Identifier	B0010		3519045	1					
ANR	3519511	ElseStatement	else		3519045	0					
ANR	3519512	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_BP && op -> operands [ 0 ] . regs [ 1 ] == X86R_DI )		3519045	0					
ANR	3519513	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_BP && op -> operands [ 0 ] . regs [ 1 ] == X86R_DI	1033:13:27391:27462	3519045	0	True				
ANR	3519514	AndExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BP && op -> operands [ 0 ] . regs [ 1 ] == X86R_DI		3519045	0		&&			
ANR	3519515	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BP		3519045	0		==			
ANR	3519516	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3519045	0					
ANR	3519517	MemberAccess	op -> operands [ 0 ] . regs		3519045	0					
ANR	3519518	ArrayIndexing	op -> operands [ 0 ]		3519045	0					
ANR	3519519	PtrMemberAccess	op -> operands		3519045	0					
ANR	3519520	Identifier	op		3519045	0					
ANR	3519521	Identifier	operands		3519045	1					
ANR	3519522	PrimaryExpression	0		3519045	1					
ANR	3519523	Identifier	regs		3519045	1					
ANR	3519524	PrimaryExpression	0		3519045	1					
ANR	3519525	Identifier	X86R_BP		3519045	1					
ANR	3519526	EqualityExpression	op -> operands [ 0 ] . regs [ 1 ] == X86R_DI		3519045	1		==			
ANR	3519527	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		3519045	0					
ANR	3519528	MemberAccess	op -> operands [ 0 ] . regs		3519045	0					
ANR	3519529	ArrayIndexing	op -> operands [ 0 ]		3519045	0					
ANR	3519530	PtrMemberAccess	op -> operands		3519045	0					
ANR	3519531	Identifier	op		3519045	0					
ANR	3519532	Identifier	operands		3519045	1					
ANR	3519533	PrimaryExpression	0		3519045	1					
ANR	3519534	Identifier	regs		3519045	1					
ANR	3519535	PrimaryExpression	1		3519045	1					
ANR	3519536	Identifier	X86R_DI		3519045	1					
ANR	3519537	CompoundStatement		77:87:1717:1717	3519045	1					
ANR	3519538	ExpressionStatement	rm = B0011	1034:3:27470:27480	3519045	0	True				
ANR	3519539	AssignmentExpression	rm = B0011		3519045	0		=			
ANR	3519540	Identifier	rm		3519045	0					
ANR	3519541	Identifier	B0011		3519045	1					
ANR	3519542	ElseStatement	else		3519045	0					
ANR	3519543	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_SI && op -> operands [ 0 ] . regs [ 1 ] == - 1 )		3519045	0					
ANR	3519544	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_SI && op -> operands [ 0 ] . regs [ 1 ] == - 1	1035:13:27495:27561	3519045	0	True				
ANR	3519545	AndExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_SI && op -> operands [ 0 ] . regs [ 1 ] == - 1		3519045	0		&&			
ANR	3519546	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_SI		3519045	0		==			
ANR	3519547	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3519045	0					
ANR	3519548	MemberAccess	op -> operands [ 0 ] . regs		3519045	0					
ANR	3519549	ArrayIndexing	op -> operands [ 0 ]		3519045	0					
ANR	3519550	PtrMemberAccess	op -> operands		3519045	0					
ANR	3519551	Identifier	op		3519045	0					
ANR	3519552	Identifier	operands		3519045	1					
ANR	3519553	PrimaryExpression	0		3519045	1					
ANR	3519554	Identifier	regs		3519045	1					
ANR	3519555	PrimaryExpression	0		3519045	1					
ANR	3519556	Identifier	X86R_SI		3519045	1					
ANR	3519557	EqualityExpression	op -> operands [ 0 ] . regs [ 1 ] == - 1		3519045	1		==			
ANR	3519558	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		3519045	0					
ANR	3519559	MemberAccess	op -> operands [ 0 ] . regs		3519045	0					
ANR	3519560	ArrayIndexing	op -> operands [ 0 ]		3519045	0					
ANR	3519561	PtrMemberAccess	op -> operands		3519045	0					
ANR	3519562	Identifier	op		3519045	0					
ANR	3519563	Identifier	operands		3519045	1					
ANR	3519564	PrimaryExpression	0		3519045	1					
ANR	3519565	Identifier	regs		3519045	1					
ANR	3519566	PrimaryExpression	1		3519045	1					
ANR	3519567	UnaryOperationExpression	- 1		3519045	1					
ANR	3519568	UnaryOperator	-		3519045	0					
ANR	3519569	PrimaryExpression	1		3519045	1					
ANR	3519570	CompoundStatement		79:82:1816:1816	3519045	1					
ANR	3519571	ExpressionStatement	rm = B0100	1036:3:27569:27579	3519045	0	True				
ANR	3519572	AssignmentExpression	rm = B0100		3519045	0		=			
ANR	3519573	Identifier	rm		3519045	0					
ANR	3519574	Identifier	B0100		3519045	1					
ANR	3519575	ElseStatement	else		3519045	0					
ANR	3519576	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_DI && op -> operands [ 0 ] . regs [ 1 ] == - 1 )		3519045	0					
ANR	3519577	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_DI && op -> operands [ 0 ] . regs [ 1 ] == - 1	1037:13:27594:27660	3519045	0	True				
ANR	3519578	AndExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_DI && op -> operands [ 0 ] . regs [ 1 ] == - 1		3519045	0		&&			
ANR	3519579	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_DI		3519045	0		==			
ANR	3519580	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3519045	0					
ANR	3519581	MemberAccess	op -> operands [ 0 ] . regs		3519045	0					
ANR	3519582	ArrayIndexing	op -> operands [ 0 ]		3519045	0					
ANR	3519583	PtrMemberAccess	op -> operands		3519045	0					
ANR	3519584	Identifier	op		3519045	0					
ANR	3519585	Identifier	operands		3519045	1					
ANR	3519586	PrimaryExpression	0		3519045	1					
ANR	3519587	Identifier	regs		3519045	1					
ANR	3519588	PrimaryExpression	0		3519045	1					
ANR	3519589	Identifier	X86R_DI		3519045	1					
ANR	3519590	EqualityExpression	op -> operands [ 0 ] . regs [ 1 ] == - 1		3519045	1		==			
ANR	3519591	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		3519045	0					
ANR	3519592	MemberAccess	op -> operands [ 0 ] . regs		3519045	0					
ANR	3519593	ArrayIndexing	op -> operands [ 0 ]		3519045	0					
ANR	3519594	PtrMemberAccess	op -> operands		3519045	0					
ANR	3519595	Identifier	op		3519045	0					
ANR	3519596	Identifier	operands		3519045	1					
ANR	3519597	PrimaryExpression	0		3519045	1					
ANR	3519598	Identifier	regs		3519045	1					
ANR	3519599	PrimaryExpression	1		3519045	1					
ANR	3519600	UnaryOperationExpression	- 1		3519045	1					
ANR	3519601	UnaryOperator	-		3519045	0					
ANR	3519602	PrimaryExpression	1		3519045	1					
ANR	3519603	CompoundStatement		81:82:1915:1915	3519045	1					
ANR	3519604	ExpressionStatement	rm = B0101	1038:3:27668:27678	3519045	0	True				
ANR	3519605	AssignmentExpression	rm = B0101		3519045	0		=			
ANR	3519606	Identifier	rm		3519045	0					
ANR	3519607	Identifier	B0101		3519045	1					
ANR	3519608	ElseStatement	else		3519045	0					
ANR	3519609	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == - 1 )		3519045	0					
ANR	3519610	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == - 1	1039:13:27693:27759	3519045	0	True				
ANR	3519611	AndExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == - 1		3519045	0		&&			
ANR	3519612	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX		3519045	0		==			
ANR	3519613	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3519045	0					
ANR	3519614	MemberAccess	op -> operands [ 0 ] . regs		3519045	0					
ANR	3519615	ArrayIndexing	op -> operands [ 0 ]		3519045	0					
ANR	3519616	PtrMemberAccess	op -> operands		3519045	0					
ANR	3519617	Identifier	op		3519045	0					
ANR	3519618	Identifier	operands		3519045	1					
ANR	3519619	PrimaryExpression	0		3519045	1					
ANR	3519620	Identifier	regs		3519045	1					
ANR	3519621	PrimaryExpression	0		3519045	1					
ANR	3519622	Identifier	X86R_BX		3519045	1					
ANR	3519623	EqualityExpression	op -> operands [ 0 ] . regs [ 1 ] == - 1		3519045	1		==			
ANR	3519624	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		3519045	0					
ANR	3519625	MemberAccess	op -> operands [ 0 ] . regs		3519045	0					
ANR	3519626	ArrayIndexing	op -> operands [ 0 ]		3519045	0					
ANR	3519627	PtrMemberAccess	op -> operands		3519045	0					
ANR	3519628	Identifier	op		3519045	0					
ANR	3519629	Identifier	operands		3519045	1					
ANR	3519630	PrimaryExpression	0		3519045	1					
ANR	3519631	Identifier	regs		3519045	1					
ANR	3519632	PrimaryExpression	1		3519045	1					
ANR	3519633	UnaryOperationExpression	- 1		3519045	1					
ANR	3519634	UnaryOperator	-		3519045	0					
ANR	3519635	PrimaryExpression	1		3519045	1					
ANR	3519636	CompoundStatement		83:82:2014:2014	3519045	1					
ANR	3519637	ExpressionStatement	rm = B0111	1040:3:27767:27777	3519045	0	True				
ANR	3519638	AssignmentExpression	rm = B0111		3519045	0		=			
ANR	3519639	Identifier	rm		3519045	0					
ANR	3519640	Identifier	B0111		3519045	1					
ANR	3519641	ElseStatement	else		3519045	0					
ANR	3519642	CompoundStatement		85:9:2040:2040	3519045	0					
ANR	3519643	ReturnStatement	return - 1 ;	1043:3:27855:27864	3519045	0	True				
ANR	3519644	UnaryOperationExpression	- 1		3519045	0					
ANR	3519645	UnaryOperator	-		3519045	0					
ANR	3519646	PrimaryExpression	1		3519045	1					
ANR	3519647	ExpressionStatement	modrm = ( mod << 6 ) | ( reg << 3 ) | rm	1045:2:27872:27908	3519045	1	True				
ANR	3519648	AssignmentExpression	modrm = ( mod << 6 ) | ( reg << 3 ) | rm		3519045	0		=			
ANR	3519649	Identifier	modrm		3519045	0					
ANR	3519650	InclusiveOrExpression	( mod << 6 ) | ( reg << 3 ) | rm		3519045	1		|			
ANR	3519651	ShiftExpression	mod << 6		3519045	0		<<			
ANR	3519652	Identifier	mod		3519045	0					
ANR	3519653	PrimaryExpression	6		3519045	1					
ANR	3519654	InclusiveOrExpression	( reg << 3 ) | rm		3519045	1		|			
ANR	3519655	ShiftExpression	reg << 3		3519045	0		<<			
ANR	3519656	Identifier	reg		3519045	0					
ANR	3519657	PrimaryExpression	3		3519045	1					
ANR	3519658	Identifier	rm		3519045	1					
ANR	3519659	ElseStatement	else		3519045	0					
ANR	3519660	CompoundStatement		104:2:2442:2486	3519045	0					
ANR	3519661	IfStatement	if ( op -> operands [ 0 ] . extended )		3519045	0					
ANR	3519662	Condition	op -> operands [ 0 ] . extended	1048:6:27933:27956	3519045	0	True				
ANR	3519663	MemberAccess	op -> operands [ 0 ] . extended		3519045	0					
ANR	3519664	ArrayIndexing	op -> operands [ 0 ]		3519045	0					
ANR	3519665	PtrMemberAccess	op -> operands		3519045	0					
ANR	3519666	Identifier	op		3519045	0					
ANR	3519667	Identifier	operands		3519045	1					
ANR	3519668	PrimaryExpression	0		3519045	1					
ANR	3519669	Identifier	extended		3519045	1					
ANR	3519670	CompoundStatement		92:32:2211:2211	3519045	1					
ANR	3519671	ExpressionStatement	rm = op -> operands [ 0 ] . reg	1049:3:27964:27988	3519045	0	True				
ANR	3519672	AssignmentExpression	rm = op -> operands [ 0 ] . reg		3519045	0		=			
ANR	3519673	Identifier	rm		3519045	0					
ANR	3519674	MemberAccess	op -> operands [ 0 ] . reg		3519045	1					
ANR	3519675	ArrayIndexing	op -> operands [ 0 ]		3519045	0					
ANR	3519676	PtrMemberAccess	op -> operands		3519045	0					
ANR	3519677	Identifier	op		3519045	0					
ANR	3519678	Identifier	operands		3519045	1					
ANR	3519679	PrimaryExpression	0		3519045	1					
ANR	3519680	Identifier	reg		3519045	1					
ANR	3519681	ElseStatement	else		3519045	0					
ANR	3519682	CompoundStatement		94:9:2251:2251	3519045	0					
ANR	3519683	ExpressionStatement	rm = op -> operands [ 0 ] . regs [ 0 ]	1051:3:28004:28032	3519045	0	True				
ANR	3519684	AssignmentExpression	rm = op -> operands [ 0 ] . regs [ 0 ]		3519045	0		=			
ANR	3519685	Identifier	rm		3519045	0					
ANR	3519686	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3519045	1					
ANR	3519687	MemberAccess	op -> operands [ 0 ] . regs		3519045	0					
ANR	3519688	ArrayIndexing	op -> operands [ 0 ]		3519045	0					
ANR	3519689	PtrMemberAccess	op -> operands		3519045	0					
ANR	3519690	Identifier	op		3519045	0					
ANR	3519691	Identifier	operands		3519045	1					
ANR	3519692	PrimaryExpression	0		3519045	1					
ANR	3519693	Identifier	regs		3519045	1					
ANR	3519694	PrimaryExpression	0		3519045	1					
ANR	3519695	IfStatement	if ( rm == 5 && mod == 0 )		3519045	1					
ANR	3519696	Condition	rm == 5 && mod == 0	1054:6:28101:28119	3519045	0	True				
ANR	3519697	AndExpression	rm == 5 && mod == 0		3519045	0		&&			
ANR	3519698	EqualityExpression	rm == 5		3519045	0		==			
ANR	3519699	Identifier	rm		3519045	0					
ANR	3519700	PrimaryExpression	5		3519045	1					
ANR	3519701	EqualityExpression	mod == 0		3519045	1		==			
ANR	3519702	Identifier	mod		3519045	0					
ANR	3519703	PrimaryExpression	0		3519045	1					
ANR	3519704	CompoundStatement		98:27:2374:2374	3519045	1					
ANR	3519705	ExpressionStatement	mod = 1	1055:3:28127:28134	3519045	0	True				
ANR	3519706	AssignmentExpression	mod = 1		3519045	0		=			
ANR	3519707	Identifier	mod		3519045	0					
ANR	3519708	PrimaryExpression	1		3519045	1					
ANR	3519709	IdentifierDeclStatement	int index = op -> operands [ 0 ] . regs [ 1 ] ;	1059:2:28151:28186	3519045	2	True				
ANR	3519710	IdentifierDecl	index = op -> operands [ 0 ] . regs [ 1 ]		3519045	0					
ANR	3519711	IdentifierDeclType	int		3519045	0					
ANR	3519712	Identifier	index		3519045	1					
ANR	3519713	AssignmentExpression	index = op -> operands [ 0 ] . regs [ 1 ]		3519045	2		=			
ANR	3519714	Identifier	index		3519045	0					
ANR	3519715	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		3519045	1					
ANR	3519716	MemberAccess	op -> operands [ 0 ] . regs		3519045	0					
ANR	3519717	ArrayIndexing	op -> operands [ 0 ]		3519045	0					
ANR	3519718	PtrMemberAccess	op -> operands		3519045	0					
ANR	3519719	Identifier	op		3519045	0					
ANR	3519720	Identifier	operands		3519045	1					
ANR	3519721	PrimaryExpression	0		3519045	1					
ANR	3519722	Identifier	regs		3519045	1					
ANR	3519723	PrimaryExpression	1		3519045	1					
ANR	3519724	IdentifierDeclStatement	int scale = getsib ( op -> operands [ 0 ] . scale [ 1 ] ) ;	1060:2:28190:28234	3519045	3	True				
ANR	3519725	IdentifierDecl	scale = getsib ( op -> operands [ 0 ] . scale [ 1 ] )		3519045	0					
ANR	3519726	IdentifierDeclType	int		3519045	0					
ANR	3519727	Identifier	scale		3519045	1					
ANR	3519728	AssignmentExpression	scale = getsib ( op -> operands [ 0 ] . scale [ 1 ] )		3519045	2		=			
ANR	3519729	Identifier	scale		3519045	0					
ANR	3519730	CallExpression	getsib ( op -> operands [ 0 ] . scale [ 1 ] )		3519045	1					
ANR	3519731	Callee	getsib		3519045	0					
ANR	3519732	Identifier	getsib		3519045	0					
ANR	3519733	ArgumentList	op -> operands [ 0 ] . scale [ 1 ]		3519045	1					
ANR	3519734	Argument	op -> operands [ 0 ] . scale [ 1 ]		3519045	0					
ANR	3519735	ArrayIndexing	op -> operands [ 0 ] . scale [ 1 ]		3519045	0					
ANR	3519736	MemberAccess	op -> operands [ 0 ] . scale		3519045	0					
ANR	3519737	ArrayIndexing	op -> operands [ 0 ]		3519045	0					
ANR	3519738	PtrMemberAccess	op -> operands		3519045	0					
ANR	3519739	Identifier	op		3519045	0					
ANR	3519740	Identifier	operands		3519045	1					
ANR	3519741	PrimaryExpression	0		3519045	1					
ANR	3519742	Identifier	scale		3519045	1					
ANR	3519743	PrimaryExpression	1		3519045	1					
ANR	3519744	IfStatement	if ( index != - 1 )		3519045	4					
ANR	3519745	Condition	index != - 1	1061:6:28242:28252	3519045	0	True				
ANR	3519746	EqualityExpression	index != - 1		3519045	0		!=			
ANR	3519747	Identifier	index		3519045	0					
ANR	3519748	UnaryOperationExpression	- 1		3519045	1					
ANR	3519749	UnaryOperator	-		3519045	0					
ANR	3519750	PrimaryExpression	1		3519045	1					
ANR	3519751	CompoundStatement		105:19:2507:2507	3519045	1					
ANR	3519752	ExpressionStatement	use_sib = true	1062:3:28260:28274	3519045	0	True				
ANR	3519753	AssignmentExpression	use_sib = true		3519045	0		=			
ANR	3519754	Identifier	use_sib		3519045	0					
ANR	3519755	Identifier	true		3519045	1					
ANR	3519756	ExpressionStatement	sib = ( scale << 6 ) | ( index << 3 ) | rm	1063:3:28279:28317	3519045	1	True				
ANR	3519757	AssignmentExpression	sib = ( scale << 6 ) | ( index << 3 ) | rm		3519045	0		=			
ANR	3519758	Identifier	sib		3519045	0					
ANR	3519759	InclusiveOrExpression	( scale << 6 ) | ( index << 3 ) | rm		3519045	1		|			
ANR	3519760	ShiftExpression	scale << 6		3519045	0		<<			
ANR	3519761	Identifier	scale		3519045	0					
ANR	3519762	PrimaryExpression	6		3519045	1					
ANR	3519763	InclusiveOrExpression	( index << 3 ) | rm		3519045	1		|			
ANR	3519764	ShiftExpression	index << 3		3519045	0		<<			
ANR	3519765	Identifier	index		3519045	0					
ANR	3519766	PrimaryExpression	3		3519045	1					
ANR	3519767	Identifier	rm		3519045	1					
ANR	3519768	ElseStatement	else		3519045	0					
ANR	3519769	IfStatement	if ( rm == 4 )		3519045	0					
ANR	3519770	Condition	rm == 4	1064:13:28332:28338	3519045	0	True				
ANR	3519771	EqualityExpression	rm == 4		3519045	0		==			
ANR	3519772	Identifier	rm		3519045	0					
ANR	3519773	PrimaryExpression	4		3519045	1					
ANR	3519774	CompoundStatement		108:22:2593:2593	3519045	1					
ANR	3519775	ExpressionStatement	use_sib = true	1065:3:28346:28360	3519045	0	True				
ANR	3519776	AssignmentExpression	use_sib = true		3519045	0		=			
ANR	3519777	Identifier	use_sib		3519045	0					
ANR	3519778	Identifier	true		3519045	1					
ANR	3519779	ExpressionStatement	sib = 0x24	1066:3:28365:28375	3519045	1	True				
ANR	3519780	AssignmentExpression	sib = 0x24		3519045	0		=			
ANR	3519781	Identifier	sib		3519045	0					
ANR	3519782	PrimaryExpression	0x24		3519045	1					
ANR	3519783	IfStatement	if ( use_sib )		3519045	5					
ANR	3519784	Condition	use_sib	1068:6:28387:28393	3519045	0	True				
ANR	3519785	Identifier	use_sib		3519045	0					
ANR	3519786	CompoundStatement		112:15:2648:2648	3519045	1					
ANR	3519787	ExpressionStatement	rm = B0100	1069:3:28401:28411	3519045	0	True				
ANR	3519788	AssignmentExpression	rm = B0100		3519045	0		=			
ANR	3519789	Identifier	rm		3519045	0					
ANR	3519790	Identifier	B0100		3519045	1					
ANR	3519791	IfStatement	if ( rip_rel )		3519045	6					
ANR	3519792	Condition	rip_rel	1071:6:28423:28429	3519045	0	True				
ANR	3519793	Identifier	rip_rel		3519045	0					
ANR	3519794	CompoundStatement		115:15:2684:2684	3519045	1					
ANR	3519795	ExpressionStatement	modrm = ( B0000 << 6 ) | ( reg << 3 ) | B0101	1072:3:28437:28478	3519045	0	True				
ANR	3519796	AssignmentExpression	modrm = ( B0000 << 6 ) | ( reg << 3 ) | B0101		3519045	0		=			
ANR	3519797	Identifier	modrm		3519045	0					
ANR	3519798	InclusiveOrExpression	( B0000 << 6 ) | ( reg << 3 ) | B0101		3519045	1		|			
ANR	3519799	ShiftExpression	B0000 << 6		3519045	0		<<			
ANR	3519800	Identifier	B0000		3519045	0					
ANR	3519801	PrimaryExpression	6		3519045	1					
ANR	3519802	InclusiveOrExpression	( reg << 3 ) | B0101		3519045	1		|			
ANR	3519803	ShiftExpression	reg << 3		3519045	0		<<			
ANR	3519804	Identifier	reg		3519045	0					
ANR	3519805	PrimaryExpression	3		3519045	1					
ANR	3519806	Identifier	B0101		3519045	1					
ANR	3519807	ExpressionStatement	sib = ( scale << 6 ) | ( B0100 << 3 ) | B0101	1073:3:28483:28524	3519045	1	True				
ANR	3519808	AssignmentExpression	sib = ( scale << 6 ) | ( B0100 << 3 ) | B0101		3519045	0		=			
ANR	3519809	Identifier	sib		3519045	0					
ANR	3519810	InclusiveOrExpression	( scale << 6 ) | ( B0100 << 3 ) | B0101		3519045	1		|			
ANR	3519811	ShiftExpression	scale << 6		3519045	0		<<			
ANR	3519812	Identifier	scale		3519045	0					
ANR	3519813	PrimaryExpression	6		3519045	1					
ANR	3519814	InclusiveOrExpression	( B0100 << 3 ) | B0101		3519045	1		|			
ANR	3519815	ShiftExpression	B0100 << 3		3519045	0		<<			
ANR	3519816	Identifier	B0100		3519045	0					
ANR	3519817	PrimaryExpression	3		3519045	1					
ANR	3519818	Identifier	B0101		3519045	1					
ANR	3519819	ElseStatement	else		3519045	0					
ANR	3519820	CompoundStatement		118:9:2787:2787	3519045	0					
ANR	3519821	ExpressionStatement	modrm = ( mod << 6 ) | ( reg << 3 ) | rm	1075:3:28540:28576	3519045	0	True				
ANR	3519822	AssignmentExpression	modrm = ( mod << 6 ) | ( reg << 3 ) | rm		3519045	0		=			
ANR	3519823	Identifier	modrm		3519045	0					
ANR	3519824	InclusiveOrExpression	( mod << 6 ) | ( reg << 3 ) | rm		3519045	1		|			
ANR	3519825	ShiftExpression	mod << 6		3519045	0		<<			
ANR	3519826	Identifier	mod		3519045	0					
ANR	3519827	PrimaryExpression	6		3519045	1					
ANR	3519828	InclusiveOrExpression	( reg << 3 ) | rm		3519045	1		|			
ANR	3519829	ShiftExpression	reg << 3		3519045	0		<<			
ANR	3519830	Identifier	reg		3519045	0					
ANR	3519831	PrimaryExpression	3		3519045	1					
ANR	3519832	Identifier	rm		3519045	1					
ANR	3519833	ExpressionStatement	modrm |= 1 << 3	1077:2:28584:28597	3519045	7	True				
ANR	3519834	AssignmentExpression	modrm |= 1 << 3		3519045	0		|=			
ANR	3519835	Identifier	modrm		3519045	0					
ANR	3519836	ShiftExpression	1 << 3		3519045	1		<<			
ANR	3519837	PrimaryExpression	1		3519045	0					
ANR	3519838	PrimaryExpression	3		3519045	1					
ANR	3519839	IfStatement	if ( use_rex )		3519045	23					
ANR	3519840	Condition	use_rex	1080:5:28608:28614	3519045	0	True				
ANR	3519841	Identifier	use_rex		3519045	0					
ANR	3519842	CompoundStatement		124:14:2869:2869	3519045	1					
ANR	3519843	ExpressionStatement	data [ l ++ ] = rex	1081:2:28621:28636	3519045	0	True				
ANR	3519844	AssignmentExpression	data [ l ++ ] = rex		3519045	0		=			
ANR	3519845	ArrayIndexing	data [ l ++ ]		3519045	0					
ANR	3519846	Identifier	data		3519045	0					
ANR	3519847	PostIncDecOperationExpression	l ++		3519045	1					
ANR	3519848	Identifier	l		3519045	0					
ANR	3519849	IncDec	++		3519045	1					
ANR	3519850	Identifier	rex		3519045	1					
ANR	3519851	ExpressionStatement	data [ l ++ ] = opcode	1083:1:28642:28660	3519045	24	True				
ANR	3519852	AssignmentExpression	data [ l ++ ] = opcode		3519045	0		=			
ANR	3519853	ArrayIndexing	data [ l ++ ]		3519045	0					
ANR	3519854	Identifier	data		3519045	0					
ANR	3519855	PostIncDecOperationExpression	l ++		3519045	1					
ANR	3519856	Identifier	l		3519045	0					
ANR	3519857	IncDec	++		3519045	1					
ANR	3519858	Identifier	opcode		3519045	1					
ANR	3519859	ExpressionStatement	data [ l ++ ] = modrm	1084:1:28663:28680	3519045	25	True				
ANR	3519860	AssignmentExpression	data [ l ++ ] = modrm		3519045	0		=			
ANR	3519861	ArrayIndexing	data [ l ++ ]		3519045	0					
ANR	3519862	Identifier	data		3519045	0					
ANR	3519863	PostIncDecOperationExpression	l ++		3519045	1					
ANR	3519864	Identifier	l		3519045	0					
ANR	3519865	IncDec	++		3519045	1					
ANR	3519866	Identifier	modrm		3519045	1					
ANR	3519867	IfStatement	if ( use_sib )		3519045	26					
ANR	3519868	Condition	use_sib	1085:5:28687:28693	3519045	0	True				
ANR	3519869	Identifier	use_sib		3519045	0					
ANR	3519870	CompoundStatement		129:14:2948:2948	3519045	1					
ANR	3519871	ExpressionStatement	data [ l ++ ] = sib	1086:2:28700:28715	3519045	0	True				
ANR	3519872	AssignmentExpression	data [ l ++ ] = sib		3519045	0		=			
ANR	3519873	ArrayIndexing	data [ l ++ ]		3519045	0					
ANR	3519874	Identifier	data		3519045	0					
ANR	3519875	PostIncDecOperationExpression	l ++		3519045	1					
ANR	3519876	Identifier	l		3519045	0					
ANR	3519877	IncDec	++		3519045	1					
ANR	3519878	Identifier	sib		3519045	1					
ANR	3519879	IfStatement	if ( mod == 1 )		3519045	27					
ANR	3519880	Condition	mod == 1	1089:5:28735:28742	3519045	0	True				
ANR	3519881	EqualityExpression	mod == 1		3519045	0		==			
ANR	3519882	Identifier	mod		3519045	0					
ANR	3519883	PrimaryExpression	1		3519045	1					
ANR	3519884	CompoundStatement		133:15:2997:2997	3519045	1					
ANR	3519885	ExpressionStatement	data [ l ++ ] = offset	1090:2:28749:28767	3519045	0	True				
ANR	3519886	AssignmentExpression	data [ l ++ ] = offset		3519045	0		=			
ANR	3519887	ArrayIndexing	data [ l ++ ]		3519045	0					
ANR	3519888	Identifier	data		3519045	0					
ANR	3519889	PostIncDecOperationExpression	l ++		3519045	1					
ANR	3519890	Identifier	l		3519045	0					
ANR	3519891	IncDec	++		3519045	1					
ANR	3519892	Identifier	offset		3519045	1					
ANR	3519893	ElseStatement	else		3519045	0					
ANR	3519894	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] & OT_WORD && mod == 2 )		3519045	0					
ANR	3519895	Condition	op -> operands [ 0 ] . regs [ 0 ] & OT_WORD && mod == 2	1091:12:28781:28825	3519045	0	True				
ANR	3519896	AndExpression	op -> operands [ 0 ] . regs [ 0 ] & OT_WORD && mod == 2		3519045	0		&&			
ANR	3519897	BitAndExpression	op -> operands [ 0 ] . regs [ 0 ] & OT_WORD		3519045	0		&			
ANR	3519898	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3519045	0					
ANR	3519899	MemberAccess	op -> operands [ 0 ] . regs		3519045	0					
ANR	3519900	ArrayIndexing	op -> operands [ 0 ]		3519045	0					
ANR	3519901	PtrMemberAccess	op -> operands		3519045	0					
ANR	3519902	Identifier	op		3519045	0					
ANR	3519903	Identifier	operands		3519045	1					
ANR	3519904	PrimaryExpression	0		3519045	1					
ANR	3519905	Identifier	regs		3519045	1					
ANR	3519906	PrimaryExpression	0		3519045	1					
ANR	3519907	Identifier	OT_WORD		3519045	1					
ANR	3519908	EqualityExpression	mod == 2		3519045	1		==			
ANR	3519909	Identifier	mod		3519045	0					
ANR	3519910	PrimaryExpression	2		3519045	1					
ANR	3519911	CompoundStatement		135:59:3080:3080	3519045	1					
ANR	3519912	ExpressionStatement	data [ l ++ ] = offset	1092:2:28832:28850	3519045	0	True				
ANR	3519913	AssignmentExpression	data [ l ++ ] = offset		3519045	0		=			
ANR	3519914	ArrayIndexing	data [ l ++ ]		3519045	0					
ANR	3519915	Identifier	data		3519045	0					
ANR	3519916	PostIncDecOperationExpression	l ++		3519045	1					
ANR	3519917	Identifier	l		3519045	0					
ANR	3519918	IncDec	++		3519045	1					
ANR	3519919	Identifier	offset		3519045	1					
ANR	3519920	ExpressionStatement	data [ l ++ ] = offset >> 8	1093:2:28854:28877	3519045	1	True				
ANR	3519921	AssignmentExpression	data [ l ++ ] = offset >> 8		3519045	0		=			
ANR	3519922	ArrayIndexing	data [ l ++ ]		3519045	0					
ANR	3519923	Identifier	data		3519045	0					
ANR	3519924	PostIncDecOperationExpression	l ++		3519045	1					
ANR	3519925	Identifier	l		3519045	0					
ANR	3519926	IncDec	++		3519045	1					
ANR	3519927	ShiftExpression	offset >> 8		3519045	1		>>			
ANR	3519928	Identifier	offset		3519045	0					
ANR	3519929	PrimaryExpression	8		3519045	1					
ANR	3519930	ElseStatement	else		3519045	0					
ANR	3519931	IfStatement	if ( mod == 2 || rip_rel )		3519045	0					
ANR	3519932	Condition	mod == 2 || rip_rel	1094:12:28891:28909	3519045	0	True				
ANR	3519933	OrExpression	mod == 2 || rip_rel		3519045	0		||			
ANR	3519934	EqualityExpression	mod == 2		3519045	0		==			
ANR	3519935	Identifier	mod		3519045	0					
ANR	3519936	PrimaryExpression	2		3519045	1					
ANR	3519937	Identifier	rip_rel		3519045	1					
ANR	3519938	CompoundStatement		138:33:3164:3164	3519045	1					
ANR	3519939	ExpressionStatement	data [ l ++ ] = offset	1095:2:28916:28934	3519045	0	True				
ANR	3519940	AssignmentExpression	data [ l ++ ] = offset		3519045	0		=			
ANR	3519941	ArrayIndexing	data [ l ++ ]		3519045	0					
ANR	3519942	Identifier	data		3519045	0					
ANR	3519943	PostIncDecOperationExpression	l ++		3519045	1					
ANR	3519944	Identifier	l		3519045	0					
ANR	3519945	IncDec	++		3519045	1					
ANR	3519946	Identifier	offset		3519045	1					
ANR	3519947	ExpressionStatement	data [ l ++ ] = offset >> 8	1096:2:28938:28961	3519045	1	True				
ANR	3519948	AssignmentExpression	data [ l ++ ] = offset >> 8		3519045	0		=			
ANR	3519949	ArrayIndexing	data [ l ++ ]		3519045	0					
ANR	3519950	Identifier	data		3519045	0					
ANR	3519951	PostIncDecOperationExpression	l ++		3519045	1					
ANR	3519952	Identifier	l		3519045	0					
ANR	3519953	IncDec	++		3519045	1					
ANR	3519954	ShiftExpression	offset >> 8		3519045	1		>>			
ANR	3519955	Identifier	offset		3519045	0					
ANR	3519956	PrimaryExpression	8		3519045	1					
ANR	3519957	ExpressionStatement	data [ l ++ ] = offset >> 16	1097:2:28965:28989	3519045	2	True				
ANR	3519958	AssignmentExpression	data [ l ++ ] = offset >> 16		3519045	0		=			
ANR	3519959	ArrayIndexing	data [ l ++ ]		3519045	0					
ANR	3519960	Identifier	data		3519045	0					
ANR	3519961	PostIncDecOperationExpression	l ++		3519045	1					
ANR	3519962	Identifier	l		3519045	0					
ANR	3519963	IncDec	++		3519045	1					
ANR	3519964	ShiftExpression	offset >> 16		3519045	1		>>			
ANR	3519965	Identifier	offset		3519045	0					
ANR	3519966	PrimaryExpression	16		3519045	1					
ANR	3519967	ExpressionStatement	data [ l ++ ] = offset >> 24	1098:2:28993:29017	3519045	3	True				
ANR	3519968	AssignmentExpression	data [ l ++ ] = offset >> 24		3519045	0		=			
ANR	3519969	ArrayIndexing	data [ l ++ ]		3519045	0					
ANR	3519970	Identifier	data		3519045	0					
ANR	3519971	PostIncDecOperationExpression	l ++		3519045	1					
ANR	3519972	Identifier	l		3519045	0					
ANR	3519973	IncDec	++		3519045	1					
ANR	3519974	ShiftExpression	offset >> 24		3519045	1		>>			
ANR	3519975	Identifier	offset		3519045	0					
ANR	3519976	PrimaryExpression	24		3519045	1					
ANR	3519977	ReturnStatement	return l ;	1101:1:29024:29032	3519045	28	True				
ANR	3519978	Identifier	l		3519045	0					
ANR	3519979	ReturnType	static int		3519045	1					
ANR	3519980	Identifier	opdec		3519045	2					
ANR	3519981	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3519045	3					
ANR	3519982	Parameter	RAsm * a	957:17:25709:25715	3519045	0	True				
ANR	3519983	ParameterType	RAsm *		3519045	0					
ANR	3519984	Identifier	a		3519045	1					
ANR	3519985	Parameter	ut8 * data	957:26:25718:25726	3519045	1	True				
ANR	3519986	ParameterType	ut8 *		3519045	0					
ANR	3519987	Identifier	data		3519045	1					
ANR	3519988	Parameter	const Opcode * op	957:37:25729:25744	3519045	2	True				
ANR	3519989	ParameterType	const Opcode *		3519045	0					
ANR	3519990	Identifier	op		3519045	1					
ANR	3519991	CFGEntryNode	ENTRY		3519045		True				
ANR	3519992	CFGExitNode	EXIT		3519045		True				
ANR	3519993	Symbol	op -> operands [ 0 ] . offset_sign		3519045						
ANR	3519994	Symbol	mod		3519045						
ANR	3519995	Symbol	data		3519045						
ANR	3519996	Symbol	* op		3519045						
ANR	3519997	Symbol	op -> operands [ 0 ] . dest_size		3519045						
ANR	3519998	Symbol	opcode		3519045						
ANR	3519999	Symbol	modrm		3519045						
ANR	3520000	Symbol	op -> operands [ 0 ] . scale		3519045						
ANR	3520001	Symbol	op -> operands [ 0 ] . extended		3519045						
ANR	3520002	Symbol	* op -> operands		3519045						
ANR	3520003	Symbol	reg		3519045						
ANR	3520004	Symbol	op -> operands [ 0 ] . reg		3519045						
ANR	3520005	Symbol	op -> operands [ 0 ] . offset		3519045						
ANR	3520006	Symbol	B0111		3519045						
ANR	3520007	Symbol	OT_BYTE		3519045						
ANR	3520008	Symbol	a -> bits		3519045						
ANR	3520009	Symbol	rex		3519045						
ANR	3520010	Symbol	offset		3519045						
ANR	3520011	Symbol	use_sib		3519045						
ANR	3520012	Symbol	index		3519045						
ANR	3520013	Symbol	size		3519045						
ANR	3520014	Symbol	* op -> operands [ 0 ] . scale		3519045						
ANR	3520015	Symbol	true		3519045						
ANR	3520016	Symbol	* * * op		3519045						
ANR	3520017	Symbol	rm		3519045						
ANR	3520018	Symbol	X86R_DI		3519045						
ANR	3520019	Symbol	B0100		3519045						
ANR	3520020	Symbol	B0101		3519045						
ANR	3520021	Symbol	op -> operands [ 0 ] . regs		3519045						
ANR	3520022	Symbol	getsib		3519045						
ANR	3520023	Symbol	OT_QWORD		3519045						
ANR	3520024	Symbol	scale		3519045						
ANR	3520025	Symbol	sib		3519045						
ANR	3520026	Symbol	* * op		3519045						
ANR	3520027	Symbol	op -> operands [ 0 ] . type		3519045						
ANR	3520028	Symbol	B0010		3519045						
ANR	3520029	Symbol	B0011		3519045						
ANR	3520030	Symbol	OT_MEMORY		3519045						
ANR	3520031	Symbol	use_rex		3519045						
ANR	3520032	Symbol	a		3519045						
ANR	3520033	Symbol	op		3519045						
ANR	3520034	Symbol	OT_WORD		3519045						
ANR	3520035	Symbol	X86R_BP		3519045						
ANR	3520036	Symbol	op -> operands [ 0 ] . explicit_size		3519045						
ANR	3520037	Symbol	ALL_SIZE		3519045						
ANR	3520038	Symbol	false		3519045						
ANR	3520039	Symbol	X86R_BX		3519045						
ANR	3520040	Symbol	X86R_SI		3519045						
ANR	3520041	Symbol	* a		3519045						
ANR	3520042	Symbol	* * op -> operands		3519045						
ANR	3520043	Symbol	l		3519045						
ANR	3520044	Symbol	X86R_RIP		3519045						
ANR	3520045	Symbol	op -> operands [ 1 ] . type		3519045						
ANR	3520046	Symbol	* op -> operands [ 0 ] . regs		3519045						
ANR	3520047	Symbol	rip_rel		3519045						
ANR	3520048	Symbol	B0000		3519045						
ANR	3520049	Symbol	B0001		3519045						
ANR	3520050	Symbol	op -> operands		3519045						
ANR	3520051	Symbol	* data		3519045						
ANR	3520052	Symbol	OT_DWORD		3519045						
ANR	3520053	Function	opidiv	1104:0:29037:29596							
ANR	3520054	FunctionDef	"opidiv (RAsm * a , ut8 * data , const Opcode * op)"		3520053	0					
ANR	3520055	CompoundStatement		1104:56:29093:29596	3520053	0					
ANR	3520056	ExpressionStatement	is_valid_registers ( op )	1105:1:29096:29119	3520053	0	True				
ANR	3520057	CallExpression	is_valid_registers ( op )		3520053	0					
ANR	3520058	Callee	is_valid_registers		3520053	0					
ANR	3520059	Identifier	is_valid_registers		3520053	0					
ANR	3520060	ArgumentList	op		3520053	1					
ANR	3520061	Argument	op		3520053	0					
ANR	3520062	Identifier	op		3520053	0					
ANR	3520063	IdentifierDeclStatement	int l = 0 ;	1106:1:29122:29131	3520053	1	True				
ANR	3520064	IdentifierDecl	l = 0		3520053	0					
ANR	3520065	IdentifierDeclType	int		3520053	0					
ANR	3520066	Identifier	l		3520053	1					
ANR	3520067	AssignmentExpression	l = 0		3520053	2		=			
ANR	3520068	Identifier	l		3520053	0					
ANR	3520069	PrimaryExpression	0		3520053	1					
ANR	3520070	IfStatement	if ( op -> operands [ 0 ] . type & OT_QWORD )		3520053	2					
ANR	3520071	Condition	op -> operands [ 0 ] . type & OT_QWORD	1108:6:29140:29170	3520053	0	True				
ANR	3520072	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		3520053	0		&			
ANR	3520073	MemberAccess	op -> operands [ 0 ] . type		3520053	0					
ANR	3520074	ArrayIndexing	op -> operands [ 0 ]		3520053	0					
ANR	3520075	PtrMemberAccess	op -> operands		3520053	0					
ANR	3520076	Identifier	op		3520053	0					
ANR	3520077	Identifier	operands		3520053	1					
ANR	3520078	PrimaryExpression	0		3520053	1					
ANR	3520079	Identifier	type		3520053	1					
ANR	3520080	Identifier	OT_QWORD		3520053	1					
ANR	3520081	CompoundStatement		5:40:80:80	3520053	1					
ANR	3520082	ExpressionStatement	data [ l ++ ] = 0x48	1109:2:29178:29194	3520053	0	True				
ANR	3520083	AssignmentExpression	data [ l ++ ] = 0x48		3520053	0		=			
ANR	3520084	ArrayIndexing	data [ l ++ ]		3520053	0					
ANR	3520085	Identifier	data		3520053	0					
ANR	3520086	PostIncDecOperationExpression	l ++		3520053	1					
ANR	3520087	Identifier	l		3520053	0					
ANR	3520088	IncDec	++		3520053	1					
ANR	3520089	PrimaryExpression	0x48		3520053	1					
ANR	3520090	SwitchStatement	switch ( op -> operands_count )		3520053	3					
ANR	3520091	Condition	op -> operands_count	1111:9:29208:29225	3520053	0	True				
ANR	3520092	PtrMemberAccess	op -> operands_count		3520053	0					
ANR	3520093	Identifier	op		3520053	0					
ANR	3520094	Identifier	operands_count		3520053	1					
ANR	3520095	CompoundStatement		8:29:134:134	3520053	1					
ANR	3520096	Label	case 1 :	1112:1:29231:29237	3520053	0	True				
ANR	3520097	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		3520053	1					
ANR	3520098	Condition	op -> operands [ 0 ] . type & OT_WORD	1113:7:29246:29275	3520053	0	True				
ANR	3520099	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		3520053	0		&			
ANR	3520100	MemberAccess	op -> operands [ 0 ] . type		3520053	0					
ANR	3520101	ArrayIndexing	op -> operands [ 0 ]		3520053	0					
ANR	3520102	PtrMemberAccess	op -> operands		3520053	0					
ANR	3520103	Identifier	op		3520053	0					
ANR	3520104	Identifier	operands		3520053	1					
ANR	3520105	PrimaryExpression	0		3520053	1					
ANR	3520106	Identifier	type		3520053	1					
ANR	3520107	Identifier	OT_WORD		3520053	1					
ANR	3520108	CompoundStatement		10:40:185:185	3520053	1					
ANR	3520109	ExpressionStatement	data [ l ++ ] = 0x66	1114:3:29284:29300	3520053	0	True				
ANR	3520110	AssignmentExpression	data [ l ++ ] = 0x66		3520053	0		=			
ANR	3520111	ArrayIndexing	data [ l ++ ]		3520053	0					
ANR	3520112	Identifier	data		3520053	0					
ANR	3520113	PostIncDecOperationExpression	l ++		3520053	1					
ANR	3520114	Identifier	l		3520053	0					
ANR	3520115	IncDec	++		3520053	1					
ANR	3520116	PrimaryExpression	0x66		3520053	1					
ANR	3520117	IfStatement	if ( op -> operands [ 0 ] . type & OT_BYTE )		3520053	2					
ANR	3520118	Condition	op -> operands [ 0 ] . type & OT_BYTE	1116:6:29312:29341	3520053	0	True				
ANR	3520119	BitAndExpression	op -> operands [ 0 ] . type & OT_BYTE		3520053	0		&			
ANR	3520120	MemberAccess	op -> operands [ 0 ] . type		3520053	0					
ANR	3520121	ArrayIndexing	op -> operands [ 0 ]		3520053	0					
ANR	3520122	PtrMemberAccess	op -> operands		3520053	0					
ANR	3520123	Identifier	op		3520053	0					
ANR	3520124	Identifier	operands		3520053	1					
ANR	3520125	PrimaryExpression	0		3520053	1					
ANR	3520126	Identifier	type		3520053	1					
ANR	3520127	Identifier	OT_BYTE		3520053	1					
ANR	3520128	CompoundStatement		13:38:250:250	3520053	1					
ANR	3520129	ExpressionStatement	data [ l ++ ] = 0xf6	1117:3:29349:29365	3520053	0	True				
ANR	3520130	AssignmentExpression	data [ l ++ ] = 0xf6		3520053	0		=			
ANR	3520131	ArrayIndexing	data [ l ++ ]		3520053	0					
ANR	3520132	Identifier	data		3520053	0					
ANR	3520133	PostIncDecOperationExpression	l ++		3520053	1					
ANR	3520134	Identifier	l		3520053	0					
ANR	3520135	IncDec	++		3520053	1					
ANR	3520136	PrimaryExpression	0xf6		3520053	1					
ANR	3520137	ElseStatement	else		3520053	0					
ANR	3520138	CompoundStatement		15:9:282:282	3520053	0					
ANR	3520139	ExpressionStatement	data [ l ++ ] = 0xf7	1119:3:29381:29397	3520053	0	True				
ANR	3520140	AssignmentExpression	data [ l ++ ] = 0xf7		3520053	0		=			
ANR	3520141	ArrayIndexing	data [ l ++ ]		3520053	0					
ANR	3520142	Identifier	data		3520053	0					
ANR	3520143	PostIncDecOperationExpression	l ++		3520053	1					
ANR	3520144	Identifier	l		3520053	0					
ANR	3520145	IncDec	++		3520053	1					
ANR	3520146	PrimaryExpression	0xf7		3520053	1					
ANR	3520147	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3520053	3					
ANR	3520148	Condition	op -> operands [ 0 ] . type & OT_MEMORY	1121:6:29409:29440	3520053	0	True				
ANR	3520149	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3520053	0		&			
ANR	3520150	MemberAccess	op -> operands [ 0 ] . type		3520053	0					
ANR	3520151	ArrayIndexing	op -> operands [ 0 ]		3520053	0					
ANR	3520152	PtrMemberAccess	op -> operands		3520053	0					
ANR	3520153	Identifier	op		3520053	0					
ANR	3520154	Identifier	operands		3520053	1					
ANR	3520155	PrimaryExpression	0		3520053	1					
ANR	3520156	Identifier	type		3520053	1					
ANR	3520157	Identifier	OT_MEMORY		3520053	1					
ANR	3520158	CompoundStatement		18:40:349:349	3520053	1					
ANR	3520159	ExpressionStatement	data [ l ++ ] = 0x38 | op -> operands [ 0 ] . regs [ 0 ]	1122:3:29448:29490	3520053	0	True				
ANR	3520160	AssignmentExpression	data [ l ++ ] = 0x38 | op -> operands [ 0 ] . regs [ 0 ]		3520053	0		=			
ANR	3520161	ArrayIndexing	data [ l ++ ]		3520053	0					
ANR	3520162	Identifier	data		3520053	0					
ANR	3520163	PostIncDecOperationExpression	l ++		3520053	1					
ANR	3520164	Identifier	l		3520053	0					
ANR	3520165	IncDec	++		3520053	1					
ANR	3520166	InclusiveOrExpression	0x38 | op -> operands [ 0 ] . regs [ 0 ]		3520053	1		|			
ANR	3520167	PrimaryExpression	0x38		3520053	0					
ANR	3520168	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3520053	1					
ANR	3520169	MemberAccess	op -> operands [ 0 ] . regs		3520053	0					
ANR	3520170	ArrayIndexing	op -> operands [ 0 ]		3520053	0					
ANR	3520171	PtrMemberAccess	op -> operands		3520053	0					
ANR	3520172	Identifier	op		3520053	0					
ANR	3520173	Identifier	operands		3520053	1					
ANR	3520174	PrimaryExpression	0		3520053	1					
ANR	3520175	Identifier	regs		3520053	1					
ANR	3520176	PrimaryExpression	0		3520053	1					
ANR	3520177	ElseStatement	else		3520053	0					
ANR	3520178	CompoundStatement		20:9:407:407	3520053	0					
ANR	3520179	ExpressionStatement	data [ l ++ ] = 0xf8 | op -> operands [ 0 ] . reg	1124:3:29506:29544	3520053	0	True				
ANR	3520180	AssignmentExpression	data [ l ++ ] = 0xf8 | op -> operands [ 0 ] . reg		3520053	0		=			
ANR	3520181	ArrayIndexing	data [ l ++ ]		3520053	0					
ANR	3520182	Identifier	data		3520053	0					
ANR	3520183	PostIncDecOperationExpression	l ++		3520053	1					
ANR	3520184	Identifier	l		3520053	0					
ANR	3520185	IncDec	++		3520053	1					
ANR	3520186	InclusiveOrExpression	0xf8 | op -> operands [ 0 ] . reg		3520053	1		|			
ANR	3520187	PrimaryExpression	0xf8		3520053	0					
ANR	3520188	MemberAccess	op -> operands [ 0 ] . reg		3520053	1					
ANR	3520189	ArrayIndexing	op -> operands [ 0 ]		3520053	0					
ANR	3520190	PtrMemberAccess	op -> operands		3520053	0					
ANR	3520191	Identifier	op		3520053	0					
ANR	3520192	Identifier	operands		3520053	1					
ANR	3520193	PrimaryExpression	0		3520053	1					
ANR	3520194	Identifier	reg		3520053	1					
ANR	3520195	BreakStatement	break ;	1126:2:29552:29557	3520053	4	True				
ANR	3520196	Label	default :	1127:1:29560:29567	3520053	5	True				
ANR	3520197	Identifier	default		3520053	0					
ANR	3520198	ReturnStatement	return - 1 ;	1128:2:29571:29580	3520053	6	True				
ANR	3520199	UnaryOperationExpression	- 1		3520053	0					
ANR	3520200	UnaryOperator	-		3520053	0					
ANR	3520201	PrimaryExpression	1		3520053	1					
ANR	3520202	ReturnStatement	return l ;	1130:1:29586:29594	3520053	4	True				
ANR	3520203	Identifier	l		3520053	0					
ANR	3520204	ReturnType	static int		3520053	1					
ANR	3520205	Identifier	opidiv		3520053	2					
ANR	3520206	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3520053	3					
ANR	3520207	Parameter	RAsm * a	1104:18:29055:29061	3520053	0	True				
ANR	3520208	ParameterType	RAsm *		3520053	0					
ANR	3520209	Identifier	a		3520053	1					
ANR	3520210	Parameter	ut8 * data	1104:27:29064:29072	3520053	1	True				
ANR	3520211	ParameterType	ut8 *		3520053	0					
ANR	3520212	Identifier	data		3520053	1					
ANR	3520213	Parameter	const Opcode * op	1104:38:29075:29090	3520053	2	True				
ANR	3520214	ParameterType	const Opcode *		3520053	0					
ANR	3520215	Identifier	op		3520053	1					
ANR	3520216	CFGEntryNode	ENTRY		3520053		True				
ANR	3520217	CFGExitNode	EXIT		3520053		True				
ANR	3520218	Symbol	a		3520053						
ANR	3520219	Symbol	op		3520053						
ANR	3520220	Symbol	OT_WORD		3520053						
ANR	3520221	Symbol	OT_QWORD		3520053						
ANR	3520222	Symbol	data		3520053						
ANR	3520223	Symbol	* op		3520053						
ANR	3520224	Symbol	* * op -> operands		3520053						
ANR	3520225	Symbol	l		3520053						
ANR	3520226	Symbol	* * op		3520053						
ANR	3520227	Symbol	* op -> operands		3520053						
ANR	3520228	Symbol	op -> operands_count		3520053						
ANR	3520229	Symbol	* op -> operands [ 0 ] . regs		3520053						
ANR	3520230	Symbol	op -> operands [ 0 ] . type		3520053						
ANR	3520231	Symbol	* * * op		3520053						
ANR	3520232	Symbol	op -> operands [ 0 ] . reg		3520053						
ANR	3520233	Symbol	op -> operands		3520053						
ANR	3520234	Symbol	* data		3520053						
ANR	3520235	Symbol	OT_MEMORY		3520053						
ANR	3520236	Symbol	op -> operands [ 0 ] . regs		3520053						
ANR	3520237	Symbol	OT_BYTE		3520053						
ANR	3520238	Function	opdiv	1133:0:29599:30157							
ANR	3520239	FunctionDef	"opdiv (RAsm * a , ut8 * data , const Opcode * op)"		3520238	0					
ANR	3520240	CompoundStatement		1133:55:29654:30157	3520238	0					
ANR	3520241	ExpressionStatement	is_valid_registers ( op )	1134:1:29657:29680	3520238	0	True				
ANR	3520242	CallExpression	is_valid_registers ( op )		3520238	0					
ANR	3520243	Callee	is_valid_registers		3520238	0					
ANR	3520244	Identifier	is_valid_registers		3520238	0					
ANR	3520245	ArgumentList	op		3520238	1					
ANR	3520246	Argument	op		3520238	0					
ANR	3520247	Identifier	op		3520238	0					
ANR	3520248	IdentifierDeclStatement	int l = 0 ;	1135:1:29683:29692	3520238	1	True				
ANR	3520249	IdentifierDecl	l = 0		3520238	0					
ANR	3520250	IdentifierDeclType	int		3520238	0					
ANR	3520251	Identifier	l		3520238	1					
ANR	3520252	AssignmentExpression	l = 0		3520238	2		=			
ANR	3520253	Identifier	l		3520238	0					
ANR	3520254	PrimaryExpression	0		3520238	1					
ANR	3520255	IfStatement	if ( op -> operands [ 0 ] . type & OT_QWORD )		3520238	2					
ANR	3520256	Condition	op -> operands [ 0 ] . type & OT_QWORD	1137:6:29701:29731	3520238	0	True				
ANR	3520257	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		3520238	0		&			
ANR	3520258	MemberAccess	op -> operands [ 0 ] . type		3520238	0					
ANR	3520259	ArrayIndexing	op -> operands [ 0 ]		3520238	0					
ANR	3520260	PtrMemberAccess	op -> operands		3520238	0					
ANR	3520261	Identifier	op		3520238	0					
ANR	3520262	Identifier	operands		3520238	1					
ANR	3520263	PrimaryExpression	0		3520238	1					
ANR	3520264	Identifier	type		3520238	1					
ANR	3520265	Identifier	OT_QWORD		3520238	1					
ANR	3520266	CompoundStatement		5:40:80:80	3520238	1					
ANR	3520267	ExpressionStatement	data [ l ++ ] = 0x48	1138:2:29739:29755	3520238	0	True				
ANR	3520268	AssignmentExpression	data [ l ++ ] = 0x48		3520238	0		=			
ANR	3520269	ArrayIndexing	data [ l ++ ]		3520238	0					
ANR	3520270	Identifier	data		3520238	0					
ANR	3520271	PostIncDecOperationExpression	l ++		3520238	1					
ANR	3520272	Identifier	l		3520238	0					
ANR	3520273	IncDec	++		3520238	1					
ANR	3520274	PrimaryExpression	0x48		3520238	1					
ANR	3520275	SwitchStatement	switch ( op -> operands_count )		3520238	3					
ANR	3520276	Condition	op -> operands_count	1140:9:29769:29786	3520238	0	True				
ANR	3520277	PtrMemberAccess	op -> operands_count		3520238	0					
ANR	3520278	Identifier	op		3520238	0					
ANR	3520279	Identifier	operands_count		3520238	1					
ANR	3520280	CompoundStatement		8:29:134:134	3520238	1					
ANR	3520281	Label	case 1 :	1141:1:29792:29798	3520238	0	True				
ANR	3520282	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		3520238	1					
ANR	3520283	Condition	op -> operands [ 0 ] . type & OT_WORD	1142:7:29807:29836	3520238	0	True				
ANR	3520284	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		3520238	0		&			
ANR	3520285	MemberAccess	op -> operands [ 0 ] . type		3520238	0					
ANR	3520286	ArrayIndexing	op -> operands [ 0 ]		3520238	0					
ANR	3520287	PtrMemberAccess	op -> operands		3520238	0					
ANR	3520288	Identifier	op		3520238	0					
ANR	3520289	Identifier	operands		3520238	1					
ANR	3520290	PrimaryExpression	0		3520238	1					
ANR	3520291	Identifier	type		3520238	1					
ANR	3520292	Identifier	OT_WORD		3520238	1					
ANR	3520293	CompoundStatement		10:40:185:185	3520238	1					
ANR	3520294	ExpressionStatement	data [ l ++ ] = 0x66	1143:3:29845:29861	3520238	0	True				
ANR	3520295	AssignmentExpression	data [ l ++ ] = 0x66		3520238	0		=			
ANR	3520296	ArrayIndexing	data [ l ++ ]		3520238	0					
ANR	3520297	Identifier	data		3520238	0					
ANR	3520298	PostIncDecOperationExpression	l ++		3520238	1					
ANR	3520299	Identifier	l		3520238	0					
ANR	3520300	IncDec	++		3520238	1					
ANR	3520301	PrimaryExpression	0x66		3520238	1					
ANR	3520302	IfStatement	if ( op -> operands [ 0 ] . type & OT_BYTE )		3520238	2					
ANR	3520303	Condition	op -> operands [ 0 ] . type & OT_BYTE	1145:6:29873:29902	3520238	0	True				
ANR	3520304	BitAndExpression	op -> operands [ 0 ] . type & OT_BYTE		3520238	0		&			
ANR	3520305	MemberAccess	op -> operands [ 0 ] . type		3520238	0					
ANR	3520306	ArrayIndexing	op -> operands [ 0 ]		3520238	0					
ANR	3520307	PtrMemberAccess	op -> operands		3520238	0					
ANR	3520308	Identifier	op		3520238	0					
ANR	3520309	Identifier	operands		3520238	1					
ANR	3520310	PrimaryExpression	0		3520238	1					
ANR	3520311	Identifier	type		3520238	1					
ANR	3520312	Identifier	OT_BYTE		3520238	1					
ANR	3520313	CompoundStatement		13:38:250:250	3520238	1					
ANR	3520314	ExpressionStatement	data [ l ++ ] = 0xf6	1146:3:29910:29926	3520238	0	True				
ANR	3520315	AssignmentExpression	data [ l ++ ] = 0xf6		3520238	0		=			
ANR	3520316	ArrayIndexing	data [ l ++ ]		3520238	0					
ANR	3520317	Identifier	data		3520238	0					
ANR	3520318	PostIncDecOperationExpression	l ++		3520238	1					
ANR	3520319	Identifier	l		3520238	0					
ANR	3520320	IncDec	++		3520238	1					
ANR	3520321	PrimaryExpression	0xf6		3520238	1					
ANR	3520322	ElseStatement	else		3520238	0					
ANR	3520323	CompoundStatement		15:9:282:282	3520238	0					
ANR	3520324	ExpressionStatement	data [ l ++ ] = 0xf7	1148:3:29942:29958	3520238	0	True				
ANR	3520325	AssignmentExpression	data [ l ++ ] = 0xf7		3520238	0		=			
ANR	3520326	ArrayIndexing	data [ l ++ ]		3520238	0					
ANR	3520327	Identifier	data		3520238	0					
ANR	3520328	PostIncDecOperationExpression	l ++		3520238	1					
ANR	3520329	Identifier	l		3520238	0					
ANR	3520330	IncDec	++		3520238	1					
ANR	3520331	PrimaryExpression	0xf7		3520238	1					
ANR	3520332	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3520238	3					
ANR	3520333	Condition	op -> operands [ 0 ] . type & OT_MEMORY	1150:6:29970:30001	3520238	0	True				
ANR	3520334	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3520238	0		&			
ANR	3520335	MemberAccess	op -> operands [ 0 ] . type		3520238	0					
ANR	3520336	ArrayIndexing	op -> operands [ 0 ]		3520238	0					
ANR	3520337	PtrMemberAccess	op -> operands		3520238	0					
ANR	3520338	Identifier	op		3520238	0					
ANR	3520339	Identifier	operands		3520238	1					
ANR	3520340	PrimaryExpression	0		3520238	1					
ANR	3520341	Identifier	type		3520238	1					
ANR	3520342	Identifier	OT_MEMORY		3520238	1					
ANR	3520343	CompoundStatement		18:40:349:349	3520238	1					
ANR	3520344	ExpressionStatement	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]	1151:3:30009:30051	3520238	0	True				
ANR	3520345	AssignmentExpression	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]		3520238	0		=			
ANR	3520346	ArrayIndexing	data [ l ++ ]		3520238	0					
ANR	3520347	Identifier	data		3520238	0					
ANR	3520348	PostIncDecOperationExpression	l ++		3520238	1					
ANR	3520349	Identifier	l		3520238	0					
ANR	3520350	IncDec	++		3520238	1					
ANR	3520351	InclusiveOrExpression	0x30 | op -> operands [ 0 ] . regs [ 0 ]		3520238	1		|			
ANR	3520352	PrimaryExpression	0x30		3520238	0					
ANR	3520353	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3520238	1					
ANR	3520354	MemberAccess	op -> operands [ 0 ] . regs		3520238	0					
ANR	3520355	ArrayIndexing	op -> operands [ 0 ]		3520238	0					
ANR	3520356	PtrMemberAccess	op -> operands		3520238	0					
ANR	3520357	Identifier	op		3520238	0					
ANR	3520358	Identifier	operands		3520238	1					
ANR	3520359	PrimaryExpression	0		3520238	1					
ANR	3520360	Identifier	regs		3520238	1					
ANR	3520361	PrimaryExpression	0		3520238	1					
ANR	3520362	ElseStatement	else		3520238	0					
ANR	3520363	CompoundStatement		20:9:407:407	3520238	0					
ANR	3520364	ExpressionStatement	data [ l ++ ] = 0xf0 | op -> operands [ 0 ] . reg	1153:3:30067:30105	3520238	0	True				
ANR	3520365	AssignmentExpression	data [ l ++ ] = 0xf0 | op -> operands [ 0 ] . reg		3520238	0		=			
ANR	3520366	ArrayIndexing	data [ l ++ ]		3520238	0					
ANR	3520367	Identifier	data		3520238	0					
ANR	3520368	PostIncDecOperationExpression	l ++		3520238	1					
ANR	3520369	Identifier	l		3520238	0					
ANR	3520370	IncDec	++		3520238	1					
ANR	3520371	InclusiveOrExpression	0xf0 | op -> operands [ 0 ] . reg		3520238	1		|			
ANR	3520372	PrimaryExpression	0xf0		3520238	0					
ANR	3520373	MemberAccess	op -> operands [ 0 ] . reg		3520238	1					
ANR	3520374	ArrayIndexing	op -> operands [ 0 ]		3520238	0					
ANR	3520375	PtrMemberAccess	op -> operands		3520238	0					
ANR	3520376	Identifier	op		3520238	0					
ANR	3520377	Identifier	operands		3520238	1					
ANR	3520378	PrimaryExpression	0		3520238	1					
ANR	3520379	Identifier	reg		3520238	1					
ANR	3520380	BreakStatement	break ;	1155:2:30113:30118	3520238	4	True				
ANR	3520381	Label	default :	1156:1:30121:30128	3520238	5	True				
ANR	3520382	Identifier	default		3520238	0					
ANR	3520383	ReturnStatement	return - 1 ;	1157:2:30132:30141	3520238	6	True				
ANR	3520384	UnaryOperationExpression	- 1		3520238	0					
ANR	3520385	UnaryOperator	-		3520238	0					
ANR	3520386	PrimaryExpression	1		3520238	1					
ANR	3520387	ReturnStatement	return l ;	1159:1:30147:30155	3520238	4	True				
ANR	3520388	Identifier	l		3520238	0					
ANR	3520389	ReturnType	static int		3520238	1					
ANR	3520390	Identifier	opdiv		3520238	2					
ANR	3520391	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3520238	3					
ANR	3520392	Parameter	RAsm * a	1133:17:29616:29622	3520238	0	True				
ANR	3520393	ParameterType	RAsm *		3520238	0					
ANR	3520394	Identifier	a		3520238	1					
ANR	3520395	Parameter	ut8 * data	1133:26:29625:29633	3520238	1	True				
ANR	3520396	ParameterType	ut8 *		3520238	0					
ANR	3520397	Identifier	data		3520238	1					
ANR	3520398	Parameter	const Opcode * op	1133:37:29636:29651	3520238	2	True				
ANR	3520399	ParameterType	const Opcode *		3520238	0					
ANR	3520400	Identifier	op		3520238	1					
ANR	3520401	CFGEntryNode	ENTRY		3520238		True				
ANR	3520402	CFGExitNode	EXIT		3520238		True				
ANR	3520403	Symbol	a		3520238						
ANR	3520404	Symbol	op		3520238						
ANR	3520405	Symbol	OT_WORD		3520238						
ANR	3520406	Symbol	OT_QWORD		3520238						
ANR	3520407	Symbol	data		3520238						
ANR	3520408	Symbol	* op		3520238						
ANR	3520409	Symbol	* * op -> operands		3520238						
ANR	3520410	Symbol	l		3520238						
ANR	3520411	Symbol	* * op		3520238						
ANR	3520412	Symbol	* op -> operands		3520238						
ANR	3520413	Symbol	op -> operands_count		3520238						
ANR	3520414	Symbol	* op -> operands [ 0 ] . regs		3520238						
ANR	3520415	Symbol	op -> operands [ 0 ] . type		3520238						
ANR	3520416	Symbol	* * * op		3520238						
ANR	3520417	Symbol	op -> operands [ 0 ] . reg		3520238						
ANR	3520418	Symbol	op -> operands		3520238						
ANR	3520419	Symbol	* data		3520238						
ANR	3520420	Symbol	OT_MEMORY		3520238						
ANR	3520421	Symbol	op -> operands [ 0 ] . regs		3520238						
ANR	3520422	Symbol	OT_BYTE		3520238						
ANR	3520423	Function	opimul	1162:0:30160:34296							
ANR	3520424	FunctionDef	"opimul (RAsm * a , ut8 * data , const Opcode * op)"		3520423	0					
ANR	3520425	CompoundStatement		1162:56:30216:34296	3520423	0					
ANR	3520426	ExpressionStatement	is_valid_registers ( op )	1163:1:30219:30242	3520423	0	True				
ANR	3520427	CallExpression	is_valid_registers ( op )		3520423	0					
ANR	3520428	Callee	is_valid_registers		3520423	0					
ANR	3520429	Identifier	is_valid_registers		3520423	0					
ANR	3520430	ArgumentList	op		3520423	1					
ANR	3520431	Argument	op		3520423	0					
ANR	3520432	Identifier	op		3520423	0					
ANR	3520433	IdentifierDeclStatement	int l = 0 ;	1164:1:30245:30254	3520423	1	True				
ANR	3520434	IdentifierDecl	l = 0		3520423	0					
ANR	3520435	IdentifierDeclType	int		3520423	0					
ANR	3520436	Identifier	l		3520423	1					
ANR	3520437	AssignmentExpression	l = 0		3520423	2		=			
ANR	3520438	Identifier	l		3520423	0					
ANR	3520439	PrimaryExpression	0		3520423	1					
ANR	3520440	IdentifierDeclStatement	int offset = 0 ;	1165:1:30257:30271	3520423	2	True				
ANR	3520441	IdentifierDecl	offset = 0		3520423	0					
ANR	3520442	IdentifierDeclType	int		3520423	0					
ANR	3520443	Identifier	offset		3520423	1					
ANR	3520444	AssignmentExpression	offset = 0		3520423	2		=			
ANR	3520445	Identifier	offset		3520423	0					
ANR	3520446	PrimaryExpression	0		3520423	1					
ANR	3520447	IdentifierDeclStatement	st64 immediate = 0 ;	1166:1:30274:30292	3520423	3	True				
ANR	3520448	IdentifierDecl	immediate = 0		3520423	0					
ANR	3520449	IdentifierDeclType	st64		3520423	0					
ANR	3520450	Identifier	immediate		3520423	1					
ANR	3520451	AssignmentExpression	immediate = 0		3520423	2		=			
ANR	3520452	Identifier	immediate		3520423	0					
ANR	3520453	PrimaryExpression	0		3520423	1					
ANR	3520454	IfStatement	if ( op -> operands [ 0 ] . type & OT_QWORD )		3520423	4					
ANR	3520455	Condition	op -> operands [ 0 ] . type & OT_QWORD	1168:6:30301:30331	3520423	0	True				
ANR	3520456	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		3520423	0		&			
ANR	3520457	MemberAccess	op -> operands [ 0 ] . type		3520423	0					
ANR	3520458	ArrayIndexing	op -> operands [ 0 ]		3520423	0					
ANR	3520459	PtrMemberAccess	op -> operands		3520423	0					
ANR	3520460	Identifier	op		3520423	0					
ANR	3520461	Identifier	operands		3520423	1					
ANR	3520462	PrimaryExpression	0		3520423	1					
ANR	3520463	Identifier	type		3520423	1					
ANR	3520464	Identifier	OT_QWORD		3520423	1					
ANR	3520465	CompoundStatement		7:40:118:118	3520423	1					
ANR	3520466	ExpressionStatement	data [ l ++ ] = 0x48	1169:2:30339:30355	3520423	0	True				
ANR	3520467	AssignmentExpression	data [ l ++ ] = 0x48		3520423	0		=			
ANR	3520468	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3520469	Identifier	data		3520423	0					
ANR	3520470	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3520471	Identifier	l		3520423	0					
ANR	3520472	IncDec	++		3520423	1					
ANR	3520473	PrimaryExpression	0x48		3520423	1					
ANR	3520474	SwitchStatement	switch ( op -> operands_count )		3520423	5					
ANR	3520475	Condition	op -> operands_count	1171:9:30369:30386	3520423	0	True				
ANR	3520476	PtrMemberAccess	op -> operands_count		3520423	0					
ANR	3520477	Identifier	op		3520423	0					
ANR	3520478	Identifier	operands_count		3520423	1					
ANR	3520479	CompoundStatement		10:29:172:172	3520423	1					
ANR	3520480	Label	case 1 :	1172:1:30392:30398	3520423	0	True				
ANR	3520481	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		3520423	1					
ANR	3520482	Condition	op -> operands [ 0 ] . type & OT_WORD	1173:7:30407:30436	3520423	0	True				
ANR	3520483	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		3520423	0		&			
ANR	3520484	MemberAccess	op -> operands [ 0 ] . type		3520423	0					
ANR	3520485	ArrayIndexing	op -> operands [ 0 ]		3520423	0					
ANR	3520486	PtrMemberAccess	op -> operands		3520423	0					
ANR	3520487	Identifier	op		3520423	0					
ANR	3520488	Identifier	operands		3520423	1					
ANR	3520489	PrimaryExpression	0		3520423	1					
ANR	3520490	Identifier	type		3520423	1					
ANR	3520491	Identifier	OT_WORD		3520423	1					
ANR	3520492	CompoundStatement		12:40:223:223	3520423	1					
ANR	3520493	ExpressionStatement	data [ l ++ ] = 0x66	1174:3:30445:30461	3520423	0	True				
ANR	3520494	AssignmentExpression	data [ l ++ ] = 0x66		3520423	0		=			
ANR	3520495	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3520496	Identifier	data		3520423	0					
ANR	3520497	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3520498	Identifier	l		3520423	0					
ANR	3520499	IncDec	++		3520423	1					
ANR	3520500	PrimaryExpression	0x66		3520423	1					
ANR	3520501	IfStatement	if ( op -> operands [ 0 ] . type & OT_BYTE )		3520423	2					
ANR	3520502	Condition	op -> operands [ 0 ] . type & OT_BYTE	1176:6:30473:30502	3520423	0	True				
ANR	3520503	BitAndExpression	op -> operands [ 0 ] . type & OT_BYTE		3520423	0		&			
ANR	3520504	MemberAccess	op -> operands [ 0 ] . type		3520423	0					
ANR	3520505	ArrayIndexing	op -> operands [ 0 ]		3520423	0					
ANR	3520506	PtrMemberAccess	op -> operands		3520423	0					
ANR	3520507	Identifier	op		3520423	0					
ANR	3520508	Identifier	operands		3520423	1					
ANR	3520509	PrimaryExpression	0		3520423	1					
ANR	3520510	Identifier	type		3520423	1					
ANR	3520511	Identifier	OT_BYTE		3520423	1					
ANR	3520512	CompoundStatement		15:38:288:288	3520423	1					
ANR	3520513	ExpressionStatement	data [ l ++ ] = 0xf6	1177:3:30510:30526	3520423	0	True				
ANR	3520514	AssignmentExpression	data [ l ++ ] = 0xf6		3520423	0		=			
ANR	3520515	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3520516	Identifier	data		3520423	0					
ANR	3520517	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3520518	Identifier	l		3520423	0					
ANR	3520519	IncDec	++		3520423	1					
ANR	3520520	PrimaryExpression	0xf6		3520423	1					
ANR	3520521	ElseStatement	else		3520423	0					
ANR	3520522	CompoundStatement		17:9:320:320	3520423	0					
ANR	3520523	ExpressionStatement	data [ l ++ ] = 0xf7	1179:3:30542:30558	3520423	0	True				
ANR	3520524	AssignmentExpression	data [ l ++ ] = 0xf7		3520423	0		=			
ANR	3520525	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3520526	Identifier	data		3520423	0					
ANR	3520527	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3520528	Identifier	l		3520423	0					
ANR	3520529	IncDec	++		3520423	1					
ANR	3520530	PrimaryExpression	0xf7		3520423	1					
ANR	3520531	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3520423	3					
ANR	3520532	Condition	op -> operands [ 0 ] . type & OT_MEMORY	1181:6:30570:30601	3520423	0	True				
ANR	3520533	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3520423	0		&			
ANR	3520534	MemberAccess	op -> operands [ 0 ] . type		3520423	0					
ANR	3520535	ArrayIndexing	op -> operands [ 0 ]		3520423	0					
ANR	3520536	PtrMemberAccess	op -> operands		3520423	0					
ANR	3520537	Identifier	op		3520423	0					
ANR	3520538	Identifier	operands		3520423	1					
ANR	3520539	PrimaryExpression	0		3520423	1					
ANR	3520540	Identifier	type		3520423	1					
ANR	3520541	Identifier	OT_MEMORY		3520423	1					
ANR	3520542	CompoundStatement		20:40:387:387	3520423	1					
ANR	3520543	ExpressionStatement	data [ l ++ ] = 0x28 | op -> operands [ 0 ] . regs [ 0 ]	1182:3:30609:30651	3520423	0	True				
ANR	3520544	AssignmentExpression	data [ l ++ ] = 0x28 | op -> operands [ 0 ] . regs [ 0 ]		3520423	0		=			
ANR	3520545	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3520546	Identifier	data		3520423	0					
ANR	3520547	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3520548	Identifier	l		3520423	0					
ANR	3520549	IncDec	++		3520423	1					
ANR	3520550	InclusiveOrExpression	0x28 | op -> operands [ 0 ] . regs [ 0 ]		3520423	1		|			
ANR	3520551	PrimaryExpression	0x28		3520423	0					
ANR	3520552	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3520423	1					
ANR	3520553	MemberAccess	op -> operands [ 0 ] . regs		3520423	0					
ANR	3520554	ArrayIndexing	op -> operands [ 0 ]		3520423	0					
ANR	3520555	PtrMemberAccess	op -> operands		3520423	0					
ANR	3520556	Identifier	op		3520423	0					
ANR	3520557	Identifier	operands		3520423	1					
ANR	3520558	PrimaryExpression	0		3520423	1					
ANR	3520559	Identifier	regs		3520423	1					
ANR	3520560	PrimaryExpression	0		3520423	1					
ANR	3520561	ElseStatement	else		3520423	0					
ANR	3520562	CompoundStatement		22:9:445:445	3520423	0					
ANR	3520563	ExpressionStatement	data [ l ++ ] = 0xe8 | op -> operands [ 0 ] . reg	1184:3:30667:30705	3520423	0	True				
ANR	3520564	AssignmentExpression	data [ l ++ ] = 0xe8 | op -> operands [ 0 ] . reg		3520423	0		=			
ANR	3520565	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3520566	Identifier	data		3520423	0					
ANR	3520567	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3520568	Identifier	l		3520423	0					
ANR	3520569	IncDec	++		3520423	1					
ANR	3520570	InclusiveOrExpression	0xe8 | op -> operands [ 0 ] . reg		3520423	1		|			
ANR	3520571	PrimaryExpression	0xe8		3520423	0					
ANR	3520572	MemberAccess	op -> operands [ 0 ] . reg		3520423	1					
ANR	3520573	ArrayIndexing	op -> operands [ 0 ]		3520423	0					
ANR	3520574	PtrMemberAccess	op -> operands		3520423	0					
ANR	3520575	Identifier	op		3520423	0					
ANR	3520576	Identifier	operands		3520423	1					
ANR	3520577	PrimaryExpression	0		3520423	1					
ANR	3520578	Identifier	reg		3520423	1					
ANR	3520579	BreakStatement	break ;	1186:2:30713:30718	3520423	4	True				
ANR	3520580	Label	case 2 :	1187:1:30721:30727	3520423	5	True				
ANR	3520581	IfStatement	if ( op -> operands [ 0 ] . type & OT_GPREG )		3520423	6					
ANR	3520582	Condition	op -> operands [ 0 ] . type & OT_GPREG	1188:6:30735:30765	3520423	0	True				
ANR	3520583	BitAndExpression	op -> operands [ 0 ] . type & OT_GPREG		3520423	0		&			
ANR	3520584	MemberAccess	op -> operands [ 0 ] . type		3520423	0					
ANR	3520585	ArrayIndexing	op -> operands [ 0 ]		3520423	0					
ANR	3520586	PtrMemberAccess	op -> operands		3520423	0					
ANR	3520587	Identifier	op		3520423	0					
ANR	3520588	Identifier	operands		3520423	1					
ANR	3520589	PrimaryExpression	0		3520423	1					
ANR	3520590	Identifier	type		3520423	1					
ANR	3520591	Identifier	OT_GPREG		3520423	1					
ANR	3520592	CompoundStatement		27:39:551:551	3520423	1					
ANR	3520593	IfStatement	if ( op -> operands [ 1 ] . type & OT_CONSTANT )		3520423	0					
ANR	3520594	Condition	op -> operands [ 1 ] . type & OT_CONSTANT	1189:7:30777:30810	3520423	0	True				
ANR	3520595	BitAndExpression	op -> operands [ 1 ] . type & OT_CONSTANT		3520423	0		&			
ANR	3520596	MemberAccess	op -> operands [ 1 ] . type		3520423	0					
ANR	3520597	ArrayIndexing	op -> operands [ 1 ]		3520423	0					
ANR	3520598	PtrMemberAccess	op -> operands		3520423	0					
ANR	3520599	Identifier	op		3520423	0					
ANR	3520600	Identifier	operands		3520423	1					
ANR	3520601	PrimaryExpression	1		3520423	1					
ANR	3520602	Identifier	type		3520423	1					
ANR	3520603	Identifier	OT_CONSTANT		3520423	1					
ANR	3520604	CompoundStatement		28:43:596:596	3520423	1					
ANR	3520605	IfStatement	if ( op -> operands [ 1 ] . immediate == - 1 )		3520423	0					
ANR	3520606	Condition	op -> operands [ 1 ] . immediate == - 1	1190:8:30823:30853	3520423	0	True				
ANR	3520607	EqualityExpression	op -> operands [ 1 ] . immediate == - 1		3520423	0		==			
ANR	3520608	MemberAccess	op -> operands [ 1 ] . immediate		3520423	0					
ANR	3520609	ArrayIndexing	op -> operands [ 1 ]		3520423	0					
ANR	3520610	PtrMemberAccess	op -> operands		3520423	0					
ANR	3520611	Identifier	op		3520423	0					
ANR	3520612	Identifier	operands		3520423	1					
ANR	3520613	PrimaryExpression	1		3520423	1					
ANR	3520614	Identifier	immediate		3520423	1					
ANR	3520615	UnaryOperationExpression	- 1		3520423	1					
ANR	3520616	UnaryOperator	-		3520423	0					
ANR	3520617	PrimaryExpression	1		3520423	1					
ANR	3520618	CompoundStatement		29:41:639:639	3520423	1					
ANR	3520619	ExpressionStatement	"eprintf ( ""Error: Immediate exceeds max\\n"" )"	1191:5:30863:30905	3520423	0	True				
ANR	3520620	CallExpression	"eprintf ( ""Error: Immediate exceeds max\\n"" )"		3520423	0					
ANR	3520621	Callee	eprintf		3520423	0					
ANR	3520622	Identifier	eprintf		3520423	0					
ANR	3520623	ArgumentList	"""Error: Immediate exceeds max\\n"""		3520423	1					
ANR	3520624	Argument	"""Error: Immediate exceeds max\\n"""		3520423	0					
ANR	3520625	PrimaryExpression	"""Error: Immediate exceeds max\\n"""		3520423	0					
ANR	3520626	ReturnStatement	return - 1 ;	1192:5:30912:30921	3520423	1	True				
ANR	3520627	UnaryOperationExpression	- 1		3520423	0					
ANR	3520628	UnaryOperator	-		3520423	0					
ANR	3520629	PrimaryExpression	1		3520423	1					
ANR	3520630	ExpressionStatement	immediate = op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign	1194:4:30933:30993	3520423	1	True				
ANR	3520631	AssignmentExpression	immediate = op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign		3520423	0		=			
ANR	3520632	Identifier	immediate		3520423	0					
ANR	3520633	MultiplicativeExpression	op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign		3520423	1		*			
ANR	3520634	MemberAccess	op -> operands [ 1 ] . immediate		3520423	0					
ANR	3520635	ArrayIndexing	op -> operands [ 1 ]		3520423	0					
ANR	3520636	PtrMemberAccess	op -> operands		3520423	0					
ANR	3520637	Identifier	op		3520423	0					
ANR	3520638	Identifier	operands		3520423	1					
ANR	3520639	PrimaryExpression	1		3520423	1					
ANR	3520640	Identifier	immediate		3520423	1					
ANR	3520641	MemberAccess	op -> operands [ 1 ] . sign		3520423	1					
ANR	3520642	ArrayIndexing	op -> operands [ 1 ]		3520423	0					
ANR	3520643	PtrMemberAccess	op -> operands		3520423	0					
ANR	3520644	Identifier	op		3520423	0					
ANR	3520645	Identifier	operands		3520423	1					
ANR	3520646	PrimaryExpression	1		3520423	1					
ANR	3520647	Identifier	sign		3520423	1					
ANR	3520648	IfStatement	if ( op -> operands [ 0 ] . type & OT_GPREG )		3520423	2					
ANR	3520649	Condition	op -> operands [ 0 ] . type & OT_GPREG	1195:8:31003:31033	3520423	0	True				
ANR	3520650	BitAndExpression	op -> operands [ 0 ] . type & OT_GPREG		3520423	0		&			
ANR	3520651	MemberAccess	op -> operands [ 0 ] . type		3520423	0					
ANR	3520652	ArrayIndexing	op -> operands [ 0 ]		3520423	0					
ANR	3520653	PtrMemberAccess	op -> operands		3520423	0					
ANR	3520654	Identifier	op		3520423	0					
ANR	3520655	Identifier	operands		3520423	1					
ANR	3520656	PrimaryExpression	0		3520423	1					
ANR	3520657	Identifier	type		3520423	1					
ANR	3520658	Identifier	OT_GPREG		3520423	1					
ANR	3520659	CompoundStatement		34:41:819:819	3520423	1					
ANR	3520660	IfStatement	if ( immediate >= 128 )		3520423	0					
ANR	3520661	Condition	immediate >= 128	1196:9:31047:31062	3520423	0	True				
ANR	3520662	RelationalExpression	immediate >= 128		3520423	0		>=			
ANR	3520663	Identifier	immediate		3520423	0					
ANR	3520664	PrimaryExpression	128		3520423	1					
ANR	3520665	CompoundStatement		35:27:848:848	3520423	1					
ANR	3520666	ExpressionStatement	data [ l ++ ] = 0x69	1197:6:31073:31089	3520423	0	True				
ANR	3520667	AssignmentExpression	data [ l ++ ] = 0x69		3520423	0		=			
ANR	3520668	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3520669	Identifier	data		3520423	0					
ANR	3520670	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3520671	Identifier	l		3520423	0					
ANR	3520672	IncDec	++		3520423	1					
ANR	3520673	PrimaryExpression	0x69		3520423	1					
ANR	3520674	ElseStatement	else		3520423	0					
ANR	3520675	CompoundStatement		37:12:886:886	3520423	0					
ANR	3520676	ExpressionStatement	data [ l ++ ] = 0x6b	1199:6:31111:31127	3520423	0	True				
ANR	3520677	AssignmentExpression	data [ l ++ ] = 0x6b		3520423	0		=			
ANR	3520678	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3520679	Identifier	data		3520423	0					
ANR	3520680	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3520681	Identifier	l		3520423	0					
ANR	3520682	IncDec	++		3520423	1					
ANR	3520683	PrimaryExpression	0x6b		3520423	1					
ANR	3520684	ExpressionStatement	data [ l ++ ] = 0xc0 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 0 ] . reg	1201:5:31141:31206	3520423	1	True				
ANR	3520685	AssignmentExpression	data [ l ++ ] = 0xc0 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 0 ] . reg		3520423	0		=			
ANR	3520686	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3520687	Identifier	data		3520423	0					
ANR	3520688	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3520689	Identifier	l		3520423	0					
ANR	3520690	IncDec	++		3520423	1					
ANR	3520691	InclusiveOrExpression	0xc0 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 0 ] . reg		3520423	1		|			
ANR	3520692	PrimaryExpression	0xc0		3520423	0					
ANR	3520693	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | op -> operands [ 0 ] . reg		3520423	1		|			
ANR	3520694	ShiftExpression	op -> operands [ 0 ] . reg << 3		3520423	0		<<			
ANR	3520695	MemberAccess	op -> operands [ 0 ] . reg		3520423	0					
ANR	3520696	ArrayIndexing	op -> operands [ 0 ]		3520423	0					
ANR	3520697	PtrMemberAccess	op -> operands		3520423	0					
ANR	3520698	Identifier	op		3520423	0					
ANR	3520699	Identifier	operands		3520423	1					
ANR	3520700	PrimaryExpression	0		3520423	1					
ANR	3520701	Identifier	reg		3520423	1					
ANR	3520702	PrimaryExpression	3		3520423	1					
ANR	3520703	MemberAccess	op -> operands [ 0 ] . reg		3520423	1					
ANR	3520704	ArrayIndexing	op -> operands [ 0 ]		3520423	0					
ANR	3520705	PtrMemberAccess	op -> operands		3520423	0					
ANR	3520706	Identifier	op		3520423	0					
ANR	3520707	Identifier	operands		3520423	1					
ANR	3520708	PrimaryExpression	0		3520423	1					
ANR	3520709	Identifier	reg		3520423	1					
ANR	3520710	ExpressionStatement	data [ l ++ ] = immediate	1202:5:31213:31234	3520423	2	True				
ANR	3520711	AssignmentExpression	data [ l ++ ] = immediate		3520423	0		=			
ANR	3520712	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3520713	Identifier	data		3520423	0					
ANR	3520714	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3520715	Identifier	l		3520423	0					
ANR	3520716	IncDec	++		3520423	1					
ANR	3520717	Identifier	immediate		3520423	1					
ANR	3520718	IfStatement	if ( immediate >= 128 )		3520423	3					
ANR	3520719	Condition	immediate >= 128	1203:9:31245:31260	3520423	0	True				
ANR	3520720	RelationalExpression	immediate >= 128		3520423	0		>=			
ANR	3520721	Identifier	immediate		3520423	0					
ANR	3520722	PrimaryExpression	128		3520423	1					
ANR	3520723	CompoundStatement		42:27:1046:1046	3520423	1					
ANR	3520724	ExpressionStatement	data [ l ++ ] = immediate >> 8	1204:6:31271:31297	3520423	0	True				
ANR	3520725	AssignmentExpression	data [ l ++ ] = immediate >> 8		3520423	0		=			
ANR	3520726	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3520727	Identifier	data		3520423	0					
ANR	3520728	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3520729	Identifier	l		3520423	0					
ANR	3520730	IncDec	++		3520423	1					
ANR	3520731	ShiftExpression	immediate >> 8		3520423	1		>>			
ANR	3520732	Identifier	immediate		3520423	0					
ANR	3520733	PrimaryExpression	8		3520423	1					
ANR	3520734	ExpressionStatement	data [ l ++ ] = immediate >> 16	1205:6:31305:31332	3520423	1	True				
ANR	3520735	AssignmentExpression	data [ l ++ ] = immediate >> 16		3520423	0		=			
ANR	3520736	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3520737	Identifier	data		3520423	0					
ANR	3520738	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3520739	Identifier	l		3520423	0					
ANR	3520740	IncDec	++		3520423	1					
ANR	3520741	ShiftExpression	immediate >> 16		3520423	1		>>			
ANR	3520742	Identifier	immediate		3520423	0					
ANR	3520743	PrimaryExpression	16		3520423	1					
ANR	3520744	ExpressionStatement	data [ l ++ ] = immediate >> 24	1206:6:31340:31367	3520423	2	True				
ANR	3520745	AssignmentExpression	data [ l ++ ] = immediate >> 24		3520423	0		=			
ANR	3520746	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3520747	Identifier	data		3520423	0					
ANR	3520748	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3520749	Identifier	l		3520423	0					
ANR	3520750	IncDec	++		3520423	1					
ANR	3520751	ShiftExpression	immediate >> 24		3520423	1		>>			
ANR	3520752	Identifier	immediate		3520423	0					
ANR	3520753	PrimaryExpression	24		3520423	1					
ANR	3520754	IfStatement	if ( a -> bits == 64 && immediate > UT32_MAX )		3520423	4					
ANR	3520755	Condition	a -> bits == 64 && immediate > UT32_MAX	1208:9:31385:31421	3520423	0	True				
ANR	3520756	AndExpression	a -> bits == 64 && immediate > UT32_MAX		3520423	0		&&			
ANR	3520757	EqualityExpression	a -> bits == 64		3520423	0		==			
ANR	3520758	PtrMemberAccess	a -> bits		3520423	0					
ANR	3520759	Identifier	a		3520423	0					
ANR	3520760	Identifier	bits		3520423	1					
ANR	3520761	PrimaryExpression	64		3520423	1					
ANR	3520762	RelationalExpression	immediate > UT32_MAX		3520423	1		>			
ANR	3520763	Identifier	immediate		3520423	0					
ANR	3520764	Identifier	UT32_MAX		3520423	1					
ANR	3520765	CompoundStatement		47:48:1207:1207	3520423	1					
ANR	3520766	ExpressionStatement	data [ l ++ ] = immediate >> 32	1209:6:31432:31459	3520423	0	True				
ANR	3520767	AssignmentExpression	data [ l ++ ] = immediate >> 32		3520423	0		=			
ANR	3520768	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3520769	Identifier	data		3520423	0					
ANR	3520770	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3520771	Identifier	l		3520423	0					
ANR	3520772	IncDec	++		3520423	1					
ANR	3520773	ShiftExpression	immediate >> 32		3520423	1		>>			
ANR	3520774	Identifier	immediate		3520423	0					
ANR	3520775	PrimaryExpression	32		3520423	1					
ANR	3520776	ExpressionStatement	data [ l ++ ] = immediate >> 40	1210:6:31467:31494	3520423	1	True				
ANR	3520777	AssignmentExpression	data [ l ++ ] = immediate >> 40		3520423	0		=			
ANR	3520778	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3520779	Identifier	data		3520423	0					
ANR	3520780	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3520781	Identifier	l		3520423	0					
ANR	3520782	IncDec	++		3520423	1					
ANR	3520783	ShiftExpression	immediate >> 40		3520423	1		>>			
ANR	3520784	Identifier	immediate		3520423	0					
ANR	3520785	PrimaryExpression	40		3520423	1					
ANR	3520786	ExpressionStatement	data [ l ++ ] = immediate >> 48	1211:6:31502:31529	3520423	2	True				
ANR	3520787	AssignmentExpression	data [ l ++ ] = immediate >> 48		3520423	0		=			
ANR	3520788	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3520789	Identifier	data		3520423	0					
ANR	3520790	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3520791	Identifier	l		3520423	0					
ANR	3520792	IncDec	++		3520423	1					
ANR	3520793	ShiftExpression	immediate >> 48		3520423	1		>>			
ANR	3520794	Identifier	immediate		3520423	0					
ANR	3520795	PrimaryExpression	48		3520423	1					
ANR	3520796	ExpressionStatement	data [ l ++ ] = immediate >> 56	1212:6:31537:31564	3520423	3	True				
ANR	3520797	AssignmentExpression	data [ l ++ ] = immediate >> 56		3520423	0		=			
ANR	3520798	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3520799	Identifier	data		3520423	0					
ANR	3520800	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3520801	Identifier	l		3520423	0					
ANR	3520802	IncDec	++		3520423	1					
ANR	3520803	ShiftExpression	immediate >> 56		3520423	1		>>			
ANR	3520804	Identifier	immediate		3520423	0					
ANR	3520805	PrimaryExpression	56		3520423	1					
ANR	3520806	ElseStatement	else		3520423	0					
ANR	3520807	IfStatement	if ( op -> operands [ 1 ] . type & OT_MEMORY )		3520423	0					
ANR	3520808	Condition	op -> operands [ 1 ] . type & OT_MEMORY	1215:14:31593:31624	3520423	0	True				
ANR	3520809	BitAndExpression	op -> operands [ 1 ] . type & OT_MEMORY		3520423	0		&			
ANR	3520810	MemberAccess	op -> operands [ 1 ] . type		3520423	0					
ANR	3520811	ArrayIndexing	op -> operands [ 1 ]		3520423	0					
ANR	3520812	PtrMemberAccess	op -> operands		3520423	0					
ANR	3520813	Identifier	op		3520423	0					
ANR	3520814	Identifier	operands		3520423	1					
ANR	3520815	PrimaryExpression	1		3520423	1					
ANR	3520816	Identifier	type		3520423	1					
ANR	3520817	Identifier	OT_MEMORY		3520423	1					
ANR	3520818	CompoundStatement		54:48:1410:1410	3520423	1					
ANR	3520819	ExpressionStatement	data [ l ++ ] = 0x0f	1216:4:31633:31649	3520423	0	True				
ANR	3520820	AssignmentExpression	data [ l ++ ] = 0x0f		3520423	0		=			
ANR	3520821	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3520822	Identifier	data		3520423	0					
ANR	3520823	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3520824	Identifier	l		3520423	0					
ANR	3520825	IncDec	++		3520423	1					
ANR	3520826	PrimaryExpression	0x0f		3520423	1					
ANR	3520827	ExpressionStatement	data [ l ++ ] = 0xaf	1217:4:31655:31671	3520423	1	True				
ANR	3520828	AssignmentExpression	data [ l ++ ] = 0xaf		3520423	0		=			
ANR	3520829	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3520830	Identifier	data		3520423	0					
ANR	3520831	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3520832	Identifier	l		3520423	0					
ANR	3520833	IncDec	++		3520423	1					
ANR	3520834	PrimaryExpression	0xaf		3520423	1					
ANR	3520835	IfStatement	if ( op -> operands [ 1 ] . regs [ 0 ] != X86R_UNDEFINED )		3520423	2					
ANR	3520836	Condition	op -> operands [ 1 ] . regs [ 0 ] != X86R_UNDEFINED	1218:8:31681:31721	3520423	0	True				
ANR	3520837	EqualityExpression	op -> operands [ 1 ] . regs [ 0 ] != X86R_UNDEFINED		3520423	0		!=			
ANR	3520838	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3520423	0					
ANR	3520839	MemberAccess	op -> operands [ 1 ] . regs		3520423	0					
ANR	3520840	ArrayIndexing	op -> operands [ 1 ]		3520423	0					
ANR	3520841	PtrMemberAccess	op -> operands		3520423	0					
ANR	3520842	Identifier	op		3520423	0					
ANR	3520843	Identifier	operands		3520423	1					
ANR	3520844	PrimaryExpression	1		3520423	1					
ANR	3520845	Identifier	regs		3520423	1					
ANR	3520846	PrimaryExpression	0		3520423	1					
ANR	3520847	Identifier	X86R_UNDEFINED		3520423	1					
ANR	3520848	CompoundStatement		57:51:1507:1507	3520423	1					
ANR	3520849	ExpressionStatement	offset = op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign	1219:5:31731:31792	3520423	0	True				
ANR	3520850	AssignmentExpression	offset = op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign		3520423	0		=			
ANR	3520851	Identifier	offset		3520423	0					
ANR	3520852	MultiplicativeExpression	op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign		3520423	1		*			
ANR	3520853	MemberAccess	op -> operands [ 1 ] . offset		3520423	0					
ANR	3520854	ArrayIndexing	op -> operands [ 1 ]		3520423	0					
ANR	3520855	PtrMemberAccess	op -> operands		3520423	0					
ANR	3520856	Identifier	op		3520423	0					
ANR	3520857	Identifier	operands		3520423	1					
ANR	3520858	PrimaryExpression	1		3520423	1					
ANR	3520859	Identifier	offset		3520423	1					
ANR	3520860	MemberAccess	op -> operands [ 1 ] . offset_sign		3520423	1					
ANR	3520861	ArrayIndexing	op -> operands [ 1 ]		3520423	0					
ANR	3520862	PtrMemberAccess	op -> operands		3520423	0					
ANR	3520863	Identifier	op		3520423	0					
ANR	3520864	Identifier	operands		3520423	1					
ANR	3520865	PrimaryExpression	1		3520423	1					
ANR	3520866	Identifier	offset_sign		3520423	1					
ANR	3520867	IfStatement	if ( offset != 0 )		3520423	1					
ANR	3520868	Condition	offset != 0	1220:9:31803:31813	3520423	0	True				
ANR	3520869	EqualityExpression	offset != 0		3520423	0		!=			
ANR	3520870	Identifier	offset		3520423	0					
ANR	3520871	PrimaryExpression	0		3520423	1					
ANR	3520872	CompoundStatement		59:22:1599:1599	3520423	1					
ANR	3520873	IfStatement	if ( offset >= 128 || offset <= - 128 )		3520423	0					
ANR	3520874	Condition	offset >= 128 || offset <= - 128	1221:10:31828:31858	3520423	0	True				
ANR	3520875	OrExpression	offset >= 128 || offset <= - 128		3520423	0		||			
ANR	3520876	RelationalExpression	offset >= 128		3520423	0		>=			
ANR	3520877	Identifier	offset		3520423	0					
ANR	3520878	PrimaryExpression	128		3520423	1					
ANR	3520879	RelationalExpression	offset <= - 128		3520423	1		<=			
ANR	3520880	Identifier	offset		3520423	0					
ANR	3520881	UnaryOperationExpression	- 128		3520423	1					
ANR	3520882	UnaryOperator	-		3520423	0					
ANR	3520883	PrimaryExpression	128		3520423	1					
ANR	3520884	CompoundStatement		60:43:1644:1644	3520423	1					
ANR	3520885	ExpressionStatement	data [ l ] = 0x80	1222:7:31870:31884	3520423	0	True				
ANR	3520886	AssignmentExpression	data [ l ] = 0x80		3520423	0		=			
ANR	3520887	ArrayIndexing	data [ l ]		3520423	0					
ANR	3520888	Identifier	data		3520423	0					
ANR	3520889	Identifier	l		3520423	1					
ANR	3520890	PrimaryExpression	0x80		3520423	1					
ANR	3520891	ElseStatement	else		3520423	0					
ANR	3520892	CompoundStatement		62:13:1682:1682	3520423	0					
ANR	3520893	ExpressionStatement	data [ l ] = 0x40	1224:7:31908:31922	3520423	0	True				
ANR	3520894	AssignmentExpression	data [ l ] = 0x40		3520423	0		=			
ANR	3520895	ArrayIndexing	data [ l ]		3520423	0					
ANR	3520896	Identifier	data		3520423	0					
ANR	3520897	Identifier	l		3520423	1					
ANR	3520898	PrimaryExpression	0x40		3520423	1					
ANR	3520899	ExpressionStatement	data [ l ++ ] |= op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]	1226:6:31938:32001	3520423	1	True				
ANR	3520900	AssignmentExpression	data [ l ++ ] |= op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		3520423	0		|=			
ANR	3520901	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3520902	Identifier	data		3520423	0					
ANR	3520903	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3520904	Identifier	l		3520423	0					
ANR	3520905	IncDec	++		3520423	1					
ANR	3520906	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		3520423	1		|			
ANR	3520907	ShiftExpression	op -> operands [ 0 ] . reg << 3		3520423	0		<<			
ANR	3520908	MemberAccess	op -> operands [ 0 ] . reg		3520423	0					
ANR	3520909	ArrayIndexing	op -> operands [ 0 ]		3520423	0					
ANR	3520910	PtrMemberAccess	op -> operands		3520423	0					
ANR	3520911	Identifier	op		3520423	0					
ANR	3520912	Identifier	operands		3520423	1					
ANR	3520913	PrimaryExpression	0		3520423	1					
ANR	3520914	Identifier	reg		3520423	1					
ANR	3520915	PrimaryExpression	3		3520423	1					
ANR	3520916	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3520423	1					
ANR	3520917	MemberAccess	op -> operands [ 1 ] . regs		3520423	0					
ANR	3520918	ArrayIndexing	op -> operands [ 1 ]		3520423	0					
ANR	3520919	PtrMemberAccess	op -> operands		3520423	0					
ANR	3520920	Identifier	op		3520423	0					
ANR	3520921	Identifier	operands		3520423	1					
ANR	3520922	PrimaryExpression	1		3520423	1					
ANR	3520923	Identifier	regs		3520423	1					
ANR	3520924	PrimaryExpression	0		3520423	1					
ANR	3520925	ExpressionStatement	data [ l ++ ] = offset	1227:6:32009:32027	3520423	2	True				
ANR	3520926	AssignmentExpression	data [ l ++ ] = offset		3520423	0		=			
ANR	3520927	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3520928	Identifier	data		3520423	0					
ANR	3520929	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3520930	Identifier	l		3520423	0					
ANR	3520931	IncDec	++		3520423	1					
ANR	3520932	Identifier	offset		3520423	1					
ANR	3520933	IfStatement	if ( offset >= 128 || offset <= - 128 )		3520423	3					
ANR	3520934	Condition	offset >= 128 || offset <= - 128	1228:10:32039:32069	3520423	0	True				
ANR	3520935	OrExpression	offset >= 128 || offset <= - 128		3520423	0		||			
ANR	3520936	RelationalExpression	offset >= 128		3520423	0		>=			
ANR	3520937	Identifier	offset		3520423	0					
ANR	3520938	PrimaryExpression	128		3520423	1					
ANR	3520939	RelationalExpression	offset <= - 128		3520423	1		<=			
ANR	3520940	Identifier	offset		3520423	0					
ANR	3520941	UnaryOperationExpression	- 128		3520423	1					
ANR	3520942	UnaryOperator	-		3520423	0					
ANR	3520943	PrimaryExpression	128		3520423	1					
ANR	3520944	CompoundStatement		67:43:1855:1855	3520423	1					
ANR	3520945	ExpressionStatement	data [ l ++ ] = offset >> 8	1229:7:32081:32104	3520423	0	True				
ANR	3520946	AssignmentExpression	data [ l ++ ] = offset >> 8		3520423	0		=			
ANR	3520947	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3520948	Identifier	data		3520423	0					
ANR	3520949	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3520950	Identifier	l		3520423	0					
ANR	3520951	IncDec	++		3520423	1					
ANR	3520952	ShiftExpression	offset >> 8		3520423	1		>>			
ANR	3520953	Identifier	offset		3520423	0					
ANR	3520954	PrimaryExpression	8		3520423	1					
ANR	3520955	ExpressionStatement	data [ l ++ ] = offset >> 16	1230:7:32113:32137	3520423	1	True				
ANR	3520956	AssignmentExpression	data [ l ++ ] = offset >> 16		3520423	0		=			
ANR	3520957	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3520958	Identifier	data		3520423	0					
ANR	3520959	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3520960	Identifier	l		3520423	0					
ANR	3520961	IncDec	++		3520423	1					
ANR	3520962	ShiftExpression	offset >> 16		3520423	1		>>			
ANR	3520963	Identifier	offset		3520423	0					
ANR	3520964	PrimaryExpression	16		3520423	1					
ANR	3520965	ExpressionStatement	data [ l ++ ] = offset >> 24	1231:7:32146:32170	3520423	2	True				
ANR	3520966	AssignmentExpression	data [ l ++ ] = offset >> 24		3520423	0		=			
ANR	3520967	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3520968	Identifier	data		3520423	0					
ANR	3520969	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3520970	Identifier	l		3520423	0					
ANR	3520971	IncDec	++		3520423	1					
ANR	3520972	ShiftExpression	offset >> 24		3520423	1		>>			
ANR	3520973	Identifier	offset		3520423	0					
ANR	3520974	PrimaryExpression	24		3520423	1					
ANR	3520975	ElseStatement	else		3520423	0					
ANR	3520976	CompoundStatement		72:12:1975:1975	3520423	0					
ANR	3520977	IfStatement	if ( op -> operands [ 1 ] . regs [ 1 ] != X86R_UNDEFINED )		3520423	0					
ANR	3520978	Condition	op -> operands [ 1 ] . regs [ 1 ] != X86R_UNDEFINED	1234:10:32204:32244	3520423	0	True				
ANR	3520979	EqualityExpression	op -> operands [ 1 ] . regs [ 1 ] != X86R_UNDEFINED		3520423	0		!=			
ANR	3520980	ArrayIndexing	op -> operands [ 1 ] . regs [ 1 ]		3520423	0					
ANR	3520981	MemberAccess	op -> operands [ 1 ] . regs		3520423	0					
ANR	3520982	ArrayIndexing	op -> operands [ 1 ]		3520423	0					
ANR	3520983	PtrMemberAccess	op -> operands		3520423	0					
ANR	3520984	Identifier	op		3520423	0					
ANR	3520985	Identifier	operands		3520423	1					
ANR	3520986	PrimaryExpression	1		3520423	1					
ANR	3520987	Identifier	regs		3520423	1					
ANR	3520988	PrimaryExpression	1		3520423	1					
ANR	3520989	Identifier	X86R_UNDEFINED		3520423	1					
ANR	3520990	CompoundStatement		73:53:2030:2030	3520423	1					
ANR	3520991	ExpressionStatement	data [ l ++ ] = 0x04 | op -> operands [ 0 ] . reg << 3	1235:7:32256:32299	3520423	0	True				
ANR	3520992	AssignmentExpression	data [ l ++ ] = 0x04 | op -> operands [ 0 ] . reg << 3		3520423	0		=			
ANR	3520993	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3520994	Identifier	data		3520423	0					
ANR	3520995	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3520996	Identifier	l		3520423	0					
ANR	3520997	IncDec	++		3520423	1					
ANR	3520998	InclusiveOrExpression	0x04 | op -> operands [ 0 ] . reg << 3		3520423	1		|			
ANR	3520999	PrimaryExpression	0x04		3520423	0					
ANR	3521000	ShiftExpression	op -> operands [ 0 ] . reg << 3		3520423	1		<<			
ANR	3521001	MemberAccess	op -> operands [ 0 ] . reg		3520423	0					
ANR	3521002	ArrayIndexing	op -> operands [ 0 ]		3520423	0					
ANR	3521003	PtrMemberAccess	op -> operands		3520423	0					
ANR	3521004	Identifier	op		3520423	0					
ANR	3521005	Identifier	operands		3520423	1					
ANR	3521006	PrimaryExpression	0		3520423	1					
ANR	3521007	Identifier	reg		3520423	1					
ANR	3521008	PrimaryExpression	3		3520423	1					
ANR	3521009	ExpressionStatement	data [ l ++ ] = op -> operands [ 1 ] . regs [ 1 ] << 3 | op -> operands [ 1 ] . regs [ 0 ]	1236:7:32308:32374	3520423	1	True				
ANR	3521010	AssignmentExpression	data [ l ++ ] = op -> operands [ 1 ] . regs [ 1 ] << 3 | op -> operands [ 1 ] . regs [ 0 ]		3520423	0		=			
ANR	3521011	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3521012	Identifier	data		3520423	0					
ANR	3521013	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3521014	Identifier	l		3520423	0					
ANR	3521015	IncDec	++		3520423	1					
ANR	3521016	InclusiveOrExpression	op -> operands [ 1 ] . regs [ 1 ] << 3 | op -> operands [ 1 ] . regs [ 0 ]		3520423	1		|			
ANR	3521017	ShiftExpression	op -> operands [ 1 ] . regs [ 1 ] << 3		3520423	0		<<			
ANR	3521018	ArrayIndexing	op -> operands [ 1 ] . regs [ 1 ]		3520423	0					
ANR	3521019	MemberAccess	op -> operands [ 1 ] . regs		3520423	0					
ANR	3521020	ArrayIndexing	op -> operands [ 1 ]		3520423	0					
ANR	3521021	PtrMemberAccess	op -> operands		3520423	0					
ANR	3521022	Identifier	op		3520423	0					
ANR	3521023	Identifier	operands		3520423	1					
ANR	3521024	PrimaryExpression	1		3520423	1					
ANR	3521025	Identifier	regs		3520423	1					
ANR	3521026	PrimaryExpression	1		3520423	1					
ANR	3521027	PrimaryExpression	3		3520423	1					
ANR	3521028	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3520423	1					
ANR	3521029	MemberAccess	op -> operands [ 1 ] . regs		3520423	0					
ANR	3521030	ArrayIndexing	op -> operands [ 1 ]		3520423	0					
ANR	3521031	PtrMemberAccess	op -> operands		3520423	0					
ANR	3521032	Identifier	op		3520423	0					
ANR	3521033	Identifier	operands		3520423	1					
ANR	3521034	PrimaryExpression	1		3520423	1					
ANR	3521035	Identifier	regs		3520423	1					
ANR	3521036	PrimaryExpression	0		3520423	1					
ANR	3521037	ElseStatement	else		3520423	0					
ANR	3521038	CompoundStatement		76:13:2172:2172	3520423	0					
ANR	3521039	ExpressionStatement	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]	1238:7:32398:32460	3520423	0	True				
ANR	3521040	AssignmentExpression	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		3520423	0		=			
ANR	3521041	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3521042	Identifier	data		3520423	0					
ANR	3521043	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3521044	Identifier	l		3520423	0					
ANR	3521045	IncDec	++		3520423	1					
ANR	3521046	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		3520423	1		|			
ANR	3521047	ShiftExpression	op -> operands [ 0 ] . reg << 3		3520423	0		<<			
ANR	3521048	MemberAccess	op -> operands [ 0 ] . reg		3520423	0					
ANR	3521049	ArrayIndexing	op -> operands [ 0 ]		3520423	0					
ANR	3521050	PtrMemberAccess	op -> operands		3520423	0					
ANR	3521051	Identifier	op		3520423	0					
ANR	3521052	Identifier	operands		3520423	1					
ANR	3521053	PrimaryExpression	0		3520423	1					
ANR	3521054	Identifier	reg		3520423	1					
ANR	3521055	PrimaryExpression	3		3520423	1					
ANR	3521056	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3520423	1					
ANR	3521057	MemberAccess	op -> operands [ 1 ] . regs		3520423	0					
ANR	3521058	ArrayIndexing	op -> operands [ 1 ]		3520423	0					
ANR	3521059	PtrMemberAccess	op -> operands		3520423	0					
ANR	3521060	Identifier	op		3520423	0					
ANR	3521061	Identifier	operands		3520423	1					
ANR	3521062	PrimaryExpression	1		3520423	1					
ANR	3521063	Identifier	regs		3520423	1					
ANR	3521064	PrimaryExpression	0		3520423	1					
ANR	3521065	ElseStatement	else		3520423	0					
ANR	3521066	CompoundStatement		80:11:2271:2271	3520423	0					
ANR	3521067	ExpressionStatement	immediate = op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign	1242:5:32495:32555	3520423	0	True				
ANR	3521068	AssignmentExpression	immediate = op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign		3520423	0		=			
ANR	3521069	Identifier	immediate		3520423	0					
ANR	3521070	MultiplicativeExpression	op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign		3520423	1		*			
ANR	3521071	MemberAccess	op -> operands [ 1 ] . immediate		3520423	0					
ANR	3521072	ArrayIndexing	op -> operands [ 1 ]		3520423	0					
ANR	3521073	PtrMemberAccess	op -> operands		3520423	0					
ANR	3521074	Identifier	op		3520423	0					
ANR	3521075	Identifier	operands		3520423	1					
ANR	3521076	PrimaryExpression	1		3520423	1					
ANR	3521077	Identifier	immediate		3520423	1					
ANR	3521078	MemberAccess	op -> operands [ 1 ] . sign		3520423	1					
ANR	3521079	ArrayIndexing	op -> operands [ 1 ]		3520423	0					
ANR	3521080	PtrMemberAccess	op -> operands		3520423	0					
ANR	3521081	Identifier	op		3520423	0					
ANR	3521082	Identifier	operands		3520423	1					
ANR	3521083	PrimaryExpression	1		3520423	1					
ANR	3521084	Identifier	sign		3520423	1					
ANR	3521085	ExpressionStatement	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | 0x5	1243:5:32562:32604	3520423	1	True				
ANR	3521086	AssignmentExpression	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | 0x5		3520423	0		=			
ANR	3521087	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3521088	Identifier	data		3520423	0					
ANR	3521089	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3521090	Identifier	l		3520423	0					
ANR	3521091	IncDec	++		3520423	1					
ANR	3521092	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | 0x5		3520423	1		|			
ANR	3521093	ShiftExpression	op -> operands [ 0 ] . reg << 3		3520423	0		<<			
ANR	3521094	MemberAccess	op -> operands [ 0 ] . reg		3520423	0					
ANR	3521095	ArrayIndexing	op -> operands [ 0 ]		3520423	0					
ANR	3521096	PtrMemberAccess	op -> operands		3520423	0					
ANR	3521097	Identifier	op		3520423	0					
ANR	3521098	Identifier	operands		3520423	1					
ANR	3521099	PrimaryExpression	0		3520423	1					
ANR	3521100	Identifier	reg		3520423	1					
ANR	3521101	PrimaryExpression	3		3520423	1					
ANR	3521102	PrimaryExpression	0x5		3520423	1					
ANR	3521103	ExpressionStatement	data [ l ++ ] = immediate	1244:5:32611:32632	3520423	2	True				
ANR	3521104	AssignmentExpression	data [ l ++ ] = immediate		3520423	0		=			
ANR	3521105	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3521106	Identifier	data		3520423	0					
ANR	3521107	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3521108	Identifier	l		3520423	0					
ANR	3521109	IncDec	++		3520423	1					
ANR	3521110	Identifier	immediate		3520423	1					
ANR	3521111	ExpressionStatement	data [ l ++ ] = immediate >> 8	1245:5:32639:32665	3520423	3	True				
ANR	3521112	AssignmentExpression	data [ l ++ ] = immediate >> 8		3520423	0		=			
ANR	3521113	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3521114	Identifier	data		3520423	0					
ANR	3521115	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3521116	Identifier	l		3520423	0					
ANR	3521117	IncDec	++		3520423	1					
ANR	3521118	ShiftExpression	immediate >> 8		3520423	1		>>			
ANR	3521119	Identifier	immediate		3520423	0					
ANR	3521120	PrimaryExpression	8		3520423	1					
ANR	3521121	ExpressionStatement	data [ l ++ ] = immediate >> 16	1246:5:32672:32699	3520423	4	True				
ANR	3521122	AssignmentExpression	data [ l ++ ] = immediate >> 16		3520423	0		=			
ANR	3521123	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3521124	Identifier	data		3520423	0					
ANR	3521125	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3521126	Identifier	l		3520423	0					
ANR	3521127	IncDec	++		3520423	1					
ANR	3521128	ShiftExpression	immediate >> 16		3520423	1		>>			
ANR	3521129	Identifier	immediate		3520423	0					
ANR	3521130	PrimaryExpression	16		3520423	1					
ANR	3521131	ExpressionStatement	data [ l ++ ] = immediate >> 24	1247:5:32706:32733	3520423	5	True				
ANR	3521132	AssignmentExpression	data [ l ++ ] = immediate >> 24		3520423	0		=			
ANR	3521133	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3521134	Identifier	data		3520423	0					
ANR	3521135	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3521136	Identifier	l		3520423	0					
ANR	3521137	IncDec	++		3520423	1					
ANR	3521138	ShiftExpression	immediate >> 24		3520423	1		>>			
ANR	3521139	Identifier	immediate		3520423	0					
ANR	3521140	PrimaryExpression	24		3520423	1					
ANR	3521141	ElseStatement	else		3520423	0					
ANR	3521142	IfStatement	if ( op -> operands [ 1 ] . type & OT_GPREG )		3520423	0					
ANR	3521143	Condition	op -> operands [ 1 ] . type & OT_GPREG	1249:14:32755:32785	3520423	0	True				
ANR	3521144	BitAndExpression	op -> operands [ 1 ] . type & OT_GPREG		3520423	0		&			
ANR	3521145	MemberAccess	op -> operands [ 1 ] . type		3520423	0					
ANR	3521146	ArrayIndexing	op -> operands [ 1 ]		3520423	0					
ANR	3521147	PtrMemberAccess	op -> operands		3520423	0					
ANR	3521148	Identifier	op		3520423	0					
ANR	3521149	Identifier	operands		3520423	1					
ANR	3521150	PrimaryExpression	1		3520423	1					
ANR	3521151	Identifier	type		3520423	1					
ANR	3521152	Identifier	OT_GPREG		3520423	1					
ANR	3521153	CompoundStatement		88:47:2571:2571	3520423	1					
ANR	3521154	ExpressionStatement	data [ l ++ ] = 0x0f	1250:4:32794:32810	3520423	0	True				
ANR	3521155	AssignmentExpression	data [ l ++ ] = 0x0f		3520423	0		=			
ANR	3521156	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3521157	Identifier	data		3520423	0					
ANR	3521158	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3521159	Identifier	l		3520423	0					
ANR	3521160	IncDec	++		3520423	1					
ANR	3521161	PrimaryExpression	0x0f		3520423	1					
ANR	3521162	ExpressionStatement	data [ l ++ ] = 0xaf	1251:4:32816:32832	3520423	1	True				
ANR	3521163	AssignmentExpression	data [ l ++ ] = 0xaf		3520423	0		=			
ANR	3521164	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3521165	Identifier	data		3520423	0					
ANR	3521166	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3521167	Identifier	l		3520423	0					
ANR	3521168	IncDec	++		3520423	1					
ANR	3521169	PrimaryExpression	0xaf		3520423	1					
ANR	3521170	ExpressionStatement	data [ l ++ ] = 0xc0 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . reg	1252:4:32838:32903	3520423	2	True				
ANR	3521171	AssignmentExpression	data [ l ++ ] = 0xc0 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . reg		3520423	0		=			
ANR	3521172	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3521173	Identifier	data		3520423	0					
ANR	3521174	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3521175	Identifier	l		3520423	0					
ANR	3521176	IncDec	++		3520423	1					
ANR	3521177	InclusiveOrExpression	0xc0 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . reg		3520423	1		|			
ANR	3521178	PrimaryExpression	0xc0		3520423	0					
ANR	3521179	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . reg		3520423	1		|			
ANR	3521180	ShiftExpression	op -> operands [ 0 ] . reg << 3		3520423	0		<<			
ANR	3521181	MemberAccess	op -> operands [ 0 ] . reg		3520423	0					
ANR	3521182	ArrayIndexing	op -> operands [ 0 ]		3520423	0					
ANR	3521183	PtrMemberAccess	op -> operands		3520423	0					
ANR	3521184	Identifier	op		3520423	0					
ANR	3521185	Identifier	operands		3520423	1					
ANR	3521186	PrimaryExpression	0		3520423	1					
ANR	3521187	Identifier	reg		3520423	1					
ANR	3521188	PrimaryExpression	3		3520423	1					
ANR	3521189	MemberAccess	op -> operands [ 1 ] . reg		3520423	1					
ANR	3521190	ArrayIndexing	op -> operands [ 1 ]		3520423	0					
ANR	3521191	PtrMemberAccess	op -> operands		3520423	0					
ANR	3521192	Identifier	op		3520423	0					
ANR	3521193	Identifier	operands		3520423	1					
ANR	3521194	PrimaryExpression	1		3520423	1					
ANR	3521195	Identifier	reg		3520423	1					
ANR	3521196	BreakStatement	break ;	1255:2:32916:32921	3520423	7	True				
ANR	3521197	Label	case 3 :	1256:1:32924:32930	3520423	8	True				
ANR	3521198	IfStatement	if ( op -> operands [ 0 ] . type & OT_GPREG && ( op -> operands [ 1 ] . type & OT_GPREG || op -> operands [ 1 ] . type & OT_MEMORY ) && op -> operands [ 2 ] . type & OT_CONSTANT )		3520423	9					
ANR	3521199	Condition	op -> operands [ 0 ] . type & OT_GPREG && ( op -> operands [ 1 ] . type & OT_GPREG || op -> operands [ 1 ] . type & OT_MEMORY ) && op -> operands [ 2 ] . type & OT_CONSTANT	1257:6:32938:33091	3520423	0	True				
ANR	3521200	AndExpression	op -> operands [ 0 ] . type & OT_GPREG && ( op -> operands [ 1 ] . type & OT_GPREG || op -> operands [ 1 ] . type & OT_MEMORY ) && op -> operands [ 2 ] . type & OT_CONSTANT		3520423	0		&&			
ANR	3521201	BitAndExpression	op -> operands [ 0 ] . type & OT_GPREG		3520423	0		&			
ANR	3521202	MemberAccess	op -> operands [ 0 ] . type		3520423	0					
ANR	3521203	ArrayIndexing	op -> operands [ 0 ]		3520423	0					
ANR	3521204	PtrMemberAccess	op -> operands		3520423	0					
ANR	3521205	Identifier	op		3520423	0					
ANR	3521206	Identifier	operands		3520423	1					
ANR	3521207	PrimaryExpression	0		3520423	1					
ANR	3521208	Identifier	type		3520423	1					
ANR	3521209	Identifier	OT_GPREG		3520423	1					
ANR	3521210	AndExpression	( op -> operands [ 1 ] . type & OT_GPREG || op -> operands [ 1 ] . type & OT_MEMORY ) && op -> operands [ 2 ] . type & OT_CONSTANT		3520423	1		&&			
ANR	3521211	OrExpression	op -> operands [ 1 ] . type & OT_GPREG || op -> operands [ 1 ] . type & OT_MEMORY		3520423	0		||			
ANR	3521212	BitAndExpression	op -> operands [ 1 ] . type & OT_GPREG		3520423	0		&			
ANR	3521213	MemberAccess	op -> operands [ 1 ] . type		3520423	0					
ANR	3521214	ArrayIndexing	op -> operands [ 1 ]		3520423	0					
ANR	3521215	PtrMemberAccess	op -> operands		3520423	0					
ANR	3521216	Identifier	op		3520423	0					
ANR	3521217	Identifier	operands		3520423	1					
ANR	3521218	PrimaryExpression	1		3520423	1					
ANR	3521219	Identifier	type		3520423	1					
ANR	3521220	Identifier	OT_GPREG		3520423	1					
ANR	3521221	BitAndExpression	op -> operands [ 1 ] . type & OT_MEMORY		3520423	1		&			
ANR	3521222	MemberAccess	op -> operands [ 1 ] . type		3520423	0					
ANR	3521223	ArrayIndexing	op -> operands [ 1 ]		3520423	0					
ANR	3521224	PtrMemberAccess	op -> operands		3520423	0					
ANR	3521225	Identifier	op		3520423	0					
ANR	3521226	Identifier	operands		3520423	1					
ANR	3521227	PrimaryExpression	1		3520423	1					
ANR	3521228	Identifier	type		3520423	1					
ANR	3521229	Identifier	OT_MEMORY		3520423	1					
ANR	3521230	BitAndExpression	op -> operands [ 2 ] . type & OT_CONSTANT		3520423	1		&			
ANR	3521231	MemberAccess	op -> operands [ 2 ] . type		3520423	0					
ANR	3521232	ArrayIndexing	op -> operands [ 2 ]		3520423	0					
ANR	3521233	PtrMemberAccess	op -> operands		3520423	0					
ANR	3521234	Identifier	op		3520423	0					
ANR	3521235	Identifier	operands		3520423	1					
ANR	3521236	PrimaryExpression	2		3520423	1					
ANR	3521237	Identifier	type		3520423	1					
ANR	3521238	Identifier	OT_CONSTANT		3520423	1					
ANR	3521239	CompoundStatement		98:42:2877:2877	3520423	1					
ANR	3521240	ExpressionStatement	data [ l ++ ] = 0x6b	1260:4:33100:33116	3520423	0	True				
ANR	3521241	AssignmentExpression	data [ l ++ ] = 0x6b		3520423	0		=			
ANR	3521242	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3521243	Identifier	data		3520423	0					
ANR	3521244	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3521245	Identifier	l		3520423	0					
ANR	3521246	IncDec	++		3520423	1					
ANR	3521247	PrimaryExpression	0x6b		3520423	1					
ANR	3521248	IfStatement	if ( op -> operands [ 1 ] . type & OT_MEMORY )		3520423	1					
ANR	3521249	Condition	op -> operands [ 1 ] . type & OT_MEMORY	1261:8:33126:33157	3520423	0	True				
ANR	3521250	BitAndExpression	op -> operands [ 1 ] . type & OT_MEMORY		3520423	0		&			
ANR	3521251	MemberAccess	op -> operands [ 1 ] . type		3520423	0					
ANR	3521252	ArrayIndexing	op -> operands [ 1 ]		3520423	0					
ANR	3521253	PtrMemberAccess	op -> operands		3520423	0					
ANR	3521254	Identifier	op		3520423	0					
ANR	3521255	Identifier	operands		3520423	1					
ANR	3521256	PrimaryExpression	1		3520423	1					
ANR	3521257	Identifier	type		3520423	1					
ANR	3521258	Identifier	OT_MEMORY		3520423	1					
ANR	3521259	CompoundStatement		100:42:2943:2943	3520423	1					
ANR	3521260	IfStatement	if ( op -> operands [ 1 ] . regs [ 1 ] != X86R_UNDEFINED )		3520423	0					
ANR	3521261	Condition	op -> operands [ 1 ] . regs [ 1 ] != X86R_UNDEFINED	1262:9:33171:33211	3520423	0	True				
ANR	3521262	EqualityExpression	op -> operands [ 1 ] . regs [ 1 ] != X86R_UNDEFINED		3520423	0		!=			
ANR	3521263	ArrayIndexing	op -> operands [ 1 ] . regs [ 1 ]		3520423	0					
ANR	3521264	MemberAccess	op -> operands [ 1 ] . regs		3520423	0					
ANR	3521265	ArrayIndexing	op -> operands [ 1 ]		3520423	0					
ANR	3521266	PtrMemberAccess	op -> operands		3520423	0					
ANR	3521267	Identifier	op		3520423	0					
ANR	3521268	Identifier	operands		3520423	1					
ANR	3521269	PrimaryExpression	1		3520423	1					
ANR	3521270	Identifier	regs		3520423	1					
ANR	3521271	PrimaryExpression	1		3520423	1					
ANR	3521272	Identifier	X86R_UNDEFINED		3520423	1					
ANR	3521273	CompoundStatement		101:52:2997:2997	3520423	1					
ANR	3521274	ExpressionStatement	data [ l ++ ] = 0x04 | op -> operands [ 0 ] . reg << 3	1263:6:33222:33265	3520423	0	True				
ANR	3521275	AssignmentExpression	data [ l ++ ] = 0x04 | op -> operands [ 0 ] . reg << 3		3520423	0		=			
ANR	3521276	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3521277	Identifier	data		3520423	0					
ANR	3521278	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3521279	Identifier	l		3520423	0					
ANR	3521280	IncDec	++		3520423	1					
ANR	3521281	InclusiveOrExpression	0x04 | op -> operands [ 0 ] . reg << 3		3520423	1		|			
ANR	3521282	PrimaryExpression	0x04		3520423	0					
ANR	3521283	ShiftExpression	op -> operands [ 0 ] . reg << 3		3520423	1		<<			
ANR	3521284	MemberAccess	op -> operands [ 0 ] . reg		3520423	0					
ANR	3521285	ArrayIndexing	op -> operands [ 0 ]		3520423	0					
ANR	3521286	PtrMemberAccess	op -> operands		3520423	0					
ANR	3521287	Identifier	op		3520423	0					
ANR	3521288	Identifier	operands		3520423	1					
ANR	3521289	PrimaryExpression	0		3520423	1					
ANR	3521290	Identifier	reg		3520423	1					
ANR	3521291	PrimaryExpression	3		3520423	1					
ANR	3521292	ExpressionStatement	data [ l ++ ] = op -> operands [ 1 ] . regs [ 0 ] | op -> operands [ 1 ] . regs [ 1 ] << 3	1264:6:33273:33340	3520423	1	True				
ANR	3521293	AssignmentExpression	data [ l ++ ] = op -> operands [ 1 ] . regs [ 0 ] | op -> operands [ 1 ] . regs [ 1 ] << 3		3520423	0		=			
ANR	3521294	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3521295	Identifier	data		3520423	0					
ANR	3521296	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3521297	Identifier	l		3520423	0					
ANR	3521298	IncDec	++		3520423	1					
ANR	3521299	InclusiveOrExpression	op -> operands [ 1 ] . regs [ 0 ] | op -> operands [ 1 ] . regs [ 1 ] << 3		3520423	1		|			
ANR	3521300	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3520423	0					
ANR	3521301	MemberAccess	op -> operands [ 1 ] . regs		3520423	0					
ANR	3521302	ArrayIndexing	op -> operands [ 1 ]		3520423	0					
ANR	3521303	PtrMemberAccess	op -> operands		3520423	0					
ANR	3521304	Identifier	op		3520423	0					
ANR	3521305	Identifier	operands		3520423	1					
ANR	3521306	PrimaryExpression	1		3520423	1					
ANR	3521307	Identifier	regs		3520423	1					
ANR	3521308	PrimaryExpression	0		3520423	1					
ANR	3521309	ShiftExpression	op -> operands [ 1 ] . regs [ 1 ] << 3		3520423	1		<<			
ANR	3521310	ArrayIndexing	op -> operands [ 1 ] . regs [ 1 ]		3520423	0					
ANR	3521311	MemberAccess	op -> operands [ 1 ] . regs		3520423	0					
ANR	3521312	ArrayIndexing	op -> operands [ 1 ]		3520423	0					
ANR	3521313	PtrMemberAccess	op -> operands		3520423	0					
ANR	3521314	Identifier	op		3520423	0					
ANR	3521315	Identifier	operands		3520423	1					
ANR	3521316	PrimaryExpression	1		3520423	1					
ANR	3521317	Identifier	regs		3520423	1					
ANR	3521318	PrimaryExpression	1		3520423	1					
ANR	3521319	PrimaryExpression	3		3520423	1					
ANR	3521320	ElseStatement	else		3520423	0					
ANR	3521321	CompoundStatement		104:12:3137:3137	3520423	0					
ANR	3521322	ExpressionStatement	offset = op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign	1266:6:33362:33423	3520423	0	True				
ANR	3521323	AssignmentExpression	offset = op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign		3520423	0		=			
ANR	3521324	Identifier	offset		3520423	0					
ANR	3521325	MultiplicativeExpression	op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign		3520423	1		*			
ANR	3521326	MemberAccess	op -> operands [ 1 ] . offset		3520423	0					
ANR	3521327	ArrayIndexing	op -> operands [ 1 ]		3520423	0					
ANR	3521328	PtrMemberAccess	op -> operands		3520423	0					
ANR	3521329	Identifier	op		3520423	0					
ANR	3521330	Identifier	operands		3520423	1					
ANR	3521331	PrimaryExpression	1		3520423	1					
ANR	3521332	Identifier	offset		3520423	1					
ANR	3521333	MemberAccess	op -> operands [ 1 ] . offset_sign		3520423	1					
ANR	3521334	ArrayIndexing	op -> operands [ 1 ]		3520423	0					
ANR	3521335	PtrMemberAccess	op -> operands		3520423	0					
ANR	3521336	Identifier	op		3520423	0					
ANR	3521337	Identifier	operands		3520423	1					
ANR	3521338	PrimaryExpression	1		3520423	1					
ANR	3521339	Identifier	offset_sign		3520423	1					
ANR	3521340	IfStatement	if ( offset != 0 )		3520423	1					
ANR	3521341	Condition	offset != 0	1267:10:33435:33445	3520423	0	True				
ANR	3521342	EqualityExpression	offset != 0		3520423	0		!=			
ANR	3521343	Identifier	offset		3520423	0					
ANR	3521344	PrimaryExpression	0		3520423	1					
ANR	3521345	CompoundStatement		106:23:3231:3231	3520423	1					
ANR	3521346	IfStatement	if ( offset >= 128 || offset <= - 128 )		3520423	0					
ANR	3521347	Condition	offset >= 128 || offset <= - 128	1268:11:33461:33491	3520423	0	True				
ANR	3521348	OrExpression	offset >= 128 || offset <= - 128		3520423	0		||			
ANR	3521349	RelationalExpression	offset >= 128		3520423	0		>=			
ANR	3521350	Identifier	offset		3520423	0					
ANR	3521351	PrimaryExpression	128		3520423	1					
ANR	3521352	RelationalExpression	offset <= - 128		3520423	1		<=			
ANR	3521353	Identifier	offset		3520423	0					
ANR	3521354	UnaryOperationExpression	- 128		3520423	1					
ANR	3521355	UnaryOperator	-		3520423	0					
ANR	3521356	PrimaryExpression	128		3520423	1					
ANR	3521357	CompoundStatement		107:44:3277:3277	3520423	1					
ANR	3521358	ExpressionStatement	data [ l ] = 0x80	1269:8:33504:33518	3520423	0	True				
ANR	3521359	AssignmentExpression	data [ l ] = 0x80		3520423	0		=			
ANR	3521360	ArrayIndexing	data [ l ]		3520423	0					
ANR	3521361	Identifier	data		3520423	0					
ANR	3521362	Identifier	l		3520423	1					
ANR	3521363	PrimaryExpression	0x80		3520423	1					
ANR	3521364	ElseStatement	else		3520423	0					
ANR	3521365	CompoundStatement		109:14:3317:3317	3520423	0					
ANR	3521366	ExpressionStatement	data [ l ] = 0x40	1271:8:33544:33558	3520423	0	True				
ANR	3521367	AssignmentExpression	data [ l ] = 0x40		3520423	0		=			
ANR	3521368	ArrayIndexing	data [ l ]		3520423	0					
ANR	3521369	Identifier	data		3520423	0					
ANR	3521370	Identifier	l		3520423	1					
ANR	3521371	PrimaryExpression	0x40		3520423	1					
ANR	3521372	ExpressionStatement	data [ l ++ ] |= op -> operands [ 0 ] . reg << 3	1273:7:33576:33613	3520423	1	True				
ANR	3521373	AssignmentExpression	data [ l ++ ] |= op -> operands [ 0 ] . reg << 3		3520423	0		|=			
ANR	3521374	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3521375	Identifier	data		3520423	0					
ANR	3521376	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3521377	Identifier	l		3520423	0					
ANR	3521378	IncDec	++		3520423	1					
ANR	3521379	ShiftExpression	op -> operands [ 0 ] . reg << 3		3520423	1		<<			
ANR	3521380	MemberAccess	op -> operands [ 0 ] . reg		3520423	0					
ANR	3521381	ArrayIndexing	op -> operands [ 0 ]		3520423	0					
ANR	3521382	PtrMemberAccess	op -> operands		3520423	0					
ANR	3521383	Identifier	op		3520423	0					
ANR	3521384	Identifier	operands		3520423	1					
ANR	3521385	PrimaryExpression	0		3520423	1					
ANR	3521386	Identifier	reg		3520423	1					
ANR	3521387	PrimaryExpression	3		3520423	1					
ANR	3521388	ExpressionStatement	data [ l ++ ] = offset	1274:7:33622:33640	3520423	2	True				
ANR	3521389	AssignmentExpression	data [ l ++ ] = offset		3520423	0		=			
ANR	3521390	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3521391	Identifier	data		3520423	0					
ANR	3521392	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3521393	Identifier	l		3520423	0					
ANR	3521394	IncDec	++		3520423	1					
ANR	3521395	Identifier	offset		3520423	1					
ANR	3521396	IfStatement	if ( offset >= 128 || offset <= - 128 )		3520423	3					
ANR	3521397	Condition	offset >= 128 || offset <= - 128	1275:11:33653:33683	3520423	0	True				
ANR	3521398	OrExpression	offset >= 128 || offset <= - 128		3520423	0		||			
ANR	3521399	RelationalExpression	offset >= 128		3520423	0		>=			
ANR	3521400	Identifier	offset		3520423	0					
ANR	3521401	PrimaryExpression	128		3520423	1					
ANR	3521402	RelationalExpression	offset <= - 128		3520423	1		<=			
ANR	3521403	Identifier	offset		3520423	0					
ANR	3521404	UnaryOperationExpression	- 128		3520423	1					
ANR	3521405	UnaryOperator	-		3520423	0					
ANR	3521406	PrimaryExpression	128		3520423	1					
ANR	3521407	CompoundStatement		114:44:3469:3469	3520423	1					
ANR	3521408	ExpressionStatement	data [ l ++ ] = offset >> 8	1276:8:33696:33719	3520423	0	True				
ANR	3521409	AssignmentExpression	data [ l ++ ] = offset >> 8		3520423	0		=			
ANR	3521410	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3521411	Identifier	data		3520423	0					
ANR	3521412	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3521413	Identifier	l		3520423	0					
ANR	3521414	IncDec	++		3520423	1					
ANR	3521415	ShiftExpression	offset >> 8		3520423	1		>>			
ANR	3521416	Identifier	offset		3520423	0					
ANR	3521417	PrimaryExpression	8		3520423	1					
ANR	3521418	ExpressionStatement	data [ l ++ ] = offset >> 16	1277:8:33729:33753	3520423	1	True				
ANR	3521419	AssignmentExpression	data [ l ++ ] = offset >> 16		3520423	0		=			
ANR	3521420	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3521421	Identifier	data		3520423	0					
ANR	3521422	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3521423	Identifier	l		3520423	0					
ANR	3521424	IncDec	++		3520423	1					
ANR	3521425	ShiftExpression	offset >> 16		3520423	1		>>			
ANR	3521426	Identifier	offset		3520423	0					
ANR	3521427	PrimaryExpression	16		3520423	1					
ANR	3521428	ExpressionStatement	data [ l ++ ] = offset >> 24	1278:8:33763:33787	3520423	2	True				
ANR	3521429	AssignmentExpression	data [ l ++ ] = offset >> 24		3520423	0		=			
ANR	3521430	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3521431	Identifier	data		3520423	0					
ANR	3521432	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3521433	Identifier	l		3520423	0					
ANR	3521434	IncDec	++		3520423	1					
ANR	3521435	ShiftExpression	offset >> 24		3520423	1		>>			
ANR	3521436	Identifier	offset		3520423	0					
ANR	3521437	PrimaryExpression	24		3520423	1					
ANR	3521438	ElseStatement	else		3520423	0					
ANR	3521439	CompoundStatement		119:13:3594:3594	3520423	0					
ANR	3521440	ExpressionStatement	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]	1281:7:33820:33889	3520423	0	True				
ANR	3521441	AssignmentExpression	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		3520423	0		=			
ANR	3521442	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3521443	Identifier	data		3520423	0					
ANR	3521444	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3521445	Identifier	l		3520423	0					
ANR	3521446	IncDec	++		3520423	1					
ANR	3521447	InclusiveOrExpression	0x00 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		3520423	1		|			
ANR	3521448	PrimaryExpression	0x00		3520423	0					
ANR	3521449	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		3520423	1		|			
ANR	3521450	ShiftExpression	op -> operands [ 0 ] . reg << 3		3520423	0		<<			
ANR	3521451	MemberAccess	op -> operands [ 0 ] . reg		3520423	0					
ANR	3521452	ArrayIndexing	op -> operands [ 0 ]		3520423	0					
ANR	3521453	PtrMemberAccess	op -> operands		3520423	0					
ANR	3521454	Identifier	op		3520423	0					
ANR	3521455	Identifier	operands		3520423	1					
ANR	3521456	PrimaryExpression	0		3520423	1					
ANR	3521457	Identifier	reg		3520423	1					
ANR	3521458	PrimaryExpression	3		3520423	1					
ANR	3521459	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3520423	1					
ANR	3521460	MemberAccess	op -> operands [ 1 ] . regs		3520423	0					
ANR	3521461	ArrayIndexing	op -> operands [ 1 ]		3520423	0					
ANR	3521462	PtrMemberAccess	op -> operands		3520423	0					
ANR	3521463	Identifier	op		3520423	0					
ANR	3521464	Identifier	operands		3520423	1					
ANR	3521465	PrimaryExpression	1		3520423	1					
ANR	3521466	Identifier	regs		3520423	1					
ANR	3521467	PrimaryExpression	0		3520423	1					
ANR	3521468	ElseStatement	else		3520423	0					
ANR	3521469	CompoundStatement		123:11:3700:3700	3520423	0					
ANR	3521470	ExpressionStatement	data [ l ++ ] = 0xc0 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . reg	1285:5:33924:33989	3520423	0	True				
ANR	3521471	AssignmentExpression	data [ l ++ ] = 0xc0 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . reg		3520423	0		=			
ANR	3521472	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3521473	Identifier	data		3520423	0					
ANR	3521474	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3521475	Identifier	l		3520423	0					
ANR	3521476	IncDec	++		3520423	1					
ANR	3521477	InclusiveOrExpression	0xc0 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . reg		3520423	1		|			
ANR	3521478	PrimaryExpression	0xc0		3520423	0					
ANR	3521479	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . reg		3520423	1		|			
ANR	3521480	ShiftExpression	op -> operands [ 0 ] . reg << 3		3520423	0		<<			
ANR	3521481	MemberAccess	op -> operands [ 0 ] . reg		3520423	0					
ANR	3521482	ArrayIndexing	op -> operands [ 0 ]		3520423	0					
ANR	3521483	PtrMemberAccess	op -> operands		3520423	0					
ANR	3521484	Identifier	op		3520423	0					
ANR	3521485	Identifier	operands		3520423	1					
ANR	3521486	PrimaryExpression	0		3520423	1					
ANR	3521487	Identifier	reg		3520423	1					
ANR	3521488	PrimaryExpression	3		3520423	1					
ANR	3521489	MemberAccess	op -> operands [ 1 ] . reg		3520423	1					
ANR	3521490	ArrayIndexing	op -> operands [ 1 ]		3520423	0					
ANR	3521491	PtrMemberAccess	op -> operands		3520423	0					
ANR	3521492	Identifier	op		3520423	0					
ANR	3521493	Identifier	operands		3520423	1					
ANR	3521494	PrimaryExpression	1		3520423	1					
ANR	3521495	Identifier	reg		3520423	1					
ANR	3521496	ExpressionStatement	immediate = op -> operands [ 2 ] . immediate * op -> operands [ 2 ] . sign	1287:4:34001:34061	3520423	2	True				
ANR	3521497	AssignmentExpression	immediate = op -> operands [ 2 ] . immediate * op -> operands [ 2 ] . sign		3520423	0		=			
ANR	3521498	Identifier	immediate		3520423	0					
ANR	3521499	MultiplicativeExpression	op -> operands [ 2 ] . immediate * op -> operands [ 2 ] . sign		3520423	1		*			
ANR	3521500	MemberAccess	op -> operands [ 2 ] . immediate		3520423	0					
ANR	3521501	ArrayIndexing	op -> operands [ 2 ]		3520423	0					
ANR	3521502	PtrMemberAccess	op -> operands		3520423	0					
ANR	3521503	Identifier	op		3520423	0					
ANR	3521504	Identifier	operands		3520423	1					
ANR	3521505	PrimaryExpression	2		3520423	1					
ANR	3521506	Identifier	immediate		3520423	1					
ANR	3521507	MemberAccess	op -> operands [ 2 ] . sign		3520423	1					
ANR	3521508	ArrayIndexing	op -> operands [ 2 ]		3520423	0					
ANR	3521509	PtrMemberAccess	op -> operands		3520423	0					
ANR	3521510	Identifier	op		3520423	0					
ANR	3521511	Identifier	operands		3520423	1					
ANR	3521512	PrimaryExpression	2		3520423	1					
ANR	3521513	Identifier	sign		3520423	1					
ANR	3521514	ExpressionStatement	data [ l ++ ] = immediate	1288:4:34067:34088	3520423	3	True				
ANR	3521515	AssignmentExpression	data [ l ++ ] = immediate		3520423	0		=			
ANR	3521516	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3521517	Identifier	data		3520423	0					
ANR	3521518	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3521519	Identifier	l		3520423	0					
ANR	3521520	IncDec	++		3520423	1					
ANR	3521521	Identifier	immediate		3520423	1					
ANR	3521522	IfStatement	if ( immediate >= 128 || immediate <= - 128 )		3520423	4					
ANR	3521523	Condition	immediate >= 128 || immediate <= - 128	1289:8:34098:34134	3520423	0	True				
ANR	3521524	OrExpression	immediate >= 128 || immediate <= - 128		3520423	0		||			
ANR	3521525	RelationalExpression	immediate >= 128		3520423	0		>=			
ANR	3521526	Identifier	immediate		3520423	0					
ANR	3521527	PrimaryExpression	128		3520423	1					
ANR	3521528	RelationalExpression	immediate <= - 128		3520423	1		<=			
ANR	3521529	Identifier	immediate		3520423	0					
ANR	3521530	UnaryOperationExpression	- 128		3520423	1					
ANR	3521531	UnaryOperator	-		3520423	0					
ANR	3521532	PrimaryExpression	128		3520423	1					
ANR	3521533	CompoundStatement		128:47:3920:3920	3520423	1					
ANR	3521534	ExpressionStatement	data [ l ++ ] = immediate >> 8	1290:5:34144:34170	3520423	0	True				
ANR	3521535	AssignmentExpression	data [ l ++ ] = immediate >> 8		3520423	0		=			
ANR	3521536	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3521537	Identifier	data		3520423	0					
ANR	3521538	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3521539	Identifier	l		3520423	0					
ANR	3521540	IncDec	++		3520423	1					
ANR	3521541	ShiftExpression	immediate >> 8		3520423	1		>>			
ANR	3521542	Identifier	immediate		3520423	0					
ANR	3521543	PrimaryExpression	8		3520423	1					
ANR	3521544	ExpressionStatement	data [ l ++ ] = immediate >> 16	1291:5:34177:34204	3520423	1	True				
ANR	3521545	AssignmentExpression	data [ l ++ ] = immediate >> 16		3520423	0		=			
ANR	3521546	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3521547	Identifier	data		3520423	0					
ANR	3521548	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3521549	Identifier	l		3520423	0					
ANR	3521550	IncDec	++		3520423	1					
ANR	3521551	ShiftExpression	immediate >> 16		3520423	1		>>			
ANR	3521552	Identifier	immediate		3520423	0					
ANR	3521553	PrimaryExpression	16		3520423	1					
ANR	3521554	ExpressionStatement	data [ l ++ ] = immediate >> 24	1292:5:34211:34238	3520423	2	True				
ANR	3521555	AssignmentExpression	data [ l ++ ] = immediate >> 24		3520423	0		=			
ANR	3521556	ArrayIndexing	data [ l ++ ]		3520423	0					
ANR	3521557	Identifier	data		3520423	0					
ANR	3521558	PostIncDecOperationExpression	l ++		3520423	1					
ANR	3521559	Identifier	l		3520423	0					
ANR	3521560	IncDec	++		3520423	1					
ANR	3521561	ShiftExpression	immediate >> 24		3520423	1		>>			
ANR	3521562	Identifier	immediate		3520423	0					
ANR	3521563	PrimaryExpression	24		3520423	1					
ANR	3521564	BreakStatement	break ;	1295:2:34252:34257	3520423	10	True				
ANR	3521565	Label	default :	1296:1:34260:34267	3520423	11	True				
ANR	3521566	Identifier	default		3520423	0					
ANR	3521567	ReturnStatement	return - 1 ;	1297:2:34271:34280	3520423	12	True				
ANR	3521568	UnaryOperationExpression	- 1		3520423	0					
ANR	3521569	UnaryOperator	-		3520423	0					
ANR	3521570	PrimaryExpression	1		3520423	1					
ANR	3521571	ReturnStatement	return l ;	1299:1:34286:34294	3520423	6	True				
ANR	3521572	Identifier	l		3520423	0					
ANR	3521573	ReturnType	static int		3520423	1					
ANR	3521574	Identifier	opimul		3520423	2					
ANR	3521575	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3520423	3					
ANR	3521576	Parameter	RAsm * a	1162:18:30178:30184	3520423	0	True				
ANR	3521577	ParameterType	RAsm *		3520423	0					
ANR	3521578	Identifier	a		3520423	1					
ANR	3521579	Parameter	ut8 * data	1162:27:30187:30195	3520423	1	True				
ANR	3521580	ParameterType	ut8 *		3520423	0					
ANR	3521581	Identifier	data		3520423	1					
ANR	3521582	Parameter	const Opcode * op	1162:38:30198:30213	3520423	2	True				
ANR	3521583	ParameterType	const Opcode *		3520423	0					
ANR	3521584	Identifier	op		3520423	1					
ANR	3521585	CFGEntryNode	ENTRY		3520423		True				
ANR	3521586	CFGExitNode	EXIT		3520423		True				
ANR	3521587	Symbol	UT32_MAX		3520423						
ANR	3521588	Symbol	OT_QWORD		3520423						
ANR	3521589	Symbol	data		3520423						
ANR	3521590	Symbol	* op		3520423						
ANR	3521591	Symbol	op -> operands [ 1 ] . immediate		3520423						
ANR	3521592	Symbol	* * op		3520423						
ANR	3521593	Symbol	* op -> operands [ 1 ] . regs		3520423						
ANR	3521594	Symbol	* op -> operands		3520423						
ANR	3521595	Symbol	op -> operands [ 1 ] . regs		3520423						
ANR	3521596	Symbol	op -> operands [ 0 ] . type		3520423						
ANR	3521597	Symbol	op -> operands [ 0 ] . reg		3520423						
ANR	3521598	Symbol	op -> operands [ 1 ] . offset_sign		3520423						
ANR	3521599	Symbol	OT_MEMORY		3520423						
ANR	3521600	Symbol	OT_BYTE		3520423						
ANR	3521601	Symbol	a -> bits		3520423						
ANR	3521602	Symbol	op -> operands [ 2 ] . immediate		3520423						
ANR	3521603	Symbol	a		3520423						
ANR	3521604	Symbol	op		3520423						
ANR	3521605	Symbol	OT_CONSTANT		3520423						
ANR	3521606	Symbol	OT_WORD		3520423						
ANR	3521607	Symbol	OT_GPREG		3520423						
ANR	3521608	Symbol	offset		3520423						
ANR	3521609	Symbol	op -> operands [ 1 ] . reg		3520423						
ANR	3521610	Symbol	op -> operands [ 1 ] . offset		3520423						
ANR	3521611	Symbol	* * op -> operands		3520423						
ANR	3521612	Symbol	* a		3520423						
ANR	3521613	Symbol	l		3520423						
ANR	3521614	Symbol	op -> operands [ 2 ] . type		3520423						
ANR	3521615	Symbol	op -> operands [ 2 ] . sign		3520423						
ANR	3521616	Symbol	X86R_UNDEFINED		3520423						
ANR	3521617	Symbol	immediate		3520423						
ANR	3521618	Symbol	op -> operands [ 1 ] . type		3520423						
ANR	3521619	Symbol	op -> operands_count		3520423						
ANR	3521620	Symbol	* l		3520423						
ANR	3521621	Symbol	* op -> operands [ 0 ] . regs		3520423						
ANR	3521622	Symbol	op -> operands [ 1 ] . sign		3520423						
ANR	3521623	Symbol	* * * op		3520423						
ANR	3521624	Symbol	op -> operands		3520423						
ANR	3521625	Symbol	* data		3520423						
ANR	3521626	Symbol	op -> operands [ 0 ] . regs		3520423						
ANR	3521627	Function	opin	1302:0:34299:35380							
ANR	3521628	FunctionDef	"opin (RAsm * a , ut8 * data , const Opcode * op)"		3521627	0					
ANR	3521629	CompoundStatement		1302:54:34353:35380	3521627	0					
ANR	3521630	ExpressionStatement	is_valid_registers ( op )	1303:1:34356:34379	3521627	0	True				
ANR	3521631	CallExpression	is_valid_registers ( op )		3521627	0					
ANR	3521632	Callee	is_valid_registers		3521627	0					
ANR	3521633	Identifier	is_valid_registers		3521627	0					
ANR	3521634	ArgumentList	op		3521627	1					
ANR	3521635	Argument	op		3521627	0					
ANR	3521636	Identifier	op		3521627	0					
ANR	3521637	IdentifierDeclStatement	int l = 0 ;	1304:1:34382:34391	3521627	1	True				
ANR	3521638	IdentifierDecl	l = 0		3521627	0					
ANR	3521639	IdentifierDeclType	int		3521627	0					
ANR	3521640	Identifier	l		3521627	1					
ANR	3521641	AssignmentExpression	l = 0		3521627	2		=			
ANR	3521642	Identifier	l		3521627	0					
ANR	3521643	PrimaryExpression	0		3521627	1					
ANR	3521644	IdentifierDeclStatement	st32 immediate = 0 ;	1305:1:34394:34412	3521627	2	True				
ANR	3521645	IdentifierDecl	immediate = 0		3521627	0					
ANR	3521646	IdentifierDeclType	st32		3521627	0					
ANR	3521647	Identifier	immediate		3521627	1					
ANR	3521648	AssignmentExpression	immediate = 0		3521627	2		=			
ANR	3521649	Identifier	immediate		3521627	0					
ANR	3521650	PrimaryExpression	0		3521627	1					
ANR	3521651	IfStatement	if ( op -> operands [ 1 ] . reg == X86R_DX )		3521627	3					
ANR	3521652	Condition	op -> operands [ 1 ] . reg == X86R_DX	1306:5:34419:34448	3521627	0	True				
ANR	3521653	EqualityExpression	op -> operands [ 1 ] . reg == X86R_DX		3521627	0		==			
ANR	3521654	MemberAccess	op -> operands [ 1 ] . reg		3521627	0					
ANR	3521655	ArrayIndexing	op -> operands [ 1 ]		3521627	0					
ANR	3521656	PtrMemberAccess	op -> operands		3521627	0					
ANR	3521657	Identifier	op		3521627	0					
ANR	3521658	Identifier	operands		3521627	1					
ANR	3521659	PrimaryExpression	1		3521627	1					
ANR	3521660	Identifier	reg		3521627	1					
ANR	3521661	Identifier	X86R_DX		3521627	1					
ANR	3521662	CompoundStatement		5:37:97:97	3521627	1					
ANR	3521663	IfStatement	if ( op -> operands [ 0 ] . reg == X86R_AL && op -> operands [ 0 ] . type & OT_BYTE )		3521627	0					
ANR	3521664	Condition	op -> operands [ 0 ] . reg == X86R_AL && op -> operands [ 0 ] . type & OT_BYTE	1307:6:34459:34525	3521627	0	True				
ANR	3521665	AndExpression	op -> operands [ 0 ] . reg == X86R_AL && op -> operands [ 0 ] . type & OT_BYTE		3521627	0		&&			
ANR	3521666	EqualityExpression	op -> operands [ 0 ] . reg == X86R_AL		3521627	0		==			
ANR	3521667	MemberAccess	op -> operands [ 0 ] . reg		3521627	0					
ANR	3521668	ArrayIndexing	op -> operands [ 0 ]		3521627	0					
ANR	3521669	PtrMemberAccess	op -> operands		3521627	0					
ANR	3521670	Identifier	op		3521627	0					
ANR	3521671	Identifier	operands		3521627	1					
ANR	3521672	PrimaryExpression	0		3521627	1					
ANR	3521673	Identifier	reg		3521627	1					
ANR	3521674	Identifier	X86R_AL		3521627	1					
ANR	3521675	BitAndExpression	op -> operands [ 0 ] . type & OT_BYTE		3521627	1		&			
ANR	3521676	MemberAccess	op -> operands [ 0 ] . type		3521627	0					
ANR	3521677	ArrayIndexing	op -> operands [ 0 ]		3521627	0					
ANR	3521678	PtrMemberAccess	op -> operands		3521627	0					
ANR	3521679	Identifier	op		3521627	0					
ANR	3521680	Identifier	operands		3521627	1					
ANR	3521681	PrimaryExpression	0		3521627	1					
ANR	3521682	Identifier	type		3521627	1					
ANR	3521683	Identifier	OT_BYTE		3521627	1					
ANR	3521684	CompoundStatement		7:35:174:174	3521627	1					
ANR	3521685	ExpressionStatement	data [ l ++ ] = 0xec	1309:3:34533:34549	3521627	0	True				
ANR	3521686	AssignmentExpression	data [ l ++ ] = 0xec		3521627	0		=			
ANR	3521687	ArrayIndexing	data [ l ++ ]		3521627	0					
ANR	3521688	Identifier	data		3521627	0					
ANR	3521689	PostIncDecOperationExpression	l ++		3521627	1					
ANR	3521690	Identifier	l		3521627	0					
ANR	3521691	IncDec	++		3521627	1					
ANR	3521692	PrimaryExpression	0xec		3521627	1					
ANR	3521693	ReturnStatement	return l ;	1310:3:34554:34562	3521627	1	True				
ANR	3521694	Identifier	l		3521627	0					
ANR	3521695	IfStatement	if ( op -> operands [ 0 ] . reg == X86R_AX && op -> operands [ 0 ] . type & OT_WORD )		3521627	1					
ANR	3521696	Condition	op -> operands [ 0 ] . reg == X86R_AX && op -> operands [ 0 ] . type & OT_WORD	1312:6:34574:34640	3521627	0	True				
ANR	3521697	AndExpression	op -> operands [ 0 ] . reg == X86R_AX && op -> operands [ 0 ] . type & OT_WORD		3521627	0		&&			
ANR	3521698	EqualityExpression	op -> operands [ 0 ] . reg == X86R_AX		3521627	0		==			
ANR	3521699	MemberAccess	op -> operands [ 0 ] . reg		3521627	0					
ANR	3521700	ArrayIndexing	op -> operands [ 0 ]		3521627	0					
ANR	3521701	PtrMemberAccess	op -> operands		3521627	0					
ANR	3521702	Identifier	op		3521627	0					
ANR	3521703	Identifier	operands		3521627	1					
ANR	3521704	PrimaryExpression	0		3521627	1					
ANR	3521705	Identifier	reg		3521627	1					
ANR	3521706	Identifier	X86R_AX		3521627	1					
ANR	3521707	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		3521627	1		&			
ANR	3521708	MemberAccess	op -> operands [ 0 ] . type		3521627	0					
ANR	3521709	ArrayIndexing	op -> operands [ 0 ]		3521627	0					
ANR	3521710	PtrMemberAccess	op -> operands		3521627	0					
ANR	3521711	Identifier	op		3521627	0					
ANR	3521712	Identifier	operands		3521627	1					
ANR	3521713	PrimaryExpression	0		3521627	1					
ANR	3521714	Identifier	type		3521627	1					
ANR	3521715	Identifier	OT_WORD		3521627	1					
ANR	3521716	CompoundStatement		12:35:289:289	3521627	1					
ANR	3521717	ExpressionStatement	data [ l ++ ] = 0x66	1314:3:34648:34664	3521627	0	True				
ANR	3521718	AssignmentExpression	data [ l ++ ] = 0x66		3521627	0		=			
ANR	3521719	ArrayIndexing	data [ l ++ ]		3521627	0					
ANR	3521720	Identifier	data		3521627	0					
ANR	3521721	PostIncDecOperationExpression	l ++		3521627	1					
ANR	3521722	Identifier	l		3521627	0					
ANR	3521723	IncDec	++		3521627	1					
ANR	3521724	PrimaryExpression	0x66		3521627	1					
ANR	3521725	ExpressionStatement	data [ l ++ ] = 0xed	1315:3:34669:34685	3521627	1	True				
ANR	3521726	AssignmentExpression	data [ l ++ ] = 0xed		3521627	0		=			
ANR	3521727	ArrayIndexing	data [ l ++ ]		3521627	0					
ANR	3521728	Identifier	data		3521627	0					
ANR	3521729	PostIncDecOperationExpression	l ++		3521627	1					
ANR	3521730	Identifier	l		3521627	0					
ANR	3521731	IncDec	++		3521627	1					
ANR	3521732	PrimaryExpression	0xed		3521627	1					
ANR	3521733	ReturnStatement	return l ;	1316:3:34690:34698	3521627	2	True				
ANR	3521734	Identifier	l		3521627	0					
ANR	3521735	IfStatement	if ( op -> operands [ 0 ] . reg == X86R_EAX && op -> operands [ 0 ] . type & OT_DWORD )		3521627	2					
ANR	3521736	Condition	op -> operands [ 0 ] . reg == X86R_EAX && op -> operands [ 0 ] . type & OT_DWORD	1318:6:34710:34778	3521627	0	True				
ANR	3521737	AndExpression	op -> operands [ 0 ] . reg == X86R_EAX && op -> operands [ 0 ] . type & OT_DWORD		3521627	0		&&			
ANR	3521738	EqualityExpression	op -> operands [ 0 ] . reg == X86R_EAX		3521627	0		==			
ANR	3521739	MemberAccess	op -> operands [ 0 ] . reg		3521627	0					
ANR	3521740	ArrayIndexing	op -> operands [ 0 ]		3521627	0					
ANR	3521741	PtrMemberAccess	op -> operands		3521627	0					
ANR	3521742	Identifier	op		3521627	0					
ANR	3521743	Identifier	operands		3521627	1					
ANR	3521744	PrimaryExpression	0		3521627	1					
ANR	3521745	Identifier	reg		3521627	1					
ANR	3521746	Identifier	X86R_EAX		3521627	1					
ANR	3521747	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		3521627	1		&			
ANR	3521748	MemberAccess	op -> operands [ 0 ] . type		3521627	0					
ANR	3521749	ArrayIndexing	op -> operands [ 0 ]		3521627	0					
ANR	3521750	PtrMemberAccess	op -> operands		3521627	0					
ANR	3521751	Identifier	op		3521627	0					
ANR	3521752	Identifier	operands		3521627	1					
ANR	3521753	PrimaryExpression	0		3521627	1					
ANR	3521754	Identifier	type		3521627	1					
ANR	3521755	Identifier	OT_DWORD		3521627	1					
ANR	3521756	CompoundStatement		18:36:427:427	3521627	1					
ANR	3521757	ExpressionStatement	data [ l ++ ] = 0xed	1320:3:34786:34802	3521627	0	True				
ANR	3521758	AssignmentExpression	data [ l ++ ] = 0xed		3521627	0		=			
ANR	3521759	ArrayIndexing	data [ l ++ ]		3521627	0					
ANR	3521760	Identifier	data		3521627	0					
ANR	3521761	PostIncDecOperationExpression	l ++		3521627	1					
ANR	3521762	Identifier	l		3521627	0					
ANR	3521763	IncDec	++		3521627	1					
ANR	3521764	PrimaryExpression	0xed		3521627	1					
ANR	3521765	ReturnStatement	return l ;	1321:3:34807:34815	3521627	1	True				
ANR	3521766	Identifier	l		3521627	0					
ANR	3521767	ElseStatement	else		3521627	0					
ANR	3521768	IfStatement	if ( op -> operands [ 1 ] . type & OT_CONSTANT )		3521627	0					
ANR	3521769	Condition	op -> operands [ 1 ] . type & OT_CONSTANT	1323:12:34833:34866	3521627	0	True				
ANR	3521770	BitAndExpression	op -> operands [ 1 ] . type & OT_CONSTANT		3521627	0		&			
ANR	3521771	MemberAccess	op -> operands [ 1 ] . type		3521627	0					
ANR	3521772	ArrayIndexing	op -> operands [ 1 ]		3521627	0					
ANR	3521773	PtrMemberAccess	op -> operands		3521627	0					
ANR	3521774	Identifier	op		3521627	0					
ANR	3521775	Identifier	operands		3521627	1					
ANR	3521776	PrimaryExpression	1		3521627	1					
ANR	3521777	Identifier	type		3521627	1					
ANR	3521778	Identifier	OT_CONSTANT		3521627	1					
ANR	3521779	CompoundStatement		22:48:515:515	3521627	1					
ANR	3521780	ExpressionStatement	immediate = op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign	1324:2:34873:34933	3521627	0	True				
ANR	3521781	AssignmentExpression	immediate = op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign		3521627	0		=			
ANR	3521782	Identifier	immediate		3521627	0					
ANR	3521783	MultiplicativeExpression	op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign		3521627	1		*			
ANR	3521784	MemberAccess	op -> operands [ 1 ] . immediate		3521627	0					
ANR	3521785	ArrayIndexing	op -> operands [ 1 ]		3521627	0					
ANR	3521786	PtrMemberAccess	op -> operands		3521627	0					
ANR	3521787	Identifier	op		3521627	0					
ANR	3521788	Identifier	operands		3521627	1					
ANR	3521789	PrimaryExpression	1		3521627	1					
ANR	3521790	Identifier	immediate		3521627	1					
ANR	3521791	MemberAccess	op -> operands [ 1 ] . sign		3521627	1					
ANR	3521792	ArrayIndexing	op -> operands [ 1 ]		3521627	0					
ANR	3521793	PtrMemberAccess	op -> operands		3521627	0					
ANR	3521794	Identifier	op		3521627	0					
ANR	3521795	Identifier	operands		3521627	1					
ANR	3521796	PrimaryExpression	1		3521627	1					
ANR	3521797	Identifier	sign		3521627	1					
ANR	3521798	IfStatement	if ( immediate > 255 || immediate < - 128 )		3521627	1					
ANR	3521799	Condition	immediate > 255 || immediate < - 128	1325:6:34941:34975	3521627	0	True				
ANR	3521800	OrExpression	immediate > 255 || immediate < - 128		3521627	0		||			
ANR	3521801	RelationalExpression	immediate > 255		3521627	0		>			
ANR	3521802	Identifier	immediate		3521627	0					
ANR	3521803	PrimaryExpression	255		3521627	1					
ANR	3521804	RelationalExpression	immediate < - 128		3521627	1		<			
ANR	3521805	Identifier	immediate		3521627	0					
ANR	3521806	UnaryOperationExpression	- 128		3521627	1					
ANR	3521807	UnaryOperator	-		3521627	0					
ANR	3521808	PrimaryExpression	128		3521627	1					
ANR	3521809	CompoundStatement		24:43:624:624	3521627	1					
ANR	3521810	ReturnStatement	return - 1 ;	1326:3:34983:34992	3521627	0	True				
ANR	3521811	UnaryOperationExpression	- 1		3521627	0					
ANR	3521812	UnaryOperator	-		3521627	0					
ANR	3521813	PrimaryExpression	1		3521627	1					
ANR	3521814	IfStatement	if ( op -> operands [ 0 ] . reg == X86R_AL && op -> operands [ 0 ] . type & OT_BYTE )		3521627	2					
ANR	3521815	Condition	op -> operands [ 0 ] . reg == X86R_AL && op -> operands [ 0 ] . type & OT_BYTE	1328:6:35004:35070	3521627	0	True				
ANR	3521816	AndExpression	op -> operands [ 0 ] . reg == X86R_AL && op -> operands [ 0 ] . type & OT_BYTE		3521627	0		&&			
ANR	3521817	EqualityExpression	op -> operands [ 0 ] . reg == X86R_AL		3521627	0		==			
ANR	3521818	MemberAccess	op -> operands [ 0 ] . reg		3521627	0					
ANR	3521819	ArrayIndexing	op -> operands [ 0 ]		3521627	0					
ANR	3521820	PtrMemberAccess	op -> operands		3521627	0					
ANR	3521821	Identifier	op		3521627	0					
ANR	3521822	Identifier	operands		3521627	1					
ANR	3521823	PrimaryExpression	0		3521627	1					
ANR	3521824	Identifier	reg		3521627	1					
ANR	3521825	Identifier	X86R_AL		3521627	1					
ANR	3521826	BitAndExpression	op -> operands [ 0 ] . type & OT_BYTE		3521627	1		&			
ANR	3521827	MemberAccess	op -> operands [ 0 ] . type		3521627	0					
ANR	3521828	ArrayIndexing	op -> operands [ 0 ]		3521627	0					
ANR	3521829	PtrMemberAccess	op -> operands		3521627	0					
ANR	3521830	Identifier	op		3521627	0					
ANR	3521831	Identifier	operands		3521627	1					
ANR	3521832	PrimaryExpression	0		3521627	1					
ANR	3521833	Identifier	type		3521627	1					
ANR	3521834	Identifier	OT_BYTE		3521627	1					
ANR	3521835	CompoundStatement		28:35:719:719	3521627	1					
ANR	3521836	ExpressionStatement	data [ l ++ ] = 0xe4	1330:3:35078:35094	3521627	0	True				
ANR	3521837	AssignmentExpression	data [ l ++ ] = 0xe4		3521627	0		=			
ANR	3521838	ArrayIndexing	data [ l ++ ]		3521627	0					
ANR	3521839	Identifier	data		3521627	0					
ANR	3521840	PostIncDecOperationExpression	l ++		3521627	1					
ANR	3521841	Identifier	l		3521627	0					
ANR	3521842	IncDec	++		3521627	1					
ANR	3521843	PrimaryExpression	0xe4		3521627	1					
ANR	3521844	ElseStatement	else		3521627	0					
ANR	3521845	IfStatement	if ( op -> operands [ 0 ] . reg == X86R_AX && op -> operands [ 0 ] . type & OT_BYTE )		3521627	0					
ANR	3521846	Condition	op -> operands [ 0 ] . reg == X86R_AX && op -> operands [ 0 ] . type & OT_BYTE	1331:13:35109:35179	3521627	0	True				
ANR	3521847	AndExpression	op -> operands [ 0 ] . reg == X86R_AX && op -> operands [ 0 ] . type & OT_BYTE		3521627	0		&&			
ANR	3521848	EqualityExpression	op -> operands [ 0 ] . reg == X86R_AX		3521627	0		==			
ANR	3521849	MemberAccess	op -> operands [ 0 ] . reg		3521627	0					
ANR	3521850	ArrayIndexing	op -> operands [ 0 ]		3521627	0					
ANR	3521851	PtrMemberAccess	op -> operands		3521627	0					
ANR	3521852	Identifier	op		3521627	0					
ANR	3521853	Identifier	operands		3521627	1					
ANR	3521854	PrimaryExpression	0		3521627	1					
ANR	3521855	Identifier	reg		3521627	1					
ANR	3521856	Identifier	X86R_AX		3521627	1					
ANR	3521857	BitAndExpression	op -> operands [ 0 ] . type & OT_BYTE		3521627	1		&			
ANR	3521858	MemberAccess	op -> operands [ 0 ] . type		3521627	0					
ANR	3521859	ArrayIndexing	op -> operands [ 0 ]		3521627	0					
ANR	3521860	PtrMemberAccess	op -> operands		3521627	0					
ANR	3521861	Identifier	op		3521627	0					
ANR	3521862	Identifier	operands		3521627	1					
ANR	3521863	PrimaryExpression	0		3521627	1					
ANR	3521864	Identifier	type		3521627	1					
ANR	3521865	Identifier	OT_BYTE		3521627	1					
ANR	3521866	CompoundStatement		31:39:828:828	3521627	1					
ANR	3521867	ExpressionStatement	data [ l ++ ] = 0x66	1333:3:35187:35203	3521627	0	True				
ANR	3521868	AssignmentExpression	data [ l ++ ] = 0x66		3521627	0		=			
ANR	3521869	ArrayIndexing	data [ l ++ ]		3521627	0					
ANR	3521870	Identifier	data		3521627	0					
ANR	3521871	PostIncDecOperationExpression	l ++		3521627	1					
ANR	3521872	Identifier	l		3521627	0					
ANR	3521873	IncDec	++		3521627	1					
ANR	3521874	PrimaryExpression	0x66		3521627	1					
ANR	3521875	ExpressionStatement	data [ l ++ ] = 0xe5	1334:3:35208:35224	3521627	1	True				
ANR	3521876	AssignmentExpression	data [ l ++ ] = 0xe5		3521627	0		=			
ANR	3521877	ArrayIndexing	data [ l ++ ]		3521627	0					
ANR	3521878	Identifier	data		3521627	0					
ANR	3521879	PostIncDecOperationExpression	l ++		3521627	1					
ANR	3521880	Identifier	l		3521627	0					
ANR	3521881	IncDec	++		3521627	1					
ANR	3521882	PrimaryExpression	0xe5		3521627	1					
ANR	3521883	ElseStatement	else		3521627	0					
ANR	3521884	IfStatement	if ( op -> operands [ 0 ] . reg == X86R_EAX && op -> operands [ 0 ] . type & OT_DWORD )		3521627	0					
ANR	3521885	Condition	op -> operands [ 0 ] . reg == X86R_EAX && op -> operands [ 0 ] . type & OT_DWORD	1335:13:35239:35311	3521627	0	True				
ANR	3521886	AndExpression	op -> operands [ 0 ] . reg == X86R_EAX && op -> operands [ 0 ] . type & OT_DWORD		3521627	0		&&			
ANR	3521887	EqualityExpression	op -> operands [ 0 ] . reg == X86R_EAX		3521627	0		==			
ANR	3521888	MemberAccess	op -> operands [ 0 ] . reg		3521627	0					
ANR	3521889	ArrayIndexing	op -> operands [ 0 ]		3521627	0					
ANR	3521890	PtrMemberAccess	op -> operands		3521627	0					
ANR	3521891	Identifier	op		3521627	0					
ANR	3521892	Identifier	operands		3521627	1					
ANR	3521893	PrimaryExpression	0		3521627	1					
ANR	3521894	Identifier	reg		3521627	1					
ANR	3521895	Identifier	X86R_EAX		3521627	1					
ANR	3521896	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		3521627	1		&			
ANR	3521897	MemberAccess	op -> operands [ 0 ] . type		3521627	0					
ANR	3521898	ArrayIndexing	op -> operands [ 0 ]		3521627	0					
ANR	3521899	PtrMemberAccess	op -> operands		3521627	0					
ANR	3521900	Identifier	op		3521627	0					
ANR	3521901	Identifier	operands		3521627	1					
ANR	3521902	PrimaryExpression	0		3521627	1					
ANR	3521903	Identifier	type		3521627	1					
ANR	3521904	Identifier	OT_DWORD		3521627	1					
ANR	3521905	CompoundStatement		35:40:960:960	3521627	1					
ANR	3521906	ExpressionStatement	data [ l ++ ] = 0xe5	1337:3:35319:35335	3521627	0	True				
ANR	3521907	AssignmentExpression	data [ l ++ ] = 0xe5		3521627	0		=			
ANR	3521908	ArrayIndexing	data [ l ++ ]		3521627	0					
ANR	3521909	Identifier	data		3521627	0					
ANR	3521910	PostIncDecOperationExpression	l ++		3521627	1					
ANR	3521911	Identifier	l		3521627	0					
ANR	3521912	IncDec	++		3521627	1					
ANR	3521913	PrimaryExpression	0xe5		3521627	1					
ANR	3521914	ExpressionStatement	data [ l ++ ] = immediate	1339:2:35343:35364	3521627	3	True				
ANR	3521915	AssignmentExpression	data [ l ++ ] = immediate		3521627	0		=			
ANR	3521916	ArrayIndexing	data [ l ++ ]		3521627	0					
ANR	3521917	Identifier	data		3521627	0					
ANR	3521918	PostIncDecOperationExpression	l ++		3521627	1					
ANR	3521919	Identifier	l		3521627	0					
ANR	3521920	IncDec	++		3521627	1					
ANR	3521921	Identifier	immediate		3521627	1					
ANR	3521922	ReturnStatement	return l ;	1341:1:35370:35378	3521627	4	True				
ANR	3521923	Identifier	l		3521627	0					
ANR	3521924	ReturnType	static int		3521627	1					
ANR	3521925	Identifier	opin		3521627	2					
ANR	3521926	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3521627	3					
ANR	3521927	Parameter	RAsm * a	1302:16:34315:34321	3521627	0	True				
ANR	3521928	ParameterType	RAsm *		3521627	0					
ANR	3521929	Identifier	a		3521627	1					
ANR	3521930	Parameter	ut8 * data	1302:25:34324:34332	3521627	1	True				
ANR	3521931	ParameterType	ut8 *		3521627	0					
ANR	3521932	Identifier	data		3521627	1					
ANR	3521933	Parameter	const Opcode * op	1302:36:34335:34350	3521627	2	True				
ANR	3521934	ParameterType	const Opcode *		3521627	0					
ANR	3521935	Identifier	op		3521627	1					
ANR	3521936	CFGEntryNode	ENTRY		3521627		True				
ANR	3521937	CFGExitNode	EXIT		3521627		True				
ANR	3521938	Symbol	X86R_EAX		3521627						
ANR	3521939	Symbol	a		3521627						
ANR	3521940	Symbol	op		3521627						
ANR	3521941	Symbol	OT_CONSTANT		3521627						
ANR	3521942	Symbol	OT_WORD		3521627						
ANR	3521943	Symbol	data		3521627						
ANR	3521944	Symbol	op -> operands [ 1 ] . reg		3521627						
ANR	3521945	Symbol	X86R_DX		3521627						
ANR	3521946	Symbol	* op		3521627						
ANR	3521947	Symbol	X86R_AX		3521627						
ANR	3521948	Symbol	op -> operands [ 1 ] . immediate		3521627						
ANR	3521949	Symbol	l		3521627						
ANR	3521950	Symbol	* * op		3521627						
ANR	3521951	Symbol	* op -> operands		3521627						
ANR	3521952	Symbol	immediate		3521627						
ANR	3521953	Symbol	op -> operands [ 1 ] . type		3521627						
ANR	3521954	Symbol	op -> operands [ 1 ] . sign		3521627						
ANR	3521955	Symbol	op -> operands [ 0 ] . type		3521627						
ANR	3521956	Symbol	op -> operands [ 0 ] . reg		3521627						
ANR	3521957	Symbol	op -> operands		3521627						
ANR	3521958	Symbol	X86R_AL		3521627						
ANR	3521959	Symbol	* data		3521627						
ANR	3521960	Symbol	OT_BYTE		3521627						
ANR	3521961	Symbol	OT_DWORD		3521627						
ANR	3521962	Function	opclflush	1344:0:35383:36030							
ANR	3521963	FunctionDef	"opclflush (RAsm * a , ut8 * data , const Opcode * op)"		3521962	0					
ANR	3521964	CompoundStatement		1344:59:35442:36030	3521962	0					
ANR	3521965	ExpressionStatement	is_valid_registers ( op )	1345:1:35445:35468	3521962	0	True				
ANR	3521966	CallExpression	is_valid_registers ( op )		3521962	0					
ANR	3521967	Callee	is_valid_registers		3521962	0					
ANR	3521968	Identifier	is_valid_registers		3521962	0					
ANR	3521969	ArgumentList	op		3521962	1					
ANR	3521970	Argument	op		3521962	0					
ANR	3521971	Identifier	op		3521962	0					
ANR	3521972	IdentifierDeclStatement	int l = 0 ;	1346:1:35471:35480	3521962	1	True				
ANR	3521973	IdentifierDecl	l = 0		3521962	0					
ANR	3521974	IdentifierDeclType	int		3521962	0					
ANR	3521975	Identifier	l		3521962	1					
ANR	3521976	AssignmentExpression	l = 0		3521962	2		=			
ANR	3521977	Identifier	l		3521962	0					
ANR	3521978	PrimaryExpression	0		3521962	1					
ANR	3521979	IdentifierDeclStatement	int offset = 0 ;	1347:1:35483:35497	3521962	2	True				
ANR	3521980	IdentifierDecl	offset = 0		3521962	0					
ANR	3521981	IdentifierDeclType	int		3521962	0					
ANR	3521982	Identifier	offset		3521962	1					
ANR	3521983	AssignmentExpression	offset = 0		3521962	2		=			
ANR	3521984	Identifier	offset		3521962	0					
ANR	3521985	PrimaryExpression	0		3521962	1					
ANR	3521986	IdentifierDeclStatement	int mod_byte = 0 ;	1348:1:35500:35516	3521962	3	True				
ANR	3521987	IdentifierDecl	mod_byte = 0		3521962	0					
ANR	3521988	IdentifierDeclType	int		3521962	0					
ANR	3521989	Identifier	mod_byte		3521962	1					
ANR	3521990	AssignmentExpression	mod_byte = 0		3521962	2		=			
ANR	3521991	Identifier	mod_byte		3521962	0					
ANR	3521992	PrimaryExpression	0		3521962	1					
ANR	3521993	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3521962	4					
ANR	3521994	Condition	op -> operands [ 0 ] . type & OT_MEMORY	1350:5:35524:35555	3521962	0	True				
ANR	3521995	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3521962	0		&			
ANR	3521996	MemberAccess	op -> operands [ 0 ] . type		3521962	0					
ANR	3521997	ArrayIndexing	op -> operands [ 0 ]		3521962	0					
ANR	3521998	PtrMemberAccess	op -> operands		3521962	0					
ANR	3521999	Identifier	op		3521962	0					
ANR	3522000	Identifier	operands		3521962	1					
ANR	3522001	PrimaryExpression	0		3521962	1					
ANR	3522002	Identifier	type		3521962	1					
ANR	3522003	Identifier	OT_MEMORY		3521962	1					
ANR	3522004	CompoundStatement		7:39:115:115	3521962	1					
ANR	3522005	ExpressionStatement	data [ l ++ ] = 0x0f	1351:2:35562:35578	3521962	0	True				
ANR	3522006	AssignmentExpression	data [ l ++ ] = 0x0f		3521962	0		=			
ANR	3522007	ArrayIndexing	data [ l ++ ]		3521962	0					
ANR	3522008	Identifier	data		3521962	0					
ANR	3522009	PostIncDecOperationExpression	l ++		3521962	1					
ANR	3522010	Identifier	l		3521962	0					
ANR	3522011	IncDec	++		3521962	1					
ANR	3522012	PrimaryExpression	0x0f		3521962	1					
ANR	3522013	ExpressionStatement	data [ l ++ ] = 0xae	1352:2:35582:35598	3521962	1	True				
ANR	3522014	AssignmentExpression	data [ l ++ ] = 0xae		3521962	0		=			
ANR	3522015	ArrayIndexing	data [ l ++ ]		3521962	0					
ANR	3522016	Identifier	data		3521962	0					
ANR	3522017	PostIncDecOperationExpression	l ++		3521962	1					
ANR	3522018	Identifier	l		3521962	0					
ANR	3522019	IncDec	++		3521962	1					
ANR	3522020	PrimaryExpression	0xae		3521962	1					
ANR	3522021	ExpressionStatement	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign	1353:2:35602:35663	3521962	2	True				
ANR	3522022	AssignmentExpression	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		3521962	0		=			
ANR	3522023	Identifier	offset		3521962	0					
ANR	3522024	MultiplicativeExpression	op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		3521962	1		*			
ANR	3522025	MemberAccess	op -> operands [ 0 ] . offset		3521962	0					
ANR	3522026	ArrayIndexing	op -> operands [ 0 ]		3521962	0					
ANR	3522027	PtrMemberAccess	op -> operands		3521962	0					
ANR	3522028	Identifier	op		3521962	0					
ANR	3522029	Identifier	operands		3521962	1					
ANR	3522030	PrimaryExpression	0		3521962	1					
ANR	3522031	Identifier	offset		3521962	1					
ANR	3522032	MemberAccess	op -> operands [ 0 ] . offset_sign		3521962	1					
ANR	3522033	ArrayIndexing	op -> operands [ 0 ]		3521962	0					
ANR	3522034	PtrMemberAccess	op -> operands		3521962	0					
ANR	3522035	Identifier	op		3521962	0					
ANR	3522036	Identifier	operands		3521962	1					
ANR	3522037	PrimaryExpression	0		3521962	1					
ANR	3522038	Identifier	offset_sign		3521962	1					
ANR	3522039	IfStatement	if ( offset )		3521962	3					
ANR	3522040	Condition	offset	1354:6:35671:35676	3521962	0	True				
ANR	3522041	Identifier	offset		3521962	0					
ANR	3522042	CompoundStatement		11:14:236:236	3521962	1					
ANR	3522043	IfStatement	if ( offset < ST8_MIN || offset > ST8_MAX )		3521962	0					
ANR	3522044	Condition	offset < ST8_MIN || offset > ST8_MAX	1355:7:35688:35723	3521962	0	True				
ANR	3522045	OrExpression	offset < ST8_MIN || offset > ST8_MAX		3521962	0		||			
ANR	3522046	RelationalExpression	offset < ST8_MIN		3521962	0		<			
ANR	3522047	Identifier	offset		3521962	0					
ANR	3522048	Identifier	ST8_MIN		3521962	1					
ANR	3522049	RelationalExpression	offset > ST8_MAX		3521962	1		>			
ANR	3522050	Identifier	offset		3521962	0					
ANR	3522051	Identifier	ST8_MAX		3521962	1					
ANR	3522052	CompoundStatement		12:45:283:283	3521962	1					
ANR	3522053	ExpressionStatement	mod_byte = 2	1356:4:35732:35744	3521962	0	True				
ANR	3522054	AssignmentExpression	mod_byte = 2		3521962	0		=			
ANR	3522055	Identifier	mod_byte		3521962	0					
ANR	3522056	PrimaryExpression	2		3521962	1					
ANR	3522057	ElseStatement	else		3521962	0					
ANR	3522058	CompoundStatement		14:10:313:313	3521962	0					
ANR	3522059	ExpressionStatement	mod_byte = 1	1358:4:35762:35774	3521962	0	True				
ANR	3522060	AssignmentExpression	mod_byte = 1		3521962	0		=			
ANR	3522061	Identifier	mod_byte		3521962	0					
ANR	3522062	PrimaryExpression	1		3521962	1					
ANR	3522063	ExpressionStatement	data [ l ++ ] = ( mod_byte << 6 ) | ( 7 << 3 ) | op -> operands [ 0 ] . regs [ 0 ]	1361:2:35787:35851	3521962	4	True				
ANR	3522064	AssignmentExpression	data [ l ++ ] = ( mod_byte << 6 ) | ( 7 << 3 ) | op -> operands [ 0 ] . regs [ 0 ]		3521962	0		=			
ANR	3522065	ArrayIndexing	data [ l ++ ]		3521962	0					
ANR	3522066	Identifier	data		3521962	0					
ANR	3522067	PostIncDecOperationExpression	l ++		3521962	1					
ANR	3522068	Identifier	l		3521962	0					
ANR	3522069	IncDec	++		3521962	1					
ANR	3522070	InclusiveOrExpression	( mod_byte << 6 ) | ( 7 << 3 ) | op -> operands [ 0 ] . regs [ 0 ]		3521962	1		|			
ANR	3522071	ShiftExpression	mod_byte << 6		3521962	0		<<			
ANR	3522072	Identifier	mod_byte		3521962	0					
ANR	3522073	PrimaryExpression	6		3521962	1					
ANR	3522074	InclusiveOrExpression	( 7 << 3 ) | op -> operands [ 0 ] . regs [ 0 ]		3521962	1		|			
ANR	3522075	ShiftExpression	7 << 3		3521962	0		<<			
ANR	3522076	PrimaryExpression	7		3521962	0					
ANR	3522077	PrimaryExpression	3		3521962	1					
ANR	3522078	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3521962	1					
ANR	3522079	MemberAccess	op -> operands [ 0 ] . regs		3521962	0					
ANR	3522080	ArrayIndexing	op -> operands [ 0 ]		3521962	0					
ANR	3522081	PtrMemberAccess	op -> operands		3521962	0					
ANR	3522082	Identifier	op		3521962	0					
ANR	3522083	Identifier	operands		3521962	1					
ANR	3522084	PrimaryExpression	0		3521962	1					
ANR	3522085	Identifier	regs		3521962	1					
ANR	3522086	PrimaryExpression	0		3521962	1					
ANR	3522087	IfStatement	if ( mod_byte )		3521962	5					
ANR	3522088	Condition	mod_byte	1362:6:35859:35866	3521962	0	True				
ANR	3522089	Identifier	mod_byte		3521962	0					
ANR	3522090	CompoundStatement		19:16:426:426	3521962	1					
ANR	3522091	ExpressionStatement	data [ l ++ ] = offset	1363:3:35874:35892	3521962	0	True				
ANR	3522092	AssignmentExpression	data [ l ++ ] = offset		3521962	0		=			
ANR	3522093	ArrayIndexing	data [ l ++ ]		3521962	0					
ANR	3522094	Identifier	data		3521962	0					
ANR	3522095	PostIncDecOperationExpression	l ++		3521962	1					
ANR	3522096	Identifier	l		3521962	0					
ANR	3522097	IncDec	++		3521962	1					
ANR	3522098	Identifier	offset		3521962	1					
ANR	3522099	IfStatement	if ( mod_byte == 2 )		3521962	1					
ANR	3522100	Condition	mod_byte == 2	1364:7:35901:35913	3521962	0	True				
ANR	3522101	EqualityExpression	mod_byte == 2		3521962	0		==			
ANR	3522102	Identifier	mod_byte		3521962	0					
ANR	3522103	PrimaryExpression	2		3521962	1					
ANR	3522104	CompoundStatement		21:22:473:473	3521962	1					
ANR	3522105	ExpressionStatement	data [ l ++ ] = offset >> 8	1365:4:35922:35945	3521962	0	True				
ANR	3522106	AssignmentExpression	data [ l ++ ] = offset >> 8		3521962	0		=			
ANR	3522107	ArrayIndexing	data [ l ++ ]		3521962	0					
ANR	3522108	Identifier	data		3521962	0					
ANR	3522109	PostIncDecOperationExpression	l ++		3521962	1					
ANR	3522110	Identifier	l		3521962	0					
ANR	3522111	IncDec	++		3521962	1					
ANR	3522112	ShiftExpression	offset >> 8		3521962	1		>>			
ANR	3522113	Identifier	offset		3521962	0					
ANR	3522114	PrimaryExpression	8		3521962	1					
ANR	3522115	ExpressionStatement	data [ l ++ ] = offset >> 16	1366:4:35951:35975	3521962	1	True				
ANR	3522116	AssignmentExpression	data [ l ++ ] = offset >> 16		3521962	0		=			
ANR	3522117	ArrayIndexing	data [ l ++ ]		3521962	0					
ANR	3522118	Identifier	data		3521962	0					
ANR	3522119	PostIncDecOperationExpression	l ++		3521962	1					
ANR	3522120	Identifier	l		3521962	0					
ANR	3522121	IncDec	++		3521962	1					
ANR	3522122	ShiftExpression	offset >> 16		3521962	1		>>			
ANR	3522123	Identifier	offset		3521962	0					
ANR	3522124	PrimaryExpression	16		3521962	1					
ANR	3522125	ExpressionStatement	data [ l ++ ] = offset >> 24	1367:4:35981:36005	3521962	2	True				
ANR	3522126	AssignmentExpression	data [ l ++ ] = offset >> 24		3521962	0		=			
ANR	3522127	ArrayIndexing	data [ l ++ ]		3521962	0					
ANR	3522128	Identifier	data		3521962	0					
ANR	3522129	PostIncDecOperationExpression	l ++		3521962	1					
ANR	3522130	Identifier	l		3521962	0					
ANR	3522131	IncDec	++		3521962	1					
ANR	3522132	ShiftExpression	offset >> 24		3521962	1		>>			
ANR	3522133	Identifier	offset		3521962	0					
ANR	3522134	PrimaryExpression	24		3521962	1					
ANR	3522135	ReturnStatement	return l ;	1371:1:36020:36028	3521962	5	True				
ANR	3522136	Identifier	l		3521962	0					
ANR	3522137	ReturnType	static int		3521962	1					
ANR	3522138	Identifier	opclflush		3521962	2					
ANR	3522139	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3521962	3					
ANR	3522140	Parameter	RAsm * a	1344:21:35404:35410	3521962	0	True				
ANR	3522141	ParameterType	RAsm *		3521962	0					
ANR	3522142	Identifier	a		3521962	1					
ANR	3522143	Parameter	ut8 * data	1344:30:35413:35421	3521962	1	True				
ANR	3522144	ParameterType	ut8 *		3521962	0					
ANR	3522145	Identifier	data		3521962	1					
ANR	3522146	Parameter	const Opcode * op	1344:41:35424:35439	3521962	2	True				
ANR	3522147	ParameterType	const Opcode *		3521962	0					
ANR	3522148	Identifier	op		3521962	1					
ANR	3522149	CFGEntryNode	ENTRY		3521962		True				
ANR	3522150	CFGExitNode	EXIT		3521962		True				
ANR	3522151	Symbol	op -> operands [ 0 ] . offset_sign		3521962						
ANR	3522152	Symbol	a		3521962						
ANR	3522153	Symbol	op		3521962						
ANR	3522154	Symbol	ST8_MAX		3521962						
ANR	3522155	Symbol	data		3521962						
ANR	3522156	Symbol	offset		3521962						
ANR	3522157	Symbol	mod_byte		3521962						
ANR	3522158	Symbol	* op		3521962						
ANR	3522159	Symbol	* * op -> operands		3521962						
ANR	3522160	Symbol	l		3521962						
ANR	3522161	Symbol	* * op		3521962						
ANR	3522162	Symbol	* op -> operands		3521962						
ANR	3522163	Symbol	ST8_MIN		3521962						
ANR	3522164	Symbol	* op -> operands [ 0 ] . regs		3521962						
ANR	3522165	Symbol	op -> operands [ 0 ] . type		3521962						
ANR	3522166	Symbol	* * * op		3521962						
ANR	3522167	Symbol	op -> operands [ 0 ] . offset		3521962						
ANR	3522168	Symbol	op -> operands		3521962						
ANR	3522169	Symbol	OT_MEMORY		3521962						
ANR	3522170	Symbol	* data		3521962						
ANR	3522171	Symbol	op -> operands [ 0 ] . regs		3521962						
ANR	3522172	Function	opinc	1374:0:36033:39358							
ANR	3522173	FunctionDef	"opinc (RAsm * a , ut8 * data , const Opcode * op)"		3522172	0					
ANR	3522174	CompoundStatement		1374:55:36088:39358	3522172	0					
ANR	3522175	IfStatement	if ( op -> operands [ 1 ] . type )		3522172	0					
ANR	3522176	Condition	op -> operands [ 1 ] . type	1375:5:36095:36114	3522172	0	True				
ANR	3522177	MemberAccess	op -> operands [ 1 ] . type		3522172	0					
ANR	3522178	ArrayIndexing	op -> operands [ 1 ]		3522172	0					
ANR	3522179	PtrMemberAccess	op -> operands		3522172	0					
ANR	3522180	Identifier	op		3522172	0					
ANR	3522181	Identifier	operands		3522172	1					
ANR	3522182	PrimaryExpression	1		3522172	1					
ANR	3522183	Identifier	type		3522172	1					
ANR	3522184	CompoundStatement		2:27:28:28	3522172	1					
ANR	3522185	ExpressionStatement	"eprintf ( ""Error: Invalid operands\\n"" )"	1376:2:36121:36158	3522172	0	True				
ANR	3522186	CallExpression	"eprintf ( ""Error: Invalid operands\\n"" )"		3522172	0					
ANR	3522187	Callee	eprintf		3522172	0					
ANR	3522188	Identifier	eprintf		3522172	0					
ANR	3522189	ArgumentList	"""Error: Invalid operands\\n"""		3522172	1					
ANR	3522190	Argument	"""Error: Invalid operands\\n"""		3522172	0					
ANR	3522191	PrimaryExpression	"""Error: Invalid operands\\n"""		3522172	0					
ANR	3522192	ReturnStatement	return - 1 ;	1377:2:36162:36171	3522172	1	True				
ANR	3522193	UnaryOperationExpression	- 1		3522172	0					
ANR	3522194	UnaryOperator	-		3522172	0					
ANR	3522195	PrimaryExpression	1		3522172	1					
ANR	3522196	ExpressionStatement	is_valid_registers ( op )	1379:1:36177:36200	3522172	1	True				
ANR	3522197	CallExpression	is_valid_registers ( op )		3522172	0					
ANR	3522198	Callee	is_valid_registers		3522172	0					
ANR	3522199	Identifier	is_valid_registers		3522172	0					
ANR	3522200	ArgumentList	op		3522172	1					
ANR	3522201	Argument	op		3522172	0					
ANR	3522202	Identifier	op		3522172	0					
ANR	3522203	IdentifierDeclStatement	int l = 0 ;	1380:1:36203:36212	3522172	2	True				
ANR	3522204	IdentifierDecl	l = 0		3522172	0					
ANR	3522205	IdentifierDeclType	int		3522172	0					
ANR	3522206	Identifier	l		3522172	1					
ANR	3522207	AssignmentExpression	l = 0		3522172	2		=			
ANR	3522208	Identifier	l		3522172	0					
ANR	3522209	PrimaryExpression	0		3522172	1					
ANR	3522210	IdentifierDeclStatement	int size = op -> operands [ 0 ] . type & ALL_SIZE ;	1381:1:36215:36257	3522172	3	True				
ANR	3522211	IdentifierDecl	size = op -> operands [ 0 ] . type & ALL_SIZE		3522172	0					
ANR	3522212	IdentifierDeclType	int		3522172	0					
ANR	3522213	Identifier	size		3522172	1					
ANR	3522214	AssignmentExpression	size = op -> operands [ 0 ] . type & ALL_SIZE		3522172	2		=			
ANR	3522215	Identifier	size		3522172	0					
ANR	3522216	BitAndExpression	op -> operands [ 0 ] . type & ALL_SIZE		3522172	1		&			
ANR	3522217	MemberAccess	op -> operands [ 0 ] . type		3522172	0					
ANR	3522218	ArrayIndexing	op -> operands [ 0 ]		3522172	0					
ANR	3522219	PtrMemberAccess	op -> operands		3522172	0					
ANR	3522220	Identifier	op		3522172	0					
ANR	3522221	Identifier	operands		3522172	1					
ANR	3522222	PrimaryExpression	0		3522172	1					
ANR	3522223	Identifier	type		3522172	1					
ANR	3522224	Identifier	ALL_SIZE		3522172	1					
ANR	3522225	IfStatement	if ( op -> operands [ 0 ] . explicit_size )		3522172	4					
ANR	3522226	Condition	op -> operands [ 0 ] . explicit_size	1382:5:36264:36292	3522172	0	True				
ANR	3522227	MemberAccess	op -> operands [ 0 ] . explicit_size		3522172	0					
ANR	3522228	ArrayIndexing	op -> operands [ 0 ]		3522172	0					
ANR	3522229	PtrMemberAccess	op -> operands		3522172	0					
ANR	3522230	Identifier	op		3522172	0					
ANR	3522231	Identifier	operands		3522172	1					
ANR	3522232	PrimaryExpression	0		3522172	1					
ANR	3522233	Identifier	explicit_size		3522172	1					
ANR	3522234	CompoundStatement		9:36:206:206	3522172	1					
ANR	3522235	ExpressionStatement	size = op -> operands [ 0 ] . dest_size	1383:2:36299:36331	3522172	0	True				
ANR	3522236	AssignmentExpression	size = op -> operands [ 0 ] . dest_size		3522172	0		=			
ANR	3522237	Identifier	size		3522172	0					
ANR	3522238	MemberAccess	op -> operands [ 0 ] . dest_size		3522172	1					
ANR	3522239	ArrayIndexing	op -> operands [ 0 ]		3522172	0					
ANR	3522240	PtrMemberAccess	op -> operands		3522172	0					
ANR	3522241	Identifier	op		3522172	0					
ANR	3522242	Identifier	operands		3522172	1					
ANR	3522243	PrimaryExpression	0		3522172	1					
ANR	3522244	Identifier	dest_size		3522172	1					
ANR	3522245	IfStatement	if ( size & OT_WORD )		3522172	5					
ANR	3522246	Condition	size & OT_WORD	1386:5:36342:36355	3522172	0	True				
ANR	3522247	BitAndExpression	size & OT_WORD		3522172	0		&			
ANR	3522248	Identifier	size		3522172	0					
ANR	3522249	Identifier	OT_WORD		3522172	1					
ANR	3522250	CompoundStatement		13:21:269:269	3522172	1					
ANR	3522251	ExpressionStatement	data [ l ++ ] = 0x66	1387:2:36362:36378	3522172	0	True				
ANR	3522252	AssignmentExpression	data [ l ++ ] = 0x66		3522172	0		=			
ANR	3522253	ArrayIndexing	data [ l ++ ]		3522172	0					
ANR	3522254	Identifier	data		3522172	0					
ANR	3522255	PostIncDecOperationExpression	l ++		3522172	1					
ANR	3522256	Identifier	l		3522172	0					
ANR	3522257	IncDec	++		3522172	1					
ANR	3522258	PrimaryExpression	0x66		3522172	1					
ANR	3522259	IdentifierDeclStatement	int rex = 1 << 6 ;	1391:1:36399:36415	3522172	6	True				
ANR	3522260	IdentifierDecl	rex = 1 << 6		3522172	0					
ANR	3522261	IdentifierDeclType	int		3522172	0					
ANR	3522262	Identifier	rex		3522172	1					
ANR	3522263	AssignmentExpression	rex = 1 << 6		3522172	2		=			
ANR	3522264	Identifier	rex		3522172	0					
ANR	3522265	ShiftExpression	1 << 6		3522172	1		<<			
ANR	3522266	PrimaryExpression	1		3522172	0					
ANR	3522267	PrimaryExpression	6		3522172	1					
ANR	3522268	IdentifierDeclStatement	bool use_rex = false ;	1392:1:36418:36438	3522172	7	True				
ANR	3522269	IdentifierDecl	use_rex = false		3522172	0					
ANR	3522270	IdentifierDeclType	bool		3522172	0					
ANR	3522271	Identifier	use_rex		3522172	1					
ANR	3522272	AssignmentExpression	use_rex = false		3522172	2		=			
ANR	3522273	Identifier	false		3522172	0					
ANR	3522274	Identifier	false		3522172	1					
ANR	3522275	IfStatement	if ( size & OT_QWORD )		3522172	8					
ANR	3522276	Condition	size & OT_QWORD	1393:5:36445:36459	3522172	0	True				
ANR	3522277	BitAndExpression	size & OT_QWORD		3522172	0		&			
ANR	3522278	Identifier	size		3522172	0					
ANR	3522279	Identifier	OT_QWORD		3522172	1					
ANR	3522280	CompoundStatement		20:22:373:373	3522172	1					
ANR	3522281	ExpressionStatement	use_rex = true	1394:2:36478:36492	3522172	0	True				
ANR	3522282	AssignmentExpression	use_rex = true		3522172	0		=			
ANR	3522283	Identifier	use_rex		3522172	0					
ANR	3522284	Identifier	true		3522172	1					
ANR	3522285	ExpressionStatement	rex |= 1 << 3	1395:2:36496:36509	3522172	1	True				
ANR	3522286	AssignmentExpression	rex |= 1 << 3		3522172	0		|=			
ANR	3522287	Identifier	rex		3522172	0					
ANR	3522288	ShiftExpression	1 << 3		3522172	1		<<			
ANR	3522289	PrimaryExpression	1		3522172	0					
ANR	3522290	PrimaryExpression	3		3522172	1					
ANR	3522291	IfStatement	if ( op -> operands [ 0 ] . extended )		3522172	9					
ANR	3522292	Condition	op -> operands [ 0 ] . extended	1397:5:36519:36542	3522172	0	True				
ANR	3522293	MemberAccess	op -> operands [ 0 ] . extended		3522172	0					
ANR	3522294	ArrayIndexing	op -> operands [ 0 ]		3522172	0					
ANR	3522295	PtrMemberAccess	op -> operands		3522172	0					
ANR	3522296	Identifier	op		3522172	0					
ANR	3522297	Identifier	operands		3522172	1					
ANR	3522298	PrimaryExpression	0		3522172	1					
ANR	3522299	Identifier	extended		3522172	1					
ANR	3522300	CompoundStatement		24:31:456:456	3522172	1					
ANR	3522301	ExpressionStatement	use_rex = true	1398:2:36560:36574	3522172	0	True				
ANR	3522302	AssignmentExpression	use_rex = true		3522172	0		=			
ANR	3522303	Identifier	use_rex		3522172	0					
ANR	3522304	Identifier	true		3522172	1					
ANR	3522305	ExpressionStatement	rex |= 1	1399:2:36578:36586	3522172	1	True				
ANR	3522306	AssignmentExpression	rex |= 1		3522172	0		|=			
ANR	3522307	Identifier	rex		3522172	0					
ANR	3522308	PrimaryExpression	1		3522172	1					
ANR	3522309	IdentifierDeclStatement	int opcode ;	1403:1:36613:36623	3522172	10	True				
ANR	3522310	IdentifierDecl	opcode		3522172	0					
ANR	3522311	IdentifierDeclType	int		3522172	0					
ANR	3522312	Identifier	opcode		3522172	1					
ANR	3522313	IfStatement	if ( size & OT_BYTE )		3522172	11					
ANR	3522314	Condition	size & OT_BYTE	1404:5:36630:36643	3522172	0	True				
ANR	3522315	BitAndExpression	size & OT_BYTE		3522172	0		&			
ANR	3522316	Identifier	size		3522172	0					
ANR	3522317	Identifier	OT_BYTE		3522172	1					
ANR	3522318	CompoundStatement		31:21:557:557	3522172	1					
ANR	3522319	ExpressionStatement	opcode = 0xfe	1405:2:36650:36663	3522172	0	True				
ANR	3522320	AssignmentExpression	opcode = 0xfe		3522172	0		=			
ANR	3522321	Identifier	opcode		3522172	0					
ANR	3522322	PrimaryExpression	0xfe		3522172	1					
ANR	3522323	ElseStatement	else		3522172	0					
ANR	3522324	CompoundStatement		33:8:584:584	3522172	0					
ANR	3522325	ExpressionStatement	opcode = 0xff	1407:2:36677:36690	3522172	0	True				
ANR	3522326	AssignmentExpression	opcode = 0xff		3522172	0		=			
ANR	3522327	Identifier	opcode		3522172	0					
ANR	3522328	PrimaryExpression	0xff		3522172	1					
ANR	3522329	IfStatement	if ( ! ( op -> operands [ 0 ] . type & OT_MEMORY ) )		3522172	12					
ANR	3522330	Condition	! ( op -> operands [ 0 ] . type & OT_MEMORY )	1410:5:36701:36735	3522172	0	True				
ANR	3522331	UnaryOperationExpression	! ( op -> operands [ 0 ] . type & OT_MEMORY )		3522172	0					
ANR	3522332	UnaryOperator	!		3522172	0					
ANR	3522333	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3522172	1		&			
ANR	3522334	MemberAccess	op -> operands [ 0 ] . type		3522172	0					
ANR	3522335	ArrayIndexing	op -> operands [ 0 ]		3522172	0					
ANR	3522336	PtrMemberAccess	op -> operands		3522172	0					
ANR	3522337	Identifier	op		3522172	0					
ANR	3522338	Identifier	operands		3522172	1					
ANR	3522339	PrimaryExpression	0		3522172	1					
ANR	3522340	Identifier	type		3522172	1					
ANR	3522341	Identifier	OT_MEMORY		3522172	1					
ANR	3522342	CompoundStatement		37:42:649:649	3522172	1					
ANR	3522343	IfStatement	if ( use_rex )		3522172	0					
ANR	3522344	Condition	use_rex	1411:6:36746:36752	3522172	0	True				
ANR	3522345	Identifier	use_rex		3522172	0					
ANR	3522346	CompoundStatement		38:15:666:666	3522172	1					
ANR	3522347	ExpressionStatement	data [ l ++ ] = rex	1412:3:36760:36775	3522172	0	True				
ANR	3522348	AssignmentExpression	data [ l ++ ] = rex		3522172	0		=			
ANR	3522349	ArrayIndexing	data [ l ++ ]		3522172	0					
ANR	3522350	Identifier	data		3522172	0					
ANR	3522351	PostIncDecOperationExpression	l ++		3522172	1					
ANR	3522352	Identifier	l		3522172	0					
ANR	3522353	IncDec	++		3522172	1					
ANR	3522354	Identifier	rex		3522172	1					
ANR	3522355	IfStatement	if ( a -> bits > 32 || size & OT_BYTE )		3522172	1					
ANR	3522356	Condition	a -> bits > 32 || size & OT_BYTE	1414:6:36787:36816	3522172	0	True				
ANR	3522357	OrExpression	a -> bits > 32 || size & OT_BYTE		3522172	0		||			
ANR	3522358	RelationalExpression	a -> bits > 32		3522172	0		>			
ANR	3522359	PtrMemberAccess	a -> bits		3522172	0					
ANR	3522360	Identifier	a		3522172	0					
ANR	3522361	Identifier	bits		3522172	1					
ANR	3522362	PrimaryExpression	32		3522172	1					
ANR	3522363	BitAndExpression	size & OT_BYTE		3522172	1		&			
ANR	3522364	Identifier	size		3522172	0					
ANR	3522365	Identifier	OT_BYTE		3522172	1					
ANR	3522366	CompoundStatement		41:38:730:730	3522172	1					
ANR	3522367	ExpressionStatement	data [ l ++ ] = opcode	1415:3:36824:36842	3522172	0	True				
ANR	3522368	AssignmentExpression	data [ l ++ ] = opcode		3522172	0		=			
ANR	3522369	ArrayIndexing	data [ l ++ ]		3522172	0					
ANR	3522370	Identifier	data		3522172	0					
ANR	3522371	PostIncDecOperationExpression	l ++		3522172	1					
ANR	3522372	Identifier	l		3522172	0					
ANR	3522373	IncDec	++		3522172	1					
ANR	3522374	Identifier	opcode		3522172	1					
ANR	3522375	IfStatement	if ( a -> bits == 32 && size & ( OT_DWORD | OT_WORD ) )		3522172	2					
ANR	3522376	Condition	a -> bits == 32 && size & ( OT_DWORD | OT_WORD )	1417:6:36854:36897	3522172	0	True				
ANR	3522377	AndExpression	a -> bits == 32 && size & ( OT_DWORD | OT_WORD )		3522172	0		&&			
ANR	3522378	EqualityExpression	a -> bits == 32		3522172	0		==			
ANR	3522379	PtrMemberAccess	a -> bits		3522172	0					
ANR	3522380	Identifier	a		3522172	0					
ANR	3522381	Identifier	bits		3522172	1					
ANR	3522382	PrimaryExpression	32		3522172	1					
ANR	3522383	BitAndExpression	size & ( OT_DWORD | OT_WORD )		3522172	1		&			
ANR	3522384	Identifier	size		3522172	0					
ANR	3522385	InclusiveOrExpression	OT_DWORD | OT_WORD		3522172	1		|			
ANR	3522386	Identifier	OT_DWORD		3522172	0					
ANR	3522387	Identifier	OT_WORD		3522172	1					
ANR	3522388	CompoundStatement		44:52:811:811	3522172	1					
ANR	3522389	ExpressionStatement	data [ l ++ ] = 0x40 | op -> operands [ 0 ] . reg	1418:3:36905:36943	3522172	0	True				
ANR	3522390	AssignmentExpression	data [ l ++ ] = 0x40 | op -> operands [ 0 ] . reg		3522172	0		=			
ANR	3522391	ArrayIndexing	data [ l ++ ]		3522172	0					
ANR	3522392	Identifier	data		3522172	0					
ANR	3522393	PostIncDecOperationExpression	l ++		3522172	1					
ANR	3522394	Identifier	l		3522172	0					
ANR	3522395	IncDec	++		3522172	1					
ANR	3522396	InclusiveOrExpression	0x40 | op -> operands [ 0 ] . reg		3522172	1		|			
ANR	3522397	PrimaryExpression	0x40		3522172	0					
ANR	3522398	MemberAccess	op -> operands [ 0 ] . reg		3522172	1					
ANR	3522399	ArrayIndexing	op -> operands [ 0 ]		3522172	0					
ANR	3522400	PtrMemberAccess	op -> operands		3522172	0					
ANR	3522401	Identifier	op		3522172	0					
ANR	3522402	Identifier	operands		3522172	1					
ANR	3522403	PrimaryExpression	0		3522172	1					
ANR	3522404	Identifier	reg		3522172	1					
ANR	3522405	ElseStatement	else		3522172	0					
ANR	3522406	CompoundStatement		46:9:865:865	3522172	0					
ANR	3522407	ExpressionStatement	data [ l ++ ] = 0xc0 | op -> operands [ 0 ] . reg	1420:3:36959:36997	3522172	0	True				
ANR	3522408	AssignmentExpression	data [ l ++ ] = 0xc0 | op -> operands [ 0 ] . reg		3522172	0		=			
ANR	3522409	ArrayIndexing	data [ l ++ ]		3522172	0					
ANR	3522410	Identifier	data		3522172	0					
ANR	3522411	PostIncDecOperationExpression	l ++		3522172	1					
ANR	3522412	Identifier	l		3522172	0					
ANR	3522413	IncDec	++		3522172	1					
ANR	3522414	InclusiveOrExpression	0xc0 | op -> operands [ 0 ] . reg		3522172	1		|			
ANR	3522415	PrimaryExpression	0xc0		3522172	0					
ANR	3522416	MemberAccess	op -> operands [ 0 ] . reg		3522172	1					
ANR	3522417	ArrayIndexing	op -> operands [ 0 ]		3522172	0					
ANR	3522418	PtrMemberAccess	op -> operands		3522172	0					
ANR	3522419	Identifier	op		3522172	0					
ANR	3522420	Identifier	operands		3522172	1					
ANR	3522421	PrimaryExpression	0		3522172	1					
ANR	3522422	Identifier	reg		3522172	1					
ANR	3522423	ReturnStatement	return l ;	1422:2:37005:37013	3522172	3	True				
ANR	3522424	Identifier	l		3522172	0					
ANR	3522425	IdentifierDeclStatement	bool rip_rel = op -> operands [ 0 ] . regs [ 0 ] == X86R_RIP ;	1426:1:37047:37097	3522172	13	True				
ANR	3522426	IdentifierDecl	rip_rel = op -> operands [ 0 ] . regs [ 0 ] == X86R_RIP		3522172	0					
ANR	3522427	IdentifierDeclType	bool		3522172	0					
ANR	3522428	Identifier	rip_rel		3522172	1					
ANR	3522429	AssignmentExpression	rip_rel = op -> operands [ 0 ] . regs [ 0 ] == X86R_RIP		3522172	2		=			
ANR	3522430	Identifier	rip_rel		3522172	0					
ANR	3522431	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_RIP		3522172	1		==			
ANR	3522432	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3522172	0					
ANR	3522433	MemberAccess	op -> operands [ 0 ] . regs		3522172	0					
ANR	3522434	ArrayIndexing	op -> operands [ 0 ]		3522172	0					
ANR	3522435	PtrMemberAccess	op -> operands		3522172	0					
ANR	3522436	Identifier	op		3522172	0					
ANR	3522437	Identifier	operands		3522172	1					
ANR	3522438	PrimaryExpression	0		3522172	1					
ANR	3522439	Identifier	regs		3522172	1					
ANR	3522440	PrimaryExpression	0		3522172	1					
ANR	3522441	Identifier	X86R_RIP		3522172	1					
ANR	3522442	IdentifierDeclStatement	int offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign ;	1427:1:37100:37165	3522172	14	True				
ANR	3522443	IdentifierDecl	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		3522172	0					
ANR	3522444	IdentifierDeclType	int		3522172	0					
ANR	3522445	Identifier	offset		3522172	1					
ANR	3522446	AssignmentExpression	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		3522172	2		=			
ANR	3522447	Identifier	offset		3522172	0					
ANR	3522448	MultiplicativeExpression	op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		3522172	1		*			
ANR	3522449	MemberAccess	op -> operands [ 0 ] . offset		3522172	0					
ANR	3522450	ArrayIndexing	op -> operands [ 0 ]		3522172	0					
ANR	3522451	PtrMemberAccess	op -> operands		3522172	0					
ANR	3522452	Identifier	op		3522172	0					
ANR	3522453	Identifier	operands		3522172	1					
ANR	3522454	PrimaryExpression	0		3522172	1					
ANR	3522455	Identifier	offset		3522172	1					
ANR	3522456	MemberAccess	op -> operands [ 0 ] . offset_sign		3522172	1					
ANR	3522457	ArrayIndexing	op -> operands [ 0 ]		3522172	0					
ANR	3522458	PtrMemberAccess	op -> operands		3522172	0					
ANR	3522459	Identifier	op		3522172	0					
ANR	3522460	Identifier	operands		3522172	1					
ANR	3522461	PrimaryExpression	0		3522172	1					
ANR	3522462	Identifier	offset_sign		3522172	1					
ANR	3522463	IdentifierDeclStatement	int modrm = 0 ;	1428:1:37168:37181	3522172	15	True				
ANR	3522464	IdentifierDecl	modrm = 0		3522172	0					
ANR	3522465	IdentifierDeclType	int		3522172	0					
ANR	3522466	Identifier	modrm		3522172	1					
ANR	3522467	AssignmentExpression	modrm = 0		3522172	2		=			
ANR	3522468	Identifier	modrm		3522172	0					
ANR	3522469	PrimaryExpression	0		3522172	1					
ANR	3522470	IdentifierDeclStatement	int mod ;	1429:1:37184:37191	3522172	16	True				
ANR	3522471	IdentifierDecl	mod		3522172	0					
ANR	3522472	IdentifierDeclType	int		3522172	0					
ANR	3522473	Identifier	mod		3522172	1					
ANR	3522474	IdentifierDeclStatement	int reg = 0 ;	1430:1:37194:37205	3522172	17	True				
ANR	3522475	IdentifierDecl	reg = 0		3522172	0					
ANR	3522476	IdentifierDeclType	int		3522172	0					
ANR	3522477	Identifier	reg		3522172	1					
ANR	3522478	AssignmentExpression	reg = 0		3522172	2		=			
ANR	3522479	Identifier	reg		3522172	0					
ANR	3522480	PrimaryExpression	0		3522172	1					
ANR	3522481	IdentifierDeclStatement	int rm ;	1431:1:37208:37214	3522172	18	True				
ANR	3522482	IdentifierDecl	rm		3522172	0					
ANR	3522483	IdentifierDeclType	int		3522172	0					
ANR	3522484	Identifier	rm		3522172	1					
ANR	3522485	IdentifierDeclStatement	bool use_sib = false ;	1432:1:37217:37237	3522172	19	True				
ANR	3522486	IdentifierDecl	use_sib = false		3522172	0					
ANR	3522487	IdentifierDeclType	bool		3522172	0					
ANR	3522488	Identifier	use_sib		3522172	1					
ANR	3522489	AssignmentExpression	use_sib = false		3522172	2		=			
ANR	3522490	Identifier	false		3522172	0					
ANR	3522491	Identifier	false		3522172	1					
ANR	3522492	IdentifierDeclStatement	int sib = 0 ;	1433:1:37240:37251	3522172	20	True				
ANR	3522493	IdentifierDecl	sib = 0		3522172	0					
ANR	3522494	IdentifierDeclType	int		3522172	0					
ANR	3522495	Identifier	sib		3522172	1					
ANR	3522496	AssignmentExpression	sib = 0		3522172	2		=			
ANR	3522497	Identifier	sib		3522172	0					
ANR	3522498	PrimaryExpression	0		3522172	1					
ANR	3522499	IfStatement	if ( offset == 0 )		3522172	21					
ANR	3522500	Condition	offset == 0	1435:5:37265:37275	3522172	0	True				
ANR	3522501	EqualityExpression	offset == 0		3522172	0		==			
ANR	3522502	Identifier	offset		3522172	0					
ANR	3522503	PrimaryExpression	0		3522172	1					
ANR	3522504	CompoundStatement		62:18:1189:1189	3522172	1					
ANR	3522505	ExpressionStatement	mod = 0	1436:2:37282:37289	3522172	0	True				
ANR	3522506	AssignmentExpression	mod = 0		3522172	0		=			
ANR	3522507	Identifier	mod		3522172	0					
ANR	3522508	PrimaryExpression	0		3522172	1					
ANR	3522509	ElseStatement	else		3522172	0					
ANR	3522510	IfStatement	if ( offset < 128 && offset > - 129 )		3522172	0					
ANR	3522511	Condition	offset < 128 && offset > - 129	1437:12:37303:37331	3522172	0	True				
ANR	3522512	AndExpression	offset < 128 && offset > - 129		3522172	0		&&			
ANR	3522513	RelationalExpression	offset < 128		3522172	0		<			
ANR	3522514	Identifier	offset		3522172	0					
ANR	3522515	PrimaryExpression	128		3522172	1					
ANR	3522516	RelationalExpression	offset > - 129		3522172	1		>			
ANR	3522517	Identifier	offset		3522172	0					
ANR	3522518	UnaryOperationExpression	- 129		3522172	1					
ANR	3522519	UnaryOperator	-		3522172	0					
ANR	3522520	PrimaryExpression	129		3522172	1					
ANR	3522521	CompoundStatement		64:43:1245:1245	3522172	1					
ANR	3522522	ExpressionStatement	mod = 1	1438:2:37338:37345	3522172	0	True				
ANR	3522523	AssignmentExpression	mod = 1		3522172	0		=			
ANR	3522524	Identifier	mod		3522172	0					
ANR	3522525	PrimaryExpression	1		3522172	1					
ANR	3522526	ElseStatement	else		3522172	0					
ANR	3522527	CompoundStatement		66:8:1266:1266	3522172	0					
ANR	3522528	ExpressionStatement	mod = 2	1440:2:37359:37366	3522172	0	True				
ANR	3522529	AssignmentExpression	mod = 2		3522172	0		=			
ANR	3522530	Identifier	mod		3522172	0					
ANR	3522531	PrimaryExpression	2		3522172	1					
ANR	3522532	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] & OT_WORD )		3522172	22					
ANR	3522533	Condition	op -> operands [ 0 ] . regs [ 0 ] & OT_WORD	1443:5:37377:37409	3522172	0	True				
ANR	3522534	BitAndExpression	op -> operands [ 0 ] . regs [ 0 ] & OT_WORD		3522172	0		&			
ANR	3522535	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3522172	0					
ANR	3522536	MemberAccess	op -> operands [ 0 ] . regs		3522172	0					
ANR	3522537	ArrayIndexing	op -> operands [ 0 ]		3522172	0					
ANR	3522538	PtrMemberAccess	op -> operands		3522172	0					
ANR	3522539	Identifier	op		3522172	0					
ANR	3522540	Identifier	operands		3522172	1					
ANR	3522541	PrimaryExpression	0		3522172	1					
ANR	3522542	Identifier	regs		3522172	1					
ANR	3522543	PrimaryExpression	0		3522172	1					
ANR	3522544	Identifier	OT_WORD		3522172	1					
ANR	3522545	CompoundStatement		70:40:1323:1323	3522172	1					
ANR	3522546	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == X86R_SI )		3522172	0					
ANR	3522547	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == X86R_SI	1444:6:37420:37491	3522172	0	True				
ANR	3522548	AndExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == X86R_SI		3522172	0		&&			
ANR	3522549	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX		3522172	0		==			
ANR	3522550	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3522172	0					
ANR	3522551	MemberAccess	op -> operands [ 0 ] . regs		3522172	0					
ANR	3522552	ArrayIndexing	op -> operands [ 0 ]		3522172	0					
ANR	3522553	PtrMemberAccess	op -> operands		3522172	0					
ANR	3522554	Identifier	op		3522172	0					
ANR	3522555	Identifier	operands		3522172	1					
ANR	3522556	PrimaryExpression	0		3522172	1					
ANR	3522557	Identifier	regs		3522172	1					
ANR	3522558	PrimaryExpression	0		3522172	1					
ANR	3522559	Identifier	X86R_BX		3522172	1					
ANR	3522560	EqualityExpression	op -> operands [ 0 ] . regs [ 1 ] == X86R_SI		3522172	1		==			
ANR	3522561	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		3522172	0					
ANR	3522562	MemberAccess	op -> operands [ 0 ] . regs		3522172	0					
ANR	3522563	ArrayIndexing	op -> operands [ 0 ]		3522172	0					
ANR	3522564	PtrMemberAccess	op -> operands		3522172	0					
ANR	3522565	Identifier	op		3522172	0					
ANR	3522566	Identifier	operands		3522172	1					
ANR	3522567	PrimaryExpression	0		3522172	1					
ANR	3522568	Identifier	regs		3522172	1					
ANR	3522569	PrimaryExpression	1		3522172	1					
ANR	3522570	Identifier	X86R_SI		3522172	1					
ANR	3522571	CompoundStatement		71:80:1405:1405	3522172	1					
ANR	3522572	ExpressionStatement	rm = B0000	1445:3:37499:37509	3522172	0	True				
ANR	3522573	AssignmentExpression	rm = B0000		3522172	0		=			
ANR	3522574	Identifier	rm		3522172	0					
ANR	3522575	Identifier	B0000		3522172	1					
ANR	3522576	ElseStatement	else		3522172	0					
ANR	3522577	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == X86R_DI )		3522172	0					
ANR	3522578	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == X86R_DI	1446:13:37524:37595	3522172	0	True				
ANR	3522579	AndExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == X86R_DI		3522172	0		&&			
ANR	3522580	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX		3522172	0		==			
ANR	3522581	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3522172	0					
ANR	3522582	MemberAccess	op -> operands [ 0 ] . regs		3522172	0					
ANR	3522583	ArrayIndexing	op -> operands [ 0 ]		3522172	0					
ANR	3522584	PtrMemberAccess	op -> operands		3522172	0					
ANR	3522585	Identifier	op		3522172	0					
ANR	3522586	Identifier	operands		3522172	1					
ANR	3522587	PrimaryExpression	0		3522172	1					
ANR	3522588	Identifier	regs		3522172	1					
ANR	3522589	PrimaryExpression	0		3522172	1					
ANR	3522590	Identifier	X86R_BX		3522172	1					
ANR	3522591	EqualityExpression	op -> operands [ 0 ] . regs [ 1 ] == X86R_DI		3522172	1		==			
ANR	3522592	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		3522172	0					
ANR	3522593	MemberAccess	op -> operands [ 0 ] . regs		3522172	0					
ANR	3522594	ArrayIndexing	op -> operands [ 0 ]		3522172	0					
ANR	3522595	PtrMemberAccess	op -> operands		3522172	0					
ANR	3522596	Identifier	op		3522172	0					
ANR	3522597	Identifier	operands		3522172	1					
ANR	3522598	PrimaryExpression	0		3522172	1					
ANR	3522599	Identifier	regs		3522172	1					
ANR	3522600	PrimaryExpression	1		3522172	1					
ANR	3522601	Identifier	X86R_DI		3522172	1					
ANR	3522602	CompoundStatement		73:87:1509:1509	3522172	1					
ANR	3522603	ExpressionStatement	rm = B0001	1447:3:37603:37613	3522172	0	True				
ANR	3522604	AssignmentExpression	rm = B0001		3522172	0		=			
ANR	3522605	Identifier	rm		3522172	0					
ANR	3522606	Identifier	B0001		3522172	1					
ANR	3522607	ElseStatement	else		3522172	0					
ANR	3522608	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_BP && op -> operands [ 0 ] . regs [ 1 ] == X86R_SI )		3522172	0					
ANR	3522609	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_BP && op -> operands [ 0 ] . regs [ 1 ] == X86R_SI	1448:13:37628:37699	3522172	0	True				
ANR	3522610	AndExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BP && op -> operands [ 0 ] . regs [ 1 ] == X86R_SI		3522172	0		&&			
ANR	3522611	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BP		3522172	0		==			
ANR	3522612	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3522172	0					
ANR	3522613	MemberAccess	op -> operands [ 0 ] . regs		3522172	0					
ANR	3522614	ArrayIndexing	op -> operands [ 0 ]		3522172	0					
ANR	3522615	PtrMemberAccess	op -> operands		3522172	0					
ANR	3522616	Identifier	op		3522172	0					
ANR	3522617	Identifier	operands		3522172	1					
ANR	3522618	PrimaryExpression	0		3522172	1					
ANR	3522619	Identifier	regs		3522172	1					
ANR	3522620	PrimaryExpression	0		3522172	1					
ANR	3522621	Identifier	X86R_BP		3522172	1					
ANR	3522622	EqualityExpression	op -> operands [ 0 ] . regs [ 1 ] == X86R_SI		3522172	1		==			
ANR	3522623	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		3522172	0					
ANR	3522624	MemberAccess	op -> operands [ 0 ] . regs		3522172	0					
ANR	3522625	ArrayIndexing	op -> operands [ 0 ]		3522172	0					
ANR	3522626	PtrMemberAccess	op -> operands		3522172	0					
ANR	3522627	Identifier	op		3522172	0					
ANR	3522628	Identifier	operands		3522172	1					
ANR	3522629	PrimaryExpression	0		3522172	1					
ANR	3522630	Identifier	regs		3522172	1					
ANR	3522631	PrimaryExpression	1		3522172	1					
ANR	3522632	Identifier	X86R_SI		3522172	1					
ANR	3522633	CompoundStatement		75:87:1613:1613	3522172	1					
ANR	3522634	ExpressionStatement	rm = B0010	1449:3:37707:37717	3522172	0	True				
ANR	3522635	AssignmentExpression	rm = B0010		3522172	0		=			
ANR	3522636	Identifier	rm		3522172	0					
ANR	3522637	Identifier	B0010		3522172	1					
ANR	3522638	ElseStatement	else		3522172	0					
ANR	3522639	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_BP && op -> operands [ 0 ] . regs [ 1 ] == X86R_DI )		3522172	0					
ANR	3522640	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_BP && op -> operands [ 0 ] . regs [ 1 ] == X86R_DI	1450:13:37732:37803	3522172	0	True				
ANR	3522641	AndExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BP && op -> operands [ 0 ] . regs [ 1 ] == X86R_DI		3522172	0		&&			
ANR	3522642	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BP		3522172	0		==			
ANR	3522643	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3522172	0					
ANR	3522644	MemberAccess	op -> operands [ 0 ] . regs		3522172	0					
ANR	3522645	ArrayIndexing	op -> operands [ 0 ]		3522172	0					
ANR	3522646	PtrMemberAccess	op -> operands		3522172	0					
ANR	3522647	Identifier	op		3522172	0					
ANR	3522648	Identifier	operands		3522172	1					
ANR	3522649	PrimaryExpression	0		3522172	1					
ANR	3522650	Identifier	regs		3522172	1					
ANR	3522651	PrimaryExpression	0		3522172	1					
ANR	3522652	Identifier	X86R_BP		3522172	1					
ANR	3522653	EqualityExpression	op -> operands [ 0 ] . regs [ 1 ] == X86R_DI		3522172	1		==			
ANR	3522654	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		3522172	0					
ANR	3522655	MemberAccess	op -> operands [ 0 ] . regs		3522172	0					
ANR	3522656	ArrayIndexing	op -> operands [ 0 ]		3522172	0					
ANR	3522657	PtrMemberAccess	op -> operands		3522172	0					
ANR	3522658	Identifier	op		3522172	0					
ANR	3522659	Identifier	operands		3522172	1					
ANR	3522660	PrimaryExpression	0		3522172	1					
ANR	3522661	Identifier	regs		3522172	1					
ANR	3522662	PrimaryExpression	1		3522172	1					
ANR	3522663	Identifier	X86R_DI		3522172	1					
ANR	3522664	CompoundStatement		77:87:1717:1717	3522172	1					
ANR	3522665	ExpressionStatement	rm = B0011	1451:3:37811:37821	3522172	0	True				
ANR	3522666	AssignmentExpression	rm = B0011		3522172	0		=			
ANR	3522667	Identifier	rm		3522172	0					
ANR	3522668	Identifier	B0011		3522172	1					
ANR	3522669	ElseStatement	else		3522172	0					
ANR	3522670	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_SI && op -> operands [ 0 ] . regs [ 1 ] == - 1 )		3522172	0					
ANR	3522671	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_SI && op -> operands [ 0 ] . regs [ 1 ] == - 1	1452:13:37836:37902	3522172	0	True				
ANR	3522672	AndExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_SI && op -> operands [ 0 ] . regs [ 1 ] == - 1		3522172	0		&&			
ANR	3522673	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_SI		3522172	0		==			
ANR	3522674	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3522172	0					
ANR	3522675	MemberAccess	op -> operands [ 0 ] . regs		3522172	0					
ANR	3522676	ArrayIndexing	op -> operands [ 0 ]		3522172	0					
ANR	3522677	PtrMemberAccess	op -> operands		3522172	0					
ANR	3522678	Identifier	op		3522172	0					
ANR	3522679	Identifier	operands		3522172	1					
ANR	3522680	PrimaryExpression	0		3522172	1					
ANR	3522681	Identifier	regs		3522172	1					
ANR	3522682	PrimaryExpression	0		3522172	1					
ANR	3522683	Identifier	X86R_SI		3522172	1					
ANR	3522684	EqualityExpression	op -> operands [ 0 ] . regs [ 1 ] == - 1		3522172	1		==			
ANR	3522685	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		3522172	0					
ANR	3522686	MemberAccess	op -> operands [ 0 ] . regs		3522172	0					
ANR	3522687	ArrayIndexing	op -> operands [ 0 ]		3522172	0					
ANR	3522688	PtrMemberAccess	op -> operands		3522172	0					
ANR	3522689	Identifier	op		3522172	0					
ANR	3522690	Identifier	operands		3522172	1					
ANR	3522691	PrimaryExpression	0		3522172	1					
ANR	3522692	Identifier	regs		3522172	1					
ANR	3522693	PrimaryExpression	1		3522172	1					
ANR	3522694	UnaryOperationExpression	- 1		3522172	1					
ANR	3522695	UnaryOperator	-		3522172	0					
ANR	3522696	PrimaryExpression	1		3522172	1					
ANR	3522697	CompoundStatement		79:82:1816:1816	3522172	1					
ANR	3522698	ExpressionStatement	rm = B0100	1453:3:37910:37920	3522172	0	True				
ANR	3522699	AssignmentExpression	rm = B0100		3522172	0		=			
ANR	3522700	Identifier	rm		3522172	0					
ANR	3522701	Identifier	B0100		3522172	1					
ANR	3522702	ElseStatement	else		3522172	0					
ANR	3522703	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_DI && op -> operands [ 0 ] . regs [ 1 ] == - 1 )		3522172	0					
ANR	3522704	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_DI && op -> operands [ 0 ] . regs [ 1 ] == - 1	1454:13:37935:38001	3522172	0	True				
ANR	3522705	AndExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_DI && op -> operands [ 0 ] . regs [ 1 ] == - 1		3522172	0		&&			
ANR	3522706	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_DI		3522172	0		==			
ANR	3522707	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3522172	0					
ANR	3522708	MemberAccess	op -> operands [ 0 ] . regs		3522172	0					
ANR	3522709	ArrayIndexing	op -> operands [ 0 ]		3522172	0					
ANR	3522710	PtrMemberAccess	op -> operands		3522172	0					
ANR	3522711	Identifier	op		3522172	0					
ANR	3522712	Identifier	operands		3522172	1					
ANR	3522713	PrimaryExpression	0		3522172	1					
ANR	3522714	Identifier	regs		3522172	1					
ANR	3522715	PrimaryExpression	0		3522172	1					
ANR	3522716	Identifier	X86R_DI		3522172	1					
ANR	3522717	EqualityExpression	op -> operands [ 0 ] . regs [ 1 ] == - 1		3522172	1		==			
ANR	3522718	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		3522172	0					
ANR	3522719	MemberAccess	op -> operands [ 0 ] . regs		3522172	0					
ANR	3522720	ArrayIndexing	op -> operands [ 0 ]		3522172	0					
ANR	3522721	PtrMemberAccess	op -> operands		3522172	0					
ANR	3522722	Identifier	op		3522172	0					
ANR	3522723	Identifier	operands		3522172	1					
ANR	3522724	PrimaryExpression	0		3522172	1					
ANR	3522725	Identifier	regs		3522172	1					
ANR	3522726	PrimaryExpression	1		3522172	1					
ANR	3522727	UnaryOperationExpression	- 1		3522172	1					
ANR	3522728	UnaryOperator	-		3522172	0					
ANR	3522729	PrimaryExpression	1		3522172	1					
ANR	3522730	CompoundStatement		81:82:1915:1915	3522172	1					
ANR	3522731	ExpressionStatement	rm = B0101	1455:3:38009:38019	3522172	0	True				
ANR	3522732	AssignmentExpression	rm = B0101		3522172	0		=			
ANR	3522733	Identifier	rm		3522172	0					
ANR	3522734	Identifier	B0101		3522172	1					
ANR	3522735	ElseStatement	else		3522172	0					
ANR	3522736	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == - 1 )		3522172	0					
ANR	3522737	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == - 1	1456:13:38034:38100	3522172	0	True				
ANR	3522738	AndExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == - 1		3522172	0		&&			
ANR	3522739	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX		3522172	0		==			
ANR	3522740	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3522172	0					
ANR	3522741	MemberAccess	op -> operands [ 0 ] . regs		3522172	0					
ANR	3522742	ArrayIndexing	op -> operands [ 0 ]		3522172	0					
ANR	3522743	PtrMemberAccess	op -> operands		3522172	0					
ANR	3522744	Identifier	op		3522172	0					
ANR	3522745	Identifier	operands		3522172	1					
ANR	3522746	PrimaryExpression	0		3522172	1					
ANR	3522747	Identifier	regs		3522172	1					
ANR	3522748	PrimaryExpression	0		3522172	1					
ANR	3522749	Identifier	X86R_BX		3522172	1					
ANR	3522750	EqualityExpression	op -> operands [ 0 ] . regs [ 1 ] == - 1		3522172	1		==			
ANR	3522751	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		3522172	0					
ANR	3522752	MemberAccess	op -> operands [ 0 ] . regs		3522172	0					
ANR	3522753	ArrayIndexing	op -> operands [ 0 ]		3522172	0					
ANR	3522754	PtrMemberAccess	op -> operands		3522172	0					
ANR	3522755	Identifier	op		3522172	0					
ANR	3522756	Identifier	operands		3522172	1					
ANR	3522757	PrimaryExpression	0		3522172	1					
ANR	3522758	Identifier	regs		3522172	1					
ANR	3522759	PrimaryExpression	1		3522172	1					
ANR	3522760	UnaryOperationExpression	- 1		3522172	1					
ANR	3522761	UnaryOperator	-		3522172	0					
ANR	3522762	PrimaryExpression	1		3522172	1					
ANR	3522763	CompoundStatement		83:82:2014:2014	3522172	1					
ANR	3522764	ExpressionStatement	rm = B0111	1457:3:38108:38118	3522172	0	True				
ANR	3522765	AssignmentExpression	rm = B0111		3522172	0		=			
ANR	3522766	Identifier	rm		3522172	0					
ANR	3522767	Identifier	B0111		3522172	1					
ANR	3522768	ElseStatement	else		3522172	0					
ANR	3522769	CompoundStatement		85:9:2040:2040	3522172	0					
ANR	3522770	ReturnStatement	return - 1 ;	1460:3:38196:38205	3522172	0	True				
ANR	3522771	UnaryOperationExpression	- 1		3522172	0					
ANR	3522772	UnaryOperator	-		3522172	0					
ANR	3522773	PrimaryExpression	1		3522172	1					
ANR	3522774	ExpressionStatement	modrm = ( mod << 6 ) | ( reg << 3 ) | rm	1462:2:38213:38249	3522172	1	True				
ANR	3522775	AssignmentExpression	modrm = ( mod << 6 ) | ( reg << 3 ) | rm		3522172	0		=			
ANR	3522776	Identifier	modrm		3522172	0					
ANR	3522777	InclusiveOrExpression	( mod << 6 ) | ( reg << 3 ) | rm		3522172	1		|			
ANR	3522778	ShiftExpression	mod << 6		3522172	0		<<			
ANR	3522779	Identifier	mod		3522172	0					
ANR	3522780	PrimaryExpression	6		3522172	1					
ANR	3522781	InclusiveOrExpression	( reg << 3 ) | rm		3522172	1		|			
ANR	3522782	ShiftExpression	reg << 3		3522172	0		<<			
ANR	3522783	Identifier	reg		3522172	0					
ANR	3522784	PrimaryExpression	3		3522172	1					
ANR	3522785	Identifier	rm		3522172	1					
ANR	3522786	ElseStatement	else		3522172	0					
ANR	3522787	CompoundStatement		104:2:2442:2486	3522172	0					
ANR	3522788	IfStatement	if ( op -> operands [ 0 ] . extended )		3522172	0					
ANR	3522789	Condition	op -> operands [ 0 ] . extended	1465:6:38274:38297	3522172	0	True				
ANR	3522790	MemberAccess	op -> operands [ 0 ] . extended		3522172	0					
ANR	3522791	ArrayIndexing	op -> operands [ 0 ]		3522172	0					
ANR	3522792	PtrMemberAccess	op -> operands		3522172	0					
ANR	3522793	Identifier	op		3522172	0					
ANR	3522794	Identifier	operands		3522172	1					
ANR	3522795	PrimaryExpression	0		3522172	1					
ANR	3522796	Identifier	extended		3522172	1					
ANR	3522797	CompoundStatement		92:32:2211:2211	3522172	1					
ANR	3522798	ExpressionStatement	rm = op -> operands [ 0 ] . reg	1466:3:38305:38329	3522172	0	True				
ANR	3522799	AssignmentExpression	rm = op -> operands [ 0 ] . reg		3522172	0		=			
ANR	3522800	Identifier	rm		3522172	0					
ANR	3522801	MemberAccess	op -> operands [ 0 ] . reg		3522172	1					
ANR	3522802	ArrayIndexing	op -> operands [ 0 ]		3522172	0					
ANR	3522803	PtrMemberAccess	op -> operands		3522172	0					
ANR	3522804	Identifier	op		3522172	0					
ANR	3522805	Identifier	operands		3522172	1					
ANR	3522806	PrimaryExpression	0		3522172	1					
ANR	3522807	Identifier	reg		3522172	1					
ANR	3522808	ElseStatement	else		3522172	0					
ANR	3522809	CompoundStatement		94:9:2251:2251	3522172	0					
ANR	3522810	ExpressionStatement	rm = op -> operands [ 0 ] . regs [ 0 ]	1468:3:38345:38373	3522172	0	True				
ANR	3522811	AssignmentExpression	rm = op -> operands [ 0 ] . regs [ 0 ]		3522172	0		=			
ANR	3522812	Identifier	rm		3522172	0					
ANR	3522813	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3522172	1					
ANR	3522814	MemberAccess	op -> operands [ 0 ] . regs		3522172	0					
ANR	3522815	ArrayIndexing	op -> operands [ 0 ]		3522172	0					
ANR	3522816	PtrMemberAccess	op -> operands		3522172	0					
ANR	3522817	Identifier	op		3522172	0					
ANR	3522818	Identifier	operands		3522172	1					
ANR	3522819	PrimaryExpression	0		3522172	1					
ANR	3522820	Identifier	regs		3522172	1					
ANR	3522821	PrimaryExpression	0		3522172	1					
ANR	3522822	IfStatement	if ( rm == 5 && mod == 0 )		3522172	1					
ANR	3522823	Condition	rm == 5 && mod == 0	1471:6:38442:38460	3522172	0	True				
ANR	3522824	AndExpression	rm == 5 && mod == 0		3522172	0		&&			
ANR	3522825	EqualityExpression	rm == 5		3522172	0		==			
ANR	3522826	Identifier	rm		3522172	0					
ANR	3522827	PrimaryExpression	5		3522172	1					
ANR	3522828	EqualityExpression	mod == 0		3522172	1		==			
ANR	3522829	Identifier	mod		3522172	0					
ANR	3522830	PrimaryExpression	0		3522172	1					
ANR	3522831	CompoundStatement		98:27:2374:2374	3522172	1					
ANR	3522832	ExpressionStatement	mod = 1	1472:3:38468:38475	3522172	0	True				
ANR	3522833	AssignmentExpression	mod = 1		3522172	0		=			
ANR	3522834	Identifier	mod		3522172	0					
ANR	3522835	PrimaryExpression	1		3522172	1					
ANR	3522836	IdentifierDeclStatement	int index = op -> operands [ 0 ] . regs [ 1 ] ;	1476:2:38492:38527	3522172	2	True				
ANR	3522837	IdentifierDecl	index = op -> operands [ 0 ] . regs [ 1 ]		3522172	0					
ANR	3522838	IdentifierDeclType	int		3522172	0					
ANR	3522839	Identifier	index		3522172	1					
ANR	3522840	AssignmentExpression	index = op -> operands [ 0 ] . regs [ 1 ]		3522172	2		=			
ANR	3522841	Identifier	index		3522172	0					
ANR	3522842	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		3522172	1					
ANR	3522843	MemberAccess	op -> operands [ 0 ] . regs		3522172	0					
ANR	3522844	ArrayIndexing	op -> operands [ 0 ]		3522172	0					
ANR	3522845	PtrMemberAccess	op -> operands		3522172	0					
ANR	3522846	Identifier	op		3522172	0					
ANR	3522847	Identifier	operands		3522172	1					
ANR	3522848	PrimaryExpression	0		3522172	1					
ANR	3522849	Identifier	regs		3522172	1					
ANR	3522850	PrimaryExpression	1		3522172	1					
ANR	3522851	IdentifierDeclStatement	int scale = getsib ( op -> operands [ 0 ] . scale [ 1 ] ) ;	1477:2:38531:38575	3522172	3	True				
ANR	3522852	IdentifierDecl	scale = getsib ( op -> operands [ 0 ] . scale [ 1 ] )		3522172	0					
ANR	3522853	IdentifierDeclType	int		3522172	0					
ANR	3522854	Identifier	scale		3522172	1					
ANR	3522855	AssignmentExpression	scale = getsib ( op -> operands [ 0 ] . scale [ 1 ] )		3522172	2		=			
ANR	3522856	Identifier	scale		3522172	0					
ANR	3522857	CallExpression	getsib ( op -> operands [ 0 ] . scale [ 1 ] )		3522172	1					
ANR	3522858	Callee	getsib		3522172	0					
ANR	3522859	Identifier	getsib		3522172	0					
ANR	3522860	ArgumentList	op -> operands [ 0 ] . scale [ 1 ]		3522172	1					
ANR	3522861	Argument	op -> operands [ 0 ] . scale [ 1 ]		3522172	0					
ANR	3522862	ArrayIndexing	op -> operands [ 0 ] . scale [ 1 ]		3522172	0					
ANR	3522863	MemberAccess	op -> operands [ 0 ] . scale		3522172	0					
ANR	3522864	ArrayIndexing	op -> operands [ 0 ]		3522172	0					
ANR	3522865	PtrMemberAccess	op -> operands		3522172	0					
ANR	3522866	Identifier	op		3522172	0					
ANR	3522867	Identifier	operands		3522172	1					
ANR	3522868	PrimaryExpression	0		3522172	1					
ANR	3522869	Identifier	scale		3522172	1					
ANR	3522870	PrimaryExpression	1		3522172	1					
ANR	3522871	IfStatement	if ( index != - 1 )		3522172	4					
ANR	3522872	Condition	index != - 1	1478:6:38583:38593	3522172	0	True				
ANR	3522873	EqualityExpression	index != - 1		3522172	0		!=			
ANR	3522874	Identifier	index		3522172	0					
ANR	3522875	UnaryOperationExpression	- 1		3522172	1					
ANR	3522876	UnaryOperator	-		3522172	0					
ANR	3522877	PrimaryExpression	1		3522172	1					
ANR	3522878	CompoundStatement		105:19:2507:2507	3522172	1					
ANR	3522879	ExpressionStatement	use_sib = true	1479:3:38601:38615	3522172	0	True				
ANR	3522880	AssignmentExpression	use_sib = true		3522172	0		=			
ANR	3522881	Identifier	use_sib		3522172	0					
ANR	3522882	Identifier	true		3522172	1					
ANR	3522883	ExpressionStatement	sib = ( scale << 6 ) | ( index << 3 ) | rm	1480:3:38620:38658	3522172	1	True				
ANR	3522884	AssignmentExpression	sib = ( scale << 6 ) | ( index << 3 ) | rm		3522172	0		=			
ANR	3522885	Identifier	sib		3522172	0					
ANR	3522886	InclusiveOrExpression	( scale << 6 ) | ( index << 3 ) | rm		3522172	1		|			
ANR	3522887	ShiftExpression	scale << 6		3522172	0		<<			
ANR	3522888	Identifier	scale		3522172	0					
ANR	3522889	PrimaryExpression	6		3522172	1					
ANR	3522890	InclusiveOrExpression	( index << 3 ) | rm		3522172	1		|			
ANR	3522891	ShiftExpression	index << 3		3522172	0		<<			
ANR	3522892	Identifier	index		3522172	0					
ANR	3522893	PrimaryExpression	3		3522172	1					
ANR	3522894	Identifier	rm		3522172	1					
ANR	3522895	ElseStatement	else		3522172	0					
ANR	3522896	IfStatement	if ( rm == 4 )		3522172	0					
ANR	3522897	Condition	rm == 4	1481:13:38673:38679	3522172	0	True				
ANR	3522898	EqualityExpression	rm == 4		3522172	0		==			
ANR	3522899	Identifier	rm		3522172	0					
ANR	3522900	PrimaryExpression	4		3522172	1					
ANR	3522901	CompoundStatement		108:22:2593:2593	3522172	1					
ANR	3522902	ExpressionStatement	use_sib = true	1482:3:38687:38701	3522172	0	True				
ANR	3522903	AssignmentExpression	use_sib = true		3522172	0		=			
ANR	3522904	Identifier	use_sib		3522172	0					
ANR	3522905	Identifier	true		3522172	1					
ANR	3522906	ExpressionStatement	sib = 0x24	1483:3:38706:38716	3522172	1	True				
ANR	3522907	AssignmentExpression	sib = 0x24		3522172	0		=			
ANR	3522908	Identifier	sib		3522172	0					
ANR	3522909	PrimaryExpression	0x24		3522172	1					
ANR	3522910	IfStatement	if ( use_sib )		3522172	5					
ANR	3522911	Condition	use_sib	1485:6:38728:38734	3522172	0	True				
ANR	3522912	Identifier	use_sib		3522172	0					
ANR	3522913	CompoundStatement		112:15:2648:2648	3522172	1					
ANR	3522914	ExpressionStatement	rm = B0100	1486:3:38742:38752	3522172	0	True				
ANR	3522915	AssignmentExpression	rm = B0100		3522172	0		=			
ANR	3522916	Identifier	rm		3522172	0					
ANR	3522917	Identifier	B0100		3522172	1					
ANR	3522918	IfStatement	if ( rip_rel )		3522172	6					
ANR	3522919	Condition	rip_rel	1488:6:38764:38770	3522172	0	True				
ANR	3522920	Identifier	rip_rel		3522172	0					
ANR	3522921	CompoundStatement		115:15:2684:2684	3522172	1					
ANR	3522922	ExpressionStatement	modrm = ( B0000 << 6 ) | ( reg << 3 ) | B0101	1489:3:38778:38819	3522172	0	True				
ANR	3522923	AssignmentExpression	modrm = ( B0000 << 6 ) | ( reg << 3 ) | B0101		3522172	0		=			
ANR	3522924	Identifier	modrm		3522172	0					
ANR	3522925	InclusiveOrExpression	( B0000 << 6 ) | ( reg << 3 ) | B0101		3522172	1		|			
ANR	3522926	ShiftExpression	B0000 << 6		3522172	0		<<			
ANR	3522927	Identifier	B0000		3522172	0					
ANR	3522928	PrimaryExpression	6		3522172	1					
ANR	3522929	InclusiveOrExpression	( reg << 3 ) | B0101		3522172	1		|			
ANR	3522930	ShiftExpression	reg << 3		3522172	0		<<			
ANR	3522931	Identifier	reg		3522172	0					
ANR	3522932	PrimaryExpression	3		3522172	1					
ANR	3522933	Identifier	B0101		3522172	1					
ANR	3522934	ExpressionStatement	sib = ( scale << 6 ) | ( B0100 << 3 ) | B0101	1490:3:38824:38865	3522172	1	True				
ANR	3522935	AssignmentExpression	sib = ( scale << 6 ) | ( B0100 << 3 ) | B0101		3522172	0		=			
ANR	3522936	Identifier	sib		3522172	0					
ANR	3522937	InclusiveOrExpression	( scale << 6 ) | ( B0100 << 3 ) | B0101		3522172	1		|			
ANR	3522938	ShiftExpression	scale << 6		3522172	0		<<			
ANR	3522939	Identifier	scale		3522172	0					
ANR	3522940	PrimaryExpression	6		3522172	1					
ANR	3522941	InclusiveOrExpression	( B0100 << 3 ) | B0101		3522172	1		|			
ANR	3522942	ShiftExpression	B0100 << 3		3522172	0		<<			
ANR	3522943	Identifier	B0100		3522172	0					
ANR	3522944	PrimaryExpression	3		3522172	1					
ANR	3522945	Identifier	B0101		3522172	1					
ANR	3522946	ElseStatement	else		3522172	0					
ANR	3522947	CompoundStatement		118:9:2787:2787	3522172	0					
ANR	3522948	ExpressionStatement	modrm = ( mod << 6 ) | ( reg << 3 ) | rm	1492:3:38881:38917	3522172	0	True				
ANR	3522949	AssignmentExpression	modrm = ( mod << 6 ) | ( reg << 3 ) | rm		3522172	0		=			
ANR	3522950	Identifier	modrm		3522172	0					
ANR	3522951	InclusiveOrExpression	( mod << 6 ) | ( reg << 3 ) | rm		3522172	1		|			
ANR	3522952	ShiftExpression	mod << 6		3522172	0		<<			
ANR	3522953	Identifier	mod		3522172	0					
ANR	3522954	PrimaryExpression	6		3522172	1					
ANR	3522955	InclusiveOrExpression	( reg << 3 ) | rm		3522172	1		|			
ANR	3522956	ShiftExpression	reg << 3		3522172	0		<<			
ANR	3522957	Identifier	reg		3522172	0					
ANR	3522958	PrimaryExpression	3		3522172	1					
ANR	3522959	Identifier	rm		3522172	1					
ANR	3522960	IfStatement	if ( use_rex )		3522172	23					
ANR	3522961	Condition	use_rex	1496:5:38932:38938	3522172	0	True				
ANR	3522962	Identifier	use_rex		3522172	0					
ANR	3522963	CompoundStatement		123:14:2852:2852	3522172	1					
ANR	3522964	ExpressionStatement	data [ l ++ ] = rex	1497:2:38945:38960	3522172	0	True				
ANR	3522965	AssignmentExpression	data [ l ++ ] = rex		3522172	0		=			
ANR	3522966	ArrayIndexing	data [ l ++ ]		3522172	0					
ANR	3522967	Identifier	data		3522172	0					
ANR	3522968	PostIncDecOperationExpression	l ++		3522172	1					
ANR	3522969	Identifier	l		3522172	0					
ANR	3522970	IncDec	++		3522172	1					
ANR	3522971	Identifier	rex		3522172	1					
ANR	3522972	ExpressionStatement	data [ l ++ ] = opcode	1499:1:38966:38984	3522172	24	True				
ANR	3522973	AssignmentExpression	data [ l ++ ] = opcode		3522172	0		=			
ANR	3522974	ArrayIndexing	data [ l ++ ]		3522172	0					
ANR	3522975	Identifier	data		3522172	0					
ANR	3522976	PostIncDecOperationExpression	l ++		3522172	1					
ANR	3522977	Identifier	l		3522172	0					
ANR	3522978	IncDec	++		3522172	1					
ANR	3522979	Identifier	opcode		3522172	1					
ANR	3522980	ExpressionStatement	data [ l ++ ] = modrm	1500:1:38987:39004	3522172	25	True				
ANR	3522981	AssignmentExpression	data [ l ++ ] = modrm		3522172	0		=			
ANR	3522982	ArrayIndexing	data [ l ++ ]		3522172	0					
ANR	3522983	Identifier	data		3522172	0					
ANR	3522984	PostIncDecOperationExpression	l ++		3522172	1					
ANR	3522985	Identifier	l		3522172	0					
ANR	3522986	IncDec	++		3522172	1					
ANR	3522987	Identifier	modrm		3522172	1					
ANR	3522988	IfStatement	if ( use_sib )		3522172	26					
ANR	3522989	Condition	use_sib	1501:5:39011:39017	3522172	0	True				
ANR	3522990	Identifier	use_sib		3522172	0					
ANR	3522991	CompoundStatement		128:14:2931:2931	3522172	1					
ANR	3522992	ExpressionStatement	data [ l ++ ] = sib	1502:2:39024:39039	3522172	0	True				
ANR	3522993	AssignmentExpression	data [ l ++ ] = sib		3522172	0		=			
ANR	3522994	ArrayIndexing	data [ l ++ ]		3522172	0					
ANR	3522995	Identifier	data		3522172	0					
ANR	3522996	PostIncDecOperationExpression	l ++		3522172	1					
ANR	3522997	Identifier	l		3522172	0					
ANR	3522998	IncDec	++		3522172	1					
ANR	3522999	Identifier	sib		3522172	1					
ANR	3523000	IfStatement	if ( mod == 1 )		3522172	27					
ANR	3523001	Condition	mod == 1	1505:5:39059:39066	3522172	0	True				
ANR	3523002	EqualityExpression	mod == 1		3522172	0		==			
ANR	3523003	Identifier	mod		3522172	0					
ANR	3523004	PrimaryExpression	1		3522172	1					
ANR	3523005	CompoundStatement		132:15:2980:2980	3522172	1					
ANR	3523006	ExpressionStatement	data [ l ++ ] = offset	1506:2:39073:39091	3522172	0	True				
ANR	3523007	AssignmentExpression	data [ l ++ ] = offset		3522172	0		=			
ANR	3523008	ArrayIndexing	data [ l ++ ]		3522172	0					
ANR	3523009	Identifier	data		3522172	0					
ANR	3523010	PostIncDecOperationExpression	l ++		3522172	1					
ANR	3523011	Identifier	l		3522172	0					
ANR	3523012	IncDec	++		3522172	1					
ANR	3523013	Identifier	offset		3522172	1					
ANR	3523014	ElseStatement	else		3522172	0					
ANR	3523015	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] & OT_WORD && mod == 2 )		3522172	0					
ANR	3523016	Condition	op -> operands [ 0 ] . regs [ 0 ] & OT_WORD && mod == 2	1507:12:39105:39149	3522172	0	True				
ANR	3523017	AndExpression	op -> operands [ 0 ] . regs [ 0 ] & OT_WORD && mod == 2		3522172	0		&&			
ANR	3523018	BitAndExpression	op -> operands [ 0 ] . regs [ 0 ] & OT_WORD		3522172	0		&			
ANR	3523019	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3522172	0					
ANR	3523020	MemberAccess	op -> operands [ 0 ] . regs		3522172	0					
ANR	3523021	ArrayIndexing	op -> operands [ 0 ]		3522172	0					
ANR	3523022	PtrMemberAccess	op -> operands		3522172	0					
ANR	3523023	Identifier	op		3522172	0					
ANR	3523024	Identifier	operands		3522172	1					
ANR	3523025	PrimaryExpression	0		3522172	1					
ANR	3523026	Identifier	regs		3522172	1					
ANR	3523027	PrimaryExpression	0		3522172	1					
ANR	3523028	Identifier	OT_WORD		3522172	1					
ANR	3523029	EqualityExpression	mod == 2		3522172	1		==			
ANR	3523030	Identifier	mod		3522172	0					
ANR	3523031	PrimaryExpression	2		3522172	1					
ANR	3523032	CompoundStatement		134:59:3063:3063	3522172	1					
ANR	3523033	ExpressionStatement	data [ l ++ ] = offset	1508:2:39156:39174	3522172	0	True				
ANR	3523034	AssignmentExpression	data [ l ++ ] = offset		3522172	0		=			
ANR	3523035	ArrayIndexing	data [ l ++ ]		3522172	0					
ANR	3523036	Identifier	data		3522172	0					
ANR	3523037	PostIncDecOperationExpression	l ++		3522172	1					
ANR	3523038	Identifier	l		3522172	0					
ANR	3523039	IncDec	++		3522172	1					
ANR	3523040	Identifier	offset		3522172	1					
ANR	3523041	ExpressionStatement	data [ l ++ ] = offset >> 8	1509:2:39178:39201	3522172	1	True				
ANR	3523042	AssignmentExpression	data [ l ++ ] = offset >> 8		3522172	0		=			
ANR	3523043	ArrayIndexing	data [ l ++ ]		3522172	0					
ANR	3523044	Identifier	data		3522172	0					
ANR	3523045	PostIncDecOperationExpression	l ++		3522172	1					
ANR	3523046	Identifier	l		3522172	0					
ANR	3523047	IncDec	++		3522172	1					
ANR	3523048	ShiftExpression	offset >> 8		3522172	1		>>			
ANR	3523049	Identifier	offset		3522172	0					
ANR	3523050	PrimaryExpression	8		3522172	1					
ANR	3523051	ElseStatement	else		3522172	0					
ANR	3523052	IfStatement	if ( mod == 2 || rip_rel )		3522172	0					
ANR	3523053	Condition	mod == 2 || rip_rel	1510:12:39215:39233	3522172	0	True				
ANR	3523054	OrExpression	mod == 2 || rip_rel		3522172	0		||			
ANR	3523055	EqualityExpression	mod == 2		3522172	0		==			
ANR	3523056	Identifier	mod		3522172	0					
ANR	3523057	PrimaryExpression	2		3522172	1					
ANR	3523058	Identifier	rip_rel		3522172	1					
ANR	3523059	CompoundStatement		137:33:3147:3147	3522172	1					
ANR	3523060	ExpressionStatement	data [ l ++ ] = offset	1511:2:39240:39258	3522172	0	True				
ANR	3523061	AssignmentExpression	data [ l ++ ] = offset		3522172	0		=			
ANR	3523062	ArrayIndexing	data [ l ++ ]		3522172	0					
ANR	3523063	Identifier	data		3522172	0					
ANR	3523064	PostIncDecOperationExpression	l ++		3522172	1					
ANR	3523065	Identifier	l		3522172	0					
ANR	3523066	IncDec	++		3522172	1					
ANR	3523067	Identifier	offset		3522172	1					
ANR	3523068	ExpressionStatement	data [ l ++ ] = offset >> 8	1512:2:39262:39285	3522172	1	True				
ANR	3523069	AssignmentExpression	data [ l ++ ] = offset >> 8		3522172	0		=			
ANR	3523070	ArrayIndexing	data [ l ++ ]		3522172	0					
ANR	3523071	Identifier	data		3522172	0					
ANR	3523072	PostIncDecOperationExpression	l ++		3522172	1					
ANR	3523073	Identifier	l		3522172	0					
ANR	3523074	IncDec	++		3522172	1					
ANR	3523075	ShiftExpression	offset >> 8		3522172	1		>>			
ANR	3523076	Identifier	offset		3522172	0					
ANR	3523077	PrimaryExpression	8		3522172	1					
ANR	3523078	ExpressionStatement	data [ l ++ ] = offset >> 16	1513:2:39289:39313	3522172	2	True				
ANR	3523079	AssignmentExpression	data [ l ++ ] = offset >> 16		3522172	0		=			
ANR	3523080	ArrayIndexing	data [ l ++ ]		3522172	0					
ANR	3523081	Identifier	data		3522172	0					
ANR	3523082	PostIncDecOperationExpression	l ++		3522172	1					
ANR	3523083	Identifier	l		3522172	0					
ANR	3523084	IncDec	++		3522172	1					
ANR	3523085	ShiftExpression	offset >> 16		3522172	1		>>			
ANR	3523086	Identifier	offset		3522172	0					
ANR	3523087	PrimaryExpression	16		3522172	1					
ANR	3523088	ExpressionStatement	data [ l ++ ] = offset >> 24	1514:2:39317:39341	3522172	3	True				
ANR	3523089	AssignmentExpression	data [ l ++ ] = offset >> 24		3522172	0		=			
ANR	3523090	ArrayIndexing	data [ l ++ ]		3522172	0					
ANR	3523091	Identifier	data		3522172	0					
ANR	3523092	PostIncDecOperationExpression	l ++		3522172	1					
ANR	3523093	Identifier	l		3522172	0					
ANR	3523094	IncDec	++		3522172	1					
ANR	3523095	ShiftExpression	offset >> 24		3522172	1		>>			
ANR	3523096	Identifier	offset		3522172	0					
ANR	3523097	PrimaryExpression	24		3522172	1					
ANR	3523098	ReturnStatement	return l ;	1517:1:39348:39356	3522172	28	True				
ANR	3523099	Identifier	l		3522172	0					
ANR	3523100	ReturnType	static int		3522172	1					
ANR	3523101	Identifier	opinc		3522172	2					
ANR	3523102	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3522172	3					
ANR	3523103	Parameter	RAsm * a	1374:17:36050:36056	3522172	0	True				
ANR	3523104	ParameterType	RAsm *		3522172	0					
ANR	3523105	Identifier	a		3522172	1					
ANR	3523106	Parameter	ut8 * data	1374:26:36059:36067	3522172	1	True				
ANR	3523107	ParameterType	ut8 *		3522172	0					
ANR	3523108	Identifier	data		3522172	1					
ANR	3523109	Parameter	const Opcode * op	1374:37:36070:36085	3522172	2	True				
ANR	3523110	ParameterType	const Opcode *		3522172	0					
ANR	3523111	Identifier	op		3522172	1					
ANR	3523112	CFGEntryNode	ENTRY		3522172		True				
ANR	3523113	CFGExitNode	EXIT		3522172		True				
ANR	3523114	Symbol	op -> operands [ 0 ] . offset_sign		3522172						
ANR	3523115	Symbol	mod		3522172						
ANR	3523116	Symbol	data		3522172						
ANR	3523117	Symbol	* op		3522172						
ANR	3523118	Symbol	op -> operands [ 0 ] . dest_size		3522172						
ANR	3523119	Symbol	opcode		3522172						
ANR	3523120	Symbol	modrm		3522172						
ANR	3523121	Symbol	op -> operands [ 0 ] . scale		3522172						
ANR	3523122	Symbol	op -> operands [ 0 ] . extended		3522172						
ANR	3523123	Symbol	* op -> operands		3522172						
ANR	3523124	Symbol	reg		3522172						
ANR	3523125	Symbol	op -> operands [ 0 ] . reg		3522172						
ANR	3523126	Symbol	op -> operands [ 0 ] . offset		3522172						
ANR	3523127	Symbol	B0111		3522172						
ANR	3523128	Symbol	OT_BYTE		3522172						
ANR	3523129	Symbol	a -> bits		3522172						
ANR	3523130	Symbol	rex		3522172						
ANR	3523131	Symbol	offset		3522172						
ANR	3523132	Symbol	use_sib		3522172						
ANR	3523133	Symbol	index		3522172						
ANR	3523134	Symbol	size		3522172						
ANR	3523135	Symbol	* op -> operands [ 0 ] . scale		3522172						
ANR	3523136	Symbol	true		3522172						
ANR	3523137	Symbol	* * * op		3522172						
ANR	3523138	Symbol	rm		3522172						
ANR	3523139	Symbol	X86R_DI		3522172						
ANR	3523140	Symbol	B0100		3522172						
ANR	3523141	Symbol	B0101		3522172						
ANR	3523142	Symbol	op -> operands [ 0 ] . regs		3522172						
ANR	3523143	Symbol	getsib		3522172						
ANR	3523144	Symbol	OT_QWORD		3522172						
ANR	3523145	Symbol	scale		3522172						
ANR	3523146	Symbol	sib		3522172						
ANR	3523147	Symbol	* * op		3522172						
ANR	3523148	Symbol	op -> operands [ 0 ] . type		3522172						
ANR	3523149	Symbol	B0010		3522172						
ANR	3523150	Symbol	B0011		3522172						
ANR	3523151	Symbol	OT_MEMORY		3522172						
ANR	3523152	Symbol	use_rex		3522172						
ANR	3523153	Symbol	a		3522172						
ANR	3523154	Symbol	op		3522172						
ANR	3523155	Symbol	OT_WORD		3522172						
ANR	3523156	Symbol	X86R_BP		3522172						
ANR	3523157	Symbol	op -> operands [ 0 ] . explicit_size		3522172						
ANR	3523158	Symbol	ALL_SIZE		3522172						
ANR	3523159	Symbol	false		3522172						
ANR	3523160	Symbol	X86R_BX		3522172						
ANR	3523161	Symbol	X86R_SI		3522172						
ANR	3523162	Symbol	* a		3522172						
ANR	3523163	Symbol	* * op -> operands		3522172						
ANR	3523164	Symbol	l		3522172						
ANR	3523165	Symbol	X86R_RIP		3522172						
ANR	3523166	Symbol	op -> operands [ 1 ] . type		3522172						
ANR	3523167	Symbol	* op -> operands [ 0 ] . regs		3522172						
ANR	3523168	Symbol	rip_rel		3522172						
ANR	3523169	Symbol	B0000		3522172						
ANR	3523170	Symbol	B0001		3522172						
ANR	3523171	Symbol	op -> operands		3522172						
ANR	3523172	Symbol	* data		3522172						
ANR	3523173	Symbol	OT_DWORD		3522172						
ANR	3523174	Function	opint	1520:0:39361:39654							
ANR	3523175	FunctionDef	"opint (RAsm * a , ut8 * data , const Opcode * op)"		3523174	0					
ANR	3523176	CompoundStatement		1520:55:39416:39654	3523174	0					
ANR	3523177	IdentifierDeclStatement	int l = 0 ;	1521:1:39419:39428	3523174	0	True				
ANR	3523178	IdentifierDecl	l = 0		3523174	0					
ANR	3523179	IdentifierDeclType	int		3523174	0					
ANR	3523180	Identifier	l		3523174	1					
ANR	3523181	AssignmentExpression	l = 0		3523174	2		=			
ANR	3523182	Identifier	l		3523174	0					
ANR	3523183	PrimaryExpression	0		3523174	1					
ANR	3523184	IfStatement	if ( op -> operands [ 0 ] . type & OT_CONSTANT )		3523174	1					
ANR	3523185	Condition	op -> operands [ 0 ] . type & OT_CONSTANT	1522:5:39435:39468	3523174	0	True				
ANR	3523186	BitAndExpression	op -> operands [ 0 ] . type & OT_CONSTANT		3523174	0		&			
ANR	3523187	MemberAccess	op -> operands [ 0 ] . type		3523174	0					
ANR	3523188	ArrayIndexing	op -> operands [ 0 ]		3523174	0					
ANR	3523189	PtrMemberAccess	op -> operands		3523174	0					
ANR	3523190	Identifier	op		3523174	0					
ANR	3523191	Identifier	operands		3523174	1					
ANR	3523192	PrimaryExpression	0		3523174	1					
ANR	3523193	Identifier	type		3523174	1					
ANR	3523194	Identifier	OT_CONSTANT		3523174	1					
ANR	3523195	CompoundStatement		4:2:58:123	3523174	1					
ANR	3523196	IdentifierDeclStatement	st32 immediate = op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign ;	1523:2:39475:39540	3523174	0	True				
ANR	3523197	IdentifierDecl	immediate = op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign		3523174	0					
ANR	3523198	IdentifierDeclType	st32		3523174	0					
ANR	3523199	Identifier	immediate		3523174	1					
ANR	3523200	AssignmentExpression	immediate = op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign		3523174	2		=			
ANR	3523201	Identifier	immediate		3523174	0					
ANR	3523202	MultiplicativeExpression	op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign		3523174	1		*			
ANR	3523203	MemberAccess	op -> operands [ 0 ] . immediate		3523174	0					
ANR	3523204	ArrayIndexing	op -> operands [ 0 ]		3523174	0					
ANR	3523205	PtrMemberAccess	op -> operands		3523174	0					
ANR	3523206	Identifier	op		3523174	0					
ANR	3523207	Identifier	operands		3523174	1					
ANR	3523208	PrimaryExpression	0		3523174	1					
ANR	3523209	Identifier	immediate		3523174	1					
ANR	3523210	MemberAccess	op -> operands [ 0 ] . sign		3523174	1					
ANR	3523211	ArrayIndexing	op -> operands [ 0 ]		3523174	0					
ANR	3523212	PtrMemberAccess	op -> operands		3523174	0					
ANR	3523213	Identifier	op		3523174	0					
ANR	3523214	Identifier	operands		3523174	1					
ANR	3523215	PrimaryExpression	0		3523174	1					
ANR	3523216	Identifier	sign		3523174	1					
ANR	3523217	IfStatement	if ( immediate <= 255 && immediate >= - 128 )		3523174	1					
ANR	3523218	Condition	immediate <= 255 && immediate >= - 128	1524:6:39548:39584	3523174	0	True				
ANR	3523219	AndExpression	immediate <= 255 && immediate >= - 128		3523174	0		&&			
ANR	3523220	RelationalExpression	immediate <= 255		3523174	0		<=			
ANR	3523221	Identifier	immediate		3523174	0					
ANR	3523222	PrimaryExpression	255		3523174	1					
ANR	3523223	RelationalExpression	immediate >= - 128		3523174	1		>=			
ANR	3523224	Identifier	immediate		3523174	0					
ANR	3523225	UnaryOperationExpression	- 128		3523174	1					
ANR	3523226	UnaryOperator	-		3523174	0					
ANR	3523227	PrimaryExpression	128		3523174	1					
ANR	3523228	CompoundStatement		5:45:170:170	3523174	1					
ANR	3523229	ExpressionStatement	data [ l ++ ] = 0xcd	1525:3:39592:39608	3523174	0	True				
ANR	3523230	AssignmentExpression	data [ l ++ ] = 0xcd		3523174	0		=			
ANR	3523231	ArrayIndexing	data [ l ++ ]		3523174	0					
ANR	3523232	Identifier	data		3523174	0					
ANR	3523233	PostIncDecOperationExpression	l ++		3523174	1					
ANR	3523234	Identifier	l		3523174	0					
ANR	3523235	IncDec	++		3523174	1					
ANR	3523236	PrimaryExpression	0xcd		3523174	1					
ANR	3523237	ExpressionStatement	data [ l ++ ] = immediate	1526:3:39613:39634	3523174	1	True				
ANR	3523238	AssignmentExpression	data [ l ++ ] = immediate		3523174	0		=			
ANR	3523239	ArrayIndexing	data [ l ++ ]		3523174	0					
ANR	3523240	Identifier	data		3523174	0					
ANR	3523241	PostIncDecOperationExpression	l ++		3523174	1					
ANR	3523242	Identifier	l		3523174	0					
ANR	3523243	IncDec	++		3523174	1					
ANR	3523244	Identifier	immediate		3523174	1					
ANR	3523245	ReturnStatement	return l ;	1529:1:39644:39652	3523174	2	True				
ANR	3523246	Identifier	l		3523174	0					
ANR	3523247	ReturnType	static int		3523174	1					
ANR	3523248	Identifier	opint		3523174	2					
ANR	3523249	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3523174	3					
ANR	3523250	Parameter	RAsm * a	1520:17:39378:39384	3523174	0	True				
ANR	3523251	ParameterType	RAsm *		3523174	0					
ANR	3523252	Identifier	a		3523174	1					
ANR	3523253	Parameter	ut8 * data	1520:26:39387:39395	3523174	1	True				
ANR	3523254	ParameterType	ut8 *		3523174	0					
ANR	3523255	Identifier	data		3523174	1					
ANR	3523256	Parameter	const Opcode * op	1520:37:39398:39413	3523174	2	True				
ANR	3523257	ParameterType	const Opcode *		3523174	0					
ANR	3523258	Identifier	op		3523174	1					
ANR	3523259	CFGEntryNode	ENTRY		3523174		True				
ANR	3523260	CFGExitNode	EXIT		3523174		True				
ANR	3523261	Symbol	a		3523174						
ANR	3523262	Symbol	op		3523174						
ANR	3523263	Symbol	OT_CONSTANT		3523174						
ANR	3523264	Symbol	data		3523174						
ANR	3523265	Symbol	* op		3523174						
ANR	3523266	Symbol	l		3523174						
ANR	3523267	Symbol	op -> operands [ 0 ] . immediate		3523174						
ANR	3523268	Symbol	* * op		3523174						
ANR	3523269	Symbol	* op -> operands		3523174						
ANR	3523270	Symbol	immediate		3523174						
ANR	3523271	Symbol	op -> operands [ 0 ] . type		3523174						
ANR	3523272	Symbol	op -> operands		3523174						
ANR	3523273	Symbol	* data		3523174						
ANR	3523274	Symbol	op -> operands [ 0 ] . sign		3523174						
ANR	3523275	Function	opjc	1532:0:39657:43502							
ANR	3523276	FunctionDef	"opjc (RAsm * a , ut8 * data , const Opcode * op)"		3523275	0					
ANR	3523277	CompoundStatement		1532:54:39711:43502	3523275	0					
ANR	3523278	ExpressionStatement	is_valid_registers ( op )	1533:1:39714:39737	3523275	0	True				
ANR	3523279	CallExpression	is_valid_registers ( op )		3523275	0					
ANR	3523280	Callee	is_valid_registers		3523275	0					
ANR	3523281	Identifier	is_valid_registers		3523275	0					
ANR	3523282	ArgumentList	op		3523275	1					
ANR	3523283	Argument	op		3523275	0					
ANR	3523284	Identifier	op		3523275	0					
ANR	3523285	IdentifierDeclStatement	int l = 0 ;	1534:1:39740:39749	3523275	1	True				
ANR	3523286	IdentifierDecl	l = 0		3523275	0					
ANR	3523287	IdentifierDeclType	int		3523275	0					
ANR	3523288	Identifier	l		3523275	1					
ANR	3523289	AssignmentExpression	l = 0		3523275	2		=			
ANR	3523290	Identifier	l		3523275	0					
ANR	3523291	PrimaryExpression	0		3523275	1					
ANR	3523292	IdentifierDeclStatement	bool is_short = op -> is_short ;	1535:1:39752:39780	3523275	2	True				
ANR	3523293	IdentifierDecl	is_short = op -> is_short		3523275	0					
ANR	3523294	IdentifierDeclType	bool		3523275	0					
ANR	3523295	Identifier	is_short		3523275	1					
ANR	3523296	AssignmentExpression	is_short = op -> is_short		3523275	2		=			
ANR	3523297	Identifier	is_short		3523275	0					
ANR	3523298	PtrMemberAccess	op -> is_short		3523275	1					
ANR	3523299	Identifier	op		3523275	0					
ANR	3523300	Identifier	is_short		3523275	1					
ANR	3523301	IdentifierDeclStatement	st64 immediate = op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign ;	1537:1:39851:39916	3523275	3	True				
ANR	3523302	IdentifierDecl	immediate = op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign		3523275	0					
ANR	3523303	IdentifierDeclType	st64		3523275	0					
ANR	3523304	Identifier	immediate		3523275	1					
ANR	3523305	AssignmentExpression	immediate = op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign		3523275	2		=			
ANR	3523306	Identifier	immediate		3523275	0					
ANR	3523307	MultiplicativeExpression	op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign		3523275	1		*			
ANR	3523308	MemberAccess	op -> operands [ 0 ] . immediate		3523275	0					
ANR	3523309	ArrayIndexing	op -> operands [ 0 ]		3523275	0					
ANR	3523310	PtrMemberAccess	op -> operands		3523275	0					
ANR	3523311	Identifier	op		3523275	0					
ANR	3523312	Identifier	operands		3523275	1					
ANR	3523313	PrimaryExpression	0		3523275	1					
ANR	3523314	Identifier	immediate		3523275	1					
ANR	3523315	MemberAccess	op -> operands [ 0 ] . sign		3523275	1					
ANR	3523316	ArrayIndexing	op -> operands [ 0 ]		3523275	0					
ANR	3523317	PtrMemberAccess	op -> operands		3523275	0					
ANR	3523318	Identifier	op		3523275	0					
ANR	3523319	Identifier	operands		3523275	1					
ANR	3523320	PrimaryExpression	0		3523275	1					
ANR	3523321	Identifier	sign		3523275	1					
ANR	3523322	IfStatement	if ( is_short && ( immediate > ST8_MAX || immediate < ST8_MIN ) )		3523275	4					
ANR	3523323	Condition	is_short && ( immediate > ST8_MAX || immediate < ST8_MIN )	1538:5:39923:39978	3523275	0	True				
ANR	3523324	AndExpression	is_short && ( immediate > ST8_MAX || immediate < ST8_MIN )		3523275	0		&&			
ANR	3523325	Identifier	is_short		3523275	0					
ANR	3523326	OrExpression	immediate > ST8_MAX || immediate < ST8_MIN		3523275	1		||			
ANR	3523327	RelationalExpression	immediate > ST8_MAX		3523275	0		>			
ANR	3523328	Identifier	immediate		3523275	0					
ANR	3523329	Identifier	ST8_MAX		3523275	1					
ANR	3523330	RelationalExpression	immediate < ST8_MIN		3523275	1		<			
ANR	3523331	Identifier	immediate		3523275	0					
ANR	3523332	Identifier	ST8_MIN		3523275	1					
ANR	3523333	CompoundStatement		7:63:269:269	3523275	1					
ANR	3523334	ReturnStatement	return l ;	1539:2:39985:39993	3523275	0	True				
ANR	3523335	Identifier	l		3523275	0					
ANR	3523336	ExpressionStatement	immediate -= a -> pc	1541:1:39999:40017	3523275	5	True				
ANR	3523337	AssignmentExpression	immediate -= a -> pc		3523275	0		-=			
ANR	3523338	Identifier	immediate		3523275	0					
ANR	3523339	PtrMemberAccess	a -> pc		3523275	1					
ANR	3523340	Identifier	a		3523275	0					
ANR	3523341	Identifier	pc		3523275	1					
ANR	3523342	IfStatement	if ( immediate > ST32_MAX || immediate < - ST32_MAX )		3523275	6					
ANR	3523343	Condition	immediate > ST32_MAX || immediate < - ST32_MAX	1542:5:40024:40068	3523275	0	True				
ANR	3523344	OrExpression	immediate > ST32_MAX || immediate < - ST32_MAX		3523275	0		||			
ANR	3523345	RelationalExpression	immediate > ST32_MAX		3523275	0		>			
ANR	3523346	Identifier	immediate		3523275	0					
ANR	3523347	Identifier	ST32_MAX		3523275	1					
ANR	3523348	RelationalExpression	immediate < - ST32_MAX		3523275	1		<			
ANR	3523349	Identifier	immediate		3523275	0					
ANR	3523350	UnaryOperationExpression	- ST32_MAX		3523275	1					
ANR	3523351	UnaryOperator	-		3523275	0					
ANR	3523352	Identifier	ST32_MAX		3523275	1					
ANR	3523353	CompoundStatement		11:52:359:359	3523275	1					
ANR	3523354	ReturnStatement	return - 1 ;	1543:2:40075:40084	3523275	0	True				
ANR	3523355	UnaryOperationExpression	- 1		3523275	0					
ANR	3523356	UnaryOperator	-		3523275	0					
ANR	3523357	PrimaryExpression	1		3523275	1					
ANR	3523358	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""jmp"" ) )"		3523275	7					
ANR	3523359	Condition	"! strcmp ( op -> mnemonic , ""jmp"" )"	1545:5:40094:40122	3523275	0	True				
ANR	3523360	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jmp"" )"		3523275	0					
ANR	3523361	UnaryOperator	!		3523275	0					
ANR	3523362	CallExpression	"strcmp ( op -> mnemonic , ""jmp"" )"		3523275	1					
ANR	3523363	Callee	strcmp		3523275	0					
ANR	3523364	Identifier	strcmp		3523275	0					
ANR	3523365	ArgumentList	op -> mnemonic		3523275	1					
ANR	3523366	Argument	op -> mnemonic		3523275	0					
ANR	3523367	PtrMemberAccess	op -> mnemonic		3523275	0					
ANR	3523368	Identifier	op		3523275	0					
ANR	3523369	Identifier	mnemonic		3523275	1					
ANR	3523370	Argument	"""jmp"""		3523275	1					
ANR	3523371	PrimaryExpression	"""jmp"""		3523275	0					
ANR	3523372	CompoundStatement		14:36:413:413	3523275	1					
ANR	3523373	IfStatement	if ( op -> operands [ 0 ] . type & OT_GPREG )		3523275	0					
ANR	3523374	Condition	op -> operands [ 0 ] . type & OT_GPREG	1546:6:40133:40163	3523275	0	True				
ANR	3523375	BitAndExpression	op -> operands [ 0 ] . type & OT_GPREG		3523275	0		&			
ANR	3523376	MemberAccess	op -> operands [ 0 ] . type		3523275	0					
ANR	3523377	ArrayIndexing	op -> operands [ 0 ]		3523275	0					
ANR	3523378	PtrMemberAccess	op -> operands		3523275	0					
ANR	3523379	Identifier	op		3523275	0					
ANR	3523380	Identifier	operands		3523275	1					
ANR	3523381	PrimaryExpression	0		3523275	1					
ANR	3523382	Identifier	type		3523275	1					
ANR	3523383	Identifier	OT_GPREG		3523275	1					
ANR	3523384	CompoundStatement		15:39:454:454	3523275	1					
ANR	3523385	ExpressionStatement	data [ l ++ ] = 0xff	1547:3:40171:40187	3523275	0	True				
ANR	3523386	AssignmentExpression	data [ l ++ ] = 0xff		3523275	0		=			
ANR	3523387	ArrayIndexing	data [ l ++ ]		3523275	0					
ANR	3523388	Identifier	data		3523275	0					
ANR	3523389	PostIncDecOperationExpression	l ++		3523275	1					
ANR	3523390	Identifier	l		3523275	0					
ANR	3523391	IncDec	++		3523275	1					
ANR	3523392	PrimaryExpression	0xff		3523275	1					
ANR	3523393	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3523275	1					
ANR	3523394	Condition	op -> operands [ 0 ] . type & OT_MEMORY	1548:7:40196:40227	3523275	0	True				
ANR	3523395	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3523275	0		&			
ANR	3523396	MemberAccess	op -> operands [ 0 ] . type		3523275	0					
ANR	3523397	ArrayIndexing	op -> operands [ 0 ]		3523275	0					
ANR	3523398	PtrMemberAccess	op -> operands		3523275	0					
ANR	3523399	Identifier	op		3523275	0					
ANR	3523400	Identifier	operands		3523275	1					
ANR	3523401	PrimaryExpression	0		3523275	1					
ANR	3523402	Identifier	type		3523275	1					
ANR	3523403	Identifier	OT_MEMORY		3523275	1					
ANR	3523404	CompoundStatement		17:41:518:518	3523275	1					
ANR	3523405	IfStatement	if ( op -> operands [ 0 ] . offset )		3523275	0					
ANR	3523406	Condition	op -> operands [ 0 ] . offset	1549:8:40240:40261	3523275	0	True				
ANR	3523407	MemberAccess	op -> operands [ 0 ] . offset		3523275	0					
ANR	3523408	ArrayIndexing	op -> operands [ 0 ]		3523275	0					
ANR	3523409	PtrMemberAccess	op -> operands		3523275	0					
ANR	3523410	Identifier	op		3523275	0					
ANR	3523411	Identifier	operands		3523275	1					
ANR	3523412	PrimaryExpression	0		3523275	1					
ANR	3523413	Identifier	offset		3523275	1					
ANR	3523414	CompoundStatement		19:5:559:624	3523275	1					
ANR	3523415	IdentifierDeclStatement	int offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign ;	1550:5:40271:40336	3523275	0	True				
ANR	3523416	IdentifierDecl	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		3523275	0					
ANR	3523417	IdentifierDeclType	int		3523275	0					
ANR	3523418	Identifier	offset		3523275	1					
ANR	3523419	AssignmentExpression	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		3523275	2		=			
ANR	3523420	Identifier	offset		3523275	0					
ANR	3523421	MultiplicativeExpression	op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		3523275	1		*			
ANR	3523422	MemberAccess	op -> operands [ 0 ] . offset		3523275	0					
ANR	3523423	ArrayIndexing	op -> operands [ 0 ]		3523275	0					
ANR	3523424	PtrMemberAccess	op -> operands		3523275	0					
ANR	3523425	Identifier	op		3523275	0					
ANR	3523426	Identifier	operands		3523275	1					
ANR	3523427	PrimaryExpression	0		3523275	1					
ANR	3523428	Identifier	offset		3523275	1					
ANR	3523429	MemberAccess	op -> operands [ 0 ] . offset_sign		3523275	1					
ANR	3523430	ArrayIndexing	op -> operands [ 0 ]		3523275	0					
ANR	3523431	PtrMemberAccess	op -> operands		3523275	0					
ANR	3523432	Identifier	op		3523275	0					
ANR	3523433	Identifier	operands		3523275	1					
ANR	3523434	PrimaryExpression	0		3523275	1					
ANR	3523435	Identifier	offset_sign		3523275	1					
ANR	3523436	IfStatement	if ( offset >= 128 || offset <= - 129 )		3523275	1					
ANR	3523437	Condition	offset >= 128 || offset <= - 129	1551:9:40347:40377	3523275	0	True				
ANR	3523438	OrExpression	offset >= 128 || offset <= - 129		3523275	0		||			
ANR	3523439	RelationalExpression	offset >= 128		3523275	0		>=			
ANR	3523440	Identifier	offset		3523275	0					
ANR	3523441	PrimaryExpression	128		3523275	1					
ANR	3523442	RelationalExpression	offset <= - 129		3523275	1		<=			
ANR	3523443	Identifier	offset		3523275	0					
ANR	3523444	UnaryOperationExpression	- 129		3523275	1					
ANR	3523445	UnaryOperator	-		3523275	0					
ANR	3523446	PrimaryExpression	129		3523275	1					
ANR	3523447	CompoundStatement		20:42:668:668	3523275	1					
ANR	3523448	ExpressionStatement	data [ l ] = 0xa0	1552:6:40388:40402	3523275	0	True				
ANR	3523449	AssignmentExpression	data [ l ] = 0xa0		3523275	0		=			
ANR	3523450	ArrayIndexing	data [ l ]		3523275	0					
ANR	3523451	Identifier	data		3523275	0					
ANR	3523452	Identifier	l		3523275	1					
ANR	3523453	PrimaryExpression	0xa0		3523275	1					
ANR	3523454	ElseStatement	else		3523275	0					
ANR	3523455	CompoundStatement		22:12:704:704	3523275	0					
ANR	3523456	ExpressionStatement	data [ l ] = 0x60	1554:6:40424:40438	3523275	0	True				
ANR	3523457	AssignmentExpression	data [ l ] = 0x60		3523275	0		=			
ANR	3523458	ArrayIndexing	data [ l ]		3523275	0					
ANR	3523459	Identifier	data		3523275	0					
ANR	3523460	Identifier	l		3523275	1					
ANR	3523461	PrimaryExpression	0x60		3523275	1					
ANR	3523462	ExpressionStatement	data [ l ++ ] |= op -> operands [ 0 ] . regs [ 0 ]	1556:5:40452:40488	3523275	2	True				
ANR	3523463	AssignmentExpression	data [ l ++ ] |= op -> operands [ 0 ] . regs [ 0 ]		3523275	0		|=			
ANR	3523464	ArrayIndexing	data [ l ++ ]		3523275	0					
ANR	3523465	Identifier	data		3523275	0					
ANR	3523466	PostIncDecOperationExpression	l ++		3523275	1					
ANR	3523467	Identifier	l		3523275	0					
ANR	3523468	IncDec	++		3523275	1					
ANR	3523469	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3523275	1					
ANR	3523470	MemberAccess	op -> operands [ 0 ] . regs		3523275	0					
ANR	3523471	ArrayIndexing	op -> operands [ 0 ]		3523275	0					
ANR	3523472	PtrMemberAccess	op -> operands		3523275	0					
ANR	3523473	Identifier	op		3523275	0					
ANR	3523474	Identifier	operands		3523275	1					
ANR	3523475	PrimaryExpression	0		3523275	1					
ANR	3523476	Identifier	regs		3523275	1					
ANR	3523477	PrimaryExpression	0		3523275	1					
ANR	3523478	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP )		3523275	3					
ANR	3523479	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP	1557:9:40499:40533	3523275	0	True				
ANR	3523480	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP		3523275	0		==			
ANR	3523481	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3523275	0					
ANR	3523482	MemberAccess	op -> operands [ 0 ] . regs		3523275	0					
ANR	3523483	ArrayIndexing	op -> operands [ 0 ]		3523275	0					
ANR	3523484	PtrMemberAccess	op -> operands		3523275	0					
ANR	3523485	Identifier	op		3523275	0					
ANR	3523486	Identifier	operands		3523275	1					
ANR	3523487	PrimaryExpression	0		3523275	1					
ANR	3523488	Identifier	regs		3523275	1					
ANR	3523489	PrimaryExpression	0		3523275	1					
ANR	3523490	Identifier	X86R_ESP		3523275	1					
ANR	3523491	CompoundStatement		26:46:824:824	3523275	1					
ANR	3523492	ExpressionStatement	data [ l ++ ] = 0x24	1558:6:40544:40560	3523275	0	True				
ANR	3523493	AssignmentExpression	data [ l ++ ] = 0x24		3523275	0		=			
ANR	3523494	ArrayIndexing	data [ l ++ ]		3523275	0					
ANR	3523495	Identifier	data		3523275	0					
ANR	3523496	PostIncDecOperationExpression	l ++		3523275	1					
ANR	3523497	Identifier	l		3523275	0					
ANR	3523498	IncDec	++		3523275	1					
ANR	3523499	PrimaryExpression	0x24		3523275	1					
ANR	3523500	ExpressionStatement	data [ l ++ ] = offset	1560:5:40574:40592	3523275	4	True				
ANR	3523501	AssignmentExpression	data [ l ++ ] = offset		3523275	0		=			
ANR	3523502	ArrayIndexing	data [ l ++ ]		3523275	0					
ANR	3523503	Identifier	data		3523275	0					
ANR	3523504	PostIncDecOperationExpression	l ++		3523275	1					
ANR	3523505	Identifier	l		3523275	0					
ANR	3523506	IncDec	++		3523275	1					
ANR	3523507	Identifier	offset		3523275	1					
ANR	3523508	IfStatement	if ( op -> operands [ 0 ] . offset >= 0x80 )		3523275	5					
ANR	3523509	Condition	op -> operands [ 0 ] . offset >= 0x80	1561:9:40603:40632	3523275	0	True				
ANR	3523510	RelationalExpression	op -> operands [ 0 ] . offset >= 0x80		3523275	0		>=			
ANR	3523511	MemberAccess	op -> operands [ 0 ] . offset		3523275	0					
ANR	3523512	ArrayIndexing	op -> operands [ 0 ]		3523275	0					
ANR	3523513	PtrMemberAccess	op -> operands		3523275	0					
ANR	3523514	Identifier	op		3523275	0					
ANR	3523515	Identifier	operands		3523275	1					
ANR	3523516	PrimaryExpression	0		3523275	1					
ANR	3523517	Identifier	offset		3523275	1					
ANR	3523518	PrimaryExpression	0x80		3523275	1					
ANR	3523519	CompoundStatement		30:41:923:923	3523275	1					
ANR	3523520	ExpressionStatement	data [ l ++ ] = offset >> 8	1562:6:40643:40666	3523275	0	True				
ANR	3523521	AssignmentExpression	data [ l ++ ] = offset >> 8		3523275	0		=			
ANR	3523522	ArrayIndexing	data [ l ++ ]		3523275	0					
ANR	3523523	Identifier	data		3523275	0					
ANR	3523524	PostIncDecOperationExpression	l ++		3523275	1					
ANR	3523525	Identifier	l		3523275	0					
ANR	3523526	IncDec	++		3523275	1					
ANR	3523527	ShiftExpression	offset >> 8		3523275	1		>>			
ANR	3523528	Identifier	offset		3523275	0					
ANR	3523529	PrimaryExpression	8		3523275	1					
ANR	3523530	ExpressionStatement	data [ l ++ ] = offset >> 16	1563:6:40674:40698	3523275	1	True				
ANR	3523531	AssignmentExpression	data [ l ++ ] = offset >> 16		3523275	0		=			
ANR	3523532	ArrayIndexing	data [ l ++ ]		3523275	0					
ANR	3523533	Identifier	data		3523275	0					
ANR	3523534	PostIncDecOperationExpression	l ++		3523275	1					
ANR	3523535	Identifier	l		3523275	0					
ANR	3523536	IncDec	++		3523275	1					
ANR	3523537	ShiftExpression	offset >> 16		3523275	1		>>			
ANR	3523538	Identifier	offset		3523275	0					
ANR	3523539	PrimaryExpression	16		3523275	1					
ANR	3523540	ExpressionStatement	data [ l ++ ] = offset >> 24	1564:6:40706:40730	3523275	2	True				
ANR	3523541	AssignmentExpression	data [ l ++ ] = offset >> 24		3523275	0		=			
ANR	3523542	ArrayIndexing	data [ l ++ ]		3523275	0					
ANR	3523543	Identifier	data		3523275	0					
ANR	3523544	PostIncDecOperationExpression	l ++		3523275	1					
ANR	3523545	Identifier	l		3523275	0					
ANR	3523546	IncDec	++		3523275	1					
ANR	3523547	ShiftExpression	offset >> 24		3523275	1		>>			
ANR	3523548	Identifier	offset		3523275	0					
ANR	3523549	PrimaryExpression	24		3523275	1					
ANR	3523550	ElseStatement	else		3523275	0					
ANR	3523551	CompoundStatement		35:11:1038:1038	3523275	0					
ANR	3523552	ExpressionStatement	data [ l ++ ] = 0x20 | op -> operands [ 0 ] . regs [ 0 ]	1567:5:40757:40799	3523275	0	True				
ANR	3523553	AssignmentExpression	data [ l ++ ] = 0x20 | op -> operands [ 0 ] . regs [ 0 ]		3523275	0		=			
ANR	3523554	ArrayIndexing	data [ l ++ ]		3523275	0					
ANR	3523555	Identifier	data		3523275	0					
ANR	3523556	PostIncDecOperationExpression	l ++		3523275	1					
ANR	3523557	Identifier	l		3523275	0					
ANR	3523558	IncDec	++		3523275	1					
ANR	3523559	InclusiveOrExpression	0x20 | op -> operands [ 0 ] . regs [ 0 ]		3523275	1		|			
ANR	3523560	PrimaryExpression	0x20		3523275	0					
ANR	3523561	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3523275	1					
ANR	3523562	MemberAccess	op -> operands [ 0 ] . regs		3523275	0					
ANR	3523563	ArrayIndexing	op -> operands [ 0 ]		3523275	0					
ANR	3523564	PtrMemberAccess	op -> operands		3523275	0					
ANR	3523565	Identifier	op		3523275	0					
ANR	3523566	Identifier	operands		3523275	1					
ANR	3523567	PrimaryExpression	0		3523275	1					
ANR	3523568	Identifier	regs		3523275	1					
ANR	3523569	PrimaryExpression	0		3523275	1					
ANR	3523570	ElseStatement	else		3523275	0					
ANR	3523571	CompoundStatement		38:10:1105:1105	3523275	0					
ANR	3523572	ExpressionStatement	data [ l ++ ] = 0xe0 | op -> operands [ 0 ] . reg	1570:4:40823:40861	3523275	0	True				
ANR	3523573	AssignmentExpression	data [ l ++ ] = 0xe0 | op -> operands [ 0 ] . reg		3523275	0		=			
ANR	3523574	ArrayIndexing	data [ l ++ ]		3523275	0					
ANR	3523575	Identifier	data		3523275	0					
ANR	3523576	PostIncDecOperationExpression	l ++		3523275	1					
ANR	3523577	Identifier	l		3523275	0					
ANR	3523578	IncDec	++		3523275	1					
ANR	3523579	InclusiveOrExpression	0xe0 | op -> operands [ 0 ] . reg		3523275	1		|			
ANR	3523580	PrimaryExpression	0xe0		3523275	0					
ANR	3523581	MemberAccess	op -> operands [ 0 ] . reg		3523275	1					
ANR	3523582	ArrayIndexing	op -> operands [ 0 ]		3523275	0					
ANR	3523583	PtrMemberAccess	op -> operands		3523275	0					
ANR	3523584	Identifier	op		3523275	0					
ANR	3523585	Identifier	operands		3523275	1					
ANR	3523586	PrimaryExpression	0		3523275	1					
ANR	3523587	Identifier	reg		3523275	1					
ANR	3523588	ElseStatement	else		3523275	0					
ANR	3523589	CompoundStatement		41:9:1165:1165	3523275	0					
ANR	3523590	IfStatement	if ( - 0x80 <= ( immediate - 2 ) && ( immediate - 2 ) <= 0x7f )		3523275	0					
ANR	3523591	Condition	- 0x80 <= ( immediate - 2 ) && ( immediate - 2 ) <= 0x7f	1573:7:40886:40936	3523275	0	True				
ANR	3523592	AndExpression	- 0x80 <= ( immediate - 2 ) && ( immediate - 2 ) <= 0x7f		3523275	0		&&			
ANR	3523593	RelationalExpression	- 0x80 <= ( immediate - 2 )		3523275	0		<=			
ANR	3523594	UnaryOperationExpression	- 0x80		3523275	0					
ANR	3523595	UnaryOperator	-		3523275	0					
ANR	3523596	PrimaryExpression	0x80		3523275	1					
ANR	3523597	AdditiveExpression	immediate - 2		3523275	1		-			
ANR	3523598	Identifier	immediate		3523275	0					
ANR	3523599	PrimaryExpression	2		3523275	1					
ANR	3523600	RelationalExpression	( immediate - 2 ) <= 0x7f		3523275	1		<=			
ANR	3523601	AdditiveExpression	immediate - 2		3523275	0		-			
ANR	3523602	Identifier	immediate		3523275	0					
ANR	3523603	PrimaryExpression	2		3523275	1					
ANR	3523604	PrimaryExpression	0x7f		3523275	1					
ANR	3523605	CompoundStatement		42:60:1227:1227	3523275	1					
ANR	3523606	ExpressionStatement	data [ l ++ ] = 0xeb	1575:4:40977:40993	3523275	0	True				
ANR	3523607	AssignmentExpression	data [ l ++ ] = 0xeb		3523275	0		=			
ANR	3523608	ArrayIndexing	data [ l ++ ]		3523275	0					
ANR	3523609	Identifier	data		3523275	0					
ANR	3523610	PostIncDecOperationExpression	l ++		3523275	1					
ANR	3523611	Identifier	l		3523275	0					
ANR	3523612	IncDec	++		3523275	1					
ANR	3523613	PrimaryExpression	0xeb		3523275	1					
ANR	3523614	ExpressionStatement	data [ l ++ ] = immediate - 2	1576:4:40999:41024	3523275	1	True				
ANR	3523615	AssignmentExpression	data [ l ++ ] = immediate - 2		3523275	0		=			
ANR	3523616	ArrayIndexing	data [ l ++ ]		3523275	0					
ANR	3523617	Identifier	data		3523275	0					
ANR	3523618	PostIncDecOperationExpression	l ++		3523275	1					
ANR	3523619	Identifier	l		3523275	0					
ANR	3523620	IncDec	++		3523275	1					
ANR	3523621	AdditiveExpression	immediate - 2		3523275	1		-			
ANR	3523622	Identifier	immediate		3523275	0					
ANR	3523623	PrimaryExpression	2		3523275	1					
ANR	3523624	ElseStatement	else		3523275	0					
ANR	3523625	CompoundStatement		46:10:1324:1324	3523275	0					
ANR	3523626	ExpressionStatement	immediate -= 5	1579:4:41069:41083	3523275	0	True				
ANR	3523627	AssignmentExpression	immediate -= 5		3523275	0		-=			
ANR	3523628	Identifier	immediate		3523275	0					
ANR	3523629	PrimaryExpression	5		3523275	1					
ANR	3523630	ExpressionStatement	data [ l ++ ] = 0xe9	1580:4:41089:41105	3523275	1	True				
ANR	3523631	AssignmentExpression	data [ l ++ ] = 0xe9		3523275	0		=			
ANR	3523632	ArrayIndexing	data [ l ++ ]		3523275	0					
ANR	3523633	Identifier	data		3523275	0					
ANR	3523634	PostIncDecOperationExpression	l ++		3523275	1					
ANR	3523635	Identifier	l		3523275	0					
ANR	3523636	IncDec	++		3523275	1					
ANR	3523637	PrimaryExpression	0xe9		3523275	1					
ANR	3523638	ExpressionStatement	data [ l ++ ] = immediate	1581:4:41111:41132	3523275	2	True				
ANR	3523639	AssignmentExpression	data [ l ++ ] = immediate		3523275	0		=			
ANR	3523640	ArrayIndexing	data [ l ++ ]		3523275	0					
ANR	3523641	Identifier	data		3523275	0					
ANR	3523642	PostIncDecOperationExpression	l ++		3523275	1					
ANR	3523643	Identifier	l		3523275	0					
ANR	3523644	IncDec	++		3523275	1					
ANR	3523645	Identifier	immediate		3523275	1					
ANR	3523646	ExpressionStatement	data [ l ++ ] = immediate >> 8	1582:4:41138:41164	3523275	3	True				
ANR	3523647	AssignmentExpression	data [ l ++ ] = immediate >> 8		3523275	0		=			
ANR	3523648	ArrayIndexing	data [ l ++ ]		3523275	0					
ANR	3523649	Identifier	data		3523275	0					
ANR	3523650	PostIncDecOperationExpression	l ++		3523275	1					
ANR	3523651	Identifier	l		3523275	0					
ANR	3523652	IncDec	++		3523275	1					
ANR	3523653	ShiftExpression	immediate >> 8		3523275	1		>>			
ANR	3523654	Identifier	immediate		3523275	0					
ANR	3523655	PrimaryExpression	8		3523275	1					
ANR	3523656	ExpressionStatement	data [ l ++ ] = immediate >> 16	1583:4:41170:41197	3523275	4	True				
ANR	3523657	AssignmentExpression	data [ l ++ ] = immediate >> 16		3523275	0		=			
ANR	3523658	ArrayIndexing	data [ l ++ ]		3523275	0					
ANR	3523659	Identifier	data		3523275	0					
ANR	3523660	PostIncDecOperationExpression	l ++		3523275	1					
ANR	3523661	Identifier	l		3523275	0					
ANR	3523662	IncDec	++		3523275	1					
ANR	3523663	ShiftExpression	immediate >> 16		3523275	1		>>			
ANR	3523664	Identifier	immediate		3523275	0					
ANR	3523665	PrimaryExpression	16		3523275	1					
ANR	3523666	ExpressionStatement	data [ l ++ ] = immediate >> 24	1584:4:41203:41230	3523275	5	True				
ANR	3523667	AssignmentExpression	data [ l ++ ] = immediate >> 24		3523275	0		=			
ANR	3523668	ArrayIndexing	data [ l ++ ]		3523275	0					
ANR	3523669	Identifier	data		3523275	0					
ANR	3523670	PostIncDecOperationExpression	l ++		3523275	1					
ANR	3523671	Identifier	l		3523275	0					
ANR	3523672	IncDec	++		3523275	1					
ANR	3523673	ShiftExpression	immediate >> 24		3523275	1		>>			
ANR	3523674	Identifier	immediate		3523275	0					
ANR	3523675	PrimaryExpression	24		3523275	1					
ANR	3523676	ReturnStatement	return l ;	1587:2:41243:41251	3523275	1	True				
ANR	3523677	Identifier	l		3523275	0					
ANR	3523678	IfStatement	if ( immediate <= 0x81 && immediate > - 0x7f )		3523275	8					
ANR	3523679	Condition	immediate <= 0x81 && immediate > - 0x7f	1589:5:41261:41298	3523275	0	True				
ANR	3523680	AndExpression	immediate <= 0x81 && immediate > - 0x7f		3523275	0		&&			
ANR	3523681	RelationalExpression	immediate <= 0x81		3523275	0		<=			
ANR	3523682	Identifier	immediate		3523275	0					
ANR	3523683	PrimaryExpression	0x81		3523275	1					
ANR	3523684	RelationalExpression	immediate > - 0x7f		3523275	1		>			
ANR	3523685	Identifier	immediate		3523275	0					
ANR	3523686	UnaryOperationExpression	- 0x7f		3523275	1					
ANR	3523687	UnaryOperator	-		3523275	0					
ANR	3523688	PrimaryExpression	0x7f		3523275	1					
ANR	3523689	CompoundStatement		58:45:1589:1589	3523275	1					
ANR	3523690	ExpressionStatement	is_short = true	1590:2:41305:41320	3523275	0	True				
ANR	3523691	AssignmentExpression	is_short = true		3523275	0		=			
ANR	3523692	Identifier	is_short		3523275	0					
ANR	3523693	Identifier	true		3523275	1					
ANR	3523694	IfStatement	if ( a -> bits == 16 && ( immediate > 0x81 || immediate < - 0x7e ) )		3523275	9					
ANR	3523695	Condition	a -> bits == 16 && ( immediate > 0x81 || immediate < - 0x7e )	1592:5:41330:41385	3523275	0	True				
ANR	3523696	AndExpression	a -> bits == 16 && ( immediate > 0x81 || immediate < - 0x7e )		3523275	0		&&			
ANR	3523697	EqualityExpression	a -> bits == 16		3523275	0		==			
ANR	3523698	PtrMemberAccess	a -> bits		3523275	0					
ANR	3523699	Identifier	a		3523275	0					
ANR	3523700	Identifier	bits		3523275	1					
ANR	3523701	PrimaryExpression	16		3523275	1					
ANR	3523702	OrExpression	immediate > 0x81 || immediate < - 0x7e		3523275	1		||			
ANR	3523703	RelationalExpression	immediate > 0x81		3523275	0		>			
ANR	3523704	Identifier	immediate		3523275	0					
ANR	3523705	PrimaryExpression	0x81		3523275	1					
ANR	3523706	RelationalExpression	immediate < - 0x7e		3523275	1		<			
ANR	3523707	Identifier	immediate		3523275	0					
ANR	3523708	UnaryOperationExpression	- 0x7e		3523275	1					
ANR	3523709	UnaryOperator	-		3523275	0					
ANR	3523710	PrimaryExpression	0x7e		3523275	1					
ANR	3523711	CompoundStatement		61:63:1676:1676	3523275	1					
ANR	3523712	ExpressionStatement	data [ l ++ ] = 0x66	1593:2:41392:41408	3523275	0	True				
ANR	3523713	AssignmentExpression	data [ l ++ ] = 0x66		3523275	0		=			
ANR	3523714	ArrayIndexing	data [ l ++ ]		3523275	0					
ANR	3523715	Identifier	data		3523275	0					
ANR	3523716	PostIncDecOperationExpression	l ++		3523275	1					
ANR	3523717	Identifier	l		3523275	0					
ANR	3523718	IncDec	++		3523275	1					
ANR	3523719	PrimaryExpression	0x66		3523275	1					
ANR	3523720	ExpressionStatement	is_short = false	1594:2:41412:41428	3523275	1	True				
ANR	3523721	AssignmentExpression	is_short = false		3523275	0		=			
ANR	3523722	Identifier	is_short		3523275	0					
ANR	3523723	Identifier	false		3523275	1					
ANR	3523724	ExpressionStatement	immediate --	1595:2:41432:41444	3523275	2	True				
ANR	3523725	PostIncDecOperationExpression	immediate --		3523275	0					
ANR	3523726	Identifier	immediate		3523275	0					
ANR	3523727	IncDec	--		3523275	1					
ANR	3523728	IfStatement	if ( ! is_short )		3523275	10					
ANR	3523729	Condition	! is_short	1598:5:41455:41463	3523275	0	True				
ANR	3523730	UnaryOperationExpression	! is_short		3523275	0					
ANR	3523731	UnaryOperator	!		3523275	0					
ANR	3523732	Identifier	is_short		3523275	1					
ANR	3523733	CompoundStatement		67:16:1754:1754	3523275	1					
ANR	3523734	ExpressionStatement	data [ l ++ ] = 0x0f	1598:17:41467:41483	3523275	0	True				
ANR	3523735	AssignmentExpression	data [ l ++ ] = 0x0f		3523275	0		=			
ANR	3523736	ArrayIndexing	data [ l ++ ]		3523275	0					
ANR	3523737	Identifier	data		3523275	0					
ANR	3523738	PostIncDecOperationExpression	l ++		3523275	1					
ANR	3523739	Identifier	l		3523275	0					
ANR	3523740	IncDec	++		3523275	1					
ANR	3523741	PrimaryExpression	0x0f		3523275	1					
ANR	3523742	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""ja"" ) || ! strcmp ( op -> mnemonic , ""jnbe"" ) )"		3523275	11					
ANR	3523743	Condition	"! strcmp ( op -> mnemonic , ""ja"" ) || ! strcmp ( op -> mnemonic , ""jnbe"" )"	1599:5:41491:41564	3523275	0	True				
ANR	3523744	OrExpression	"! strcmp ( op -> mnemonic , ""ja"" ) || ! strcmp ( op -> mnemonic , ""jnbe"" )"		3523275	0		||			
ANR	3523745	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""ja"" )"		3523275	0					
ANR	3523746	UnaryOperator	!		3523275	0					
ANR	3523747	CallExpression	"strcmp ( op -> mnemonic , ""ja"" )"		3523275	1					
ANR	3523748	Callee	strcmp		3523275	0					
ANR	3523749	Identifier	strcmp		3523275	0					
ANR	3523750	ArgumentList	op -> mnemonic		3523275	1					
ANR	3523751	Argument	op -> mnemonic		3523275	0					
ANR	3523752	PtrMemberAccess	op -> mnemonic		3523275	0					
ANR	3523753	Identifier	op		3523275	0					
ANR	3523754	Identifier	mnemonic		3523275	1					
ANR	3523755	Argument	"""ja"""		3523275	1					
ANR	3523756	PrimaryExpression	"""ja"""		3523275	0					
ANR	3523757	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jnbe"" )"		3523275	1					
ANR	3523758	UnaryOperator	!		3523275	0					
ANR	3523759	CallExpression	"strcmp ( op -> mnemonic , ""jnbe"" )"		3523275	1					
ANR	3523760	Callee	strcmp		3523275	0					
ANR	3523761	Identifier	strcmp		3523275	0					
ANR	3523762	ArgumentList	op -> mnemonic		3523275	1					
ANR	3523763	Argument	op -> mnemonic		3523275	0					
ANR	3523764	PtrMemberAccess	op -> mnemonic		3523275	0					
ANR	3523765	Identifier	op		3523275	0					
ANR	3523766	Identifier	mnemonic		3523275	1					
ANR	3523767	Argument	"""jnbe"""		3523275	1					
ANR	3523768	PrimaryExpression	"""jnbe"""		3523275	0					
ANR	3523769	CompoundStatement		69:44:1855:1855	3523275	1					
ANR	3523770	ExpressionStatement	data [ l ++ ] = 0x87	1601:2:41571:41587	3523275	0	True				
ANR	3523771	AssignmentExpression	data [ l ++ ] = 0x87		3523275	0		=			
ANR	3523772	ArrayIndexing	data [ l ++ ]		3523275	0					
ANR	3523773	Identifier	data		3523275	0					
ANR	3523774	PostIncDecOperationExpression	l ++		3523275	1					
ANR	3523775	Identifier	l		3523275	0					
ANR	3523776	IncDec	++		3523275	1					
ANR	3523777	PrimaryExpression	0x87		3523275	1					
ANR	3523778	ElseStatement	else		3523275	0					
ANR	3523779	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""jae"" ) || ! strcmp ( op -> mnemonic , ""jnb"" ) || ! strcmp ( op -> mnemonic , ""jnc"" ) )"		3523275	0					
ANR	3523780	Condition	"! strcmp ( op -> mnemonic , ""jae"" ) || ! strcmp ( op -> mnemonic , ""jnb"" ) || ! strcmp ( op -> mnemonic , ""jnc"" )"	1602:12:41601:41733	3523275	0	True				
ANR	3523781	OrExpression	"! strcmp ( op -> mnemonic , ""jae"" ) || ! strcmp ( op -> mnemonic , ""jnb"" ) || ! strcmp ( op -> mnemonic , ""jnc"" )"		3523275	0		||			
ANR	3523782	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jae"" )"		3523275	0					
ANR	3523783	UnaryOperator	!		3523275	0					
ANR	3523784	CallExpression	"strcmp ( op -> mnemonic , ""jae"" )"		3523275	1					
ANR	3523785	Callee	strcmp		3523275	0					
ANR	3523786	Identifier	strcmp		3523275	0					
ANR	3523787	ArgumentList	op -> mnemonic		3523275	1					
ANR	3523788	Argument	op -> mnemonic		3523275	0					
ANR	3523789	PtrMemberAccess	op -> mnemonic		3523275	0					
ANR	3523790	Identifier	op		3523275	0					
ANR	3523791	Identifier	mnemonic		3523275	1					
ANR	3523792	Argument	"""jae"""		3523275	1					
ANR	3523793	PrimaryExpression	"""jae"""		3523275	0					
ANR	3523794	OrExpression	"! strcmp ( op -> mnemonic , ""jnb"" ) || ! strcmp ( op -> mnemonic , ""jnc"" )"		3523275	1		||			
ANR	3523795	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jnb"" )"		3523275	0					
ANR	3523796	UnaryOperator	!		3523275	0					
ANR	3523797	CallExpression	"strcmp ( op -> mnemonic , ""jnb"" )"		3523275	1					
ANR	3523798	Callee	strcmp		3523275	0					
ANR	3523799	Identifier	strcmp		3523275	0					
ANR	3523800	ArgumentList	op -> mnemonic		3523275	1					
ANR	3523801	Argument	op -> mnemonic		3523275	0					
ANR	3523802	PtrMemberAccess	op -> mnemonic		3523275	0					
ANR	3523803	Identifier	op		3523275	0					
ANR	3523804	Identifier	mnemonic		3523275	1					
ANR	3523805	Argument	"""jnb"""		3523275	1					
ANR	3523806	PrimaryExpression	"""jnb"""		3523275	0					
ANR	3523807	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jnc"" )"		3523275	1					
ANR	3523808	UnaryOperator	!		3523275	0					
ANR	3523809	CallExpression	"strcmp ( op -> mnemonic , ""jnc"" )"		3523275	1					
ANR	3523810	Callee	strcmp		3523275	0					
ANR	3523811	Identifier	strcmp		3523275	0					
ANR	3523812	ArgumentList	op -> mnemonic		3523275	1					
ANR	3523813	Argument	op -> mnemonic		3523275	0					
ANR	3523814	PtrMemberAccess	op -> mnemonic		3523275	0					
ANR	3523815	Identifier	op		3523275	0					
ANR	3523816	Identifier	mnemonic		3523275	1					
ANR	3523817	Argument	"""jnc"""		3523275	1					
ANR	3523818	PrimaryExpression	"""jnc"""		3523275	0					
ANR	3523819	CompoundStatement		73:50:2024:2024	3523275	1					
ANR	3523820	ExpressionStatement	data [ l ++ ] = 0x83	1605:2:41740:41756	3523275	0	True				
ANR	3523821	AssignmentExpression	data [ l ++ ] = 0x83		3523275	0		=			
ANR	3523822	ArrayIndexing	data [ l ++ ]		3523275	0					
ANR	3523823	Identifier	data		3523275	0					
ANR	3523824	PostIncDecOperationExpression	l ++		3523275	1					
ANR	3523825	Identifier	l		3523275	0					
ANR	3523826	IncDec	++		3523275	1					
ANR	3523827	PrimaryExpression	0x83		3523275	1					
ANR	3523828	ElseStatement	else		3523275	0					
ANR	3523829	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""jz"" ) || ! strcmp ( op -> mnemonic , ""je"" ) )"		3523275	0					
ANR	3523830	Condition	"! strcmp ( op -> mnemonic , ""jz"" ) || ! strcmp ( op -> mnemonic , ""je"" )"	1606:12:41770:41848	3523275	0	True				
ANR	3523831	OrExpression	"! strcmp ( op -> mnemonic , ""jz"" ) || ! strcmp ( op -> mnemonic , ""je"" )"		3523275	0		||			
ANR	3523832	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jz"" )"		3523275	0					
ANR	3523833	UnaryOperator	!		3523275	0					
ANR	3523834	CallExpression	"strcmp ( op -> mnemonic , ""jz"" )"		3523275	1					
ANR	3523835	Callee	strcmp		3523275	0					
ANR	3523836	Identifier	strcmp		3523275	0					
ANR	3523837	ArgumentList	op -> mnemonic		3523275	1					
ANR	3523838	Argument	op -> mnemonic		3523275	0					
ANR	3523839	PtrMemberAccess	op -> mnemonic		3523275	0					
ANR	3523840	Identifier	op		3523275	0					
ANR	3523841	Identifier	mnemonic		3523275	1					
ANR	3523842	Argument	"""jz"""		3523275	1					
ANR	3523843	PrimaryExpression	"""jz"""		3523275	0					
ANR	3523844	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""je"" )"		3523275	1					
ANR	3523845	UnaryOperator	!		3523275	0					
ANR	3523846	CallExpression	"strcmp ( op -> mnemonic , ""je"" )"		3523275	1					
ANR	3523847	Callee	strcmp		3523275	0					
ANR	3523848	Identifier	strcmp		3523275	0					
ANR	3523849	ArgumentList	op -> mnemonic		3523275	1					
ANR	3523850	Argument	op -> mnemonic		3523275	0					
ANR	3523851	PtrMemberAccess	op -> mnemonic		3523275	0					
ANR	3523852	Identifier	op		3523275	0					
ANR	3523853	Identifier	mnemonic		3523275	1					
ANR	3523854	Argument	"""je"""		3523275	1					
ANR	3523855	PrimaryExpression	"""je"""		3523275	0					
ANR	3523856	CompoundStatement		76:49:2139:2139	3523275	1					
ANR	3523857	ExpressionStatement	data [ l ++ ] = 0x84	1608:2:41855:41871	3523275	0	True				
ANR	3523858	AssignmentExpression	data [ l ++ ] = 0x84		3523275	0		=			
ANR	3523859	ArrayIndexing	data [ l ++ ]		3523275	0					
ANR	3523860	Identifier	data		3523275	0					
ANR	3523861	PostIncDecOperationExpression	l ++		3523275	1					
ANR	3523862	Identifier	l		3523275	0					
ANR	3523863	IncDec	++		3523275	1					
ANR	3523864	PrimaryExpression	0x84		3523275	1					
ANR	3523865	ElseStatement	else		3523275	0					
ANR	3523866	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""jb"" ) || ! strcmp ( op -> mnemonic , ""jnae"" ) || ! strcmp ( op -> mnemonic , ""jc"" ) )"		3523275	0					
ANR	3523867	Condition	"! strcmp ( op -> mnemonic , ""jb"" ) || ! strcmp ( op -> mnemonic , ""jnae"" ) || ! strcmp ( op -> mnemonic , ""jc"" )"	1609:12:41885:42016	3523275	0	True				
ANR	3523868	OrExpression	"! strcmp ( op -> mnemonic , ""jb"" ) || ! strcmp ( op -> mnemonic , ""jnae"" ) || ! strcmp ( op -> mnemonic , ""jc"" )"		3523275	0		||			
ANR	3523869	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jb"" )"		3523275	0					
ANR	3523870	UnaryOperator	!		3523275	0					
ANR	3523871	CallExpression	"strcmp ( op -> mnemonic , ""jb"" )"		3523275	1					
ANR	3523872	Callee	strcmp		3523275	0					
ANR	3523873	Identifier	strcmp		3523275	0					
ANR	3523874	ArgumentList	op -> mnemonic		3523275	1					
ANR	3523875	Argument	op -> mnemonic		3523275	0					
ANR	3523876	PtrMemberAccess	op -> mnemonic		3523275	0					
ANR	3523877	Identifier	op		3523275	0					
ANR	3523878	Identifier	mnemonic		3523275	1					
ANR	3523879	Argument	"""jb"""		3523275	1					
ANR	3523880	PrimaryExpression	"""jb"""		3523275	0					
ANR	3523881	OrExpression	"! strcmp ( op -> mnemonic , ""jnae"" ) || ! strcmp ( op -> mnemonic , ""jc"" )"		3523275	1		||			
ANR	3523882	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jnae"" )"		3523275	0					
ANR	3523883	UnaryOperator	!		3523275	0					
ANR	3523884	CallExpression	"strcmp ( op -> mnemonic , ""jnae"" )"		3523275	1					
ANR	3523885	Callee	strcmp		3523275	0					
ANR	3523886	Identifier	strcmp		3523275	0					
ANR	3523887	ArgumentList	op -> mnemonic		3523275	1					
ANR	3523888	Argument	op -> mnemonic		3523275	0					
ANR	3523889	PtrMemberAccess	op -> mnemonic		3523275	0					
ANR	3523890	Identifier	op		3523275	0					
ANR	3523891	Identifier	mnemonic		3523275	1					
ANR	3523892	Argument	"""jnae"""		3523275	1					
ANR	3523893	PrimaryExpression	"""jnae"""		3523275	0					
ANR	3523894	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jc"" )"		3523275	1					
ANR	3523895	UnaryOperator	!		3523275	0					
ANR	3523896	CallExpression	"strcmp ( op -> mnemonic , ""jc"" )"		3523275	1					
ANR	3523897	Callee	strcmp		3523275	0					
ANR	3523898	Identifier	strcmp		3523275	0					
ANR	3523899	ArgumentList	op -> mnemonic		3523275	1					
ANR	3523900	Argument	op -> mnemonic		3523275	0					
ANR	3523901	PtrMemberAccess	op -> mnemonic		3523275	0					
ANR	3523902	Identifier	op		3523275	0					
ANR	3523903	Identifier	mnemonic		3523275	1					
ANR	3523904	Argument	"""jc"""		3523275	1					
ANR	3523905	PrimaryExpression	"""jc"""		3523275	0					
ANR	3523906	CompoundStatement		80:49:2307:2307	3523275	1					
ANR	3523907	ExpressionStatement	data [ l ++ ] = 0x82	1612:2:42023:42039	3523275	0	True				
ANR	3523908	AssignmentExpression	data [ l ++ ] = 0x82		3523275	0		=			
ANR	3523909	ArrayIndexing	data [ l ++ ]		3523275	0					
ANR	3523910	Identifier	data		3523275	0					
ANR	3523911	PostIncDecOperationExpression	l ++		3523275	1					
ANR	3523912	Identifier	l		3523275	0					
ANR	3523913	IncDec	++		3523275	1					
ANR	3523914	PrimaryExpression	0x82		3523275	1					
ANR	3523915	ElseStatement	else		3523275	0					
ANR	3523916	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""jbe"" ) || ! strcmp ( op -> mnemonic , ""jna"" ) )"		3523275	0					
ANR	3523917	Condition	"! strcmp ( op -> mnemonic , ""jbe"" ) || ! strcmp ( op -> mnemonic , ""jna"" )"	1613:12:42053:42133	3523275	0	True				
ANR	3523918	OrExpression	"! strcmp ( op -> mnemonic , ""jbe"" ) || ! strcmp ( op -> mnemonic , ""jna"" )"		3523275	0		||			
ANR	3523919	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jbe"" )"		3523275	0					
ANR	3523920	UnaryOperator	!		3523275	0					
ANR	3523921	CallExpression	"strcmp ( op -> mnemonic , ""jbe"" )"		3523275	1					
ANR	3523922	Callee	strcmp		3523275	0					
ANR	3523923	Identifier	strcmp		3523275	0					
ANR	3523924	ArgumentList	op -> mnemonic		3523275	1					
ANR	3523925	Argument	op -> mnemonic		3523275	0					
ANR	3523926	PtrMemberAccess	op -> mnemonic		3523275	0					
ANR	3523927	Identifier	op		3523275	0					
ANR	3523928	Identifier	mnemonic		3523275	1					
ANR	3523929	Argument	"""jbe"""		3523275	1					
ANR	3523930	PrimaryExpression	"""jbe"""		3523275	0					
ANR	3523931	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jna"" )"		3523275	1					
ANR	3523932	UnaryOperator	!		3523275	0					
ANR	3523933	CallExpression	"strcmp ( op -> mnemonic , ""jna"" )"		3523275	1					
ANR	3523934	Callee	strcmp		3523275	0					
ANR	3523935	Identifier	strcmp		3523275	0					
ANR	3523936	ArgumentList	op -> mnemonic		3523275	1					
ANR	3523937	Argument	op -> mnemonic		3523275	0					
ANR	3523938	PtrMemberAccess	op -> mnemonic		3523275	0					
ANR	3523939	Identifier	op		3523275	0					
ANR	3523940	Identifier	mnemonic		3523275	1					
ANR	3523941	Argument	"""jna"""		3523275	1					
ANR	3523942	PrimaryExpression	"""jna"""		3523275	0					
ANR	3523943	CompoundStatement		83:50:2424:2424	3523275	1					
ANR	3523944	ExpressionStatement	data [ l ++ ] = 0x86	1615:2:42140:42156	3523275	0	True				
ANR	3523945	AssignmentExpression	data [ l ++ ] = 0x86		3523275	0		=			
ANR	3523946	ArrayIndexing	data [ l ++ ]		3523275	0					
ANR	3523947	Identifier	data		3523275	0					
ANR	3523948	PostIncDecOperationExpression	l ++		3523275	1					
ANR	3523949	Identifier	l		3523275	0					
ANR	3523950	IncDec	++		3523275	1					
ANR	3523951	PrimaryExpression	0x86		3523275	1					
ANR	3523952	ElseStatement	else		3523275	0					
ANR	3523953	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""jg"" ) || ! strcmp ( op -> mnemonic , ""jnle"" ) )"		3523275	0					
ANR	3523954	Condition	"! strcmp ( op -> mnemonic , ""jg"" ) || ! strcmp ( op -> mnemonic , ""jnle"" )"	1616:12:42170:42250	3523275	0	True				
ANR	3523955	OrExpression	"! strcmp ( op -> mnemonic , ""jg"" ) || ! strcmp ( op -> mnemonic , ""jnle"" )"		3523275	0		||			
ANR	3523956	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jg"" )"		3523275	0					
ANR	3523957	UnaryOperator	!		3523275	0					
ANR	3523958	CallExpression	"strcmp ( op -> mnemonic , ""jg"" )"		3523275	1					
ANR	3523959	Callee	strcmp		3523275	0					
ANR	3523960	Identifier	strcmp		3523275	0					
ANR	3523961	ArgumentList	op -> mnemonic		3523275	1					
ANR	3523962	Argument	op -> mnemonic		3523275	0					
ANR	3523963	PtrMemberAccess	op -> mnemonic		3523275	0					
ANR	3523964	Identifier	op		3523275	0					
ANR	3523965	Identifier	mnemonic		3523275	1					
ANR	3523966	Argument	"""jg"""		3523275	1					
ANR	3523967	PrimaryExpression	"""jg"""		3523275	0					
ANR	3523968	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jnle"" )"		3523275	1					
ANR	3523969	UnaryOperator	!		3523275	0					
ANR	3523970	CallExpression	"strcmp ( op -> mnemonic , ""jnle"" )"		3523275	1					
ANR	3523971	Callee	strcmp		3523275	0					
ANR	3523972	Identifier	strcmp		3523275	0					
ANR	3523973	ArgumentList	op -> mnemonic		3523275	1					
ANR	3523974	Argument	op -> mnemonic		3523275	0					
ANR	3523975	PtrMemberAccess	op -> mnemonic		3523275	0					
ANR	3523976	Identifier	op		3523275	0					
ANR	3523977	Identifier	mnemonic		3523275	1					
ANR	3523978	Argument	"""jnle"""		3523275	1					
ANR	3523979	PrimaryExpression	"""jnle"""		3523275	0					
ANR	3523980	CompoundStatement		86:51:2541:2541	3523275	1					
ANR	3523981	ExpressionStatement	data [ l ++ ] = 0x8f	1618:2:42257:42273	3523275	0	True				
ANR	3523982	AssignmentExpression	data [ l ++ ] = 0x8f		3523275	0		=			
ANR	3523983	ArrayIndexing	data [ l ++ ]		3523275	0					
ANR	3523984	Identifier	data		3523275	0					
ANR	3523985	PostIncDecOperationExpression	l ++		3523275	1					
ANR	3523986	Identifier	l		3523275	0					
ANR	3523987	IncDec	++		3523275	1					
ANR	3523988	PrimaryExpression	0x8f		3523275	1					
ANR	3523989	ElseStatement	else		3523275	0					
ANR	3523990	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""jge"" ) || ! strcmp ( op -> mnemonic , ""jnl"" ) )"		3523275	0					
ANR	3523991	Condition	"! strcmp ( op -> mnemonic , ""jge"" ) || ! strcmp ( op -> mnemonic , ""jnl"" )"	1619:12:42287:42367	3523275	0	True				
ANR	3523992	OrExpression	"! strcmp ( op -> mnemonic , ""jge"" ) || ! strcmp ( op -> mnemonic , ""jnl"" )"		3523275	0		||			
ANR	3523993	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jge"" )"		3523275	0					
ANR	3523994	UnaryOperator	!		3523275	0					
ANR	3523995	CallExpression	"strcmp ( op -> mnemonic , ""jge"" )"		3523275	1					
ANR	3523996	Callee	strcmp		3523275	0					
ANR	3523997	Identifier	strcmp		3523275	0					
ANR	3523998	ArgumentList	op -> mnemonic		3523275	1					
ANR	3523999	Argument	op -> mnemonic		3523275	0					
ANR	3524000	PtrMemberAccess	op -> mnemonic		3523275	0					
ANR	3524001	Identifier	op		3523275	0					
ANR	3524002	Identifier	mnemonic		3523275	1					
ANR	3524003	Argument	"""jge"""		3523275	1					
ANR	3524004	PrimaryExpression	"""jge"""		3523275	0					
ANR	3524005	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jnl"" )"		3523275	1					
ANR	3524006	UnaryOperator	!		3523275	0					
ANR	3524007	CallExpression	"strcmp ( op -> mnemonic , ""jnl"" )"		3523275	1					
ANR	3524008	Callee	strcmp		3523275	0					
ANR	3524009	Identifier	strcmp		3523275	0					
ANR	3524010	ArgumentList	op -> mnemonic		3523275	1					
ANR	3524011	Argument	op -> mnemonic		3523275	0					
ANR	3524012	PtrMemberAccess	op -> mnemonic		3523275	0					
ANR	3524013	Identifier	op		3523275	0					
ANR	3524014	Identifier	mnemonic		3523275	1					
ANR	3524015	Argument	"""jnl"""		3523275	1					
ANR	3524016	PrimaryExpression	"""jnl"""		3523275	0					
ANR	3524017	CompoundStatement		89:50:2658:2658	3523275	1					
ANR	3524018	ExpressionStatement	data [ l ++ ] = 0x8d	1621:2:42374:42390	3523275	0	True				
ANR	3524019	AssignmentExpression	data [ l ++ ] = 0x8d		3523275	0		=			
ANR	3524020	ArrayIndexing	data [ l ++ ]		3523275	0					
ANR	3524021	Identifier	data		3523275	0					
ANR	3524022	PostIncDecOperationExpression	l ++		3523275	1					
ANR	3524023	Identifier	l		3523275	0					
ANR	3524024	IncDec	++		3523275	1					
ANR	3524025	PrimaryExpression	0x8d		3523275	1					
ANR	3524026	ElseStatement	else		3523275	0					
ANR	3524027	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""jl"" ) || ! strcmp ( op -> mnemonic , ""jnge"" ) )"		3523275	0					
ANR	3524028	Condition	"! strcmp ( op -> mnemonic , ""jl"" ) || ! strcmp ( op -> mnemonic , ""jnge"" )"	1622:12:42404:42484	3523275	0	True				
ANR	3524029	OrExpression	"! strcmp ( op -> mnemonic , ""jl"" ) || ! strcmp ( op -> mnemonic , ""jnge"" )"		3523275	0		||			
ANR	3524030	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jl"" )"		3523275	0					
ANR	3524031	UnaryOperator	!		3523275	0					
ANR	3524032	CallExpression	"strcmp ( op -> mnemonic , ""jl"" )"		3523275	1					
ANR	3524033	Callee	strcmp		3523275	0					
ANR	3524034	Identifier	strcmp		3523275	0					
ANR	3524035	ArgumentList	op -> mnemonic		3523275	1					
ANR	3524036	Argument	op -> mnemonic		3523275	0					
ANR	3524037	PtrMemberAccess	op -> mnemonic		3523275	0					
ANR	3524038	Identifier	op		3523275	0					
ANR	3524039	Identifier	mnemonic		3523275	1					
ANR	3524040	Argument	"""jl"""		3523275	1					
ANR	3524041	PrimaryExpression	"""jl"""		3523275	0					
ANR	3524042	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jnge"" )"		3523275	1					
ANR	3524043	UnaryOperator	!		3523275	0					
ANR	3524044	CallExpression	"strcmp ( op -> mnemonic , ""jnge"" )"		3523275	1					
ANR	3524045	Callee	strcmp		3523275	0					
ANR	3524046	Identifier	strcmp		3523275	0					
ANR	3524047	ArgumentList	op -> mnemonic		3523275	1					
ANR	3524048	Argument	op -> mnemonic		3523275	0					
ANR	3524049	PtrMemberAccess	op -> mnemonic		3523275	0					
ANR	3524050	Identifier	op		3523275	0					
ANR	3524051	Identifier	mnemonic		3523275	1					
ANR	3524052	Argument	"""jnge"""		3523275	1					
ANR	3524053	PrimaryExpression	"""jnge"""		3523275	0					
ANR	3524054	CompoundStatement		92:51:2775:2775	3523275	1					
ANR	3524055	ExpressionStatement	data [ l ++ ] = 0x8c	1624:2:42491:42507	3523275	0	True				
ANR	3524056	AssignmentExpression	data [ l ++ ] = 0x8c		3523275	0		=			
ANR	3524057	ArrayIndexing	data [ l ++ ]		3523275	0					
ANR	3524058	Identifier	data		3523275	0					
ANR	3524059	PostIncDecOperationExpression	l ++		3523275	1					
ANR	3524060	Identifier	l		3523275	0					
ANR	3524061	IncDec	++		3523275	1					
ANR	3524062	PrimaryExpression	0x8c		3523275	1					
ANR	3524063	ElseStatement	else		3523275	0					
ANR	3524064	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""jle"" ) || ! strcmp ( op -> mnemonic , ""jng"" ) )"		3523275	0					
ANR	3524065	Condition	"! strcmp ( op -> mnemonic , ""jle"" ) || ! strcmp ( op -> mnemonic , ""jng"" )"	1625:12:42521:42594	3523275	0	True				
ANR	3524066	OrExpression	"! strcmp ( op -> mnemonic , ""jle"" ) || ! strcmp ( op -> mnemonic , ""jng"" )"		3523275	0		||			
ANR	3524067	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jle"" )"		3523275	0					
ANR	3524068	UnaryOperator	!		3523275	0					
ANR	3524069	CallExpression	"strcmp ( op -> mnemonic , ""jle"" )"		3523275	1					
ANR	3524070	Callee	strcmp		3523275	0					
ANR	3524071	Identifier	strcmp		3523275	0					
ANR	3524072	ArgumentList	op -> mnemonic		3523275	1					
ANR	3524073	Argument	op -> mnemonic		3523275	0					
ANR	3524074	PtrMemberAccess	op -> mnemonic		3523275	0					
ANR	3524075	Identifier	op		3523275	0					
ANR	3524076	Identifier	mnemonic		3523275	1					
ANR	3524077	Argument	"""jle"""		3523275	1					
ANR	3524078	PrimaryExpression	"""jle"""		3523275	0					
ANR	3524079	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jng"" )"		3523275	1					
ANR	3524080	UnaryOperator	!		3523275	0					
ANR	3524081	CallExpression	"strcmp ( op -> mnemonic , ""jng"" )"		3523275	1					
ANR	3524082	Callee	strcmp		3523275	0					
ANR	3524083	Identifier	strcmp		3523275	0					
ANR	3524084	ArgumentList	op -> mnemonic		3523275	1					
ANR	3524085	Argument	op -> mnemonic		3523275	0					
ANR	3524086	PtrMemberAccess	op -> mnemonic		3523275	0					
ANR	3524087	Identifier	op		3523275	0					
ANR	3524088	Identifier	mnemonic		3523275	1					
ANR	3524089	Argument	"""jng"""		3523275	1					
ANR	3524090	PrimaryExpression	"""jng"""		3523275	0					
ANR	3524091	CompoundStatement		95:43:2885:2885	3523275	1					
ANR	3524092	ExpressionStatement	data [ l ++ ] = 0x8e	1627:2:42601:42617	3523275	0	True				
ANR	3524093	AssignmentExpression	data [ l ++ ] = 0x8e		3523275	0		=			
ANR	3524094	ArrayIndexing	data [ l ++ ]		3523275	0					
ANR	3524095	Identifier	data		3523275	0					
ANR	3524096	PostIncDecOperationExpression	l ++		3523275	1					
ANR	3524097	Identifier	l		3523275	0					
ANR	3524098	IncDec	++		3523275	1					
ANR	3524099	PrimaryExpression	0x8e		3523275	1					
ANR	3524100	ElseStatement	else		3523275	0					
ANR	3524101	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""jne"" ) || ! strcmp ( op -> mnemonic , ""jnz"" ) )"		3523275	0					
ANR	3524102	Condition	"! strcmp ( op -> mnemonic , ""jne"" ) || ! strcmp ( op -> mnemonic , ""jnz"" )"	1628:12:42631:42711	3523275	0	True				
ANR	3524103	OrExpression	"! strcmp ( op -> mnemonic , ""jne"" ) || ! strcmp ( op -> mnemonic , ""jnz"" )"		3523275	0		||			
ANR	3524104	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jne"" )"		3523275	0					
ANR	3524105	UnaryOperator	!		3523275	0					
ANR	3524106	CallExpression	"strcmp ( op -> mnemonic , ""jne"" )"		3523275	1					
ANR	3524107	Callee	strcmp		3523275	0					
ANR	3524108	Identifier	strcmp		3523275	0					
ANR	3524109	ArgumentList	op -> mnemonic		3523275	1					
ANR	3524110	Argument	op -> mnemonic		3523275	0					
ANR	3524111	PtrMemberAccess	op -> mnemonic		3523275	0					
ANR	3524112	Identifier	op		3523275	0					
ANR	3524113	Identifier	mnemonic		3523275	1					
ANR	3524114	Argument	"""jne"""		3523275	1					
ANR	3524115	PrimaryExpression	"""jne"""		3523275	0					
ANR	3524116	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jnz"" )"		3523275	1					
ANR	3524117	UnaryOperator	!		3523275	0					
ANR	3524118	CallExpression	"strcmp ( op -> mnemonic , ""jnz"" )"		3523275	1					
ANR	3524119	Callee	strcmp		3523275	0					
ANR	3524120	Identifier	strcmp		3523275	0					
ANR	3524121	ArgumentList	op -> mnemonic		3523275	1					
ANR	3524122	Argument	op -> mnemonic		3523275	0					
ANR	3524123	PtrMemberAccess	op -> mnemonic		3523275	0					
ANR	3524124	Identifier	op		3523275	0					
ANR	3524125	Identifier	mnemonic		3523275	1					
ANR	3524126	Argument	"""jnz"""		3523275	1					
ANR	3524127	PrimaryExpression	"""jnz"""		3523275	0					
ANR	3524128	CompoundStatement		98:50:3002:3002	3523275	1					
ANR	3524129	ExpressionStatement	data [ l ++ ] = 0x85	1630:2:42718:42734	3523275	0	True				
ANR	3524130	AssignmentExpression	data [ l ++ ] = 0x85		3523275	0		=			
ANR	3524131	ArrayIndexing	data [ l ++ ]		3523275	0					
ANR	3524132	Identifier	data		3523275	0					
ANR	3524133	PostIncDecOperationExpression	l ++		3523275	1					
ANR	3524134	Identifier	l		3523275	0					
ANR	3524135	IncDec	++		3523275	1					
ANR	3524136	PrimaryExpression	0x85		3523275	1					
ANR	3524137	ElseStatement	else		3523275	0					
ANR	3524138	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""jno"" ) )"		3523275	0					
ANR	3524139	Condition	"! strcmp ( op -> mnemonic , ""jno"" )"	1631:12:42748:42776	3523275	0	True				
ANR	3524140	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jno"" )"		3523275	0					
ANR	3524141	UnaryOperator	!		3523275	0					
ANR	3524142	CallExpression	"strcmp ( op -> mnemonic , ""jno"" )"		3523275	1					
ANR	3524143	Callee	strcmp		3523275	0					
ANR	3524144	Identifier	strcmp		3523275	0					
ANR	3524145	ArgumentList	op -> mnemonic		3523275	1					
ANR	3524146	Argument	op -> mnemonic		3523275	0					
ANR	3524147	PtrMemberAccess	op -> mnemonic		3523275	0					
ANR	3524148	Identifier	op		3523275	0					
ANR	3524149	Identifier	mnemonic		3523275	1					
ANR	3524150	Argument	"""jno"""		3523275	1					
ANR	3524151	PrimaryExpression	"""jno"""		3523275	0					
ANR	3524152	CompoundStatement		100:43:3067:3067	3523275	1					
ANR	3524153	ExpressionStatement	data [ l ++ ] = 0x81	1632:2:42783:42799	3523275	0	True				
ANR	3524154	AssignmentExpression	data [ l ++ ] = 0x81		3523275	0		=			
ANR	3524155	ArrayIndexing	data [ l ++ ]		3523275	0					
ANR	3524156	Identifier	data		3523275	0					
ANR	3524157	PostIncDecOperationExpression	l ++		3523275	1					
ANR	3524158	Identifier	l		3523275	0					
ANR	3524159	IncDec	++		3523275	1					
ANR	3524160	PrimaryExpression	0x81		3523275	1					
ANR	3524161	ElseStatement	else		3523275	0					
ANR	3524162	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""jnp"" ) || ! strcmp ( op -> mnemonic , ""jpo"" ) )"		3523275	0					
ANR	3524163	Condition	"! strcmp ( op -> mnemonic , ""jnp"" ) || ! strcmp ( op -> mnemonic , ""jpo"" )"	1633:12:42813:42893	3523275	0	True				
ANR	3524164	OrExpression	"! strcmp ( op -> mnemonic , ""jnp"" ) || ! strcmp ( op -> mnemonic , ""jpo"" )"		3523275	0		||			
ANR	3524165	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jnp"" )"		3523275	0					
ANR	3524166	UnaryOperator	!		3523275	0					
ANR	3524167	CallExpression	"strcmp ( op -> mnemonic , ""jnp"" )"		3523275	1					
ANR	3524168	Callee	strcmp		3523275	0					
ANR	3524169	Identifier	strcmp		3523275	0					
ANR	3524170	ArgumentList	op -> mnemonic		3523275	1					
ANR	3524171	Argument	op -> mnemonic		3523275	0					
ANR	3524172	PtrMemberAccess	op -> mnemonic		3523275	0					
ANR	3524173	Identifier	op		3523275	0					
ANR	3524174	Identifier	mnemonic		3523275	1					
ANR	3524175	Argument	"""jnp"""		3523275	1					
ANR	3524176	PrimaryExpression	"""jnp"""		3523275	0					
ANR	3524177	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jpo"" )"		3523275	1					
ANR	3524178	UnaryOperator	!		3523275	0					
ANR	3524179	CallExpression	"strcmp ( op -> mnemonic , ""jpo"" )"		3523275	1					
ANR	3524180	Callee	strcmp		3523275	0					
ANR	3524181	Identifier	strcmp		3523275	0					
ANR	3524182	ArgumentList	op -> mnemonic		3523275	1					
ANR	3524183	Argument	op -> mnemonic		3523275	0					
ANR	3524184	PtrMemberAccess	op -> mnemonic		3523275	0					
ANR	3524185	Identifier	op		3523275	0					
ANR	3524186	Identifier	mnemonic		3523275	1					
ANR	3524187	Argument	"""jpo"""		3523275	1					
ANR	3524188	PrimaryExpression	"""jpo"""		3523275	0					
ANR	3524189	CompoundStatement		103:50:3184:3184	3523275	1					
ANR	3524190	ExpressionStatement	data [ l ++ ] = 0x8b	1635:2:42900:42916	3523275	0	True				
ANR	3524191	AssignmentExpression	data [ l ++ ] = 0x8b		3523275	0		=			
ANR	3524192	ArrayIndexing	data [ l ++ ]		3523275	0					
ANR	3524193	Identifier	data		3523275	0					
ANR	3524194	PostIncDecOperationExpression	l ++		3523275	1					
ANR	3524195	Identifier	l		3523275	0					
ANR	3524196	IncDec	++		3523275	1					
ANR	3524197	PrimaryExpression	0x8b		3523275	1					
ANR	3524198	ElseStatement	else		3523275	0					
ANR	3524199	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""jns"" ) )"		3523275	0					
ANR	3524200	Condition	"! strcmp ( op -> mnemonic , ""jns"" )"	1636:12:42930:42958	3523275	0	True				
ANR	3524201	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jns"" )"		3523275	0					
ANR	3524202	UnaryOperator	!		3523275	0					
ANR	3524203	CallExpression	"strcmp ( op -> mnemonic , ""jns"" )"		3523275	1					
ANR	3524204	Callee	strcmp		3523275	0					
ANR	3524205	Identifier	strcmp		3523275	0					
ANR	3524206	ArgumentList	op -> mnemonic		3523275	1					
ANR	3524207	Argument	op -> mnemonic		3523275	0					
ANR	3524208	PtrMemberAccess	op -> mnemonic		3523275	0					
ANR	3524209	Identifier	op		3523275	0					
ANR	3524210	Identifier	mnemonic		3523275	1					
ANR	3524211	Argument	"""jns"""		3523275	1					
ANR	3524212	PrimaryExpression	"""jns"""		3523275	0					
ANR	3524213	CompoundStatement		105:43:3249:3249	3523275	1					
ANR	3524214	ExpressionStatement	data [ l ++ ] = 0x89	1637:2:42965:42981	3523275	0	True				
ANR	3524215	AssignmentExpression	data [ l ++ ] = 0x89		3523275	0		=			
ANR	3524216	ArrayIndexing	data [ l ++ ]		3523275	0					
ANR	3524217	Identifier	data		3523275	0					
ANR	3524218	PostIncDecOperationExpression	l ++		3523275	1					
ANR	3524219	Identifier	l		3523275	0					
ANR	3524220	IncDec	++		3523275	1					
ANR	3524221	PrimaryExpression	0x89		3523275	1					
ANR	3524222	ElseStatement	else		3523275	0					
ANR	3524223	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""jo"" ) )"		3523275	0					
ANR	3524224	Condition	"! strcmp ( op -> mnemonic , ""jo"" )"	1638:12:42995:43022	3523275	0	True				
ANR	3524225	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jo"" )"		3523275	0					
ANR	3524226	UnaryOperator	!		3523275	0					
ANR	3524227	CallExpression	"strcmp ( op -> mnemonic , ""jo"" )"		3523275	1					
ANR	3524228	Callee	strcmp		3523275	0					
ANR	3524229	Identifier	strcmp		3523275	0					
ANR	3524230	ArgumentList	op -> mnemonic		3523275	1					
ANR	3524231	Argument	op -> mnemonic		3523275	0					
ANR	3524232	PtrMemberAccess	op -> mnemonic		3523275	0					
ANR	3524233	Identifier	op		3523275	0					
ANR	3524234	Identifier	mnemonic		3523275	1					
ANR	3524235	Argument	"""jo"""		3523275	1					
ANR	3524236	PrimaryExpression	"""jo"""		3523275	0					
ANR	3524237	CompoundStatement		107:42:3313:3313	3523275	1					
ANR	3524238	ExpressionStatement	data [ l ++ ] = 0x80	1639:2:43029:43045	3523275	0	True				
ANR	3524239	AssignmentExpression	data [ l ++ ] = 0x80		3523275	0		=			
ANR	3524240	ArrayIndexing	data [ l ++ ]		3523275	0					
ANR	3524241	Identifier	data		3523275	0					
ANR	3524242	PostIncDecOperationExpression	l ++		3523275	1					
ANR	3524243	Identifier	l		3523275	0					
ANR	3524244	IncDec	++		3523275	1					
ANR	3524245	PrimaryExpression	0x80		3523275	1					
ANR	3524246	ElseStatement	else		3523275	0					
ANR	3524247	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""jp"" ) || ! strcmp ( op -> mnemonic , ""jpe"" ) )"		3523275	0					
ANR	3524248	Condition	"! strcmp ( op -> mnemonic , ""jp"" ) || ! strcmp ( op -> mnemonic , ""jpe"" )"	1640:12:43059:43137	3523275	0	True				
ANR	3524249	OrExpression	"! strcmp ( op -> mnemonic , ""jp"" ) || ! strcmp ( op -> mnemonic , ""jpe"" )"		3523275	0		||			
ANR	3524250	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jp"" )"		3523275	0					
ANR	3524251	UnaryOperator	!		3523275	0					
ANR	3524252	CallExpression	"strcmp ( op -> mnemonic , ""jp"" )"		3523275	1					
ANR	3524253	Callee	strcmp		3523275	0					
ANR	3524254	Identifier	strcmp		3523275	0					
ANR	3524255	ArgumentList	op -> mnemonic		3523275	1					
ANR	3524256	Argument	op -> mnemonic		3523275	0					
ANR	3524257	PtrMemberAccess	op -> mnemonic		3523275	0					
ANR	3524258	Identifier	op		3523275	0					
ANR	3524259	Identifier	mnemonic		3523275	1					
ANR	3524260	Argument	"""jp"""		3523275	1					
ANR	3524261	PrimaryExpression	"""jp"""		3523275	0					
ANR	3524262	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jpe"" )"		3523275	1					
ANR	3524263	UnaryOperator	!		3523275	0					
ANR	3524264	CallExpression	"strcmp ( op -> mnemonic , ""jpe"" )"		3523275	1					
ANR	3524265	Callee	strcmp		3523275	0					
ANR	3524266	Identifier	strcmp		3523275	0					
ANR	3524267	ArgumentList	op -> mnemonic		3523275	1					
ANR	3524268	Argument	op -> mnemonic		3523275	0					
ANR	3524269	PtrMemberAccess	op -> mnemonic		3523275	0					
ANR	3524270	Identifier	op		3523275	0					
ANR	3524271	Identifier	mnemonic		3523275	1					
ANR	3524272	Argument	"""jpe"""		3523275	1					
ANR	3524273	PrimaryExpression	"""jpe"""		3523275	0					
ANR	3524274	CompoundStatement		110:49:3428:3428	3523275	1					
ANR	3524275	ExpressionStatement	data [ l ++ ] = 0x8a	1642:2:43144:43160	3523275	0	True				
ANR	3524276	AssignmentExpression	data [ l ++ ] = 0x8a		3523275	0		=			
ANR	3524277	ArrayIndexing	data [ l ++ ]		3523275	0					
ANR	3524278	Identifier	data		3523275	0					
ANR	3524279	PostIncDecOperationExpression	l ++		3523275	1					
ANR	3524280	Identifier	l		3523275	0					
ANR	3524281	IncDec	++		3523275	1					
ANR	3524282	PrimaryExpression	0x8a		3523275	1					
ANR	3524283	ElseStatement	else		3523275	0					
ANR	3524284	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""js"" ) || ! strcmp ( op -> mnemonic , ""jz"" ) )"		3523275	0					
ANR	3524285	Condition	"! strcmp ( op -> mnemonic , ""js"" ) || ! strcmp ( op -> mnemonic , ""jz"" )"	1643:12:43174:43252	3523275	0	True				
ANR	3524286	OrExpression	"! strcmp ( op -> mnemonic , ""js"" ) || ! strcmp ( op -> mnemonic , ""jz"" )"		3523275	0		||			
ANR	3524287	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""js"" )"		3523275	0					
ANR	3524288	UnaryOperator	!		3523275	0					
ANR	3524289	CallExpression	"strcmp ( op -> mnemonic , ""js"" )"		3523275	1					
ANR	3524290	Callee	strcmp		3523275	0					
ANR	3524291	Identifier	strcmp		3523275	0					
ANR	3524292	ArgumentList	op -> mnemonic		3523275	1					
ANR	3524293	Argument	op -> mnemonic		3523275	0					
ANR	3524294	PtrMemberAccess	op -> mnemonic		3523275	0					
ANR	3524295	Identifier	op		3523275	0					
ANR	3524296	Identifier	mnemonic		3523275	1					
ANR	3524297	Argument	"""js"""		3523275	1					
ANR	3524298	PrimaryExpression	"""js"""		3523275	0					
ANR	3524299	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""jz"" )"		3523275	1					
ANR	3524300	UnaryOperator	!		3523275	0					
ANR	3524301	CallExpression	"strcmp ( op -> mnemonic , ""jz"" )"		3523275	1					
ANR	3524302	Callee	strcmp		3523275	0					
ANR	3524303	Identifier	strcmp		3523275	0					
ANR	3524304	ArgumentList	op -> mnemonic		3523275	1					
ANR	3524305	Argument	op -> mnemonic		3523275	0					
ANR	3524306	PtrMemberAccess	op -> mnemonic		3523275	0					
ANR	3524307	Identifier	op		3523275	0					
ANR	3524308	Identifier	mnemonic		3523275	1					
ANR	3524309	Argument	"""jz"""		3523275	1					
ANR	3524310	PrimaryExpression	"""jz"""		3523275	0					
ANR	3524311	CompoundStatement		113:49:3543:3543	3523275	1					
ANR	3524312	ExpressionStatement	data [ l ++ ] = 0x88	1645:2:43259:43275	3523275	0	True				
ANR	3524313	AssignmentExpression	data [ l ++ ] = 0x88		3523275	0		=			
ANR	3524314	ArrayIndexing	data [ l ++ ]		3523275	0					
ANR	3524315	Identifier	data		3523275	0					
ANR	3524316	PostIncDecOperationExpression	l ++		3523275	1					
ANR	3524317	Identifier	l		3523275	0					
ANR	3524318	IncDec	++		3523275	1					
ANR	3524319	PrimaryExpression	0x88		3523275	1					
ANR	3524320	IfStatement	if ( is_short )		3523275	12					
ANR	3524321	Condition	is_short	1647:5:43285:43292	3523275	0	True				
ANR	3524322	Identifier	is_short		3523275	0					
ANR	3524323	CompoundStatement		116:15:3583:3583	3523275	1					
ANR	3524324	ExpressionStatement	data [ l - 1 ] -= 0x10	1648:2:43299:43316	3523275	0	True				
ANR	3524325	AssignmentExpression	data [ l - 1 ] -= 0x10		3523275	0		-=			
ANR	3524326	ArrayIndexing	data [ l - 1 ]		3523275	0					
ANR	3524327	Identifier	data		3523275	0					
ANR	3524328	AdditiveExpression	l - 1		3523275	1		-			
ANR	3524329	Identifier	l		3523275	0					
ANR	3524330	PrimaryExpression	1		3523275	1					
ANR	3524331	PrimaryExpression	0x10		3523275	1					
ANR	3524332	ExpressionStatement	immediate -= is_short ? 2 : 6	1651:1:43323:43352	3523275	13	True				
ANR	3524333	AssignmentExpression	immediate -= is_short ? 2 : 6		3523275	0		-=			
ANR	3524334	Identifier	immediate		3523275	0					
ANR	3524335	ConditionalExpression	is_short ? 2 : 6		3523275	1					
ANR	3524336	Condition	is_short		3523275	0					
ANR	3524337	Identifier	is_short		3523275	0					
ANR	3524338	PrimaryExpression	2		3523275	1					
ANR	3524339	PrimaryExpression	6		3523275	2					
ANR	3524340	ExpressionStatement	data [ l ++ ] = immediate	1652:1:43355:43376	3523275	14	True				
ANR	3524341	AssignmentExpression	data [ l ++ ] = immediate		3523275	0		=			
ANR	3524342	ArrayIndexing	data [ l ++ ]		3523275	0					
ANR	3524343	Identifier	data		3523275	0					
ANR	3524344	PostIncDecOperationExpression	l ++		3523275	1					
ANR	3524345	Identifier	l		3523275	0					
ANR	3524346	IncDec	++		3523275	1					
ANR	3524347	Identifier	immediate		3523275	1					
ANR	3524348	IfStatement	if ( ! is_short )		3523275	15					
ANR	3524349	Condition	! is_short	1653:5:43383:43391	3523275	0	True				
ANR	3524350	UnaryOperationExpression	! is_short		3523275	0					
ANR	3524351	UnaryOperator	!		3523275	0					
ANR	3524352	Identifier	is_short		3523275	1					
ANR	3524353	CompoundStatement		122:16:3682:3682	3523275	1					
ANR	3524354	ExpressionStatement	data [ l ++ ] = immediate >> 8	1654:2:43398:43424	3523275	0	True				
ANR	3524355	AssignmentExpression	data [ l ++ ] = immediate >> 8		3523275	0		=			
ANR	3524356	ArrayIndexing	data [ l ++ ]		3523275	0					
ANR	3524357	Identifier	data		3523275	0					
ANR	3524358	PostIncDecOperationExpression	l ++		3523275	1					
ANR	3524359	Identifier	l		3523275	0					
ANR	3524360	IncDec	++		3523275	1					
ANR	3524361	ShiftExpression	immediate >> 8		3523275	1		>>			
ANR	3524362	Identifier	immediate		3523275	0					
ANR	3524363	PrimaryExpression	8		3523275	1					
ANR	3524364	ExpressionStatement	data [ l ++ ] = immediate >> 16	1655:2:43428:43455	3523275	1	True				
ANR	3524365	AssignmentExpression	data [ l ++ ] = immediate >> 16		3523275	0		=			
ANR	3524366	ArrayIndexing	data [ l ++ ]		3523275	0					
ANR	3524367	Identifier	data		3523275	0					
ANR	3524368	PostIncDecOperationExpression	l ++		3523275	1					
ANR	3524369	Identifier	l		3523275	0					
ANR	3524370	IncDec	++		3523275	1					
ANR	3524371	ShiftExpression	immediate >> 16		3523275	1		>>			
ANR	3524372	Identifier	immediate		3523275	0					
ANR	3524373	PrimaryExpression	16		3523275	1					
ANR	3524374	ExpressionStatement	data [ l ++ ] = immediate >> 24	1656:2:43459:43486	3523275	2	True				
ANR	3524375	AssignmentExpression	data [ l ++ ] = immediate >> 24		3523275	0		=			
ANR	3524376	ArrayIndexing	data [ l ++ ]		3523275	0					
ANR	3524377	Identifier	data		3523275	0					
ANR	3524378	PostIncDecOperationExpression	l ++		3523275	1					
ANR	3524379	Identifier	l		3523275	0					
ANR	3524380	IncDec	++		3523275	1					
ANR	3524381	ShiftExpression	immediate >> 24		3523275	1		>>			
ANR	3524382	Identifier	immediate		3523275	0					
ANR	3524383	PrimaryExpression	24		3523275	1					
ANR	3524384	ReturnStatement	return l ;	1658:1:43492:43500	3523275	16	True				
ANR	3524385	Identifier	l		3523275	0					
ANR	3524386	ReturnType	static int		3523275	1					
ANR	3524387	Identifier	opjc		3523275	2					
ANR	3524388	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3523275	3					
ANR	3524389	Parameter	RAsm * a	1532:16:39673:39679	3523275	0	True				
ANR	3524390	ParameterType	RAsm *		3523275	0					
ANR	3524391	Identifier	a		3523275	1					
ANR	3524392	Parameter	ut8 * data	1532:25:39682:39690	3523275	1	True				
ANR	3524393	ParameterType	ut8 *		3523275	0					
ANR	3524394	Identifier	data		3523275	1					
ANR	3524395	Parameter	const Opcode * op	1532:36:39693:39708	3523275	2	True				
ANR	3524396	ParameterType	const Opcode *		3523275	0					
ANR	3524397	Identifier	op		3523275	1					
ANR	3524398	CFGEntryNode	ENTRY		3523275		True				
ANR	3524399	CFGExitNode	EXIT		3523275		True				
ANR	3524400	Symbol	op -> operands [ 0 ] . offset_sign		3523275						
ANR	3524401	Symbol	ST8_MAX		3523275						
ANR	3524402	Symbol	data		3523275						
ANR	3524403	Symbol	* op		3523275						
ANR	3524404	Symbol	ST32_MAX		3523275						
ANR	3524405	Symbol	op -> mnemonic		3523275						
ANR	3524406	Symbol	X86R_ESP		3523275						
ANR	3524407	Symbol	is_short		3523275						
ANR	3524408	Symbol	* * op		3523275						
ANR	3524409	Symbol	op -> is_short		3523275						
ANR	3524410	Symbol	* op -> operands		3523275						
ANR	3524411	Symbol	ST8_MIN		3523275						
ANR	3524412	Symbol	op -> operands [ 0 ] . type		3523275						
ANR	3524413	Symbol	op -> operands [ 0 ] . reg		3523275						
ANR	3524414	Symbol	op -> operands [ 0 ] . offset		3523275						
ANR	3524415	Symbol	OT_MEMORY		3523275						
ANR	3524416	Symbol	op -> operands [ 0 ] . sign		3523275						
ANR	3524417	Symbol	a -> bits		3523275						
ANR	3524418	Symbol	strcmp		3523275						
ANR	3524419	Symbol	a		3523275						
ANR	3524420	Symbol	op		3523275						
ANR	3524421	Symbol	OT_GPREG		3523275						
ANR	3524422	Symbol	offset		3523275						
ANR	3524423	Symbol	false		3523275						
ANR	3524424	Symbol	* a		3523275						
ANR	3524425	Symbol	* * op -> operands		3523275						
ANR	3524426	Symbol	l		3523275						
ANR	3524427	Symbol	op -> operands [ 0 ] . immediate		3523275						
ANR	3524428	Symbol	a -> pc		3523275						
ANR	3524429	Symbol	immediate		3523275						
ANR	3524430	Symbol	* l		3523275						
ANR	3524431	Symbol	* op -> operands [ 0 ] . regs		3523275						
ANR	3524432	Symbol	true		3523275						
ANR	3524433	Symbol	* * * op		3523275						
ANR	3524434	Symbol	op -> operands		3523275						
ANR	3524435	Symbol	* data		3523275						
ANR	3524436	Symbol	op -> operands [ 0 ] . regs		3523275						
ANR	3524437	Function	oplea	1661:0:43505:45167							
ANR	3524438	FunctionDef	"oplea (RAsm * a , ut8 * data , const Opcode * op)"		3524437	0					
ANR	3524439	CompoundStatement		1661:54:43559:45167	3524437	0					
ANR	3524440	IdentifierDeclStatement	int l = 0 ;	1662:1:43562:43571	3524437	0	True				
ANR	3524441	IdentifierDecl	l = 0		3524437	0					
ANR	3524442	IdentifierDeclType	int		3524437	0					
ANR	3524443	Identifier	l		3524437	1					
ANR	3524444	AssignmentExpression	l = 0		3524437	2		=			
ANR	3524445	Identifier	l		3524437	0					
ANR	3524446	PrimaryExpression	0		3524437	1					
ANR	3524447	IdentifierDeclStatement	int mod = 0 ;	1663:1:43574:43585	3524437	1	True				
ANR	3524448	IdentifierDecl	mod = 0		3524437	0					
ANR	3524449	IdentifierDeclType	int		3524437	0					
ANR	3524450	Identifier	mod		3524437	1					
ANR	3524451	AssignmentExpression	mod = 0		3524437	2		=			
ANR	3524452	Identifier	mod		3524437	0					
ANR	3524453	PrimaryExpression	0		3524437	1					
ANR	3524454	IdentifierDeclStatement	st32 offset = 0 ;	1664:1:43588:43603	3524437	2	True				
ANR	3524455	IdentifierDecl	offset = 0		3524437	0					
ANR	3524456	IdentifierDeclType	st32		3524437	0					
ANR	3524457	Identifier	offset		3524437	1					
ANR	3524458	AssignmentExpression	offset = 0		3524437	2		=			
ANR	3524459	Identifier	offset		3524437	0					
ANR	3524460	PrimaryExpression	0		3524437	1					
ANR	3524461	IdentifierDeclStatement	int reg = 0 ;	1665:1:43606:43617	3524437	3	True				
ANR	3524462	IdentifierDecl	reg = 0		3524437	0					
ANR	3524463	IdentifierDeclType	int		3524437	0					
ANR	3524464	Identifier	reg		3524437	1					
ANR	3524465	AssignmentExpression	reg = 0		3524437	2		=			
ANR	3524466	Identifier	reg		3524437	0					
ANR	3524467	PrimaryExpression	0		3524437	1					
ANR	3524468	IdentifierDeclStatement	int rm = 0 ;	1666:1:43620:43630	3524437	4	True				
ANR	3524469	IdentifierDecl	rm = 0		3524437	0					
ANR	3524470	IdentifierDeclType	int		3524437	0					
ANR	3524471	Identifier	rm		3524437	1					
ANR	3524472	AssignmentExpression	rm = 0		3524437	2		=			
ANR	3524473	Identifier	rm		3524437	0					
ANR	3524474	PrimaryExpression	0		3524437	1					
ANR	3524475	IfStatement	if ( op -> operands [ 0 ] . type & OT_REGALL && op -> operands [ 1 ] . type & ( OT_MEMORY | OT_CONSTANT ) )		3524437	5					
ANR	3524476	Condition	op -> operands [ 0 ] . type & OT_REGALL && op -> operands [ 1 ] . type & ( OT_MEMORY | OT_CONSTANT )	1667:5:43637:43725	3524437	0	True				
ANR	3524477	AndExpression	op -> operands [ 0 ] . type & OT_REGALL && op -> operands [ 1 ] . type & ( OT_MEMORY | OT_CONSTANT )		3524437	0		&&			
ANR	3524478	BitAndExpression	op -> operands [ 0 ] . type & OT_REGALL		3524437	0		&			
ANR	3524479	MemberAccess	op -> operands [ 0 ] . type		3524437	0					
ANR	3524480	ArrayIndexing	op -> operands [ 0 ]		3524437	0					
ANR	3524481	PtrMemberAccess	op -> operands		3524437	0					
ANR	3524482	Identifier	op		3524437	0					
ANR	3524483	Identifier	operands		3524437	1					
ANR	3524484	PrimaryExpression	0		3524437	1					
ANR	3524485	Identifier	type		3524437	1					
ANR	3524486	Identifier	OT_REGALL		3524437	1					
ANR	3524487	BitAndExpression	op -> operands [ 1 ] . type & ( OT_MEMORY | OT_CONSTANT )		3524437	1		&			
ANR	3524488	MemberAccess	op -> operands [ 1 ] . type		3524437	0					
ANR	3524489	ArrayIndexing	op -> operands [ 1 ]		3524437	0					
ANR	3524490	PtrMemberAccess	op -> operands		3524437	0					
ANR	3524491	Identifier	op		3524437	0					
ANR	3524492	Identifier	operands		3524437	1					
ANR	3524493	PrimaryExpression	1		3524437	1					
ANR	3524494	Identifier	type		3524437	1					
ANR	3524495	InclusiveOrExpression	OT_MEMORY | OT_CONSTANT		3524437	1		|			
ANR	3524496	Identifier	OT_MEMORY		3524437	0					
ANR	3524497	Identifier	OT_CONSTANT		3524437	1					
ANR	3524498	CompoundStatement		8:55:168:168	3524437	1					
ANR	3524499	IfStatement	if ( a -> bits == 64 )		3524437	0					
ANR	3524500	Condition	a -> bits == 64	1669:6:43736:43748	3524437	0	True				
ANR	3524501	EqualityExpression	a -> bits == 64		3524437	0		==			
ANR	3524502	PtrMemberAccess	a -> bits		3524437	0					
ANR	3524503	Identifier	a		3524437	0					
ANR	3524504	Identifier	bits		3524437	1					
ANR	3524505	PrimaryExpression	64		3524437	1					
ANR	3524506	CompoundStatement		9:21:191:191	3524437	1					
ANR	3524507	ExpressionStatement	data [ l ++ ] = 0x48	1670:3:43756:43772	3524437	0	True				
ANR	3524508	AssignmentExpression	data [ l ++ ] = 0x48		3524437	0		=			
ANR	3524509	ArrayIndexing	data [ l ++ ]		3524437	0					
ANR	3524510	Identifier	data		3524437	0					
ANR	3524511	PostIncDecOperationExpression	l ++		3524437	1					
ANR	3524512	Identifier	l		3524437	0					
ANR	3524513	IncDec	++		3524437	1					
ANR	3524514	PrimaryExpression	0x48		3524437	1					
ANR	3524515	ExpressionStatement	data [ l ++ ] = 0x8d	1672:2:43780:43796	3524437	1	True				
ANR	3524516	AssignmentExpression	data [ l ++ ] = 0x8d		3524437	0		=			
ANR	3524517	ArrayIndexing	data [ l ++ ]		3524437	0					
ANR	3524518	Identifier	data		3524437	0					
ANR	3524519	PostIncDecOperationExpression	l ++		3524437	1					
ANR	3524520	Identifier	l		3524437	0					
ANR	3524521	IncDec	++		3524437	1					
ANR	3524522	PrimaryExpression	0x8d		3524437	1					
ANR	3524523	IfStatement	if ( op -> operands [ 1 ] . regs [ 0 ] == X86R_UNDEFINED )		3524437	2					
ANR	3524524	Condition	op -> operands [ 1 ] . regs [ 0 ] == X86R_UNDEFINED	1673:6:43804:43844	3524437	0	True				
ANR	3524525	EqualityExpression	op -> operands [ 1 ] . regs [ 0 ] == X86R_UNDEFINED		3524437	0		==			
ANR	3524526	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3524437	0					
ANR	3524527	MemberAccess	op -> operands [ 1 ] . regs		3524437	0					
ANR	3524528	ArrayIndexing	op -> operands [ 1 ]		3524437	0					
ANR	3524529	PtrMemberAccess	op -> operands		3524437	0					
ANR	3524530	Identifier	op		3524437	0					
ANR	3524531	Identifier	operands		3524437	1					
ANR	3524532	PrimaryExpression	1		3524437	1					
ANR	3524533	Identifier	regs		3524437	1					
ANR	3524534	PrimaryExpression	0		3524437	1					
ANR	3524535	Identifier	X86R_UNDEFINED		3524437	1					
ANR	3524536	CompoundStatement		19:3:412:439	3524437	1					
ANR	3524537	IdentifierDeclStatement	ut64 offset = op -> operands [ 1 ] . offset - a -> pc ;	1675:3:43875:43919	3524437	0	True				
ANR	3524538	IdentifierDecl	offset = op -> operands [ 1 ] . offset - a -> pc		3524437	0					
ANR	3524539	IdentifierDeclType	ut64		3524437	0					
ANR	3524540	Identifier	offset		3524437	1					
ANR	3524541	AssignmentExpression	offset = op -> operands [ 1 ] . offset - a -> pc		3524437	2		=			
ANR	3524542	Identifier	offset		3524437	0					
ANR	3524543	AdditiveExpression	op -> operands [ 1 ] . offset - a -> pc		3524437	1		-			
ANR	3524544	MemberAccess	op -> operands [ 1 ] . offset		3524437	0					
ANR	3524545	ArrayIndexing	op -> operands [ 1 ]		3524437	0					
ANR	3524546	PtrMemberAccess	op -> operands		3524437	0					
ANR	3524547	Identifier	op		3524437	0					
ANR	3524548	Identifier	operands		3524437	1					
ANR	3524549	PrimaryExpression	1		3524437	1					
ANR	3524550	Identifier	offset		3524437	1					
ANR	3524551	PtrMemberAccess	a -> pc		3524437	1					
ANR	3524552	Identifier	a		3524437	0					
ANR	3524553	Identifier	pc		3524437	1					
ANR	3524554	IfStatement	if ( data [ 0 ] == 0x48 )		3524437	1					
ANR	3524555	Condition	data [ 0 ] == 0x48	1676:7:43928:43942	3524437	0	True				
ANR	3524556	EqualityExpression	data [ 0 ] == 0x48		3524437	0		==			
ANR	3524557	ArrayIndexing	data [ 0 ]		3524437	0					
ANR	3524558	Identifier	data		3524437	0					
ANR	3524559	PrimaryExpression	0		3524437	1					
ANR	3524560	PrimaryExpression	0x48		3524437	1					
ANR	3524561	CompoundStatement		16:24:385:385	3524437	1					
ANR	3524562	ExpressionStatement	offset -= 7	1677:4:43951:43962	3524437	0	True				
ANR	3524563	AssignmentExpression	offset -= 7		3524437	0		-=			
ANR	3524564	Identifier	offset		3524437	0					
ANR	3524565	PrimaryExpression	7		3524437	1					
ANR	3524566	IdentifierDeclStatement	ut32 high = 0xff00 & offset ;	1679:3:43972:43999	3524437	2	True				
ANR	3524567	IdentifierDecl	high = 0xff00 & offset		3524437	0					
ANR	3524568	IdentifierDeclType	ut32		3524437	0					
ANR	3524569	Identifier	high		3524437	1					
ANR	3524570	AssignmentExpression	high = 0xff00 & offset		3524437	2		=			
ANR	3524571	Identifier	high		3524437	0					
ANR	3524572	BitAndExpression	0xff00 & offset		3524437	1		&			
ANR	3524573	PrimaryExpression	0xff00		3524437	0					
ANR	3524574	Identifier	offset		3524437	1					
ANR	3524575	ExpressionStatement	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | 5	1680:3:44004:44044	3524437	3	True				
ANR	3524576	AssignmentExpression	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | 5		3524437	0		=			
ANR	3524577	ArrayIndexing	data [ l ++ ]		3524437	0					
ANR	3524578	Identifier	data		3524437	0					
ANR	3524579	PostIncDecOperationExpression	l ++		3524437	1					
ANR	3524580	Identifier	l		3524437	0					
ANR	3524581	IncDec	++		3524437	1					
ANR	3524582	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | 5		3524437	1		|			
ANR	3524583	ShiftExpression	op -> operands [ 0 ] . reg << 3		3524437	0		<<			
ANR	3524584	MemberAccess	op -> operands [ 0 ] . reg		3524437	0					
ANR	3524585	ArrayIndexing	op -> operands [ 0 ]		3524437	0					
ANR	3524586	PtrMemberAccess	op -> operands		3524437	0					
ANR	3524587	Identifier	op		3524437	0					
ANR	3524588	Identifier	operands		3524437	1					
ANR	3524589	PrimaryExpression	0		3524437	1					
ANR	3524590	Identifier	reg		3524437	1					
ANR	3524591	PrimaryExpression	3		3524437	1					
ANR	3524592	PrimaryExpression	5		3524437	1					
ANR	3524593	ExpressionStatement	data [ l ++ ] = offset	1681:3:44049:44067	3524437	4	True				
ANR	3524594	AssignmentExpression	data [ l ++ ] = offset		3524437	0		=			
ANR	3524595	ArrayIndexing	data [ l ++ ]		3524437	0					
ANR	3524596	Identifier	data		3524437	0					
ANR	3524597	PostIncDecOperationExpression	l ++		3524437	1					
ANR	3524598	Identifier	l		3524437	0					
ANR	3524599	IncDec	++		3524437	1					
ANR	3524600	Identifier	offset		3524437	1					
ANR	3524601	ExpressionStatement	data [ l ++ ] = high >> 8	1682:3:44072:44093	3524437	5	True				
ANR	3524602	AssignmentExpression	data [ l ++ ] = high >> 8		3524437	0		=			
ANR	3524603	ArrayIndexing	data [ l ++ ]		3524437	0					
ANR	3524604	Identifier	data		3524437	0					
ANR	3524605	PostIncDecOperationExpression	l ++		3524437	1					
ANR	3524606	Identifier	l		3524437	0					
ANR	3524607	IncDec	++		3524437	1					
ANR	3524608	ShiftExpression	high >> 8		3524437	1		>>			
ANR	3524609	Identifier	high		3524437	0					
ANR	3524610	PrimaryExpression	8		3524437	1					
ANR	3524611	ExpressionStatement	data [ l ++ ] = offset >> 16	1683:3:44098:44122	3524437	6	True				
ANR	3524612	AssignmentExpression	data [ l ++ ] = offset >> 16		3524437	0		=			
ANR	3524613	ArrayIndexing	data [ l ++ ]		3524437	0					
ANR	3524614	Identifier	data		3524437	0					
ANR	3524615	PostIncDecOperationExpression	l ++		3524437	1					
ANR	3524616	Identifier	l		3524437	0					
ANR	3524617	IncDec	++		3524437	1					
ANR	3524618	ShiftExpression	offset >> 16		3524437	1		>>			
ANR	3524619	Identifier	offset		3524437	0					
ANR	3524620	PrimaryExpression	16		3524437	1					
ANR	3524621	ExpressionStatement	data [ l ++ ] = offset >> 24	1684:3:44127:44151	3524437	7	True				
ANR	3524622	AssignmentExpression	data [ l ++ ] = offset >> 24		3524437	0		=			
ANR	3524623	ArrayIndexing	data [ l ++ ]		3524437	0					
ANR	3524624	Identifier	data		3524437	0					
ANR	3524625	PostIncDecOperationExpression	l ++		3524437	1					
ANR	3524626	Identifier	l		3524437	0					
ANR	3524627	IncDec	++		3524437	1					
ANR	3524628	ShiftExpression	offset >> 24		3524437	1		>>			
ANR	3524629	Identifier	offset		3524437	0					
ANR	3524630	PrimaryExpression	24		3524437	1					
ANR	3524631	ReturnStatement	return l ;	1685:3:44156:44164	3524437	8	True				
ANR	3524632	Identifier	l		3524437	0					
ANR	3524633	ElseStatement	else		3524437	0					
ANR	3524634	CompoundStatement		26:9:615:615	3524437	0					
ANR	3524635	ExpressionStatement	reg = op -> operands [ 0 ] . reg	1687:3:44180:44205	3524437	0	True				
ANR	3524636	AssignmentExpression	reg = op -> operands [ 0 ] . reg		3524437	0		=			
ANR	3524637	Identifier	reg		3524437	0					
ANR	3524638	MemberAccess	op -> operands [ 0 ] . reg		3524437	1					
ANR	3524639	ArrayIndexing	op -> operands [ 0 ]		3524437	0					
ANR	3524640	PtrMemberAccess	op -> operands		3524437	0					
ANR	3524641	Identifier	op		3524437	0					
ANR	3524642	Identifier	operands		3524437	1					
ANR	3524643	PrimaryExpression	0		3524437	1					
ANR	3524644	Identifier	reg		3524437	1					
ANR	3524645	ExpressionStatement	rm = op -> operands [ 1 ] . regs [ 0 ]	1688:3:44210:44238	3524437	1	True				
ANR	3524646	AssignmentExpression	rm = op -> operands [ 1 ] . regs [ 0 ]		3524437	0		=			
ANR	3524647	Identifier	rm		3524437	0					
ANR	3524648	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3524437	1					
ANR	3524649	MemberAccess	op -> operands [ 1 ] . regs		3524437	0					
ANR	3524650	ArrayIndexing	op -> operands [ 1 ]		3524437	0					
ANR	3524651	PtrMemberAccess	op -> operands		3524437	0					
ANR	3524652	Identifier	op		3524437	0					
ANR	3524653	Identifier	operands		3524437	1					
ANR	3524654	PrimaryExpression	1		3524437	1					
ANR	3524655	Identifier	regs		3524437	1					
ANR	3524656	PrimaryExpression	0		3524437	1					
ANR	3524657	ExpressionStatement	offset = op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign	1690:3:44244:44305	3524437	2	True				
ANR	3524658	AssignmentExpression	offset = op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign		3524437	0		=			
ANR	3524659	Identifier	offset		3524437	0					
ANR	3524660	MultiplicativeExpression	op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign		3524437	1		*			
ANR	3524661	MemberAccess	op -> operands [ 1 ] . offset		3524437	0					
ANR	3524662	ArrayIndexing	op -> operands [ 1 ]		3524437	0					
ANR	3524663	PtrMemberAccess	op -> operands		3524437	0					
ANR	3524664	Identifier	op		3524437	0					
ANR	3524665	Identifier	operands		3524437	1					
ANR	3524666	PrimaryExpression	1		3524437	1					
ANR	3524667	Identifier	offset		3524437	1					
ANR	3524668	MemberAccess	op -> operands [ 1 ] . offset_sign		3524437	1					
ANR	3524669	ArrayIndexing	op -> operands [ 1 ]		3524437	0					
ANR	3524670	PtrMemberAccess	op -> operands		3524437	0					
ANR	3524671	Identifier	op		3524437	0					
ANR	3524672	Identifier	operands		3524437	1					
ANR	3524673	PrimaryExpression	1		3524437	1					
ANR	3524674	Identifier	offset_sign		3524437	1					
ANR	3524675	IfStatement	if ( op -> operands [ 1 ] . regs [ 0 ] == X86R_RIP )		3524437	3					
ANR	3524676	Condition	op -> operands [ 1 ] . regs [ 0 ] == X86R_RIP	1691:7:44314:44348	3524437	0	True				
ANR	3524677	EqualityExpression	op -> operands [ 1 ] . regs [ 0 ] == X86R_RIP		3524437	0		==			
ANR	3524678	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3524437	0					
ANR	3524679	MemberAccess	op -> operands [ 1 ] . regs		3524437	0					
ANR	3524680	ArrayIndexing	op -> operands [ 1 ]		3524437	0					
ANR	3524681	PtrMemberAccess	op -> operands		3524437	0					
ANR	3524682	Identifier	op		3524437	0					
ANR	3524683	Identifier	operands		3524437	1					
ANR	3524684	PrimaryExpression	1		3524437	1					
ANR	3524685	Identifier	regs		3524437	1					
ANR	3524686	PrimaryExpression	0		3524437	1					
ANR	3524687	Identifier	X86R_RIP		3524437	1					
ANR	3524688	CompoundStatement		31:44:791:791	3524437	1					
ANR	3524689	ExpressionStatement	data [ l ++ ] = reg << 3 | 5	1693:4:44433:44457	3524437	0	True				
ANR	3524690	AssignmentExpression	data [ l ++ ] = reg << 3 | 5		3524437	0		=			
ANR	3524691	ArrayIndexing	data [ l ++ ]		3524437	0					
ANR	3524692	Identifier	data		3524437	0					
ANR	3524693	PostIncDecOperationExpression	l ++		3524437	1					
ANR	3524694	Identifier	l		3524437	0					
ANR	3524695	IncDec	++		3524437	1					
ANR	3524696	InclusiveOrExpression	reg << 3 | 5		3524437	1		|			
ANR	3524697	ShiftExpression	reg << 3		3524437	0		<<			
ANR	3524698	Identifier	reg		3524437	0					
ANR	3524699	PrimaryExpression	3		3524437	1					
ANR	3524700	PrimaryExpression	5		3524437	1					
ANR	3524701	ExpressionStatement	data [ l ++ ] = offset	1694:4:44463:44481	3524437	1	True				
ANR	3524702	AssignmentExpression	data [ l ++ ] = offset		3524437	0		=			
ANR	3524703	ArrayIndexing	data [ l ++ ]		3524437	0					
ANR	3524704	Identifier	data		3524437	0					
ANR	3524705	PostIncDecOperationExpression	l ++		3524437	1					
ANR	3524706	Identifier	l		3524437	0					
ANR	3524707	IncDec	++		3524437	1					
ANR	3524708	Identifier	offset		3524437	1					
ANR	3524709	ExpressionStatement	data [ l ++ ] = offset >> 8	1695:4:44487:44510	3524437	2	True				
ANR	3524710	AssignmentExpression	data [ l ++ ] = offset >> 8		3524437	0		=			
ANR	3524711	ArrayIndexing	data [ l ++ ]		3524437	0					
ANR	3524712	Identifier	data		3524437	0					
ANR	3524713	PostIncDecOperationExpression	l ++		3524437	1					
ANR	3524714	Identifier	l		3524437	0					
ANR	3524715	IncDec	++		3524437	1					
ANR	3524716	ShiftExpression	offset >> 8		3524437	1		>>			
ANR	3524717	Identifier	offset		3524437	0					
ANR	3524718	PrimaryExpression	8		3524437	1					
ANR	3524719	ExpressionStatement	data [ l ++ ] = offset >> 16	1696:4:44516:44540	3524437	3	True				
ANR	3524720	AssignmentExpression	data [ l ++ ] = offset >> 16		3524437	0		=			
ANR	3524721	ArrayIndexing	data [ l ++ ]		3524437	0					
ANR	3524722	Identifier	data		3524437	0					
ANR	3524723	PostIncDecOperationExpression	l ++		3524437	1					
ANR	3524724	Identifier	l		3524437	0					
ANR	3524725	IncDec	++		3524437	1					
ANR	3524726	ShiftExpression	offset >> 16		3524437	1		>>			
ANR	3524727	Identifier	offset		3524437	0					
ANR	3524728	PrimaryExpression	16		3524437	1					
ANR	3524729	ExpressionStatement	data [ l ++ ] = offset >> 24	1697:4:44546:44570	3524437	4	True				
ANR	3524730	AssignmentExpression	data [ l ++ ] = offset >> 24		3524437	0		=			
ANR	3524731	ArrayIndexing	data [ l ++ ]		3524437	0					
ANR	3524732	Identifier	data		3524437	0					
ANR	3524733	PostIncDecOperationExpression	l ++		3524437	1					
ANR	3524734	Identifier	l		3524437	0					
ANR	3524735	IncDec	++		3524437	1					
ANR	3524736	ShiftExpression	offset >> 24		3524437	1		>>			
ANR	3524737	Identifier	offset		3524437	0					
ANR	3524738	PrimaryExpression	24		3524437	1					
ANR	3524739	ReturnStatement	return l ;	1698:4:44576:44584	3524437	5	True				
ANR	3524740	Identifier	l		3524437	0					
ANR	3524741	IfStatement	if ( offset != 0 || op -> operands [ 1 ] . regs [ 0 ] == X86R_EBP )		3524437	4					
ANR	3524742	Condition	offset != 0 || op -> operands [ 1 ] . regs [ 0 ] == X86R_EBP	1700:7:44598:44647	3524437	0	True				
ANR	3524743	OrExpression	offset != 0 || op -> operands [ 1 ] . regs [ 0 ] == X86R_EBP		3524437	0		||			
ANR	3524744	EqualityExpression	offset != 0		3524437	0		!=			
ANR	3524745	Identifier	offset		3524437	0					
ANR	3524746	PrimaryExpression	0		3524437	1					
ANR	3524747	EqualityExpression	op -> operands [ 1 ] . regs [ 0 ] == X86R_EBP		3524437	1		==			
ANR	3524748	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3524437	0					
ANR	3524749	MemberAccess	op -> operands [ 1 ] . regs		3524437	0					
ANR	3524750	ArrayIndexing	op -> operands [ 1 ]		3524437	0					
ANR	3524751	PtrMemberAccess	op -> operands		3524437	0					
ANR	3524752	Identifier	op		3524437	0					
ANR	3524753	Identifier	operands		3524437	1					
ANR	3524754	PrimaryExpression	1		3524437	1					
ANR	3524755	Identifier	regs		3524437	1					
ANR	3524756	PrimaryExpression	0		3524437	1					
ANR	3524757	Identifier	X86R_EBP		3524437	1					
ANR	3524758	CompoundStatement		40:59:1090:1090	3524437	1					
ANR	3524759	ExpressionStatement	mod = 1	1701:4:44656:44663	3524437	0	True				
ANR	3524760	AssignmentExpression	mod = 1		3524437	0		=			
ANR	3524761	Identifier	mod		3524437	0					
ANR	3524762	PrimaryExpression	1		3524437	1					
ANR	3524763	IfStatement	if ( offset >= 128 || offset < - 128 )		3524437	1					
ANR	3524764	Condition	offset >= 128 || offset < - 128	1702:8:44673:44702	3524437	0	True				
ANR	3524765	OrExpression	offset >= 128 || offset < - 128		3524437	0		||			
ANR	3524766	RelationalExpression	offset >= 128		3524437	0		>=			
ANR	3524767	Identifier	offset		3524437	0					
ANR	3524768	PrimaryExpression	128		3524437	1					
ANR	3524769	RelationalExpression	offset < - 128		3524437	1		<			
ANR	3524770	Identifier	offset		3524437	0					
ANR	3524771	UnaryOperationExpression	- 128		3524437	1					
ANR	3524772	UnaryOperator	-		3524437	0					
ANR	3524773	PrimaryExpression	128		3524437	1					
ANR	3524774	CompoundStatement		42:40:1145:1145	3524437	1					
ANR	3524775	ExpressionStatement	mod = 2	1703:5:44712:44719	3524437	0	True				
ANR	3524776	AssignmentExpression	mod = 2		3524437	0		=			
ANR	3524777	Identifier	mod		3524437	0					
ANR	3524778	PrimaryExpression	2		3524437	1					
ANR	3524779	ExpressionStatement	data [ l ++ ] = mod << 6 | reg << 3 | rm	1705:4:44731:44767	3524437	2	True				
ANR	3524780	AssignmentExpression	data [ l ++ ] = mod << 6 | reg << 3 | rm		3524437	0		=			
ANR	3524781	ArrayIndexing	data [ l ++ ]		3524437	0					
ANR	3524782	Identifier	data		3524437	0					
ANR	3524783	PostIncDecOperationExpression	l ++		3524437	1					
ANR	3524784	Identifier	l		3524437	0					
ANR	3524785	IncDec	++		3524437	1					
ANR	3524786	InclusiveOrExpression	mod << 6 | reg << 3 | rm		3524437	1		|			
ANR	3524787	ShiftExpression	mod << 6		3524437	0		<<			
ANR	3524788	Identifier	mod		3524437	0					
ANR	3524789	PrimaryExpression	6		3524437	1					
ANR	3524790	InclusiveOrExpression	reg << 3 | rm		3524437	1		|			
ANR	3524791	ShiftExpression	reg << 3		3524437	0		<<			
ANR	3524792	Identifier	reg		3524437	0					
ANR	3524793	PrimaryExpression	3		3524437	1					
ANR	3524794	Identifier	rm		3524437	1					
ANR	3524795	IfStatement	if ( op -> operands [ 1 ] . regs [ 0 ] == X86R_ESP )		3524437	3					
ANR	3524796	Condition	op -> operands [ 1 ] . regs [ 0 ] == X86R_ESP	1706:8:44777:44811	3524437	0	True				
ANR	3524797	EqualityExpression	op -> operands [ 1 ] . regs [ 0 ] == X86R_ESP		3524437	0		==			
ANR	3524798	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3524437	0					
ANR	3524799	MemberAccess	op -> operands [ 1 ] . regs		3524437	0					
ANR	3524800	ArrayIndexing	op -> operands [ 1 ]		3524437	0					
ANR	3524801	PtrMemberAccess	op -> operands		3524437	0					
ANR	3524802	Identifier	op		3524437	0					
ANR	3524803	Identifier	operands		3524437	1					
ANR	3524804	PrimaryExpression	1		3524437	1					
ANR	3524805	Identifier	regs		3524437	1					
ANR	3524806	PrimaryExpression	0		3524437	1					
ANR	3524807	Identifier	X86R_ESP		3524437	1					
ANR	3524808	CompoundStatement		46:45:1254:1254	3524437	1					
ANR	3524809	ExpressionStatement	data [ l ++ ] = 0x24	1707:5:44821:44837	3524437	0	True				
ANR	3524810	AssignmentExpression	data [ l ++ ] = 0x24		3524437	0		=			
ANR	3524811	ArrayIndexing	data [ l ++ ]		3524437	0					
ANR	3524812	Identifier	data		3524437	0					
ANR	3524813	PostIncDecOperationExpression	l ++		3524437	1					
ANR	3524814	Identifier	l		3524437	0					
ANR	3524815	IncDec	++		3524437	1					
ANR	3524816	PrimaryExpression	0x24		3524437	1					
ANR	3524817	ExpressionStatement	data [ l ++ ] = offset	1709:4:44849:44867	3524437	4	True				
ANR	3524818	AssignmentExpression	data [ l ++ ] = offset		3524437	0		=			
ANR	3524819	ArrayIndexing	data [ l ++ ]		3524437	0					
ANR	3524820	Identifier	data		3524437	0					
ANR	3524821	PostIncDecOperationExpression	l ++		3524437	1					
ANR	3524822	Identifier	l		3524437	0					
ANR	3524823	IncDec	++		3524437	1					
ANR	3524824	Identifier	offset		3524437	1					
ANR	3524825	IfStatement	if ( mod == 2 )		3524437	5					
ANR	3524826	Condition	mod == 2	1710:8:44877:44884	3524437	0	True				
ANR	3524827	EqualityExpression	mod == 2		3524437	0		==			
ANR	3524828	Identifier	mod		3524437	0					
ANR	3524829	PrimaryExpression	2		3524437	1					
ANR	3524830	CompoundStatement		50:18:1327:1327	3524437	1					
ANR	3524831	ExpressionStatement	data [ l ++ ] = offset >> 8	1711:5:44894:44917	3524437	0	True				
ANR	3524832	AssignmentExpression	data [ l ++ ] = offset >> 8		3524437	0		=			
ANR	3524833	ArrayIndexing	data [ l ++ ]		3524437	0					
ANR	3524834	Identifier	data		3524437	0					
ANR	3524835	PostIncDecOperationExpression	l ++		3524437	1					
ANR	3524836	Identifier	l		3524437	0					
ANR	3524837	IncDec	++		3524437	1					
ANR	3524838	ShiftExpression	offset >> 8		3524437	1		>>			
ANR	3524839	Identifier	offset		3524437	0					
ANR	3524840	PrimaryExpression	8		3524437	1					
ANR	3524841	ExpressionStatement	data [ l ++ ] = offset >> 16	1712:5:44924:44948	3524437	1	True				
ANR	3524842	AssignmentExpression	data [ l ++ ] = offset >> 16		3524437	0		=			
ANR	3524843	ArrayIndexing	data [ l ++ ]		3524437	0					
ANR	3524844	Identifier	data		3524437	0					
ANR	3524845	PostIncDecOperationExpression	l ++		3524437	1					
ANR	3524846	Identifier	l		3524437	0					
ANR	3524847	IncDec	++		3524437	1					
ANR	3524848	ShiftExpression	offset >> 16		3524437	1		>>			
ANR	3524849	Identifier	offset		3524437	0					
ANR	3524850	PrimaryExpression	16		3524437	1					
ANR	3524851	ExpressionStatement	data [ l ++ ] = offset >> 24	1713:5:44955:44979	3524437	2	True				
ANR	3524852	AssignmentExpression	data [ l ++ ] = offset >> 24		3524437	0		=			
ANR	3524853	ArrayIndexing	data [ l ++ ]		3524437	0					
ANR	3524854	Identifier	data		3524437	0					
ANR	3524855	PostIncDecOperationExpression	l ++		3524437	1					
ANR	3524856	Identifier	l		3524437	0					
ANR	3524857	IncDec	++		3524437	1					
ANR	3524858	ShiftExpression	offset >> 24		3524437	1		>>			
ANR	3524859	Identifier	offset		3524437	0					
ANR	3524860	PrimaryExpression	24		3524437	1					
ANR	3524861	ElseStatement	else		3524437	0					
ANR	3524862	CompoundStatement		55:10:1437:1437	3524437	0					
ANR	3524863	ExpressionStatement	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]	1716:4:45003:45065	3524437	0	True				
ANR	3524864	AssignmentExpression	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		3524437	0		=			
ANR	3524865	ArrayIndexing	data [ l ++ ]		3524437	0					
ANR	3524866	Identifier	data		3524437	0					
ANR	3524867	PostIncDecOperationExpression	l ++		3524437	1					
ANR	3524868	Identifier	l		3524437	0					
ANR	3524869	IncDec	++		3524437	1					
ANR	3524870	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		3524437	1		|			
ANR	3524871	ShiftExpression	op -> operands [ 0 ] . reg << 3		3524437	0		<<			
ANR	3524872	MemberAccess	op -> operands [ 0 ] . reg		3524437	0					
ANR	3524873	ArrayIndexing	op -> operands [ 0 ]		3524437	0					
ANR	3524874	PtrMemberAccess	op -> operands		3524437	0					
ANR	3524875	Identifier	op		3524437	0					
ANR	3524876	Identifier	operands		3524437	1					
ANR	3524877	PrimaryExpression	0		3524437	1					
ANR	3524878	Identifier	reg		3524437	1					
ANR	3524879	PrimaryExpression	3		3524437	1					
ANR	3524880	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3524437	1					
ANR	3524881	MemberAccess	op -> operands [ 1 ] . regs		3524437	0					
ANR	3524882	ArrayIndexing	op -> operands [ 1 ]		3524437	0					
ANR	3524883	PtrMemberAccess	op -> operands		3524437	0					
ANR	3524884	Identifier	op		3524437	0					
ANR	3524885	Identifier	operands		3524437	1					
ANR	3524886	PrimaryExpression	1		3524437	1					
ANR	3524887	Identifier	regs		3524437	1					
ANR	3524888	PrimaryExpression	0		3524437	1					
ANR	3524889	IfStatement	if ( op -> operands [ 1 ] . regs [ 0 ] == X86R_ESP )		3524437	1					
ANR	3524890	Condition	op -> operands [ 1 ] . regs [ 0 ] == X86R_ESP	1717:8:45075:45109	3524437	0	True				
ANR	3524891	EqualityExpression	op -> operands [ 1 ] . regs [ 0 ] == X86R_ESP		3524437	0		==			
ANR	3524892	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3524437	0					
ANR	3524893	MemberAccess	op -> operands [ 1 ] . regs		3524437	0					
ANR	3524894	ArrayIndexing	op -> operands [ 1 ]		3524437	0					
ANR	3524895	PtrMemberAccess	op -> operands		3524437	0					
ANR	3524896	Identifier	op		3524437	0					
ANR	3524897	Identifier	operands		3524437	1					
ANR	3524898	PrimaryExpression	1		3524437	1					
ANR	3524899	Identifier	regs		3524437	1					
ANR	3524900	PrimaryExpression	0		3524437	1					
ANR	3524901	Identifier	X86R_ESP		3524437	1					
ANR	3524902	CompoundStatement		57:45:1552:1552	3524437	1					
ANR	3524903	ExpressionStatement	data [ l ++ ] = 0x24	1718:5:45119:45135	3524437	0	True				
ANR	3524904	AssignmentExpression	data [ l ++ ] = 0x24		3524437	0		=			
ANR	3524905	ArrayIndexing	data [ l ++ ]		3524437	0					
ANR	3524906	Identifier	data		3524437	0					
ANR	3524907	PostIncDecOperationExpression	l ++		3524437	1					
ANR	3524908	Identifier	l		3524437	0					
ANR	3524909	IncDec	++		3524437	1					
ANR	3524910	PrimaryExpression	0x24		3524437	1					
ANR	3524911	ReturnStatement	return l ;	1724:1:45157:45165	3524437	6	True				
ANR	3524912	Identifier	l		3524437	0					
ANR	3524913	ReturnType	static int		3524437	1					
ANR	3524914	Identifier	oplea		3524437	2					
ANR	3524915	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3524437	3					
ANR	3524916	Parameter	RAsm * a	1661:17:43522:43528	3524437	0	True				
ANR	3524917	ParameterType	RAsm *		3524437	0					
ANR	3524918	Identifier	a		3524437	1					
ANR	3524919	Parameter	ut8 * data	1661:26:43531:43539	3524437	1	True				
ANR	3524920	ParameterType	ut8 *		3524437	0					
ANR	3524921	Identifier	data		3524437	1					
ANR	3524922	Parameter	const Opcode * op	1661:37:43542:43557	3524437	2	True				
ANR	3524923	ParameterType	const Opcode *		3524437	0					
ANR	3524924	Identifier	op		3524437	1					
ANR	3524925	CFGEntryNode	ENTRY		3524437		True				
ANR	3524926	CFGExitNode	EXIT		3524437		True				
ANR	3524927	Symbol	mod		3524437						
ANR	3524928	Symbol	data		3524437						
ANR	3524929	Symbol	* op		3524437						
ANR	3524930	Symbol	X86R_ESP		3524437						
ANR	3524931	Symbol	X86R_EBP		3524437						
ANR	3524932	Symbol	* * op		3524437						
ANR	3524933	Symbol	* op -> operands [ 1 ] . regs		3524437						
ANR	3524934	Symbol	* op -> operands		3524437						
ANR	3524935	Symbol	high		3524437						
ANR	3524936	Symbol	reg		3524437						
ANR	3524937	Symbol	op -> operands [ 1 ] . regs		3524437						
ANR	3524938	Symbol	op -> operands [ 0 ] . type		3524437						
ANR	3524939	Symbol	op -> operands [ 0 ] . reg		3524437						
ANR	3524940	Symbol	op -> operands [ 1 ] . offset_sign		3524437						
ANR	3524941	Symbol	OT_MEMORY		3524437						
ANR	3524942	Symbol	a -> bits		3524437						
ANR	3524943	Symbol	a		3524437						
ANR	3524944	Symbol	op		3524437						
ANR	3524945	Symbol	OT_CONSTANT		3524437						
ANR	3524946	Symbol	offset		3524437						
ANR	3524947	Symbol	op -> operands [ 1 ] . offset		3524437						
ANR	3524948	Symbol	* a		3524437						
ANR	3524949	Symbol	* * op -> operands		3524437						
ANR	3524950	Symbol	l		3524437						
ANR	3524951	Symbol	OT_REGALL		3524437						
ANR	3524952	Symbol	X86R_RIP		3524437						
ANR	3524953	Symbol	a -> pc		3524437						
ANR	3524954	Symbol	X86R_UNDEFINED		3524437						
ANR	3524955	Symbol	op -> operands [ 1 ] . type		3524437						
ANR	3524956	Symbol	* * * op		3524437						
ANR	3524957	Symbol	rm		3524437						
ANR	3524958	Symbol	op -> operands		3524437						
ANR	3524959	Symbol	* data		3524437						
ANR	3524960	Function	oples	1727:0:45170:45998							
ANR	3524961	FunctionDef	"oples (RAsm * a , ut8 * data , const Opcode * op)"		3524960	0					
ANR	3524962	CompoundStatement		1727:55:45225:45998	3524960	0					
ANR	3524963	IdentifierDeclStatement	int l = 0 ;	1728:1:45228:45237	3524960	0	True				
ANR	3524964	IdentifierDecl	l = 0		3524960	0					
ANR	3524965	IdentifierDeclType	int		3524960	0					
ANR	3524966	Identifier	l		3524960	1					
ANR	3524967	AssignmentExpression	l = 0		3524960	2		=			
ANR	3524968	Identifier	l		3524960	0					
ANR	3524969	PrimaryExpression	0		3524960	1					
ANR	3524970	IdentifierDeclStatement	int offset = 0 ;	1729:1:45240:45254	3524960	1	True				
ANR	3524971	IdentifierDecl	offset = 0		3524960	0					
ANR	3524972	IdentifierDeclType	int		3524960	0					
ANR	3524973	Identifier	offset		3524960	1					
ANR	3524974	AssignmentExpression	offset = 0		3524960	2		=			
ANR	3524975	Identifier	offset		3524960	0					
ANR	3524976	PrimaryExpression	0		3524960	1					
ANR	3524977	IdentifierDeclStatement	int mod = 0 ;	1730:1:45257:45268	3524960	2	True				
ANR	3524978	IdentifierDecl	mod = 0		3524960	0					
ANR	3524979	IdentifierDeclType	int		3524960	0					
ANR	3524980	Identifier	mod		3524960	1					
ANR	3524981	AssignmentExpression	mod = 0		3524960	2		=			
ANR	3524982	Identifier	mod		3524960	0					
ANR	3524983	PrimaryExpression	0		3524960	1					
ANR	3524984	IfStatement	if ( op -> operands [ 1 ] . type & OT_MEMORY )		3524960	3					
ANR	3524985	Condition	op -> operands [ 1 ] . type & OT_MEMORY	1732:5:45276:45307	3524960	0	True				
ANR	3524986	BitAndExpression	op -> operands [ 1 ] . type & OT_MEMORY		3524960	0		&			
ANR	3524987	MemberAccess	op -> operands [ 1 ] . type		3524960	0					
ANR	3524988	ArrayIndexing	op -> operands [ 1 ]		3524960	0					
ANR	3524989	PtrMemberAccess	op -> operands		3524960	0					
ANR	3524990	Identifier	op		3524960	0					
ANR	3524991	Identifier	operands		3524960	1					
ANR	3524992	PrimaryExpression	1		3524960	1					
ANR	3524993	Identifier	type		3524960	1					
ANR	3524994	Identifier	OT_MEMORY		3524960	1					
ANR	3524995	CompoundStatement		6:39:84:84	3524960	1					
ANR	3524996	ExpressionStatement	data [ l ++ ] = 0xc4	1733:2:45314:45330	3524960	0	True				
ANR	3524997	AssignmentExpression	data [ l ++ ] = 0xc4		3524960	0		=			
ANR	3524998	ArrayIndexing	data [ l ++ ]		3524960	0					
ANR	3524999	Identifier	data		3524960	0					
ANR	3525000	PostIncDecOperationExpression	l ++		3524960	1					
ANR	3525001	Identifier	l		3524960	0					
ANR	3525002	IncDec	++		3524960	1					
ANR	3525003	PrimaryExpression	0xc4		3524960	1					
ANR	3525004	IfStatement	if ( op -> operands [ 1 ] . type & OT_GPREG )		3524960	1					
ANR	3525005	Condition	op -> operands [ 1 ] . type & OT_GPREG	1734:6:45338:45368	3524960	0	True				
ANR	3525006	BitAndExpression	op -> operands [ 1 ] . type & OT_GPREG		3524960	0		&			
ANR	3525007	MemberAccess	op -> operands [ 1 ] . type		3524960	0					
ANR	3525008	ArrayIndexing	op -> operands [ 1 ]		3524960	0					
ANR	3525009	PtrMemberAccess	op -> operands		3524960	0					
ANR	3525010	Identifier	op		3524960	0					
ANR	3525011	Identifier	operands		3524960	1					
ANR	3525012	PrimaryExpression	1		3524960	1					
ANR	3525013	Identifier	type		3524960	1					
ANR	3525014	Identifier	OT_GPREG		3524960	1					
ANR	3525015	CompoundStatement		8:39:145:145	3524960	1					
ANR	3525016	ExpressionStatement	offset = op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign	1735:3:45376:45437	3524960	0	True				
ANR	3525017	AssignmentExpression	offset = op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign		3524960	0		=			
ANR	3525018	Identifier	offset		3524960	0					
ANR	3525019	MultiplicativeExpression	op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign		3524960	1		*			
ANR	3525020	MemberAccess	op -> operands [ 1 ] . offset		3524960	0					
ANR	3525021	ArrayIndexing	op -> operands [ 1 ]		3524960	0					
ANR	3525022	PtrMemberAccess	op -> operands		3524960	0					
ANR	3525023	Identifier	op		3524960	0					
ANR	3525024	Identifier	operands		3524960	1					
ANR	3525025	PrimaryExpression	1		3524960	1					
ANR	3525026	Identifier	offset		3524960	1					
ANR	3525027	MemberAccess	op -> operands [ 1 ] . offset_sign		3524960	1					
ANR	3525028	ArrayIndexing	op -> operands [ 1 ]		3524960	0					
ANR	3525029	PtrMemberAccess	op -> operands		3524960	0					
ANR	3525030	Identifier	op		3524960	0					
ANR	3525031	Identifier	operands		3524960	1					
ANR	3525032	PrimaryExpression	1		3524960	1					
ANR	3525033	Identifier	offset_sign		3524960	1					
ANR	3525034	IfStatement	if ( offset )		3524960	1					
ANR	3525035	Condition	offset	1736:7:45446:45451	3524960	0	True				
ANR	3525036	Identifier	offset		3524960	0					
ANR	3525037	CompoundStatement		10:15:228:228	3524960	1					
ANR	3525038	ExpressionStatement	mod = 1	1737:4:45460:45467	3524960	0	True				
ANR	3525039	AssignmentExpression	mod = 1		3524960	0		=			
ANR	3525040	Identifier	mod		3524960	0					
ANR	3525041	PrimaryExpression	1		3524960	1					
ANR	3525042	IfStatement	if ( offset > 128 || offset < - 128 )		3524960	1					
ANR	3525043	Condition	offset > 128 || offset < - 128	1738:8:45477:45505	3524960	0	True				
ANR	3525044	OrExpression	offset > 128 || offset < - 128		3524960	0		||			
ANR	3525045	RelationalExpression	offset > 128		3524960	0		>			
ANR	3525046	Identifier	offset		3524960	0					
ANR	3525047	PrimaryExpression	128		3524960	1					
ANR	3525048	RelationalExpression	offset < - 128		3524960	1		<			
ANR	3525049	Identifier	offset		3524960	0					
ANR	3525050	UnaryOperationExpression	- 128		3524960	1					
ANR	3525051	UnaryOperator	-		3524960	0					
ANR	3525052	PrimaryExpression	128		3524960	1					
ANR	3525053	CompoundStatement		12:39:282:282	3524960	1					
ANR	3525054	ExpressionStatement	mod = 2	1739:5:45515:45522	3524960	0	True				
ANR	3525055	AssignmentExpression	mod = 2		3524960	0		=			
ANR	3525056	Identifier	mod		3524960	0					
ANR	3525057	PrimaryExpression	2		3524960	1					
ANR	3525058	ExpressionStatement	data [ l ++ ] = mod << 6 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]	1742:3:45538:45611	3524960	2	True				
ANR	3525059	AssignmentExpression	data [ l ++ ] = mod << 6 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		3524960	0		=			
ANR	3525060	ArrayIndexing	data [ l ++ ]		3524960	0					
ANR	3525061	Identifier	data		3524960	0					
ANR	3525062	PostIncDecOperationExpression	l ++		3524960	1					
ANR	3525063	Identifier	l		3524960	0					
ANR	3525064	IncDec	++		3524960	1					
ANR	3525065	InclusiveOrExpression	mod << 6 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		3524960	1		|			
ANR	3525066	ShiftExpression	mod << 6		3524960	0		<<			
ANR	3525067	Identifier	mod		3524960	0					
ANR	3525068	PrimaryExpression	6		3524960	1					
ANR	3525069	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		3524960	1		|			
ANR	3525070	ShiftExpression	op -> operands [ 0 ] . reg << 3		3524960	0		<<			
ANR	3525071	MemberAccess	op -> operands [ 0 ] . reg		3524960	0					
ANR	3525072	ArrayIndexing	op -> operands [ 0 ]		3524960	0					
ANR	3525073	PtrMemberAccess	op -> operands		3524960	0					
ANR	3525074	Identifier	op		3524960	0					
ANR	3525075	Identifier	operands		3524960	1					
ANR	3525076	PrimaryExpression	0		3524960	1					
ANR	3525077	Identifier	reg		3524960	1					
ANR	3525078	PrimaryExpression	3		3524960	1					
ANR	3525079	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3524960	1					
ANR	3525080	MemberAccess	op -> operands [ 1 ] . regs		3524960	0					
ANR	3525081	ArrayIndexing	op -> operands [ 1 ]		3524960	0					
ANR	3525082	PtrMemberAccess	op -> operands		3524960	0					
ANR	3525083	Identifier	op		3524960	0					
ANR	3525084	Identifier	operands		3524960	1					
ANR	3525085	PrimaryExpression	1		3524960	1					
ANR	3525086	Identifier	regs		3524960	1					
ANR	3525087	PrimaryExpression	0		3524960	1					
ANR	3525088	IfStatement	if ( mod )		3524960	3					
ANR	3525089	Condition	mod	1743:7:45620:45622	3524960	0	True				
ANR	3525090	Identifier	mod		3524960	0					
ANR	3525091	CompoundStatement		17:12:399:399	3524960	1					
ANR	3525092	ExpressionStatement	data [ l ++ ] = offset	1744:4:45631:45649	3524960	0	True				
ANR	3525093	AssignmentExpression	data [ l ++ ] = offset		3524960	0		=			
ANR	3525094	ArrayIndexing	data [ l ++ ]		3524960	0					
ANR	3525095	Identifier	data		3524960	0					
ANR	3525096	PostIncDecOperationExpression	l ++		3524960	1					
ANR	3525097	Identifier	l		3524960	0					
ANR	3525098	IncDec	++		3524960	1					
ANR	3525099	Identifier	offset		3524960	1					
ANR	3525100	IfStatement	if ( mod > 1 )		3524960	1					
ANR	3525101	Condition	mod > 1	1745:8:45659:45665	3524960	0	True				
ANR	3525102	RelationalExpression	mod > 1		3524960	0		>			
ANR	3525103	Identifier	mod		3524960	0					
ANR	3525104	PrimaryExpression	1		3524960	1					
ANR	3525105	CompoundStatement		19:17:442:442	3524960	1					
ANR	3525106	ExpressionStatement	data [ l ++ ] = offset >> 8	1746:5:45675:45698	3524960	0	True				
ANR	3525107	AssignmentExpression	data [ l ++ ] = offset >> 8		3524960	0		=			
ANR	3525108	ArrayIndexing	data [ l ++ ]		3524960	0					
ANR	3525109	Identifier	data		3524960	0					
ANR	3525110	PostIncDecOperationExpression	l ++		3524960	1					
ANR	3525111	Identifier	l		3524960	0					
ANR	3525112	IncDec	++		3524960	1					
ANR	3525113	ShiftExpression	offset >> 8		3524960	1		>>			
ANR	3525114	Identifier	offset		3524960	0					
ANR	3525115	PrimaryExpression	8		3524960	1					
ANR	3525116	ExpressionStatement	data [ l ++ ] = offset >> 16	1747:5:45705:45729	3524960	1	True				
ANR	3525117	AssignmentExpression	data [ l ++ ] = offset >> 16		3524960	0		=			
ANR	3525118	ArrayIndexing	data [ l ++ ]		3524960	0					
ANR	3525119	Identifier	data		3524960	0					
ANR	3525120	PostIncDecOperationExpression	l ++		3524960	1					
ANR	3525121	Identifier	l		3524960	0					
ANR	3525122	IncDec	++		3524960	1					
ANR	3525123	ShiftExpression	offset >> 16		3524960	1		>>			
ANR	3525124	Identifier	offset		3524960	0					
ANR	3525125	PrimaryExpression	16		3524960	1					
ANR	3525126	ExpressionStatement	data [ l ++ ] = offset >> 24	1748:5:45736:45760	3524960	2	True				
ANR	3525127	AssignmentExpression	data [ l ++ ] = offset >> 24		3524960	0		=			
ANR	3525128	ArrayIndexing	data [ l ++ ]		3524960	0					
ANR	3525129	Identifier	data		3524960	0					
ANR	3525130	PostIncDecOperationExpression	l ++		3524960	1					
ANR	3525131	Identifier	l		3524960	0					
ANR	3525132	IncDec	++		3524960	1					
ANR	3525133	ShiftExpression	offset >> 24		3524960	1		>>			
ANR	3525134	Identifier	offset		3524960	0					
ANR	3525135	PrimaryExpression	24		3524960	1					
ANR	3525136	ElseStatement	else		3524960	0					
ANR	3525137	CompoundStatement		25:9:556:556	3524960	0					
ANR	3525138	ExpressionStatement	offset = op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign	1752:3:45787:45848	3524960	0	True				
ANR	3525139	AssignmentExpression	offset = op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign		3524960	0		=			
ANR	3525140	Identifier	offset		3524960	0					
ANR	3525141	MultiplicativeExpression	op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign		3524960	1		*			
ANR	3525142	MemberAccess	op -> operands [ 1 ] . offset		3524960	0					
ANR	3525143	ArrayIndexing	op -> operands [ 1 ]		3524960	0					
ANR	3525144	PtrMemberAccess	op -> operands		3524960	0					
ANR	3525145	Identifier	op		3524960	0					
ANR	3525146	Identifier	operands		3524960	1					
ANR	3525147	PrimaryExpression	1		3524960	1					
ANR	3525148	Identifier	offset		3524960	1					
ANR	3525149	MemberAccess	op -> operands [ 1 ] . offset_sign		3524960	1					
ANR	3525150	ArrayIndexing	op -> operands [ 1 ]		3524960	0					
ANR	3525151	PtrMemberAccess	op -> operands		3524960	0					
ANR	3525152	Identifier	op		3524960	0					
ANR	3525153	Identifier	operands		3524960	1					
ANR	3525154	PrimaryExpression	1		3524960	1					
ANR	3525155	Identifier	offset_sign		3524960	1					
ANR	3525156	ExpressionStatement	data [ l ++ ] = 0x05	1753:3:45853:45869	3524960	1	True				
ANR	3525157	AssignmentExpression	data [ l ++ ] = 0x05		3524960	0		=			
ANR	3525158	ArrayIndexing	data [ l ++ ]		3524960	0					
ANR	3525159	Identifier	data		3524960	0					
ANR	3525160	PostIncDecOperationExpression	l ++		3524960	1					
ANR	3525161	Identifier	l		3524960	0					
ANR	3525162	IncDec	++		3524960	1					
ANR	3525163	PrimaryExpression	0x05		3524960	1					
ANR	3525164	ExpressionStatement	data [ l ++ ] = offset	1754:3:45874:45892	3524960	2	True				
ANR	3525165	AssignmentExpression	data [ l ++ ] = offset		3524960	0		=			
ANR	3525166	ArrayIndexing	data [ l ++ ]		3524960	0					
ANR	3525167	Identifier	data		3524960	0					
ANR	3525168	PostIncDecOperationExpression	l ++		3524960	1					
ANR	3525169	Identifier	l		3524960	0					
ANR	3525170	IncDec	++		3524960	1					
ANR	3525171	Identifier	offset		3524960	1					
ANR	3525172	ExpressionStatement	data [ l ++ ] = offset >> 8	1755:3:45897:45920	3524960	3	True				
ANR	3525173	AssignmentExpression	data [ l ++ ] = offset >> 8		3524960	0		=			
ANR	3525174	ArrayIndexing	data [ l ++ ]		3524960	0					
ANR	3525175	Identifier	data		3524960	0					
ANR	3525176	PostIncDecOperationExpression	l ++		3524960	1					
ANR	3525177	Identifier	l		3524960	0					
ANR	3525178	IncDec	++		3524960	1					
ANR	3525179	ShiftExpression	offset >> 8		3524960	1		>>			
ANR	3525180	Identifier	offset		3524960	0					
ANR	3525181	PrimaryExpression	8		3524960	1					
ANR	3525182	ExpressionStatement	data [ l ++ ] = offset >> 16	1756:3:45925:45949	3524960	4	True				
ANR	3525183	AssignmentExpression	data [ l ++ ] = offset >> 16		3524960	0		=			
ANR	3525184	ArrayIndexing	data [ l ++ ]		3524960	0					
ANR	3525185	Identifier	data		3524960	0					
ANR	3525186	PostIncDecOperationExpression	l ++		3524960	1					
ANR	3525187	Identifier	l		3524960	0					
ANR	3525188	IncDec	++		3524960	1					
ANR	3525189	ShiftExpression	offset >> 16		3524960	1		>>			
ANR	3525190	Identifier	offset		3524960	0					
ANR	3525191	PrimaryExpression	16		3524960	1					
ANR	3525192	ExpressionStatement	data [ l ++ ] = offset >> 24	1757:3:45954:45978	3524960	5	True				
ANR	3525193	AssignmentExpression	data [ l ++ ] = offset >> 24		3524960	0		=			
ANR	3525194	ArrayIndexing	data [ l ++ ]		3524960	0					
ANR	3525195	Identifier	data		3524960	0					
ANR	3525196	PostIncDecOperationExpression	l ++		3524960	1					
ANR	3525197	Identifier	l		3524960	0					
ANR	3525198	IncDec	++		3524960	1					
ANR	3525199	ShiftExpression	offset >> 24		3524960	1		>>			
ANR	3525200	Identifier	offset		3524960	0					
ANR	3525201	PrimaryExpression	24		3524960	1					
ANR	3525202	ReturnStatement	return l ;	1760:1:45988:45996	3524960	4	True				
ANR	3525203	Identifier	l		3524960	0					
ANR	3525204	ReturnType	static int		3524960	1					
ANR	3525205	Identifier	oples		3524960	2					
ANR	3525206	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3524960	3					
ANR	3525207	Parameter	RAsm * a	1727:17:45187:45193	3524960	0	True				
ANR	3525208	ParameterType	RAsm *		3524960	0					
ANR	3525209	Identifier	a		3524960	1					
ANR	3525210	Parameter	ut8 * data	1727:26:45196:45204	3524960	1	True				
ANR	3525211	ParameterType	ut8 *		3524960	0					
ANR	3525212	Identifier	data		3524960	1					
ANR	3525213	Parameter	const Opcode * op	1727:37:45207:45222	3524960	2	True				
ANR	3525214	ParameterType	const Opcode *		3524960	0					
ANR	3525215	Identifier	op		3524960	1					
ANR	3525216	CFGEntryNode	ENTRY		3524960		True				
ANR	3525217	CFGExitNode	EXIT		3524960		True				
ANR	3525218	Symbol	a		3524960						
ANR	3525219	Symbol	op		3524960						
ANR	3525220	Symbol	mod		3524960						
ANR	3525221	Symbol	OT_GPREG		3524960						
ANR	3525222	Symbol	data		3524960						
ANR	3525223	Symbol	offset		3524960						
ANR	3525224	Symbol	* op		3524960						
ANR	3525225	Symbol	op -> operands [ 1 ] . offset		3524960						
ANR	3525226	Symbol	* * op -> operands		3524960						
ANR	3525227	Symbol	l		3524960						
ANR	3525228	Symbol	* * op		3524960						
ANR	3525229	Symbol	* op -> operands [ 1 ] . regs		3524960						
ANR	3525230	Symbol	* op -> operands		3524960						
ANR	3525231	Symbol	op -> operands [ 1 ] . type		3524960						
ANR	3525232	Symbol	op -> operands [ 1 ] . regs		3524960						
ANR	3525233	Symbol	op -> operands [ 1 ] . offset_sign		3524960						
ANR	3525234	Symbol	* * * op		3524960						
ANR	3525235	Symbol	op -> operands [ 0 ] . reg		3524960						
ANR	3525236	Symbol	op -> operands		3524960						
ANR	3525237	Symbol	OT_MEMORY		3524960						
ANR	3525238	Symbol	* data		3524960						
ANR	3525239	Function	opmov	1763:0:46001:59694							
ANR	3525240	FunctionDef	"opmov (RAsm * a , ut8 * data , const Opcode * op)"		3525239	0					
ANR	3525241	CompoundStatement		1763:55:46056:59694	3525239	0					
ANR	3525242	IdentifierDeclStatement	int l = 0 ;	1764:1:46059:46068	3525239	0	True				
ANR	3525243	IdentifierDecl	l = 0		3525239	0					
ANR	3525244	IdentifierDeclType	int		3525239	0					
ANR	3525245	Identifier	l		3525239	1					
ANR	3525246	AssignmentExpression	l = 0		3525239	2		=			
ANR	3525247	Identifier	l		3525239	0					
ANR	3525248	PrimaryExpression	0		3525239	1					
ANR	3525249	IdentifierDeclStatement	st64 offset = 0 ;	1765:1:46071:46086	3525239	1	True				
ANR	3525250	IdentifierDecl	offset = 0		3525239	0					
ANR	3525251	IdentifierDeclType	st64		3525239	0					
ANR	3525252	Identifier	offset		3525239	1					
ANR	3525253	AssignmentExpression	offset = 0		3525239	2		=			
ANR	3525254	Identifier	offset		3525239	0					
ANR	3525255	PrimaryExpression	0		3525239	1					
ANR	3525256	IdentifierDeclStatement	int mod = 0 ;	1766:1:46089:46100	3525239	2	True				
ANR	3525257	IdentifierDecl	mod = 0		3525239	0					
ANR	3525258	IdentifierDeclType	int		3525239	0					
ANR	3525259	Identifier	mod		3525239	1					
ANR	3525260	AssignmentExpression	mod = 0		3525239	2		=			
ANR	3525261	Identifier	mod		3525239	0					
ANR	3525262	PrimaryExpression	0		3525239	1					
ANR	3525263	IdentifierDeclStatement	int base = 0 ;	1767:1:46103:46115	3525239	3	True				
ANR	3525264	IdentifierDecl	base = 0		3525239	0					
ANR	3525265	IdentifierDeclType	int		3525239	0					
ANR	3525266	Identifier	base		3525239	1					
ANR	3525267	AssignmentExpression	base = 0		3525239	2		=			
ANR	3525268	Identifier	base		3525239	0					
ANR	3525269	PrimaryExpression	0		3525239	1					
ANR	3525270	IdentifierDeclStatement	int rex = 0 ;	1768:1:46118:46129	3525239	4	True				
ANR	3525271	IdentifierDecl	rex = 0		3525239	0					
ANR	3525272	IdentifierDeclType	int		3525239	0					
ANR	3525273	Identifier	rex		3525239	1					
ANR	3525274	AssignmentExpression	rex = 0		3525239	2		=			
ANR	3525275	Identifier	rex		3525239	0					
ANR	3525276	PrimaryExpression	0		3525239	1					
ANR	3525277	IdentifierDeclStatement	ut64 immediate = 0 ;	1769:1:46132:46150	3525239	5	True				
ANR	3525278	IdentifierDecl	immediate = 0		3525239	0					
ANR	3525279	IdentifierDeclType	ut64		3525239	0					
ANR	3525280	Identifier	immediate		3525239	1					
ANR	3525281	AssignmentExpression	immediate = 0		3525239	2		=			
ANR	3525282	Identifier	immediate		3525239	0					
ANR	3525283	PrimaryExpression	0		3525239	1					
ANR	3525284	IfStatement	if ( op -> operands [ 1 ] . type & OT_CONSTANT )		3525239	6					
ANR	3525285	Condition	op -> operands [ 1 ] . type & OT_CONSTANT	1770:5:46157:46190	3525239	0	True				
ANR	3525286	BitAndExpression	op -> operands [ 1 ] . type & OT_CONSTANT		3525239	0		&			
ANR	3525287	MemberAccess	op -> operands [ 1 ] . type		3525239	0					
ANR	3525288	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3525289	PtrMemberAccess	op -> operands		3525239	0					
ANR	3525290	Identifier	op		3525239	0					
ANR	3525291	Identifier	operands		3525239	1					
ANR	3525292	PrimaryExpression	1		3525239	1					
ANR	3525293	Identifier	type		3525239	1					
ANR	3525294	Identifier	OT_CONSTANT		3525239	1					
ANR	3525295	CompoundStatement		8:41:136:136	3525239	1					
ANR	3525296	IfStatement	if ( ! op -> operands [ 1 ] . is_good_flag )		3525239	0					
ANR	3525297	Condition	! op -> operands [ 1 ] . is_good_flag	1771:6:46201:46229	3525239	0	True				
ANR	3525298	UnaryOperationExpression	! op -> operands [ 1 ] . is_good_flag		3525239	0					
ANR	3525299	UnaryOperator	!		3525239	0					
ANR	3525300	MemberAccess	op -> operands [ 1 ] . is_good_flag		3525239	1					
ANR	3525301	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3525302	PtrMemberAccess	op -> operands		3525239	0					
ANR	3525303	Identifier	op		3525239	0					
ANR	3525304	Identifier	operands		3525239	1					
ANR	3525305	PrimaryExpression	1		3525239	1					
ANR	3525306	Identifier	is_good_flag		3525239	1					
ANR	3525307	CompoundStatement		9:37:175:175	3525239	1					
ANR	3525308	ReturnStatement	return - 1 ;	1772:3:46237:46246	3525239	0	True				
ANR	3525309	UnaryOperationExpression	- 1		3525239	0					
ANR	3525310	UnaryOperator	-		3525239	0					
ANR	3525311	PrimaryExpression	1		3525239	1					
ANR	3525312	IfStatement	if ( op -> operands [ 1 ] . immediate == - 1 )		3525239	1					
ANR	3525313	Condition	op -> operands [ 1 ] . immediate == - 1	1774:6:46258:46288	3525239	0	True				
ANR	3525314	EqualityExpression	op -> operands [ 1 ] . immediate == - 1		3525239	0		==			
ANR	3525315	MemberAccess	op -> operands [ 1 ] . immediate		3525239	0					
ANR	3525316	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3525317	PtrMemberAccess	op -> operands		3525239	0					
ANR	3525318	Identifier	op		3525239	0					
ANR	3525319	Identifier	operands		3525239	1					
ANR	3525320	PrimaryExpression	1		3525239	1					
ANR	3525321	Identifier	immediate		3525239	1					
ANR	3525322	UnaryOperationExpression	- 1		3525239	1					
ANR	3525323	UnaryOperator	-		3525239	0					
ANR	3525324	PrimaryExpression	1		3525239	1					
ANR	3525325	CompoundStatement		12:39:234:234	3525239	1					
ANR	3525326	ReturnStatement	return - 1 ;	1775:3:46296:46305	3525239	0	True				
ANR	3525327	UnaryOperationExpression	- 1		3525239	0					
ANR	3525328	UnaryOperator	-		3525239	0					
ANR	3525329	PrimaryExpression	1		3525239	1					
ANR	3525330	ExpressionStatement	immediate = op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign	1777:2:46313:46373	3525239	2	True				
ANR	3525331	AssignmentExpression	immediate = op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign		3525239	0		=			
ANR	3525332	Identifier	immediate		3525239	0					
ANR	3525333	MultiplicativeExpression	op -> operands [ 1 ] . immediate * op -> operands [ 1 ] . sign		3525239	1		*			
ANR	3525334	MemberAccess	op -> operands [ 1 ] . immediate		3525239	0					
ANR	3525335	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3525336	PtrMemberAccess	op -> operands		3525239	0					
ANR	3525337	Identifier	op		3525239	0					
ANR	3525338	Identifier	operands		3525239	1					
ANR	3525339	PrimaryExpression	1		3525239	1					
ANR	3525340	Identifier	immediate		3525239	1					
ANR	3525341	MemberAccess	op -> operands [ 1 ] . sign		3525239	1					
ANR	3525342	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3525343	PtrMemberAccess	op -> operands		3525239	0					
ANR	3525344	Identifier	op		3525239	0					
ANR	3525345	Identifier	operands		3525239	1					
ANR	3525346	PrimaryExpression	1		3525239	1					
ANR	3525347	Identifier	sign		3525239	1					
ANR	3525348	IfStatement	if ( op -> operands [ 0 ] . type & OT_GPREG && ! ( op -> operands [ 0 ] . type & OT_MEMORY ) )		3525239	3					
ANR	3525349	Condition	op -> operands [ 0 ] . type & OT_GPREG && ! ( op -> operands [ 0 ] . type & OT_MEMORY )	1778:6:46381:46450	3525239	0	True				
ANR	3525350	AndExpression	op -> operands [ 0 ] . type & OT_GPREG && ! ( op -> operands [ 0 ] . type & OT_MEMORY )		3525239	0		&&			
ANR	3525351	BitAndExpression	op -> operands [ 0 ] . type & OT_GPREG		3525239	0		&			
ANR	3525352	MemberAccess	op -> operands [ 0 ] . type		3525239	0					
ANR	3525353	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3525354	PtrMemberAccess	op -> operands		3525239	0					
ANR	3525355	Identifier	op		3525239	0					
ANR	3525356	Identifier	operands		3525239	1					
ANR	3525357	PrimaryExpression	0		3525239	1					
ANR	3525358	Identifier	type		3525239	1					
ANR	3525359	Identifier	OT_GPREG		3525239	1					
ANR	3525360	UnaryOperationExpression	! ( op -> operands [ 0 ] . type & OT_MEMORY )		3525239	1					
ANR	3525361	UnaryOperator	!		3525239	0					
ANR	3525362	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3525239	1		&			
ANR	3525363	MemberAccess	op -> operands [ 0 ] . type		3525239	0					
ANR	3525364	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3525365	PtrMemberAccess	op -> operands		3525239	0					
ANR	3525366	Identifier	op		3525239	0					
ANR	3525367	Identifier	operands		3525239	1					
ANR	3525368	PrimaryExpression	0		3525239	1					
ANR	3525369	Identifier	type		3525239	1					
ANR	3525370	Identifier	OT_MEMORY		3525239	1					
ANR	3525371	CompoundStatement		16:78:396:396	3525239	1					
ANR	3525372	IfStatement	if ( a -> bits == 64 && ( ( op -> operands [ 0 ] . type & OT_QWORD ) | ( op -> operands [ 1 ] . type & OT_QWORD ) ) )		3525239	0					
ANR	3525373	Condition	a -> bits == 64 && ( ( op -> operands [ 0 ] . type & OT_QWORD ) | ( op -> operands [ 1 ] . type & OT_QWORD ) )	1779:7:46462:46549	3525239	0	True				
ANR	3525374	AndExpression	a -> bits == 64 && ( ( op -> operands [ 0 ] . type & OT_QWORD ) | ( op -> operands [ 1 ] . type & OT_QWORD ) )		3525239	0		&&			
ANR	3525375	EqualityExpression	a -> bits == 64		3525239	0		==			
ANR	3525376	PtrMemberAccess	a -> bits		3525239	0					
ANR	3525377	Identifier	a		3525239	0					
ANR	3525378	Identifier	bits		3525239	1					
ANR	3525379	PrimaryExpression	64		3525239	1					
ANR	3525380	InclusiveOrExpression	( op -> operands [ 0 ] . type & OT_QWORD ) | ( op -> operands [ 1 ] . type & OT_QWORD )		3525239	1		|			
ANR	3525381	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		3525239	0		&			
ANR	3525382	MemberAccess	op -> operands [ 0 ] . type		3525239	0					
ANR	3525383	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3525384	PtrMemberAccess	op -> operands		3525239	0					
ANR	3525385	Identifier	op		3525239	0					
ANR	3525386	Identifier	operands		3525239	1					
ANR	3525387	PrimaryExpression	0		3525239	1					
ANR	3525388	Identifier	type		3525239	1					
ANR	3525389	Identifier	OT_QWORD		3525239	1					
ANR	3525390	BitAndExpression	op -> operands [ 1 ] . type & OT_QWORD		3525239	1		&			
ANR	3525391	MemberAccess	op -> operands [ 1 ] . type		3525239	0					
ANR	3525392	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3525393	PtrMemberAccess	op -> operands		3525239	0					
ANR	3525394	Identifier	op		3525239	0					
ANR	3525395	Identifier	operands		3525239	1					
ANR	3525396	PrimaryExpression	1		3525239	1					
ANR	3525397	Identifier	type		3525239	1					
ANR	3525398	Identifier	OT_QWORD		3525239	1					
ANR	3525399	CompoundStatement		17:97:495:495	3525239	1					
ANR	3525400	IfStatement	if ( ! ( op -> operands [ 1 ] . type & OT_CONSTANT ) && op -> operands [ 1 ] . extended )		3525239	0					
ANR	3525401	Condition	! ( op -> operands [ 1 ] . type & OT_CONSTANT ) && op -> operands [ 1 ] . extended	1780:8:46562:46626	3525239	0	True				
ANR	3525402	AndExpression	! ( op -> operands [ 1 ] . type & OT_CONSTANT ) && op -> operands [ 1 ] . extended		3525239	0		&&			
ANR	3525403	UnaryOperationExpression	! ( op -> operands [ 1 ] . type & OT_CONSTANT )		3525239	0					
ANR	3525404	UnaryOperator	!		3525239	0					
ANR	3525405	BitAndExpression	op -> operands [ 1 ] . type & OT_CONSTANT		3525239	1		&			
ANR	3525406	MemberAccess	op -> operands [ 1 ] . type		3525239	0					
ANR	3525407	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3525408	PtrMemberAccess	op -> operands		3525239	0					
ANR	3525409	Identifier	op		3525239	0					
ANR	3525410	Identifier	operands		3525239	1					
ANR	3525411	PrimaryExpression	1		3525239	1					
ANR	3525412	Identifier	type		3525239	1					
ANR	3525413	Identifier	OT_CONSTANT		3525239	1					
ANR	3525414	MemberAccess	op -> operands [ 1 ] . extended		3525239	1					
ANR	3525415	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3525416	PtrMemberAccess	op -> operands		3525239	0					
ANR	3525417	Identifier	op		3525239	0					
ANR	3525418	Identifier	operands		3525239	1					
ANR	3525419	PrimaryExpression	1		3525239	1					
ANR	3525420	Identifier	extended		3525239	1					
ANR	3525421	CompoundStatement		18:75:572:572	3525239	1					
ANR	3525422	ExpressionStatement	data [ l ++ ] = 0x49	1781:5:46636:46652	3525239	0	True				
ANR	3525423	AssignmentExpression	data [ l ++ ] = 0x49		3525239	0		=			
ANR	3525424	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3525425	Identifier	data		3525239	0					
ANR	3525426	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3525427	Identifier	l		3525239	0					
ANR	3525428	IncDec	++		3525239	1					
ANR	3525429	PrimaryExpression	0x49		3525239	1					
ANR	3525430	ElseStatement	else		3525239	0					
ANR	3525431	CompoundStatement		20:11:608:608	3525239	0					
ANR	3525432	ExpressionStatement	data [ l ++ ] = 0x48	1783:5:46672:46688	3525239	0	True				
ANR	3525433	AssignmentExpression	data [ l ++ ] = 0x48		3525239	0		=			
ANR	3525434	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3525435	Identifier	data		3525239	0					
ANR	3525436	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3525437	Identifier	l		3525239	0					
ANR	3525438	IncDec	++		3525239	1					
ANR	3525439	PrimaryExpression	0x48		3525239	1					
ANR	3525440	ElseStatement	else		3525239	0					
ANR	3525441	IfStatement	if ( op -> operands [ 0 ] . extended )		3525239	0					
ANR	3525442	Condition	op -> operands [ 0 ] . extended	1785:14:46710:46733	3525239	0	True				
ANR	3525443	MemberAccess	op -> operands [ 0 ] . extended		3525239	0					
ANR	3525444	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3525445	PtrMemberAccess	op -> operands		3525239	0					
ANR	3525446	Identifier	op		3525239	0					
ANR	3525447	Identifier	operands		3525239	1					
ANR	3525448	PrimaryExpression	0		3525239	1					
ANR	3525449	Identifier	extended		3525239	1					
ANR	3525450	CompoundStatement		23:40:679:679	3525239	1					
ANR	3525451	ExpressionStatement	data [ l ++ ] = 0x41	1786:4:46742:46758	3525239	0	True				
ANR	3525452	AssignmentExpression	data [ l ++ ] = 0x41		3525239	0		=			
ANR	3525453	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3525454	Identifier	data		3525239	0					
ANR	3525455	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3525456	Identifier	l		3525239	0					
ANR	3525457	IncDec	++		3525239	1					
ANR	3525458	PrimaryExpression	0x41		3525239	1					
ANR	3525459	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		3525239	1					
ANR	3525460	Condition	op -> operands [ 0 ] . type & OT_WORD	1788:7:46772:46801	3525239	0	True				
ANR	3525461	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		3525239	0		&			
ANR	3525462	MemberAccess	op -> operands [ 0 ] . type		3525239	0					
ANR	3525463	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3525464	PtrMemberAccess	op -> operands		3525239	0					
ANR	3525465	Identifier	op		3525239	0					
ANR	3525466	Identifier	operands		3525239	1					
ANR	3525467	PrimaryExpression	0		3525239	1					
ANR	3525468	Identifier	type		3525239	1					
ANR	3525469	Identifier	OT_WORD		3525239	1					
ANR	3525470	CompoundStatement		26:39:747:747	3525239	1					
ANR	3525471	IfStatement	if ( a -> bits > 16 )		3525239	0					
ANR	3525472	Condition	a -> bits > 16	1789:8:46814:46825	3525239	0	True				
ANR	3525473	RelationalExpression	a -> bits > 16		3525239	0		>			
ANR	3525474	PtrMemberAccess	a -> bits		3525239	0					
ANR	3525475	Identifier	a		3525239	0					
ANR	3525476	Identifier	bits		3525239	1					
ANR	3525477	PrimaryExpression	16		3525239	1					
ANR	3525478	CompoundStatement		27:22:771:771	3525239	1					
ANR	3525479	ExpressionStatement	data [ l ++ ] = 0x66	1790:5:46835:46851	3525239	0	True				
ANR	3525480	AssignmentExpression	data [ l ++ ] = 0x66		3525239	0		=			
ANR	3525481	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3525482	Identifier	data		3525239	0					
ANR	3525483	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3525484	Identifier	l		3525239	0					
ANR	3525485	IncDec	++		3525239	1					
ANR	3525486	PrimaryExpression	0x66		3525239	1					
ANR	3525487	IfStatement	if ( op -> operands [ 0 ] . type & OT_BYTE )		3525239	2					
ANR	3525488	Condition	op -> operands [ 0 ] . type & OT_BYTE	1793:7:46871:46900	3525239	0	True				
ANR	3525489	BitAndExpression	op -> operands [ 0 ] . type & OT_BYTE		3525239	0		&			
ANR	3525490	MemberAccess	op -> operands [ 0 ] . type		3525239	0					
ANR	3525491	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3525492	PtrMemberAccess	op -> operands		3525239	0					
ANR	3525493	Identifier	op		3525239	0					
ANR	3525494	Identifier	operands		3525239	1					
ANR	3525495	PrimaryExpression	0		3525239	1					
ANR	3525496	Identifier	type		3525239	1					
ANR	3525497	Identifier	OT_BYTE		3525239	1					
ANR	3525498	CompoundStatement		31:39:846:846	3525239	1					
ANR	3525499	ExpressionStatement	data [ l ++ ] = 0xb0 | op -> operands [ 0 ] . reg	1794:4:46909:46947	3525239	0	True				
ANR	3525500	AssignmentExpression	data [ l ++ ] = 0xb0 | op -> operands [ 0 ] . reg		3525239	0		=			
ANR	3525501	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3525502	Identifier	data		3525239	0					
ANR	3525503	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3525504	Identifier	l		3525239	0					
ANR	3525505	IncDec	++		3525239	1					
ANR	3525506	InclusiveOrExpression	0xb0 | op -> operands [ 0 ] . reg		3525239	1		|			
ANR	3525507	PrimaryExpression	0xb0		3525239	0					
ANR	3525508	MemberAccess	op -> operands [ 0 ] . reg		3525239	1					
ANR	3525509	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3525510	PtrMemberAccess	op -> operands		3525239	0					
ANR	3525511	Identifier	op		3525239	0					
ANR	3525512	Identifier	operands		3525239	1					
ANR	3525513	PrimaryExpression	0		3525239	1					
ANR	3525514	Identifier	reg		3525239	1					
ANR	3525515	ExpressionStatement	data [ l ++ ] = immediate	1795:4:46953:46974	3525239	1	True				
ANR	3525516	AssignmentExpression	data [ l ++ ] = immediate		3525239	0		=			
ANR	3525517	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3525518	Identifier	data		3525239	0					
ANR	3525519	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3525520	Identifier	l		3525239	0					
ANR	3525521	IncDec	++		3525239	1					
ANR	3525522	Identifier	immediate		3525239	1					
ANR	3525523	ElseStatement	else		3525239	0					
ANR	3525524	CompoundStatement		34:10:929:929	3525239	0					
ANR	3525525	IfStatement	if ( a -> bits == 64 && ( ( op -> operands [ 0 ] . type & OT_QWORD ) | ( op -> operands [ 1 ] . type & OT_QWORD ) ) && immediate < UT32_MAX )		3525239	0					
ANR	3525526	Condition	a -> bits == 64 && ( ( op -> operands [ 0 ] . type & OT_QWORD ) | ( op -> operands [ 1 ] . type & OT_QWORD ) ) && immediate < UT32_MAX	1797:8:46996:47122	3525239	0	True				
ANR	3525527	AndExpression	a -> bits == 64 && ( ( op -> operands [ 0 ] . type & OT_QWORD ) | ( op -> operands [ 1 ] . type & OT_QWORD ) ) && immediate < UT32_MAX		3525239	0		&&			
ANR	3525528	EqualityExpression	a -> bits == 64		3525239	0		==			
ANR	3525529	PtrMemberAccess	a -> bits		3525239	0					
ANR	3525530	Identifier	a		3525239	0					
ANR	3525531	Identifier	bits		3525239	1					
ANR	3525532	PrimaryExpression	64		3525239	1					
ANR	3525533	AndExpression	( ( op -> operands [ 0 ] . type & OT_QWORD ) | ( op -> operands [ 1 ] . type & OT_QWORD ) ) && immediate < UT32_MAX		3525239	1		&&			
ANR	3525534	InclusiveOrExpression	( op -> operands [ 0 ] . type & OT_QWORD ) | ( op -> operands [ 1 ] . type & OT_QWORD )		3525239	0		|			
ANR	3525535	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		3525239	0		&			
ANR	3525536	MemberAccess	op -> operands [ 0 ] . type		3525239	0					
ANR	3525537	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3525538	PtrMemberAccess	op -> operands		3525239	0					
ANR	3525539	Identifier	op		3525239	0					
ANR	3525540	Identifier	operands		3525239	1					
ANR	3525541	PrimaryExpression	0		3525239	1					
ANR	3525542	Identifier	type		3525239	1					
ANR	3525543	Identifier	OT_QWORD		3525239	1					
ANR	3525544	BitAndExpression	op -> operands [ 1 ] . type & OT_QWORD		3525239	1		&			
ANR	3525545	MemberAccess	op -> operands [ 1 ] . type		3525239	0					
ANR	3525546	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3525547	PtrMemberAccess	op -> operands		3525239	0					
ANR	3525548	Identifier	op		3525239	0					
ANR	3525549	Identifier	operands		3525239	1					
ANR	3525550	PrimaryExpression	1		3525239	1					
ANR	3525551	Identifier	type		3525239	1					
ANR	3525552	Identifier	OT_QWORD		3525239	1					
ANR	3525553	RelationalExpression	immediate < UT32_MAX		3525239	1		<			
ANR	3525554	Identifier	immediate		3525239	0					
ANR	3525555	Identifier	UT32_MAX		3525239	1					
ANR	3525556	CompoundStatement		38:27:1068:1068	3525239	1					
ANR	3525557	ExpressionStatement	data [ l ++ ] = 0xc7	1801:6:47133:47149	3525239	0	True				
ANR	3525558	AssignmentExpression	data [ l ++ ] = 0xc7		3525239	0		=			
ANR	3525559	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3525560	Identifier	data		3525239	0					
ANR	3525561	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3525562	Identifier	l		3525239	0					
ANR	3525563	IncDec	++		3525239	1					
ANR	3525564	PrimaryExpression	0xc7		3525239	1					
ANR	3525565	ExpressionStatement	data [ l ++ ] = 0xc0 | op -> operands [ 0 ] . reg	1802:7:47158:47196	3525239	1	True				
ANR	3525566	AssignmentExpression	data [ l ++ ] = 0xc0 | op -> operands [ 0 ] . reg		3525239	0		=			
ANR	3525567	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3525568	Identifier	data		3525239	0					
ANR	3525569	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3525570	Identifier	l		3525239	0					
ANR	3525571	IncDec	++		3525239	1					
ANR	3525572	InclusiveOrExpression	0xc0 | op -> operands [ 0 ] . reg		3525239	1		|			
ANR	3525573	PrimaryExpression	0xc0		3525239	0					
ANR	3525574	MemberAccess	op -> operands [ 0 ] . reg		3525239	1					
ANR	3525575	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3525576	PtrMemberAccess	op -> operands		3525239	0					
ANR	3525577	Identifier	op		3525239	0					
ANR	3525578	Identifier	operands		3525239	1					
ANR	3525579	PrimaryExpression	0		3525239	1					
ANR	3525580	Identifier	reg		3525239	1					
ANR	3525581	ElseStatement	else		3525239	0					
ANR	3525582	CompoundStatement		41:11:1152:1152	3525239	0					
ANR	3525583	ExpressionStatement	data [ l ++ ] = 0xb8 | op -> operands [ 0 ] . reg	1804:5:47216:47254	3525239	0	True				
ANR	3525584	AssignmentExpression	data [ l ++ ] = 0xb8 | op -> operands [ 0 ] . reg		3525239	0		=			
ANR	3525585	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3525586	Identifier	data		3525239	0					
ANR	3525587	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3525588	Identifier	l		3525239	0					
ANR	3525589	IncDec	++		3525239	1					
ANR	3525590	InclusiveOrExpression	0xb8 | op -> operands [ 0 ] . reg		3525239	1		|			
ANR	3525591	PrimaryExpression	0xb8		3525239	0					
ANR	3525592	MemberAccess	op -> operands [ 0 ] . reg		3525239	1					
ANR	3525593	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3525594	PtrMemberAccess	op -> operands		3525239	0					
ANR	3525595	Identifier	op		3525239	0					
ANR	3525596	Identifier	operands		3525239	1					
ANR	3525597	PrimaryExpression	0		3525239	1					
ANR	3525598	Identifier	reg		3525239	1					
ANR	3525599	ExpressionStatement	data [ l ++ ] = immediate	1806:4:47266:47287	3525239	1	True				
ANR	3525600	AssignmentExpression	data [ l ++ ] = immediate		3525239	0		=			
ANR	3525601	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3525602	Identifier	data		3525239	0					
ANR	3525603	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3525604	Identifier	l		3525239	0					
ANR	3525605	IncDec	++		3525239	1					
ANR	3525606	Identifier	immediate		3525239	1					
ANR	3525607	ExpressionStatement	data [ l ++ ] = immediate >> 8	1807:4:47293:47319	3525239	2	True				
ANR	3525608	AssignmentExpression	data [ l ++ ] = immediate >> 8		3525239	0		=			
ANR	3525609	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3525610	Identifier	data		3525239	0					
ANR	3525611	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3525612	Identifier	l		3525239	0					
ANR	3525613	IncDec	++		3525239	1					
ANR	3525614	ShiftExpression	immediate >> 8		3525239	1		>>			
ANR	3525615	Identifier	immediate		3525239	0					
ANR	3525616	PrimaryExpression	8		3525239	1					
ANR	3525617	IfStatement	if ( ! ( op -> operands [ 0 ] . type & OT_WORD ) )		3525239	3					
ANR	3525618	Condition	! ( op -> operands [ 0 ] . type & OT_WORD )	1808:8:47329:47361	3525239	0	True				
ANR	3525619	UnaryOperationExpression	! ( op -> operands [ 0 ] . type & OT_WORD )		3525239	0					
ANR	3525620	UnaryOperator	!		3525239	0					
ANR	3525621	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		3525239	1		&			
ANR	3525622	MemberAccess	op -> operands [ 0 ] . type		3525239	0					
ANR	3525623	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3525624	PtrMemberAccess	op -> operands		3525239	0					
ANR	3525625	Identifier	op		3525239	0					
ANR	3525626	Identifier	operands		3525239	1					
ANR	3525627	PrimaryExpression	0		3525239	1					
ANR	3525628	Identifier	type		3525239	1					
ANR	3525629	Identifier	OT_WORD		3525239	1					
ANR	3525630	CompoundStatement		46:43:1307:1307	3525239	1					
ANR	3525631	ExpressionStatement	data [ l ++ ] = immediate >> 16	1809:5:47371:47398	3525239	0	True				
ANR	3525632	AssignmentExpression	data [ l ++ ] = immediate >> 16		3525239	0		=			
ANR	3525633	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3525634	Identifier	data		3525239	0					
ANR	3525635	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3525636	Identifier	l		3525239	0					
ANR	3525637	IncDec	++		3525239	1					
ANR	3525638	ShiftExpression	immediate >> 16		3525239	1		>>			
ANR	3525639	Identifier	immediate		3525239	0					
ANR	3525640	PrimaryExpression	16		3525239	1					
ANR	3525641	ExpressionStatement	data [ l ++ ] = immediate >> 24	1810:5:47405:47432	3525239	1	True				
ANR	3525642	AssignmentExpression	data [ l ++ ] = immediate >> 24		3525239	0		=			
ANR	3525643	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3525644	Identifier	data		3525239	0					
ANR	3525645	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3525646	Identifier	l		3525239	0					
ANR	3525647	IncDec	++		3525239	1					
ANR	3525648	ShiftExpression	immediate >> 24		3525239	1		>>			
ANR	3525649	Identifier	immediate		3525239	0					
ANR	3525650	PrimaryExpression	24		3525239	1					
ANR	3525651	IfStatement	if ( a -> bits == 64 && immediate > UT32_MAX )		3525239	4					
ANR	3525652	Condition	a -> bits == 64 && immediate > UT32_MAX	1812:8:47448:47484	3525239	0	True				
ANR	3525653	AndExpression	a -> bits == 64 && immediate > UT32_MAX		3525239	0		&&			
ANR	3525654	EqualityExpression	a -> bits == 64		3525239	0		==			
ANR	3525655	PtrMemberAccess	a -> bits		3525239	0					
ANR	3525656	Identifier	a		3525239	0					
ANR	3525657	Identifier	bits		3525239	1					
ANR	3525658	PrimaryExpression	64		3525239	1					
ANR	3525659	RelationalExpression	immediate > UT32_MAX		3525239	1		>			
ANR	3525660	Identifier	immediate		3525239	0					
ANR	3525661	Identifier	UT32_MAX		3525239	1					
ANR	3525662	CompoundStatement		50:47:1430:1430	3525239	1					
ANR	3525663	ExpressionStatement	data [ l ++ ] = immediate >> 32	1813:5:47494:47521	3525239	0	True				
ANR	3525664	AssignmentExpression	data [ l ++ ] = immediate >> 32		3525239	0		=			
ANR	3525665	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3525666	Identifier	data		3525239	0					
ANR	3525667	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3525668	Identifier	l		3525239	0					
ANR	3525669	IncDec	++		3525239	1					
ANR	3525670	ShiftExpression	immediate >> 32		3525239	1		>>			
ANR	3525671	Identifier	immediate		3525239	0					
ANR	3525672	PrimaryExpression	32		3525239	1					
ANR	3525673	ExpressionStatement	data [ l ++ ] = immediate >> 40	1814:5:47528:47555	3525239	1	True				
ANR	3525674	AssignmentExpression	data [ l ++ ] = immediate >> 40		3525239	0		=			
ANR	3525675	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3525676	Identifier	data		3525239	0					
ANR	3525677	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3525678	Identifier	l		3525239	0					
ANR	3525679	IncDec	++		3525239	1					
ANR	3525680	ShiftExpression	immediate >> 40		3525239	1		>>			
ANR	3525681	Identifier	immediate		3525239	0					
ANR	3525682	PrimaryExpression	40		3525239	1					
ANR	3525683	ExpressionStatement	data [ l ++ ] = immediate >> 48	1815:5:47562:47589	3525239	2	True				
ANR	3525684	AssignmentExpression	data [ l ++ ] = immediate >> 48		3525239	0		=			
ANR	3525685	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3525686	Identifier	data		3525239	0					
ANR	3525687	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3525688	Identifier	l		3525239	0					
ANR	3525689	IncDec	++		3525239	1					
ANR	3525690	ShiftExpression	immediate >> 48		3525239	1		>>			
ANR	3525691	Identifier	immediate		3525239	0					
ANR	3525692	PrimaryExpression	48		3525239	1					
ANR	3525693	ExpressionStatement	data [ l ++ ] = immediate >> 56	1816:5:47596:47623	3525239	3	True				
ANR	3525694	AssignmentExpression	data [ l ++ ] = immediate >> 56		3525239	0		=			
ANR	3525695	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3525696	Identifier	data		3525239	0					
ANR	3525697	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3525698	Identifier	l		3525239	0					
ANR	3525699	IncDec	++		3525239	1					
ANR	3525700	ShiftExpression	immediate >> 56		3525239	1		>>			
ANR	3525701	Identifier	immediate		3525239	0					
ANR	3525702	PrimaryExpression	56		3525239	1					
ANR	3525703	ElseStatement	else		3525239	0					
ANR	3525704	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3525239	0					
ANR	3525705	Condition	op -> operands [ 0 ] . type & OT_MEMORY	1819:13:47649:47680	3525239	0	True				
ANR	3525706	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3525239	0		&			
ANR	3525707	MemberAccess	op -> operands [ 0 ] . type		3525239	0					
ANR	3525708	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3525709	PtrMemberAccess	op -> operands		3525239	0					
ANR	3525710	Identifier	op		3525239	0					
ANR	3525711	Identifier	operands		3525239	1					
ANR	3525712	PrimaryExpression	0		3525239	1					
ANR	3525713	Identifier	type		3525239	1					
ANR	3525714	Identifier	OT_MEMORY		3525239	1					
ANR	3525715	CompoundStatement		201:3:5148:5156	3525239	1					
ANR	3525716	IfStatement	if ( ! op -> operands [ 0 ] . explicit_size )		3525239	0					
ANR	3525717	Condition	! op -> operands [ 0 ] . explicit_size	1820:7:47692:47721	3525239	0	True				
ANR	3525718	UnaryOperationExpression	! op -> operands [ 0 ] . explicit_size		3525239	0					
ANR	3525719	UnaryOperator	!		3525239	0					
ANR	3525720	MemberAccess	op -> operands [ 0 ] . explicit_size		3525239	1					
ANR	3525721	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3525722	PtrMemberAccess	op -> operands		3525239	0					
ANR	3525723	Identifier	op		3525239	0					
ANR	3525724	Identifier	operands		3525239	1					
ANR	3525725	PrimaryExpression	0		3525239	1					
ANR	3525726	Identifier	explicit_size		3525239	1					
ANR	3525727	CompoundStatement		58:39:1667:1667	3525239	1					
ANR	3525728	IfStatement	if ( op -> operands [ 0 ] . type & OT_GPREG )		3525239	0					
ANR	3525729	Condition	op -> operands [ 0 ] . type & OT_GPREG	1821:8:47734:47764	3525239	0	True				
ANR	3525730	BitAndExpression	op -> operands [ 0 ] . type & OT_GPREG		3525239	0		&			
ANR	3525731	MemberAccess	op -> operands [ 0 ] . type		3525239	0					
ANR	3525732	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3525733	PtrMemberAccess	op -> operands		3525239	0					
ANR	3525734	Identifier	op		3525239	0					
ANR	3525735	Identifier	operands		3525239	1					
ANR	3525736	PrimaryExpression	0		3525239	1					
ANR	3525737	Identifier	type		3525239	1					
ANR	3525738	Identifier	OT_GPREG		3525239	1					
ANR	3525739	CompoundStatement		59:41:1710:1710	3525239	1					
ANR	3525740	ExpressionStatement	( ( Opcode * ) op ) -> operands [ 0 ] . dest_size = op -> operands [ 0 ] . reg_size	1822:5:47774:47838	3525239	0	True				
ANR	3525741	AssignmentExpression	( ( Opcode * ) op ) -> operands [ 0 ] . dest_size = op -> operands [ 0 ] . reg_size		3525239	0		=			
ANR	3525742	MemberAccess	( ( Opcode * ) op ) -> operands [ 0 ] . dest_size		3525239	0					
ANR	3525743	ArrayIndexing	( ( Opcode * ) op ) -> operands [ 0 ]		3525239	0					
ANR	3525744	PtrMemberAccess	( ( Opcode * ) op ) -> operands		3525239	0					
ANR	3525745	CastExpression	( Opcode * ) op		3525239	0					
ANR	3525746	CastTarget	Opcode *		3525239	0					
ANR	3525747	Identifier	op		3525239	1					
ANR	3525748	Identifier	operands		3525239	1					
ANR	3525749	PrimaryExpression	0		3525239	1					
ANR	3525750	Identifier	dest_size		3525239	1					
ANR	3525751	MemberAccess	op -> operands [ 0 ] . reg_size		3525239	1					
ANR	3525752	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3525753	PtrMemberAccess	op -> operands		3525239	0					
ANR	3525754	Identifier	op		3525239	0					
ANR	3525755	Identifier	operands		3525239	1					
ANR	3525756	PrimaryExpression	0		3525239	1					
ANR	3525757	Identifier	reg_size		3525239	1					
ANR	3525758	ElseStatement	else		3525239	0					
ANR	3525759	CompoundStatement		61:11:1794:1794	3525239	0					
ANR	3525760	ReturnStatement	return - 1 ;	1824:5:47858:47867	3525239	0	True				
ANR	3525761	UnaryOperationExpression	- 1		3525239	0					
ANR	3525762	UnaryOperator	-		3525239	0					
ANR	3525763	PrimaryExpression	1		3525239	1					
ANR	3525764	IdentifierDeclStatement	int dest_bits = 8 * ( ( op -> operands [ 0 ] . dest_size & ALL_SIZE ) >> OPSIZE_SHIFT ) ;	1828:3:47884:47960	3525239	1	True				
ANR	3525765	IdentifierDecl	dest_bits = 8 * ( ( op -> operands [ 0 ] . dest_size & ALL_SIZE ) >> OPSIZE_SHIFT )		3525239	0					
ANR	3525766	IdentifierDeclType	int		3525239	0					
ANR	3525767	Identifier	dest_bits		3525239	1					
ANR	3525768	AssignmentExpression	dest_bits = 8 * ( ( op -> operands [ 0 ] . dest_size & ALL_SIZE ) >> OPSIZE_SHIFT )		3525239	2		=			
ANR	3525769	Identifier	dest_bits		3525239	0					
ANR	3525770	MultiplicativeExpression	8 * ( ( op -> operands [ 0 ] . dest_size & ALL_SIZE ) >> OPSIZE_SHIFT )		3525239	1		*			
ANR	3525771	PrimaryExpression	8		3525239	0					
ANR	3525772	ShiftExpression	( op -> operands [ 0 ] . dest_size & ALL_SIZE ) >> OPSIZE_SHIFT		3525239	1		>>			
ANR	3525773	BitAndExpression	op -> operands [ 0 ] . dest_size & ALL_SIZE		3525239	0		&			
ANR	3525774	MemberAccess	op -> operands [ 0 ] . dest_size		3525239	0					
ANR	3525775	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3525776	PtrMemberAccess	op -> operands		3525239	0					
ANR	3525777	Identifier	op		3525239	0					
ANR	3525778	Identifier	operands		3525239	1					
ANR	3525779	PrimaryExpression	0		3525239	1					
ANR	3525780	Identifier	dest_size		3525239	1					
ANR	3525781	Identifier	ALL_SIZE		3525239	1					
ANR	3525782	Identifier	OPSIZE_SHIFT		3525239	1					
ANR	3525783	IdentifierDeclStatement	int reg_bits = 8 * ( ( op -> operands [ 0 ] . reg_size & ALL_SIZE ) >> OPSIZE_SHIFT ) ;	1829:3:47965:48039	3525239	2	True				
ANR	3525784	IdentifierDecl	reg_bits = 8 * ( ( op -> operands [ 0 ] . reg_size & ALL_SIZE ) >> OPSIZE_SHIFT )		3525239	0					
ANR	3525785	IdentifierDeclType	int		3525239	0					
ANR	3525786	Identifier	reg_bits		3525239	1					
ANR	3525787	AssignmentExpression	reg_bits = 8 * ( ( op -> operands [ 0 ] . reg_size & ALL_SIZE ) >> OPSIZE_SHIFT )		3525239	2		=			
ANR	3525788	Identifier	reg_bits		3525239	0					
ANR	3525789	MultiplicativeExpression	8 * ( ( op -> operands [ 0 ] . reg_size & ALL_SIZE ) >> OPSIZE_SHIFT )		3525239	1		*			
ANR	3525790	PrimaryExpression	8		3525239	0					
ANR	3525791	ShiftExpression	( op -> operands [ 0 ] . reg_size & ALL_SIZE ) >> OPSIZE_SHIFT		3525239	1		>>			
ANR	3525792	BitAndExpression	op -> operands [ 0 ] . reg_size & ALL_SIZE		3525239	0		&			
ANR	3525793	MemberAccess	op -> operands [ 0 ] . reg_size		3525239	0					
ANR	3525794	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3525795	PtrMemberAccess	op -> operands		3525239	0					
ANR	3525796	Identifier	op		3525239	0					
ANR	3525797	Identifier	operands		3525239	1					
ANR	3525798	PrimaryExpression	0		3525239	1					
ANR	3525799	Identifier	reg_size		3525239	1					
ANR	3525800	Identifier	ALL_SIZE		3525239	1					
ANR	3525801	Identifier	OPSIZE_SHIFT		3525239	1					
ANR	3525802	IdentifierDeclStatement	int offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign ;	1830:3:48044:48109	3525239	3	True				
ANR	3525803	IdentifierDecl	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		3525239	0					
ANR	3525804	IdentifierDeclType	int		3525239	0					
ANR	3525805	Identifier	offset		3525239	1					
ANR	3525806	AssignmentExpression	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		3525239	2		=			
ANR	3525807	Identifier	offset		3525239	0					
ANR	3525808	MultiplicativeExpression	op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		3525239	1		*			
ANR	3525809	MemberAccess	op -> operands [ 0 ] . offset		3525239	0					
ANR	3525810	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3525811	PtrMemberAccess	op -> operands		3525239	0					
ANR	3525812	Identifier	op		3525239	0					
ANR	3525813	Identifier	operands		3525239	1					
ANR	3525814	PrimaryExpression	0		3525239	1					
ANR	3525815	Identifier	offset		3525239	1					
ANR	3525816	MemberAccess	op -> operands [ 0 ] . offset_sign		3525239	1					
ANR	3525817	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3525818	PtrMemberAccess	op -> operands		3525239	0					
ANR	3525819	Identifier	op		3525239	0					
ANR	3525820	Identifier	operands		3525239	1					
ANR	3525821	PrimaryExpression	0		3525239	1					
ANR	3525822	Identifier	offset_sign		3525239	1					
ANR	3525823	IdentifierDeclStatement	bool use_aso = false ;	1833:3:48146:48166	3525239	4	True				
ANR	3525824	IdentifierDecl	use_aso = false		3525239	0					
ANR	3525825	IdentifierDeclType	bool		3525239	0					
ANR	3525826	Identifier	use_aso		3525239	1					
ANR	3525827	AssignmentExpression	use_aso = false		3525239	2		=			
ANR	3525828	Identifier	false		3525239	0					
ANR	3525829	Identifier	false		3525239	1					
ANR	3525830	IfStatement	if ( reg_bits < a -> bits )		3525239	5					
ANR	3525831	Condition	reg_bits < a -> bits	1834:7:48175:48192	3525239	0	True				
ANR	3525832	RelationalExpression	reg_bits < a -> bits		3525239	0		<			
ANR	3525833	Identifier	reg_bits		3525239	0					
ANR	3525834	PtrMemberAccess	a -> bits		3525239	1					
ANR	3525835	Identifier	a		3525239	0					
ANR	3525836	Identifier	bits		3525239	1					
ANR	3525837	CompoundStatement		72:27:2138:2138	3525239	1					
ANR	3525838	ExpressionStatement	use_aso = true	1835:4:48201:48215	3525239	0	True				
ANR	3525839	AssignmentExpression	use_aso = true		3525239	0		=			
ANR	3525840	Identifier	use_aso		3525239	0					
ANR	3525841	Identifier	true		3525239	1					
ANR	3525842	IdentifierDeclStatement	bool use_oso = false ;	1839:3:48255:48275	3525239	6	True				
ANR	3525843	IdentifierDecl	use_oso = false		3525239	0					
ANR	3525844	IdentifierDeclType	bool		3525239	0					
ANR	3525845	Identifier	use_oso		3525239	1					
ANR	3525846	AssignmentExpression	use_oso = false		3525239	2		=			
ANR	3525847	Identifier	false		3525239	0					
ANR	3525848	Identifier	false		3525239	1					
ANR	3525849	IfStatement	if ( dest_bits == 16 )		3525239	7					
ANR	3525850	Condition	dest_bits == 16	1840:7:48284:48298	3525239	0	True				
ANR	3525851	EqualityExpression	dest_bits == 16		3525239	0		==			
ANR	3525852	Identifier	dest_bits		3525239	0					
ANR	3525853	PrimaryExpression	16		3525239	1					
ANR	3525854	CompoundStatement		78:24:2244:2244	3525239	1					
ANR	3525855	ExpressionStatement	use_oso = true	1841:4:48307:48321	3525239	0	True				
ANR	3525856	AssignmentExpression	use_oso = true		3525239	0		=			
ANR	3525857	Identifier	use_oso		3525239	0					
ANR	3525858	Identifier	true		3525239	1					
ANR	3525859	IdentifierDeclStatement	bool rip_rel = op -> operands [ 0 ] . regs [ 0 ] == X86R_RIP ;	1844:3:48332:48382	3525239	8	True				
ANR	3525860	IdentifierDecl	rip_rel = op -> operands [ 0 ] . regs [ 0 ] == X86R_RIP		3525239	0					
ANR	3525861	IdentifierDeclType	bool		3525239	0					
ANR	3525862	Identifier	rip_rel		3525239	1					
ANR	3525863	AssignmentExpression	rip_rel = op -> operands [ 0 ] . regs [ 0 ] == X86R_RIP		3525239	2		=			
ANR	3525864	Identifier	rip_rel		3525239	0					
ANR	3525865	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_RIP		3525239	1		==			
ANR	3525866	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3525239	0					
ANR	3525867	MemberAccess	op -> operands [ 0 ] . regs		3525239	0					
ANR	3525868	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3525869	PtrMemberAccess	op -> operands		3525239	0					
ANR	3525870	Identifier	op		3525239	0					
ANR	3525871	Identifier	operands		3525239	1					
ANR	3525872	PrimaryExpression	0		3525239	1					
ANR	3525873	Identifier	regs		3525239	1					
ANR	3525874	PrimaryExpression	0		3525239	1					
ANR	3525875	Identifier	X86R_RIP		3525239	1					
ANR	3525876	IdentifierDeclStatement	int rex = 1 << 6 ;	1847:3:48404:48420	3525239	9	True				
ANR	3525877	IdentifierDecl	rex = 1 << 6		3525239	0					
ANR	3525878	IdentifierDeclType	int		3525239	0					
ANR	3525879	Identifier	rex		3525239	1					
ANR	3525880	AssignmentExpression	rex = 1 << 6		3525239	2		=			
ANR	3525881	Identifier	rex		3525239	0					
ANR	3525882	ShiftExpression	1 << 6		3525239	1		<<			
ANR	3525883	PrimaryExpression	1		3525239	0					
ANR	3525884	PrimaryExpression	6		3525239	1					
ANR	3525885	IdentifierDeclStatement	bool use_rex = false ;	1848:3:48425:48445	3525239	10	True				
ANR	3525886	IdentifierDecl	use_rex = false		3525239	0					
ANR	3525887	IdentifierDeclType	bool		3525239	0					
ANR	3525888	Identifier	use_rex		3525239	1					
ANR	3525889	AssignmentExpression	use_rex = false		3525239	2		=			
ANR	3525890	Identifier	false		3525239	0					
ANR	3525891	Identifier	false		3525239	1					
ANR	3525892	IfStatement	if ( dest_bits == 64 )		3525239	11					
ANR	3525893	Condition	dest_bits == 64	1849:7:48454:48468	3525239	0	True				
ANR	3525894	EqualityExpression	dest_bits == 64		3525239	0		==			
ANR	3525895	Identifier	dest_bits		3525239	0					
ANR	3525896	PrimaryExpression	64		3525239	1					
ANR	3525897	CompoundStatement		87:24:2414:2414	3525239	1					
ANR	3525898	ExpressionStatement	use_rex = true	1850:4:48489:48503	3525239	0	True				
ANR	3525899	AssignmentExpression	use_rex = true		3525239	0		=			
ANR	3525900	Identifier	use_rex		3525239	0					
ANR	3525901	Identifier	true		3525239	1					
ANR	3525902	ExpressionStatement	rex |= 1 << 3	1851:4:48509:48522	3525239	1	True				
ANR	3525903	AssignmentExpression	rex |= 1 << 3		3525239	0		|=			
ANR	3525904	Identifier	rex		3525239	0					
ANR	3525905	ShiftExpression	1 << 3		3525239	1		<<			
ANR	3525906	PrimaryExpression	1		3525239	0					
ANR	3525907	PrimaryExpression	3		3525239	1					
ANR	3525908	IfStatement	if ( op -> operands [ 0 ] . extended )		3525239	12					
ANR	3525909	Condition	op -> operands [ 0 ] . extended	1853:7:48536:48559	3525239	0	True				
ANR	3525910	MemberAccess	op -> operands [ 0 ] . extended		3525239	0					
ANR	3525911	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3525912	PtrMemberAccess	op -> operands		3525239	0					
ANR	3525913	Identifier	op		3525239	0					
ANR	3525914	Identifier	operands		3525239	1					
ANR	3525915	PrimaryExpression	0		3525239	1					
ANR	3525916	Identifier	extended		3525239	1					
ANR	3525917	CompoundStatement		91:33:2505:2505	3525239	1					
ANR	3525918	ExpressionStatement	use_rex = true	1854:4:48579:48593	3525239	0	True				
ANR	3525919	AssignmentExpression	use_rex = true		3525239	0		=			
ANR	3525920	Identifier	use_rex		3525239	0					
ANR	3525921	Identifier	true		3525239	1					
ANR	3525922	ExpressionStatement	rex |= 1	1855:4:48599:48607	3525239	1	True				
ANR	3525923	AssignmentExpression	rex |= 1		3525239	0		|=			
ANR	3525924	Identifier	rex		3525239	0					
ANR	3525925	PrimaryExpression	1		3525239	1					
ANR	3525926	IdentifierDeclStatement	int opcode ;	1859:3:48640:48650	3525239	13	True				
ANR	3525927	IdentifierDecl	opcode		3525239	0					
ANR	3525928	IdentifierDeclType	int		3525239	0					
ANR	3525929	Identifier	opcode		3525239	1					
ANR	3525930	IfStatement	if ( dest_bits == 8 )		3525239	14					
ANR	3525931	Condition	dest_bits == 8	1860:7:48659:48672	3525239	0	True				
ANR	3525932	EqualityExpression	dest_bits == 8		3525239	0		==			
ANR	3525933	Identifier	dest_bits		3525239	0					
ANR	3525934	PrimaryExpression	8		3525239	1					
ANR	3525935	CompoundStatement		98:23:2618:2618	3525239	1					
ANR	3525936	ExpressionStatement	opcode = 0xc6	1861:4:48681:48694	3525239	0	True				
ANR	3525937	AssignmentExpression	opcode = 0xc6		3525239	0		=			
ANR	3525938	Identifier	opcode		3525239	0					
ANR	3525939	PrimaryExpression	0xc6		3525239	1					
ANR	3525940	ElseStatement	else		3525239	0					
ANR	3525941	CompoundStatement		100:10:2649:2649	3525239	0					
ANR	3525942	ExpressionStatement	opcode = 0xc7	1863:4:48712:48725	3525239	0	True				
ANR	3525943	AssignmentExpression	opcode = 0xc7		3525239	0		=			
ANR	3525944	Identifier	opcode		3525239	0					
ANR	3525945	PrimaryExpression	0xc7		3525239	1					
ANR	3525946	IdentifierDeclStatement	int modrm = 0 ;	1867:3:48765:48778	3525239	15	True				
ANR	3525947	IdentifierDecl	modrm = 0		3525239	0					
ANR	3525948	IdentifierDeclType	int		3525239	0					
ANR	3525949	Identifier	modrm		3525239	1					
ANR	3525950	AssignmentExpression	modrm = 0		3525239	2		=			
ANR	3525951	Identifier	modrm		3525239	0					
ANR	3525952	PrimaryExpression	0		3525239	1					
ANR	3525953	IdentifierDeclStatement	int mod ;	1868:3:48783:48790	3525239	16	True				
ANR	3525954	IdentifierDecl	mod		3525239	0					
ANR	3525955	IdentifierDeclType	int		3525239	0					
ANR	3525956	Identifier	mod		3525239	1					
ANR	3525957	IdentifierDeclStatement	int reg = 0 ;	1869:3:48795:48806	3525239	17	True				
ANR	3525958	IdentifierDecl	reg = 0		3525239	0					
ANR	3525959	IdentifierDeclType	int		3525239	0					
ANR	3525960	Identifier	reg		3525239	1					
ANR	3525961	AssignmentExpression	reg = 0		3525239	2		=			
ANR	3525962	Identifier	reg		3525239	0					
ANR	3525963	PrimaryExpression	0		3525239	1					
ANR	3525964	IdentifierDeclStatement	int rm ;	1870:3:48811:48817	3525239	18	True				
ANR	3525965	IdentifierDecl	rm		3525239	0					
ANR	3525966	IdentifierDeclType	int		3525239	0					
ANR	3525967	Identifier	rm		3525239	1					
ANR	3525968	IdentifierDeclStatement	bool use_sib = false ;	1871:3:48822:48842	3525239	19	True				
ANR	3525969	IdentifierDecl	use_sib = false		3525239	0					
ANR	3525970	IdentifierDeclType	bool		3525239	0					
ANR	3525971	Identifier	use_sib		3525239	1					
ANR	3525972	AssignmentExpression	use_sib = false		3525239	2		=			
ANR	3525973	Identifier	false		3525239	0					
ANR	3525974	Identifier	false		3525239	1					
ANR	3525975	IdentifierDeclStatement	int sib ;	1872:3:48847:48854	3525239	20	True				
ANR	3525976	IdentifierDecl	sib		3525239	0					
ANR	3525977	IdentifierDeclType	int		3525239	0					
ANR	3525978	Identifier	sib		3525239	1					
ANR	3525979	IfStatement	if ( offset == 0 )		3525239	21					
ANR	3525980	Condition	offset == 0	1874:7:48872:48882	3525239	0	True				
ANR	3525981	EqualityExpression	offset == 0		3525239	0		==			
ANR	3525982	Identifier	offset		3525239	0					
ANR	3525983	PrimaryExpression	0		3525239	1					
ANR	3525984	CompoundStatement		112:20:2828:2828	3525239	1					
ANR	3525985	ExpressionStatement	mod = 0	1875:4:48891:48898	3525239	0	True				
ANR	3525986	AssignmentExpression	mod = 0		3525239	0		=			
ANR	3525987	Identifier	mod		3525239	0					
ANR	3525988	PrimaryExpression	0		3525239	1					
ANR	3525989	ElseStatement	else		3525239	0					
ANR	3525990	IfStatement	if ( offset < 128 && offset > - 129 )		3525239	0					
ANR	3525991	Condition	offset < 128 && offset > - 129	1876:14:48914:48942	3525239	0	True				
ANR	3525992	AndExpression	offset < 128 && offset > - 129		3525239	0		&&			
ANR	3525993	RelationalExpression	offset < 128		3525239	0		<			
ANR	3525994	Identifier	offset		3525239	0					
ANR	3525995	PrimaryExpression	128		3525239	1					
ANR	3525996	RelationalExpression	offset > - 129		3525239	1		>			
ANR	3525997	Identifier	offset		3525239	0					
ANR	3525998	UnaryOperationExpression	- 129		3525239	1					
ANR	3525999	UnaryOperator	-		3525239	0					
ANR	3526000	PrimaryExpression	129		3525239	1					
ANR	3526001	CompoundStatement		114:45:2888:2888	3525239	1					
ANR	3526002	ExpressionStatement	mod = 1	1877:4:48951:48958	3525239	0	True				
ANR	3526003	AssignmentExpression	mod = 1		3525239	0		=			
ANR	3526004	Identifier	mod		3525239	0					
ANR	3526005	PrimaryExpression	1		3525239	1					
ANR	3526006	ElseStatement	else		3525239	0					
ANR	3526007	CompoundStatement		116:10:2913:2913	3525239	0					
ANR	3526008	ExpressionStatement	mod = 2	1879:4:48976:48983	3525239	0	True				
ANR	3526009	AssignmentExpression	mod = 2		3525239	0		=			
ANR	3526010	Identifier	mod		3525239	0					
ANR	3526011	PrimaryExpression	2		3525239	1					
ANR	3526012	IfStatement	if ( reg_bits == 16 )		3525239	22					
ANR	3526013	Condition	reg_bits == 16	1882:7:48998:49011	3525239	0	True				
ANR	3526014	EqualityExpression	reg_bits == 16		3525239	0		==			
ANR	3526015	Identifier	reg_bits		3525239	0					
ANR	3526016	PrimaryExpression	16		3525239	1					
ANR	3526017	CompoundStatement		120:23:2957:2957	3525239	1					
ANR	3526018	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == X86R_SI )		3525239	0					
ANR	3526019	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == X86R_SI	1883:8:49024:49095	3525239	0	True				
ANR	3526020	AndExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == X86R_SI		3525239	0		&&			
ANR	3526021	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX		3525239	0		==			
ANR	3526022	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3525239	0					
ANR	3526023	MemberAccess	op -> operands [ 0 ] . regs		3525239	0					
ANR	3526024	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3526025	PtrMemberAccess	op -> operands		3525239	0					
ANR	3526026	Identifier	op		3525239	0					
ANR	3526027	Identifier	operands		3525239	1					
ANR	3526028	PrimaryExpression	0		3525239	1					
ANR	3526029	Identifier	regs		3525239	1					
ANR	3526030	PrimaryExpression	0		3525239	1					
ANR	3526031	Identifier	X86R_BX		3525239	1					
ANR	3526032	EqualityExpression	op -> operands [ 0 ] . regs [ 1 ] == X86R_SI		3525239	1		==			
ANR	3526033	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		3525239	0					
ANR	3526034	MemberAccess	op -> operands [ 0 ] . regs		3525239	0					
ANR	3526035	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3526036	PtrMemberAccess	op -> operands		3525239	0					
ANR	3526037	Identifier	op		3525239	0					
ANR	3526038	Identifier	operands		3525239	1					
ANR	3526039	PrimaryExpression	0		3525239	1					
ANR	3526040	Identifier	regs		3525239	1					
ANR	3526041	PrimaryExpression	1		3525239	1					
ANR	3526042	Identifier	X86R_SI		3525239	1					
ANR	3526043	CompoundStatement		121:82:3041:3041	3525239	1					
ANR	3526044	ExpressionStatement	rm = B0000	1884:5:49105:49115	3525239	0	True				
ANR	3526045	AssignmentExpression	rm = B0000		3525239	0		=			
ANR	3526046	Identifier	rm		3525239	0					
ANR	3526047	Identifier	B0000		3525239	1					
ANR	3526048	ElseStatement	else		3525239	0					
ANR	3526049	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == X86R_DI )		3525239	0					
ANR	3526050	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == X86R_DI	1885:15:49132:49203	3525239	0	True				
ANR	3526051	AndExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == X86R_DI		3525239	0		&&			
ANR	3526052	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX		3525239	0		==			
ANR	3526053	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3525239	0					
ANR	3526054	MemberAccess	op -> operands [ 0 ] . regs		3525239	0					
ANR	3526055	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3526056	PtrMemberAccess	op -> operands		3525239	0					
ANR	3526057	Identifier	op		3525239	0					
ANR	3526058	Identifier	operands		3525239	1					
ANR	3526059	PrimaryExpression	0		3525239	1					
ANR	3526060	Identifier	regs		3525239	1					
ANR	3526061	PrimaryExpression	0		3525239	1					
ANR	3526062	Identifier	X86R_BX		3525239	1					
ANR	3526063	EqualityExpression	op -> operands [ 0 ] . regs [ 1 ] == X86R_DI		3525239	1		==			
ANR	3526064	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		3525239	0					
ANR	3526065	MemberAccess	op -> operands [ 0 ] . regs		3525239	0					
ANR	3526066	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3526067	PtrMemberAccess	op -> operands		3525239	0					
ANR	3526068	Identifier	op		3525239	0					
ANR	3526069	Identifier	operands		3525239	1					
ANR	3526070	PrimaryExpression	0		3525239	1					
ANR	3526071	Identifier	regs		3525239	1					
ANR	3526072	PrimaryExpression	1		3525239	1					
ANR	3526073	Identifier	X86R_DI		3525239	1					
ANR	3526074	CompoundStatement		123:89:3149:3149	3525239	1					
ANR	3526075	ExpressionStatement	rm = B0001	1886:5:49213:49223	3525239	0	True				
ANR	3526076	AssignmentExpression	rm = B0001		3525239	0		=			
ANR	3526077	Identifier	rm		3525239	0					
ANR	3526078	Identifier	B0001		3525239	1					
ANR	3526079	ElseStatement	else		3525239	0					
ANR	3526080	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_BP && op -> operands [ 0 ] . regs [ 1 ] == X86R_SI )		3525239	0					
ANR	3526081	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_BP && op -> operands [ 0 ] . regs [ 1 ] == X86R_SI	1887:15:49240:49311	3525239	0	True				
ANR	3526082	AndExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BP && op -> operands [ 0 ] . regs [ 1 ] == X86R_SI		3525239	0		&&			
ANR	3526083	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BP		3525239	0		==			
ANR	3526084	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3525239	0					
ANR	3526085	MemberAccess	op -> operands [ 0 ] . regs		3525239	0					
ANR	3526086	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3526087	PtrMemberAccess	op -> operands		3525239	0					
ANR	3526088	Identifier	op		3525239	0					
ANR	3526089	Identifier	operands		3525239	1					
ANR	3526090	PrimaryExpression	0		3525239	1					
ANR	3526091	Identifier	regs		3525239	1					
ANR	3526092	PrimaryExpression	0		3525239	1					
ANR	3526093	Identifier	X86R_BP		3525239	1					
ANR	3526094	EqualityExpression	op -> operands [ 0 ] . regs [ 1 ] == X86R_SI		3525239	1		==			
ANR	3526095	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		3525239	0					
ANR	3526096	MemberAccess	op -> operands [ 0 ] . regs		3525239	0					
ANR	3526097	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3526098	PtrMemberAccess	op -> operands		3525239	0					
ANR	3526099	Identifier	op		3525239	0					
ANR	3526100	Identifier	operands		3525239	1					
ANR	3526101	PrimaryExpression	0		3525239	1					
ANR	3526102	Identifier	regs		3525239	1					
ANR	3526103	PrimaryExpression	1		3525239	1					
ANR	3526104	Identifier	X86R_SI		3525239	1					
ANR	3526105	CompoundStatement		125:89:3257:3257	3525239	1					
ANR	3526106	ExpressionStatement	rm = B0010	1888:5:49321:49331	3525239	0	True				
ANR	3526107	AssignmentExpression	rm = B0010		3525239	0		=			
ANR	3526108	Identifier	rm		3525239	0					
ANR	3526109	Identifier	B0010		3525239	1					
ANR	3526110	ElseStatement	else		3525239	0					
ANR	3526111	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_BP && op -> operands [ 0 ] . regs [ 1 ] == X86R_DI )		3525239	0					
ANR	3526112	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_BP && op -> operands [ 0 ] . regs [ 1 ] == X86R_DI	1889:15:49348:49419	3525239	0	True				
ANR	3526113	AndExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BP && op -> operands [ 0 ] . regs [ 1 ] == X86R_DI		3525239	0		&&			
ANR	3526114	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BP		3525239	0		==			
ANR	3526115	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3525239	0					
ANR	3526116	MemberAccess	op -> operands [ 0 ] . regs		3525239	0					
ANR	3526117	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3526118	PtrMemberAccess	op -> operands		3525239	0					
ANR	3526119	Identifier	op		3525239	0					
ANR	3526120	Identifier	operands		3525239	1					
ANR	3526121	PrimaryExpression	0		3525239	1					
ANR	3526122	Identifier	regs		3525239	1					
ANR	3526123	PrimaryExpression	0		3525239	1					
ANR	3526124	Identifier	X86R_BP		3525239	1					
ANR	3526125	EqualityExpression	op -> operands [ 0 ] . regs [ 1 ] == X86R_DI		3525239	1		==			
ANR	3526126	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		3525239	0					
ANR	3526127	MemberAccess	op -> operands [ 0 ] . regs		3525239	0					
ANR	3526128	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3526129	PtrMemberAccess	op -> operands		3525239	0					
ANR	3526130	Identifier	op		3525239	0					
ANR	3526131	Identifier	operands		3525239	1					
ANR	3526132	PrimaryExpression	0		3525239	1					
ANR	3526133	Identifier	regs		3525239	1					
ANR	3526134	PrimaryExpression	1		3525239	1					
ANR	3526135	Identifier	X86R_DI		3525239	1					
ANR	3526136	CompoundStatement		127:89:3365:3365	3525239	1					
ANR	3526137	ExpressionStatement	rm = B0011	1890:5:49429:49439	3525239	0	True				
ANR	3526138	AssignmentExpression	rm = B0011		3525239	0		=			
ANR	3526139	Identifier	rm		3525239	0					
ANR	3526140	Identifier	B0011		3525239	1					
ANR	3526141	ElseStatement	else		3525239	0					
ANR	3526142	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_SI && op -> operands [ 0 ] . regs [ 1 ] == - 1 )		3525239	0					
ANR	3526143	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_SI && op -> operands [ 0 ] . regs [ 1 ] == - 1	1891:15:49456:49522	3525239	0	True				
ANR	3526144	AndExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_SI && op -> operands [ 0 ] . regs [ 1 ] == - 1		3525239	0		&&			
ANR	3526145	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_SI		3525239	0		==			
ANR	3526146	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3525239	0					
ANR	3526147	MemberAccess	op -> operands [ 0 ] . regs		3525239	0					
ANR	3526148	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3526149	PtrMemberAccess	op -> operands		3525239	0					
ANR	3526150	Identifier	op		3525239	0					
ANR	3526151	Identifier	operands		3525239	1					
ANR	3526152	PrimaryExpression	0		3525239	1					
ANR	3526153	Identifier	regs		3525239	1					
ANR	3526154	PrimaryExpression	0		3525239	1					
ANR	3526155	Identifier	X86R_SI		3525239	1					
ANR	3526156	EqualityExpression	op -> operands [ 0 ] . regs [ 1 ] == - 1		3525239	1		==			
ANR	3526157	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		3525239	0					
ANR	3526158	MemberAccess	op -> operands [ 0 ] . regs		3525239	0					
ANR	3526159	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3526160	PtrMemberAccess	op -> operands		3525239	0					
ANR	3526161	Identifier	op		3525239	0					
ANR	3526162	Identifier	operands		3525239	1					
ANR	3526163	PrimaryExpression	0		3525239	1					
ANR	3526164	Identifier	regs		3525239	1					
ANR	3526165	PrimaryExpression	1		3525239	1					
ANR	3526166	UnaryOperationExpression	- 1		3525239	1					
ANR	3526167	UnaryOperator	-		3525239	0					
ANR	3526168	PrimaryExpression	1		3525239	1					
ANR	3526169	CompoundStatement		129:84:3468:3468	3525239	1					
ANR	3526170	ExpressionStatement	rm = B0100	1892:5:49532:49542	3525239	0	True				
ANR	3526171	AssignmentExpression	rm = B0100		3525239	0		=			
ANR	3526172	Identifier	rm		3525239	0					
ANR	3526173	Identifier	B0100		3525239	1					
ANR	3526174	ElseStatement	else		3525239	0					
ANR	3526175	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_DI && op -> operands [ 0 ] . regs [ 1 ] == - 1 )		3525239	0					
ANR	3526176	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_DI && op -> operands [ 0 ] . regs [ 1 ] == - 1	1893:15:49559:49625	3525239	0	True				
ANR	3526177	AndExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_DI && op -> operands [ 0 ] . regs [ 1 ] == - 1		3525239	0		&&			
ANR	3526178	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_DI		3525239	0		==			
ANR	3526179	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3525239	0					
ANR	3526180	MemberAccess	op -> operands [ 0 ] . regs		3525239	0					
ANR	3526181	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3526182	PtrMemberAccess	op -> operands		3525239	0					
ANR	3526183	Identifier	op		3525239	0					
ANR	3526184	Identifier	operands		3525239	1					
ANR	3526185	PrimaryExpression	0		3525239	1					
ANR	3526186	Identifier	regs		3525239	1					
ANR	3526187	PrimaryExpression	0		3525239	1					
ANR	3526188	Identifier	X86R_DI		3525239	1					
ANR	3526189	EqualityExpression	op -> operands [ 0 ] . regs [ 1 ] == - 1		3525239	1		==			
ANR	3526190	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		3525239	0					
ANR	3526191	MemberAccess	op -> operands [ 0 ] . regs		3525239	0					
ANR	3526192	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3526193	PtrMemberAccess	op -> operands		3525239	0					
ANR	3526194	Identifier	op		3525239	0					
ANR	3526195	Identifier	operands		3525239	1					
ANR	3526196	PrimaryExpression	0		3525239	1					
ANR	3526197	Identifier	regs		3525239	1					
ANR	3526198	PrimaryExpression	1		3525239	1					
ANR	3526199	UnaryOperationExpression	- 1		3525239	1					
ANR	3526200	UnaryOperator	-		3525239	0					
ANR	3526201	PrimaryExpression	1		3525239	1					
ANR	3526202	CompoundStatement		131:84:3571:3571	3525239	1					
ANR	3526203	ExpressionStatement	rm = B0101	1894:5:49635:49645	3525239	0	True				
ANR	3526204	AssignmentExpression	rm = B0101		3525239	0		=			
ANR	3526205	Identifier	rm		3525239	0					
ANR	3526206	Identifier	B0101		3525239	1					
ANR	3526207	ElseStatement	else		3525239	0					
ANR	3526208	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == - 1 )		3525239	0					
ANR	3526209	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == - 1	1895:15:49662:49728	3525239	0	True				
ANR	3526210	AndExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX && op -> operands [ 0 ] . regs [ 1 ] == - 1		3525239	0		&&			
ANR	3526211	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_BX		3525239	0		==			
ANR	3526212	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3525239	0					
ANR	3526213	MemberAccess	op -> operands [ 0 ] . regs		3525239	0					
ANR	3526214	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3526215	PtrMemberAccess	op -> operands		3525239	0					
ANR	3526216	Identifier	op		3525239	0					
ANR	3526217	Identifier	operands		3525239	1					
ANR	3526218	PrimaryExpression	0		3525239	1					
ANR	3526219	Identifier	regs		3525239	1					
ANR	3526220	PrimaryExpression	0		3525239	1					
ANR	3526221	Identifier	X86R_BX		3525239	1					
ANR	3526222	EqualityExpression	op -> operands [ 0 ] . regs [ 1 ] == - 1		3525239	1		==			
ANR	3526223	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		3525239	0					
ANR	3526224	MemberAccess	op -> operands [ 0 ] . regs		3525239	0					
ANR	3526225	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3526226	PtrMemberAccess	op -> operands		3525239	0					
ANR	3526227	Identifier	op		3525239	0					
ANR	3526228	Identifier	operands		3525239	1					
ANR	3526229	PrimaryExpression	0		3525239	1					
ANR	3526230	Identifier	regs		3525239	1					
ANR	3526231	PrimaryExpression	1		3525239	1					
ANR	3526232	UnaryOperationExpression	- 1		3525239	1					
ANR	3526233	UnaryOperator	-		3525239	0					
ANR	3526234	PrimaryExpression	1		3525239	1					
ANR	3526235	CompoundStatement		133:84:3674:3674	3525239	1					
ANR	3526236	ExpressionStatement	rm = B0111	1896:5:49738:49748	3525239	0	True				
ANR	3526237	AssignmentExpression	rm = B0111		3525239	0		=			
ANR	3526238	Identifier	rm		3525239	0					
ANR	3526239	Identifier	B0111		3525239	1					
ANR	3526240	ElseStatement	else		3525239	0					
ANR	3526241	CompoundStatement		135:11:3704:3704	3525239	0					
ANR	3526242	ReturnStatement	return - 1 ;	1899:5:49832:49841	3525239	0	True				
ANR	3526243	UnaryOperationExpression	- 1		3525239	0					
ANR	3526244	UnaryOperator	-		3525239	0					
ANR	3526245	PrimaryExpression	1		3525239	1					
ANR	3526246	ExpressionStatement	modrm = ( mod << 6 ) | ( reg << 3 ) | rm	1901:4:49853:49889	3525239	1	True				
ANR	3526247	AssignmentExpression	modrm = ( mod << 6 ) | ( reg << 3 ) | rm		3525239	0		=			
ANR	3526248	Identifier	modrm		3525239	0					
ANR	3526249	InclusiveOrExpression	( mod << 6 ) | ( reg << 3 ) | rm		3525239	1		|			
ANR	3526250	ShiftExpression	mod << 6		3525239	0		<<			
ANR	3526251	Identifier	mod		3525239	0					
ANR	3526252	PrimaryExpression	6		3525239	1					
ANR	3526253	InclusiveOrExpression	( reg << 3 ) | rm		3525239	1		|			
ANR	3526254	ShiftExpression	reg << 3		3525239	0		<<			
ANR	3526255	Identifier	reg		3525239	0					
ANR	3526256	PrimaryExpression	3		3525239	1					
ANR	3526257	Identifier	rm		3525239	1					
ANR	3526258	ElseStatement	else		3525239	0					
ANR	3526259	CompoundStatement		154:4:4142:4186	3525239	0					
ANR	3526260	IfStatement	if ( op -> operands [ 0 ] . extended )		3525239	0					
ANR	3526261	Condition	op -> operands [ 0 ] . extended	1904:8:49920:49943	3525239	0	True				
ANR	3526262	MemberAccess	op -> operands [ 0 ] . extended		3525239	0					
ANR	3526263	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3526264	PtrMemberAccess	op -> operands		3525239	0					
ANR	3526265	Identifier	op		3525239	0					
ANR	3526266	Identifier	operands		3525239	1					
ANR	3526267	PrimaryExpression	0		3525239	1					
ANR	3526268	Identifier	extended		3525239	1					
ANR	3526269	CompoundStatement		142:34:3889:3889	3525239	1					
ANR	3526270	ExpressionStatement	rm = op -> operands [ 0 ] . reg	1905:5:49953:49977	3525239	0	True				
ANR	3526271	AssignmentExpression	rm = op -> operands [ 0 ] . reg		3525239	0		=			
ANR	3526272	Identifier	rm		3525239	0					
ANR	3526273	MemberAccess	op -> operands [ 0 ] . reg		3525239	1					
ANR	3526274	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3526275	PtrMemberAccess	op -> operands		3525239	0					
ANR	3526276	Identifier	op		3525239	0					
ANR	3526277	Identifier	operands		3525239	1					
ANR	3526278	PrimaryExpression	0		3525239	1					
ANR	3526279	Identifier	reg		3525239	1					
ANR	3526280	ElseStatement	else		3525239	0					
ANR	3526281	CompoundStatement		144:11:3933:3933	3525239	0					
ANR	3526282	ExpressionStatement	rm = op -> operands [ 0 ] . regs [ 0 ]	1907:5:49997:50025	3525239	0	True				
ANR	3526283	AssignmentExpression	rm = op -> operands [ 0 ] . regs [ 0 ]		3525239	0		=			
ANR	3526284	Identifier	rm		3525239	0					
ANR	3526285	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3525239	1					
ANR	3526286	MemberAccess	op -> operands [ 0 ] . regs		3525239	0					
ANR	3526287	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3526288	PtrMemberAccess	op -> operands		3525239	0					
ANR	3526289	Identifier	op		3525239	0					
ANR	3526290	Identifier	operands		3525239	1					
ANR	3526291	PrimaryExpression	0		3525239	1					
ANR	3526292	Identifier	regs		3525239	1					
ANR	3526293	PrimaryExpression	0		3525239	1					
ANR	3526294	IfStatement	if ( rm == 5 && mod == 0 )		3525239	1					
ANR	3526295	Condition	rm == 5 && mod == 0	1910:8:50100:50118	3525239	0	True				
ANR	3526296	AndExpression	rm == 5 && mod == 0		3525239	0		&&			
ANR	3526297	EqualityExpression	rm == 5		3525239	0		==			
ANR	3526298	Identifier	rm		3525239	0					
ANR	3526299	PrimaryExpression	5		3525239	1					
ANR	3526300	EqualityExpression	mod == 0		3525239	1		==			
ANR	3526301	Identifier	mod		3525239	0					
ANR	3526302	PrimaryExpression	0		3525239	1					
ANR	3526303	CompoundStatement		148:29:4064:4064	3525239	1					
ANR	3526304	ExpressionStatement	mod = 1	1911:5:50128:50135	3525239	0	True				
ANR	3526305	AssignmentExpression	mod = 1		3525239	0		=			
ANR	3526306	Identifier	mod		3525239	0					
ANR	3526307	PrimaryExpression	1		3525239	1					
ANR	3526308	IdentifierDeclStatement	int index = op -> operands [ 0 ] . regs [ 1 ] ;	1915:4:50158:50193	3525239	2	True				
ANR	3526309	IdentifierDecl	index = op -> operands [ 0 ] . regs [ 1 ]		3525239	0					
ANR	3526310	IdentifierDeclType	int		3525239	0					
ANR	3526311	Identifier	index		3525239	1					
ANR	3526312	AssignmentExpression	index = op -> operands [ 0 ] . regs [ 1 ]		3525239	2		=			
ANR	3526313	Identifier	index		3525239	0					
ANR	3526314	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		3525239	1					
ANR	3526315	MemberAccess	op -> operands [ 0 ] . regs		3525239	0					
ANR	3526316	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3526317	PtrMemberAccess	op -> operands		3525239	0					
ANR	3526318	Identifier	op		3525239	0					
ANR	3526319	Identifier	operands		3525239	1					
ANR	3526320	PrimaryExpression	0		3525239	1					
ANR	3526321	Identifier	regs		3525239	1					
ANR	3526322	PrimaryExpression	1		3525239	1					
ANR	3526323	IdentifierDeclStatement	int scale = getsib ( op -> operands [ 0 ] . scale [ 1 ] ) ;	1916:4:50199:50243	3525239	3	True				
ANR	3526324	IdentifierDecl	scale = getsib ( op -> operands [ 0 ] . scale [ 1 ] )		3525239	0					
ANR	3526325	IdentifierDeclType	int		3525239	0					
ANR	3526326	Identifier	scale		3525239	1					
ANR	3526327	AssignmentExpression	scale = getsib ( op -> operands [ 0 ] . scale [ 1 ] )		3525239	2		=			
ANR	3526328	Identifier	scale		3525239	0					
ANR	3526329	CallExpression	getsib ( op -> operands [ 0 ] . scale [ 1 ] )		3525239	1					
ANR	3526330	Callee	getsib		3525239	0					
ANR	3526331	Identifier	getsib		3525239	0					
ANR	3526332	ArgumentList	op -> operands [ 0 ] . scale [ 1 ]		3525239	1					
ANR	3526333	Argument	op -> operands [ 0 ] . scale [ 1 ]		3525239	0					
ANR	3526334	ArrayIndexing	op -> operands [ 0 ] . scale [ 1 ]		3525239	0					
ANR	3526335	MemberAccess	op -> operands [ 0 ] . scale		3525239	0					
ANR	3526336	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3526337	PtrMemberAccess	op -> operands		3525239	0					
ANR	3526338	Identifier	op		3525239	0					
ANR	3526339	Identifier	operands		3525239	1					
ANR	3526340	PrimaryExpression	0		3525239	1					
ANR	3526341	Identifier	scale		3525239	1					
ANR	3526342	PrimaryExpression	1		3525239	1					
ANR	3526343	IfStatement	if ( index != - 1 )		3525239	4					
ANR	3526344	Condition	index != - 1	1917:8:50253:50263	3525239	0	True				
ANR	3526345	EqualityExpression	index != - 1		3525239	0		!=			
ANR	3526346	Identifier	index		3525239	0					
ANR	3526347	UnaryOperationExpression	- 1		3525239	1					
ANR	3526348	UnaryOperator	-		3525239	0					
ANR	3526349	PrimaryExpression	1		3525239	1					
ANR	3526350	CompoundStatement		155:21:4209:4209	3525239	1					
ANR	3526351	ExpressionStatement	use_sib = true	1918:5:50273:50287	3525239	0	True				
ANR	3526352	AssignmentExpression	use_sib = true		3525239	0		=			
ANR	3526353	Identifier	use_sib		3525239	0					
ANR	3526354	Identifier	true		3525239	1					
ANR	3526355	ExpressionStatement	sib = ( scale << 6 ) | ( index << 3 ) | rm	1919:5:50294:50332	3525239	1	True				
ANR	3526356	AssignmentExpression	sib = ( scale << 6 ) | ( index << 3 ) | rm		3525239	0		=			
ANR	3526357	Identifier	sib		3525239	0					
ANR	3526358	InclusiveOrExpression	( scale << 6 ) | ( index << 3 ) | rm		3525239	1		|			
ANR	3526359	ShiftExpression	scale << 6		3525239	0		<<			
ANR	3526360	Identifier	scale		3525239	0					
ANR	3526361	PrimaryExpression	6		3525239	1					
ANR	3526362	InclusiveOrExpression	( index << 3 ) | rm		3525239	1		|			
ANR	3526363	ShiftExpression	index << 3		3525239	0		<<			
ANR	3526364	Identifier	index		3525239	0					
ANR	3526365	PrimaryExpression	3		3525239	1					
ANR	3526366	Identifier	rm		3525239	1					
ANR	3526367	ElseStatement	else		3525239	0					
ANR	3526368	IfStatement	if ( rm == 4 )		3525239	0					
ANR	3526369	Condition	rm == 4	1920:15:50349:50355	3525239	0	True				
ANR	3526370	EqualityExpression	rm == 4		3525239	0		==			
ANR	3526371	Identifier	rm		3525239	0					
ANR	3526372	PrimaryExpression	4		3525239	1					
ANR	3526373	CompoundStatement		158:24:4301:4301	3525239	1					
ANR	3526374	ExpressionStatement	use_sib = true	1921:5:50365:50379	3525239	0	True				
ANR	3526375	AssignmentExpression	use_sib = true		3525239	0		=			
ANR	3526376	Identifier	use_sib		3525239	0					
ANR	3526377	Identifier	true		3525239	1					
ANR	3526378	ExpressionStatement	sib = 0x24	1922:5:50386:50396	3525239	1	True				
ANR	3526379	AssignmentExpression	sib = 0x24		3525239	0		=			
ANR	3526380	Identifier	sib		3525239	0					
ANR	3526381	PrimaryExpression	0x24		3525239	1					
ANR	3526382	IfStatement	if ( use_sib )		3525239	5					
ANR	3526383	Condition	use_sib	1924:8:50412:50418	3525239	0	True				
ANR	3526384	Identifier	use_sib		3525239	0					
ANR	3526385	CompoundStatement		162:17:4364:4364	3525239	1					
ANR	3526386	ExpressionStatement	rm = B0100	1925:5:50428:50438	3525239	0	True				
ANR	3526387	AssignmentExpression	rm = B0100		3525239	0		=			
ANR	3526388	Identifier	rm		3525239	0					
ANR	3526389	Identifier	B0100		3525239	1					
ANR	3526390	IfStatement	if ( rip_rel )		3525239	6					
ANR	3526391	Condition	rip_rel	1927:8:50454:50460	3525239	0	True				
ANR	3526392	Identifier	rip_rel		3525239	0					
ANR	3526393	CompoundStatement		165:17:4406:4406	3525239	1					
ANR	3526394	ExpressionStatement	modrm = ( B0000 << 6 ) | ( reg << 3 ) | B0101	1928:5:50470:50511	3525239	0	True				
ANR	3526395	AssignmentExpression	modrm = ( B0000 << 6 ) | ( reg << 3 ) | B0101		3525239	0		=			
ANR	3526396	Identifier	modrm		3525239	0					
ANR	3526397	InclusiveOrExpression	( B0000 << 6 ) | ( reg << 3 ) | B0101		3525239	1		|			
ANR	3526398	ShiftExpression	B0000 << 6		3525239	0		<<			
ANR	3526399	Identifier	B0000		3525239	0					
ANR	3526400	PrimaryExpression	6		3525239	1					
ANR	3526401	InclusiveOrExpression	( reg << 3 ) | B0101		3525239	1		|			
ANR	3526402	ShiftExpression	reg << 3		3525239	0		<<			
ANR	3526403	Identifier	reg		3525239	0					
ANR	3526404	PrimaryExpression	3		3525239	1					
ANR	3526405	Identifier	B0101		3525239	1					
ANR	3526406	ExpressionStatement	sib = ( scale << 6 ) | ( B0100 << 3 ) | B0101	1929:5:50518:50559	3525239	1	True				
ANR	3526407	AssignmentExpression	sib = ( scale << 6 ) | ( B0100 << 3 ) | B0101		3525239	0		=			
ANR	3526408	Identifier	sib		3525239	0					
ANR	3526409	InclusiveOrExpression	( scale << 6 ) | ( B0100 << 3 ) | B0101		3525239	1		|			
ANR	3526410	ShiftExpression	scale << 6		3525239	0		<<			
ANR	3526411	Identifier	scale		3525239	0					
ANR	3526412	PrimaryExpression	6		3525239	1					
ANR	3526413	InclusiveOrExpression	( B0100 << 3 ) | B0101		3525239	1		|			
ANR	3526414	ShiftExpression	B0100 << 3		3525239	0		<<			
ANR	3526415	Identifier	B0100		3525239	0					
ANR	3526416	PrimaryExpression	3		3525239	1					
ANR	3526417	Identifier	B0101		3525239	1					
ANR	3526418	ElseStatement	else		3525239	0					
ANR	3526419	CompoundStatement		168:11:4515:4515	3525239	0					
ANR	3526420	ExpressionStatement	modrm = ( mod << 6 ) | ( reg << 3 ) | rm	1931:5:50579:50615	3525239	0	True				
ANR	3526421	AssignmentExpression	modrm = ( mod << 6 ) | ( reg << 3 ) | rm		3525239	0		=			
ANR	3526422	Identifier	modrm		3525239	0					
ANR	3526423	InclusiveOrExpression	( mod << 6 ) | ( reg << 3 ) | rm		3525239	1		|			
ANR	3526424	ShiftExpression	mod << 6		3525239	0		<<			
ANR	3526425	Identifier	mod		3525239	0					
ANR	3526426	PrimaryExpression	6		3525239	1					
ANR	3526427	InclusiveOrExpression	( reg << 3 ) | rm		3525239	1		|			
ANR	3526428	ShiftExpression	reg << 3		3525239	0		<<			
ANR	3526429	Identifier	reg		3525239	0					
ANR	3526430	PrimaryExpression	3		3525239	1					
ANR	3526431	Identifier	rm		3525239	1					
ANR	3526432	IfStatement	if ( use_aso )		3525239	23					
ANR	3526433	Condition	use_aso	1936:7:50664:50670	3525239	0	True				
ANR	3526434	Identifier	use_aso		3525239	0					
ANR	3526435	CompoundStatement		174:16:4616:4616	3525239	1					
ANR	3526436	ExpressionStatement	data [ l ++ ] = 0x67	1937:4:50679:50695	3525239	0	True				
ANR	3526437	AssignmentExpression	data [ l ++ ] = 0x67		3525239	0		=			
ANR	3526438	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3526439	Identifier	data		3525239	0					
ANR	3526440	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3526441	Identifier	l		3525239	0					
ANR	3526442	IncDec	++		3525239	1					
ANR	3526443	PrimaryExpression	0x67		3525239	1					
ANR	3526444	IfStatement	if ( use_oso )		3525239	24					
ANR	3526445	Condition	use_oso	1939:7:50709:50715	3525239	0	True				
ANR	3526446	Identifier	use_oso		3525239	0					
ANR	3526447	CompoundStatement		177:16:4661:4661	3525239	1					
ANR	3526448	ExpressionStatement	data [ l ++ ] = 0x66	1940:4:50724:50740	3525239	0	True				
ANR	3526449	AssignmentExpression	data [ l ++ ] = 0x66		3525239	0		=			
ANR	3526450	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3526451	Identifier	data		3525239	0					
ANR	3526452	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3526453	Identifier	l		3525239	0					
ANR	3526454	IncDec	++		3525239	1					
ANR	3526455	PrimaryExpression	0x66		3525239	1					
ANR	3526456	IfStatement	if ( use_rex )		3525239	25					
ANR	3526457	Condition	use_rex	1942:7:50754:50760	3525239	0	True				
ANR	3526458	Identifier	use_rex		3525239	0					
ANR	3526459	CompoundStatement		180:16:4706:4706	3525239	1					
ANR	3526460	ExpressionStatement	data [ l ++ ] = rex	1943:4:50769:50784	3525239	0	True				
ANR	3526461	AssignmentExpression	data [ l ++ ] = rex		3525239	0		=			
ANR	3526462	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3526463	Identifier	data		3525239	0					
ANR	3526464	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3526465	Identifier	l		3525239	0					
ANR	3526466	IncDec	++		3525239	1					
ANR	3526467	Identifier	rex		3525239	1					
ANR	3526468	ExpressionStatement	data [ l ++ ] = opcode	1945:3:50794:50812	3525239	26	True				
ANR	3526469	AssignmentExpression	data [ l ++ ] = opcode		3525239	0		=			
ANR	3526470	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3526471	Identifier	data		3525239	0					
ANR	3526472	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3526473	Identifier	l		3525239	0					
ANR	3526474	IncDec	++		3525239	1					
ANR	3526475	Identifier	opcode		3525239	1					
ANR	3526476	ExpressionStatement	data [ l ++ ] = modrm	1946:3:50817:50834	3525239	27	True				
ANR	3526477	AssignmentExpression	data [ l ++ ] = modrm		3525239	0		=			
ANR	3526478	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3526479	Identifier	data		3525239	0					
ANR	3526480	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3526481	Identifier	l		3525239	0					
ANR	3526482	IncDec	++		3525239	1					
ANR	3526483	Identifier	modrm		3525239	1					
ANR	3526484	IfStatement	if ( use_sib )		3525239	28					
ANR	3526485	Condition	use_sib	1947:7:50843:50849	3525239	0	True				
ANR	3526486	Identifier	use_sib		3525239	0					
ANR	3526487	CompoundStatement		185:16:4795:4795	3525239	1					
ANR	3526488	ExpressionStatement	data [ l ++ ] = sib	1948:4:50858:50873	3525239	0	True				
ANR	3526489	AssignmentExpression	data [ l ++ ] = sib		3525239	0		=			
ANR	3526490	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3526491	Identifier	data		3525239	0					
ANR	3526492	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3526493	Identifier	l		3525239	0					
ANR	3526494	IncDec	++		3525239	1					
ANR	3526495	Identifier	sib		3525239	1					
ANR	3526496	IfStatement	if ( mod == 1 )		3525239	29					
ANR	3526497	Condition	mod == 1	1951:7:50899:50906	3525239	0	True				
ANR	3526498	EqualityExpression	mod == 1		3525239	0		==			
ANR	3526499	Identifier	mod		3525239	0					
ANR	3526500	PrimaryExpression	1		3525239	1					
ANR	3526501	CompoundStatement		189:17:4852:4852	3525239	1					
ANR	3526502	ExpressionStatement	data [ l ++ ] = offset	1952:4:50915:50933	3525239	0	True				
ANR	3526503	AssignmentExpression	data [ l ++ ] = offset		3525239	0		=			
ANR	3526504	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3526505	Identifier	data		3525239	0					
ANR	3526506	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3526507	Identifier	l		3525239	0					
ANR	3526508	IncDec	++		3525239	1					
ANR	3526509	Identifier	offset		3525239	1					
ANR	3526510	ElseStatement	else		3525239	0					
ANR	3526511	IfStatement	if ( reg_bits == 16 && mod == 2 )		3525239	0					
ANR	3526512	Condition	reg_bits == 16 && mod == 2	1953:14:50949:50974	3525239	0	True				
ANR	3526513	AndExpression	reg_bits == 16 && mod == 2		3525239	0		&&			
ANR	3526514	EqualityExpression	reg_bits == 16		3525239	0		==			
ANR	3526515	Identifier	reg_bits		3525239	0					
ANR	3526516	PrimaryExpression	16		3525239	1					
ANR	3526517	EqualityExpression	mod == 2		3525239	1		==			
ANR	3526518	Identifier	mod		3525239	0					
ANR	3526519	PrimaryExpression	2		3525239	1					
ANR	3526520	CompoundStatement		191:42:4920:4920	3525239	1					
ANR	3526521	ExpressionStatement	data [ l ++ ] = offset	1954:4:50983:51001	3525239	0	True				
ANR	3526522	AssignmentExpression	data [ l ++ ] = offset		3525239	0		=			
ANR	3526523	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3526524	Identifier	data		3525239	0					
ANR	3526525	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3526526	Identifier	l		3525239	0					
ANR	3526527	IncDec	++		3525239	1					
ANR	3526528	Identifier	offset		3525239	1					
ANR	3526529	ExpressionStatement	data [ l ++ ] = offset >> 8	1955:4:51007:51030	3525239	1	True				
ANR	3526530	AssignmentExpression	data [ l ++ ] = offset >> 8		3525239	0		=			
ANR	3526531	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3526532	Identifier	data		3525239	0					
ANR	3526533	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3526534	Identifier	l		3525239	0					
ANR	3526535	IncDec	++		3525239	1					
ANR	3526536	ShiftExpression	offset >> 8		3525239	1		>>			
ANR	3526537	Identifier	offset		3525239	0					
ANR	3526538	PrimaryExpression	8		3525239	1					
ANR	3526539	ElseStatement	else		3525239	0					
ANR	3526540	IfStatement	if ( mod == 2 || rip_rel )		3525239	0					
ANR	3526541	Condition	mod == 2 || rip_rel	1956:14:51046:51064	3525239	0	True				
ANR	3526542	OrExpression	mod == 2 || rip_rel		3525239	0		||			
ANR	3526543	EqualityExpression	mod == 2		3525239	0		==			
ANR	3526544	Identifier	mod		3525239	0					
ANR	3526545	PrimaryExpression	2		3525239	1					
ANR	3526546	Identifier	rip_rel		3525239	1					
ANR	3526547	CompoundStatement		194:35:5010:5010	3525239	1					
ANR	3526548	ExpressionStatement	data [ l ++ ] = offset	1957:4:51073:51091	3525239	0	True				
ANR	3526549	AssignmentExpression	data [ l ++ ] = offset		3525239	0		=			
ANR	3526550	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3526551	Identifier	data		3525239	0					
ANR	3526552	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3526553	Identifier	l		3525239	0					
ANR	3526554	IncDec	++		3525239	1					
ANR	3526555	Identifier	offset		3525239	1					
ANR	3526556	ExpressionStatement	data [ l ++ ] = offset >> 8	1958:4:51097:51120	3525239	1	True				
ANR	3526557	AssignmentExpression	data [ l ++ ] = offset >> 8		3525239	0		=			
ANR	3526558	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3526559	Identifier	data		3525239	0					
ANR	3526560	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3526561	Identifier	l		3525239	0					
ANR	3526562	IncDec	++		3525239	1					
ANR	3526563	ShiftExpression	offset >> 8		3525239	1		>>			
ANR	3526564	Identifier	offset		3525239	0					
ANR	3526565	PrimaryExpression	8		3525239	1					
ANR	3526566	ExpressionStatement	data [ l ++ ] = offset >> 16	1959:4:51126:51150	3525239	2	True				
ANR	3526567	AssignmentExpression	data [ l ++ ] = offset >> 16		3525239	0		=			
ANR	3526568	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3526569	Identifier	data		3525239	0					
ANR	3526570	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3526571	Identifier	l		3525239	0					
ANR	3526572	IncDec	++		3525239	1					
ANR	3526573	ShiftExpression	offset >> 16		3525239	1		>>			
ANR	3526574	Identifier	offset		3525239	0					
ANR	3526575	PrimaryExpression	16		3525239	1					
ANR	3526576	ExpressionStatement	data [ l ++ ] = offset >> 24	1960:4:51156:51180	3525239	3	True				
ANR	3526577	AssignmentExpression	data [ l ++ ] = offset >> 24		3525239	0		=			
ANR	3526578	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3526579	Identifier	data		3525239	0					
ANR	3526580	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3526581	Identifier	l		3525239	0					
ANR	3526582	IncDec	++		3525239	1					
ANR	3526583	ShiftExpression	offset >> 24		3525239	1		>>			
ANR	3526584	Identifier	offset		3525239	0					
ANR	3526585	PrimaryExpression	24		3525239	1					
ANR	3526586	IdentifierDeclStatement	int byte ;	1963:3:51205:51213	3525239	30	True				
ANR	3526587	IdentifierDecl	byte		3525239	0					
ANR	3526588	IdentifierDeclType	int		3525239	0					
ANR	3526589	Identifier	byte		3525239	1					
ANR	3526590	ForStatement	for ( byte = 0 ; byte < dest_bits && byte < 32 ; byte += 8 )		3525239	31					
ANR	3526591	ForInit	byte = 0 ;	1964:8:51223:51231	3525239	0	True				
ANR	3526592	AssignmentExpression	byte = 0		3525239	0		=			
ANR	3526593	Identifier	byte		3525239	0					
ANR	3526594	PrimaryExpression	0		3525239	1					
ANR	3526595	Condition	byte < dest_bits && byte < 32	1964:18:51233:51261	3525239	1	True				
ANR	3526596	AndExpression	byte < dest_bits && byte < 32		3525239	0		&&			
ANR	3526597	RelationalExpression	byte < dest_bits		3525239	0		<			
ANR	3526598	Identifier	byte		3525239	0					
ANR	3526599	Identifier	dest_bits		3525239	1					
ANR	3526600	RelationalExpression	byte < 32		3525239	1		<			
ANR	3526601	Identifier	byte		3525239	0					
ANR	3526602	PrimaryExpression	32		3525239	1					
ANR	3526603	AssignmentExpression	byte += 8	1964:49:51264:51272	3525239	2	True	+=			
ANR	3526604	Identifier	byte		3525239	0					
ANR	3526605	PrimaryExpression	8		3525239	1					
ANR	3526606	CompoundStatement		202:60:5218:5218	3525239	3					
ANR	3526607	ExpressionStatement	data [ l ++ ] = ( immediate >> byte )	1965:4:51281:51312	3525239	0	True				
ANR	3526608	AssignmentExpression	data [ l ++ ] = ( immediate >> byte )		3525239	0		=			
ANR	3526609	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3526610	Identifier	data		3525239	0					
ANR	3526611	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3526612	Identifier	l		3525239	0					
ANR	3526613	IncDec	++		3525239	1					
ANR	3526614	ShiftExpression	immediate >> byte		3525239	1		>>			
ANR	3526615	Identifier	immediate		3525239	0					
ANR	3526616	Identifier	byte		3525239	1					
ANR	3526617	ElseStatement	else		3525239	0					
ANR	3526618	IfStatement	if ( op -> operands [ 1 ] . type & OT_REGALL && ! ( op -> operands [ 1 ] . type & OT_MEMORY ) )		3525239	0					
ANR	3526619	Condition	op -> operands [ 1 ] . type & OT_REGALL && ! ( op -> operands [ 1 ] . type & OT_MEMORY )	1968:12:51335:51409	3525239	0	True				
ANR	3526620	AndExpression	op -> operands [ 1 ] . type & OT_REGALL && ! ( op -> operands [ 1 ] . type & OT_MEMORY )		3525239	0		&&			
ANR	3526621	BitAndExpression	op -> operands [ 1 ] . type & OT_REGALL		3525239	0		&			
ANR	3526622	MemberAccess	op -> operands [ 1 ] . type		3525239	0					
ANR	3526623	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3526624	PtrMemberAccess	op -> operands		3525239	0					
ANR	3526625	Identifier	op		3525239	0					
ANR	3526626	Identifier	operands		3525239	1					
ANR	3526627	PrimaryExpression	1		3525239	1					
ANR	3526628	Identifier	type		3525239	1					
ANR	3526629	Identifier	OT_REGALL		3525239	1					
ANR	3526630	UnaryOperationExpression	! ( op -> operands [ 1 ] . type & OT_MEMORY )		3525239	1					
ANR	3526631	UnaryOperator	!		3525239	0					
ANR	3526632	BitAndExpression	op -> operands [ 1 ] . type & OT_MEMORY		3525239	1		&			
ANR	3526633	MemberAccess	op -> operands [ 1 ] . type		3525239	0					
ANR	3526634	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3526635	PtrMemberAccess	op -> operands		3525239	0					
ANR	3526636	Identifier	op		3525239	0					
ANR	3526637	Identifier	operands		3525239	1					
ANR	3526638	PrimaryExpression	1		3525239	1					
ANR	3526639	Identifier	type		3525239	1					
ANR	3526640	Identifier	OT_MEMORY		3525239	1					
ANR	3526641	CompoundStatement		207:41:5355:5355	3525239	1					
ANR	3526642	IfStatement	if ( op -> operands [ 0 ] . type & OT_CONSTANT )		3525239	0					
ANR	3526643	Condition	op -> operands [ 0 ] . type & OT_CONSTANT	1970:6:51420:51453	3525239	0	True				
ANR	3526644	BitAndExpression	op -> operands [ 0 ] . type & OT_CONSTANT		3525239	0		&			
ANR	3526645	MemberAccess	op -> operands [ 0 ] . type		3525239	0					
ANR	3526646	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3526647	PtrMemberAccess	op -> operands		3525239	0					
ANR	3526648	Identifier	op		3525239	0					
ANR	3526649	Identifier	operands		3525239	1					
ANR	3526650	PrimaryExpression	0		3525239	1					
ANR	3526651	Identifier	type		3525239	1					
ANR	3526652	Identifier	OT_CONSTANT		3525239	1					
ANR	3526653	CompoundStatement		208:42:5399:5399	3525239	1					
ANR	3526654	ReturnStatement	return - 1 ;	1971:3:51461:51470	3525239	0	True				
ANR	3526655	UnaryOperationExpression	- 1		3525239	0					
ANR	3526656	UnaryOperator	-		3525239	0					
ANR	3526657	PrimaryExpression	1		3525239	1					
ANR	3526658	IfStatement	if ( op -> operands [ 0 ] . type & OT_REGTYPE & OT_SEGMENTREG && op -> operands [ 1 ] . type & OT_REGTYPE & OT_SEGMENTREG )		3525239	1					
ANR	3526659	Condition	op -> operands [ 0 ] . type & OT_REGTYPE & OT_SEGMENTREG && op -> operands [ 1 ] . type & OT_REGTYPE & OT_SEGMENTREG	1973:6:51482:51589	3525239	0	True				
ANR	3526660	AndExpression	op -> operands [ 0 ] . type & OT_REGTYPE & OT_SEGMENTREG && op -> operands [ 1 ] . type & OT_REGTYPE & OT_SEGMENTREG		3525239	0		&&			
ANR	3526661	BitAndExpression	op -> operands [ 0 ] . type & OT_REGTYPE & OT_SEGMENTREG		3525239	0		&			
ANR	3526662	MemberAccess	op -> operands [ 0 ] . type		3525239	0					
ANR	3526663	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3526664	PtrMemberAccess	op -> operands		3525239	0					
ANR	3526665	Identifier	op		3525239	0					
ANR	3526666	Identifier	operands		3525239	1					
ANR	3526667	PrimaryExpression	0		3525239	1					
ANR	3526668	Identifier	type		3525239	1					
ANR	3526669	BitAndExpression	OT_REGTYPE & OT_SEGMENTREG		3525239	1		&			
ANR	3526670	Identifier	OT_REGTYPE		3525239	0					
ANR	3526671	Identifier	OT_SEGMENTREG		3525239	1					
ANR	3526672	BitAndExpression	op -> operands [ 1 ] . type & OT_REGTYPE & OT_SEGMENTREG		3525239	1		&			
ANR	3526673	MemberAccess	op -> operands [ 1 ] . type		3525239	0					
ANR	3526674	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3526675	PtrMemberAccess	op -> operands		3525239	0					
ANR	3526676	Identifier	op		3525239	0					
ANR	3526677	Identifier	operands		3525239	1					
ANR	3526678	PrimaryExpression	1		3525239	1					
ANR	3526679	Identifier	type		3525239	1					
ANR	3526680	BitAndExpression	OT_REGTYPE & OT_SEGMENTREG		3525239	1		&			
ANR	3526681	Identifier	OT_REGTYPE		3525239	0					
ANR	3526682	Identifier	OT_SEGMENTREG		3525239	1					
ANR	3526683	CompoundStatement		212:57:5535:5535	3525239	1					
ANR	3526684	ReturnStatement	return - 1 ;	1975:4:51598:51607	3525239	0	True				
ANR	3526685	UnaryOperationExpression	- 1		3525239	0					
ANR	3526686	UnaryOperator	-		3525239	0					
ANR	3526687	PrimaryExpression	1		3525239	1					
ANR	3526688	IfStatement	if ( is_debug_or_control ( op -> operands [ 0 ] ) && ! ( op -> operands [ 1 ] . type & OT_REGTYPE & OT_GPREG ) )		3525239	2					
ANR	3526689	Condition	is_debug_or_control ( op -> operands [ 0 ] ) && ! ( op -> operands [ 1 ] . type & OT_REGTYPE & OT_GPREG )	1977:6:51619:51711	3525239	0	True				
ANR	3526690	AndExpression	is_debug_or_control ( op -> operands [ 0 ] ) && ! ( op -> operands [ 1 ] . type & OT_REGTYPE & OT_GPREG )		3525239	0		&&			
ANR	3526691	CallExpression	is_debug_or_control ( op -> operands [ 0 ] )		3525239	0					
ANR	3526692	Callee	is_debug_or_control		3525239	0					
ANR	3526693	Identifier	is_debug_or_control		3525239	0					
ANR	3526694	ArgumentList	op -> operands [ 0 ]		3525239	1					
ANR	3526695	Argument	op -> operands [ 0 ]		3525239	0					
ANR	3526696	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3526697	PtrMemberAccess	op -> operands		3525239	0					
ANR	3526698	Identifier	op		3525239	0					
ANR	3526699	Identifier	operands		3525239	1					
ANR	3526700	PrimaryExpression	0		3525239	1					
ANR	3526701	UnaryOperationExpression	! ( op -> operands [ 1 ] . type & OT_REGTYPE & OT_GPREG )		3525239	1					
ANR	3526702	UnaryOperator	!		3525239	0					
ANR	3526703	BitAndExpression	op -> operands [ 1 ] . type & OT_REGTYPE & OT_GPREG		3525239	1		&			
ANR	3526704	MemberAccess	op -> operands [ 1 ] . type		3525239	0					
ANR	3526705	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3526706	PtrMemberAccess	op -> operands		3525239	0					
ANR	3526707	Identifier	op		3525239	0					
ANR	3526708	Identifier	operands		3525239	1					
ANR	3526709	PrimaryExpression	1		3525239	1					
ANR	3526710	Identifier	type		3525239	1					
ANR	3526711	BitAndExpression	OT_REGTYPE & OT_GPREG		3525239	1		&			
ANR	3526712	Identifier	OT_REGTYPE		3525239	0					
ANR	3526713	Identifier	OT_GPREG		3525239	1					
ANR	3526714	CompoundStatement		216:54:5657:5657	3525239	1					
ANR	3526715	ReturnStatement	return - 1 ;	1979:3:51719:51728	3525239	0	True				
ANR	3526716	UnaryOperationExpression	- 1		3525239	0					
ANR	3526717	UnaryOperator	-		3525239	0					
ANR	3526718	PrimaryExpression	1		3525239	1					
ANR	3526719	IfStatement	if ( is_debug_or_control ( op -> operands [ 1 ] ) && ! ( op -> operands [ 0 ] . type & OT_REGTYPE & OT_GPREG ) )		3525239	3					
ANR	3526720	Condition	is_debug_or_control ( op -> operands [ 1 ] ) && ! ( op -> operands [ 0 ] . type & OT_REGTYPE & OT_GPREG )	1981:6:51740:51830	3525239	0	True				
ANR	3526721	AndExpression	is_debug_or_control ( op -> operands [ 1 ] ) && ! ( op -> operands [ 0 ] . type & OT_REGTYPE & OT_GPREG )		3525239	0		&&			
ANR	3526722	CallExpression	is_debug_or_control ( op -> operands [ 1 ] )		3525239	0					
ANR	3526723	Callee	is_debug_or_control		3525239	0					
ANR	3526724	Identifier	is_debug_or_control		3525239	0					
ANR	3526725	ArgumentList	op -> operands [ 1 ]		3525239	1					
ANR	3526726	Argument	op -> operands [ 1 ]		3525239	0					
ANR	3526727	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3526728	PtrMemberAccess	op -> operands		3525239	0					
ANR	3526729	Identifier	op		3525239	0					
ANR	3526730	Identifier	operands		3525239	1					
ANR	3526731	PrimaryExpression	1		3525239	1					
ANR	3526732	UnaryOperationExpression	! ( op -> operands [ 0 ] . type & OT_REGTYPE & OT_GPREG )		3525239	1					
ANR	3526733	UnaryOperator	!		3525239	0					
ANR	3526734	BitAndExpression	op -> operands [ 0 ] . type & OT_REGTYPE & OT_GPREG		3525239	1		&			
ANR	3526735	MemberAccess	op -> operands [ 0 ] . type		3525239	0					
ANR	3526736	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3526737	PtrMemberAccess	op -> operands		3525239	0					
ANR	3526738	Identifier	op		3525239	0					
ANR	3526739	Identifier	operands		3525239	1					
ANR	3526740	PrimaryExpression	0		3525239	1					
ANR	3526741	Identifier	type		3525239	1					
ANR	3526742	BitAndExpression	OT_REGTYPE & OT_GPREG		3525239	1		&			
ANR	3526743	Identifier	OT_REGTYPE		3525239	0					
ANR	3526744	Identifier	OT_GPREG		3525239	1					
ANR	3526745	CompoundStatement		220:52:5776:5776	3525239	1					
ANR	3526746	ReturnStatement	return - 1 ;	1983:3:51838:51847	3525239	0	True				
ANR	3526747	UnaryOperationExpression	- 1		3525239	0					
ANR	3526748	UnaryOperator	-		3525239	0					
ANR	3526749	PrimaryExpression	1		3525239	1					
ANR	3526750	IfStatement	if ( op -> operands [ 0 ] . type & OT_REGTYPE && op -> operands [ 1 ] . type & OT_REGTYPE )		3525239	4					
ANR	3526751	Condition	op -> operands [ 0 ] . type & OT_REGTYPE && op -> operands [ 1 ] . type & OT_REGTYPE	1986:6:51886:51955	3525239	0	True				
ANR	3526752	AndExpression	op -> operands [ 0 ] . type & OT_REGTYPE && op -> operands [ 1 ] . type & OT_REGTYPE		3525239	0		&&			
ANR	3526753	BitAndExpression	op -> operands [ 0 ] . type & OT_REGTYPE		3525239	0		&			
ANR	3526754	MemberAccess	op -> operands [ 0 ] . type		3525239	0					
ANR	3526755	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3526756	PtrMemberAccess	op -> operands		3525239	0					
ANR	3526757	Identifier	op		3525239	0					
ANR	3526758	Identifier	operands		3525239	1					
ANR	3526759	PrimaryExpression	0		3525239	1					
ANR	3526760	Identifier	type		3525239	1					
ANR	3526761	Identifier	OT_REGTYPE		3525239	1					
ANR	3526762	BitAndExpression	op -> operands [ 1 ] . type & OT_REGTYPE		3525239	1		&			
ANR	3526763	MemberAccess	op -> operands [ 1 ] . type		3525239	0					
ANR	3526764	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3526765	PtrMemberAccess	op -> operands		3525239	0					
ANR	3526766	Identifier	op		3525239	0					
ANR	3526767	Identifier	operands		3525239	1					
ANR	3526768	PrimaryExpression	1		3525239	1					
ANR	3526769	Identifier	type		3525239	1					
ANR	3526770	Identifier	OT_REGTYPE		3525239	1					
ANR	3526771	CompoundStatement		224:78:5901:5901	3525239	1					
ANR	3526772	IfStatement	if ( ! ( ( op -> operands [ 0 ] . type & ALL_SIZE ) & ( op -> operands [ 1 ] . type & ALL_SIZE ) ) )		3525239	0					
ANR	3526773	Condition	! ( ( op -> operands [ 0 ] . type & ALL_SIZE ) & ( op -> operands [ 1 ] . type & ALL_SIZE ) )	1987:7:51967:52041	3525239	0	True				
ANR	3526774	UnaryOperationExpression	! ( ( op -> operands [ 0 ] . type & ALL_SIZE ) & ( op -> operands [ 1 ] . type & ALL_SIZE ) )		3525239	0					
ANR	3526775	UnaryOperator	!		3525239	0					
ANR	3526776	BitAndExpression	( op -> operands [ 0 ] . type & ALL_SIZE ) & ( op -> operands [ 1 ] . type & ALL_SIZE )		3525239	1		&			
ANR	3526777	BitAndExpression	op -> operands [ 0 ] . type & ALL_SIZE		3525239	0		&			
ANR	3526778	MemberAccess	op -> operands [ 0 ] . type		3525239	0					
ANR	3526779	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3526780	PtrMemberAccess	op -> operands		3525239	0					
ANR	3526781	Identifier	op		3525239	0					
ANR	3526782	Identifier	operands		3525239	1					
ANR	3526783	PrimaryExpression	0		3525239	1					
ANR	3526784	Identifier	type		3525239	1					
ANR	3526785	Identifier	ALL_SIZE		3525239	1					
ANR	3526786	BitAndExpression	op -> operands [ 1 ] . type & ALL_SIZE		3525239	1		&			
ANR	3526787	MemberAccess	op -> operands [ 1 ] . type		3525239	0					
ANR	3526788	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3526789	PtrMemberAccess	op -> operands		3525239	0					
ANR	3526790	Identifier	op		3525239	0					
ANR	3526791	Identifier	operands		3525239	1					
ANR	3526792	PrimaryExpression	1		3525239	1					
ANR	3526793	Identifier	type		3525239	1					
ANR	3526794	Identifier	ALL_SIZE		3525239	1					
ANR	3526795	CompoundStatement		226:39:5987:5987	3525239	1					
ANR	3526796	ReturnStatement	return - 1 ;	1989:4:52050:52059	3525239	0	True				
ANR	3526797	UnaryOperationExpression	- 1		3525239	0					
ANR	3526798	UnaryOperator	-		3525239	0					
ANR	3526799	PrimaryExpression	1		3525239	1					
ANR	3526800	IfStatement	if ( a -> bits == 64 )		3525239	5					
ANR	3526801	Condition	a -> bits == 64	1993:6:52077:52089	3525239	0	True				
ANR	3526802	EqualityExpression	a -> bits == 64		3525239	0		==			
ANR	3526803	PtrMemberAccess	a -> bits		3525239	0					
ANR	3526804	Identifier	a		3525239	0					
ANR	3526805	Identifier	bits		3525239	1					
ANR	3526806	PrimaryExpression	64		3525239	1					
ANR	3526807	CompoundStatement		231:21:6035:6035	3525239	1					
ANR	3526808	IfStatement	if ( op -> operands [ 0 ] . extended )		3525239	0					
ANR	3526809	Condition	op -> operands [ 0 ] . extended	1994:7:52101:52124	3525239	0	True				
ANR	3526810	MemberAccess	op -> operands [ 0 ] . extended		3525239	0					
ANR	3526811	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3526812	PtrMemberAccess	op -> operands		3525239	0					
ANR	3526813	Identifier	op		3525239	0					
ANR	3526814	Identifier	operands		3525239	1					
ANR	3526815	PrimaryExpression	0		3525239	1					
ANR	3526816	Identifier	extended		3525239	1					
ANR	3526817	CompoundStatement		232:33:6070:6070	3525239	1					
ANR	3526818	ExpressionStatement	rex = 1	1995:4:52133:52140	3525239	0	True				
ANR	3526819	AssignmentExpression	rex = 1		3525239	0		=			
ANR	3526820	Identifier	rex		3525239	0					
ANR	3526821	PrimaryExpression	1		3525239	1					
ANR	3526822	IfStatement	if ( op -> operands [ 1 ] . extended )		3525239	1					
ANR	3526823	Condition	op -> operands [ 1 ] . extended	1997:7:52154:52177	3525239	0	True				
ANR	3526824	MemberAccess	op -> operands [ 1 ] . extended		3525239	0					
ANR	3526825	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3526826	PtrMemberAccess	op -> operands		3525239	0					
ANR	3526827	Identifier	op		3525239	0					
ANR	3526828	Identifier	operands		3525239	1					
ANR	3526829	PrimaryExpression	1		3525239	1					
ANR	3526830	Identifier	extended		3525239	1					
ANR	3526831	CompoundStatement		235:33:6123:6123	3525239	1					
ANR	3526832	ExpressionStatement	rex += 4	1998:4:52186:52194	3525239	0	True				
ANR	3526833	AssignmentExpression	rex += 4		3525239	0		+=			
ANR	3526834	Identifier	rex		3525239	0					
ANR	3526835	PrimaryExpression	4		3525239	1					
ANR	3526836	IfStatement	if ( op -> operands [ 1 ] . type & OT_QWORD )		3525239	2					
ANR	3526837	Condition	op -> operands [ 1 ] . type & OT_QWORD	2000:7:52208:52238	3525239	0	True				
ANR	3526838	BitAndExpression	op -> operands [ 1 ] . type & OT_QWORD		3525239	0		&			
ANR	3526839	MemberAccess	op -> operands [ 1 ] . type		3525239	0					
ANR	3526840	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3526841	PtrMemberAccess	op -> operands		3525239	0					
ANR	3526842	Identifier	op		3525239	0					
ANR	3526843	Identifier	operands		3525239	1					
ANR	3526844	PrimaryExpression	1		3525239	1					
ANR	3526845	Identifier	type		3525239	1					
ANR	3526846	Identifier	OT_QWORD		3525239	1					
ANR	3526847	CompoundStatement		238:40:6184:6184	3525239	1					
ANR	3526848	IfStatement	if ( ! ( op -> operands [ 0 ] . type & OT_QWORD ) )		3525239	0					
ANR	3526849	Condition	! ( op -> operands [ 0 ] . type & OT_QWORD )	2001:8:52251:52284	3525239	0	True				
ANR	3526850	UnaryOperationExpression	! ( op -> operands [ 0 ] . type & OT_QWORD )		3525239	0					
ANR	3526851	UnaryOperator	!		3525239	0					
ANR	3526852	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		3525239	1		&			
ANR	3526853	MemberAccess	op -> operands [ 0 ] . type		3525239	0					
ANR	3526854	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3526855	PtrMemberAccess	op -> operands		3525239	0					
ANR	3526856	Identifier	op		3525239	0					
ANR	3526857	Identifier	operands		3525239	1					
ANR	3526858	PrimaryExpression	0		3525239	1					
ANR	3526859	Identifier	type		3525239	1					
ANR	3526860	Identifier	OT_QWORD		3525239	1					
ANR	3526861	CompoundStatement		239:44:6230:6230	3525239	1					
ANR	3526862	ExpressionStatement	data [ l ++ ] = 0x67	2002:5:52294:52310	3525239	0	True				
ANR	3526863	AssignmentExpression	data [ l ++ ] = 0x67		3525239	0		=			
ANR	3526864	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3526865	Identifier	data		3525239	0					
ANR	3526866	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3526867	Identifier	l		3525239	0					
ANR	3526868	IncDec	++		3525239	1					
ANR	3526869	PrimaryExpression	0x67		3525239	1					
ANR	3526870	ExpressionStatement	data [ l ++ ] = 0x48	2003:5:52317:52333	3525239	1	True				
ANR	3526871	AssignmentExpression	data [ l ++ ] = 0x48		3525239	0		=			
ANR	3526872	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3526873	Identifier	data		3525239	0					
ANR	3526874	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3526875	Identifier	l		3525239	0					
ANR	3526876	IncDec	++		3525239	1					
ANR	3526877	PrimaryExpression	0x48		3525239	1					
ANR	3526878	IfStatement	if ( op -> operands [ 1 ] . type & OT_QWORD && op -> operands [ 0 ] . type & OT_QWORD )		3525239	3					
ANR	3526879	Condition	op -> operands [ 1 ] . type & OT_QWORD && op -> operands [ 0 ] . type & OT_QWORD	2006:7:52353:52422	3525239	0	True				
ANR	3526880	AndExpression	op -> operands [ 1 ] . type & OT_QWORD && op -> operands [ 0 ] . type & OT_QWORD		3525239	0		&&			
ANR	3526881	BitAndExpression	op -> operands [ 1 ] . type & OT_QWORD		3525239	0		&			
ANR	3526882	MemberAccess	op -> operands [ 1 ] . type		3525239	0					
ANR	3526883	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3526884	PtrMemberAccess	op -> operands		3525239	0					
ANR	3526885	Identifier	op		3525239	0					
ANR	3526886	Identifier	operands		3525239	1					
ANR	3526887	PrimaryExpression	1		3525239	1					
ANR	3526888	Identifier	type		3525239	1					
ANR	3526889	Identifier	OT_QWORD		3525239	1					
ANR	3526890	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		3525239	1		&			
ANR	3526891	MemberAccess	op -> operands [ 0 ] . type		3525239	0					
ANR	3526892	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3526893	PtrMemberAccess	op -> operands		3525239	0					
ANR	3526894	Identifier	op		3525239	0					
ANR	3526895	Identifier	operands		3525239	1					
ANR	3526896	PrimaryExpression	0		3525239	1					
ANR	3526897	Identifier	type		3525239	1					
ANR	3526898	Identifier	OT_QWORD		3525239	1					
ANR	3526899	CompoundStatement		245:37:6368:6368	3525239	1					
ANR	3526900	ExpressionStatement	data [ l ++ ] = 0x48 | rex	2008:4:52431:52453	3525239	0	True				
ANR	3526901	AssignmentExpression	data [ l ++ ] = 0x48 | rex		3525239	0		=			
ANR	3526902	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3526903	Identifier	data		3525239	0					
ANR	3526904	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3526905	Identifier	l		3525239	0					
ANR	3526906	IncDec	++		3525239	1					
ANR	3526907	InclusiveOrExpression	0x48 | rex		3525239	1		|			
ANR	3526908	PrimaryExpression	0x48		3525239	0					
ANR	3526909	Identifier	rex		3525239	1					
ANR	3526910	IfStatement	if ( op -> operands [ 1 ] . type & OT_DWORD && op -> operands [ 0 ] . type & OT_DWORD )		3525239	4					
ANR	3526911	Condition	op -> operands [ 1 ] . type & OT_DWORD && op -> operands [ 0 ] . type & OT_DWORD	2010:7:52467:52536	3525239	0	True				
ANR	3526912	AndExpression	op -> operands [ 1 ] . type & OT_DWORD && op -> operands [ 0 ] . type & OT_DWORD		3525239	0		&&			
ANR	3526913	BitAndExpression	op -> operands [ 1 ] . type & OT_DWORD		3525239	0		&			
ANR	3526914	MemberAccess	op -> operands [ 1 ] . type		3525239	0					
ANR	3526915	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3526916	PtrMemberAccess	op -> operands		3525239	0					
ANR	3526917	Identifier	op		3525239	0					
ANR	3526918	Identifier	operands		3525239	1					
ANR	3526919	PrimaryExpression	1		3525239	1					
ANR	3526920	Identifier	type		3525239	1					
ANR	3526921	Identifier	OT_DWORD		3525239	1					
ANR	3526922	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		3525239	1		&			
ANR	3526923	MemberAccess	op -> operands [ 0 ] . type		3525239	0					
ANR	3526924	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3526925	PtrMemberAccess	op -> operands		3525239	0					
ANR	3526926	Identifier	op		3525239	0					
ANR	3526927	Identifier	operands		3525239	1					
ANR	3526928	PrimaryExpression	0		3525239	1					
ANR	3526929	Identifier	type		3525239	1					
ANR	3526930	Identifier	OT_DWORD		3525239	1					
ANR	3526931	CompoundStatement		249:37:6482:6482	3525239	1					
ANR	3526932	ExpressionStatement	data [ l ++ ] = 0x40 | rex	2012:4:52545:52567	3525239	0	True				
ANR	3526933	AssignmentExpression	data [ l ++ ] = 0x40 | rex		3525239	0		=			
ANR	3526934	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3526935	Identifier	data		3525239	0					
ANR	3526936	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3526937	Identifier	l		3525239	0					
ANR	3526938	IncDec	++		3525239	1					
ANR	3526939	InclusiveOrExpression	0x40 | rex		3525239	1		|			
ANR	3526940	PrimaryExpression	0x40		3525239	0					
ANR	3526941	Identifier	rex		3525239	1					
ANR	3526942	ElseStatement	else		3525239	0					
ANR	3526943	IfStatement	if ( op -> operands [ 0 ] . extended && op -> operands [ 1 ] . extended )		3525239	0					
ANR	3526944	Condition	op -> operands [ 0 ] . extended && op -> operands [ 1 ] . extended	2014:13:52587:52638	3525239	0	True				
ANR	3526945	AndExpression	op -> operands [ 0 ] . extended && op -> operands [ 1 ] . extended		3525239	0		&&			
ANR	3526946	MemberAccess	op -> operands [ 0 ] . extended		3525239	0					
ANR	3526947	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3526948	PtrMemberAccess	op -> operands		3525239	0					
ANR	3526949	Identifier	op		3525239	0					
ANR	3526950	Identifier	operands		3525239	1					
ANR	3526951	PrimaryExpression	0		3525239	1					
ANR	3526952	Identifier	extended		3525239	1					
ANR	3526953	MemberAccess	op -> operands [ 1 ] . extended		3525239	1					
ANR	3526954	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3526955	PtrMemberAccess	op -> operands		3525239	0					
ANR	3526956	Identifier	op		3525239	0					
ANR	3526957	Identifier	operands		3525239	1					
ANR	3526958	PrimaryExpression	1		3525239	1					
ANR	3526959	Identifier	extended		3525239	1					
ANR	3526960	CompoundStatement		252:67:6584:6584	3525239	1					
ANR	3526961	ExpressionStatement	data [ l ++ ] = 0x45	2015:3:52646:52662	3525239	0	True				
ANR	3526962	AssignmentExpression	data [ l ++ ] = 0x45		3525239	0		=			
ANR	3526963	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3526964	Identifier	data		3525239	0					
ANR	3526965	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3526966	Identifier	l		3525239	0					
ANR	3526967	IncDec	++		3525239	1					
ANR	3526968	PrimaryExpression	0x45		3525239	1					
ANR	3526969	ExpressionStatement	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign	2017:2:52670:52731	3525239	6	True				
ANR	3526970	AssignmentExpression	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		3525239	0		=			
ANR	3526971	Identifier	offset		3525239	0					
ANR	3526972	MultiplicativeExpression	op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		3525239	1		*			
ANR	3526973	MemberAccess	op -> operands [ 0 ] . offset		3525239	0					
ANR	3526974	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3526975	PtrMemberAccess	op -> operands		3525239	0					
ANR	3526976	Identifier	op		3525239	0					
ANR	3526977	Identifier	operands		3525239	1					
ANR	3526978	PrimaryExpression	0		3525239	1					
ANR	3526979	Identifier	offset		3525239	1					
ANR	3526980	MemberAccess	op -> operands [ 0 ] . offset_sign		3525239	1					
ANR	3526981	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3526982	PtrMemberAccess	op -> operands		3525239	0					
ANR	3526983	Identifier	op		3525239	0					
ANR	3526984	Identifier	operands		3525239	1					
ANR	3526985	PrimaryExpression	0		3525239	1					
ANR	3526986	Identifier	offset_sign		3525239	1					
ANR	3526987	IfStatement	if ( op -> operands [ 1 ] . type & OT_REGTYPE & OT_SEGMENTREG )		3525239	7					
ANR	3526988	Condition	op -> operands [ 1 ] . type & OT_REGTYPE & OT_SEGMENTREG	2018:6:52739:52787	3525239	0	True				
ANR	3526989	BitAndExpression	op -> operands [ 1 ] . type & OT_REGTYPE & OT_SEGMENTREG		3525239	0		&			
ANR	3526990	MemberAccess	op -> operands [ 1 ] . type		3525239	0					
ANR	3526991	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3526992	PtrMemberAccess	op -> operands		3525239	0					
ANR	3526993	Identifier	op		3525239	0					
ANR	3526994	Identifier	operands		3525239	1					
ANR	3526995	PrimaryExpression	1		3525239	1					
ANR	3526996	Identifier	type		3525239	1					
ANR	3526997	BitAndExpression	OT_REGTYPE & OT_SEGMENTREG		3525239	1		&			
ANR	3526998	Identifier	OT_REGTYPE		3525239	0					
ANR	3526999	Identifier	OT_SEGMENTREG		3525239	1					
ANR	3527000	CompoundStatement		256:57:6733:6733	3525239	1					
ANR	3527001	ExpressionStatement	data [ l ++ ] = 0x8c	2019:3:52795:52811	3525239	0	True				
ANR	3527002	AssignmentExpression	data [ l ++ ] = 0x8c		3525239	0		=			
ANR	3527003	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3527004	Identifier	data		3525239	0					
ANR	3527005	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3527006	Identifier	l		3525239	0					
ANR	3527007	IncDec	++		3525239	1					
ANR	3527008	PrimaryExpression	0x8c		3525239	1					
ANR	3527009	ElseStatement	else		3525239	0					
ANR	3527010	IfStatement	if ( is_debug_or_control ( op -> operands [ 0 ] ) )		3525239	0					
ANR	3527011	Condition	is_debug_or_control ( op -> operands [ 0 ] )	2020:13:52826:52862	3525239	0	True				
ANR	3527012	CallExpression	is_debug_or_control ( op -> operands [ 0 ] )		3525239	0					
ANR	3527013	Callee	is_debug_or_control		3525239	0					
ANR	3527014	Identifier	is_debug_or_control		3525239	0					
ANR	3527015	ArgumentList	op -> operands [ 0 ]		3525239	1					
ANR	3527016	Argument	op -> operands [ 0 ]		3525239	0					
ANR	3527017	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3527018	PtrMemberAccess	op -> operands		3525239	0					
ANR	3527019	Identifier	op		3525239	0					
ANR	3527020	Identifier	operands		3525239	1					
ANR	3527021	PrimaryExpression	0		3525239	1					
ANR	3527022	CompoundStatement		258:52:6808:6808	3525239	1					
ANR	3527023	ExpressionStatement	data [ l ++ ] = 0x0f	2021:3:52870:52886	3525239	0	True				
ANR	3527024	AssignmentExpression	data [ l ++ ] = 0x0f		3525239	0		=			
ANR	3527025	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3527026	Identifier	data		3525239	0					
ANR	3527027	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3527028	Identifier	l		3525239	0					
ANR	3527029	IncDec	++		3525239	1					
ANR	3527030	PrimaryExpression	0x0f		3525239	1					
ANR	3527031	IfStatement	if ( op -> operands [ 0 ] . type & OT_REGTYPE & OT_DEBUGREG )		3525239	1					
ANR	3527032	Condition	op -> operands [ 0 ] . type & OT_REGTYPE & OT_DEBUGREG	2022:7:52895:52941	3525239	0	True				
ANR	3527033	BitAndExpression	op -> operands [ 0 ] . type & OT_REGTYPE & OT_DEBUGREG		3525239	0		&			
ANR	3527034	MemberAccess	op -> operands [ 0 ] . type		3525239	0					
ANR	3527035	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3527036	PtrMemberAccess	op -> operands		3525239	0					
ANR	3527037	Identifier	op		3525239	0					
ANR	3527038	Identifier	operands		3525239	1					
ANR	3527039	PrimaryExpression	0		3525239	1					
ANR	3527040	Identifier	type		3525239	1					
ANR	3527041	BitAndExpression	OT_REGTYPE & OT_DEBUGREG		3525239	1		&			
ANR	3527042	Identifier	OT_REGTYPE		3525239	0					
ANR	3527043	Identifier	OT_DEBUGREG		3525239	1					
ANR	3527044	CompoundStatement		260:56:6887:6887	3525239	1					
ANR	3527045	ExpressionStatement	data [ l ++ ] = 0x23	2023:4:52950:52966	3525239	0	True				
ANR	3527046	AssignmentExpression	data [ l ++ ] = 0x23		3525239	0		=			
ANR	3527047	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3527048	Identifier	data		3525239	0					
ANR	3527049	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3527050	Identifier	l		3525239	0					
ANR	3527051	IncDec	++		3525239	1					
ANR	3527052	PrimaryExpression	0x23		3525239	1					
ANR	3527053	ElseStatement	else		3525239	0					
ANR	3527054	CompoundStatement		262:10:6921:6921	3525239	0					
ANR	3527055	ExpressionStatement	data [ l ++ ] = 0x22	2025:4:52984:53000	3525239	0	True				
ANR	3527056	AssignmentExpression	data [ l ++ ] = 0x22		3525239	0		=			
ANR	3527057	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3527058	Identifier	data		3525239	0					
ANR	3527059	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3527060	Identifier	l		3525239	0					
ANR	3527061	IncDec	++		3525239	1					
ANR	3527062	PrimaryExpression	0x22		3525239	1					
ANR	3527063	ElseStatement	else		3525239	0					
ANR	3527064	IfStatement	if ( is_debug_or_control ( op -> operands [ 1 ] ) )		3525239	0					
ANR	3527065	Condition	is_debug_or_control ( op -> operands [ 1 ] )	2027:13:53020:53055	3525239	0	True				
ANR	3527066	CallExpression	is_debug_or_control ( op -> operands [ 1 ] )		3525239	0					
ANR	3527067	Callee	is_debug_or_control		3525239	0					
ANR	3527068	Identifier	is_debug_or_control		3525239	0					
ANR	3527069	ArgumentList	op -> operands [ 1 ]		3525239	1					
ANR	3527070	Argument	op -> operands [ 1 ]		3525239	0					
ANR	3527071	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3527072	PtrMemberAccess	op -> operands		3525239	0					
ANR	3527073	Identifier	op		3525239	0					
ANR	3527074	Identifier	operands		3525239	1					
ANR	3527075	PrimaryExpression	1		3525239	1					
ANR	3527076	CompoundStatement		265:51:7001:7001	3525239	1					
ANR	3527077	ExpressionStatement	data [ l ++ ] = 0x0f	2028:3:53063:53079	3525239	0	True				
ANR	3527078	AssignmentExpression	data [ l ++ ] = 0x0f		3525239	0		=			
ANR	3527079	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3527080	Identifier	data		3525239	0					
ANR	3527081	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3527082	Identifier	l		3525239	0					
ANR	3527083	IncDec	++		3525239	1					
ANR	3527084	PrimaryExpression	0x0f		3525239	1					
ANR	3527085	IfStatement	if ( op -> operands [ 1 ] . type & OT_REGTYPE & OT_DEBUGREG )		3525239	1					
ANR	3527086	Condition	op -> operands [ 1 ] . type & OT_REGTYPE & OT_DEBUGREG	2029:7:53088:53134	3525239	0	True				
ANR	3527087	BitAndExpression	op -> operands [ 1 ] . type & OT_REGTYPE & OT_DEBUGREG		3525239	0		&			
ANR	3527088	MemberAccess	op -> operands [ 1 ] . type		3525239	0					
ANR	3527089	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3527090	PtrMemberAccess	op -> operands		3525239	0					
ANR	3527091	Identifier	op		3525239	0					
ANR	3527092	Identifier	operands		3525239	1					
ANR	3527093	PrimaryExpression	1		3525239	1					
ANR	3527094	Identifier	type		3525239	1					
ANR	3527095	BitAndExpression	OT_REGTYPE & OT_DEBUGREG		3525239	1		&			
ANR	3527096	Identifier	OT_REGTYPE		3525239	0					
ANR	3527097	Identifier	OT_DEBUGREG		3525239	1					
ANR	3527098	CompoundStatement		267:56:7080:7080	3525239	1					
ANR	3527099	ExpressionStatement	data [ l ++ ] = 0x21	2030:4:53143:53159	3525239	0	True				
ANR	3527100	AssignmentExpression	data [ l ++ ] = 0x21		3525239	0		=			
ANR	3527101	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3527102	Identifier	data		3525239	0					
ANR	3527103	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3527104	Identifier	l		3525239	0					
ANR	3527105	IncDec	++		3525239	1					
ANR	3527106	PrimaryExpression	0x21		3525239	1					
ANR	3527107	ElseStatement	else		3525239	0					
ANR	3527108	CompoundStatement		269:10:7114:7114	3525239	0					
ANR	3527109	ExpressionStatement	data [ l ++ ] = 0x20	2032:4:53177:53193	3525239	0	True				
ANR	3527110	AssignmentExpression	data [ l ++ ] = 0x20		3525239	0		=			
ANR	3527111	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3527112	Identifier	data		3525239	0					
ANR	3527113	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3527114	Identifier	l		3525239	0					
ANR	3527115	IncDec	++		3525239	1					
ANR	3527116	PrimaryExpression	0x20		3525239	1					
ANR	3527117	ElseStatement	else		3525239	0					
ANR	3527118	CompoundStatement		272:9:7152:7152	3525239	0					
ANR	3527119	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		3525239	0					
ANR	3527120	Condition	op -> operands [ 0 ] . type & OT_WORD	2035:7:53218:53247	3525239	0	True				
ANR	3527121	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		3525239	0		&			
ANR	3527122	MemberAccess	op -> operands [ 0 ] . type		3525239	0					
ANR	3527123	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3527124	PtrMemberAccess	op -> operands		3525239	0					
ANR	3527125	Identifier	op		3525239	0					
ANR	3527126	Identifier	operands		3525239	1					
ANR	3527127	PrimaryExpression	0		3525239	1					
ANR	3527128	Identifier	type		3525239	1					
ANR	3527129	Identifier	OT_WORD		3525239	1					
ANR	3527130	CompoundStatement		273:39:7193:7193	3525239	1					
ANR	3527131	ExpressionStatement	data [ l ++ ] = 0x66	2036:4:53256:53272	3525239	0	True				
ANR	3527132	AssignmentExpression	data [ l ++ ] = 0x66		3525239	0		=			
ANR	3527133	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3527134	Identifier	data		3525239	0					
ANR	3527135	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3527136	Identifier	l		3525239	0					
ANR	3527137	IncDec	++		3525239	1					
ANR	3527138	PrimaryExpression	0x66		3525239	1					
ANR	3527139	ExpressionStatement	data [ l ++ ] = ( op -> operands [ 0 ] . type & OT_BYTE ) ? 0x88 : 0x89	2038:3:53282:53340	3525239	1	True				
ANR	3527140	AssignmentExpression	data [ l ++ ] = ( op -> operands [ 0 ] . type & OT_BYTE ) ? 0x88 : 0x89		3525239	0		=			
ANR	3527141	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3527142	Identifier	data		3525239	0					
ANR	3527143	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3527144	Identifier	l		3525239	0					
ANR	3527145	IncDec	++		3525239	1					
ANR	3527146	ConditionalExpression	( op -> operands [ 0 ] . type & OT_BYTE ) ? 0x88 : 0x89		3525239	1					
ANR	3527147	Condition	op -> operands [ 0 ] . type & OT_BYTE		3525239	0					
ANR	3527148	BitAndExpression	op -> operands [ 0 ] . type & OT_BYTE		3525239	0		&			
ANR	3527149	MemberAccess	op -> operands [ 0 ] . type		3525239	0					
ANR	3527150	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3527151	PtrMemberAccess	op -> operands		3525239	0					
ANR	3527152	Identifier	op		3525239	0					
ANR	3527153	Identifier	operands		3525239	1					
ANR	3527154	PrimaryExpression	0		3525239	1					
ANR	3527155	Identifier	type		3525239	1					
ANR	3527156	Identifier	OT_BYTE		3525239	1					
ANR	3527157	PrimaryExpression	0x88		3525239	1					
ANR	3527158	PrimaryExpression	0x89		3525239	2					
ANR	3527159	IfStatement	if ( op -> operands [ 0 ] . scale [ 0 ] > 1 )		3525239	8					
ANR	3527160	Condition	op -> operands [ 0 ] . scale [ 0 ] > 1	2041:6:53353:53380	3525239	0	True				
ANR	3527161	RelationalExpression	op -> operands [ 0 ] . scale [ 0 ] > 1		3525239	0		>			
ANR	3527162	ArrayIndexing	op -> operands [ 0 ] . scale [ 0 ]		3525239	0					
ANR	3527163	MemberAccess	op -> operands [ 0 ] . scale		3525239	0					
ANR	3527164	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3527165	PtrMemberAccess	op -> operands		3525239	0					
ANR	3527166	Identifier	op		3525239	0					
ANR	3527167	Identifier	operands		3525239	1					
ANR	3527168	PrimaryExpression	0		3525239	1					
ANR	3527169	Identifier	scale		3525239	1					
ANR	3527170	PrimaryExpression	0		3525239	1					
ANR	3527171	PrimaryExpression	1		3525239	1					
ANR	3527172	CompoundStatement		279:36:7326:7326	3525239	1					
ANR	3527173	ExpressionStatement	data [ l ++ ] = op -> operands [ 1 ] . reg << 3 | 4	2042:4:53389:53429	3525239	0	True				
ANR	3527174	AssignmentExpression	data [ l ++ ] = op -> operands [ 1 ] . reg << 3 | 4		3525239	0		=			
ANR	3527175	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3527176	Identifier	data		3525239	0					
ANR	3527177	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3527178	Identifier	l		3525239	0					
ANR	3527179	IncDec	++		3525239	1					
ANR	3527180	InclusiveOrExpression	op -> operands [ 1 ] . reg << 3 | 4		3525239	1		|			
ANR	3527181	ShiftExpression	op -> operands [ 1 ] . reg << 3		3525239	0		<<			
ANR	3527182	MemberAccess	op -> operands [ 1 ] . reg		3525239	0					
ANR	3527183	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3527184	PtrMemberAccess	op -> operands		3525239	0					
ANR	3527185	Identifier	op		3525239	0					
ANR	3527186	Identifier	operands		3525239	1					
ANR	3527187	PrimaryExpression	1		3525239	1					
ANR	3527188	Identifier	reg		3525239	1					
ANR	3527189	PrimaryExpression	3		3525239	1					
ANR	3527190	PrimaryExpression	4		3525239	1					
ANR	3527191	ExpressionStatement	data [ l ++ ] = getsib ( op -> operands [ 0 ] . scale [ 0 ] ) << 6 | op -> operands [ 0 ] . regs [ 0 ] << 3 | 5	2043:4:53435:53530	3525239	1	True				
ANR	3527192	AssignmentExpression	data [ l ++ ] = getsib ( op -> operands [ 0 ] . scale [ 0 ] ) << 6 | op -> operands [ 0 ] . regs [ 0 ] << 3 | 5		3525239	0		=			
ANR	3527193	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3527194	Identifier	data		3525239	0					
ANR	3527195	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3527196	Identifier	l		3525239	0					
ANR	3527197	IncDec	++		3525239	1					
ANR	3527198	InclusiveOrExpression	getsib ( op -> operands [ 0 ] . scale [ 0 ] ) << 6 | op -> operands [ 0 ] . regs [ 0 ] << 3 | 5		3525239	1		|			
ANR	3527199	ShiftExpression	getsib ( op -> operands [ 0 ] . scale [ 0 ] ) << 6		3525239	0		<<			
ANR	3527200	CallExpression	getsib ( op -> operands [ 0 ] . scale [ 0 ] )		3525239	0					
ANR	3527201	Callee	getsib		3525239	0					
ANR	3527202	Identifier	getsib		3525239	0					
ANR	3527203	ArgumentList	op -> operands [ 0 ] . scale [ 0 ]		3525239	1					
ANR	3527204	Argument	op -> operands [ 0 ] . scale [ 0 ]		3525239	0					
ANR	3527205	ArrayIndexing	op -> operands [ 0 ] . scale [ 0 ]		3525239	0					
ANR	3527206	MemberAccess	op -> operands [ 0 ] . scale		3525239	0					
ANR	3527207	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3527208	PtrMemberAccess	op -> operands		3525239	0					
ANR	3527209	Identifier	op		3525239	0					
ANR	3527210	Identifier	operands		3525239	1					
ANR	3527211	PrimaryExpression	0		3525239	1					
ANR	3527212	Identifier	scale		3525239	1					
ANR	3527213	PrimaryExpression	0		3525239	1					
ANR	3527214	PrimaryExpression	6		3525239	1					
ANR	3527215	InclusiveOrExpression	op -> operands [ 0 ] . regs [ 0 ] << 3 | 5		3525239	1		|			
ANR	3527216	ShiftExpression	op -> operands [ 0 ] . regs [ 0 ] << 3		3525239	0		<<			
ANR	3527217	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3525239	0					
ANR	3527218	MemberAccess	op -> operands [ 0 ] . regs		3525239	0					
ANR	3527219	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3527220	PtrMemberAccess	op -> operands		3525239	0					
ANR	3527221	Identifier	op		3525239	0					
ANR	3527222	Identifier	operands		3525239	1					
ANR	3527223	PrimaryExpression	0		3525239	1					
ANR	3527224	Identifier	regs		3525239	1					
ANR	3527225	PrimaryExpression	0		3525239	1					
ANR	3527226	PrimaryExpression	3		3525239	1					
ANR	3527227	PrimaryExpression	5		3525239	1					
ANR	3527228	ExpressionStatement	data [ l ++ ] = offset	2046:4:53537:53555	3525239	2	True				
ANR	3527229	AssignmentExpression	data [ l ++ ] = offset		3525239	0		=			
ANR	3527230	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3527231	Identifier	data		3525239	0					
ANR	3527232	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3527233	Identifier	l		3525239	0					
ANR	3527234	IncDec	++		3525239	1					
ANR	3527235	Identifier	offset		3525239	1					
ANR	3527236	ExpressionStatement	data [ l ++ ] = offset >> 8	2047:4:53561:53584	3525239	3	True				
ANR	3527237	AssignmentExpression	data [ l ++ ] = offset >> 8		3525239	0		=			
ANR	3527238	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3527239	Identifier	data		3525239	0					
ANR	3527240	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3527241	Identifier	l		3525239	0					
ANR	3527242	IncDec	++		3525239	1					
ANR	3527243	ShiftExpression	offset >> 8		3525239	1		>>			
ANR	3527244	Identifier	offset		3525239	0					
ANR	3527245	PrimaryExpression	8		3525239	1					
ANR	3527246	ExpressionStatement	data [ l ++ ] = offset >> 16	2048:4:53590:53614	3525239	4	True				
ANR	3527247	AssignmentExpression	data [ l ++ ] = offset >> 16		3525239	0		=			
ANR	3527248	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3527249	Identifier	data		3525239	0					
ANR	3527250	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3527251	Identifier	l		3525239	0					
ANR	3527252	IncDec	++		3525239	1					
ANR	3527253	ShiftExpression	offset >> 16		3525239	1		>>			
ANR	3527254	Identifier	offset		3525239	0					
ANR	3527255	PrimaryExpression	16		3525239	1					
ANR	3527256	ExpressionStatement	data [ l ++ ] = offset >> 24	2049:4:53620:53644	3525239	5	True				
ANR	3527257	AssignmentExpression	data [ l ++ ] = offset >> 24		3525239	0		=			
ANR	3527258	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3527259	Identifier	data		3525239	0					
ANR	3527260	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3527261	Identifier	l		3525239	0					
ANR	3527262	IncDec	++		3525239	1					
ANR	3527263	ShiftExpression	offset >> 24		3525239	1		>>			
ANR	3527264	Identifier	offset		3525239	0					
ANR	3527265	PrimaryExpression	24		3525239	1					
ANR	3527266	ReturnStatement	return l ;	2051:4:53651:53659	3525239	6	True				
ANR	3527267	Identifier	l		3525239	0					
ANR	3527268	IfStatement	if ( ! ( op -> operands [ 0 ] . type & OT_MEMORY ) )		3525239	9					
ANR	3527269	Condition	! ( op -> operands [ 0 ] . type & OT_MEMORY )	2054:6:53673:53707	3525239	0	True				
ANR	3527270	UnaryOperationExpression	! ( op -> operands [ 0 ] . type & OT_MEMORY )		3525239	0					
ANR	3527271	UnaryOperator	!		3525239	0					
ANR	3527272	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3525239	1		&			
ANR	3527273	MemberAccess	op -> operands [ 0 ] . type		3525239	0					
ANR	3527274	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3527275	PtrMemberAccess	op -> operands		3525239	0					
ANR	3527276	Identifier	op		3525239	0					
ANR	3527277	Identifier	operands		3525239	1					
ANR	3527278	PrimaryExpression	0		3525239	1					
ANR	3527279	Identifier	type		3525239	1					
ANR	3527280	Identifier	OT_MEMORY		3525239	1					
ANR	3527281	CompoundStatement		292:43:7653:7653	3525239	1					
ANR	3527282	IfStatement	if ( op -> operands [ 0 ] . reg == X86R_UNDEFINED || op -> operands [ 1 ] . reg == X86R_UNDEFINED )		3525239	0					
ANR	3527283	Condition	op -> operands [ 0 ] . reg == X86R_UNDEFINED || op -> operands [ 1 ] . reg == X86R_UNDEFINED	2055:7:53719:53800	3525239	0	True				
ANR	3527284	OrExpression	op -> operands [ 0 ] . reg == X86R_UNDEFINED || op -> operands [ 1 ] . reg == X86R_UNDEFINED		3525239	0		||			
ANR	3527285	EqualityExpression	op -> operands [ 0 ] . reg == X86R_UNDEFINED		3525239	0		==			
ANR	3527286	MemberAccess	op -> operands [ 0 ] . reg		3525239	0					
ANR	3527287	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3527288	PtrMemberAccess	op -> operands		3525239	0					
ANR	3527289	Identifier	op		3525239	0					
ANR	3527290	Identifier	operands		3525239	1					
ANR	3527291	PrimaryExpression	0		3525239	1					
ANR	3527292	Identifier	reg		3525239	1					
ANR	3527293	Identifier	X86R_UNDEFINED		3525239	1					
ANR	3527294	EqualityExpression	op -> operands [ 1 ] . reg == X86R_UNDEFINED		3525239	1		==			
ANR	3527295	MemberAccess	op -> operands [ 1 ] . reg		3525239	0					
ANR	3527296	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3527297	PtrMemberAccess	op -> operands		3525239	0					
ANR	3527298	Identifier	op		3525239	0					
ANR	3527299	Identifier	operands		3525239	1					
ANR	3527300	PrimaryExpression	1		3525239	1					
ANR	3527301	Identifier	reg		3525239	1					
ANR	3527302	Identifier	X86R_UNDEFINED		3525239	1					
ANR	3527303	CompoundStatement		294:43:7746:7746	3525239	1					
ANR	3527304	ReturnStatement	return - 1 ;	2057:4:53809:53818	3525239	0	True				
ANR	3527305	UnaryOperationExpression	- 1		3525239	0					
ANR	3527306	UnaryOperator	-		3525239	0					
ANR	3527307	PrimaryExpression	1		3525239	1					
ANR	3527308	ExpressionStatement	mod = 0x3	2059:3:53828:53837	3525239	1	True				
ANR	3527309	AssignmentExpression	mod = 0x3		3525239	0		=			
ANR	3527310	Identifier	mod		3525239	0					
ANR	3527311	PrimaryExpression	0x3		3525239	1					
ANR	3527312	ExpressionStatement	data [ l ++ ] = ( is_debug_or_control ( op -> operands [ 0 ] ) ) ? mod << 6 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . reg : mod << 6 | op -> operands [ 1 ] . reg << 3 | op -> operands [ 0 ] . reg	2060:3:53842:54021	3525239	2	True				
ANR	3527313	AssignmentExpression	data [ l ++ ] = ( is_debug_or_control ( op -> operands [ 0 ] ) ) ? mod << 6 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . reg : mod << 6 | op -> operands [ 1 ] . reg << 3 | op -> operands [ 0 ] . reg		3525239	0		=			
ANR	3527314	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3527315	Identifier	data		3525239	0					
ANR	3527316	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3527317	Identifier	l		3525239	0					
ANR	3527318	IncDec	++		3525239	1					
ANR	3527319	ConditionalExpression	( is_debug_or_control ( op -> operands [ 0 ] ) ) ? mod << 6 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . reg : mod << 6 | op -> operands [ 1 ] . reg << 3 | op -> operands [ 0 ] . reg		3525239	1					
ANR	3527320	Condition	is_debug_or_control ( op -> operands [ 0 ] )		3525239	0					
ANR	3527321	CallExpression	is_debug_or_control ( op -> operands [ 0 ] )		3525239	0					
ANR	3527322	Callee	is_debug_or_control		3525239	0					
ANR	3527323	Identifier	is_debug_or_control		3525239	0					
ANR	3527324	ArgumentList	op -> operands [ 0 ]		3525239	1					
ANR	3527325	Argument	op -> operands [ 0 ]		3525239	0					
ANR	3527326	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3527327	PtrMemberAccess	op -> operands		3525239	0					
ANR	3527328	Identifier	op		3525239	0					
ANR	3527329	Identifier	operands		3525239	1					
ANR	3527330	PrimaryExpression	0		3525239	1					
ANR	3527331	InclusiveOrExpression	mod << 6 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . reg		3525239	1		|			
ANR	3527332	ShiftExpression	mod << 6		3525239	0		<<			
ANR	3527333	Identifier	mod		3525239	0					
ANR	3527334	PrimaryExpression	6		3525239	1					
ANR	3527335	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . reg		3525239	1		|			
ANR	3527336	ShiftExpression	op -> operands [ 0 ] . reg << 3		3525239	0		<<			
ANR	3527337	MemberAccess	op -> operands [ 0 ] . reg		3525239	0					
ANR	3527338	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3527339	PtrMemberAccess	op -> operands		3525239	0					
ANR	3527340	Identifier	op		3525239	0					
ANR	3527341	Identifier	operands		3525239	1					
ANR	3527342	PrimaryExpression	0		3525239	1					
ANR	3527343	Identifier	reg		3525239	1					
ANR	3527344	PrimaryExpression	3		3525239	1					
ANR	3527345	MemberAccess	op -> operands [ 1 ] . reg		3525239	1					
ANR	3527346	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3527347	PtrMemberAccess	op -> operands		3525239	0					
ANR	3527348	Identifier	op		3525239	0					
ANR	3527349	Identifier	operands		3525239	1					
ANR	3527350	PrimaryExpression	1		3525239	1					
ANR	3527351	Identifier	reg		3525239	1					
ANR	3527352	InclusiveOrExpression	mod << 6 | op -> operands [ 1 ] . reg << 3 | op -> operands [ 0 ] . reg		3525239	2		|			
ANR	3527353	ShiftExpression	mod << 6		3525239	0		<<			
ANR	3527354	Identifier	mod		3525239	0					
ANR	3527355	PrimaryExpression	6		3525239	1					
ANR	3527356	InclusiveOrExpression	op -> operands [ 1 ] . reg << 3 | op -> operands [ 0 ] . reg		3525239	1		|			
ANR	3527357	ShiftExpression	op -> operands [ 1 ] . reg << 3		3525239	0		<<			
ANR	3527358	MemberAccess	op -> operands [ 1 ] . reg		3525239	0					
ANR	3527359	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3527360	PtrMemberAccess	op -> operands		3525239	0					
ANR	3527361	Identifier	op		3525239	0					
ANR	3527362	Identifier	operands		3525239	1					
ANR	3527363	PrimaryExpression	1		3525239	1					
ANR	3527364	Identifier	reg		3525239	1					
ANR	3527365	PrimaryExpression	3		3525239	1					
ANR	3527366	MemberAccess	op -> operands [ 0 ] . reg		3525239	1					
ANR	3527367	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3527368	PtrMemberAccess	op -> operands		3525239	0					
ANR	3527369	Identifier	op		3525239	0					
ANR	3527370	Identifier	operands		3525239	1					
ANR	3527371	PrimaryExpression	0		3525239	1					
ANR	3527372	Identifier	reg		3525239	1					
ANR	3527373	ElseStatement	else		3525239	0					
ANR	3527374	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_UNDEFINED )		3525239	0					
ANR	3527375	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_UNDEFINED	2063:13:54036:54076	3525239	0	True				
ANR	3527376	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_UNDEFINED		3525239	0		==			
ANR	3527377	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3525239	0					
ANR	3527378	MemberAccess	op -> operands [ 0 ] . regs		3525239	0					
ANR	3527379	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3527380	PtrMemberAccess	op -> operands		3525239	0					
ANR	3527381	Identifier	op		3525239	0					
ANR	3527382	Identifier	operands		3525239	1					
ANR	3527383	PrimaryExpression	0		3525239	1					
ANR	3527384	Identifier	regs		3525239	1					
ANR	3527385	PrimaryExpression	0		3525239	1					
ANR	3527386	Identifier	X86R_UNDEFINED		3525239	1					
ANR	3527387	CompoundStatement		301:56:8022:8022	3525239	1					
ANR	3527388	ExpressionStatement	data [ l ++ ] = op -> operands [ 1 ] . reg << 3 | 0x5	2064:3:54084:54126	3525239	0	True				
ANR	3527389	AssignmentExpression	data [ l ++ ] = op -> operands [ 1 ] . reg << 3 | 0x5		3525239	0		=			
ANR	3527390	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3527391	Identifier	data		3525239	0					
ANR	3527392	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3527393	Identifier	l		3525239	0					
ANR	3527394	IncDec	++		3525239	1					
ANR	3527395	InclusiveOrExpression	op -> operands [ 1 ] . reg << 3 | 0x5		3525239	1		|			
ANR	3527396	ShiftExpression	op -> operands [ 1 ] . reg << 3		3525239	0		<<			
ANR	3527397	MemberAccess	op -> operands [ 1 ] . reg		3525239	0					
ANR	3527398	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3527399	PtrMemberAccess	op -> operands		3525239	0					
ANR	3527400	Identifier	op		3525239	0					
ANR	3527401	Identifier	operands		3525239	1					
ANR	3527402	PrimaryExpression	1		3525239	1					
ANR	3527403	Identifier	reg		3525239	1					
ANR	3527404	PrimaryExpression	3		3525239	1					
ANR	3527405	PrimaryExpression	0x5		3525239	1					
ANR	3527406	ExpressionStatement	data [ l ++ ] = offset	2065:3:54131:54149	3525239	1	True				
ANR	3527407	AssignmentExpression	data [ l ++ ] = offset		3525239	0		=			
ANR	3527408	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3527409	Identifier	data		3525239	0					
ANR	3527410	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3527411	Identifier	l		3525239	0					
ANR	3527412	IncDec	++		3525239	1					
ANR	3527413	Identifier	offset		3525239	1					
ANR	3527414	ExpressionStatement	data [ l ++ ] = offset >> 8	2066:3:54154:54177	3525239	2	True				
ANR	3527415	AssignmentExpression	data [ l ++ ] = offset >> 8		3525239	0		=			
ANR	3527416	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3527417	Identifier	data		3525239	0					
ANR	3527418	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3527419	Identifier	l		3525239	0					
ANR	3527420	IncDec	++		3525239	1					
ANR	3527421	ShiftExpression	offset >> 8		3525239	1		>>			
ANR	3527422	Identifier	offset		3525239	0					
ANR	3527423	PrimaryExpression	8		3525239	1					
ANR	3527424	ExpressionStatement	data [ l ++ ] = offset >> 16	2067:3:54182:54206	3525239	3	True				
ANR	3527425	AssignmentExpression	data [ l ++ ] = offset >> 16		3525239	0		=			
ANR	3527426	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3527427	Identifier	data		3525239	0					
ANR	3527428	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3527429	Identifier	l		3525239	0					
ANR	3527430	IncDec	++		3525239	1					
ANR	3527431	ShiftExpression	offset >> 16		3525239	1		>>			
ANR	3527432	Identifier	offset		3525239	0					
ANR	3527433	PrimaryExpression	16		3525239	1					
ANR	3527434	ExpressionStatement	data [ l ++ ] = offset >> 24	2068:3:54211:54235	3525239	4	True				
ANR	3527435	AssignmentExpression	data [ l ++ ] = offset >> 24		3525239	0		=			
ANR	3527436	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3527437	Identifier	data		3525239	0					
ANR	3527438	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3527439	Identifier	l		3525239	0					
ANR	3527440	IncDec	++		3525239	1					
ANR	3527441	ShiftExpression	offset >> 24		3525239	1		>>			
ANR	3527442	Identifier	offset		3525239	0					
ANR	3527443	PrimaryExpression	24		3525239	1					
ANR	3527444	ElseStatement	else		3525239	0					
ANR	3527445	CompoundStatement		307:9:8189:8189	3525239	0					
ANR	3527446	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3525239	0					
ANR	3527447	Condition	op -> operands [ 0 ] . type & OT_MEMORY	2070:7:54255:54286	3525239	0	True				
ANR	3527448	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3525239	0		&			
ANR	3527449	MemberAccess	op -> operands [ 0 ] . type		3525239	0					
ANR	3527450	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3527451	PtrMemberAccess	op -> operands		3525239	0					
ANR	3527452	Identifier	op		3525239	0					
ANR	3527453	Identifier	operands		3525239	1					
ANR	3527454	PrimaryExpression	0		3525239	1					
ANR	3527455	Identifier	type		3525239	1					
ANR	3527456	Identifier	OT_MEMORY		3525239	1					
ANR	3527457	CompoundStatement		308:41:8232:8232	3525239	1					
ANR	3527458	IfStatement	if ( op -> operands [ 0 ] . regs [ 1 ] != X86R_UNDEFINED )		3525239	0					
ANR	3527459	Condition	op -> operands [ 0 ] . regs [ 1 ] != X86R_UNDEFINED	2071:8:54299:54339	3525239	0	True				
ANR	3527460	EqualityExpression	op -> operands [ 0 ] . regs [ 1 ] != X86R_UNDEFINED		3525239	0		!=			
ANR	3527461	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		3525239	0					
ANR	3527462	MemberAccess	op -> operands [ 0 ] . regs		3525239	0					
ANR	3527463	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3527464	PtrMemberAccess	op -> operands		3525239	0					
ANR	3527465	Identifier	op		3525239	0					
ANR	3527466	Identifier	operands		3525239	1					
ANR	3527467	PrimaryExpression	0		3525239	1					
ANR	3527468	Identifier	regs		3525239	1					
ANR	3527469	PrimaryExpression	1		3525239	1					
ANR	3527470	Identifier	X86R_UNDEFINED		3525239	1					
ANR	3527471	CompoundStatement		309:51:8285:8285	3525239	1					
ANR	3527472	ExpressionStatement	data [ l ++ ] = op -> operands [ 1 ] . reg << 3 | 0x4	2072:5:54349:54391	3525239	0	True				
ANR	3527473	AssignmentExpression	data [ l ++ ] = op -> operands [ 1 ] . reg << 3 | 0x4		3525239	0		=			
ANR	3527474	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3527475	Identifier	data		3525239	0					
ANR	3527476	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3527477	Identifier	l		3525239	0					
ANR	3527478	IncDec	++		3525239	1					
ANR	3527479	InclusiveOrExpression	op -> operands [ 1 ] . reg << 3 | 0x4		3525239	1		|			
ANR	3527480	ShiftExpression	op -> operands [ 1 ] . reg << 3		3525239	0		<<			
ANR	3527481	MemberAccess	op -> operands [ 1 ] . reg		3525239	0					
ANR	3527482	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3527483	PtrMemberAccess	op -> operands		3525239	0					
ANR	3527484	Identifier	op		3525239	0					
ANR	3527485	Identifier	operands		3525239	1					
ANR	3527486	PrimaryExpression	1		3525239	1					
ANR	3527487	Identifier	reg		3525239	1					
ANR	3527488	PrimaryExpression	3		3525239	1					
ANR	3527489	PrimaryExpression	0x4		3525239	1					
ANR	3527490	ExpressionStatement	data [ l ++ ] = op -> operands [ 0 ] . regs [ 1 ] << 3 | op -> operands [ 0 ] . regs [ 0 ]	2073:5:54398:54464	3525239	1	True				
ANR	3527491	AssignmentExpression	data [ l ++ ] = op -> operands [ 0 ] . regs [ 1 ] << 3 | op -> operands [ 0 ] . regs [ 0 ]		3525239	0		=			
ANR	3527492	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3527493	Identifier	data		3525239	0					
ANR	3527494	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3527495	Identifier	l		3525239	0					
ANR	3527496	IncDec	++		3525239	1					
ANR	3527497	InclusiveOrExpression	op -> operands [ 0 ] . regs [ 1 ] << 3 | op -> operands [ 0 ] . regs [ 0 ]		3525239	1		|			
ANR	3527498	ShiftExpression	op -> operands [ 0 ] . regs [ 1 ] << 3		3525239	0		<<			
ANR	3527499	ArrayIndexing	op -> operands [ 0 ] . regs [ 1 ]		3525239	0					
ANR	3527500	MemberAccess	op -> operands [ 0 ] . regs		3525239	0					
ANR	3527501	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3527502	PtrMemberAccess	op -> operands		3525239	0					
ANR	3527503	Identifier	op		3525239	0					
ANR	3527504	Identifier	operands		3525239	1					
ANR	3527505	PrimaryExpression	0		3525239	1					
ANR	3527506	Identifier	regs		3525239	1					
ANR	3527507	PrimaryExpression	1		3525239	1					
ANR	3527508	PrimaryExpression	3		3525239	1					
ANR	3527509	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3525239	1					
ANR	3527510	MemberAccess	op -> operands [ 0 ] . regs		3525239	0					
ANR	3527511	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3527512	PtrMemberAccess	op -> operands		3525239	0					
ANR	3527513	Identifier	op		3525239	0					
ANR	3527514	Identifier	operands		3525239	1					
ANR	3527515	PrimaryExpression	0		3525239	1					
ANR	3527516	Identifier	regs		3525239	1					
ANR	3527517	PrimaryExpression	0		3525239	1					
ANR	3527518	ReturnStatement	return l ;	2074:5:54471:54479	3525239	2	True				
ANR	3527519	Identifier	l		3525239	0					
ANR	3527520	IfStatement	if ( offset )		3525239	1					
ANR	3527521	Condition	offset	2076:8:54495:54500	3525239	0	True				
ANR	3527522	Identifier	offset		3525239	0					
ANR	3527523	CompoundStatement		314:16:8446:8446	3525239	1					
ANR	3527524	ExpressionStatement	mod = ( offset > 128 || offset < - 129 ) ? 0x2 : 0x1	2077:5:54510:54559	3525239	0	True				
ANR	3527525	AssignmentExpression	mod = ( offset > 128 || offset < - 129 ) ? 0x2 : 0x1		3525239	0		=			
ANR	3527526	Identifier	mod		3525239	0					
ANR	3527527	ConditionalExpression	( offset > 128 || offset < - 129 ) ? 0x2 : 0x1		3525239	1					
ANR	3527528	Condition	offset > 128 || offset < - 129		3525239	0					
ANR	3527529	OrExpression	offset > 128 || offset < - 129		3525239	0		||			
ANR	3527530	RelationalExpression	offset > 128		3525239	0		>			
ANR	3527531	Identifier	offset		3525239	0					
ANR	3527532	PrimaryExpression	128		3525239	1					
ANR	3527533	RelationalExpression	offset < - 129		3525239	1		<			
ANR	3527534	Identifier	offset		3525239	0					
ANR	3527535	UnaryOperationExpression	- 129		3525239	1					
ANR	3527536	UnaryOperator	-		3525239	0					
ANR	3527537	PrimaryExpression	129		3525239	1					
ANR	3527538	PrimaryExpression	0x2		3525239	1					
ANR	3527539	PrimaryExpression	0x1		3525239	2					
ANR	3527540	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_EBP )		3525239	2					
ANR	3527541	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_EBP	2079:8:54575:54609	3525239	0	True				
ANR	3527542	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_EBP		3525239	0		==			
ANR	3527543	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3525239	0					
ANR	3527544	MemberAccess	op -> operands [ 0 ] . regs		3525239	0					
ANR	3527545	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3527546	PtrMemberAccess	op -> operands		3525239	0					
ANR	3527547	Identifier	op		3525239	0					
ANR	3527548	Identifier	operands		3525239	1					
ANR	3527549	PrimaryExpression	0		3525239	1					
ANR	3527550	Identifier	regs		3525239	1					
ANR	3527551	PrimaryExpression	0		3525239	1					
ANR	3527552	Identifier	X86R_EBP		3525239	1					
ANR	3527553	CompoundStatement		317:45:8555:8555	3525239	1					
ANR	3527554	ExpressionStatement	mod = 0x2	2080:5:54619:54628	3525239	0	True				
ANR	3527555	AssignmentExpression	mod = 0x2		3525239	0		=			
ANR	3527556	Identifier	mod		3525239	0					
ANR	3527557	PrimaryExpression	0x2		3525239	1					
ANR	3527558	ExpressionStatement	data [ l ++ ] = mod << 6 | op -> operands [ 1 ] . reg << 3 | op -> operands [ 0 ] . regs [ 0 ]	2082:4:54640:54713	3525239	3	True				
ANR	3527559	AssignmentExpression	data [ l ++ ] = mod << 6 | op -> operands [ 1 ] . reg << 3 | op -> operands [ 0 ] . regs [ 0 ]		3525239	0		=			
ANR	3527560	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3527561	Identifier	data		3525239	0					
ANR	3527562	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3527563	Identifier	l		3525239	0					
ANR	3527564	IncDec	++		3525239	1					
ANR	3527565	InclusiveOrExpression	mod << 6 | op -> operands [ 1 ] . reg << 3 | op -> operands [ 0 ] . regs [ 0 ]		3525239	1		|			
ANR	3527566	ShiftExpression	mod << 6		3525239	0		<<			
ANR	3527567	Identifier	mod		3525239	0					
ANR	3527568	PrimaryExpression	6		3525239	1					
ANR	3527569	InclusiveOrExpression	op -> operands [ 1 ] . reg << 3 | op -> operands [ 0 ] . regs [ 0 ]		3525239	1		|			
ANR	3527570	ShiftExpression	op -> operands [ 1 ] . reg << 3		3525239	0		<<			
ANR	3527571	MemberAccess	op -> operands [ 1 ] . reg		3525239	0					
ANR	3527572	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3527573	PtrMemberAccess	op -> operands		3525239	0					
ANR	3527574	Identifier	op		3525239	0					
ANR	3527575	Identifier	operands		3525239	1					
ANR	3527576	PrimaryExpression	1		3525239	1					
ANR	3527577	Identifier	reg		3525239	1					
ANR	3527578	PrimaryExpression	3		3525239	1					
ANR	3527579	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3525239	1					
ANR	3527580	MemberAccess	op -> operands [ 0 ] . regs		3525239	0					
ANR	3527581	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3527582	PtrMemberAccess	op -> operands		3525239	0					
ANR	3527583	Identifier	op		3525239	0					
ANR	3527584	Identifier	operands		3525239	1					
ANR	3527585	PrimaryExpression	0		3525239	1					
ANR	3527586	Identifier	regs		3525239	1					
ANR	3527587	PrimaryExpression	0		3525239	1					
ANR	3527588	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP )		3525239	4					
ANR	3527589	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP	2083:8:54723:54757	3525239	0	True				
ANR	3527590	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP		3525239	0		==			
ANR	3527591	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3525239	0					
ANR	3527592	MemberAccess	op -> operands [ 0 ] . regs		3525239	0					
ANR	3527593	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3527594	PtrMemberAccess	op -> operands		3525239	0					
ANR	3527595	Identifier	op		3525239	0					
ANR	3527596	Identifier	operands		3525239	1					
ANR	3527597	PrimaryExpression	0		3525239	1					
ANR	3527598	Identifier	regs		3525239	1					
ANR	3527599	PrimaryExpression	0		3525239	1					
ANR	3527600	Identifier	X86R_ESP		3525239	1					
ANR	3527601	CompoundStatement		321:45:8703:8703	3525239	1					
ANR	3527602	ExpressionStatement	data [ l ++ ] = 0x24	2084:5:54767:54783	3525239	0	True				
ANR	3527603	AssignmentExpression	data [ l ++ ] = 0x24		3525239	0		=			
ANR	3527604	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3527605	Identifier	data		3525239	0					
ANR	3527606	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3527607	Identifier	l		3525239	0					
ANR	3527608	IncDec	++		3525239	1					
ANR	3527609	PrimaryExpression	0x24		3525239	1					
ANR	3527610	IfStatement	if ( offset )		3525239	5					
ANR	3527611	Condition	offset	2086:8:54799:54804	3525239	0	True				
ANR	3527612	Identifier	offset		3525239	0					
ANR	3527613	CompoundStatement		324:16:8750:8750	3525239	1					
ANR	3527614	ExpressionStatement	data [ l ++ ] = offset	2087:5:54814:54832	3525239	0	True				
ANR	3527615	AssignmentExpression	data [ l ++ ] = offset		3525239	0		=			
ANR	3527616	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3527617	Identifier	data		3525239	0					
ANR	3527618	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3527619	Identifier	l		3525239	0					
ANR	3527620	IncDec	++		3525239	1					
ANR	3527621	Identifier	offset		3525239	1					
ANR	3527622	IfStatement	if ( mod == 2 )		3525239	6					
ANR	3527623	Condition	mod == 2	2089:8:54848:54855	3525239	0	True				
ANR	3527624	EqualityExpression	mod == 2		3525239	0		==			
ANR	3527625	Identifier	mod		3525239	0					
ANR	3527626	PrimaryExpression	2		3525239	1					
ANR	3527627	CompoundStatement		327:18:8801:8801	3525239	1					
ANR	3527628	ExpressionStatement	data [ l ++ ] = offset >> 8	2091:5:54946:54969	3525239	0	True				
ANR	3527629	AssignmentExpression	data [ l ++ ] = offset >> 8		3525239	0		=			
ANR	3527630	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3527631	Identifier	data		3525239	0					
ANR	3527632	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3527633	Identifier	l		3525239	0					
ANR	3527634	IncDec	++		3525239	1					
ANR	3527635	ShiftExpression	offset >> 8		3525239	1		>>			
ANR	3527636	Identifier	offset		3525239	0					
ANR	3527637	PrimaryExpression	8		3525239	1					
ANR	3527638	ExpressionStatement	data [ l ++ ] = offset >> 16	2092:5:54976:55000	3525239	1	True				
ANR	3527639	AssignmentExpression	data [ l ++ ] = offset >> 16		3525239	0		=			
ANR	3527640	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3527641	Identifier	data		3525239	0					
ANR	3527642	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3527643	Identifier	l		3525239	0					
ANR	3527644	IncDec	++		3525239	1					
ANR	3527645	ShiftExpression	offset >> 16		3525239	1		>>			
ANR	3527646	Identifier	offset		3525239	0					
ANR	3527647	PrimaryExpression	16		3525239	1					
ANR	3527648	ExpressionStatement	data [ l ++ ] = offset >> 24	2093:5:55007:55031	3525239	2	True				
ANR	3527649	AssignmentExpression	data [ l ++ ] = offset >> 24		3525239	0		=			
ANR	3527650	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3527651	Identifier	data		3525239	0					
ANR	3527652	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3527653	Identifier	l		3525239	0					
ANR	3527654	IncDec	++		3525239	1					
ANR	3527655	ShiftExpression	offset >> 24		3525239	1		>>			
ANR	3527656	Identifier	offset		3525239	0					
ANR	3527657	PrimaryExpression	24		3525239	1					
ANR	3527658	ElseStatement	else		3525239	0					
ANR	3527659	IfStatement	if ( op -> operands [ 1 ] . type & OT_MEMORY )		3525239	0					
ANR	3527660	Condition	op -> operands [ 1 ] . type & OT_MEMORY	2097:12:55060:55091	3525239	0	True				
ANR	3527661	BitAndExpression	op -> operands [ 1 ] . type & OT_MEMORY		3525239	0		&			
ANR	3527662	MemberAccess	op -> operands [ 1 ] . type		3525239	0					
ANR	3527663	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3527664	PtrMemberAccess	op -> operands		3525239	0					
ANR	3527665	Identifier	op		3525239	0					
ANR	3527666	Identifier	operands		3525239	1					
ANR	3527667	PrimaryExpression	1		3525239	1					
ANR	3527668	Identifier	type		3525239	1					
ANR	3527669	Identifier	OT_MEMORY		3525239	1					
ANR	3527670	CompoundStatement		335:46:9037:9037	3525239	1					
ANR	3527671	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3525239	0					
ANR	3527672	Condition	op -> operands [ 0 ] . type & OT_MEMORY	2098:6:55102:55133	3525239	0	True				
ANR	3527673	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3525239	0		&			
ANR	3527674	MemberAccess	op -> operands [ 0 ] . type		3525239	0					
ANR	3527675	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3527676	PtrMemberAccess	op -> operands		3525239	0					
ANR	3527677	Identifier	op		3525239	0					
ANR	3527678	Identifier	operands		3525239	1					
ANR	3527679	PrimaryExpression	0		3525239	1					
ANR	3527680	Identifier	type		3525239	1					
ANR	3527681	Identifier	OT_MEMORY		3525239	1					
ANR	3527682	CompoundStatement		336:40:9079:9079	3525239	1					
ANR	3527683	ReturnStatement	return - 1 ;	2099:3:55141:55150	3525239	0	True				
ANR	3527684	UnaryOperationExpression	- 1		3525239	0					
ANR	3527685	UnaryOperator	-		3525239	0					
ANR	3527686	PrimaryExpression	1		3525239	1					
ANR	3527687	ExpressionStatement	offset = op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign	2101:2:55158:55219	3525239	1	True				
ANR	3527688	AssignmentExpression	offset = op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign		3525239	0		=			
ANR	3527689	Identifier	offset		3525239	0					
ANR	3527690	MultiplicativeExpression	op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign		3525239	1		*			
ANR	3527691	MemberAccess	op -> operands [ 1 ] . offset		3525239	0					
ANR	3527692	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3527693	PtrMemberAccess	op -> operands		3525239	0					
ANR	3527694	Identifier	op		3525239	0					
ANR	3527695	Identifier	operands		3525239	1					
ANR	3527696	PrimaryExpression	1		3525239	1					
ANR	3527697	Identifier	offset		3525239	1					
ANR	3527698	MemberAccess	op -> operands [ 1 ] . offset_sign		3525239	1					
ANR	3527699	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3527700	PtrMemberAccess	op -> operands		3525239	0					
ANR	3527701	Identifier	op		3525239	0					
ANR	3527702	Identifier	operands		3525239	1					
ANR	3527703	PrimaryExpression	1		3525239	1					
ANR	3527704	Identifier	offset_sign		3525239	1					
ANR	3527705	IfStatement	if ( op -> operands [ 0 ] . reg == X86R_EAX && op -> operands [ 1 ] . regs [ 0 ] == X86R_UNDEFINED )		3525239	2					
ANR	3527706	Condition	op -> operands [ 0 ] . reg == X86R_EAX && op -> operands [ 1 ] . regs [ 0 ] == X86R_UNDEFINED	2102:6:55227:55302	3525239	0	True				
ANR	3527707	AndExpression	op -> operands [ 0 ] . reg == X86R_EAX && op -> operands [ 1 ] . regs [ 0 ] == X86R_UNDEFINED		3525239	0		&&			
ANR	3527708	EqualityExpression	op -> operands [ 0 ] . reg == X86R_EAX		3525239	0		==			
ANR	3527709	MemberAccess	op -> operands [ 0 ] . reg		3525239	0					
ANR	3527710	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3527711	PtrMemberAccess	op -> operands		3525239	0					
ANR	3527712	Identifier	op		3525239	0					
ANR	3527713	Identifier	operands		3525239	1					
ANR	3527714	PrimaryExpression	0		3525239	1					
ANR	3527715	Identifier	reg		3525239	1					
ANR	3527716	Identifier	X86R_EAX		3525239	1					
ANR	3527717	EqualityExpression	op -> operands [ 1 ] . regs [ 0 ] == X86R_UNDEFINED		3525239	1		==			
ANR	3527718	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3525239	0					
ANR	3527719	MemberAccess	op -> operands [ 1 ] . regs		3525239	0					
ANR	3527720	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3527721	PtrMemberAccess	op -> operands		3525239	0					
ANR	3527722	Identifier	op		3525239	0					
ANR	3527723	Identifier	operands		3525239	1					
ANR	3527724	PrimaryExpression	1		3525239	1					
ANR	3527725	Identifier	regs		3525239	1					
ANR	3527726	PrimaryExpression	0		3525239	1					
ANR	3527727	Identifier	X86R_UNDEFINED		3525239	1					
ANR	3527728	CompoundStatement		340:84:9248:9248	3525239	1					
ANR	3527729	IfStatement	if ( a -> bits == 64 )		3525239	0					
ANR	3527730	Condition	a -> bits == 64	2103:7:55314:55326	3525239	0	True				
ANR	3527731	EqualityExpression	a -> bits == 64		3525239	0		==			
ANR	3527732	PtrMemberAccess	a -> bits		3525239	0					
ANR	3527733	Identifier	a		3525239	0					
ANR	3527734	Identifier	bits		3525239	1					
ANR	3527735	PrimaryExpression	64		3525239	1					
ANR	3527736	CompoundStatement		341:22:9272:9272	3525239	1					
ANR	3527737	ExpressionStatement	data [ l ++ ] = 0x48	2104:4:55335:55351	3525239	0	True				
ANR	3527738	AssignmentExpression	data [ l ++ ] = 0x48		3525239	0		=			
ANR	3527739	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3527740	Identifier	data		3525239	0					
ANR	3527741	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3527742	Identifier	l		3525239	0					
ANR	3527743	IncDec	++		3525239	1					
ANR	3527744	PrimaryExpression	0x48		3525239	1					
ANR	3527745	IfStatement	if ( op -> operands [ 0 ] . type & OT_BYTE )		3525239	1					
ANR	3527746	Condition	op -> operands [ 0 ] . type & OT_BYTE	2106:7:55365:55394	3525239	0	True				
ANR	3527747	BitAndExpression	op -> operands [ 0 ] . type & OT_BYTE		3525239	0		&			
ANR	3527748	MemberAccess	op -> operands [ 0 ] . type		3525239	0					
ANR	3527749	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3527750	PtrMemberAccess	op -> operands		3525239	0					
ANR	3527751	Identifier	op		3525239	0					
ANR	3527752	Identifier	operands		3525239	1					
ANR	3527753	PrimaryExpression	0		3525239	1					
ANR	3527754	Identifier	type		3525239	1					
ANR	3527755	Identifier	OT_BYTE		3525239	1					
ANR	3527756	CompoundStatement		344:39:9340:9340	3525239	1					
ANR	3527757	ExpressionStatement	data [ l ++ ] = 0xa0	2107:4:55403:55419	3525239	0	True				
ANR	3527758	AssignmentExpression	data [ l ++ ] = 0xa0		3525239	0		=			
ANR	3527759	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3527760	Identifier	data		3525239	0					
ANR	3527761	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3527762	Identifier	l		3525239	0					
ANR	3527763	IncDec	++		3525239	1					
ANR	3527764	PrimaryExpression	0xa0		3525239	1					
ANR	3527765	ElseStatement	else		3525239	0					
ANR	3527766	CompoundStatement		346:10:9374:9374	3525239	0					
ANR	3527767	ExpressionStatement	data [ l ++ ] = 0xa1	2109:4:55437:55453	3525239	0	True				
ANR	3527768	AssignmentExpression	data [ l ++ ] = 0xa1		3525239	0		=			
ANR	3527769	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3527770	Identifier	data		3525239	0					
ANR	3527771	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3527772	Identifier	l		3525239	0					
ANR	3527773	IncDec	++		3525239	1					
ANR	3527774	PrimaryExpression	0xa1		3525239	1					
ANR	3527775	ExpressionStatement	data [ l ++ ] = offset	2111:3:55463:55481	3525239	2	True				
ANR	3527776	AssignmentExpression	data [ l ++ ] = offset		3525239	0		=			
ANR	3527777	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3527778	Identifier	data		3525239	0					
ANR	3527779	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3527780	Identifier	l		3525239	0					
ANR	3527781	IncDec	++		3525239	1					
ANR	3527782	Identifier	offset		3525239	1					
ANR	3527783	ExpressionStatement	data [ l ++ ] = offset >> 8	2112:3:55486:55509	3525239	3	True				
ANR	3527784	AssignmentExpression	data [ l ++ ] = offset >> 8		3525239	0		=			
ANR	3527785	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3527786	Identifier	data		3525239	0					
ANR	3527787	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3527788	Identifier	l		3525239	0					
ANR	3527789	IncDec	++		3525239	1					
ANR	3527790	ShiftExpression	offset >> 8		3525239	1		>>			
ANR	3527791	Identifier	offset		3525239	0					
ANR	3527792	PrimaryExpression	8		3525239	1					
ANR	3527793	ExpressionStatement	data [ l ++ ] = offset >> 16	2113:3:55514:55538	3525239	4	True				
ANR	3527794	AssignmentExpression	data [ l ++ ] = offset >> 16		3525239	0		=			
ANR	3527795	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3527796	Identifier	data		3525239	0					
ANR	3527797	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3527798	Identifier	l		3525239	0					
ANR	3527799	IncDec	++		3525239	1					
ANR	3527800	ShiftExpression	offset >> 16		3525239	1		>>			
ANR	3527801	Identifier	offset		3525239	0					
ANR	3527802	PrimaryExpression	16		3525239	1					
ANR	3527803	ExpressionStatement	data [ l ++ ] = offset >> 24	2114:3:55543:55567	3525239	5	True				
ANR	3527804	AssignmentExpression	data [ l ++ ] = offset >> 24		3525239	0		=			
ANR	3527805	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3527806	Identifier	data		3525239	0					
ANR	3527807	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3527808	Identifier	l		3525239	0					
ANR	3527809	IncDec	++		3525239	1					
ANR	3527810	ShiftExpression	offset >> 24		3525239	1		>>			
ANR	3527811	Identifier	offset		3525239	0					
ANR	3527812	PrimaryExpression	24		3525239	1					
ANR	3527813	IfStatement	if ( a -> bits == 64 )		3525239	6					
ANR	3527814	Condition	a -> bits == 64	2115:7:55576:55588	3525239	0	True				
ANR	3527815	EqualityExpression	a -> bits == 64		3525239	0		==			
ANR	3527816	PtrMemberAccess	a -> bits		3525239	0					
ANR	3527817	Identifier	a		3525239	0					
ANR	3527818	Identifier	bits		3525239	1					
ANR	3527819	PrimaryExpression	64		3525239	1					
ANR	3527820	CompoundStatement		353:22:9534:9534	3525239	1					
ANR	3527821	ExpressionStatement	data [ l ++ ] = offset >> 32	2116:4:55597:55621	3525239	0	True				
ANR	3527822	AssignmentExpression	data [ l ++ ] = offset >> 32		3525239	0		=			
ANR	3527823	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3527824	Identifier	data		3525239	0					
ANR	3527825	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3527826	Identifier	l		3525239	0					
ANR	3527827	IncDec	++		3525239	1					
ANR	3527828	ShiftExpression	offset >> 32		3525239	1		>>			
ANR	3527829	Identifier	offset		3525239	0					
ANR	3527830	PrimaryExpression	32		3525239	1					
ANR	3527831	ExpressionStatement	data [ l ++ ] = offset >> 40	2117:4:55627:55651	3525239	1	True				
ANR	3527832	AssignmentExpression	data [ l ++ ] = offset >> 40		3525239	0		=			
ANR	3527833	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3527834	Identifier	data		3525239	0					
ANR	3527835	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3527836	Identifier	l		3525239	0					
ANR	3527837	IncDec	++		3525239	1					
ANR	3527838	ShiftExpression	offset >> 40		3525239	1		>>			
ANR	3527839	Identifier	offset		3525239	0					
ANR	3527840	PrimaryExpression	40		3525239	1					
ANR	3527841	ExpressionStatement	data [ l ++ ] = offset >> 48	2118:4:55657:55681	3525239	2	True				
ANR	3527842	AssignmentExpression	data [ l ++ ] = offset >> 48		3525239	0		=			
ANR	3527843	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3527844	Identifier	data		3525239	0					
ANR	3527845	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3527846	Identifier	l		3525239	0					
ANR	3527847	IncDec	++		3525239	1					
ANR	3527848	ShiftExpression	offset >> 48		3525239	1		>>			
ANR	3527849	Identifier	offset		3525239	0					
ANR	3527850	PrimaryExpression	48		3525239	1					
ANR	3527851	ExpressionStatement	data [ l ++ ] = offset >> 54	2119:4:55687:55711	3525239	3	True				
ANR	3527852	AssignmentExpression	data [ l ++ ] = offset >> 54		3525239	0		=			
ANR	3527853	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3527854	Identifier	data		3525239	0					
ANR	3527855	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3527856	Identifier	l		3525239	0					
ANR	3527857	IncDec	++		3525239	1					
ANR	3527858	ShiftExpression	offset >> 54		3525239	1		>>			
ANR	3527859	Identifier	offset		3525239	0					
ANR	3527860	PrimaryExpression	54		3525239	1					
ANR	3527861	ReturnStatement	return l ;	2121:3:55721:55729	3525239	7	True				
ANR	3527862	Identifier	l		3525239	0					
ANR	3527863	IfStatement	if ( op -> operands [ 0 ] . type & OT_BYTE && a -> bits == 64 && op -> operands [ 1 ] . regs [ 0 ] )		3525239	3					
ANR	3527864	Condition	op -> operands [ 0 ] . type & OT_BYTE && a -> bits == 64 && op -> operands [ 1 ] . regs [ 0 ]	2123:6:55741:55814	3525239	0	True				
ANR	3527865	AndExpression	op -> operands [ 0 ] . type & OT_BYTE && a -> bits == 64 && op -> operands [ 1 ] . regs [ 0 ]		3525239	0		&&			
ANR	3527866	BitAndExpression	op -> operands [ 0 ] . type & OT_BYTE		3525239	0		&			
ANR	3527867	MemberAccess	op -> operands [ 0 ] . type		3525239	0					
ANR	3527868	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3527869	PtrMemberAccess	op -> operands		3525239	0					
ANR	3527870	Identifier	op		3525239	0					
ANR	3527871	Identifier	operands		3525239	1					
ANR	3527872	PrimaryExpression	0		3525239	1					
ANR	3527873	Identifier	type		3525239	1					
ANR	3527874	Identifier	OT_BYTE		3525239	1					
ANR	3527875	AndExpression	a -> bits == 64 && op -> operands [ 1 ] . regs [ 0 ]		3525239	1		&&			
ANR	3527876	EqualityExpression	a -> bits == 64		3525239	0		==			
ANR	3527877	PtrMemberAccess	a -> bits		3525239	0					
ANR	3527878	Identifier	a		3525239	0					
ANR	3527879	Identifier	bits		3525239	1					
ANR	3527880	PrimaryExpression	64		3525239	1					
ANR	3527881	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3525239	1					
ANR	3527882	MemberAccess	op -> operands [ 1 ] . regs		3525239	0					
ANR	3527883	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3527884	PtrMemberAccess	op -> operands		3525239	0					
ANR	3527885	Identifier	op		3525239	0					
ANR	3527886	Identifier	operands		3525239	1					
ANR	3527887	PrimaryExpression	1		3525239	1					
ANR	3527888	Identifier	regs		3525239	1					
ANR	3527889	PrimaryExpression	0		3525239	1					
ANR	3527890	CompoundStatement		361:82:9760:9760	3525239	1					
ANR	3527891	IfStatement	if ( op -> operands [ 1 ] . regs [ 0 ] >= X86R_R8 && op -> operands [ 0 ] . reg < 4 )		3525239	0					
ANR	3527892	Condition	op -> operands [ 1 ] . regs [ 0 ] >= X86R_R8 && op -> operands [ 0 ] . reg < 4	2124:7:55826:55893	3525239	0	True				
ANR	3527893	AndExpression	op -> operands [ 1 ] . regs [ 0 ] >= X86R_R8 && op -> operands [ 0 ] . reg < 4		3525239	0		&&			
ANR	3527894	RelationalExpression	op -> operands [ 1 ] . regs [ 0 ] >= X86R_R8		3525239	0		>=			
ANR	3527895	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3525239	0					
ANR	3527896	MemberAccess	op -> operands [ 1 ] . regs		3525239	0					
ANR	3527897	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3527898	PtrMemberAccess	op -> operands		3525239	0					
ANR	3527899	Identifier	op		3525239	0					
ANR	3527900	Identifier	operands		3525239	1					
ANR	3527901	PrimaryExpression	1		3525239	1					
ANR	3527902	Identifier	regs		3525239	1					
ANR	3527903	PrimaryExpression	0		3525239	1					
ANR	3527904	Identifier	X86R_R8		3525239	1					
ANR	3527905	RelationalExpression	op -> operands [ 0 ] . reg < 4		3525239	1		<			
ANR	3527906	MemberAccess	op -> operands [ 0 ] . reg		3525239	0					
ANR	3527907	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3527908	PtrMemberAccess	op -> operands		3525239	0					
ANR	3527909	Identifier	op		3525239	0					
ANR	3527910	Identifier	operands		3525239	1					
ANR	3527911	PrimaryExpression	0		3525239	1					
ANR	3527912	Identifier	reg		3525239	1					
ANR	3527913	PrimaryExpression	4		3525239	1					
ANR	3527914	CompoundStatement		363:32:9839:9839	3525239	1					
ANR	3527915	ExpressionStatement	data [ l ++ ] = 0x41	2126:4:55902:55918	3525239	0	True				
ANR	3527916	AssignmentExpression	data [ l ++ ] = 0x41		3525239	0		=			
ANR	3527917	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3527918	Identifier	data		3525239	0					
ANR	3527919	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3527920	Identifier	l		3525239	0					
ANR	3527921	IncDec	++		3525239	1					
ANR	3527922	PrimaryExpression	0x41		3525239	1					
ANR	3527923	ExpressionStatement	data [ l ++ ] = 0x8a	2127:4:55924:55940	3525239	1	True				
ANR	3527924	AssignmentExpression	data [ l ++ ] = 0x8a		3525239	0		=			
ANR	3527925	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3527926	Identifier	data		3525239	0					
ANR	3527927	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3527928	Identifier	l		3525239	0					
ANR	3527929	IncDec	++		3525239	1					
ANR	3527930	PrimaryExpression	0x8a		3525239	1					
ANR	3527931	ExpressionStatement	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | ( op -> operands [ 1 ] . regs [ 0 ] - 8 )	2128:4:55946:56014	3525239	2	True				
ANR	3527932	AssignmentExpression	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | ( op -> operands [ 1 ] . regs [ 0 ] - 8 )		3525239	0		=			
ANR	3527933	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3527934	Identifier	data		3525239	0					
ANR	3527935	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3527936	Identifier	l		3525239	0					
ANR	3527937	IncDec	++		3525239	1					
ANR	3527938	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | ( op -> operands [ 1 ] . regs [ 0 ] - 8 )		3525239	1		|			
ANR	3527939	ShiftExpression	op -> operands [ 0 ] . reg << 3		3525239	0		<<			
ANR	3527940	MemberAccess	op -> operands [ 0 ] . reg		3525239	0					
ANR	3527941	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3527942	PtrMemberAccess	op -> operands		3525239	0					
ANR	3527943	Identifier	op		3525239	0					
ANR	3527944	Identifier	operands		3525239	1					
ANR	3527945	PrimaryExpression	0		3525239	1					
ANR	3527946	Identifier	reg		3525239	1					
ANR	3527947	PrimaryExpression	3		3525239	1					
ANR	3527948	AdditiveExpression	op -> operands [ 1 ] . regs [ 0 ] - 8		3525239	1		-			
ANR	3527949	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3525239	0					
ANR	3527950	MemberAccess	op -> operands [ 1 ] . regs		3525239	0					
ANR	3527951	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3527952	PtrMemberAccess	op -> operands		3525239	0					
ANR	3527953	Identifier	op		3525239	0					
ANR	3527954	Identifier	operands		3525239	1					
ANR	3527955	PrimaryExpression	1		3525239	1					
ANR	3527956	Identifier	regs		3525239	1					
ANR	3527957	PrimaryExpression	0		3525239	1					
ANR	3527958	PrimaryExpression	8		3525239	1					
ANR	3527959	ReturnStatement	return l ;	2129:4:56020:56028	3525239	3	True				
ANR	3527960	Identifier	l		3525239	0					
ANR	3527961	ReturnStatement	return - 1 ;	2131:3:56038:56047	3525239	1	True				
ANR	3527962	UnaryOperationExpression	- 1		3525239	0					
ANR	3527963	UnaryOperator	-		3525239	0					
ANR	3527964	PrimaryExpression	1		3525239	1					
ANR	3527965	IfStatement	if ( op -> operands [ 1 ] . type & OT_REGTYPE & OT_SEGMENTREG )		3525239	4					
ANR	3527966	Condition	op -> operands [ 1 ] . type & OT_REGTYPE & OT_SEGMENTREG	2134:6:56060:56108	3525239	0	True				
ANR	3527967	BitAndExpression	op -> operands [ 1 ] . type & OT_REGTYPE & OT_SEGMENTREG		3525239	0		&			
ANR	3527968	MemberAccess	op -> operands [ 1 ] . type		3525239	0					
ANR	3527969	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3527970	PtrMemberAccess	op -> operands		3525239	0					
ANR	3527971	Identifier	op		3525239	0					
ANR	3527972	Identifier	operands		3525239	1					
ANR	3527973	PrimaryExpression	1		3525239	1					
ANR	3527974	Identifier	type		3525239	1					
ANR	3527975	BitAndExpression	OT_REGTYPE & OT_SEGMENTREG		3525239	1		&			
ANR	3527976	Identifier	OT_REGTYPE		3525239	0					
ANR	3527977	Identifier	OT_SEGMENTREG		3525239	1					
ANR	3527978	CompoundStatement		372:57:10054:10054	3525239	1					
ANR	3527979	IfStatement	if ( op -> operands [ 1 ] . scale [ 0 ] == 0 )		3525239	0					
ANR	3527980	Condition	op -> operands [ 1 ] . scale [ 0 ] == 0	2135:7:56120:56148	3525239	0	True				
ANR	3527981	EqualityExpression	op -> operands [ 1 ] . scale [ 0 ] == 0		3525239	0		==			
ANR	3527982	ArrayIndexing	op -> operands [ 1 ] . scale [ 0 ]		3525239	0					
ANR	3527983	MemberAccess	op -> operands [ 1 ] . scale		3525239	0					
ANR	3527984	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3527985	PtrMemberAccess	op -> operands		3525239	0					
ANR	3527986	Identifier	op		3525239	0					
ANR	3527987	Identifier	operands		3525239	1					
ANR	3527988	PrimaryExpression	1		3525239	1					
ANR	3527989	Identifier	scale		3525239	1					
ANR	3527990	PrimaryExpression	0		3525239	1					
ANR	3527991	PrimaryExpression	0		3525239	1					
ANR	3527992	CompoundStatement		373:38:10094:10094	3525239	1					
ANR	3527993	ReturnStatement	return - 1 ;	2136:4:56157:56166	3525239	0	True				
ANR	3527994	UnaryOperationExpression	- 1		3525239	0					
ANR	3527995	UnaryOperator	-		3525239	0					
ANR	3527996	PrimaryExpression	1		3525239	1					
ANR	3527997	ExpressionStatement	data [ l ++ ] = SEG_REG_PREFIXES [ op -> operands [ 1 ] . regs [ 0 ] % 6 ]	2138:3:56176:56233	3525239	1	True				
ANR	3527998	AssignmentExpression	data [ l ++ ] = SEG_REG_PREFIXES [ op -> operands [ 1 ] . regs [ 0 ] % 6 ]		3525239	0		=			
ANR	3527999	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3528000	Identifier	data		3525239	0					
ANR	3528001	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3528002	Identifier	l		3525239	0					
ANR	3528003	IncDec	++		3525239	1					
ANR	3528004	ArrayIndexing	SEG_REG_PREFIXES [ op -> operands [ 1 ] . regs [ 0 ] % 6 ]		3525239	1					
ANR	3528005	Identifier	SEG_REG_PREFIXES		3525239	0					
ANR	3528006	MultiplicativeExpression	op -> operands [ 1 ] . regs [ 0 ] % 6		3525239	1		%			
ANR	3528007	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3525239	0					
ANR	3528008	MemberAccess	op -> operands [ 1 ] . regs		3525239	0					
ANR	3528009	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3528010	PtrMemberAccess	op -> operands		3525239	0					
ANR	3528011	Identifier	op		3525239	0					
ANR	3528012	Identifier	operands		3525239	1					
ANR	3528013	PrimaryExpression	1		3525239	1					
ANR	3528014	Identifier	regs		3525239	1					
ANR	3528015	PrimaryExpression	0		3525239	1					
ANR	3528016	PrimaryExpression	6		3525239	1					
ANR	3528017	ExpressionStatement	data [ l ++ ] = 0x8b	2139:3:56238:56254	3525239	2	True				
ANR	3528018	AssignmentExpression	data [ l ++ ] = 0x8b		3525239	0		=			
ANR	3528019	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3528020	Identifier	data		3525239	0					
ANR	3528021	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3528022	Identifier	l		3525239	0					
ANR	3528023	IncDec	++		3525239	1					
ANR	3528024	PrimaryExpression	0x8b		3525239	1					
ANR	3528025	ExpressionStatement	data [ l ++ ] = ( ( ( ut32 ) op -> operands [ 0 ] . reg ) << 3 ) | 0x5	2140:3:56259:56311	3525239	3	True				
ANR	3528026	AssignmentExpression	data [ l ++ ] = ( ( ( ut32 ) op -> operands [ 0 ] . reg ) << 3 ) | 0x5		3525239	0		=			
ANR	3528027	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3528028	Identifier	data		3525239	0					
ANR	3528029	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3528030	Identifier	l		3525239	0					
ANR	3528031	IncDec	++		3525239	1					
ANR	3528032	InclusiveOrExpression	( ( ( ut32 ) op -> operands [ 0 ] . reg ) << 3 ) | 0x5		3525239	1		|			
ANR	3528033	ShiftExpression	( ( ut32 ) op -> operands [ 0 ] . reg ) << 3		3525239	0		<<			
ANR	3528034	CastExpression	( ut32 ) op -> operands [ 0 ] . reg		3525239	0					
ANR	3528035	CastTarget	ut32		3525239	0					
ANR	3528036	MemberAccess	op -> operands [ 0 ] . reg		3525239	1					
ANR	3528037	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3528038	PtrMemberAccess	op -> operands		3525239	0					
ANR	3528039	Identifier	op		3525239	0					
ANR	3528040	Identifier	operands		3525239	1					
ANR	3528041	PrimaryExpression	0		3525239	1					
ANR	3528042	Identifier	reg		3525239	1					
ANR	3528043	PrimaryExpression	3		3525239	1					
ANR	3528044	PrimaryExpression	0x5		3525239	1					
ANR	3528045	ExpressionStatement	data [ l ++ ] = offset	2141:3:56316:56334	3525239	4	True				
ANR	3528046	AssignmentExpression	data [ l ++ ] = offset		3525239	0		=			
ANR	3528047	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3528048	Identifier	data		3525239	0					
ANR	3528049	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3528050	Identifier	l		3525239	0					
ANR	3528051	IncDec	++		3525239	1					
ANR	3528052	Identifier	offset		3525239	1					
ANR	3528053	ExpressionStatement	data [ l ++ ] = offset >> 8	2142:3:56339:56362	3525239	5	True				
ANR	3528054	AssignmentExpression	data [ l ++ ] = offset >> 8		3525239	0		=			
ANR	3528055	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3528056	Identifier	data		3525239	0					
ANR	3528057	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3528058	Identifier	l		3525239	0					
ANR	3528059	IncDec	++		3525239	1					
ANR	3528060	ShiftExpression	offset >> 8		3525239	1		>>			
ANR	3528061	Identifier	offset		3525239	0					
ANR	3528062	PrimaryExpression	8		3525239	1					
ANR	3528063	ExpressionStatement	data [ l ++ ] = offset >> 16	2143:3:56367:56391	3525239	6	True				
ANR	3528064	AssignmentExpression	data [ l ++ ] = offset >> 16		3525239	0		=			
ANR	3528065	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3528066	Identifier	data		3525239	0					
ANR	3528067	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3528068	Identifier	l		3525239	0					
ANR	3528069	IncDec	++		3525239	1					
ANR	3528070	ShiftExpression	offset >> 16		3525239	1		>>			
ANR	3528071	Identifier	offset		3525239	0					
ANR	3528072	PrimaryExpression	16		3525239	1					
ANR	3528073	ExpressionStatement	data [ l ++ ] = offset >> 24	2144:3:56396:56420	3525239	7	True				
ANR	3528074	AssignmentExpression	data [ l ++ ] = offset >> 24		3525239	0		=			
ANR	3528075	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3528076	Identifier	data		3525239	0					
ANR	3528077	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3528078	Identifier	l		3525239	0					
ANR	3528079	IncDec	++		3525239	1					
ANR	3528080	ShiftExpression	offset >> 24		3525239	1		>>			
ANR	3528081	Identifier	offset		3525239	0					
ANR	3528082	PrimaryExpression	24		3525239	1					
ANR	3528083	ReturnStatement	return l ;	2145:3:56425:56433	3525239	8	True				
ANR	3528084	Identifier	l		3525239	0					
ANR	3528085	IfStatement	if ( a -> bits == 64 )		3525239	5					
ANR	3528086	Condition	a -> bits == 64	2148:6:56446:56458	3525239	0	True				
ANR	3528087	EqualityExpression	a -> bits == 64		3525239	0		==			
ANR	3528088	PtrMemberAccess	a -> bits		3525239	0					
ANR	3528089	Identifier	a		3525239	0					
ANR	3528090	Identifier	bits		3525239	1					
ANR	3528091	PrimaryExpression	64		3525239	1					
ANR	3528092	CompoundStatement		386:21:10404:10404	3525239	1					
ANR	3528093	IfStatement	if ( op -> operands [ 0 ] . type & OT_QWORD )		3525239	0					
ANR	3528094	Condition	op -> operands [ 0 ] . type & OT_QWORD	2149:7:56470:56500	3525239	0	True				
ANR	3528095	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		3525239	0		&			
ANR	3528096	MemberAccess	op -> operands [ 0 ] . type		3525239	0					
ANR	3528097	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3528098	PtrMemberAccess	op -> operands		3525239	0					
ANR	3528099	Identifier	op		3525239	0					
ANR	3528100	Identifier	operands		3525239	1					
ANR	3528101	PrimaryExpression	0		3525239	1					
ANR	3528102	Identifier	type		3525239	1					
ANR	3528103	Identifier	OT_QWORD		3525239	1					
ANR	3528104	CompoundStatement		387:40:10446:10446	3525239	1					
ANR	3528105	IfStatement	if ( ! ( op -> operands [ 1 ] . type & OT_QWORD ) )		3525239	0					
ANR	3528106	Condition	! ( op -> operands [ 1 ] . type & OT_QWORD )	2150:8:56513:56546	3525239	0	True				
ANR	3528107	UnaryOperationExpression	! ( op -> operands [ 1 ] . type & OT_QWORD )		3525239	0					
ANR	3528108	UnaryOperator	!		3525239	0					
ANR	3528109	BitAndExpression	op -> operands [ 1 ] . type & OT_QWORD		3525239	1		&			
ANR	3528110	MemberAccess	op -> operands [ 1 ] . type		3525239	0					
ANR	3528111	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3528112	PtrMemberAccess	op -> operands		3525239	0					
ANR	3528113	Identifier	op		3525239	0					
ANR	3528114	Identifier	operands		3525239	1					
ANR	3528115	PrimaryExpression	1		3525239	1					
ANR	3528116	Identifier	type		3525239	1					
ANR	3528117	Identifier	OT_QWORD		3525239	1					
ANR	3528118	CompoundStatement		388:44:10492:10492	3525239	1					
ANR	3528119	IfStatement	if ( op -> operands [ 1 ] . regs [ 0 ] != - 1 )		3525239	0					
ANR	3528120	Condition	op -> operands [ 1 ] . regs [ 0 ] != - 1	2151:9:56560:56588	3525239	0	True				
ANR	3528121	EqualityExpression	op -> operands [ 1 ] . regs [ 0 ] != - 1		3525239	0		!=			
ANR	3528122	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3525239	0					
ANR	3528123	MemberAccess	op -> operands [ 1 ] . regs		3525239	0					
ANR	3528124	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3528125	PtrMemberAccess	op -> operands		3525239	0					
ANR	3528126	Identifier	op		3525239	0					
ANR	3528127	Identifier	operands		3525239	1					
ANR	3528128	PrimaryExpression	1		3525239	1					
ANR	3528129	Identifier	regs		3525239	1					
ANR	3528130	PrimaryExpression	0		3525239	1					
ANR	3528131	UnaryOperationExpression	- 1		3525239	1					
ANR	3528132	UnaryOperator	-		3525239	0					
ANR	3528133	PrimaryExpression	1		3525239	1					
ANR	3528134	CompoundStatement		389:40:10534:10534	3525239	1					
ANR	3528135	ExpressionStatement	data [ l ++ ] = 0x67	2152:6:56599:56615	3525239	0	True				
ANR	3528136	AssignmentExpression	data [ l ++ ] = 0x67		3525239	0		=			
ANR	3528137	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3528138	Identifier	data		3525239	0					
ANR	3528139	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3528140	Identifier	l		3525239	0					
ANR	3528141	IncDec	++		3525239	1					
ANR	3528142	PrimaryExpression	0x67		3525239	1					
ANR	3528143	ExpressionStatement	data [ l ++ ] = 0x48	2154:5:56629:56645	3525239	1	True				
ANR	3528144	AssignmentExpression	data [ l ++ ] = 0x48		3525239	0		=			
ANR	3528145	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3528146	Identifier	data		3525239	0					
ANR	3528147	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3528148	Identifier	l		3525239	0					
ANR	3528149	IncDec	++		3525239	1					
ANR	3528150	PrimaryExpression	0x48		3525239	1					
ANR	3528151	ElseStatement	else		3525239	0					
ANR	3528152	IfStatement	if ( op -> operands [ 1 ] . type & OT_DWORD )		3525239	0					
ANR	3528153	Condition	op -> operands [ 1 ] . type & OT_DWORD	2156:14:56667:56697	3525239	0	True				
ANR	3528154	BitAndExpression	op -> operands [ 1 ] . type & OT_DWORD		3525239	0		&			
ANR	3528155	MemberAccess	op -> operands [ 1 ] . type		3525239	0					
ANR	3528156	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3528157	PtrMemberAccess	op -> operands		3525239	0					
ANR	3528158	Identifier	op		3525239	0					
ANR	3528159	Identifier	operands		3525239	1					
ANR	3528160	PrimaryExpression	1		3525239	1					
ANR	3528161	Identifier	type		3525239	1					
ANR	3528162	Identifier	OT_DWORD		3525239	1					
ANR	3528163	CompoundStatement		394:47:10643:10643	3525239	1					
ANR	3528164	ExpressionStatement	data [ l ++ ] = 0x44	2157:4:56706:56722	3525239	0	True				
ANR	3528165	AssignmentExpression	data [ l ++ ] = 0x44		3525239	0		=			
ANR	3528166	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3528167	Identifier	data		3525239	0					
ANR	3528168	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3528169	Identifier	l		3525239	0					
ANR	3528170	IncDec	++		3525239	1					
ANR	3528171	PrimaryExpression	0x44		3525239	1					
ANR	3528172	ElseStatement	else		3525239	0					
ANR	3528173	IfStatement	if ( ! ( op -> operands [ 1 ] . type & OT_QWORD ) )		3525239	0					
ANR	3528174	Condition	! ( op -> operands [ 1 ] . type & OT_QWORD )	2158:14:56738:56771	3525239	0	True				
ANR	3528175	UnaryOperationExpression	! ( op -> operands [ 1 ] . type & OT_QWORD )		3525239	0					
ANR	3528176	UnaryOperator	!		3525239	0					
ANR	3528177	BitAndExpression	op -> operands [ 1 ] . type & OT_QWORD		3525239	1		&			
ANR	3528178	MemberAccess	op -> operands [ 1 ] . type		3525239	0					
ANR	3528179	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3528180	PtrMemberAccess	op -> operands		3525239	0					
ANR	3528181	Identifier	op		3525239	0					
ANR	3528182	Identifier	operands		3525239	1					
ANR	3528183	PrimaryExpression	1		3525239	1					
ANR	3528184	Identifier	type		3525239	1					
ANR	3528185	Identifier	OT_QWORD		3525239	1					
ANR	3528186	CompoundStatement		396:50:10717:10717	3525239	1					
ANR	3528187	ExpressionStatement	data [ l ++ ] = 0x67	2159:4:56780:56796	3525239	0	True				
ANR	3528188	AssignmentExpression	data [ l ++ ] = 0x67		3525239	0		=			
ANR	3528189	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3528190	Identifier	data		3525239	0					
ANR	3528191	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3528192	Identifier	l		3525239	0					
ANR	3528193	IncDec	++		3525239	1					
ANR	3528194	PrimaryExpression	0x67		3525239	1					
ANR	3528195	IfStatement	if ( op -> operands [ 1 ] . type & OT_QWORD && op -> operands [ 0 ] . type & OT_QWORD )		3525239	1					
ANR	3528196	Condition	op -> operands [ 1 ] . type & OT_QWORD && op -> operands [ 0 ] . type & OT_QWORD	2161:7:56810:56879	3525239	0	True				
ANR	3528197	AndExpression	op -> operands [ 1 ] . type & OT_QWORD && op -> operands [ 0 ] . type & OT_QWORD		3525239	0		&&			
ANR	3528198	BitAndExpression	op -> operands [ 1 ] . type & OT_QWORD		3525239	0		&			
ANR	3528199	MemberAccess	op -> operands [ 1 ] . type		3525239	0					
ANR	3528200	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3528201	PtrMemberAccess	op -> operands		3525239	0					
ANR	3528202	Identifier	op		3525239	0					
ANR	3528203	Identifier	operands		3525239	1					
ANR	3528204	PrimaryExpression	1		3525239	1					
ANR	3528205	Identifier	type		3525239	1					
ANR	3528206	Identifier	OT_QWORD		3525239	1					
ANR	3528207	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		3525239	1		&			
ANR	3528208	MemberAccess	op -> operands [ 0 ] . type		3525239	0					
ANR	3528209	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3528210	PtrMemberAccess	op -> operands		3525239	0					
ANR	3528211	Identifier	op		3525239	0					
ANR	3528212	Identifier	operands		3525239	1					
ANR	3528213	PrimaryExpression	0		3525239	1					
ANR	3528214	Identifier	type		3525239	1					
ANR	3528215	Identifier	OT_QWORD		3525239	1					
ANR	3528216	CompoundStatement		400:37:10825:10825	3525239	1					
ANR	3528217	ExpressionStatement	data [ l ++ ] = 0x48	2163:4:56888:56904	3525239	0	True				
ANR	3528218	AssignmentExpression	data [ l ++ ] = 0x48		3525239	0		=			
ANR	3528219	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3528220	Identifier	data		3525239	0					
ANR	3528221	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3528222	Identifier	l		3525239	0					
ANR	3528223	IncDec	++		3525239	1					
ANR	3528224	PrimaryExpression	0x48		3525239	1					
ANR	3528225	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		3525239	6					
ANR	3528226	Condition	op -> operands [ 0 ] . type & OT_WORD	2167:6:56922:56951	3525239	0	True				
ANR	3528227	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		3525239	0		&			
ANR	3528228	MemberAccess	op -> operands [ 0 ] . type		3525239	0					
ANR	3528229	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3528230	PtrMemberAccess	op -> operands		3525239	0					
ANR	3528231	Identifier	op		3525239	0					
ANR	3528232	Identifier	operands		3525239	1					
ANR	3528233	PrimaryExpression	0		3525239	1					
ANR	3528234	Identifier	type		3525239	1					
ANR	3528235	Identifier	OT_WORD		3525239	1					
ANR	3528236	CompoundStatement		405:38:10897:10897	3525239	1					
ANR	3528237	ExpressionStatement	data [ l ++ ] = 0x66	2168:3:56959:56975	3525239	0	True				
ANR	3528238	AssignmentExpression	data [ l ++ ] = 0x66		3525239	0		=			
ANR	3528239	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3528240	Identifier	data		3525239	0					
ANR	3528241	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3528242	Identifier	l		3525239	0					
ANR	3528243	IncDec	++		3525239	1					
ANR	3528244	PrimaryExpression	0x66		3525239	1					
ANR	3528245	ExpressionStatement	data [ l ++ ] = op -> operands [ 1 ] . type & OT_BYTE ? 0x8a : 0x8b	2169:3:56980:57036	3525239	1	True				
ANR	3528246	AssignmentExpression	data [ l ++ ] = op -> operands [ 1 ] . type & OT_BYTE ? 0x8a : 0x8b		3525239	0		=			
ANR	3528247	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3528248	Identifier	data		3525239	0					
ANR	3528249	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3528250	Identifier	l		3525239	0					
ANR	3528251	IncDec	++		3525239	1					
ANR	3528252	ConditionalExpression	op -> operands [ 1 ] . type & OT_BYTE ? 0x8a : 0x8b		3525239	1					
ANR	3528253	Condition	op -> operands [ 1 ] . type & OT_BYTE		3525239	0					
ANR	3528254	BitAndExpression	op -> operands [ 1 ] . type & OT_BYTE		3525239	0		&			
ANR	3528255	MemberAccess	op -> operands [ 1 ] . type		3525239	0					
ANR	3528256	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3528257	PtrMemberAccess	op -> operands		3525239	0					
ANR	3528258	Identifier	op		3525239	0					
ANR	3528259	Identifier	operands		3525239	1					
ANR	3528260	PrimaryExpression	1		3525239	1					
ANR	3528261	Identifier	type		3525239	1					
ANR	3528262	Identifier	OT_BYTE		3525239	1					
ANR	3528263	PrimaryExpression	0x8a		3525239	1					
ANR	3528264	PrimaryExpression	0x8b		3525239	2					
ANR	3528265	ElseStatement	else		3525239	0					
ANR	3528266	CompoundStatement		408:9:10990:10990	3525239	0					
ANR	3528267	ExpressionStatement	data [ l ++ ] = ( op -> operands [ 1 ] . type & OT_BYTE || op -> operands [ 0 ] . type & OT_BYTE ) ? 0x8a : 0x8b	2171:3:57052:57152	3525239	0	True				
ANR	3528268	AssignmentExpression	data [ l ++ ] = ( op -> operands [ 1 ] . type & OT_BYTE || op -> operands [ 0 ] . type & OT_BYTE ) ? 0x8a : 0x8b		3525239	0		=			
ANR	3528269	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3528270	Identifier	data		3525239	0					
ANR	3528271	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3528272	Identifier	l		3525239	0					
ANR	3528273	IncDec	++		3525239	1					
ANR	3528274	ConditionalExpression	( op -> operands [ 1 ] . type & OT_BYTE || op -> operands [ 0 ] . type & OT_BYTE ) ? 0x8a : 0x8b		3525239	1					
ANR	3528275	Condition	op -> operands [ 1 ] . type & OT_BYTE || op -> operands [ 0 ] . type & OT_BYTE		3525239	0					
ANR	3528276	OrExpression	op -> operands [ 1 ] . type & OT_BYTE || op -> operands [ 0 ] . type & OT_BYTE		3525239	0		||			
ANR	3528277	BitAndExpression	op -> operands [ 1 ] . type & OT_BYTE		3525239	0		&			
ANR	3528278	MemberAccess	op -> operands [ 1 ] . type		3525239	0					
ANR	3528279	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3528280	PtrMemberAccess	op -> operands		3525239	0					
ANR	3528281	Identifier	op		3525239	0					
ANR	3528282	Identifier	operands		3525239	1					
ANR	3528283	PrimaryExpression	1		3525239	1					
ANR	3528284	Identifier	type		3525239	1					
ANR	3528285	Identifier	OT_BYTE		3525239	1					
ANR	3528286	BitAndExpression	op -> operands [ 0 ] . type & OT_BYTE		3525239	1		&			
ANR	3528287	MemberAccess	op -> operands [ 0 ] . type		3525239	0					
ANR	3528288	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3528289	PtrMemberAccess	op -> operands		3525239	0					
ANR	3528290	Identifier	op		3525239	0					
ANR	3528291	Identifier	operands		3525239	1					
ANR	3528292	PrimaryExpression	0		3525239	1					
ANR	3528293	Identifier	type		3525239	1					
ANR	3528294	Identifier	OT_BYTE		3525239	1					
ANR	3528295	PrimaryExpression	0x8a		3525239	1					
ANR	3528296	PrimaryExpression	0x8b		3525239	2					
ANR	3528297	IfStatement	if ( op -> operands [ 1 ] . regs [ 0 ] == X86R_UNDEFINED )		3525239	7					
ANR	3528298	Condition	op -> operands [ 1 ] . regs [ 0 ] == X86R_UNDEFINED	2176:6:57165:57205	3525239	0	True				
ANR	3528299	EqualityExpression	op -> operands [ 1 ] . regs [ 0 ] == X86R_UNDEFINED		3525239	0		==			
ANR	3528300	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3525239	0					
ANR	3528301	MemberAccess	op -> operands [ 1 ] . regs		3525239	0					
ANR	3528302	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3528303	PtrMemberAccess	op -> operands		3525239	0					
ANR	3528304	Identifier	op		3525239	0					
ANR	3528305	Identifier	operands		3525239	1					
ANR	3528306	PrimaryExpression	1		3525239	1					
ANR	3528307	Identifier	regs		3525239	1					
ANR	3528308	PrimaryExpression	0		3525239	1					
ANR	3528309	Identifier	X86R_UNDEFINED		3525239	1					
ANR	3528310	CompoundStatement		414:49:11151:11151	3525239	1					
ANR	3528311	IfStatement	if ( a -> bits == 64 )		3525239	0					
ANR	3528312	Condition	a -> bits == 64	2177:7:57217:57229	3525239	0	True				
ANR	3528313	EqualityExpression	a -> bits == 64		3525239	0		==			
ANR	3528314	PtrMemberAccess	a -> bits		3525239	0					
ANR	3528315	Identifier	a		3525239	0					
ANR	3528316	Identifier	bits		3525239	1					
ANR	3528317	PrimaryExpression	64		3525239	1					
ANR	3528318	CompoundStatement		415:22:11175:11175	3525239	1					
ANR	3528319	ExpressionStatement	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | 0x4	2178:4:57238:57280	3525239	0	True				
ANR	3528320	AssignmentExpression	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | 0x4		3525239	0		=			
ANR	3528321	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3528322	Identifier	data		3525239	0					
ANR	3528323	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3528324	Identifier	l		3525239	0					
ANR	3528325	IncDec	++		3525239	1					
ANR	3528326	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | 0x4		3525239	1		|			
ANR	3528327	ShiftExpression	op -> operands [ 0 ] . reg << 3		3525239	0		<<			
ANR	3528328	MemberAccess	op -> operands [ 0 ] . reg		3525239	0					
ANR	3528329	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3528330	PtrMemberAccess	op -> operands		3525239	0					
ANR	3528331	Identifier	op		3525239	0					
ANR	3528332	Identifier	operands		3525239	1					
ANR	3528333	PrimaryExpression	0		3525239	1					
ANR	3528334	Identifier	reg		3525239	1					
ANR	3528335	PrimaryExpression	3		3525239	1					
ANR	3528336	PrimaryExpression	0x4		3525239	1					
ANR	3528337	ExpressionStatement	data [ l ++ ] = 0x25	2179:4:57286:57302	3525239	1	True				
ANR	3528338	AssignmentExpression	data [ l ++ ] = 0x25		3525239	0		=			
ANR	3528339	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3528340	Identifier	data		3525239	0					
ANR	3528341	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3528342	Identifier	l		3525239	0					
ANR	3528343	IncDec	++		3525239	1					
ANR	3528344	PrimaryExpression	0x25		3525239	1					
ANR	3528345	ElseStatement	else		3525239	0					
ANR	3528346	CompoundStatement		418:10:11257:11257	3525239	0					
ANR	3528347	ExpressionStatement	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | 0x5	2181:4:57320:57362	3525239	0	True				
ANR	3528348	AssignmentExpression	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | 0x5		3525239	0		=			
ANR	3528349	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3528350	Identifier	data		3525239	0					
ANR	3528351	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3528352	Identifier	l		3525239	0					
ANR	3528353	IncDec	++		3525239	1					
ANR	3528354	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | 0x5		3525239	1		|			
ANR	3528355	ShiftExpression	op -> operands [ 0 ] . reg << 3		3525239	0		<<			
ANR	3528356	MemberAccess	op -> operands [ 0 ] . reg		3525239	0					
ANR	3528357	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3528358	PtrMemberAccess	op -> operands		3525239	0					
ANR	3528359	Identifier	op		3525239	0					
ANR	3528360	Identifier	operands		3525239	1					
ANR	3528361	PrimaryExpression	0		3525239	1					
ANR	3528362	Identifier	reg		3525239	1					
ANR	3528363	PrimaryExpression	3		3525239	1					
ANR	3528364	PrimaryExpression	0x5		3525239	1					
ANR	3528365	ExpressionStatement	data [ l ++ ] = offset	2183:3:57372:57390	3525239	1	True				
ANR	3528366	AssignmentExpression	data [ l ++ ] = offset		3525239	0		=			
ANR	3528367	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3528368	Identifier	data		3525239	0					
ANR	3528369	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3528370	Identifier	l		3525239	0					
ANR	3528371	IncDec	++		3525239	1					
ANR	3528372	Identifier	offset		3525239	1					
ANR	3528373	ExpressionStatement	data [ l ++ ] = offset >> 8	2184:3:57395:57418	3525239	2	True				
ANR	3528374	AssignmentExpression	data [ l ++ ] = offset >> 8		3525239	0		=			
ANR	3528375	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3528376	Identifier	data		3525239	0					
ANR	3528377	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3528378	Identifier	l		3525239	0					
ANR	3528379	IncDec	++		3525239	1					
ANR	3528380	ShiftExpression	offset >> 8		3525239	1		>>			
ANR	3528381	Identifier	offset		3525239	0					
ANR	3528382	PrimaryExpression	8		3525239	1					
ANR	3528383	ExpressionStatement	data [ l ++ ] = offset >> 16	2185:3:57423:57447	3525239	3	True				
ANR	3528384	AssignmentExpression	data [ l ++ ] = offset >> 16		3525239	0		=			
ANR	3528385	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3528386	Identifier	data		3525239	0					
ANR	3528387	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3528388	Identifier	l		3525239	0					
ANR	3528389	IncDec	++		3525239	1					
ANR	3528390	ShiftExpression	offset >> 16		3525239	1		>>			
ANR	3528391	Identifier	offset		3525239	0					
ANR	3528392	PrimaryExpression	16		3525239	1					
ANR	3528393	ExpressionStatement	data [ l ++ ] = offset >> 24	2186:3:57452:57476	3525239	4	True				
ANR	3528394	AssignmentExpression	data [ l ++ ] = offset >> 24		3525239	0		=			
ANR	3528395	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3528396	Identifier	data		3525239	0					
ANR	3528397	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3528398	Identifier	l		3525239	0					
ANR	3528399	IncDec	++		3525239	1					
ANR	3528400	ShiftExpression	offset >> 24		3525239	1		>>			
ANR	3528401	Identifier	offset		3525239	0					
ANR	3528402	PrimaryExpression	24		3525239	1					
ANR	3528403	ElseStatement	else		3525239	0					
ANR	3528404	CompoundStatement		425:9:11430:11430	3525239	0					
ANR	3528405	IfStatement	if ( op -> operands [ 1 ] . scale [ 0 ] > 1 )		3525239	0					
ANR	3528406	Condition	op -> operands [ 1 ] . scale [ 0 ] > 1	2188:7:57496:57523	3525239	0	True				
ANR	3528407	RelationalExpression	op -> operands [ 1 ] . scale [ 0 ] > 1		3525239	0		>			
ANR	3528408	ArrayIndexing	op -> operands [ 1 ] . scale [ 0 ]		3525239	0					
ANR	3528409	MemberAccess	op -> operands [ 1 ] . scale		3525239	0					
ANR	3528410	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3528411	PtrMemberAccess	op -> operands		3525239	0					
ANR	3528412	Identifier	op		3525239	0					
ANR	3528413	Identifier	operands		3525239	1					
ANR	3528414	PrimaryExpression	1		3525239	1					
ANR	3528415	Identifier	scale		3525239	1					
ANR	3528416	PrimaryExpression	0		3525239	1					
ANR	3528417	PrimaryExpression	1		3525239	1					
ANR	3528418	CompoundStatement		426:37:11469:11469	3525239	1					
ANR	3528419	ExpressionStatement	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | 4	2189:4:57532:57572	3525239	0	True				
ANR	3528420	AssignmentExpression	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | 4		3525239	0		=			
ANR	3528421	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3528422	Identifier	data		3525239	0					
ANR	3528423	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3528424	Identifier	l		3525239	0					
ANR	3528425	IncDec	++		3525239	1					
ANR	3528426	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | 4		3525239	1		|			
ANR	3528427	ShiftExpression	op -> operands [ 0 ] . reg << 3		3525239	0		<<			
ANR	3528428	MemberAccess	op -> operands [ 0 ] . reg		3525239	0					
ANR	3528429	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3528430	PtrMemberAccess	op -> operands		3525239	0					
ANR	3528431	Identifier	op		3525239	0					
ANR	3528432	Identifier	operands		3525239	1					
ANR	3528433	PrimaryExpression	0		3525239	1					
ANR	3528434	Identifier	reg		3525239	1					
ANR	3528435	PrimaryExpression	3		3525239	1					
ANR	3528436	PrimaryExpression	4		3525239	1					
ANR	3528437	IfStatement	if ( op -> operands [ 1 ] . scale [ 0 ] >= 2 )		3525239	1					
ANR	3528438	Condition	op -> operands [ 1 ] . scale [ 0 ] >= 2	2191:8:57583:57611	3525239	0	True				
ANR	3528439	RelationalExpression	op -> operands [ 1 ] . scale [ 0 ] >= 2		3525239	0		>=			
ANR	3528440	ArrayIndexing	op -> operands [ 1 ] . scale [ 0 ]		3525239	0					
ANR	3528441	MemberAccess	op -> operands [ 1 ] . scale		3525239	0					
ANR	3528442	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3528443	PtrMemberAccess	op -> operands		3525239	0					
ANR	3528444	Identifier	op		3525239	0					
ANR	3528445	Identifier	operands		3525239	1					
ANR	3528446	PrimaryExpression	1		3525239	1					
ANR	3528447	Identifier	scale		3525239	1					
ANR	3528448	PrimaryExpression	0		3525239	1					
ANR	3528449	PrimaryExpression	2		3525239	1					
ANR	3528450	CompoundStatement		429:39:11557:11557	3525239	1					
ANR	3528451	ExpressionStatement	base = 5	2192:5:57621:57629	3525239	0	True				
ANR	3528452	AssignmentExpression	base = 5		3525239	0		=			
ANR	3528453	Identifier	base		3525239	0					
ANR	3528454	PrimaryExpression	5		3525239	1					
ANR	3528455	IfStatement	if ( base )		3525239	2					
ANR	3528456	Condition	base	2194:8:57645:57648	3525239	0	True				
ANR	3528457	Identifier	base		3525239	0					
ANR	3528458	CompoundStatement		432:14:11594:11594	3525239	1					
ANR	3528459	ExpressionStatement	data [ l ++ ] = getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 6 | op -> operands [ 1 ] . regs [ 0 ] << 3 | base	2195:5:57658:57746	3525239	0	True				
ANR	3528460	AssignmentExpression	data [ l ++ ] = getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 6 | op -> operands [ 1 ] . regs [ 0 ] << 3 | base		3525239	0		=			
ANR	3528461	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3528462	Identifier	data		3525239	0					
ANR	3528463	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3528464	Identifier	l		3525239	0					
ANR	3528465	IncDec	++		3525239	1					
ANR	3528466	InclusiveOrExpression	getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 6 | op -> operands [ 1 ] . regs [ 0 ] << 3 | base		3525239	1		|			
ANR	3528467	ShiftExpression	getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 6		3525239	0		<<			
ANR	3528468	CallExpression	getsib ( op -> operands [ 1 ] . scale [ 0 ] )		3525239	0					
ANR	3528469	Callee	getsib		3525239	0					
ANR	3528470	Identifier	getsib		3525239	0					
ANR	3528471	ArgumentList	op -> operands [ 1 ] . scale [ 0 ]		3525239	1					
ANR	3528472	Argument	op -> operands [ 1 ] . scale [ 0 ]		3525239	0					
ANR	3528473	ArrayIndexing	op -> operands [ 1 ] . scale [ 0 ]		3525239	0					
ANR	3528474	MemberAccess	op -> operands [ 1 ] . scale		3525239	0					
ANR	3528475	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3528476	PtrMemberAccess	op -> operands		3525239	0					
ANR	3528477	Identifier	op		3525239	0					
ANR	3528478	Identifier	operands		3525239	1					
ANR	3528479	PrimaryExpression	1		3525239	1					
ANR	3528480	Identifier	scale		3525239	1					
ANR	3528481	PrimaryExpression	0		3525239	1					
ANR	3528482	PrimaryExpression	6		3525239	1					
ANR	3528483	InclusiveOrExpression	op -> operands [ 1 ] . regs [ 0 ] << 3 | base		3525239	1		|			
ANR	3528484	ShiftExpression	op -> operands [ 1 ] . regs [ 0 ] << 3		3525239	0		<<			
ANR	3528485	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3525239	0					
ANR	3528486	MemberAccess	op -> operands [ 1 ] . regs		3525239	0					
ANR	3528487	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3528488	PtrMemberAccess	op -> operands		3525239	0					
ANR	3528489	Identifier	op		3525239	0					
ANR	3528490	Identifier	operands		3525239	1					
ANR	3528491	PrimaryExpression	1		3525239	1					
ANR	3528492	Identifier	regs		3525239	1					
ANR	3528493	PrimaryExpression	0		3525239	1					
ANR	3528494	PrimaryExpression	3		3525239	1					
ANR	3528495	Identifier	base		3525239	1					
ANR	3528496	ElseStatement	else		3525239	0					
ANR	3528497	CompoundStatement		434:11:11702:11702	3525239	0					
ANR	3528498	ExpressionStatement	data [ l ++ ] = getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 3 | op -> operands [ 1 ] . regs [ 0 ]	2197:5:57766:57842	3525239	0	True				
ANR	3528499	AssignmentExpression	data [ l ++ ] = getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 3 | op -> operands [ 1 ] . regs [ 0 ]		3525239	0		=			
ANR	3528500	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3528501	Identifier	data		3525239	0					
ANR	3528502	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3528503	Identifier	l		3525239	0					
ANR	3528504	IncDec	++		3525239	1					
ANR	3528505	InclusiveOrExpression	getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 3 | op -> operands [ 1 ] . regs [ 0 ]		3525239	1		|			
ANR	3528506	ShiftExpression	getsib ( op -> operands [ 1 ] . scale [ 0 ] ) << 3		3525239	0		<<			
ANR	3528507	CallExpression	getsib ( op -> operands [ 1 ] . scale [ 0 ] )		3525239	0					
ANR	3528508	Callee	getsib		3525239	0					
ANR	3528509	Identifier	getsib		3525239	0					
ANR	3528510	ArgumentList	op -> operands [ 1 ] . scale [ 0 ]		3525239	1					
ANR	3528511	Argument	op -> operands [ 1 ] . scale [ 0 ]		3525239	0					
ANR	3528512	ArrayIndexing	op -> operands [ 1 ] . scale [ 0 ]		3525239	0					
ANR	3528513	MemberAccess	op -> operands [ 1 ] . scale		3525239	0					
ANR	3528514	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3528515	PtrMemberAccess	op -> operands		3525239	0					
ANR	3528516	Identifier	op		3525239	0					
ANR	3528517	Identifier	operands		3525239	1					
ANR	3528518	PrimaryExpression	1		3525239	1					
ANR	3528519	Identifier	scale		3525239	1					
ANR	3528520	PrimaryExpression	0		3525239	1					
ANR	3528521	PrimaryExpression	3		3525239	1					
ANR	3528522	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3525239	1					
ANR	3528523	MemberAccess	op -> operands [ 1 ] . regs		3525239	0					
ANR	3528524	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3528525	PtrMemberAccess	op -> operands		3525239	0					
ANR	3528526	Identifier	op		3525239	0					
ANR	3528527	Identifier	operands		3525239	1					
ANR	3528528	PrimaryExpression	1		3525239	1					
ANR	3528529	Identifier	regs		3525239	1					
ANR	3528530	PrimaryExpression	0		3525239	1					
ANR	3528531	IfStatement	if ( offset || base )		3525239	3					
ANR	3528532	Condition	offset || base	2199:8:57858:57871	3525239	0	True				
ANR	3528533	OrExpression	offset || base		3525239	0		||			
ANR	3528534	Identifier	offset		3525239	0					
ANR	3528535	Identifier	base		3525239	1					
ANR	3528536	CompoundStatement		437:24:11817:11817	3525239	1					
ANR	3528537	ExpressionStatement	data [ l ++ ] = offset	2200:5:57881:57899	3525239	0	True				
ANR	3528538	AssignmentExpression	data [ l ++ ] = offset		3525239	0		=			
ANR	3528539	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3528540	Identifier	data		3525239	0					
ANR	3528541	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3528542	Identifier	l		3525239	0					
ANR	3528543	IncDec	++		3525239	1					
ANR	3528544	Identifier	offset		3525239	1					
ANR	3528545	ExpressionStatement	data [ l ++ ] = offset >> 8	2201:5:57906:57929	3525239	1	True				
ANR	3528546	AssignmentExpression	data [ l ++ ] = offset >> 8		3525239	0		=			
ANR	3528547	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3528548	Identifier	data		3525239	0					
ANR	3528549	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3528550	Identifier	l		3525239	0					
ANR	3528551	IncDec	++		3525239	1					
ANR	3528552	ShiftExpression	offset >> 8		3525239	1		>>			
ANR	3528553	Identifier	offset		3525239	0					
ANR	3528554	PrimaryExpression	8		3525239	1					
ANR	3528555	ExpressionStatement	data [ l ++ ] = offset >> 16	2202:5:57936:57960	3525239	2	True				
ANR	3528556	AssignmentExpression	data [ l ++ ] = offset >> 16		3525239	0		=			
ANR	3528557	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3528558	Identifier	data		3525239	0					
ANR	3528559	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3528560	Identifier	l		3525239	0					
ANR	3528561	IncDec	++		3525239	1					
ANR	3528562	ShiftExpression	offset >> 16		3525239	1		>>			
ANR	3528563	Identifier	offset		3525239	0					
ANR	3528564	PrimaryExpression	16		3525239	1					
ANR	3528565	ExpressionStatement	data [ l ++ ] = offset >> 24	2203:5:57967:57991	3525239	3	True				
ANR	3528566	AssignmentExpression	data [ l ++ ] = offset >> 24		3525239	0		=			
ANR	3528567	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3528568	Identifier	data		3525239	0					
ANR	3528569	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3528570	Identifier	l		3525239	0					
ANR	3528571	IncDec	++		3525239	1					
ANR	3528572	ShiftExpression	offset >> 24		3525239	1		>>			
ANR	3528573	Identifier	offset		3525239	0					
ANR	3528574	PrimaryExpression	24		3525239	1					
ANR	3528575	ReturnStatement	return l ;	2205:4:58003:58011	3525239	4	True				
ANR	3528576	Identifier	l		3525239	0					
ANR	3528577	IfStatement	if ( op -> operands [ 1 ] . regs [ 1 ] != X86R_UNDEFINED )		3525239	1					
ANR	3528578	Condition	op -> operands [ 1 ] . regs [ 1 ] != X86R_UNDEFINED	2207:7:58025:58065	3525239	0	True				
ANR	3528579	EqualityExpression	op -> operands [ 1 ] . regs [ 1 ] != X86R_UNDEFINED		3525239	0		!=			
ANR	3528580	ArrayIndexing	op -> operands [ 1 ] . regs [ 1 ]		3525239	0					
ANR	3528581	MemberAccess	op -> operands [ 1 ] . regs		3525239	0					
ANR	3528582	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3528583	PtrMemberAccess	op -> operands		3525239	0					
ANR	3528584	Identifier	op		3525239	0					
ANR	3528585	Identifier	operands		3525239	1					
ANR	3528586	PrimaryExpression	1		3525239	1					
ANR	3528587	Identifier	regs		3525239	1					
ANR	3528588	PrimaryExpression	1		3525239	1					
ANR	3528589	Identifier	X86R_UNDEFINED		3525239	1					
ANR	3528590	CompoundStatement		445:50:12011:12011	3525239	1					
ANR	3528591	ExpressionStatement	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | 0x4	2208:4:58074:58116	3525239	0	True				
ANR	3528592	AssignmentExpression	data [ l ++ ] = op -> operands [ 0 ] . reg << 3 | 0x4		3525239	0		=			
ANR	3528593	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3528594	Identifier	data		3525239	0					
ANR	3528595	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3528596	Identifier	l		3525239	0					
ANR	3528597	IncDec	++		3525239	1					
ANR	3528598	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | 0x4		3525239	1		|			
ANR	3528599	ShiftExpression	op -> operands [ 0 ] . reg << 3		3525239	0		<<			
ANR	3528600	MemberAccess	op -> operands [ 0 ] . reg		3525239	0					
ANR	3528601	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3528602	PtrMemberAccess	op -> operands		3525239	0					
ANR	3528603	Identifier	op		3525239	0					
ANR	3528604	Identifier	operands		3525239	1					
ANR	3528605	PrimaryExpression	0		3525239	1					
ANR	3528606	Identifier	reg		3525239	1					
ANR	3528607	PrimaryExpression	3		3525239	1					
ANR	3528608	PrimaryExpression	0x4		3525239	1					
ANR	3528609	ExpressionStatement	data [ l ++ ] = op -> operands [ 1 ] . regs [ 1 ] << 3 | op -> operands [ 1 ] . regs [ 0 ]	2209:4:58122:58188	3525239	1	True				
ANR	3528610	AssignmentExpression	data [ l ++ ] = op -> operands [ 1 ] . regs [ 1 ] << 3 | op -> operands [ 1 ] . regs [ 0 ]		3525239	0		=			
ANR	3528611	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3528612	Identifier	data		3525239	0					
ANR	3528613	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3528614	Identifier	l		3525239	0					
ANR	3528615	IncDec	++		3525239	1					
ANR	3528616	InclusiveOrExpression	op -> operands [ 1 ] . regs [ 1 ] << 3 | op -> operands [ 1 ] . regs [ 0 ]		3525239	1		|			
ANR	3528617	ShiftExpression	op -> operands [ 1 ] . regs [ 1 ] << 3		3525239	0		<<			
ANR	3528618	ArrayIndexing	op -> operands [ 1 ] . regs [ 1 ]		3525239	0					
ANR	3528619	MemberAccess	op -> operands [ 1 ] . regs		3525239	0					
ANR	3528620	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3528621	PtrMemberAccess	op -> operands		3525239	0					
ANR	3528622	Identifier	op		3525239	0					
ANR	3528623	Identifier	operands		3525239	1					
ANR	3528624	PrimaryExpression	1		3525239	1					
ANR	3528625	Identifier	regs		3525239	1					
ANR	3528626	PrimaryExpression	1		3525239	1					
ANR	3528627	PrimaryExpression	3		3525239	1					
ANR	3528628	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3525239	1					
ANR	3528629	MemberAccess	op -> operands [ 1 ] . regs		3525239	0					
ANR	3528630	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3528631	PtrMemberAccess	op -> operands		3525239	0					
ANR	3528632	Identifier	op		3525239	0					
ANR	3528633	Identifier	operands		3525239	1					
ANR	3528634	PrimaryExpression	1		3525239	1					
ANR	3528635	Identifier	regs		3525239	1					
ANR	3528636	PrimaryExpression	0		3525239	1					
ANR	3528637	ReturnStatement	return l ;	2210:4:58194:58202	3525239	2	True				
ANR	3528638	Identifier	l		3525239	0					
ANR	3528639	IfStatement	if ( offset || op -> operands [ 1 ] . regs [ 0 ] == X86R_EBP )		3525239	2					
ANR	3528640	Condition	offset || op -> operands [ 1 ] . regs [ 0 ] == X86R_EBP	2213:7:58217:58261	3525239	0	True				
ANR	3528641	OrExpression	offset || op -> operands [ 1 ] . regs [ 0 ] == X86R_EBP		3525239	0		||			
ANR	3528642	Identifier	offset		3525239	0					
ANR	3528643	EqualityExpression	op -> operands [ 1 ] . regs [ 0 ] == X86R_EBP		3525239	1		==			
ANR	3528644	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3525239	0					
ANR	3528645	MemberAccess	op -> operands [ 1 ] . regs		3525239	0					
ANR	3528646	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3528647	PtrMemberAccess	op -> operands		3525239	0					
ANR	3528648	Identifier	op		3525239	0					
ANR	3528649	Identifier	operands		3525239	1					
ANR	3528650	PrimaryExpression	1		3525239	1					
ANR	3528651	Identifier	regs		3525239	1					
ANR	3528652	PrimaryExpression	0		3525239	1					
ANR	3528653	Identifier	X86R_EBP		3525239	1					
ANR	3528654	CompoundStatement		451:54:12207:12207	3525239	1					
ANR	3528655	ExpressionStatement	mod = 0x2	2214:4:58270:58279	3525239	0	True				
ANR	3528656	AssignmentExpression	mod = 0x2		3525239	0		=			
ANR	3528657	Identifier	mod		3525239	0					
ANR	3528658	PrimaryExpression	0x2		3525239	1					
ANR	3528659	IfStatement	if ( op -> operands [ 1 ] . offset > 127 )		3525239	1					
ANR	3528660	Condition	op -> operands [ 1 ] . offset > 127	2215:8:58289:58316	3525239	0	True				
ANR	3528661	RelationalExpression	op -> operands [ 1 ] . offset > 127		3525239	0		>			
ANR	3528662	MemberAccess	op -> operands [ 1 ] . offset		3525239	0					
ANR	3528663	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3528664	PtrMemberAccess	op -> operands		3525239	0					
ANR	3528665	Identifier	op		3525239	0					
ANR	3528666	Identifier	operands		3525239	1					
ANR	3528667	PrimaryExpression	1		3525239	1					
ANR	3528668	Identifier	offset		3525239	1					
ANR	3528669	PrimaryExpression	127		3525239	1					
ANR	3528670	CompoundStatement		453:38:12262:12262	3525239	1					
ANR	3528671	ExpressionStatement	mod = 0x4	2216:5:58326:58335	3525239	0	True				
ANR	3528672	AssignmentExpression	mod = 0x4		3525239	0		=			
ANR	3528673	Identifier	mod		3525239	0					
ANR	3528674	PrimaryExpression	0x4		3525239	1					
ANR	3528675	IfStatement	if ( a -> bits == 64 && offset && op -> operands [ 0 ] . type & OT_QWORD )		3525239	3					
ANR	3528676	Condition	a -> bits == 64 && offset && op -> operands [ 0 ] . type & OT_QWORD	2219:7:58355:58412	3525239	0	True				
ANR	3528677	AndExpression	a -> bits == 64 && offset && op -> operands [ 0 ] . type & OT_QWORD		3525239	0		&&			
ANR	3528678	EqualityExpression	a -> bits == 64		3525239	0		==			
ANR	3528679	PtrMemberAccess	a -> bits		3525239	0					
ANR	3528680	Identifier	a		3525239	0					
ANR	3528681	Identifier	bits		3525239	1					
ANR	3528682	PrimaryExpression	64		3525239	1					
ANR	3528683	AndExpression	offset && op -> operands [ 0 ] . type & OT_QWORD		3525239	1		&&			
ANR	3528684	Identifier	offset		3525239	0					
ANR	3528685	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		3525239	1		&			
ANR	3528686	MemberAccess	op -> operands [ 0 ] . type		3525239	0					
ANR	3528687	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3528688	PtrMemberAccess	op -> operands		3525239	0					
ANR	3528689	Identifier	op		3525239	0					
ANR	3528690	Identifier	operands		3525239	1					
ANR	3528691	PrimaryExpression	0		3525239	1					
ANR	3528692	Identifier	type		3525239	1					
ANR	3528693	Identifier	OT_QWORD		3525239	1					
ANR	3528694	CompoundStatement		457:67:12358:12358	3525239	1					
ANR	3528695	IfStatement	if ( op -> operands [ 1 ] . regs [ 0 ] == X86R_RIP )		3525239	0					
ANR	3528696	Condition	op -> operands [ 1 ] . regs [ 0 ] == X86R_RIP	2220:8:58425:58459	3525239	0	True				
ANR	3528697	EqualityExpression	op -> operands [ 1 ] . regs [ 0 ] == X86R_RIP		3525239	0		==			
ANR	3528698	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3525239	0					
ANR	3528699	MemberAccess	op -> operands [ 1 ] . regs		3525239	0					
ANR	3528700	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3528701	PtrMemberAccess	op -> operands		3525239	0					
ANR	3528702	Identifier	op		3525239	0					
ANR	3528703	Identifier	operands		3525239	1					
ANR	3528704	PrimaryExpression	1		3525239	1					
ANR	3528705	Identifier	regs		3525239	1					
ANR	3528706	PrimaryExpression	0		3525239	1					
ANR	3528707	Identifier	X86R_RIP		3525239	1					
ANR	3528708	CompoundStatement		458:45:12405:12405	3525239	1					
ANR	3528709	ExpressionStatement	data [ l ++ ] = 0x5	2221:5:58469:58484	3525239	0	True				
ANR	3528710	AssignmentExpression	data [ l ++ ] = 0x5		3525239	0		=			
ANR	3528711	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3528712	Identifier	data		3525239	0					
ANR	3528713	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3528714	Identifier	l		3525239	0					
ANR	3528715	IncDec	++		3525239	1					
ANR	3528716	PrimaryExpression	0x5		3525239	1					
ANR	3528717	ElseStatement	else		3525239	0					
ANR	3528718	CompoundStatement		460:11:12440:12440	3525239	0					
ANR	3528719	IfStatement	if ( op -> operands [ 1 ] . offset > 127 )		3525239	0					
ANR	3528720	Condition	op -> operands [ 1 ] . offset > 127	2223:9:58508:58535	3525239	0	True				
ANR	3528721	RelationalExpression	op -> operands [ 1 ] . offset > 127		3525239	0		>			
ANR	3528722	MemberAccess	op -> operands [ 1 ] . offset		3525239	0					
ANR	3528723	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3528724	PtrMemberAccess	op -> operands		3525239	0					
ANR	3528725	Identifier	op		3525239	0					
ANR	3528726	Identifier	operands		3525239	1					
ANR	3528727	PrimaryExpression	1		3525239	1					
ANR	3528728	Identifier	offset		3525239	1					
ANR	3528729	PrimaryExpression	127		3525239	1					
ANR	3528730	CompoundStatement		461:39:12481:12481	3525239	1					
ANR	3528731	ExpressionStatement	data [ l ++ ] = 0x80 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]	2224:6:58546:58615	3525239	0	True				
ANR	3528732	AssignmentExpression	data [ l ++ ] = 0x80 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		3525239	0		=			
ANR	3528733	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3528734	Identifier	data		3525239	0					
ANR	3528735	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3528736	Identifier	l		3525239	0					
ANR	3528737	IncDec	++		3525239	1					
ANR	3528738	InclusiveOrExpression	0x80 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		3525239	1		|			
ANR	3528739	PrimaryExpression	0x80		3525239	0					
ANR	3528740	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		3525239	1		|			
ANR	3528741	ShiftExpression	op -> operands [ 0 ] . reg << 3		3525239	0		<<			
ANR	3528742	MemberAccess	op -> operands [ 0 ] . reg		3525239	0					
ANR	3528743	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3528744	PtrMemberAccess	op -> operands		3525239	0					
ANR	3528745	Identifier	op		3525239	0					
ANR	3528746	Identifier	operands		3525239	1					
ANR	3528747	PrimaryExpression	0		3525239	1					
ANR	3528748	Identifier	reg		3525239	1					
ANR	3528749	PrimaryExpression	3		3525239	1					
ANR	3528750	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3525239	1					
ANR	3528751	MemberAccess	op -> operands [ 1 ] . regs		3525239	0					
ANR	3528752	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3528753	PtrMemberAccess	op -> operands		3525239	0					
ANR	3528754	Identifier	op		3525239	0					
ANR	3528755	Identifier	operands		3525239	1					
ANR	3528756	PrimaryExpression	1		3525239	1					
ANR	3528757	Identifier	regs		3525239	1					
ANR	3528758	PrimaryExpression	0		3525239	1					
ANR	3528759	ElseStatement	else		3525239	0					
ANR	3528760	CompoundStatement		463:12:12572:12572	3525239	0					
ANR	3528761	ExpressionStatement	data [ l ++ ] = 0x40 | op -> operands [ 1 ] . regs [ 0 ]	2226:6:58637:58679	3525239	0	True				
ANR	3528762	AssignmentExpression	data [ l ++ ] = 0x40 | op -> operands [ 1 ] . regs [ 0 ]		3525239	0		=			
ANR	3528763	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3528764	Identifier	data		3525239	0					
ANR	3528765	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3528766	Identifier	l		3525239	0					
ANR	3528767	IncDec	++		3525239	1					
ANR	3528768	InclusiveOrExpression	0x40 | op -> operands [ 1 ] . regs [ 0 ]		3525239	1		|			
ANR	3528769	PrimaryExpression	0x40		3525239	0					
ANR	3528770	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3525239	1					
ANR	3528771	MemberAccess	op -> operands [ 1 ] . regs		3525239	0					
ANR	3528772	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3528773	PtrMemberAccess	op -> operands		3525239	0					
ANR	3528774	Identifier	op		3525239	0					
ANR	3528775	Identifier	operands		3525239	1					
ANR	3528776	PrimaryExpression	1		3525239	1					
ANR	3528777	Identifier	regs		3525239	1					
ANR	3528778	PrimaryExpression	0		3525239	1					
ANR	3528779	IfStatement	if ( op -> operands [ 1 ] . offset > 127 )		3525239	1					
ANR	3528780	Condition	op -> operands [ 1 ] . offset > 127	2229:8:58702:58729	3525239	0	True				
ANR	3528781	RelationalExpression	op -> operands [ 1 ] . offset > 127		3525239	0		>			
ANR	3528782	MemberAccess	op -> operands [ 1 ] . offset		3525239	0					
ANR	3528783	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3528784	PtrMemberAccess	op -> operands		3525239	0					
ANR	3528785	Identifier	op		3525239	0					
ANR	3528786	Identifier	operands		3525239	1					
ANR	3528787	PrimaryExpression	1		3525239	1					
ANR	3528788	Identifier	offset		3525239	1					
ANR	3528789	PrimaryExpression	127		3525239	1					
ANR	3528790	CompoundStatement		467:38:12675:12675	3525239	1					
ANR	3528791	ExpressionStatement	mod = 0x1	2230:5:58739:58748	3525239	0	True				
ANR	3528792	AssignmentExpression	mod = 0x1		3525239	0		=			
ANR	3528793	Identifier	mod		3525239	0					
ANR	3528794	PrimaryExpression	0x1		3525239	1					
ANR	3528795	ElseStatement	else		3525239	0					
ANR	3528796	CompoundStatement		470:10:12709:12709	3525239	0					
ANR	3528797	IfStatement	if ( op -> operands [ 1 ] . regs [ 0 ] == X86R_EIP && ( op -> operands [ 0 ] . type & OT_DWORD ) )		3525239	0					
ANR	3528798	Condition	op -> operands [ 1 ] . regs [ 0 ] == X86R_EIP && ( op -> operands [ 0 ] . type & OT_DWORD )	2233:8:58776:58847	3525239	0	True				
ANR	3528799	AndExpression	op -> operands [ 1 ] . regs [ 0 ] == X86R_EIP && ( op -> operands [ 0 ] . type & OT_DWORD )		3525239	0		&&			
ANR	3528800	EqualityExpression	op -> operands [ 1 ] . regs [ 0 ] == X86R_EIP		3525239	0		==			
ANR	3528801	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3525239	0					
ANR	3528802	MemberAccess	op -> operands [ 1 ] . regs		3525239	0					
ANR	3528803	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3528804	PtrMemberAccess	op -> operands		3525239	0					
ANR	3528805	Identifier	op		3525239	0					
ANR	3528806	Identifier	operands		3525239	1					
ANR	3528807	PrimaryExpression	1		3525239	1					
ANR	3528808	Identifier	regs		3525239	1					
ANR	3528809	PrimaryExpression	0		3525239	1					
ANR	3528810	Identifier	X86R_EIP		3525239	1					
ANR	3528811	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		3525239	1		&			
ANR	3528812	MemberAccess	op -> operands [ 0 ] . type		3525239	0					
ANR	3528813	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3528814	PtrMemberAccess	op -> operands		3525239	0					
ANR	3528815	Identifier	op		3525239	0					
ANR	3528816	Identifier	operands		3525239	1					
ANR	3528817	PrimaryExpression	0		3525239	1					
ANR	3528818	Identifier	type		3525239	1					
ANR	3528819	Identifier	OT_DWORD		3525239	1					
ANR	3528820	CompoundStatement		471:82:12793:12793	3525239	1					
ANR	3528821	ExpressionStatement	data [ l ++ ] = 0x0d	2234:5:58857:58873	3525239	0	True				
ANR	3528822	AssignmentExpression	data [ l ++ ] = 0x0d		3525239	0		=			
ANR	3528823	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3528824	Identifier	data		3525239	0					
ANR	3528825	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3528826	Identifier	l		3525239	0					
ANR	3528827	IncDec	++		3525239	1					
ANR	3528828	PrimaryExpression	0x0d		3525239	1					
ANR	3528829	ElseStatement	else		3525239	0					
ANR	3528830	IfStatement	if ( op -> operands [ 1 ] . regs [ 0 ] == X86R_RIP && ( op -> operands [ 0 ] . type & OT_QWORD ) )		3525239	0					
ANR	3528831	Condition	op -> operands [ 1 ] . regs [ 0 ] == X86R_RIP && ( op -> operands [ 0 ] . type & OT_QWORD )	2235:15:58890:58961	3525239	0	True				
ANR	3528832	AndExpression	op -> operands [ 1 ] . regs [ 0 ] == X86R_RIP && ( op -> operands [ 0 ] . type & OT_QWORD )		3525239	0		&&			
ANR	3528833	EqualityExpression	op -> operands [ 1 ] . regs [ 0 ] == X86R_RIP		3525239	0		==			
ANR	3528834	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3525239	0					
ANR	3528835	MemberAccess	op -> operands [ 1 ] . regs		3525239	0					
ANR	3528836	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3528837	PtrMemberAccess	op -> operands		3525239	0					
ANR	3528838	Identifier	op		3525239	0					
ANR	3528839	Identifier	operands		3525239	1					
ANR	3528840	PrimaryExpression	1		3525239	1					
ANR	3528841	Identifier	regs		3525239	1					
ANR	3528842	PrimaryExpression	0		3525239	1					
ANR	3528843	Identifier	X86R_RIP		3525239	1					
ANR	3528844	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		3525239	1		&			
ANR	3528845	MemberAccess	op -> operands [ 0 ] . type		3525239	0					
ANR	3528846	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3528847	PtrMemberAccess	op -> operands		3525239	0					
ANR	3528848	Identifier	op		3525239	0					
ANR	3528849	Identifier	operands		3525239	1					
ANR	3528850	PrimaryExpression	0		3525239	1					
ANR	3528851	Identifier	type		3525239	1					
ANR	3528852	Identifier	OT_QWORD		3525239	1					
ANR	3528853	CompoundStatement		473:89:12907:12907	3525239	1					
ANR	3528854	ExpressionStatement	data [ l ++ ] = 0x05	2236:5:58971:58987	3525239	0	True				
ANR	3528855	AssignmentExpression	data [ l ++ ] = 0x05		3525239	0		=			
ANR	3528856	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3528857	Identifier	data		3525239	0					
ANR	3528858	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3528859	Identifier	l		3525239	0					
ANR	3528860	IncDec	++		3525239	1					
ANR	3528861	PrimaryExpression	0x05		3525239	1					
ANR	3528862	ElseStatement	else		3525239	0					
ANR	3528863	CompoundStatement		475:11:12943:12943	3525239	0					
ANR	3528864	ExpressionStatement	data [ l ++ ] = mod << 5 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]	2238:5:59007:59080	3525239	0	True				
ANR	3528865	AssignmentExpression	data [ l ++ ] = mod << 5 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		3525239	0		=			
ANR	3528866	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3528867	Identifier	data		3525239	0					
ANR	3528868	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3528869	Identifier	l		3525239	0					
ANR	3528870	IncDec	++		3525239	1					
ANR	3528871	InclusiveOrExpression	mod << 5 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		3525239	1		|			
ANR	3528872	ShiftExpression	mod << 5		3525239	0		<<			
ANR	3528873	Identifier	mod		3525239	0					
ANR	3528874	PrimaryExpression	5		3525239	1					
ANR	3528875	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		3525239	1		|			
ANR	3528876	ShiftExpression	op -> operands [ 0 ] . reg << 3		3525239	0		<<			
ANR	3528877	MemberAccess	op -> operands [ 0 ] . reg		3525239	0					
ANR	3528878	ArrayIndexing	op -> operands [ 0 ]		3525239	0					
ANR	3528879	PtrMemberAccess	op -> operands		3525239	0					
ANR	3528880	Identifier	op		3525239	0					
ANR	3528881	Identifier	operands		3525239	1					
ANR	3528882	PrimaryExpression	0		3525239	1					
ANR	3528883	Identifier	reg		3525239	1					
ANR	3528884	PrimaryExpression	3		3525239	1					
ANR	3528885	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3525239	1					
ANR	3528886	MemberAccess	op -> operands [ 1 ] . regs		3525239	0					
ANR	3528887	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3528888	PtrMemberAccess	op -> operands		3525239	0					
ANR	3528889	Identifier	op		3525239	0					
ANR	3528890	Identifier	operands		3525239	1					
ANR	3528891	PrimaryExpression	1		3525239	1					
ANR	3528892	Identifier	regs		3525239	1					
ANR	3528893	PrimaryExpression	0		3525239	1					
ANR	3528894	IfStatement	if ( op -> operands [ 1 ] . regs [ 0 ] == X86R_ESP )		3525239	4					
ANR	3528895	Condition	op -> operands [ 1 ] . regs [ 0 ] == X86R_ESP	2241:7:59100:59134	3525239	0	True				
ANR	3528896	EqualityExpression	op -> operands [ 1 ] . regs [ 0 ] == X86R_ESP		3525239	0		==			
ANR	3528897	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3525239	0					
ANR	3528898	MemberAccess	op -> operands [ 1 ] . regs		3525239	0					
ANR	3528899	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3528900	PtrMemberAccess	op -> operands		3525239	0					
ANR	3528901	Identifier	op		3525239	0					
ANR	3528902	Identifier	operands		3525239	1					
ANR	3528903	PrimaryExpression	1		3525239	1					
ANR	3528904	Identifier	regs		3525239	1					
ANR	3528905	PrimaryExpression	0		3525239	1					
ANR	3528906	Identifier	X86R_ESP		3525239	1					
ANR	3528907	CompoundStatement		479:44:13080:13080	3525239	1					
ANR	3528908	ExpressionStatement	data [ l ++ ] = 0x24	2242:4:59143:59159	3525239	0	True				
ANR	3528909	AssignmentExpression	data [ l ++ ] = 0x24		3525239	0		=			
ANR	3528910	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3528911	Identifier	data		3525239	0					
ANR	3528912	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3528913	Identifier	l		3525239	0					
ANR	3528914	IncDec	++		3525239	1					
ANR	3528915	PrimaryExpression	0x24		3525239	1					
ANR	3528916	IfStatement	if ( mod >= 0x2 )		3525239	5					
ANR	3528917	Condition	mod >= 0x2	2244:7:59173:59182	3525239	0	True				
ANR	3528918	RelationalExpression	mod >= 0x2		3525239	0		>=			
ANR	3528919	Identifier	mod		3525239	0					
ANR	3528920	PrimaryExpression	0x2		3525239	1					
ANR	3528921	CompoundStatement		482:19:13128:13128	3525239	1					
ANR	3528922	ExpressionStatement	data [ l ++ ] = offset	2245:4:59191:59209	3525239	0	True				
ANR	3528923	AssignmentExpression	data [ l ++ ] = offset		3525239	0		=			
ANR	3528924	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3528925	Identifier	data		3525239	0					
ANR	3528926	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3528927	Identifier	l		3525239	0					
ANR	3528928	IncDec	++		3525239	1					
ANR	3528929	Identifier	offset		3525239	1					
ANR	3528930	IfStatement	if ( op -> operands [ 1 ] . offset > 128 || op -> operands [ 1 ] . regs [ 0 ] == X86R_EIP )		3525239	1					
ANR	3528931	Condition	op -> operands [ 1 ] . offset > 128 || op -> operands [ 1 ] . regs [ 0 ] == X86R_EIP	2246:8:59219:59285	3525239	0	True				
ANR	3528932	OrExpression	op -> operands [ 1 ] . offset > 128 || op -> operands [ 1 ] . regs [ 0 ] == X86R_EIP		3525239	0		||			
ANR	3528933	RelationalExpression	op -> operands [ 1 ] . offset > 128		3525239	0		>			
ANR	3528934	MemberAccess	op -> operands [ 1 ] . offset		3525239	0					
ANR	3528935	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3528936	PtrMemberAccess	op -> operands		3525239	0					
ANR	3528937	Identifier	op		3525239	0					
ANR	3528938	Identifier	operands		3525239	1					
ANR	3528939	PrimaryExpression	1		3525239	1					
ANR	3528940	Identifier	offset		3525239	1					
ANR	3528941	PrimaryExpression	128		3525239	1					
ANR	3528942	EqualityExpression	op -> operands [ 1 ] . regs [ 0 ] == X86R_EIP		3525239	1		==			
ANR	3528943	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3525239	0					
ANR	3528944	MemberAccess	op -> operands [ 1 ] . regs		3525239	0					
ANR	3528945	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3528946	PtrMemberAccess	op -> operands		3525239	0					
ANR	3528947	Identifier	op		3525239	0					
ANR	3528948	Identifier	operands		3525239	1					
ANR	3528949	PrimaryExpression	1		3525239	1					
ANR	3528950	Identifier	regs		3525239	1					
ANR	3528951	PrimaryExpression	0		3525239	1					
ANR	3528952	Identifier	X86R_EIP		3525239	1					
ANR	3528953	CompoundStatement		484:77:13231:13231	3525239	1					
ANR	3528954	ExpressionStatement	data [ l ++ ] = offset >> 8	2247:5:59295:59318	3525239	0	True				
ANR	3528955	AssignmentExpression	data [ l ++ ] = offset >> 8		3525239	0		=			
ANR	3528956	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3528957	Identifier	data		3525239	0					
ANR	3528958	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3528959	Identifier	l		3525239	0					
ANR	3528960	IncDec	++		3525239	1					
ANR	3528961	ShiftExpression	offset >> 8		3525239	1		>>			
ANR	3528962	Identifier	offset		3525239	0					
ANR	3528963	PrimaryExpression	8		3525239	1					
ANR	3528964	ExpressionStatement	data [ l ++ ] = offset >> 16	2248:5:59325:59349	3525239	1	True				
ANR	3528965	AssignmentExpression	data [ l ++ ] = offset >> 16		3525239	0		=			
ANR	3528966	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3528967	Identifier	data		3525239	0					
ANR	3528968	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3528969	Identifier	l		3525239	0					
ANR	3528970	IncDec	++		3525239	1					
ANR	3528971	ShiftExpression	offset >> 16		3525239	1		>>			
ANR	3528972	Identifier	offset		3525239	0					
ANR	3528973	PrimaryExpression	16		3525239	1					
ANR	3528974	ExpressionStatement	data [ l ++ ] = offset >> 24	2249:5:59356:59380	3525239	2	True				
ANR	3528975	AssignmentExpression	data [ l ++ ] = offset >> 24		3525239	0		=			
ANR	3528976	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3528977	Identifier	data		3525239	0					
ANR	3528978	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3528979	Identifier	l		3525239	0					
ANR	3528980	IncDec	++		3525239	1					
ANR	3528981	ShiftExpression	offset >> 24		3525239	1		>>			
ANR	3528982	Identifier	offset		3525239	0					
ANR	3528983	PrimaryExpression	24		3525239	1					
ANR	3528984	ElseStatement	else		3525239	0					
ANR	3528985	IfStatement	if ( a -> bits == 64 && ( offset || op -> operands [ 1 ] . regs [ 0 ] == X86R_RIP ) )		3525239	0					
ANR	3528986	Condition	a -> bits == 64 && ( offset || op -> operands [ 1 ] . regs [ 0 ] == X86R_RIP )	2251:14:59402:59465	3525239	0	True				
ANR	3528987	AndExpression	a -> bits == 64 && ( offset || op -> operands [ 1 ] . regs [ 0 ] == X86R_RIP )		3525239	0		&&			
ANR	3528988	EqualityExpression	a -> bits == 64		3525239	0		==			
ANR	3528989	PtrMemberAccess	a -> bits		3525239	0					
ANR	3528990	Identifier	a		3525239	0					
ANR	3528991	Identifier	bits		3525239	1					
ANR	3528992	PrimaryExpression	64		3525239	1					
ANR	3528993	OrExpression	offset || op -> operands [ 1 ] . regs [ 0 ] == X86R_RIP		3525239	1		||			
ANR	3528994	Identifier	offset		3525239	0					
ANR	3528995	EqualityExpression	op -> operands [ 1 ] . regs [ 0 ] == X86R_RIP		3525239	1		==			
ANR	3528996	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3525239	0					
ANR	3528997	MemberAccess	op -> operands [ 1 ] . regs		3525239	0					
ANR	3528998	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3528999	PtrMemberAccess	op -> operands		3525239	0					
ANR	3529000	Identifier	op		3525239	0					
ANR	3529001	Identifier	operands		3525239	1					
ANR	3529002	PrimaryExpression	1		3525239	1					
ANR	3529003	Identifier	regs		3525239	1					
ANR	3529004	PrimaryExpression	0		3525239	1					
ANR	3529005	Identifier	X86R_RIP		3525239	1					
ANR	3529006	CompoundStatement		489:80:13411:13411	3525239	1					
ANR	3529007	ExpressionStatement	data [ l ++ ] = offset	2252:4:59474:59492	3525239	0	True				
ANR	3529008	AssignmentExpression	data [ l ++ ] = offset		3525239	0		=			
ANR	3529009	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3529010	Identifier	data		3525239	0					
ANR	3529011	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3529012	Identifier	l		3525239	0					
ANR	3529013	IncDec	++		3525239	1					
ANR	3529014	Identifier	offset		3525239	1					
ANR	3529015	IfStatement	if ( op -> operands [ 1 ] . offset > 127 || op -> operands [ 1 ] . regs [ 0 ] == X86R_RIP )		3525239	1					
ANR	3529016	Condition	op -> operands [ 1 ] . offset > 127 || op -> operands [ 1 ] . regs [ 0 ] == X86R_RIP	2253:8:59502:59568	3525239	0	True				
ANR	3529017	OrExpression	op -> operands [ 1 ] . offset > 127 || op -> operands [ 1 ] . regs [ 0 ] == X86R_RIP		3525239	0		||			
ANR	3529018	RelationalExpression	op -> operands [ 1 ] . offset > 127		3525239	0		>			
ANR	3529019	MemberAccess	op -> operands [ 1 ] . offset		3525239	0					
ANR	3529020	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3529021	PtrMemberAccess	op -> operands		3525239	0					
ANR	3529022	Identifier	op		3525239	0					
ANR	3529023	Identifier	operands		3525239	1					
ANR	3529024	PrimaryExpression	1		3525239	1					
ANR	3529025	Identifier	offset		3525239	1					
ANR	3529026	PrimaryExpression	127		3525239	1					
ANR	3529027	EqualityExpression	op -> operands [ 1 ] . regs [ 0 ] == X86R_RIP		3525239	1		==			
ANR	3529028	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3525239	0					
ANR	3529029	MemberAccess	op -> operands [ 1 ] . regs		3525239	0					
ANR	3529030	ArrayIndexing	op -> operands [ 1 ]		3525239	0					
ANR	3529031	PtrMemberAccess	op -> operands		3525239	0					
ANR	3529032	Identifier	op		3525239	0					
ANR	3529033	Identifier	operands		3525239	1					
ANR	3529034	PrimaryExpression	1		3525239	1					
ANR	3529035	Identifier	regs		3525239	1					
ANR	3529036	PrimaryExpression	0		3525239	1					
ANR	3529037	Identifier	X86R_RIP		3525239	1					
ANR	3529038	CompoundStatement		491:77:13514:13514	3525239	1					
ANR	3529039	ExpressionStatement	data [ l ++ ] = offset >> 8	2254:5:59578:59601	3525239	0	True				
ANR	3529040	AssignmentExpression	data [ l ++ ] = offset >> 8		3525239	0		=			
ANR	3529041	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3529042	Identifier	data		3525239	0					
ANR	3529043	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3529044	Identifier	l		3525239	0					
ANR	3529045	IncDec	++		3525239	1					
ANR	3529046	ShiftExpression	offset >> 8		3525239	1		>>			
ANR	3529047	Identifier	offset		3525239	0					
ANR	3529048	PrimaryExpression	8		3525239	1					
ANR	3529049	ExpressionStatement	data [ l ++ ] = offset >> 16	2255:5:59608:59632	3525239	1	True				
ANR	3529050	AssignmentExpression	data [ l ++ ] = offset >> 16		3525239	0		=			
ANR	3529051	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3529052	Identifier	data		3525239	0					
ANR	3529053	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3529054	Identifier	l		3525239	0					
ANR	3529055	IncDec	++		3525239	1					
ANR	3529056	ShiftExpression	offset >> 16		3525239	1		>>			
ANR	3529057	Identifier	offset		3525239	0					
ANR	3529058	PrimaryExpression	16		3525239	1					
ANR	3529059	ExpressionStatement	data [ l ++ ] = offset >> 24	2256:5:59639:59663	3525239	2	True				
ANR	3529060	AssignmentExpression	data [ l ++ ] = offset >> 24		3525239	0		=			
ANR	3529061	ArrayIndexing	data [ l ++ ]		3525239	0					
ANR	3529062	Identifier	data		3525239	0					
ANR	3529063	PostIncDecOperationExpression	l ++		3525239	1					
ANR	3529064	Identifier	l		3525239	0					
ANR	3529065	IncDec	++		3525239	1					
ANR	3529066	ShiftExpression	offset >> 24		3525239	1		>>			
ANR	3529067	Identifier	offset		3525239	0					
ANR	3529068	PrimaryExpression	24		3525239	1					
ANR	3529069	ReturnStatement	return l ;	2261:1:59684:59692	3525239	7	True				
ANR	3529070	Identifier	l		3525239	0					
ANR	3529071	ReturnType	static int		3525239	1					
ANR	3529072	Identifier	opmov		3525239	2					
ANR	3529073	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3525239	3					
ANR	3529074	Parameter	RAsm * a	1763:17:46018:46024	3525239	0	True				
ANR	3529075	ParameterType	RAsm *		3525239	0					
ANR	3529076	Identifier	a		3525239	1					
ANR	3529077	Parameter	ut8 * data	1763:26:46027:46035	3525239	1	True				
ANR	3529078	ParameterType	ut8 *		3525239	0					
ANR	3529079	Identifier	data		3525239	1					
ANR	3529080	Parameter	const Opcode * op	1763:37:46038:46053	3525239	2	True				
ANR	3529081	ParameterType	const Opcode *		3525239	0					
ANR	3529082	Identifier	op		3525239	1					
ANR	3529083	CFGEntryNode	ENTRY		3525239		True				
ANR	3529084	CFGExitNode	EXIT		3525239		True				
ANR	3529085	Symbol	op -> operands [ 0 ] . offset_sign		3525239						
ANR	3529086	Symbol	mod		3525239						
ANR	3529087	Symbol	op -> operands [ 0 ] . scale		3525239						
ANR	3529088	Symbol	* op -> operands [ 1 ] . regs		3525239						
ANR	3529089	Symbol	op -> operands [ 0 ] . reg		3525239						
ANR	3529090	Symbol	op -> operands [ 0 ] . offset		3525239						
ANR	3529091	Symbol	a -> bits		3525239						
ANR	3529092	Symbol	op -> operands [ 1 ] . scale		3525239						
ANR	3529093	Symbol	OT_GPREG		3525239						
ANR	3529094	Symbol	OT_DEBUGREG		3525239						
ANR	3529095	Symbol	use_sib		3525239						
ANR	3529096	Symbol	byte		3525239						
ANR	3529097	Symbol	index		3525239						
ANR	3529098	Symbol	( ( Opcode * ) op ) -> operands [ 0 ] . dest_size		3525239						
ANR	3529099	Symbol	* op -> operands [ 0 ] . scale		3525239						
ANR	3529100	Symbol	rm		3525239						
ANR	3529101	Symbol	X86R_DI		3525239						
ANR	3529102	Symbol	* ( ( Opcode * ) op ) -> operands		3525239						
ANR	3529103	Symbol	getsib		3525239						
ANR	3529104	Symbol	* * op -> operands [ 1 ] . regs		3525239						
ANR	3529105	Symbol	SEG_REG_PREFIXES		3525239						
ANR	3529106	Symbol	op -> operands [ 1 ] . extended		3525239						
ANR	3529107	Symbol	* * op		3525239						
ANR	3529108	Symbol	op -> operands [ 1 ] . regs		3525239						
ANR	3529109	Symbol	op -> operands [ 1 ] . offset_sign		3525239						
ANR	3529110	Symbol	X86R_R8		3525239						
ANR	3529111	Symbol	is_debug_or_control		3525239						
ANR	3529112	Symbol	OT_MEMORY		3525239						
ANR	3529113	Symbol	op -> operands [ 1 ] . is_good_flag		3525239						
ANR	3529114	Symbol	a		3525239						
ANR	3529115	Symbol	OT_CONSTANT		3525239						
ANR	3529116	Symbol	use_oso		3525239						
ANR	3529117	Symbol	X86R_BP		3525239						
ANR	3529118	Symbol	op -> operands [ 0 ] . explicit_size		3525239						
ANR	3529119	Symbol	ALL_SIZE		3525239						
ANR	3529120	Symbol	X86R_BX		3525239						
ANR	3529121	Symbol	X86R_SI		3525239						
ANR	3529122	Symbol	* * op -> operands		3525239						
ANR	3529123	Symbol	l		3525239						
ANR	3529124	Symbol	X86R_RIP		3525239						
ANR	3529125	Symbol	OT_REGALL		3525239						
ANR	3529126	Symbol	* * * * op		3525239						
ANR	3529127	Symbol	OT_REGTYPE		3525239						
ANR	3529128	Symbol	X86R_UNDEFINED		3525239						
ANR	3529129	Symbol	op -> operands [ 1 ] . type		3525239						
ANR	3529130	Symbol	* op -> operands [ 0 ] . regs		3525239						
ANR	3529131	Symbol	rip_rel		3525239						
ANR	3529132	Symbol	* data		3525239						
ANR	3529133	Symbol	OT_DWORD		3525239						
ANR	3529134	Symbol	UT32_MAX		3525239						
ANR	3529135	Symbol	data		3525239						
ANR	3529136	Symbol	* op		3525239						
ANR	3529137	Symbol	op -> operands [ 0 ] . dest_size		3525239						
ANR	3529138	Symbol	op -> operands [ 1 ] . immediate		3525239						
ANR	3529139	Symbol	opcode		3525239						
ANR	3529140	Symbol	modrm		3525239						
ANR	3529141	Symbol	op -> operands [ 0 ] . extended		3525239						
ANR	3529142	Symbol	* op -> operands		3525239						
ANR	3529143	Symbol	reg		3525239						
ANR	3529144	Symbol	reg_bits		3525239						
ANR	3529145	Symbol	B0111		3525239						
ANR	3529146	Symbol	OT_BYTE		3525239						
ANR	3529147	Symbol	X86R_EAX		3525239						
ANR	3529148	Symbol	offset		3525239						
ANR	3529149	Symbol	rex		3525239						
ANR	3529150	Symbol	op -> operands [ 1 ] . reg		3525239						
ANR	3529151	Symbol	( ( Opcode * ) op ) -> operands		3525239						
ANR	3529152	Symbol	OT_SEGMENTREG		3525239						
ANR	3529153	Symbol	op -> operands [ 1 ] . offset		3525239						
ANR	3529154	Symbol	X86R_EIP		3525239						
ANR	3529155	Symbol	immediate		3525239						
ANR	3529156	Symbol	true		3525239						
ANR	3529157	Symbol	* * * op		3525239						
ANR	3529158	Symbol	B0100		3525239						
ANR	3529159	Symbol	B0101		3525239						
ANR	3529160	Symbol	op -> operands [ 0 ] . regs		3525239						
ANR	3529161	Symbol	op -> operands [ 0 ] . reg_size		3525239						
ANR	3529162	Symbol	OT_QWORD		3525239						
ANR	3529163	Symbol	X86R_ESP		3525239						
ANR	3529164	Symbol	scale		3525239						
ANR	3529165	Symbol	X86R_EBP		3525239						
ANR	3529166	Symbol	* SEG_REG_PREFIXES		3525239						
ANR	3529167	Symbol	sib		3525239						
ANR	3529168	Symbol	op -> operands [ 0 ] . type		3525239						
ANR	3529169	Symbol	B0010		3525239						
ANR	3529170	Symbol	dest_bits		3525239						
ANR	3529171	Symbol	B0011		3525239						
ANR	3529172	Symbol	* op -> operands [ 1 ] . scale		3525239						
ANR	3529173	Symbol	use_rex		3525239						
ANR	3529174	Symbol	op		3525239						
ANR	3529175	Symbol	OPSIZE_SHIFT		3525239						
ANR	3529176	Symbol	OT_WORD		3525239						
ANR	3529177	Symbol	false		3525239						
ANR	3529178	Symbol	* a		3525239						
ANR	3529179	Symbol	op -> operands [ 1 ] . sign		3525239						
ANR	3529180	Symbol	use_aso		3525239						
ANR	3529181	Symbol	B0000		3525239						
ANR	3529182	Symbol	* * * op -> operands		3525239						
ANR	3529183	Symbol	B0001		3525239						
ANR	3529184	Symbol	op -> operands		3525239						
ANR	3529185	Symbol	base		3525239						
ANR	3529186	Function	opmul	2264:0:59697:60255							
ANR	3529187	FunctionDef	"opmul (RAsm * a , ut8 * data , const Opcode * op)"		3529186	0					
ANR	3529188	CompoundStatement		2264:55:59752:60255	3529186	0					
ANR	3529189	ExpressionStatement	is_valid_registers ( op )	2265:1:59755:59778	3529186	0	True				
ANR	3529190	CallExpression	is_valid_registers ( op )		3529186	0					
ANR	3529191	Callee	is_valid_registers		3529186	0					
ANR	3529192	Identifier	is_valid_registers		3529186	0					
ANR	3529193	ArgumentList	op		3529186	1					
ANR	3529194	Argument	op		3529186	0					
ANR	3529195	Identifier	op		3529186	0					
ANR	3529196	IdentifierDeclStatement	int l = 0 ;	2266:1:59781:59790	3529186	1	True				
ANR	3529197	IdentifierDecl	l = 0		3529186	0					
ANR	3529198	IdentifierDeclType	int		3529186	0					
ANR	3529199	Identifier	l		3529186	1					
ANR	3529200	AssignmentExpression	l = 0		3529186	2		=			
ANR	3529201	Identifier	l		3529186	0					
ANR	3529202	PrimaryExpression	0		3529186	1					
ANR	3529203	IfStatement	if ( op -> operands [ 0 ] . type & OT_QWORD )		3529186	2					
ANR	3529204	Condition	op -> operands [ 0 ] . type & OT_QWORD	2268:6:59799:59829	3529186	0	True				
ANR	3529205	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		3529186	0		&			
ANR	3529206	MemberAccess	op -> operands [ 0 ] . type		3529186	0					
ANR	3529207	ArrayIndexing	op -> operands [ 0 ]		3529186	0					
ANR	3529208	PtrMemberAccess	op -> operands		3529186	0					
ANR	3529209	Identifier	op		3529186	0					
ANR	3529210	Identifier	operands		3529186	1					
ANR	3529211	PrimaryExpression	0		3529186	1					
ANR	3529212	Identifier	type		3529186	1					
ANR	3529213	Identifier	OT_QWORD		3529186	1					
ANR	3529214	CompoundStatement		5:40:80:80	3529186	1					
ANR	3529215	ExpressionStatement	data [ l ++ ] = 0x48	2269:2:59837:59853	3529186	0	True				
ANR	3529216	AssignmentExpression	data [ l ++ ] = 0x48		3529186	0		=			
ANR	3529217	ArrayIndexing	data [ l ++ ]		3529186	0					
ANR	3529218	Identifier	data		3529186	0					
ANR	3529219	PostIncDecOperationExpression	l ++		3529186	1					
ANR	3529220	Identifier	l		3529186	0					
ANR	3529221	IncDec	++		3529186	1					
ANR	3529222	PrimaryExpression	0x48		3529186	1					
ANR	3529223	SwitchStatement	switch ( op -> operands_count )		3529186	3					
ANR	3529224	Condition	op -> operands_count	2271:9:59867:59884	3529186	0	True				
ANR	3529225	PtrMemberAccess	op -> operands_count		3529186	0					
ANR	3529226	Identifier	op		3529186	0					
ANR	3529227	Identifier	operands_count		3529186	1					
ANR	3529228	CompoundStatement		8:29:134:134	3529186	1					
ANR	3529229	Label	case 1 :	2272:1:59890:59896	3529186	0	True				
ANR	3529230	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		3529186	1					
ANR	3529231	Condition	op -> operands [ 0 ] . type & OT_WORD	2273:7:59905:59934	3529186	0	True				
ANR	3529232	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		3529186	0		&			
ANR	3529233	MemberAccess	op -> operands [ 0 ] . type		3529186	0					
ANR	3529234	ArrayIndexing	op -> operands [ 0 ]		3529186	0					
ANR	3529235	PtrMemberAccess	op -> operands		3529186	0					
ANR	3529236	Identifier	op		3529186	0					
ANR	3529237	Identifier	operands		3529186	1					
ANR	3529238	PrimaryExpression	0		3529186	1					
ANR	3529239	Identifier	type		3529186	1					
ANR	3529240	Identifier	OT_WORD		3529186	1					
ANR	3529241	CompoundStatement		10:40:185:185	3529186	1					
ANR	3529242	ExpressionStatement	data [ l ++ ] = 0x66	2274:3:59943:59959	3529186	0	True				
ANR	3529243	AssignmentExpression	data [ l ++ ] = 0x66		3529186	0		=			
ANR	3529244	ArrayIndexing	data [ l ++ ]		3529186	0					
ANR	3529245	Identifier	data		3529186	0					
ANR	3529246	PostIncDecOperationExpression	l ++		3529186	1					
ANR	3529247	Identifier	l		3529186	0					
ANR	3529248	IncDec	++		3529186	1					
ANR	3529249	PrimaryExpression	0x66		3529186	1					
ANR	3529250	IfStatement	if ( op -> operands [ 0 ] . type & OT_BYTE )		3529186	2					
ANR	3529251	Condition	op -> operands [ 0 ] . type & OT_BYTE	2276:6:59971:60000	3529186	0	True				
ANR	3529252	BitAndExpression	op -> operands [ 0 ] . type & OT_BYTE		3529186	0		&			
ANR	3529253	MemberAccess	op -> operands [ 0 ] . type		3529186	0					
ANR	3529254	ArrayIndexing	op -> operands [ 0 ]		3529186	0					
ANR	3529255	PtrMemberAccess	op -> operands		3529186	0					
ANR	3529256	Identifier	op		3529186	0					
ANR	3529257	Identifier	operands		3529186	1					
ANR	3529258	PrimaryExpression	0		3529186	1					
ANR	3529259	Identifier	type		3529186	1					
ANR	3529260	Identifier	OT_BYTE		3529186	1					
ANR	3529261	CompoundStatement		13:38:250:250	3529186	1					
ANR	3529262	ExpressionStatement	data [ l ++ ] = 0xf6	2277:3:60008:60024	3529186	0	True				
ANR	3529263	AssignmentExpression	data [ l ++ ] = 0xf6		3529186	0		=			
ANR	3529264	ArrayIndexing	data [ l ++ ]		3529186	0					
ANR	3529265	Identifier	data		3529186	0					
ANR	3529266	PostIncDecOperationExpression	l ++		3529186	1					
ANR	3529267	Identifier	l		3529186	0					
ANR	3529268	IncDec	++		3529186	1					
ANR	3529269	PrimaryExpression	0xf6		3529186	1					
ANR	3529270	ElseStatement	else		3529186	0					
ANR	3529271	CompoundStatement		15:9:282:282	3529186	0					
ANR	3529272	ExpressionStatement	data [ l ++ ] = 0xf7	2279:3:60040:60056	3529186	0	True				
ANR	3529273	AssignmentExpression	data [ l ++ ] = 0xf7		3529186	0		=			
ANR	3529274	ArrayIndexing	data [ l ++ ]		3529186	0					
ANR	3529275	Identifier	data		3529186	0					
ANR	3529276	PostIncDecOperationExpression	l ++		3529186	1					
ANR	3529277	Identifier	l		3529186	0					
ANR	3529278	IncDec	++		3529186	1					
ANR	3529279	PrimaryExpression	0xf7		3529186	1					
ANR	3529280	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3529186	3					
ANR	3529281	Condition	op -> operands [ 0 ] . type & OT_MEMORY	2281:6:60068:60099	3529186	0	True				
ANR	3529282	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3529186	0		&			
ANR	3529283	MemberAccess	op -> operands [ 0 ] . type		3529186	0					
ANR	3529284	ArrayIndexing	op -> operands [ 0 ]		3529186	0					
ANR	3529285	PtrMemberAccess	op -> operands		3529186	0					
ANR	3529286	Identifier	op		3529186	0					
ANR	3529287	Identifier	operands		3529186	1					
ANR	3529288	PrimaryExpression	0		3529186	1					
ANR	3529289	Identifier	type		3529186	1					
ANR	3529290	Identifier	OT_MEMORY		3529186	1					
ANR	3529291	CompoundStatement		18:40:349:349	3529186	1					
ANR	3529292	ExpressionStatement	data [ l ++ ] = 0x20 | op -> operands [ 0 ] . regs [ 0 ]	2282:3:60107:60149	3529186	0	True				
ANR	3529293	AssignmentExpression	data [ l ++ ] = 0x20 | op -> operands [ 0 ] . regs [ 0 ]		3529186	0		=			
ANR	3529294	ArrayIndexing	data [ l ++ ]		3529186	0					
ANR	3529295	Identifier	data		3529186	0					
ANR	3529296	PostIncDecOperationExpression	l ++		3529186	1					
ANR	3529297	Identifier	l		3529186	0					
ANR	3529298	IncDec	++		3529186	1					
ANR	3529299	InclusiveOrExpression	0x20 | op -> operands [ 0 ] . regs [ 0 ]		3529186	1		|			
ANR	3529300	PrimaryExpression	0x20		3529186	0					
ANR	3529301	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3529186	1					
ANR	3529302	MemberAccess	op -> operands [ 0 ] . regs		3529186	0					
ANR	3529303	ArrayIndexing	op -> operands [ 0 ]		3529186	0					
ANR	3529304	PtrMemberAccess	op -> operands		3529186	0					
ANR	3529305	Identifier	op		3529186	0					
ANR	3529306	Identifier	operands		3529186	1					
ANR	3529307	PrimaryExpression	0		3529186	1					
ANR	3529308	Identifier	regs		3529186	1					
ANR	3529309	PrimaryExpression	0		3529186	1					
ANR	3529310	ElseStatement	else		3529186	0					
ANR	3529311	CompoundStatement		20:9:407:407	3529186	0					
ANR	3529312	ExpressionStatement	data [ l ++ ] = 0xe0 | op -> operands [ 0 ] . reg	2284:3:60165:60203	3529186	0	True				
ANR	3529313	AssignmentExpression	data [ l ++ ] = 0xe0 | op -> operands [ 0 ] . reg		3529186	0		=			
ANR	3529314	ArrayIndexing	data [ l ++ ]		3529186	0					
ANR	3529315	Identifier	data		3529186	0					
ANR	3529316	PostIncDecOperationExpression	l ++		3529186	1					
ANR	3529317	Identifier	l		3529186	0					
ANR	3529318	IncDec	++		3529186	1					
ANR	3529319	InclusiveOrExpression	0xe0 | op -> operands [ 0 ] . reg		3529186	1		|			
ANR	3529320	PrimaryExpression	0xe0		3529186	0					
ANR	3529321	MemberAccess	op -> operands [ 0 ] . reg		3529186	1					
ANR	3529322	ArrayIndexing	op -> operands [ 0 ]		3529186	0					
ANR	3529323	PtrMemberAccess	op -> operands		3529186	0					
ANR	3529324	Identifier	op		3529186	0					
ANR	3529325	Identifier	operands		3529186	1					
ANR	3529326	PrimaryExpression	0		3529186	1					
ANR	3529327	Identifier	reg		3529186	1					
ANR	3529328	BreakStatement	break ;	2286:2:60211:60216	3529186	4	True				
ANR	3529329	Label	default :	2287:1:60219:60226	3529186	5	True				
ANR	3529330	Identifier	default		3529186	0					
ANR	3529331	ReturnStatement	return - 1 ;	2288:2:60230:60239	3529186	6	True				
ANR	3529332	UnaryOperationExpression	- 1		3529186	0					
ANR	3529333	UnaryOperator	-		3529186	0					
ANR	3529334	PrimaryExpression	1		3529186	1					
ANR	3529335	ReturnStatement	return l ;	2290:1:60245:60253	3529186	4	True				
ANR	3529336	Identifier	l		3529186	0					
ANR	3529337	ReturnType	static int		3529186	1					
ANR	3529338	Identifier	opmul		3529186	2					
ANR	3529339	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3529186	3					
ANR	3529340	Parameter	RAsm * a	2264:17:59714:59720	3529186	0	True				
ANR	3529341	ParameterType	RAsm *		3529186	0					
ANR	3529342	Identifier	a		3529186	1					
ANR	3529343	Parameter	ut8 * data	2264:26:59723:59731	3529186	1	True				
ANR	3529344	ParameterType	ut8 *		3529186	0					
ANR	3529345	Identifier	data		3529186	1					
ANR	3529346	Parameter	const Opcode * op	2264:37:59734:59749	3529186	2	True				
ANR	3529347	ParameterType	const Opcode *		3529186	0					
ANR	3529348	Identifier	op		3529186	1					
ANR	3529349	CFGEntryNode	ENTRY		3529186		True				
ANR	3529350	CFGExitNode	EXIT		3529186		True				
ANR	3529351	Symbol	a		3529186						
ANR	3529352	Symbol	op		3529186						
ANR	3529353	Symbol	OT_WORD		3529186						
ANR	3529354	Symbol	OT_QWORD		3529186						
ANR	3529355	Symbol	data		3529186						
ANR	3529356	Symbol	* op		3529186						
ANR	3529357	Symbol	* * op -> operands		3529186						
ANR	3529358	Symbol	l		3529186						
ANR	3529359	Symbol	* * op		3529186						
ANR	3529360	Symbol	* op -> operands		3529186						
ANR	3529361	Symbol	op -> operands_count		3529186						
ANR	3529362	Symbol	* op -> operands [ 0 ] . regs		3529186						
ANR	3529363	Symbol	op -> operands [ 0 ] . type		3529186						
ANR	3529364	Symbol	* * * op		3529186						
ANR	3529365	Symbol	op -> operands [ 0 ] . reg		3529186						
ANR	3529366	Symbol	op -> operands		3529186						
ANR	3529367	Symbol	* data		3529186						
ANR	3529368	Symbol	OT_MEMORY		3529186						
ANR	3529369	Symbol	op -> operands [ 0 ] . regs		3529186						
ANR	3529370	Symbol	OT_BYTE		3529186						
ANR	3529371	Function	oppop	2293:0:60258:61462							
ANR	3529372	FunctionDef	"oppop (RAsm * a , ut8 * data , const Opcode * op)"		3529371	0					
ANR	3529373	CompoundStatement		2293:55:60313:61462	3529371	0					
ANR	3529374	ExpressionStatement	is_valid_registers ( op )	2294:1:60316:60339	3529371	0	True				
ANR	3529375	CallExpression	is_valid_registers ( op )		3529371	0					
ANR	3529376	Callee	is_valid_registers		3529371	0					
ANR	3529377	Identifier	is_valid_registers		3529371	0					
ANR	3529378	ArgumentList	op		3529371	1					
ANR	3529379	Argument	op		3529371	0					
ANR	3529380	Identifier	op		3529371	0					
ANR	3529381	IdentifierDeclStatement	int l = 0 ;	2295:1:60342:60351	3529371	1	True				
ANR	3529382	IdentifierDecl	l = 0		3529371	0					
ANR	3529383	IdentifierDeclType	int		3529371	0					
ANR	3529384	Identifier	l		3529371	1					
ANR	3529385	AssignmentExpression	l = 0		3529371	2		=			
ANR	3529386	Identifier	l		3529371	0					
ANR	3529387	PrimaryExpression	0		3529371	1					
ANR	3529388	IdentifierDeclStatement	int offset = 0 ;	2296:1:60354:60368	3529371	2	True				
ANR	3529389	IdentifierDecl	offset = 0		3529371	0					
ANR	3529390	IdentifierDeclType	int		3529371	0					
ANR	3529391	Identifier	offset		3529371	1					
ANR	3529392	AssignmentExpression	offset = 0		3529371	2		=			
ANR	3529393	Identifier	offset		3529371	0					
ANR	3529394	PrimaryExpression	0		3529371	1					
ANR	3529395	IdentifierDeclStatement	int mod = 0 ;	2297:1:60371:60382	3529371	3	True				
ANR	3529396	IdentifierDecl	mod = 0		3529371	0					
ANR	3529397	IdentifierDeclType	int		3529371	0					
ANR	3529398	Identifier	mod		3529371	1					
ANR	3529399	AssignmentExpression	mod = 0		3529371	2		=			
ANR	3529400	Identifier	mod		3529371	0					
ANR	3529401	PrimaryExpression	0		3529371	1					
ANR	3529402	IfStatement	if ( op -> operands [ 0 ] . type & OT_GPREG )		3529371	4					
ANR	3529403	Condition	op -> operands [ 0 ] . type & OT_GPREG	2298:5:60389:60419	3529371	0	True				
ANR	3529404	BitAndExpression	op -> operands [ 0 ] . type & OT_GPREG		3529371	0		&			
ANR	3529405	MemberAccess	op -> operands [ 0 ] . type		3529371	0					
ANR	3529406	ArrayIndexing	op -> operands [ 0 ]		3529371	0					
ANR	3529407	PtrMemberAccess	op -> operands		3529371	0					
ANR	3529408	Identifier	op		3529371	0					
ANR	3529409	Identifier	operands		3529371	1					
ANR	3529410	PrimaryExpression	0		3529371	1					
ANR	3529411	Identifier	type		3529371	1					
ANR	3529412	Identifier	OT_GPREG		3529371	1					
ANR	3529413	CompoundStatement		6:38:108:108	3529371	1					
ANR	3529414	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3529371	0					
ANR	3529415	Condition	op -> operands [ 0 ] . type & OT_MEMORY	2299:6:60430:60461	3529371	0	True				
ANR	3529416	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3529371	0		&			
ANR	3529417	MemberAccess	op -> operands [ 0 ] . type		3529371	0					
ANR	3529418	ArrayIndexing	op -> operands [ 0 ]		3529371	0					
ANR	3529419	PtrMemberAccess	op -> operands		3529371	0					
ANR	3529420	Identifier	op		3529371	0					
ANR	3529421	Identifier	operands		3529371	1					
ANR	3529422	PrimaryExpression	0		3529371	1					
ANR	3529423	Identifier	type		3529371	1					
ANR	3529424	Identifier	OT_MEMORY		3529371	1					
ANR	3529425	CompoundStatement		7:40:150:150	3529371	1					
ANR	3529426	ReturnStatement	return - 1 ;	2300:3:60469:60478	3529371	0	True				
ANR	3529427	UnaryOperationExpression	- 1		3529371	0					
ANR	3529428	UnaryOperator	-		3529371	0					
ANR	3529429	PrimaryExpression	1		3529371	1					
ANR	3529430	IfStatement	if ( op -> operands [ 0 ] . type & OT_REGTYPE & OT_SEGMENTREG )		3529371	1					
ANR	3529431	Condition	op -> operands [ 0 ] . type & OT_REGTYPE & OT_SEGMENTREG	2302:6:60490:60538	3529371	0	True				
ANR	3529432	BitAndExpression	op -> operands [ 0 ] . type & OT_REGTYPE & OT_SEGMENTREG		3529371	0		&			
ANR	3529433	MemberAccess	op -> operands [ 0 ] . type		3529371	0					
ANR	3529434	ArrayIndexing	op -> operands [ 0 ]		3529371	0					
ANR	3529435	PtrMemberAccess	op -> operands		3529371	0					
ANR	3529436	Identifier	op		3529371	0					
ANR	3529437	Identifier	operands		3529371	1					
ANR	3529438	PrimaryExpression	0		3529371	1					
ANR	3529439	Identifier	type		3529371	1					
ANR	3529440	BitAndExpression	OT_REGTYPE & OT_SEGMENTREG		3529371	1		&			
ANR	3529441	Identifier	OT_REGTYPE		3529371	0					
ANR	3529442	Identifier	OT_SEGMENTREG		3529371	1					
ANR	3529443	CompoundStatement		11:3:232:240	3529371	1					
ANR	3529444	IdentifierDeclStatement	ut8 base ;	2303:3:60546:60554	3529371	0	True				
ANR	3529445	IdentifierDecl	base		3529371	0					
ANR	3529446	IdentifierDeclType	ut8		3529371	0					
ANR	3529447	Identifier	base		3529371	1					
ANR	3529448	IfStatement	if ( op -> operands [ 0 ] . reg & X86R_FS )		3529371	1					
ANR	3529449	Condition	op -> operands [ 0 ] . reg & X86R_FS	2304:7:60563:60591	3529371	0	True				
ANR	3529450	BitAndExpression	op -> operands [ 0 ] . reg & X86R_FS		3529371	0		&			
ANR	3529451	MemberAccess	op -> operands [ 0 ] . reg		3529371	0					
ANR	3529452	ArrayIndexing	op -> operands [ 0 ]		3529371	0					
ANR	3529453	PtrMemberAccess	op -> operands		3529371	0					
ANR	3529454	Identifier	op		3529371	0					
ANR	3529455	Identifier	operands		3529371	1					
ANR	3529456	PrimaryExpression	0		3529371	1					
ANR	3529457	Identifier	reg		3529371	1					
ANR	3529458	Identifier	X86R_FS		3529371	1					
ANR	3529459	CompoundStatement		12:38:280:280	3529371	1					
ANR	3529460	ExpressionStatement	data [ l ++ ] = 0x0f	2305:4:60600:60616	3529371	0	True				
ANR	3529461	AssignmentExpression	data [ l ++ ] = 0x0f		3529371	0		=			
ANR	3529462	ArrayIndexing	data [ l ++ ]		3529371	0					
ANR	3529463	Identifier	data		3529371	0					
ANR	3529464	PostIncDecOperationExpression	l ++		3529371	1					
ANR	3529465	Identifier	l		3529371	0					
ANR	3529466	IncDec	++		3529371	1					
ANR	3529467	PrimaryExpression	0x0f		3529371	1					
ANR	3529468	ExpressionStatement	base = 0x81	2306:4:60622:60633	3529371	1	True				
ANR	3529469	AssignmentExpression	base = 0x81		3529371	0		=			
ANR	3529470	Identifier	base		3529371	0					
ANR	3529471	PrimaryExpression	0x81		3529371	1					
ANR	3529472	ElseStatement	else		3529371	0					
ANR	3529473	CompoundStatement		15:10:331:331	3529371	0					
ANR	3529474	ExpressionStatement	base = 0x7	2308:4:60651:60661	3529371	0	True				
ANR	3529475	AssignmentExpression	base = 0x7		3529371	0		=			
ANR	3529476	Identifier	base		3529371	0					
ANR	3529477	PrimaryExpression	0x7		3529371	1					
ANR	3529478	ExpressionStatement	data [ l ++ ] = base + ( 8 * op -> operands [ 0 ] . reg )	2310:3:60671:60715	3529371	2	True				
ANR	3529479	AssignmentExpression	data [ l ++ ] = base + ( 8 * op -> operands [ 0 ] . reg )		3529371	0		=			
ANR	3529480	ArrayIndexing	data [ l ++ ]		3529371	0					
ANR	3529481	Identifier	data		3529371	0					
ANR	3529482	PostIncDecOperationExpression	l ++		3529371	1					
ANR	3529483	Identifier	l		3529371	0					
ANR	3529484	IncDec	++		3529371	1					
ANR	3529485	AdditiveExpression	base + ( 8 * op -> operands [ 0 ] . reg )		3529371	1		+			
ANR	3529486	Identifier	base		3529371	0					
ANR	3529487	MultiplicativeExpression	8 * op -> operands [ 0 ] . reg		3529371	1		*			
ANR	3529488	PrimaryExpression	8		3529371	0					
ANR	3529489	MemberAccess	op -> operands [ 0 ] . reg		3529371	1					
ANR	3529490	ArrayIndexing	op -> operands [ 0 ]		3529371	0					
ANR	3529491	PtrMemberAccess	op -> operands		3529371	0					
ANR	3529492	Identifier	op		3529371	0					
ANR	3529493	Identifier	operands		3529371	1					
ANR	3529494	PrimaryExpression	0		3529371	1					
ANR	3529495	Identifier	reg		3529371	1					
ANR	3529496	ElseStatement	else		3529371	0					
ANR	3529497	CompoundStatement		20:3:417:432	3529371	0					
ANR	3529498	IdentifierDeclStatement	ut8 base = 0x58 ;	2312:3:60731:60746	3529371	0	True				
ANR	3529499	IdentifierDecl	base = 0x58		3529371	0					
ANR	3529500	IdentifierDeclType	ut8		3529371	0					
ANR	3529501	Identifier	base		3529371	1					
ANR	3529502	AssignmentExpression	base = 0x58		3529371	2		=			
ANR	3529503	Identifier	base		3529371	0					
ANR	3529504	PrimaryExpression	0x58		3529371	1					
ANR	3529505	ExpressionStatement	data [ l ++ ] = base + op -> operands [ 0 ] . reg	2313:3:60751:60789	3529371	1	True				
ANR	3529506	AssignmentExpression	data [ l ++ ] = base + op -> operands [ 0 ] . reg		3529371	0		=			
ANR	3529507	ArrayIndexing	data [ l ++ ]		3529371	0					
ANR	3529508	Identifier	data		3529371	0					
ANR	3529509	PostIncDecOperationExpression	l ++		3529371	1					
ANR	3529510	Identifier	l		3529371	0					
ANR	3529511	IncDec	++		3529371	1					
ANR	3529512	AdditiveExpression	base + op -> operands [ 0 ] . reg		3529371	1		+			
ANR	3529513	Identifier	base		3529371	0					
ANR	3529514	MemberAccess	op -> operands [ 0 ] . reg		3529371	1					
ANR	3529515	ArrayIndexing	op -> operands [ 0 ]		3529371	0					
ANR	3529516	PtrMemberAccess	op -> operands		3529371	0					
ANR	3529517	Identifier	op		3529371	0					
ANR	3529518	Identifier	operands		3529371	1					
ANR	3529519	PrimaryExpression	0		3529371	1					
ANR	3529520	Identifier	reg		3529371	1					
ANR	3529521	ElseStatement	else		3529371	0					
ANR	3529522	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3529371	0					
ANR	3529523	Condition	op -> operands [ 0 ] . type & OT_MEMORY	2315:12:60807:60838	3529371	0	True				
ANR	3529524	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3529371	0		&			
ANR	3529525	MemberAccess	op -> operands [ 0 ] . type		3529371	0					
ANR	3529526	ArrayIndexing	op -> operands [ 0 ]		3529371	0					
ANR	3529527	PtrMemberAccess	op -> operands		3529371	0					
ANR	3529528	Identifier	op		3529371	0					
ANR	3529529	Identifier	operands		3529371	1					
ANR	3529530	PrimaryExpression	0		3529371	1					
ANR	3529531	Identifier	type		3529371	1					
ANR	3529532	Identifier	OT_MEMORY		3529371	1					
ANR	3529533	CompoundStatement		23:46:527:527	3529371	1					
ANR	3529534	ExpressionStatement	data [ l ++ ] = 0x8f	2316:2:60845:60861	3529371	0	True				
ANR	3529535	AssignmentExpression	data [ l ++ ] = 0x8f		3529371	0		=			
ANR	3529536	ArrayIndexing	data [ l ++ ]		3529371	0					
ANR	3529537	Identifier	data		3529371	0					
ANR	3529538	PostIncDecOperationExpression	l ++		3529371	1					
ANR	3529539	Identifier	l		3529371	0					
ANR	3529540	IncDec	++		3529371	1					
ANR	3529541	PrimaryExpression	0x8f		3529371	1					
ANR	3529542	ExpressionStatement	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign	2317:2:60865:60926	3529371	1	True				
ANR	3529543	AssignmentExpression	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		3529371	0		=			
ANR	3529544	Identifier	offset		3529371	0					
ANR	3529545	MultiplicativeExpression	op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		3529371	1		*			
ANR	3529546	MemberAccess	op -> operands [ 0 ] . offset		3529371	0					
ANR	3529547	ArrayIndexing	op -> operands [ 0 ]		3529371	0					
ANR	3529548	PtrMemberAccess	op -> operands		3529371	0					
ANR	3529549	Identifier	op		3529371	0					
ANR	3529550	Identifier	operands		3529371	1					
ANR	3529551	PrimaryExpression	0		3529371	1					
ANR	3529552	Identifier	offset		3529371	1					
ANR	3529553	MemberAccess	op -> operands [ 0 ] . offset_sign		3529371	1					
ANR	3529554	ArrayIndexing	op -> operands [ 0 ]		3529371	0					
ANR	3529555	PtrMemberAccess	op -> operands		3529371	0					
ANR	3529556	Identifier	op		3529371	0					
ANR	3529557	Identifier	operands		3529371	1					
ANR	3529558	PrimaryExpression	0		3529371	1					
ANR	3529559	Identifier	offset_sign		3529371	1					
ANR	3529560	IfStatement	if ( offset != 0 || op -> operands [ 0 ] . regs [ 0 ] == X86R_EBP )		3529371	2					
ANR	3529561	Condition	offset != 0 || op -> operands [ 0 ] . regs [ 0 ] == X86R_EBP	2318:6:60934:60983	3529371	0	True				
ANR	3529562	OrExpression	offset != 0 || op -> operands [ 0 ] . regs [ 0 ] == X86R_EBP		3529371	0		||			
ANR	3529563	EqualityExpression	offset != 0		3529371	0		!=			
ANR	3529564	Identifier	offset		3529371	0					
ANR	3529565	PrimaryExpression	0		3529371	1					
ANR	3529566	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_EBP		3529371	1		==			
ANR	3529567	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3529371	0					
ANR	3529568	MemberAccess	op -> operands [ 0 ] . regs		3529371	0					
ANR	3529569	ArrayIndexing	op -> operands [ 0 ]		3529371	0					
ANR	3529570	PtrMemberAccess	op -> operands		3529371	0					
ANR	3529571	Identifier	op		3529371	0					
ANR	3529572	Identifier	operands		3529371	1					
ANR	3529573	PrimaryExpression	0		3529371	1					
ANR	3529574	Identifier	regs		3529371	1					
ANR	3529575	PrimaryExpression	0		3529371	1					
ANR	3529576	Identifier	X86R_EBP		3529371	1					
ANR	3529577	CompoundStatement		26:58:672:672	3529371	1					
ANR	3529578	ExpressionStatement	mod = 1	2319:3:60991:60998	3529371	0	True				
ANR	3529579	AssignmentExpression	mod = 1		3529371	0		=			
ANR	3529580	Identifier	mod		3529371	0					
ANR	3529581	PrimaryExpression	1		3529371	1					
ANR	3529582	IfStatement	if ( offset >= 128 || offset < - 128 )		3529371	1					
ANR	3529583	Condition	offset >= 128 || offset < - 128	2320:7:61007:61036	3529371	0	True				
ANR	3529584	OrExpression	offset >= 128 || offset < - 128		3529371	0		||			
ANR	3529585	RelationalExpression	offset >= 128		3529371	0		>=			
ANR	3529586	Identifier	offset		3529371	0					
ANR	3529587	PrimaryExpression	128		3529371	1					
ANR	3529588	RelationalExpression	offset < - 128		3529371	1		<			
ANR	3529589	Identifier	offset		3529371	0					
ANR	3529590	UnaryOperationExpression	- 128		3529371	1					
ANR	3529591	UnaryOperator	-		3529371	0					
ANR	3529592	PrimaryExpression	128		3529371	1					
ANR	3529593	CompoundStatement		28:39:725:725	3529371	1					
ANR	3529594	ExpressionStatement	mod = 2	2321:4:61045:61052	3529371	0	True				
ANR	3529595	AssignmentExpression	mod = 2		3529371	0		=			
ANR	3529596	Identifier	mod		3529371	0					
ANR	3529597	PrimaryExpression	2		3529371	1					
ANR	3529598	ExpressionStatement	data [ l ++ ] = mod << 6 | op -> operands [ 0 ] . regs [ 0 ]	2323:3:61062:61108	3529371	2	True				
ANR	3529599	AssignmentExpression	data [ l ++ ] = mod << 6 | op -> operands [ 0 ] . regs [ 0 ]		3529371	0		=			
ANR	3529600	ArrayIndexing	data [ l ++ ]		3529371	0					
ANR	3529601	Identifier	data		3529371	0					
ANR	3529602	PostIncDecOperationExpression	l ++		3529371	1					
ANR	3529603	Identifier	l		3529371	0					
ANR	3529604	IncDec	++		3529371	1					
ANR	3529605	InclusiveOrExpression	mod << 6 | op -> operands [ 0 ] . regs [ 0 ]		3529371	1		|			
ANR	3529606	ShiftExpression	mod << 6		3529371	0		<<			
ANR	3529607	Identifier	mod		3529371	0					
ANR	3529608	PrimaryExpression	6		3529371	1					
ANR	3529609	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3529371	1					
ANR	3529610	MemberAccess	op -> operands [ 0 ] . regs		3529371	0					
ANR	3529611	ArrayIndexing	op -> operands [ 0 ]		3529371	0					
ANR	3529612	PtrMemberAccess	op -> operands		3529371	0					
ANR	3529613	Identifier	op		3529371	0					
ANR	3529614	Identifier	operands		3529371	1					
ANR	3529615	PrimaryExpression	0		3529371	1					
ANR	3529616	Identifier	regs		3529371	1					
ANR	3529617	PrimaryExpression	0		3529371	1					
ANR	3529618	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP )		3529371	3					
ANR	3529619	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP	2324:7:61117:61151	3529371	0	True				
ANR	3529620	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP		3529371	0		==			
ANR	3529621	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3529371	0					
ANR	3529622	MemberAccess	op -> operands [ 0 ] . regs		3529371	0					
ANR	3529623	ArrayIndexing	op -> operands [ 0 ]		3529371	0					
ANR	3529624	PtrMemberAccess	op -> operands		3529371	0					
ANR	3529625	Identifier	op		3529371	0					
ANR	3529626	Identifier	operands		3529371	1					
ANR	3529627	PrimaryExpression	0		3529371	1					
ANR	3529628	Identifier	regs		3529371	1					
ANR	3529629	PrimaryExpression	0		3529371	1					
ANR	3529630	Identifier	X86R_ESP		3529371	1					
ANR	3529631	CompoundStatement		32:44:840:840	3529371	1					
ANR	3529632	ExpressionStatement	data [ l ++ ] = 0x24	2325:4:61160:61176	3529371	0	True				
ANR	3529633	AssignmentExpression	data [ l ++ ] = 0x24		3529371	0		=			
ANR	3529634	ArrayIndexing	data [ l ++ ]		3529371	0					
ANR	3529635	Identifier	data		3529371	0					
ANR	3529636	PostIncDecOperationExpression	l ++		3529371	1					
ANR	3529637	Identifier	l		3529371	0					
ANR	3529638	IncDec	++		3529371	1					
ANR	3529639	PrimaryExpression	0x24		3529371	1					
ANR	3529640	ExpressionStatement	data [ l ++ ] = offset	2327:3:61186:61204	3529371	4	True				
ANR	3529641	AssignmentExpression	data [ l ++ ] = offset		3529371	0		=			
ANR	3529642	ArrayIndexing	data [ l ++ ]		3529371	0					
ANR	3529643	Identifier	data		3529371	0					
ANR	3529644	PostIncDecOperationExpression	l ++		3529371	1					
ANR	3529645	Identifier	l		3529371	0					
ANR	3529646	IncDec	++		3529371	1					
ANR	3529647	Identifier	offset		3529371	1					
ANR	3529648	IfStatement	if ( mod == 2 )		3529371	5					
ANR	3529649	Condition	mod == 2	2328:7:61213:61220	3529371	0	True				
ANR	3529650	EqualityExpression	mod == 2		3529371	0		==			
ANR	3529651	Identifier	mod		3529371	0					
ANR	3529652	PrimaryExpression	2		3529371	1					
ANR	3529653	CompoundStatement		36:17:909:909	3529371	1					
ANR	3529654	ExpressionStatement	data [ l ++ ] = offset >> 8	2329:4:61229:61252	3529371	0	True				
ANR	3529655	AssignmentExpression	data [ l ++ ] = offset >> 8		3529371	0		=			
ANR	3529656	ArrayIndexing	data [ l ++ ]		3529371	0					
ANR	3529657	Identifier	data		3529371	0					
ANR	3529658	PostIncDecOperationExpression	l ++		3529371	1					
ANR	3529659	Identifier	l		3529371	0					
ANR	3529660	IncDec	++		3529371	1					
ANR	3529661	ShiftExpression	offset >> 8		3529371	1		>>			
ANR	3529662	Identifier	offset		3529371	0					
ANR	3529663	PrimaryExpression	8		3529371	1					
ANR	3529664	ExpressionStatement	data [ l ++ ] = offset >> 16	2330:4:61258:61282	3529371	1	True				
ANR	3529665	AssignmentExpression	data [ l ++ ] = offset >> 16		3529371	0		=			
ANR	3529666	ArrayIndexing	data [ l ++ ]		3529371	0					
ANR	3529667	Identifier	data		3529371	0					
ANR	3529668	PostIncDecOperationExpression	l ++		3529371	1					
ANR	3529669	Identifier	l		3529371	0					
ANR	3529670	IncDec	++		3529371	1					
ANR	3529671	ShiftExpression	offset >> 16		3529371	1		>>			
ANR	3529672	Identifier	offset		3529371	0					
ANR	3529673	PrimaryExpression	16		3529371	1					
ANR	3529674	ExpressionStatement	data [ l ++ ] = offset >> 24	2331:4:61288:61312	3529371	2	True				
ANR	3529675	AssignmentExpression	data [ l ++ ] = offset >> 24		3529371	0		=			
ANR	3529676	ArrayIndexing	data [ l ++ ]		3529371	0					
ANR	3529677	Identifier	data		3529371	0					
ANR	3529678	PostIncDecOperationExpression	l ++		3529371	1					
ANR	3529679	Identifier	l		3529371	0					
ANR	3529680	IncDec	++		3529371	1					
ANR	3529681	ShiftExpression	offset >> 24		3529371	1		>>			
ANR	3529682	Identifier	offset		3529371	0					
ANR	3529683	PrimaryExpression	24		3529371	1					
ANR	3529684	ElseStatement	else		3529371	0					
ANR	3529685	CompoundStatement		41:9:1014:1014	3529371	0					
ANR	3529686	ExpressionStatement	data [ l ++ ] = op -> operands [ 0 ] . regs [ 0 ]	2334:3:61333:61368	3529371	0	True				
ANR	3529687	AssignmentExpression	data [ l ++ ] = op -> operands [ 0 ] . regs [ 0 ]		3529371	0		=			
ANR	3529688	ArrayIndexing	data [ l ++ ]		3529371	0					
ANR	3529689	Identifier	data		3529371	0					
ANR	3529690	PostIncDecOperationExpression	l ++		3529371	1					
ANR	3529691	Identifier	l		3529371	0					
ANR	3529692	IncDec	++		3529371	1					
ANR	3529693	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3529371	1					
ANR	3529694	MemberAccess	op -> operands [ 0 ] . regs		3529371	0					
ANR	3529695	ArrayIndexing	op -> operands [ 0 ]		3529371	0					
ANR	3529696	PtrMemberAccess	op -> operands		3529371	0					
ANR	3529697	Identifier	op		3529371	0					
ANR	3529698	Identifier	operands		3529371	1					
ANR	3529699	PrimaryExpression	0		3529371	1					
ANR	3529700	Identifier	regs		3529371	1					
ANR	3529701	PrimaryExpression	0		3529371	1					
ANR	3529702	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP )		3529371	1					
ANR	3529703	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP	2335:7:61377:61411	3529371	0	True				
ANR	3529704	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP		3529371	0		==			
ANR	3529705	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3529371	0					
ANR	3529706	MemberAccess	op -> operands [ 0 ] . regs		3529371	0					
ANR	3529707	ArrayIndexing	op -> operands [ 0 ]		3529371	0					
ANR	3529708	PtrMemberAccess	op -> operands		3529371	0					
ANR	3529709	Identifier	op		3529371	0					
ANR	3529710	Identifier	operands		3529371	1					
ANR	3529711	PrimaryExpression	0		3529371	1					
ANR	3529712	Identifier	regs		3529371	1					
ANR	3529713	PrimaryExpression	0		3529371	1					
ANR	3529714	Identifier	X86R_ESP		3529371	1					
ANR	3529715	CompoundStatement		43:44:1100:1100	3529371	1					
ANR	3529716	ExpressionStatement	data [ l ++ ] = 0x24	2336:4:61420:61436	3529371	0	True				
ANR	3529717	AssignmentExpression	data [ l ++ ] = 0x24		3529371	0		=			
ANR	3529718	ArrayIndexing	data [ l ++ ]		3529371	0					
ANR	3529719	Identifier	data		3529371	0					
ANR	3529720	PostIncDecOperationExpression	l ++		3529371	1					
ANR	3529721	Identifier	l		3529371	0					
ANR	3529722	IncDec	++		3529371	1					
ANR	3529723	PrimaryExpression	0x24		3529371	1					
ANR	3529724	ReturnStatement	return l ;	2341:1:61452:61460	3529371	5	True				
ANR	3529725	Identifier	l		3529371	0					
ANR	3529726	ReturnType	static int		3529371	1					
ANR	3529727	Identifier	oppop		3529371	2					
ANR	3529728	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3529371	3					
ANR	3529729	Parameter	RAsm * a	2293:17:60275:60281	3529371	0	True				
ANR	3529730	ParameterType	RAsm *		3529371	0					
ANR	3529731	Identifier	a		3529371	1					
ANR	3529732	Parameter	ut8 * data	2293:26:60284:60292	3529371	1	True				
ANR	3529733	ParameterType	ut8 *		3529371	0					
ANR	3529734	Identifier	data		3529371	1					
ANR	3529735	Parameter	const Opcode * op	2293:37:60295:60310	3529371	2	True				
ANR	3529736	ParameterType	const Opcode *		3529371	0					
ANR	3529737	Identifier	op		3529371	1					
ANR	3529738	CFGEntryNode	ENTRY		3529371		True				
ANR	3529739	CFGExitNode	EXIT		3529371		True				
ANR	3529740	Symbol	op -> operands [ 0 ] . offset_sign		3529371						
ANR	3529741	Symbol	mod		3529371						
ANR	3529742	Symbol	data		3529371						
ANR	3529743	Symbol	* op		3529371						
ANR	3529744	Symbol	X86R_ESP		3529371						
ANR	3529745	Symbol	X86R_EBP		3529371						
ANR	3529746	Symbol	* * op		3529371						
ANR	3529747	Symbol	* op -> operands		3529371						
ANR	3529748	Symbol	op -> operands [ 0 ] . type		3529371						
ANR	3529749	Symbol	op -> operands [ 0 ] . reg		3529371						
ANR	3529750	Symbol	op -> operands [ 0 ] . offset		3529371						
ANR	3529751	Symbol	OT_MEMORY		3529371						
ANR	3529752	Symbol	a		3529371						
ANR	3529753	Symbol	op		3529371						
ANR	3529754	Symbol	OT_GPREG		3529371						
ANR	3529755	Symbol	X86R_FS		3529371						
ANR	3529756	Symbol	offset		3529371						
ANR	3529757	Symbol	OT_SEGMENTREG		3529371						
ANR	3529758	Symbol	* * op -> operands		3529371						
ANR	3529759	Symbol	l		3529371						
ANR	3529760	Symbol	OT_REGTYPE		3529371						
ANR	3529761	Symbol	* op -> operands [ 0 ] . regs		3529371						
ANR	3529762	Symbol	* * * op		3529371						
ANR	3529763	Symbol	op -> operands		3529371						
ANR	3529764	Symbol	* data		3529371						
ANR	3529765	Symbol	op -> operands [ 0 ] . regs		3529371						
ANR	3529766	Symbol	base		3529371						
ANR	3529767	Function	oppush	2344:0:61465:63111							
ANR	3529768	FunctionDef	"oppush (RAsm * a , ut8 * data , const Opcode * op)"		3529767	0					
ANR	3529769	CompoundStatement		2344:56:61521:63111	3529767	0					
ANR	3529770	ExpressionStatement	is_valid_registers ( op )	2345:1:61524:61547	3529767	0	True				
ANR	3529771	CallExpression	is_valid_registers ( op )		3529767	0					
ANR	3529772	Callee	is_valid_registers		3529767	0					
ANR	3529773	Identifier	is_valid_registers		3529767	0					
ANR	3529774	ArgumentList	op		3529767	1					
ANR	3529775	Argument	op		3529767	0					
ANR	3529776	Identifier	op		3529767	0					
ANR	3529777	IdentifierDeclStatement	int l = 0 ;	2346:1:61550:61559	3529767	1	True				
ANR	3529778	IdentifierDecl	l = 0		3529767	0					
ANR	3529779	IdentifierDeclType	int		3529767	0					
ANR	3529780	Identifier	l		3529767	1					
ANR	3529781	AssignmentExpression	l = 0		3529767	2		=			
ANR	3529782	Identifier	l		3529767	0					
ANR	3529783	PrimaryExpression	0		3529767	1					
ANR	3529784	IdentifierDeclStatement	int mod = 0 ;	2347:1:61562:61573	3529767	2	True				
ANR	3529785	IdentifierDecl	mod = 0		3529767	0					
ANR	3529786	IdentifierDeclType	int		3529767	0					
ANR	3529787	Identifier	mod		3529767	1					
ANR	3529788	AssignmentExpression	mod = 0		3529767	2		=			
ANR	3529789	Identifier	mod		3529767	0					
ANR	3529790	PrimaryExpression	0		3529767	1					
ANR	3529791	IdentifierDeclStatement	st32 immediate = 0 ;	2348:1:61576:61594	3529767	3	True				
ANR	3529792	IdentifierDecl	immediate = 0		3529767	0					
ANR	3529793	IdentifierDeclType	st32		3529767	0					
ANR	3529794	Identifier	immediate		3529767	1					
ANR	3529795	AssignmentExpression	immediate = 0		3529767	2		=			
ANR	3529796	Identifier	immediate		3529767	0					
ANR	3529797	PrimaryExpression	0		3529767	1					
ANR	3529798	ExpressionStatement		2348:20:61595:61595	3529767	4	True				
ANR	3529799	IdentifierDeclStatement	st32 offset = 0 ;	2349:1:61598:61613	3529767	5	True				
ANR	3529800	IdentifierDecl	offset = 0		3529767	0					
ANR	3529801	IdentifierDeclType	st32		3529767	0					
ANR	3529802	Identifier	offset		3529767	1					
ANR	3529803	AssignmentExpression	offset = 0		3529767	2		=			
ANR	3529804	Identifier	offset		3529767	0					
ANR	3529805	PrimaryExpression	0		3529767	1					
ANR	3529806	IfStatement	if ( op -> operands [ 0 ] . type & OT_GPREG && ! ( op -> operands [ 0 ] . type & OT_MEMORY ) )		3529767	6					
ANR	3529807	Condition	op -> operands [ 0 ] . type & OT_GPREG && ! ( op -> operands [ 0 ] . type & OT_MEMORY )	2350:5:61620:61694	3529767	0	True				
ANR	3529808	AndExpression	op -> operands [ 0 ] . type & OT_GPREG && ! ( op -> operands [ 0 ] . type & OT_MEMORY )		3529767	0		&&			
ANR	3529809	BitAndExpression	op -> operands [ 0 ] . type & OT_GPREG		3529767	0		&			
ANR	3529810	MemberAccess	op -> operands [ 0 ] . type		3529767	0					
ANR	3529811	ArrayIndexing	op -> operands [ 0 ]		3529767	0					
ANR	3529812	PtrMemberAccess	op -> operands		3529767	0					
ANR	3529813	Identifier	op		3529767	0					
ANR	3529814	Identifier	operands		3529767	1					
ANR	3529815	PrimaryExpression	0		3529767	1					
ANR	3529816	Identifier	type		3529767	1					
ANR	3529817	Identifier	OT_GPREG		3529767	1					
ANR	3529818	UnaryOperationExpression	! ( op -> operands [ 0 ] . type & OT_MEMORY )		3529767	1					
ANR	3529819	UnaryOperator	!		3529767	0					
ANR	3529820	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3529767	1		&			
ANR	3529821	MemberAccess	op -> operands [ 0 ] . type		3529767	0					
ANR	3529822	ArrayIndexing	op -> operands [ 0 ]		3529767	0					
ANR	3529823	PtrMemberAccess	op -> operands		3529767	0					
ANR	3529824	Identifier	op		3529767	0					
ANR	3529825	Identifier	operands		3529767	1					
ANR	3529826	PrimaryExpression	0		3529767	1					
ANR	3529827	Identifier	type		3529767	1					
ANR	3529828	Identifier	OT_MEMORY		3529767	1					
ANR	3529829	CompoundStatement		8:42:175:175	3529767	1					
ANR	3529830	IfStatement	if ( op -> operands [ 0 ] . type & OT_REGTYPE & OT_SEGMENTREG )		3529767	0					
ANR	3529831	Condition	op -> operands [ 0 ] . type & OT_REGTYPE & OT_SEGMENTREG	2352:6:61705:61753	3529767	0	True				
ANR	3529832	BitAndExpression	op -> operands [ 0 ] . type & OT_REGTYPE & OT_SEGMENTREG		3529767	0		&			
ANR	3529833	MemberAccess	op -> operands [ 0 ] . type		3529767	0					
ANR	3529834	ArrayIndexing	op -> operands [ 0 ]		3529767	0					
ANR	3529835	PtrMemberAccess	op -> operands		3529767	0					
ANR	3529836	Identifier	op		3529767	0					
ANR	3529837	Identifier	operands		3529767	1					
ANR	3529838	PrimaryExpression	0		3529767	1					
ANR	3529839	Identifier	type		3529767	1					
ANR	3529840	BitAndExpression	OT_REGTYPE & OT_SEGMENTREG		3529767	1		&			
ANR	3529841	Identifier	OT_REGTYPE		3529767	0					
ANR	3529842	Identifier	OT_SEGMENTREG		3529767	1					
ANR	3529843	CompoundStatement		10:3:239:247	3529767	1					
ANR	3529844	IdentifierDeclStatement	ut8 base ;	2353:3:61761:61769	3529767	0	True				
ANR	3529845	IdentifierDecl	base		3529767	0					
ANR	3529846	IdentifierDeclType	ut8		3529767	0					
ANR	3529847	Identifier	base		3529767	1					
ANR	3529848	IfStatement	if ( op -> operands [ 0 ] . reg & X86R_FS )		3529767	1					
ANR	3529849	Condition	op -> operands [ 0 ] . reg & X86R_FS	2354:7:61778:61806	3529767	0	True				
ANR	3529850	BitAndExpression	op -> operands [ 0 ] . reg & X86R_FS		3529767	0		&			
ANR	3529851	MemberAccess	op -> operands [ 0 ] . reg		3529767	0					
ANR	3529852	ArrayIndexing	op -> operands [ 0 ]		3529767	0					
ANR	3529853	PtrMemberAccess	op -> operands		3529767	0					
ANR	3529854	Identifier	op		3529767	0					
ANR	3529855	Identifier	operands		3529767	1					
ANR	3529856	PrimaryExpression	0		3529767	1					
ANR	3529857	Identifier	reg		3529767	1					
ANR	3529858	Identifier	X86R_FS		3529767	1					
ANR	3529859	CompoundStatement		11:38:287:287	3529767	1					
ANR	3529860	ExpressionStatement	data [ l ++ ] = 0x0f	2355:4:61815:61831	3529767	0	True				
ANR	3529861	AssignmentExpression	data [ l ++ ] = 0x0f		3529767	0		=			
ANR	3529862	ArrayIndexing	data [ l ++ ]		3529767	0					
ANR	3529863	Identifier	data		3529767	0					
ANR	3529864	PostIncDecOperationExpression	l ++		3529767	1					
ANR	3529865	Identifier	l		3529767	0					
ANR	3529866	IncDec	++		3529767	1					
ANR	3529867	PrimaryExpression	0x0f		3529767	1					
ANR	3529868	ExpressionStatement	base = 0x80	2356:4:61837:61848	3529767	1	True				
ANR	3529869	AssignmentExpression	base = 0x80		3529767	0		=			
ANR	3529870	Identifier	base		3529767	0					
ANR	3529871	PrimaryExpression	0x80		3529767	1					
ANR	3529872	ElseStatement	else		3529767	0					
ANR	3529873	CompoundStatement		14:10:338:338	3529767	0					
ANR	3529874	ExpressionStatement	base = 0x6	2358:4:61866:61876	3529767	0	True				
ANR	3529875	AssignmentExpression	base = 0x6		3529767	0		=			
ANR	3529876	Identifier	base		3529767	0					
ANR	3529877	PrimaryExpression	0x6		3529767	1					
ANR	3529878	ExpressionStatement	data [ l ++ ] = base + ( 8 * op -> operands [ 0 ] . reg )	2360:3:61886:61930	3529767	2	True				
ANR	3529879	AssignmentExpression	data [ l ++ ] = base + ( 8 * op -> operands [ 0 ] . reg )		3529767	0		=			
ANR	3529880	ArrayIndexing	data [ l ++ ]		3529767	0					
ANR	3529881	Identifier	data		3529767	0					
ANR	3529882	PostIncDecOperationExpression	l ++		3529767	1					
ANR	3529883	Identifier	l		3529767	0					
ANR	3529884	IncDec	++		3529767	1					
ANR	3529885	AdditiveExpression	base + ( 8 * op -> operands [ 0 ] . reg )		3529767	1		+			
ANR	3529886	Identifier	base		3529767	0					
ANR	3529887	MultiplicativeExpression	8 * op -> operands [ 0 ] . reg		3529767	1		*			
ANR	3529888	PrimaryExpression	8		3529767	0					
ANR	3529889	MemberAccess	op -> operands [ 0 ] . reg		3529767	1					
ANR	3529890	ArrayIndexing	op -> operands [ 0 ]		3529767	0					
ANR	3529891	PtrMemberAccess	op -> operands		3529767	0					
ANR	3529892	Identifier	op		3529767	0					
ANR	3529893	Identifier	operands		3529767	1					
ANR	3529894	PrimaryExpression	0		3529767	1					
ANR	3529895	Identifier	reg		3529767	1					
ANR	3529896	ElseStatement	else		3529767	0					
ANR	3529897	CompoundStatement		22:3:503:518	3529767	0					
ANR	3529898	IfStatement	if ( op -> operands [ 0 ] . extended && a -> bits == 64 )		3529767	0					
ANR	3529899	Condition	op -> operands [ 0 ] . extended && a -> bits == 64	2362:7:61950:61990	3529767	0	True				
ANR	3529900	AndExpression	op -> operands [ 0 ] . extended && a -> bits == 64		3529767	0		&&			
ANR	3529901	MemberAccess	op -> operands [ 0 ] . extended		3529767	0					
ANR	3529902	ArrayIndexing	op -> operands [ 0 ]		3529767	0					
ANR	3529903	PtrMemberAccess	op -> operands		3529767	0					
ANR	3529904	Identifier	op		3529767	0					
ANR	3529905	Identifier	operands		3529767	1					
ANR	3529906	PrimaryExpression	0		3529767	1					
ANR	3529907	Identifier	extended		3529767	1					
ANR	3529908	EqualityExpression	a -> bits == 64		3529767	1		==			
ANR	3529909	PtrMemberAccess	a -> bits		3529767	0					
ANR	3529910	Identifier	a		3529767	0					
ANR	3529911	Identifier	bits		3529767	1					
ANR	3529912	PrimaryExpression	64		3529767	1					
ANR	3529913	CompoundStatement		19:50:471:471	3529767	1					
ANR	3529914	ExpressionStatement	data [ l ++ ] = 0x41	2363:4:61999:62015	3529767	0	True				
ANR	3529915	AssignmentExpression	data [ l ++ ] = 0x41		3529767	0		=			
ANR	3529916	ArrayIndexing	data [ l ++ ]		3529767	0					
ANR	3529917	Identifier	data		3529767	0					
ANR	3529918	PostIncDecOperationExpression	l ++		3529767	1					
ANR	3529919	Identifier	l		3529767	0					
ANR	3529920	IncDec	++		3529767	1					
ANR	3529921	PrimaryExpression	0x41		3529767	1					
ANR	3529922	IdentifierDeclStatement	ut8 base = 0x50 ;	2365:3:62025:62040	3529767	1	True				
ANR	3529923	IdentifierDecl	base = 0x50		3529767	0					
ANR	3529924	IdentifierDeclType	ut8		3529767	0					
ANR	3529925	Identifier	base		3529767	1					
ANR	3529926	AssignmentExpression	base = 0x50		3529767	2		=			
ANR	3529927	Identifier	base		3529767	0					
ANR	3529928	PrimaryExpression	0x50		3529767	1					
ANR	3529929	ExpressionStatement	data [ l ++ ] = base + op -> operands [ 0 ] . reg	2366:3:62045:62083	3529767	2	True				
ANR	3529930	AssignmentExpression	data [ l ++ ] = base + op -> operands [ 0 ] . reg		3529767	0		=			
ANR	3529931	ArrayIndexing	data [ l ++ ]		3529767	0					
ANR	3529932	Identifier	data		3529767	0					
ANR	3529933	PostIncDecOperationExpression	l ++		3529767	1					
ANR	3529934	Identifier	l		3529767	0					
ANR	3529935	IncDec	++		3529767	1					
ANR	3529936	AdditiveExpression	base + op -> operands [ 0 ] . reg		3529767	1		+			
ANR	3529937	Identifier	base		3529767	0					
ANR	3529938	MemberAccess	op -> operands [ 0 ] . reg		3529767	1					
ANR	3529939	ArrayIndexing	op -> operands [ 0 ]		3529767	0					
ANR	3529940	PtrMemberAccess	op -> operands		3529767	0					
ANR	3529941	Identifier	op		3529767	0					
ANR	3529942	Identifier	operands		3529767	1					
ANR	3529943	PrimaryExpression	0		3529767	1					
ANR	3529944	Identifier	reg		3529767	1					
ANR	3529945	ElseStatement	else		3529767	0					
ANR	3529946	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3529767	0					
ANR	3529947	Condition	op -> operands [ 0 ] . type & OT_MEMORY	2368:12:62101:62132	3529767	0	True				
ANR	3529948	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3529767	0		&			
ANR	3529949	MemberAccess	op -> operands [ 0 ] . type		3529767	0					
ANR	3529950	ArrayIndexing	op -> operands [ 0 ]		3529767	0					
ANR	3529951	PtrMemberAccess	op -> operands		3529767	0					
ANR	3529952	Identifier	op		3529767	0					
ANR	3529953	Identifier	operands		3529767	1					
ANR	3529954	PrimaryExpression	0		3529767	1					
ANR	3529955	Identifier	type		3529767	1					
ANR	3529956	Identifier	OT_MEMORY		3529767	1					
ANR	3529957	CompoundStatement		25:46:613:613	3529767	1					
ANR	3529958	ExpressionStatement	data [ l ++ ] = 0xff	2369:2:62139:62155	3529767	0	True				
ANR	3529959	AssignmentExpression	data [ l ++ ] = 0xff		3529767	0		=			
ANR	3529960	ArrayIndexing	data [ l ++ ]		3529767	0					
ANR	3529961	Identifier	data		3529767	0					
ANR	3529962	PostIncDecOperationExpression	l ++		3529767	1					
ANR	3529963	Identifier	l		3529767	0					
ANR	3529964	IncDec	++		3529767	1					
ANR	3529965	PrimaryExpression	0xff		3529767	1					
ANR	3529966	ExpressionStatement	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign	2370:2:62159:62220	3529767	1	True				
ANR	3529967	AssignmentExpression	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		3529767	0		=			
ANR	3529968	Identifier	offset		3529767	0					
ANR	3529969	MultiplicativeExpression	op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		3529767	1		*			
ANR	3529970	MemberAccess	op -> operands [ 0 ] . offset		3529767	0					
ANR	3529971	ArrayIndexing	op -> operands [ 0 ]		3529767	0					
ANR	3529972	PtrMemberAccess	op -> operands		3529767	0					
ANR	3529973	Identifier	op		3529767	0					
ANR	3529974	Identifier	operands		3529767	1					
ANR	3529975	PrimaryExpression	0		3529767	1					
ANR	3529976	Identifier	offset		3529767	1					
ANR	3529977	MemberAccess	op -> operands [ 0 ] . offset_sign		3529767	1					
ANR	3529978	ArrayIndexing	op -> operands [ 0 ]		3529767	0					
ANR	3529979	PtrMemberAccess	op -> operands		3529767	0					
ANR	3529980	Identifier	op		3529767	0					
ANR	3529981	Identifier	operands		3529767	1					
ANR	3529982	PrimaryExpression	0		3529767	1					
ANR	3529983	Identifier	offset_sign		3529767	1					
ANR	3529984	IfStatement	if ( offset != 0 || op -> operands [ 0 ] . regs [ 0 ] == X86R_EBP )		3529767	2					
ANR	3529985	Condition	offset != 0 || op -> operands [ 0 ] . regs [ 0 ] == X86R_EBP	2371:6:62228:62277	3529767	0	True				
ANR	3529986	OrExpression	offset != 0 || op -> operands [ 0 ] . regs [ 0 ] == X86R_EBP		3529767	0		||			
ANR	3529987	EqualityExpression	offset != 0		3529767	0		!=			
ANR	3529988	Identifier	offset		3529767	0					
ANR	3529989	PrimaryExpression	0		3529767	1					
ANR	3529990	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_EBP		3529767	1		==			
ANR	3529991	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3529767	0					
ANR	3529992	MemberAccess	op -> operands [ 0 ] . regs		3529767	0					
ANR	3529993	ArrayIndexing	op -> operands [ 0 ]		3529767	0					
ANR	3529994	PtrMemberAccess	op -> operands		3529767	0					
ANR	3529995	Identifier	op		3529767	0					
ANR	3529996	Identifier	operands		3529767	1					
ANR	3529997	PrimaryExpression	0		3529767	1					
ANR	3529998	Identifier	regs		3529767	1					
ANR	3529999	PrimaryExpression	0		3529767	1					
ANR	3530000	Identifier	X86R_EBP		3529767	1					
ANR	3530001	CompoundStatement		28:58:758:758	3529767	1					
ANR	3530002	ExpressionStatement	mod = 1	2372:3:62285:62292	3529767	0	True				
ANR	3530003	AssignmentExpression	mod = 1		3529767	0		=			
ANR	3530004	Identifier	mod		3529767	0					
ANR	3530005	PrimaryExpression	1		3529767	1					
ANR	3530006	IfStatement	if ( offset >= 128 || offset < - 128 )		3529767	1					
ANR	3530007	Condition	offset >= 128 || offset < - 128	2373:7:62301:62330	3529767	0	True				
ANR	3530008	OrExpression	offset >= 128 || offset < - 128		3529767	0		||			
ANR	3530009	RelationalExpression	offset >= 128		3529767	0		>=			
ANR	3530010	Identifier	offset		3529767	0					
ANR	3530011	PrimaryExpression	128		3529767	1					
ANR	3530012	RelationalExpression	offset < - 128		3529767	1		<			
ANR	3530013	Identifier	offset		3529767	0					
ANR	3530014	UnaryOperationExpression	- 128		3529767	1					
ANR	3530015	UnaryOperator	-		3529767	0					
ANR	3530016	PrimaryExpression	128		3529767	1					
ANR	3530017	CompoundStatement		30:39:811:811	3529767	1					
ANR	3530018	ExpressionStatement	mod = 2	2374:4:62339:62346	3529767	0	True				
ANR	3530019	AssignmentExpression	mod = 2		3529767	0		=			
ANR	3530020	Identifier	mod		3529767	0					
ANR	3530021	PrimaryExpression	2		3529767	1					
ANR	3530022	ExpressionStatement	data [ l ++ ] = mod << 6 | 6 << 3 | op -> operands [ 0 ] . regs [ 0 ]	2376:3:62356:62411	3529767	2	True				
ANR	3530023	AssignmentExpression	data [ l ++ ] = mod << 6 | 6 << 3 | op -> operands [ 0 ] . regs [ 0 ]		3529767	0		=			
ANR	3530024	ArrayIndexing	data [ l ++ ]		3529767	0					
ANR	3530025	Identifier	data		3529767	0					
ANR	3530026	PostIncDecOperationExpression	l ++		3529767	1					
ANR	3530027	Identifier	l		3529767	0					
ANR	3530028	IncDec	++		3529767	1					
ANR	3530029	InclusiveOrExpression	mod << 6 | 6 << 3 | op -> operands [ 0 ] . regs [ 0 ]		3529767	1		|			
ANR	3530030	ShiftExpression	mod << 6		3529767	0		<<			
ANR	3530031	Identifier	mod		3529767	0					
ANR	3530032	PrimaryExpression	6		3529767	1					
ANR	3530033	InclusiveOrExpression	6 << 3 | op -> operands [ 0 ] . regs [ 0 ]		3529767	1		|			
ANR	3530034	ShiftExpression	6 << 3		3529767	0		<<			
ANR	3530035	PrimaryExpression	6		3529767	0					
ANR	3530036	PrimaryExpression	3		3529767	1					
ANR	3530037	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3529767	1					
ANR	3530038	MemberAccess	op -> operands [ 0 ] . regs		3529767	0					
ANR	3530039	ArrayIndexing	op -> operands [ 0 ]		3529767	0					
ANR	3530040	PtrMemberAccess	op -> operands		3529767	0					
ANR	3530041	Identifier	op		3529767	0					
ANR	3530042	Identifier	operands		3529767	1					
ANR	3530043	PrimaryExpression	0		3529767	1					
ANR	3530044	Identifier	regs		3529767	1					
ANR	3530045	PrimaryExpression	0		3529767	1					
ANR	3530046	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP )		3529767	3					
ANR	3530047	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP	2377:7:62420:62454	3529767	0	True				
ANR	3530048	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP		3529767	0		==			
ANR	3530049	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3529767	0					
ANR	3530050	MemberAccess	op -> operands [ 0 ] . regs		3529767	0					
ANR	3530051	ArrayIndexing	op -> operands [ 0 ]		3529767	0					
ANR	3530052	PtrMemberAccess	op -> operands		3529767	0					
ANR	3530053	Identifier	op		3529767	0					
ANR	3530054	Identifier	operands		3529767	1					
ANR	3530055	PrimaryExpression	0		3529767	1					
ANR	3530056	Identifier	regs		3529767	1					
ANR	3530057	PrimaryExpression	0		3529767	1					
ANR	3530058	Identifier	X86R_ESP		3529767	1					
ANR	3530059	CompoundStatement		34:44:935:935	3529767	1					
ANR	3530060	ExpressionStatement	data [ l ++ ] = 0x24	2378:4:62463:62479	3529767	0	True				
ANR	3530061	AssignmentExpression	data [ l ++ ] = 0x24		3529767	0		=			
ANR	3530062	ArrayIndexing	data [ l ++ ]		3529767	0					
ANR	3530063	Identifier	data		3529767	0					
ANR	3530064	PostIncDecOperationExpression	l ++		3529767	1					
ANR	3530065	Identifier	l		3529767	0					
ANR	3530066	IncDec	++		3529767	1					
ANR	3530067	PrimaryExpression	0x24		3529767	1					
ANR	3530068	ExpressionStatement	data [ l ++ ] = offset	2380:3:62489:62507	3529767	4	True				
ANR	3530069	AssignmentExpression	data [ l ++ ] = offset		3529767	0		=			
ANR	3530070	ArrayIndexing	data [ l ++ ]		3529767	0					
ANR	3530071	Identifier	data		3529767	0					
ANR	3530072	PostIncDecOperationExpression	l ++		3529767	1					
ANR	3530073	Identifier	l		3529767	0					
ANR	3530074	IncDec	++		3529767	1					
ANR	3530075	Identifier	offset		3529767	1					
ANR	3530076	IfStatement	if ( mod == 2 )		3529767	5					
ANR	3530077	Condition	mod == 2	2381:7:62516:62523	3529767	0	True				
ANR	3530078	EqualityExpression	mod == 2		3529767	0		==			
ANR	3530079	Identifier	mod		3529767	0					
ANR	3530080	PrimaryExpression	2		3529767	1					
ANR	3530081	CompoundStatement		38:17:1004:1004	3529767	1					
ANR	3530082	ExpressionStatement	data [ l ++ ] = offset >> 8	2382:4:62532:62555	3529767	0	True				
ANR	3530083	AssignmentExpression	data [ l ++ ] = offset >> 8		3529767	0		=			
ANR	3530084	ArrayIndexing	data [ l ++ ]		3529767	0					
ANR	3530085	Identifier	data		3529767	0					
ANR	3530086	PostIncDecOperationExpression	l ++		3529767	1					
ANR	3530087	Identifier	l		3529767	0					
ANR	3530088	IncDec	++		3529767	1					
ANR	3530089	ShiftExpression	offset >> 8		3529767	1		>>			
ANR	3530090	Identifier	offset		3529767	0					
ANR	3530091	PrimaryExpression	8		3529767	1					
ANR	3530092	ExpressionStatement	data [ l ++ ] = offset >> 16	2383:4:62561:62585	3529767	1	True				
ANR	3530093	AssignmentExpression	data [ l ++ ] = offset >> 16		3529767	0		=			
ANR	3530094	ArrayIndexing	data [ l ++ ]		3529767	0					
ANR	3530095	Identifier	data		3529767	0					
ANR	3530096	PostIncDecOperationExpression	l ++		3529767	1					
ANR	3530097	Identifier	l		3529767	0					
ANR	3530098	IncDec	++		3529767	1					
ANR	3530099	ShiftExpression	offset >> 16		3529767	1		>>			
ANR	3530100	Identifier	offset		3529767	0					
ANR	3530101	PrimaryExpression	16		3529767	1					
ANR	3530102	ExpressionStatement	data [ l ++ ] = offset >> 24	2384:4:62591:62615	3529767	2	True				
ANR	3530103	AssignmentExpression	data [ l ++ ] = offset >> 24		3529767	0		=			
ANR	3530104	ArrayIndexing	data [ l ++ ]		3529767	0					
ANR	3530105	Identifier	data		3529767	0					
ANR	3530106	PostIncDecOperationExpression	l ++		3529767	1					
ANR	3530107	Identifier	l		3529767	0					
ANR	3530108	IncDec	++		3529767	1					
ANR	3530109	ShiftExpression	offset >> 24		3529767	1		>>			
ANR	3530110	Identifier	offset		3529767	0					
ANR	3530111	PrimaryExpression	24		3529767	1					
ANR	3530112	ElseStatement	else		3529767	0					
ANR	3530113	CompoundStatement		43:9:1109:1109	3529767	0					
ANR	3530114	ExpressionStatement	mod = 3	2387:3:62636:62643	3529767	0	True				
ANR	3530115	AssignmentExpression	mod = 3		3529767	0		=			
ANR	3530116	Identifier	mod		3529767	0					
ANR	3530117	PrimaryExpression	3		3529767	1					
ANR	3530118	ExpressionStatement	data [ l ++ ] = mod << 4 | op -> operands [ 0 ] . regs [ 0 ]	2388:3:62648:62694	3529767	1	True				
ANR	3530119	AssignmentExpression	data [ l ++ ] = mod << 4 | op -> operands [ 0 ] . regs [ 0 ]		3529767	0		=			
ANR	3530120	ArrayIndexing	data [ l ++ ]		3529767	0					
ANR	3530121	Identifier	data		3529767	0					
ANR	3530122	PostIncDecOperationExpression	l ++		3529767	1					
ANR	3530123	Identifier	l		3529767	0					
ANR	3530124	IncDec	++		3529767	1					
ANR	3530125	InclusiveOrExpression	mod << 4 | op -> operands [ 0 ] . regs [ 0 ]		3529767	1		|			
ANR	3530126	ShiftExpression	mod << 4		3529767	0		<<			
ANR	3530127	Identifier	mod		3529767	0					
ANR	3530128	PrimaryExpression	4		3529767	1					
ANR	3530129	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3529767	1					
ANR	3530130	MemberAccess	op -> operands [ 0 ] . regs		3529767	0					
ANR	3530131	ArrayIndexing	op -> operands [ 0 ]		3529767	0					
ANR	3530132	PtrMemberAccess	op -> operands		3529767	0					
ANR	3530133	Identifier	op		3529767	0					
ANR	3530134	Identifier	operands		3529767	1					
ANR	3530135	PrimaryExpression	0		3529767	1					
ANR	3530136	Identifier	regs		3529767	1					
ANR	3530137	PrimaryExpression	0		3529767	1					
ANR	3530138	IfStatement	if ( op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP )		3529767	2					
ANR	3530139	Condition	op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP	2389:7:62703:62737	3529767	0	True				
ANR	3530140	EqualityExpression	op -> operands [ 0 ] . regs [ 0 ] == X86R_ESP		3529767	0		==			
ANR	3530141	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3529767	0					
ANR	3530142	MemberAccess	op -> operands [ 0 ] . regs		3529767	0					
ANR	3530143	ArrayIndexing	op -> operands [ 0 ]		3529767	0					
ANR	3530144	PtrMemberAccess	op -> operands		3529767	0					
ANR	3530145	Identifier	op		3529767	0					
ANR	3530146	Identifier	operands		3529767	1					
ANR	3530147	PrimaryExpression	0		3529767	1					
ANR	3530148	Identifier	regs		3529767	1					
ANR	3530149	PrimaryExpression	0		3529767	1					
ANR	3530150	Identifier	X86R_ESP		3529767	1					
ANR	3530151	CompoundStatement		46:44:1218:1218	3529767	1					
ANR	3530152	ExpressionStatement	data [ l ++ ] = 0x24	2390:4:62746:62762	3529767	0	True				
ANR	3530153	AssignmentExpression	data [ l ++ ] = 0x24		3529767	0		=			
ANR	3530154	ArrayIndexing	data [ l ++ ]		3529767	0					
ANR	3530155	Identifier	data		3529767	0					
ANR	3530156	PostIncDecOperationExpression	l ++		3529767	1					
ANR	3530157	Identifier	l		3529767	0					
ANR	3530158	IncDec	++		3529767	1					
ANR	3530159	PrimaryExpression	0x24		3529767	1					
ANR	3530160	ElseStatement	else		3529767	0					
ANR	3530161	CompoundStatement		50:8:1259:1259	3529767	0					
ANR	3530162	ExpressionStatement	immediate = op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign	2394:2:62785:62845	3529767	0	True				
ANR	3530163	AssignmentExpression	immediate = op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign		3529767	0		=			
ANR	3530164	Identifier	immediate		3529767	0					
ANR	3530165	MultiplicativeExpression	op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign		3529767	1		*			
ANR	3530166	MemberAccess	op -> operands [ 0 ] . immediate		3529767	0					
ANR	3530167	ArrayIndexing	op -> operands [ 0 ]		3529767	0					
ANR	3530168	PtrMemberAccess	op -> operands		3529767	0					
ANR	3530169	Identifier	op		3529767	0					
ANR	3530170	Identifier	operands		3529767	1					
ANR	3530171	PrimaryExpression	0		3529767	1					
ANR	3530172	Identifier	immediate		3529767	1					
ANR	3530173	MemberAccess	op -> operands [ 0 ] . sign		3529767	1					
ANR	3530174	ArrayIndexing	op -> operands [ 0 ]		3529767	0					
ANR	3530175	PtrMemberAccess	op -> operands		3529767	0					
ANR	3530176	Identifier	op		3529767	0					
ANR	3530177	Identifier	operands		3529767	1					
ANR	3530178	PrimaryExpression	0		3529767	1					
ANR	3530179	Identifier	sign		3529767	1					
ANR	3530180	IfStatement	if ( immediate >= 128 || immediate < - 128 )		3529767	1					
ANR	3530181	Condition	immediate >= 128 || immediate < - 128	2395:6:62853:62888	3529767	0	True				
ANR	3530182	OrExpression	immediate >= 128 || immediate < - 128		3529767	0		||			
ANR	3530183	RelationalExpression	immediate >= 128		3529767	0		>=			
ANR	3530184	Identifier	immediate		3529767	0					
ANR	3530185	PrimaryExpression	128		3529767	1					
ANR	3530186	RelationalExpression	immediate < - 128		3529767	1		<			
ANR	3530187	Identifier	immediate		3529767	0					
ANR	3530188	UnaryOperationExpression	- 128		3529767	1					
ANR	3530189	UnaryOperator	-		3529767	0					
ANR	3530190	PrimaryExpression	128		3529767	1					
ANR	3530191	CompoundStatement		52:44:1369:1369	3529767	1					
ANR	3530192	ExpressionStatement	data [ l ++ ] = 0x68	2396:3:62896:62912	3529767	0	True				
ANR	3530193	AssignmentExpression	data [ l ++ ] = 0x68		3529767	0		=			
ANR	3530194	ArrayIndexing	data [ l ++ ]		3529767	0					
ANR	3530195	Identifier	data		3529767	0					
ANR	3530196	PostIncDecOperationExpression	l ++		3529767	1					
ANR	3530197	Identifier	l		3529767	0					
ANR	3530198	IncDec	++		3529767	1					
ANR	3530199	PrimaryExpression	0x68		3529767	1					
ANR	3530200	ExpressionStatement	data [ l ++ ] = immediate	2397:3:62917:62938	3529767	1	True				
ANR	3530201	AssignmentExpression	data [ l ++ ] = immediate		3529767	0		=			
ANR	3530202	ArrayIndexing	data [ l ++ ]		3529767	0					
ANR	3530203	Identifier	data		3529767	0					
ANR	3530204	PostIncDecOperationExpression	l ++		3529767	1					
ANR	3530205	Identifier	l		3529767	0					
ANR	3530206	IncDec	++		3529767	1					
ANR	3530207	Identifier	immediate		3529767	1					
ANR	3530208	ExpressionStatement	data [ l ++ ] = immediate >> 8	2398:3:62943:62969	3529767	2	True				
ANR	3530209	AssignmentExpression	data [ l ++ ] = immediate >> 8		3529767	0		=			
ANR	3530210	ArrayIndexing	data [ l ++ ]		3529767	0					
ANR	3530211	Identifier	data		3529767	0					
ANR	3530212	PostIncDecOperationExpression	l ++		3529767	1					
ANR	3530213	Identifier	l		3529767	0					
ANR	3530214	IncDec	++		3529767	1					
ANR	3530215	ShiftExpression	immediate >> 8		3529767	1		>>			
ANR	3530216	Identifier	immediate		3529767	0					
ANR	3530217	PrimaryExpression	8		3529767	1					
ANR	3530218	ExpressionStatement	data [ l ++ ] = immediate >> 16	2399:3:62974:63001	3529767	3	True				
ANR	3530219	AssignmentExpression	data [ l ++ ] = immediate >> 16		3529767	0		=			
ANR	3530220	ArrayIndexing	data [ l ++ ]		3529767	0					
ANR	3530221	Identifier	data		3529767	0					
ANR	3530222	PostIncDecOperationExpression	l ++		3529767	1					
ANR	3530223	Identifier	l		3529767	0					
ANR	3530224	IncDec	++		3529767	1					
ANR	3530225	ShiftExpression	immediate >> 16		3529767	1		>>			
ANR	3530226	Identifier	immediate		3529767	0					
ANR	3530227	PrimaryExpression	16		3529767	1					
ANR	3530228	ExpressionStatement	data [ l ++ ] = immediate >> 24	2400:3:63006:63033	3529767	4	True				
ANR	3530229	AssignmentExpression	data [ l ++ ] = immediate >> 24		3529767	0		=			
ANR	3530230	ArrayIndexing	data [ l ++ ]		3529767	0					
ANR	3530231	Identifier	data		3529767	0					
ANR	3530232	PostIncDecOperationExpression	l ++		3529767	1					
ANR	3530233	Identifier	l		3529767	0					
ANR	3530234	IncDec	++		3529767	1					
ANR	3530235	ShiftExpression	immediate >> 24		3529767	1		>>			
ANR	3530236	Identifier	immediate		3529767	0					
ANR	3530237	PrimaryExpression	24		3529767	1					
ANR	3530238	ElseStatement	else		3529767	0					
ANR	3530239	CompoundStatement		58:9:1522:1522	3529767	0					
ANR	3530240	ExpressionStatement	data [ l ++ ] = 0x6a	2402:3:63049:63065	3529767	0	True				
ANR	3530241	AssignmentExpression	data [ l ++ ] = 0x6a		3529767	0		=			
ANR	3530242	ArrayIndexing	data [ l ++ ]		3529767	0					
ANR	3530243	Identifier	data		3529767	0					
ANR	3530244	PostIncDecOperationExpression	l ++		3529767	1					
ANR	3530245	Identifier	l		3529767	0					
ANR	3530246	IncDec	++		3529767	1					
ANR	3530247	PrimaryExpression	0x6a		3529767	1					
ANR	3530248	ExpressionStatement	data [ l ++ ] = immediate	2403:3:63070:63091	3529767	1	True				
ANR	3530249	AssignmentExpression	data [ l ++ ] = immediate		3529767	0		=			
ANR	3530250	ArrayIndexing	data [ l ++ ]		3529767	0					
ANR	3530251	Identifier	data		3529767	0					
ANR	3530252	PostIncDecOperationExpression	l ++		3529767	1					
ANR	3530253	Identifier	l		3529767	0					
ANR	3530254	IncDec	++		3529767	1					
ANR	3530255	Identifier	immediate		3529767	1					
ANR	3530256	ReturnStatement	return l ;	2406:1:63101:63109	3529767	7	True				
ANR	3530257	Identifier	l		3529767	0					
ANR	3530258	ReturnType	static int		3529767	1					
ANR	3530259	Identifier	oppush		3529767	2					
ANR	3530260	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3529767	3					
ANR	3530261	Parameter	RAsm * a	2344:18:61483:61489	3529767	0	True				
ANR	3530262	ParameterType	RAsm *		3529767	0					
ANR	3530263	Identifier	a		3529767	1					
ANR	3530264	Parameter	ut8 * data	2344:27:61492:61500	3529767	1	True				
ANR	3530265	ParameterType	ut8 *		3529767	0					
ANR	3530266	Identifier	data		3529767	1					
ANR	3530267	Parameter	const Opcode * op	2344:38:61503:61518	3529767	2	True				
ANR	3530268	ParameterType	const Opcode *		3529767	0					
ANR	3530269	Identifier	op		3529767	1					
ANR	3530270	CFGEntryNode	ENTRY		3529767		True				
ANR	3530271	CFGExitNode	EXIT		3529767		True				
ANR	3530272	Symbol	op -> operands [ 0 ] . offset_sign		3529767						
ANR	3530273	Symbol	mod		3529767						
ANR	3530274	Symbol	data		3529767						
ANR	3530275	Symbol	* op		3529767						
ANR	3530276	Symbol	X86R_ESP		3529767						
ANR	3530277	Symbol	X86R_EBP		3529767						
ANR	3530278	Symbol	* * op		3529767						
ANR	3530279	Symbol	op -> operands [ 0 ] . extended		3529767						
ANR	3530280	Symbol	* op -> operands		3529767						
ANR	3530281	Symbol	op -> operands [ 0 ] . type		3529767						
ANR	3530282	Symbol	op -> operands [ 0 ] . reg		3529767						
ANR	3530283	Symbol	op -> operands [ 0 ] . offset		3529767						
ANR	3530284	Symbol	OT_MEMORY		3529767						
ANR	3530285	Symbol	a -> bits		3529767						
ANR	3530286	Symbol	op -> operands [ 0 ] . sign		3529767						
ANR	3530287	Symbol	a		3529767						
ANR	3530288	Symbol	op		3529767						
ANR	3530289	Symbol	OT_GPREG		3529767						
ANR	3530290	Symbol	X86R_FS		3529767						
ANR	3530291	Symbol	offset		3529767						
ANR	3530292	Symbol	OT_SEGMENTREG		3529767						
ANR	3530293	Symbol	* a		3529767						
ANR	3530294	Symbol	* * op -> operands		3529767						
ANR	3530295	Symbol	l		3529767						
ANR	3530296	Symbol	op -> operands [ 0 ] . immediate		3529767						
ANR	3530297	Symbol	OT_REGTYPE		3529767						
ANR	3530298	Symbol	immediate		3529767						
ANR	3530299	Symbol	* op -> operands [ 0 ] . regs		3529767						
ANR	3530300	Symbol	* * * op		3529767						
ANR	3530301	Symbol	op -> operands		3529767						
ANR	3530302	Symbol	* data		3529767						
ANR	3530303	Symbol	op -> operands [ 0 ] . regs		3529767						
ANR	3530304	Symbol	base		3529767						
ANR	3530305	Function	opout	2409:0:63114:64218							
ANR	3530306	FunctionDef	"opout (RAsm * a , ut8 * data , const Opcode * op)"		3530305	0					
ANR	3530307	CompoundStatement		2409:55:63169:64218	3530305	0					
ANR	3530308	ExpressionStatement	is_valid_registers ( op )	2410:1:63172:63195	3530305	0	True				
ANR	3530309	CallExpression	is_valid_registers ( op )		3530305	0					
ANR	3530310	Callee	is_valid_registers		3530305	0					
ANR	3530311	Identifier	is_valid_registers		3530305	0					
ANR	3530312	ArgumentList	op		3530305	1					
ANR	3530313	Argument	op		3530305	0					
ANR	3530314	Identifier	op		3530305	0					
ANR	3530315	IdentifierDeclStatement	int l = 0 ;	2411:1:63198:63207	3530305	1	True				
ANR	3530316	IdentifierDecl	l = 0		3530305	0					
ANR	3530317	IdentifierDeclType	int		3530305	0					
ANR	3530318	Identifier	l		3530305	1					
ANR	3530319	AssignmentExpression	l = 0		3530305	2		=			
ANR	3530320	Identifier	l		3530305	0					
ANR	3530321	PrimaryExpression	0		3530305	1					
ANR	3530322	IdentifierDeclStatement	st32 immediate = 0 ;	2412:1:63210:63228	3530305	2	True				
ANR	3530323	IdentifierDecl	immediate = 0		3530305	0					
ANR	3530324	IdentifierDeclType	st32		3530305	0					
ANR	3530325	Identifier	immediate		3530305	1					
ANR	3530326	AssignmentExpression	immediate = 0		3530305	2		=			
ANR	3530327	Identifier	immediate		3530305	0					
ANR	3530328	PrimaryExpression	0		3530305	1					
ANR	3530329	IfStatement	if ( op -> operands [ 0 ] . reg == X86R_DX )		3530305	3					
ANR	3530330	Condition	op -> operands [ 0 ] . reg == X86R_DX	2413:5:63235:63264	3530305	0	True				
ANR	3530331	EqualityExpression	op -> operands [ 0 ] . reg == X86R_DX		3530305	0		==			
ANR	3530332	MemberAccess	op -> operands [ 0 ] . reg		3530305	0					
ANR	3530333	ArrayIndexing	op -> operands [ 0 ]		3530305	0					
ANR	3530334	PtrMemberAccess	op -> operands		3530305	0					
ANR	3530335	Identifier	op		3530305	0					
ANR	3530336	Identifier	operands		3530305	1					
ANR	3530337	PrimaryExpression	0		3530305	1					
ANR	3530338	Identifier	reg		3530305	1					
ANR	3530339	Identifier	X86R_DX		3530305	1					
ANR	3530340	CompoundStatement		5:37:97:97	3530305	1					
ANR	3530341	IfStatement	if ( op -> operands [ 1 ] . reg == X86R_AL && op -> operands [ 1 ] . type & OT_BYTE )		3530305	0					
ANR	3530342	Condition	op -> operands [ 1 ] . reg == X86R_AL && op -> operands [ 1 ] . type & OT_BYTE	2414:6:63275:63338	3530305	0	True				
ANR	3530343	AndExpression	op -> operands [ 1 ] . reg == X86R_AL && op -> operands [ 1 ] . type & OT_BYTE		3530305	0		&&			
ANR	3530344	EqualityExpression	op -> operands [ 1 ] . reg == X86R_AL		3530305	0		==			
ANR	3530345	MemberAccess	op -> operands [ 1 ] . reg		3530305	0					
ANR	3530346	ArrayIndexing	op -> operands [ 1 ]		3530305	0					
ANR	3530347	PtrMemberAccess	op -> operands		3530305	0					
ANR	3530348	Identifier	op		3530305	0					
ANR	3530349	Identifier	operands		3530305	1					
ANR	3530350	PrimaryExpression	1		3530305	1					
ANR	3530351	Identifier	reg		3530305	1					
ANR	3530352	Identifier	X86R_AL		3530305	1					
ANR	3530353	BitAndExpression	op -> operands [ 1 ] . type & OT_BYTE		3530305	1		&			
ANR	3530354	MemberAccess	op -> operands [ 1 ] . type		3530305	0					
ANR	3530355	ArrayIndexing	op -> operands [ 1 ]		3530305	0					
ANR	3530356	PtrMemberAccess	op -> operands		3530305	0					
ANR	3530357	Identifier	op		3530305	0					
ANR	3530358	Identifier	operands		3530305	1					
ANR	3530359	PrimaryExpression	1		3530305	1					
ANR	3530360	Identifier	type		3530305	1					
ANR	3530361	Identifier	OT_BYTE		3530305	1					
ANR	3530362	CompoundStatement		6:72:171:171	3530305	1					
ANR	3530363	ExpressionStatement	data [ l ++ ] = 0xee	2415:3:63346:63362	3530305	0	True				
ANR	3530364	AssignmentExpression	data [ l ++ ] = 0xee		3530305	0		=			
ANR	3530365	ArrayIndexing	data [ l ++ ]		3530305	0					
ANR	3530366	Identifier	data		3530305	0					
ANR	3530367	PostIncDecOperationExpression	l ++		3530305	1					
ANR	3530368	Identifier	l		3530305	0					
ANR	3530369	IncDec	++		3530305	1					
ANR	3530370	PrimaryExpression	0xee		3530305	1					
ANR	3530371	ReturnStatement	return l ;	2416:3:63367:63375	3530305	1	True				
ANR	3530372	Identifier	l		3530305	0					
ANR	3530373	IfStatement	if ( op -> operands [ 1 ] . reg == X86R_AX && op -> operands [ 1 ] . type & OT_WORD )		3530305	1					
ANR	3530374	Condition	op -> operands [ 1 ] . reg == X86R_AX && op -> operands [ 1 ] . type & OT_WORD	2418:6:63387:63450	3530305	0	True				
ANR	3530375	AndExpression	op -> operands [ 1 ] . reg == X86R_AX && op -> operands [ 1 ] . type & OT_WORD		3530305	0		&&			
ANR	3530376	EqualityExpression	op -> operands [ 1 ] . reg == X86R_AX		3530305	0		==			
ANR	3530377	MemberAccess	op -> operands [ 1 ] . reg		3530305	0					
ANR	3530378	ArrayIndexing	op -> operands [ 1 ]		3530305	0					
ANR	3530379	PtrMemberAccess	op -> operands		3530305	0					
ANR	3530380	Identifier	op		3530305	0					
ANR	3530381	Identifier	operands		3530305	1					
ANR	3530382	PrimaryExpression	1		3530305	1					
ANR	3530383	Identifier	reg		3530305	1					
ANR	3530384	Identifier	X86R_AX		3530305	1					
ANR	3530385	BitAndExpression	op -> operands [ 1 ] . type & OT_WORD		3530305	1		&			
ANR	3530386	MemberAccess	op -> operands [ 1 ] . type		3530305	0					
ANR	3530387	ArrayIndexing	op -> operands [ 1 ]		3530305	0					
ANR	3530388	PtrMemberAccess	op -> operands		3530305	0					
ANR	3530389	Identifier	op		3530305	0					
ANR	3530390	Identifier	operands		3530305	1					
ANR	3530391	PrimaryExpression	1		3530305	1					
ANR	3530392	Identifier	type		3530305	1					
ANR	3530393	Identifier	OT_WORD		3530305	1					
ANR	3530394	CompoundStatement		10:72:283:283	3530305	1					
ANR	3530395	ExpressionStatement	data [ l ++ ] = 0x66	2419:3:63458:63474	3530305	0	True				
ANR	3530396	AssignmentExpression	data [ l ++ ] = 0x66		3530305	0		=			
ANR	3530397	ArrayIndexing	data [ l ++ ]		3530305	0					
ANR	3530398	Identifier	data		3530305	0					
ANR	3530399	PostIncDecOperationExpression	l ++		3530305	1					
ANR	3530400	Identifier	l		3530305	0					
ANR	3530401	IncDec	++		3530305	1					
ANR	3530402	PrimaryExpression	0x66		3530305	1					
ANR	3530403	ExpressionStatement	data [ l ++ ] = 0xef	2420:3:63479:63495	3530305	1	True				
ANR	3530404	AssignmentExpression	data [ l ++ ] = 0xef		3530305	0		=			
ANR	3530405	ArrayIndexing	data [ l ++ ]		3530305	0					
ANR	3530406	Identifier	data		3530305	0					
ANR	3530407	PostIncDecOperationExpression	l ++		3530305	1					
ANR	3530408	Identifier	l		3530305	0					
ANR	3530409	IncDec	++		3530305	1					
ANR	3530410	PrimaryExpression	0xef		3530305	1					
ANR	3530411	ReturnStatement	return l ;	2421:3:63500:63508	3530305	2	True				
ANR	3530412	Identifier	l		3530305	0					
ANR	3530413	IfStatement	if ( op -> operands [ 1 ] . reg == X86R_EAX && op -> operands [ 1 ] . type & OT_DWORD )		3530305	2					
ANR	3530414	Condition	op -> operands [ 1 ] . reg == X86R_EAX && op -> operands [ 1 ] . type & OT_DWORD	2423:6:63520:63585	3530305	0	True				
ANR	3530415	AndExpression	op -> operands [ 1 ] . reg == X86R_EAX && op -> operands [ 1 ] . type & OT_DWORD		3530305	0		&&			
ANR	3530416	EqualityExpression	op -> operands [ 1 ] . reg == X86R_EAX		3530305	0		==			
ANR	3530417	MemberAccess	op -> operands [ 1 ] . reg		3530305	0					
ANR	3530418	ArrayIndexing	op -> operands [ 1 ]		3530305	0					
ANR	3530419	PtrMemberAccess	op -> operands		3530305	0					
ANR	3530420	Identifier	op		3530305	0					
ANR	3530421	Identifier	operands		3530305	1					
ANR	3530422	PrimaryExpression	1		3530305	1					
ANR	3530423	Identifier	reg		3530305	1					
ANR	3530424	Identifier	X86R_EAX		3530305	1					
ANR	3530425	BitAndExpression	op -> operands [ 1 ] . type & OT_DWORD		3530305	1		&			
ANR	3530426	MemberAccess	op -> operands [ 1 ] . type		3530305	0					
ANR	3530427	ArrayIndexing	op -> operands [ 1 ]		3530305	0					
ANR	3530428	PtrMemberAccess	op -> operands		3530305	0					
ANR	3530429	Identifier	op		3530305	0					
ANR	3530430	Identifier	operands		3530305	1					
ANR	3530431	PrimaryExpression	1		3530305	1					
ANR	3530432	Identifier	type		3530305	1					
ANR	3530433	Identifier	OT_DWORD		3530305	1					
ANR	3530434	CompoundStatement		15:74:418:418	3530305	1					
ANR	3530435	ExpressionStatement	data [ l ++ ] = 0xef	2424:3:63593:63609	3530305	0	True				
ANR	3530436	AssignmentExpression	data [ l ++ ] = 0xef		3530305	0		=			
ANR	3530437	ArrayIndexing	data [ l ++ ]		3530305	0					
ANR	3530438	Identifier	data		3530305	0					
ANR	3530439	PostIncDecOperationExpression	l ++		3530305	1					
ANR	3530440	Identifier	l		3530305	0					
ANR	3530441	IncDec	++		3530305	1					
ANR	3530442	PrimaryExpression	0xef		3530305	1					
ANR	3530443	ReturnStatement	return l ;	2425:3:63614:63622	3530305	1	True				
ANR	3530444	Identifier	l		3530305	0					
ANR	3530445	ElseStatement	else		3530305	0					
ANR	3530446	IfStatement	if ( op -> operands [ 0 ] . type & OT_CONSTANT )		3530305	0					
ANR	3530447	Condition	op -> operands [ 0 ] . type & OT_CONSTANT	2427:12:63640:63673	3530305	0	True				
ANR	3530448	BitAndExpression	op -> operands [ 0 ] . type & OT_CONSTANT		3530305	0		&			
ANR	3530449	MemberAccess	op -> operands [ 0 ] . type		3530305	0					
ANR	3530450	ArrayIndexing	op -> operands [ 0 ]		3530305	0					
ANR	3530451	PtrMemberAccess	op -> operands		3530305	0					
ANR	3530452	Identifier	op		3530305	0					
ANR	3530453	Identifier	operands		3530305	1					
ANR	3530454	PrimaryExpression	0		3530305	1					
ANR	3530455	Identifier	type		3530305	1					
ANR	3530456	Identifier	OT_CONSTANT		3530305	1					
ANR	3530457	CompoundStatement		19:48:506:506	3530305	1					
ANR	3530458	ExpressionStatement	immediate = op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign	2428:2:63680:63740	3530305	0	True				
ANR	3530459	AssignmentExpression	immediate = op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign		3530305	0		=			
ANR	3530460	Identifier	immediate		3530305	0					
ANR	3530461	MultiplicativeExpression	op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign		3530305	1		*			
ANR	3530462	MemberAccess	op -> operands [ 0 ] . immediate		3530305	0					
ANR	3530463	ArrayIndexing	op -> operands [ 0 ]		3530305	0					
ANR	3530464	PtrMemberAccess	op -> operands		3530305	0					
ANR	3530465	Identifier	op		3530305	0					
ANR	3530466	Identifier	operands		3530305	1					
ANR	3530467	PrimaryExpression	0		3530305	1					
ANR	3530468	Identifier	immediate		3530305	1					
ANR	3530469	MemberAccess	op -> operands [ 0 ] . sign		3530305	1					
ANR	3530470	ArrayIndexing	op -> operands [ 0 ]		3530305	0					
ANR	3530471	PtrMemberAccess	op -> operands		3530305	0					
ANR	3530472	Identifier	op		3530305	0					
ANR	3530473	Identifier	operands		3530305	1					
ANR	3530474	PrimaryExpression	0		3530305	1					
ANR	3530475	Identifier	sign		3530305	1					
ANR	3530476	IfStatement	if ( immediate > 255 || immediate < - 128 )		3530305	1					
ANR	3530477	Condition	immediate > 255 || immediate < - 128	2429:6:63748:63782	3530305	0	True				
ANR	3530478	OrExpression	immediate > 255 || immediate < - 128		3530305	0		||			
ANR	3530479	RelationalExpression	immediate > 255		3530305	0		>			
ANR	3530480	Identifier	immediate		3530305	0					
ANR	3530481	PrimaryExpression	255		3530305	1					
ANR	3530482	RelationalExpression	immediate < - 128		3530305	1		<			
ANR	3530483	Identifier	immediate		3530305	0					
ANR	3530484	UnaryOperationExpression	- 128		3530305	1					
ANR	3530485	UnaryOperator	-		3530305	0					
ANR	3530486	PrimaryExpression	128		3530305	1					
ANR	3530487	CompoundStatement		21:43:615:615	3530305	1					
ANR	3530488	ReturnStatement	return - 1 ;	2430:3:63790:63799	3530305	0	True				
ANR	3530489	UnaryOperationExpression	- 1		3530305	0					
ANR	3530490	UnaryOperator	-		3530305	0					
ANR	3530491	PrimaryExpression	1		3530305	1					
ANR	3530492	IfStatement	if ( op -> operands [ 1 ] . reg == X86R_AL && op -> operands [ 1 ] . type & OT_BYTE )		3530305	2					
ANR	3530493	Condition	op -> operands [ 1 ] . reg == X86R_AL && op -> operands [ 1 ] . type & OT_BYTE	2432:6:63811:63874	3530305	0	True				
ANR	3530494	AndExpression	op -> operands [ 1 ] . reg == X86R_AL && op -> operands [ 1 ] . type & OT_BYTE		3530305	0		&&			
ANR	3530495	EqualityExpression	op -> operands [ 1 ] . reg == X86R_AL		3530305	0		==			
ANR	3530496	MemberAccess	op -> operands [ 1 ] . reg		3530305	0					
ANR	3530497	ArrayIndexing	op -> operands [ 1 ]		3530305	0					
ANR	3530498	PtrMemberAccess	op -> operands		3530305	0					
ANR	3530499	Identifier	op		3530305	0					
ANR	3530500	Identifier	operands		3530305	1					
ANR	3530501	PrimaryExpression	1		3530305	1					
ANR	3530502	Identifier	reg		3530305	1					
ANR	3530503	Identifier	X86R_AL		3530305	1					
ANR	3530504	BitAndExpression	op -> operands [ 1 ] . type & OT_BYTE		3530305	1		&			
ANR	3530505	MemberAccess	op -> operands [ 1 ] . type		3530305	0					
ANR	3530506	ArrayIndexing	op -> operands [ 1 ]		3530305	0					
ANR	3530507	PtrMemberAccess	op -> operands		3530305	0					
ANR	3530508	Identifier	op		3530305	0					
ANR	3530509	Identifier	operands		3530305	1					
ANR	3530510	PrimaryExpression	1		3530305	1					
ANR	3530511	Identifier	type		3530305	1					
ANR	3530512	Identifier	OT_BYTE		3530305	1					
ANR	3530513	CompoundStatement		24:72:707:707	3530305	1					
ANR	3530514	ExpressionStatement	data [ l ++ ] = 0xe6	2433:3:63882:63898	3530305	0	True				
ANR	3530515	AssignmentExpression	data [ l ++ ] = 0xe6		3530305	0		=			
ANR	3530516	ArrayIndexing	data [ l ++ ]		3530305	0					
ANR	3530517	Identifier	data		3530305	0					
ANR	3530518	PostIncDecOperationExpression	l ++		3530305	1					
ANR	3530519	Identifier	l		3530305	0					
ANR	3530520	IncDec	++		3530305	1					
ANR	3530521	PrimaryExpression	0xe6		3530305	1					
ANR	3530522	ElseStatement	else		3530305	0					
ANR	3530523	IfStatement	if ( op -> operands [ 1 ] . reg == X86R_AX && op -> operands [ 1 ] . type & OT_WORD )		3530305	0					
ANR	3530524	Condition	op -> operands [ 1 ] . reg == X86R_AX && op -> operands [ 1 ] . type & OT_WORD	2434:13:63913:63976	3530305	0	True				
ANR	3530525	AndExpression	op -> operands [ 1 ] . reg == X86R_AX && op -> operands [ 1 ] . type & OT_WORD		3530305	0		&&			
ANR	3530526	EqualityExpression	op -> operands [ 1 ] . reg == X86R_AX		3530305	0		==			
ANR	3530527	MemberAccess	op -> operands [ 1 ] . reg		3530305	0					
ANR	3530528	ArrayIndexing	op -> operands [ 1 ]		3530305	0					
ANR	3530529	PtrMemberAccess	op -> operands		3530305	0					
ANR	3530530	Identifier	op		3530305	0					
ANR	3530531	Identifier	operands		3530305	1					
ANR	3530532	PrimaryExpression	1		3530305	1					
ANR	3530533	Identifier	reg		3530305	1					
ANR	3530534	Identifier	X86R_AX		3530305	1					
ANR	3530535	BitAndExpression	op -> operands [ 1 ] . type & OT_WORD		3530305	1		&			
ANR	3530536	MemberAccess	op -> operands [ 1 ] . type		3530305	0					
ANR	3530537	ArrayIndexing	op -> operands [ 1 ]		3530305	0					
ANR	3530538	PtrMemberAccess	op -> operands		3530305	0					
ANR	3530539	Identifier	op		3530305	0					
ANR	3530540	Identifier	operands		3530305	1					
ANR	3530541	PrimaryExpression	1		3530305	1					
ANR	3530542	Identifier	type		3530305	1					
ANR	3530543	Identifier	OT_WORD		3530305	1					
ANR	3530544	CompoundStatement		26:79:809:809	3530305	1					
ANR	3530545	ExpressionStatement	data [ l ++ ] = 0x66	2435:3:63984:64000	3530305	0	True				
ANR	3530546	AssignmentExpression	data [ l ++ ] = 0x66		3530305	0		=			
ANR	3530547	ArrayIndexing	data [ l ++ ]		3530305	0					
ANR	3530548	Identifier	data		3530305	0					
ANR	3530549	PostIncDecOperationExpression	l ++		3530305	1					
ANR	3530550	Identifier	l		3530305	0					
ANR	3530551	IncDec	++		3530305	1					
ANR	3530552	PrimaryExpression	0x66		3530305	1					
ANR	3530553	ExpressionStatement	data [ l ++ ] = 0xe7	2436:3:64005:64021	3530305	1	True				
ANR	3530554	AssignmentExpression	data [ l ++ ] = 0xe7		3530305	0		=			
ANR	3530555	ArrayIndexing	data [ l ++ ]		3530305	0					
ANR	3530556	Identifier	data		3530305	0					
ANR	3530557	PostIncDecOperationExpression	l ++		3530305	1					
ANR	3530558	Identifier	l		3530305	0					
ANR	3530559	IncDec	++		3530305	1					
ANR	3530560	PrimaryExpression	0xe7		3530305	1					
ANR	3530561	ElseStatement	else		3530305	0					
ANR	3530562	IfStatement	if ( op -> operands [ 1 ] . reg == X86R_EAX && op -> operands [ 1 ] . type & OT_DWORD )		3530305	0					
ANR	3530563	Condition	op -> operands [ 1 ] . reg == X86R_EAX && op -> operands [ 1 ] . type & OT_DWORD	2437:13:64036:64101	3530305	0	True				
ANR	3530564	AndExpression	op -> operands [ 1 ] . reg == X86R_EAX && op -> operands [ 1 ] . type & OT_DWORD		3530305	0		&&			
ANR	3530565	EqualityExpression	op -> operands [ 1 ] . reg == X86R_EAX		3530305	0		==			
ANR	3530566	MemberAccess	op -> operands [ 1 ] . reg		3530305	0					
ANR	3530567	ArrayIndexing	op -> operands [ 1 ]		3530305	0					
ANR	3530568	PtrMemberAccess	op -> operands		3530305	0					
ANR	3530569	Identifier	op		3530305	0					
ANR	3530570	Identifier	operands		3530305	1					
ANR	3530571	PrimaryExpression	1		3530305	1					
ANR	3530572	Identifier	reg		3530305	1					
ANR	3530573	Identifier	X86R_EAX		3530305	1					
ANR	3530574	BitAndExpression	op -> operands [ 1 ] . type & OT_DWORD		3530305	1		&			
ANR	3530575	MemberAccess	op -> operands [ 1 ] . type		3530305	0					
ANR	3530576	ArrayIndexing	op -> operands [ 1 ]		3530305	0					
ANR	3530577	PtrMemberAccess	op -> operands		3530305	0					
ANR	3530578	Identifier	op		3530305	0					
ANR	3530579	Identifier	operands		3530305	1					
ANR	3530580	PrimaryExpression	1		3530305	1					
ANR	3530581	Identifier	type		3530305	1					
ANR	3530582	Identifier	OT_DWORD		3530305	1					
ANR	3530583	CompoundStatement		29:81:934:934	3530305	1					
ANR	3530584	ExpressionStatement	data [ l ++ ] = 0xe7	2438:3:64109:64125	3530305	0	True				
ANR	3530585	AssignmentExpression	data [ l ++ ] = 0xe7		3530305	0		=			
ANR	3530586	ArrayIndexing	data [ l ++ ]		3530305	0					
ANR	3530587	Identifier	data		3530305	0					
ANR	3530588	PostIncDecOperationExpression	l ++		3530305	1					
ANR	3530589	Identifier	l		3530305	0					
ANR	3530590	IncDec	++		3530305	1					
ANR	3530591	PrimaryExpression	0xe7		3530305	1					
ANR	3530592	ElseStatement	else		3530305	0					
ANR	3530593	CompoundStatement		31:9:966:966	3530305	0					
ANR	3530594	ReturnStatement	return - 1 ;	2440:3:64141:64150	3530305	0	True				
ANR	3530595	UnaryOperationExpression	- 1		3530305	0					
ANR	3530596	UnaryOperator	-		3530305	0					
ANR	3530597	PrimaryExpression	1		3530305	1					
ANR	3530598	ExpressionStatement	data [ l ++ ] = immediate	2442:2:64158:64179	3530305	3	True				
ANR	3530599	AssignmentExpression	data [ l ++ ] = immediate		3530305	0		=			
ANR	3530600	ArrayIndexing	data [ l ++ ]		3530305	0					
ANR	3530601	Identifier	data		3530305	0					
ANR	3530602	PostIncDecOperationExpression	l ++		3530305	1					
ANR	3530603	Identifier	l		3530305	0					
ANR	3530604	IncDec	++		3530305	1					
ANR	3530605	Identifier	immediate		3530305	1					
ANR	3530606	ElseStatement	else		3530305	0					
ANR	3530607	CompoundStatement		35:8:1019:1019	3530305	0					
ANR	3530608	ReturnStatement	return - 1 ;	2444:2:64193:64202	3530305	0	True				
ANR	3530609	UnaryOperationExpression	- 1		3530305	0					
ANR	3530610	UnaryOperator	-		3530305	0					
ANR	3530611	PrimaryExpression	1		3530305	1					
ANR	3530612	ReturnStatement	return l ;	2446:1:64208:64216	3530305	4	True				
ANR	3530613	Identifier	l		3530305	0					
ANR	3530614	ReturnType	static int		3530305	1					
ANR	3530615	Identifier	opout		3530305	2					
ANR	3530616	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3530305	3					
ANR	3530617	Parameter	RAsm * a	2409:17:63131:63137	3530305	0	True				
ANR	3530618	ParameterType	RAsm *		3530305	0					
ANR	3530619	Identifier	a		3530305	1					
ANR	3530620	Parameter	ut8 * data	2409:26:63140:63148	3530305	1	True				
ANR	3530621	ParameterType	ut8 *		3530305	0					
ANR	3530622	Identifier	data		3530305	1					
ANR	3530623	Parameter	const Opcode * op	2409:37:63151:63166	3530305	2	True				
ANR	3530624	ParameterType	const Opcode *		3530305	0					
ANR	3530625	Identifier	op		3530305	1					
ANR	3530626	CFGEntryNode	ENTRY		3530305		True				
ANR	3530627	CFGExitNode	EXIT		3530305		True				
ANR	3530628	Symbol	X86R_EAX		3530305						
ANR	3530629	Symbol	a		3530305						
ANR	3530630	Symbol	op		3530305						
ANR	3530631	Symbol	OT_CONSTANT		3530305						
ANR	3530632	Symbol	OT_WORD		3530305						
ANR	3530633	Symbol	data		3530305						
ANR	3530634	Symbol	* op		3530305						
ANR	3530635	Symbol	X86R_DX		3530305						
ANR	3530636	Symbol	op -> operands [ 1 ] . reg		3530305						
ANR	3530637	Symbol	X86R_AX		3530305						
ANR	3530638	Symbol	l		3530305						
ANR	3530639	Symbol	op -> operands [ 0 ] . immediate		3530305						
ANR	3530640	Symbol	* * op		3530305						
ANR	3530641	Symbol	* op -> operands		3530305						
ANR	3530642	Symbol	immediate		3530305						
ANR	3530643	Symbol	op -> operands [ 1 ] . type		3530305						
ANR	3530644	Symbol	op -> operands [ 0 ] . type		3530305						
ANR	3530645	Symbol	op -> operands [ 0 ] . reg		3530305						
ANR	3530646	Symbol	op -> operands		3530305						
ANR	3530647	Symbol	X86R_AL		3530305						
ANR	3530648	Symbol	* data		3530305						
ANR	3530649	Symbol	OT_BYTE		3530305						
ANR	3530650	Symbol	OT_DWORD		3530305						
ANR	3530651	Symbol	op -> operands [ 0 ] . sign		3530305						
ANR	3530652	Function	oploop	2449:0:64221:64424							
ANR	3530653	FunctionDef	"oploop (RAsm * a , ut8 * data , const Opcode * op)"		3530652	0					
ANR	3530654	CompoundStatement		2449:56:64277:64424	3530652	0					
ANR	3530655	ExpressionStatement	is_valid_registers ( op )	2450:1:64280:64303	3530652	0	True				
ANR	3530656	CallExpression	is_valid_registers ( op )		3530652	0					
ANR	3530657	Callee	is_valid_registers		3530652	0					
ANR	3530658	Identifier	is_valid_registers		3530652	0					
ANR	3530659	ArgumentList	op		3530652	1					
ANR	3530660	Argument	op		3530652	0					
ANR	3530661	Identifier	op		3530652	0					
ANR	3530662	IdentifierDeclStatement	int l = 0 ;	2451:1:64306:64315	3530652	1	True				
ANR	3530663	IdentifierDecl	l = 0		3530652	0					
ANR	3530664	IdentifierDeclType	int		3530652	0					
ANR	3530665	Identifier	l		3530652	1					
ANR	3530666	AssignmentExpression	l = 0		3530652	2		=			
ANR	3530667	Identifier	l		3530652	0					
ANR	3530668	PrimaryExpression	0		3530652	1					
ANR	3530669	ExpressionStatement	data [ l ++ ] = 0xe2	2452:1:64318:64334	3530652	2	True				
ANR	3530670	AssignmentExpression	data [ l ++ ] = 0xe2		3530652	0		=			
ANR	3530671	ArrayIndexing	data [ l ++ ]		3530652	0					
ANR	3530672	Identifier	data		3530652	0					
ANR	3530673	PostIncDecOperationExpression	l ++		3530652	1					
ANR	3530674	Identifier	l		3530652	0					
ANR	3530675	IncDec	++		3530652	1					
ANR	3530676	PrimaryExpression	0xe2		3530652	1					
ANR	3530677	IdentifierDeclStatement	st8 delta = op -> operands [ 0 ] . immediate - a -> pc - 2 ;	2453:1:64337:64386	3530652	3	True				
ANR	3530678	IdentifierDecl	delta = op -> operands [ 0 ] . immediate - a -> pc - 2		3530652	0					
ANR	3530679	IdentifierDeclType	st8		3530652	0					
ANR	3530680	Identifier	delta		3530652	1					
ANR	3530681	AssignmentExpression	delta = op -> operands [ 0 ] . immediate - a -> pc - 2		3530652	2		=			
ANR	3530682	Identifier	delta		3530652	0					
ANR	3530683	AdditiveExpression	op -> operands [ 0 ] . immediate - a -> pc - 2		3530652	1		-			
ANR	3530684	MemberAccess	op -> operands [ 0 ] . immediate		3530652	0					
ANR	3530685	ArrayIndexing	op -> operands [ 0 ]		3530652	0					
ANR	3530686	PtrMemberAccess	op -> operands		3530652	0					
ANR	3530687	Identifier	op		3530652	0					
ANR	3530688	Identifier	operands		3530652	1					
ANR	3530689	PrimaryExpression	0		3530652	1					
ANR	3530690	Identifier	immediate		3530652	1					
ANR	3530691	AdditiveExpression	a -> pc - 2		3530652	1		-			
ANR	3530692	PtrMemberAccess	a -> pc		3530652	0					
ANR	3530693	Identifier	a		3530652	0					
ANR	3530694	Identifier	pc		3530652	1					
ANR	3530695	PrimaryExpression	2		3530652	1					
ANR	3530696	ExpressionStatement	data [ l ++ ] = ( ut8 ) delta	2454:1:64389:64411	3530652	4	True				
ANR	3530697	AssignmentExpression	data [ l ++ ] = ( ut8 ) delta		3530652	0		=			
ANR	3530698	ArrayIndexing	data [ l ++ ]		3530652	0					
ANR	3530699	Identifier	data		3530652	0					
ANR	3530700	PostIncDecOperationExpression	l ++		3530652	1					
ANR	3530701	Identifier	l		3530652	0					
ANR	3530702	IncDec	++		3530652	1					
ANR	3530703	CastExpression	( ut8 ) delta		3530652	1					
ANR	3530704	CastTarget	ut8		3530652	0					
ANR	3530705	Identifier	delta		3530652	1					
ANR	3530706	ReturnStatement	return l ;	2455:1:64414:64422	3530652	5	True				
ANR	3530707	Identifier	l		3530652	0					
ANR	3530708	ReturnType	static int		3530652	1					
ANR	3530709	Identifier	oploop		3530652	2					
ANR	3530710	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3530652	3					
ANR	3530711	Parameter	RAsm * a	2449:18:64239:64245	3530652	0	True				
ANR	3530712	ParameterType	RAsm *		3530652	0					
ANR	3530713	Identifier	a		3530652	1					
ANR	3530714	Parameter	ut8 * data	2449:27:64248:64256	3530652	1	True				
ANR	3530715	ParameterType	ut8 *		3530652	0					
ANR	3530716	Identifier	data		3530652	1					
ANR	3530717	Parameter	const Opcode * op	2449:38:64259:64274	3530652	2	True				
ANR	3530718	ParameterType	const Opcode *		3530652	0					
ANR	3530719	Identifier	op		3530652	1					
ANR	3530720	CFGEntryNode	ENTRY		3530652		True				
ANR	3530721	CFGExitNode	EXIT		3530652		True				
ANR	3530722	Symbol	a		3530652						
ANR	3530723	Symbol	op		3530652						
ANR	3530724	Symbol	data		3530652						
ANR	3530725	Symbol	* op		3530652						
ANR	3530726	Symbol	delta		3530652						
ANR	3530727	Symbol	* a		3530652						
ANR	3530728	Symbol	l		3530652						
ANR	3530729	Symbol	op -> operands [ 0 ] . immediate		3530652						
ANR	3530730	Symbol	a -> pc		3530652						
ANR	3530731	Symbol	* * op		3530652						
ANR	3530732	Symbol	* op -> operands		3530652						
ANR	3530733	Symbol	op -> operands		3530652						
ANR	3530734	Symbol	* data		3530652						
ANR	3530735	Function	opret	2458:0:64427:64851							
ANR	3530736	FunctionDef	"opret (RAsm * a , ut8 * data , const Opcode * op)"		3530735	0					
ANR	3530737	CompoundStatement		2458:55:64482:64851	3530735	0					
ANR	3530738	IdentifierDeclStatement	int l = 0 ;	2459:1:64485:64494	3530735	0	True				
ANR	3530739	IdentifierDecl	l = 0		3530735	0					
ANR	3530740	IdentifierDeclType	int		3530735	0					
ANR	3530741	Identifier	l		3530735	1					
ANR	3530742	AssignmentExpression	l = 0		3530735	2		=			
ANR	3530743	Identifier	l		3530735	0					
ANR	3530744	PrimaryExpression	0		3530735	1					
ANR	3530745	IdentifierDeclStatement	int immediate = 0 ;	2460:1:64497:64514	3530735	1	True				
ANR	3530746	IdentifierDecl	immediate = 0		3530735	0					
ANR	3530747	IdentifierDeclType	int		3530735	0					
ANR	3530748	Identifier	immediate		3530735	1					
ANR	3530749	AssignmentExpression	immediate = 0		3530735	2		=			
ANR	3530750	Identifier	immediate		3530735	0					
ANR	3530751	PrimaryExpression	0		3530735	1					
ANR	3530752	IfStatement	if ( a -> bits == 16 )		3530735	2					
ANR	3530753	Condition	a -> bits == 16	2461:5:64521:64533	3530735	0	True				
ANR	3530754	EqualityExpression	a -> bits == 16		3530735	0		==			
ANR	3530755	PtrMemberAccess	a -> bits		3530735	0					
ANR	3530756	Identifier	a		3530735	0					
ANR	3530757	Identifier	bits		3530735	1					
ANR	3530758	PrimaryExpression	16		3530735	1					
ANR	3530759	CompoundStatement		4:20:53:53	3530735	1					
ANR	3530760	ExpressionStatement	data [ l ++ ] = 0xc3	2462:2:64540:64556	3530735	0	True				
ANR	3530761	AssignmentExpression	data [ l ++ ] = 0xc3		3530735	0		=			
ANR	3530762	ArrayIndexing	data [ l ++ ]		3530735	0					
ANR	3530763	Identifier	data		3530735	0					
ANR	3530764	PostIncDecOperationExpression	l ++		3530735	1					
ANR	3530765	Identifier	l		3530735	0					
ANR	3530766	IncDec	++		3530735	1					
ANR	3530767	PrimaryExpression	0xc3		3530735	1					
ANR	3530768	ReturnStatement	return l ;	2463:2:64560:64568	3530735	1	True				
ANR	3530769	Identifier	l		3530735	0					
ANR	3530770	IfStatement	if ( op -> operands [ 0 ] . type == OT_UNKNOWN )		3530735	3					
ANR	3530771	Condition	op -> operands [ 0 ] . type == OT_UNKNOWN	2465:5:64578:64611	3530735	0	True				
ANR	3530772	EqualityExpression	op -> operands [ 0 ] . type == OT_UNKNOWN		3530735	0		==			
ANR	3530773	MemberAccess	op -> operands [ 0 ] . type		3530735	0					
ANR	3530774	ArrayIndexing	op -> operands [ 0 ]		3530735	0					
ANR	3530775	PtrMemberAccess	op -> operands		3530735	0					
ANR	3530776	Identifier	op		3530735	0					
ANR	3530777	Identifier	operands		3530735	1					
ANR	3530778	PrimaryExpression	0		3530735	1					
ANR	3530779	Identifier	type		3530735	1					
ANR	3530780	Identifier	OT_UNKNOWN		3530735	1					
ANR	3530781	CompoundStatement		8:41:131:131	3530735	1					
ANR	3530782	ExpressionStatement	data [ l ++ ] = 0xc3	2466:2:64618:64634	3530735	0	True				
ANR	3530783	AssignmentExpression	data [ l ++ ] = 0xc3		3530735	0		=			
ANR	3530784	ArrayIndexing	data [ l ++ ]		3530735	0					
ANR	3530785	Identifier	data		3530735	0					
ANR	3530786	PostIncDecOperationExpression	l ++		3530735	1					
ANR	3530787	Identifier	l		3530735	0					
ANR	3530788	IncDec	++		3530735	1					
ANR	3530789	PrimaryExpression	0xc3		3530735	1					
ANR	3530790	ElseStatement	else		3530735	0					
ANR	3530791	IfStatement	if ( op -> operands [ 0 ] . type & ( OT_CONSTANT | OT_WORD ) )		3530735	0					
ANR	3530792	Condition	op -> operands [ 0 ] . type & ( OT_CONSTANT | OT_WORD )	2467:12:64648:64693	3530735	0	True				
ANR	3530793	BitAndExpression	op -> operands [ 0 ] . type & ( OT_CONSTANT | OT_WORD )		3530735	0		&			
ANR	3530794	MemberAccess	op -> operands [ 0 ] . type		3530735	0					
ANR	3530795	ArrayIndexing	op -> operands [ 0 ]		3530735	0					
ANR	3530796	PtrMemberAccess	op -> operands		3530735	0					
ANR	3530797	Identifier	op		3530735	0					
ANR	3530798	Identifier	operands		3530735	1					
ANR	3530799	PrimaryExpression	0		3530735	1					
ANR	3530800	Identifier	type		3530735	1					
ANR	3530801	InclusiveOrExpression	OT_CONSTANT | OT_WORD		3530735	1		|			
ANR	3530802	Identifier	OT_CONSTANT		3530735	0					
ANR	3530803	Identifier	OT_WORD		3530735	1					
ANR	3530804	CompoundStatement		10:60:213:213	3530735	1					
ANR	3530805	ExpressionStatement	data [ l ++ ] = 0xc2	2468:2:64700:64716	3530735	0	True				
ANR	3530806	AssignmentExpression	data [ l ++ ] = 0xc2		3530735	0		=			
ANR	3530807	ArrayIndexing	data [ l ++ ]		3530735	0					
ANR	3530808	Identifier	data		3530735	0					
ANR	3530809	PostIncDecOperationExpression	l ++		3530735	1					
ANR	3530810	Identifier	l		3530735	0					
ANR	3530811	IncDec	++		3530735	1					
ANR	3530812	PrimaryExpression	0xc2		3530735	1					
ANR	3530813	ExpressionStatement	immediate = op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign	2469:2:64720:64780	3530735	1	True				
ANR	3530814	AssignmentExpression	immediate = op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign		3530735	0		=			
ANR	3530815	Identifier	immediate		3530735	0					
ANR	3530816	MultiplicativeExpression	op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign		3530735	1		*			
ANR	3530817	MemberAccess	op -> operands [ 0 ] . immediate		3530735	0					
ANR	3530818	ArrayIndexing	op -> operands [ 0 ]		3530735	0					
ANR	3530819	PtrMemberAccess	op -> operands		3530735	0					
ANR	3530820	Identifier	op		3530735	0					
ANR	3530821	Identifier	operands		3530735	1					
ANR	3530822	PrimaryExpression	0		3530735	1					
ANR	3530823	Identifier	immediate		3530735	1					
ANR	3530824	MemberAccess	op -> operands [ 0 ] . sign		3530735	1					
ANR	3530825	ArrayIndexing	op -> operands [ 0 ]		3530735	0					
ANR	3530826	PtrMemberAccess	op -> operands		3530735	0					
ANR	3530827	Identifier	op		3530735	0					
ANR	3530828	Identifier	operands		3530735	1					
ANR	3530829	PrimaryExpression	0		3530735	1					
ANR	3530830	Identifier	sign		3530735	1					
ANR	3530831	ExpressionStatement	data [ l ++ ] = immediate	2470:2:64784:64805	3530735	2	True				
ANR	3530832	AssignmentExpression	data [ l ++ ] = immediate		3530735	0		=			
ANR	3530833	ArrayIndexing	data [ l ++ ]		3530735	0					
ANR	3530834	Identifier	data		3530735	0					
ANR	3530835	PostIncDecOperationExpression	l ++		3530735	1					
ANR	3530836	Identifier	l		3530735	0					
ANR	3530837	IncDec	++		3530735	1					
ANR	3530838	Identifier	immediate		3530735	1					
ANR	3530839	ExpressionStatement	data [ l ++ ] = immediate << 8	2471:2:64809:64835	3530735	3	True				
ANR	3530840	AssignmentExpression	data [ l ++ ] = immediate << 8		3530735	0		=			
ANR	3530841	ArrayIndexing	data [ l ++ ]		3530735	0					
ANR	3530842	Identifier	data		3530735	0					
ANR	3530843	PostIncDecOperationExpression	l ++		3530735	1					
ANR	3530844	Identifier	l		3530735	0					
ANR	3530845	IncDec	++		3530735	1					
ANR	3530846	ShiftExpression	immediate << 8		3530735	1		<<			
ANR	3530847	Identifier	immediate		3530735	0					
ANR	3530848	PrimaryExpression	8		3530735	1					
ANR	3530849	ReturnStatement	return l ;	2473:1:64841:64849	3530735	4	True				
ANR	3530850	Identifier	l		3530735	0					
ANR	3530851	ReturnType	static int		3530735	1					
ANR	3530852	Identifier	opret		3530735	2					
ANR	3530853	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3530735	3					
ANR	3530854	Parameter	RAsm * a	2458:17:64444:64450	3530735	0	True				
ANR	3530855	ParameterType	RAsm *		3530735	0					
ANR	3530856	Identifier	a		3530735	1					
ANR	3530857	Parameter	ut8 * data	2458:26:64453:64461	3530735	1	True				
ANR	3530858	ParameterType	ut8 *		3530735	0					
ANR	3530859	Identifier	data		3530735	1					
ANR	3530860	Parameter	const Opcode * op	2458:37:64464:64479	3530735	2	True				
ANR	3530861	ParameterType	const Opcode *		3530735	0					
ANR	3530862	Identifier	op		3530735	1					
ANR	3530863	CFGEntryNode	ENTRY		3530735		True				
ANR	3530864	CFGExitNode	EXIT		3530735		True				
ANR	3530865	Symbol	a		3530735						
ANR	3530866	Symbol	op		3530735						
ANR	3530867	Symbol	OT_CONSTANT		3530735						
ANR	3530868	Symbol	OT_WORD		3530735						
ANR	3530869	Symbol	data		3530735						
ANR	3530870	Symbol	* op		3530735						
ANR	3530871	Symbol	* a		3530735						
ANR	3530872	Symbol	l		3530735						
ANR	3530873	Symbol	op -> operands [ 0 ] . immediate		3530735						
ANR	3530874	Symbol	* * op		3530735						
ANR	3530875	Symbol	OT_UNKNOWN		3530735						
ANR	3530876	Symbol	* op -> operands		3530735						
ANR	3530877	Symbol	immediate		3530735						
ANR	3530878	Symbol	op -> operands [ 0 ] . type		3530735						
ANR	3530879	Symbol	op -> operands		3530735						
ANR	3530880	Symbol	* data		3530735						
ANR	3530881	Symbol	a -> bits		3530735						
ANR	3530882	Symbol	op -> operands [ 0 ] . sign		3530735						
ANR	3530883	Function	opretf	2476:0:64854:65211							
ANR	3530884	FunctionDef	"opretf (RAsm * a , ut8 * data , const Opcode * op)"		3530883	0					
ANR	3530885	CompoundStatement		2476:56:64910:65211	3530883	0					
ANR	3530886	IdentifierDeclStatement	int l = 0 ;	2477:1:64913:64922	3530883	0	True				
ANR	3530887	IdentifierDecl	l = 0		3530883	0					
ANR	3530888	IdentifierDeclType	int		3530883	0					
ANR	3530889	Identifier	l		3530883	1					
ANR	3530890	AssignmentExpression	l = 0		3530883	2		=			
ANR	3530891	Identifier	l		3530883	0					
ANR	3530892	PrimaryExpression	0		3530883	1					
ANR	3530893	IdentifierDeclStatement	st32 immediate = 0 ;	2478:1:64925:64943	3530883	1	True				
ANR	3530894	IdentifierDecl	immediate = 0		3530883	0					
ANR	3530895	IdentifierDeclType	st32		3530883	0					
ANR	3530896	Identifier	immediate		3530883	1					
ANR	3530897	AssignmentExpression	immediate = 0		3530883	2		=			
ANR	3530898	Identifier	immediate		3530883	0					
ANR	3530899	PrimaryExpression	0		3530883	1					
ANR	3530900	IfStatement	if ( op -> operands [ 0 ] . type & OT_CONSTANT )		3530883	2					
ANR	3530901	Condition	op -> operands [ 0 ] . type & OT_CONSTANT	2479:5:64950:64983	3530883	0	True				
ANR	3530902	BitAndExpression	op -> operands [ 0 ] . type & OT_CONSTANT		3530883	0		&			
ANR	3530903	MemberAccess	op -> operands [ 0 ] . type		3530883	0					
ANR	3530904	ArrayIndexing	op -> operands [ 0 ]		3530883	0					
ANR	3530905	PtrMemberAccess	op -> operands		3530883	0					
ANR	3530906	Identifier	op		3530883	0					
ANR	3530907	Identifier	operands		3530883	1					
ANR	3530908	PrimaryExpression	0		3530883	1					
ANR	3530909	Identifier	type		3530883	1					
ANR	3530910	Identifier	OT_CONSTANT		3530883	1					
ANR	3530911	CompoundStatement		4:41:75:75	3530883	1					
ANR	3530912	ExpressionStatement	immediate = op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign	2480:2:64990:65050	3530883	0	True				
ANR	3530913	AssignmentExpression	immediate = op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign		3530883	0		=			
ANR	3530914	Identifier	immediate		3530883	0					
ANR	3530915	MultiplicativeExpression	op -> operands [ 0 ] . immediate * op -> operands [ 0 ] . sign		3530883	1		*			
ANR	3530916	MemberAccess	op -> operands [ 0 ] . immediate		3530883	0					
ANR	3530917	ArrayIndexing	op -> operands [ 0 ]		3530883	0					
ANR	3530918	PtrMemberAccess	op -> operands		3530883	0					
ANR	3530919	Identifier	op		3530883	0					
ANR	3530920	Identifier	operands		3530883	1					
ANR	3530921	PrimaryExpression	0		3530883	1					
ANR	3530922	Identifier	immediate		3530883	1					
ANR	3530923	MemberAccess	op -> operands [ 0 ] . sign		3530883	1					
ANR	3530924	ArrayIndexing	op -> operands [ 0 ]		3530883	0					
ANR	3530925	PtrMemberAccess	op -> operands		3530883	0					
ANR	3530926	Identifier	op		3530883	0					
ANR	3530927	Identifier	operands		3530883	1					
ANR	3530928	PrimaryExpression	0		3530883	1					
ANR	3530929	Identifier	sign		3530883	1					
ANR	3530930	ExpressionStatement	data [ l ++ ] = 0xca	2481:2:65054:65070	3530883	1	True				
ANR	3530931	AssignmentExpression	data [ l ++ ] = 0xca		3530883	0		=			
ANR	3530932	ArrayIndexing	data [ l ++ ]		3530883	0					
ANR	3530933	Identifier	data		3530883	0					
ANR	3530934	PostIncDecOperationExpression	l ++		3530883	1					
ANR	3530935	Identifier	l		3530883	0					
ANR	3530936	IncDec	++		3530883	1					
ANR	3530937	PrimaryExpression	0xca		3530883	1					
ANR	3530938	ExpressionStatement	data [ l ++ ] = immediate	2482:2:65074:65095	3530883	2	True				
ANR	3530939	AssignmentExpression	data [ l ++ ] = immediate		3530883	0		=			
ANR	3530940	ArrayIndexing	data [ l ++ ]		3530883	0					
ANR	3530941	Identifier	data		3530883	0					
ANR	3530942	PostIncDecOperationExpression	l ++		3530883	1					
ANR	3530943	Identifier	l		3530883	0					
ANR	3530944	IncDec	++		3530883	1					
ANR	3530945	Identifier	immediate		3530883	1					
ANR	3530946	ExpressionStatement	data [ l ++ ] = immediate >> 8	2483:2:65099:65125	3530883	3	True				
ANR	3530947	AssignmentExpression	data [ l ++ ] = immediate >> 8		3530883	0		=			
ANR	3530948	ArrayIndexing	data [ l ++ ]		3530883	0					
ANR	3530949	Identifier	data		3530883	0					
ANR	3530950	PostIncDecOperationExpression	l ++		3530883	1					
ANR	3530951	Identifier	l		3530883	0					
ANR	3530952	IncDec	++		3530883	1					
ANR	3530953	ShiftExpression	immediate >> 8		3530883	1		>>			
ANR	3530954	Identifier	immediate		3530883	0					
ANR	3530955	PrimaryExpression	8		3530883	1					
ANR	3530956	ElseStatement	else		3530883	0					
ANR	3530957	IfStatement	if ( op -> operands [ 0 ] . type == OT_UNKNOWN )		3530883	0					
ANR	3530958	Condition	op -> operands [ 0 ] . type == OT_UNKNOWN	2484:12:65139:65172	3530883	0	True				
ANR	3530959	EqualityExpression	op -> operands [ 0 ] . type == OT_UNKNOWN		3530883	0		==			
ANR	3530960	MemberAccess	op -> operands [ 0 ] . type		3530883	0					
ANR	3530961	ArrayIndexing	op -> operands [ 0 ]		3530883	0					
ANR	3530962	PtrMemberAccess	op -> operands		3530883	0					
ANR	3530963	Identifier	op		3530883	0					
ANR	3530964	Identifier	operands		3530883	1					
ANR	3530965	PrimaryExpression	0		3530883	1					
ANR	3530966	Identifier	type		3530883	1					
ANR	3530967	Identifier	OT_UNKNOWN		3530883	1					
ANR	3530968	CompoundStatement		9:48:264:264	3530883	1					
ANR	3530969	ExpressionStatement	data [ l ++ ] = 0xcb	2485:2:65179:65195	3530883	0	True				
ANR	3530970	AssignmentExpression	data [ l ++ ] = 0xcb		3530883	0		=			
ANR	3530971	ArrayIndexing	data [ l ++ ]		3530883	0					
ANR	3530972	Identifier	data		3530883	0					
ANR	3530973	PostIncDecOperationExpression	l ++		3530883	1					
ANR	3530974	Identifier	l		3530883	0					
ANR	3530975	IncDec	++		3530883	1					
ANR	3530976	PrimaryExpression	0xcb		3530883	1					
ANR	3530977	ReturnStatement	return l ;	2487:1:65201:65209	3530883	3	True				
ANR	3530978	Identifier	l		3530883	0					
ANR	3530979	ReturnType	static int		3530883	1					
ANR	3530980	Identifier	opretf		3530883	2					
ANR	3530981	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3530883	3					
ANR	3530982	Parameter	RAsm * a	2476:18:64872:64878	3530883	0	True				
ANR	3530983	ParameterType	RAsm *		3530883	0					
ANR	3530984	Identifier	a		3530883	1					
ANR	3530985	Parameter	ut8 * data	2476:27:64881:64889	3530883	1	True				
ANR	3530986	ParameterType	ut8 *		3530883	0					
ANR	3530987	Identifier	data		3530883	1					
ANR	3530988	Parameter	const Opcode * op	2476:38:64892:64907	3530883	2	True				
ANR	3530989	ParameterType	const Opcode *		3530883	0					
ANR	3530990	Identifier	op		3530883	1					
ANR	3530991	CFGEntryNode	ENTRY		3530883		True				
ANR	3530992	CFGExitNode	EXIT		3530883		True				
ANR	3530993	Symbol	a		3530883						
ANR	3530994	Symbol	op		3530883						
ANR	3530995	Symbol	OT_CONSTANT		3530883						
ANR	3530996	Symbol	data		3530883						
ANR	3530997	Symbol	* op		3530883						
ANR	3530998	Symbol	l		3530883						
ANR	3530999	Symbol	op -> operands [ 0 ] . immediate		3530883						
ANR	3531000	Symbol	* * op		3530883						
ANR	3531001	Symbol	OT_UNKNOWN		3530883						
ANR	3531002	Symbol	* op -> operands		3530883						
ANR	3531003	Symbol	immediate		3530883						
ANR	3531004	Symbol	op -> operands [ 0 ] . type		3530883						
ANR	3531005	Symbol	op -> operands		3530883						
ANR	3531006	Symbol	* data		3530883						
ANR	3531007	Symbol	op -> operands [ 0 ] . sign		3530883						
ANR	3531008	Function	opstos	2490:0:65214:65577							
ANR	3531009	FunctionDef	"opstos (RAsm * a , ut8 * data , const Opcode * op)"		3531008	0					
ANR	3531010	CompoundStatement		2490:56:65270:65577	3531008	0					
ANR	3531011	ExpressionStatement	is_valid_registers ( op )	2491:1:65273:65296	3531008	0	True				
ANR	3531012	CallExpression	is_valid_registers ( op )		3531008	0					
ANR	3531013	Callee	is_valid_registers		3531008	0					
ANR	3531014	Identifier	is_valid_registers		3531008	0					
ANR	3531015	ArgumentList	op		3531008	1					
ANR	3531016	Argument	op		3531008	0					
ANR	3531017	Identifier	op		3531008	0					
ANR	3531018	IdentifierDeclStatement	int l = 0 ;	2492:1:65299:65308	3531008	1	True				
ANR	3531019	IdentifierDecl	l = 0		3531008	0					
ANR	3531020	IdentifierDeclType	int		3531008	0					
ANR	3531021	Identifier	l		3531008	1					
ANR	3531022	AssignmentExpression	l = 0		3531008	2		=			
ANR	3531023	Identifier	l		3531008	0					
ANR	3531024	PrimaryExpression	0		3531008	1					
ANR	3531025	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""stosw"" ) )"		3531008	2					
ANR	3531026	Condition	"! strcmp ( op -> mnemonic , ""stosw"" )"	2493:5:65315:65344	3531008	0	True				
ANR	3531027	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""stosw"" )"		3531008	0					
ANR	3531028	UnaryOperator	!		3531008	0					
ANR	3531029	CallExpression	"strcmp ( op -> mnemonic , ""stosw"" )"		3531008	1					
ANR	3531030	Callee	strcmp		3531008	0					
ANR	3531031	Identifier	strcmp		3531008	0					
ANR	3531032	ArgumentList	op -> mnemonic		3531008	1					
ANR	3531033	Argument	op -> mnemonic		3531008	0					
ANR	3531034	PtrMemberAccess	op -> mnemonic		3531008	0					
ANR	3531035	Identifier	op		3531008	0					
ANR	3531036	Identifier	mnemonic		3531008	1					
ANR	3531037	Argument	"""stosw"""		3531008	1					
ANR	3531038	PrimaryExpression	"""stosw"""		3531008	0					
ANR	3531039	CompoundStatement		4:37:76:76	3531008	1					
ANR	3531040	ExpressionStatement	data [ l ++ ] = 0x66	2494:2:65351:65367	3531008	0	True				
ANR	3531041	AssignmentExpression	data [ l ++ ] = 0x66		3531008	0		=			
ANR	3531042	ArrayIndexing	data [ l ++ ]		3531008	0					
ANR	3531043	Identifier	data		3531008	0					
ANR	3531044	PostIncDecOperationExpression	l ++		3531008	1					
ANR	3531045	Identifier	l		3531008	0					
ANR	3531046	IncDec	++		3531008	1					
ANR	3531047	PrimaryExpression	0x66		3531008	1					
ANR	3531048	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""stosb"" ) )"		3531008	3					
ANR	3531049	Condition	"! strcmp ( op -> mnemonic , ""stosb"" )"	2496:5:65377:65406	3531008	0	True				
ANR	3531050	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""stosb"" )"		3531008	0					
ANR	3531051	UnaryOperator	!		3531008	0					
ANR	3531052	CallExpression	"strcmp ( op -> mnemonic , ""stosb"" )"		3531008	1					
ANR	3531053	Callee	strcmp		3531008	0					
ANR	3531054	Identifier	strcmp		3531008	0					
ANR	3531055	ArgumentList	op -> mnemonic		3531008	1					
ANR	3531056	Argument	op -> mnemonic		3531008	0					
ANR	3531057	PtrMemberAccess	op -> mnemonic		3531008	0					
ANR	3531058	Identifier	op		3531008	0					
ANR	3531059	Identifier	mnemonic		3531008	1					
ANR	3531060	Argument	"""stosb"""		3531008	1					
ANR	3531061	PrimaryExpression	"""stosb"""		3531008	0					
ANR	3531062	CompoundStatement		7:37:138:138	3531008	1					
ANR	3531063	ExpressionStatement	data [ l ++ ] = 0xaa	2497:2:65413:65429	3531008	0	True				
ANR	3531064	AssignmentExpression	data [ l ++ ] = 0xaa		3531008	0		=			
ANR	3531065	ArrayIndexing	data [ l ++ ]		3531008	0					
ANR	3531066	Identifier	data		3531008	0					
ANR	3531067	PostIncDecOperationExpression	l ++		3531008	1					
ANR	3531068	Identifier	l		3531008	0					
ANR	3531069	IncDec	++		3531008	1					
ANR	3531070	PrimaryExpression	0xaa		3531008	1					
ANR	3531071	ElseStatement	else		3531008	0					
ANR	3531072	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""stosw"" ) )"		3531008	0					
ANR	3531073	Condition	"! strcmp ( op -> mnemonic , ""stosw"" )"	2498:12:65443:65472	3531008	0	True				
ANR	3531074	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""stosw"" )"		3531008	0					
ANR	3531075	UnaryOperator	!		3531008	0					
ANR	3531076	CallExpression	"strcmp ( op -> mnemonic , ""stosw"" )"		3531008	1					
ANR	3531077	Callee	strcmp		3531008	0					
ANR	3531078	Identifier	strcmp		3531008	0					
ANR	3531079	ArgumentList	op -> mnemonic		3531008	1					
ANR	3531080	Argument	op -> mnemonic		3531008	0					
ANR	3531081	PtrMemberAccess	op -> mnemonic		3531008	0					
ANR	3531082	Identifier	op		3531008	0					
ANR	3531083	Identifier	mnemonic		3531008	1					
ANR	3531084	Argument	"""stosw"""		3531008	1					
ANR	3531085	PrimaryExpression	"""stosw"""		3531008	0					
ANR	3531086	CompoundStatement		9:44:204:204	3531008	1					
ANR	3531087	ExpressionStatement	data [ l ++ ] = 0xab	2499:2:65479:65495	3531008	0	True				
ANR	3531088	AssignmentExpression	data [ l ++ ] = 0xab		3531008	0		=			
ANR	3531089	ArrayIndexing	data [ l ++ ]		3531008	0					
ANR	3531090	Identifier	data		3531008	0					
ANR	3531091	PostIncDecOperationExpression	l ++		3531008	1					
ANR	3531092	Identifier	l		3531008	0					
ANR	3531093	IncDec	++		3531008	1					
ANR	3531094	PrimaryExpression	0xab		3531008	1					
ANR	3531095	ElseStatement	else		3531008	0					
ANR	3531096	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""stosd"" ) )"		3531008	0					
ANR	3531097	Condition	"! strcmp ( op -> mnemonic , ""stosd"" )"	2500:12:65509:65538	3531008	0	True				
ANR	3531098	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""stosd"" )"		3531008	0					
ANR	3531099	UnaryOperator	!		3531008	0					
ANR	3531100	CallExpression	"strcmp ( op -> mnemonic , ""stosd"" )"		3531008	1					
ANR	3531101	Callee	strcmp		3531008	0					
ANR	3531102	Identifier	strcmp		3531008	0					
ANR	3531103	ArgumentList	op -> mnemonic		3531008	1					
ANR	3531104	Argument	op -> mnemonic		3531008	0					
ANR	3531105	PtrMemberAccess	op -> mnemonic		3531008	0					
ANR	3531106	Identifier	op		3531008	0					
ANR	3531107	Identifier	mnemonic		3531008	1					
ANR	3531108	Argument	"""stosd"""		3531008	1					
ANR	3531109	PrimaryExpression	"""stosd"""		3531008	0					
ANR	3531110	CompoundStatement		11:44:270:270	3531008	1					
ANR	3531111	ExpressionStatement	data [ l ++ ] = 0xab	2501:2:65545:65561	3531008	0	True				
ANR	3531112	AssignmentExpression	data [ l ++ ] = 0xab		3531008	0		=			
ANR	3531113	ArrayIndexing	data [ l ++ ]		3531008	0					
ANR	3531114	Identifier	data		3531008	0					
ANR	3531115	PostIncDecOperationExpression	l ++		3531008	1					
ANR	3531116	Identifier	l		3531008	0					
ANR	3531117	IncDec	++		3531008	1					
ANR	3531118	PrimaryExpression	0xab		3531008	1					
ANR	3531119	ReturnStatement	return l ;	2503:1:65567:65575	3531008	4	True				
ANR	3531120	Identifier	l		3531008	0					
ANR	3531121	ReturnType	static int		3531008	1					
ANR	3531122	Identifier	opstos		3531008	2					
ANR	3531123	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3531008	3					
ANR	3531124	Parameter	RAsm * a	2490:18:65232:65238	3531008	0	True				
ANR	3531125	ParameterType	RAsm *		3531008	0					
ANR	3531126	Identifier	a		3531008	1					
ANR	3531127	Parameter	ut8 * data	2490:27:65241:65249	3531008	1	True				
ANR	3531128	ParameterType	ut8 *		3531008	0					
ANR	3531129	Identifier	data		3531008	1					
ANR	3531130	Parameter	const Opcode * op	2490:38:65252:65267	3531008	2	True				
ANR	3531131	ParameterType	const Opcode *		3531008	0					
ANR	3531132	Identifier	op		3531008	1					
ANR	3531133	CFGEntryNode	ENTRY		3531008		True				
ANR	3531134	CFGExitNode	EXIT		3531008		True				
ANR	3531135	Symbol	strcmp		3531008						
ANR	3531136	Symbol	a		3531008						
ANR	3531137	Symbol	op		3531008						
ANR	3531138	Symbol	data		3531008						
ANR	3531139	Symbol	* op		3531008						
ANR	3531140	Symbol	op -> mnemonic		3531008						
ANR	3531141	Symbol	l		3531008						
ANR	3531142	Symbol	* data		3531008						
ANR	3531143	Function	opset	2506:0:65580:67569							
ANR	3531144	FunctionDef	"opset (RAsm * a , ut8 * data , const Opcode * op)"		3531143	0					
ANR	3531145	CompoundStatement		2506:55:65635:67569	3531143	0					
ANR	3531146	IfStatement	if ( ! ( op -> operands [ 0 ] . type & ( OT_GPREG | OT_BYTE ) ) )		3531143	0					
ANR	3531147	Condition	! ( op -> operands [ 0 ] . type & ( OT_GPREG | OT_BYTE ) )	2507:5:65642:65687	3531143	0	True				
ANR	3531148	UnaryOperationExpression	! ( op -> operands [ 0 ] . type & ( OT_GPREG | OT_BYTE ) )		3531143	0					
ANR	3531149	UnaryOperator	!		3531143	0					
ANR	3531150	BitAndExpression	op -> operands [ 0 ] . type & ( OT_GPREG | OT_BYTE )		3531143	1		&			
ANR	3531151	MemberAccess	op -> operands [ 0 ] . type		3531143	0					
ANR	3531152	ArrayIndexing	op -> operands [ 0 ]		3531143	0					
ANR	3531153	PtrMemberAccess	op -> operands		3531143	0					
ANR	3531154	Identifier	op		3531143	0					
ANR	3531155	Identifier	operands		3531143	1					
ANR	3531156	PrimaryExpression	0		3531143	1					
ANR	3531157	Identifier	type		3531143	1					
ANR	3531158	InclusiveOrExpression	OT_GPREG | OT_BYTE		3531143	1		|			
ANR	3531159	Identifier	OT_GPREG		3531143	0					
ANR	3531160	Identifier	OT_BYTE		3531143	1					
ANR	3531161	CompoundStatement		2:53:54:54	3531143	1					
ANR	3531162	ReturnStatement	return - 1 ;	2507:54:65691:65700	3531143	0	True				
ANR	3531163	UnaryOperationExpression	- 1		3531143	0					
ANR	3531164	UnaryOperator	-		3531143	0					
ANR	3531165	PrimaryExpression	1		3531143	1					
ANR	3531166	IdentifierDeclStatement	int l = 0 ;	2508:1:65704:65713	3531143	1	True				
ANR	3531167	IdentifierDecl	l = 0		3531143	0					
ANR	3531168	IdentifierDeclType	int		3531143	0					
ANR	3531169	Identifier	l		3531143	1					
ANR	3531170	AssignmentExpression	l = 0		3531143	2		=			
ANR	3531171	Identifier	l		3531143	0					
ANR	3531172	PrimaryExpression	0		3531143	1					
ANR	3531173	IdentifierDeclStatement	int mod = 0 ;	2509:1:65716:65727	3531143	2	True				
ANR	3531174	IdentifierDecl	mod = 0		3531143	0					
ANR	3531175	IdentifierDeclType	int		3531143	0					
ANR	3531176	Identifier	mod		3531143	1					
ANR	3531177	AssignmentExpression	mod = 0		3531143	2		=			
ANR	3531178	Identifier	mod		3531143	0					
ANR	3531179	PrimaryExpression	0		3531143	1					
ANR	3531180	IdentifierDeclStatement	int reg = op -> operands [ 0 ] . regs [ 0 ] ;	2510:1:65730:65763	3531143	3	True				
ANR	3531181	IdentifierDecl	reg = op -> operands [ 0 ] . regs [ 0 ]		3531143	0					
ANR	3531182	IdentifierDeclType	int		3531143	0					
ANR	3531183	Identifier	reg		3531143	1					
ANR	3531184	AssignmentExpression	reg = op -> operands [ 0 ] . regs [ 0 ]		3531143	2		=			
ANR	3531185	Identifier	reg		3531143	0					
ANR	3531186	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3531143	1					
ANR	3531187	MemberAccess	op -> operands [ 0 ] . regs		3531143	0					
ANR	3531188	ArrayIndexing	op -> operands [ 0 ]		3531143	0					
ANR	3531189	PtrMemberAccess	op -> operands		3531143	0					
ANR	3531190	Identifier	op		3531143	0					
ANR	3531191	Identifier	operands		3531143	1					
ANR	3531192	PrimaryExpression	0		3531143	1					
ANR	3531193	Identifier	regs		3531143	1					
ANR	3531194	PrimaryExpression	0		3531143	1					
ANR	3531195	ExpressionStatement	data [ l ++ ] = 0x0f	2512:1:65767:65783	3531143	4	True				
ANR	3531196	AssignmentExpression	data [ l ++ ] = 0x0f		3531143	0		=			
ANR	3531197	ArrayIndexing	data [ l ++ ]		3531143	0					
ANR	3531198	Identifier	data		3531143	0					
ANR	3531199	PostIncDecOperationExpression	l ++		3531143	1					
ANR	3531200	Identifier	l		3531143	0					
ANR	3531201	IncDec	++		3531143	1					
ANR	3531202	PrimaryExpression	0x0f		3531143	1					
ANR	3531203	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""seto"" ) )"		3531143	5					
ANR	3531204	Condition	"! strcmp ( op -> mnemonic , ""seto"" )"	2513:5:65790:65819	3531143	0	True				
ANR	3531205	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""seto"" )"		3531143	0					
ANR	3531206	UnaryOperator	!		3531143	0					
ANR	3531207	CallExpression	"strcmp ( op -> mnemonic , ""seto"" )"		3531143	1					
ANR	3531208	Callee	strcmp		3531143	0					
ANR	3531209	Identifier	strcmp		3531143	0					
ANR	3531210	ArgumentList	op -> mnemonic		3531143	1					
ANR	3531211	Argument	op -> mnemonic		3531143	0					
ANR	3531212	PtrMemberAccess	op -> mnemonic		3531143	0					
ANR	3531213	Identifier	op		3531143	0					
ANR	3531214	Identifier	mnemonic		3531143	1					
ANR	3531215	Argument	"""seto"""		3531143	1					
ANR	3531216	PrimaryExpression	"""seto"""		3531143	0					
ANR	3531217	CompoundStatement		8:37:186:186	3531143	1					
ANR	3531218	ExpressionStatement	data [ l ++ ] = 0x90	2514:2:65826:65842	3531143	0	True				
ANR	3531219	AssignmentExpression	data [ l ++ ] = 0x90		3531143	0		=			
ANR	3531220	ArrayIndexing	data [ l ++ ]		3531143	0					
ANR	3531221	Identifier	data		3531143	0					
ANR	3531222	PostIncDecOperationExpression	l ++		3531143	1					
ANR	3531223	Identifier	l		3531143	0					
ANR	3531224	IncDec	++		3531143	1					
ANR	3531225	PrimaryExpression	0x90		3531143	1					
ANR	3531226	ElseStatement	else		3531143	0					
ANR	3531227	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""setno"" ) )"		3531143	0					
ANR	3531228	Condition	"! strcmp ( op -> mnemonic , ""setno"" )"	2515:12:65856:65886	3531143	0	True				
ANR	3531229	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setno"" )"		3531143	0					
ANR	3531230	UnaryOperator	!		3531143	0					
ANR	3531231	CallExpression	"strcmp ( op -> mnemonic , ""setno"" )"		3531143	1					
ANR	3531232	Callee	strcmp		3531143	0					
ANR	3531233	Identifier	strcmp		3531143	0					
ANR	3531234	ArgumentList	op -> mnemonic		3531143	1					
ANR	3531235	Argument	op -> mnemonic		3531143	0					
ANR	3531236	PtrMemberAccess	op -> mnemonic		3531143	0					
ANR	3531237	Identifier	op		3531143	0					
ANR	3531238	Identifier	mnemonic		3531143	1					
ANR	3531239	Argument	"""setno"""		3531143	1					
ANR	3531240	PrimaryExpression	"""setno"""		3531143	0					
ANR	3531241	CompoundStatement		10:45:253:253	3531143	1					
ANR	3531242	ExpressionStatement	data [ l ++ ] = 0x91	2516:2:65893:65909	3531143	0	True				
ANR	3531243	AssignmentExpression	data [ l ++ ] = 0x91		3531143	0		=			
ANR	3531244	ArrayIndexing	data [ l ++ ]		3531143	0					
ANR	3531245	Identifier	data		3531143	0					
ANR	3531246	PostIncDecOperationExpression	l ++		3531143	1					
ANR	3531247	Identifier	l		3531143	0					
ANR	3531248	IncDec	++		3531143	1					
ANR	3531249	PrimaryExpression	0x91		3531143	1					
ANR	3531250	ElseStatement	else		3531143	0					
ANR	3531251	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""setb"" ) || ! strcmp ( op -> mnemonic , ""setnae"" ) || ! strcmp ( op -> mnemonic , ""setc"" ) )"		3531143	0					
ANR	3531252	Condition	"! strcmp ( op -> mnemonic , ""setb"" ) || ! strcmp ( op -> mnemonic , ""setnae"" ) || ! strcmp ( op -> mnemonic , ""setc"" )"	2517:12:65923:66032	3531143	0	True				
ANR	3531253	OrExpression	"! strcmp ( op -> mnemonic , ""setb"" ) || ! strcmp ( op -> mnemonic , ""setnae"" ) || ! strcmp ( op -> mnemonic , ""setc"" )"		3531143	0		||			
ANR	3531254	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setb"" )"		3531143	0					
ANR	3531255	UnaryOperator	!		3531143	0					
ANR	3531256	CallExpression	"strcmp ( op -> mnemonic , ""setb"" )"		3531143	1					
ANR	3531257	Callee	strcmp		3531143	0					
ANR	3531258	Identifier	strcmp		3531143	0					
ANR	3531259	ArgumentList	op -> mnemonic		3531143	1					
ANR	3531260	Argument	op -> mnemonic		3531143	0					
ANR	3531261	PtrMemberAccess	op -> mnemonic		3531143	0					
ANR	3531262	Identifier	op		3531143	0					
ANR	3531263	Identifier	mnemonic		3531143	1					
ANR	3531264	Argument	"""setb"""		3531143	1					
ANR	3531265	PrimaryExpression	"""setb"""		3531143	0					
ANR	3531266	OrExpression	"! strcmp ( op -> mnemonic , ""setnae"" ) || ! strcmp ( op -> mnemonic , ""setc"" )"		3531143	1		||			
ANR	3531267	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setnae"" )"		3531143	0					
ANR	3531268	UnaryOperator	!		3531143	0					
ANR	3531269	CallExpression	"strcmp ( op -> mnemonic , ""setnae"" )"		3531143	1					
ANR	3531270	Callee	strcmp		3531143	0					
ANR	3531271	Identifier	strcmp		3531143	0					
ANR	3531272	ArgumentList	op -> mnemonic		3531143	1					
ANR	3531273	Argument	op -> mnemonic		3531143	0					
ANR	3531274	PtrMemberAccess	op -> mnemonic		3531143	0					
ANR	3531275	Identifier	op		3531143	0					
ANR	3531276	Identifier	mnemonic		3531143	1					
ANR	3531277	Argument	"""setnae"""		3531143	1					
ANR	3531278	PrimaryExpression	"""setnae"""		3531143	0					
ANR	3531279	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setc"" )"		3531143	1					
ANR	3531280	UnaryOperator	!		3531143	0					
ANR	3531281	CallExpression	"strcmp ( op -> mnemonic , ""setc"" )"		3531143	1					
ANR	3531282	Callee	strcmp		3531143	0					
ANR	3531283	Identifier	strcmp		3531143	0					
ANR	3531284	ArgumentList	op -> mnemonic		3531143	1					
ANR	3531285	Argument	op -> mnemonic		3531143	0					
ANR	3531286	PtrMemberAccess	op -> mnemonic		3531143	0					
ANR	3531287	Identifier	op		3531143	0					
ANR	3531288	Identifier	mnemonic		3531143	1					
ANR	3531289	Argument	"""setc"""		3531143	1					
ANR	3531290	PrimaryExpression	"""setc"""		3531143	0					
ANR	3531291	CompoundStatement		14:37:399:399	3531143	1					
ANR	3531292	ExpressionStatement	data [ l ++ ] = 0x92	2520:2:66039:66055	3531143	0	True				
ANR	3531293	AssignmentExpression	data [ l ++ ] = 0x92		3531143	0		=			
ANR	3531294	ArrayIndexing	data [ l ++ ]		3531143	0					
ANR	3531295	Identifier	data		3531143	0					
ANR	3531296	PostIncDecOperationExpression	l ++		3531143	1					
ANR	3531297	Identifier	l		3531143	0					
ANR	3531298	IncDec	++		3531143	1					
ANR	3531299	PrimaryExpression	0x92		3531143	1					
ANR	3531300	ElseStatement	else		3531143	0					
ANR	3531301	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""setnb"" ) || ! strcmp ( op -> mnemonic , ""setae"" ) || ! strcmp ( op -> mnemonic , ""setnc"" ) )"		3531143	0					
ANR	3531302	Condition	"! strcmp ( op -> mnemonic , ""setnb"" ) || ! strcmp ( op -> mnemonic , ""setae"" ) || ! strcmp ( op -> mnemonic , ""setnc"" )"	2521:12:66069:66181	3531143	0	True				
ANR	3531303	OrExpression	"! strcmp ( op -> mnemonic , ""setnb"" ) || ! strcmp ( op -> mnemonic , ""setae"" ) || ! strcmp ( op -> mnemonic , ""setnc"" )"		3531143	0		||			
ANR	3531304	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setnb"" )"		3531143	0					
ANR	3531305	UnaryOperator	!		3531143	0					
ANR	3531306	CallExpression	"strcmp ( op -> mnemonic , ""setnb"" )"		3531143	1					
ANR	3531307	Callee	strcmp		3531143	0					
ANR	3531308	Identifier	strcmp		3531143	0					
ANR	3531309	ArgumentList	op -> mnemonic		3531143	1					
ANR	3531310	Argument	op -> mnemonic		3531143	0					
ANR	3531311	PtrMemberAccess	op -> mnemonic		3531143	0					
ANR	3531312	Identifier	op		3531143	0					
ANR	3531313	Identifier	mnemonic		3531143	1					
ANR	3531314	Argument	"""setnb"""		3531143	1					
ANR	3531315	PrimaryExpression	"""setnb"""		3531143	0					
ANR	3531316	OrExpression	"! strcmp ( op -> mnemonic , ""setae"" ) || ! strcmp ( op -> mnemonic , ""setnc"" )"		3531143	1		||			
ANR	3531317	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setae"" )"		3531143	0					
ANR	3531318	UnaryOperator	!		3531143	0					
ANR	3531319	CallExpression	"strcmp ( op -> mnemonic , ""setae"" )"		3531143	1					
ANR	3531320	Callee	strcmp		3531143	0					
ANR	3531321	Identifier	strcmp		3531143	0					
ANR	3531322	ArgumentList	op -> mnemonic		3531143	1					
ANR	3531323	Argument	op -> mnemonic		3531143	0					
ANR	3531324	PtrMemberAccess	op -> mnemonic		3531143	0					
ANR	3531325	Identifier	op		3531143	0					
ANR	3531326	Identifier	mnemonic		3531143	1					
ANR	3531327	Argument	"""setae"""		3531143	1					
ANR	3531328	PrimaryExpression	"""setae"""		3531143	0					
ANR	3531329	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setnc"" )"		3531143	1					
ANR	3531330	UnaryOperator	!		3531143	0					
ANR	3531331	CallExpression	"strcmp ( op -> mnemonic , ""setnc"" )"		3531143	1					
ANR	3531332	Callee	strcmp		3531143	0					
ANR	3531333	Identifier	strcmp		3531143	0					
ANR	3531334	ArgumentList	op -> mnemonic		3531143	1					
ANR	3531335	Argument	op -> mnemonic		3531143	0					
ANR	3531336	PtrMemberAccess	op -> mnemonic		3531143	0					
ANR	3531337	Identifier	op		3531143	0					
ANR	3531338	Identifier	mnemonic		3531143	1					
ANR	3531339	Argument	"""setnc"""		3531143	1					
ANR	3531340	PrimaryExpression	"""setnc"""		3531143	0					
ANR	3531341	CompoundStatement		18:39:548:548	3531143	1					
ANR	3531342	ExpressionStatement	data [ l ++ ] = 0x93	2524:2:66188:66204	3531143	0	True				
ANR	3531343	AssignmentExpression	data [ l ++ ] = 0x93		3531143	0		=			
ANR	3531344	ArrayIndexing	data [ l ++ ]		3531143	0					
ANR	3531345	Identifier	data		3531143	0					
ANR	3531346	PostIncDecOperationExpression	l ++		3531143	1					
ANR	3531347	Identifier	l		3531143	0					
ANR	3531348	IncDec	++		3531143	1					
ANR	3531349	PrimaryExpression	0x93		3531143	1					
ANR	3531350	ElseStatement	else		3531143	0					
ANR	3531351	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""setz"" ) || ! strcmp ( op -> mnemonic , ""sete"" ) )"		3531143	0					
ANR	3531352	Condition	"! strcmp ( op -> mnemonic , ""setz"" ) || ! strcmp ( op -> mnemonic , ""sete"" )"	2525:12:66218:66287	3531143	0	True				
ANR	3531353	OrExpression	"! strcmp ( op -> mnemonic , ""setz"" ) || ! strcmp ( op -> mnemonic , ""sete"" )"		3531143	0		||			
ANR	3531354	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setz"" )"		3531143	0					
ANR	3531355	UnaryOperator	!		3531143	0					
ANR	3531356	CallExpression	"strcmp ( op -> mnemonic , ""setz"" )"		3531143	1					
ANR	3531357	Callee	strcmp		3531143	0					
ANR	3531358	Identifier	strcmp		3531143	0					
ANR	3531359	ArgumentList	op -> mnemonic		3531143	1					
ANR	3531360	Argument	op -> mnemonic		3531143	0					
ANR	3531361	PtrMemberAccess	op -> mnemonic		3531143	0					
ANR	3531362	Identifier	op		3531143	0					
ANR	3531363	Identifier	mnemonic		3531143	1					
ANR	3531364	Argument	"""setz"""		3531143	1					
ANR	3531365	PrimaryExpression	"""setz"""		3531143	0					
ANR	3531366	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""sete"" )"		3531143	1					
ANR	3531367	UnaryOperator	!		3531143	0					
ANR	3531368	CallExpression	"strcmp ( op -> mnemonic , ""sete"" )"		3531143	1					
ANR	3531369	Callee	strcmp		3531143	0					
ANR	3531370	Identifier	strcmp		3531143	0					
ANR	3531371	ArgumentList	op -> mnemonic		3531143	1					
ANR	3531372	Argument	op -> mnemonic		3531143	0					
ANR	3531373	PtrMemberAccess	op -> mnemonic		3531143	0					
ANR	3531374	Identifier	op		3531143	0					
ANR	3531375	Identifier	mnemonic		3531143	1					
ANR	3531376	Argument	"""sete"""		3531143	1					
ANR	3531377	PrimaryExpression	"""sete"""		3531143	0					
ANR	3531378	CompoundStatement		21:38:654:654	3531143	1					
ANR	3531379	ExpressionStatement	data [ l ++ ] = 0x94	2527:2:66294:66310	3531143	0	True				
ANR	3531380	AssignmentExpression	data [ l ++ ] = 0x94		3531143	0		=			
ANR	3531381	ArrayIndexing	data [ l ++ ]		3531143	0					
ANR	3531382	Identifier	data		3531143	0					
ANR	3531383	PostIncDecOperationExpression	l ++		3531143	1					
ANR	3531384	Identifier	l		3531143	0					
ANR	3531385	IncDec	++		3531143	1					
ANR	3531386	PrimaryExpression	0x94		3531143	1					
ANR	3531387	ElseStatement	else		3531143	0					
ANR	3531388	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""setnz"" ) || ! strcmp ( op -> mnemonic , ""setne"" ) )"		3531143	0					
ANR	3531389	Condition	"! strcmp ( op -> mnemonic , ""setnz"" ) || ! strcmp ( op -> mnemonic , ""setne"" )"	2528:12:66324:66395	3531143	0	True				
ANR	3531390	OrExpression	"! strcmp ( op -> mnemonic , ""setnz"" ) || ! strcmp ( op -> mnemonic , ""setne"" )"		3531143	0		||			
ANR	3531391	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setnz"" )"		3531143	0					
ANR	3531392	UnaryOperator	!		3531143	0					
ANR	3531393	CallExpression	"strcmp ( op -> mnemonic , ""setnz"" )"		3531143	1					
ANR	3531394	Callee	strcmp		3531143	0					
ANR	3531395	Identifier	strcmp		3531143	0					
ANR	3531396	ArgumentList	op -> mnemonic		3531143	1					
ANR	3531397	Argument	op -> mnemonic		3531143	0					
ANR	3531398	PtrMemberAccess	op -> mnemonic		3531143	0					
ANR	3531399	Identifier	op		3531143	0					
ANR	3531400	Identifier	mnemonic		3531143	1					
ANR	3531401	Argument	"""setnz"""		3531143	1					
ANR	3531402	PrimaryExpression	"""setnz"""		3531143	0					
ANR	3531403	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setne"" )"		3531143	1					
ANR	3531404	UnaryOperator	!		3531143	0					
ANR	3531405	CallExpression	"strcmp ( op -> mnemonic , ""setne"" )"		3531143	1					
ANR	3531406	Callee	strcmp		3531143	0					
ANR	3531407	Identifier	strcmp		3531143	0					
ANR	3531408	ArgumentList	op -> mnemonic		3531143	1					
ANR	3531409	Argument	op -> mnemonic		3531143	0					
ANR	3531410	PtrMemberAccess	op -> mnemonic		3531143	0					
ANR	3531411	Identifier	op		3531143	0					
ANR	3531412	Identifier	mnemonic		3531143	1					
ANR	3531413	Argument	"""setne"""		3531143	1					
ANR	3531414	PrimaryExpression	"""setne"""		3531143	0					
ANR	3531415	CompoundStatement		24:39:762:762	3531143	1					
ANR	3531416	ExpressionStatement	data [ l ++ ] = 0x95	2530:2:66402:66418	3531143	0	True				
ANR	3531417	AssignmentExpression	data [ l ++ ] = 0x95		3531143	0		=			
ANR	3531418	ArrayIndexing	data [ l ++ ]		3531143	0					
ANR	3531419	Identifier	data		3531143	0					
ANR	3531420	PostIncDecOperationExpression	l ++		3531143	1					
ANR	3531421	Identifier	l		3531143	0					
ANR	3531422	IncDec	++		3531143	1					
ANR	3531423	PrimaryExpression	0x95		3531143	1					
ANR	3531424	ElseStatement	else		3531143	0					
ANR	3531425	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""setbe"" ) || ! strcmp ( op -> mnemonic , ""setna"" ) )"		3531143	0					
ANR	3531426	Condition	"! strcmp ( op -> mnemonic , ""setbe"" ) || ! strcmp ( op -> mnemonic , ""setna"" )"	2531:12:66432:66503	3531143	0	True				
ANR	3531427	OrExpression	"! strcmp ( op -> mnemonic , ""setbe"" ) || ! strcmp ( op -> mnemonic , ""setna"" )"		3531143	0		||			
ANR	3531428	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setbe"" )"		3531143	0					
ANR	3531429	UnaryOperator	!		3531143	0					
ANR	3531430	CallExpression	"strcmp ( op -> mnemonic , ""setbe"" )"		3531143	1					
ANR	3531431	Callee	strcmp		3531143	0					
ANR	3531432	Identifier	strcmp		3531143	0					
ANR	3531433	ArgumentList	op -> mnemonic		3531143	1					
ANR	3531434	Argument	op -> mnemonic		3531143	0					
ANR	3531435	PtrMemberAccess	op -> mnemonic		3531143	0					
ANR	3531436	Identifier	op		3531143	0					
ANR	3531437	Identifier	mnemonic		3531143	1					
ANR	3531438	Argument	"""setbe"""		3531143	1					
ANR	3531439	PrimaryExpression	"""setbe"""		3531143	0					
ANR	3531440	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setna"" )"		3531143	1					
ANR	3531441	UnaryOperator	!		3531143	0					
ANR	3531442	CallExpression	"strcmp ( op -> mnemonic , ""setna"" )"		3531143	1					
ANR	3531443	Callee	strcmp		3531143	0					
ANR	3531444	Identifier	strcmp		3531143	0					
ANR	3531445	ArgumentList	op -> mnemonic		3531143	1					
ANR	3531446	Argument	op -> mnemonic		3531143	0					
ANR	3531447	PtrMemberAccess	op -> mnemonic		3531143	0					
ANR	3531448	Identifier	op		3531143	0					
ANR	3531449	Identifier	mnemonic		3531143	1					
ANR	3531450	Argument	"""setna"""		3531143	1					
ANR	3531451	PrimaryExpression	"""setna"""		3531143	0					
ANR	3531452	CompoundStatement		27:39:870:870	3531143	1					
ANR	3531453	ExpressionStatement	data [ l ++ ] = 0x96	2533:2:66510:66526	3531143	0	True				
ANR	3531454	AssignmentExpression	data [ l ++ ] = 0x96		3531143	0		=			
ANR	3531455	ArrayIndexing	data [ l ++ ]		3531143	0					
ANR	3531456	Identifier	data		3531143	0					
ANR	3531457	PostIncDecOperationExpression	l ++		3531143	1					
ANR	3531458	Identifier	l		3531143	0					
ANR	3531459	IncDec	++		3531143	1					
ANR	3531460	PrimaryExpression	0x96		3531143	1					
ANR	3531461	ElseStatement	else		3531143	0					
ANR	3531462	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""setnbe"" ) || ! strcmp ( op -> mnemonic , ""seta"" ) )"		3531143	0					
ANR	3531463	Condition	"! strcmp ( op -> mnemonic , ""setnbe"" ) || ! strcmp ( op -> mnemonic , ""seta"" )"	2534:12:66540:66611	3531143	0	True				
ANR	3531464	OrExpression	"! strcmp ( op -> mnemonic , ""setnbe"" ) || ! strcmp ( op -> mnemonic , ""seta"" )"		3531143	0		||			
ANR	3531465	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setnbe"" )"		3531143	0					
ANR	3531466	UnaryOperator	!		3531143	0					
ANR	3531467	CallExpression	"strcmp ( op -> mnemonic , ""setnbe"" )"		3531143	1					
ANR	3531468	Callee	strcmp		3531143	0					
ANR	3531469	Identifier	strcmp		3531143	0					
ANR	3531470	ArgumentList	op -> mnemonic		3531143	1					
ANR	3531471	Argument	op -> mnemonic		3531143	0					
ANR	3531472	PtrMemberAccess	op -> mnemonic		3531143	0					
ANR	3531473	Identifier	op		3531143	0					
ANR	3531474	Identifier	mnemonic		3531143	1					
ANR	3531475	Argument	"""setnbe"""		3531143	1					
ANR	3531476	PrimaryExpression	"""setnbe"""		3531143	0					
ANR	3531477	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""seta"" )"		3531143	1					
ANR	3531478	UnaryOperator	!		3531143	0					
ANR	3531479	CallExpression	"strcmp ( op -> mnemonic , ""seta"" )"		3531143	1					
ANR	3531480	Callee	strcmp		3531143	0					
ANR	3531481	Identifier	strcmp		3531143	0					
ANR	3531482	ArgumentList	op -> mnemonic		3531143	1					
ANR	3531483	Argument	op -> mnemonic		3531143	0					
ANR	3531484	PtrMemberAccess	op -> mnemonic		3531143	0					
ANR	3531485	Identifier	op		3531143	0					
ANR	3531486	Identifier	mnemonic		3531143	1					
ANR	3531487	Argument	"""seta"""		3531143	1					
ANR	3531488	PrimaryExpression	"""seta"""		3531143	0					
ANR	3531489	CompoundStatement		30:38:978:978	3531143	1					
ANR	3531490	ExpressionStatement	data [ l ++ ] = 0x97	2536:2:66618:66634	3531143	0	True				
ANR	3531491	AssignmentExpression	data [ l ++ ] = 0x97		3531143	0		=			
ANR	3531492	ArrayIndexing	data [ l ++ ]		3531143	0					
ANR	3531493	Identifier	data		3531143	0					
ANR	3531494	PostIncDecOperationExpression	l ++		3531143	1					
ANR	3531495	Identifier	l		3531143	0					
ANR	3531496	IncDec	++		3531143	1					
ANR	3531497	PrimaryExpression	0x97		3531143	1					
ANR	3531498	ElseStatement	else		3531143	0					
ANR	3531499	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""sets"" ) )"		3531143	0					
ANR	3531500	Condition	"! strcmp ( op -> mnemonic , ""sets"" )"	2537:12:66648:66677	3531143	0	True				
ANR	3531501	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""sets"" )"		3531143	0					
ANR	3531502	UnaryOperator	!		3531143	0					
ANR	3531503	CallExpression	"strcmp ( op -> mnemonic , ""sets"" )"		3531143	1					
ANR	3531504	Callee	strcmp		3531143	0					
ANR	3531505	Identifier	strcmp		3531143	0					
ANR	3531506	ArgumentList	op -> mnemonic		3531143	1					
ANR	3531507	Argument	op -> mnemonic		3531143	0					
ANR	3531508	PtrMemberAccess	op -> mnemonic		3531143	0					
ANR	3531509	Identifier	op		3531143	0					
ANR	3531510	Identifier	mnemonic		3531143	1					
ANR	3531511	Argument	"""sets"""		3531143	1					
ANR	3531512	PrimaryExpression	"""sets"""		3531143	0					
ANR	3531513	CompoundStatement		32:44:1044:1044	3531143	1					
ANR	3531514	ExpressionStatement	data [ l ++ ] = 0x98	2538:2:66684:66700	3531143	0	True				
ANR	3531515	AssignmentExpression	data [ l ++ ] = 0x98		3531143	0		=			
ANR	3531516	ArrayIndexing	data [ l ++ ]		3531143	0					
ANR	3531517	Identifier	data		3531143	0					
ANR	3531518	PostIncDecOperationExpression	l ++		3531143	1					
ANR	3531519	Identifier	l		3531143	0					
ANR	3531520	IncDec	++		3531143	1					
ANR	3531521	PrimaryExpression	0x98		3531143	1					
ANR	3531522	ElseStatement	else		3531143	0					
ANR	3531523	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""setns"" ) )"		3531143	0					
ANR	3531524	Condition	"! strcmp ( op -> mnemonic , ""setns"" )"	2539:12:66714:66744	3531143	0	True				
ANR	3531525	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setns"" )"		3531143	0					
ANR	3531526	UnaryOperator	!		3531143	0					
ANR	3531527	CallExpression	"strcmp ( op -> mnemonic , ""setns"" )"		3531143	1					
ANR	3531528	Callee	strcmp		3531143	0					
ANR	3531529	Identifier	strcmp		3531143	0					
ANR	3531530	ArgumentList	op -> mnemonic		3531143	1					
ANR	3531531	Argument	op -> mnemonic		3531143	0					
ANR	3531532	PtrMemberAccess	op -> mnemonic		3531143	0					
ANR	3531533	Identifier	op		3531143	0					
ANR	3531534	Identifier	mnemonic		3531143	1					
ANR	3531535	Argument	"""setns"""		3531143	1					
ANR	3531536	PrimaryExpression	"""setns"""		3531143	0					
ANR	3531537	CompoundStatement		34:45:1111:1111	3531143	1					
ANR	3531538	ExpressionStatement	data [ l ++ ] = 0x99	2540:2:66751:66767	3531143	0	True				
ANR	3531539	AssignmentExpression	data [ l ++ ] = 0x99		3531143	0		=			
ANR	3531540	ArrayIndexing	data [ l ++ ]		3531143	0					
ANR	3531541	Identifier	data		3531143	0					
ANR	3531542	PostIncDecOperationExpression	l ++		3531143	1					
ANR	3531543	Identifier	l		3531143	0					
ANR	3531544	IncDec	++		3531143	1					
ANR	3531545	PrimaryExpression	0x99		3531143	1					
ANR	3531546	ElseStatement	else		3531143	0					
ANR	3531547	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""setp"" ) || ! strcmp ( op -> mnemonic , ""setpe"" ) )"		3531143	0					
ANR	3531548	Condition	"! strcmp ( op -> mnemonic , ""setp"" ) || ! strcmp ( op -> mnemonic , ""setpe"" )"	2541:12:66781:66851	3531143	0	True				
ANR	3531549	OrExpression	"! strcmp ( op -> mnemonic , ""setp"" ) || ! strcmp ( op -> mnemonic , ""setpe"" )"		3531143	0		||			
ANR	3531550	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setp"" )"		3531143	0					
ANR	3531551	UnaryOperator	!		3531143	0					
ANR	3531552	CallExpression	"strcmp ( op -> mnemonic , ""setp"" )"		3531143	1					
ANR	3531553	Callee	strcmp		3531143	0					
ANR	3531554	Identifier	strcmp		3531143	0					
ANR	3531555	ArgumentList	op -> mnemonic		3531143	1					
ANR	3531556	Argument	op -> mnemonic		3531143	0					
ANR	3531557	PtrMemberAccess	op -> mnemonic		3531143	0					
ANR	3531558	Identifier	op		3531143	0					
ANR	3531559	Identifier	mnemonic		3531143	1					
ANR	3531560	Argument	"""setp"""		3531143	1					
ANR	3531561	PrimaryExpression	"""setp"""		3531143	0					
ANR	3531562	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setpe"" )"		3531143	1					
ANR	3531563	UnaryOperator	!		3531143	0					
ANR	3531564	CallExpression	"strcmp ( op -> mnemonic , ""setpe"" )"		3531143	1					
ANR	3531565	Callee	strcmp		3531143	0					
ANR	3531566	Identifier	strcmp		3531143	0					
ANR	3531567	ArgumentList	op -> mnemonic		3531143	1					
ANR	3531568	Argument	op -> mnemonic		3531143	0					
ANR	3531569	PtrMemberAccess	op -> mnemonic		3531143	0					
ANR	3531570	Identifier	op		3531143	0					
ANR	3531571	Identifier	mnemonic		3531143	1					
ANR	3531572	Argument	"""setpe"""		3531143	1					
ANR	3531573	PrimaryExpression	"""setpe"""		3531143	0					
ANR	3531574	CompoundStatement		37:39:1218:1218	3531143	1					
ANR	3531575	ExpressionStatement	data [ l ++ ] = 0x9a	2543:2:66858:66874	3531143	0	True				
ANR	3531576	AssignmentExpression	data [ l ++ ] = 0x9a		3531143	0		=			
ANR	3531577	ArrayIndexing	data [ l ++ ]		3531143	0					
ANR	3531578	Identifier	data		3531143	0					
ANR	3531579	PostIncDecOperationExpression	l ++		3531143	1					
ANR	3531580	Identifier	l		3531143	0					
ANR	3531581	IncDec	++		3531143	1					
ANR	3531582	PrimaryExpression	0x9a		3531143	1					
ANR	3531583	ElseStatement	else		3531143	0					
ANR	3531584	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""setnp"" ) || ! strcmp ( op -> mnemonic , ""setpo"" ) )"		3531143	0					
ANR	3531585	Condition	"! strcmp ( op -> mnemonic , ""setnp"" ) || ! strcmp ( op -> mnemonic , ""setpo"" )"	2544:12:66888:66959	3531143	0	True				
ANR	3531586	OrExpression	"! strcmp ( op -> mnemonic , ""setnp"" ) || ! strcmp ( op -> mnemonic , ""setpo"" )"		3531143	0		||			
ANR	3531587	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setnp"" )"		3531143	0					
ANR	3531588	UnaryOperator	!		3531143	0					
ANR	3531589	CallExpression	"strcmp ( op -> mnemonic , ""setnp"" )"		3531143	1					
ANR	3531590	Callee	strcmp		3531143	0					
ANR	3531591	Identifier	strcmp		3531143	0					
ANR	3531592	ArgumentList	op -> mnemonic		3531143	1					
ANR	3531593	Argument	op -> mnemonic		3531143	0					
ANR	3531594	PtrMemberAccess	op -> mnemonic		3531143	0					
ANR	3531595	Identifier	op		3531143	0					
ANR	3531596	Identifier	mnemonic		3531143	1					
ANR	3531597	Argument	"""setnp"""		3531143	1					
ANR	3531598	PrimaryExpression	"""setnp"""		3531143	0					
ANR	3531599	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setpo"" )"		3531143	1					
ANR	3531600	UnaryOperator	!		3531143	0					
ANR	3531601	CallExpression	"strcmp ( op -> mnemonic , ""setpo"" )"		3531143	1					
ANR	3531602	Callee	strcmp		3531143	0					
ANR	3531603	Identifier	strcmp		3531143	0					
ANR	3531604	ArgumentList	op -> mnemonic		3531143	1					
ANR	3531605	Argument	op -> mnemonic		3531143	0					
ANR	3531606	PtrMemberAccess	op -> mnemonic		3531143	0					
ANR	3531607	Identifier	op		3531143	0					
ANR	3531608	Identifier	mnemonic		3531143	1					
ANR	3531609	Argument	"""setpo"""		3531143	1					
ANR	3531610	PrimaryExpression	"""setpo"""		3531143	0					
ANR	3531611	CompoundStatement		40:39:1326:1326	3531143	1					
ANR	3531612	ExpressionStatement	data [ l ++ ] = 0x9b	2546:2:66966:66982	3531143	0	True				
ANR	3531613	AssignmentExpression	data [ l ++ ] = 0x9b		3531143	0		=			
ANR	3531614	ArrayIndexing	data [ l ++ ]		3531143	0					
ANR	3531615	Identifier	data		3531143	0					
ANR	3531616	PostIncDecOperationExpression	l ++		3531143	1					
ANR	3531617	Identifier	l		3531143	0					
ANR	3531618	IncDec	++		3531143	1					
ANR	3531619	PrimaryExpression	0x9b		3531143	1					
ANR	3531620	ElseStatement	else		3531143	0					
ANR	3531621	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""setl"" ) || ! strcmp ( op -> mnemonic , ""setnge"" ) )"		3531143	0					
ANR	3531622	Condition	"! strcmp ( op -> mnemonic , ""setl"" ) || ! strcmp ( op -> mnemonic , ""setnge"" )"	2547:12:66996:67067	3531143	0	True				
ANR	3531623	OrExpression	"! strcmp ( op -> mnemonic , ""setl"" ) || ! strcmp ( op -> mnemonic , ""setnge"" )"		3531143	0		||			
ANR	3531624	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setl"" )"		3531143	0					
ANR	3531625	UnaryOperator	!		3531143	0					
ANR	3531626	CallExpression	"strcmp ( op -> mnemonic , ""setl"" )"		3531143	1					
ANR	3531627	Callee	strcmp		3531143	0					
ANR	3531628	Identifier	strcmp		3531143	0					
ANR	3531629	ArgumentList	op -> mnemonic		3531143	1					
ANR	3531630	Argument	op -> mnemonic		3531143	0					
ANR	3531631	PtrMemberAccess	op -> mnemonic		3531143	0					
ANR	3531632	Identifier	op		3531143	0					
ANR	3531633	Identifier	mnemonic		3531143	1					
ANR	3531634	Argument	"""setl"""		3531143	1					
ANR	3531635	PrimaryExpression	"""setl"""		3531143	0					
ANR	3531636	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setnge"" )"		3531143	1					
ANR	3531637	UnaryOperator	!		3531143	0					
ANR	3531638	CallExpression	"strcmp ( op -> mnemonic , ""setnge"" )"		3531143	1					
ANR	3531639	Callee	strcmp		3531143	0					
ANR	3531640	Identifier	strcmp		3531143	0					
ANR	3531641	ArgumentList	op -> mnemonic		3531143	1					
ANR	3531642	Argument	op -> mnemonic		3531143	0					
ANR	3531643	PtrMemberAccess	op -> mnemonic		3531143	0					
ANR	3531644	Identifier	op		3531143	0					
ANR	3531645	Identifier	mnemonic		3531143	1					
ANR	3531646	Argument	"""setnge"""		3531143	1					
ANR	3531647	PrimaryExpression	"""setnge"""		3531143	0					
ANR	3531648	CompoundStatement		43:40:1434:1434	3531143	1					
ANR	3531649	ExpressionStatement	data [ l ++ ] = 0x9c	2549:2:67074:67090	3531143	0	True				
ANR	3531650	AssignmentExpression	data [ l ++ ] = 0x9c		3531143	0		=			
ANR	3531651	ArrayIndexing	data [ l ++ ]		3531143	0					
ANR	3531652	Identifier	data		3531143	0					
ANR	3531653	PostIncDecOperationExpression	l ++		3531143	1					
ANR	3531654	Identifier	l		3531143	0					
ANR	3531655	IncDec	++		3531143	1					
ANR	3531656	PrimaryExpression	0x9c		3531143	1					
ANR	3531657	ElseStatement	else		3531143	0					
ANR	3531658	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""setnl"" ) || ! strcmp ( op -> mnemonic , ""setge"" ) )"		3531143	0					
ANR	3531659	Condition	"! strcmp ( op -> mnemonic , ""setnl"" ) || ! strcmp ( op -> mnemonic , ""setge"" )"	2550:12:67104:67175	3531143	0	True				
ANR	3531660	OrExpression	"! strcmp ( op -> mnemonic , ""setnl"" ) || ! strcmp ( op -> mnemonic , ""setge"" )"		3531143	0		||			
ANR	3531661	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setnl"" )"		3531143	0					
ANR	3531662	UnaryOperator	!		3531143	0					
ANR	3531663	CallExpression	"strcmp ( op -> mnemonic , ""setnl"" )"		3531143	1					
ANR	3531664	Callee	strcmp		3531143	0					
ANR	3531665	Identifier	strcmp		3531143	0					
ANR	3531666	ArgumentList	op -> mnemonic		3531143	1					
ANR	3531667	Argument	op -> mnemonic		3531143	0					
ANR	3531668	PtrMemberAccess	op -> mnemonic		3531143	0					
ANR	3531669	Identifier	op		3531143	0					
ANR	3531670	Identifier	mnemonic		3531143	1					
ANR	3531671	Argument	"""setnl"""		3531143	1					
ANR	3531672	PrimaryExpression	"""setnl"""		3531143	0					
ANR	3531673	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setge"" )"		3531143	1					
ANR	3531674	UnaryOperator	!		3531143	0					
ANR	3531675	CallExpression	"strcmp ( op -> mnemonic , ""setge"" )"		3531143	1					
ANR	3531676	Callee	strcmp		3531143	0					
ANR	3531677	Identifier	strcmp		3531143	0					
ANR	3531678	ArgumentList	op -> mnemonic		3531143	1					
ANR	3531679	Argument	op -> mnemonic		3531143	0					
ANR	3531680	PtrMemberAccess	op -> mnemonic		3531143	0					
ANR	3531681	Identifier	op		3531143	0					
ANR	3531682	Identifier	mnemonic		3531143	1					
ANR	3531683	Argument	"""setge"""		3531143	1					
ANR	3531684	PrimaryExpression	"""setge"""		3531143	0					
ANR	3531685	CompoundStatement		46:39:1542:1542	3531143	1					
ANR	3531686	ExpressionStatement	data [ l ++ ] = 0x9d	2552:2:67182:67198	3531143	0	True				
ANR	3531687	AssignmentExpression	data [ l ++ ] = 0x9d		3531143	0		=			
ANR	3531688	ArrayIndexing	data [ l ++ ]		3531143	0					
ANR	3531689	Identifier	data		3531143	0					
ANR	3531690	PostIncDecOperationExpression	l ++		3531143	1					
ANR	3531691	Identifier	l		3531143	0					
ANR	3531692	IncDec	++		3531143	1					
ANR	3531693	PrimaryExpression	0x9d		3531143	1					
ANR	3531694	ElseStatement	else		3531143	0					
ANR	3531695	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""setle"" ) || ! strcmp ( op -> mnemonic , ""setng"" ) )"		3531143	0					
ANR	3531696	Condition	"! strcmp ( op -> mnemonic , ""setle"" ) || ! strcmp ( op -> mnemonic , ""setng"" )"	2553:12:67212:67283	3531143	0	True				
ANR	3531697	OrExpression	"! strcmp ( op -> mnemonic , ""setle"" ) || ! strcmp ( op -> mnemonic , ""setng"" )"		3531143	0		||			
ANR	3531698	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setle"" )"		3531143	0					
ANR	3531699	UnaryOperator	!		3531143	0					
ANR	3531700	CallExpression	"strcmp ( op -> mnemonic , ""setle"" )"		3531143	1					
ANR	3531701	Callee	strcmp		3531143	0					
ANR	3531702	Identifier	strcmp		3531143	0					
ANR	3531703	ArgumentList	op -> mnemonic		3531143	1					
ANR	3531704	Argument	op -> mnemonic		3531143	0					
ANR	3531705	PtrMemberAccess	op -> mnemonic		3531143	0					
ANR	3531706	Identifier	op		3531143	0					
ANR	3531707	Identifier	mnemonic		3531143	1					
ANR	3531708	Argument	"""setle"""		3531143	1					
ANR	3531709	PrimaryExpression	"""setle"""		3531143	0					
ANR	3531710	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setng"" )"		3531143	1					
ANR	3531711	UnaryOperator	!		3531143	0					
ANR	3531712	CallExpression	"strcmp ( op -> mnemonic , ""setng"" )"		3531143	1					
ANR	3531713	Callee	strcmp		3531143	0					
ANR	3531714	Identifier	strcmp		3531143	0					
ANR	3531715	ArgumentList	op -> mnemonic		3531143	1					
ANR	3531716	Argument	op -> mnemonic		3531143	0					
ANR	3531717	PtrMemberAccess	op -> mnemonic		3531143	0					
ANR	3531718	Identifier	op		3531143	0					
ANR	3531719	Identifier	mnemonic		3531143	1					
ANR	3531720	Argument	"""setng"""		3531143	1					
ANR	3531721	PrimaryExpression	"""setng"""		3531143	0					
ANR	3531722	CompoundStatement		49:39:1650:1650	3531143	1					
ANR	3531723	ExpressionStatement	data [ l ++ ] = 0x9e	2555:2:67290:67306	3531143	0	True				
ANR	3531724	AssignmentExpression	data [ l ++ ] = 0x9e		3531143	0		=			
ANR	3531725	ArrayIndexing	data [ l ++ ]		3531143	0					
ANR	3531726	Identifier	data		3531143	0					
ANR	3531727	PostIncDecOperationExpression	l ++		3531143	1					
ANR	3531728	Identifier	l		3531143	0					
ANR	3531729	IncDec	++		3531143	1					
ANR	3531730	PrimaryExpression	0x9e		3531143	1					
ANR	3531731	ElseStatement	else		3531143	0					
ANR	3531732	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""setnle"" ) || ! strcmp ( op -> mnemonic , ""setg"" ) )"		3531143	0					
ANR	3531733	Condition	"! strcmp ( op -> mnemonic , ""setnle"" ) || ! strcmp ( op -> mnemonic , ""setg"" )"	2556:12:67320:67391	3531143	0	True				
ANR	3531734	OrExpression	"! strcmp ( op -> mnemonic , ""setnle"" ) || ! strcmp ( op -> mnemonic , ""setg"" )"		3531143	0		||			
ANR	3531735	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setnle"" )"		3531143	0					
ANR	3531736	UnaryOperator	!		3531143	0					
ANR	3531737	CallExpression	"strcmp ( op -> mnemonic , ""setnle"" )"		3531143	1					
ANR	3531738	Callee	strcmp		3531143	0					
ANR	3531739	Identifier	strcmp		3531143	0					
ANR	3531740	ArgumentList	op -> mnemonic		3531143	1					
ANR	3531741	Argument	op -> mnemonic		3531143	0					
ANR	3531742	PtrMemberAccess	op -> mnemonic		3531143	0					
ANR	3531743	Identifier	op		3531143	0					
ANR	3531744	Identifier	mnemonic		3531143	1					
ANR	3531745	Argument	"""setnle"""		3531143	1					
ANR	3531746	PrimaryExpression	"""setnle"""		3531143	0					
ANR	3531747	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""setg"" )"		3531143	1					
ANR	3531748	UnaryOperator	!		3531143	0					
ANR	3531749	CallExpression	"strcmp ( op -> mnemonic , ""setg"" )"		3531143	1					
ANR	3531750	Callee	strcmp		3531143	0					
ANR	3531751	Identifier	strcmp		3531143	0					
ANR	3531752	ArgumentList	op -> mnemonic		3531143	1					
ANR	3531753	Argument	op -> mnemonic		3531143	0					
ANR	3531754	PtrMemberAccess	op -> mnemonic		3531143	0					
ANR	3531755	Identifier	op		3531143	0					
ANR	3531756	Identifier	mnemonic		3531143	1					
ANR	3531757	Argument	"""setg"""		3531143	1					
ANR	3531758	PrimaryExpression	"""setg"""		3531143	0					
ANR	3531759	CompoundStatement		52:38:1758:1758	3531143	1					
ANR	3531760	ExpressionStatement	data [ l ++ ] = 0x9f	2558:2:67398:67414	3531143	0	True				
ANR	3531761	AssignmentExpression	data [ l ++ ] = 0x9f		3531143	0		=			
ANR	3531762	ArrayIndexing	data [ l ++ ]		3531143	0					
ANR	3531763	Identifier	data		3531143	0					
ANR	3531764	PostIncDecOperationExpression	l ++		3531143	1					
ANR	3531765	Identifier	l		3531143	0					
ANR	3531766	IncDec	++		3531143	1					
ANR	3531767	PrimaryExpression	0x9f		3531143	1					
ANR	3531768	ElseStatement	else		3531143	0					
ANR	3531769	CompoundStatement		54:8:1788:1788	3531143	0					
ANR	3531770	ReturnStatement	return - 1 ;	2560:2:67428:67437	3531143	0	True				
ANR	3531771	UnaryOperationExpression	- 1		3531143	0					
ANR	3531772	UnaryOperator	-		3531143	0					
ANR	3531773	PrimaryExpression	1		3531143	1					
ANR	3531774	IfStatement	if ( ! ( op -> operands [ 0 ] . type & OT_MEMORY ) )		3531143	6					
ANR	3531775	Condition	! ( op -> operands [ 0 ] . type & OT_MEMORY )	2562:5:67447:67481	3531143	0	True				
ANR	3531776	UnaryOperationExpression	! ( op -> operands [ 0 ] . type & OT_MEMORY )		3531143	0					
ANR	3531777	UnaryOperator	!		3531143	0					
ANR	3531778	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3531143	1		&			
ANR	3531779	MemberAccess	op -> operands [ 0 ] . type		3531143	0					
ANR	3531780	ArrayIndexing	op -> operands [ 0 ]		3531143	0					
ANR	3531781	PtrMemberAccess	op -> operands		3531143	0					
ANR	3531782	Identifier	op		3531143	0					
ANR	3531783	Identifier	operands		3531143	1					
ANR	3531784	PrimaryExpression	0		3531143	1					
ANR	3531785	Identifier	type		3531143	1					
ANR	3531786	Identifier	OT_MEMORY		3531143	1					
ANR	3531787	CompoundStatement		57:42:1848:1848	3531143	1					
ANR	3531788	ExpressionStatement	mod = 3	2563:2:67488:67495	3531143	0	True				
ANR	3531789	AssignmentExpression	mod = 3		3531143	0		=			
ANR	3531790	Identifier	mod		3531143	0					
ANR	3531791	PrimaryExpression	3		3531143	1					
ANR	3531792	ExpressionStatement	reg = op -> operands [ 0 ] . reg	2564:2:67499:67524	3531143	1	True				
ANR	3531793	AssignmentExpression	reg = op -> operands [ 0 ] . reg		3531143	0		=			
ANR	3531794	Identifier	reg		3531143	0					
ANR	3531795	MemberAccess	op -> operands [ 0 ] . reg		3531143	1					
ANR	3531796	ArrayIndexing	op -> operands [ 0 ]		3531143	0					
ANR	3531797	PtrMemberAccess	op -> operands		3531143	0					
ANR	3531798	Identifier	op		3531143	0					
ANR	3531799	Identifier	operands		3531143	1					
ANR	3531800	PrimaryExpression	0		3531143	1					
ANR	3531801	Identifier	reg		3531143	1					
ANR	3531802	ExpressionStatement	data [ l ++ ] = mod << 6 | reg	2566:1:67530:67556	3531143	7	True				
ANR	3531803	AssignmentExpression	data [ l ++ ] = mod << 6 | reg		3531143	0		=			
ANR	3531804	ArrayIndexing	data [ l ++ ]		3531143	0					
ANR	3531805	Identifier	data		3531143	0					
ANR	3531806	PostIncDecOperationExpression	l ++		3531143	1					
ANR	3531807	Identifier	l		3531143	0					
ANR	3531808	IncDec	++		3531143	1					
ANR	3531809	InclusiveOrExpression	mod << 6 | reg		3531143	1		|			
ANR	3531810	ShiftExpression	mod << 6		3531143	0		<<			
ANR	3531811	Identifier	mod		3531143	0					
ANR	3531812	PrimaryExpression	6		3531143	1					
ANR	3531813	Identifier	reg		3531143	1					
ANR	3531814	ReturnStatement	return l ;	2567:1:67559:67567	3531143	8	True				
ANR	3531815	Identifier	l		3531143	0					
ANR	3531816	ReturnType	static int		3531143	1					
ANR	3531817	Identifier	opset		3531143	2					
ANR	3531818	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3531143	3					
ANR	3531819	Parameter	RAsm * a	2506:17:65597:65603	3531143	0	True				
ANR	3531820	ParameterType	RAsm *		3531143	0					
ANR	3531821	Identifier	a		3531143	1					
ANR	3531822	Parameter	ut8 * data	2506:26:65606:65614	3531143	1	True				
ANR	3531823	ParameterType	ut8 *		3531143	0					
ANR	3531824	Identifier	data		3531143	1					
ANR	3531825	Parameter	const Opcode * op	2506:37:65617:65632	3531143	2	True				
ANR	3531826	ParameterType	const Opcode *		3531143	0					
ANR	3531827	Identifier	op		3531143	1					
ANR	3531828	CFGEntryNode	ENTRY		3531143		True				
ANR	3531829	CFGExitNode	EXIT		3531143		True				
ANR	3531830	Symbol	strcmp		3531143						
ANR	3531831	Symbol	a		3531143						
ANR	3531832	Symbol	op		3531143						
ANR	3531833	Symbol	OT_GPREG		3531143						
ANR	3531834	Symbol	mod		3531143						
ANR	3531835	Symbol	data		3531143						
ANR	3531836	Symbol	* op		3531143						
ANR	3531837	Symbol	op -> mnemonic		3531143						
ANR	3531838	Symbol	* * op -> operands		3531143						
ANR	3531839	Symbol	l		3531143						
ANR	3531840	Symbol	* * op		3531143						
ANR	3531841	Symbol	* op -> operands		3531143						
ANR	3531842	Symbol	reg		3531143						
ANR	3531843	Symbol	* op -> operands [ 0 ] . regs		3531143						
ANR	3531844	Symbol	op -> operands [ 0 ] . type		3531143						
ANR	3531845	Symbol	* * * op		3531143						
ANR	3531846	Symbol	op -> operands [ 0 ] . reg		3531143						
ANR	3531847	Symbol	op -> operands		3531143						
ANR	3531848	Symbol	* data		3531143						
ANR	3531849	Symbol	OT_MEMORY		3531143						
ANR	3531850	Symbol	op -> operands [ 0 ] . regs		3531143						
ANR	3531851	Symbol	OT_BYTE		3531143						
ANR	3531852	Function	optest	2570:0:67572:69168							
ANR	3531853	FunctionDef	"optest (RAsm * a , ut8 * data , const Opcode * op)"		3531852	0					
ANR	3531854	CompoundStatement		2570:56:67628:69168	3531852	0					
ANR	3531855	ExpressionStatement	is_valid_registers ( op )	2571:1:67631:67654	3531852	0	True				
ANR	3531856	CallExpression	is_valid_registers ( op )		3531852	0					
ANR	3531857	Callee	is_valid_registers		3531852	0					
ANR	3531858	Identifier	is_valid_registers		3531852	0					
ANR	3531859	ArgumentList	op		3531852	1					
ANR	3531860	Argument	op		3531852	0					
ANR	3531861	Identifier	op		3531852	0					
ANR	3531862	IdentifierDeclStatement	int l = 0 ;	2572:1:67657:67666	3531852	1	True				
ANR	3531863	IdentifierDecl	l = 0		3531852	0					
ANR	3531864	IdentifierDeclType	int		3531852	0					
ANR	3531865	Identifier	l		3531852	1					
ANR	3531866	AssignmentExpression	l = 0		3531852	2		=			
ANR	3531867	Identifier	l		3531852	0					
ANR	3531868	PrimaryExpression	0		3531852	1					
ANR	3531869	IfStatement	if ( ! op -> operands [ 0 ] . type || ! op -> operands [ 1 ] . type )		3531852	2					
ANR	3531870	Condition	! op -> operands [ 0 ] . type || ! op -> operands [ 1 ] . type	2573:5:67673:67718	3531852	0	True				
ANR	3531871	OrExpression	! op -> operands [ 0 ] . type || ! op -> operands [ 1 ] . type		3531852	0		||			
ANR	3531872	UnaryOperationExpression	! op -> operands [ 0 ] . type		3531852	0					
ANR	3531873	UnaryOperator	!		3531852	0					
ANR	3531874	MemberAccess	op -> operands [ 0 ] . type		3531852	1					
ANR	3531875	ArrayIndexing	op -> operands [ 0 ]		3531852	0					
ANR	3531876	PtrMemberAccess	op -> operands		3531852	0					
ANR	3531877	Identifier	op		3531852	0					
ANR	3531878	Identifier	operands		3531852	1					
ANR	3531879	PrimaryExpression	0		3531852	1					
ANR	3531880	Identifier	type		3531852	1					
ANR	3531881	UnaryOperationExpression	! op -> operands [ 1 ] . type		3531852	1					
ANR	3531882	UnaryOperator	!		3531852	0					
ANR	3531883	MemberAccess	op -> operands [ 1 ] . type		3531852	1					
ANR	3531884	ArrayIndexing	op -> operands [ 1 ]		3531852	0					
ANR	3531885	PtrMemberAccess	op -> operands		3531852	0					
ANR	3531886	Identifier	op		3531852	0					
ANR	3531887	Identifier	operands		3531852	1					
ANR	3531888	PrimaryExpression	1		3531852	1					
ANR	3531889	Identifier	type		3531852	1					
ANR	3531890	CompoundStatement		4:53:92:92	3531852	1					
ANR	3531891	ExpressionStatement	"eprintf ( ""Error: Invalid operands\\n"" )"	2574:2:67725:67762	3531852	0	True				
ANR	3531892	CallExpression	"eprintf ( ""Error: Invalid operands\\n"" )"		3531852	0					
ANR	3531893	Callee	eprintf		3531852	0					
ANR	3531894	Identifier	eprintf		3531852	0					
ANR	3531895	ArgumentList	"""Error: Invalid operands\\n"""		3531852	1					
ANR	3531896	Argument	"""Error: Invalid operands\\n"""		3531852	0					
ANR	3531897	PrimaryExpression	"""Error: Invalid operands\\n"""		3531852	0					
ANR	3531898	ReturnStatement	return - 1 ;	2575:2:67766:67775	3531852	1	True				
ANR	3531899	UnaryOperationExpression	- 1		3531852	0					
ANR	3531900	UnaryOperator	-		3531852	0					
ANR	3531901	PrimaryExpression	1		3531852	1					
ANR	3531902	IfStatement	if ( a -> bits == 64 )		3531852	3					
ANR	3531903	Condition	a -> bits == 64	2577:5:67785:67797	3531852	0	True				
ANR	3531904	EqualityExpression	a -> bits == 64		3531852	0		==			
ANR	3531905	PtrMemberAccess	a -> bits		3531852	0					
ANR	3531906	Identifier	a		3531852	0					
ANR	3531907	Identifier	bits		3531852	1					
ANR	3531908	PrimaryExpression	64		3531852	1					
ANR	3531909	CompoundStatement		8:20:171:171	3531852	1					
ANR	3531910	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY || op -> operands [ 1 ] . type & OT_MEMORY )		3531852	0					
ANR	3531911	Condition	op -> operands [ 0 ] . type & OT_MEMORY || op -> operands [ 1 ] . type & OT_MEMORY	2578:6:67808:67878	3531852	0	True				
ANR	3531912	OrExpression	op -> operands [ 0 ] . type & OT_MEMORY || op -> operands [ 1 ] . type & OT_MEMORY		3531852	0		||			
ANR	3531913	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3531852	0		&			
ANR	3531914	MemberAccess	op -> operands [ 0 ] . type		3531852	0					
ANR	3531915	ArrayIndexing	op -> operands [ 0 ]		3531852	0					
ANR	3531916	PtrMemberAccess	op -> operands		3531852	0					
ANR	3531917	Identifier	op		3531852	0					
ANR	3531918	Identifier	operands		3531852	1					
ANR	3531919	PrimaryExpression	0		3531852	1					
ANR	3531920	Identifier	type		3531852	1					
ANR	3531921	Identifier	OT_MEMORY		3531852	1					
ANR	3531922	BitAndExpression	op -> operands [ 1 ] . type & OT_MEMORY		3531852	1		&			
ANR	3531923	MemberAccess	op -> operands [ 1 ] . type		3531852	0					
ANR	3531924	ArrayIndexing	op -> operands [ 1 ]		3531852	0					
ANR	3531925	PtrMemberAccess	op -> operands		3531852	0					
ANR	3531926	Identifier	op		3531852	0					
ANR	3531927	Identifier	operands		3531852	1					
ANR	3531928	PrimaryExpression	1		3531852	1					
ANR	3531929	Identifier	type		3531852	1					
ANR	3531930	Identifier	OT_MEMORY		3531852	1					
ANR	3531931	CompoundStatement		10:37:252:252	3531852	1					
ANR	3531932	ExpressionStatement	data [ l ++ ] = 0x67	2580:3:67886:67902	3531852	0	True				
ANR	3531933	AssignmentExpression	data [ l ++ ] = 0x67		3531852	0		=			
ANR	3531934	ArrayIndexing	data [ l ++ ]		3531852	0					
ANR	3531935	Identifier	data		3531852	0					
ANR	3531936	PostIncDecOperationExpression	l ++		3531852	1					
ANR	3531937	Identifier	l		3531852	0					
ANR	3531938	IncDec	++		3531852	1					
ANR	3531939	PrimaryExpression	0x67		3531852	1					
ANR	3531940	IfStatement	if ( op -> operands [ 0 ] . type & OT_QWORD && op -> operands [ 1 ] . type & OT_QWORD )		3531852	1					
ANR	3531941	Condition	op -> operands [ 0 ] . type & OT_QWORD && op -> operands [ 1 ] . type & OT_QWORD	2582:6:67914:67982	3531852	0	True				
ANR	3531942	AndExpression	op -> operands [ 0 ] . type & OT_QWORD && op -> operands [ 1 ] . type & OT_QWORD		3531852	0		&&			
ANR	3531943	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		3531852	0		&			
ANR	3531944	MemberAccess	op -> operands [ 0 ] . type		3531852	0					
ANR	3531945	ArrayIndexing	op -> operands [ 0 ]		3531852	0					
ANR	3531946	PtrMemberAccess	op -> operands		3531852	0					
ANR	3531947	Identifier	op		3531852	0					
ANR	3531948	Identifier	operands		3531852	1					
ANR	3531949	PrimaryExpression	0		3531852	1					
ANR	3531950	Identifier	type		3531852	1					
ANR	3531951	Identifier	OT_QWORD		3531852	1					
ANR	3531952	BitAndExpression	op -> operands [ 1 ] . type & OT_QWORD		3531852	1		&			
ANR	3531953	MemberAccess	op -> operands [ 1 ] . type		3531852	0					
ANR	3531954	ArrayIndexing	op -> operands [ 1 ]		3531852	0					
ANR	3531955	PtrMemberAccess	op -> operands		3531852	0					
ANR	3531956	Identifier	op		3531852	0					
ANR	3531957	Identifier	operands		3531852	1					
ANR	3531958	PrimaryExpression	1		3531852	1					
ANR	3531959	Identifier	type		3531852	1					
ANR	3531960	Identifier	OT_QWORD		3531852	1					
ANR	3531961	CompoundStatement		14:36:356:356	3531852	1					
ANR	3531962	IfStatement	if ( op -> operands [ 0 ] . extended && op -> operands [ 1 ] . extended )		3531852	0					
ANR	3531963	Condition	op -> operands [ 0 ] . extended && op -> operands [ 1 ] . extended	2584:7:67994:68052	3531852	0	True				
ANR	3531964	AndExpression	op -> operands [ 0 ] . extended && op -> operands [ 1 ] . extended		3531852	0		&&			
ANR	3531965	MemberAccess	op -> operands [ 0 ] . extended		3531852	0					
ANR	3531966	ArrayIndexing	op -> operands [ 0 ]		3531852	0					
ANR	3531967	PtrMemberAccess	op -> operands		3531852	0					
ANR	3531968	Identifier	op		3531852	0					
ANR	3531969	Identifier	operands		3531852	1					
ANR	3531970	PrimaryExpression	0		3531852	1					
ANR	3531971	Identifier	extended		3531852	1					
ANR	3531972	MemberAccess	op -> operands [ 1 ] . extended		3531852	1					
ANR	3531973	ArrayIndexing	op -> operands [ 1 ]		3531852	0					
ANR	3531974	PtrMemberAccess	op -> operands		3531852	0					
ANR	3531975	Identifier	op		3531852	0					
ANR	3531976	Identifier	operands		3531852	1					
ANR	3531977	PrimaryExpression	1		3531852	1					
ANR	3531978	Identifier	extended		3531852	1					
ANR	3531979	CompoundStatement		16:33:426:426	3531852	1					
ANR	3531980	ExpressionStatement	data [ l ++ ] = 0x4d	2586:5:68062:68078	3531852	0	True				
ANR	3531981	AssignmentExpression	data [ l ++ ] = 0x4d		3531852	0		=			
ANR	3531982	ArrayIndexing	data [ l ++ ]		3531852	0					
ANR	3531983	Identifier	data		3531852	0					
ANR	3531984	PostIncDecOperationExpression	l ++		3531852	1					
ANR	3531985	Identifier	l		3531852	0					
ANR	3531986	IncDec	++		3531852	1					
ANR	3531987	PrimaryExpression	0x4d		3531852	1					
ANR	3531988	ElseStatement	else		3531852	0					
ANR	3531989	CompoundStatement		18:11:462:462	3531852	0					
ANR	3531990	ExpressionStatement	data [ l ++ ] = 0x48	2588:5:68098:68114	3531852	0	True				
ANR	3531991	AssignmentExpression	data [ l ++ ] = 0x48		3531852	0		=			
ANR	3531992	ArrayIndexing	data [ l ++ ]		3531852	0					
ANR	3531993	Identifier	data		3531852	0					
ANR	3531994	PostIncDecOperationExpression	l ++		3531852	1					
ANR	3531995	Identifier	l		3531852	0					
ANR	3531996	IncDec	++		3531852	1					
ANR	3531997	PrimaryExpression	0x48		3531852	1					
ANR	3531998	IfStatement	if ( op -> operands [ 1 ] . type & OT_CONSTANT )		3531852	4					
ANR	3531999	Condition	op -> operands [ 1 ] . type & OT_CONSTANT	2593:5:68135:68168	3531852	0	True				
ANR	3532000	BitAndExpression	op -> operands [ 1 ] . type & OT_CONSTANT		3531852	0		&			
ANR	3532001	MemberAccess	op -> operands [ 1 ] . type		3531852	0					
ANR	3532002	ArrayIndexing	op -> operands [ 1 ]		3531852	0					
ANR	3532003	PtrMemberAccess	op -> operands		3531852	0					
ANR	3532004	Identifier	op		3531852	0					
ANR	3532005	Identifier	operands		3531852	1					
ANR	3532006	PrimaryExpression	1		3531852	1					
ANR	3532007	Identifier	type		3531852	1					
ANR	3532008	Identifier	OT_CONSTANT		3531852	1					
ANR	3532009	CompoundStatement		24:41:542:542	3531852	1					
ANR	3532010	IfStatement	if ( op -> operands [ 0 ] . type & OT_BYTE )		3531852	0					
ANR	3532011	Condition	op -> operands [ 0 ] . type & OT_BYTE	2594:6:68179:68208	3531852	0	True				
ANR	3532012	BitAndExpression	op -> operands [ 0 ] . type & OT_BYTE		3531852	0		&			
ANR	3532013	MemberAccess	op -> operands [ 0 ] . type		3531852	0					
ANR	3532014	ArrayIndexing	op -> operands [ 0 ]		3531852	0					
ANR	3532015	PtrMemberAccess	op -> operands		3531852	0					
ANR	3532016	Identifier	op		3531852	0					
ANR	3532017	Identifier	operands		3531852	1					
ANR	3532018	PrimaryExpression	0		3531852	1					
ANR	3532019	Identifier	type		3531852	1					
ANR	3532020	Identifier	OT_BYTE		3531852	1					
ANR	3532021	CompoundStatement		25:38:582:582	3531852	1					
ANR	3532022	ExpressionStatement	data [ l ++ ] = 0xf6	2595:3:68216:68232	3531852	0	True				
ANR	3532023	AssignmentExpression	data [ l ++ ] = 0xf6		3531852	0		=			
ANR	3532024	ArrayIndexing	data [ l ++ ]		3531852	0					
ANR	3532025	Identifier	data		3531852	0					
ANR	3532026	PostIncDecOperationExpression	l ++		3531852	1					
ANR	3532027	Identifier	l		3531852	0					
ANR	3532028	IncDec	++		3531852	1					
ANR	3532029	PrimaryExpression	0xf6		3531852	1					
ANR	3532030	ExpressionStatement	data [ l ++ ] = op -> operands [ 0 ] . regs [ 0 ]	2596:3:68237:68272	3531852	1	True				
ANR	3532031	AssignmentExpression	data [ l ++ ] = op -> operands [ 0 ] . regs [ 0 ]		3531852	0		=			
ANR	3532032	ArrayIndexing	data [ l ++ ]		3531852	0					
ANR	3532033	Identifier	data		3531852	0					
ANR	3532034	PostIncDecOperationExpression	l ++		3531852	1					
ANR	3532035	Identifier	l		3531852	0					
ANR	3532036	IncDec	++		3531852	1					
ANR	3532037	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3531852	1					
ANR	3532038	MemberAccess	op -> operands [ 0 ] . regs		3531852	0					
ANR	3532039	ArrayIndexing	op -> operands [ 0 ]		3531852	0					
ANR	3532040	PtrMemberAccess	op -> operands		3531852	0					
ANR	3532041	Identifier	op		3531852	0					
ANR	3532042	Identifier	operands		3531852	1					
ANR	3532043	PrimaryExpression	0		3531852	1					
ANR	3532044	Identifier	regs		3531852	1					
ANR	3532045	PrimaryExpression	0		3531852	1					
ANR	3532046	ExpressionStatement	data [ l ++ ] = op -> operands [ 1 ] . immediate	2597:3:68277:68314	3531852	2	True				
ANR	3532047	AssignmentExpression	data [ l ++ ] = op -> operands [ 1 ] . immediate		3531852	0		=			
ANR	3532048	ArrayIndexing	data [ l ++ ]		3531852	0					
ANR	3532049	Identifier	data		3531852	0					
ANR	3532050	PostIncDecOperationExpression	l ++		3531852	1					
ANR	3532051	Identifier	l		3531852	0					
ANR	3532052	IncDec	++		3531852	1					
ANR	3532053	MemberAccess	op -> operands [ 1 ] . immediate		3531852	1					
ANR	3532054	ArrayIndexing	op -> operands [ 1 ]		3531852	0					
ANR	3532055	PtrMemberAccess	op -> operands		3531852	0					
ANR	3532056	Identifier	op		3531852	0					
ANR	3532057	Identifier	operands		3531852	1					
ANR	3532058	PrimaryExpression	1		3531852	1					
ANR	3532059	Identifier	immediate		3531852	1					
ANR	3532060	ReturnStatement	return l ;	2598:3:68319:68327	3531852	3	True				
ANR	3532061	Identifier	l		3531852	0					
ANR	3532062	ExpressionStatement	data [ l ++ ] = 0xf7	2600:2:68335:68351	3531852	1	True				
ANR	3532063	AssignmentExpression	data [ l ++ ] = 0xf7		3531852	0		=			
ANR	3532064	ArrayIndexing	data [ l ++ ]		3531852	0					
ANR	3532065	Identifier	data		3531852	0					
ANR	3532066	PostIncDecOperationExpression	l ++		3531852	1					
ANR	3532067	Identifier	l		3531852	0					
ANR	3532068	IncDec	++		3531852	1					
ANR	3532069	PrimaryExpression	0xf7		3531852	1					
ANR	3532070	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3531852	2					
ANR	3532071	Condition	op -> operands [ 0 ] . type & OT_MEMORY	2601:6:68359:68390	3531852	0	True				
ANR	3532072	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3531852	0		&			
ANR	3532073	MemberAccess	op -> operands [ 0 ] . type		3531852	0					
ANR	3532074	ArrayIndexing	op -> operands [ 0 ]		3531852	0					
ANR	3532075	PtrMemberAccess	op -> operands		3531852	0					
ANR	3532076	Identifier	op		3531852	0					
ANR	3532077	Identifier	operands		3531852	1					
ANR	3532078	PrimaryExpression	0		3531852	1					
ANR	3532079	Identifier	type		3531852	1					
ANR	3532080	Identifier	OT_MEMORY		3531852	1					
ANR	3532081	CompoundStatement		32:40:764:764	3531852	1					
ANR	3532082	ExpressionStatement	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . regs [ 0 ]	2602:3:68398:68440	3531852	0	True				
ANR	3532083	AssignmentExpression	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . regs [ 0 ]		3531852	0		=			
ANR	3532084	ArrayIndexing	data [ l ++ ]		3531852	0					
ANR	3532085	Identifier	data		3531852	0					
ANR	3532086	PostIncDecOperationExpression	l ++		3531852	1					
ANR	3532087	Identifier	l		3531852	0					
ANR	3532088	IncDec	++		3531852	1					
ANR	3532089	InclusiveOrExpression	0x00 | op -> operands [ 0 ] . regs [ 0 ]		3531852	1		|			
ANR	3532090	PrimaryExpression	0x00		3531852	0					
ANR	3532091	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3531852	1					
ANR	3532092	MemberAccess	op -> operands [ 0 ] . regs		3531852	0					
ANR	3532093	ArrayIndexing	op -> operands [ 0 ]		3531852	0					
ANR	3532094	PtrMemberAccess	op -> operands		3531852	0					
ANR	3532095	Identifier	op		3531852	0					
ANR	3532096	Identifier	operands		3531852	1					
ANR	3532097	PrimaryExpression	0		3531852	1					
ANR	3532098	Identifier	regs		3531852	1					
ANR	3532099	PrimaryExpression	0		3531852	1					
ANR	3532100	ElseStatement	else		3531852	0					
ANR	3532101	CompoundStatement		34:9:822:822	3531852	0					
ANR	3532102	ExpressionStatement	data [ l ++ ] = 0xc0 | op -> operands [ 0 ] . reg	2604:3:68456:68494	3531852	0	True				
ANR	3532103	AssignmentExpression	data [ l ++ ] = 0xc0 | op -> operands [ 0 ] . reg		3531852	0		=			
ANR	3532104	ArrayIndexing	data [ l ++ ]		3531852	0					
ANR	3532105	Identifier	data		3531852	0					
ANR	3532106	PostIncDecOperationExpression	l ++		3531852	1					
ANR	3532107	Identifier	l		3531852	0					
ANR	3532108	IncDec	++		3531852	1					
ANR	3532109	InclusiveOrExpression	0xc0 | op -> operands [ 0 ] . reg		3531852	1		|			
ANR	3532110	PrimaryExpression	0xc0		3531852	0					
ANR	3532111	MemberAccess	op -> operands [ 0 ] . reg		3531852	1					
ANR	3532112	ArrayIndexing	op -> operands [ 0 ]		3531852	0					
ANR	3532113	PtrMemberAccess	op -> operands		3531852	0					
ANR	3532114	Identifier	op		3531852	0					
ANR	3532115	Identifier	operands		3531852	1					
ANR	3532116	PrimaryExpression	0		3531852	1					
ANR	3532117	Identifier	reg		3531852	1					
ANR	3532118	ExpressionStatement	data [ l ++ ] = op -> operands [ 1 ] . immediate >> 0	2606:2:68502:68544	3531852	3	True				
ANR	3532119	AssignmentExpression	data [ l ++ ] = op -> operands [ 1 ] . immediate >> 0		3531852	0		=			
ANR	3532120	ArrayIndexing	data [ l ++ ]		3531852	0					
ANR	3532121	Identifier	data		3531852	0					
ANR	3532122	PostIncDecOperationExpression	l ++		3531852	1					
ANR	3532123	Identifier	l		3531852	0					
ANR	3532124	IncDec	++		3531852	1					
ANR	3532125	ShiftExpression	op -> operands [ 1 ] . immediate >> 0		3531852	1		>>			
ANR	3532126	MemberAccess	op -> operands [ 1 ] . immediate		3531852	0					
ANR	3532127	ArrayIndexing	op -> operands [ 1 ]		3531852	0					
ANR	3532128	PtrMemberAccess	op -> operands		3531852	0					
ANR	3532129	Identifier	op		3531852	0					
ANR	3532130	Identifier	operands		3531852	1					
ANR	3532131	PrimaryExpression	1		3531852	1					
ANR	3532132	Identifier	immediate		3531852	1					
ANR	3532133	PrimaryExpression	0		3531852	1					
ANR	3532134	ExpressionStatement	data [ l ++ ] = op -> operands [ 1 ] . immediate >> 8	2607:2:68548:68590	3531852	4	True				
ANR	3532135	AssignmentExpression	data [ l ++ ] = op -> operands [ 1 ] . immediate >> 8		3531852	0		=			
ANR	3532136	ArrayIndexing	data [ l ++ ]		3531852	0					
ANR	3532137	Identifier	data		3531852	0					
ANR	3532138	PostIncDecOperationExpression	l ++		3531852	1					
ANR	3532139	Identifier	l		3531852	0					
ANR	3532140	IncDec	++		3531852	1					
ANR	3532141	ShiftExpression	op -> operands [ 1 ] . immediate >> 8		3531852	1		>>			
ANR	3532142	MemberAccess	op -> operands [ 1 ] . immediate		3531852	0					
ANR	3532143	ArrayIndexing	op -> operands [ 1 ]		3531852	0					
ANR	3532144	PtrMemberAccess	op -> operands		3531852	0					
ANR	3532145	Identifier	op		3531852	0					
ANR	3532146	Identifier	operands		3531852	1					
ANR	3532147	PrimaryExpression	1		3531852	1					
ANR	3532148	Identifier	immediate		3531852	1					
ANR	3532149	PrimaryExpression	8		3531852	1					
ANR	3532150	ExpressionStatement	data [ l ++ ] = op -> operands [ 1 ] . immediate >> 16	2608:2:68594:68637	3531852	5	True				
ANR	3532151	AssignmentExpression	data [ l ++ ] = op -> operands [ 1 ] . immediate >> 16		3531852	0		=			
ANR	3532152	ArrayIndexing	data [ l ++ ]		3531852	0					
ANR	3532153	Identifier	data		3531852	0					
ANR	3532154	PostIncDecOperationExpression	l ++		3531852	1					
ANR	3532155	Identifier	l		3531852	0					
ANR	3532156	IncDec	++		3531852	1					
ANR	3532157	ShiftExpression	op -> operands [ 1 ] . immediate >> 16		3531852	1		>>			
ANR	3532158	MemberAccess	op -> operands [ 1 ] . immediate		3531852	0					
ANR	3532159	ArrayIndexing	op -> operands [ 1 ]		3531852	0					
ANR	3532160	PtrMemberAccess	op -> operands		3531852	0					
ANR	3532161	Identifier	op		3531852	0					
ANR	3532162	Identifier	operands		3531852	1					
ANR	3532163	PrimaryExpression	1		3531852	1					
ANR	3532164	Identifier	immediate		3531852	1					
ANR	3532165	PrimaryExpression	16		3531852	1					
ANR	3532166	ExpressionStatement	data [ l ++ ] = op -> operands [ 1 ] . immediate >> 24	2609:2:68641:68684	3531852	6	True				
ANR	3532167	AssignmentExpression	data [ l ++ ] = op -> operands [ 1 ] . immediate >> 24		3531852	0		=			
ANR	3532168	ArrayIndexing	data [ l ++ ]		3531852	0					
ANR	3532169	Identifier	data		3531852	0					
ANR	3532170	PostIncDecOperationExpression	l ++		3531852	1					
ANR	3532171	Identifier	l		3531852	0					
ANR	3532172	IncDec	++		3531852	1					
ANR	3532173	ShiftExpression	op -> operands [ 1 ] . immediate >> 24		3531852	1		>>			
ANR	3532174	MemberAccess	op -> operands [ 1 ] . immediate		3531852	0					
ANR	3532175	ArrayIndexing	op -> operands [ 1 ]		3531852	0					
ANR	3532176	PtrMemberAccess	op -> operands		3531852	0					
ANR	3532177	Identifier	op		3531852	0					
ANR	3532178	Identifier	operands		3531852	1					
ANR	3532179	PrimaryExpression	1		3531852	1					
ANR	3532180	Identifier	immediate		3531852	1					
ANR	3532181	PrimaryExpression	24		3531852	1					
ANR	3532182	ReturnStatement	return l ;	2610:2:68688:68696	3531852	7	True				
ANR	3532183	Identifier	l		3531852	0					
ANR	3532184	IfStatement	if ( op -> operands [ 0 ] . type & OT_BYTE || op -> operands [ 1 ] . type & OT_BYTE )		3531852	5					
ANR	3532185	Condition	op -> operands [ 0 ] . type & OT_BYTE || op -> operands [ 1 ] . type & OT_BYTE	2612:5:68706:68771	3531852	0	True				
ANR	3532186	OrExpression	op -> operands [ 0 ] . type & OT_BYTE || op -> operands [ 1 ] . type & OT_BYTE		3531852	0		||			
ANR	3532187	BitAndExpression	op -> operands [ 0 ] . type & OT_BYTE		3531852	0		&			
ANR	3532188	MemberAccess	op -> operands [ 0 ] . type		3531852	0					
ANR	3532189	ArrayIndexing	op -> operands [ 0 ]		3531852	0					
ANR	3532190	PtrMemberAccess	op -> operands		3531852	0					
ANR	3532191	Identifier	op		3531852	0					
ANR	3532192	Identifier	operands		3531852	1					
ANR	3532193	PrimaryExpression	0		3531852	1					
ANR	3532194	Identifier	type		3531852	1					
ANR	3532195	Identifier	OT_BYTE		3531852	1					
ANR	3532196	BitAndExpression	op -> operands [ 1 ] . type & OT_BYTE		3531852	1		&			
ANR	3532197	MemberAccess	op -> operands [ 1 ] . type		3531852	0					
ANR	3532198	ArrayIndexing	op -> operands [ 1 ]		3531852	0					
ANR	3532199	PtrMemberAccess	op -> operands		3531852	0					
ANR	3532200	Identifier	op		3531852	0					
ANR	3532201	Identifier	operands		3531852	1					
ANR	3532202	PrimaryExpression	1		3531852	1					
ANR	3532203	Identifier	type		3531852	1					
ANR	3532204	Identifier	OT_BYTE		3531852	1					
ANR	3532205	CompoundStatement		44:34:1145:1145	3531852	1					
ANR	3532206	ExpressionStatement	data [ l ++ ] = 0x84	2614:2:68778:68794	3531852	0	True				
ANR	3532207	AssignmentExpression	data [ l ++ ] = 0x84		3531852	0		=			
ANR	3532208	ArrayIndexing	data [ l ++ ]		3531852	0					
ANR	3532209	Identifier	data		3531852	0					
ANR	3532210	PostIncDecOperationExpression	l ++		3531852	1					
ANR	3532211	Identifier	l		3531852	0					
ANR	3532212	IncDec	++		3531852	1					
ANR	3532213	PrimaryExpression	0x84		3531852	1					
ANR	3532214	ElseStatement	else		3531852	0					
ANR	3532215	CompoundStatement		46:8:1175:1175	3531852	0					
ANR	3532216	ExpressionStatement	data [ l ++ ] = 0x85	2616:2:68808:68824	3531852	0	True				
ANR	3532217	AssignmentExpression	data [ l ++ ] = 0x85		3531852	0		=			
ANR	3532218	ArrayIndexing	data [ l ++ ]		3531852	0					
ANR	3532219	Identifier	data		3531852	0					
ANR	3532220	PostIncDecOperationExpression	l ++		3531852	1					
ANR	3532221	Identifier	l		3531852	0					
ANR	3532222	IncDec	++		3531852	1					
ANR	3532223	PrimaryExpression	0x85		3531852	1					
ANR	3532224	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3531852	6					
ANR	3532225	Condition	op -> operands [ 0 ] . type & OT_MEMORY	2618:5:68834:68865	3531852	0	True				
ANR	3532226	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3531852	0		&			
ANR	3532227	MemberAccess	op -> operands [ 0 ] . type		3531852	0					
ANR	3532228	ArrayIndexing	op -> operands [ 0 ]		3531852	0					
ANR	3532229	PtrMemberAccess	op -> operands		3531852	0					
ANR	3532230	Identifier	op		3531852	0					
ANR	3532231	Identifier	operands		3531852	1					
ANR	3532232	PrimaryExpression	0		3531852	1					
ANR	3532233	Identifier	type		3531852	1					
ANR	3532234	Identifier	OT_MEMORY		3531852	1					
ANR	3532235	CompoundStatement		49:39:1239:1239	3531852	1					
ANR	3532236	ExpressionStatement	data [ l ++ ] = 0x00 | op -> operands [ 1 ] . reg << 3 | op -> operands [ 0 ] . regs [ 0 ]	2619:2:68872:68941	3531852	0	True				
ANR	3532237	AssignmentExpression	data [ l ++ ] = 0x00 | op -> operands [ 1 ] . reg << 3 | op -> operands [ 0 ] . regs [ 0 ]		3531852	0		=			
ANR	3532238	ArrayIndexing	data [ l ++ ]		3531852	0					
ANR	3532239	Identifier	data		3531852	0					
ANR	3532240	PostIncDecOperationExpression	l ++		3531852	1					
ANR	3532241	Identifier	l		3531852	0					
ANR	3532242	IncDec	++		3531852	1					
ANR	3532243	InclusiveOrExpression	0x00 | op -> operands [ 1 ] . reg << 3 | op -> operands [ 0 ] . regs [ 0 ]		3531852	1		|			
ANR	3532244	PrimaryExpression	0x00		3531852	0					
ANR	3532245	InclusiveOrExpression	op -> operands [ 1 ] . reg << 3 | op -> operands [ 0 ] . regs [ 0 ]		3531852	1		|			
ANR	3532246	ShiftExpression	op -> operands [ 1 ] . reg << 3		3531852	0		<<			
ANR	3532247	MemberAccess	op -> operands [ 1 ] . reg		3531852	0					
ANR	3532248	ArrayIndexing	op -> operands [ 1 ]		3531852	0					
ANR	3532249	PtrMemberAccess	op -> operands		3531852	0					
ANR	3532250	Identifier	op		3531852	0					
ANR	3532251	Identifier	operands		3531852	1					
ANR	3532252	PrimaryExpression	1		3531852	1					
ANR	3532253	Identifier	reg		3531852	1					
ANR	3532254	PrimaryExpression	3		3531852	1					
ANR	3532255	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3531852	1					
ANR	3532256	MemberAccess	op -> operands [ 0 ] . regs		3531852	0					
ANR	3532257	ArrayIndexing	op -> operands [ 0 ]		3531852	0					
ANR	3532258	PtrMemberAccess	op -> operands		3531852	0					
ANR	3532259	Identifier	op		3531852	0					
ANR	3532260	Identifier	operands		3531852	1					
ANR	3532261	PrimaryExpression	0		3531852	1					
ANR	3532262	Identifier	regs		3531852	1					
ANR	3532263	PrimaryExpression	0		3531852	1					
ANR	3532264	ElseStatement	else		3531852	0					
ANR	3532265	CompoundStatement		51:8:1322:1322	3531852	0					
ANR	3532266	IfStatement	if ( op -> operands [ 1 ] . type & OT_MEMORY )		3531852	0					
ANR	3532267	Condition	op -> operands [ 1 ] . type & OT_MEMORY	2621:6:68959:68990	3531852	0	True				
ANR	3532268	BitAndExpression	op -> operands [ 1 ] . type & OT_MEMORY		3531852	0		&			
ANR	3532269	MemberAccess	op -> operands [ 1 ] . type		3531852	0					
ANR	3532270	ArrayIndexing	op -> operands [ 1 ]		3531852	0					
ANR	3532271	PtrMemberAccess	op -> operands		3531852	0					
ANR	3532272	Identifier	op		3531852	0					
ANR	3532273	Identifier	operands		3531852	1					
ANR	3532274	PrimaryExpression	1		3531852	1					
ANR	3532275	Identifier	type		3531852	1					
ANR	3532276	Identifier	OT_MEMORY		3531852	1					
ANR	3532277	CompoundStatement		52:40:1364:1364	3531852	1					
ANR	3532278	ExpressionStatement	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]	2622:3:68998:69067	3531852	0	True				
ANR	3532279	AssignmentExpression	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		3531852	0		=			
ANR	3532280	ArrayIndexing	data [ l ++ ]		3531852	0					
ANR	3532281	Identifier	data		3531852	0					
ANR	3532282	PostIncDecOperationExpression	l ++		3531852	1					
ANR	3532283	Identifier	l		3531852	0					
ANR	3532284	IncDec	++		3531852	1					
ANR	3532285	InclusiveOrExpression	0x00 | op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		3531852	1		|			
ANR	3532286	PrimaryExpression	0x00		3531852	0					
ANR	3532287	InclusiveOrExpression	op -> operands [ 0 ] . reg << 3 | op -> operands [ 1 ] . regs [ 0 ]		3531852	1		|			
ANR	3532288	ShiftExpression	op -> operands [ 0 ] . reg << 3		3531852	0		<<			
ANR	3532289	MemberAccess	op -> operands [ 0 ] . reg		3531852	0					
ANR	3532290	ArrayIndexing	op -> operands [ 0 ]		3531852	0					
ANR	3532291	PtrMemberAccess	op -> operands		3531852	0					
ANR	3532292	Identifier	op		3531852	0					
ANR	3532293	Identifier	operands		3531852	1					
ANR	3532294	PrimaryExpression	0		3531852	1					
ANR	3532295	Identifier	reg		3531852	1					
ANR	3532296	PrimaryExpression	3		3531852	1					
ANR	3532297	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3531852	1					
ANR	3532298	MemberAccess	op -> operands [ 1 ] . regs		3531852	0					
ANR	3532299	ArrayIndexing	op -> operands [ 1 ]		3531852	0					
ANR	3532300	PtrMemberAccess	op -> operands		3531852	0					
ANR	3532301	Identifier	op		3531852	0					
ANR	3532302	Identifier	operands		3531852	1					
ANR	3532303	PrimaryExpression	1		3531852	1					
ANR	3532304	Identifier	regs		3531852	1					
ANR	3532305	PrimaryExpression	0		3531852	1					
ANR	3532306	ElseStatement	else		3531852	0					
ANR	3532307	CompoundStatement		54:9:1449:1449	3531852	0					
ANR	3532308	ExpressionStatement	data [ l ++ ] = 0xc0 | op -> operands [ 1 ] . reg << 3 | op -> operands [ 0 ] . reg	2624:3:69083:69148	3531852	0	True				
ANR	3532309	AssignmentExpression	data [ l ++ ] = 0xc0 | op -> operands [ 1 ] . reg << 3 | op -> operands [ 0 ] . reg		3531852	0		=			
ANR	3532310	ArrayIndexing	data [ l ++ ]		3531852	0					
ANR	3532311	Identifier	data		3531852	0					
ANR	3532312	PostIncDecOperationExpression	l ++		3531852	1					
ANR	3532313	Identifier	l		3531852	0					
ANR	3532314	IncDec	++		3531852	1					
ANR	3532315	InclusiveOrExpression	0xc0 | op -> operands [ 1 ] . reg << 3 | op -> operands [ 0 ] . reg		3531852	1		|			
ANR	3532316	PrimaryExpression	0xc0		3531852	0					
ANR	3532317	InclusiveOrExpression	op -> operands [ 1 ] . reg << 3 | op -> operands [ 0 ] . reg		3531852	1		|			
ANR	3532318	ShiftExpression	op -> operands [ 1 ] . reg << 3		3531852	0		<<			
ANR	3532319	MemberAccess	op -> operands [ 1 ] . reg		3531852	0					
ANR	3532320	ArrayIndexing	op -> operands [ 1 ]		3531852	0					
ANR	3532321	PtrMemberAccess	op -> operands		3531852	0					
ANR	3532322	Identifier	op		3531852	0					
ANR	3532323	Identifier	operands		3531852	1					
ANR	3532324	PrimaryExpression	1		3531852	1					
ANR	3532325	Identifier	reg		3531852	1					
ANR	3532326	PrimaryExpression	3		3531852	1					
ANR	3532327	MemberAccess	op -> operands [ 0 ] . reg		3531852	1					
ANR	3532328	ArrayIndexing	op -> operands [ 0 ]		3531852	0					
ANR	3532329	PtrMemberAccess	op -> operands		3531852	0					
ANR	3532330	Identifier	op		3531852	0					
ANR	3532331	Identifier	operands		3531852	1					
ANR	3532332	PrimaryExpression	0		3531852	1					
ANR	3532333	Identifier	reg		3531852	1					
ANR	3532334	ReturnStatement	return l ;	2627:1:69158:69166	3531852	7	True				
ANR	3532335	Identifier	l		3531852	0					
ANR	3532336	ReturnType	static int		3531852	1					
ANR	3532337	Identifier	optest		3531852	2					
ANR	3532338	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3531852	3					
ANR	3532339	Parameter	RAsm * a	2570:18:67590:67596	3531852	0	True				
ANR	3532340	ParameterType	RAsm *		3531852	0					
ANR	3532341	Identifier	a		3531852	1					
ANR	3532342	Parameter	ut8 * data	2570:27:67599:67607	3531852	1	True				
ANR	3532343	ParameterType	ut8 *		3531852	0					
ANR	3532344	Identifier	data		3531852	1					
ANR	3532345	Parameter	const Opcode * op	2570:38:67610:67625	3531852	2	True				
ANR	3532346	ParameterType	const Opcode *		3531852	0					
ANR	3532347	Identifier	op		3531852	1					
ANR	3532348	CFGEntryNode	ENTRY		3531852		True				
ANR	3532349	CFGExitNode	EXIT		3531852		True				
ANR	3532350	Symbol	OT_QWORD		3531852						
ANR	3532351	Symbol	data		3531852						
ANR	3532352	Symbol	* op		3531852						
ANR	3532353	Symbol	op -> operands [ 1 ] . immediate		3531852						
ANR	3532354	Symbol	op -> operands [ 1 ] . extended		3531852						
ANR	3532355	Symbol	* * op		3531852						
ANR	3532356	Symbol	op -> operands [ 0 ] . extended		3531852						
ANR	3532357	Symbol	* op -> operands [ 1 ] . regs		3531852						
ANR	3532358	Symbol	* op -> operands		3531852						
ANR	3532359	Symbol	op -> operands [ 1 ] . regs		3531852						
ANR	3532360	Symbol	op -> operands [ 0 ] . type		3531852						
ANR	3532361	Symbol	op -> operands [ 0 ] . reg		3531852						
ANR	3532362	Symbol	OT_MEMORY		3531852						
ANR	3532363	Symbol	a -> bits		3531852						
ANR	3532364	Symbol	OT_BYTE		3531852						
ANR	3532365	Symbol	a		3531852						
ANR	3532366	Symbol	op		3531852						
ANR	3532367	Symbol	OT_CONSTANT		3531852						
ANR	3532368	Symbol	op -> operands [ 1 ] . reg		3531852						
ANR	3532369	Symbol	* a		3531852						
ANR	3532370	Symbol	* * op -> operands		3531852						
ANR	3532371	Symbol	l		3531852						
ANR	3532372	Symbol	op -> operands [ 1 ] . type		3531852						
ANR	3532373	Symbol	* op -> operands [ 0 ] . regs		3531852						
ANR	3532374	Symbol	* * * op		3531852						
ANR	3532375	Symbol	op -> operands		3531852						
ANR	3532376	Symbol	* data		3531852						
ANR	3532377	Symbol	op -> operands [ 0 ] . regs		3531852						
ANR	3532378	Function	opxchg	2630:0:69171:70604							
ANR	3532379	FunctionDef	"opxchg (RAsm * a , ut8 * data , const Opcode * op)"		3532378	0					
ANR	3532380	CompoundStatement		2630:56:69227:70604	3532378	0					
ANR	3532381	ExpressionStatement	is_valid_registers ( op )	2631:1:69230:69253	3532378	0	True				
ANR	3532382	CallExpression	is_valid_registers ( op )		3532378	0					
ANR	3532383	Callee	is_valid_registers		3532378	0					
ANR	3532384	Identifier	is_valid_registers		3532378	0					
ANR	3532385	ArgumentList	op		3532378	1					
ANR	3532386	Argument	op		3532378	0					
ANR	3532387	Identifier	op		3532378	0					
ANR	3532388	IdentifierDeclStatement	int l = 0 ;	2632:1:69256:69265	3532378	1	True				
ANR	3532389	IdentifierDecl	l = 0		3532378	0					
ANR	3532390	IdentifierDeclType	int		3532378	0					
ANR	3532391	Identifier	l		3532378	1					
ANR	3532392	AssignmentExpression	l = 0		3532378	2		=			
ANR	3532393	Identifier	l		3532378	0					
ANR	3532394	PrimaryExpression	0		3532378	1					
ANR	3532395	IdentifierDeclStatement	int mod_byte = 0 ;	2633:1:69268:69284	3532378	2	True				
ANR	3532396	IdentifierDecl	mod_byte = 0		3532378	0					
ANR	3532397	IdentifierDeclType	int		3532378	0					
ANR	3532398	Identifier	mod_byte		3532378	1					
ANR	3532399	AssignmentExpression	mod_byte = 0		3532378	2		=			
ANR	3532400	Identifier	mod_byte		3532378	0					
ANR	3532401	PrimaryExpression	0		3532378	1					
ANR	3532402	IdentifierDeclStatement	int reg = 0 ;	2634:1:69287:69298	3532378	3	True				
ANR	3532403	IdentifierDecl	reg = 0		3532378	0					
ANR	3532404	IdentifierDeclType	int		3532378	0					
ANR	3532405	Identifier	reg		3532378	1					
ANR	3532406	AssignmentExpression	reg = 0		3532378	2		=			
ANR	3532407	Identifier	reg		3532378	0					
ANR	3532408	PrimaryExpression	0		3532378	1					
ANR	3532409	IdentifierDeclStatement	int rm = 0 ;	2635:1:69301:69311	3532378	4	True				
ANR	3532410	IdentifierDecl	rm = 0		3532378	0					
ANR	3532411	IdentifierDeclType	int		3532378	0					
ANR	3532412	Identifier	rm		3532378	1					
ANR	3532413	AssignmentExpression	rm = 0		3532378	2		=			
ANR	3532414	Identifier	rm		3532378	0					
ANR	3532415	PrimaryExpression	0		3532378	1					
ANR	3532416	IdentifierDeclStatement	st32 offset = 0 ;	2636:1:69314:69329	3532378	5	True				
ANR	3532417	IdentifierDecl	offset = 0		3532378	0					
ANR	3532418	IdentifierDeclType	st32		3532378	0					
ANR	3532419	Identifier	offset		3532378	1					
ANR	3532420	AssignmentExpression	offset = 0		3532378	2		=			
ANR	3532421	Identifier	offset		3532378	0					
ANR	3532422	PrimaryExpression	0		3532378	1					
ANR	3532423	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY || op -> operands [ 1 ] . type & OT_MEMORY )		3532378	6					
ANR	3532424	Condition	op -> operands [ 0 ] . type & OT_MEMORY || op -> operands [ 1 ] . type & OT_MEMORY	2638:5:69337:69404	3532378	0	True				
ANR	3532425	OrExpression	op -> operands [ 0 ] . type & OT_MEMORY || op -> operands [ 1 ] . type & OT_MEMORY		3532378	0		||			
ANR	3532426	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3532378	0		&			
ANR	3532427	MemberAccess	op -> operands [ 0 ] . type		3532378	0					
ANR	3532428	ArrayIndexing	op -> operands [ 0 ]		3532378	0					
ANR	3532429	PtrMemberAccess	op -> operands		3532378	0					
ANR	3532430	Identifier	op		3532378	0					
ANR	3532431	Identifier	operands		3532378	1					
ANR	3532432	PrimaryExpression	0		3532378	1					
ANR	3532433	Identifier	type		3532378	1					
ANR	3532434	Identifier	OT_MEMORY		3532378	1					
ANR	3532435	BitAndExpression	op -> operands [ 1 ] . type & OT_MEMORY		3532378	1		&			
ANR	3532436	MemberAccess	op -> operands [ 1 ] . type		3532378	0					
ANR	3532437	ArrayIndexing	op -> operands [ 1 ]		3532378	0					
ANR	3532438	PtrMemberAccess	op -> operands		3532378	0					
ANR	3532439	Identifier	op		3532378	0					
ANR	3532440	Identifier	operands		3532378	1					
ANR	3532441	PrimaryExpression	1		3532378	1					
ANR	3532442	Identifier	type		3532378	1					
ANR	3532443	Identifier	OT_MEMORY		3532378	1					
ANR	3532444	CompoundStatement		9:75:179:179	3532378	1					
ANR	3532445	ExpressionStatement	data [ l ++ ] = 0x87	2639:2:69411:69427	3532378	0	True				
ANR	3532446	AssignmentExpression	data [ l ++ ] = 0x87		3532378	0		=			
ANR	3532447	ArrayIndexing	data [ l ++ ]		3532378	0					
ANR	3532448	Identifier	data		3532378	0					
ANR	3532449	PostIncDecOperationExpression	l ++		3532378	1					
ANR	3532450	Identifier	l		3532378	0					
ANR	3532451	IncDec	++		3532378	1					
ANR	3532452	PrimaryExpression	0x87		3532378	1					
ANR	3532453	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3532378	1					
ANR	3532454	Condition	op -> operands [ 0 ] . type & OT_MEMORY	2640:6:69435:69466	3532378	0	True				
ANR	3532455	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3532378	0		&			
ANR	3532456	MemberAccess	op -> operands [ 0 ] . type		3532378	0					
ANR	3532457	ArrayIndexing	op -> operands [ 0 ]		3532378	0					
ANR	3532458	PtrMemberAccess	op -> operands		3532378	0					
ANR	3532459	Identifier	op		3532378	0					
ANR	3532460	Identifier	operands		3532378	1					
ANR	3532461	PrimaryExpression	0		3532378	1					
ANR	3532462	Identifier	type		3532378	1					
ANR	3532463	Identifier	OT_MEMORY		3532378	1					
ANR	3532464	CompoundStatement		11:40:241:241	3532378	1					
ANR	3532465	ExpressionStatement	rm = op -> operands [ 0 ] . regs [ 0 ]	2641:3:69474:69502	3532378	0	True				
ANR	3532466	AssignmentExpression	rm = op -> operands [ 0 ] . regs [ 0 ]		3532378	0		=			
ANR	3532467	Identifier	rm		3532378	0					
ANR	3532468	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3532378	1					
ANR	3532469	MemberAccess	op -> operands [ 0 ] . regs		3532378	0					
ANR	3532470	ArrayIndexing	op -> operands [ 0 ]		3532378	0					
ANR	3532471	PtrMemberAccess	op -> operands		3532378	0					
ANR	3532472	Identifier	op		3532378	0					
ANR	3532473	Identifier	operands		3532378	1					
ANR	3532474	PrimaryExpression	0		3532378	1					
ANR	3532475	Identifier	regs		3532378	1					
ANR	3532476	PrimaryExpression	0		3532378	1					
ANR	3532477	ExpressionStatement	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign	2642:3:69507:69568	3532378	1	True				
ANR	3532478	AssignmentExpression	offset = op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		3532378	0		=			
ANR	3532479	Identifier	offset		3532378	0					
ANR	3532480	MultiplicativeExpression	op -> operands [ 0 ] . offset * op -> operands [ 0 ] . offset_sign		3532378	1		*			
ANR	3532481	MemberAccess	op -> operands [ 0 ] . offset		3532378	0					
ANR	3532482	ArrayIndexing	op -> operands [ 0 ]		3532378	0					
ANR	3532483	PtrMemberAccess	op -> operands		3532378	0					
ANR	3532484	Identifier	op		3532378	0					
ANR	3532485	Identifier	operands		3532378	1					
ANR	3532486	PrimaryExpression	0		3532378	1					
ANR	3532487	Identifier	offset		3532378	1					
ANR	3532488	MemberAccess	op -> operands [ 0 ] . offset_sign		3532378	1					
ANR	3532489	ArrayIndexing	op -> operands [ 0 ]		3532378	0					
ANR	3532490	PtrMemberAccess	op -> operands		3532378	0					
ANR	3532491	Identifier	op		3532378	0					
ANR	3532492	Identifier	operands		3532378	1					
ANR	3532493	PrimaryExpression	0		3532378	1					
ANR	3532494	Identifier	offset_sign		3532378	1					
ANR	3532495	ExpressionStatement	reg = op -> operands [ 1 ] . reg	2643:3:69573:69598	3532378	2	True				
ANR	3532496	AssignmentExpression	reg = op -> operands [ 1 ] . reg		3532378	0		=			
ANR	3532497	Identifier	reg		3532378	0					
ANR	3532498	MemberAccess	op -> operands [ 1 ] . reg		3532378	1					
ANR	3532499	ArrayIndexing	op -> operands [ 1 ]		3532378	0					
ANR	3532500	PtrMemberAccess	op -> operands		3532378	0					
ANR	3532501	Identifier	op		3532378	0					
ANR	3532502	Identifier	operands		3532378	1					
ANR	3532503	PrimaryExpression	1		3532378	1					
ANR	3532504	Identifier	reg		3532378	1					
ANR	3532505	ElseStatement	else		3532378	0					
ANR	3532506	IfStatement	if ( op -> operands [ 1 ] . type & OT_MEMORY )		3532378	0					
ANR	3532507	Condition	op -> operands [ 1 ] . type & OT_MEMORY	2644:13:69613:69644	3532378	0	True				
ANR	3532508	BitAndExpression	op -> operands [ 1 ] . type & OT_MEMORY		3532378	0		&			
ANR	3532509	MemberAccess	op -> operands [ 1 ] . type		3532378	0					
ANR	3532510	ArrayIndexing	op -> operands [ 1 ]		3532378	0					
ANR	3532511	PtrMemberAccess	op -> operands		3532378	0					
ANR	3532512	Identifier	op		3532378	0					
ANR	3532513	Identifier	operands		3532378	1					
ANR	3532514	PrimaryExpression	1		3532378	1					
ANR	3532515	Identifier	type		3532378	1					
ANR	3532516	Identifier	OT_MEMORY		3532378	1					
ANR	3532517	CompoundStatement		15:47:419:419	3532378	1					
ANR	3532518	ExpressionStatement	rm = op -> operands [ 1 ] . regs [ 0 ]	2645:3:69652:69680	3532378	0	True				
ANR	3532519	AssignmentExpression	rm = op -> operands [ 1 ] . regs [ 0 ]		3532378	0		=			
ANR	3532520	Identifier	rm		3532378	0					
ANR	3532521	ArrayIndexing	op -> operands [ 1 ] . regs [ 0 ]		3532378	1					
ANR	3532522	MemberAccess	op -> operands [ 1 ] . regs		3532378	0					
ANR	3532523	ArrayIndexing	op -> operands [ 1 ]		3532378	0					
ANR	3532524	PtrMemberAccess	op -> operands		3532378	0					
ANR	3532525	Identifier	op		3532378	0					
ANR	3532526	Identifier	operands		3532378	1					
ANR	3532527	PrimaryExpression	1		3532378	1					
ANR	3532528	Identifier	regs		3532378	1					
ANR	3532529	PrimaryExpression	0		3532378	1					
ANR	3532530	ExpressionStatement	offset = op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign	2646:3:69685:69746	3532378	1	True				
ANR	3532531	AssignmentExpression	offset = op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign		3532378	0		=			
ANR	3532532	Identifier	offset		3532378	0					
ANR	3532533	MultiplicativeExpression	op -> operands [ 1 ] . offset * op -> operands [ 1 ] . offset_sign		3532378	1		*			
ANR	3532534	MemberAccess	op -> operands [ 1 ] . offset		3532378	0					
ANR	3532535	ArrayIndexing	op -> operands [ 1 ]		3532378	0					
ANR	3532536	PtrMemberAccess	op -> operands		3532378	0					
ANR	3532537	Identifier	op		3532378	0					
ANR	3532538	Identifier	operands		3532378	1					
ANR	3532539	PrimaryExpression	1		3532378	1					
ANR	3532540	Identifier	offset		3532378	1					
ANR	3532541	MemberAccess	op -> operands [ 1 ] . offset_sign		3532378	1					
ANR	3532542	ArrayIndexing	op -> operands [ 1 ]		3532378	0					
ANR	3532543	PtrMemberAccess	op -> operands		3532378	0					
ANR	3532544	Identifier	op		3532378	0					
ANR	3532545	Identifier	operands		3532378	1					
ANR	3532546	PrimaryExpression	1		3532378	1					
ANR	3532547	Identifier	offset_sign		3532378	1					
ANR	3532548	ExpressionStatement	reg = op -> operands [ 0 ] . reg	2647:3:69751:69776	3532378	2	True				
ANR	3532549	AssignmentExpression	reg = op -> operands [ 0 ] . reg		3532378	0		=			
ANR	3532550	Identifier	reg		3532378	0					
ANR	3532551	MemberAccess	op -> operands [ 0 ] . reg		3532378	1					
ANR	3532552	ArrayIndexing	op -> operands [ 0 ]		3532378	0					
ANR	3532553	PtrMemberAccess	op -> operands		3532378	0					
ANR	3532554	Identifier	op		3532378	0					
ANR	3532555	Identifier	operands		3532378	1					
ANR	3532556	PrimaryExpression	0		3532378	1					
ANR	3532557	Identifier	reg		3532378	1					
ANR	3532558	IfStatement	if ( offset )		3532378	2					
ANR	3532559	Condition	offset	2649:6:69788:69793	3532378	0	True				
ANR	3532560	Identifier	offset		3532378	0					
ANR	3532561	CompoundStatement		20:14:568:568	3532378	1					
ANR	3532562	ExpressionStatement	mod_byte = 1	2650:3:69801:69813	3532378	0	True				
ANR	3532563	AssignmentExpression	mod_byte = 1		3532378	0		=			
ANR	3532564	Identifier	mod_byte		3532378	0					
ANR	3532565	PrimaryExpression	1		3532378	1					
ANR	3532566	IfStatement	if ( offset < ST8_MIN || offset > ST8_MAX )		3532378	1					
ANR	3532567	Condition	offset < ST8_MIN || offset > ST8_MAX	2651:7:69822:69857	3532378	0	True				
ANR	3532568	OrExpression	offset < ST8_MIN || offset > ST8_MAX		3532378	0		||			
ANR	3532569	RelationalExpression	offset < ST8_MIN		3532378	0		<			
ANR	3532570	Identifier	offset		3532378	0					
ANR	3532571	Identifier	ST8_MIN		3532378	1					
ANR	3532572	RelationalExpression	offset > ST8_MAX		3532378	1		>			
ANR	3532573	Identifier	offset		3532378	0					
ANR	3532574	Identifier	ST8_MAX		3532378	1					
ANR	3532575	CompoundStatement		22:45:632:632	3532378	1					
ANR	3532576	ExpressionStatement	mod_byte = 2	2652:4:69866:69878	3532378	0	True				
ANR	3532577	AssignmentExpression	mod_byte = 2		3532378	0		=			
ANR	3532578	Identifier	mod_byte		3532378	0					
ANR	3532579	PrimaryExpression	2		3532378	1					
ANR	3532580	ElseStatement	else		3532378	0					
ANR	3532581	CompoundStatement		26:8:669:669	3532378	0					
ANR	3532582	IfStatement	if ( op -> operands [ 0 ] . reg == X86R_EAX && op -> operands [ 1 ] . type & OT_GPREG )		3532378	0					
ANR	3532583	Condition	op -> operands [ 0 ] . reg == X86R_EAX && op -> operands [ 1 ] . type & OT_GPREG	2656:6:69905:69973	3532378	0	True				
ANR	3532584	AndExpression	op -> operands [ 0 ] . reg == X86R_EAX && op -> operands [ 1 ] . type & OT_GPREG		3532378	0		&&			
ANR	3532585	EqualityExpression	op -> operands [ 0 ] . reg == X86R_EAX		3532378	0		==			
ANR	3532586	MemberAccess	op -> operands [ 0 ] . reg		3532378	0					
ANR	3532587	ArrayIndexing	op -> operands [ 0 ]		3532378	0					
ANR	3532588	PtrMemberAccess	op -> operands		3532378	0					
ANR	3532589	Identifier	op		3532378	0					
ANR	3532590	Identifier	operands		3532378	1					
ANR	3532591	PrimaryExpression	0		3532378	1					
ANR	3532592	Identifier	reg		3532378	1					
ANR	3532593	Identifier	X86R_EAX		3532378	1					
ANR	3532594	BitAndExpression	op -> operands [ 1 ] . type & OT_GPREG		3532378	1		&			
ANR	3532595	MemberAccess	op -> operands [ 1 ] . type		3532378	0					
ANR	3532596	ArrayIndexing	op -> operands [ 1 ]		3532378	0					
ANR	3532597	PtrMemberAccess	op -> operands		3532378	0					
ANR	3532598	Identifier	op		3532378	0					
ANR	3532599	Identifier	operands		3532378	1					
ANR	3532600	PrimaryExpression	1		3532378	1					
ANR	3532601	Identifier	type		3532378	1					
ANR	3532602	Identifier	OT_GPREG		3532378	1					
ANR	3532603	CompoundStatement		28:36:748:748	3532378	1					
ANR	3532604	ExpressionStatement	data [ l ++ ] = 0x90 + op -> operands [ 1 ] . reg	2658:3:69981:70019	3532378	0	True				
ANR	3532605	AssignmentExpression	data [ l ++ ] = 0x90 + op -> operands [ 1 ] . reg		3532378	0		=			
ANR	3532606	ArrayIndexing	data [ l ++ ]		3532378	0					
ANR	3532607	Identifier	data		3532378	0					
ANR	3532608	PostIncDecOperationExpression	l ++		3532378	1					
ANR	3532609	Identifier	l		3532378	0					
ANR	3532610	IncDec	++		3532378	1					
ANR	3532611	AdditiveExpression	0x90 + op -> operands [ 1 ] . reg		3532378	1		+			
ANR	3532612	PrimaryExpression	0x90		3532378	0					
ANR	3532613	MemberAccess	op -> operands [ 1 ] . reg		3532378	1					
ANR	3532614	ArrayIndexing	op -> operands [ 1 ]		3532378	0					
ANR	3532615	PtrMemberAccess	op -> operands		3532378	0					
ANR	3532616	Identifier	op		3532378	0					
ANR	3532617	Identifier	operands		3532378	1					
ANR	3532618	PrimaryExpression	1		3532378	1					
ANR	3532619	Identifier	reg		3532378	1					
ANR	3532620	ReturnStatement	return l ;	2659:3:70024:70032	3532378	1	True				
ANR	3532621	Identifier	l		3532378	0					
ANR	3532622	ElseStatement	else		3532378	0					
ANR	3532623	IfStatement	if ( op -> operands [ 1 ] . reg == X86R_EAX && op -> operands [ 0 ] . type & OT_GPREG )		3532378	0					
ANR	3532624	Condition	op -> operands [ 1 ] . reg == X86R_EAX && op -> operands [ 0 ] . type & OT_GPREG	2660:13:70047:70119	3532378	0	True				
ANR	3532625	AndExpression	op -> operands [ 1 ] . reg == X86R_EAX && op -> operands [ 0 ] . type & OT_GPREG		3532378	0		&&			
ANR	3532626	EqualityExpression	op -> operands [ 1 ] . reg == X86R_EAX		3532378	0		==			
ANR	3532627	MemberAccess	op -> operands [ 1 ] . reg		3532378	0					
ANR	3532628	ArrayIndexing	op -> operands [ 1 ]		3532378	0					
ANR	3532629	PtrMemberAccess	op -> operands		3532378	0					
ANR	3532630	Identifier	op		3532378	0					
ANR	3532631	Identifier	operands		3532378	1					
ANR	3532632	PrimaryExpression	1		3532378	1					
ANR	3532633	Identifier	reg		3532378	1					
ANR	3532634	Identifier	X86R_EAX		3532378	1					
ANR	3532635	BitAndExpression	op -> operands [ 0 ] . type & OT_GPREG		3532378	1		&			
ANR	3532636	MemberAccess	op -> operands [ 0 ] . type		3532378	0					
ANR	3532637	ArrayIndexing	op -> operands [ 0 ]		3532378	0					
ANR	3532638	PtrMemberAccess	op -> operands		3532378	0					
ANR	3532639	Identifier	op		3532378	0					
ANR	3532640	Identifier	operands		3532378	1					
ANR	3532641	PrimaryExpression	0		3532378	1					
ANR	3532642	Identifier	type		3532378	1					
ANR	3532643	Identifier	OT_GPREG		3532378	1					
ANR	3532644	CompoundStatement		32:40:894:894	3532378	1					
ANR	3532645	ExpressionStatement	data [ l ++ ] = 0x90 + op -> operands [ 0 ] . reg	2662:3:70127:70165	3532378	0	True				
ANR	3532646	AssignmentExpression	data [ l ++ ] = 0x90 + op -> operands [ 0 ] . reg		3532378	0		=			
ANR	3532647	ArrayIndexing	data [ l ++ ]		3532378	0					
ANR	3532648	Identifier	data		3532378	0					
ANR	3532649	PostIncDecOperationExpression	l ++		3532378	1					
ANR	3532650	Identifier	l		3532378	0					
ANR	3532651	IncDec	++		3532378	1					
ANR	3532652	AdditiveExpression	0x90 + op -> operands [ 0 ] . reg		3532378	1		+			
ANR	3532653	PrimaryExpression	0x90		3532378	0					
ANR	3532654	MemberAccess	op -> operands [ 0 ] . reg		3532378	1					
ANR	3532655	ArrayIndexing	op -> operands [ 0 ]		3532378	0					
ANR	3532656	PtrMemberAccess	op -> operands		3532378	0					
ANR	3532657	Identifier	op		3532378	0					
ANR	3532658	Identifier	operands		3532378	1					
ANR	3532659	PrimaryExpression	0		3532378	1					
ANR	3532660	Identifier	reg		3532378	1					
ANR	3532661	ReturnStatement	return l ;	2663:3:70170:70178	3532378	1	True				
ANR	3532662	Identifier	l		3532378	0					
ANR	3532663	ElseStatement	else		3532378	0					
ANR	3532664	IfStatement	if ( op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 1 ] . type & OT_GPREG )		3532378	0					
ANR	3532665	Condition	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 1 ] . type & OT_GPREG	2664:13:70193:70265	3532378	0	True				
ANR	3532666	AndExpression	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 1 ] . type & OT_GPREG		3532378	0		&&			
ANR	3532667	BitAndExpression	op -> operands [ 0 ] . type & OT_GPREG		3532378	0		&			
ANR	3532668	MemberAccess	op -> operands [ 0 ] . type		3532378	0					
ANR	3532669	ArrayIndexing	op -> operands [ 0 ]		3532378	0					
ANR	3532670	PtrMemberAccess	op -> operands		3532378	0					
ANR	3532671	Identifier	op		3532378	0					
ANR	3532672	Identifier	operands		3532378	1					
ANR	3532673	PrimaryExpression	0		3532378	1					
ANR	3532674	Identifier	type		3532378	1					
ANR	3532675	Identifier	OT_GPREG		3532378	1					
ANR	3532676	BitAndExpression	op -> operands [ 1 ] . type & OT_GPREG		3532378	1		&			
ANR	3532677	MemberAccess	op -> operands [ 1 ] . type		3532378	0					
ANR	3532678	ArrayIndexing	op -> operands [ 1 ]		3532378	0					
ANR	3532679	PtrMemberAccess	op -> operands		3532378	0					
ANR	3532680	Identifier	op		3532378	0					
ANR	3532681	Identifier	operands		3532378	1					
ANR	3532682	PrimaryExpression	1		3532378	1					
ANR	3532683	Identifier	type		3532378	1					
ANR	3532684	Identifier	OT_GPREG		3532378	1					
ANR	3532685	CompoundStatement		36:40:1040:1040	3532378	1					
ANR	3532686	ExpressionStatement	mod_byte = 3	2666:3:70273:70285	3532378	0	True				
ANR	3532687	AssignmentExpression	mod_byte = 3		3532378	0		=			
ANR	3532688	Identifier	mod_byte		3532378	0					
ANR	3532689	PrimaryExpression	3		3532378	1					
ANR	3532690	ExpressionStatement	data [ l ++ ] = 0x87	2667:3:70290:70306	3532378	1	True				
ANR	3532691	AssignmentExpression	data [ l ++ ] = 0x87		3532378	0		=			
ANR	3532692	ArrayIndexing	data [ l ++ ]		3532378	0					
ANR	3532693	Identifier	data		3532378	0					
ANR	3532694	PostIncDecOperationExpression	l ++		3532378	1					
ANR	3532695	Identifier	l		3532378	0					
ANR	3532696	IncDec	++		3532378	1					
ANR	3532697	PrimaryExpression	0x87		3532378	1					
ANR	3532698	ExpressionStatement	reg = op -> operands [ 1 ] . reg	2668:3:70311:70336	3532378	2	True				
ANR	3532699	AssignmentExpression	reg = op -> operands [ 1 ] . reg		3532378	0		=			
ANR	3532700	Identifier	reg		3532378	0					
ANR	3532701	MemberAccess	op -> operands [ 1 ] . reg		3532378	1					
ANR	3532702	ArrayIndexing	op -> operands [ 1 ]		3532378	0					
ANR	3532703	PtrMemberAccess	op -> operands		3532378	0					
ANR	3532704	Identifier	op		3532378	0					
ANR	3532705	Identifier	operands		3532378	1					
ANR	3532706	PrimaryExpression	1		3532378	1					
ANR	3532707	Identifier	reg		3532378	1					
ANR	3532708	ExpressionStatement	rm = op -> operands [ 0 ] . reg	2669:3:70341:70365	3532378	3	True				
ANR	3532709	AssignmentExpression	rm = op -> operands [ 0 ] . reg		3532378	0		=			
ANR	3532710	Identifier	rm		3532378	0					
ANR	3532711	MemberAccess	op -> operands [ 0 ] . reg		3532378	1					
ANR	3532712	ArrayIndexing	op -> operands [ 0 ]		3532378	0					
ANR	3532713	PtrMemberAccess	op -> operands		3532378	0					
ANR	3532714	Identifier	op		3532378	0					
ANR	3532715	Identifier	operands		3532378	1					
ANR	3532716	PrimaryExpression	0		3532378	1					
ANR	3532717	Identifier	reg		3532378	1					
ANR	3532718	ExpressionStatement	data [ l ++ ] = mod_byte << 6 | reg << 3 | rm	2672:1:70375:70416	3532378	7	True				
ANR	3532719	AssignmentExpression	data [ l ++ ] = mod_byte << 6 | reg << 3 | rm		3532378	0		=			
ANR	3532720	ArrayIndexing	data [ l ++ ]		3532378	0					
ANR	3532721	Identifier	data		3532378	0					
ANR	3532722	PostIncDecOperationExpression	l ++		3532378	1					
ANR	3532723	Identifier	l		3532378	0					
ANR	3532724	IncDec	++		3532378	1					
ANR	3532725	InclusiveOrExpression	mod_byte << 6 | reg << 3 | rm		3532378	1		|			
ANR	3532726	ShiftExpression	mod_byte << 6		3532378	0		<<			
ANR	3532727	Identifier	mod_byte		3532378	0					
ANR	3532728	PrimaryExpression	6		3532378	1					
ANR	3532729	InclusiveOrExpression	reg << 3 | rm		3532378	1		|			
ANR	3532730	ShiftExpression	reg << 3		3532378	0		<<			
ANR	3532731	Identifier	reg		3532378	0					
ANR	3532732	PrimaryExpression	3		3532378	1					
ANR	3532733	Identifier	rm		3532378	1					
ANR	3532734	IfStatement	if ( mod_byte > 0 && mod_byte < 3 )		3532378	8					
ANR	3532735	Condition	mod_byte > 0 && mod_byte < 3	2673:5:70423:70450	3532378	0	True				
ANR	3532736	AndExpression	mod_byte > 0 && mod_byte < 3		3532378	0		&&			
ANR	3532737	RelationalExpression	mod_byte > 0		3532378	0		>			
ANR	3532738	Identifier	mod_byte		3532378	0					
ANR	3532739	PrimaryExpression	0		3532378	1					
ANR	3532740	RelationalExpression	mod_byte < 3		3532378	1		<			
ANR	3532741	Identifier	mod_byte		3532378	0					
ANR	3532742	PrimaryExpression	3		3532378	1					
ANR	3532743	CompoundStatement		44:35:1225:1225	3532378	1					
ANR	3532744	ExpressionStatement	data [ l ++ ] = offset	2674:2:70457:70475	3532378	0	True				
ANR	3532745	AssignmentExpression	data [ l ++ ] = offset		3532378	0		=			
ANR	3532746	ArrayIndexing	data [ l ++ ]		3532378	0					
ANR	3532747	Identifier	data		3532378	0					
ANR	3532748	PostIncDecOperationExpression	l ++		3532378	1					
ANR	3532749	Identifier	l		3532378	0					
ANR	3532750	IncDec	++		3532378	1					
ANR	3532751	Identifier	offset		3532378	1					
ANR	3532752	IfStatement	if ( mod_byte == 2 )		3532378	1					
ANR	3532753	Condition	mod_byte == 2	2675:6:70483:70495	3532378	0	True				
ANR	3532754	EqualityExpression	mod_byte == 2		3532378	0		==			
ANR	3532755	Identifier	mod_byte		3532378	0					
ANR	3532756	PrimaryExpression	2		3532378	1					
ANR	3532757	CompoundStatement		46:21:1270:1270	3532378	1					
ANR	3532758	ExpressionStatement	data [ l ++ ] = offset >> 8	2676:3:70503:70526	3532378	0	True				
ANR	3532759	AssignmentExpression	data [ l ++ ] = offset >> 8		3532378	0		=			
ANR	3532760	ArrayIndexing	data [ l ++ ]		3532378	0					
ANR	3532761	Identifier	data		3532378	0					
ANR	3532762	PostIncDecOperationExpression	l ++		3532378	1					
ANR	3532763	Identifier	l		3532378	0					
ANR	3532764	IncDec	++		3532378	1					
ANR	3532765	ShiftExpression	offset >> 8		3532378	1		>>			
ANR	3532766	Identifier	offset		3532378	0					
ANR	3532767	PrimaryExpression	8		3532378	1					
ANR	3532768	ExpressionStatement	data [ l ++ ] = offset >> 16	2677:3:70531:70555	3532378	1	True				
ANR	3532769	AssignmentExpression	data [ l ++ ] = offset >> 16		3532378	0		=			
ANR	3532770	ArrayIndexing	data [ l ++ ]		3532378	0					
ANR	3532771	Identifier	data		3532378	0					
ANR	3532772	PostIncDecOperationExpression	l ++		3532378	1					
ANR	3532773	Identifier	l		3532378	0					
ANR	3532774	IncDec	++		3532378	1					
ANR	3532775	ShiftExpression	offset >> 16		3532378	1		>>			
ANR	3532776	Identifier	offset		3532378	0					
ANR	3532777	PrimaryExpression	16		3532378	1					
ANR	3532778	ExpressionStatement	data [ l ++ ] = offset >> 24	2678:3:70560:70584	3532378	2	True				
ANR	3532779	AssignmentExpression	data [ l ++ ] = offset >> 24		3532378	0		=			
ANR	3532780	ArrayIndexing	data [ l ++ ]		3532378	0					
ANR	3532781	Identifier	data		3532378	0					
ANR	3532782	PostIncDecOperationExpression	l ++		3532378	1					
ANR	3532783	Identifier	l		3532378	0					
ANR	3532784	IncDec	++		3532378	1					
ANR	3532785	ShiftExpression	offset >> 24		3532378	1		>>			
ANR	3532786	Identifier	offset		3532378	0					
ANR	3532787	PrimaryExpression	24		3532378	1					
ANR	3532788	ReturnStatement	return l ;	2681:1:70594:70602	3532378	9	True				
ANR	3532789	Identifier	l		3532378	0					
ANR	3532790	ReturnType	static int		3532378	1					
ANR	3532791	Identifier	opxchg		3532378	2					
ANR	3532792	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3532378	3					
ANR	3532793	Parameter	RAsm * a	2630:18:69189:69195	3532378	0	True				
ANR	3532794	ParameterType	RAsm *		3532378	0					
ANR	3532795	Identifier	a		3532378	1					
ANR	3532796	Parameter	ut8 * data	2630:27:69198:69206	3532378	1	True				
ANR	3532797	ParameterType	ut8 *		3532378	0					
ANR	3532798	Identifier	data		3532378	1					
ANR	3532799	Parameter	const Opcode * op	2630:38:69209:69224	3532378	2	True				
ANR	3532800	ParameterType	const Opcode *		3532378	0					
ANR	3532801	Identifier	op		3532378	1					
ANR	3532802	CFGEntryNode	ENTRY		3532378		True				
ANR	3532803	CFGExitNode	EXIT		3532378		True				
ANR	3532804	Symbol	op -> operands [ 0 ] . offset_sign		3532378						
ANR	3532805	Symbol	ST8_MAX		3532378						
ANR	3532806	Symbol	data		3532378						
ANR	3532807	Symbol	* op		3532378						
ANR	3532808	Symbol	* * op		3532378						
ANR	3532809	Symbol	* op -> operands [ 1 ] . regs		3532378						
ANR	3532810	Symbol	* op -> operands		3532378						
ANR	3532811	Symbol	reg		3532378						
ANR	3532812	Symbol	op -> operands [ 1 ] . regs		3532378						
ANR	3532813	Symbol	ST8_MIN		3532378						
ANR	3532814	Symbol	op -> operands [ 0 ] . type		3532378						
ANR	3532815	Symbol	op -> operands [ 1 ] . offset_sign		3532378						
ANR	3532816	Symbol	op -> operands [ 0 ] . reg		3532378						
ANR	3532817	Symbol	op -> operands [ 0 ] . offset		3532378						
ANR	3532818	Symbol	OT_MEMORY		3532378						
ANR	3532819	Symbol	X86R_EAX		3532378						
ANR	3532820	Symbol	a		3532378						
ANR	3532821	Symbol	op		3532378						
ANR	3532822	Symbol	OT_GPREG		3532378						
ANR	3532823	Symbol	mod_byte		3532378						
ANR	3532824	Symbol	offset		3532378						
ANR	3532825	Symbol	op -> operands [ 1 ] . reg		3532378						
ANR	3532826	Symbol	op -> operands [ 1 ] . offset		3532378						
ANR	3532827	Symbol	* * op -> operands		3532378						
ANR	3532828	Symbol	l		3532378						
ANR	3532829	Symbol	op -> operands [ 1 ] . type		3532378						
ANR	3532830	Symbol	* op -> operands [ 0 ] . regs		3532378						
ANR	3532831	Symbol	* * * op		3532378						
ANR	3532832	Symbol	rm		3532378						
ANR	3532833	Symbol	op -> operands		3532378						
ANR	3532834	Symbol	* data		3532378						
ANR	3532835	Symbol	op -> operands [ 0 ] . regs		3532378						
ANR	3532836	Function	opcdqe	2684:0:70607:70778							
ANR	3532837	FunctionDef	"opcdqe (RAsm * a , ut8 * data , const Opcode * op)"		3532836	0					
ANR	3532838	CompoundStatement		2684:56:70663:70778	3532836	0					
ANR	3532839	ExpressionStatement	is_valid_registers ( op )	2685:1:70666:70689	3532836	0	True				
ANR	3532840	CallExpression	is_valid_registers ( op )		3532836	0					
ANR	3532841	Callee	is_valid_registers		3532836	0					
ANR	3532842	Identifier	is_valid_registers		3532836	0					
ANR	3532843	ArgumentList	op		3532836	1					
ANR	3532844	Argument	op		3532836	0					
ANR	3532845	Identifier	op		3532836	0					
ANR	3532846	IdentifierDeclStatement	int l = 0 ;	2686:1:70692:70701	3532836	1	True				
ANR	3532847	IdentifierDecl	l = 0		3532836	0					
ANR	3532848	IdentifierDeclType	int		3532836	0					
ANR	3532849	Identifier	l		3532836	1					
ANR	3532850	AssignmentExpression	l = 0		3532836	2		=			
ANR	3532851	Identifier	l		3532836	0					
ANR	3532852	PrimaryExpression	0		3532836	1					
ANR	3532853	IfStatement	if ( a -> bits == 64 )		3532836	2					
ANR	3532854	Condition	a -> bits == 64	2687:5:70708:70720	3532836	0	True				
ANR	3532855	EqualityExpression	a -> bits == 64		3532836	0		==			
ANR	3532856	PtrMemberAccess	a -> bits		3532836	0					
ANR	3532857	Identifier	a		3532836	0					
ANR	3532858	Identifier	bits		3532836	1					
ANR	3532859	PrimaryExpression	64		3532836	1					
ANR	3532860	CompoundStatement		4:20:59:59	3532836	1					
ANR	3532861	ExpressionStatement	data [ l ++ ] = 0x48	2688:2:70727:70743	3532836	0	True				
ANR	3532862	AssignmentExpression	data [ l ++ ] = 0x48		3532836	0		=			
ANR	3532863	ArrayIndexing	data [ l ++ ]		3532836	0					
ANR	3532864	Identifier	data		3532836	0					
ANR	3532865	PostIncDecOperationExpression	l ++		3532836	1					
ANR	3532866	Identifier	l		3532836	0					
ANR	3532867	IncDec	++		3532836	1					
ANR	3532868	PrimaryExpression	0x48		3532836	1					
ANR	3532869	ExpressionStatement	data [ l ++ ] = 0x98	2690:1:70749:70765	3532836	3	True				
ANR	3532870	AssignmentExpression	data [ l ++ ] = 0x98		3532836	0		=			
ANR	3532871	ArrayIndexing	data [ l ++ ]		3532836	0					
ANR	3532872	Identifier	data		3532836	0					
ANR	3532873	PostIncDecOperationExpression	l ++		3532836	1					
ANR	3532874	Identifier	l		3532836	0					
ANR	3532875	IncDec	++		3532836	1					
ANR	3532876	PrimaryExpression	0x98		3532836	1					
ANR	3532877	ReturnStatement	return l ;	2691:1:70768:70776	3532836	4	True				
ANR	3532878	Identifier	l		3532836	0					
ANR	3532879	ReturnType	static int		3532836	1					
ANR	3532880	Identifier	opcdqe		3532836	2					
ANR	3532881	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3532836	3					
ANR	3532882	Parameter	RAsm * a	2684:18:70625:70631	3532836	0	True				
ANR	3532883	ParameterType	RAsm *		3532836	0					
ANR	3532884	Identifier	a		3532836	1					
ANR	3532885	Parameter	ut8 * data	2684:27:70634:70642	3532836	1	True				
ANR	3532886	ParameterType	ut8 *		3532836	0					
ANR	3532887	Identifier	data		3532836	1					
ANR	3532888	Parameter	const Opcode * op	2684:38:70645:70660	3532836	2	True				
ANR	3532889	ParameterType	const Opcode *		3532836	0					
ANR	3532890	Identifier	op		3532836	1					
ANR	3532891	CFGEntryNode	ENTRY		3532836		True				
ANR	3532892	CFGExitNode	EXIT		3532836		True				
ANR	3532893	Symbol	a		3532836						
ANR	3532894	Symbol	op		3532836						
ANR	3532895	Symbol	data		3532836						
ANR	3532896	Symbol	* a		3532836						
ANR	3532897	Symbol	l		3532836						
ANR	3532898	Symbol	* data		3532836						
ANR	3532899	Symbol	a -> bits		3532836						
ANR	3532900	Function	opfcmov	2694:0:70781:72042							
ANR	3532901	FunctionDef	"opfcmov (RAsm * a , ut8 * data , const Opcode * op)"		3532900	0					
ANR	3532902	CompoundStatement		2694:57:70838:72042	3532900	0					
ANR	3532903	IdentifierDeclStatement	int l = 0 ;	2695:1:70841:70850	3532900	0	True				
ANR	3532904	IdentifierDecl	l = 0		3532900	0					
ANR	3532905	IdentifierDeclType	int		3532900	0					
ANR	3532906	Identifier	l		3532900	1					
ANR	3532907	AssignmentExpression	l = 0		3532900	2		=			
ANR	3532908	Identifier	l		3532900	0					
ANR	3532909	PrimaryExpression	0		3532900	1					
ANR	3532910	IdentifierDeclStatement	"char * fcmov = op -> mnemonic + strlen ( ""fcmov"" ) ;"	2696:1:70853:70897	3532900	1	True				
ANR	3532911	IdentifierDecl	"* fcmov = op -> mnemonic + strlen ( ""fcmov"" )"		3532900	0					
ANR	3532912	IdentifierDeclType	char *		3532900	0					
ANR	3532913	Identifier	fcmov		3532900	1					
ANR	3532914	AssignmentExpression	"* fcmov = op -> mnemonic + strlen ( ""fcmov"" )"		3532900	2		=			
ANR	3532915	Identifier	fcmov		3532900	0					
ANR	3532916	AdditiveExpression	"op -> mnemonic + strlen ( ""fcmov"" )"		3532900	1		+			
ANR	3532917	PtrMemberAccess	op -> mnemonic		3532900	0					
ANR	3532918	Identifier	op		3532900	0					
ANR	3532919	Identifier	mnemonic		3532900	1					
ANR	3532920	CallExpression	"strlen ( ""fcmov"" )"		3532900	1					
ANR	3532921	Callee	strlen		3532900	0					
ANR	3532922	Identifier	strlen		3532900	0					
ANR	3532923	ArgumentList	"""fcmov"""		3532900	1					
ANR	3532924	Argument	"""fcmov"""		3532900	0					
ANR	3532925	PrimaryExpression	"""fcmov"""		3532900	0					
ANR	3532926	SwitchStatement	switch ( op -> operands_count )		3532900	2					
ANR	3532927	Condition	op -> operands_count	2697:9:70908:70925	3532900	0	True				
ANR	3532928	PtrMemberAccess	op -> operands_count		3532900	0					
ANR	3532929	Identifier	op		3532900	0					
ANR	3532930	Identifier	operands_count		3532900	1					
ANR	3532931	CompoundStatement		4:29:89:89	3532900	1					
ANR	3532932	Label	case 2 :	2698:1:70931:70937	3532900	0	True				
ANR	3532933	IfStatement	if ( op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL )		3532900	1					
ANR	3532934	Condition	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL	2699:7:70946:71074	3532900	0	True				
ANR	3532935	AndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		3532900	0		&&			
ANR	3532936	BitAndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL		3532900	0		&			
ANR	3532937	MemberAccess	op -> operands [ 0 ] . type		3532900	0					
ANR	3532938	ArrayIndexing	op -> operands [ 0 ]		3532900	0					
ANR	3532939	PtrMemberAccess	op -> operands		3532900	0					
ANR	3532940	Identifier	op		3532900	0					
ANR	3532941	Identifier	operands		3532900	1					
ANR	3532942	PrimaryExpression	0		3532900	1					
ANR	3532943	Identifier	type		3532900	1					
ANR	3532944	BitAndExpression	OT_FPUREG & ~OT_REGALL		3532900	1		&			
ANR	3532945	Identifier	OT_FPUREG		3532900	0					
ANR	3532946	Identifier	~OT_REGALL		3532900	1					
ANR	3532947	AndExpression	op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		3532900	1		&&			
ANR	3532948	EqualityExpression	op -> operands [ 0 ] . reg == 0		3532900	0		==			
ANR	3532949	MemberAccess	op -> operands [ 0 ] . reg		3532900	0					
ANR	3532950	ArrayIndexing	op -> operands [ 0 ]		3532900	0					
ANR	3532951	PtrMemberAccess	op -> operands		3532900	0					
ANR	3532952	Identifier	op		3532900	0					
ANR	3532953	Identifier	operands		3532900	1					
ANR	3532954	PrimaryExpression	0		3532900	1					
ANR	3532955	Identifier	reg		3532900	1					
ANR	3532956	PrimaryExpression	0		3532900	1					
ANR	3532957	BitAndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		3532900	1		&			
ANR	3532958	MemberAccess	op -> operands [ 1 ] . type		3532900	0					
ANR	3532959	ArrayIndexing	op -> operands [ 1 ]		3532900	0					
ANR	3532960	PtrMemberAccess	op -> operands		3532900	0					
ANR	3532961	Identifier	op		3532900	0					
ANR	3532962	Identifier	operands		3532900	1					
ANR	3532963	PrimaryExpression	1		3532900	1					
ANR	3532964	Identifier	type		3532900	1					
ANR	3532965	BitAndExpression	OT_FPUREG & ~OT_REGALL		3532900	1		&			
ANR	3532966	Identifier	OT_FPUREG		3532900	0					
ANR	3532967	Identifier	~OT_REGALL		3532900	1					
ANR	3532968	CompoundStatement		7:55:239:239	3532900	1					
ANR	3532969	IfStatement	"if ( ! strcmp ( fcmov , ""b"" ) )"		3532900	0					
ANR	3532970	Condition	"! strcmp ( fcmov , ""b"" )"	2701:8:71088:71108	3532900	0	True				
ANR	3532971	UnaryOperationExpression	"! strcmp ( fcmov , ""b"" )"		3532900	0					
ANR	3532972	UnaryOperator	!		3532900	0					
ANR	3532973	CallExpression	"strcmp ( fcmov , ""b"" )"		3532900	1					
ANR	3532974	Callee	strcmp		3532900	0					
ANR	3532975	Identifier	strcmp		3532900	0					
ANR	3532976	ArgumentList	fcmov		3532900	1					
ANR	3532977	Argument	fcmov		3532900	0					
ANR	3532978	Identifier	fcmov		3532900	0					
ANR	3532979	Argument	"""b"""		3532900	1					
ANR	3532980	PrimaryExpression	"""b"""		3532900	0					
ANR	3532981	CompoundStatement		8:32:273:273	3532900	1					
ANR	3532982	ExpressionStatement	data [ l ++ ] = 0xda	2702:4:71118:71134	3532900	0	True				
ANR	3532983	AssignmentExpression	data [ l ++ ] = 0xda		3532900	0		=			
ANR	3532984	ArrayIndexing	data [ l ++ ]		3532900	0					
ANR	3532985	Identifier	data		3532900	0					
ANR	3532986	PostIncDecOperationExpression	l ++		3532900	1					
ANR	3532987	Identifier	l		3532900	0					
ANR	3532988	IncDec	++		3532900	1					
ANR	3532989	PrimaryExpression	0xda		3532900	1					
ANR	3532990	ExpressionStatement	data [ l ++ ] = 0xc0 | op -> operands [ 1 ] . reg	2703:4:71140:71178	3532900	1	True				
ANR	3532991	AssignmentExpression	data [ l ++ ] = 0xc0 | op -> operands [ 1 ] . reg		3532900	0		=			
ANR	3532992	ArrayIndexing	data [ l ++ ]		3532900	0					
ANR	3532993	Identifier	data		3532900	0					
ANR	3532994	PostIncDecOperationExpression	l ++		3532900	1					
ANR	3532995	Identifier	l		3532900	0					
ANR	3532996	IncDec	++		3532900	1					
ANR	3532997	InclusiveOrExpression	0xc0 | op -> operands [ 1 ] . reg		3532900	1		|			
ANR	3532998	PrimaryExpression	0xc0		3532900	0					
ANR	3532999	MemberAccess	op -> operands [ 1 ] . reg		3532900	1					
ANR	3533000	ArrayIndexing	op -> operands [ 1 ]		3532900	0					
ANR	3533001	PtrMemberAccess	op -> operands		3532900	0					
ANR	3533002	Identifier	op		3532900	0					
ANR	3533003	Identifier	operands		3532900	1					
ANR	3533004	PrimaryExpression	1		3532900	1					
ANR	3533005	Identifier	reg		3532900	1					
ANR	3533006	ElseStatement	else		3532900	0					
ANR	3533007	IfStatement	"if ( ! strcmp ( fcmov , ""e"" ) )"		3532900	0					
ANR	3533008	Condition	"! strcmp ( fcmov , ""e"" )"	2704:15:71195:71215	3532900	0	True				
ANR	3533009	UnaryOperationExpression	"! strcmp ( fcmov , ""e"" )"		3532900	0					
ANR	3533010	UnaryOperator	!		3532900	0					
ANR	3533011	CallExpression	"strcmp ( fcmov , ""e"" )"		3532900	1					
ANR	3533012	Callee	strcmp		3532900	0					
ANR	3533013	Identifier	strcmp		3532900	0					
ANR	3533014	ArgumentList	fcmov		3532900	1					
ANR	3533015	Argument	fcmov		3532900	0					
ANR	3533016	Identifier	fcmov		3532900	0					
ANR	3533017	Argument	"""e"""		3532900	1					
ANR	3533018	PrimaryExpression	"""e"""		3532900	0					
ANR	3533019	CompoundStatement		11:39:380:380	3532900	1					
ANR	3533020	ExpressionStatement	data [ l ++ ] = 0xda	2705:4:71225:71241	3532900	0	True				
ANR	3533021	AssignmentExpression	data [ l ++ ] = 0xda		3532900	0		=			
ANR	3533022	ArrayIndexing	data [ l ++ ]		3532900	0					
ANR	3533023	Identifier	data		3532900	0					
ANR	3533024	PostIncDecOperationExpression	l ++		3532900	1					
ANR	3533025	Identifier	l		3532900	0					
ANR	3533026	IncDec	++		3532900	1					
ANR	3533027	PrimaryExpression	0xda		3532900	1					
ANR	3533028	ExpressionStatement	data [ l ++ ] = 0xc8 | op -> operands [ 1 ] . reg	2706:4:71247:71285	3532900	1	True				
ANR	3533029	AssignmentExpression	data [ l ++ ] = 0xc8 | op -> operands [ 1 ] . reg		3532900	0		=			
ANR	3533030	ArrayIndexing	data [ l ++ ]		3532900	0					
ANR	3533031	Identifier	data		3532900	0					
ANR	3533032	PostIncDecOperationExpression	l ++		3532900	1					
ANR	3533033	Identifier	l		3532900	0					
ANR	3533034	IncDec	++		3532900	1					
ANR	3533035	InclusiveOrExpression	0xc8 | op -> operands [ 1 ] . reg		3532900	1		|			
ANR	3533036	PrimaryExpression	0xc8		3532900	0					
ANR	3533037	MemberAccess	op -> operands [ 1 ] . reg		3532900	1					
ANR	3533038	ArrayIndexing	op -> operands [ 1 ]		3532900	0					
ANR	3533039	PtrMemberAccess	op -> operands		3532900	0					
ANR	3533040	Identifier	op		3532900	0					
ANR	3533041	Identifier	operands		3532900	1					
ANR	3533042	PrimaryExpression	1		3532900	1					
ANR	3533043	Identifier	reg		3532900	1					
ANR	3533044	ElseStatement	else		3532900	0					
ANR	3533045	IfStatement	"if ( ! strcmp ( fcmov , ""be"" ) )"		3532900	0					
ANR	3533046	Condition	"! strcmp ( fcmov , ""be"" )"	2707:15:71302:71323	3532900	0	True				
ANR	3533047	UnaryOperationExpression	"! strcmp ( fcmov , ""be"" )"		3532900	0					
ANR	3533048	UnaryOperator	!		3532900	0					
ANR	3533049	CallExpression	"strcmp ( fcmov , ""be"" )"		3532900	1					
ANR	3533050	Callee	strcmp		3532900	0					
ANR	3533051	Identifier	strcmp		3532900	0					
ANR	3533052	ArgumentList	fcmov		3532900	1					
ANR	3533053	Argument	fcmov		3532900	0					
ANR	3533054	Identifier	fcmov		3532900	0					
ANR	3533055	Argument	"""be"""		3532900	1					
ANR	3533056	PrimaryExpression	"""be"""		3532900	0					
ANR	3533057	CompoundStatement		14:40:488:488	3532900	1					
ANR	3533058	ExpressionStatement	data [ l ++ ] = 0xda	2708:4:71333:71349	3532900	0	True				
ANR	3533059	AssignmentExpression	data [ l ++ ] = 0xda		3532900	0		=			
ANR	3533060	ArrayIndexing	data [ l ++ ]		3532900	0					
ANR	3533061	Identifier	data		3532900	0					
ANR	3533062	PostIncDecOperationExpression	l ++		3532900	1					
ANR	3533063	Identifier	l		3532900	0					
ANR	3533064	IncDec	++		3532900	1					
ANR	3533065	PrimaryExpression	0xda		3532900	1					
ANR	3533066	ExpressionStatement	data [ l ++ ] = 0xd0 | op -> operands [ 1 ] . reg	2709:4:71355:71393	3532900	1	True				
ANR	3533067	AssignmentExpression	data [ l ++ ] = 0xd0 | op -> operands [ 1 ] . reg		3532900	0		=			
ANR	3533068	ArrayIndexing	data [ l ++ ]		3532900	0					
ANR	3533069	Identifier	data		3532900	0					
ANR	3533070	PostIncDecOperationExpression	l ++		3532900	1					
ANR	3533071	Identifier	l		3532900	0					
ANR	3533072	IncDec	++		3532900	1					
ANR	3533073	InclusiveOrExpression	0xd0 | op -> operands [ 1 ] . reg		3532900	1		|			
ANR	3533074	PrimaryExpression	0xd0		3532900	0					
ANR	3533075	MemberAccess	op -> operands [ 1 ] . reg		3532900	1					
ANR	3533076	ArrayIndexing	op -> operands [ 1 ]		3532900	0					
ANR	3533077	PtrMemberAccess	op -> operands		3532900	0					
ANR	3533078	Identifier	op		3532900	0					
ANR	3533079	Identifier	operands		3532900	1					
ANR	3533080	PrimaryExpression	1		3532900	1					
ANR	3533081	Identifier	reg		3532900	1					
ANR	3533082	ElseStatement	else		3532900	0					
ANR	3533083	IfStatement	"if ( ! strcmp ( fcmov , ""u"" ) )"		3532900	0					
ANR	3533084	Condition	"! strcmp ( fcmov , ""u"" )"	2710:15:71410:71430	3532900	0	True				
ANR	3533085	UnaryOperationExpression	"! strcmp ( fcmov , ""u"" )"		3532900	0					
ANR	3533086	UnaryOperator	!		3532900	0					
ANR	3533087	CallExpression	"strcmp ( fcmov , ""u"" )"		3532900	1					
ANR	3533088	Callee	strcmp		3532900	0					
ANR	3533089	Identifier	strcmp		3532900	0					
ANR	3533090	ArgumentList	fcmov		3532900	1					
ANR	3533091	Argument	fcmov		3532900	0					
ANR	3533092	Identifier	fcmov		3532900	0					
ANR	3533093	Argument	"""u"""		3532900	1					
ANR	3533094	PrimaryExpression	"""u"""		3532900	0					
ANR	3533095	CompoundStatement		17:39:595:595	3532900	1					
ANR	3533096	ExpressionStatement	data [ l ++ ] = 0xda	2711:4:71440:71456	3532900	0	True				
ANR	3533097	AssignmentExpression	data [ l ++ ] = 0xda		3532900	0		=			
ANR	3533098	ArrayIndexing	data [ l ++ ]		3532900	0					
ANR	3533099	Identifier	data		3532900	0					
ANR	3533100	PostIncDecOperationExpression	l ++		3532900	1					
ANR	3533101	Identifier	l		3532900	0					
ANR	3533102	IncDec	++		3532900	1					
ANR	3533103	PrimaryExpression	0xda		3532900	1					
ANR	3533104	ExpressionStatement	data [ l ++ ] = 0xd8 | op -> operands [ 1 ] . reg	2712:4:71462:71500	3532900	1	True				
ANR	3533105	AssignmentExpression	data [ l ++ ] = 0xd8 | op -> operands [ 1 ] . reg		3532900	0		=			
ANR	3533106	ArrayIndexing	data [ l ++ ]		3532900	0					
ANR	3533107	Identifier	data		3532900	0					
ANR	3533108	PostIncDecOperationExpression	l ++		3532900	1					
ANR	3533109	Identifier	l		3532900	0					
ANR	3533110	IncDec	++		3532900	1					
ANR	3533111	InclusiveOrExpression	0xd8 | op -> operands [ 1 ] . reg		3532900	1		|			
ANR	3533112	PrimaryExpression	0xd8		3532900	0					
ANR	3533113	MemberAccess	op -> operands [ 1 ] . reg		3532900	1					
ANR	3533114	ArrayIndexing	op -> operands [ 1 ]		3532900	0					
ANR	3533115	PtrMemberAccess	op -> operands		3532900	0					
ANR	3533116	Identifier	op		3532900	0					
ANR	3533117	Identifier	operands		3532900	1					
ANR	3533118	PrimaryExpression	1		3532900	1					
ANR	3533119	Identifier	reg		3532900	1					
ANR	3533120	ElseStatement	else		3532900	0					
ANR	3533121	IfStatement	"if ( ! strcmp ( fcmov , ""nb"" ) )"		3532900	0					
ANR	3533122	Condition	"! strcmp ( fcmov , ""nb"" )"	2713:15:71517:71538	3532900	0	True				
ANR	3533123	UnaryOperationExpression	"! strcmp ( fcmov , ""nb"" )"		3532900	0					
ANR	3533124	UnaryOperator	!		3532900	0					
ANR	3533125	CallExpression	"strcmp ( fcmov , ""nb"" )"		3532900	1					
ANR	3533126	Callee	strcmp		3532900	0					
ANR	3533127	Identifier	strcmp		3532900	0					
ANR	3533128	ArgumentList	fcmov		3532900	1					
ANR	3533129	Argument	fcmov		3532900	0					
ANR	3533130	Identifier	fcmov		3532900	0					
ANR	3533131	Argument	"""nb"""		3532900	1					
ANR	3533132	PrimaryExpression	"""nb"""		3532900	0					
ANR	3533133	CompoundStatement		20:40:703:703	3532900	1					
ANR	3533134	ExpressionStatement	data [ l ++ ] = 0xdb	2714:4:71548:71564	3532900	0	True				
ANR	3533135	AssignmentExpression	data [ l ++ ] = 0xdb		3532900	0		=			
ANR	3533136	ArrayIndexing	data [ l ++ ]		3532900	0					
ANR	3533137	Identifier	data		3532900	0					
ANR	3533138	PostIncDecOperationExpression	l ++		3532900	1					
ANR	3533139	Identifier	l		3532900	0					
ANR	3533140	IncDec	++		3532900	1					
ANR	3533141	PrimaryExpression	0xdb		3532900	1					
ANR	3533142	ExpressionStatement	data [ l ++ ] = 0xc0 | op -> operands [ 1 ] . reg	2715:4:71570:71608	3532900	1	True				
ANR	3533143	AssignmentExpression	data [ l ++ ] = 0xc0 | op -> operands [ 1 ] . reg		3532900	0		=			
ANR	3533144	ArrayIndexing	data [ l ++ ]		3532900	0					
ANR	3533145	Identifier	data		3532900	0					
ANR	3533146	PostIncDecOperationExpression	l ++		3532900	1					
ANR	3533147	Identifier	l		3532900	0					
ANR	3533148	IncDec	++		3532900	1					
ANR	3533149	InclusiveOrExpression	0xc0 | op -> operands [ 1 ] . reg		3532900	1		|			
ANR	3533150	PrimaryExpression	0xc0		3532900	0					
ANR	3533151	MemberAccess	op -> operands [ 1 ] . reg		3532900	1					
ANR	3533152	ArrayIndexing	op -> operands [ 1 ]		3532900	0					
ANR	3533153	PtrMemberAccess	op -> operands		3532900	0					
ANR	3533154	Identifier	op		3532900	0					
ANR	3533155	Identifier	operands		3532900	1					
ANR	3533156	PrimaryExpression	1		3532900	1					
ANR	3533157	Identifier	reg		3532900	1					
ANR	3533158	ElseStatement	else		3532900	0					
ANR	3533159	IfStatement	"if ( ! strcmp ( fcmov , ""ne"" ) )"		3532900	0					
ANR	3533160	Condition	"! strcmp ( fcmov , ""ne"" )"	2716:15:71625:71646	3532900	0	True				
ANR	3533161	UnaryOperationExpression	"! strcmp ( fcmov , ""ne"" )"		3532900	0					
ANR	3533162	UnaryOperator	!		3532900	0					
ANR	3533163	CallExpression	"strcmp ( fcmov , ""ne"" )"		3532900	1					
ANR	3533164	Callee	strcmp		3532900	0					
ANR	3533165	Identifier	strcmp		3532900	0					
ANR	3533166	ArgumentList	fcmov		3532900	1					
ANR	3533167	Argument	fcmov		3532900	0					
ANR	3533168	Identifier	fcmov		3532900	0					
ANR	3533169	Argument	"""ne"""		3532900	1					
ANR	3533170	PrimaryExpression	"""ne"""		3532900	0					
ANR	3533171	CompoundStatement		23:40:811:811	3532900	1					
ANR	3533172	ExpressionStatement	data [ l ++ ] = 0xdb	2717:4:71656:71672	3532900	0	True				
ANR	3533173	AssignmentExpression	data [ l ++ ] = 0xdb		3532900	0		=			
ANR	3533174	ArrayIndexing	data [ l ++ ]		3532900	0					
ANR	3533175	Identifier	data		3532900	0					
ANR	3533176	PostIncDecOperationExpression	l ++		3532900	1					
ANR	3533177	Identifier	l		3532900	0					
ANR	3533178	IncDec	++		3532900	1					
ANR	3533179	PrimaryExpression	0xdb		3532900	1					
ANR	3533180	ExpressionStatement	data [ l ++ ] = 0xc8 | op -> operands [ 1 ] . reg	2718:4:71678:71716	3532900	1	True				
ANR	3533181	AssignmentExpression	data [ l ++ ] = 0xc8 | op -> operands [ 1 ] . reg		3532900	0		=			
ANR	3533182	ArrayIndexing	data [ l ++ ]		3532900	0					
ANR	3533183	Identifier	data		3532900	0					
ANR	3533184	PostIncDecOperationExpression	l ++		3532900	1					
ANR	3533185	Identifier	l		3532900	0					
ANR	3533186	IncDec	++		3532900	1					
ANR	3533187	InclusiveOrExpression	0xc8 | op -> operands [ 1 ] . reg		3532900	1		|			
ANR	3533188	PrimaryExpression	0xc8		3532900	0					
ANR	3533189	MemberAccess	op -> operands [ 1 ] . reg		3532900	1					
ANR	3533190	ArrayIndexing	op -> operands [ 1 ]		3532900	0					
ANR	3533191	PtrMemberAccess	op -> operands		3532900	0					
ANR	3533192	Identifier	op		3532900	0					
ANR	3533193	Identifier	operands		3532900	1					
ANR	3533194	PrimaryExpression	1		3532900	1					
ANR	3533195	Identifier	reg		3532900	1					
ANR	3533196	ElseStatement	else		3532900	0					
ANR	3533197	IfStatement	"if ( ! strcmp ( fcmov , ""nbe"" ) )"		3532900	0					
ANR	3533198	Condition	"! strcmp ( fcmov , ""nbe"" )"	2719:15:71733:71755	3532900	0	True				
ANR	3533199	UnaryOperationExpression	"! strcmp ( fcmov , ""nbe"" )"		3532900	0					
ANR	3533200	UnaryOperator	!		3532900	0					
ANR	3533201	CallExpression	"strcmp ( fcmov , ""nbe"" )"		3532900	1					
ANR	3533202	Callee	strcmp		3532900	0					
ANR	3533203	Identifier	strcmp		3532900	0					
ANR	3533204	ArgumentList	fcmov		3532900	1					
ANR	3533205	Argument	fcmov		3532900	0					
ANR	3533206	Identifier	fcmov		3532900	0					
ANR	3533207	Argument	"""nbe"""		3532900	1					
ANR	3533208	PrimaryExpression	"""nbe"""		3532900	0					
ANR	3533209	CompoundStatement		26:41:920:920	3532900	1					
ANR	3533210	ExpressionStatement	data [ l ++ ] = 0xdb	2720:4:71765:71781	3532900	0	True				
ANR	3533211	AssignmentExpression	data [ l ++ ] = 0xdb		3532900	0		=			
ANR	3533212	ArrayIndexing	data [ l ++ ]		3532900	0					
ANR	3533213	Identifier	data		3532900	0					
ANR	3533214	PostIncDecOperationExpression	l ++		3532900	1					
ANR	3533215	Identifier	l		3532900	0					
ANR	3533216	IncDec	++		3532900	1					
ANR	3533217	PrimaryExpression	0xdb		3532900	1					
ANR	3533218	ExpressionStatement	data [ l ++ ] = 0xd0 | op -> operands [ 1 ] . reg	2721:4:71787:71825	3532900	1	True				
ANR	3533219	AssignmentExpression	data [ l ++ ] = 0xd0 | op -> operands [ 1 ] . reg		3532900	0		=			
ANR	3533220	ArrayIndexing	data [ l ++ ]		3532900	0					
ANR	3533221	Identifier	data		3532900	0					
ANR	3533222	PostIncDecOperationExpression	l ++		3532900	1					
ANR	3533223	Identifier	l		3532900	0					
ANR	3533224	IncDec	++		3532900	1					
ANR	3533225	InclusiveOrExpression	0xd0 | op -> operands [ 1 ] . reg		3532900	1		|			
ANR	3533226	PrimaryExpression	0xd0		3532900	0					
ANR	3533227	MemberAccess	op -> operands [ 1 ] . reg		3532900	1					
ANR	3533228	ArrayIndexing	op -> operands [ 1 ]		3532900	0					
ANR	3533229	PtrMemberAccess	op -> operands		3532900	0					
ANR	3533230	Identifier	op		3532900	0					
ANR	3533231	Identifier	operands		3532900	1					
ANR	3533232	PrimaryExpression	1		3532900	1					
ANR	3533233	Identifier	reg		3532900	1					
ANR	3533234	ElseStatement	else		3532900	0					
ANR	3533235	IfStatement	"if ( ! strcmp ( fcmov , ""nu"" ) )"		3532900	0					
ANR	3533236	Condition	"! strcmp ( fcmov , ""nu"" )"	2722:15:71842:71863	3532900	0	True				
ANR	3533237	UnaryOperationExpression	"! strcmp ( fcmov , ""nu"" )"		3532900	0					
ANR	3533238	UnaryOperator	!		3532900	0					
ANR	3533239	CallExpression	"strcmp ( fcmov , ""nu"" )"		3532900	1					
ANR	3533240	Callee	strcmp		3532900	0					
ANR	3533241	Identifier	strcmp		3532900	0					
ANR	3533242	ArgumentList	fcmov		3532900	1					
ANR	3533243	Argument	fcmov		3532900	0					
ANR	3533244	Identifier	fcmov		3532900	0					
ANR	3533245	Argument	"""nu"""		3532900	1					
ANR	3533246	PrimaryExpression	"""nu"""		3532900	0					
ANR	3533247	CompoundStatement		29:40:1028:1028	3532900	1					
ANR	3533248	ExpressionStatement	data [ l ++ ] = 0xdb	2723:4:71873:71889	3532900	0	True				
ANR	3533249	AssignmentExpression	data [ l ++ ] = 0xdb		3532900	0		=			
ANR	3533250	ArrayIndexing	data [ l ++ ]		3532900	0					
ANR	3533251	Identifier	data		3532900	0					
ANR	3533252	PostIncDecOperationExpression	l ++		3532900	1					
ANR	3533253	Identifier	l		3532900	0					
ANR	3533254	IncDec	++		3532900	1					
ANR	3533255	PrimaryExpression	0xdb		3532900	1					
ANR	3533256	ExpressionStatement	data [ l ++ ] = 0xd8 | op -> operands [ 1 ] . reg	2724:4:71895:71933	3532900	1	True				
ANR	3533257	AssignmentExpression	data [ l ++ ] = 0xd8 | op -> operands [ 1 ] . reg		3532900	0		=			
ANR	3533258	ArrayIndexing	data [ l ++ ]		3532900	0					
ANR	3533259	Identifier	data		3532900	0					
ANR	3533260	PostIncDecOperationExpression	l ++		3532900	1					
ANR	3533261	Identifier	l		3532900	0					
ANR	3533262	IncDec	++		3532900	1					
ANR	3533263	InclusiveOrExpression	0xd8 | op -> operands [ 1 ] . reg		3532900	1		|			
ANR	3533264	PrimaryExpression	0xd8		3532900	0					
ANR	3533265	MemberAccess	op -> operands [ 1 ] . reg		3532900	1					
ANR	3533266	ArrayIndexing	op -> operands [ 1 ]		3532900	0					
ANR	3533267	PtrMemberAccess	op -> operands		3532900	0					
ANR	3533268	Identifier	op		3532900	0					
ANR	3533269	Identifier	operands		3532900	1					
ANR	3533270	PrimaryExpression	1		3532900	1					
ANR	3533271	Identifier	reg		3532900	1					
ANR	3533272	ElseStatement	else		3532900	0					
ANR	3533273	CompoundStatement		32:10:1106:1106	3532900	0					
ANR	3533274	ReturnStatement	return - 1 ;	2726:4:71951:71960	3532900	0	True				
ANR	3533275	UnaryOperationExpression	- 1		3532900	0					
ANR	3533276	UnaryOperator	-		3532900	0					
ANR	3533277	PrimaryExpression	1		3532900	1					
ANR	3533278	ElseStatement	else		3532900	0					
ANR	3533279	CompoundStatement		35:9:1137:1137	3532900	0					
ANR	3533280	ReturnStatement	return - 1 ;	2729:3:71981:71990	3532900	0	True				
ANR	3533281	UnaryOperationExpression	- 1		3532900	0					
ANR	3533282	UnaryOperator	-		3532900	0					
ANR	3533283	PrimaryExpression	1		3532900	1					
ANR	3533284	BreakStatement	break ;	2731:2:71998:72003	3532900	2	True				
ANR	3533285	Label	default :	2732:1:72006:72013	3532900	3	True				
ANR	3533286	Identifier	default		3532900	0					
ANR	3533287	ReturnStatement	return - 1 ;	2733:2:72017:72026	3532900	4	True				
ANR	3533288	UnaryOperationExpression	- 1		3532900	0					
ANR	3533289	UnaryOperator	-		3532900	0					
ANR	3533290	PrimaryExpression	1		3532900	1					
ANR	3533291	ReturnStatement	return l ;	2735:1:72032:72040	3532900	3	True				
ANR	3533292	Identifier	l		3532900	0					
ANR	3533293	ReturnType	static int		3532900	1					
ANR	3533294	Identifier	opfcmov		3532900	2					
ANR	3533295	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3532900	3					
ANR	3533296	Parameter	RAsm * a	2694:19:70800:70806	3532900	0	True				
ANR	3533297	ParameterType	RAsm *		3532900	0					
ANR	3533298	Identifier	a		3532900	1					
ANR	3533299	Parameter	ut8 * data	2694:28:70809:70817	3532900	1	True				
ANR	3533300	ParameterType	ut8 *		3532900	0					
ANR	3533301	Identifier	data		3532900	1					
ANR	3533302	Parameter	const Opcode * op	2694:39:70820:70835	3532900	2	True				
ANR	3533303	ParameterType	const Opcode *		3532900	0					
ANR	3533304	Identifier	op		3532900	1					
ANR	3533305	CFGEntryNode	ENTRY		3532900		True				
ANR	3533306	CFGExitNode	EXIT		3532900		True				
ANR	3533307	Symbol	strcmp		3532900						
ANR	3533308	Symbol	a		3532900						
ANR	3533309	Symbol	op		3532900						
ANR	3533310	Symbol	data		3532900						
ANR	3533311	Symbol	* op		3532900						
ANR	3533312	Symbol	op -> operands [ 1 ] . reg		3532900						
ANR	3533313	Symbol	op -> mnemonic		3532900						
ANR	3533314	Symbol	l		3532900						
ANR	3533315	Symbol	* * op		3532900						
ANR	3533316	Symbol	OT_FPUREG		3532900						
ANR	3533317	Symbol	strlen		3532900						
ANR	3533318	Symbol	* op -> operands		3532900						
ANR	3533319	Symbol	op -> operands [ 1 ] . type		3532900						
ANR	3533320	Symbol	op -> operands_count		3532900						
ANR	3533321	Symbol	~OT_REGALL		3532900						
ANR	3533322	Symbol	op -> operands [ 0 ] . type		3532900						
ANR	3533323	Symbol	op -> operands [ 0 ] . reg		3532900						
ANR	3533324	Symbol	fcmov		3532900						
ANR	3533325	Symbol	op -> operands		3532900						
ANR	3533326	Symbol	* data		3532900						
ANR	3533327	Function	opffree	2738:0:72045:72351							
ANR	3533328	FunctionDef	"opffree (RAsm * a , ut8 * data , const Opcode * op)"		3533327	0					
ANR	3533329	CompoundStatement		2738:57:72102:72351	3533327	0					
ANR	3533330	IdentifierDeclStatement	int l = 0 ;	2739:1:72105:72114	3533327	0	True				
ANR	3533331	IdentifierDecl	l = 0		3533327	0					
ANR	3533332	IdentifierDeclType	int		3533327	0					
ANR	3533333	Identifier	l		3533327	1					
ANR	3533334	AssignmentExpression	l = 0		3533327	2		=			
ANR	3533335	Identifier	l		3533327	0					
ANR	3533336	PrimaryExpression	0		3533327	1					
ANR	3533337	SwitchStatement	switch ( op -> operands_count )		3533327	1					
ANR	3533338	Condition	op -> operands_count	2740:9:72125:72142	3533327	0	True				
ANR	3533339	PtrMemberAccess	op -> operands_count		3533327	0					
ANR	3533340	Identifier	op		3533327	0					
ANR	3533341	Identifier	operands_count		3533327	1					
ANR	3533342	CompoundStatement		3:29:42:42	3533327	1					
ANR	3533343	Label	case 1 :	2741:1:72148:72154	3533327	0	True				
ANR	3533344	IfStatement	if ( op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL )		3533327	1					
ANR	3533345	Condition	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL	2742:6:72162:72206	3533327	0	True				
ANR	3533346	BitAndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL		3533327	0		&			
ANR	3533347	MemberAccess	op -> operands [ 0 ] . type		3533327	0					
ANR	3533348	ArrayIndexing	op -> operands [ 0 ]		3533327	0					
ANR	3533349	PtrMemberAccess	op -> operands		3533327	0					
ANR	3533350	Identifier	op		3533327	0					
ANR	3533351	Identifier	operands		3533327	1					
ANR	3533352	PrimaryExpression	0		3533327	1					
ANR	3533353	Identifier	type		3533327	1					
ANR	3533354	BitAndExpression	OT_FPUREG & ~OT_REGALL		3533327	1		&			
ANR	3533355	Identifier	OT_FPUREG		3533327	0					
ANR	3533356	Identifier	~OT_REGALL		3533327	1					
ANR	3533357	CompoundStatement		5:54:107:107	3533327	1					
ANR	3533358	ExpressionStatement	data [ l ++ ] = 0xdd	2743:3:72215:72231	3533327	0	True				
ANR	3533359	AssignmentExpression	data [ l ++ ] = 0xdd		3533327	0		=			
ANR	3533360	ArrayIndexing	data [ l ++ ]		3533327	0					
ANR	3533361	Identifier	data		3533327	0					
ANR	3533362	PostIncDecOperationExpression	l ++		3533327	1					
ANR	3533363	Identifier	l		3533327	0					
ANR	3533364	IncDec	++		3533327	1					
ANR	3533365	PrimaryExpression	0xdd		3533327	1					
ANR	3533366	ExpressionStatement	data [ l ++ ] = 0xc0 | op -> operands [ 0 ] . reg	2744:3:72236:72274	3533327	1	True				
ANR	3533367	AssignmentExpression	data [ l ++ ] = 0xc0 | op -> operands [ 0 ] . reg		3533327	0		=			
ANR	3533368	ArrayIndexing	data [ l ++ ]		3533327	0					
ANR	3533369	Identifier	data		3533327	0					
ANR	3533370	PostIncDecOperationExpression	l ++		3533327	1					
ANR	3533371	Identifier	l		3533327	0					
ANR	3533372	IncDec	++		3533327	1					
ANR	3533373	InclusiveOrExpression	0xc0 | op -> operands [ 0 ] . reg		3533327	1		|			
ANR	3533374	PrimaryExpression	0xc0		3533327	0					
ANR	3533375	MemberAccess	op -> operands [ 0 ] . reg		3533327	1					
ANR	3533376	ArrayIndexing	op -> operands [ 0 ]		3533327	0					
ANR	3533377	PtrMemberAccess	op -> operands		3533327	0					
ANR	3533378	Identifier	op		3533327	0					
ANR	3533379	Identifier	operands		3533327	1					
ANR	3533380	PrimaryExpression	0		3533327	1					
ANR	3533381	Identifier	reg		3533327	1					
ANR	3533382	ElseStatement	else		3533327	0					
ANR	3533383	CompoundStatement		8:9:182:182	3533327	0					
ANR	3533384	ReturnStatement	return - 1 ;	2746:3:72290:72299	3533327	0	True				
ANR	3533385	UnaryOperationExpression	- 1		3533327	0					
ANR	3533386	UnaryOperator	-		3533327	0					
ANR	3533387	PrimaryExpression	1		3533327	1					
ANR	3533388	BreakStatement	break ;	2748:2:72307:72312	3533327	2	True				
ANR	3533389	Label	default :	2749:1:72315:72322	3533327	3	True				
ANR	3533390	Identifier	default		3533327	0					
ANR	3533391	ReturnStatement	return - 1 ;	2750:2:72326:72335	3533327	4	True				
ANR	3533392	UnaryOperationExpression	- 1		3533327	0					
ANR	3533393	UnaryOperator	-		3533327	0					
ANR	3533394	PrimaryExpression	1		3533327	1					
ANR	3533395	ReturnStatement	return l ;	2752:1:72341:72349	3533327	2	True				
ANR	3533396	Identifier	l		3533327	0					
ANR	3533397	ReturnType	static int		3533327	1					
ANR	3533398	Identifier	opffree		3533327	2					
ANR	3533399	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3533327	3					
ANR	3533400	Parameter	RAsm * a	2738:19:72064:72070	3533327	0	True				
ANR	3533401	ParameterType	RAsm *		3533327	0					
ANR	3533402	Identifier	a		3533327	1					
ANR	3533403	Parameter	ut8 * data	2738:28:72073:72081	3533327	1	True				
ANR	3533404	ParameterType	ut8 *		3533327	0					
ANR	3533405	Identifier	data		3533327	1					
ANR	3533406	Parameter	const Opcode * op	2738:39:72084:72099	3533327	2	True				
ANR	3533407	ParameterType	const Opcode *		3533327	0					
ANR	3533408	Identifier	op		3533327	1					
ANR	3533409	CFGEntryNode	ENTRY		3533327		True				
ANR	3533410	CFGExitNode	EXIT		3533327		True				
ANR	3533411	Symbol	a		3533327						
ANR	3533412	Symbol	op		3533327						
ANR	3533413	Symbol	data		3533327						
ANR	3533414	Symbol	* op		3533327						
ANR	3533415	Symbol	l		3533327						
ANR	3533416	Symbol	* * op		3533327						
ANR	3533417	Symbol	OT_FPUREG		3533327						
ANR	3533418	Symbol	* op -> operands		3533327						
ANR	3533419	Symbol	op -> operands_count		3533327						
ANR	3533420	Symbol	~OT_REGALL		3533327						
ANR	3533421	Symbol	op -> operands [ 0 ] . type		3533327						
ANR	3533422	Symbol	op -> operands [ 0 ] . reg		3533327						
ANR	3533423	Symbol	op -> operands		3533327						
ANR	3533424	Symbol	* data		3533327						
ANR	3533425	Function	opfrstor	2755:0:72354:72651							
ANR	3533426	FunctionDef	"opfrstor (RAsm * a , ut8 * data , const Opcode * op)"		3533425	0					
ANR	3533427	CompoundStatement		2755:58:72412:72651	3533425	0					
ANR	3533428	IdentifierDeclStatement	int l = 0 ;	2756:1:72415:72424	3533425	0	True				
ANR	3533429	IdentifierDecl	l = 0		3533425	0					
ANR	3533430	IdentifierDeclType	int		3533425	0					
ANR	3533431	Identifier	l		3533425	1					
ANR	3533432	AssignmentExpression	l = 0		3533425	2		=			
ANR	3533433	Identifier	l		3533425	0					
ANR	3533434	PrimaryExpression	0		3533425	1					
ANR	3533435	SwitchStatement	switch ( op -> operands_count )		3533425	1					
ANR	3533436	Condition	op -> operands_count	2757:9:72435:72452	3533425	0	True				
ANR	3533437	PtrMemberAccess	op -> operands_count		3533425	0					
ANR	3533438	Identifier	op		3533425	0					
ANR	3533439	Identifier	operands_count		3533425	1					
ANR	3533440	CompoundStatement		3:29:42:42	3533425	1					
ANR	3533441	Label	case 1 :	2758:1:72458:72464	3533425	0	True				
ANR	3533442	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3533425	1					
ANR	3533443	Condition	op -> operands [ 0 ] . type & OT_MEMORY	2759:6:72472:72503	3533425	0	True				
ANR	3533444	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3533425	0		&			
ANR	3533445	MemberAccess	op -> operands [ 0 ] . type		3533425	0					
ANR	3533446	ArrayIndexing	op -> operands [ 0 ]		3533425	0					
ANR	3533447	PtrMemberAccess	op -> operands		3533425	0					
ANR	3533448	Identifier	op		3533425	0					
ANR	3533449	Identifier	operands		3533425	1					
ANR	3533450	PrimaryExpression	0		3533425	1					
ANR	3533451	Identifier	type		3533425	1					
ANR	3533452	Identifier	OT_MEMORY		3533425	1					
ANR	3533453	CompoundStatement		5:40:93:93	3533425	1					
ANR	3533454	ExpressionStatement	data [ l ++ ] = 0xdd	2760:3:72511:72527	3533425	0	True				
ANR	3533455	AssignmentExpression	data [ l ++ ] = 0xdd		3533425	0		=			
ANR	3533456	ArrayIndexing	data [ l ++ ]		3533425	0					
ANR	3533457	Identifier	data		3533425	0					
ANR	3533458	PostIncDecOperationExpression	l ++		3533425	1					
ANR	3533459	Identifier	l		3533425	0					
ANR	3533460	IncDec	++		3533425	1					
ANR	3533461	PrimaryExpression	0xdd		3533425	1					
ANR	3533462	ExpressionStatement	data [ l ++ ] = 0x20 | op -> operands [ 0 ] . regs [ 0 ]	2761:3:72532:72574	3533425	1	True				
ANR	3533463	AssignmentExpression	data [ l ++ ] = 0x20 | op -> operands [ 0 ] . regs [ 0 ]		3533425	0		=			
ANR	3533464	ArrayIndexing	data [ l ++ ]		3533425	0					
ANR	3533465	Identifier	data		3533425	0					
ANR	3533466	PostIncDecOperationExpression	l ++		3533425	1					
ANR	3533467	Identifier	l		3533425	0					
ANR	3533468	IncDec	++		3533425	1					
ANR	3533469	InclusiveOrExpression	0x20 | op -> operands [ 0 ] . regs [ 0 ]		3533425	1		|			
ANR	3533470	PrimaryExpression	0x20		3533425	0					
ANR	3533471	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3533425	1					
ANR	3533472	MemberAccess	op -> operands [ 0 ] . regs		3533425	0					
ANR	3533473	ArrayIndexing	op -> operands [ 0 ]		3533425	0					
ANR	3533474	PtrMemberAccess	op -> operands		3533425	0					
ANR	3533475	Identifier	op		3533425	0					
ANR	3533476	Identifier	operands		3533425	1					
ANR	3533477	PrimaryExpression	0		3533425	1					
ANR	3533478	Identifier	regs		3533425	1					
ANR	3533479	PrimaryExpression	0		3533425	1					
ANR	3533480	ElseStatement	else		3533425	0					
ANR	3533481	CompoundStatement		8:9:172:172	3533425	0					
ANR	3533482	ReturnStatement	return - 1 ;	2763:3:72590:72599	3533425	0	True				
ANR	3533483	UnaryOperationExpression	- 1		3533425	0					
ANR	3533484	UnaryOperator	-		3533425	0					
ANR	3533485	PrimaryExpression	1		3533425	1					
ANR	3533486	BreakStatement	break ;	2765:2:72607:72612	3533425	2	True				
ANR	3533487	Label	default :	2766:1:72615:72622	3533425	3	True				
ANR	3533488	Identifier	default		3533425	0					
ANR	3533489	ReturnStatement	return - 1 ;	2767:2:72626:72635	3533425	4	True				
ANR	3533490	UnaryOperationExpression	- 1		3533425	0					
ANR	3533491	UnaryOperator	-		3533425	0					
ANR	3533492	PrimaryExpression	1		3533425	1					
ANR	3533493	ReturnStatement	return l ;	2769:1:72641:72649	3533425	2	True				
ANR	3533494	Identifier	l		3533425	0					
ANR	3533495	ReturnType	static int		3533425	1					
ANR	3533496	Identifier	opfrstor		3533425	2					
ANR	3533497	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3533425	3					
ANR	3533498	Parameter	RAsm * a	2755:20:72374:72380	3533425	0	True				
ANR	3533499	ParameterType	RAsm *		3533425	0					
ANR	3533500	Identifier	a		3533425	1					
ANR	3533501	Parameter	ut8 * data	2755:29:72383:72391	3533425	1	True				
ANR	3533502	ParameterType	ut8 *		3533425	0					
ANR	3533503	Identifier	data		3533425	1					
ANR	3533504	Parameter	const Opcode * op	2755:40:72394:72409	3533425	2	True				
ANR	3533505	ParameterType	const Opcode *		3533425	0					
ANR	3533506	Identifier	op		3533425	1					
ANR	3533507	CFGEntryNode	ENTRY		3533425		True				
ANR	3533508	CFGExitNode	EXIT		3533425		True				
ANR	3533509	Symbol	a		3533425						
ANR	3533510	Symbol	op		3533425						
ANR	3533511	Symbol	data		3533425						
ANR	3533512	Symbol	* op		3533425						
ANR	3533513	Symbol	* * op -> operands		3533425						
ANR	3533514	Symbol	l		3533425						
ANR	3533515	Symbol	* * op		3533425						
ANR	3533516	Symbol	* op -> operands		3533425						
ANR	3533517	Symbol	op -> operands_count		3533425						
ANR	3533518	Symbol	* op -> operands [ 0 ] . regs		3533425						
ANR	3533519	Symbol	op -> operands [ 0 ] . type		3533425						
ANR	3533520	Symbol	* * * op		3533425						
ANR	3533521	Symbol	op -> operands		3533425						
ANR	3533522	Symbol	OT_MEMORY		3533425						
ANR	3533523	Symbol	* data		3533425						
ANR	3533524	Symbol	op -> operands [ 0 ] . regs		3533425						
ANR	3533525	Function	opfxch	2772:0:72654:73016							
ANR	3533526	FunctionDef	"opfxch (RAsm * a , ut8 * data , const Opcode * op)"		3533525	0					
ANR	3533527	CompoundStatement		2772:56:72710:73016	3533525	0					
ANR	3533528	IdentifierDeclStatement	int l = 0 ;	2773:1:72713:72722	3533525	0	True				
ANR	3533529	IdentifierDecl	l = 0		3533525	0					
ANR	3533530	IdentifierDeclType	int		3533525	0					
ANR	3533531	Identifier	l		3533525	1					
ANR	3533532	AssignmentExpression	l = 0		3533525	2		=			
ANR	3533533	Identifier	l		3533525	0					
ANR	3533534	PrimaryExpression	0		3533525	1					
ANR	3533535	SwitchStatement	switch ( op -> operands_count )		3533525	1					
ANR	3533536	Condition	op -> operands_count	2774:9:72733:72750	3533525	0	True				
ANR	3533537	PtrMemberAccess	op -> operands_count		3533525	0					
ANR	3533538	Identifier	op		3533525	0					
ANR	3533539	Identifier	operands_count		3533525	1					
ANR	3533540	CompoundStatement		3:29:42:42	3533525	1					
ANR	3533541	Label	case 0 :	2775:1:72756:72762	3533525	0	True				
ANR	3533542	ExpressionStatement	data [ l ++ ] = 0xd9	2776:2:72766:72782	3533525	1	True				
ANR	3533543	AssignmentExpression	data [ l ++ ] = 0xd9		3533525	0		=			
ANR	3533544	ArrayIndexing	data [ l ++ ]		3533525	0					
ANR	3533545	Identifier	data		3533525	0					
ANR	3533546	PostIncDecOperationExpression	l ++		3533525	1					
ANR	3533547	Identifier	l		3533525	0					
ANR	3533548	IncDec	++		3533525	1					
ANR	3533549	PrimaryExpression	0xd9		3533525	1					
ANR	3533550	ExpressionStatement	data [ l ++ ] = 0xc9	2777:2:72786:72802	3533525	2	True				
ANR	3533551	AssignmentExpression	data [ l ++ ] = 0xc9		3533525	0		=			
ANR	3533552	ArrayIndexing	data [ l ++ ]		3533525	0					
ANR	3533553	Identifier	data		3533525	0					
ANR	3533554	PostIncDecOperationExpression	l ++		3533525	1					
ANR	3533555	Identifier	l		3533525	0					
ANR	3533556	IncDec	++		3533525	1					
ANR	3533557	PrimaryExpression	0xc9		3533525	1					
ANR	3533558	BreakStatement	break ;	2778:2:72806:72811	3533525	3	True				
ANR	3533559	Label	case 1 :	2779:1:72814:72820	3533525	4	True				
ANR	3533560	IfStatement	if ( op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL )		3533525	5					
ANR	3533561	Condition	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL	2780:6:72828:72872	3533525	0	True				
ANR	3533562	BitAndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL		3533525	0		&			
ANR	3533563	MemberAccess	op -> operands [ 0 ] . type		3533525	0					
ANR	3533564	ArrayIndexing	op -> operands [ 0 ]		3533525	0					
ANR	3533565	PtrMemberAccess	op -> operands		3533525	0					
ANR	3533566	Identifier	op		3533525	0					
ANR	3533567	Identifier	operands		3533525	1					
ANR	3533568	PrimaryExpression	0		3533525	1					
ANR	3533569	Identifier	type		3533525	1					
ANR	3533570	BitAndExpression	OT_FPUREG & ~OT_REGALL		3533525	1		&			
ANR	3533571	Identifier	OT_FPUREG		3533525	0					
ANR	3533572	Identifier	~OT_REGALL		3533525	1					
ANR	3533573	CompoundStatement		9:53:164:164	3533525	1					
ANR	3533574	ExpressionStatement	data [ l ++ ] = 0xd9	2781:3:72880:72896	3533525	0	True				
ANR	3533575	AssignmentExpression	data [ l ++ ] = 0xd9		3533525	0		=			
ANR	3533576	ArrayIndexing	data [ l ++ ]		3533525	0					
ANR	3533577	Identifier	data		3533525	0					
ANR	3533578	PostIncDecOperationExpression	l ++		3533525	1					
ANR	3533579	Identifier	l		3533525	0					
ANR	3533580	IncDec	++		3533525	1					
ANR	3533581	PrimaryExpression	0xd9		3533525	1					
ANR	3533582	ExpressionStatement	data [ l ++ ] = 0xc8 | op -> operands [ 0 ] . reg	2782:3:72901:72939	3533525	1	True				
ANR	3533583	AssignmentExpression	data [ l ++ ] = 0xc8 | op -> operands [ 0 ] . reg		3533525	0		=			
ANR	3533584	ArrayIndexing	data [ l ++ ]		3533525	0					
ANR	3533585	Identifier	data		3533525	0					
ANR	3533586	PostIncDecOperationExpression	l ++		3533525	1					
ANR	3533587	Identifier	l		3533525	0					
ANR	3533588	IncDec	++		3533525	1					
ANR	3533589	InclusiveOrExpression	0xc8 | op -> operands [ 0 ] . reg		3533525	1		|			
ANR	3533590	PrimaryExpression	0xc8		3533525	0					
ANR	3533591	MemberAccess	op -> operands [ 0 ] . reg		3533525	1					
ANR	3533592	ArrayIndexing	op -> operands [ 0 ]		3533525	0					
ANR	3533593	PtrMemberAccess	op -> operands		3533525	0					
ANR	3533594	Identifier	op		3533525	0					
ANR	3533595	Identifier	operands		3533525	1					
ANR	3533596	PrimaryExpression	0		3533525	1					
ANR	3533597	Identifier	reg		3533525	1					
ANR	3533598	ElseStatement	else		3533525	0					
ANR	3533599	CompoundStatement		12:9:239:239	3533525	0					
ANR	3533600	ReturnStatement	return - 1 ;	2784:3:72955:72964	3533525	0	True				
ANR	3533601	UnaryOperationExpression	- 1		3533525	0					
ANR	3533602	UnaryOperator	-		3533525	0					
ANR	3533603	PrimaryExpression	1		3533525	1					
ANR	3533604	BreakStatement	break ;	2786:2:72972:72977	3533525	6	True				
ANR	3533605	Label	default :	2787:1:72980:72987	3533525	7	True				
ANR	3533606	Identifier	default		3533525	0					
ANR	3533607	ReturnStatement	return - 1 ;	2788:2:72991:73000	3533525	8	True				
ANR	3533608	UnaryOperationExpression	- 1		3533525	0					
ANR	3533609	UnaryOperator	-		3533525	0					
ANR	3533610	PrimaryExpression	1		3533525	1					
ANR	3533611	ReturnStatement	return l ;	2790:1:73006:73014	3533525	2	True				
ANR	3533612	Identifier	l		3533525	0					
ANR	3533613	ReturnType	static int		3533525	1					
ANR	3533614	Identifier	opfxch		3533525	2					
ANR	3533615	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3533525	3					
ANR	3533616	Parameter	RAsm * a	2772:18:72672:72678	3533525	0	True				
ANR	3533617	ParameterType	RAsm *		3533525	0					
ANR	3533618	Identifier	a		3533525	1					
ANR	3533619	Parameter	ut8 * data	2772:27:72681:72689	3533525	1	True				
ANR	3533620	ParameterType	ut8 *		3533525	0					
ANR	3533621	Identifier	data		3533525	1					
ANR	3533622	Parameter	const Opcode * op	2772:38:72692:72707	3533525	2	True				
ANR	3533623	ParameterType	const Opcode *		3533525	0					
ANR	3533624	Identifier	op		3533525	1					
ANR	3533625	CFGEntryNode	ENTRY		3533525		True				
ANR	3533626	CFGExitNode	EXIT		3533525		True				
ANR	3533627	Symbol	a		3533525						
ANR	3533628	Symbol	op		3533525						
ANR	3533629	Symbol	data		3533525						
ANR	3533630	Symbol	* op		3533525						
ANR	3533631	Symbol	l		3533525						
ANR	3533632	Symbol	* * op		3533525						
ANR	3533633	Symbol	OT_FPUREG		3533525						
ANR	3533634	Symbol	* op -> operands		3533525						
ANR	3533635	Symbol	op -> operands_count		3533525						
ANR	3533636	Symbol	~OT_REGALL		3533525						
ANR	3533637	Symbol	op -> operands [ 0 ] . type		3533525						
ANR	3533638	Symbol	op -> operands [ 0 ] . reg		3533525						
ANR	3533639	Symbol	op -> operands		3533525						
ANR	3533640	Symbol	* data		3533525						
ANR	3533641	Function	opfucom	2793:0:73019:73384							
ANR	3533642	FunctionDef	"opfucom (RAsm * a , ut8 * data , const Opcode * op)"		3533641	0					
ANR	3533643	CompoundStatement		2793:57:73076:73384	3533641	0					
ANR	3533644	IdentifierDeclStatement	int l = 0 ;	2794:1:73079:73088	3533641	0	True				
ANR	3533645	IdentifierDecl	l = 0		3533641	0					
ANR	3533646	IdentifierDeclType	int		3533641	0					
ANR	3533647	Identifier	l		3533641	1					
ANR	3533648	AssignmentExpression	l = 0		3533641	2		=			
ANR	3533649	Identifier	l		3533641	0					
ANR	3533650	PrimaryExpression	0		3533641	1					
ANR	3533651	SwitchStatement	switch ( op -> operands_count )		3533641	1					
ANR	3533652	Condition	op -> operands_count	2795:9:73099:73116	3533641	0	True				
ANR	3533653	PtrMemberAccess	op -> operands_count		3533641	0					
ANR	3533654	Identifier	op		3533641	0					
ANR	3533655	Identifier	operands_count		3533641	1					
ANR	3533656	CompoundStatement		3:29:42:42	3533641	1					
ANR	3533657	Label	case 1 :	2796:1:73122:73128	3533641	0	True				
ANR	3533658	IfStatement	if ( op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL )		3533641	1					
ANR	3533659	Condition	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL	2797:7:73137:73181	3533641	0	True				
ANR	3533660	BitAndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL		3533641	0		&			
ANR	3533661	MemberAccess	op -> operands [ 0 ] . type		3533641	0					
ANR	3533662	ArrayIndexing	op -> operands [ 0 ]		3533641	0					
ANR	3533663	PtrMemberAccess	op -> operands		3533641	0					
ANR	3533664	Identifier	op		3533641	0					
ANR	3533665	Identifier	operands		3533641	1					
ANR	3533666	PrimaryExpression	0		3533641	1					
ANR	3533667	Identifier	type		3533641	1					
ANR	3533668	BitAndExpression	OT_FPUREG & ~OT_REGALL		3533641	1		&			
ANR	3533669	Identifier	OT_FPUREG		3533641	0					
ANR	3533670	Identifier	~OT_REGALL		3533641	1					
ANR	3533671	CompoundStatement		5:55:108:108	3533641	1					
ANR	3533672	ExpressionStatement	data [ l ++ ] = 0xdd	2798:3:73190:73206	3533641	0	True				
ANR	3533673	AssignmentExpression	data [ l ++ ] = 0xdd		3533641	0		=			
ANR	3533674	ArrayIndexing	data [ l ++ ]		3533641	0					
ANR	3533675	Identifier	data		3533641	0					
ANR	3533676	PostIncDecOperationExpression	l ++		3533641	1					
ANR	3533677	Identifier	l		3533641	0					
ANR	3533678	IncDec	++		3533641	1					
ANR	3533679	PrimaryExpression	0xdd		3533641	1					
ANR	3533680	ExpressionStatement	data [ l ++ ] = 0xe0 | op -> operands [ 0 ] . reg	2799:3:73211:73249	3533641	1	True				
ANR	3533681	AssignmentExpression	data [ l ++ ] = 0xe0 | op -> operands [ 0 ] . reg		3533641	0		=			
ANR	3533682	ArrayIndexing	data [ l ++ ]		3533641	0					
ANR	3533683	Identifier	data		3533641	0					
ANR	3533684	PostIncDecOperationExpression	l ++		3533641	1					
ANR	3533685	Identifier	l		3533641	0					
ANR	3533686	IncDec	++		3533641	1					
ANR	3533687	InclusiveOrExpression	0xe0 | op -> operands [ 0 ] . reg		3533641	1		|			
ANR	3533688	PrimaryExpression	0xe0		3533641	0					
ANR	3533689	MemberAccess	op -> operands [ 0 ] . reg		3533641	1					
ANR	3533690	ArrayIndexing	op -> operands [ 0 ]		3533641	0					
ANR	3533691	PtrMemberAccess	op -> operands		3533641	0					
ANR	3533692	Identifier	op		3533641	0					
ANR	3533693	Identifier	operands		3533641	1					
ANR	3533694	PrimaryExpression	0		3533641	1					
ANR	3533695	Identifier	reg		3533641	1					
ANR	3533696	ElseStatement	else		3533641	0					
ANR	3533697	CompoundStatement		8:9:183:183	3533641	0					
ANR	3533698	ReturnStatement	return - 1 ;	2801:3:73265:73274	3533641	0	True				
ANR	3533699	UnaryOperationExpression	- 1		3533641	0					
ANR	3533700	UnaryOperator	-		3533641	0					
ANR	3533701	PrimaryExpression	1		3533641	1					
ANR	3533702	BreakStatement	break ;	2803:2:73282:73287	3533641	2	True				
ANR	3533703	Label	case 0 :	2804:1:73290:73296	3533641	3	True				
ANR	3533704	ExpressionStatement	data [ l ++ ] = 0xdd	2805:2:73300:73316	3533641	4	True				
ANR	3533705	AssignmentExpression	data [ l ++ ] = 0xdd		3533641	0		=			
ANR	3533706	ArrayIndexing	data [ l ++ ]		3533641	0					
ANR	3533707	Identifier	data		3533641	0					
ANR	3533708	PostIncDecOperationExpression	l ++		3533641	1					
ANR	3533709	Identifier	l		3533641	0					
ANR	3533710	IncDec	++		3533641	1					
ANR	3533711	PrimaryExpression	0xdd		3533641	1					
ANR	3533712	ExpressionStatement	data [ l ++ ] = 0xe1	2806:2:73320:73336	3533641	5	True				
ANR	3533713	AssignmentExpression	data [ l ++ ] = 0xe1		3533641	0		=			
ANR	3533714	ArrayIndexing	data [ l ++ ]		3533641	0					
ANR	3533715	Identifier	data		3533641	0					
ANR	3533716	PostIncDecOperationExpression	l ++		3533641	1					
ANR	3533717	Identifier	l		3533641	0					
ANR	3533718	IncDec	++		3533641	1					
ANR	3533719	PrimaryExpression	0xe1		3533641	1					
ANR	3533720	BreakStatement	break ;	2807:2:73340:73345	3533641	6	True				
ANR	3533721	Label	default :	2808:1:73348:73355	3533641	7	True				
ANR	3533722	Identifier	default		3533641	0					
ANR	3533723	ReturnStatement	return - 1 ;	2809:2:73359:73368	3533641	8	True				
ANR	3533724	UnaryOperationExpression	- 1		3533641	0					
ANR	3533725	UnaryOperator	-		3533641	0					
ANR	3533726	PrimaryExpression	1		3533641	1					
ANR	3533727	ReturnStatement	return l ;	2811:1:73374:73382	3533641	2	True				
ANR	3533728	Identifier	l		3533641	0					
ANR	3533729	ReturnType	static int		3533641	1					
ANR	3533730	Identifier	opfucom		3533641	2					
ANR	3533731	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3533641	3					
ANR	3533732	Parameter	RAsm * a	2793:19:73038:73044	3533641	0	True				
ANR	3533733	ParameterType	RAsm *		3533641	0					
ANR	3533734	Identifier	a		3533641	1					
ANR	3533735	Parameter	ut8 * data	2793:28:73047:73055	3533641	1	True				
ANR	3533736	ParameterType	ut8 *		3533641	0					
ANR	3533737	Identifier	data		3533641	1					
ANR	3533738	Parameter	const Opcode * op	2793:39:73058:73073	3533641	2	True				
ANR	3533739	ParameterType	const Opcode *		3533641	0					
ANR	3533740	Identifier	op		3533641	1					
ANR	3533741	CFGEntryNode	ENTRY		3533641		True				
ANR	3533742	CFGExitNode	EXIT		3533641		True				
ANR	3533743	Symbol	a		3533641						
ANR	3533744	Symbol	op		3533641						
ANR	3533745	Symbol	data		3533641						
ANR	3533746	Symbol	* op		3533641						
ANR	3533747	Symbol	l		3533641						
ANR	3533748	Symbol	* * op		3533641						
ANR	3533749	Symbol	OT_FPUREG		3533641						
ANR	3533750	Symbol	* op -> operands		3533641						
ANR	3533751	Symbol	op -> operands_count		3533641						
ANR	3533752	Symbol	op -> operands [ 0 ] . type		3533641						
ANR	3533753	Symbol	~OT_REGALL		3533641						
ANR	3533754	Symbol	op -> operands [ 0 ] . reg		3533641						
ANR	3533755	Symbol	op -> operands		3533641						
ANR	3533756	Symbol	* data		3533641						
ANR	3533757	Function	opfucomp	2814:0:73387:73753							
ANR	3533758	FunctionDef	"opfucomp (RAsm * a , ut8 * data , const Opcode * op)"		3533757	0					
ANR	3533759	CompoundStatement		2814:58:73445:73753	3533757	0					
ANR	3533760	IdentifierDeclStatement	int l = 0 ;	2815:1:73448:73457	3533757	0	True				
ANR	3533761	IdentifierDecl	l = 0		3533757	0					
ANR	3533762	IdentifierDeclType	int		3533757	0					
ANR	3533763	Identifier	l		3533757	1					
ANR	3533764	AssignmentExpression	l = 0		3533757	2		=			
ANR	3533765	Identifier	l		3533757	0					
ANR	3533766	PrimaryExpression	0		3533757	1					
ANR	3533767	SwitchStatement	switch ( op -> operands_count )		3533757	1					
ANR	3533768	Condition	op -> operands_count	2816:9:73468:73485	3533757	0	True				
ANR	3533769	PtrMemberAccess	op -> operands_count		3533757	0					
ANR	3533770	Identifier	op		3533757	0					
ANR	3533771	Identifier	operands_count		3533757	1					
ANR	3533772	CompoundStatement		3:29:42:42	3533757	1					
ANR	3533773	Label	case 1 :	2817:1:73491:73497	3533757	0	True				
ANR	3533774	IfStatement	if ( op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL )		3533757	1					
ANR	3533775	Condition	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL	2818:7:73506:73550	3533757	0	True				
ANR	3533776	BitAndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL		3533757	0		&			
ANR	3533777	MemberAccess	op -> operands [ 0 ] . type		3533757	0					
ANR	3533778	ArrayIndexing	op -> operands [ 0 ]		3533757	0					
ANR	3533779	PtrMemberAccess	op -> operands		3533757	0					
ANR	3533780	Identifier	op		3533757	0					
ANR	3533781	Identifier	operands		3533757	1					
ANR	3533782	PrimaryExpression	0		3533757	1					
ANR	3533783	Identifier	type		3533757	1					
ANR	3533784	BitAndExpression	OT_FPUREG & ~OT_REGALL		3533757	1		&			
ANR	3533785	Identifier	OT_FPUREG		3533757	0					
ANR	3533786	Identifier	~OT_REGALL		3533757	1					
ANR	3533787	CompoundStatement		5:55:108:108	3533757	1					
ANR	3533788	ExpressionStatement	data [ l ++ ] = 0xdd	2819:3:73559:73575	3533757	0	True				
ANR	3533789	AssignmentExpression	data [ l ++ ] = 0xdd		3533757	0		=			
ANR	3533790	ArrayIndexing	data [ l ++ ]		3533757	0					
ANR	3533791	Identifier	data		3533757	0					
ANR	3533792	PostIncDecOperationExpression	l ++		3533757	1					
ANR	3533793	Identifier	l		3533757	0					
ANR	3533794	IncDec	++		3533757	1					
ANR	3533795	PrimaryExpression	0xdd		3533757	1					
ANR	3533796	ExpressionStatement	data [ l ++ ] = 0xe8 | op -> operands [ 0 ] . reg	2820:3:73580:73618	3533757	1	True				
ANR	3533797	AssignmentExpression	data [ l ++ ] = 0xe8 | op -> operands [ 0 ] . reg		3533757	0		=			
ANR	3533798	ArrayIndexing	data [ l ++ ]		3533757	0					
ANR	3533799	Identifier	data		3533757	0					
ANR	3533800	PostIncDecOperationExpression	l ++		3533757	1					
ANR	3533801	Identifier	l		3533757	0					
ANR	3533802	IncDec	++		3533757	1					
ANR	3533803	InclusiveOrExpression	0xe8 | op -> operands [ 0 ] . reg		3533757	1		|			
ANR	3533804	PrimaryExpression	0xe8		3533757	0					
ANR	3533805	MemberAccess	op -> operands [ 0 ] . reg		3533757	1					
ANR	3533806	ArrayIndexing	op -> operands [ 0 ]		3533757	0					
ANR	3533807	PtrMemberAccess	op -> operands		3533757	0					
ANR	3533808	Identifier	op		3533757	0					
ANR	3533809	Identifier	operands		3533757	1					
ANR	3533810	PrimaryExpression	0		3533757	1					
ANR	3533811	Identifier	reg		3533757	1					
ANR	3533812	ElseStatement	else		3533757	0					
ANR	3533813	CompoundStatement		8:9:183:183	3533757	0					
ANR	3533814	ReturnStatement	return - 1 ;	2822:3:73634:73643	3533757	0	True				
ANR	3533815	UnaryOperationExpression	- 1		3533757	0					
ANR	3533816	UnaryOperator	-		3533757	0					
ANR	3533817	PrimaryExpression	1		3533757	1					
ANR	3533818	BreakStatement	break ;	2824:2:73651:73656	3533757	2	True				
ANR	3533819	Label	case 0 :	2825:1:73659:73665	3533757	3	True				
ANR	3533820	ExpressionStatement	data [ l ++ ] = 0xdd	2826:2:73669:73685	3533757	4	True				
ANR	3533821	AssignmentExpression	data [ l ++ ] = 0xdd		3533757	0		=			
ANR	3533822	ArrayIndexing	data [ l ++ ]		3533757	0					
ANR	3533823	Identifier	data		3533757	0					
ANR	3533824	PostIncDecOperationExpression	l ++		3533757	1					
ANR	3533825	Identifier	l		3533757	0					
ANR	3533826	IncDec	++		3533757	1					
ANR	3533827	PrimaryExpression	0xdd		3533757	1					
ANR	3533828	ExpressionStatement	data [ l ++ ] = 0xe9	2827:2:73689:73705	3533757	5	True				
ANR	3533829	AssignmentExpression	data [ l ++ ] = 0xe9		3533757	0		=			
ANR	3533830	ArrayIndexing	data [ l ++ ]		3533757	0					
ANR	3533831	Identifier	data		3533757	0					
ANR	3533832	PostIncDecOperationExpression	l ++		3533757	1					
ANR	3533833	Identifier	l		3533757	0					
ANR	3533834	IncDec	++		3533757	1					
ANR	3533835	PrimaryExpression	0xe9		3533757	1					
ANR	3533836	BreakStatement	break ;	2828:2:73709:73714	3533757	6	True				
ANR	3533837	Label	default :	2829:1:73717:73724	3533757	7	True				
ANR	3533838	Identifier	default		3533757	0					
ANR	3533839	ReturnStatement	return - 1 ;	2830:2:73728:73737	3533757	8	True				
ANR	3533840	UnaryOperationExpression	- 1		3533757	0					
ANR	3533841	UnaryOperator	-		3533757	0					
ANR	3533842	PrimaryExpression	1		3533757	1					
ANR	3533843	ReturnStatement	return l ;	2832:1:73743:73751	3533757	2	True				
ANR	3533844	Identifier	l		3533757	0					
ANR	3533845	ReturnType	static int		3533757	1					
ANR	3533846	Identifier	opfucomp		3533757	2					
ANR	3533847	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3533757	3					
ANR	3533848	Parameter	RAsm * a	2814:20:73407:73413	3533757	0	True				
ANR	3533849	ParameterType	RAsm *		3533757	0					
ANR	3533850	Identifier	a		3533757	1					
ANR	3533851	Parameter	ut8 * data	2814:29:73416:73424	3533757	1	True				
ANR	3533852	ParameterType	ut8 *		3533757	0					
ANR	3533853	Identifier	data		3533757	1					
ANR	3533854	Parameter	const Opcode * op	2814:40:73427:73442	3533757	2	True				
ANR	3533855	ParameterType	const Opcode *		3533757	0					
ANR	3533856	Identifier	op		3533757	1					
ANR	3533857	CFGEntryNode	ENTRY		3533757		True				
ANR	3533858	CFGExitNode	EXIT		3533757		True				
ANR	3533859	Symbol	a		3533757						
ANR	3533860	Symbol	op		3533757						
ANR	3533861	Symbol	data		3533757						
ANR	3533862	Symbol	* op		3533757						
ANR	3533863	Symbol	l		3533757						
ANR	3533864	Symbol	* * op		3533757						
ANR	3533865	Symbol	OT_FPUREG		3533757						
ANR	3533866	Symbol	* op -> operands		3533757						
ANR	3533867	Symbol	op -> operands_count		3533757						
ANR	3533868	Symbol	~OT_REGALL		3533757						
ANR	3533869	Symbol	op -> operands [ 0 ] . type		3533757						
ANR	3533870	Symbol	op -> operands [ 0 ] . reg		3533757						
ANR	3533871	Symbol	op -> operands		3533757						
ANR	3533872	Symbol	* data		3533757						
ANR	3533873	Function	opfaddp	2835:0:73756:74205							
ANR	3533874	FunctionDef	"opfaddp (RAsm * a , ut8 * data , const Opcode * op)"		3533873	0					
ANR	3533875	CompoundStatement		2835:57:73813:74205	3533873	0					
ANR	3533876	IdentifierDeclStatement	int l = 0 ;	2836:1:73816:73825	3533873	0	True				
ANR	3533877	IdentifierDecl	l = 0		3533873	0					
ANR	3533878	IdentifierDeclType	int		3533873	0					
ANR	3533879	Identifier	l		3533873	1					
ANR	3533880	AssignmentExpression	l = 0		3533873	2		=			
ANR	3533881	Identifier	l		3533873	0					
ANR	3533882	PrimaryExpression	0		3533873	1					
ANR	3533883	SwitchStatement	switch ( op -> operands_count )		3533873	1					
ANR	3533884	Condition	op -> operands_count	2837:9:73836:73853	3533873	0	True				
ANR	3533885	PtrMemberAccess	op -> operands_count		3533873	0					
ANR	3533886	Identifier	op		3533873	0					
ANR	3533887	Identifier	operands_count		3533873	1					
ANR	3533888	CompoundStatement		3:29:42:42	3533873	1					
ANR	3533889	Label	case 2 :	2838:1:73859:73865	3533873	0	True				
ANR	3533890	IfStatement	if ( op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0 )		3533873	1					
ANR	3533891	Condition	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0	2839:7:73874:74002	3533873	0	True				
ANR	3533892	AndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		3533873	0		&&			
ANR	3533893	BitAndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL		3533873	0		&			
ANR	3533894	MemberAccess	op -> operands [ 0 ] . type		3533873	0					
ANR	3533895	ArrayIndexing	op -> operands [ 0 ]		3533873	0					
ANR	3533896	PtrMemberAccess	op -> operands		3533873	0					
ANR	3533897	Identifier	op		3533873	0					
ANR	3533898	Identifier	operands		3533873	1					
ANR	3533899	PrimaryExpression	0		3533873	1					
ANR	3533900	Identifier	type		3533873	1					
ANR	3533901	BitAndExpression	OT_FPUREG & ~OT_REGALL		3533873	1		&			
ANR	3533902	Identifier	OT_FPUREG		3533873	0					
ANR	3533903	Identifier	~OT_REGALL		3533873	1					
ANR	3533904	AndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		3533873	1		&&			
ANR	3533905	BitAndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		3533873	0		&			
ANR	3533906	MemberAccess	op -> operands [ 1 ] . type		3533873	0					
ANR	3533907	ArrayIndexing	op -> operands [ 1 ]		3533873	0					
ANR	3533908	PtrMemberAccess	op -> operands		3533873	0					
ANR	3533909	Identifier	op		3533873	0					
ANR	3533910	Identifier	operands		3533873	1					
ANR	3533911	PrimaryExpression	1		3533873	1					
ANR	3533912	Identifier	type		3533873	1					
ANR	3533913	BitAndExpression	OT_FPUREG & ~OT_REGALL		3533873	1		&			
ANR	3533914	Identifier	OT_FPUREG		3533873	0					
ANR	3533915	Identifier	~OT_REGALL		3533873	1					
ANR	3533916	EqualityExpression	op -> operands [ 1 ] . reg == 0		3533873	1		==			
ANR	3533917	MemberAccess	op -> operands [ 1 ] . reg		3533873	0					
ANR	3533918	ArrayIndexing	op -> operands [ 1 ]		3533873	0					
ANR	3533919	PtrMemberAccess	op -> operands		3533873	0					
ANR	3533920	Identifier	op		3533873	0					
ANR	3533921	Identifier	operands		3533873	1					
ANR	3533922	PrimaryExpression	1		3533873	1					
ANR	3533923	Identifier	reg		3533873	1					
ANR	3533924	PrimaryExpression	0		3533873	1					
ANR	3533925	CompoundStatement		6:83:192:192	3533873	1					
ANR	3533926	ExpressionStatement	data [ l ++ ] = 0xde	2841:3:74011:74027	3533873	0	True				
ANR	3533927	AssignmentExpression	data [ l ++ ] = 0xde		3533873	0		=			
ANR	3533928	ArrayIndexing	data [ l ++ ]		3533873	0					
ANR	3533929	Identifier	data		3533873	0					
ANR	3533930	PostIncDecOperationExpression	l ++		3533873	1					
ANR	3533931	Identifier	l		3533873	0					
ANR	3533932	IncDec	++		3533873	1					
ANR	3533933	PrimaryExpression	0xde		3533873	1					
ANR	3533934	ExpressionStatement	data [ l ++ ] = 0xc0 | op -> operands [ 0 ] . reg	2842:3:74032:74070	3533873	1	True				
ANR	3533935	AssignmentExpression	data [ l ++ ] = 0xc0 | op -> operands [ 0 ] . reg		3533873	0		=			
ANR	3533936	ArrayIndexing	data [ l ++ ]		3533873	0					
ANR	3533937	Identifier	data		3533873	0					
ANR	3533938	PostIncDecOperationExpression	l ++		3533873	1					
ANR	3533939	Identifier	l		3533873	0					
ANR	3533940	IncDec	++		3533873	1					
ANR	3533941	InclusiveOrExpression	0xc0 | op -> operands [ 0 ] . reg		3533873	1		|			
ANR	3533942	PrimaryExpression	0xc0		3533873	0					
ANR	3533943	MemberAccess	op -> operands [ 0 ] . reg		3533873	1					
ANR	3533944	ArrayIndexing	op -> operands [ 0 ]		3533873	0					
ANR	3533945	PtrMemberAccess	op -> operands		3533873	0					
ANR	3533946	Identifier	op		3533873	0					
ANR	3533947	Identifier	operands		3533873	1					
ANR	3533948	PrimaryExpression	0		3533873	1					
ANR	3533949	Identifier	reg		3533873	1					
ANR	3533950	ElseStatement	else		3533873	0					
ANR	3533951	CompoundStatement		9:9:267:267	3533873	0					
ANR	3533952	ReturnStatement	return - 1 ;	2844:3:74086:74095	3533873	0	True				
ANR	3533953	UnaryOperationExpression	- 1		3533873	0					
ANR	3533954	UnaryOperator	-		3533873	0					
ANR	3533955	PrimaryExpression	1		3533873	1					
ANR	3533956	BreakStatement	break ;	2846:2:74103:74108	3533873	2	True				
ANR	3533957	Label	case 0 :	2847:1:74111:74117	3533873	3	True				
ANR	3533958	ExpressionStatement	data [ l ++ ] = 0xde	2848:2:74121:74137	3533873	4	True				
ANR	3533959	AssignmentExpression	data [ l ++ ] = 0xde		3533873	0		=			
ANR	3533960	ArrayIndexing	data [ l ++ ]		3533873	0					
ANR	3533961	Identifier	data		3533873	0					
ANR	3533962	PostIncDecOperationExpression	l ++		3533873	1					
ANR	3533963	Identifier	l		3533873	0					
ANR	3533964	IncDec	++		3533873	1					
ANR	3533965	PrimaryExpression	0xde		3533873	1					
ANR	3533966	ExpressionStatement	data [ l ++ ] = 0xc1	2849:2:74141:74157	3533873	5	True				
ANR	3533967	AssignmentExpression	data [ l ++ ] = 0xc1		3533873	0		=			
ANR	3533968	ArrayIndexing	data [ l ++ ]		3533873	0					
ANR	3533969	Identifier	data		3533873	0					
ANR	3533970	PostIncDecOperationExpression	l ++		3533873	1					
ANR	3533971	Identifier	l		3533873	0					
ANR	3533972	IncDec	++		3533873	1					
ANR	3533973	PrimaryExpression	0xc1		3533873	1					
ANR	3533974	BreakStatement	break ;	2850:2:74161:74166	3533873	6	True				
ANR	3533975	Label	default :	2851:1:74169:74176	3533873	7	True				
ANR	3533976	Identifier	default		3533873	0					
ANR	3533977	ReturnStatement	return - 1 ;	2852:2:74180:74189	3533873	8	True				
ANR	3533978	UnaryOperationExpression	- 1		3533873	0					
ANR	3533979	UnaryOperator	-		3533873	0					
ANR	3533980	PrimaryExpression	1		3533873	1					
ANR	3533981	ReturnStatement	return l ;	2854:1:74195:74203	3533873	2	True				
ANR	3533982	Identifier	l		3533873	0					
ANR	3533983	ReturnType	static int		3533873	1					
ANR	3533984	Identifier	opfaddp		3533873	2					
ANR	3533985	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3533873	3					
ANR	3533986	Parameter	RAsm * a	2835:19:73775:73781	3533873	0	True				
ANR	3533987	ParameterType	RAsm *		3533873	0					
ANR	3533988	Identifier	a		3533873	1					
ANR	3533989	Parameter	ut8 * data	2835:28:73784:73792	3533873	1	True				
ANR	3533990	ParameterType	ut8 *		3533873	0					
ANR	3533991	Identifier	data		3533873	1					
ANR	3533992	Parameter	const Opcode * op	2835:39:73795:73810	3533873	2	True				
ANR	3533993	ParameterType	const Opcode *		3533873	0					
ANR	3533994	Identifier	op		3533873	1					
ANR	3533995	CFGEntryNode	ENTRY		3533873		True				
ANR	3533996	CFGExitNode	EXIT		3533873		True				
ANR	3533997	Symbol	a		3533873						
ANR	3533998	Symbol	op		3533873						
ANR	3533999	Symbol	data		3533873						
ANR	3534000	Symbol	* op		3533873						
ANR	3534001	Symbol	op -> operands [ 1 ] . reg		3533873						
ANR	3534002	Symbol	l		3533873						
ANR	3534003	Symbol	* * op		3533873						
ANR	3534004	Symbol	OT_FPUREG		3533873						
ANR	3534005	Symbol	* op -> operands		3533873						
ANR	3534006	Symbol	op -> operands [ 1 ] . type		3533873						
ANR	3534007	Symbol	op -> operands_count		3533873						
ANR	3534008	Symbol	op -> operands [ 0 ] . type		3533873						
ANR	3534009	Symbol	~OT_REGALL		3533873						
ANR	3534010	Symbol	op -> operands [ 0 ] . reg		3533873						
ANR	3534011	Symbol	op -> operands		3533873						
ANR	3534012	Symbol	* data		3533873						
ANR	3534013	Function	opfiadd	2857:0:74208:74704							
ANR	3534014	FunctionDef	"opfiadd (RAsm * a , ut8 * data , const Opcode * op)"		3534013	0					
ANR	3534015	CompoundStatement		2857:57:74265:74704	3534013	0					
ANR	3534016	IdentifierDeclStatement	int l = 0 ;	2858:1:74268:74277	3534013	0	True				
ANR	3534017	IdentifierDecl	l = 0		3534013	0					
ANR	3534018	IdentifierDeclType	int		3534013	0					
ANR	3534019	Identifier	l		3534013	1					
ANR	3534020	AssignmentExpression	l = 0		3534013	2		=			
ANR	3534021	Identifier	l		3534013	0					
ANR	3534022	PrimaryExpression	0		3534013	1					
ANR	3534023	SwitchStatement	switch ( op -> operands_count )		3534013	1					
ANR	3534024	Condition	op -> operands_count	2859:9:74288:74305	3534013	0	True				
ANR	3534025	PtrMemberAccess	op -> operands_count		3534013	0					
ANR	3534026	Identifier	op		3534013	0					
ANR	3534027	Identifier	operands_count		3534013	1					
ANR	3534028	CompoundStatement		3:29:42:42	3534013	1					
ANR	3534029	Label	case 1 :	2860:1:74311:74317	3534013	0	True				
ANR	3534030	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3534013	1					
ANR	3534031	Condition	op -> operands [ 0 ] . type & OT_MEMORY	2861:7:74326:74357	3534013	0	True				
ANR	3534032	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3534013	0		&			
ANR	3534033	MemberAccess	op -> operands [ 0 ] . type		3534013	0					
ANR	3534034	ArrayIndexing	op -> operands [ 0 ]		3534013	0					
ANR	3534035	PtrMemberAccess	op -> operands		3534013	0					
ANR	3534036	Identifier	op		3534013	0					
ANR	3534037	Identifier	operands		3534013	1					
ANR	3534038	PrimaryExpression	0		3534013	1					
ANR	3534039	Identifier	type		3534013	1					
ANR	3534040	Identifier	OT_MEMORY		3534013	1					
ANR	3534041	CompoundStatement		5:42:95:95	3534013	1					
ANR	3534042	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		3534013	0					
ANR	3534043	Condition	op -> operands [ 0 ] . type & OT_WORD	2862:8:74371:74400	3534013	0	True				
ANR	3534044	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		3534013	0		&			
ANR	3534045	MemberAccess	op -> operands [ 0 ] . type		3534013	0					
ANR	3534046	ArrayIndexing	op -> operands [ 0 ]		3534013	0					
ANR	3534047	PtrMemberAccess	op -> operands		3534013	0					
ANR	3534048	Identifier	op		3534013	0					
ANR	3534049	Identifier	operands		3534013	1					
ANR	3534050	PrimaryExpression	0		3534013	1					
ANR	3534051	Identifier	type		3534013	1					
ANR	3534052	Identifier	OT_WORD		3534013	1					
ANR	3534053	CompoundStatement		6:41:138:138	3534013	1					
ANR	3534054	ExpressionStatement	data [ l ++ ] = 0xde	2863:4:74410:74426	3534013	0	True				
ANR	3534055	AssignmentExpression	data [ l ++ ] = 0xde		3534013	0		=			
ANR	3534056	ArrayIndexing	data [ l ++ ]		3534013	0					
ANR	3534057	Identifier	data		3534013	0					
ANR	3534058	PostIncDecOperationExpression	l ++		3534013	1					
ANR	3534059	Identifier	l		3534013	0					
ANR	3534060	IncDec	++		3534013	1					
ANR	3534061	PrimaryExpression	0xde		3534013	1					
ANR	3534062	ExpressionStatement	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . regs [ 0 ]	2864:4:74432:74474	3534013	1	True				
ANR	3534063	AssignmentExpression	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . regs [ 0 ]		3534013	0		=			
ANR	3534064	ArrayIndexing	data [ l ++ ]		3534013	0					
ANR	3534065	Identifier	data		3534013	0					
ANR	3534066	PostIncDecOperationExpression	l ++		3534013	1					
ANR	3534067	Identifier	l		3534013	0					
ANR	3534068	IncDec	++		3534013	1					
ANR	3534069	InclusiveOrExpression	0x00 | op -> operands [ 0 ] . regs [ 0 ]		3534013	1		|			
ANR	3534070	PrimaryExpression	0x00		3534013	0					
ANR	3534071	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3534013	1					
ANR	3534072	MemberAccess	op -> operands [ 0 ] . regs		3534013	0					
ANR	3534073	ArrayIndexing	op -> operands [ 0 ]		3534013	0					
ANR	3534074	PtrMemberAccess	op -> operands		3534013	0					
ANR	3534075	Identifier	op		3534013	0					
ANR	3534076	Identifier	operands		3534013	1					
ANR	3534077	PrimaryExpression	0		3534013	1					
ANR	3534078	Identifier	regs		3534013	1					
ANR	3534079	PrimaryExpression	0		3534013	1					
ANR	3534080	ElseStatement	else		3534013	0					
ANR	3534081	IfStatement	if ( op -> operands [ 0 ] . type & OT_DWORD )		3534013	0					
ANR	3534082	Condition	op -> operands [ 0 ] . type & OT_DWORD	2865:15:74491:74521	3534013	0	True				
ANR	3534083	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		3534013	0		&			
ANR	3534084	MemberAccess	op -> operands [ 0 ] . type		3534013	0					
ANR	3534085	ArrayIndexing	op -> operands [ 0 ]		3534013	0					
ANR	3534086	PtrMemberAccess	op -> operands		3534013	0					
ANR	3534087	Identifier	op		3534013	0					
ANR	3534088	Identifier	operands		3534013	1					
ANR	3534089	PrimaryExpression	0		3534013	1					
ANR	3534090	Identifier	type		3534013	1					
ANR	3534091	Identifier	OT_DWORD		3534013	1					
ANR	3534092	CompoundStatement		9:49:259:259	3534013	1					
ANR	3534093	ExpressionStatement	data [ l ++ ] = 0xda	2866:4:74531:74547	3534013	0	True				
ANR	3534094	AssignmentExpression	data [ l ++ ] = 0xda		3534013	0		=			
ANR	3534095	ArrayIndexing	data [ l ++ ]		3534013	0					
ANR	3534096	Identifier	data		3534013	0					
ANR	3534097	PostIncDecOperationExpression	l ++		3534013	1					
ANR	3534098	Identifier	l		3534013	0					
ANR	3534099	IncDec	++		3534013	1					
ANR	3534100	PrimaryExpression	0xda		3534013	1					
ANR	3534101	ExpressionStatement	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . regs [ 0 ]	2867:4:74553:74595	3534013	1	True				
ANR	3534102	AssignmentExpression	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . regs [ 0 ]		3534013	0		=			
ANR	3534103	ArrayIndexing	data [ l ++ ]		3534013	0					
ANR	3534104	Identifier	data		3534013	0					
ANR	3534105	PostIncDecOperationExpression	l ++		3534013	1					
ANR	3534106	Identifier	l		3534013	0					
ANR	3534107	IncDec	++		3534013	1					
ANR	3534108	InclusiveOrExpression	0x00 | op -> operands [ 0 ] . regs [ 0 ]		3534013	1		|			
ANR	3534109	PrimaryExpression	0x00		3534013	0					
ANR	3534110	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3534013	1					
ANR	3534111	MemberAccess	op -> operands [ 0 ] . regs		3534013	0					
ANR	3534112	ArrayIndexing	op -> operands [ 0 ]		3534013	0					
ANR	3534113	PtrMemberAccess	op -> operands		3534013	0					
ANR	3534114	Identifier	op		3534013	0					
ANR	3534115	Identifier	operands		3534013	1					
ANR	3534116	PrimaryExpression	0		3534013	1					
ANR	3534117	Identifier	regs		3534013	1					
ANR	3534118	PrimaryExpression	0		3534013	1					
ANR	3534119	ElseStatement	else		3534013	0					
ANR	3534120	CompoundStatement		12:10:341:341	3534013	0					
ANR	3534121	ReturnStatement	return - 1 ;	2869:4:74613:74622	3534013	0	True				
ANR	3534122	UnaryOperationExpression	- 1		3534013	0					
ANR	3534123	UnaryOperator	-		3534013	0					
ANR	3534124	PrimaryExpression	1		3534013	1					
ANR	3534125	ElseStatement	else		3534013	0					
ANR	3534126	CompoundStatement		15:9:372:372	3534013	0					
ANR	3534127	ReturnStatement	return - 1 ;	2872:3:74643:74652	3534013	0	True				
ANR	3534128	UnaryOperationExpression	- 1		3534013	0					
ANR	3534129	UnaryOperator	-		3534013	0					
ANR	3534130	PrimaryExpression	1		3534013	1					
ANR	3534131	BreakStatement	break ;	2874:2:74660:74665	3534013	2	True				
ANR	3534132	Label	default :	2875:1:74668:74675	3534013	3	True				
ANR	3534133	Identifier	default		3534013	0					
ANR	3534134	ReturnStatement	return - 1 ;	2876:2:74679:74688	3534013	4	True				
ANR	3534135	UnaryOperationExpression	- 1		3534013	0					
ANR	3534136	UnaryOperator	-		3534013	0					
ANR	3534137	PrimaryExpression	1		3534013	1					
ANR	3534138	ReturnStatement	return l ;	2878:1:74694:74702	3534013	2	True				
ANR	3534139	Identifier	l		3534013	0					
ANR	3534140	ReturnType	static int		3534013	1					
ANR	3534141	Identifier	opfiadd		3534013	2					
ANR	3534142	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3534013	3					
ANR	3534143	Parameter	RAsm * a	2857:19:74227:74233	3534013	0	True				
ANR	3534144	ParameterType	RAsm *		3534013	0					
ANR	3534145	Identifier	a		3534013	1					
ANR	3534146	Parameter	ut8 * data	2857:28:74236:74244	3534013	1	True				
ANR	3534147	ParameterType	ut8 *		3534013	0					
ANR	3534148	Identifier	data		3534013	1					
ANR	3534149	Parameter	const Opcode * op	2857:39:74247:74262	3534013	2	True				
ANR	3534150	ParameterType	const Opcode *		3534013	0					
ANR	3534151	Identifier	op		3534013	1					
ANR	3534152	CFGEntryNode	ENTRY		3534013		True				
ANR	3534153	CFGExitNode	EXIT		3534013		True				
ANR	3534154	Symbol	a		3534013						
ANR	3534155	Symbol	op		3534013						
ANR	3534156	Symbol	OT_WORD		3534013						
ANR	3534157	Symbol	data		3534013						
ANR	3534158	Symbol	* op		3534013						
ANR	3534159	Symbol	* * op -> operands		3534013						
ANR	3534160	Symbol	l		3534013						
ANR	3534161	Symbol	* * op		3534013						
ANR	3534162	Symbol	* op -> operands		3534013						
ANR	3534163	Symbol	op -> operands_count		3534013						
ANR	3534164	Symbol	* op -> operands [ 0 ] . regs		3534013						
ANR	3534165	Symbol	op -> operands [ 0 ] . type		3534013						
ANR	3534166	Symbol	* * * op		3534013						
ANR	3534167	Symbol	op -> operands		3534013						
ANR	3534168	Symbol	OT_MEMORY		3534013						
ANR	3534169	Symbol	* data		3534013						
ANR	3534170	Symbol	op -> operands [ 0 ] . regs		3534013						
ANR	3534171	Symbol	OT_DWORD		3534013						
ANR	3534172	Function	opfadd	2881:0:74707:75667							
ANR	3534173	FunctionDef	"opfadd (RAsm * a , ut8 * data , const Opcode * op)"		3534172	0					
ANR	3534174	CompoundStatement		2881:56:74763:75667	3534172	0					
ANR	3534175	IdentifierDeclStatement	int l = 0 ;	2882:1:74766:74775	3534172	0	True				
ANR	3534176	IdentifierDecl	l = 0		3534172	0					
ANR	3534177	IdentifierDeclType	int		3534172	0					
ANR	3534178	Identifier	l		3534172	1					
ANR	3534179	AssignmentExpression	l = 0		3534172	2		=			
ANR	3534180	Identifier	l		3534172	0					
ANR	3534181	PrimaryExpression	0		3534172	1					
ANR	3534182	SwitchStatement	switch ( op -> operands_count )		3534172	1					
ANR	3534183	Condition	op -> operands_count	2883:9:74786:74803	3534172	0	True				
ANR	3534184	PtrMemberAccess	op -> operands_count		3534172	0					
ANR	3534185	Identifier	op		3534172	0					
ANR	3534186	Identifier	operands_count		3534172	1					
ANR	3534187	CompoundStatement		3:29:42:42	3534172	1					
ANR	3534188	Label	case 1 :	2884:1:74809:74815	3534172	0	True				
ANR	3534189	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3534172	1					
ANR	3534190	Condition	op -> operands [ 0 ] . type & OT_MEMORY	2885:7:74824:74855	3534172	0	True				
ANR	3534191	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3534172	0		&			
ANR	3534192	MemberAccess	op -> operands [ 0 ] . type		3534172	0					
ANR	3534193	ArrayIndexing	op -> operands [ 0 ]		3534172	0					
ANR	3534194	PtrMemberAccess	op -> operands		3534172	0					
ANR	3534195	Identifier	op		3534172	0					
ANR	3534196	Identifier	operands		3534172	1					
ANR	3534197	PrimaryExpression	0		3534172	1					
ANR	3534198	Identifier	type		3534172	1					
ANR	3534199	Identifier	OT_MEMORY		3534172	1					
ANR	3534200	CompoundStatement		5:42:95:95	3534172	1					
ANR	3534201	IfStatement	if ( op -> operands [ 0 ] . type & OT_QWORD )		3534172	0					
ANR	3534202	Condition	op -> operands [ 0 ] . type & OT_QWORD	2886:8:74869:74899	3534172	0	True				
ANR	3534203	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		3534172	0		&			
ANR	3534204	MemberAccess	op -> operands [ 0 ] . type		3534172	0					
ANR	3534205	ArrayIndexing	op -> operands [ 0 ]		3534172	0					
ANR	3534206	PtrMemberAccess	op -> operands		3534172	0					
ANR	3534207	Identifier	op		3534172	0					
ANR	3534208	Identifier	operands		3534172	1					
ANR	3534209	PrimaryExpression	0		3534172	1					
ANR	3534210	Identifier	type		3534172	1					
ANR	3534211	Identifier	OT_QWORD		3534172	1					
ANR	3534212	CompoundStatement		6:42:139:139	3534172	1					
ANR	3534213	ExpressionStatement	data [ l ++ ] = 0xdc	2887:4:74909:74925	3534172	0	True				
ANR	3534214	AssignmentExpression	data [ l ++ ] = 0xdc		3534172	0		=			
ANR	3534215	ArrayIndexing	data [ l ++ ]		3534172	0					
ANR	3534216	Identifier	data		3534172	0					
ANR	3534217	PostIncDecOperationExpression	l ++		3534172	1					
ANR	3534218	Identifier	l		3534172	0					
ANR	3534219	IncDec	++		3534172	1					
ANR	3534220	PrimaryExpression	0xdc		3534172	1					
ANR	3534221	ExpressionStatement	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . regs [ 0 ]	2888:4:74931:74973	3534172	1	True				
ANR	3534222	AssignmentExpression	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . regs [ 0 ]		3534172	0		=			
ANR	3534223	ArrayIndexing	data [ l ++ ]		3534172	0					
ANR	3534224	Identifier	data		3534172	0					
ANR	3534225	PostIncDecOperationExpression	l ++		3534172	1					
ANR	3534226	Identifier	l		3534172	0					
ANR	3534227	IncDec	++		3534172	1					
ANR	3534228	InclusiveOrExpression	0x00 | op -> operands [ 0 ] . regs [ 0 ]		3534172	1		|			
ANR	3534229	PrimaryExpression	0x00		3534172	0					
ANR	3534230	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3534172	1					
ANR	3534231	MemberAccess	op -> operands [ 0 ] . regs		3534172	0					
ANR	3534232	ArrayIndexing	op -> operands [ 0 ]		3534172	0					
ANR	3534233	PtrMemberAccess	op -> operands		3534172	0					
ANR	3534234	Identifier	op		3534172	0					
ANR	3534235	Identifier	operands		3534172	1					
ANR	3534236	PrimaryExpression	0		3534172	1					
ANR	3534237	Identifier	regs		3534172	1					
ANR	3534238	PrimaryExpression	0		3534172	1					
ANR	3534239	ElseStatement	else		3534172	0					
ANR	3534240	IfStatement	if ( op -> operands [ 0 ] . type & OT_DWORD )		3534172	0					
ANR	3534241	Condition	op -> operands [ 0 ] . type & OT_DWORD	2889:15:74990:75020	3534172	0	True				
ANR	3534242	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		3534172	0		&			
ANR	3534243	MemberAccess	op -> operands [ 0 ] . type		3534172	0					
ANR	3534244	ArrayIndexing	op -> operands [ 0 ]		3534172	0					
ANR	3534245	PtrMemberAccess	op -> operands		3534172	0					
ANR	3534246	Identifier	op		3534172	0					
ANR	3534247	Identifier	operands		3534172	1					
ANR	3534248	PrimaryExpression	0		3534172	1					
ANR	3534249	Identifier	type		3534172	1					
ANR	3534250	Identifier	OT_DWORD		3534172	1					
ANR	3534251	CompoundStatement		9:49:260:260	3534172	1					
ANR	3534252	ExpressionStatement	data [ l ++ ] = 0xd8	2890:4:75030:75046	3534172	0	True				
ANR	3534253	AssignmentExpression	data [ l ++ ] = 0xd8		3534172	0		=			
ANR	3534254	ArrayIndexing	data [ l ++ ]		3534172	0					
ANR	3534255	Identifier	data		3534172	0					
ANR	3534256	PostIncDecOperationExpression	l ++		3534172	1					
ANR	3534257	Identifier	l		3534172	0					
ANR	3534258	IncDec	++		3534172	1					
ANR	3534259	PrimaryExpression	0xd8		3534172	1					
ANR	3534260	ExpressionStatement	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . regs [ 0 ]	2891:4:75052:75094	3534172	1	True				
ANR	3534261	AssignmentExpression	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . regs [ 0 ]		3534172	0		=			
ANR	3534262	ArrayIndexing	data [ l ++ ]		3534172	0					
ANR	3534263	Identifier	data		3534172	0					
ANR	3534264	PostIncDecOperationExpression	l ++		3534172	1					
ANR	3534265	Identifier	l		3534172	0					
ANR	3534266	IncDec	++		3534172	1					
ANR	3534267	InclusiveOrExpression	0x00 | op -> operands [ 0 ] . regs [ 0 ]		3534172	1		|			
ANR	3534268	PrimaryExpression	0x00		3534172	0					
ANR	3534269	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3534172	1					
ANR	3534270	MemberAccess	op -> operands [ 0 ] . regs		3534172	0					
ANR	3534271	ArrayIndexing	op -> operands [ 0 ]		3534172	0					
ANR	3534272	PtrMemberAccess	op -> operands		3534172	0					
ANR	3534273	Identifier	op		3534172	0					
ANR	3534274	Identifier	operands		3534172	1					
ANR	3534275	PrimaryExpression	0		3534172	1					
ANR	3534276	Identifier	regs		3534172	1					
ANR	3534277	PrimaryExpression	0		3534172	1					
ANR	3534278	ElseStatement	else		3534172	0					
ANR	3534279	CompoundStatement		12:10:342:342	3534172	0					
ANR	3534280	ReturnStatement	return - 1 ;	2893:4:75112:75121	3534172	0	True				
ANR	3534281	UnaryOperationExpression	- 1		3534172	0					
ANR	3534282	UnaryOperator	-		3534172	0					
ANR	3534283	PrimaryExpression	1		3534172	1					
ANR	3534284	ElseStatement	else		3534172	0					
ANR	3534285	CompoundStatement		15:9:373:373	3534172	0					
ANR	3534286	ReturnStatement	return - 1 ;	2896:3:75142:75151	3534172	0	True				
ANR	3534287	UnaryOperationExpression	- 1		3534172	0					
ANR	3534288	UnaryOperator	-		3534172	0					
ANR	3534289	PrimaryExpression	1		3534172	1					
ANR	3534290	BreakStatement	break ;	2898:2:75159:75164	3534172	2	True				
ANR	3534291	Label	case 2 :	2899:1:75167:75173	3534172	3	True				
ANR	3534292	IfStatement	if ( op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL )		3534172	4					
ANR	3534293	Condition	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL	2900:7:75182:75310	3534172	0	True				
ANR	3534294	AndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		3534172	0		&&			
ANR	3534295	BitAndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL		3534172	0		&			
ANR	3534296	MemberAccess	op -> operands [ 0 ] . type		3534172	0					
ANR	3534297	ArrayIndexing	op -> operands [ 0 ]		3534172	0					
ANR	3534298	PtrMemberAccess	op -> operands		3534172	0					
ANR	3534299	Identifier	op		3534172	0					
ANR	3534300	Identifier	operands		3534172	1					
ANR	3534301	PrimaryExpression	0		3534172	1					
ANR	3534302	Identifier	type		3534172	1					
ANR	3534303	BitAndExpression	OT_FPUREG & ~OT_REGALL		3534172	1		&			
ANR	3534304	Identifier	OT_FPUREG		3534172	0					
ANR	3534305	Identifier	~OT_REGALL		3534172	1					
ANR	3534306	AndExpression	op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		3534172	1		&&			
ANR	3534307	EqualityExpression	op -> operands [ 0 ] . reg == 0		3534172	0		==			
ANR	3534308	MemberAccess	op -> operands [ 0 ] . reg		3534172	0					
ANR	3534309	ArrayIndexing	op -> operands [ 0 ]		3534172	0					
ANR	3534310	PtrMemberAccess	op -> operands		3534172	0					
ANR	3534311	Identifier	op		3534172	0					
ANR	3534312	Identifier	operands		3534172	1					
ANR	3534313	PrimaryExpression	0		3534172	1					
ANR	3534314	Identifier	reg		3534172	1					
ANR	3534315	PrimaryExpression	0		3534172	1					
ANR	3534316	BitAndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		3534172	1		&			
ANR	3534317	MemberAccess	op -> operands [ 1 ] . type		3534172	0					
ANR	3534318	ArrayIndexing	op -> operands [ 1 ]		3534172	0					
ANR	3534319	PtrMemberAccess	op -> operands		3534172	0					
ANR	3534320	Identifier	op		3534172	0					
ANR	3534321	Identifier	operands		3534172	1					
ANR	3534322	PrimaryExpression	1		3534172	1					
ANR	3534323	Identifier	type		3534172	1					
ANR	3534324	BitAndExpression	OT_FPUREG & ~OT_REGALL		3534172	1		&			
ANR	3534325	Identifier	OT_FPUREG		3534172	0					
ANR	3534326	Identifier	~OT_REGALL		3534172	1					
ANR	3534327	CompoundStatement		21:55:550:550	3534172	1					
ANR	3534328	ExpressionStatement	data [ l ++ ] = 0xd8	2902:3:75319:75335	3534172	0	True				
ANR	3534329	AssignmentExpression	data [ l ++ ] = 0xd8		3534172	0		=			
ANR	3534330	ArrayIndexing	data [ l ++ ]		3534172	0					
ANR	3534331	Identifier	data		3534172	0					
ANR	3534332	PostIncDecOperationExpression	l ++		3534172	1					
ANR	3534333	Identifier	l		3534172	0					
ANR	3534334	IncDec	++		3534172	1					
ANR	3534335	PrimaryExpression	0xd8		3534172	1					
ANR	3534336	ExpressionStatement	data [ l ++ ] = 0xc0 | op -> operands [ 1 ] . reg	2903:3:75340:75378	3534172	1	True				
ANR	3534337	AssignmentExpression	data [ l ++ ] = 0xc0 | op -> operands [ 1 ] . reg		3534172	0		=			
ANR	3534338	ArrayIndexing	data [ l ++ ]		3534172	0					
ANR	3534339	Identifier	data		3534172	0					
ANR	3534340	PostIncDecOperationExpression	l ++		3534172	1					
ANR	3534341	Identifier	l		3534172	0					
ANR	3534342	IncDec	++		3534172	1					
ANR	3534343	InclusiveOrExpression	0xc0 | op -> operands [ 1 ] . reg		3534172	1		|			
ANR	3534344	PrimaryExpression	0xc0		3534172	0					
ANR	3534345	MemberAccess	op -> operands [ 1 ] . reg		3534172	1					
ANR	3534346	ArrayIndexing	op -> operands [ 1 ]		3534172	0					
ANR	3534347	PtrMemberAccess	op -> operands		3534172	0					
ANR	3534348	Identifier	op		3534172	0					
ANR	3534349	Identifier	operands		3534172	1					
ANR	3534350	PrimaryExpression	1		3534172	1					
ANR	3534351	Identifier	reg		3534172	1					
ANR	3534352	ElseStatement	else		3534172	0					
ANR	3534353	IfStatement	if ( op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0 )		3534172	0					
ANR	3534354	Condition	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0	2904:14:75394:75522	3534172	0	True				
ANR	3534355	AndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		3534172	0		&&			
ANR	3534356	BitAndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL		3534172	0		&			
ANR	3534357	MemberAccess	op -> operands [ 0 ] . type		3534172	0					
ANR	3534358	ArrayIndexing	op -> operands [ 0 ]		3534172	0					
ANR	3534359	PtrMemberAccess	op -> operands		3534172	0					
ANR	3534360	Identifier	op		3534172	0					
ANR	3534361	Identifier	operands		3534172	1					
ANR	3534362	PrimaryExpression	0		3534172	1					
ANR	3534363	Identifier	type		3534172	1					
ANR	3534364	BitAndExpression	OT_FPUREG & ~OT_REGALL		3534172	1		&			
ANR	3534365	Identifier	OT_FPUREG		3534172	0					
ANR	3534366	Identifier	~OT_REGALL		3534172	1					
ANR	3534367	AndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		3534172	1		&&			
ANR	3534368	BitAndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		3534172	0		&			
ANR	3534369	MemberAccess	op -> operands [ 1 ] . type		3534172	0					
ANR	3534370	ArrayIndexing	op -> operands [ 1 ]		3534172	0					
ANR	3534371	PtrMemberAccess	op -> operands		3534172	0					
ANR	3534372	Identifier	op		3534172	0					
ANR	3534373	Identifier	operands		3534172	1					
ANR	3534374	PrimaryExpression	1		3534172	1					
ANR	3534375	Identifier	type		3534172	1					
ANR	3534376	BitAndExpression	OT_FPUREG & ~OT_REGALL		3534172	1		&			
ANR	3534377	Identifier	OT_FPUREG		3534172	0					
ANR	3534378	Identifier	~OT_REGALL		3534172	1					
ANR	3534379	EqualityExpression	op -> operands [ 1 ] . reg == 0		3534172	1		==			
ANR	3534380	MemberAccess	op -> operands [ 1 ] . reg		3534172	0					
ANR	3534381	ArrayIndexing	op -> operands [ 1 ]		3534172	0					
ANR	3534382	PtrMemberAccess	op -> operands		3534172	0					
ANR	3534383	Identifier	op		3534172	0					
ANR	3534384	Identifier	operands		3534172	1					
ANR	3534385	PrimaryExpression	1		3534172	1					
ANR	3534386	Identifier	reg		3534172	1					
ANR	3534387	PrimaryExpression	0		3534172	1					
ANR	3534388	CompoundStatement		25:83:762:762	3534172	1					
ANR	3534389	ExpressionStatement	data [ l ++ ] = 0xdc	2906:3:75531:75547	3534172	0	True				
ANR	3534390	AssignmentExpression	data [ l ++ ] = 0xdc		3534172	0		=			
ANR	3534391	ArrayIndexing	data [ l ++ ]		3534172	0					
ANR	3534392	Identifier	data		3534172	0					
ANR	3534393	PostIncDecOperationExpression	l ++		3534172	1					
ANR	3534394	Identifier	l		3534172	0					
ANR	3534395	IncDec	++		3534172	1					
ANR	3534396	PrimaryExpression	0xdc		3534172	1					
ANR	3534397	ExpressionStatement	data [ l ++ ] = 0xc0 | op -> operands [ 0 ] . reg	2907:3:75552:75590	3534172	1	True				
ANR	3534398	AssignmentExpression	data [ l ++ ] = 0xc0 | op -> operands [ 0 ] . reg		3534172	0		=			
ANR	3534399	ArrayIndexing	data [ l ++ ]		3534172	0					
ANR	3534400	Identifier	data		3534172	0					
ANR	3534401	PostIncDecOperationExpression	l ++		3534172	1					
ANR	3534402	Identifier	l		3534172	0					
ANR	3534403	IncDec	++		3534172	1					
ANR	3534404	InclusiveOrExpression	0xc0 | op -> operands [ 0 ] . reg		3534172	1		|			
ANR	3534405	PrimaryExpression	0xc0		3534172	0					
ANR	3534406	MemberAccess	op -> operands [ 0 ] . reg		3534172	1					
ANR	3534407	ArrayIndexing	op -> operands [ 0 ]		3534172	0					
ANR	3534408	PtrMemberAccess	op -> operands		3534172	0					
ANR	3534409	Identifier	op		3534172	0					
ANR	3534410	Identifier	operands		3534172	1					
ANR	3534411	PrimaryExpression	0		3534172	1					
ANR	3534412	Identifier	reg		3534172	1					
ANR	3534413	ElseStatement	else		3534172	0					
ANR	3534414	CompoundStatement		28:9:837:837	3534172	0					
ANR	3534415	ReturnStatement	return - 1 ;	2909:3:75606:75615	3534172	0	True				
ANR	3534416	UnaryOperationExpression	- 1		3534172	0					
ANR	3534417	UnaryOperator	-		3534172	0					
ANR	3534418	PrimaryExpression	1		3534172	1					
ANR	3534419	BreakStatement	break ;	2911:2:75623:75628	3534172	5	True				
ANR	3534420	Label	default :	2912:1:75631:75638	3534172	6	True				
ANR	3534421	Identifier	default		3534172	0					
ANR	3534422	ReturnStatement	return - 1 ;	2913:2:75642:75651	3534172	7	True				
ANR	3534423	UnaryOperationExpression	- 1		3534172	0					
ANR	3534424	UnaryOperator	-		3534172	0					
ANR	3534425	PrimaryExpression	1		3534172	1					
ANR	3534426	ReturnStatement	return l ;	2915:1:75657:75665	3534172	2	True				
ANR	3534427	Identifier	l		3534172	0					
ANR	3534428	ReturnType	static int		3534172	1					
ANR	3534429	Identifier	opfadd		3534172	2					
ANR	3534430	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3534172	3					
ANR	3534431	Parameter	RAsm * a	2881:18:74725:74731	3534172	0	True				
ANR	3534432	ParameterType	RAsm *		3534172	0					
ANR	3534433	Identifier	a		3534172	1					
ANR	3534434	Parameter	ut8 * data	2881:27:74734:74742	3534172	1	True				
ANR	3534435	ParameterType	ut8 *		3534172	0					
ANR	3534436	Identifier	data		3534172	1					
ANR	3534437	Parameter	const Opcode * op	2881:38:74745:74760	3534172	2	True				
ANR	3534438	ParameterType	const Opcode *		3534172	0					
ANR	3534439	Identifier	op		3534172	1					
ANR	3534440	CFGEntryNode	ENTRY		3534172		True				
ANR	3534441	CFGExitNode	EXIT		3534172		True				
ANR	3534442	Symbol	a		3534172						
ANR	3534443	Symbol	op		3534172						
ANR	3534444	Symbol	OT_QWORD		3534172						
ANR	3534445	Symbol	data		3534172						
ANR	3534446	Symbol	* op		3534172						
ANR	3534447	Symbol	op -> operands [ 1 ] . reg		3534172						
ANR	3534448	Symbol	* * op -> operands		3534172						
ANR	3534449	Symbol	l		3534172						
ANR	3534450	Symbol	* * op		3534172						
ANR	3534451	Symbol	OT_FPUREG		3534172						
ANR	3534452	Symbol	* op -> operands		3534172						
ANR	3534453	Symbol	op -> operands [ 1 ] . type		3534172						
ANR	3534454	Symbol	op -> operands_count		3534172						
ANR	3534455	Symbol	* op -> operands [ 0 ] . regs		3534172						
ANR	3534456	Symbol	op -> operands [ 0 ] . type		3534172						
ANR	3534457	Symbol	~OT_REGALL		3534172						
ANR	3534458	Symbol	* * * op		3534172						
ANR	3534459	Symbol	op -> operands [ 0 ] . reg		3534172						
ANR	3534460	Symbol	op -> operands		3534172						
ANR	3534461	Symbol	OT_MEMORY		3534172						
ANR	3534462	Symbol	* data		3534172						
ANR	3534463	Symbol	op -> operands [ 0 ] . regs		3534172						
ANR	3534464	Symbol	OT_DWORD		3534172						
ANR	3534465	Function	opficom	2918:0:75670:76166							
ANR	3534466	FunctionDef	"opficom (RAsm * a , ut8 * data , const Opcode * op)"		3534465	0					
ANR	3534467	CompoundStatement		2918:57:75727:76166	3534465	0					
ANR	3534468	IdentifierDeclStatement	int l = 0 ;	2919:1:75730:75739	3534465	0	True				
ANR	3534469	IdentifierDecl	l = 0		3534465	0					
ANR	3534470	IdentifierDeclType	int		3534465	0					
ANR	3534471	Identifier	l		3534465	1					
ANR	3534472	AssignmentExpression	l = 0		3534465	2		=			
ANR	3534473	Identifier	l		3534465	0					
ANR	3534474	PrimaryExpression	0		3534465	1					
ANR	3534475	SwitchStatement	switch ( op -> operands_count )		3534465	1					
ANR	3534476	Condition	op -> operands_count	2920:9:75750:75767	3534465	0	True				
ANR	3534477	PtrMemberAccess	op -> operands_count		3534465	0					
ANR	3534478	Identifier	op		3534465	0					
ANR	3534479	Identifier	operands_count		3534465	1					
ANR	3534480	CompoundStatement		3:29:42:42	3534465	1					
ANR	3534481	Label	case 1 :	2921:1:75773:75779	3534465	0	True				
ANR	3534482	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3534465	1					
ANR	3534483	Condition	op -> operands [ 0 ] . type & OT_MEMORY	2922:7:75788:75819	3534465	0	True				
ANR	3534484	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3534465	0		&			
ANR	3534485	MemberAccess	op -> operands [ 0 ] . type		3534465	0					
ANR	3534486	ArrayIndexing	op -> operands [ 0 ]		3534465	0					
ANR	3534487	PtrMemberAccess	op -> operands		3534465	0					
ANR	3534488	Identifier	op		3534465	0					
ANR	3534489	Identifier	operands		3534465	1					
ANR	3534490	PrimaryExpression	0		3534465	1					
ANR	3534491	Identifier	type		3534465	1					
ANR	3534492	Identifier	OT_MEMORY		3534465	1					
ANR	3534493	CompoundStatement		5:42:95:95	3534465	1					
ANR	3534494	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		3534465	0					
ANR	3534495	Condition	op -> operands [ 0 ] . type & OT_WORD	2923:8:75833:75862	3534465	0	True				
ANR	3534496	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		3534465	0		&			
ANR	3534497	MemberAccess	op -> operands [ 0 ] . type		3534465	0					
ANR	3534498	ArrayIndexing	op -> operands [ 0 ]		3534465	0					
ANR	3534499	PtrMemberAccess	op -> operands		3534465	0					
ANR	3534500	Identifier	op		3534465	0					
ANR	3534501	Identifier	operands		3534465	1					
ANR	3534502	PrimaryExpression	0		3534465	1					
ANR	3534503	Identifier	type		3534465	1					
ANR	3534504	Identifier	OT_WORD		3534465	1					
ANR	3534505	CompoundStatement		6:41:138:138	3534465	1					
ANR	3534506	ExpressionStatement	data [ l ++ ] = 0xde	2924:4:75872:75888	3534465	0	True				
ANR	3534507	AssignmentExpression	data [ l ++ ] = 0xde		3534465	0		=			
ANR	3534508	ArrayIndexing	data [ l ++ ]		3534465	0					
ANR	3534509	Identifier	data		3534465	0					
ANR	3534510	PostIncDecOperationExpression	l ++		3534465	1					
ANR	3534511	Identifier	l		3534465	0					
ANR	3534512	IncDec	++		3534465	1					
ANR	3534513	PrimaryExpression	0xde		3534465	1					
ANR	3534514	ExpressionStatement	data [ l ++ ] = 0x10 | op -> operands [ 0 ] . regs [ 0 ]	2925:4:75894:75936	3534465	1	True				
ANR	3534515	AssignmentExpression	data [ l ++ ] = 0x10 | op -> operands [ 0 ] . regs [ 0 ]		3534465	0		=			
ANR	3534516	ArrayIndexing	data [ l ++ ]		3534465	0					
ANR	3534517	Identifier	data		3534465	0					
ANR	3534518	PostIncDecOperationExpression	l ++		3534465	1					
ANR	3534519	Identifier	l		3534465	0					
ANR	3534520	IncDec	++		3534465	1					
ANR	3534521	InclusiveOrExpression	0x10 | op -> operands [ 0 ] . regs [ 0 ]		3534465	1		|			
ANR	3534522	PrimaryExpression	0x10		3534465	0					
ANR	3534523	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3534465	1					
ANR	3534524	MemberAccess	op -> operands [ 0 ] . regs		3534465	0					
ANR	3534525	ArrayIndexing	op -> operands [ 0 ]		3534465	0					
ANR	3534526	PtrMemberAccess	op -> operands		3534465	0					
ANR	3534527	Identifier	op		3534465	0					
ANR	3534528	Identifier	operands		3534465	1					
ANR	3534529	PrimaryExpression	0		3534465	1					
ANR	3534530	Identifier	regs		3534465	1					
ANR	3534531	PrimaryExpression	0		3534465	1					
ANR	3534532	ElseStatement	else		3534465	0					
ANR	3534533	IfStatement	if ( op -> operands [ 0 ] . type & OT_DWORD )		3534465	0					
ANR	3534534	Condition	op -> operands [ 0 ] . type & OT_DWORD	2926:15:75953:75983	3534465	0	True				
ANR	3534535	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		3534465	0		&			
ANR	3534536	MemberAccess	op -> operands [ 0 ] . type		3534465	0					
ANR	3534537	ArrayIndexing	op -> operands [ 0 ]		3534465	0					
ANR	3534538	PtrMemberAccess	op -> operands		3534465	0					
ANR	3534539	Identifier	op		3534465	0					
ANR	3534540	Identifier	operands		3534465	1					
ANR	3534541	PrimaryExpression	0		3534465	1					
ANR	3534542	Identifier	type		3534465	1					
ANR	3534543	Identifier	OT_DWORD		3534465	1					
ANR	3534544	CompoundStatement		9:49:259:259	3534465	1					
ANR	3534545	ExpressionStatement	data [ l ++ ] = 0xda	2927:4:75993:76009	3534465	0	True				
ANR	3534546	AssignmentExpression	data [ l ++ ] = 0xda		3534465	0		=			
ANR	3534547	ArrayIndexing	data [ l ++ ]		3534465	0					
ANR	3534548	Identifier	data		3534465	0					
ANR	3534549	PostIncDecOperationExpression	l ++		3534465	1					
ANR	3534550	Identifier	l		3534465	0					
ANR	3534551	IncDec	++		3534465	1					
ANR	3534552	PrimaryExpression	0xda		3534465	1					
ANR	3534553	ExpressionStatement	data [ l ++ ] = 0x10 | op -> operands [ 0 ] . regs [ 0 ]	2928:4:76015:76057	3534465	1	True				
ANR	3534554	AssignmentExpression	data [ l ++ ] = 0x10 | op -> operands [ 0 ] . regs [ 0 ]		3534465	0		=			
ANR	3534555	ArrayIndexing	data [ l ++ ]		3534465	0					
ANR	3534556	Identifier	data		3534465	0					
ANR	3534557	PostIncDecOperationExpression	l ++		3534465	1					
ANR	3534558	Identifier	l		3534465	0					
ANR	3534559	IncDec	++		3534465	1					
ANR	3534560	InclusiveOrExpression	0x10 | op -> operands [ 0 ] . regs [ 0 ]		3534465	1		|			
ANR	3534561	PrimaryExpression	0x10		3534465	0					
ANR	3534562	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3534465	1					
ANR	3534563	MemberAccess	op -> operands [ 0 ] . regs		3534465	0					
ANR	3534564	ArrayIndexing	op -> operands [ 0 ]		3534465	0					
ANR	3534565	PtrMemberAccess	op -> operands		3534465	0					
ANR	3534566	Identifier	op		3534465	0					
ANR	3534567	Identifier	operands		3534465	1					
ANR	3534568	PrimaryExpression	0		3534465	1					
ANR	3534569	Identifier	regs		3534465	1					
ANR	3534570	PrimaryExpression	0		3534465	1					
ANR	3534571	ElseStatement	else		3534465	0					
ANR	3534572	CompoundStatement		12:10:341:341	3534465	0					
ANR	3534573	ReturnStatement	return - 1 ;	2930:4:76075:76084	3534465	0	True				
ANR	3534574	UnaryOperationExpression	- 1		3534465	0					
ANR	3534575	UnaryOperator	-		3534465	0					
ANR	3534576	PrimaryExpression	1		3534465	1					
ANR	3534577	ElseStatement	else		3534465	0					
ANR	3534578	CompoundStatement		15:9:372:372	3534465	0					
ANR	3534579	ReturnStatement	return - 1 ;	2933:3:76105:76114	3534465	0	True				
ANR	3534580	UnaryOperationExpression	- 1		3534465	0					
ANR	3534581	UnaryOperator	-		3534465	0					
ANR	3534582	PrimaryExpression	1		3534465	1					
ANR	3534583	BreakStatement	break ;	2935:2:76122:76127	3534465	2	True				
ANR	3534584	Label	default :	2936:1:76130:76137	3534465	3	True				
ANR	3534585	Identifier	default		3534465	0					
ANR	3534586	ReturnStatement	return - 1 ;	2937:2:76141:76150	3534465	4	True				
ANR	3534587	UnaryOperationExpression	- 1		3534465	0					
ANR	3534588	UnaryOperator	-		3534465	0					
ANR	3534589	PrimaryExpression	1		3534465	1					
ANR	3534590	ReturnStatement	return l ;	2939:1:76156:76164	3534465	2	True				
ANR	3534591	Identifier	l		3534465	0					
ANR	3534592	ReturnType	static int		3534465	1					
ANR	3534593	Identifier	opficom		3534465	2					
ANR	3534594	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3534465	3					
ANR	3534595	Parameter	RAsm * a	2918:19:75689:75695	3534465	0	True				
ANR	3534596	ParameterType	RAsm *		3534465	0					
ANR	3534597	Identifier	a		3534465	1					
ANR	3534598	Parameter	ut8 * data	2918:28:75698:75706	3534465	1	True				
ANR	3534599	ParameterType	ut8 *		3534465	0					
ANR	3534600	Identifier	data		3534465	1					
ANR	3534601	Parameter	const Opcode * op	2918:39:75709:75724	3534465	2	True				
ANR	3534602	ParameterType	const Opcode *		3534465	0					
ANR	3534603	Identifier	op		3534465	1					
ANR	3534604	CFGEntryNode	ENTRY		3534465		True				
ANR	3534605	CFGExitNode	EXIT		3534465		True				
ANR	3534606	Symbol	a		3534465						
ANR	3534607	Symbol	op		3534465						
ANR	3534608	Symbol	OT_WORD		3534465						
ANR	3534609	Symbol	data		3534465						
ANR	3534610	Symbol	* op		3534465						
ANR	3534611	Symbol	* * op -> operands		3534465						
ANR	3534612	Symbol	l		3534465						
ANR	3534613	Symbol	* * op		3534465						
ANR	3534614	Symbol	* op -> operands		3534465						
ANR	3534615	Symbol	op -> operands_count		3534465						
ANR	3534616	Symbol	* op -> operands [ 0 ] . regs		3534465						
ANR	3534617	Symbol	op -> operands [ 0 ] . type		3534465						
ANR	3534618	Symbol	* * * op		3534465						
ANR	3534619	Symbol	op -> operands		3534465						
ANR	3534620	Symbol	OT_MEMORY		3534465						
ANR	3534621	Symbol	* data		3534465						
ANR	3534622	Symbol	op -> operands [ 0 ] . regs		3534465						
ANR	3534623	Symbol	OT_DWORD		3534465						
ANR	3534624	Function	opficomp	2942:0:76169:76666							
ANR	3534625	FunctionDef	"opficomp (RAsm * a , ut8 * data , const Opcode * op)"		3534624	0					
ANR	3534626	CompoundStatement		2942:58:76227:76666	3534624	0					
ANR	3534627	IdentifierDeclStatement	int l = 0 ;	2943:1:76230:76239	3534624	0	True				
ANR	3534628	IdentifierDecl	l = 0		3534624	0					
ANR	3534629	IdentifierDeclType	int		3534624	0					
ANR	3534630	Identifier	l		3534624	1					
ANR	3534631	AssignmentExpression	l = 0		3534624	2		=			
ANR	3534632	Identifier	l		3534624	0					
ANR	3534633	PrimaryExpression	0		3534624	1					
ANR	3534634	SwitchStatement	switch ( op -> operands_count )		3534624	1					
ANR	3534635	Condition	op -> operands_count	2944:9:76250:76267	3534624	0	True				
ANR	3534636	PtrMemberAccess	op -> operands_count		3534624	0					
ANR	3534637	Identifier	op		3534624	0					
ANR	3534638	Identifier	operands_count		3534624	1					
ANR	3534639	CompoundStatement		3:29:42:42	3534624	1					
ANR	3534640	Label	case 1 :	2945:1:76273:76279	3534624	0	True				
ANR	3534641	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3534624	1					
ANR	3534642	Condition	op -> operands [ 0 ] . type & OT_MEMORY	2946:7:76288:76319	3534624	0	True				
ANR	3534643	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3534624	0		&			
ANR	3534644	MemberAccess	op -> operands [ 0 ] . type		3534624	0					
ANR	3534645	ArrayIndexing	op -> operands [ 0 ]		3534624	0					
ANR	3534646	PtrMemberAccess	op -> operands		3534624	0					
ANR	3534647	Identifier	op		3534624	0					
ANR	3534648	Identifier	operands		3534624	1					
ANR	3534649	PrimaryExpression	0		3534624	1					
ANR	3534650	Identifier	type		3534624	1					
ANR	3534651	Identifier	OT_MEMORY		3534624	1					
ANR	3534652	CompoundStatement		5:42:95:95	3534624	1					
ANR	3534653	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		3534624	0					
ANR	3534654	Condition	op -> operands [ 0 ] . type & OT_WORD	2947:8:76333:76362	3534624	0	True				
ANR	3534655	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		3534624	0		&			
ANR	3534656	MemberAccess	op -> operands [ 0 ] . type		3534624	0					
ANR	3534657	ArrayIndexing	op -> operands [ 0 ]		3534624	0					
ANR	3534658	PtrMemberAccess	op -> operands		3534624	0					
ANR	3534659	Identifier	op		3534624	0					
ANR	3534660	Identifier	operands		3534624	1					
ANR	3534661	PrimaryExpression	0		3534624	1					
ANR	3534662	Identifier	type		3534624	1					
ANR	3534663	Identifier	OT_WORD		3534624	1					
ANR	3534664	CompoundStatement		6:41:138:138	3534624	1					
ANR	3534665	ExpressionStatement	data [ l ++ ] = 0xde	2948:4:76372:76388	3534624	0	True				
ANR	3534666	AssignmentExpression	data [ l ++ ] = 0xde		3534624	0		=			
ANR	3534667	ArrayIndexing	data [ l ++ ]		3534624	0					
ANR	3534668	Identifier	data		3534624	0					
ANR	3534669	PostIncDecOperationExpression	l ++		3534624	1					
ANR	3534670	Identifier	l		3534624	0					
ANR	3534671	IncDec	++		3534624	1					
ANR	3534672	PrimaryExpression	0xde		3534624	1					
ANR	3534673	ExpressionStatement	data [ l ++ ] = 0x18 | op -> operands [ 0 ] . regs [ 0 ]	2949:4:76394:76436	3534624	1	True				
ANR	3534674	AssignmentExpression	data [ l ++ ] = 0x18 | op -> operands [ 0 ] . regs [ 0 ]		3534624	0		=			
ANR	3534675	ArrayIndexing	data [ l ++ ]		3534624	0					
ANR	3534676	Identifier	data		3534624	0					
ANR	3534677	PostIncDecOperationExpression	l ++		3534624	1					
ANR	3534678	Identifier	l		3534624	0					
ANR	3534679	IncDec	++		3534624	1					
ANR	3534680	InclusiveOrExpression	0x18 | op -> operands [ 0 ] . regs [ 0 ]		3534624	1		|			
ANR	3534681	PrimaryExpression	0x18		3534624	0					
ANR	3534682	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3534624	1					
ANR	3534683	MemberAccess	op -> operands [ 0 ] . regs		3534624	0					
ANR	3534684	ArrayIndexing	op -> operands [ 0 ]		3534624	0					
ANR	3534685	PtrMemberAccess	op -> operands		3534624	0					
ANR	3534686	Identifier	op		3534624	0					
ANR	3534687	Identifier	operands		3534624	1					
ANR	3534688	PrimaryExpression	0		3534624	1					
ANR	3534689	Identifier	regs		3534624	1					
ANR	3534690	PrimaryExpression	0		3534624	1					
ANR	3534691	ElseStatement	else		3534624	0					
ANR	3534692	IfStatement	if ( op -> operands [ 0 ] . type & OT_DWORD )		3534624	0					
ANR	3534693	Condition	op -> operands [ 0 ] . type & OT_DWORD	2950:15:76453:76483	3534624	0	True				
ANR	3534694	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		3534624	0		&			
ANR	3534695	MemberAccess	op -> operands [ 0 ] . type		3534624	0					
ANR	3534696	ArrayIndexing	op -> operands [ 0 ]		3534624	0					
ANR	3534697	PtrMemberAccess	op -> operands		3534624	0					
ANR	3534698	Identifier	op		3534624	0					
ANR	3534699	Identifier	operands		3534624	1					
ANR	3534700	PrimaryExpression	0		3534624	1					
ANR	3534701	Identifier	type		3534624	1					
ANR	3534702	Identifier	OT_DWORD		3534624	1					
ANR	3534703	CompoundStatement		9:49:259:259	3534624	1					
ANR	3534704	ExpressionStatement	data [ l ++ ] = 0xda	2951:4:76493:76509	3534624	0	True				
ANR	3534705	AssignmentExpression	data [ l ++ ] = 0xda		3534624	0		=			
ANR	3534706	ArrayIndexing	data [ l ++ ]		3534624	0					
ANR	3534707	Identifier	data		3534624	0					
ANR	3534708	PostIncDecOperationExpression	l ++		3534624	1					
ANR	3534709	Identifier	l		3534624	0					
ANR	3534710	IncDec	++		3534624	1					
ANR	3534711	PrimaryExpression	0xda		3534624	1					
ANR	3534712	ExpressionStatement	data [ l ++ ] = 0x18 | op -> operands [ 0 ] . regs [ 0 ]	2952:4:76515:76557	3534624	1	True				
ANR	3534713	AssignmentExpression	data [ l ++ ] = 0x18 | op -> operands [ 0 ] . regs [ 0 ]		3534624	0		=			
ANR	3534714	ArrayIndexing	data [ l ++ ]		3534624	0					
ANR	3534715	Identifier	data		3534624	0					
ANR	3534716	PostIncDecOperationExpression	l ++		3534624	1					
ANR	3534717	Identifier	l		3534624	0					
ANR	3534718	IncDec	++		3534624	1					
ANR	3534719	InclusiveOrExpression	0x18 | op -> operands [ 0 ] . regs [ 0 ]		3534624	1		|			
ANR	3534720	PrimaryExpression	0x18		3534624	0					
ANR	3534721	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3534624	1					
ANR	3534722	MemberAccess	op -> operands [ 0 ] . regs		3534624	0					
ANR	3534723	ArrayIndexing	op -> operands [ 0 ]		3534624	0					
ANR	3534724	PtrMemberAccess	op -> operands		3534624	0					
ANR	3534725	Identifier	op		3534624	0					
ANR	3534726	Identifier	operands		3534624	1					
ANR	3534727	PrimaryExpression	0		3534624	1					
ANR	3534728	Identifier	regs		3534624	1					
ANR	3534729	PrimaryExpression	0		3534624	1					
ANR	3534730	ElseStatement	else		3534624	0					
ANR	3534731	CompoundStatement		12:10:341:341	3534624	0					
ANR	3534732	ReturnStatement	return - 1 ;	2954:4:76575:76584	3534624	0	True				
ANR	3534733	UnaryOperationExpression	- 1		3534624	0					
ANR	3534734	UnaryOperator	-		3534624	0					
ANR	3534735	PrimaryExpression	1		3534624	1					
ANR	3534736	ElseStatement	else		3534624	0					
ANR	3534737	CompoundStatement		15:9:372:372	3534624	0					
ANR	3534738	ReturnStatement	return - 1 ;	2957:3:76605:76614	3534624	0	True				
ANR	3534739	UnaryOperationExpression	- 1		3534624	0					
ANR	3534740	UnaryOperator	-		3534624	0					
ANR	3534741	PrimaryExpression	1		3534624	1					
ANR	3534742	BreakStatement	break ;	2959:2:76622:76627	3534624	2	True				
ANR	3534743	Label	default :	2960:1:76630:76637	3534624	3	True				
ANR	3534744	Identifier	default		3534624	0					
ANR	3534745	ReturnStatement	return - 1 ;	2961:2:76641:76650	3534624	4	True				
ANR	3534746	UnaryOperationExpression	- 1		3534624	0					
ANR	3534747	UnaryOperator	-		3534624	0					
ANR	3534748	PrimaryExpression	1		3534624	1					
ANR	3534749	ReturnStatement	return l ;	2963:1:76656:76664	3534624	2	True				
ANR	3534750	Identifier	l		3534624	0					
ANR	3534751	ReturnType	static int		3534624	1					
ANR	3534752	Identifier	opficomp		3534624	2					
ANR	3534753	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3534624	3					
ANR	3534754	Parameter	RAsm * a	2942:20:76189:76195	3534624	0	True				
ANR	3534755	ParameterType	RAsm *		3534624	0					
ANR	3534756	Identifier	a		3534624	1					
ANR	3534757	Parameter	ut8 * data	2942:29:76198:76206	3534624	1	True				
ANR	3534758	ParameterType	ut8 *		3534624	0					
ANR	3534759	Identifier	data		3534624	1					
ANR	3534760	Parameter	const Opcode * op	2942:40:76209:76224	3534624	2	True				
ANR	3534761	ParameterType	const Opcode *		3534624	0					
ANR	3534762	Identifier	op		3534624	1					
ANR	3534763	CFGEntryNode	ENTRY		3534624		True				
ANR	3534764	CFGExitNode	EXIT		3534624		True				
ANR	3534765	Symbol	a		3534624						
ANR	3534766	Symbol	op		3534624						
ANR	3534767	Symbol	OT_WORD		3534624						
ANR	3534768	Symbol	data		3534624						
ANR	3534769	Symbol	* op		3534624						
ANR	3534770	Symbol	* * op -> operands		3534624						
ANR	3534771	Symbol	l		3534624						
ANR	3534772	Symbol	* * op		3534624						
ANR	3534773	Symbol	* op -> operands		3534624						
ANR	3534774	Symbol	op -> operands_count		3534624						
ANR	3534775	Symbol	* op -> operands [ 0 ] . regs		3534624						
ANR	3534776	Symbol	op -> operands [ 0 ] . type		3534624						
ANR	3534777	Symbol	* * * op		3534624						
ANR	3534778	Symbol	op -> operands		3534624						
ANR	3534779	Symbol	OT_MEMORY		3534624						
ANR	3534780	Symbol	* data		3534624						
ANR	3534781	Symbol	op -> operands [ 0 ] . regs		3534624						
ANR	3534782	Symbol	OT_DWORD		3534624						
ANR	3534783	Function	opfild	2966:0:76669:77285							
ANR	3534784	FunctionDef	"opfild (RAsm * a , ut8 * data , const Opcode * op)"		3534783	0					
ANR	3534785	CompoundStatement		2966:56:76725:77285	3534783	0					
ANR	3534786	IdentifierDeclStatement	int l = 0 ;	2967:1:76728:76737	3534783	0	True				
ANR	3534787	IdentifierDecl	l = 0		3534783	0					
ANR	3534788	IdentifierDeclType	int		3534783	0					
ANR	3534789	Identifier	l		3534783	1					
ANR	3534790	AssignmentExpression	l = 0		3534783	2		=			
ANR	3534791	Identifier	l		3534783	0					
ANR	3534792	PrimaryExpression	0		3534783	1					
ANR	3534793	SwitchStatement	switch ( op -> operands_count )		3534783	1					
ANR	3534794	Condition	op -> operands_count	2968:9:76748:76765	3534783	0	True				
ANR	3534795	PtrMemberAccess	op -> operands_count		3534783	0					
ANR	3534796	Identifier	op		3534783	0					
ANR	3534797	Identifier	operands_count		3534783	1					
ANR	3534798	CompoundStatement		3:29:42:42	3534783	1					
ANR	3534799	Label	case 1 :	2969:1:76771:76777	3534783	0	True				
ANR	3534800	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3534783	1					
ANR	3534801	Condition	op -> operands [ 0 ] . type & OT_MEMORY	2970:7:76786:76817	3534783	0	True				
ANR	3534802	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3534783	0		&			
ANR	3534803	MemberAccess	op -> operands [ 0 ] . type		3534783	0					
ANR	3534804	ArrayIndexing	op -> operands [ 0 ]		3534783	0					
ANR	3534805	PtrMemberAccess	op -> operands		3534783	0					
ANR	3534806	Identifier	op		3534783	0					
ANR	3534807	Identifier	operands		3534783	1					
ANR	3534808	PrimaryExpression	0		3534783	1					
ANR	3534809	Identifier	type		3534783	1					
ANR	3534810	Identifier	OT_MEMORY		3534783	1					
ANR	3534811	CompoundStatement		5:42:95:95	3534783	1					
ANR	3534812	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		3534783	0					
ANR	3534813	Condition	op -> operands [ 0 ] . type & OT_WORD	2971:8:76831:76860	3534783	0	True				
ANR	3534814	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		3534783	0		&			
ANR	3534815	MemberAccess	op -> operands [ 0 ] . type		3534783	0					
ANR	3534816	ArrayIndexing	op -> operands [ 0 ]		3534783	0					
ANR	3534817	PtrMemberAccess	op -> operands		3534783	0					
ANR	3534818	Identifier	op		3534783	0					
ANR	3534819	Identifier	operands		3534783	1					
ANR	3534820	PrimaryExpression	0		3534783	1					
ANR	3534821	Identifier	type		3534783	1					
ANR	3534822	Identifier	OT_WORD		3534783	1					
ANR	3534823	CompoundStatement		6:41:138:138	3534783	1					
ANR	3534824	ExpressionStatement	data [ l ++ ] = 0xdf	2972:4:76870:76886	3534783	0	True				
ANR	3534825	AssignmentExpression	data [ l ++ ] = 0xdf		3534783	0		=			
ANR	3534826	ArrayIndexing	data [ l ++ ]		3534783	0					
ANR	3534827	Identifier	data		3534783	0					
ANR	3534828	PostIncDecOperationExpression	l ++		3534783	1					
ANR	3534829	Identifier	l		3534783	0					
ANR	3534830	IncDec	++		3534783	1					
ANR	3534831	PrimaryExpression	0xdf		3534783	1					
ANR	3534832	ExpressionStatement	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . regs [ 0 ]	2973:4:76892:76934	3534783	1	True				
ANR	3534833	AssignmentExpression	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . regs [ 0 ]		3534783	0		=			
ANR	3534834	ArrayIndexing	data [ l ++ ]		3534783	0					
ANR	3534835	Identifier	data		3534783	0					
ANR	3534836	PostIncDecOperationExpression	l ++		3534783	1					
ANR	3534837	Identifier	l		3534783	0					
ANR	3534838	IncDec	++		3534783	1					
ANR	3534839	InclusiveOrExpression	0x00 | op -> operands [ 0 ] . regs [ 0 ]		3534783	1		|			
ANR	3534840	PrimaryExpression	0x00		3534783	0					
ANR	3534841	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3534783	1					
ANR	3534842	MemberAccess	op -> operands [ 0 ] . regs		3534783	0					
ANR	3534843	ArrayIndexing	op -> operands [ 0 ]		3534783	0					
ANR	3534844	PtrMemberAccess	op -> operands		3534783	0					
ANR	3534845	Identifier	op		3534783	0					
ANR	3534846	Identifier	operands		3534783	1					
ANR	3534847	PrimaryExpression	0		3534783	1					
ANR	3534848	Identifier	regs		3534783	1					
ANR	3534849	PrimaryExpression	0		3534783	1					
ANR	3534850	ElseStatement	else		3534783	0					
ANR	3534851	IfStatement	if ( op -> operands [ 0 ] . type & OT_DWORD )		3534783	0					
ANR	3534852	Condition	op -> operands [ 0 ] . type & OT_DWORD	2974:15:76951:76981	3534783	0	True				
ANR	3534853	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		3534783	0		&			
ANR	3534854	MemberAccess	op -> operands [ 0 ] . type		3534783	0					
ANR	3534855	ArrayIndexing	op -> operands [ 0 ]		3534783	0					
ANR	3534856	PtrMemberAccess	op -> operands		3534783	0					
ANR	3534857	Identifier	op		3534783	0					
ANR	3534858	Identifier	operands		3534783	1					
ANR	3534859	PrimaryExpression	0		3534783	1					
ANR	3534860	Identifier	type		3534783	1					
ANR	3534861	Identifier	OT_DWORD		3534783	1					
ANR	3534862	CompoundStatement		9:49:259:259	3534783	1					
ANR	3534863	ExpressionStatement	data [ l ++ ] = 0xdb	2975:4:76991:77007	3534783	0	True				
ANR	3534864	AssignmentExpression	data [ l ++ ] = 0xdb		3534783	0		=			
ANR	3534865	ArrayIndexing	data [ l ++ ]		3534783	0					
ANR	3534866	Identifier	data		3534783	0					
ANR	3534867	PostIncDecOperationExpression	l ++		3534783	1					
ANR	3534868	Identifier	l		3534783	0					
ANR	3534869	IncDec	++		3534783	1					
ANR	3534870	PrimaryExpression	0xdb		3534783	1					
ANR	3534871	ExpressionStatement	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . regs [ 0 ]	2976:4:77013:77055	3534783	1	True				
ANR	3534872	AssignmentExpression	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . regs [ 0 ]		3534783	0		=			
ANR	3534873	ArrayIndexing	data [ l ++ ]		3534783	0					
ANR	3534874	Identifier	data		3534783	0					
ANR	3534875	PostIncDecOperationExpression	l ++		3534783	1					
ANR	3534876	Identifier	l		3534783	0					
ANR	3534877	IncDec	++		3534783	1					
ANR	3534878	InclusiveOrExpression	0x00 | op -> operands [ 0 ] . regs [ 0 ]		3534783	1		|			
ANR	3534879	PrimaryExpression	0x00		3534783	0					
ANR	3534880	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3534783	1					
ANR	3534881	MemberAccess	op -> operands [ 0 ] . regs		3534783	0					
ANR	3534882	ArrayIndexing	op -> operands [ 0 ]		3534783	0					
ANR	3534883	PtrMemberAccess	op -> operands		3534783	0					
ANR	3534884	Identifier	op		3534783	0					
ANR	3534885	Identifier	operands		3534783	1					
ANR	3534886	PrimaryExpression	0		3534783	1					
ANR	3534887	Identifier	regs		3534783	1					
ANR	3534888	PrimaryExpression	0		3534783	1					
ANR	3534889	ElseStatement	else		3534783	0					
ANR	3534890	IfStatement	if ( op -> operands [ 0 ] . type & OT_QWORD )		3534783	0					
ANR	3534891	Condition	op -> operands [ 0 ] . type & OT_QWORD	2977:15:77072:77102	3534783	0	True				
ANR	3534892	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		3534783	0		&			
ANR	3534893	MemberAccess	op -> operands [ 0 ] . type		3534783	0					
ANR	3534894	ArrayIndexing	op -> operands [ 0 ]		3534783	0					
ANR	3534895	PtrMemberAccess	op -> operands		3534783	0					
ANR	3534896	Identifier	op		3534783	0					
ANR	3534897	Identifier	operands		3534783	1					
ANR	3534898	PrimaryExpression	0		3534783	1					
ANR	3534899	Identifier	type		3534783	1					
ANR	3534900	Identifier	OT_QWORD		3534783	1					
ANR	3534901	CompoundStatement		12:49:380:380	3534783	1					
ANR	3534902	ExpressionStatement	data [ l ++ ] = 0xdf	2978:4:77112:77128	3534783	0	True				
ANR	3534903	AssignmentExpression	data [ l ++ ] = 0xdf		3534783	0		=			
ANR	3534904	ArrayIndexing	data [ l ++ ]		3534783	0					
ANR	3534905	Identifier	data		3534783	0					
ANR	3534906	PostIncDecOperationExpression	l ++		3534783	1					
ANR	3534907	Identifier	l		3534783	0					
ANR	3534908	IncDec	++		3534783	1					
ANR	3534909	PrimaryExpression	0xdf		3534783	1					
ANR	3534910	ExpressionStatement	data [ l ++ ] = 0x28 | op -> operands [ 0 ] . regs [ 0 ]	2979:4:77134:77176	3534783	1	True				
ANR	3534911	AssignmentExpression	data [ l ++ ] = 0x28 | op -> operands [ 0 ] . regs [ 0 ]		3534783	0		=			
ANR	3534912	ArrayIndexing	data [ l ++ ]		3534783	0					
ANR	3534913	Identifier	data		3534783	0					
ANR	3534914	PostIncDecOperationExpression	l ++		3534783	1					
ANR	3534915	Identifier	l		3534783	0					
ANR	3534916	IncDec	++		3534783	1					
ANR	3534917	InclusiveOrExpression	0x28 | op -> operands [ 0 ] . regs [ 0 ]		3534783	1		|			
ANR	3534918	PrimaryExpression	0x28		3534783	0					
ANR	3534919	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3534783	1					
ANR	3534920	MemberAccess	op -> operands [ 0 ] . regs		3534783	0					
ANR	3534921	ArrayIndexing	op -> operands [ 0 ]		3534783	0					
ANR	3534922	PtrMemberAccess	op -> operands		3534783	0					
ANR	3534923	Identifier	op		3534783	0					
ANR	3534924	Identifier	operands		3534783	1					
ANR	3534925	PrimaryExpression	0		3534783	1					
ANR	3534926	Identifier	regs		3534783	1					
ANR	3534927	PrimaryExpression	0		3534783	1					
ANR	3534928	ElseStatement	else		3534783	0					
ANR	3534929	CompoundStatement		15:10:462:462	3534783	0					
ANR	3534930	ReturnStatement	return - 1 ;	2981:4:77194:77203	3534783	0	True				
ANR	3534931	UnaryOperationExpression	- 1		3534783	0					
ANR	3534932	UnaryOperator	-		3534783	0					
ANR	3534933	PrimaryExpression	1		3534783	1					
ANR	3534934	ElseStatement	else		3534783	0					
ANR	3534935	CompoundStatement		18:9:493:493	3534783	0					
ANR	3534936	ReturnStatement	return - 1 ;	2984:3:77224:77233	3534783	0	True				
ANR	3534937	UnaryOperationExpression	- 1		3534783	0					
ANR	3534938	UnaryOperator	-		3534783	0					
ANR	3534939	PrimaryExpression	1		3534783	1					
ANR	3534940	BreakStatement	break ;	2986:2:77241:77246	3534783	2	True				
ANR	3534941	Label	default :	2987:1:77249:77256	3534783	3	True				
ANR	3534942	Identifier	default		3534783	0					
ANR	3534943	ReturnStatement	return - 1 ;	2988:2:77260:77269	3534783	4	True				
ANR	3534944	UnaryOperationExpression	- 1		3534783	0					
ANR	3534945	UnaryOperator	-		3534783	0					
ANR	3534946	PrimaryExpression	1		3534783	1					
ANR	3534947	ReturnStatement	return l ;	2990:1:77275:77283	3534783	2	True				
ANR	3534948	Identifier	l		3534783	0					
ANR	3534949	ReturnType	static int		3534783	1					
ANR	3534950	Identifier	opfild		3534783	2					
ANR	3534951	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3534783	3					
ANR	3534952	Parameter	RAsm * a	2966:18:76687:76693	3534783	0	True				
ANR	3534953	ParameterType	RAsm *		3534783	0					
ANR	3534954	Identifier	a		3534783	1					
ANR	3534955	Parameter	ut8 * data	2966:27:76696:76704	3534783	1	True				
ANR	3534956	ParameterType	ut8 *		3534783	0					
ANR	3534957	Identifier	data		3534783	1					
ANR	3534958	Parameter	const Opcode * op	2966:38:76707:76722	3534783	2	True				
ANR	3534959	ParameterType	const Opcode *		3534783	0					
ANR	3534960	Identifier	op		3534783	1					
ANR	3534961	CFGEntryNode	ENTRY		3534783		True				
ANR	3534962	CFGExitNode	EXIT		3534783		True				
ANR	3534963	Symbol	a		3534783						
ANR	3534964	Symbol	op		3534783						
ANR	3534965	Symbol	OT_WORD		3534783						
ANR	3534966	Symbol	OT_QWORD		3534783						
ANR	3534967	Symbol	data		3534783						
ANR	3534968	Symbol	* op		3534783						
ANR	3534969	Symbol	* * op -> operands		3534783						
ANR	3534970	Symbol	l		3534783						
ANR	3534971	Symbol	* * op		3534783						
ANR	3534972	Symbol	* op -> operands		3534783						
ANR	3534973	Symbol	op -> operands_count		3534783						
ANR	3534974	Symbol	* op -> operands [ 0 ] . regs		3534783						
ANR	3534975	Symbol	op -> operands [ 0 ] . type		3534783						
ANR	3534976	Symbol	* * * op		3534783						
ANR	3534977	Symbol	op -> operands		3534783						
ANR	3534978	Symbol	OT_MEMORY		3534783						
ANR	3534979	Symbol	* data		3534783						
ANR	3534980	Symbol	op -> operands [ 0 ] . regs		3534783						
ANR	3534981	Symbol	OT_DWORD		3534783						
ANR	3534982	Function	opfldcw	2993:0:77288:77627							
ANR	3534983	FunctionDef	"opfldcw (RAsm * a , ut8 * data , const Opcode * op)"		3534982	0					
ANR	3534984	CompoundStatement		2993:57:77345:77627	3534982	0					
ANR	3534985	IdentifierDeclStatement	int l = 0 ;	2994:1:77348:77357	3534982	0	True				
ANR	3534986	IdentifierDecl	l = 0		3534982	0					
ANR	3534987	IdentifierDeclType	int		3534982	0					
ANR	3534988	Identifier	l		3534982	1					
ANR	3534989	AssignmentExpression	l = 0		3534982	2		=			
ANR	3534990	Identifier	l		3534982	0					
ANR	3534991	PrimaryExpression	0		3534982	1					
ANR	3534992	SwitchStatement	switch ( op -> operands_count )		3534982	1					
ANR	3534993	Condition	op -> operands_count	2995:9:77368:77385	3534982	0	True				
ANR	3534994	PtrMemberAccess	op -> operands_count		3534982	0					
ANR	3534995	Identifier	op		3534982	0					
ANR	3534996	Identifier	operands_count		3534982	1					
ANR	3534997	CompoundStatement		3:29:42:42	3534982	1					
ANR	3534998	Label	case 1 :	2996:1:77391:77397	3534982	0	True				
ANR	3534999	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_WORD )		3534982	1					
ANR	3535000	Condition	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_WORD	2997:7:77406:77478	3534982	0	True				
ANR	3535001	AndExpression	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_WORD		3534982	0		&&			
ANR	3535002	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3534982	0		&			
ANR	3535003	MemberAccess	op -> operands [ 0 ] . type		3534982	0					
ANR	3535004	ArrayIndexing	op -> operands [ 0 ]		3534982	0					
ANR	3535005	PtrMemberAccess	op -> operands		3534982	0					
ANR	3535006	Identifier	op		3534982	0					
ANR	3535007	Identifier	operands		3534982	1					
ANR	3535008	PrimaryExpression	0		3534982	1					
ANR	3535009	Identifier	type		3534982	1					
ANR	3535010	Identifier	OT_MEMORY		3534982	1					
ANR	3535011	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		3534982	1		&			
ANR	3535012	MemberAccess	op -> operands [ 0 ] . type		3534982	0					
ANR	3535013	ArrayIndexing	op -> operands [ 0 ]		3534982	0					
ANR	3535014	PtrMemberAccess	op -> operands		3534982	0					
ANR	3535015	Identifier	op		3534982	0					
ANR	3535016	Identifier	operands		3534982	1					
ANR	3535017	PrimaryExpression	0		3534982	1					
ANR	3535018	Identifier	type		3534982	1					
ANR	3535019	Identifier	OT_WORD		3534982	1					
ANR	3535020	CompoundStatement		6:40:136:136	3534982	1					
ANR	3535021	ExpressionStatement	data [ l ++ ] = 0xd9	2999:3:77487:77503	3534982	0	True				
ANR	3535022	AssignmentExpression	data [ l ++ ] = 0xd9		3534982	0		=			
ANR	3535023	ArrayIndexing	data [ l ++ ]		3534982	0					
ANR	3535024	Identifier	data		3534982	0					
ANR	3535025	PostIncDecOperationExpression	l ++		3534982	1					
ANR	3535026	Identifier	l		3534982	0					
ANR	3535027	IncDec	++		3534982	1					
ANR	3535028	PrimaryExpression	0xd9		3534982	1					
ANR	3535029	ExpressionStatement	data [ l ++ ] = 0x28 | op -> operands [ 0 ] . regs [ 0 ]	3000:3:77508:77550	3534982	1	True				
ANR	3535030	AssignmentExpression	data [ l ++ ] = 0x28 | op -> operands [ 0 ] . regs [ 0 ]		3534982	0		=			
ANR	3535031	ArrayIndexing	data [ l ++ ]		3534982	0					
ANR	3535032	Identifier	data		3534982	0					
ANR	3535033	PostIncDecOperationExpression	l ++		3534982	1					
ANR	3535034	Identifier	l		3534982	0					
ANR	3535035	IncDec	++		3534982	1					
ANR	3535036	InclusiveOrExpression	0x28 | op -> operands [ 0 ] . regs [ 0 ]		3534982	1		|			
ANR	3535037	PrimaryExpression	0x28		3534982	0					
ANR	3535038	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3534982	1					
ANR	3535039	MemberAccess	op -> operands [ 0 ] . regs		3534982	0					
ANR	3535040	ArrayIndexing	op -> operands [ 0 ]		3534982	0					
ANR	3535041	PtrMemberAccess	op -> operands		3534982	0					
ANR	3535042	Identifier	op		3534982	0					
ANR	3535043	Identifier	operands		3534982	1					
ANR	3535044	PrimaryExpression	0		3534982	1					
ANR	3535045	Identifier	regs		3534982	1					
ANR	3535046	PrimaryExpression	0		3534982	1					
ANR	3535047	ElseStatement	else		3534982	0					
ANR	3535048	CompoundStatement		9:9:215:215	3534982	0					
ANR	3535049	ReturnStatement	return - 1 ;	3002:3:77566:77575	3534982	0	True				
ANR	3535050	UnaryOperationExpression	- 1		3534982	0					
ANR	3535051	UnaryOperator	-		3534982	0					
ANR	3535052	PrimaryExpression	1		3534982	1					
ANR	3535053	BreakStatement	break ;	3004:2:77583:77588	3534982	2	True				
ANR	3535054	Label	default :	3005:1:77591:77598	3534982	3	True				
ANR	3535055	Identifier	default		3534982	0					
ANR	3535056	ReturnStatement	return - 1 ;	3006:2:77602:77611	3534982	4	True				
ANR	3535057	UnaryOperationExpression	- 1		3534982	0					
ANR	3535058	UnaryOperator	-		3534982	0					
ANR	3535059	PrimaryExpression	1		3534982	1					
ANR	3535060	ReturnStatement	return l ;	3008:1:77617:77625	3534982	2	True				
ANR	3535061	Identifier	l		3534982	0					
ANR	3535062	ReturnType	static int		3534982	1					
ANR	3535063	Identifier	opfldcw		3534982	2					
ANR	3535064	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3534982	3					
ANR	3535065	Parameter	RAsm * a	2993:19:77307:77313	3534982	0	True				
ANR	3535066	ParameterType	RAsm *		3534982	0					
ANR	3535067	Identifier	a		3534982	1					
ANR	3535068	Parameter	ut8 * data	2993:28:77316:77324	3534982	1	True				
ANR	3535069	ParameterType	ut8 *		3534982	0					
ANR	3535070	Identifier	data		3534982	1					
ANR	3535071	Parameter	const Opcode * op	2993:39:77327:77342	3534982	2	True				
ANR	3535072	ParameterType	const Opcode *		3534982	0					
ANR	3535073	Identifier	op		3534982	1					
ANR	3535074	CFGEntryNode	ENTRY		3534982		True				
ANR	3535075	CFGExitNode	EXIT		3534982		True				
ANR	3535076	Symbol	a		3534982						
ANR	3535077	Symbol	op		3534982						
ANR	3535078	Symbol	OT_WORD		3534982						
ANR	3535079	Symbol	data		3534982						
ANR	3535080	Symbol	* op		3534982						
ANR	3535081	Symbol	* * op -> operands		3534982						
ANR	3535082	Symbol	l		3534982						
ANR	3535083	Symbol	* * op		3534982						
ANR	3535084	Symbol	* op -> operands		3534982						
ANR	3535085	Symbol	op -> operands_count		3534982						
ANR	3535086	Symbol	* op -> operands [ 0 ] . regs		3534982						
ANR	3535087	Symbol	op -> operands [ 0 ] . type		3534982						
ANR	3535088	Symbol	* * * op		3534982						
ANR	3535089	Symbol	op -> operands		3534982						
ANR	3535090	Symbol	OT_MEMORY		3534982						
ANR	3535091	Symbol	* data		3534982						
ANR	3535092	Symbol	op -> operands [ 0 ] . regs		3534982						
ANR	3535093	Function	opfldenv	3011:0:77630:77929							
ANR	3535094	FunctionDef	"opfldenv (RAsm * a , ut8 * data , const Opcode * op)"		3535093	0					
ANR	3535095	CompoundStatement		3011:58:77688:77929	3535093	0					
ANR	3535096	IdentifierDeclStatement	int l = 0 ;	3012:1:77691:77700	3535093	0	True				
ANR	3535097	IdentifierDecl	l = 0		3535093	0					
ANR	3535098	IdentifierDeclType	int		3535093	0					
ANR	3535099	Identifier	l		3535093	1					
ANR	3535100	AssignmentExpression	l = 0		3535093	2		=			
ANR	3535101	Identifier	l		3535093	0					
ANR	3535102	PrimaryExpression	0		3535093	1					
ANR	3535103	SwitchStatement	switch ( op -> operands_count )		3535093	1					
ANR	3535104	Condition	op -> operands_count	3013:9:77711:77728	3535093	0	True				
ANR	3535105	PtrMemberAccess	op -> operands_count		3535093	0					
ANR	3535106	Identifier	op		3535093	0					
ANR	3535107	Identifier	operands_count		3535093	1					
ANR	3535108	CompoundStatement		3:29:42:42	3535093	1					
ANR	3535109	Label	case 1 :	3014:1:77734:77740	3535093	0	True				
ANR	3535110	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3535093	1					
ANR	3535111	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3015:7:77749:77780	3535093	0	True				
ANR	3535112	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3535093	0		&			
ANR	3535113	MemberAccess	op -> operands [ 0 ] . type		3535093	0					
ANR	3535114	ArrayIndexing	op -> operands [ 0 ]		3535093	0					
ANR	3535115	PtrMemberAccess	op -> operands		3535093	0					
ANR	3535116	Identifier	op		3535093	0					
ANR	3535117	Identifier	operands		3535093	1					
ANR	3535118	PrimaryExpression	0		3535093	1					
ANR	3535119	Identifier	type		3535093	1					
ANR	3535120	Identifier	OT_MEMORY		3535093	1					
ANR	3535121	CompoundStatement		5:42:95:95	3535093	1					
ANR	3535122	ExpressionStatement	data [ l ++ ] = 0xd9	3016:3:77789:77805	3535093	0	True				
ANR	3535123	AssignmentExpression	data [ l ++ ] = 0xd9		3535093	0		=			
ANR	3535124	ArrayIndexing	data [ l ++ ]		3535093	0					
ANR	3535125	Identifier	data		3535093	0					
ANR	3535126	PostIncDecOperationExpression	l ++		3535093	1					
ANR	3535127	Identifier	l		3535093	0					
ANR	3535128	IncDec	++		3535093	1					
ANR	3535129	PrimaryExpression	0xd9		3535093	1					
ANR	3535130	ExpressionStatement	data [ l ++ ] = 0x20 | op -> operands [ 0 ] . regs [ 0 ]	3017:3:77810:77852	3535093	1	True				
ANR	3535131	AssignmentExpression	data [ l ++ ] = 0x20 | op -> operands [ 0 ] . regs [ 0 ]		3535093	0		=			
ANR	3535132	ArrayIndexing	data [ l ++ ]		3535093	0					
ANR	3535133	Identifier	data		3535093	0					
ANR	3535134	PostIncDecOperationExpression	l ++		3535093	1					
ANR	3535135	Identifier	l		3535093	0					
ANR	3535136	IncDec	++		3535093	1					
ANR	3535137	InclusiveOrExpression	0x20 | op -> operands [ 0 ] . regs [ 0 ]		3535093	1		|			
ANR	3535138	PrimaryExpression	0x20		3535093	0					
ANR	3535139	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3535093	1					
ANR	3535140	MemberAccess	op -> operands [ 0 ] . regs		3535093	0					
ANR	3535141	ArrayIndexing	op -> operands [ 0 ]		3535093	0					
ANR	3535142	PtrMemberAccess	op -> operands		3535093	0					
ANR	3535143	Identifier	op		3535093	0					
ANR	3535144	Identifier	operands		3535093	1					
ANR	3535145	PrimaryExpression	0		3535093	1					
ANR	3535146	Identifier	regs		3535093	1					
ANR	3535147	PrimaryExpression	0		3535093	1					
ANR	3535148	ElseStatement	else		3535093	0					
ANR	3535149	CompoundStatement		8:9:174:174	3535093	0					
ANR	3535150	ReturnStatement	return - 1 ;	3019:3:77868:77877	3535093	0	True				
ANR	3535151	UnaryOperationExpression	- 1		3535093	0					
ANR	3535152	UnaryOperator	-		3535093	0					
ANR	3535153	PrimaryExpression	1		3535093	1					
ANR	3535154	BreakStatement	break ;	3021:2:77885:77890	3535093	2	True				
ANR	3535155	Label	default :	3022:1:77893:77900	3535093	3	True				
ANR	3535156	Identifier	default		3535093	0					
ANR	3535157	ReturnStatement	return - 1 ;	3023:2:77904:77913	3535093	4	True				
ANR	3535158	UnaryOperationExpression	- 1		3535093	0					
ANR	3535159	UnaryOperator	-		3535093	0					
ANR	3535160	PrimaryExpression	1		3535093	1					
ANR	3535161	ReturnStatement	return l ;	3025:1:77919:77927	3535093	2	True				
ANR	3535162	Identifier	l		3535093	0					
ANR	3535163	ReturnType	static int		3535093	1					
ANR	3535164	Identifier	opfldenv		3535093	2					
ANR	3535165	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3535093	3					
ANR	3535166	Parameter	RAsm * a	3011:20:77650:77656	3535093	0	True				
ANR	3535167	ParameterType	RAsm *		3535093	0					
ANR	3535168	Identifier	a		3535093	1					
ANR	3535169	Parameter	ut8 * data	3011:29:77659:77667	3535093	1	True				
ANR	3535170	ParameterType	ut8 *		3535093	0					
ANR	3535171	Identifier	data		3535093	1					
ANR	3535172	Parameter	const Opcode * op	3011:40:77670:77685	3535093	2	True				
ANR	3535173	ParameterType	const Opcode *		3535093	0					
ANR	3535174	Identifier	op		3535093	1					
ANR	3535175	CFGEntryNode	ENTRY		3535093		True				
ANR	3535176	CFGExitNode	EXIT		3535093		True				
ANR	3535177	Symbol	a		3535093						
ANR	3535178	Symbol	op		3535093						
ANR	3535179	Symbol	data		3535093						
ANR	3535180	Symbol	* op		3535093						
ANR	3535181	Symbol	* * op -> operands		3535093						
ANR	3535182	Symbol	l		3535093						
ANR	3535183	Symbol	* * op		3535093						
ANR	3535184	Symbol	* op -> operands		3535093						
ANR	3535185	Symbol	op -> operands_count		3535093						
ANR	3535186	Symbol	* op -> operands [ 0 ] . regs		3535093						
ANR	3535187	Symbol	op -> operands [ 0 ] . type		3535093						
ANR	3535188	Symbol	* * * op		3535093						
ANR	3535189	Symbol	op -> operands		3535093						
ANR	3535190	Symbol	OT_MEMORY		3535093						
ANR	3535191	Symbol	* data		3535093						
ANR	3535192	Symbol	op -> operands [ 0 ] . regs		3535093						
ANR	3535193	Function	opfbld	3028:0:77932:78271							
ANR	3535194	FunctionDef	"opfbld (RAsm * a , ut8 * data , const Opcode * op)"		3535193	0					
ANR	3535195	CompoundStatement		3028:56:77988:78271	3535193	0					
ANR	3535196	IdentifierDeclStatement	int l = 0 ;	3029:1:77991:78000	3535193	0	True				
ANR	3535197	IdentifierDecl	l = 0		3535193	0					
ANR	3535198	IdentifierDeclType	int		3535193	0					
ANR	3535199	Identifier	l		3535193	1					
ANR	3535200	AssignmentExpression	l = 0		3535193	2		=			
ANR	3535201	Identifier	l		3535193	0					
ANR	3535202	PrimaryExpression	0		3535193	1					
ANR	3535203	SwitchStatement	switch ( op -> operands_count )		3535193	1					
ANR	3535204	Condition	op -> operands_count	3030:9:78011:78028	3535193	0	True				
ANR	3535205	PtrMemberAccess	op -> operands_count		3535193	0					
ANR	3535206	Identifier	op		3535193	0					
ANR	3535207	Identifier	operands_count		3535193	1					
ANR	3535208	CompoundStatement		3:29:42:42	3535193	1					
ANR	3535209	Label	case 1 :	3031:1:78034:78040	3535193	0	True				
ANR	3535210	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_TBYTE )		3535193	1					
ANR	3535211	Condition	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_TBYTE	3032:7:78049:78122	3535193	0	True				
ANR	3535212	AndExpression	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_TBYTE		3535193	0		&&			
ANR	3535213	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3535193	0		&			
ANR	3535214	MemberAccess	op -> operands [ 0 ] . type		3535193	0					
ANR	3535215	ArrayIndexing	op -> operands [ 0 ]		3535193	0					
ANR	3535216	PtrMemberAccess	op -> operands		3535193	0					
ANR	3535217	Identifier	op		3535193	0					
ANR	3535218	Identifier	operands		3535193	1					
ANR	3535219	PrimaryExpression	0		3535193	1					
ANR	3535220	Identifier	type		3535193	1					
ANR	3535221	Identifier	OT_MEMORY		3535193	1					
ANR	3535222	BitAndExpression	op -> operands [ 0 ] . type & OT_TBYTE		3535193	1		&			
ANR	3535223	MemberAccess	op -> operands [ 0 ] . type		3535193	0					
ANR	3535224	ArrayIndexing	op -> operands [ 0 ]		3535193	0					
ANR	3535225	PtrMemberAccess	op -> operands		3535193	0					
ANR	3535226	Identifier	op		3535193	0					
ANR	3535227	Identifier	operands		3535193	1					
ANR	3535228	PrimaryExpression	0		3535193	1					
ANR	3535229	Identifier	type		3535193	1					
ANR	3535230	Identifier	OT_TBYTE		3535193	1					
ANR	3535231	CompoundStatement		6:41:137:137	3535193	1					
ANR	3535232	ExpressionStatement	data [ l ++ ] = 0xdf	3034:3:78131:78147	3535193	0	True				
ANR	3535233	AssignmentExpression	data [ l ++ ] = 0xdf		3535193	0		=			
ANR	3535234	ArrayIndexing	data [ l ++ ]		3535193	0					
ANR	3535235	Identifier	data		3535193	0					
ANR	3535236	PostIncDecOperationExpression	l ++		3535193	1					
ANR	3535237	Identifier	l		3535193	0					
ANR	3535238	IncDec	++		3535193	1					
ANR	3535239	PrimaryExpression	0xdf		3535193	1					
ANR	3535240	ExpressionStatement	data [ l ++ ] = 0x20 | op -> operands [ 0 ] . regs [ 0 ]	3035:3:78152:78194	3535193	1	True				
ANR	3535241	AssignmentExpression	data [ l ++ ] = 0x20 | op -> operands [ 0 ] . regs [ 0 ]		3535193	0		=			
ANR	3535242	ArrayIndexing	data [ l ++ ]		3535193	0					
ANR	3535243	Identifier	data		3535193	0					
ANR	3535244	PostIncDecOperationExpression	l ++		3535193	1					
ANR	3535245	Identifier	l		3535193	0					
ANR	3535246	IncDec	++		3535193	1					
ANR	3535247	InclusiveOrExpression	0x20 | op -> operands [ 0 ] . regs [ 0 ]		3535193	1		|			
ANR	3535248	PrimaryExpression	0x20		3535193	0					
ANR	3535249	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3535193	1					
ANR	3535250	MemberAccess	op -> operands [ 0 ] . regs		3535193	0					
ANR	3535251	ArrayIndexing	op -> operands [ 0 ]		3535193	0					
ANR	3535252	PtrMemberAccess	op -> operands		3535193	0					
ANR	3535253	Identifier	op		3535193	0					
ANR	3535254	Identifier	operands		3535193	1					
ANR	3535255	PrimaryExpression	0		3535193	1					
ANR	3535256	Identifier	regs		3535193	1					
ANR	3535257	PrimaryExpression	0		3535193	1					
ANR	3535258	ElseStatement	else		3535193	0					
ANR	3535259	CompoundStatement		9:9:216:216	3535193	0					
ANR	3535260	ReturnStatement	return - 1 ;	3037:3:78210:78219	3535193	0	True				
ANR	3535261	UnaryOperationExpression	- 1		3535193	0					
ANR	3535262	UnaryOperator	-		3535193	0					
ANR	3535263	PrimaryExpression	1		3535193	1					
ANR	3535264	BreakStatement	break ;	3039:2:78227:78232	3535193	2	True				
ANR	3535265	Label	default :	3040:1:78235:78242	3535193	3	True				
ANR	3535266	Identifier	default		3535193	0					
ANR	3535267	ReturnStatement	return - 1 ;	3041:2:78246:78255	3535193	4	True				
ANR	3535268	UnaryOperationExpression	- 1		3535193	0					
ANR	3535269	UnaryOperator	-		3535193	0					
ANR	3535270	PrimaryExpression	1		3535193	1					
ANR	3535271	ReturnStatement	return l ;	3043:1:78261:78269	3535193	2	True				
ANR	3535272	Identifier	l		3535193	0					
ANR	3535273	ReturnType	static int		3535193	1					
ANR	3535274	Identifier	opfbld		3535193	2					
ANR	3535275	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3535193	3					
ANR	3535276	Parameter	RAsm * a	3028:18:77950:77956	3535193	0	True				
ANR	3535277	ParameterType	RAsm *		3535193	0					
ANR	3535278	Identifier	a		3535193	1					
ANR	3535279	Parameter	ut8 * data	3028:27:77959:77967	3535193	1	True				
ANR	3535280	ParameterType	ut8 *		3535193	0					
ANR	3535281	Identifier	data		3535193	1					
ANR	3535282	Parameter	const Opcode * op	3028:38:77970:77985	3535193	2	True				
ANR	3535283	ParameterType	const Opcode *		3535193	0					
ANR	3535284	Identifier	op		3535193	1					
ANR	3535285	CFGEntryNode	ENTRY		3535193		True				
ANR	3535286	CFGExitNode	EXIT		3535193		True				
ANR	3535287	Symbol	a		3535193						
ANR	3535288	Symbol	op		3535193						
ANR	3535289	Symbol	OT_TBYTE		3535193						
ANR	3535290	Symbol	data		3535193						
ANR	3535291	Symbol	* op		3535193						
ANR	3535292	Symbol	* * op -> operands		3535193						
ANR	3535293	Symbol	l		3535193						
ANR	3535294	Symbol	* * op		3535193						
ANR	3535295	Symbol	* op -> operands		3535193						
ANR	3535296	Symbol	op -> operands_count		3535193						
ANR	3535297	Symbol	* op -> operands [ 0 ] . regs		3535193						
ANR	3535298	Symbol	op -> operands [ 0 ] . type		3535193						
ANR	3535299	Symbol	* * * op		3535193						
ANR	3535300	Symbol	op -> operands		3535193						
ANR	3535301	Symbol	OT_MEMORY		3535193						
ANR	3535302	Symbol	* data		3535193						
ANR	3535303	Symbol	op -> operands [ 0 ] . regs		3535193						
ANR	3535304	Function	opfbstp	3046:0:78274:78614							
ANR	3535305	FunctionDef	"opfbstp (RAsm * a , ut8 * data , const Opcode * op)"		3535304	0					
ANR	3535306	CompoundStatement		3046:57:78331:78614	3535304	0					
ANR	3535307	IdentifierDeclStatement	int l = 0 ;	3047:1:78334:78343	3535304	0	True				
ANR	3535308	IdentifierDecl	l = 0		3535304	0					
ANR	3535309	IdentifierDeclType	int		3535304	0					
ANR	3535310	Identifier	l		3535304	1					
ANR	3535311	AssignmentExpression	l = 0		3535304	2		=			
ANR	3535312	Identifier	l		3535304	0					
ANR	3535313	PrimaryExpression	0		3535304	1					
ANR	3535314	SwitchStatement	switch ( op -> operands_count )		3535304	1					
ANR	3535315	Condition	op -> operands_count	3048:9:78354:78371	3535304	0	True				
ANR	3535316	PtrMemberAccess	op -> operands_count		3535304	0					
ANR	3535317	Identifier	op		3535304	0					
ANR	3535318	Identifier	operands_count		3535304	1					
ANR	3535319	CompoundStatement		3:29:42:42	3535304	1					
ANR	3535320	Label	case 1 :	3049:1:78377:78383	3535304	0	True				
ANR	3535321	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_TBYTE )		3535304	1					
ANR	3535322	Condition	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_TBYTE	3050:7:78392:78465	3535304	0	True				
ANR	3535323	AndExpression	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_TBYTE		3535304	0		&&			
ANR	3535324	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3535304	0		&			
ANR	3535325	MemberAccess	op -> operands [ 0 ] . type		3535304	0					
ANR	3535326	ArrayIndexing	op -> operands [ 0 ]		3535304	0					
ANR	3535327	PtrMemberAccess	op -> operands		3535304	0					
ANR	3535328	Identifier	op		3535304	0					
ANR	3535329	Identifier	operands		3535304	1					
ANR	3535330	PrimaryExpression	0		3535304	1					
ANR	3535331	Identifier	type		3535304	1					
ANR	3535332	Identifier	OT_MEMORY		3535304	1					
ANR	3535333	BitAndExpression	op -> operands [ 0 ] . type & OT_TBYTE		3535304	1		&			
ANR	3535334	MemberAccess	op -> operands [ 0 ] . type		3535304	0					
ANR	3535335	ArrayIndexing	op -> operands [ 0 ]		3535304	0					
ANR	3535336	PtrMemberAccess	op -> operands		3535304	0					
ANR	3535337	Identifier	op		3535304	0					
ANR	3535338	Identifier	operands		3535304	1					
ANR	3535339	PrimaryExpression	0		3535304	1					
ANR	3535340	Identifier	type		3535304	1					
ANR	3535341	Identifier	OT_TBYTE		3535304	1					
ANR	3535342	CompoundStatement		6:41:137:137	3535304	1					
ANR	3535343	ExpressionStatement	data [ l ++ ] = 0xdf	3052:3:78474:78490	3535304	0	True				
ANR	3535344	AssignmentExpression	data [ l ++ ] = 0xdf		3535304	0		=			
ANR	3535345	ArrayIndexing	data [ l ++ ]		3535304	0					
ANR	3535346	Identifier	data		3535304	0					
ANR	3535347	PostIncDecOperationExpression	l ++		3535304	1					
ANR	3535348	Identifier	l		3535304	0					
ANR	3535349	IncDec	++		3535304	1					
ANR	3535350	PrimaryExpression	0xdf		3535304	1					
ANR	3535351	ExpressionStatement	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]	3053:3:78495:78537	3535304	1	True				
ANR	3535352	AssignmentExpression	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]		3535304	0		=			
ANR	3535353	ArrayIndexing	data [ l ++ ]		3535304	0					
ANR	3535354	Identifier	data		3535304	0					
ANR	3535355	PostIncDecOperationExpression	l ++		3535304	1					
ANR	3535356	Identifier	l		3535304	0					
ANR	3535357	IncDec	++		3535304	1					
ANR	3535358	InclusiveOrExpression	0x30 | op -> operands [ 0 ] . regs [ 0 ]		3535304	1		|			
ANR	3535359	PrimaryExpression	0x30		3535304	0					
ANR	3535360	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3535304	1					
ANR	3535361	MemberAccess	op -> operands [ 0 ] . regs		3535304	0					
ANR	3535362	ArrayIndexing	op -> operands [ 0 ]		3535304	0					
ANR	3535363	PtrMemberAccess	op -> operands		3535304	0					
ANR	3535364	Identifier	op		3535304	0					
ANR	3535365	Identifier	operands		3535304	1					
ANR	3535366	PrimaryExpression	0		3535304	1					
ANR	3535367	Identifier	regs		3535304	1					
ANR	3535368	PrimaryExpression	0		3535304	1					
ANR	3535369	ElseStatement	else		3535304	0					
ANR	3535370	CompoundStatement		9:9:216:216	3535304	0					
ANR	3535371	ReturnStatement	return - 1 ;	3055:3:78553:78562	3535304	0	True				
ANR	3535372	UnaryOperationExpression	- 1		3535304	0					
ANR	3535373	UnaryOperator	-		3535304	0					
ANR	3535374	PrimaryExpression	1		3535304	1					
ANR	3535375	BreakStatement	break ;	3057:2:78570:78575	3535304	2	True				
ANR	3535376	Label	default :	3058:1:78578:78585	3535304	3	True				
ANR	3535377	Identifier	default		3535304	0					
ANR	3535378	ReturnStatement	return - 1 ;	3059:2:78589:78598	3535304	4	True				
ANR	3535379	UnaryOperationExpression	- 1		3535304	0					
ANR	3535380	UnaryOperator	-		3535304	0					
ANR	3535381	PrimaryExpression	1		3535304	1					
ANR	3535382	ReturnStatement	return l ;	3061:1:78604:78612	3535304	2	True				
ANR	3535383	Identifier	l		3535304	0					
ANR	3535384	ReturnType	static int		3535304	1					
ANR	3535385	Identifier	opfbstp		3535304	2					
ANR	3535386	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3535304	3					
ANR	3535387	Parameter	RAsm * a	3046:19:78293:78299	3535304	0	True				
ANR	3535388	ParameterType	RAsm *		3535304	0					
ANR	3535389	Identifier	a		3535304	1					
ANR	3535390	Parameter	ut8 * data	3046:28:78302:78310	3535304	1	True				
ANR	3535391	ParameterType	ut8 *		3535304	0					
ANR	3535392	Identifier	data		3535304	1					
ANR	3535393	Parameter	const Opcode * op	3046:39:78313:78328	3535304	2	True				
ANR	3535394	ParameterType	const Opcode *		3535304	0					
ANR	3535395	Identifier	op		3535304	1					
ANR	3535396	CFGEntryNode	ENTRY		3535304		True				
ANR	3535397	CFGExitNode	EXIT		3535304		True				
ANR	3535398	Symbol	a		3535304						
ANR	3535399	Symbol	op		3535304						
ANR	3535400	Symbol	OT_TBYTE		3535304						
ANR	3535401	Symbol	data		3535304						
ANR	3535402	Symbol	* op		3535304						
ANR	3535403	Symbol	* * op -> operands		3535304						
ANR	3535404	Symbol	l		3535304						
ANR	3535405	Symbol	* * op		3535304						
ANR	3535406	Symbol	* op -> operands		3535304						
ANR	3535407	Symbol	op -> operands_count		3535304						
ANR	3535408	Symbol	* op -> operands [ 0 ] . regs		3535304						
ANR	3535409	Symbol	op -> operands [ 0 ] . type		3535304						
ANR	3535410	Symbol	* * * op		3535304						
ANR	3535411	Symbol	op -> operands		3535304						
ANR	3535412	Symbol	OT_MEMORY		3535304						
ANR	3535413	Symbol	* data		3535304						
ANR	3535414	Symbol	op -> operands [ 0 ] . regs		3535304						
ANR	3535415	Function	opfxrstor	3064:0:78617:78938							
ANR	3535416	FunctionDef	"opfxrstor (RAsm * a , ut8 * data , const Opcode * op)"		3535415	0					
ANR	3535417	CompoundStatement		3064:59:78676:78938	3535415	0					
ANR	3535418	IdentifierDeclStatement	int l = 0 ;	3065:1:78679:78688	3535415	0	True				
ANR	3535419	IdentifierDecl	l = 0		3535415	0					
ANR	3535420	IdentifierDeclType	int		3535415	0					
ANR	3535421	Identifier	l		3535415	1					
ANR	3535422	AssignmentExpression	l = 0		3535415	2		=			
ANR	3535423	Identifier	l		3535415	0					
ANR	3535424	PrimaryExpression	0		3535415	1					
ANR	3535425	SwitchStatement	switch ( op -> operands_count )		3535415	1					
ANR	3535426	Condition	op -> operands_count	3066:9:78699:78716	3535415	0	True				
ANR	3535427	PtrMemberAccess	op -> operands_count		3535415	0					
ANR	3535428	Identifier	op		3535415	0					
ANR	3535429	Identifier	operands_count		3535415	1					
ANR	3535430	CompoundStatement		3:29:42:42	3535415	1					
ANR	3535431	Label	case 1 :	3067:1:78722:78728	3535415	0	True				
ANR	3535432	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3535415	1					
ANR	3535433	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3068:7:78737:78768	3535415	0	True				
ANR	3535434	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3535415	0		&			
ANR	3535435	MemberAccess	op -> operands [ 0 ] . type		3535415	0					
ANR	3535436	ArrayIndexing	op -> operands [ 0 ]		3535415	0					
ANR	3535437	PtrMemberAccess	op -> operands		3535415	0					
ANR	3535438	Identifier	op		3535415	0					
ANR	3535439	Identifier	operands		3535415	1					
ANR	3535440	PrimaryExpression	0		3535415	1					
ANR	3535441	Identifier	type		3535415	1					
ANR	3535442	Identifier	OT_MEMORY		3535415	1					
ANR	3535443	CompoundStatement		5:42:95:95	3535415	1					
ANR	3535444	ExpressionStatement	data [ l ++ ] = 0x0f	3069:3:78777:78793	3535415	0	True				
ANR	3535445	AssignmentExpression	data [ l ++ ] = 0x0f		3535415	0		=			
ANR	3535446	ArrayIndexing	data [ l ++ ]		3535415	0					
ANR	3535447	Identifier	data		3535415	0					
ANR	3535448	PostIncDecOperationExpression	l ++		3535415	1					
ANR	3535449	Identifier	l		3535415	0					
ANR	3535450	IncDec	++		3535415	1					
ANR	3535451	PrimaryExpression	0x0f		3535415	1					
ANR	3535452	ExpressionStatement	data [ l ++ ] = 0xae	3070:3:78798:78814	3535415	1	True				
ANR	3535453	AssignmentExpression	data [ l ++ ] = 0xae		3535415	0		=			
ANR	3535454	ArrayIndexing	data [ l ++ ]		3535415	0					
ANR	3535455	Identifier	data		3535415	0					
ANR	3535456	PostIncDecOperationExpression	l ++		3535415	1					
ANR	3535457	Identifier	l		3535415	0					
ANR	3535458	IncDec	++		3535415	1					
ANR	3535459	PrimaryExpression	0xae		3535415	1					
ANR	3535460	ExpressionStatement	data [ l ++ ] = 0x08 | op -> operands [ 0 ] . regs [ 0 ]	3071:3:78819:78861	3535415	2	True				
ANR	3535461	AssignmentExpression	data [ l ++ ] = 0x08 | op -> operands [ 0 ] . regs [ 0 ]		3535415	0		=			
ANR	3535462	ArrayIndexing	data [ l ++ ]		3535415	0					
ANR	3535463	Identifier	data		3535415	0					
ANR	3535464	PostIncDecOperationExpression	l ++		3535415	1					
ANR	3535465	Identifier	l		3535415	0					
ANR	3535466	IncDec	++		3535415	1					
ANR	3535467	InclusiveOrExpression	0x08 | op -> operands [ 0 ] . regs [ 0 ]		3535415	1		|			
ANR	3535468	PrimaryExpression	0x08		3535415	0					
ANR	3535469	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3535415	1					
ANR	3535470	MemberAccess	op -> operands [ 0 ] . regs		3535415	0					
ANR	3535471	ArrayIndexing	op -> operands [ 0 ]		3535415	0					
ANR	3535472	PtrMemberAccess	op -> operands		3535415	0					
ANR	3535473	Identifier	op		3535415	0					
ANR	3535474	Identifier	operands		3535415	1					
ANR	3535475	PrimaryExpression	0		3535415	1					
ANR	3535476	Identifier	regs		3535415	1					
ANR	3535477	PrimaryExpression	0		3535415	1					
ANR	3535478	ElseStatement	else		3535415	0					
ANR	3535479	CompoundStatement		9:9:195:195	3535415	0					
ANR	3535480	ReturnStatement	return - 1 ;	3073:3:78877:78886	3535415	0	True				
ANR	3535481	UnaryOperationExpression	- 1		3535415	0					
ANR	3535482	UnaryOperator	-		3535415	0					
ANR	3535483	PrimaryExpression	1		3535415	1					
ANR	3535484	BreakStatement	break ;	3075:2:78894:78899	3535415	2	True				
ANR	3535485	Label	default :	3076:1:78902:78909	3535415	3	True				
ANR	3535486	Identifier	default		3535415	0					
ANR	3535487	ReturnStatement	return - 1 ;	3077:2:78913:78922	3535415	4	True				
ANR	3535488	UnaryOperationExpression	- 1		3535415	0					
ANR	3535489	UnaryOperator	-		3535415	0					
ANR	3535490	PrimaryExpression	1		3535415	1					
ANR	3535491	ReturnStatement	return l ;	3079:1:78928:78936	3535415	2	True				
ANR	3535492	Identifier	l		3535415	0					
ANR	3535493	ReturnType	static int		3535415	1					
ANR	3535494	Identifier	opfxrstor		3535415	2					
ANR	3535495	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3535415	3					
ANR	3535496	Parameter	RAsm * a	3064:21:78638:78644	3535415	0	True				
ANR	3535497	ParameterType	RAsm *		3535415	0					
ANR	3535498	Identifier	a		3535415	1					
ANR	3535499	Parameter	ut8 * data	3064:30:78647:78655	3535415	1	True				
ANR	3535500	ParameterType	ut8 *		3535415	0					
ANR	3535501	Identifier	data		3535415	1					
ANR	3535502	Parameter	const Opcode * op	3064:41:78658:78673	3535415	2	True				
ANR	3535503	ParameterType	const Opcode *		3535415	0					
ANR	3535504	Identifier	op		3535415	1					
ANR	3535505	CFGEntryNode	ENTRY		3535415		True				
ANR	3535506	CFGExitNode	EXIT		3535415		True				
ANR	3535507	Symbol	a		3535415						
ANR	3535508	Symbol	op		3535415						
ANR	3535509	Symbol	data		3535415						
ANR	3535510	Symbol	* op		3535415						
ANR	3535511	Symbol	* * op -> operands		3535415						
ANR	3535512	Symbol	l		3535415						
ANR	3535513	Symbol	* * op		3535415						
ANR	3535514	Symbol	* op -> operands		3535415						
ANR	3535515	Symbol	op -> operands_count		3535415						
ANR	3535516	Symbol	* op -> operands [ 0 ] . regs		3535415						
ANR	3535517	Symbol	op -> operands [ 0 ] . type		3535415						
ANR	3535518	Symbol	* * * op		3535415						
ANR	3535519	Symbol	op -> operands		3535415						
ANR	3535520	Symbol	OT_MEMORY		3535415						
ANR	3535521	Symbol	* data		3535415						
ANR	3535522	Symbol	op -> operands [ 0 ] . regs		3535415						
ANR	3535523	Function	opfxsave	3082:0:78941:79261							
ANR	3535524	FunctionDef	"opfxsave (RAsm * a , ut8 * data , const Opcode * op)"		3535523	0					
ANR	3535525	CompoundStatement		3082:58:78999:79261	3535523	0					
ANR	3535526	IdentifierDeclStatement	int l = 0 ;	3083:1:79002:79011	3535523	0	True				
ANR	3535527	IdentifierDecl	l = 0		3535523	0					
ANR	3535528	IdentifierDeclType	int		3535523	0					
ANR	3535529	Identifier	l		3535523	1					
ANR	3535530	AssignmentExpression	l = 0		3535523	2		=			
ANR	3535531	Identifier	l		3535523	0					
ANR	3535532	PrimaryExpression	0		3535523	1					
ANR	3535533	SwitchStatement	switch ( op -> operands_count )		3535523	1					
ANR	3535534	Condition	op -> operands_count	3084:9:79022:79039	3535523	0	True				
ANR	3535535	PtrMemberAccess	op -> operands_count		3535523	0					
ANR	3535536	Identifier	op		3535523	0					
ANR	3535537	Identifier	operands_count		3535523	1					
ANR	3535538	CompoundStatement		3:29:42:42	3535523	1					
ANR	3535539	Label	case 1 :	3085:1:79045:79051	3535523	0	True				
ANR	3535540	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3535523	1					
ANR	3535541	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3086:7:79060:79091	3535523	0	True				
ANR	3535542	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3535523	0		&			
ANR	3535543	MemberAccess	op -> operands [ 0 ] . type		3535523	0					
ANR	3535544	ArrayIndexing	op -> operands [ 0 ]		3535523	0					
ANR	3535545	PtrMemberAccess	op -> operands		3535523	0					
ANR	3535546	Identifier	op		3535523	0					
ANR	3535547	Identifier	operands		3535523	1					
ANR	3535548	PrimaryExpression	0		3535523	1					
ANR	3535549	Identifier	type		3535523	1					
ANR	3535550	Identifier	OT_MEMORY		3535523	1					
ANR	3535551	CompoundStatement		5:42:95:95	3535523	1					
ANR	3535552	ExpressionStatement	data [ l ++ ] = 0x0f	3087:3:79100:79116	3535523	0	True				
ANR	3535553	AssignmentExpression	data [ l ++ ] = 0x0f		3535523	0		=			
ANR	3535554	ArrayIndexing	data [ l ++ ]		3535523	0					
ANR	3535555	Identifier	data		3535523	0					
ANR	3535556	PostIncDecOperationExpression	l ++		3535523	1					
ANR	3535557	Identifier	l		3535523	0					
ANR	3535558	IncDec	++		3535523	1					
ANR	3535559	PrimaryExpression	0x0f		3535523	1					
ANR	3535560	ExpressionStatement	data [ l ++ ] = 0xae	3088:3:79121:79137	3535523	1	True				
ANR	3535561	AssignmentExpression	data [ l ++ ] = 0xae		3535523	0		=			
ANR	3535562	ArrayIndexing	data [ l ++ ]		3535523	0					
ANR	3535563	Identifier	data		3535523	0					
ANR	3535564	PostIncDecOperationExpression	l ++		3535523	1					
ANR	3535565	Identifier	l		3535523	0					
ANR	3535566	IncDec	++		3535523	1					
ANR	3535567	PrimaryExpression	0xae		3535523	1					
ANR	3535568	ExpressionStatement	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . regs [ 0 ]	3089:3:79142:79184	3535523	2	True				
ANR	3535569	AssignmentExpression	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . regs [ 0 ]		3535523	0		=			
ANR	3535570	ArrayIndexing	data [ l ++ ]		3535523	0					
ANR	3535571	Identifier	data		3535523	0					
ANR	3535572	PostIncDecOperationExpression	l ++		3535523	1					
ANR	3535573	Identifier	l		3535523	0					
ANR	3535574	IncDec	++		3535523	1					
ANR	3535575	InclusiveOrExpression	0x00 | op -> operands [ 0 ] . regs [ 0 ]		3535523	1		|			
ANR	3535576	PrimaryExpression	0x00		3535523	0					
ANR	3535577	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3535523	1					
ANR	3535578	MemberAccess	op -> operands [ 0 ] . regs		3535523	0					
ANR	3535579	ArrayIndexing	op -> operands [ 0 ]		3535523	0					
ANR	3535580	PtrMemberAccess	op -> operands		3535523	0					
ANR	3535581	Identifier	op		3535523	0					
ANR	3535582	Identifier	operands		3535523	1					
ANR	3535583	PrimaryExpression	0		3535523	1					
ANR	3535584	Identifier	regs		3535523	1					
ANR	3535585	PrimaryExpression	0		3535523	1					
ANR	3535586	ElseStatement	else		3535523	0					
ANR	3535587	CompoundStatement		9:9:195:195	3535523	0					
ANR	3535588	ReturnStatement	return - 1 ;	3091:3:79200:79209	3535523	0	True				
ANR	3535589	UnaryOperationExpression	- 1		3535523	0					
ANR	3535590	UnaryOperator	-		3535523	0					
ANR	3535591	PrimaryExpression	1		3535523	1					
ANR	3535592	BreakStatement	break ;	3093:2:79217:79222	3535523	2	True				
ANR	3535593	Label	default :	3094:1:79225:79232	3535523	3	True				
ANR	3535594	Identifier	default		3535523	0					
ANR	3535595	ReturnStatement	return - 1 ;	3095:2:79236:79245	3535523	4	True				
ANR	3535596	UnaryOperationExpression	- 1		3535523	0					
ANR	3535597	UnaryOperator	-		3535523	0					
ANR	3535598	PrimaryExpression	1		3535523	1					
ANR	3535599	ReturnStatement	return l ;	3097:1:79251:79259	3535523	2	True				
ANR	3535600	Identifier	l		3535523	0					
ANR	3535601	ReturnType	static int		3535523	1					
ANR	3535602	Identifier	opfxsave		3535523	2					
ANR	3535603	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3535523	3					
ANR	3535604	Parameter	RAsm * a	3082:20:78961:78967	3535523	0	True				
ANR	3535605	ParameterType	RAsm *		3535523	0					
ANR	3535606	Identifier	a		3535523	1					
ANR	3535607	Parameter	ut8 * data	3082:29:78970:78978	3535523	1	True				
ANR	3535608	ParameterType	ut8 *		3535523	0					
ANR	3535609	Identifier	data		3535523	1					
ANR	3535610	Parameter	const Opcode * op	3082:40:78981:78996	3535523	2	True				
ANR	3535611	ParameterType	const Opcode *		3535523	0					
ANR	3535612	Identifier	op		3535523	1					
ANR	3535613	CFGEntryNode	ENTRY		3535523		True				
ANR	3535614	CFGExitNode	EXIT		3535523		True				
ANR	3535615	Symbol	a		3535523						
ANR	3535616	Symbol	op		3535523						
ANR	3535617	Symbol	data		3535523						
ANR	3535618	Symbol	* op		3535523						
ANR	3535619	Symbol	* * op -> operands		3535523						
ANR	3535620	Symbol	l		3535523						
ANR	3535621	Symbol	* * op		3535523						
ANR	3535622	Symbol	* op -> operands		3535523						
ANR	3535623	Symbol	op -> operands_count		3535523						
ANR	3535624	Symbol	* op -> operands [ 0 ] . regs		3535523						
ANR	3535625	Symbol	op -> operands [ 0 ] . type		3535523						
ANR	3535626	Symbol	* * * op		3535523						
ANR	3535627	Symbol	op -> operands		3535523						
ANR	3535628	Symbol	OT_MEMORY		3535523						
ANR	3535629	Symbol	* data		3535523						
ANR	3535630	Symbol	op -> operands [ 0 ] . regs		3535523						
ANR	3535631	Function	opfist	3100:0:79264:79759							
ANR	3535632	FunctionDef	"opfist (RAsm * a , ut8 * data , const Opcode * op)"		3535631	0					
ANR	3535633	CompoundStatement		3100:56:79320:79759	3535631	0					
ANR	3535634	IdentifierDeclStatement	int l = 0 ;	3101:1:79323:79332	3535631	0	True				
ANR	3535635	IdentifierDecl	l = 0		3535631	0					
ANR	3535636	IdentifierDeclType	int		3535631	0					
ANR	3535637	Identifier	l		3535631	1					
ANR	3535638	AssignmentExpression	l = 0		3535631	2		=			
ANR	3535639	Identifier	l		3535631	0					
ANR	3535640	PrimaryExpression	0		3535631	1					
ANR	3535641	SwitchStatement	switch ( op -> operands_count )		3535631	1					
ANR	3535642	Condition	op -> operands_count	3102:9:79343:79360	3535631	0	True				
ANR	3535643	PtrMemberAccess	op -> operands_count		3535631	0					
ANR	3535644	Identifier	op		3535631	0					
ANR	3535645	Identifier	operands_count		3535631	1					
ANR	3535646	CompoundStatement		3:29:42:42	3535631	1					
ANR	3535647	Label	case 1 :	3103:1:79366:79372	3535631	0	True				
ANR	3535648	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3535631	1					
ANR	3535649	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3104:7:79381:79412	3535631	0	True				
ANR	3535650	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3535631	0		&			
ANR	3535651	MemberAccess	op -> operands [ 0 ] . type		3535631	0					
ANR	3535652	ArrayIndexing	op -> operands [ 0 ]		3535631	0					
ANR	3535653	PtrMemberAccess	op -> operands		3535631	0					
ANR	3535654	Identifier	op		3535631	0					
ANR	3535655	Identifier	operands		3535631	1					
ANR	3535656	PrimaryExpression	0		3535631	1					
ANR	3535657	Identifier	type		3535631	1					
ANR	3535658	Identifier	OT_MEMORY		3535631	1					
ANR	3535659	CompoundStatement		5:42:95:95	3535631	1					
ANR	3535660	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		3535631	0					
ANR	3535661	Condition	op -> operands [ 0 ] . type & OT_WORD	3105:8:79426:79455	3535631	0	True				
ANR	3535662	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		3535631	0		&			
ANR	3535663	MemberAccess	op -> operands [ 0 ] . type		3535631	0					
ANR	3535664	ArrayIndexing	op -> operands [ 0 ]		3535631	0					
ANR	3535665	PtrMemberAccess	op -> operands		3535631	0					
ANR	3535666	Identifier	op		3535631	0					
ANR	3535667	Identifier	operands		3535631	1					
ANR	3535668	PrimaryExpression	0		3535631	1					
ANR	3535669	Identifier	type		3535631	1					
ANR	3535670	Identifier	OT_WORD		3535631	1					
ANR	3535671	CompoundStatement		6:41:138:138	3535631	1					
ANR	3535672	ExpressionStatement	data [ l ++ ] = 0xdf	3106:4:79465:79481	3535631	0	True				
ANR	3535673	AssignmentExpression	data [ l ++ ] = 0xdf		3535631	0		=			
ANR	3535674	ArrayIndexing	data [ l ++ ]		3535631	0					
ANR	3535675	Identifier	data		3535631	0					
ANR	3535676	PostIncDecOperationExpression	l ++		3535631	1					
ANR	3535677	Identifier	l		3535631	0					
ANR	3535678	IncDec	++		3535631	1					
ANR	3535679	PrimaryExpression	0xdf		3535631	1					
ANR	3535680	ExpressionStatement	data [ l ++ ] = 0x10 | op -> operands [ 0 ] . regs [ 0 ]	3107:4:79487:79529	3535631	1	True				
ANR	3535681	AssignmentExpression	data [ l ++ ] = 0x10 | op -> operands [ 0 ] . regs [ 0 ]		3535631	0		=			
ANR	3535682	ArrayIndexing	data [ l ++ ]		3535631	0					
ANR	3535683	Identifier	data		3535631	0					
ANR	3535684	PostIncDecOperationExpression	l ++		3535631	1					
ANR	3535685	Identifier	l		3535631	0					
ANR	3535686	IncDec	++		3535631	1					
ANR	3535687	InclusiveOrExpression	0x10 | op -> operands [ 0 ] . regs [ 0 ]		3535631	1		|			
ANR	3535688	PrimaryExpression	0x10		3535631	0					
ANR	3535689	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3535631	1					
ANR	3535690	MemberAccess	op -> operands [ 0 ] . regs		3535631	0					
ANR	3535691	ArrayIndexing	op -> operands [ 0 ]		3535631	0					
ANR	3535692	PtrMemberAccess	op -> operands		3535631	0					
ANR	3535693	Identifier	op		3535631	0					
ANR	3535694	Identifier	operands		3535631	1					
ANR	3535695	PrimaryExpression	0		3535631	1					
ANR	3535696	Identifier	regs		3535631	1					
ANR	3535697	PrimaryExpression	0		3535631	1					
ANR	3535698	ElseStatement	else		3535631	0					
ANR	3535699	IfStatement	if ( op -> operands [ 0 ] . type & OT_DWORD )		3535631	0					
ANR	3535700	Condition	op -> operands [ 0 ] . type & OT_DWORD	3108:15:79546:79576	3535631	0	True				
ANR	3535701	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		3535631	0		&			
ANR	3535702	MemberAccess	op -> operands [ 0 ] . type		3535631	0					
ANR	3535703	ArrayIndexing	op -> operands [ 0 ]		3535631	0					
ANR	3535704	PtrMemberAccess	op -> operands		3535631	0					
ANR	3535705	Identifier	op		3535631	0					
ANR	3535706	Identifier	operands		3535631	1					
ANR	3535707	PrimaryExpression	0		3535631	1					
ANR	3535708	Identifier	type		3535631	1					
ANR	3535709	Identifier	OT_DWORD		3535631	1					
ANR	3535710	CompoundStatement		9:49:259:259	3535631	1					
ANR	3535711	ExpressionStatement	data [ l ++ ] = 0xdb	3109:4:79586:79602	3535631	0	True				
ANR	3535712	AssignmentExpression	data [ l ++ ] = 0xdb		3535631	0		=			
ANR	3535713	ArrayIndexing	data [ l ++ ]		3535631	0					
ANR	3535714	Identifier	data		3535631	0					
ANR	3535715	PostIncDecOperationExpression	l ++		3535631	1					
ANR	3535716	Identifier	l		3535631	0					
ANR	3535717	IncDec	++		3535631	1					
ANR	3535718	PrimaryExpression	0xdb		3535631	1					
ANR	3535719	ExpressionStatement	data [ l ++ ] = 0x10 | op -> operands [ 0 ] . regs [ 0 ]	3110:4:79608:79650	3535631	1	True				
ANR	3535720	AssignmentExpression	data [ l ++ ] = 0x10 | op -> operands [ 0 ] . regs [ 0 ]		3535631	0		=			
ANR	3535721	ArrayIndexing	data [ l ++ ]		3535631	0					
ANR	3535722	Identifier	data		3535631	0					
ANR	3535723	PostIncDecOperationExpression	l ++		3535631	1					
ANR	3535724	Identifier	l		3535631	0					
ANR	3535725	IncDec	++		3535631	1					
ANR	3535726	InclusiveOrExpression	0x10 | op -> operands [ 0 ] . regs [ 0 ]		3535631	1		|			
ANR	3535727	PrimaryExpression	0x10		3535631	0					
ANR	3535728	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3535631	1					
ANR	3535729	MemberAccess	op -> operands [ 0 ] . regs		3535631	0					
ANR	3535730	ArrayIndexing	op -> operands [ 0 ]		3535631	0					
ANR	3535731	PtrMemberAccess	op -> operands		3535631	0					
ANR	3535732	Identifier	op		3535631	0					
ANR	3535733	Identifier	operands		3535631	1					
ANR	3535734	PrimaryExpression	0		3535631	1					
ANR	3535735	Identifier	regs		3535631	1					
ANR	3535736	PrimaryExpression	0		3535631	1					
ANR	3535737	ElseStatement	else		3535631	0					
ANR	3535738	CompoundStatement		12:10:341:341	3535631	0					
ANR	3535739	ReturnStatement	return - 1 ;	3112:4:79668:79677	3535631	0	True				
ANR	3535740	UnaryOperationExpression	- 1		3535631	0					
ANR	3535741	UnaryOperator	-		3535631	0					
ANR	3535742	PrimaryExpression	1		3535631	1					
ANR	3535743	ElseStatement	else		3535631	0					
ANR	3535744	CompoundStatement		15:9:372:372	3535631	0					
ANR	3535745	ReturnStatement	return - 1 ;	3115:3:79698:79707	3535631	0	True				
ANR	3535746	UnaryOperationExpression	- 1		3535631	0					
ANR	3535747	UnaryOperator	-		3535631	0					
ANR	3535748	PrimaryExpression	1		3535631	1					
ANR	3535749	BreakStatement	break ;	3117:2:79715:79720	3535631	2	True				
ANR	3535750	Label	default :	3118:1:79723:79730	3535631	3	True				
ANR	3535751	Identifier	default		3535631	0					
ANR	3535752	ReturnStatement	return - 1 ;	3119:2:79734:79743	3535631	4	True				
ANR	3535753	UnaryOperationExpression	- 1		3535631	0					
ANR	3535754	UnaryOperator	-		3535631	0					
ANR	3535755	PrimaryExpression	1		3535631	1					
ANR	3535756	ReturnStatement	return l ;	3121:1:79749:79757	3535631	2	True				
ANR	3535757	Identifier	l		3535631	0					
ANR	3535758	ReturnType	static int		3535631	1					
ANR	3535759	Identifier	opfist		3535631	2					
ANR	3535760	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3535631	3					
ANR	3535761	Parameter	RAsm * a	3100:18:79282:79288	3535631	0	True				
ANR	3535762	ParameterType	RAsm *		3535631	0					
ANR	3535763	Identifier	a		3535631	1					
ANR	3535764	Parameter	ut8 * data	3100:27:79291:79299	3535631	1	True				
ANR	3535765	ParameterType	ut8 *		3535631	0					
ANR	3535766	Identifier	data		3535631	1					
ANR	3535767	Parameter	const Opcode * op	3100:38:79302:79317	3535631	2	True				
ANR	3535768	ParameterType	const Opcode *		3535631	0					
ANR	3535769	Identifier	op		3535631	1					
ANR	3535770	CFGEntryNode	ENTRY		3535631		True				
ANR	3535771	CFGExitNode	EXIT		3535631		True				
ANR	3535772	Symbol	a		3535631						
ANR	3535773	Symbol	op		3535631						
ANR	3535774	Symbol	OT_WORD		3535631						
ANR	3535775	Symbol	data		3535631						
ANR	3535776	Symbol	* op		3535631						
ANR	3535777	Symbol	* * op -> operands		3535631						
ANR	3535778	Symbol	l		3535631						
ANR	3535779	Symbol	* * op		3535631						
ANR	3535780	Symbol	* op -> operands		3535631						
ANR	3535781	Symbol	op -> operands_count		3535631						
ANR	3535782	Symbol	* op -> operands [ 0 ] . regs		3535631						
ANR	3535783	Symbol	op -> operands [ 0 ] . type		3535631						
ANR	3535784	Symbol	* * * op		3535631						
ANR	3535785	Symbol	op -> operands		3535631						
ANR	3535786	Symbol	OT_MEMORY		3535631						
ANR	3535787	Symbol	* data		3535631						
ANR	3535788	Symbol	op -> operands [ 0 ] . regs		3535631						
ANR	3535789	Symbol	OT_DWORD		3535631						
ANR	3535790	Function	opfistp	3124:0:79762:80379							
ANR	3535791	FunctionDef	"opfistp (RAsm * a , ut8 * data , const Opcode * op)"		3535790	0					
ANR	3535792	CompoundStatement		3124:57:79819:80379	3535790	0					
ANR	3535793	IdentifierDeclStatement	int l = 0 ;	3125:1:79822:79831	3535790	0	True				
ANR	3535794	IdentifierDecl	l = 0		3535790	0					
ANR	3535795	IdentifierDeclType	int		3535790	0					
ANR	3535796	Identifier	l		3535790	1					
ANR	3535797	AssignmentExpression	l = 0		3535790	2		=			
ANR	3535798	Identifier	l		3535790	0					
ANR	3535799	PrimaryExpression	0		3535790	1					
ANR	3535800	SwitchStatement	switch ( op -> operands_count )		3535790	1					
ANR	3535801	Condition	op -> operands_count	3126:9:79842:79859	3535790	0	True				
ANR	3535802	PtrMemberAccess	op -> operands_count		3535790	0					
ANR	3535803	Identifier	op		3535790	0					
ANR	3535804	Identifier	operands_count		3535790	1					
ANR	3535805	CompoundStatement		3:29:42:42	3535790	1					
ANR	3535806	Label	case 1 :	3127:1:79865:79871	3535790	0	True				
ANR	3535807	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3535790	1					
ANR	3535808	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3128:7:79880:79911	3535790	0	True				
ANR	3535809	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3535790	0		&			
ANR	3535810	MemberAccess	op -> operands [ 0 ] . type		3535790	0					
ANR	3535811	ArrayIndexing	op -> operands [ 0 ]		3535790	0					
ANR	3535812	PtrMemberAccess	op -> operands		3535790	0					
ANR	3535813	Identifier	op		3535790	0					
ANR	3535814	Identifier	operands		3535790	1					
ANR	3535815	PrimaryExpression	0		3535790	1					
ANR	3535816	Identifier	type		3535790	1					
ANR	3535817	Identifier	OT_MEMORY		3535790	1					
ANR	3535818	CompoundStatement		5:42:95:95	3535790	1					
ANR	3535819	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		3535790	0					
ANR	3535820	Condition	op -> operands [ 0 ] . type & OT_WORD	3129:8:79925:79954	3535790	0	True				
ANR	3535821	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		3535790	0		&			
ANR	3535822	MemberAccess	op -> operands [ 0 ] . type		3535790	0					
ANR	3535823	ArrayIndexing	op -> operands [ 0 ]		3535790	0					
ANR	3535824	PtrMemberAccess	op -> operands		3535790	0					
ANR	3535825	Identifier	op		3535790	0					
ANR	3535826	Identifier	operands		3535790	1					
ANR	3535827	PrimaryExpression	0		3535790	1					
ANR	3535828	Identifier	type		3535790	1					
ANR	3535829	Identifier	OT_WORD		3535790	1					
ANR	3535830	CompoundStatement		6:41:138:138	3535790	1					
ANR	3535831	ExpressionStatement	data [ l ++ ] = 0xdf	3130:4:79964:79980	3535790	0	True				
ANR	3535832	AssignmentExpression	data [ l ++ ] = 0xdf		3535790	0		=			
ANR	3535833	ArrayIndexing	data [ l ++ ]		3535790	0					
ANR	3535834	Identifier	data		3535790	0					
ANR	3535835	PostIncDecOperationExpression	l ++		3535790	1					
ANR	3535836	Identifier	l		3535790	0					
ANR	3535837	IncDec	++		3535790	1					
ANR	3535838	PrimaryExpression	0xdf		3535790	1					
ANR	3535839	ExpressionStatement	data [ l ++ ] = 0x18 | op -> operands [ 0 ] . regs [ 0 ]	3131:4:79986:80028	3535790	1	True				
ANR	3535840	AssignmentExpression	data [ l ++ ] = 0x18 | op -> operands [ 0 ] . regs [ 0 ]		3535790	0		=			
ANR	3535841	ArrayIndexing	data [ l ++ ]		3535790	0					
ANR	3535842	Identifier	data		3535790	0					
ANR	3535843	PostIncDecOperationExpression	l ++		3535790	1					
ANR	3535844	Identifier	l		3535790	0					
ANR	3535845	IncDec	++		3535790	1					
ANR	3535846	InclusiveOrExpression	0x18 | op -> operands [ 0 ] . regs [ 0 ]		3535790	1		|			
ANR	3535847	PrimaryExpression	0x18		3535790	0					
ANR	3535848	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3535790	1					
ANR	3535849	MemberAccess	op -> operands [ 0 ] . regs		3535790	0					
ANR	3535850	ArrayIndexing	op -> operands [ 0 ]		3535790	0					
ANR	3535851	PtrMemberAccess	op -> operands		3535790	0					
ANR	3535852	Identifier	op		3535790	0					
ANR	3535853	Identifier	operands		3535790	1					
ANR	3535854	PrimaryExpression	0		3535790	1					
ANR	3535855	Identifier	regs		3535790	1					
ANR	3535856	PrimaryExpression	0		3535790	1					
ANR	3535857	ElseStatement	else		3535790	0					
ANR	3535858	IfStatement	if ( op -> operands [ 0 ] . type & OT_DWORD )		3535790	0					
ANR	3535859	Condition	op -> operands [ 0 ] . type & OT_DWORD	3132:15:80045:80075	3535790	0	True				
ANR	3535860	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		3535790	0		&			
ANR	3535861	MemberAccess	op -> operands [ 0 ] . type		3535790	0					
ANR	3535862	ArrayIndexing	op -> operands [ 0 ]		3535790	0					
ANR	3535863	PtrMemberAccess	op -> operands		3535790	0					
ANR	3535864	Identifier	op		3535790	0					
ANR	3535865	Identifier	operands		3535790	1					
ANR	3535866	PrimaryExpression	0		3535790	1					
ANR	3535867	Identifier	type		3535790	1					
ANR	3535868	Identifier	OT_DWORD		3535790	1					
ANR	3535869	CompoundStatement		9:49:259:259	3535790	1					
ANR	3535870	ExpressionStatement	data [ l ++ ] = 0xdb	3133:4:80085:80101	3535790	0	True				
ANR	3535871	AssignmentExpression	data [ l ++ ] = 0xdb		3535790	0		=			
ANR	3535872	ArrayIndexing	data [ l ++ ]		3535790	0					
ANR	3535873	Identifier	data		3535790	0					
ANR	3535874	PostIncDecOperationExpression	l ++		3535790	1					
ANR	3535875	Identifier	l		3535790	0					
ANR	3535876	IncDec	++		3535790	1					
ANR	3535877	PrimaryExpression	0xdb		3535790	1					
ANR	3535878	ExpressionStatement	data [ l ++ ] = 0x18 | op -> operands [ 0 ] . regs [ 0 ]	3134:4:80107:80149	3535790	1	True				
ANR	3535879	AssignmentExpression	data [ l ++ ] = 0x18 | op -> operands [ 0 ] . regs [ 0 ]		3535790	0		=			
ANR	3535880	ArrayIndexing	data [ l ++ ]		3535790	0					
ANR	3535881	Identifier	data		3535790	0					
ANR	3535882	PostIncDecOperationExpression	l ++		3535790	1					
ANR	3535883	Identifier	l		3535790	0					
ANR	3535884	IncDec	++		3535790	1					
ANR	3535885	InclusiveOrExpression	0x18 | op -> operands [ 0 ] . regs [ 0 ]		3535790	1		|			
ANR	3535886	PrimaryExpression	0x18		3535790	0					
ANR	3535887	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3535790	1					
ANR	3535888	MemberAccess	op -> operands [ 0 ] . regs		3535790	0					
ANR	3535889	ArrayIndexing	op -> operands [ 0 ]		3535790	0					
ANR	3535890	PtrMemberAccess	op -> operands		3535790	0					
ANR	3535891	Identifier	op		3535790	0					
ANR	3535892	Identifier	operands		3535790	1					
ANR	3535893	PrimaryExpression	0		3535790	1					
ANR	3535894	Identifier	regs		3535790	1					
ANR	3535895	PrimaryExpression	0		3535790	1					
ANR	3535896	ElseStatement	else		3535790	0					
ANR	3535897	IfStatement	if ( op -> operands [ 0 ] . type & OT_QWORD )		3535790	0					
ANR	3535898	Condition	op -> operands [ 0 ] . type & OT_QWORD	3135:15:80166:80196	3535790	0	True				
ANR	3535899	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		3535790	0		&			
ANR	3535900	MemberAccess	op -> operands [ 0 ] . type		3535790	0					
ANR	3535901	ArrayIndexing	op -> operands [ 0 ]		3535790	0					
ANR	3535902	PtrMemberAccess	op -> operands		3535790	0					
ANR	3535903	Identifier	op		3535790	0					
ANR	3535904	Identifier	operands		3535790	1					
ANR	3535905	PrimaryExpression	0		3535790	1					
ANR	3535906	Identifier	type		3535790	1					
ANR	3535907	Identifier	OT_QWORD		3535790	1					
ANR	3535908	CompoundStatement		12:49:380:380	3535790	1					
ANR	3535909	ExpressionStatement	data [ l ++ ] = 0xdf	3136:4:80206:80222	3535790	0	True				
ANR	3535910	AssignmentExpression	data [ l ++ ] = 0xdf		3535790	0		=			
ANR	3535911	ArrayIndexing	data [ l ++ ]		3535790	0					
ANR	3535912	Identifier	data		3535790	0					
ANR	3535913	PostIncDecOperationExpression	l ++		3535790	1					
ANR	3535914	Identifier	l		3535790	0					
ANR	3535915	IncDec	++		3535790	1					
ANR	3535916	PrimaryExpression	0xdf		3535790	1					
ANR	3535917	ExpressionStatement	data [ l ++ ] = 0x38 | op -> operands [ 0 ] . regs [ 0 ]	3137:4:80228:80270	3535790	1	True				
ANR	3535918	AssignmentExpression	data [ l ++ ] = 0x38 | op -> operands [ 0 ] . regs [ 0 ]		3535790	0		=			
ANR	3535919	ArrayIndexing	data [ l ++ ]		3535790	0					
ANR	3535920	Identifier	data		3535790	0					
ANR	3535921	PostIncDecOperationExpression	l ++		3535790	1					
ANR	3535922	Identifier	l		3535790	0					
ANR	3535923	IncDec	++		3535790	1					
ANR	3535924	InclusiveOrExpression	0x38 | op -> operands [ 0 ] . regs [ 0 ]		3535790	1		|			
ANR	3535925	PrimaryExpression	0x38		3535790	0					
ANR	3535926	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3535790	1					
ANR	3535927	MemberAccess	op -> operands [ 0 ] . regs		3535790	0					
ANR	3535928	ArrayIndexing	op -> operands [ 0 ]		3535790	0					
ANR	3535929	PtrMemberAccess	op -> operands		3535790	0					
ANR	3535930	Identifier	op		3535790	0					
ANR	3535931	Identifier	operands		3535790	1					
ANR	3535932	PrimaryExpression	0		3535790	1					
ANR	3535933	Identifier	regs		3535790	1					
ANR	3535934	PrimaryExpression	0		3535790	1					
ANR	3535935	ElseStatement	else		3535790	0					
ANR	3535936	CompoundStatement		15:10:462:462	3535790	0					
ANR	3535937	ReturnStatement	return - 1 ;	3139:4:80288:80297	3535790	0	True				
ANR	3535938	UnaryOperationExpression	- 1		3535790	0					
ANR	3535939	UnaryOperator	-		3535790	0					
ANR	3535940	PrimaryExpression	1		3535790	1					
ANR	3535941	ElseStatement	else		3535790	0					
ANR	3535942	CompoundStatement		18:9:493:493	3535790	0					
ANR	3535943	ReturnStatement	return - 1 ;	3142:3:80318:80327	3535790	0	True				
ANR	3535944	UnaryOperationExpression	- 1		3535790	0					
ANR	3535945	UnaryOperator	-		3535790	0					
ANR	3535946	PrimaryExpression	1		3535790	1					
ANR	3535947	BreakStatement	break ;	3144:2:80335:80340	3535790	2	True				
ANR	3535948	Label	default :	3145:1:80343:80350	3535790	3	True				
ANR	3535949	Identifier	default		3535790	0					
ANR	3535950	ReturnStatement	return - 1 ;	3146:2:80354:80363	3535790	4	True				
ANR	3535951	UnaryOperationExpression	- 1		3535790	0					
ANR	3535952	UnaryOperator	-		3535790	0					
ANR	3535953	PrimaryExpression	1		3535790	1					
ANR	3535954	ReturnStatement	return l ;	3148:1:80369:80377	3535790	2	True				
ANR	3535955	Identifier	l		3535790	0					
ANR	3535956	ReturnType	static int		3535790	1					
ANR	3535957	Identifier	opfistp		3535790	2					
ANR	3535958	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3535790	3					
ANR	3535959	Parameter	RAsm * a	3124:19:79781:79787	3535790	0	True				
ANR	3535960	ParameterType	RAsm *		3535790	0					
ANR	3535961	Identifier	a		3535790	1					
ANR	3535962	Parameter	ut8 * data	3124:28:79790:79798	3535790	1	True				
ANR	3535963	ParameterType	ut8 *		3535790	0					
ANR	3535964	Identifier	data		3535790	1					
ANR	3535965	Parameter	const Opcode * op	3124:39:79801:79816	3535790	2	True				
ANR	3535966	ParameterType	const Opcode *		3535790	0					
ANR	3535967	Identifier	op		3535790	1					
ANR	3535968	CFGEntryNode	ENTRY		3535790		True				
ANR	3535969	CFGExitNode	EXIT		3535790		True				
ANR	3535970	Symbol	a		3535790						
ANR	3535971	Symbol	op		3535790						
ANR	3535972	Symbol	OT_WORD		3535790						
ANR	3535973	Symbol	OT_QWORD		3535790						
ANR	3535974	Symbol	data		3535790						
ANR	3535975	Symbol	* op		3535790						
ANR	3535976	Symbol	* * op -> operands		3535790						
ANR	3535977	Symbol	l		3535790						
ANR	3535978	Symbol	* * op		3535790						
ANR	3535979	Symbol	* op -> operands		3535790						
ANR	3535980	Symbol	op -> operands_count		3535790						
ANR	3535981	Symbol	* op -> operands [ 0 ] . regs		3535790						
ANR	3535982	Symbol	op -> operands [ 0 ] . type		3535790						
ANR	3535983	Symbol	* * * op		3535790						
ANR	3535984	Symbol	op -> operands		3535790						
ANR	3535985	Symbol	OT_MEMORY		3535790						
ANR	3535986	Symbol	* data		3535790						
ANR	3535987	Symbol	op -> operands [ 0 ] . regs		3535790						
ANR	3535988	Symbol	OT_DWORD		3535790						
ANR	3535989	Function	opfisttp	3151:0:80382:81000							
ANR	3535990	FunctionDef	"opfisttp (RAsm * a , ut8 * data , const Opcode * op)"		3535989	0					
ANR	3535991	CompoundStatement		3151:58:80440:81000	3535989	0					
ANR	3535992	IdentifierDeclStatement	int l = 0 ;	3152:1:80443:80452	3535989	0	True				
ANR	3535993	IdentifierDecl	l = 0		3535989	0					
ANR	3535994	IdentifierDeclType	int		3535989	0					
ANR	3535995	Identifier	l		3535989	1					
ANR	3535996	AssignmentExpression	l = 0		3535989	2		=			
ANR	3535997	Identifier	l		3535989	0					
ANR	3535998	PrimaryExpression	0		3535989	1					
ANR	3535999	SwitchStatement	switch ( op -> operands_count )		3535989	1					
ANR	3536000	Condition	op -> operands_count	3153:9:80463:80480	3535989	0	True				
ANR	3536001	PtrMemberAccess	op -> operands_count		3535989	0					
ANR	3536002	Identifier	op		3535989	0					
ANR	3536003	Identifier	operands_count		3535989	1					
ANR	3536004	CompoundStatement		3:29:42:42	3535989	1					
ANR	3536005	Label	case 1 :	3154:1:80486:80492	3535989	0	True				
ANR	3536006	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3535989	1					
ANR	3536007	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3155:7:80501:80532	3535989	0	True				
ANR	3536008	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3535989	0		&			
ANR	3536009	MemberAccess	op -> operands [ 0 ] . type		3535989	0					
ANR	3536010	ArrayIndexing	op -> operands [ 0 ]		3535989	0					
ANR	3536011	PtrMemberAccess	op -> operands		3535989	0					
ANR	3536012	Identifier	op		3535989	0					
ANR	3536013	Identifier	operands		3535989	1					
ANR	3536014	PrimaryExpression	0		3535989	1					
ANR	3536015	Identifier	type		3535989	1					
ANR	3536016	Identifier	OT_MEMORY		3535989	1					
ANR	3536017	CompoundStatement		5:42:95:95	3535989	1					
ANR	3536018	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		3535989	0					
ANR	3536019	Condition	op -> operands [ 0 ] . type & OT_WORD	3156:8:80546:80575	3535989	0	True				
ANR	3536020	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		3535989	0		&			
ANR	3536021	MemberAccess	op -> operands [ 0 ] . type		3535989	0					
ANR	3536022	ArrayIndexing	op -> operands [ 0 ]		3535989	0					
ANR	3536023	PtrMemberAccess	op -> operands		3535989	0					
ANR	3536024	Identifier	op		3535989	0					
ANR	3536025	Identifier	operands		3535989	1					
ANR	3536026	PrimaryExpression	0		3535989	1					
ANR	3536027	Identifier	type		3535989	1					
ANR	3536028	Identifier	OT_WORD		3535989	1					
ANR	3536029	CompoundStatement		6:41:138:138	3535989	1					
ANR	3536030	ExpressionStatement	data [ l ++ ] = 0xdf	3157:4:80585:80601	3535989	0	True				
ANR	3536031	AssignmentExpression	data [ l ++ ] = 0xdf		3535989	0		=			
ANR	3536032	ArrayIndexing	data [ l ++ ]		3535989	0					
ANR	3536033	Identifier	data		3535989	0					
ANR	3536034	PostIncDecOperationExpression	l ++		3535989	1					
ANR	3536035	Identifier	l		3535989	0					
ANR	3536036	IncDec	++		3535989	1					
ANR	3536037	PrimaryExpression	0xdf		3535989	1					
ANR	3536038	ExpressionStatement	data [ l ++ ] = 0x08 | op -> operands [ 0 ] . regs [ 0 ]	3158:4:80607:80649	3535989	1	True				
ANR	3536039	AssignmentExpression	data [ l ++ ] = 0x08 | op -> operands [ 0 ] . regs [ 0 ]		3535989	0		=			
ANR	3536040	ArrayIndexing	data [ l ++ ]		3535989	0					
ANR	3536041	Identifier	data		3535989	0					
ANR	3536042	PostIncDecOperationExpression	l ++		3535989	1					
ANR	3536043	Identifier	l		3535989	0					
ANR	3536044	IncDec	++		3535989	1					
ANR	3536045	InclusiveOrExpression	0x08 | op -> operands [ 0 ] . regs [ 0 ]		3535989	1		|			
ANR	3536046	PrimaryExpression	0x08		3535989	0					
ANR	3536047	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3535989	1					
ANR	3536048	MemberAccess	op -> operands [ 0 ] . regs		3535989	0					
ANR	3536049	ArrayIndexing	op -> operands [ 0 ]		3535989	0					
ANR	3536050	PtrMemberAccess	op -> operands		3535989	0					
ANR	3536051	Identifier	op		3535989	0					
ANR	3536052	Identifier	operands		3535989	1					
ANR	3536053	PrimaryExpression	0		3535989	1					
ANR	3536054	Identifier	regs		3535989	1					
ANR	3536055	PrimaryExpression	0		3535989	1					
ANR	3536056	ElseStatement	else		3535989	0					
ANR	3536057	IfStatement	if ( op -> operands [ 0 ] . type & OT_DWORD )		3535989	0					
ANR	3536058	Condition	op -> operands [ 0 ] . type & OT_DWORD	3159:15:80666:80696	3535989	0	True				
ANR	3536059	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		3535989	0		&			
ANR	3536060	MemberAccess	op -> operands [ 0 ] . type		3535989	0					
ANR	3536061	ArrayIndexing	op -> operands [ 0 ]		3535989	0					
ANR	3536062	PtrMemberAccess	op -> operands		3535989	0					
ANR	3536063	Identifier	op		3535989	0					
ANR	3536064	Identifier	operands		3535989	1					
ANR	3536065	PrimaryExpression	0		3535989	1					
ANR	3536066	Identifier	type		3535989	1					
ANR	3536067	Identifier	OT_DWORD		3535989	1					
ANR	3536068	CompoundStatement		9:49:259:259	3535989	1					
ANR	3536069	ExpressionStatement	data [ l ++ ] = 0xdb	3160:4:80706:80722	3535989	0	True				
ANR	3536070	AssignmentExpression	data [ l ++ ] = 0xdb		3535989	0		=			
ANR	3536071	ArrayIndexing	data [ l ++ ]		3535989	0					
ANR	3536072	Identifier	data		3535989	0					
ANR	3536073	PostIncDecOperationExpression	l ++		3535989	1					
ANR	3536074	Identifier	l		3535989	0					
ANR	3536075	IncDec	++		3535989	1					
ANR	3536076	PrimaryExpression	0xdb		3535989	1					
ANR	3536077	ExpressionStatement	data [ l ++ ] = 0x08 | op -> operands [ 0 ] . regs [ 0 ]	3161:4:80728:80770	3535989	1	True				
ANR	3536078	AssignmentExpression	data [ l ++ ] = 0x08 | op -> operands [ 0 ] . regs [ 0 ]		3535989	0		=			
ANR	3536079	ArrayIndexing	data [ l ++ ]		3535989	0					
ANR	3536080	Identifier	data		3535989	0					
ANR	3536081	PostIncDecOperationExpression	l ++		3535989	1					
ANR	3536082	Identifier	l		3535989	0					
ANR	3536083	IncDec	++		3535989	1					
ANR	3536084	InclusiveOrExpression	0x08 | op -> operands [ 0 ] . regs [ 0 ]		3535989	1		|			
ANR	3536085	PrimaryExpression	0x08		3535989	0					
ANR	3536086	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3535989	1					
ANR	3536087	MemberAccess	op -> operands [ 0 ] . regs		3535989	0					
ANR	3536088	ArrayIndexing	op -> operands [ 0 ]		3535989	0					
ANR	3536089	PtrMemberAccess	op -> operands		3535989	0					
ANR	3536090	Identifier	op		3535989	0					
ANR	3536091	Identifier	operands		3535989	1					
ANR	3536092	PrimaryExpression	0		3535989	1					
ANR	3536093	Identifier	regs		3535989	1					
ANR	3536094	PrimaryExpression	0		3535989	1					
ANR	3536095	ElseStatement	else		3535989	0					
ANR	3536096	IfStatement	if ( op -> operands [ 0 ] . type & OT_QWORD )		3535989	0					
ANR	3536097	Condition	op -> operands [ 0 ] . type & OT_QWORD	3162:15:80787:80817	3535989	0	True				
ANR	3536098	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		3535989	0		&			
ANR	3536099	MemberAccess	op -> operands [ 0 ] . type		3535989	0					
ANR	3536100	ArrayIndexing	op -> operands [ 0 ]		3535989	0					
ANR	3536101	PtrMemberAccess	op -> operands		3535989	0					
ANR	3536102	Identifier	op		3535989	0					
ANR	3536103	Identifier	operands		3535989	1					
ANR	3536104	PrimaryExpression	0		3535989	1					
ANR	3536105	Identifier	type		3535989	1					
ANR	3536106	Identifier	OT_QWORD		3535989	1					
ANR	3536107	CompoundStatement		12:49:380:380	3535989	1					
ANR	3536108	ExpressionStatement	data [ l ++ ] = 0xdd	3163:4:80827:80843	3535989	0	True				
ANR	3536109	AssignmentExpression	data [ l ++ ] = 0xdd		3535989	0		=			
ANR	3536110	ArrayIndexing	data [ l ++ ]		3535989	0					
ANR	3536111	Identifier	data		3535989	0					
ANR	3536112	PostIncDecOperationExpression	l ++		3535989	1					
ANR	3536113	Identifier	l		3535989	0					
ANR	3536114	IncDec	++		3535989	1					
ANR	3536115	PrimaryExpression	0xdd		3535989	1					
ANR	3536116	ExpressionStatement	data [ l ++ ] = 0x08 | op -> operands [ 0 ] . regs [ 0 ]	3164:4:80849:80891	3535989	1	True				
ANR	3536117	AssignmentExpression	data [ l ++ ] = 0x08 | op -> operands [ 0 ] . regs [ 0 ]		3535989	0		=			
ANR	3536118	ArrayIndexing	data [ l ++ ]		3535989	0					
ANR	3536119	Identifier	data		3535989	0					
ANR	3536120	PostIncDecOperationExpression	l ++		3535989	1					
ANR	3536121	Identifier	l		3535989	0					
ANR	3536122	IncDec	++		3535989	1					
ANR	3536123	InclusiveOrExpression	0x08 | op -> operands [ 0 ] . regs [ 0 ]		3535989	1		|			
ANR	3536124	PrimaryExpression	0x08		3535989	0					
ANR	3536125	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3535989	1					
ANR	3536126	MemberAccess	op -> operands [ 0 ] . regs		3535989	0					
ANR	3536127	ArrayIndexing	op -> operands [ 0 ]		3535989	0					
ANR	3536128	PtrMemberAccess	op -> operands		3535989	0					
ANR	3536129	Identifier	op		3535989	0					
ANR	3536130	Identifier	operands		3535989	1					
ANR	3536131	PrimaryExpression	0		3535989	1					
ANR	3536132	Identifier	regs		3535989	1					
ANR	3536133	PrimaryExpression	0		3535989	1					
ANR	3536134	ElseStatement	else		3535989	0					
ANR	3536135	CompoundStatement		15:10:462:462	3535989	0					
ANR	3536136	ReturnStatement	return - 1 ;	3166:4:80909:80918	3535989	0	True				
ANR	3536137	UnaryOperationExpression	- 1		3535989	0					
ANR	3536138	UnaryOperator	-		3535989	0					
ANR	3536139	PrimaryExpression	1		3535989	1					
ANR	3536140	ElseStatement	else		3535989	0					
ANR	3536141	CompoundStatement		18:9:493:493	3535989	0					
ANR	3536142	ReturnStatement	return - 1 ;	3169:3:80939:80948	3535989	0	True				
ANR	3536143	UnaryOperationExpression	- 1		3535989	0					
ANR	3536144	UnaryOperator	-		3535989	0					
ANR	3536145	PrimaryExpression	1		3535989	1					
ANR	3536146	BreakStatement	break ;	3171:2:80956:80961	3535989	2	True				
ANR	3536147	Label	default :	3172:1:80964:80971	3535989	3	True				
ANR	3536148	Identifier	default		3535989	0					
ANR	3536149	ReturnStatement	return - 1 ;	3173:2:80975:80984	3535989	4	True				
ANR	3536150	UnaryOperationExpression	- 1		3535989	0					
ANR	3536151	UnaryOperator	-		3535989	0					
ANR	3536152	PrimaryExpression	1		3535989	1					
ANR	3536153	ReturnStatement	return l ;	3175:1:80990:80998	3535989	2	True				
ANR	3536154	Identifier	l		3535989	0					
ANR	3536155	ReturnType	static int		3535989	1					
ANR	3536156	Identifier	opfisttp		3535989	2					
ANR	3536157	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3535989	3					
ANR	3536158	Parameter	RAsm * a	3151:20:80402:80408	3535989	0	True				
ANR	3536159	ParameterType	RAsm *		3535989	0					
ANR	3536160	Identifier	a		3535989	1					
ANR	3536161	Parameter	ut8 * data	3151:29:80411:80419	3535989	1	True				
ANR	3536162	ParameterType	ut8 *		3535989	0					
ANR	3536163	Identifier	data		3535989	1					
ANR	3536164	Parameter	const Opcode * op	3151:40:80422:80437	3535989	2	True				
ANR	3536165	ParameterType	const Opcode *		3535989	0					
ANR	3536166	Identifier	op		3535989	1					
ANR	3536167	CFGEntryNode	ENTRY		3535989		True				
ANR	3536168	CFGExitNode	EXIT		3535989		True				
ANR	3536169	Symbol	a		3535989						
ANR	3536170	Symbol	op		3535989						
ANR	3536171	Symbol	OT_WORD		3535989						
ANR	3536172	Symbol	OT_QWORD		3535989						
ANR	3536173	Symbol	data		3535989						
ANR	3536174	Symbol	* op		3535989						
ANR	3536175	Symbol	* * op -> operands		3535989						
ANR	3536176	Symbol	l		3535989						
ANR	3536177	Symbol	* * op		3535989						
ANR	3536178	Symbol	* op -> operands		3535989						
ANR	3536179	Symbol	op -> operands_count		3535989						
ANR	3536180	Symbol	* op -> operands [ 0 ] . regs		3535989						
ANR	3536181	Symbol	op -> operands [ 0 ] . type		3535989						
ANR	3536182	Symbol	* * * op		3535989						
ANR	3536183	Symbol	op -> operands		3535989						
ANR	3536184	Symbol	OT_MEMORY		3535989						
ANR	3536185	Symbol	* data		3535989						
ANR	3536186	Symbol	op -> operands [ 0 ] . regs		3535989						
ANR	3536187	Symbol	OT_DWORD		3535989						
ANR	3536188	Function	opfstenv	3178:0:81003:81323							
ANR	3536189	FunctionDef	"opfstenv (RAsm * a , ut8 * data , const Opcode * op)"		3536188	0					
ANR	3536190	CompoundStatement		3178:58:81061:81323	3536188	0					
ANR	3536191	IdentifierDeclStatement	int l = 0 ;	3179:1:81064:81073	3536188	0	True				
ANR	3536192	IdentifierDecl	l = 0		3536188	0					
ANR	3536193	IdentifierDeclType	int		3536188	0					
ANR	3536194	Identifier	l		3536188	1					
ANR	3536195	AssignmentExpression	l = 0		3536188	2		=			
ANR	3536196	Identifier	l		3536188	0					
ANR	3536197	PrimaryExpression	0		3536188	1					
ANR	3536198	SwitchStatement	switch ( op -> operands_count )		3536188	1					
ANR	3536199	Condition	op -> operands_count	3180:9:81084:81101	3536188	0	True				
ANR	3536200	PtrMemberAccess	op -> operands_count		3536188	0					
ANR	3536201	Identifier	op		3536188	0					
ANR	3536202	Identifier	operands_count		3536188	1					
ANR	3536203	CompoundStatement		3:29:42:42	3536188	1					
ANR	3536204	Label	case 1 :	3181:1:81107:81113	3536188	0	True				
ANR	3536205	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3536188	1					
ANR	3536206	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3182:7:81122:81153	3536188	0	True				
ANR	3536207	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3536188	0		&			
ANR	3536208	MemberAccess	op -> operands [ 0 ] . type		3536188	0					
ANR	3536209	ArrayIndexing	op -> operands [ 0 ]		3536188	0					
ANR	3536210	PtrMemberAccess	op -> operands		3536188	0					
ANR	3536211	Identifier	op		3536188	0					
ANR	3536212	Identifier	operands		3536188	1					
ANR	3536213	PrimaryExpression	0		3536188	1					
ANR	3536214	Identifier	type		3536188	1					
ANR	3536215	Identifier	OT_MEMORY		3536188	1					
ANR	3536216	CompoundStatement		5:42:95:95	3536188	1					
ANR	3536217	ExpressionStatement	data [ l ++ ] = 0x9b	3183:3:81162:81178	3536188	0	True				
ANR	3536218	AssignmentExpression	data [ l ++ ] = 0x9b		3536188	0		=			
ANR	3536219	ArrayIndexing	data [ l ++ ]		3536188	0					
ANR	3536220	Identifier	data		3536188	0					
ANR	3536221	PostIncDecOperationExpression	l ++		3536188	1					
ANR	3536222	Identifier	l		3536188	0					
ANR	3536223	IncDec	++		3536188	1					
ANR	3536224	PrimaryExpression	0x9b		3536188	1					
ANR	3536225	ExpressionStatement	data [ l ++ ] = 0xd9	3184:3:81183:81199	3536188	1	True				
ANR	3536226	AssignmentExpression	data [ l ++ ] = 0xd9		3536188	0		=			
ANR	3536227	ArrayIndexing	data [ l ++ ]		3536188	0					
ANR	3536228	Identifier	data		3536188	0					
ANR	3536229	PostIncDecOperationExpression	l ++		3536188	1					
ANR	3536230	Identifier	l		3536188	0					
ANR	3536231	IncDec	++		3536188	1					
ANR	3536232	PrimaryExpression	0xd9		3536188	1					
ANR	3536233	ExpressionStatement	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]	3185:3:81204:81246	3536188	2	True				
ANR	3536234	AssignmentExpression	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]		3536188	0		=			
ANR	3536235	ArrayIndexing	data [ l ++ ]		3536188	0					
ANR	3536236	Identifier	data		3536188	0					
ANR	3536237	PostIncDecOperationExpression	l ++		3536188	1					
ANR	3536238	Identifier	l		3536188	0					
ANR	3536239	IncDec	++		3536188	1					
ANR	3536240	InclusiveOrExpression	0x30 | op -> operands [ 0 ] . regs [ 0 ]		3536188	1		|			
ANR	3536241	PrimaryExpression	0x30		3536188	0					
ANR	3536242	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3536188	1					
ANR	3536243	MemberAccess	op -> operands [ 0 ] . regs		3536188	0					
ANR	3536244	ArrayIndexing	op -> operands [ 0 ]		3536188	0					
ANR	3536245	PtrMemberAccess	op -> operands		3536188	0					
ANR	3536246	Identifier	op		3536188	0					
ANR	3536247	Identifier	operands		3536188	1					
ANR	3536248	PrimaryExpression	0		3536188	1					
ANR	3536249	Identifier	regs		3536188	1					
ANR	3536250	PrimaryExpression	0		3536188	1					
ANR	3536251	ElseStatement	else		3536188	0					
ANR	3536252	CompoundStatement		9:9:195:195	3536188	0					
ANR	3536253	ReturnStatement	return - 1 ;	3187:3:81262:81271	3536188	0	True				
ANR	3536254	UnaryOperationExpression	- 1		3536188	0					
ANR	3536255	UnaryOperator	-		3536188	0					
ANR	3536256	PrimaryExpression	1		3536188	1					
ANR	3536257	BreakStatement	break ;	3189:2:81279:81284	3536188	2	True				
ANR	3536258	Label	default :	3190:1:81287:81294	3536188	3	True				
ANR	3536259	Identifier	default		3536188	0					
ANR	3536260	ReturnStatement	return - 1 ;	3191:2:81298:81307	3536188	4	True				
ANR	3536261	UnaryOperationExpression	- 1		3536188	0					
ANR	3536262	UnaryOperator	-		3536188	0					
ANR	3536263	PrimaryExpression	1		3536188	1					
ANR	3536264	ReturnStatement	return l ;	3193:1:81313:81321	3536188	2	True				
ANR	3536265	Identifier	l		3536188	0					
ANR	3536266	ReturnType	static int		3536188	1					
ANR	3536267	Identifier	opfstenv		3536188	2					
ANR	3536268	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3536188	3					
ANR	3536269	Parameter	RAsm * a	3178:20:81023:81029	3536188	0	True				
ANR	3536270	ParameterType	RAsm *		3536188	0					
ANR	3536271	Identifier	a		3536188	1					
ANR	3536272	Parameter	ut8 * data	3178:29:81032:81040	3536188	1	True				
ANR	3536273	ParameterType	ut8 *		3536188	0					
ANR	3536274	Identifier	data		3536188	1					
ANR	3536275	Parameter	const Opcode * op	3178:40:81043:81058	3536188	2	True				
ANR	3536276	ParameterType	const Opcode *		3536188	0					
ANR	3536277	Identifier	op		3536188	1					
ANR	3536278	CFGEntryNode	ENTRY		3536188		True				
ANR	3536279	CFGExitNode	EXIT		3536188		True				
ANR	3536280	Symbol	a		3536188						
ANR	3536281	Symbol	op		3536188						
ANR	3536282	Symbol	data		3536188						
ANR	3536283	Symbol	* op		3536188						
ANR	3536284	Symbol	* * op -> operands		3536188						
ANR	3536285	Symbol	l		3536188						
ANR	3536286	Symbol	* * op		3536188						
ANR	3536287	Symbol	* op -> operands		3536188						
ANR	3536288	Symbol	op -> operands_count		3536188						
ANR	3536289	Symbol	* op -> operands [ 0 ] . regs		3536188						
ANR	3536290	Symbol	op -> operands [ 0 ] . type		3536188						
ANR	3536291	Symbol	* * * op		3536188						
ANR	3536292	Symbol	op -> operands		3536188						
ANR	3536293	Symbol	OT_MEMORY		3536188						
ANR	3536294	Symbol	* data		3536188						
ANR	3536295	Symbol	op -> operands [ 0 ] . regs		3536188						
ANR	3536296	Function	opfnstenv	3196:0:81326:81626							
ANR	3536297	FunctionDef	"opfnstenv (RAsm * a , ut8 * data , const Opcode * op)"		3536296	0					
ANR	3536298	CompoundStatement		3196:59:81385:81626	3536296	0					
ANR	3536299	IdentifierDeclStatement	int l = 0 ;	3197:1:81388:81397	3536296	0	True				
ANR	3536300	IdentifierDecl	l = 0		3536296	0					
ANR	3536301	IdentifierDeclType	int		3536296	0					
ANR	3536302	Identifier	l		3536296	1					
ANR	3536303	AssignmentExpression	l = 0		3536296	2		=			
ANR	3536304	Identifier	l		3536296	0					
ANR	3536305	PrimaryExpression	0		3536296	1					
ANR	3536306	SwitchStatement	switch ( op -> operands_count )		3536296	1					
ANR	3536307	Condition	op -> operands_count	3198:9:81408:81425	3536296	0	True				
ANR	3536308	PtrMemberAccess	op -> operands_count		3536296	0					
ANR	3536309	Identifier	op		3536296	0					
ANR	3536310	Identifier	operands_count		3536296	1					
ANR	3536311	CompoundStatement		3:29:42:42	3536296	1					
ANR	3536312	Label	case 1 :	3199:1:81431:81437	3536296	0	True				
ANR	3536313	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3536296	1					
ANR	3536314	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3200:7:81446:81477	3536296	0	True				
ANR	3536315	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3536296	0		&			
ANR	3536316	MemberAccess	op -> operands [ 0 ] . type		3536296	0					
ANR	3536317	ArrayIndexing	op -> operands [ 0 ]		3536296	0					
ANR	3536318	PtrMemberAccess	op -> operands		3536296	0					
ANR	3536319	Identifier	op		3536296	0					
ANR	3536320	Identifier	operands		3536296	1					
ANR	3536321	PrimaryExpression	0		3536296	1					
ANR	3536322	Identifier	type		3536296	1					
ANR	3536323	Identifier	OT_MEMORY		3536296	1					
ANR	3536324	CompoundStatement		5:42:95:95	3536296	1					
ANR	3536325	ExpressionStatement	data [ l ++ ] = 0xd9	3201:3:81486:81502	3536296	0	True				
ANR	3536326	AssignmentExpression	data [ l ++ ] = 0xd9		3536296	0		=			
ANR	3536327	ArrayIndexing	data [ l ++ ]		3536296	0					
ANR	3536328	Identifier	data		3536296	0					
ANR	3536329	PostIncDecOperationExpression	l ++		3536296	1					
ANR	3536330	Identifier	l		3536296	0					
ANR	3536331	IncDec	++		3536296	1					
ANR	3536332	PrimaryExpression	0xd9		3536296	1					
ANR	3536333	ExpressionStatement	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]	3202:3:81507:81549	3536296	1	True				
ANR	3536334	AssignmentExpression	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]		3536296	0		=			
ANR	3536335	ArrayIndexing	data [ l ++ ]		3536296	0					
ANR	3536336	Identifier	data		3536296	0					
ANR	3536337	PostIncDecOperationExpression	l ++		3536296	1					
ANR	3536338	Identifier	l		3536296	0					
ANR	3536339	IncDec	++		3536296	1					
ANR	3536340	InclusiveOrExpression	0x30 | op -> operands [ 0 ] . regs [ 0 ]		3536296	1		|			
ANR	3536341	PrimaryExpression	0x30		3536296	0					
ANR	3536342	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3536296	1					
ANR	3536343	MemberAccess	op -> operands [ 0 ] . regs		3536296	0					
ANR	3536344	ArrayIndexing	op -> operands [ 0 ]		3536296	0					
ANR	3536345	PtrMemberAccess	op -> operands		3536296	0					
ANR	3536346	Identifier	op		3536296	0					
ANR	3536347	Identifier	operands		3536296	1					
ANR	3536348	PrimaryExpression	0		3536296	1					
ANR	3536349	Identifier	regs		3536296	1					
ANR	3536350	PrimaryExpression	0		3536296	1					
ANR	3536351	ElseStatement	else		3536296	0					
ANR	3536352	CompoundStatement		8:9:174:174	3536296	0					
ANR	3536353	ReturnStatement	return - 1 ;	3204:3:81565:81574	3536296	0	True				
ANR	3536354	UnaryOperationExpression	- 1		3536296	0					
ANR	3536355	UnaryOperator	-		3536296	0					
ANR	3536356	PrimaryExpression	1		3536296	1					
ANR	3536357	BreakStatement	break ;	3206:2:81582:81587	3536296	2	True				
ANR	3536358	Label	default :	3207:1:81590:81597	3536296	3	True				
ANR	3536359	Identifier	default		3536296	0					
ANR	3536360	ReturnStatement	return - 1 ;	3208:2:81601:81610	3536296	4	True				
ANR	3536361	UnaryOperationExpression	- 1		3536296	0					
ANR	3536362	UnaryOperator	-		3536296	0					
ANR	3536363	PrimaryExpression	1		3536296	1					
ANR	3536364	ReturnStatement	return l ;	3210:1:81616:81624	3536296	2	True				
ANR	3536365	Identifier	l		3536296	0					
ANR	3536366	ReturnType	static int		3536296	1					
ANR	3536367	Identifier	opfnstenv		3536296	2					
ANR	3536368	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3536296	3					
ANR	3536369	Parameter	RAsm * a	3196:21:81347:81353	3536296	0	True				
ANR	3536370	ParameterType	RAsm *		3536296	0					
ANR	3536371	Identifier	a		3536296	1					
ANR	3536372	Parameter	ut8 * data	3196:30:81356:81364	3536296	1	True				
ANR	3536373	ParameterType	ut8 *		3536296	0					
ANR	3536374	Identifier	data		3536296	1					
ANR	3536375	Parameter	const Opcode * op	3196:41:81367:81382	3536296	2	True				
ANR	3536376	ParameterType	const Opcode *		3536296	0					
ANR	3536377	Identifier	op		3536296	1					
ANR	3536378	CFGEntryNode	ENTRY		3536296		True				
ANR	3536379	CFGExitNode	EXIT		3536296		True				
ANR	3536380	Symbol	a		3536296						
ANR	3536381	Symbol	op		3536296						
ANR	3536382	Symbol	data		3536296						
ANR	3536383	Symbol	* op		3536296						
ANR	3536384	Symbol	* * op -> operands		3536296						
ANR	3536385	Symbol	l		3536296						
ANR	3536386	Symbol	* * op		3536296						
ANR	3536387	Symbol	* op -> operands		3536296						
ANR	3536388	Symbol	op -> operands_count		3536296						
ANR	3536389	Symbol	* op -> operands [ 0 ] . regs		3536296						
ANR	3536390	Symbol	op -> operands [ 0 ] . type		3536296						
ANR	3536391	Symbol	* * * op		3536296						
ANR	3536392	Symbol	op -> operands		3536296						
ANR	3536393	Symbol	OT_MEMORY		3536296						
ANR	3536394	Symbol	* data		3536296						
ANR	3536395	Symbol	op -> operands [ 0 ] . regs		3536296						
ANR	3536396	Function	opfdiv	3213:0:81629:82589							
ANR	3536397	FunctionDef	"opfdiv (RAsm * a , ut8 * data , const Opcode * op)"		3536396	0					
ANR	3536398	CompoundStatement		3213:56:81685:82589	3536396	0					
ANR	3536399	IdentifierDeclStatement	int l = 0 ;	3214:1:81688:81697	3536396	0	True				
ANR	3536400	IdentifierDecl	l = 0		3536396	0					
ANR	3536401	IdentifierDeclType	int		3536396	0					
ANR	3536402	Identifier	l		3536396	1					
ANR	3536403	AssignmentExpression	l = 0		3536396	2		=			
ANR	3536404	Identifier	l		3536396	0					
ANR	3536405	PrimaryExpression	0		3536396	1					
ANR	3536406	SwitchStatement	switch ( op -> operands_count )		3536396	1					
ANR	3536407	Condition	op -> operands_count	3215:9:81708:81725	3536396	0	True				
ANR	3536408	PtrMemberAccess	op -> operands_count		3536396	0					
ANR	3536409	Identifier	op		3536396	0					
ANR	3536410	Identifier	operands_count		3536396	1					
ANR	3536411	CompoundStatement		3:29:42:42	3536396	1					
ANR	3536412	Label	case 1 :	3216:1:81731:81737	3536396	0	True				
ANR	3536413	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3536396	1					
ANR	3536414	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3217:7:81746:81777	3536396	0	True				
ANR	3536415	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3536396	0		&			
ANR	3536416	MemberAccess	op -> operands [ 0 ] . type		3536396	0					
ANR	3536417	ArrayIndexing	op -> operands [ 0 ]		3536396	0					
ANR	3536418	PtrMemberAccess	op -> operands		3536396	0					
ANR	3536419	Identifier	op		3536396	0					
ANR	3536420	Identifier	operands		3536396	1					
ANR	3536421	PrimaryExpression	0		3536396	1					
ANR	3536422	Identifier	type		3536396	1					
ANR	3536423	Identifier	OT_MEMORY		3536396	1					
ANR	3536424	CompoundStatement		5:42:95:95	3536396	1					
ANR	3536425	IfStatement	if ( op -> operands [ 0 ] . type & OT_DWORD )		3536396	0					
ANR	3536426	Condition	op -> operands [ 0 ] . type & OT_DWORD	3218:8:81791:81821	3536396	0	True				
ANR	3536427	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		3536396	0		&			
ANR	3536428	MemberAccess	op -> operands [ 0 ] . type		3536396	0					
ANR	3536429	ArrayIndexing	op -> operands [ 0 ]		3536396	0					
ANR	3536430	PtrMemberAccess	op -> operands		3536396	0					
ANR	3536431	Identifier	op		3536396	0					
ANR	3536432	Identifier	operands		3536396	1					
ANR	3536433	PrimaryExpression	0		3536396	1					
ANR	3536434	Identifier	type		3536396	1					
ANR	3536435	Identifier	OT_DWORD		3536396	1					
ANR	3536436	CompoundStatement		6:42:139:139	3536396	1					
ANR	3536437	ExpressionStatement	data [ l ++ ] = 0xd8	3219:4:81831:81847	3536396	0	True				
ANR	3536438	AssignmentExpression	data [ l ++ ] = 0xd8		3536396	0		=			
ANR	3536439	ArrayIndexing	data [ l ++ ]		3536396	0					
ANR	3536440	Identifier	data		3536396	0					
ANR	3536441	PostIncDecOperationExpression	l ++		3536396	1					
ANR	3536442	Identifier	l		3536396	0					
ANR	3536443	IncDec	++		3536396	1					
ANR	3536444	PrimaryExpression	0xd8		3536396	1					
ANR	3536445	ExpressionStatement	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]	3220:4:81853:81895	3536396	1	True				
ANR	3536446	AssignmentExpression	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]		3536396	0		=			
ANR	3536447	ArrayIndexing	data [ l ++ ]		3536396	0					
ANR	3536448	Identifier	data		3536396	0					
ANR	3536449	PostIncDecOperationExpression	l ++		3536396	1					
ANR	3536450	Identifier	l		3536396	0					
ANR	3536451	IncDec	++		3536396	1					
ANR	3536452	InclusiveOrExpression	0x30 | op -> operands [ 0 ] . regs [ 0 ]		3536396	1		|			
ANR	3536453	PrimaryExpression	0x30		3536396	0					
ANR	3536454	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3536396	1					
ANR	3536455	MemberAccess	op -> operands [ 0 ] . regs		3536396	0					
ANR	3536456	ArrayIndexing	op -> operands [ 0 ]		3536396	0					
ANR	3536457	PtrMemberAccess	op -> operands		3536396	0					
ANR	3536458	Identifier	op		3536396	0					
ANR	3536459	Identifier	operands		3536396	1					
ANR	3536460	PrimaryExpression	0		3536396	1					
ANR	3536461	Identifier	regs		3536396	1					
ANR	3536462	PrimaryExpression	0		3536396	1					
ANR	3536463	ElseStatement	else		3536396	0					
ANR	3536464	IfStatement	if ( op -> operands [ 0 ] . type & OT_QWORD )		3536396	0					
ANR	3536465	Condition	op -> operands [ 0 ] . type & OT_QWORD	3221:15:81912:81942	3536396	0	True				
ANR	3536466	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		3536396	0		&			
ANR	3536467	MemberAccess	op -> operands [ 0 ] . type		3536396	0					
ANR	3536468	ArrayIndexing	op -> operands [ 0 ]		3536396	0					
ANR	3536469	PtrMemberAccess	op -> operands		3536396	0					
ANR	3536470	Identifier	op		3536396	0					
ANR	3536471	Identifier	operands		3536396	1					
ANR	3536472	PrimaryExpression	0		3536396	1					
ANR	3536473	Identifier	type		3536396	1					
ANR	3536474	Identifier	OT_QWORD		3536396	1					
ANR	3536475	CompoundStatement		9:49:260:260	3536396	1					
ANR	3536476	ExpressionStatement	data [ l ++ ] = 0xdc	3222:4:81952:81968	3536396	0	True				
ANR	3536477	AssignmentExpression	data [ l ++ ] = 0xdc		3536396	0		=			
ANR	3536478	ArrayIndexing	data [ l ++ ]		3536396	0					
ANR	3536479	Identifier	data		3536396	0					
ANR	3536480	PostIncDecOperationExpression	l ++		3536396	1					
ANR	3536481	Identifier	l		3536396	0					
ANR	3536482	IncDec	++		3536396	1					
ANR	3536483	PrimaryExpression	0xdc		3536396	1					
ANR	3536484	ExpressionStatement	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]	3223:4:81974:82016	3536396	1	True				
ANR	3536485	AssignmentExpression	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]		3536396	0		=			
ANR	3536486	ArrayIndexing	data [ l ++ ]		3536396	0					
ANR	3536487	Identifier	data		3536396	0					
ANR	3536488	PostIncDecOperationExpression	l ++		3536396	1					
ANR	3536489	Identifier	l		3536396	0					
ANR	3536490	IncDec	++		3536396	1					
ANR	3536491	InclusiveOrExpression	0x30 | op -> operands [ 0 ] . regs [ 0 ]		3536396	1		|			
ANR	3536492	PrimaryExpression	0x30		3536396	0					
ANR	3536493	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3536396	1					
ANR	3536494	MemberAccess	op -> operands [ 0 ] . regs		3536396	0					
ANR	3536495	ArrayIndexing	op -> operands [ 0 ]		3536396	0					
ANR	3536496	PtrMemberAccess	op -> operands		3536396	0					
ANR	3536497	Identifier	op		3536396	0					
ANR	3536498	Identifier	operands		3536396	1					
ANR	3536499	PrimaryExpression	0		3536396	1					
ANR	3536500	Identifier	regs		3536396	1					
ANR	3536501	PrimaryExpression	0		3536396	1					
ANR	3536502	ElseStatement	else		3536396	0					
ANR	3536503	CompoundStatement		12:10:342:342	3536396	0					
ANR	3536504	ReturnStatement	return - 1 ;	3225:4:82034:82043	3536396	0	True				
ANR	3536505	UnaryOperationExpression	- 1		3536396	0					
ANR	3536506	UnaryOperator	-		3536396	0					
ANR	3536507	PrimaryExpression	1		3536396	1					
ANR	3536508	ElseStatement	else		3536396	0					
ANR	3536509	CompoundStatement		15:9:373:373	3536396	0					
ANR	3536510	ReturnStatement	return - 1 ;	3228:3:82064:82073	3536396	0	True				
ANR	3536511	UnaryOperationExpression	- 1		3536396	0					
ANR	3536512	UnaryOperator	-		3536396	0					
ANR	3536513	PrimaryExpression	1		3536396	1					
ANR	3536514	BreakStatement	break ;	3230:2:82081:82086	3536396	2	True				
ANR	3536515	Label	case 2 :	3231:1:82089:82095	3536396	3	True				
ANR	3536516	IfStatement	if ( op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL )		3536396	4					
ANR	3536517	Condition	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL	3232:7:82104:82232	3536396	0	True				
ANR	3536518	AndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		3536396	0		&&			
ANR	3536519	BitAndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL		3536396	0		&			
ANR	3536520	MemberAccess	op -> operands [ 0 ] . type		3536396	0					
ANR	3536521	ArrayIndexing	op -> operands [ 0 ]		3536396	0					
ANR	3536522	PtrMemberAccess	op -> operands		3536396	0					
ANR	3536523	Identifier	op		3536396	0					
ANR	3536524	Identifier	operands		3536396	1					
ANR	3536525	PrimaryExpression	0		3536396	1					
ANR	3536526	Identifier	type		3536396	1					
ANR	3536527	BitAndExpression	OT_FPUREG & ~OT_REGALL		3536396	1		&			
ANR	3536528	Identifier	OT_FPUREG		3536396	0					
ANR	3536529	Identifier	~OT_REGALL		3536396	1					
ANR	3536530	AndExpression	op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		3536396	1		&&			
ANR	3536531	EqualityExpression	op -> operands [ 0 ] . reg == 0		3536396	0		==			
ANR	3536532	MemberAccess	op -> operands [ 0 ] . reg		3536396	0					
ANR	3536533	ArrayIndexing	op -> operands [ 0 ]		3536396	0					
ANR	3536534	PtrMemberAccess	op -> operands		3536396	0					
ANR	3536535	Identifier	op		3536396	0					
ANR	3536536	Identifier	operands		3536396	1					
ANR	3536537	PrimaryExpression	0		3536396	1					
ANR	3536538	Identifier	reg		3536396	1					
ANR	3536539	PrimaryExpression	0		3536396	1					
ANR	3536540	BitAndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		3536396	1		&			
ANR	3536541	MemberAccess	op -> operands [ 1 ] . type		3536396	0					
ANR	3536542	ArrayIndexing	op -> operands [ 1 ]		3536396	0					
ANR	3536543	PtrMemberAccess	op -> operands		3536396	0					
ANR	3536544	Identifier	op		3536396	0					
ANR	3536545	Identifier	operands		3536396	1					
ANR	3536546	PrimaryExpression	1		3536396	1					
ANR	3536547	Identifier	type		3536396	1					
ANR	3536548	BitAndExpression	OT_FPUREG & ~OT_REGALL		3536396	1		&			
ANR	3536549	Identifier	OT_FPUREG		3536396	0					
ANR	3536550	Identifier	~OT_REGALL		3536396	1					
ANR	3536551	CompoundStatement		21:55:550:550	3536396	1					
ANR	3536552	ExpressionStatement	data [ l ++ ] = 0xd8	3234:3:82241:82257	3536396	0	True				
ANR	3536553	AssignmentExpression	data [ l ++ ] = 0xd8		3536396	0		=			
ANR	3536554	ArrayIndexing	data [ l ++ ]		3536396	0					
ANR	3536555	Identifier	data		3536396	0					
ANR	3536556	PostIncDecOperationExpression	l ++		3536396	1					
ANR	3536557	Identifier	l		3536396	0					
ANR	3536558	IncDec	++		3536396	1					
ANR	3536559	PrimaryExpression	0xd8		3536396	1					
ANR	3536560	ExpressionStatement	data [ l ++ ] = 0xf0 | op -> operands [ 1 ] . reg	3235:3:82262:82300	3536396	1	True				
ANR	3536561	AssignmentExpression	data [ l ++ ] = 0xf0 | op -> operands [ 1 ] . reg		3536396	0		=			
ANR	3536562	ArrayIndexing	data [ l ++ ]		3536396	0					
ANR	3536563	Identifier	data		3536396	0					
ANR	3536564	PostIncDecOperationExpression	l ++		3536396	1					
ANR	3536565	Identifier	l		3536396	0					
ANR	3536566	IncDec	++		3536396	1					
ANR	3536567	InclusiveOrExpression	0xf0 | op -> operands [ 1 ] . reg		3536396	1		|			
ANR	3536568	PrimaryExpression	0xf0		3536396	0					
ANR	3536569	MemberAccess	op -> operands [ 1 ] . reg		3536396	1					
ANR	3536570	ArrayIndexing	op -> operands [ 1 ]		3536396	0					
ANR	3536571	PtrMemberAccess	op -> operands		3536396	0					
ANR	3536572	Identifier	op		3536396	0					
ANR	3536573	Identifier	operands		3536396	1					
ANR	3536574	PrimaryExpression	1		3536396	1					
ANR	3536575	Identifier	reg		3536396	1					
ANR	3536576	ElseStatement	else		3536396	0					
ANR	3536577	IfStatement	if ( op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0 )		3536396	0					
ANR	3536578	Condition	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0	3236:14:82316:82444	3536396	0	True				
ANR	3536579	AndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		3536396	0		&&			
ANR	3536580	BitAndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL		3536396	0		&			
ANR	3536581	MemberAccess	op -> operands [ 0 ] . type		3536396	0					
ANR	3536582	ArrayIndexing	op -> operands [ 0 ]		3536396	0					
ANR	3536583	PtrMemberAccess	op -> operands		3536396	0					
ANR	3536584	Identifier	op		3536396	0					
ANR	3536585	Identifier	operands		3536396	1					
ANR	3536586	PrimaryExpression	0		3536396	1					
ANR	3536587	Identifier	type		3536396	1					
ANR	3536588	BitAndExpression	OT_FPUREG & ~OT_REGALL		3536396	1		&			
ANR	3536589	Identifier	OT_FPUREG		3536396	0					
ANR	3536590	Identifier	~OT_REGALL		3536396	1					
ANR	3536591	AndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		3536396	1		&&			
ANR	3536592	BitAndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		3536396	0		&			
ANR	3536593	MemberAccess	op -> operands [ 1 ] . type		3536396	0					
ANR	3536594	ArrayIndexing	op -> operands [ 1 ]		3536396	0					
ANR	3536595	PtrMemberAccess	op -> operands		3536396	0					
ANR	3536596	Identifier	op		3536396	0					
ANR	3536597	Identifier	operands		3536396	1					
ANR	3536598	PrimaryExpression	1		3536396	1					
ANR	3536599	Identifier	type		3536396	1					
ANR	3536600	BitAndExpression	OT_FPUREG & ~OT_REGALL		3536396	1		&			
ANR	3536601	Identifier	OT_FPUREG		3536396	0					
ANR	3536602	Identifier	~OT_REGALL		3536396	1					
ANR	3536603	EqualityExpression	op -> operands [ 1 ] . reg == 0		3536396	1		==			
ANR	3536604	MemberAccess	op -> operands [ 1 ] . reg		3536396	0					
ANR	3536605	ArrayIndexing	op -> operands [ 1 ]		3536396	0					
ANR	3536606	PtrMemberAccess	op -> operands		3536396	0					
ANR	3536607	Identifier	op		3536396	0					
ANR	3536608	Identifier	operands		3536396	1					
ANR	3536609	PrimaryExpression	1		3536396	1					
ANR	3536610	Identifier	reg		3536396	1					
ANR	3536611	PrimaryExpression	0		3536396	1					
ANR	3536612	CompoundStatement		25:83:762:762	3536396	1					
ANR	3536613	ExpressionStatement	data [ l ++ ] = 0xdc	3238:3:82453:82469	3536396	0	True				
ANR	3536614	AssignmentExpression	data [ l ++ ] = 0xdc		3536396	0		=			
ANR	3536615	ArrayIndexing	data [ l ++ ]		3536396	0					
ANR	3536616	Identifier	data		3536396	0					
ANR	3536617	PostIncDecOperationExpression	l ++		3536396	1					
ANR	3536618	Identifier	l		3536396	0					
ANR	3536619	IncDec	++		3536396	1					
ANR	3536620	PrimaryExpression	0xdc		3536396	1					
ANR	3536621	ExpressionStatement	data [ l ++ ] = 0xf8 | op -> operands [ 0 ] . reg	3239:3:82474:82512	3536396	1	True				
ANR	3536622	AssignmentExpression	data [ l ++ ] = 0xf8 | op -> operands [ 0 ] . reg		3536396	0		=			
ANR	3536623	ArrayIndexing	data [ l ++ ]		3536396	0					
ANR	3536624	Identifier	data		3536396	0					
ANR	3536625	PostIncDecOperationExpression	l ++		3536396	1					
ANR	3536626	Identifier	l		3536396	0					
ANR	3536627	IncDec	++		3536396	1					
ANR	3536628	InclusiveOrExpression	0xf8 | op -> operands [ 0 ] . reg		3536396	1		|			
ANR	3536629	PrimaryExpression	0xf8		3536396	0					
ANR	3536630	MemberAccess	op -> operands [ 0 ] . reg		3536396	1					
ANR	3536631	ArrayIndexing	op -> operands [ 0 ]		3536396	0					
ANR	3536632	PtrMemberAccess	op -> operands		3536396	0					
ANR	3536633	Identifier	op		3536396	0					
ANR	3536634	Identifier	operands		3536396	1					
ANR	3536635	PrimaryExpression	0		3536396	1					
ANR	3536636	Identifier	reg		3536396	1					
ANR	3536637	ElseStatement	else		3536396	0					
ANR	3536638	CompoundStatement		28:9:837:837	3536396	0					
ANR	3536639	ReturnStatement	return - 1 ;	3241:3:82528:82537	3536396	0	True				
ANR	3536640	UnaryOperationExpression	- 1		3536396	0					
ANR	3536641	UnaryOperator	-		3536396	0					
ANR	3536642	PrimaryExpression	1		3536396	1					
ANR	3536643	BreakStatement	break ;	3243:2:82545:82550	3536396	5	True				
ANR	3536644	Label	default :	3244:1:82553:82560	3536396	6	True				
ANR	3536645	Identifier	default		3536396	0					
ANR	3536646	ReturnStatement	return - 1 ;	3245:2:82564:82573	3536396	7	True				
ANR	3536647	UnaryOperationExpression	- 1		3536396	0					
ANR	3536648	UnaryOperator	-		3536396	0					
ANR	3536649	PrimaryExpression	1		3536396	1					
ANR	3536650	ReturnStatement	return l ;	3247:1:82579:82587	3536396	2	True				
ANR	3536651	Identifier	l		3536396	0					
ANR	3536652	ReturnType	static int		3536396	1					
ANR	3536653	Identifier	opfdiv		3536396	2					
ANR	3536654	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3536396	3					
ANR	3536655	Parameter	RAsm * a	3213:18:81647:81653	3536396	0	True				
ANR	3536656	ParameterType	RAsm *		3536396	0					
ANR	3536657	Identifier	a		3536396	1					
ANR	3536658	Parameter	ut8 * data	3213:27:81656:81664	3536396	1	True				
ANR	3536659	ParameterType	ut8 *		3536396	0					
ANR	3536660	Identifier	data		3536396	1					
ANR	3536661	Parameter	const Opcode * op	3213:38:81667:81682	3536396	2	True				
ANR	3536662	ParameterType	const Opcode *		3536396	0					
ANR	3536663	Identifier	op		3536396	1					
ANR	3536664	CFGEntryNode	ENTRY		3536396		True				
ANR	3536665	CFGExitNode	EXIT		3536396		True				
ANR	3536666	Symbol	a		3536396						
ANR	3536667	Symbol	op		3536396						
ANR	3536668	Symbol	OT_QWORD		3536396						
ANR	3536669	Symbol	data		3536396						
ANR	3536670	Symbol	* op		3536396						
ANR	3536671	Symbol	op -> operands [ 1 ] . reg		3536396						
ANR	3536672	Symbol	* * op -> operands		3536396						
ANR	3536673	Symbol	l		3536396						
ANR	3536674	Symbol	* * op		3536396						
ANR	3536675	Symbol	OT_FPUREG		3536396						
ANR	3536676	Symbol	* op -> operands		3536396						
ANR	3536677	Symbol	op -> operands [ 1 ] . type		3536396						
ANR	3536678	Symbol	op -> operands_count		3536396						
ANR	3536679	Symbol	* op -> operands [ 0 ] . regs		3536396						
ANR	3536680	Symbol	op -> operands [ 0 ] . type		3536396						
ANR	3536681	Symbol	~OT_REGALL		3536396						
ANR	3536682	Symbol	* * * op		3536396						
ANR	3536683	Symbol	op -> operands [ 0 ] . reg		3536396						
ANR	3536684	Symbol	op -> operands		3536396						
ANR	3536685	Symbol	OT_MEMORY		3536396						
ANR	3536686	Symbol	* data		3536396						
ANR	3536687	Symbol	op -> operands [ 0 ] . regs		3536396						
ANR	3536688	Symbol	OT_DWORD		3536396						
ANR	3536689	Function	opfdivp	3250:0:82592:83041							
ANR	3536690	FunctionDef	"opfdivp (RAsm * a , ut8 * data , const Opcode * op)"		3536689	0					
ANR	3536691	CompoundStatement		3250:57:82649:83041	3536689	0					
ANR	3536692	IdentifierDeclStatement	int l = 0 ;	3251:1:82652:82661	3536689	0	True				
ANR	3536693	IdentifierDecl	l = 0		3536689	0					
ANR	3536694	IdentifierDeclType	int		3536689	0					
ANR	3536695	Identifier	l		3536689	1					
ANR	3536696	AssignmentExpression	l = 0		3536689	2		=			
ANR	3536697	Identifier	l		3536689	0					
ANR	3536698	PrimaryExpression	0		3536689	1					
ANR	3536699	SwitchStatement	switch ( op -> operands_count )		3536689	1					
ANR	3536700	Condition	op -> operands_count	3252:9:82672:82689	3536689	0	True				
ANR	3536701	PtrMemberAccess	op -> operands_count		3536689	0					
ANR	3536702	Identifier	op		3536689	0					
ANR	3536703	Identifier	operands_count		3536689	1					
ANR	3536704	CompoundStatement		3:29:42:42	3536689	1					
ANR	3536705	Label	case 0 :	3253:1:82695:82701	3536689	0	True				
ANR	3536706	ExpressionStatement	data [ l ++ ] = 0xde	3254:2:82705:82721	3536689	1	True				
ANR	3536707	AssignmentExpression	data [ l ++ ] = 0xde		3536689	0		=			
ANR	3536708	ArrayIndexing	data [ l ++ ]		3536689	0					
ANR	3536709	Identifier	data		3536689	0					
ANR	3536710	PostIncDecOperationExpression	l ++		3536689	1					
ANR	3536711	Identifier	l		3536689	0					
ANR	3536712	IncDec	++		3536689	1					
ANR	3536713	PrimaryExpression	0xde		3536689	1					
ANR	3536714	ExpressionStatement	data [ l ++ ] = 0xf9	3255:2:82725:82741	3536689	2	True				
ANR	3536715	AssignmentExpression	data [ l ++ ] = 0xf9		3536689	0		=			
ANR	3536716	ArrayIndexing	data [ l ++ ]		3536689	0					
ANR	3536717	Identifier	data		3536689	0					
ANR	3536718	PostIncDecOperationExpression	l ++		3536689	1					
ANR	3536719	Identifier	l		3536689	0					
ANR	3536720	IncDec	++		3536689	1					
ANR	3536721	PrimaryExpression	0xf9		3536689	1					
ANR	3536722	BreakStatement	break ;	3256:2:82745:82750	3536689	3	True				
ANR	3536723	Label	case 2 :	3257:1:82753:82759	3536689	4	True				
ANR	3536724	IfStatement	if ( op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0 )		3536689	5					
ANR	3536725	Condition	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0	3258:7:82768:82896	3536689	0	True				
ANR	3536726	AndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		3536689	0		&&			
ANR	3536727	BitAndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL		3536689	0		&			
ANR	3536728	MemberAccess	op -> operands [ 0 ] . type		3536689	0					
ANR	3536729	ArrayIndexing	op -> operands [ 0 ]		3536689	0					
ANR	3536730	PtrMemberAccess	op -> operands		3536689	0					
ANR	3536731	Identifier	op		3536689	0					
ANR	3536732	Identifier	operands		3536689	1					
ANR	3536733	PrimaryExpression	0		3536689	1					
ANR	3536734	Identifier	type		3536689	1					
ANR	3536735	BitAndExpression	OT_FPUREG & ~OT_REGALL		3536689	1		&			
ANR	3536736	Identifier	OT_FPUREG		3536689	0					
ANR	3536737	Identifier	~OT_REGALL		3536689	1					
ANR	3536738	AndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		3536689	1		&&			
ANR	3536739	BitAndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		3536689	0		&			
ANR	3536740	MemberAccess	op -> operands [ 1 ] . type		3536689	0					
ANR	3536741	ArrayIndexing	op -> operands [ 1 ]		3536689	0					
ANR	3536742	PtrMemberAccess	op -> operands		3536689	0					
ANR	3536743	Identifier	op		3536689	0					
ANR	3536744	Identifier	operands		3536689	1					
ANR	3536745	PrimaryExpression	1		3536689	1					
ANR	3536746	Identifier	type		3536689	1					
ANR	3536747	BitAndExpression	OT_FPUREG & ~OT_REGALL		3536689	1		&			
ANR	3536748	Identifier	OT_FPUREG		3536689	0					
ANR	3536749	Identifier	~OT_REGALL		3536689	1					
ANR	3536750	EqualityExpression	op -> operands [ 1 ] . reg == 0		3536689	1		==			
ANR	3536751	MemberAccess	op -> operands [ 1 ] . reg		3536689	0					
ANR	3536752	ArrayIndexing	op -> operands [ 1 ]		3536689	0					
ANR	3536753	PtrMemberAccess	op -> operands		3536689	0					
ANR	3536754	Identifier	op		3536689	0					
ANR	3536755	Identifier	operands		3536689	1					
ANR	3536756	PrimaryExpression	1		3536689	1					
ANR	3536757	Identifier	reg		3536689	1					
ANR	3536758	PrimaryExpression	0		3536689	1					
ANR	3536759	CompoundStatement		10:83:250:250	3536689	1					
ANR	3536760	ExpressionStatement	data [ l ++ ] = 0xde	3260:3:82905:82921	3536689	0	True				
ANR	3536761	AssignmentExpression	data [ l ++ ] = 0xde		3536689	0		=			
ANR	3536762	ArrayIndexing	data [ l ++ ]		3536689	0					
ANR	3536763	Identifier	data		3536689	0					
ANR	3536764	PostIncDecOperationExpression	l ++		3536689	1					
ANR	3536765	Identifier	l		3536689	0					
ANR	3536766	IncDec	++		3536689	1					
ANR	3536767	PrimaryExpression	0xde		3536689	1					
ANR	3536768	ExpressionStatement	data [ l ++ ] = 0xf8 | op -> operands [ 0 ] . reg	3261:3:82926:82964	3536689	1	True				
ANR	3536769	AssignmentExpression	data [ l ++ ] = 0xf8 | op -> operands [ 0 ] . reg		3536689	0		=			
ANR	3536770	ArrayIndexing	data [ l ++ ]		3536689	0					
ANR	3536771	Identifier	data		3536689	0					
ANR	3536772	PostIncDecOperationExpression	l ++		3536689	1					
ANR	3536773	Identifier	l		3536689	0					
ANR	3536774	IncDec	++		3536689	1					
ANR	3536775	InclusiveOrExpression	0xf8 | op -> operands [ 0 ] . reg		3536689	1		|			
ANR	3536776	PrimaryExpression	0xf8		3536689	0					
ANR	3536777	MemberAccess	op -> operands [ 0 ] . reg		3536689	1					
ANR	3536778	ArrayIndexing	op -> operands [ 0 ]		3536689	0					
ANR	3536779	PtrMemberAccess	op -> operands		3536689	0					
ANR	3536780	Identifier	op		3536689	0					
ANR	3536781	Identifier	operands		3536689	1					
ANR	3536782	PrimaryExpression	0		3536689	1					
ANR	3536783	Identifier	reg		3536689	1					
ANR	3536784	ElseStatement	else		3536689	0					
ANR	3536785	CompoundStatement		13:9:325:325	3536689	0					
ANR	3536786	ReturnStatement	return - 1 ;	3263:3:82980:82989	3536689	0	True				
ANR	3536787	UnaryOperationExpression	- 1		3536689	0					
ANR	3536788	UnaryOperator	-		3536689	0					
ANR	3536789	PrimaryExpression	1		3536689	1					
ANR	3536790	BreakStatement	break ;	3265:2:82997:83002	3536689	6	True				
ANR	3536791	Label	default :	3266:1:83005:83012	3536689	7	True				
ANR	3536792	Identifier	default		3536689	0					
ANR	3536793	ReturnStatement	return - 1 ;	3267:2:83016:83025	3536689	8	True				
ANR	3536794	UnaryOperationExpression	- 1		3536689	0					
ANR	3536795	UnaryOperator	-		3536689	0					
ANR	3536796	PrimaryExpression	1		3536689	1					
ANR	3536797	ReturnStatement	return l ;	3269:1:83031:83039	3536689	2	True				
ANR	3536798	Identifier	l		3536689	0					
ANR	3536799	ReturnType	static int		3536689	1					
ANR	3536800	Identifier	opfdivp		3536689	2					
ANR	3536801	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3536689	3					
ANR	3536802	Parameter	RAsm * a	3250:19:82611:82617	3536689	0	True				
ANR	3536803	ParameterType	RAsm *		3536689	0					
ANR	3536804	Identifier	a		3536689	1					
ANR	3536805	Parameter	ut8 * data	3250:28:82620:82628	3536689	1	True				
ANR	3536806	ParameterType	ut8 *		3536689	0					
ANR	3536807	Identifier	data		3536689	1					
ANR	3536808	Parameter	const Opcode * op	3250:39:82631:82646	3536689	2	True				
ANR	3536809	ParameterType	const Opcode *		3536689	0					
ANR	3536810	Identifier	op		3536689	1					
ANR	3536811	CFGEntryNode	ENTRY		3536689		True				
ANR	3536812	CFGExitNode	EXIT		3536689		True				
ANR	3536813	Symbol	a		3536689						
ANR	3536814	Symbol	op		3536689						
ANR	3536815	Symbol	data		3536689						
ANR	3536816	Symbol	* op		3536689						
ANR	3536817	Symbol	op -> operands [ 1 ] . reg		3536689						
ANR	3536818	Symbol	l		3536689						
ANR	3536819	Symbol	* * op		3536689						
ANR	3536820	Symbol	OT_FPUREG		3536689						
ANR	3536821	Symbol	* op -> operands		3536689						
ANR	3536822	Symbol	op -> operands [ 1 ] . type		3536689						
ANR	3536823	Symbol	op -> operands_count		3536689						
ANR	3536824	Symbol	~OT_REGALL		3536689						
ANR	3536825	Symbol	op -> operands [ 0 ] . type		3536689						
ANR	3536826	Symbol	op -> operands [ 0 ] . reg		3536689						
ANR	3536827	Symbol	op -> operands		3536689						
ANR	3536828	Symbol	* data		3536689						
ANR	3536829	Function	opfidiv	3272:0:83044:83540							
ANR	3536830	FunctionDef	"opfidiv (RAsm * a , ut8 * data , const Opcode * op)"		3536829	0					
ANR	3536831	CompoundStatement		3272:57:83101:83540	3536829	0					
ANR	3536832	IdentifierDeclStatement	int l = 0 ;	3273:1:83104:83113	3536829	0	True				
ANR	3536833	IdentifierDecl	l = 0		3536829	0					
ANR	3536834	IdentifierDeclType	int		3536829	0					
ANR	3536835	Identifier	l		3536829	1					
ANR	3536836	AssignmentExpression	l = 0		3536829	2		=			
ANR	3536837	Identifier	l		3536829	0					
ANR	3536838	PrimaryExpression	0		3536829	1					
ANR	3536839	SwitchStatement	switch ( op -> operands_count )		3536829	1					
ANR	3536840	Condition	op -> operands_count	3274:9:83124:83141	3536829	0	True				
ANR	3536841	PtrMemberAccess	op -> operands_count		3536829	0					
ANR	3536842	Identifier	op		3536829	0					
ANR	3536843	Identifier	operands_count		3536829	1					
ANR	3536844	CompoundStatement		3:29:42:42	3536829	1					
ANR	3536845	Label	case 1 :	3275:1:83147:83153	3536829	0	True				
ANR	3536846	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3536829	1					
ANR	3536847	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3276:7:83162:83193	3536829	0	True				
ANR	3536848	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3536829	0		&			
ANR	3536849	MemberAccess	op -> operands [ 0 ] . type		3536829	0					
ANR	3536850	ArrayIndexing	op -> operands [ 0 ]		3536829	0					
ANR	3536851	PtrMemberAccess	op -> operands		3536829	0					
ANR	3536852	Identifier	op		3536829	0					
ANR	3536853	Identifier	operands		3536829	1					
ANR	3536854	PrimaryExpression	0		3536829	1					
ANR	3536855	Identifier	type		3536829	1					
ANR	3536856	Identifier	OT_MEMORY		3536829	1					
ANR	3536857	CompoundStatement		5:42:95:95	3536829	1					
ANR	3536858	IfStatement	if ( op -> operands [ 0 ] . type & OT_DWORD )		3536829	0					
ANR	3536859	Condition	op -> operands [ 0 ] . type & OT_DWORD	3277:8:83207:83237	3536829	0	True				
ANR	3536860	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		3536829	0		&			
ANR	3536861	MemberAccess	op -> operands [ 0 ] . type		3536829	0					
ANR	3536862	ArrayIndexing	op -> operands [ 0 ]		3536829	0					
ANR	3536863	PtrMemberAccess	op -> operands		3536829	0					
ANR	3536864	Identifier	op		3536829	0					
ANR	3536865	Identifier	operands		3536829	1					
ANR	3536866	PrimaryExpression	0		3536829	1					
ANR	3536867	Identifier	type		3536829	1					
ANR	3536868	Identifier	OT_DWORD		3536829	1					
ANR	3536869	CompoundStatement		6:42:139:139	3536829	1					
ANR	3536870	ExpressionStatement	data [ l ++ ] = 0xda	3278:4:83247:83263	3536829	0	True				
ANR	3536871	AssignmentExpression	data [ l ++ ] = 0xda		3536829	0		=			
ANR	3536872	ArrayIndexing	data [ l ++ ]		3536829	0					
ANR	3536873	Identifier	data		3536829	0					
ANR	3536874	PostIncDecOperationExpression	l ++		3536829	1					
ANR	3536875	Identifier	l		3536829	0					
ANR	3536876	IncDec	++		3536829	1					
ANR	3536877	PrimaryExpression	0xda		3536829	1					
ANR	3536878	ExpressionStatement	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]	3279:4:83269:83311	3536829	1	True				
ANR	3536879	AssignmentExpression	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]		3536829	0		=			
ANR	3536880	ArrayIndexing	data [ l ++ ]		3536829	0					
ANR	3536881	Identifier	data		3536829	0					
ANR	3536882	PostIncDecOperationExpression	l ++		3536829	1					
ANR	3536883	Identifier	l		3536829	0					
ANR	3536884	IncDec	++		3536829	1					
ANR	3536885	InclusiveOrExpression	0x30 | op -> operands [ 0 ] . regs [ 0 ]		3536829	1		|			
ANR	3536886	PrimaryExpression	0x30		3536829	0					
ANR	3536887	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3536829	1					
ANR	3536888	MemberAccess	op -> operands [ 0 ] . regs		3536829	0					
ANR	3536889	ArrayIndexing	op -> operands [ 0 ]		3536829	0					
ANR	3536890	PtrMemberAccess	op -> operands		3536829	0					
ANR	3536891	Identifier	op		3536829	0					
ANR	3536892	Identifier	operands		3536829	1					
ANR	3536893	PrimaryExpression	0		3536829	1					
ANR	3536894	Identifier	regs		3536829	1					
ANR	3536895	PrimaryExpression	0		3536829	1					
ANR	3536896	ElseStatement	else		3536829	0					
ANR	3536897	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		3536829	0					
ANR	3536898	Condition	op -> operands [ 0 ] . type & OT_WORD	3280:15:83328:83357	3536829	0	True				
ANR	3536899	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		3536829	0		&			
ANR	3536900	MemberAccess	op -> operands [ 0 ] . type		3536829	0					
ANR	3536901	ArrayIndexing	op -> operands [ 0 ]		3536829	0					
ANR	3536902	PtrMemberAccess	op -> operands		3536829	0					
ANR	3536903	Identifier	op		3536829	0					
ANR	3536904	Identifier	operands		3536829	1					
ANR	3536905	PrimaryExpression	0		3536829	1					
ANR	3536906	Identifier	type		3536829	1					
ANR	3536907	Identifier	OT_WORD		3536829	1					
ANR	3536908	CompoundStatement		9:48:259:259	3536829	1					
ANR	3536909	ExpressionStatement	data [ l ++ ] = 0xde	3281:4:83367:83383	3536829	0	True				
ANR	3536910	AssignmentExpression	data [ l ++ ] = 0xde		3536829	0		=			
ANR	3536911	ArrayIndexing	data [ l ++ ]		3536829	0					
ANR	3536912	Identifier	data		3536829	0					
ANR	3536913	PostIncDecOperationExpression	l ++		3536829	1					
ANR	3536914	Identifier	l		3536829	0					
ANR	3536915	IncDec	++		3536829	1					
ANR	3536916	PrimaryExpression	0xde		3536829	1					
ANR	3536917	ExpressionStatement	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]	3282:4:83389:83431	3536829	1	True				
ANR	3536918	AssignmentExpression	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]		3536829	0		=			
ANR	3536919	ArrayIndexing	data [ l ++ ]		3536829	0					
ANR	3536920	Identifier	data		3536829	0					
ANR	3536921	PostIncDecOperationExpression	l ++		3536829	1					
ANR	3536922	Identifier	l		3536829	0					
ANR	3536923	IncDec	++		3536829	1					
ANR	3536924	InclusiveOrExpression	0x30 | op -> operands [ 0 ] . regs [ 0 ]		3536829	1		|			
ANR	3536925	PrimaryExpression	0x30		3536829	0					
ANR	3536926	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3536829	1					
ANR	3536927	MemberAccess	op -> operands [ 0 ] . regs		3536829	0					
ANR	3536928	ArrayIndexing	op -> operands [ 0 ]		3536829	0					
ANR	3536929	PtrMemberAccess	op -> operands		3536829	0					
ANR	3536930	Identifier	op		3536829	0					
ANR	3536931	Identifier	operands		3536829	1					
ANR	3536932	PrimaryExpression	0		3536829	1					
ANR	3536933	Identifier	regs		3536829	1					
ANR	3536934	PrimaryExpression	0		3536829	1					
ANR	3536935	ElseStatement	else		3536829	0					
ANR	3536936	CompoundStatement		12:10:341:341	3536829	0					
ANR	3536937	ReturnStatement	return - 1 ;	3284:4:83449:83458	3536829	0	True				
ANR	3536938	UnaryOperationExpression	- 1		3536829	0					
ANR	3536939	UnaryOperator	-		3536829	0					
ANR	3536940	PrimaryExpression	1		3536829	1					
ANR	3536941	ElseStatement	else		3536829	0					
ANR	3536942	CompoundStatement		15:9:372:372	3536829	0					
ANR	3536943	ReturnStatement	return - 1 ;	3287:3:83479:83488	3536829	0	True				
ANR	3536944	UnaryOperationExpression	- 1		3536829	0					
ANR	3536945	UnaryOperator	-		3536829	0					
ANR	3536946	PrimaryExpression	1		3536829	1					
ANR	3536947	BreakStatement	break ;	3289:2:83496:83501	3536829	2	True				
ANR	3536948	Label	default :	3290:1:83504:83511	3536829	3	True				
ANR	3536949	Identifier	default		3536829	0					
ANR	3536950	ReturnStatement	return - 1 ;	3291:2:83515:83524	3536829	4	True				
ANR	3536951	UnaryOperationExpression	- 1		3536829	0					
ANR	3536952	UnaryOperator	-		3536829	0					
ANR	3536953	PrimaryExpression	1		3536829	1					
ANR	3536954	ReturnStatement	return l ;	3293:1:83530:83538	3536829	2	True				
ANR	3536955	Identifier	l		3536829	0					
ANR	3536956	ReturnType	static int		3536829	1					
ANR	3536957	Identifier	opfidiv		3536829	2					
ANR	3536958	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3536829	3					
ANR	3536959	Parameter	RAsm * a	3272:19:83063:83069	3536829	0	True				
ANR	3536960	ParameterType	RAsm *		3536829	0					
ANR	3536961	Identifier	a		3536829	1					
ANR	3536962	Parameter	ut8 * data	3272:28:83072:83080	3536829	1	True				
ANR	3536963	ParameterType	ut8 *		3536829	0					
ANR	3536964	Identifier	data		3536829	1					
ANR	3536965	Parameter	const Opcode * op	3272:39:83083:83098	3536829	2	True				
ANR	3536966	ParameterType	const Opcode *		3536829	0					
ANR	3536967	Identifier	op		3536829	1					
ANR	3536968	CFGEntryNode	ENTRY		3536829		True				
ANR	3536969	CFGExitNode	EXIT		3536829		True				
ANR	3536970	Symbol	a		3536829						
ANR	3536971	Symbol	op		3536829						
ANR	3536972	Symbol	OT_WORD		3536829						
ANR	3536973	Symbol	data		3536829						
ANR	3536974	Symbol	* op		3536829						
ANR	3536975	Symbol	* * op -> operands		3536829						
ANR	3536976	Symbol	l		3536829						
ANR	3536977	Symbol	* * op		3536829						
ANR	3536978	Symbol	* op -> operands		3536829						
ANR	3536979	Symbol	op -> operands_count		3536829						
ANR	3536980	Symbol	* op -> operands [ 0 ] . regs		3536829						
ANR	3536981	Symbol	op -> operands [ 0 ] . type		3536829						
ANR	3536982	Symbol	* * * op		3536829						
ANR	3536983	Symbol	op -> operands		3536829						
ANR	3536984	Symbol	OT_MEMORY		3536829						
ANR	3536985	Symbol	* data		3536829						
ANR	3536986	Symbol	op -> operands [ 0 ] . regs		3536829						
ANR	3536987	Symbol	OT_DWORD		3536829						
ANR	3536988	Function	opfdivr	3296:0:83543:84504							
ANR	3536989	FunctionDef	"opfdivr (RAsm * a , ut8 * data , const Opcode * op)"		3536988	0					
ANR	3536990	CompoundStatement		3296:57:83600:84504	3536988	0					
ANR	3536991	IdentifierDeclStatement	int l = 0 ;	3297:1:83603:83612	3536988	0	True				
ANR	3536992	IdentifierDecl	l = 0		3536988	0					
ANR	3536993	IdentifierDeclType	int		3536988	0					
ANR	3536994	Identifier	l		3536988	1					
ANR	3536995	AssignmentExpression	l = 0		3536988	2		=			
ANR	3536996	Identifier	l		3536988	0					
ANR	3536997	PrimaryExpression	0		3536988	1					
ANR	3536998	SwitchStatement	switch ( op -> operands_count )		3536988	1					
ANR	3536999	Condition	op -> operands_count	3298:9:83623:83640	3536988	0	True				
ANR	3537000	PtrMemberAccess	op -> operands_count		3536988	0					
ANR	3537001	Identifier	op		3536988	0					
ANR	3537002	Identifier	operands_count		3536988	1					
ANR	3537003	CompoundStatement		3:29:42:42	3536988	1					
ANR	3537004	Label	case 1 :	3299:1:83646:83652	3536988	0	True				
ANR	3537005	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3536988	1					
ANR	3537006	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3300:7:83661:83692	3536988	0	True				
ANR	3537007	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3536988	0		&			
ANR	3537008	MemberAccess	op -> operands [ 0 ] . type		3536988	0					
ANR	3537009	ArrayIndexing	op -> operands [ 0 ]		3536988	0					
ANR	3537010	PtrMemberAccess	op -> operands		3536988	0					
ANR	3537011	Identifier	op		3536988	0					
ANR	3537012	Identifier	operands		3536988	1					
ANR	3537013	PrimaryExpression	0		3536988	1					
ANR	3537014	Identifier	type		3536988	1					
ANR	3537015	Identifier	OT_MEMORY		3536988	1					
ANR	3537016	CompoundStatement		5:42:95:95	3536988	1					
ANR	3537017	IfStatement	if ( op -> operands [ 0 ] . type & OT_DWORD )		3536988	0					
ANR	3537018	Condition	op -> operands [ 0 ] . type & OT_DWORD	3301:8:83706:83736	3536988	0	True				
ANR	3537019	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		3536988	0		&			
ANR	3537020	MemberAccess	op -> operands [ 0 ] . type		3536988	0					
ANR	3537021	ArrayIndexing	op -> operands [ 0 ]		3536988	0					
ANR	3537022	PtrMemberAccess	op -> operands		3536988	0					
ANR	3537023	Identifier	op		3536988	0					
ANR	3537024	Identifier	operands		3536988	1					
ANR	3537025	PrimaryExpression	0		3536988	1					
ANR	3537026	Identifier	type		3536988	1					
ANR	3537027	Identifier	OT_DWORD		3536988	1					
ANR	3537028	CompoundStatement		6:42:139:139	3536988	1					
ANR	3537029	ExpressionStatement	data [ l ++ ] = 0xd8	3302:4:83746:83762	3536988	0	True				
ANR	3537030	AssignmentExpression	data [ l ++ ] = 0xd8		3536988	0		=			
ANR	3537031	ArrayIndexing	data [ l ++ ]		3536988	0					
ANR	3537032	Identifier	data		3536988	0					
ANR	3537033	PostIncDecOperationExpression	l ++		3536988	1					
ANR	3537034	Identifier	l		3536988	0					
ANR	3537035	IncDec	++		3536988	1					
ANR	3537036	PrimaryExpression	0xd8		3536988	1					
ANR	3537037	ExpressionStatement	data [ l ++ ] = 0x38 | op -> operands [ 0 ] . regs [ 0 ]	3303:4:83768:83810	3536988	1	True				
ANR	3537038	AssignmentExpression	data [ l ++ ] = 0x38 | op -> operands [ 0 ] . regs [ 0 ]		3536988	0		=			
ANR	3537039	ArrayIndexing	data [ l ++ ]		3536988	0					
ANR	3537040	Identifier	data		3536988	0					
ANR	3537041	PostIncDecOperationExpression	l ++		3536988	1					
ANR	3537042	Identifier	l		3536988	0					
ANR	3537043	IncDec	++		3536988	1					
ANR	3537044	InclusiveOrExpression	0x38 | op -> operands [ 0 ] . regs [ 0 ]		3536988	1		|			
ANR	3537045	PrimaryExpression	0x38		3536988	0					
ANR	3537046	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3536988	1					
ANR	3537047	MemberAccess	op -> operands [ 0 ] . regs		3536988	0					
ANR	3537048	ArrayIndexing	op -> operands [ 0 ]		3536988	0					
ANR	3537049	PtrMemberAccess	op -> operands		3536988	0					
ANR	3537050	Identifier	op		3536988	0					
ANR	3537051	Identifier	operands		3536988	1					
ANR	3537052	PrimaryExpression	0		3536988	1					
ANR	3537053	Identifier	regs		3536988	1					
ANR	3537054	PrimaryExpression	0		3536988	1					
ANR	3537055	ElseStatement	else		3536988	0					
ANR	3537056	IfStatement	if ( op -> operands [ 0 ] . type & OT_QWORD )		3536988	0					
ANR	3537057	Condition	op -> operands [ 0 ] . type & OT_QWORD	3304:15:83827:83857	3536988	0	True				
ANR	3537058	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		3536988	0		&			
ANR	3537059	MemberAccess	op -> operands [ 0 ] . type		3536988	0					
ANR	3537060	ArrayIndexing	op -> operands [ 0 ]		3536988	0					
ANR	3537061	PtrMemberAccess	op -> operands		3536988	0					
ANR	3537062	Identifier	op		3536988	0					
ANR	3537063	Identifier	operands		3536988	1					
ANR	3537064	PrimaryExpression	0		3536988	1					
ANR	3537065	Identifier	type		3536988	1					
ANR	3537066	Identifier	OT_QWORD		3536988	1					
ANR	3537067	CompoundStatement		9:49:260:260	3536988	1					
ANR	3537068	ExpressionStatement	data [ l ++ ] = 0xdc	3305:4:83867:83883	3536988	0	True				
ANR	3537069	AssignmentExpression	data [ l ++ ] = 0xdc		3536988	0		=			
ANR	3537070	ArrayIndexing	data [ l ++ ]		3536988	0					
ANR	3537071	Identifier	data		3536988	0					
ANR	3537072	PostIncDecOperationExpression	l ++		3536988	1					
ANR	3537073	Identifier	l		3536988	0					
ANR	3537074	IncDec	++		3536988	1					
ANR	3537075	PrimaryExpression	0xdc		3536988	1					
ANR	3537076	ExpressionStatement	data [ l ++ ] = 0x38 | op -> operands [ 0 ] . regs [ 0 ]	3306:4:83889:83931	3536988	1	True				
ANR	3537077	AssignmentExpression	data [ l ++ ] = 0x38 | op -> operands [ 0 ] . regs [ 0 ]		3536988	0		=			
ANR	3537078	ArrayIndexing	data [ l ++ ]		3536988	0					
ANR	3537079	Identifier	data		3536988	0					
ANR	3537080	PostIncDecOperationExpression	l ++		3536988	1					
ANR	3537081	Identifier	l		3536988	0					
ANR	3537082	IncDec	++		3536988	1					
ANR	3537083	InclusiveOrExpression	0x38 | op -> operands [ 0 ] . regs [ 0 ]		3536988	1		|			
ANR	3537084	PrimaryExpression	0x38		3536988	0					
ANR	3537085	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3536988	1					
ANR	3537086	MemberAccess	op -> operands [ 0 ] . regs		3536988	0					
ANR	3537087	ArrayIndexing	op -> operands [ 0 ]		3536988	0					
ANR	3537088	PtrMemberAccess	op -> operands		3536988	0					
ANR	3537089	Identifier	op		3536988	0					
ANR	3537090	Identifier	operands		3536988	1					
ANR	3537091	PrimaryExpression	0		3536988	1					
ANR	3537092	Identifier	regs		3536988	1					
ANR	3537093	PrimaryExpression	0		3536988	1					
ANR	3537094	ElseStatement	else		3536988	0					
ANR	3537095	CompoundStatement		12:10:342:342	3536988	0					
ANR	3537096	ReturnStatement	return - 1 ;	3308:4:83949:83958	3536988	0	True				
ANR	3537097	UnaryOperationExpression	- 1		3536988	0					
ANR	3537098	UnaryOperator	-		3536988	0					
ANR	3537099	PrimaryExpression	1		3536988	1					
ANR	3537100	ElseStatement	else		3536988	0					
ANR	3537101	CompoundStatement		15:9:373:373	3536988	0					
ANR	3537102	ReturnStatement	return - 1 ;	3311:3:83979:83988	3536988	0	True				
ANR	3537103	UnaryOperationExpression	- 1		3536988	0					
ANR	3537104	UnaryOperator	-		3536988	0					
ANR	3537105	PrimaryExpression	1		3536988	1					
ANR	3537106	BreakStatement	break ;	3313:2:83996:84001	3536988	2	True				
ANR	3537107	Label	case 2 :	3314:1:84004:84010	3536988	3	True				
ANR	3537108	IfStatement	if ( op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL )		3536988	4					
ANR	3537109	Condition	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL	3315:7:84019:84147	3536988	0	True				
ANR	3537110	AndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		3536988	0		&&			
ANR	3537111	BitAndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL		3536988	0		&			
ANR	3537112	MemberAccess	op -> operands [ 0 ] . type		3536988	0					
ANR	3537113	ArrayIndexing	op -> operands [ 0 ]		3536988	0					
ANR	3537114	PtrMemberAccess	op -> operands		3536988	0					
ANR	3537115	Identifier	op		3536988	0					
ANR	3537116	Identifier	operands		3536988	1					
ANR	3537117	PrimaryExpression	0		3536988	1					
ANR	3537118	Identifier	type		3536988	1					
ANR	3537119	BitAndExpression	OT_FPUREG & ~OT_REGALL		3536988	1		&			
ANR	3537120	Identifier	OT_FPUREG		3536988	0					
ANR	3537121	Identifier	~OT_REGALL		3536988	1					
ANR	3537122	AndExpression	op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		3536988	1		&&			
ANR	3537123	EqualityExpression	op -> operands [ 0 ] . reg == 0		3536988	0		==			
ANR	3537124	MemberAccess	op -> operands [ 0 ] . reg		3536988	0					
ANR	3537125	ArrayIndexing	op -> operands [ 0 ]		3536988	0					
ANR	3537126	PtrMemberAccess	op -> operands		3536988	0					
ANR	3537127	Identifier	op		3536988	0					
ANR	3537128	Identifier	operands		3536988	1					
ANR	3537129	PrimaryExpression	0		3536988	1					
ANR	3537130	Identifier	reg		3536988	1					
ANR	3537131	PrimaryExpression	0		3536988	1					
ANR	3537132	BitAndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		3536988	1		&			
ANR	3537133	MemberAccess	op -> operands [ 1 ] . type		3536988	0					
ANR	3537134	ArrayIndexing	op -> operands [ 1 ]		3536988	0					
ANR	3537135	PtrMemberAccess	op -> operands		3536988	0					
ANR	3537136	Identifier	op		3536988	0					
ANR	3537137	Identifier	operands		3536988	1					
ANR	3537138	PrimaryExpression	1		3536988	1					
ANR	3537139	Identifier	type		3536988	1					
ANR	3537140	BitAndExpression	OT_FPUREG & ~OT_REGALL		3536988	1		&			
ANR	3537141	Identifier	OT_FPUREG		3536988	0					
ANR	3537142	Identifier	~OT_REGALL		3536988	1					
ANR	3537143	CompoundStatement		21:55:550:550	3536988	1					
ANR	3537144	ExpressionStatement	data [ l ++ ] = 0xd8	3317:3:84156:84172	3536988	0	True				
ANR	3537145	AssignmentExpression	data [ l ++ ] = 0xd8		3536988	0		=			
ANR	3537146	ArrayIndexing	data [ l ++ ]		3536988	0					
ANR	3537147	Identifier	data		3536988	0					
ANR	3537148	PostIncDecOperationExpression	l ++		3536988	1					
ANR	3537149	Identifier	l		3536988	0					
ANR	3537150	IncDec	++		3536988	1					
ANR	3537151	PrimaryExpression	0xd8		3536988	1					
ANR	3537152	ExpressionStatement	data [ l ++ ] = 0xf8 | op -> operands [ 1 ] . reg	3318:3:84177:84215	3536988	1	True				
ANR	3537153	AssignmentExpression	data [ l ++ ] = 0xf8 | op -> operands [ 1 ] . reg		3536988	0		=			
ANR	3537154	ArrayIndexing	data [ l ++ ]		3536988	0					
ANR	3537155	Identifier	data		3536988	0					
ANR	3537156	PostIncDecOperationExpression	l ++		3536988	1					
ANR	3537157	Identifier	l		3536988	0					
ANR	3537158	IncDec	++		3536988	1					
ANR	3537159	InclusiveOrExpression	0xf8 | op -> operands [ 1 ] . reg		3536988	1		|			
ANR	3537160	PrimaryExpression	0xf8		3536988	0					
ANR	3537161	MemberAccess	op -> operands [ 1 ] . reg		3536988	1					
ANR	3537162	ArrayIndexing	op -> operands [ 1 ]		3536988	0					
ANR	3537163	PtrMemberAccess	op -> operands		3536988	0					
ANR	3537164	Identifier	op		3536988	0					
ANR	3537165	Identifier	operands		3536988	1					
ANR	3537166	PrimaryExpression	1		3536988	1					
ANR	3537167	Identifier	reg		3536988	1					
ANR	3537168	ElseStatement	else		3536988	0					
ANR	3537169	IfStatement	if ( op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0 )		3536988	0					
ANR	3537170	Condition	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0	3319:14:84231:84359	3536988	0	True				
ANR	3537171	AndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		3536988	0		&&			
ANR	3537172	BitAndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL		3536988	0		&			
ANR	3537173	MemberAccess	op -> operands [ 0 ] . type		3536988	0					
ANR	3537174	ArrayIndexing	op -> operands [ 0 ]		3536988	0					
ANR	3537175	PtrMemberAccess	op -> operands		3536988	0					
ANR	3537176	Identifier	op		3536988	0					
ANR	3537177	Identifier	operands		3536988	1					
ANR	3537178	PrimaryExpression	0		3536988	1					
ANR	3537179	Identifier	type		3536988	1					
ANR	3537180	BitAndExpression	OT_FPUREG & ~OT_REGALL		3536988	1		&			
ANR	3537181	Identifier	OT_FPUREG		3536988	0					
ANR	3537182	Identifier	~OT_REGALL		3536988	1					
ANR	3537183	AndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		3536988	1		&&			
ANR	3537184	BitAndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		3536988	0		&			
ANR	3537185	MemberAccess	op -> operands [ 1 ] . type		3536988	0					
ANR	3537186	ArrayIndexing	op -> operands [ 1 ]		3536988	0					
ANR	3537187	PtrMemberAccess	op -> operands		3536988	0					
ANR	3537188	Identifier	op		3536988	0					
ANR	3537189	Identifier	operands		3536988	1					
ANR	3537190	PrimaryExpression	1		3536988	1					
ANR	3537191	Identifier	type		3536988	1					
ANR	3537192	BitAndExpression	OT_FPUREG & ~OT_REGALL		3536988	1		&			
ANR	3537193	Identifier	OT_FPUREG		3536988	0					
ANR	3537194	Identifier	~OT_REGALL		3536988	1					
ANR	3537195	EqualityExpression	op -> operands [ 1 ] . reg == 0		3536988	1		==			
ANR	3537196	MemberAccess	op -> operands [ 1 ] . reg		3536988	0					
ANR	3537197	ArrayIndexing	op -> operands [ 1 ]		3536988	0					
ANR	3537198	PtrMemberAccess	op -> operands		3536988	0					
ANR	3537199	Identifier	op		3536988	0					
ANR	3537200	Identifier	operands		3536988	1					
ANR	3537201	PrimaryExpression	1		3536988	1					
ANR	3537202	Identifier	reg		3536988	1					
ANR	3537203	PrimaryExpression	0		3536988	1					
ANR	3537204	CompoundStatement		25:83:762:762	3536988	1					
ANR	3537205	ExpressionStatement	data [ l ++ ] = 0xdc	3321:3:84368:84384	3536988	0	True				
ANR	3537206	AssignmentExpression	data [ l ++ ] = 0xdc		3536988	0		=			
ANR	3537207	ArrayIndexing	data [ l ++ ]		3536988	0					
ANR	3537208	Identifier	data		3536988	0					
ANR	3537209	PostIncDecOperationExpression	l ++		3536988	1					
ANR	3537210	Identifier	l		3536988	0					
ANR	3537211	IncDec	++		3536988	1					
ANR	3537212	PrimaryExpression	0xdc		3536988	1					
ANR	3537213	ExpressionStatement	data [ l ++ ] = 0xf0 | op -> operands [ 0 ] . reg	3322:3:84389:84427	3536988	1	True				
ANR	3537214	AssignmentExpression	data [ l ++ ] = 0xf0 | op -> operands [ 0 ] . reg		3536988	0		=			
ANR	3537215	ArrayIndexing	data [ l ++ ]		3536988	0					
ANR	3537216	Identifier	data		3536988	0					
ANR	3537217	PostIncDecOperationExpression	l ++		3536988	1					
ANR	3537218	Identifier	l		3536988	0					
ANR	3537219	IncDec	++		3536988	1					
ANR	3537220	InclusiveOrExpression	0xf0 | op -> operands [ 0 ] . reg		3536988	1		|			
ANR	3537221	PrimaryExpression	0xf0		3536988	0					
ANR	3537222	MemberAccess	op -> operands [ 0 ] . reg		3536988	1					
ANR	3537223	ArrayIndexing	op -> operands [ 0 ]		3536988	0					
ANR	3537224	PtrMemberAccess	op -> operands		3536988	0					
ANR	3537225	Identifier	op		3536988	0					
ANR	3537226	Identifier	operands		3536988	1					
ANR	3537227	PrimaryExpression	0		3536988	1					
ANR	3537228	Identifier	reg		3536988	1					
ANR	3537229	ElseStatement	else		3536988	0					
ANR	3537230	CompoundStatement		28:9:837:837	3536988	0					
ANR	3537231	ReturnStatement	return - 1 ;	3324:3:84443:84452	3536988	0	True				
ANR	3537232	UnaryOperationExpression	- 1		3536988	0					
ANR	3537233	UnaryOperator	-		3536988	0					
ANR	3537234	PrimaryExpression	1		3536988	1					
ANR	3537235	BreakStatement	break ;	3326:2:84460:84465	3536988	5	True				
ANR	3537236	Label	default :	3327:1:84468:84475	3536988	6	True				
ANR	3537237	Identifier	default		3536988	0					
ANR	3537238	ReturnStatement	return - 1 ;	3328:2:84479:84488	3536988	7	True				
ANR	3537239	UnaryOperationExpression	- 1		3536988	0					
ANR	3537240	UnaryOperator	-		3536988	0					
ANR	3537241	PrimaryExpression	1		3536988	1					
ANR	3537242	ReturnStatement	return l ;	3330:1:84494:84502	3536988	2	True				
ANR	3537243	Identifier	l		3536988	0					
ANR	3537244	ReturnType	static int		3536988	1					
ANR	3537245	Identifier	opfdivr		3536988	2					
ANR	3537246	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3536988	3					
ANR	3537247	Parameter	RAsm * a	3296:19:83562:83568	3536988	0	True				
ANR	3537248	ParameterType	RAsm *		3536988	0					
ANR	3537249	Identifier	a		3536988	1					
ANR	3537250	Parameter	ut8 * data	3296:28:83571:83579	3536988	1	True				
ANR	3537251	ParameterType	ut8 *		3536988	0					
ANR	3537252	Identifier	data		3536988	1					
ANR	3537253	Parameter	const Opcode * op	3296:39:83582:83597	3536988	2	True				
ANR	3537254	ParameterType	const Opcode *		3536988	0					
ANR	3537255	Identifier	op		3536988	1					
ANR	3537256	CFGEntryNode	ENTRY		3536988		True				
ANR	3537257	CFGExitNode	EXIT		3536988		True				
ANR	3537258	Symbol	a		3536988						
ANR	3537259	Symbol	op		3536988						
ANR	3537260	Symbol	OT_QWORD		3536988						
ANR	3537261	Symbol	data		3536988						
ANR	3537262	Symbol	* op		3536988						
ANR	3537263	Symbol	op -> operands [ 1 ] . reg		3536988						
ANR	3537264	Symbol	* * op -> operands		3536988						
ANR	3537265	Symbol	l		3536988						
ANR	3537266	Symbol	* * op		3536988						
ANR	3537267	Symbol	OT_FPUREG		3536988						
ANR	3537268	Symbol	* op -> operands		3536988						
ANR	3537269	Symbol	op -> operands [ 1 ] . type		3536988						
ANR	3537270	Symbol	op -> operands_count		3536988						
ANR	3537271	Symbol	* op -> operands [ 0 ] . regs		3536988						
ANR	3537272	Symbol	op -> operands [ 0 ] . type		3536988						
ANR	3537273	Symbol	~OT_REGALL		3536988						
ANR	3537274	Symbol	* * * op		3536988						
ANR	3537275	Symbol	op -> operands [ 0 ] . reg		3536988						
ANR	3537276	Symbol	op -> operands		3536988						
ANR	3537277	Symbol	OT_MEMORY		3536988						
ANR	3537278	Symbol	* data		3536988						
ANR	3537279	Symbol	op -> operands [ 0 ] . regs		3536988						
ANR	3537280	Symbol	OT_DWORD		3536988						
ANR	3537281	Function	opfdivrp	3333:0:84507:84957							
ANR	3537282	FunctionDef	"opfdivrp (RAsm * a , ut8 * data , const Opcode * op)"		3537281	0					
ANR	3537283	CompoundStatement		3333:58:84565:84957	3537281	0					
ANR	3537284	IdentifierDeclStatement	int l = 0 ;	3334:1:84568:84577	3537281	0	True				
ANR	3537285	IdentifierDecl	l = 0		3537281	0					
ANR	3537286	IdentifierDeclType	int		3537281	0					
ANR	3537287	Identifier	l		3537281	1					
ANR	3537288	AssignmentExpression	l = 0		3537281	2		=			
ANR	3537289	Identifier	l		3537281	0					
ANR	3537290	PrimaryExpression	0		3537281	1					
ANR	3537291	SwitchStatement	switch ( op -> operands_count )		3537281	1					
ANR	3537292	Condition	op -> operands_count	3335:9:84588:84605	3537281	0	True				
ANR	3537293	PtrMemberAccess	op -> operands_count		3537281	0					
ANR	3537294	Identifier	op		3537281	0					
ANR	3537295	Identifier	operands_count		3537281	1					
ANR	3537296	CompoundStatement		3:29:42:42	3537281	1					
ANR	3537297	Label	case 0 :	3336:1:84611:84617	3537281	0	True				
ANR	3537298	ExpressionStatement	data [ l ++ ] = 0xde	3337:2:84621:84637	3537281	1	True				
ANR	3537299	AssignmentExpression	data [ l ++ ] = 0xde		3537281	0		=			
ANR	3537300	ArrayIndexing	data [ l ++ ]		3537281	0					
ANR	3537301	Identifier	data		3537281	0					
ANR	3537302	PostIncDecOperationExpression	l ++		3537281	1					
ANR	3537303	Identifier	l		3537281	0					
ANR	3537304	IncDec	++		3537281	1					
ANR	3537305	PrimaryExpression	0xde		3537281	1					
ANR	3537306	ExpressionStatement	data [ l ++ ] = 0xf1	3338:2:84641:84657	3537281	2	True				
ANR	3537307	AssignmentExpression	data [ l ++ ] = 0xf1		3537281	0		=			
ANR	3537308	ArrayIndexing	data [ l ++ ]		3537281	0					
ANR	3537309	Identifier	data		3537281	0					
ANR	3537310	PostIncDecOperationExpression	l ++		3537281	1					
ANR	3537311	Identifier	l		3537281	0					
ANR	3537312	IncDec	++		3537281	1					
ANR	3537313	PrimaryExpression	0xf1		3537281	1					
ANR	3537314	BreakStatement	break ;	3339:2:84661:84666	3537281	3	True				
ANR	3537315	Label	case 2 :	3340:1:84669:84675	3537281	4	True				
ANR	3537316	IfStatement	if ( op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0 )		3537281	5					
ANR	3537317	Condition	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0	3341:7:84684:84812	3537281	0	True				
ANR	3537318	AndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		3537281	0		&&			
ANR	3537319	BitAndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL		3537281	0		&			
ANR	3537320	MemberAccess	op -> operands [ 0 ] . type		3537281	0					
ANR	3537321	ArrayIndexing	op -> operands [ 0 ]		3537281	0					
ANR	3537322	PtrMemberAccess	op -> operands		3537281	0					
ANR	3537323	Identifier	op		3537281	0					
ANR	3537324	Identifier	operands		3537281	1					
ANR	3537325	PrimaryExpression	0		3537281	1					
ANR	3537326	Identifier	type		3537281	1					
ANR	3537327	BitAndExpression	OT_FPUREG & ~OT_REGALL		3537281	1		&			
ANR	3537328	Identifier	OT_FPUREG		3537281	0					
ANR	3537329	Identifier	~OT_REGALL		3537281	1					
ANR	3537330	AndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		3537281	1		&&			
ANR	3537331	BitAndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		3537281	0		&			
ANR	3537332	MemberAccess	op -> operands [ 1 ] . type		3537281	0					
ANR	3537333	ArrayIndexing	op -> operands [ 1 ]		3537281	0					
ANR	3537334	PtrMemberAccess	op -> operands		3537281	0					
ANR	3537335	Identifier	op		3537281	0					
ANR	3537336	Identifier	operands		3537281	1					
ANR	3537337	PrimaryExpression	1		3537281	1					
ANR	3537338	Identifier	type		3537281	1					
ANR	3537339	BitAndExpression	OT_FPUREG & ~OT_REGALL		3537281	1		&			
ANR	3537340	Identifier	OT_FPUREG		3537281	0					
ANR	3537341	Identifier	~OT_REGALL		3537281	1					
ANR	3537342	EqualityExpression	op -> operands [ 1 ] . reg == 0		3537281	1		==			
ANR	3537343	MemberAccess	op -> operands [ 1 ] . reg		3537281	0					
ANR	3537344	ArrayIndexing	op -> operands [ 1 ]		3537281	0					
ANR	3537345	PtrMemberAccess	op -> operands		3537281	0					
ANR	3537346	Identifier	op		3537281	0					
ANR	3537347	Identifier	operands		3537281	1					
ANR	3537348	PrimaryExpression	1		3537281	1					
ANR	3537349	Identifier	reg		3537281	1					
ANR	3537350	PrimaryExpression	0		3537281	1					
ANR	3537351	CompoundStatement		10:83:250:250	3537281	1					
ANR	3537352	ExpressionStatement	data [ l ++ ] = 0xde	3343:3:84821:84837	3537281	0	True				
ANR	3537353	AssignmentExpression	data [ l ++ ] = 0xde		3537281	0		=			
ANR	3537354	ArrayIndexing	data [ l ++ ]		3537281	0					
ANR	3537355	Identifier	data		3537281	0					
ANR	3537356	PostIncDecOperationExpression	l ++		3537281	1					
ANR	3537357	Identifier	l		3537281	0					
ANR	3537358	IncDec	++		3537281	1					
ANR	3537359	PrimaryExpression	0xde		3537281	1					
ANR	3537360	ExpressionStatement	data [ l ++ ] = 0xf0 | op -> operands [ 0 ] . reg	3344:3:84842:84880	3537281	1	True				
ANR	3537361	AssignmentExpression	data [ l ++ ] = 0xf0 | op -> operands [ 0 ] . reg		3537281	0		=			
ANR	3537362	ArrayIndexing	data [ l ++ ]		3537281	0					
ANR	3537363	Identifier	data		3537281	0					
ANR	3537364	PostIncDecOperationExpression	l ++		3537281	1					
ANR	3537365	Identifier	l		3537281	0					
ANR	3537366	IncDec	++		3537281	1					
ANR	3537367	InclusiveOrExpression	0xf0 | op -> operands [ 0 ] . reg		3537281	1		|			
ANR	3537368	PrimaryExpression	0xf0		3537281	0					
ANR	3537369	MemberAccess	op -> operands [ 0 ] . reg		3537281	1					
ANR	3537370	ArrayIndexing	op -> operands [ 0 ]		3537281	0					
ANR	3537371	PtrMemberAccess	op -> operands		3537281	0					
ANR	3537372	Identifier	op		3537281	0					
ANR	3537373	Identifier	operands		3537281	1					
ANR	3537374	PrimaryExpression	0		3537281	1					
ANR	3537375	Identifier	reg		3537281	1					
ANR	3537376	ElseStatement	else		3537281	0					
ANR	3537377	CompoundStatement		13:9:325:325	3537281	0					
ANR	3537378	ReturnStatement	return - 1 ;	3346:3:84896:84905	3537281	0	True				
ANR	3537379	UnaryOperationExpression	- 1		3537281	0					
ANR	3537380	UnaryOperator	-		3537281	0					
ANR	3537381	PrimaryExpression	1		3537281	1					
ANR	3537382	BreakStatement	break ;	3348:2:84913:84918	3537281	6	True				
ANR	3537383	Label	default :	3349:1:84921:84928	3537281	7	True				
ANR	3537384	Identifier	default		3537281	0					
ANR	3537385	ReturnStatement	return - 1 ;	3350:2:84932:84941	3537281	8	True				
ANR	3537386	UnaryOperationExpression	- 1		3537281	0					
ANR	3537387	UnaryOperator	-		3537281	0					
ANR	3537388	PrimaryExpression	1		3537281	1					
ANR	3537389	ReturnStatement	return l ;	3352:1:84947:84955	3537281	2	True				
ANR	3537390	Identifier	l		3537281	0					
ANR	3537391	ReturnType	static int		3537281	1					
ANR	3537392	Identifier	opfdivrp		3537281	2					
ANR	3537393	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3537281	3					
ANR	3537394	Parameter	RAsm * a	3333:20:84527:84533	3537281	0	True				
ANR	3537395	ParameterType	RAsm *		3537281	0					
ANR	3537396	Identifier	a		3537281	1					
ANR	3537397	Parameter	ut8 * data	3333:29:84536:84544	3537281	1	True				
ANR	3537398	ParameterType	ut8 *		3537281	0					
ANR	3537399	Identifier	data		3537281	1					
ANR	3537400	Parameter	const Opcode * op	3333:40:84547:84562	3537281	2	True				
ANR	3537401	ParameterType	const Opcode *		3537281	0					
ANR	3537402	Identifier	op		3537281	1					
ANR	3537403	CFGEntryNode	ENTRY		3537281		True				
ANR	3537404	CFGExitNode	EXIT		3537281		True				
ANR	3537405	Symbol	a		3537281						
ANR	3537406	Symbol	op		3537281						
ANR	3537407	Symbol	data		3537281						
ANR	3537408	Symbol	* op		3537281						
ANR	3537409	Symbol	op -> operands [ 1 ] . reg		3537281						
ANR	3537410	Symbol	l		3537281						
ANR	3537411	Symbol	* * op		3537281						
ANR	3537412	Symbol	OT_FPUREG		3537281						
ANR	3537413	Symbol	* op -> operands		3537281						
ANR	3537414	Symbol	op -> operands [ 1 ] . type		3537281						
ANR	3537415	Symbol	op -> operands_count		3537281						
ANR	3537416	Symbol	~OT_REGALL		3537281						
ANR	3537417	Symbol	op -> operands [ 0 ] . type		3537281						
ANR	3537418	Symbol	op -> operands [ 0 ] . reg		3537281						
ANR	3537419	Symbol	op -> operands		3537281						
ANR	3537420	Symbol	* data		3537281						
ANR	3537421	Function	opfidivr	3355:0:84960:85457							
ANR	3537422	FunctionDef	"opfidivr (RAsm * a , ut8 * data , const Opcode * op)"		3537421	0					
ANR	3537423	CompoundStatement		3355:58:85018:85457	3537421	0					
ANR	3537424	IdentifierDeclStatement	int l = 0 ;	3356:1:85021:85030	3537421	0	True				
ANR	3537425	IdentifierDecl	l = 0		3537421	0					
ANR	3537426	IdentifierDeclType	int		3537421	0					
ANR	3537427	Identifier	l		3537421	1					
ANR	3537428	AssignmentExpression	l = 0		3537421	2		=			
ANR	3537429	Identifier	l		3537421	0					
ANR	3537430	PrimaryExpression	0		3537421	1					
ANR	3537431	SwitchStatement	switch ( op -> operands_count )		3537421	1					
ANR	3537432	Condition	op -> operands_count	3357:9:85041:85058	3537421	0	True				
ANR	3537433	PtrMemberAccess	op -> operands_count		3537421	0					
ANR	3537434	Identifier	op		3537421	0					
ANR	3537435	Identifier	operands_count		3537421	1					
ANR	3537436	CompoundStatement		3:29:42:42	3537421	1					
ANR	3537437	Label	case 1 :	3358:1:85064:85070	3537421	0	True				
ANR	3537438	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3537421	1					
ANR	3537439	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3359:7:85079:85110	3537421	0	True				
ANR	3537440	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3537421	0		&			
ANR	3537441	MemberAccess	op -> operands [ 0 ] . type		3537421	0					
ANR	3537442	ArrayIndexing	op -> operands [ 0 ]		3537421	0					
ANR	3537443	PtrMemberAccess	op -> operands		3537421	0					
ANR	3537444	Identifier	op		3537421	0					
ANR	3537445	Identifier	operands		3537421	1					
ANR	3537446	PrimaryExpression	0		3537421	1					
ANR	3537447	Identifier	type		3537421	1					
ANR	3537448	Identifier	OT_MEMORY		3537421	1					
ANR	3537449	CompoundStatement		5:42:95:95	3537421	1					
ANR	3537450	IfStatement	if ( op -> operands [ 0 ] . type & OT_DWORD )		3537421	0					
ANR	3537451	Condition	op -> operands [ 0 ] . type & OT_DWORD	3360:8:85124:85154	3537421	0	True				
ANR	3537452	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		3537421	0		&			
ANR	3537453	MemberAccess	op -> operands [ 0 ] . type		3537421	0					
ANR	3537454	ArrayIndexing	op -> operands [ 0 ]		3537421	0					
ANR	3537455	PtrMemberAccess	op -> operands		3537421	0					
ANR	3537456	Identifier	op		3537421	0					
ANR	3537457	Identifier	operands		3537421	1					
ANR	3537458	PrimaryExpression	0		3537421	1					
ANR	3537459	Identifier	type		3537421	1					
ANR	3537460	Identifier	OT_DWORD		3537421	1					
ANR	3537461	CompoundStatement		6:42:139:139	3537421	1					
ANR	3537462	ExpressionStatement	data [ l ++ ] = 0xda	3361:4:85164:85180	3537421	0	True				
ANR	3537463	AssignmentExpression	data [ l ++ ] = 0xda		3537421	0		=			
ANR	3537464	ArrayIndexing	data [ l ++ ]		3537421	0					
ANR	3537465	Identifier	data		3537421	0					
ANR	3537466	PostIncDecOperationExpression	l ++		3537421	1					
ANR	3537467	Identifier	l		3537421	0					
ANR	3537468	IncDec	++		3537421	1					
ANR	3537469	PrimaryExpression	0xda		3537421	1					
ANR	3537470	ExpressionStatement	data [ l ++ ] = 0x38 | op -> operands [ 0 ] . regs [ 0 ]	3362:4:85186:85228	3537421	1	True				
ANR	3537471	AssignmentExpression	data [ l ++ ] = 0x38 | op -> operands [ 0 ] . regs [ 0 ]		3537421	0		=			
ANR	3537472	ArrayIndexing	data [ l ++ ]		3537421	0					
ANR	3537473	Identifier	data		3537421	0					
ANR	3537474	PostIncDecOperationExpression	l ++		3537421	1					
ANR	3537475	Identifier	l		3537421	0					
ANR	3537476	IncDec	++		3537421	1					
ANR	3537477	InclusiveOrExpression	0x38 | op -> operands [ 0 ] . regs [ 0 ]		3537421	1		|			
ANR	3537478	PrimaryExpression	0x38		3537421	0					
ANR	3537479	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3537421	1					
ANR	3537480	MemberAccess	op -> operands [ 0 ] . regs		3537421	0					
ANR	3537481	ArrayIndexing	op -> operands [ 0 ]		3537421	0					
ANR	3537482	PtrMemberAccess	op -> operands		3537421	0					
ANR	3537483	Identifier	op		3537421	0					
ANR	3537484	Identifier	operands		3537421	1					
ANR	3537485	PrimaryExpression	0		3537421	1					
ANR	3537486	Identifier	regs		3537421	1					
ANR	3537487	PrimaryExpression	0		3537421	1					
ANR	3537488	ElseStatement	else		3537421	0					
ANR	3537489	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		3537421	0					
ANR	3537490	Condition	op -> operands [ 0 ] . type & OT_WORD	3363:15:85245:85274	3537421	0	True				
ANR	3537491	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		3537421	0		&			
ANR	3537492	MemberAccess	op -> operands [ 0 ] . type		3537421	0					
ANR	3537493	ArrayIndexing	op -> operands [ 0 ]		3537421	0					
ANR	3537494	PtrMemberAccess	op -> operands		3537421	0					
ANR	3537495	Identifier	op		3537421	0					
ANR	3537496	Identifier	operands		3537421	1					
ANR	3537497	PrimaryExpression	0		3537421	1					
ANR	3537498	Identifier	type		3537421	1					
ANR	3537499	Identifier	OT_WORD		3537421	1					
ANR	3537500	CompoundStatement		9:48:259:259	3537421	1					
ANR	3537501	ExpressionStatement	data [ l ++ ] = 0xde	3364:4:85284:85300	3537421	0	True				
ANR	3537502	AssignmentExpression	data [ l ++ ] = 0xde		3537421	0		=			
ANR	3537503	ArrayIndexing	data [ l ++ ]		3537421	0					
ANR	3537504	Identifier	data		3537421	0					
ANR	3537505	PostIncDecOperationExpression	l ++		3537421	1					
ANR	3537506	Identifier	l		3537421	0					
ANR	3537507	IncDec	++		3537421	1					
ANR	3537508	PrimaryExpression	0xde		3537421	1					
ANR	3537509	ExpressionStatement	data [ l ++ ] = 0x38 | op -> operands [ 0 ] . regs [ 0 ]	3365:4:85306:85348	3537421	1	True				
ANR	3537510	AssignmentExpression	data [ l ++ ] = 0x38 | op -> operands [ 0 ] . regs [ 0 ]		3537421	0		=			
ANR	3537511	ArrayIndexing	data [ l ++ ]		3537421	0					
ANR	3537512	Identifier	data		3537421	0					
ANR	3537513	PostIncDecOperationExpression	l ++		3537421	1					
ANR	3537514	Identifier	l		3537421	0					
ANR	3537515	IncDec	++		3537421	1					
ANR	3537516	InclusiveOrExpression	0x38 | op -> operands [ 0 ] . regs [ 0 ]		3537421	1		|			
ANR	3537517	PrimaryExpression	0x38		3537421	0					
ANR	3537518	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3537421	1					
ANR	3537519	MemberAccess	op -> operands [ 0 ] . regs		3537421	0					
ANR	3537520	ArrayIndexing	op -> operands [ 0 ]		3537421	0					
ANR	3537521	PtrMemberAccess	op -> operands		3537421	0					
ANR	3537522	Identifier	op		3537421	0					
ANR	3537523	Identifier	operands		3537421	1					
ANR	3537524	PrimaryExpression	0		3537421	1					
ANR	3537525	Identifier	regs		3537421	1					
ANR	3537526	PrimaryExpression	0		3537421	1					
ANR	3537527	ElseStatement	else		3537421	0					
ANR	3537528	CompoundStatement		12:10:341:341	3537421	0					
ANR	3537529	ReturnStatement	return - 1 ;	3367:4:85366:85375	3537421	0	True				
ANR	3537530	UnaryOperationExpression	- 1		3537421	0					
ANR	3537531	UnaryOperator	-		3537421	0					
ANR	3537532	PrimaryExpression	1		3537421	1					
ANR	3537533	ElseStatement	else		3537421	0					
ANR	3537534	CompoundStatement		15:9:372:372	3537421	0					
ANR	3537535	ReturnStatement	return - 1 ;	3370:3:85396:85405	3537421	0	True				
ANR	3537536	UnaryOperationExpression	- 1		3537421	0					
ANR	3537537	UnaryOperator	-		3537421	0					
ANR	3537538	PrimaryExpression	1		3537421	1					
ANR	3537539	BreakStatement	break ;	3372:2:85413:85418	3537421	2	True				
ANR	3537540	Label	default :	3373:1:85421:85428	3537421	3	True				
ANR	3537541	Identifier	default		3537421	0					
ANR	3537542	ReturnStatement	return - 1 ;	3374:2:85432:85441	3537421	4	True				
ANR	3537543	UnaryOperationExpression	- 1		3537421	0					
ANR	3537544	UnaryOperator	-		3537421	0					
ANR	3537545	PrimaryExpression	1		3537421	1					
ANR	3537546	ReturnStatement	return l ;	3376:1:85447:85455	3537421	2	True				
ANR	3537547	Identifier	l		3537421	0					
ANR	3537548	ReturnType	static int		3537421	1					
ANR	3537549	Identifier	opfidivr		3537421	2					
ANR	3537550	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3537421	3					
ANR	3537551	Parameter	RAsm * a	3355:20:84980:84986	3537421	0	True				
ANR	3537552	ParameterType	RAsm *		3537421	0					
ANR	3537553	Identifier	a		3537421	1					
ANR	3537554	Parameter	ut8 * data	3355:29:84989:84997	3537421	1	True				
ANR	3537555	ParameterType	ut8 *		3537421	0					
ANR	3537556	Identifier	data		3537421	1					
ANR	3537557	Parameter	const Opcode * op	3355:40:85000:85015	3537421	2	True				
ANR	3537558	ParameterType	const Opcode *		3537421	0					
ANR	3537559	Identifier	op		3537421	1					
ANR	3537560	CFGEntryNode	ENTRY		3537421		True				
ANR	3537561	CFGExitNode	EXIT		3537421		True				
ANR	3537562	Symbol	a		3537421						
ANR	3537563	Symbol	op		3537421						
ANR	3537564	Symbol	OT_WORD		3537421						
ANR	3537565	Symbol	data		3537421						
ANR	3537566	Symbol	* op		3537421						
ANR	3537567	Symbol	* * op -> operands		3537421						
ANR	3537568	Symbol	l		3537421						
ANR	3537569	Symbol	* * op		3537421						
ANR	3537570	Symbol	* op -> operands		3537421						
ANR	3537571	Symbol	op -> operands_count		3537421						
ANR	3537572	Symbol	* op -> operands [ 0 ] . regs		3537421						
ANR	3537573	Symbol	op -> operands [ 0 ] . type		3537421						
ANR	3537574	Symbol	* * * op		3537421						
ANR	3537575	Symbol	op -> operands		3537421						
ANR	3537576	Symbol	OT_MEMORY		3537421						
ANR	3537577	Symbol	* data		3537421						
ANR	3537578	Symbol	op -> operands [ 0 ] . regs		3537421						
ANR	3537579	Symbol	OT_DWORD		3537421						
ANR	3537580	Function	opfmul	3379:0:85460:86420							
ANR	3537581	FunctionDef	"opfmul (RAsm * a , ut8 * data , const Opcode * op)"		3537580	0					
ANR	3537582	CompoundStatement		3379:56:85516:86420	3537580	0					
ANR	3537583	IdentifierDeclStatement	int l = 0 ;	3380:1:85519:85528	3537580	0	True				
ANR	3537584	IdentifierDecl	l = 0		3537580	0					
ANR	3537585	IdentifierDeclType	int		3537580	0					
ANR	3537586	Identifier	l		3537580	1					
ANR	3537587	AssignmentExpression	l = 0		3537580	2		=			
ANR	3537588	Identifier	l		3537580	0					
ANR	3537589	PrimaryExpression	0		3537580	1					
ANR	3537590	SwitchStatement	switch ( op -> operands_count )		3537580	1					
ANR	3537591	Condition	op -> operands_count	3381:9:85539:85556	3537580	0	True				
ANR	3537592	PtrMemberAccess	op -> operands_count		3537580	0					
ANR	3537593	Identifier	op		3537580	0					
ANR	3537594	Identifier	operands_count		3537580	1					
ANR	3537595	CompoundStatement		3:29:42:42	3537580	1					
ANR	3537596	Label	case 1 :	3382:1:85562:85568	3537580	0	True				
ANR	3537597	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3537580	1					
ANR	3537598	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3383:7:85577:85608	3537580	0	True				
ANR	3537599	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3537580	0		&			
ANR	3537600	MemberAccess	op -> operands [ 0 ] . type		3537580	0					
ANR	3537601	ArrayIndexing	op -> operands [ 0 ]		3537580	0					
ANR	3537602	PtrMemberAccess	op -> operands		3537580	0					
ANR	3537603	Identifier	op		3537580	0					
ANR	3537604	Identifier	operands		3537580	1					
ANR	3537605	PrimaryExpression	0		3537580	1					
ANR	3537606	Identifier	type		3537580	1					
ANR	3537607	Identifier	OT_MEMORY		3537580	1					
ANR	3537608	CompoundStatement		5:42:95:95	3537580	1					
ANR	3537609	IfStatement	if ( op -> operands [ 0 ] . type & OT_DWORD )		3537580	0					
ANR	3537610	Condition	op -> operands [ 0 ] . type & OT_DWORD	3384:8:85622:85652	3537580	0	True				
ANR	3537611	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		3537580	0		&			
ANR	3537612	MemberAccess	op -> operands [ 0 ] . type		3537580	0					
ANR	3537613	ArrayIndexing	op -> operands [ 0 ]		3537580	0					
ANR	3537614	PtrMemberAccess	op -> operands		3537580	0					
ANR	3537615	Identifier	op		3537580	0					
ANR	3537616	Identifier	operands		3537580	1					
ANR	3537617	PrimaryExpression	0		3537580	1					
ANR	3537618	Identifier	type		3537580	1					
ANR	3537619	Identifier	OT_DWORD		3537580	1					
ANR	3537620	CompoundStatement		6:42:139:139	3537580	1					
ANR	3537621	ExpressionStatement	data [ l ++ ] = 0xd8	3385:4:85662:85678	3537580	0	True				
ANR	3537622	AssignmentExpression	data [ l ++ ] = 0xd8		3537580	0		=			
ANR	3537623	ArrayIndexing	data [ l ++ ]		3537580	0					
ANR	3537624	Identifier	data		3537580	0					
ANR	3537625	PostIncDecOperationExpression	l ++		3537580	1					
ANR	3537626	Identifier	l		3537580	0					
ANR	3537627	IncDec	++		3537580	1					
ANR	3537628	PrimaryExpression	0xd8		3537580	1					
ANR	3537629	ExpressionStatement	data [ l ++ ] = 0x08 | op -> operands [ 0 ] . regs [ 0 ]	3386:4:85684:85726	3537580	1	True				
ANR	3537630	AssignmentExpression	data [ l ++ ] = 0x08 | op -> operands [ 0 ] . regs [ 0 ]		3537580	0		=			
ANR	3537631	ArrayIndexing	data [ l ++ ]		3537580	0					
ANR	3537632	Identifier	data		3537580	0					
ANR	3537633	PostIncDecOperationExpression	l ++		3537580	1					
ANR	3537634	Identifier	l		3537580	0					
ANR	3537635	IncDec	++		3537580	1					
ANR	3537636	InclusiveOrExpression	0x08 | op -> operands [ 0 ] . regs [ 0 ]		3537580	1		|			
ANR	3537637	PrimaryExpression	0x08		3537580	0					
ANR	3537638	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3537580	1					
ANR	3537639	MemberAccess	op -> operands [ 0 ] . regs		3537580	0					
ANR	3537640	ArrayIndexing	op -> operands [ 0 ]		3537580	0					
ANR	3537641	PtrMemberAccess	op -> operands		3537580	0					
ANR	3537642	Identifier	op		3537580	0					
ANR	3537643	Identifier	operands		3537580	1					
ANR	3537644	PrimaryExpression	0		3537580	1					
ANR	3537645	Identifier	regs		3537580	1					
ANR	3537646	PrimaryExpression	0		3537580	1					
ANR	3537647	ElseStatement	else		3537580	0					
ANR	3537648	IfStatement	if ( op -> operands [ 0 ] . type & OT_QWORD )		3537580	0					
ANR	3537649	Condition	op -> operands [ 0 ] . type & OT_QWORD	3387:15:85743:85773	3537580	0	True				
ANR	3537650	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		3537580	0		&			
ANR	3537651	MemberAccess	op -> operands [ 0 ] . type		3537580	0					
ANR	3537652	ArrayIndexing	op -> operands [ 0 ]		3537580	0					
ANR	3537653	PtrMemberAccess	op -> operands		3537580	0					
ANR	3537654	Identifier	op		3537580	0					
ANR	3537655	Identifier	operands		3537580	1					
ANR	3537656	PrimaryExpression	0		3537580	1					
ANR	3537657	Identifier	type		3537580	1					
ANR	3537658	Identifier	OT_QWORD		3537580	1					
ANR	3537659	CompoundStatement		9:49:260:260	3537580	1					
ANR	3537660	ExpressionStatement	data [ l ++ ] = 0xdc	3388:4:85783:85799	3537580	0	True				
ANR	3537661	AssignmentExpression	data [ l ++ ] = 0xdc		3537580	0		=			
ANR	3537662	ArrayIndexing	data [ l ++ ]		3537580	0					
ANR	3537663	Identifier	data		3537580	0					
ANR	3537664	PostIncDecOperationExpression	l ++		3537580	1					
ANR	3537665	Identifier	l		3537580	0					
ANR	3537666	IncDec	++		3537580	1					
ANR	3537667	PrimaryExpression	0xdc		3537580	1					
ANR	3537668	ExpressionStatement	data [ l ++ ] = 0x08 | op -> operands [ 0 ] . regs [ 0 ]	3389:4:85805:85847	3537580	1	True				
ANR	3537669	AssignmentExpression	data [ l ++ ] = 0x08 | op -> operands [ 0 ] . regs [ 0 ]		3537580	0		=			
ANR	3537670	ArrayIndexing	data [ l ++ ]		3537580	0					
ANR	3537671	Identifier	data		3537580	0					
ANR	3537672	PostIncDecOperationExpression	l ++		3537580	1					
ANR	3537673	Identifier	l		3537580	0					
ANR	3537674	IncDec	++		3537580	1					
ANR	3537675	InclusiveOrExpression	0x08 | op -> operands [ 0 ] . regs [ 0 ]		3537580	1		|			
ANR	3537676	PrimaryExpression	0x08		3537580	0					
ANR	3537677	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3537580	1					
ANR	3537678	MemberAccess	op -> operands [ 0 ] . regs		3537580	0					
ANR	3537679	ArrayIndexing	op -> operands [ 0 ]		3537580	0					
ANR	3537680	PtrMemberAccess	op -> operands		3537580	0					
ANR	3537681	Identifier	op		3537580	0					
ANR	3537682	Identifier	operands		3537580	1					
ANR	3537683	PrimaryExpression	0		3537580	1					
ANR	3537684	Identifier	regs		3537580	1					
ANR	3537685	PrimaryExpression	0		3537580	1					
ANR	3537686	ElseStatement	else		3537580	0					
ANR	3537687	CompoundStatement		12:10:342:342	3537580	0					
ANR	3537688	ReturnStatement	return - 1 ;	3391:4:85865:85874	3537580	0	True				
ANR	3537689	UnaryOperationExpression	- 1		3537580	0					
ANR	3537690	UnaryOperator	-		3537580	0					
ANR	3537691	PrimaryExpression	1		3537580	1					
ANR	3537692	ElseStatement	else		3537580	0					
ANR	3537693	CompoundStatement		15:9:373:373	3537580	0					
ANR	3537694	ReturnStatement	return - 1 ;	3394:3:85895:85904	3537580	0	True				
ANR	3537695	UnaryOperationExpression	- 1		3537580	0					
ANR	3537696	UnaryOperator	-		3537580	0					
ANR	3537697	PrimaryExpression	1		3537580	1					
ANR	3537698	BreakStatement	break ;	3396:2:85912:85917	3537580	2	True				
ANR	3537699	Label	case 2 :	3397:1:85920:85926	3537580	3	True				
ANR	3537700	IfStatement	if ( op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL )		3537580	4					
ANR	3537701	Condition	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL	3398:7:85935:86063	3537580	0	True				
ANR	3537702	AndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		3537580	0		&&			
ANR	3537703	BitAndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL		3537580	0		&			
ANR	3537704	MemberAccess	op -> operands [ 0 ] . type		3537580	0					
ANR	3537705	ArrayIndexing	op -> operands [ 0 ]		3537580	0					
ANR	3537706	PtrMemberAccess	op -> operands		3537580	0					
ANR	3537707	Identifier	op		3537580	0					
ANR	3537708	Identifier	operands		3537580	1					
ANR	3537709	PrimaryExpression	0		3537580	1					
ANR	3537710	Identifier	type		3537580	1					
ANR	3537711	BitAndExpression	OT_FPUREG & ~OT_REGALL		3537580	1		&			
ANR	3537712	Identifier	OT_FPUREG		3537580	0					
ANR	3537713	Identifier	~OT_REGALL		3537580	1					
ANR	3537714	AndExpression	op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		3537580	1		&&			
ANR	3537715	EqualityExpression	op -> operands [ 0 ] . reg == 0		3537580	0		==			
ANR	3537716	MemberAccess	op -> operands [ 0 ] . reg		3537580	0					
ANR	3537717	ArrayIndexing	op -> operands [ 0 ]		3537580	0					
ANR	3537718	PtrMemberAccess	op -> operands		3537580	0					
ANR	3537719	Identifier	op		3537580	0					
ANR	3537720	Identifier	operands		3537580	1					
ANR	3537721	PrimaryExpression	0		3537580	1					
ANR	3537722	Identifier	reg		3537580	1					
ANR	3537723	PrimaryExpression	0		3537580	1					
ANR	3537724	BitAndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		3537580	1		&			
ANR	3537725	MemberAccess	op -> operands [ 1 ] . type		3537580	0					
ANR	3537726	ArrayIndexing	op -> operands [ 1 ]		3537580	0					
ANR	3537727	PtrMemberAccess	op -> operands		3537580	0					
ANR	3537728	Identifier	op		3537580	0					
ANR	3537729	Identifier	operands		3537580	1					
ANR	3537730	PrimaryExpression	1		3537580	1					
ANR	3537731	Identifier	type		3537580	1					
ANR	3537732	BitAndExpression	OT_FPUREG & ~OT_REGALL		3537580	1		&			
ANR	3537733	Identifier	OT_FPUREG		3537580	0					
ANR	3537734	Identifier	~OT_REGALL		3537580	1					
ANR	3537735	CompoundStatement		21:55:550:550	3537580	1					
ANR	3537736	ExpressionStatement	data [ l ++ ] = 0xd8	3400:3:86072:86088	3537580	0	True				
ANR	3537737	AssignmentExpression	data [ l ++ ] = 0xd8		3537580	0		=			
ANR	3537738	ArrayIndexing	data [ l ++ ]		3537580	0					
ANR	3537739	Identifier	data		3537580	0					
ANR	3537740	PostIncDecOperationExpression	l ++		3537580	1					
ANR	3537741	Identifier	l		3537580	0					
ANR	3537742	IncDec	++		3537580	1					
ANR	3537743	PrimaryExpression	0xd8		3537580	1					
ANR	3537744	ExpressionStatement	data [ l ++ ] = 0xc8 | op -> operands [ 1 ] . reg	3401:3:86093:86131	3537580	1	True				
ANR	3537745	AssignmentExpression	data [ l ++ ] = 0xc8 | op -> operands [ 1 ] . reg		3537580	0		=			
ANR	3537746	ArrayIndexing	data [ l ++ ]		3537580	0					
ANR	3537747	Identifier	data		3537580	0					
ANR	3537748	PostIncDecOperationExpression	l ++		3537580	1					
ANR	3537749	Identifier	l		3537580	0					
ANR	3537750	IncDec	++		3537580	1					
ANR	3537751	InclusiveOrExpression	0xc8 | op -> operands [ 1 ] . reg		3537580	1		|			
ANR	3537752	PrimaryExpression	0xc8		3537580	0					
ANR	3537753	MemberAccess	op -> operands [ 1 ] . reg		3537580	1					
ANR	3537754	ArrayIndexing	op -> operands [ 1 ]		3537580	0					
ANR	3537755	PtrMemberAccess	op -> operands		3537580	0					
ANR	3537756	Identifier	op		3537580	0					
ANR	3537757	Identifier	operands		3537580	1					
ANR	3537758	PrimaryExpression	1		3537580	1					
ANR	3537759	Identifier	reg		3537580	1					
ANR	3537760	ElseStatement	else		3537580	0					
ANR	3537761	IfStatement	if ( op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0 )		3537580	0					
ANR	3537762	Condition	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0	3402:14:86147:86275	3537580	0	True				
ANR	3537763	AndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		3537580	0		&&			
ANR	3537764	BitAndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL		3537580	0		&			
ANR	3537765	MemberAccess	op -> operands [ 0 ] . type		3537580	0					
ANR	3537766	ArrayIndexing	op -> operands [ 0 ]		3537580	0					
ANR	3537767	PtrMemberAccess	op -> operands		3537580	0					
ANR	3537768	Identifier	op		3537580	0					
ANR	3537769	Identifier	operands		3537580	1					
ANR	3537770	PrimaryExpression	0		3537580	1					
ANR	3537771	Identifier	type		3537580	1					
ANR	3537772	BitAndExpression	OT_FPUREG & ~OT_REGALL		3537580	1		&			
ANR	3537773	Identifier	OT_FPUREG		3537580	0					
ANR	3537774	Identifier	~OT_REGALL		3537580	1					
ANR	3537775	AndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		3537580	1		&&			
ANR	3537776	BitAndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		3537580	0		&			
ANR	3537777	MemberAccess	op -> operands [ 1 ] . type		3537580	0					
ANR	3537778	ArrayIndexing	op -> operands [ 1 ]		3537580	0					
ANR	3537779	PtrMemberAccess	op -> operands		3537580	0					
ANR	3537780	Identifier	op		3537580	0					
ANR	3537781	Identifier	operands		3537580	1					
ANR	3537782	PrimaryExpression	1		3537580	1					
ANR	3537783	Identifier	type		3537580	1					
ANR	3537784	BitAndExpression	OT_FPUREG & ~OT_REGALL		3537580	1		&			
ANR	3537785	Identifier	OT_FPUREG		3537580	0					
ANR	3537786	Identifier	~OT_REGALL		3537580	1					
ANR	3537787	EqualityExpression	op -> operands [ 1 ] . reg == 0		3537580	1		==			
ANR	3537788	MemberAccess	op -> operands [ 1 ] . reg		3537580	0					
ANR	3537789	ArrayIndexing	op -> operands [ 1 ]		3537580	0					
ANR	3537790	PtrMemberAccess	op -> operands		3537580	0					
ANR	3537791	Identifier	op		3537580	0					
ANR	3537792	Identifier	operands		3537580	1					
ANR	3537793	PrimaryExpression	1		3537580	1					
ANR	3537794	Identifier	reg		3537580	1					
ANR	3537795	PrimaryExpression	0		3537580	1					
ANR	3537796	CompoundStatement		25:83:762:762	3537580	1					
ANR	3537797	ExpressionStatement	data [ l ++ ] = 0xdc	3404:3:86284:86300	3537580	0	True				
ANR	3537798	AssignmentExpression	data [ l ++ ] = 0xdc		3537580	0		=			
ANR	3537799	ArrayIndexing	data [ l ++ ]		3537580	0					
ANR	3537800	Identifier	data		3537580	0					
ANR	3537801	PostIncDecOperationExpression	l ++		3537580	1					
ANR	3537802	Identifier	l		3537580	0					
ANR	3537803	IncDec	++		3537580	1					
ANR	3537804	PrimaryExpression	0xdc		3537580	1					
ANR	3537805	ExpressionStatement	data [ l ++ ] = 0xc8 | op -> operands [ 0 ] . reg	3405:3:86305:86343	3537580	1	True				
ANR	3537806	AssignmentExpression	data [ l ++ ] = 0xc8 | op -> operands [ 0 ] . reg		3537580	0		=			
ANR	3537807	ArrayIndexing	data [ l ++ ]		3537580	0					
ANR	3537808	Identifier	data		3537580	0					
ANR	3537809	PostIncDecOperationExpression	l ++		3537580	1					
ANR	3537810	Identifier	l		3537580	0					
ANR	3537811	IncDec	++		3537580	1					
ANR	3537812	InclusiveOrExpression	0xc8 | op -> operands [ 0 ] . reg		3537580	1		|			
ANR	3537813	PrimaryExpression	0xc8		3537580	0					
ANR	3537814	MemberAccess	op -> operands [ 0 ] . reg		3537580	1					
ANR	3537815	ArrayIndexing	op -> operands [ 0 ]		3537580	0					
ANR	3537816	PtrMemberAccess	op -> operands		3537580	0					
ANR	3537817	Identifier	op		3537580	0					
ANR	3537818	Identifier	operands		3537580	1					
ANR	3537819	PrimaryExpression	0		3537580	1					
ANR	3537820	Identifier	reg		3537580	1					
ANR	3537821	ElseStatement	else		3537580	0					
ANR	3537822	CompoundStatement		28:9:837:837	3537580	0					
ANR	3537823	ReturnStatement	return - 1 ;	3407:3:86359:86368	3537580	0	True				
ANR	3537824	UnaryOperationExpression	- 1		3537580	0					
ANR	3537825	UnaryOperator	-		3537580	0					
ANR	3537826	PrimaryExpression	1		3537580	1					
ANR	3537827	BreakStatement	break ;	3409:2:86376:86381	3537580	5	True				
ANR	3537828	Label	default :	3410:1:86384:86391	3537580	6	True				
ANR	3537829	Identifier	default		3537580	0					
ANR	3537830	ReturnStatement	return - 1 ;	3411:2:86395:86404	3537580	7	True				
ANR	3537831	UnaryOperationExpression	- 1		3537580	0					
ANR	3537832	UnaryOperator	-		3537580	0					
ANR	3537833	PrimaryExpression	1		3537580	1					
ANR	3537834	ReturnStatement	return l ;	3413:1:86410:86418	3537580	2	True				
ANR	3537835	Identifier	l		3537580	0					
ANR	3537836	ReturnType	static int		3537580	1					
ANR	3537837	Identifier	opfmul		3537580	2					
ANR	3537838	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3537580	3					
ANR	3537839	Parameter	RAsm * a	3379:18:85478:85484	3537580	0	True				
ANR	3537840	ParameterType	RAsm *		3537580	0					
ANR	3537841	Identifier	a		3537580	1					
ANR	3537842	Parameter	ut8 * data	3379:27:85487:85495	3537580	1	True				
ANR	3537843	ParameterType	ut8 *		3537580	0					
ANR	3537844	Identifier	data		3537580	1					
ANR	3537845	Parameter	const Opcode * op	3379:38:85498:85513	3537580	2	True				
ANR	3537846	ParameterType	const Opcode *		3537580	0					
ANR	3537847	Identifier	op		3537580	1					
ANR	3537848	CFGEntryNode	ENTRY		3537580		True				
ANR	3537849	CFGExitNode	EXIT		3537580		True				
ANR	3537850	Symbol	a		3537580						
ANR	3537851	Symbol	op		3537580						
ANR	3537852	Symbol	OT_QWORD		3537580						
ANR	3537853	Symbol	data		3537580						
ANR	3537854	Symbol	* op		3537580						
ANR	3537855	Symbol	op -> operands [ 1 ] . reg		3537580						
ANR	3537856	Symbol	* * op -> operands		3537580						
ANR	3537857	Symbol	l		3537580						
ANR	3537858	Symbol	* * op		3537580						
ANR	3537859	Symbol	OT_FPUREG		3537580						
ANR	3537860	Symbol	* op -> operands		3537580						
ANR	3537861	Symbol	op -> operands [ 1 ] . type		3537580						
ANR	3537862	Symbol	op -> operands_count		3537580						
ANR	3537863	Symbol	* op -> operands [ 0 ] . regs		3537580						
ANR	3537864	Symbol	op -> operands [ 0 ] . type		3537580						
ANR	3537865	Symbol	~OT_REGALL		3537580						
ANR	3537866	Symbol	* * * op		3537580						
ANR	3537867	Symbol	op -> operands [ 0 ] . reg		3537580						
ANR	3537868	Symbol	op -> operands		3537580						
ANR	3537869	Symbol	OT_MEMORY		3537580						
ANR	3537870	Symbol	* data		3537580						
ANR	3537871	Symbol	op -> operands [ 0 ] . regs		3537580						
ANR	3537872	Symbol	OT_DWORD		3537580						
ANR	3537873	Function	opfmulp	3416:0:86423:86872							
ANR	3537874	FunctionDef	"opfmulp (RAsm * a , ut8 * data , const Opcode * op)"		3537873	0					
ANR	3537875	CompoundStatement		3416:57:86480:86872	3537873	0					
ANR	3537876	IdentifierDeclStatement	int l = 0 ;	3417:1:86483:86492	3537873	0	True				
ANR	3537877	IdentifierDecl	l = 0		3537873	0					
ANR	3537878	IdentifierDeclType	int		3537873	0					
ANR	3537879	Identifier	l		3537873	1					
ANR	3537880	AssignmentExpression	l = 0		3537873	2		=			
ANR	3537881	Identifier	l		3537873	0					
ANR	3537882	PrimaryExpression	0		3537873	1					
ANR	3537883	SwitchStatement	switch ( op -> operands_count )		3537873	1					
ANR	3537884	Condition	op -> operands_count	3418:9:86503:86520	3537873	0	True				
ANR	3537885	PtrMemberAccess	op -> operands_count		3537873	0					
ANR	3537886	Identifier	op		3537873	0					
ANR	3537887	Identifier	operands_count		3537873	1					
ANR	3537888	CompoundStatement		3:29:42:42	3537873	1					
ANR	3537889	Label	case 0 :	3419:1:86526:86532	3537873	0	True				
ANR	3537890	ExpressionStatement	data [ l ++ ] = 0xde	3420:2:86536:86552	3537873	1	True				
ANR	3537891	AssignmentExpression	data [ l ++ ] = 0xde		3537873	0		=			
ANR	3537892	ArrayIndexing	data [ l ++ ]		3537873	0					
ANR	3537893	Identifier	data		3537873	0					
ANR	3537894	PostIncDecOperationExpression	l ++		3537873	1					
ANR	3537895	Identifier	l		3537873	0					
ANR	3537896	IncDec	++		3537873	1					
ANR	3537897	PrimaryExpression	0xde		3537873	1					
ANR	3537898	ExpressionStatement	data [ l ++ ] = 0xc9	3421:2:86556:86572	3537873	2	True				
ANR	3537899	AssignmentExpression	data [ l ++ ] = 0xc9		3537873	0		=			
ANR	3537900	ArrayIndexing	data [ l ++ ]		3537873	0					
ANR	3537901	Identifier	data		3537873	0					
ANR	3537902	PostIncDecOperationExpression	l ++		3537873	1					
ANR	3537903	Identifier	l		3537873	0					
ANR	3537904	IncDec	++		3537873	1					
ANR	3537905	PrimaryExpression	0xc9		3537873	1					
ANR	3537906	BreakStatement	break ;	3422:2:86576:86581	3537873	3	True				
ANR	3537907	Label	case 2 :	3423:1:86584:86590	3537873	4	True				
ANR	3537908	IfStatement	if ( op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0 )		3537873	5					
ANR	3537909	Condition	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0	3424:7:86599:86727	3537873	0	True				
ANR	3537910	AndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		3537873	0		&&			
ANR	3537911	BitAndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL		3537873	0		&			
ANR	3537912	MemberAccess	op -> operands [ 0 ] . type		3537873	0					
ANR	3537913	ArrayIndexing	op -> operands [ 0 ]		3537873	0					
ANR	3537914	PtrMemberAccess	op -> operands		3537873	0					
ANR	3537915	Identifier	op		3537873	0					
ANR	3537916	Identifier	operands		3537873	1					
ANR	3537917	PrimaryExpression	0		3537873	1					
ANR	3537918	Identifier	type		3537873	1					
ANR	3537919	BitAndExpression	OT_FPUREG & ~OT_REGALL		3537873	1		&			
ANR	3537920	Identifier	OT_FPUREG		3537873	0					
ANR	3537921	Identifier	~OT_REGALL		3537873	1					
ANR	3537922	AndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		3537873	1		&&			
ANR	3537923	BitAndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		3537873	0		&			
ANR	3537924	MemberAccess	op -> operands [ 1 ] . type		3537873	0					
ANR	3537925	ArrayIndexing	op -> operands [ 1 ]		3537873	0					
ANR	3537926	PtrMemberAccess	op -> operands		3537873	0					
ANR	3537927	Identifier	op		3537873	0					
ANR	3537928	Identifier	operands		3537873	1					
ANR	3537929	PrimaryExpression	1		3537873	1					
ANR	3537930	Identifier	type		3537873	1					
ANR	3537931	BitAndExpression	OT_FPUREG & ~OT_REGALL		3537873	1		&			
ANR	3537932	Identifier	OT_FPUREG		3537873	0					
ANR	3537933	Identifier	~OT_REGALL		3537873	1					
ANR	3537934	EqualityExpression	op -> operands [ 1 ] . reg == 0		3537873	1		==			
ANR	3537935	MemberAccess	op -> operands [ 1 ] . reg		3537873	0					
ANR	3537936	ArrayIndexing	op -> operands [ 1 ]		3537873	0					
ANR	3537937	PtrMemberAccess	op -> operands		3537873	0					
ANR	3537938	Identifier	op		3537873	0					
ANR	3537939	Identifier	operands		3537873	1					
ANR	3537940	PrimaryExpression	1		3537873	1					
ANR	3537941	Identifier	reg		3537873	1					
ANR	3537942	PrimaryExpression	0		3537873	1					
ANR	3537943	CompoundStatement		10:83:250:250	3537873	1					
ANR	3537944	ExpressionStatement	data [ l ++ ] = 0xde	3426:3:86736:86752	3537873	0	True				
ANR	3537945	AssignmentExpression	data [ l ++ ] = 0xde		3537873	0		=			
ANR	3537946	ArrayIndexing	data [ l ++ ]		3537873	0					
ANR	3537947	Identifier	data		3537873	0					
ANR	3537948	PostIncDecOperationExpression	l ++		3537873	1					
ANR	3537949	Identifier	l		3537873	0					
ANR	3537950	IncDec	++		3537873	1					
ANR	3537951	PrimaryExpression	0xde		3537873	1					
ANR	3537952	ExpressionStatement	data [ l ++ ] = 0xc8 | op -> operands [ 0 ] . reg	3427:3:86757:86795	3537873	1	True				
ANR	3537953	AssignmentExpression	data [ l ++ ] = 0xc8 | op -> operands [ 0 ] . reg		3537873	0		=			
ANR	3537954	ArrayIndexing	data [ l ++ ]		3537873	0					
ANR	3537955	Identifier	data		3537873	0					
ANR	3537956	PostIncDecOperationExpression	l ++		3537873	1					
ANR	3537957	Identifier	l		3537873	0					
ANR	3537958	IncDec	++		3537873	1					
ANR	3537959	InclusiveOrExpression	0xc8 | op -> operands [ 0 ] . reg		3537873	1		|			
ANR	3537960	PrimaryExpression	0xc8		3537873	0					
ANR	3537961	MemberAccess	op -> operands [ 0 ] . reg		3537873	1					
ANR	3537962	ArrayIndexing	op -> operands [ 0 ]		3537873	0					
ANR	3537963	PtrMemberAccess	op -> operands		3537873	0					
ANR	3537964	Identifier	op		3537873	0					
ANR	3537965	Identifier	operands		3537873	1					
ANR	3537966	PrimaryExpression	0		3537873	1					
ANR	3537967	Identifier	reg		3537873	1					
ANR	3537968	ElseStatement	else		3537873	0					
ANR	3537969	CompoundStatement		13:9:325:325	3537873	0					
ANR	3537970	ReturnStatement	return - 1 ;	3429:3:86811:86820	3537873	0	True				
ANR	3537971	UnaryOperationExpression	- 1		3537873	0					
ANR	3537972	UnaryOperator	-		3537873	0					
ANR	3537973	PrimaryExpression	1		3537873	1					
ANR	3537974	BreakStatement	break ;	3431:2:86828:86833	3537873	6	True				
ANR	3537975	Label	default :	3432:1:86836:86843	3537873	7	True				
ANR	3537976	Identifier	default		3537873	0					
ANR	3537977	ReturnStatement	return - 1 ;	3433:2:86847:86856	3537873	8	True				
ANR	3537978	UnaryOperationExpression	- 1		3537873	0					
ANR	3537979	UnaryOperator	-		3537873	0					
ANR	3537980	PrimaryExpression	1		3537873	1					
ANR	3537981	ReturnStatement	return l ;	3435:1:86862:86870	3537873	2	True				
ANR	3537982	Identifier	l		3537873	0					
ANR	3537983	ReturnType	static int		3537873	1					
ANR	3537984	Identifier	opfmulp		3537873	2					
ANR	3537985	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3537873	3					
ANR	3537986	Parameter	RAsm * a	3416:19:86442:86448	3537873	0	True				
ANR	3537987	ParameterType	RAsm *		3537873	0					
ANR	3537988	Identifier	a		3537873	1					
ANR	3537989	Parameter	ut8 * data	3416:28:86451:86459	3537873	1	True				
ANR	3537990	ParameterType	ut8 *		3537873	0					
ANR	3537991	Identifier	data		3537873	1					
ANR	3537992	Parameter	const Opcode * op	3416:39:86462:86477	3537873	2	True				
ANR	3537993	ParameterType	const Opcode *		3537873	0					
ANR	3537994	Identifier	op		3537873	1					
ANR	3537995	CFGEntryNode	ENTRY		3537873		True				
ANR	3537996	CFGExitNode	EXIT		3537873		True				
ANR	3537997	Symbol	a		3537873						
ANR	3537998	Symbol	op		3537873						
ANR	3537999	Symbol	data		3537873						
ANR	3538000	Symbol	* op		3537873						
ANR	3538001	Symbol	op -> operands [ 1 ] . reg		3537873						
ANR	3538002	Symbol	l		3537873						
ANR	3538003	Symbol	* * op		3537873						
ANR	3538004	Symbol	OT_FPUREG		3537873						
ANR	3538005	Symbol	* op -> operands		3537873						
ANR	3538006	Symbol	op -> operands [ 1 ] . type		3537873						
ANR	3538007	Symbol	op -> operands_count		3537873						
ANR	3538008	Symbol	op -> operands [ 0 ] . type		3537873						
ANR	3538009	Symbol	~OT_REGALL		3537873						
ANR	3538010	Symbol	op -> operands [ 0 ] . reg		3537873						
ANR	3538011	Symbol	op -> operands		3537873						
ANR	3538012	Symbol	* data		3537873						
ANR	3538013	Function	opfimul	3438:0:86875:87371							
ANR	3538014	FunctionDef	"opfimul (RAsm * a , ut8 * data , const Opcode * op)"		3538013	0					
ANR	3538015	CompoundStatement		3438:57:86932:87371	3538013	0					
ANR	3538016	IdentifierDeclStatement	int l = 0 ;	3439:1:86935:86944	3538013	0	True				
ANR	3538017	IdentifierDecl	l = 0		3538013	0					
ANR	3538018	IdentifierDeclType	int		3538013	0					
ANR	3538019	Identifier	l		3538013	1					
ANR	3538020	AssignmentExpression	l = 0		3538013	2		=			
ANR	3538021	Identifier	l		3538013	0					
ANR	3538022	PrimaryExpression	0		3538013	1					
ANR	3538023	SwitchStatement	switch ( op -> operands_count )		3538013	1					
ANR	3538024	Condition	op -> operands_count	3440:9:86955:86972	3538013	0	True				
ANR	3538025	PtrMemberAccess	op -> operands_count		3538013	0					
ANR	3538026	Identifier	op		3538013	0					
ANR	3538027	Identifier	operands_count		3538013	1					
ANR	3538028	CompoundStatement		3:29:42:42	3538013	1					
ANR	3538029	Label	case 1 :	3441:1:86978:86984	3538013	0	True				
ANR	3538030	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3538013	1					
ANR	3538031	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3442:7:86993:87024	3538013	0	True				
ANR	3538032	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3538013	0		&			
ANR	3538033	MemberAccess	op -> operands [ 0 ] . type		3538013	0					
ANR	3538034	ArrayIndexing	op -> operands [ 0 ]		3538013	0					
ANR	3538035	PtrMemberAccess	op -> operands		3538013	0					
ANR	3538036	Identifier	op		3538013	0					
ANR	3538037	Identifier	operands		3538013	1					
ANR	3538038	PrimaryExpression	0		3538013	1					
ANR	3538039	Identifier	type		3538013	1					
ANR	3538040	Identifier	OT_MEMORY		3538013	1					
ANR	3538041	CompoundStatement		5:42:95:95	3538013	1					
ANR	3538042	IfStatement	if ( op -> operands [ 0 ] . type & OT_DWORD )		3538013	0					
ANR	3538043	Condition	op -> operands [ 0 ] . type & OT_DWORD	3443:8:87038:87068	3538013	0	True				
ANR	3538044	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		3538013	0		&			
ANR	3538045	MemberAccess	op -> operands [ 0 ] . type		3538013	0					
ANR	3538046	ArrayIndexing	op -> operands [ 0 ]		3538013	0					
ANR	3538047	PtrMemberAccess	op -> operands		3538013	0					
ANR	3538048	Identifier	op		3538013	0					
ANR	3538049	Identifier	operands		3538013	1					
ANR	3538050	PrimaryExpression	0		3538013	1					
ANR	3538051	Identifier	type		3538013	1					
ANR	3538052	Identifier	OT_DWORD		3538013	1					
ANR	3538053	CompoundStatement		6:42:139:139	3538013	1					
ANR	3538054	ExpressionStatement	data [ l ++ ] = 0xda	3444:4:87078:87094	3538013	0	True				
ANR	3538055	AssignmentExpression	data [ l ++ ] = 0xda		3538013	0		=			
ANR	3538056	ArrayIndexing	data [ l ++ ]		3538013	0					
ANR	3538057	Identifier	data		3538013	0					
ANR	3538058	PostIncDecOperationExpression	l ++		3538013	1					
ANR	3538059	Identifier	l		3538013	0					
ANR	3538060	IncDec	++		3538013	1					
ANR	3538061	PrimaryExpression	0xda		3538013	1					
ANR	3538062	ExpressionStatement	data [ l ++ ] = 0x08 | op -> operands [ 0 ] . regs [ 0 ]	3445:4:87100:87142	3538013	1	True				
ANR	3538063	AssignmentExpression	data [ l ++ ] = 0x08 | op -> operands [ 0 ] . regs [ 0 ]		3538013	0		=			
ANR	3538064	ArrayIndexing	data [ l ++ ]		3538013	0					
ANR	3538065	Identifier	data		3538013	0					
ANR	3538066	PostIncDecOperationExpression	l ++		3538013	1					
ANR	3538067	Identifier	l		3538013	0					
ANR	3538068	IncDec	++		3538013	1					
ANR	3538069	InclusiveOrExpression	0x08 | op -> operands [ 0 ] . regs [ 0 ]		3538013	1		|			
ANR	3538070	PrimaryExpression	0x08		3538013	0					
ANR	3538071	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3538013	1					
ANR	3538072	MemberAccess	op -> operands [ 0 ] . regs		3538013	0					
ANR	3538073	ArrayIndexing	op -> operands [ 0 ]		3538013	0					
ANR	3538074	PtrMemberAccess	op -> operands		3538013	0					
ANR	3538075	Identifier	op		3538013	0					
ANR	3538076	Identifier	operands		3538013	1					
ANR	3538077	PrimaryExpression	0		3538013	1					
ANR	3538078	Identifier	regs		3538013	1					
ANR	3538079	PrimaryExpression	0		3538013	1					
ANR	3538080	ElseStatement	else		3538013	0					
ANR	3538081	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		3538013	0					
ANR	3538082	Condition	op -> operands [ 0 ] . type & OT_WORD	3446:15:87159:87188	3538013	0	True				
ANR	3538083	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		3538013	0		&			
ANR	3538084	MemberAccess	op -> operands [ 0 ] . type		3538013	0					
ANR	3538085	ArrayIndexing	op -> operands [ 0 ]		3538013	0					
ANR	3538086	PtrMemberAccess	op -> operands		3538013	0					
ANR	3538087	Identifier	op		3538013	0					
ANR	3538088	Identifier	operands		3538013	1					
ANR	3538089	PrimaryExpression	0		3538013	1					
ANR	3538090	Identifier	type		3538013	1					
ANR	3538091	Identifier	OT_WORD		3538013	1					
ANR	3538092	CompoundStatement		9:48:259:259	3538013	1					
ANR	3538093	ExpressionStatement	data [ l ++ ] = 0xde	3447:4:87198:87214	3538013	0	True				
ANR	3538094	AssignmentExpression	data [ l ++ ] = 0xde		3538013	0		=			
ANR	3538095	ArrayIndexing	data [ l ++ ]		3538013	0					
ANR	3538096	Identifier	data		3538013	0					
ANR	3538097	PostIncDecOperationExpression	l ++		3538013	1					
ANR	3538098	Identifier	l		3538013	0					
ANR	3538099	IncDec	++		3538013	1					
ANR	3538100	PrimaryExpression	0xde		3538013	1					
ANR	3538101	ExpressionStatement	data [ l ++ ] = 0x08 | op -> operands [ 0 ] . regs [ 0 ]	3448:4:87220:87262	3538013	1	True				
ANR	3538102	AssignmentExpression	data [ l ++ ] = 0x08 | op -> operands [ 0 ] . regs [ 0 ]		3538013	0		=			
ANR	3538103	ArrayIndexing	data [ l ++ ]		3538013	0					
ANR	3538104	Identifier	data		3538013	0					
ANR	3538105	PostIncDecOperationExpression	l ++		3538013	1					
ANR	3538106	Identifier	l		3538013	0					
ANR	3538107	IncDec	++		3538013	1					
ANR	3538108	InclusiveOrExpression	0x08 | op -> operands [ 0 ] . regs [ 0 ]		3538013	1		|			
ANR	3538109	PrimaryExpression	0x08		3538013	0					
ANR	3538110	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3538013	1					
ANR	3538111	MemberAccess	op -> operands [ 0 ] . regs		3538013	0					
ANR	3538112	ArrayIndexing	op -> operands [ 0 ]		3538013	0					
ANR	3538113	PtrMemberAccess	op -> operands		3538013	0					
ANR	3538114	Identifier	op		3538013	0					
ANR	3538115	Identifier	operands		3538013	1					
ANR	3538116	PrimaryExpression	0		3538013	1					
ANR	3538117	Identifier	regs		3538013	1					
ANR	3538118	PrimaryExpression	0		3538013	1					
ANR	3538119	ElseStatement	else		3538013	0					
ANR	3538120	CompoundStatement		12:10:341:341	3538013	0					
ANR	3538121	ReturnStatement	return - 1 ;	3450:4:87280:87289	3538013	0	True				
ANR	3538122	UnaryOperationExpression	- 1		3538013	0					
ANR	3538123	UnaryOperator	-		3538013	0					
ANR	3538124	PrimaryExpression	1		3538013	1					
ANR	3538125	ElseStatement	else		3538013	0					
ANR	3538126	CompoundStatement		15:9:372:372	3538013	0					
ANR	3538127	ReturnStatement	return - 1 ;	3453:3:87310:87319	3538013	0	True				
ANR	3538128	UnaryOperationExpression	- 1		3538013	0					
ANR	3538129	UnaryOperator	-		3538013	0					
ANR	3538130	PrimaryExpression	1		3538013	1					
ANR	3538131	BreakStatement	break ;	3455:2:87327:87332	3538013	2	True				
ANR	3538132	Label	default :	3456:1:87335:87342	3538013	3	True				
ANR	3538133	Identifier	default		3538013	0					
ANR	3538134	ReturnStatement	return - 1 ;	3457:2:87346:87355	3538013	4	True				
ANR	3538135	UnaryOperationExpression	- 1		3538013	0					
ANR	3538136	UnaryOperator	-		3538013	0					
ANR	3538137	PrimaryExpression	1		3538013	1					
ANR	3538138	ReturnStatement	return l ;	3459:1:87361:87369	3538013	2	True				
ANR	3538139	Identifier	l		3538013	0					
ANR	3538140	ReturnType	static int		3538013	1					
ANR	3538141	Identifier	opfimul		3538013	2					
ANR	3538142	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3538013	3					
ANR	3538143	Parameter	RAsm * a	3438:19:86894:86900	3538013	0	True				
ANR	3538144	ParameterType	RAsm *		3538013	0					
ANR	3538145	Identifier	a		3538013	1					
ANR	3538146	Parameter	ut8 * data	3438:28:86903:86911	3538013	1	True				
ANR	3538147	ParameterType	ut8 *		3538013	0					
ANR	3538148	Identifier	data		3538013	1					
ANR	3538149	Parameter	const Opcode * op	3438:39:86914:86929	3538013	2	True				
ANR	3538150	ParameterType	const Opcode *		3538013	0					
ANR	3538151	Identifier	op		3538013	1					
ANR	3538152	CFGEntryNode	ENTRY		3538013		True				
ANR	3538153	CFGExitNode	EXIT		3538013		True				
ANR	3538154	Symbol	a		3538013						
ANR	3538155	Symbol	op		3538013						
ANR	3538156	Symbol	OT_WORD		3538013						
ANR	3538157	Symbol	data		3538013						
ANR	3538158	Symbol	* op		3538013						
ANR	3538159	Symbol	* * op -> operands		3538013						
ANR	3538160	Symbol	l		3538013						
ANR	3538161	Symbol	* * op		3538013						
ANR	3538162	Symbol	* op -> operands		3538013						
ANR	3538163	Symbol	op -> operands_count		3538013						
ANR	3538164	Symbol	* op -> operands [ 0 ] . regs		3538013						
ANR	3538165	Symbol	op -> operands [ 0 ] . type		3538013						
ANR	3538166	Symbol	* * * op		3538013						
ANR	3538167	Symbol	op -> operands		3538013						
ANR	3538168	Symbol	OT_MEMORY		3538013						
ANR	3538169	Symbol	* data		3538013						
ANR	3538170	Symbol	op -> operands [ 0 ] . regs		3538013						
ANR	3538171	Symbol	OT_DWORD		3538013						
ANR	3538172	Function	opfsub	3462:0:87374:88334							
ANR	3538173	FunctionDef	"opfsub (RAsm * a , ut8 * data , const Opcode * op)"		3538172	0					
ANR	3538174	CompoundStatement		3462:56:87430:88334	3538172	0					
ANR	3538175	IdentifierDeclStatement	int l = 0 ;	3463:1:87433:87442	3538172	0	True				
ANR	3538176	IdentifierDecl	l = 0		3538172	0					
ANR	3538177	IdentifierDeclType	int		3538172	0					
ANR	3538178	Identifier	l		3538172	1					
ANR	3538179	AssignmentExpression	l = 0		3538172	2		=			
ANR	3538180	Identifier	l		3538172	0					
ANR	3538181	PrimaryExpression	0		3538172	1					
ANR	3538182	SwitchStatement	switch ( op -> operands_count )		3538172	1					
ANR	3538183	Condition	op -> operands_count	3464:9:87453:87470	3538172	0	True				
ANR	3538184	PtrMemberAccess	op -> operands_count		3538172	0					
ANR	3538185	Identifier	op		3538172	0					
ANR	3538186	Identifier	operands_count		3538172	1					
ANR	3538187	CompoundStatement		3:29:42:42	3538172	1					
ANR	3538188	Label	case 1 :	3465:1:87476:87482	3538172	0	True				
ANR	3538189	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3538172	1					
ANR	3538190	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3466:7:87491:87522	3538172	0	True				
ANR	3538191	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3538172	0		&			
ANR	3538192	MemberAccess	op -> operands [ 0 ] . type		3538172	0					
ANR	3538193	ArrayIndexing	op -> operands [ 0 ]		3538172	0					
ANR	3538194	PtrMemberAccess	op -> operands		3538172	0					
ANR	3538195	Identifier	op		3538172	0					
ANR	3538196	Identifier	operands		3538172	1					
ANR	3538197	PrimaryExpression	0		3538172	1					
ANR	3538198	Identifier	type		3538172	1					
ANR	3538199	Identifier	OT_MEMORY		3538172	1					
ANR	3538200	CompoundStatement		5:42:95:95	3538172	1					
ANR	3538201	IfStatement	if ( op -> operands [ 0 ] . type & OT_DWORD )		3538172	0					
ANR	3538202	Condition	op -> operands [ 0 ] . type & OT_DWORD	3467:8:87536:87566	3538172	0	True				
ANR	3538203	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		3538172	0		&			
ANR	3538204	MemberAccess	op -> operands [ 0 ] . type		3538172	0					
ANR	3538205	ArrayIndexing	op -> operands [ 0 ]		3538172	0					
ANR	3538206	PtrMemberAccess	op -> operands		3538172	0					
ANR	3538207	Identifier	op		3538172	0					
ANR	3538208	Identifier	operands		3538172	1					
ANR	3538209	PrimaryExpression	0		3538172	1					
ANR	3538210	Identifier	type		3538172	1					
ANR	3538211	Identifier	OT_DWORD		3538172	1					
ANR	3538212	CompoundStatement		6:42:139:139	3538172	1					
ANR	3538213	ExpressionStatement	data [ l ++ ] = 0xd8	3468:4:87576:87592	3538172	0	True				
ANR	3538214	AssignmentExpression	data [ l ++ ] = 0xd8		3538172	0		=			
ANR	3538215	ArrayIndexing	data [ l ++ ]		3538172	0					
ANR	3538216	Identifier	data		3538172	0					
ANR	3538217	PostIncDecOperationExpression	l ++		3538172	1					
ANR	3538218	Identifier	l		3538172	0					
ANR	3538219	IncDec	++		3538172	1					
ANR	3538220	PrimaryExpression	0xd8		3538172	1					
ANR	3538221	ExpressionStatement	data [ l ++ ] = 0x20 | op -> operands [ 0 ] . regs [ 0 ]	3469:4:87598:87640	3538172	1	True				
ANR	3538222	AssignmentExpression	data [ l ++ ] = 0x20 | op -> operands [ 0 ] . regs [ 0 ]		3538172	0		=			
ANR	3538223	ArrayIndexing	data [ l ++ ]		3538172	0					
ANR	3538224	Identifier	data		3538172	0					
ANR	3538225	PostIncDecOperationExpression	l ++		3538172	1					
ANR	3538226	Identifier	l		3538172	0					
ANR	3538227	IncDec	++		3538172	1					
ANR	3538228	InclusiveOrExpression	0x20 | op -> operands [ 0 ] . regs [ 0 ]		3538172	1		|			
ANR	3538229	PrimaryExpression	0x20		3538172	0					
ANR	3538230	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3538172	1					
ANR	3538231	MemberAccess	op -> operands [ 0 ] . regs		3538172	0					
ANR	3538232	ArrayIndexing	op -> operands [ 0 ]		3538172	0					
ANR	3538233	PtrMemberAccess	op -> operands		3538172	0					
ANR	3538234	Identifier	op		3538172	0					
ANR	3538235	Identifier	operands		3538172	1					
ANR	3538236	PrimaryExpression	0		3538172	1					
ANR	3538237	Identifier	regs		3538172	1					
ANR	3538238	PrimaryExpression	0		3538172	1					
ANR	3538239	ElseStatement	else		3538172	0					
ANR	3538240	IfStatement	if ( op -> operands [ 0 ] . type & OT_QWORD )		3538172	0					
ANR	3538241	Condition	op -> operands [ 0 ] . type & OT_QWORD	3470:15:87657:87687	3538172	0	True				
ANR	3538242	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		3538172	0		&			
ANR	3538243	MemberAccess	op -> operands [ 0 ] . type		3538172	0					
ANR	3538244	ArrayIndexing	op -> operands [ 0 ]		3538172	0					
ANR	3538245	PtrMemberAccess	op -> operands		3538172	0					
ANR	3538246	Identifier	op		3538172	0					
ANR	3538247	Identifier	operands		3538172	1					
ANR	3538248	PrimaryExpression	0		3538172	1					
ANR	3538249	Identifier	type		3538172	1					
ANR	3538250	Identifier	OT_QWORD		3538172	1					
ANR	3538251	CompoundStatement		9:49:260:260	3538172	1					
ANR	3538252	ExpressionStatement	data [ l ++ ] = 0xdc	3471:4:87697:87713	3538172	0	True				
ANR	3538253	AssignmentExpression	data [ l ++ ] = 0xdc		3538172	0		=			
ANR	3538254	ArrayIndexing	data [ l ++ ]		3538172	0					
ANR	3538255	Identifier	data		3538172	0					
ANR	3538256	PostIncDecOperationExpression	l ++		3538172	1					
ANR	3538257	Identifier	l		3538172	0					
ANR	3538258	IncDec	++		3538172	1					
ANR	3538259	PrimaryExpression	0xdc		3538172	1					
ANR	3538260	ExpressionStatement	data [ l ++ ] = 0x20 | op -> operands [ 0 ] . regs [ 0 ]	3472:4:87719:87761	3538172	1	True				
ANR	3538261	AssignmentExpression	data [ l ++ ] = 0x20 | op -> operands [ 0 ] . regs [ 0 ]		3538172	0		=			
ANR	3538262	ArrayIndexing	data [ l ++ ]		3538172	0					
ANR	3538263	Identifier	data		3538172	0					
ANR	3538264	PostIncDecOperationExpression	l ++		3538172	1					
ANR	3538265	Identifier	l		3538172	0					
ANR	3538266	IncDec	++		3538172	1					
ANR	3538267	InclusiveOrExpression	0x20 | op -> operands [ 0 ] . regs [ 0 ]		3538172	1		|			
ANR	3538268	PrimaryExpression	0x20		3538172	0					
ANR	3538269	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3538172	1					
ANR	3538270	MemberAccess	op -> operands [ 0 ] . regs		3538172	0					
ANR	3538271	ArrayIndexing	op -> operands [ 0 ]		3538172	0					
ANR	3538272	PtrMemberAccess	op -> operands		3538172	0					
ANR	3538273	Identifier	op		3538172	0					
ANR	3538274	Identifier	operands		3538172	1					
ANR	3538275	PrimaryExpression	0		3538172	1					
ANR	3538276	Identifier	regs		3538172	1					
ANR	3538277	PrimaryExpression	0		3538172	1					
ANR	3538278	ElseStatement	else		3538172	0					
ANR	3538279	CompoundStatement		12:10:342:342	3538172	0					
ANR	3538280	ReturnStatement	return - 1 ;	3474:4:87779:87788	3538172	0	True				
ANR	3538281	UnaryOperationExpression	- 1		3538172	0					
ANR	3538282	UnaryOperator	-		3538172	0					
ANR	3538283	PrimaryExpression	1		3538172	1					
ANR	3538284	ElseStatement	else		3538172	0					
ANR	3538285	CompoundStatement		15:9:373:373	3538172	0					
ANR	3538286	ReturnStatement	return - 1 ;	3477:3:87809:87818	3538172	0	True				
ANR	3538287	UnaryOperationExpression	- 1		3538172	0					
ANR	3538288	UnaryOperator	-		3538172	0					
ANR	3538289	PrimaryExpression	1		3538172	1					
ANR	3538290	BreakStatement	break ;	3479:2:87826:87831	3538172	2	True				
ANR	3538291	Label	case 2 :	3480:1:87834:87840	3538172	3	True				
ANR	3538292	IfStatement	if ( op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL )		3538172	4					
ANR	3538293	Condition	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL	3481:7:87849:87977	3538172	0	True				
ANR	3538294	AndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		3538172	0		&&			
ANR	3538295	BitAndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL		3538172	0		&			
ANR	3538296	MemberAccess	op -> operands [ 0 ] . type		3538172	0					
ANR	3538297	ArrayIndexing	op -> operands [ 0 ]		3538172	0					
ANR	3538298	PtrMemberAccess	op -> operands		3538172	0					
ANR	3538299	Identifier	op		3538172	0					
ANR	3538300	Identifier	operands		3538172	1					
ANR	3538301	PrimaryExpression	0		3538172	1					
ANR	3538302	Identifier	type		3538172	1					
ANR	3538303	BitAndExpression	OT_FPUREG & ~OT_REGALL		3538172	1		&			
ANR	3538304	Identifier	OT_FPUREG		3538172	0					
ANR	3538305	Identifier	~OT_REGALL		3538172	1					
ANR	3538306	AndExpression	op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		3538172	1		&&			
ANR	3538307	EqualityExpression	op -> operands [ 0 ] . reg == 0		3538172	0		==			
ANR	3538308	MemberAccess	op -> operands [ 0 ] . reg		3538172	0					
ANR	3538309	ArrayIndexing	op -> operands [ 0 ]		3538172	0					
ANR	3538310	PtrMemberAccess	op -> operands		3538172	0					
ANR	3538311	Identifier	op		3538172	0					
ANR	3538312	Identifier	operands		3538172	1					
ANR	3538313	PrimaryExpression	0		3538172	1					
ANR	3538314	Identifier	reg		3538172	1					
ANR	3538315	PrimaryExpression	0		3538172	1					
ANR	3538316	BitAndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		3538172	1		&			
ANR	3538317	MemberAccess	op -> operands [ 1 ] . type		3538172	0					
ANR	3538318	ArrayIndexing	op -> operands [ 1 ]		3538172	0					
ANR	3538319	PtrMemberAccess	op -> operands		3538172	0					
ANR	3538320	Identifier	op		3538172	0					
ANR	3538321	Identifier	operands		3538172	1					
ANR	3538322	PrimaryExpression	1		3538172	1					
ANR	3538323	Identifier	type		3538172	1					
ANR	3538324	BitAndExpression	OT_FPUREG & ~OT_REGALL		3538172	1		&			
ANR	3538325	Identifier	OT_FPUREG		3538172	0					
ANR	3538326	Identifier	~OT_REGALL		3538172	1					
ANR	3538327	CompoundStatement		21:55:550:550	3538172	1					
ANR	3538328	ExpressionStatement	data [ l ++ ] = 0xd8	3483:3:87986:88002	3538172	0	True				
ANR	3538329	AssignmentExpression	data [ l ++ ] = 0xd8		3538172	0		=			
ANR	3538330	ArrayIndexing	data [ l ++ ]		3538172	0					
ANR	3538331	Identifier	data		3538172	0					
ANR	3538332	PostIncDecOperationExpression	l ++		3538172	1					
ANR	3538333	Identifier	l		3538172	0					
ANR	3538334	IncDec	++		3538172	1					
ANR	3538335	PrimaryExpression	0xd8		3538172	1					
ANR	3538336	ExpressionStatement	data [ l ++ ] = 0xe0 | op -> operands [ 1 ] . reg	3484:3:88007:88045	3538172	1	True				
ANR	3538337	AssignmentExpression	data [ l ++ ] = 0xe0 | op -> operands [ 1 ] . reg		3538172	0		=			
ANR	3538338	ArrayIndexing	data [ l ++ ]		3538172	0					
ANR	3538339	Identifier	data		3538172	0					
ANR	3538340	PostIncDecOperationExpression	l ++		3538172	1					
ANR	3538341	Identifier	l		3538172	0					
ANR	3538342	IncDec	++		3538172	1					
ANR	3538343	InclusiveOrExpression	0xe0 | op -> operands [ 1 ] . reg		3538172	1		|			
ANR	3538344	PrimaryExpression	0xe0		3538172	0					
ANR	3538345	MemberAccess	op -> operands [ 1 ] . reg		3538172	1					
ANR	3538346	ArrayIndexing	op -> operands [ 1 ]		3538172	0					
ANR	3538347	PtrMemberAccess	op -> operands		3538172	0					
ANR	3538348	Identifier	op		3538172	0					
ANR	3538349	Identifier	operands		3538172	1					
ANR	3538350	PrimaryExpression	1		3538172	1					
ANR	3538351	Identifier	reg		3538172	1					
ANR	3538352	ElseStatement	else		3538172	0					
ANR	3538353	IfStatement	if ( op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0 )		3538172	0					
ANR	3538354	Condition	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0	3485:14:88061:88189	3538172	0	True				
ANR	3538355	AndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		3538172	0		&&			
ANR	3538356	BitAndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL		3538172	0		&			
ANR	3538357	MemberAccess	op -> operands [ 0 ] . type		3538172	0					
ANR	3538358	ArrayIndexing	op -> operands [ 0 ]		3538172	0					
ANR	3538359	PtrMemberAccess	op -> operands		3538172	0					
ANR	3538360	Identifier	op		3538172	0					
ANR	3538361	Identifier	operands		3538172	1					
ANR	3538362	PrimaryExpression	0		3538172	1					
ANR	3538363	Identifier	type		3538172	1					
ANR	3538364	BitAndExpression	OT_FPUREG & ~OT_REGALL		3538172	1		&			
ANR	3538365	Identifier	OT_FPUREG		3538172	0					
ANR	3538366	Identifier	~OT_REGALL		3538172	1					
ANR	3538367	AndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		3538172	1		&&			
ANR	3538368	BitAndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		3538172	0		&			
ANR	3538369	MemberAccess	op -> operands [ 1 ] . type		3538172	0					
ANR	3538370	ArrayIndexing	op -> operands [ 1 ]		3538172	0					
ANR	3538371	PtrMemberAccess	op -> operands		3538172	0					
ANR	3538372	Identifier	op		3538172	0					
ANR	3538373	Identifier	operands		3538172	1					
ANR	3538374	PrimaryExpression	1		3538172	1					
ANR	3538375	Identifier	type		3538172	1					
ANR	3538376	BitAndExpression	OT_FPUREG & ~OT_REGALL		3538172	1		&			
ANR	3538377	Identifier	OT_FPUREG		3538172	0					
ANR	3538378	Identifier	~OT_REGALL		3538172	1					
ANR	3538379	EqualityExpression	op -> operands [ 1 ] . reg == 0		3538172	1		==			
ANR	3538380	MemberAccess	op -> operands [ 1 ] . reg		3538172	0					
ANR	3538381	ArrayIndexing	op -> operands [ 1 ]		3538172	0					
ANR	3538382	PtrMemberAccess	op -> operands		3538172	0					
ANR	3538383	Identifier	op		3538172	0					
ANR	3538384	Identifier	operands		3538172	1					
ANR	3538385	PrimaryExpression	1		3538172	1					
ANR	3538386	Identifier	reg		3538172	1					
ANR	3538387	PrimaryExpression	0		3538172	1					
ANR	3538388	CompoundStatement		25:83:762:762	3538172	1					
ANR	3538389	ExpressionStatement	data [ l ++ ] = 0xdc	3487:3:88198:88214	3538172	0	True				
ANR	3538390	AssignmentExpression	data [ l ++ ] = 0xdc		3538172	0		=			
ANR	3538391	ArrayIndexing	data [ l ++ ]		3538172	0					
ANR	3538392	Identifier	data		3538172	0					
ANR	3538393	PostIncDecOperationExpression	l ++		3538172	1					
ANR	3538394	Identifier	l		3538172	0					
ANR	3538395	IncDec	++		3538172	1					
ANR	3538396	PrimaryExpression	0xdc		3538172	1					
ANR	3538397	ExpressionStatement	data [ l ++ ] = 0xe8 | op -> operands [ 0 ] . reg	3488:3:88219:88257	3538172	1	True				
ANR	3538398	AssignmentExpression	data [ l ++ ] = 0xe8 | op -> operands [ 0 ] . reg		3538172	0		=			
ANR	3538399	ArrayIndexing	data [ l ++ ]		3538172	0					
ANR	3538400	Identifier	data		3538172	0					
ANR	3538401	PostIncDecOperationExpression	l ++		3538172	1					
ANR	3538402	Identifier	l		3538172	0					
ANR	3538403	IncDec	++		3538172	1					
ANR	3538404	InclusiveOrExpression	0xe8 | op -> operands [ 0 ] . reg		3538172	1		|			
ANR	3538405	PrimaryExpression	0xe8		3538172	0					
ANR	3538406	MemberAccess	op -> operands [ 0 ] . reg		3538172	1					
ANR	3538407	ArrayIndexing	op -> operands [ 0 ]		3538172	0					
ANR	3538408	PtrMemberAccess	op -> operands		3538172	0					
ANR	3538409	Identifier	op		3538172	0					
ANR	3538410	Identifier	operands		3538172	1					
ANR	3538411	PrimaryExpression	0		3538172	1					
ANR	3538412	Identifier	reg		3538172	1					
ANR	3538413	ElseStatement	else		3538172	0					
ANR	3538414	CompoundStatement		28:9:837:837	3538172	0					
ANR	3538415	ReturnStatement	return - 1 ;	3490:3:88273:88282	3538172	0	True				
ANR	3538416	UnaryOperationExpression	- 1		3538172	0					
ANR	3538417	UnaryOperator	-		3538172	0					
ANR	3538418	PrimaryExpression	1		3538172	1					
ANR	3538419	BreakStatement	break ;	3492:2:88290:88295	3538172	5	True				
ANR	3538420	Label	default :	3493:1:88298:88305	3538172	6	True				
ANR	3538421	Identifier	default		3538172	0					
ANR	3538422	ReturnStatement	return - 1 ;	3494:2:88309:88318	3538172	7	True				
ANR	3538423	UnaryOperationExpression	- 1		3538172	0					
ANR	3538424	UnaryOperator	-		3538172	0					
ANR	3538425	PrimaryExpression	1		3538172	1					
ANR	3538426	ReturnStatement	return l ;	3496:1:88324:88332	3538172	2	True				
ANR	3538427	Identifier	l		3538172	0					
ANR	3538428	ReturnType	static int		3538172	1					
ANR	3538429	Identifier	opfsub		3538172	2					
ANR	3538430	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3538172	3					
ANR	3538431	Parameter	RAsm * a	3462:18:87392:87398	3538172	0	True				
ANR	3538432	ParameterType	RAsm *		3538172	0					
ANR	3538433	Identifier	a		3538172	1					
ANR	3538434	Parameter	ut8 * data	3462:27:87401:87409	3538172	1	True				
ANR	3538435	ParameterType	ut8 *		3538172	0					
ANR	3538436	Identifier	data		3538172	1					
ANR	3538437	Parameter	const Opcode * op	3462:38:87412:87427	3538172	2	True				
ANR	3538438	ParameterType	const Opcode *		3538172	0					
ANR	3538439	Identifier	op		3538172	1					
ANR	3538440	CFGEntryNode	ENTRY		3538172		True				
ANR	3538441	CFGExitNode	EXIT		3538172		True				
ANR	3538442	Symbol	a		3538172						
ANR	3538443	Symbol	op		3538172						
ANR	3538444	Symbol	OT_QWORD		3538172						
ANR	3538445	Symbol	data		3538172						
ANR	3538446	Symbol	* op		3538172						
ANR	3538447	Symbol	op -> operands [ 1 ] . reg		3538172						
ANR	3538448	Symbol	* * op -> operands		3538172						
ANR	3538449	Symbol	l		3538172						
ANR	3538450	Symbol	* * op		3538172						
ANR	3538451	Symbol	OT_FPUREG		3538172						
ANR	3538452	Symbol	* op -> operands		3538172						
ANR	3538453	Symbol	op -> operands [ 1 ] . type		3538172						
ANR	3538454	Symbol	op -> operands_count		3538172						
ANR	3538455	Symbol	* op -> operands [ 0 ] . regs		3538172						
ANR	3538456	Symbol	op -> operands [ 0 ] . type		3538172						
ANR	3538457	Symbol	~OT_REGALL		3538172						
ANR	3538458	Symbol	* * * op		3538172						
ANR	3538459	Symbol	op -> operands [ 0 ] . reg		3538172						
ANR	3538460	Symbol	op -> operands		3538172						
ANR	3538461	Symbol	OT_MEMORY		3538172						
ANR	3538462	Symbol	* data		3538172						
ANR	3538463	Symbol	op -> operands [ 0 ] . regs		3538172						
ANR	3538464	Symbol	OT_DWORD		3538172						
ANR	3538465	Function	opfsubp	3499:0:88337:88786							
ANR	3538466	FunctionDef	"opfsubp (RAsm * a , ut8 * data , const Opcode * op)"		3538465	0					
ANR	3538467	CompoundStatement		3499:57:88394:88786	3538465	0					
ANR	3538468	IdentifierDeclStatement	int l = 0 ;	3500:1:88397:88406	3538465	0	True				
ANR	3538469	IdentifierDecl	l = 0		3538465	0					
ANR	3538470	IdentifierDeclType	int		3538465	0					
ANR	3538471	Identifier	l		3538465	1					
ANR	3538472	AssignmentExpression	l = 0		3538465	2		=			
ANR	3538473	Identifier	l		3538465	0					
ANR	3538474	PrimaryExpression	0		3538465	1					
ANR	3538475	SwitchStatement	switch ( op -> operands_count )		3538465	1					
ANR	3538476	Condition	op -> operands_count	3501:9:88417:88434	3538465	0	True				
ANR	3538477	PtrMemberAccess	op -> operands_count		3538465	0					
ANR	3538478	Identifier	op		3538465	0					
ANR	3538479	Identifier	operands_count		3538465	1					
ANR	3538480	CompoundStatement		3:29:42:42	3538465	1					
ANR	3538481	Label	case 0 :	3502:1:88440:88446	3538465	0	True				
ANR	3538482	ExpressionStatement	data [ l ++ ] = 0xde	3503:2:88450:88466	3538465	1	True				
ANR	3538483	AssignmentExpression	data [ l ++ ] = 0xde		3538465	0		=			
ANR	3538484	ArrayIndexing	data [ l ++ ]		3538465	0					
ANR	3538485	Identifier	data		3538465	0					
ANR	3538486	PostIncDecOperationExpression	l ++		3538465	1					
ANR	3538487	Identifier	l		3538465	0					
ANR	3538488	IncDec	++		3538465	1					
ANR	3538489	PrimaryExpression	0xde		3538465	1					
ANR	3538490	ExpressionStatement	data [ l ++ ] = 0xe9	3504:2:88470:88486	3538465	2	True				
ANR	3538491	AssignmentExpression	data [ l ++ ] = 0xe9		3538465	0		=			
ANR	3538492	ArrayIndexing	data [ l ++ ]		3538465	0					
ANR	3538493	Identifier	data		3538465	0					
ANR	3538494	PostIncDecOperationExpression	l ++		3538465	1					
ANR	3538495	Identifier	l		3538465	0					
ANR	3538496	IncDec	++		3538465	1					
ANR	3538497	PrimaryExpression	0xe9		3538465	1					
ANR	3538498	BreakStatement	break ;	3505:2:88490:88495	3538465	3	True				
ANR	3538499	Label	case 2 :	3506:1:88498:88504	3538465	4	True				
ANR	3538500	IfStatement	if ( op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0 )		3538465	5					
ANR	3538501	Condition	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0	3507:7:88513:88641	3538465	0	True				
ANR	3538502	AndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		3538465	0		&&			
ANR	3538503	BitAndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL		3538465	0		&			
ANR	3538504	MemberAccess	op -> operands [ 0 ] . type		3538465	0					
ANR	3538505	ArrayIndexing	op -> operands [ 0 ]		3538465	0					
ANR	3538506	PtrMemberAccess	op -> operands		3538465	0					
ANR	3538507	Identifier	op		3538465	0					
ANR	3538508	Identifier	operands		3538465	1					
ANR	3538509	PrimaryExpression	0		3538465	1					
ANR	3538510	Identifier	type		3538465	1					
ANR	3538511	BitAndExpression	OT_FPUREG & ~OT_REGALL		3538465	1		&			
ANR	3538512	Identifier	OT_FPUREG		3538465	0					
ANR	3538513	Identifier	~OT_REGALL		3538465	1					
ANR	3538514	AndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		3538465	1		&&			
ANR	3538515	BitAndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		3538465	0		&			
ANR	3538516	MemberAccess	op -> operands [ 1 ] . type		3538465	0					
ANR	3538517	ArrayIndexing	op -> operands [ 1 ]		3538465	0					
ANR	3538518	PtrMemberAccess	op -> operands		3538465	0					
ANR	3538519	Identifier	op		3538465	0					
ANR	3538520	Identifier	operands		3538465	1					
ANR	3538521	PrimaryExpression	1		3538465	1					
ANR	3538522	Identifier	type		3538465	1					
ANR	3538523	BitAndExpression	OT_FPUREG & ~OT_REGALL		3538465	1		&			
ANR	3538524	Identifier	OT_FPUREG		3538465	0					
ANR	3538525	Identifier	~OT_REGALL		3538465	1					
ANR	3538526	EqualityExpression	op -> operands [ 1 ] . reg == 0		3538465	1		==			
ANR	3538527	MemberAccess	op -> operands [ 1 ] . reg		3538465	0					
ANR	3538528	ArrayIndexing	op -> operands [ 1 ]		3538465	0					
ANR	3538529	PtrMemberAccess	op -> operands		3538465	0					
ANR	3538530	Identifier	op		3538465	0					
ANR	3538531	Identifier	operands		3538465	1					
ANR	3538532	PrimaryExpression	1		3538465	1					
ANR	3538533	Identifier	reg		3538465	1					
ANR	3538534	PrimaryExpression	0		3538465	1					
ANR	3538535	CompoundStatement		10:83:250:250	3538465	1					
ANR	3538536	ExpressionStatement	data [ l ++ ] = 0xde	3509:3:88650:88666	3538465	0	True				
ANR	3538537	AssignmentExpression	data [ l ++ ] = 0xde		3538465	0		=			
ANR	3538538	ArrayIndexing	data [ l ++ ]		3538465	0					
ANR	3538539	Identifier	data		3538465	0					
ANR	3538540	PostIncDecOperationExpression	l ++		3538465	1					
ANR	3538541	Identifier	l		3538465	0					
ANR	3538542	IncDec	++		3538465	1					
ANR	3538543	PrimaryExpression	0xde		3538465	1					
ANR	3538544	ExpressionStatement	data [ l ++ ] = 0xe8 | op -> operands [ 0 ] . reg	3510:3:88671:88709	3538465	1	True				
ANR	3538545	AssignmentExpression	data [ l ++ ] = 0xe8 | op -> operands [ 0 ] . reg		3538465	0		=			
ANR	3538546	ArrayIndexing	data [ l ++ ]		3538465	0					
ANR	3538547	Identifier	data		3538465	0					
ANR	3538548	PostIncDecOperationExpression	l ++		3538465	1					
ANR	3538549	Identifier	l		3538465	0					
ANR	3538550	IncDec	++		3538465	1					
ANR	3538551	InclusiveOrExpression	0xe8 | op -> operands [ 0 ] . reg		3538465	1		|			
ANR	3538552	PrimaryExpression	0xe8		3538465	0					
ANR	3538553	MemberAccess	op -> operands [ 0 ] . reg		3538465	1					
ANR	3538554	ArrayIndexing	op -> operands [ 0 ]		3538465	0					
ANR	3538555	PtrMemberAccess	op -> operands		3538465	0					
ANR	3538556	Identifier	op		3538465	0					
ANR	3538557	Identifier	operands		3538465	1					
ANR	3538558	PrimaryExpression	0		3538465	1					
ANR	3538559	Identifier	reg		3538465	1					
ANR	3538560	ElseStatement	else		3538465	0					
ANR	3538561	CompoundStatement		13:9:325:325	3538465	0					
ANR	3538562	ReturnStatement	return - 1 ;	3512:3:88725:88734	3538465	0	True				
ANR	3538563	UnaryOperationExpression	- 1		3538465	0					
ANR	3538564	UnaryOperator	-		3538465	0					
ANR	3538565	PrimaryExpression	1		3538465	1					
ANR	3538566	BreakStatement	break ;	3514:2:88742:88747	3538465	6	True				
ANR	3538567	Label	default :	3515:1:88750:88757	3538465	7	True				
ANR	3538568	Identifier	default		3538465	0					
ANR	3538569	ReturnStatement	return - 1 ;	3516:2:88761:88770	3538465	8	True				
ANR	3538570	UnaryOperationExpression	- 1		3538465	0					
ANR	3538571	UnaryOperator	-		3538465	0					
ANR	3538572	PrimaryExpression	1		3538465	1					
ANR	3538573	ReturnStatement	return l ;	3518:1:88776:88784	3538465	2	True				
ANR	3538574	Identifier	l		3538465	0					
ANR	3538575	ReturnType	static int		3538465	1					
ANR	3538576	Identifier	opfsubp		3538465	2					
ANR	3538577	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3538465	3					
ANR	3538578	Parameter	RAsm * a	3499:19:88356:88362	3538465	0	True				
ANR	3538579	ParameterType	RAsm *		3538465	0					
ANR	3538580	Identifier	a		3538465	1					
ANR	3538581	Parameter	ut8 * data	3499:28:88365:88373	3538465	1	True				
ANR	3538582	ParameterType	ut8 *		3538465	0					
ANR	3538583	Identifier	data		3538465	1					
ANR	3538584	Parameter	const Opcode * op	3499:39:88376:88391	3538465	2	True				
ANR	3538585	ParameterType	const Opcode *		3538465	0					
ANR	3538586	Identifier	op		3538465	1					
ANR	3538587	CFGEntryNode	ENTRY		3538465		True				
ANR	3538588	CFGExitNode	EXIT		3538465		True				
ANR	3538589	Symbol	a		3538465						
ANR	3538590	Symbol	op		3538465						
ANR	3538591	Symbol	data		3538465						
ANR	3538592	Symbol	* op		3538465						
ANR	3538593	Symbol	op -> operands [ 1 ] . reg		3538465						
ANR	3538594	Symbol	l		3538465						
ANR	3538595	Symbol	* * op		3538465						
ANR	3538596	Symbol	OT_FPUREG		3538465						
ANR	3538597	Symbol	* op -> operands		3538465						
ANR	3538598	Symbol	op -> operands [ 1 ] . type		3538465						
ANR	3538599	Symbol	op -> operands_count		3538465						
ANR	3538600	Symbol	~OT_REGALL		3538465						
ANR	3538601	Symbol	op -> operands [ 0 ] . type		3538465						
ANR	3538602	Symbol	op -> operands [ 0 ] . reg		3538465						
ANR	3538603	Symbol	op -> operands		3538465						
ANR	3538604	Symbol	* data		3538465						
ANR	3538605	Function	opfisub	3521:0:88789:89285							
ANR	3538606	FunctionDef	"opfisub (RAsm * a , ut8 * data , const Opcode * op)"		3538605	0					
ANR	3538607	CompoundStatement		3521:57:88846:89285	3538605	0					
ANR	3538608	IdentifierDeclStatement	int l = 0 ;	3522:1:88849:88858	3538605	0	True				
ANR	3538609	IdentifierDecl	l = 0		3538605	0					
ANR	3538610	IdentifierDeclType	int		3538605	0					
ANR	3538611	Identifier	l		3538605	1					
ANR	3538612	AssignmentExpression	l = 0		3538605	2		=			
ANR	3538613	Identifier	l		3538605	0					
ANR	3538614	PrimaryExpression	0		3538605	1					
ANR	3538615	SwitchStatement	switch ( op -> operands_count )		3538605	1					
ANR	3538616	Condition	op -> operands_count	3523:9:88869:88886	3538605	0	True				
ANR	3538617	PtrMemberAccess	op -> operands_count		3538605	0					
ANR	3538618	Identifier	op		3538605	0					
ANR	3538619	Identifier	operands_count		3538605	1					
ANR	3538620	CompoundStatement		3:29:42:42	3538605	1					
ANR	3538621	Label	case 1 :	3524:1:88892:88898	3538605	0	True				
ANR	3538622	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3538605	1					
ANR	3538623	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3525:7:88907:88938	3538605	0	True				
ANR	3538624	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3538605	0		&			
ANR	3538625	MemberAccess	op -> operands [ 0 ] . type		3538605	0					
ANR	3538626	ArrayIndexing	op -> operands [ 0 ]		3538605	0					
ANR	3538627	PtrMemberAccess	op -> operands		3538605	0					
ANR	3538628	Identifier	op		3538605	0					
ANR	3538629	Identifier	operands		3538605	1					
ANR	3538630	PrimaryExpression	0		3538605	1					
ANR	3538631	Identifier	type		3538605	1					
ANR	3538632	Identifier	OT_MEMORY		3538605	1					
ANR	3538633	CompoundStatement		5:42:95:95	3538605	1					
ANR	3538634	IfStatement	if ( op -> operands [ 0 ] . type & OT_DWORD )		3538605	0					
ANR	3538635	Condition	op -> operands [ 0 ] . type & OT_DWORD	3526:8:88952:88982	3538605	0	True				
ANR	3538636	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		3538605	0		&			
ANR	3538637	MemberAccess	op -> operands [ 0 ] . type		3538605	0					
ANR	3538638	ArrayIndexing	op -> operands [ 0 ]		3538605	0					
ANR	3538639	PtrMemberAccess	op -> operands		3538605	0					
ANR	3538640	Identifier	op		3538605	0					
ANR	3538641	Identifier	operands		3538605	1					
ANR	3538642	PrimaryExpression	0		3538605	1					
ANR	3538643	Identifier	type		3538605	1					
ANR	3538644	Identifier	OT_DWORD		3538605	1					
ANR	3538645	CompoundStatement		6:42:139:139	3538605	1					
ANR	3538646	ExpressionStatement	data [ l ++ ] = 0xda	3527:4:88992:89008	3538605	0	True				
ANR	3538647	AssignmentExpression	data [ l ++ ] = 0xda		3538605	0		=			
ANR	3538648	ArrayIndexing	data [ l ++ ]		3538605	0					
ANR	3538649	Identifier	data		3538605	0					
ANR	3538650	PostIncDecOperationExpression	l ++		3538605	1					
ANR	3538651	Identifier	l		3538605	0					
ANR	3538652	IncDec	++		3538605	1					
ANR	3538653	PrimaryExpression	0xda		3538605	1					
ANR	3538654	ExpressionStatement	data [ l ++ ] = 0x20 | op -> operands [ 0 ] . regs [ 0 ]	3528:4:89014:89056	3538605	1	True				
ANR	3538655	AssignmentExpression	data [ l ++ ] = 0x20 | op -> operands [ 0 ] . regs [ 0 ]		3538605	0		=			
ANR	3538656	ArrayIndexing	data [ l ++ ]		3538605	0					
ANR	3538657	Identifier	data		3538605	0					
ANR	3538658	PostIncDecOperationExpression	l ++		3538605	1					
ANR	3538659	Identifier	l		3538605	0					
ANR	3538660	IncDec	++		3538605	1					
ANR	3538661	InclusiveOrExpression	0x20 | op -> operands [ 0 ] . regs [ 0 ]		3538605	1		|			
ANR	3538662	PrimaryExpression	0x20		3538605	0					
ANR	3538663	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3538605	1					
ANR	3538664	MemberAccess	op -> operands [ 0 ] . regs		3538605	0					
ANR	3538665	ArrayIndexing	op -> operands [ 0 ]		3538605	0					
ANR	3538666	PtrMemberAccess	op -> operands		3538605	0					
ANR	3538667	Identifier	op		3538605	0					
ANR	3538668	Identifier	operands		3538605	1					
ANR	3538669	PrimaryExpression	0		3538605	1					
ANR	3538670	Identifier	regs		3538605	1					
ANR	3538671	PrimaryExpression	0		3538605	1					
ANR	3538672	ElseStatement	else		3538605	0					
ANR	3538673	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		3538605	0					
ANR	3538674	Condition	op -> operands [ 0 ] . type & OT_WORD	3529:15:89073:89102	3538605	0	True				
ANR	3538675	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		3538605	0		&			
ANR	3538676	MemberAccess	op -> operands [ 0 ] . type		3538605	0					
ANR	3538677	ArrayIndexing	op -> operands [ 0 ]		3538605	0					
ANR	3538678	PtrMemberAccess	op -> operands		3538605	0					
ANR	3538679	Identifier	op		3538605	0					
ANR	3538680	Identifier	operands		3538605	1					
ANR	3538681	PrimaryExpression	0		3538605	1					
ANR	3538682	Identifier	type		3538605	1					
ANR	3538683	Identifier	OT_WORD		3538605	1					
ANR	3538684	CompoundStatement		9:48:259:259	3538605	1					
ANR	3538685	ExpressionStatement	data [ l ++ ] = 0xde	3530:4:89112:89128	3538605	0	True				
ANR	3538686	AssignmentExpression	data [ l ++ ] = 0xde		3538605	0		=			
ANR	3538687	ArrayIndexing	data [ l ++ ]		3538605	0					
ANR	3538688	Identifier	data		3538605	0					
ANR	3538689	PostIncDecOperationExpression	l ++		3538605	1					
ANR	3538690	Identifier	l		3538605	0					
ANR	3538691	IncDec	++		3538605	1					
ANR	3538692	PrimaryExpression	0xde		3538605	1					
ANR	3538693	ExpressionStatement	data [ l ++ ] = 0x20 | op -> operands [ 0 ] . regs [ 0 ]	3531:4:89134:89176	3538605	1	True				
ANR	3538694	AssignmentExpression	data [ l ++ ] = 0x20 | op -> operands [ 0 ] . regs [ 0 ]		3538605	0		=			
ANR	3538695	ArrayIndexing	data [ l ++ ]		3538605	0					
ANR	3538696	Identifier	data		3538605	0					
ANR	3538697	PostIncDecOperationExpression	l ++		3538605	1					
ANR	3538698	Identifier	l		3538605	0					
ANR	3538699	IncDec	++		3538605	1					
ANR	3538700	InclusiveOrExpression	0x20 | op -> operands [ 0 ] . regs [ 0 ]		3538605	1		|			
ANR	3538701	PrimaryExpression	0x20		3538605	0					
ANR	3538702	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3538605	1					
ANR	3538703	MemberAccess	op -> operands [ 0 ] . regs		3538605	0					
ANR	3538704	ArrayIndexing	op -> operands [ 0 ]		3538605	0					
ANR	3538705	PtrMemberAccess	op -> operands		3538605	0					
ANR	3538706	Identifier	op		3538605	0					
ANR	3538707	Identifier	operands		3538605	1					
ANR	3538708	PrimaryExpression	0		3538605	1					
ANR	3538709	Identifier	regs		3538605	1					
ANR	3538710	PrimaryExpression	0		3538605	1					
ANR	3538711	ElseStatement	else		3538605	0					
ANR	3538712	CompoundStatement		12:10:341:341	3538605	0					
ANR	3538713	ReturnStatement	return - 1 ;	3533:4:89194:89203	3538605	0	True				
ANR	3538714	UnaryOperationExpression	- 1		3538605	0					
ANR	3538715	UnaryOperator	-		3538605	0					
ANR	3538716	PrimaryExpression	1		3538605	1					
ANR	3538717	ElseStatement	else		3538605	0					
ANR	3538718	CompoundStatement		15:9:372:372	3538605	0					
ANR	3538719	ReturnStatement	return - 1 ;	3536:3:89224:89233	3538605	0	True				
ANR	3538720	UnaryOperationExpression	- 1		3538605	0					
ANR	3538721	UnaryOperator	-		3538605	0					
ANR	3538722	PrimaryExpression	1		3538605	1					
ANR	3538723	BreakStatement	break ;	3538:2:89241:89246	3538605	2	True				
ANR	3538724	Label	default :	3539:1:89249:89256	3538605	3	True				
ANR	3538725	Identifier	default		3538605	0					
ANR	3538726	ReturnStatement	return - 1 ;	3540:2:89260:89269	3538605	4	True				
ANR	3538727	UnaryOperationExpression	- 1		3538605	0					
ANR	3538728	UnaryOperator	-		3538605	0					
ANR	3538729	PrimaryExpression	1		3538605	1					
ANR	3538730	ReturnStatement	return l ;	3542:1:89275:89283	3538605	2	True				
ANR	3538731	Identifier	l		3538605	0					
ANR	3538732	ReturnType	static int		3538605	1					
ANR	3538733	Identifier	opfisub		3538605	2					
ANR	3538734	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3538605	3					
ANR	3538735	Parameter	RAsm * a	3521:19:88808:88814	3538605	0	True				
ANR	3538736	ParameterType	RAsm *		3538605	0					
ANR	3538737	Identifier	a		3538605	1					
ANR	3538738	Parameter	ut8 * data	3521:28:88817:88825	3538605	1	True				
ANR	3538739	ParameterType	ut8 *		3538605	0					
ANR	3538740	Identifier	data		3538605	1					
ANR	3538741	Parameter	const Opcode * op	3521:39:88828:88843	3538605	2	True				
ANR	3538742	ParameterType	const Opcode *		3538605	0					
ANR	3538743	Identifier	op		3538605	1					
ANR	3538744	CFGEntryNode	ENTRY		3538605		True				
ANR	3538745	CFGExitNode	EXIT		3538605		True				
ANR	3538746	Symbol	a		3538605						
ANR	3538747	Symbol	op		3538605						
ANR	3538748	Symbol	OT_WORD		3538605						
ANR	3538749	Symbol	data		3538605						
ANR	3538750	Symbol	* op		3538605						
ANR	3538751	Symbol	* * op -> operands		3538605						
ANR	3538752	Symbol	l		3538605						
ANR	3538753	Symbol	* * op		3538605						
ANR	3538754	Symbol	* op -> operands		3538605						
ANR	3538755	Symbol	op -> operands_count		3538605						
ANR	3538756	Symbol	* op -> operands [ 0 ] . regs		3538605						
ANR	3538757	Symbol	op -> operands [ 0 ] . type		3538605						
ANR	3538758	Symbol	* * * op		3538605						
ANR	3538759	Symbol	op -> operands		3538605						
ANR	3538760	Symbol	OT_MEMORY		3538605						
ANR	3538761	Symbol	* data		3538605						
ANR	3538762	Symbol	op -> operands [ 0 ] . regs		3538605						
ANR	3538763	Symbol	OT_DWORD		3538605						
ANR	3538764	Function	opfsubr	3545:0:89288:90249							
ANR	3538765	FunctionDef	"opfsubr (RAsm * a , ut8 * data , const Opcode * op)"		3538764	0					
ANR	3538766	CompoundStatement		3545:57:89345:90249	3538764	0					
ANR	3538767	IdentifierDeclStatement	int l = 0 ;	3546:1:89348:89357	3538764	0	True				
ANR	3538768	IdentifierDecl	l = 0		3538764	0					
ANR	3538769	IdentifierDeclType	int		3538764	0					
ANR	3538770	Identifier	l		3538764	1					
ANR	3538771	AssignmentExpression	l = 0		3538764	2		=			
ANR	3538772	Identifier	l		3538764	0					
ANR	3538773	PrimaryExpression	0		3538764	1					
ANR	3538774	SwitchStatement	switch ( op -> operands_count )		3538764	1					
ANR	3538775	Condition	op -> operands_count	3547:9:89368:89385	3538764	0	True				
ANR	3538776	PtrMemberAccess	op -> operands_count		3538764	0					
ANR	3538777	Identifier	op		3538764	0					
ANR	3538778	Identifier	operands_count		3538764	1					
ANR	3538779	CompoundStatement		3:29:42:42	3538764	1					
ANR	3538780	Label	case 1 :	3548:1:89391:89397	3538764	0	True				
ANR	3538781	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3538764	1					
ANR	3538782	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3549:7:89406:89437	3538764	0	True				
ANR	3538783	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3538764	0		&			
ANR	3538784	MemberAccess	op -> operands [ 0 ] . type		3538764	0					
ANR	3538785	ArrayIndexing	op -> operands [ 0 ]		3538764	0					
ANR	3538786	PtrMemberAccess	op -> operands		3538764	0					
ANR	3538787	Identifier	op		3538764	0					
ANR	3538788	Identifier	operands		3538764	1					
ANR	3538789	PrimaryExpression	0		3538764	1					
ANR	3538790	Identifier	type		3538764	1					
ANR	3538791	Identifier	OT_MEMORY		3538764	1					
ANR	3538792	CompoundStatement		5:42:95:95	3538764	1					
ANR	3538793	IfStatement	if ( op -> operands [ 0 ] . type & OT_DWORD )		3538764	0					
ANR	3538794	Condition	op -> operands [ 0 ] . type & OT_DWORD	3550:8:89451:89481	3538764	0	True				
ANR	3538795	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		3538764	0		&			
ANR	3538796	MemberAccess	op -> operands [ 0 ] . type		3538764	0					
ANR	3538797	ArrayIndexing	op -> operands [ 0 ]		3538764	0					
ANR	3538798	PtrMemberAccess	op -> operands		3538764	0					
ANR	3538799	Identifier	op		3538764	0					
ANR	3538800	Identifier	operands		3538764	1					
ANR	3538801	PrimaryExpression	0		3538764	1					
ANR	3538802	Identifier	type		3538764	1					
ANR	3538803	Identifier	OT_DWORD		3538764	1					
ANR	3538804	CompoundStatement		6:42:139:139	3538764	1					
ANR	3538805	ExpressionStatement	data [ l ++ ] = 0xd8	3551:4:89491:89507	3538764	0	True				
ANR	3538806	AssignmentExpression	data [ l ++ ] = 0xd8		3538764	0		=			
ANR	3538807	ArrayIndexing	data [ l ++ ]		3538764	0					
ANR	3538808	Identifier	data		3538764	0					
ANR	3538809	PostIncDecOperationExpression	l ++		3538764	1					
ANR	3538810	Identifier	l		3538764	0					
ANR	3538811	IncDec	++		3538764	1					
ANR	3538812	PrimaryExpression	0xd8		3538764	1					
ANR	3538813	ExpressionStatement	data [ l ++ ] = 0x28 | op -> operands [ 0 ] . regs [ 0 ]	3552:4:89513:89555	3538764	1	True				
ANR	3538814	AssignmentExpression	data [ l ++ ] = 0x28 | op -> operands [ 0 ] . regs [ 0 ]		3538764	0		=			
ANR	3538815	ArrayIndexing	data [ l ++ ]		3538764	0					
ANR	3538816	Identifier	data		3538764	0					
ANR	3538817	PostIncDecOperationExpression	l ++		3538764	1					
ANR	3538818	Identifier	l		3538764	0					
ANR	3538819	IncDec	++		3538764	1					
ANR	3538820	InclusiveOrExpression	0x28 | op -> operands [ 0 ] . regs [ 0 ]		3538764	1		|			
ANR	3538821	PrimaryExpression	0x28		3538764	0					
ANR	3538822	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3538764	1					
ANR	3538823	MemberAccess	op -> operands [ 0 ] . regs		3538764	0					
ANR	3538824	ArrayIndexing	op -> operands [ 0 ]		3538764	0					
ANR	3538825	PtrMemberAccess	op -> operands		3538764	0					
ANR	3538826	Identifier	op		3538764	0					
ANR	3538827	Identifier	operands		3538764	1					
ANR	3538828	PrimaryExpression	0		3538764	1					
ANR	3538829	Identifier	regs		3538764	1					
ANR	3538830	PrimaryExpression	0		3538764	1					
ANR	3538831	ElseStatement	else		3538764	0					
ANR	3538832	IfStatement	if ( op -> operands [ 0 ] . type & OT_QWORD )		3538764	0					
ANR	3538833	Condition	op -> operands [ 0 ] . type & OT_QWORD	3553:15:89572:89602	3538764	0	True				
ANR	3538834	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		3538764	0		&			
ANR	3538835	MemberAccess	op -> operands [ 0 ] . type		3538764	0					
ANR	3538836	ArrayIndexing	op -> operands [ 0 ]		3538764	0					
ANR	3538837	PtrMemberAccess	op -> operands		3538764	0					
ANR	3538838	Identifier	op		3538764	0					
ANR	3538839	Identifier	operands		3538764	1					
ANR	3538840	PrimaryExpression	0		3538764	1					
ANR	3538841	Identifier	type		3538764	1					
ANR	3538842	Identifier	OT_QWORD		3538764	1					
ANR	3538843	CompoundStatement		9:49:260:260	3538764	1					
ANR	3538844	ExpressionStatement	data [ l ++ ] = 0xdc	3554:4:89612:89628	3538764	0	True				
ANR	3538845	AssignmentExpression	data [ l ++ ] = 0xdc		3538764	0		=			
ANR	3538846	ArrayIndexing	data [ l ++ ]		3538764	0					
ANR	3538847	Identifier	data		3538764	0					
ANR	3538848	PostIncDecOperationExpression	l ++		3538764	1					
ANR	3538849	Identifier	l		3538764	0					
ANR	3538850	IncDec	++		3538764	1					
ANR	3538851	PrimaryExpression	0xdc		3538764	1					
ANR	3538852	ExpressionStatement	data [ l ++ ] = 0x28 | op -> operands [ 0 ] . regs [ 0 ]	3555:4:89634:89676	3538764	1	True				
ANR	3538853	AssignmentExpression	data [ l ++ ] = 0x28 | op -> operands [ 0 ] . regs [ 0 ]		3538764	0		=			
ANR	3538854	ArrayIndexing	data [ l ++ ]		3538764	0					
ANR	3538855	Identifier	data		3538764	0					
ANR	3538856	PostIncDecOperationExpression	l ++		3538764	1					
ANR	3538857	Identifier	l		3538764	0					
ANR	3538858	IncDec	++		3538764	1					
ANR	3538859	InclusiveOrExpression	0x28 | op -> operands [ 0 ] . regs [ 0 ]		3538764	1		|			
ANR	3538860	PrimaryExpression	0x28		3538764	0					
ANR	3538861	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3538764	1					
ANR	3538862	MemberAccess	op -> operands [ 0 ] . regs		3538764	0					
ANR	3538863	ArrayIndexing	op -> operands [ 0 ]		3538764	0					
ANR	3538864	PtrMemberAccess	op -> operands		3538764	0					
ANR	3538865	Identifier	op		3538764	0					
ANR	3538866	Identifier	operands		3538764	1					
ANR	3538867	PrimaryExpression	0		3538764	1					
ANR	3538868	Identifier	regs		3538764	1					
ANR	3538869	PrimaryExpression	0		3538764	1					
ANR	3538870	ElseStatement	else		3538764	0					
ANR	3538871	CompoundStatement		12:10:342:342	3538764	0					
ANR	3538872	ReturnStatement	return - 1 ;	3557:4:89694:89703	3538764	0	True				
ANR	3538873	UnaryOperationExpression	- 1		3538764	0					
ANR	3538874	UnaryOperator	-		3538764	0					
ANR	3538875	PrimaryExpression	1		3538764	1					
ANR	3538876	ElseStatement	else		3538764	0					
ANR	3538877	CompoundStatement		15:9:373:373	3538764	0					
ANR	3538878	ReturnStatement	return - 1 ;	3560:3:89724:89733	3538764	0	True				
ANR	3538879	UnaryOperationExpression	- 1		3538764	0					
ANR	3538880	UnaryOperator	-		3538764	0					
ANR	3538881	PrimaryExpression	1		3538764	1					
ANR	3538882	BreakStatement	break ;	3562:2:89741:89746	3538764	2	True				
ANR	3538883	Label	case 2 :	3563:1:89749:89755	3538764	3	True				
ANR	3538884	IfStatement	if ( op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL )		3538764	4					
ANR	3538885	Condition	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL	3564:7:89764:89892	3538764	0	True				
ANR	3538886	AndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		3538764	0		&&			
ANR	3538887	BitAndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL		3538764	0		&			
ANR	3538888	MemberAccess	op -> operands [ 0 ] . type		3538764	0					
ANR	3538889	ArrayIndexing	op -> operands [ 0 ]		3538764	0					
ANR	3538890	PtrMemberAccess	op -> operands		3538764	0					
ANR	3538891	Identifier	op		3538764	0					
ANR	3538892	Identifier	operands		3538764	1					
ANR	3538893	PrimaryExpression	0		3538764	1					
ANR	3538894	Identifier	type		3538764	1					
ANR	3538895	BitAndExpression	OT_FPUREG & ~OT_REGALL		3538764	1		&			
ANR	3538896	Identifier	OT_FPUREG		3538764	0					
ANR	3538897	Identifier	~OT_REGALL		3538764	1					
ANR	3538898	AndExpression	op -> operands [ 0 ] . reg == 0 && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		3538764	1		&&			
ANR	3538899	EqualityExpression	op -> operands [ 0 ] . reg == 0		3538764	0		==			
ANR	3538900	MemberAccess	op -> operands [ 0 ] . reg		3538764	0					
ANR	3538901	ArrayIndexing	op -> operands [ 0 ]		3538764	0					
ANR	3538902	PtrMemberAccess	op -> operands		3538764	0					
ANR	3538903	Identifier	op		3538764	0					
ANR	3538904	Identifier	operands		3538764	1					
ANR	3538905	PrimaryExpression	0		3538764	1					
ANR	3538906	Identifier	reg		3538764	1					
ANR	3538907	PrimaryExpression	0		3538764	1					
ANR	3538908	BitAndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		3538764	1		&			
ANR	3538909	MemberAccess	op -> operands [ 1 ] . type		3538764	0					
ANR	3538910	ArrayIndexing	op -> operands [ 1 ]		3538764	0					
ANR	3538911	PtrMemberAccess	op -> operands		3538764	0					
ANR	3538912	Identifier	op		3538764	0					
ANR	3538913	Identifier	operands		3538764	1					
ANR	3538914	PrimaryExpression	1		3538764	1					
ANR	3538915	Identifier	type		3538764	1					
ANR	3538916	BitAndExpression	OT_FPUREG & ~OT_REGALL		3538764	1		&			
ANR	3538917	Identifier	OT_FPUREG		3538764	0					
ANR	3538918	Identifier	~OT_REGALL		3538764	1					
ANR	3538919	CompoundStatement		21:55:550:550	3538764	1					
ANR	3538920	ExpressionStatement	data [ l ++ ] = 0xd8	3566:3:89901:89917	3538764	0	True				
ANR	3538921	AssignmentExpression	data [ l ++ ] = 0xd8		3538764	0		=			
ANR	3538922	ArrayIndexing	data [ l ++ ]		3538764	0					
ANR	3538923	Identifier	data		3538764	0					
ANR	3538924	PostIncDecOperationExpression	l ++		3538764	1					
ANR	3538925	Identifier	l		3538764	0					
ANR	3538926	IncDec	++		3538764	1					
ANR	3538927	PrimaryExpression	0xd8		3538764	1					
ANR	3538928	ExpressionStatement	data [ l ++ ] = 0xe8 | op -> operands [ 1 ] . reg	3567:3:89922:89960	3538764	1	True				
ANR	3538929	AssignmentExpression	data [ l ++ ] = 0xe8 | op -> operands [ 1 ] . reg		3538764	0		=			
ANR	3538930	ArrayIndexing	data [ l ++ ]		3538764	0					
ANR	3538931	Identifier	data		3538764	0					
ANR	3538932	PostIncDecOperationExpression	l ++		3538764	1					
ANR	3538933	Identifier	l		3538764	0					
ANR	3538934	IncDec	++		3538764	1					
ANR	3538935	InclusiveOrExpression	0xe8 | op -> operands [ 1 ] . reg		3538764	1		|			
ANR	3538936	PrimaryExpression	0xe8		3538764	0					
ANR	3538937	MemberAccess	op -> operands [ 1 ] . reg		3538764	1					
ANR	3538938	ArrayIndexing	op -> operands [ 1 ]		3538764	0					
ANR	3538939	PtrMemberAccess	op -> operands		3538764	0					
ANR	3538940	Identifier	op		3538764	0					
ANR	3538941	Identifier	operands		3538764	1					
ANR	3538942	PrimaryExpression	1		3538764	1					
ANR	3538943	Identifier	reg		3538764	1					
ANR	3538944	ElseStatement	else		3538764	0					
ANR	3538945	IfStatement	if ( op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0 )		3538764	0					
ANR	3538946	Condition	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0	3568:14:89976:90104	3538764	0	True				
ANR	3538947	AndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		3538764	0		&&			
ANR	3538948	BitAndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL		3538764	0		&			
ANR	3538949	MemberAccess	op -> operands [ 0 ] . type		3538764	0					
ANR	3538950	ArrayIndexing	op -> operands [ 0 ]		3538764	0					
ANR	3538951	PtrMemberAccess	op -> operands		3538764	0					
ANR	3538952	Identifier	op		3538764	0					
ANR	3538953	Identifier	operands		3538764	1					
ANR	3538954	PrimaryExpression	0		3538764	1					
ANR	3538955	Identifier	type		3538764	1					
ANR	3538956	BitAndExpression	OT_FPUREG & ~OT_REGALL		3538764	1		&			
ANR	3538957	Identifier	OT_FPUREG		3538764	0					
ANR	3538958	Identifier	~OT_REGALL		3538764	1					
ANR	3538959	AndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		3538764	1		&&			
ANR	3538960	BitAndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		3538764	0		&			
ANR	3538961	MemberAccess	op -> operands [ 1 ] . type		3538764	0					
ANR	3538962	ArrayIndexing	op -> operands [ 1 ]		3538764	0					
ANR	3538963	PtrMemberAccess	op -> operands		3538764	0					
ANR	3538964	Identifier	op		3538764	0					
ANR	3538965	Identifier	operands		3538764	1					
ANR	3538966	PrimaryExpression	1		3538764	1					
ANR	3538967	Identifier	type		3538764	1					
ANR	3538968	BitAndExpression	OT_FPUREG & ~OT_REGALL		3538764	1		&			
ANR	3538969	Identifier	OT_FPUREG		3538764	0					
ANR	3538970	Identifier	~OT_REGALL		3538764	1					
ANR	3538971	EqualityExpression	op -> operands [ 1 ] . reg == 0		3538764	1		==			
ANR	3538972	MemberAccess	op -> operands [ 1 ] . reg		3538764	0					
ANR	3538973	ArrayIndexing	op -> operands [ 1 ]		3538764	0					
ANR	3538974	PtrMemberAccess	op -> operands		3538764	0					
ANR	3538975	Identifier	op		3538764	0					
ANR	3538976	Identifier	operands		3538764	1					
ANR	3538977	PrimaryExpression	1		3538764	1					
ANR	3538978	Identifier	reg		3538764	1					
ANR	3538979	PrimaryExpression	0		3538764	1					
ANR	3538980	CompoundStatement		25:83:762:762	3538764	1					
ANR	3538981	ExpressionStatement	data [ l ++ ] = 0xdc	3570:3:90113:90129	3538764	0	True				
ANR	3538982	AssignmentExpression	data [ l ++ ] = 0xdc		3538764	0		=			
ANR	3538983	ArrayIndexing	data [ l ++ ]		3538764	0					
ANR	3538984	Identifier	data		3538764	0					
ANR	3538985	PostIncDecOperationExpression	l ++		3538764	1					
ANR	3538986	Identifier	l		3538764	0					
ANR	3538987	IncDec	++		3538764	1					
ANR	3538988	PrimaryExpression	0xdc		3538764	1					
ANR	3538989	ExpressionStatement	data [ l ++ ] = 0xe0 | op -> operands [ 0 ] . reg	3571:3:90134:90172	3538764	1	True				
ANR	3538990	AssignmentExpression	data [ l ++ ] = 0xe0 | op -> operands [ 0 ] . reg		3538764	0		=			
ANR	3538991	ArrayIndexing	data [ l ++ ]		3538764	0					
ANR	3538992	Identifier	data		3538764	0					
ANR	3538993	PostIncDecOperationExpression	l ++		3538764	1					
ANR	3538994	Identifier	l		3538764	0					
ANR	3538995	IncDec	++		3538764	1					
ANR	3538996	InclusiveOrExpression	0xe0 | op -> operands [ 0 ] . reg		3538764	1		|			
ANR	3538997	PrimaryExpression	0xe0		3538764	0					
ANR	3538998	MemberAccess	op -> operands [ 0 ] . reg		3538764	1					
ANR	3538999	ArrayIndexing	op -> operands [ 0 ]		3538764	0					
ANR	3539000	PtrMemberAccess	op -> operands		3538764	0					
ANR	3539001	Identifier	op		3538764	0					
ANR	3539002	Identifier	operands		3538764	1					
ANR	3539003	PrimaryExpression	0		3538764	1					
ANR	3539004	Identifier	reg		3538764	1					
ANR	3539005	ElseStatement	else		3538764	0					
ANR	3539006	CompoundStatement		28:9:837:837	3538764	0					
ANR	3539007	ReturnStatement	return - 1 ;	3573:3:90188:90197	3538764	0	True				
ANR	3539008	UnaryOperationExpression	- 1		3538764	0					
ANR	3539009	UnaryOperator	-		3538764	0					
ANR	3539010	PrimaryExpression	1		3538764	1					
ANR	3539011	BreakStatement	break ;	3575:2:90205:90210	3538764	5	True				
ANR	3539012	Label	default :	3576:1:90213:90220	3538764	6	True				
ANR	3539013	Identifier	default		3538764	0					
ANR	3539014	ReturnStatement	return - 1 ;	3577:2:90224:90233	3538764	7	True				
ANR	3539015	UnaryOperationExpression	- 1		3538764	0					
ANR	3539016	UnaryOperator	-		3538764	0					
ANR	3539017	PrimaryExpression	1		3538764	1					
ANR	3539018	ReturnStatement	return l ;	3579:1:90239:90247	3538764	2	True				
ANR	3539019	Identifier	l		3538764	0					
ANR	3539020	ReturnType	static int		3538764	1					
ANR	3539021	Identifier	opfsubr		3538764	2					
ANR	3539022	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3538764	3					
ANR	3539023	Parameter	RAsm * a	3545:19:89307:89313	3538764	0	True				
ANR	3539024	ParameterType	RAsm *		3538764	0					
ANR	3539025	Identifier	a		3538764	1					
ANR	3539026	Parameter	ut8 * data	3545:28:89316:89324	3538764	1	True				
ANR	3539027	ParameterType	ut8 *		3538764	0					
ANR	3539028	Identifier	data		3538764	1					
ANR	3539029	Parameter	const Opcode * op	3545:39:89327:89342	3538764	2	True				
ANR	3539030	ParameterType	const Opcode *		3538764	0					
ANR	3539031	Identifier	op		3538764	1					
ANR	3539032	CFGEntryNode	ENTRY		3538764		True				
ANR	3539033	CFGExitNode	EXIT		3538764		True				
ANR	3539034	Symbol	a		3538764						
ANR	3539035	Symbol	op		3538764						
ANR	3539036	Symbol	OT_QWORD		3538764						
ANR	3539037	Symbol	data		3538764						
ANR	3539038	Symbol	* op		3538764						
ANR	3539039	Symbol	op -> operands [ 1 ] . reg		3538764						
ANR	3539040	Symbol	* * op -> operands		3538764						
ANR	3539041	Symbol	l		3538764						
ANR	3539042	Symbol	* * op		3538764						
ANR	3539043	Symbol	OT_FPUREG		3538764						
ANR	3539044	Symbol	* op -> operands		3538764						
ANR	3539045	Symbol	op -> operands [ 1 ] . type		3538764						
ANR	3539046	Symbol	op -> operands_count		3538764						
ANR	3539047	Symbol	* op -> operands [ 0 ] . regs		3538764						
ANR	3539048	Symbol	op -> operands [ 0 ] . type		3538764						
ANR	3539049	Symbol	~OT_REGALL		3538764						
ANR	3539050	Symbol	* * * op		3538764						
ANR	3539051	Symbol	op -> operands [ 0 ] . reg		3538764						
ANR	3539052	Symbol	op -> operands		3538764						
ANR	3539053	Symbol	OT_MEMORY		3538764						
ANR	3539054	Symbol	* data		3538764						
ANR	3539055	Symbol	op -> operands [ 0 ] . regs		3538764						
ANR	3539056	Symbol	OT_DWORD		3538764						
ANR	3539057	Function	opfsubrp	3582:0:90252:90702							
ANR	3539058	FunctionDef	"opfsubrp (RAsm * a , ut8 * data , const Opcode * op)"		3539057	0					
ANR	3539059	CompoundStatement		3582:58:90310:90702	3539057	0					
ANR	3539060	IdentifierDeclStatement	int l = 0 ;	3583:1:90313:90322	3539057	0	True				
ANR	3539061	IdentifierDecl	l = 0		3539057	0					
ANR	3539062	IdentifierDeclType	int		3539057	0					
ANR	3539063	Identifier	l		3539057	1					
ANR	3539064	AssignmentExpression	l = 0		3539057	2		=			
ANR	3539065	Identifier	l		3539057	0					
ANR	3539066	PrimaryExpression	0		3539057	1					
ANR	3539067	SwitchStatement	switch ( op -> operands_count )		3539057	1					
ANR	3539068	Condition	op -> operands_count	3584:9:90333:90350	3539057	0	True				
ANR	3539069	PtrMemberAccess	op -> operands_count		3539057	0					
ANR	3539070	Identifier	op		3539057	0					
ANR	3539071	Identifier	operands_count		3539057	1					
ANR	3539072	CompoundStatement		3:29:42:42	3539057	1					
ANR	3539073	Label	case 0 :	3585:1:90356:90362	3539057	0	True				
ANR	3539074	ExpressionStatement	data [ l ++ ] = 0xde	3586:2:90366:90382	3539057	1	True				
ANR	3539075	AssignmentExpression	data [ l ++ ] = 0xde		3539057	0		=			
ANR	3539076	ArrayIndexing	data [ l ++ ]		3539057	0					
ANR	3539077	Identifier	data		3539057	0					
ANR	3539078	PostIncDecOperationExpression	l ++		3539057	1					
ANR	3539079	Identifier	l		3539057	0					
ANR	3539080	IncDec	++		3539057	1					
ANR	3539081	PrimaryExpression	0xde		3539057	1					
ANR	3539082	ExpressionStatement	data [ l ++ ] = 0xe1	3587:2:90386:90402	3539057	2	True				
ANR	3539083	AssignmentExpression	data [ l ++ ] = 0xe1		3539057	0		=			
ANR	3539084	ArrayIndexing	data [ l ++ ]		3539057	0					
ANR	3539085	Identifier	data		3539057	0					
ANR	3539086	PostIncDecOperationExpression	l ++		3539057	1					
ANR	3539087	Identifier	l		3539057	0					
ANR	3539088	IncDec	++		3539057	1					
ANR	3539089	PrimaryExpression	0xe1		3539057	1					
ANR	3539090	BreakStatement	break ;	3588:2:90406:90411	3539057	3	True				
ANR	3539091	Label	case 2 :	3589:1:90414:90420	3539057	4	True				
ANR	3539092	IfStatement	if ( op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0 )		3539057	5					
ANR	3539093	Condition	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0	3590:7:90429:90557	3539057	0	True				
ANR	3539094	AndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		3539057	0		&&			
ANR	3539095	BitAndExpression	op -> operands [ 0 ] . type & OT_FPUREG & ~OT_REGALL		3539057	0		&			
ANR	3539096	MemberAccess	op -> operands [ 0 ] . type		3539057	0					
ANR	3539097	ArrayIndexing	op -> operands [ 0 ]		3539057	0					
ANR	3539098	PtrMemberAccess	op -> operands		3539057	0					
ANR	3539099	Identifier	op		3539057	0					
ANR	3539100	Identifier	operands		3539057	1					
ANR	3539101	PrimaryExpression	0		3539057	1					
ANR	3539102	Identifier	type		3539057	1					
ANR	3539103	BitAndExpression	OT_FPUREG & ~OT_REGALL		3539057	1		&			
ANR	3539104	Identifier	OT_FPUREG		3539057	0					
ANR	3539105	Identifier	~OT_REGALL		3539057	1					
ANR	3539106	AndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL && op -> operands [ 1 ] . reg == 0		3539057	1		&&			
ANR	3539107	BitAndExpression	op -> operands [ 1 ] . type & OT_FPUREG & ~OT_REGALL		3539057	0		&			
ANR	3539108	MemberAccess	op -> operands [ 1 ] . type		3539057	0					
ANR	3539109	ArrayIndexing	op -> operands [ 1 ]		3539057	0					
ANR	3539110	PtrMemberAccess	op -> operands		3539057	0					
ANR	3539111	Identifier	op		3539057	0					
ANR	3539112	Identifier	operands		3539057	1					
ANR	3539113	PrimaryExpression	1		3539057	1					
ANR	3539114	Identifier	type		3539057	1					
ANR	3539115	BitAndExpression	OT_FPUREG & ~OT_REGALL		3539057	1		&			
ANR	3539116	Identifier	OT_FPUREG		3539057	0					
ANR	3539117	Identifier	~OT_REGALL		3539057	1					
ANR	3539118	EqualityExpression	op -> operands [ 1 ] . reg == 0		3539057	1		==			
ANR	3539119	MemberAccess	op -> operands [ 1 ] . reg		3539057	0					
ANR	3539120	ArrayIndexing	op -> operands [ 1 ]		3539057	0					
ANR	3539121	PtrMemberAccess	op -> operands		3539057	0					
ANR	3539122	Identifier	op		3539057	0					
ANR	3539123	Identifier	operands		3539057	1					
ANR	3539124	PrimaryExpression	1		3539057	1					
ANR	3539125	Identifier	reg		3539057	1					
ANR	3539126	PrimaryExpression	0		3539057	1					
ANR	3539127	CompoundStatement		10:83:250:250	3539057	1					
ANR	3539128	ExpressionStatement	data [ l ++ ] = 0xde	3592:3:90566:90582	3539057	0	True				
ANR	3539129	AssignmentExpression	data [ l ++ ] = 0xde		3539057	0		=			
ANR	3539130	ArrayIndexing	data [ l ++ ]		3539057	0					
ANR	3539131	Identifier	data		3539057	0					
ANR	3539132	PostIncDecOperationExpression	l ++		3539057	1					
ANR	3539133	Identifier	l		3539057	0					
ANR	3539134	IncDec	++		3539057	1					
ANR	3539135	PrimaryExpression	0xde		3539057	1					
ANR	3539136	ExpressionStatement	data [ l ++ ] = 0xe0 | op -> operands [ 0 ] . reg	3593:3:90587:90625	3539057	1	True				
ANR	3539137	AssignmentExpression	data [ l ++ ] = 0xe0 | op -> operands [ 0 ] . reg		3539057	0		=			
ANR	3539138	ArrayIndexing	data [ l ++ ]		3539057	0					
ANR	3539139	Identifier	data		3539057	0					
ANR	3539140	PostIncDecOperationExpression	l ++		3539057	1					
ANR	3539141	Identifier	l		3539057	0					
ANR	3539142	IncDec	++		3539057	1					
ANR	3539143	InclusiveOrExpression	0xe0 | op -> operands [ 0 ] . reg		3539057	1		|			
ANR	3539144	PrimaryExpression	0xe0		3539057	0					
ANR	3539145	MemberAccess	op -> operands [ 0 ] . reg		3539057	1					
ANR	3539146	ArrayIndexing	op -> operands [ 0 ]		3539057	0					
ANR	3539147	PtrMemberAccess	op -> operands		3539057	0					
ANR	3539148	Identifier	op		3539057	0					
ANR	3539149	Identifier	operands		3539057	1					
ANR	3539150	PrimaryExpression	0		3539057	1					
ANR	3539151	Identifier	reg		3539057	1					
ANR	3539152	ElseStatement	else		3539057	0					
ANR	3539153	CompoundStatement		13:9:325:325	3539057	0					
ANR	3539154	ReturnStatement	return - 1 ;	3595:3:90641:90650	3539057	0	True				
ANR	3539155	UnaryOperationExpression	- 1		3539057	0					
ANR	3539156	UnaryOperator	-		3539057	0					
ANR	3539157	PrimaryExpression	1		3539057	1					
ANR	3539158	BreakStatement	break ;	3597:2:90658:90663	3539057	6	True				
ANR	3539159	Label	default :	3598:1:90666:90673	3539057	7	True				
ANR	3539160	Identifier	default		3539057	0					
ANR	3539161	ReturnStatement	return - 1 ;	3599:2:90677:90686	3539057	8	True				
ANR	3539162	UnaryOperationExpression	- 1		3539057	0					
ANR	3539163	UnaryOperator	-		3539057	0					
ANR	3539164	PrimaryExpression	1		3539057	1					
ANR	3539165	ReturnStatement	return l ;	3601:1:90692:90700	3539057	2	True				
ANR	3539166	Identifier	l		3539057	0					
ANR	3539167	ReturnType	static int		3539057	1					
ANR	3539168	Identifier	opfsubrp		3539057	2					
ANR	3539169	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3539057	3					
ANR	3539170	Parameter	RAsm * a	3582:20:90272:90278	3539057	0	True				
ANR	3539171	ParameterType	RAsm *		3539057	0					
ANR	3539172	Identifier	a		3539057	1					
ANR	3539173	Parameter	ut8 * data	3582:29:90281:90289	3539057	1	True				
ANR	3539174	ParameterType	ut8 *		3539057	0					
ANR	3539175	Identifier	data		3539057	1					
ANR	3539176	Parameter	const Opcode * op	3582:40:90292:90307	3539057	2	True				
ANR	3539177	ParameterType	const Opcode *		3539057	0					
ANR	3539178	Identifier	op		3539057	1					
ANR	3539179	CFGEntryNode	ENTRY		3539057		True				
ANR	3539180	CFGExitNode	EXIT		3539057		True				
ANR	3539181	Symbol	a		3539057						
ANR	3539182	Symbol	op		3539057						
ANR	3539183	Symbol	data		3539057						
ANR	3539184	Symbol	* op		3539057						
ANR	3539185	Symbol	op -> operands [ 1 ] . reg		3539057						
ANR	3539186	Symbol	l		3539057						
ANR	3539187	Symbol	* * op		3539057						
ANR	3539188	Symbol	OT_FPUREG		3539057						
ANR	3539189	Symbol	* op -> operands		3539057						
ANR	3539190	Symbol	op -> operands [ 1 ] . type		3539057						
ANR	3539191	Symbol	op -> operands_count		3539057						
ANR	3539192	Symbol	op -> operands [ 0 ] . type		3539057						
ANR	3539193	Symbol	~OT_REGALL		3539057						
ANR	3539194	Symbol	op -> operands [ 0 ] . reg		3539057						
ANR	3539195	Symbol	op -> operands		3539057						
ANR	3539196	Symbol	* data		3539057						
ANR	3539197	Function	opfisubr	3604:0:90705:91202							
ANR	3539198	FunctionDef	"opfisubr (RAsm * a , ut8 * data , const Opcode * op)"		3539197	0					
ANR	3539199	CompoundStatement		3604:58:90763:91202	3539197	0					
ANR	3539200	IdentifierDeclStatement	int l = 0 ;	3605:1:90766:90775	3539197	0	True				
ANR	3539201	IdentifierDecl	l = 0		3539197	0					
ANR	3539202	IdentifierDeclType	int		3539197	0					
ANR	3539203	Identifier	l		3539197	1					
ANR	3539204	AssignmentExpression	l = 0		3539197	2		=			
ANR	3539205	Identifier	l		3539197	0					
ANR	3539206	PrimaryExpression	0		3539197	1					
ANR	3539207	SwitchStatement	switch ( op -> operands_count )		3539197	1					
ANR	3539208	Condition	op -> operands_count	3606:9:90786:90803	3539197	0	True				
ANR	3539209	PtrMemberAccess	op -> operands_count		3539197	0					
ANR	3539210	Identifier	op		3539197	0					
ANR	3539211	Identifier	operands_count		3539197	1					
ANR	3539212	CompoundStatement		3:29:42:42	3539197	1					
ANR	3539213	Label	case 1 :	3607:1:90809:90815	3539197	0	True				
ANR	3539214	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3539197	1					
ANR	3539215	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3608:7:90824:90855	3539197	0	True				
ANR	3539216	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3539197	0		&			
ANR	3539217	MemberAccess	op -> operands [ 0 ] . type		3539197	0					
ANR	3539218	ArrayIndexing	op -> operands [ 0 ]		3539197	0					
ANR	3539219	PtrMemberAccess	op -> operands		3539197	0					
ANR	3539220	Identifier	op		3539197	0					
ANR	3539221	Identifier	operands		3539197	1					
ANR	3539222	PrimaryExpression	0		3539197	1					
ANR	3539223	Identifier	type		3539197	1					
ANR	3539224	Identifier	OT_MEMORY		3539197	1					
ANR	3539225	CompoundStatement		5:42:95:95	3539197	1					
ANR	3539226	IfStatement	if ( op -> operands [ 0 ] . type & OT_DWORD )		3539197	0					
ANR	3539227	Condition	op -> operands [ 0 ] . type & OT_DWORD	3609:8:90869:90899	3539197	0	True				
ANR	3539228	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		3539197	0		&			
ANR	3539229	MemberAccess	op -> operands [ 0 ] . type		3539197	0					
ANR	3539230	ArrayIndexing	op -> operands [ 0 ]		3539197	0					
ANR	3539231	PtrMemberAccess	op -> operands		3539197	0					
ANR	3539232	Identifier	op		3539197	0					
ANR	3539233	Identifier	operands		3539197	1					
ANR	3539234	PrimaryExpression	0		3539197	1					
ANR	3539235	Identifier	type		3539197	1					
ANR	3539236	Identifier	OT_DWORD		3539197	1					
ANR	3539237	CompoundStatement		6:42:139:139	3539197	1					
ANR	3539238	ExpressionStatement	data [ l ++ ] = 0xda	3610:4:90909:90925	3539197	0	True				
ANR	3539239	AssignmentExpression	data [ l ++ ] = 0xda		3539197	0		=			
ANR	3539240	ArrayIndexing	data [ l ++ ]		3539197	0					
ANR	3539241	Identifier	data		3539197	0					
ANR	3539242	PostIncDecOperationExpression	l ++		3539197	1					
ANR	3539243	Identifier	l		3539197	0					
ANR	3539244	IncDec	++		3539197	1					
ANR	3539245	PrimaryExpression	0xda		3539197	1					
ANR	3539246	ExpressionStatement	data [ l ++ ] = 0x28 | op -> operands [ 0 ] . regs [ 0 ]	3611:4:90931:90973	3539197	1	True				
ANR	3539247	AssignmentExpression	data [ l ++ ] = 0x28 | op -> operands [ 0 ] . regs [ 0 ]		3539197	0		=			
ANR	3539248	ArrayIndexing	data [ l ++ ]		3539197	0					
ANR	3539249	Identifier	data		3539197	0					
ANR	3539250	PostIncDecOperationExpression	l ++		3539197	1					
ANR	3539251	Identifier	l		3539197	0					
ANR	3539252	IncDec	++		3539197	1					
ANR	3539253	InclusiveOrExpression	0x28 | op -> operands [ 0 ] . regs [ 0 ]		3539197	1		|			
ANR	3539254	PrimaryExpression	0x28		3539197	0					
ANR	3539255	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3539197	1					
ANR	3539256	MemberAccess	op -> operands [ 0 ] . regs		3539197	0					
ANR	3539257	ArrayIndexing	op -> operands [ 0 ]		3539197	0					
ANR	3539258	PtrMemberAccess	op -> operands		3539197	0					
ANR	3539259	Identifier	op		3539197	0					
ANR	3539260	Identifier	operands		3539197	1					
ANR	3539261	PrimaryExpression	0		3539197	1					
ANR	3539262	Identifier	regs		3539197	1					
ANR	3539263	PrimaryExpression	0		3539197	1					
ANR	3539264	ElseStatement	else		3539197	0					
ANR	3539265	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		3539197	0					
ANR	3539266	Condition	op -> operands [ 0 ] . type & OT_WORD	3612:15:90990:91019	3539197	0	True				
ANR	3539267	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		3539197	0		&			
ANR	3539268	MemberAccess	op -> operands [ 0 ] . type		3539197	0					
ANR	3539269	ArrayIndexing	op -> operands [ 0 ]		3539197	0					
ANR	3539270	PtrMemberAccess	op -> operands		3539197	0					
ANR	3539271	Identifier	op		3539197	0					
ANR	3539272	Identifier	operands		3539197	1					
ANR	3539273	PrimaryExpression	0		3539197	1					
ANR	3539274	Identifier	type		3539197	1					
ANR	3539275	Identifier	OT_WORD		3539197	1					
ANR	3539276	CompoundStatement		9:48:259:259	3539197	1					
ANR	3539277	ExpressionStatement	data [ l ++ ] = 0xde	3613:4:91029:91045	3539197	0	True				
ANR	3539278	AssignmentExpression	data [ l ++ ] = 0xde		3539197	0		=			
ANR	3539279	ArrayIndexing	data [ l ++ ]		3539197	0					
ANR	3539280	Identifier	data		3539197	0					
ANR	3539281	PostIncDecOperationExpression	l ++		3539197	1					
ANR	3539282	Identifier	l		3539197	0					
ANR	3539283	IncDec	++		3539197	1					
ANR	3539284	PrimaryExpression	0xde		3539197	1					
ANR	3539285	ExpressionStatement	data [ l ++ ] = 0x28 | op -> operands [ 0 ] . regs [ 0 ]	3614:4:91051:91093	3539197	1	True				
ANR	3539286	AssignmentExpression	data [ l ++ ] = 0x28 | op -> operands [ 0 ] . regs [ 0 ]		3539197	0		=			
ANR	3539287	ArrayIndexing	data [ l ++ ]		3539197	0					
ANR	3539288	Identifier	data		3539197	0					
ANR	3539289	PostIncDecOperationExpression	l ++		3539197	1					
ANR	3539290	Identifier	l		3539197	0					
ANR	3539291	IncDec	++		3539197	1					
ANR	3539292	InclusiveOrExpression	0x28 | op -> operands [ 0 ] . regs [ 0 ]		3539197	1		|			
ANR	3539293	PrimaryExpression	0x28		3539197	0					
ANR	3539294	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3539197	1					
ANR	3539295	MemberAccess	op -> operands [ 0 ] . regs		3539197	0					
ANR	3539296	ArrayIndexing	op -> operands [ 0 ]		3539197	0					
ANR	3539297	PtrMemberAccess	op -> operands		3539197	0					
ANR	3539298	Identifier	op		3539197	0					
ANR	3539299	Identifier	operands		3539197	1					
ANR	3539300	PrimaryExpression	0		3539197	1					
ANR	3539301	Identifier	regs		3539197	1					
ANR	3539302	PrimaryExpression	0		3539197	1					
ANR	3539303	ElseStatement	else		3539197	0					
ANR	3539304	CompoundStatement		12:10:341:341	3539197	0					
ANR	3539305	ReturnStatement	return - 1 ;	3616:4:91111:91120	3539197	0	True				
ANR	3539306	UnaryOperationExpression	- 1		3539197	0					
ANR	3539307	UnaryOperator	-		3539197	0					
ANR	3539308	PrimaryExpression	1		3539197	1					
ANR	3539309	ElseStatement	else		3539197	0					
ANR	3539310	CompoundStatement		15:9:372:372	3539197	0					
ANR	3539311	ReturnStatement	return - 1 ;	3619:3:91141:91150	3539197	0	True				
ANR	3539312	UnaryOperationExpression	- 1		3539197	0					
ANR	3539313	UnaryOperator	-		3539197	0					
ANR	3539314	PrimaryExpression	1		3539197	1					
ANR	3539315	BreakStatement	break ;	3621:2:91158:91163	3539197	2	True				
ANR	3539316	Label	default :	3622:1:91166:91173	3539197	3	True				
ANR	3539317	Identifier	default		3539197	0					
ANR	3539318	ReturnStatement	return - 1 ;	3623:2:91177:91186	3539197	4	True				
ANR	3539319	UnaryOperationExpression	- 1		3539197	0					
ANR	3539320	UnaryOperator	-		3539197	0					
ANR	3539321	PrimaryExpression	1		3539197	1					
ANR	3539322	ReturnStatement	return l ;	3625:1:91192:91200	3539197	2	True				
ANR	3539323	Identifier	l		3539197	0					
ANR	3539324	ReturnType	static int		3539197	1					
ANR	3539325	Identifier	opfisubr		3539197	2					
ANR	3539326	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3539197	3					
ANR	3539327	Parameter	RAsm * a	3604:20:90725:90731	3539197	0	True				
ANR	3539328	ParameterType	RAsm *		3539197	0					
ANR	3539329	Identifier	a		3539197	1					
ANR	3539330	Parameter	ut8 * data	3604:29:90734:90742	3539197	1	True				
ANR	3539331	ParameterType	ut8 *		3539197	0					
ANR	3539332	Identifier	data		3539197	1					
ANR	3539333	Parameter	const Opcode * op	3604:40:90745:90760	3539197	2	True				
ANR	3539334	ParameterType	const Opcode *		3539197	0					
ANR	3539335	Identifier	op		3539197	1					
ANR	3539336	CFGEntryNode	ENTRY		3539197		True				
ANR	3539337	CFGExitNode	EXIT		3539197		True				
ANR	3539338	Symbol	a		3539197						
ANR	3539339	Symbol	op		3539197						
ANR	3539340	Symbol	OT_WORD		3539197						
ANR	3539341	Symbol	data		3539197						
ANR	3539342	Symbol	* op		3539197						
ANR	3539343	Symbol	* * op -> operands		3539197						
ANR	3539344	Symbol	l		3539197						
ANR	3539345	Symbol	* * op		3539197						
ANR	3539346	Symbol	* op -> operands		3539197						
ANR	3539347	Symbol	op -> operands_count		3539197						
ANR	3539348	Symbol	* op -> operands [ 0 ] . regs		3539197						
ANR	3539349	Symbol	op -> operands [ 0 ] . type		3539197						
ANR	3539350	Symbol	* * * op		3539197						
ANR	3539351	Symbol	op -> operands		3539197						
ANR	3539352	Symbol	OT_MEMORY		3539197						
ANR	3539353	Symbol	* data		3539197						
ANR	3539354	Symbol	op -> operands [ 0 ] . regs		3539197						
ANR	3539355	Symbol	OT_DWORD		3539197						
ANR	3539356	Function	opfnstcw	3628:0:91205:91545							
ANR	3539357	FunctionDef	"opfnstcw (RAsm * a , ut8 * data , const Opcode * op)"		3539356	0					
ANR	3539358	CompoundStatement		3628:58:91263:91545	3539356	0					
ANR	3539359	IdentifierDeclStatement	int l = 0 ;	3629:1:91266:91275	3539356	0	True				
ANR	3539360	IdentifierDecl	l = 0		3539356	0					
ANR	3539361	IdentifierDeclType	int		3539356	0					
ANR	3539362	Identifier	l		3539356	1					
ANR	3539363	AssignmentExpression	l = 0		3539356	2		=			
ANR	3539364	Identifier	l		3539356	0					
ANR	3539365	PrimaryExpression	0		3539356	1					
ANR	3539366	SwitchStatement	switch ( op -> operands_count )		3539356	1					
ANR	3539367	Condition	op -> operands_count	3630:9:91286:91303	3539356	0	True				
ANR	3539368	PtrMemberAccess	op -> operands_count		3539356	0					
ANR	3539369	Identifier	op		3539356	0					
ANR	3539370	Identifier	operands_count		3539356	1					
ANR	3539371	CompoundStatement		3:29:42:42	3539356	1					
ANR	3539372	Label	case 1 :	3631:1:91309:91315	3539356	0	True				
ANR	3539373	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_WORD )		3539356	1					
ANR	3539374	Condition	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_WORD	3632:7:91324:91396	3539356	0	True				
ANR	3539375	AndExpression	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_WORD		3539356	0		&&			
ANR	3539376	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3539356	0		&			
ANR	3539377	MemberAccess	op -> operands [ 0 ] . type		3539356	0					
ANR	3539378	ArrayIndexing	op -> operands [ 0 ]		3539356	0					
ANR	3539379	PtrMemberAccess	op -> operands		3539356	0					
ANR	3539380	Identifier	op		3539356	0					
ANR	3539381	Identifier	operands		3539356	1					
ANR	3539382	PrimaryExpression	0		3539356	1					
ANR	3539383	Identifier	type		3539356	1					
ANR	3539384	Identifier	OT_MEMORY		3539356	1					
ANR	3539385	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		3539356	1		&			
ANR	3539386	MemberAccess	op -> operands [ 0 ] . type		3539356	0					
ANR	3539387	ArrayIndexing	op -> operands [ 0 ]		3539356	0					
ANR	3539388	PtrMemberAccess	op -> operands		3539356	0					
ANR	3539389	Identifier	op		3539356	0					
ANR	3539390	Identifier	operands		3539356	1					
ANR	3539391	PrimaryExpression	0		3539356	1					
ANR	3539392	Identifier	type		3539356	1					
ANR	3539393	Identifier	OT_WORD		3539356	1					
ANR	3539394	CompoundStatement		6:40:136:136	3539356	1					
ANR	3539395	ExpressionStatement	data [ l ++ ] = 0xd9	3634:3:91405:91421	3539356	0	True				
ANR	3539396	AssignmentExpression	data [ l ++ ] = 0xd9		3539356	0		=			
ANR	3539397	ArrayIndexing	data [ l ++ ]		3539356	0					
ANR	3539398	Identifier	data		3539356	0					
ANR	3539399	PostIncDecOperationExpression	l ++		3539356	1					
ANR	3539400	Identifier	l		3539356	0					
ANR	3539401	IncDec	++		3539356	1					
ANR	3539402	PrimaryExpression	0xd9		3539356	1					
ANR	3539403	ExpressionStatement	data [ l ++ ] = 0x38 | op -> operands [ 0 ] . regs [ 0 ]	3635:3:91426:91468	3539356	1	True				
ANR	3539404	AssignmentExpression	data [ l ++ ] = 0x38 | op -> operands [ 0 ] . regs [ 0 ]		3539356	0		=			
ANR	3539405	ArrayIndexing	data [ l ++ ]		3539356	0					
ANR	3539406	Identifier	data		3539356	0					
ANR	3539407	PostIncDecOperationExpression	l ++		3539356	1					
ANR	3539408	Identifier	l		3539356	0					
ANR	3539409	IncDec	++		3539356	1					
ANR	3539410	InclusiveOrExpression	0x38 | op -> operands [ 0 ] . regs [ 0 ]		3539356	1		|			
ANR	3539411	PrimaryExpression	0x38		3539356	0					
ANR	3539412	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3539356	1					
ANR	3539413	MemberAccess	op -> operands [ 0 ] . regs		3539356	0					
ANR	3539414	ArrayIndexing	op -> operands [ 0 ]		3539356	0					
ANR	3539415	PtrMemberAccess	op -> operands		3539356	0					
ANR	3539416	Identifier	op		3539356	0					
ANR	3539417	Identifier	operands		3539356	1					
ANR	3539418	PrimaryExpression	0		3539356	1					
ANR	3539419	Identifier	regs		3539356	1					
ANR	3539420	PrimaryExpression	0		3539356	1					
ANR	3539421	ElseStatement	else		3539356	0					
ANR	3539422	CompoundStatement		9:9:215:215	3539356	0					
ANR	3539423	ReturnStatement	return - 1 ;	3637:3:91484:91493	3539356	0	True				
ANR	3539424	UnaryOperationExpression	- 1		3539356	0					
ANR	3539425	UnaryOperator	-		3539356	0					
ANR	3539426	PrimaryExpression	1		3539356	1					
ANR	3539427	BreakStatement	break ;	3639:2:91501:91506	3539356	2	True				
ANR	3539428	Label	default :	3640:1:91509:91516	3539356	3	True				
ANR	3539429	Identifier	default		3539356	0					
ANR	3539430	ReturnStatement	return - 1 ;	3641:2:91520:91529	3539356	4	True				
ANR	3539431	UnaryOperationExpression	- 1		3539356	0					
ANR	3539432	UnaryOperator	-		3539356	0					
ANR	3539433	PrimaryExpression	1		3539356	1					
ANR	3539434	ReturnStatement	return l ;	3643:1:91535:91543	3539356	2	True				
ANR	3539435	Identifier	l		3539356	0					
ANR	3539436	ReturnType	static int		3539356	1					
ANR	3539437	Identifier	opfnstcw		3539356	2					
ANR	3539438	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3539356	3					
ANR	3539439	Parameter	RAsm * a	3628:20:91225:91231	3539356	0	True				
ANR	3539440	ParameterType	RAsm *		3539356	0					
ANR	3539441	Identifier	a		3539356	1					
ANR	3539442	Parameter	ut8 * data	3628:29:91234:91242	3539356	1	True				
ANR	3539443	ParameterType	ut8 *		3539356	0					
ANR	3539444	Identifier	data		3539356	1					
ANR	3539445	Parameter	const Opcode * op	3628:40:91245:91260	3539356	2	True				
ANR	3539446	ParameterType	const Opcode *		3539356	0					
ANR	3539447	Identifier	op		3539356	1					
ANR	3539448	CFGEntryNode	ENTRY		3539356		True				
ANR	3539449	CFGExitNode	EXIT		3539356		True				
ANR	3539450	Symbol	a		3539356						
ANR	3539451	Symbol	op		3539356						
ANR	3539452	Symbol	OT_WORD		3539356						
ANR	3539453	Symbol	data		3539356						
ANR	3539454	Symbol	* op		3539356						
ANR	3539455	Symbol	* * op -> operands		3539356						
ANR	3539456	Symbol	l		3539356						
ANR	3539457	Symbol	* * op		3539356						
ANR	3539458	Symbol	* op -> operands		3539356						
ANR	3539459	Symbol	op -> operands_count		3539356						
ANR	3539460	Symbol	* op -> operands [ 0 ] . regs		3539356						
ANR	3539461	Symbol	op -> operands [ 0 ] . type		3539356						
ANR	3539462	Symbol	* * * op		3539356						
ANR	3539463	Symbol	op -> operands		3539356						
ANR	3539464	Symbol	OT_MEMORY		3539356						
ANR	3539465	Symbol	* data		3539356						
ANR	3539466	Symbol	op -> operands [ 0 ] . regs		3539356						
ANR	3539467	Function	opfstcw	3646:0:91548:91908							
ANR	3539468	FunctionDef	"opfstcw (RAsm * a , ut8 * data , const Opcode * op)"		3539467	0					
ANR	3539469	CompoundStatement		3646:57:91605:91908	3539467	0					
ANR	3539470	IdentifierDeclStatement	int l = 0 ;	3647:1:91608:91617	3539467	0	True				
ANR	3539471	IdentifierDecl	l = 0		3539467	0					
ANR	3539472	IdentifierDeclType	int		3539467	0					
ANR	3539473	Identifier	l		3539467	1					
ANR	3539474	AssignmentExpression	l = 0		3539467	2		=			
ANR	3539475	Identifier	l		3539467	0					
ANR	3539476	PrimaryExpression	0		3539467	1					
ANR	3539477	SwitchStatement	switch ( op -> operands_count )		3539467	1					
ANR	3539478	Condition	op -> operands_count	3648:9:91628:91645	3539467	0	True				
ANR	3539479	PtrMemberAccess	op -> operands_count		3539467	0					
ANR	3539480	Identifier	op		3539467	0					
ANR	3539481	Identifier	operands_count		3539467	1					
ANR	3539482	CompoundStatement		3:29:42:42	3539467	1					
ANR	3539483	Label	case 1 :	3649:1:91651:91657	3539467	0	True				
ANR	3539484	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_WORD )		3539467	1					
ANR	3539485	Condition	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_WORD	3650:7:91666:91738	3539467	0	True				
ANR	3539486	AndExpression	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_WORD		3539467	0		&&			
ANR	3539487	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3539467	0		&			
ANR	3539488	MemberAccess	op -> operands [ 0 ] . type		3539467	0					
ANR	3539489	ArrayIndexing	op -> operands [ 0 ]		3539467	0					
ANR	3539490	PtrMemberAccess	op -> operands		3539467	0					
ANR	3539491	Identifier	op		3539467	0					
ANR	3539492	Identifier	operands		3539467	1					
ANR	3539493	PrimaryExpression	0		3539467	1					
ANR	3539494	Identifier	type		3539467	1					
ANR	3539495	Identifier	OT_MEMORY		3539467	1					
ANR	3539496	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		3539467	1		&			
ANR	3539497	MemberAccess	op -> operands [ 0 ] . type		3539467	0					
ANR	3539498	ArrayIndexing	op -> operands [ 0 ]		3539467	0					
ANR	3539499	PtrMemberAccess	op -> operands		3539467	0					
ANR	3539500	Identifier	op		3539467	0					
ANR	3539501	Identifier	operands		3539467	1					
ANR	3539502	PrimaryExpression	0		3539467	1					
ANR	3539503	Identifier	type		3539467	1					
ANR	3539504	Identifier	OT_WORD		3539467	1					
ANR	3539505	CompoundStatement		6:40:136:136	3539467	1					
ANR	3539506	ExpressionStatement	data [ l ++ ] = 0x9b	3652:3:91747:91763	3539467	0	True				
ANR	3539507	AssignmentExpression	data [ l ++ ] = 0x9b		3539467	0		=			
ANR	3539508	ArrayIndexing	data [ l ++ ]		3539467	0					
ANR	3539509	Identifier	data		3539467	0					
ANR	3539510	PostIncDecOperationExpression	l ++		3539467	1					
ANR	3539511	Identifier	l		3539467	0					
ANR	3539512	IncDec	++		3539467	1					
ANR	3539513	PrimaryExpression	0x9b		3539467	1					
ANR	3539514	ExpressionStatement	data [ l ++ ] = 0xd9	3653:3:91768:91784	3539467	1	True				
ANR	3539515	AssignmentExpression	data [ l ++ ] = 0xd9		3539467	0		=			
ANR	3539516	ArrayIndexing	data [ l ++ ]		3539467	0					
ANR	3539517	Identifier	data		3539467	0					
ANR	3539518	PostIncDecOperationExpression	l ++		3539467	1					
ANR	3539519	Identifier	l		3539467	0					
ANR	3539520	IncDec	++		3539467	1					
ANR	3539521	PrimaryExpression	0xd9		3539467	1					
ANR	3539522	ExpressionStatement	data [ l ++ ] = 0x38 | op -> operands [ 0 ] . regs [ 0 ]	3654:3:91789:91831	3539467	2	True				
ANR	3539523	AssignmentExpression	data [ l ++ ] = 0x38 | op -> operands [ 0 ] . regs [ 0 ]		3539467	0		=			
ANR	3539524	ArrayIndexing	data [ l ++ ]		3539467	0					
ANR	3539525	Identifier	data		3539467	0					
ANR	3539526	PostIncDecOperationExpression	l ++		3539467	1					
ANR	3539527	Identifier	l		3539467	0					
ANR	3539528	IncDec	++		3539467	1					
ANR	3539529	InclusiveOrExpression	0x38 | op -> operands [ 0 ] . regs [ 0 ]		3539467	1		|			
ANR	3539530	PrimaryExpression	0x38		3539467	0					
ANR	3539531	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3539467	1					
ANR	3539532	MemberAccess	op -> operands [ 0 ] . regs		3539467	0					
ANR	3539533	ArrayIndexing	op -> operands [ 0 ]		3539467	0					
ANR	3539534	PtrMemberAccess	op -> operands		3539467	0					
ANR	3539535	Identifier	op		3539467	0					
ANR	3539536	Identifier	operands		3539467	1					
ANR	3539537	PrimaryExpression	0		3539467	1					
ANR	3539538	Identifier	regs		3539467	1					
ANR	3539539	PrimaryExpression	0		3539467	1					
ANR	3539540	ElseStatement	else		3539467	0					
ANR	3539541	CompoundStatement		10:9:236:236	3539467	0					
ANR	3539542	ReturnStatement	return - 1 ;	3656:3:91847:91856	3539467	0	True				
ANR	3539543	UnaryOperationExpression	- 1		3539467	0					
ANR	3539544	UnaryOperator	-		3539467	0					
ANR	3539545	PrimaryExpression	1		3539467	1					
ANR	3539546	BreakStatement	break ;	3658:2:91864:91869	3539467	2	True				
ANR	3539547	Label	default :	3659:1:91872:91879	3539467	3	True				
ANR	3539548	Identifier	default		3539467	0					
ANR	3539549	ReturnStatement	return - 1 ;	3660:2:91883:91892	3539467	4	True				
ANR	3539550	UnaryOperationExpression	- 1		3539467	0					
ANR	3539551	UnaryOperator	-		3539467	0					
ANR	3539552	PrimaryExpression	1		3539467	1					
ANR	3539553	ReturnStatement	return l ;	3662:1:91898:91906	3539467	2	True				
ANR	3539554	Identifier	l		3539467	0					
ANR	3539555	ReturnType	static int		3539467	1					
ANR	3539556	Identifier	opfstcw		3539467	2					
ANR	3539557	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3539467	3					
ANR	3539558	Parameter	RAsm * a	3646:19:91567:91573	3539467	0	True				
ANR	3539559	ParameterType	RAsm *		3539467	0					
ANR	3539560	Identifier	a		3539467	1					
ANR	3539561	Parameter	ut8 * data	3646:28:91576:91584	3539467	1	True				
ANR	3539562	ParameterType	ut8 *		3539467	0					
ANR	3539563	Identifier	data		3539467	1					
ANR	3539564	Parameter	const Opcode * op	3646:39:91587:91602	3539467	2	True				
ANR	3539565	ParameterType	const Opcode *		3539467	0					
ANR	3539566	Identifier	op		3539467	1					
ANR	3539567	CFGEntryNode	ENTRY		3539467		True				
ANR	3539568	CFGExitNode	EXIT		3539467		True				
ANR	3539569	Symbol	a		3539467						
ANR	3539570	Symbol	op		3539467						
ANR	3539571	Symbol	OT_WORD		3539467						
ANR	3539572	Symbol	data		3539467						
ANR	3539573	Symbol	* op		3539467						
ANR	3539574	Symbol	* * op -> operands		3539467						
ANR	3539575	Symbol	l		3539467						
ANR	3539576	Symbol	* * op		3539467						
ANR	3539577	Symbol	* op -> operands		3539467						
ANR	3539578	Symbol	op -> operands_count		3539467						
ANR	3539579	Symbol	* op -> operands [ 0 ] . regs		3539467						
ANR	3539580	Symbol	op -> operands [ 0 ] . type		3539467						
ANR	3539581	Symbol	* * * op		3539467						
ANR	3539582	Symbol	op -> operands		3539467						
ANR	3539583	Symbol	OT_MEMORY		3539467						
ANR	3539584	Symbol	* data		3539467						
ANR	3539585	Symbol	op -> operands [ 0 ] . regs		3539467						
ANR	3539586	Function	opfnstsw	3665:0:91911:92426							
ANR	3539587	FunctionDef	"opfnstsw (RAsm * a , ut8 * data , const Opcode * op)"		3539586	0					
ANR	3539588	CompoundStatement		3665:58:91969:92426	3539586	0					
ANR	3539589	IdentifierDeclStatement	int l = 0 ;	3666:1:91972:91981	3539586	0	True				
ANR	3539590	IdentifierDecl	l = 0		3539586	0					
ANR	3539591	IdentifierDeclType	int		3539586	0					
ANR	3539592	Identifier	l		3539586	1					
ANR	3539593	AssignmentExpression	l = 0		3539586	2		=			
ANR	3539594	Identifier	l		3539586	0					
ANR	3539595	PrimaryExpression	0		3539586	1					
ANR	3539596	SwitchStatement	switch ( op -> operands_count )		3539586	1					
ANR	3539597	Condition	op -> operands_count	3667:9:91992:92009	3539586	0	True				
ANR	3539598	PtrMemberAccess	op -> operands_count		3539586	0					
ANR	3539599	Identifier	op		3539586	0					
ANR	3539600	Identifier	operands_count		3539586	1					
ANR	3539601	CompoundStatement		3:29:42:42	3539586	1					
ANR	3539602	Label	case 1 :	3668:1:92015:92021	3539586	0	True				
ANR	3539603	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_WORD )		3539586	1					
ANR	3539604	Condition	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_WORD	3669:7:92030:92102	3539586	0	True				
ANR	3539605	AndExpression	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_WORD		3539586	0		&&			
ANR	3539606	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3539586	0		&			
ANR	3539607	MemberAccess	op -> operands [ 0 ] . type		3539586	0					
ANR	3539608	ArrayIndexing	op -> operands [ 0 ]		3539586	0					
ANR	3539609	PtrMemberAccess	op -> operands		3539586	0					
ANR	3539610	Identifier	op		3539586	0					
ANR	3539611	Identifier	operands		3539586	1					
ANR	3539612	PrimaryExpression	0		3539586	1					
ANR	3539613	Identifier	type		3539586	1					
ANR	3539614	Identifier	OT_MEMORY		3539586	1					
ANR	3539615	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		3539586	1		&			
ANR	3539616	MemberAccess	op -> operands [ 0 ] . type		3539586	0					
ANR	3539617	ArrayIndexing	op -> operands [ 0 ]		3539586	0					
ANR	3539618	PtrMemberAccess	op -> operands		3539586	0					
ANR	3539619	Identifier	op		3539586	0					
ANR	3539620	Identifier	operands		3539586	1					
ANR	3539621	PrimaryExpression	0		3539586	1					
ANR	3539622	Identifier	type		3539586	1					
ANR	3539623	Identifier	OT_WORD		3539586	1					
ANR	3539624	CompoundStatement		6:40:136:136	3539586	1					
ANR	3539625	ExpressionStatement	data [ l ++ ] = 0xdd	3671:3:92111:92127	3539586	0	True				
ANR	3539626	AssignmentExpression	data [ l ++ ] = 0xdd		3539586	0		=			
ANR	3539627	ArrayIndexing	data [ l ++ ]		3539586	0					
ANR	3539628	Identifier	data		3539586	0					
ANR	3539629	PostIncDecOperationExpression	l ++		3539586	1					
ANR	3539630	Identifier	l		3539586	0					
ANR	3539631	IncDec	++		3539586	1					
ANR	3539632	PrimaryExpression	0xdd		3539586	1					
ANR	3539633	ExpressionStatement	data [ l ++ ] = 0x38 | op -> operands [ 0 ] . regs [ 0 ]	3672:3:92132:92174	3539586	1	True				
ANR	3539634	AssignmentExpression	data [ l ++ ] = 0x38 | op -> operands [ 0 ] . regs [ 0 ]		3539586	0		=			
ANR	3539635	ArrayIndexing	data [ l ++ ]		3539586	0					
ANR	3539636	Identifier	data		3539586	0					
ANR	3539637	PostIncDecOperationExpression	l ++		3539586	1					
ANR	3539638	Identifier	l		3539586	0					
ANR	3539639	IncDec	++		3539586	1					
ANR	3539640	InclusiveOrExpression	0x38 | op -> operands [ 0 ] . regs [ 0 ]		3539586	1		|			
ANR	3539641	PrimaryExpression	0x38		3539586	0					
ANR	3539642	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3539586	1					
ANR	3539643	MemberAccess	op -> operands [ 0 ] . regs		3539586	0					
ANR	3539644	ArrayIndexing	op -> operands [ 0 ]		3539586	0					
ANR	3539645	PtrMemberAccess	op -> operands		3539586	0					
ANR	3539646	Identifier	op		3539586	0					
ANR	3539647	Identifier	operands		3539586	1					
ANR	3539648	PrimaryExpression	0		3539586	1					
ANR	3539649	Identifier	regs		3539586	1					
ANR	3539650	PrimaryExpression	0		3539586	1					
ANR	3539651	ElseStatement	else		3539586	0					
ANR	3539652	IfStatement	if ( op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD && op -> operands [ 0 ] . reg == X86R_AX )		3539586	0					
ANR	3539653	Condition	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD && op -> operands [ 0 ] . reg == X86R_AX	3673:14:92190:92303	3539586	0	True				
ANR	3539654	AndExpression	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD && op -> operands [ 0 ] . reg == X86R_AX		3539586	0		&&			
ANR	3539655	BitAndExpression	op -> operands [ 0 ] . type & OT_GPREG		3539586	0		&			
ANR	3539656	MemberAccess	op -> operands [ 0 ] . type		3539586	0					
ANR	3539657	ArrayIndexing	op -> operands [ 0 ]		3539586	0					
ANR	3539658	PtrMemberAccess	op -> operands		3539586	0					
ANR	3539659	Identifier	op		3539586	0					
ANR	3539660	Identifier	operands		3539586	1					
ANR	3539661	PrimaryExpression	0		3539586	1					
ANR	3539662	Identifier	type		3539586	1					
ANR	3539663	Identifier	OT_GPREG		3539586	1					
ANR	3539664	AndExpression	op -> operands [ 0 ] . type & OT_WORD && op -> operands [ 0 ] . reg == X86R_AX		3539586	1		&&			
ANR	3539665	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		3539586	0		&			
ANR	3539666	MemberAccess	op -> operands [ 0 ] . type		3539586	0					
ANR	3539667	ArrayIndexing	op -> operands [ 0 ]		3539586	0					
ANR	3539668	PtrMemberAccess	op -> operands		3539586	0					
ANR	3539669	Identifier	op		3539586	0					
ANR	3539670	Identifier	operands		3539586	1					
ANR	3539671	PrimaryExpression	0		3539586	1					
ANR	3539672	Identifier	type		3539586	1					
ANR	3539673	Identifier	OT_WORD		3539586	1					
ANR	3539674	EqualityExpression	op -> operands [ 0 ] . reg == X86R_AX		3539586	1		==			
ANR	3539675	MemberAccess	op -> operands [ 0 ] . reg		3539586	0					
ANR	3539676	ArrayIndexing	op -> operands [ 0 ]		3539586	0					
ANR	3539677	PtrMemberAccess	op -> operands		3539586	0					
ANR	3539678	Identifier	op		3539586	0					
ANR	3539679	Identifier	operands		3539586	1					
ANR	3539680	PrimaryExpression	0		3539586	1					
ANR	3539681	Identifier	reg		3539586	1					
ANR	3539682	Identifier	X86R_AX		3539586	1					
ANR	3539683	CompoundStatement		11:40:337:337	3539586	1					
ANR	3539684	ExpressionStatement	data [ l ++ ] = 0xdf	3676:3:92312:92328	3539586	0	True				
ANR	3539685	AssignmentExpression	data [ l ++ ] = 0xdf		3539586	0		=			
ANR	3539686	ArrayIndexing	data [ l ++ ]		3539586	0					
ANR	3539687	Identifier	data		3539586	0					
ANR	3539688	PostIncDecOperationExpression	l ++		3539586	1					
ANR	3539689	Identifier	l		3539586	0					
ANR	3539690	IncDec	++		3539586	1					
ANR	3539691	PrimaryExpression	0xdf		3539586	1					
ANR	3539692	ExpressionStatement	data [ l ++ ] = 0xe0	3677:3:92333:92349	3539586	1	True				
ANR	3539693	AssignmentExpression	data [ l ++ ] = 0xe0		3539586	0		=			
ANR	3539694	ArrayIndexing	data [ l ++ ]		3539586	0					
ANR	3539695	Identifier	data		3539586	0					
ANR	3539696	PostIncDecOperationExpression	l ++		3539586	1					
ANR	3539697	Identifier	l		3539586	0					
ANR	3539698	IncDec	++		3539586	1					
ANR	3539699	PrimaryExpression	0xe0		3539586	1					
ANR	3539700	ElseStatement	else		3539586	0					
ANR	3539701	CompoundStatement		14:9:390:390	3539586	0					
ANR	3539702	ReturnStatement	return - 1 ;	3679:3:92365:92374	3539586	0	True				
ANR	3539703	UnaryOperationExpression	- 1		3539586	0					
ANR	3539704	UnaryOperator	-		3539586	0					
ANR	3539705	PrimaryExpression	1		3539586	1					
ANR	3539706	BreakStatement	break ;	3681:2:92382:92387	3539586	2	True				
ANR	3539707	Label	default :	3682:1:92390:92397	3539586	3	True				
ANR	3539708	Identifier	default		3539586	0					
ANR	3539709	ReturnStatement	return - 1 ;	3683:2:92401:92410	3539586	4	True				
ANR	3539710	UnaryOperationExpression	- 1		3539586	0					
ANR	3539711	UnaryOperator	-		3539586	0					
ANR	3539712	PrimaryExpression	1		3539586	1					
ANR	3539713	ReturnStatement	return l ;	3685:1:92416:92424	3539586	2	True				
ANR	3539714	Identifier	l		3539586	0					
ANR	3539715	ReturnType	static int		3539586	1					
ANR	3539716	Identifier	opfnstsw		3539586	2					
ANR	3539717	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3539586	3					
ANR	3539718	Parameter	RAsm * a	3665:20:91931:91937	3539586	0	True				
ANR	3539719	ParameterType	RAsm *		3539586	0					
ANR	3539720	Identifier	a		3539586	1					
ANR	3539721	Parameter	ut8 * data	3665:29:91940:91948	3539586	1	True				
ANR	3539722	ParameterType	ut8 *		3539586	0					
ANR	3539723	Identifier	data		3539586	1					
ANR	3539724	Parameter	const Opcode * op	3665:40:91951:91966	3539586	2	True				
ANR	3539725	ParameterType	const Opcode *		3539586	0					
ANR	3539726	Identifier	op		3539586	1					
ANR	3539727	CFGEntryNode	ENTRY		3539586		True				
ANR	3539728	CFGExitNode	EXIT		3539586		True				
ANR	3539729	Symbol	a		3539586						
ANR	3539730	Symbol	op		3539586						
ANR	3539731	Symbol	OT_WORD		3539586						
ANR	3539732	Symbol	OT_GPREG		3539586						
ANR	3539733	Symbol	data		3539586						
ANR	3539734	Symbol	* op		3539586						
ANR	3539735	Symbol	X86R_AX		3539586						
ANR	3539736	Symbol	* * op -> operands		3539586						
ANR	3539737	Symbol	l		3539586						
ANR	3539738	Symbol	* * op		3539586						
ANR	3539739	Symbol	* op -> operands		3539586						
ANR	3539740	Symbol	op -> operands_count		3539586						
ANR	3539741	Symbol	* op -> operands [ 0 ] . regs		3539586						
ANR	3539742	Symbol	op -> operands [ 0 ] . type		3539586						
ANR	3539743	Symbol	* * * op		3539586						
ANR	3539744	Symbol	op -> operands [ 0 ] . reg		3539586						
ANR	3539745	Symbol	op -> operands		3539586						
ANR	3539746	Symbol	OT_MEMORY		3539586						
ANR	3539747	Symbol	* data		3539586						
ANR	3539748	Symbol	op -> operands [ 0 ] . regs		3539586						
ANR	3539749	Function	opfstsw	3688:0:92429:92985							
ANR	3539750	FunctionDef	"opfstsw (RAsm * a , ut8 * data , const Opcode * op)"		3539749	0					
ANR	3539751	CompoundStatement		3688:57:92486:92985	3539749	0					
ANR	3539752	IdentifierDeclStatement	int l = 0 ;	3689:1:92489:92498	3539749	0	True				
ANR	3539753	IdentifierDecl	l = 0		3539749	0					
ANR	3539754	IdentifierDeclType	int		3539749	0					
ANR	3539755	Identifier	l		3539749	1					
ANR	3539756	AssignmentExpression	l = 0		3539749	2		=			
ANR	3539757	Identifier	l		3539749	0					
ANR	3539758	PrimaryExpression	0		3539749	1					
ANR	3539759	SwitchStatement	switch ( op -> operands_count )		3539749	1					
ANR	3539760	Condition	op -> operands_count	3690:9:92509:92526	3539749	0	True				
ANR	3539761	PtrMemberAccess	op -> operands_count		3539749	0					
ANR	3539762	Identifier	op		3539749	0					
ANR	3539763	Identifier	operands_count		3539749	1					
ANR	3539764	CompoundStatement		3:29:42:42	3539749	1					
ANR	3539765	Label	case 1 :	3691:1:92532:92538	3539749	0	True				
ANR	3539766	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_WORD )		3539749	1					
ANR	3539767	Condition	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_WORD	3692:7:92547:92619	3539749	0	True				
ANR	3539768	AndExpression	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_WORD		3539749	0		&&			
ANR	3539769	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3539749	0		&			
ANR	3539770	MemberAccess	op -> operands [ 0 ] . type		3539749	0					
ANR	3539771	ArrayIndexing	op -> operands [ 0 ]		3539749	0					
ANR	3539772	PtrMemberAccess	op -> operands		3539749	0					
ANR	3539773	Identifier	op		3539749	0					
ANR	3539774	Identifier	operands		3539749	1					
ANR	3539775	PrimaryExpression	0		3539749	1					
ANR	3539776	Identifier	type		3539749	1					
ANR	3539777	Identifier	OT_MEMORY		3539749	1					
ANR	3539778	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		3539749	1		&			
ANR	3539779	MemberAccess	op -> operands [ 0 ] . type		3539749	0					
ANR	3539780	ArrayIndexing	op -> operands [ 0 ]		3539749	0					
ANR	3539781	PtrMemberAccess	op -> operands		3539749	0					
ANR	3539782	Identifier	op		3539749	0					
ANR	3539783	Identifier	operands		3539749	1					
ANR	3539784	PrimaryExpression	0		3539749	1					
ANR	3539785	Identifier	type		3539749	1					
ANR	3539786	Identifier	OT_WORD		3539749	1					
ANR	3539787	CompoundStatement		6:40:136:136	3539749	1					
ANR	3539788	ExpressionStatement	data [ l ++ ] = 0x9b	3694:3:92628:92644	3539749	0	True				
ANR	3539789	AssignmentExpression	data [ l ++ ] = 0x9b		3539749	0		=			
ANR	3539790	ArrayIndexing	data [ l ++ ]		3539749	0					
ANR	3539791	Identifier	data		3539749	0					
ANR	3539792	PostIncDecOperationExpression	l ++		3539749	1					
ANR	3539793	Identifier	l		3539749	0					
ANR	3539794	IncDec	++		3539749	1					
ANR	3539795	PrimaryExpression	0x9b		3539749	1					
ANR	3539796	ExpressionStatement	data [ l ++ ] = 0xdd	3695:3:92649:92665	3539749	1	True				
ANR	3539797	AssignmentExpression	data [ l ++ ] = 0xdd		3539749	0		=			
ANR	3539798	ArrayIndexing	data [ l ++ ]		3539749	0					
ANR	3539799	Identifier	data		3539749	0					
ANR	3539800	PostIncDecOperationExpression	l ++		3539749	1					
ANR	3539801	Identifier	l		3539749	0					
ANR	3539802	IncDec	++		3539749	1					
ANR	3539803	PrimaryExpression	0xdd		3539749	1					
ANR	3539804	ExpressionStatement	data [ l ++ ] = 0x38 | op -> operands [ 0 ] . regs [ 0 ]	3696:3:92670:92712	3539749	2	True				
ANR	3539805	AssignmentExpression	data [ l ++ ] = 0x38 | op -> operands [ 0 ] . regs [ 0 ]		3539749	0		=			
ANR	3539806	ArrayIndexing	data [ l ++ ]		3539749	0					
ANR	3539807	Identifier	data		3539749	0					
ANR	3539808	PostIncDecOperationExpression	l ++		3539749	1					
ANR	3539809	Identifier	l		3539749	0					
ANR	3539810	IncDec	++		3539749	1					
ANR	3539811	InclusiveOrExpression	0x38 | op -> operands [ 0 ] . regs [ 0 ]		3539749	1		|			
ANR	3539812	PrimaryExpression	0x38		3539749	0					
ANR	3539813	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3539749	1					
ANR	3539814	MemberAccess	op -> operands [ 0 ] . regs		3539749	0					
ANR	3539815	ArrayIndexing	op -> operands [ 0 ]		3539749	0					
ANR	3539816	PtrMemberAccess	op -> operands		3539749	0					
ANR	3539817	Identifier	op		3539749	0					
ANR	3539818	Identifier	operands		3539749	1					
ANR	3539819	PrimaryExpression	0		3539749	1					
ANR	3539820	Identifier	regs		3539749	1					
ANR	3539821	PrimaryExpression	0		3539749	1					
ANR	3539822	ElseStatement	else		3539749	0					
ANR	3539823	IfStatement	if ( op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD && op -> operands [ 0 ] . reg == X86R_AX )		3539749	0					
ANR	3539824	Condition	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD && op -> operands [ 0 ] . reg == X86R_AX	3697:14:92728:92841	3539749	0	True				
ANR	3539825	AndExpression	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_WORD && op -> operands [ 0 ] . reg == X86R_AX		3539749	0		&&			
ANR	3539826	BitAndExpression	op -> operands [ 0 ] . type & OT_GPREG		3539749	0		&			
ANR	3539827	MemberAccess	op -> operands [ 0 ] . type		3539749	0					
ANR	3539828	ArrayIndexing	op -> operands [ 0 ]		3539749	0					
ANR	3539829	PtrMemberAccess	op -> operands		3539749	0					
ANR	3539830	Identifier	op		3539749	0					
ANR	3539831	Identifier	operands		3539749	1					
ANR	3539832	PrimaryExpression	0		3539749	1					
ANR	3539833	Identifier	type		3539749	1					
ANR	3539834	Identifier	OT_GPREG		3539749	1					
ANR	3539835	AndExpression	op -> operands [ 0 ] . type & OT_WORD && op -> operands [ 0 ] . reg == X86R_AX		3539749	1		&&			
ANR	3539836	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		3539749	0		&			
ANR	3539837	MemberAccess	op -> operands [ 0 ] . type		3539749	0					
ANR	3539838	ArrayIndexing	op -> operands [ 0 ]		3539749	0					
ANR	3539839	PtrMemberAccess	op -> operands		3539749	0					
ANR	3539840	Identifier	op		3539749	0					
ANR	3539841	Identifier	operands		3539749	1					
ANR	3539842	PrimaryExpression	0		3539749	1					
ANR	3539843	Identifier	type		3539749	1					
ANR	3539844	Identifier	OT_WORD		3539749	1					
ANR	3539845	EqualityExpression	op -> operands [ 0 ] . reg == X86R_AX		3539749	1		==			
ANR	3539846	MemberAccess	op -> operands [ 0 ] . reg		3539749	0					
ANR	3539847	ArrayIndexing	op -> operands [ 0 ]		3539749	0					
ANR	3539848	PtrMemberAccess	op -> operands		3539749	0					
ANR	3539849	Identifier	op		3539749	0					
ANR	3539850	Identifier	operands		3539749	1					
ANR	3539851	PrimaryExpression	0		3539749	1					
ANR	3539852	Identifier	reg		3539749	1					
ANR	3539853	Identifier	X86R_AX		3539749	1					
ANR	3539854	CompoundStatement		12:40:358:358	3539749	1					
ANR	3539855	ExpressionStatement	data [ l ++ ] = 0x9b	3700:3:92850:92866	3539749	0	True				
ANR	3539856	AssignmentExpression	data [ l ++ ] = 0x9b		3539749	0		=			
ANR	3539857	ArrayIndexing	data [ l ++ ]		3539749	0					
ANR	3539858	Identifier	data		3539749	0					
ANR	3539859	PostIncDecOperationExpression	l ++		3539749	1					
ANR	3539860	Identifier	l		3539749	0					
ANR	3539861	IncDec	++		3539749	1					
ANR	3539862	PrimaryExpression	0x9b		3539749	1					
ANR	3539863	ExpressionStatement	data [ l ++ ] = 0xdf	3701:3:92871:92887	3539749	1	True				
ANR	3539864	AssignmentExpression	data [ l ++ ] = 0xdf		3539749	0		=			
ANR	3539865	ArrayIndexing	data [ l ++ ]		3539749	0					
ANR	3539866	Identifier	data		3539749	0					
ANR	3539867	PostIncDecOperationExpression	l ++		3539749	1					
ANR	3539868	Identifier	l		3539749	0					
ANR	3539869	IncDec	++		3539749	1					
ANR	3539870	PrimaryExpression	0xdf		3539749	1					
ANR	3539871	ExpressionStatement	data [ l ++ ] = 0xe0	3702:3:92892:92908	3539749	2	True				
ANR	3539872	AssignmentExpression	data [ l ++ ] = 0xe0		3539749	0		=			
ANR	3539873	ArrayIndexing	data [ l ++ ]		3539749	0					
ANR	3539874	Identifier	data		3539749	0					
ANR	3539875	PostIncDecOperationExpression	l ++		3539749	1					
ANR	3539876	Identifier	l		3539749	0					
ANR	3539877	IncDec	++		3539749	1					
ANR	3539878	PrimaryExpression	0xe0		3539749	1					
ANR	3539879	ElseStatement	else		3539749	0					
ANR	3539880	CompoundStatement		16:9:432:432	3539749	0					
ANR	3539881	ReturnStatement	return - 1 ;	3704:3:92924:92933	3539749	0	True				
ANR	3539882	UnaryOperationExpression	- 1		3539749	0					
ANR	3539883	UnaryOperator	-		3539749	0					
ANR	3539884	PrimaryExpression	1		3539749	1					
ANR	3539885	BreakStatement	break ;	3706:2:92941:92946	3539749	2	True				
ANR	3539886	Label	default :	3707:1:92949:92956	3539749	3	True				
ANR	3539887	Identifier	default		3539749	0					
ANR	3539888	ReturnStatement	return - 1 ;	3708:2:92960:92969	3539749	4	True				
ANR	3539889	UnaryOperationExpression	- 1		3539749	0					
ANR	3539890	UnaryOperator	-		3539749	0					
ANR	3539891	PrimaryExpression	1		3539749	1					
ANR	3539892	ReturnStatement	return l ;	3710:1:92975:92983	3539749	2	True				
ANR	3539893	Identifier	l		3539749	0					
ANR	3539894	ReturnType	static int		3539749	1					
ANR	3539895	Identifier	opfstsw		3539749	2					
ANR	3539896	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3539749	3					
ANR	3539897	Parameter	RAsm * a	3688:19:92448:92454	3539749	0	True				
ANR	3539898	ParameterType	RAsm *		3539749	0					
ANR	3539899	Identifier	a		3539749	1					
ANR	3539900	Parameter	ut8 * data	3688:28:92457:92465	3539749	1	True				
ANR	3539901	ParameterType	ut8 *		3539749	0					
ANR	3539902	Identifier	data		3539749	1					
ANR	3539903	Parameter	const Opcode * op	3688:39:92468:92483	3539749	2	True				
ANR	3539904	ParameterType	const Opcode *		3539749	0					
ANR	3539905	Identifier	op		3539749	1					
ANR	3539906	CFGEntryNode	ENTRY		3539749		True				
ANR	3539907	CFGExitNode	EXIT		3539749		True				
ANR	3539908	Symbol	a		3539749						
ANR	3539909	Symbol	op		3539749						
ANR	3539910	Symbol	OT_WORD		3539749						
ANR	3539911	Symbol	OT_GPREG		3539749						
ANR	3539912	Symbol	data		3539749						
ANR	3539913	Symbol	* op		3539749						
ANR	3539914	Symbol	X86R_AX		3539749						
ANR	3539915	Symbol	* * op -> operands		3539749						
ANR	3539916	Symbol	l		3539749						
ANR	3539917	Symbol	* * op		3539749						
ANR	3539918	Symbol	* op -> operands		3539749						
ANR	3539919	Symbol	op -> operands_count		3539749						
ANR	3539920	Symbol	* op -> operands [ 0 ] . regs		3539749						
ANR	3539921	Symbol	op -> operands [ 0 ] . type		3539749						
ANR	3539922	Symbol	* * * op		3539749						
ANR	3539923	Symbol	op -> operands [ 0 ] . reg		3539749						
ANR	3539924	Symbol	op -> operands		3539749						
ANR	3539925	Symbol	OT_MEMORY		3539749						
ANR	3539926	Symbol	* data		3539749						
ANR	3539927	Symbol	op -> operands [ 0 ] . regs		3539749						
ANR	3539928	Function	opfnsave	3713:0:92988:93329							
ANR	3539929	FunctionDef	"opfnsave (RAsm * a , ut8 * data , const Opcode * op)"		3539928	0					
ANR	3539930	CompoundStatement		3713:58:93046:93329	3539928	0					
ANR	3539931	IdentifierDeclStatement	int l = 0 ;	3714:1:93049:93058	3539928	0	True				
ANR	3539932	IdentifierDecl	l = 0		3539928	0					
ANR	3539933	IdentifierDeclType	int		3539928	0					
ANR	3539934	Identifier	l		3539928	1					
ANR	3539935	AssignmentExpression	l = 0		3539928	2		=			
ANR	3539936	Identifier	l		3539928	0					
ANR	3539937	PrimaryExpression	0		3539928	1					
ANR	3539938	SwitchStatement	switch ( op -> operands_count )		3539928	1					
ANR	3539939	Condition	op -> operands_count	3715:9:93069:93086	3539928	0	True				
ANR	3539940	PtrMemberAccess	op -> operands_count		3539928	0					
ANR	3539941	Identifier	op		3539928	0					
ANR	3539942	Identifier	operands_count		3539928	1					
ANR	3539943	CompoundStatement		3:29:42:42	3539928	1					
ANR	3539944	Label	case 1 :	3716:1:93092:93098	3539928	0	True				
ANR	3539945	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_DWORD )		3539928	1					
ANR	3539946	Condition	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_DWORD	3717:7:93107:93180	3539928	0	True				
ANR	3539947	AndExpression	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_DWORD		3539928	0		&&			
ANR	3539948	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3539928	0		&			
ANR	3539949	MemberAccess	op -> operands [ 0 ] . type		3539928	0					
ANR	3539950	ArrayIndexing	op -> operands [ 0 ]		3539928	0					
ANR	3539951	PtrMemberAccess	op -> operands		3539928	0					
ANR	3539952	Identifier	op		3539928	0					
ANR	3539953	Identifier	operands		3539928	1					
ANR	3539954	PrimaryExpression	0		3539928	1					
ANR	3539955	Identifier	type		3539928	1					
ANR	3539956	Identifier	OT_MEMORY		3539928	1					
ANR	3539957	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		3539928	1		&			
ANR	3539958	MemberAccess	op -> operands [ 0 ] . type		3539928	0					
ANR	3539959	ArrayIndexing	op -> operands [ 0 ]		3539928	0					
ANR	3539960	PtrMemberAccess	op -> operands		3539928	0					
ANR	3539961	Identifier	op		3539928	0					
ANR	3539962	Identifier	operands		3539928	1					
ANR	3539963	PrimaryExpression	0		3539928	1					
ANR	3539964	Identifier	type		3539928	1					
ANR	3539965	Identifier	OT_DWORD		3539928	1					
ANR	3539966	CompoundStatement		6:41:137:137	3539928	1					
ANR	3539967	ExpressionStatement	data [ l ++ ] = 0xdd	3719:3:93189:93205	3539928	0	True				
ANR	3539968	AssignmentExpression	data [ l ++ ] = 0xdd		3539928	0		=			
ANR	3539969	ArrayIndexing	data [ l ++ ]		3539928	0					
ANR	3539970	Identifier	data		3539928	0					
ANR	3539971	PostIncDecOperationExpression	l ++		3539928	1					
ANR	3539972	Identifier	l		3539928	0					
ANR	3539973	IncDec	++		3539928	1					
ANR	3539974	PrimaryExpression	0xdd		3539928	1					
ANR	3539975	ExpressionStatement	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]	3720:3:93210:93252	3539928	1	True				
ANR	3539976	AssignmentExpression	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]		3539928	0		=			
ANR	3539977	ArrayIndexing	data [ l ++ ]		3539928	0					
ANR	3539978	Identifier	data		3539928	0					
ANR	3539979	PostIncDecOperationExpression	l ++		3539928	1					
ANR	3539980	Identifier	l		3539928	0					
ANR	3539981	IncDec	++		3539928	1					
ANR	3539982	InclusiveOrExpression	0x30 | op -> operands [ 0 ] . regs [ 0 ]		3539928	1		|			
ANR	3539983	PrimaryExpression	0x30		3539928	0					
ANR	3539984	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3539928	1					
ANR	3539985	MemberAccess	op -> operands [ 0 ] . regs		3539928	0					
ANR	3539986	ArrayIndexing	op -> operands [ 0 ]		3539928	0					
ANR	3539987	PtrMemberAccess	op -> operands		3539928	0					
ANR	3539988	Identifier	op		3539928	0					
ANR	3539989	Identifier	operands		3539928	1					
ANR	3539990	PrimaryExpression	0		3539928	1					
ANR	3539991	Identifier	regs		3539928	1					
ANR	3539992	PrimaryExpression	0		3539928	1					
ANR	3539993	ElseStatement	else		3539928	0					
ANR	3539994	CompoundStatement		9:9:216:216	3539928	0					
ANR	3539995	ReturnStatement	return - 1 ;	3722:3:93268:93277	3539928	0	True				
ANR	3539996	UnaryOperationExpression	- 1		3539928	0					
ANR	3539997	UnaryOperator	-		3539928	0					
ANR	3539998	PrimaryExpression	1		3539928	1					
ANR	3539999	BreakStatement	break ;	3724:2:93285:93290	3539928	2	True				
ANR	3540000	Label	default :	3725:1:93293:93300	3539928	3	True				
ANR	3540001	Identifier	default		3539928	0					
ANR	3540002	ReturnStatement	return - 1 ;	3726:2:93304:93313	3539928	4	True				
ANR	3540003	UnaryOperationExpression	- 1		3539928	0					
ANR	3540004	UnaryOperator	-		3539928	0					
ANR	3540005	PrimaryExpression	1		3539928	1					
ANR	3540006	ReturnStatement	return l ;	3728:1:93319:93327	3539928	2	True				
ANR	3540007	Identifier	l		3539928	0					
ANR	3540008	ReturnType	static int		3539928	1					
ANR	3540009	Identifier	opfnsave		3539928	2					
ANR	3540010	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3539928	3					
ANR	3540011	Parameter	RAsm * a	3713:20:93008:93014	3539928	0	True				
ANR	3540012	ParameterType	RAsm *		3539928	0					
ANR	3540013	Identifier	a		3539928	1					
ANR	3540014	Parameter	ut8 * data	3713:29:93017:93025	3539928	1	True				
ANR	3540015	ParameterType	ut8 *		3539928	0					
ANR	3540016	Identifier	data		3539928	1					
ANR	3540017	Parameter	const Opcode * op	3713:40:93028:93043	3539928	2	True				
ANR	3540018	ParameterType	const Opcode *		3539928	0					
ANR	3540019	Identifier	op		3539928	1					
ANR	3540020	CFGEntryNode	ENTRY		3539928		True				
ANR	3540021	CFGExitNode	EXIT		3539928		True				
ANR	3540022	Symbol	a		3539928						
ANR	3540023	Symbol	op		3539928						
ANR	3540024	Symbol	data		3539928						
ANR	3540025	Symbol	* op		3539928						
ANR	3540026	Symbol	* * op -> operands		3539928						
ANR	3540027	Symbol	l		3539928						
ANR	3540028	Symbol	* * op		3539928						
ANR	3540029	Symbol	* op -> operands		3539928						
ANR	3540030	Symbol	op -> operands_count		3539928						
ANR	3540031	Symbol	* op -> operands [ 0 ] . regs		3539928						
ANR	3540032	Symbol	op -> operands [ 0 ] . type		3539928						
ANR	3540033	Symbol	* * * op		3539928						
ANR	3540034	Symbol	op -> operands		3539928						
ANR	3540035	Symbol	OT_MEMORY		3539928						
ANR	3540036	Symbol	* data		3539928						
ANR	3540037	Symbol	op -> operands [ 0 ] . regs		3539928						
ANR	3540038	Symbol	OT_DWORD		3539928						
ANR	3540039	Function	opfsave	3731:0:93332:93693							
ANR	3540040	FunctionDef	"opfsave (RAsm * a , ut8 * data , const Opcode * op)"		3540039	0					
ANR	3540041	CompoundStatement		3731:57:93389:93693	3540039	0					
ANR	3540042	IdentifierDeclStatement	int l = 0 ;	3732:1:93392:93401	3540039	0	True				
ANR	3540043	IdentifierDecl	l = 0		3540039	0					
ANR	3540044	IdentifierDeclType	int		3540039	0					
ANR	3540045	Identifier	l		3540039	1					
ANR	3540046	AssignmentExpression	l = 0		3540039	2		=			
ANR	3540047	Identifier	l		3540039	0					
ANR	3540048	PrimaryExpression	0		3540039	1					
ANR	3540049	SwitchStatement	switch ( op -> operands_count )		3540039	1					
ANR	3540050	Condition	op -> operands_count	3733:9:93412:93429	3540039	0	True				
ANR	3540051	PtrMemberAccess	op -> operands_count		3540039	0					
ANR	3540052	Identifier	op		3540039	0					
ANR	3540053	Identifier	operands_count		3540039	1					
ANR	3540054	CompoundStatement		3:29:42:42	3540039	1					
ANR	3540055	Label	case 1 :	3734:1:93435:93441	3540039	0	True				
ANR	3540056	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_DWORD )		3540039	1					
ANR	3540057	Condition	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_DWORD	3735:7:93450:93523	3540039	0	True				
ANR	3540058	AndExpression	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_DWORD		3540039	0		&&			
ANR	3540059	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3540039	0		&			
ANR	3540060	MemberAccess	op -> operands [ 0 ] . type		3540039	0					
ANR	3540061	ArrayIndexing	op -> operands [ 0 ]		3540039	0					
ANR	3540062	PtrMemberAccess	op -> operands		3540039	0					
ANR	3540063	Identifier	op		3540039	0					
ANR	3540064	Identifier	operands		3540039	1					
ANR	3540065	PrimaryExpression	0		3540039	1					
ANR	3540066	Identifier	type		3540039	1					
ANR	3540067	Identifier	OT_MEMORY		3540039	1					
ANR	3540068	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		3540039	1		&			
ANR	3540069	MemberAccess	op -> operands [ 0 ] . type		3540039	0					
ANR	3540070	ArrayIndexing	op -> operands [ 0 ]		3540039	0					
ANR	3540071	PtrMemberAccess	op -> operands		3540039	0					
ANR	3540072	Identifier	op		3540039	0					
ANR	3540073	Identifier	operands		3540039	1					
ANR	3540074	PrimaryExpression	0		3540039	1					
ANR	3540075	Identifier	type		3540039	1					
ANR	3540076	Identifier	OT_DWORD		3540039	1					
ANR	3540077	CompoundStatement		6:41:137:137	3540039	1					
ANR	3540078	ExpressionStatement	data [ l ++ ] = 0x9b	3737:3:93532:93548	3540039	0	True				
ANR	3540079	AssignmentExpression	data [ l ++ ] = 0x9b		3540039	0		=			
ANR	3540080	ArrayIndexing	data [ l ++ ]		3540039	0					
ANR	3540081	Identifier	data		3540039	0					
ANR	3540082	PostIncDecOperationExpression	l ++		3540039	1					
ANR	3540083	Identifier	l		3540039	0					
ANR	3540084	IncDec	++		3540039	1					
ANR	3540085	PrimaryExpression	0x9b		3540039	1					
ANR	3540086	ExpressionStatement	data [ l ++ ] = 0xdd	3738:3:93553:93569	3540039	1	True				
ANR	3540087	AssignmentExpression	data [ l ++ ] = 0xdd		3540039	0		=			
ANR	3540088	ArrayIndexing	data [ l ++ ]		3540039	0					
ANR	3540089	Identifier	data		3540039	0					
ANR	3540090	PostIncDecOperationExpression	l ++		3540039	1					
ANR	3540091	Identifier	l		3540039	0					
ANR	3540092	IncDec	++		3540039	1					
ANR	3540093	PrimaryExpression	0xdd		3540039	1					
ANR	3540094	ExpressionStatement	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]	3739:3:93574:93616	3540039	2	True				
ANR	3540095	AssignmentExpression	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]		3540039	0		=			
ANR	3540096	ArrayIndexing	data [ l ++ ]		3540039	0					
ANR	3540097	Identifier	data		3540039	0					
ANR	3540098	PostIncDecOperationExpression	l ++		3540039	1					
ANR	3540099	Identifier	l		3540039	0					
ANR	3540100	IncDec	++		3540039	1					
ANR	3540101	InclusiveOrExpression	0x30 | op -> operands [ 0 ] . regs [ 0 ]		3540039	1		|			
ANR	3540102	PrimaryExpression	0x30		3540039	0					
ANR	3540103	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3540039	1					
ANR	3540104	MemberAccess	op -> operands [ 0 ] . regs		3540039	0					
ANR	3540105	ArrayIndexing	op -> operands [ 0 ]		3540039	0					
ANR	3540106	PtrMemberAccess	op -> operands		3540039	0					
ANR	3540107	Identifier	op		3540039	0					
ANR	3540108	Identifier	operands		3540039	1					
ANR	3540109	PrimaryExpression	0		3540039	1					
ANR	3540110	Identifier	regs		3540039	1					
ANR	3540111	PrimaryExpression	0		3540039	1					
ANR	3540112	ElseStatement	else		3540039	0					
ANR	3540113	CompoundStatement		10:9:237:237	3540039	0					
ANR	3540114	ReturnStatement	return - 1 ;	3741:3:93632:93641	3540039	0	True				
ANR	3540115	UnaryOperationExpression	- 1		3540039	0					
ANR	3540116	UnaryOperator	-		3540039	0					
ANR	3540117	PrimaryExpression	1		3540039	1					
ANR	3540118	BreakStatement	break ;	3743:2:93649:93654	3540039	2	True				
ANR	3540119	Label	default :	3744:1:93657:93664	3540039	3	True				
ANR	3540120	Identifier	default		3540039	0					
ANR	3540121	ReturnStatement	return - 1 ;	3745:2:93668:93677	3540039	4	True				
ANR	3540122	UnaryOperationExpression	- 1		3540039	0					
ANR	3540123	UnaryOperator	-		3540039	0					
ANR	3540124	PrimaryExpression	1		3540039	1					
ANR	3540125	ReturnStatement	return l ;	3747:1:93683:93691	3540039	2	True				
ANR	3540126	Identifier	l		3540039	0					
ANR	3540127	ReturnType	static int		3540039	1					
ANR	3540128	Identifier	opfsave		3540039	2					
ANR	3540129	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3540039	3					
ANR	3540130	Parameter	RAsm * a	3731:19:93351:93357	3540039	0	True				
ANR	3540131	ParameterType	RAsm *		3540039	0					
ANR	3540132	Identifier	a		3540039	1					
ANR	3540133	Parameter	ut8 * data	3731:28:93360:93368	3540039	1	True				
ANR	3540134	ParameterType	ut8 *		3540039	0					
ANR	3540135	Identifier	data		3540039	1					
ANR	3540136	Parameter	const Opcode * op	3731:39:93371:93386	3540039	2	True				
ANR	3540137	ParameterType	const Opcode *		3540039	0					
ANR	3540138	Identifier	op		3540039	1					
ANR	3540139	CFGEntryNode	ENTRY		3540039		True				
ANR	3540140	CFGExitNode	EXIT		3540039		True				
ANR	3540141	Symbol	a		3540039						
ANR	3540142	Symbol	op		3540039						
ANR	3540143	Symbol	data		3540039						
ANR	3540144	Symbol	* op		3540039						
ANR	3540145	Symbol	* * op -> operands		3540039						
ANR	3540146	Symbol	l		3540039						
ANR	3540147	Symbol	* * op		3540039						
ANR	3540148	Symbol	* op -> operands		3540039						
ANR	3540149	Symbol	op -> operands_count		3540039						
ANR	3540150	Symbol	* op -> operands [ 0 ] . regs		3540039						
ANR	3540151	Symbol	op -> operands [ 0 ] . type		3540039						
ANR	3540152	Symbol	* * * op		3540039						
ANR	3540153	Symbol	op -> operands		3540039						
ANR	3540154	Symbol	OT_MEMORY		3540039						
ANR	3540155	Symbol	* data		3540039						
ANR	3540156	Symbol	op -> operands [ 0 ] . regs		3540039						
ANR	3540157	Symbol	OT_DWORD		3540039						
ANR	3540158	Function	oplldt	3750:0:93696:94119							
ANR	3540159	FunctionDef	"oplldt (RAsm * a , ut8 * data , const Opcode * op)"		3540158	0					
ANR	3540160	CompoundStatement		3750:56:93752:94119	3540158	0					
ANR	3540161	IdentifierDeclStatement	int l = 0 ;	3751:1:93755:93764	3540158	0	True				
ANR	3540162	IdentifierDecl	l = 0		3540158	0					
ANR	3540163	IdentifierDeclType	int		3540158	0					
ANR	3540164	Identifier	l		3540158	1					
ANR	3540165	AssignmentExpression	l = 0		3540158	2		=			
ANR	3540166	Identifier	l		3540158	0					
ANR	3540167	PrimaryExpression	0		3540158	1					
ANR	3540168	SwitchStatement	switch ( op -> operands_count )		3540158	1					
ANR	3540169	Condition	op -> operands_count	3752:9:93775:93792	3540158	0	True				
ANR	3540170	PtrMemberAccess	op -> operands_count		3540158	0					
ANR	3540171	Identifier	op		3540158	0					
ANR	3540172	Identifier	operands_count		3540158	1					
ANR	3540173	CompoundStatement		3:29:42:42	3540158	1					
ANR	3540174	Label	case 1 :	3753:1:93798:93804	3540158	0	True				
ANR	3540175	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		3540158	1					
ANR	3540176	Condition	op -> operands [ 0 ] . type & OT_WORD	3754:7:93813:93842	3540158	0	True				
ANR	3540177	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		3540158	0		&			
ANR	3540178	MemberAccess	op -> operands [ 0 ] . type		3540158	0					
ANR	3540179	ArrayIndexing	op -> operands [ 0 ]		3540158	0					
ANR	3540180	PtrMemberAccess	op -> operands		3540158	0					
ANR	3540181	Identifier	op		3540158	0					
ANR	3540182	Identifier	operands		3540158	1					
ANR	3540183	PrimaryExpression	0		3540158	1					
ANR	3540184	Identifier	type		3540158	1					
ANR	3540185	Identifier	OT_WORD		3540158	1					
ANR	3540186	CompoundStatement		5:40:93:93	3540158	1					
ANR	3540187	ExpressionStatement	data [ l ++ ] = 0x0f	3755:3:93851:93867	3540158	0	True				
ANR	3540188	AssignmentExpression	data [ l ++ ] = 0x0f		3540158	0		=			
ANR	3540189	ArrayIndexing	data [ l ++ ]		3540158	0					
ANR	3540190	Identifier	data		3540158	0					
ANR	3540191	PostIncDecOperationExpression	l ++		3540158	1					
ANR	3540192	Identifier	l		3540158	0					
ANR	3540193	IncDec	++		3540158	1					
ANR	3540194	PrimaryExpression	0x0f		3540158	1					
ANR	3540195	ExpressionStatement	data [ l ++ ] = 0x00	3756:3:93872:93888	3540158	1	True				
ANR	3540196	AssignmentExpression	data [ l ++ ] = 0x00		3540158	0		=			
ANR	3540197	ArrayIndexing	data [ l ++ ]		3540158	0					
ANR	3540198	Identifier	data		3540158	0					
ANR	3540199	PostIncDecOperationExpression	l ++		3540158	1					
ANR	3540200	Identifier	l		3540158	0					
ANR	3540201	IncDec	++		3540158	1					
ANR	3540202	PrimaryExpression	0x00		3540158	1					
ANR	3540203	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3540158	2					
ANR	3540204	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3757:8:93898:93929	3540158	0	True				
ANR	3540205	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3540158	0		&			
ANR	3540206	MemberAccess	op -> operands [ 0 ] . type		3540158	0					
ANR	3540207	ArrayIndexing	op -> operands [ 0 ]		3540158	0					
ANR	3540208	PtrMemberAccess	op -> operands		3540158	0					
ANR	3540209	Identifier	op		3540158	0					
ANR	3540210	Identifier	operands		3540158	1					
ANR	3540211	PrimaryExpression	0		3540158	1					
ANR	3540212	Identifier	type		3540158	1					
ANR	3540213	Identifier	OT_MEMORY		3540158	1					
ANR	3540214	CompoundStatement		8:43:180:180	3540158	1					
ANR	3540215	ExpressionStatement	data [ l ++ ] = 0x10 | op -> operands [ 0 ] . regs [ 0 ]	3758:4:93939:93981	3540158	0	True				
ANR	3540216	AssignmentExpression	data [ l ++ ] = 0x10 | op -> operands [ 0 ] . regs [ 0 ]		3540158	0		=			
ANR	3540217	ArrayIndexing	data [ l ++ ]		3540158	0					
ANR	3540218	Identifier	data		3540158	0					
ANR	3540219	PostIncDecOperationExpression	l ++		3540158	1					
ANR	3540220	Identifier	l		3540158	0					
ANR	3540221	IncDec	++		3540158	1					
ANR	3540222	InclusiveOrExpression	0x10 | op -> operands [ 0 ] . regs [ 0 ]		3540158	1		|			
ANR	3540223	PrimaryExpression	0x10		3540158	0					
ANR	3540224	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3540158	1					
ANR	3540225	MemberAccess	op -> operands [ 0 ] . regs		3540158	0					
ANR	3540226	ArrayIndexing	op -> operands [ 0 ]		3540158	0					
ANR	3540227	PtrMemberAccess	op -> operands		3540158	0					
ANR	3540228	Identifier	op		3540158	0					
ANR	3540229	Identifier	operands		3540158	1					
ANR	3540230	PrimaryExpression	0		3540158	1					
ANR	3540231	Identifier	regs		3540158	1					
ANR	3540232	PrimaryExpression	0		3540158	1					
ANR	3540233	ElseStatement	else		3540158	0					
ANR	3540234	CompoundStatement		10:10:240:240	3540158	0					
ANR	3540235	ExpressionStatement	data [ l ++ ] = 0xd0 | op -> operands [ 0 ] . reg	3760:4:93999:94037	3540158	0	True				
ANR	3540236	AssignmentExpression	data [ l ++ ] = 0xd0 | op -> operands [ 0 ] . reg		3540158	0		=			
ANR	3540237	ArrayIndexing	data [ l ++ ]		3540158	0					
ANR	3540238	Identifier	data		3540158	0					
ANR	3540239	PostIncDecOperationExpression	l ++		3540158	1					
ANR	3540240	Identifier	l		3540158	0					
ANR	3540241	IncDec	++		3540158	1					
ANR	3540242	InclusiveOrExpression	0xd0 | op -> operands [ 0 ] . reg		3540158	1		|			
ANR	3540243	PrimaryExpression	0xd0		3540158	0					
ANR	3540244	MemberAccess	op -> operands [ 0 ] . reg		3540158	1					
ANR	3540245	ArrayIndexing	op -> operands [ 0 ]		3540158	0					
ANR	3540246	PtrMemberAccess	op -> operands		3540158	0					
ANR	3540247	Identifier	op		3540158	0					
ANR	3540248	Identifier	operands		3540158	1					
ANR	3540249	PrimaryExpression	0		3540158	1					
ANR	3540250	Identifier	reg		3540158	1					
ANR	3540251	ElseStatement	else		3540158	0					
ANR	3540252	CompoundStatement		13:9:300:300	3540158	0					
ANR	3540253	ReturnStatement	return - 1 ;	3763:3:94058:94067	3540158	0	True				
ANR	3540254	UnaryOperationExpression	- 1		3540158	0					
ANR	3540255	UnaryOperator	-		3540158	0					
ANR	3540256	PrimaryExpression	1		3540158	1					
ANR	3540257	BreakStatement	break ;	3765:2:94075:94080	3540158	2	True				
ANR	3540258	Label	default :	3766:1:94083:94090	3540158	3	True				
ANR	3540259	Identifier	default		3540158	0					
ANR	3540260	ReturnStatement	return - 1 ;	3767:2:94094:94103	3540158	4	True				
ANR	3540261	UnaryOperationExpression	- 1		3540158	0					
ANR	3540262	UnaryOperator	-		3540158	0					
ANR	3540263	PrimaryExpression	1		3540158	1					
ANR	3540264	ReturnStatement	return l ;	3769:1:94109:94117	3540158	2	True				
ANR	3540265	Identifier	l		3540158	0					
ANR	3540266	ReturnType	static int		3540158	1					
ANR	3540267	Identifier	oplldt		3540158	2					
ANR	3540268	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3540158	3					
ANR	3540269	Parameter	RAsm * a	3750:18:93714:93720	3540158	0	True				
ANR	3540270	ParameterType	RAsm *		3540158	0					
ANR	3540271	Identifier	a		3540158	1					
ANR	3540272	Parameter	ut8 * data	3750:27:93723:93731	3540158	1	True				
ANR	3540273	ParameterType	ut8 *		3540158	0					
ANR	3540274	Identifier	data		3540158	1					
ANR	3540275	Parameter	const Opcode * op	3750:38:93734:93749	3540158	2	True				
ANR	3540276	ParameterType	const Opcode *		3540158	0					
ANR	3540277	Identifier	op		3540158	1					
ANR	3540278	CFGEntryNode	ENTRY		3540158		True				
ANR	3540279	CFGExitNode	EXIT		3540158		True				
ANR	3540280	Symbol	a		3540158						
ANR	3540281	Symbol	op		3540158						
ANR	3540282	Symbol	OT_WORD		3540158						
ANR	3540283	Symbol	data		3540158						
ANR	3540284	Symbol	* op		3540158						
ANR	3540285	Symbol	* * op -> operands		3540158						
ANR	3540286	Symbol	l		3540158						
ANR	3540287	Symbol	* * op		3540158						
ANR	3540288	Symbol	* op -> operands		3540158						
ANR	3540289	Symbol	op -> operands_count		3540158						
ANR	3540290	Symbol	* op -> operands [ 0 ] . regs		3540158						
ANR	3540291	Symbol	op -> operands [ 0 ] . type		3540158						
ANR	3540292	Symbol	* * * op		3540158						
ANR	3540293	Symbol	op -> operands [ 0 ] . reg		3540158						
ANR	3540294	Symbol	op -> operands		3540158						
ANR	3540295	Symbol	* data		3540158						
ANR	3540296	Symbol	OT_MEMORY		3540158						
ANR	3540297	Symbol	op -> operands [ 0 ] . regs		3540158						
ANR	3540298	Function	oplmsw	3772:0:94122:94545							
ANR	3540299	FunctionDef	"oplmsw (RAsm * a , ut8 * data , const Opcode * op)"		3540298	0					
ANR	3540300	CompoundStatement		3772:56:94178:94545	3540298	0					
ANR	3540301	IdentifierDeclStatement	int l = 0 ;	3773:1:94181:94190	3540298	0	True				
ANR	3540302	IdentifierDecl	l = 0		3540298	0					
ANR	3540303	IdentifierDeclType	int		3540298	0					
ANR	3540304	Identifier	l		3540298	1					
ANR	3540305	AssignmentExpression	l = 0		3540298	2		=			
ANR	3540306	Identifier	l		3540298	0					
ANR	3540307	PrimaryExpression	0		3540298	1					
ANR	3540308	SwitchStatement	switch ( op -> operands_count )		3540298	1					
ANR	3540309	Condition	op -> operands_count	3774:9:94201:94218	3540298	0	True				
ANR	3540310	PtrMemberAccess	op -> operands_count		3540298	0					
ANR	3540311	Identifier	op		3540298	0					
ANR	3540312	Identifier	operands_count		3540298	1					
ANR	3540313	CompoundStatement		3:29:42:42	3540298	1					
ANR	3540314	Label	case 1 :	3775:1:94224:94230	3540298	0	True				
ANR	3540315	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		3540298	1					
ANR	3540316	Condition	op -> operands [ 0 ] . type & OT_WORD	3776:7:94239:94268	3540298	0	True				
ANR	3540317	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		3540298	0		&			
ANR	3540318	MemberAccess	op -> operands [ 0 ] . type		3540298	0					
ANR	3540319	ArrayIndexing	op -> operands [ 0 ]		3540298	0					
ANR	3540320	PtrMemberAccess	op -> operands		3540298	0					
ANR	3540321	Identifier	op		3540298	0					
ANR	3540322	Identifier	operands		3540298	1					
ANR	3540323	PrimaryExpression	0		3540298	1					
ANR	3540324	Identifier	type		3540298	1					
ANR	3540325	Identifier	OT_WORD		3540298	1					
ANR	3540326	CompoundStatement		5:40:93:93	3540298	1					
ANR	3540327	ExpressionStatement	data [ l ++ ] = 0x0f	3777:3:94277:94293	3540298	0	True				
ANR	3540328	AssignmentExpression	data [ l ++ ] = 0x0f		3540298	0		=			
ANR	3540329	ArrayIndexing	data [ l ++ ]		3540298	0					
ANR	3540330	Identifier	data		3540298	0					
ANR	3540331	PostIncDecOperationExpression	l ++		3540298	1					
ANR	3540332	Identifier	l		3540298	0					
ANR	3540333	IncDec	++		3540298	1					
ANR	3540334	PrimaryExpression	0x0f		3540298	1					
ANR	3540335	ExpressionStatement	data [ l ++ ] = 0x01	3778:3:94298:94314	3540298	1	True				
ANR	3540336	AssignmentExpression	data [ l ++ ] = 0x01		3540298	0		=			
ANR	3540337	ArrayIndexing	data [ l ++ ]		3540298	0					
ANR	3540338	Identifier	data		3540298	0					
ANR	3540339	PostIncDecOperationExpression	l ++		3540298	1					
ANR	3540340	Identifier	l		3540298	0					
ANR	3540341	IncDec	++		3540298	1					
ANR	3540342	PrimaryExpression	0x01		3540298	1					
ANR	3540343	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3540298	2					
ANR	3540344	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3779:8:94324:94355	3540298	0	True				
ANR	3540345	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3540298	0		&			
ANR	3540346	MemberAccess	op -> operands [ 0 ] . type		3540298	0					
ANR	3540347	ArrayIndexing	op -> operands [ 0 ]		3540298	0					
ANR	3540348	PtrMemberAccess	op -> operands		3540298	0					
ANR	3540349	Identifier	op		3540298	0					
ANR	3540350	Identifier	operands		3540298	1					
ANR	3540351	PrimaryExpression	0		3540298	1					
ANR	3540352	Identifier	type		3540298	1					
ANR	3540353	Identifier	OT_MEMORY		3540298	1					
ANR	3540354	CompoundStatement		8:43:180:180	3540298	1					
ANR	3540355	ExpressionStatement	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]	3780:4:94365:94407	3540298	0	True				
ANR	3540356	AssignmentExpression	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]		3540298	0		=			
ANR	3540357	ArrayIndexing	data [ l ++ ]		3540298	0					
ANR	3540358	Identifier	data		3540298	0					
ANR	3540359	PostIncDecOperationExpression	l ++		3540298	1					
ANR	3540360	Identifier	l		3540298	0					
ANR	3540361	IncDec	++		3540298	1					
ANR	3540362	InclusiveOrExpression	0x30 | op -> operands [ 0 ] . regs [ 0 ]		3540298	1		|			
ANR	3540363	PrimaryExpression	0x30		3540298	0					
ANR	3540364	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3540298	1					
ANR	3540365	MemberAccess	op -> operands [ 0 ] . regs		3540298	0					
ANR	3540366	ArrayIndexing	op -> operands [ 0 ]		3540298	0					
ANR	3540367	PtrMemberAccess	op -> operands		3540298	0					
ANR	3540368	Identifier	op		3540298	0					
ANR	3540369	Identifier	operands		3540298	1					
ANR	3540370	PrimaryExpression	0		3540298	1					
ANR	3540371	Identifier	regs		3540298	1					
ANR	3540372	PrimaryExpression	0		3540298	1					
ANR	3540373	ElseStatement	else		3540298	0					
ANR	3540374	CompoundStatement		10:10:240:240	3540298	0					
ANR	3540375	ExpressionStatement	data [ l ++ ] = 0xf0 | op -> operands [ 0 ] . reg	3782:4:94425:94463	3540298	0	True				
ANR	3540376	AssignmentExpression	data [ l ++ ] = 0xf0 | op -> operands [ 0 ] . reg		3540298	0		=			
ANR	3540377	ArrayIndexing	data [ l ++ ]		3540298	0					
ANR	3540378	Identifier	data		3540298	0					
ANR	3540379	PostIncDecOperationExpression	l ++		3540298	1					
ANR	3540380	Identifier	l		3540298	0					
ANR	3540381	IncDec	++		3540298	1					
ANR	3540382	InclusiveOrExpression	0xf0 | op -> operands [ 0 ] . reg		3540298	1		|			
ANR	3540383	PrimaryExpression	0xf0		3540298	0					
ANR	3540384	MemberAccess	op -> operands [ 0 ] . reg		3540298	1					
ANR	3540385	ArrayIndexing	op -> operands [ 0 ]		3540298	0					
ANR	3540386	PtrMemberAccess	op -> operands		3540298	0					
ANR	3540387	Identifier	op		3540298	0					
ANR	3540388	Identifier	operands		3540298	1					
ANR	3540389	PrimaryExpression	0		3540298	1					
ANR	3540390	Identifier	reg		3540298	1					
ANR	3540391	ElseStatement	else		3540298	0					
ANR	3540392	CompoundStatement		13:9:300:300	3540298	0					
ANR	3540393	ReturnStatement	return - 1 ;	3785:3:94484:94493	3540298	0	True				
ANR	3540394	UnaryOperationExpression	- 1		3540298	0					
ANR	3540395	UnaryOperator	-		3540298	0					
ANR	3540396	PrimaryExpression	1		3540298	1					
ANR	3540397	BreakStatement	break ;	3787:2:94501:94506	3540298	2	True				
ANR	3540398	Label	default :	3788:1:94509:94516	3540298	3	True				
ANR	3540399	Identifier	default		3540298	0					
ANR	3540400	ReturnStatement	return - 1 ;	3789:2:94520:94529	3540298	4	True				
ANR	3540401	UnaryOperationExpression	- 1		3540298	0					
ANR	3540402	UnaryOperator	-		3540298	0					
ANR	3540403	PrimaryExpression	1		3540298	1					
ANR	3540404	ReturnStatement	return l ;	3791:1:94535:94543	3540298	2	True				
ANR	3540405	Identifier	l		3540298	0					
ANR	3540406	ReturnType	static int		3540298	1					
ANR	3540407	Identifier	oplmsw		3540298	2					
ANR	3540408	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3540298	3					
ANR	3540409	Parameter	RAsm * a	3772:18:94140:94146	3540298	0	True				
ANR	3540410	ParameterType	RAsm *		3540298	0					
ANR	3540411	Identifier	a		3540298	1					
ANR	3540412	Parameter	ut8 * data	3772:27:94149:94157	3540298	1	True				
ANR	3540413	ParameterType	ut8 *		3540298	0					
ANR	3540414	Identifier	data		3540298	1					
ANR	3540415	Parameter	const Opcode * op	3772:38:94160:94175	3540298	2	True				
ANR	3540416	ParameterType	const Opcode *		3540298	0					
ANR	3540417	Identifier	op		3540298	1					
ANR	3540418	CFGEntryNode	ENTRY		3540298		True				
ANR	3540419	CFGExitNode	EXIT		3540298		True				
ANR	3540420	Symbol	a		3540298						
ANR	3540421	Symbol	op		3540298						
ANR	3540422	Symbol	OT_WORD		3540298						
ANR	3540423	Symbol	data		3540298						
ANR	3540424	Symbol	* op		3540298						
ANR	3540425	Symbol	* * op -> operands		3540298						
ANR	3540426	Symbol	l		3540298						
ANR	3540427	Symbol	* * op		3540298						
ANR	3540428	Symbol	* op -> operands		3540298						
ANR	3540429	Symbol	op -> operands_count		3540298						
ANR	3540430	Symbol	* op -> operands [ 0 ] . regs		3540298						
ANR	3540431	Symbol	op -> operands [ 0 ] . type		3540298						
ANR	3540432	Symbol	* * * op		3540298						
ANR	3540433	Symbol	op -> operands [ 0 ] . reg		3540298						
ANR	3540434	Symbol	op -> operands		3540298						
ANR	3540435	Symbol	* data		3540298						
ANR	3540436	Symbol	OT_MEMORY		3540298						
ANR	3540437	Symbol	op -> operands [ 0 ] . regs		3540298						
ANR	3540438	Function	oplgdt	3794:0:94548:94866							
ANR	3540439	FunctionDef	"oplgdt (RAsm * a , ut8 * data , const Opcode * op)"		3540438	0					
ANR	3540440	CompoundStatement		3794:56:94604:94866	3540438	0					
ANR	3540441	IdentifierDeclStatement	int l = 0 ;	3795:1:94607:94616	3540438	0	True				
ANR	3540442	IdentifierDecl	l = 0		3540438	0					
ANR	3540443	IdentifierDeclType	int		3540438	0					
ANR	3540444	Identifier	l		3540438	1					
ANR	3540445	AssignmentExpression	l = 0		3540438	2		=			
ANR	3540446	Identifier	l		3540438	0					
ANR	3540447	PrimaryExpression	0		3540438	1					
ANR	3540448	SwitchStatement	switch ( op -> operands_count )		3540438	1					
ANR	3540449	Condition	op -> operands_count	3796:9:94627:94644	3540438	0	True				
ANR	3540450	PtrMemberAccess	op -> operands_count		3540438	0					
ANR	3540451	Identifier	op		3540438	0					
ANR	3540452	Identifier	operands_count		3540438	1					
ANR	3540453	CompoundStatement		3:29:42:42	3540438	1					
ANR	3540454	Label	case 1 :	3797:1:94650:94656	3540438	0	True				
ANR	3540455	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3540438	1					
ANR	3540456	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3798:7:94665:94696	3540438	0	True				
ANR	3540457	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3540438	0		&			
ANR	3540458	MemberAccess	op -> operands [ 0 ] . type		3540438	0					
ANR	3540459	ArrayIndexing	op -> operands [ 0 ]		3540438	0					
ANR	3540460	PtrMemberAccess	op -> operands		3540438	0					
ANR	3540461	Identifier	op		3540438	0					
ANR	3540462	Identifier	operands		3540438	1					
ANR	3540463	PrimaryExpression	0		3540438	1					
ANR	3540464	Identifier	type		3540438	1					
ANR	3540465	Identifier	OT_MEMORY		3540438	1					
ANR	3540466	CompoundStatement		5:42:95:95	3540438	1					
ANR	3540467	ExpressionStatement	data [ l ++ ] = 0x0f	3799:3:94705:94721	3540438	0	True				
ANR	3540468	AssignmentExpression	data [ l ++ ] = 0x0f		3540438	0		=			
ANR	3540469	ArrayIndexing	data [ l ++ ]		3540438	0					
ANR	3540470	Identifier	data		3540438	0					
ANR	3540471	PostIncDecOperationExpression	l ++		3540438	1					
ANR	3540472	Identifier	l		3540438	0					
ANR	3540473	IncDec	++		3540438	1					
ANR	3540474	PrimaryExpression	0x0f		3540438	1					
ANR	3540475	ExpressionStatement	data [ l ++ ] = 0x01	3800:3:94726:94742	3540438	1	True				
ANR	3540476	AssignmentExpression	data [ l ++ ] = 0x01		3540438	0		=			
ANR	3540477	ArrayIndexing	data [ l ++ ]		3540438	0					
ANR	3540478	Identifier	data		3540438	0					
ANR	3540479	PostIncDecOperationExpression	l ++		3540438	1					
ANR	3540480	Identifier	l		3540438	0					
ANR	3540481	IncDec	++		3540438	1					
ANR	3540482	PrimaryExpression	0x01		3540438	1					
ANR	3540483	ExpressionStatement	data [ l ++ ] = 0x10 | op -> operands [ 0 ] . regs [ 0 ]	3801:3:94747:94789	3540438	2	True				
ANR	3540484	AssignmentExpression	data [ l ++ ] = 0x10 | op -> operands [ 0 ] . regs [ 0 ]		3540438	0		=			
ANR	3540485	ArrayIndexing	data [ l ++ ]		3540438	0					
ANR	3540486	Identifier	data		3540438	0					
ANR	3540487	PostIncDecOperationExpression	l ++		3540438	1					
ANR	3540488	Identifier	l		3540438	0					
ANR	3540489	IncDec	++		3540438	1					
ANR	3540490	InclusiveOrExpression	0x10 | op -> operands [ 0 ] . regs [ 0 ]		3540438	1		|			
ANR	3540491	PrimaryExpression	0x10		3540438	0					
ANR	3540492	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3540438	1					
ANR	3540493	MemberAccess	op -> operands [ 0 ] . regs		3540438	0					
ANR	3540494	ArrayIndexing	op -> operands [ 0 ]		3540438	0					
ANR	3540495	PtrMemberAccess	op -> operands		3540438	0					
ANR	3540496	Identifier	op		3540438	0					
ANR	3540497	Identifier	operands		3540438	1					
ANR	3540498	PrimaryExpression	0		3540438	1					
ANR	3540499	Identifier	regs		3540438	1					
ANR	3540500	PrimaryExpression	0		3540438	1					
ANR	3540501	ElseStatement	else		3540438	0					
ANR	3540502	CompoundStatement		9:9:195:195	3540438	0					
ANR	3540503	ReturnStatement	return - 1 ;	3803:3:94805:94814	3540438	0	True				
ANR	3540504	UnaryOperationExpression	- 1		3540438	0					
ANR	3540505	UnaryOperator	-		3540438	0					
ANR	3540506	PrimaryExpression	1		3540438	1					
ANR	3540507	BreakStatement	break ;	3805:2:94822:94827	3540438	2	True				
ANR	3540508	Label	default :	3806:1:94830:94837	3540438	3	True				
ANR	3540509	Identifier	default		3540438	0					
ANR	3540510	ReturnStatement	return - 1 ;	3807:2:94841:94850	3540438	4	True				
ANR	3540511	UnaryOperationExpression	- 1		3540438	0					
ANR	3540512	UnaryOperator	-		3540438	0					
ANR	3540513	PrimaryExpression	1		3540438	1					
ANR	3540514	ReturnStatement	return l ;	3809:1:94856:94864	3540438	2	True				
ANR	3540515	Identifier	l		3540438	0					
ANR	3540516	ReturnType	static int		3540438	1					
ANR	3540517	Identifier	oplgdt		3540438	2					
ANR	3540518	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3540438	3					
ANR	3540519	Parameter	RAsm * a	3794:18:94566:94572	3540438	0	True				
ANR	3540520	ParameterType	RAsm *		3540438	0					
ANR	3540521	Identifier	a		3540438	1					
ANR	3540522	Parameter	ut8 * data	3794:27:94575:94583	3540438	1	True				
ANR	3540523	ParameterType	ut8 *		3540438	0					
ANR	3540524	Identifier	data		3540438	1					
ANR	3540525	Parameter	const Opcode * op	3794:38:94586:94601	3540438	2	True				
ANR	3540526	ParameterType	const Opcode *		3540438	0					
ANR	3540527	Identifier	op		3540438	1					
ANR	3540528	CFGEntryNode	ENTRY		3540438		True				
ANR	3540529	CFGExitNode	EXIT		3540438		True				
ANR	3540530	Symbol	a		3540438						
ANR	3540531	Symbol	op		3540438						
ANR	3540532	Symbol	data		3540438						
ANR	3540533	Symbol	* op		3540438						
ANR	3540534	Symbol	* * op -> operands		3540438						
ANR	3540535	Symbol	l		3540438						
ANR	3540536	Symbol	* * op		3540438						
ANR	3540537	Symbol	* op -> operands		3540438						
ANR	3540538	Symbol	op -> operands_count		3540438						
ANR	3540539	Symbol	* op -> operands [ 0 ] . regs		3540438						
ANR	3540540	Symbol	op -> operands [ 0 ] . type		3540438						
ANR	3540541	Symbol	* * * op		3540438						
ANR	3540542	Symbol	op -> operands		3540438						
ANR	3540543	Symbol	OT_MEMORY		3540438						
ANR	3540544	Symbol	* data		3540438						
ANR	3540545	Symbol	op -> operands [ 0 ] . regs		3540438						
ANR	3540546	Function	oplidt	3812:0:94869:95187							
ANR	3540547	FunctionDef	"oplidt (RAsm * a , ut8 * data , const Opcode * op)"		3540546	0					
ANR	3540548	CompoundStatement		3812:56:94925:95187	3540546	0					
ANR	3540549	IdentifierDeclStatement	int l = 0 ;	3813:1:94928:94937	3540546	0	True				
ANR	3540550	IdentifierDecl	l = 0		3540546	0					
ANR	3540551	IdentifierDeclType	int		3540546	0					
ANR	3540552	Identifier	l		3540546	1					
ANR	3540553	AssignmentExpression	l = 0		3540546	2		=			
ANR	3540554	Identifier	l		3540546	0					
ANR	3540555	PrimaryExpression	0		3540546	1					
ANR	3540556	SwitchStatement	switch ( op -> operands_count )		3540546	1					
ANR	3540557	Condition	op -> operands_count	3814:9:94948:94965	3540546	0	True				
ANR	3540558	PtrMemberAccess	op -> operands_count		3540546	0					
ANR	3540559	Identifier	op		3540546	0					
ANR	3540560	Identifier	operands_count		3540546	1					
ANR	3540561	CompoundStatement		3:29:42:42	3540546	1					
ANR	3540562	Label	case 1 :	3815:1:94971:94977	3540546	0	True				
ANR	3540563	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3540546	1					
ANR	3540564	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3816:7:94986:95017	3540546	0	True				
ANR	3540565	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3540546	0		&			
ANR	3540566	MemberAccess	op -> operands [ 0 ] . type		3540546	0					
ANR	3540567	ArrayIndexing	op -> operands [ 0 ]		3540546	0					
ANR	3540568	PtrMemberAccess	op -> operands		3540546	0					
ANR	3540569	Identifier	op		3540546	0					
ANR	3540570	Identifier	operands		3540546	1					
ANR	3540571	PrimaryExpression	0		3540546	1					
ANR	3540572	Identifier	type		3540546	1					
ANR	3540573	Identifier	OT_MEMORY		3540546	1					
ANR	3540574	CompoundStatement		5:42:95:95	3540546	1					
ANR	3540575	ExpressionStatement	data [ l ++ ] = 0x0f	3817:3:95026:95042	3540546	0	True				
ANR	3540576	AssignmentExpression	data [ l ++ ] = 0x0f		3540546	0		=			
ANR	3540577	ArrayIndexing	data [ l ++ ]		3540546	0					
ANR	3540578	Identifier	data		3540546	0					
ANR	3540579	PostIncDecOperationExpression	l ++		3540546	1					
ANR	3540580	Identifier	l		3540546	0					
ANR	3540581	IncDec	++		3540546	1					
ANR	3540582	PrimaryExpression	0x0f		3540546	1					
ANR	3540583	ExpressionStatement	data [ l ++ ] = 0x01	3818:3:95047:95063	3540546	1	True				
ANR	3540584	AssignmentExpression	data [ l ++ ] = 0x01		3540546	0		=			
ANR	3540585	ArrayIndexing	data [ l ++ ]		3540546	0					
ANR	3540586	Identifier	data		3540546	0					
ANR	3540587	PostIncDecOperationExpression	l ++		3540546	1					
ANR	3540588	Identifier	l		3540546	0					
ANR	3540589	IncDec	++		3540546	1					
ANR	3540590	PrimaryExpression	0x01		3540546	1					
ANR	3540591	ExpressionStatement	data [ l ++ ] = 0x18 | op -> operands [ 0 ] . regs [ 0 ]	3819:3:95068:95110	3540546	2	True				
ANR	3540592	AssignmentExpression	data [ l ++ ] = 0x18 | op -> operands [ 0 ] . regs [ 0 ]		3540546	0		=			
ANR	3540593	ArrayIndexing	data [ l ++ ]		3540546	0					
ANR	3540594	Identifier	data		3540546	0					
ANR	3540595	PostIncDecOperationExpression	l ++		3540546	1					
ANR	3540596	Identifier	l		3540546	0					
ANR	3540597	IncDec	++		3540546	1					
ANR	3540598	InclusiveOrExpression	0x18 | op -> operands [ 0 ] . regs [ 0 ]		3540546	1		|			
ANR	3540599	PrimaryExpression	0x18		3540546	0					
ANR	3540600	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3540546	1					
ANR	3540601	MemberAccess	op -> operands [ 0 ] . regs		3540546	0					
ANR	3540602	ArrayIndexing	op -> operands [ 0 ]		3540546	0					
ANR	3540603	PtrMemberAccess	op -> operands		3540546	0					
ANR	3540604	Identifier	op		3540546	0					
ANR	3540605	Identifier	operands		3540546	1					
ANR	3540606	PrimaryExpression	0		3540546	1					
ANR	3540607	Identifier	regs		3540546	1					
ANR	3540608	PrimaryExpression	0		3540546	1					
ANR	3540609	ElseStatement	else		3540546	0					
ANR	3540610	CompoundStatement		9:9:195:195	3540546	0					
ANR	3540611	ReturnStatement	return - 1 ;	3821:3:95126:95135	3540546	0	True				
ANR	3540612	UnaryOperationExpression	- 1		3540546	0					
ANR	3540613	UnaryOperator	-		3540546	0					
ANR	3540614	PrimaryExpression	1		3540546	1					
ANR	3540615	BreakStatement	break ;	3823:2:95143:95148	3540546	2	True				
ANR	3540616	Label	default :	3824:1:95151:95158	3540546	3	True				
ANR	3540617	Identifier	default		3540546	0					
ANR	3540618	ReturnStatement	return - 1 ;	3825:2:95162:95171	3540546	4	True				
ANR	3540619	UnaryOperationExpression	- 1		3540546	0					
ANR	3540620	UnaryOperator	-		3540546	0					
ANR	3540621	PrimaryExpression	1		3540546	1					
ANR	3540622	ReturnStatement	return l ;	3827:1:95177:95185	3540546	2	True				
ANR	3540623	Identifier	l		3540546	0					
ANR	3540624	ReturnType	static int		3540546	1					
ANR	3540625	Identifier	oplidt		3540546	2					
ANR	3540626	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3540546	3					
ANR	3540627	Parameter	RAsm * a	3812:18:94887:94893	3540546	0	True				
ANR	3540628	ParameterType	RAsm *		3540546	0					
ANR	3540629	Identifier	a		3540546	1					
ANR	3540630	Parameter	ut8 * data	3812:27:94896:94904	3540546	1	True				
ANR	3540631	ParameterType	ut8 *		3540546	0					
ANR	3540632	Identifier	data		3540546	1					
ANR	3540633	Parameter	const Opcode * op	3812:38:94907:94922	3540546	2	True				
ANR	3540634	ParameterType	const Opcode *		3540546	0					
ANR	3540635	Identifier	op		3540546	1					
ANR	3540636	CFGEntryNode	ENTRY		3540546		True				
ANR	3540637	CFGExitNode	EXIT		3540546		True				
ANR	3540638	Symbol	a		3540546						
ANR	3540639	Symbol	op		3540546						
ANR	3540640	Symbol	data		3540546						
ANR	3540641	Symbol	* op		3540546						
ANR	3540642	Symbol	* * op -> operands		3540546						
ANR	3540643	Symbol	l		3540546						
ANR	3540644	Symbol	* * op		3540546						
ANR	3540645	Symbol	* op -> operands		3540546						
ANR	3540646	Symbol	op -> operands_count		3540546						
ANR	3540647	Symbol	* op -> operands [ 0 ] . regs		3540546						
ANR	3540648	Symbol	op -> operands [ 0 ] . type		3540546						
ANR	3540649	Symbol	* * * op		3540546						
ANR	3540650	Symbol	op -> operands		3540546						
ANR	3540651	Symbol	OT_MEMORY		3540546						
ANR	3540652	Symbol	* data		3540546						
ANR	3540653	Symbol	op -> operands [ 0 ] . regs		3540546						
ANR	3540654	Function	opsgdt	3830:0:95190:95508							
ANR	3540655	FunctionDef	"opsgdt (RAsm * a , ut8 * data , const Opcode * op)"		3540654	0					
ANR	3540656	CompoundStatement		3830:56:95246:95508	3540654	0					
ANR	3540657	IdentifierDeclStatement	int l = 0 ;	3831:1:95249:95258	3540654	0	True				
ANR	3540658	IdentifierDecl	l = 0		3540654	0					
ANR	3540659	IdentifierDeclType	int		3540654	0					
ANR	3540660	Identifier	l		3540654	1					
ANR	3540661	AssignmentExpression	l = 0		3540654	2		=			
ANR	3540662	Identifier	l		3540654	0					
ANR	3540663	PrimaryExpression	0		3540654	1					
ANR	3540664	SwitchStatement	switch ( op -> operands_count )		3540654	1					
ANR	3540665	Condition	op -> operands_count	3832:9:95269:95286	3540654	0	True				
ANR	3540666	PtrMemberAccess	op -> operands_count		3540654	0					
ANR	3540667	Identifier	op		3540654	0					
ANR	3540668	Identifier	operands_count		3540654	1					
ANR	3540669	CompoundStatement		3:29:42:42	3540654	1					
ANR	3540670	Label	case 1 :	3833:1:95292:95298	3540654	0	True				
ANR	3540671	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3540654	1					
ANR	3540672	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3834:7:95307:95338	3540654	0	True				
ANR	3540673	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3540654	0		&			
ANR	3540674	MemberAccess	op -> operands [ 0 ] . type		3540654	0					
ANR	3540675	ArrayIndexing	op -> operands [ 0 ]		3540654	0					
ANR	3540676	PtrMemberAccess	op -> operands		3540654	0					
ANR	3540677	Identifier	op		3540654	0					
ANR	3540678	Identifier	operands		3540654	1					
ANR	3540679	PrimaryExpression	0		3540654	1					
ANR	3540680	Identifier	type		3540654	1					
ANR	3540681	Identifier	OT_MEMORY		3540654	1					
ANR	3540682	CompoundStatement		5:42:95:95	3540654	1					
ANR	3540683	ExpressionStatement	data [ l ++ ] = 0x0f	3835:3:95347:95363	3540654	0	True				
ANR	3540684	AssignmentExpression	data [ l ++ ] = 0x0f		3540654	0		=			
ANR	3540685	ArrayIndexing	data [ l ++ ]		3540654	0					
ANR	3540686	Identifier	data		3540654	0					
ANR	3540687	PostIncDecOperationExpression	l ++		3540654	1					
ANR	3540688	Identifier	l		3540654	0					
ANR	3540689	IncDec	++		3540654	1					
ANR	3540690	PrimaryExpression	0x0f		3540654	1					
ANR	3540691	ExpressionStatement	data [ l ++ ] = 0x01	3836:3:95368:95384	3540654	1	True				
ANR	3540692	AssignmentExpression	data [ l ++ ] = 0x01		3540654	0		=			
ANR	3540693	ArrayIndexing	data [ l ++ ]		3540654	0					
ANR	3540694	Identifier	data		3540654	0					
ANR	3540695	PostIncDecOperationExpression	l ++		3540654	1					
ANR	3540696	Identifier	l		3540654	0					
ANR	3540697	IncDec	++		3540654	1					
ANR	3540698	PrimaryExpression	0x01		3540654	1					
ANR	3540699	ExpressionStatement	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . regs [ 0 ]	3837:3:95389:95431	3540654	2	True				
ANR	3540700	AssignmentExpression	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . regs [ 0 ]		3540654	0		=			
ANR	3540701	ArrayIndexing	data [ l ++ ]		3540654	0					
ANR	3540702	Identifier	data		3540654	0					
ANR	3540703	PostIncDecOperationExpression	l ++		3540654	1					
ANR	3540704	Identifier	l		3540654	0					
ANR	3540705	IncDec	++		3540654	1					
ANR	3540706	InclusiveOrExpression	0x00 | op -> operands [ 0 ] . regs [ 0 ]		3540654	1		|			
ANR	3540707	PrimaryExpression	0x00		3540654	0					
ANR	3540708	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3540654	1					
ANR	3540709	MemberAccess	op -> operands [ 0 ] . regs		3540654	0					
ANR	3540710	ArrayIndexing	op -> operands [ 0 ]		3540654	0					
ANR	3540711	PtrMemberAccess	op -> operands		3540654	0					
ANR	3540712	Identifier	op		3540654	0					
ANR	3540713	Identifier	operands		3540654	1					
ANR	3540714	PrimaryExpression	0		3540654	1					
ANR	3540715	Identifier	regs		3540654	1					
ANR	3540716	PrimaryExpression	0		3540654	1					
ANR	3540717	ElseStatement	else		3540654	0					
ANR	3540718	CompoundStatement		9:9:195:195	3540654	0					
ANR	3540719	ReturnStatement	return - 1 ;	3839:3:95447:95456	3540654	0	True				
ANR	3540720	UnaryOperationExpression	- 1		3540654	0					
ANR	3540721	UnaryOperator	-		3540654	0					
ANR	3540722	PrimaryExpression	1		3540654	1					
ANR	3540723	BreakStatement	break ;	3841:2:95464:95469	3540654	2	True				
ANR	3540724	Label	default :	3842:1:95472:95479	3540654	3	True				
ANR	3540725	Identifier	default		3540654	0					
ANR	3540726	ReturnStatement	return - 1 ;	3843:2:95483:95492	3540654	4	True				
ANR	3540727	UnaryOperationExpression	- 1		3540654	0					
ANR	3540728	UnaryOperator	-		3540654	0					
ANR	3540729	PrimaryExpression	1		3540654	1					
ANR	3540730	ReturnStatement	return l ;	3845:1:95498:95506	3540654	2	True				
ANR	3540731	Identifier	l		3540654	0					
ANR	3540732	ReturnType	static int		3540654	1					
ANR	3540733	Identifier	opsgdt		3540654	2					
ANR	3540734	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3540654	3					
ANR	3540735	Parameter	RAsm * a	3830:18:95208:95214	3540654	0	True				
ANR	3540736	ParameterType	RAsm *		3540654	0					
ANR	3540737	Identifier	a		3540654	1					
ANR	3540738	Parameter	ut8 * data	3830:27:95217:95225	3540654	1	True				
ANR	3540739	ParameterType	ut8 *		3540654	0					
ANR	3540740	Identifier	data		3540654	1					
ANR	3540741	Parameter	const Opcode * op	3830:38:95228:95243	3540654	2	True				
ANR	3540742	ParameterType	const Opcode *		3540654	0					
ANR	3540743	Identifier	op		3540654	1					
ANR	3540744	CFGEntryNode	ENTRY		3540654		True				
ANR	3540745	CFGExitNode	EXIT		3540654		True				
ANR	3540746	Symbol	a		3540654						
ANR	3540747	Symbol	op		3540654						
ANR	3540748	Symbol	data		3540654						
ANR	3540749	Symbol	* op		3540654						
ANR	3540750	Symbol	* * op -> operands		3540654						
ANR	3540751	Symbol	l		3540654						
ANR	3540752	Symbol	* * op		3540654						
ANR	3540753	Symbol	* op -> operands		3540654						
ANR	3540754	Symbol	op -> operands_count		3540654						
ANR	3540755	Symbol	* op -> operands [ 0 ] . regs		3540654						
ANR	3540756	Symbol	op -> operands [ 0 ] . type		3540654						
ANR	3540757	Symbol	* * * op		3540654						
ANR	3540758	Symbol	op -> operands		3540654						
ANR	3540759	Symbol	OT_MEMORY		3540654						
ANR	3540760	Symbol	* data		3540654						
ANR	3540761	Symbol	op -> operands [ 0 ] . regs		3540654						
ANR	3540762	Function	opstmxcsr	3848:0:95511:95874							
ANR	3540763	FunctionDef	"opstmxcsr (RAsm * a , ut8 * data , const Opcode * op)"		3540762	0					
ANR	3540764	CompoundStatement		3848:59:95570:95874	3540762	0					
ANR	3540765	IdentifierDeclStatement	int l = 0 ;	3849:1:95573:95582	3540762	0	True				
ANR	3540766	IdentifierDecl	l = 0		3540762	0					
ANR	3540767	IdentifierDeclType	int		3540762	0					
ANR	3540768	Identifier	l		3540762	1					
ANR	3540769	AssignmentExpression	l = 0		3540762	2		=			
ANR	3540770	Identifier	l		3540762	0					
ANR	3540771	PrimaryExpression	0		3540762	1					
ANR	3540772	SwitchStatement	switch ( op -> operands_count )		3540762	1					
ANR	3540773	Condition	op -> operands_count	3850:9:95593:95610	3540762	0	True				
ANR	3540774	PtrMemberAccess	op -> operands_count		3540762	0					
ANR	3540775	Identifier	op		3540762	0					
ANR	3540776	Identifier	operands_count		3540762	1					
ANR	3540777	CompoundStatement		3:29:42:42	3540762	1					
ANR	3540778	Label	case 1 :	3851:1:95616:95622	3540762	0	True				
ANR	3540779	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_DWORD )		3540762	1					
ANR	3540780	Condition	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_DWORD	3852:7:95631:95704	3540762	0	True				
ANR	3540781	AndExpression	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_DWORD		3540762	0		&&			
ANR	3540782	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3540762	0		&			
ANR	3540783	MemberAccess	op -> operands [ 0 ] . type		3540762	0					
ANR	3540784	ArrayIndexing	op -> operands [ 0 ]		3540762	0					
ANR	3540785	PtrMemberAccess	op -> operands		3540762	0					
ANR	3540786	Identifier	op		3540762	0					
ANR	3540787	Identifier	operands		3540762	1					
ANR	3540788	PrimaryExpression	0		3540762	1					
ANR	3540789	Identifier	type		3540762	1					
ANR	3540790	Identifier	OT_MEMORY		3540762	1					
ANR	3540791	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		3540762	1		&			
ANR	3540792	MemberAccess	op -> operands [ 0 ] . type		3540762	0					
ANR	3540793	ArrayIndexing	op -> operands [ 0 ]		3540762	0					
ANR	3540794	PtrMemberAccess	op -> operands		3540762	0					
ANR	3540795	Identifier	op		3540762	0					
ANR	3540796	Identifier	operands		3540762	1					
ANR	3540797	PrimaryExpression	0		3540762	1					
ANR	3540798	Identifier	type		3540762	1					
ANR	3540799	Identifier	OT_DWORD		3540762	1					
ANR	3540800	CompoundStatement		6:41:137:137	3540762	1					
ANR	3540801	ExpressionStatement	data [ l ++ ] = 0x0f	3854:3:95713:95729	3540762	0	True				
ANR	3540802	AssignmentExpression	data [ l ++ ] = 0x0f		3540762	0		=			
ANR	3540803	ArrayIndexing	data [ l ++ ]		3540762	0					
ANR	3540804	Identifier	data		3540762	0					
ANR	3540805	PostIncDecOperationExpression	l ++		3540762	1					
ANR	3540806	Identifier	l		3540762	0					
ANR	3540807	IncDec	++		3540762	1					
ANR	3540808	PrimaryExpression	0x0f		3540762	1					
ANR	3540809	ExpressionStatement	data [ l ++ ] = 0xae	3855:3:95734:95750	3540762	1	True				
ANR	3540810	AssignmentExpression	data [ l ++ ] = 0xae		3540762	0		=			
ANR	3540811	ArrayIndexing	data [ l ++ ]		3540762	0					
ANR	3540812	Identifier	data		3540762	0					
ANR	3540813	PostIncDecOperationExpression	l ++		3540762	1					
ANR	3540814	Identifier	l		3540762	0					
ANR	3540815	IncDec	++		3540762	1					
ANR	3540816	PrimaryExpression	0xae		3540762	1					
ANR	3540817	ExpressionStatement	data [ l ++ ] = 0x18 | op -> operands [ 0 ] . regs [ 0 ]	3856:3:95755:95797	3540762	2	True				
ANR	3540818	AssignmentExpression	data [ l ++ ] = 0x18 | op -> operands [ 0 ] . regs [ 0 ]		3540762	0		=			
ANR	3540819	ArrayIndexing	data [ l ++ ]		3540762	0					
ANR	3540820	Identifier	data		3540762	0					
ANR	3540821	PostIncDecOperationExpression	l ++		3540762	1					
ANR	3540822	Identifier	l		3540762	0					
ANR	3540823	IncDec	++		3540762	1					
ANR	3540824	InclusiveOrExpression	0x18 | op -> operands [ 0 ] . regs [ 0 ]		3540762	1		|			
ANR	3540825	PrimaryExpression	0x18		3540762	0					
ANR	3540826	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3540762	1					
ANR	3540827	MemberAccess	op -> operands [ 0 ] . regs		3540762	0					
ANR	3540828	ArrayIndexing	op -> operands [ 0 ]		3540762	0					
ANR	3540829	PtrMemberAccess	op -> operands		3540762	0					
ANR	3540830	Identifier	op		3540762	0					
ANR	3540831	Identifier	operands		3540762	1					
ANR	3540832	PrimaryExpression	0		3540762	1					
ANR	3540833	Identifier	regs		3540762	1					
ANR	3540834	PrimaryExpression	0		3540762	1					
ANR	3540835	ElseStatement	else		3540762	0					
ANR	3540836	CompoundStatement		10:9:237:237	3540762	0					
ANR	3540837	ReturnStatement	return - 1 ;	3858:3:95813:95822	3540762	0	True				
ANR	3540838	UnaryOperationExpression	- 1		3540762	0					
ANR	3540839	UnaryOperator	-		3540762	0					
ANR	3540840	PrimaryExpression	1		3540762	1					
ANR	3540841	BreakStatement	break ;	3860:2:95830:95835	3540762	2	True				
ANR	3540842	Label	default :	3861:1:95838:95845	3540762	3	True				
ANR	3540843	Identifier	default		3540762	0					
ANR	3540844	ReturnStatement	return - 1 ;	3862:2:95849:95858	3540762	4	True				
ANR	3540845	UnaryOperationExpression	- 1		3540762	0					
ANR	3540846	UnaryOperator	-		3540762	0					
ANR	3540847	PrimaryExpression	1		3540762	1					
ANR	3540848	ReturnStatement	return l ;	3864:1:95864:95872	3540762	2	True				
ANR	3540849	Identifier	l		3540762	0					
ANR	3540850	ReturnType	static int		3540762	1					
ANR	3540851	Identifier	opstmxcsr		3540762	2					
ANR	3540852	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3540762	3					
ANR	3540853	Parameter	RAsm * a	3848:21:95532:95538	3540762	0	True				
ANR	3540854	ParameterType	RAsm *		3540762	0					
ANR	3540855	Identifier	a		3540762	1					
ANR	3540856	Parameter	ut8 * data	3848:30:95541:95549	3540762	1	True				
ANR	3540857	ParameterType	ut8 *		3540762	0					
ANR	3540858	Identifier	data		3540762	1					
ANR	3540859	Parameter	const Opcode * op	3848:41:95552:95567	3540762	2	True				
ANR	3540860	ParameterType	const Opcode *		3540762	0					
ANR	3540861	Identifier	op		3540762	1					
ANR	3540862	CFGEntryNode	ENTRY		3540762		True				
ANR	3540863	CFGExitNode	EXIT		3540762		True				
ANR	3540864	Symbol	a		3540762						
ANR	3540865	Symbol	op		3540762						
ANR	3540866	Symbol	data		3540762						
ANR	3540867	Symbol	* op		3540762						
ANR	3540868	Symbol	* * op -> operands		3540762						
ANR	3540869	Symbol	l		3540762						
ANR	3540870	Symbol	* * op		3540762						
ANR	3540871	Symbol	* op -> operands		3540762						
ANR	3540872	Symbol	op -> operands_count		3540762						
ANR	3540873	Symbol	* op -> operands [ 0 ] . regs		3540762						
ANR	3540874	Symbol	op -> operands [ 0 ] . type		3540762						
ANR	3540875	Symbol	* * * op		3540762						
ANR	3540876	Symbol	op -> operands		3540762						
ANR	3540877	Symbol	OT_MEMORY		3540762						
ANR	3540878	Symbol	* data		3540762						
ANR	3540879	Symbol	op -> operands [ 0 ] . regs		3540762						
ANR	3540880	Symbol	OT_DWORD		3540762						
ANR	3540881	Function	opstr	3867:0:95877:96412							
ANR	3540882	FunctionDef	"opstr (RAsm * a , ut8 * data , const Opcode * op)"		3540881	0					
ANR	3540883	CompoundStatement		3867:55:95932:96412	3540881	0					
ANR	3540884	IdentifierDeclStatement	int l = 0 ;	3868:1:95935:95944	3540881	0	True				
ANR	3540885	IdentifierDecl	l = 0		3540881	0					
ANR	3540886	IdentifierDeclType	int		3540881	0					
ANR	3540887	Identifier	l		3540881	1					
ANR	3540888	AssignmentExpression	l = 0		3540881	2		=			
ANR	3540889	Identifier	l		3540881	0					
ANR	3540890	PrimaryExpression	0		3540881	1					
ANR	3540891	SwitchStatement	switch ( op -> operands_count )		3540881	1					
ANR	3540892	Condition	op -> operands_count	3869:9:95955:95972	3540881	0	True				
ANR	3540893	PtrMemberAccess	op -> operands_count		3540881	0					
ANR	3540894	Identifier	op		3540881	0					
ANR	3540895	Identifier	operands_count		3540881	1					
ANR	3540896	CompoundStatement		3:29:42:42	3540881	1					
ANR	3540897	Label	case 1 :	3870:1:95978:95984	3540881	0	True				
ANR	3540898	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_WORD )		3540881	1					
ANR	3540899	Condition	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_WORD	3871:7:95993:96065	3540881	0	True				
ANR	3540900	AndExpression	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_WORD		3540881	0		&&			
ANR	3540901	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3540881	0		&			
ANR	3540902	MemberAccess	op -> operands [ 0 ] . type		3540881	0					
ANR	3540903	ArrayIndexing	op -> operands [ 0 ]		3540881	0					
ANR	3540904	PtrMemberAccess	op -> operands		3540881	0					
ANR	3540905	Identifier	op		3540881	0					
ANR	3540906	Identifier	operands		3540881	1					
ANR	3540907	PrimaryExpression	0		3540881	1					
ANR	3540908	Identifier	type		3540881	1					
ANR	3540909	Identifier	OT_MEMORY		3540881	1					
ANR	3540910	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		3540881	1		&			
ANR	3540911	MemberAccess	op -> operands [ 0 ] . type		3540881	0					
ANR	3540912	ArrayIndexing	op -> operands [ 0 ]		3540881	0					
ANR	3540913	PtrMemberAccess	op -> operands		3540881	0					
ANR	3540914	Identifier	op		3540881	0					
ANR	3540915	Identifier	operands		3540881	1					
ANR	3540916	PrimaryExpression	0		3540881	1					
ANR	3540917	Identifier	type		3540881	1					
ANR	3540918	Identifier	OT_WORD		3540881	1					
ANR	3540919	CompoundStatement		6:40:136:136	3540881	1					
ANR	3540920	ExpressionStatement	data [ l ++ ] = 0x0f	3873:3:96074:96090	3540881	0	True				
ANR	3540921	AssignmentExpression	data [ l ++ ] = 0x0f		3540881	0		=			
ANR	3540922	ArrayIndexing	data [ l ++ ]		3540881	0					
ANR	3540923	Identifier	data		3540881	0					
ANR	3540924	PostIncDecOperationExpression	l ++		3540881	1					
ANR	3540925	Identifier	l		3540881	0					
ANR	3540926	IncDec	++		3540881	1					
ANR	3540927	PrimaryExpression	0x0f		3540881	1					
ANR	3540928	ExpressionStatement	data [ l ++ ] = 0x00	3874:3:96095:96111	3540881	1	True				
ANR	3540929	AssignmentExpression	data [ l ++ ] = 0x00		3540881	0		=			
ANR	3540930	ArrayIndexing	data [ l ++ ]		3540881	0					
ANR	3540931	Identifier	data		3540881	0					
ANR	3540932	PostIncDecOperationExpression	l ++		3540881	1					
ANR	3540933	Identifier	l		3540881	0					
ANR	3540934	IncDec	++		3540881	1					
ANR	3540935	PrimaryExpression	0x00		3540881	1					
ANR	3540936	ExpressionStatement	data [ l ++ ] = 0x08 | op -> operands [ 0 ] . regs [ 0 ]	3875:3:96116:96158	3540881	2	True				
ANR	3540937	AssignmentExpression	data [ l ++ ] = 0x08 | op -> operands [ 0 ] . regs [ 0 ]		3540881	0		=			
ANR	3540938	ArrayIndexing	data [ l ++ ]		3540881	0					
ANR	3540939	Identifier	data		3540881	0					
ANR	3540940	PostIncDecOperationExpression	l ++		3540881	1					
ANR	3540941	Identifier	l		3540881	0					
ANR	3540942	IncDec	++		3540881	1					
ANR	3540943	InclusiveOrExpression	0x08 | op -> operands [ 0 ] . regs [ 0 ]		3540881	1		|			
ANR	3540944	PrimaryExpression	0x08		3540881	0					
ANR	3540945	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3540881	1					
ANR	3540946	MemberAccess	op -> operands [ 0 ] . regs		3540881	0					
ANR	3540947	ArrayIndexing	op -> operands [ 0 ]		3540881	0					
ANR	3540948	PtrMemberAccess	op -> operands		3540881	0					
ANR	3540949	Identifier	op		3540881	0					
ANR	3540950	Identifier	operands		3540881	1					
ANR	3540951	PrimaryExpression	0		3540881	1					
ANR	3540952	Identifier	regs		3540881	1					
ANR	3540953	PrimaryExpression	0		3540881	1					
ANR	3540954	ElseStatement	else		3540881	0					
ANR	3540955	IfStatement	if ( op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_DWORD )		3540881	0					
ANR	3540956	Condition	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_DWORD	3876:14:96174:96246	3540881	0	True				
ANR	3540957	AndExpression	op -> operands [ 0 ] . type & OT_GPREG && op -> operands [ 0 ] . type & OT_DWORD		3540881	0		&&			
ANR	3540958	BitAndExpression	op -> operands [ 0 ] . type & OT_GPREG		3540881	0		&			
ANR	3540959	MemberAccess	op -> operands [ 0 ] . type		3540881	0					
ANR	3540960	ArrayIndexing	op -> operands [ 0 ]		3540881	0					
ANR	3540961	PtrMemberAccess	op -> operands		3540881	0					
ANR	3540962	Identifier	op		3540881	0					
ANR	3540963	Identifier	operands		3540881	1					
ANR	3540964	PrimaryExpression	0		3540881	1					
ANR	3540965	Identifier	type		3540881	1					
ANR	3540966	Identifier	OT_GPREG		3540881	1					
ANR	3540967	BitAndExpression	op -> operands [ 0 ] . type & OT_DWORD		3540881	1		&			
ANR	3540968	MemberAccess	op -> operands [ 0 ] . type		3540881	0					
ANR	3540969	ArrayIndexing	op -> operands [ 0 ]		3540881	0					
ANR	3540970	PtrMemberAccess	op -> operands		3540881	0					
ANR	3540971	Identifier	op		3540881	0					
ANR	3540972	Identifier	operands		3540881	1					
ANR	3540973	PrimaryExpression	0		3540881	1					
ANR	3540974	Identifier	type		3540881	1					
ANR	3540975	Identifier	OT_DWORD		3540881	1					
ANR	3540976	CompoundStatement		11:41:317:317	3540881	1					
ANR	3540977	ExpressionStatement	data [ l ++ ] = 0x0f	3878:3:96255:96271	3540881	0	True				
ANR	3540978	AssignmentExpression	data [ l ++ ] = 0x0f		3540881	0		=			
ANR	3540979	ArrayIndexing	data [ l ++ ]		3540881	0					
ANR	3540980	Identifier	data		3540881	0					
ANR	3540981	PostIncDecOperationExpression	l ++		3540881	1					
ANR	3540982	Identifier	l		3540881	0					
ANR	3540983	IncDec	++		3540881	1					
ANR	3540984	PrimaryExpression	0x0f		3540881	1					
ANR	3540985	ExpressionStatement	data [ l ++ ] = 0x00	3879:3:96276:96292	3540881	1	True				
ANR	3540986	AssignmentExpression	data [ l ++ ] = 0x00		3540881	0		=			
ANR	3540987	ArrayIndexing	data [ l ++ ]		3540881	0					
ANR	3540988	Identifier	data		3540881	0					
ANR	3540989	PostIncDecOperationExpression	l ++		3540881	1					
ANR	3540990	Identifier	l		3540881	0					
ANR	3540991	IncDec	++		3540881	1					
ANR	3540992	PrimaryExpression	0x00		3540881	1					
ANR	3540993	ExpressionStatement	data [ l ++ ] = 0xc8 | op -> operands [ 0 ] . reg	3880:3:96297:96335	3540881	2	True				
ANR	3540994	AssignmentExpression	data [ l ++ ] = 0xc8 | op -> operands [ 0 ] . reg		3540881	0		=			
ANR	3540995	ArrayIndexing	data [ l ++ ]		3540881	0					
ANR	3540996	Identifier	data		3540881	0					
ANR	3540997	PostIncDecOperationExpression	l ++		3540881	1					
ANR	3540998	Identifier	l		3540881	0					
ANR	3540999	IncDec	++		3540881	1					
ANR	3541000	InclusiveOrExpression	0xc8 | op -> operands [ 0 ] . reg		3540881	1		|			
ANR	3541001	PrimaryExpression	0xc8		3540881	0					
ANR	3541002	MemberAccess	op -> operands [ 0 ] . reg		3540881	1					
ANR	3541003	ArrayIndexing	op -> operands [ 0 ]		3540881	0					
ANR	3541004	PtrMemberAccess	op -> operands		3540881	0					
ANR	3541005	Identifier	op		3540881	0					
ANR	3541006	Identifier	operands		3540881	1					
ANR	3541007	PrimaryExpression	0		3540881	1					
ANR	3541008	Identifier	reg		3540881	1					
ANR	3541009	ElseStatement	else		3540881	0					
ANR	3541010	CompoundStatement		15:9:413:413	3540881	0					
ANR	3541011	ReturnStatement	return - 1 ;	3882:3:96351:96360	3540881	0	True				
ANR	3541012	UnaryOperationExpression	- 1		3540881	0					
ANR	3541013	UnaryOperator	-		3540881	0					
ANR	3541014	PrimaryExpression	1		3540881	1					
ANR	3541015	BreakStatement	break ;	3884:2:96368:96373	3540881	2	True				
ANR	3541016	Label	default :	3885:1:96376:96383	3540881	3	True				
ANR	3541017	Identifier	default		3540881	0					
ANR	3541018	ReturnStatement	return - 1 ;	3886:2:96387:96396	3540881	4	True				
ANR	3541019	UnaryOperationExpression	- 1		3540881	0					
ANR	3541020	UnaryOperator	-		3540881	0					
ANR	3541021	PrimaryExpression	1		3540881	1					
ANR	3541022	ReturnStatement	return l ;	3888:1:96402:96410	3540881	2	True				
ANR	3541023	Identifier	l		3540881	0					
ANR	3541024	ReturnType	static int		3540881	1					
ANR	3541025	Identifier	opstr		3540881	2					
ANR	3541026	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3540881	3					
ANR	3541027	Parameter	RAsm * a	3867:17:95894:95900	3540881	0	True				
ANR	3541028	ParameterType	RAsm *		3540881	0					
ANR	3541029	Identifier	a		3540881	1					
ANR	3541030	Parameter	ut8 * data	3867:26:95903:95911	3540881	1	True				
ANR	3541031	ParameterType	ut8 *		3540881	0					
ANR	3541032	Identifier	data		3540881	1					
ANR	3541033	Parameter	const Opcode * op	3867:37:95914:95929	3540881	2	True				
ANR	3541034	ParameterType	const Opcode *		3540881	0					
ANR	3541035	Identifier	op		3540881	1					
ANR	3541036	CFGEntryNode	ENTRY		3540881		True				
ANR	3541037	CFGExitNode	EXIT		3540881		True				
ANR	3541038	Symbol	a		3540881						
ANR	3541039	Symbol	op		3540881						
ANR	3541040	Symbol	OT_WORD		3540881						
ANR	3541041	Symbol	OT_GPREG		3540881						
ANR	3541042	Symbol	data		3540881						
ANR	3541043	Symbol	* op		3540881						
ANR	3541044	Symbol	* * op -> operands		3540881						
ANR	3541045	Symbol	l		3540881						
ANR	3541046	Symbol	* * op		3540881						
ANR	3541047	Symbol	* op -> operands		3540881						
ANR	3541048	Symbol	op -> operands_count		3540881						
ANR	3541049	Symbol	* op -> operands [ 0 ] . regs		3540881						
ANR	3541050	Symbol	op -> operands [ 0 ] . type		3540881						
ANR	3541051	Symbol	* * * op		3540881						
ANR	3541052	Symbol	op -> operands [ 0 ] . reg		3540881						
ANR	3541053	Symbol	op -> operands		3540881						
ANR	3541054	Symbol	OT_MEMORY		3540881						
ANR	3541055	Symbol	* data		3540881						
ANR	3541056	Symbol	op -> operands [ 0 ] . regs		3540881						
ANR	3541057	Symbol	OT_DWORD		3540881						
ANR	3541058	Function	opsidt	3891:0:96415:96733							
ANR	3541059	FunctionDef	"opsidt (RAsm * a , ut8 * data , const Opcode * op)"		3541058	0					
ANR	3541060	CompoundStatement		3891:56:96471:96733	3541058	0					
ANR	3541061	IdentifierDeclStatement	int l = 0 ;	3892:1:96474:96483	3541058	0	True				
ANR	3541062	IdentifierDecl	l = 0		3541058	0					
ANR	3541063	IdentifierDeclType	int		3541058	0					
ANR	3541064	Identifier	l		3541058	1					
ANR	3541065	AssignmentExpression	l = 0		3541058	2		=			
ANR	3541066	Identifier	l		3541058	0					
ANR	3541067	PrimaryExpression	0		3541058	1					
ANR	3541068	SwitchStatement	switch ( op -> operands_count )		3541058	1					
ANR	3541069	Condition	op -> operands_count	3893:9:96494:96511	3541058	0	True				
ANR	3541070	PtrMemberAccess	op -> operands_count		3541058	0					
ANR	3541071	Identifier	op		3541058	0					
ANR	3541072	Identifier	operands_count		3541058	1					
ANR	3541073	CompoundStatement		3:29:42:42	3541058	1					
ANR	3541074	Label	case 1 :	3894:1:96517:96523	3541058	0	True				
ANR	3541075	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3541058	1					
ANR	3541076	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3895:7:96532:96563	3541058	0	True				
ANR	3541077	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3541058	0		&			
ANR	3541078	MemberAccess	op -> operands [ 0 ] . type		3541058	0					
ANR	3541079	ArrayIndexing	op -> operands [ 0 ]		3541058	0					
ANR	3541080	PtrMemberAccess	op -> operands		3541058	0					
ANR	3541081	Identifier	op		3541058	0					
ANR	3541082	Identifier	operands		3541058	1					
ANR	3541083	PrimaryExpression	0		3541058	1					
ANR	3541084	Identifier	type		3541058	1					
ANR	3541085	Identifier	OT_MEMORY		3541058	1					
ANR	3541086	CompoundStatement		5:42:95:95	3541058	1					
ANR	3541087	ExpressionStatement	data [ l ++ ] = 0x0f	3896:3:96572:96588	3541058	0	True				
ANR	3541088	AssignmentExpression	data [ l ++ ] = 0x0f		3541058	0		=			
ANR	3541089	ArrayIndexing	data [ l ++ ]		3541058	0					
ANR	3541090	Identifier	data		3541058	0					
ANR	3541091	PostIncDecOperationExpression	l ++		3541058	1					
ANR	3541092	Identifier	l		3541058	0					
ANR	3541093	IncDec	++		3541058	1					
ANR	3541094	PrimaryExpression	0x0f		3541058	1					
ANR	3541095	ExpressionStatement	data [ l ++ ] = 0x01	3897:3:96593:96609	3541058	1	True				
ANR	3541096	AssignmentExpression	data [ l ++ ] = 0x01		3541058	0		=			
ANR	3541097	ArrayIndexing	data [ l ++ ]		3541058	0					
ANR	3541098	Identifier	data		3541058	0					
ANR	3541099	PostIncDecOperationExpression	l ++		3541058	1					
ANR	3541100	Identifier	l		3541058	0					
ANR	3541101	IncDec	++		3541058	1					
ANR	3541102	PrimaryExpression	0x01		3541058	1					
ANR	3541103	ExpressionStatement	data [ l ++ ] = 0x08 | op -> operands [ 0 ] . regs [ 0 ]	3898:3:96614:96656	3541058	2	True				
ANR	3541104	AssignmentExpression	data [ l ++ ] = 0x08 | op -> operands [ 0 ] . regs [ 0 ]		3541058	0		=			
ANR	3541105	ArrayIndexing	data [ l ++ ]		3541058	0					
ANR	3541106	Identifier	data		3541058	0					
ANR	3541107	PostIncDecOperationExpression	l ++		3541058	1					
ANR	3541108	Identifier	l		3541058	0					
ANR	3541109	IncDec	++		3541058	1					
ANR	3541110	InclusiveOrExpression	0x08 | op -> operands [ 0 ] . regs [ 0 ]		3541058	1		|			
ANR	3541111	PrimaryExpression	0x08		3541058	0					
ANR	3541112	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3541058	1					
ANR	3541113	MemberAccess	op -> operands [ 0 ] . regs		3541058	0					
ANR	3541114	ArrayIndexing	op -> operands [ 0 ]		3541058	0					
ANR	3541115	PtrMemberAccess	op -> operands		3541058	0					
ANR	3541116	Identifier	op		3541058	0					
ANR	3541117	Identifier	operands		3541058	1					
ANR	3541118	PrimaryExpression	0		3541058	1					
ANR	3541119	Identifier	regs		3541058	1					
ANR	3541120	PrimaryExpression	0		3541058	1					
ANR	3541121	ElseStatement	else		3541058	0					
ANR	3541122	CompoundStatement		9:9:195:195	3541058	0					
ANR	3541123	ReturnStatement	return - 1 ;	3900:3:96672:96681	3541058	0	True				
ANR	3541124	UnaryOperationExpression	- 1		3541058	0					
ANR	3541125	UnaryOperator	-		3541058	0					
ANR	3541126	PrimaryExpression	1		3541058	1					
ANR	3541127	BreakStatement	break ;	3902:2:96689:96694	3541058	2	True				
ANR	3541128	Label	default :	3903:1:96697:96704	3541058	3	True				
ANR	3541129	Identifier	default		3541058	0					
ANR	3541130	ReturnStatement	return - 1 ;	3904:2:96708:96717	3541058	4	True				
ANR	3541131	UnaryOperationExpression	- 1		3541058	0					
ANR	3541132	UnaryOperator	-		3541058	0					
ANR	3541133	PrimaryExpression	1		3541058	1					
ANR	3541134	ReturnStatement	return l ;	3906:1:96723:96731	3541058	2	True				
ANR	3541135	Identifier	l		3541058	0					
ANR	3541136	ReturnType	static int		3541058	1					
ANR	3541137	Identifier	opsidt		3541058	2					
ANR	3541138	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3541058	3					
ANR	3541139	Parameter	RAsm * a	3891:18:96433:96439	3541058	0	True				
ANR	3541140	ParameterType	RAsm *		3541058	0					
ANR	3541141	Identifier	a		3541058	1					
ANR	3541142	Parameter	ut8 * data	3891:27:96442:96450	3541058	1	True				
ANR	3541143	ParameterType	ut8 *		3541058	0					
ANR	3541144	Identifier	data		3541058	1					
ANR	3541145	Parameter	const Opcode * op	3891:38:96453:96468	3541058	2	True				
ANR	3541146	ParameterType	const Opcode *		3541058	0					
ANR	3541147	Identifier	op		3541058	1					
ANR	3541148	CFGEntryNode	ENTRY		3541058		True				
ANR	3541149	CFGExitNode	EXIT		3541058		True				
ANR	3541150	Symbol	a		3541058						
ANR	3541151	Symbol	op		3541058						
ANR	3541152	Symbol	data		3541058						
ANR	3541153	Symbol	* op		3541058						
ANR	3541154	Symbol	* * op -> operands		3541058						
ANR	3541155	Symbol	l		3541058						
ANR	3541156	Symbol	* * op		3541058						
ANR	3541157	Symbol	* op -> operands		3541058						
ANR	3541158	Symbol	op -> operands_count		3541058						
ANR	3541159	Symbol	* op -> operands [ 0 ] . regs		3541058						
ANR	3541160	Symbol	op -> operands [ 0 ] . type		3541058						
ANR	3541161	Symbol	* * * op		3541058						
ANR	3541162	Symbol	op -> operands		3541058						
ANR	3541163	Symbol	OT_MEMORY		3541058						
ANR	3541164	Symbol	* data		3541058						
ANR	3541165	Symbol	op -> operands [ 0 ] . regs		3541058						
ANR	3541166	Function	opsldt	3909:0:96736:97131							
ANR	3541167	FunctionDef	"opsldt (RAsm * a , ut8 * data , const Opcode * op)"		3541166	0					
ANR	3541168	CompoundStatement		3909:56:96792:97131	3541166	0					
ANR	3541169	IdentifierDeclStatement	int l = 0 ;	3910:1:96795:96804	3541166	0	True				
ANR	3541170	IdentifierDecl	l = 0		3541166	0					
ANR	3541171	IdentifierDeclType	int		3541166	0					
ANR	3541172	Identifier	l		3541166	1					
ANR	3541173	AssignmentExpression	l = 0		3541166	2		=			
ANR	3541174	Identifier	l		3541166	0					
ANR	3541175	PrimaryExpression	0		3541166	1					
ANR	3541176	SwitchStatement	switch ( op -> operands_count )		3541166	1					
ANR	3541177	Condition	op -> operands_count	3911:9:96815:96832	3541166	0	True				
ANR	3541178	PtrMemberAccess	op -> operands_count		3541166	0					
ANR	3541179	Identifier	op		3541166	0					
ANR	3541180	Identifier	operands_count		3541166	1					
ANR	3541181	CompoundStatement		3:29:42:42	3541166	1					
ANR	3541182	Label	case 1 :	3912:1:96838:96844	3541166	0	True				
ANR	3541183	IfStatement	if ( a -> bits == 64 )		3541166	1					
ANR	3541184	Condition	a -> bits == 64	3913:7:96853:96865	3541166	0	True				
ANR	3541185	EqualityExpression	a -> bits == 64		3541166	0		==			
ANR	3541186	PtrMemberAccess	a -> bits		3541166	0					
ANR	3541187	Identifier	a		3541166	0					
ANR	3541188	Identifier	bits		3541166	1					
ANR	3541189	PrimaryExpression	64		3541166	1					
ANR	3541190	CompoundStatement		5:23:76:76	3541166	1					
ANR	3541191	ExpressionStatement	data [ l ++ ] = 0x48	3914:3:96874:96890	3541166	0	True				
ANR	3541192	AssignmentExpression	data [ l ++ ] = 0x48		3541166	0		=			
ANR	3541193	ArrayIndexing	data [ l ++ ]		3541166	0					
ANR	3541194	Identifier	data		3541166	0					
ANR	3541195	PostIncDecOperationExpression	l ++		3541166	1					
ANR	3541196	Identifier	l		3541166	0					
ANR	3541197	IncDec	++		3541166	1					
ANR	3541198	PrimaryExpression	0x48		3541166	1					
ANR	3541199	ExpressionStatement	data [ l ++ ] = 0x0f	3916:2:96898:96914	3541166	2	True				
ANR	3541200	AssignmentExpression	data [ l ++ ] = 0x0f		3541166	0		=			
ANR	3541201	ArrayIndexing	data [ l ++ ]		3541166	0					
ANR	3541202	Identifier	data		3541166	0					
ANR	3541203	PostIncDecOperationExpression	l ++		3541166	1					
ANR	3541204	Identifier	l		3541166	0					
ANR	3541205	IncDec	++		3541166	1					
ANR	3541206	PrimaryExpression	0x0f		3541166	1					
ANR	3541207	ExpressionStatement	data [ l ++ ] = 0x00	3917:2:96918:96934	3541166	3	True				
ANR	3541208	AssignmentExpression	data [ l ++ ] = 0x00		3541166	0		=			
ANR	3541209	ArrayIndexing	data [ l ++ ]		3541166	0					
ANR	3541210	Identifier	data		3541166	0					
ANR	3541211	PostIncDecOperationExpression	l ++		3541166	1					
ANR	3541212	Identifier	l		3541166	0					
ANR	3541213	IncDec	++		3541166	1					
ANR	3541214	PrimaryExpression	0x00		3541166	1					
ANR	3541215	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3541166	4					
ANR	3541216	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3918:7:96943:96974	3541166	0	True				
ANR	3541217	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3541166	0		&			
ANR	3541218	MemberAccess	op -> operands [ 0 ] . type		3541166	0					
ANR	3541219	ArrayIndexing	op -> operands [ 0 ]		3541166	0					
ANR	3541220	PtrMemberAccess	op -> operands		3541166	0					
ANR	3541221	Identifier	op		3541166	0					
ANR	3541222	Identifier	operands		3541166	1					
ANR	3541223	PrimaryExpression	0		3541166	1					
ANR	3541224	Identifier	type		3541166	1					
ANR	3541225	Identifier	OT_MEMORY		3541166	1					
ANR	3541226	CompoundStatement		10:42:185:185	3541166	1					
ANR	3541227	ExpressionStatement	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . regs [ 0 ]	3919:3:96983:97025	3541166	0	True				
ANR	3541228	AssignmentExpression	data [ l ++ ] = 0x00 | op -> operands [ 0 ] . regs [ 0 ]		3541166	0		=			
ANR	3541229	ArrayIndexing	data [ l ++ ]		3541166	0					
ANR	3541230	Identifier	data		3541166	0					
ANR	3541231	PostIncDecOperationExpression	l ++		3541166	1					
ANR	3541232	Identifier	l		3541166	0					
ANR	3541233	IncDec	++		3541166	1					
ANR	3541234	InclusiveOrExpression	0x00 | op -> operands [ 0 ] . regs [ 0 ]		3541166	1		|			
ANR	3541235	PrimaryExpression	0x00		3541166	0					
ANR	3541236	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3541166	1					
ANR	3541237	MemberAccess	op -> operands [ 0 ] . regs		3541166	0					
ANR	3541238	ArrayIndexing	op -> operands [ 0 ]		3541166	0					
ANR	3541239	PtrMemberAccess	op -> operands		3541166	0					
ANR	3541240	Identifier	op		3541166	0					
ANR	3541241	Identifier	operands		3541166	1					
ANR	3541242	PrimaryExpression	0		3541166	1					
ANR	3541243	Identifier	regs		3541166	1					
ANR	3541244	PrimaryExpression	0		3541166	1					
ANR	3541245	ElseStatement	else		3541166	0					
ANR	3541246	CompoundStatement		12:9:243:243	3541166	0					
ANR	3541247	ExpressionStatement	data [ l ++ ] = 0xc0 | op -> operands [ 0 ] . reg	3921:3:97041:97079	3541166	0	True				
ANR	3541248	AssignmentExpression	data [ l ++ ] = 0xc0 | op -> operands [ 0 ] . reg		3541166	0		=			
ANR	3541249	ArrayIndexing	data [ l ++ ]		3541166	0					
ANR	3541250	Identifier	data		3541166	0					
ANR	3541251	PostIncDecOperationExpression	l ++		3541166	1					
ANR	3541252	Identifier	l		3541166	0					
ANR	3541253	IncDec	++		3541166	1					
ANR	3541254	InclusiveOrExpression	0xc0 | op -> operands [ 0 ] . reg		3541166	1		|			
ANR	3541255	PrimaryExpression	0xc0		3541166	0					
ANR	3541256	MemberAccess	op -> operands [ 0 ] . reg		3541166	1					
ANR	3541257	ArrayIndexing	op -> operands [ 0 ]		3541166	0					
ANR	3541258	PtrMemberAccess	op -> operands		3541166	0					
ANR	3541259	Identifier	op		3541166	0					
ANR	3541260	Identifier	operands		3541166	1					
ANR	3541261	PrimaryExpression	0		3541166	1					
ANR	3541262	Identifier	reg		3541166	1					
ANR	3541263	BreakStatement	break ;	3923:2:97087:97092	3541166	5	True				
ANR	3541264	Label	default :	3924:1:97095:97102	3541166	6	True				
ANR	3541265	Identifier	default		3541166	0					
ANR	3541266	ReturnStatement	return - 1 ;	3925:2:97106:97115	3541166	7	True				
ANR	3541267	UnaryOperationExpression	- 1		3541166	0					
ANR	3541268	UnaryOperator	-		3541166	0					
ANR	3541269	PrimaryExpression	1		3541166	1					
ANR	3541270	ReturnStatement	return l ;	3927:1:97121:97129	3541166	2	True				
ANR	3541271	Identifier	l		3541166	0					
ANR	3541272	ReturnType	static int		3541166	1					
ANR	3541273	Identifier	opsldt		3541166	2					
ANR	3541274	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3541166	3					
ANR	3541275	Parameter	RAsm * a	3909:18:96754:96760	3541166	0	True				
ANR	3541276	ParameterType	RAsm *		3541166	0					
ANR	3541277	Identifier	a		3541166	1					
ANR	3541278	Parameter	ut8 * data	3909:27:96763:96771	3541166	1	True				
ANR	3541279	ParameterType	ut8 *		3541166	0					
ANR	3541280	Identifier	data		3541166	1					
ANR	3541281	Parameter	const Opcode * op	3909:38:96774:96789	3541166	2	True				
ANR	3541282	ParameterType	const Opcode *		3541166	0					
ANR	3541283	Identifier	op		3541166	1					
ANR	3541284	CFGEntryNode	ENTRY		3541166		True				
ANR	3541285	CFGExitNode	EXIT		3541166		True				
ANR	3541286	Symbol	a		3541166						
ANR	3541287	Symbol	op		3541166						
ANR	3541288	Symbol	data		3541166						
ANR	3541289	Symbol	* op		3541166						
ANR	3541290	Symbol	* a		3541166						
ANR	3541291	Symbol	* * op -> operands		3541166						
ANR	3541292	Symbol	l		3541166						
ANR	3541293	Symbol	* * op		3541166						
ANR	3541294	Symbol	* op -> operands		3541166						
ANR	3541295	Symbol	op -> operands_count		3541166						
ANR	3541296	Symbol	* op -> operands [ 0 ] . regs		3541166						
ANR	3541297	Symbol	op -> operands [ 0 ] . type		3541166						
ANR	3541298	Symbol	* * * op		3541166						
ANR	3541299	Symbol	op -> operands [ 0 ] . reg		3541166						
ANR	3541300	Symbol	op -> operands		3541166						
ANR	3541301	Symbol	* data		3541166						
ANR	3541302	Symbol	OT_MEMORY		3541166						
ANR	3541303	Symbol	op -> operands [ 0 ] . regs		3541166						
ANR	3541304	Symbol	a -> bits		3541166						
ANR	3541305	Function	opsmsw	3930:0:97134:97529							
ANR	3541306	FunctionDef	"opsmsw (RAsm * a , ut8 * data , const Opcode * op)"		3541305	0					
ANR	3541307	CompoundStatement		3930:56:97190:97529	3541305	0					
ANR	3541308	IdentifierDeclStatement	int l = 0 ;	3931:1:97193:97202	3541305	0	True				
ANR	3541309	IdentifierDecl	l = 0		3541305	0					
ANR	3541310	IdentifierDeclType	int		3541305	0					
ANR	3541311	Identifier	l		3541305	1					
ANR	3541312	AssignmentExpression	l = 0		3541305	2		=			
ANR	3541313	Identifier	l		3541305	0					
ANR	3541314	PrimaryExpression	0		3541305	1					
ANR	3541315	SwitchStatement	switch ( op -> operands_count )		3541305	1					
ANR	3541316	Condition	op -> operands_count	3932:9:97213:97230	3541305	0	True				
ANR	3541317	PtrMemberAccess	op -> operands_count		3541305	0					
ANR	3541318	Identifier	op		3541305	0					
ANR	3541319	Identifier	operands_count		3541305	1					
ANR	3541320	CompoundStatement		3:29:42:42	3541305	1					
ANR	3541321	Label	case 1 :	3933:1:97236:97242	3541305	0	True				
ANR	3541322	IfStatement	if ( a -> bits == 64 )		3541305	1					
ANR	3541323	Condition	a -> bits == 64	3934:7:97251:97263	3541305	0	True				
ANR	3541324	EqualityExpression	a -> bits == 64		3541305	0		==			
ANR	3541325	PtrMemberAccess	a -> bits		3541305	0					
ANR	3541326	Identifier	a		3541305	0					
ANR	3541327	Identifier	bits		3541305	1					
ANR	3541328	PrimaryExpression	64		3541305	1					
ANR	3541329	CompoundStatement		5:23:76:76	3541305	1					
ANR	3541330	ExpressionStatement	data [ l ++ ] = 0x48	3935:3:97272:97288	3541305	0	True				
ANR	3541331	AssignmentExpression	data [ l ++ ] = 0x48		3541305	0		=			
ANR	3541332	ArrayIndexing	data [ l ++ ]		3541305	0					
ANR	3541333	Identifier	data		3541305	0					
ANR	3541334	PostIncDecOperationExpression	l ++		3541305	1					
ANR	3541335	Identifier	l		3541305	0					
ANR	3541336	IncDec	++		3541305	1					
ANR	3541337	PrimaryExpression	0x48		3541305	1					
ANR	3541338	ExpressionStatement	data [ l ++ ] = 0x0f	3937:2:97296:97312	3541305	2	True				
ANR	3541339	AssignmentExpression	data [ l ++ ] = 0x0f		3541305	0		=			
ANR	3541340	ArrayIndexing	data [ l ++ ]		3541305	0					
ANR	3541341	Identifier	data		3541305	0					
ANR	3541342	PostIncDecOperationExpression	l ++		3541305	1					
ANR	3541343	Identifier	l		3541305	0					
ANR	3541344	IncDec	++		3541305	1					
ANR	3541345	PrimaryExpression	0x0f		3541305	1					
ANR	3541346	ExpressionStatement	data [ l ++ ] = 0x01	3938:2:97316:97332	3541305	3	True				
ANR	3541347	AssignmentExpression	data [ l ++ ] = 0x01		3541305	0		=			
ANR	3541348	ArrayIndexing	data [ l ++ ]		3541305	0					
ANR	3541349	Identifier	data		3541305	0					
ANR	3541350	PostIncDecOperationExpression	l ++		3541305	1					
ANR	3541351	Identifier	l		3541305	0					
ANR	3541352	IncDec	++		3541305	1					
ANR	3541353	PrimaryExpression	0x01		3541305	1					
ANR	3541354	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3541305	4					
ANR	3541355	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3939:7:97341:97372	3541305	0	True				
ANR	3541356	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3541305	0		&			
ANR	3541357	MemberAccess	op -> operands [ 0 ] . type		3541305	0					
ANR	3541358	ArrayIndexing	op -> operands [ 0 ]		3541305	0					
ANR	3541359	PtrMemberAccess	op -> operands		3541305	0					
ANR	3541360	Identifier	op		3541305	0					
ANR	3541361	Identifier	operands		3541305	1					
ANR	3541362	PrimaryExpression	0		3541305	1					
ANR	3541363	Identifier	type		3541305	1					
ANR	3541364	Identifier	OT_MEMORY		3541305	1					
ANR	3541365	CompoundStatement		10:42:185:185	3541305	1					
ANR	3541366	ExpressionStatement	data [ l ++ ] = 0x20 | op -> operands [ 0 ] . regs [ 0 ]	3940:3:97381:97423	3541305	0	True				
ANR	3541367	AssignmentExpression	data [ l ++ ] = 0x20 | op -> operands [ 0 ] . regs [ 0 ]		3541305	0		=			
ANR	3541368	ArrayIndexing	data [ l ++ ]		3541305	0					
ANR	3541369	Identifier	data		3541305	0					
ANR	3541370	PostIncDecOperationExpression	l ++		3541305	1					
ANR	3541371	Identifier	l		3541305	0					
ANR	3541372	IncDec	++		3541305	1					
ANR	3541373	InclusiveOrExpression	0x20 | op -> operands [ 0 ] . regs [ 0 ]		3541305	1		|			
ANR	3541374	PrimaryExpression	0x20		3541305	0					
ANR	3541375	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3541305	1					
ANR	3541376	MemberAccess	op -> operands [ 0 ] . regs		3541305	0					
ANR	3541377	ArrayIndexing	op -> operands [ 0 ]		3541305	0					
ANR	3541378	PtrMemberAccess	op -> operands		3541305	0					
ANR	3541379	Identifier	op		3541305	0					
ANR	3541380	Identifier	operands		3541305	1					
ANR	3541381	PrimaryExpression	0		3541305	1					
ANR	3541382	Identifier	regs		3541305	1					
ANR	3541383	PrimaryExpression	0		3541305	1					
ANR	3541384	ElseStatement	else		3541305	0					
ANR	3541385	CompoundStatement		12:9:243:243	3541305	0					
ANR	3541386	ExpressionStatement	data [ l ++ ] = 0xe0 | op -> operands [ 0 ] . reg	3942:3:97439:97477	3541305	0	True				
ANR	3541387	AssignmentExpression	data [ l ++ ] = 0xe0 | op -> operands [ 0 ] . reg		3541305	0		=			
ANR	3541388	ArrayIndexing	data [ l ++ ]		3541305	0					
ANR	3541389	Identifier	data		3541305	0					
ANR	3541390	PostIncDecOperationExpression	l ++		3541305	1					
ANR	3541391	Identifier	l		3541305	0					
ANR	3541392	IncDec	++		3541305	1					
ANR	3541393	InclusiveOrExpression	0xe0 | op -> operands [ 0 ] . reg		3541305	1		|			
ANR	3541394	PrimaryExpression	0xe0		3541305	0					
ANR	3541395	MemberAccess	op -> operands [ 0 ] . reg		3541305	1					
ANR	3541396	ArrayIndexing	op -> operands [ 0 ]		3541305	0					
ANR	3541397	PtrMemberAccess	op -> operands		3541305	0					
ANR	3541398	Identifier	op		3541305	0					
ANR	3541399	Identifier	operands		3541305	1					
ANR	3541400	PrimaryExpression	0		3541305	1					
ANR	3541401	Identifier	reg		3541305	1					
ANR	3541402	BreakStatement	break ;	3944:2:97485:97490	3541305	5	True				
ANR	3541403	Label	default :	3945:1:97493:97500	3541305	6	True				
ANR	3541404	Identifier	default		3541305	0					
ANR	3541405	ReturnStatement	return - 1 ;	3946:2:97504:97513	3541305	7	True				
ANR	3541406	UnaryOperationExpression	- 1		3541305	0					
ANR	3541407	UnaryOperator	-		3541305	0					
ANR	3541408	PrimaryExpression	1		3541305	1					
ANR	3541409	ReturnStatement	return l ;	3948:1:97519:97527	3541305	2	True				
ANR	3541410	Identifier	l		3541305	0					
ANR	3541411	ReturnType	static int		3541305	1					
ANR	3541412	Identifier	opsmsw		3541305	2					
ANR	3541413	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3541305	3					
ANR	3541414	Parameter	RAsm * a	3930:18:97152:97158	3541305	0	True				
ANR	3541415	ParameterType	RAsm *		3541305	0					
ANR	3541416	Identifier	a		3541305	1					
ANR	3541417	Parameter	ut8 * data	3930:27:97161:97169	3541305	1	True				
ANR	3541418	ParameterType	ut8 *		3541305	0					
ANR	3541419	Identifier	data		3541305	1					
ANR	3541420	Parameter	const Opcode * op	3930:38:97172:97187	3541305	2	True				
ANR	3541421	ParameterType	const Opcode *		3541305	0					
ANR	3541422	Identifier	op		3541305	1					
ANR	3541423	CFGEntryNode	ENTRY		3541305		True				
ANR	3541424	CFGExitNode	EXIT		3541305		True				
ANR	3541425	Symbol	a		3541305						
ANR	3541426	Symbol	op		3541305						
ANR	3541427	Symbol	data		3541305						
ANR	3541428	Symbol	* op		3541305						
ANR	3541429	Symbol	* a		3541305						
ANR	3541430	Symbol	* * op -> operands		3541305						
ANR	3541431	Symbol	l		3541305						
ANR	3541432	Symbol	* * op		3541305						
ANR	3541433	Symbol	* op -> operands		3541305						
ANR	3541434	Symbol	op -> operands_count		3541305						
ANR	3541435	Symbol	* op -> operands [ 0 ] . regs		3541305						
ANR	3541436	Symbol	op -> operands [ 0 ] . type		3541305						
ANR	3541437	Symbol	* * * op		3541305						
ANR	3541438	Symbol	op -> operands [ 0 ] . reg		3541305						
ANR	3541439	Symbol	op -> operands		3541305						
ANR	3541440	Symbol	* data		3541305						
ANR	3541441	Symbol	OT_MEMORY		3541305						
ANR	3541442	Symbol	op -> operands [ 0 ] . regs		3541305						
ANR	3541443	Symbol	a -> bits		3541305						
ANR	3541444	Function	opverr	3951:0:97532:97955							
ANR	3541445	FunctionDef	"opverr (RAsm * a , ut8 * data , const Opcode * op)"		3541444	0					
ANR	3541446	CompoundStatement		3951:56:97588:97955	3541444	0					
ANR	3541447	IdentifierDeclStatement	int l = 0 ;	3952:1:97591:97600	3541444	0	True				
ANR	3541448	IdentifierDecl	l = 0		3541444	0					
ANR	3541449	IdentifierDeclType	int		3541444	0					
ANR	3541450	Identifier	l		3541444	1					
ANR	3541451	AssignmentExpression	l = 0		3541444	2		=			
ANR	3541452	Identifier	l		3541444	0					
ANR	3541453	PrimaryExpression	0		3541444	1					
ANR	3541454	SwitchStatement	switch ( op -> operands_count )		3541444	1					
ANR	3541455	Condition	op -> operands_count	3953:9:97611:97628	3541444	0	True				
ANR	3541456	PtrMemberAccess	op -> operands_count		3541444	0					
ANR	3541457	Identifier	op		3541444	0					
ANR	3541458	Identifier	operands_count		3541444	1					
ANR	3541459	CompoundStatement		3:29:42:42	3541444	1					
ANR	3541460	Label	case 1 :	3954:1:97634:97640	3541444	0	True				
ANR	3541461	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		3541444	1					
ANR	3541462	Condition	op -> operands [ 0 ] . type & OT_WORD	3955:7:97649:97678	3541444	0	True				
ANR	3541463	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		3541444	0		&			
ANR	3541464	MemberAccess	op -> operands [ 0 ] . type		3541444	0					
ANR	3541465	ArrayIndexing	op -> operands [ 0 ]		3541444	0					
ANR	3541466	PtrMemberAccess	op -> operands		3541444	0					
ANR	3541467	Identifier	op		3541444	0					
ANR	3541468	Identifier	operands		3541444	1					
ANR	3541469	PrimaryExpression	0		3541444	1					
ANR	3541470	Identifier	type		3541444	1					
ANR	3541471	Identifier	OT_WORD		3541444	1					
ANR	3541472	CompoundStatement		5:40:93:93	3541444	1					
ANR	3541473	ExpressionStatement	data [ l ++ ] = 0x0f	3956:3:97687:97703	3541444	0	True				
ANR	3541474	AssignmentExpression	data [ l ++ ] = 0x0f		3541444	0		=			
ANR	3541475	ArrayIndexing	data [ l ++ ]		3541444	0					
ANR	3541476	Identifier	data		3541444	0					
ANR	3541477	PostIncDecOperationExpression	l ++		3541444	1					
ANR	3541478	Identifier	l		3541444	0					
ANR	3541479	IncDec	++		3541444	1					
ANR	3541480	PrimaryExpression	0x0f		3541444	1					
ANR	3541481	ExpressionStatement	data [ l ++ ] = 0x00	3957:3:97708:97724	3541444	1	True				
ANR	3541482	AssignmentExpression	data [ l ++ ] = 0x00		3541444	0		=			
ANR	3541483	ArrayIndexing	data [ l ++ ]		3541444	0					
ANR	3541484	Identifier	data		3541444	0					
ANR	3541485	PostIncDecOperationExpression	l ++		3541444	1					
ANR	3541486	Identifier	l		3541444	0					
ANR	3541487	IncDec	++		3541444	1					
ANR	3541488	PrimaryExpression	0x00		3541444	1					
ANR	3541489	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3541444	2					
ANR	3541490	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3958:8:97734:97765	3541444	0	True				
ANR	3541491	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3541444	0		&			
ANR	3541492	MemberAccess	op -> operands [ 0 ] . type		3541444	0					
ANR	3541493	ArrayIndexing	op -> operands [ 0 ]		3541444	0					
ANR	3541494	PtrMemberAccess	op -> operands		3541444	0					
ANR	3541495	Identifier	op		3541444	0					
ANR	3541496	Identifier	operands		3541444	1					
ANR	3541497	PrimaryExpression	0		3541444	1					
ANR	3541498	Identifier	type		3541444	1					
ANR	3541499	Identifier	OT_MEMORY		3541444	1					
ANR	3541500	CompoundStatement		8:43:180:180	3541444	1					
ANR	3541501	ExpressionStatement	data [ l ++ ] = 0x20 | op -> operands [ 0 ] . regs [ 0 ]	3959:4:97775:97817	3541444	0	True				
ANR	3541502	AssignmentExpression	data [ l ++ ] = 0x20 | op -> operands [ 0 ] . regs [ 0 ]		3541444	0		=			
ANR	3541503	ArrayIndexing	data [ l ++ ]		3541444	0					
ANR	3541504	Identifier	data		3541444	0					
ANR	3541505	PostIncDecOperationExpression	l ++		3541444	1					
ANR	3541506	Identifier	l		3541444	0					
ANR	3541507	IncDec	++		3541444	1					
ANR	3541508	InclusiveOrExpression	0x20 | op -> operands [ 0 ] . regs [ 0 ]		3541444	1		|			
ANR	3541509	PrimaryExpression	0x20		3541444	0					
ANR	3541510	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3541444	1					
ANR	3541511	MemberAccess	op -> operands [ 0 ] . regs		3541444	0					
ANR	3541512	ArrayIndexing	op -> operands [ 0 ]		3541444	0					
ANR	3541513	PtrMemberAccess	op -> operands		3541444	0					
ANR	3541514	Identifier	op		3541444	0					
ANR	3541515	Identifier	operands		3541444	1					
ANR	3541516	PrimaryExpression	0		3541444	1					
ANR	3541517	Identifier	regs		3541444	1					
ANR	3541518	PrimaryExpression	0		3541444	1					
ANR	3541519	ElseStatement	else		3541444	0					
ANR	3541520	CompoundStatement		10:10:240:240	3541444	0					
ANR	3541521	ExpressionStatement	data [ l ++ ] = 0xe0 | op -> operands [ 0 ] . reg	3961:4:97835:97873	3541444	0	True				
ANR	3541522	AssignmentExpression	data [ l ++ ] = 0xe0 | op -> operands [ 0 ] . reg		3541444	0		=			
ANR	3541523	ArrayIndexing	data [ l ++ ]		3541444	0					
ANR	3541524	Identifier	data		3541444	0					
ANR	3541525	PostIncDecOperationExpression	l ++		3541444	1					
ANR	3541526	Identifier	l		3541444	0					
ANR	3541527	IncDec	++		3541444	1					
ANR	3541528	InclusiveOrExpression	0xe0 | op -> operands [ 0 ] . reg		3541444	1		|			
ANR	3541529	PrimaryExpression	0xe0		3541444	0					
ANR	3541530	MemberAccess	op -> operands [ 0 ] . reg		3541444	1					
ANR	3541531	ArrayIndexing	op -> operands [ 0 ]		3541444	0					
ANR	3541532	PtrMemberAccess	op -> operands		3541444	0					
ANR	3541533	Identifier	op		3541444	0					
ANR	3541534	Identifier	operands		3541444	1					
ANR	3541535	PrimaryExpression	0		3541444	1					
ANR	3541536	Identifier	reg		3541444	1					
ANR	3541537	ElseStatement	else		3541444	0					
ANR	3541538	CompoundStatement		13:9:300:300	3541444	0					
ANR	3541539	ReturnStatement	return - 1 ;	3964:3:97894:97903	3541444	0	True				
ANR	3541540	UnaryOperationExpression	- 1		3541444	0					
ANR	3541541	UnaryOperator	-		3541444	0					
ANR	3541542	PrimaryExpression	1		3541444	1					
ANR	3541543	BreakStatement	break ;	3966:2:97911:97916	3541444	2	True				
ANR	3541544	Label	default :	3967:1:97919:97926	3541444	3	True				
ANR	3541545	Identifier	default		3541444	0					
ANR	3541546	ReturnStatement	return - 1 ;	3968:2:97930:97939	3541444	4	True				
ANR	3541547	UnaryOperationExpression	- 1		3541444	0					
ANR	3541548	UnaryOperator	-		3541444	0					
ANR	3541549	PrimaryExpression	1		3541444	1					
ANR	3541550	ReturnStatement	return l ;	3970:1:97945:97953	3541444	2	True				
ANR	3541551	Identifier	l		3541444	0					
ANR	3541552	ReturnType	static int		3541444	1					
ANR	3541553	Identifier	opverr		3541444	2					
ANR	3541554	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3541444	3					
ANR	3541555	Parameter	RAsm * a	3951:18:97550:97556	3541444	0	True				
ANR	3541556	ParameterType	RAsm *		3541444	0					
ANR	3541557	Identifier	a		3541444	1					
ANR	3541558	Parameter	ut8 * data	3951:27:97559:97567	3541444	1	True				
ANR	3541559	ParameterType	ut8 *		3541444	0					
ANR	3541560	Identifier	data		3541444	1					
ANR	3541561	Parameter	const Opcode * op	3951:38:97570:97585	3541444	2	True				
ANR	3541562	ParameterType	const Opcode *		3541444	0					
ANR	3541563	Identifier	op		3541444	1					
ANR	3541564	CFGEntryNode	ENTRY		3541444		True				
ANR	3541565	CFGExitNode	EXIT		3541444		True				
ANR	3541566	Symbol	a		3541444						
ANR	3541567	Symbol	op		3541444						
ANR	3541568	Symbol	OT_WORD		3541444						
ANR	3541569	Symbol	data		3541444						
ANR	3541570	Symbol	* op		3541444						
ANR	3541571	Symbol	* * op -> operands		3541444						
ANR	3541572	Symbol	l		3541444						
ANR	3541573	Symbol	* * op		3541444						
ANR	3541574	Symbol	* op -> operands		3541444						
ANR	3541575	Symbol	op -> operands_count		3541444						
ANR	3541576	Symbol	* op -> operands [ 0 ] . regs		3541444						
ANR	3541577	Symbol	op -> operands [ 0 ] . type		3541444						
ANR	3541578	Symbol	* * * op		3541444						
ANR	3541579	Symbol	op -> operands [ 0 ] . reg		3541444						
ANR	3541580	Symbol	op -> operands		3541444						
ANR	3541581	Symbol	* data		3541444						
ANR	3541582	Symbol	OT_MEMORY		3541444						
ANR	3541583	Symbol	op -> operands [ 0 ] . regs		3541444						
ANR	3541584	Function	opverw	3973:0:97958:98381							
ANR	3541585	FunctionDef	"opverw (RAsm * a , ut8 * data , const Opcode * op)"		3541584	0					
ANR	3541586	CompoundStatement		3973:56:98014:98381	3541584	0					
ANR	3541587	IdentifierDeclStatement	int l = 0 ;	3974:1:98017:98026	3541584	0	True				
ANR	3541588	IdentifierDecl	l = 0		3541584	0					
ANR	3541589	IdentifierDeclType	int		3541584	0					
ANR	3541590	Identifier	l		3541584	1					
ANR	3541591	AssignmentExpression	l = 0		3541584	2		=			
ANR	3541592	Identifier	l		3541584	0					
ANR	3541593	PrimaryExpression	0		3541584	1					
ANR	3541594	SwitchStatement	switch ( op -> operands_count )		3541584	1					
ANR	3541595	Condition	op -> operands_count	3975:9:98037:98054	3541584	0	True				
ANR	3541596	PtrMemberAccess	op -> operands_count		3541584	0					
ANR	3541597	Identifier	op		3541584	0					
ANR	3541598	Identifier	operands_count		3541584	1					
ANR	3541599	CompoundStatement		3:29:42:42	3541584	1					
ANR	3541600	Label	case 1 :	3976:1:98060:98066	3541584	0	True				
ANR	3541601	IfStatement	if ( op -> operands [ 0 ] . type & OT_WORD )		3541584	1					
ANR	3541602	Condition	op -> operands [ 0 ] . type & OT_WORD	3977:7:98075:98104	3541584	0	True				
ANR	3541603	BitAndExpression	op -> operands [ 0 ] . type & OT_WORD		3541584	0		&			
ANR	3541604	MemberAccess	op -> operands [ 0 ] . type		3541584	0					
ANR	3541605	ArrayIndexing	op -> operands [ 0 ]		3541584	0					
ANR	3541606	PtrMemberAccess	op -> operands		3541584	0					
ANR	3541607	Identifier	op		3541584	0					
ANR	3541608	Identifier	operands		3541584	1					
ANR	3541609	PrimaryExpression	0		3541584	1					
ANR	3541610	Identifier	type		3541584	1					
ANR	3541611	Identifier	OT_WORD		3541584	1					
ANR	3541612	CompoundStatement		5:40:93:93	3541584	1					
ANR	3541613	ExpressionStatement	data [ l ++ ] = 0x0f	3978:3:98113:98129	3541584	0	True				
ANR	3541614	AssignmentExpression	data [ l ++ ] = 0x0f		3541584	0		=			
ANR	3541615	ArrayIndexing	data [ l ++ ]		3541584	0					
ANR	3541616	Identifier	data		3541584	0					
ANR	3541617	PostIncDecOperationExpression	l ++		3541584	1					
ANR	3541618	Identifier	l		3541584	0					
ANR	3541619	IncDec	++		3541584	1					
ANR	3541620	PrimaryExpression	0x0f		3541584	1					
ANR	3541621	ExpressionStatement	data [ l ++ ] = 0x00	3979:3:98134:98150	3541584	1	True				
ANR	3541622	AssignmentExpression	data [ l ++ ] = 0x00		3541584	0		=			
ANR	3541623	ArrayIndexing	data [ l ++ ]		3541584	0					
ANR	3541624	Identifier	data		3541584	0					
ANR	3541625	PostIncDecOperationExpression	l ++		3541584	1					
ANR	3541626	Identifier	l		3541584	0					
ANR	3541627	IncDec	++		3541584	1					
ANR	3541628	PrimaryExpression	0x00		3541584	1					
ANR	3541629	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY )		3541584	2					
ANR	3541630	Condition	op -> operands [ 0 ] . type & OT_MEMORY	3980:8:98160:98191	3541584	0	True				
ANR	3541631	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3541584	0		&			
ANR	3541632	MemberAccess	op -> operands [ 0 ] . type		3541584	0					
ANR	3541633	ArrayIndexing	op -> operands [ 0 ]		3541584	0					
ANR	3541634	PtrMemberAccess	op -> operands		3541584	0					
ANR	3541635	Identifier	op		3541584	0					
ANR	3541636	Identifier	operands		3541584	1					
ANR	3541637	PrimaryExpression	0		3541584	1					
ANR	3541638	Identifier	type		3541584	1					
ANR	3541639	Identifier	OT_MEMORY		3541584	1					
ANR	3541640	CompoundStatement		8:43:180:180	3541584	1					
ANR	3541641	ExpressionStatement	data [ l ++ ] = 0x28 | op -> operands [ 0 ] . regs [ 0 ]	3981:4:98201:98243	3541584	0	True				
ANR	3541642	AssignmentExpression	data [ l ++ ] = 0x28 | op -> operands [ 0 ] . regs [ 0 ]		3541584	0		=			
ANR	3541643	ArrayIndexing	data [ l ++ ]		3541584	0					
ANR	3541644	Identifier	data		3541584	0					
ANR	3541645	PostIncDecOperationExpression	l ++		3541584	1					
ANR	3541646	Identifier	l		3541584	0					
ANR	3541647	IncDec	++		3541584	1					
ANR	3541648	InclusiveOrExpression	0x28 | op -> operands [ 0 ] . regs [ 0 ]		3541584	1		|			
ANR	3541649	PrimaryExpression	0x28		3541584	0					
ANR	3541650	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3541584	1					
ANR	3541651	MemberAccess	op -> operands [ 0 ] . regs		3541584	0					
ANR	3541652	ArrayIndexing	op -> operands [ 0 ]		3541584	0					
ANR	3541653	PtrMemberAccess	op -> operands		3541584	0					
ANR	3541654	Identifier	op		3541584	0					
ANR	3541655	Identifier	operands		3541584	1					
ANR	3541656	PrimaryExpression	0		3541584	1					
ANR	3541657	Identifier	regs		3541584	1					
ANR	3541658	PrimaryExpression	0		3541584	1					
ANR	3541659	ElseStatement	else		3541584	0					
ANR	3541660	CompoundStatement		10:10:240:240	3541584	0					
ANR	3541661	ExpressionStatement	data [ l ++ ] = 0xe8 | op -> operands [ 0 ] . reg	3983:4:98261:98299	3541584	0	True				
ANR	3541662	AssignmentExpression	data [ l ++ ] = 0xe8 | op -> operands [ 0 ] . reg		3541584	0		=			
ANR	3541663	ArrayIndexing	data [ l ++ ]		3541584	0					
ANR	3541664	Identifier	data		3541584	0					
ANR	3541665	PostIncDecOperationExpression	l ++		3541584	1					
ANR	3541666	Identifier	l		3541584	0					
ANR	3541667	IncDec	++		3541584	1					
ANR	3541668	InclusiveOrExpression	0xe8 | op -> operands [ 0 ] . reg		3541584	1		|			
ANR	3541669	PrimaryExpression	0xe8		3541584	0					
ANR	3541670	MemberAccess	op -> operands [ 0 ] . reg		3541584	1					
ANR	3541671	ArrayIndexing	op -> operands [ 0 ]		3541584	0					
ANR	3541672	PtrMemberAccess	op -> operands		3541584	0					
ANR	3541673	Identifier	op		3541584	0					
ANR	3541674	Identifier	operands		3541584	1					
ANR	3541675	PrimaryExpression	0		3541584	1					
ANR	3541676	Identifier	reg		3541584	1					
ANR	3541677	ElseStatement	else		3541584	0					
ANR	3541678	CompoundStatement		13:9:300:300	3541584	0					
ANR	3541679	ReturnStatement	return - 1 ;	3986:3:98320:98329	3541584	0	True				
ANR	3541680	UnaryOperationExpression	- 1		3541584	0					
ANR	3541681	UnaryOperator	-		3541584	0					
ANR	3541682	PrimaryExpression	1		3541584	1					
ANR	3541683	BreakStatement	break ;	3988:2:98337:98342	3541584	2	True				
ANR	3541684	Label	default :	3989:1:98345:98352	3541584	3	True				
ANR	3541685	Identifier	default		3541584	0					
ANR	3541686	ReturnStatement	return - 1 ;	3990:2:98356:98365	3541584	4	True				
ANR	3541687	UnaryOperationExpression	- 1		3541584	0					
ANR	3541688	UnaryOperator	-		3541584	0					
ANR	3541689	PrimaryExpression	1		3541584	1					
ANR	3541690	ReturnStatement	return l ;	3992:1:98371:98379	3541584	2	True				
ANR	3541691	Identifier	l		3541584	0					
ANR	3541692	ReturnType	static int		3541584	1					
ANR	3541693	Identifier	opverw		3541584	2					
ANR	3541694	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3541584	3					
ANR	3541695	Parameter	RAsm * a	3973:18:97976:97982	3541584	0	True				
ANR	3541696	ParameterType	RAsm *		3541584	0					
ANR	3541697	Identifier	a		3541584	1					
ANR	3541698	Parameter	ut8 * data	3973:27:97985:97993	3541584	1	True				
ANR	3541699	ParameterType	ut8 *		3541584	0					
ANR	3541700	Identifier	data		3541584	1					
ANR	3541701	Parameter	const Opcode * op	3973:38:97996:98011	3541584	2	True				
ANR	3541702	ParameterType	const Opcode *		3541584	0					
ANR	3541703	Identifier	op		3541584	1					
ANR	3541704	CFGEntryNode	ENTRY		3541584		True				
ANR	3541705	CFGExitNode	EXIT		3541584		True				
ANR	3541706	Symbol	a		3541584						
ANR	3541707	Symbol	op		3541584						
ANR	3541708	Symbol	OT_WORD		3541584						
ANR	3541709	Symbol	data		3541584						
ANR	3541710	Symbol	* op		3541584						
ANR	3541711	Symbol	* * op -> operands		3541584						
ANR	3541712	Symbol	l		3541584						
ANR	3541713	Symbol	* * op		3541584						
ANR	3541714	Symbol	* op -> operands		3541584						
ANR	3541715	Symbol	op -> operands_count		3541584						
ANR	3541716	Symbol	* op -> operands [ 0 ] . regs		3541584						
ANR	3541717	Symbol	op -> operands [ 0 ] . type		3541584						
ANR	3541718	Symbol	* * * op		3541584						
ANR	3541719	Symbol	op -> operands [ 0 ] . reg		3541584						
ANR	3541720	Symbol	op -> operands		3541584						
ANR	3541721	Symbol	* data		3541584						
ANR	3541722	Symbol	OT_MEMORY		3541584						
ANR	3541723	Symbol	op -> operands [ 0 ] . regs		3541584						
ANR	3541724	Function	opvmclear	3995:0:98384:98775							
ANR	3541725	FunctionDef	"opvmclear (RAsm * a , ut8 * data , const Opcode * op)"		3541724	0					
ANR	3541726	CompoundStatement		3995:59:98443:98775	3541724	0					
ANR	3541727	IdentifierDeclStatement	int l = 0 ;	3996:1:98446:98455	3541724	0	True				
ANR	3541728	IdentifierDecl	l = 0		3541724	0					
ANR	3541729	IdentifierDeclType	int		3541724	0					
ANR	3541730	Identifier	l		3541724	1					
ANR	3541731	AssignmentExpression	l = 0		3541724	2		=			
ANR	3541732	Identifier	l		3541724	0					
ANR	3541733	PrimaryExpression	0		3541724	1					
ANR	3541734	SwitchStatement	switch ( op -> operands_count )		3541724	1					
ANR	3541735	Condition	op -> operands_count	3997:9:98466:98483	3541724	0	True				
ANR	3541736	PtrMemberAccess	op -> operands_count		3541724	0					
ANR	3541737	Identifier	op		3541724	0					
ANR	3541738	Identifier	operands_count		3541724	1					
ANR	3541739	CompoundStatement		3:29:42:42	3541724	1					
ANR	3541740	Label	case 1 :	3998:1:98489:98495	3541724	0	True				
ANR	3541741	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_QWORD )		3541724	1					
ANR	3541742	Condition	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_QWORD	3999:7:98504:98577	3541724	0	True				
ANR	3541743	AndExpression	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_QWORD		3541724	0		&&			
ANR	3541744	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3541724	0		&			
ANR	3541745	MemberAccess	op -> operands [ 0 ] . type		3541724	0					
ANR	3541746	ArrayIndexing	op -> operands [ 0 ]		3541724	0					
ANR	3541747	PtrMemberAccess	op -> operands		3541724	0					
ANR	3541748	Identifier	op		3541724	0					
ANR	3541749	Identifier	operands		3541724	1					
ANR	3541750	PrimaryExpression	0		3541724	1					
ANR	3541751	Identifier	type		3541724	1					
ANR	3541752	Identifier	OT_MEMORY		3541724	1					
ANR	3541753	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		3541724	1		&			
ANR	3541754	MemberAccess	op -> operands [ 0 ] . type		3541724	0					
ANR	3541755	ArrayIndexing	op -> operands [ 0 ]		3541724	0					
ANR	3541756	PtrMemberAccess	op -> operands		3541724	0					
ANR	3541757	Identifier	op		3541724	0					
ANR	3541758	Identifier	operands		3541724	1					
ANR	3541759	PrimaryExpression	0		3541724	1					
ANR	3541760	Identifier	type		3541724	1					
ANR	3541761	Identifier	OT_QWORD		3541724	1					
ANR	3541762	CompoundStatement		7:9:144:144	3541724	1					
ANR	3541763	ExpressionStatement	data [ l ++ ] = 0x66	4002:3:98593:98609	3541724	0	True				
ANR	3541764	AssignmentExpression	data [ l ++ ] = 0x66		3541724	0		=			
ANR	3541765	ArrayIndexing	data [ l ++ ]		3541724	0					
ANR	3541766	Identifier	data		3541724	0					
ANR	3541767	PostIncDecOperationExpression	l ++		3541724	1					
ANR	3541768	Identifier	l		3541724	0					
ANR	3541769	IncDec	++		3541724	1					
ANR	3541770	PrimaryExpression	0x66		3541724	1					
ANR	3541771	ExpressionStatement	data [ l ++ ] = 0x0f	4003:3:98614:98630	3541724	1	True				
ANR	3541772	AssignmentExpression	data [ l ++ ] = 0x0f		3541724	0		=			
ANR	3541773	ArrayIndexing	data [ l ++ ]		3541724	0					
ANR	3541774	Identifier	data		3541724	0					
ANR	3541775	PostIncDecOperationExpression	l ++		3541724	1					
ANR	3541776	Identifier	l		3541724	0					
ANR	3541777	IncDec	++		3541724	1					
ANR	3541778	PrimaryExpression	0x0f		3541724	1					
ANR	3541779	ExpressionStatement	data [ l ++ ] = 0xc7	4004:3:98635:98651	3541724	2	True				
ANR	3541780	AssignmentExpression	data [ l ++ ] = 0xc7		3541724	0		=			
ANR	3541781	ArrayIndexing	data [ l ++ ]		3541724	0					
ANR	3541782	Identifier	data		3541724	0					
ANR	3541783	PostIncDecOperationExpression	l ++		3541724	1					
ANR	3541784	Identifier	l		3541724	0					
ANR	3541785	IncDec	++		3541724	1					
ANR	3541786	PrimaryExpression	0xc7		3541724	1					
ANR	3541787	ExpressionStatement	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]	4005:3:98656:98698	3541724	3	True				
ANR	3541788	AssignmentExpression	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]		3541724	0		=			
ANR	3541789	ArrayIndexing	data [ l ++ ]		3541724	0					
ANR	3541790	Identifier	data		3541724	0					
ANR	3541791	PostIncDecOperationExpression	l ++		3541724	1					
ANR	3541792	Identifier	l		3541724	0					
ANR	3541793	IncDec	++		3541724	1					
ANR	3541794	InclusiveOrExpression	0x30 | op -> operands [ 0 ] . regs [ 0 ]		3541724	1		|			
ANR	3541795	PrimaryExpression	0x30		3541724	0					
ANR	3541796	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3541724	1					
ANR	3541797	MemberAccess	op -> operands [ 0 ] . regs		3541724	0					
ANR	3541798	ArrayIndexing	op -> operands [ 0 ]		3541724	0					
ANR	3541799	PtrMemberAccess	op -> operands		3541724	0					
ANR	3541800	Identifier	op		3541724	0					
ANR	3541801	Identifier	operands		3541724	1					
ANR	3541802	PrimaryExpression	0		3541724	1					
ANR	3541803	Identifier	regs		3541724	1					
ANR	3541804	PrimaryExpression	0		3541724	1					
ANR	3541805	ElseStatement	else		3541724	0					
ANR	3541806	CompoundStatement		12:9:265:265	3541724	0					
ANR	3541807	ReturnStatement	return - 1 ;	4007:3:98714:98723	3541724	0	True				
ANR	3541808	UnaryOperationExpression	- 1		3541724	0					
ANR	3541809	UnaryOperator	-		3541724	0					
ANR	3541810	PrimaryExpression	1		3541724	1					
ANR	3541811	BreakStatement	break ;	4009:2:98731:98736	3541724	2	True				
ANR	3541812	Label	default :	4010:1:98739:98746	3541724	3	True				
ANR	3541813	Identifier	default		3541724	0					
ANR	3541814	ReturnStatement	return - 1 ;	4011:2:98750:98759	3541724	4	True				
ANR	3541815	UnaryOperationExpression	- 1		3541724	0					
ANR	3541816	UnaryOperator	-		3541724	0					
ANR	3541817	PrimaryExpression	1		3541724	1					
ANR	3541818	ReturnStatement	return l ;	4013:1:98765:98773	3541724	2	True				
ANR	3541819	Identifier	l		3541724	0					
ANR	3541820	ReturnType	static int		3541724	1					
ANR	3541821	Identifier	opvmclear		3541724	2					
ANR	3541822	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3541724	3					
ANR	3541823	Parameter	RAsm * a	3995:21:98405:98411	3541724	0	True				
ANR	3541824	ParameterType	RAsm *		3541724	0					
ANR	3541825	Identifier	a		3541724	1					
ANR	3541826	Parameter	ut8 * data	3995:30:98414:98422	3541724	1	True				
ANR	3541827	ParameterType	ut8 *		3541724	0					
ANR	3541828	Identifier	data		3541724	1					
ANR	3541829	Parameter	const Opcode * op	3995:41:98425:98440	3541724	2	True				
ANR	3541830	ParameterType	const Opcode *		3541724	0					
ANR	3541831	Identifier	op		3541724	1					
ANR	3541832	CFGEntryNode	ENTRY		3541724		True				
ANR	3541833	CFGExitNode	EXIT		3541724		True				
ANR	3541834	Symbol	a		3541724						
ANR	3541835	Symbol	op		3541724						
ANR	3541836	Symbol	OT_QWORD		3541724						
ANR	3541837	Symbol	data		3541724						
ANR	3541838	Symbol	* op		3541724						
ANR	3541839	Symbol	* * op -> operands		3541724						
ANR	3541840	Symbol	l		3541724						
ANR	3541841	Symbol	* * op		3541724						
ANR	3541842	Symbol	* op -> operands		3541724						
ANR	3541843	Symbol	op -> operands_count		3541724						
ANR	3541844	Symbol	* op -> operands [ 0 ] . regs		3541724						
ANR	3541845	Symbol	op -> operands [ 0 ] . type		3541724						
ANR	3541846	Symbol	* * * op		3541724						
ANR	3541847	Symbol	op -> operands		3541724						
ANR	3541848	Symbol	OT_MEMORY		3541724						
ANR	3541849	Symbol	* data		3541724						
ANR	3541850	Symbol	op -> operands [ 0 ] . regs		3541724						
ANR	3541851	Function	opvmon	4016:0:98778:99166							
ANR	3541852	FunctionDef	"opvmon (RAsm * a , ut8 * data , const Opcode * op)"		3541851	0					
ANR	3541853	CompoundStatement		4016:56:98834:99166	3541851	0					
ANR	3541854	IdentifierDeclStatement	int l = 0 ;	4017:1:98837:98846	3541851	0	True				
ANR	3541855	IdentifierDecl	l = 0		3541851	0					
ANR	3541856	IdentifierDeclType	int		3541851	0					
ANR	3541857	Identifier	l		3541851	1					
ANR	3541858	AssignmentExpression	l = 0		3541851	2		=			
ANR	3541859	Identifier	l		3541851	0					
ANR	3541860	PrimaryExpression	0		3541851	1					
ANR	3541861	SwitchStatement	switch ( op -> operands_count )		3541851	1					
ANR	3541862	Condition	op -> operands_count	4018:9:98857:98874	3541851	0	True				
ANR	3541863	PtrMemberAccess	op -> operands_count		3541851	0					
ANR	3541864	Identifier	op		3541851	0					
ANR	3541865	Identifier	operands_count		3541851	1					
ANR	3541866	CompoundStatement		3:29:42:42	3541851	1					
ANR	3541867	Label	case 1 :	4019:1:98880:98886	3541851	0	True				
ANR	3541868	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_QWORD )		3541851	1					
ANR	3541869	Condition	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_QWORD	4020:7:98895:98968	3541851	0	True				
ANR	3541870	AndExpression	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_QWORD		3541851	0		&&			
ANR	3541871	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3541851	0		&			
ANR	3541872	MemberAccess	op -> operands [ 0 ] . type		3541851	0					
ANR	3541873	ArrayIndexing	op -> operands [ 0 ]		3541851	0					
ANR	3541874	PtrMemberAccess	op -> operands		3541851	0					
ANR	3541875	Identifier	op		3541851	0					
ANR	3541876	Identifier	operands		3541851	1					
ANR	3541877	PrimaryExpression	0		3541851	1					
ANR	3541878	Identifier	type		3541851	1					
ANR	3541879	Identifier	OT_MEMORY		3541851	1					
ANR	3541880	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		3541851	1		&			
ANR	3541881	MemberAccess	op -> operands [ 0 ] . type		3541851	0					
ANR	3541882	ArrayIndexing	op -> operands [ 0 ]		3541851	0					
ANR	3541883	PtrMemberAccess	op -> operands		3541851	0					
ANR	3541884	Identifier	op		3541851	0					
ANR	3541885	Identifier	operands		3541851	1					
ANR	3541886	PrimaryExpression	0		3541851	1					
ANR	3541887	Identifier	type		3541851	1					
ANR	3541888	Identifier	OT_QWORD		3541851	1					
ANR	3541889	CompoundStatement		7:9:144:144	3541851	1					
ANR	3541890	ExpressionStatement	data [ l ++ ] = 0xf3	4023:3:98984:99000	3541851	0	True				
ANR	3541891	AssignmentExpression	data [ l ++ ] = 0xf3		3541851	0		=			
ANR	3541892	ArrayIndexing	data [ l ++ ]		3541851	0					
ANR	3541893	Identifier	data		3541851	0					
ANR	3541894	PostIncDecOperationExpression	l ++		3541851	1					
ANR	3541895	Identifier	l		3541851	0					
ANR	3541896	IncDec	++		3541851	1					
ANR	3541897	PrimaryExpression	0xf3		3541851	1					
ANR	3541898	ExpressionStatement	data [ l ++ ] = 0x0f	4024:3:99005:99021	3541851	1	True				
ANR	3541899	AssignmentExpression	data [ l ++ ] = 0x0f		3541851	0		=			
ANR	3541900	ArrayIndexing	data [ l ++ ]		3541851	0					
ANR	3541901	Identifier	data		3541851	0					
ANR	3541902	PostIncDecOperationExpression	l ++		3541851	1					
ANR	3541903	Identifier	l		3541851	0					
ANR	3541904	IncDec	++		3541851	1					
ANR	3541905	PrimaryExpression	0x0f		3541851	1					
ANR	3541906	ExpressionStatement	data [ l ++ ] = 0xc7	4025:3:99026:99042	3541851	2	True				
ANR	3541907	AssignmentExpression	data [ l ++ ] = 0xc7		3541851	0		=			
ANR	3541908	ArrayIndexing	data [ l ++ ]		3541851	0					
ANR	3541909	Identifier	data		3541851	0					
ANR	3541910	PostIncDecOperationExpression	l ++		3541851	1					
ANR	3541911	Identifier	l		3541851	0					
ANR	3541912	IncDec	++		3541851	1					
ANR	3541913	PrimaryExpression	0xc7		3541851	1					
ANR	3541914	ExpressionStatement	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]	4026:3:99047:99089	3541851	3	True				
ANR	3541915	AssignmentExpression	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]		3541851	0		=			
ANR	3541916	ArrayIndexing	data [ l ++ ]		3541851	0					
ANR	3541917	Identifier	data		3541851	0					
ANR	3541918	PostIncDecOperationExpression	l ++		3541851	1					
ANR	3541919	Identifier	l		3541851	0					
ANR	3541920	IncDec	++		3541851	1					
ANR	3541921	InclusiveOrExpression	0x30 | op -> operands [ 0 ] . regs [ 0 ]		3541851	1		|			
ANR	3541922	PrimaryExpression	0x30		3541851	0					
ANR	3541923	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3541851	1					
ANR	3541924	MemberAccess	op -> operands [ 0 ] . regs		3541851	0					
ANR	3541925	ArrayIndexing	op -> operands [ 0 ]		3541851	0					
ANR	3541926	PtrMemberAccess	op -> operands		3541851	0					
ANR	3541927	Identifier	op		3541851	0					
ANR	3541928	Identifier	operands		3541851	1					
ANR	3541929	PrimaryExpression	0		3541851	1					
ANR	3541930	Identifier	regs		3541851	1					
ANR	3541931	PrimaryExpression	0		3541851	1					
ANR	3541932	ElseStatement	else		3541851	0					
ANR	3541933	CompoundStatement		12:9:265:265	3541851	0					
ANR	3541934	ReturnStatement	return - 1 ;	4028:3:99105:99114	3541851	0	True				
ANR	3541935	UnaryOperationExpression	- 1		3541851	0					
ANR	3541936	UnaryOperator	-		3541851	0					
ANR	3541937	PrimaryExpression	1		3541851	1					
ANR	3541938	BreakStatement	break ;	4030:2:99122:99127	3541851	2	True				
ANR	3541939	Label	default :	4031:1:99130:99137	3541851	3	True				
ANR	3541940	Identifier	default		3541851	0					
ANR	3541941	ReturnStatement	return - 1 ;	4032:2:99141:99150	3541851	4	True				
ANR	3541942	UnaryOperationExpression	- 1		3541851	0					
ANR	3541943	UnaryOperator	-		3541851	0					
ANR	3541944	PrimaryExpression	1		3541851	1					
ANR	3541945	ReturnStatement	return l ;	4034:1:99156:99164	3541851	2	True				
ANR	3541946	Identifier	l		3541851	0					
ANR	3541947	ReturnType	static int		3541851	1					
ANR	3541948	Identifier	opvmon		3541851	2					
ANR	3541949	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3541851	3					
ANR	3541950	Parameter	RAsm * a	4016:18:98796:98802	3541851	0	True				
ANR	3541951	ParameterType	RAsm *		3541851	0					
ANR	3541952	Identifier	a		3541851	1					
ANR	3541953	Parameter	ut8 * data	4016:27:98805:98813	3541851	1	True				
ANR	3541954	ParameterType	ut8 *		3541851	0					
ANR	3541955	Identifier	data		3541851	1					
ANR	3541956	Parameter	const Opcode * op	4016:38:98816:98831	3541851	2	True				
ANR	3541957	ParameterType	const Opcode *		3541851	0					
ANR	3541958	Identifier	op		3541851	1					
ANR	3541959	CFGEntryNode	ENTRY		3541851		True				
ANR	3541960	CFGExitNode	EXIT		3541851		True				
ANR	3541961	Symbol	a		3541851						
ANR	3541962	Symbol	op		3541851						
ANR	3541963	Symbol	OT_QWORD		3541851						
ANR	3541964	Symbol	data		3541851						
ANR	3541965	Symbol	* op		3541851						
ANR	3541966	Symbol	* * op -> operands		3541851						
ANR	3541967	Symbol	l		3541851						
ANR	3541968	Symbol	* * op		3541851						
ANR	3541969	Symbol	* op -> operands		3541851						
ANR	3541970	Symbol	op -> operands_count		3541851						
ANR	3541971	Symbol	* op -> operands [ 0 ] . regs		3541851						
ANR	3541972	Symbol	op -> operands [ 0 ] . type		3541851						
ANR	3541973	Symbol	* * * op		3541851						
ANR	3541974	Symbol	op -> operands		3541851						
ANR	3541975	Symbol	OT_MEMORY		3541851						
ANR	3541976	Symbol	* data		3541851						
ANR	3541977	Symbol	op -> operands [ 0 ] . regs		3541851						
ANR	3541978	Function	opvmptrld	4037:0:99169:99539							
ANR	3541979	FunctionDef	"opvmptrld (RAsm * a , ut8 * data , const Opcode * op)"		3541978	0					
ANR	3541980	CompoundStatement		4037:59:99228:99539	3541978	0					
ANR	3541981	IdentifierDeclStatement	int l = 0 ;	4038:1:99231:99240	3541978	0	True				
ANR	3541982	IdentifierDecl	l = 0		3541978	0					
ANR	3541983	IdentifierDeclType	int		3541978	0					
ANR	3541984	Identifier	l		3541978	1					
ANR	3541985	AssignmentExpression	l = 0		3541978	2		=			
ANR	3541986	Identifier	l		3541978	0					
ANR	3541987	PrimaryExpression	0		3541978	1					
ANR	3541988	SwitchStatement	switch ( op -> operands_count )		3541978	1					
ANR	3541989	Condition	op -> operands_count	4039:9:99251:99268	3541978	0	True				
ANR	3541990	PtrMemberAccess	op -> operands_count		3541978	0					
ANR	3541991	Identifier	op		3541978	0					
ANR	3541992	Identifier	operands_count		3541978	1					
ANR	3541993	CompoundStatement		3:29:42:42	3541978	1					
ANR	3541994	Label	case 1 :	4040:1:99274:99280	3541978	0	True				
ANR	3541995	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_QWORD )		3541978	1					
ANR	3541996	Condition	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_QWORD	4041:7:99289:99362	3541978	0	True				
ANR	3541997	AndExpression	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_QWORD		3541978	0		&&			
ANR	3541998	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3541978	0		&			
ANR	3541999	MemberAccess	op -> operands [ 0 ] . type		3541978	0					
ANR	3542000	ArrayIndexing	op -> operands [ 0 ]		3541978	0					
ANR	3542001	PtrMemberAccess	op -> operands		3541978	0					
ANR	3542002	Identifier	op		3541978	0					
ANR	3542003	Identifier	operands		3541978	1					
ANR	3542004	PrimaryExpression	0		3541978	1					
ANR	3542005	Identifier	type		3541978	1					
ANR	3542006	Identifier	OT_MEMORY		3541978	1					
ANR	3542007	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		3541978	1		&			
ANR	3542008	MemberAccess	op -> operands [ 0 ] . type		3541978	0					
ANR	3542009	ArrayIndexing	op -> operands [ 0 ]		3541978	0					
ANR	3542010	PtrMemberAccess	op -> operands		3541978	0					
ANR	3542011	Identifier	op		3541978	0					
ANR	3542012	Identifier	operands		3541978	1					
ANR	3542013	PrimaryExpression	0		3541978	1					
ANR	3542014	Identifier	type		3541978	1					
ANR	3542015	Identifier	OT_QWORD		3541978	1					
ANR	3542016	CompoundStatement		7:9:144:144	3541978	1					
ANR	3542017	ExpressionStatement	data [ l ++ ] = 0x0f	4044:3:99378:99394	3541978	0	True				
ANR	3542018	AssignmentExpression	data [ l ++ ] = 0x0f		3541978	0		=			
ANR	3542019	ArrayIndexing	data [ l ++ ]		3541978	0					
ANR	3542020	Identifier	data		3541978	0					
ANR	3542021	PostIncDecOperationExpression	l ++		3541978	1					
ANR	3542022	Identifier	l		3541978	0					
ANR	3542023	IncDec	++		3541978	1					
ANR	3542024	PrimaryExpression	0x0f		3541978	1					
ANR	3542025	ExpressionStatement	data [ l ++ ] = 0xc7	4045:3:99399:99415	3541978	1	True				
ANR	3542026	AssignmentExpression	data [ l ++ ] = 0xc7		3541978	0		=			
ANR	3542027	ArrayIndexing	data [ l ++ ]		3541978	0					
ANR	3542028	Identifier	data		3541978	0					
ANR	3542029	PostIncDecOperationExpression	l ++		3541978	1					
ANR	3542030	Identifier	l		3541978	0					
ANR	3542031	IncDec	++		3541978	1					
ANR	3542032	PrimaryExpression	0xc7		3541978	1					
ANR	3542033	ExpressionStatement	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]	4046:3:99420:99462	3541978	2	True				
ANR	3542034	AssignmentExpression	data [ l ++ ] = 0x30 | op -> operands [ 0 ] . regs [ 0 ]		3541978	0		=			
ANR	3542035	ArrayIndexing	data [ l ++ ]		3541978	0					
ANR	3542036	Identifier	data		3541978	0					
ANR	3542037	PostIncDecOperationExpression	l ++		3541978	1					
ANR	3542038	Identifier	l		3541978	0					
ANR	3542039	IncDec	++		3541978	1					
ANR	3542040	InclusiveOrExpression	0x30 | op -> operands [ 0 ] . regs [ 0 ]		3541978	1		|			
ANR	3542041	PrimaryExpression	0x30		3541978	0					
ANR	3542042	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3541978	1					
ANR	3542043	MemberAccess	op -> operands [ 0 ] . regs		3541978	0					
ANR	3542044	ArrayIndexing	op -> operands [ 0 ]		3541978	0					
ANR	3542045	PtrMemberAccess	op -> operands		3541978	0					
ANR	3542046	Identifier	op		3541978	0					
ANR	3542047	Identifier	operands		3541978	1					
ANR	3542048	PrimaryExpression	0		3541978	1					
ANR	3542049	Identifier	regs		3541978	1					
ANR	3542050	PrimaryExpression	0		3541978	1					
ANR	3542051	ElseStatement	else		3541978	0					
ANR	3542052	CompoundStatement		11:9:244:244	3541978	0					
ANR	3542053	ReturnStatement	return - 1 ;	4048:3:99478:99487	3541978	0	True				
ANR	3542054	UnaryOperationExpression	- 1		3541978	0					
ANR	3542055	UnaryOperator	-		3541978	0					
ANR	3542056	PrimaryExpression	1		3541978	1					
ANR	3542057	BreakStatement	break ;	4050:2:99495:99500	3541978	2	True				
ANR	3542058	Label	default :	4051:1:99503:99510	3541978	3	True				
ANR	3542059	Identifier	default		3541978	0					
ANR	3542060	ReturnStatement	return - 1 ;	4052:2:99514:99523	3541978	4	True				
ANR	3542061	UnaryOperationExpression	- 1		3541978	0					
ANR	3542062	UnaryOperator	-		3541978	0					
ANR	3542063	PrimaryExpression	1		3541978	1					
ANR	3542064	ReturnStatement	return l ;	4054:1:99529:99537	3541978	2	True				
ANR	3542065	Identifier	l		3541978	0					
ANR	3542066	ReturnType	static int		3541978	1					
ANR	3542067	Identifier	opvmptrld		3541978	2					
ANR	3542068	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3541978	3					
ANR	3542069	Parameter	RAsm * a	4037:21:99190:99196	3541978	0	True				
ANR	3542070	ParameterType	RAsm *		3541978	0					
ANR	3542071	Identifier	a		3541978	1					
ANR	3542072	Parameter	ut8 * data	4037:30:99199:99207	3541978	1	True				
ANR	3542073	ParameterType	ut8 *		3541978	0					
ANR	3542074	Identifier	data		3541978	1					
ANR	3542075	Parameter	const Opcode * op	4037:41:99210:99225	3541978	2	True				
ANR	3542076	ParameterType	const Opcode *		3541978	0					
ANR	3542077	Identifier	op		3541978	1					
ANR	3542078	CFGEntryNode	ENTRY		3541978		True				
ANR	3542079	CFGExitNode	EXIT		3541978		True				
ANR	3542080	Symbol	a		3541978						
ANR	3542081	Symbol	op		3541978						
ANR	3542082	Symbol	OT_QWORD		3541978						
ANR	3542083	Symbol	data		3541978						
ANR	3542084	Symbol	* op		3541978						
ANR	3542085	Symbol	* * op -> operands		3541978						
ANR	3542086	Symbol	l		3541978						
ANR	3542087	Symbol	* * op		3541978						
ANR	3542088	Symbol	* op -> operands		3541978						
ANR	3542089	Symbol	op -> operands_count		3541978						
ANR	3542090	Symbol	* op -> operands [ 0 ] . regs		3541978						
ANR	3542091	Symbol	op -> operands [ 0 ] . type		3541978						
ANR	3542092	Symbol	* * * op		3541978						
ANR	3542093	Symbol	op -> operands		3541978						
ANR	3542094	Symbol	OT_MEMORY		3541978						
ANR	3542095	Symbol	* data		3541978						
ANR	3542096	Symbol	op -> operands [ 0 ] . regs		3541978						
ANR	3542097	Function	opvmptrst	4057:0:99542:99912							
ANR	3542098	FunctionDef	"opvmptrst (RAsm * a , ut8 * data , const Opcode * op)"		3542097	0					
ANR	3542099	CompoundStatement		4057:59:99601:99912	3542097	0					
ANR	3542100	IdentifierDeclStatement	int l = 0 ;	4058:1:99604:99613	3542097	0	True				
ANR	3542101	IdentifierDecl	l = 0		3542097	0					
ANR	3542102	IdentifierDeclType	int		3542097	0					
ANR	3542103	Identifier	l		3542097	1					
ANR	3542104	AssignmentExpression	l = 0		3542097	2		=			
ANR	3542105	Identifier	l		3542097	0					
ANR	3542106	PrimaryExpression	0		3542097	1					
ANR	3542107	SwitchStatement	switch ( op -> operands_count )		3542097	1					
ANR	3542108	Condition	op -> operands_count	4059:9:99624:99641	3542097	0	True				
ANR	3542109	PtrMemberAccess	op -> operands_count		3542097	0					
ANR	3542110	Identifier	op		3542097	0					
ANR	3542111	Identifier	operands_count		3542097	1					
ANR	3542112	CompoundStatement		3:29:42:42	3542097	1					
ANR	3542113	Label	case 1 :	4060:1:99647:99653	3542097	0	True				
ANR	3542114	IfStatement	if ( op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_QWORD )		3542097	1					
ANR	3542115	Condition	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_QWORD	4061:7:99662:99735	3542097	0	True				
ANR	3542116	AndExpression	op -> operands [ 0 ] . type & OT_MEMORY && op -> operands [ 0 ] . type & OT_QWORD		3542097	0		&&			
ANR	3542117	BitAndExpression	op -> operands [ 0 ] . type & OT_MEMORY		3542097	0		&			
ANR	3542118	MemberAccess	op -> operands [ 0 ] . type		3542097	0					
ANR	3542119	ArrayIndexing	op -> operands [ 0 ]		3542097	0					
ANR	3542120	PtrMemberAccess	op -> operands		3542097	0					
ANR	3542121	Identifier	op		3542097	0					
ANR	3542122	Identifier	operands		3542097	1					
ANR	3542123	PrimaryExpression	0		3542097	1					
ANR	3542124	Identifier	type		3542097	1					
ANR	3542125	Identifier	OT_MEMORY		3542097	1					
ANR	3542126	BitAndExpression	op -> operands [ 0 ] . type & OT_QWORD		3542097	1		&			
ANR	3542127	MemberAccess	op -> operands [ 0 ] . type		3542097	0					
ANR	3542128	ArrayIndexing	op -> operands [ 0 ]		3542097	0					
ANR	3542129	PtrMemberAccess	op -> operands		3542097	0					
ANR	3542130	Identifier	op		3542097	0					
ANR	3542131	Identifier	operands		3542097	1					
ANR	3542132	PrimaryExpression	0		3542097	1					
ANR	3542133	Identifier	type		3542097	1					
ANR	3542134	Identifier	OT_QWORD		3542097	1					
ANR	3542135	CompoundStatement		7:9:144:144	3542097	1					
ANR	3542136	ExpressionStatement	data [ l ++ ] = 0x0f	4064:3:99751:99767	3542097	0	True				
ANR	3542137	AssignmentExpression	data [ l ++ ] = 0x0f		3542097	0		=			
ANR	3542138	ArrayIndexing	data [ l ++ ]		3542097	0					
ANR	3542139	Identifier	data		3542097	0					
ANR	3542140	PostIncDecOperationExpression	l ++		3542097	1					
ANR	3542141	Identifier	l		3542097	0					
ANR	3542142	IncDec	++		3542097	1					
ANR	3542143	PrimaryExpression	0x0f		3542097	1					
ANR	3542144	ExpressionStatement	data [ l ++ ] = 0xc7	4065:3:99772:99788	3542097	1	True				
ANR	3542145	AssignmentExpression	data [ l ++ ] = 0xc7		3542097	0		=			
ANR	3542146	ArrayIndexing	data [ l ++ ]		3542097	0					
ANR	3542147	Identifier	data		3542097	0					
ANR	3542148	PostIncDecOperationExpression	l ++		3542097	1					
ANR	3542149	Identifier	l		3542097	0					
ANR	3542150	IncDec	++		3542097	1					
ANR	3542151	PrimaryExpression	0xc7		3542097	1					
ANR	3542152	ExpressionStatement	data [ l ++ ] = 0x38 | op -> operands [ 0 ] . regs [ 0 ]	4066:3:99793:99835	3542097	2	True				
ANR	3542153	AssignmentExpression	data [ l ++ ] = 0x38 | op -> operands [ 0 ] . regs [ 0 ]		3542097	0		=			
ANR	3542154	ArrayIndexing	data [ l ++ ]		3542097	0					
ANR	3542155	Identifier	data		3542097	0					
ANR	3542156	PostIncDecOperationExpression	l ++		3542097	1					
ANR	3542157	Identifier	l		3542097	0					
ANR	3542158	IncDec	++		3542097	1					
ANR	3542159	InclusiveOrExpression	0x38 | op -> operands [ 0 ] . regs [ 0 ]		3542097	1		|			
ANR	3542160	PrimaryExpression	0x38		3542097	0					
ANR	3542161	ArrayIndexing	op -> operands [ 0 ] . regs [ 0 ]		3542097	1					
ANR	3542162	MemberAccess	op -> operands [ 0 ] . regs		3542097	0					
ANR	3542163	ArrayIndexing	op -> operands [ 0 ]		3542097	0					
ANR	3542164	PtrMemberAccess	op -> operands		3542097	0					
ANR	3542165	Identifier	op		3542097	0					
ANR	3542166	Identifier	operands		3542097	1					
ANR	3542167	PrimaryExpression	0		3542097	1					
ANR	3542168	Identifier	regs		3542097	1					
ANR	3542169	PrimaryExpression	0		3542097	1					
ANR	3542170	ElseStatement	else		3542097	0					
ANR	3542171	CompoundStatement		11:9:244:244	3542097	0					
ANR	3542172	ReturnStatement	return - 1 ;	4068:3:99851:99860	3542097	0	True				
ANR	3542173	UnaryOperationExpression	- 1		3542097	0					
ANR	3542174	UnaryOperator	-		3542097	0					
ANR	3542175	PrimaryExpression	1		3542097	1					
ANR	3542176	BreakStatement	break ;	4070:2:99868:99873	3542097	2	True				
ANR	3542177	Label	default :	4071:1:99876:99883	3542097	3	True				
ANR	3542178	Identifier	default		3542097	0					
ANR	3542179	ReturnStatement	return - 1 ;	4072:2:99887:99896	3542097	4	True				
ANR	3542180	UnaryOperationExpression	- 1		3542097	0					
ANR	3542181	UnaryOperator	-		3542097	0					
ANR	3542182	PrimaryExpression	1		3542097	1					
ANR	3542183	ReturnStatement	return l ;	4074:1:99902:99910	3542097	2	True				
ANR	3542184	Identifier	l		3542097	0					
ANR	3542185	ReturnType	static int		3542097	1					
ANR	3542186	Identifier	opvmptrst		3542097	2					
ANR	3542187	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3542097	3					
ANR	3542188	Parameter	RAsm * a	4057:21:99563:99569	3542097	0	True				
ANR	3542189	ParameterType	RAsm *		3542097	0					
ANR	3542190	Identifier	a		3542097	1					
ANR	3542191	Parameter	ut8 * data	4057:30:99572:99580	3542097	1	True				
ANR	3542192	ParameterType	ut8 *		3542097	0					
ANR	3542193	Identifier	data		3542097	1					
ANR	3542194	Parameter	const Opcode * op	4057:41:99583:99598	3542097	2	True				
ANR	3542195	ParameterType	const Opcode *		3542097	0					
ANR	3542196	Identifier	op		3542097	1					
ANR	3542197	CFGEntryNode	ENTRY		3542097		True				
ANR	3542198	CFGExitNode	EXIT		3542097		True				
ANR	3542199	Symbol	a		3542097						
ANR	3542200	Symbol	op		3542097						
ANR	3542201	Symbol	OT_QWORD		3542097						
ANR	3542202	Symbol	data		3542097						
ANR	3542203	Symbol	* op		3542097						
ANR	3542204	Symbol	* * op -> operands		3542097						
ANR	3542205	Symbol	l		3542097						
ANR	3542206	Symbol	* * op		3542097						
ANR	3542207	Symbol	* op -> operands		3542097						
ANR	3542208	Symbol	op -> operands_count		3542097						
ANR	3542209	Symbol	* op -> operands [ 0 ] . regs		3542097						
ANR	3542210	Symbol	op -> operands [ 0 ] . type		3542097						
ANR	3542211	Symbol	* * * op		3542097						
ANR	3542212	Symbol	op -> operands		3542097						
ANR	3542213	Symbol	OT_MEMORY		3542097						
ANR	3542214	Symbol	* data		3542097						
ANR	3542215	Symbol	op -> operands [ 0 ] . regs		3542097						
ANR	3542216	ClassDef	lookup_t	4077:8:99923:100056							
ANR	3542217	DeclStmt									
ANR	3542218	Decl							char	char [ 12 ]	mnemonic
ANR	3542219	DeclStmt									
ANR	3542220	Decl							int	int	only_x32
ANR	3542221	DeclStmt									
ANR	3542222	Decl							"int ( * ) ( RAsm * , ut8 * , const Opcode * )"	"int ( * ) ( RAsm * , ut8 * , const Opcode * )"	opdo
ANR	3542223	DeclStmt									
ANR	3542224	Decl							ut64	ut64	opcode
ANR	3542225	DeclStmt									
ANR	3542226	Decl							int	int	size
ANR	3542227	DeclStmt									
ANR	3542228	Decl							lookup_t	lookup_t	LookupTable
ANR	3542229	DeclStmt									
ANR	3542230	Decl							LookupTable	LookupTable [ ]	oplookup
ANR	3542231	Function	getToken	4438:0:110124:110926							
ANR	3542232	FunctionDef	"getToken (const char * str , size_t * begin , size_t * end)"		3542231	0					
ANR	3542233	CompoundStatement		4438:77:110201:110926	3542231	0					
ANR	3542234	IfStatement	if ( * begin > strlen ( str ) )		3542231	0					
ANR	3542235	Condition	* begin > strlen ( str )	4439:5:110208:110228	3542231	0	True				
ANR	3542236	RelationalExpression	* begin > strlen ( str )		3542231	0		>			
ANR	3542237	UnaryOperationExpression	* begin		3542231	0					
ANR	3542238	UnaryOperator	*		3542231	0					
ANR	3542239	Identifier	begin		3542231	1					
ANR	3542240	CallExpression	strlen ( str )		3542231	1					
ANR	3542241	Callee	strlen		3542231	0					
ANR	3542242	Identifier	strlen		3542231	0					
ANR	3542243	ArgumentList	str		3542231	1					
ANR	3542244	Argument	str		3542231	0					
ANR	3542245	Identifier	str		3542231	0					
ANR	3542246	CompoundStatement		2:28:29:29	3542231	1					
ANR	3542247	ReturnStatement	return TT_EOF ;	4440:2:110235:110248	3542231	0	True				
ANR	3542248	Identifier	TT_EOF		3542231	0					
ANR	3542249	WhileStatement	while ( begin && str [ * begin ] && isspace ( ( ut8 ) str [ * begin ] ) )		3542231	1					
ANR	3542250	Condition	begin && str [ * begin ] && isspace ( ( ut8 ) str [ * begin ] )	4443:8:110281:110330	3542231	0	True				
ANR	3542251	AndExpression	begin && str [ * begin ] && isspace ( ( ut8 ) str [ * begin ] )		3542231	0		&&			
ANR	3542252	Identifier	begin		3542231	0					
ANR	3542253	AndExpression	str [ * begin ] && isspace ( ( ut8 ) str [ * begin ] )		3542231	1		&&			
ANR	3542254	ArrayIndexing	str [ * begin ]		3542231	0					
ANR	3542255	Identifier	str		3542231	0					
ANR	3542256	UnaryOperationExpression	* begin		3542231	1					
ANR	3542257	UnaryOperator	*		3542231	0					
ANR	3542258	Identifier	begin		3542231	1					
ANR	3542259	CallExpression	isspace ( ( ut8 ) str [ * begin ] )		3542231	1					
ANR	3542260	Callee	isspace		3542231	0					
ANR	3542261	Identifier	isspace		3542231	0					
ANR	3542262	ArgumentList	( ut8 ) str [ * begin ]		3542231	1					
ANR	3542263	Argument	( ut8 ) str [ * begin ]		3542231	0					
ANR	3542264	CastExpression	( ut8 ) str [ * begin ]		3542231	0					
ANR	3542265	CastTarget	ut8		3542231	0					
ANR	3542266	ArrayIndexing	str [ * begin ]		3542231	1					
ANR	3542267	Identifier	str		3542231	0					
ANR	3542268	UnaryOperationExpression	* begin		3542231	1					
ANR	3542269	UnaryOperator	*		3542231	0					
ANR	3542270	Identifier	begin		3542231	1					
ANR	3542271	CompoundStatement		6:60:131:131	3542231	1					
ANR	3542272	ExpressionStatement	++ ( * begin )	4444:2:110337:110347	3542231	0	True				
ANR	3542273	UnaryExpression	++ ( * begin )		3542231	0					
ANR	3542274	IncDec	++		3542231	0					
ANR	3542275	UnaryOperationExpression	* begin		3542231	1					
ANR	3542276	UnaryOperator	*		3542231	0					
ANR	3542277	Identifier	begin		3542231	1					
ANR	3542278	IfStatement	if ( ! str [ * begin ] )		3542231	2					
ANR	3542279	Condition	! str [ * begin ]	4447:5:110358:110369	3542231	0	True				
ANR	3542280	UnaryOperationExpression	! str [ * begin ]		3542231	0					
ANR	3542281	UnaryOperator	!		3542231	0					
ANR	3542282	ArrayIndexing	str [ * begin ]		3542231	1					
ANR	3542283	Identifier	str		3542231	0					
ANR	3542284	UnaryOperationExpression	* begin		3542231	1					
ANR	3542285	UnaryOperator	*		3542231	0					
ANR	3542286	Identifier	begin		3542231	1					
ANR	3542287	CompoundStatement		10:19:170:170	3542231	1					
ANR	3542288	ExpressionStatement	* end = * begin	4448:2:110404:110417	3542231	0	True				
ANR	3542289	AssignmentExpression	* end = * begin		3542231	0		=			
ANR	3542290	UnaryOperationExpression	* end		3542231	0					
ANR	3542291	UnaryOperator	*		3542231	0					
ANR	3542292	Identifier	end		3542231	1					
ANR	3542293	UnaryOperationExpression	* begin		3542231	1					
ANR	3542294	UnaryOperator	*		3542231	0					
ANR	3542295	Identifier	begin		3542231	1					
ANR	3542296	ReturnStatement	return TT_EOF ;	4449:2:110421:110434	3542231	1	True				
ANR	3542297	Identifier	TT_EOF		3542231	0					
ANR	3542298	IfStatement	if ( isalpha ( ( ut8 ) str [ * begin ] ) )		3542231	3					
ANR	3542299	Condition	isalpha ( ( ut8 ) str [ * begin ] )	4451:5:110444:110469	3542231	0	True				
ANR	3542300	CallExpression	isalpha ( ( ut8 ) str [ * begin ] )		3542231	0					
ANR	3542301	Callee	isalpha		3542231	0					
ANR	3542302	Identifier	isalpha		3542231	0					
ANR	3542303	ArgumentList	( ut8 ) str [ * begin ]		3542231	1					
ANR	3542304	Argument	( ut8 ) str [ * begin ]		3542231	0					
ANR	3542305	CastExpression	( ut8 ) str [ * begin ]		3542231	0					
ANR	3542306	CastTarget	ut8		3542231	0					
ANR	3542307	ArrayIndexing	str [ * begin ]		3542231	1					
ANR	3542308	Identifier	str		3542231	0					
ANR	3542309	UnaryOperationExpression	* begin		3542231	1					
ANR	3542310	UnaryOperator	*		3542231	0					
ANR	3542311	Identifier	begin		3542231	1					
ANR	3542312	CompoundStatement		14:33:270:270	3542231	1					
ANR	3542313	ExpressionStatement	* end = * begin	4452:2:110492:110505	3542231	0	True				
ANR	3542314	AssignmentExpression	* end = * begin		3542231	0		=			
ANR	3542315	UnaryOperationExpression	* end		3542231	0					
ANR	3542316	UnaryOperator	*		3542231	0					
ANR	3542317	Identifier	end		3542231	1					
ANR	3542318	UnaryOperationExpression	* begin		3542231	1					
ANR	3542319	UnaryOperator	*		3542231	0					
ANR	3542320	Identifier	begin		3542231	1					
ANR	3542321	WhileStatement	while ( end && str [ * end ] && isalnum ( ( ut8 ) str [ * end ] ) )		3542231	1					
ANR	3542322	Condition	end && str [ * end ] && isalnum ( ( ut8 ) str [ * end ] )	4453:9:110516:110559	3542231	0	True				
ANR	3542323	AndExpression	end && str [ * end ] && isalnum ( ( ut8 ) str [ * end ] )		3542231	0		&&			
ANR	3542324	Identifier	end		3542231	0					
ANR	3542325	AndExpression	str [ * end ] && isalnum ( ( ut8 ) str [ * end ] )		3542231	1		&&			
ANR	3542326	ArrayIndexing	str [ * end ]		3542231	0					
ANR	3542327	Identifier	str		3542231	0					
ANR	3542328	UnaryOperationExpression	* end		3542231	1					
ANR	3542329	UnaryOperator	*		3542231	0					
ANR	3542330	Identifier	end		3542231	1					
ANR	3542331	CallExpression	isalnum ( ( ut8 ) str [ * end ] )		3542231	1					
ANR	3542332	Callee	isalnum		3542231	0					
ANR	3542333	Identifier	isalnum		3542231	0					
ANR	3542334	ArgumentList	( ut8 ) str [ * end ]		3542231	1					
ANR	3542335	Argument	( ut8 ) str [ * end ]		3542231	0					
ANR	3542336	CastExpression	( ut8 ) str [ * end ]		3542231	0					
ANR	3542337	CastTarget	ut8		3542231	0					
ANR	3542338	ArrayIndexing	str [ * end ]		3542231	1					
ANR	3542339	Identifier	str		3542231	0					
ANR	3542340	UnaryOperationExpression	* end		3542231	1					
ANR	3542341	UnaryOperator	*		3542231	0					
ANR	3542342	Identifier	end		3542231	1					
ANR	3542343	CompoundStatement		16:55:360:360	3542231	1					
ANR	3542344	ExpressionStatement	++ ( * end )	4454:3:110567:110575	3542231	0	True				
ANR	3542345	UnaryExpression	++ ( * end )		3542231	0					
ANR	3542346	IncDec	++		3542231	0					
ANR	3542347	UnaryOperationExpression	* end		3542231	1					
ANR	3542348	UnaryOperator	*		3542231	0					
ANR	3542349	Identifier	end		3542231	1					
ANR	3542350	ReturnStatement	return TT_WORD ;	4456:2:110583:110597	3542231	2	True				
ANR	3542351	Identifier	TT_WORD		3542231	0					
ANR	3542352	IfStatement	if ( isdigit ( ( ut8 ) str [ * begin ] ) )		3542231	4					
ANR	3542353	Condition	isdigit ( ( ut8 ) str [ * begin ] )	4458:5:110607:110632	3542231	0	True				
ANR	3542354	CallExpression	isdigit ( ( ut8 ) str [ * begin ] )		3542231	0					
ANR	3542355	Callee	isdigit		3542231	0					
ANR	3542356	Identifier	isdigit		3542231	0					
ANR	3542357	ArgumentList	( ut8 ) str [ * begin ]		3542231	1					
ANR	3542358	Argument	( ut8 ) str [ * begin ]		3542231	0					
ANR	3542359	CastExpression	( ut8 ) str [ * begin ]		3542231	0					
ANR	3542360	CastTarget	ut8		3542231	0					
ANR	3542361	ArrayIndexing	str [ * begin ]		3542231	1					
ANR	3542362	Identifier	str		3542231	0					
ANR	3542363	UnaryOperationExpression	* begin		3542231	1					
ANR	3542364	UnaryOperator	*		3542231	0					
ANR	3542365	Identifier	begin		3542231	1					
ANR	3542366	CompoundStatement		21:33:433:433	3542231	1					
ANR	3542367	ExpressionStatement	* end = * begin	4459:2:110657:110670	3542231	0	True				
ANR	3542368	AssignmentExpression	* end = * begin		3542231	0		=			
ANR	3542369	UnaryOperationExpression	* end		3542231	0					
ANR	3542370	UnaryOperator	*		3542231	0					
ANR	3542371	Identifier	end		3542231	1					
ANR	3542372	UnaryOperationExpression	* begin		3542231	1					
ANR	3542373	UnaryOperator	*		3542231	0					
ANR	3542374	Identifier	begin		3542231	1					
ANR	3542375	WhileStatement	while ( end && isalnum ( ( ut8 ) str [ * end ] ) )		3542231	1					
ANR	3542376	Condition	end && isalnum ( ( ut8 ) str [ * end ] )	4460:9:110681:110711	3542231	0	True				
ANR	3542377	AndExpression	end && isalnum ( ( ut8 ) str [ * end ] )		3542231	0		&&			
ANR	3542378	Identifier	end		3542231	0					
ANR	3542379	CallExpression	isalnum ( ( ut8 ) str [ * end ] )		3542231	1					
ANR	3542380	Callee	isalnum		3542231	0					
ANR	3542381	Identifier	isalnum		3542231	0					
ANR	3542382	ArgumentList	( ut8 ) str [ * end ]		3542231	1					
ANR	3542383	Argument	( ut8 ) str [ * end ]		3542231	0					
ANR	3542384	CastExpression	( ut8 ) str [ * end ]		3542231	0					
ANR	3542385	CastTarget	ut8		3542231	0					
ANR	3542386	ArrayIndexing	str [ * end ]		3542231	1					
ANR	3542387	Identifier	str		3542231	0					
ANR	3542388	UnaryOperationExpression	* end		3542231	1					
ANR	3542389	UnaryOperator	*		3542231	0					
ANR	3542390	Identifier	end		3542231	1					
ANR	3542391	CompoundStatement		23:42:512:512	3542231	1					
ANR	3542392	ExpressionStatement	++ ( * end )	4461:3:110771:110779	3542231	0	True				
ANR	3542393	UnaryExpression	++ ( * end )		3542231	0					
ANR	3542394	IncDec	++		3542231	0					
ANR	3542395	UnaryOperationExpression	* end		3542231	1					
ANR	3542396	UnaryOperator	*		3542231	0					
ANR	3542397	Identifier	end		3542231	1					
ANR	3542398	ReturnStatement	return TT_NUMBER ;	4463:2:110787:110803	3542231	2	True				
ANR	3542399	Identifier	TT_NUMBER		3542231	0					
ANR	3542400	ElseStatement	else		3542231	0					
ANR	3542401	CompoundStatement		27:8:611:611	3542231	0					
ANR	3542402	ExpressionStatement	* end = * begin + 1	4465:2:110883:110900	3542231	0	True				
ANR	3542403	AssignmentExpression	* end = * begin + 1		3542231	0		=			
ANR	3542404	UnaryOperationExpression	* end		3542231	0					
ANR	3542405	UnaryOperator	*		3542231	0					
ANR	3542406	Identifier	end		3542231	1					
ANR	3542407	AdditiveExpression	* begin + 1		3542231	1		+			
ANR	3542408	UnaryOperationExpression	* begin		3542231	0					
ANR	3542409	UnaryOperator	*		3542231	0					
ANR	3542410	Identifier	begin		3542231	1					
ANR	3542411	PrimaryExpression	1		3542231	1					
ANR	3542412	ReturnStatement	return TT_SPECIAL ;	4466:2:110904:110921	3542231	1	True				
ANR	3542413	Identifier	TT_SPECIAL		3542231	0					
ANR	3542414	ReturnType	static x86newTokenType		3542231	1					
ANR	3542415	Identifier	getToken		3542231	2					
ANR	3542416	ParameterList	"const char * str , size_t * begin , size_t * end"		3542231	3					
ANR	3542417	Parameter	const char * str	4438:32:110156:110170	3542231	0	True				
ANR	3542418	ParameterType	const char *		3542231	0					
ANR	3542419	Identifier	str		3542231	1					
ANR	3542420	Parameter	size_t * begin	4438:49:110173:110185	3542231	1	True				
ANR	3542421	ParameterType	size_t *		3542231	0					
ANR	3542422	Identifier	begin		3542231	1					
ANR	3542423	Parameter	size_t * end	4438:64:110188:110198	3542231	2	True				
ANR	3542424	ParameterType	size_t *		3542231	0					
ANR	3542425	Identifier	end		3542231	1					
ANR	3542426	CFGEntryNode	ENTRY		3542231		True				
ANR	3542427	CFGExitNode	EXIT		3542231		True				
ANR	3542428	Symbol	isalpha		3542231						
ANR	3542429	Symbol	isalnum		3542231						
ANR	3542430	Symbol	* begin		3542231						
ANR	3542431	Symbol	isspace		3542231						
ANR	3542432	Symbol	* * begin		3542231						
ANR	3542433	Symbol	TT_SPECIAL		3542231						
ANR	3542434	Symbol	TT_WORD		3542231						
ANR	3542435	Symbol	* * end		3542231						
ANR	3542436	Symbol	str		3542231						
ANR	3542437	Symbol	strlen		3542231						
ANR	3542438	Symbol	end		3542231						
ANR	3542439	Symbol	* end		3542231						
ANR	3542440	Symbol	TT_NUMBER		3542231						
ANR	3542441	Symbol	* str		3542231						
ANR	3542442	Symbol	begin		3542231						
ANR	3542443	Symbol	isdigit		3542231						
ANR	3542444	Symbol	TT_EOF		3542231						
ANR	3542445	Function	parseReg	4473:0:111006:115221							
ANR	3542446	FunctionDef	"parseReg (RAsm * a , const char * str , size_t * pos , ut32 * type)"		3542445	0					
ANR	3542447	CompoundStatement		4473:76:111082:115221	3542445	0					
ANR	3542448	IdentifierDeclStatement	int i ;	4474:1:111085:111090	3542445	0	True				
ANR	3542449	IdentifierDecl	i		3542445	0					
ANR	3542450	IdentifierDeclType	int		3542445	0					
ANR	3542451	Identifier	i		3542445	1					
ANR	3542452	IdentifierDeclStatement	"const char * regs [ ] = { ""eax"" , ""ecx"" , ""edx"" , ""ebx"" , ""esp"" , ""ebp"" , ""esi"" , ""edi"" , ""eip"" , NULL } ;"	4476:1:111142:111234	3542445	1	True				
ANR	3542453	IdentifierDecl	"* regs [ ] = { ""eax"" , ""ecx"" , ""edx"" , ""ebx"" , ""esp"" , ""ebp"" , ""esi"" , ""edi"" , ""eip"" , NULL }"		3542445	0					
ANR	3542454	IdentifierDeclType	const char * [ ]		3542445	0					
ANR	3542455	Identifier	regs		3542445	1					
ANR	3542456	AssignmentExpression	"* regs [ ] = { ""eax"" , ""ecx"" , ""edx"" , ""ebx"" , ""esp"" , ""ebp"" , ""esi"" , ""edi"" , ""eip"" , NULL }"		3542445	2		=			
ANR	3542457	Identifier	regs		3542445	0					
ANR	3542458	InitializerList	"""eax"""		3542445	1					
ANR	3542459	PrimaryExpression	"""eax"""		3542445	0					
ANR	3542460	PrimaryExpression	"""ecx"""		3542445	1					
ANR	3542461	PrimaryExpression	"""edx"""		3542445	2					
ANR	3542462	PrimaryExpression	"""ebx"""		3542445	3					
ANR	3542463	PrimaryExpression	"""esp"""		3542445	4					
ANR	3542464	PrimaryExpression	"""ebp"""		3542445	5					
ANR	3542465	PrimaryExpression	"""esi"""		3542445	6					
ANR	3542466	PrimaryExpression	"""edi"""		3542445	7					
ANR	3542467	PrimaryExpression	"""eip"""		3542445	8					
ANR	3542468	Identifier	NULL		3542445	9					
ANR	3542469	IdentifierDeclStatement	"const char * regsext [ ] = { ""r8d"" , ""r9d"" , ""r10d"" , ""r11d"" , ""r12d"" , ""r13d"" , ""r14d"" , ""r15d"" , NULL } ;"	4477:1:111237:111331	3542445	2	True				
ANR	3542470	IdentifierDecl	"* regsext [ ] = { ""r8d"" , ""r9d"" , ""r10d"" , ""r11d"" , ""r12d"" , ""r13d"" , ""r14d"" , ""r15d"" , NULL }"		3542445	0					
ANR	3542471	IdentifierDeclType	const char * [ ]		3542445	0					
ANR	3542472	Identifier	regsext		3542445	1					
ANR	3542473	AssignmentExpression	"* regsext [ ] = { ""r8d"" , ""r9d"" , ""r10d"" , ""r11d"" , ""r12d"" , ""r13d"" , ""r14d"" , ""r15d"" , NULL }"		3542445	2		=			
ANR	3542474	Identifier	regsext		3542445	0					
ANR	3542475	InitializerList	"""r8d"""		3542445	1					
ANR	3542476	PrimaryExpression	"""r8d"""		3542445	0					
ANR	3542477	PrimaryExpression	"""r9d"""		3542445	1					
ANR	3542478	PrimaryExpression	"""r10d"""		3542445	2					
ANR	3542479	PrimaryExpression	"""r11d"""		3542445	3					
ANR	3542480	PrimaryExpression	"""r12d"""		3542445	4					
ANR	3542481	PrimaryExpression	"""r13d"""		3542445	5					
ANR	3542482	PrimaryExpression	"""r14d"""		3542445	6					
ANR	3542483	PrimaryExpression	"""r15d"""		3542445	7					
ANR	3542484	Identifier	NULL		3542445	8					
ANR	3542485	IdentifierDeclStatement	"const char * regs8 [ ] = { ""al"" , ""cl"" , ""dl"" , ""bl"" , ""ah"" , ""ch"" , ""dh"" , ""bh"" , NULL } ;"	4478:1:111334:111412	3542445	3	True				
ANR	3542486	IdentifierDecl	"* regs8 [ ] = { ""al"" , ""cl"" , ""dl"" , ""bl"" , ""ah"" , ""ch"" , ""dh"" , ""bh"" , NULL }"		3542445	0					
ANR	3542487	IdentifierDeclType	const char * [ ]		3542445	0					
ANR	3542488	Identifier	regs8		3542445	1					
ANR	3542489	AssignmentExpression	"* regs8 [ ] = { ""al"" , ""cl"" , ""dl"" , ""bl"" , ""ah"" , ""ch"" , ""dh"" , ""bh"" , NULL }"		3542445	2		=			
ANR	3542490	Identifier	regs8		3542445	0					
ANR	3542491	InitializerList	"""al"""		3542445	1					
ANR	3542492	PrimaryExpression	"""al"""		3542445	0					
ANR	3542493	PrimaryExpression	"""cl"""		3542445	1					
ANR	3542494	PrimaryExpression	"""dl"""		3542445	2					
ANR	3542495	PrimaryExpression	"""bl"""		3542445	3					
ANR	3542496	PrimaryExpression	"""ah"""		3542445	4					
ANR	3542497	PrimaryExpression	"""ch"""		3542445	5					
ANR	3542498	PrimaryExpression	"""dh"""		3542445	6					
ANR	3542499	PrimaryExpression	"""bh"""		3542445	7					
ANR	3542500	Identifier	NULL		3542445	8					
ANR	3542501	IdentifierDeclStatement	"const char * regs16 [ ] = { ""ax"" , ""cx"" , ""dx"" , ""bx"" , ""sp"" , ""bp"" , ""si"" , ""di"" , NULL } ;"	4479:1:111415:111494	3542445	4	True				
ANR	3542502	IdentifierDecl	"* regs16 [ ] = { ""ax"" , ""cx"" , ""dx"" , ""bx"" , ""sp"" , ""bp"" , ""si"" , ""di"" , NULL }"		3542445	0					
ANR	3542503	IdentifierDeclType	const char * [ ]		3542445	0					
ANR	3542504	Identifier	regs16		3542445	1					
ANR	3542505	AssignmentExpression	"* regs16 [ ] = { ""ax"" , ""cx"" , ""dx"" , ""bx"" , ""sp"" , ""bp"" , ""si"" , ""di"" , NULL }"		3542445	2		=			
ANR	3542506	Identifier	regs16		3542445	0					
ANR	3542507	InitializerList	"""ax"""		3542445	1					
ANR	3542508	PrimaryExpression	"""ax"""		3542445	0					
ANR	3542509	PrimaryExpression	"""cx"""		3542445	1					
ANR	3542510	PrimaryExpression	"""dx"""		3542445	2					
ANR	3542511	PrimaryExpression	"""bx"""		3542445	3					
ANR	3542512	PrimaryExpression	"""sp"""		3542445	4					
ANR	3542513	PrimaryExpression	"""bp"""		3542445	5					
ANR	3542514	PrimaryExpression	"""si"""		3542445	6					
ANR	3542515	PrimaryExpression	"""di"""		3542445	7					
ANR	3542516	Identifier	NULL		3542445	8					
ANR	3542517	IdentifierDeclStatement	"const char * regs64 [ ] = { ""rax"" , ""rcx"" , ""rdx"" , ""rbx"" , ""rsp"" , ""rbp"" , ""rsi"" , ""rdi"" , ""rip"" , NULL } ;"	4480:1:111497:111591	3542445	5	True				
ANR	3542518	IdentifierDecl	"* regs64 [ ] = { ""rax"" , ""rcx"" , ""rdx"" , ""rbx"" , ""rsp"" , ""rbp"" , ""rsi"" , ""rdi"" , ""rip"" , NULL }"		3542445	0					
ANR	3542519	IdentifierDeclType	const char * [ ]		3542445	0					
ANR	3542520	Identifier	regs64		3542445	1					
ANR	3542521	AssignmentExpression	"* regs64 [ ] = { ""rax"" , ""rcx"" , ""rdx"" , ""rbx"" , ""rsp"" , ""rbp"" , ""rsi"" , ""rdi"" , ""rip"" , NULL }"		3542445	2		=			
ANR	3542522	Identifier	regs64		3542445	0					
ANR	3542523	InitializerList	"""rax"""		3542445	1					
ANR	3542524	PrimaryExpression	"""rax"""		3542445	0					
ANR	3542525	PrimaryExpression	"""rcx"""		3542445	1					
ANR	3542526	PrimaryExpression	"""rdx"""		3542445	2					
ANR	3542527	PrimaryExpression	"""rbx"""		3542445	3					
ANR	3542528	PrimaryExpression	"""rsp"""		3542445	4					
ANR	3542529	PrimaryExpression	"""rbp"""		3542445	5					
ANR	3542530	PrimaryExpression	"""rsi"""		3542445	6					
ANR	3542531	PrimaryExpression	"""rdi"""		3542445	7					
ANR	3542532	PrimaryExpression	"""rip"""		3542445	8					
ANR	3542533	Identifier	NULL		3542445	9					
ANR	3542534	IdentifierDeclStatement	"const char * regs64ext [ ] = { ""r8"" , ""r9"" , ""r10"" , ""r11"" , ""r12"" , ""r13"" , ""r14"" , ""r15"" , NULL } ;"	4481:1:111594:111682	3542445	6	True				
ANR	3542535	IdentifierDecl	"* regs64ext [ ] = { ""r8"" , ""r9"" , ""r10"" , ""r11"" , ""r12"" , ""r13"" , ""r14"" , ""r15"" , NULL }"		3542445	0					
ANR	3542536	IdentifierDeclType	const char * [ ]		3542445	0					
ANR	3542537	Identifier	regs64ext		3542445	1					
ANR	3542538	AssignmentExpression	"* regs64ext [ ] = { ""r8"" , ""r9"" , ""r10"" , ""r11"" , ""r12"" , ""r13"" , ""r14"" , ""r15"" , NULL }"		3542445	2		=			
ANR	3542539	Identifier	regs64ext		3542445	0					
ANR	3542540	InitializerList	"""r8"""		3542445	1					
ANR	3542541	PrimaryExpression	"""r8"""		3542445	0					
ANR	3542542	PrimaryExpression	"""r9"""		3542445	1					
ANR	3542543	PrimaryExpression	"""r10"""		3542445	2					
ANR	3542544	PrimaryExpression	"""r11"""		3542445	3					
ANR	3542545	PrimaryExpression	"""r12"""		3542445	4					
ANR	3542546	PrimaryExpression	"""r13"""		3542445	5					
ANR	3542547	PrimaryExpression	"""r14"""		3542445	6					
ANR	3542548	PrimaryExpression	"""r15"""		3542445	7					
ANR	3542549	Identifier	NULL		3542445	8					
ANR	3542550	IdentifierDeclStatement	"const char * sregs [ ] = { ""es"" , ""cs"" , ""ss"" , ""ds"" , ""fs"" , ""gs"" , NULL } ;"	4482:1:111685:111751	3542445	7	True				
ANR	3542551	IdentifierDecl	"* sregs [ ] = { ""es"" , ""cs"" , ""ss"" , ""ds"" , ""fs"" , ""gs"" , NULL }"		3542445	0					
ANR	3542552	IdentifierDeclType	const char * [ ]		3542445	0					
ANR	3542553	Identifier	sregs		3542445	1					
ANR	3542554	AssignmentExpression	"* sregs [ ] = { ""es"" , ""cs"" , ""ss"" , ""ds"" , ""fs"" , ""gs"" , NULL }"		3542445	2		=			
ANR	3542555	Identifier	sregs		3542445	0					
ANR	3542556	InitializerList	"""es"""		3542445	1					
ANR	3542557	PrimaryExpression	"""es"""		3542445	0					
ANR	3542558	PrimaryExpression	"""cs"""		3542445	1					
ANR	3542559	PrimaryExpression	"""ss"""		3542445	2					
ANR	3542560	PrimaryExpression	"""ds"""		3542445	3					
ANR	3542561	PrimaryExpression	"""fs"""		3542445	4					
ANR	3542562	PrimaryExpression	"""gs"""		3542445	5					
ANR	3542563	Identifier	NULL		3542445	6					
ANR	3542564	IdentifierDeclStatement	"const char * cregs [ ] = { ""cr0"" , ""cr1"" , ""cr2"" , ""cr3"" , ""cr4"" , ""cr5"" , ""cr6"" , ""cr7"" , NULL } ;"	4483:1:111754:111839	3542445	8	True				
ANR	3542565	IdentifierDecl	"* cregs [ ] = { ""cr0"" , ""cr1"" , ""cr2"" , ""cr3"" , ""cr4"" , ""cr5"" , ""cr6"" , ""cr7"" , NULL }"		3542445	0					
ANR	3542566	IdentifierDeclType	const char * [ ]		3542445	0					
ANR	3542567	Identifier	cregs		3542445	1					
ANR	3542568	AssignmentExpression	"* cregs [ ] = { ""cr0"" , ""cr1"" , ""cr2"" , ""cr3"" , ""cr4"" , ""cr5"" , ""cr6"" , ""cr7"" , NULL }"		3542445	2		=			
ANR	3542569	Identifier	cregs		3542445	0					
ANR	3542570	InitializerList	"""cr0"""		3542445	1					
ANR	3542571	PrimaryExpression	"""cr0"""		3542445	0					
ANR	3542572	PrimaryExpression	"""cr1"""		3542445	1					
ANR	3542573	PrimaryExpression	"""cr2"""		3542445	2					
ANR	3542574	PrimaryExpression	"""cr3"""		3542445	3					
ANR	3542575	PrimaryExpression	"""cr4"""		3542445	4					
ANR	3542576	PrimaryExpression	"""cr5"""		3542445	5					
ANR	3542577	PrimaryExpression	"""cr6"""		3542445	6					
ANR	3542578	PrimaryExpression	"""cr7"""		3542445	7					
ANR	3542579	Identifier	NULL		3542445	8					
ANR	3542580	IdentifierDeclStatement	"const char * dregs [ ] = { ""dr0"" , ""dr1"" , ""dr2"" , ""dr3"" , ""dr4"" , ""dr5"" , ""dr6"" , ""dr7"" , NULL } ;"	4484:1:111842:111927	3542445	9	True				
ANR	3542581	IdentifierDecl	"* dregs [ ] = { ""dr0"" , ""dr1"" , ""dr2"" , ""dr3"" , ""dr4"" , ""dr5"" , ""dr6"" , ""dr7"" , NULL }"		3542445	0					
ANR	3542582	IdentifierDeclType	const char * [ ]		3542445	0					
ANR	3542583	Identifier	dregs		3542445	1					
ANR	3542584	AssignmentExpression	"* dregs [ ] = { ""dr0"" , ""dr1"" , ""dr2"" , ""dr3"" , ""dr4"" , ""dr5"" , ""dr6"" , ""dr7"" , NULL }"		3542445	2		=			
ANR	3542585	Identifier	dregs		3542445	0					
ANR	3542586	InitializerList	"""dr0"""		3542445	1					
ANR	3542587	PrimaryExpression	"""dr0"""		3542445	0					
ANR	3542588	PrimaryExpression	"""dr1"""		3542445	1					
ANR	3542589	PrimaryExpression	"""dr2"""		3542445	2					
ANR	3542590	PrimaryExpression	"""dr3"""		3542445	3					
ANR	3542591	PrimaryExpression	"""dr4"""		3542445	4					
ANR	3542592	PrimaryExpression	"""dr5"""		3542445	5					
ANR	3542593	PrimaryExpression	"""dr6"""		3542445	6					
ANR	3542594	PrimaryExpression	"""dr7"""		3542445	7					
ANR	3542595	Identifier	NULL		3542445	8					
ANR	3542596	IdentifierDeclStatement	"size_t nextpos , length ;"	4487:1:111969:111991	3542445	10	True				
ANR	3542597	IdentifierDecl	nextpos		3542445	0					
ANR	3542598	IdentifierDeclType	size_t		3542445	0					
ANR	3542599	Identifier	nextpos		3542445	1					
ANR	3542600	IdentifierDecl	length		3542445	1					
ANR	3542601	IdentifierDeclType	size_t		3542445	0					
ANR	3542602	Identifier	length		3542445	1					
ANR	3542603	IdentifierDeclStatement	const char * token ;	4488:1:111994:112011	3542445	11	True				
ANR	3542604	IdentifierDecl	* token		3542445	0					
ANR	3542605	IdentifierDeclType	const char *		3542445	0					
ANR	3542606	Identifier	token		3542445	1					
ANR	3542607	ExpressionStatement	"getToken ( str , pos , & nextpos )"	4489:1:112014:112043	3542445	12	True				
ANR	3542608	CallExpression	"getToken ( str , pos , & nextpos )"		3542445	0					
ANR	3542609	Callee	getToken		3542445	0					
ANR	3542610	Identifier	getToken		3542445	0					
ANR	3542611	ArgumentList	str		3542445	1					
ANR	3542612	Argument	str		3542445	0					
ANR	3542613	Identifier	str		3542445	0					
ANR	3542614	Argument	pos		3542445	1					
ANR	3542615	Identifier	pos		3542445	0					
ANR	3542616	Argument	& nextpos		3542445	2					
ANR	3542617	UnaryOperationExpression	& nextpos		3542445	0					
ANR	3542618	UnaryOperator	&		3542445	0					
ANR	3542619	Identifier	nextpos		3542445	1					
ANR	3542620	ExpressionStatement	token = str + * pos	4490:1:112046:112064	3542445	13	True				
ANR	3542621	AssignmentExpression	token = str + * pos		3542445	0		=			
ANR	3542622	Identifier	token		3542445	0					
ANR	3542623	AdditiveExpression	str + * pos		3542445	1		+			
ANR	3542624	Identifier	str		3542445	0					
ANR	3542625	UnaryOperationExpression	* pos		3542445	1					
ANR	3542626	UnaryOperator	*		3542445	0					
ANR	3542627	Identifier	pos		3542445	1					
ANR	3542628	ExpressionStatement	length = nextpos - * pos	4491:1:112067:112090	3542445	14	True				
ANR	3542629	AssignmentExpression	length = nextpos - * pos		3542445	0		=			
ANR	3542630	Identifier	length		3542445	0					
ANR	3542631	AdditiveExpression	nextpos - * pos		3542445	1		-			
ANR	3542632	Identifier	nextpos		3542445	0					
ANR	3542633	UnaryOperationExpression	* pos		3542445	1					
ANR	3542634	UnaryOperator	*		3542445	0					
ANR	3542635	Identifier	pos		3542445	1					
ANR	3542636	ExpressionStatement	* pos = nextpos	4492:1:112093:112107	3542445	15	True				
ANR	3542637	AssignmentExpression	* pos = nextpos		3542445	0		=			
ANR	3542638	UnaryOperationExpression	* pos		3542445	0					
ANR	3542639	UnaryOperator	*		3542445	0					
ANR	3542640	Identifier	pos		3542445	1					
ANR	3542641	Identifier	nextpos		3542445	1					
ANR	3542642	IfStatement	if ( length == 3 && token [ 0 ] == 'e' )		3542445	16					
ANR	3542643	Condition	length == 3 && token [ 0 ] == 'e'	4495:5:112145:112174	3542445	0	True				
ANR	3542644	AndExpression	length == 3 && token [ 0 ] == 'e'		3542445	0		&&			
ANR	3542645	EqualityExpression	length == 3		3542445	0		==			
ANR	3542646	Identifier	length		3542445	0					
ANR	3542647	PrimaryExpression	3		3542445	1					
ANR	3542648	EqualityExpression	token [ 0 ] == 'e'		3542445	1		==			
ANR	3542649	ArrayIndexing	token [ 0 ]		3542445	0					
ANR	3542650	Identifier	token		3542445	0					
ANR	3542651	PrimaryExpression	0		3542445	1					
ANR	3542652	PrimaryExpression	'e'		3542445	1					
ANR	3542653	CompoundStatement		23:37:1094:1094	3542445	1					
ANR	3542654	ForStatement	for ( i = 0 ; regs [ i ] ; i ++ )		3542445	0					
ANR	3542655	ForInit	i = 0 ;	4496:7:112186:112191	3542445	0	True				
ANR	3542656	AssignmentExpression	i = 0		3542445	0		=			
ANR	3542657	Identifier	i		3542445	0					
ANR	3542658	PrimaryExpression	0		3542445	1					
ANR	3542659	Condition	regs [ i ]	4496:14:112193:112199	3542445	1	True				
ANR	3542660	ArrayIndexing	regs [ i ]		3542445	0					
ANR	3542661	Identifier	regs		3542445	0					
ANR	3542662	Identifier	i		3542445	1					
ANR	3542663	PostIncDecOperationExpression	i ++	4496:23:112202:112204	3542445	2	True				
ANR	3542664	Identifier	i		3542445	0					
ANR	3542665	IncDec	++		3542445	1					
ANR	3542666	CompoundStatement		24:28:1124:1124	3542445	3					
ANR	3542667	IfStatement	"if ( ! r_str_ncasecmp ( regs [ i ] , token , length ) )"		3542445	0					
ANR	3542668	Condition	"! r_str_ncasecmp ( regs [ i ] , token , length )"	4497:7:112216:112255	3542445	0	True				
ANR	3542669	UnaryOperationExpression	"! r_str_ncasecmp ( regs [ i ] , token , length )"		3542445	0					
ANR	3542670	UnaryOperator	!		3542445	0					
ANR	3542671	CallExpression	"r_str_ncasecmp ( regs [ i ] , token , length )"		3542445	1					
ANR	3542672	Callee	r_str_ncasecmp		3542445	0					
ANR	3542673	Identifier	r_str_ncasecmp		3542445	0					
ANR	3542674	ArgumentList	regs [ i ]		3542445	1					
ANR	3542675	Argument	regs [ i ]		3542445	0					
ANR	3542676	ArrayIndexing	regs [ i ]		3542445	0					
ANR	3542677	Identifier	regs		3542445	0					
ANR	3542678	Identifier	i		3542445	1					
ANR	3542679	Argument	token		3542445	1					
ANR	3542680	Identifier	token		3542445	0					
ANR	3542681	Argument	length		3542445	2					
ANR	3542682	Identifier	length		3542445	0					
ANR	3542683	CompoundStatement		25:49:1175:1175	3542445	1					
ANR	3542684	ExpressionStatement	* type = ( OT_GPREG & OT_REG ( i ) ) | OT_DWORD	4498:4:112264:112306	3542445	0	True				
ANR	3542685	AssignmentExpression	* type = ( OT_GPREG & OT_REG ( i ) ) | OT_DWORD		3542445	0		=			
ANR	3542686	UnaryOperationExpression	* type		3542445	0					
ANR	3542687	UnaryOperator	*		3542445	0					
ANR	3542688	Identifier	type		3542445	1					
ANR	3542689	InclusiveOrExpression	( OT_GPREG & OT_REG ( i ) ) | OT_DWORD		3542445	1		|			
ANR	3542690	BitAndExpression	OT_GPREG & OT_REG ( i )		3542445	0		&			
ANR	3542691	Identifier	OT_GPREG		3542445	0					
ANR	3542692	CallExpression	OT_REG ( i )		3542445	1					
ANR	3542693	Callee	OT_REG		3542445	0					
ANR	3542694	Identifier	OT_REG		3542445	0					
ANR	3542695	ArgumentList	i		3542445	1					
ANR	3542696	Argument	i		3542445	0					
ANR	3542697	Identifier	i		3542445	0					
ANR	3542698	Identifier	OT_DWORD		3542445	1					
ANR	3542699	ReturnStatement	return i ;	4499:4:112312:112320	3542445	1	True				
ANR	3542700	Identifier	i		3542445	0					
ANR	3542701	IfStatement	if ( length == 3 && token [ 0 ] == 'c' )		3542445	17					
ANR	3542702	Condition	length == 3 && token [ 0 ] == 'c'	4504:5:112361:112390	3542445	0	True				
ANR	3542703	AndExpression	length == 3 && token [ 0 ] == 'c'		3542445	0		&&			
ANR	3542704	EqualityExpression	length == 3		3542445	0		==			
ANR	3542705	Identifier	length		3542445	0					
ANR	3542706	PrimaryExpression	3		3542445	1					
ANR	3542707	EqualityExpression	token [ 0 ] == 'c'		3542445	1		==			
ANR	3542708	ArrayIndexing	token [ 0 ]		3542445	0					
ANR	3542709	Identifier	token		3542445	0					
ANR	3542710	PrimaryExpression	0		3542445	1					
ANR	3542711	PrimaryExpression	'c'		3542445	1					
ANR	3542712	CompoundStatement		32:37:1310:1310	3542445	1					
ANR	3542713	ForStatement	for ( i = 0 ; cregs [ i ] ; i ++ )		3542445	0					
ANR	3542714	ForInit	i = 0 ;	4505:7:112402:112407	3542445	0	True				
ANR	3542715	AssignmentExpression	i = 0		3542445	0		=			
ANR	3542716	Identifier	i		3542445	0					
ANR	3542717	PrimaryExpression	0		3542445	1					
ANR	3542718	Condition	cregs [ i ]	4505:14:112409:112416	3542445	1	True				
ANR	3542719	ArrayIndexing	cregs [ i ]		3542445	0					
ANR	3542720	Identifier	cregs		3542445	0					
ANR	3542721	Identifier	i		3542445	1					
ANR	3542722	PostIncDecOperationExpression	i ++	4505:24:112419:112421	3542445	2	True				
ANR	3542723	Identifier	i		3542445	0					
ANR	3542724	IncDec	++		3542445	1					
ANR	3542725	CompoundStatement		33:29:1341:1341	3542445	3					
ANR	3542726	IfStatement	"if ( ! r_str_ncasecmp ( cregs [ i ] , token , length ) )"		3542445	0					
ANR	3542727	Condition	"! r_str_ncasecmp ( cregs [ i ] , token , length )"	4506:7:112433:112473	3542445	0	True				
ANR	3542728	UnaryOperationExpression	"! r_str_ncasecmp ( cregs [ i ] , token , length )"		3542445	0					
ANR	3542729	UnaryOperator	!		3542445	0					
ANR	3542730	CallExpression	"r_str_ncasecmp ( cregs [ i ] , token , length )"		3542445	1					
ANR	3542731	Callee	r_str_ncasecmp		3542445	0					
ANR	3542732	Identifier	r_str_ncasecmp		3542445	0					
ANR	3542733	ArgumentList	cregs [ i ]		3542445	1					
ANR	3542734	Argument	cregs [ i ]		3542445	0					
ANR	3542735	ArrayIndexing	cregs [ i ]		3542445	0					
ANR	3542736	Identifier	cregs		3542445	0					
ANR	3542737	Identifier	i		3542445	1					
ANR	3542738	Argument	token		3542445	1					
ANR	3542739	Identifier	token		3542445	0					
ANR	3542740	Argument	length		3542445	2					
ANR	3542741	Identifier	length		3542445	0					
ANR	3542742	CompoundStatement		34:50:1393:1393	3542445	1					
ANR	3542743	ExpressionStatement	* type = ( OT_CONTROLREG & OT_REG ( i ) ) | OT_DWORD	4507:4:112482:112529	3542445	0	True				
ANR	3542744	AssignmentExpression	* type = ( OT_CONTROLREG & OT_REG ( i ) ) | OT_DWORD		3542445	0		=			
ANR	3542745	UnaryOperationExpression	* type		3542445	0					
ANR	3542746	UnaryOperator	*		3542445	0					
ANR	3542747	Identifier	type		3542445	1					
ANR	3542748	InclusiveOrExpression	( OT_CONTROLREG & OT_REG ( i ) ) | OT_DWORD		3542445	1		|			
ANR	3542749	BitAndExpression	OT_CONTROLREG & OT_REG ( i )		3542445	0		&			
ANR	3542750	Identifier	OT_CONTROLREG		3542445	0					
ANR	3542751	CallExpression	OT_REG ( i )		3542445	1					
ANR	3542752	Callee	OT_REG		3542445	0					
ANR	3542753	Identifier	OT_REG		3542445	0					
ANR	3542754	ArgumentList	i		3542445	1					
ANR	3542755	Argument	i		3542445	0					
ANR	3542756	Identifier	i		3542445	0					
ANR	3542757	Identifier	OT_DWORD		3542445	1					
ANR	3542758	ReturnStatement	return i ;	4508:4:112535:112543	3542445	1	True				
ANR	3542759	Identifier	i		3542445	0					
ANR	3542760	IfStatement	if ( length == 3 && token [ 0 ] == 'd' )		3542445	18					
ANR	3542761	Condition	length == 3 && token [ 0 ] == 'd'	4513:5:112582:112611	3542445	0	True				
ANR	3542762	AndExpression	length == 3 && token [ 0 ] == 'd'		3542445	0		&&			
ANR	3542763	EqualityExpression	length == 3		3542445	0		==			
ANR	3542764	Identifier	length		3542445	0					
ANR	3542765	PrimaryExpression	3		3542445	1					
ANR	3542766	EqualityExpression	token [ 0 ] == 'd'		3542445	1		==			
ANR	3542767	ArrayIndexing	token [ 0 ]		3542445	0					
ANR	3542768	Identifier	token		3542445	0					
ANR	3542769	PrimaryExpression	0		3542445	1					
ANR	3542770	PrimaryExpression	'd'		3542445	1					
ANR	3542771	CompoundStatement		41:37:1531:1531	3542445	1					
ANR	3542772	ForStatement	for ( i = 0 ; cregs [ i ] ; i ++ )		3542445	0					
ANR	3542773	ForInit	i = 0 ;	4514:7:112623:112628	3542445	0	True				
ANR	3542774	AssignmentExpression	i = 0		3542445	0		=			
ANR	3542775	Identifier	i		3542445	0					
ANR	3542776	PrimaryExpression	0		3542445	1					
ANR	3542777	Condition	cregs [ i ]	4514:14:112630:112637	3542445	1	True				
ANR	3542778	ArrayIndexing	cregs [ i ]		3542445	0					
ANR	3542779	Identifier	cregs		3542445	0					
ANR	3542780	Identifier	i		3542445	1					
ANR	3542781	PostIncDecOperationExpression	i ++	4514:24:112640:112642	3542445	2	True				
ANR	3542782	Identifier	i		3542445	0					
ANR	3542783	IncDec	++		3542445	1					
ANR	3542784	CompoundStatement		42:29:1562:1562	3542445	3					
ANR	3542785	IfStatement	"if ( ! r_str_ncasecmp ( dregs [ i ] , token , length ) )"		3542445	0					
ANR	3542786	Condition	"! r_str_ncasecmp ( dregs [ i ] , token , length )"	4515:7:112654:112694	3542445	0	True				
ANR	3542787	UnaryOperationExpression	"! r_str_ncasecmp ( dregs [ i ] , token , length )"		3542445	0					
ANR	3542788	UnaryOperator	!		3542445	0					
ANR	3542789	CallExpression	"r_str_ncasecmp ( dregs [ i ] , token , length )"		3542445	1					
ANR	3542790	Callee	r_str_ncasecmp		3542445	0					
ANR	3542791	Identifier	r_str_ncasecmp		3542445	0					
ANR	3542792	ArgumentList	dregs [ i ]		3542445	1					
ANR	3542793	Argument	dregs [ i ]		3542445	0					
ANR	3542794	ArrayIndexing	dregs [ i ]		3542445	0					
ANR	3542795	Identifier	dregs		3542445	0					
ANR	3542796	Identifier	i		3542445	1					
ANR	3542797	Argument	token		3542445	1					
ANR	3542798	Identifier	token		3542445	0					
ANR	3542799	Argument	length		3542445	2					
ANR	3542800	Identifier	length		3542445	0					
ANR	3542801	CompoundStatement		43:50:1614:1614	3542445	1					
ANR	3542802	ExpressionStatement	* type = ( OT_DEBUGREG & OT_REG ( i ) ) | OT_DWORD	4516:4:112703:112748	3542445	0	True				
ANR	3542803	AssignmentExpression	* type = ( OT_DEBUGREG & OT_REG ( i ) ) | OT_DWORD		3542445	0		=			
ANR	3542804	UnaryOperationExpression	* type		3542445	0					
ANR	3542805	UnaryOperator	*		3542445	0					
ANR	3542806	Identifier	type		3542445	1					
ANR	3542807	InclusiveOrExpression	( OT_DEBUGREG & OT_REG ( i ) ) | OT_DWORD		3542445	1		|			
ANR	3542808	BitAndExpression	OT_DEBUGREG & OT_REG ( i )		3542445	0		&			
ANR	3542809	Identifier	OT_DEBUGREG		3542445	0					
ANR	3542810	CallExpression	OT_REG ( i )		3542445	1					
ANR	3542811	Callee	OT_REG		3542445	0					
ANR	3542812	Identifier	OT_REG		3542445	0					
ANR	3542813	ArgumentList	i		3542445	1					
ANR	3542814	Argument	i		3542445	0					
ANR	3542815	Identifier	i		3542445	0					
ANR	3542816	Identifier	OT_DWORD		3542445	1					
ANR	3542817	ReturnStatement	return i ;	4517:4:112754:112762	3542445	1	True				
ANR	3542818	Identifier	i		3542445	0					
ANR	3542819	IfStatement	if ( length == 2 && ( token [ 1 ] == 'l' || token [ 1 ] == 'h' ) )		3542445	19					
ANR	3542820	Condition	length == 2 && ( token [ 1 ] == 'l' || token [ 1 ] == 'h' )	4521:5:112781:112831	3542445	0	True				
ANR	3542821	AndExpression	length == 2 && ( token [ 1 ] == 'l' || token [ 1 ] == 'h' )		3542445	0		&&			
ANR	3542822	EqualityExpression	length == 2		3542445	0		==			
ANR	3542823	Identifier	length		3542445	0					
ANR	3542824	PrimaryExpression	2		3542445	1					
ANR	3542825	OrExpression	token [ 1 ] == 'l' || token [ 1 ] == 'h'		3542445	1		||			
ANR	3542826	EqualityExpression	token [ 1 ] == 'l'		3542445	0		==			
ANR	3542827	ArrayIndexing	token [ 1 ]		3542445	0					
ANR	3542828	Identifier	token		3542445	0					
ANR	3542829	PrimaryExpression	1		3542445	1					
ANR	3542830	PrimaryExpression	'l'		3542445	1					
ANR	3542831	EqualityExpression	token [ 1 ] == 'h'		3542445	1		==			
ANR	3542832	ArrayIndexing	token [ 1 ]		3542445	0					
ANR	3542833	Identifier	token		3542445	0					
ANR	3542834	PrimaryExpression	1		3542445	1					
ANR	3542835	PrimaryExpression	'h'		3542445	1					
ANR	3542836	CompoundStatement		49:58:1751:1751	3542445	1					
ANR	3542837	ForStatement	for ( i = 0 ; regs8 [ i ] ; i ++ )		3542445	0					
ANR	3542838	ForInit	i = 0 ;	4522:7:112843:112848	3542445	0	True				
ANR	3542839	AssignmentExpression	i = 0		3542445	0		=			
ANR	3542840	Identifier	i		3542445	0					
ANR	3542841	PrimaryExpression	0		3542445	1					
ANR	3542842	Condition	regs8 [ i ]	4522:14:112850:112857	3542445	1	True				
ANR	3542843	ArrayIndexing	regs8 [ i ]		3542445	0					
ANR	3542844	Identifier	regs8		3542445	0					
ANR	3542845	Identifier	i		3542445	1					
ANR	3542846	PostIncDecOperationExpression	i ++	4522:24:112860:112862	3542445	2	True				
ANR	3542847	Identifier	i		3542445	0					
ANR	3542848	IncDec	++		3542445	1					
ANR	3542849	CompoundStatement		50:29:1782:1782	3542445	3					
ANR	3542850	IfStatement	"if ( ! r_str_ncasecmp ( regs8 [ i ] , token , length ) )"		3542445	0					
ANR	3542851	Condition	"! r_str_ncasecmp ( regs8 [ i ] , token , length )"	4523:7:112874:112914	3542445	0	True				
ANR	3542852	UnaryOperationExpression	"! r_str_ncasecmp ( regs8 [ i ] , token , length )"		3542445	0					
ANR	3542853	UnaryOperator	!		3542445	0					
ANR	3542854	CallExpression	"r_str_ncasecmp ( regs8 [ i ] , token , length )"		3542445	1					
ANR	3542855	Callee	r_str_ncasecmp		3542445	0					
ANR	3542856	Identifier	r_str_ncasecmp		3542445	0					
ANR	3542857	ArgumentList	regs8 [ i ]		3542445	1					
ANR	3542858	Argument	regs8 [ i ]		3542445	0					
ANR	3542859	ArrayIndexing	regs8 [ i ]		3542445	0					
ANR	3542860	Identifier	regs8		3542445	0					
ANR	3542861	Identifier	i		3542445	1					
ANR	3542862	Argument	token		3542445	1					
ANR	3542863	Identifier	token		3542445	0					
ANR	3542864	Argument	length		3542445	2					
ANR	3542865	Identifier	length		3542445	0					
ANR	3542866	CompoundStatement		51:50:1834:1834	3542445	1					
ANR	3542867	ExpressionStatement	* type = ( OT_GPREG & OT_REG ( i ) ) | OT_BYTE	4524:4:112923:112964	3542445	0	True				
ANR	3542868	AssignmentExpression	* type = ( OT_GPREG & OT_REG ( i ) ) | OT_BYTE		3542445	0		=			
ANR	3542869	UnaryOperationExpression	* type		3542445	0					
ANR	3542870	UnaryOperator	*		3542445	0					
ANR	3542871	Identifier	type		3542445	1					
ANR	3542872	InclusiveOrExpression	( OT_GPREG & OT_REG ( i ) ) | OT_BYTE		3542445	1		|			
ANR	3542873	BitAndExpression	OT_GPREG & OT_REG ( i )		3542445	0		&			
ANR	3542874	Identifier	OT_GPREG		3542445	0					
ANR	3542875	CallExpression	OT_REG ( i )		3542445	1					
ANR	3542876	Callee	OT_REG		3542445	0					
ANR	3542877	Identifier	OT_REG		3542445	0					
ANR	3542878	ArgumentList	i		3542445	1					
ANR	3542879	Argument	i		3542445	0					
ANR	3542880	Identifier	i		3542445	0					
ANR	3542881	Identifier	OT_BYTE		3542445	1					
ANR	3542882	ReturnStatement	return i ;	4525:4:112970:112978	3542445	1	True				
ANR	3542883	Identifier	i		3542445	0					
ANR	3542884	IfStatement	if ( length == 2 )		3542445	20					
ANR	3542885	Condition	length == 2	4529:5:112997:113007	3542445	0	True				
ANR	3542886	EqualityExpression	length == 2		3542445	0		==			
ANR	3542887	Identifier	length		3542445	0					
ANR	3542888	PrimaryExpression	2		3542445	1					
ANR	3542889	CompoundStatement		57:18:1927:1927	3542445	1					
ANR	3542890	ForStatement	for ( i = 0 ; regs16 [ i ] ; i ++ )		3542445	0					
ANR	3542891	ForInit	i = 0 ;	4530:7:113019:113024	3542445	0	True				
ANR	3542892	AssignmentExpression	i = 0		3542445	0		=			
ANR	3542893	Identifier	i		3542445	0					
ANR	3542894	PrimaryExpression	0		3542445	1					
ANR	3542895	Condition	regs16 [ i ]	4530:14:113026:113034	3542445	1	True				
ANR	3542896	ArrayIndexing	regs16 [ i ]		3542445	0					
ANR	3542897	Identifier	regs16		3542445	0					
ANR	3542898	Identifier	i		3542445	1					
ANR	3542899	PostIncDecOperationExpression	i ++	4530:25:113037:113039	3542445	2	True				
ANR	3542900	Identifier	i		3542445	0					
ANR	3542901	IncDec	++		3542445	1					
ANR	3542902	CompoundStatement		58:30:1959:1959	3542445	3					
ANR	3542903	IfStatement	"if ( ! r_str_ncasecmp ( regs16 [ i ] , token , length ) )"		3542445	0					
ANR	3542904	Condition	"! r_str_ncasecmp ( regs16 [ i ] , token , length )"	4531:7:113051:113092	3542445	0	True				
ANR	3542905	UnaryOperationExpression	"! r_str_ncasecmp ( regs16 [ i ] , token , length )"		3542445	0					
ANR	3542906	UnaryOperator	!		3542445	0					
ANR	3542907	CallExpression	"r_str_ncasecmp ( regs16 [ i ] , token , length )"		3542445	1					
ANR	3542908	Callee	r_str_ncasecmp		3542445	0					
ANR	3542909	Identifier	r_str_ncasecmp		3542445	0					
ANR	3542910	ArgumentList	regs16 [ i ]		3542445	1					
ANR	3542911	Argument	regs16 [ i ]		3542445	0					
ANR	3542912	ArrayIndexing	regs16 [ i ]		3542445	0					
ANR	3542913	Identifier	regs16		3542445	0					
ANR	3542914	Identifier	i		3542445	1					
ANR	3542915	Argument	token		3542445	1					
ANR	3542916	Identifier	token		3542445	0					
ANR	3542917	Argument	length		3542445	2					
ANR	3542918	Identifier	length		3542445	0					
ANR	3542919	CompoundStatement		59:51:2012:2012	3542445	1					
ANR	3542920	ExpressionStatement	* type = ( OT_GPREG & OT_REG ( i ) ) | OT_WORD	4532:4:113101:113142	3542445	0	True				
ANR	3542921	AssignmentExpression	* type = ( OT_GPREG & OT_REG ( i ) ) | OT_WORD		3542445	0		=			
ANR	3542922	UnaryOperationExpression	* type		3542445	0					
ANR	3542923	UnaryOperator	*		3542445	0					
ANR	3542924	Identifier	type		3542445	1					
ANR	3542925	InclusiveOrExpression	( OT_GPREG & OT_REG ( i ) ) | OT_WORD		3542445	1		|			
ANR	3542926	BitAndExpression	OT_GPREG & OT_REG ( i )		3542445	0		&			
ANR	3542927	Identifier	OT_GPREG		3542445	0					
ANR	3542928	CallExpression	OT_REG ( i )		3542445	1					
ANR	3542929	Callee	OT_REG		3542445	0					
ANR	3542930	Identifier	OT_REG		3542445	0					
ANR	3542931	ArgumentList	i		3542445	1					
ANR	3542932	Argument	i		3542445	0					
ANR	3542933	Identifier	i		3542445	0					
ANR	3542934	Identifier	OT_WORD		3542445	1					
ANR	3542935	ReturnStatement	return i ;	4533:4:113148:113156	3542445	1	True				
ANR	3542936	Identifier	i		3542445	0					
ANR	3542937	ForStatement	for ( i = 0 ; sregs [ i ] ; i ++ )		3542445	1					
ANR	3542938	ForInit	i = 0 ;	4537:7:113211:113216	3542445	0	True				
ANR	3542939	AssignmentExpression	i = 0		3542445	0		=			
ANR	3542940	Identifier	i		3542445	0					
ANR	3542941	PrimaryExpression	0		3542445	1					
ANR	3542942	Condition	sregs [ i ]	4537:14:113218:113225	3542445	1	True				
ANR	3542943	ArrayIndexing	sregs [ i ]		3542445	0					
ANR	3542944	Identifier	sregs		3542445	0					
ANR	3542945	Identifier	i		3542445	1					
ANR	3542946	PostIncDecOperationExpression	i ++	4537:24:113228:113230	3542445	2	True				
ANR	3542947	Identifier	i		3542445	0					
ANR	3542948	IncDec	++		3542445	1					
ANR	3542949	CompoundStatement		65:29:2150:2150	3542445	3					
ANR	3542950	IfStatement	"if ( ! r_str_ncasecmp ( sregs [ i ] , token , length ) )"		3542445	0					
ANR	3542951	Condition	"! r_str_ncasecmp ( sregs [ i ] , token , length )"	4538:7:113242:113282	3542445	0	True				
ANR	3542952	UnaryOperationExpression	"! r_str_ncasecmp ( sregs [ i ] , token , length )"		3542445	0					
ANR	3542953	UnaryOperator	!		3542445	0					
ANR	3542954	CallExpression	"r_str_ncasecmp ( sregs [ i ] , token , length )"		3542445	1					
ANR	3542955	Callee	r_str_ncasecmp		3542445	0					
ANR	3542956	Identifier	r_str_ncasecmp		3542445	0					
ANR	3542957	ArgumentList	sregs [ i ]		3542445	1					
ANR	3542958	Argument	sregs [ i ]		3542445	0					
ANR	3542959	ArrayIndexing	sregs [ i ]		3542445	0					
ANR	3542960	Identifier	sregs		3542445	0					
ANR	3542961	Identifier	i		3542445	1					
ANR	3542962	Argument	token		3542445	1					
ANR	3542963	Identifier	token		3542445	0					
ANR	3542964	Argument	length		3542445	2					
ANR	3542965	Identifier	length		3542445	0					
ANR	3542966	CompoundStatement		66:50:2202:2202	3542445	1					
ANR	3542967	ExpressionStatement	* type = ( OT_SEGMENTREG & OT_REG ( i ) ) | OT_WORD	4539:4:113291:113337	3542445	0	True				
ANR	3542968	AssignmentExpression	* type = ( OT_SEGMENTREG & OT_REG ( i ) ) | OT_WORD		3542445	0		=			
ANR	3542969	UnaryOperationExpression	* type		3542445	0					
ANR	3542970	UnaryOperator	*		3542445	0					
ANR	3542971	Identifier	type		3542445	1					
ANR	3542972	InclusiveOrExpression	( OT_SEGMENTREG & OT_REG ( i ) ) | OT_WORD		3542445	1		|			
ANR	3542973	BitAndExpression	OT_SEGMENTREG & OT_REG ( i )		3542445	0		&			
ANR	3542974	Identifier	OT_SEGMENTREG		3542445	0					
ANR	3542975	CallExpression	OT_REG ( i )		3542445	1					
ANR	3542976	Callee	OT_REG		3542445	0					
ANR	3542977	Identifier	OT_REG		3542445	0					
ANR	3542978	ArgumentList	i		3542445	1					
ANR	3542979	Argument	i		3542445	0					
ANR	3542980	Identifier	i		3542445	0					
ANR	3542981	Identifier	OT_WORD		3542445	1					
ANR	3542982	ReturnStatement	return i ;	4540:4:113343:113351	3542445	1	True				
ANR	3542983	Identifier	i		3542445	0					
ANR	3542984	IfStatement	if ( token [ 0 ] == 'r' )		3542445	21					
ANR	3542985	Condition	token [ 0 ] == 'r'	4544:5:113370:113384	3542445	0	True				
ANR	3542986	EqualityExpression	token [ 0 ] == 'r'		3542445	0		==			
ANR	3542987	ArrayIndexing	token [ 0 ]		3542445	0					
ANR	3542988	Identifier	token		3542445	0					
ANR	3542989	PrimaryExpression	0		3542445	1					
ANR	3542990	PrimaryExpression	'r'		3542445	1					
ANR	3542991	CompoundStatement		72:22:2304:2304	3542445	1					
ANR	3542992	ForStatement	for ( i = 0 ; regs64 [ i ] ; i ++ )		3542445	0					
ANR	3542993	ForInit	i = 0 ;	4545:7:113396:113401	3542445	0	True				
ANR	3542994	AssignmentExpression	i = 0		3542445	0		=			
ANR	3542995	Identifier	i		3542445	0					
ANR	3542996	PrimaryExpression	0		3542445	1					
ANR	3542997	Condition	regs64 [ i ]	4545:14:113403:113411	3542445	1	True				
ANR	3542998	ArrayIndexing	regs64 [ i ]		3542445	0					
ANR	3542999	Identifier	regs64		3542445	0					
ANR	3543000	Identifier	i		3542445	1					
ANR	3543001	PostIncDecOperationExpression	i ++	4545:25:113414:113416	3542445	2	True				
ANR	3543002	Identifier	i		3542445	0					
ANR	3543003	IncDec	++		3542445	1					
ANR	3543004	CompoundStatement		73:30:2336:2336	3542445	3					
ANR	3543005	IfStatement	"if ( ! r_str_ncasecmp ( regs64 [ i ] , token , length ) )"		3542445	0					
ANR	3543006	Condition	"! r_str_ncasecmp ( regs64 [ i ] , token , length )"	4546:7:113428:113469	3542445	0	True				
ANR	3543007	UnaryOperationExpression	"! r_str_ncasecmp ( regs64 [ i ] , token , length )"		3542445	0					
ANR	3543008	UnaryOperator	!		3542445	0					
ANR	3543009	CallExpression	"r_str_ncasecmp ( regs64 [ i ] , token , length )"		3542445	1					
ANR	3543010	Callee	r_str_ncasecmp		3542445	0					
ANR	3543011	Identifier	r_str_ncasecmp		3542445	0					
ANR	3543012	ArgumentList	regs64 [ i ]		3542445	1					
ANR	3543013	Argument	regs64 [ i ]		3542445	0					
ANR	3543014	ArrayIndexing	regs64 [ i ]		3542445	0					
ANR	3543015	Identifier	regs64		3542445	0					
ANR	3543016	Identifier	i		3542445	1					
ANR	3543017	Argument	token		3542445	1					
ANR	3543018	Identifier	token		3542445	0					
ANR	3543019	Argument	length		3542445	2					
ANR	3543020	Identifier	length		3542445	0					
ANR	3543021	CompoundStatement		74:51:2389:2389	3542445	1					
ANR	3543022	ExpressionStatement	* type = ( OT_GPREG & OT_REG ( i ) ) | OT_QWORD	4547:4:113478:113520	3542445	0	True				
ANR	3543023	AssignmentExpression	* type = ( OT_GPREG & OT_REG ( i ) ) | OT_QWORD		3542445	0		=			
ANR	3543024	UnaryOperationExpression	* type		3542445	0					
ANR	3543025	UnaryOperator	*		3542445	0					
ANR	3543026	Identifier	type		3542445	1					
ANR	3543027	InclusiveOrExpression	( OT_GPREG & OT_REG ( i ) ) | OT_QWORD		3542445	1		|			
ANR	3543028	BitAndExpression	OT_GPREG & OT_REG ( i )		3542445	0		&			
ANR	3543029	Identifier	OT_GPREG		3542445	0					
ANR	3543030	CallExpression	OT_REG ( i )		3542445	1					
ANR	3543031	Callee	OT_REG		3542445	0					
ANR	3543032	Identifier	OT_REG		3542445	0					
ANR	3543033	ArgumentList	i		3542445	1					
ANR	3543034	Argument	i		3542445	0					
ANR	3543035	Identifier	i		3542445	0					
ANR	3543036	Identifier	OT_QWORD		3542445	1					
ANR	3543037	ExpressionStatement	a -> bits = 64	4548:4:113526:113538	3542445	1	True				
ANR	3543038	AssignmentExpression	a -> bits = 64		3542445	0		=			
ANR	3543039	PtrMemberAccess	a -> bits		3542445	0					
ANR	3543040	Identifier	a		3542445	0					
ANR	3543041	Identifier	bits		3542445	1					
ANR	3543042	PrimaryExpression	64		3542445	1					
ANR	3543043	ReturnStatement	return i ;	4549:4:113544:113552	3542445	2	True				
ANR	3543044	Identifier	i		3542445	0					
ANR	3543045	ForStatement	for ( i = 0 ; regs64ext [ i ] ; i ++ )		3542445	1					
ANR	3543046	ForInit	i = 0 ;	4552:7:113570:113575	3542445	0	True				
ANR	3543047	AssignmentExpression	i = 0		3542445	0		=			
ANR	3543048	Identifier	i		3542445	0					
ANR	3543049	PrimaryExpression	0		3542445	1					
ANR	3543050	Condition	regs64ext [ i ]	4552:14:113577:113588	3542445	1	True				
ANR	3543051	ArrayIndexing	regs64ext [ i ]		3542445	0					
ANR	3543052	Identifier	regs64ext		3542445	0					
ANR	3543053	Identifier	i		3542445	1					
ANR	3543054	PostIncDecOperationExpression	i ++	4552:28:113591:113593	3542445	2	True				
ANR	3543055	Identifier	i		3542445	0					
ANR	3543056	IncDec	++		3542445	1					
ANR	3543057	CompoundStatement		80:33:2513:2513	3542445	3					
ANR	3543058	IfStatement	"if ( ! r_str_ncasecmp ( regs64ext [ i ] , token , length ) )"		3542445	0					
ANR	3543059	Condition	"! r_str_ncasecmp ( regs64ext [ i ] , token , length )"	4553:7:113605:113649	3542445	0	True				
ANR	3543060	UnaryOperationExpression	"! r_str_ncasecmp ( regs64ext [ i ] , token , length )"		3542445	0					
ANR	3543061	UnaryOperator	!		3542445	0					
ANR	3543062	CallExpression	"r_str_ncasecmp ( regs64ext [ i ] , token , length )"		3542445	1					
ANR	3543063	Callee	r_str_ncasecmp		3542445	0					
ANR	3543064	Identifier	r_str_ncasecmp		3542445	0					
ANR	3543065	ArgumentList	regs64ext [ i ]		3542445	1					
ANR	3543066	Argument	regs64ext [ i ]		3542445	0					
ANR	3543067	ArrayIndexing	regs64ext [ i ]		3542445	0					
ANR	3543068	Identifier	regs64ext		3542445	0					
ANR	3543069	Identifier	i		3542445	1					
ANR	3543070	Argument	token		3542445	1					
ANR	3543071	Identifier	token		3542445	0					
ANR	3543072	Argument	length		3542445	2					
ANR	3543073	Identifier	length		3542445	0					
ANR	3543074	CompoundStatement		81:54:2569:2569	3542445	1					
ANR	3543075	ExpressionStatement	* type = ( OT_GPREG & OT_REG ( i ) ) | OT_QWORD	4554:4:113658:113700	3542445	0	True				
ANR	3543076	AssignmentExpression	* type = ( OT_GPREG & OT_REG ( i ) ) | OT_QWORD		3542445	0		=			
ANR	3543077	UnaryOperationExpression	* type		3542445	0					
ANR	3543078	UnaryOperator	*		3542445	0					
ANR	3543079	Identifier	type		3542445	1					
ANR	3543080	InclusiveOrExpression	( OT_GPREG & OT_REG ( i ) ) | OT_QWORD		3542445	1		|			
ANR	3543081	BitAndExpression	OT_GPREG & OT_REG ( i )		3542445	0		&			
ANR	3543082	Identifier	OT_GPREG		3542445	0					
ANR	3543083	CallExpression	OT_REG ( i )		3542445	1					
ANR	3543084	Callee	OT_REG		3542445	0					
ANR	3543085	Identifier	OT_REG		3542445	0					
ANR	3543086	ArgumentList	i		3542445	1					
ANR	3543087	Argument	i		3542445	0					
ANR	3543088	Identifier	i		3542445	0					
ANR	3543089	Identifier	OT_QWORD		3542445	1					
ANR	3543090	ExpressionStatement	a -> bits = 64	4555:4:113706:113718	3542445	1	True				
ANR	3543091	AssignmentExpression	a -> bits = 64		3542445	0		=			
ANR	3543092	PtrMemberAccess	a -> bits		3542445	0					
ANR	3543093	Identifier	a		3542445	0					
ANR	3543094	Identifier	bits		3542445	1					
ANR	3543095	PrimaryExpression	64		3542445	1					
ANR	3543096	ReturnStatement	return i + 9 ;	4556:4:113724:113736	3542445	2	True				
ANR	3543097	AdditiveExpression	i + 9		3542445	0		+			
ANR	3543098	Identifier	i		3542445	0					
ANR	3543099	PrimaryExpression	9		3542445	1					
ANR	3543100	ForStatement	for ( i = 0 ; regsext [ i ] ; i ++ )		3542445	2					
ANR	3543101	ForInit	i = 0 ;	4559:7:113754:113759	3542445	0	True				
ANR	3543102	AssignmentExpression	i = 0		3542445	0		=			
ANR	3543103	Identifier	i		3542445	0					
ANR	3543104	PrimaryExpression	0		3542445	1					
ANR	3543105	Condition	regsext [ i ]	4559:14:113761:113770	3542445	1	True				
ANR	3543106	ArrayIndexing	regsext [ i ]		3542445	0					
ANR	3543107	Identifier	regsext		3542445	0					
ANR	3543108	Identifier	i		3542445	1					
ANR	3543109	PostIncDecOperationExpression	i ++	4559:26:113773:113775	3542445	2	True				
ANR	3543110	Identifier	i		3542445	0					
ANR	3543111	IncDec	++		3542445	1					
ANR	3543112	CompoundStatement		87:31:2695:2695	3542445	3					
ANR	3543113	IfStatement	"if ( ! r_str_ncasecmp ( regsext [ i ] , token , length ) )"		3542445	0					
ANR	3543114	Condition	"! r_str_ncasecmp ( regsext [ i ] , token , length )"	4560:7:113787:113829	3542445	0	True				
ANR	3543115	UnaryOperationExpression	"! r_str_ncasecmp ( regsext [ i ] , token , length )"		3542445	0					
ANR	3543116	UnaryOperator	!		3542445	0					
ANR	3543117	CallExpression	"r_str_ncasecmp ( regsext [ i ] , token , length )"		3542445	1					
ANR	3543118	Callee	r_str_ncasecmp		3542445	0					
ANR	3543119	Identifier	r_str_ncasecmp		3542445	0					
ANR	3543120	ArgumentList	regsext [ i ]		3542445	1					
ANR	3543121	Argument	regsext [ i ]		3542445	0					
ANR	3543122	ArrayIndexing	regsext [ i ]		3542445	0					
ANR	3543123	Identifier	regsext		3542445	0					
ANR	3543124	Identifier	i		3542445	1					
ANR	3543125	Argument	token		3542445	1					
ANR	3543126	Identifier	token		3542445	0					
ANR	3543127	Argument	length		3542445	2					
ANR	3543128	Identifier	length		3542445	0					
ANR	3543129	CompoundStatement		88:52:2749:2749	3542445	1					
ANR	3543130	ExpressionStatement	* type = ( OT_GPREG & OT_REG ( i ) ) | OT_DWORD	4561:4:113838:113880	3542445	0	True				
ANR	3543131	AssignmentExpression	* type = ( OT_GPREG & OT_REG ( i ) ) | OT_DWORD		3542445	0		=			
ANR	3543132	UnaryOperationExpression	* type		3542445	0					
ANR	3543133	UnaryOperator	*		3542445	0					
ANR	3543134	Identifier	type		3542445	1					
ANR	3543135	InclusiveOrExpression	( OT_GPREG & OT_REG ( i ) ) | OT_DWORD		3542445	1		|			
ANR	3543136	BitAndExpression	OT_GPREG & OT_REG ( i )		3542445	0		&			
ANR	3543137	Identifier	OT_GPREG		3542445	0					
ANR	3543138	CallExpression	OT_REG ( i )		3542445	1					
ANR	3543139	Callee	OT_REG		3542445	0					
ANR	3543140	Identifier	OT_REG		3542445	0					
ANR	3543141	ArgumentList	i		3542445	1					
ANR	3543142	Argument	i		3542445	0					
ANR	3543143	Identifier	i		3542445	0					
ANR	3543144	Identifier	OT_DWORD		3542445	1					
ANR	3543145	IfStatement	if ( a -> bits < 32 )		3542445	1					
ANR	3543146	Condition	a -> bits < 32	4562:8:113890:113901	3542445	0	True				
ANR	3543147	RelationalExpression	a -> bits < 32		3542445	0		<			
ANR	3543148	PtrMemberAccess	a -> bits		3542445	0					
ANR	3543149	Identifier	a		3542445	0					
ANR	3543150	Identifier	bits		3542445	1					
ANR	3543151	PrimaryExpression	32		3542445	1					
ANR	3543152	CompoundStatement		90:22:2821:2821	3542445	1					
ANR	3543153	ExpressionStatement	a -> bits = 32	4563:5:113911:113923	3542445	0	True				
ANR	3543154	AssignmentExpression	a -> bits = 32		3542445	0		=			
ANR	3543155	PtrMemberAccess	a -> bits		3542445	0					
ANR	3543156	Identifier	a		3542445	0					
ANR	3543157	Identifier	bits		3542445	1					
ANR	3543158	PrimaryExpression	32		3542445	1					
ANR	3543159	ReturnStatement	return i + 9 ;	4565:4:113935:113947	3542445	2	True				
ANR	3543160	AdditiveExpression	i + 9		3542445	0		+			
ANR	3543161	Identifier	i		3542445	0					
ANR	3543162	PrimaryExpression	9		3542445	1					
ANR	3543163	IfStatement	"if ( ! r_str_ncasecmp ( ""st"" , token , 2 ) )"		3542445	22					
ANR	3543164	Condition	"! r_str_ncasecmp ( ""st"" , token , 2 )"	4571:5:113990:114021	3542445	0	True				
ANR	3543165	UnaryOperationExpression	"! r_str_ncasecmp ( ""st"" , token , 2 )"		3542445	0					
ANR	3543166	UnaryOperator	!		3542445	0					
ANR	3543167	CallExpression	"r_str_ncasecmp ( ""st"" , token , 2 )"		3542445	1					
ANR	3543168	Callee	r_str_ncasecmp		3542445	0					
ANR	3543169	Identifier	r_str_ncasecmp		3542445	0					
ANR	3543170	ArgumentList	"""st"""		3542445	1					
ANR	3543171	Argument	"""st"""		3542445	0					
ANR	3543172	PrimaryExpression	"""st"""		3542445	0					
ANR	3543173	Argument	token		3542445	1					
ANR	3543174	Identifier	token		3542445	0					
ANR	3543175	Argument	2		3542445	2					
ANR	3543176	PrimaryExpression	2		3542445	0					
ANR	3543177	CompoundStatement		99:39:2941:2941	3542445	1					
ANR	3543178	ExpressionStatement	* type = ( OT_FPUREG & ~OT_REGALL )	4572:2:114028:114060	3542445	0	True				
ANR	3543179	AssignmentExpression	* type = ( OT_FPUREG & ~OT_REGALL )		3542445	0		=			
ANR	3543180	UnaryOperationExpression	* type		3542445	0					
ANR	3543181	UnaryOperator	*		3542445	0					
ANR	3543182	Identifier	type		3542445	1					
ANR	3543183	BitAndExpression	OT_FPUREG & ~OT_REGALL		3542445	1		&			
ANR	3543184	Identifier	OT_FPUREG		3542445	0					
ANR	3543185	Identifier	~OT_REGALL		3542445	1					
ANR	3543186	ExpressionStatement	* pos = 3	4573:2:114064:114072	3542445	1	True				
ANR	3543187	AssignmentExpression	* pos = 3		3542445	0		=			
ANR	3543188	UnaryOperationExpression	* pos		3542445	0					
ANR	3543189	UnaryOperator	*		3542445	0					
ANR	3543190	Identifier	pos		3542445	1					
ANR	3543191	PrimaryExpression	3		3542445	1					
ANR	3543192	IfStatement	"if ( ! r_str_ncasecmp ( ""mm"" , token , 2 ) )"		3542445	23					
ANR	3543193	Condition	"! r_str_ncasecmp ( ""mm"" , token , 2 )"	4575:5:114082:114113	3542445	0	True				
ANR	3543194	UnaryOperationExpression	"! r_str_ncasecmp ( ""mm"" , token , 2 )"		3542445	0					
ANR	3543195	UnaryOperator	!		3542445	0					
ANR	3543196	CallExpression	"r_str_ncasecmp ( ""mm"" , token , 2 )"		3542445	1					
ANR	3543197	Callee	r_str_ncasecmp		3542445	0					
ANR	3543198	Identifier	r_str_ncasecmp		3542445	0					
ANR	3543199	ArgumentList	"""mm"""		3542445	1					
ANR	3543200	Argument	"""mm"""		3542445	0					
ANR	3543201	PrimaryExpression	"""mm"""		3542445	0					
ANR	3543202	Argument	token		3542445	1					
ANR	3543203	Identifier	token		3542445	0					
ANR	3543204	Argument	2		3542445	2					
ANR	3543205	PrimaryExpression	2		3542445	0					
ANR	3543206	CompoundStatement		103:39:3033:3033	3542445	1					
ANR	3543207	ExpressionStatement	* type = ( OT_MMXREG & ~OT_REGALL )	4576:2:114120:114152	3542445	0	True				
ANR	3543208	AssignmentExpression	* type = ( OT_MMXREG & ~OT_REGALL )		3542445	0		=			
ANR	3543209	UnaryOperationExpression	* type		3542445	0					
ANR	3543210	UnaryOperator	*		3542445	0					
ANR	3543211	Identifier	type		3542445	1					
ANR	3543212	BitAndExpression	OT_MMXREG & ~OT_REGALL		3542445	1		&			
ANR	3543213	Identifier	OT_MMXREG		3542445	0					
ANR	3543214	Identifier	~OT_REGALL		3542445	1					
ANR	3543215	ExpressionStatement	* pos = 3	4577:2:114156:114164	3542445	1	True				
ANR	3543216	AssignmentExpression	* pos = 3		3542445	0		=			
ANR	3543217	UnaryOperationExpression	* pos		3542445	0					
ANR	3543218	UnaryOperator	*		3542445	0					
ANR	3543219	Identifier	pos		3542445	1					
ANR	3543220	PrimaryExpression	3		3542445	1					
ANR	3543221	IfStatement	"if ( ! r_str_ncasecmp ( ""xmm"" , token , 3 ) )"		3542445	24					
ANR	3543222	Condition	"! r_str_ncasecmp ( ""xmm"" , token , 3 )"	4579:5:114174:114206	3542445	0	True				
ANR	3543223	UnaryOperationExpression	"! r_str_ncasecmp ( ""xmm"" , token , 3 )"		3542445	0					
ANR	3543224	UnaryOperator	!		3542445	0					
ANR	3543225	CallExpression	"r_str_ncasecmp ( ""xmm"" , token , 3 )"		3542445	1					
ANR	3543226	Callee	r_str_ncasecmp		3542445	0					
ANR	3543227	Identifier	r_str_ncasecmp		3542445	0					
ANR	3543228	ArgumentList	"""xmm"""		3542445	1					
ANR	3543229	Argument	"""xmm"""		3542445	0					
ANR	3543230	PrimaryExpression	"""xmm"""		3542445	0					
ANR	3543231	Argument	token		3542445	1					
ANR	3543232	Identifier	token		3542445	0					
ANR	3543233	Argument	3		3542445	2					
ANR	3543234	PrimaryExpression	3		3542445	0					
ANR	3543235	CompoundStatement		107:40:3126:3126	3542445	1					
ANR	3543236	ExpressionStatement	* type = ( OT_XMMREG & ~OT_REGALL )	4580:2:114213:114245	3542445	0	True				
ANR	3543237	AssignmentExpression	* type = ( OT_XMMREG & ~OT_REGALL )		3542445	0		=			
ANR	3543238	UnaryOperationExpression	* type		3542445	0					
ANR	3543239	UnaryOperator	*		3542445	0					
ANR	3543240	Identifier	type		3542445	1					
ANR	3543241	BitAndExpression	OT_XMMREG & ~OT_REGALL		3542445	1		&			
ANR	3543242	Identifier	OT_XMMREG		3542445	0					
ANR	3543243	Identifier	~OT_REGALL		3542445	1					
ANR	3543244	ExpressionStatement	* pos = 4	4581:2:114249:114257	3542445	1	True				
ANR	3543245	AssignmentExpression	* pos = 4		3542445	0		=			
ANR	3543246	UnaryOperationExpression	* pos		3542445	0					
ANR	3543247	UnaryOperator	*		3542445	0					
ANR	3543248	Identifier	pos		3542445	1					
ANR	3543249	PrimaryExpression	4		3542445	1					
ANR	3543250	IfStatement	if ( * type & ( OT_FPUREG | OT_MMXREG | OT_XMMREG ) & ~OT_REGALL )		3542445	25					
ANR	3543251	Condition	* type & ( OT_FPUREG | OT_MMXREG | OT_XMMREG ) & ~OT_REGALL	4585:5:114315:114370	3542445	0	True				
ANR	3543252	BitAndExpression	* type & ( OT_FPUREG | OT_MMXREG | OT_XMMREG ) & ~OT_REGALL		3542445	0		&			
ANR	3543253	UnaryOperationExpression	* type		3542445	0					
ANR	3543254	UnaryOperator	*		3542445	0					
ANR	3543255	Identifier	type		3542445	1					
ANR	3543256	BitAndExpression	( OT_FPUREG | OT_MMXREG | OT_XMMREG ) & ~OT_REGALL		3542445	1		&			
ANR	3543257	InclusiveOrExpression	OT_FPUREG | OT_MMXREG | OT_XMMREG		3542445	0		|			
ANR	3543258	Identifier	OT_FPUREG		3542445	0					
ANR	3543259	InclusiveOrExpression	OT_MMXREG | OT_XMMREG		3542445	1		|			
ANR	3543260	Identifier	OT_MMXREG		3542445	0					
ANR	3543261	Identifier	OT_XMMREG		3542445	1					
ANR	3543262	Identifier	~OT_REGALL		3542445	1					
ANR	3543263	CompoundStatement		114:2:3294:3323	3542445	1					
ANR	3543264	IdentifierDeclStatement	Register reg = X86R_UNDEFINED ;	4586:2:114377:114406	3542445	0	True				
ANR	3543265	IdentifierDecl	reg = X86R_UNDEFINED		3542445	0					
ANR	3543266	IdentifierDeclType	Register		3542445	0					
ANR	3543267	Identifier	reg		3542445	1					
ANR	3543268	AssignmentExpression	reg = X86R_UNDEFINED		3542445	2		=			
ANR	3543269	Identifier	X86R_UNDEFINED		3542445	0					
ANR	3543270	Identifier	X86R_UNDEFINED		3542445	1					
ANR	3543271	IfStatement	"if ( getToken ( str , pos , & nextpos ) == TT_SPECIAL && str [ * pos ] == '(' )"		3542445	1					
ANR	3543272	Condition	"getToken ( str , pos , & nextpos ) == TT_SPECIAL && str [ * pos ] == '('"	4589:6:114448:114510	3542445	0	True				
ANR	3543273	AndExpression	"getToken ( str , pos , & nextpos ) == TT_SPECIAL && str [ * pos ] == '('"		3542445	0		&&			
ANR	3543274	EqualityExpression	"getToken ( str , pos , & nextpos ) == TT_SPECIAL"		3542445	0		==			
ANR	3543275	CallExpression	"getToken ( str , pos , & nextpos )"		3542445	0					
ANR	3543276	Callee	getToken		3542445	0					
ANR	3543277	Identifier	getToken		3542445	0					
ANR	3543278	ArgumentList	str		3542445	1					
ANR	3543279	Argument	str		3542445	0					
ANR	3543280	Identifier	str		3542445	0					
ANR	3543281	Argument	pos		3542445	1					
ANR	3543282	Identifier	pos		3542445	0					
ANR	3543283	Argument	& nextpos		3542445	2					
ANR	3543284	UnaryOperationExpression	& nextpos		3542445	0					
ANR	3543285	UnaryOperator	&		3542445	0					
ANR	3543286	Identifier	nextpos		3542445	1					
ANR	3543287	Identifier	TT_SPECIAL		3542445	1					
ANR	3543288	EqualityExpression	str [ * pos ] == '('		3542445	1		==			
ANR	3543289	ArrayIndexing	str [ * pos ]		3542445	0					
ANR	3543290	Identifier	str		3542445	0					
ANR	3543291	UnaryOperationExpression	* pos		3542445	1					
ANR	3543292	UnaryOperator	*		3542445	0					
ANR	3543293	Identifier	pos		3542445	1					
ANR	3543294	PrimaryExpression	'('		3542445	1					
ANR	3543295	CompoundStatement		117:71:3430:3430	3542445	1					
ANR	3543296	ExpressionStatement	* pos = nextpos	4590:3:114518:114532	3542445	0	True				
ANR	3543297	AssignmentExpression	* pos = nextpos		3542445	0		=			
ANR	3543298	UnaryOperationExpression	* pos		3542445	0					
ANR	3543299	UnaryOperator	*		3542445	0					
ANR	3543300	Identifier	pos		3542445	1					
ANR	3543301	Identifier	nextpos		3542445	1					
ANR	3543302	IfStatement	"if ( getToken ( str , pos , & nextpos ) != TT_NUMBER || ( reg = getnum ( a , str + * pos ) ) > 7 )"		3542445	2					
ANR	3543303	Condition	"getToken ( str , pos , & nextpos ) != TT_NUMBER || ( reg = getnum ( a , str + * pos ) ) > 7"	4595:6:114612:114695	3542445	0	True				
ANR	3543304	OrExpression	"getToken ( str , pos , & nextpos ) != TT_NUMBER || ( reg = getnum ( a , str + * pos ) ) > 7"		3542445	0		||			
ANR	3543305	EqualityExpression	"getToken ( str , pos , & nextpos ) != TT_NUMBER"		3542445	0		!=			
ANR	3543306	CallExpression	"getToken ( str , pos , & nextpos )"		3542445	0					
ANR	3543307	Callee	getToken		3542445	0					
ANR	3543308	Identifier	getToken		3542445	0					
ANR	3543309	ArgumentList	str		3542445	1					
ANR	3543310	Argument	str		3542445	0					
ANR	3543311	Identifier	str		3542445	0					
ANR	3543312	Argument	pos		3542445	1					
ANR	3543313	Identifier	pos		3542445	0					
ANR	3543314	Argument	& nextpos		3542445	2					
ANR	3543315	UnaryOperationExpression	& nextpos		3542445	0					
ANR	3543316	UnaryOperator	&		3542445	0					
ANR	3543317	Identifier	nextpos		3542445	1					
ANR	3543318	Identifier	TT_NUMBER		3542445	1					
ANR	3543319	RelationalExpression	"( reg = getnum ( a , str + * pos ) ) > 7"		3542445	1		>			
ANR	3543320	AssignmentExpression	"reg = getnum ( a , str + * pos )"		3542445	0		=			
ANR	3543321	Identifier	reg		3542445	0					
ANR	3543322	CallExpression	"getnum ( a , str + * pos )"		3542445	1					
ANR	3543323	Callee	getnum		3542445	0					
ANR	3543324	Identifier	getnum		3542445	0					
ANR	3543325	ArgumentList	a		3542445	1					
ANR	3543326	Argument	a		3542445	0					
ANR	3543327	Identifier	a		3542445	0					
ANR	3543328	Argument	str + * pos		3542445	1					
ANR	3543329	AdditiveExpression	str + * pos		3542445	0		+			
ANR	3543330	Identifier	str		3542445	0					
ANR	3543331	UnaryOperationExpression	* pos		3542445	1					
ANR	3543332	UnaryOperator	*		3542445	0					
ANR	3543333	Identifier	pos		3542445	1					
ANR	3543334	PrimaryExpression	7		3542445	1					
ANR	3543335	CompoundStatement		124:40:3615:3615	3542445	1					
ANR	3543336	IfStatement	if ( ( int ) reg > 15 )		3542445	0					
ANR	3543337	Condition	( int ) reg > 15	4597:7:114707:114719	3542445	0	True				
ANR	3543338	RelationalExpression	( int ) reg > 15		3542445	0		>			
ANR	3543339	CastExpression	( int ) reg		3542445	0					
ANR	3543340	CastTarget	int		3542445	0					
ANR	3543341	Identifier	reg		3542445	1					
ANR	3543342	PrimaryExpression	15		3542445	1					
ANR	3543343	CompoundStatement		125:22:3639:3639	3542445	1					
ANR	3543344	ExpressionStatement	"eprintf ( ""Too large register index!\\n"" )"	4598:4:114728:114767	3542445	0	True				
ANR	3543345	CallExpression	"eprintf ( ""Too large register index!\\n"" )"		3542445	0					
ANR	3543346	Callee	eprintf		3542445	0					
ANR	3543347	Identifier	eprintf		3542445	0					
ANR	3543348	ArgumentList	"""Too large register index!\\n"""		3542445	1					
ANR	3543349	Argument	"""Too large register index!\\n"""		3542445	0					
ANR	3543350	PrimaryExpression	"""Too large register index!\\n"""		3542445	0					
ANR	3543351	ReturnStatement	return X86R_UNDEFINED ;	4599:4:114773:114794	3542445	1	True				
ANR	3543352	Identifier	X86R_UNDEFINED		3542445	0					
ANR	3543353	ElseStatement	else		3542445	0					
ANR	3543354	CompoundStatement		128:10:3723:3723	3542445	0					
ANR	3543355	ExpressionStatement	reg -= 8	4601:4:114812:114820	3542445	0	True				
ANR	3543356	AssignmentExpression	reg -= 8		3542445	0		-=			
ANR	3543357	Identifier	reg		3542445	0					
ANR	3543358	PrimaryExpression	8		3542445	1					
ANR	3543359	ExpressionStatement	* pos = nextpos	4605:2:114834:114848	3542445	3	True				
ANR	3543360	AssignmentExpression	* pos = nextpos		3542445	0		=			
ANR	3543361	UnaryOperationExpression	* pos		3542445	0					
ANR	3543362	UnaryOperator	*		3542445	0					
ANR	3543363	Identifier	pos		3542445	1					
ANR	3543364	Identifier	nextpos		3542445	1					
ANR	3543365	IfStatement	"if ( getToken ( str , pos , & nextpos ) == TT_SPECIAL && str [ * pos ] == ')' )"		3542445	4					
ANR	3543366	Condition	"getToken ( str , pos , & nextpos ) == TT_SPECIAL && str [ * pos ] == ')'"	4608:6:114874:114936	3542445	0	True				
ANR	3543367	AndExpression	"getToken ( str , pos , & nextpos ) == TT_SPECIAL && str [ * pos ] == ')'"		3542445	0		&&			
ANR	3543368	EqualityExpression	"getToken ( str , pos , & nextpos ) == TT_SPECIAL"		3542445	0		==			
ANR	3543369	CallExpression	"getToken ( str , pos , & nextpos )"		3542445	0					
ANR	3543370	Callee	getToken		3542445	0					
ANR	3543371	Identifier	getToken		3542445	0					
ANR	3543372	ArgumentList	str		3542445	1					
ANR	3543373	Argument	str		3542445	0					
ANR	3543374	Identifier	str		3542445	0					
ANR	3543375	Argument	pos		3542445	1					
ANR	3543376	Identifier	pos		3542445	0					
ANR	3543377	Argument	& nextpos		3542445	2					
ANR	3543378	UnaryOperationExpression	& nextpos		3542445	0					
ANR	3543379	UnaryOperator	&		3542445	0					
ANR	3543380	Identifier	nextpos		3542445	1					
ANR	3543381	Identifier	TT_SPECIAL		3542445	1					
ANR	3543382	EqualityExpression	str [ * pos ] == ')'		3542445	1		==			
ANR	3543383	ArrayIndexing	str [ * pos ]		3542445	0					
ANR	3543384	Identifier	str		3542445	0					
ANR	3543385	UnaryOperationExpression	* pos		3542445	1					
ANR	3543386	UnaryOperator	*		3542445	0					
ANR	3543387	Identifier	pos		3542445	1					
ANR	3543388	PrimaryExpression	')'		3542445	1					
ANR	3543389	CompoundStatement		136:71:3856:3856	3542445	1					
ANR	3543390	ExpressionStatement	* pos = nextpos	4609:3:114944:114958	3542445	0	True				
ANR	3543391	AssignmentExpression	* pos = nextpos		3542445	0		=			
ANR	3543392	UnaryOperationExpression	* pos		3542445	0					
ANR	3543393	UnaryOperator	*		3542445	0					
ANR	3543394	Identifier	pos		3542445	1					
ANR	3543395	Identifier	nextpos		3542445	1					
ANR	3543396	IfStatement	if ( reg > 7 )		3542445	5					
ANR	3543397	Condition	reg > 7	4613:6:115053:115059	3542445	0	True				
ANR	3543398	RelationalExpression	reg > 7		3542445	0		>			
ANR	3543399	Identifier	reg		3542445	0					
ANR	3543400	PrimaryExpression	7		3542445	1					
ANR	3543401	CompoundStatement		141:15:3979:3979	3542445	1					
ANR	3543402	ExpressionStatement	"eprintf ( ""Too large register index!\\n"" )"	4614:3:115067:115106	3542445	0	True				
ANR	3543403	CallExpression	"eprintf ( ""Too large register index!\\n"" )"		3542445	0					
ANR	3543404	Callee	eprintf		3542445	0					
ANR	3543405	Identifier	eprintf		3542445	0					
ANR	3543406	ArgumentList	"""Too large register index!\\n"""		3542445	1					
ANR	3543407	Argument	"""Too large register index!\\n"""		3542445	0					
ANR	3543408	PrimaryExpression	"""Too large register index!\\n"""		3542445	0					
ANR	3543409	ReturnStatement	return X86R_UNDEFINED ;	4615:3:115111:115132	3542445	1	True				
ANR	3543410	Identifier	X86R_UNDEFINED		3542445	0					
ANR	3543411	ExpressionStatement	* type |= ( OT_REG ( reg ) & ~OT_REGTYPE )	4617:2:115140:115177	3542445	6	True				
ANR	3543412	AssignmentExpression	* type |= ( OT_REG ( reg ) & ~OT_REGTYPE )		3542445	0		|=			
ANR	3543413	UnaryOperationExpression	* type		3542445	0					
ANR	3543414	UnaryOperator	*		3542445	0					
ANR	3543415	Identifier	type		3542445	1					
ANR	3543416	BitAndExpression	OT_REG ( reg ) & ~OT_REGTYPE		3542445	1		&			
ANR	3543417	CallExpression	OT_REG ( reg )		3542445	0					
ANR	3543418	Callee	OT_REG		3542445	0					
ANR	3543419	Identifier	OT_REG		3542445	0					
ANR	3543420	ArgumentList	reg		3542445	1					
ANR	3543421	Argument	reg		3542445	0					
ANR	3543422	Identifier	reg		3542445	0					
ANR	3543423	Identifier	~OT_REGTYPE		3542445	1					
ANR	3543424	ReturnStatement	return reg ;	4618:2:115181:115191	3542445	7	True				
ANR	3543425	Identifier	reg		3542445	0					
ANR	3543426	ReturnStatement	return X86R_UNDEFINED ;	4621:1:115198:115219	3542445	26	True				
ANR	3543427	Identifier	X86R_UNDEFINED		3542445	0					
ANR	3543428	ReturnType	static Register		3542445	1					
ANR	3543429	Identifier	parseReg		3542445	2					
ANR	3543430	ParameterList	"RAsm * a , const char * str , size_t * pos , ut32 * type"		3542445	3					
ANR	3543431	Parameter	RAsm * a	4473:25:111031:111037	3542445	0	True				
ANR	3543432	ParameterType	RAsm *		3542445	0					
ANR	3543433	Identifier	a		3542445	1					
ANR	3543434	Parameter	const char * str	4473:34:111040:111054	3542445	1	True				
ANR	3543435	ParameterType	const char *		3542445	0					
ANR	3543436	Identifier	str		3542445	1					
ANR	3543437	Parameter	size_t * pos	4473:51:111057:111067	3542445	2	True				
ANR	3543438	ParameterType	size_t *		3542445	0					
ANR	3543439	Identifier	pos		3542445	1					
ANR	3543440	Parameter	ut32 * type	4473:64:111070:111079	3542445	3	True				
ANR	3543441	ParameterType	ut32 *		3542445	0					
ANR	3543442	Identifier	type		3542445	1					
ANR	3543443	CFGEntryNode	ENTRY		3542445		True				
ANR	3543444	CFGExitNode	EXIT		3542445		True				
ANR	3543445	Symbol	OT_REG		3542445						
ANR	3543446	Symbol	type		3542445						
ANR	3543447	Symbol	regs16		3542445						
ANR	3543448	Symbol	OT_FPUREG		3542445						
ANR	3543449	Symbol	* regs64		3542445						
ANR	3543450	Symbol	regs64		3542445						
ANR	3543451	Symbol	* regs8		3542445						
ANR	3543452	Symbol	reg		3542445						
ANR	3543453	Symbol	~OT_REGALL		3542445						
ANR	3543454	Symbol	nextpos		3542445						
ANR	3543455	Symbol	~OT_REGTYPE		3542445						
ANR	3543456	Symbol	OT_BYTE		3542445						
ANR	3543457	Symbol	a -> bits		3542445						
ANR	3543458	Symbol	NULL		3542445						
ANR	3543459	Symbol	regsext		3542445						
ANR	3543460	Symbol	OT_GPREG		3542445						
ANR	3543461	Symbol	OT_DEBUGREG		3542445						
ANR	3543462	Symbol	OT_SEGMENTREG		3542445						
ANR	3543463	Symbol	* * pos		3542445						
ANR	3543464	Symbol	str		3542445						
ANR	3543465	Symbol	OT_CONTROLREG		3542445						
ANR	3543466	Symbol	* regs		3542445						
ANR	3543467	Symbol	* sregs		3542445						
ANR	3543468	Symbol	* pos		3542445						
ANR	3543469	Symbol	OT_QWORD		3542445						
ANR	3543470	Symbol	* cregs		3542445						
ANR	3543471	Symbol	regs8		3542445						
ANR	3543472	Symbol	* regsext		3542445						
ANR	3543473	Symbol	pos		3542445						
ANR	3543474	Symbol	* type		3542445						
ANR	3543475	Symbol	* dregs		3542445						
ANR	3543476	Symbol	* regs64ext		3542445						
ANR	3543477	Symbol	TT_NUMBER		3542445						
ANR	3543478	Symbol	sregs		3542445						
ANR	3543479	Symbol	* str		3542445						
ANR	3543480	Symbol	r_str_ncasecmp		3542445						
ANR	3543481	Symbol	a		3542445						
ANR	3543482	Symbol	& nextpos		3542445						
ANR	3543483	Symbol	OT_WORD		3542445						
ANR	3543484	Symbol	regs64ext		3542445						
ANR	3543485	Symbol	length		3542445						
ANR	3543486	Symbol	i		3542445						
ANR	3543487	Symbol	regs		3542445						
ANR	3543488	Symbol	cregs		3542445						
ANR	3543489	Symbol	OT_MMXREG		3542445						
ANR	3543490	Symbol	OT_XMMREG		3542445						
ANR	3543491	Symbol	* a		3542445						
ANR	3543492	Symbol	TT_SPECIAL		3542445						
ANR	3543493	Symbol	token		3542445						
ANR	3543494	Symbol	* i		3542445						
ANR	3543495	Symbol	* token		3542445						
ANR	3543496	Symbol	X86R_UNDEFINED		3542445						
ANR	3543497	Symbol	dregs		3542445						
ANR	3543498	Symbol	getToken		3542445						
ANR	3543499	Symbol	getnum		3542445						
ANR	3543500	Symbol	* regs16		3542445						
ANR	3543501	Symbol	OT_DWORD		3542445						
ANR	3543502	Function	parse_segment_offset	4624:0:115224:115832							
ANR	3543503	FunctionDef	"parse_segment_offset (RAsm * a , const char * str , size_t * pos , Operand * op , int reg_index)"		3543502	0					
ANR	3543504	CompoundStatement		4625:30:115326:115832	3543502	0					
ANR	3543505	IdentifierDeclStatement	int nextpos = * pos ;	4626:1:115329:115347	3543502	0	True				
ANR	3543506	IdentifierDecl	nextpos = * pos		3543502	0					
ANR	3543507	IdentifierDeclType	int		3543502	0					
ANR	3543508	Identifier	nextpos		3543502	1					
ANR	3543509	AssignmentExpression	nextpos = * pos		3543502	2		=			
ANR	3543510	Identifier	nextpos		3543502	0					
ANR	3543511	UnaryOperationExpression	* pos		3543502	1					
ANR	3543512	UnaryOperator	*		3543502	0					
ANR	3543513	Identifier	pos		3543502	1					
ANR	3543514	IdentifierDeclStatement	"char * c = strchr ( str + nextpos , ':' ) ;"	4627:1:115350:115387	3543502	1	True				
ANR	3543515	IdentifierDecl	"* c = strchr ( str + nextpos , ':' )"		3543502	0					
ANR	3543516	IdentifierDeclType	char *		3543502	0					
ANR	3543517	Identifier	c		3543502	1					
ANR	3543518	AssignmentExpression	"* c = strchr ( str + nextpos , ':' )"		3543502	2		=			
ANR	3543519	Identifier	c		3543502	0					
ANR	3543520	CallExpression	"strchr ( str + nextpos , ':' )"		3543502	1					
ANR	3543521	Callee	strchr		3543502	0					
ANR	3543522	Identifier	strchr		3543502	0					
ANR	3543523	ArgumentList	str + nextpos		3543502	1					
ANR	3543524	Argument	str + nextpos		3543502	0					
ANR	3543525	AdditiveExpression	str + nextpos		3543502	0		+			
ANR	3543526	Identifier	str		3543502	0					
ANR	3543527	Identifier	nextpos		3543502	1					
ANR	3543528	Argument	':'		3543502	1					
ANR	3543529	PrimaryExpression	':'		3543502	0					
ANR	3543530	IfStatement	if ( c )		3543502	2					
ANR	3543531	Condition	c	4628:5:115394:115394	3543502	0	True				
ANR	3543532	Identifier	c		3543502	0					
ANR	3543533	CompoundStatement		13:2:319:356	3543502	1					
ANR	3543534	ExpressionStatement	nextpos ++	4629:2:115401:115411	3543502	0	True				
ANR	3543535	PostIncDecOperationExpression	nextpos ++		3543502	0					
ANR	3543536	Identifier	nextpos		3543502	0					
ANR	3543537	IncDec	++		3543502	1					
ANR	3543538	ExpressionStatement	"c = strchr ( str + nextpos , '[' )"	4630:2:115431:115462	3543502	1	True				
ANR	3543539	AssignmentExpression	"c = strchr ( str + nextpos , '[' )"		3543502	0		=			
ANR	3543540	Identifier	c		3543502	0					
ANR	3543541	CallExpression	"strchr ( str + nextpos , '[' )"		3543502	1					
ANR	3543542	Callee	strchr		3543502	0					
ANR	3543543	Identifier	strchr		3543502	0					
ANR	3543544	ArgumentList	str + nextpos		3543502	1					
ANR	3543545	Argument	str + nextpos		3543502	0					
ANR	3543546	AdditiveExpression	str + nextpos		3543502	0		+			
ANR	3543547	Identifier	str		3543502	0					
ANR	3543548	Identifier	nextpos		3543502	1					
ANR	3543549	Argument	'['		3543502	1					
ANR	3543550	PrimaryExpression	'['		3543502	0					
ANR	3543551	IfStatement	if ( c )		3543502	2					
ANR	3543552	Condition	c	4631:6:115470:115470	3543502	0	True				
ANR	3543553	Identifier	c		3543502	0					
ANR	3543554	CompoundStatement		7:9:146:146	3543502	1					
ANR	3543555	ExpressionStatement	nextpos ++	4631:10:115474:115484	3543502	0	True				
ANR	3543556	PostIncDecOperationExpression	nextpos ++		3543502	0					
ANR	3543557	Identifier	nextpos		3543502	0					
ANR	3543558	IncDec	++		3543502	1					
ANR	3543559	ExpressionStatement	op -> regs [ reg_index ] = op -> reg	4634:2:115565:115594	3543502	3	True				
ANR	3543560	AssignmentExpression	op -> regs [ reg_index ] = op -> reg		3543502	0		=			
ANR	3543561	ArrayIndexing	op -> regs [ reg_index ]		3543502	0					
ANR	3543562	PtrMemberAccess	op -> regs		3543502	0					
ANR	3543563	Identifier	op		3543502	0					
ANR	3543564	Identifier	regs		3543502	1					
ANR	3543565	Identifier	reg_index		3543502	1					
ANR	3543566	PtrMemberAccess	op -> reg		3543502	1					
ANR	3543567	Identifier	op		3543502	0					
ANR	3543568	Identifier	reg		3543502	1					
ANR	3543569	ExpressionStatement	op -> type |= OT_MEMORY	4635:2:115598:115619	3543502	4	True				
ANR	3543570	AssignmentExpression	op -> type |= OT_MEMORY		3543502	0		|=			
ANR	3543571	PtrMemberAccess	op -> type		3543502	0					
ANR	3543572	Identifier	op		3543502	0					
ANR	3543573	Identifier	type		3543502	1					
ANR	3543574	Identifier	OT_MEMORY		3543502	1					
ANR	3543575	ExpressionStatement	op -> offset_sign = 1	4636:2:115623:115642	3543502	5	True				
ANR	3543576	AssignmentExpression	op -> offset_sign = 1		3543502	0		=			
ANR	3543577	PtrMemberAccess	op -> offset_sign		3543502	0					
ANR	3543578	Identifier	op		3543502	0					
ANR	3543579	Identifier	offset_sign		3543502	1					
ANR	3543580	PrimaryExpression	1		3543502	1					
ANR	3543581	IdentifierDeclStatement	"char * p = strchr ( str + nextpos , '-' ) ;"	4637:2:115646:115683	3543502	6	True				
ANR	3543582	IdentifierDecl	"* p = strchr ( str + nextpos , '-' )"		3543502	0					
ANR	3543583	IdentifierDeclType	char *		3543502	0					
ANR	3543584	Identifier	p		3543502	1					
ANR	3543585	AssignmentExpression	"* p = strchr ( str + nextpos , '-' )"		3543502	2		=			
ANR	3543586	Identifier	p		3543502	0					
ANR	3543587	CallExpression	"strchr ( str + nextpos , '-' )"		3543502	1					
ANR	3543588	Callee	strchr		3543502	0					
ANR	3543589	Identifier	strchr		3543502	0					
ANR	3543590	ArgumentList	str + nextpos		3543502	1					
ANR	3543591	Argument	str + nextpos		3543502	0					
ANR	3543592	AdditiveExpression	str + nextpos		3543502	0		+			
ANR	3543593	Identifier	str		3543502	0					
ANR	3543594	Identifier	nextpos		3543502	1					
ANR	3543595	Argument	'-'		3543502	1					
ANR	3543596	PrimaryExpression	'-'		3543502	0					
ANR	3543597	IfStatement	if ( p )		3543502	7					
ANR	3543598	Condition	p	4638:6:115691:115691	3543502	0	True				
ANR	3543599	Identifier	p		3543502	0					
ANR	3543600	CompoundStatement		14:9:367:367	3543502	1					
ANR	3543601	ExpressionStatement	op -> offset_sign = - 1	4639:3:115699:115719	3543502	0	True				
ANR	3543602	AssignmentExpression	op -> offset_sign = - 1		3543502	0		=			
ANR	3543603	PtrMemberAccess	op -> offset_sign		3543502	0					
ANR	3543604	Identifier	op		3543502	0					
ANR	3543605	Identifier	offset_sign		3543502	1					
ANR	3543606	UnaryOperationExpression	- 1		3543502	1					
ANR	3543607	UnaryOperator	-		3543502	0					
ANR	3543608	PrimaryExpression	1		3543502	1					
ANR	3543609	ExpressionStatement	nextpos ++	4640:3:115724:115734	3543502	1	True				
ANR	3543610	PostIncDecOperationExpression	nextpos ++		3543502	0					
ANR	3543611	Identifier	nextpos		3543502	0					
ANR	3543612	IncDec	++		3543502	1					
ANR	3543613	ExpressionStatement	"op -> scale [ reg_index ] = getnum ( a , str + nextpos )"	4642:2:115742:115790	3543502	8	True				
ANR	3543614	AssignmentExpression	"op -> scale [ reg_index ] = getnum ( a , str + nextpos )"		3543502	0		=			
ANR	3543615	ArrayIndexing	op -> scale [ reg_index ]		3543502	0					
ANR	3543616	PtrMemberAccess	op -> scale		3543502	0					
ANR	3543617	Identifier	op		3543502	0					
ANR	3543618	Identifier	scale		3543502	1					
ANR	3543619	Identifier	reg_index		3543502	1					
ANR	3543620	CallExpression	"getnum ( a , str + nextpos )"		3543502	1					
ANR	3543621	Callee	getnum		3543502	0					
ANR	3543622	Identifier	getnum		3543502	0					
ANR	3543623	ArgumentList	a		3543502	1					
ANR	3543624	Argument	a		3543502	0					
ANR	3543625	Identifier	a		3543502	0					
ANR	3543626	Argument	str + nextpos		3543502	1					
ANR	3543627	AdditiveExpression	str + nextpos		3543502	0		+			
ANR	3543628	Identifier	str		3543502	0					
ANR	3543629	Identifier	nextpos		3543502	1					
ANR	3543630	ExpressionStatement	op -> offset = op -> scale [ reg_index ]	4643:2:115794:115827	3543502	9	True				
ANR	3543631	AssignmentExpression	op -> offset = op -> scale [ reg_index ]		3543502	0		=			
ANR	3543632	PtrMemberAccess	op -> offset		3543502	0					
ANR	3543633	Identifier	op		3543502	0					
ANR	3543634	Identifier	offset		3543502	1					
ANR	3543635	ArrayIndexing	op -> scale [ reg_index ]		3543502	1					
ANR	3543636	PtrMemberAccess	op -> scale		3543502	0					
ANR	3543637	Identifier	op		3543502	0					
ANR	3543638	Identifier	scale		3543502	1					
ANR	3543639	Identifier	reg_index		3543502	1					
ANR	3543640	ReturnType	static void		3543502	1					
ANR	3543641	Identifier	parse_segment_offset		3543502	2					
ANR	3543642	ParameterList	"RAsm * a , const char * str , size_t * pos , Operand * op , int reg_index"		3543502	3					
ANR	3543643	Parameter	RAsm * a	4624:33:115257:115263	3543502	0	True				
ANR	3543644	ParameterType	RAsm *		3543502	0					
ANR	3543645	Identifier	a		3543502	1					
ANR	3543646	Parameter	const char * str	4624:42:115266:115280	3543502	1	True				
ANR	3543647	ParameterType	const char *		3543502	0					
ANR	3543648	Identifier	str		3543502	1					
ANR	3543649	Parameter	size_t * pos	4624:59:115283:115293	3543502	2	True				
ANR	3543650	ParameterType	size_t *		3543502	0					
ANR	3543651	Identifier	pos		3543502	1					
ANR	3543652	Parameter	Operand * op	4625:2:115298:115308	3543502	3	True				
ANR	3543653	ParameterType	Operand *		3543502	0					
ANR	3543654	Identifier	op		3543502	1					
ANR	3543655	Parameter	int reg_index	4625:15:115311:115323	3543502	4	True				
ANR	3543656	ParameterType	int		3543502	0					
ANR	3543657	Identifier	reg_index		3543502	1					
ANR	3543658	CFGEntryNode	ENTRY		3543502		True				
ANR	3543659	CFGExitNode	EXIT		3543502		True				
ANR	3543660	Symbol	a		3543502						
ANR	3543661	Symbol	op		3543502						
ANR	3543662	Symbol	c		3543502						
ANR	3543663	Symbol	* op -> regs		3543502						
ANR	3543664	Symbol	* op		3543502						
ANR	3543665	Symbol	op -> regs		3543502						
ANR	3543666	Symbol	* op -> scale		3543502						
ANR	3543667	Symbol	op -> type		3543502						
ANR	3543668	Symbol	strchr		3543502						
ANR	3543669	Symbol	* reg_index		3543502						
ANR	3543670	Symbol	reg_index		3543502						
ANR	3543671	Symbol	* * op		3543502						
ANR	3543672	Symbol	str		3543502						
ANR	3543673	Symbol	p		3543502						
ANR	3543674	Symbol	op -> offset		3543502						
ANR	3543675	Symbol	op -> scale		3543502						
ANR	3543676	Symbol	pos		3543502						
ANR	3543677	Symbol	getnum		3543502						
ANR	3543678	Symbol	nextpos		3543502						
ANR	3543679	Symbol	op -> offset_sign		3543502						
ANR	3543680	Symbol	OT_MEMORY		3543502						
ANR	3543681	Symbol	* pos		3543502						
ANR	3543682	Symbol	op -> reg		3543502						
ANR	3543683	Function	parseOperand	4647:0:115851:121772							
ANR	3543684	FunctionDef	"parseOperand (RAsm * a , const char * str , Operand * op , bool isrepop)"		3543683	0					
ANR	3543685	CompoundStatement		4647:77:115928:121772	3543683	0					
ANR	3543686	IdentifierDeclStatement	"size_t pos , nextpos = 0 ;"	4648:1:115931:115954	3543683	0	True				
ANR	3543687	IdentifierDecl	pos		3543683	0					
ANR	3543688	IdentifierDeclType	size_t		3543683	0					
ANR	3543689	Identifier	pos		3543683	1					
ANR	3543690	IdentifierDecl	nextpos = 0		3543683	1					
ANR	3543691	IdentifierDeclType	size_t		3543683	0					
ANR	3543692	Identifier	nextpos		3543683	1					
ANR	3543693	AssignmentExpression	nextpos = 0		3543683	2		=			
ANR	3543694	Identifier	nextpos		3543683	0					
ANR	3543695	PrimaryExpression	0		3543683	1					
ANR	3543696	IdentifierDeclStatement	x86newTokenType last_type ;	4649:1:115957:115982	3543683	1	True				
ANR	3543697	IdentifierDecl	last_type		3543683	0					
ANR	3543698	IdentifierDeclType	x86newTokenType		3543683	0					
ANR	3543699	Identifier	last_type		3543683	1					
ANR	3543700	IdentifierDeclStatement	int size_token = 1 ;	4650:1:115985:116003	3543683	2	True				
ANR	3543701	IdentifierDecl	size_token = 1		3543683	0					
ANR	3543702	IdentifierDeclType	int		3543683	0					
ANR	3543703	Identifier	size_token		3543683	1					
ANR	3543704	AssignmentExpression	size_token = 1		3543683	2		=			
ANR	3543705	Identifier	size_token		3543683	0					
ANR	3543706	PrimaryExpression	1		3543683	1					
ANR	3543707	IdentifierDeclStatement	bool explicit_size = false ;	4651:1:116006:116032	3543683	3	True				
ANR	3543708	IdentifierDecl	explicit_size = false		3543683	0					
ANR	3543709	IdentifierDeclType	bool		3543683	0					
ANR	3543710	Identifier	explicit_size		3543683	1					
ANR	3543711	AssignmentExpression	explicit_size = false		3543683	2		=			
ANR	3543712	Identifier	false		3543683	0					
ANR	3543713	Identifier	false		3543683	1					
ANR	3543714	IdentifierDeclStatement	int reg_index = 0 ;	4652:1:116035:116052	3543683	4	True				
ANR	3543715	IdentifierDecl	reg_index = 0		3543683	0					
ANR	3543716	IdentifierDeclType	int		3543683	0					
ANR	3543717	Identifier	reg_index		3543683	1					
ANR	3543718	AssignmentExpression	reg_index = 0		3543683	2		=			
ANR	3543719	Identifier	reg_index		3543683	0					
ANR	3543720	PrimaryExpression	0		3543683	1					
ANR	3543721	ExpressionStatement	op -> type = 0	4654:1:116070:116082	3543683	5	True				
ANR	3543722	AssignmentExpression	op -> type = 0		3543683	0		=			
ANR	3543723	PtrMemberAccess	op -> type		3543683	0					
ANR	3543724	Identifier	op		3543683	0					
ANR	3543725	Identifier	type		3543683	1					
ANR	3543726	PrimaryExpression	0		3543683	1					
ANR	3543727	WhileStatement	while ( size_token )		3543683	6					
ANR	3543728	Condition	size_token	4656:8:116137:116146	3543683	0	True				
ANR	3543729	Identifier	size_token		3543683	0					
ANR	3543730	CompoundStatement		10:20:220:220	3543683	1					
ANR	3543731	ExpressionStatement	pos = nextpos	4657:2:116153:116166	3543683	0	True				
ANR	3543732	AssignmentExpression	pos = nextpos		3543683	0		=			
ANR	3543733	Identifier	pos		3543683	0					
ANR	3543734	Identifier	nextpos		3543683	1					
ANR	3543735	ExpressionStatement	"last_type = getToken ( str , & pos , & nextpos )"	4658:2:116170:116212	3543683	1	True				
ANR	3543736	AssignmentExpression	"last_type = getToken ( str , & pos , & nextpos )"		3543683	0		=			
ANR	3543737	Identifier	last_type		3543683	0					
ANR	3543738	CallExpression	"getToken ( str , & pos , & nextpos )"		3543683	1					
ANR	3543739	Callee	getToken		3543683	0					
ANR	3543740	Identifier	getToken		3543683	0					
ANR	3543741	ArgumentList	str		3543683	1					
ANR	3543742	Argument	str		3543683	0					
ANR	3543743	Identifier	str		3543683	0					
ANR	3543744	Argument	& pos		3543683	1					
ANR	3543745	UnaryOperationExpression	& pos		3543683	0					
ANR	3543746	UnaryOperator	&		3543683	0					
ANR	3543747	Identifier	pos		3543683	1					
ANR	3543748	Argument	& nextpos		3543683	2					
ANR	3543749	UnaryOperationExpression	& nextpos		3543683	0					
ANR	3543750	UnaryOperator	&		3543683	0					
ANR	3543751	Identifier	nextpos		3543683	1					
ANR	3543752	IfStatement	"if ( ! r_str_ncasecmp ( str + pos , ""ptr"" , 3 ) )"		3543683	2					
ANR	3543753	Condition	"! r_str_ncasecmp ( str + pos , ""ptr"" , 3 )"	4661:6:116261:116297	3543683	0	True				
ANR	3543754	UnaryOperationExpression	"! r_str_ncasecmp ( str + pos , ""ptr"" , 3 )"		3543683	0					
ANR	3543755	UnaryOperator	!		3543683	0					
ANR	3543756	CallExpression	"r_str_ncasecmp ( str + pos , ""ptr"" , 3 )"		3543683	1					
ANR	3543757	Callee	r_str_ncasecmp		3543683	0					
ANR	3543758	Identifier	r_str_ncasecmp		3543683	0					
ANR	3543759	ArgumentList	str + pos		3543683	1					
ANR	3543760	Argument	str + pos		3543683	0					
ANR	3543761	AdditiveExpression	str + pos		3543683	0		+			
ANR	3543762	Identifier	str		3543683	0					
ANR	3543763	Identifier	pos		3543683	1					
ANR	3543764	Argument	"""ptr"""		3543683	1					
ANR	3543765	PrimaryExpression	"""ptr"""		3543683	0					
ANR	3543766	Argument	3		3543683	2					
ANR	3543767	PrimaryExpression	3		3543683	0					
ANR	3543768	CompoundStatement		15:45:371:371	3543683	1					
ANR	3543769	ContinueStatement	continue ;	4662:3:116305:116313	3543683	0	True				
ANR	3543770	ElseStatement	else		3543683	0					
ANR	3543771	IfStatement	"if ( ! r_str_ncasecmp ( str + pos , ""byte"" , 4 ) )"		3543683	0					
ANR	3543772	Condition	"! r_str_ncasecmp ( str + pos , ""byte"" , 4 )"	4663:13:116328:116365	3543683	0	True				
ANR	3543773	UnaryOperationExpression	"! r_str_ncasecmp ( str + pos , ""byte"" , 4 )"		3543683	0					
ANR	3543774	UnaryOperator	!		3543683	0					
ANR	3543775	CallExpression	"r_str_ncasecmp ( str + pos , ""byte"" , 4 )"		3543683	1					
ANR	3543776	Callee	r_str_ncasecmp		3543683	0					
ANR	3543777	Identifier	r_str_ncasecmp		3543683	0					
ANR	3543778	ArgumentList	str + pos		3543683	1					
ANR	3543779	Argument	str + pos		3543683	0					
ANR	3543780	AdditiveExpression	str + pos		3543683	0		+			
ANR	3543781	Identifier	str		3543683	0					
ANR	3543782	Identifier	pos		3543683	1					
ANR	3543783	Argument	"""byte"""		3543683	1					
ANR	3543784	PrimaryExpression	"""byte"""		3543683	0					
ANR	3543785	Argument	4		3543683	2					
ANR	3543786	PrimaryExpression	4		3543683	0					
ANR	3543787	CompoundStatement		17:53:439:439	3543683	1					
ANR	3543788	ExpressionStatement	op -> type |= OT_MEMORY | OT_BYTE	4664:3:116373:116404	3543683	0	True				
ANR	3543789	AssignmentExpression	op -> type |= OT_MEMORY | OT_BYTE		3543683	0		|=			
ANR	3543790	PtrMemberAccess	op -> type		3543683	0					
ANR	3543791	Identifier	op		3543683	0					
ANR	3543792	Identifier	type		3543683	1					
ANR	3543793	InclusiveOrExpression	OT_MEMORY | OT_BYTE		3543683	1		|			
ANR	3543794	Identifier	OT_MEMORY		3543683	0					
ANR	3543795	Identifier	OT_BYTE		3543683	1					
ANR	3543796	ExpressionStatement	op -> dest_size = OT_BYTE	4665:3:116409:116432	3543683	1	True				
ANR	3543797	AssignmentExpression	op -> dest_size = OT_BYTE		3543683	0		=			
ANR	3543798	PtrMemberAccess	op -> dest_size		3543683	0					
ANR	3543799	Identifier	op		3543683	0					
ANR	3543800	Identifier	dest_size		3543683	1					
ANR	3543801	Identifier	OT_BYTE		3543683	1					
ANR	3543802	ExpressionStatement	explicit_size = true	4666:3:116437:116457	3543683	2	True				
ANR	3543803	AssignmentExpression	explicit_size = true		3543683	0		=			
ANR	3543804	Identifier	explicit_size		3543683	0					
ANR	3543805	Identifier	true		3543683	1					
ANR	3543806	ElseStatement	else		3543683	0					
ANR	3543807	IfStatement	"if ( ! r_str_ncasecmp ( str + pos , ""word"" , 4 ) )"		3543683	0					
ANR	3543808	Condition	"! r_str_ncasecmp ( str + pos , ""word"" , 4 )"	4667:13:116472:116509	3543683	0	True				
ANR	3543809	UnaryOperationExpression	"! r_str_ncasecmp ( str + pos , ""word"" , 4 )"		3543683	0					
ANR	3543810	UnaryOperator	!		3543683	0					
ANR	3543811	CallExpression	"r_str_ncasecmp ( str + pos , ""word"" , 4 )"		3543683	1					
ANR	3543812	Callee	r_str_ncasecmp		3543683	0					
ANR	3543813	Identifier	r_str_ncasecmp		3543683	0					
ANR	3543814	ArgumentList	str + pos		3543683	1					
ANR	3543815	Argument	str + pos		3543683	0					
ANR	3543816	AdditiveExpression	str + pos		3543683	0		+			
ANR	3543817	Identifier	str		3543683	0					
ANR	3543818	Identifier	pos		3543683	1					
ANR	3543819	Argument	"""word"""		3543683	1					
ANR	3543820	PrimaryExpression	"""word"""		3543683	0					
ANR	3543821	Argument	4		3543683	2					
ANR	3543822	PrimaryExpression	4		3543683	0					
ANR	3543823	CompoundStatement		21:53:583:583	3543683	1					
ANR	3543824	ExpressionStatement	op -> type |= OT_MEMORY | OT_WORD	4668:3:116517:116548	3543683	0	True				
ANR	3543825	AssignmentExpression	op -> type |= OT_MEMORY | OT_WORD		3543683	0		|=			
ANR	3543826	PtrMemberAccess	op -> type		3543683	0					
ANR	3543827	Identifier	op		3543683	0					
ANR	3543828	Identifier	type		3543683	1					
ANR	3543829	InclusiveOrExpression	OT_MEMORY | OT_WORD		3543683	1		|			
ANR	3543830	Identifier	OT_MEMORY		3543683	0					
ANR	3543831	Identifier	OT_WORD		3543683	1					
ANR	3543832	ExpressionStatement	op -> dest_size = OT_WORD	4669:3:116553:116576	3543683	1	True				
ANR	3543833	AssignmentExpression	op -> dest_size = OT_WORD		3543683	0		=			
ANR	3543834	PtrMemberAccess	op -> dest_size		3543683	0					
ANR	3543835	Identifier	op		3543683	0					
ANR	3543836	Identifier	dest_size		3543683	1					
ANR	3543837	Identifier	OT_WORD		3543683	1					
ANR	3543838	ExpressionStatement	explicit_size = true	4670:3:116581:116601	3543683	2	True				
ANR	3543839	AssignmentExpression	explicit_size = true		3543683	0		=			
ANR	3543840	Identifier	explicit_size		3543683	0					
ANR	3543841	Identifier	true		3543683	1					
ANR	3543842	ElseStatement	else		3543683	0					
ANR	3543843	IfStatement	"if ( ! r_str_ncasecmp ( str + pos , ""dword"" , 5 ) )"		3543683	0					
ANR	3543844	Condition	"! r_str_ncasecmp ( str + pos , ""dword"" , 5 )"	4671:13:116616:116654	3543683	0	True				
ANR	3543845	UnaryOperationExpression	"! r_str_ncasecmp ( str + pos , ""dword"" , 5 )"		3543683	0					
ANR	3543846	UnaryOperator	!		3543683	0					
ANR	3543847	CallExpression	"r_str_ncasecmp ( str + pos , ""dword"" , 5 )"		3543683	1					
ANR	3543848	Callee	r_str_ncasecmp		3543683	0					
ANR	3543849	Identifier	r_str_ncasecmp		3543683	0					
ANR	3543850	ArgumentList	str + pos		3543683	1					
ANR	3543851	Argument	str + pos		3543683	0					
ANR	3543852	AdditiveExpression	str + pos		3543683	0		+			
ANR	3543853	Identifier	str		3543683	0					
ANR	3543854	Identifier	pos		3543683	1					
ANR	3543855	Argument	"""dword"""		3543683	1					
ANR	3543856	PrimaryExpression	"""dword"""		3543683	0					
ANR	3543857	Argument	5		3543683	2					
ANR	3543858	PrimaryExpression	5		3543683	0					
ANR	3543859	CompoundStatement		25:54:728:728	3543683	1					
ANR	3543860	ExpressionStatement	op -> type |= OT_MEMORY | OT_DWORD	4672:3:116662:116694	3543683	0	True				
ANR	3543861	AssignmentExpression	op -> type |= OT_MEMORY | OT_DWORD		3543683	0		|=			
ANR	3543862	PtrMemberAccess	op -> type		3543683	0					
ANR	3543863	Identifier	op		3543683	0					
ANR	3543864	Identifier	type		3543683	1					
ANR	3543865	InclusiveOrExpression	OT_MEMORY | OT_DWORD		3543683	1		|			
ANR	3543866	Identifier	OT_MEMORY		3543683	0					
ANR	3543867	Identifier	OT_DWORD		3543683	1					
ANR	3543868	ExpressionStatement	op -> dest_size = OT_DWORD	4673:3:116699:116723	3543683	1	True				
ANR	3543869	AssignmentExpression	op -> dest_size = OT_DWORD		3543683	0		=			
ANR	3543870	PtrMemberAccess	op -> dest_size		3543683	0					
ANR	3543871	Identifier	op		3543683	0					
ANR	3543872	Identifier	dest_size		3543683	1					
ANR	3543873	Identifier	OT_DWORD		3543683	1					
ANR	3543874	ExpressionStatement	explicit_size = true	4674:3:116728:116748	3543683	2	True				
ANR	3543875	AssignmentExpression	explicit_size = true		3543683	0		=			
ANR	3543876	Identifier	explicit_size		3543683	0					
ANR	3543877	Identifier	true		3543683	1					
ANR	3543878	ElseStatement	else		3543683	0					
ANR	3543879	IfStatement	"if ( ! r_str_ncasecmp ( str + pos , ""qword"" , 5 ) )"		3543683	0					
ANR	3543880	Condition	"! r_str_ncasecmp ( str + pos , ""qword"" , 5 )"	4675:13:116763:116801	3543683	0	True				
ANR	3543881	UnaryOperationExpression	"! r_str_ncasecmp ( str + pos , ""qword"" , 5 )"		3543683	0					
ANR	3543882	UnaryOperator	!		3543683	0					
ANR	3543883	CallExpression	"r_str_ncasecmp ( str + pos , ""qword"" , 5 )"		3543683	1					
ANR	3543884	Callee	r_str_ncasecmp		3543683	0					
ANR	3543885	Identifier	r_str_ncasecmp		3543683	0					
ANR	3543886	ArgumentList	str + pos		3543683	1					
ANR	3543887	Argument	str + pos		3543683	0					
ANR	3543888	AdditiveExpression	str + pos		3543683	0		+			
ANR	3543889	Identifier	str		3543683	0					
ANR	3543890	Identifier	pos		3543683	1					
ANR	3543891	Argument	"""qword"""		3543683	1					
ANR	3543892	PrimaryExpression	"""qword"""		3543683	0					
ANR	3543893	Argument	5		3543683	2					
ANR	3543894	PrimaryExpression	5		3543683	0					
ANR	3543895	CompoundStatement		29:54:875:875	3543683	1					
ANR	3543896	ExpressionStatement	op -> type |= OT_MEMORY | OT_QWORD	4676:3:116809:116841	3543683	0	True				
ANR	3543897	AssignmentExpression	op -> type |= OT_MEMORY | OT_QWORD		3543683	0		|=			
ANR	3543898	PtrMemberAccess	op -> type		3543683	0					
ANR	3543899	Identifier	op		3543683	0					
ANR	3543900	Identifier	type		3543683	1					
ANR	3543901	InclusiveOrExpression	OT_MEMORY | OT_QWORD		3543683	1		|			
ANR	3543902	Identifier	OT_MEMORY		3543683	0					
ANR	3543903	Identifier	OT_QWORD		3543683	1					
ANR	3543904	ExpressionStatement	op -> dest_size = OT_QWORD	4677:3:116846:116870	3543683	1	True				
ANR	3543905	AssignmentExpression	op -> dest_size = OT_QWORD		3543683	0		=			
ANR	3543906	PtrMemberAccess	op -> dest_size		3543683	0					
ANR	3543907	Identifier	op		3543683	0					
ANR	3543908	Identifier	dest_size		3543683	1					
ANR	3543909	Identifier	OT_QWORD		3543683	1					
ANR	3543910	ExpressionStatement	explicit_size = true	4678:3:116875:116895	3543683	2	True				
ANR	3543911	AssignmentExpression	explicit_size = true		3543683	0		=			
ANR	3543912	Identifier	explicit_size		3543683	0					
ANR	3543913	Identifier	true		3543683	1					
ANR	3543914	ElseStatement	else		3543683	0					
ANR	3543915	IfStatement	"if ( ! r_str_ncasecmp ( str + pos , ""oword"" , 5 ) )"		3543683	0					
ANR	3543916	Condition	"! r_str_ncasecmp ( str + pos , ""oword"" , 5 )"	4679:13:116910:116948	3543683	0	True				
ANR	3543917	UnaryOperationExpression	"! r_str_ncasecmp ( str + pos , ""oword"" , 5 )"		3543683	0					
ANR	3543918	UnaryOperator	!		3543683	0					
ANR	3543919	CallExpression	"r_str_ncasecmp ( str + pos , ""oword"" , 5 )"		3543683	1					
ANR	3543920	Callee	r_str_ncasecmp		3543683	0					
ANR	3543921	Identifier	r_str_ncasecmp		3543683	0					
ANR	3543922	ArgumentList	str + pos		3543683	1					
ANR	3543923	Argument	str + pos		3543683	0					
ANR	3543924	AdditiveExpression	str + pos		3543683	0		+			
ANR	3543925	Identifier	str		3543683	0					
ANR	3543926	Identifier	pos		3543683	1					
ANR	3543927	Argument	"""oword"""		3543683	1					
ANR	3543928	PrimaryExpression	"""oword"""		3543683	0					
ANR	3543929	Argument	5		3543683	2					
ANR	3543930	PrimaryExpression	5		3543683	0					
ANR	3543931	CompoundStatement		33:54:1022:1022	3543683	1					
ANR	3543932	ExpressionStatement	op -> type |= OT_MEMORY | OT_OWORD	4680:3:116956:116988	3543683	0	True				
ANR	3543933	AssignmentExpression	op -> type |= OT_MEMORY | OT_OWORD		3543683	0		|=			
ANR	3543934	PtrMemberAccess	op -> type		3543683	0					
ANR	3543935	Identifier	op		3543683	0					
ANR	3543936	Identifier	type		3543683	1					
ANR	3543937	InclusiveOrExpression	OT_MEMORY | OT_OWORD		3543683	1		|			
ANR	3543938	Identifier	OT_MEMORY		3543683	0					
ANR	3543939	Identifier	OT_OWORD		3543683	1					
ANR	3543940	ExpressionStatement	op -> dest_size = OT_OWORD	4681:3:116993:117017	3543683	1	True				
ANR	3543941	AssignmentExpression	op -> dest_size = OT_OWORD		3543683	0		=			
ANR	3543942	PtrMemberAccess	op -> dest_size		3543683	0					
ANR	3543943	Identifier	op		3543683	0					
ANR	3543944	Identifier	dest_size		3543683	1					
ANR	3543945	Identifier	OT_OWORD		3543683	1					
ANR	3543946	ExpressionStatement	explicit_size = true	4682:3:117022:117042	3543683	2	True				
ANR	3543947	AssignmentExpression	explicit_size = true		3543683	0		=			
ANR	3543948	Identifier	explicit_size		3543683	0					
ANR	3543949	Identifier	true		3543683	1					
ANR	3543950	ElseStatement	else		3543683	0					
ANR	3543951	IfStatement	"if ( ! r_str_ncasecmp ( str + pos , ""tbyte"" , 5 ) )"		3543683	0					
ANR	3543952	Condition	"! r_str_ncasecmp ( str + pos , ""tbyte"" , 5 )"	4683:13:117057:117095	3543683	0	True				
ANR	3543953	UnaryOperationExpression	"! r_str_ncasecmp ( str + pos , ""tbyte"" , 5 )"		3543683	0					
ANR	3543954	UnaryOperator	!		3543683	0					
ANR	3543955	CallExpression	"r_str_ncasecmp ( str + pos , ""tbyte"" , 5 )"		3543683	1					
ANR	3543956	Callee	r_str_ncasecmp		3543683	0					
ANR	3543957	Identifier	r_str_ncasecmp		3543683	0					
ANR	3543958	ArgumentList	str + pos		3543683	1					
ANR	3543959	Argument	str + pos		3543683	0					
ANR	3543960	AdditiveExpression	str + pos		3543683	0		+			
ANR	3543961	Identifier	str		3543683	0					
ANR	3543962	Identifier	pos		3543683	1					
ANR	3543963	Argument	"""tbyte"""		3543683	1					
ANR	3543964	PrimaryExpression	"""tbyte"""		3543683	0					
ANR	3543965	Argument	5		3543683	2					
ANR	3543966	PrimaryExpression	5		3543683	0					
ANR	3543967	CompoundStatement		37:54:1169:1169	3543683	1					
ANR	3543968	ExpressionStatement	op -> type |= OT_MEMORY | OT_TBYTE	4684:3:117103:117135	3543683	0	True				
ANR	3543969	AssignmentExpression	op -> type |= OT_MEMORY | OT_TBYTE		3543683	0		|=			
ANR	3543970	PtrMemberAccess	op -> type		3543683	0					
ANR	3543971	Identifier	op		3543683	0					
ANR	3543972	Identifier	type		3543683	1					
ANR	3543973	InclusiveOrExpression	OT_MEMORY | OT_TBYTE		3543683	1		|			
ANR	3543974	Identifier	OT_MEMORY		3543683	0					
ANR	3543975	Identifier	OT_TBYTE		3543683	1					
ANR	3543976	ExpressionStatement	op -> dest_size = OT_TBYTE	4685:3:117140:117164	3543683	1	True				
ANR	3543977	AssignmentExpression	op -> dest_size = OT_TBYTE		3543683	0		=			
ANR	3543978	PtrMemberAccess	op -> dest_size		3543683	0					
ANR	3543979	Identifier	op		3543683	0					
ANR	3543980	Identifier	dest_size		3543683	1					
ANR	3543981	Identifier	OT_TBYTE		3543683	1					
ANR	3543982	ExpressionStatement	explicit_size = true	4686:3:117169:117189	3543683	2	True				
ANR	3543983	AssignmentExpression	explicit_size = true		3543683	0		=			
ANR	3543984	Identifier	explicit_size		3543683	0					
ANR	3543985	Identifier	true		3543683	1					
ANR	3543986	ElseStatement	else		3543683	0					
ANR	3543987	CompoundStatement		41:9:1271:1271	3543683	0					
ANR	3543988	ExpressionStatement	size_token = 0	4688:3:117248:117262	3543683	0	True				
ANR	3543989	AssignmentExpression	size_token = 0		3543683	0		=			
ANR	3543990	Identifier	size_token		3543683	0					
ANR	3543991	PrimaryExpression	0		3543683	1					
ANR	3543992	IfStatement	if ( str [ pos ] == '[' )		3543683	7					
ANR	3543993	Condition	str [ pos ] == '['	4693:5:117321:117335	3543683	0	True				
ANR	3543994	EqualityExpression	str [ pos ] == '['		3543683	0		==			
ANR	3543995	ArrayIndexing	str [ pos ]		3543683	0					
ANR	3543996	Identifier	str		3543683	0					
ANR	3543997	Identifier	pos		3543683	1					
ANR	3543998	PrimaryExpression	'['		3543683	1					
ANR	3543999	CompoundStatement		59:2:1742:1763	3543683	1					
ANR	3544000	IfStatement	if ( ! op -> type )		3543683	0					
ANR	3544001	Condition	! op -> type	4695:6:117392:117400	3543683	0	True				
ANR	3544002	UnaryOperationExpression	! op -> type		3543683	0					
ANR	3544003	UnaryOperator	!		3543683	0					
ANR	3544004	PtrMemberAccess	op -> type		3543683	1					
ANR	3544005	Identifier	op		3543683	0					
ANR	3544006	Identifier	type		3543683	1					
ANR	3544007	CompoundStatement		49:17:1474:1474	3543683	1					
ANR	3544008	ExpressionStatement	op -> type = OT_MEMORY	4696:3:117408:117428	3543683	0	True				
ANR	3544009	AssignmentExpression	op -> type = OT_MEMORY		3543683	0		=			
ANR	3544010	PtrMemberAccess	op -> type		3543683	0					
ANR	3544011	Identifier	op		3543683	0					
ANR	3544012	Identifier	type		3543683	1					
ANR	3544013	Identifier	OT_MEMORY		3543683	1					
ANR	3544014	ExpressionStatement	op -> offset = op -> scale [ 0 ] = op -> scale [ 1 ] = 0	4701:2:117572:117616	3543683	1	True				
ANR	3544015	AssignmentExpression	op -> offset = op -> scale [ 0 ] = op -> scale [ 1 ] = 0		3543683	0		=			
ANR	3544016	PtrMemberAccess	op -> offset		3543683	0					
ANR	3544017	Identifier	op		3543683	0					
ANR	3544018	Identifier	offset		3543683	1					
ANR	3544019	AssignmentExpression	op -> scale [ 0 ] = op -> scale [ 1 ] = 0		3543683	1		=			
ANR	3544020	ArrayIndexing	op -> scale [ 0 ]		3543683	0					
ANR	3544021	PtrMemberAccess	op -> scale		3543683	0					
ANR	3544022	Identifier	op		3543683	0					
ANR	3544023	Identifier	scale		3543683	1					
ANR	3544024	PrimaryExpression	0		3543683	1					
ANR	3544025	AssignmentExpression	op -> scale [ 1 ] = 0		3543683	1		=			
ANR	3544026	ArrayIndexing	op -> scale [ 1 ]		3543683	0					
ANR	3544027	PtrMemberAccess	op -> scale		3543683	0					
ANR	3544028	Identifier	op		3543683	0					
ANR	3544029	Identifier	scale		3543683	1					
ANR	3544030	PrimaryExpression	1		3543683	1					
ANR	3544031	PrimaryExpression	0		3543683	1					
ANR	3544032	IdentifierDeclStatement	ut64 temp = 1 ;	4703:2:117621:117634	3543683	2	True				
ANR	3544033	IdentifierDecl	temp = 1		3543683	0					
ANR	3544034	IdentifierDeclType	ut64		3543683	0					
ANR	3544035	Identifier	temp		3543683	1					
ANR	3544036	AssignmentExpression	temp = 1		3543683	2		=			
ANR	3544037	Identifier	temp		3543683	0					
ANR	3544038	PrimaryExpression	1		3543683	1					
ANR	3544039	IdentifierDeclStatement	Register reg = X86R_UNDEFINED ;	4704:2:117638:117667	3543683	3	True				
ANR	3544040	IdentifierDecl	reg = X86R_UNDEFINED		3543683	0					
ANR	3544041	IdentifierDeclType	Register		3543683	0					
ANR	3544042	Identifier	reg		3543683	1					
ANR	3544043	AssignmentExpression	reg = X86R_UNDEFINED		3543683	2		=			
ANR	3544044	Identifier	X86R_UNDEFINED		3543683	0					
ANR	3544045	Identifier	X86R_UNDEFINED		3543683	1					
ANR	3544046	IdentifierDeclStatement	bool first_reg = true ;	4705:2:117671:117692	3543683	4	True				
ANR	3544047	IdentifierDecl	first_reg = true		3543683	0					
ANR	3544048	IdentifierDeclType	bool		3543683	0					
ANR	3544049	Identifier	first_reg		3543683	1					
ANR	3544050	AssignmentExpression	first_reg = true		3543683	2		=			
ANR	3544051	Identifier	true		3543683	0					
ANR	3544052	Identifier	true		3543683	1					
ANR	3544053	WhileStatement	while ( str [ pos ] != ']' )		3543683	5					
ANR	3544054	Condition	str [ pos ] != ']'	4706:9:117703:117717	3543683	0	True				
ANR	3544055	EqualityExpression	str [ pos ] != ']'		3543683	0		!=			
ANR	3544056	ArrayIndexing	str [ pos ]		3543683	0					
ANR	3544057	Identifier	str		3543683	0					
ANR	3544058	Identifier	pos		3543683	1					
ANR	3544059	PrimaryExpression	']'		3543683	1					
ANR	3544060	CompoundStatement		60:26:1791:1791	3543683	1					
ANR	3544061	IfStatement	if ( pos > nextpos )		3543683	0					
ANR	3544062	Condition	pos > nextpos	4707:7:117729:117741	3543683	0	True				
ANR	3544063	RelationalExpression	pos > nextpos		3543683	0		>			
ANR	3544064	Identifier	pos		3543683	0					
ANR	3544065	Identifier	nextpos		3543683	1					
ANR	3544066	CompoundStatement		61:22:1815:1815	3543683	1					
ANR	3544067	BreakStatement	break ;	4709:4:117797:117802	3543683	0	True				
ANR	3544068	ExpressionStatement	pos = nextpos	4711:3:117812:117825	3543683	1	True				
ANR	3544069	AssignmentExpression	pos = nextpos		3543683	0		=			
ANR	3544070	Identifier	pos		3543683	0					
ANR	3544071	Identifier	nextpos		3543683	1					
ANR	3544072	IfStatement	if ( ! str [ pos ] )		3543683	2					
ANR	3544073	Condition	! str [ pos ]	4712:7:117834:117842	3543683	0	True				
ANR	3544074	UnaryOperationExpression	! str [ pos ]		3543683	0					
ANR	3544075	UnaryOperator	!		3543683	0					
ANR	3544076	ArrayIndexing	str [ pos ]		3543683	1					
ANR	3544077	Identifier	str		3543683	0					
ANR	3544078	Identifier	pos		3543683	1					
ANR	3544079	CompoundStatement		66:18:1916:1916	3543683	1					
ANR	3544080	BreakStatement	break ;	4713:4:117851:117856	3543683	0	True				
ANR	3544081	ExpressionStatement	"last_type = getToken ( str , & pos , & nextpos )"	4715:3:117866:117908	3543683	3	True				
ANR	3544082	AssignmentExpression	"last_type = getToken ( str , & pos , & nextpos )"		3543683	0		=			
ANR	3544083	Identifier	last_type		3543683	0					
ANR	3544084	CallExpression	"getToken ( str , & pos , & nextpos )"		3543683	1					
ANR	3544085	Callee	getToken		3543683	0					
ANR	3544086	Identifier	getToken		3543683	0					
ANR	3544087	ArgumentList	str		3543683	1					
ANR	3544088	Argument	str		3543683	0					
ANR	3544089	Identifier	str		3543683	0					
ANR	3544090	Argument	& pos		3543683	1					
ANR	3544091	UnaryOperationExpression	& pos		3543683	0					
ANR	3544092	UnaryOperator	&		3543683	0					
ANR	3544093	Identifier	pos		3543683	1					
ANR	3544094	Argument	& nextpos		3543683	2					
ANR	3544095	UnaryOperationExpression	& nextpos		3543683	0					
ANR	3544096	UnaryOperator	&		3543683	0					
ANR	3544097	Identifier	nextpos		3543683	1					
ANR	3544098	IfStatement	if ( last_type == TT_SPECIAL )		3543683	4					
ANR	3544099	Condition	last_type == TT_SPECIAL	4717:7:117918:117940	3543683	0	True				
ANR	3544100	EqualityExpression	last_type == TT_SPECIAL		3543683	0		==			
ANR	3544101	Identifier	last_type		3543683	0					
ANR	3544102	Identifier	TT_SPECIAL		3543683	1					
ANR	3544103	CompoundStatement		71:32:2014:2014	3543683	1					
ANR	3544104	IfStatement	if ( str [ pos ] == '+' || str [ pos ] == '-' || str [ pos ] == ']' )		3543683	0					
ANR	3544105	Condition	str [ pos ] == '+' || str [ pos ] == '-' || str [ pos ] == ']'	4718:8:117953:118005	3543683	0	True				
ANR	3544106	OrExpression	str [ pos ] == '+' || str [ pos ] == '-' || str [ pos ] == ']'		3543683	0		||			
ANR	3544107	EqualityExpression	str [ pos ] == '+'		3543683	0		==			
ANR	3544108	ArrayIndexing	str [ pos ]		3543683	0					
ANR	3544109	Identifier	str		3543683	0					
ANR	3544110	Identifier	pos		3543683	1					
ANR	3544111	PrimaryExpression	'+'		3543683	1					
ANR	3544112	OrExpression	str [ pos ] == '-' || str [ pos ] == ']'		3543683	1		||			
ANR	3544113	EqualityExpression	str [ pos ] == '-'		3543683	0		==			
ANR	3544114	ArrayIndexing	str [ pos ]		3543683	0					
ANR	3544115	Identifier	str		3543683	0					
ANR	3544116	Identifier	pos		3543683	1					
ANR	3544117	PrimaryExpression	'-'		3543683	1					
ANR	3544118	EqualityExpression	str [ pos ] == ']'		3543683	1		==			
ANR	3544119	ArrayIndexing	str [ pos ]		3543683	0					
ANR	3544120	Identifier	str		3543683	0					
ANR	3544121	Identifier	pos		3543683	1					
ANR	3544122	PrimaryExpression	']'		3543683	1					
ANR	3544123	CompoundStatement		72:63:2079:2079	3543683	1					
ANR	3544124	IfStatement	if ( reg != X86R_UNDEFINED )		3543683	0					
ANR	3544125	Condition	reg != X86R_UNDEFINED	4719:9:118019:118039	3543683	0	True				
ANR	3544126	EqualityExpression	reg != X86R_UNDEFINED		3543683	0		!=			
ANR	3544127	Identifier	reg		3543683	0					
ANR	3544128	Identifier	X86R_UNDEFINED		3543683	1					
ANR	3544129	CompoundStatement		73:32:2113:2113	3543683	1					
ANR	3544130	IfStatement	if ( reg_index < 2 )		3543683	0					
ANR	3544131	Condition	reg_index < 2	4720:10:118054:118066	3543683	0	True				
ANR	3544132	RelationalExpression	reg_index < 2		3543683	0		<			
ANR	3544133	Identifier	reg_index		3543683	0					
ANR	3544134	PrimaryExpression	2		3543683	1					
ANR	3544135	CompoundStatement		74:25:2140:2140	3543683	1					
ANR	3544136	ExpressionStatement	op -> regs [ reg_index ] = reg	4721:7:118078:118103	3543683	0	True				
ANR	3544137	AssignmentExpression	op -> regs [ reg_index ] = reg		3543683	0		=			
ANR	3544138	ArrayIndexing	op -> regs [ reg_index ]		3543683	0					
ANR	3544139	PtrMemberAccess	op -> regs		3543683	0					
ANR	3544140	Identifier	op		3543683	0					
ANR	3544141	Identifier	regs		3543683	1					
ANR	3544142	Identifier	reg_index		3543683	1					
ANR	3544143	Identifier	reg		3543683	1					
ANR	3544144	ExpressionStatement	op -> scale [ reg_index ] = temp	4722:7:118112:118139	3543683	1	True				
ANR	3544145	AssignmentExpression	op -> scale [ reg_index ] = temp		3543683	0		=			
ANR	3544146	ArrayIndexing	op -> scale [ reg_index ]		3543683	0					
ANR	3544147	PtrMemberAccess	op -> scale		3543683	0					
ANR	3544148	Identifier	op		3543683	0					
ANR	3544149	Identifier	scale		3543683	1					
ANR	3544150	Identifier	reg_index		3543683	1					
ANR	3544151	Identifier	temp		3543683	1					
ANR	3544152	ExpressionStatement	++ reg_index	4724:6:118155:118166	3543683	1	True				
ANR	3544153	UnaryExpression	++ reg_index		3543683	0					
ANR	3544154	IncDec	++		3543683	0					
ANR	3544155	Identifier	reg_index		3543683	1					
ANR	3544156	ElseStatement	else		3543683	0					
ANR	3544157	CompoundStatement		79:12:2251:2251	3543683	0					
ANR	3544158	ExpressionStatement	op -> offset += temp	4726:6:118188:118206	3543683	0	True				
ANR	3544159	AssignmentExpression	op -> offset += temp		3543683	0		+=			
ANR	3544160	PtrMemberAccess	op -> offset		3543683	0					
ANR	3544161	Identifier	op		3543683	0					
ANR	3544162	Identifier	offset		3543683	1					
ANR	3544163	Identifier	temp		3543683	1					
ANR	3544164	IfStatement	if ( reg_index < 2 )		3543683	1					
ANR	3544165	Condition	reg_index < 2	4727:10:118218:118230	3543683	0	True				
ANR	3544166	RelationalExpression	reg_index < 2		3543683	0		<			
ANR	3544167	Identifier	reg_index		3543683	0					
ANR	3544168	PrimaryExpression	2		3543683	1					
ANR	3544169	CompoundStatement		81:25:2304:2304	3543683	1					
ANR	3544170	ExpressionStatement	op -> regs [ reg_index ] = X86R_UNDEFINED	4728:7:118242:118278	3543683	0	True				
ANR	3544171	AssignmentExpression	op -> regs [ reg_index ] = X86R_UNDEFINED		3543683	0		=			
ANR	3544172	ArrayIndexing	op -> regs [ reg_index ]		3543683	0					
ANR	3544173	PtrMemberAccess	op -> regs		3543683	0					
ANR	3544174	Identifier	op		3543683	0					
ANR	3544175	Identifier	regs		3543683	1					
ANR	3544176	Identifier	reg_index		3543683	1					
ANR	3544177	Identifier	X86R_UNDEFINED		3543683	1					
ANR	3544178	ExpressionStatement	temp = 1	4731:5:118300:118308	3543683	1	True				
ANR	3544179	AssignmentExpression	temp = 1		3543683	0		=			
ANR	3544180	Identifier	temp		3543683	0					
ANR	3544181	PrimaryExpression	1		3543683	1					
ANR	3544182	ExpressionStatement	reg = X86R_UNDEFINED	4732:5:118315:118335	3543683	2	True				
ANR	3544183	AssignmentExpression	reg = X86R_UNDEFINED		3543683	0		=			
ANR	3544184	Identifier	reg		3543683	0					
ANR	3544185	Identifier	X86R_UNDEFINED		3543683	1					
ANR	3544186	ElseStatement	else		3543683	0					
ANR	3544187	IfStatement	if ( str [ pos ] == '*' )		3543683	0					
ANR	3544188	Condition	str [ pos ] == '*'	4733:15:118352:118366	3543683	0	True				
ANR	3544189	EqualityExpression	str [ pos ] == '*'		3543683	0		==			
ANR	3544190	ArrayIndexing	str [ pos ]		3543683	0					
ANR	3544191	Identifier	str		3543683	0					
ANR	3544192	Identifier	pos		3543683	1					
ANR	3544193	PrimaryExpression	'*'		3543683	1					
ANR	3544194	CompoundStatement		87:32:2440:2440	3543683	1					
ANR	3544195	ElseStatement	else		3543683	0					
ANR	3544196	IfStatement	if ( last_type == TT_WORD )		3543683	0					
ANR	3544197	Condition	last_type == TT_WORD	4740:12:118528:118547	3543683	0	True				
ANR	3544198	EqualityExpression	last_type == TT_WORD		3543683	0		==			
ANR	3544199	Identifier	last_type		3543683	0					
ANR	3544200	Identifier	TT_WORD		3543683	1					
ANR	3544201	CompoundStatement		95:4:2627:2644	3543683	1					
ANR	3544202	IdentifierDeclStatement	ut32 reg_type = 0 ;	4741:4:118556:118573	3543683	0	True				
ANR	3544203	IdentifierDecl	reg_type = 0		3543683	0					
ANR	3544204	IdentifierDeclType	ut32		3543683	0					
ANR	3544205	Identifier	reg_type		3543683	1					
ANR	3544206	AssignmentExpression	reg_type = 0		3543683	2		=			
ANR	3544207	Identifier	reg_type		3543683	0					
ANR	3544208	PrimaryExpression	0		3543683	1					
ANR	3544209	IfStatement	if ( reg != X86R_UNDEFINED )		3543683	1					
ANR	3544210	Condition	reg != X86R_UNDEFINED	4744:8:118619:118639	3543683	0	True				
ANR	3544211	EqualityExpression	reg != X86R_UNDEFINED		3543683	0		!=			
ANR	3544212	Identifier	reg		3543683	0					
ANR	3544213	Identifier	X86R_UNDEFINED		3543683	1					
ANR	3544214	CompoundStatement		98:31:2713:2713	3543683	1					
ANR	3544215	ExpressionStatement	op -> type = 0	4745:5:118649:118661	3543683	0	True				
ANR	3544216	AssignmentExpression	op -> type = 0		3543683	0		=			
ANR	3544217	PtrMemberAccess	op -> type		3543683	0					
ANR	3544218	Identifier	op		3543683	0					
ANR	3544219	Identifier	type		3543683	1					
ANR	3544220	PrimaryExpression	0		3543683	1					
ANR	3544221	ExpressionStatement	nextpos = pos	4749:4:118766:118779	3543683	2	True				
ANR	3544222	AssignmentExpression	nextpos = pos		3543683	0		=			
ANR	3544223	Identifier	nextpos		3543683	0					
ANR	3544224	Identifier	pos		3543683	1					
ANR	3544225	ExpressionStatement	"reg = parseReg ( a , str , & nextpos , & reg_type )"	4750:4:118785:118829	3543683	3	True				
ANR	3544226	AssignmentExpression	"reg = parseReg ( a , str , & nextpos , & reg_type )"		3543683	0		=			
ANR	3544227	Identifier	reg		3543683	0					
ANR	3544228	CallExpression	"parseReg ( a , str , & nextpos , & reg_type )"		3543683	1					
ANR	3544229	Callee	parseReg		3543683	0					
ANR	3544230	Identifier	parseReg		3543683	0					
ANR	3544231	ArgumentList	a		3543683	1					
ANR	3544232	Argument	a		3543683	0					
ANR	3544233	Identifier	a		3543683	0					
ANR	3544234	Argument	str		3543683	1					
ANR	3544235	Identifier	str		3543683	0					
ANR	3544236	Argument	& nextpos		3543683	2					
ANR	3544237	UnaryOperationExpression	& nextpos		3543683	0					
ANR	3544238	UnaryOperator	&		3543683	0					
ANR	3544239	Identifier	nextpos		3543683	1					
ANR	3544240	Argument	& reg_type		3543683	3					
ANR	3544241	UnaryOperationExpression	& reg_type		3543683	0					
ANR	3544242	UnaryOperator	&		3543683	0					
ANR	3544243	Identifier	reg_type		3543683	1					
ANR	3544244	IfStatement	if ( first_reg )		3543683	4					
ANR	3544245	Condition	first_reg	4752:8:118840:118848	3543683	0	True				
ANR	3544246	Identifier	first_reg		3543683	0					
ANR	3544247	CompoundStatement		106:19:2922:2922	3543683	1					
ANR	3544248	ExpressionStatement	op -> extended = false	4753:5:118858:118878	3543683	0	True				
ANR	3544249	AssignmentExpression	op -> extended = false		3543683	0		=			
ANR	3544250	PtrMemberAccess	op -> extended		3543683	0					
ANR	3544251	Identifier	op		3543683	0					
ANR	3544252	Identifier	extended		3543683	1					
ANR	3544253	Identifier	false		3543683	1					
ANR	3544254	IfStatement	if ( reg > 8 )		3543683	1					
ANR	3544255	Condition	reg > 8	4754:9:118889:118895	3543683	0	True				
ANR	3544256	RelationalExpression	reg > 8		3543683	0		>			
ANR	3544257	Identifier	reg		3543683	0					
ANR	3544258	PrimaryExpression	8		3543683	1					
ANR	3544259	CompoundStatement		108:18:2969:2969	3543683	1					
ANR	3544260	ExpressionStatement	op -> extended = true	4755:6:118906:118925	3543683	0	True				
ANR	3544261	AssignmentExpression	op -> extended = true		3543683	0		=			
ANR	3544262	PtrMemberAccess	op -> extended		3543683	0					
ANR	3544263	Identifier	op		3543683	0					
ANR	3544264	Identifier	extended		3543683	1					
ANR	3544265	Identifier	true		3543683	1					
ANR	3544266	ExpressionStatement	op -> reg = reg - 9	4756:6:118933:118950	3543683	1	True				
ANR	3544267	AssignmentExpression	op -> reg = reg - 9		3543683	0		=			
ANR	3544268	PtrMemberAccess	op -> reg		3543683	0					
ANR	3544269	Identifier	op		3543683	0					
ANR	3544270	Identifier	reg		3543683	1					
ANR	3544271	AdditiveExpression	reg - 9		3543683	1		-			
ANR	3544272	Identifier	reg		3543683	0					
ANR	3544273	PrimaryExpression	9		3543683	1					
ANR	3544274	ElseStatement	else		3543683	0					
ANR	3544275	CompoundStatement		111:12:3035:3035	3543683	0					
ANR	3544276	ExpressionStatement	op -> reg = reg	4758:6:118972:118985	3543683	0	True				
ANR	3544277	AssignmentExpression	op -> reg = reg		3543683	0		=			
ANR	3544278	PtrMemberAccess	op -> reg		3543683	0					
ANR	3544279	Identifier	op		3543683	0					
ANR	3544280	Identifier	reg		3543683	1					
ANR	3544281	Identifier	reg		3543683	1					
ANR	3544282	ExpressionStatement	first_reg = false	4760:5:118999:119016	3543683	2	True				
ANR	3544283	AssignmentExpression	first_reg = false		3543683	0		=			
ANR	3544284	Identifier	first_reg		3543683	0					
ANR	3544285	Identifier	false		3543683	1					
ANR	3544286	ElseStatement	else		3543683	0					
ANR	3544287	IfStatement	if ( reg > 8 )		3543683	0					
ANR	3544288	Condition	reg > 8	4761:15:119033:119039	3543683	0	True				
ANR	3544289	RelationalExpression	reg > 8		3543683	0		>			
ANR	3544290	Identifier	reg		3543683	0					
ANR	3544291	PrimaryExpression	8		3543683	1					
ANR	3544292	CompoundStatement		115:24:3113:3113	3543683	1					
ANR	3544293	ExpressionStatement	op -> reg = reg - 9	4762:5:119049:119066	3543683	0	True				
ANR	3544294	AssignmentExpression	op -> reg = reg - 9		3543683	0		=			
ANR	3544295	PtrMemberAccess	op -> reg		3543683	0					
ANR	3544296	Identifier	op		3543683	0					
ANR	3544297	Identifier	reg		3543683	1					
ANR	3544298	AdditiveExpression	reg - 9		3543683	1		-			
ANR	3544299	Identifier	reg		3543683	0					
ANR	3544300	PrimaryExpression	9		3543683	1					
ANR	3544301	IfStatement	if ( reg_type & OT_REGTYPE & OT_SEGMENTREG )		3543683	5					
ANR	3544302	Condition	reg_type & OT_REGTYPE & OT_SEGMENTREG	4764:8:119082:119118	3543683	0	True				
ANR	3544303	BitAndExpression	reg_type & OT_REGTYPE & OT_SEGMENTREG		3543683	0		&			
ANR	3544304	Identifier	reg_type		3543683	0					
ANR	3544305	BitAndExpression	OT_REGTYPE & OT_SEGMENTREG		3543683	1		&			
ANR	3544306	Identifier	OT_REGTYPE		3543683	0					
ANR	3544307	Identifier	OT_SEGMENTREG		3543683	1					
ANR	3544308	CompoundStatement		118:47:3192:3192	3543683	1					
ANR	3544309	ExpressionStatement	op -> reg = reg	4765:5:119128:119141	3543683	0	True				
ANR	3544310	AssignmentExpression	op -> reg = reg		3543683	0		=			
ANR	3544311	PtrMemberAccess	op -> reg		3543683	0					
ANR	3544312	Identifier	op		3543683	0					
ANR	3544313	Identifier	reg		3543683	1					
ANR	3544314	Identifier	reg		3543683	1					
ANR	3544315	ExpressionStatement	op -> type = reg_type	4766:5:119148:119167	3543683	1	True				
ANR	3544316	AssignmentExpression	op -> type = reg_type		3543683	0		=			
ANR	3544317	PtrMemberAccess	op -> type		3543683	0					
ANR	3544318	Identifier	op		3543683	0					
ANR	3544319	Identifier	type		3543683	1					
ANR	3544320	Identifier	reg_type		3543683	1					
ANR	3544321	ExpressionStatement	"parse_segment_offset ( a , str , & nextpos , op , reg_index )"	4767:5:119174:119228	3543683	2	True				
ANR	3544322	CallExpression	"parse_segment_offset ( a , str , & nextpos , op , reg_index )"		3543683	0					
ANR	3544323	Callee	parse_segment_offset		3543683	0					
ANR	3544324	Identifier	parse_segment_offset		3543683	0					
ANR	3544325	ArgumentList	a		3543683	1					
ANR	3544326	Argument	a		3543683	0					
ANR	3544327	Identifier	a		3543683	0					
ANR	3544328	Argument	str		3543683	1					
ANR	3544329	Identifier	str		3543683	0					
ANR	3544330	Argument	& nextpos		3543683	2					
ANR	3544331	UnaryOperationExpression	& nextpos		3543683	0					
ANR	3544332	UnaryOperator	&		3543683	0					
ANR	3544333	Identifier	nextpos		3543683	1					
ANR	3544334	Argument	op		3543683	3					
ANR	3544335	Identifier	op		3543683	0					
ANR	3544336	Argument	reg_index		3543683	4					
ANR	3544337	Identifier	reg_index		3543683	0					
ANR	3544338	ReturnStatement	return nextpos ;	4768:5:119235:119249	3543683	3	True				
ANR	3544339	Identifier	nextpos		3543683	0					
ANR	3544340	IfStatement	if ( ! explicit_size )		3543683	6					
ANR	3544341	Condition	! explicit_size	4772:8:119327:119340	3543683	0	True				
ANR	3544342	UnaryOperationExpression	! explicit_size		3543683	0					
ANR	3544343	UnaryOperator	!		3543683	0					
ANR	3544344	Identifier	explicit_size		3543683	1					
ANR	3544345	CompoundStatement		126:24:3414:3414	3543683	1					
ANR	3544346	ExpressionStatement	op -> type |= reg_type	4773:5:119350:119370	3543683	0	True				
ANR	3544347	AssignmentExpression	op -> type |= reg_type		3543683	0		|=			
ANR	3544348	PtrMemberAccess	op -> type		3543683	0					
ANR	3544349	Identifier	op		3543683	0					
ANR	3544350	Identifier	type		3543683	1					
ANR	3544351	Identifier	reg_type		3543683	1					
ANR	3544352	ExpressionStatement	op -> reg_size = reg_type	4775:4:119382:119405	3543683	7	True				
ANR	3544353	AssignmentExpression	op -> reg_size = reg_type		3543683	0		=			
ANR	3544354	PtrMemberAccess	op -> reg_size		3543683	0					
ANR	3544355	Identifier	op		3543683	0					
ANR	3544356	Identifier	reg_size		3543683	1					
ANR	3544357	Identifier	reg_type		3543683	1					
ANR	3544358	ExpressionStatement	op -> explicit_size = explicit_size	4776:4:119411:119444	3543683	8	True				
ANR	3544359	AssignmentExpression	op -> explicit_size = explicit_size		3543683	0		=			
ANR	3544360	PtrMemberAccess	op -> explicit_size		3543683	0					
ANR	3544361	Identifier	op		3543683	0					
ANR	3544362	Identifier	explicit_size		3543683	1					
ANR	3544363	Identifier	explicit_size		3543683	1					
ANR	3544364	IfStatement	if ( ! ( reg_type & OT_GPREG ) )		3543683	9					
ANR	3544365	Condition	! ( reg_type & OT_GPREG )	4779:8:119508:119529	3543683	0	True				
ANR	3544366	UnaryOperationExpression	! ( reg_type & OT_GPREG )		3543683	0					
ANR	3544367	UnaryOperator	!		3543683	0					
ANR	3544368	BitAndExpression	reg_type & OT_GPREG		3543683	1		&			
ANR	3544369	Identifier	reg_type		3543683	0					
ANR	3544370	Identifier	OT_GPREG		3543683	1					
ANR	3544371	CompoundStatement		133:32:3603:3603	3543683	1					
ANR	3544372	ExpressionStatement	op -> type = 0	4780:5:119539:119551	3543683	0	True				
ANR	3544373	AssignmentExpression	op -> type = 0		3543683	0		=			
ANR	3544374	PtrMemberAccess	op -> type		3543683	0					
ANR	3544375	Identifier	op		3543683	0					
ANR	3544376	Identifier	type		3543683	1					
ANR	3544377	PrimaryExpression	0		3543683	1					
ANR	3544378	ElseStatement	else		3543683	0					
ANR	3544379	CompoundStatement		160:4:4392:4419	3543683	0					
ANR	3544380	IdentifierDeclStatement	"char * p = strchr ( str , '+' ) ;"	4784:4:119605:119632	3543683	0	True				
ANR	3544381	IdentifierDecl	"* p = strchr ( str , '+' )"		3543683	0					
ANR	3544382	IdentifierDeclType	char *		3543683	0					
ANR	3544383	Identifier	p		3543683	1					
ANR	3544384	AssignmentExpression	"* p = strchr ( str , '+' )"		3543683	2		=			
ANR	3544385	Identifier	p		3543683	0					
ANR	3544386	CallExpression	"strchr ( str , '+' )"		3543683	1					
ANR	3544387	Callee	strchr		3543683	0					
ANR	3544388	Identifier	strchr		3543683	0					
ANR	3544389	ArgumentList	str		3543683	1					
ANR	3544390	Argument	str		3543683	0					
ANR	3544391	Identifier	str		3543683	0					
ANR	3544392	Argument	'+'		3543683	1					
ANR	3544393	PrimaryExpression	'+'		3543683	0					
ANR	3544394	ExpressionStatement	op -> offset_sign = 1	4785:4:119638:119657	3543683	1	True				
ANR	3544395	AssignmentExpression	op -> offset_sign = 1		3543683	0		=			
ANR	3544396	PtrMemberAccess	op -> offset_sign		3543683	0					
ANR	3544397	Identifier	op		3543683	0					
ANR	3544398	Identifier	offset_sign		3543683	1					
ANR	3544399	PrimaryExpression	1		3543683	1					
ANR	3544400	IfStatement	if ( ! p )		3543683	2					
ANR	3544401	Condition	! p	4786:8:119667:119668	3543683	0	True				
ANR	3544402	UnaryOperationExpression	! p		3543683	0					
ANR	3544403	UnaryOperator	!		3543683	0					
ANR	3544404	Identifier	p		3543683	1					
ANR	3544405	CompoundStatement		140:12:3742:3742	3543683	1					
ANR	3544406	ExpressionStatement	"p = strchr ( str , '-' )"	4787:5:119678:119699	3543683	0	True				
ANR	3544407	AssignmentExpression	"p = strchr ( str , '-' )"		3543683	0		=			
ANR	3544408	Identifier	p		3543683	0					
ANR	3544409	CallExpression	"strchr ( str , '-' )"		3543683	1					
ANR	3544410	Callee	strchr		3543683	0					
ANR	3544411	Identifier	strchr		3543683	0					
ANR	3544412	ArgumentList	str		3543683	1					
ANR	3544413	Argument	str		3543683	0					
ANR	3544414	Identifier	str		3543683	0					
ANR	3544415	Argument	'-'		3543683	1					
ANR	3544416	PrimaryExpression	'-'		3543683	0					
ANR	3544417	IfStatement	if ( p )		3543683	1					
ANR	3544418	Condition	p	4788:9:119710:119710	3543683	0	True				
ANR	3544419	Identifier	p		3543683	0					
ANR	3544420	CompoundStatement		142:12:3784:3784	3543683	1					
ANR	3544421	ExpressionStatement	op -> offset_sign = - 1	4789:6:119721:119741	3543683	0	True				
ANR	3544422	AssignmentExpression	op -> offset_sign = - 1		3543683	0		=			
ANR	3544423	PtrMemberAccess	op -> offset_sign		3543683	0					
ANR	3544424	Identifier	op		3543683	0					
ANR	3544425	Identifier	offset_sign		3543683	1					
ANR	3544426	UnaryOperationExpression	- 1		3543683	1					
ANR	3544427	UnaryOperator	-		3543683	0					
ANR	3544428	PrimaryExpression	1		3543683	1					
ANR	3544429	IdentifierDeclStatement	"char * plus = strchr ( str , '+' ) ;"	4793:4:119820:119851	3543683	3	True				
ANR	3544430	IdentifierDecl	"* plus = strchr ( str , '+' )"		3543683	0					
ANR	3544431	IdentifierDeclType	char *		3543683	0					
ANR	3544432	Identifier	plus		3543683	1					
ANR	3544433	AssignmentExpression	"* plus = strchr ( str , '+' )"		3543683	2		=			
ANR	3544434	Identifier	plus		3543683	0					
ANR	3544435	CallExpression	"strchr ( str , '+' )"		3543683	1					
ANR	3544436	Callee	strchr		3543683	0					
ANR	3544437	Identifier	strchr		3543683	0					
ANR	3544438	ArgumentList	str		3543683	1					
ANR	3544439	Argument	str		3543683	0					
ANR	3544440	Identifier	str		3543683	0					
ANR	3544441	Argument	'+'		3543683	1					
ANR	3544442	PrimaryExpression	'+'		3543683	0					
ANR	3544443	IdentifierDeclStatement	"char * minus = strchr ( str , '-' ) ;"	4794:4:119857:119889	3543683	4	True				
ANR	3544444	IdentifierDecl	"* minus = strchr ( str , '-' )"		3543683	0					
ANR	3544445	IdentifierDeclType	char *		3543683	0					
ANR	3544446	Identifier	minus		3543683	1					
ANR	3544447	AssignmentExpression	"* minus = strchr ( str , '-' )"		3543683	2		=			
ANR	3544448	Identifier	minus		3543683	0					
ANR	3544449	CallExpression	"strchr ( str , '-' )"		3543683	1					
ANR	3544450	Callee	strchr		3543683	0					
ANR	3544451	Identifier	strchr		3543683	0					
ANR	3544452	ArgumentList	str		3543683	1					
ANR	3544453	Argument	str		3543683	0					
ANR	3544454	Identifier	str		3543683	0					
ANR	3544455	Argument	'-'		3543683	1					
ANR	3544456	PrimaryExpression	'-'		3543683	0					
ANR	3544457	IdentifierDeclStatement	"char * closeB = strchr ( str , ']' ) ;"	4795:4:119895:119928	3543683	5	True				
ANR	3544458	IdentifierDecl	"* closeB = strchr ( str , ']' )"		3543683	0					
ANR	3544459	IdentifierDeclType	char *		3543683	0					
ANR	3544460	Identifier	closeB		3543683	1					
ANR	3544461	AssignmentExpression	"* closeB = strchr ( str , ']' )"		3543683	2		=			
ANR	3544462	Identifier	closeB		3543683	0					
ANR	3544463	CallExpression	"strchr ( str , ']' )"		3543683	1					
ANR	3544464	Callee	strchr		3543683	0					
ANR	3544465	Identifier	strchr		3543683	0					
ANR	3544466	ArgumentList	str		3543683	1					
ANR	3544467	Argument	str		3543683	0					
ANR	3544468	Identifier	str		3543683	0					
ANR	3544469	Argument	']'		3543683	1					
ANR	3544470	PrimaryExpression	']'		3543683	0					
ANR	3544471	IfStatement	if ( plus && minus && plus < closeB && minus < closeB )		3543683	6					
ANR	3544472	Condition	plus && minus && plus < closeB && minus < closeB	4796:8:119938:119985	3543683	0	True				
ANR	3544473	AndExpression	plus && minus && plus < closeB && minus < closeB		3543683	0		&&			
ANR	3544474	Identifier	plus		3543683	0					
ANR	3544475	AndExpression	minus && plus < closeB && minus < closeB		3543683	1		&&			
ANR	3544476	Identifier	minus		3543683	0					
ANR	3544477	AndExpression	plus < closeB && minus < closeB		3543683	1		&&			
ANR	3544478	RelationalExpression	plus < closeB		3543683	0		<			
ANR	3544479	Identifier	plus		3543683	0					
ANR	3544480	Identifier	closeB		3543683	1					
ANR	3544481	RelationalExpression	minus < closeB		3543683	1		<			
ANR	3544482	Identifier	minus		3543683	0					
ANR	3544483	Identifier	closeB		3543683	1					
ANR	3544484	CompoundStatement		150:58:4059:4059	3543683	1					
ANR	3544485	ExpressionStatement	op -> offset_sign = - 1	4797:5:119995:120015	3543683	0	True				
ANR	3544486	AssignmentExpression	op -> offset_sign = - 1		3543683	0		=			
ANR	3544487	PtrMemberAccess	op -> offset_sign		3543683	0					
ANR	3544488	Identifier	op		3543683	0					
ANR	3544489	Identifier	offset_sign		3543683	1					
ANR	3544490	UnaryOperationExpression	- 1		3543683	1					
ANR	3544491	UnaryOperator	-		3543683	0					
ANR	3544492	PrimaryExpression	1		3543683	1					
ANR	3544493	IdentifierDeclStatement	char * tmp ;	4802:4:120210:120219	3543683	7	True				
ANR	3544494	IdentifierDecl	* tmp		3543683	0					
ANR	3544495	IdentifierDeclType	char *		3543683	0					
ANR	3544496	Identifier	tmp		3543683	1					
ANR	3544497	ExpressionStatement	tmp = malloc ( strlen ( str + pos ) + 1 )	4803:4:120225:120262	3543683	8	True				
ANR	3544498	AssignmentExpression	tmp = malloc ( strlen ( str + pos ) + 1 )		3543683	0		=			
ANR	3544499	Identifier	tmp		3543683	0					
ANR	3544500	CallExpression	malloc ( strlen ( str + pos ) + 1 )		3543683	1					
ANR	3544501	Callee	malloc		3543683	0					
ANR	3544502	Identifier	malloc		3543683	0					
ANR	3544503	ArgumentList	strlen ( str + pos ) + 1		3543683	1					
ANR	3544504	Argument	strlen ( str + pos ) + 1		3543683	0					
ANR	3544505	AdditiveExpression	strlen ( str + pos ) + 1		3543683	0		+			
ANR	3544506	CallExpression	strlen ( str + pos )		3543683	0					
ANR	3544507	Callee	strlen		3543683	0					
ANR	3544508	Identifier	strlen		3543683	0					
ANR	3544509	ArgumentList	str + pos		3543683	1					
ANR	3544510	Argument	str + pos		3543683	0					
ANR	3544511	AdditiveExpression	str + pos		3543683	0		+			
ANR	3544512	Identifier	str		3543683	0					
ANR	3544513	Identifier	pos		3543683	1					
ANR	3544514	PrimaryExpression	1		3543683	1					
ANR	3544515	ExpressionStatement	"strcpy ( tmp , str + pos )"	4804:4:120268:120291	3543683	9	True				
ANR	3544516	CallExpression	"strcpy ( tmp , str + pos )"		3543683	0					
ANR	3544517	Callee	strcpy		3543683	0					
ANR	3544518	Identifier	strcpy		3543683	0					
ANR	3544519	ArgumentList	tmp		3543683	1					
ANR	3544520	Argument	tmp		3543683	0					
ANR	3544521	Identifier	tmp		3543683	0					
ANR	3544522	Argument	str + pos		3543683	1					
ANR	3544523	AdditiveExpression	str + pos		3543683	0		+			
ANR	3544524	Identifier	str		3543683	0					
ANR	3544525	Identifier	pos		3543683	1					
ANR	3544526	ExpressionStatement	"strtok ( tmp , ""+-"" )"	4805:4:120297:120315	3543683	10	True				
ANR	3544527	CallExpression	"strtok ( tmp , ""+-"" )"		3543683	0					
ANR	3544528	Callee	strtok		3543683	0					
ANR	3544529	Identifier	strtok		3543683	0					
ANR	3544530	ArgumentList	tmp		3543683	1					
ANR	3544531	Argument	tmp		3543683	0					
ANR	3544532	Identifier	tmp		3543683	0					
ANR	3544533	Argument	"""+-"""		3543683	1					
ANR	3544534	PrimaryExpression	"""+-"""		3543683	0					
ANR	3544535	IdentifierDeclStatement	"st64 read = getnum ( a , tmp ) ;"	4806:4:120321:120348	3543683	11	True				
ANR	3544536	IdentifierDecl	"read = getnum ( a , tmp )"		3543683	0					
ANR	3544537	IdentifierDeclType	st64		3543683	0					
ANR	3544538	Identifier	read		3543683	1					
ANR	3544539	AssignmentExpression	"read = getnum ( a , tmp )"		3543683	2		=			
ANR	3544540	Identifier	read		3543683	0					
ANR	3544541	CallExpression	"getnum ( a , tmp )"		3543683	1					
ANR	3544542	Callee	getnum		3543683	0					
ANR	3544543	Identifier	getnum		3543683	0					
ANR	3544544	ArgumentList	a		3543683	1					
ANR	3544545	Argument	a		3543683	0					
ANR	3544546	Identifier	a		3543683	0					
ANR	3544547	Argument	tmp		3543683	1					
ANR	3544548	Identifier	tmp		3543683	0					
ANR	3544549	ExpressionStatement	free ( tmp )	4807:4:120354:120364	3543683	12	True				
ANR	3544550	CallExpression	free ( tmp )		3543683	0					
ANR	3544551	Callee	free		3543683	0					
ANR	3544552	Identifier	free		3543683	0					
ANR	3544553	ArgumentList	tmp		3543683	1					
ANR	3544554	Argument	tmp		3543683	0					
ANR	3544555	Identifier	tmp		3543683	0					
ANR	3544556	ExpressionStatement	temp *= read	4808:4:120370:120382	3543683	13	True				
ANR	3544557	AssignmentExpression	temp *= read		3543683	0		*=			
ANR	3544558	Identifier	temp		3543683	0					
ANR	3544559	Identifier	read		3543683	1					
ANR	3544560	ElseStatement	else		3543683	0					
ANR	3544561	IfStatement	if ( last_type == TT_WORD )		3543683	0					
ANR	3544562	Condition	last_type == TT_WORD	4811:12:120405:120424	3543683	0	True				
ANR	3544563	EqualityExpression	last_type == TT_WORD		3543683	0		==			
ANR	3544564	Identifier	last_type		3543683	0					
ANR	3544565	Identifier	TT_WORD		3543683	1					
ANR	3544566	CompoundStatement		167:2:4533:4548	3543683	1					
ANR	3544567	ExpressionStatement	nextpos = pos	4812:2:120445:120458	3543683	0	True				
ANR	3544568	AssignmentExpression	nextpos = pos		3543683	0		=			
ANR	3544569	Identifier	nextpos		3543683	0					
ANR	3544570	Identifier	pos		3543683	1					
ANR	3544571	IdentifierDeclStatement	RFlagItem * flag ;	4813:2:120462:120477	3543683	1	True				
ANR	3544572	IdentifierDecl	* flag		3543683	0					
ANR	3544573	IdentifierDeclType	RFlagItem *		3543683	0					
ANR	3544574	Identifier	flag		3543683	1					
ANR	3544575	IfStatement	if ( isrepop )		3543683	2					
ANR	3544576	Condition	isrepop	4815:6:120486:120492	3543683	0	True				
ANR	3544577	Identifier	isrepop		3543683	0					
ANR	3544578	CompoundStatement		169:15:4566:4566	3543683	1					
ANR	3544579	ExpressionStatement	op -> is_good_flag = false	4816:3:120500:120524	3543683	0	True				
ANR	3544580	AssignmentExpression	op -> is_good_flag = false		3543683	0		=			
ANR	3544581	PtrMemberAccess	op -> is_good_flag		3543683	0					
ANR	3544582	Identifier	op		3543683	0					
ANR	3544583	Identifier	is_good_flag		3543683	1					
ANR	3544584	Identifier	false		3543683	1					
ANR	3544585	ExpressionStatement	"strncpy ( op -> rep_op , str , MAX_REPOP_LENGTH - 1 )"	4817:3:120529:120576	3543683	1	True				
ANR	3544586	CallExpression	"strncpy ( op -> rep_op , str , MAX_REPOP_LENGTH - 1 )"		3543683	0					
ANR	3544587	Callee	strncpy		3543683	0					
ANR	3544588	Identifier	strncpy		3543683	0					
ANR	3544589	ArgumentList	op -> rep_op		3543683	1					
ANR	3544590	Argument	op -> rep_op		3543683	0					
ANR	3544591	PtrMemberAccess	op -> rep_op		3543683	0					
ANR	3544592	Identifier	op		3543683	0					
ANR	3544593	Identifier	rep_op		3543683	1					
ANR	3544594	Argument	str		3543683	1					
ANR	3544595	Identifier	str		3543683	0					
ANR	3544596	Argument	MAX_REPOP_LENGTH - 1		3543683	2					
ANR	3544597	AdditiveExpression	MAX_REPOP_LENGTH - 1		3543683	0		-			
ANR	3544598	Identifier	MAX_REPOP_LENGTH		3543683	0					
ANR	3544599	PrimaryExpression	1		3543683	1					
ANR	3544600	ExpressionStatement	op -> rep_op [ MAX_REPOP_LENGTH - 1 ] = '\\0'	4818:3:120581:120620	3543683	2	True				
ANR	3544601	AssignmentExpression	op -> rep_op [ MAX_REPOP_LENGTH - 1 ] = '\\0'		3543683	0		=			
ANR	3544602	ArrayIndexing	op -> rep_op [ MAX_REPOP_LENGTH - 1 ]		3543683	0					
ANR	3544603	PtrMemberAccess	op -> rep_op		3543683	0					
ANR	3544604	Identifier	op		3543683	0					
ANR	3544605	Identifier	rep_op		3543683	1					
ANR	3544606	AdditiveExpression	MAX_REPOP_LENGTH - 1		3543683	1		-			
ANR	3544607	Identifier	MAX_REPOP_LENGTH		3543683	0					
ANR	3544608	PrimaryExpression	1		3543683	1					
ANR	3544609	PrimaryExpression	'\\0'		3543683	1					
ANR	3544610	ReturnStatement	return nextpos ;	4819:3:120625:120639	3543683	3	True				
ANR	3544611	Identifier	nextpos		3543683	0					
ANR	3544612	ExpressionStatement	"op -> reg = parseReg ( a , str , & nextpos , & op -> type )"	4822:2:120648:120696	3543683	3	True				
ANR	3544613	AssignmentExpression	"op -> reg = parseReg ( a , str , & nextpos , & op -> type )"		3543683	0		=			
ANR	3544614	PtrMemberAccess	op -> reg		3543683	0					
ANR	3544615	Identifier	op		3543683	0					
ANR	3544616	Identifier	reg		3543683	1					
ANR	3544617	CallExpression	"parseReg ( a , str , & nextpos , & op -> type )"		3543683	1					
ANR	3544618	Callee	parseReg		3543683	0					
ANR	3544619	Identifier	parseReg		3543683	0					
ANR	3544620	ArgumentList	a		3543683	1					
ANR	3544621	Argument	a		3543683	0					
ANR	3544622	Identifier	a		3543683	0					
ANR	3544623	Argument	str		3543683	1					
ANR	3544624	Identifier	str		3543683	0					
ANR	3544625	Argument	& nextpos		3543683	2					
ANR	3544626	UnaryOperationExpression	& nextpos		3543683	0					
ANR	3544627	UnaryOperator	&		3543683	0					
ANR	3544628	Identifier	nextpos		3543683	1					
ANR	3544629	Argument	& op -> type		3543683	3					
ANR	3544630	UnaryOperationExpression	& op -> type		3543683	0					
ANR	3544631	UnaryOperator	&		3543683	0					
ANR	3544632	PtrMemberAccess	op -> type		3543683	1					
ANR	3544633	Identifier	op		3543683	0					
ANR	3544634	Identifier	type		3543683	1					
ANR	3544635	ExpressionStatement	op -> extended = false	4824:2:120701:120721	3543683	4	True				
ANR	3544636	AssignmentExpression	op -> extended = false		3543683	0		=			
ANR	3544637	PtrMemberAccess	op -> extended		3543683	0					
ANR	3544638	Identifier	op		3543683	0					
ANR	3544639	Identifier	extended		3543683	1					
ANR	3544640	Identifier	false		3543683	1					
ANR	3544641	IfStatement	if ( op -> reg > 8 )		3543683	5					
ANR	3544642	Condition	op -> reg > 8	4825:6:120729:120739	3543683	0	True				
ANR	3544643	RelationalExpression	op -> reg > 8		3543683	0		>			
ANR	3544644	PtrMemberAccess	op -> reg		3543683	0					
ANR	3544645	Identifier	op		3543683	0					
ANR	3544646	Identifier	reg		3543683	1					
ANR	3544647	PrimaryExpression	8		3543683	1					
ANR	3544648	CompoundStatement		179:19:4813:4813	3543683	1					
ANR	3544649	ExpressionStatement	op -> extended = true	4826:3:120747:120766	3543683	0	True				
ANR	3544650	AssignmentExpression	op -> extended = true		3543683	0		=			
ANR	3544651	PtrMemberAccess	op -> extended		3543683	0					
ANR	3544652	Identifier	op		3543683	0					
ANR	3544653	Identifier	extended		3543683	1					
ANR	3544654	Identifier	true		3543683	1					
ANR	3544655	ExpressionStatement	op -> reg -= 9	4827:3:120771:120783	3543683	1	True				
ANR	3544656	AssignmentExpression	op -> reg -= 9		3543683	0		-=			
ANR	3544657	PtrMemberAccess	op -> reg		3543683	0					
ANR	3544658	Identifier	op		3543683	0					
ANR	3544659	Identifier	reg		3543683	1					
ANR	3544660	PrimaryExpression	9		3543683	1					
ANR	3544661	IfStatement	if ( op -> type & OT_REGTYPE & OT_SEGMENTREG )		3543683	6					
ANR	3544662	Condition	op -> type & OT_REGTYPE & OT_SEGMENTREG	4829:6:120795:120831	3543683	0	True				
ANR	3544663	BitAndExpression	op -> type & OT_REGTYPE & OT_SEGMENTREG		3543683	0		&			
ANR	3544664	PtrMemberAccess	op -> type		3543683	0					
ANR	3544665	Identifier	op		3543683	0					
ANR	3544666	Identifier	type		3543683	1					
ANR	3544667	BitAndExpression	OT_REGTYPE & OT_SEGMENTREG		3543683	1		&			
ANR	3544668	Identifier	OT_REGTYPE		3543683	0					
ANR	3544669	Identifier	OT_SEGMENTREG		3543683	1					
ANR	3544670	CompoundStatement		183:45:4905:4905	3543683	1					
ANR	3544671	ExpressionStatement	"parse_segment_offset ( a , str , & nextpos , op , reg_index )"	4830:3:120839:120893	3543683	0	True				
ANR	3544672	CallExpression	"parse_segment_offset ( a , str , & nextpos , op , reg_index )"		3543683	0					
ANR	3544673	Callee	parse_segment_offset		3543683	0					
ANR	3544674	Identifier	parse_segment_offset		3543683	0					
ANR	3544675	ArgumentList	a		3543683	1					
ANR	3544676	Argument	a		3543683	0					
ANR	3544677	Identifier	a		3543683	0					
ANR	3544678	Argument	str		3543683	1					
ANR	3544679	Identifier	str		3543683	0					
ANR	3544680	Argument	& nextpos		3543683	2					
ANR	3544681	UnaryOperationExpression	& nextpos		3543683	0					
ANR	3544682	UnaryOperator	&		3543683	0					
ANR	3544683	Identifier	nextpos		3543683	1					
ANR	3544684	Argument	op		3543683	3					
ANR	3544685	Identifier	op		3543683	0					
ANR	3544686	Argument	reg_index		3543683	4					
ANR	3544687	Identifier	reg_index		3543683	0					
ANR	3544688	ReturnStatement	return nextpos ;	4831:3:120898:120912	3543683	1	True				
ANR	3544689	Identifier	nextpos		3543683	0					
ANR	3544690	IfStatement	if ( op -> reg == X86R_UNDEFINED )		3543683	7					
ANR	3544691	Condition	op -> reg == X86R_UNDEFINED	4833:6:120924:120948	3543683	0	True				
ANR	3544692	EqualityExpression	op -> reg == X86R_UNDEFINED		3543683	0		==			
ANR	3544693	PtrMemberAccess	op -> reg		3543683	0					
ANR	3544694	Identifier	op		3543683	0					
ANR	3544695	Identifier	reg		3543683	1					
ANR	3544696	Identifier	X86R_UNDEFINED		3543683	1					
ANR	3544697	CompoundStatement		198:3:5298:5325	3543683	1					
ANR	3544698	ExpressionStatement	op -> is_good_flag = false	4834:3:120956:120980	3543683	0	True				
ANR	3544699	AssignmentExpression	op -> is_good_flag = false		3543683	0		=			
ANR	3544700	PtrMemberAccess	op -> is_good_flag		3543683	0					
ANR	3544701	Identifier	op		3543683	0					
ANR	3544702	Identifier	is_good_flag		3543683	1					
ANR	3544703	Identifier	false		3543683	1					
ANR	3544704	IfStatement	if ( a -> num && a -> num -> value == 0 )		3543683	1					
ANR	3544705	Condition	a -> num && a -> num -> value == 0	4835:7:120989:121016	3543683	0	True				
ANR	3544706	AndExpression	a -> num && a -> num -> value == 0		3543683	0		&&			
ANR	3544707	PtrMemberAccess	a -> num		3543683	0					
ANR	3544708	Identifier	a		3543683	0					
ANR	3544709	Identifier	num		3543683	1					
ANR	3544710	EqualityExpression	a -> num -> value == 0		3543683	1		==			
ANR	3544711	PtrMemberAccess	a -> num -> value		3543683	0					
ANR	3544712	PtrMemberAccess	a -> num		3543683	0					
ANR	3544713	Identifier	a		3543683	0					
ANR	3544714	Identifier	num		3543683	1					
ANR	3544715	Identifier	value		3543683	1					
ANR	3544716	PrimaryExpression	0		3543683	1					
ANR	3544717	CompoundStatement		189:37:5090:5090	3543683	1					
ANR	3544718	ReturnStatement	return nextpos ;	4836:4:121025:121039	3543683	0	True				
ANR	3544719	Identifier	nextpos		3543683	0					
ANR	3544720	ExpressionStatement	op -> type = OT_CONSTANT	4838:3:121049:121071	3543683	2	True				
ANR	3544721	AssignmentExpression	op -> type = OT_CONSTANT		3543683	0		=			
ANR	3544722	PtrMemberAccess	op -> type		3543683	0					
ANR	3544723	Identifier	op		3543683	0					
ANR	3544724	Identifier	type		3543683	1					
ANR	3544725	Identifier	OT_CONSTANT		3543683	1					
ANR	3544726	IdentifierDeclStatement	RCore * core = a -> num ? ( RCore * ) ( a -> num -> userptr ) : NULL ;	4839:3:121076:121130	3543683	3	True				
ANR	3544727	IdentifierDecl	* core = a -> num ? ( RCore * ) ( a -> num -> userptr ) : NULL		3543683	0					
ANR	3544728	IdentifierDeclType	RCore *		3543683	0					
ANR	3544729	Identifier	core		3543683	1					
ANR	3544730	AssignmentExpression	* core = a -> num ? ( RCore * ) ( a -> num -> userptr ) : NULL		3543683	2		=			
ANR	3544731	Identifier	core		3543683	0					
ANR	3544732	ConditionalExpression	a -> num ? ( RCore * ) ( a -> num -> userptr ) : NULL		3543683	1					
ANR	3544733	Condition	a -> num		3543683	0					
ANR	3544734	PtrMemberAccess	a -> num		3543683	0					
ANR	3544735	Identifier	a		3543683	0					
ANR	3544736	Identifier	num		3543683	1					
ANR	3544737	CastExpression	( RCore * ) ( a -> num -> userptr )		3543683	1					
ANR	3544738	CastTarget	RCore *		3543683	0					
ANR	3544739	PtrMemberAccess	a -> num -> userptr		3543683	1					
ANR	3544740	PtrMemberAccess	a -> num		3543683	0					
ANR	3544741	Identifier	a		3543683	0					
ANR	3544742	Identifier	num		3543683	1					
ANR	3544743	Identifier	userptr		3543683	1					
ANR	3544744	Identifier	NULL		3543683	2					
ANR	3544745	IfStatement	"if ( core && ( flag = r_flag_get ( core -> flags , str ) ) )"		3543683	4					
ANR	3544746	Condition	"core && ( flag = r_flag_get ( core -> flags , str ) )"	4840:7:121139:121184	3543683	0	True				
ANR	3544747	AndExpression	"core && ( flag = r_flag_get ( core -> flags , str ) )"		3543683	0		&&			
ANR	3544748	Identifier	core		3543683	0					
ANR	3544749	AssignmentExpression	"flag = r_flag_get ( core -> flags , str )"		3543683	1		=			
ANR	3544750	Identifier	flag		3543683	0					
ANR	3544751	CallExpression	"r_flag_get ( core -> flags , str )"		3543683	1					
ANR	3544752	Callee	r_flag_get		3543683	0					
ANR	3544753	Identifier	r_flag_get		3543683	0					
ANR	3544754	ArgumentList	core -> flags		3543683	1					
ANR	3544755	Argument	core -> flags		3543683	0					
ANR	3544756	PtrMemberAccess	core -> flags		3543683	0					
ANR	3544757	Identifier	core		3543683	0					
ANR	3544758	Identifier	flags		3543683	1					
ANR	3544759	Argument	str		3543683	1					
ANR	3544760	Identifier	str		3543683	0					
ANR	3544761	CompoundStatement		194:55:5258:5258	3543683	1					
ANR	3544762	ExpressionStatement	op -> is_good_flag = true	4841:4:121193:121216	3543683	0	True				
ANR	3544763	AssignmentExpression	op -> is_good_flag = true		3543683	0		=			
ANR	3544764	PtrMemberAccess	op -> is_good_flag		3543683	0					
ANR	3544765	Identifier	op		3543683	0					
ANR	3544766	Identifier	is_good_flag		3543683	1					
ANR	3544767	Identifier	true		3543683	1					
ANR	3544768	IdentifierDeclStatement	"char * p = strchr ( str , '-' ) ;"	4844:3:121227:121254	3543683	5	True				
ANR	3544769	IdentifierDecl	"* p = strchr ( str , '-' )"		3543683	0					
ANR	3544770	IdentifierDeclType	char *		3543683	0					
ANR	3544771	Identifier	p		3543683	1					
ANR	3544772	AssignmentExpression	"* p = strchr ( str , '-' )"		3543683	2		=			
ANR	3544773	Identifier	p		3543683	0					
ANR	3544774	CallExpression	"strchr ( str , '-' )"		3543683	1					
ANR	3544775	Callee	strchr		3543683	0					
ANR	3544776	Identifier	strchr		3543683	0					
ANR	3544777	ArgumentList	str		3543683	1					
ANR	3544778	Argument	str		3543683	0					
ANR	3544779	Identifier	str		3543683	0					
ANR	3544780	Argument	'-'		3543683	1					
ANR	3544781	PrimaryExpression	'-'		3543683	0					
ANR	3544782	IfStatement	if ( p )		3543683	6					
ANR	3544783	Condition	p	4845:7:121263:121263	3543683	0	True				
ANR	3544784	Identifier	p		3543683	0					
ANR	3544785	CompoundStatement		199:10:5337:5337	3543683	1					
ANR	3544786	ExpressionStatement	op -> sign = - 1	4846:4:121272:121285	3543683	0	True				
ANR	3544787	AssignmentExpression	op -> sign = - 1		3543683	0		=			
ANR	3544788	PtrMemberAccess	op -> sign		3543683	0					
ANR	3544789	Identifier	op		3543683	0					
ANR	3544790	Identifier	sign		3543683	1					
ANR	3544791	UnaryOperationExpression	- 1		3543683	1					
ANR	3544792	UnaryOperator	-		3543683	0					
ANR	3544793	PrimaryExpression	1		3543683	1					
ANR	3544794	ExpressionStatement	str = ++ p	4847:4:121291:121300	3543683	1	True				
ANR	3544795	AssignmentExpression	str = ++ p		3543683	0		=			
ANR	3544796	Identifier	str		3543683	0					
ANR	3544797	UnaryExpression	++ p		3543683	1					
ANR	3544798	IncDec	++		3543683	0					
ANR	3544799	Identifier	p		3543683	1					
ANR	3544800	ExpressionStatement	"op -> immediate = getnum ( a , str )"	4849:3:121310:121341	3543683	7	True				
ANR	3544801	AssignmentExpression	"op -> immediate = getnum ( a , str )"		3543683	0		=			
ANR	3544802	PtrMemberAccess	op -> immediate		3543683	0					
ANR	3544803	Identifier	op		3543683	0					
ANR	3544804	Identifier	immediate		3543683	1					
ANR	3544805	CallExpression	"getnum ( a , str )"		3543683	1					
ANR	3544806	Callee	getnum		3543683	0					
ANR	3544807	Identifier	getnum		3543683	0					
ANR	3544808	ArgumentList	a		3543683	1					
ANR	3544809	Argument	a		3543683	0					
ANR	3544810	Identifier	a		3543683	0					
ANR	3544811	Argument	str		3543683	1					
ANR	3544812	Identifier	str		3543683	0					
ANR	3544813	ElseStatement	else		3543683	0					
ANR	3544814	IfStatement	if ( op -> reg < X86R_UNDEFINED )		3543683	0					
ANR	3544815	Condition	op -> reg < X86R_UNDEFINED	4850:13:121356:121379	3543683	0	True				
ANR	3544816	RelationalExpression	op -> reg < X86R_UNDEFINED		3543683	0		<			
ANR	3544817	PtrMemberAccess	op -> reg		3543683	0					
ANR	3544818	Identifier	op		3543683	0					
ANR	3544819	Identifier	reg		3543683	1					
ANR	3544820	Identifier	X86R_UNDEFINED		3543683	1					
ANR	3544821	CompoundStatement		204:39:5453:5453	3543683	1					
ANR	3544822	ExpressionStatement	"strncpy ( op -> rep_op , str , MAX_REPOP_LENGTH - 1 )"	4851:3:121387:121434	3543683	0	True				
ANR	3544823	CallExpression	"strncpy ( op -> rep_op , str , MAX_REPOP_LENGTH - 1 )"		3543683	0					
ANR	3544824	Callee	strncpy		3543683	0					
ANR	3544825	Identifier	strncpy		3543683	0					
ANR	3544826	ArgumentList	op -> rep_op		3543683	1					
ANR	3544827	Argument	op -> rep_op		3543683	0					
ANR	3544828	PtrMemberAccess	op -> rep_op		3543683	0					
ANR	3544829	Identifier	op		3543683	0					
ANR	3544830	Identifier	rep_op		3543683	1					
ANR	3544831	Argument	str		3543683	1					
ANR	3544832	Identifier	str		3543683	0					
ANR	3544833	Argument	MAX_REPOP_LENGTH - 1		3543683	2					
ANR	3544834	AdditiveExpression	MAX_REPOP_LENGTH - 1		3543683	0		-			
ANR	3544835	Identifier	MAX_REPOP_LENGTH		3543683	0					
ANR	3544836	PrimaryExpression	1		3543683	1					
ANR	3544837	ExpressionStatement	op -> rep_op [ MAX_REPOP_LENGTH - 1 ] = '\\0'	4852:3:121439:121478	3543683	1	True				
ANR	3544838	AssignmentExpression	op -> rep_op [ MAX_REPOP_LENGTH - 1 ] = '\\0'		3543683	0		=			
ANR	3544839	ArrayIndexing	op -> rep_op [ MAX_REPOP_LENGTH - 1 ]		3543683	0					
ANR	3544840	PtrMemberAccess	op -> rep_op		3543683	0					
ANR	3544841	Identifier	op		3543683	0					
ANR	3544842	Identifier	rep_op		3543683	1					
ANR	3544843	AdditiveExpression	MAX_REPOP_LENGTH - 1		3543683	1		-			
ANR	3544844	Identifier	MAX_REPOP_LENGTH		3543683	0					
ANR	3544845	PrimaryExpression	1		3543683	1					
ANR	3544846	PrimaryExpression	'\\0'		3543683	1					
ANR	3544847	ElseStatement	else		3543683	0					
ANR	3544848	CompoundStatement		212:2:5711:5738	3543683	0					
ANR	3544849	ExpressionStatement	op -> type = OT_CONSTANT	4856:2:121598:121620	3543683	0	True				
ANR	3544850	AssignmentExpression	op -> type = OT_CONSTANT		3543683	0		=			
ANR	3544851	PtrMemberAccess	op -> type		3543683	0					
ANR	3544852	Identifier	op		3543683	0					
ANR	3544853	Identifier	type		3543683	1					
ANR	3544854	Identifier	OT_CONSTANT		3543683	1					
ANR	3544855	ExpressionStatement	op -> sign = 1	4857:2:121624:121636	3543683	1	True				
ANR	3544856	AssignmentExpression	op -> sign = 1		3543683	0		=			
ANR	3544857	PtrMemberAccess	op -> sign		3543683	0					
ANR	3544858	Identifier	op		3543683	0					
ANR	3544859	Identifier	sign		3543683	1					
ANR	3544860	PrimaryExpression	1		3543683	1					
ANR	3544861	IdentifierDeclStatement	"char * p = strchr ( str , '-' ) ;"	4858:2:121640:121667	3543683	2	True				
ANR	3544862	IdentifierDecl	"* p = strchr ( str , '-' )"		3543683	0					
ANR	3544863	IdentifierDeclType	char *		3543683	0					
ANR	3544864	Identifier	p		3543683	1					
ANR	3544865	AssignmentExpression	"* p = strchr ( str , '-' )"		3543683	2		=			
ANR	3544866	Identifier	p		3543683	0					
ANR	3544867	CallExpression	"strchr ( str , '-' )"		3543683	1					
ANR	3544868	Callee	strchr		3543683	0					
ANR	3544869	Identifier	strchr		3543683	0					
ANR	3544870	ArgumentList	str		3543683	1					
ANR	3544871	Argument	str		3543683	0					
ANR	3544872	Identifier	str		3543683	0					
ANR	3544873	Argument	'-'		3543683	1					
ANR	3544874	PrimaryExpression	'-'		3543683	0					
ANR	3544875	IfStatement	if ( p )		3543683	3					
ANR	3544876	Condition	p	4859:6:121675:121675	3543683	0	True				
ANR	3544877	Identifier	p		3543683	0					
ANR	3544878	CompoundStatement		213:9:5749:5749	3543683	1					
ANR	3544879	ExpressionStatement	op -> sign = - 1	4860:3:121683:121696	3543683	0	True				
ANR	3544880	AssignmentExpression	op -> sign = - 1		3543683	0		=			
ANR	3544881	PtrMemberAccess	op -> sign		3543683	0					
ANR	3544882	Identifier	op		3543683	0					
ANR	3544883	Identifier	sign		3543683	1					
ANR	3544884	UnaryOperationExpression	- 1		3543683	1					
ANR	3544885	UnaryOperator	-		3543683	0					
ANR	3544886	PrimaryExpression	1		3543683	1					
ANR	3544887	ExpressionStatement	str = ++ p	4861:3:121701:121710	3543683	1	True				
ANR	3544888	AssignmentExpression	str = ++ p		3543683	0		=			
ANR	3544889	Identifier	str		3543683	0					
ANR	3544890	UnaryExpression	++ p		3543683	1					
ANR	3544891	IncDec	++		3543683	0					
ANR	3544892	Identifier	p		3543683	1					
ANR	3544893	ExpressionStatement	"op -> immediate = getnum ( a , str )"	4863:2:121718:121749	3543683	4	True				
ANR	3544894	AssignmentExpression	"op -> immediate = getnum ( a , str )"		3543683	0		=			
ANR	3544895	PtrMemberAccess	op -> immediate		3543683	0					
ANR	3544896	Identifier	op		3543683	0					
ANR	3544897	Identifier	immediate		3543683	1					
ANR	3544898	CallExpression	"getnum ( a , str )"		3543683	1					
ANR	3544899	Callee	getnum		3543683	0					
ANR	3544900	Identifier	getnum		3543683	0					
ANR	3544901	ArgumentList	a		3543683	1					
ANR	3544902	Argument	a		3543683	0					
ANR	3544903	Identifier	a		3543683	0					
ANR	3544904	Argument	str		3543683	1					
ANR	3544905	Identifier	str		3543683	0					
ANR	3544906	ReturnStatement	return nextpos ;	4866:1:121756:121770	3543683	8	True				
ANR	3544907	Identifier	nextpos		3543683	0					
ANR	3544908	ReturnType	static int		3543683	1					
ANR	3544909	Identifier	parseOperand		3543683	2					
ANR	3544910	ParameterList	"RAsm * a , const char * str , Operand * op , bool isrepop"		3543683	3					
ANR	3544911	Parameter	RAsm * a	4647:24:115875:115881	3543683	0	True				
ANR	3544912	ParameterType	RAsm *		3543683	0					
ANR	3544913	Identifier	a		3543683	1					
ANR	3544914	Parameter	const char * str	4647:33:115884:115898	3543683	1	True				
ANR	3544915	ParameterType	const char *		3543683	0					
ANR	3544916	Identifier	str		3543683	1					
ANR	3544917	Parameter	Operand * op	4647:50:115901:115911	3543683	2	True				
ANR	3544918	ParameterType	Operand *		3543683	0					
ANR	3544919	Identifier	op		3543683	1					
ANR	3544920	Parameter	bool isrepop	4647:63:115914:115925	3543683	3	True				
ANR	3544921	ParameterType	bool		3543683	0					
ANR	3544922	Identifier	isrepop		3543683	1					
ANR	3544923	CFGEntryNode	ENTRY		3543683		True				
ANR	3544924	CFGExitNode	EXIT		3543683		True				
ANR	3544925	Symbol	* op -> regs		3543683						
ANR	3544926	Symbol	* op		3543683						
ANR	3544927	Symbol	op -> regs		3543683						
ANR	3544928	Symbol	* op -> scale		3543683						
ANR	3544929	Symbol	strchr		3543683						
ANR	3544930	Symbol	strlen		3543683						
ANR	3544931	Symbol	reg		3543683						
ANR	3544932	Symbol	tmp		3543683						
ANR	3544933	Symbol	op -> dest_size		3543683						
ANR	3544934	Symbol	op -> reg_size		3543683						
ANR	3544935	Symbol	nextpos		3543683						
ANR	3544936	Symbol	* a -> num		3543683						
ANR	3544937	Symbol	OT_BYTE		3543683						
ANR	3544938	Symbol	OT_GPREG		3543683						
ANR	3544939	Symbol	read		3543683						
ANR	3544940	Symbol	NULL		3543683						
ANR	3544941	Symbol	op -> type		3543683						
ANR	3544942	Symbol	OT_SEGMENTREG		3543683						
ANR	3544943	Symbol	op -> sign		3543683						
ANR	3544944	Symbol	* * a		3543683						
ANR	3544945	Symbol	TT_WORD		3543683						
ANR	3544946	Symbol	parseReg		3543683						
ANR	3544947	Symbol	plus		3543683						
ANR	3544948	Symbol	str		3543683						
ANR	3544949	Symbol	op -> offset		3543683						
ANR	3544950	Symbol	core		3543683						
ANR	3544951	Symbol	op -> scale		3543683						
ANR	3544952	Symbol	true		3543683						
ANR	3544953	Symbol	op -> explicit_size		3543683						
ANR	3544954	Symbol	MAX_REPOP_LENGTH		3543683						
ANR	3544955	Symbol	op -> extended		3543683						
ANR	3544956	Symbol	op -> immediate		3543683						
ANR	3544957	Symbol	* pos		3543683						
ANR	3544958	Symbol	minus		3543683						
ANR	3544959	Symbol	last_type		3543683						
ANR	3544960	Symbol	OT_QWORD		3543683						
ANR	3544961	Symbol	flag		3543683						
ANR	3544962	Symbol	* core		3543683						
ANR	3544963	Symbol	reg_type		3543683						
ANR	3544964	Symbol	* reg_index		3543683						
ANR	3544965	Symbol	* * op		3543683						
ANR	3544966	Symbol	* MAX_REPOP_LENGTH		3543683						
ANR	3544967	Symbol	a -> num -> userptr		3543683						
ANR	3544968	Symbol	pos		3543683						
ANR	3544969	Symbol	OT_OWORD		3543683						
ANR	3544970	Symbol	explicit_size		3543683						
ANR	3544971	Symbol	* str		3543683						
ANR	3544972	Symbol	size_token		3543683						
ANR	3544973	Symbol	r_str_ncasecmp		3543683						
ANR	3544974	Symbol	OT_MEMORY		3543683						
ANR	3544975	Symbol	closeB		3543683						
ANR	3544976	Symbol	r_flag_get		3543683						
ANR	3544977	Symbol	a		3543683						
ANR	3544978	Symbol	op		3543683						
ANR	3544979	Symbol	& nextpos		3543683						
ANR	3544980	Symbol	OT_TBYTE		3543683						
ANR	3544981	Symbol	malloc		3543683						
ANR	3544982	Symbol	OT_CONSTANT		3543683						
ANR	3544983	Symbol	OT_WORD		3543683						
ANR	3544984	Symbol	temp		3543683						
ANR	3544985	Symbol	a -> num -> value		3543683						
ANR	3544986	Symbol	* op -> rep_op		3543683						
ANR	3544987	Symbol	& op -> type		3543683						
ANR	3544988	Symbol	false		3543683						
ANR	3544989	Symbol	core -> flags		3543683						
ANR	3544990	Symbol	TT_SPECIAL		3543683						
ANR	3544991	Symbol	a -> num		3543683						
ANR	3544992	Symbol	* a		3543683						
ANR	3544993	Symbol	reg_index		3543683						
ANR	3544994	Symbol	OT_REGTYPE		3543683						
ANR	3544995	Symbol	p		3543683						
ANR	3544996	Symbol	X86R_UNDEFINED		3543683						
ANR	3544997	Symbol	isrepop		3543683						
ANR	3544998	Symbol	op -> rep_op		3543683						
ANR	3544999	Symbol	op -> is_good_flag		3543683						
ANR	3545000	Symbol	getToken		3543683						
ANR	3545001	Symbol	first_reg		3543683						
ANR	3545002	Symbol	getnum		3543683						
ANR	3545003	Symbol	& reg_type		3543683						
ANR	3545004	Symbol	op -> offset_sign		3543683						
ANR	3545005	Symbol	& pos		3543683						
ANR	3545006	Symbol	OT_DWORD		3543683						
ANR	3545007	Symbol	op -> reg		3543683						
ANR	3545008	Function	parseOpcode	4869:0:121775:123094							
ANR	3545009	FunctionDef	"parseOpcode (RAsm * a , const char * op , Opcode * out)"		3545008	0					
ANR	3545010	CompoundStatement		4869:61:121836:123094	3545008	0					
ANR	3545011	ExpressionStatement	out -> has_bnd = false	4870:1:121839:121859	3545008	0	True				
ANR	3545012	AssignmentExpression	out -> has_bnd = false		3545008	0		=			
ANR	3545013	PtrMemberAccess	out -> has_bnd		3545008	0					
ANR	3545014	Identifier	out		3545008	0					
ANR	3545015	Identifier	has_bnd		3545008	1					
ANR	3545016	Identifier	false		3545008	1					
ANR	3545017	IdentifierDeclStatement	bool isrepop = false ;	4871:1:121862:121882	3545008	1	True				
ANR	3545018	IdentifierDecl	isrepop = false		3545008	0					
ANR	3545019	IdentifierDeclType	bool		3545008	0					
ANR	3545020	Identifier	isrepop		3545008	1					
ANR	3545021	AssignmentExpression	isrepop = false		3545008	2		=			
ANR	3545022	Identifier	false		3545008	0					
ANR	3545023	Identifier	false		3545008	1					
ANR	3545024	IfStatement	"if ( ! strncmp ( op , ""bnd "" , 4 ) )"		3545008	2					
ANR	3545025	Condition	"! strncmp ( op , ""bnd "" , 4 )"	4872:5:121889:121912	3545008	0	True				
ANR	3545026	UnaryOperationExpression	"! strncmp ( op , ""bnd "" , 4 )"		3545008	0					
ANR	3545027	UnaryOperator	!		3545008	0					
ANR	3545028	CallExpression	"strncmp ( op , ""bnd "" , 4 )"		3545008	1					
ANR	3545029	Callee	strncmp		3545008	0					
ANR	3545030	Identifier	strncmp		3545008	0					
ANR	3545031	ArgumentList	op		3545008	1					
ANR	3545032	Argument	op		3545008	0					
ANR	3545033	Identifier	op		3545008	0					
ANR	3545034	Argument	"""bnd """		3545008	1					
ANR	3545035	PrimaryExpression	"""bnd """		3545008	0					
ANR	3545036	Argument	4		3545008	2					
ANR	3545037	PrimaryExpression	4		3545008	0					
ANR	3545038	CompoundStatement		4:31:78:78	3545008	1					
ANR	3545039	ExpressionStatement	out -> has_bnd = true	4873:2:121919:121938	3545008	0	True				
ANR	3545040	AssignmentExpression	out -> has_bnd = true		3545008	0		=			
ANR	3545041	PtrMemberAccess	out -> has_bnd		3545008	0					
ANR	3545042	Identifier	out		3545008	0					
ANR	3545043	Identifier	has_bnd		3545008	1					
ANR	3545044	Identifier	true		3545008	1					
ANR	3545045	ExpressionStatement	op += 4	4874:2:121942:121949	3545008	1	True				
ANR	3545046	AssignmentExpression	op += 4		3545008	0		+=			
ANR	3545047	Identifier	op		3545008	0					
ANR	3545048	PrimaryExpression	4		3545008	1					
ANR	3545049	IdentifierDeclStatement	"char * args = strchr ( op , ' ' ) ;"	4876:1:121955:121984	3545008	3	True				
ANR	3545050	IdentifierDecl	"* args = strchr ( op , ' ' )"		3545008	0					
ANR	3545051	IdentifierDeclType	char *		3545008	0					
ANR	3545052	Identifier	args		3545008	1					
ANR	3545053	AssignmentExpression	"* args = strchr ( op , ' ' )"		3545008	2		=			
ANR	3545054	Identifier	args		3545008	0					
ANR	3545055	CallExpression	"strchr ( op , ' ' )"		3545008	1					
ANR	3545056	Callee	strchr		3545008	0					
ANR	3545057	Identifier	strchr		3545008	0					
ANR	3545058	ArgumentList	op		3545008	1					
ANR	3545059	Argument	op		3545008	0					
ANR	3545060	Identifier	op		3545008	0					
ANR	3545061	Argument	' '		3545008	1					
ANR	3545062	PrimaryExpression	' '		3545008	0					
ANR	3545063	ExpressionStatement	"out -> mnemonic = args ? r_str_ndup ( op , args - op ) : strdup ( op )"	4877:1:121987:122050	3545008	4	True				
ANR	3545064	AssignmentExpression	"out -> mnemonic = args ? r_str_ndup ( op , args - op ) : strdup ( op )"		3545008	0		=			
ANR	3545065	PtrMemberAccess	out -> mnemonic		3545008	0					
ANR	3545066	Identifier	out		3545008	0					
ANR	3545067	Identifier	mnemonic		3545008	1					
ANR	3545068	ConditionalExpression	"args ? r_str_ndup ( op , args - op ) : strdup ( op )"		3545008	1					
ANR	3545069	Condition	args		3545008	0					
ANR	3545070	Identifier	args		3545008	0					
ANR	3545071	CallExpression	"r_str_ndup ( op , args - op )"		3545008	1					
ANR	3545072	Callee	r_str_ndup		3545008	0					
ANR	3545073	Identifier	r_str_ndup		3545008	0					
ANR	3545074	ArgumentList	op		3545008	1					
ANR	3545075	Argument	op		3545008	0					
ANR	3545076	Identifier	op		3545008	0					
ANR	3545077	Argument	args - op		3545008	1					
ANR	3545078	AdditiveExpression	args - op		3545008	0		-			
ANR	3545079	Identifier	args		3545008	0					
ANR	3545080	Identifier	op		3545008	1					
ANR	3545081	CallExpression	strdup ( op )		3545008	2					
ANR	3545082	Callee	strdup		3545008	0					
ANR	3545083	Identifier	strdup		3545008	0					
ANR	3545084	ArgumentList	op		3545008	1					
ANR	3545085	Argument	op		3545008	0					
ANR	3545086	Identifier	op		3545008	0					
ANR	3545087	ExpressionStatement	out -> operands [ 0 ] . type = out -> operands [ 1 ] . type = 0	4878:1:122053:122102	3545008	5	True				
ANR	3545088	AssignmentExpression	out -> operands [ 0 ] . type = out -> operands [ 1 ] . type = 0		3545008	0		=			
ANR	3545089	MemberAccess	out -> operands [ 0 ] . type		3545008	0					
ANR	3545090	ArrayIndexing	out -> operands [ 0 ]		3545008	0					
ANR	3545091	PtrMemberAccess	out -> operands		3545008	0					
ANR	3545092	Identifier	out		3545008	0					
ANR	3545093	Identifier	operands		3545008	1					
ANR	3545094	PrimaryExpression	0		3545008	1					
ANR	3545095	Identifier	type		3545008	1					
ANR	3545096	AssignmentExpression	out -> operands [ 1 ] . type = 0		3545008	1		=			
ANR	3545097	MemberAccess	out -> operands [ 1 ] . type		3545008	0					
ANR	3545098	ArrayIndexing	out -> operands [ 1 ]		3545008	0					
ANR	3545099	PtrMemberAccess	out -> operands		3545008	0					
ANR	3545100	Identifier	out		3545008	0					
ANR	3545101	Identifier	operands		3545008	1					
ANR	3545102	PrimaryExpression	1		3545008	1					
ANR	3545103	Identifier	type		3545008	1					
ANR	3545104	PrimaryExpression	0		3545008	1					
ANR	3545105	ExpressionStatement	out -> operands [ 0 ] . extended = out -> operands [ 1 ] . extended = false	4879:1:122105:122166	3545008	6	True				
ANR	3545106	AssignmentExpression	out -> operands [ 0 ] . extended = out -> operands [ 1 ] . extended = false		3545008	0		=			
ANR	3545107	MemberAccess	out -> operands [ 0 ] . extended		3545008	0					
ANR	3545108	ArrayIndexing	out -> operands [ 0 ]		3545008	0					
ANR	3545109	PtrMemberAccess	out -> operands		3545008	0					
ANR	3545110	Identifier	out		3545008	0					
ANR	3545111	Identifier	operands		3545008	1					
ANR	3545112	PrimaryExpression	0		3545008	1					
ANR	3545113	Identifier	extended		3545008	1					
ANR	3545114	AssignmentExpression	out -> operands [ 1 ] . extended = false		3545008	1		=			
ANR	3545115	MemberAccess	out -> operands [ 1 ] . extended		3545008	0					
ANR	3545116	ArrayIndexing	out -> operands [ 1 ]		3545008	0					
ANR	3545117	PtrMemberAccess	out -> operands		3545008	0					
ANR	3545118	Identifier	out		3545008	0					
ANR	3545119	Identifier	operands		3545008	1					
ANR	3545120	PrimaryExpression	1		3545008	1					
ANR	3545121	Identifier	extended		3545008	1					
ANR	3545122	Identifier	false		3545008	1					
ANR	3545123	ExpressionStatement	out -> operands [ 0 ] . reg = out -> operands [ 0 ] . regs [ 0 ] = out -> operands [ 0 ] . regs [ 1 ] = X86R_UNDEFINED	4880:1:122169:122260	3545008	7	True				
ANR	3545124	AssignmentExpression	out -> operands [ 0 ] . reg = out -> operands [ 0 ] . regs [ 0 ] = out -> operands [ 0 ] . regs [ 1 ] = X86R_UNDEFINED		3545008	0		=			
ANR	3545125	MemberAccess	out -> operands [ 0 ] . reg		3545008	0					
ANR	3545126	ArrayIndexing	out -> operands [ 0 ]		3545008	0					
ANR	3545127	PtrMemberAccess	out -> operands		3545008	0					
ANR	3545128	Identifier	out		3545008	0					
ANR	3545129	Identifier	operands		3545008	1					
ANR	3545130	PrimaryExpression	0		3545008	1					
ANR	3545131	Identifier	reg		3545008	1					
ANR	3545132	AssignmentExpression	out -> operands [ 0 ] . regs [ 0 ] = out -> operands [ 0 ] . regs [ 1 ] = X86R_UNDEFINED		3545008	1		=			
ANR	3545133	ArrayIndexing	out -> operands [ 0 ] . regs [ 0 ]		3545008	0					
ANR	3545134	MemberAccess	out -> operands [ 0 ] . regs		3545008	0					
ANR	3545135	ArrayIndexing	out -> operands [ 0 ]		3545008	0					
ANR	3545136	PtrMemberAccess	out -> operands		3545008	0					
ANR	3545137	Identifier	out		3545008	0					
ANR	3545138	Identifier	operands		3545008	1					
ANR	3545139	PrimaryExpression	0		3545008	1					
ANR	3545140	Identifier	regs		3545008	1					
ANR	3545141	PrimaryExpression	0		3545008	1					
ANR	3545142	AssignmentExpression	out -> operands [ 0 ] . regs [ 1 ] = X86R_UNDEFINED		3545008	1		=			
ANR	3545143	ArrayIndexing	out -> operands [ 0 ] . regs [ 1 ]		3545008	0					
ANR	3545144	MemberAccess	out -> operands [ 0 ] . regs		3545008	0					
ANR	3545145	ArrayIndexing	out -> operands [ 0 ]		3545008	0					
ANR	3545146	PtrMemberAccess	out -> operands		3545008	0					
ANR	3545147	Identifier	out		3545008	0					
ANR	3545148	Identifier	operands		3545008	1					
ANR	3545149	PrimaryExpression	0		3545008	1					
ANR	3545150	Identifier	regs		3545008	1					
ANR	3545151	PrimaryExpression	1		3545008	1					
ANR	3545152	Identifier	X86R_UNDEFINED		3545008	1					
ANR	3545153	ExpressionStatement	out -> operands [ 1 ] . reg = out -> operands [ 1 ] . regs [ 0 ] = out -> operands [ 1 ] . regs [ 1 ] = X86R_UNDEFINED	4881:1:122263:122354	3545008	8	True				
ANR	3545154	AssignmentExpression	out -> operands [ 1 ] . reg = out -> operands [ 1 ] . regs [ 0 ] = out -> operands [ 1 ] . regs [ 1 ] = X86R_UNDEFINED		3545008	0		=			
ANR	3545155	MemberAccess	out -> operands [ 1 ] . reg		3545008	0					
ANR	3545156	ArrayIndexing	out -> operands [ 1 ]		3545008	0					
ANR	3545157	PtrMemberAccess	out -> operands		3545008	0					
ANR	3545158	Identifier	out		3545008	0					
ANR	3545159	Identifier	operands		3545008	1					
ANR	3545160	PrimaryExpression	1		3545008	1					
ANR	3545161	Identifier	reg		3545008	1					
ANR	3545162	AssignmentExpression	out -> operands [ 1 ] . regs [ 0 ] = out -> operands [ 1 ] . regs [ 1 ] = X86R_UNDEFINED		3545008	1		=			
ANR	3545163	ArrayIndexing	out -> operands [ 1 ] . regs [ 0 ]		3545008	0					
ANR	3545164	MemberAccess	out -> operands [ 1 ] . regs		3545008	0					
ANR	3545165	ArrayIndexing	out -> operands [ 1 ]		3545008	0					
ANR	3545166	PtrMemberAccess	out -> operands		3545008	0					
ANR	3545167	Identifier	out		3545008	0					
ANR	3545168	Identifier	operands		3545008	1					
ANR	3545169	PrimaryExpression	1		3545008	1					
ANR	3545170	Identifier	regs		3545008	1					
ANR	3545171	PrimaryExpression	0		3545008	1					
ANR	3545172	AssignmentExpression	out -> operands [ 1 ] . regs [ 1 ] = X86R_UNDEFINED		3545008	1		=			
ANR	3545173	ArrayIndexing	out -> operands [ 1 ] . regs [ 1 ]		3545008	0					
ANR	3545174	MemberAccess	out -> operands [ 1 ] . regs		3545008	0					
ANR	3545175	ArrayIndexing	out -> operands [ 1 ]		3545008	0					
ANR	3545176	PtrMemberAccess	out -> operands		3545008	0					
ANR	3545177	Identifier	out		3545008	0					
ANR	3545178	Identifier	operands		3545008	1					
ANR	3545179	PrimaryExpression	1		3545008	1					
ANR	3545180	Identifier	regs		3545008	1					
ANR	3545181	PrimaryExpression	1		3545008	1					
ANR	3545182	Identifier	X86R_UNDEFINED		3545008	1					
ANR	3545183	ExpressionStatement	out -> operands [ 0 ] . immediate = out -> operands [ 1 ] . immediate = 0	4882:1:122357:122416	3545008	9	True				
ANR	3545184	AssignmentExpression	out -> operands [ 0 ] . immediate = out -> operands [ 1 ] . immediate = 0		3545008	0		=			
ANR	3545185	MemberAccess	out -> operands [ 0 ] . immediate		3545008	0					
ANR	3545186	ArrayIndexing	out -> operands [ 0 ]		3545008	0					
ANR	3545187	PtrMemberAccess	out -> operands		3545008	0					
ANR	3545188	Identifier	out		3545008	0					
ANR	3545189	Identifier	operands		3545008	1					
ANR	3545190	PrimaryExpression	0		3545008	1					
ANR	3545191	Identifier	immediate		3545008	1					
ANR	3545192	AssignmentExpression	out -> operands [ 1 ] . immediate = 0		3545008	1		=			
ANR	3545193	MemberAccess	out -> operands [ 1 ] . immediate		3545008	0					
ANR	3545194	ArrayIndexing	out -> operands [ 1 ]		3545008	0					
ANR	3545195	PtrMemberAccess	out -> operands		3545008	0					
ANR	3545196	Identifier	out		3545008	0					
ANR	3545197	Identifier	operands		3545008	1					
ANR	3545198	PrimaryExpression	1		3545008	1					
ANR	3545199	Identifier	immediate		3545008	1					
ANR	3545200	PrimaryExpression	0		3545008	1					
ANR	3545201	ExpressionStatement	out -> operands [ 0 ] . sign = out -> operands [ 1 ] . sign = 1	4883:1:122419:122468	3545008	10	True				
ANR	3545202	AssignmentExpression	out -> operands [ 0 ] . sign = out -> operands [ 1 ] . sign = 1		3545008	0		=			
ANR	3545203	MemberAccess	out -> operands [ 0 ] . sign		3545008	0					
ANR	3545204	ArrayIndexing	out -> operands [ 0 ]		3545008	0					
ANR	3545205	PtrMemberAccess	out -> operands		3545008	0					
ANR	3545206	Identifier	out		3545008	0					
ANR	3545207	Identifier	operands		3545008	1					
ANR	3545208	PrimaryExpression	0		3545008	1					
ANR	3545209	Identifier	sign		3545008	1					
ANR	3545210	AssignmentExpression	out -> operands [ 1 ] . sign = 1		3545008	1		=			
ANR	3545211	MemberAccess	out -> operands [ 1 ] . sign		3545008	0					
ANR	3545212	ArrayIndexing	out -> operands [ 1 ]		3545008	0					
ANR	3545213	PtrMemberAccess	out -> operands		3545008	0					
ANR	3545214	Identifier	out		3545008	0					
ANR	3545215	Identifier	operands		3545008	1					
ANR	3545216	PrimaryExpression	1		3545008	1					
ANR	3545217	Identifier	sign		3545008	1					
ANR	3545218	PrimaryExpression	1		3545008	1					
ANR	3545219	ExpressionStatement	out -> operands [ 0 ] . is_good_flag = out -> operands [ 1 ] . is_good_flag = true	4884:1:122471:122539	3545008	11	True				
ANR	3545220	AssignmentExpression	out -> operands [ 0 ] . is_good_flag = out -> operands [ 1 ] . is_good_flag = true		3545008	0		=			
ANR	3545221	MemberAccess	out -> operands [ 0 ] . is_good_flag		3545008	0					
ANR	3545222	ArrayIndexing	out -> operands [ 0 ]		3545008	0					
ANR	3545223	PtrMemberAccess	out -> operands		3545008	0					
ANR	3545224	Identifier	out		3545008	0					
ANR	3545225	Identifier	operands		3545008	1					
ANR	3545226	PrimaryExpression	0		3545008	1					
ANR	3545227	Identifier	is_good_flag		3545008	1					
ANR	3545228	AssignmentExpression	out -> operands [ 1 ] . is_good_flag = true		3545008	1		=			
ANR	3545229	MemberAccess	out -> operands [ 1 ] . is_good_flag		3545008	0					
ANR	3545230	ArrayIndexing	out -> operands [ 1 ]		3545008	0					
ANR	3545231	PtrMemberAccess	out -> operands		3545008	0					
ANR	3545232	Identifier	out		3545008	0					
ANR	3545233	Identifier	operands		3545008	1					
ANR	3545234	PrimaryExpression	1		3545008	1					
ANR	3545235	Identifier	is_good_flag		3545008	1					
ANR	3545236	Identifier	true		3545008	1					
ANR	3545237	ExpressionStatement	out -> is_short = false	4885:1:122542:122563	3545008	12	True				
ANR	3545238	AssignmentExpression	out -> is_short = false		3545008	0		=			
ANR	3545239	PtrMemberAccess	out -> is_short		3545008	0					
ANR	3545240	Identifier	out		3545008	0					
ANR	3545241	Identifier	is_short		3545008	1					
ANR	3545242	Identifier	false		3545008	1					
ANR	3545243	ExpressionStatement	out -> operands_count = 0	4886:1:122566:122589	3545008	13	True				
ANR	3545244	AssignmentExpression	out -> operands_count = 0		3545008	0		=			
ANR	3545245	PtrMemberAccess	out -> operands_count		3545008	0					
ANR	3545246	Identifier	out		3545008	0					
ANR	3545247	Identifier	operands_count		3545008	1					
ANR	3545248	PrimaryExpression	0		3545008	1					
ANR	3545249	IfStatement	if ( args )		3545008	14					
ANR	3545250	Condition	args	4887:5:122596:122599	3545008	0	True				
ANR	3545251	Identifier	args		3545008	0					
ANR	3545252	CompoundStatement		19:11:765:765	3545008	1					
ANR	3545253	ExpressionStatement	args ++	4888:2:122606:122612	3545008	0	True				
ANR	3545254	PostIncDecOperationExpression	args ++		3545008	0					
ANR	3545255	Identifier	args		3545008	0					
ANR	3545256	IncDec	++		3545008	1					
ANR	3545257	ElseStatement	else		3545008	0					
ANR	3545258	CompoundStatement		21:8:785:785	3545008	0					
ANR	3545259	ReturnStatement	return 1 ;	4890:2:122626:122634	3545008	0	True				
ANR	3545260	PrimaryExpression	1		3545008	0					
ANR	3545261	IfStatement	"if ( ! r_str_ncasecmp ( args , ""short"" , 5 ) )"		3545008	15					
ANR	3545262	Condition	"! r_str_ncasecmp ( args , ""short"" , 5 )"	4892:5:122644:122677	3545008	0	True				
ANR	3545263	UnaryOperationExpression	"! r_str_ncasecmp ( args , ""short"" , 5 )"		3545008	0					
ANR	3545264	UnaryOperator	!		3545008	0					
ANR	3545265	CallExpression	"r_str_ncasecmp ( args , ""short"" , 5 )"		3545008	1					
ANR	3545266	Callee	r_str_ncasecmp		3545008	0					
ANR	3545267	Identifier	r_str_ncasecmp		3545008	0					
ANR	3545268	ArgumentList	args		3545008	1					
ANR	3545269	Argument	args		3545008	0					
ANR	3545270	Identifier	args		3545008	0					
ANR	3545271	Argument	"""short"""		3545008	1					
ANR	3545272	PrimaryExpression	"""short"""		3545008	0					
ANR	3545273	Argument	5		3545008	2					
ANR	3545274	PrimaryExpression	5		3545008	0					
ANR	3545275	CompoundStatement		24:41:843:843	3545008	1					
ANR	3545276	ExpressionStatement	out -> is_short = true	4893:2:122684:122704	3545008	0	True				
ANR	3545277	AssignmentExpression	out -> is_short = true		3545008	0		=			
ANR	3545278	PtrMemberAccess	out -> is_short		3545008	0					
ANR	3545279	Identifier	out		3545008	0					
ANR	3545280	Identifier	is_short		3545008	1					
ANR	3545281	Identifier	true		3545008	1					
ANR	3545282	ExpressionStatement	args += 5	4894:2:122708:122717	3545008	1	True				
ANR	3545283	AssignmentExpression	args += 5		3545008	0		+=			
ANR	3545284	Identifier	args		3545008	0					
ANR	3545285	PrimaryExpression	5		3545008	1					
ANR	3545286	IfStatement	"if ( ! strncmp ( out -> mnemonic , ""rep"" , 3 ) )"		3545008	16					
ANR	3545287	Condition	"! strncmp ( out -> mnemonic , ""rep"" , 3 )"	4896:5:122727:122760	3545008	0	True				
ANR	3545288	UnaryOperationExpression	"! strncmp ( out -> mnemonic , ""rep"" , 3 )"		3545008	0					
ANR	3545289	UnaryOperator	!		3545008	0					
ANR	3545290	CallExpression	"strncmp ( out -> mnemonic , ""rep"" , 3 )"		3545008	1					
ANR	3545291	Callee	strncmp		3545008	0					
ANR	3545292	Identifier	strncmp		3545008	0					
ANR	3545293	ArgumentList	out -> mnemonic		3545008	1					
ANR	3545294	Argument	out -> mnemonic		3545008	0					
ANR	3545295	PtrMemberAccess	out -> mnemonic		3545008	0					
ANR	3545296	Identifier	out		3545008	0					
ANR	3545297	Identifier	mnemonic		3545008	1					
ANR	3545298	Argument	"""rep"""		3545008	1					
ANR	3545299	PrimaryExpression	"""rep"""		3545008	0					
ANR	3545300	Argument	3		3545008	2					
ANR	3545301	PrimaryExpression	3		3545008	0					
ANR	3545302	CompoundStatement		28:41:926:926	3545008	1					
ANR	3545303	ExpressionStatement	isrepop = true	4897:2:122767:122781	3545008	0	True				
ANR	3545304	AssignmentExpression	isrepop = true		3545008	0		=			
ANR	3545305	Identifier	isrepop		3545008	0					
ANR	3545306	Identifier	true		3545008	1					
ANR	3545307	ExpressionStatement	"parseOperand ( a , args , & ( out -> operands [ 0 ] ) , isrepop )"	4899:1:122787:122839	3545008	17	True				
ANR	3545308	CallExpression	"parseOperand ( a , args , & ( out -> operands [ 0 ] ) , isrepop )"		3545008	0					
ANR	3545309	Callee	parseOperand		3545008	0					
ANR	3545310	Identifier	parseOperand		3545008	0					
ANR	3545311	ArgumentList	a		3545008	1					
ANR	3545312	Argument	a		3545008	0					
ANR	3545313	Identifier	a		3545008	0					
ANR	3545314	Argument	args		3545008	1					
ANR	3545315	Identifier	args		3545008	0					
ANR	3545316	Argument	& ( out -> operands [ 0 ] )		3545008	2					
ANR	3545317	UnaryOperationExpression	& ( out -> operands [ 0 ] )		3545008	0					
ANR	3545318	UnaryOperator	&		3545008	0					
ANR	3545319	ArrayIndexing	out -> operands [ 0 ]		3545008	1					
ANR	3545320	PtrMemberAccess	out -> operands		3545008	0					
ANR	3545321	Identifier	out		3545008	0					
ANR	3545322	Identifier	operands		3545008	1					
ANR	3545323	PrimaryExpression	0		3545008	1					
ANR	3545324	Argument	isrepop		3545008	3					
ANR	3545325	Identifier	isrepop		3545008	0					
ANR	3545326	ExpressionStatement	out -> operands_count = 1	4900:1:122842:122865	3545008	18	True				
ANR	3545327	AssignmentExpression	out -> operands_count = 1		3545008	0		=			
ANR	3545328	PtrMemberAccess	out -> operands_count		3545008	0					
ANR	3545329	Identifier	out		3545008	0					
ANR	3545330	Identifier	operands_count		3545008	1					
ANR	3545331	PrimaryExpression	1		3545008	1					
ANR	3545332	WhileStatement	while ( out -> operands_count < MAX_OPERANDS )		3545008	19					
ANR	3545333	Condition	out -> operands_count < MAX_OPERANDS	4901:8:122875:122908	3545008	0	True				
ANR	3545334	RelationalExpression	out -> operands_count < MAX_OPERANDS		3545008	0		<			
ANR	3545335	PtrMemberAccess	out -> operands_count		3545008	0					
ANR	3545336	Identifier	out		3545008	0					
ANR	3545337	Identifier	operands_count		3545008	1					
ANR	3545338	Identifier	MAX_OPERANDS		3545008	1					
ANR	3545339	CompoundStatement		33:44:1074:1074	3545008	1					
ANR	3545340	ExpressionStatement	"args = strchr ( args , ',' )"	4902:2:122915:122940	3545008	0	True				
ANR	3545341	AssignmentExpression	"args = strchr ( args , ',' )"		3545008	0		=			
ANR	3545342	Identifier	args		3545008	0					
ANR	3545343	CallExpression	"strchr ( args , ',' )"		3545008	1					
ANR	3545344	Callee	strchr		3545008	0					
ANR	3545345	Identifier	strchr		3545008	0					
ANR	3545346	ArgumentList	args		3545008	1					
ANR	3545347	Argument	args		3545008	0					
ANR	3545348	Identifier	args		3545008	0					
ANR	3545349	Argument	"','"		3545008	1					
ANR	3545350	PrimaryExpression	"','"		3545008	0					
ANR	3545351	IfStatement	if ( ! args )		3545008	1					
ANR	3545352	Condition	! args	4903:6:122948:122952	3545008	0	True				
ANR	3545353	UnaryOperationExpression	! args		3545008	0					
ANR	3545354	UnaryOperator	!		3545008	0					
ANR	3545355	Identifier	args		3545008	1					
ANR	3545356	CompoundStatement		35:13:1118:1118	3545008	1					
ANR	3545357	BreakStatement	break ;	4904:3:122960:122965	3545008	0	True				
ANR	3545358	ExpressionStatement	args ++	4906:2:122973:122979	3545008	2	True				
ANR	3545359	PostIncDecOperationExpression	args ++		3545008	0					
ANR	3545360	Identifier	args		3545008	0					
ANR	3545361	IncDec	++		3545008	1					
ANR	3545362	ExpressionStatement	"parseOperand ( a , args , & ( out -> operands [ out -> operands_count ] ) , isrepop )"	4907:2:122983:123053	3545008	3	True				
ANR	3545363	CallExpression	"parseOperand ( a , args , & ( out -> operands [ out -> operands_count ] ) , isrepop )"		3545008	0					
ANR	3545364	Callee	parseOperand		3545008	0					
ANR	3545365	Identifier	parseOperand		3545008	0					
ANR	3545366	ArgumentList	a		3545008	1					
ANR	3545367	Argument	a		3545008	0					
ANR	3545368	Identifier	a		3545008	0					
ANR	3545369	Argument	args		3545008	1					
ANR	3545370	Identifier	args		3545008	0					
ANR	3545371	Argument	& ( out -> operands [ out -> operands_count ] )		3545008	2					
ANR	3545372	UnaryOperationExpression	& ( out -> operands [ out -> operands_count ] )		3545008	0					
ANR	3545373	UnaryOperator	&		3545008	0					
ANR	3545374	ArrayIndexing	out -> operands [ out -> operands_count ]		3545008	1					
ANR	3545375	PtrMemberAccess	out -> operands		3545008	0					
ANR	3545376	Identifier	out		3545008	0					
ANR	3545377	Identifier	operands		3545008	1					
ANR	3545378	PtrMemberAccess	out -> operands_count		3545008	1					
ANR	3545379	Identifier	out		3545008	0					
ANR	3545380	Identifier	operands_count		3545008	1					
ANR	3545381	Argument	isrepop		3545008	3					
ANR	3545382	Identifier	isrepop		3545008	0					
ANR	3545383	ExpressionStatement	out -> operands_count ++	4908:2:123057:123078	3545008	4	True				
ANR	3545384	PostIncDecOperationExpression	out -> operands_count ++		3545008	0					
ANR	3545385	PtrMemberAccess	out -> operands_count		3545008	0					
ANR	3545386	Identifier	out		3545008	0					
ANR	3545387	Identifier	operands_count		3545008	1					
ANR	3545388	IncDec	++		3545008	1					
ANR	3545389	ReturnStatement	return 0 ;	4910:1:123084:123092	3545008	20	True				
ANR	3545390	PrimaryExpression	0		3545008	0					
ANR	3545391	ReturnType	static int		3545008	1					
ANR	3545392	Identifier	parseOpcode		3545008	2					
ANR	3545393	ParameterList	"RAsm * a , const char * op , Opcode * out"		3545008	3					
ANR	3545394	Parameter	RAsm * a	4869:23:121798:121804	3545008	0	True				
ANR	3545395	ParameterType	RAsm *		3545008	0					
ANR	3545396	Identifier	a		3545008	1					
ANR	3545397	Parameter	const char * op	4869:32:121807:121820	3545008	1	True				
ANR	3545398	ParameterType	const char *		3545008	0					
ANR	3545399	Identifier	op		3545008	1					
ANR	3545400	Parameter	Opcode * out	4869:48:121823:121833	3545008	2	True				
ANR	3545401	ParameterType	Opcode *		3545008	0					
ANR	3545402	Identifier	out		3545008	1					
ANR	3545403	CFGEntryNode	ENTRY		3545008		True				
ANR	3545404	CFGExitNode	EXIT		3545008		True				
ANR	3545405	Symbol	out -> operands [ 0 ] . sign		3545008						
ANR	3545406	Symbol	out -> has_bnd		3545008						
ANR	3545407	Symbol	r_str_ndup		3545008						
ANR	3545408	Symbol	out -> mnemonic		3545008						
ANR	3545409	Symbol	* * out -> operands		3545008						
ANR	3545410	Symbol	* out -> operands [ 0 ] . regs		3545008						
ANR	3545411	Symbol	out -> operands [ 1 ] . regs		3545008						
ANR	3545412	Symbol	strchr		3545008						
ANR	3545413	Symbol	* * * out		3545008						
ANR	3545414	Symbol	out		3545008						
ANR	3545415	Symbol	out -> operands		3545008						
ANR	3545416	Symbol	strncmp		3545008						
ANR	3545417	Symbol	MAX_OPERANDS		3545008						
ANR	3545418	Symbol	out -> operands [ 0 ] . immediate		3545008						
ANR	3545419	Symbol	out -> operands [ 1 ] . reg		3545008						
ANR	3545420	Symbol	out -> operands [ 1 ] . type		3545008						
ANR	3545421	Symbol	out -> operands [ 1 ] . sign		3545008						
ANR	3545422	Symbol	r_str_ncasecmp		3545008						
ANR	3545423	Symbol	out -> operands [ 0 ] . regs		3545008						
ANR	3545424	Symbol	out -> operands [ 0 ] . is_good_flag		3545008						
ANR	3545425	Symbol	a		3545008						
ANR	3545426	Symbol	op		3545008						
ANR	3545427	Symbol	* * out		3545008						
ANR	3545428	Symbol	out -> operands [ 0 ] . extended		3545008						
ANR	3545429	Symbol	false		3545008						
ANR	3545430	Symbol	out -> operands [ 1 ] . extended		3545008						
ANR	3545431	Symbol	out -> is_short		3545008						
ANR	3545432	Symbol	out -> operands [ 0 ] . reg		3545008						
ANR	3545433	Symbol	* out -> operands [ 1 ] . regs		3545008						
ANR	3545434	Symbol	out -> operands [ 1 ] . is_good_flag		3545008						
ANR	3545435	Symbol	args		3545008						
ANR	3545436	Symbol	* out -> operands		3545008						
ANR	3545437	Symbol	X86R_UNDEFINED		3545008						
ANR	3545438	Symbol	out -> operands_count		3545008						
ANR	3545439	Symbol	isrepop		3545008						
ANR	3545440	Symbol	* out		3545008						
ANR	3545441	Symbol	true		3545008						
ANR	3545442	Symbol	out -> operands [ 1 ] . immediate		3545008						
ANR	3545443	Symbol	strdup		3545008						
ANR	3545444	Symbol	out -> operands [ 0 ] . type		3545008						
ANR	3545445	Function	getnum	4913:0:123097:123228							
ANR	3545446	FunctionDef	"getnum (RAsm * a , const char * s)"		3545445	0					
ANR	3545447	CompoundStatement		4913:43:123140:123228	3545445	0					
ANR	3545448	IfStatement	if ( ! s )		3545445	0					
ANR	3545449	Condition	! s	4914:5:123147:123148	3545445	0	True				
ANR	3545450	UnaryOperationExpression	! s		3545445	0					
ANR	3545451	UnaryOperator	!		3545445	0					
ANR	3545452	Identifier	s		3545445	1					
ANR	3545453	CompoundStatement		2:9:10:10	3545445	1					
ANR	3545454	ReturnStatement	return 0 ;	4915:2:123155:123163	3545445	0	True				
ANR	3545455	PrimaryExpression	0		3545445	0					
ANR	3545456	IfStatement	if ( * s == '$' )		3545445	1					
ANR	3545457	Condition	* s == '$'	4917:5:123173:123181	3545445	0	True				
ANR	3545458	EqualityExpression	* s == '$'		3545445	0		==			
ANR	3545459	UnaryOperationExpression	* s		3545445	0					
ANR	3545460	UnaryOperator	*		3545445	0					
ANR	3545461	Identifier	s		3545445	1					
ANR	3545462	PrimaryExpression	'$'		3545445	1					
ANR	3545463	CompoundStatement		5:16:43:43	3545445	1					
ANR	3545464	ExpressionStatement	s ++	4918:2:123188:123191	3545445	0	True				
ANR	3545465	PostIncDecOperationExpression	s ++		3545445	0					
ANR	3545466	Identifier	s		3545445	0					
ANR	3545467	IncDec	++		3545445	1					
ANR	3545468	ReturnStatement	"return r_num_math ( a -> num , s ) ;"	4920:1:123197:123226	3545445	2	True				
ANR	3545469	CallExpression	"r_num_math ( a -> num , s )"		3545445	0					
ANR	3545470	Callee	r_num_math		3545445	0					
ANR	3545471	Identifier	r_num_math		3545445	0					
ANR	3545472	ArgumentList	a -> num		3545445	1					
ANR	3545473	Argument	a -> num		3545445	0					
ANR	3545474	PtrMemberAccess	a -> num		3545445	0					
ANR	3545475	Identifier	a		3545445	0					
ANR	3545476	Identifier	num		3545445	1					
ANR	3545477	Argument	s		3545445	1					
ANR	3545478	Identifier	s		3545445	0					
ANR	3545479	ReturnType	static ut64		3545445	1					
ANR	3545480	Identifier	getnum		3545445	2					
ANR	3545481	ParameterList	"RAsm * a , const char * s"		3545445	3					
ANR	3545482	Parameter	RAsm * a	4913:19:123116:123122	3545445	0	True				
ANR	3545483	ParameterType	RAsm *		3545445	0					
ANR	3545484	Identifier	a		3545445	1					
ANR	3545485	Parameter	const char * s	4913:28:123125:123137	3545445	1	True				
ANR	3545486	ParameterType	const char *		3545445	0					
ANR	3545487	Identifier	s		3545445	1					
ANR	3545488	CFGEntryNode	ENTRY		3545445		True				
ANR	3545489	CFGExitNode	EXIT		3545445		True				
ANR	3545490	Symbol	a		3545445						
ANR	3545491	Symbol	s		3545445						
ANR	3545492	Symbol	* a		3545445						
ANR	3545493	Symbol	a -> num		3545445						
ANR	3545494	Symbol	* s		3545445						
ANR	3545495	Symbol	r_num_math		3545445						
ANR	3545496	Function	oprep	4923:0:123231:124489							
ANR	3545497	FunctionDef	"oprep (RAsm * a , ut8 * data , const Opcode * op)"		3545496	0					
ANR	3545498	CompoundStatement		4923:55:123286:124489	3545496	0					
ANR	3545499	IdentifierDeclStatement	int l = 0 ;	4924:1:123289:123298	3545496	0	True				
ANR	3545500	IdentifierDecl	l = 0		3545496	0					
ANR	3545501	IdentifierDeclType	int		3545496	0					
ANR	3545502	Identifier	l		3545496	1					
ANR	3545503	AssignmentExpression	l = 0		3545496	2		=			
ANR	3545504	Identifier	l		3545496	0					
ANR	3545505	PrimaryExpression	0		3545496	1					
ANR	3545506	IdentifierDeclStatement	LookupTable * lt_ptr ;	4925:1:123301:123320	3545496	1	True				
ANR	3545507	IdentifierDecl	* lt_ptr		3545496	0					
ANR	3545508	IdentifierDeclType	LookupTable *		3545496	0					
ANR	3545509	Identifier	lt_ptr		3545496	1					
ANR	3545510	IdentifierDeclStatement	int retval ;	4926:1:123323:123333	3545496	2	True				
ANR	3545511	IdentifierDecl	retval		3545496	0					
ANR	3545512	IdentifierDeclType	int		3545496	0					
ANR	3545513	Identifier	retval		3545496	1					
ANR	3545514	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""rep"" ) || ! strcmp ( op -> mnemonic , ""repe"" ) || ! strcmp ( op -> mnemonic , ""repz"" ) )"		3545496	3					
ANR	3545515	Condition	"! strcmp ( op -> mnemonic , ""rep"" ) || ! strcmp ( op -> mnemonic , ""repe"" ) || ! strcmp ( op -> mnemonic , ""repz"" )"	4927:5:123340:123446	3545496	0	True				
ANR	3545516	OrExpression	"! strcmp ( op -> mnemonic , ""rep"" ) || ! strcmp ( op -> mnemonic , ""repe"" ) || ! strcmp ( op -> mnemonic , ""repz"" )"		3545496	0		||			
ANR	3545517	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""rep"" )"		3545496	0					
ANR	3545518	UnaryOperator	!		3545496	0					
ANR	3545519	CallExpression	"strcmp ( op -> mnemonic , ""rep"" )"		3545496	1					
ANR	3545520	Callee	strcmp		3545496	0					
ANR	3545521	Identifier	strcmp		3545496	0					
ANR	3545522	ArgumentList	op -> mnemonic		3545496	1					
ANR	3545523	Argument	op -> mnemonic		3545496	0					
ANR	3545524	PtrMemberAccess	op -> mnemonic		3545496	0					
ANR	3545525	Identifier	op		3545496	0					
ANR	3545526	Identifier	mnemonic		3545496	1					
ANR	3545527	Argument	"""rep"""		3545496	1					
ANR	3545528	PrimaryExpression	"""rep"""		3545496	0					
ANR	3545529	OrExpression	"! strcmp ( op -> mnemonic , ""repe"" ) || ! strcmp ( op -> mnemonic , ""repz"" )"		3545496	1		||			
ANR	3545530	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""repe"" )"		3545496	0					
ANR	3545531	UnaryOperator	!		3545496	0					
ANR	3545532	CallExpression	"strcmp ( op -> mnemonic , ""repe"" )"		3545496	1					
ANR	3545533	Callee	strcmp		3545496	0					
ANR	3545534	Identifier	strcmp		3545496	0					
ANR	3545535	ArgumentList	op -> mnemonic		3545496	1					
ANR	3545536	Argument	op -> mnemonic		3545496	0					
ANR	3545537	PtrMemberAccess	op -> mnemonic		3545496	0					
ANR	3545538	Identifier	op		3545496	0					
ANR	3545539	Identifier	mnemonic		3545496	1					
ANR	3545540	Argument	"""repe"""		3545496	1					
ANR	3545541	PrimaryExpression	"""repe"""		3545496	0					
ANR	3545542	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""repz"" )"		3545496	1					
ANR	3545543	UnaryOperator	!		3545496	0					
ANR	3545544	CallExpression	"strcmp ( op -> mnemonic , ""repz"" )"		3545496	1					
ANR	3545545	Callee	strcmp		3545496	0					
ANR	3545546	Identifier	strcmp		3545496	0					
ANR	3545547	ArgumentList	op -> mnemonic		3545496	1					
ANR	3545548	Argument	op -> mnemonic		3545496	0					
ANR	3545549	PtrMemberAccess	op -> mnemonic		3545496	0					
ANR	3545550	Identifier	op		3545496	0					
ANR	3545551	Identifier	mnemonic		3545496	1					
ANR	3545552	Argument	"""repz"""		3545496	1					
ANR	3545553	PrimaryExpression	"""repz"""		3545496	0					
ANR	3545554	CompoundStatement		7:37:162:162	3545496	1					
ANR	3545555	ExpressionStatement	data [ l ++ ] = 0xf3	4930:2:123453:123469	3545496	0	True				
ANR	3545556	AssignmentExpression	data [ l ++ ] = 0xf3		3545496	0		=			
ANR	3545557	ArrayIndexing	data [ l ++ ]		3545496	0					
ANR	3545558	Identifier	data		3545496	0					
ANR	3545559	PostIncDecOperationExpression	l ++		3545496	1					
ANR	3545560	Identifier	l		3545496	0					
ANR	3545561	IncDec	++		3545496	1					
ANR	3545562	PrimaryExpression	0xf3		3545496	1					
ANR	3545563	ElseStatement	else		3545496	0					
ANR	3545564	IfStatement	"if ( ! strcmp ( op -> mnemonic , ""repne"" ) || ! strcmp ( op -> mnemonic , ""repnz"" ) )"		3545496	0					
ANR	3545565	Condition	"! strcmp ( op -> mnemonic , ""repne"" ) || ! strcmp ( op -> mnemonic , ""repnz"" )"	4931:12:123483:123560	3545496	0	True				
ANR	3545566	OrExpression	"! strcmp ( op -> mnemonic , ""repne"" ) || ! strcmp ( op -> mnemonic , ""repnz"" )"		3545496	0		||			
ANR	3545567	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""repne"" )"		3545496	0					
ANR	3545568	UnaryOperator	!		3545496	0					
ANR	3545569	CallExpression	"strcmp ( op -> mnemonic , ""repne"" )"		3545496	1					
ANR	3545570	Callee	strcmp		3545496	0					
ANR	3545571	Identifier	strcmp		3545496	0					
ANR	3545572	ArgumentList	op -> mnemonic		3545496	1					
ANR	3545573	Argument	op -> mnemonic		3545496	0					
ANR	3545574	PtrMemberAccess	op -> mnemonic		3545496	0					
ANR	3545575	Identifier	op		3545496	0					
ANR	3545576	Identifier	mnemonic		3545496	1					
ANR	3545577	Argument	"""repne"""		3545496	1					
ANR	3545578	PrimaryExpression	"""repne"""		3545496	0					
ANR	3545579	UnaryOperationExpression	"! strcmp ( op -> mnemonic , ""repnz"" )"		3545496	1					
ANR	3545580	UnaryOperator	!		3545496	0					
ANR	3545581	CallExpression	"strcmp ( op -> mnemonic , ""repnz"" )"		3545496	1					
ANR	3545582	Callee	strcmp		3545496	0					
ANR	3545583	Identifier	strcmp		3545496	0					
ANR	3545584	ArgumentList	op -> mnemonic		3545496	1					
ANR	3545585	Argument	op -> mnemonic		3545496	0					
ANR	3545586	PtrMemberAccess	op -> mnemonic		3545496	0					
ANR	3545587	Identifier	op		3545496	0					
ANR	3545588	Identifier	mnemonic		3545496	1					
ANR	3545589	Argument	"""repnz"""		3545496	1					
ANR	3545590	PrimaryExpression	"""repnz"""		3545496	0					
ANR	3545591	CompoundStatement		10:45:276:276	3545496	1					
ANR	3545592	ExpressionStatement	data [ l ++ ] = 0xf2	4933:2:123567:123583	3545496	0	True				
ANR	3545593	AssignmentExpression	data [ l ++ ] = 0xf2		3545496	0		=			
ANR	3545594	ArrayIndexing	data [ l ++ ]		3545496	0					
ANR	3545595	Identifier	data		3545496	0					
ANR	3545596	PostIncDecOperationExpression	l ++		3545496	1					
ANR	3545597	Identifier	l		3545496	0					
ANR	3545598	IncDec	++		3545496	1					
ANR	3545599	PrimaryExpression	0xf2		3545496	1					
ANR	3545600	IdentifierDeclStatement	Opcode instr = { 0 } ;	4935:1:123589:123607	3545496	4	True				
ANR	3545601	IdentifierDecl	instr = { 0 }		3545496	0					
ANR	3545602	IdentifierDeclType	Opcode		3545496	0					
ANR	3545603	Identifier	instr		3545496	1					
ANR	3545604	AssignmentExpression	instr = { 0 }		3545496	2		=			
ANR	3545605	Identifier	instr		3545496	0					
ANR	3545606	InitializerList	0		3545496	1					
ANR	3545607	PrimaryExpression	0		3545496	0					
ANR	3545608	ExpressionStatement	"parseOpcode ( a , op -> operands [ 0 ] . rep_op , & instr )"	4936:1:123610:123657	3545496	5	True				
ANR	3545609	CallExpression	"parseOpcode ( a , op -> operands [ 0 ] . rep_op , & instr )"		3545496	0					
ANR	3545610	Callee	parseOpcode		3545496	0					
ANR	3545611	Identifier	parseOpcode		3545496	0					
ANR	3545612	ArgumentList	a		3545496	1					
ANR	3545613	Argument	a		3545496	0					
ANR	3545614	Identifier	a		3545496	0					
ANR	3545615	Argument	op -> operands [ 0 ] . rep_op		3545496	1					
ANR	3545616	MemberAccess	op -> operands [ 0 ] . rep_op		3545496	0					
ANR	3545617	ArrayIndexing	op -> operands [ 0 ]		3545496	0					
ANR	3545618	PtrMemberAccess	op -> operands		3545496	0					
ANR	3545619	Identifier	op		3545496	0					
ANR	3545620	Identifier	operands		3545496	1					
ANR	3545621	PrimaryExpression	0		3545496	1					
ANR	3545622	Identifier	rep_op		3545496	1					
ANR	3545623	Argument	& instr		3545496	2					
ANR	3545624	UnaryOperationExpression	& instr		3545496	0					
ANR	3545625	UnaryOperator	&		3545496	0					
ANR	3545626	Identifier	instr		3545496	1					
ANR	3545627	ForStatement	"for ( lt_ptr = oplookup ; strcmp ( lt_ptr -> mnemonic , ""null"" ) ; lt_ptr ++ )"		3545496	6					
ANR	3545628	ForInit	lt_ptr = oplookup ;	4938:6:123666:123683	3545496	0	True				
ANR	3545629	AssignmentExpression	lt_ptr = oplookup		3545496	0		=			
ANR	3545630	Identifier	lt_ptr		3545496	0					
ANR	3545631	Identifier	oplookup		3545496	1					
ANR	3545632	Condition	"strcmp ( lt_ptr -> mnemonic , ""null"" )"	4938:25:123685:123717	3545496	1	True				
ANR	3545633	CallExpression	"strcmp ( lt_ptr -> mnemonic , ""null"" )"		3545496	0					
ANR	3545634	Callee	strcmp		3545496	0					
ANR	3545635	Identifier	strcmp		3545496	0					
ANR	3545636	ArgumentList	lt_ptr -> mnemonic		3545496	1					
ANR	3545637	Argument	lt_ptr -> mnemonic		3545496	0					
ANR	3545638	PtrMemberAccess	lt_ptr -> mnemonic		3545496	0					
ANR	3545639	Identifier	lt_ptr		3545496	0					
ANR	3545640	Identifier	mnemonic		3545496	1					
ANR	3545641	Argument	"""null"""		3545496	1					
ANR	3545642	PrimaryExpression	"""null"""		3545496	0					
ANR	3545643	PostIncDecOperationExpression	lt_ptr ++	4938:60:123720:123727	3545496	2	True				
ANR	3545644	Identifier	lt_ptr		3545496	0					
ANR	3545645	IncDec	++		3545496	1					
ANR	3545646	CompoundStatement		16:70:443:443	3545496	3					
ANR	3545647	IfStatement	"if ( ! r_str_casecmp ( instr . mnemonic , lt_ptr -> mnemonic ) )"		3545496	0					
ANR	3545648	Condition	"! r_str_casecmp ( instr . mnemonic , lt_ptr -> mnemonic )"	4939:6:123738:123786	3545496	0	True				
ANR	3545649	UnaryOperationExpression	"! r_str_casecmp ( instr . mnemonic , lt_ptr -> mnemonic )"		3545496	0					
ANR	3545650	UnaryOperator	!		3545496	0					
ANR	3545651	CallExpression	"r_str_casecmp ( instr . mnemonic , lt_ptr -> mnemonic )"		3545496	1					
ANR	3545652	Callee	r_str_casecmp		3545496	0					
ANR	3545653	Identifier	r_str_casecmp		3545496	0					
ANR	3545654	ArgumentList	instr . mnemonic		3545496	1					
ANR	3545655	Argument	instr . mnemonic		3545496	0					
ANR	3545656	MemberAccess	instr . mnemonic		3545496	0					
ANR	3545657	Identifier	instr		3545496	0					
ANR	3545658	Identifier	mnemonic		3545496	1					
ANR	3545659	Argument	lt_ptr -> mnemonic		3545496	1					
ANR	3545660	PtrMemberAccess	lt_ptr -> mnemonic		3545496	0					
ANR	3545661	Identifier	lt_ptr		3545496	0					
ANR	3545662	Identifier	mnemonic		3545496	1					
ANR	3545663	CompoundStatement		17:57:502:502	3545496	1					
ANR	3545664	IfStatement	if ( lt_ptr -> opcode > 0 )		3545496	0					
ANR	3545665	Condition	lt_ptr -> opcode > 0	4940:7:123798:123815	3545496	0	True				
ANR	3545666	RelationalExpression	lt_ptr -> opcode > 0		3545496	0		>			
ANR	3545667	PtrMemberAccess	lt_ptr -> opcode		3545496	0					
ANR	3545668	Identifier	lt_ptr		3545496	0					
ANR	3545669	Identifier	opcode		3545496	1					
ANR	3545670	PrimaryExpression	0		3545496	1					
ANR	3545671	CompoundStatement		24:4:671:680	3545496	1					
ANR	3545672	IfStatement	if ( lt_ptr -> only_x32 && a -> bits == 64 )		3545496	0					
ANR	3545673	Condition	lt_ptr -> only_x32 && a -> bits == 64	4941:8:123828:123860	3545496	0	True				
ANR	3545674	AndExpression	lt_ptr -> only_x32 && a -> bits == 64		3545496	0		&&			
ANR	3545675	PtrMemberAccess	lt_ptr -> only_x32		3545496	0					
ANR	3545676	Identifier	lt_ptr		3545496	0					
ANR	3545677	Identifier	only_x32		3545496	1					
ANR	3545678	EqualityExpression	a -> bits == 64		3545496	1		==			
ANR	3545679	PtrMemberAccess	a -> bits		3545496	0					
ANR	3545680	Identifier	a		3545496	0					
ANR	3545681	Identifier	bits		3545496	1					
ANR	3545682	PrimaryExpression	64		3545496	1					
ANR	3545683	CompoundStatement		19:43:576:576	3545496	1					
ANR	3545684	ExpressionStatement	free ( instr . mnemonic )	4942:5:123870:123891	3545496	0	True				
ANR	3545685	CallExpression	free ( instr . mnemonic )		3545496	0					
ANR	3545686	Callee	free		3545496	0					
ANR	3545687	Identifier	free		3545496	0					
ANR	3545688	ArgumentList	instr . mnemonic		3545496	1					
ANR	3545689	Argument	instr . mnemonic		3545496	0					
ANR	3545690	MemberAccess	instr . mnemonic		3545496	0					
ANR	3545691	Identifier	instr		3545496	0					
ANR	3545692	Identifier	mnemonic		3545496	1					
ANR	3545693	ReturnStatement	return - 1 ;	4943:5:123898:123907	3545496	1	True				
ANR	3545694	UnaryOperationExpression	- 1		3545496	0					
ANR	3545695	UnaryOperator	-		3545496	0					
ANR	3545696	PrimaryExpression	1		3545496	1					
ANR	3545697	IdentifierDeclStatement	ut8 * ptr = ( ut8 * ) & lt_ptr -> opcode ;	4945:4:123919:123952	3545496	1	True				
ANR	3545698	IdentifierDecl	* ptr = ( ut8 * ) & lt_ptr -> opcode		3545496	0					
ANR	3545699	IdentifierDeclType	ut8 *		3545496	0					
ANR	3545700	Identifier	ptr		3545496	1					
ANR	3545701	AssignmentExpression	* ptr = ( ut8 * ) & lt_ptr -> opcode		3545496	2		=			
ANR	3545702	Identifier	ptr		3545496	0					
ANR	3545703	CastExpression	( ut8 * ) & lt_ptr -> opcode		3545496	1					
ANR	3545704	CastTarget	ut8 *		3545496	0					
ANR	3545705	UnaryOperationExpression	& lt_ptr -> opcode		3545496	1					
ANR	3545706	UnaryOperator	&		3545496	0					
ANR	3545707	PtrMemberAccess	lt_ptr -> opcode		3545496	1					
ANR	3545708	Identifier	lt_ptr		3545496	0					
ANR	3545709	Identifier	opcode		3545496	1					
ANR	3545710	IdentifierDeclStatement	int i = 0 ;	4946:4:123958:123967	3545496	2	True				
ANR	3545711	IdentifierDecl	i = 0		3545496	0					
ANR	3545712	IdentifierDeclType	int		3545496	0					
ANR	3545713	Identifier	i		3545496	1					
ANR	3545714	AssignmentExpression	i = 0		3545496	2		=			
ANR	3545715	Identifier	i		3545496	0					
ANR	3545716	PrimaryExpression	0		3545496	1					
ANR	3545717	ForStatement	for ( ; i < lt_ptr -> size ; i ++ )		3545496	3					
ANR	3545718	Condition	i < lt_ptr -> size	4947:11:123980:123995	3545496	0	True				
ANR	3545719	RelationalExpression	i < lt_ptr -> size		3545496	0		<			
ANR	3545720	Identifier	i		3545496	0					
ANR	3545721	PtrMemberAccess	lt_ptr -> size		3545496	1					
ANR	3545722	Identifier	lt_ptr		3545496	0					
ANR	3545723	Identifier	size		3545496	1					
ANR	3545724	PostIncDecOperationExpression	i ++	4947:29:123998:124000	3545496	1	True				
ANR	3545725	Identifier	i		3545496	0					
ANR	3545726	IncDec	++		3545496	1					
ANR	3545727	CompoundStatement		25:34:716:716	3545496	2					
ANR	3545728	ExpressionStatement	data [ i + l ] = ptr [ lt_ptr -> size - ( i + 1 ) ]	4948:5:124010:124051	3545496	0	True				
ANR	3545729	AssignmentExpression	data [ i + l ] = ptr [ lt_ptr -> size - ( i + 1 ) ]		3545496	0		=			
ANR	3545730	ArrayIndexing	data [ i + l ]		3545496	0					
ANR	3545731	Identifier	data		3545496	0					
ANR	3545732	AdditiveExpression	i + l		3545496	1		+			
ANR	3545733	Identifier	i		3545496	0					
ANR	3545734	Identifier	l		3545496	1					
ANR	3545735	ArrayIndexing	ptr [ lt_ptr -> size - ( i + 1 ) ]		3545496	1					
ANR	3545736	Identifier	ptr		3545496	0					
ANR	3545737	AdditiveExpression	lt_ptr -> size - ( i + 1 )		3545496	1		-			
ANR	3545738	PtrMemberAccess	lt_ptr -> size		3545496	0					
ANR	3545739	Identifier	lt_ptr		3545496	0					
ANR	3545740	Identifier	size		3545496	1					
ANR	3545741	AdditiveExpression	i + 1		3545496	1		+			
ANR	3545742	Identifier	i		3545496	0					
ANR	3545743	PrimaryExpression	1		3545496	1					
ANR	3545744	ExpressionStatement	free ( instr . mnemonic )	4950:4:124063:124084	3545496	4	True				
ANR	3545745	CallExpression	free ( instr . mnemonic )		3545496	0					
ANR	3545746	Callee	free		3545496	0					
ANR	3545747	Identifier	free		3545496	0					
ANR	3545748	ArgumentList	instr . mnemonic		3545496	1					
ANR	3545749	Argument	instr . mnemonic		3545496	0					
ANR	3545750	MemberAccess	instr . mnemonic		3545496	0					
ANR	3545751	Identifier	instr		3545496	0					
ANR	3545752	Identifier	mnemonic		3545496	1					
ANR	3545753	ReturnStatement	return l + lt_ptr -> size ;	4951:4:124090:124113	3545496	5	True				
ANR	3545754	AdditiveExpression	l + lt_ptr -> size		3545496	0		+			
ANR	3545755	Identifier	l		3545496	0					
ANR	3545756	PtrMemberAccess	lt_ptr -> size		3545496	1					
ANR	3545757	Identifier	lt_ptr		3545496	0					
ANR	3545758	Identifier	size		3545496	1					
ANR	3545759	ElseStatement	else		3545496	0					
ANR	3545760	CompoundStatement		30:10:838:838	3545496	0					
ANR	3545761	IfStatement	if ( lt_ptr -> opdo )		3545496	0					
ANR	3545762	Condition	lt_ptr -> opdo	4953:8:124135:124146	3545496	0	True				
ANR	3545763	PtrMemberAccess	lt_ptr -> opdo		3545496	0					
ANR	3545764	Identifier	lt_ptr		3545496	0					
ANR	3545765	Identifier	opdo		3545496	1					
ANR	3545766	CompoundStatement		31:22:862:862	3545496	1					
ANR	3545767	ExpressionStatement	data += l	4954:5:124156:124165	3545496	0	True				
ANR	3545768	AssignmentExpression	data += l		3545496	0		+=			
ANR	3545769	Identifier	data		3545496	0					
ANR	3545770	Identifier	l		3545496	1					
ANR	3545771	IfStatement	if ( instr . has_bnd )		3545496	1					
ANR	3545772	Condition	instr . has_bnd	4955:9:124176:124188	3545496	0	True				
ANR	3545773	MemberAccess	instr . has_bnd		3545496	0					
ANR	3545774	Identifier	instr		3545496	0					
ANR	3545775	Identifier	has_bnd		3545496	1					
ANR	3545776	CompoundStatement		33:24:904:904	3545496	1					
ANR	3545777	ExpressionStatement	data [ l ] = 0xf2	4956:6:124199:124213	3545496	0	True				
ANR	3545778	AssignmentExpression	data [ l ] = 0xf2		3545496	0		=			
ANR	3545779	ArrayIndexing	data [ l ]		3545496	0					
ANR	3545780	Identifier	data		3545496	0					
ANR	3545781	Identifier	l		3545496	1					
ANR	3545782	PrimaryExpression	0xf2		3545496	1					
ANR	3545783	ExpressionStatement	data ++	4957:6:124221:124227	3545496	1	True				
ANR	3545784	PostIncDecOperationExpression	data ++		3545496	0					
ANR	3545785	Identifier	data		3545496	0					
ANR	3545786	IncDec	++		3545496	1					
ANR	3545787	ExpressionStatement	"retval = lt_ptr -> opdo ( a , data , & instr )"	4959:5:124241:124280	3545496	2	True				
ANR	3545788	AssignmentExpression	"retval = lt_ptr -> opdo ( a , data , & instr )"		3545496	0		=			
ANR	3545789	Identifier	retval		3545496	0					
ANR	3545790	CallExpression	"lt_ptr -> opdo ( a , data , & instr )"		3545496	1					
ANR	3545791	Callee	lt_ptr -> opdo		3545496	0					
ANR	3545792	PtrMemberAccess	lt_ptr -> opdo		3545496	0					
ANR	3545793	Identifier	lt_ptr		3545496	0					
ANR	3545794	Identifier	opdo		3545496	1					
ANR	3545795	ArgumentList	a		3545496	1					
ANR	3545796	Argument	a		3545496	0					
ANR	3545797	Identifier	a		3545496	0					
ANR	3545798	Argument	data		3545496	1					
ANR	3545799	Identifier	data		3545496	0					
ANR	3545800	Argument	& instr		3545496	2					
ANR	3545801	UnaryOperationExpression	& instr		3545496	0					
ANR	3545802	UnaryOperator	&		3545496	0					
ANR	3545803	Identifier	instr		3545496	1					
ANR	3545804	IfStatement	if ( instr . has_bnd )		3545496	3					
ANR	3545805	Condition	instr . has_bnd	4962:9:124360:124372	3545496	0	True				
ANR	3545806	MemberAccess	instr . has_bnd		3545496	0					
ANR	3545807	Identifier	instr		3545496	0					
ANR	3545808	Identifier	has_bnd		3545496	1					
ANR	3545809	CompoundStatement		40:24:1088:1088	3545496	1					
ANR	3545810	ExpressionStatement	retval ++	4963:6:124383:124391	3545496	0	True				
ANR	3545811	PostIncDecOperationExpression	retval ++		3545496	0					
ANR	3545812	Identifier	retval		3545496	0					
ANR	3545813	IncDec	++		3545496	1					
ANR	3545814	ReturnStatement	return l + retval ;	4965:5:124405:124422	3545496	4	True				
ANR	3545815	AdditiveExpression	l + retval		3545496	0		+			
ANR	3545816	Identifier	l		3545496	0					
ANR	3545817	Identifier	retval		3545496	1					
ANR	3545818	BreakStatement	break ;	4967:4:124434:124439	3545496	1	True				
ANR	3545819	ExpressionStatement	free ( instr . mnemonic )	4971:1:124454:124475	3545496	7	True				
ANR	3545820	CallExpression	free ( instr . mnemonic )		3545496	0					
ANR	3545821	Callee	free		3545496	0					
ANR	3545822	Identifier	free		3545496	0					
ANR	3545823	ArgumentList	instr . mnemonic		3545496	1					
ANR	3545824	Argument	instr . mnemonic		3545496	0					
ANR	3545825	MemberAccess	instr . mnemonic		3545496	0					
ANR	3545826	Identifier	instr		3545496	0					
ANR	3545827	Identifier	mnemonic		3545496	1					
ANR	3545828	ReturnStatement	return - 1 ;	4972:1:124478:124487	3545496	8	True				
ANR	3545829	UnaryOperationExpression	- 1		3545496	0					
ANR	3545830	UnaryOperator	-		3545496	0					
ANR	3545831	PrimaryExpression	1		3545496	1					
ANR	3545832	ReturnType	static int		3545496	1					
ANR	3545833	Identifier	oprep		3545496	2					
ANR	3545834	ParameterList	"RAsm * a , ut8 * data , const Opcode * op"		3545496	3					
ANR	3545835	Parameter	RAsm * a	4923:17:123248:123254	3545496	0	True				
ANR	3545836	ParameterType	RAsm *		3545496	0					
ANR	3545837	Identifier	a		3545496	1					
ANR	3545838	Parameter	ut8 * data	4923:26:123257:123265	3545496	1	True				
ANR	3545839	ParameterType	ut8 *		3545496	0					
ANR	3545840	Identifier	data		3545496	1					
ANR	3545841	Parameter	const Opcode * op	4923:37:123268:123283	3545496	2	True				
ANR	3545842	ParameterType	const Opcode *		3545496	0					
ANR	3545843	Identifier	op		3545496	1					
ANR	3545844	CFGEntryNode	ENTRY		3545496		True				
ANR	3545845	CFGExitNode	EXIT		3545496		True				
ANR	3545846	Symbol	instr . mnemonic		3545496						
ANR	3545847	Symbol	lt_ptr -> opcode		3545496						
ANR	3545848	Symbol	data		3545496						
ANR	3545849	Symbol	* op		3545496						
ANR	3545850	Symbol	op -> mnemonic		3545496						
ANR	3545851	Symbol	lt_ptr -> only_x32		3545496						
ANR	3545852	Symbol	* * lt_ptr		3545496						
ANR	3545853	Symbol	* * op		3545496						
ANR	3545854	Symbol	* op -> operands		3545496						
ANR	3545855	Symbol	instr		3545496						
ANR	3545856	Symbol	* ptr		3545496						
ANR	3545857	Symbol	op -> operands [ 0 ] . rep_op		3545496						
ANR	3545858	Symbol	lt_ptr -> opdo		3545496						
ANR	3545859	Symbol	r_str_casecmp		3545496						
ANR	3545860	Symbol	a -> bits		3545496						
ANR	3545861	Symbol	strcmp		3545496						
ANR	3545862	Symbol	a		3545496						
ANR	3545863	Symbol	op		3545496						
ANR	3545864	Symbol	instr . has_bnd		3545496						
ANR	3545865	Symbol	oplookup		3545496						
ANR	3545866	Symbol	i		3545496						
ANR	3545867	Symbol	lt_ptr -> size		3545496						
ANR	3545868	Symbol	* a		3545496						
ANR	3545869	Symbol	l		3545496						
ANR	3545870	Symbol	lt_ptr		3545496						
ANR	3545871	Symbol	retval		3545496						
ANR	3545872	Symbol	ptr		3545496						
ANR	3545873	Symbol	& instr		3545496						
ANR	3545874	Symbol	* i		3545496						
ANR	3545875	Symbol	* l		3545496						
ANR	3545876	Symbol	& lt_ptr -> opcode		3545496						
ANR	3545877	Symbol	* lt_ptr -> size		3545496						
ANR	3545878	Symbol	op -> operands		3545496						
ANR	3545879	Symbol	* data		3545496						
ANR	3545880	Symbol	lt_ptr -> mnemonic		3545496						
ANR	3545881	Symbol	* lt_ptr		3545496						
ANR	3545882	Function	assemble	4975:0:124492:125555							
ANR	3545883	FunctionDef	"assemble (RAsm * a , RAsmOp * ao , const char * str)"		3545882	0					
ANR	3545884	CompoundStatement		4975:58:124550:125555	3545882	0					
ANR	3545885	IdentifierDeclStatement	ut8 __data [ 32 ] = { 0 } ;	4976:1:124553:124573	3545882	0	True				
ANR	3545886	IdentifierDecl	__data [ 32 ] = { 0 }		3545882	0					
ANR	3545887	IdentifierDeclType	ut8 [ 32 ]		3545882	0					
ANR	3545888	Identifier	__data		3545882	1					
ANR	3545889	PrimaryExpression	32		3545882	2					
ANR	3545890	AssignmentExpression	__data [ 32 ] = { 0 }		3545882	3		=			
ANR	3545891	Identifier	__data		3545882	0					
ANR	3545892	InitializerList	0		3545882	1					
ANR	3545893	PrimaryExpression	0		3545882	0					
ANR	3545894	IdentifierDeclStatement	ut8 * data = __data ;	4977:1:124576:124594	3545882	1	True				
ANR	3545895	IdentifierDecl	* data = __data		3545882	0					
ANR	3545896	IdentifierDeclType	ut8 *		3545882	0					
ANR	3545897	Identifier	data		3545882	1					
ANR	3545898	AssignmentExpression	* data = __data		3545882	2		=			
ANR	3545899	Identifier	__data		3545882	0					
ANR	3545900	Identifier	__data		3545882	1					
ANR	3545901	IdentifierDeclStatement	char op [ 128 ] ;	4978:1:124597:124609	3545882	2	True				
ANR	3545902	IdentifierDecl	op [ 128 ]		3545882	0					
ANR	3545903	IdentifierDeclType	char [ 128 ]		3545882	0					
ANR	3545904	Identifier	op		3545882	1					
ANR	3545905	PrimaryExpression	128		3545882	2					
ANR	3545906	IdentifierDeclStatement	LookupTable * lt_ptr ;	4979:1:124612:124631	3545882	3	True				
ANR	3545907	IdentifierDecl	* lt_ptr		3545882	0					
ANR	3545908	IdentifierDeclType	LookupTable *		3545882	0					
ANR	3545909	Identifier	lt_ptr		3545882	1					
ANR	3545910	IdentifierDeclStatement	int retval = - 1 ;	4980:1:124634:124649	3545882	4	True				
ANR	3545911	IdentifierDecl	retval = - 1		3545882	0					
ANR	3545912	IdentifierDeclType	int		3545882	0					
ANR	3545913	Identifier	retval		3545882	1					
ANR	3545914	AssignmentExpression	retval = - 1		3545882	2		=			
ANR	3545915	Identifier	retval		3545882	0					
ANR	3545916	UnaryOperationExpression	- 1		3545882	1					
ANR	3545917	UnaryOperator	-		3545882	0					
ANR	3545918	PrimaryExpression	1		3545882	1					
ANR	3545919	IdentifierDeclStatement	Opcode instr = { 0 } ;	4981:1:124652:124670	3545882	5	True				
ANR	3545920	IdentifierDecl	instr = { 0 }		3545882	0					
ANR	3545921	IdentifierDeclType	Opcode		3545882	0					
ANR	3545922	Identifier	instr		3545882	1					
ANR	3545923	AssignmentExpression	instr = { 0 }		3545882	2		=			
ANR	3545924	Identifier	instr		3545882	0					
ANR	3545925	InitializerList	0		3545882	1					
ANR	3545926	PrimaryExpression	0		3545882	0					
ANR	3545927	ExpressionStatement	"strncpy ( op , str , sizeof ( op ) - 1 )"	4983:1:124674:124708	3545882	6	True				
ANR	3545928	CallExpression	"strncpy ( op , str , sizeof ( op ) - 1 )"		3545882	0					
ANR	3545929	Callee	strncpy		3545882	0					
ANR	3545930	Identifier	strncpy		3545882	0					
ANR	3545931	ArgumentList	op		3545882	1					
ANR	3545932	Argument	op		3545882	0					
ANR	3545933	Identifier	op		3545882	0					
ANR	3545934	Argument	str		3545882	1					
ANR	3545935	Identifier	str		3545882	0					
ANR	3545936	Argument	sizeof ( op ) - 1		3545882	2					
ANR	3545937	AdditiveExpression	sizeof ( op ) - 1		3545882	0		-			
ANR	3545938	SizeofExpression	sizeof ( op )		3545882	0					
ANR	3545939	Sizeof	sizeof		3545882	0					
ANR	3545940	SizeofOperand	op		3545882	1					
ANR	3545941	PrimaryExpression	1		3545882	1					
ANR	3545942	ExpressionStatement	op [ sizeof ( op ) - 1 ] = '\\0'	4984:1:124711:124737	3545882	7	True				
ANR	3545943	AssignmentExpression	op [ sizeof ( op ) - 1 ] = '\\0'		3545882	0		=			
ANR	3545944	ArrayIndexing	op [ sizeof ( op ) - 1 ]		3545882	0					
ANR	3545945	Identifier	op		3545882	0					
ANR	3545946	AdditiveExpression	sizeof ( op ) - 1		3545882	1		-			
ANR	3545947	SizeofExpression	sizeof ( op )		3545882	0					
ANR	3545948	Sizeof	sizeof		3545882	0					
ANR	3545949	SizeofOperand	op		3545882	1					
ANR	3545950	PrimaryExpression	1		3545882	1					
ANR	3545951	PrimaryExpression	'\\0'		3545882	1					
ANR	3545952	ExpressionStatement	"parseOpcode ( a , op , & instr )"	4985:1:124740:124767	3545882	8	True				
ANR	3545953	CallExpression	"parseOpcode ( a , op , & instr )"		3545882	0					
ANR	3545954	Callee	parseOpcode		3545882	0					
ANR	3545955	Identifier	parseOpcode		3545882	0					
ANR	3545956	ArgumentList	a		3545882	1					
ANR	3545957	Argument	a		3545882	0					
ANR	3545958	Identifier	a		3545882	0					
ANR	3545959	Argument	op		3545882	1					
ANR	3545960	Identifier	op		3545882	0					
ANR	3545961	Argument	& instr		3545882	2					
ANR	3545962	UnaryOperationExpression	& instr		3545882	0					
ANR	3545963	UnaryOperator	&		3545882	0					
ANR	3545964	Identifier	instr		3545882	1					
ANR	3545965	ForStatement	"for ( lt_ptr = oplookup ; strcmp ( lt_ptr -> mnemonic , ""null"" ) ; lt_ptr ++ )"		3545882	9					
ANR	3545966	ForInit	lt_ptr = oplookup ;	4986:6:124775:124792	3545882	0	True				
ANR	3545967	AssignmentExpression	lt_ptr = oplookup		3545882	0		=			
ANR	3545968	Identifier	lt_ptr		3545882	0					
ANR	3545969	Identifier	oplookup		3545882	1					
ANR	3545970	Condition	"strcmp ( lt_ptr -> mnemonic , ""null"" )"	4986:25:124794:124826	3545882	1	True				
ANR	3545971	CallExpression	"strcmp ( lt_ptr -> mnemonic , ""null"" )"		3545882	0					
ANR	3545972	Callee	strcmp		3545882	0					
ANR	3545973	Identifier	strcmp		3545882	0					
ANR	3545974	ArgumentList	lt_ptr -> mnemonic		3545882	1					
ANR	3545975	Argument	lt_ptr -> mnemonic		3545882	0					
ANR	3545976	PtrMemberAccess	lt_ptr -> mnemonic		3545882	0					
ANR	3545977	Identifier	lt_ptr		3545882	0					
ANR	3545978	Identifier	mnemonic		3545882	1					
ANR	3545979	Argument	"""null"""		3545882	1					
ANR	3545980	PrimaryExpression	"""null"""		3545882	0					
ANR	3545981	PostIncDecOperationExpression	lt_ptr ++	4986:60:124829:124836	3545882	2	True				
ANR	3545982	Identifier	lt_ptr		3545882	0					
ANR	3545983	IncDec	++		3545882	1					
ANR	3545984	CompoundStatement		12:70:288:288	3545882	3					
ANR	3545985	IfStatement	"if ( ! r_str_casecmp ( instr . mnemonic , lt_ptr -> mnemonic ) )"		3545882	0					
ANR	3545986	Condition	"! r_str_casecmp ( instr . mnemonic , lt_ptr -> mnemonic )"	4987:6:124847:124895	3545882	0	True				
ANR	3545987	UnaryOperationExpression	"! r_str_casecmp ( instr . mnemonic , lt_ptr -> mnemonic )"		3545882	0					
ANR	3545988	UnaryOperator	!		3545882	0					
ANR	3545989	CallExpression	"r_str_casecmp ( instr . mnemonic , lt_ptr -> mnemonic )"		3545882	1					
ANR	3545990	Callee	r_str_casecmp		3545882	0					
ANR	3545991	Identifier	r_str_casecmp		3545882	0					
ANR	3545992	ArgumentList	instr . mnemonic		3545882	1					
ANR	3545993	Argument	instr . mnemonic		3545882	0					
ANR	3545994	MemberAccess	instr . mnemonic		3545882	0					
ANR	3545995	Identifier	instr		3545882	0					
ANR	3545996	Identifier	mnemonic		3545882	1					
ANR	3545997	Argument	lt_ptr -> mnemonic		3545882	1					
ANR	3545998	PtrMemberAccess	lt_ptr -> mnemonic		3545882	0					
ANR	3545999	Identifier	lt_ptr		3545882	0					
ANR	3546000	Identifier	mnemonic		3545882	1					
ANR	3546001	CompoundStatement		13:57:347:347	3545882	1					
ANR	3546002	IfStatement	if ( lt_ptr -> opcode > 0 )		3545882	0					
ANR	3546003	Condition	lt_ptr -> opcode > 0	4988:7:124907:124924	3545882	0	True				
ANR	3546004	RelationalExpression	lt_ptr -> opcode > 0		3545882	0		>			
ANR	3546005	PtrMemberAccess	lt_ptr -> opcode		3545882	0					
ANR	3546006	Identifier	lt_ptr		3545882	0					
ANR	3546007	Identifier	opcode		3545882	1					
ANR	3546008	PrimaryExpression	0		3545882	1					
ANR	3546009	CompoundStatement		14:27:376:376	3545882	1					
ANR	3546010	IfStatement	if ( ! lt_ptr -> only_x32 || a -> bits != 64 )		3545882	0					
ANR	3546011	Condition	! lt_ptr -> only_x32 || a -> bits != 64	4989:8:124937:124970	3545882	0	True				
ANR	3546012	OrExpression	! lt_ptr -> only_x32 || a -> bits != 64		3545882	0		||			
ANR	3546013	UnaryOperationExpression	! lt_ptr -> only_x32		3545882	0					
ANR	3546014	UnaryOperator	!		3545882	0					
ANR	3546015	PtrMemberAccess	lt_ptr -> only_x32		3545882	1					
ANR	3546016	Identifier	lt_ptr		3545882	0					
ANR	3546017	Identifier	only_x32		3545882	1					
ANR	3546018	EqualityExpression	a -> bits != 64		3545882	1		!=			
ANR	3546019	PtrMemberAccess	a -> bits		3545882	0					
ANR	3546020	Identifier	a		3545882	0					
ANR	3546021	Identifier	bits		3545882	1					
ANR	3546022	PrimaryExpression	64		3545882	1					
ANR	3546023	CompoundStatement		17:5:469:478	3545882	1					
ANR	3546024	IdentifierDeclStatement	ut8 * ptr = ( ut8 * ) & lt_ptr -> opcode ;	4990:5:124980:125013	3545882	0	True				
ANR	3546025	IdentifierDecl	* ptr = ( ut8 * ) & lt_ptr -> opcode		3545882	0					
ANR	3546026	IdentifierDeclType	ut8 *		3545882	0					
ANR	3546027	Identifier	ptr		3545882	1					
ANR	3546028	AssignmentExpression	* ptr = ( ut8 * ) & lt_ptr -> opcode		3545882	2		=			
ANR	3546029	Identifier	ptr		3545882	0					
ANR	3546030	CastExpression	( ut8 * ) & lt_ptr -> opcode		3545882	1					
ANR	3546031	CastTarget	ut8 *		3545882	0					
ANR	3546032	UnaryOperationExpression	& lt_ptr -> opcode		3545882	1					
ANR	3546033	UnaryOperator	&		3545882	0					
ANR	3546034	PtrMemberAccess	lt_ptr -> opcode		3545882	1					
ANR	3546035	Identifier	lt_ptr		3545882	0					
ANR	3546036	Identifier	opcode		3545882	1					
ANR	3546037	IdentifierDeclStatement	int i = 0 ;	4991:5:125020:125029	3545882	1	True				
ANR	3546038	IdentifierDecl	i = 0		3545882	0					
ANR	3546039	IdentifierDeclType	int		3545882	0					
ANR	3546040	Identifier	i		3545882	1					
ANR	3546041	AssignmentExpression	i = 0		3545882	2		=			
ANR	3546042	Identifier	i		3545882	0					
ANR	3546043	PrimaryExpression	0		3545882	1					
ANR	3546044	ForStatement	for ( ; i < lt_ptr -> size ; i ++ )		3545882	2					
ANR	3546045	Condition	i < lt_ptr -> size	4992:12:125043:125058	3545882	0	True				
ANR	3546046	RelationalExpression	i < lt_ptr -> size		3545882	0		<			
ANR	3546047	Identifier	i		3545882	0					
ANR	3546048	PtrMemberAccess	lt_ptr -> size		3545882	1					
ANR	3546049	Identifier	lt_ptr		3545882	0					
ANR	3546050	Identifier	size		3545882	1					
ANR	3546051	PostIncDecOperationExpression	i ++	4992:30:125061:125063	3545882	1	True				
ANR	3546052	Identifier	i		3545882	0					
ANR	3546053	IncDec	++		3545882	1					
ANR	3546054	CompoundStatement		18:35:515:515	3545882	2					
ANR	3546055	ExpressionStatement	data [ i ] = ptr [ lt_ptr -> size - ( i + 1 ) ]	4993:6:125074:125111	3545882	0	True				
ANR	3546056	AssignmentExpression	data [ i ] = ptr [ lt_ptr -> size - ( i + 1 ) ]		3545882	0		=			
ANR	3546057	ArrayIndexing	data [ i ]		3545882	0					
ANR	3546058	Identifier	data		3545882	0					
ANR	3546059	Identifier	i		3545882	1					
ANR	3546060	ArrayIndexing	ptr [ lt_ptr -> size - ( i + 1 ) ]		3545882	1					
ANR	3546061	Identifier	ptr		3545882	0					
ANR	3546062	AdditiveExpression	lt_ptr -> size - ( i + 1 )		3545882	1		-			
ANR	3546063	PtrMemberAccess	lt_ptr -> size		3545882	0					
ANR	3546064	Identifier	lt_ptr		3545882	0					
ANR	3546065	Identifier	size		3545882	1					
ANR	3546066	AdditiveExpression	i + 1		3545882	1		+			
ANR	3546067	Identifier	i		3545882	0					
ANR	3546068	PrimaryExpression	1		3545882	1					
ANR	3546069	ExpressionStatement	retval = lt_ptr -> size	4995:5:125125:125146	3545882	3	True				
ANR	3546070	AssignmentExpression	retval = lt_ptr -> size		3545882	0		=			
ANR	3546071	Identifier	retval		3545882	0					
ANR	3546072	PtrMemberAccess	lt_ptr -> size		3545882	1					
ANR	3546073	Identifier	lt_ptr		3545882	0					
ANR	3546074	Identifier	size		3545882	1					
ANR	3546075	ElseStatement	else		3545882	0					
ANR	3546076	CompoundStatement		23:10:613:613	3545882	0					
ANR	3546077	IfStatement	if ( lt_ptr -> opdo )		3545882	0					
ANR	3546078	Condition	lt_ptr -> opdo	4998:8:125174:125185	3545882	0	True				
ANR	3546079	PtrMemberAccess	lt_ptr -> opdo		3545882	0					
ANR	3546080	Identifier	lt_ptr		3545882	0					
ANR	3546081	Identifier	opdo		3545882	1					
ANR	3546082	CompoundStatement		24:22:637:637	3545882	1					
ANR	3546083	IfStatement	if ( instr . has_bnd )		3545882	0					
ANR	3546084	Condition	instr . has_bnd	4999:9:125199:125211	3545882	0	True				
ANR	3546085	MemberAccess	instr . has_bnd		3545882	0					
ANR	3546086	Identifier	instr		3545882	0					
ANR	3546087	Identifier	has_bnd		3545882	1					
ANR	3546088	CompoundStatement		25:24:663:663	3545882	1					
ANR	3546089	ExpressionStatement	data [ 0 ] = 0xf2	5000:6:125222:125236	3545882	0	True				
ANR	3546090	AssignmentExpression	data [ 0 ] = 0xf2		3545882	0		=			
ANR	3546091	ArrayIndexing	data [ 0 ]		3545882	0					
ANR	3546092	Identifier	data		3545882	0					
ANR	3546093	PrimaryExpression	0		3545882	1					
ANR	3546094	PrimaryExpression	0xf2		3545882	1					
ANR	3546095	ExpressionStatement	data ++	5001:6:125244:125251	3545882	1	True				
ANR	3546096	PostIncDecOperationExpression	data ++		3545882	0					
ANR	3546097	Identifier	data		3545882	0					
ANR	3546098	IncDec	++		3545882	1					
ANR	3546099	ExpressionStatement	"retval = lt_ptr -> opdo ( a , data , & instr )"	5003:5:125265:125304	3545882	1	True				
ANR	3546100	AssignmentExpression	"retval = lt_ptr -> opdo ( a , data , & instr )"		3545882	0		=			
ANR	3546101	Identifier	retval		3545882	0					
ANR	3546102	CallExpression	"lt_ptr -> opdo ( a , data , & instr )"		3545882	1					
ANR	3546103	Callee	lt_ptr -> opdo		3545882	0					
ANR	3546104	PtrMemberAccess	lt_ptr -> opdo		3545882	0					
ANR	3546105	Identifier	lt_ptr		3545882	0					
ANR	3546106	Identifier	opdo		3545882	1					
ANR	3546107	ArgumentList	a		3545882	1					
ANR	3546108	Argument	a		3545882	0					
ANR	3546109	Identifier	a		3545882	0					
ANR	3546110	Argument	data		3545882	1					
ANR	3546111	Identifier	data		3545882	0					
ANR	3546112	Argument	& instr		3545882	2					
ANR	3546113	UnaryOperationExpression	& instr		3545882	0					
ANR	3546114	UnaryOperator	&		3545882	0					
ANR	3546115	Identifier	instr		3545882	1					
ANR	3546116	IfStatement	if ( instr . has_bnd )		3545882	2					
ANR	3546117	Condition	instr . has_bnd	5006:9:125384:125396	3545882	0	True				
ANR	3546118	MemberAccess	instr . has_bnd		3545882	0					
ANR	3546119	Identifier	instr		3545882	0					
ANR	3546120	Identifier	has_bnd		3545882	1					
ANR	3546121	CompoundStatement		32:24:848:848	3545882	1					
ANR	3546122	ExpressionStatement	retval ++	5007:6:125407:125415	3545882	0	True				
ANR	3546123	PostIncDecOperationExpression	retval ++		3545882	0					
ANR	3546124	Identifier	retval		3545882	0					
ANR	3546125	IncDec	++		3545882	1					
ANR	3546126	BreakStatement	break ;	5011:3:125438:125443	3545882	1	True				
ANR	3546127	IfStatement	if ( retval > 0 )		3545882	10					
ANR	3546128	Condition	retval > 0	5014:5:125457:125466	3545882	0	True				
ANR	3546129	RelationalExpression	retval > 0		3545882	0		>			
ANR	3546130	Identifier	retval		3545882	0					
ANR	3546131	PrimaryExpression	0		3545882	1					
ANR	3546132	CompoundStatement		40:17:918:918	3545882	1					
ANR	3546133	ExpressionStatement	"r_asm_op_set_buf ( ao , __data , retval )"	5015:2:125473:125510	3545882	0	True				
ANR	3546134	CallExpression	"r_asm_op_set_buf ( ao , __data , retval )"		3545882	0					
ANR	3546135	Callee	r_asm_op_set_buf		3545882	0					
ANR	3546136	Identifier	r_asm_op_set_buf		3545882	0					
ANR	3546137	ArgumentList	ao		3545882	1					
ANR	3546138	Argument	ao		3545882	0					
ANR	3546139	Identifier	ao		3545882	0					
ANR	3546140	Argument	__data		3545882	1					
ANR	3546141	Identifier	__data		3545882	0					
ANR	3546142	Argument	retval		3545882	2					
ANR	3546143	Identifier	retval		3545882	0					
ANR	3546144	ExpressionStatement	free ( instr . mnemonic )	5017:1:125516:125537	3545882	11	True				
ANR	3546145	CallExpression	free ( instr . mnemonic )		3545882	0					
ANR	3546146	Callee	free		3545882	0					
ANR	3546147	Identifier	free		3545882	0					
ANR	3546148	ArgumentList	instr . mnemonic		3545882	1					
ANR	3546149	Argument	instr . mnemonic		3545882	0					
ANR	3546150	MemberAccess	instr . mnemonic		3545882	0					
ANR	3546151	Identifier	instr		3545882	0					
ANR	3546152	Identifier	mnemonic		3545882	1					
ANR	3546153	ReturnStatement	return retval ;	5018:1:125540:125553	3545882	12	True				
ANR	3546154	Identifier	retval		3545882	0					
ANR	3546155	ReturnType	static int		3545882	1					
ANR	3546156	Identifier	assemble		3545882	2					
ANR	3546157	ParameterList	"RAsm * a , RAsmOp * ao , const char * str"		3545882	3					
ANR	3546158	Parameter	RAsm * a	4975:20:124512:124518	3545882	0	True				
ANR	3546159	ParameterType	RAsm *		3545882	0					
ANR	3546160	Identifier	a		3545882	1					
ANR	3546161	Parameter	RAsmOp * ao	4975:29:124521:124530	3545882	1	True				
ANR	3546162	ParameterType	RAsmOp *		3545882	0					
ANR	3546163	Identifier	ao		3545882	1					
ANR	3546164	Parameter	const char * str	4975:41:124533:124547	3545882	2	True				
ANR	3546165	ParameterType	const char *		3545882	0					
ANR	3546166	Identifier	str		3545882	1					
ANR	3546167	CFGEntryNode	ENTRY		3545882		True				
ANR	3546168	CFGExitNode	EXIT		3545882		True				
ANR	3546169	Symbol	instr . mnemonic		3545882						
ANR	3546170	Symbol	lt_ptr -> opcode		3545882						
ANR	3546171	Symbol	data		3545882						
ANR	3546172	Symbol	* op		3545882						
ANR	3546173	Symbol	lt_ptr -> only_x32		3545882						
ANR	3546174	Symbol	__data		3545882						
ANR	3546175	Symbol	* * lt_ptr		3545882						
ANR	3546176	Symbol	instr		3545882						
ANR	3546177	Symbol	* ptr		3545882						
ANR	3546178	Symbol	lt_ptr -> opdo		3545882						
ANR	3546179	Symbol	r_str_casecmp		3545882						
ANR	3546180	Symbol	a -> bits		3545882						
ANR	3546181	Symbol	strcmp		3545882						
ANR	3546182	Symbol	a		3545882						
ANR	3546183	Symbol	op		3545882						
ANR	3546184	Symbol	instr . has_bnd		3545882						
ANR	3546185	Symbol	oplookup		3545882						
ANR	3546186	Symbol	i		3545882						
ANR	3546187	Symbol	lt_ptr -> size		3545882						
ANR	3546188	Symbol	* a		3545882						
ANR	3546189	Symbol	lt_ptr		3545882						
ANR	3546190	Symbol	ao		3545882						
ANR	3546191	Symbol	retval		3545882						
ANR	3546192	Symbol	ptr		3545882						
ANR	3546193	Symbol	str		3545882						
ANR	3546194	Symbol	& instr		3545882						
ANR	3546195	Symbol	* i		3545882						
ANR	3546196	Symbol	& lt_ptr -> opcode		3545882						
ANR	3546197	Symbol	* lt_ptr -> size		3545882						
ANR	3546198	Symbol	* data		3545882						
ANR	3546199	Symbol	lt_ptr -> mnemonic		3545882						
ANR	3546200	Symbol	* lt_ptr		3545882						
ANR	3546201	DeclStmt									
ANR	3546202	Decl							RAsmPlugin	RAsmPlugin	r_asm_plugin_x86_nz
ANR	3546203	DeclStmt									
ANR	3546204	Decl							R_API RLibStruct	R_API RLibStruct	radare_plugin
