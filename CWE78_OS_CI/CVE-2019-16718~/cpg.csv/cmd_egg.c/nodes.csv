command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	908370	File	data/converged/CVE-2019-16718~_radare2/cmd_egg.c								
ANR	908371	DeclStmt									
ANR	908372	Decl							const char	const char * [ ]	help_msg_g
ANR	908373	Function	cmd_egg_init	25:0:817:891							
ANR	908374	FunctionDef	cmd_egg_init (RCore * core)		908373	0					
ANR	908375	CompoundStatement		25:38:855:891	908373	0					
ANR	908376	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , g )"	26:1:858:889	908373	0	True				
ANR	908377	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , g )"		908373	0					
ANR	908378	Callee	DEFINE_CMD_DESCRIPTOR		908373	0					
ANR	908379	Identifier	DEFINE_CMD_DESCRIPTOR		908373	0					
ANR	908380	ArgumentList	core		908373	1					
ANR	908381	Argument	core		908373	0					
ANR	908382	Identifier	core		908373	0					
ANR	908383	Argument	g		908373	1					
ANR	908384	Identifier	g		908373	0					
ANR	908385	ReturnType	static void		908373	1					
ANR	908386	Identifier	cmd_egg_init		908373	2					
ANR	908387	ParameterList	RCore * core		908373	3					
ANR	908388	Parameter	RCore * core	25:25:842:852	908373	0	True				
ANR	908389	ParameterType	RCore *		908373	0					
ANR	908390	Identifier	core		908373	1					
ANR	908391	CFGEntryNode	ENTRY		908373		True				
ANR	908392	CFGExitNode	EXIT		908373		True				
ANR	908393	Symbol	core		908373						
ANR	908394	Symbol	g		908373						
ANR	908395	Function	cmd_egg_option	29:0:894:1170							
ANR	908396	FunctionDef	"cmd_egg_option (REgg * egg , const char * key , const char * input)"		908395	0					
ANR	908397	CompoundStatement		29:74:968:1170	908395	0					
ANR	908398	IfStatement	if ( ! * input )		908395	0					
ANR	908399	Condition	! * input	30:5:975:981	908395	0	True				
ANR	908400	UnaryOperationExpression	! * input		908395	0					
ANR	908401	UnaryOperator	!		908395	0					
ANR	908402	UnaryOperationExpression	* input		908395	1					
ANR	908403	UnaryOperator	*		908395	0					
ANR	908404	Identifier	input		908395	1					
ANR	908405	CompoundStatement		2:14:15:15	908395	1					
ANR	908406	ReturnStatement	return ;	31:2:988:994	908395	0	True				
ANR	908407	IfStatement	if ( input [ 1 ] != ' ' )		908395	1					
ANR	908408	Condition	input [ 1 ] != ' '	33:5:1004:1018	908395	0	True				
ANR	908409	EqualityExpression	input [ 1 ] != ' '		908395	0		!=			
ANR	908410	ArrayIndexing	input [ 1 ]		908395	0					
ANR	908411	Identifier	input		908395	0					
ANR	908412	PrimaryExpression	1		908395	1					
ANR	908413	PrimaryExpression	' '		908395	1					
ANR	908414	CompoundStatement		6:2:56:93	908395	1					
ANR	908415	IdentifierDeclStatement	"char * a = r_egg_option_get ( egg , key ) ;"	34:2:1025:1062	908395	0	True				
ANR	908416	IdentifierDecl	"* a = r_egg_option_get ( egg , key )"		908395	0					
ANR	908417	IdentifierDeclType	char *		908395	0					
ANR	908418	Identifier	a		908395	1					
ANR	908419	AssignmentExpression	"* a = r_egg_option_get ( egg , key )"		908395	2		=			
ANR	908420	Identifier	a		908395	0					
ANR	908421	CallExpression	"r_egg_option_get ( egg , key )"		908395	1					
ANR	908422	Callee	r_egg_option_get		908395	0					
ANR	908423	Identifier	r_egg_option_get		908395	0					
ANR	908424	ArgumentList	egg		908395	1					
ANR	908425	Argument	egg		908395	0					
ANR	908426	Identifier	egg		908395	0					
ANR	908427	Argument	key		908395	1					
ANR	908428	Identifier	key		908395	0					
ANR	908429	IfStatement	if ( a )		908395	1					
ANR	908430	Condition	a	35:6:1070:1070	908395	0	True				
ANR	908431	Identifier	a		908395	0					
ANR	908432	CompoundStatement		7:9:104:104	908395	1					
ANR	908433	ExpressionStatement	r_cons_println ( a )	36:3:1078:1096	908395	0	True				
ANR	908434	CallExpression	r_cons_println ( a )		908395	0					
ANR	908435	Callee	r_cons_println		908395	0					
ANR	908436	Identifier	r_cons_println		908395	0					
ANR	908437	ArgumentList	a		908395	1					
ANR	908438	Argument	a		908395	0					
ANR	908439	Identifier	a		908395	0					
ANR	908440	ExpressionStatement	free ( a )	37:3:1101:1109	908395	1	True				
ANR	908441	CallExpression	free ( a )		908395	0					
ANR	908442	Callee	free		908395	0					
ANR	908443	Identifier	free		908395	0					
ANR	908444	ArgumentList	a		908395	1					
ANR	908445	Argument	a		908395	0					
ANR	908446	Identifier	a		908395	0					
ANR	908447	ElseStatement	else		908395	0					
ANR	908448	CompoundStatement		11:8:154:154	908395	0					
ANR	908449	ExpressionStatement	"r_egg_option_set ( egg , key , input + 2 )"	40:2:1127:1165	908395	0	True				
ANR	908450	CallExpression	"r_egg_option_set ( egg , key , input + 2 )"		908395	0					
ANR	908451	Callee	r_egg_option_set		908395	0					
ANR	908452	Identifier	r_egg_option_set		908395	0					
ANR	908453	ArgumentList	egg		908395	1					
ANR	908454	Argument	egg		908395	0					
ANR	908455	Identifier	egg		908395	0					
ANR	908456	Argument	key		908395	1					
ANR	908457	Identifier	key		908395	0					
ANR	908458	Argument	input + 2		908395	2					
ANR	908459	AdditiveExpression	input + 2		908395	0		+			
ANR	908460	Identifier	input		908395	0					
ANR	908461	PrimaryExpression	2		908395	1					
ANR	908462	ReturnType	static void		908395	1					
ANR	908463	Identifier	cmd_egg_option		908395	2					
ANR	908464	ParameterList	"REgg * egg , const char * key , const char * input"		908395	3					
ANR	908465	Parameter	REgg * egg	29:27:921:929	908395	0	True				
ANR	908466	ParameterType	REgg *		908395	0					
ANR	908467	Identifier	egg		908395	1					
ANR	908468	Parameter	const char * key	29:38:932:946	908395	1	True				
ANR	908469	ParameterType	const char *		908395	0					
ANR	908470	Identifier	key		908395	1					
ANR	908471	Parameter	const char * input	29:55:949:965	908395	2	True				
ANR	908472	ParameterType	const char *		908395	0					
ANR	908473	Identifier	input		908395	1					
ANR	908474	CFGEntryNode	ENTRY		908395		True				
ANR	908475	CFGExitNode	EXIT		908395		True				
ANR	908476	Symbol	input		908395						
ANR	908477	Symbol	a		908395						
ANR	908478	Symbol	egg		908395						
ANR	908479	Symbol	r_egg_option_get		908395						
ANR	908480	Symbol	* input		908395						
ANR	908481	Symbol	key		908395						
ANR	908482	Function	showBuffer	44:0:1173:1395							
ANR	908483	FunctionDef	showBuffer (RBuffer * b)		908482	0					
ANR	908484	CompoundStatement		44:35:1208:1395	908482	0					
ANR	908485	IdentifierDeclStatement	int i ;	45:1:1211:1216	908482	0	True				
ANR	908486	IdentifierDecl	i		908482	0					
ANR	908487	IdentifierDeclType	int		908482	0					
ANR	908488	Identifier	i		908482	1					
ANR	908489	IfStatement	if ( b && r_buf_size ( b ) > 0 )		908482	1					
ANR	908490	Condition	b && r_buf_size ( b ) > 0	46:5:1223:1245	908482	0	True				
ANR	908491	AndExpression	b && r_buf_size ( b ) > 0		908482	0		&&			
ANR	908492	Identifier	b		908482	0					
ANR	908493	RelationalExpression	r_buf_size ( b ) > 0		908482	1		>			
ANR	908494	CallExpression	r_buf_size ( b )		908482	0					
ANR	908495	Callee	r_buf_size		908482	0					
ANR	908496	Identifier	r_buf_size		908482	0					
ANR	908497	ArgumentList	b		908482	1					
ANR	908498	Argument	b		908482	0					
ANR	908499	Identifier	b		908482	0					
ANR	908500	PrimaryExpression	0		908482	1					
ANR	908501	CompoundStatement		3:30:39:39	908482	1					
ANR	908502	ExpressionStatement	"r_buf_seek ( b , 0 , R_BUF_SET )"	47:2:1252:1280	908482	0	True				
ANR	908503	CallExpression	"r_buf_seek ( b , 0 , R_BUF_SET )"		908482	0					
ANR	908504	Callee	r_buf_seek		908482	0					
ANR	908505	Identifier	r_buf_seek		908482	0					
ANR	908506	ArgumentList	b		908482	1					
ANR	908507	Argument	b		908482	0					
ANR	908508	Identifier	b		908482	0					
ANR	908509	Argument	0		908482	1					
ANR	908510	PrimaryExpression	0		908482	0					
ANR	908511	Argument	R_BUF_SET		908482	2					
ANR	908512	Identifier	R_BUF_SET		908482	0					
ANR	908513	ForStatement	for ( i = 0 ; i < r_buf_size ( b ) ; i ++ )		908482	1					
ANR	908514	ForInit	i = 0 ;	48:7:1289:1294	908482	0	True				
ANR	908515	AssignmentExpression	i = 0		908482	0		=			
ANR	908516	Identifier	i		908482	0					
ANR	908517	PrimaryExpression	0		908482	1					
ANR	908518	Condition	i < r_buf_size ( b )	48:14:1296:1313	908482	1	True				
ANR	908519	RelationalExpression	i < r_buf_size ( b )		908482	0		<			
ANR	908520	Identifier	i		908482	0					
ANR	908521	CallExpression	r_buf_size ( b )		908482	1					
ANR	908522	Callee	r_buf_size		908482	0					
ANR	908523	Identifier	r_buf_size		908482	0					
ANR	908524	ArgumentList	b		908482	1					
ANR	908525	Argument	b		908482	0					
ANR	908526	Identifier	b		908482	0					
ANR	908527	PostIncDecOperationExpression	i ++	48:34:1316:1318	908482	2	True				
ANR	908528	Identifier	i		908482	0					
ANR	908529	IncDec	++		908482	1					
ANR	908530	CompoundStatement		5:39:112:112	908482	3					
ANR	908531	ExpressionStatement	"r_cons_printf ( ""%02x"" , r_buf_read8 ( b ) )"	49:3:1326:1365	908482	0	True				
ANR	908532	CallExpression	"r_cons_printf ( ""%02x"" , r_buf_read8 ( b ) )"		908482	0					
ANR	908533	Callee	r_cons_printf		908482	0					
ANR	908534	Identifier	r_cons_printf		908482	0					
ANR	908535	ArgumentList	"""%02x"""		908482	1					
ANR	908536	Argument	"""%02x"""		908482	0					
ANR	908537	PrimaryExpression	"""%02x"""		908482	0					
ANR	908538	Argument	r_buf_read8 ( b )		908482	1					
ANR	908539	CallExpression	r_buf_read8 ( b )		908482	0					
ANR	908540	Callee	r_buf_read8		908482	0					
ANR	908541	Identifier	r_buf_read8		908482	0					
ANR	908542	ArgumentList	b		908482	1					
ANR	908543	Argument	b		908482	0					
ANR	908544	Identifier	b		908482	0					
ANR	908545	ExpressionStatement	r_cons_newline ( )	51:2:1373:1390	908482	2	True				
ANR	908546	CallExpression	r_cons_newline ( )		908482	0					
ANR	908547	Callee	r_cons_newline		908482	0					
ANR	908548	Identifier	r_cons_newline		908482	0					
ANR	908549	ArgumentList			908482	1					
ANR	908550	ReturnType	static void		908482	1					
ANR	908551	Identifier	showBuffer		908482	2					
ANR	908552	ParameterList	RBuffer * b		908482	3					
ANR	908553	Parameter	RBuffer * b	44:23:1196:1205	908482	0	True				
ANR	908554	ParameterType	RBuffer *		908482	0					
ANR	908555	Identifier	b		908482	1					
ANR	908556	CFGEntryNode	ENTRY		908482		True				
ANR	908557	CFGExitNode	EXIT		908482		True				
ANR	908558	Symbol	R_BUF_SET		908482						
ANR	908559	Symbol	b		908482						
ANR	908560	Symbol	i		908482						
ANR	908561	Symbol	r_buf_read8		908482						
ANR	908562	Symbol	r_buf_size		908482						
ANR	908563	Function	compileShellcode	56:0:1404:2020							
ANR	908564	FunctionDef	"compileShellcode (REgg * egg , const char * input)"		908563	0					
ANR	908565	CompoundStatement		56:57:1461:2020	908563	0					
ANR	908566	IdentifierDeclStatement	int i = 0 ;	57:1:1464:1473	908563	0	True				
ANR	908567	IdentifierDecl	i = 0		908563	0					
ANR	908568	IdentifierDeclType	int		908563	0					
ANR	908569	Identifier	i		908563	1					
ANR	908570	AssignmentExpression	i = 0		908563	2		=			
ANR	908571	Identifier	i		908563	0					
ANR	908572	PrimaryExpression	0		908563	1					
ANR	908573	IdentifierDeclStatement	RBuffer * b ;	58:1:1476:1486	908563	1	True				
ANR	908574	IdentifierDecl	* b		908563	0					
ANR	908575	IdentifierDeclType	RBuffer *		908563	0					
ANR	908576	Identifier	b		908563	1					
ANR	908577	IfStatement	"if ( ! r_egg_shellcode ( egg , input ) )"		908563	2					
ANR	908578	Condition	"! r_egg_shellcode ( egg , input )"	59:5:1493:1521	908563	0	True				
ANR	908579	UnaryOperationExpression	"! r_egg_shellcode ( egg , input )"		908563	0					
ANR	908580	UnaryOperator	!		908563	0					
ANR	908581	CallExpression	"r_egg_shellcode ( egg , input )"		908563	1					
ANR	908582	Callee	r_egg_shellcode		908563	0					
ANR	908583	Identifier	r_egg_shellcode		908563	0					
ANR	908584	ArgumentList	egg		908563	1					
ANR	908585	Argument	egg		908563	0					
ANR	908586	Identifier	egg		908563	0					
ANR	908587	Argument	input		908563	1					
ANR	908588	Identifier	input		908563	0					
ANR	908589	CompoundStatement		4:36:62:62	908563	1					
ANR	908590	ExpressionStatement	"eprintf ( ""Unknown shellcode '%s'\\n"" , input )"	60:2:1528:1571	908563	0	True				
ANR	908591	CallExpression	"eprintf ( ""Unknown shellcode '%s'\\n"" , input )"		908563	0					
ANR	908592	Callee	eprintf		908563	0					
ANR	908593	Identifier	eprintf		908563	0					
ANR	908594	ArgumentList	"""Unknown shellcode '%s'\\n"""		908563	1					
ANR	908595	Argument	"""Unknown shellcode '%s'\\n"""		908563	0					
ANR	908596	PrimaryExpression	"""Unknown shellcode '%s'\\n"""		908563	0					
ANR	908597	Argument	input		908563	1					
ANR	908598	Identifier	input		908563	0					
ANR	908599	ReturnStatement	return 1 ;	61:2:1575:1583	908563	1	True				
ANR	908600	PrimaryExpression	1		908563	0					
ANR	908601	IfStatement	if ( ! r_egg_assemble ( egg ) )		908563	3					
ANR	908602	Condition	! r_egg_assemble ( egg )	63:5:1593:1613	908563	0	True				
ANR	908603	UnaryOperationExpression	! r_egg_assemble ( egg )		908563	0					
ANR	908604	UnaryOperator	!		908563	0					
ANR	908605	CallExpression	r_egg_assemble ( egg )		908563	1					
ANR	908606	Callee	r_egg_assemble		908563	0					
ANR	908607	Identifier	r_egg_assemble		908563	0					
ANR	908608	ArgumentList	egg		908563	1					
ANR	908609	Argument	egg		908563	0					
ANR	908610	Identifier	egg		908563	0					
ANR	908611	CompoundStatement		8:28:154:154	908563	1					
ANR	908612	ExpressionStatement	"eprintf ( ""r_egg_assemble : invalid assembly\\n"" )"	64:2:1620:1667	908563	0	True				
ANR	908613	CallExpression	"eprintf ( ""r_egg_assemble : invalid assembly\\n"" )"		908563	0					
ANR	908614	Callee	eprintf		908563	0					
ANR	908615	Identifier	eprintf		908563	0					
ANR	908616	ArgumentList	"""r_egg_assemble : invalid assembly\\n"""		908563	1					
ANR	908617	Argument	"""r_egg_assemble : invalid assembly\\n"""		908563	0					
ANR	908618	PrimaryExpression	"""r_egg_assemble : invalid assembly\\n"""		908563	0					
ANR	908619	ExpressionStatement	r_egg_reset ( egg )	65:2:1671:1688	908563	1	True				
ANR	908620	CallExpression	r_egg_reset ( egg )		908563	0					
ANR	908621	Callee	r_egg_reset		908563	0					
ANR	908622	Identifier	r_egg_reset		908563	0					
ANR	908623	ArgumentList	egg		908563	1					
ANR	908624	Argument	egg		908563	0					
ANR	908625	Identifier	egg		908563	0					
ANR	908626	ReturnStatement	return 1 ;	66:2:1692:1700	908563	2	True				
ANR	908627	PrimaryExpression	1		908563	0					
ANR	908628	IfStatement	if ( ! egg -> bin )		908563	4					
ANR	908629	Condition	! egg -> bin	68:5:1710:1718	908563	0	True				
ANR	908630	UnaryOperationExpression	! egg -> bin		908563	0					
ANR	908631	UnaryOperator	!		908563	0					
ANR	908632	PtrMemberAccess	egg -> bin		908563	1					
ANR	908633	Identifier	egg		908563	0					
ANR	908634	Identifier	bin		908563	1					
ANR	908635	CompoundStatement		13:16:259:259	908563	1					
ANR	908636	ExpressionStatement	egg -> bin = r_buf_new ( )	69:2:1725:1748	908563	0	True				
ANR	908637	AssignmentExpression	egg -> bin = r_buf_new ( )		908563	0		=			
ANR	908638	PtrMemberAccess	egg -> bin		908563	0					
ANR	908639	Identifier	egg		908563	0					
ANR	908640	Identifier	bin		908563	1					
ANR	908641	CallExpression	r_buf_new ( )		908563	1					
ANR	908642	Callee	r_buf_new		908563	0					
ANR	908643	Identifier	r_buf_new		908563	0					
ANR	908644	ArgumentList			908563	1					
ANR	908645	IfStatement	if ( ! ( b = r_egg_get_bin ( egg ) ) )		908563	5					
ANR	908646	Condition	! ( b = r_egg_get_bin ( egg ) )	71:5:1758:1783	908563	0	True				
ANR	908647	UnaryOperationExpression	! ( b = r_egg_get_bin ( egg ) )		908563	0					
ANR	908648	UnaryOperator	!		908563	0					
ANR	908649	AssignmentExpression	b = r_egg_get_bin ( egg )		908563	1		=			
ANR	908650	Identifier	b		908563	0					
ANR	908651	CallExpression	r_egg_get_bin ( egg )		908563	1					
ANR	908652	Callee	r_egg_get_bin		908563	0					
ANR	908653	Identifier	r_egg_get_bin		908563	0					
ANR	908654	ArgumentList	egg		908563	1					
ANR	908655	Argument	egg		908563	0					
ANR	908656	Identifier	egg		908563	0					
ANR	908657	CompoundStatement		16:33:324:324	908563	1					
ANR	908658	ExpressionStatement	"eprintf ( ""r_egg_get_bin: invalid egg :(\\n"" )"	72:2:1790:1833	908563	0	True				
ANR	908659	CallExpression	"eprintf ( ""r_egg_get_bin: invalid egg :(\\n"" )"		908563	0					
ANR	908660	Callee	eprintf		908563	0					
ANR	908661	Identifier	eprintf		908563	0					
ANR	908662	ArgumentList	"""r_egg_get_bin: invalid egg :(\\n"""		908563	1					
ANR	908663	Argument	"""r_egg_get_bin: invalid egg :(\\n"""		908563	0					
ANR	908664	PrimaryExpression	"""r_egg_get_bin: invalid egg :(\\n"""		908563	0					
ANR	908665	ExpressionStatement	r_egg_reset ( egg )	73:2:1837:1854	908563	1	True				
ANR	908666	CallExpression	r_egg_reset ( egg )		908563	0					
ANR	908667	Callee	r_egg_reset		908563	0					
ANR	908668	Identifier	r_egg_reset		908563	0					
ANR	908669	ArgumentList	egg		908563	1					
ANR	908670	Argument	egg		908563	0					
ANR	908671	Identifier	egg		908563	0					
ANR	908672	ReturnStatement	return 1 ;	74:2:1858:1866	908563	2	True				
ANR	908673	PrimaryExpression	1		908563	0					
ANR	908674	ExpressionStatement	r_egg_finalize ( egg )	76:1:1872:1892	908563	6	True				
ANR	908675	CallExpression	r_egg_finalize ( egg )		908563	0					
ANR	908676	Callee	r_egg_finalize		908563	0					
ANR	908677	Identifier	r_egg_finalize		908563	0					
ANR	908678	ArgumentList	egg		908563	1					
ANR	908679	Argument	egg		908563	0					
ANR	908680	Identifier	egg		908563	0					
ANR	908681	ForStatement	for ( i = 0 ; i < b -> length ; i ++ )		908563	7					
ANR	908682	ForInit	i = 0 ;	77:6:1900:1905	908563	0	True				
ANR	908683	AssignmentExpression	i = 0		908563	0		=			
ANR	908684	Identifier	i		908563	0					
ANR	908685	PrimaryExpression	0		908563	1					
ANR	908686	Condition	i < b -> length	77:13:1907:1919	908563	1	True				
ANR	908687	RelationalExpression	i < b -> length		908563	0		<			
ANR	908688	Identifier	i		908563	0					
ANR	908689	PtrMemberAccess	b -> length		908563	1					
ANR	908690	Identifier	b		908563	0					
ANR	908691	Identifier	length		908563	1					
ANR	908692	PostIncDecOperationExpression	i ++	77:28:1922:1924	908563	2	True				
ANR	908693	Identifier	i		908563	0					
ANR	908694	IncDec	++		908563	1					
ANR	908695	CompoundStatement		22:33:465:465	908563	3					
ANR	908696	ExpressionStatement	"r_cons_printf ( ""%02x"" , b -> buf [ i ] )"	78:2:1931:1964	908563	0	True				
ANR	908697	CallExpression	"r_cons_printf ( ""%02x"" , b -> buf [ i ] )"		908563	0					
ANR	908698	Callee	r_cons_printf		908563	0					
ANR	908699	Identifier	r_cons_printf		908563	0					
ANR	908700	ArgumentList	"""%02x"""		908563	1					
ANR	908701	Argument	"""%02x"""		908563	0					
ANR	908702	PrimaryExpression	"""%02x"""		908563	0					
ANR	908703	Argument	b -> buf [ i ]		908563	1					
ANR	908704	ArrayIndexing	b -> buf [ i ]		908563	0					
ANR	908705	PtrMemberAccess	b -> buf		908563	0					
ANR	908706	Identifier	b		908563	0					
ANR	908707	Identifier	buf		908563	1					
ANR	908708	Identifier	i		908563	1					
ANR	908709	ExpressionStatement	r_cons_newline ( )	80:1:1970:1987	908563	8	True				
ANR	908710	CallExpression	r_cons_newline ( )		908563	0					
ANR	908711	Callee	r_cons_newline		908563	0					
ANR	908712	Identifier	r_cons_newline		908563	0					
ANR	908713	ArgumentList			908563	1					
ANR	908714	ExpressionStatement	r_egg_reset ( egg )	81:1:1990:2007	908563	9	True				
ANR	908715	CallExpression	r_egg_reset ( egg )		908563	0					
ANR	908716	Callee	r_egg_reset		908563	0					
ANR	908717	Identifier	r_egg_reset		908563	0					
ANR	908718	ArgumentList	egg		908563	1					
ANR	908719	Argument	egg		908563	0					
ANR	908720	Identifier	egg		908563	0					
ANR	908721	ReturnStatement	return 0 ;	82:1:2010:2018	908563	10	True				
ANR	908722	PrimaryExpression	0		908563	0					
ANR	908723	ReturnType	static int		908563	1					
ANR	908724	Identifier	compileShellcode		908563	2					
ANR	908725	ParameterList	"REgg * egg , const char * input"		908563	3					
ANR	908726	Parameter	REgg * egg	56:28:1432:1440	908563	0	True				
ANR	908727	ParameterType	REgg *		908563	0					
ANR	908728	Identifier	egg		908563	1					
ANR	908729	Parameter	const char * input	56:39:1443:1459	908563	1	True				
ANR	908730	ParameterType	const char *		908563	0					
ANR	908731	Identifier	input		908563	1					
ANR	908732	CFGEntryNode	ENTRY		908563		True				
ANR	908733	CFGExitNode	EXIT		908563		True				
ANR	908734	Symbol	* b -> buf		908563						
ANR	908735	Symbol	b		908563						
ANR	908736	Symbol	egg		908563						
ANR	908737	Symbol	i		908563						
ANR	908738	Symbol	* * b		908563						
ANR	908739	Symbol	* b		908563						
ANR	908740	Symbol	* egg		908563						
ANR	908741	Symbol	input		908563						
ANR	908742	Symbol	* i		908563						
ANR	908743	Symbol	r_egg_assemble		908563						
ANR	908744	Symbol	egg -> bin		908563						
ANR	908745	Symbol	b -> length		908563						
ANR	908746	Symbol	r_egg_get_bin		908563						
ANR	908747	Symbol	r_egg_shellcode		908563						
ANR	908748	Symbol	r_buf_new		908563						
ANR	908749	Symbol	b -> buf		908563						
ANR	908750	Function	cmd_egg_compile	86:0:2030:3038							
ANR	908751	FunctionDef	cmd_egg_compile (REgg * egg)		908750	0					
ANR	908752	CompoundStatement		86:38:2068:3038	908750	0					
ANR	908753	IdentifierDeclStatement	RBuffer * b ;	87:1:2071:2081	908750	0	True				
ANR	908754	IdentifierDecl	* b		908750	0					
ANR	908755	IdentifierDeclType	RBuffer *		908750	0					
ANR	908756	Identifier	b		908750	1					
ANR	908757	IdentifierDeclStatement	int ret = false ;	88:1:2084:2099	908750	1	True				
ANR	908758	IdentifierDecl	ret = false		908750	0					
ANR	908759	IdentifierDeclType	int		908750	0					
ANR	908760	Identifier	ret		908750	1					
ANR	908761	AssignmentExpression	ret = false		908750	2		=			
ANR	908762	Identifier	false		908750	0					
ANR	908763	Identifier	false		908750	1					
ANR	908764	IdentifierDeclStatement	"char * p = r_egg_option_get ( egg , ""egg.shellcode"" ) ;"	89:1:2102:2151	908750	2	True				
ANR	908765	IdentifierDecl	"* p = r_egg_option_get ( egg , ""egg.shellcode"" )"		908750	0					
ANR	908766	IdentifierDeclType	char *		908750	0					
ANR	908767	Identifier	p		908750	1					
ANR	908768	AssignmentExpression	"* p = r_egg_option_get ( egg , ""egg.shellcode"" )"		908750	2		=			
ANR	908769	Identifier	p		908750	0					
ANR	908770	CallExpression	"r_egg_option_get ( egg , ""egg.shellcode"" )"		908750	1					
ANR	908771	Callee	r_egg_option_get		908750	0					
ANR	908772	Identifier	r_egg_option_get		908750	0					
ANR	908773	ArgumentList	egg		908750	1					
ANR	908774	Argument	egg		908750	0					
ANR	908775	Identifier	egg		908750	0					
ANR	908776	Argument	"""egg.shellcode"""		908750	1					
ANR	908777	PrimaryExpression	"""egg.shellcode"""		908750	0					
ANR	908778	IfStatement	if ( p && * p )		908750	3					
ANR	908779	Condition	p && * p	90:5:2158:2164	908750	0	True				
ANR	908780	AndExpression	p && * p		908750	0		&&			
ANR	908781	Identifier	p		908750	0					
ANR	908782	UnaryOperationExpression	* p		908750	1					
ANR	908783	UnaryOperator	*		908750	0					
ANR	908784	Identifier	p		908750	1					
ANR	908785	CompoundStatement		5:14:98:98	908750	1					
ANR	908786	IfStatement	"if ( ! r_egg_shellcode ( egg , p ) )"		908750	0					
ANR	908787	Condition	"! r_egg_shellcode ( egg , p )"	91:6:2175:2199	908750	0	True				
ANR	908788	UnaryOperationExpression	"! r_egg_shellcode ( egg , p )"		908750	0					
ANR	908789	UnaryOperator	!		908750	0					
ANR	908790	CallExpression	"r_egg_shellcode ( egg , p )"		908750	1					
ANR	908791	Callee	r_egg_shellcode		908750	0					
ANR	908792	Identifier	r_egg_shellcode		908750	0					
ANR	908793	ArgumentList	egg		908750	1					
ANR	908794	Argument	egg		908750	0					
ANR	908795	Identifier	egg		908750	0					
ANR	908796	Argument	p		908750	1					
ANR	908797	Identifier	p		908750	0					
ANR	908798	CompoundStatement		6:33:133:133	908750	1					
ANR	908799	ExpressionStatement	"eprintf ( ""Unknown shellcode '%s'\\n"" , p )"	92:3:2207:2246	908750	0	True				
ANR	908800	CallExpression	"eprintf ( ""Unknown shellcode '%s'\\n"" , p )"		908750	0					
ANR	908801	Callee	eprintf		908750	0					
ANR	908802	Identifier	eprintf		908750	0					
ANR	908803	ArgumentList	"""Unknown shellcode '%s'\\n"""		908750	1					
ANR	908804	Argument	"""Unknown shellcode '%s'\\n"""		908750	0					
ANR	908805	PrimaryExpression	"""Unknown shellcode '%s'\\n"""		908750	0					
ANR	908806	Argument	p		908750	1					
ANR	908807	Identifier	p		908750	0					
ANR	908808	ExpressionStatement	free ( p )	93:3:2251:2259	908750	1	True				
ANR	908809	CallExpression	free ( p )		908750	0					
ANR	908810	Callee	free		908750	0					
ANR	908811	Identifier	free		908750	0					
ANR	908812	ArgumentList	p		908750	1					
ANR	908813	Argument	p		908750	0					
ANR	908814	Identifier	p		908750	0					
ANR	908815	ReturnStatement	return false ;	94:3:2264:2276	908750	2	True				
ANR	908816	Identifier	false		908750	0					
ANR	908817	ExpressionStatement	free ( p )	96:2:2284:2292	908750	1	True				
ANR	908818	CallExpression	free ( p )		908750	0					
ANR	908819	Callee	free		908750	0					
ANR	908820	Identifier	free		908750	0					
ANR	908821	ArgumentList	p		908750	1					
ANR	908822	Argument	p		908750	0					
ANR	908823	Identifier	p		908750	0					
ANR	908824	ElseStatement	else		908750	0					
ANR	908825	CompoundStatement		12:8:233:233	908750	0					
ANR	908826	ExpressionStatement	"eprintf ( ""Setup a shellcode before (gi command)\\n"" )"	98:2:2306:2357	908750	0	True				
ANR	908827	CallExpression	"eprintf ( ""Setup a shellcode before (gi command)\\n"" )"		908750	0					
ANR	908828	Callee	eprintf		908750	0					
ANR	908829	Identifier	eprintf		908750	0					
ANR	908830	ArgumentList	"""Setup a shellcode before (gi command)\\n"""		908750	1					
ANR	908831	Argument	"""Setup a shellcode before (gi command)\\n"""		908750	0					
ANR	908832	PrimaryExpression	"""Setup a shellcode before (gi command)\\n"""		908750	0					
ANR	908833	ExpressionStatement	free ( p )	99:2:2361:2369	908750	1	True				
ANR	908834	CallExpression	free ( p )		908750	0					
ANR	908835	Callee	free		908750	0					
ANR	908836	Identifier	free		908750	0					
ANR	908837	ArgumentList	p		908750	1					
ANR	908838	Argument	p		908750	0					
ANR	908839	Identifier	p		908750	0					
ANR	908840	ReturnStatement	return false ;	100:2:2373:2385	908750	2	True				
ANR	908841	Identifier	false		908750	0					
ANR	908842	ExpressionStatement	r_egg_compile ( egg )	103:1:2392:2411	908750	4	True				
ANR	908843	CallExpression	r_egg_compile ( egg )		908750	0					
ANR	908844	Callee	r_egg_compile		908750	0					
ANR	908845	Identifier	r_egg_compile		908750	0					
ANR	908846	ArgumentList	egg		908750	1					
ANR	908847	Argument	egg		908750	0					
ANR	908848	Identifier	egg		908750	0					
ANR	908849	IfStatement	if ( ! r_egg_assemble ( egg ) )		908750	5					
ANR	908850	Condition	! r_egg_assemble ( egg )	104:5:2418:2438	908750	0	True				
ANR	908851	UnaryOperationExpression	! r_egg_assemble ( egg )		908750	0					
ANR	908852	UnaryOperator	!		908750	0					
ANR	908853	CallExpression	r_egg_assemble ( egg )		908750	1					
ANR	908854	Callee	r_egg_assemble		908750	0					
ANR	908855	Identifier	r_egg_assemble		908750	0					
ANR	908856	ArgumentList	egg		908750	1					
ANR	908857	Argument	egg		908750	0					
ANR	908858	Identifier	egg		908750	0					
ANR	908859	CompoundStatement		19:28:372:372	908750	1					
ANR	908860	ExpressionStatement	"eprintf ( ""r_egg_assemble: invalid assembly\\n"" )"	105:2:2445:2491	908750	0	True				
ANR	908861	CallExpression	"eprintf ( ""r_egg_assemble: invalid assembly\\n"" )"		908750	0					
ANR	908862	Callee	eprintf		908750	0					
ANR	908863	Identifier	eprintf		908750	0					
ANR	908864	ArgumentList	"""r_egg_assemble: invalid assembly\\n"""		908750	1					
ANR	908865	Argument	"""r_egg_assemble: invalid assembly\\n"""		908750	0					
ANR	908866	PrimaryExpression	"""r_egg_assemble: invalid assembly\\n"""		908750	0					
ANR	908867	ReturnStatement	return false ;	106:2:2495:2507	908750	1	True				
ANR	908868	Identifier	false		908750	0					
ANR	908869	ExpressionStatement	"p = r_egg_option_get ( egg , ""egg.padding"" )"	108:1:2513:2554	908750	6	True				
ANR	908870	AssignmentExpression	"p = r_egg_option_get ( egg , ""egg.padding"" )"		908750	0		=			
ANR	908871	Identifier	p		908750	0					
ANR	908872	CallExpression	"r_egg_option_get ( egg , ""egg.padding"" )"		908750	1					
ANR	908873	Callee	r_egg_option_get		908750	0					
ANR	908874	Identifier	r_egg_option_get		908750	0					
ANR	908875	ArgumentList	egg		908750	1					
ANR	908876	Argument	egg		908750	0					
ANR	908877	Identifier	egg		908750	0					
ANR	908878	Argument	"""egg.padding"""		908750	1					
ANR	908879	PrimaryExpression	"""egg.padding"""		908750	0					
ANR	908880	IfStatement	if ( p && * p )		908750	7					
ANR	908881	Condition	p && * p	109:5:2561:2567	908750	0	True				
ANR	908882	AndExpression	p && * p		908750	0		&&			
ANR	908883	Identifier	p		908750	0					
ANR	908884	UnaryOperationExpression	* p		908750	1					
ANR	908885	UnaryOperator	*		908750	0					
ANR	908886	Identifier	p		908750	1					
ANR	908887	CompoundStatement		24:14:501:501	908750	1					
ANR	908888	ExpressionStatement	"r_egg_padding ( egg , p )"	110:2:2574:2596	908750	0	True				
ANR	908889	CallExpression	"r_egg_padding ( egg , p )"		908750	0					
ANR	908890	Callee	r_egg_padding		908750	0					
ANR	908891	Identifier	r_egg_padding		908750	0					
ANR	908892	ArgumentList	egg		908750	1					
ANR	908893	Argument	egg		908750	0					
ANR	908894	Identifier	egg		908750	0					
ANR	908895	Argument	p		908750	1					
ANR	908896	Identifier	p		908750	0					
ANR	908897	ExpressionStatement	free ( p )	111:2:2600:2608	908750	1	True				
ANR	908898	CallExpression	free ( p )		908750	0					
ANR	908899	Callee	free		908750	0					
ANR	908900	Identifier	free		908750	0					
ANR	908901	ArgumentList	p		908750	1					
ANR	908902	Argument	p		908750	0					
ANR	908903	Identifier	p		908750	0					
ANR	908904	ExpressionStatement	"p = r_egg_option_get ( egg , ""egg.encoder"" )"	113:1:2614:2655	908750	8	True				
ANR	908905	AssignmentExpression	"p = r_egg_option_get ( egg , ""egg.encoder"" )"		908750	0		=			
ANR	908906	Identifier	p		908750	0					
ANR	908907	CallExpression	"r_egg_option_get ( egg , ""egg.encoder"" )"		908750	1					
ANR	908908	Callee	r_egg_option_get		908750	0					
ANR	908909	Identifier	r_egg_option_get		908750	0					
ANR	908910	ArgumentList	egg		908750	1					
ANR	908911	Argument	egg		908750	0					
ANR	908912	Identifier	egg		908750	0					
ANR	908913	Argument	"""egg.encoder"""		908750	1					
ANR	908914	PrimaryExpression	"""egg.encoder"""		908750	0					
ANR	908915	IfStatement	if ( p && * p )		908750	9					
ANR	908916	Condition	p && * p	114:5:2662:2668	908750	0	True				
ANR	908917	AndExpression	p && * p		908750	0		&&			
ANR	908918	Identifier	p		908750	0					
ANR	908919	UnaryOperationExpression	* p		908750	1					
ANR	908920	UnaryOperator	*		908750	0					
ANR	908921	Identifier	p		908750	1					
ANR	908922	CompoundStatement		29:14:602:602	908750	1					
ANR	908923	ExpressionStatement	"r_egg_encode ( egg , p )"	115:2:2675:2696	908750	0	True				
ANR	908924	CallExpression	"r_egg_encode ( egg , p )"		908750	0					
ANR	908925	Callee	r_egg_encode		908750	0					
ANR	908926	Identifier	r_egg_encode		908750	0					
ANR	908927	ArgumentList	egg		908750	1					
ANR	908928	Argument	egg		908750	0					
ANR	908929	Identifier	egg		908750	0					
ANR	908930	Argument	p		908750	1					
ANR	908931	Identifier	p		908750	0					
ANR	908932	ExpressionStatement	free ( p )	116:2:2700:2708	908750	1	True				
ANR	908933	CallExpression	free ( p )		908750	0					
ANR	908934	Callee	free		908750	0					
ANR	908935	Identifier	free		908750	0					
ANR	908936	ArgumentList	p		908750	1					
ANR	908937	Argument	p		908750	0					
ANR	908938	Identifier	p		908750	0					
ANR	908939	IfStatement	if ( ( b = r_egg_get_bin ( egg ) ) )		908750	10					
ANR	908940	Condition	b = r_egg_get_bin ( egg )	118:5:2718:2742	908750	0	True				
ANR	908941	AssignmentExpression	b = r_egg_get_bin ( egg )		908750	0		=			
ANR	908942	Identifier	b		908750	0					
ANR	908943	CallExpression	r_egg_get_bin ( egg )		908750	1					
ANR	908944	Callee	r_egg_get_bin		908750	0					
ANR	908945	Identifier	r_egg_get_bin		908750	0					
ANR	908946	ArgumentList	egg		908750	1					
ANR	908947	Argument	egg		908750	0					
ANR	908948	Identifier	egg		908750	0					
ANR	908949	CompoundStatement		33:32:676:676	908750	1					
ANR	908950	ExpressionStatement	showBuffer ( b )	119:2:2749:2763	908750	0	True				
ANR	908951	CallExpression	showBuffer ( b )		908750	0					
ANR	908952	Callee	showBuffer		908750	0					
ANR	908953	Identifier	showBuffer		908750	0					
ANR	908954	ArgumentList	b		908750	1					
ANR	908955	Argument	b		908750	0					
ANR	908956	Identifier	b		908750	0					
ANR	908957	ExpressionStatement	ret = true	120:2:2767:2777	908750	1	True				
ANR	908958	AssignmentExpression	ret = true		908750	0		=			
ANR	908959	Identifier	ret		908750	0					
ANR	908960	Identifier	true		908750	1					
ANR	908961	ExpressionStatement	"r_egg_option_set ( egg , ""egg.shellcode"" , """" )"	124:1:2835:2878	908750	11	True				
ANR	908962	CallExpression	"r_egg_option_set ( egg , ""egg.shellcode"" , """" )"		908750	0					
ANR	908963	Callee	r_egg_option_set		908750	0					
ANR	908964	Identifier	r_egg_option_set		908750	0					
ANR	908965	ArgumentList	egg		908750	1					
ANR	908966	Argument	egg		908750	0					
ANR	908967	Identifier	egg		908750	0					
ANR	908968	Argument	"""egg.shellcode"""		908750	1					
ANR	908969	PrimaryExpression	"""egg.shellcode"""		908750	0					
ANR	908970	Argument	""""""		908750	2					
ANR	908971	PrimaryExpression	""""""		908750	0					
ANR	908972	ExpressionStatement	"r_egg_option_set ( egg , ""egg.padding"" , """" )"	125:1:2881:2922	908750	12	True				
ANR	908973	CallExpression	"r_egg_option_set ( egg , ""egg.padding"" , """" )"		908750	0					
ANR	908974	Callee	r_egg_option_set		908750	0					
ANR	908975	Identifier	r_egg_option_set		908750	0					
ANR	908976	ArgumentList	egg		908750	1					
ANR	908977	Argument	egg		908750	0					
ANR	908978	Identifier	egg		908750	0					
ANR	908979	Argument	"""egg.padding"""		908750	1					
ANR	908980	PrimaryExpression	"""egg.padding"""		908750	0					
ANR	908981	Argument	""""""		908750	2					
ANR	908982	PrimaryExpression	""""""		908750	0					
ANR	908983	ExpressionStatement	"r_egg_option_set ( egg , ""egg.encoder"" , """" )"	126:1:2925:2966	908750	13	True				
ANR	908984	CallExpression	"r_egg_option_set ( egg , ""egg.encoder"" , """" )"		908750	0					
ANR	908985	Callee	r_egg_option_set		908750	0					
ANR	908986	Identifier	r_egg_option_set		908750	0					
ANR	908987	ArgumentList	egg		908750	1					
ANR	908988	Argument	egg		908750	0					
ANR	908989	Identifier	egg		908750	0					
ANR	908990	Argument	"""egg.encoder"""		908750	1					
ANR	908991	PrimaryExpression	"""egg.encoder"""		908750	0					
ANR	908992	Argument	""""""		908750	2					
ANR	908993	PrimaryExpression	""""""		908750	0					
ANR	908994	ExpressionStatement	"r_egg_option_set ( egg , ""key"" , """" )"	127:1:2969:3002	908750	14	True				
ANR	908995	CallExpression	"r_egg_option_set ( egg , ""key"" , """" )"		908750	0					
ANR	908996	Callee	r_egg_option_set		908750	0					
ANR	908997	Identifier	r_egg_option_set		908750	0					
ANR	908998	ArgumentList	egg		908750	1					
ANR	908999	Argument	egg		908750	0					
ANR	909000	Identifier	egg		908750	0					
ANR	909001	Argument	"""key"""		908750	1					
ANR	909002	PrimaryExpression	"""key"""		908750	0					
ANR	909003	Argument	""""""		908750	2					
ANR	909004	PrimaryExpression	""""""		908750	0					
ANR	909005	ExpressionStatement	r_egg_reset ( egg )	129:1:3006:3023	908750	15	True				
ANR	909006	CallExpression	r_egg_reset ( egg )		908750	0					
ANR	909007	Callee	r_egg_reset		908750	0					
ANR	909008	Identifier	r_egg_reset		908750	0					
ANR	909009	ArgumentList	egg		908750	1					
ANR	909010	Argument	egg		908750	0					
ANR	909011	Identifier	egg		908750	0					
ANR	909012	ReturnStatement	return ret ;	130:1:3026:3036	908750	16	True				
ANR	909013	Identifier	ret		908750	0					
ANR	909014	ReturnType	static int		908750	1					
ANR	909015	Identifier	cmd_egg_compile		908750	2					
ANR	909016	ParameterList	REgg * egg		908750	3					
ANR	909017	Parameter	REgg * egg	86:27:2057:2065	908750	0	True				
ANR	909018	ParameterType	REgg *		908750	0					
ANR	909019	Identifier	egg		908750	1					
ANR	909020	CFGEntryNode	ENTRY		908750		True				
ANR	909021	CFGExitNode	EXIT		908750		True				
ANR	909022	Symbol	ret		908750						
ANR	909023	Symbol	p		908750						
ANR	909024	Symbol	b		908750						
ANR	909025	Symbol	egg		908750						
ANR	909026	Symbol	r_egg_assemble		908750						
ANR	909027	Symbol	r_egg_option_get		908750						
ANR	909028	Symbol	false		908750						
ANR	909029	Symbol	r_egg_get_bin		908750						
ANR	909030	Symbol	true		908750						
ANR	909031	Symbol	* p		908750						
ANR	909032	Symbol	r_egg_shellcode		908750						
ANR	909033	Function	cmd_egg	133:0:3041:6722							
ANR	909034	FunctionDef	"cmd_egg (void * data , const char * input)"		909033	0					
ANR	909035	CompoundStatement		133:50:3091:6722	909033	0					
ANR	909036	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	134:1:3094:3122	909033	0	True				
ANR	909037	IdentifierDecl	* core = ( RCore * ) data		909033	0					
ANR	909038	IdentifierDeclType	RCore *		909033	0					
ANR	909039	Identifier	core		909033	1					
ANR	909040	AssignmentExpression	* core = ( RCore * ) data		909033	2		=			
ANR	909041	Identifier	core		909033	0					
ANR	909042	CastExpression	( RCore * ) data		909033	1					
ANR	909043	CastTarget	RCore *		909033	0					
ANR	909044	Identifier	data		909033	1					
ANR	909045	IdentifierDeclStatement	REgg * egg = core -> egg ;	135:1:3125:3146	909033	1	True				
ANR	909046	IdentifierDecl	* egg = core -> egg		909033	0					
ANR	909047	IdentifierDeclType	REgg *		909033	0					
ANR	909048	Identifier	egg		909033	1					
ANR	909049	AssignmentExpression	* egg = core -> egg		909033	2		=			
ANR	909050	Identifier	egg		909033	0					
ANR	909051	PtrMemberAccess	core -> egg		909033	1					
ANR	909052	Identifier	core		909033	0					
ANR	909053	Identifier	egg		909033	1					
ANR	909054	IdentifierDeclStatement	"char * oa , * p ;"	136:1:3149:3161	909033	2	True				
ANR	909055	IdentifierDecl	* oa		909033	0					
ANR	909056	IdentifierDeclType	char *		909033	0					
ANR	909057	Identifier	oa		909033	1					
ANR	909058	IdentifierDecl	* p		909033	1					
ANR	909059	IdentifierDeclType	char *		909033	0					
ANR	909060	Identifier	p		909033	1					
ANR	909061	ExpressionStatement	"r_egg_setup ( egg , r_config_get ( core -> config , ""asm.arch"" ) , core -> assembler -> bits , 0 , r_config_get ( core -> config , ""asm.os"" ) )"	137:1:3164:3293	909033	3	True				
ANR	909062	CallExpression	"r_egg_setup ( egg , r_config_get ( core -> config , ""asm.arch"" ) , core -> assembler -> bits , 0 , r_config_get ( core -> config , ""asm.os"" ) )"		909033	0					
ANR	909063	Callee	r_egg_setup		909033	0					
ANR	909064	Identifier	r_egg_setup		909033	0					
ANR	909065	ArgumentList	egg		909033	1					
ANR	909066	Argument	egg		909033	0					
ANR	909067	Identifier	egg		909033	0					
ANR	909068	Argument	"r_config_get ( core -> config , ""asm.arch"" )"		909033	1					
ANR	909069	CallExpression	"r_config_get ( core -> config , ""asm.arch"" )"		909033	0					
ANR	909070	Callee	r_config_get		909033	0					
ANR	909071	Identifier	r_config_get		909033	0					
ANR	909072	ArgumentList	core -> config		909033	1					
ANR	909073	Argument	core -> config		909033	0					
ANR	909074	PtrMemberAccess	core -> config		909033	0					
ANR	909075	Identifier	core		909033	0					
ANR	909076	Identifier	config		909033	1					
ANR	909077	Argument	"""asm.arch"""		909033	1					
ANR	909078	PrimaryExpression	"""asm.arch"""		909033	0					
ANR	909079	Argument	core -> assembler -> bits		909033	2					
ANR	909080	PtrMemberAccess	core -> assembler -> bits		909033	0					
ANR	909081	PtrMemberAccess	core -> assembler		909033	0					
ANR	909082	Identifier	core		909033	0					
ANR	909083	Identifier	assembler		909033	1					
ANR	909084	Identifier	bits		909033	1					
ANR	909085	Argument	0		909033	3					
ANR	909086	PrimaryExpression	0		909033	0					
ANR	909087	Argument	"r_config_get ( core -> config , ""asm.os"" )"		909033	4					
ANR	909088	CallExpression	"r_config_get ( core -> config , ""asm.os"" )"		909033	0					
ANR	909089	Callee	r_config_get		909033	0					
ANR	909090	Identifier	r_config_get		909033	0					
ANR	909091	ArgumentList	core -> config		909033	1					
ANR	909092	Argument	core -> config		909033	0					
ANR	909093	PtrMemberAccess	core -> config		909033	0					
ANR	909094	Identifier	core		909033	0					
ANR	909095	Identifier	config		909033	1					
ANR	909096	Argument	"""asm.os"""		909033	1					
ANR	909097	PrimaryExpression	"""asm.os"""		909033	0					
ANR	909098	SwitchStatement	switch ( * input )		909033	4					
ANR	909099	Condition	* input	141:9:3311:3316	909033	0	True				
ANR	909100	UnaryOperationExpression	* input		909033	0					
ANR	909101	UnaryOperator	*		909033	0					
ANR	909102	Identifier	input		909033	1					
ANR	909103	CompoundStatement		9:17:227:227	909033	1					
ANR	909104	Label	case 's' :	142:1:3322:3330	909033	0	True				
ANR	909105	IfStatement	if ( input [ 1 ] == ' ' )		909033	1					
ANR	909106	Condition	input [ 1 ] == ' '	144:6:3400:3414	909033	0	True				
ANR	909107	EqualityExpression	input [ 1 ] == ' '		909033	0		==			
ANR	909108	ArrayIndexing	input [ 1 ]		909033	0					
ANR	909109	Identifier	input		909033	0					
ANR	909110	PrimaryExpression	1		909033	1					
ANR	909111	PrimaryExpression	' '		909033	1					
ANR	909112	CompoundStatement		14:3:354:382	909033	1					
ANR	909113	IdentifierDeclStatement	RBuffer * buf = NULL ;	145:3:3422:3441	909033	0	True				
ANR	909114	IdentifierDecl	* buf = NULL		909033	0					
ANR	909115	IdentifierDeclType	RBuffer *		909033	0					
ANR	909116	Identifier	buf		909033	1					
ANR	909117	AssignmentExpression	* buf = NULL		909033	2		=			
ANR	909118	Identifier	NULL		909033	0					
ANR	909119	Identifier	NULL		909033	1					
ANR	909120	IdentifierDeclStatement	const char * ooaa = input + 2 ;	146:3:3446:3474	909033	1	True				
ANR	909121	IdentifierDecl	* ooaa = input + 2		909033	0					
ANR	909122	IdentifierDeclType	const char *		909033	0					
ANR	909123	Identifier	ooaa		909033	1					
ANR	909124	AssignmentExpression	* ooaa = input + 2		909033	2		=			
ANR	909125	Identifier	ooaa		909033	0					
ANR	909126	AdditiveExpression	input + 2		909033	1		+			
ANR	909127	Identifier	input		909033	0					
ANR	909128	PrimaryExpression	2		909033	1					
ANR	909129	WhileStatement	while ( IS_WHITESPACE ( * ooaa ) && * ooaa )		909033	2					
ANR	909130	Condition	IS_WHITESPACE ( * ooaa ) && * ooaa	147:10:3486:3515	909033	0	True				
ANR	909131	AndExpression	IS_WHITESPACE ( * ooaa ) && * ooaa		909033	0		&&			
ANR	909132	CallExpression	IS_WHITESPACE ( * ooaa )		909033	0					
ANR	909133	Callee	IS_WHITESPACE		909033	0					
ANR	909134	Identifier	IS_WHITESPACE		909033	0					
ANR	909135	ArgumentList	* ooaa		909033	1					
ANR	909136	Argument	* ooaa		909033	0					
ANR	909137	UnaryOperationExpression	* ooaa		909033	0					
ANR	909138	UnaryOperator	*		909033	0					
ANR	909139	Identifier	ooaa		909033	1					
ANR	909140	UnaryOperationExpression	* ooaa		909033	1					
ANR	909141	UnaryOperator	*		909033	0					
ANR	909142	Identifier	ooaa		909033	1					
ANR	909143	ExpressionStatement	ooaa ++	147:42:3518:3524	909033	1	True				
ANR	909144	PostIncDecOperationExpression	ooaa ++		909033	0					
ANR	909145	Identifier	ooaa		909033	0					
ANR	909146	IncDec	++		909033	1					
ANR	909147	ExpressionStatement	oa = strdup ( ooaa )	148:3:3529:3547	909033	3	True				
ANR	909148	AssignmentExpression	oa = strdup ( ooaa )		909033	0		=			
ANR	909149	Identifier	oa		909033	0					
ANR	909150	CallExpression	strdup ( ooaa )		909033	1					
ANR	909151	Callee	strdup		909033	0					
ANR	909152	Identifier	strdup		909033	0					
ANR	909153	ArgumentList	ooaa		909033	1					
ANR	909154	Argument	ooaa		909033	0					
ANR	909155	Identifier	ooaa		909033	0					
ANR	909156	ExpressionStatement	"p = strchr ( oa + 1 , ' ' )"	149:3:3552:3576	909033	4	True				
ANR	909157	AssignmentExpression	"p = strchr ( oa + 1 , ' ' )"		909033	0		=			
ANR	909158	Identifier	p		909033	0					
ANR	909159	CallExpression	"strchr ( oa + 1 , ' ' )"		909033	1					
ANR	909160	Callee	strchr		909033	0					
ANR	909161	Identifier	strchr		909033	0					
ANR	909162	ArgumentList	oa + 1		909033	1					
ANR	909163	Argument	oa + 1		909033	0					
ANR	909164	AdditiveExpression	oa + 1		909033	0		+			
ANR	909165	Identifier	oa		909033	0					
ANR	909166	PrimaryExpression	1		909033	1					
ANR	909167	Argument	' '		909033	1					
ANR	909168	PrimaryExpression	' '		909033	0					
ANR	909169	IfStatement	if ( p )		909033	5					
ANR	909170	Condition	p	150:7:3585:3585	909033	0	True				
ANR	909171	Identifier	p		909033	0					
ANR	909172	CompoundStatement		18:10:496:496	909033	1					
ANR	909173	ExpressionStatement	* p = 0	151:4:3594:3600	909033	0	True				
ANR	909174	AssignmentExpression	* p = 0		909033	0		=			
ANR	909175	UnaryOperationExpression	* p		909033	0					
ANR	909176	UnaryOperator	*		909033	0					
ANR	909177	Identifier	p		909033	1					
ANR	909178	PrimaryExpression	0		909033	1					
ANR	909179	ExpressionStatement	"buf = r_core_syscall ( core , oa , p + 1 )"	152:4:3606:3644	909033	1	True				
ANR	909180	AssignmentExpression	"buf = r_core_syscall ( core , oa , p + 1 )"		909033	0		=			
ANR	909181	Identifier	buf		909033	0					
ANR	909182	CallExpression	"r_core_syscall ( core , oa , p + 1 )"		909033	1					
ANR	909183	Callee	r_core_syscall		909033	0					
ANR	909184	Identifier	r_core_syscall		909033	0					
ANR	909185	ArgumentList	core		909033	1					
ANR	909186	Argument	core		909033	0					
ANR	909187	Identifier	core		909033	0					
ANR	909188	Argument	oa		909033	1					
ANR	909189	Identifier	oa		909033	0					
ANR	909190	Argument	p + 1		909033	2					
ANR	909191	AdditiveExpression	p + 1		909033	0		+			
ANR	909192	Identifier	p		909033	0					
ANR	909193	PrimaryExpression	1		909033	1					
ANR	909194	ElseStatement	else		909033	0					
ANR	909195	CompoundStatement		21:10:564:564	909033	0					
ANR	909196	ExpressionStatement	"buf = r_core_syscall ( core , oa , """" )"	154:4:3662:3697	909033	0	True				
ANR	909197	AssignmentExpression	"buf = r_core_syscall ( core , oa , """" )"		909033	0		=			
ANR	909198	Identifier	buf		909033	0					
ANR	909199	CallExpression	"r_core_syscall ( core , oa , """" )"		909033	1					
ANR	909200	Callee	r_core_syscall		909033	0					
ANR	909201	Identifier	r_core_syscall		909033	0					
ANR	909202	ArgumentList	core		909033	1					
ANR	909203	Argument	core		909033	0					
ANR	909204	Identifier	core		909033	0					
ANR	909205	Argument	oa		909033	1					
ANR	909206	Identifier	oa		909033	0					
ANR	909207	Argument	""""""		909033	2					
ANR	909208	PrimaryExpression	""""""		909033	0					
ANR	909209	ExpressionStatement	free ( oa )	156:3:3707:3716	909033	6	True				
ANR	909210	CallExpression	free ( oa )		909033	0					
ANR	909211	Callee	free		909033	0					
ANR	909212	Identifier	free		909033	0					
ANR	909213	ArgumentList	oa		909033	1					
ANR	909214	Argument	oa		909033	0					
ANR	909215	Identifier	oa		909033	0					
ANR	909216	IfStatement	if ( buf )		909033	7					
ANR	909217	Condition	buf	157:7:3725:3727	909033	0	True				
ANR	909218	Identifier	buf		909033	0					
ANR	909219	CompoundStatement		25:12:638:638	909033	1					
ANR	909220	ExpressionStatement	showBuffer ( buf )	158:4:3736:3752	909033	0	True				
ANR	909221	CallExpression	showBuffer ( buf )		909033	0					
ANR	909222	Callee	showBuffer		909033	0					
ANR	909223	Identifier	showBuffer		909033	0					
ANR	909224	ArgumentList	buf		909033	1					
ANR	909225	Argument	buf		909033	0					
ANR	909226	Identifier	buf		909033	0					
ANR	909227	ExpressionStatement	egg -> lang . nsyscalls = 0	160:3:3762:3785	909033	8	True				
ANR	909228	AssignmentExpression	egg -> lang . nsyscalls = 0		909033	0		=			
ANR	909229	MemberAccess	egg -> lang . nsyscalls		909033	0					
ANR	909230	PtrMemberAccess	egg -> lang		909033	0					
ANR	909231	Identifier	egg		909033	0					
ANR	909232	Identifier	lang		909033	1					
ANR	909233	Identifier	nsyscalls		909033	1					
ANR	909234	PrimaryExpression	0		909033	1					
ANR	909235	ElseStatement	else		909033	0					
ANR	909236	CompoundStatement		29:9:704:704	909033	0					
ANR	909237	ExpressionStatement	"eprintf ( ""Usage: gs [syscallname] [parameters]\\n"" )"	162:3:3801:3851	909033	0	True				
ANR	909238	CallExpression	"eprintf ( ""Usage: gs [syscallname] [parameters]\\n"" )"		909033	0					
ANR	909239	Callee	eprintf		909033	0					
ANR	909240	Identifier	eprintf		909033	0					
ANR	909241	ArgumentList	"""Usage: gs [syscallname] [parameters]\\n"""		909033	1					
ANR	909242	Argument	"""Usage: gs [syscallname] [parameters]\\n"""		909033	0					
ANR	909243	PrimaryExpression	"""Usage: gs [syscallname] [parameters]\\n"""		909033	0					
ANR	909244	BreakStatement	break ;	164:2:3859:3864	909033	2	True				
ANR	909245	Label	case ' ' :	165:1:3867:3875	909033	3	True				
ANR	909246	IfStatement	if ( input [ 1 ] && input [ 2 ] )		909033	4					
ANR	909247	Condition	input [ 1 ] && input [ 2 ]	166:6:3891:3910	909033	0	True				
ANR	909248	AndExpression	input [ 1 ] && input [ 2 ]		909033	0		&&			
ANR	909249	ArrayIndexing	input [ 1 ]		909033	0					
ANR	909250	Identifier	input		909033	0					
ANR	909251	PrimaryExpression	1		909033	1					
ANR	909252	ArrayIndexing	input [ 2 ]		909033	1					
ANR	909253	Identifier	input		909033	0					
ANR	909254	PrimaryExpression	2		909033	1					
ANR	909255	CompoundStatement		34:28:821:821	909033	1					
ANR	909256	ExpressionStatement	"r_egg_load ( egg , input + 2 , 0 )"	167:3:3918:3948	909033	0	True				
ANR	909257	CallExpression	"r_egg_load ( egg , input + 2 , 0 )"		909033	0					
ANR	909258	Callee	r_egg_load		909033	0					
ANR	909259	Identifier	r_egg_load		909033	0					
ANR	909260	ArgumentList	egg		909033	1					
ANR	909261	Argument	egg		909033	0					
ANR	909262	Identifier	egg		909033	0					
ANR	909263	Argument	input + 2		909033	1					
ANR	909264	AdditiveExpression	input + 2		909033	0		+			
ANR	909265	Identifier	input		909033	0					
ANR	909266	PrimaryExpression	2		909033	1					
ANR	909267	Argument	0		909033	2					
ANR	909268	PrimaryExpression	0		909033	0					
ANR	909269	IfStatement	if ( ! cmd_egg_compile ( egg ) )		909033	1					
ANR	909270	Condition	! cmd_egg_compile ( egg )	168:7:3957:3978	909033	0	True				
ANR	909271	UnaryOperationExpression	! cmd_egg_compile ( egg )		909033	0					
ANR	909272	UnaryOperator	!		909033	0					
ANR	909273	CallExpression	cmd_egg_compile ( egg )		909033	1					
ANR	909274	Callee	cmd_egg_compile		909033	0					
ANR	909275	Identifier	cmd_egg_compile		909033	0					
ANR	909276	ArgumentList	egg		909033	1					
ANR	909277	Argument	egg		909033	0					
ANR	909278	Identifier	egg		909033	0					
ANR	909279	CompoundStatement		36:31:889:889	909033	1					
ANR	909280	ExpressionStatement	"eprintf ( ""Cannot compile '%s'\\n"" , input + 2 )"	169:4:3987:4031	909033	0	True				
ANR	909281	CallExpression	"eprintf ( ""Cannot compile '%s'\\n"" , input + 2 )"		909033	0					
ANR	909282	Callee	eprintf		909033	0					
ANR	909283	Identifier	eprintf		909033	0					
ANR	909284	ArgumentList	"""Cannot compile '%s'\\n"""		909033	1					
ANR	909285	Argument	"""Cannot compile '%s'\\n"""		909033	0					
ANR	909286	PrimaryExpression	"""Cannot compile '%s'\\n"""		909033	0					
ANR	909287	Argument	input + 2		909033	1					
ANR	909288	AdditiveExpression	input + 2		909033	0		+			
ANR	909289	Identifier	input		909033	0					
ANR	909290	PrimaryExpression	2		909033	1					
ANR	909291	ElseStatement	else		909033	0					
ANR	909292	CompoundStatement		39:9:955:955	909033	0					
ANR	909293	ExpressionStatement	"eprintf ( ""wat\\n"" )"	172:3:4052:4069	909033	0	True				
ANR	909294	CallExpression	"eprintf ( ""wat\\n"" )"		909033	0					
ANR	909295	Callee	eprintf		909033	0					
ANR	909296	Identifier	eprintf		909033	0					
ANR	909297	ArgumentList	"""wat\\n"""		909033	1					
ANR	909298	Argument	"""wat\\n"""		909033	0					
ANR	909299	PrimaryExpression	"""wat\\n"""		909033	0					
ANR	909300	BreakStatement	break ;	174:2:4077:4082	909033	5	True				
ANR	909301	Label	case '\\0' :	175:1:4085:4094	909033	6	True				
ANR	909302	IfStatement	if ( ! cmd_egg_compile ( egg ) )		909033	7					
ANR	909303	Condition	! cmd_egg_compile ( egg )	176:6:4109:4130	909033	0	True				
ANR	909304	UnaryOperationExpression	! cmd_egg_compile ( egg )		909033	0					
ANR	909305	UnaryOperator	!		909033	0					
ANR	909306	CallExpression	cmd_egg_compile ( egg )		909033	1					
ANR	909307	Callee	cmd_egg_compile		909033	0					
ANR	909308	Identifier	cmd_egg_compile		909033	0					
ANR	909309	ArgumentList	egg		909033	1					
ANR	909310	Argument	egg		909033	0					
ANR	909311	Identifier	egg		909033	0					
ANR	909312	CompoundStatement		44:30:1041:1041	909033	1					
ANR	909313	ExpressionStatement	"eprintf ( ""Cannot compile\\n"" )"	177:3:4138:4166	909033	0	True				
ANR	909314	CallExpression	"eprintf ( ""Cannot compile\\n"" )"		909033	0					
ANR	909315	Callee	eprintf		909033	0					
ANR	909316	Identifier	eprintf		909033	0					
ANR	909317	ArgumentList	"""Cannot compile\\n"""		909033	1					
ANR	909318	Argument	"""Cannot compile\\n"""		909033	0					
ANR	909319	PrimaryExpression	"""Cannot compile\\n"""		909033	0					
ANR	909320	BreakStatement	break ;	179:2:4174:4179	909033	8	True				
ANR	909321	Label	case 'p' :	180:1:4182:4190	909033	9	True				
ANR	909322	IfStatement	if ( input [ 1 ] == ' ' )		909033	10					
ANR	909323	Condition	input [ 1 ] == ' '	181:6:4206:4220	909033	0	True				
ANR	909324	EqualityExpression	input [ 1 ] == ' '		909033	0		==			
ANR	909325	ArrayIndexing	input [ 1 ]		909033	0					
ANR	909326	Identifier	input		909033	0					
ANR	909327	PrimaryExpression	1		909033	1					
ANR	909328	PrimaryExpression	' '		909033	1					
ANR	909329	CompoundStatement		49:23:1131:1131	909033	1					
ANR	909330	IfStatement	if ( input [ 0 ] && input [ 2 ] )		909033	0					
ANR	909331	Condition	input [ 0 ] && input [ 2 ]	182:7:4232:4251	909033	0	True				
ANR	909332	AndExpression	input [ 0 ] && input [ 2 ]		909033	0		&&			
ANR	909333	ArrayIndexing	input [ 0 ]		909033	0					
ANR	909334	Identifier	input		909033	0					
ANR	909335	PrimaryExpression	0		909033	1					
ANR	909336	ArrayIndexing	input [ 2 ]		909033	1					
ANR	909337	Identifier	input		909033	0					
ANR	909338	PrimaryExpression	2		909033	1					
ANR	909339	CompoundStatement		50:29:1162:1162	909033	1					
ANR	909340	ExpressionStatement	"r_egg_option_set ( egg , ""egg.padding"" , input + 2 )"	183:4:4260:4308	909033	0	True				
ANR	909341	CallExpression	"r_egg_option_set ( egg , ""egg.padding"" , input + 2 )"		909033	0					
ANR	909342	Callee	r_egg_option_set		909033	0					
ANR	909343	Identifier	r_egg_option_set		909033	0					
ANR	909344	ArgumentList	egg		909033	1					
ANR	909345	Argument	egg		909033	0					
ANR	909346	Identifier	egg		909033	0					
ANR	909347	Argument	"""egg.padding"""		909033	1					
ANR	909348	PrimaryExpression	"""egg.padding"""		909033	0					
ANR	909349	Argument	input + 2		909033	2					
ANR	909350	AdditiveExpression	input + 2		909033	0		+			
ANR	909351	Identifier	input		909033	0					
ANR	909352	PrimaryExpression	2		909033	1					
ANR	909353	ElseStatement	else		909033	0					
ANR	909354	CompoundStatement		53:9:1232:1232	909033	0					
ANR	909355	ExpressionStatement	"eprintf ( ""Usage: gp [padding]\\n"" )"	186:3:4329:4362	909033	0	True				
ANR	909356	CallExpression	"eprintf ( ""Usage: gp [padding]\\n"" )"		909033	0					
ANR	909357	Callee	eprintf		909033	0					
ANR	909358	Identifier	eprintf		909033	0					
ANR	909359	ArgumentList	"""Usage: gp [padding]\\n"""		909033	1					
ANR	909360	Argument	"""Usage: gp [padding]\\n"""		909033	0					
ANR	909361	PrimaryExpression	"""Usage: gp [padding]\\n"""		909033	0					
ANR	909362	BreakStatement	break ;	188:2:4371:4376	909033	11	True				
ANR	909363	Label	case 'e' :	189:1:4379:4387	909033	12	True				
ANR	909364	IfStatement	if ( input [ 1 ] == ' ' )		909033	13					
ANR	909365	Condition	input [ 1 ] == ' '	190:6:4403:4417	909033	0	True				
ANR	909366	EqualityExpression	input [ 1 ] == ' '		909033	0		==			
ANR	909367	ArrayIndexing	input [ 1 ]		909033	0					
ANR	909368	Identifier	input		909033	0					
ANR	909369	PrimaryExpression	1		909033	1					
ANR	909370	PrimaryExpression	' '		909033	1					
ANR	909371	CompoundStatement		59:3:1333:1364	909033	1					
ANR	909372	IdentifierDeclStatement	const char * encoder = input + 2 ;	191:3:4425:4456	909033	0	True				
ANR	909373	IdentifierDecl	* encoder = input + 2		909033	0					
ANR	909374	IdentifierDeclType	const char *		909033	0					
ANR	909375	Identifier	encoder		909033	1					
ANR	909376	AssignmentExpression	* encoder = input + 2		909033	2		=			
ANR	909377	Identifier	encoder		909033	0					
ANR	909378	AdditiveExpression	input + 2		909033	1		+			
ANR	909379	Identifier	input		909033	0					
ANR	909380	PrimaryExpression	2		909033	1					
ANR	909381	WhileStatement	while ( IS_WHITESPACE ( * encoder ) && * encoder )		909033	1					
ANR	909382	Condition	IS_WHITESPACE ( * encoder ) && * encoder	192:10:4468:4503	909033	0	True				
ANR	909383	AndExpression	IS_WHITESPACE ( * encoder ) && * encoder		909033	0		&&			
ANR	909384	CallExpression	IS_WHITESPACE ( * encoder )		909033	0					
ANR	909385	Callee	IS_WHITESPACE		909033	0					
ANR	909386	Identifier	IS_WHITESPACE		909033	0					
ANR	909387	ArgumentList	* encoder		909033	1					
ANR	909388	Argument	* encoder		909033	0					
ANR	909389	UnaryOperationExpression	* encoder		909033	0					
ANR	909390	UnaryOperator	*		909033	0					
ANR	909391	Identifier	encoder		909033	1					
ANR	909392	UnaryOperationExpression	* encoder		909033	1					
ANR	909393	UnaryOperator	*		909033	0					
ANR	909394	Identifier	encoder		909033	1					
ANR	909395	CompoundStatement		60:48:1414:1414	909033	1					
ANR	909396	ExpressionStatement	encoder ++	193:4:4512:4521	909033	0	True				
ANR	909397	PostIncDecOperationExpression	encoder ++		909033	0					
ANR	909398	Identifier	encoder		909033	0					
ANR	909399	IncDec	++		909033	1					
ANR	909400	ExpressionStatement	oa = strdup ( encoder )	196:3:4532:4553	909033	2	True				
ANR	909401	AssignmentExpression	oa = strdup ( encoder )		909033	0		=			
ANR	909402	Identifier	oa		909033	0					
ANR	909403	CallExpression	strdup ( encoder )		909033	1					
ANR	909404	Callee	strdup		909033	0					
ANR	909405	Identifier	strdup		909033	0					
ANR	909406	ArgumentList	encoder		909033	1					
ANR	909407	Argument	encoder		909033	0					
ANR	909408	Identifier	encoder		909033	0					
ANR	909409	ExpressionStatement	"p = strchr ( oa + 1 , ' ' )"	197:3:4558:4582	909033	3	True				
ANR	909410	AssignmentExpression	"p = strchr ( oa + 1 , ' ' )"		909033	0		=			
ANR	909411	Identifier	p		909033	0					
ANR	909412	CallExpression	"strchr ( oa + 1 , ' ' )"		909033	1					
ANR	909413	Callee	strchr		909033	0					
ANR	909414	Identifier	strchr		909033	0					
ANR	909415	ArgumentList	oa + 1		909033	1					
ANR	909416	Argument	oa + 1		909033	0					
ANR	909417	AdditiveExpression	oa + 1		909033	0		+			
ANR	909418	Identifier	oa		909033	0					
ANR	909419	PrimaryExpression	1		909033	1					
ANR	909420	Argument	' '		909033	1					
ANR	909421	PrimaryExpression	' '		909033	0					
ANR	909422	IfStatement	if ( p )		909033	4					
ANR	909423	Condition	p	199:7:4592:4592	909033	0	True				
ANR	909424	Identifier	p		909033	0					
ANR	909425	CompoundStatement		67:10:1503:1503	909033	1					
ANR	909426	ExpressionStatement	* p = 0	200:4:4601:4607	909033	0	True				
ANR	909427	AssignmentExpression	* p = 0		909033	0		=			
ANR	909428	UnaryOperationExpression	* p		909033	0					
ANR	909429	UnaryOperator	*		909033	0					
ANR	909430	Identifier	p		909033	1					
ANR	909431	PrimaryExpression	0		909033	1					
ANR	909432	ExpressionStatement	"r_egg_option_set ( egg , ""key"" , p + 1 )"	201:4:4613:4649	909033	1	True				
ANR	909433	CallExpression	"r_egg_option_set ( egg , ""key"" , p + 1 )"		909033	0					
ANR	909434	Callee	r_egg_option_set		909033	0					
ANR	909435	Identifier	r_egg_option_set		909033	0					
ANR	909436	ArgumentList	egg		909033	1					
ANR	909437	Argument	egg		909033	0					
ANR	909438	Identifier	egg		909033	0					
ANR	909439	Argument	"""key"""		909033	1					
ANR	909440	PrimaryExpression	"""key"""		909033	0					
ANR	909441	Argument	p + 1		909033	2					
ANR	909442	AdditiveExpression	p + 1		909033	0		+			
ANR	909443	Identifier	p		909033	0					
ANR	909444	PrimaryExpression	1		909033	1					
ANR	909445	ExpressionStatement	"r_egg_option_set ( egg , ""egg.encoder"" , oa )"	202:4:4655:4696	909033	2	True				
ANR	909446	CallExpression	"r_egg_option_set ( egg , ""egg.encoder"" , oa )"		909033	0					
ANR	909447	Callee	r_egg_option_set		909033	0					
ANR	909448	Identifier	r_egg_option_set		909033	0					
ANR	909449	ArgumentList	egg		909033	1					
ANR	909450	Argument	egg		909033	0					
ANR	909451	Identifier	egg		909033	0					
ANR	909452	Argument	"""egg.encoder"""		909033	1					
ANR	909453	PrimaryExpression	"""egg.encoder"""		909033	0					
ANR	909454	Argument	oa		909033	2					
ANR	909455	Identifier	oa		909033	0					
ANR	909456	ElseStatement	else		909033	0					
ANR	909457	CompoundStatement		71:10:1616:1616	909033	0					
ANR	909458	ExpressionStatement	"eprintf ( ""Usage: ge [encoder] [key]\\n"" )"	204:4:4714:4753	909033	0	True				
ANR	909459	CallExpression	"eprintf ( ""Usage: ge [encoder] [key]\\n"" )"		909033	0					
ANR	909460	Callee	eprintf		909033	0					
ANR	909461	Identifier	eprintf		909033	0					
ANR	909462	ArgumentList	"""Usage: ge [encoder] [key]\\n"""		909033	1					
ANR	909463	Argument	"""Usage: ge [encoder] [key]\\n"""		909033	0					
ANR	909464	PrimaryExpression	"""Usage: ge [encoder] [key]\\n"""		909033	0					
ANR	909465	ExpressionStatement	free ( oa )	206:3:4764:4773	909033	5	True				
ANR	909466	CallExpression	free ( oa )		909033	0					
ANR	909467	Callee	free		909033	0					
ANR	909468	Identifier	free		909033	0					
ANR	909469	ArgumentList	oa		909033	1					
ANR	909470	Argument	oa		909033	0					
ANR	909471	Identifier	oa		909033	0					
ANR	909472	ElseStatement	else		909033	0					
ANR	909473	CompoundStatement		75:9:1692:1692	909033	0					
ANR	909474	ExpressionStatement	"eprintf ( ""Usage: ge [encoder] [key]\\n"" )"	208:3:4789:4828	909033	0	True				
ANR	909475	CallExpression	"eprintf ( ""Usage: ge [encoder] [key]\\n"" )"		909033	0					
ANR	909476	Callee	eprintf		909033	0					
ANR	909477	Identifier	eprintf		909033	0					
ANR	909478	ArgumentList	"""Usage: ge [encoder] [key]\\n"""		909033	1					
ANR	909479	Argument	"""Usage: ge [encoder] [key]\\n"""		909033	0					
ANR	909480	PrimaryExpression	"""Usage: ge [encoder] [key]\\n"""		909033	0					
ANR	909481	BreakStatement	break ;	210:2:4836:4841	909033	14	True				
ANR	909482	Label	case 'i' :	211:1:4844:4852	909033	15	True				
ANR	909483	IfStatement	if ( input [ 1 ] == ' ' )		909033	16					
ANR	909484	Condition	input [ 1 ] == ' '	212:6:4869:4883	909033	0	True				
ANR	909485	EqualityExpression	input [ 1 ] == ' '		909033	0		==			
ANR	909486	ArrayIndexing	input [ 1 ]		909033	0					
ANR	909487	Identifier	input		909033	0					
ANR	909488	PrimaryExpression	1		909033	1					
ANR	909489	PrimaryExpression	' '		909033	1					
ANR	909490	CompoundStatement		80:23:1794:1794	909033	1					
ANR	909491	IfStatement	if ( input [ 0 ] && input [ 2 ] )		909033	0					
ANR	909492	Condition	input [ 0 ] && input [ 2 ]	213:7:4895:4914	909033	0	True				
ANR	909493	AndExpression	input [ 0 ] && input [ 2 ]		909033	0		&&			
ANR	909494	ArrayIndexing	input [ 0 ]		909033	0					
ANR	909495	Identifier	input		909033	0					
ANR	909496	PrimaryExpression	0		909033	1					
ANR	909497	ArrayIndexing	input [ 2 ]		909033	1					
ANR	909498	Identifier	input		909033	0					
ANR	909499	PrimaryExpression	2		909033	1					
ANR	909500	CompoundStatement		81:29:1825:1825	909033	1					
ANR	909501	ExpressionStatement	"r_egg_option_set ( egg , ""egg.shellcode"" , input + 2 )"	214:4:4923:4973	909033	0	True				
ANR	909502	CallExpression	"r_egg_option_set ( egg , ""egg.shellcode"" , input + 2 )"		909033	0					
ANR	909503	Callee	r_egg_option_set		909033	0					
ANR	909504	Identifier	r_egg_option_set		909033	0					
ANR	909505	ArgumentList	egg		909033	1					
ANR	909506	Argument	egg		909033	0					
ANR	909507	Identifier	egg		909033	0					
ANR	909508	Argument	"""egg.shellcode"""		909033	1					
ANR	909509	PrimaryExpression	"""egg.shellcode"""		909033	0					
ANR	909510	Argument	input + 2		909033	2					
ANR	909511	AdditiveExpression	input + 2		909033	0		+			
ANR	909512	Identifier	input		909033	0					
ANR	909513	PrimaryExpression	2		909033	1					
ANR	909514	ElseStatement	else		909033	0					
ANR	909515	CompoundStatement		83:10:1893:1893	909033	0					
ANR	909516	ExpressionStatement	"eprintf ( ""Usage: gi [shellcode-type]\\n"" )"	216:4:4991:5031	909033	0	True				
ANR	909517	CallExpression	"eprintf ( ""Usage: gi [shellcode-type]\\n"" )"		909033	0					
ANR	909518	Callee	eprintf		909033	0					
ANR	909519	Identifier	eprintf		909033	0					
ANR	909520	ArgumentList	"""Usage: gi [shellcode-type]\\n"""		909033	1					
ANR	909521	Argument	"""Usage: gi [shellcode-type]\\n"""		909033	0					
ANR	909522	PrimaryExpression	"""Usage: gi [shellcode-type]\\n"""		909033	0					
ANR	909523	ElseStatement	else		909033	0					
ANR	909524	CompoundStatement		86:9:1955:1955	909033	0					
ANR	909525	ExpressionStatement	"eprintf ( ""Usage: gi [shellcode-type]\\n"" )"	219:3:5052:5092	909033	0	True				
ANR	909526	CallExpression	"eprintf ( ""Usage: gi [shellcode-type]\\n"" )"		909033	0					
ANR	909527	Callee	eprintf		909033	0					
ANR	909528	Identifier	eprintf		909033	0					
ANR	909529	ArgumentList	"""Usage: gi [shellcode-type]\\n"""		909033	1					
ANR	909530	Argument	"""Usage: gi [shellcode-type]\\n"""		909033	0					
ANR	909531	PrimaryExpression	"""Usage: gi [shellcode-type]\\n"""		909033	0					
ANR	909532	BreakStatement	break ;	221:2:5100:5105	909033	17	True				
ANR	909533	Label	case 'l' :	222:1:5108:5116	909033	18	True				
ANR	909534	CompoundStatement		93:2:2058:2071	909033	19					
ANR	909535	IdentifierDeclStatement	RListIter * iter ;	224:2:5131:5146	909033	0	True				
ANR	909536	IdentifierDecl	* iter		909033	0					
ANR	909537	IdentifierDeclType	RListIter *		909033	0					
ANR	909538	Identifier	iter		909033	1					
ANR	909539	IdentifierDeclStatement	REggPlugin * p ;	225:2:5150:5163	909033	1	True				
ANR	909540	IdentifierDecl	* p		909033	0					
ANR	909541	IdentifierDeclType	REggPlugin *		909033	0					
ANR	909542	Identifier	p		909033	1					
ANR	909543	Statement	r_list_foreach	226:2:5167:5180	909033	2	True				
ANR	909544	Statement	(	226:17:5182:5182	909033	3	True				
ANR	909545	Statement	egg	226:18:5183:5185	909033	4	True				
ANR	909546	Statement	->	226:21:5186:5187	909033	5	True				
ANR	909547	Statement	plugins	226:23:5188:5194	909033	6	True				
ANR	909548	Statement	","	226:30:5195:5195	909033	7	True				
ANR	909549	Statement	iter	226:32:5197:5200	909033	8	True				
ANR	909550	Statement	","	226:36:5201:5201	909033	9	True				
ANR	909551	Statement	p	226:38:5203:5203	909033	10	True				
ANR	909552	Statement	)	226:39:5204:5204	909033	11	True				
ANR	909553	CompoundStatement		94:41:2114:2114	909033	12					
ANR	909554	ExpressionStatement	"r_cons_printf ( ""%s  %6s : %s\\n"" , ( p -> type == R_EGG_PLUGIN_SHELLCODE ) ? ""shc"" : ""enc"" , p -> name , p -> desc )"	227:3:5211:5320	909033	0	True				
ANR	909555	CallExpression	"r_cons_printf ( ""%s  %6s : %s\\n"" , ( p -> type == R_EGG_PLUGIN_SHELLCODE ) ? ""shc"" : ""enc"" , p -> name , p -> desc )"		909033	0					
ANR	909556	Callee	r_cons_printf		909033	0					
ANR	909557	Identifier	r_cons_printf		909033	0					
ANR	909558	ArgumentList	"""%s  %6s : %s\\n"""		909033	1					
ANR	909559	Argument	"""%s  %6s : %s\\n"""		909033	0					
ANR	909560	PrimaryExpression	"""%s  %6s : %s\\n"""		909033	0					
ANR	909561	Argument	"( p -> type == R_EGG_PLUGIN_SHELLCODE ) ? ""shc"" : ""enc"""		909033	1					
ANR	909562	ConditionalExpression	"( p -> type == R_EGG_PLUGIN_SHELLCODE ) ? ""shc"" : ""enc"""		909033	0					
ANR	909563	Condition	p -> type == R_EGG_PLUGIN_SHELLCODE		909033	0					
ANR	909564	EqualityExpression	p -> type == R_EGG_PLUGIN_SHELLCODE		909033	0		==			
ANR	909565	PtrMemberAccess	p -> type		909033	0					
ANR	909566	Identifier	p		909033	0					
ANR	909567	Identifier	type		909033	1					
ANR	909568	Identifier	R_EGG_PLUGIN_SHELLCODE		909033	1					
ANR	909569	PrimaryExpression	"""shc"""		909033	1					
ANR	909570	PrimaryExpression	"""enc"""		909033	2					
ANR	909571	Argument	p -> name		909033	2					
ANR	909572	PtrMemberAccess	p -> name		909033	0					
ANR	909573	Identifier	p		909033	0					
ANR	909574	Identifier	name		909033	1					
ANR	909575	Argument	p -> desc		909033	3					
ANR	909576	PtrMemberAccess	p -> desc		909033	0					
ANR	909577	Identifier	p		909033	0					
ANR	909578	Identifier	desc		909033	1					
ANR	909579	BreakStatement	break ;	232:1:5330:5335	909033	20	True				
ANR	909580	Label	case 'S' :	233:1:5338:5346	909033	21	True				
ANR	909581	CompoundStatement		113:2:2452:2457	909033	22					
ANR	909582	Statement	static	235:2:5361:5366	909033	0	True				
ANR	909583	IdentifierDeclStatement	"const char * configList [ ] = { ""egg.shellcode"" , ""egg.encoder"" , ""egg.padding"" , ""key"" , ""cmd"" , ""suid"" , NULL } ;"	235:9:5368:5495	909033	1	True				
ANR	909584	IdentifierDecl	"* configList [ ] = { ""egg.shellcode"" , ""egg.encoder"" , ""egg.padding"" , ""key"" , ""cmd"" , ""suid"" , NULL }"		909033	0					
ANR	909585	IdentifierDeclType	const char * [ ]		909033	0					
ANR	909586	Identifier	configList		909033	1					
ANR	909587	AssignmentExpression	"* configList [ ] = { ""egg.shellcode"" , ""egg.encoder"" , ""egg.padding"" , ""key"" , ""cmd"" , ""suid"" , NULL }"		909033	2		=			
ANR	909588	Identifier	configList		909033	0					
ANR	909589	InitializerList	"""egg.shellcode"""		909033	1					
ANR	909590	PrimaryExpression	"""egg.shellcode"""		909033	0					
ANR	909591	PrimaryExpression	"""egg.encoder"""		909033	1					
ANR	909592	PrimaryExpression	"""egg.padding"""		909033	2					
ANR	909593	PrimaryExpression	"""key"""		909033	3					
ANR	909594	PrimaryExpression	"""cmd"""		909033	4					
ANR	909595	PrimaryExpression	"""suid"""		909033	5					
ANR	909596	Identifier	NULL		909033	6					
ANR	909597	ExpressionStatement	"r_cons_printf ( ""Configuration options\\n"" )"	244:2:5499:5540	909033	2	True				
ANR	909598	CallExpression	"r_cons_printf ( ""Configuration options\\n"" )"		909033	0					
ANR	909599	Callee	r_cons_printf		909033	0					
ANR	909600	Identifier	r_cons_printf		909033	0					
ANR	909601	ArgumentList	"""Configuration options\\n"""		909033	1					
ANR	909602	Argument	"""Configuration options\\n"""		909033	0					
ANR	909603	PrimaryExpression	"""Configuration options\\n"""		909033	0					
ANR	909604	IdentifierDeclStatement	int i ;	245:2:5544:5549	909033	3	True				
ANR	909605	IdentifierDecl	i		909033	0					
ANR	909606	IdentifierDeclType	int		909033	0					
ANR	909607	Identifier	i		909033	1					
ANR	909608	ForStatement	for ( i = 0 ; configList [ i ] ; i ++ )		909033	4					
ANR	909609	ForInit	i = 0 ;	246:7:5558:5563	909033	0	True				
ANR	909610	AssignmentExpression	i = 0		909033	0		=			
ANR	909611	Identifier	i		909033	0					
ANR	909612	PrimaryExpression	0		909033	1					
ANR	909613	Condition	configList [ i ]	246:14:5565:5577	909033	1	True				
ANR	909614	ArrayIndexing	configList [ i ]		909033	0					
ANR	909615	Identifier	configList		909033	0					
ANR	909616	Identifier	i		909033	1					
ANR	909617	PostIncDecOperationExpression	i ++	246:29:5580:5582	909033	2	True				
ANR	909618	Identifier	i		909033	0					
ANR	909619	IncDec	++		909033	1					
ANR	909620	CompoundStatement		115:3:2498:2527	909033	3					
ANR	909621	IdentifierDeclStatement	const char * p = configList [ i ] ;	247:3:5590:5619	909033	0	True				
ANR	909622	IdentifierDecl	* p = configList [ i ]		909033	0					
ANR	909623	IdentifierDeclType	const char *		909033	0					
ANR	909624	Identifier	p		909033	1					
ANR	909625	AssignmentExpression	* p = configList [ i ]		909033	2		=			
ANR	909626	Identifier	p		909033	0					
ANR	909627	ArrayIndexing	configList [ i ]		909033	1					
ANR	909628	Identifier	configList		909033	0					
ANR	909629	Identifier	i		909033	1					
ANR	909630	IfStatement	"if ( r_egg_option_get ( egg , p ) )"		909033	1					
ANR	909631	Condition	"r_egg_option_get ( egg , p )"	248:7:5628:5652	909033	0	True				
ANR	909632	CallExpression	"r_egg_option_get ( egg , p )"		909033	0					
ANR	909633	Callee	r_egg_option_get		909033	0					
ANR	909634	Identifier	r_egg_option_get		909033	0					
ANR	909635	ArgumentList	egg		909033	1					
ANR	909636	Argument	egg		909033	0					
ANR	909637	Identifier	egg		909033	0					
ANR	909638	Argument	p		909033	1					
ANR	909639	Identifier	p		909033	0					
ANR	909640	CompoundStatement		116:34:2563:2563	909033	1					
ANR	909641	ExpressionStatement	"r_cons_printf ( ""%s : %s\\n"" , p , r_egg_option_get ( egg , p ) )"	249:4:5661:5718	909033	0	True				
ANR	909642	CallExpression	"r_cons_printf ( ""%s : %s\\n"" , p , r_egg_option_get ( egg , p ) )"		909033	0					
ANR	909643	Callee	r_cons_printf		909033	0					
ANR	909644	Identifier	r_cons_printf		909033	0					
ANR	909645	ArgumentList	"""%s : %s\\n"""		909033	1					
ANR	909646	Argument	"""%s : %s\\n"""		909033	0					
ANR	909647	PrimaryExpression	"""%s : %s\\n"""		909033	0					
ANR	909648	Argument	p		909033	1					
ANR	909649	Identifier	p		909033	0					
ANR	909650	Argument	"r_egg_option_get ( egg , p )"		909033	2					
ANR	909651	CallExpression	"r_egg_option_get ( egg , p )"		909033	0					
ANR	909652	Callee	r_egg_option_get		909033	0					
ANR	909653	Identifier	r_egg_option_get		909033	0					
ANR	909654	ArgumentList	egg		909033	1					
ANR	909655	Argument	egg		909033	0					
ANR	909656	Identifier	egg		909033	0					
ANR	909657	Argument	p		909033	1					
ANR	909658	Identifier	p		909033	0					
ANR	909659	ElseStatement	else		909033	0					
ANR	909660	CompoundStatement		118:10:2638:2638	909033	0					
ANR	909661	ExpressionStatement	"r_cons_printf ( ""%s : %s\\n"" , p , """" )"	251:4:5736:5770	909033	0	True				
ANR	909662	CallExpression	"r_cons_printf ( ""%s : %s\\n"" , p , """" )"		909033	0					
ANR	909663	Callee	r_cons_printf		909033	0					
ANR	909664	Identifier	r_cons_printf		909033	0					
ANR	909665	ArgumentList	"""%s : %s\\n"""		909033	1					
ANR	909666	Argument	"""%s : %s\\n"""		909033	0					
ANR	909667	PrimaryExpression	"""%s : %s\\n"""		909033	0					
ANR	909668	Argument	p		909033	1					
ANR	909669	Identifier	p		909033	0					
ANR	909670	Argument	""""""		909033	2					
ANR	909671	PrimaryExpression	""""""		909033	0					
ANR	909672	ExpressionStatement	"r_cons_printf ( ""\\nTarget options\\n"" )"	254:2:5783:5819	909033	5	True				
ANR	909673	CallExpression	"r_cons_printf ( ""\\nTarget options\\n"" )"		909033	0					
ANR	909674	Callee	r_cons_printf		909033	0					
ANR	909675	Identifier	r_cons_printf		909033	0					
ANR	909676	ArgumentList	"""\\nTarget options\\n"""		909033	1					
ANR	909677	Argument	"""\\nTarget options\\n"""		909033	0					
ANR	909678	PrimaryExpression	"""\\nTarget options\\n"""		909033	0					
ANR	909679	ExpressionStatement	"r_cons_printf ( ""arch : %s\\n"" , core -> anal -> cpu )"	255:2:5823:5869	909033	6	True				
ANR	909680	CallExpression	"r_cons_printf ( ""arch : %s\\n"" , core -> anal -> cpu )"		909033	0					
ANR	909681	Callee	r_cons_printf		909033	0					
ANR	909682	Identifier	r_cons_printf		909033	0					
ANR	909683	ArgumentList	"""arch : %s\\n"""		909033	1					
ANR	909684	Argument	"""arch : %s\\n"""		909033	0					
ANR	909685	PrimaryExpression	"""arch : %s\\n"""		909033	0					
ANR	909686	Argument	core -> anal -> cpu		909033	1					
ANR	909687	PtrMemberAccess	core -> anal -> cpu		909033	0					
ANR	909688	PtrMemberAccess	core -> anal		909033	0					
ANR	909689	Identifier	core		909033	0					
ANR	909690	Identifier	anal		909033	1					
ANR	909691	Identifier	cpu		909033	1					
ANR	909692	ExpressionStatement	"r_cons_printf ( ""os   : %s\\n"" , core -> anal -> os )"	256:2:5873:5918	909033	7	True				
ANR	909693	CallExpression	"r_cons_printf ( ""os   : %s\\n"" , core -> anal -> os )"		909033	0					
ANR	909694	Callee	r_cons_printf		909033	0					
ANR	909695	Identifier	r_cons_printf		909033	0					
ANR	909696	ArgumentList	"""os   : %s\\n"""		909033	1					
ANR	909697	Argument	"""os   : %s\\n"""		909033	0					
ANR	909698	PrimaryExpression	"""os   : %s\\n"""		909033	0					
ANR	909699	Argument	core -> anal -> os		909033	1					
ANR	909700	PtrMemberAccess	core -> anal -> os		909033	0					
ANR	909701	PtrMemberAccess	core -> anal		909033	0					
ANR	909702	Identifier	core		909033	0					
ANR	909703	Identifier	anal		909033	1					
ANR	909704	Identifier	os		909033	1					
ANR	909705	ExpressionStatement	"r_cons_printf ( ""bits : %d\\n"" , core -> anal -> bits )"	257:2:5922:5969	909033	8	True				
ANR	909706	CallExpression	"r_cons_printf ( ""bits : %d\\n"" , core -> anal -> bits )"		909033	0					
ANR	909707	Callee	r_cons_printf		909033	0					
ANR	909708	Identifier	r_cons_printf		909033	0					
ANR	909709	ArgumentList	"""bits : %d\\n"""		909033	1					
ANR	909710	Argument	"""bits : %d\\n"""		909033	0					
ANR	909711	PrimaryExpression	"""bits : %d\\n"""		909033	0					
ANR	909712	Argument	core -> anal -> bits		909033	1					
ANR	909713	PtrMemberAccess	core -> anal -> bits		909033	0					
ANR	909714	PtrMemberAccess	core -> anal		909033	0					
ANR	909715	Identifier	core		909033	0					
ANR	909716	Identifier	anal		909033	1					
ANR	909717	Identifier	bits		909033	1					
ANR	909718	BreakStatement	break ;	259:1:5975:5980	909033	23	True				
ANR	909719	Label	case 'r' :	260:1:5983:5991	909033	24	True				
ANR	909720	ExpressionStatement	"cmd_egg_option ( egg , ""egg.padding"" , """" )"	261:2:6003:6042	909033	25	True				
ANR	909721	CallExpression	"cmd_egg_option ( egg , ""egg.padding"" , """" )"		909033	0					
ANR	909722	Callee	cmd_egg_option		909033	0					
ANR	909723	Identifier	cmd_egg_option		909033	0					
ANR	909724	ArgumentList	egg		909033	1					
ANR	909725	Argument	egg		909033	0					
ANR	909726	Identifier	egg		909033	0					
ANR	909727	Argument	"""egg.padding"""		909033	1					
ANR	909728	PrimaryExpression	"""egg.padding"""		909033	0					
ANR	909729	Argument	""""""		909033	2					
ANR	909730	PrimaryExpression	""""""		909033	0					
ANR	909731	ExpressionStatement	"cmd_egg_option ( egg , ""egg.shellcode"" , """" )"	262:2:6046:6087	909033	26	True				
ANR	909732	CallExpression	"cmd_egg_option ( egg , ""egg.shellcode"" , """" )"		909033	0					
ANR	909733	Callee	cmd_egg_option		909033	0					
ANR	909734	Identifier	cmd_egg_option		909033	0					
ANR	909735	ArgumentList	egg		909033	1					
ANR	909736	Argument	egg		909033	0					
ANR	909737	Identifier	egg		909033	0					
ANR	909738	Argument	"""egg.shellcode"""		909033	1					
ANR	909739	PrimaryExpression	"""egg.shellcode"""		909033	0					
ANR	909740	Argument	""""""		909033	2					
ANR	909741	PrimaryExpression	""""""		909033	0					
ANR	909742	ExpressionStatement	"cmd_egg_option ( egg , ""egg.encoder"" , """" )"	263:2:6091:6130	909033	27	True				
ANR	909743	CallExpression	"cmd_egg_option ( egg , ""egg.encoder"" , """" )"		909033	0					
ANR	909744	Callee	cmd_egg_option		909033	0					
ANR	909745	Identifier	cmd_egg_option		909033	0					
ANR	909746	ArgumentList	egg		909033	1					
ANR	909747	Argument	egg		909033	0					
ANR	909748	Identifier	egg		909033	0					
ANR	909749	Argument	"""egg.encoder"""		909033	1					
ANR	909750	PrimaryExpression	"""egg.encoder"""		909033	0					
ANR	909751	Argument	""""""		909033	2					
ANR	909752	PrimaryExpression	""""""		909033	0					
ANR	909753	BreakStatement	break ;	264:2:6134:6139	909033	28	True				
ANR	909754	Label	case 'c' :	265:1:6142:6150	909033	29	True				
ANR	909755	SwitchStatement	switch ( input [ 1 ] )		909033	30					
ANR	909756	Condition	input [ 1 ]	267:10:6202:6209	909033	0	True				
ANR	909757	ArrayIndexing	input [ 1 ]		909033	0					
ANR	909758	Identifier	input		909033	0					
ANR	909759	PrimaryExpression	1		909033	1					
ANR	909760	CompoundStatement		135:20:3120:3120	909033	1					
ANR	909761	Label	case ' ' :	268:2:6216:6224	909033	0	True				
ANR	909762	ExpressionStatement	oa = strdup ( input + 2 )	269:3:6229:6252	909033	1	True				
ANR	909763	AssignmentExpression	oa = strdup ( input + 2 )		909033	0		=			
ANR	909764	Identifier	oa		909033	0					
ANR	909765	CallExpression	strdup ( input + 2 )		909033	1					
ANR	909766	Callee	strdup		909033	0					
ANR	909767	Identifier	strdup		909033	0					
ANR	909768	ArgumentList	input + 2		909033	1					
ANR	909769	Argument	input + 2		909033	0					
ANR	909770	AdditiveExpression	input + 2		909033	0		+			
ANR	909771	Identifier	input		909033	0					
ANR	909772	PrimaryExpression	2		909033	1					
ANR	909773	ExpressionStatement	"p = strchr ( oa , '=' )"	270:3:6257:6277	909033	2	True				
ANR	909774	AssignmentExpression	"p = strchr ( oa , '=' )"		909033	0		=			
ANR	909775	Identifier	p		909033	0					
ANR	909776	CallExpression	"strchr ( oa , '=' )"		909033	1					
ANR	909777	Callee	strchr		909033	0					
ANR	909778	Identifier	strchr		909033	0					
ANR	909779	ArgumentList	oa		909033	1					
ANR	909780	Argument	oa		909033	0					
ANR	909781	Identifier	oa		909033	0					
ANR	909782	Argument	'='		909033	1					
ANR	909783	PrimaryExpression	'='		909033	0					
ANR	909784	IfStatement	if ( p )		909033	3					
ANR	909785	Condition	p	271:7:6286:6286	909033	0	True				
ANR	909786	Identifier	p		909033	0					
ANR	909787	CompoundStatement		139:10:3197:3197	909033	1					
ANR	909788	ExpressionStatement	* p = 0	272:4:6295:6301	909033	0	True				
ANR	909789	AssignmentExpression	* p = 0		909033	0		=			
ANR	909790	UnaryOperationExpression	* p		909033	0					
ANR	909791	UnaryOperator	*		909033	0					
ANR	909792	Identifier	p		909033	1					
ANR	909793	PrimaryExpression	0		909033	1					
ANR	909794	ExpressionStatement	"r_egg_option_set ( egg , oa , p + 1 )"	273:4:6307:6340	909033	1	True				
ANR	909795	CallExpression	"r_egg_option_set ( egg , oa , p + 1 )"		909033	0					
ANR	909796	Callee	r_egg_option_set		909033	0					
ANR	909797	Identifier	r_egg_option_set		909033	0					
ANR	909798	ArgumentList	egg		909033	1					
ANR	909799	Argument	egg		909033	0					
ANR	909800	Identifier	egg		909033	0					
ANR	909801	Argument	oa		909033	1					
ANR	909802	Identifier	oa		909033	0					
ANR	909803	Argument	p + 1		909033	2					
ANR	909804	AdditiveExpression	p + 1		909033	0		+			
ANR	909805	Identifier	p		909033	0					
ANR	909806	PrimaryExpression	1		909033	1					
ANR	909807	ElseStatement	else		909033	0					
ANR	909808	CompoundStatement		143:4:3266:3302	909033	0					
ANR	909809	IdentifierDeclStatement	"char * o = r_egg_option_get ( egg , oa ) ;"	275:4:6358:6394	909033	0	True				
ANR	909810	IdentifierDecl	"* o = r_egg_option_get ( egg , oa )"		909033	0					
ANR	909811	IdentifierDeclType	char *		909033	0					
ANR	909812	Identifier	o		909033	1					
ANR	909813	AssignmentExpression	"* o = r_egg_option_get ( egg , oa )"		909033	2		=			
ANR	909814	Identifier	o		909033	0					
ANR	909815	CallExpression	"r_egg_option_get ( egg , oa )"		909033	1					
ANR	909816	Callee	r_egg_option_get		909033	0					
ANR	909817	Identifier	r_egg_option_get		909033	0					
ANR	909818	ArgumentList	egg		909033	1					
ANR	909819	Argument	egg		909033	0					
ANR	909820	Identifier	egg		909033	0					
ANR	909821	Argument	oa		909033	1					
ANR	909822	Identifier	oa		909033	0					
ANR	909823	IfStatement	if ( o )		909033	1					
ANR	909824	Condition	o	276:8:6404:6404	909033	0	True				
ANR	909825	Identifier	o		909033	0					
ANR	909826	CompoundStatement		144:11:3315:3315	909033	1					
ANR	909827	ExpressionStatement	r_cons_printf ( o )	277:5:6414:6431	909033	0	True				
ANR	909828	CallExpression	r_cons_printf ( o )		909033	0					
ANR	909829	Callee	r_cons_printf		909033	0					
ANR	909830	Identifier	r_cons_printf		909033	0					
ANR	909831	ArgumentList	o		909033	1					
ANR	909832	Argument	o		909033	0					
ANR	909833	Identifier	o		909033	0					
ANR	909834	ExpressionStatement	free ( o )	278:5:6438:6446	909033	1	True				
ANR	909835	CallExpression	free ( o )		909033	0					
ANR	909836	Callee	free		909033	0					
ANR	909837	Identifier	free		909033	0					
ANR	909838	ArgumentList	o		909033	1					
ANR	909839	Argument	o		909033	0					
ANR	909840	Identifier	o		909033	0					
ANR	909841	ExpressionStatement	free ( oa )	281:3:6462:6471	909033	4	True				
ANR	909842	CallExpression	free ( oa )		909033	0					
ANR	909843	Callee	free		909033	0					
ANR	909844	Identifier	free		909033	0					
ANR	909845	ArgumentList	oa		909033	1					
ANR	909846	Argument	oa		909033	0					
ANR	909847	Identifier	oa		909033	0					
ANR	909848	BreakStatement	break ;	282:3:6476:6481	909033	5	True				
ANR	909849	Label	case '\\0' :	283:2:6485:6494	909033	6	True				
ANR	909850	ExpressionStatement	"eprintf ( ""TODO: list options\\n"" )"	285:3:6535:6567	909033	7	True				
ANR	909851	CallExpression	"eprintf ( ""TODO: list options\\n"" )"		909033	0					
ANR	909852	Callee	eprintf		909033	0					
ANR	909853	Identifier	eprintf		909033	0					
ANR	909854	ArgumentList	"""TODO: list options\\n"""		909033	1					
ANR	909855	Argument	"""TODO: list options\\n"""		909033	0					
ANR	909856	PrimaryExpression	"""TODO: list options\\n"""		909033	0					
ANR	909857	BreakStatement	break ;	286:3:6572:6577	909033	8	True				
ANR	909858	Label	default :	287:2:6581:6588	909033	9	True				
ANR	909859	Identifier	default		909033	0					
ANR	909860	ExpressionStatement	"eprintf ( ""Usage: gc [k=v]\\n"" )"	288:3:6593:6622	909033	10	True				
ANR	909861	CallExpression	"eprintf ( ""Usage: gc [k=v]\\n"" )"		909033	0					
ANR	909862	Callee	eprintf		909033	0					
ANR	909863	Identifier	eprintf		909033	0					
ANR	909864	ArgumentList	"""Usage: gc [k=v]\\n"""		909033	1					
ANR	909865	Argument	"""Usage: gc [k=v]\\n"""		909033	0					
ANR	909866	PrimaryExpression	"""Usage: gc [k=v]\\n"""		909033	0					
ANR	909867	BreakStatement	break ;	289:3:6627:6632	909033	11	True				
ANR	909868	BreakStatement	break ;	291:2:6640:6645	909033	31	True				
ANR	909869	Label	case '?' :	292:1:6648:6656	909033	32	True				
ANR	909870	ExpressionStatement	"r_core_cmd_help ( core , help_msg_g )"	293:2:6660:6694	909033	33	True				
ANR	909871	CallExpression	"r_core_cmd_help ( core , help_msg_g )"		909033	0					
ANR	909872	Callee	r_core_cmd_help		909033	0					
ANR	909873	Identifier	r_core_cmd_help		909033	0					
ANR	909874	ArgumentList	core		909033	1					
ANR	909875	Argument	core		909033	0					
ANR	909876	Identifier	core		909033	0					
ANR	909877	Argument	help_msg_g		909033	1					
ANR	909878	Identifier	help_msg_g		909033	0					
ANR	909879	BreakStatement	break ;	294:2:6698:6703	909033	34	True				
ANR	909880	ReturnStatement	return true ;	296:1:6709:6720	909033	5	True				
ANR	909881	Identifier	true		909033	0					
ANR	909882	ReturnType	static int		909033	1					
ANR	909883	Identifier	cmd_egg		909033	2					
ANR	909884	ParameterList	"void * data , const char * input"		909033	3					
ANR	909885	Parameter	void * data	133:19:3060:3069	909033	0	True				
ANR	909886	ParameterType	void *		909033	0					
ANR	909887	Identifier	data		909033	1					
ANR	909888	Parameter	const char * input	133:31:3072:3088	909033	1	True				
ANR	909889	ParameterType	const char *		909033	0					
ANR	909890	Identifier	input		909033	1					
ANR	909891	CFGEntryNode	ENTRY		909033		True				
ANR	909892	CFGExitNode	EXIT		909033		True				
ANR	909893	Symbol	data		909033						
ANR	909894	Symbol	egg		909033						
ANR	909895	Symbol	* core		909033						
ANR	909896	Symbol	r_config_get		909033						
ANR	909897	Symbol	core -> assembler -> bits		909033						
ANR	909898	Symbol	* input		909033						
ANR	909899	Symbol	core -> assembler		909033						
ANR	909900	Symbol	strchr		909033						
ANR	909901	Symbol	help_msg_g		909033						
ANR	909902	Symbol	R_EGG_PLUGIN_SHELLCODE		909033						
ANR	909903	Symbol	configList		909033						
ANR	909904	Symbol	IS_WHITESPACE		909033						
ANR	909905	Symbol	egg -> lang		909033						
ANR	909906	Symbol	p -> type		909033						
ANR	909907	Symbol	core -> anal		909033						
ANR	909908	Symbol	* core -> assembler		909033						
ANR	909909	Symbol	* egg		909033						
ANR	909910	Symbol	oa		909033						
ANR	909911	Symbol	core -> egg		909033						
ANR	909912	Symbol	* ooaa		909033						
ANR	909913	Symbol	r_core_syscall		909033						
ANR	909914	Symbol	* * core		909033						
ANR	909915	Symbol	cmd_egg_compile		909033						
ANR	909916	Symbol	core -> config		909033						
ANR	909917	Symbol	core -> anal -> bits		909033						
ANR	909918	Symbol	NULL		909033						
ANR	909919	Symbol	r_egg_option_get		909033						
ANR	909920	Symbol	iter		909033						
ANR	909921	Symbol	i		909033						
ANR	909922	Symbol	core -> anal -> os		909033						
ANR	909923	Symbol	encoder		909033						
ANR	909924	Symbol	core -> anal -> cpu		909033						
ANR	909925	Symbol	o		909033						
ANR	909926	Symbol	p		909033						
ANR	909927	Symbol	input		909033						
ANR	909928	Symbol	core		909033						
ANR	909929	Symbol	* configList		909033						
ANR	909930	Symbol	buf		909033						
ANR	909931	Symbol	* i		909033						
ANR	909932	Symbol	* core -> anal		909033						
ANR	909933	Symbol	ooaa		909033						
ANR	909934	Symbol	egg -> lang . nsyscalls		909033						
ANR	909935	Symbol	* encoder		909033						
ANR	909936	Symbol	true		909033						
ANR	909937	Symbol	* p		909033						
ANR	909938	Symbol	strdup		909033						
ANR	909939	Symbol	p -> name		909033						
ANR	909940	Symbol	p -> desc		909033						
