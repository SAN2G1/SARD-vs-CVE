command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4230465	File	data/converged/CVE-2019-16718~_radare2/libr_core_cmd_flag.c								
ANR	4230466	DeclStmt									
ANR	4230467	Decl							const char	const char * [ ]	help_msg_f
ANR	4230468	DeclStmt									
ANR	4230469	Decl							const char	const char * [ ]	help_msg_fc
ANR	4230470	DeclStmt									
ANR	4230471	Decl							const char	const char * [ ]	help_msg_fd
ANR	4230472	DeclStmt									
ANR	4230473	Decl							const char	const char * [ ]	help_msg_fs
ANR	4230474	DeclStmt									
ANR	4230475	Decl							const char	const char * [ ]	help_msg_fz
ANR	4230476	Function	cmd_flag_init	104:0:4797:5012							
ANR	4230477	FunctionDef	cmd_flag_init (RCore * core)		4230476	0					
ANR	4230478	CompoundStatement		104:39:4836:5012	4230476	0					
ANR	4230479	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , f )"	105:1:4839:4870	4230476	0	True				
ANR	4230480	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , f )"		4230476	0					
ANR	4230481	Callee	DEFINE_CMD_DESCRIPTOR		4230476	0					
ANR	4230482	Identifier	DEFINE_CMD_DESCRIPTOR		4230476	0					
ANR	4230483	ArgumentList	core		4230476	1					
ANR	4230484	Argument	core		4230476	0					
ANR	4230485	Identifier	core		4230476	0					
ANR	4230486	Argument	f		4230476	1					
ANR	4230487	Identifier	f		4230476	0					
ANR	4230488	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , fc )"	106:1:4873:4905	4230476	1	True				
ANR	4230489	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , fc )"		4230476	0					
ANR	4230490	Callee	DEFINE_CMD_DESCRIPTOR		4230476	0					
ANR	4230491	Identifier	DEFINE_CMD_DESCRIPTOR		4230476	0					
ANR	4230492	ArgumentList	core		4230476	1					
ANR	4230493	Argument	core		4230476	0					
ANR	4230494	Identifier	core		4230476	0					
ANR	4230495	Argument	fc		4230476	1					
ANR	4230496	Identifier	fc		4230476	0					
ANR	4230497	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , fd )"	107:1:4908:4940	4230476	2	True				
ANR	4230498	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , fd )"		4230476	0					
ANR	4230499	Callee	DEFINE_CMD_DESCRIPTOR		4230476	0					
ANR	4230500	Identifier	DEFINE_CMD_DESCRIPTOR		4230476	0					
ANR	4230501	ArgumentList	core		4230476	1					
ANR	4230502	Argument	core		4230476	0					
ANR	4230503	Identifier	core		4230476	0					
ANR	4230504	Argument	fd		4230476	1					
ANR	4230505	Identifier	fd		4230476	0					
ANR	4230506	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , fs )"	108:1:4943:4975	4230476	3	True				
ANR	4230507	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , fs )"		4230476	0					
ANR	4230508	Callee	DEFINE_CMD_DESCRIPTOR		4230476	0					
ANR	4230509	Identifier	DEFINE_CMD_DESCRIPTOR		4230476	0					
ANR	4230510	ArgumentList	core		4230476	1					
ANR	4230511	Argument	core		4230476	0					
ANR	4230512	Identifier	core		4230476	0					
ANR	4230513	Argument	fs		4230476	1					
ANR	4230514	Identifier	fs		4230476	0					
ANR	4230515	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , fz )"	109:1:4978:5010	4230476	4	True				
ANR	4230516	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , fz )"		4230476	0					
ANR	4230517	Callee	DEFINE_CMD_DESCRIPTOR		4230476	0					
ANR	4230518	Identifier	DEFINE_CMD_DESCRIPTOR		4230476	0					
ANR	4230519	ArgumentList	core		4230476	1					
ANR	4230520	Argument	core		4230476	0					
ANR	4230521	Identifier	core		4230476	0					
ANR	4230522	Argument	fz		4230476	1					
ANR	4230523	Identifier	fz		4230476	0					
ANR	4230524	ReturnType	static void		4230476	1					
ANR	4230525	Identifier	cmd_flag_init		4230476	2					
ANR	4230526	ParameterList	RCore * core		4230476	3					
ANR	4230527	Parameter	RCore * core	104:26:4823:4833	4230476	0	True				
ANR	4230528	ParameterType	RCore *		4230476	0					
ANR	4230529	Identifier	core		4230476	1					
ANR	4230530	CFGEntryNode	ENTRY		4230476		True				
ANR	4230531	CFGExitNode	EXIT		4230476		True				
ANR	4230532	Symbol	core		4230476						
ANR	4230533	Symbol	fz		4230476						
ANR	4230534	Symbol	f		4230476						
ANR	4230535	Symbol	fc		4230476						
ANR	4230536	Symbol	fs		4230476						
ANR	4230537	Symbol	fd		4230476						
ANR	4230538	Function	listFlag	112:0:5015:5110							
ANR	4230539	FunctionDef	"listFlag (RFlagItem * flag , void * user)"		4230538	0					
ANR	4230540	CompoundStatement		112:50:5065:5110	4230538	0					
ANR	4230541	ExpressionStatement	"r_list_append ( user , flag )"	113:1:5068:5094	4230538	0	True				
ANR	4230542	CallExpression	"r_list_append ( user , flag )"		4230538	0					
ANR	4230543	Callee	r_list_append		4230538	0					
ANR	4230544	Identifier	r_list_append		4230538	0					
ANR	4230545	ArgumentList	user		4230538	1					
ANR	4230546	Argument	user		4230538	0					
ANR	4230547	Identifier	user		4230538	0					
ANR	4230548	Argument	flag		4230538	1					
ANR	4230549	Identifier	flag		4230538	0					
ANR	4230550	ReturnStatement	return true ;	114:1:5097:5108	4230538	1	True				
ANR	4230551	Identifier	true		4230538	0					
ANR	4230552	ReturnType	static bool		4230538	1					
ANR	4230553	Identifier	listFlag		4230538	2					
ANR	4230554	ParameterList	"RFlagItem * flag , void * user"		4230538	3					
ANR	4230555	Parameter	RFlagItem * flag	112:21:5036:5050	4230538	0	True				
ANR	4230556	ParameterType	RFlagItem *		4230538	0					
ANR	4230557	Identifier	flag		4230538	1					
ANR	4230558	Parameter	void * user	112:38:5053:5062	4230538	1	True				
ANR	4230559	ParameterType	void *		4230538	0					
ANR	4230560	Identifier	user		4230538	1					
ANR	4230561	CFGEntryNode	ENTRY		4230538		True				
ANR	4230562	CFGExitNode	EXIT		4230538		True				
ANR	4230563	Symbol	flag		4230538						
ANR	4230564	Symbol	true		4230538						
ANR	4230565	Symbol	user		4230538						
ANR	4230566	Function	countMatching	117:0:5113:5290							
ANR	4230567	FunctionDef	"countMatching (const char * a , const char * b)"		4230566	0					
ANR	4230568	CompoundStatement		117:59:5172:5290	4230566	0					
ANR	4230569	IdentifierDeclStatement	size_t matches = 0 ;	118:1:5175:5193	4230566	0	True				
ANR	4230570	IdentifierDecl	matches = 0		4230566	0					
ANR	4230571	IdentifierDeclType	size_t		4230566	0					
ANR	4230572	Identifier	matches		4230566	1					
ANR	4230573	AssignmentExpression	matches = 0		4230566	2		=			
ANR	4230574	Identifier	matches		4230566	0					
ANR	4230575	PrimaryExpression	0		4230566	1					
ANR	4230576	ForStatement	"for ( ; * a && * b ; a ++ , b ++ )"		4230566	1					
ANR	4230577	Condition	* a && * b	119:8:5203:5210	4230566	0	True				
ANR	4230578	AndExpression	* a && * b		4230566	0		&&			
ANR	4230579	UnaryOperationExpression	* a		4230566	0					
ANR	4230580	UnaryOperator	*		4230566	0					
ANR	4230581	Identifier	a		4230566	1					
ANR	4230582	UnaryOperationExpression	* b		4230566	1					
ANR	4230583	UnaryOperator	*		4230566	0					
ANR	4230584	Identifier	b		4230566	1					
ANR	4230585	Expression	"a ++ , b ++"	119:18:5213:5220	4230566	1	True				
ANR	4230586	PostIncDecOperationExpression	a ++		4230566	0					
ANR	4230587	Identifier	a		4230566	0					
ANR	4230588	IncDec	++		4230566	1					
ANR	4230589	PostIncDecOperationExpression	b ++		4230566	1					
ANR	4230590	Identifier	b		4230566	0					
ANR	4230591	IncDec	++		4230566	1					
ANR	4230592	CompoundStatement		3:28:50:50	4230566	2					
ANR	4230593	IfStatement	if ( * a != * b )		4230566	0					
ANR	4230594	Condition	* a != * b	120:6:5231:5238	4230566	0	True				
ANR	4230595	EqualityExpression	* a != * b		4230566	0		!=			
ANR	4230596	UnaryOperationExpression	* a		4230566	0					
ANR	4230597	UnaryOperator	*		4230566	0					
ANR	4230598	Identifier	a		4230566	1					
ANR	4230599	UnaryOperationExpression	* b		4230566	1					
ANR	4230600	UnaryOperator	*		4230566	0					
ANR	4230601	Identifier	b		4230566	1					
ANR	4230602	CompoundStatement		4:16:68:68	4230566	1					
ANR	4230603	BreakStatement	break ;	121:3:5246:5251	4230566	0	True				
ANR	4230604	ExpressionStatement	matches ++	123:2:5259:5268	4230566	1	True				
ANR	4230605	PostIncDecOperationExpression	matches ++		4230566	0					
ANR	4230606	Identifier	matches		4230566	0					
ANR	4230607	IncDec	++		4230566	1					
ANR	4230608	ReturnStatement	return matches ;	125:1:5274:5288	4230566	2	True				
ANR	4230609	Identifier	matches		4230566	0					
ANR	4230610	ReturnType	static size_t		4230566	1					
ANR	4230611	Identifier	countMatching		4230566	2					
ANR	4230612	ParameterList	"const char * a , const char * b"		4230566	3					
ANR	4230613	Parameter	const char * a	117:29:5142:5154	4230566	0	True				
ANR	4230614	ParameterType	const char *		4230566	0					
ANR	4230615	Identifier	a		4230566	1					
ANR	4230616	Parameter	const char * b	117:44:5157:5169	4230566	1	True				
ANR	4230617	ParameterType	const char *		4230566	0					
ANR	4230618	Identifier	b		4230566	1					
ANR	4230619	CFGEntryNode	ENTRY		4230566		True				
ANR	4230620	CFGExitNode	EXIT		4230566		True				
ANR	4230621	Symbol	a		4230566						
ANR	4230622	Symbol	b		4230566						
ANR	4230623	Symbol	* a		4230566						
ANR	4230624	Symbol	* b		4230566						
ANR	4230625	Symbol	matches		4230566						
ANR	4230626	Function	__isOnlySon	128:0:5293:5808							
ANR	4230627	FunctionDef	"__isOnlySon (RCore * core , RList * flags , const char * kw)"		4230626	0					
ANR	4230628	CompoundStatement		128:74:5367:5808	4230626	0					
ANR	4230629	IdentifierDeclStatement	RListIter * iter ;	129:8:5377:5392	4230626	0	True				
ANR	4230630	IdentifierDecl	* iter		4230626	0					
ANR	4230631	IdentifierDeclType	RListIter *		4230626	0					
ANR	4230632	Identifier	iter		4230626	1					
ANR	4230633	IdentifierDeclStatement	RFlagItem * f ;	130:8:5402:5414	4230626	1	True				
ANR	4230634	IdentifierDecl	* f		4230626	0					
ANR	4230635	IdentifierDeclType	RFlagItem *		4230626	0					
ANR	4230636	Identifier	f		4230626	1					
ANR	4230637	IdentifierDeclStatement	size_t count = 0 ;	132:8:5425:5441	4230626	2	True				
ANR	4230638	IdentifierDecl	count = 0		4230626	0					
ANR	4230639	IdentifierDeclType	size_t		4230626	0					
ANR	4230640	Identifier	count		4230626	1					
ANR	4230641	AssignmentExpression	count = 0		4230626	2		=			
ANR	4230642	Identifier	count		4230626	0					
ANR	4230643	PrimaryExpression	0		4230626	1					
ANR	4230644	IdentifierDeclStatement	char * fname = NULL ;	133:8:5451:5469	4230626	3	True				
ANR	4230645	IdentifierDecl	* fname = NULL		4230626	0					
ANR	4230646	IdentifierDeclType	char *		4230626	0					
ANR	4230647	Identifier	fname		4230626	1					
ANR	4230648	AssignmentExpression	* fname = NULL		4230626	2		=			
ANR	4230649	Identifier	NULL		4230626	0					
ANR	4230650	Identifier	NULL		4230626	1					
ANR	4230651	Statement	r_list_foreach	134:8:5479:5492	4230626	4	True				
ANR	4230652	Statement	(	134:23:5494:5494	4230626	5	True				
ANR	4230653	Statement	flags	134:24:5495:5499	4230626	6	True				
ANR	4230654	Statement	","	134:29:5500:5500	4230626	7	True				
ANR	4230655	Statement	iter	134:31:5502:5505	4230626	8	True				
ANR	4230656	Statement	","	134:35:5506:5506	4230626	9	True				
ANR	4230657	Statement	f	134:37:5508:5508	4230626	10	True				
ANR	4230658	Statement	)	134:38:5509:5509	4230626	11	True				
ANR	4230659	CompoundStatement		7:40:143:143	4230626	12					
ANR	4230660	IfStatement	"if ( ! strncmp ( f -> name , kw , strlen ( kw ) ) )"		4230626	0					
ANR	4230661	Condition	"! strncmp ( f -> name , kw , strlen ( kw ) )"	135:20:5533:5567	4230626	0	True				
ANR	4230662	UnaryOperationExpression	"! strncmp ( f -> name , kw , strlen ( kw ) )"		4230626	0					
ANR	4230663	UnaryOperator	!		4230626	0					
ANR	4230664	CallExpression	"strncmp ( f -> name , kw , strlen ( kw ) )"		4230626	1					
ANR	4230665	Callee	strncmp		4230626	0					
ANR	4230666	Identifier	strncmp		4230626	0					
ANR	4230667	ArgumentList	f -> name		4230626	1					
ANR	4230668	Argument	f -> name		4230626	0					
ANR	4230669	PtrMemberAccess	f -> name		4230626	0					
ANR	4230670	Identifier	f		4230626	0					
ANR	4230671	Identifier	name		4230626	1					
ANR	4230672	Argument	kw		4230626	1					
ANR	4230673	Identifier	kw		4230626	0					
ANR	4230674	Argument	strlen ( kw )		4230626	2					
ANR	4230675	CallExpression	strlen ( kw )		4230626	0					
ANR	4230676	Callee	strlen		4230626	0					
ANR	4230677	Identifier	strlen		4230626	0					
ANR	4230678	ArgumentList	kw		4230626	1					
ANR	4230679	Argument	kw		4230626	0					
ANR	4230680	Identifier	kw		4230626	0					
ANR	4230681	CompoundStatement		8:57:202:202	4230626	1					
ANR	4230682	ExpressionStatement	count ++	136:24:5596:5603	4230626	0	True				
ANR	4230683	PostIncDecOperationExpression	count ++		4230626	0					
ANR	4230684	Identifier	count		4230626	0					
ANR	4230685	IncDec	++		4230626	1					
ANR	4230686	IfStatement	if ( count > 1 )		4230626	1					
ANR	4230687	Condition	count > 1	137:28:5633:5641	4230626	0	True				
ANR	4230688	RelationalExpression	count > 1		4230626	0		>			
ANR	4230689	Identifier	count		4230626	0					
ANR	4230690	PrimaryExpression	1		4230626	1					
ANR	4230691	CompoundStatement		10:39:276:276	4230626	1					
ANR	4230692	ReturnStatement	return NULL ;	138:32:5678:5689	4230626	0	True				
ANR	4230693	Identifier	NULL		4230626	0					
ANR	4230694	ExpressionStatement	fname = f -> name	140:24:5741:5756	4230626	2	True				
ANR	4230695	AssignmentExpression	fname = f -> name		4230626	0		=			
ANR	4230696	Identifier	fname		4230626	0					
ANR	4230697	PtrMemberAccess	f -> name		4230626	1					
ANR	4230698	Identifier	f		4230626	0					
ANR	4230699	Identifier	name		4230626	1					
ANR	4230700	ReturnStatement	return fname ;	143:8:5794:5806	4230626	13	True				
ANR	4230701	Identifier	fname		4230626	0					
ANR	4230702	ReturnType	static const char *		4230626	1					
ANR	4230703	Identifier	__isOnlySon		4230626	2					
ANR	4230704	ParameterList	"RCore * core , RList * flags , const char * kw"		4230626	3					
ANR	4230705	Parameter	RCore * core	128:31:5324:5334	4230626	0	True				
ANR	4230706	ParameterType	RCore *		4230626	0					
ANR	4230707	Identifier	core		4230626	1					
ANR	4230708	Parameter	RList * flags	128:44:5337:5348	4230626	1	True				
ANR	4230709	ParameterType	RList *		4230626	0					
ANR	4230710	Identifier	flags		4230626	1					
ANR	4230711	Parameter	const char * kw	128:58:5351:5364	4230626	2	True				
ANR	4230712	ParameterType	const char *		4230626	0					
ANR	4230713	Identifier	kw		4230626	1					
ANR	4230714	CFGEntryNode	ENTRY		4230626		True				
ANR	4230715	CFGExitNode	EXIT		4230626		True				
ANR	4230716	Symbol	* f		4230626						
ANR	4230717	Symbol	core		4230626						
ANR	4230718	Symbol	fname		4230626						
ANR	4230719	Symbol	strncmp		4230626						
ANR	4230720	Symbol	strlen		4230626						
ANR	4230721	Symbol	NULL		4230626						
ANR	4230722	Symbol	f -> name		4230626						
ANR	4230723	Symbol	f		4230626						
ANR	4230724	Symbol	flags		4230626						
ANR	4230725	Symbol	count		4230626						
ANR	4230726	Symbol	iter		4230626						
ANR	4230727	Symbol	kw		4230626						
ANR	4230728	Function	__childrenFlagsOf	146:0:5811:7704							
ANR	4230729	FunctionDef	"__childrenFlagsOf (RCore * core , RList * flags , const char * prefix)"		4230728	0					
ANR	4230730	CompoundStatement		146:79:5890:7704	4230728	0					
ANR	4230731	IdentifierDeclStatement	RList * list = r_list_newf ( free ) ;	147:1:5893:5925	4230728	0	True				
ANR	4230732	IdentifierDecl	* list = r_list_newf ( free )		4230728	0					
ANR	4230733	IdentifierDeclType	RList *		4230728	0					
ANR	4230734	Identifier	list		4230728	1					
ANR	4230735	AssignmentExpression	* list = r_list_newf ( free )		4230728	2		=			
ANR	4230736	Identifier	list		4230728	0					
ANR	4230737	CallExpression	r_list_newf ( free )		4230728	1					
ANR	4230738	Callee	r_list_newf		4230728	0					
ANR	4230739	Identifier	r_list_newf		4230728	0					
ANR	4230740	ArgumentList	free		4230728	1					
ANR	4230741	Argument	free		4230728	0					
ANR	4230742	Identifier	free		4230728	0					
ANR	4230743	IdentifierDeclStatement	"RListIter * iter , * iter2 ;"	148:1:5928:5951	4230728	1	True				
ANR	4230744	IdentifierDecl	* iter		4230728	0					
ANR	4230745	IdentifierDeclType	RListIter *		4230728	0					
ANR	4230746	Identifier	iter		4230728	1					
ANR	4230747	IdentifierDecl	* iter2		4230728	1					
ANR	4230748	IdentifierDeclType	RListIter *		4230728	0					
ANR	4230749	Identifier	iter2		4230728	1					
ANR	4230750	IdentifierDeclStatement	"RFlagItem * f , * f2 ;"	149:1:5954:5971	4230728	2	True				
ANR	4230751	IdentifierDecl	* f		4230728	0					
ANR	4230752	IdentifierDeclType	RFlagItem *		4230728	0					
ANR	4230753	Identifier	f		4230728	1					
ANR	4230754	IdentifierDecl	* f2		4230728	1					
ANR	4230755	IdentifierDeclType	RFlagItem *		4230728	0					
ANR	4230756	Identifier	f2		4230728	1					
ANR	4230757	IdentifierDeclStatement	char * fn ;	150:1:5974:5982	4230728	3	True				
ANR	4230758	IdentifierDecl	* fn		4230728	0					
ANR	4230759	IdentifierDeclType	char *		4230728	0					
ANR	4230760	Identifier	fn		4230728	1					
ANR	4230761	IdentifierDeclStatement	const size_t prefix_len = strlen ( prefix ) ;	152:1:5986:6027	4230728	4	True				
ANR	4230762	IdentifierDecl	prefix_len = strlen ( prefix )		4230728	0					
ANR	4230763	IdentifierDeclType	const size_t		4230728	0					
ANR	4230764	Identifier	prefix_len		4230728	1					
ANR	4230765	AssignmentExpression	prefix_len = strlen ( prefix )		4230728	2		=			
ANR	4230766	Identifier	prefix_len		4230728	0					
ANR	4230767	CallExpression	strlen ( prefix )		4230728	1					
ANR	4230768	Callee	strlen		4230728	0					
ANR	4230769	Identifier	strlen		4230728	0					
ANR	4230770	ArgumentList	prefix		4230728	1					
ANR	4230771	Argument	prefix		4230728	0					
ANR	4230772	Identifier	prefix		4230728	0					
ANR	4230773	Statement	r_list_foreach	153:1:6030:6043	4230728	5	True				
ANR	4230774	Statement	(	153:16:6045:6045	4230728	6	True				
ANR	4230775	Statement	flags	153:17:6046:6050	4230728	7	True				
ANR	4230776	Statement	","	153:22:6051:6051	4230728	8	True				
ANR	4230777	Statement	iter	153:24:6053:6056	4230728	9	True				
ANR	4230778	Statement	","	153:28:6057:6057	4230728	10	True				
ANR	4230779	Statement	f	153:30:6059:6059	4230728	11	True				
ANR	4230780	Statement	)	153:31:6060:6060	4230728	12	True				
ANR	4230781	CompoundStatement		70:2:1538:1556	4230728	13					
ANR	4230782	IfStatement	"if ( prefix_len > 0 && strncmp ( f -> name , prefix , prefix_len ) )"		4230728	0					
ANR	4230783	Condition	"prefix_len > 0 && strncmp ( f -> name , prefix , prefix_len )"	154:6:6070:6124	4230728	0	True				
ANR	4230784	AndExpression	"prefix_len > 0 && strncmp ( f -> name , prefix , prefix_len )"		4230728	0		&&			
ANR	4230785	RelationalExpression	prefix_len > 0		4230728	0		>			
ANR	4230786	Identifier	prefix_len		4230728	0					
ANR	4230787	PrimaryExpression	0		4230728	1					
ANR	4230788	CallExpression	"strncmp ( f -> name , prefix , prefix_len )"		4230728	1					
ANR	4230789	Callee	strncmp		4230728	0					
ANR	4230790	Identifier	strncmp		4230728	0					
ANR	4230791	ArgumentList	f -> name		4230728	1					
ANR	4230792	Argument	f -> name		4230728	0					
ANR	4230793	PtrMemberAccess	f -> name		4230728	0					
ANR	4230794	Identifier	f		4230728	0					
ANR	4230795	Identifier	name		4230728	1					
ANR	4230796	Argument	prefix		4230728	1					
ANR	4230797	Identifier	prefix		4230728	0					
ANR	4230798	Argument	prefix_len		4230728	2					
ANR	4230799	Identifier	prefix_len		4230728	0					
ANR	4230800	CompoundStatement		9:63:236:236	4230728	1					
ANR	4230801	ContinueStatement	continue ;	155:3:6132:6140	4230728	0	True				
ANR	4230802	IfStatement	if ( prefix_len > strlen ( f -> name ) )		4230728	1					
ANR	4230803	Condition	prefix_len > strlen ( f -> name )	157:6:6152:6180	4230728	0	True				
ANR	4230804	RelationalExpression	prefix_len > strlen ( f -> name )		4230728	0		>			
ANR	4230805	Identifier	prefix_len		4230728	0					
ANR	4230806	CallExpression	strlen ( f -> name )		4230728	1					
ANR	4230807	Callee	strlen		4230728	0					
ANR	4230808	Identifier	strlen		4230728	0					
ANR	4230809	ArgumentList	f -> name		4230728	1					
ANR	4230810	Argument	f -> name		4230728	0					
ANR	4230811	PtrMemberAccess	f -> name		4230728	0					
ANR	4230812	Identifier	f		4230728	0					
ANR	4230813	Identifier	name		4230728	1					
ANR	4230814	CompoundStatement		12:37:292:292	4230728	1					
ANR	4230815	ContinueStatement	continue ;	158:3:6188:6196	4230728	0	True				
ANR	4230816	IfStatement	if ( r_cons_is_breaked ( ) )		4230728	2					
ANR	4230817	Condition	r_cons_is_breaked ( )	160:6:6208:6227	4230728	0	True				
ANR	4230818	CallExpression	r_cons_is_breaked ( )		4230728	0					
ANR	4230819	Callee	r_cons_is_breaked		4230728	0					
ANR	4230820	Identifier	r_cons_is_breaked		4230728	0					
ANR	4230821	ArgumentList			4230728	1					
ANR	4230822	CompoundStatement		15:28:339:339	4230728	1					
ANR	4230823	BreakStatement	break ;	161:3:6235:6240	4230728	0	True				
ANR	4230824	IdentifierDeclStatement	const char * name = f -> name ;	163:2:6248:6274	4230728	3	True				
ANR	4230825	IdentifierDecl	* name = f -> name		4230728	0					
ANR	4230826	IdentifierDeclType	const char *		4230728	0					
ANR	4230827	Identifier	name		4230728	1					
ANR	4230828	AssignmentExpression	* name = f -> name		4230728	2		=			
ANR	4230829	Identifier	name		4230728	0					
ANR	4230830	PtrMemberAccess	f -> name		4230728	1					
ANR	4230831	Identifier	f		4230728	0					
ANR	4230832	Identifier	name		4230728	1					
ANR	4230833	IdentifierDeclStatement	int name_len = strlen ( name ) ;	164:2:6278:6306	4230728	4	True				
ANR	4230834	IdentifierDecl	name_len = strlen ( name )		4230728	0					
ANR	4230835	IdentifierDeclType	int		4230728	0					
ANR	4230836	Identifier	name_len		4230728	1					
ANR	4230837	AssignmentExpression	name_len = strlen ( name )		4230728	2		=			
ANR	4230838	Identifier	name_len		4230728	0					
ANR	4230839	CallExpression	strlen ( name )		4230728	1					
ANR	4230840	Callee	strlen		4230728	0					
ANR	4230841	Identifier	strlen		4230728	0					
ANR	4230842	ArgumentList	name		4230728	1					
ANR	4230843	Argument	name		4230728	0					
ANR	4230844	Identifier	name		4230728	0					
ANR	4230845	Statement	r_list_foreach	165:2:6310:6323	4230728	5	True				
ANR	4230846	Statement	(	165:17:6325:6325	4230728	6	True				
ANR	4230847	Statement	flags	165:18:6326:6330	4230728	7	True				
ANR	4230848	Statement	","	165:23:6331:6331	4230728	8	True				
ANR	4230849	Statement	iter2	165:25:6333:6337	4230728	9	True				
ANR	4230850	Statement	","	165:30:6338:6338	4230728	10	True				
ANR	4230851	Statement	f2	165:32:6340:6341	4230728	11	True				
ANR	4230852	Statement	)	165:34:6342:6342	4230728	12	True				
ANR	4230853	CompoundStatement		27:3:604:649	4230728	13					
ANR	4230854	IfStatement	if ( prefix_len > strlen ( f2 -> name ) )		4230728	0					
ANR	4230855	Condition	prefix_len > strlen ( f2 -> name )	166:7:6353:6382	4230728	0	True				
ANR	4230856	RelationalExpression	prefix_len > strlen ( f2 -> name )		4230728	0		>			
ANR	4230857	Identifier	prefix_len		4230728	0					
ANR	4230858	CallExpression	strlen ( f2 -> name )		4230728	1					
ANR	4230859	Callee	strlen		4230728	0					
ANR	4230860	Identifier	strlen		4230728	0					
ANR	4230861	ArgumentList	f2 -> name		4230728	1					
ANR	4230862	Argument	f2 -> name		4230728	0					
ANR	4230863	PtrMemberAccess	f2 -> name		4230728	0					
ANR	4230864	Identifier	f2		4230728	0					
ANR	4230865	Identifier	name		4230728	1					
ANR	4230866	CompoundStatement		21:39:494:494	4230728	1					
ANR	4230867	ContinueStatement	continue ;	167:4:6391:6399	4230728	0	True				
ANR	4230868	IfStatement	"if ( prefix_len > 0 && strncmp ( f2 -> name , prefix , prefix_len ) )"		4230728	1					
ANR	4230869	Condition	"prefix_len > 0 && strncmp ( f2 -> name , prefix , prefix_len )"	169:7:6413:6468	4230728	0	True				
ANR	4230870	AndExpression	"prefix_len > 0 && strncmp ( f2 -> name , prefix , prefix_len )"		4230728	0		&&			
ANR	4230871	RelationalExpression	prefix_len > 0		4230728	0		>			
ANR	4230872	Identifier	prefix_len		4230728	0					
ANR	4230873	PrimaryExpression	0		4230728	1					
ANR	4230874	CallExpression	"strncmp ( f2 -> name , prefix , prefix_len )"		4230728	1					
ANR	4230875	Callee	strncmp		4230728	0					
ANR	4230876	Identifier	strncmp		4230728	0					
ANR	4230877	ArgumentList	f2 -> name		4230728	1					
ANR	4230878	Argument	f2 -> name		4230728	0					
ANR	4230879	PtrMemberAccess	f2 -> name		4230728	0					
ANR	4230880	Identifier	f2		4230728	0					
ANR	4230881	Identifier	name		4230728	1					
ANR	4230882	Argument	prefix		4230728	1					
ANR	4230883	Identifier	prefix		4230728	0					
ANR	4230884	Argument	prefix_len		4230728	2					
ANR	4230885	Identifier	prefix_len		4230728	0					
ANR	4230886	CompoundStatement		24:65:580:580	4230728	1					
ANR	4230887	ContinueStatement	continue ;	170:4:6477:6485	4230728	0	True				
ANR	4230888	IdentifierDeclStatement	"int matching = countMatching ( name , f2 -> name ) ;"	172:3:6495:6540	4230728	2	True				
ANR	4230889	IdentifierDecl	"matching = countMatching ( name , f2 -> name )"		4230728	0					
ANR	4230890	IdentifierDeclType	int		4230728	0					
ANR	4230891	Identifier	matching		4230728	1					
ANR	4230892	AssignmentExpression	"matching = countMatching ( name , f2 -> name )"		4230728	2		=			
ANR	4230893	Identifier	matching		4230728	0					
ANR	4230894	CallExpression	"countMatching ( name , f2 -> name )"		4230728	1					
ANR	4230895	Callee	countMatching		4230728	0					
ANR	4230896	Identifier	countMatching		4230728	0					
ANR	4230897	ArgumentList	name		4230728	1					
ANR	4230898	Argument	name		4230728	0					
ANR	4230899	Identifier	name		4230728	0					
ANR	4230900	Argument	f2 -> name		4230728	1					
ANR	4230901	PtrMemberAccess	f2 -> name		4230728	0					
ANR	4230902	Identifier	f2		4230728	0					
ANR	4230903	Identifier	name		4230728	1					
ANR	4230904	IfStatement	if ( matching < prefix_len || matching == name_len )		4230728	3					
ANR	4230905	Condition	matching < prefix_len || matching == name_len	173:7:6549:6593	4230728	0	True				
ANR	4230906	OrExpression	matching < prefix_len || matching == name_len		4230728	0		||			
ANR	4230907	RelationalExpression	matching < prefix_len		4230728	0		<			
ANR	4230908	Identifier	matching		4230728	0					
ANR	4230909	Identifier	prefix_len		4230728	1					
ANR	4230910	EqualityExpression	matching == name_len		4230728	1		==			
ANR	4230911	Identifier	matching		4230728	0					
ANR	4230912	Identifier	name_len		4230728	1					
ANR	4230913	CompoundStatement		28:54:705:705	4230728	1					
ANR	4230914	ContinueStatement	continue ;	174:4:6602:6610	4230728	0	True				
ANR	4230915	IfStatement	if ( matching > name_len )		4230728	4					
ANR	4230916	Condition	matching > name_len	176:7:6624:6642	4230728	0	True				
ANR	4230917	RelationalExpression	matching > name_len		4230728	0		>			
ANR	4230918	Identifier	matching		4230728	0					
ANR	4230919	Identifier	name_len		4230728	1					
ANR	4230920	CompoundStatement		31:28:754:754	4230728	1					
ANR	4230921	BreakStatement	break ;	177:4:6651:6656	4230728	0	True				
ANR	4230922	IfStatement	if ( matching < name_len )		4230728	5					
ANR	4230923	Condition	matching < name_len	179:7:6670:6688	4230728	0	True				
ANR	4230924	RelationalExpression	matching < name_len		4230728	0		<			
ANR	4230925	Identifier	matching		4230728	0					
ANR	4230926	Identifier	name_len		4230728	1					
ANR	4230927	CompoundStatement		34:28:800:800	4230728	1					
ANR	4230928	ExpressionStatement	name_len = matching	180:4:6697:6716	4230728	0	True				
ANR	4230929	AssignmentExpression	name_len = matching		4230728	0		=			
ANR	4230930	Identifier	name_len		4230728	0					
ANR	4230931	Identifier	matching		4230728	1					
ANR	4230932	IdentifierDeclStatement	"char * kw = r_str_ndup ( name , name_len + 1 ) ;"	183:2:6729:6771	4230728	14	True				
ANR	4230933	IdentifierDecl	"* kw = r_str_ndup ( name , name_len + 1 )"		4230728	0					
ANR	4230934	IdentifierDeclType	char *		4230728	0					
ANR	4230935	Identifier	kw		4230728	1					
ANR	4230936	AssignmentExpression	"* kw = r_str_ndup ( name , name_len + 1 )"		4230728	2		=			
ANR	4230937	Identifier	kw		4230728	0					
ANR	4230938	CallExpression	"r_str_ndup ( name , name_len + 1 )"		4230728	1					
ANR	4230939	Callee	r_str_ndup		4230728	0					
ANR	4230940	Identifier	r_str_ndup		4230728	0					
ANR	4230941	ArgumentList	name		4230728	1					
ANR	4230942	Argument	name		4230728	0					
ANR	4230943	Identifier	name		4230728	0					
ANR	4230944	Argument	name_len + 1		4230728	1					
ANR	4230945	AdditiveExpression	name_len + 1		4230728	0		+			
ANR	4230946	Identifier	name_len		4230728	0					
ANR	4230947	PrimaryExpression	1		4230728	1					
ANR	4230948	IdentifierDeclStatement	const int kw_len = strlen ( kw ) ;	184:2:6775:6805	4230728	15	True				
ANR	4230949	IdentifierDecl	kw_len = strlen ( kw )		4230728	0					
ANR	4230950	IdentifierDeclType	const int		4230728	0					
ANR	4230951	Identifier	kw_len		4230728	1					
ANR	4230952	AssignmentExpression	kw_len = strlen ( kw )		4230728	2		=			
ANR	4230953	Identifier	kw_len		4230728	0					
ANR	4230954	CallExpression	strlen ( kw )		4230728	1					
ANR	4230955	Callee	strlen		4230728	0					
ANR	4230956	Identifier	strlen		4230728	0					
ANR	4230957	ArgumentList	kw		4230728	1					
ANR	4230958	Argument	kw		4230728	0					
ANR	4230959	Identifier	kw		4230728	0					
ANR	4230960	IdentifierDeclStatement	"const char * only = __isOnlySon ( core , flags , kw ) ;"	185:2:6809:6857	4230728	16	True				
ANR	4230961	IdentifierDecl	"* only = __isOnlySon ( core , flags , kw )"		4230728	0					
ANR	4230962	IdentifierDeclType	const char *		4230728	0					
ANR	4230963	Identifier	only		4230728	1					
ANR	4230964	AssignmentExpression	"* only = __isOnlySon ( core , flags , kw )"		4230728	2		=			
ANR	4230965	Identifier	only		4230728	0					
ANR	4230966	CallExpression	"__isOnlySon ( core , flags , kw )"		4230728	1					
ANR	4230967	Callee	__isOnlySon		4230728	0					
ANR	4230968	Identifier	__isOnlySon		4230728	0					
ANR	4230969	ArgumentList	core		4230728	1					
ANR	4230970	Argument	core		4230728	0					
ANR	4230971	Identifier	core		4230728	0					
ANR	4230972	Argument	flags		4230728	1					
ANR	4230973	Identifier	flags		4230728	0					
ANR	4230974	Argument	kw		4230728	2					
ANR	4230975	Identifier	kw		4230728	0					
ANR	4230976	IfStatement	if ( only )		4230728	17					
ANR	4230977	Condition	only	186:6:6865:6868	4230728	0	True				
ANR	4230978	Identifier	only		4230728	0					
ANR	4230979	CompoundStatement		41:12:980:980	4230728	1					
ANR	4230980	ExpressionStatement	free ( kw )	187:3:6876:6885	4230728	0	True				
ANR	4230981	CallExpression	free ( kw )		4230728	0					
ANR	4230982	Callee	free		4230728	0					
ANR	4230983	Identifier	free		4230728	0					
ANR	4230984	ArgumentList	kw		4230728	1					
ANR	4230985	Argument	kw		4230728	0					
ANR	4230986	Identifier	kw		4230728	0					
ANR	4230987	ExpressionStatement	kw = strdup ( only )	188:3:6890:6908	4230728	1	True				
ANR	4230988	AssignmentExpression	kw = strdup ( only )		4230728	0		=			
ANR	4230989	Identifier	kw		4230728	0					
ANR	4230990	CallExpression	strdup ( only )		4230728	1					
ANR	4230991	Callee	strdup		4230728	0					
ANR	4230992	Identifier	strdup		4230728	0					
ANR	4230993	ArgumentList	only		4230728	1					
ANR	4230994	Argument	only		4230728	0					
ANR	4230995	Identifier	only		4230728	0					
ANR	4230996	ElseStatement	else		4230728	0					
ANR	4230997	CompoundStatement		46:3:1062:1082	4230728	0					
ANR	4230998	IdentifierDeclStatement	const char * fname = NULL ;	190:3:6924:6948	4230728	0	True				
ANR	4230999	IdentifierDecl	* fname = NULL		4230728	0					
ANR	4231000	IdentifierDeclType	const char *		4230728	0					
ANR	4231001	Identifier	fname		4230728	1					
ANR	4231002	AssignmentExpression	* fname = NULL		4230728	2		=			
ANR	4231003	Identifier	NULL		4230728	0					
ANR	4231004	Identifier	NULL		4230728	1					
ANR	4231005	IdentifierDeclStatement	size_t fname_len = 0 ;	191:3:6953:6973	4230728	1	True				
ANR	4231006	IdentifierDecl	fname_len = 0		4230728	0					
ANR	4231007	IdentifierDeclType	size_t		4230728	0					
ANR	4231008	Identifier	fname_len		4230728	1					
ANR	4231009	AssignmentExpression	fname_len = 0		4230728	2		=			
ANR	4231010	Identifier	fname_len		4230728	0					
ANR	4231011	PrimaryExpression	0		4230728	1					
ANR	4231012	Statement	r_list_foreach	192:3:6978:6991	4230728	2	True				
ANR	4231013	Statement	(	192:18:6993:6993	4230728	3	True				
ANR	4231014	Statement	flags	192:19:6994:6998	4230728	4	True				
ANR	4231015	Statement	","	192:24:6999:6999	4230728	5	True				
ANR	4231016	Statement	iter2	192:26:7001:7005	4230728	6	True				
ANR	4231017	Statement	","	192:31:7006:7006	4230728	7	True				
ANR	4231018	Statement	f2	192:33:7008:7009	4230728	8	True				
ANR	4231019	Statement	)	192:35:7010:7010	4230728	9	True				
ANR	4231020	CompoundStatement		47:37:1121:1121	4230728	10					
ANR	4231021	IfStatement	"if ( strncmp ( f2 -> name , kw , kw_len ) )"		4230728	0					
ANR	4231022	Condition	"strncmp ( f2 -> name , kw , kw_len )"	193:8:7022:7051	4230728	0	True				
ANR	4231023	CallExpression	"strncmp ( f2 -> name , kw , kw_len )"		4230728	0					
ANR	4231024	Callee	strncmp		4230728	0					
ANR	4231025	Identifier	strncmp		4230728	0					
ANR	4231026	ArgumentList	f2 -> name		4230728	1					
ANR	4231027	Argument	f2 -> name		4230728	0					
ANR	4231028	PtrMemberAccess	f2 -> name		4230728	0					
ANR	4231029	Identifier	f2		4230728	0					
ANR	4231030	Identifier	name		4230728	1					
ANR	4231031	Argument	kw		4230728	1					
ANR	4231032	Identifier	kw		4230728	0					
ANR	4231033	Argument	kw_len		4230728	2					
ANR	4231034	Identifier	kw_len		4230728	0					
ANR	4231035	CompoundStatement		48:40:1163:1163	4230728	1					
ANR	4231036	ContinueStatement	continue ;	194:5:7061:7069	4230728	0	True				
ANR	4231037	IfStatement	if ( fname )		4230728	1					
ANR	4231038	Condition	fname	196:8:7085:7089	4230728	0	True				
ANR	4231039	Identifier	fname		4230728	0					
ANR	4231040	CompoundStatement		52:5:1208:1254	4230728	1					
ANR	4231041	IdentifierDeclStatement	"int matching = countMatching ( fname , f2 -> name ) ;"	197:5:7099:7145	4230728	0	True				
ANR	4231042	IdentifierDecl	"matching = countMatching ( fname , f2 -> name )"		4230728	0					
ANR	4231043	IdentifierDeclType	int		4230728	0					
ANR	4231044	Identifier	matching		4230728	1					
ANR	4231045	AssignmentExpression	"matching = countMatching ( fname , f2 -> name )"		4230728	2		=			
ANR	4231046	Identifier	matching		4230728	0					
ANR	4231047	CallExpression	"countMatching ( fname , f2 -> name )"		4230728	1					
ANR	4231048	Callee	countMatching		4230728	0					
ANR	4231049	Identifier	countMatching		4230728	0					
ANR	4231050	ArgumentList	fname		4230728	1					
ANR	4231051	Argument	fname		4230728	0					
ANR	4231052	Identifier	fname		4230728	0					
ANR	4231053	Argument	f2 -> name		4230728	1					
ANR	4231054	PtrMemberAccess	f2 -> name		4230728	0					
ANR	4231055	Identifier	f2		4230728	0					
ANR	4231056	Identifier	name		4230728	1					
ANR	4231057	IfStatement	if ( fname_len )		4230728	1					
ANR	4231058	Condition	fname_len	198:9:7156:7164	4230728	0	True				
ANR	4231059	Identifier	fname_len		4230728	0					
ANR	4231060	CompoundStatement		53:20:1276:1276	4230728	1					
ANR	4231061	IfStatement	if ( matching < fname_len )		4230728	0					
ANR	4231062	Condition	matching < fname_len	199:10:7179:7198	4230728	0	True				
ANR	4231063	RelationalExpression	matching < fname_len		4230728	0		<			
ANR	4231064	Identifier	matching		4230728	0					
ANR	4231065	Identifier	fname_len		4230728	1					
ANR	4231066	CompoundStatement		54:32:1310:1310	4230728	1					
ANR	4231067	ExpressionStatement	fname_len = matching	200:7:7210:7230	4230728	0	True				
ANR	4231068	AssignmentExpression	fname_len = matching		4230728	0		=			
ANR	4231069	Identifier	fname_len		4230728	0					
ANR	4231070	Identifier	matching		4230728	1					
ANR	4231071	ElseStatement	else		4230728	0					
ANR	4231072	CompoundStatement		57:12:1361:1361	4230728	0					
ANR	4231073	ExpressionStatement	fname_len = matching	203:6:7260:7280	4230728	0	True				
ANR	4231074	AssignmentExpression	fname_len = matching		4230728	0		=			
ANR	4231075	Identifier	fname_len		4230728	0					
ANR	4231076	Identifier	matching		4230728	1					
ANR	4231077	ElseStatement	else		4230728	0					
ANR	4231078	CompoundStatement		60:11:1409:1409	4230728	0					
ANR	4231079	ExpressionStatement	fname = f2 -> name	206:5:7307:7323	4230728	0	True				
ANR	4231080	AssignmentExpression	fname = f2 -> name		4230728	0		=			
ANR	4231081	Identifier	fname		4230728	0					
ANR	4231082	PtrMemberAccess	f2 -> name		4230728	1					
ANR	4231083	Identifier	f2		4230728	0					
ANR	4231084	Identifier	name		4230728	1					
ANR	4231085	IfStatement	if ( fname_len > 0 )		4230728	11					
ANR	4231086	Condition	fname_len > 0	209:7:7343:7355	4230728	0	True				
ANR	4231087	RelationalExpression	fname_len > 0		4230728	0		>			
ANR	4231088	Identifier	fname_len		4230728	0					
ANR	4231089	PrimaryExpression	0		4230728	1					
ANR	4231090	CompoundStatement		64:22:1467:1467	4230728	1					
ANR	4231091	ExpressionStatement	free ( kw )	210:4:7364:7373	4230728	0	True				
ANR	4231092	CallExpression	free ( kw )		4230728	0					
ANR	4231093	Callee	free		4230728	0					
ANR	4231094	Identifier	free		4230728	0					
ANR	4231095	ArgumentList	kw		4230728	1					
ANR	4231096	Argument	kw		4230728	0					
ANR	4231097	Identifier	kw		4230728	0					
ANR	4231098	ExpressionStatement	"kw = r_str_ndup ( fname , fname_len )"	211:4:7379:7413	4230728	1	True				
ANR	4231099	AssignmentExpression	"kw = r_str_ndup ( fname , fname_len )"		4230728	0		=			
ANR	4231100	Identifier	kw		4230728	0					
ANR	4231101	CallExpression	"r_str_ndup ( fname , fname_len )"		4230728	1					
ANR	4231102	Callee	r_str_ndup		4230728	0					
ANR	4231103	Identifier	r_str_ndup		4230728	0					
ANR	4231104	ArgumentList	fname		4230728	1					
ANR	4231105	Argument	fname		4230728	0					
ANR	4231106	Identifier	fname		4230728	0					
ANR	4231107	Argument	fname_len		4230728	1					
ANR	4231108	Identifier	fname_len		4230728	0					
ANR	4231109	IdentifierDeclStatement	bool found = false ;	215:2:7429:7447	4230728	18	True				
ANR	4231110	IdentifierDecl	found = false		4230728	0					
ANR	4231111	IdentifierDeclType	bool		4230728	0					
ANR	4231112	Identifier	found		4230728	1					
ANR	4231113	AssignmentExpression	found = false		4230728	2		=			
ANR	4231114	Identifier	false		4230728	0					
ANR	4231115	Identifier	false		4230728	1					
ANR	4231116	Statement	r_list_foreach	216:2:7451:7464	4230728	19	True				
ANR	4231117	Statement	(	216:17:7466:7466	4230728	20	True				
ANR	4231118	Statement	list	216:18:7467:7470	4230728	21	True				
ANR	4231119	Statement	","	216:22:7471:7471	4230728	22	True				
ANR	4231120	Statement	iter2	216:24:7473:7477	4230728	23	True				
ANR	4231121	Statement	","	216:29:7478:7478	4230728	24	True				
ANR	4231122	Statement	fn	216:31:7480:7481	4230728	25	True				
ANR	4231123	Statement	)	216:33:7482:7482	4230728	26	True				
ANR	4231124	CompoundStatement		71:35:1593:1593	4230728	27					
ANR	4231125	IfStatement	"if ( ! strcmp ( fn , kw ) )"		4230728	0					
ANR	4231126	Condition	"! strcmp ( fn , kw )"	217:7:7493:7508	4230728	0	True				
ANR	4231127	UnaryOperationExpression	"! strcmp ( fn , kw )"		4230728	0					
ANR	4231128	UnaryOperator	!		4230728	0					
ANR	4231129	CallExpression	"strcmp ( fn , kw )"		4230728	1					
ANR	4231130	Callee	strcmp		4230728	0					
ANR	4231131	Identifier	strcmp		4230728	0					
ANR	4231132	ArgumentList	fn		4230728	1					
ANR	4231133	Argument	fn		4230728	0					
ANR	4231134	Identifier	fn		4230728	0					
ANR	4231135	Argument	kw		4230728	1					
ANR	4231136	Identifier	kw		4230728	0					
ANR	4231137	CompoundStatement		72:25:1620:1620	4230728	1					
ANR	4231138	ExpressionStatement	found = true	218:4:7517:7529	4230728	0	True				
ANR	4231139	AssignmentExpression	found = true		4230728	0		=			
ANR	4231140	Identifier	found		4230728	0					
ANR	4231141	Identifier	true		4230728	1					
ANR	4231142	BreakStatement	break ;	219:4:7535:7540	4230728	1	True				
ANR	4231143	IfStatement	if ( found )		4230728	28					
ANR	4231144	Condition	found	222:6:7557:7561	4230728	0	True				
ANR	4231145	Identifier	found		4230728	0					
ANR	4231146	CompoundStatement		77:13:1673:1673	4230728	1					
ANR	4231147	ExpressionStatement	free ( kw )	223:3:7569:7578	4230728	0	True				
ANR	4231148	CallExpression	free ( kw )		4230728	0					
ANR	4231149	Callee	free		4230728	0					
ANR	4231150	Identifier	free		4230728	0					
ANR	4231151	ArgumentList	kw		4230728	1					
ANR	4231152	Argument	kw		4230728	0					
ANR	4231153	Identifier	kw		4230728	0					
ANR	4231154	ElseStatement	else		4230728	0					
ANR	4231155	CompoundStatement		79:9:1698:1698	4230728	0					
ANR	4231156	IfStatement	"if ( strcmp ( prefix , kw ) )"		4230728	0					
ANR	4231157	Condition	"strcmp ( prefix , kw )"	225:7:7598:7616	4230728	0	True				
ANR	4231158	CallExpression	"strcmp ( prefix , kw )"		4230728	0					
ANR	4231159	Callee	strcmp		4230728	0					
ANR	4231160	Identifier	strcmp		4230728	0					
ANR	4231161	ArgumentList	prefix		4230728	1					
ANR	4231162	Argument	prefix		4230728	0					
ANR	4231163	Identifier	prefix		4230728	0					
ANR	4231164	Argument	kw		4230728	1					
ANR	4231165	Identifier	kw		4230728	0					
ANR	4231166	CompoundStatement		80:28:1728:1728	4230728	1					
ANR	4231167	ExpressionStatement	"r_list_append ( list , kw )"	226:4:7625:7649	4230728	0	True				
ANR	4231168	CallExpression	"r_list_append ( list , kw )"		4230728	0					
ANR	4231169	Callee	r_list_append		4230728	0					
ANR	4231170	Identifier	r_list_append		4230728	0					
ANR	4231171	ArgumentList	list		4230728	1					
ANR	4231172	Argument	list		4230728	0					
ANR	4231173	Identifier	list		4230728	0					
ANR	4231174	Argument	kw		4230728	1					
ANR	4231175	Identifier	kw		4230728	0					
ANR	4231176	ElseStatement	else		4230728	0					
ANR	4231177	CompoundStatement		82:10:1770:1770	4230728	0					
ANR	4231178	ExpressionStatement	free ( kw )	228:4:7667:7676	4230728	0	True				
ANR	4231179	CallExpression	free ( kw )		4230728	0					
ANR	4231180	Callee	free		4230728	0					
ANR	4231181	Identifier	free		4230728	0					
ANR	4231182	ArgumentList	kw		4230728	1					
ANR	4231183	Argument	kw		4230728	0					
ANR	4231184	Identifier	kw		4230728	0					
ANR	4231185	ReturnStatement	return list ;	232:1:7691:7702	4230728	14	True				
ANR	4231186	Identifier	list		4230728	0					
ANR	4231187	ReturnType	static RList *		4230728	1					
ANR	4231188	Identifier	__childrenFlagsOf		4230728	2					
ANR	4231189	ParameterList	"RCore * core , RList * flags , const char * prefix"		4230728	3					
ANR	4231190	Parameter	RCore * core	146:32:5843:5853	4230728	0	True				
ANR	4231191	ParameterType	RCore *		4230728	0					
ANR	4231192	Identifier	core		4230728	1					
ANR	4231193	Parameter	RList * flags	146:45:5856:5867	4230728	1	True				
ANR	4231194	ParameterType	RList *		4230728	0					
ANR	4231195	Identifier	flags		4230728	1					
ANR	4231196	Parameter	const char * prefix	146:59:5870:5887	4230728	2	True				
ANR	4231197	ParameterType	const char *		4230728	0					
ANR	4231198	Identifier	prefix		4230728	1					
ANR	4231199	CFGEntryNode	ENTRY		4230728		True				
ANR	4231200	CFGExitNode	EXIT		4230728		True				
ANR	4231201	CFGErrorNode	ERROR		4230728		True				
ANR	4231202	Symbol	f -> name		4230728						
ANR	4231203	Symbol	prefix		4230728						
ANR	4231204	Symbol	r_str_ndup		4230728						
ANR	4231205	Symbol	f2 -> name		4230728						
ANR	4231206	Symbol	flags		4230728						
ANR	4231207	Symbol	fn		4230728						
ANR	4231208	Symbol	prefix_len		4230728						
ANR	4231209	Symbol	f2		4230728						
ANR	4231210	Symbol	matching		4230728						
ANR	4231211	Symbol	strlen		4230728						
ANR	4231212	Symbol	strncmp		4230728						
ANR	4231213	Symbol	* f2		4230728						
ANR	4231214	Symbol	r_cons_is_breaked		4230728						
ANR	4231215	Symbol	kw_len		4230728						
ANR	4231216	Symbol	found		4230728						
ANR	4231217	Symbol	only		4230728						
ANR	4231218	Symbol	name_len		4230728						
ANR	4231219	Symbol	free		4230728						
ANR	4231220	Symbol	__isOnlySon		4230728						
ANR	4231221	Symbol	strcmp		4230728						
ANR	4231222	Symbol	fname		4230728						
ANR	4231223	Symbol	NULL		4230728						
ANR	4231224	Symbol	r_list_newf		4230728						
ANR	4231225	Symbol	f		4230728						
ANR	4231226	Symbol	iter2		4230728						
ANR	4231227	Symbol	false		4230728						
ANR	4231228	Symbol	iter		4230728						
ANR	4231229	Symbol	list		4230728						
ANR	4231230	Symbol	kw		4230728						
ANR	4231231	Symbol	* f		4230728						
ANR	4231232	Symbol	core		4230728						
ANR	4231233	Symbol	name		4230728						
ANR	4231234	Symbol	true		4230728						
ANR	4231235	Symbol	countMatching		4230728						
ANR	4231236	Symbol	fname_len		4230728						
ANR	4231237	Symbol	strdup		4230728						
ANR	4231238	DeclStmt									
ANR	4231239	Decl							void	"void ( RCore * core , RList * list , const char * prefix , int mode , int depth )"	__printRecursive
ANR	4231240	Function	__printRecursive	237:0:7806:8625							
ANR	4231241	FunctionDef	"__printRecursive (RCore * core , RList * flags , const char * prefix , int mode , int depth)"		4231240	0					
ANR	4231242	CompoundStatement		237:98:7904:8625	4231240	0					
ANR	4231243	IdentifierDeclStatement	char * fn ;	238:1:7907:7915	4231240	0	True				
ANR	4231244	IdentifierDecl	* fn		4231240	0					
ANR	4231245	IdentifierDeclType	char *		4231240	0					
ANR	4231246	Identifier	fn		4231240	1					
ANR	4231247	IdentifierDeclStatement	RListIter * iter ;	239:1:7918:7933	4231240	1	True				
ANR	4231248	IdentifierDecl	* iter		4231240	0					
ANR	4231249	IdentifierDeclType	RListIter *		4231240	0					
ANR	4231250	Identifier	iter		4231240	1					
ANR	4231251	IdentifierDeclStatement	const int prefix_len = strlen ( prefix ) ;	240:1:7936:7974	4231240	2	True				
ANR	4231252	IdentifierDecl	prefix_len = strlen ( prefix )		4231240	0					
ANR	4231253	IdentifierDeclType	const int		4231240	0					
ANR	4231254	Identifier	prefix_len		4231240	1					
ANR	4231255	AssignmentExpression	prefix_len = strlen ( prefix )		4231240	2		=			
ANR	4231256	Identifier	prefix_len		4231240	0					
ANR	4231257	CallExpression	strlen ( prefix )		4231240	1					
ANR	4231258	Callee	strlen		4231240	0					
ANR	4231259	Identifier	strlen		4231240	0					
ANR	4231260	ArgumentList	prefix		4231240	1					
ANR	4231261	Argument	prefix		4231240	0					
ANR	4231262	Identifier	prefix		4231240	0					
ANR	4231263	IfStatement	if ( mode == '*' && ! * prefix )		4231240	3					
ANR	4231264	Condition	mode == '*' && ! * prefix	242:5:8016:8038	4231240	0	True				
ANR	4231265	AndExpression	mode == '*' && ! * prefix		4231240	0		&&			
ANR	4231266	EqualityExpression	mode == '*'		4231240	0		==			
ANR	4231267	Identifier	mode		4231240	0					
ANR	4231268	PrimaryExpression	'*'		4231240	1					
ANR	4231269	UnaryOperationExpression	! * prefix		4231240	1					
ANR	4231270	UnaryOperator	!		4231240	0					
ANR	4231271	UnaryOperationExpression	* prefix		4231240	1					
ANR	4231272	UnaryOperator	*		4231240	0					
ANR	4231273	Identifier	prefix		4231240	1					
ANR	4231274	CompoundStatement		6:30:136:136	4231240	1					
ANR	4231275	ExpressionStatement	"r_cons_printf ( ""agn root\\n"" )"	243:2:8045:8073	4231240	0	True				
ANR	4231276	CallExpression	"r_cons_printf ( ""agn root\\n"" )"		4231240	0					
ANR	4231277	Callee	r_cons_printf		4231240	0					
ANR	4231278	Identifier	r_cons_printf		4231240	0					
ANR	4231279	ArgumentList	"""agn root\\n"""		4231240	1					
ANR	4231280	Argument	"""agn root\\n"""		4231240	0					
ANR	4231281	PrimaryExpression	"""agn root\\n"""		4231240	0					
ANR	4231282	IfStatement	"if ( r_flag_get ( core -> flags , prefix ) )"		4231240	4					
ANR	4231283	Condition	"r_flag_get ( core -> flags , prefix )"	245:5:8083:8114	4231240	0	True				
ANR	4231284	CallExpression	"r_flag_get ( core -> flags , prefix )"		4231240	0					
ANR	4231285	Callee	r_flag_get		4231240	0					
ANR	4231286	Identifier	r_flag_get		4231240	0					
ANR	4231287	ArgumentList	core -> flags		4231240	1					
ANR	4231288	Argument	core -> flags		4231240	0					
ANR	4231289	PtrMemberAccess	core -> flags		4231240	0					
ANR	4231290	Identifier	core		4231240	0					
ANR	4231291	Identifier	flags		4231240	1					
ANR	4231292	Argument	prefix		4231240	1					
ANR	4231293	Identifier	prefix		4231240	0					
ANR	4231294	CompoundStatement		9:39:212:212	4231240	1					
ANR	4231295	ReturnStatement	return ;	246:2:8121:8127	4231240	0	True				
ANR	4231296	IdentifierDeclStatement	"RList * children = __childrenFlagsOf ( core , flags , prefix ) ;"	248:1:8133:8190	4231240	5	True				
ANR	4231297	IdentifierDecl	"* children = __childrenFlagsOf ( core , flags , prefix )"		4231240	0					
ANR	4231298	IdentifierDeclType	RList *		4231240	0					
ANR	4231299	Identifier	children		4231240	1					
ANR	4231300	AssignmentExpression	"* children = __childrenFlagsOf ( core , flags , prefix )"		4231240	2		=			
ANR	4231301	Identifier	children		4231240	0					
ANR	4231302	CallExpression	"__childrenFlagsOf ( core , flags , prefix )"		4231240	1					
ANR	4231303	Callee	__childrenFlagsOf		4231240	0					
ANR	4231304	Identifier	__childrenFlagsOf		4231240	0					
ANR	4231305	ArgumentList	core		4231240	1					
ANR	4231306	Argument	core		4231240	0					
ANR	4231307	Identifier	core		4231240	0					
ANR	4231308	Argument	flags		4231240	1					
ANR	4231309	Identifier	flags		4231240	0					
ANR	4231310	Argument	prefix		4231240	2					
ANR	4231311	Identifier	prefix		4231240	0					
ANR	4231312	Statement	r_list_foreach	249:1:8193:8206	4231240	6	True				
ANR	4231313	Statement	(	249:16:8208:8208	4231240	7	True				
ANR	4231314	Statement	children	249:17:8209:8216	4231240	8	True				
ANR	4231315	Statement	","	249:25:8217:8217	4231240	9	True				
ANR	4231316	Statement	iter	249:27:8219:8222	4231240	10	True				
ANR	4231317	Statement	","	249:31:8223:8223	4231240	11	True				
ANR	4231318	Statement	fn	249:33:8225:8226	4231240	12	True				
ANR	4231319	Statement	)	249:35:8227:8227	4231240	13	True				
ANR	4231320	CompoundStatement		13:37:324:324	4231240	14					
ANR	4231321	IfStatement	"if ( ! strcmp ( fn , prefix ) )"		4231240	0					
ANR	4231322	Condition	"! strcmp ( fn , prefix )"	250:6:8237:8256	4231240	0	True				
ANR	4231323	UnaryOperationExpression	"! strcmp ( fn , prefix )"		4231240	0					
ANR	4231324	UnaryOperator	!		4231240	0					
ANR	4231325	CallExpression	"strcmp ( fn , prefix )"		4231240	1					
ANR	4231326	Callee	strcmp		4231240	0					
ANR	4231327	Identifier	strcmp		4231240	0					
ANR	4231328	ArgumentList	fn		4231240	1					
ANR	4231329	Argument	fn		4231240	0					
ANR	4231330	Identifier	fn		4231240	0					
ANR	4231331	Argument	prefix		4231240	1					
ANR	4231332	Identifier	prefix		4231240	0					
ANR	4231333	CompoundStatement		14:28:354:354	4231240	1					
ANR	4231334	ContinueStatement	continue ;	251:3:8264:8272	4231240	0	True				
ANR	4231335	IfStatement	if ( mode == '*' )		4231240	1					
ANR	4231336	Condition	mode == '*'	253:6:8284:8294	4231240	0	True				
ANR	4231337	EqualityExpression	mode == '*'		4231240	0		==			
ANR	4231338	Identifier	mode		4231240	0					
ANR	4231339	PrimaryExpression	'*'		4231240	1					
ANR	4231340	CompoundStatement		17:19:392:392	4231240	1					
ANR	4231341	ExpressionStatement	"r_cons_printf ( ""agn %s %s\\n"" , fn , fn + prefix_len )"	254:3:8302:8352	4231240	0	True				
ANR	4231342	CallExpression	"r_cons_printf ( ""agn %s %s\\n"" , fn , fn + prefix_len )"		4231240	0					
ANR	4231343	Callee	r_cons_printf		4231240	0					
ANR	4231344	Identifier	r_cons_printf		4231240	0					
ANR	4231345	ArgumentList	"""agn %s %s\\n"""		4231240	1					
ANR	4231346	Argument	"""agn %s %s\\n"""		4231240	0					
ANR	4231347	PrimaryExpression	"""agn %s %s\\n"""		4231240	0					
ANR	4231348	Argument	fn		4231240	1					
ANR	4231349	Identifier	fn		4231240	0					
ANR	4231350	Argument	fn + prefix_len		4231240	2					
ANR	4231351	AdditiveExpression	fn + prefix_len		4231240	0		+			
ANR	4231352	Identifier	fn		4231240	0					
ANR	4231353	Identifier	prefix_len		4231240	1					
ANR	4231354	ExpressionStatement	"r_cons_printf ( ""age %s %s\\n"" , * prefix ? prefix : ""root"" , fn )"	255:3:8357:8415	4231240	1	True				
ANR	4231355	CallExpression	"r_cons_printf ( ""age %s %s\\n"" , * prefix ? prefix : ""root"" , fn )"		4231240	0					
ANR	4231356	Callee	r_cons_printf		4231240	0					
ANR	4231357	Identifier	r_cons_printf		4231240	0					
ANR	4231358	ArgumentList	"""age %s %s\\n"""		4231240	1					
ANR	4231359	Argument	"""age %s %s\\n"""		4231240	0					
ANR	4231360	PrimaryExpression	"""age %s %s\\n"""		4231240	0					
ANR	4231361	Argument	"* prefix ? prefix : ""root"""		4231240	1					
ANR	4231362	ConditionalExpression	"* prefix ? prefix : ""root"""		4231240	0					
ANR	4231363	Condition	* prefix		4231240	0					
ANR	4231364	UnaryOperationExpression	* prefix		4231240	0					
ANR	4231365	UnaryOperator	*		4231240	0					
ANR	4231366	Identifier	prefix		4231240	1					
ANR	4231367	Identifier	prefix		4231240	1					
ANR	4231368	PrimaryExpression	"""root"""		4231240	2					
ANR	4231369	Argument	fn		4231240	2					
ANR	4231370	Identifier	fn		4231240	0					
ANR	4231371	ElseStatement	else		4231240	0					
ANR	4231372	CompoundStatement		20:9:521:521	4231240	0					
ANR	4231373	ExpressionStatement	"r_cons_printf ( ""%s %s\\n"" , r_str_pad ( ' ' , prefix_len ) , fn + prefix_len )"	257:3:8431:8502	4231240	0	True				
ANR	4231374	CallExpression	"r_cons_printf ( ""%s %s\\n"" , r_str_pad ( ' ' , prefix_len ) , fn + prefix_len )"		4231240	0					
ANR	4231375	Callee	r_cons_printf		4231240	0					
ANR	4231376	Identifier	r_cons_printf		4231240	0					
ANR	4231377	ArgumentList	"""%s %s\\n"""		4231240	1					
ANR	4231378	Argument	"""%s %s\\n"""		4231240	0					
ANR	4231379	PrimaryExpression	"""%s %s\\n"""		4231240	0					
ANR	4231380	Argument	"r_str_pad ( ' ' , prefix_len )"		4231240	1					
ANR	4231381	CallExpression	"r_str_pad ( ' ' , prefix_len )"		4231240	0					
ANR	4231382	Callee	r_str_pad		4231240	0					
ANR	4231383	Identifier	r_str_pad		4231240	0					
ANR	4231384	ArgumentList	' '		4231240	1					
ANR	4231385	Argument	' '		4231240	0					
ANR	4231386	PrimaryExpression	' '		4231240	0					
ANR	4231387	Argument	prefix_len		4231240	1					
ANR	4231388	Identifier	prefix_len		4231240	0					
ANR	4231389	Argument	fn + prefix_len		4231240	2					
ANR	4231390	AdditiveExpression	fn + prefix_len		4231240	0		+			
ANR	4231391	Identifier	fn		4231240	0					
ANR	4231392	Identifier	prefix_len		4231240	1					
ANR	4231393	ExpressionStatement	"__printRecursive ( core , flags , fn , mode , depth + 1 )"	260:2:8546:8595	4231240	2	True				
ANR	4231394	CallExpression	"__printRecursive ( core , flags , fn , mode , depth + 1 )"		4231240	0					
ANR	4231395	Callee	__printRecursive		4231240	0					
ANR	4231396	Identifier	__printRecursive		4231240	0					
ANR	4231397	ArgumentList	core		4231240	1					
ANR	4231398	Argument	core		4231240	0					
ANR	4231399	Identifier	core		4231240	0					
ANR	4231400	Argument	flags		4231240	1					
ANR	4231401	Identifier	flags		4231240	0					
ANR	4231402	Argument	fn		4231240	2					
ANR	4231403	Identifier	fn		4231240	0					
ANR	4231404	Argument	mode		4231240	3					
ANR	4231405	Identifier	mode		4231240	0					
ANR	4231406	Argument	depth + 1		4231240	4					
ANR	4231407	AdditiveExpression	depth + 1		4231240	0		+			
ANR	4231408	Identifier	depth		4231240	0					
ANR	4231409	PrimaryExpression	1		4231240	1					
ANR	4231410	ExpressionStatement	r_list_free ( children )	262:1:8601:8623	4231240	15	True				
ANR	4231411	CallExpression	r_list_free ( children )		4231240	0					
ANR	4231412	Callee	r_list_free		4231240	0					
ANR	4231413	Identifier	r_list_free		4231240	0					
ANR	4231414	ArgumentList	children		4231240	1					
ANR	4231415	Argument	children		4231240	0					
ANR	4231416	Identifier	children		4231240	0					
ANR	4231417	ReturnType	static void		4231240	1					
ANR	4231418	Identifier	__printRecursive		4231240	2					
ANR	4231419	ParameterList	"RCore * core , RList * flags , const char * prefix , int mode , int depth"		4231240	3					
ANR	4231420	Parameter	RCore * core	237:30:7836:7846	4231240	0	True				
ANR	4231421	ParameterType	RCore *		4231240	0					
ANR	4231422	Identifier	core		4231240	1					
ANR	4231423	Parameter	RList * flags	237:43:7849:7860	4231240	1	True				
ANR	4231424	ParameterType	RList *		4231240	0					
ANR	4231425	Identifier	flags		4231240	1					
ANR	4231426	Parameter	const char * prefix	237:57:7863:7880	4231240	2	True				
ANR	4231427	ParameterType	const char *		4231240	0					
ANR	4231428	Identifier	prefix		4231240	1					
ANR	4231429	Parameter	int mode	237:77:7883:7890	4231240	3	True				
ANR	4231430	ParameterType	int		4231240	0					
ANR	4231431	Identifier	mode		4231240	1					
ANR	4231432	Parameter	int depth	237:87:7893:7901	4231240	4	True				
ANR	4231433	ParameterType	int		4231240	0					
ANR	4231434	Identifier	depth		4231240	1					
ANR	4231435	CFGEntryNode	ENTRY		4231240		True				
ANR	4231436	CFGExitNode	EXIT		4231240		True				
ANR	4231437	CFGErrorNode	ERROR		4231240		True				
ANR	4231438	Symbol	r_flag_get		4231240						
ANR	4231439	Symbol	strcmp		4231240						
ANR	4231440	Symbol	r_str_pad		4231240						
ANR	4231441	Symbol	* prefix		4231240						
ANR	4231442	Symbol	prefix		4231240						
ANR	4231443	Symbol	flags		4231240						
ANR	4231444	Symbol	fn		4231240						
ANR	4231445	Symbol	* core		4231240						
ANR	4231446	Symbol	iter		4231240						
ANR	4231447	Symbol	prefix_len		4231240						
ANR	4231448	Symbol	core -> flags		4231240						
ANR	4231449	Symbol	mode		4231240						
ANR	4231450	Symbol	core		4231240						
ANR	4231451	Symbol	strlen		4231240						
ANR	4231452	Symbol	depth		4231240						
ANR	4231453	Symbol	children		4231240						
ANR	4231454	Symbol	__childrenFlagsOf		4231240						
ANR	4231455	Function	__flag_graph	265:0:8628:8891							
ANR	4231456	FunctionDef	"__flag_graph (RCore * core , const char * input , int mode)"		4231455	0					
ANR	4231457	CompoundStatement		265:68:8696:8891	4231455	0					
ANR	4231458	IdentifierDeclStatement	RList * flags = r_list_newf ( NULL ) ;	266:1:8699:8732	4231455	0	True				
ANR	4231459	IdentifierDecl	* flags = r_list_newf ( NULL )		4231455	0					
ANR	4231460	IdentifierDeclType	RList *		4231455	0					
ANR	4231461	Identifier	flags		4231455	1					
ANR	4231462	AssignmentExpression	* flags = r_list_newf ( NULL )		4231455	2		=			
ANR	4231463	Identifier	flags		4231455	0					
ANR	4231464	CallExpression	r_list_newf ( NULL )		4231455	1					
ANR	4231465	Callee	r_list_newf		4231455	0					
ANR	4231466	Identifier	r_list_newf		4231455	0					
ANR	4231467	ArgumentList	NULL		4231455	1					
ANR	4231468	Argument	NULL		4231455	0					
ANR	4231469	Identifier	NULL		4231455	0					
ANR	4231470	ExpressionStatement	"r_flag_foreach_space ( core -> flags , r_flag_space_cur ( core -> flags ) , listFlag , flags )"	267:1:8735:8818	4231455	1	True				
ANR	4231471	CallExpression	"r_flag_foreach_space ( core -> flags , r_flag_space_cur ( core -> flags ) , listFlag , flags )"		4231455	0					
ANR	4231472	Callee	r_flag_foreach_space		4231455	0					
ANR	4231473	Identifier	r_flag_foreach_space		4231455	0					
ANR	4231474	ArgumentList	core -> flags		4231455	1					
ANR	4231475	Argument	core -> flags		4231455	0					
ANR	4231476	PtrMemberAccess	core -> flags		4231455	0					
ANR	4231477	Identifier	core		4231455	0					
ANR	4231478	Identifier	flags		4231455	1					
ANR	4231479	Argument	r_flag_space_cur ( core -> flags )		4231455	1					
ANR	4231480	CallExpression	r_flag_space_cur ( core -> flags )		4231455	0					
ANR	4231481	Callee	r_flag_space_cur		4231455	0					
ANR	4231482	Identifier	r_flag_space_cur		4231455	0					
ANR	4231483	ArgumentList	core -> flags		4231455	1					
ANR	4231484	Argument	core -> flags		4231455	0					
ANR	4231485	PtrMemberAccess	core -> flags		4231455	0					
ANR	4231486	Identifier	core		4231455	0					
ANR	4231487	Identifier	flags		4231455	1					
ANR	4231488	Argument	listFlag		4231455	2					
ANR	4231489	Identifier	listFlag		4231455	0					
ANR	4231490	Argument	flags		4231455	3					
ANR	4231491	Identifier	flags		4231455	0					
ANR	4231492	ExpressionStatement	"__printRecursive ( core , flags , input , mode , 0 )"	268:1:8821:8867	4231455	2	True				
ANR	4231493	CallExpression	"__printRecursive ( core , flags , input , mode , 0 )"		4231455	0					
ANR	4231494	Callee	__printRecursive		4231455	0					
ANR	4231495	Identifier	__printRecursive		4231455	0					
ANR	4231496	ArgumentList	core		4231455	1					
ANR	4231497	Argument	core		4231455	0					
ANR	4231498	Identifier	core		4231455	0					
ANR	4231499	Argument	flags		4231455	1					
ANR	4231500	Identifier	flags		4231455	0					
ANR	4231501	Argument	input		4231455	2					
ANR	4231502	Identifier	input		4231455	0					
ANR	4231503	Argument	mode		4231455	3					
ANR	4231504	Identifier	mode		4231455	0					
ANR	4231505	Argument	0		4231455	4					
ANR	4231506	PrimaryExpression	0		4231455	0					
ANR	4231507	ExpressionStatement	r_list_free ( flags )	269:1:8870:8889	4231455	3	True				
ANR	4231508	CallExpression	r_list_free ( flags )		4231455	0					
ANR	4231509	Callee	r_list_free		4231455	0					
ANR	4231510	Identifier	r_list_free		4231455	0					
ANR	4231511	ArgumentList	flags		4231455	1					
ANR	4231512	Argument	flags		4231455	0					
ANR	4231513	Identifier	flags		4231455	0					
ANR	4231514	ReturnType	static void		4231455	1					
ANR	4231515	Identifier	__flag_graph		4231455	2					
ANR	4231516	ParameterList	"RCore * core , const char * input , int mode"		4231455	3					
ANR	4231517	Parameter	RCore * core	265:26:8654:8664	4231455	0	True				
ANR	4231518	ParameterType	RCore *		4231455	0					
ANR	4231519	Identifier	core		4231455	1					
ANR	4231520	Parameter	const char * input	265:39:8667:8683	4231455	1	True				
ANR	4231521	ParameterType	const char *		4231455	0					
ANR	4231522	Identifier	input		4231455	1					
ANR	4231523	Parameter	int mode	265:58:8686:8693	4231455	2	True				
ANR	4231524	ParameterType	int		4231455	0					
ANR	4231525	Identifier	mode		4231455	1					
ANR	4231526	CFGEntryNode	ENTRY		4231455		True				
ANR	4231527	CFGExitNode	EXIT		4231455		True				
ANR	4231528	Symbol	mode		4231455						
ANR	4231529	Symbol	core		4231455						
ANR	4231530	Symbol	input		4231455						
ANR	4231531	Symbol	NULL		4231455						
ANR	4231532	Symbol	listFlag		4231455						
ANR	4231533	Symbol	r_list_newf		4231455						
ANR	4231534	Symbol	r_flag_space_cur		4231455						
ANR	4231535	Symbol	flags		4231455						
ANR	4231536	Symbol	* core		4231455						
ANR	4231537	Symbol	core -> flags		4231455						
ANR	4231538	Function	spaces_list	272:0:8894:9776							
ANR	4231539	FunctionDef	"spaces_list (RSpaces * sp , int mode)"		4231538	0					
ANR	4231540	CompoundStatement		272:47:8941:9776	4231538	0					
ANR	4231541	IdentifierDeclStatement	RSpaceIter it ;	273:1:8944:8957	4231538	0	True				
ANR	4231542	IdentifierDecl	it		4231538	0					
ANR	4231543	IdentifierDeclType	RSpaceIter		4231538	0					
ANR	4231544	Identifier	it		4231538	1					
ANR	4231545	IdentifierDeclStatement	RSpace * s ;	274:1:8960:8969	4231538	1	True				
ANR	4231546	IdentifierDecl	* s		4231538	0					
ANR	4231547	IdentifierDeclType	RSpace *		4231538	0					
ANR	4231548	Identifier	s		4231538	1					
ANR	4231549	IdentifierDeclStatement	const RSpace * cur = r_spaces_current ( sp ) ;	275:1:8972:9013	4231538	2	True				
ANR	4231550	IdentifierDecl	* cur = r_spaces_current ( sp )		4231538	0					
ANR	4231551	IdentifierDeclType	const RSpace *		4231538	0					
ANR	4231552	Identifier	cur		4231538	1					
ANR	4231553	AssignmentExpression	* cur = r_spaces_current ( sp )		4231538	2		=			
ANR	4231554	Identifier	cur		4231538	0					
ANR	4231555	CallExpression	r_spaces_current ( sp )		4231538	1					
ANR	4231556	Callee	r_spaces_current		4231538	0					
ANR	4231557	Identifier	r_spaces_current		4231538	0					
ANR	4231558	ArgumentList	sp		4231538	1					
ANR	4231559	Argument	sp		4231538	0					
ANR	4231560	Identifier	sp		4231538	0					
ANR	4231561	IdentifierDeclStatement	PJ * pj = NULL ;	276:1:9016:9029	4231538	3	True				
ANR	4231562	IdentifierDecl	* pj = NULL		4231538	0					
ANR	4231563	IdentifierDeclType	PJ *		4231538	0					
ANR	4231564	Identifier	pj		4231538	1					
ANR	4231565	AssignmentExpression	* pj = NULL		4231538	2		=			
ANR	4231566	Identifier	NULL		4231538	0					
ANR	4231567	Identifier	NULL		4231538	1					
ANR	4231568	IfStatement	if ( mode == 'j' )		4231538	4					
ANR	4231569	Condition	mode == 'j'	277:5:9036:9046	4231538	0	True				
ANR	4231570	EqualityExpression	mode == 'j'		4231538	0		==			
ANR	4231571	Identifier	mode		4231538	0					
ANR	4231572	PrimaryExpression	'j'		4231538	1					
ANR	4231573	CompoundStatement		6:18:107:107	4231538	1					
ANR	4231574	ExpressionStatement	pj = pj_new ( )	278:2:9053:9067	4231538	0	True				
ANR	4231575	AssignmentExpression	pj = pj_new ( )		4231538	0		=			
ANR	4231576	Identifier	pj		4231538	0					
ANR	4231577	CallExpression	pj_new ( )		4231538	1					
ANR	4231578	Callee	pj_new		4231538	0					
ANR	4231579	Identifier	pj_new		4231538	0					
ANR	4231580	ArgumentList			4231538	1					
ANR	4231581	ExpressionStatement	pj_a ( pj )	279:2:9071:9080	4231538	1	True				
ANR	4231582	CallExpression	pj_a ( pj )		4231538	0					
ANR	4231583	Callee	pj_a		4231538	0					
ANR	4231584	Identifier	pj_a		4231538	0					
ANR	4231585	ArgumentList	pj		4231538	1					
ANR	4231586	Argument	pj		4231538	0					
ANR	4231587	Identifier	pj		4231538	0					
ANR	4231588	Statement	r_spaces_foreach	281:1:9086:9101	4231538	5	True				
ANR	4231589	Statement	(	281:18:9103:9103	4231538	6	True				
ANR	4231590	Statement	sp	281:19:9104:9105	4231538	7	True				
ANR	4231591	Statement	","	281:21:9106:9106	4231538	8	True				
ANR	4231592	Statement	it	281:23:9108:9109	4231538	9	True				
ANR	4231593	Statement	","	281:25:9110:9110	4231538	10	True				
ANR	4231594	Statement	s	281:27:9112:9112	4231538	11	True				
ANR	4231595	Statement	)	281:28:9113:9113	4231538	12	True				
ANR	4231596	CompoundStatement		11:2:177:217	4231538	13					
ANR	4231597	IdentifierDeclStatement	"int count = r_spaces_count ( sp , s -> name ) ;"	282:2:9119:9159	4231538	0	True				
ANR	4231598	IdentifierDecl	"count = r_spaces_count ( sp , s -> name )"		4231538	0					
ANR	4231599	IdentifierDeclType	int		4231538	0					
ANR	4231600	Identifier	count		4231538	1					
ANR	4231601	AssignmentExpression	"count = r_spaces_count ( sp , s -> name )"		4231538	2		=			
ANR	4231602	Identifier	count		4231538	0					
ANR	4231603	CallExpression	"r_spaces_count ( sp , s -> name )"		4231538	1					
ANR	4231604	Callee	r_spaces_count		4231538	0					
ANR	4231605	Identifier	r_spaces_count		4231538	0					
ANR	4231606	ArgumentList	sp		4231538	1					
ANR	4231607	Argument	sp		4231538	0					
ANR	4231608	Identifier	sp		4231538	0					
ANR	4231609	Argument	s -> name		4231538	1					
ANR	4231610	PtrMemberAccess	s -> name		4231538	0					
ANR	4231611	Identifier	s		4231538	0					
ANR	4231612	Identifier	name		4231538	1					
ANR	4231613	IfStatement	if ( mode == 'j' )		4231538	1					
ANR	4231614	Condition	mode == 'j'	283:6:9167:9177	4231538	0	True				
ANR	4231615	EqualityExpression	mode == 'j'		4231538	0		==			
ANR	4231616	Identifier	mode		4231538	0					
ANR	4231617	PrimaryExpression	'j'		4231538	1					
ANR	4231618	CompoundStatement		12:19:238:238	4231538	1					
ANR	4231619	ExpressionStatement	pj_o ( pj )	284:3:9185:9194	4231538	0	True				
ANR	4231620	CallExpression	pj_o ( pj )		4231538	0					
ANR	4231621	Callee	pj_o		4231538	0					
ANR	4231622	Identifier	pj_o		4231538	0					
ANR	4231623	ArgumentList	pj		4231538	1					
ANR	4231624	Argument	pj		4231538	0					
ANR	4231625	Identifier	pj		4231538	0					
ANR	4231626	ExpressionStatement	"pj_ks ( pj , ""name"" , s -> name )"	285:3:9199:9226	4231538	1	True				
ANR	4231627	CallExpression	"pj_ks ( pj , ""name"" , s -> name )"		4231538	0					
ANR	4231628	Callee	pj_ks		4231538	0					
ANR	4231629	Identifier	pj_ks		4231538	0					
ANR	4231630	ArgumentList	pj		4231538	1					
ANR	4231631	Argument	pj		4231538	0					
ANR	4231632	Identifier	pj		4231538	0					
ANR	4231633	Argument	"""name"""		4231538	1					
ANR	4231634	PrimaryExpression	"""name"""		4231538	0					
ANR	4231635	Argument	s -> name		4231538	2					
ANR	4231636	PtrMemberAccess	s -> name		4231538	0					
ANR	4231637	Identifier	s		4231538	0					
ANR	4231638	Identifier	name		4231538	1					
ANR	4231639	ExpressionStatement	"pj_ki ( pj , ""count"" , count )"	286:3:9231:9257	4231538	2	True				
ANR	4231640	CallExpression	"pj_ki ( pj , ""count"" , count )"		4231538	0					
ANR	4231641	Callee	pj_ki		4231538	0					
ANR	4231642	Identifier	pj_ki		4231538	0					
ANR	4231643	ArgumentList	pj		4231538	1					
ANR	4231644	Argument	pj		4231538	0					
ANR	4231645	Identifier	pj		4231538	0					
ANR	4231646	Argument	"""count"""		4231538	1					
ANR	4231647	PrimaryExpression	"""count"""		4231538	0					
ANR	4231648	Argument	count		4231538	2					
ANR	4231649	Identifier	count		4231538	0					
ANR	4231650	ExpressionStatement	"pj_kb ( pj , ""selected"" , cur == s )"	287:3:9262:9294	4231538	3	True				
ANR	4231651	CallExpression	"pj_kb ( pj , ""selected"" , cur == s )"		4231538	0					
ANR	4231652	Callee	pj_kb		4231538	0					
ANR	4231653	Identifier	pj_kb		4231538	0					
ANR	4231654	ArgumentList	pj		4231538	1					
ANR	4231655	Argument	pj		4231538	0					
ANR	4231656	Identifier	pj		4231538	0					
ANR	4231657	Argument	"""selected"""		4231538	1					
ANR	4231658	PrimaryExpression	"""selected"""		4231538	0					
ANR	4231659	Argument	cur == s		4231538	2					
ANR	4231660	EqualityExpression	cur == s		4231538	0		==			
ANR	4231661	Identifier	cur		4231538	0					
ANR	4231662	Identifier	s		4231538	1					
ANR	4231663	ExpressionStatement	pj_end ( pj )	288:3:9299:9310	4231538	4	True				
ANR	4231664	CallExpression	pj_end ( pj )		4231538	0					
ANR	4231665	Callee	pj_end		4231538	0					
ANR	4231666	Identifier	pj_end		4231538	0					
ANR	4231667	ArgumentList	pj		4231538	1					
ANR	4231668	Argument	pj		4231538	0					
ANR	4231669	Identifier	pj		4231538	0					
ANR	4231670	ElseStatement	else		4231538	0					
ANR	4231671	IfStatement	if ( mode == 'q' )		4231538	0					
ANR	4231672	Condition	mode == 'q'	289:13:9325:9335	4231538	0	True				
ANR	4231673	EqualityExpression	mode == 'q'		4231538	0		==			
ANR	4231674	Identifier	mode		4231538	0					
ANR	4231675	PrimaryExpression	'q'		4231538	1					
ANR	4231676	CompoundStatement		18:26:396:396	4231538	1					
ANR	4231677	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , s -> name )"	290:3:9343:9374	4231538	0	True				
ANR	4231678	CallExpression	"r_cons_printf ( ""%s\\n"" , s -> name )"		4231538	0					
ANR	4231679	Callee	r_cons_printf		4231538	0					
ANR	4231680	Identifier	r_cons_printf		4231538	0					
ANR	4231681	ArgumentList	"""%s\\n"""		4231538	1					
ANR	4231682	Argument	"""%s\\n"""		4231538	0					
ANR	4231683	PrimaryExpression	"""%s\\n"""		4231538	0					
ANR	4231684	Argument	s -> name		4231538	1					
ANR	4231685	PtrMemberAccess	s -> name		4231538	0					
ANR	4231686	Identifier	s		4231538	0					
ANR	4231687	Identifier	name		4231538	1					
ANR	4231688	ElseStatement	else		4231538	0					
ANR	4231689	IfStatement	if ( mode == '*' )		4231538	0					
ANR	4231690	Condition	mode == '*'	291:13:9389:9399	4231538	0	True				
ANR	4231691	EqualityExpression	mode == '*'		4231538	0		==			
ANR	4231692	Identifier	mode		4231538	0					
ANR	4231693	PrimaryExpression	'*'		4231538	1					
ANR	4231694	CompoundStatement		20:26:460:460	4231538	1					
ANR	4231695	ExpressionStatement	"r_cons_printf ( ""%s %s\\n"" , sp -> name , s -> name )"	292:3:9407:9451	4231538	0	True				
ANR	4231696	CallExpression	"r_cons_printf ( ""%s %s\\n"" , sp -> name , s -> name )"		4231538	0					
ANR	4231697	Callee	r_cons_printf		4231538	0					
ANR	4231698	Identifier	r_cons_printf		4231538	0					
ANR	4231699	ArgumentList	"""%s %s\\n"""		4231538	1					
ANR	4231700	Argument	"""%s %s\\n"""		4231538	0					
ANR	4231701	PrimaryExpression	"""%s %s\\n"""		4231538	0					
ANR	4231702	Argument	sp -> name		4231538	1					
ANR	4231703	PtrMemberAccess	sp -> name		4231538	0					
ANR	4231704	Identifier	sp		4231538	0					
ANR	4231705	Identifier	name		4231538	1					
ANR	4231706	Argument	s -> name		4231538	2					
ANR	4231707	PtrMemberAccess	s -> name		4231538	0					
ANR	4231708	Identifier	s		4231538	0					
ANR	4231709	Identifier	name		4231538	1					
ANR	4231710	ElseStatement	else		4231538	0					
ANR	4231711	CompoundStatement		22:9:520:520	4231538	0					
ANR	4231712	ExpressionStatement	"r_cons_printf ( ""%5d %c %s\\n"" , count , ( ! cur || cur == s ) ? '*' : '.' , s -> name )"	294:3:9467:9546	4231538	0	True				
ANR	4231713	CallExpression	"r_cons_printf ( ""%5d %c %s\\n"" , count , ( ! cur || cur == s ) ? '*' : '.' , s -> name )"		4231538	0					
ANR	4231714	Callee	r_cons_printf		4231538	0					
ANR	4231715	Identifier	r_cons_printf		4231538	0					
ANR	4231716	ArgumentList	"""%5d %c %s\\n"""		4231538	1					
ANR	4231717	Argument	"""%5d %c %s\\n"""		4231538	0					
ANR	4231718	PrimaryExpression	"""%5d %c %s\\n"""		4231538	0					
ANR	4231719	Argument	count		4231538	1					
ANR	4231720	Identifier	count		4231538	0					
ANR	4231721	Argument	( ! cur || cur == s ) ? '*' : '.'		4231538	2					
ANR	4231722	ConditionalExpression	( ! cur || cur == s ) ? '*' : '.'		4231538	0					
ANR	4231723	Condition	! cur || cur == s		4231538	0					
ANR	4231724	OrExpression	! cur || cur == s		4231538	0		||			
ANR	4231725	UnaryOperationExpression	! cur		4231538	0					
ANR	4231726	UnaryOperator	!		4231538	0					
ANR	4231727	Identifier	cur		4231538	1					
ANR	4231728	EqualityExpression	cur == s		4231538	1		==			
ANR	4231729	Identifier	cur		4231538	0					
ANR	4231730	Identifier	s		4231538	1					
ANR	4231731	PrimaryExpression	'*'		4231538	1					
ANR	4231732	PrimaryExpression	'.'		4231538	2					
ANR	4231733	Argument	s -> name		4231538	3					
ANR	4231734	PtrMemberAccess	s -> name		4231538	0					
ANR	4231735	Identifier	s		4231538	0					
ANR	4231736	Identifier	name		4231538	1					
ANR	4231737	IfStatement	if ( mode == '*' && r_spaces_current ( sp ) )		4231538	14					
ANR	4231738	Condition	mode == '*' && r_spaces_current ( sp )	298:5:9560:9595	4231538	0	True				
ANR	4231739	AndExpression	mode == '*' && r_spaces_current ( sp )		4231538	0		&&			
ANR	4231740	EqualityExpression	mode == '*'		4231538	0		==			
ANR	4231741	Identifier	mode		4231538	0					
ANR	4231742	PrimaryExpression	'*'		4231538	1					
ANR	4231743	CallExpression	r_spaces_current ( sp )		4231538	1					
ANR	4231744	Callee	r_spaces_current		4231538	0					
ANR	4231745	Identifier	r_spaces_current		4231538	0					
ANR	4231746	ArgumentList	sp		4231538	1					
ANR	4231747	Argument	sp		4231538	0					
ANR	4231748	Identifier	sp		4231538	0					
ANR	4231749	CompoundStatement		27:43:656:656	4231538	1					
ANR	4231750	ExpressionStatement	"r_cons_printf ( ""%s %s # current\\n"" , sp -> name , r_spaces_current_name ( sp ) )"	299:2:9602:9675	4231538	0	True				
ANR	4231751	CallExpression	"r_cons_printf ( ""%s %s # current\\n"" , sp -> name , r_spaces_current_name ( sp ) )"		4231538	0					
ANR	4231752	Callee	r_cons_printf		4231538	0					
ANR	4231753	Identifier	r_cons_printf		4231538	0					
ANR	4231754	ArgumentList	"""%s %s # current\\n"""		4231538	1					
ANR	4231755	Argument	"""%s %s # current\\n"""		4231538	0					
ANR	4231756	PrimaryExpression	"""%s %s # current\\n"""		4231538	0					
ANR	4231757	Argument	sp -> name		4231538	1					
ANR	4231758	PtrMemberAccess	sp -> name		4231538	0					
ANR	4231759	Identifier	sp		4231538	0					
ANR	4231760	Identifier	name		4231538	1					
ANR	4231761	Argument	r_spaces_current_name ( sp )		4231538	2					
ANR	4231762	CallExpression	r_spaces_current_name ( sp )		4231538	0					
ANR	4231763	Callee	r_spaces_current_name		4231538	0					
ANR	4231764	Identifier	r_spaces_current_name		4231538	0					
ANR	4231765	ArgumentList	sp		4231538	1					
ANR	4231766	Argument	sp		4231538	0					
ANR	4231767	Identifier	sp		4231538	0					
ANR	4231768	IfStatement	if ( mode == 'j' )		4231538	15					
ANR	4231769	Condition	mode == 'j'	301:5:9685:9695	4231538	0	True				
ANR	4231770	EqualityExpression	mode == 'j'		4231538	0		==			
ANR	4231771	Identifier	mode		4231538	0					
ANR	4231772	PrimaryExpression	'j'		4231538	1					
ANR	4231773	CompoundStatement		30:18:756:756	4231538	1					
ANR	4231774	ExpressionStatement	pj_end ( pj )	302:2:9702:9713	4231538	0	True				
ANR	4231775	CallExpression	pj_end ( pj )		4231538	0					
ANR	4231776	Callee	pj_end		4231538	0					
ANR	4231777	Identifier	pj_end		4231538	0					
ANR	4231778	ArgumentList	pj		4231538	1					
ANR	4231779	Argument	pj		4231538	0					
ANR	4231780	Identifier	pj		4231538	0					
ANR	4231781	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"	303:2:9717:9755	4231538	1	True				
ANR	4231782	CallExpression	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"		4231538	0					
ANR	4231783	Callee	r_cons_printf		4231538	0					
ANR	4231784	Identifier	r_cons_printf		4231538	0					
ANR	4231785	ArgumentList	"""%s\\n"""		4231538	1					
ANR	4231786	Argument	"""%s\\n"""		4231538	0					
ANR	4231787	PrimaryExpression	"""%s\\n"""		4231538	0					
ANR	4231788	Argument	pj_string ( pj )		4231538	1					
ANR	4231789	CallExpression	pj_string ( pj )		4231538	0					
ANR	4231790	Callee	pj_string		4231538	0					
ANR	4231791	Identifier	pj_string		4231538	0					
ANR	4231792	ArgumentList	pj		4231538	1					
ANR	4231793	Argument	pj		4231538	0					
ANR	4231794	Identifier	pj		4231538	0					
ANR	4231795	ExpressionStatement	pj_free ( pj )	304:2:9759:9771	4231538	2	True				
ANR	4231796	CallExpression	pj_free ( pj )		4231538	0					
ANR	4231797	Callee	pj_free		4231538	0					
ANR	4231798	Identifier	pj_free		4231538	0					
ANR	4231799	ArgumentList	pj		4231538	1					
ANR	4231800	Argument	pj		4231538	0					
ANR	4231801	Identifier	pj		4231538	0					
ANR	4231802	ReturnType	static void		4231538	1					
ANR	4231803	Identifier	spaces_list		4231538	2					
ANR	4231804	ParameterList	"RSpaces * sp , int mode"		4231538	3					
ANR	4231805	Parameter	RSpaces * sp	272:24:8918:8928	4231538	0	True				
ANR	4231806	ParameterType	RSpaces *		4231538	0					
ANR	4231807	Identifier	sp		4231538	1					
ANR	4231808	Parameter	int mode	272:37:8931:8938	4231538	1	True				
ANR	4231809	ParameterType	int		4231538	0					
ANR	4231810	Identifier	mode		4231538	1					
ANR	4231811	CFGEntryNode	ENTRY		4231538		True				
ANR	4231812	CFGExitNode	EXIT		4231538		True				
ANR	4231813	Symbol	* sp		4231538						
ANR	4231814	Symbol	cur		4231538						
ANR	4231815	Symbol	NULL		4231538						
ANR	4231816	Symbol	pj_string		4231538						
ANR	4231817	Symbol	count		4231538						
ANR	4231818	Symbol	it		4231538						
ANR	4231819	Symbol	mode		4231538						
ANR	4231820	Symbol	s		4231538						
ANR	4231821	Symbol	s -> name		4231538						
ANR	4231822	Symbol	sp -> name		4231538						
ANR	4231823	Symbol	pj		4231538						
ANR	4231824	Symbol	pj_new		4231538						
ANR	4231825	Symbol	r_spaces_count		4231538						
ANR	4231826	Symbol	sp		4231538						
ANR	4231827	Symbol	r_spaces_current		4231538						
ANR	4231828	Symbol	* s		4231538						
ANR	4231829	Symbol	r_spaces_current_name		4231538						
ANR	4231830	Function	cmd_fz	308:0:9779:11259							
ANR	4231831	FunctionDef	"cmd_fz (RCore * core , const char * input)"		4231830	0					
ANR	4231832	CompoundStatement		308:51:9830:11259	4231830	0					
ANR	4231833	SwitchStatement	switch ( * input )		4231830	0					
ANR	4231834	Condition	* input	309:9:9841:9846	4231830	0	True				
ANR	4231835	UnaryOperationExpression	* input		4231830	0					
ANR	4231836	UnaryOperator	*		4231830	0					
ANR	4231837	Identifier	input		4231830	1					
ANR	4231838	CompoundStatement		2:17:18:18	4231830	1					
ANR	4231839	Label	case '?' :	310:1:9852:9860	4231830	0	True				
ANR	4231840	ExpressionStatement	"r_core_cmd_help ( core , help_msg_fz )"	311:2:9873:9908	4231830	1	True				
ANR	4231841	CallExpression	"r_core_cmd_help ( core , help_msg_fz )"		4231830	0					
ANR	4231842	Callee	r_core_cmd_help		4231830	0					
ANR	4231843	Identifier	r_core_cmd_help		4231830	0					
ANR	4231844	ArgumentList	core		4231830	1					
ANR	4231845	Argument	core		4231830	0					
ANR	4231846	Identifier	core		4231830	0					
ANR	4231847	Argument	help_msg_fz		4231830	1					
ANR	4231848	Identifier	help_msg_fz		4231830	0					
ANR	4231849	BreakStatement	break ;	312:2:9912:9917	4231830	2	True				
ANR	4231850	Label	case '.' :	313:1:9920:9928	4231830	3	True				
ANR	4231851	CompoundStatement		8:3:115:146	4231830	4					
ANR	4231852	IdentifierDeclStatement	"const char * a = NULL , * b = NULL ;"	315:3:9946:9977	4231830	0	True				
ANR	4231853	IdentifierDecl	* a = NULL		4231830	0					
ANR	4231854	IdentifierDeclType	const char *		4231830	0					
ANR	4231855	Identifier	a		4231830	1					
ANR	4231856	AssignmentExpression	* a = NULL		4231830	2		=			
ANR	4231857	Identifier	NULL		4231830	0					
ANR	4231858	Identifier	NULL		4231830	1					
ANR	4231859	IdentifierDecl	* b = NULL		4231830	1					
ANR	4231860	IdentifierDeclType	const char *		4231830	0					
ANR	4231861	Identifier	b		4231830	1					
ANR	4231862	AssignmentExpression	* b = NULL		4231830	2		=			
ANR	4231863	Identifier	NULL		4231830	0					
ANR	4231864	Identifier	NULL		4231830	1					
ANR	4231865	ExpressionStatement	"r_flag_zone_around ( core -> flags , core -> offset , & a , & b )"	316:3:9982:10036	4231830	1	True				
ANR	4231866	CallExpression	"r_flag_zone_around ( core -> flags , core -> offset , & a , & b )"		4231830	0					
ANR	4231867	Callee	r_flag_zone_around		4231830	0					
ANR	4231868	Identifier	r_flag_zone_around		4231830	0					
ANR	4231869	ArgumentList	core -> flags		4231830	1					
ANR	4231870	Argument	core -> flags		4231830	0					
ANR	4231871	PtrMemberAccess	core -> flags		4231830	0					
ANR	4231872	Identifier	core		4231830	0					
ANR	4231873	Identifier	flags		4231830	1					
ANR	4231874	Argument	core -> offset		4231830	1					
ANR	4231875	PtrMemberAccess	core -> offset		4231830	0					
ANR	4231876	Identifier	core		4231830	0					
ANR	4231877	Identifier	offset		4231830	1					
ANR	4231878	Argument	& a		4231830	2					
ANR	4231879	UnaryOperationExpression	& a		4231830	0					
ANR	4231880	UnaryOperator	&		4231830	0					
ANR	4231881	Identifier	a		4231830	1					
ANR	4231882	Argument	& b		4231830	3					
ANR	4231883	UnaryOperationExpression	& b		4231830	0					
ANR	4231884	UnaryOperator	&		4231830	0					
ANR	4231885	Identifier	b		4231830	1					
ANR	4231886	ExpressionStatement	"r_cons_printf ( ""%s %s\\n"" , a ? a : ""~"" , b ? b : ""~"" )"	317:3:10041:10084	4231830	2	True				
ANR	4231887	CallExpression	"r_cons_printf ( ""%s %s\\n"" , a ? a : ""~"" , b ? b : ""~"" )"		4231830	0					
ANR	4231888	Callee	r_cons_printf		4231830	0					
ANR	4231889	Identifier	r_cons_printf		4231830	0					
ANR	4231890	ArgumentList	"""%s %s\\n"""		4231830	1					
ANR	4231891	Argument	"""%s %s\\n"""		4231830	0					
ANR	4231892	PrimaryExpression	"""%s %s\\n"""		4231830	0					
ANR	4231893	Argument	"a ? a : ""~"""		4231830	1					
ANR	4231894	ConditionalExpression	"a ? a : ""~"""		4231830	0					
ANR	4231895	Condition	a		4231830	0					
ANR	4231896	Identifier	a		4231830	0					
ANR	4231897	Identifier	a		4231830	1					
ANR	4231898	PrimaryExpression	"""~"""		4231830	2					
ANR	4231899	Argument	"b ? b : ""~"""		4231830	2					
ANR	4231900	ConditionalExpression	"b ? b : ""~"""		4231830	0					
ANR	4231901	Condition	b		4231830	0					
ANR	4231902	Identifier	b		4231830	0					
ANR	4231903	Identifier	b		4231830	1					
ANR	4231904	PrimaryExpression	"""~"""		4231830	2					
ANR	4231905	BreakStatement	break ;	319:2:10092:10097	4231830	5	True				
ANR	4231906	Label	case ':' :	320:1:10100:10108	4231830	6	True				
ANR	4231907	CompoundStatement		24:3:543:562	4231830	7					
ANR	4231908	IdentifierDeclStatement	"const char * a , * b ;"	322:3:10126:10143	4231830	0	True				
ANR	4231909	IdentifierDecl	* a		4231830	0					
ANR	4231910	IdentifierDeclType	const char *		4231830	0					
ANR	4231911	Identifier	a		4231830	1					
ANR	4231912	IdentifierDecl	* b		4231830	1					
ANR	4231913	IdentifierDeclType	const char *		4231830	0					
ANR	4231914	Identifier	b		4231830	1					
ANR	4231915	IdentifierDeclStatement	int a_len = 0 ;	323:3:10148:10161	4231830	1	True				
ANR	4231916	IdentifierDecl	a_len = 0		4231830	0					
ANR	4231917	IdentifierDeclType	int		4231830	0					
ANR	4231918	Identifier	a_len		4231830	1					
ANR	4231919	AssignmentExpression	a_len = 0		4231830	2		=			
ANR	4231920	Identifier	a_len		4231830	0					
ANR	4231921	PrimaryExpression	0		4231830	1					
ANR	4231922	IdentifierDeclStatement	int w = r_cons_get_size ( NULL ) ;	324:3:10166:10196	4231830	2	True				
ANR	4231923	IdentifierDecl	w = r_cons_get_size ( NULL )		4231830	0					
ANR	4231924	IdentifierDeclType	int		4231830	0					
ANR	4231925	Identifier	w		4231830	1					
ANR	4231926	AssignmentExpression	w = r_cons_get_size ( NULL )		4231830	2		=			
ANR	4231927	Identifier	w		4231830	0					
ANR	4231928	CallExpression	r_cons_get_size ( NULL )		4231830	1					
ANR	4231929	Callee	r_cons_get_size		4231830	0					
ANR	4231930	Identifier	r_cons_get_size		4231830	0					
ANR	4231931	ArgumentList	NULL		4231830	1					
ANR	4231932	Argument	NULL		4231830	0					
ANR	4231933	Identifier	NULL		4231830	0					
ANR	4231934	ExpressionStatement	"r_flag_zone_around ( core -> flags , core -> offset , & a , & b )"	325:3:10201:10255	4231830	3	True				
ANR	4231935	CallExpression	"r_flag_zone_around ( core -> flags , core -> offset , & a , & b )"		4231830	0					
ANR	4231936	Callee	r_flag_zone_around		4231830	0					
ANR	4231937	Identifier	r_flag_zone_around		4231830	0					
ANR	4231938	ArgumentList	core -> flags		4231830	1					
ANR	4231939	Argument	core -> flags		4231830	0					
ANR	4231940	PtrMemberAccess	core -> flags		4231830	0					
ANR	4231941	Identifier	core		4231830	0					
ANR	4231942	Identifier	flags		4231830	1					
ANR	4231943	Argument	core -> offset		4231830	1					
ANR	4231944	PtrMemberAccess	core -> offset		4231830	0					
ANR	4231945	Identifier	core		4231830	0					
ANR	4231946	Identifier	offset		4231830	1					
ANR	4231947	Argument	& a		4231830	2					
ANR	4231948	UnaryOperationExpression	& a		4231830	0					
ANR	4231949	UnaryOperator	&		4231830	0					
ANR	4231950	Identifier	a		4231830	1					
ANR	4231951	Argument	& b		4231830	3					
ANR	4231952	UnaryOperationExpression	& b		4231830	0					
ANR	4231953	UnaryOperator	&		4231830	0					
ANR	4231954	Identifier	b		4231830	1					
ANR	4231955	IfStatement	if ( a )		4231830	4					
ANR	4231956	Condition	a	326:7:10264:10264	4231830	0	True				
ANR	4231957	Identifier	a		4231830	0					
ANR	4231958	CompoundStatement		19:10:436:436	4231830	1					
ANR	4231959	ExpressionStatement	"r_cons_printf ( ""[<< %s]"" , a )"	327:4:10273:10301	4231830	0	True				
ANR	4231960	CallExpression	"r_cons_printf ( ""[<< %s]"" , a )"		4231830	0					
ANR	4231961	Callee	r_cons_printf		4231830	0					
ANR	4231962	Identifier	r_cons_printf		4231830	0					
ANR	4231963	ArgumentList	"""[<< %s]"""		4231830	1					
ANR	4231964	Argument	"""[<< %s]"""		4231830	0					
ANR	4231965	PrimaryExpression	"""[<< %s]"""		4231830	0					
ANR	4231966	Argument	a		4231830	1					
ANR	4231967	Identifier	a		4231830	0					
ANR	4231968	ExpressionStatement	a_len = strlen ( a ) + 4	328:4:10307:10329	4231830	1	True				
ANR	4231969	AssignmentExpression	a_len = strlen ( a ) + 4		4231830	0		=			
ANR	4231970	Identifier	a_len		4231830	0					
ANR	4231971	AdditiveExpression	strlen ( a ) + 4		4231830	1		+			
ANR	4231972	CallExpression	strlen ( a )		4231830	0					
ANR	4231973	Callee	strlen		4231830	0					
ANR	4231974	Identifier	strlen		4231830	0					
ANR	4231975	ArgumentList	a		4231830	1					
ANR	4231976	Argument	a		4231830	0					
ANR	4231977	Identifier	a		4231830	0					
ANR	4231978	PrimaryExpression	4		4231830	1					
ANR	4231979	IdentifierDeclStatement	int padsize = ( w / 2 ) - a_len ;	330:3:10339:10369	4231830	5	True				
ANR	4231980	IdentifierDecl	padsize = ( w / 2 ) - a_len		4231830	0					
ANR	4231981	IdentifierDeclType	int		4231830	0					
ANR	4231982	Identifier	padsize		4231830	1					
ANR	4231983	AssignmentExpression	padsize = ( w / 2 ) - a_len		4231830	2		=			
ANR	4231984	Identifier	padsize		4231830	0					
ANR	4231985	AdditiveExpression	( w / 2 ) - a_len		4231830	1		-			
ANR	4231986	MultiplicativeExpression	w / 2		4231830	0		/			
ANR	4231987	Identifier	w		4231830	0					
ANR	4231988	PrimaryExpression	2		4231830	1					
ANR	4231989	Identifier	a_len		4231830	1					
ANR	4231990	IdentifierDeclStatement	int title_size = 12 ;	331:3:10374:10393	4231830	6	True				
ANR	4231991	IdentifierDecl	title_size = 12		4231830	0					
ANR	4231992	IdentifierDeclType	int		4231830	0					
ANR	4231993	Identifier	title_size		4231830	1					
ANR	4231994	AssignmentExpression	title_size = 12		4231830	2		=			
ANR	4231995	Identifier	title_size		4231830	0					
ANR	4231996	PrimaryExpression	12		4231830	1					
ANR	4231997	IfStatement	if ( a || b )		4231830	7					
ANR	4231998	Condition	a || b	332:7:10402:10407	4231830	0	True				
ANR	4231999	OrExpression	a || b		4231830	0		||			
ANR	4232000	Identifier	a		4231830	0					
ANR	4232001	Identifier	b		4231830	1					
ANR	4232002	CompoundStatement		29:4:720:766	4231830	1					
ANR	4232003	Statement	char	333:4:10416:10419	4231830	0	True				
ANR	4232004	Statement	*	333:9:10421:10421	4231830	1	True				
ANR	4232005	Statement	title	333:10:10422:10426	4231830	2	True				
ANR	4232006	Statement	=	333:16:10428:10428	4231830	3	True				
ANR	4232007	Statement	r_str_newf	333:18:10430:10439	4231830	4	True				
ANR	4232008	Statement	(	333:29:10441:10441	4231830	5	True				
ANR	4232009	Statement	"""[ 0x%08"""	333:30:10442:10450	4231830	6	True				
ANR	4232010	Statement	PFMT64x	333:39:10451:10457	4231830	7	True				
ANR	4232011	Statement	""" ]"""	333:46:10458:10461	4231830	8	True				
ANR	4232012	Statement	","	333:50:10462:10462	4231830	9	True				
ANR	4232013	Statement	core	333:52:10464:10467	4231830	10	True				
ANR	4232014	Statement	->	333:56:10468:10469	4231830	11	True				
ANR	4232015	Statement	offset	333:58:10470:10475	4231830	12	True				
ANR	4232016	Statement	)	333:64:10476:10476	4231830	13	True				
ANR	4232017	ExpressionStatement		333:65:10477:10477	4231830	14	True				
ANR	4232018	ExpressionStatement	title_size = strlen ( title )	334:4:10483:10510	4231830	15	True				
ANR	4232019	AssignmentExpression	title_size = strlen ( title )		4231830	0		=			
ANR	4232020	Identifier	title_size		4231830	0					
ANR	4232021	CallExpression	strlen ( title )		4231830	1					
ANR	4232022	Callee	strlen		4231830	0					
ANR	4232023	Identifier	strlen		4231830	0					
ANR	4232024	ArgumentList	title		4231830	1					
ANR	4232025	Argument	title		4231830	0					
ANR	4232026	Identifier	title		4231830	0					
ANR	4232027	ExpressionStatement	padsize -= strlen ( title ) / 2	335:4:10516:10545	4231830	16	True				
ANR	4232028	AssignmentExpression	padsize -= strlen ( title ) / 2		4231830	0		-=			
ANR	4232029	Identifier	padsize		4231830	0					
ANR	4232030	MultiplicativeExpression	strlen ( title ) / 2		4231830	1		/			
ANR	4232031	CallExpression	strlen ( title )		4231830	0					
ANR	4232032	Callee	strlen		4231830	0					
ANR	4232033	Identifier	strlen		4231830	0					
ANR	4232034	ArgumentList	title		4231830	1					
ANR	4232035	Argument	title		4231830	0					
ANR	4232036	Identifier	title		4231830	0					
ANR	4232037	PrimaryExpression	2		4231830	1					
ANR	4232038	IdentifierDeclStatement	"const char * halfpad = r_str_pad ( ' ' , padsize ) ;"	336:4:10551:10597	4231830	17	True				
ANR	4232039	IdentifierDecl	"* halfpad = r_str_pad ( ' ' , padsize )"		4231830	0					
ANR	4232040	IdentifierDeclType	const char *		4231830	0					
ANR	4232041	Identifier	halfpad		4231830	1					
ANR	4232042	AssignmentExpression	"* halfpad = r_str_pad ( ' ' , padsize )"		4231830	2		=			
ANR	4232043	Identifier	halfpad		4231830	0					
ANR	4232044	CallExpression	"r_str_pad ( ' ' , padsize )"		4231830	1					
ANR	4232045	Callee	r_str_pad		4231830	0					
ANR	4232046	Identifier	r_str_pad		4231830	0					
ANR	4232047	ArgumentList	' '		4231830	1					
ANR	4232048	Argument	' '		4231830	0					
ANR	4232049	PrimaryExpression	' '		4231830	0					
ANR	4232050	Argument	padsize		4231830	1					
ANR	4232051	Identifier	padsize		4231830	0					
ANR	4232052	ExpressionStatement	"r_cons_printf ( ""%s%s"" , halfpad , title )"	337:4:10603:10641	4231830	18	True				
ANR	4232053	CallExpression	"r_cons_printf ( ""%s%s"" , halfpad , title )"		4231830	0					
ANR	4232054	Callee	r_cons_printf		4231830	0					
ANR	4232055	Identifier	r_cons_printf		4231830	0					
ANR	4232056	ArgumentList	"""%s%s"""		4231830	1					
ANR	4232057	Argument	"""%s%s"""		4231830	0					
ANR	4232058	PrimaryExpression	"""%s%s"""		4231830	0					
ANR	4232059	Argument	halfpad		4231830	1					
ANR	4232060	Identifier	halfpad		4231830	0					
ANR	4232061	Argument	title		4231830	2					
ANR	4232062	Identifier	title		4231830	0					
ANR	4232063	ExpressionStatement	free ( title )	338:4:10647:10659	4231830	19	True				
ANR	4232064	CallExpression	free ( title )		4231830	0					
ANR	4232065	Callee	free		4231830	0					
ANR	4232066	Identifier	free		4231830	0					
ANR	4232067	ArgumentList	title		4231830	1					
ANR	4232068	Argument	title		4231830	0					
ANR	4232069	Identifier	title		4231830	0					
ANR	4232070	IfStatement	if ( b )		4231830	8					
ANR	4232071	Condition	b	340:7:10673:10673	4231830	0	True				
ANR	4232072	Identifier	b		4231830	0					
ANR	4232073	CompoundStatement		35:4:904:967	4231830	1					
ANR	4232074	ExpressionStatement	padsize = ( w / 2 ) - title_size - strlen ( b ) - 4	341:4:10682:10729	4231830	0	True				
ANR	4232075	AssignmentExpression	padsize = ( w / 2 ) - title_size - strlen ( b ) - 4		4231830	0		=			
ANR	4232076	Identifier	padsize		4231830	0					
ANR	4232077	AdditiveExpression	( w / 2 ) - title_size - strlen ( b ) - 4		4231830	1		-			
ANR	4232078	MultiplicativeExpression	w / 2		4231830	0		/			
ANR	4232079	Identifier	w		4231830	0					
ANR	4232080	PrimaryExpression	2		4231830	1					
ANR	4232081	AdditiveExpression	title_size - strlen ( b ) - 4		4231830	1		-			
ANR	4232082	Identifier	title_size		4231830	0					
ANR	4232083	AdditiveExpression	strlen ( b ) - 4		4231830	1		-			
ANR	4232084	CallExpression	strlen ( b )		4231830	0					
ANR	4232085	Callee	strlen		4231830	0					
ANR	4232086	Identifier	strlen		4231830	0					
ANR	4232087	ArgumentList	b		4231830	1					
ANR	4232088	Argument	b		4231830	0					
ANR	4232089	Identifier	b		4231830	0					
ANR	4232090	PrimaryExpression	4		4231830	1					
ANR	4232091	IdentifierDeclStatement	"const char * halfpad = padsize > 1 ? r_str_pad ( ' ' , padsize ) : """" ;"	342:4:10735:10798	4231830	1	True				
ANR	4232092	IdentifierDecl	"* halfpad = padsize > 1 ? r_str_pad ( ' ' , padsize ) : """""		4231830	0					
ANR	4232093	IdentifierDeclType	const char *		4231830	0					
ANR	4232094	Identifier	halfpad		4231830	1					
ANR	4232095	AssignmentExpression	"* halfpad = padsize > 1 ? r_str_pad ( ' ' , padsize ) : """""		4231830	2		=			
ANR	4232096	Identifier	halfpad		4231830	0					
ANR	4232097	ConditionalExpression	"padsize > 1 ? r_str_pad ( ' ' , padsize ) : """""		4231830	1					
ANR	4232098	Condition	padsize > 1		4231830	0					
ANR	4232099	RelationalExpression	padsize > 1		4231830	0		>			
ANR	4232100	Identifier	padsize		4231830	0					
ANR	4232101	PrimaryExpression	1		4231830	1					
ANR	4232102	CallExpression	"r_str_pad ( ' ' , padsize )"		4231830	1					
ANR	4232103	Callee	r_str_pad		4231830	0					
ANR	4232104	Identifier	r_str_pad		4231830	0					
ANR	4232105	ArgumentList	' '		4231830	1					
ANR	4232106	Argument	' '		4231830	0					
ANR	4232107	PrimaryExpression	' '		4231830	0					
ANR	4232108	Argument	padsize		4231830	1					
ANR	4232109	Identifier	padsize		4231830	0					
ANR	4232110	PrimaryExpression	""""""		4231830	2					
ANR	4232111	ExpressionStatement	"r_cons_printf ( ""%s[%s >>]"" , halfpad , b )"	343:4:10804:10843	4231830	2	True				
ANR	4232112	CallExpression	"r_cons_printf ( ""%s[%s >>]"" , halfpad , b )"		4231830	0					
ANR	4232113	Callee	r_cons_printf		4231830	0					
ANR	4232114	Identifier	r_cons_printf		4231830	0					
ANR	4232115	ArgumentList	"""%s[%s >>]"""		4231830	1					
ANR	4232116	Argument	"""%s[%s >>]"""		4231830	0					
ANR	4232117	PrimaryExpression	"""%s[%s >>]"""		4231830	0					
ANR	4232118	Argument	halfpad		4231830	1					
ANR	4232119	Identifier	halfpad		4231830	0					
ANR	4232120	Argument	b		4231830	2					
ANR	4232121	Identifier	b		4231830	0					
ANR	4232122	IfStatement	if ( a || b )		4231830	9					
ANR	4232123	Condition	a || b	345:7:10857:10862	4231830	0	True				
ANR	4232124	OrExpression	a || b		4231830	0		||			
ANR	4232125	Identifier	a		4231830	0					
ANR	4232126	Identifier	b		4231830	1					
ANR	4232127	CompoundStatement		38:15:1034:1034	4231830	1					
ANR	4232128	ExpressionStatement	r_cons_newline ( )	346:4:10871:10887	4231830	0	True				
ANR	4232129	CallExpression	r_cons_newline ( )		4231830	0					
ANR	4232130	Callee	r_cons_newline		4231830	0					
ANR	4232131	Identifier	r_cons_newline		4231830	0					
ANR	4232132	ArgumentList			4231830	1					
ANR	4232133	BreakStatement	break ;	349:2:10900:10905	4231830	8	True				
ANR	4232134	Label	case ' ' :	350:1:10908:10916	4231830	9	True				
ANR	4232135	ExpressionStatement	"r_flag_zone_add ( core -> flags , r_str_trim_ro ( input + 1 ) , core -> offset )"	351:2:10920:10990	4231830	10	True				
ANR	4232136	CallExpression	"r_flag_zone_add ( core -> flags , r_str_trim_ro ( input + 1 ) , core -> offset )"		4231830	0					
ANR	4232137	Callee	r_flag_zone_add		4231830	0					
ANR	4232138	Identifier	r_flag_zone_add		4231830	0					
ANR	4232139	ArgumentList	core -> flags		4231830	1					
ANR	4232140	Argument	core -> flags		4231830	0					
ANR	4232141	PtrMemberAccess	core -> flags		4231830	0					
ANR	4232142	Identifier	core		4231830	0					
ANR	4232143	Identifier	flags		4231830	1					
ANR	4232144	Argument	r_str_trim_ro ( input + 1 )		4231830	1					
ANR	4232145	CallExpression	r_str_trim_ro ( input + 1 )		4231830	0					
ANR	4232146	Callee	r_str_trim_ro		4231830	0					
ANR	4232147	Identifier	r_str_trim_ro		4231830	0					
ANR	4232148	ArgumentList	input + 1		4231830	1					
ANR	4232149	Argument	input + 1		4231830	0					
ANR	4232150	AdditiveExpression	input + 1		4231830	0		+			
ANR	4232151	Identifier	input		4231830	0					
ANR	4232152	PrimaryExpression	1		4231830	1					
ANR	4232153	Argument	core -> offset		4231830	2					
ANR	4232154	PtrMemberAccess	core -> offset		4231830	0					
ANR	4232155	Identifier	core		4231830	0					
ANR	4232156	Identifier	offset		4231830	1					
ANR	4232157	BreakStatement	break ;	352:2:10994:10999	4231830	11	True				
ANR	4232158	Label	case '-' :	353:1:11002:11010	4231830	12	True				
ANR	4232159	IfStatement	if ( input [ 1 ] == '*' )		4231830	13					
ANR	4232160	Condition	input [ 1 ] == '*'	354:6:11018:11032	4231830	0	True				
ANR	4232161	EqualityExpression	input [ 1 ] == '*'		4231830	0		==			
ANR	4232162	ArrayIndexing	input [ 1 ]		4231830	0					
ANR	4232163	Identifier	input		4231830	0					
ANR	4232164	PrimaryExpression	1		4231830	1					
ANR	4232165	PrimaryExpression	'*'		4231830	1					
ANR	4232166	CompoundStatement		47:23:1204:1204	4231830	1					
ANR	4232167	ExpressionStatement	r_flag_zone_reset ( core -> flags )	355:3:11040:11071	4231830	0	True				
ANR	4232168	CallExpression	r_flag_zone_reset ( core -> flags )		4231830	0					
ANR	4232169	Callee	r_flag_zone_reset		4231830	0					
ANR	4232170	Identifier	r_flag_zone_reset		4231830	0					
ANR	4232171	ArgumentList	core -> flags		4231830	1					
ANR	4232172	Argument	core -> flags		4231830	0					
ANR	4232173	PtrMemberAccess	core -> flags		4231830	0					
ANR	4232174	Identifier	core		4231830	0					
ANR	4232175	Identifier	flags		4231830	1					
ANR	4232176	ElseStatement	else		4231830	0					
ANR	4232177	CompoundStatement		49:9:1251:1251	4231830	0					
ANR	4232178	ExpressionStatement	"r_flag_zone_del ( core -> flags , input + 1 )"	357:3:11087:11127	4231830	0	True				
ANR	4232179	CallExpression	"r_flag_zone_del ( core -> flags , input + 1 )"		4231830	0					
ANR	4232180	Callee	r_flag_zone_del		4231830	0					
ANR	4232181	Identifier	r_flag_zone_del		4231830	0					
ANR	4232182	ArgumentList	core -> flags		4231830	1					
ANR	4232183	Argument	core -> flags		4231830	0					
ANR	4232184	PtrMemberAccess	core -> flags		4231830	0					
ANR	4232185	Identifier	core		4231830	0					
ANR	4232186	Identifier	flags		4231830	1					
ANR	4232187	Argument	input + 1		4231830	1					
ANR	4232188	AdditiveExpression	input + 1		4231830	0		+			
ANR	4232189	Identifier	input		4231830	0					
ANR	4232190	PrimaryExpression	1		4231830	1					
ANR	4232191	BreakStatement	break ;	359:2:11135:11140	4231830	14	True				
ANR	4232192	Label	case '*' :	360:1:11143:11151	4231830	15	True				
ANR	4232193	ExpressionStatement	"r_flag_zone_list ( core -> flags , '*' )"	361:2:11155:11190	4231830	16	True				
ANR	4232194	CallExpression	"r_flag_zone_list ( core -> flags , '*' )"		4231830	0					
ANR	4232195	Callee	r_flag_zone_list		4231830	0					
ANR	4232196	Identifier	r_flag_zone_list		4231830	0					
ANR	4232197	ArgumentList	core -> flags		4231830	1					
ANR	4232198	Argument	core -> flags		4231830	0					
ANR	4232199	PtrMemberAccess	core -> flags		4231830	0					
ANR	4232200	Identifier	core		4231830	0					
ANR	4232201	Identifier	flags		4231830	1					
ANR	4232202	Argument	'*'		4231830	1					
ANR	4232203	PrimaryExpression	'*'		4231830	0					
ANR	4232204	BreakStatement	break ;	362:2:11194:11199	4231830	17	True				
ANR	4232205	Label	case 0 :	363:1:11202:11208	4231830	18	True				
ANR	4232206	ExpressionStatement	"r_flag_zone_list ( core -> flags , 0 )"	364:2:11212:11245	4231830	19	True				
ANR	4232207	CallExpression	"r_flag_zone_list ( core -> flags , 0 )"		4231830	0					
ANR	4232208	Callee	r_flag_zone_list		4231830	0					
ANR	4232209	Identifier	r_flag_zone_list		4231830	0					
ANR	4232210	ArgumentList	core -> flags		4231830	1					
ANR	4232211	Argument	core -> flags		4231830	0					
ANR	4232212	PtrMemberAccess	core -> flags		4231830	0					
ANR	4232213	Identifier	core		4231830	0					
ANR	4232214	Identifier	flags		4231830	1					
ANR	4232215	Argument	0		4231830	1					
ANR	4232216	PrimaryExpression	0		4231830	0					
ANR	4232217	BreakStatement	break ;	365:2:11249:11254	4231830	20	True				
ANR	4232218	ReturnType	static void		4231830	1					
ANR	4232219	Identifier	cmd_fz		4231830	2					
ANR	4232220	ParameterList	"RCore * core , const char * input"		4231830	3					
ANR	4232221	Parameter	RCore * core	308:19:9798:9808	4231830	0	True				
ANR	4232222	ParameterType	RCore *		4231830	0					
ANR	4232223	Identifier	core		4231830	1					
ANR	4232224	Parameter	const char * input	308:32:9811:9827	4231830	1	True				
ANR	4232225	ParameterType	const char *		4231830	0					
ANR	4232226	Identifier	input		4231830	1					
ANR	4232227	CFGEntryNode	ENTRY		4231830		True				
ANR	4232228	CFGExitNode	EXIT		4231830		True				
ANR	4232229	Symbol	a		4231830						
ANR	4232230	Symbol	b		4231830						
ANR	4232231	Symbol	NULL		4231830						
ANR	4232232	Symbol	padsize		4231830						
ANR	4232233	Symbol	r_str_pad		4231830						
ANR	4232234	Symbol	title_size		4231830						
ANR	4232235	Symbol	r_cons_get_size		4231830						
ANR	4232236	Symbol	& a		4231830						
ANR	4232237	Symbol	* input		4231830						
ANR	4232238	Symbol	& b		4231830						
ANR	4232239	Symbol	* core		4231830						
ANR	4232240	Symbol	help_msg_fz		4231830						
ANR	4232241	Symbol	core -> offset		4231830						
ANR	4232242	Symbol	core -> flags		4231830						
ANR	4232243	Symbol	title		4231830						
ANR	4232244	Symbol	halfpad		4231830						
ANR	4232245	Symbol	core		4231830						
ANR	4232246	Symbol	input		4231830						
ANR	4232247	Symbol	strlen		4231830						
ANR	4232248	Symbol	a_len		4231830						
ANR	4232249	Symbol	w		4231830						
ANR	4232250	Symbol	r_str_trim_ro		4231830						
ANR	4232251	ClassDef	flagbar_t	369:0:11262:11306							
ANR	4232252	DeclStmt									
ANR	4232253	Decl							RCore	RCore *	core
ANR	4232254	DeclStmt									
ANR	4232255	Decl							int	int	cols
ANR	4232256	Function	flagbar_foreach	374:0:11310:11773							
ANR	4232257	FunctionDef	"flagbar_foreach (RFlagItem * fi , void * user)"		4232256	0					
ANR	4232258	CompoundStatement		374:55:11365:11773	4232256	0					
ANR	4232259	IdentifierDeclStatement	struct flagbar_t * u = ( struct flagbar_t * ) user ;	375:1:11368:11414	4232256	0	True				
ANR	4232260	IdentifierDecl	* u = ( struct flagbar_t * ) user		4232256	0					
ANR	4232261	IdentifierDeclType	struct flagbar_t *		4232256	0					
ANR	4232262	Identifier	u		4232256	1					
ANR	4232263	AssignmentExpression	* u = ( struct flagbar_t * ) user		4232256	2		=			
ANR	4232264	Identifier	u		4232256	0					
ANR	4232265	CastExpression	( struct flagbar_t * ) user		4232256	1					
ANR	4232266	CastTarget	struct flagbar_t *		4232256	0					
ANR	4232267	Identifier	user		4232256	1					
ANR	4232268	IdentifierDeclStatement	"ut64 min = 0 , max = r_io_size ( u -> core -> io ) ;"	376:1:11417:11460	4232256	1	True				
ANR	4232269	IdentifierDecl	min = 0		4232256	0					
ANR	4232270	IdentifierDeclType	ut64		4232256	0					
ANR	4232271	Identifier	min		4232256	1					
ANR	4232272	AssignmentExpression	min = 0		4232256	2		=			
ANR	4232273	Identifier	min		4232256	0					
ANR	4232274	PrimaryExpression	0		4232256	1					
ANR	4232275	IdentifierDecl	max = r_io_size ( u -> core -> io )		4232256	1					
ANR	4232276	IdentifierDeclType	ut64		4232256	0					
ANR	4232277	Identifier	max		4232256	1					
ANR	4232278	AssignmentExpression	max = r_io_size ( u -> core -> io )		4232256	2		=			
ANR	4232279	Identifier	max		4232256	0					
ANR	4232280	CallExpression	r_io_size ( u -> core -> io )		4232256	1					
ANR	4232281	Callee	r_io_size		4232256	0					
ANR	4232282	Identifier	r_io_size		4232256	0					
ANR	4232283	ArgumentList	u -> core -> io		4232256	1					
ANR	4232284	Argument	u -> core -> io		4232256	0					
ANR	4232285	PtrMemberAccess	u -> core -> io		4232256	0					
ANR	4232286	PtrMemberAccess	u -> core		4232256	0					
ANR	4232287	Identifier	u		4232256	0					
ANR	4232288	Identifier	core		4232256	1					
ANR	4232289	Identifier	io		4232256	1					
ANR	4232290	IdentifierDeclStatement	"RIOMap * m = r_io_map_get ( u -> core -> io , fi -> offset ) ;"	377:1:11463:11513	4232256	2	True				
ANR	4232291	IdentifierDecl	"* m = r_io_map_get ( u -> core -> io , fi -> offset )"		4232256	0					
ANR	4232292	IdentifierDeclType	RIOMap *		4232256	0					
ANR	4232293	Identifier	m		4232256	1					
ANR	4232294	AssignmentExpression	"* m = r_io_map_get ( u -> core -> io , fi -> offset )"		4232256	2		=			
ANR	4232295	Identifier	m		4232256	0					
ANR	4232296	CallExpression	"r_io_map_get ( u -> core -> io , fi -> offset )"		4232256	1					
ANR	4232297	Callee	r_io_map_get		4232256	0					
ANR	4232298	Identifier	r_io_map_get		4232256	0					
ANR	4232299	ArgumentList	u -> core -> io		4232256	1					
ANR	4232300	Argument	u -> core -> io		4232256	0					
ANR	4232301	PtrMemberAccess	u -> core -> io		4232256	0					
ANR	4232302	PtrMemberAccess	u -> core		4232256	0					
ANR	4232303	Identifier	u		4232256	0					
ANR	4232304	Identifier	core		4232256	1					
ANR	4232305	Identifier	io		4232256	1					
ANR	4232306	Argument	fi -> offset		4232256	1					
ANR	4232307	PtrMemberAccess	fi -> offset		4232256	0					
ANR	4232308	Identifier	fi		4232256	0					
ANR	4232309	Identifier	offset		4232256	1					
ANR	4232310	IfStatement	if ( m )		4232256	3					
ANR	4232311	Condition	m	378:5:11520:11520	4232256	0	True				
ANR	4232312	Identifier	m		4232256	0					
ANR	4232313	CompoundStatement		5:8:157:157	4232256	1					
ANR	4232314	ExpressionStatement	min = m -> itv . addr	379:2:11527:11544	4232256	0	True				
ANR	4232315	AssignmentExpression	min = m -> itv . addr		4232256	0		=			
ANR	4232316	Identifier	min		4232256	0					
ANR	4232317	MemberAccess	m -> itv . addr		4232256	1					
ANR	4232318	PtrMemberAccess	m -> itv		4232256	0					
ANR	4232319	Identifier	m		4232256	0					
ANR	4232320	Identifier	itv		4232256	1					
ANR	4232321	Identifier	addr		4232256	1					
ANR	4232322	ExpressionStatement	max = m -> itv . addr + m -> itv . size	380:2:11548:11579	4232256	1	True				
ANR	4232323	AssignmentExpression	max = m -> itv . addr + m -> itv . size		4232256	0		=			
ANR	4232324	Identifier	max		4232256	0					
ANR	4232325	AdditiveExpression	m -> itv . addr + m -> itv . size		4232256	1		+			
ANR	4232326	MemberAccess	m -> itv . addr		4232256	0					
ANR	4232327	PtrMemberAccess	m -> itv		4232256	0					
ANR	4232328	Identifier	m		4232256	0					
ANR	4232329	Identifier	itv		4232256	1					
ANR	4232330	Identifier	addr		4232256	1					
ANR	4232331	MemberAccess	m -> itv . size		4232256	1					
ANR	4232332	PtrMemberAccess	m -> itv		4232256	0					
ANR	4232333	Identifier	m		4232256	0					
ANR	4232334	Identifier	itv		4232256	1					
ANR	4232335	Identifier	size		4232256	1					
ANR	4232336	Statement	r_cons_printf	382:1:11585:11597	4232256	4	True				
ANR	4232337	Statement	(	382:15:11599:11599	4232256	5	True				
ANR	4232338	Statement	"""0x%08"""	382:16:11600:11606	4232256	6	True				
ANR	4232339	Statement	PFMT64x	382:23:11607:11613	4232256	7	True				
ANR	4232340	Statement	""" """	382:30:11614:11616	4232256	8	True				
ANR	4232341	Statement	","	382:33:11617:11617	4232256	9	True				
ANR	4232342	Statement	fi	382:35:11619:11620	4232256	10	True				
ANR	4232343	Statement	->	382:37:11621:11622	4232256	11	True				
ANR	4232344	Statement	offset	382:39:11623:11628	4232256	12	True				
ANR	4232345	Statement	)	382:45:11629:11629	4232256	13	True				
ANR	4232346	ExpressionStatement		382:46:11630:11630	4232256	14	True				
ANR	4232347	ExpressionStatement	"r_print_rangebar ( u -> core -> print , fi -> offset , fi -> offset + fi -> size , min , max , u -> cols )"	383:1:11633:11720	4232256	15	True				
ANR	4232348	CallExpression	"r_print_rangebar ( u -> core -> print , fi -> offset , fi -> offset + fi -> size , min , max , u -> cols )"		4232256	0					
ANR	4232349	Callee	r_print_rangebar		4232256	0					
ANR	4232350	Identifier	r_print_rangebar		4232256	0					
ANR	4232351	ArgumentList	u -> core -> print		4232256	1					
ANR	4232352	Argument	u -> core -> print		4232256	0					
ANR	4232353	PtrMemberAccess	u -> core -> print		4232256	0					
ANR	4232354	PtrMemberAccess	u -> core		4232256	0					
ANR	4232355	Identifier	u		4232256	0					
ANR	4232356	Identifier	core		4232256	1					
ANR	4232357	Identifier	print		4232256	1					
ANR	4232358	Argument	fi -> offset		4232256	1					
ANR	4232359	PtrMemberAccess	fi -> offset		4232256	0					
ANR	4232360	Identifier	fi		4232256	0					
ANR	4232361	Identifier	offset		4232256	1					
ANR	4232362	Argument	fi -> offset + fi -> size		4232256	2					
ANR	4232363	AdditiveExpression	fi -> offset + fi -> size		4232256	0		+			
ANR	4232364	PtrMemberAccess	fi -> offset		4232256	0					
ANR	4232365	Identifier	fi		4232256	0					
ANR	4232366	Identifier	offset		4232256	1					
ANR	4232367	PtrMemberAccess	fi -> size		4232256	1					
ANR	4232368	Identifier	fi		4232256	0					
ANR	4232369	Identifier	size		4232256	1					
ANR	4232370	Argument	min		4232256	3					
ANR	4232371	Identifier	min		4232256	0					
ANR	4232372	Argument	max		4232256	4					
ANR	4232373	Identifier	max		4232256	0					
ANR	4232374	Argument	u -> cols		4232256	5					
ANR	4232375	PtrMemberAccess	u -> cols		4232256	0					
ANR	4232376	Identifier	u		4232256	0					
ANR	4232377	Identifier	cols		4232256	1					
ANR	4232378	ExpressionStatement	"r_cons_printf ( ""  %s\\n"" , fi -> name )"	384:1:11723:11757	4232256	16	True				
ANR	4232379	CallExpression	"r_cons_printf ( ""  %s\\n"" , fi -> name )"		4232256	0					
ANR	4232380	Callee	r_cons_printf		4232256	0					
ANR	4232381	Identifier	r_cons_printf		4232256	0					
ANR	4232382	ArgumentList	"""  %s\\n"""		4232256	1					
ANR	4232383	Argument	"""  %s\\n"""		4232256	0					
ANR	4232384	PrimaryExpression	"""  %s\\n"""		4232256	0					
ANR	4232385	Argument	fi -> name		4232256	1					
ANR	4232386	PtrMemberAccess	fi -> name		4232256	0					
ANR	4232387	Identifier	fi		4232256	0					
ANR	4232388	Identifier	name		4232256	1					
ANR	4232389	ReturnStatement	return true ;	385:1:11760:11771	4232256	17	True				
ANR	4232390	Identifier	true		4232256	0					
ANR	4232391	ReturnType	static bool		4232256	1					
ANR	4232392	Identifier	flagbar_foreach		4232256	2					
ANR	4232393	ParameterList	"RFlagItem * fi , void * user"		4232256	3					
ANR	4232394	Parameter	RFlagItem * fi	374:28:11338:11350	4232256	0	True				
ANR	4232395	ParameterType	RFlagItem *		4232256	0					
ANR	4232396	Identifier	fi		4232256	1					
ANR	4232397	Parameter	void * user	374:43:11353:11362	4232256	1	True				
ANR	4232398	ParameterType	void *		4232256	0					
ANR	4232399	Identifier	user		4232256	1					
ANR	4232400	CFGEntryNode	ENTRY		4232256		True				
ANR	4232401	CFGExitNode	EXIT		4232256		True				
ANR	4232402	Symbol	u -> core		4232256						
ANR	4232403	Symbol	fi		4232256						
ANR	4232404	Symbol	m -> itv		4232256						
ANR	4232405	Symbol	fi -> size		4232256						
ANR	4232406	Symbol	max		4232256						
ANR	4232407	Symbol	fi -> name		4232256						
ANR	4232408	Symbol	* fi		4232256						
ANR	4232409	Symbol	m		4232256						
ANR	4232410	Symbol	m -> itv . size		4232256						
ANR	4232411	Symbol	min		4232256						
ANR	4232412	Symbol	u		4232256						
ANR	4232413	Symbol	u -> cols		4232256						
ANR	4232414	Symbol	* * u		4232256						
ANR	4232415	Symbol	fi -> offset		4232256						
ANR	4232416	Symbol	* m		4232256						
ANR	4232417	Symbol	u -> core -> print		4232256						
ANR	4232418	Symbol	true		4232256						
ANR	4232419	Symbol	m -> itv . addr		4232256						
ANR	4232420	Symbol	* u -> core		4232256						
ANR	4232421	Symbol	r_io_size		4232256						
ANR	4232422	Symbol	user		4232256						
ANR	4232423	Symbol	u -> core -> io		4232256						
ANR	4232424	Symbol	r_io_map_get		4232256						
ANR	4232425	Symbol	* u		4232256						
ANR	4232426	Function	flagbars	388:0:11776:12069							
ANR	4232427	FunctionDef	"flagbars (RCore * core , const char * glob)"		4232426	0					
ANR	4232428	CompoundStatement		388:52:11828:12069	4232426	0					
ANR	4232429	IdentifierDeclStatement	int cols = r_cons_get_size ( NULL ) ;	389:1:11831:11864	4232426	0	True				
ANR	4232430	IdentifierDecl	cols = r_cons_get_size ( NULL )		4232426	0					
ANR	4232431	IdentifierDeclType	int		4232426	0					
ANR	4232432	Identifier	cols		4232426	1					
ANR	4232433	AssignmentExpression	cols = r_cons_get_size ( NULL )		4232426	2		=			
ANR	4232434	Identifier	cols		4232426	0					
ANR	4232435	CallExpression	r_cons_get_size ( NULL )		4232426	1					
ANR	4232436	Callee	r_cons_get_size		4232426	0					
ANR	4232437	Identifier	r_cons_get_size		4232426	0					
ANR	4232438	ArgumentList	NULL		4232426	1					
ANR	4232439	Argument	NULL		4232426	0					
ANR	4232440	Identifier	NULL		4232426	0					
ANR	4232441	ExpressionStatement	cols -= 80	390:1:11867:11877	4232426	1	True				
ANR	4232442	AssignmentExpression	cols -= 80		4232426	0		-=			
ANR	4232443	Identifier	cols		4232426	0					
ANR	4232444	PrimaryExpression	80		4232426	1					
ANR	4232445	IfStatement	if ( cols < 0 )		4232426	2					
ANR	4232446	Condition	cols < 0	391:5:11884:11891	4232426	0	True				
ANR	4232447	RelationalExpression	cols < 0		4232426	0		<			
ANR	4232448	Identifier	cols		4232426	0					
ANR	4232449	PrimaryExpression	0		4232426	1					
ANR	4232450	CompoundStatement		4:15:65:65	4232426	1					
ANR	4232451	ExpressionStatement	cols += 80	392:2:11898:11908	4232426	0	True				
ANR	4232452	AssignmentExpression	cols += 80		4232426	0		+=			
ANR	4232453	Identifier	cols		4232426	0					
ANR	4232454	PrimaryExpression	80		4232426	1					
ANR	4232455	Statement	struct	395:1:11915:11920	4232426	3	True				
ANR	4232456	Statement	flagbar_t	395:8:11922:11930	4232426	4	True				
ANR	4232457	Statement	u	395:18:11932:11932	4232426	5	True				
ANR	4232458	Statement	=	395:20:11934:11934	4232426	6	True				
ANR	4232459	CompoundStatement		8:22:107:107	4232426	7					
ANR	4232460	Statement	.	395:24:11938:11938	4232426	0	True				
ANR	4232461	Statement	core	395:25:11939:11942	4232426	1	True				
ANR	4232462	Statement	=	395:30:11944:11944	4232426	2	True				
ANR	4232463	Statement	core	395:32:11946:11949	4232426	3	True				
ANR	4232464	Statement	","	395:36:11950:11950	4232426	4	True				
ANR	4232465	Statement	.	395:38:11952:11952	4232426	5	True				
ANR	4232466	Statement	cols	395:39:11953:11956	4232426	6	True				
ANR	4232467	Statement	=	395:44:11958:11958	4232426	7	True				
ANR	4232468	Statement	cols	395:46:11960:11963	4232426	8	True				
ANR	4232469	ExpressionStatement		395:52:11966:11966	4232426	8	True				
ANR	4232470	ExpressionStatement	"r_flag_foreach_space_glob ( core -> flags , glob , r_flag_space_cur ( core -> flags ) , flagbar_foreach , & u )"	396:1:11969:12067	4232426	9	True				
ANR	4232471	CallExpression	"r_flag_foreach_space_glob ( core -> flags , glob , r_flag_space_cur ( core -> flags ) , flagbar_foreach , & u )"		4232426	0					
ANR	4232472	Callee	r_flag_foreach_space_glob		4232426	0					
ANR	4232473	Identifier	r_flag_foreach_space_glob		4232426	0					
ANR	4232474	ArgumentList	core -> flags		4232426	1					
ANR	4232475	Argument	core -> flags		4232426	0					
ANR	4232476	PtrMemberAccess	core -> flags		4232426	0					
ANR	4232477	Identifier	core		4232426	0					
ANR	4232478	Identifier	flags		4232426	1					
ANR	4232479	Argument	glob		4232426	1					
ANR	4232480	Identifier	glob		4232426	0					
ANR	4232481	Argument	r_flag_space_cur ( core -> flags )		4232426	2					
ANR	4232482	CallExpression	r_flag_space_cur ( core -> flags )		4232426	0					
ANR	4232483	Callee	r_flag_space_cur		4232426	0					
ANR	4232484	Identifier	r_flag_space_cur		4232426	0					
ANR	4232485	ArgumentList	core -> flags		4232426	1					
ANR	4232486	Argument	core -> flags		4232426	0					
ANR	4232487	PtrMemberAccess	core -> flags		4232426	0					
ANR	4232488	Identifier	core		4232426	0					
ANR	4232489	Identifier	flags		4232426	1					
ANR	4232490	Argument	flagbar_foreach		4232426	3					
ANR	4232491	Identifier	flagbar_foreach		4232426	0					
ANR	4232492	Argument	& u		4232426	4					
ANR	4232493	UnaryOperationExpression	& u		4232426	0					
ANR	4232494	UnaryOperator	&		4232426	0					
ANR	4232495	Identifier	u		4232426	1					
ANR	4232496	ReturnType	static void		4232426	1					
ANR	4232497	Identifier	flagbars		4232426	2					
ANR	4232498	ParameterList	"RCore * core , const char * glob"		4232426	3					
ANR	4232499	Parameter	RCore * core	388:21:11797:11807	4232426	0	True				
ANR	4232500	ParameterType	RCore *		4232426	0					
ANR	4232501	Identifier	core		4232426	1					
ANR	4232502	Parameter	const char * glob	388:34:11810:11825	4232426	1	True				
ANR	4232503	ParameterType	const char *		4232426	0					
ANR	4232504	Identifier	glob		4232426	1					
ANR	4232505	CFGEntryNode	ENTRY		4232426		True				
ANR	4232506	CFGExitNode	EXIT		4232426		True				
ANR	4232507	Symbol	core		4232426						
ANR	4232508	Symbol	NULL		4232426						
ANR	4232509	Symbol	flagbar_foreach		4232426						
ANR	4232510	Symbol	r_cons_get_size		4232426						
ANR	4232511	Symbol	r_flag_space_cur		4232426						
ANR	4232512	Symbol	glob		4232426						
ANR	4232513	Symbol	* core		4232426						
ANR	4232514	Symbol	core -> flags		4232426						
ANR	4232515	Symbol	& u		4232426						
ANR	4232516	Symbol	cols		4232426						
ANR	4232517	ClassDef	flag_to_flag_t	399:0:12072:12122							
ANR	4232518	DeclStmt									
ANR	4232519	Decl							ut64	ut64	next
ANR	4232520	DeclStmt									
ANR	4232521	Decl							ut64	ut64	offset
ANR	4232522	Function	flag_to_flag_foreach	404:0:12126:12343							
ANR	4232523	FunctionDef	"flag_to_flag_foreach (RFlagItem * fi , void * user)"		4232522	0					
ANR	4232524	CompoundStatement		404:60:12186:12343	4232522	0					
ANR	4232525	IdentifierDeclStatement	struct flag_to_flag_t * u = ( struct flag_to_flag_t * ) user ;	405:1:12189:12245	4232522	0	True				
ANR	4232526	IdentifierDecl	* u = ( struct flag_to_flag_t * ) user		4232522	0					
ANR	4232527	IdentifierDeclType	struct flag_to_flag_t *		4232522	0					
ANR	4232528	Identifier	u		4232522	1					
ANR	4232529	AssignmentExpression	* u = ( struct flag_to_flag_t * ) user		4232522	2		=			
ANR	4232530	Identifier	u		4232522	0					
ANR	4232531	CastExpression	( struct flag_to_flag_t * ) user		4232522	1					
ANR	4232532	CastTarget	struct flag_to_flag_t *		4232522	0					
ANR	4232533	Identifier	user		4232522	1					
ANR	4232534	IfStatement	if ( fi -> offset < u -> next && fi -> offset > u -> offset )		4232522	1					
ANR	4232535	Condition	fi -> offset < u -> next && fi -> offset > u -> offset	406:5:12252:12297	4232522	0	True				
ANR	4232536	AndExpression	fi -> offset < u -> next && fi -> offset > u -> offset		4232522	0		&&			
ANR	4232537	RelationalExpression	fi -> offset < u -> next		4232522	0		<			
ANR	4232538	PtrMemberAccess	fi -> offset		4232522	0					
ANR	4232539	Identifier	fi		4232522	0					
ANR	4232540	Identifier	offset		4232522	1					
ANR	4232541	PtrMemberAccess	u -> next		4232522	1					
ANR	4232542	Identifier	u		4232522	0					
ANR	4232543	Identifier	next		4232522	1					
ANR	4232544	RelationalExpression	fi -> offset > u -> offset		4232522	1		>			
ANR	4232545	PtrMemberAccess	fi -> offset		4232522	0					
ANR	4232546	Identifier	fi		4232522	0					
ANR	4232547	Identifier	offset		4232522	1					
ANR	4232548	PtrMemberAccess	u -> offset		4232522	1					
ANR	4232549	Identifier	u		4232522	0					
ANR	4232550	Identifier	offset		4232522	1					
ANR	4232551	CompoundStatement		3:53:113:113	4232522	1					
ANR	4232552	ExpressionStatement	u -> next = fi -> offset	407:2:12304:12324	4232522	0	True				
ANR	4232553	AssignmentExpression	u -> next = fi -> offset		4232522	0		=			
ANR	4232554	PtrMemberAccess	u -> next		4232522	0					
ANR	4232555	Identifier	u		4232522	0					
ANR	4232556	Identifier	next		4232522	1					
ANR	4232557	PtrMemberAccess	fi -> offset		4232522	1					
ANR	4232558	Identifier	fi		4232522	0					
ANR	4232559	Identifier	offset		4232522	1					
ANR	4232560	ReturnStatement	return true ;	409:1:12330:12341	4232522	2	True				
ANR	4232561	Identifier	true		4232522	0					
ANR	4232562	ReturnType	static bool		4232522	1					
ANR	4232563	Identifier	flag_to_flag_foreach		4232522	2					
ANR	4232564	ParameterList	"RFlagItem * fi , void * user"		4232522	3					
ANR	4232565	Parameter	RFlagItem * fi	404:33:12159:12171	4232522	0	True				
ANR	4232566	ParameterType	RFlagItem *		4232522	0					
ANR	4232567	Identifier	fi		4232522	1					
ANR	4232568	Parameter	void * user	404:48:12174:12183	4232522	1	True				
ANR	4232569	ParameterType	void *		4232522	0					
ANR	4232570	Identifier	user		4232522	1					
ANR	4232571	CFGEntryNode	ENTRY		4232522		True				
ANR	4232572	CFGExitNode	EXIT		4232522		True				
ANR	4232573	Symbol	u -> next		4232522						
ANR	4232574	Symbol	fi		4232522						
ANR	4232575	Symbol	u -> offset		4232522						
ANR	4232576	Symbol	u		4232522						
ANR	4232577	Symbol	fi -> offset		4232522						
ANR	4232578	Symbol	true		4232522						
ANR	4232579	Symbol	* fi		4232522						
ANR	4232580	Symbol	user		4232522						
ANR	4232581	Symbol	* u		4232522						
ANR	4232582	Function	flag_to_flag	412:0:12346:12705							
ANR	4232583	FunctionDef	"flag_to_flag (RCore * core , const char * glob)"		4232582	0					
ANR	4232584	CompoundStatement		412:55:12401:12705	4232582	0					
ANR	4232585	ExpressionStatement	"r_return_val_if_fail ( glob , 0 )"	413:1:12404:12434	4232582	0	True				
ANR	4232586	CallExpression	"r_return_val_if_fail ( glob , 0 )"		4232582	0					
ANR	4232587	Callee	r_return_val_if_fail		4232582	0					
ANR	4232588	Identifier	r_return_val_if_fail		4232582	0					
ANR	4232589	ArgumentList	glob		4232582	1					
ANR	4232590	Argument	glob		4232582	0					
ANR	4232591	Identifier	glob		4232582	0					
ANR	4232592	Argument	0		4232582	1					
ANR	4232593	PrimaryExpression	0		4232582	0					
ANR	4232594	ExpressionStatement	glob = r_str_trim_ro ( glob )	414:1:12437:12464	4232582	1	True				
ANR	4232595	AssignmentExpression	glob = r_str_trim_ro ( glob )		4232582	0		=			
ANR	4232596	Identifier	glob		4232582	0					
ANR	4232597	CallExpression	r_str_trim_ro ( glob )		4232582	1					
ANR	4232598	Callee	r_str_trim_ro		4232582	0					
ANR	4232599	Identifier	r_str_trim_ro		4232582	0					
ANR	4232600	ArgumentList	glob		4232582	1					
ANR	4232601	Argument	glob		4232582	0					
ANR	4232602	Identifier	glob		4232582	0					
ANR	4232603	Statement	struct	415:1:12467:12472	4232582	2	True				
ANR	4232604	Statement	flag_to_flag_t	415:8:12474:12487	4232582	3	True				
ANR	4232605	Statement	u	415:23:12489:12489	4232582	4	True				
ANR	4232606	Statement	=	415:25:12491:12491	4232582	5	True				
ANR	4232607	CompoundStatement		4:27:91:91	4232582	6					
ANR	4232608	Statement	.	415:29:12495:12495	4232582	0	True				
ANR	4232609	Statement	next	415:30:12496:12499	4232582	1	True				
ANR	4232610	Statement	=	415:35:12501:12501	4232582	2	True				
ANR	4232611	Statement	UT64_MAX	415:37:12503:12510	4232582	3	True				
ANR	4232612	Statement	","	415:45:12511:12511	4232582	4	True				
ANR	4232613	Statement	.	415:47:12513:12513	4232582	5	True				
ANR	4232614	Statement	offset	415:48:12514:12519	4232582	6	True				
ANR	4232615	Statement	=	415:55:12521:12521	4232582	7	True				
ANR	4232616	Statement	core	415:57:12523:12526	4232582	8	True				
ANR	4232617	Statement	->	415:61:12527:12528	4232582	9	True				
ANR	4232618	Statement	offset	415:63:12529:12534	4232582	10	True				
ANR	4232619	ExpressionStatement		415:71:12537:12537	4232582	7	True				
ANR	4232620	ExpressionStatement	"r_flag_foreach_glob ( core -> flags , glob , flag_to_flag_foreach , & u )"	416:1:12540:12605	4232582	8	True				
ANR	4232621	CallExpression	"r_flag_foreach_glob ( core -> flags , glob , flag_to_flag_foreach , & u )"		4232582	0					
ANR	4232622	Callee	r_flag_foreach_glob		4232582	0					
ANR	4232623	Identifier	r_flag_foreach_glob		4232582	0					
ANR	4232624	ArgumentList	core -> flags		4232582	1					
ANR	4232625	Argument	core -> flags		4232582	0					
ANR	4232626	PtrMemberAccess	core -> flags		4232582	0					
ANR	4232627	Identifier	core		4232582	0					
ANR	4232628	Identifier	flags		4232582	1					
ANR	4232629	Argument	glob		4232582	1					
ANR	4232630	Identifier	glob		4232582	0					
ANR	4232631	Argument	flag_to_flag_foreach		4232582	2					
ANR	4232632	Identifier	flag_to_flag_foreach		4232582	0					
ANR	4232633	Argument	& u		4232582	3					
ANR	4232634	UnaryOperationExpression	& u		4232582	0					
ANR	4232635	UnaryOperator	&		4232582	0					
ANR	4232636	Identifier	u		4232582	1					
ANR	4232637	IfStatement	if ( u . next != UT64_MAX && u . next > core -> offset )		4232582	9					
ANR	4232638	Condition	u . next != UT64_MAX && u . next > core -> offset	417:5:12612:12654	4232582	0	True				
ANR	4232639	AndExpression	u . next != UT64_MAX && u . next > core -> offset		4232582	0		&&			
ANR	4232640	EqualityExpression	u . next != UT64_MAX		4232582	0		!=			
ANR	4232641	MemberAccess	u . next		4232582	0					
ANR	4232642	Identifier	u		4232582	0					
ANR	4232643	Identifier	next		4232582	1					
ANR	4232644	Identifier	UT64_MAX		4232582	1					
ANR	4232645	RelationalExpression	u . next > core -> offset		4232582	1		>			
ANR	4232646	MemberAccess	u . next		4232582	0					
ANR	4232647	Identifier	u		4232582	0					
ANR	4232648	Identifier	next		4232582	1					
ANR	4232649	PtrMemberAccess	core -> offset		4232582	1					
ANR	4232650	Identifier	core		4232582	0					
ANR	4232651	Identifier	offset		4232582	1					
ANR	4232652	CompoundStatement		6:50:255:255	4232582	1					
ANR	4232653	ReturnStatement	return u . next - core -> offset ;	418:2:12661:12689	4232582	0	True				
ANR	4232654	AdditiveExpression	u . next - core -> offset		4232582	0		-			
ANR	4232655	MemberAccess	u . next		4232582	0					
ANR	4232656	Identifier	u		4232582	0					
ANR	4232657	Identifier	next		4232582	1					
ANR	4232658	PtrMemberAccess	core -> offset		4232582	1					
ANR	4232659	Identifier	core		4232582	0					
ANR	4232660	Identifier	offset		4232582	1					
ANR	4232661	ReturnStatement	return 0 ;	420:1:12695:12703	4232582	10	True				
ANR	4232662	PrimaryExpression	0		4232582	0					
ANR	4232663	ReturnType	static int		4232582	1					
ANR	4232664	Identifier	flag_to_flag		4232582	2					
ANR	4232665	ParameterList	"RCore * core , const char * glob"		4232582	3					
ANR	4232666	Parameter	RCore * core	412:24:12370:12380	4232582	0	True				
ANR	4232667	ParameterType	RCore *		4232582	0					
ANR	4232668	Identifier	core		4232582	1					
ANR	4232669	Parameter	const char * glob	412:37:12383:12398	4232582	1	True				
ANR	4232670	ParameterType	const char *		4232582	0					
ANR	4232671	Identifier	glob		4232582	1					
ANR	4232672	CFGEntryNode	ENTRY		4232582		True				
ANR	4232673	CFGExitNode	EXIT		4232582		True				
ANR	4232674	Symbol	core		4232582						
ANR	4232675	Symbol	flag_to_flag_foreach		4232582						
ANR	4232676	Symbol	u		4232582						
ANR	4232677	Symbol	u . next		4232582						
ANR	4232678	Symbol	glob		4232582						
ANR	4232679	Symbol	r_str_trim_ro		4232582						
ANR	4232680	Symbol	* core		4232582						
ANR	4232681	Symbol	core -> offset		4232582						
ANR	4232682	Symbol	core -> flags		4232582						
ANR	4232683	Symbol	& u		4232582						
ANR	4232684	Symbol	UT64_MAX		4232582						
ANR	4232685	Function	cmd_flag_tags	423:0:12708:15449							
ANR	4232686	FunctionDef	"cmd_flag_tags (RCore * core , const char * input)"		4232685	0					
ANR	4232687	CompoundStatement		423:58:12766:15449	4232685	0					
ANR	4232688	IdentifierDeclStatement	char mode = input [ 1 ] ;	424:1:12769:12789	4232685	0	True				
ANR	4232689	IdentifierDecl	mode = input [ 1 ]		4232685	0					
ANR	4232690	IdentifierDeclType	char		4232685	0					
ANR	4232691	Identifier	mode		4232685	1					
ANR	4232692	AssignmentExpression	mode = input [ 1 ]		4232685	2		=			
ANR	4232693	Identifier	mode		4232685	0					
ANR	4232694	ArrayIndexing	input [ 1 ]		4232685	1					
ANR	4232695	Identifier	input		4232685	0					
ANR	4232696	PrimaryExpression	1		4232685	1					
ANR	4232697	ForStatement	for ( ; * input && ! IS_WHITESPACE ( * input ) ; input ++ )		4232685	1					
ANR	4232698	Condition	* input && ! IS_WHITESPACE ( * input )	425:8:12799:12831	4232685	0	True				
ANR	4232699	AndExpression	* input && ! IS_WHITESPACE ( * input )		4232685	0		&&			
ANR	4232700	UnaryOperationExpression	* input		4232685	0					
ANR	4232701	UnaryOperator	*		4232685	0					
ANR	4232702	Identifier	input		4232685	1					
ANR	4232703	UnaryOperationExpression	! IS_WHITESPACE ( * input )		4232685	1					
ANR	4232704	UnaryOperator	!		4232685	0					
ANR	4232705	CallExpression	IS_WHITESPACE ( * input )		4232685	1					
ANR	4232706	Callee	IS_WHITESPACE		4232685	0					
ANR	4232707	Identifier	IS_WHITESPACE		4232685	0					
ANR	4232708	ArgumentList	* input		4232685	1					
ANR	4232709	Argument	* input		4232685	0					
ANR	4232710	UnaryOperationExpression	* input		4232685	0					
ANR	4232711	UnaryOperator	*		4232685	0					
ANR	4232712	Identifier	input		4232685	1					
ANR	4232713	PostIncDecOperationExpression	input ++	425:43:12834:12840	4232685	1	True				
ANR	4232714	Identifier	input		4232685	0					
ANR	4232715	IncDec	++		4232685	1					
ANR	4232716	CompoundStatement		3:52:76:76	4232685	2					
ANR	4232717	IdentifierDeclStatement	char * inp = strdup ( input ) ;	426:1:12847:12873	4232685	2	True				
ANR	4232718	IdentifierDecl	* inp = strdup ( input )		4232685	0					
ANR	4232719	IdentifierDeclType	char *		4232685	0					
ANR	4232720	Identifier	inp		4232685	1					
ANR	4232721	AssignmentExpression	* inp = strdup ( input )		4232685	2		=			
ANR	4232722	Identifier	inp		4232685	0					
ANR	4232723	CallExpression	strdup ( input )		4232685	1					
ANR	4232724	Callee	strdup		4232685	0					
ANR	4232725	Identifier	strdup		4232685	0					
ANR	4232726	ArgumentList	input		4232685	1					
ANR	4232727	Argument	input		4232685	0					
ANR	4232728	Identifier	input		4232685	0					
ANR	4232729	IdentifierDeclStatement	char * arg = inp ;	427:1:12876:12891	4232685	3	True				
ANR	4232730	IdentifierDecl	* arg = inp		4232685	0					
ANR	4232731	IdentifierDeclType	char *		4232685	0					
ANR	4232732	Identifier	arg		4232685	1					
ANR	4232733	AssignmentExpression	* arg = inp		4232685	2		=			
ANR	4232734	Identifier	inp		4232685	0					
ANR	4232735	Identifier	inp		4232685	1					
ANR	4232736	ExpressionStatement	r_str_trim ( arg )	428:1:12894:12910	4232685	4	True				
ANR	4232737	CallExpression	r_str_trim ( arg )		4232685	0					
ANR	4232738	Callee	r_str_trim		4232685	0					
ANR	4232739	Identifier	r_str_trim		4232685	0					
ANR	4232740	ArgumentList	arg		4232685	1					
ANR	4232741	Argument	arg		4232685	0					
ANR	4232742	Identifier	arg		4232685	0					
ANR	4232743	IfStatement	if ( ! * arg && ! mode )		4232685	5					
ANR	4232744	Condition	! * arg && ! mode	429:5:12917:12930	4232685	0	True				
ANR	4232745	AndExpression	! * arg && ! mode		4232685	0		&&			
ANR	4232746	UnaryOperationExpression	! * arg		4232685	0					
ANR	4232747	UnaryOperator	!		4232685	0					
ANR	4232748	UnaryOperationExpression	* arg		4232685	1					
ANR	4232749	UnaryOperator	*		4232685	0					
ANR	4232750	Identifier	arg		4232685	1					
ANR	4232751	UnaryOperationExpression	! mode		4232685	1					
ANR	4232752	UnaryOperator	!		4232685	0					
ANR	4232753	Identifier	mode		4232685	1					
ANR	4232754	CompoundStatement		10:2:208:258	4232685	1					
ANR	4232755	IdentifierDeclStatement	const char * tag ;	430:2:12937:12952	4232685	0	True				
ANR	4232756	IdentifierDecl	* tag		4232685	0					
ANR	4232757	IdentifierDeclType	const char *		4232685	0					
ANR	4232758	Identifier	tag		4232685	1					
ANR	4232759	IdentifierDeclStatement	RListIter * iter ;	431:2:12956:12971	4232685	1	True				
ANR	4232760	IdentifierDecl	* iter		4232685	0					
ANR	4232761	IdentifierDeclType	RListIter *		4232685	0					
ANR	4232762	Identifier	iter		4232685	1					
ANR	4232763	IdentifierDeclStatement	"RList * list = r_flag_tags_list ( core -> flags , NULL ) ;"	432:2:12975:13025	4232685	2	True				
ANR	4232764	IdentifierDecl	"* list = r_flag_tags_list ( core -> flags , NULL )"		4232685	0					
ANR	4232765	IdentifierDeclType	RList *		4232685	0					
ANR	4232766	Identifier	list		4232685	1					
ANR	4232767	AssignmentExpression	"* list = r_flag_tags_list ( core -> flags , NULL )"		4232685	2		=			
ANR	4232768	Identifier	list		4232685	0					
ANR	4232769	CallExpression	"r_flag_tags_list ( core -> flags , NULL )"		4232685	1					
ANR	4232770	Callee	r_flag_tags_list		4232685	0					
ANR	4232771	Identifier	r_flag_tags_list		4232685	0					
ANR	4232772	ArgumentList	core -> flags		4232685	1					
ANR	4232773	Argument	core -> flags		4232685	0					
ANR	4232774	PtrMemberAccess	core -> flags		4232685	0					
ANR	4232775	Identifier	core		4232685	0					
ANR	4232776	Identifier	flags		4232685	1					
ANR	4232777	Argument	NULL		4232685	1					
ANR	4232778	Identifier	NULL		4232685	0					
ANR	4232779	Statement	r_list_foreach	433:2:13029:13042	4232685	3	True				
ANR	4232780	Statement	(	433:17:13044:13044	4232685	4	True				
ANR	4232781	Statement	list	433:18:13045:13048	4232685	5	True				
ANR	4232782	Statement	","	433:22:13049:13049	4232685	6	True				
ANR	4232783	Statement	iter	433:24:13051:13054	4232685	7	True				
ANR	4232784	Statement	","	433:28:13055:13055	4232685	8	True				
ANR	4232785	Statement	tag	433:30:13057:13059	4232685	9	True				
ANR	4232786	Statement	)	433:33:13060:13060	4232685	10	True				
ANR	4232787	CompoundStatement		11:35:295:295	4232685	11					
ANR	4232788	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , tag )"	434:3:13067:13094	4232685	0	True				
ANR	4232789	CallExpression	"r_cons_printf ( ""%s\\n"" , tag )"		4232685	0					
ANR	4232790	Callee	r_cons_printf		4232685	0					
ANR	4232791	Identifier	r_cons_printf		4232685	0					
ANR	4232792	ArgumentList	"""%s\\n"""		4232685	1					
ANR	4232793	Argument	"""%s\\n"""		4232685	0					
ANR	4232794	PrimaryExpression	"""%s\\n"""		4232685	0					
ANR	4232795	Argument	tag		4232685	1					
ANR	4232796	Identifier	tag		4232685	0					
ANR	4232797	ExpressionStatement	r_list_free ( list )	436:2:13102:13120	4232685	12	True				
ANR	4232798	CallExpression	r_list_free ( list )		4232685	0					
ANR	4232799	Callee	r_list_free		4232685	0					
ANR	4232800	Identifier	r_list_free		4232685	0					
ANR	4232801	ArgumentList	list		4232685	1					
ANR	4232802	Argument	list		4232685	0					
ANR	4232803	Identifier	list		4232685	0					
ANR	4232804	ExpressionStatement	free ( inp )	437:2:13124:13134	4232685	13	True				
ANR	4232805	CallExpression	free ( inp )		4232685	0					
ANR	4232806	Callee	free		4232685	0					
ANR	4232807	Identifier	free		4232685	0					
ANR	4232808	ArgumentList	inp		4232685	1					
ANR	4232809	Argument	inp		4232685	0					
ANR	4232810	Identifier	inp		4232685	0					
ANR	4232811	ReturnStatement	return ;	438:2:13138:13144	4232685	14	True				
ANR	4232812	IfStatement	if ( mode == '?' )		4232685	6					
ANR	4232813	Condition	mode == '?'	440:5:13154:13164	4232685	0	True				
ANR	4232814	EqualityExpression	mode == '?'		4232685	0		==			
ANR	4232815	Identifier	mode		4232685	0					
ANR	4232816	PrimaryExpression	'?'		4232685	1					
ANR	4232817	CompoundStatement		18:18:400:400	4232685	1					
ANR	4232818	ExpressionStatement	"eprintf ( ""Usage: ft[?ln] [k] [v ...]\\n"" )"	441:2:13171:13211	4232685	0	True				
ANR	4232819	CallExpression	"eprintf ( ""Usage: ft[?ln] [k] [v ...]\\n"" )"		4232685	0					
ANR	4232820	Callee	eprintf		4232685	0					
ANR	4232821	Identifier	eprintf		4232685	0					
ANR	4232822	ArgumentList	"""Usage: ft[?ln] [k] [v ...]\\n"""		4232685	1					
ANR	4232823	Argument	"""Usage: ft[?ln] [k] [v ...]\\n"""		4232685	0					
ANR	4232824	PrimaryExpression	"""Usage: ft[?ln] [k] [v ...]\\n"""		4232685	0					
ANR	4232825	ExpressionStatement	"eprintf ( "" ft tag strcpy strlen ... # set words for the 'string' tag\\n"" )"	442:2:13215:13287	4232685	1	True				
ANR	4232826	CallExpression	"eprintf ( "" ft tag strcpy strlen ... # set words for the 'string' tag\\n"" )"		4232685	0					
ANR	4232827	Callee	eprintf		4232685	0					
ANR	4232828	Identifier	eprintf		4232685	0					
ANR	4232829	ArgumentList	""" ft tag strcpy strlen ... # set words for the 'string' tag\\n"""		4232685	1					
ANR	4232830	Argument	""" ft tag strcpy strlen ... # set words for the 'string' tag\\n"""		4232685	0					
ANR	4232831	PrimaryExpression	""" ft tag strcpy strlen ... # set words for the 'string' tag\\n"""		4232685	0					
ANR	4232832	ExpressionStatement	"eprintf ( "" ft tag                   # get offsets of all matching flags\\n"" )"	443:2:13291:13366	4232685	2	True				
ANR	4232833	CallExpression	"eprintf ( "" ft tag                   # get offsets of all matching flags\\n"" )"		4232685	0					
ANR	4232834	Callee	eprintf		4232685	0					
ANR	4232835	Identifier	eprintf		4232685	0					
ANR	4232836	ArgumentList	""" ft tag                   # get offsets of all matching flags\\n"""		4232685	1					
ANR	4232837	Argument	""" ft tag                   # get offsets of all matching flags\\n"""		4232685	0					
ANR	4232838	PrimaryExpression	""" ft tag                   # get offsets of all matching flags\\n"""		4232685	0					
ANR	4232839	ExpressionStatement	"eprintf ( "" ft                       # list all tags\\n"" )"	444:2:13370:13425	4232685	3	True				
ANR	4232840	CallExpression	"eprintf ( "" ft                       # list all tags\\n"" )"		4232685	0					
ANR	4232841	Callee	eprintf		4232685	0					
ANR	4232842	Identifier	eprintf		4232685	0					
ANR	4232843	ArgumentList	""" ft                       # list all tags\\n"""		4232685	1					
ANR	4232844	Argument	""" ft                       # list all tags\\n"""		4232685	0					
ANR	4232845	PrimaryExpression	""" ft                       # list all tags\\n"""		4232685	0					
ANR	4232846	ExpressionStatement	"eprintf ( "" ftn tag                  # get matching flagnames fot given tag\\n"" )"	445:2:13429:13507	4232685	4	True				
ANR	4232847	CallExpression	"eprintf ( "" ftn tag                  # get matching flagnames fot given tag\\n"" )"		4232685	0					
ANR	4232848	Callee	eprintf		4232685	0					
ANR	4232849	Identifier	eprintf		4232685	0					
ANR	4232850	ArgumentList	""" ftn tag                  # get matching flagnames fot given tag\\n"""		4232685	1					
ANR	4232851	Argument	""" ftn tag                  # get matching flagnames fot given tag\\n"""		4232685	0					
ANR	4232852	PrimaryExpression	""" ftn tag                  # get matching flagnames fot given tag\\n"""		4232685	0					
ANR	4232853	ExpressionStatement	"eprintf ( "" ftw                      # flag tags within this file\\n"" )"	446:2:13511:13579	4232685	5	True				
ANR	4232854	CallExpression	"eprintf ( "" ftw                      # flag tags within this file\\n"" )"		4232685	0					
ANR	4232855	Callee	eprintf		4232685	0					
ANR	4232856	Identifier	eprintf		4232685	0					
ANR	4232857	ArgumentList	""" ftw                      # flag tags within this file\\n"""		4232685	1					
ANR	4232858	Argument	""" ftw                      # flag tags within this file\\n"""		4232685	0					
ANR	4232859	PrimaryExpression	""" ftw                      # flag tags within this file\\n"""		4232685	0					
ANR	4232860	ExpressionStatement	"eprintf ( "" ftj                      # list all flagtags in JSON format\\n"" )"	447:2:13583:13657	4232685	6	True				
ANR	4232861	CallExpression	"eprintf ( "" ftj                      # list all flagtags in JSON format\\n"" )"		4232685	0					
ANR	4232862	Callee	eprintf		4232685	0					
ANR	4232863	Identifier	eprintf		4232685	0					
ANR	4232864	ArgumentList	""" ftj                      # list all flagtags in JSON format\\n"""		4232685	1					
ANR	4232865	Argument	""" ftj                      # list all flagtags in JSON format\\n"""		4232685	0					
ANR	4232866	PrimaryExpression	""" ftj                      # list all flagtags in JSON format\\n"""		4232685	0					
ANR	4232867	ExpressionStatement	"eprintf ( "" ft*                      # list all flagtags in r2 commands\\n"" )"	448:2:13661:13735	4232685	7	True				
ANR	4232868	CallExpression	"eprintf ( "" ft*                      # list all flagtags in r2 commands\\n"" )"		4232685	0					
ANR	4232869	Callee	eprintf		4232685	0					
ANR	4232870	Identifier	eprintf		4232685	0					
ANR	4232871	ArgumentList	""" ft*                      # list all flagtags in r2 commands\\n"""		4232685	1					
ANR	4232872	Argument	""" ft*                      # list all flagtags in r2 commands\\n"""		4232685	0					
ANR	4232873	PrimaryExpression	""" ft*                      # list all flagtags in r2 commands\\n"""		4232685	0					
ANR	4232874	ExpressionStatement	free ( inp )	449:2:13739:13749	4232685	8	True				
ANR	4232875	CallExpression	free ( inp )		4232685	0					
ANR	4232876	Callee	free		4232685	0					
ANR	4232877	Identifier	free		4232685	0					
ANR	4232878	ArgumentList	inp		4232685	1					
ANR	4232879	Argument	inp		4232685	0					
ANR	4232880	Identifier	inp		4232685	0					
ANR	4232881	ReturnStatement	return ;	450:2:13753:13759	4232685	9	True				
ANR	4232882	IfStatement	if ( mode == 'w' )		4232685	7					
ANR	4232883	Condition	mode == 'w'	452:5:13769:13779	4232685	0	True				
ANR	4232884	EqualityExpression	mode == 'w'		4232685	0		==			
ANR	4232885	Identifier	mode		4232685	0					
ANR	4232886	PrimaryExpression	'w'		4232685	1					
ANR	4232887	CompoundStatement		33:2:1066:1116	4232685	1					
ANR	4232888	IdentifierDeclStatement	const char * tag ;	453:2:13795:13810	4232685	0	True				
ANR	4232889	IdentifierDecl	* tag		4232685	0					
ANR	4232890	IdentifierDeclType	const char *		4232685	0					
ANR	4232891	Identifier	tag		4232685	1					
ANR	4232892	IdentifierDeclStatement	RListIter * iter ;	454:2:13814:13829	4232685	1	True				
ANR	4232893	IdentifierDecl	* iter		4232685	0					
ANR	4232894	IdentifierDeclType	RListIter *		4232685	0					
ANR	4232895	Identifier	iter		4232685	1					
ANR	4232896	IdentifierDeclStatement	"RList * list = r_flag_tags_list ( core -> flags , NULL ) ;"	455:2:13833:13883	4232685	2	True				
ANR	4232897	IdentifierDecl	"* list = r_flag_tags_list ( core -> flags , NULL )"		4232685	0					
ANR	4232898	IdentifierDeclType	RList *		4232685	0					
ANR	4232899	Identifier	list		4232685	1					
ANR	4232900	AssignmentExpression	"* list = r_flag_tags_list ( core -> flags , NULL )"		4232685	2		=			
ANR	4232901	Identifier	list		4232685	0					
ANR	4232902	CallExpression	"r_flag_tags_list ( core -> flags , NULL )"		4232685	1					
ANR	4232903	Callee	r_flag_tags_list		4232685	0					
ANR	4232904	Identifier	r_flag_tags_list		4232685	0					
ANR	4232905	ArgumentList	core -> flags		4232685	1					
ANR	4232906	Argument	core -> flags		4232685	0					
ANR	4232907	PtrMemberAccess	core -> flags		4232685	0					
ANR	4232908	Identifier	core		4232685	0					
ANR	4232909	Identifier	flags		4232685	1					
ANR	4232910	Argument	NULL		4232685	1					
ANR	4232911	Identifier	NULL		4232685	0					
ANR	4232912	Statement	r_list_foreach	456:2:13887:13900	4232685	3	True				
ANR	4232913	Statement	(	456:17:13902:13902	4232685	4	True				
ANR	4232914	Statement	list	456:18:13903:13906	4232685	5	True				
ANR	4232915	Statement	","	456:22:13907:13907	4232685	6	True				
ANR	4232916	Statement	iter	456:24:13909:13912	4232685	7	True				
ANR	4232917	Statement	","	456:28:13913:13913	4232685	8	True				
ANR	4232918	Statement	tag	456:30:13915:13917	4232685	9	True				
ANR	4232919	Statement	)	456:33:13918:13918	4232685	10	True				
ANR	4232920	CompoundStatement		34:35:1153:1153	4232685	11					
ANR	4232921	ExpressionStatement	"r_cons_printf ( ""%s:\\n"" , tag )"	457:3:13925:13953	4232685	0	True				
ANR	4232922	CallExpression	"r_cons_printf ( ""%s:\\n"" , tag )"		4232685	0					
ANR	4232923	Callee	r_cons_printf		4232685	0					
ANR	4232924	Identifier	r_cons_printf		4232685	0					
ANR	4232925	ArgumentList	"""%s:\\n"""		4232685	1					
ANR	4232926	Argument	"""%s:\\n"""		4232685	0					
ANR	4232927	PrimaryExpression	"""%s:\\n"""		4232685	0					
ANR	4232928	Argument	tag		4232685	1					
ANR	4232929	Identifier	tag		4232685	0					
ANR	4232930	ExpressionStatement	"r_core_cmdf ( core , ""ftn %s"" , tag )"	458:3:13958:13991	4232685	1	True				
ANR	4232931	CallExpression	"r_core_cmdf ( core , ""ftn %s"" , tag )"		4232685	0					
ANR	4232932	Callee	r_core_cmdf		4232685	0					
ANR	4232933	Identifier	r_core_cmdf		4232685	0					
ANR	4232934	ArgumentList	core		4232685	1					
ANR	4232935	Argument	core		4232685	0					
ANR	4232936	Identifier	core		4232685	0					
ANR	4232937	Argument	"""ftn %s"""		4232685	1					
ANR	4232938	PrimaryExpression	"""ftn %s"""		4232685	0					
ANR	4232939	Argument	tag		4232685	2					
ANR	4232940	Identifier	tag		4232685	0					
ANR	4232941	ExpressionStatement	r_list_free ( list )	460:2:13999:14017	4232685	12	True				
ANR	4232942	CallExpression	r_list_free ( list )		4232685	0					
ANR	4232943	Callee	r_list_free		4232685	0					
ANR	4232944	Identifier	r_list_free		4232685	0					
ANR	4232945	ArgumentList	list		4232685	1					
ANR	4232946	Argument	list		4232685	0					
ANR	4232947	Identifier	list		4232685	0					
ANR	4232948	ExpressionStatement	free ( inp )	461:2:14021:14031	4232685	13	True				
ANR	4232949	CallExpression	free ( inp )		4232685	0					
ANR	4232950	Callee	free		4232685	0					
ANR	4232951	Identifier	free		4232685	0					
ANR	4232952	ArgumentList	inp		4232685	1					
ANR	4232953	Argument	inp		4232685	0					
ANR	4232954	Identifier	inp		4232685	0					
ANR	4232955	ReturnStatement	return ;	462:2:14035:14041	4232685	14	True				
ANR	4232956	IfStatement	if ( mode == '*' )		4232685	8					
ANR	4232957	Condition	mode == '*'	464:5:14051:14061	4232685	0	True				
ANR	4232958	EqualityExpression	mode == '*'		4232685	0		==			
ANR	4232959	Identifier	mode		4232685	0					
ANR	4232960	PrimaryExpression	'*'		4232685	1					
ANR	4232961	CompoundStatement		45:2:1339:1389	4232685	1					
ANR	4232962	IdentifierDeclStatement	RListIter * iter ;	465:2:14068:14083	4232685	0	True				
ANR	4232963	IdentifierDecl	* iter		4232685	0					
ANR	4232964	IdentifierDeclType	RListIter *		4232685	0					
ANR	4232965	Identifier	iter		4232685	1					
ANR	4232966	IdentifierDeclStatement	const char * tag ;	466:2:14087:14102	4232685	1	True				
ANR	4232967	IdentifierDecl	* tag		4232685	0					
ANR	4232968	IdentifierDeclType	const char *		4232685	0					
ANR	4232969	Identifier	tag		4232685	1					
ANR	4232970	IdentifierDeclStatement	"RList * list = r_flag_tags_list ( core -> flags , NULL ) ;"	467:2:14106:14156	4232685	2	True				
ANR	4232971	IdentifierDecl	"* list = r_flag_tags_list ( core -> flags , NULL )"		4232685	0					
ANR	4232972	IdentifierDeclType	RList *		4232685	0					
ANR	4232973	Identifier	list		4232685	1					
ANR	4232974	AssignmentExpression	"* list = r_flag_tags_list ( core -> flags , NULL )"		4232685	2		=			
ANR	4232975	Identifier	list		4232685	0					
ANR	4232976	CallExpression	"r_flag_tags_list ( core -> flags , NULL )"		4232685	1					
ANR	4232977	Callee	r_flag_tags_list		4232685	0					
ANR	4232978	Identifier	r_flag_tags_list		4232685	0					
ANR	4232979	ArgumentList	core -> flags		4232685	1					
ANR	4232980	Argument	core -> flags		4232685	0					
ANR	4232981	PtrMemberAccess	core -> flags		4232685	0					
ANR	4232982	Identifier	core		4232685	0					
ANR	4232983	Identifier	flags		4232685	1					
ANR	4232984	Argument	NULL		4232685	1					
ANR	4232985	Identifier	NULL		4232685	0					
ANR	4232986	Statement	r_list_foreach	468:2:14160:14173	4232685	3	True				
ANR	4232987	Statement	(	468:17:14175:14175	4232685	4	True				
ANR	4232988	Statement	list	468:18:14176:14179	4232685	5	True				
ANR	4232989	Statement	","	468:22:14180:14180	4232685	6	True				
ANR	4232990	Statement	iter	468:24:14182:14185	4232685	7	True				
ANR	4232991	Statement	","	468:28:14186:14186	4232685	8	True				
ANR	4232992	Statement	tag	468:30:14188:14190	4232685	9	True				
ANR	4232993	Statement	)	468:33:14191:14191	4232685	10	True				
ANR	4232994	CompoundStatement		47:3:1431:1509	4232685	11					
ANR	4232995	IdentifierDeclStatement	"const char * flags = sdb_get ( core -> flags -> tags , sdb_fmt ( ""tag.%s"" , tag ) , NULL ) ;"	469:3:14198:14276	4232685	0	True				
ANR	4232996	IdentifierDecl	"* flags = sdb_get ( core -> flags -> tags , sdb_fmt ( ""tag.%s"" , tag ) , NULL )"		4232685	0					
ANR	4232997	IdentifierDeclType	const char *		4232685	0					
ANR	4232998	Identifier	flags		4232685	1					
ANR	4232999	AssignmentExpression	"* flags = sdb_get ( core -> flags -> tags , sdb_fmt ( ""tag.%s"" , tag ) , NULL )"		4232685	2		=			
ANR	4233000	Identifier	flags		4232685	0					
ANR	4233001	CallExpression	"sdb_get ( core -> flags -> tags , sdb_fmt ( ""tag.%s"" , tag ) , NULL )"		4232685	1					
ANR	4233002	Callee	sdb_get		4232685	0					
ANR	4233003	Identifier	sdb_get		4232685	0					
ANR	4233004	ArgumentList	core -> flags -> tags		4232685	1					
ANR	4233005	Argument	core -> flags -> tags		4232685	0					
ANR	4233006	PtrMemberAccess	core -> flags -> tags		4232685	0					
ANR	4233007	PtrMemberAccess	core -> flags		4232685	0					
ANR	4233008	Identifier	core		4232685	0					
ANR	4233009	Identifier	flags		4232685	1					
ANR	4233010	Identifier	tags		4232685	1					
ANR	4233011	Argument	"sdb_fmt ( ""tag.%s"" , tag )"		4232685	1					
ANR	4233012	CallExpression	"sdb_fmt ( ""tag.%s"" , tag )"		4232685	0					
ANR	4233013	Callee	sdb_fmt		4232685	0					
ANR	4233014	Identifier	sdb_fmt		4232685	0					
ANR	4233015	ArgumentList	"""tag.%s"""		4232685	1					
ANR	4233016	Argument	"""tag.%s"""		4232685	0					
ANR	4233017	PrimaryExpression	"""tag.%s"""		4232685	0					
ANR	4233018	Argument	tag		4232685	1					
ANR	4233019	Identifier	tag		4232685	0					
ANR	4233020	Argument	NULL		4232685	2					
ANR	4233021	Identifier	NULL		4232685	0					
ANR	4233022	ExpressionStatement	"r_cons_printf ( ""ft %s %s\\n"" , tag , flags )"	470:3:14281:14321	4232685	1	True				
ANR	4233023	CallExpression	"r_cons_printf ( ""ft %s %s\\n"" , tag , flags )"		4232685	0					
ANR	4233024	Callee	r_cons_printf		4232685	0					
ANR	4233025	Identifier	r_cons_printf		4232685	0					
ANR	4233026	ArgumentList	"""ft %s %s\\n"""		4232685	1					
ANR	4233027	Argument	"""ft %s %s\\n"""		4232685	0					
ANR	4233028	PrimaryExpression	"""ft %s %s\\n"""		4232685	0					
ANR	4233029	Argument	tag		4232685	1					
ANR	4233030	Identifier	tag		4232685	0					
ANR	4233031	Argument	flags		4232685	2					
ANR	4233032	Identifier	flags		4232685	0					
ANR	4233033	ExpressionStatement	r_list_free ( list )	472:2:14329:14347	4232685	12	True				
ANR	4233034	CallExpression	r_list_free ( list )		4232685	0					
ANR	4233035	Callee	r_list_free		4232685	0					
ANR	4233036	Identifier	r_list_free		4232685	0					
ANR	4233037	ArgumentList	list		4232685	1					
ANR	4233038	Argument	list		4232685	0					
ANR	4233039	Identifier	list		4232685	0					
ANR	4233040	ReturnStatement	return ;	473:2:14351:14357	4232685	13	True				
ANR	4233041	IfStatement	if ( mode == 'j' )		4232685	9					
ANR	4233042	Condition	mode == 'j'	475:5:14367:14377	4232685	0	True				
ANR	4233043	EqualityExpression	mode == 'j'		4232685	0		==			
ANR	4233044	Identifier	mode		4232685	0					
ANR	4233045	PrimaryExpression	'j'		4232685	1					
ANR	4233046	CompoundStatement		58:2:1713:1763	4232685	1					
ANR	4233047	IdentifierDeclStatement	"RListIter * iter , * iter2 ;"	476:2:14393:14416	4232685	0	True				
ANR	4233048	IdentifierDecl	* iter		4232685	0					
ANR	4233049	IdentifierDeclType	RListIter *		4232685	0					
ANR	4233050	Identifier	iter		4232685	1					
ANR	4233051	IdentifierDecl	* iter2		4232685	1					
ANR	4233052	IdentifierDeclType	RListIter *		4232685	0					
ANR	4233053	Identifier	iter2		4232685	1					
ANR	4233054	IdentifierDeclStatement	"const char * tag , * flg ;"	477:2:14420:14441	4232685	1	True				
ANR	4233055	IdentifierDecl	* tag		4232685	0					
ANR	4233056	IdentifierDeclType	const char *		4232685	0					
ANR	4233057	Identifier	tag		4232685	1					
ANR	4233058	IdentifierDecl	* flg		4232685	1					
ANR	4233059	IdentifierDeclType	const char *		4232685	0					
ANR	4233060	Identifier	flg		4232685	1					
ANR	4233061	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	478:2:14445:14463	4232685	2	True				
ANR	4233062	IdentifierDecl	* pj = pj_new ( )		4232685	0					
ANR	4233063	IdentifierDeclType	PJ *		4232685	0					
ANR	4233064	Identifier	pj		4232685	1					
ANR	4233065	AssignmentExpression	* pj = pj_new ( )		4232685	2		=			
ANR	4233066	Identifier	pj		4232685	0					
ANR	4233067	CallExpression	pj_new ( )		4232685	1					
ANR	4233068	Callee	pj_new		4232685	0					
ANR	4233069	Identifier	pj_new		4232685	0					
ANR	4233070	ArgumentList			4232685	1					
ANR	4233071	ExpressionStatement	pj_o ( pj )	479:2:14467:14476	4232685	3	True				
ANR	4233072	CallExpression	pj_o ( pj )		4232685	0					
ANR	4233073	Callee	pj_o		4232685	0					
ANR	4233074	Identifier	pj_o		4232685	0					
ANR	4233075	ArgumentList	pj		4232685	1					
ANR	4233076	Argument	pj		4232685	0					
ANR	4233077	Identifier	pj		4232685	0					
ANR	4233078	IdentifierDeclStatement	"RList * list = r_flag_tags_list ( core -> flags , NULL ) ;"	480:2:14480:14530	4232685	4	True				
ANR	4233079	IdentifierDecl	"* list = r_flag_tags_list ( core -> flags , NULL )"		4232685	0					
ANR	4233080	IdentifierDeclType	RList *		4232685	0					
ANR	4233081	Identifier	list		4232685	1					
ANR	4233082	AssignmentExpression	"* list = r_flag_tags_list ( core -> flags , NULL )"		4232685	2		=			
ANR	4233083	Identifier	list		4232685	0					
ANR	4233084	CallExpression	"r_flag_tags_list ( core -> flags , NULL )"		4232685	1					
ANR	4233085	Callee	r_flag_tags_list		4232685	0					
ANR	4233086	Identifier	r_flag_tags_list		4232685	0					
ANR	4233087	ArgumentList	core -> flags		4232685	1					
ANR	4233088	Argument	core -> flags		4232685	0					
ANR	4233089	PtrMemberAccess	core -> flags		4232685	0					
ANR	4233090	Identifier	core		4232685	0					
ANR	4233091	Identifier	flags		4232685	1					
ANR	4233092	Argument	NULL		4232685	1					
ANR	4233093	Identifier	NULL		4232685	0					
ANR	4233094	Statement	r_list_foreach	481:2:14534:14547	4232685	5	True				
ANR	4233095	Statement	(	481:17:14549:14549	4232685	6	True				
ANR	4233096	Statement	list	481:18:14550:14553	4232685	7	True				
ANR	4233097	Statement	","	481:22:14554:14554	4232685	8	True				
ANR	4233098	Statement	iter	481:24:14556:14559	4232685	9	True				
ANR	4233099	Statement	","	481:28:14560:14560	4232685	10	True				
ANR	4233100	Statement	tag	481:30:14562:14564	4232685	11	True				
ANR	4233101	Statement	)	481:33:14565:14565	4232685	12	True				
ANR	4233102	CompoundStatement		62:3:1838:1888	4232685	13					
ANR	4233103	ExpressionStatement	"pj_k ( pj , tag )"	482:3:14572:14586	4232685	0	True				
ANR	4233104	CallExpression	"pj_k ( pj , tag )"		4232685	0					
ANR	4233105	Callee	pj_k		4232685	0					
ANR	4233106	Identifier	pj_k		4232685	0					
ANR	4233107	ArgumentList	pj		4232685	1					
ANR	4233108	Argument	pj		4232685	0					
ANR	4233109	Identifier	pj		4232685	0					
ANR	4233110	Argument	tag		4232685	1					
ANR	4233111	Identifier	tag		4232685	0					
ANR	4233112	ExpressionStatement	pj_a ( pj )	483:3:14591:14600	4232685	1	True				
ANR	4233113	CallExpression	pj_a ( pj )		4232685	0					
ANR	4233114	Callee	pj_a		4232685	0					
ANR	4233115	Identifier	pj_a		4232685	0					
ANR	4233116	ArgumentList	pj		4232685	1					
ANR	4233117	Argument	pj		4232685	0					
ANR	4233118	Identifier	pj		4232685	0					
ANR	4233119	IdentifierDeclStatement	"RList * flags = r_flag_tags_list ( core -> flags , tag ) ;"	484:3:14605:14655	4232685	2	True				
ANR	4233120	IdentifierDecl	"* flags = r_flag_tags_list ( core -> flags , tag )"		4232685	0					
ANR	4233121	IdentifierDeclType	RList *		4232685	0					
ANR	4233122	Identifier	flags		4232685	1					
ANR	4233123	AssignmentExpression	"* flags = r_flag_tags_list ( core -> flags , tag )"		4232685	2		=			
ANR	4233124	Identifier	flags		4232685	0					
ANR	4233125	CallExpression	"r_flag_tags_list ( core -> flags , tag )"		4232685	1					
ANR	4233126	Callee	r_flag_tags_list		4232685	0					
ANR	4233127	Identifier	r_flag_tags_list		4232685	0					
ANR	4233128	ArgumentList	core -> flags		4232685	1					
ANR	4233129	Argument	core -> flags		4232685	0					
ANR	4233130	PtrMemberAccess	core -> flags		4232685	0					
ANR	4233131	Identifier	core		4232685	0					
ANR	4233132	Identifier	flags		4232685	1					
ANR	4233133	Argument	tag		4232685	1					
ANR	4233134	Identifier	tag		4232685	0					
ANR	4233135	Statement	r_list_foreach	485:3:14660:14673	4232685	3	True				
ANR	4233136	Statement	(	485:18:14675:14675	4232685	4	True				
ANR	4233137	Statement	flags	485:19:14676:14680	4232685	5	True				
ANR	4233138	Statement	","	485:24:14681:14681	4232685	6	True				
ANR	4233139	Statement	iter2	485:26:14683:14687	4232685	7	True				
ANR	4233140	Statement	","	485:31:14688:14688	4232685	8	True				
ANR	4233141	Statement	flg	485:33:14690:14692	4232685	9	True				
ANR	4233142	Statement	)	485:36:14693:14693	4232685	10	True				
ANR	4233143	CompoundStatement		63:38:1928:1928	4232685	11					
ANR	4233144	ExpressionStatement	"pj_s ( pj , flg )"	486:4:14701:14715	4232685	0	True				
ANR	4233145	CallExpression	"pj_s ( pj , flg )"		4232685	0					
ANR	4233146	Callee	pj_s		4232685	0					
ANR	4233147	Identifier	pj_s		4232685	0					
ANR	4233148	ArgumentList	pj		4232685	1					
ANR	4233149	Argument	pj		4232685	0					
ANR	4233150	Identifier	pj		4232685	0					
ANR	4233151	Argument	flg		4232685	1					
ANR	4233152	Identifier	flg		4232685	0					
ANR	4233153	ExpressionStatement	pj_end ( pj )	488:3:14725:14736	4232685	12	True				
ANR	4233154	CallExpression	pj_end ( pj )		4232685	0					
ANR	4233155	Callee	pj_end		4232685	0					
ANR	4233156	Identifier	pj_end		4232685	0					
ANR	4233157	ArgumentList	pj		4232685	1					
ANR	4233158	Argument	pj		4232685	0					
ANR	4233159	Identifier	pj		4232685	0					
ANR	4233160	ExpressionStatement	pj_end ( pj )	490:2:14744:14755	4232685	14	True				
ANR	4233161	CallExpression	pj_end ( pj )		4232685	0					
ANR	4233162	Callee	pj_end		4232685	0					
ANR	4233163	Identifier	pj_end		4232685	0					
ANR	4233164	ArgumentList	pj		4232685	1					
ANR	4233165	Argument	pj		4232685	0					
ANR	4233166	Identifier	pj		4232685	0					
ANR	4233167	ExpressionStatement	r_list_free ( list )	491:2:14759:14777	4232685	15	True				
ANR	4233168	CallExpression	r_list_free ( list )		4232685	0					
ANR	4233169	Callee	r_list_free		4232685	0					
ANR	4233170	Identifier	r_list_free		4232685	0					
ANR	4233171	ArgumentList	list		4232685	1					
ANR	4233172	Argument	list		4232685	0					
ANR	4233173	Identifier	list		4232685	0					
ANR	4233174	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"	492:2:14781:14819	4232685	16	True				
ANR	4233175	CallExpression	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"		4232685	0					
ANR	4233176	Callee	r_cons_printf		4232685	0					
ANR	4233177	Identifier	r_cons_printf		4232685	0					
ANR	4233178	ArgumentList	"""%s\\n"""		4232685	1					
ANR	4233179	Argument	"""%s\\n"""		4232685	0					
ANR	4233180	PrimaryExpression	"""%s\\n"""		4232685	0					
ANR	4233181	Argument	pj_string ( pj )		4232685	1					
ANR	4233182	CallExpression	pj_string ( pj )		4232685	0					
ANR	4233183	Callee	pj_string		4232685	0					
ANR	4233184	Identifier	pj_string		4232685	0					
ANR	4233185	ArgumentList	pj		4232685	1					
ANR	4233186	Argument	pj		4232685	0					
ANR	4233187	Identifier	pj		4232685	0					
ANR	4233188	ExpressionStatement	pj_free ( pj )	493:2:14823:14835	4232685	17	True				
ANR	4233189	CallExpression	pj_free ( pj )		4232685	0					
ANR	4233190	Callee	pj_free		4232685	0					
ANR	4233191	Identifier	pj_free		4232685	0					
ANR	4233192	ArgumentList	pj		4232685	1					
ANR	4233193	Argument	pj		4232685	0					
ANR	4233194	Identifier	pj		4232685	0					
ANR	4233195	ReturnStatement	return ;	494:2:14839:14845	4232685	18	True				
ANR	4233196	IdentifierDeclStatement	"char * arg1 = strchr ( arg , ' ' ) ;"	496:1:14851:14881	4232685	10	True				
ANR	4233197	IdentifierDecl	"* arg1 = strchr ( arg , ' ' )"		4232685	0					
ANR	4233198	IdentifierDeclType	char *		4232685	0					
ANR	4233199	Identifier	arg1		4232685	1					
ANR	4233200	AssignmentExpression	"* arg1 = strchr ( arg , ' ' )"		4232685	2		=			
ANR	4233201	Identifier	arg1		4232685	0					
ANR	4233202	CallExpression	"strchr ( arg , ' ' )"		4232685	1					
ANR	4233203	Callee	strchr		4232685	0					
ANR	4233204	Identifier	strchr		4232685	0					
ANR	4233205	ArgumentList	arg		4232685	1					
ANR	4233206	Argument	arg		4232685	0					
ANR	4233207	Identifier	arg		4232685	0					
ANR	4233208	Argument	' '		4232685	1					
ANR	4233209	PrimaryExpression	' '		4232685	0					
ANR	4233210	IfStatement	if ( arg1 )		4232685	11					
ANR	4233211	Condition	arg1	497:5:14888:14891	4232685	0	True				
ANR	4233212	Identifier	arg1		4232685	0					
ANR	4233213	CompoundStatement		77:2:2144:2185	4232685	1					
ANR	4233214	ExpressionStatement	* arg1 = 0	498:2:14898:14907	4232685	0	True				
ANR	4233215	AssignmentExpression	* arg1 = 0		4232685	0		=			
ANR	4233216	UnaryOperationExpression	* arg1		4232685	0					
ANR	4233217	UnaryOperator	*		4232685	0					
ANR	4233218	Identifier	arg1		4232685	1					
ANR	4233219	PrimaryExpression	0		4232685	1					
ANR	4233220	IdentifierDeclStatement	const char * a1 = r_str_trim_ro ( arg1 + 1 ) ;	499:2:14911:14952	4232685	1	True				
ANR	4233221	IdentifierDecl	* a1 = r_str_trim_ro ( arg1 + 1 )		4232685	0					
ANR	4233222	IdentifierDeclType	const char *		4232685	0					
ANR	4233223	Identifier	a1		4232685	1					
ANR	4233224	AssignmentExpression	* a1 = r_str_trim_ro ( arg1 + 1 )		4232685	2		=			
ANR	4233225	Identifier	a1		4232685	0					
ANR	4233226	CallExpression	r_str_trim_ro ( arg1 + 1 )		4232685	1					
ANR	4233227	Callee	r_str_trim_ro		4232685	0					
ANR	4233228	Identifier	r_str_trim_ro		4232685	0					
ANR	4233229	ArgumentList	arg1 + 1		4232685	1					
ANR	4233230	Argument	arg1 + 1		4232685	0					
ANR	4233231	AdditiveExpression	arg1 + 1		4232685	0		+			
ANR	4233232	Identifier	arg1		4232685	0					
ANR	4233233	PrimaryExpression	1		4232685	1					
ANR	4233234	ExpressionStatement	"r_flag_tags_set ( core -> flags , arg , a1 )"	500:2:14956:14994	4232685	2	True				
ANR	4233235	CallExpression	"r_flag_tags_set ( core -> flags , arg , a1 )"		4232685	0					
ANR	4233236	Callee	r_flag_tags_set		4232685	0					
ANR	4233237	Identifier	r_flag_tags_set		4232685	0					
ANR	4233238	ArgumentList	core -> flags		4232685	1					
ANR	4233239	Argument	core -> flags		4232685	0					
ANR	4233240	PtrMemberAccess	core -> flags		4232685	0					
ANR	4233241	Identifier	core		4232685	0					
ANR	4233242	Identifier	flags		4232685	1					
ANR	4233243	Argument	arg		4232685	1					
ANR	4233244	Identifier	arg		4232685	0					
ANR	4233245	Argument	a1		4232685	2					
ANR	4233246	Identifier	a1		4232685	0					
ANR	4233247	ElseStatement	else		4232685	0					
ANR	4233248	CompoundStatement		82:2:2279:2328	4232685	0					
ANR	4233249	IdentifierDeclStatement	RListIter * iter ;	502:2:15008:15023	4232685	0	True				
ANR	4233250	IdentifierDecl	* iter		4232685	0					
ANR	4233251	IdentifierDeclType	RListIter *		4232685	0					
ANR	4233252	Identifier	iter		4232685	1					
ANR	4233253	IdentifierDeclStatement	RFlagItem * flag ;	503:2:15027:15042	4232685	1	True				
ANR	4233254	IdentifierDecl	* flag		4232685	0					
ANR	4233255	IdentifierDeclType	RFlagItem *		4232685	0					
ANR	4233256	Identifier	flag		4232685	1					
ANR	4233257	IdentifierDeclStatement	"RList * flags = r_flag_tags_get ( core -> flags , arg ) ;"	504:2:15046:15095	4232685	2	True				
ANR	4233258	IdentifierDecl	"* flags = r_flag_tags_get ( core -> flags , arg )"		4232685	0					
ANR	4233259	IdentifierDeclType	RList *		4232685	0					
ANR	4233260	Identifier	flags		4232685	1					
ANR	4233261	AssignmentExpression	"* flags = r_flag_tags_get ( core -> flags , arg )"		4232685	2		=			
ANR	4233262	Identifier	flags		4232685	0					
ANR	4233263	CallExpression	"r_flag_tags_get ( core -> flags , arg )"		4232685	1					
ANR	4233264	Callee	r_flag_tags_get		4232685	0					
ANR	4233265	Identifier	r_flag_tags_get		4232685	0					
ANR	4233266	ArgumentList	core -> flags		4232685	1					
ANR	4233267	Argument	core -> flags		4232685	0					
ANR	4233268	PtrMemberAccess	core -> flags		4232685	0					
ANR	4233269	Identifier	core		4232685	0					
ANR	4233270	Identifier	flags		4232685	1					
ANR	4233271	Argument	arg		4232685	1					
ANR	4233272	Identifier	arg		4232685	0					
ANR	4233273	SwitchStatement	switch ( mode )		4232685	3					
ANR	4233274	Condition	mode	505:10:15107:15110	4232685	0	True				
ANR	4233275	Identifier	mode		4232685	0					
ANR	4233276	CompoundStatement		83:16:2346:2346	4232685	1					
ANR	4233277	Label	case 'n' :	506:2:15117:15125	4232685	0	True				
ANR	4233278	Statement	r_list_foreach	507:3:15130:15143	4232685	1	True				
ANR	4233279	Statement	(	507:18:15145:15145	4232685	2	True				
ANR	4233280	Statement	flags	507:19:15146:15150	4232685	3	True				
ANR	4233281	Statement	","	507:24:15151:15151	4232685	4	True				
ANR	4233282	Statement	iter	507:26:15153:15156	4232685	5	True				
ANR	4233283	Statement	","	507:30:15157:15157	4232685	6	True				
ANR	4233284	Statement	flag	507:32:15159:15162	4232685	7	True				
ANR	4233285	Statement	)	507:36:15163:15163	4232685	8	True				
ANR	4233286	CompoundStatement		85:38:2398:2398	4232685	9					
ANR	4233287	Statement	r_cons_printf	509:4:15228:15240	4232685	0	True				
ANR	4233288	Statement	(	509:18:15242:15242	4232685	1	True				
ANR	4233289	Statement	"""0x%08"""	509:19:15243:15249	4232685	2	True				
ANR	4233290	Statement	PFMT64x	509:26:15250:15256	4232685	3	True				
ANR	4233291	Statement	"""  %s\\n"""	509:33:15257:15264	4232685	4	True				
ANR	4233292	Statement	","	509:41:15265:15265	4232685	5	True				
ANR	4233293	Statement	flag	509:43:15267:15270	4232685	6	True				
ANR	4233294	Statement	->	509:47:15271:15272	4232685	7	True				
ANR	4233295	Statement	offset	509:49:15273:15278	4232685	8	True				
ANR	4233296	Statement	","	509:55:15279:15279	4232685	9	True				
ANR	4233297	Statement	flag	509:57:15281:15284	4232685	10	True				
ANR	4233298	Statement	->	509:61:15285:15286	4232685	11	True				
ANR	4233299	Statement	name	509:63:15287:15290	4232685	12	True				
ANR	4233300	Statement	)	509:67:15291:15291	4232685	13	True				
ANR	4233301	ExpressionStatement		509:68:15292:15292	4232685	14	True				
ANR	4233302	BreakStatement	break ;	511:3:15302:15307	4232685	10	True				
ANR	4233303	Label	default :	512:2:15311:15318	4232685	11	True				
ANR	4233304	Identifier	default		4232685	0					
ANR	4233305	Statement	r_list_foreach	513:3:15323:15336	4232685	12	True				
ANR	4233306	Statement	(	513:18:15338:15338	4232685	13	True				
ANR	4233307	Statement	flags	513:19:15339:15343	4232685	14	True				
ANR	4233308	Statement	","	513:24:15344:15344	4232685	15	True				
ANR	4233309	Statement	iter	513:26:15346:15349	4232685	16	True				
ANR	4233310	Statement	","	513:30:15350:15350	4232685	17	True				
ANR	4233311	Statement	flag	513:32:15352:15355	4232685	18	True				
ANR	4233312	Statement	)	513:36:15356:15356	4232685	19	True				
ANR	4233313	CompoundStatement		91:38:2591:2591	4232685	20					
ANR	4233314	Statement	r_cons_printf	514:4:15364:15376	4232685	0	True				
ANR	4233315	Statement	(	514:18:15378:15378	4232685	1	True				
ANR	4233316	Statement	"""0x%08"""	514:19:15379:15385	4232685	2	True				
ANR	4233317	Statement	PFMT64x	514:26:15386:15392	4232685	3	True				
ANR	4233318	Statement	"""\\n"""	514:33:15393:15396	4232685	4	True				
ANR	4233319	Statement	","	514:37:15397:15397	4232685	5	True				
ANR	4233320	Statement	flag	514:39:15399:15402	4232685	6	True				
ANR	4233321	Statement	->	514:43:15403:15404	4232685	7	True				
ANR	4233322	Statement	offset	514:45:15405:15410	4232685	8	True				
ANR	4233323	Statement	)	514:51:15411:15411	4232685	9	True				
ANR	4233324	ExpressionStatement		514:52:15412:15412	4232685	10	True				
ANR	4233325	BreakStatement	break ;	516:3:15422:15427	4232685	21	True				
ANR	4233326	ExpressionStatement	free ( inp )	519:1:15437:15447	4232685	12	True				
ANR	4233327	CallExpression	free ( inp )		4232685	0					
ANR	4233328	Callee	free		4232685	0					
ANR	4233329	Identifier	free		4232685	0					
ANR	4233330	ArgumentList	inp		4232685	1					
ANR	4233331	Argument	inp		4232685	0					
ANR	4233332	Identifier	inp		4232685	0					
ANR	4233333	ReturnType	static void		4232685	1					
ANR	4233334	Identifier	cmd_flag_tags		4232685	2					
ANR	4233335	ParameterList	"RCore * core , const char * input"		4232685	3					
ANR	4233336	Parameter	RCore * core	423:26:12734:12744	4232685	0	True				
ANR	4233337	ParameterType	RCore *		4232685	0					
ANR	4233338	Identifier	core		4232685	1					
ANR	4233339	Parameter	const char * input	423:39:12747:12763	4232685	1	True				
ANR	4233340	ParameterType	const char *		4232685	0					
ANR	4233341	Identifier	input		4232685	1					
ANR	4233342	CFGEntryNode	ENTRY		4232685		True				
ANR	4233343	CFGExitNode	EXIT		4232685		True				
ANR	4233344	Symbol	flag		4232685						
ANR	4233345	Symbol	pj_string		4232685						
ANR	4233346	Symbol	* input		4232685						
ANR	4233347	Symbol	* core		4232685						
ANR	4233348	Symbol	flags		4232685						
ANR	4233349	Symbol	strchr		4232685						
ANR	4233350	Symbol	IS_WHITESPACE		4232685						
ANR	4233351	Symbol	* arg1		4232685						
ANR	4233352	Symbol	* core -> flags		4232685						
ANR	4233353	Symbol	mode		4232685						
ANR	4233354	Symbol	arg		4232685						
ANR	4233355	Symbol	r_flag_tags_get		4232685						
ANR	4233356	Symbol	tag		4232685						
ANR	4233357	Symbol	sdb_fmt		4232685						
ANR	4233358	Symbol	* * core		4232685						
ANR	4233359	Symbol	flg		4232685						
ANR	4233360	Symbol	NULL		4232685						
ANR	4233361	Symbol	r_flag_tags_list		4232685						
ANR	4233362	Symbol	iter2		4232685						
ANR	4233363	Symbol	iter		4232685						
ANR	4233364	Symbol	inp		4232685						
ANR	4233365	Symbol	core -> flags		4232685						
ANR	4233366	Symbol	sdb_get		4232685						
ANR	4233367	Symbol	list		4232685						
ANR	4233368	Symbol	a1		4232685						
ANR	4233369	Symbol	core		4232685						
ANR	4233370	Symbol	input		4232685						
ANR	4233371	Symbol	arg1		4232685						
ANR	4233372	Symbol	core -> flags -> tags		4232685						
ANR	4233373	Symbol	r_str_trim_ro		4232685						
ANR	4233374	Symbol	pj		4232685						
ANR	4233375	Symbol	pj_new		4232685						
ANR	4233376	Symbol	strdup		4232685						
ANR	4233377	Symbol	* arg		4232685						
ANR	4233378	ClassDef	rename_flag_t	522:0:15452:15519							
ANR	4233379	DeclStmt									
ANR	4233380	Decl							RCore	RCore *	core
ANR	4233381	DeclStmt									
ANR	4233382	Decl							const char	const char *	pfx
ANR	4233383	DeclStmt									
ANR	4233384	Decl							int	int	count
ANR	4233385	Function	rename_flag_ordinal	528:0:15523:15812							
ANR	4233386	FunctionDef	"rename_flag_ordinal (RFlagItem * fi , void * user)"		4233385	0					
ANR	4233387	CompoundStatement		528:59:15582:15812	4233385	0					
ANR	4233388	IdentifierDeclStatement	struct rename_flag_t * u = ( struct rename_flag_t * ) user ;	529:1:15585:15639	4233385	0	True				
ANR	4233389	IdentifierDecl	* u = ( struct rename_flag_t * ) user		4233385	0					
ANR	4233390	IdentifierDeclType	struct rename_flag_t *		4233385	0					
ANR	4233391	Identifier	u		4233385	1					
ANR	4233392	AssignmentExpression	* u = ( struct rename_flag_t * ) user		4233385	2		=			
ANR	4233393	Identifier	u		4233385	0					
ANR	4233394	CastExpression	( struct rename_flag_t * ) user		4233385	1					
ANR	4233395	CastTarget	struct rename_flag_t *		4233385	0					
ANR	4233396	Identifier	user		4233385	1					
ANR	4233397	IdentifierDeclStatement	"char * newName = r_str_newf ( ""%s%d"" , u -> pfx , u -> count ++ ) ;"	530:1:15642:15697	4233385	1	True				
ANR	4233398	IdentifierDecl	"* newName = r_str_newf ( ""%s%d"" , u -> pfx , u -> count ++ )"		4233385	0					
ANR	4233399	IdentifierDeclType	char *		4233385	0					
ANR	4233400	Identifier	newName		4233385	1					
ANR	4233401	AssignmentExpression	"* newName = r_str_newf ( ""%s%d"" , u -> pfx , u -> count ++ )"		4233385	2		=			
ANR	4233402	Identifier	newName		4233385	0					
ANR	4233403	CallExpression	"r_str_newf ( ""%s%d"" , u -> pfx , u -> count ++ )"		4233385	1					
ANR	4233404	Callee	r_str_newf		4233385	0					
ANR	4233405	Identifier	r_str_newf		4233385	0					
ANR	4233406	ArgumentList	"""%s%d"""		4233385	1					
ANR	4233407	Argument	"""%s%d"""		4233385	0					
ANR	4233408	PrimaryExpression	"""%s%d"""		4233385	0					
ANR	4233409	Argument	u -> pfx		4233385	1					
ANR	4233410	PtrMemberAccess	u -> pfx		4233385	0					
ANR	4233411	Identifier	u		4233385	0					
ANR	4233412	Identifier	pfx		4233385	1					
ANR	4233413	Argument	u -> count ++		4233385	2					
ANR	4233414	PostIncDecOperationExpression	u -> count ++		4233385	0					
ANR	4233415	PtrMemberAccess	u -> count		4233385	0					
ANR	4233416	Identifier	u		4233385	0					
ANR	4233417	Identifier	count		4233385	1					
ANR	4233418	IncDec	++		4233385	1					
ANR	4233419	IfStatement	if ( ! newName )		4233385	2					
ANR	4233420	Condition	! newName	531:5:15704:15711	4233385	0	True				
ANR	4233421	UnaryOperationExpression	! newName		4233385	0					
ANR	4233422	UnaryOperator	!		4233385	0					
ANR	4233423	Identifier	newName		4233385	1					
ANR	4233424	CompoundStatement		4:15:131:131	4233385	1					
ANR	4233425	ReturnStatement	return false ;	532:2:15718:15730	4233385	0	True				
ANR	4233426	Identifier	false		4233385	0					
ANR	4233427	ExpressionStatement	"r_flag_rename ( u -> core -> flags , fi , newName )"	534:1:15736:15779	4233385	3	True				
ANR	4233428	CallExpression	"r_flag_rename ( u -> core -> flags , fi , newName )"		4233385	0					
ANR	4233429	Callee	r_flag_rename		4233385	0					
ANR	4233430	Identifier	r_flag_rename		4233385	0					
ANR	4233431	ArgumentList	u -> core -> flags		4233385	1					
ANR	4233432	Argument	u -> core -> flags		4233385	0					
ANR	4233433	PtrMemberAccess	u -> core -> flags		4233385	0					
ANR	4233434	PtrMemberAccess	u -> core		4233385	0					
ANR	4233435	Identifier	u		4233385	0					
ANR	4233436	Identifier	core		4233385	1					
ANR	4233437	Identifier	flags		4233385	1					
ANR	4233438	Argument	fi		4233385	1					
ANR	4233439	Identifier	fi		4233385	0					
ANR	4233440	Argument	newName		4233385	2					
ANR	4233441	Identifier	newName		4233385	0					
ANR	4233442	ExpressionStatement	free ( newName )	535:1:15782:15796	4233385	4	True				
ANR	4233443	CallExpression	free ( newName )		4233385	0					
ANR	4233444	Callee	free		4233385	0					
ANR	4233445	Identifier	free		4233385	0					
ANR	4233446	ArgumentList	newName		4233385	1					
ANR	4233447	Argument	newName		4233385	0					
ANR	4233448	Identifier	newName		4233385	0					
ANR	4233449	ReturnStatement	return true ;	536:1:15799:15810	4233385	5	True				
ANR	4233450	Identifier	true		4233385	0					
ANR	4233451	ReturnType	static bool		4233385	1					
ANR	4233452	Identifier	rename_flag_ordinal		4233385	2					
ANR	4233453	ParameterList	"RFlagItem * fi , void * user"		4233385	3					
ANR	4233454	Parameter	RFlagItem * fi	528:32:15555:15567	4233385	0	True				
ANR	4233455	ParameterType	RFlagItem *		4233385	0					
ANR	4233456	Identifier	fi		4233385	1					
ANR	4233457	Parameter	void * user	528:47:15570:15579	4233385	1	True				
ANR	4233458	ParameterType	void *		4233385	0					
ANR	4233459	Identifier	user		4233385	1					
ANR	4233460	CFGEntryNode	ENTRY		4233385		True				
ANR	4233461	CFGExitNode	EXIT		4233385		True				
ANR	4233462	Symbol	u -> core		4233385						
ANR	4233463	Symbol	fi		4233385						
ANR	4233464	Symbol	false		4233385						
ANR	4233465	Symbol	u -> core -> flags		4233385						
ANR	4233466	Symbol	u -> pfx		4233385						
ANR	4233467	Symbol	r_str_newf		4233385						
ANR	4233468	Symbol	u -> count		4233385						
ANR	4233469	Symbol	newName		4233385						
ANR	4233470	Symbol	u		4233385						
ANR	4233471	Symbol	* * u		4233385						
ANR	4233472	Symbol	true		4233385						
ANR	4233473	Symbol	* u -> core		4233385						
ANR	4233474	Symbol	user		4233385						
ANR	4233475	Symbol	* u		4233385						
ANR	4233476	Function	flag_ordinals	539:0:15815:16144							
ANR	4233477	FunctionDef	"flag_ordinals (RCore * core , const char * str)"		4233476	0					
ANR	4233478	CompoundStatement		539:56:15871:16144	4233476	0					
ANR	4233479	IdentifierDeclStatement	const char * glob = r_str_trim_ro ( str ) ;	540:1:15874:15912	4233476	0	True				
ANR	4233480	IdentifierDecl	* glob = r_str_trim_ro ( str )		4233476	0					
ANR	4233481	IdentifierDeclType	const char *		4233476	0					
ANR	4233482	Identifier	glob		4233476	1					
ANR	4233483	AssignmentExpression	* glob = r_str_trim_ro ( str )		4233476	2		=			
ANR	4233484	Identifier	glob		4233476	0					
ANR	4233485	CallExpression	r_str_trim_ro ( str )		4233476	1					
ANR	4233486	Callee	r_str_trim_ro		4233476	0					
ANR	4233487	Identifier	r_str_trim_ro		4233476	0					
ANR	4233488	ArgumentList	str		4233476	1					
ANR	4233489	Argument	str		4233476	0					
ANR	4233490	Identifier	str		4233476	0					
ANR	4233491	IdentifierDeclStatement	char * pfx = strdup ( glob ) ;	541:1:15915:15940	4233476	1	True				
ANR	4233492	IdentifierDecl	* pfx = strdup ( glob )		4233476	0					
ANR	4233493	IdentifierDeclType	char *		4233476	0					
ANR	4233494	Identifier	pfx		4233476	1					
ANR	4233495	AssignmentExpression	* pfx = strdup ( glob )		4233476	2		=			
ANR	4233496	Identifier	pfx		4233476	0					
ANR	4233497	CallExpression	strdup ( glob )		4233476	1					
ANR	4233498	Callee	strdup		4233476	0					
ANR	4233499	Identifier	strdup		4233476	0					
ANR	4233500	ArgumentList	glob		4233476	1					
ANR	4233501	Argument	glob		4233476	0					
ANR	4233502	Identifier	glob		4233476	0					
ANR	4233503	IdentifierDeclStatement	"char * p = strchr ( pfx , '*' ) ;"	542:1:15943:15970	4233476	2	True				
ANR	4233504	IdentifierDecl	"* p = strchr ( pfx , '*' )"		4233476	0					
ANR	4233505	IdentifierDeclType	char *		4233476	0					
ANR	4233506	Identifier	p		4233476	1					
ANR	4233507	AssignmentExpression	"* p = strchr ( pfx , '*' )"		4233476	2		=			
ANR	4233508	Identifier	p		4233476	0					
ANR	4233509	CallExpression	"strchr ( pfx , '*' )"		4233476	1					
ANR	4233510	Callee	strchr		4233476	0					
ANR	4233511	Identifier	strchr		4233476	0					
ANR	4233512	ArgumentList	pfx		4233476	1					
ANR	4233513	Argument	pfx		4233476	0					
ANR	4233514	Identifier	pfx		4233476	0					
ANR	4233515	Argument	'*'		4233476	1					
ANR	4233516	PrimaryExpression	'*'		4233476	0					
ANR	4233517	IfStatement	if ( p )		4233476	3					
ANR	4233518	Condition	p	543:5:15977:15977	4233476	0	True				
ANR	4233519	Identifier	p		4233476	0					
ANR	4233520	CompoundStatement		5:8:108:108	4233476	1					
ANR	4233521	ExpressionStatement	* p = 0	544:2:15984:15990	4233476	0	True				
ANR	4233522	AssignmentExpression	* p = 0		4233476	0		=			
ANR	4233523	UnaryOperationExpression	* p		4233476	0					
ANR	4233524	UnaryOperator	*		4233476	0					
ANR	4233525	Identifier	p		4233476	1					
ANR	4233526	PrimaryExpression	0		4233476	1					
ANR	4233527	Statement	struct	547:1:15997:16002	4233476	4	True				
ANR	4233528	Statement	rename_flag_t	547:8:16004:16016	4233476	5	True				
ANR	4233529	Statement	u	547:22:16018:16018	4233476	6	True				
ANR	4233530	Statement	=	547:24:16020:16020	4233476	7	True				
ANR	4233531	CompoundStatement		9:26:150:150	4233476	8					
ANR	4233532	Statement	.	547:28:16024:16024	4233476	0	True				
ANR	4233533	Statement	core	547:29:16025:16028	4233476	1	True				
ANR	4233534	Statement	=	547:34:16030:16030	4233476	2	True				
ANR	4233535	Statement	core	547:36:16032:16035	4233476	3	True				
ANR	4233536	Statement	","	547:40:16036:16036	4233476	4	True				
ANR	4233537	Statement	.	547:42:16038:16038	4233476	5	True				
ANR	4233538	Statement	pfx	547:43:16039:16041	4233476	6	True				
ANR	4233539	Statement	=	547:47:16043:16043	4233476	7	True				
ANR	4233540	Statement	pfx	547:49:16045:16047	4233476	8	True				
ANR	4233541	Statement	","	547:52:16048:16048	4233476	9	True				
ANR	4233542	Statement	.	547:54:16050:16050	4233476	10	True				
ANR	4233543	Statement	count	547:55:16051:16055	4233476	11	True				
ANR	4233544	Statement	=	547:61:16057:16057	4233476	12	True				
ANR	4233545	Statement	0	547:63:16059:16059	4233476	13	True				
ANR	4233546	ExpressionStatement		547:66:16062:16062	4233476	9	True				
ANR	4233547	ExpressionStatement	"r_flag_foreach_glob ( core -> flags , glob , rename_flag_ordinal , & u )"	548:1:16065:16129	4233476	10	True				
ANR	4233548	CallExpression	"r_flag_foreach_glob ( core -> flags , glob , rename_flag_ordinal , & u )"		4233476	0					
ANR	4233549	Callee	r_flag_foreach_glob		4233476	0					
ANR	4233550	Identifier	r_flag_foreach_glob		4233476	0					
ANR	4233551	ArgumentList	core -> flags		4233476	1					
ANR	4233552	Argument	core -> flags		4233476	0					
ANR	4233553	PtrMemberAccess	core -> flags		4233476	0					
ANR	4233554	Identifier	core		4233476	0					
ANR	4233555	Identifier	flags		4233476	1					
ANR	4233556	Argument	glob		4233476	1					
ANR	4233557	Identifier	glob		4233476	0					
ANR	4233558	Argument	rename_flag_ordinal		4233476	2					
ANR	4233559	Identifier	rename_flag_ordinal		4233476	0					
ANR	4233560	Argument	& u		4233476	3					
ANR	4233561	UnaryOperationExpression	& u		4233476	0					
ANR	4233562	UnaryOperator	&		4233476	0					
ANR	4233563	Identifier	u		4233476	1					
ANR	4233564	ExpressionStatement	free ( pfx )	549:1:16132:16142	4233476	11	True				
ANR	4233565	CallExpression	free ( pfx )		4233476	0					
ANR	4233566	Callee	free		4233476	0					
ANR	4233567	Identifier	free		4233476	0					
ANR	4233568	ArgumentList	pfx		4233476	1					
ANR	4233569	Argument	pfx		4233476	0					
ANR	4233570	Identifier	pfx		4233476	0					
ANR	4233571	ReturnType	static void		4233476	1					
ANR	4233572	Identifier	flag_ordinals		4233476	2					
ANR	4233573	ParameterList	"RCore * core , const char * str"		4233476	3					
ANR	4233574	Parameter	RCore * core	539:26:15841:15851	4233476	0	True				
ANR	4233575	ParameterType	RCore *		4233476	0					
ANR	4233576	Identifier	core		4233476	1					
ANR	4233577	Parameter	const char * str	539:39:15854:15868	4233476	1	True				
ANR	4233578	ParameterType	const char *		4233476	0					
ANR	4233579	Identifier	str		4233476	1					
ANR	4233580	CFGEntryNode	ENTRY		4233476		True				
ANR	4233581	CFGExitNode	EXIT		4233476		True				
ANR	4233582	Symbol	pfx		4233476						
ANR	4233583	Symbol	rename_flag_ordinal		4233476						
ANR	4233584	Symbol	glob		4233476						
ANR	4233585	Symbol	* core		4233476						
ANR	4233586	Symbol	strchr		4233476						
ANR	4233587	Symbol	core -> flags		4233476						
ANR	4233588	Symbol	str		4233476						
ANR	4233589	Symbol	p		4233476						
ANR	4233590	Symbol	core		4233476						
ANR	4233591	Symbol	r_str_trim_ro		4233476						
ANR	4233592	Symbol	* p		4233476						
ANR	4233593	Symbol	strdup		4233476						
ANR	4233594	Symbol	& u		4233476						
ANR	4233595	Function	cmpflag	552:0:16147:16285							
ANR	4233596	FunctionDef	"cmpflag (const void * _a , const void * _b)"		4233595	0					
ANR	4233597	CompoundStatement		552:51:16198:16285	4233595	0					
ANR	4233598	IdentifierDeclStatement	"const RFlagItem * flag1 = _a , * flag2 = _b ;"	553:1:16201:16242	4233595	0	True				
ANR	4233599	IdentifierDecl	* flag1 = _a		4233595	0					
ANR	4233600	IdentifierDeclType	const RFlagItem *		4233595	0					
ANR	4233601	Identifier	flag1		4233595	1					
ANR	4233602	AssignmentExpression	* flag1 = _a		4233595	2		=			
ANR	4233603	Identifier	_a		4233595	0					
ANR	4233604	Identifier	_a		4233595	1					
ANR	4233605	IdentifierDecl	* flag2 = _b		4233595	1					
ANR	4233606	IdentifierDeclType	const RFlagItem *		4233595	0					
ANR	4233607	Identifier	flag2		4233595	1					
ANR	4233608	AssignmentExpression	* flag2 = _b		4233595	2		=			
ANR	4233609	Identifier	_b		4233595	0					
ANR	4233610	Identifier	_b		4233595	1					
ANR	4233611	ReturnStatement	return ( flag1 -> offset - flag2 -> offset ) ;	554:1:16245:16283	4233595	1	True				
ANR	4233612	AdditiveExpression	flag1 -> offset - flag2 -> offset		4233595	0		-			
ANR	4233613	PtrMemberAccess	flag1 -> offset		4233595	0					
ANR	4233614	Identifier	flag1		4233595	0					
ANR	4233615	Identifier	offset		4233595	1					
ANR	4233616	PtrMemberAccess	flag2 -> offset		4233595	1					
ANR	4233617	Identifier	flag2		4233595	0					
ANR	4233618	Identifier	offset		4233595	1					
ANR	4233619	ReturnType	static int		4233595	1					
ANR	4233620	Identifier	cmpflag		4233595	2					
ANR	4233621	ParameterList	"const void * _a , const void * _b"		4233595	3					
ANR	4233622	Parameter	const void * _a	552:19:16166:16179	4233595	0	True				
ANR	4233623	ParameterType	const void *		4233595	0					
ANR	4233624	Identifier	_a		4233595	1					
ANR	4233625	Parameter	const void * _b	552:35:16182:16195	4233595	1	True				
ANR	4233626	ParameterType	const void *		4233595	0					
ANR	4233627	Identifier	_b		4233595	1					
ANR	4233628	CFGEntryNode	ENTRY		4233595		True				
ANR	4233629	CFGExitNode	EXIT		4233595		True				
ANR	4233630	Symbol	* flag2		4233595						
ANR	4233631	Symbol	_a		4233595						
ANR	4233632	Symbol	_b		4233595						
ANR	4233633	Symbol	flag1 -> offset		4233595						
ANR	4233634	Symbol	flag2		4233595						
ANR	4233635	Symbol	flag1		4233595						
ANR	4233636	Symbol	flag2 -> offset		4233595						
ANR	4233637	Symbol	* flag1		4233595						
ANR	4233638	ClassDef	find_flag_t	557:0:16288:16336							
ANR	4233639	DeclStmt									
ANR	4233640	Decl							RFlagItem	RFlagItem *	win
ANR	4233641	DeclStmt									
ANR	4233642	Decl							ut64	ut64	at
ANR	4233643	Function	find_flag_after	562:0:16340:16561							
ANR	4233644	FunctionDef	"find_flag_after (RFlagItem * flag , void * user)"		4233643	0					
ANR	4233645	CompoundStatement		562:57:16397:16561	4233643	0					
ANR	4233646	IdentifierDeclStatement	struct find_flag_t * u = ( struct find_flag_t * ) user ;	563:1:16400:16450	4233643	0	True				
ANR	4233647	IdentifierDecl	* u = ( struct find_flag_t * ) user		4233643	0					
ANR	4233648	IdentifierDeclType	struct find_flag_t *		4233643	0					
ANR	4233649	Identifier	u		4233643	1					
ANR	4233650	AssignmentExpression	* u = ( struct find_flag_t * ) user		4233643	2		=			
ANR	4233651	Identifier	u		4233643	0					
ANR	4233652	CastExpression	( struct find_flag_t * ) user		4233643	1					
ANR	4233653	CastTarget	struct find_flag_t *		4233643	0					
ANR	4233654	Identifier	user		4233643	1					
ANR	4233655	IfStatement	if ( flag -> offset > u -> at && ( ! u -> win || flag -> offset < u -> win -> offset ) )		4233643	1					
ANR	4233656	Condition	flag -> offset > u -> at && ( ! u -> win || flag -> offset < u -> win -> offset )	564:5:16457:16522	4233643	0	True				
ANR	4233657	AndExpression	flag -> offset > u -> at && ( ! u -> win || flag -> offset < u -> win -> offset )		4233643	0		&&			
ANR	4233658	RelationalExpression	flag -> offset > u -> at		4233643	0		>			
ANR	4233659	PtrMemberAccess	flag -> offset		4233643	0					
ANR	4233660	Identifier	flag		4233643	0					
ANR	4233661	Identifier	offset		4233643	1					
ANR	4233662	PtrMemberAccess	u -> at		4233643	1					
ANR	4233663	Identifier	u		4233643	0					
ANR	4233664	Identifier	at		4233643	1					
ANR	4233665	OrExpression	! u -> win || flag -> offset < u -> win -> offset		4233643	1		||			
ANR	4233666	UnaryOperationExpression	! u -> win		4233643	0					
ANR	4233667	UnaryOperator	!		4233643	0					
ANR	4233668	PtrMemberAccess	u -> win		4233643	1					
ANR	4233669	Identifier	u		4233643	0					
ANR	4233670	Identifier	win		4233643	1					
ANR	4233671	RelationalExpression	flag -> offset < u -> win -> offset		4233643	1		<			
ANR	4233672	PtrMemberAccess	flag -> offset		4233643	0					
ANR	4233673	Identifier	flag		4233643	0					
ANR	4233674	Identifier	offset		4233643	1					
ANR	4233675	PtrMemberAccess	u -> win -> offset		4233643	1					
ANR	4233676	PtrMemberAccess	u -> win		4233643	0					
ANR	4233677	Identifier	u		4233643	0					
ANR	4233678	Identifier	win		4233643	1					
ANR	4233679	Identifier	offset		4233643	1					
ANR	4233680	CompoundStatement		3:73:127:127	4233643	1					
ANR	4233681	ExpressionStatement	u -> win = flag	565:2:16529:16542	4233643	0	True				
ANR	4233682	AssignmentExpression	u -> win = flag		4233643	0		=			
ANR	4233683	PtrMemberAccess	u -> win		4233643	0					
ANR	4233684	Identifier	u		4233643	0					
ANR	4233685	Identifier	win		4233643	1					
ANR	4233686	Identifier	flag		4233643	1					
ANR	4233687	ReturnStatement	return true ;	567:1:16548:16559	4233643	2	True				
ANR	4233688	Identifier	true		4233643	0					
ANR	4233689	ReturnType	static bool		4233643	1					
ANR	4233690	Identifier	find_flag_after		4233643	2					
ANR	4233691	ParameterList	"RFlagItem * flag , void * user"		4233643	3					
ANR	4233692	Parameter	RFlagItem * flag	562:28:16368:16382	4233643	0	True				
ANR	4233693	ParameterType	RFlagItem *		4233643	0					
ANR	4233694	Identifier	flag		4233643	1					
ANR	4233695	Parameter	void * user	562:45:16385:16394	4233643	1	True				
ANR	4233696	ParameterType	void *		4233643	0					
ANR	4233697	Identifier	user		4233643	1					
ANR	4233698	CFGEntryNode	ENTRY		4233643		True				
ANR	4233699	CFGExitNode	EXIT		4233643		True				
ANR	4233700	Symbol	* u -> win		4233643						
ANR	4233701	Symbol	flag		4233643						
ANR	4233702	Symbol	u		4233643						
ANR	4233703	Symbol	* * u		4233643						
ANR	4233704	Symbol	true		4233643						
ANR	4233705	Symbol	u -> win -> offset		4233643						
ANR	4233706	Symbol	flag -> offset		4233643						
ANR	4233707	Symbol	* flag		4233643						
ANR	4233708	Symbol	user		4233643						
ANR	4233709	Symbol	u -> win		4233643						
ANR	4233710	Symbol	u -> at		4233643						
ANR	4233711	Symbol	* u		4233643						
ANR	4233712	Function	find_flag_after_foreach	570:0:16564:16888							
ANR	4233713	FunctionDef	"find_flag_after_foreach (RFlagItem * flag , void * user)"		4233712	0					
ANR	4233714	CompoundStatement		570:65:16629:16888	4233712	0					
ANR	4233715	IfStatement	if ( flag -> size != 0 )		4233712	0					
ANR	4233716	Condition	flag -> size != 0	571:5:16636:16650	4233712	0	True				
ANR	4233717	EqualityExpression	flag -> size != 0		4233712	0		!=			
ANR	4233718	PtrMemberAccess	flag -> size		4233712	0					
ANR	4233719	Identifier	flag		4233712	0					
ANR	4233720	Identifier	size		4233712	1					
ANR	4233721	PrimaryExpression	0		4233712	1					
ANR	4233722	CompoundStatement		2:22:23:23	4233712	1					
ANR	4233723	ReturnStatement	return true ;	572:2:16657:16668	4233712	0	True				
ANR	4233724	Identifier	true		4233712	0					
ANR	4233725	IdentifierDeclStatement	RFlag * flags = ( RFlag * ) user ;	575:1:16675:16703	4233712	1	True				
ANR	4233726	IdentifierDecl	* flags = ( RFlag * ) user		4233712	0					
ANR	4233727	IdentifierDeclType	RFlag *		4233712	0					
ANR	4233728	Identifier	flags		4233712	1					
ANR	4233729	AssignmentExpression	* flags = ( RFlag * ) user		4233712	2		=			
ANR	4233730	Identifier	flags		4233712	0					
ANR	4233731	CastExpression	( RFlag * ) user		4233712	1					
ANR	4233732	CastTarget	RFlag *		4233712	0					
ANR	4233733	Identifier	user		4233712	1					
ANR	4233734	Statement	struct	576:1:16706:16711	4233712	2	True				
ANR	4233735	Statement	find_flag_t	576:8:16713:16723	4233712	3	True				
ANR	4233736	Statement	u	576:20:16725:16725	4233712	4	True				
ANR	4233737	Statement	=	576:22:16727:16727	4233712	5	True				
ANR	4233738	CompoundStatement		7:24:99:99	4233712	6					
ANR	4233739	Statement	.	576:26:16731:16731	4233712	0	True				
ANR	4233740	Statement	win	576:27:16732:16734	4233712	1	True				
ANR	4233741	Statement	=	576:31:16736:16736	4233712	2	True				
ANR	4233742	Statement	NULL	576:33:16738:16741	4233712	3	True				
ANR	4233743	Statement	","	576:37:16742:16742	4233712	4	True				
ANR	4233744	Statement	.	576:39:16744:16744	4233712	5	True				
ANR	4233745	Statement	at	576:40:16745:16746	4233712	6	True				
ANR	4233746	Statement	=	576:43:16748:16748	4233712	7	True				
ANR	4233747	Statement	flag	576:45:16750:16753	4233712	8	True				
ANR	4233748	Statement	->	576:49:16754:16755	4233712	9	True				
ANR	4233749	Statement	offset	576:51:16756:16761	4233712	10	True				
ANR	4233750	ExpressionStatement		576:59:16764:16764	4233712	7	True				
ANR	4233751	ExpressionStatement	"r_flag_foreach ( flags , find_flag_after , & u )"	577:1:16767:16810	4233712	8	True				
ANR	4233752	CallExpression	"r_flag_foreach ( flags , find_flag_after , & u )"		4233712	0					
ANR	4233753	Callee	r_flag_foreach		4233712	0					
ANR	4233754	Identifier	r_flag_foreach		4233712	0					
ANR	4233755	ArgumentList	flags		4233712	1					
ANR	4233756	Argument	flags		4233712	0					
ANR	4233757	Identifier	flags		4233712	0					
ANR	4233758	Argument	find_flag_after		4233712	1					
ANR	4233759	Identifier	find_flag_after		4233712	0					
ANR	4233760	Argument	& u		4233712	2					
ANR	4233761	UnaryOperationExpression	& u		4233712	0					
ANR	4233762	UnaryOperator	&		4233712	0					
ANR	4233763	Identifier	u		4233712	1					
ANR	4233764	IfStatement	if ( u . win )		4233712	9					
ANR	4233765	Condition	u . win	578:5:16817:16821	4233712	0	True				
ANR	4233766	MemberAccess	u . win		4233712	0					
ANR	4233767	Identifier	u		4233712	0					
ANR	4233768	Identifier	win		4233712	1					
ANR	4233769	CompoundStatement		9:12:194:194	4233712	1					
ANR	4233770	ExpressionStatement	flag -> size = u . win -> offset - flag -> offset	579:2:16828:16869	4233712	0	True				
ANR	4233771	AssignmentExpression	flag -> size = u . win -> offset - flag -> offset		4233712	0		=			
ANR	4233772	PtrMemberAccess	flag -> size		4233712	0					
ANR	4233773	Identifier	flag		4233712	0					
ANR	4233774	Identifier	size		4233712	1					
ANR	4233775	AdditiveExpression	u . win -> offset - flag -> offset		4233712	1		-			
ANR	4233776	PtrMemberAccess	u . win -> offset		4233712	0					
ANR	4233777	MemberAccess	u . win		4233712	0					
ANR	4233778	Identifier	u		4233712	0					
ANR	4233779	Identifier	win		4233712	1					
ANR	4233780	Identifier	offset		4233712	1					
ANR	4233781	PtrMemberAccess	flag -> offset		4233712	1					
ANR	4233782	Identifier	flag		4233712	0					
ANR	4233783	Identifier	offset		4233712	1					
ANR	4233784	ReturnStatement	return true ;	581:1:16875:16886	4233712	10	True				
ANR	4233785	Identifier	true		4233712	0					
ANR	4233786	ReturnType	static bool		4233712	1					
ANR	4233787	Identifier	find_flag_after_foreach		4233712	2					
ANR	4233788	ParameterList	"RFlagItem * flag , void * user"		4233712	3					
ANR	4233789	Parameter	RFlagItem * flag	570:36:16600:16614	4233712	0	True				
ANR	4233790	ParameterType	RFlagItem *		4233712	0					
ANR	4233791	Identifier	flag		4233712	1					
ANR	4233792	Parameter	void * user	570:53:16617:16626	4233712	1	True				
ANR	4233793	ParameterType	void *		4233712	0					
ANR	4233794	Identifier	user		4233712	1					
ANR	4233795	CFGEntryNode	ENTRY		4233712		True				
ANR	4233796	CFGExitNode	EXIT		4233712		True				
ANR	4233797	Symbol	flag		4233712						
ANR	4233798	Symbol	find_flag_after		4233712						
ANR	4233799	Symbol	* u . win		4233712						
ANR	4233800	Symbol	flags		4233712						
ANR	4233801	Symbol	u . win -> offset		4233712						
ANR	4233802	Symbol	u . win		4233712						
ANR	4233803	Symbol	u		4233712						
ANR	4233804	Symbol	true		4233712						
ANR	4233805	Symbol	& u		4233712						
ANR	4233806	Symbol	flag -> offset		4233712						
ANR	4233807	Symbol	* flag		4233712						
ANR	4233808	Symbol	user		4233712						
ANR	4233809	Symbol	flag -> size		4233712						
ANR	4233810	Symbol	* u		4233712						
ANR	4233811	Function	adjust_offset	584:0:16891:17013							
ANR	4233812	FunctionDef	"adjust_offset (RFlagItem * flag , void * user)"		4233811	0					
ANR	4233813	CompoundStatement		584:55:16946:17013	4233811	0					
ANR	4233814	IdentifierDeclStatement	st64 base = * ( st64 * ) user ;	585:1:16949:16974	4233811	0	True				
ANR	4233815	IdentifierDecl	base = * ( st64 * ) user		4233811	0					
ANR	4233816	IdentifierDeclType	st64		4233811	0					
ANR	4233817	Identifier	base		4233811	1					
ANR	4233818	AssignmentExpression	base = * ( st64 * ) user		4233811	2		=			
ANR	4233819	Identifier	base		4233811	0					
ANR	4233820	UnaryOperationExpression	* ( st64 * ) user		4233811	1					
ANR	4233821	UnaryOperator	*		4233811	0					
ANR	4233822	CastExpression	( st64 * ) user		4233811	1					
ANR	4233823	CastTarget	st64 *		4233811	0					
ANR	4233824	Identifier	user		4233811	1					
ANR	4233825	ExpressionStatement	flag -> offset += base	586:1:16977:16997	4233811	1	True				
ANR	4233826	AssignmentExpression	flag -> offset += base		4233811	0		+=			
ANR	4233827	PtrMemberAccess	flag -> offset		4233811	0					
ANR	4233828	Identifier	flag		4233811	0					
ANR	4233829	Identifier	offset		4233811	1					
ANR	4233830	Identifier	base		4233811	1					
ANR	4233831	ReturnStatement	return true ;	587:1:17000:17011	4233811	2	True				
ANR	4233832	Identifier	true		4233811	0					
ANR	4233833	ReturnType	static bool		4233811	1					
ANR	4233834	Identifier	adjust_offset		4233811	2					
ANR	4233835	ParameterList	"RFlagItem * flag , void * user"		4233811	3					
ANR	4233836	Parameter	RFlagItem * flag	584:26:16917:16931	4233811	0	True				
ANR	4233837	ParameterType	RFlagItem *		4233811	0					
ANR	4233838	Identifier	flag		4233811	1					
ANR	4233839	Parameter	void * user	584:43:16934:16943	4233811	1	True				
ANR	4233840	ParameterType	void *		4233811	0					
ANR	4233841	Identifier	user		4233811	1					
ANR	4233842	CFGEntryNode	ENTRY		4233811		True				
ANR	4233843	CFGExitNode	EXIT		4233811		True				
ANR	4233844	Symbol	flag		4233811						
ANR	4233845	Symbol	* user		4233811						
ANR	4233846	Symbol	true		4233811						
ANR	4233847	Symbol	flag -> offset		4233811						
ANR	4233848	Symbol	* flag		4233811						
ANR	4233849	Symbol	user		4233811						
ANR	4233850	Symbol	* ( st64 * ) user		4233811						
ANR	4233851	Symbol	base		4233811						
ANR	4233852	Function	print_space_stack	590:0:17016:17606							
ANR	4233853	FunctionDef	"print_space_stack (RFlag * f , int ordinal , const char * name , bool selected , PJ * pj , int mode)"		4233852	0					
ANR	4233854	CompoundStatement		590:104:17120:17606	4233852	0					
ANR	4233855	IdentifierDeclStatement	bool first = ordinal == 0 ;	591:1:17123:17148	4233852	0	True				
ANR	4233856	IdentifierDecl	first = ordinal == 0		4233852	0					
ANR	4233857	IdentifierDeclType	bool		4233852	0					
ANR	4233858	Identifier	first		4233852	1					
ANR	4233859	AssignmentExpression	first = ordinal == 0		4233852	2		=			
ANR	4233860	Identifier	first		4233852	0					
ANR	4233861	EqualityExpression	ordinal == 0		4233852	1		==			
ANR	4233862	Identifier	ordinal		4233852	0					
ANR	4233863	PrimaryExpression	0		4233852	1					
ANR	4233864	SwitchStatement	switch ( mode )		4233852	1					
ANR	4233865	Condition	mode	592:9:17159:17162	4233852	0	True				
ANR	4233866	Identifier	mode		4233852	0					
ANR	4233867	CompoundStatement		3:15:44:44	4233852	1					
ANR	4233868	Label	case 'j' :	593:1:17168:17176	4233852	0	True				
ANR	4233869	CompoundStatement		5:2:61:94	4233852	1					
ANR	4233870	IdentifierDeclStatement	char * ename = r_str_escape ( name ) ;	594:2:17182:17215	4233852	0	True				
ANR	4233871	IdentifierDecl	* ename = r_str_escape ( name )		4233852	0					
ANR	4233872	IdentifierDeclType	char *		4233852	0					
ANR	4233873	Identifier	ename		4233852	1					
ANR	4233874	AssignmentExpression	* ename = r_str_escape ( name )		4233852	2		=			
ANR	4233875	Identifier	ename		4233852	0					
ANR	4233876	CallExpression	r_str_escape ( name )		4233852	1					
ANR	4233877	Callee	r_str_escape		4233852	0					
ANR	4233878	Identifier	r_str_escape		4233852	0					
ANR	4233879	ArgumentList	name		4233852	1					
ANR	4233880	Argument	name		4233852	0					
ANR	4233881	Identifier	name		4233852	0					
ANR	4233882	IfStatement	if ( ! ename )		4233852	1					
ANR	4233883	Condition	! ename	595:6:17223:17228	4233852	0	True				
ANR	4233884	UnaryOperationExpression	! ename		4233852	0					
ANR	4233885	UnaryOperator	!		4233852	0					
ANR	4233886	Identifier	ename		4233852	1					
ANR	4233887	CompoundStatement		6:14:110:110	4233852	1					
ANR	4233888	ReturnStatement	return ;	596:3:17236:17242	4233852	0	True				
ANR	4233889	ExpressionStatement	pj_o ( pj )	599:2:17251:17260	4233852	2	True				
ANR	4233890	CallExpression	pj_o ( pj )		4233852	0					
ANR	4233891	Callee	pj_o		4233852	0					
ANR	4233892	Identifier	pj_o		4233852	0					
ANR	4233893	ArgumentList	pj		4233852	1					
ANR	4233894	Argument	pj		4233852	0					
ANR	4233895	Identifier	pj		4233852	0					
ANR	4233896	ExpressionStatement	"pj_ki ( pj , ""ordinal"" , ordinal )"	600:2:17264:17294	4233852	3	True				
ANR	4233897	CallExpression	"pj_ki ( pj , ""ordinal"" , ordinal )"		4233852	0					
ANR	4233898	Callee	pj_ki		4233852	0					
ANR	4233899	Identifier	pj_ki		4233852	0					
ANR	4233900	ArgumentList	pj		4233852	1					
ANR	4233901	Argument	pj		4233852	0					
ANR	4233902	Identifier	pj		4233852	0					
ANR	4233903	Argument	"""ordinal"""		4233852	1					
ANR	4233904	PrimaryExpression	"""ordinal"""		4233852	0					
ANR	4233905	Argument	ordinal		4233852	2					
ANR	4233906	Identifier	ordinal		4233852	0					
ANR	4233907	ExpressionStatement	"pj_ks ( pj , ""name"" , ename )"	601:2:17298:17323	4233852	4	True				
ANR	4233908	CallExpression	"pj_ks ( pj , ""name"" , ename )"		4233852	0					
ANR	4233909	Callee	pj_ks		4233852	0					
ANR	4233910	Identifier	pj_ks		4233852	0					
ANR	4233911	ArgumentList	pj		4233852	1					
ANR	4233912	Argument	pj		4233852	0					
ANR	4233913	Identifier	pj		4233852	0					
ANR	4233914	Argument	"""name"""		4233852	1					
ANR	4233915	PrimaryExpression	"""name"""		4233852	0					
ANR	4233916	Argument	ename		4233852	2					
ANR	4233917	Identifier	ename		4233852	0					
ANR	4233918	ExpressionStatement	"pj_kb ( pj , ""selected"" , selected )"	602:2:17327:17359	4233852	5	True				
ANR	4233919	CallExpression	"pj_kb ( pj , ""selected"" , selected )"		4233852	0					
ANR	4233920	Callee	pj_kb		4233852	0					
ANR	4233921	Identifier	pj_kb		4233852	0					
ANR	4233922	ArgumentList	pj		4233852	1					
ANR	4233923	Argument	pj		4233852	0					
ANR	4233924	Identifier	pj		4233852	0					
ANR	4233925	Argument	"""selected"""		4233852	1					
ANR	4233926	PrimaryExpression	"""selected"""		4233852	0					
ANR	4233927	Argument	selected		4233852	2					
ANR	4233928	Identifier	selected		4233852	0					
ANR	4233929	ExpressionStatement	pj_end ( pj )	603:2:17363:17374	4233852	6	True				
ANR	4233930	CallExpression	pj_end ( pj )		4233852	0					
ANR	4233931	Callee	pj_end		4233852	0					
ANR	4233932	Identifier	pj_end		4233852	0					
ANR	4233933	ArgumentList	pj		4233852	1					
ANR	4233934	Argument	pj		4233852	0					
ANR	4233935	Identifier	pj		4233852	0					
ANR	4233936	ExpressionStatement	free ( ename )	604:2:17378:17390	4233852	7	True				
ANR	4233937	CallExpression	free ( ename )		4233852	0					
ANR	4233938	Callee	free		4233852	0					
ANR	4233939	Identifier	free		4233852	0					
ANR	4233940	ArgumentList	ename		4233852	1					
ANR	4233941	Argument	ename		4233852	0					
ANR	4233942	Identifier	ename		4233852	0					
ANR	4233943	BreakStatement	break ;	605:2:17394:17399	4233852	8	True				
ANR	4233944	Label	case '*' :	607:1:17405:17413	4233852	2	True				
ANR	4233945	CompoundStatement		19:2:298:343	4233852	3					
ANR	4233946	IdentifierDeclStatement	"const char * fmt = first ? ""fs %s\\n"" : ""fs+%s\\n"" ;"	608:2:17419:17464	4233852	0	True				
ANR	4233947	IdentifierDecl	"* fmt = first ? ""fs %s\\n"" : ""fs+%s\\n"""		4233852	0					
ANR	4233948	IdentifierDeclType	const char *		4233852	0					
ANR	4233949	Identifier	fmt		4233852	1					
ANR	4233950	AssignmentExpression	"* fmt = first ? ""fs %s\\n"" : ""fs+%s\\n"""		4233852	2		=			
ANR	4233951	Identifier	fmt		4233852	0					
ANR	4233952	ConditionalExpression	"first ? ""fs %s\\n"" : ""fs+%s\\n"""		4233852	1					
ANR	4233953	Condition	first		4233852	0					
ANR	4233954	Identifier	first		4233852	0					
ANR	4233955	PrimaryExpression	"""fs %s\\n"""		4233852	1					
ANR	4233956	PrimaryExpression	"""fs+%s\\n"""		4233852	2					
ANR	4233957	ExpressionStatement	"r_cons_printf ( fmt , name )"	609:2:17468:17493	4233852	1	True				
ANR	4233958	CallExpression	"r_cons_printf ( fmt , name )"		4233852	0					
ANR	4233959	Callee	r_cons_printf		4233852	0					
ANR	4233960	Identifier	r_cons_printf		4233852	0					
ANR	4233961	ArgumentList	fmt		4233852	1					
ANR	4233962	Argument	fmt		4233852	0					
ANR	4233963	Identifier	fmt		4233852	0					
ANR	4233964	Argument	name		4233852	1					
ANR	4233965	Identifier	name		4233852	0					
ANR	4233966	BreakStatement	break ;	610:2:17497:17502	4233852	2	True				
ANR	4233967	Label	default :	612:1:17508:17515	4233852	4	True				
ANR	4233968	Identifier	default		4233852	0					
ANR	4233969	ExpressionStatement	"r_cons_printf ( ""%-2d %s%s\\n"" , ordinal , name , selected ? "" (selected)"" : """" )"	613:2:17519:17592	4233852	5	True				
ANR	4233970	CallExpression	"r_cons_printf ( ""%-2d %s%s\\n"" , ordinal , name , selected ? "" (selected)"" : """" )"		4233852	0					
ANR	4233971	Callee	r_cons_printf		4233852	0					
ANR	4233972	Identifier	r_cons_printf		4233852	0					
ANR	4233973	ArgumentList	"""%-2d %s%s\\n"""		4233852	1					
ANR	4233974	Argument	"""%-2d %s%s\\n"""		4233852	0					
ANR	4233975	PrimaryExpression	"""%-2d %s%s\\n"""		4233852	0					
ANR	4233976	Argument	ordinal		4233852	1					
ANR	4233977	Identifier	ordinal		4233852	0					
ANR	4233978	Argument	name		4233852	2					
ANR	4233979	Identifier	name		4233852	0					
ANR	4233980	Argument	"selected ? "" (selected)"" : """""		4233852	3					
ANR	4233981	ConditionalExpression	"selected ? "" (selected)"" : """""		4233852	0					
ANR	4233982	Condition	selected		4233852	0					
ANR	4233983	Identifier	selected		4233852	0					
ANR	4233984	PrimaryExpression	""" (selected)"""		4233852	1					
ANR	4233985	PrimaryExpression	""""""		4233852	2					
ANR	4233986	BreakStatement	break ;	614:2:17596:17601	4233852	6	True				
ANR	4233987	ReturnType	static void		4233852	1					
ANR	4233988	Identifier	print_space_stack		4233852	2					
ANR	4233989	ParameterList	"RFlag * f , int ordinal , const char * name , bool selected , PJ * pj , int mode"		4233852	3					
ANR	4233990	Parameter	RFlag * f	590:30:17046:17053	4233852	0	True				
ANR	4233991	ParameterType	RFlag *		4233852	0					
ANR	4233992	Identifier	f		4233852	1					
ANR	4233993	Parameter	int ordinal	590:40:17056:17066	4233852	1	True				
ANR	4233994	ParameterType	int		4233852	0					
ANR	4233995	Identifier	ordinal		4233852	1					
ANR	4233996	Parameter	const char * name	590:53:17069:17084	4233852	2	True				
ANR	4233997	ParameterType	const char *		4233852	0					
ANR	4233998	Identifier	name		4233852	1					
ANR	4233999	Parameter	bool selected	590:71:17087:17099	4233852	3	True				
ANR	4234000	ParameterType	bool		4233852	0					
ANR	4234001	Identifier	selected		4233852	1					
ANR	4234002	Parameter	PJ * pj	590:86:17102:17107	4233852	4	True				
ANR	4234003	ParameterType	PJ *		4233852	0					
ANR	4234004	Identifier	pj		4233852	1					
ANR	4234005	Parameter	int mode	590:94:17110:17117	4233852	5	True				
ANR	4234006	ParameterType	int		4233852	0					
ANR	4234007	Identifier	mode		4233852	1					
ANR	4234008	CFGEntryNode	ENTRY		4233852		True				
ANR	4234009	CFGExitNode	EXIT		4233852		True				
ANR	4234010	Symbol	mode		4233852						
ANR	4234011	Symbol	r_str_escape		4233852						
ANR	4234012	Symbol	ename		4233852						
ANR	4234013	Symbol	f		4233852						
ANR	4234014	Symbol	name		4233852						
ANR	4234015	Symbol	pj		4233852						
ANR	4234016	Symbol	fmt		4233852						
ANR	4234017	Symbol	selected		4233852						
ANR	4234018	Symbol	first		4233852						
ANR	4234019	Symbol	ordinal		4233852						
ANR	4234020	Function	flag_space_stack_list	618:0:17609:18102							
ANR	4234021	FunctionDef	"flag_space_stack_list (RFlag * f , int mode)"		4234020	0					
ANR	4234022	CompoundStatement		618:53:17662:18102	4234020	0					
ANR	4234023	IdentifierDeclStatement	RListIter * iter ;	619:1:17665:17680	4234020	0	True				
ANR	4234024	IdentifierDecl	* iter		4234020	0					
ANR	4234025	IdentifierDeclType	RListIter *		4234020	0					
ANR	4234026	Identifier	iter		4234020	1					
ANR	4234027	IdentifierDeclStatement	char * space ;	620:1:17683:17694	4234020	1	True				
ANR	4234028	IdentifierDecl	* space		4234020	0					
ANR	4234029	IdentifierDeclType	char *		4234020	0					
ANR	4234030	Identifier	space		4234020	1					
ANR	4234031	IdentifierDeclStatement	int i = 0 ;	621:1:17697:17706	4234020	2	True				
ANR	4234032	IdentifierDecl	i = 0		4234020	0					
ANR	4234033	IdentifierDeclType	int		4234020	0					
ANR	4234034	Identifier	i		4234020	1					
ANR	4234035	AssignmentExpression	i = 0		4234020	2		=			
ANR	4234036	Identifier	i		4234020	0					
ANR	4234037	PrimaryExpression	0		4234020	1					
ANR	4234038	IdentifierDeclStatement	PJ * pj = NULL ;	622:1:17709:17722	4234020	3	True				
ANR	4234039	IdentifierDecl	* pj = NULL		4234020	0					
ANR	4234040	IdentifierDeclType	PJ *		4234020	0					
ANR	4234041	Identifier	pj		4234020	1					
ANR	4234042	AssignmentExpression	* pj = NULL		4234020	2		=			
ANR	4234043	Identifier	NULL		4234020	0					
ANR	4234044	Identifier	NULL		4234020	1					
ANR	4234045	IfStatement	if ( mode == 'j' )		4234020	4					
ANR	4234046	Condition	mode == 'j'	623:5:17729:17739	4234020	0	True				
ANR	4234047	EqualityExpression	mode == 'j'		4234020	0		==			
ANR	4234048	Identifier	mode		4234020	0					
ANR	4234049	PrimaryExpression	'j'		4234020	1					
ANR	4234050	CompoundStatement		6:18:79:79	4234020	1					
ANR	4234051	ExpressionStatement	pj = pj_new ( )	624:2:17746:17760	4234020	0	True				
ANR	4234052	AssignmentExpression	pj = pj_new ( )		4234020	0		=			
ANR	4234053	Identifier	pj		4234020	0					
ANR	4234054	CallExpression	pj_new ( )		4234020	1					
ANR	4234055	Callee	pj_new		4234020	0					
ANR	4234056	Identifier	pj_new		4234020	0					
ANR	4234057	ArgumentList			4234020	1					
ANR	4234058	ExpressionStatement	pj_a ( pj )	625:2:17764:17773	4234020	1	True				
ANR	4234059	CallExpression	pj_a ( pj )		4234020	0					
ANR	4234060	Callee	pj_a		4234020	0					
ANR	4234061	Identifier	pj_a		4234020	0					
ANR	4234062	ArgumentList	pj		4234020	1					
ANR	4234063	Argument	pj		4234020	0					
ANR	4234064	Identifier	pj		4234020	0					
ANR	4234065	Statement	r_list_foreach	627:1:17779:17792	4234020	5	True				
ANR	4234066	Statement	(	627:16:17794:17794	4234020	6	True				
ANR	4234067	Statement	f	627:17:17795:17795	4234020	7	True				
ANR	4234068	Statement	->	627:18:17796:17797	4234020	8	True				
ANR	4234069	Statement	spaces	627:20:17798:17803	4234020	9	True				
ANR	4234070	Statement	.	627:26:17804:17804	4234020	10	True				
ANR	4234071	Statement	spacestack	627:27:17805:17814	4234020	11	True				
ANR	4234072	Statement	","	627:37:17815:17815	4234020	12	True				
ANR	4234073	Statement	iter	627:39:17817:17820	4234020	13	True				
ANR	4234074	Statement	","	627:43:17821:17821	4234020	14	True				
ANR	4234075	Statement	space	627:45:17823:17827	4234020	15	True				
ANR	4234076	Statement	)	627:50:17828:17828	4234020	16	True				
ANR	4234077	CompoundStatement		10:52:167:167	4234020	17					
ANR	4234078	ExpressionStatement	"print_space_stack ( f , i ++ , space , false , pj , mode )"	628:2:17834:17884	4234020	0	True				
ANR	4234079	CallExpression	"print_space_stack ( f , i ++ , space , false , pj , mode )"		4234020	0					
ANR	4234080	Callee	print_space_stack		4234020	0					
ANR	4234081	Identifier	print_space_stack		4234020	0					
ANR	4234082	ArgumentList	f		4234020	1					
ANR	4234083	Argument	f		4234020	0					
ANR	4234084	Identifier	f		4234020	0					
ANR	4234085	Argument	i ++		4234020	1					
ANR	4234086	PostIncDecOperationExpression	i ++		4234020	0					
ANR	4234087	Identifier	i		4234020	0					
ANR	4234088	IncDec	++		4234020	1					
ANR	4234089	Argument	space		4234020	2					
ANR	4234090	Identifier	space		4234020	0					
ANR	4234091	Argument	false		4234020	3					
ANR	4234092	Identifier	false		4234020	0					
ANR	4234093	Argument	pj		4234020	4					
ANR	4234094	Identifier	pj		4234020	0					
ANR	4234095	Argument	mode		4234020	5					
ANR	4234096	Identifier	mode		4234020	0					
ANR	4234097	IdentifierDeclStatement	const char * cur_name = r_flag_space_cur_name ( f ) ;	630:1:17890:17938	4234020	18	True				
ANR	4234098	IdentifierDecl	* cur_name = r_flag_space_cur_name ( f )		4234020	0					
ANR	4234099	IdentifierDeclType	const char *		4234020	0					
ANR	4234100	Identifier	cur_name		4234020	1					
ANR	4234101	AssignmentExpression	* cur_name = r_flag_space_cur_name ( f )		4234020	2		=			
ANR	4234102	Identifier	cur_name		4234020	0					
ANR	4234103	CallExpression	r_flag_space_cur_name ( f )		4234020	1					
ANR	4234104	Callee	r_flag_space_cur_name		4234020	0					
ANR	4234105	Identifier	r_flag_space_cur_name		4234020	0					
ANR	4234106	ArgumentList	f		4234020	1					
ANR	4234107	Argument	f		4234020	0					
ANR	4234108	Identifier	f		4234020	0					
ANR	4234109	ExpressionStatement	"print_space_stack ( f , i ++ , cur_name , true , pj , mode )"	631:1:17941:17993	4234020	19	True				
ANR	4234110	CallExpression	"print_space_stack ( f , i ++ , cur_name , true , pj , mode )"		4234020	0					
ANR	4234111	Callee	print_space_stack		4234020	0					
ANR	4234112	Identifier	print_space_stack		4234020	0					
ANR	4234113	ArgumentList	f		4234020	1					
ANR	4234114	Argument	f		4234020	0					
ANR	4234115	Identifier	f		4234020	0					
ANR	4234116	Argument	i ++		4234020	1					
ANR	4234117	PostIncDecOperationExpression	i ++		4234020	0					
ANR	4234118	Identifier	i		4234020	0					
ANR	4234119	IncDec	++		4234020	1					
ANR	4234120	Argument	cur_name		4234020	2					
ANR	4234121	Identifier	cur_name		4234020	0					
ANR	4234122	Argument	true		4234020	3					
ANR	4234123	Identifier	true		4234020	0					
ANR	4234124	Argument	pj		4234020	4					
ANR	4234125	Identifier	pj		4234020	0					
ANR	4234126	Argument	mode		4234020	5					
ANR	4234127	Identifier	mode		4234020	0					
ANR	4234128	IfStatement	if ( mode == 'j' )		4234020	20					
ANR	4234129	Condition	mode == 'j'	632:5:18000:18010	4234020	0	True				
ANR	4234130	EqualityExpression	mode == 'j'		4234020	0		==			
ANR	4234131	Identifier	mode		4234020	0					
ANR	4234132	PrimaryExpression	'j'		4234020	1					
ANR	4234133	CompoundStatement		15:18:350:350	4234020	1					
ANR	4234134	ExpressionStatement	pj_end ( pj )	633:2:18017:18028	4234020	0	True				
ANR	4234135	CallExpression	pj_end ( pj )		4234020	0					
ANR	4234136	Callee	pj_end		4234020	0					
ANR	4234137	Identifier	pj_end		4234020	0					
ANR	4234138	ArgumentList	pj		4234020	1					
ANR	4234139	Argument	pj		4234020	0					
ANR	4234140	Identifier	pj		4234020	0					
ANR	4234141	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"	634:2:18032:18070	4234020	1	True				
ANR	4234142	CallExpression	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"		4234020	0					
ANR	4234143	Callee	r_cons_printf		4234020	0					
ANR	4234144	Identifier	r_cons_printf		4234020	0					
ANR	4234145	ArgumentList	"""%s\\n"""		4234020	1					
ANR	4234146	Argument	"""%s\\n"""		4234020	0					
ANR	4234147	PrimaryExpression	"""%s\\n"""		4234020	0					
ANR	4234148	Argument	pj_string ( pj )		4234020	1					
ANR	4234149	CallExpression	pj_string ( pj )		4234020	0					
ANR	4234150	Callee	pj_string		4234020	0					
ANR	4234151	Identifier	pj_string		4234020	0					
ANR	4234152	ArgumentList	pj		4234020	1					
ANR	4234153	Argument	pj		4234020	0					
ANR	4234154	Identifier	pj		4234020	0					
ANR	4234155	ExpressionStatement	pj_free ( pj )	635:2:18074:18086	4234020	2	True				
ANR	4234156	CallExpression	pj_free ( pj )		4234020	0					
ANR	4234157	Callee	pj_free		4234020	0					
ANR	4234158	Identifier	pj_free		4234020	0					
ANR	4234159	ArgumentList	pj		4234020	1					
ANR	4234160	Argument	pj		4234020	0					
ANR	4234161	Identifier	pj		4234020	0					
ANR	4234162	ReturnStatement	return i ;	637:1:18092:18100	4234020	21	True				
ANR	4234163	Identifier	i		4234020	0					
ANR	4234164	ReturnType	static int		4234020	1					
ANR	4234165	Identifier	flag_space_stack_list		4234020	2					
ANR	4234166	ParameterList	"RFlag * f , int mode"		4234020	3					
ANR	4234167	Parameter	RFlag * f	618:33:17642:17649	4234020	0	True				
ANR	4234168	ParameterType	RFlag *		4234020	0					
ANR	4234169	Identifier	f		4234020	1					
ANR	4234170	Parameter	int mode	618:43:17652:17659	4234020	1	True				
ANR	4234171	ParameterType	int		4234020	0					
ANR	4234172	Identifier	mode		4234020	1					
ANR	4234173	CFGEntryNode	ENTRY		4234020		True				
ANR	4234174	CFGExitNode	EXIT		4234020		True				
ANR	4234175	Symbol	NULL		4234020						
ANR	4234176	Symbol	pj_string		4234020						
ANR	4234177	Symbol	r_flag_space_cur_name		4234020						
ANR	4234178	Symbol	f		4234020						
ANR	4234179	Symbol	false		4234020						
ANR	4234180	Symbol	iter		4234020						
ANR	4234181	Symbol	i		4234020						
ANR	4234182	Symbol	space		4234020						
ANR	4234183	Symbol	cur_name		4234020						
ANR	4234184	Symbol	mode		4234020						
ANR	4234185	Symbol	true		4234020						
ANR	4234186	Symbol	pj		4234020						
ANR	4234187	Symbol	pj_new		4234020						
ANR	4234188	Function	cmd_flag	640:0:18105:37002							
ANR	4234189	FunctionDef	"cmd_flag (void * data , const char * input)"		4234188	0					
ANR	4234190	CompoundStatement		640:51:18156:37002	4234188	0					
ANR	4234191	Statement	static	641:1:18159:18164	4234188	0	True				
ANR	4234192	IdentifierDeclStatement	int flagenum = 0 ;	641:8:18166:18182	4234188	1	True				
ANR	4234193	IdentifierDecl	flagenum = 0		4234188	0					
ANR	4234194	IdentifierDeclType	int		4234188	0					
ANR	4234195	Identifier	flagenum		4234188	1					
ANR	4234196	AssignmentExpression	flagenum = 0		4234188	2		=			
ANR	4234197	Identifier	flagenum		4234188	0					
ANR	4234198	PrimaryExpression	0		4234188	1					
ANR	4234199	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	642:1:18185:18212	4234188	2	True				
ANR	4234200	IdentifierDecl	* core = ( RCore * ) data		4234188	0					
ANR	4234201	IdentifierDeclType	RCore *		4234188	0					
ANR	4234202	Identifier	core		4234188	1					
ANR	4234203	AssignmentExpression	* core = ( RCore * ) data		4234188	2		=			
ANR	4234204	Identifier	core		4234188	0					
ANR	4234205	CastExpression	( RCore * ) data		4234188	1					
ANR	4234206	CastTarget	RCore *		4234188	0					
ANR	4234207	Identifier	data		4234188	1					
ANR	4234208	IdentifierDeclStatement	ut64 off = core -> offset ;	643:1:18215:18238	4234188	3	True				
ANR	4234209	IdentifierDecl	off = core -> offset		4234188	0					
ANR	4234210	IdentifierDeclType	ut64		4234188	0					
ANR	4234211	Identifier	off		4234188	1					
ANR	4234212	AssignmentExpression	off = core -> offset		4234188	2		=			
ANR	4234213	Identifier	off		4234188	0					
ANR	4234214	PtrMemberAccess	core -> offset		4234188	1					
ANR	4234215	Identifier	core		4234188	0					
ANR	4234216	Identifier	offset		4234188	1					
ANR	4234217	IdentifierDeclStatement	"char * ptr , * str = NULL ;"	644:1:18241:18263	4234188	4	True				
ANR	4234218	IdentifierDecl	* ptr		4234188	0					
ANR	4234219	IdentifierDeclType	char *		4234188	0					
ANR	4234220	Identifier	ptr		4234188	1					
ANR	4234221	IdentifierDecl	* str = NULL		4234188	1					
ANR	4234222	IdentifierDeclType	char *		4234188	0					
ANR	4234223	Identifier	str		4234188	1					
ANR	4234224	AssignmentExpression	* str = NULL		4234188	2		=			
ANR	4234225	Identifier	NULL		4234188	0					
ANR	4234226	Identifier	NULL		4234188	1					
ANR	4234227	IdentifierDeclStatement	RFlagItem * item ;	645:1:18266:18281	4234188	5	True				
ANR	4234228	IdentifierDecl	* item		4234188	0					
ANR	4234229	IdentifierDeclType	RFlagItem *		4234188	0					
ANR	4234230	Identifier	item		4234188	1					
ANR	4234231	IdentifierDeclStatement	char * name = NULL ;	646:1:18284:18301	4234188	6	True				
ANR	4234232	IdentifierDecl	* name = NULL		4234188	0					
ANR	4234233	IdentifierDeclType	char *		4234188	0					
ANR	4234234	Identifier	name		4234188	1					
ANR	4234235	AssignmentExpression	* name = NULL		4234188	2		=			
ANR	4234236	Identifier	NULL		4234188	0					
ANR	4234237	Identifier	NULL		4234188	1					
ANR	4234238	IdentifierDeclStatement	st64 base ;	647:1:18304:18313	4234188	7	True				
ANR	4234239	IdentifierDecl	base		4234188	0					
ANR	4234240	IdentifierDeclType	st64		4234188	0					
ANR	4234241	Identifier	base		4234188	1					
ANR	4234242	IfStatement	if ( * input )		4234188	8					
ANR	4234243	Condition	* input	650:5:18343:18348	4234188	0	True				
ANR	4234244	UnaryOperationExpression	* input		4234188	0					
ANR	4234245	UnaryOperator	*		4234188	0					
ANR	4234246	Identifier	input		4234188	1					
ANR	4234247	CompoundStatement		11:13:194:194	4234188	1					
ANR	4234248	ExpressionStatement	str = strdup ( input + 1 )	651:2:18355:18379	4234188	0	True				
ANR	4234249	AssignmentExpression	str = strdup ( input + 1 )		4234188	0		=			
ANR	4234250	Identifier	str		4234188	0					
ANR	4234251	CallExpression	strdup ( input + 1 )		4234188	1					
ANR	4234252	Callee	strdup		4234188	0					
ANR	4234253	Identifier	strdup		4234188	0					
ANR	4234254	ArgumentList	input + 1		4234188	1					
ANR	4234255	Argument	input + 1		4234188	0					
ANR	4234256	AdditiveExpression	input + 1		4234188	0		+			
ANR	4234257	Identifier	input		4234188	0					
ANR	4234258	PrimaryExpression	1		4234188	1					
ANR	4234259	Label	rep :	653:0:18384:18387	4234188	9	True				
ANR	4234260	Identifier	rep		4234188	0					
ANR	4234261	SwitchStatement	switch ( * input )		4234188	10					
ANR	4234262	Condition	* input	654:9:18398:18403	4234188	0	True				
ANR	4234263	UnaryOperationExpression	* input		4234188	0					
ANR	4234264	UnaryOperator	*		4234188	0					
ANR	4234265	Identifier	input		4234188	1					
ANR	4234266	CompoundStatement		15:17:249:249	4234188	1					
ANR	4234267	Label	case 'f' :	655:1:18409:18417	4234188	0	True				
ANR	4234268	IfStatement	if ( input [ 1 ] == 's' )		4234188	1					
ANR	4234269	Condition	input [ 1 ] == 's'	656:6:18433:18447	4234188	0	True				
ANR	4234270	EqualityExpression	input [ 1 ] == 's'		4234188	0		==			
ANR	4234271	ArrayIndexing	input [ 1 ]		4234188	0					
ANR	4234272	Identifier	input		4234188	0					
ANR	4234273	PrimaryExpression	1		4234188	1					
ANR	4234274	PrimaryExpression	's'		4234188	1					
ANR	4234275	CompoundStatement		18:3:307:349	4234188	1					
ANR	4234276	IdentifierDeclStatement	"int delta = flag_to_flag ( core , input + 2 ) ;"	657:3:18464:18506	4234188	0	True				
ANR	4234277	IdentifierDecl	"delta = flag_to_flag ( core , input + 2 )"		4234188	0					
ANR	4234278	IdentifierDeclType	int		4234188	0					
ANR	4234279	Identifier	delta		4234188	1					
ANR	4234280	AssignmentExpression	"delta = flag_to_flag ( core , input + 2 )"		4234188	2		=			
ANR	4234281	Identifier	delta		4234188	0					
ANR	4234282	CallExpression	"flag_to_flag ( core , input + 2 )"		4234188	1					
ANR	4234283	Callee	flag_to_flag		4234188	0					
ANR	4234284	Identifier	flag_to_flag		4234188	0					
ANR	4234285	ArgumentList	core		4234188	1					
ANR	4234286	Argument	core		4234188	0					
ANR	4234287	Identifier	core		4234188	0					
ANR	4234288	Argument	input + 2		4234188	1					
ANR	4234289	AdditiveExpression	input + 2		4234188	0		+			
ANR	4234290	Identifier	input		4234188	0					
ANR	4234291	PrimaryExpression	2		4234188	1					
ANR	4234292	IfStatement	if ( delta > 0 )		4234188	1					
ANR	4234293	Condition	delta > 0	658:7:18515:18523	4234188	0	True				
ANR	4234294	RelationalExpression	delta > 0		4234188	0		>			
ANR	4234295	Identifier	delta		4234188	0					
ANR	4234296	PrimaryExpression	0		4234188	1					
ANR	4234297	CompoundStatement		19:18:369:369	4234188	1					
ANR	4234298	Statement	r_cons_printf	659:4:18532:18544	4234188	0	True				
ANR	4234299	Statement	(	659:18:18546:18546	4234188	1	True				
ANR	4234300	Statement	"""0x%08"""	659:19:18547:18553	4234188	2	True				
ANR	4234301	Statement	PFMT64x	659:26:18554:18560	4234188	3	True				
ANR	4234302	Statement	"""\\n"""	659:33:18561:18564	4234188	4	True				
ANR	4234303	Statement	","	659:37:18565:18565	4234188	5	True				
ANR	4234304	Statement	core	659:39:18567:18570	4234188	6	True				
ANR	4234305	Statement	->	659:43:18571:18572	4234188	7	True				
ANR	4234306	Statement	offset	659:45:18573:18578	4234188	8	True				
ANR	4234307	Statement	+	659:52:18580:18580	4234188	9	True				
ANR	4234308	Statement	delta	659:54:18582:18586	4234188	10	True				
ANR	4234309	Statement	)	659:59:18587:18587	4234188	11	True				
ANR	4234310	ExpressionStatement		659:60:18588:18588	4234188	12	True				
ANR	4234311	ElseStatement	else		4234188	0					
ANR	4234312	CompoundStatement		22:9:447:447	4234188	0					
ANR	4234313	ExpressionStatement	"r_cons_printf ( ""%d\\n"" , flag_to_flag ( core , input + 1 ) )"	662:3:18609:18663	4234188	0	True				
ANR	4234314	CallExpression	"r_cons_printf ( ""%d\\n"" , flag_to_flag ( core , input + 1 ) )"		4234188	0					
ANR	4234315	Callee	r_cons_printf		4234188	0					
ANR	4234316	Identifier	r_cons_printf		4234188	0					
ANR	4234317	ArgumentList	"""%d\\n"""		4234188	1					
ANR	4234318	Argument	"""%d\\n"""		4234188	0					
ANR	4234319	PrimaryExpression	"""%d\\n"""		4234188	0					
ANR	4234320	Argument	"flag_to_flag ( core , input + 1 )"		4234188	1					
ANR	4234321	CallExpression	"flag_to_flag ( core , input + 1 )"		4234188	0					
ANR	4234322	Callee	flag_to_flag		4234188	0					
ANR	4234323	Identifier	flag_to_flag		4234188	0					
ANR	4234324	ArgumentList	core		4234188	1					
ANR	4234325	Argument	core		4234188	0					
ANR	4234326	Identifier	core		4234188	0					
ANR	4234327	Argument	input + 1		4234188	1					
ANR	4234328	AdditiveExpression	input + 1		4234188	0		+			
ANR	4234329	Identifier	input		4234188	0					
ANR	4234330	PrimaryExpression	1		4234188	1					
ANR	4234331	BreakStatement	break ;	664:2:18671:18676	4234188	2	True				
ANR	4234332	Label	case 'e' :	665:1:18679:18687	4234188	3	True				
ANR	4234333	SwitchStatement	switch ( input [ 1 ] )		4234188	4					
ANR	4234334	Condition	input [ 1 ]	666:10:18707:18714	4234188	0	True				
ANR	4234335	ArrayIndexing	input [ 1 ]		4234188	0					
ANR	4234336	Identifier	input		4234188	0					
ANR	4234337	PrimaryExpression	1		4234188	1					
ANR	4234338	CompoundStatement		27:20:560:560	4234188	1					
ANR	4234339	Label	case ' ' :	667:2:18721:18729	4234188	0	True				
ANR	4234340	ExpressionStatement	"ptr = r_str_newf ( ""%s.%d"" , input + 2 , flagenum )"	668:3:18734:18781	4234188	1	True				
ANR	4234341	AssignmentExpression	"ptr = r_str_newf ( ""%s.%d"" , input + 2 , flagenum )"		4234188	0		=			
ANR	4234342	Identifier	ptr		4234188	0					
ANR	4234343	CallExpression	"r_str_newf ( ""%s.%d"" , input + 2 , flagenum )"		4234188	1					
ANR	4234344	Callee	r_str_newf		4234188	0					
ANR	4234345	Identifier	r_str_newf		4234188	0					
ANR	4234346	ArgumentList	"""%s.%d"""		4234188	1					
ANR	4234347	Argument	"""%s.%d"""		4234188	0					
ANR	4234348	PrimaryExpression	"""%s.%d"""		4234188	0					
ANR	4234349	Argument	input + 2		4234188	1					
ANR	4234350	AdditiveExpression	input + 2		4234188	0		+			
ANR	4234351	Identifier	input		4234188	0					
ANR	4234352	PrimaryExpression	2		4234188	1					
ANR	4234353	Argument	flagenum		4234188	2					
ANR	4234354	Identifier	flagenum		4234188	0					
ANR	4234355	ExpressionStatement	"( void ) r_flag_set ( core -> flags , ptr , core -> offset , 1 )"	669:3:18786:18838	4234188	2	True				
ANR	4234356	CastExpression	"( void ) r_flag_set ( core -> flags , ptr , core -> offset , 1 )"		4234188	0					
ANR	4234357	CastTarget	void		4234188	0					
ANR	4234358	CallExpression	"r_flag_set ( core -> flags , ptr , core -> offset , 1 )"		4234188	1					
ANR	4234359	Callee	r_flag_set		4234188	0					
ANR	4234360	Identifier	r_flag_set		4234188	0					
ANR	4234361	ArgumentList	core -> flags		4234188	1					
ANR	4234362	Argument	core -> flags		4234188	0					
ANR	4234363	PtrMemberAccess	core -> flags		4234188	0					
ANR	4234364	Identifier	core		4234188	0					
ANR	4234365	Identifier	flags		4234188	1					
ANR	4234366	Argument	ptr		4234188	1					
ANR	4234367	Identifier	ptr		4234188	0					
ANR	4234368	Argument	core -> offset		4234188	2					
ANR	4234369	PtrMemberAccess	core -> offset		4234188	0					
ANR	4234370	Identifier	core		4234188	0					
ANR	4234371	Identifier	offset		4234188	1					
ANR	4234372	Argument	1		4234188	3					
ANR	4234373	PrimaryExpression	1		4234188	0					
ANR	4234374	ExpressionStatement	flagenum ++	670:3:18843:18853	4234188	3	True				
ANR	4234375	PostIncDecOperationExpression	flagenum ++		4234188	0					
ANR	4234376	Identifier	flagenum		4234188	0					
ANR	4234377	IncDec	++		4234188	1					
ANR	4234378	ExpressionStatement	free ( ptr )	671:3:18858:18868	4234188	4	True				
ANR	4234379	CallExpression	free ( ptr )		4234188	0					
ANR	4234380	Callee	free		4234188	0					
ANR	4234381	Identifier	free		4234188	0					
ANR	4234382	ArgumentList	ptr		4234188	1					
ANR	4234383	Argument	ptr		4234188	0					
ANR	4234384	Identifier	ptr		4234188	0					
ANR	4234385	BreakStatement	break ;	672:3:18873:18878	4234188	5	True				
ANR	4234386	Label	case '-' :	673:2:18882:18890	4234188	6	True				
ANR	4234387	ExpressionStatement	flagenum = 0	674:3:18895:18907	4234188	7	True				
ANR	4234388	AssignmentExpression	flagenum = 0		4234188	0		=			
ANR	4234389	Identifier	flagenum		4234188	0					
ANR	4234390	PrimaryExpression	0		4234188	1					
ANR	4234391	BreakStatement	break ;	675:3:18912:18917	4234188	8	True				
ANR	4234392	Label	default :	676:2:18921:18928	4234188	9	True				
ANR	4234393	Identifier	default		4234188	0					
ANR	4234394	ExpressionStatement	"eprintf ( ""|Usage: fe[-| name] @@= 1 2 3 4\\n"" )"	677:3:18933:18978	4234188	10	True				
ANR	4234395	CallExpression	"eprintf ( ""|Usage: fe[-| name] @@= 1 2 3 4\\n"" )"		4234188	0					
ANR	4234396	Callee	eprintf		4234188	0					
ANR	4234397	Identifier	eprintf		4234188	0					
ANR	4234398	ArgumentList	"""|Usage: fe[-| name] @@= 1 2 3 4\\n"""		4234188	1					
ANR	4234399	Argument	"""|Usage: fe[-| name] @@= 1 2 3 4\\n"""		4234188	0					
ANR	4234400	PrimaryExpression	"""|Usage: fe[-| name] @@= 1 2 3 4\\n"""		4234188	0					
ANR	4234401	BreakStatement	break ;	678:3:18983:18988	4234188	11	True				
ANR	4234402	BreakStatement	break ;	680:2:18996:19001	4234188	5	True				
ANR	4234403	Label	case '=' :	681:1:19004:19012	4234188	6	True				
ANR	4234404	SwitchStatement	switch ( input [ 1 ] )		4234188	7					
ANR	4234405	Condition	input [ 1 ]	682:10:19032:19039	4234188	0	True				
ANR	4234406	ArrayIndexing	input [ 1 ]		4234188	0					
ANR	4234407	Identifier	input		4234188	0					
ANR	4234408	PrimaryExpression	1		4234188	1					
ANR	4234409	CompoundStatement		43:20:885:885	4234188	1					
ANR	4234410	Label	case ' ' :	683:2:19046:19054	4234188	0	True				
ANR	4234411	ExpressionStatement	"flagbars ( core , input + 2 )"	684:3:19059:19085	4234188	1	True				
ANR	4234412	CallExpression	"flagbars ( core , input + 2 )"		4234188	0					
ANR	4234413	Callee	flagbars		4234188	0					
ANR	4234414	Identifier	flagbars		4234188	0					
ANR	4234415	ArgumentList	core		4234188	1					
ANR	4234416	Argument	core		4234188	0					
ANR	4234417	Identifier	core		4234188	0					
ANR	4234418	Argument	input + 2		4234188	1					
ANR	4234419	AdditiveExpression	input + 2		4234188	0		+			
ANR	4234420	Identifier	input		4234188	0					
ANR	4234421	PrimaryExpression	2		4234188	1					
ANR	4234422	BreakStatement	break ;	685:3:19090:19095	4234188	2	True				
ANR	4234423	Label	case 0 :	686:2:19099:19105	4234188	3	True				
ANR	4234424	ExpressionStatement	"flagbars ( core , NULL )"	687:3:19110:19131	4234188	4	True				
ANR	4234425	CallExpression	"flagbars ( core , NULL )"		4234188	0					
ANR	4234426	Callee	flagbars		4234188	0					
ANR	4234427	Identifier	flagbars		4234188	0					
ANR	4234428	ArgumentList	core		4234188	1					
ANR	4234429	Argument	core		4234188	0					
ANR	4234430	Identifier	core		4234188	0					
ANR	4234431	Argument	NULL		4234188	1					
ANR	4234432	Identifier	NULL		4234188	0					
ANR	4234433	BreakStatement	break ;	688:3:19136:19141	4234188	5	True				
ANR	4234434	Label	default :	689:2:19145:19152	4234188	6	True				
ANR	4234435	Identifier	default		4234188	0					
ANR	4234436	Label	case '?' :	690:2:19156:19164	4234188	7	True				
ANR	4234437	ExpressionStatement	"eprintf ( ""Usage: f= [glob] to grep for matching flag names\\n"" )"	691:3:19169:19231	4234188	8	True				
ANR	4234438	CallExpression	"eprintf ( ""Usage: f= [glob] to grep for matching flag names\\n"" )"		4234188	0					
ANR	4234439	Callee	eprintf		4234188	0					
ANR	4234440	Identifier	eprintf		4234188	0					
ANR	4234441	ArgumentList	"""Usage: f= [glob] to grep for matching flag names\\n"""		4234188	1					
ANR	4234442	Argument	"""Usage: f= [glob] to grep for matching flag names\\n"""		4234188	0					
ANR	4234443	PrimaryExpression	"""Usage: f= [glob] to grep for matching flag names\\n"""		4234188	0					
ANR	4234444	BreakStatement	break ;	692:3:19236:19241	4234188	9	True				
ANR	4234445	BreakStatement	break ;	694:2:19249:19254	4234188	8	True				
ANR	4234446	Label	case 'a' :	695:1:19257:19265	4234188	9	True				
ANR	4234447	IfStatement	if ( input [ 1 ] == ' ' )		4234188	10					
ANR	4234448	Condition	input [ 1 ] == ' '	696:6:19273:19287	4234188	0	True				
ANR	4234449	EqualityExpression	input [ 1 ] == ' '		4234188	0		==			
ANR	4234450	ArrayIndexing	input [ 1 ]		4234188	0					
ANR	4234451	Identifier	input		4234188	0					
ANR	4234452	PrimaryExpression	1		4234188	1					
ANR	4234453	PrimaryExpression	' '		4234188	1					
ANR	4234454	CompoundStatement		58:3:1137:1150	4234188	1					
ANR	4234455	IdentifierDeclStatement	RFlagItem * fi ;	697:3:19294:19307	4234188	0	True				
ANR	4234456	IdentifierDecl	* fi		4234188	0					
ANR	4234457	IdentifierDeclType	RFlagItem *		4234188	0					
ANR	4234458	Identifier	fi		4234188	1					
ANR	4234459	ExpressionStatement	R_FREE ( str )	698:3:19312:19324	4234188	1	True				
ANR	4234460	CallExpression	R_FREE ( str )		4234188	0					
ANR	4234461	Callee	R_FREE		4234188	0					
ANR	4234462	Identifier	R_FREE		4234188	0					
ANR	4234463	ArgumentList	str		4234188	1					
ANR	4234464	Argument	str		4234188	0					
ANR	4234465	Identifier	str		4234188	0					
ANR	4234466	ExpressionStatement	str = strdup ( input + 2 )	699:3:19329:19351	4234188	2	True				
ANR	4234467	AssignmentExpression	str = strdup ( input + 2 )		4234188	0		=			
ANR	4234468	Identifier	str		4234188	0					
ANR	4234469	CallExpression	strdup ( input + 2 )		4234188	1					
ANR	4234470	Callee	strdup		4234188	0					
ANR	4234471	Identifier	strdup		4234188	0					
ANR	4234472	ArgumentList	input + 2		4234188	1					
ANR	4234473	Argument	input + 2		4234188	0					
ANR	4234474	AdditiveExpression	input + 2		4234188	0		+			
ANR	4234475	Identifier	input		4234188	0					
ANR	4234476	PrimaryExpression	2		4234188	1					
ANR	4234477	ExpressionStatement	"ptr = strchr ( str , '=' )"	700:3:19356:19379	4234188	3	True				
ANR	4234478	AssignmentExpression	"ptr = strchr ( str , '=' )"		4234188	0		=			
ANR	4234479	Identifier	ptr		4234188	0					
ANR	4234480	CallExpression	"strchr ( str , '=' )"		4234188	1					
ANR	4234481	Callee	strchr		4234188	0					
ANR	4234482	Identifier	strchr		4234188	0					
ANR	4234483	ArgumentList	str		4234188	1					
ANR	4234484	Argument	str		4234188	0					
ANR	4234485	Identifier	str		4234188	0					
ANR	4234486	Argument	'='		4234188	1					
ANR	4234487	PrimaryExpression	'='		4234188	0					
ANR	4234488	IfStatement	if ( ! ptr )		4234188	4					
ANR	4234489	Condition	! ptr	701:7:19388:19391	4234188	0	True				
ANR	4234490	UnaryOperationExpression	! ptr		4234188	0					
ANR	4234491	UnaryOperator	!		4234188	0					
ANR	4234492	Identifier	ptr		4234188	1					
ANR	4234493	ExpressionStatement	"ptr = strchr ( str , ' ' )"	702:4:19398:19421	4234188	1	True				
ANR	4234494	AssignmentExpression	"ptr = strchr ( str , ' ' )"		4234188	0		=			
ANR	4234495	Identifier	ptr		4234188	0					
ANR	4234496	CallExpression	"strchr ( str , ' ' )"		4234188	1					
ANR	4234497	Callee	strchr		4234188	0					
ANR	4234498	Identifier	strchr		4234188	0					
ANR	4234499	ArgumentList	str		4234188	1					
ANR	4234500	Argument	str		4234188	0					
ANR	4234501	Identifier	str		4234188	0					
ANR	4234502	Argument	' '		4234188	1					
ANR	4234503	PrimaryExpression	' '		4234188	0					
ANR	4234504	IfStatement	if ( ptr )		4234188	5					
ANR	4234505	Condition	ptr	703:7:19430:19432	4234188	0	True				
ANR	4234506	Identifier	ptr		4234188	0					
ANR	4234507	ExpressionStatement	* ptr ++ = 0	703:12:19435:19445	4234188	1	True				
ANR	4234508	AssignmentExpression	* ptr ++ = 0		4234188	0		=			
ANR	4234509	UnaryOperationExpression	* ptr ++		4234188	0					
ANR	4234510	UnaryOperator	*		4234188	0					
ANR	4234511	PostIncDecOperationExpression	ptr ++		4234188	1					
ANR	4234512	Identifier	ptr		4234188	0					
ANR	4234513	IncDec	++		4234188	1					
ANR	4234514	PrimaryExpression	0		4234188	1					
ANR	4234515	ExpressionStatement	name = ( char * ) r_str_trim_ro ( str )	704:3:19450:19484	4234188	6	True				
ANR	4234516	AssignmentExpression	name = ( char * ) r_str_trim_ro ( str )		4234188	0		=			
ANR	4234517	Identifier	name		4234188	0					
ANR	4234518	CastExpression	( char * ) r_str_trim_ro ( str )		4234188	1					
ANR	4234519	CastTarget	char *		4234188	0					
ANR	4234520	CallExpression	r_str_trim_ro ( str )		4234188	1					
ANR	4234521	Callee	r_str_trim_ro		4234188	0					
ANR	4234522	Identifier	r_str_trim_ro		4234188	0					
ANR	4234523	ArgumentList	str		4234188	1					
ANR	4234524	Argument	str		4234188	0					
ANR	4234525	Identifier	str		4234188	0					
ANR	4234526	ExpressionStatement	ptr = ( char * ) r_str_trim_ro ( ptr )	705:3:19489:19522	4234188	7	True				
ANR	4234527	AssignmentExpression	ptr = ( char * ) r_str_trim_ro ( ptr )		4234188	0		=			
ANR	4234528	Identifier	ptr		4234188	0					
ANR	4234529	CastExpression	( char * ) r_str_trim_ro ( ptr )		4234188	1					
ANR	4234530	CastTarget	char *		4234188	0					
ANR	4234531	CallExpression	r_str_trim_ro ( ptr )		4234188	1					
ANR	4234532	Callee	r_str_trim_ro		4234188	0					
ANR	4234533	Identifier	r_str_trim_ro		4234188	0					
ANR	4234534	ArgumentList	ptr		4234188	1					
ANR	4234535	Argument	ptr		4234188	0					
ANR	4234536	Identifier	ptr		4234188	0					
ANR	4234537	ExpressionStatement	"fi = r_flag_get ( core -> flags , name )"	706:3:19527:19562	4234188	8	True				
ANR	4234538	AssignmentExpression	"fi = r_flag_get ( core -> flags , name )"		4234188	0		=			
ANR	4234539	Identifier	fi		4234188	0					
ANR	4234540	CallExpression	"r_flag_get ( core -> flags , name )"		4234188	1					
ANR	4234541	Callee	r_flag_get		4234188	0					
ANR	4234542	Identifier	r_flag_get		4234188	0					
ANR	4234543	ArgumentList	core -> flags		4234188	1					
ANR	4234544	Argument	core -> flags		4234188	0					
ANR	4234545	PtrMemberAccess	core -> flags		4234188	0					
ANR	4234546	Identifier	core		4234188	0					
ANR	4234547	Identifier	flags		4234188	1					
ANR	4234548	Argument	name		4234188	1					
ANR	4234549	Identifier	name		4234188	0					
ANR	4234550	IfStatement	if ( ! fi )		4234188	9					
ANR	4234551	Condition	! fi	707:7:19571:19573	4234188	0	True				
ANR	4234552	UnaryOperationExpression	! fi		4234188	0					
ANR	4234553	UnaryOperator	!		4234188	0					
ANR	4234554	Identifier	fi		4234188	1					
ANR	4234555	ExpressionStatement	"fi = r_flag_set ( core -> flags , name , core -> offset , 1 )"	708:4:19580:19637	4234188	1	True				
ANR	4234556	AssignmentExpression	"fi = r_flag_set ( core -> flags , name , core -> offset , 1 )"		4234188	0		=			
ANR	4234557	Identifier	fi		4234188	0					
ANR	4234558	CallExpression	"r_flag_set ( core -> flags , name , core -> offset , 1 )"		4234188	1					
ANR	4234559	Callee	r_flag_set		4234188	0					
ANR	4234560	Identifier	r_flag_set		4234188	0					
ANR	4234561	ArgumentList	core -> flags		4234188	1					
ANR	4234562	Argument	core -> flags		4234188	0					
ANR	4234563	PtrMemberAccess	core -> flags		4234188	0					
ANR	4234564	Identifier	core		4234188	0					
ANR	4234565	Identifier	flags		4234188	1					
ANR	4234566	Argument	name		4234188	1					
ANR	4234567	Identifier	name		4234188	0					
ANR	4234568	Argument	core -> offset		4234188	2					
ANR	4234569	PtrMemberAccess	core -> offset		4234188	0					
ANR	4234570	Identifier	core		4234188	0					
ANR	4234571	Identifier	offset		4234188	1					
ANR	4234572	Argument	1		4234188	3					
ANR	4234573	PrimaryExpression	1		4234188	0					
ANR	4234574	IfStatement	if ( fi )		4234188	10					
ANR	4234575	Condition	fi	710:7:19646:19647	4234188	0	True				
ANR	4234576	Identifier	fi		4234188	0					
ANR	4234577	CompoundStatement		71:11:1493:1493	4234188	1					
ANR	4234578	ExpressionStatement	"r_flag_item_set_alias ( fi , ptr )"	711:4:19656:19687	4234188	0	True				
ANR	4234579	CallExpression	"r_flag_item_set_alias ( fi , ptr )"		4234188	0					
ANR	4234580	Callee	r_flag_item_set_alias		4234188	0					
ANR	4234581	Identifier	r_flag_item_set_alias		4234188	0					
ANR	4234582	ArgumentList	fi		4234188	1					
ANR	4234583	Argument	fi		4234188	0					
ANR	4234584	Identifier	fi		4234188	0					
ANR	4234585	Argument	ptr		4234188	1					
ANR	4234586	Identifier	ptr		4234188	0					
ANR	4234587	ElseStatement	else		4234188	0					
ANR	4234588	CompoundStatement		73:10:1542:1542	4234188	0					
ANR	4234589	ExpressionStatement	"eprintf ( ""Cannot find flag '%s'\\n"" , name )"	713:4:19705:19746	4234188	0	True				
ANR	4234590	CallExpression	"eprintf ( ""Cannot find flag '%s'\\n"" , name )"		4234188	0					
ANR	4234591	Callee	eprintf		4234188	0					
ANR	4234592	Identifier	eprintf		4234188	0					
ANR	4234593	ArgumentList	"""Cannot find flag '%s'\\n"""		4234188	1					
ANR	4234594	Argument	"""Cannot find flag '%s'\\n"""		4234188	0					
ANR	4234595	PrimaryExpression	"""Cannot find flag '%s'\\n"""		4234188	0					
ANR	4234596	Argument	name		4234188	1					
ANR	4234597	Identifier	name		4234188	0					
ANR	4234598	ElseStatement	else		4234188	0					
ANR	4234599	CompoundStatement		76:9:1605:1605	4234188	0					
ANR	4234600	ExpressionStatement	"eprintf ( ""Usage: fa flagname flagalias\\n"" )"	716:3:19767:19809	4234188	0	True				
ANR	4234601	CallExpression	"eprintf ( ""Usage: fa flagname flagalias\\n"" )"		4234188	0					
ANR	4234602	Callee	eprintf		4234188	0					
ANR	4234603	Identifier	eprintf		4234188	0					
ANR	4234604	ArgumentList	"""Usage: fa flagname flagalias\\n"""		4234188	1					
ANR	4234605	Argument	"""Usage: fa flagname flagalias\\n"""		4234188	0					
ANR	4234606	PrimaryExpression	"""Usage: fa flagname flagalias\\n"""		4234188	0					
ANR	4234607	BreakStatement	break ;	718:2:19817:19822	4234188	11	True				
ANR	4234608	Label	case 'V' :	719:1:19825:19833	4234188	12	True				
ANR	4234609	SwitchStatement	switch ( input [ 1 ] )		4234188	13					
ANR	4234610	Condition	input [ 1 ]	720:9:19860:19867	4234188	0	True				
ANR	4234611	ArrayIndexing	input [ 1 ]		4234188	0					
ANR	4234612	Identifier	input		4234188	0					
ANR	4234613	PrimaryExpression	1		4234188	1					
ANR	4234614	CompoundStatement		81:19:1713:1713	4234188	1					
ANR	4234615	Label	case '-' :	721:2:19874:19882	4234188	0	True				
ANR	4234616	ExpressionStatement	r_core_visual_mark_reset ( core )	722:3:19887:19918	4234188	1	True				
ANR	4234617	CallExpression	r_core_visual_mark_reset ( core )		4234188	0					
ANR	4234618	Callee	r_core_visual_mark_reset		4234188	0					
ANR	4234619	Identifier	r_core_visual_mark_reset		4234188	0					
ANR	4234620	ArgumentList	core		4234188	1					
ANR	4234621	Argument	core		4234188	0					
ANR	4234622	Identifier	core		4234188	0					
ANR	4234623	BreakStatement	break ;	723:3:19923:19928	4234188	2	True				
ANR	4234624	Label	case ' ' :	724:2:19932:19940	4234188	3	True				
ANR	4234625	CompoundStatement		87:4:1794:1819	4234188	4					
ANR	4234626	IdentifierDeclStatement	const int ASCII_MAX = 127 ;	726:4:19951:19976	4234188	0	True				
ANR	4234627	IdentifierDecl	ASCII_MAX = 127		4234188	0					
ANR	4234628	IdentifierDeclType	const int		4234188	0					
ANR	4234629	Identifier	ASCII_MAX		4234188	1					
ANR	4234630	AssignmentExpression	ASCII_MAX = 127		4234188	2		=			
ANR	4234631	Identifier	ASCII_MAX		4234188	0					
ANR	4234632	PrimaryExpression	127		4234188	1					
ANR	4234633	IfStatement	if ( atoi ( input + 1 ) + ASCII_MAX + 1 < UT8_MAX )		4234188	1					
ANR	4234634	Condition	atoi ( input + 1 ) + ASCII_MAX + 1 < UT8_MAX	727:8:19986:20025	4234188	0	True				
ANR	4234635	RelationalExpression	atoi ( input + 1 ) + ASCII_MAX + 1 < UT8_MAX		4234188	0		<			
ANR	4234636	AdditiveExpression	atoi ( input + 1 ) + ASCII_MAX + 1		4234188	0		+			
ANR	4234637	CallExpression	atoi ( input + 1 )		4234188	0					
ANR	4234638	Callee	atoi		4234188	0					
ANR	4234639	Identifier	atoi		4234188	0					
ANR	4234640	ArgumentList	input + 1		4234188	1					
ANR	4234641	Argument	input + 1		4234188	0					
ANR	4234642	AdditiveExpression	input + 1		4234188	0		+			
ANR	4234643	Identifier	input		4234188	0					
ANR	4234644	PrimaryExpression	1		4234188	1					
ANR	4234645	AdditiveExpression	ASCII_MAX + 1		4234188	1		+			
ANR	4234646	Identifier	ASCII_MAX		4234188	0					
ANR	4234647	PrimaryExpression	1		4234188	1					
ANR	4234648	Identifier	UT8_MAX		4234188	1					
ANR	4234649	CompoundStatement		90:5:1924:1982	4234188	1					
ANR	4234650	IdentifierDeclStatement	"const char * arg = strchr ( input + 2 , ' ' ) ;"	728:5:20035:20074	4234188	0	True				
ANR	4234651	IdentifierDecl	"* arg = strchr ( input + 2 , ' ' )"		4234188	0					
ANR	4234652	IdentifierDeclType	const char *		4234188	0					
ANR	4234653	Identifier	arg		4234188	1					
ANR	4234654	AssignmentExpression	"* arg = strchr ( input + 2 , ' ' )"		4234188	2		=			
ANR	4234655	Identifier	arg		4234188	0					
ANR	4234656	CallExpression	"strchr ( input + 2 , ' ' )"		4234188	1					
ANR	4234657	Callee	strchr		4234188	0					
ANR	4234658	Identifier	strchr		4234188	0					
ANR	4234659	ArgumentList	input + 2		4234188	1					
ANR	4234660	Argument	input + 2		4234188	0					
ANR	4234661	AdditiveExpression	input + 2		4234188	0		+			
ANR	4234662	Identifier	input		4234188	0					
ANR	4234663	PrimaryExpression	2		4234188	1					
ANR	4234664	Argument	' '		4234188	1					
ANR	4234665	PrimaryExpression	' '		4234188	0					
ANR	4234666	IdentifierDeclStatement	"ut64 addr = arg ? r_num_math ( core -> num , arg ) : core -> offset ;"	729:5:20081:20139	4234188	1	True				
ANR	4234667	IdentifierDecl	"addr = arg ? r_num_math ( core -> num , arg ) : core -> offset"		4234188	0					
ANR	4234668	IdentifierDeclType	ut64		4234188	0					
ANR	4234669	Identifier	addr		4234188	1					
ANR	4234670	AssignmentExpression	"addr = arg ? r_num_math ( core -> num , arg ) : core -> offset"		4234188	2		=			
ANR	4234671	Identifier	addr		4234188	0					
ANR	4234672	ConditionalExpression	"arg ? r_num_math ( core -> num , arg ) : core -> offset"		4234188	1					
ANR	4234673	Condition	arg		4234188	0					
ANR	4234674	Identifier	arg		4234188	0					
ANR	4234675	CallExpression	"r_num_math ( core -> num , arg )"		4234188	1					
ANR	4234676	Callee	r_num_math		4234188	0					
ANR	4234677	Identifier	r_num_math		4234188	0					
ANR	4234678	ArgumentList	core -> num		4234188	1					
ANR	4234679	Argument	core -> num		4234188	0					
ANR	4234680	PtrMemberAccess	core -> num		4234188	0					
ANR	4234681	Identifier	core		4234188	0					
ANR	4234682	Identifier	num		4234188	1					
ANR	4234683	Argument	arg		4234188	1					
ANR	4234684	Identifier	arg		4234188	0					
ANR	4234685	PtrMemberAccess	core -> offset		4234188	2					
ANR	4234686	Identifier	core		4234188	0					
ANR	4234687	Identifier	offset		4234188	1					
ANR	4234688	ExpressionStatement	"r_core_visual_mark_set ( core , atoi ( input + 1 ) + ASCII_MAX + 1 , addr )"	730:5:20146:20213	4234188	2	True				
ANR	4234689	CallExpression	"r_core_visual_mark_set ( core , atoi ( input + 1 ) + ASCII_MAX + 1 , addr )"		4234188	0					
ANR	4234690	Callee	r_core_visual_mark_set		4234188	0					
ANR	4234691	Identifier	r_core_visual_mark_set		4234188	0					
ANR	4234692	ArgumentList	core		4234188	1					
ANR	4234693	Argument	core		4234188	0					
ANR	4234694	Identifier	core		4234188	0					
ANR	4234695	Argument	atoi ( input + 1 ) + ASCII_MAX + 1		4234188	1					
ANR	4234696	AdditiveExpression	atoi ( input + 1 ) + ASCII_MAX + 1		4234188	0		+			
ANR	4234697	CallExpression	atoi ( input + 1 )		4234188	0					
ANR	4234698	Callee	atoi		4234188	0					
ANR	4234699	Identifier	atoi		4234188	0					
ANR	4234700	ArgumentList	input + 1		4234188	1					
ANR	4234701	Argument	input + 1		4234188	0					
ANR	4234702	AdditiveExpression	input + 1		4234188	0		+			
ANR	4234703	Identifier	input		4234188	0					
ANR	4234704	PrimaryExpression	1		4234188	1					
ANR	4234705	AdditiveExpression	ASCII_MAX + 1		4234188	1		+			
ANR	4234706	Identifier	ASCII_MAX		4234188	0					
ANR	4234707	PrimaryExpression	1		4234188	1					
ANR	4234708	Argument	addr		4234188	2					
ANR	4234709	Identifier	addr		4234188	0					
ANR	4234710	BreakStatement	break ;	733:3:20229:20234	4234188	5	True				
ANR	4234711	Label	case '?' :	734:2:20238:20246	4234188	6	True				
ANR	4234712	ExpressionStatement	"eprintf ( ""Usage: fV[*-] [nkey] [offset]\\n"" )"	735:3:20251:20294	4234188	7	True				
ANR	4234713	CallExpression	"eprintf ( ""Usage: fV[*-] [nkey] [offset]\\n"" )"		4234188	0					
ANR	4234714	Callee	eprintf		4234188	0					
ANR	4234715	Identifier	eprintf		4234188	0					
ANR	4234716	ArgumentList	"""Usage: fV[*-] [nkey] [offset]\\n"""		4234188	1					
ANR	4234717	Argument	"""Usage: fV[*-] [nkey] [offset]\\n"""		4234188	0					
ANR	4234718	PrimaryExpression	"""Usage: fV[*-] [nkey] [offset]\\n"""		4234188	0					
ANR	4234719	ExpressionStatement	"eprintf ( ""Dump/Restore visual marks (mK/'K)\\n"" )"	736:3:20299:20346	4234188	8	True				
ANR	4234720	CallExpression	"eprintf ( ""Dump/Restore visual marks (mK/'K)\\n"" )"		4234188	0					
ANR	4234721	Callee	eprintf		4234188	0					
ANR	4234722	Identifier	eprintf		4234188	0					
ANR	4234723	ArgumentList	"""Dump/Restore visual marks (mK/'K)\\n"""		4234188	1					
ANR	4234724	Argument	"""Dump/Restore visual marks (mK/'K)\\n"""		4234188	0					
ANR	4234725	PrimaryExpression	"""Dump/Restore visual marks (mK/'K)\\n"""		4234188	0					
ANR	4234726	BreakStatement	break ;	737:3:20351:20356	4234188	9	True				
ANR	4234727	Label	default :	738:2:20360:20367	4234188	10	True				
ANR	4234728	Identifier	default		4234188	0					
ANR	4234729	ExpressionStatement	r_core_visual_mark_dump ( core )	739:3:20372:20402	4234188	11	True				
ANR	4234730	CallExpression	r_core_visual_mark_dump ( core )		4234188	0					
ANR	4234731	Callee	r_core_visual_mark_dump		4234188	0					
ANR	4234732	Identifier	r_core_visual_mark_dump		4234188	0					
ANR	4234733	ArgumentList	core		4234188	1					
ANR	4234734	Argument	core		4234188	0					
ANR	4234735	Identifier	core		4234188	0					
ANR	4234736	BreakStatement	break ;	740:3:20407:20412	4234188	12	True				
ANR	4234737	BreakStatement	break ;	742:2:20420:20425	4234188	14	True				
ANR	4234738	Label	case 'm' :	743:1:20428:20436	4234188	15	True				
ANR	4234739	ExpressionStatement	"r_flag_move ( core -> flags , core -> offset , r_num_math ( core -> num , input + 1 ) )"	744:2:20448:20520	4234188	16	True				
ANR	4234740	CallExpression	"r_flag_move ( core -> flags , core -> offset , r_num_math ( core -> num , input + 1 ) )"		4234188	0					
ANR	4234741	Callee	r_flag_move		4234188	0					
ANR	4234742	Identifier	r_flag_move		4234188	0					
ANR	4234743	ArgumentList	core -> flags		4234188	1					
ANR	4234744	Argument	core -> flags		4234188	0					
ANR	4234745	PtrMemberAccess	core -> flags		4234188	0					
ANR	4234746	Identifier	core		4234188	0					
ANR	4234747	Identifier	flags		4234188	1					
ANR	4234748	Argument	core -> offset		4234188	1					
ANR	4234749	PtrMemberAccess	core -> offset		4234188	0					
ANR	4234750	Identifier	core		4234188	0					
ANR	4234751	Identifier	offset		4234188	1					
ANR	4234752	Argument	"r_num_math ( core -> num , input + 1 )"		4234188	2					
ANR	4234753	CallExpression	"r_num_math ( core -> num , input + 1 )"		4234188	0					
ANR	4234754	Callee	r_num_math		4234188	0					
ANR	4234755	Identifier	r_num_math		4234188	0					
ANR	4234756	ArgumentList	core -> num		4234188	1					
ANR	4234757	Argument	core -> num		4234188	0					
ANR	4234758	PtrMemberAccess	core -> num		4234188	0					
ANR	4234759	Identifier	core		4234188	0					
ANR	4234760	Identifier	num		4234188	1					
ANR	4234761	Argument	input + 1		4234188	1					
ANR	4234762	AdditiveExpression	input + 1		4234188	0		+			
ANR	4234763	Identifier	input		4234188	0					
ANR	4234764	PrimaryExpression	1		4234188	1					
ANR	4234765	BreakStatement	break ;	745:2:20524:20529	4234188	17	True				
ANR	4234766	Label	case 'R' :	746:1:20532:20540	4234188	18	True				
ANR	4234767	SwitchStatement	switch ( * str )		4234188	19					
ANR	4234768	Condition	* str	747:9:20559:20562	4234188	0	True				
ANR	4234769	UnaryOperationExpression	* str		4234188	0					
ANR	4234770	UnaryOperator	*		4234188	0					
ANR	4234771	Identifier	str		4234188	1					
ANR	4234772	CompoundStatement		108:15:2408:2408	4234188	1					
ANR	4234773	Label	case '\\0' :	748:2:20569:20578	4234188	0	True				
ANR	4234774	ExpressionStatement	"eprintf ( ""Usage: fR [from] [to] ([mask])\\n"" )"	749:3:20583:20627	4234188	1	True				
ANR	4234775	CallExpression	"eprintf ( ""Usage: fR [from] [to] ([mask])\\n"" )"		4234188	0					
ANR	4234776	Callee	eprintf		4234188	0					
ANR	4234777	Identifier	eprintf		4234188	0					
ANR	4234778	ArgumentList	"""Usage: fR [from] [to] ([mask])\\n"""		4234188	1					
ANR	4234779	Argument	"""Usage: fR [from] [to] ([mask])\\n"""		4234188	0					
ANR	4234780	PrimaryExpression	"""Usage: fR [from] [to] ([mask])\\n"""		4234188	0					
ANR	4234781	Statement	eprintf	750:3:20632:20638	4234188	2	True				
ANR	4234782	Statement	(	750:11:20640:20640	4234188	3	True				
ANR	4234783	Statement	"""Example to relocate PIE flags on debugger:\\n"""	750:12:20641:20686	4234188	4	True				
ANR	4234784	Statement	""" > fR entry0 `dm~:1[1]`\\n"""	751:4:20692:20718	4234188	5	True				
ANR	4234785	Statement	)	751:31:20719:20719	4234188	6	True				
ANR	4234786	ExpressionStatement		751:32:20720:20720	4234188	7	True				
ANR	4234787	BreakStatement	break ;	752:3:20725:20730	4234188	8	True				
ANR	4234788	Label	case '?' :	753:2:20734:20742	4234188	9	True				
ANR	4234789	ExpressionStatement	"r_cons_println ( ""Usage: fR [from] [to] ([mask])"" )"	754:3:20747:20796	4234188	10	True				
ANR	4234790	CallExpression	"r_cons_println ( ""Usage: fR [from] [to] ([mask])"" )"		4234188	0					
ANR	4234791	Callee	r_cons_println		4234188	0					
ANR	4234792	Identifier	r_cons_println		4234188	0					
ANR	4234793	ArgumentList	"""Usage: fR [from] [to] ([mask])"""		4234188	1					
ANR	4234794	Argument	"""Usage: fR [from] [to] ([mask])"""		4234188	0					
ANR	4234795	PrimaryExpression	"""Usage: fR [from] [to] ([mask])"""		4234188	0					
ANR	4234796	Statement	r_cons_println	755:3:20801:20814	4234188	11	True				
ANR	4234797	Statement	(	755:18:20816:20816	4234188	12	True				
ANR	4234798	Statement	"""Example to relocate PIE flags on debugger:\\n"""	755:19:20817:20862	4234188	13	True				
ANR	4234799	Statement	""" > fR entry0 `dm~:1[1]`"""	756:4:20868:20892	4234188	14	True				
ANR	4234800	Statement	)	756:29:20893:20893	4234188	15	True				
ANR	4234801	ExpressionStatement		756:30:20894:20894	4234188	16	True				
ANR	4234802	BreakStatement	break ;	757:3:20899:20904	4234188	17	True				
ANR	4234803	Label	default :	758:2:20908:20915	4234188	18	True				
ANR	4234804	Identifier	default		4234188	0					
ANR	4234805	CompoundStatement		123:4:2847:2854	4234188	19					
ANR	4234806	IdentifierDeclStatement	"char * p = strchr ( str + 1 , ' ' ) ;"	760:4:20935:20964	4234188	0	True				
ANR	4234807	IdentifierDecl	"* p = strchr ( str + 1 , ' ' )"		4234188	0					
ANR	4234808	IdentifierDeclType	char *		4234188	0					
ANR	4234809	Identifier	p		4234188	1					
ANR	4234810	AssignmentExpression	"* p = strchr ( str + 1 , ' ' )"		4234188	2		=			
ANR	4234811	Identifier	p		4234188	0					
ANR	4234812	CallExpression	"strchr ( str + 1 , ' ' )"		4234188	1					
ANR	4234813	Callee	strchr		4234188	0					
ANR	4234814	Identifier	strchr		4234188	0					
ANR	4234815	ArgumentList	str + 1		4234188	1					
ANR	4234816	Argument	str + 1		4234188	0					
ANR	4234817	AdditiveExpression	str + 1		4234188	0		+			
ANR	4234818	Identifier	str		4234188	0					
ANR	4234819	PrimaryExpression	1		4234188	1					
ANR	4234820	Argument	' '		4234188	1					
ANR	4234821	PrimaryExpression	' '		4234188	0					
ANR	4234822	IdentifierDeclStatement	"ut64 from , to , mask = 0xffff ;"	761:4:20970:20998	4234188	1	True				
ANR	4234823	IdentifierDecl	from		4234188	0					
ANR	4234824	IdentifierDeclType	ut64		4234188	0					
ANR	4234825	Identifier	from		4234188	1					
ANR	4234826	IdentifierDecl	to		4234188	1					
ANR	4234827	IdentifierDeclType	ut64		4234188	0					
ANR	4234828	Identifier	to		4234188	1					
ANR	4234829	IdentifierDecl	mask = 0xffff		4234188	2					
ANR	4234830	IdentifierDeclType	ut64		4234188	0					
ANR	4234831	Identifier	mask		4234188	1					
ANR	4234832	AssignmentExpression	mask = 0xffff		4234188	2		=			
ANR	4234833	Identifier	mask		4234188	0					
ANR	4234834	PrimaryExpression	0xffff		4234188	1					
ANR	4234835	IdentifierDeclStatement	int ret ;	762:4:21004:21011	4234188	2	True				
ANR	4234836	IdentifierDecl	ret		4234188	0					
ANR	4234837	IdentifierDeclType	int		4234188	0					
ANR	4234838	Identifier	ret		4234188	1					
ANR	4234839	IfStatement	if ( p )		4234188	3					
ANR	4234840	Condition	p	763:8:21021:21021	4234188	0	True				
ANR	4234841	Identifier	p		4234188	0					
ANR	4234842	CompoundStatement		125:5:2874:2901	4234188	1					
ANR	4234843	IdentifierDeclStatement	"char * q = strchr ( p + 1 , ' ' ) ;"	764:5:21031:21058	4234188	0	True				
ANR	4234844	IdentifierDecl	"* q = strchr ( p + 1 , ' ' )"		4234188	0					
ANR	4234845	IdentifierDeclType	char *		4234188	0					
ANR	4234846	Identifier	q		4234188	1					
ANR	4234847	AssignmentExpression	"* q = strchr ( p + 1 , ' ' )"		4234188	2		=			
ANR	4234848	Identifier	q		4234188	0					
ANR	4234849	CallExpression	"strchr ( p + 1 , ' ' )"		4234188	1					
ANR	4234850	Callee	strchr		4234188	0					
ANR	4234851	Identifier	strchr		4234188	0					
ANR	4234852	ArgumentList	p + 1		4234188	1					
ANR	4234853	Argument	p + 1		4234188	0					
ANR	4234854	AdditiveExpression	p + 1		4234188	0		+			
ANR	4234855	Identifier	p		4234188	0					
ANR	4234856	PrimaryExpression	1		4234188	1					
ANR	4234857	Argument	' '		4234188	1					
ANR	4234858	PrimaryExpression	' '		4234188	0					
ANR	4234859	ExpressionStatement	* p = 0	765:5:21065:21071	4234188	1	True				
ANR	4234860	AssignmentExpression	* p = 0		4234188	0		=			
ANR	4234861	UnaryOperationExpression	* p		4234188	0					
ANR	4234862	UnaryOperator	*		4234188	0					
ANR	4234863	Identifier	p		4234188	1					
ANR	4234864	PrimaryExpression	0		4234188	1					
ANR	4234865	IfStatement	if ( q )		4234188	2					
ANR	4234866	Condition	q	766:9:21082:21082	4234188	0	True				
ANR	4234867	Identifier	q		4234188	0					
ANR	4234868	CompoundStatement		127:12:2928:2928	4234188	1					
ANR	4234869	ExpressionStatement	* q = 0	767:6:21093:21099	4234188	0	True				
ANR	4234870	AssignmentExpression	* q = 0		4234188	0		=			
ANR	4234871	UnaryOperationExpression	* q		4234188	0					
ANR	4234872	UnaryOperator	*		4234188	0					
ANR	4234873	Identifier	q		4234188	1					
ANR	4234874	PrimaryExpression	0		4234188	1					
ANR	4234875	ExpressionStatement	"mask = r_num_math ( core -> num , q + 1 )"	768:6:21107:21141	4234188	1	True				
ANR	4234876	AssignmentExpression	"mask = r_num_math ( core -> num , q + 1 )"		4234188	0		=			
ANR	4234877	Identifier	mask		4234188	0					
ANR	4234878	CallExpression	"r_num_math ( core -> num , q + 1 )"		4234188	1					
ANR	4234879	Callee	r_num_math		4234188	0					
ANR	4234880	Identifier	r_num_math		4234188	0					
ANR	4234881	ArgumentList	core -> num		4234188	1					
ANR	4234882	Argument	core -> num		4234188	0					
ANR	4234883	PtrMemberAccess	core -> num		4234188	0					
ANR	4234884	Identifier	core		4234188	0					
ANR	4234885	Identifier	num		4234188	1					
ANR	4234886	Argument	q + 1		4234188	1					
ANR	4234887	AdditiveExpression	q + 1		4234188	0		+			
ANR	4234888	Identifier	q		4234188	0					
ANR	4234889	PrimaryExpression	1		4234188	1					
ANR	4234890	ExpressionStatement	"from = r_num_math ( core -> num , str + 1 )"	770:5:21155:21191	4234188	3	True				
ANR	4234891	AssignmentExpression	"from = r_num_math ( core -> num , str + 1 )"		4234188	0		=			
ANR	4234892	Identifier	from		4234188	0					
ANR	4234893	CallExpression	"r_num_math ( core -> num , str + 1 )"		4234188	1					
ANR	4234894	Callee	r_num_math		4234188	0					
ANR	4234895	Identifier	r_num_math		4234188	0					
ANR	4234896	ArgumentList	core -> num		4234188	1					
ANR	4234897	Argument	core -> num		4234188	0					
ANR	4234898	PtrMemberAccess	core -> num		4234188	0					
ANR	4234899	Identifier	core		4234188	0					
ANR	4234900	Identifier	num		4234188	1					
ANR	4234901	Argument	str + 1		4234188	1					
ANR	4234902	AdditiveExpression	str + 1		4234188	0		+			
ANR	4234903	Identifier	str		4234188	0					
ANR	4234904	PrimaryExpression	1		4234188	1					
ANR	4234905	ExpressionStatement	"to = r_num_math ( core -> num , p + 1 )"	771:5:21198:21230	4234188	4	True				
ANR	4234906	AssignmentExpression	"to = r_num_math ( core -> num , p + 1 )"		4234188	0		=			
ANR	4234907	Identifier	to		4234188	0					
ANR	4234908	CallExpression	"r_num_math ( core -> num , p + 1 )"		4234188	1					
ANR	4234909	Callee	r_num_math		4234188	0					
ANR	4234910	Identifier	r_num_math		4234188	0					
ANR	4234911	ArgumentList	core -> num		4234188	1					
ANR	4234912	Argument	core -> num		4234188	0					
ANR	4234913	PtrMemberAccess	core -> num		4234188	0					
ANR	4234914	Identifier	core		4234188	0					
ANR	4234915	Identifier	num		4234188	1					
ANR	4234916	Argument	p + 1		4234188	1					
ANR	4234917	AdditiveExpression	p + 1		4234188	0		+			
ANR	4234918	Identifier	p		4234188	0					
ANR	4234919	PrimaryExpression	1		4234188	1					
ANR	4234920	ExpressionStatement	"ret = r_flag_relocate ( core -> flags , from , mask , to )"	772:5:21237:21288	4234188	5	True				
ANR	4234921	AssignmentExpression	"ret = r_flag_relocate ( core -> flags , from , mask , to )"		4234188	0		=			
ANR	4234922	Identifier	ret		4234188	0					
ANR	4234923	CallExpression	"r_flag_relocate ( core -> flags , from , mask , to )"		4234188	1					
ANR	4234924	Callee	r_flag_relocate		4234188	0					
ANR	4234925	Identifier	r_flag_relocate		4234188	0					
ANR	4234926	ArgumentList	core -> flags		4234188	1					
ANR	4234927	Argument	core -> flags		4234188	0					
ANR	4234928	PtrMemberAccess	core -> flags		4234188	0					
ANR	4234929	Identifier	core		4234188	0					
ANR	4234930	Identifier	flags		4234188	1					
ANR	4234931	Argument	from		4234188	1					
ANR	4234932	Identifier	from		4234188	0					
ANR	4234933	Argument	mask		4234188	2					
ANR	4234934	Identifier	mask		4234188	0					
ANR	4234935	Argument	to		4234188	3					
ANR	4234936	Identifier	to		4234188	0					
ANR	4234937	ExpressionStatement	"eprintf ( ""Relocated %d flags\\n"" , ret )"	773:5:21295:21332	4234188	6	True				
ANR	4234938	CallExpression	"eprintf ( ""Relocated %d flags\\n"" , ret )"		4234188	0					
ANR	4234939	Callee	eprintf		4234188	0					
ANR	4234940	Identifier	eprintf		4234188	0					
ANR	4234941	ArgumentList	"""Relocated %d flags\\n"""		4234188	1					
ANR	4234942	Argument	"""Relocated %d flags\\n"""		4234188	0					
ANR	4234943	PrimaryExpression	"""Relocated %d flags\\n"""		4234188	0					
ANR	4234944	Argument	ret		4234188	1					
ANR	4234945	Identifier	ret		4234188	0					
ANR	4234946	ElseStatement	else		4234188	0					
ANR	4234947	CompoundStatement		135:11:3188:3188	4234188	0					
ANR	4234948	ExpressionStatement	"eprintf ( ""Usage: fR [from] [to] ([mask])\\n"" )"	775:5:21352:21396	4234188	0	True				
ANR	4234949	CallExpression	"eprintf ( ""Usage: fR [from] [to] ([mask])\\n"" )"		4234188	0					
ANR	4234950	Callee	eprintf		4234188	0					
ANR	4234951	Identifier	eprintf		4234188	0					
ANR	4234952	ArgumentList	"""Usage: fR [from] [to] ([mask])\\n"""		4234188	1					
ANR	4234953	Argument	"""Usage: fR [from] [to] ([mask])\\n"""		4234188	0					
ANR	4234954	PrimaryExpression	"""Usage: fR [from] [to] ([mask])\\n"""		4234188	0					
ANR	4234955	Statement	eprintf	776:5:21403:21409	4234188	1	True				
ANR	4234956	Statement	(	776:13:21411:21411	4234188	2	True				
ANR	4234957	Statement	"""Example to relocate PIE flags on debugger:\\n"""	776:14:21412:21457	4234188	3	True				
ANR	4234958	Statement	""" > fR entry0 `dm~:1[1]`\\n"""	777:6:21465:21491	4234188	4	True				
ANR	4234959	Statement	)	777:33:21492:21492	4234188	5	True				
ANR	4234960	ExpressionStatement		777:34:21493:21493	4234188	6	True				
ANR	4234961	BreakStatement	break ;	781:2:21512:21517	4234188	20	True				
ANR	4234962	Label	case 'b' :	782:1:21520:21528	4234188	21	True				
ANR	4234963	SwitchStatement	switch ( input [ 1 ] )		4234188	22					
ANR	4234964	Condition	input [ 1 ]	783:10:21548:21555	4234188	0	True				
ANR	4234965	ArrayIndexing	input [ 1 ]		4234188	0					
ANR	4234966	Identifier	input		4234188	0					
ANR	4234967	PrimaryExpression	1		4234188	1					
ANR	4234968	CompoundStatement		144:20:3401:3401	4234188	1					
ANR	4234969	Label	case ' ' :	784:2:21562:21570	4234188	0	True				
ANR	4234970	ExpressionStatement	free ( str )	785:3:21575:21585	4234188	1	True				
ANR	4234971	CallExpression	free ( str )		4234188	0					
ANR	4234972	Callee	free		4234188	0					
ANR	4234973	Identifier	free		4234188	0					
ANR	4234974	ArgumentList	str		4234188	1					
ANR	4234975	Argument	str		4234188	0					
ANR	4234976	Identifier	str		4234188	0					
ANR	4234977	ExpressionStatement	str = strdup ( input + 2 )	786:3:21590:21614	4234188	2	True				
ANR	4234978	AssignmentExpression	str = strdup ( input + 2 )		4234188	0		=			
ANR	4234979	Identifier	str		4234188	0					
ANR	4234980	CallExpression	strdup ( input + 2 )		4234188	1					
ANR	4234981	Callee	strdup		4234188	0					
ANR	4234982	Identifier	strdup		4234188	0					
ANR	4234983	ArgumentList	input + 2		4234188	1					
ANR	4234984	Argument	input + 2		4234188	0					
ANR	4234985	AdditiveExpression	input + 2		4234188	0		+			
ANR	4234986	Identifier	input		4234188	0					
ANR	4234987	PrimaryExpression	2		4234188	1					
ANR	4234988	ExpressionStatement	"ptr = strchr ( str , ' ' )"	787:3:21619:21642	4234188	3	True				
ANR	4234989	AssignmentExpression	"ptr = strchr ( str , ' ' )"		4234188	0		=			
ANR	4234990	Identifier	ptr		4234188	0					
ANR	4234991	CallExpression	"strchr ( str , ' ' )"		4234188	1					
ANR	4234992	Callee	strchr		4234188	0					
ANR	4234993	Identifier	strchr		4234188	0					
ANR	4234994	ArgumentList	str		4234188	1					
ANR	4234995	Argument	str		4234188	0					
ANR	4234996	Identifier	str		4234188	0					
ANR	4234997	Argument	' '		4234188	1					
ANR	4234998	PrimaryExpression	' '		4234188	0					
ANR	4234999	IfStatement	if ( ptr )		4234188	4					
ANR	4235000	Condition	ptr	788:7:21651:21653	4234188	0	True				
ANR	4235001	Identifier	ptr		4234188	0					
ANR	4235002	CompoundStatement		150:4:3505:3527	4234188	1					
ANR	4235003	IdentifierDeclStatement	RFlag * f = core -> flags ;	789:4:21662:21684	4234188	0	True				
ANR	4235004	IdentifierDecl	* f = core -> flags		4234188	0					
ANR	4235005	IdentifierDeclType	RFlag *		4234188	0					
ANR	4235006	Identifier	f		4234188	1					
ANR	4235007	AssignmentExpression	* f = core -> flags		4234188	2		=			
ANR	4235008	Identifier	f		4234188	0					
ANR	4235009	PtrMemberAccess	core -> flags		4234188	1					
ANR	4235010	Identifier	core		4234188	0					
ANR	4235011	Identifier	flags		4234188	1					
ANR	4235012	ExpressionStatement	* ptr = 0	790:4:21690:21698	4234188	1	True				
ANR	4235013	AssignmentExpression	* ptr = 0		4234188	0		=			
ANR	4235014	UnaryOperationExpression	* ptr		4234188	0					
ANR	4235015	UnaryOperator	*		4234188	0					
ANR	4235016	Identifier	ptr		4234188	1					
ANR	4235017	PrimaryExpression	0		4234188	1					
ANR	4235018	ExpressionStatement	"base = r_num_math ( core -> num , str )"	791:4:21704:21738	4234188	2	True				
ANR	4235019	AssignmentExpression	"base = r_num_math ( core -> num , str )"		4234188	0		=			
ANR	4235020	Identifier	base		4234188	0					
ANR	4235021	CallExpression	"r_num_math ( core -> num , str )"		4234188	1					
ANR	4235022	Callee	r_num_math		4234188	0					
ANR	4235023	Identifier	r_num_math		4234188	0					
ANR	4235024	ArgumentList	core -> num		4234188	1					
ANR	4235025	Argument	core -> num		4234188	0					
ANR	4235026	PtrMemberAccess	core -> num		4234188	0					
ANR	4235027	Identifier	core		4234188	0					
ANR	4235028	Identifier	num		4234188	1					
ANR	4235029	Argument	str		4234188	1					
ANR	4235030	Identifier	str		4234188	0					
ANR	4235031	ExpressionStatement	"r_flag_foreach_glob ( f , ptr + 1 , adjust_offset , & base )"	792:4:21744:21798	4234188	3	True				
ANR	4235032	CallExpression	"r_flag_foreach_glob ( f , ptr + 1 , adjust_offset , & base )"		4234188	0					
ANR	4235033	Callee	r_flag_foreach_glob		4234188	0					
ANR	4235034	Identifier	r_flag_foreach_glob		4234188	0					
ANR	4235035	ArgumentList	f		4234188	1					
ANR	4235036	Argument	f		4234188	0					
ANR	4235037	Identifier	f		4234188	0					
ANR	4235038	Argument	ptr + 1		4234188	1					
ANR	4235039	AdditiveExpression	ptr + 1		4234188	0		+			
ANR	4235040	Identifier	ptr		4234188	0					
ANR	4235041	PrimaryExpression	1		4234188	1					
ANR	4235042	Argument	adjust_offset		4234188	2					
ANR	4235043	Identifier	adjust_offset		4234188	0					
ANR	4235044	Argument	& base		4234188	3					
ANR	4235045	UnaryOperationExpression	& base		4234188	0					
ANR	4235046	UnaryOperator	&		4234188	0					
ANR	4235047	Identifier	base		4234188	1					
ANR	4235048	ElseStatement	else		4234188	0					
ANR	4235049	CompoundStatement		154:10:3653:3653	4234188	0					
ANR	4235050	ExpressionStatement	"core -> flags -> base = r_num_math ( core -> num , input + 1 )"	794:4:21816:21867	4234188	0	True				
ANR	4235051	AssignmentExpression	"core -> flags -> base = r_num_math ( core -> num , input + 1 )"		4234188	0		=			
ANR	4235052	PtrMemberAccess	core -> flags -> base		4234188	0					
ANR	4235053	PtrMemberAccess	core -> flags		4234188	0					
ANR	4235054	Identifier	core		4234188	0					
ANR	4235055	Identifier	flags		4234188	1					
ANR	4235056	Identifier	base		4234188	1					
ANR	4235057	CallExpression	"r_num_math ( core -> num , input + 1 )"		4234188	1					
ANR	4235058	Callee	r_num_math		4234188	0					
ANR	4235059	Identifier	r_num_math		4234188	0					
ANR	4235060	ArgumentList	core -> num		4234188	1					
ANR	4235061	Argument	core -> num		4234188	0					
ANR	4235062	PtrMemberAccess	core -> num		4234188	0					
ANR	4235063	Identifier	core		4234188	0					
ANR	4235064	Identifier	num		4234188	1					
ANR	4235065	Argument	input + 1		4234188	1					
ANR	4235066	AdditiveExpression	input + 1		4234188	0		+			
ANR	4235067	Identifier	input		4234188	0					
ANR	4235068	PrimaryExpression	1		4234188	1					
ANR	4235069	ExpressionStatement	R_FREE ( str )	796:3:21877:21889	4234188	5	True				
ANR	4235070	CallExpression	R_FREE ( str )		4234188	0					
ANR	4235071	Callee	R_FREE		4234188	0					
ANR	4235072	Identifier	R_FREE		4234188	0					
ANR	4235073	ArgumentList	str		4234188	1					
ANR	4235074	Argument	str		4234188	0					
ANR	4235075	Identifier	str		4234188	0					
ANR	4235076	BreakStatement	break ;	797:3:21894:21899	4234188	6	True				
ANR	4235077	Label	case '\\0' :	798:2:21903:21912	4234188	7	True				
ANR	4235078	Statement	r_cons_printf	799:3:21917:21929	4234188	8	True				
ANR	4235079	Statement	(	799:17:21931:21931	4234188	9	True				
ANR	4235080	Statement	"""%"""	799:18:21932:21934	4234188	10	True				
ANR	4235081	Statement	PFMT64d	799:21:21935:21941	4234188	11	True				
ANR	4235082	Statement	""" 0x%"""	799:28:21942:21947	4234188	12	True				
ANR	4235083	Statement	PFMT64x	799:34:21948:21954	4234188	13	True				
ANR	4235084	Statement	"""\\n"""	799:41:21955:21958	4234188	14	True				
ANR	4235085	Statement	","	799:45:21959:21959	4234188	15	True				
ANR	4235086	Statement	core	800:4:21965:21968	4234188	16	True				
ANR	4235087	Statement	->	800:8:21969:21970	4234188	17	True				
ANR	4235088	Statement	flags	800:10:21971:21975	4234188	18	True				
ANR	4235089	Statement	->	800:15:21976:21977	4234188	19	True				
ANR	4235090	Statement	base	800:17:21978:21981	4234188	20	True				
ANR	4235091	Statement	","	800:21:21982:21982	4234188	21	True				
ANR	4235092	Statement	core	801:4:21988:21991	4234188	22	True				
ANR	4235093	Statement	->	801:8:21992:21993	4234188	23	True				
ANR	4235094	Statement	flags	801:10:21994:21998	4234188	24	True				
ANR	4235095	Statement	->	801:15:21999:22000	4234188	25	True				
ANR	4235096	Statement	base	801:17:22001:22004	4234188	26	True				
ANR	4235097	Statement	)	801:21:22005:22005	4234188	27	True				
ANR	4235098	ExpressionStatement		801:22:22006:22006	4234188	28	True				
ANR	4235099	BreakStatement	break ;	802:3:22011:22016	4234188	29	True				
ANR	4235100	Label	default :	803:2:22020:22027	4234188	30	True				
ANR	4235101	Identifier	default		4234188	0					
ANR	4235102	ExpressionStatement	"eprintf ( ""Usage: fb [addr] [[flags*]]\\n"" )"	804:3:22032:22073	4234188	31	True				
ANR	4235103	CallExpression	"eprintf ( ""Usage: fb [addr] [[flags*]]\\n"" )"		4234188	0					
ANR	4235104	Callee	eprintf		4234188	0					
ANR	4235105	Identifier	eprintf		4234188	0					
ANR	4235106	ArgumentList	"""Usage: fb [addr] [[flags*]]\\n"""		4234188	1					
ANR	4235107	Argument	"""Usage: fb [addr] [[flags*]]\\n"""		4234188	0					
ANR	4235108	PrimaryExpression	"""Usage: fb [addr] [[flags*]]\\n"""		4234188	0					
ANR	4235109	BreakStatement	break ;	805:3:22078:22083	4234188	32	True				
ANR	4235110	BreakStatement	break ;	807:2:22091:22096	4234188	23	True				
ANR	4235111	Label	case '+' :	808:1:22099:22107	4234188	24	True				
ANR	4235112	Label	case ' ' :	809:1:22118:22126	4234188	25	True				
ANR	4235113	CompoundStatement		224:2:5312:5331	4234188	26					
ANR	4235114	IdentifierDeclStatement	const char * cstr = r_str_trim_ro ( str ) ;	810:2:22132:22170	4234188	0	True				
ANR	4235115	IdentifierDecl	* cstr = r_str_trim_ro ( str )		4234188	0					
ANR	4235116	IdentifierDeclType	const char *		4234188	0					
ANR	4235117	Identifier	cstr		4234188	1					
ANR	4235118	AssignmentExpression	* cstr = r_str_trim_ro ( str )		4234188	2		=			
ANR	4235119	Identifier	cstr		4234188	0					
ANR	4235120	CallExpression	r_str_trim_ro ( str )		4234188	1					
ANR	4235121	Callee	r_str_trim_ro		4234188	0					
ANR	4235122	Identifier	r_str_trim_ro		4234188	0					
ANR	4235123	ArgumentList	str		4234188	1					
ANR	4235124	Argument	str		4234188	0					
ANR	4235125	Identifier	str		4234188	0					
ANR	4235126	IdentifierDeclStatement	"char * eq = strchr ( cstr , '=' ) ;"	811:2:22174:22203	4234188	1	True				
ANR	4235127	IdentifierDecl	"* eq = strchr ( cstr , '=' )"		4234188	0					
ANR	4235128	IdentifierDeclType	char *		4234188	0					
ANR	4235129	Identifier	eq		4234188	1					
ANR	4235130	AssignmentExpression	"* eq = strchr ( cstr , '=' )"		4234188	2		=			
ANR	4235131	Identifier	eq		4234188	0					
ANR	4235132	CallExpression	"strchr ( cstr , '=' )"		4234188	1					
ANR	4235133	Callee	strchr		4234188	0					
ANR	4235134	Identifier	strchr		4234188	0					
ANR	4235135	ArgumentList	cstr		4234188	1					
ANR	4235136	Argument	cstr		4234188	0					
ANR	4235137	Identifier	cstr		4234188	0					
ANR	4235138	Argument	'='		4234188	1					
ANR	4235139	PrimaryExpression	'='		4234188	0					
ANR	4235140	IdentifierDeclStatement	"char * b64 = strstr ( cstr , ""base64:"" ) ;"	812:2:22207:22243	4234188	2	True				
ANR	4235141	IdentifierDecl	"* b64 = strstr ( cstr , ""base64:"" )"		4234188	0					
ANR	4235142	IdentifierDeclType	char *		4234188	0					
ANR	4235143	Identifier	b64		4234188	1					
ANR	4235144	AssignmentExpression	"* b64 = strstr ( cstr , ""base64:"" )"		4234188	2		=			
ANR	4235145	Identifier	b64		4234188	0					
ANR	4235146	CallExpression	"strstr ( cstr , ""base64:"" )"		4234188	1					
ANR	4235147	Callee	strstr		4234188	0					
ANR	4235148	Identifier	strstr		4234188	0					
ANR	4235149	ArgumentList	cstr		4234188	1					
ANR	4235150	Argument	cstr		4234188	0					
ANR	4235151	Identifier	cstr		4234188	0					
ANR	4235152	Argument	"""base64:"""		4234188	1					
ANR	4235153	PrimaryExpression	"""base64:"""		4234188	0					
ANR	4235154	IdentifierDeclStatement	"char * s = strchr ( cstr , ' ' ) ;"	813:2:22247:22275	4234188	3	True				
ANR	4235155	IdentifierDecl	"* s = strchr ( cstr , ' ' )"		4234188	0					
ANR	4235156	IdentifierDeclType	char *		4234188	0					
ANR	4235157	Identifier	s		4234188	1					
ANR	4235158	AssignmentExpression	"* s = strchr ( cstr , ' ' )"		4234188	2		=			
ANR	4235159	Identifier	s		4234188	0					
ANR	4235160	CallExpression	"strchr ( cstr , ' ' )"		4234188	1					
ANR	4235161	Callee	strchr		4234188	0					
ANR	4235162	Identifier	strchr		4234188	0					
ANR	4235163	ArgumentList	cstr		4234188	1					
ANR	4235164	Argument	cstr		4234188	0					
ANR	4235165	Identifier	cstr		4234188	0					
ANR	4235166	Argument	' '		4234188	1					
ANR	4235167	PrimaryExpression	' '		4234188	0					
ANR	4235168	IdentifierDeclStatement	"char * s2 = NULL , * s3 = NULL ;"	814:2:22279:22306	4234188	4	True				
ANR	4235169	IdentifierDecl	* s2 = NULL		4234188	0					
ANR	4235170	IdentifierDeclType	char *		4234188	0					
ANR	4235171	Identifier	s2		4234188	1					
ANR	4235172	AssignmentExpression	* s2 = NULL		4234188	2		=			
ANR	4235173	Identifier	NULL		4234188	0					
ANR	4235174	Identifier	NULL		4234188	1					
ANR	4235175	IdentifierDecl	* s3 = NULL		4234188	1					
ANR	4235176	IdentifierDeclType	char *		4234188	0					
ANR	4235177	Identifier	s3		4234188	1					
ANR	4235178	AssignmentExpression	* s3 = NULL		4234188	2		=			
ANR	4235179	Identifier	NULL		4234188	0					
ANR	4235180	Identifier	NULL		4234188	1					
ANR	4235181	IdentifierDeclStatement	char * comment = NULL ;	815:2:22310:22330	4234188	5	True				
ANR	4235182	IdentifierDecl	* comment = NULL		4234188	0					
ANR	4235183	IdentifierDeclType	char *		4234188	0					
ANR	4235184	Identifier	comment		4234188	1					
ANR	4235185	AssignmentExpression	* comment = NULL		4234188	2		=			
ANR	4235186	Identifier	NULL		4234188	0					
ANR	4235187	Identifier	NULL		4234188	1					
ANR	4235188	IdentifierDeclStatement	bool comment_needs_free = false ;	816:2:22334:22365	4234188	6	True				
ANR	4235189	IdentifierDecl	comment_needs_free = false		4234188	0					
ANR	4235190	IdentifierDeclType	bool		4234188	0					
ANR	4235191	Identifier	comment_needs_free		4234188	1					
ANR	4235192	AssignmentExpression	comment_needs_free = false		4234188	2		=			
ANR	4235193	Identifier	false		4234188	0					
ANR	4235194	Identifier	false		4234188	1					
ANR	4235195	IdentifierDeclStatement	ut32 bsze = 1 ;	817:2:22369:22382	4234188	7	True				
ANR	4235196	IdentifierDecl	bsze = 1		4234188	0					
ANR	4235197	IdentifierDeclType	ut32		4234188	0					
ANR	4235198	Identifier	bsze		4234188	1					
ANR	4235199	AssignmentExpression	bsze = 1		4234188	2		=			
ANR	4235200	Identifier	bsze		4234188	0					
ANR	4235201	PrimaryExpression	1		4234188	1					
ANR	4235202	IfStatement	if ( * cstr == '.' )		4234188	8					
ANR	4235203	Condition	* cstr == '.'	821:6:22552:22563	4234188	0	True				
ANR	4235204	EqualityExpression	* cstr == '.'		4234188	0		==			
ANR	4235205	UnaryOperationExpression	* cstr		4234188	0					
ANR	4235206	UnaryOperator	*		4234188	0					
ANR	4235207	Identifier	cstr		4234188	1					
ANR	4235208	PrimaryExpression	'.'		4234188	1					
ANR	4235209	CompoundStatement		182:20:4409:4409	4234188	1					
ANR	4235210	ExpressionStatement	input ++	822:3:22571:22578	4234188	0	True				
ANR	4235211	PostIncDecOperationExpression	input ++		4234188	0					
ANR	4235212	Identifier	input		4234188	0					
ANR	4235213	IncDec	++		4234188	1					
ANR	4235214	GotoStatement	goto rep ;	823:3:22583:22591	4234188	1	True				
ANR	4235215	Identifier	rep		4234188	0					
ANR	4235216	IfStatement	if ( eq && ! ( b64 && eq > b64 && ( eq [ 1 ] == '\\0' || ( eq [ 1 ] == '=' && eq [ 2 ] == '\\0' ) ) ) )		4234188	9					
ANR	4235217	Condition	eq && ! ( b64 && eq > b64 && ( eq [ 1 ] == '\\0' || ( eq [ 1 ] == '=' && eq [ 2 ] == '\\0' ) ) )	826:6:22629:22706	4234188	0	True				
ANR	4235218	AndExpression	eq && ! ( b64 && eq > b64 && ( eq [ 1 ] == '\\0' || ( eq [ 1 ] == '=' && eq [ 2 ] == '\\0' ) ) )		4234188	0		&&			
ANR	4235219	Identifier	eq		4234188	0					
ANR	4235220	UnaryOperationExpression	! ( b64 && eq > b64 && ( eq [ 1 ] == '\\0' || ( eq [ 1 ] == '=' && eq [ 2 ] == '\\0' ) ) )		4234188	1					
ANR	4235221	UnaryOperator	!		4234188	0					
ANR	4235222	AndExpression	b64 && eq > b64 && ( eq [ 1 ] == '\\0' || ( eq [ 1 ] == '=' && eq [ 2 ] == '\\0' ) )		4234188	1		&&			
ANR	4235223	Identifier	b64		4234188	0					
ANR	4235224	AndExpression	eq > b64 && ( eq [ 1 ] == '\\0' || ( eq [ 1 ] == '=' && eq [ 2 ] == '\\0' ) )		4234188	1		&&			
ANR	4235225	RelationalExpression	eq > b64		4234188	0		>			
ANR	4235226	Identifier	eq		4234188	0					
ANR	4235227	Identifier	b64		4234188	1					
ANR	4235228	OrExpression	eq [ 1 ] == '\\0' || ( eq [ 1 ] == '=' && eq [ 2 ] == '\\0' )		4234188	1		||			
ANR	4235229	EqualityExpression	eq [ 1 ] == '\\0'		4234188	0		==			
ANR	4235230	ArrayIndexing	eq [ 1 ]		4234188	0					
ANR	4235231	Identifier	eq		4234188	0					
ANR	4235232	PrimaryExpression	1		4234188	1					
ANR	4235233	PrimaryExpression	'\\0'		4234188	1					
ANR	4235234	AndExpression	eq [ 1 ] == '=' && eq [ 2 ] == '\\0'		4234188	1		&&			
ANR	4235235	EqualityExpression	eq [ 1 ] == '='		4234188	0		==			
ANR	4235236	ArrayIndexing	eq [ 1 ]		4234188	0					
ANR	4235237	Identifier	eq		4234188	0					
ANR	4235238	PrimaryExpression	1		4234188	1					
ANR	4235239	PrimaryExpression	'='		4234188	1					
ANR	4235240	EqualityExpression	eq [ 2 ] == '\\0'		4234188	1		==			
ANR	4235241	ArrayIndexing	eq [ 2 ]		4234188	0					
ANR	4235242	Identifier	eq		4234188	0					
ANR	4235243	PrimaryExpression	2		4234188	1					
ANR	4235244	PrimaryExpression	'\\0'		4234188	1					
ANR	4235245	CompoundStatement		187:86:4552:4552	4234188	1					
ANR	4235246	ExpressionStatement	* eq = 0	828:3:22779:22786	4234188	0	True				
ANR	4235247	AssignmentExpression	* eq = 0		4234188	0		=			
ANR	4235248	UnaryOperationExpression	* eq		4234188	0					
ANR	4235249	UnaryOperator	*		4234188	0					
ANR	4235250	Identifier	eq		4234188	1					
ANR	4235251	PrimaryExpression	0		4234188	1					
ANR	4235252	ExpressionStatement	"off = r_num_math ( core -> num , eq + 1 )"	829:3:22791:22827	4234188	1	True				
ANR	4235253	AssignmentExpression	"off = r_num_math ( core -> num , eq + 1 )"		4234188	0		=			
ANR	4235254	Identifier	off		4234188	0					
ANR	4235255	CallExpression	"r_num_math ( core -> num , eq + 1 )"		4234188	1					
ANR	4235256	Callee	r_num_math		4234188	0					
ANR	4235257	Identifier	r_num_math		4234188	0					
ANR	4235258	ArgumentList	core -> num		4234188	1					
ANR	4235259	Argument	core -> num		4234188	0					
ANR	4235260	PtrMemberAccess	core -> num		4234188	0					
ANR	4235261	Identifier	core		4234188	0					
ANR	4235262	Identifier	num		4234188	1					
ANR	4235263	Argument	eq + 1		4234188	1					
ANR	4235264	AdditiveExpression	eq + 1		4234188	0		+			
ANR	4235265	Identifier	eq		4234188	0					
ANR	4235266	PrimaryExpression	1		4234188	1					
ANR	4235267	IfStatement	if ( s )		4234188	10					
ANR	4235268	Condition	s	831:6:22839:22839	4234188	0	True				
ANR	4235269	Identifier	s		4234188	0					
ANR	4235270	CompoundStatement		192:9:4685:4685	4234188	1					
ANR	4235271	ExpressionStatement	* s = '\\0'	832:3:22847:22856	4234188	0	True				
ANR	4235272	AssignmentExpression	* s = '\\0'		4234188	0		=			
ANR	4235273	UnaryOperationExpression	* s		4234188	0					
ANR	4235274	UnaryOperator	*		4234188	0					
ANR	4235275	Identifier	s		4234188	1					
ANR	4235276	PrimaryExpression	'\\0'		4234188	1					
ANR	4235277	ExpressionStatement	"s2 = strchr ( s + 1 , ' ' )"	833:3:22861:22885	4234188	1	True				
ANR	4235278	AssignmentExpression	"s2 = strchr ( s + 1 , ' ' )"		4234188	0		=			
ANR	4235279	Identifier	s2		4234188	0					
ANR	4235280	CallExpression	"strchr ( s + 1 , ' ' )"		4234188	1					
ANR	4235281	Callee	strchr		4234188	0					
ANR	4235282	Identifier	strchr		4234188	0					
ANR	4235283	ArgumentList	s + 1		4234188	1					
ANR	4235284	Argument	s + 1		4234188	0					
ANR	4235285	AdditiveExpression	s + 1		4234188	0		+			
ANR	4235286	Identifier	s		4234188	0					
ANR	4235287	PrimaryExpression	1		4234188	1					
ANR	4235288	Argument	' '		4234188	1					
ANR	4235289	PrimaryExpression	' '		4234188	0					
ANR	4235290	IfStatement	if ( s2 )		4234188	2					
ANR	4235291	Condition	s2	834:7:22894:22895	4234188	0	True				
ANR	4235292	Identifier	s2		4234188	0					
ANR	4235293	CompoundStatement		195:11:4741:4741	4234188	1					
ANR	4235294	ExpressionStatement	* s2 = '\\0'	835:4:22904:22914	4234188	0	True				
ANR	4235295	AssignmentExpression	* s2 = '\\0'		4234188	0		=			
ANR	4235296	UnaryOperationExpression	* s2		4234188	0					
ANR	4235297	UnaryOperator	*		4234188	0					
ANR	4235298	Identifier	s2		4234188	1					
ANR	4235299	PrimaryExpression	'\\0'		4234188	1					
ANR	4235300	IfStatement	if ( s2 [ 1 ] && s2 [ 2 ] )		4234188	1					
ANR	4235301	Condition	s2 [ 1 ] && s2 [ 2 ]	836:8:22924:22937	4234188	0	True				
ANR	4235302	AndExpression	s2 [ 1 ] && s2 [ 2 ]		4234188	0		&&			
ANR	4235303	ArrayIndexing	s2 [ 1 ]		4234188	0					
ANR	4235304	Identifier	s2		4234188	0					
ANR	4235305	PrimaryExpression	1		4234188	1					
ANR	4235306	ArrayIndexing	s2 [ 2 ]		4234188	1					
ANR	4235307	Identifier	s2		4234188	0					
ANR	4235308	PrimaryExpression	2		4234188	1					
ANR	4235309	CompoundStatement		197:24:4783:4783	4234188	1					
ANR	4235310	ExpressionStatement	"off = r_num_math ( core -> num , s2 + 1 )"	837:5:22947:22983	4234188	0	True				
ANR	4235311	AssignmentExpression	"off = r_num_math ( core -> num , s2 + 1 )"		4234188	0		=			
ANR	4235312	Identifier	off		4234188	0					
ANR	4235313	CallExpression	"r_num_math ( core -> num , s2 + 1 )"		4234188	1					
ANR	4235314	Callee	r_num_math		4234188	0					
ANR	4235315	Identifier	r_num_math		4234188	0					
ANR	4235316	ArgumentList	core -> num		4234188	1					
ANR	4235317	Argument	core -> num		4234188	0					
ANR	4235318	PtrMemberAccess	core -> num		4234188	0					
ANR	4235319	Identifier	core		4234188	0					
ANR	4235320	Identifier	num		4234188	1					
ANR	4235321	Argument	s2 + 1		4234188	1					
ANR	4235322	AdditiveExpression	s2 + 1		4234188	0		+			
ANR	4235323	Identifier	s2		4234188	0					
ANR	4235324	PrimaryExpression	1		4234188	1					
ANR	4235325	ExpressionStatement	"s3 = strchr ( s2 + 1 , ' ' )"	839:4:22995:23020	4234188	2	True				
ANR	4235326	AssignmentExpression	"s3 = strchr ( s2 + 1 , ' ' )"		4234188	0		=			
ANR	4235327	Identifier	s3		4234188	0					
ANR	4235328	CallExpression	"strchr ( s2 + 1 , ' ' )"		4234188	1					
ANR	4235329	Callee	strchr		4234188	0					
ANR	4235330	Identifier	strchr		4234188	0					
ANR	4235331	ArgumentList	s2 + 1		4234188	1					
ANR	4235332	Argument	s2 + 1		4234188	0					
ANR	4235333	AdditiveExpression	s2 + 1		4234188	0		+			
ANR	4235334	Identifier	s2		4234188	0					
ANR	4235335	PrimaryExpression	1		4234188	1					
ANR	4235336	Argument	' '		4234188	1					
ANR	4235337	PrimaryExpression	' '		4234188	0					
ANR	4235338	IfStatement	if ( s3 )		4234188	3					
ANR	4235339	Condition	s3	840:8:23030:23031	4234188	0	True				
ANR	4235340	Identifier	s3		4234188	0					
ANR	4235341	CompoundStatement		201:12:4877:4877	4234188	1					
ANR	4235342	ExpressionStatement	* s3 = '\\0'	841:5:23041:23051	4234188	0	True				
ANR	4235343	AssignmentExpression	* s3 = '\\0'		4234188	0		=			
ANR	4235344	UnaryOperationExpression	* s3		4234188	0					
ANR	4235345	UnaryOperator	*		4234188	0					
ANR	4235346	Identifier	s3		4234188	1					
ANR	4235347	PrimaryExpression	'\\0'		4234188	1					
ANR	4235348	IfStatement	"if ( ! strncmp ( s3 + 1 , ""base64:"" , 7 ) )"		4234188	1					
ANR	4235349	Condition	"! strncmp ( s3 + 1 , ""base64:"" , 7 )"	842:9:23062:23092	4234188	0	True				
ANR	4235350	UnaryOperationExpression	"! strncmp ( s3 + 1 , ""base64:"" , 7 )"		4234188	0					
ANR	4235351	UnaryOperator	!		4234188	0					
ANR	4235352	CallExpression	"strncmp ( s3 + 1 , ""base64:"" , 7 )"		4234188	1					
ANR	4235353	Callee	strncmp		4234188	0					
ANR	4235354	Identifier	strncmp		4234188	0					
ANR	4235355	ArgumentList	s3 + 1		4234188	1					
ANR	4235356	Argument	s3 + 1		4234188	0					
ANR	4235357	AdditiveExpression	s3 + 1		4234188	0		+			
ANR	4235358	Identifier	s3		4234188	0					
ANR	4235359	PrimaryExpression	1		4234188	1					
ANR	4235360	Argument	"""base64:"""		4234188	1					
ANR	4235361	PrimaryExpression	"""base64:"""		4234188	0					
ANR	4235362	Argument	7		4234188	2					
ANR	4235363	PrimaryExpression	7		4234188	0					
ANR	4235364	CompoundStatement		203:42:4938:4938	4234188	1					
ANR	4235365	ExpressionStatement	"comment = ( char * ) r_base64_decode_dyn ( s3 + 8 , - 1 )"	843:6:23103:23154	4234188	0	True				
ANR	4235366	AssignmentExpression	"comment = ( char * ) r_base64_decode_dyn ( s3 + 8 , - 1 )"		4234188	0		=			
ANR	4235367	Identifier	comment		4234188	0					
ANR	4235368	CastExpression	"( char * ) r_base64_decode_dyn ( s3 + 8 , - 1 )"		4234188	1					
ANR	4235369	CastTarget	char *		4234188	0					
ANR	4235370	CallExpression	"r_base64_decode_dyn ( s3 + 8 , - 1 )"		4234188	1					
ANR	4235371	Callee	r_base64_decode_dyn		4234188	0					
ANR	4235372	Identifier	r_base64_decode_dyn		4234188	0					
ANR	4235373	ArgumentList	s3 + 8		4234188	1					
ANR	4235374	Argument	s3 + 8		4234188	0					
ANR	4235375	AdditiveExpression	s3 + 8		4234188	0		+			
ANR	4235376	Identifier	s3		4234188	0					
ANR	4235377	PrimaryExpression	8		4234188	1					
ANR	4235378	Argument	- 1		4234188	1					
ANR	4235379	UnaryOperationExpression	- 1		4234188	0					
ANR	4235380	UnaryOperator	-		4234188	0					
ANR	4235381	PrimaryExpression	1		4234188	1					
ANR	4235382	ExpressionStatement	comment_needs_free = true	844:6:23162:23187	4234188	1	True				
ANR	4235383	AssignmentExpression	comment_needs_free = true		4234188	0		=			
ANR	4235384	Identifier	comment_needs_free		4234188	0					
ANR	4235385	Identifier	true		4234188	1					
ANR	4235386	ElseStatement	else		4234188	0					
ANR	4235387	IfStatement	if ( s3 [ 1 ] )		4234188	0					
ANR	4235388	Condition	s3 [ 1 ]	845:16:23205:23209	4234188	0	True				
ANR	4235389	ArrayIndexing	s3 [ 1 ]		4234188	0					
ANR	4235390	Identifier	s3		4234188	0					
ANR	4235391	PrimaryExpression	1		4234188	1					
ANR	4235392	CompoundStatement		206:23:5055:5055	4234188	1					
ANR	4235393	ExpressionStatement	comment = s3 + 1	846:6:23220:23236	4234188	0	True				
ANR	4235394	AssignmentExpression	comment = s3 + 1		4234188	0		=			
ANR	4235395	Identifier	comment		4234188	0					
ANR	4235396	AdditiveExpression	s3 + 1		4234188	1		+			
ANR	4235397	Identifier	s3		4234188	0					
ANR	4235398	PrimaryExpression	1		4234188	1					
ANR	4235399	ExpressionStatement	"bsze = ( s [ 1 ] == '=' ) ? 1 : r_num_math ( core -> num , s + 1 )"	851:3:23265:23321	4234188	3	True				
ANR	4235400	AssignmentExpression	"bsze = ( s [ 1 ] == '=' ) ? 1 : r_num_math ( core -> num , s + 1 )"		4234188	0		=			
ANR	4235401	Identifier	bsze		4234188	0					
ANR	4235402	ConditionalExpression	"( s [ 1 ] == '=' ) ? 1 : r_num_math ( core -> num , s + 1 )"		4234188	1					
ANR	4235403	Condition	s [ 1 ] == '='		4234188	0					
ANR	4235404	EqualityExpression	s [ 1 ] == '='		4234188	0		==			
ANR	4235405	ArrayIndexing	s [ 1 ]		4234188	0					
ANR	4235406	Identifier	s		4234188	0					
ANR	4235407	PrimaryExpression	1		4234188	1					
ANR	4235408	PrimaryExpression	'='		4234188	1					
ANR	4235409	PrimaryExpression	1		4234188	1					
ANR	4235410	CallExpression	"r_num_math ( core -> num , s + 1 )"		4234188	2					
ANR	4235411	Callee	r_num_math		4234188	0					
ANR	4235412	Identifier	r_num_math		4234188	0					
ANR	4235413	ArgumentList	core -> num		4234188	1					
ANR	4235414	Argument	core -> num		4234188	0					
ANR	4235415	PtrMemberAccess	core -> num		4234188	0					
ANR	4235416	Identifier	core		4234188	0					
ANR	4235417	Identifier	num		4234188	1					
ANR	4235418	Argument	s + 1		4234188	1					
ANR	4235419	AdditiveExpression	s + 1		4234188	0		+			
ANR	4235420	Identifier	s		4234188	0					
ANR	4235421	PrimaryExpression	1		4234188	1					
ANR	4235422	IdentifierDeclStatement	bool addFlag = true ;	863:2:23469:23488	4234188	11	True				
ANR	4235423	IdentifierDecl	addFlag = true		4234188	0					
ANR	4235424	IdentifierDeclType	bool		4234188	0					
ANR	4235425	Identifier	addFlag		4234188	1					
ANR	4235426	AssignmentExpression	addFlag = true		4234188	2		=			
ANR	4235427	Identifier	true		4234188	0					
ANR	4235428	Identifier	true		4234188	1					
ANR	4235429	IfStatement	if ( input [ 0 ] == '+' )		4234188	12					
ANR	4235430	Condition	input [ 0 ] == '+'	864:6:23496:23510	4234188	0	True				
ANR	4235431	EqualityExpression	input [ 0 ] == '+'		4234188	0		==			
ANR	4235432	ArrayIndexing	input [ 0 ]		4234188	0					
ANR	4235433	Identifier	input		4234188	0					
ANR	4235434	PrimaryExpression	0		4234188	1					
ANR	4235435	PrimaryExpression	'+'		4234188	1					
ANR	4235436	CompoundStatement		225:23:5356:5356	4234188	1					
ANR	4235437	IfStatement	"if ( ( item = r_flag_get_at ( core -> flags , off , false ) ) )"		4234188	0					
ANR	4235438	Condition	"item = r_flag_get_at ( core -> flags , off , false )"	865:7:23522:23569	4234188	0	True				
ANR	4235439	AssignmentExpression	"item = r_flag_get_at ( core -> flags , off , false )"		4234188	0		=			
ANR	4235440	Identifier	item		4234188	0					
ANR	4235441	CallExpression	"r_flag_get_at ( core -> flags , off , false )"		4234188	1					
ANR	4235442	Callee	r_flag_get_at		4234188	0					
ANR	4235443	Identifier	r_flag_get_at		4234188	0					
ANR	4235444	ArgumentList	core -> flags		4234188	1					
ANR	4235445	Argument	core -> flags		4234188	0					
ANR	4235446	PtrMemberAccess	core -> flags		4234188	0					
ANR	4235447	Identifier	core		4234188	0					
ANR	4235448	Identifier	flags		4234188	1					
ANR	4235449	Argument	off		4234188	1					
ANR	4235450	Identifier	off		4234188	0					
ANR	4235451	Argument	false		4234188	2					
ANR	4235452	Identifier	false		4234188	0					
ANR	4235453	CompoundStatement		226:57:5415:5415	4234188	1					
ANR	4235454	ExpressionStatement	addFlag = false	866:4:23578:23593	4234188	0	True				
ANR	4235455	AssignmentExpression	addFlag = false		4234188	0		=			
ANR	4235456	Identifier	addFlag		4234188	0					
ANR	4235457	Identifier	false		4234188	1					
ANR	4235458	IfStatement	if ( addFlag )		4234188	13					
ANR	4235459	Condition	addFlag	869:6:23610:23616	4234188	0	True				
ANR	4235460	Identifier	addFlag		4234188	0					
ANR	4235461	CompoundStatement		230:15:5462:5462	4234188	1					
ANR	4235462	ExpressionStatement	"item = r_flag_set ( core -> flags , cstr , off , bsze )"	870:3:23624:23672	4234188	0	True				
ANR	4235463	AssignmentExpression	"item = r_flag_set ( core -> flags , cstr , off , bsze )"		4234188	0		=			
ANR	4235464	Identifier	item		4234188	0					
ANR	4235465	CallExpression	"r_flag_set ( core -> flags , cstr , off , bsze )"		4234188	1					
ANR	4235466	Callee	r_flag_set		4234188	0					
ANR	4235467	Identifier	r_flag_set		4234188	0					
ANR	4235468	ArgumentList	core -> flags		4234188	1					
ANR	4235469	Argument	core -> flags		4234188	0					
ANR	4235470	PtrMemberAccess	core -> flags		4234188	0					
ANR	4235471	Identifier	core		4234188	0					
ANR	4235472	Identifier	flags		4234188	1					
ANR	4235473	Argument	cstr		4234188	1					
ANR	4235474	Identifier	cstr		4234188	0					
ANR	4235475	Argument	off		4234188	2					
ANR	4235476	Identifier	off		4234188	0					
ANR	4235477	Argument	bsze		4234188	3					
ANR	4235478	Identifier	bsze		4234188	0					
ANR	4235479	IfStatement	if ( item && comment )		4234188	14					
ANR	4235480	Condition	item && comment	872:6:23684:23698	4234188	0	True				
ANR	4235481	AndExpression	item && comment		4234188	0		&&			
ANR	4235482	Identifier	item		4234188	0					
ANR	4235483	Identifier	comment		4234188	1					
ANR	4235484	CompoundStatement		233:23:5544:5544	4234188	1					
ANR	4235485	ExpressionStatement	"r_flag_item_set_comment ( item , comment )"	873:3:23706:23745	4234188	0	True				
ANR	4235486	CallExpression	"r_flag_item_set_comment ( item , comment )"		4234188	0					
ANR	4235487	Callee	r_flag_item_set_comment		4234188	0					
ANR	4235488	Identifier	r_flag_item_set_comment		4234188	0					
ANR	4235489	ArgumentList	item		4234188	1					
ANR	4235490	Argument	item		4234188	0					
ANR	4235491	Identifier	item		4234188	0					
ANR	4235492	Argument	comment		4234188	1					
ANR	4235493	Identifier	comment		4234188	0					
ANR	4235494	IfStatement	if ( comment_needs_free )		4234188	1					
ANR	4235495	Condition	comment_needs_free	874:7:23754:23771	4234188	0	True				
ANR	4235496	Identifier	comment_needs_free		4234188	0					
ANR	4235497	CompoundStatement		235:27:5617:5617	4234188	1					
ANR	4235498	ExpressionStatement	free ( comment )	875:4:23780:23794	4234188	0	True				
ANR	4235499	CallExpression	free ( comment )		4234188	0					
ANR	4235500	Callee	free		4234188	0					
ANR	4235501	Identifier	free		4234188	0					
ANR	4235502	ArgumentList	comment		4234188	1					
ANR	4235503	Argument	comment		4234188	0					
ANR	4235504	Identifier	comment		4234188	0					
ANR	4235505	BreakStatement	break ;	879:2:23811:23816	4234188	27	True				
ANR	4235506	Label	case '-' :	880:1:23819:23827	4234188	28	True				
ANR	4235507	IfStatement	if ( input [ 1 ] == '-' )		4234188	29					
ANR	4235508	Condition	input [ 1 ] == '-'	881:6:23835:23849	4234188	0	True				
ANR	4235509	EqualityExpression	input [ 1 ] == '-'		4234188	0		==			
ANR	4235510	ArrayIndexing	input [ 1 ]		4234188	0					
ANR	4235511	Identifier	input		4234188	0					
ANR	4235512	PrimaryExpression	1		4234188	1					
ANR	4235513	PrimaryExpression	'-'		4234188	1					
ANR	4235514	CompoundStatement		242:23:5695:5695	4234188	1					
ANR	4235515	ExpressionStatement	r_flag_unset_all ( core -> flags )	882:3:23857:23887	4234188	0	True				
ANR	4235516	CallExpression	r_flag_unset_all ( core -> flags )		4234188	0					
ANR	4235517	Callee	r_flag_unset_all		4234188	0					
ANR	4235518	Identifier	r_flag_unset_all		4234188	0					
ANR	4235519	ArgumentList	core -> flags		4234188	1					
ANR	4235520	Argument	core -> flags		4234188	0					
ANR	4235521	PtrMemberAccess	core -> flags		4234188	0					
ANR	4235522	Identifier	core		4234188	0					
ANR	4235523	Identifier	flags		4234188	1					
ANR	4235524	ElseStatement	else		4234188	0					
ANR	4235525	IfStatement	if ( input [ 1 ] )		4234188	0					
ANR	4235526	Condition	input [ 1 ]	883:13:23902:23909	4234188	0	True				
ANR	4235527	ArrayIndexing	input [ 1 ]		4234188	0					
ANR	4235528	Identifier	input		4234188	0					
ANR	4235529	PrimaryExpression	1		4234188	1					
ANR	4235530	CompoundStatement		245:3:5760:5808	4234188	1					
ANR	4235531	IdentifierDeclStatement	const char * flagname = r_str_trim_ro ( input + 1 ) ;	884:3:23917:23965	4234188	0	True				
ANR	4235532	IdentifierDecl	* flagname = r_str_trim_ro ( input + 1 )		4234188	0					
ANR	4235533	IdentifierDeclType	const char *		4234188	0					
ANR	4235534	Identifier	flagname		4234188	1					
ANR	4235535	AssignmentExpression	* flagname = r_str_trim_ro ( input + 1 )		4234188	2		=			
ANR	4235536	Identifier	flagname		4234188	0					
ANR	4235537	CallExpression	r_str_trim_ro ( input + 1 )		4234188	1					
ANR	4235538	Callee	r_str_trim_ro		4234188	0					
ANR	4235539	Identifier	r_str_trim_ro		4234188	0					
ANR	4235540	ArgumentList	input + 1		4234188	1					
ANR	4235541	Argument	input + 1		4234188	0					
ANR	4235542	AdditiveExpression	input + 1		4234188	0		+			
ANR	4235543	Identifier	input		4234188	0					
ANR	4235544	PrimaryExpression	1		4234188	1					
ANR	4235545	WhileStatement	while ( * flagname == ' ' )		4234188	1					
ANR	4235546	Condition	* flagname == ' '	885:10:23977:23990	4234188	0	True				
ANR	4235547	EqualityExpression	* flagname == ' '		4234188	0		==			
ANR	4235548	UnaryOperationExpression	* flagname		4234188	0					
ANR	4235549	UnaryOperator	*		4234188	0					
ANR	4235550	Identifier	flagname		4234188	1					
ANR	4235551	PrimaryExpression	' '		4234188	1					
ANR	4235552	CompoundStatement		246:26:5836:5836	4234188	1					
ANR	4235553	ExpressionStatement	flagname ++	886:4:23999:24009	4234188	0	True				
ANR	4235554	PostIncDecOperationExpression	flagname ++		4234188	0					
ANR	4235555	Identifier	flagname		4234188	0					
ANR	4235556	IncDec	++		4234188	1					
ANR	4235557	IfStatement	if ( * flagname == '.' )		4234188	2					
ANR	4235558	Condition	* flagname == '.'	888:7:24023:24038	4234188	0	True				
ANR	4235559	EqualityExpression	* flagname == '.'		4234188	0		==			
ANR	4235560	UnaryOperationExpression	* flagname		4234188	0					
ANR	4235561	UnaryOperator	*		4234188	0					
ANR	4235562	Identifier	flagname		4234188	1					
ANR	4235563	PrimaryExpression	'.'		4234188	1					
ANR	4235564	CompoundStatement		250:4:5890:5949	4234188	1					
ANR	4235565	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , off , 0 ) ;"	889:4:24047:24106	4234188	0	True				
ANR	4235566	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , off , 0 )"		4234188	0					
ANR	4235567	IdentifierDeclType	RAnalFunction *		4234188	0					
ANR	4235568	Identifier	fcn		4234188	1					
ANR	4235569	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , off , 0 )"		4234188	2		=			
ANR	4235570	Identifier	fcn		4234188	0					
ANR	4235571	CallExpression	"r_anal_get_fcn_in ( core -> anal , off , 0 )"		4234188	1					
ANR	4235572	Callee	r_anal_get_fcn_in		4234188	0					
ANR	4235573	Identifier	r_anal_get_fcn_in		4234188	0					
ANR	4235574	ArgumentList	core -> anal		4234188	1					
ANR	4235575	Argument	core -> anal		4234188	0					
ANR	4235576	PtrMemberAccess	core -> anal		4234188	0					
ANR	4235577	Identifier	core		4234188	0					
ANR	4235578	Identifier	anal		4234188	1					
ANR	4235579	Argument	off		4234188	1					
ANR	4235580	Identifier	off		4234188	0					
ANR	4235581	Argument	0		4234188	2					
ANR	4235582	PrimaryExpression	0		4234188	0					
ANR	4235583	IfStatement	if ( fcn )		4234188	1					
ANR	4235584	Condition	fcn	890:8:24116:24118	4234188	0	True				
ANR	4235585	Identifier	fcn		4234188	0					
ANR	4235586	CompoundStatement		251:13:5964:5964	4234188	1					
ANR	4235587	ExpressionStatement	"r_anal_fcn_label_del ( core -> anal , fcn , flagname + 1 , off )"	891:5:24128:24187	4234188	0	True				
ANR	4235588	CallExpression	"r_anal_fcn_label_del ( core -> anal , fcn , flagname + 1 , off )"		4234188	0					
ANR	4235589	Callee	r_anal_fcn_label_del		4234188	0					
ANR	4235590	Identifier	r_anal_fcn_label_del		4234188	0					
ANR	4235591	ArgumentList	core -> anal		4234188	1					
ANR	4235592	Argument	core -> anal		4234188	0					
ANR	4235593	PtrMemberAccess	core -> anal		4234188	0					
ANR	4235594	Identifier	core		4234188	0					
ANR	4235595	Identifier	anal		4234188	1					
ANR	4235596	Argument	fcn		4234188	1					
ANR	4235597	Identifier	fcn		4234188	0					
ANR	4235598	Argument	flagname + 1		4234188	2					
ANR	4235599	AdditiveExpression	flagname + 1		4234188	0		+			
ANR	4235600	Identifier	flagname		4234188	0					
ANR	4235601	PrimaryExpression	1		4234188	1					
ANR	4235602	Argument	off		4234188	3					
ANR	4235603	Identifier	off		4234188	0					
ANR	4235604	ElseStatement	else		4234188	0					
ANR	4235605	CompoundStatement		253:11:6043:6043	4234188	0					
ANR	4235606	Statement	eprintf	893:5:24207:24213	4234188	0	True				
ANR	4235607	Statement	(	893:13:24215:24215	4234188	1	True				
ANR	4235608	Statement	"""Cannot find function at 0x%08"""	893:14:24216:24246	4234188	2	True				
ANR	4235609	Statement	PFMT64x	893:45:24247:24253	4234188	3	True				
ANR	4235610	Statement	"""\\n"""	893:52:24254:24257	4234188	4	True				
ANR	4235611	Statement	","	893:56:24258:24258	4234188	5	True				
ANR	4235612	Statement	off	893:58:24260:24262	4234188	6	True				
ANR	4235613	Statement	)	893:61:24263:24263	4234188	7	True				
ANR	4235614	ExpressionStatement		893:62:24264:24264	4234188	8	True				
ANR	4235615	ElseStatement	else		4234188	0					
ANR	4235616	CompoundStatement		256:10:6125:6125	4234188	0					
ANR	4235617	IfStatement	"if ( strchr ( flagname , '*' ) )"		4234188	0					
ANR	4235618	Condition	"strchr ( flagname , '*' )"	896:8:24292:24313	4234188	0	True				
ANR	4235619	CallExpression	"strchr ( flagname , '*' )"		4234188	0					
ANR	4235620	Callee	strchr		4234188	0					
ANR	4235621	Identifier	strchr		4234188	0					
ANR	4235622	ArgumentList	flagname		4234188	1					
ANR	4235623	Argument	flagname		4234188	0					
ANR	4235624	Identifier	flagname		4234188	0					
ANR	4235625	Argument	'*'		4234188	1					
ANR	4235626	PrimaryExpression	'*'		4234188	0					
ANR	4235627	CompoundStatement		257:32:6159:6159	4234188	1					
ANR	4235628	ExpressionStatement	"r_flag_unset_glob ( core -> flags , flagname )"	897:5:24323:24364	4234188	0	True				
ANR	4235629	CallExpression	"r_flag_unset_glob ( core -> flags , flagname )"		4234188	0					
ANR	4235630	Callee	r_flag_unset_glob		4234188	0					
ANR	4235631	Identifier	r_flag_unset_glob		4234188	0					
ANR	4235632	ArgumentList	core -> flags		4234188	1					
ANR	4235633	Argument	core -> flags		4234188	0					
ANR	4235634	PtrMemberAccess	core -> flags		4234188	0					
ANR	4235635	Identifier	core		4234188	0					
ANR	4235636	Identifier	flags		4234188	1					
ANR	4235637	Argument	flagname		4234188	1					
ANR	4235638	Identifier	flagname		4234188	0					
ANR	4235639	ElseStatement	else		4234188	0					
ANR	4235640	CompoundStatement		259:11:6220:6220	4234188	0					
ANR	4235641	ExpressionStatement	"r_flag_unset_name ( core -> flags , flagname )"	899:5:24384:24425	4234188	0	True				
ANR	4235642	CallExpression	"r_flag_unset_name ( core -> flags , flagname )"		4234188	0					
ANR	4235643	Callee	r_flag_unset_name		4234188	0					
ANR	4235644	Identifier	r_flag_unset_name		4234188	0					
ANR	4235645	ArgumentList	core -> flags		4234188	1					
ANR	4235646	Argument	core -> flags		4234188	0					
ANR	4235647	PtrMemberAccess	core -> flags		4234188	0					
ANR	4235648	Identifier	core		4234188	0					
ANR	4235649	Identifier	flags		4234188	1					
ANR	4235650	Argument	flagname		4234188	1					
ANR	4235651	Identifier	flagname		4234188	0					
ANR	4235652	ElseStatement	else		4234188	0					
ANR	4235653	CompoundStatement		263:9:6290:6290	4234188	0					
ANR	4235654	ExpressionStatement	"r_flag_unset_off ( core -> flags , off )"	903:3:24452:24487	4234188	0	True				
ANR	4235655	CallExpression	"r_flag_unset_off ( core -> flags , off )"		4234188	0					
ANR	4235656	Callee	r_flag_unset_off		4234188	0					
ANR	4235657	Identifier	r_flag_unset_off		4234188	0					
ANR	4235658	ArgumentList	core -> flags		4234188	1					
ANR	4235659	Argument	core -> flags		4234188	0					
ANR	4235660	PtrMemberAccess	core -> flags		4234188	0					
ANR	4235661	Identifier	core		4234188	0					
ANR	4235662	Identifier	flags		4234188	1					
ANR	4235663	Argument	off		4234188	1					
ANR	4235664	Identifier	off		4234188	0					
ANR	4235665	BreakStatement	break ;	905:2:24495:24500	4234188	30	True				
ANR	4235666	Label	case '.' :	906:1:24503:24511	4234188	31	True				
ANR	4235667	ExpressionStatement	input = r_str_trim_ro ( input + 1 ) - 1	907:2:24515:24552	4234188	32	True				
ANR	4235668	AssignmentExpression	input = r_str_trim_ro ( input + 1 ) - 1		4234188	0		=			
ANR	4235669	Identifier	input		4234188	0					
ANR	4235670	AdditiveExpression	r_str_trim_ro ( input + 1 ) - 1		4234188	1		-			
ANR	4235671	CallExpression	r_str_trim_ro ( input + 1 )		4234188	0					
ANR	4235672	Callee	r_str_trim_ro		4234188	0					
ANR	4235673	Identifier	r_str_trim_ro		4234188	0					
ANR	4235674	ArgumentList	input + 1		4234188	1					
ANR	4235675	Argument	input + 1		4234188	0					
ANR	4235676	AdditiveExpression	input + 1		4234188	0		+			
ANR	4235677	Identifier	input		4234188	0					
ANR	4235678	PrimaryExpression	1		4234188	1					
ANR	4235679	PrimaryExpression	1		4234188	1					
ANR	4235680	IfStatement	if ( input [ 1 ] )		4234188	33					
ANR	4235681	Condition	input [ 1 ]	908:6:24560:24567	4234188	0	True				
ANR	4235682	ArrayIndexing	input [ 1 ]		4234188	0					
ANR	4235683	Identifier	input		4234188	0					
ANR	4235684	PrimaryExpression	1		4234188	1					
ANR	4235685	CompoundStatement		269:16:6413:6413	4234188	1					
ANR	4235686	IfStatement	if ( input [ 1 ] == '*' )		4234188	0					
ANR	4235687	Condition	input [ 1 ] == '*'	909:7:24579:24593	4234188	0	True				
ANR	4235688	EqualityExpression	input [ 1 ] == '*'		4234188	0		==			
ANR	4235689	ArrayIndexing	input [ 1 ]		4234188	0					
ANR	4235690	Identifier	input		4234188	0					
ANR	4235691	PrimaryExpression	1		4234188	1					
ANR	4235692	PrimaryExpression	'*'		4234188	1					
ANR	4235693	CompoundStatement		270:24:6439:6439	4234188	1					
ANR	4235694	IfStatement	if ( input [ 2 ] == '*' )		4234188	0					
ANR	4235695	Condition	input [ 2 ] == '*'	910:8:24606:24620	4234188	0	True				
ANR	4235696	EqualityExpression	input [ 2 ] == '*'		4234188	0		==			
ANR	4235697	ArrayIndexing	input [ 2 ]		4234188	0					
ANR	4235698	Identifier	input		4234188	0					
ANR	4235699	PrimaryExpression	2		4234188	1					
ANR	4235700	PrimaryExpression	'*'		4234188	1					
ANR	4235701	CompoundStatement		271:25:6466:6466	4234188	1					
ANR	4235702	ExpressionStatement	"r_anal_fcn_labels ( core -> anal , NULL , 1 )"	911:5:24630:24669	4234188	0	True				
ANR	4235703	CallExpression	"r_anal_fcn_labels ( core -> anal , NULL , 1 )"		4234188	0					
ANR	4235704	Callee	r_anal_fcn_labels		4234188	0					
ANR	4235705	Identifier	r_anal_fcn_labels		4234188	0					
ANR	4235706	ArgumentList	core -> anal		4234188	1					
ANR	4235707	Argument	core -> anal		4234188	0					
ANR	4235708	PtrMemberAccess	core -> anal		4234188	0					
ANR	4235709	Identifier	core		4234188	0					
ANR	4235710	Identifier	anal		4234188	1					
ANR	4235711	Argument	NULL		4234188	1					
ANR	4235712	Identifier	NULL		4234188	0					
ANR	4235713	Argument	1		4234188	2					
ANR	4235714	PrimaryExpression	1		4234188	0					
ANR	4235715	ElseStatement	else		4234188	0					
ANR	4235716	CompoundStatement		274:5:6532:6591	4234188	0					
ANR	4235717	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , off , 0 ) ;"	913:5:24689:24748	4234188	0	True				
ANR	4235718	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , off , 0 )"		4234188	0					
ANR	4235719	IdentifierDeclType	RAnalFunction *		4234188	0					
ANR	4235720	Identifier	fcn		4234188	1					
ANR	4235721	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , off , 0 )"		4234188	2		=			
ANR	4235722	Identifier	fcn		4234188	0					
ANR	4235723	CallExpression	"r_anal_get_fcn_in ( core -> anal , off , 0 )"		4234188	1					
ANR	4235724	Callee	r_anal_get_fcn_in		4234188	0					
ANR	4235725	Identifier	r_anal_get_fcn_in		4234188	0					
ANR	4235726	ArgumentList	core -> anal		4234188	1					
ANR	4235727	Argument	core -> anal		4234188	0					
ANR	4235728	PtrMemberAccess	core -> anal		4234188	0					
ANR	4235729	Identifier	core		4234188	0					
ANR	4235730	Identifier	anal		4234188	1					
ANR	4235731	Argument	off		4234188	1					
ANR	4235732	Identifier	off		4234188	0					
ANR	4235733	Argument	0		4234188	2					
ANR	4235734	PrimaryExpression	0		4234188	0					
ANR	4235735	IfStatement	if ( fcn )		4234188	1					
ANR	4235736	Condition	fcn	914:9:24759:24761	4234188	0	True				
ANR	4235737	Identifier	fcn		4234188	0					
ANR	4235738	CompoundStatement		275:14:6607:6607	4234188	1					
ANR	4235739	ExpressionStatement	"r_anal_fcn_labels ( core -> anal , fcn , 1 )"	915:6:24772:24810	4234188	0	True				
ANR	4235740	CallExpression	"r_anal_fcn_labels ( core -> anal , fcn , 1 )"		4234188	0					
ANR	4235741	Callee	r_anal_fcn_labels		4234188	0					
ANR	4235742	Identifier	r_anal_fcn_labels		4234188	0					
ANR	4235743	ArgumentList	core -> anal		4234188	1					
ANR	4235744	Argument	core -> anal		4234188	0					
ANR	4235745	PtrMemberAccess	core -> anal		4234188	0					
ANR	4235746	Identifier	core		4234188	0					
ANR	4235747	Identifier	anal		4234188	1					
ANR	4235748	Argument	fcn		4234188	1					
ANR	4235749	Identifier	fcn		4234188	0					
ANR	4235750	Argument	1		4234188	2					
ANR	4235751	PrimaryExpression	1		4234188	0					
ANR	4235752	ElseStatement	else		4234188	0					
ANR	4235753	CompoundStatement		277:12:6667:6667	4234188	0					
ANR	4235754	Statement	eprintf	917:6:24832:24838	4234188	0	True				
ANR	4235755	Statement	(	917:14:24840:24840	4234188	1	True				
ANR	4235756	Statement	"""Cannot find function at 0x%08"""	917:15:24841:24871	4234188	2	True				
ANR	4235757	Statement	PFMT64x	917:46:24872:24878	4234188	3	True				
ANR	4235758	Statement	"""\\n"""	917:53:24879:24882	4234188	4	True				
ANR	4235759	Statement	","	917:57:24883:24883	4234188	5	True				
ANR	4235760	Statement	off	917:59:24885:24887	4234188	6	True				
ANR	4235761	Statement	)	917:62:24888:24888	4234188	7	True				
ANR	4235762	ExpressionStatement		917:63:24889:24889	4234188	8	True				
ANR	4235763	ElseStatement	else		4234188	0					
ANR	4235764	CompoundStatement		283:4:6824:6883	4234188	0					
ANR	4235765	IdentifierDeclStatement	char * name = strdup ( input + ( ( input [ 2 ] == ' ' ) ? 2 : 1 ) ) ;	921:4:24920:24975	4234188	0	True				
ANR	4235766	IdentifierDecl	* name = strdup ( input + ( ( input [ 2 ] == ' ' ) ? 2 : 1 ) )		4234188	0					
ANR	4235767	IdentifierDeclType	char *		4234188	0					
ANR	4235768	Identifier	name		4234188	1					
ANR	4235769	AssignmentExpression	* name = strdup ( input + ( ( input [ 2 ] == ' ' ) ? 2 : 1 ) )		4234188	2		=			
ANR	4235770	Identifier	name		4234188	0					
ANR	4235771	CallExpression	strdup ( input + ( ( input [ 2 ] == ' ' ) ? 2 : 1 ) )		4234188	1					
ANR	4235772	Callee	strdup		4234188	0					
ANR	4235773	Identifier	strdup		4234188	0					
ANR	4235774	ArgumentList	input + ( ( input [ 2 ] == ' ' ) ? 2 : 1 )		4234188	1					
ANR	4235775	Argument	input + ( ( input [ 2 ] == ' ' ) ? 2 : 1 )		4234188	0					
ANR	4235776	AdditiveExpression	input + ( ( input [ 2 ] == ' ' ) ? 2 : 1 )		4234188	0		+			
ANR	4235777	Identifier	input		4234188	0					
ANR	4235778	ConditionalExpression	( input [ 2 ] == ' ' ) ? 2 : 1		4234188	1					
ANR	4235779	Condition	input [ 2 ] == ' '		4234188	0					
ANR	4235780	EqualityExpression	input [ 2 ] == ' '		4234188	0		==			
ANR	4235781	ArrayIndexing	input [ 2 ]		4234188	0					
ANR	4235782	Identifier	input		4234188	0					
ANR	4235783	PrimaryExpression	2		4234188	1					
ANR	4235784	PrimaryExpression	' '		4234188	1					
ANR	4235785	PrimaryExpression	2		4234188	1					
ANR	4235786	PrimaryExpression	1		4234188	2					
ANR	4235787	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , off , 0 ) ;"	922:4:24981:25040	4234188	1	True				
ANR	4235788	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , off , 0 )"		4234188	0					
ANR	4235789	IdentifierDeclType	RAnalFunction *		4234188	0					
ANR	4235790	Identifier	fcn		4234188	1					
ANR	4235791	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , off , 0 )"		4234188	2		=			
ANR	4235792	Identifier	fcn		4234188	0					
ANR	4235793	CallExpression	"r_anal_get_fcn_in ( core -> anal , off , 0 )"		4234188	1					
ANR	4235794	Callee	r_anal_get_fcn_in		4234188	0					
ANR	4235795	Identifier	r_anal_get_fcn_in		4234188	0					
ANR	4235796	ArgumentList	core -> anal		4234188	1					
ANR	4235797	Argument	core -> anal		4234188	0					
ANR	4235798	PtrMemberAccess	core -> anal		4234188	0					
ANR	4235799	Identifier	core		4234188	0					
ANR	4235800	Identifier	anal		4234188	1					
ANR	4235801	Argument	off		4234188	1					
ANR	4235802	Identifier	off		4234188	0					
ANR	4235803	Argument	0		4234188	2					
ANR	4235804	PrimaryExpression	0		4234188	0					
ANR	4235805	IfStatement	if ( name )		4234188	2					
ANR	4235806	Condition	name	923:8:25050:25053	4234188	0	True				
ANR	4235807	Identifier	name		4234188	0					
ANR	4235808	CompoundStatement		285:5:6906:6935	4234188	1					
ANR	4235809	IdentifierDeclStatement	"char * eq = strchr ( name , '=' ) ;"	924:5:25063:25092	4234188	0	True				
ANR	4235810	IdentifierDecl	"* eq = strchr ( name , '=' )"		4234188	0					
ANR	4235811	IdentifierDeclType	char *		4234188	0					
ANR	4235812	Identifier	eq		4234188	1					
ANR	4235813	AssignmentExpression	"* eq = strchr ( name , '=' )"		4234188	2		=			
ANR	4235814	Identifier	eq		4234188	0					
ANR	4235815	CallExpression	"strchr ( name , '=' )"		4234188	1					
ANR	4235816	Callee	strchr		4234188	0					
ANR	4235817	Identifier	strchr		4234188	0					
ANR	4235818	ArgumentList	name		4234188	1					
ANR	4235819	Argument	name		4234188	0					
ANR	4235820	Identifier	name		4234188	0					
ANR	4235821	Argument	'='		4234188	1					
ANR	4235822	PrimaryExpression	'='		4234188	0					
ANR	4235823	IfStatement	if ( eq )		4234188	1					
ANR	4235824	Condition	eq	925:9:25103:25104	4234188	0	True				
ANR	4235825	Identifier	eq		4234188	0					
ANR	4235826	CompoundStatement		286:13:6950:6950	4234188	1					
ANR	4235827	ExpressionStatement	* eq ++ = 0	926:6:25115:25125	4234188	0	True				
ANR	4235828	AssignmentExpression	* eq ++ = 0		4234188	0		=			
ANR	4235829	UnaryOperationExpression	* eq ++		4234188	0					
ANR	4235830	UnaryOperator	*		4234188	0					
ANR	4235831	PostIncDecOperationExpression	eq ++		4234188	1					
ANR	4235832	Identifier	eq		4234188	0					
ANR	4235833	IncDec	++		4234188	1					
ANR	4235834	PrimaryExpression	0		4234188	1					
ANR	4235835	ExpressionStatement	"off = r_num_math ( core -> num , eq )"	927:6:25133:25165	4234188	1	True				
ANR	4235836	AssignmentExpression	"off = r_num_math ( core -> num , eq )"		4234188	0		=			
ANR	4235837	Identifier	off		4234188	0					
ANR	4235838	CallExpression	"r_num_math ( core -> num , eq )"		4234188	1					
ANR	4235839	Callee	r_num_math		4234188	0					
ANR	4235840	Identifier	r_num_math		4234188	0					
ANR	4235841	ArgumentList	core -> num		4234188	1					
ANR	4235842	Argument	core -> num		4234188	0					
ANR	4235843	PtrMemberAccess	core -> num		4234188	0					
ANR	4235844	Identifier	core		4234188	0					
ANR	4235845	Identifier	num		4234188	1					
ANR	4235846	Argument	eq		4234188	1					
ANR	4235847	Identifier	eq		4234188	0					
ANR	4235848	ExpressionStatement	r_str_trim ( name )	929:5:25179:25196	4234188	2	True				
ANR	4235849	CallExpression	r_str_trim ( name )		4234188	0					
ANR	4235850	Callee	r_str_trim		4234188	0					
ANR	4235851	Identifier	r_str_trim		4234188	0					
ANR	4235852	ArgumentList	name		4234188	1					
ANR	4235853	Argument	name		4234188	0					
ANR	4235854	Identifier	name		4234188	0					
ANR	4235855	IfStatement	if ( fcn )		4234188	3					
ANR	4235856	Condition	fcn	930:9:25207:25209	4234188	0	True				
ANR	4235857	Identifier	fcn		4234188	0					
ANR	4235858	CompoundStatement		291:14:7055:7055	4234188	1					
ANR	4235859	IfStatement	if ( * name == '-' )		4234188	0					
ANR	4235860	Condition	* name == '-'	931:10:25224:25233	4234188	0	True				
ANR	4235861	EqualityExpression	* name == '-'		4234188	0		==			
ANR	4235862	UnaryOperationExpression	* name		4234188	0					
ANR	4235863	UnaryOperator	*		4234188	0					
ANR	4235864	Identifier	name		4234188	1					
ANR	4235865	PrimaryExpression	'-'		4234188	1					
ANR	4235866	CompoundStatement		292:22:7079:7079	4234188	1					
ANR	4235867	ExpressionStatement	"r_anal_fcn_label_del ( core -> anal , fcn , name + 1 , off )"	932:7:25245:25298	4234188	0	True				
ANR	4235868	CallExpression	"r_anal_fcn_label_del ( core -> anal , fcn , name + 1 , off )"		4234188	0					
ANR	4235869	Callee	r_anal_fcn_label_del		4234188	0					
ANR	4235870	Identifier	r_anal_fcn_label_del		4234188	0					
ANR	4235871	ArgumentList	core -> anal		4234188	1					
ANR	4235872	Argument	core -> anal		4234188	0					
ANR	4235873	PtrMemberAccess	core -> anal		4234188	0					
ANR	4235874	Identifier	core		4234188	0					
ANR	4235875	Identifier	anal		4234188	1					
ANR	4235876	Argument	fcn		4234188	1					
ANR	4235877	Identifier	fcn		4234188	0					
ANR	4235878	Argument	name + 1		4234188	2					
ANR	4235879	AdditiveExpression	name + 1		4234188	0		+			
ANR	4235880	Identifier	name		4234188	0					
ANR	4235881	PrimaryExpression	1		4234188	1					
ANR	4235882	Argument	off		4234188	3					
ANR	4235883	Identifier	off		4234188	0					
ANR	4235884	ElseStatement	else		4234188	0					
ANR	4235885	CompoundStatement		294:13:7156:7156	4234188	0					
ANR	4235886	ExpressionStatement	"r_anal_fcn_label_set ( core -> anal , fcn , name , off )"	934:7:25322:25371	4234188	0	True				
ANR	4235887	CallExpression	"r_anal_fcn_label_set ( core -> anal , fcn , name , off )"		4234188	0					
ANR	4235888	Callee	r_anal_fcn_label_set		4234188	0					
ANR	4235889	Identifier	r_anal_fcn_label_set		4234188	0					
ANR	4235890	ArgumentList	core -> anal		4234188	1					
ANR	4235891	Argument	core -> anal		4234188	0					
ANR	4235892	PtrMemberAccess	core -> anal		4234188	0					
ANR	4235893	Identifier	core		4234188	0					
ANR	4235894	Identifier	anal		4234188	1					
ANR	4235895	Argument	fcn		4234188	1					
ANR	4235896	Identifier	fcn		4234188	0					
ANR	4235897	Argument	name		4234188	2					
ANR	4235898	Identifier	name		4234188	0					
ANR	4235899	Argument	off		4234188	3					
ANR	4235900	Identifier	off		4234188	0					
ANR	4235901	ElseStatement	else		4234188	0					
ANR	4235902	CompoundStatement		297:12:7236:7236	4234188	0					
ANR	4235903	Statement	eprintf	937:6:25401:25407	4234188	0	True				
ANR	4235904	Statement	(	937:14:25409:25409	4234188	1	True				
ANR	4235905	Statement	"""Cannot find function at 0x%08"""	937:15:25410:25440	4234188	2	True				
ANR	4235906	Statement	PFMT64x	937:46:25441:25447	4234188	3	True				
ANR	4235907	Statement	"""\\n"""	937:53:25448:25451	4234188	4	True				
ANR	4235908	Statement	","	937:57:25452:25452	4234188	5	True				
ANR	4235909	Statement	off	937:59:25454:25456	4234188	6	True				
ANR	4235910	Statement	)	937:62:25457:25457	4234188	7	True				
ANR	4235911	ExpressionStatement		937:63:25458:25458	4234188	8	True				
ANR	4235912	ExpressionStatement	free ( name )	939:5:25472:25483	4234188	4	True				
ANR	4235913	CallExpression	free ( name )		4234188	0					
ANR	4235914	Callee	free		4234188	0					
ANR	4235915	Identifier	free		4234188	0					
ANR	4235916	ArgumentList	name		4234188	1					
ANR	4235917	Argument	name		4234188	0					
ANR	4235918	Identifier	name		4234188	0					
ANR	4235919	ElseStatement	else		4234188	0					
ANR	4235920	CompoundStatement		304:3:7353:7412	4234188	0					
ANR	4235921	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , off , 0 ) ;"	943:3:25510:25569	4234188	0	True				
ANR	4235922	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , off , 0 )"		4234188	0					
ANR	4235923	IdentifierDeclType	RAnalFunction *		4234188	0					
ANR	4235924	Identifier	fcn		4234188	1					
ANR	4235925	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , off , 0 )"		4234188	2		=			
ANR	4235926	Identifier	fcn		4234188	0					
ANR	4235927	CallExpression	"r_anal_get_fcn_in ( core -> anal , off , 0 )"		4234188	1					
ANR	4235928	Callee	r_anal_get_fcn_in		4234188	0					
ANR	4235929	Identifier	r_anal_get_fcn_in		4234188	0					
ANR	4235930	ArgumentList	core -> anal		4234188	1					
ANR	4235931	Argument	core -> anal		4234188	0					
ANR	4235932	PtrMemberAccess	core -> anal		4234188	0					
ANR	4235933	Identifier	core		4234188	0					
ANR	4235934	Identifier	anal		4234188	1					
ANR	4235935	Argument	off		4234188	1					
ANR	4235936	Identifier	off		4234188	0					
ANR	4235937	Argument	0		4234188	2					
ANR	4235938	PrimaryExpression	0		4234188	0					
ANR	4235939	IfStatement	if ( fcn )		4234188	1					
ANR	4235940	Condition	fcn	944:7:25578:25580	4234188	0	True				
ANR	4235941	Identifier	fcn		4234188	0					
ANR	4235942	CompoundStatement		305:12:7426:7426	4234188	1					
ANR	4235943	ExpressionStatement	"r_anal_fcn_labels ( core -> anal , fcn , 0 )"	945:4:25589:25627	4234188	0	True				
ANR	4235944	CallExpression	"r_anal_fcn_labels ( core -> anal , fcn , 0 )"		4234188	0					
ANR	4235945	Callee	r_anal_fcn_labels		4234188	0					
ANR	4235946	Identifier	r_anal_fcn_labels		4234188	0					
ANR	4235947	ArgumentList	core -> anal		4234188	1					
ANR	4235948	Argument	core -> anal		4234188	0					
ANR	4235949	PtrMemberAccess	core -> anal		4234188	0					
ANR	4235950	Identifier	core		4234188	0					
ANR	4235951	Identifier	anal		4234188	1					
ANR	4235952	Argument	fcn		4234188	1					
ANR	4235953	Identifier	fcn		4234188	0					
ANR	4235954	Argument	0		4234188	2					
ANR	4235955	PrimaryExpression	0		4234188	0					
ANR	4235956	ElseStatement	else		4234188	0					
ANR	4235957	CompoundStatement		307:10:7482:7482	4234188	0					
ANR	4235958	ExpressionStatement	"eprintf ( ""Local flags require a function to work."" )"	947:4:25645:25696	4234188	0	True				
ANR	4235959	CallExpression	"eprintf ( ""Local flags require a function to work."" )"		4234188	0					
ANR	4235960	Callee	eprintf		4234188	0					
ANR	4235961	Identifier	eprintf		4234188	0					
ANR	4235962	ArgumentList	"""Local flags require a function to work."""		4234188	1					
ANR	4235963	Argument	"""Local flags require a function to work."""		4234188	0					
ANR	4235964	PrimaryExpression	"""Local flags require a function to work."""		4234188	0					
ANR	4235965	BreakStatement	break ;	950:2:25709:25714	4234188	34	True				
ANR	4235966	Label	case 'l' :	951:1:25717:25725	4234188	35	True				
ANR	4235967	IfStatement	if ( input [ 1 ] == '?' )		4234188	36					
ANR	4235968	Condition	input [ 1 ] == '?'	952:6:25741:25755	4234188	0	True				
ANR	4235969	EqualityExpression	input [ 1 ] == '?'		4234188	0		==			
ANR	4235970	ArrayIndexing	input [ 1 ]		4234188	0					
ANR	4235971	Identifier	input		4234188	0					
ANR	4235972	PrimaryExpression	1		4234188	1					
ANR	4235973	PrimaryExpression	'?'		4234188	1					
ANR	4235974	CompoundStatement		313:23:7601:7601	4234188	1					
ANR	4235975	ExpressionStatement	"eprintf ( ""Usage: fl[a] [flagname]??[flagsize]\\n"" )"	953:3:25772:25821	4234188	0	True				
ANR	4235976	CallExpression	"eprintf ( ""Usage: fl[a] [flagname]??[flagsize]\\n"" )"		4234188	0					
ANR	4235977	Callee	eprintf		4234188	0					
ANR	4235978	Identifier	eprintf		4234188	0					
ANR	4235979	ArgumentList	"""Usage: fl[a] [flagname]??[flagsize]\\n"""		4234188	1					
ANR	4235980	Argument	"""Usage: fl[a] [flagname]??[flagsize]\\n"""		4234188	0					
ANR	4235981	PrimaryExpression	"""Usage: fl[a] [flagname]??[flagsize]\\n"""		4234188	0					
ANR	4235982	ElseStatement	else		4234188	0					
ANR	4235983	IfStatement	if ( input [ 1 ] == 'a' )		4234188	0					
ANR	4235984	Condition	input [ 1 ] == 'a'	954:13:25836:25850	4234188	0	True				
ANR	4235985	EqualityExpression	input [ 1 ] == 'a'		4234188	0		==			
ANR	4235986	ArrayIndexing	input [ 1 ]		4234188	0					
ANR	4235987	Identifier	input		4234188	0					
ANR	4235988	PrimaryExpression	1		4234188	1					
ANR	4235989	PrimaryExpression	'a'		4234188	1					
ANR	4235990	CompoundStatement		317:3:7795:7827	4234188	1					
ANR	4235991	IdentifierDeclStatement	"char * glob = strchr ( input , ' ' ) ;"	956:3:25952:25984	4234188	0	True				
ANR	4235992	IdentifierDecl	"* glob = strchr ( input , ' ' )"		4234188	0					
ANR	4235993	IdentifierDeclType	char *		4234188	0					
ANR	4235994	Identifier	glob		4234188	1					
ANR	4235995	AssignmentExpression	"* glob = strchr ( input , ' ' )"		4234188	2		=			
ANR	4235996	Identifier	glob		4234188	0					
ANR	4235997	CallExpression	"strchr ( input , ' ' )"		4234188	1					
ANR	4235998	Callee	strchr		4234188	0					
ANR	4235999	Identifier	strchr		4234188	0					
ANR	4236000	ArgumentList	input		4234188	1					
ANR	4236001	Argument	input		4234188	0					
ANR	4236002	Identifier	input		4234188	0					
ANR	4236003	Argument	' '		4234188	1					
ANR	4236004	PrimaryExpression	' '		4234188	0					
ANR	4236005	IfStatement	if ( glob )		4234188	1					
ANR	4236006	Condition	glob	957:7:25993:25996	4234188	0	True				
ANR	4236007	Identifier	glob		4234188	0					
ANR	4236008	CompoundStatement		318:13:7842:7842	4234188	1					
ANR	4236009	ExpressionStatement	glob ++	958:4:26005:26011	4234188	0	True				
ANR	4236010	PostIncDecOperationExpression	glob ++		4234188	0					
ANR	4236011	Identifier	glob		4234188	0					
ANR	4236012	IncDec	++		4234188	1					
ANR	4236013	ExpressionStatement	"r_flag_foreach_glob ( core -> flags , glob , find_flag_after_foreach , core -> flags )"	960:3:26021:26098	4234188	2	True				
ANR	4236014	CallExpression	"r_flag_foreach_glob ( core -> flags , glob , find_flag_after_foreach , core -> flags )"		4234188	0					
ANR	4236015	Callee	r_flag_foreach_glob		4234188	0					
ANR	4236016	Identifier	r_flag_foreach_glob		4234188	0					
ANR	4236017	ArgumentList	core -> flags		4234188	1					
ANR	4236018	Argument	core -> flags		4234188	0					
ANR	4236019	PtrMemberAccess	core -> flags		4234188	0					
ANR	4236020	Identifier	core		4234188	0					
ANR	4236021	Identifier	flags		4234188	1					
ANR	4236022	Argument	glob		4234188	1					
ANR	4236023	Identifier	glob		4234188	0					
ANR	4236024	Argument	find_flag_after_foreach		4234188	2					
ANR	4236025	Identifier	find_flag_after_foreach		4234188	0					
ANR	4236026	Argument	core -> flags		4234188	3					
ANR	4236027	PtrMemberAccess	core -> flags		4234188	0					
ANR	4236028	Identifier	core		4234188	0					
ANR	4236029	Identifier	flags		4234188	1					
ANR	4236030	ElseStatement	else		4234188	0					
ANR	4236031	IfStatement	if ( input [ 1 ] == ' ' )		4234188	0					
ANR	4236032	Condition	input [ 1 ] == ' '	961:13:26113:26127	4234188	0	True				
ANR	4236033	EqualityExpression	input [ 1 ] == ' '		4234188	0		==			
ANR	4236034	ArrayIndexing	input [ 1 ]		4234188	0					
ANR	4236035	Identifier	input		4234188	0					
ANR	4236036	PrimaryExpression	1		4234188	1					
ANR	4236037	PrimaryExpression	' '		4234188	1					
ANR	4236038	CompoundStatement		323:3:7990:8024	4234188	1					
ANR	4236039	IdentifierDeclStatement	"char * p , * arg = strdup ( input + 2 ) ;"	962:3:26147:26181	4234188	0	True				
ANR	4236040	IdentifierDecl	* p		4234188	0					
ANR	4236041	IdentifierDeclType	char *		4234188	0					
ANR	4236042	Identifier	p		4234188	1					
ANR	4236043	IdentifierDecl	* arg = strdup ( input + 2 )		4234188	1					
ANR	4236044	IdentifierDeclType	char *		4234188	0					
ANR	4236045	Identifier	arg		4234188	1					
ANR	4236046	AssignmentExpression	* arg = strdup ( input + 2 )		4234188	2		=			
ANR	4236047	Identifier	arg		4234188	0					
ANR	4236048	CallExpression	strdup ( input + 2 )		4234188	1					
ANR	4236049	Callee	strdup		4234188	0					
ANR	4236050	Identifier	strdup		4234188	0					
ANR	4236051	ArgumentList	input + 2		4234188	1					
ANR	4236052	Argument	input + 2		4234188	0					
ANR	4236053	AdditiveExpression	input + 2		4234188	0		+			
ANR	4236054	Identifier	input		4234188	0					
ANR	4236055	PrimaryExpression	2		4234188	1					
ANR	4236056	ExpressionStatement	r_str_trim_head_tail ( arg )	963:3:26186:26212	4234188	1	True				
ANR	4236057	CallExpression	r_str_trim_head_tail ( arg )		4234188	0					
ANR	4236058	Callee	r_str_trim_head_tail		4234188	0					
ANR	4236059	Identifier	r_str_trim_head_tail		4234188	0					
ANR	4236060	ArgumentList	arg		4234188	1					
ANR	4236061	Argument	arg		4234188	0					
ANR	4236062	Identifier	arg		4234188	0					
ANR	4236063	ExpressionStatement	"p = strchr ( arg , ' ' )"	964:3:26217:26238	4234188	2	True				
ANR	4236064	AssignmentExpression	"p = strchr ( arg , ' ' )"		4234188	0		=			
ANR	4236065	Identifier	p		4234188	0					
ANR	4236066	CallExpression	"strchr ( arg , ' ' )"		4234188	1					
ANR	4236067	Callee	strchr		4234188	0					
ANR	4236068	Identifier	strchr		4234188	0					
ANR	4236069	ArgumentList	arg		4234188	1					
ANR	4236070	Argument	arg		4234188	0					
ANR	4236071	Identifier	arg		4234188	0					
ANR	4236072	Argument	' '		4234188	1					
ANR	4236073	PrimaryExpression	' '		4234188	0					
ANR	4236074	IfStatement	if ( p )		4234188	3					
ANR	4236075	Condition	p	965:7:26247:26247	4234188	0	True				
ANR	4236076	Identifier	p		4234188	0					
ANR	4236077	CompoundStatement		326:10:8093:8093	4234188	1					
ANR	4236078	ExpressionStatement	* p ++ = 0	966:4:26256:26264	4234188	0	True				
ANR	4236079	AssignmentExpression	* p ++ = 0		4234188	0		=			
ANR	4236080	UnaryOperationExpression	* p ++		4234188	0					
ANR	4236081	UnaryOperator	*		4234188	0					
ANR	4236082	PostIncDecOperationExpression	p ++		4234188	1					
ANR	4236083	Identifier	p		4234188	0					
ANR	4236084	IncDec	++		4234188	1					
ANR	4236085	PrimaryExpression	0		4234188	1					
ANR	4236086	ExpressionStatement	"item = r_flag_get_i ( core -> flags , r_num_math ( core -> num , arg ) )"	967:4:26270:26337	4234188	1	True				
ANR	4236087	AssignmentExpression	"item = r_flag_get_i ( core -> flags , r_num_math ( core -> num , arg ) )"		4234188	0		=			
ANR	4236088	Identifier	item		4234188	0					
ANR	4236089	CallExpression	"r_flag_get_i ( core -> flags , r_num_math ( core -> num , arg ) )"		4234188	1					
ANR	4236090	Callee	r_flag_get_i		4234188	0					
ANR	4236091	Identifier	r_flag_get_i		4234188	0					
ANR	4236092	ArgumentList	core -> flags		4234188	1					
ANR	4236093	Argument	core -> flags		4234188	0					
ANR	4236094	PtrMemberAccess	core -> flags		4234188	0					
ANR	4236095	Identifier	core		4234188	0					
ANR	4236096	Identifier	flags		4234188	1					
ANR	4236097	Argument	"r_num_math ( core -> num , arg )"		4234188	1					
ANR	4236098	CallExpression	"r_num_math ( core -> num , arg )"		4234188	0					
ANR	4236099	Callee	r_num_math		4234188	0					
ANR	4236100	Identifier	r_num_math		4234188	0					
ANR	4236101	ArgumentList	core -> num		4234188	1					
ANR	4236102	Argument	core -> num		4234188	0					
ANR	4236103	PtrMemberAccess	core -> num		4234188	0					
ANR	4236104	Identifier	core		4234188	0					
ANR	4236105	Identifier	num		4234188	1					
ANR	4236106	Argument	arg		4234188	1					
ANR	4236107	Identifier	arg		4234188	0					
ANR	4236108	IfStatement	if ( item )		4234188	2					
ANR	4236109	Condition	item	969:8:26347:26350	4234188	0	True				
ANR	4236110	Identifier	item		4234188	0					
ANR	4236111	ExpressionStatement	"item -> size = r_num_math ( core -> num , p )"	970:5:26358:26396	4234188	1	True				
ANR	4236112	AssignmentExpression	"item -> size = r_num_math ( core -> num , p )"		4234188	0		=			
ANR	4236113	PtrMemberAccess	item -> size		4234188	0					
ANR	4236114	Identifier	item		4234188	0					
ANR	4236115	Identifier	size		4234188	1					
ANR	4236116	CallExpression	"r_num_math ( core -> num , p )"		4234188	1					
ANR	4236117	Callee	r_num_math		4234188	0					
ANR	4236118	Identifier	r_num_math		4234188	0					
ANR	4236119	ArgumentList	core -> num		4234188	1					
ANR	4236120	Argument	core -> num		4234188	0					
ANR	4236121	PtrMemberAccess	core -> num		4234188	0					
ANR	4236122	Identifier	core		4234188	0					
ANR	4236123	Identifier	num		4234188	1					
ANR	4236124	Argument	p		4234188	1					
ANR	4236125	Identifier	p		4234188	0					
ANR	4236126	ElseStatement	else		4234188	0					
ANR	4236127	CompoundStatement		332:10:8251:8251	4234188	0					
ANR	4236128	IfStatement	if ( * arg )		4234188	0					
ANR	4236129	Condition	* arg	972:8:26418:26421	4234188	0	True				
ANR	4236130	UnaryOperationExpression	* arg		4234188	0					
ANR	4236131	UnaryOperator	*		4234188	0					
ANR	4236132	Identifier	arg		4234188	1					
ANR	4236133	CompoundStatement		333:14:8267:8267	4234188	1					
ANR	4236134	ExpressionStatement	"item = r_flag_get_i ( core -> flags , core -> offset )"	973:5:26431:26478	4234188	0	True				
ANR	4236135	AssignmentExpression	"item = r_flag_get_i ( core -> flags , core -> offset )"		4234188	0		=			
ANR	4236136	Identifier	item		4234188	0					
ANR	4236137	CallExpression	"r_flag_get_i ( core -> flags , core -> offset )"		4234188	1					
ANR	4236138	Callee	r_flag_get_i		4234188	0					
ANR	4236139	Identifier	r_flag_get_i		4234188	0					
ANR	4236140	ArgumentList	core -> flags		4234188	1					
ANR	4236141	Argument	core -> flags		4234188	0					
ANR	4236142	PtrMemberAccess	core -> flags		4234188	0					
ANR	4236143	Identifier	core		4234188	0					
ANR	4236144	Identifier	flags		4234188	1					
ANR	4236145	Argument	core -> offset		4234188	1					
ANR	4236146	PtrMemberAccess	core -> offset		4234188	0					
ANR	4236147	Identifier	core		4234188	0					
ANR	4236148	Identifier	offset		4234188	1					
ANR	4236149	IfStatement	if ( item )		4234188	1					
ANR	4236150	Condition	item	974:9:26489:26492	4234188	0	True				
ANR	4236151	Identifier	item		4234188	0					
ANR	4236152	CompoundStatement		335:15:8338:8338	4234188	1					
ANR	4236153	ExpressionStatement	"item -> size = r_num_math ( core -> num , arg )"	975:6:26503:26543	4234188	0	True				
ANR	4236154	AssignmentExpression	"item -> size = r_num_math ( core -> num , arg )"		4234188	0		=			
ANR	4236155	PtrMemberAccess	item -> size		4234188	0					
ANR	4236156	Identifier	item		4234188	0					
ANR	4236157	Identifier	size		4234188	1					
ANR	4236158	CallExpression	"r_num_math ( core -> num , arg )"		4234188	1					
ANR	4236159	Callee	r_num_math		4234188	0					
ANR	4236160	Identifier	r_num_math		4234188	0					
ANR	4236161	ArgumentList	core -> num		4234188	1					
ANR	4236162	Argument	core -> num		4234188	0					
ANR	4236163	PtrMemberAccess	core -> num		4234188	0					
ANR	4236164	Identifier	core		4234188	0					
ANR	4236165	Identifier	num		4234188	1					
ANR	4236166	Argument	arg		4234188	1					
ANR	4236167	Identifier	arg		4234188	0					
ANR	4236168	ElseStatement	else		4234188	0					
ANR	4236169	CompoundStatement		338:11:8406:8406	4234188	0					
ANR	4236170	ExpressionStatement	"item = r_flag_get_i ( core -> flags , r_num_math ( core -> num , arg ) )"	978:5:26570:26632	4234188	0	True				
ANR	4236171	AssignmentExpression	"item = r_flag_get_i ( core -> flags , r_num_math ( core -> num , arg ) )"		4234188	0		=			
ANR	4236172	Identifier	item		4234188	0					
ANR	4236173	CallExpression	"r_flag_get_i ( core -> flags , r_num_math ( core -> num , arg ) )"		4234188	1					
ANR	4236174	Callee	r_flag_get_i		4234188	0					
ANR	4236175	Identifier	r_flag_get_i		4234188	0					
ANR	4236176	ArgumentList	core -> flags		4234188	1					
ANR	4236177	Argument	core -> flags		4234188	0					
ANR	4236178	PtrMemberAccess	core -> flags		4234188	0					
ANR	4236179	Identifier	core		4234188	0					
ANR	4236180	Identifier	flags		4234188	1					
ANR	4236181	Argument	"r_num_math ( core -> num , arg )"		4234188	1					
ANR	4236182	CallExpression	"r_num_math ( core -> num , arg )"		4234188	0					
ANR	4236183	Callee	r_num_math		4234188	0					
ANR	4236184	Identifier	r_num_math		4234188	0					
ANR	4236185	ArgumentList	core -> num		4234188	1					
ANR	4236186	Argument	core -> num		4234188	0					
ANR	4236187	PtrMemberAccess	core -> num		4234188	0					
ANR	4236188	Identifier	core		4234188	0					
ANR	4236189	Identifier	num		4234188	1					
ANR	4236190	Argument	arg		4234188	1					
ANR	4236191	Identifier	arg		4234188	0					
ANR	4236192	IfStatement	if ( item )		4234188	1					
ANR	4236193	Condition	item	979:9:26643:26646	4234188	0	True				
ANR	4236194	Identifier	item		4234188	0					
ANR	4236195	CompoundStatement		340:15:8492:8492	4234188	1					
ANR	4236196	Statement	r_cons_printf	980:6:26657:26669	4234188	0	True				
ANR	4236197	Statement	(	980:20:26671:26671	4234188	1	True				
ANR	4236198	Statement	"""0x%08"""	980:21:26672:26678	4234188	2	True				
ANR	4236199	Statement	PFMT64x	980:28:26679:26685	4234188	3	True				
ANR	4236200	Statement	"""\\n"""	980:35:26686:26689	4234188	4	True				
ANR	4236201	Statement	","	980:39:26690:26690	4234188	5	True				
ANR	4236202	Statement	item	980:41:26692:26695	4234188	6	True				
ANR	4236203	Statement	->	980:45:26696:26697	4234188	7	True				
ANR	4236204	Statement	size	980:47:26698:26701	4234188	8	True				
ANR	4236205	Statement	)	980:51:26702:26702	4234188	9	True				
ANR	4236206	ExpressionStatement		980:52:26703:26703	4234188	10	True				
ANR	4236207	ExpressionStatement	free ( arg )	984:3:26726:26736	4234188	4	True				
ANR	4236208	CallExpression	free ( arg )		4234188	0					
ANR	4236209	Callee	free		4234188	0					
ANR	4236210	Identifier	free		4234188	0					
ANR	4236211	ArgumentList	arg		4234188	1					
ANR	4236212	Argument	arg		4234188	0					
ANR	4236213	Identifier	arg		4234188	0					
ANR	4236214	ElseStatement	else		4234188	0					
ANR	4236215	CompoundStatement		346:9:8590:8590	4234188	0					
ANR	4236216	ExpressionStatement	"item = r_flag_get_i ( core -> flags , core -> offset )"	986:3:26760:26807	4234188	0	True				
ANR	4236217	AssignmentExpression	"item = r_flag_get_i ( core -> flags , core -> offset )"		4234188	0		=			
ANR	4236218	Identifier	item		4234188	0					
ANR	4236219	CallExpression	"r_flag_get_i ( core -> flags , core -> offset )"		4234188	1					
ANR	4236220	Callee	r_flag_get_i		4234188	0					
ANR	4236221	Identifier	r_flag_get_i		4234188	0					
ANR	4236222	ArgumentList	core -> flags		4234188	1					
ANR	4236223	Argument	core -> flags		4234188	0					
ANR	4236224	PtrMemberAccess	core -> flags		4234188	0					
ANR	4236225	Identifier	core		4234188	0					
ANR	4236226	Identifier	flags		4234188	1					
ANR	4236227	Argument	core -> offset		4234188	1					
ANR	4236228	PtrMemberAccess	core -> offset		4234188	0					
ANR	4236229	Identifier	core		4234188	0					
ANR	4236230	Identifier	offset		4234188	1					
ANR	4236231	IfStatement	if ( item )		4234188	1					
ANR	4236232	Condition	item	987:7:26816:26819	4234188	0	True				
ANR	4236233	Identifier	item		4234188	0					
ANR	4236234	Statement	r_cons_printf	988:4:26826:26838	4234188	1	True				
ANR	4236235	Statement	(	988:18:26840:26840	4234188	2	True				
ANR	4236236	Statement	"""0x%08"""	988:19:26841:26847	4234188	3	True				
ANR	4236237	Statement	PFMT64x	988:26:26848:26854	4234188	4	True				
ANR	4236238	Statement	"""\\n"""	988:33:26855:26858	4234188	5	True				
ANR	4236239	Statement	","	988:37:26859:26859	4234188	6	True				
ANR	4236240	Statement	item	988:39:26861:26864	4234188	7	True				
ANR	4236241	Statement	->	988:43:26865:26866	4234188	8	True				
ANR	4236242	Statement	size	988:45:26867:26870	4234188	9	True				
ANR	4236243	Statement	)	988:49:26871:26871	4234188	10	True				
ANR	4236244	ExpressionStatement		988:50:26872:26872	4234188	11	True				
ANR	4236245	BreakStatement	break ;	990:2:26880:26885	4234188	37	True				
ANR	4236246	Label	case 'd' :	992:1:26894:26902	4234188	38	True				
ANR	4236247	IfStatement	if ( input [ 1 ] == ' ' )		4234188	39					
ANR	4236248	Condition	input [ 1 ] == ' '	993:6:26910:26924	4234188	0	True				
ANR	4236249	EqualityExpression	input [ 1 ] == ' '		4234188	0		==			
ANR	4236250	ArrayIndexing	input [ 1 ]		4234188	0					
ANR	4236251	Identifier	input		4234188	0					
ANR	4236252	PrimaryExpression	1		4234188	1					
ANR	4236253	PrimaryExpression	' '		4234188	1					
ANR	4236254	CompoundStatement		356:3:8793:8874	4234188	1					
ANR	4236255	IdentifierDeclStatement	char cmd [ 128 ] ;	994:3:26932:26945	4234188	0	True				
ANR	4236256	IdentifierDecl	cmd [ 128 ]		4234188	0					
ANR	4236257	IdentifierDeclType	char [ 128 ]		4234188	0					
ANR	4236258	Identifier	cmd		4234188	1					
ANR	4236259	PrimaryExpression	128		4234188	2					
ANR	4236260	IdentifierDeclStatement	"RFlagItem * item = r_flag_get_i ( core -> flags , r_num_math ( core -> num , input + 2 ) ) ;"	995:3:26950:27031	4234188	1	True				
ANR	4236261	IdentifierDecl	"* item = r_flag_get_i ( core -> flags , r_num_math ( core -> num , input + 2 ) )"		4234188	0					
ANR	4236262	IdentifierDeclType	RFlagItem *		4234188	0					
ANR	4236263	Identifier	item		4234188	1					
ANR	4236264	AssignmentExpression	"* item = r_flag_get_i ( core -> flags , r_num_math ( core -> num , input + 2 ) )"		4234188	2		=			
ANR	4236265	Identifier	item		4234188	0					
ANR	4236266	CallExpression	"r_flag_get_i ( core -> flags , r_num_math ( core -> num , input + 2 ) )"		4234188	1					
ANR	4236267	Callee	r_flag_get_i		4234188	0					
ANR	4236268	Identifier	r_flag_get_i		4234188	0					
ANR	4236269	ArgumentList	core -> flags		4234188	1					
ANR	4236270	Argument	core -> flags		4234188	0					
ANR	4236271	PtrMemberAccess	core -> flags		4234188	0					
ANR	4236272	Identifier	core		4234188	0					
ANR	4236273	Identifier	flags		4234188	1					
ANR	4236274	Argument	"r_num_math ( core -> num , input + 2 )"		4234188	1					
ANR	4236275	CallExpression	"r_num_math ( core -> num , input + 2 )"		4234188	0					
ANR	4236276	Callee	r_num_math		4234188	0					
ANR	4236277	Identifier	r_num_math		4234188	0					
ANR	4236278	ArgumentList	core -> num		4234188	1					
ANR	4236279	Argument	core -> num		4234188	0					
ANR	4236280	PtrMemberAccess	core -> num		4234188	0					
ANR	4236281	Identifier	core		4234188	0					
ANR	4236282	Identifier	num		4234188	1					
ANR	4236283	Argument	input + 2		4234188	1					
ANR	4236284	AdditiveExpression	input + 2		4234188	0		+			
ANR	4236285	Identifier	input		4234188	0					
ANR	4236286	PrimaryExpression	2		4234188	1					
ANR	4236287	IfStatement	if ( item )		4234188	2					
ANR	4236288	Condition	item	997:7:27040:27043	4234188	0	True				
ANR	4236289	Identifier	item		4234188	0					
ANR	4236290	CompoundStatement		358:13:8889:8889	4234188	1					
ANR	4236291	Statement	r_cons_printf	998:4:27052:27064	4234188	0	True				
ANR	4236292	Statement	(	998:18:27066:27066	4234188	1	True				
ANR	4236293	Statement	"""0x%08"""	998:19:27067:27073	4234188	2	True				
ANR	4236294	Statement	PFMT64x	998:26:27074:27080	4234188	3	True				
ANR	4236295	Statement	"""\\n"""	998:33:27081:27084	4234188	4	True				
ANR	4236296	Statement	","	998:37:27085:27085	4234188	5	True				
ANR	4236297	Statement	item	998:39:27087:27090	4234188	6	True				
ANR	4236298	Statement	->	998:43:27091:27092	4234188	7	True				
ANR	4236299	Statement	offset	998:45:27093:27098	4234188	8	True				
ANR	4236300	Statement	)	998:51:27099:27099	4234188	9	True				
ANR	4236301	ExpressionStatement		998:52:27100:27100	4234188	10	True				
ANR	4236302	Statement	snprintf	999:4:27106:27113	4234188	11	True				
ANR	4236303	Statement	(	999:13:27115:27115	4234188	12	True				
ANR	4236304	Statement	cmd	999:14:27116:27118	4234188	13	True				
ANR	4236305	Statement	","	999:17:27119:27119	4234188	14	True				
ANR	4236306	Statement	sizeof	999:19:27121:27126	4234188	15	True				
ANR	4236307	Statement	(	999:26:27128:27128	4234188	16	True				
ANR	4236308	Statement	cmd	999:27:27129:27131	4234188	17	True				
ANR	4236309	Statement	)	999:30:27132:27132	4234188	18	True				
ANR	4236310	Statement	","	999:31:27133:27133	4234188	19	True				
ANR	4236311	Statement	"""pD@%"""	999:33:27135:27140	4234188	20	True				
ANR	4236312	Statement	PFMT64d	999:39:27141:27147	4234188	21	True				
ANR	4236313	Statement	""":%"""	999:46:27148:27151	4234188	22	True				
ANR	4236314	Statement	PFMT64d	999:50:27152:27158	4234188	23	True				
ANR	4236315	Statement	","	999:57:27159:27159	4234188	24	True				
ANR	4236316	Statement	item	1000:6:27167:27170	4234188	25	True				
ANR	4236317	Statement	->	1000:10:27171:27172	4234188	26	True				
ANR	4236318	Statement	offset	1000:12:27173:27178	4234188	27	True				
ANR	4236319	Statement	","	1000:18:27179:27179	4234188	28	True				
ANR	4236320	Statement	item	1000:20:27181:27184	4234188	29	True				
ANR	4236321	Statement	->	1000:24:27185:27186	4234188	30	True				
ANR	4236322	Statement	size	1000:26:27187:27190	4234188	31	True				
ANR	4236323	Statement	)	1000:30:27191:27191	4234188	32	True				
ANR	4236324	ExpressionStatement		1000:31:27192:27192	4234188	33	True				
ANR	4236325	ExpressionStatement	"r_core_cmd0 ( core , cmd )"	1001:4:27198:27221	4234188	34	True				
ANR	4236326	CallExpression	"r_core_cmd0 ( core , cmd )"		4234188	0					
ANR	4236327	Callee	r_core_cmd0		4234188	0					
ANR	4236328	Identifier	r_core_cmd0		4234188	0					
ANR	4236329	ArgumentList	core		4234188	1					
ANR	4236330	Argument	core		4234188	0					
ANR	4236331	Identifier	core		4234188	0					
ANR	4236332	Argument	cmd		4234188	1					
ANR	4236333	Identifier	cmd		4234188	0					
ANR	4236334	ElseStatement	else		4234188	0					
ANR	4236335	ExpressionStatement	"eprintf ( ""Missing arguments\\n"" )"	1003:9:27237:27268	4234188	0	True				
ANR	4236336	CallExpression	"eprintf ( ""Missing arguments\\n"" )"		4234188	0					
ANR	4236337	Callee	eprintf		4234188	0					
ANR	4236338	Identifier	eprintf		4234188	0					
ANR	4236339	ArgumentList	"""Missing arguments\\n"""		4234188	1					
ANR	4236340	Argument	"""Missing arguments\\n"""		4234188	0					
ANR	4236341	PrimaryExpression	"""Missing arguments\\n"""		4234188	0					
ANR	4236342	BreakStatement	break ;	1004:2:27272:27277	4234188	40	True				
ANR	4236343	Label	case 'z' :	1006:1:27287:27295	4234188	41	True				
ANR	4236344	ExpressionStatement	"cmd_fz ( core , input + 1 )"	1007:2:27307:27331	4234188	42	True				
ANR	4236345	CallExpression	"cmd_fz ( core , input + 1 )"		4234188	0					
ANR	4236346	Callee	cmd_fz		4234188	0					
ANR	4236347	Identifier	cmd_fz		4234188	0					
ANR	4236348	ArgumentList	core		4234188	1					
ANR	4236349	Argument	core		4234188	0					
ANR	4236350	Identifier	core		4234188	0					
ANR	4236351	Argument	input + 1		4234188	1					
ANR	4236352	AdditiveExpression	input + 1		4234188	0		+			
ANR	4236353	Identifier	input		4234188	0					
ANR	4236354	PrimaryExpression	1		4234188	1					
ANR	4236355	BreakStatement	break ;	1008:2:27335:27340	4234188	43	True				
ANR	4236356	Label	case 'x' :	1009:1:27343:27351	4234188	44	True				
ANR	4236357	IfStatement	if ( input [ 1 ] == ' ' )		4234188	45					
ANR	4236358	Condition	input [ 1 ] == ' '	1010:6:27359:27373	4234188	0	True				
ANR	4236359	EqualityExpression	input [ 1 ] == ' '		4234188	0		==			
ANR	4236360	ArrayIndexing	input [ 1 ]		4234188	0					
ANR	4236361	Identifier	input		4234188	0					
ANR	4236362	PrimaryExpression	1		4234188	1					
ANR	4236363	PrimaryExpression	' '		4234188	1					
ANR	4236364	CompoundStatement		373:3:9242:9323	4234188	1					
ANR	4236365	IdentifierDeclStatement	char cmd [ 128 ] ;	1011:3:27381:27394	4234188	0	True				
ANR	4236366	IdentifierDecl	cmd [ 128 ]		4234188	0					
ANR	4236367	IdentifierDeclType	char [ 128 ]		4234188	0					
ANR	4236368	Identifier	cmd		4234188	1					
ANR	4236369	PrimaryExpression	128		4234188	2					
ANR	4236370	IdentifierDeclStatement	"RFlagItem * item = r_flag_get_i ( core -> flags , r_num_math ( core -> num , input + 2 ) ) ;"	1012:3:27399:27480	4234188	1	True				
ANR	4236371	IdentifierDecl	"* item = r_flag_get_i ( core -> flags , r_num_math ( core -> num , input + 2 ) )"		4234188	0					
ANR	4236372	IdentifierDeclType	RFlagItem *		4234188	0					
ANR	4236373	Identifier	item		4234188	1					
ANR	4236374	AssignmentExpression	"* item = r_flag_get_i ( core -> flags , r_num_math ( core -> num , input + 2 ) )"		4234188	2		=			
ANR	4236375	Identifier	item		4234188	0					
ANR	4236376	CallExpression	"r_flag_get_i ( core -> flags , r_num_math ( core -> num , input + 2 ) )"		4234188	1					
ANR	4236377	Callee	r_flag_get_i		4234188	0					
ANR	4236378	Identifier	r_flag_get_i		4234188	0					
ANR	4236379	ArgumentList	core -> flags		4234188	1					
ANR	4236380	Argument	core -> flags		4234188	0					
ANR	4236381	PtrMemberAccess	core -> flags		4234188	0					
ANR	4236382	Identifier	core		4234188	0					
ANR	4236383	Identifier	flags		4234188	1					
ANR	4236384	Argument	"r_num_math ( core -> num , input + 2 )"		4234188	1					
ANR	4236385	CallExpression	"r_num_math ( core -> num , input + 2 )"		4234188	0					
ANR	4236386	Callee	r_num_math		4234188	0					
ANR	4236387	Identifier	r_num_math		4234188	0					
ANR	4236388	ArgumentList	core -> num		4234188	1					
ANR	4236389	Argument	core -> num		4234188	0					
ANR	4236390	PtrMemberAccess	core -> num		4234188	0					
ANR	4236391	Identifier	core		4234188	0					
ANR	4236392	Identifier	num		4234188	1					
ANR	4236393	Argument	input + 2		4234188	1					
ANR	4236394	AdditiveExpression	input + 2		4234188	0		+			
ANR	4236395	Identifier	input		4234188	0					
ANR	4236396	PrimaryExpression	2		4234188	1					
ANR	4236397	IfStatement	if ( item )		4234188	2					
ANR	4236398	Condition	item	1014:7:27489:27492	4234188	0	True				
ANR	4236399	Identifier	item		4234188	0					
ANR	4236400	CompoundStatement		375:13:9338:9338	4234188	1					
ANR	4236401	Statement	r_cons_printf	1015:4:27501:27513	4234188	0	True				
ANR	4236402	Statement	(	1015:18:27515:27515	4234188	1	True				
ANR	4236403	Statement	"""0x%08"""	1015:19:27516:27522	4234188	2	True				
ANR	4236404	Statement	PFMT64x	1015:26:27523:27529	4234188	3	True				
ANR	4236405	Statement	"""\\n"""	1015:33:27530:27533	4234188	4	True				
ANR	4236406	Statement	","	1015:37:27534:27534	4234188	5	True				
ANR	4236407	Statement	item	1015:39:27536:27539	4234188	6	True				
ANR	4236408	Statement	->	1015:43:27540:27541	4234188	7	True				
ANR	4236409	Statement	offset	1015:45:27542:27547	4234188	8	True				
ANR	4236410	Statement	)	1015:51:27548:27548	4234188	9	True				
ANR	4236411	ExpressionStatement		1015:52:27549:27549	4234188	10	True				
ANR	4236412	Statement	snprintf	1016:4:27555:27562	4234188	11	True				
ANR	4236413	Statement	(	1016:13:27564:27564	4234188	12	True				
ANR	4236414	Statement	cmd	1016:14:27565:27567	4234188	13	True				
ANR	4236415	Statement	","	1016:17:27568:27568	4234188	14	True				
ANR	4236416	Statement	sizeof	1016:19:27570:27575	4234188	15	True				
ANR	4236417	Statement	(	1016:26:27577:27577	4234188	16	True				
ANR	4236418	Statement	cmd	1016:27:27578:27580	4234188	17	True				
ANR	4236419	Statement	)	1016:30:27581:27581	4234188	18	True				
ANR	4236420	Statement	","	1016:31:27582:27582	4234188	19	True				
ANR	4236421	Statement	"""px@%"""	1016:33:27584:27589	4234188	20	True				
ANR	4236422	Statement	PFMT64d	1016:39:27590:27596	4234188	21	True				
ANR	4236423	Statement	""":%"""	1016:46:27597:27600	4234188	22	True				
ANR	4236424	Statement	PFMT64d	1016:50:27601:27607	4234188	23	True				
ANR	4236425	Statement	","	1016:57:27608:27608	4234188	24	True				
ANR	4236426	Statement	item	1017:6:27616:27619	4234188	25	True				
ANR	4236427	Statement	->	1017:10:27620:27621	4234188	26	True				
ANR	4236428	Statement	offset	1017:12:27622:27627	4234188	27	True				
ANR	4236429	Statement	","	1017:18:27628:27628	4234188	28	True				
ANR	4236430	Statement	item	1017:20:27630:27633	4234188	29	True				
ANR	4236431	Statement	->	1017:24:27634:27635	4234188	30	True				
ANR	4236432	Statement	size	1017:26:27636:27639	4234188	31	True				
ANR	4236433	Statement	)	1017:30:27640:27640	4234188	32	True				
ANR	4236434	ExpressionStatement		1017:31:27641:27641	4234188	33	True				
ANR	4236435	ExpressionStatement	"r_core_cmd0 ( core , cmd )"	1018:4:27647:27670	4234188	34	True				
ANR	4236436	CallExpression	"r_core_cmd0 ( core , cmd )"		4234188	0					
ANR	4236437	Callee	r_core_cmd0		4234188	0					
ANR	4236438	Identifier	r_core_cmd0		4234188	0					
ANR	4236439	ArgumentList	core		4234188	1					
ANR	4236440	Argument	core		4234188	0					
ANR	4236441	Identifier	core		4234188	0					
ANR	4236442	Argument	cmd		4234188	1					
ANR	4236443	Identifier	cmd		4234188	0					
ANR	4236444	ElseStatement	else		4234188	0					
ANR	4236445	CompoundStatement		381:9:9529:9529	4234188	0					
ANR	4236446	ExpressionStatement	"eprintf ( ""Missing arguments\\n"" )"	1021:3:27691:27722	4234188	0	True				
ANR	4236447	CallExpression	"eprintf ( ""Missing arguments\\n"" )"		4234188	0					
ANR	4236448	Callee	eprintf		4234188	0					
ANR	4236449	Identifier	eprintf		4234188	0					
ANR	4236450	ArgumentList	"""Missing arguments\\n"""		4234188	1					
ANR	4236451	Argument	"""Missing arguments\\n"""		4234188	0					
ANR	4236452	PrimaryExpression	"""Missing arguments\\n"""		4234188	0					
ANR	4236453	BreakStatement	break ;	1023:2:27730:27735	4234188	46	True				
ANR	4236454	Label	case 't' :	1024:1:27738:27746	4234188	47	True				
ANR	4236455	ExpressionStatement	"cmd_flag_tags ( core , input )"	1025:2:27758:27785	4234188	48	True				
ANR	4236456	CallExpression	"cmd_flag_tags ( core , input )"		4234188	0					
ANR	4236457	Callee	cmd_flag_tags		4234188	0					
ANR	4236458	Identifier	cmd_flag_tags		4234188	0					
ANR	4236459	ArgumentList	core		4234188	1					
ANR	4236460	Argument	core		4234188	0					
ANR	4236461	Identifier	core		4234188	0					
ANR	4236462	Argument	input		4234188	1					
ANR	4236463	Identifier	input		4234188	0					
ANR	4236464	BreakStatement	break ;	1026:2:27789:27794	4234188	49	True				
ANR	4236465	Label	case 's' :	1027:1:27797:27805	4234188	50	True				
ANR	4236466	SwitchStatement	switch ( input [ 1 ] )		4234188	51					
ANR	4236467	Condition	input [ 1 ]	1028:10:27825:27832	4234188	0	True				
ANR	4236468	ArrayIndexing	input [ 1 ]		4234188	0					
ANR	4236469	Identifier	input		4234188	0					
ANR	4236470	PrimaryExpression	1		4234188	1					
ANR	4236471	CompoundStatement		389:20:9678:9678	4234188	1					
ANR	4236472	Label	case '?' :	1029:2:27839:27847	4234188	0	True				
ANR	4236473	ExpressionStatement	"r_core_cmd_help ( core , help_msg_fs )"	1030:3:27852:27887	4234188	1	True				
ANR	4236474	CallExpression	"r_core_cmd_help ( core , help_msg_fs )"		4234188	0					
ANR	4236475	Callee	r_core_cmd_help		4234188	0					
ANR	4236476	Identifier	r_core_cmd_help		4234188	0					
ANR	4236477	ArgumentList	core		4234188	1					
ANR	4236478	Argument	core		4234188	0					
ANR	4236479	Identifier	core		4234188	0					
ANR	4236480	Argument	help_msg_fs		4234188	1					
ANR	4236481	Identifier	help_msg_fs		4234188	0					
ANR	4236482	BreakStatement	break ;	1031:3:27892:27897	4234188	2	True				
ANR	4236483	Label	case '+' :	1032:2:27901:27909	4234188	3	True				
ANR	4236484	ExpressionStatement	"r_flag_space_push ( core -> flags , input + 2 )"	1033:3:27914:27954	4234188	4	True				
ANR	4236485	CallExpression	"r_flag_space_push ( core -> flags , input + 2 )"		4234188	0					
ANR	4236486	Callee	r_flag_space_push		4234188	0					
ANR	4236487	Identifier	r_flag_space_push		4234188	0					
ANR	4236488	ArgumentList	core -> flags		4234188	1					
ANR	4236489	Argument	core -> flags		4234188	0					
ANR	4236490	PtrMemberAccess	core -> flags		4234188	0					
ANR	4236491	Identifier	core		4234188	0					
ANR	4236492	Identifier	flags		4234188	1					
ANR	4236493	Argument	input + 2		4234188	1					
ANR	4236494	AdditiveExpression	input + 2		4234188	0		+			
ANR	4236495	Identifier	input		4234188	0					
ANR	4236496	PrimaryExpression	2		4234188	1					
ANR	4236497	BreakStatement	break ;	1034:3:27959:27964	4234188	5	True				
ANR	4236498	Label	case 'r' :	1035:2:27968:27976	4234188	6	True				
ANR	4236499	IfStatement	if ( input [ 2 ] == ' ' )		4234188	7					
ANR	4236500	Condition	input [ 2 ] == ' '	1036:7:27985:27998	4234188	0	True				
ANR	4236501	EqualityExpression	input [ 2 ] == ' '		4234188	0		==			
ANR	4236502	ArrayIndexing	input [ 2 ]		4234188	0					
ANR	4236503	Identifier	input		4234188	0					
ANR	4236504	PrimaryExpression	2		4234188	1					
ANR	4236505	PrimaryExpression	' '		4234188	1					
ANR	4236506	CompoundStatement		397:23:9844:9844	4234188	1					
ANR	4236507	ExpressionStatement	"r_flag_space_rename ( core -> flags , NULL , input + 2 )"	1037:4:28007:28057	4234188	0	True				
ANR	4236508	CallExpression	"r_flag_space_rename ( core -> flags , NULL , input + 2 )"		4234188	0					
ANR	4236509	Callee	r_flag_space_rename		4234188	0					
ANR	4236510	Identifier	r_flag_space_rename		4234188	0					
ANR	4236511	ArgumentList	core -> flags		4234188	1					
ANR	4236512	Argument	core -> flags		4234188	0					
ANR	4236513	PtrMemberAccess	core -> flags		4234188	0					
ANR	4236514	Identifier	core		4234188	0					
ANR	4236515	Identifier	flags		4234188	1					
ANR	4236516	Argument	NULL		4234188	1					
ANR	4236517	Identifier	NULL		4234188	0					
ANR	4236518	Argument	input + 2		4234188	2					
ANR	4236519	AdditiveExpression	input + 2		4234188	0		+			
ANR	4236520	Identifier	input		4234188	0					
ANR	4236521	PrimaryExpression	2		4234188	1					
ANR	4236522	ElseStatement	else		4234188	0					
ANR	4236523	CompoundStatement		399:10:9912:9912	4234188	0					
ANR	4236524	ExpressionStatement	"eprintf ( ""Usage: fsr [newname]\\n"" )"	1039:4:28075:28109	4234188	0	True				
ANR	4236525	CallExpression	"eprintf ( ""Usage: fsr [newname]\\n"" )"		4234188	0					
ANR	4236526	Callee	eprintf		4234188	0					
ANR	4236527	Identifier	eprintf		4234188	0					
ANR	4236528	ArgumentList	"""Usage: fsr [newname]\\n"""		4234188	1					
ANR	4236529	Argument	"""Usage: fsr [newname]\\n"""		4234188	0					
ANR	4236530	PrimaryExpression	"""Usage: fsr [newname]\\n"""		4234188	0					
ANR	4236531	BreakStatement	break ;	1041:3:28119:28124	4234188	8	True				
ANR	4236532	Label	case 's' :	1042:2:28128:28136	4234188	9	True				
ANR	4236533	ExpressionStatement	"flag_space_stack_list ( core -> flags , input [ 2 ] )"	1043:3:28141:28186	4234188	10	True				
ANR	4236534	CallExpression	"flag_space_stack_list ( core -> flags , input [ 2 ] )"		4234188	0					
ANR	4236535	Callee	flag_space_stack_list		4234188	0					
ANR	4236536	Identifier	flag_space_stack_list		4234188	0					
ANR	4236537	ArgumentList	core -> flags		4234188	1					
ANR	4236538	Argument	core -> flags		4234188	0					
ANR	4236539	PtrMemberAccess	core -> flags		4234188	0					
ANR	4236540	Identifier	core		4234188	0					
ANR	4236541	Identifier	flags		4234188	1					
ANR	4236542	Argument	input [ 2 ]		4234188	1					
ANR	4236543	ArrayIndexing	input [ 2 ]		4234188	0					
ANR	4236544	Identifier	input		4234188	0					
ANR	4236545	PrimaryExpression	2		4234188	1					
ANR	4236546	BreakStatement	break ;	1044:3:28191:28196	4234188	11	True				
ANR	4236547	Label	case '-' :	1045:2:28200:28208	4234188	12	True				
ANR	4236548	SwitchStatement	switch ( input [ 2 ] )		4234188	13					
ANR	4236549	Condition	input [ 2 ]	1046:11:28221:28228	4234188	0	True				
ANR	4236550	ArrayIndexing	input [ 2 ]		4234188	0					
ANR	4236551	Identifier	input		4234188	0					
ANR	4236552	PrimaryExpression	2		4234188	1					
ANR	4236553	CompoundStatement		407:21:10074:10074	4234188	1					
ANR	4236554	Label	case '*' :	1047:3:28236:28244	4234188	0	True				
ANR	4236555	ExpressionStatement	"r_flag_space_unset ( core -> flags , NULL )"	1048:4:28250:28288	4234188	1	True				
ANR	4236556	CallExpression	"r_flag_space_unset ( core -> flags , NULL )"		4234188	0					
ANR	4236557	Callee	r_flag_space_unset		4234188	0					
ANR	4236558	Identifier	r_flag_space_unset		4234188	0					
ANR	4236559	ArgumentList	core -> flags		4234188	1					
ANR	4236560	Argument	core -> flags		4234188	0					
ANR	4236561	PtrMemberAccess	core -> flags		4234188	0					
ANR	4236562	Identifier	core		4234188	0					
ANR	4236563	Identifier	flags		4234188	1					
ANR	4236564	Argument	NULL		4234188	1					
ANR	4236565	Identifier	NULL		4234188	0					
ANR	4236566	BreakStatement	break ;	1049:4:28294:28299	4234188	2	True				
ANR	4236567	Label	case '.' :	1050:3:28304:28312	4234188	3	True				
ANR	4236568	CompoundStatement		412:4:10163:10212	4234188	4					
ANR	4236569	IdentifierDeclStatement	const RSpace * sp = r_flag_space_cur ( core -> flags ) ;	1051:4:28320:28369	4234188	0	True				
ANR	4236570	IdentifierDecl	* sp = r_flag_space_cur ( core -> flags )		4234188	0					
ANR	4236571	IdentifierDeclType	const RSpace *		4234188	0					
ANR	4236572	Identifier	sp		4234188	1					
ANR	4236573	AssignmentExpression	* sp = r_flag_space_cur ( core -> flags )		4234188	2		=			
ANR	4236574	Identifier	sp		4234188	0					
ANR	4236575	CallExpression	r_flag_space_cur ( core -> flags )		4234188	1					
ANR	4236576	Callee	r_flag_space_cur		4234188	0					
ANR	4236577	Identifier	r_flag_space_cur		4234188	0					
ANR	4236578	ArgumentList	core -> flags		4234188	1					
ANR	4236579	Argument	core -> flags		4234188	0					
ANR	4236580	PtrMemberAccess	core -> flags		4234188	0					
ANR	4236581	Identifier	core		4234188	0					
ANR	4236582	Identifier	flags		4234188	1					
ANR	4236583	IfStatement	if ( sp )		4234188	1					
ANR	4236584	Condition	sp	1052:8:28379:28380	4234188	0	True				
ANR	4236585	Identifier	sp		4234188	0					
ANR	4236586	CompoundStatement		413:12:10226:10226	4234188	1					
ANR	4236587	ExpressionStatement	"r_flag_space_unset ( core -> flags , sp -> name )"	1053:5:28390:28432	4234188	0	True				
ANR	4236588	CallExpression	"r_flag_space_unset ( core -> flags , sp -> name )"		4234188	0					
ANR	4236589	Callee	r_flag_space_unset		4234188	0					
ANR	4236590	Identifier	r_flag_space_unset		4234188	0					
ANR	4236591	ArgumentList	core -> flags		4234188	1					
ANR	4236592	Argument	core -> flags		4234188	0					
ANR	4236593	PtrMemberAccess	core -> flags		4234188	0					
ANR	4236594	Identifier	core		4234188	0					
ANR	4236595	Identifier	flags		4234188	1					
ANR	4236596	Argument	sp -> name		4234188	1					
ANR	4236597	PtrMemberAccess	sp -> name		4234188	0					
ANR	4236598	Identifier	sp		4234188	0					
ANR	4236599	Identifier	name		4234188	1					
ANR	4236600	BreakStatement	break ;	1055:4:28444:28449	4234188	2	True				
ANR	4236601	Label	case 0 :	1057:3:28459:28465	4234188	5	True				
ANR	4236602	ExpressionStatement	r_flag_space_pop ( core -> flags )	1058:4:28471:28501	4234188	6	True				
ANR	4236603	CallExpression	r_flag_space_pop ( core -> flags )		4234188	0					
ANR	4236604	Callee	r_flag_space_pop		4234188	0					
ANR	4236605	Identifier	r_flag_space_pop		4234188	0					
ANR	4236606	ArgumentList	core -> flags		4234188	1					
ANR	4236607	Argument	core -> flags		4234188	0					
ANR	4236608	PtrMemberAccess	core -> flags		4234188	0					
ANR	4236609	Identifier	core		4234188	0					
ANR	4236610	Identifier	flags		4234188	1					
ANR	4236611	BreakStatement	break ;	1059:4:28507:28512	4234188	7	True				
ANR	4236612	Label	default :	1060:3:28517:28524	4234188	8	True				
ANR	4236613	Identifier	default		4234188	0					
ANR	4236614	ExpressionStatement	"r_flag_space_unset ( core -> flags , input + 2 )"	1061:4:28530:28571	4234188	9	True				
ANR	4236615	CallExpression	"r_flag_space_unset ( core -> flags , input + 2 )"		4234188	0					
ANR	4236616	Callee	r_flag_space_unset		4234188	0					
ANR	4236617	Identifier	r_flag_space_unset		4234188	0					
ANR	4236618	ArgumentList	core -> flags		4234188	1					
ANR	4236619	Argument	core -> flags		4234188	0					
ANR	4236620	PtrMemberAccess	core -> flags		4234188	0					
ANR	4236621	Identifier	core		4234188	0					
ANR	4236622	Identifier	flags		4234188	1					
ANR	4236623	Argument	input + 2		4234188	1					
ANR	4236624	AdditiveExpression	input + 2		4234188	0		+			
ANR	4236625	Identifier	input		4234188	0					
ANR	4236626	PrimaryExpression	2		4234188	1					
ANR	4236627	BreakStatement	break ;	1062:4:28577:28582	4234188	10	True				
ANR	4236628	BreakStatement	break ;	1064:3:28592:28597	4234188	14	True				
ANR	4236629	Label	case ' ' :	1065:2:28601:28609	4234188	15	True				
ANR	4236630	ExpressionStatement	"r_flag_space_set ( core -> flags , input + 2 )"	1066:3:28614:28653	4234188	16	True				
ANR	4236631	CallExpression	"r_flag_space_set ( core -> flags , input + 2 )"		4234188	0					
ANR	4236632	Callee	r_flag_space_set		4234188	0					
ANR	4236633	Identifier	r_flag_space_set		4234188	0					
ANR	4236634	ArgumentList	core -> flags		4234188	1					
ANR	4236635	Argument	core -> flags		4234188	0					
ANR	4236636	PtrMemberAccess	core -> flags		4234188	0					
ANR	4236637	Identifier	core		4234188	0					
ANR	4236638	Identifier	flags		4234188	1					
ANR	4236639	Argument	input + 2		4234188	1					
ANR	4236640	AdditiveExpression	input + 2		4234188	0		+			
ANR	4236641	Identifier	input		4234188	0					
ANR	4236642	PrimaryExpression	2		4234188	1					
ANR	4236643	BreakStatement	break ;	1067:3:28658:28663	4234188	17	True				
ANR	4236644	Label	case 'm' :	1068:2:28667:28675	4234188	18	True				
ANR	4236645	CompoundStatement		431:3:10542:10565	4234188	19					
ANR	4236646	IdentifierDeclStatement	RFlagItem * f ;	1069:5:28682:28694	4234188	0	True				
ANR	4236647	IdentifierDecl	* f		4234188	0					
ANR	4236648	IdentifierDeclType	RFlagItem *		4234188	0					
ANR	4236649	Identifier	f		4234188	1					
ANR	4236650	IdentifierDeclStatement	ut64 off = core -> offset ;	1070:3:28699:28722	4234188	1	True				
ANR	4236651	IdentifierDecl	off = core -> offset		4234188	0					
ANR	4236652	IdentifierDeclType	ut64		4234188	0					
ANR	4236653	Identifier	off		4234188	1					
ANR	4236654	AssignmentExpression	off = core -> offset		4234188	2		=			
ANR	4236655	Identifier	off		4234188	0					
ANR	4236656	PtrMemberAccess	core -> offset		4234188	1					
ANR	4236657	Identifier	core		4234188	0					
ANR	4236658	Identifier	offset		4234188	1					
ANR	4236659	IfStatement	if ( input [ 2 ] == ' ' )		4234188	2					
ANR	4236660	Condition	input [ 2 ] == ' '	1071:7:28731:28745	4234188	0	True				
ANR	4236661	EqualityExpression	input [ 2 ] == ' '		4234188	0		==			
ANR	4236662	ArrayIndexing	input [ 2 ]		4234188	0					
ANR	4236663	Identifier	input		4234188	0					
ANR	4236664	PrimaryExpression	2		4234188	1					
ANR	4236665	PrimaryExpression	' '		4234188	1					
ANR	4236666	CompoundStatement		432:24:10591:10591	4234188	1					
ANR	4236667	ExpressionStatement	"off = r_num_math ( core -> num , input + 2 )"	1072:4:28754:28791	4234188	0	True				
ANR	4236668	AssignmentExpression	"off = r_num_math ( core -> num , input + 2 )"		4234188	0		=			
ANR	4236669	Identifier	off		4234188	0					
ANR	4236670	CallExpression	"r_num_math ( core -> num , input + 2 )"		4234188	1					
ANR	4236671	Callee	r_num_math		4234188	0					
ANR	4236672	Identifier	r_num_math		4234188	0					
ANR	4236673	ArgumentList	core -> num		4234188	1					
ANR	4236674	Argument	core -> num		4234188	0					
ANR	4236675	PtrMemberAccess	core -> num		4234188	0					
ANR	4236676	Identifier	core		4234188	0					
ANR	4236677	Identifier	num		4234188	1					
ANR	4236678	Argument	input + 2		4234188	1					
ANR	4236679	AdditiveExpression	input + 2		4234188	0		+			
ANR	4236680	Identifier	input		4234188	0					
ANR	4236681	PrimaryExpression	2		4234188	1					
ANR	4236682	ExpressionStatement	"f = r_flag_get_i ( core -> flags , off )"	1074:3:28801:28836	4234188	3	True				
ANR	4236683	AssignmentExpression	"f = r_flag_get_i ( core -> flags , off )"		4234188	0		=			
ANR	4236684	Identifier	f		4234188	0					
ANR	4236685	CallExpression	"r_flag_get_i ( core -> flags , off )"		4234188	1					
ANR	4236686	Callee	r_flag_get_i		4234188	0					
ANR	4236687	Identifier	r_flag_get_i		4234188	0					
ANR	4236688	ArgumentList	core -> flags		4234188	1					
ANR	4236689	Argument	core -> flags		4234188	0					
ANR	4236690	PtrMemberAccess	core -> flags		4234188	0					
ANR	4236691	Identifier	core		4234188	0					
ANR	4236692	Identifier	flags		4234188	1					
ANR	4236693	Argument	off		4234188	1					
ANR	4236694	Identifier	off		4234188	0					
ANR	4236695	IfStatement	if ( f )		4234188	4					
ANR	4236696	Condition	f	1075:7:28845:28845	4234188	0	True				
ANR	4236697	Identifier	f		4234188	0					
ANR	4236698	CompoundStatement		436:10:10691:10691	4234188	1					
ANR	4236699	ExpressionStatement	f -> space = r_flag_space_cur ( core -> flags )	1076:4:28854:28895	4234188	0	True				
ANR	4236700	AssignmentExpression	f -> space = r_flag_space_cur ( core -> flags )		4234188	0		=			
ANR	4236701	PtrMemberAccess	f -> space		4234188	0					
ANR	4236702	Identifier	f		4234188	0					
ANR	4236703	Identifier	space		4234188	1					
ANR	4236704	CallExpression	r_flag_space_cur ( core -> flags )		4234188	1					
ANR	4236705	Callee	r_flag_space_cur		4234188	0					
ANR	4236706	Identifier	r_flag_space_cur		4234188	0					
ANR	4236707	ArgumentList	core -> flags		4234188	1					
ANR	4236708	Argument	core -> flags		4234188	0					
ANR	4236709	PtrMemberAccess	core -> flags		4234188	0					
ANR	4236710	Identifier	core		4234188	0					
ANR	4236711	Identifier	flags		4234188	1					
ANR	4236712	ElseStatement	else		4234188	0					
ANR	4236713	CompoundStatement		438:10:10750:10750	4234188	0					
ANR	4236714	Statement	eprintf	1078:4:28913:28919	4234188	0	True				
ANR	4236715	Statement	(	1078:12:28921:28921	4234188	1	True				
ANR	4236716	Statement	"""Cannot find any flag at 0x%"""	1078:13:28922:28950	4234188	2	True				
ANR	4236717	Statement	PFMT64x	1078:42:28951:28957	4234188	3	True				
ANR	4236718	Statement	""".\\n"""	1078:49:28958:28962	4234188	4	True				
ANR	4236719	Statement	","	1078:54:28963:28963	4234188	5	True				
ANR	4236720	Statement	off	1078:56:28965:28967	4234188	6	True				
ANR	4236721	Statement	)	1078:59:28968:28968	4234188	7	True				
ANR	4236722	ExpressionStatement		1078:60:28969:28969	4234188	8	True				
ANR	4236723	BreakStatement	break ;	1081:3:28984:28989	4234188	20	True				
ANR	4236724	Label	case 'j' :	1082:2:28993:29001	4234188	21	True				
ANR	4236725	Label	case '\\0' :	1083:2:29005:29014	4234188	22	True				
ANR	4236726	Label	case '*' :	1084:2:29018:29026	4234188	23	True				
ANR	4236727	Label	case 'q' :	1085:2:29030:29038	4234188	24	True				
ANR	4236728	ExpressionStatement	"spaces_list ( & core -> flags -> spaces , input [ 1 ] )"	1086:3:29043:29087	4234188	25	True				
ANR	4236729	CallExpression	"spaces_list ( & core -> flags -> spaces , input [ 1 ] )"		4234188	0					
ANR	4236730	Callee	spaces_list		4234188	0					
ANR	4236731	Identifier	spaces_list		4234188	0					
ANR	4236732	ArgumentList	& core -> flags -> spaces		4234188	1					
ANR	4236733	Argument	& core -> flags -> spaces		4234188	0					
ANR	4236734	UnaryOperationExpression	& core -> flags -> spaces		4234188	0					
ANR	4236735	UnaryOperator	&		4234188	0					
ANR	4236736	PtrMemberAccess	core -> flags -> spaces		4234188	1					
ANR	4236737	PtrMemberAccess	core -> flags		4234188	0					
ANR	4236738	Identifier	core		4234188	0					
ANR	4236739	Identifier	flags		4234188	1					
ANR	4236740	Identifier	spaces		4234188	1					
ANR	4236741	Argument	input [ 1 ]		4234188	1					
ANR	4236742	ArrayIndexing	input [ 1 ]		4234188	0					
ANR	4236743	Identifier	input		4234188	0					
ANR	4236744	PrimaryExpression	1		4234188	1					
ANR	4236745	BreakStatement	break ;	1087:3:29092:29097	4234188	26	True				
ANR	4236746	Label	default :	1088:2:29101:29108	4234188	27	True				
ANR	4236747	Identifier	default		4234188	0					
ANR	4236748	ExpressionStatement	"spaces_list ( & core -> flags -> spaces , 0 )"	1089:3:29113:29150	4234188	28	True				
ANR	4236749	CallExpression	"spaces_list ( & core -> flags -> spaces , 0 )"		4234188	0					
ANR	4236750	Callee	spaces_list		4234188	0					
ANR	4236751	Identifier	spaces_list		4234188	0					
ANR	4236752	ArgumentList	& core -> flags -> spaces		4234188	1					
ANR	4236753	Argument	& core -> flags -> spaces		4234188	0					
ANR	4236754	UnaryOperationExpression	& core -> flags -> spaces		4234188	0					
ANR	4236755	UnaryOperator	&		4234188	0					
ANR	4236756	PtrMemberAccess	core -> flags -> spaces		4234188	1					
ANR	4236757	PtrMemberAccess	core -> flags		4234188	0					
ANR	4236758	Identifier	core		4234188	0					
ANR	4236759	Identifier	flags		4234188	1					
ANR	4236760	Identifier	spaces		4234188	1					
ANR	4236761	Argument	0		4234188	1					
ANR	4236762	PrimaryExpression	0		4234188	0					
ANR	4236763	BreakStatement	break ;	1090:3:29155:29160	4234188	29	True				
ANR	4236764	BreakStatement	break ;	1092:2:29168:29173	4234188	52	True				
ANR	4236765	Label	case 'g' :	1093:1:29176:29184	4234188	53	True				
ANR	4236766	SwitchStatement	switch ( input [ 1 ] )		4234188	54					
ANR	4236767	Condition	input [ 1 ]	1094:10:29204:29211	4234188	0	True				
ANR	4236768	ArrayIndexing	input [ 1 ]		4234188	0					
ANR	4236769	Identifier	input		4234188	0					
ANR	4236770	PrimaryExpression	1		4234188	1					
ANR	4236771	CompoundStatement		455:20:11057:11057	4234188	1					
ANR	4236772	Label	case '*' :	1095:2:29218:29226	4234188	0	True				
ANR	4236773	ExpressionStatement	"__flag_graph ( core , r_str_trim_ro ( input + 2 ) , '*' )"	1096:3:29231:29282	4234188	1	True				
ANR	4236774	CallExpression	"__flag_graph ( core , r_str_trim_ro ( input + 2 ) , '*' )"		4234188	0					
ANR	4236775	Callee	__flag_graph		4234188	0					
ANR	4236776	Identifier	__flag_graph		4234188	0					
ANR	4236777	ArgumentList	core		4234188	1					
ANR	4236778	Argument	core		4234188	0					
ANR	4236779	Identifier	core		4234188	0					
ANR	4236780	Argument	r_str_trim_ro ( input + 2 )		4234188	1					
ANR	4236781	CallExpression	r_str_trim_ro ( input + 2 )		4234188	0					
ANR	4236782	Callee	r_str_trim_ro		4234188	0					
ANR	4236783	Identifier	r_str_trim_ro		4234188	0					
ANR	4236784	ArgumentList	input + 2		4234188	1					
ANR	4236785	Argument	input + 2		4234188	0					
ANR	4236786	AdditiveExpression	input + 2		4234188	0		+			
ANR	4236787	Identifier	input		4234188	0					
ANR	4236788	PrimaryExpression	2		4234188	1					
ANR	4236789	Argument	'*'		4234188	2					
ANR	4236790	PrimaryExpression	'*'		4234188	0					
ANR	4236791	BreakStatement	break ;	1097:3:29287:29292	4234188	2	True				
ANR	4236792	Label	case ' ' :	1098:2:29296:29304	4234188	3	True				
ANR	4236793	ExpressionStatement	"__flag_graph ( core , r_str_trim_ro ( input + 2 ) , ' ' )"	1099:3:29309:29360	4234188	4	True				
ANR	4236794	CallExpression	"__flag_graph ( core , r_str_trim_ro ( input + 2 ) , ' ' )"		4234188	0					
ANR	4236795	Callee	__flag_graph		4234188	0					
ANR	4236796	Identifier	__flag_graph		4234188	0					
ANR	4236797	ArgumentList	core		4234188	1					
ANR	4236798	Argument	core		4234188	0					
ANR	4236799	Identifier	core		4234188	0					
ANR	4236800	Argument	r_str_trim_ro ( input + 2 )		4234188	1					
ANR	4236801	CallExpression	r_str_trim_ro ( input + 2 )		4234188	0					
ANR	4236802	Callee	r_str_trim_ro		4234188	0					
ANR	4236803	Identifier	r_str_trim_ro		4234188	0					
ANR	4236804	ArgumentList	input + 2		4234188	1					
ANR	4236805	Argument	input + 2		4234188	0					
ANR	4236806	AdditiveExpression	input + 2		4234188	0		+			
ANR	4236807	Identifier	input		4234188	0					
ANR	4236808	PrimaryExpression	2		4234188	1					
ANR	4236809	Argument	' '		4234188	2					
ANR	4236810	PrimaryExpression	' '		4234188	0					
ANR	4236811	BreakStatement	break ;	1100:3:29365:29370	4234188	5	True				
ANR	4236812	Label	case 0 :	1101:2:29374:29380	4234188	6	True				
ANR	4236813	ExpressionStatement	"__flag_graph ( core , r_str_trim_ro ( input + 1 ) , 0 )"	1102:3:29385:29434	4234188	7	True				
ANR	4236814	CallExpression	"__flag_graph ( core , r_str_trim_ro ( input + 1 ) , 0 )"		4234188	0					
ANR	4236815	Callee	__flag_graph		4234188	0					
ANR	4236816	Identifier	__flag_graph		4234188	0					
ANR	4236817	ArgumentList	core		4234188	1					
ANR	4236818	Argument	core		4234188	0					
ANR	4236819	Identifier	core		4234188	0					
ANR	4236820	Argument	r_str_trim_ro ( input + 1 )		4234188	1					
ANR	4236821	CallExpression	r_str_trim_ro ( input + 1 )		4234188	0					
ANR	4236822	Callee	r_str_trim_ro		4234188	0					
ANR	4236823	Identifier	r_str_trim_ro		4234188	0					
ANR	4236824	ArgumentList	input + 1		4234188	1					
ANR	4236825	Argument	input + 1		4234188	0					
ANR	4236826	AdditiveExpression	input + 1		4234188	0		+			
ANR	4236827	Identifier	input		4234188	0					
ANR	4236828	PrimaryExpression	1		4234188	1					
ANR	4236829	Argument	0		4234188	2					
ANR	4236830	PrimaryExpression	0		4234188	0					
ANR	4236831	BreakStatement	break ;	1103:3:29439:29444	4234188	8	True				
ANR	4236832	Label	default :	1104:2:29448:29455	4234188	9	True				
ANR	4236833	Identifier	default		4234188	0					
ANR	4236834	ExpressionStatement	"eprintf ( ""Usage: fg[*] ([prefix])\\n"" )"	1105:3:29460:29497	4234188	10	True				
ANR	4236835	CallExpression	"eprintf ( ""Usage: fg[*] ([prefix])\\n"" )"		4234188	0					
ANR	4236836	Callee	eprintf		4234188	0					
ANR	4236837	Identifier	eprintf		4234188	0					
ANR	4236838	ArgumentList	"""Usage: fg[*] ([prefix])\\n"""		4234188	1					
ANR	4236839	Argument	"""Usage: fg[*] ([prefix])\\n"""		4234188	0					
ANR	4236840	PrimaryExpression	"""Usage: fg[*] ([prefix])\\n"""		4234188	0					
ANR	4236841	BreakStatement	break ;	1106:3:29502:29507	4234188	11	True				
ANR	4236842	BreakStatement	break ;	1108:2:29515:29520	4234188	55	True				
ANR	4236843	Label	case 'c' :	1109:1:29523:29531	4234188	56	True				
ANR	4236844	IfStatement	if ( input [ 1 ] == '?' || input [ 1 ] != ' ' )		4234188	57					
ANR	4236845	Condition	input [ 1 ] == '?' || input [ 1 ] != ' '	1110:6:29547:29578	4234188	0	True				
ANR	4236846	OrExpression	input [ 1 ] == '?' || input [ 1 ] != ' '		4234188	0		||			
ANR	4236847	EqualityExpression	input [ 1 ] == '?'		4234188	0		==			
ANR	4236848	ArrayIndexing	input [ 1 ]		4234188	0					
ANR	4236849	Identifier	input		4234188	0					
ANR	4236850	PrimaryExpression	1		4234188	1					
ANR	4236851	PrimaryExpression	'?'		4234188	1					
ANR	4236852	EqualityExpression	input [ 1 ] != ' '		4234188	1		!=			
ANR	4236853	ArrayIndexing	input [ 1 ]		4234188	0					
ANR	4236854	Identifier	input		4234188	0					
ANR	4236855	PrimaryExpression	1		4234188	1					
ANR	4236856	PrimaryExpression	' '		4234188	1					
ANR	4236857	CompoundStatement		471:40:11424:11424	4234188	1					
ANR	4236858	ExpressionStatement	"r_core_cmd_help ( core , help_msg_fc )"	1111:3:29586:29621	4234188	0	True				
ANR	4236859	CallExpression	"r_core_cmd_help ( core , help_msg_fc )"		4234188	0					
ANR	4236860	Callee	r_core_cmd_help		4234188	0					
ANR	4236861	Identifier	r_core_cmd_help		4234188	0					
ANR	4236862	ArgumentList	core		4234188	1					
ANR	4236863	Argument	core		4234188	0					
ANR	4236864	Identifier	core		4234188	0					
ANR	4236865	Argument	help_msg_fc		4234188	1					
ANR	4236866	Identifier	help_msg_fc		4234188	0					
ANR	4236867	ElseStatement	else		4234188	0					
ANR	4236868	CompoundStatement		477:3:11561:11592	4234188	0					
ANR	4236869	IdentifierDeclStatement	RFlagItem * fi ;	1113:3:29637:29650	4234188	0	True				
ANR	4236870	IdentifierDecl	* fi		4234188	0					
ANR	4236871	IdentifierDeclType	RFlagItem *		4234188	0					
ANR	4236872	Identifier	fi		4234188	1					
ANR	4236873	IdentifierDeclStatement	const char * ret ;	1114:3:29655:29670	4234188	1	True				
ANR	4236874	IdentifierDecl	* ret		4234188	0					
ANR	4236875	IdentifierDeclType	const char *		4234188	0					
ANR	4236876	Identifier	ret		4234188	1					
ANR	4236877	IdentifierDeclStatement	char * arg = r_str_trim_dup ( input + 2 ) ;	1115:3:29675:29713	4234188	2	True				
ANR	4236878	IdentifierDecl	* arg = r_str_trim_dup ( input + 2 )		4234188	0					
ANR	4236879	IdentifierDeclType	char *		4234188	0					
ANR	4236880	Identifier	arg		4234188	1					
ANR	4236881	AssignmentExpression	* arg = r_str_trim_dup ( input + 2 )		4234188	2		=			
ANR	4236882	Identifier	arg		4234188	0					
ANR	4236883	CallExpression	r_str_trim_dup ( input + 2 )		4234188	1					
ANR	4236884	Callee	r_str_trim_dup		4234188	0					
ANR	4236885	Identifier	r_str_trim_dup		4234188	0					
ANR	4236886	ArgumentList	input + 2		4234188	1					
ANR	4236887	Argument	input + 2		4234188	0					
ANR	4236888	AdditiveExpression	input + 2		4234188	0		+			
ANR	4236889	Identifier	input		4234188	0					
ANR	4236890	PrimaryExpression	2		4234188	1					
ANR	4236891	IdentifierDeclStatement	"char * color = strchr ( arg , ' ' ) ;"	1116:3:29718:29749	4234188	3	True				
ANR	4236892	IdentifierDecl	"* color = strchr ( arg , ' ' )"		4234188	0					
ANR	4236893	IdentifierDeclType	char *		4234188	0					
ANR	4236894	Identifier	color		4234188	1					
ANR	4236895	AssignmentExpression	"* color = strchr ( arg , ' ' )"		4234188	2		=			
ANR	4236896	Identifier	color		4234188	0					
ANR	4236897	CallExpression	"strchr ( arg , ' ' )"		4234188	1					
ANR	4236898	Callee	strchr		4234188	0					
ANR	4236899	Identifier	strchr		4234188	0					
ANR	4236900	ArgumentList	arg		4234188	1					
ANR	4236901	Argument	arg		4234188	0					
ANR	4236902	Identifier	arg		4234188	0					
ANR	4236903	Argument	' '		4234188	1					
ANR	4236904	PrimaryExpression	' '		4234188	0					
ANR	4236905	IfStatement	if ( color && color [ 1 ] )		4234188	4					
ANR	4236906	Condition	color && color [ 1 ]	1117:7:29758:29774	4234188	0	True				
ANR	4236907	AndExpression	color && color [ 1 ]		4234188	0		&&			
ANR	4236908	Identifier	color		4234188	0					
ANR	4236909	ArrayIndexing	color [ 1 ]		4234188	1					
ANR	4236910	Identifier	color		4234188	0					
ANR	4236911	PrimaryExpression	1		4234188	1					
ANR	4236912	CompoundStatement		478:26:11620:11620	4234188	1					
ANR	4236913	ExpressionStatement	* color ++ = 0	1118:4:29783:29795	4234188	0	True				
ANR	4236914	AssignmentExpression	* color ++ = 0		4234188	0		=			
ANR	4236915	UnaryOperationExpression	* color ++		4234188	0					
ANR	4236916	UnaryOperator	*		4234188	0					
ANR	4236917	PostIncDecOperationExpression	color ++		4234188	1					
ANR	4236918	Identifier	color		4234188	0					
ANR	4236919	IncDec	++		4234188	1					
ANR	4236920	PrimaryExpression	0		4234188	1					
ANR	4236921	ExpressionStatement	"fi = r_flag_get ( core -> flags , arg )"	1120:3:29805:29839	4234188	5	True				
ANR	4236922	AssignmentExpression	"fi = r_flag_get ( core -> flags , arg )"		4234188	0		=			
ANR	4236923	Identifier	fi		4234188	0					
ANR	4236924	CallExpression	"r_flag_get ( core -> flags , arg )"		4234188	1					
ANR	4236925	Callee	r_flag_get		4234188	0					
ANR	4236926	Identifier	r_flag_get		4234188	0					
ANR	4236927	ArgumentList	core -> flags		4234188	1					
ANR	4236928	Argument	core -> flags		4234188	0					
ANR	4236929	PtrMemberAccess	core -> flags		4234188	0					
ANR	4236930	Identifier	core		4234188	0					
ANR	4236931	Identifier	flags		4234188	1					
ANR	4236932	Argument	arg		4234188	1					
ANR	4236933	Identifier	arg		4234188	0					
ANR	4236934	IfStatement	if ( fi )		4234188	6					
ANR	4236935	Condition	fi	1121:7:29848:29849	4234188	0	True				
ANR	4236936	Identifier	fi		4234188	0					
ANR	4236937	CompoundStatement		482:11:11695:11695	4234188	1					
ANR	4236938	ExpressionStatement	"ret = r_flag_color ( core -> flags , fi , color )"	1122:4:29858:29901	4234188	0	True				
ANR	4236939	AssignmentExpression	"ret = r_flag_color ( core -> flags , fi , color )"		4234188	0		=			
ANR	4236940	Identifier	ret		4234188	0					
ANR	4236941	CallExpression	"r_flag_color ( core -> flags , fi , color )"		4234188	1					
ANR	4236942	Callee	r_flag_color		4234188	0					
ANR	4236943	Identifier	r_flag_color		4234188	0					
ANR	4236944	ArgumentList	core -> flags		4234188	1					
ANR	4236945	Argument	core -> flags		4234188	0					
ANR	4236946	PtrMemberAccess	core -> flags		4234188	0					
ANR	4236947	Identifier	core		4234188	0					
ANR	4236948	Identifier	flags		4234188	1					
ANR	4236949	Argument	fi		4234188	1					
ANR	4236950	Identifier	fi		4234188	0					
ANR	4236951	Argument	color		4234188	2					
ANR	4236952	Identifier	color		4234188	0					
ANR	4236953	IfStatement	if ( ! color && ret )		4234188	1					
ANR	4236954	Condition	! color && ret	1123:8:29911:29923	4234188	0	True				
ANR	4236955	AndExpression	! color && ret		4234188	0		&&			
ANR	4236956	UnaryOperationExpression	! color		4234188	0					
ANR	4236957	UnaryOperator	!		4234188	0					
ANR	4236958	Identifier	color		4234188	1					
ANR	4236959	Identifier	ret		4234188	1					
ANR	4236960	ExpressionStatement	r_cons_println ( ret )	1124:5:29931:29951	4234188	1	True				
ANR	4236961	CallExpression	r_cons_println ( ret )		4234188	0					
ANR	4236962	Callee	r_cons_println		4234188	0					
ANR	4236963	Identifier	r_cons_println		4234188	0					
ANR	4236964	ArgumentList	ret		4234188	1					
ANR	4236965	Argument	ret		4234188	0					
ANR	4236966	Identifier	ret		4234188	0					
ANR	4236967	ElseStatement	else		4234188	0					
ANR	4236968	CompoundStatement		486:10:11806:11806	4234188	0					
ANR	4236969	ExpressionStatement	"eprintf ( ""Unknown flag '%s'\\n"" , arg )"	1126:4:29969:30005	4234188	0	True				
ANR	4236970	CallExpression	"eprintf ( ""Unknown flag '%s'\\n"" , arg )"		4234188	0					
ANR	4236971	Callee	eprintf		4234188	0					
ANR	4236972	Identifier	eprintf		4234188	0					
ANR	4236973	ArgumentList	"""Unknown flag '%s'\\n"""		4234188	1					
ANR	4236974	Argument	"""Unknown flag '%s'\\n"""		4234188	0					
ANR	4236975	PrimaryExpression	"""Unknown flag '%s'\\n"""		4234188	0					
ANR	4236976	Argument	arg		4234188	1					
ANR	4236977	Identifier	arg		4234188	0					
ANR	4236978	ExpressionStatement	free ( arg )	1128:3:30015:30025	4234188	7	True				
ANR	4236979	CallExpression	free ( arg )		4234188	0					
ANR	4236980	Callee	free		4234188	0					
ANR	4236981	Identifier	free		4234188	0					
ANR	4236982	ArgumentList	arg		4234188	1					
ANR	4236983	Argument	arg		4234188	0					
ANR	4236984	Identifier	arg		4234188	0					
ANR	4236985	BreakStatement	break ;	1130:2:30033:30038	4234188	58	True				
ANR	4236986	Label	case 'C' :	1131:1:30041:30049	4234188	59	True				
ANR	4236987	IfStatement	if ( input [ 1 ] == ' ' )		4234188	60					
ANR	4236988	Condition	input [ 1 ] == ' '	1132:6:30065:30079	4234188	0	True				
ANR	4236989	EqualityExpression	input [ 1 ] == ' '		4234188	0		==			
ANR	4236990	ArrayIndexing	input [ 1 ]		4234188	0					
ANR	4236991	Identifier	input		4234188	0					
ANR	4236992	PrimaryExpression	1		4234188	1					
ANR	4236993	PrimaryExpression	' '		4234188	1					
ANR	4236994	CompoundStatement		495:3:11950:11995	4234188	1					
ANR	4236995	IdentifierDeclStatement	RFlagItem * item ;	1133:3:30087:30102	4234188	0	True				
ANR	4236996	IdentifierDecl	* item		4234188	0					
ANR	4236997	IdentifierDeclType	RFlagItem *		4234188	0					
ANR	4236998	Identifier	item		4234188	1					
ANR	4236999	IdentifierDeclStatement	"char * q , * p = strdup ( input + 2 ) , * dec = NULL ;"	1134:3:30107:30152	4234188	1	True				
ANR	4237000	IdentifierDecl	* q		4234188	0					
ANR	4237001	IdentifierDeclType	char *		4234188	0					
ANR	4237002	Identifier	q		4234188	1					
ANR	4237003	IdentifierDecl	* p = strdup ( input + 2 )		4234188	1					
ANR	4237004	IdentifierDeclType	char *		4234188	0					
ANR	4237005	Identifier	p		4234188	1					
ANR	4237006	AssignmentExpression	* p = strdup ( input + 2 )		4234188	2		=			
ANR	4237007	Identifier	p		4234188	0					
ANR	4237008	CallExpression	strdup ( input + 2 )		4234188	1					
ANR	4237009	Callee	strdup		4234188	0					
ANR	4237010	Identifier	strdup		4234188	0					
ANR	4237011	ArgumentList	input + 2		4234188	1					
ANR	4237012	Argument	input + 2		4234188	0					
ANR	4237013	AdditiveExpression	input + 2		4234188	0		+			
ANR	4237014	Identifier	input		4234188	0					
ANR	4237015	PrimaryExpression	2		4234188	1					
ANR	4237016	IdentifierDecl	* dec = NULL		4234188	2					
ANR	4237017	IdentifierDeclType	char *		4234188	0					
ANR	4237018	Identifier	dec		4234188	1					
ANR	4237019	AssignmentExpression	* dec = NULL		4234188	2		=			
ANR	4237020	Identifier	NULL		4234188	0					
ANR	4237021	Identifier	NULL		4234188	1					
ANR	4237022	ExpressionStatement	"q = strchr ( p , ' ' )"	1135:3:30157:30176	4234188	2	True				
ANR	4237023	AssignmentExpression	"q = strchr ( p , ' ' )"		4234188	0		=			
ANR	4237024	Identifier	q		4234188	0					
ANR	4237025	CallExpression	"strchr ( p , ' ' )"		4234188	1					
ANR	4237026	Callee	strchr		4234188	0					
ANR	4237027	Identifier	strchr		4234188	0					
ANR	4237028	ArgumentList	p		4234188	1					
ANR	4237029	Argument	p		4234188	0					
ANR	4237030	Identifier	p		4234188	0					
ANR	4237031	Argument	' '		4234188	1					
ANR	4237032	PrimaryExpression	' '		4234188	0					
ANR	4237033	IfStatement	if ( q )		4234188	3					
ANR	4237034	Condition	q	1136:7:30185:30185	4234188	0	True				
ANR	4237035	Identifier	q		4234188	0					
ANR	4237036	CompoundStatement		497:10:12031:12031	4234188	1					
ANR	4237037	ExpressionStatement	* q = 0	1137:4:30194:30200	4234188	0	True				
ANR	4237038	AssignmentExpression	* q = 0		4234188	0		=			
ANR	4237039	UnaryOperationExpression	* q		4234188	0					
ANR	4237040	UnaryOperator	*		4234188	0					
ANR	4237041	Identifier	q		4234188	1					
ANR	4237042	PrimaryExpression	0		4234188	1					
ANR	4237043	ExpressionStatement	"item = r_flag_get ( core -> flags , p )"	1138:4:30206:30240	4234188	1	True				
ANR	4237044	AssignmentExpression	"item = r_flag_get ( core -> flags , p )"		4234188	0		=			
ANR	4237045	Identifier	item		4234188	0					
ANR	4237046	CallExpression	"r_flag_get ( core -> flags , p )"		4234188	1					
ANR	4237047	Callee	r_flag_get		4234188	0					
ANR	4237048	Identifier	r_flag_get		4234188	0					
ANR	4237049	ArgumentList	core -> flags		4234188	1					
ANR	4237050	Argument	core -> flags		4234188	0					
ANR	4237051	PtrMemberAccess	core -> flags		4234188	0					
ANR	4237052	Identifier	core		4234188	0					
ANR	4237053	Identifier	flags		4234188	1					
ANR	4237054	Argument	p		4234188	1					
ANR	4237055	Identifier	p		4234188	0					
ANR	4237056	IfStatement	if ( item )		4234188	2					
ANR	4237057	Condition	item	1139:8:30250:30253	4234188	0	True				
ANR	4237058	Identifier	item		4234188	0					
ANR	4237059	CompoundStatement		500:14:12099:12099	4234188	1					
ANR	4237060	IfStatement	"if ( ! strncmp ( q + 1 , ""base64:"" , 7 ) )"		4234188	0					
ANR	4237061	Condition	"! strncmp ( q + 1 , ""base64:"" , 7 )"	1140:9:30267:30296	4234188	0	True				
ANR	4237062	UnaryOperationExpression	"! strncmp ( q + 1 , ""base64:"" , 7 )"		4234188	0					
ANR	4237063	UnaryOperator	!		4234188	0					
ANR	4237064	CallExpression	"strncmp ( q + 1 , ""base64:"" , 7 )"		4234188	1					
ANR	4237065	Callee	strncmp		4234188	0					
ANR	4237066	Identifier	strncmp		4234188	0					
ANR	4237067	ArgumentList	q + 1		4234188	1					
ANR	4237068	Argument	q + 1		4234188	0					
ANR	4237069	AdditiveExpression	q + 1		4234188	0		+			
ANR	4237070	Identifier	q		4234188	0					
ANR	4237071	PrimaryExpression	1		4234188	1					
ANR	4237072	Argument	"""base64:"""		4234188	1					
ANR	4237073	PrimaryExpression	"""base64:"""		4234188	0					
ANR	4237074	Argument	7		4234188	2					
ANR	4237075	PrimaryExpression	7		4234188	0					
ANR	4237076	CompoundStatement		501:41:12142:12142	4234188	1					
ANR	4237077	ExpressionStatement	"dec = ( char * ) r_base64_decode_dyn ( q + 8 , - 1 )"	1141:6:30307:30353	4234188	0	True				
ANR	4237078	AssignmentExpression	"dec = ( char * ) r_base64_decode_dyn ( q + 8 , - 1 )"		4234188	0		=			
ANR	4237079	Identifier	dec		4234188	0					
ANR	4237080	CastExpression	"( char * ) r_base64_decode_dyn ( q + 8 , - 1 )"		4234188	1					
ANR	4237081	CastTarget	char *		4234188	0					
ANR	4237082	CallExpression	"r_base64_decode_dyn ( q + 8 , - 1 )"		4234188	1					
ANR	4237083	Callee	r_base64_decode_dyn		4234188	0					
ANR	4237084	Identifier	r_base64_decode_dyn		4234188	0					
ANR	4237085	ArgumentList	q + 8		4234188	1					
ANR	4237086	Argument	q + 8		4234188	0					
ANR	4237087	AdditiveExpression	q + 8		4234188	0		+			
ANR	4237088	Identifier	q		4234188	0					
ANR	4237089	PrimaryExpression	8		4234188	1					
ANR	4237090	Argument	- 1		4234188	1					
ANR	4237091	UnaryOperationExpression	- 1		4234188	0					
ANR	4237092	UnaryOperator	-		4234188	0					
ANR	4237093	PrimaryExpression	1		4234188	1					
ANR	4237094	IfStatement	if ( dec )		4234188	1					
ANR	4237095	Condition	dec	1142:10:30365:30367	4234188	0	True				
ANR	4237096	Identifier	dec		4234188	0					
ANR	4237097	CompoundStatement		503:15:12213:12213	4234188	1					
ANR	4237098	ExpressionStatement	"r_flag_item_set_comment ( item , dec )"	1143:7:30379:30414	4234188	0	True				
ANR	4237099	CallExpression	"r_flag_item_set_comment ( item , dec )"		4234188	0					
ANR	4237100	Callee	r_flag_item_set_comment		4234188	0					
ANR	4237101	Identifier	r_flag_item_set_comment		4234188	0					
ANR	4237102	ArgumentList	item		4234188	1					
ANR	4237103	Argument	item		4234188	0					
ANR	4237104	Identifier	item		4234188	0					
ANR	4237105	Argument	dec		4234188	1					
ANR	4237106	Identifier	dec		4234188	0					
ANR	4237107	ExpressionStatement	free ( dec )	1144:7:30423:30433	4234188	1	True				
ANR	4237108	CallExpression	free ( dec )		4234188	0					
ANR	4237109	Callee	free		4234188	0					
ANR	4237110	Identifier	free		4234188	0					
ANR	4237111	ArgumentList	dec		4234188	1					
ANR	4237112	Argument	dec		4234188	0					
ANR	4237113	Identifier	dec		4234188	0					
ANR	4237114	ElseStatement	else		4234188	0					
ANR	4237115	CompoundStatement		506:13:12291:12291	4234188	0					
ANR	4237116	ExpressionStatement	"eprintf ( ""Failed to decode base64-encoded string\\n"" )"	1146:7:30457:30509	4234188	0	True				
ANR	4237117	CallExpression	"eprintf ( ""Failed to decode base64-encoded string\\n"" )"		4234188	0					
ANR	4237118	Callee	eprintf		4234188	0					
ANR	4237119	Identifier	eprintf		4234188	0					
ANR	4237120	ArgumentList	"""Failed to decode base64-encoded string\\n"""		4234188	1					
ANR	4237121	Argument	"""Failed to decode base64-encoded string\\n"""		4234188	0					
ANR	4237122	PrimaryExpression	"""Failed to decode base64-encoded string\\n"""		4234188	0					
ANR	4237123	ElseStatement	else		4234188	0					
ANR	4237124	CompoundStatement		509:12:12374:12374	4234188	0					
ANR	4237125	ExpressionStatement	"r_flag_item_set_comment ( item , q + 1 )"	1149:6:30539:30576	4234188	0	True				
ANR	4237126	CallExpression	"r_flag_item_set_comment ( item , q + 1 )"		4234188	0					
ANR	4237127	Callee	r_flag_item_set_comment		4234188	0					
ANR	4237128	Identifier	r_flag_item_set_comment		4234188	0					
ANR	4237129	ArgumentList	item		4234188	1					
ANR	4237130	Argument	item		4234188	0					
ANR	4237131	Identifier	item		4234188	0					
ANR	4237132	Argument	q + 1		4234188	1					
ANR	4237133	AdditiveExpression	q + 1		4234188	0		+			
ANR	4237134	Identifier	q		4234188	0					
ANR	4237135	PrimaryExpression	1		4234188	1					
ANR	4237136	ElseStatement	else		4234188	0					
ANR	4237137	CompoundStatement		512:11:12439:12439	4234188	0					
ANR	4237138	ExpressionStatement	"eprintf ( ""Cannot find flag with name '%s'\\n"" , p )"	1152:5:30603:30651	4234188	0	True				
ANR	4237139	CallExpression	"eprintf ( ""Cannot find flag with name '%s'\\n"" , p )"		4234188	0					
ANR	4237140	Callee	eprintf		4234188	0					
ANR	4237141	Identifier	eprintf		4234188	0					
ANR	4237142	ArgumentList	"""Cannot find flag with name '%s'\\n"""		4234188	1					
ANR	4237143	Argument	"""Cannot find flag with name '%s'\\n"""		4234188	0					
ANR	4237144	PrimaryExpression	"""Cannot find flag with name '%s'\\n"""		4234188	0					
ANR	4237145	Argument	p		4234188	1					
ANR	4237146	Identifier	p		4234188	0					
ANR	4237147	ElseStatement	else		4234188	0					
ANR	4237148	CompoundStatement		515:10:12512:12512	4234188	0					
ANR	4237149	ExpressionStatement	"item = r_flag_get_i ( core -> flags , r_num_math ( core -> num , p ) )"	1155:4:30675:30735	4234188	0	True				
ANR	4237150	AssignmentExpression	"item = r_flag_get_i ( core -> flags , r_num_math ( core -> num , p ) )"		4234188	0		=			
ANR	4237151	Identifier	item		4234188	0					
ANR	4237152	CallExpression	"r_flag_get_i ( core -> flags , r_num_math ( core -> num , p ) )"		4234188	1					
ANR	4237153	Callee	r_flag_get_i		4234188	0					
ANR	4237154	Identifier	r_flag_get_i		4234188	0					
ANR	4237155	ArgumentList	core -> flags		4234188	1					
ANR	4237156	Argument	core -> flags		4234188	0					
ANR	4237157	PtrMemberAccess	core -> flags		4234188	0					
ANR	4237158	Identifier	core		4234188	0					
ANR	4237159	Identifier	flags		4234188	1					
ANR	4237160	Argument	"r_num_math ( core -> num , p )"		4234188	1					
ANR	4237161	CallExpression	"r_num_math ( core -> num , p )"		4234188	0					
ANR	4237162	Callee	r_num_math		4234188	0					
ANR	4237163	Identifier	r_num_math		4234188	0					
ANR	4237164	ArgumentList	core -> num		4234188	1					
ANR	4237165	Argument	core -> num		4234188	0					
ANR	4237166	PtrMemberAccess	core -> num		4234188	0					
ANR	4237167	Identifier	core		4234188	0					
ANR	4237168	Identifier	num		4234188	1					
ANR	4237169	Argument	p		4234188	1					
ANR	4237170	Identifier	p		4234188	0					
ANR	4237171	IfStatement	if ( item && item -> comment )		4234188	1					
ANR	4237172	Condition	item && item -> comment	1156:8:30745:30765	4234188	0	True				
ANR	4237173	AndExpression	item && item -> comment		4234188	0		&&			
ANR	4237174	Identifier	item		4234188	0					
ANR	4237175	PtrMemberAccess	item -> comment		4234188	1					
ANR	4237176	Identifier	item		4234188	0					
ANR	4237177	Identifier	comment		4234188	1					
ANR	4237178	CompoundStatement		517:31:12611:12611	4234188	1					
ANR	4237179	ExpressionStatement	r_cons_println ( item -> comment )	1157:5:30775:30805	4234188	0	True				
ANR	4237180	CallExpression	r_cons_println ( item -> comment )		4234188	0					
ANR	4237181	Callee	r_cons_println		4234188	0					
ANR	4237182	Identifier	r_cons_println		4234188	0					
ANR	4237183	ArgumentList	item -> comment		4234188	1					
ANR	4237184	Argument	item -> comment		4234188	0					
ANR	4237185	PtrMemberAccess	item -> comment		4234188	0					
ANR	4237186	Identifier	item		4234188	0					
ANR	4237187	Identifier	comment		4234188	1					
ANR	4237188	ElseStatement	else		4234188	0					
ANR	4237189	CompoundStatement		519:11:12661:12661	4234188	0					
ANR	4237190	ExpressionStatement	"eprintf ( ""Cannot find item\\n"" )"	1159:5:30825:30855	4234188	0	True				
ANR	4237191	CallExpression	"eprintf ( ""Cannot find item\\n"" )"		4234188	0					
ANR	4237192	Callee	eprintf		4234188	0					
ANR	4237193	Identifier	eprintf		4234188	0					
ANR	4237194	ArgumentList	"""Cannot find item\\n"""		4234188	1					
ANR	4237195	Argument	"""Cannot find item\\n"""		4234188	0					
ANR	4237196	PrimaryExpression	"""Cannot find item\\n"""		4234188	0					
ANR	4237197	ExpressionStatement	free ( p )	1162:3:30871:30879	4234188	4	True				
ANR	4237198	CallExpression	free ( p )		4234188	0					
ANR	4237199	Callee	free		4234188	0					
ANR	4237200	Identifier	free		4234188	0					
ANR	4237201	ArgumentList	p		4234188	1					
ANR	4237202	Argument	p		4234188	0					
ANR	4237203	Identifier	p		4234188	0					
ANR	4237204	ElseStatement	else		4234188	0					
ANR	4237205	ExpressionStatement	"eprintf ( ""Usage: fC [name] [comment]\\n"" )"	1163:9:30890:30930	4234188	0	True				
ANR	4237206	CallExpression	"eprintf ( ""Usage: fC [name] [comment]\\n"" )"		4234188	0					
ANR	4237207	Callee	eprintf		4234188	0					
ANR	4237208	Identifier	eprintf		4234188	0					
ANR	4237209	ArgumentList	"""Usage: fC [name] [comment]\\n"""		4234188	1					
ANR	4237210	Argument	"""Usage: fC [name] [comment]\\n"""		4234188	0					
ANR	4237211	PrimaryExpression	"""Usage: fC [name] [comment]\\n"""		4234188	0					
ANR	4237212	BreakStatement	break ;	1164:2:30934:30939	4234188	61	True				
ANR	4237213	Label	case 'o' :	1165:1:30942:30950	4234188	62	True				
ANR	4237214	ExpressionStatement	r_core_fortune_print_random ( core )	1166:2:30962:30996	4234188	63	True				
ANR	4237215	CallExpression	r_core_fortune_print_random ( core )		4234188	0					
ANR	4237216	Callee	r_core_fortune_print_random		4234188	0					
ANR	4237217	Identifier	r_core_fortune_print_random		4234188	0					
ANR	4237218	ArgumentList	core		4234188	1					
ANR	4237219	Argument	core		4234188	0					
ANR	4237220	Identifier	core		4234188	0					
ANR	4237221	BreakStatement	break ;	1167:2:31000:31005	4234188	64	True				
ANR	4237222	Label	case 'O' :	1168:1:31008:31016	4234188	65	True				
ANR	4237223	ExpressionStatement	"flag_ordinals ( core , input + 1 )"	1169:2:31028:31059	4234188	66	True				
ANR	4237224	CallExpression	"flag_ordinals ( core , input + 1 )"		4234188	0					
ANR	4237225	Callee	flag_ordinals		4234188	0					
ANR	4237226	Identifier	flag_ordinals		4234188	0					
ANR	4237227	ArgumentList	core		4234188	1					
ANR	4237228	Argument	core		4234188	0					
ANR	4237229	Identifier	core		4234188	0					
ANR	4237230	Argument	input + 1		4234188	1					
ANR	4237231	AdditiveExpression	input + 1		4234188	0		+			
ANR	4237232	Identifier	input		4234188	0					
ANR	4237233	PrimaryExpression	1		4234188	1					
ANR	4237234	BreakStatement	break ;	1170:2:31063:31068	4234188	67	True				
ANR	4237235	Label	case 'r' :	1171:1:31071:31079	4234188	68	True				
ANR	4237236	IfStatement	if ( input [ 1 ] == ' ' && input [ 2 ] )		4234188	69					
ANR	4237237	Condition	input [ 1 ] == ' ' && input [ 2 ]	1172:6:31087:31113	4234188	0	True				
ANR	4237238	AndExpression	input [ 1 ] == ' ' && input [ 2 ]		4234188	0		&&			
ANR	4237239	EqualityExpression	input [ 1 ] == ' '		4234188	0		==			
ANR	4237240	ArrayIndexing	input [ 1 ]		4234188	0					
ANR	4237241	Identifier	input		4234188	0					
ANR	4237242	PrimaryExpression	1		4234188	1					
ANR	4237243	PrimaryExpression	' '		4234188	1					
ANR	4237244	ArrayIndexing	input [ 2 ]		4234188	1					
ANR	4237245	Identifier	input		4234188	0					
ANR	4237246	PrimaryExpression	2		4234188	1					
ANR	4237247	CompoundStatement		535:3:12984:13003	4234188	1					
ANR	4237248	IdentifierDeclStatement	RFlagItem * item ;	1173:3:31121:31136	4234188	0	True				
ANR	4237249	IdentifierDecl	* item		4234188	0					
ANR	4237250	IdentifierDeclType	RFlagItem *		4234188	0					
ANR	4237251	Identifier	item		4234188	1					
ANR	4237252	IdentifierDeclStatement	char * old = str + 1 ;	1174:3:31141:31160	4234188	1	True				
ANR	4237253	IdentifierDecl	* old = str + 1		4234188	0					
ANR	4237254	IdentifierDeclType	char *		4234188	0					
ANR	4237255	Identifier	old		4234188	1					
ANR	4237256	AssignmentExpression	* old = str + 1		4234188	2		=			
ANR	4237257	Identifier	old		4234188	0					
ANR	4237258	AdditiveExpression	str + 1		4234188	1		+			
ANR	4237259	Identifier	str		4234188	0					
ANR	4237260	PrimaryExpression	1		4234188	1					
ANR	4237261	Statement	char	1175:3:31165:31168	4234188	2	True				
ANR	4237262	Statement	*	1175:8:31170:31170	4234188	3	True				
ANR	4237263	Statement	new	1175:9:31171:31173	4234188	4	True				
ANR	4237264	Statement	=	1175:13:31175:31175	4234188	5	True				
ANR	4237265	ExpressionStatement	"strchr ( old , ' ' )"	1175:15:31177:31194	4234188	6	True				
ANR	4237266	CallExpression	"strchr ( old , ' ' )"		4234188	0					
ANR	4237267	Callee	strchr		4234188	0					
ANR	4237268	Identifier	strchr		4234188	0					
ANR	4237269	ArgumentList	old		4234188	1					
ANR	4237270	Argument	old		4234188	0					
ANR	4237271	Identifier	old		4234188	0					
ANR	4237272	Argument	' '		4234188	1					
ANR	4237273	PrimaryExpression	' '		4234188	0					
ANR	4237274	Statement	if	1176:3:31199:31200	4234188	7	True				
ANR	4237275	Statement	(	1176:6:31202:31202	4234188	8	True				
ANR	4237276	Statement	new	1176:7:31203:31205	4234188	9	True				
ANR	4237277	Statement	)	1176:10:31206:31206	4234188	10	True				
ANR	4237278	CompoundStatement		537:12:13051:13051	4234188	11					
ANR	4237279	Statement	*	1177:4:31214:31214	4234188	0	True				
ANR	4237280	Statement	new	1177:5:31215:31217	4234188	1	True				
ANR	4237281	Statement	=	1177:9:31219:31219	4234188	2	True				
ANR	4237282	ExpressionStatement	0	1177:11:31221:31222	4234188	3	True				
ANR	4237283	PrimaryExpression	0		4234188	0					
ANR	4237284	Statement	new	1178:4:31228:31230	4234188	4	True				
ANR	4237285	Statement	++	1178:7:31231:31232	4234188	5	True				
ANR	4237286	ExpressionStatement		1178:9:31233:31233	4234188	6	True				
ANR	4237287	ExpressionStatement	"item = r_flag_get ( core -> flags , old )"	1179:4:31239:31275	4234188	7	True				
ANR	4237288	AssignmentExpression	"item = r_flag_get ( core -> flags , old )"		4234188	0		=			
ANR	4237289	Identifier	item		4234188	0					
ANR	4237290	CallExpression	"r_flag_get ( core -> flags , old )"		4234188	1					
ANR	4237291	Callee	r_flag_get		4234188	0					
ANR	4237292	Identifier	r_flag_get		4234188	0					
ANR	4237293	ArgumentList	core -> flags		4234188	1					
ANR	4237294	Argument	core -> flags		4234188	0					
ANR	4237295	PtrMemberAccess	core -> flags		4234188	0					
ANR	4237296	Identifier	core		4234188	0					
ANR	4237297	Identifier	flags		4234188	1					
ANR	4237298	Argument	old		4234188	1					
ANR	4237299	Identifier	old		4234188	0					
ANR	4237300	IfStatement	"if ( ! item && ! strncmp ( old , ""fcn."" , 4 ) )"		4234188	8					
ANR	4237301	Condition	"! item && ! strncmp ( old , ""fcn."" , 4 )"	1180:8:31285:31318	4234188	0	True				
ANR	4237302	AndExpression	"! item && ! strncmp ( old , ""fcn."" , 4 )"		4234188	0		&&			
ANR	4237303	UnaryOperationExpression	! item		4234188	0					
ANR	4237304	UnaryOperator	!		4234188	0					
ANR	4237305	Identifier	item		4234188	1					
ANR	4237306	UnaryOperationExpression	"! strncmp ( old , ""fcn."" , 4 )"		4234188	1					
ANR	4237307	UnaryOperator	!		4234188	0					
ANR	4237308	CallExpression	"strncmp ( old , ""fcn."" , 4 )"		4234188	1					
ANR	4237309	Callee	strncmp		4234188	0					
ANR	4237310	Identifier	strncmp		4234188	0					
ANR	4237311	ArgumentList	old		4234188	1					
ANR	4237312	Argument	old		4234188	0					
ANR	4237313	Identifier	old		4234188	0					
ANR	4237314	Argument	"""fcn."""		4234188	1					
ANR	4237315	PrimaryExpression	"""fcn."""		4234188	0					
ANR	4237316	Argument	4		4234188	2					
ANR	4237317	PrimaryExpression	4		4234188	0					
ANR	4237318	CompoundStatement		541:44:13164:13164	4234188	1					
ANR	4237319	ExpressionStatement	"item = r_flag_get ( core -> flags , old + 4 )"	1181:5:31328:31366	4234188	0	True				
ANR	4237320	AssignmentExpression	"item = r_flag_get ( core -> flags , old + 4 )"		4234188	0		=			
ANR	4237321	Identifier	item		4234188	0					
ANR	4237322	CallExpression	"r_flag_get ( core -> flags , old + 4 )"		4234188	1					
ANR	4237323	Callee	r_flag_get		4234188	0					
ANR	4237324	Identifier	r_flag_get		4234188	0					
ANR	4237325	ArgumentList	core -> flags		4234188	1					
ANR	4237326	Argument	core -> flags		4234188	0					
ANR	4237327	PtrMemberAccess	core -> flags		4234188	0					
ANR	4237328	Identifier	core		4234188	0					
ANR	4237329	Identifier	flags		4234188	1					
ANR	4237330	Argument	old + 4		4234188	1					
ANR	4237331	AdditiveExpression	old + 4		4234188	0		+			
ANR	4237332	Identifier	old		4234188	0					
ANR	4237333	PrimaryExpression	4		4234188	1					
ANR	4237334	IfStatement	if ( item )		4234188	12					
ANR	4237335	Condition	item	1187:7:31466:31469	4234188	0	True				
ANR	4237336	Identifier	item		4234188	0					
ANR	4237337	CompoundStatement		548:13:13315:13315	4234188	1					
ANR	4237338	Statement	if	1188:4:31478:31479	4234188	0	True				
ANR	4237339	Statement	(	1188:7:31481:31481	4234188	1	True				
ANR	4237340	Statement	!	1188:8:31482:31482	4234188	2	True				
ANR	4237341	Statement	r_flag_rename	1188:9:31483:31495	4234188	3	True				
ANR	4237342	Statement	(	1188:23:31497:31497	4234188	4	True				
ANR	4237343	Statement	core	1188:24:31498:31501	4234188	5	True				
ANR	4237344	Statement	->	1188:28:31502:31503	4234188	6	True				
ANR	4237345	Statement	flags	1188:30:31504:31508	4234188	7	True				
ANR	4237346	Statement	","	1188:35:31509:31509	4234188	8	True				
ANR	4237347	Statement	item	1188:37:31511:31514	4234188	9	True				
ANR	4237348	Statement	","	1188:41:31515:31515	4234188	10	True				
ANR	4237349	Statement	new	1188:43:31517:31519	4234188	11	True				
ANR	4237350	Statement	)	1188:46:31520:31520	4234188	12	True				
ANR	4237351	Statement	)	1188:47:31521:31521	4234188	13	True				
ANR	4237352	CompoundStatement		549:49:13366:13366	4234188	14					
ANR	4237353	ExpressionStatement	"eprintf ( ""Invalid name\\n"" )"	1189:5:31530:31556	4234188	0	True				
ANR	4237354	CallExpression	"eprintf ( ""Invalid name\\n"" )"		4234188	0					
ANR	4237355	Callee	eprintf		4234188	0					
ANR	4237356	Identifier	eprintf		4234188	0					
ANR	4237357	ArgumentList	"""Invalid name\\n"""		4234188	1					
ANR	4237358	Argument	"""Invalid name\\n"""		4234188	0					
ANR	4237359	PrimaryExpression	"""Invalid name\\n"""		4234188	0					
ANR	4237360	ElseStatement	else		4234188	0					
ANR	4237361	CompoundStatement		552:10:13417:13417	4234188	0					
ANR	4237362	ExpressionStatement	"eprintf ( ""Usage: fr [[old]] [new]\\n"" )"	1192:4:31580:31617	4234188	0	True				
ANR	4237363	CallExpression	"eprintf ( ""Usage: fr [[old]] [new]\\n"" )"		4234188	0					
ANR	4237364	Callee	eprintf		4234188	0					
ANR	4237365	Identifier	eprintf		4234188	0					
ANR	4237366	ArgumentList	"""Usage: fr [[old]] [new]\\n"""		4234188	1					
ANR	4237367	Argument	"""Usage: fr [[old]] [new]\\n"""		4234188	0					
ANR	4237368	PrimaryExpression	"""Usage: fr [[old]] [new]\\n"""		4234188	0					
ANR	4237369	ElseStatement	else		4234188	0					
ANR	4237370	CompoundStatement		544:10:13227:13227	4234188	0					
ANR	4237371	Statement	new	1184:4:31390:31392	4234188	0	True				
ANR	4237372	Statement	=	1184:8:31394:31394	4234188	1	True				
ANR	4237373	ExpressionStatement	old	1184:10:31396:31399	4234188	2	True				
ANR	4237374	Identifier	old		4234188	0					
ANR	4237375	ExpressionStatement	"item = r_flag_get_i ( core -> flags , core -> offset )"	1185:4:31405:31452	4234188	3	True				
ANR	4237376	AssignmentExpression	"item = r_flag_get_i ( core -> flags , core -> offset )"		4234188	0		=			
ANR	4237377	Identifier	item		4234188	0					
ANR	4237378	CallExpression	"r_flag_get_i ( core -> flags , core -> offset )"		4234188	1					
ANR	4237379	Callee	r_flag_get_i		4234188	0					
ANR	4237380	Identifier	r_flag_get_i		4234188	0					
ANR	4237381	ArgumentList	core -> flags		4234188	1					
ANR	4237382	Argument	core -> flags		4234188	0					
ANR	4237383	PtrMemberAccess	core -> flags		4234188	0					
ANR	4237384	Identifier	core		4234188	0					
ANR	4237385	Identifier	flags		4234188	1					
ANR	4237386	Argument	core -> offset		4234188	1					
ANR	4237387	PtrMemberAccess	core -> offset		4234188	0					
ANR	4237388	Identifier	core		4234188	0					
ANR	4237389	Identifier	offset		4234188	1					
ANR	4237390	BreakStatement	break ;	1195:2:31630:31635	4234188	70	True				
ANR	4237391	Label	case 'N' :	1196:1:31638:31646	4234188	71	True				
ANR	4237392	IfStatement	if ( ! input [ 1 ] )		4234188	72					
ANR	4237393	Condition	! input [ 1 ]	1197:6:31654:31662	4234188	0	True				
ANR	4237394	UnaryOperationExpression	! input [ 1 ]		4234188	0					
ANR	4237395	UnaryOperator	!		4234188	0					
ANR	4237396	ArrayIndexing	input [ 1 ]		4234188	1					
ANR	4237397	Identifier	input		4234188	0					
ANR	4237398	PrimaryExpression	1		4234188	1					
ANR	4237399	CompoundStatement		559:3:13513:13571	4234188	1					
ANR	4237400	IdentifierDeclStatement	"RFlagItem * item = r_flag_get_i ( core -> flags , core -> offset ) ;"	1198:3:31670:31728	4234188	0	True				
ANR	4237401	IdentifierDecl	"* item = r_flag_get_i ( core -> flags , core -> offset )"		4234188	0					
ANR	4237402	IdentifierDeclType	RFlagItem *		4234188	0					
ANR	4237403	Identifier	item		4234188	1					
ANR	4237404	AssignmentExpression	"* item = r_flag_get_i ( core -> flags , core -> offset )"		4234188	2		=			
ANR	4237405	Identifier	item		4234188	0					
ANR	4237406	CallExpression	"r_flag_get_i ( core -> flags , core -> offset )"		4234188	1					
ANR	4237407	Callee	r_flag_get_i		4234188	0					
ANR	4237408	Identifier	r_flag_get_i		4234188	0					
ANR	4237409	ArgumentList	core -> flags		4234188	1					
ANR	4237410	Argument	core -> flags		4234188	0					
ANR	4237411	PtrMemberAccess	core -> flags		4234188	0					
ANR	4237412	Identifier	core		4234188	0					
ANR	4237413	Identifier	flags		4234188	1					
ANR	4237414	Argument	core -> offset		4234188	1					
ANR	4237415	PtrMemberAccess	core -> offset		4234188	0					
ANR	4237416	Identifier	core		4234188	0					
ANR	4237417	Identifier	offset		4234188	1					
ANR	4237418	IfStatement	if ( item )		4234188	1					
ANR	4237419	Condition	item	1199:7:31737:31740	4234188	0	True				
ANR	4237420	Identifier	item		4234188	0					
ANR	4237421	CompoundStatement		560:13:13586:13586	4234188	1					
ANR	4237422	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , item -> realname )"	1200:4:31749:31787	4234188	0	True				
ANR	4237423	CallExpression	"r_cons_printf ( ""%s\\n"" , item -> realname )"		4234188	0					
ANR	4237424	Callee	r_cons_printf		4234188	0					
ANR	4237425	Identifier	r_cons_printf		4234188	0					
ANR	4237426	ArgumentList	"""%s\\n"""		4234188	1					
ANR	4237427	Argument	"""%s\\n"""		4234188	0					
ANR	4237428	PrimaryExpression	"""%s\\n"""		4234188	0					
ANR	4237429	Argument	item -> realname		4234188	1					
ANR	4237430	PtrMemberAccess	item -> realname		4234188	0					
ANR	4237431	Identifier	item		4234188	0					
ANR	4237432	Identifier	realname		4234188	1					
ANR	4237433	BreakStatement	break ;	1202:3:31797:31802	4234188	2	True				
ANR	4237434	ElseStatement	else		4234188	0					
ANR	4237435	IfStatement	if ( input [ 1 ] == ' ' && input [ 2 ] )		4234188	0					
ANR	4237436	Condition	input [ 1 ] == ' ' && input [ 2 ]	1203:13:31817:31843	4234188	0	True				
ANR	4237437	AndExpression	input [ 1 ] == ' ' && input [ 2 ]		4234188	0		&&			
ANR	4237438	EqualityExpression	input [ 1 ] == ' '		4234188	0		==			
ANR	4237439	ArrayIndexing	input [ 1 ]		4234188	0					
ANR	4237440	Identifier	input		4234188	0					
ANR	4237441	PrimaryExpression	1		4234188	1					
ANR	4237442	PrimaryExpression	' '		4234188	1					
ANR	4237443	ArrayIndexing	input [ 2 ]		4234188	1					
ANR	4237444	Identifier	input		4234188	0					
ANR	4237445	PrimaryExpression	2		4234188	1					
ANR	4237446	CompoundStatement		567:3:13739:13774	4234188	1					
ANR	4237447	IdentifierDeclStatement	RFlagItem * item ;	1204:3:31851:31866	4234188	0	True				
ANR	4237448	IdentifierDecl	* item		4234188	0					
ANR	4237449	IdentifierDeclType	RFlagItem *		4234188	0					
ANR	4237450	Identifier	item		4234188	1					
ANR	4237451	IdentifierDeclStatement	char * name = str + 1 ;	1205:3:31871:31891	4234188	1	True				
ANR	4237452	IdentifierDecl	* name = str + 1		4234188	0					
ANR	4237453	IdentifierDeclType	char *		4234188	0					
ANR	4237454	Identifier	name		4234188	1					
ANR	4237455	AssignmentExpression	* name = str + 1		4234188	2		=			
ANR	4237456	Identifier	name		4234188	0					
ANR	4237457	AdditiveExpression	str + 1		4234188	1		+			
ANR	4237458	Identifier	str		4234188	0					
ANR	4237459	PrimaryExpression	1		4234188	1					
ANR	4237460	IdentifierDeclStatement	"char * realname = strchr ( name , ' ' ) ;"	1206:3:31896:31931	4234188	2	True				
ANR	4237461	IdentifierDecl	"* realname = strchr ( name , ' ' )"		4234188	0					
ANR	4237462	IdentifierDeclType	char *		4234188	0					
ANR	4237463	Identifier	realname		4234188	1					
ANR	4237464	AssignmentExpression	"* realname = strchr ( name , ' ' )"		4234188	2		=			
ANR	4237465	Identifier	realname		4234188	0					
ANR	4237466	CallExpression	"strchr ( name , ' ' )"		4234188	1					
ANR	4237467	Callee	strchr		4234188	0					
ANR	4237468	Identifier	strchr		4234188	0					
ANR	4237469	ArgumentList	name		4234188	1					
ANR	4237470	Argument	name		4234188	0					
ANR	4237471	Identifier	name		4234188	0					
ANR	4237472	Argument	' '		4234188	1					
ANR	4237473	PrimaryExpression	' '		4234188	0					
ANR	4237474	IfStatement	if ( realname )		4234188	3					
ANR	4237475	Condition	realname	1207:7:31940:31947	4234188	0	True				
ANR	4237476	Identifier	realname		4234188	0					
ANR	4237477	CompoundStatement		568:17:13793:13793	4234188	1					
ANR	4237478	ExpressionStatement	* realname = 0	1208:4:31956:31969	4234188	0	True				
ANR	4237479	AssignmentExpression	* realname = 0		4234188	0		=			
ANR	4237480	UnaryOperationExpression	* realname		4234188	0					
ANR	4237481	UnaryOperator	*		4234188	0					
ANR	4237482	Identifier	realname		4234188	1					
ANR	4237483	PrimaryExpression	0		4234188	1					
ANR	4237484	ExpressionStatement	realname ++	1209:4:31975:31985	4234188	1	True				
ANR	4237485	PostIncDecOperationExpression	realname ++		4234188	0					
ANR	4237486	Identifier	realname		4234188	0					
ANR	4237487	IncDec	++		4234188	1					
ANR	4237488	ExpressionStatement	"item = r_flag_get ( core -> flags , name )"	1210:4:31991:32028	4234188	2	True				
ANR	4237489	AssignmentExpression	"item = r_flag_get ( core -> flags , name )"		4234188	0		=			
ANR	4237490	Identifier	item		4234188	0					
ANR	4237491	CallExpression	"r_flag_get ( core -> flags , name )"		4234188	1					
ANR	4237492	Callee	r_flag_get		4234188	0					
ANR	4237493	Identifier	r_flag_get		4234188	0					
ANR	4237494	ArgumentList	core -> flags		4234188	1					
ANR	4237495	Argument	core -> flags		4234188	0					
ANR	4237496	PtrMemberAccess	core -> flags		4234188	0					
ANR	4237497	Identifier	core		4234188	0					
ANR	4237498	Identifier	flags		4234188	1					
ANR	4237499	Argument	name		4234188	1					
ANR	4237500	Identifier	name		4234188	0					
ANR	4237501	IfStatement	"if ( ! item && ! strncmp ( name , ""fcn."" , 4 ) )"		4234188	3					
ANR	4237502	Condition	"! item && ! strncmp ( name , ""fcn."" , 4 )"	1211:8:32038:32072	4234188	0	True				
ANR	4237503	AndExpression	"! item && ! strncmp ( name , ""fcn."" , 4 )"		4234188	0		&&			
ANR	4237504	UnaryOperationExpression	! item		4234188	0					
ANR	4237505	UnaryOperator	!		4234188	0					
ANR	4237506	Identifier	item		4234188	1					
ANR	4237507	UnaryOperationExpression	"! strncmp ( name , ""fcn."" , 4 )"		4234188	1					
ANR	4237508	UnaryOperator	!		4234188	0					
ANR	4237509	CallExpression	"strncmp ( name , ""fcn."" , 4 )"		4234188	1					
ANR	4237510	Callee	strncmp		4234188	0					
ANR	4237511	Identifier	strncmp		4234188	0					
ANR	4237512	ArgumentList	name		4234188	1					
ANR	4237513	Argument	name		4234188	0					
ANR	4237514	Identifier	name		4234188	0					
ANR	4237515	Argument	"""fcn."""		4234188	1					
ANR	4237516	PrimaryExpression	"""fcn."""		4234188	0					
ANR	4237517	Argument	4		4234188	2					
ANR	4237518	PrimaryExpression	4		4234188	0					
ANR	4237519	CompoundStatement		572:45:13918:13918	4234188	1					
ANR	4237520	ExpressionStatement	"item = r_flag_get ( core -> flags , name + 4 )"	1212:5:32082:32121	4234188	0	True				
ANR	4237521	AssignmentExpression	"item = r_flag_get ( core -> flags , name + 4 )"		4234188	0		=			
ANR	4237522	Identifier	item		4234188	0					
ANR	4237523	CallExpression	"r_flag_get ( core -> flags , name + 4 )"		4234188	1					
ANR	4237524	Callee	r_flag_get		4234188	0					
ANR	4237525	Identifier	r_flag_get		4234188	0					
ANR	4237526	ArgumentList	core -> flags		4234188	1					
ANR	4237527	Argument	core -> flags		4234188	0					
ANR	4237528	PtrMemberAccess	core -> flags		4234188	0					
ANR	4237529	Identifier	core		4234188	0					
ANR	4237530	Identifier	flags		4234188	1					
ANR	4237531	Argument	name + 4		4234188	1					
ANR	4237532	AdditiveExpression	name + 4		4234188	0		+			
ANR	4237533	Identifier	name		4234188	0					
ANR	4237534	PrimaryExpression	4		4234188	1					
ANR	4237535	ElseStatement	else		4234188	0					
ANR	4237536	CompoundStatement		575:10:13982:13982	4234188	0					
ANR	4237537	ExpressionStatement	realname = name	1215:4:32145:32160	4234188	0	True				
ANR	4237538	AssignmentExpression	realname = name		4234188	0		=			
ANR	4237539	Identifier	realname		4234188	0					
ANR	4237540	Identifier	name		4234188	1					
ANR	4237541	ExpressionStatement	"item = r_flag_get_i ( core -> flags , core -> offset )"	1216:4:32166:32213	4234188	1	True				
ANR	4237542	AssignmentExpression	"item = r_flag_get_i ( core -> flags , core -> offset )"		4234188	0		=			
ANR	4237543	Identifier	item		4234188	0					
ANR	4237544	CallExpression	"r_flag_get_i ( core -> flags , core -> offset )"		4234188	1					
ANR	4237545	Callee	r_flag_get_i		4234188	0					
ANR	4237546	Identifier	r_flag_get_i		4234188	0					
ANR	4237547	ArgumentList	core -> flags		4234188	1					
ANR	4237548	Argument	core -> flags		4234188	0					
ANR	4237549	PtrMemberAccess	core -> flags		4234188	0					
ANR	4237550	Identifier	core		4234188	0					
ANR	4237551	Identifier	flags		4234188	1					
ANR	4237552	Argument	core -> offset		4234188	1					
ANR	4237553	PtrMemberAccess	core -> offset		4234188	0					
ANR	4237554	Identifier	core		4234188	0					
ANR	4237555	Identifier	offset		4234188	1					
ANR	4237556	IfStatement	if ( item )		4234188	4					
ANR	4237557	Condition	item	1218:7:32227:32230	4234188	0	True				
ANR	4237558	Identifier	item		4234188	0					
ANR	4237559	CompoundStatement		579:13:14076:14076	4234188	1					
ANR	4237560	ExpressionStatement	"r_flag_item_set_realname ( item , realname )"	1219:4:32239:32280	4234188	0	True				
ANR	4237561	CallExpression	"r_flag_item_set_realname ( item , realname )"		4234188	0					
ANR	4237562	Callee	r_flag_item_set_realname		4234188	0					
ANR	4237563	Identifier	r_flag_item_set_realname		4234188	0					
ANR	4237564	ArgumentList	item		4234188	1					
ANR	4237565	Argument	item		4234188	0					
ANR	4237566	Identifier	item		4234188	0					
ANR	4237567	Argument	realname		4234188	1					
ANR	4237568	Identifier	realname		4234188	0					
ANR	4237569	BreakStatement	break ;	1221:3:32290:32295	4234188	5	True				
ANR	4237570	ExpressionStatement	"eprintf ( ""Usage: fN [[name]] [[realname]]\\n"" )"	1223:2:32303:32348	4234188	73	True				
ANR	4237571	CallExpression	"eprintf ( ""Usage: fN [[name]] [[realname]]\\n"" )"		4234188	0					
ANR	4237572	Callee	eprintf		4234188	0					
ANR	4237573	Identifier	eprintf		4234188	0					
ANR	4237574	ArgumentList	"""Usage: fN [[name]] [[realname]]\\n"""		4234188	1					
ANR	4237575	Argument	"""Usage: fN [[name]] [[realname]]\\n"""		4234188	0					
ANR	4237576	PrimaryExpression	"""Usage: fN [[name]] [[realname]]\\n"""		4234188	0					
ANR	4237577	BreakStatement	break ;	1224:2:32352:32357	4234188	74	True				
ANR	4237578	Label	case '\\0' :	1225:1:32360:32369	4234188	75	True				
ANR	4237579	Label	case 'n' :	1226:1:32372:32380	4234188	76	True				
ANR	4237580	Label	case '*' :	1227:1:32397:32405	4234188	77	True				
ANR	4237581	Label	case 'j' :	1228:1:32416:32424	4234188	78	True				
ANR	4237582	Label	case 'q' :	1229:1:32435:32443	4234188	79	True				
ANR	4237583	IfStatement	if ( input [ 0 ] && input [ 1 ] == '.' && ! input [ 2 ] )		4234188	80					
ANR	4237584	Condition	input [ 0 ] && input [ 1 ] == '.' && ! input [ 2 ]	1230:6:32459:32498	4234188	0	True				
ANR	4237585	AndExpression	input [ 0 ] && input [ 1 ] == '.' && ! input [ 2 ]		4234188	0		&&			
ANR	4237586	ArrayIndexing	input [ 0 ]		4234188	0					
ANR	4237587	Identifier	input		4234188	0					
ANR	4237588	PrimaryExpression	0		4234188	1					
ANR	4237589	AndExpression	input [ 1 ] == '.' && ! input [ 2 ]		4234188	1		&&			
ANR	4237590	EqualityExpression	input [ 1 ] == '.'		4234188	0		==			
ANR	4237591	ArrayIndexing	input [ 1 ]		4234188	0					
ANR	4237592	Identifier	input		4234188	0					
ANR	4237593	PrimaryExpression	1		4234188	1					
ANR	4237594	PrimaryExpression	'.'		4234188	1					
ANR	4237595	UnaryOperationExpression	! input [ 2 ]		4234188	1					
ANR	4237596	UnaryOperator	!		4234188	0					
ANR	4237597	ArrayIndexing	input [ 2 ]		4234188	1					
ANR	4237598	Identifier	input		4234188	0					
ANR	4237599	PrimaryExpression	2		4234188	1					
ANR	4237600	CompoundStatement		592:3:14349:14415	4234188	1					
ANR	4237601	IdentifierDeclStatement	"RFlagItem * item = r_flag_get_at ( core -> flags , core -> offset , false ) ;"	1231:3:32506:32572	4234188	0	True				
ANR	4237602	IdentifierDecl	"* item = r_flag_get_at ( core -> flags , core -> offset , false )"		4234188	0					
ANR	4237603	IdentifierDeclType	RFlagItem *		4234188	0					
ANR	4237604	Identifier	item		4234188	1					
ANR	4237605	AssignmentExpression	"* item = r_flag_get_at ( core -> flags , core -> offset , false )"		4234188	2		=			
ANR	4237606	Identifier	item		4234188	0					
ANR	4237607	CallExpression	"r_flag_get_at ( core -> flags , core -> offset , false )"		4234188	1					
ANR	4237608	Callee	r_flag_get_at		4234188	0					
ANR	4237609	Identifier	r_flag_get_at		4234188	0					
ANR	4237610	ArgumentList	core -> flags		4234188	1					
ANR	4237611	Argument	core -> flags		4234188	0					
ANR	4237612	PtrMemberAccess	core -> flags		4234188	0					
ANR	4237613	Identifier	core		4234188	0					
ANR	4237614	Identifier	flags		4234188	1					
ANR	4237615	Argument	core -> offset		4234188	1					
ANR	4237616	PtrMemberAccess	core -> offset		4234188	0					
ANR	4237617	Identifier	core		4234188	0					
ANR	4237618	Identifier	offset		4234188	1					
ANR	4237619	Argument	false		4234188	2					
ANR	4237620	Identifier	false		4234188	0					
ANR	4237621	IfStatement	if ( item )		4234188	1					
ANR	4237622	Condition	item	1232:7:32581:32584	4234188	0	True				
ANR	4237623	Identifier	item		4234188	0					
ANR	4237624	CompoundStatement		593:13:14430:14430	4234188	1					
ANR	4237625	SwitchStatement	switch ( input [ 0 ] )		4234188	0					
ANR	4237626	Condition	input [ 0 ]	1233:12:32601:32608	4234188	0	True				
ANR	4237627	ArrayIndexing	input [ 0 ]		4234188	0					
ANR	4237628	Identifier	input		4234188	0					
ANR	4237629	PrimaryExpression	0		4234188	1					
ANR	4237630	CompoundStatement		594:22:14454:14454	4234188	1					
ANR	4237631	Label	case '*' :	1234:4:32617:32625	4234188	0	True				
ANR	4237632	Statement	r_cons_printf	1235:5:32632:32644	4234188	1	True				
ANR	4237633	Statement	(	1235:19:32646:32646	4234188	2	True				
ANR	4237634	Statement	"""f %s = 0x%08"""	1235:20:32647:32660	4234188	3	True				
ANR	4237635	Statement	PFMT64x	1235:34:32661:32667	4234188	4	True				
ANR	4237636	Statement	"""\\n"""	1235:41:32668:32671	4234188	5	True				
ANR	4237637	Statement	","	1235:45:32672:32672	4234188	6	True				
ANR	4237638	Statement	item	1235:47:32674:32677	4234188	7	True				
ANR	4237639	Statement	->	1235:51:32678:32679	4234188	8	True				
ANR	4237640	Statement	name	1235:53:32680:32683	4234188	9	True				
ANR	4237641	Statement	","	1235:57:32684:32684	4234188	10	True				
ANR	4237642	Statement	item	1235:59:32686:32689	4234188	11	True				
ANR	4237643	Statement	->	1235:63:32690:32691	4234188	12	True				
ANR	4237644	Statement	offset	1235:65:32692:32697	4234188	13	True				
ANR	4237645	Statement	)	1235:71:32698:32698	4234188	14	True				
ANR	4237646	ExpressionStatement		1235:72:32699:32699	4234188	15	True				
ANR	4237647	BreakStatement	break ;	1236:5:32706:32711	4234188	16	True				
ANR	4237648	Label	case 'j' :	1237:4:32717:32725	4234188	17	True				
ANR	4237649	CompoundStatement		606:6:14763:14786	4234188	18					
ANR	4237650	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	1239:6:32740:32758	4234188	0	True				
ANR	4237651	IdentifierDecl	* pj = pj_new ( )		4234188	0					
ANR	4237652	IdentifierDeclType	PJ *		4234188	0					
ANR	4237653	Identifier	pj		4234188	1					
ANR	4237654	AssignmentExpression	* pj = pj_new ( )		4234188	2		=			
ANR	4237655	Identifier	pj		4234188	0					
ANR	4237656	CallExpression	pj_new ( )		4234188	1					
ANR	4237657	Callee	pj_new		4234188	0					
ANR	4237658	Identifier	pj_new		4234188	0					
ANR	4237659	ArgumentList			4234188	1					
ANR	4237660	ExpressionStatement	pj_o ( pj )	1240:6:32766:32775	4234188	1	True				
ANR	4237661	CallExpression	pj_o ( pj )		4234188	0					
ANR	4237662	Callee	pj_o		4234188	0					
ANR	4237663	Identifier	pj_o		4234188	0					
ANR	4237664	ArgumentList	pj		4234188	1					
ANR	4237665	Argument	pj		4234188	0					
ANR	4237666	Identifier	pj		4234188	0					
ANR	4237667	ExpressionStatement	"pj_ks ( pj , ""name"" , item -> name )"	1241:6:32783:32813	4234188	2	True				
ANR	4237668	CallExpression	"pj_ks ( pj , ""name"" , item -> name )"		4234188	0					
ANR	4237669	Callee	pj_ks		4234188	0					
ANR	4237670	Identifier	pj_ks		4234188	0					
ANR	4237671	ArgumentList	pj		4234188	1					
ANR	4237672	Argument	pj		4234188	0					
ANR	4237673	Identifier	pj		4234188	0					
ANR	4237674	Argument	"""name"""		4234188	1					
ANR	4237675	PrimaryExpression	"""name"""		4234188	0					
ANR	4237676	Argument	item -> name		4234188	2					
ANR	4237677	PtrMemberAccess	item -> name		4234188	0					
ANR	4237678	Identifier	item		4234188	0					
ANR	4237679	Identifier	name		4234188	1					
ANR	4237680	ExpressionStatement	"pj_kn ( pj , ""offset"" , item -> offset )"	1242:6:32821:32855	4234188	3	True				
ANR	4237681	CallExpression	"pj_kn ( pj , ""offset"" , item -> offset )"		4234188	0					
ANR	4237682	Callee	pj_kn		4234188	0					
ANR	4237683	Identifier	pj_kn		4234188	0					
ANR	4237684	ArgumentList	pj		4234188	1					
ANR	4237685	Argument	pj		4234188	0					
ANR	4237686	Identifier	pj		4234188	0					
ANR	4237687	Argument	"""offset"""		4234188	1					
ANR	4237688	PrimaryExpression	"""offset"""		4234188	0					
ANR	4237689	Argument	item -> offset		4234188	2					
ANR	4237690	PtrMemberAccess	item -> offset		4234188	0					
ANR	4237691	Identifier	item		4234188	0					
ANR	4237692	Identifier	offset		4234188	1					
ANR	4237693	ExpressionStatement	"pj_kn ( pj , ""size"" , item -> size )"	1243:6:32863:32893	4234188	4	True				
ANR	4237694	CallExpression	"pj_kn ( pj , ""size"" , item -> size )"		4234188	0					
ANR	4237695	Callee	pj_kn		4234188	0					
ANR	4237696	Identifier	pj_kn		4234188	0					
ANR	4237697	ArgumentList	pj		4234188	1					
ANR	4237698	Argument	pj		4234188	0					
ANR	4237699	Identifier	pj		4234188	0					
ANR	4237700	Argument	"""size"""		4234188	1					
ANR	4237701	PrimaryExpression	"""size"""		4234188	0					
ANR	4237702	Argument	item -> size		4234188	2					
ANR	4237703	PtrMemberAccess	item -> size		4234188	0					
ANR	4237704	Identifier	item		4234188	0					
ANR	4237705	Identifier	size		4234188	1					
ANR	4237706	ExpressionStatement	pj_end ( pj )	1244:6:32901:32912	4234188	5	True				
ANR	4237707	CallExpression	pj_end ( pj )		4234188	0					
ANR	4237708	Callee	pj_end		4234188	0					
ANR	4237709	Identifier	pj_end		4234188	0					
ANR	4237710	ArgumentList	pj		4234188	1					
ANR	4237711	Argument	pj		4234188	0					
ANR	4237712	Identifier	pj		4234188	0					
ANR	4237713	IdentifierDeclStatement	char * s = pj_drain ( pj ) ;	1245:6:32920:32943	4234188	6	True				
ANR	4237714	IdentifierDecl	* s = pj_drain ( pj )		4234188	0					
ANR	4237715	IdentifierDeclType	char *		4234188	0					
ANR	4237716	Identifier	s		4234188	1					
ANR	4237717	AssignmentExpression	* s = pj_drain ( pj )		4234188	2		=			
ANR	4237718	Identifier	s		4234188	0					
ANR	4237719	CallExpression	pj_drain ( pj )		4234188	1					
ANR	4237720	Callee	pj_drain		4234188	0					
ANR	4237721	Identifier	pj_drain		4234188	0					
ANR	4237722	ArgumentList	pj		4234188	1					
ANR	4237723	Argument	pj		4234188	0					
ANR	4237724	Identifier	pj		4234188	0					
ANR	4237725	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , s )"	1246:6:32951:32976	4234188	7	True				
ANR	4237726	CallExpression	"r_cons_printf ( ""%s\\n"" , s )"		4234188	0					
ANR	4237727	Callee	r_cons_printf		4234188	0					
ANR	4237728	Identifier	r_cons_printf		4234188	0					
ANR	4237729	ArgumentList	"""%s\\n"""		4234188	1					
ANR	4237730	Argument	"""%s\\n"""		4234188	0					
ANR	4237731	PrimaryExpression	"""%s\\n"""		4234188	0					
ANR	4237732	Argument	s		4234188	1					
ANR	4237733	Identifier	s		4234188	0					
ANR	4237734	ExpressionStatement	free ( s )	1247:6:32984:32992	4234188	8	True				
ANR	4237735	CallExpression	free ( s )		4234188	0					
ANR	4237736	Callee	free		4234188	0					
ANR	4237737	Identifier	free		4234188	0					
ANR	4237738	ArgumentList	s		4234188	1					
ANR	4237739	Argument	s		4234188	0					
ANR	4237740	Identifier	s		4234188	0					
ANR	4237741	BreakStatement	break ;	1249:5:33006:33011	4234188	19	True				
ANR	4237742	Label	default :	1250:4:33017:33024	4234188	20	True				
ANR	4237743	Identifier	default		4234188	0					
ANR	4237744	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , item -> name )"	1251:5:33031:33065	4234188	21	True				
ANR	4237745	CallExpression	"r_cons_printf ( ""%s\\n"" , item -> name )"		4234188	0					
ANR	4237746	Callee	r_cons_printf		4234188	0					
ANR	4237747	Identifier	r_cons_printf		4234188	0					
ANR	4237748	ArgumentList	"""%s\\n"""		4234188	1					
ANR	4237749	Argument	"""%s\\n"""		4234188	0					
ANR	4237750	PrimaryExpression	"""%s\\n"""		4234188	0					
ANR	4237751	Argument	item -> name		4234188	1					
ANR	4237752	PtrMemberAccess	item -> name		4234188	0					
ANR	4237753	Identifier	item		4234188	0					
ANR	4237754	Identifier	name		4234188	1					
ANR	4237755	BreakStatement	break ;	1252:5:33072:33077	4234188	22	True				
ANR	4237756	ElseStatement	else		4234188	0					
ANR	4237757	CompoundStatement		616:9:14942:14942	4234188	0					
ANR	4237758	ExpressionStatement	"r_flag_list ( core -> flags , * input , input [ 0 ] ? input + 1 : """" )"	1256:3:33104:33162	4234188	0	True				
ANR	4237759	CallExpression	"r_flag_list ( core -> flags , * input , input [ 0 ] ? input + 1 : """" )"		4234188	0					
ANR	4237760	Callee	r_flag_list		4234188	0					
ANR	4237761	Identifier	r_flag_list		4234188	0					
ANR	4237762	ArgumentList	core -> flags		4234188	1					
ANR	4237763	Argument	core -> flags		4234188	0					
ANR	4237764	PtrMemberAccess	core -> flags		4234188	0					
ANR	4237765	Identifier	core		4234188	0					
ANR	4237766	Identifier	flags		4234188	1					
ANR	4237767	Argument	* input		4234188	1					
ANR	4237768	UnaryOperationExpression	* input		4234188	0					
ANR	4237769	UnaryOperator	*		4234188	0					
ANR	4237770	Identifier	input		4234188	1					
ANR	4237771	Argument	"input [ 0 ] ? input + 1 : """""		4234188	2					
ANR	4237772	ConditionalExpression	"input [ 0 ] ? input + 1 : """""		4234188	0					
ANR	4237773	Condition	input [ 0 ]		4234188	0					
ANR	4237774	ArrayIndexing	input [ 0 ]		4234188	0					
ANR	4237775	Identifier	input		4234188	0					
ANR	4237776	PrimaryExpression	0		4234188	1					
ANR	4237777	AdditiveExpression	input + 1		4234188	1		+			
ANR	4237778	Identifier	input		4234188	0					
ANR	4237779	PrimaryExpression	1		4234188	1					
ANR	4237780	PrimaryExpression	""""""		4234188	2					
ANR	4237781	BreakStatement	break ;	1258:2:33170:33175	4234188	81	True				
ANR	4237782	Label	case 'i' :	1259:1:33178:33186	4234188	82	True				
ANR	4237783	IfStatement	if ( input [ 1 ] == ' ' || ( input [ 1 ] && input [ 2 ] == ' ' ) )		4234188	83					
ANR	4237784	Condition	input [ 1 ] == ' ' || ( input [ 1 ] && input [ 2 ] == ' ' )	1260:6:33202:33249	4234188	0	True				
ANR	4237785	OrExpression	input [ 1 ] == ' ' || ( input [ 1 ] && input [ 2 ] == ' ' )		4234188	0		||			
ANR	4237786	EqualityExpression	input [ 1 ] == ' '		4234188	0		==			
ANR	4237787	ArrayIndexing	input [ 1 ]		4234188	0					
ANR	4237788	Identifier	input		4234188	0					
ANR	4237789	PrimaryExpression	1		4234188	1					
ANR	4237790	PrimaryExpression	' '		4234188	1					
ANR	4237791	AndExpression	input [ 1 ] && input [ 2 ] == ' '		4234188	1		&&			
ANR	4237792	ArrayIndexing	input [ 1 ]		4234188	0					
ANR	4237793	Identifier	input		4234188	0					
ANR	4237794	PrimaryExpression	1		4234188	1					
ANR	4237795	EqualityExpression	input [ 2 ] == ' '		4234188	1		==			
ANR	4237796	ArrayIndexing	input [ 2 ]		4234188	0					
ANR	4237797	Identifier	input		4234188	0					
ANR	4237798	PrimaryExpression	2		4234188	1					
ANR	4237799	PrimaryExpression	' '		4234188	1					
ANR	4237800	CompoundStatement		622:3:15100:15146	4234188	1					
ANR	4237801	IdentifierDeclStatement	char * arg = strdup ( r_str_trim_ro ( input + 2 ) ) ;	1261:3:33257:33303	4234188	0	True				
ANR	4237802	IdentifierDecl	* arg = strdup ( r_str_trim_ro ( input + 2 ) )		4234188	0					
ANR	4237803	IdentifierDeclType	char *		4234188	0					
ANR	4237804	Identifier	arg		4234188	1					
ANR	4237805	AssignmentExpression	* arg = strdup ( r_str_trim_ro ( input + 2 ) )		4234188	2		=			
ANR	4237806	Identifier	arg		4234188	0					
ANR	4237807	CallExpression	strdup ( r_str_trim_ro ( input + 2 ) )		4234188	1					
ANR	4237808	Callee	strdup		4234188	0					
ANR	4237809	Identifier	strdup		4234188	0					
ANR	4237810	ArgumentList	r_str_trim_ro ( input + 2 )		4234188	1					
ANR	4237811	Argument	r_str_trim_ro ( input + 2 )		4234188	0					
ANR	4237812	CallExpression	r_str_trim_ro ( input + 2 )		4234188	0					
ANR	4237813	Callee	r_str_trim_ro		4234188	0					
ANR	4237814	Identifier	r_str_trim_ro		4234188	0					
ANR	4237815	ArgumentList	input + 2		4234188	1					
ANR	4237816	Argument	input + 2		4234188	0					
ANR	4237817	AdditiveExpression	input + 2		4234188	0		+			
ANR	4237818	Identifier	input		4234188	0					
ANR	4237819	PrimaryExpression	2		4234188	1					
ANR	4237820	IfStatement	if ( * arg )		4234188	1					
ANR	4237821	Condition	* arg	1262:7:33312:33315	4234188	0	True				
ANR	4237822	UnaryOperationExpression	* arg		4234188	0					
ANR	4237823	UnaryOperator	*		4234188	0					
ANR	4237824	Identifier	arg		4234188	1					
ANR	4237825	CompoundStatement		625:4:15213:15241	4234188	1					
ANR	4237826	ExpressionStatement	arg = strdup ( r_str_trim_ro ( input + 2 ) )	1263:4:33324:33364	4234188	0	True				
ANR	4237827	AssignmentExpression	arg = strdup ( r_str_trim_ro ( input + 2 ) )		4234188	0		=			
ANR	4237828	Identifier	arg		4234188	0					
ANR	4237829	CallExpression	strdup ( r_str_trim_ro ( input + 2 ) )		4234188	1					
ANR	4237830	Callee	strdup		4234188	0					
ANR	4237831	Identifier	strdup		4234188	0					
ANR	4237832	ArgumentList	r_str_trim_ro ( input + 2 )		4234188	1					
ANR	4237833	Argument	r_str_trim_ro ( input + 2 )		4234188	0					
ANR	4237834	CallExpression	r_str_trim_ro ( input + 2 )		4234188	0					
ANR	4237835	Callee	r_str_trim_ro		4234188	0					
ANR	4237836	Identifier	r_str_trim_ro		4234188	0					
ANR	4237837	ArgumentList	input + 2		4234188	1					
ANR	4237838	Argument	input + 2		4234188	0					
ANR	4237839	AdditiveExpression	input + 2		4234188	0		+			
ANR	4237840	Identifier	input		4234188	0					
ANR	4237841	PrimaryExpression	2		4234188	1					
ANR	4237842	IdentifierDeclStatement	"char * sp = strchr ( arg , ' ' ) ;"	1264:4:33370:33398	4234188	1	True				
ANR	4237843	IdentifierDecl	"* sp = strchr ( arg , ' ' )"		4234188	0					
ANR	4237844	IdentifierDeclType	char *		4234188	0					
ANR	4237845	Identifier	sp		4234188	1					
ANR	4237846	AssignmentExpression	"* sp = strchr ( arg , ' ' )"		4234188	2		=			
ANR	4237847	Identifier	sp		4234188	0					
ANR	4237848	CallExpression	"strchr ( arg , ' ' )"		4234188	1					
ANR	4237849	Callee	strchr		4234188	0					
ANR	4237850	Identifier	strchr		4234188	0					
ANR	4237851	ArgumentList	arg		4234188	1					
ANR	4237852	Argument	arg		4234188	0					
ANR	4237853	Identifier	arg		4234188	0					
ANR	4237854	Argument	' '		4234188	1					
ANR	4237855	PrimaryExpression	' '		4234188	0					
ANR	4237856	IfStatement	if ( ! sp )		4234188	2					
ANR	4237857	Condition	! sp	1265:8:33408:33410	4234188	0	True				
ANR	4237858	UnaryOperationExpression	! sp		4234188	0					
ANR	4237859	UnaryOperator	!		4234188	0					
ANR	4237860	Identifier	sp		4234188	1					
ANR	4237861	CompoundStatement		626:13:15256:15256	4234188	1					
ANR	4237862	Statement	char	1266:5:33420:33423	4234188	0	True				
ANR	4237863	Statement	*	1266:10:33425:33425	4234188	1	True				
ANR	4237864	Statement	newarg	1266:11:33426:33431	4234188	2	True				
ANR	4237865	Statement	=	1266:18:33433:33433	4234188	3	True				
ANR	4237866	Statement	r_str_newf	1266:20:33435:33444	4234188	4	True				
ANR	4237867	Statement	(	1266:31:33446:33446	4234188	5	True				
ANR	4237868	Statement	"""%c0x%"""	1266:32:33447:33453	4234188	6	True				
ANR	4237869	Statement	PFMT64x	1266:39:33454:33460	4234188	7	True				
ANR	4237870	Statement	""" %s+0x%"""	1266:46:33461:33469	4234188	8	True				
ANR	4237871	Statement	PFMT64x	1266:55:33470:33476	4234188	9	True				
ANR	4237872	Statement	","	1266:62:33477:33477	4234188	10	True				
ANR	4237873	Statement	input	1267:6:33485:33489	4234188	11	True				
ANR	4237874	Statement	[	1267:11:33490:33490	4234188	12	True				
ANR	4237875	Statement	1	1267:12:33491:33491	4234188	13	True				
ANR	4237876	Statement	]	1267:13:33492:33492	4234188	14	True				
ANR	4237877	Statement	","	1267:14:33493:33493	4234188	15	True				
ANR	4237878	Statement	core	1267:16:33495:33498	4234188	16	True				
ANR	4237879	Statement	->	1267:20:33499:33500	4234188	17	True				
ANR	4237880	Statement	offset	1267:22:33501:33506	4234188	18	True				
ANR	4237881	Statement	","	1267:28:33507:33507	4234188	19	True				
ANR	4237882	Statement	arg	1267:30:33509:33511	4234188	20	True				
ANR	4237883	Statement	","	1267:33:33512:33512	4234188	21	True				
ANR	4237884	Statement	core	1267:35:33514:33517	4234188	22	True				
ANR	4237885	Statement	->	1267:39:33518:33519	4234188	23	True				
ANR	4237886	Statement	offset	1267:41:33520:33525	4234188	24	True				
ANR	4237887	Statement	)	1267:47:33526:33526	4234188	25	True				
ANR	4237888	ExpressionStatement		1267:48:33527:33527	4234188	26	True				
ANR	4237889	ExpressionStatement	free ( arg )	1268:5:33534:33544	4234188	27	True				
ANR	4237890	CallExpression	free ( arg )		4234188	0					
ANR	4237891	Callee	free		4234188	0					
ANR	4237892	Identifier	free		4234188	0					
ANR	4237893	ArgumentList	arg		4234188	1					
ANR	4237894	Argument	arg		4234188	0					
ANR	4237895	Identifier	arg		4234188	0					
ANR	4237896	ExpressionStatement	arg = newarg	1269:5:33551:33563	4234188	28	True				
ANR	4237897	AssignmentExpression	arg = newarg		4234188	0		=			
ANR	4237898	Identifier	arg		4234188	0					
ANR	4237899	Identifier	newarg		4234188	1					
ANR	4237900	ElseStatement	else		4234188	0					
ANR	4237901	CompoundStatement		632:5:15426:15475	4234188	0					
ANR	4237902	IdentifierDeclStatement	"char * newarg = r_str_newf ( ""%c%s"" , input [ 1 ] , arg ) ;"	1271:5:33583:33632	4234188	0	True				
ANR	4237903	IdentifierDecl	"* newarg = r_str_newf ( ""%c%s"" , input [ 1 ] , arg )"		4234188	0					
ANR	4237904	IdentifierDeclType	char *		4234188	0					
ANR	4237905	Identifier	newarg		4234188	1					
ANR	4237906	AssignmentExpression	"* newarg = r_str_newf ( ""%c%s"" , input [ 1 ] , arg )"		4234188	2		=			
ANR	4237907	Identifier	newarg		4234188	0					
ANR	4237908	CallExpression	"r_str_newf ( ""%c%s"" , input [ 1 ] , arg )"		4234188	1					
ANR	4237909	Callee	r_str_newf		4234188	0					
ANR	4237910	Identifier	r_str_newf		4234188	0					
ANR	4237911	ArgumentList	"""%c%s"""		4234188	1					
ANR	4237912	Argument	"""%c%s"""		4234188	0					
ANR	4237913	PrimaryExpression	"""%c%s"""		4234188	0					
ANR	4237914	Argument	input [ 1 ]		4234188	1					
ANR	4237915	ArrayIndexing	input [ 1 ]		4234188	0					
ANR	4237916	Identifier	input		4234188	0					
ANR	4237917	PrimaryExpression	1		4234188	1					
ANR	4237918	Argument	arg		4234188	2					
ANR	4237919	Identifier	arg		4234188	0					
ANR	4237920	ExpressionStatement	free ( arg )	1272:5:33639:33649	4234188	1	True				
ANR	4237921	CallExpression	free ( arg )		4234188	0					
ANR	4237922	Callee	free		4234188	0					
ANR	4237923	Identifier	free		4234188	0					
ANR	4237924	ArgumentList	arg		4234188	1					
ANR	4237925	Argument	arg		4234188	0					
ANR	4237926	Identifier	arg		4234188	0					
ANR	4237927	ExpressionStatement	arg = newarg	1273:5:33656:33668	4234188	2	True				
ANR	4237928	AssignmentExpression	arg = newarg		4234188	0		=			
ANR	4237929	Identifier	arg		4234188	0					
ANR	4237930	Identifier	newarg		4234188	1					
ANR	4237931	ElseStatement	else		4234188	0					
ANR	4237932	CompoundStatement		636:10:15529:15529	4234188	0					
ANR	4237933	ExpressionStatement	free ( arg )	1276:4:33692:33702	4234188	0	True				
ANR	4237934	CallExpression	free ( arg )		4234188	0					
ANR	4237935	Callee	free		4234188	0					
ANR	4237936	Identifier	free		4234188	0					
ANR	4237937	ArgumentList	arg		4234188	1					
ANR	4237938	Argument	arg		4234188	0					
ANR	4237939	Identifier	arg		4234188	0					
ANR	4237940	Statement	arg	1277:4:33708:33710	4234188	1	True				
ANR	4237941	Statement	=	1277:8:33712:33712	4234188	2	True				
ANR	4237942	Statement	r_str_newf	1277:10:33714:33723	4234188	3	True				
ANR	4237943	Statement	(	1277:21:33725:33725	4234188	4	True				
ANR	4237944	Statement	""" 0x%"""	1277:22:33726:33731	4234188	5	True				
ANR	4237945	Statement	PFMT64x	1277:28:33732:33738	4234188	6	True				
ANR	4237946	Statement	""" 0x%"""	1277:35:33739:33744	4234188	7	True				
ANR	4237947	Statement	PFMT64x	1277:41:33745:33751	4234188	8	True				
ANR	4237948	Statement	","	1277:48:33752:33752	4234188	9	True				
ANR	4237949	Statement	core	1278:5:33759:33762	4234188	10	True				
ANR	4237950	Statement	->	1278:9:33763:33764	4234188	11	True				
ANR	4237951	Statement	offset	1278:11:33765:33770	4234188	12	True				
ANR	4237952	Statement	","	1278:17:33771:33771	4234188	13	True				
ANR	4237953	Statement	core	1278:19:33773:33776	4234188	14	True				
ANR	4237954	Statement	->	1278:23:33777:33778	4234188	15	True				
ANR	4237955	Statement	offset	1278:25:33779:33784	4234188	16	True				
ANR	4237956	Statement	+	1278:32:33786:33786	4234188	17	True				
ANR	4237957	Statement	core	1278:34:33788:33791	4234188	18	True				
ANR	4237958	Statement	->	1278:38:33792:33793	4234188	19	True				
ANR	4237959	Statement	blocksize	1278:40:33794:33802	4234188	20	True				
ANR	4237960	Statement	)	1278:49:33803:33803	4234188	21	True				
ANR	4237961	ExpressionStatement		1278:50:33804:33804	4234188	22	True				
ANR	4237962	ExpressionStatement	"r_flag_list ( core -> flags , 'i' , arg )"	1280:3:33814:33849	4234188	2	True				
ANR	4237963	CallExpression	"r_flag_list ( core -> flags , 'i' , arg )"		4234188	0					
ANR	4237964	Callee	r_flag_list		4234188	0					
ANR	4237965	Identifier	r_flag_list		4234188	0					
ANR	4237966	ArgumentList	core -> flags		4234188	1					
ANR	4237967	Argument	core -> flags		4234188	0					
ANR	4237968	PtrMemberAccess	core -> flags		4234188	0					
ANR	4237969	Identifier	core		4234188	0					
ANR	4237970	Identifier	flags		4234188	1					
ANR	4237971	Argument	'i'		4234188	1					
ANR	4237972	PrimaryExpression	'i'		4234188	0					
ANR	4237973	Argument	arg		4234188	2					
ANR	4237974	Identifier	arg		4234188	0					
ANR	4237975	ExpressionStatement	free ( arg )	1281:3:33854:33864	4234188	3	True				
ANR	4237976	CallExpression	free ( arg )		4234188	0					
ANR	4237977	Callee	free		4234188	0					
ANR	4237978	Identifier	free		4234188	0					
ANR	4237979	ArgumentList	arg		4234188	1					
ANR	4237980	Argument	arg		4234188	0					
ANR	4237981	Identifier	arg		4234188	0					
ANR	4237982	ElseStatement	else		4234188	0					
ANR	4237983	CompoundStatement		643:9:15718:15718	4234188	0					
ANR	4237984	Statement	char	1284:3:33909:33912	4234188	0	True				
ANR	4237985	Statement	*	1284:8:33914:33914	4234188	1	True				
ANR	4237986	Statement	arg	1284:9:33915:33917	4234188	2	True				
ANR	4237987	Statement	=	1284:13:33919:33919	4234188	3	True				
ANR	4237988	Statement	r_str_newf	1284:15:33921:33930	4234188	4	True				
ANR	4237989	Statement	(	1284:26:33932:33932	4234188	5	True				
ANR	4237990	Statement	""" 0x%"""	1284:27:33933:33938	4234188	6	True				
ANR	4237991	Statement	PFMT64x	1284:33:33939:33945	4234188	7	True				
ANR	4237992	Statement	""" 0x%"""	1284:40:33946:33951	4234188	8	True				
ANR	4237993	Statement	PFMT64x	1284:46:33952:33958	4234188	9	True				
ANR	4237994	Statement	","	1284:53:33959:33959	4234188	10	True				
ANR	4237995	Statement	core	1285:4:33965:33968	4234188	11	True				
ANR	4237996	Statement	->	1285:8:33969:33970	4234188	12	True				
ANR	4237997	Statement	offset	1285:10:33971:33976	4234188	13	True				
ANR	4237998	Statement	","	1285:16:33977:33977	4234188	14	True				
ANR	4237999	Statement	core	1285:18:33979:33982	4234188	15	True				
ANR	4238000	Statement	->	1285:22:33983:33984	4234188	16	True				
ANR	4238001	Statement	offset	1285:24:33985:33990	4234188	17	True				
ANR	4238002	Statement	+	1285:31:33992:33992	4234188	18	True				
ANR	4238003	Statement	core	1285:33:33994:33997	4234188	19	True				
ANR	4238004	Statement	->	1285:37:33998:33999	4234188	20	True				
ANR	4238005	Statement	blocksize	1285:39:34000:34008	4234188	21	True				
ANR	4238006	Statement	)	1285:48:34009:34009	4234188	22	True				
ANR	4238007	ExpressionStatement		1285:49:34010:34010	4234188	23	True				
ANR	4238008	ExpressionStatement	"r_flag_list ( core -> flags , 'i' , arg )"	1286:3:34015:34050	4234188	24	True				
ANR	4238009	CallExpression	"r_flag_list ( core -> flags , 'i' , arg )"		4234188	0					
ANR	4238010	Callee	r_flag_list		4234188	0					
ANR	4238011	Identifier	r_flag_list		4234188	0					
ANR	4238012	ArgumentList	core -> flags		4234188	1					
ANR	4238013	Argument	core -> flags		4234188	0					
ANR	4238014	PtrMemberAccess	core -> flags		4234188	0					
ANR	4238015	Identifier	core		4234188	0					
ANR	4238016	Identifier	flags		4234188	1					
ANR	4238017	Argument	'i'		4234188	1					
ANR	4238018	PrimaryExpression	'i'		4234188	0					
ANR	4238019	Argument	arg		4234188	2					
ANR	4238020	Identifier	arg		4234188	0					
ANR	4238021	ExpressionStatement	free ( arg )	1287:3:34055:34065	4234188	25	True				
ANR	4238022	CallExpression	free ( arg )		4234188	0					
ANR	4238023	Callee	free		4234188	0					
ANR	4238024	Identifier	free		4234188	0					
ANR	4238025	ArgumentList	arg		4234188	1					
ANR	4238026	Argument	arg		4234188	0					
ANR	4238027	Identifier	arg		4234188	0					
ANR	4238028	BreakStatement	break ;	1289:2:34073:34078	4234188	84	True				
ANR	4238029	Label	case 'd' :	1290:1:34081:34089	4234188	85	True				
ANR	4238030	CompoundStatement		656:3:16023:16049	4234188	86					
ANR	4238031	IdentifierDeclStatement	ut64 addr = core -> offset ;	1292:3:34106:34130	4234188	0	True				
ANR	4238032	IdentifierDecl	addr = core -> offset		4234188	0					
ANR	4238033	IdentifierDeclType	ut64		4234188	0					
ANR	4238034	Identifier	addr		4234188	1					
ANR	4238035	AssignmentExpression	addr = core -> offset		4234188	2		=			
ANR	4238036	Identifier	addr		4234188	0					
ANR	4238037	PtrMemberAccess	core -> offset		4234188	1					
ANR	4238038	Identifier	core		4234188	0					
ANR	4238039	Identifier	offset		4234188	1					
ANR	4238040	IdentifierDeclStatement	char * arg = NULL ;	1293:3:34135:34151	4234188	1	True				
ANR	4238041	IdentifierDecl	* arg = NULL		4234188	0					
ANR	4238042	IdentifierDeclType	char *		4234188	0					
ANR	4238043	Identifier	arg		4234188	1					
ANR	4238044	AssignmentExpression	* arg = NULL		4234188	2		=			
ANR	4238045	Identifier	NULL		4234188	0					
ANR	4238046	Identifier	NULL		4234188	1					
ANR	4238047	IdentifierDeclStatement	RFlagItem * f = NULL ;	1294:3:34156:34175	4234188	2	True				
ANR	4238048	IdentifierDecl	* f = NULL		4234188	0					
ANR	4238049	IdentifierDeclType	RFlagItem *		4234188	0					
ANR	4238050	Identifier	f		4234188	1					
ANR	4238051	AssignmentExpression	* f = NULL		4234188	2		=			
ANR	4238052	Identifier	NULL		4234188	0					
ANR	4238053	Identifier	NULL		4234188	1					
ANR	4238054	IdentifierDeclStatement	bool strict_offset = false ;	1295:3:34180:34206	4234188	3	True				
ANR	4238055	IdentifierDecl	strict_offset = false		4234188	0					
ANR	4238056	IdentifierDeclType	bool		4234188	0					
ANR	4238057	Identifier	strict_offset		4234188	1					
ANR	4238058	AssignmentExpression	strict_offset = false		4234188	2		=			
ANR	4238059	Identifier	false		4234188	0					
ANR	4238060	Identifier	false		4234188	1					
ANR	4238061	SwitchStatement	switch ( input [ 1 ] )		4234188	4					
ANR	4238062	Condition	input [ 1 ]	1296:11:34219:34226	4234188	0	True				
ANR	4238063	ArrayIndexing	input [ 1 ]		4234188	0					
ANR	4238064	Identifier	input		4234188	0					
ANR	4238065	PrimaryExpression	1		4234188	1					
ANR	4238066	CompoundStatement		657:21:16072:16072	4234188	1					
ANR	4238067	Label	case '?' :	1297:3:34234:34242	4234188	0	True				
ANR	4238068	ExpressionStatement	"r_core_cmd_help ( core , help_msg_fd )"	1298:4:34248:34283	4234188	1	True				
ANR	4238069	CallExpression	"r_core_cmd_help ( core , help_msg_fd )"		4234188	0					
ANR	4238070	Callee	r_core_cmd_help		4234188	0					
ANR	4238071	Identifier	r_core_cmd_help		4234188	0					
ANR	4238072	ArgumentList	core		4234188	1					
ANR	4238073	Argument	core		4234188	0					
ANR	4238074	Identifier	core		4234188	0					
ANR	4238075	Argument	help_msg_fd		4234188	1					
ANR	4238076	Identifier	help_msg_fd		4234188	0					
ANR	4238077	IfStatement	if ( str )		4234188	2					
ANR	4238078	Condition	str	1299:8:34293:34295	4234188	0	True				
ANR	4238079	Identifier	str		4234188	0					
ANR	4238080	CompoundStatement		660:13:16141:16141	4234188	1					
ANR	4238081	ExpressionStatement	free ( str )	1300:5:34305:34315	4234188	0	True				
ANR	4238082	CallExpression	free ( str )		4234188	0					
ANR	4238083	Callee	free		4234188	0					
ANR	4238084	Identifier	free		4234188	0					
ANR	4238085	ArgumentList	str		4234188	1					
ANR	4238086	Argument	str		4234188	0					
ANR	4238087	Identifier	str		4234188	0					
ANR	4238088	ReturnStatement	return false ;	1302:4:34327:34339	4234188	3	True				
ANR	4238089	Identifier	false		4234188	0					
ANR	4238090	Label	case '\\0' :	1303:3:34344:34353	4234188	4	True				
ANR	4238091	ExpressionStatement	addr = core -> offset	1304:4:34359:34378	4234188	5	True				
ANR	4238092	AssignmentExpression	addr = core -> offset		4234188	0		=			
ANR	4238093	Identifier	addr		4234188	0					
ANR	4238094	PtrMemberAccess	core -> offset		4234188	1					
ANR	4238095	Identifier	core		4234188	0					
ANR	4238096	Identifier	offset		4234188	1					
ANR	4238097	BreakStatement	break ;	1305:4:34384:34389	4234188	6	True				
ANR	4238098	Label	case 'd' :	1306:3:34394:34402	4234188	7	True				
ANR	4238099	ExpressionStatement	"arg = strchr ( input , ' ' )"	1307:4:34408:34433	4234188	8	True				
ANR	4238100	AssignmentExpression	"arg = strchr ( input , ' ' )"		4234188	0		=			
ANR	4238101	Identifier	arg		4234188	0					
ANR	4238102	CallExpression	"strchr ( input , ' ' )"		4234188	1					
ANR	4238103	Callee	strchr		4234188	0					
ANR	4238104	Identifier	strchr		4234188	0					
ANR	4238105	ArgumentList	input		4234188	1					
ANR	4238106	Argument	input		4234188	0					
ANR	4238107	Identifier	input		4234188	0					
ANR	4238108	Argument	' '		4234188	1					
ANR	4238109	PrimaryExpression	' '		4234188	0					
ANR	4238110	IfStatement	if ( arg )		4234188	9					
ANR	4238111	Condition	arg	1308:8:34443:34445	4234188	0	True				
ANR	4238112	Identifier	arg		4234188	0					
ANR	4238113	CompoundStatement		669:13:16291:16291	4234188	1					
ANR	4238114	ExpressionStatement	"addr = r_num_math ( core -> num , arg + 1 )"	1309:5:34455:34493	4234188	0	True				
ANR	4238115	AssignmentExpression	"addr = r_num_math ( core -> num , arg + 1 )"		4234188	0		=			
ANR	4238116	Identifier	addr		4234188	0					
ANR	4238117	CallExpression	"r_num_math ( core -> num , arg + 1 )"		4234188	1					
ANR	4238118	Callee	r_num_math		4234188	0					
ANR	4238119	Identifier	r_num_math		4234188	0					
ANR	4238120	ArgumentList	core -> num		4234188	1					
ANR	4238121	Argument	core -> num		4234188	0					
ANR	4238122	PtrMemberAccess	core -> num		4234188	0					
ANR	4238123	Identifier	core		4234188	0					
ANR	4238124	Identifier	num		4234188	1					
ANR	4238125	Argument	arg + 1		4234188	1					
ANR	4238126	AdditiveExpression	arg + 1		4234188	0		+			
ANR	4238127	Identifier	arg		4234188	0					
ANR	4238128	PrimaryExpression	1		4234188	1					
ANR	4238129	BreakStatement	break ;	1311:4:34505:34510	4234188	10	True				
ANR	4238130	Label	case '.' :	1312:3:34515:34523	4234188	11	True				
ANR	4238131	CompoundStatement		685:4:16695:16713	4234188	12					
ANR	4238132	IdentifierDeclStatement	RFlagItem * flag ;	1314:4:34575:34590	4234188	0	True				
ANR	4238133	IdentifierDecl	* flag		4234188	0					
ANR	4238134	IdentifierDeclType	RFlagItem *		4234188	0					
ANR	4238135	Identifier	flag		4234188	1					
ANR	4238136	IdentifierDeclStatement	RListIter * iter ;	1315:4:34596:34611	4234188	1	True				
ANR	4238137	IdentifierDecl	* iter		4234188	0					
ANR	4238138	IdentifierDeclType	RListIter *		4234188	0					
ANR	4238139	Identifier	iter		4234188	1					
ANR	4238140	IdentifierDeclStatement	bool isJson = false ;	1316:4:34617:34636	4234188	2	True				
ANR	4238141	IdentifierDecl	isJson = false		4234188	0					
ANR	4238142	IdentifierDeclType	bool		4234188	0					
ANR	4238143	Identifier	isJson		4234188	1					
ANR	4238144	AssignmentExpression	isJson = false		4234188	2		=			
ANR	4238145	Identifier	false		4234188	0					
ANR	4238146	Identifier	false		4234188	1					
ANR	4238147	IdentifierDeclStatement	const RList * flaglist ;	1317:4:34642:34663	4234188	3	True				
ANR	4238148	IdentifierDecl	* flaglist		4234188	0					
ANR	4238149	IdentifierDeclType	const RList *		4234188	0					
ANR	4238150	Identifier	flaglist		4234188	1					
ANR	4238151	ExpressionStatement	"arg = strchr ( input , ' ' )"	1318:4:34669:34694	4234188	4	True				
ANR	4238152	AssignmentExpression	"arg = strchr ( input , ' ' )"		4234188	0		=			
ANR	4238153	Identifier	arg		4234188	0					
ANR	4238154	CallExpression	"strchr ( input , ' ' )"		4234188	1					
ANR	4238155	Callee	strchr		4234188	0					
ANR	4238156	Identifier	strchr		4234188	0					
ANR	4238157	ArgumentList	input		4234188	1					
ANR	4238158	Argument	input		4234188	0					
ANR	4238159	Identifier	input		4234188	0					
ANR	4238160	Argument	' '		4234188	1					
ANR	4238161	PrimaryExpression	' '		4234188	0					
ANR	4238162	IfStatement	if ( arg )		4234188	5					
ANR	4238163	Condition	arg	1319:8:34704:34706	4234188	0	True				
ANR	4238164	Identifier	arg		4234188	0					
ANR	4238165	CompoundStatement		680:13:16552:16552	4234188	1					
ANR	4238166	ExpressionStatement	"addr = r_num_math ( core -> num , arg + 1 )"	1320:5:34716:34754	4234188	0	True				
ANR	4238167	AssignmentExpression	"addr = r_num_math ( core -> num , arg + 1 )"		4234188	0		=			
ANR	4238168	Identifier	addr		4234188	0					
ANR	4238169	CallExpression	"r_num_math ( core -> num , arg + 1 )"		4234188	1					
ANR	4238170	Callee	r_num_math		4234188	0					
ANR	4238171	Identifier	r_num_math		4234188	0					
ANR	4238172	ArgumentList	core -> num		4234188	1					
ANR	4238173	Argument	core -> num		4234188	0					
ANR	4238174	PtrMemberAccess	core -> num		4234188	0					
ANR	4238175	Identifier	core		4234188	0					
ANR	4238176	Identifier	num		4234188	1					
ANR	4238177	Argument	arg + 1		4234188	1					
ANR	4238178	AdditiveExpression	arg + 1		4234188	0		+			
ANR	4238179	Identifier	arg		4234188	0					
ANR	4238180	PrimaryExpression	1		4234188	1					
ANR	4238181	ExpressionStatement	"flaglist = r_flag_get_list ( core -> flags , addr )"	1322:4:34766:34812	4234188	6	True				
ANR	4238182	AssignmentExpression	"flaglist = r_flag_get_list ( core -> flags , addr )"		4234188	0		=			
ANR	4238183	Identifier	flaglist		4234188	0					
ANR	4238184	CallExpression	"r_flag_get_list ( core -> flags , addr )"		4234188	1					
ANR	4238185	Callee	r_flag_get_list		4234188	0					
ANR	4238186	Identifier	r_flag_get_list		4234188	0					
ANR	4238187	ArgumentList	core -> flags		4234188	1					
ANR	4238188	Argument	core -> flags		4234188	0					
ANR	4238189	PtrMemberAccess	core -> flags		4234188	0					
ANR	4238190	Identifier	core		4234188	0					
ANR	4238191	Identifier	flags		4234188	1					
ANR	4238192	Argument	addr		4234188	1					
ANR	4238193	Identifier	addr		4234188	0					
ANR	4238194	ExpressionStatement	"isJson = strchr ( input , 'j' )"	1323:4:34818:34846	4234188	7	True				
ANR	4238195	AssignmentExpression	"isJson = strchr ( input , 'j' )"		4234188	0		=			
ANR	4238196	Identifier	isJson		4234188	0					
ANR	4238197	CallExpression	"strchr ( input , 'j' )"		4234188	1					
ANR	4238198	Callee	strchr		4234188	0					
ANR	4238199	Identifier	strchr		4234188	0					
ANR	4238200	ArgumentList	input		4234188	1					
ANR	4238201	Argument	input		4234188	0					
ANR	4238202	Identifier	input		4234188	0					
ANR	4238203	Argument	'j'		4234188	1					
ANR	4238204	PrimaryExpression	'j'		4234188	0					
ANR	4238205	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	1324:4:34852:34870	4234188	8	True				
ANR	4238206	IdentifierDecl	* pj = pj_new ( )		4234188	0					
ANR	4238207	IdentifierDeclType	PJ *		4234188	0					
ANR	4238208	Identifier	pj		4234188	1					
ANR	4238209	AssignmentExpression	* pj = pj_new ( )		4234188	2		=			
ANR	4238210	Identifier	pj		4234188	0					
ANR	4238211	CallExpression	pj_new ( )		4234188	1					
ANR	4238212	Callee	pj_new		4234188	0					
ANR	4238213	Identifier	pj_new		4234188	0					
ANR	4238214	ArgumentList			4234188	1					
ANR	4238215	IfStatement	if ( isJson )		4234188	9					
ANR	4238216	Condition	isJson	1325:8:34881:34886	4234188	0	True				
ANR	4238217	Identifier	isJson		4234188	0					
ANR	4238218	CompoundStatement		686:16:16732:16732	4234188	1					
ANR	4238219	ExpressionStatement	pj_a ( pj )	1326:5:34896:34905	4234188	0	True				
ANR	4238220	CallExpression	pj_a ( pj )		4234188	0					
ANR	4238221	Callee	pj_a		4234188	0					
ANR	4238222	Identifier	pj_a		4234188	0					
ANR	4238223	ArgumentList	pj		4234188	1					
ANR	4238224	Argument	pj		4234188	0					
ANR	4238225	Identifier	pj		4234188	0					
ANR	4238226	Statement	r_list_foreach	1328:4:34917:34930	4234188	10	True				
ANR	4238227	Statement	(	1328:19:34932:34932	4234188	11	True				
ANR	4238228	Statement	flaglist	1328:20:34933:34940	4234188	12	True				
ANR	4238229	Statement	","	1328:28:34941:34941	4234188	13	True				
ANR	4238230	Statement	iter	1328:30:34943:34946	4234188	14	True				
ANR	4238231	Statement	","	1328:34:34947:34947	4234188	15	True				
ANR	4238232	Statement	flag	1328:36:34949:34952	4234188	16	True				
ANR	4238233	Statement	)	1328:40:34953:34953	4234188	17	True				
ANR	4238234	CompoundStatement		689:42:16798:16798	4234188	18					
ANR	4238235	IfStatement	if ( flag )		4234188	0					
ANR	4238236	Condition	flag	1329:9:34966:34969	4234188	0	True				
ANR	4238237	Identifier	flag		4234188	0					
ANR	4238238	CompoundStatement		690:15:16815:16815	4234188	1					
ANR	4238239	IfStatement	if ( isJson )		4234188	0					
ANR	4238240	Condition	isJson	1330:10:34984:34989	4234188	0	True				
ANR	4238241	Identifier	isJson		4234188	0					
ANR	4238242	CompoundStatement		691:18:16835:16835	4234188	1					
ANR	4238243	ExpressionStatement	"pj_s ( pj , flag -> name )"	1331:7:35001:35022	4234188	0	True				
ANR	4238244	CallExpression	"pj_s ( pj , flag -> name )"		4234188	0					
ANR	4238245	Callee	pj_s		4234188	0					
ANR	4238246	Identifier	pj_s		4234188	0					
ANR	4238247	ArgumentList	pj		4234188	1					
ANR	4238248	Argument	pj		4234188	0					
ANR	4238249	Identifier	pj		4234188	0					
ANR	4238250	Argument	flag -> name		4234188	1					
ANR	4238251	PtrMemberAccess	flag -> name		4234188	0					
ANR	4238252	Identifier	flag		4234188	0					
ANR	4238253	Identifier	name		4234188	1					
ANR	4238254	ElseStatement	else		4234188	0					
ANR	4238255	CompoundStatement		693:13:16880:16880	4234188	0					
ANR	4238256	ExpressionStatement	r_cons_println ( flag -> name )	1333:7:35046:35073	4234188	0	True				
ANR	4238257	CallExpression	r_cons_println ( flag -> name )		4234188	0					
ANR	4238258	Callee	r_cons_println		4234188	0					
ANR	4238259	Identifier	r_cons_println		4234188	0					
ANR	4238260	ArgumentList	flag -> name		4234188	1					
ANR	4238261	Argument	flag -> name		4234188	0					
ANR	4238262	PtrMemberAccess	flag -> name		4234188	0					
ANR	4238263	Identifier	flag		4234188	0					
ANR	4238264	Identifier	name		4234188	1					
ANR	4238265	IfStatement	if ( isJson )		4234188	19					
ANR	4238266	Condition	isJson	1338:8:35105:35110	4234188	0	True				
ANR	4238267	Identifier	isJson		4234188	0					
ANR	4238268	CompoundStatement		699:16:16956:16956	4234188	1					
ANR	4238269	ExpressionStatement	pj_end ( pj )	1339:5:35120:35131	4234188	0	True				
ANR	4238270	CallExpression	pj_end ( pj )		4234188	0					
ANR	4238271	Callee	pj_end		4234188	0					
ANR	4238272	Identifier	pj_end		4234188	0					
ANR	4238273	ArgumentList	pj		4234188	1					
ANR	4238274	Argument	pj		4234188	0					
ANR	4238275	Identifier	pj		4234188	0					
ANR	4238276	ExpressionStatement	r_cons_println ( pj_string ( pj ) )	1340:5:35138:35169	4234188	1	True				
ANR	4238277	CallExpression	r_cons_println ( pj_string ( pj ) )		4234188	0					
ANR	4238278	Callee	r_cons_println		4234188	0					
ANR	4238279	Identifier	r_cons_println		4234188	0					
ANR	4238280	ArgumentList	pj_string ( pj )		4234188	1					
ANR	4238281	Argument	pj_string ( pj )		4234188	0					
ANR	4238282	CallExpression	pj_string ( pj )		4234188	0					
ANR	4238283	Callee	pj_string		4234188	0					
ANR	4238284	Identifier	pj_string		4234188	0					
ANR	4238285	ArgumentList	pj		4234188	1					
ANR	4238286	Argument	pj		4234188	0					
ANR	4238287	Identifier	pj		4234188	0					
ANR	4238288	IfStatement	if ( pj )		4234188	20					
ANR	4238289	Condition	pj	1343:8:35186:35187	4234188	0	True				
ANR	4238290	Identifier	pj		4234188	0					
ANR	4238291	CompoundStatement		704:12:17033:17033	4234188	1					
ANR	4238292	ExpressionStatement	pj_free ( pj )	1344:5:35197:35209	4234188	0	True				
ANR	4238293	CallExpression	pj_free ( pj )		4234188	0					
ANR	4238294	Callee	pj_free		4234188	0					
ANR	4238295	Identifier	pj_free		4234188	0					
ANR	4238296	ArgumentList	pj		4234188	1					
ANR	4238297	Argument	pj		4234188	0					
ANR	4238298	Identifier	pj		4234188	0					
ANR	4238299	ReturnStatement	return 0 ;	1347:4:35222:35230	4234188	21	True				
ANR	4238300	PrimaryExpression	0		4234188	0					
ANR	4238301	Label	case 'w' :	1349:3:35241:35249	4234188	13	True				
ANR	4238302	CompoundStatement		741:4:17768:17836	4234188	14					
ANR	4238303	ExpressionStatement	"arg = strchr ( input , ' ' )"	1350:4:35257:35282	4234188	0	True				
ANR	4238304	AssignmentExpression	"arg = strchr ( input , ' ' )"		4234188	0		=			
ANR	4238305	Identifier	arg		4234188	0					
ANR	4238306	CallExpression	"strchr ( input , ' ' )"		4234188	1					
ANR	4238307	Callee	strchr		4234188	0					
ANR	4238308	Identifier	strchr		4234188	0					
ANR	4238309	ArgumentList	input		4234188	1					
ANR	4238310	Argument	input		4234188	0					
ANR	4238311	Identifier	input		4234188	0					
ANR	4238312	Argument	' '		4234188	1					
ANR	4238313	PrimaryExpression	' '		4234188	0					
ANR	4238314	IfStatement	if ( ! arg )		4234188	1					
ANR	4238315	Condition	! arg	1351:8:35292:35295	4234188	0	True				
ANR	4238316	UnaryOperationExpression	! arg		4234188	0					
ANR	4238317	UnaryOperator	!		4234188	0					
ANR	4238318	Identifier	arg		4234188	1					
ANR	4238319	CompoundStatement		712:14:17141:17141	4234188	1					
ANR	4238320	ReturnStatement	return 0 ;	1352:5:35305:35313	4234188	0	True				
ANR	4238321	PrimaryExpression	0		4234188	0					
ANR	4238322	ExpressionStatement	arg ++	1354:4:35325:35330	4234188	2	True				
ANR	4238323	PostIncDecOperationExpression	arg ++		4234188	0					
ANR	4238324	Identifier	arg		4234188	0					
ANR	4238325	IncDec	++		4234188	1					
ANR	4238326	IfStatement	if ( ! * arg )		4234188	3					
ANR	4238327	Condition	! * arg	1355:8:35340:35344	4234188	0	True				
ANR	4238328	UnaryOperationExpression	! * arg		4234188	0					
ANR	4238329	UnaryOperator	!		4234188	0					
ANR	4238330	UnaryOperationExpression	* arg		4234188	1					
ANR	4238331	UnaryOperator	*		4234188	0					
ANR	4238332	Identifier	arg		4234188	1					
ANR	4238333	CompoundStatement		716:15:17190:17190	4234188	1					
ANR	4238334	ReturnStatement	return 0 ;	1356:5:35354:35362	4234188	0	True				
ANR	4238335	PrimaryExpression	0		4234188	0					
ANR	4238336	IdentifierDeclStatement	RFlag * f = core -> flags ;	1359:4:35375:35397	4234188	4	True				
ANR	4238337	IdentifierDecl	* f = core -> flags		4234188	0					
ANR	4238338	IdentifierDeclType	RFlag *		4234188	0					
ANR	4238339	Identifier	f		4234188	1					
ANR	4238340	AssignmentExpression	* f = core -> flags		4234188	2		=			
ANR	4238341	Identifier	f		4234188	0					
ANR	4238342	PtrMemberAccess	core -> flags		4234188	1					
ANR	4238343	Identifier	core		4234188	0					
ANR	4238344	Identifier	flags		4234188	1					
ANR	4238345	IdentifierDeclStatement	"RList * temp = r_flag_all_list ( f , true ) ;"	1360:4:35403:35442	4234188	5	True				
ANR	4238346	IdentifierDecl	"* temp = r_flag_all_list ( f , true )"		4234188	0					
ANR	4238347	IdentifierDeclType	RList *		4234188	0					
ANR	4238348	Identifier	temp		4234188	1					
ANR	4238349	AssignmentExpression	"* temp = r_flag_all_list ( f , true )"		4234188	2		=			
ANR	4238350	Identifier	temp		4234188	0					
ANR	4238351	CallExpression	"r_flag_all_list ( f , true )"		4234188	1					
ANR	4238352	Callee	r_flag_all_list		4234188	0					
ANR	4238353	Identifier	r_flag_all_list		4234188	0					
ANR	4238354	ArgumentList	f		4234188	1					
ANR	4238355	Argument	f		4234188	0					
ANR	4238356	Identifier	f		4234188	0					
ANR	4238357	Argument	true		4234188	1					
ANR	4238358	Identifier	true		4234188	0					
ANR	4238359	IdentifierDeclStatement	ut64 loff = 0 ;	1361:4:35448:35461	4234188	6	True				
ANR	4238360	IdentifierDecl	loff = 0		4234188	0					
ANR	4238361	IdentifierDeclType	ut64		4234188	0					
ANR	4238362	Identifier	loff		4234188	1					
ANR	4238363	AssignmentExpression	loff = 0		4234188	2		=			
ANR	4238364	Identifier	loff		4234188	0					
ANR	4238365	PrimaryExpression	0		4234188	1					
ANR	4238366	IdentifierDeclStatement	ut64 uoff = 0 ;	1362:4:35467:35480	4234188	7	True				
ANR	4238367	IdentifierDecl	uoff = 0		4234188	0					
ANR	4238368	IdentifierDeclType	ut64		4234188	0					
ANR	4238369	Identifier	uoff		4234188	1					
ANR	4238370	AssignmentExpression	uoff = 0		4234188	2		=			
ANR	4238371	Identifier	uoff		4234188	0					
ANR	4238372	PrimaryExpression	0		4234188	1					
ANR	4238373	IdentifierDeclStatement	ut64 curseek = core -> offset ;	1363:4:35486:35513	4234188	8	True				
ANR	4238374	IdentifierDecl	curseek = core -> offset		4234188	0					
ANR	4238375	IdentifierDeclType	ut64		4234188	0					
ANR	4238376	Identifier	curseek		4234188	1					
ANR	4238377	AssignmentExpression	curseek = core -> offset		4234188	2		=			
ANR	4238378	Identifier	curseek		4234188	0					
ANR	4238379	PtrMemberAccess	core -> offset		4234188	1					
ANR	4238380	Identifier	core		4234188	0					
ANR	4238381	Identifier	offset		4234188	1					
ANR	4238382	IdentifierDeclStatement	"char * lmatch = NULL , * umatch = NULL ;"	1364:4:35519:35555	4234188	9	True				
ANR	4238383	IdentifierDecl	* lmatch = NULL		4234188	0					
ANR	4238384	IdentifierDeclType	char *		4234188	0					
ANR	4238385	Identifier	lmatch		4234188	1					
ANR	4238386	AssignmentExpression	* lmatch = NULL		4234188	2		=			
ANR	4238387	Identifier	NULL		4234188	0					
ANR	4238388	Identifier	NULL		4234188	1					
ANR	4238389	IdentifierDecl	* umatch = NULL		4234188	1					
ANR	4238390	IdentifierDeclType	char *		4234188	0					
ANR	4238391	Identifier	umatch		4234188	1					
ANR	4238392	AssignmentExpression	* umatch = NULL		4234188	2		=			
ANR	4238393	Identifier	NULL		4234188	0					
ANR	4238394	Identifier	NULL		4234188	1					
ANR	4238395	IdentifierDeclStatement	RFlagItem * flag ;	1365:4:35561:35576	4234188	10	True				
ANR	4238396	IdentifierDecl	* flag		4234188	0					
ANR	4238397	IdentifierDeclType	RFlagItem *		4234188	0					
ANR	4238398	Identifier	flag		4234188	1					
ANR	4238399	IdentifierDeclStatement	RListIter * iter ;	1366:4:35582:35597	4234188	11	True				
ANR	4238400	IdentifierDecl	* iter		4234188	0					
ANR	4238401	IdentifierDeclType	RListIter *		4234188	0					
ANR	4238402	Identifier	iter		4234188	1					
ANR	4238403	ExpressionStatement	"r_list_sort ( temp , & cmpflag )"	1367:4:35603:35631	4234188	12	True				
ANR	4238404	CallExpression	"r_list_sort ( temp , & cmpflag )"		4234188	0					
ANR	4238405	Callee	r_list_sort		4234188	0					
ANR	4238406	Identifier	r_list_sort		4234188	0					
ANR	4238407	ArgumentList	temp		4234188	1					
ANR	4238408	Argument	temp		4234188	0					
ANR	4238409	Identifier	temp		4234188	0					
ANR	4238410	Argument	& cmpflag		4234188	1					
ANR	4238411	UnaryOperationExpression	& cmpflag		4234188	0					
ANR	4238412	UnaryOperator	&		4234188	0					
ANR	4238413	Identifier	cmpflag		4234188	1					
ANR	4238414	Statement	r_list_foreach	1368:4:35637:35650	4234188	13	True				
ANR	4238415	Statement	(	1368:19:35652:35652	4234188	14	True				
ANR	4238416	Statement	temp	1368:20:35653:35656	4234188	15	True				
ANR	4238417	Statement	","	1368:24:35657:35657	4234188	16	True				
ANR	4238418	Statement	iter	1368:26:35659:35662	4234188	17	True				
ANR	4238419	Statement	","	1368:30:35663:35663	4234188	18	True				
ANR	4238420	Statement	flag	1368:32:35665:35668	4234188	19	True				
ANR	4238421	Statement	)	1368:36:35669:35669	4234188	20	True				
ANR	4238422	CompoundStatement		729:38:17514:17514	4234188	21					
ANR	4238423	IfStatement	"if ( strstr ( flag -> name , arg ) != NULL )"		4234188	0					
ANR	4238424	Condition	"strstr ( flag -> name , arg ) != NULL"	1369:9:35682:35714	4234188	0	True				
ANR	4238425	EqualityExpression	"strstr ( flag -> name , arg ) != NULL"		4234188	0		!=			
ANR	4238426	CallExpression	"strstr ( flag -> name , arg )"		4234188	0					
ANR	4238427	Callee	strstr		4234188	0					
ANR	4238428	Identifier	strstr		4234188	0					
ANR	4238429	ArgumentList	flag -> name		4234188	1					
ANR	4238430	Argument	flag -> name		4234188	0					
ANR	4238431	PtrMemberAccess	flag -> name		4234188	0					
ANR	4238432	Identifier	flag		4234188	0					
ANR	4238433	Identifier	name		4234188	1					
ANR	4238434	Argument	arg		4234188	1					
ANR	4238435	Identifier	arg		4234188	0					
ANR	4238436	Identifier	NULL		4234188	1					
ANR	4238437	CompoundStatement		730:44:17560:17560	4234188	1					
ANR	4238438	IfStatement	if ( flag -> offset < core -> offset )		4234188	0					
ANR	4238439	Condition	flag -> offset < core -> offset	1370:10:35729:35755	4234188	0	True				
ANR	4238440	RelationalExpression	flag -> offset < core -> offset		4234188	0		<			
ANR	4238441	PtrMemberAccess	flag -> offset		4234188	0					
ANR	4238442	Identifier	flag		4234188	0					
ANR	4238443	Identifier	offset		4234188	1					
ANR	4238444	PtrMemberAccess	core -> offset		4234188	1					
ANR	4238445	Identifier	core		4234188	0					
ANR	4238446	Identifier	offset		4234188	1					
ANR	4238447	CompoundStatement		731:39:17601:17601	4234188	1					
ANR	4238448	ExpressionStatement	loff = flag -> offset	1371:7:35767:35786	4234188	0	True				
ANR	4238449	AssignmentExpression	loff = flag -> offset		4234188	0		=			
ANR	4238450	Identifier	loff		4234188	0					
ANR	4238451	PtrMemberAccess	flag -> offset		4234188	1					
ANR	4238452	Identifier	flag		4234188	0					
ANR	4238453	Identifier	offset		4234188	1					
ANR	4238454	ExpressionStatement	lmatch = flag -> name	1372:7:35795:35814	4234188	1	True				
ANR	4238455	AssignmentExpression	lmatch = flag -> name		4234188	0		=			
ANR	4238456	Identifier	lmatch		4234188	0					
ANR	4238457	PtrMemberAccess	flag -> name		4234188	1					
ANR	4238458	Identifier	flag		4234188	0					
ANR	4238459	Identifier	name		4234188	1					
ANR	4238460	ContinueStatement	continue ;	1373:7:35823:35831	4234188	2	True				
ANR	4238461	ExpressionStatement	uoff = flag -> offset	1375:6:35847:35866	4234188	1	True				
ANR	4238462	AssignmentExpression	uoff = flag -> offset		4234188	0		=			
ANR	4238463	Identifier	uoff		4234188	0					
ANR	4238464	PtrMemberAccess	flag -> offset		4234188	1					
ANR	4238465	Identifier	flag		4234188	0					
ANR	4238466	Identifier	offset		4234188	1					
ANR	4238467	ExpressionStatement	umatch = flag -> name	1376:6:35874:35893	4234188	2	True				
ANR	4238468	AssignmentExpression	umatch = flag -> name		4234188	0		=			
ANR	4238469	Identifier	umatch		4234188	0					
ANR	4238470	PtrMemberAccess	flag -> name		4234188	1					
ANR	4238471	Identifier	flag		4234188	0					
ANR	4238472	Identifier	name		4234188	1					
ANR	4238473	BreakStatement	break ;	1377:6:35901:35906	4234188	3	True				
ANR	4238474	IdentifierDeclStatement	char * match = ( curseek - loff ) < ( uoff - curseek ) ? lmatch : umatch ;	1380:4:35925:35993	4234188	22	True				
ANR	4238475	IdentifierDecl	* match = ( curseek - loff ) < ( uoff - curseek ) ? lmatch : umatch		4234188	0					
ANR	4238476	IdentifierDeclType	char *		4234188	0					
ANR	4238477	Identifier	match		4234188	1					
ANR	4238478	AssignmentExpression	* match = ( curseek - loff ) < ( uoff - curseek ) ? lmatch : umatch		4234188	2		=			
ANR	4238479	Identifier	match		4234188	0					
ANR	4238480	ConditionalExpression	( curseek - loff ) < ( uoff - curseek ) ? lmatch : umatch		4234188	1					
ANR	4238481	Condition	( curseek - loff ) < ( uoff - curseek )		4234188	0					
ANR	4238482	RelationalExpression	( curseek - loff ) < ( uoff - curseek )		4234188	0		<			
ANR	4238483	AdditiveExpression	curseek - loff		4234188	0		-			
ANR	4238484	Identifier	curseek		4234188	0					
ANR	4238485	Identifier	loff		4234188	1					
ANR	4238486	AdditiveExpression	uoff - curseek		4234188	1		-			
ANR	4238487	Identifier	uoff		4234188	0					
ANR	4238488	Identifier	curseek		4234188	1					
ANR	4238489	Identifier	lmatch		4234188	1					
ANR	4238490	Identifier	umatch		4234188	2					
ANR	4238491	IfStatement	if ( match )		4234188	23					
ANR	4238492	Condition	match	1381:8:36003:36007	4234188	0	True				
ANR	4238493	Identifier	match		4234188	0					
ANR	4238494	CompoundStatement		742:15:17853:17853	4234188	1					
ANR	4238495	IfStatement	if ( * match )		4234188	0					
ANR	4238496	Condition	* match	1382:9:36021:36026	4234188	0	True				
ANR	4238497	UnaryOperationExpression	* match		4234188	0					
ANR	4238498	UnaryOperator	*		4234188	0					
ANR	4238499	Identifier	match		4234188	1					
ANR	4238500	CompoundStatement		743:17:17872:17872	4234188	1					
ANR	4238501	ExpressionStatement	r_cons_println ( match )	1383:6:36037:36059	4234188	0	True				
ANR	4238502	CallExpression	r_cons_println ( match )		4234188	0					
ANR	4238503	Callee	r_cons_println		4234188	0					
ANR	4238504	Identifier	r_cons_println		4234188	0					
ANR	4238505	ArgumentList	match		4234188	1					
ANR	4238506	Argument	match		4234188	0					
ANR	4238507	Identifier	match		4234188	0					
ANR	4238508	ExpressionStatement	r_list_free ( temp )	1386:4:36078:36096	4234188	24	True				
ANR	4238509	CallExpression	r_list_free ( temp )		4234188	0					
ANR	4238510	Callee	r_list_free		4234188	0					
ANR	4238511	Identifier	r_list_free		4234188	0					
ANR	4238512	ArgumentList	temp		4234188	1					
ANR	4238513	Argument	temp		4234188	0					
ANR	4238514	Identifier	temp		4234188	0					
ANR	4238515	ReturnStatement	return 0 ;	1387:4:36102:36110	4234188	25	True				
ANR	4238516	PrimaryExpression	0		4234188	0					
ANR	4238517	Label	default :	1389:3:36120:36127	4234188	15	True				
ANR	4238518	Identifier	default		4234188	0					
ANR	4238519	ExpressionStatement	"arg = strchr ( input , ' ' )"	1390:4:36133:36158	4234188	16	True				
ANR	4238520	AssignmentExpression	"arg = strchr ( input , ' ' )"		4234188	0		=			
ANR	4238521	Identifier	arg		4234188	0					
ANR	4238522	CallExpression	"strchr ( input , ' ' )"		4234188	1					
ANR	4238523	Callee	strchr		4234188	0					
ANR	4238524	Identifier	strchr		4234188	0					
ANR	4238525	ArgumentList	input		4234188	1					
ANR	4238526	Argument	input		4234188	0					
ANR	4238527	Identifier	input		4234188	0					
ANR	4238528	Argument	' '		4234188	1					
ANR	4238529	PrimaryExpression	' '		4234188	0					
ANR	4238530	IfStatement	if ( arg )		4234188	17					
ANR	4238531	Condition	arg	1391:8:36168:36170	4234188	0	True				
ANR	4238532	Identifier	arg		4234188	0					
ANR	4238533	CompoundStatement		752:13:18016:18016	4234188	1					
ANR	4238534	ExpressionStatement	"addr = r_num_math ( core -> num , arg + 1 )"	1392:5:36180:36218	4234188	0	True				
ANR	4238535	AssignmentExpression	"addr = r_num_math ( core -> num , arg + 1 )"		4234188	0		=			
ANR	4238536	Identifier	addr		4234188	0					
ANR	4238537	CallExpression	"r_num_math ( core -> num , arg + 1 )"		4234188	1					
ANR	4238538	Callee	r_num_math		4234188	0					
ANR	4238539	Identifier	r_num_math		4234188	0					
ANR	4238540	ArgumentList	core -> num		4234188	1					
ANR	4238541	Argument	core -> num		4234188	0					
ANR	4238542	PtrMemberAccess	core -> num		4234188	0					
ANR	4238543	Identifier	core		4234188	0					
ANR	4238544	Identifier	num		4234188	1					
ANR	4238545	Argument	arg + 1		4234188	1					
ANR	4238546	AdditiveExpression	arg + 1		4234188	0		+			
ANR	4238547	Identifier	arg		4234188	0					
ANR	4238548	PrimaryExpression	1		4234188	1					
ANR	4238549	BreakStatement	break ;	1394:4:36230:36235	4234188	18	True				
ANR	4238550	ExpressionStatement	"f = r_flag_get_at ( core -> flags , addr , ! strict_offset )"	1396:3:36245:36298	4234188	5	True				
ANR	4238551	AssignmentExpression	"f = r_flag_get_at ( core -> flags , addr , ! strict_offset )"		4234188	0		=			
ANR	4238552	Identifier	f		4234188	0					
ANR	4238553	CallExpression	"r_flag_get_at ( core -> flags , addr , ! strict_offset )"		4234188	1					
ANR	4238554	Callee	r_flag_get_at		4234188	0					
ANR	4238555	Identifier	r_flag_get_at		4234188	0					
ANR	4238556	ArgumentList	core -> flags		4234188	1					
ANR	4238557	Argument	core -> flags		4234188	0					
ANR	4238558	PtrMemberAccess	core -> flags		4234188	0					
ANR	4238559	Identifier	core		4234188	0					
ANR	4238560	Identifier	flags		4234188	1					
ANR	4238561	Argument	addr		4234188	1					
ANR	4238562	Identifier	addr		4234188	0					
ANR	4238563	Argument	! strict_offset		4234188	2					
ANR	4238564	UnaryOperationExpression	! strict_offset		4234188	0					
ANR	4238565	UnaryOperator	!		4234188	0					
ANR	4238566	Identifier	strict_offset		4234188	1					
ANR	4238567	IfStatement	if ( f )		4234188	6					
ANR	4238568	Condition	f	1397:7:36307:36307	4234188	0	True				
ANR	4238569	Identifier	f		4234188	0					
ANR	4238570	CompoundStatement		758:10:18153:18153	4234188	1					
ANR	4238571	IfStatement	if ( f -> offset != addr )		4234188	0					
ANR	4238572	Condition	f -> offset != addr	1398:8:36320:36336	4234188	0	True				
ANR	4238573	EqualityExpression	f -> offset != addr		4234188	0		!=			
ANR	4238574	PtrMemberAccess	f -> offset		4234188	0					
ANR	4238575	Identifier	f		4234188	0					
ANR	4238576	Identifier	offset		4234188	1					
ANR	4238577	Identifier	addr		4234188	1					
ANR	4238578	CompoundStatement		759:27:18182:18182	4234188	1					
ANR	4238579	IfStatement	"if ( strchr ( input , 'j' ) )"		4234188	0					
ANR	4238580	Condition	"strchr ( input , 'j' )"	1400:9:36391:36409	4234188	0	True				
ANR	4238581	CallExpression	"strchr ( input , 'j' )"		4234188	0					
ANR	4238582	Callee	strchr		4234188	0					
ANR	4238583	Identifier	strchr		4234188	0					
ANR	4238584	ArgumentList	input		4234188	1					
ANR	4238585	Argument	input		4234188	0					
ANR	4238586	Identifier	input		4234188	0					
ANR	4238587	Argument	'j'		4234188	1					
ANR	4238588	PrimaryExpression	'j'		4234188	0					
ANR	4238589	CompoundStatement		761:30:18255:18255	4234188	1					
ANR	4238590	ExpressionStatement	"r_cons_printf ( ""{\\""name\\"":\\""%s\\"",\\""offset\\"":%d}\\n"" , f -> name , ( int ) ( addr - f -> offset ) )"	1401:6:36420:36517	4234188	0	True				
ANR	4238591	CallExpression	"r_cons_printf ( ""{\\""name\\"":\\""%s\\"",\\""offset\\"":%d}\\n"" , f -> name , ( int ) ( addr - f -> offset ) )"		4234188	0					
ANR	4238592	Callee	r_cons_printf		4234188	0					
ANR	4238593	Identifier	r_cons_printf		4234188	0					
ANR	4238594	ArgumentList	"""{\\""name\\"":\\""%s\\"",\\""offset\\"":%d}\\n"""		4234188	1					
ANR	4238595	Argument	"""{\\""name\\"":\\""%s\\"",\\""offset\\"":%d}\\n"""		4234188	0					
ANR	4238596	PrimaryExpression	"""{\\""name\\"":\\""%s\\"",\\""offset\\"":%d}\\n"""		4234188	0					
ANR	4238597	Argument	f -> name		4234188	1					
ANR	4238598	PtrMemberAccess	f -> name		4234188	0					
ANR	4238599	Identifier	f		4234188	0					
ANR	4238600	Identifier	name		4234188	1					
ANR	4238601	Argument	( int ) ( addr - f -> offset )		4234188	2					
ANR	4238602	CastExpression	( int ) ( addr - f -> offset )		4234188	0					
ANR	4238603	CastTarget	int		4234188	0					
ANR	4238604	AdditiveExpression	addr - f -> offset		4234188	1		-			
ANR	4238605	Identifier	addr		4234188	0					
ANR	4238606	PtrMemberAccess	f -> offset		4234188	1					
ANR	4238607	Identifier	f		4234188	0					
ANR	4238608	Identifier	offset		4234188	1					
ANR	4238609	ElseStatement	else		4234188	0					
ANR	4238610	CompoundStatement		764:12:18374:18374	4234188	0					
ANR	4238611	ExpressionStatement	"r_cons_printf ( ""%s + %d\\n"" , f -> name , ( int ) ( addr - f -> offset ) )"	1404:6:36539:36612	4234188	0	True				
ANR	4238612	CallExpression	"r_cons_printf ( ""%s + %d\\n"" , f -> name , ( int ) ( addr - f -> offset ) )"		4234188	0					
ANR	4238613	Callee	r_cons_printf		4234188	0					
ANR	4238614	Identifier	r_cons_printf		4234188	0					
ANR	4238615	ArgumentList	"""%s + %d\\n"""		4234188	1					
ANR	4238616	Argument	"""%s + %d\\n"""		4234188	0					
ANR	4238617	PrimaryExpression	"""%s + %d\\n"""		4234188	0					
ANR	4238618	Argument	f -> name		4234188	1					
ANR	4238619	PtrMemberAccess	f -> name		4234188	0					
ANR	4238620	Identifier	f		4234188	0					
ANR	4238621	Identifier	name		4234188	1					
ANR	4238622	Argument	( int ) ( addr - f -> offset )		4234188	2					
ANR	4238623	CastExpression	( int ) ( addr - f -> offset )		4234188	0					
ANR	4238624	CastTarget	int		4234188	0					
ANR	4238625	AdditiveExpression	addr - f -> offset		4234188	1		-			
ANR	4238626	Identifier	addr		4234188	0					
ANR	4238627	PtrMemberAccess	f -> offset		4234188	1					
ANR	4238628	Identifier	f		4234188	0					
ANR	4238629	Identifier	offset		4234188	1					
ANR	4238630	ElseStatement	else		4234188	0					
ANR	4238631	CompoundStatement		768:11:18475:18475	4234188	0					
ANR	4238632	IfStatement	"if ( strchr ( input , 'j' ) )"		4234188	0					
ANR	4238633	Condition	"strchr ( input , 'j' )"	1408:9:36643:36661	4234188	0	True				
ANR	4238634	CallExpression	"strchr ( input , 'j' )"		4234188	0					
ANR	4238635	Callee	strchr		4234188	0					
ANR	4238636	Identifier	strchr		4234188	0					
ANR	4238637	ArgumentList	input		4234188	1					
ANR	4238638	Argument	input		4234188	0					
ANR	4238639	Identifier	input		4234188	0					
ANR	4238640	Argument	'j'		4234188	1					
ANR	4238641	PrimaryExpression	'j'		4234188	0					
ANR	4238642	CompoundStatement		769:30:18507:18507	4234188	1					
ANR	4238643	ExpressionStatement	"r_cons_printf ( ""{\\""name\\"":\\""%s\\""}\\n"" , f -> name )"	1409:6:36672:36728	4234188	0	True				
ANR	4238644	CallExpression	"r_cons_printf ( ""{\\""name\\"":\\""%s\\""}\\n"" , f -> name )"		4234188	0					
ANR	4238645	Callee	r_cons_printf		4234188	0					
ANR	4238646	Identifier	r_cons_printf		4234188	0					
ANR	4238647	ArgumentList	"""{\\""name\\"":\\""%s\\""}\\n"""		4234188	1					
ANR	4238648	Argument	"""{\\""name\\"":\\""%s\\""}\\n"""		4234188	0					
ANR	4238649	PrimaryExpression	"""{\\""name\\"":\\""%s\\""}\\n"""		4234188	0					
ANR	4238650	Argument	f -> name		4234188	1					
ANR	4238651	PtrMemberAccess	f -> name		4234188	0					
ANR	4238652	Identifier	f		4234188	0					
ANR	4238653	Identifier	name		4234188	1					
ANR	4238654	ElseStatement	else		4234188	0					
ANR	4238655	CompoundStatement		772:12:18585:18585	4234188	0					
ANR	4238656	ExpressionStatement	r_cons_println ( f -> name )	1412:6:36750:36774	4234188	0	True				
ANR	4238657	CallExpression	r_cons_println ( f -> name )		4234188	0					
ANR	4238658	Callee	r_cons_println		4234188	0					
ANR	4238659	Identifier	r_cons_println		4234188	0					
ANR	4238660	ArgumentList	f -> name		4234188	1					
ANR	4238661	Argument	f -> name		4234188	0					
ANR	4238662	PtrMemberAccess	f -> name		4234188	0					
ANR	4238663	Identifier	f		4234188	0					
ANR	4238664	Identifier	name		4234188	1					
ANR	4238665	BreakStatement	break ;	1417:2:36800:36805	4234188	87	True				
ANR	4238666	Label	case '?' :	1418:1:36808:36816	4234188	88	True				
ANR	4238667	Label	default :	1419:1:36819:36826	4234188	89	True				
ANR	4238668	Identifier	default		4234188	0					
ANR	4238669	IfStatement	if ( input [ 1 ] )		4234188	90					
ANR	4238670	Condition	input [ 1 ]	1420:6:36834:36841	4234188	0	True				
ANR	4238671	ArrayIndexing	input [ 1 ]		4234188	0					
ANR	4238672	Identifier	input		4234188	0					
ANR	4238673	PrimaryExpression	1		4234188	1					
ANR	4238674	CompoundStatement		781:16:18687:18687	4234188	1					
ANR	4238675	ExpressionStatement	"core -> num -> value = r_flag_get ( core -> flags , input + 1 ) ? 1 : 0"	1421:3:36849:36909	4234188	0	True				
ANR	4238676	AssignmentExpression	"core -> num -> value = r_flag_get ( core -> flags , input + 1 ) ? 1 : 0"		4234188	0		=			
ANR	4238677	PtrMemberAccess	core -> num -> value		4234188	0					
ANR	4238678	PtrMemberAccess	core -> num		4234188	0					
ANR	4238679	Identifier	core		4234188	0					
ANR	4238680	Identifier	num		4234188	1					
ANR	4238681	Identifier	value		4234188	1					
ANR	4238682	ConditionalExpression	"r_flag_get ( core -> flags , input + 1 ) ? 1 : 0"		4234188	1					
ANR	4238683	Condition	"r_flag_get ( core -> flags , input + 1 )"		4234188	0					
ANR	4238684	CallExpression	"r_flag_get ( core -> flags , input + 1 )"		4234188	0					
ANR	4238685	Callee	r_flag_get		4234188	0					
ANR	4238686	Identifier	r_flag_get		4234188	0					
ANR	4238687	ArgumentList	core -> flags		4234188	1					
ANR	4238688	Argument	core -> flags		4234188	0					
ANR	4238689	PtrMemberAccess	core -> flags		4234188	0					
ANR	4238690	Identifier	core		4234188	0					
ANR	4238691	Identifier	flags		4234188	1					
ANR	4238692	Argument	input + 1		4234188	1					
ANR	4238693	AdditiveExpression	input + 1		4234188	0		+			
ANR	4238694	Identifier	input		4234188	0					
ANR	4238695	PrimaryExpression	1		4234188	1					
ANR	4238696	PrimaryExpression	1		4234188	1					
ANR	4238697	PrimaryExpression	0		4234188	2					
ANR	4238698	ElseStatement	else		4234188	0					
ANR	4238699	CompoundStatement		783:9:18763:18763	4234188	0					
ANR	4238700	ExpressionStatement	"r_core_cmd_help ( core , help_msg_f )"	1423:3:36925:36959	4234188	0	True				
ANR	4238701	CallExpression	"r_core_cmd_help ( core , help_msg_f )"		4234188	0					
ANR	4238702	Callee	r_core_cmd_help		4234188	0					
ANR	4238703	Identifier	r_core_cmd_help		4234188	0					
ANR	4238704	ArgumentList	core		4234188	1					
ANR	4238705	Argument	core		4234188	0					
ANR	4238706	Identifier	core		4234188	0					
ANR	4238707	Argument	help_msg_f		4234188	1					
ANR	4238708	Identifier	help_msg_f		4234188	0					
ANR	4238709	BreakStatement	break ;	1424:3:36964:36969	4234188	1	True				
ANR	4238710	ExpressionStatement	free ( str )	1427:1:36979:36989	4234188	11	True				
ANR	4238711	CallExpression	free ( str )		4234188	0					
ANR	4238712	Callee	free		4234188	0					
ANR	4238713	Identifier	free		4234188	0					
ANR	4238714	ArgumentList	str		4234188	1					
ANR	4238715	Argument	str		4234188	0					
ANR	4238716	Identifier	str		4234188	0					
ANR	4238717	ReturnStatement	return 0 ;	1428:1:36992:37000	4234188	12	True				
ANR	4238718	PrimaryExpression	0		4234188	0					
ANR	4238719	ReturnType	static int		4234188	1					
ANR	4238720	Identifier	cmd_flag		4234188	2					
ANR	4238721	ParameterList	"void * data , const char * input"		4234188	3					
ANR	4238722	Parameter	void * data	640:20:18125:18134	4234188	0	True				
ANR	4238723	ParameterType	void *		4234188	0					
ANR	4238724	Identifier	data		4234188	1					
ANR	4238725	Parameter	const char * input	640:32:18137:18153	4234188	1	True				
ANR	4238726	ParameterType	const char *		4234188	0					
ANR	4238727	Identifier	input		4234188	1					
ANR	4238728	CFGEntryNode	ENTRY		4234188		True				
ANR	4238729	CFGExitNode	EXIT		4234188		True				
ANR	4238730	CFGErrorNode	ERROR		4234188		True				
ANR	4238731	Symbol	* sp		4234188						
ANR	4238732	Symbol	dec		4234188						
ANR	4238733	Symbol	* input		4234188						
ANR	4238734	Symbol	delta		4234188						
ANR	4238735	Symbol	core -> offset		4234188						
ANR	4238736	Symbol	strchr		4234188						
ANR	4238737	Symbol	& cmpflag		4234188						
ANR	4238738	Symbol	r_flag_all_list		4234188						
ANR	4238739	Symbol	strncmp		4234188						
ANR	4238740	Symbol	bsze		4234188						
ANR	4238741	Symbol	& core -> flags -> spaces		4234188						
ANR	4238742	Symbol	* core -> num		4234188						
ANR	4238743	Symbol	r_flag_get_i		4234188						
ANR	4238744	Symbol	f -> space		4234188						
ANR	4238745	Symbol	s2		4234188						
ANR	4238746	Symbol	s3		4234188						
ANR	4238747	Symbol	item		4234188						
ANR	4238748	Symbol	r_flag_space_cur		4234188						
ANR	4238749	Symbol	old		4234188						
ANR	4238750	Symbol	iter		4234188						
ANR	4238751	Symbol	addFlag		4234188						
ANR	4238752	Symbol	str		4234188						
ANR	4238753	Symbol	help_msg_fs		4234188						
ANR	4238754	Symbol	input		4234188						
ANR	4238755	Symbol	flaglist		4234188						
ANR	4238756	Symbol	r_str_trim_ro		4234188						
ANR	4238757	Symbol	cmd		4234188						
ANR	4238758	Symbol	item -> realname		4234188						
ANR	4238759	Symbol	* flag		4234188						
ANR	4238760	Symbol	* realname		4234188						
ANR	4238761	Symbol	* arg		4234188						
ANR	4238762	Symbol	& base		4234188						
ANR	4238763	Symbol	flag		4234188						
ANR	4238764	Symbol	f -> name		4234188						
ANR	4238765	Symbol	* core		4234188						
ANR	4238766	Symbol	glob		4234188						
ANR	4238767	Symbol	help_msg_f		4234188						
ANR	4238768	Symbol	core -> anal		4234188						
ANR	4238769	Symbol	ASCII_MAX		4234188						
ANR	4238770	Symbol	fcn		4234188						
ANR	4238771	Symbol	flagenum		4234188						
ANR	4238772	Symbol	arg		4234188						
ANR	4238773	Symbol	* str		4234188						
ANR	4238774	Symbol	sp		4234188						
ANR	4238775	Symbol	r_flag_get		4234188						
ANR	4238776	Symbol	atoi		4234188						
ANR	4238777	Symbol	* name		4234188						
ANR	4238778	Symbol	f		4234188						
ANR	4238779	Symbol	core -> flags		4234188						
ANR	4238780	Symbol	r_flag_set		4234188						
ANR	4238781	Symbol	* color ++		4234188						
ANR	4238782	Symbol	off		4234188						
ANR	4238783	Symbol	comment_needs_free		4234188						
ANR	4238784	Symbol	r_flag_color		4234188						
ANR	4238785	Symbol	p		4234188						
ANR	4238786	Symbol	q		4234188						
ANR	4238787	Symbol	* eq		4234188						
ANR	4238788	Symbol	s		4234188						
ANR	4238789	Symbol	UT8_MAX		4234188						
ANR	4238790	Symbol	f -> offset		4234188						
ANR	4238791	Symbol	item -> name		4234188						
ANR	4238792	Symbol	to		4234188						
ANR	4238793	Symbol	r_flag_get_at		4234188						
ANR	4238794	Symbol	find_flag_after_foreach		4234188						
ANR	4238795	Symbol	data		4234188						
ANR	4238796	Symbol	pj_string		4234188						
ANR	4238797	Symbol	core -> flags -> base		4234188						
ANR	4238798	Symbol	core -> num -> value		4234188						
ANR	4238799	Symbol	flag_to_flag		4234188						
ANR	4238800	Symbol	r_str_trim_dup		4234188						
ANR	4238801	Symbol	curseek		4234188						
ANR	4238802	Symbol	isJson		4234188						
ANR	4238803	Symbol	* ptr		4234188						
ANR	4238804	Symbol	sp -> name		4234188						
ANR	4238805	Symbol	from		4234188						
ANR	4238806	Symbol	flag -> offset		4234188						
ANR	4238807	Symbol	core -> num		4234188						
ANR	4238808	Symbol	item -> offset		4234188						
ANR	4238809	Symbol	ret		4234188						
ANR	4238810	Symbol	lmatch		4234188						
ANR	4238811	Symbol	b64		4234188						
ANR	4238812	Symbol	NULL		4234188						
ANR	4238813	Symbol	umatch		4234188						
ANR	4238814	Symbol	eq		4234188						
ANR	4238815	Symbol	item -> comment		4234188						
ANR	4238816	Symbol	core		4234188						
ANR	4238817	Symbol	strict_offset		4234188						
ANR	4238818	Symbol	loff		4234188						
ANR	4238819	Symbol	strstr		4234188						
ANR	4238820	Symbol	name		4234188						
ANR	4238821	Symbol	true		4234188						
ANR	4238822	Symbol	* cstr		4234188						
ANR	4238823	Symbol	cstr		4234188						
ANR	4238824	Symbol	help_msg_fc		4234188						
ANR	4238825	Symbol	* match		4234188						
ANR	4238826	Symbol	fi		4234188						
ANR	4238827	Symbol	help_msg_fd		4234188						
ANR	4238828	Symbol	color		4234188						
ANR	4238829	Symbol	* s3		4234188						
ANR	4238830	Symbol	* s2		4234188						
ANR	4238831	Symbol	flagname		4234188						
ANR	4238832	Symbol	r_str_newf		4234188						
ANR	4238833	Symbol	newarg		4234188						
ANR	4238834	Symbol	r_num_math		4234188						
ANR	4238835	Symbol	* core -> flags		4234188						
ANR	4238836	Symbol	* item		4234188						
ANR	4238837	Symbol	pj_drain		4234188						
ANR	4238838	Symbol	addr		4234188						
ANR	4238839	Symbol	r_flag_get_list		4234188						
ANR	4238840	Symbol	* * core		4234188						
ANR	4238841	Symbol	mask		4234188						
ANR	4238842	Symbol	r_flag_relocate		4234188						
ANR	4238843	Symbol	temp		4234188						
ANR	4238844	Symbol	r_base64_decode_dyn		4234188						
ANR	4238845	Symbol	* ptr ++		4234188						
ANR	4238846	Symbol	flag -> name		4234188						
ANR	4238847	Symbol	* p ++		4234188						
ANR	4238848	Symbol	false		4234188						
ANR	4238849	Symbol	match		4234188						
ANR	4238850	Symbol	* color		4234188						
ANR	4238851	Symbol	uoff		4234188						
ANR	4238852	Symbol	ptr		4234188						
ANR	4238853	Symbol	realname		4234188						
ANR	4238854	Symbol	* f		4234188						
ANR	4238855	Symbol	r_anal_get_fcn_in		4234188						
ANR	4238856	Symbol	* flagname		4234188						
ANR	4238857	Symbol	adjust_offset		4234188						
ANR	4238858	Symbol	* p		4234188						
ANR	4238859	Symbol	comment		4234188						
ANR	4238860	Symbol	pj		4234188						
ANR	4238861	Symbol	pj_new		4234188						
ANR	4238862	Symbol	strdup		4234188						
ANR	4238863	Symbol	* q		4234188						
ANR	4238864	Symbol	* s		4234188						
ANR	4238865	Symbol	* eq ++		4234188						
ANR	4238866	Symbol	item -> size		4234188						
ANR	4238867	Symbol	base		4234188						
