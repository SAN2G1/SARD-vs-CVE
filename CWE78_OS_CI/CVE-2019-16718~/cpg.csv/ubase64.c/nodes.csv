command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6368418	File	data/converged/CVE-2019-16718~_radare2/ubase64.c								
ANR	6368419	DeclStmt									
ANR	6368420	Decl							const char	const char [ ]	cb64
ANR	6368421	DeclStmt									
ANR	6368422	Decl							const char	const char [ ]	cd64
ANR	6368423	Function	local_b64_encode	15:0:435:780							
ANR	6368424	FunctionDef	"local_b64_encode (const ut8 in [ 3 ] , char out [ 4 ] , int len)"		6368423	0					
ANR	6368425	CompoundStatement		15:68:503:780	6368423	0					
ANR	6368426	IfStatement	if ( len < 1 )		6368423	0					
ANR	6368427	Condition	len < 1	16:5:510:516	6368423	0	True				
ANR	6368428	RelationalExpression	len < 1		6368423	0		<			
ANR	6368429	Identifier	len		6368423	0					
ANR	6368430	PrimaryExpression	1		6368423	1					
ANR	6368431	CompoundStatement		2:14:15:15	6368423	1					
ANR	6368432	ReturnStatement	return ;	17:2:523:529	6368423	0	True				
ANR	6368433	ExpressionStatement	out [ 0 ] = cb64 [ in [ 0 ] >> 2 ]	19:1:535:560	6368423	1	True				
ANR	6368434	AssignmentExpression	out [ 0 ] = cb64 [ in [ 0 ] >> 2 ]		6368423	0		=			
ANR	6368435	ArrayIndexing	out [ 0 ]		6368423	0					
ANR	6368436	Identifier	out		6368423	0					
ANR	6368437	PrimaryExpression	0		6368423	1					
ANR	6368438	ArrayIndexing	cb64 [ in [ 0 ] >> 2 ]		6368423	1					
ANR	6368439	Identifier	cb64		6368423	0					
ANR	6368440	ShiftExpression	in [ 0 ] >> 2		6368423	1		>>			
ANR	6368441	ArrayIndexing	in [ 0 ]		6368423	0					
ANR	6368442	Identifier	in		6368423	0					
ANR	6368443	PrimaryExpression	0		6368423	1					
ANR	6368444	PrimaryExpression	2		6368423	1					
ANR	6368445	ExpressionStatement	out [ 1 ] = cb64 [ ( ( in [ 0 ] & 0x03 ) << 4 ) | ( ( len > 1 ) ? ( ( in [ 1 ] & 0xf0 ) >> 4 ) : 0 ) ]	20:1:563:639	6368423	2	True				
ANR	6368446	AssignmentExpression	out [ 1 ] = cb64 [ ( ( in [ 0 ] & 0x03 ) << 4 ) | ( ( len > 1 ) ? ( ( in [ 1 ] & 0xf0 ) >> 4 ) : 0 ) ]		6368423	0		=			
ANR	6368447	ArrayIndexing	out [ 1 ]		6368423	0					
ANR	6368448	Identifier	out		6368423	0					
ANR	6368449	PrimaryExpression	1		6368423	1					
ANR	6368450	ArrayIndexing	cb64 [ ( ( in [ 0 ] & 0x03 ) << 4 ) | ( ( len > 1 ) ? ( ( in [ 1 ] & 0xf0 ) >> 4 ) : 0 ) ]		6368423	1					
ANR	6368451	Identifier	cb64		6368423	0					
ANR	6368452	InclusiveOrExpression	( ( in [ 0 ] & 0x03 ) << 4 ) | ( ( len > 1 ) ? ( ( in [ 1 ] & 0xf0 ) >> 4 ) : 0 )		6368423	1		|			
ANR	6368453	ShiftExpression	( in [ 0 ] & 0x03 ) << 4		6368423	0		<<			
ANR	6368454	BitAndExpression	in [ 0 ] & 0x03		6368423	0		&			
ANR	6368455	ArrayIndexing	in [ 0 ]		6368423	0					
ANR	6368456	Identifier	in		6368423	0					
ANR	6368457	PrimaryExpression	0		6368423	1					
ANR	6368458	PrimaryExpression	0x03		6368423	1					
ANR	6368459	PrimaryExpression	4		6368423	1					
ANR	6368460	ConditionalExpression	( len > 1 ) ? ( ( in [ 1 ] & 0xf0 ) >> 4 ) : 0		6368423	1					
ANR	6368461	Condition	len > 1		6368423	0					
ANR	6368462	RelationalExpression	len > 1		6368423	0		>			
ANR	6368463	Identifier	len		6368423	0					
ANR	6368464	PrimaryExpression	1		6368423	1					
ANR	6368465	ShiftExpression	( in [ 1 ] & 0xf0 ) >> 4		6368423	1		>>			
ANR	6368466	BitAndExpression	in [ 1 ] & 0xf0		6368423	0		&			
ANR	6368467	ArrayIndexing	in [ 1 ]		6368423	0					
ANR	6368468	Identifier	in		6368423	0					
ANR	6368469	PrimaryExpression	1		6368423	1					
ANR	6368470	PrimaryExpression	0xf0		6368423	1					
ANR	6368471	PrimaryExpression	4		6368423	1					
ANR	6368472	PrimaryExpression	0		6368423	2					
ANR	6368473	ExpressionStatement	out [ 2 ] = ( len > 1 ? cb64 [ ( ( in [ 1 ] & 0x0f ) << 2 ) | ( len > 2 ? ( ( in [ 2 ] & 0xc0 ) >> 6 ) : 0 ) ] : '=' )	21:1:642:732	6368423	3	True				
ANR	6368474	AssignmentExpression	out [ 2 ] = ( len > 1 ? cb64 [ ( ( in [ 1 ] & 0x0f ) << 2 ) | ( len > 2 ? ( ( in [ 2 ] & 0xc0 ) >> 6 ) : 0 ) ] : '=' )		6368423	0		=			
ANR	6368475	ArrayIndexing	out [ 2 ]		6368423	0					
ANR	6368476	Identifier	out		6368423	0					
ANR	6368477	PrimaryExpression	2		6368423	1					
ANR	6368478	ConditionalExpression	len > 1 ? cb64 [ ( ( in [ 1 ] & 0x0f ) << 2 ) | ( len > 2 ? ( ( in [ 2 ] & 0xc0 ) >> 6 ) : 0 ) ] : '='		6368423	1					
ANR	6368479	Condition	len > 1		6368423	0					
ANR	6368480	RelationalExpression	len > 1		6368423	0		>			
ANR	6368481	Identifier	len		6368423	0					
ANR	6368482	PrimaryExpression	1		6368423	1					
ANR	6368483	ArrayIndexing	cb64 [ ( ( in [ 1 ] & 0x0f ) << 2 ) | ( len > 2 ? ( ( in [ 2 ] & 0xc0 ) >> 6 ) : 0 ) ]		6368423	1					
ANR	6368484	Identifier	cb64		6368423	0					
ANR	6368485	InclusiveOrExpression	( ( in [ 1 ] & 0x0f ) << 2 ) | ( len > 2 ? ( ( in [ 2 ] & 0xc0 ) >> 6 ) : 0 )		6368423	1		|			
ANR	6368486	ShiftExpression	( in [ 1 ] & 0x0f ) << 2		6368423	0		<<			
ANR	6368487	BitAndExpression	in [ 1 ] & 0x0f		6368423	0		&			
ANR	6368488	ArrayIndexing	in [ 1 ]		6368423	0					
ANR	6368489	Identifier	in		6368423	0					
ANR	6368490	PrimaryExpression	1		6368423	1					
ANR	6368491	PrimaryExpression	0x0f		6368423	1					
ANR	6368492	PrimaryExpression	2		6368423	1					
ANR	6368493	ConditionalExpression	len > 2 ? ( ( in [ 2 ] & 0xc0 ) >> 6 ) : 0		6368423	1					
ANR	6368494	Condition	len > 2		6368423	0					
ANR	6368495	RelationalExpression	len > 2		6368423	0		>			
ANR	6368496	Identifier	len		6368423	0					
ANR	6368497	PrimaryExpression	2		6368423	1					
ANR	6368498	ShiftExpression	( in [ 2 ] & 0xc0 ) >> 6		6368423	1		>>			
ANR	6368499	BitAndExpression	in [ 2 ] & 0xc0		6368423	0		&			
ANR	6368500	ArrayIndexing	in [ 2 ]		6368423	0					
ANR	6368501	Identifier	in		6368423	0					
ANR	6368502	PrimaryExpression	2		6368423	1					
ANR	6368503	PrimaryExpression	0xc0		6368423	1					
ANR	6368504	PrimaryExpression	6		6368423	1					
ANR	6368505	PrimaryExpression	0		6368423	2					
ANR	6368506	PrimaryExpression	'='		6368423	2					
ANR	6368507	ExpressionStatement	out [ 3 ] = ( len > 2 ? cb64 [ in [ 2 ] & 0x3f ] : '=' )	22:1:735:778	6368423	4	True				
ANR	6368508	AssignmentExpression	out [ 3 ] = ( len > 2 ? cb64 [ in [ 2 ] & 0x3f ] : '=' )		6368423	0		=			
ANR	6368509	ArrayIndexing	out [ 3 ]		6368423	0					
ANR	6368510	Identifier	out		6368423	0					
ANR	6368511	PrimaryExpression	3		6368423	1					
ANR	6368512	ConditionalExpression	len > 2 ? cb64 [ in [ 2 ] & 0x3f ] : '='		6368423	1					
ANR	6368513	Condition	len > 2		6368423	0					
ANR	6368514	RelationalExpression	len > 2		6368423	0		>			
ANR	6368515	Identifier	len		6368423	0					
ANR	6368516	PrimaryExpression	2		6368423	1					
ANR	6368517	ArrayIndexing	cb64 [ in [ 2 ] & 0x3f ]		6368423	1					
ANR	6368518	Identifier	cb64		6368423	0					
ANR	6368519	BitAndExpression	in [ 2 ] & 0x3f		6368423	1		&			
ANR	6368520	ArrayIndexing	in [ 2 ]		6368423	0					
ANR	6368521	Identifier	in		6368423	0					
ANR	6368522	PrimaryExpression	2		6368423	1					
ANR	6368523	PrimaryExpression	0x3f		6368423	1					
ANR	6368524	PrimaryExpression	'='		6368423	2					
ANR	6368525	ReturnType	static void		6368423	1					
ANR	6368526	Identifier	local_b64_encode		6368423	2					
ANR	6368527	ParameterList	"const ut8 in [ 3 ] , char out [ 4 ] , int len"		6368423	3					
ANR	6368528	Parameter	const ut8 in [ 3 ]	15:29:464:478	6368423	0	True				
ANR	6368529	ParameterType	const ut8 [ 3 ]		6368423	0					
ANR	6368530	Identifier	in		6368423	1					
ANR	6368531	Parameter	char out [ 4 ]	15:46:481:491	6368423	1	True				
ANR	6368532	ParameterType	char [ 4 ]		6368423	0					
ANR	6368533	Identifier	out		6368423	1					
ANR	6368534	Parameter	int len	15:59:494:500	6368423	2	True				
ANR	6368535	ParameterType	int		6368423	0					
ANR	6368536	Identifier	len		6368423	1					
ANR	6368537	CFGEntryNode	ENTRY		6368423		True				
ANR	6368538	CFGExitNode	EXIT		6368423		True				
ANR	6368539	Symbol	* * in		6368423						
ANR	6368540	Symbol	cb64		6368423						
ANR	6368541	Symbol	len		6368423						
ANR	6368542	Symbol	in		6368423						
ANR	6368543	Symbol	* in		6368423						
ANR	6368544	Symbol	* out		6368423						
ANR	6368545	Symbol	out		6368423						
ANR	6368546	Symbol	* cb64		6368423						
ANR	6368547	Symbol	* len		6368423						
ANR	6368548	Function	local_b64_decode	25:0:783:1179							
ANR	6368549	FunctionDef	"local_b64_decode (const char in [ 4 ] , ut8 out [ 3 ])"		6368548	0					
ANR	6368550	CompoundStatement		25:58:841:1179	6368548	0					
ANR	6368551	IdentifierDeclStatement	int len = 3 ;	26:1:844:855	6368548	0	True				
ANR	6368552	IdentifierDecl	len = 3		6368548	0					
ANR	6368553	IdentifierDeclType	int		6368548	0					
ANR	6368554	Identifier	len		6368548	1					
ANR	6368555	AssignmentExpression	len = 3		6368548	2		=			
ANR	6368556	Identifier	len		6368548	0					
ANR	6368557	PrimaryExpression	3		6368548	1					
ANR	6368558	IdentifierDeclStatement	"ut8 i , v [ 4 ] = { 0 } ;"	27:1:858:877	6368548	1	True				
ANR	6368559	IdentifierDecl	i		6368548	0					
ANR	6368560	IdentifierDeclType	ut8		6368548	0					
ANR	6368561	Identifier	i		6368548	1					
ANR	6368562	IdentifierDecl	v [ 4 ] = { 0 }		6368548	1					
ANR	6368563	IdentifierDeclType	ut8 [ 4 ]		6368548	0					
ANR	6368564	Identifier	v		6368548	1					
ANR	6368565	PrimaryExpression	4		6368548	2					
ANR	6368566	AssignmentExpression	v [ 4 ] = { 0 }		6368548	3		=			
ANR	6368567	Identifier	v		6368548	0					
ANR	6368568	InitializerList	0		6368548	1					
ANR	6368569	PrimaryExpression	0		6368548	0					
ANR	6368570	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		6368548	2					
ANR	6368571	ForInit	i = 0 ;	28:6:885:890	6368548	0	True				
ANR	6368572	AssignmentExpression	i = 0		6368548	0		=			
ANR	6368573	Identifier	i		6368548	0					
ANR	6368574	PrimaryExpression	0		6368548	1					
ANR	6368575	Condition	i < 4	28:13:892:896	6368548	1	True				
ANR	6368576	RelationalExpression	i < 4		6368548	0		<			
ANR	6368577	Identifier	i		6368548	0					
ANR	6368578	PrimaryExpression	4		6368548	1					
ANR	6368579	PostIncDecOperationExpression	i ++	28:20:899:901	6368548	2	True				
ANR	6368580	Identifier	i		6368548	0					
ANR	6368581	IncDec	++		6368548	1					
ANR	6368582	CompoundStatement		4:25:62:62	6368548	3					
ANR	6368583	IfStatement	if ( in [ i ] < 43 || in [ i ] > 122 )		6368548	0					
ANR	6368584	Condition	in [ i ] < 43 || in [ i ] > 122	29:6:912:936	6368548	0	True				
ANR	6368585	OrExpression	in [ i ] < 43 || in [ i ] > 122		6368548	0		||			
ANR	6368586	RelationalExpression	in [ i ] < 43		6368548	0		<			
ANR	6368587	ArrayIndexing	in [ i ]		6368548	0					
ANR	6368588	Identifier	in		6368548	0					
ANR	6368589	Identifier	i		6368548	1					
ANR	6368590	PrimaryExpression	43		6368548	1					
ANR	6368591	RelationalExpression	in [ i ] > 122		6368548	1		>			
ANR	6368592	ArrayIndexing	in [ i ]		6368548	0					
ANR	6368593	Identifier	in		6368548	0					
ANR	6368594	Identifier	i		6368548	1					
ANR	6368595	PrimaryExpression	122		6368548	1					
ANR	6368596	CompoundStatement		5:33:97:97	6368548	1					
ANR	6368597	ReturnStatement	return - 1 ;	30:3:944:953	6368548	0	True				
ANR	6368598	UnaryOperationExpression	- 1		6368548	0					
ANR	6368599	UnaryOperator	-		6368548	0					
ANR	6368600	PrimaryExpression	1		6368548	1					
ANR	6368601	ExpressionStatement	v [ i ] = cd64 [ in [ i ] - 43 ]	32:2:961:984	6368548	1	True				
ANR	6368602	AssignmentExpression	v [ i ] = cd64 [ in [ i ] - 43 ]		6368548	0		=			
ANR	6368603	ArrayIndexing	v [ i ]		6368548	0					
ANR	6368604	Identifier	v		6368548	0					
ANR	6368605	Identifier	i		6368548	1					
ANR	6368606	ArrayIndexing	cd64 [ in [ i ] - 43 ]		6368548	1					
ANR	6368607	Identifier	cd64		6368548	0					
ANR	6368608	AdditiveExpression	in [ i ] - 43		6368548	1		-			
ANR	6368609	ArrayIndexing	in [ i ]		6368548	0					
ANR	6368610	Identifier	in		6368548	0					
ANR	6368611	Identifier	i		6368548	1					
ANR	6368612	PrimaryExpression	43		6368548	1					
ANR	6368613	IfStatement	if ( v [ i ] == '$' )		6368548	2					
ANR	6368614	Condition	v [ i ] == '$'	33:6:992:1002	6368548	0	True				
ANR	6368615	EqualityExpression	v [ i ] == '$'		6368548	0		==			
ANR	6368616	ArrayIndexing	v [ i ]		6368548	0					
ANR	6368617	Identifier	v		6368548	0					
ANR	6368618	Identifier	i		6368548	1					
ANR	6368619	PrimaryExpression	'$'		6368548	1					
ANR	6368620	CompoundStatement		9:19:163:163	6368548	1					
ANR	6368621	ExpressionStatement	len = i ? i - 1 : - 1	34:3:1010:1028	6368548	0	True				
ANR	6368622	AssignmentExpression	len = i ? i - 1 : - 1		6368548	0		=			
ANR	6368623	Identifier	len		6368548	0					
ANR	6368624	ConditionalExpression	i ? i - 1 : - 1		6368548	1					
ANR	6368625	Condition	i		6368548	0					
ANR	6368626	Identifier	i		6368548	0					
ANR	6368627	AdditiveExpression	i - 1		6368548	1		-			
ANR	6368628	Identifier	i		6368548	0					
ANR	6368629	PrimaryExpression	1		6368548	1					
ANR	6368630	UnaryOperationExpression	- 1		6368548	2					
ANR	6368631	UnaryOperator	-		6368548	0					
ANR	6368632	PrimaryExpression	1		6368548	1					
ANR	6368633	BreakStatement	break ;	35:3:1033:1038	6368548	1	True				
ANR	6368634	ExpressionStatement	v [ i ] -= 62	37:2:1046:1056	6368548	3	True				
ANR	6368635	AssignmentExpression	v [ i ] -= 62		6368548	0		-=			
ANR	6368636	ArrayIndexing	v [ i ]		6368548	0					
ANR	6368637	Identifier	v		6368548	0					
ANR	6368638	Identifier	i		6368548	1					
ANR	6368639	PrimaryExpression	62		6368548	1					
ANR	6368640	ExpressionStatement	out [ 0 ] = v [ 0 ] << 2 | v [ 1 ] >> 4	39:1:1062:1092	6368548	3	True				
ANR	6368641	AssignmentExpression	out [ 0 ] = v [ 0 ] << 2 | v [ 1 ] >> 4		6368548	0		=			
ANR	6368642	ArrayIndexing	out [ 0 ]		6368548	0					
ANR	6368643	Identifier	out		6368548	0					
ANR	6368644	PrimaryExpression	0		6368548	1					
ANR	6368645	InclusiveOrExpression	v [ 0 ] << 2 | v [ 1 ] >> 4		6368548	1		|			
ANR	6368646	ShiftExpression	v [ 0 ] << 2		6368548	0		<<			
ANR	6368647	ArrayIndexing	v [ 0 ]		6368548	0					
ANR	6368648	Identifier	v		6368548	0					
ANR	6368649	PrimaryExpression	0		6368548	1					
ANR	6368650	PrimaryExpression	2		6368548	1					
ANR	6368651	ShiftExpression	v [ 1 ] >> 4		6368548	1		>>			
ANR	6368652	ArrayIndexing	v [ 1 ]		6368548	0					
ANR	6368653	Identifier	v		6368548	0					
ANR	6368654	PrimaryExpression	1		6368548	1					
ANR	6368655	PrimaryExpression	4		6368548	1					
ANR	6368656	ExpressionStatement	out [ 1 ] = v [ 1 ] << 4 | v [ 2 ] >> 2	40:1:1095:1125	6368548	4	True				
ANR	6368657	AssignmentExpression	out [ 1 ] = v [ 1 ] << 4 | v [ 2 ] >> 2		6368548	0		=			
ANR	6368658	ArrayIndexing	out [ 1 ]		6368548	0					
ANR	6368659	Identifier	out		6368548	0					
ANR	6368660	PrimaryExpression	1		6368548	1					
ANR	6368661	InclusiveOrExpression	v [ 1 ] << 4 | v [ 2 ] >> 2		6368548	1		|			
ANR	6368662	ShiftExpression	v [ 1 ] << 4		6368548	0		<<			
ANR	6368663	ArrayIndexing	v [ 1 ]		6368548	0					
ANR	6368664	Identifier	v		6368548	0					
ANR	6368665	PrimaryExpression	1		6368548	1					
ANR	6368666	PrimaryExpression	4		6368548	1					
ANR	6368667	ShiftExpression	v [ 2 ] >> 2		6368548	1		>>			
ANR	6368668	ArrayIndexing	v [ 2 ]		6368548	0					
ANR	6368669	Identifier	v		6368548	0					
ANR	6368670	PrimaryExpression	2		6368548	1					
ANR	6368671	PrimaryExpression	2		6368548	1					
ANR	6368672	ExpressionStatement	out [ 2 ] = ( ( v [ 2 ] << 6 ) & 0xc0 ) | v [ 3 ]	41:1:1128:1164	6368548	5	True				
ANR	6368673	AssignmentExpression	out [ 2 ] = ( ( v [ 2 ] << 6 ) & 0xc0 ) | v [ 3 ]		6368548	0		=			
ANR	6368674	ArrayIndexing	out [ 2 ]		6368548	0					
ANR	6368675	Identifier	out		6368548	0					
ANR	6368676	PrimaryExpression	2		6368548	1					
ANR	6368677	InclusiveOrExpression	( ( v [ 2 ] << 6 ) & 0xc0 ) | v [ 3 ]		6368548	1		|			
ANR	6368678	BitAndExpression	( v [ 2 ] << 6 ) & 0xc0		6368548	0		&			
ANR	6368679	ShiftExpression	v [ 2 ] << 6		6368548	0		<<			
ANR	6368680	ArrayIndexing	v [ 2 ]		6368548	0					
ANR	6368681	Identifier	v		6368548	0					
ANR	6368682	PrimaryExpression	2		6368548	1					
ANR	6368683	PrimaryExpression	6		6368548	1					
ANR	6368684	PrimaryExpression	0xc0		6368548	1					
ANR	6368685	ArrayIndexing	v [ 3 ]		6368548	1					
ANR	6368686	Identifier	v		6368548	0					
ANR	6368687	PrimaryExpression	3		6368548	1					
ANR	6368688	ReturnStatement	return len ;	42:1:1167:1177	6368548	6	True				
ANR	6368689	Identifier	len		6368548	0					
ANR	6368690	ReturnType	static int		6368548	1					
ANR	6368691	Identifier	local_b64_decode		6368548	2					
ANR	6368692	ParameterList	"const char in [ 4 ] , ut8 out [ 3 ]"		6368548	3					
ANR	6368693	Parameter	const char in [ 4 ]	25:28:811:826	6368548	0	True				
ANR	6368694	ParameterType	const char [ 4 ]		6368548	0					
ANR	6368695	Identifier	in		6368548	1					
ANR	6368696	Parameter	ut8 out [ 3 ]	25:46:829:838	6368548	1	True				
ANR	6368697	ParameterType	ut8 [ 3 ]		6368548	0					
ANR	6368698	Identifier	out		6368548	1					
ANR	6368699	CFGEntryNode	ENTRY		6368548		True				
ANR	6368700	CFGExitNode	EXIT		6368548		True				
ANR	6368701	Symbol	* v		6368548						
ANR	6368702	Symbol	* * i		6368548						
ANR	6368703	Symbol	in		6368548						
ANR	6368704	Symbol	* in		6368548						
ANR	6368705	Symbol	i		6368548						
ANR	6368706	Symbol	* cd64		6368548						
ANR	6368707	Symbol	out		6368548						
ANR	6368708	Symbol	cd64		6368548						
ANR	6368709	Symbol	* i		6368548						
ANR	6368710	Symbol	* * in		6368548						
ANR	6368711	Symbol	len		6368548						
ANR	6368712	Symbol	v		6368548						
ANR	6368713	Symbol	* out		6368548						
ANR	6368714	Function	r_base64_decode	45:0:1182:1547							
ANR	6368715	FunctionDef	"r_base64_decode (ut8 * bout , const char * bin , int len)"		6368714	0					
ANR	6368716	CompoundStatement		45:63:1245:1547	6368714	0					
ANR	6368717	IdentifierDeclStatement	"int in , out ;"	46:1:1248:1259	6368714	0	True				
ANR	6368718	IdentifierDecl	in		6368714	0					
ANR	6368719	IdentifierDeclType	int		6368714	0					
ANR	6368720	Identifier	in		6368714	1					
ANR	6368721	IdentifierDecl	out		6368714	1					
ANR	6368722	IdentifierDeclType	int		6368714	0					
ANR	6368723	Identifier	out		6368714	1					
ANR	6368724	IfStatement	if ( len < 0 )		6368714	1					
ANR	6368725	Condition	len < 0	47:5:1266:1272	6368714	0	True				
ANR	6368726	RelationalExpression	len < 0		6368714	0		<			
ANR	6368727	Identifier	len		6368714	0					
ANR	6368728	PrimaryExpression	0		6368714	1					
ANR	6368729	CompoundStatement		3:14:29:29	6368714	1					
ANR	6368730	ExpressionStatement	len = strlen ( bin )	48:2:1279:1297	6368714	0	True				
ANR	6368731	AssignmentExpression	len = strlen ( bin )		6368714	0		=			
ANR	6368732	Identifier	len		6368714	0					
ANR	6368733	CallExpression	strlen ( bin )		6368714	1					
ANR	6368734	Callee	strlen		6368714	0					
ANR	6368735	Identifier	strlen		6368714	0					
ANR	6368736	ArgumentList	bin		6368714	1					
ANR	6368737	Argument	bin		6368714	0					
ANR	6368738	Identifier	bin		6368714	0					
ANR	6368739	ForStatement	for ( in = out = 0 ; in + 3 < len ; in += 4 )		6368714	2					
ANR	6368740	ForInit	in = out = 0 ;	50:6:1308:1320	6368714	0	True				
ANR	6368741	AssignmentExpression	in = out = 0		6368714	0		=			
ANR	6368742	Identifier	in		6368714	0					
ANR	6368743	AssignmentExpression	out = 0		6368714	1		=			
ANR	6368744	Identifier	out		6368714	0					
ANR	6368745	PrimaryExpression	0		6368714	1					
ANR	6368746	Condition	in + 3 < len	50:20:1322:1333	6368714	1	True				
ANR	6368747	RelationalExpression	in + 3 < len		6368714	0		<			
ANR	6368748	AdditiveExpression	in + 3		6368714	0		+			
ANR	6368749	Identifier	in		6368714	0					
ANR	6368750	PrimaryExpression	3		6368714	1					
ANR	6368751	Identifier	len		6368714	1					
ANR	6368752	AssignmentExpression	in += 4	50:34:1336:1342	6368714	2	True	+=			
ANR	6368753	Identifier	in		6368714	0					
ANR	6368754	PrimaryExpression	4		6368714	1					
ANR	6368755	CompoundStatement		7:2:103:152	6368714	3					
ANR	6368756	IdentifierDeclStatement	"int ret = local_b64_decode ( bin + in , bout + out ) ;"	51:2:1349:1398	6368714	0	True				
ANR	6368757	IdentifierDecl	"ret = local_b64_decode ( bin + in , bout + out )"		6368714	0					
ANR	6368758	IdentifierDeclType	int		6368714	0					
ANR	6368759	Identifier	ret		6368714	1					
ANR	6368760	AssignmentExpression	"ret = local_b64_decode ( bin + in , bout + out )"		6368714	2		=			
ANR	6368761	Identifier	ret		6368714	0					
ANR	6368762	CallExpression	"local_b64_decode ( bin + in , bout + out )"		6368714	1					
ANR	6368763	Callee	local_b64_decode		6368714	0					
ANR	6368764	Identifier	local_b64_decode		6368714	0					
ANR	6368765	ArgumentList	bin + in		6368714	1					
ANR	6368766	Argument	bin + in		6368714	0					
ANR	6368767	AdditiveExpression	bin + in		6368714	0		+			
ANR	6368768	Identifier	bin		6368714	0					
ANR	6368769	Identifier	in		6368714	1					
ANR	6368770	Argument	bout + out		6368714	1					
ANR	6368771	AdditiveExpression	bout + out		6368714	0		+			
ANR	6368772	Identifier	bout		6368714	0					
ANR	6368773	Identifier	out		6368714	1					
ANR	6368774	IfStatement	if ( ret < 1 )		6368714	1					
ANR	6368775	Condition	ret < 1	52:6:1406:1412	6368714	0	True				
ANR	6368776	RelationalExpression	ret < 1		6368714	0		<			
ANR	6368777	Identifier	ret		6368714	0					
ANR	6368778	PrimaryExpression	1		6368714	1					
ANR	6368779	CompoundStatement		8:15:169:169	6368714	1					
ANR	6368780	ReturnStatement	return - 1 ;	53:3:1420:1429	6368714	0	True				
ANR	6368781	UnaryOperationExpression	- 1		6368714	0					
ANR	6368782	UnaryOperator	-		6368714	0					
ANR	6368783	PrimaryExpression	1		6368714	1					
ANR	6368784	ExpressionStatement	out += ret	55:2:1437:1447	6368714	2	True				
ANR	6368785	AssignmentExpression	out += ret		6368714	0		+=			
ANR	6368786	Identifier	out		6368714	0					
ANR	6368787	Identifier	ret		6368714	1					
ANR	6368788	ExpressionStatement	bout [ out ] = 0	57:1:1453:1466	6368714	3	True				
ANR	6368789	AssignmentExpression	bout [ out ] = 0		6368714	0		=			
ANR	6368790	ArrayIndexing	bout [ out ]		6368714	0					
ANR	6368791	Identifier	bout		6368714	0					
ANR	6368792	Identifier	out		6368714	1					
ANR	6368793	PrimaryExpression	0		6368714	1					
ANR	6368794	ReturnStatement	return ( in != out ) ? out : - 1 ;	59:1:1518:1545	6368714	4	True				
ANR	6368795	ConditionalExpression	( in != out ) ? out : - 1		6368714	0					
ANR	6368796	Condition	in != out		6368714	0					
ANR	6368797	EqualityExpression	in != out		6368714	0		!=			
ANR	6368798	Identifier	in		6368714	0					
ANR	6368799	Identifier	out		6368714	1					
ANR	6368800	Identifier	out		6368714	1					
ANR	6368801	UnaryOperationExpression	- 1		6368714	2					
ANR	6368802	UnaryOperator	-		6368714	0					
ANR	6368803	PrimaryExpression	1		6368714	1					
ANR	6368804	ReturnType	R_API int		6368714	1					
ANR	6368805	Identifier	r_base64_decode		6368714	2					
ANR	6368806	ParameterList	"ut8 * bout , const char * bin , int len"		6368714	3					
ANR	6368807	Parameter	ut8 * bout	45:26:1208:1216	6368714	0	True				
ANR	6368808	ParameterType	ut8 *		6368714	0					
ANR	6368809	Identifier	bout		6368714	1					
ANR	6368810	Parameter	const char * bin	45:37:1219:1233	6368714	1	True				
ANR	6368811	ParameterType	const char *		6368714	0					
ANR	6368812	Identifier	bin		6368714	1					
ANR	6368813	Parameter	int len	45:54:1236:1242	6368714	2	True				
ANR	6368814	ParameterType	int		6368714	0					
ANR	6368815	Identifier	len		6368714	1					
ANR	6368816	CFGEntryNode	ENTRY		6368714		True				
ANR	6368817	CFGExitNode	EXIT		6368714		True				
ANR	6368818	Symbol	ret		6368714						
ANR	6368819	Symbol	strlen		6368714						
ANR	6368820	Symbol	bout		6368714						
ANR	6368821	Symbol	local_b64_decode		6368714						
ANR	6368822	Symbol	len		6368714						
ANR	6368823	Symbol	in		6368714						
ANR	6368824	Symbol	bin		6368714						
ANR	6368825	Symbol	* out		6368714						
ANR	6368826	Symbol	* bout		6368714						
ANR	6368827	Symbol	out		6368714						
ANR	6368828	Function	r_base64_decode_dyn	62:0:1550:1816							
ANR	6368829	FunctionDef	"r_base64_decode_dyn (const char * in , int len)"		6368828	0					
ANR	6368830	CompoundStatement		62:56:1606:1816	6368828	0					
ANR	6368831	IdentifierDeclStatement	ut8 * bout ;	63:1:1609:1618	6368828	0	True				
ANR	6368832	IdentifierDecl	* bout		6368828	0					
ANR	6368833	IdentifierDeclType	ut8 *		6368828	0					
ANR	6368834	Identifier	bout		6368828	1					
ANR	6368835	IfStatement	if ( ! in )		6368828	1					
ANR	6368836	Condition	! in	64:5:1625:1627	6368828	0	True				
ANR	6368837	UnaryOperationExpression	! in		6368828	0					
ANR	6368838	UnaryOperator	!		6368828	0					
ANR	6368839	Identifier	in		6368828	1					
ANR	6368840	CompoundStatement		3:10:23:23	6368828	1					
ANR	6368841	ReturnStatement	return NULL ;	65:2:1634:1645	6368828	0	True				
ANR	6368842	Identifier	NULL		6368828	0					
ANR	6368843	IfStatement	if ( len < 0 )		6368828	2					
ANR	6368844	Condition	len < 0	67:5:1655:1661	6368828	0	True				
ANR	6368845	RelationalExpression	len < 0		6368828	0		<			
ANR	6368846	Identifier	len		6368828	0					
ANR	6368847	PrimaryExpression	0		6368828	1					
ANR	6368848	CompoundStatement		6:14:57:57	6368828	1					
ANR	6368849	ExpressionStatement	len = strlen ( in ) + 1	68:2:1668:1689	6368828	0	True				
ANR	6368850	AssignmentExpression	len = strlen ( in ) + 1		6368828	0		=			
ANR	6368851	Identifier	len		6368828	0					
ANR	6368852	AdditiveExpression	strlen ( in ) + 1		6368828	1		+			
ANR	6368853	CallExpression	strlen ( in )		6368828	0					
ANR	6368854	Callee	strlen		6368828	0					
ANR	6368855	Identifier	strlen		6368828	0					
ANR	6368856	ArgumentList	in		6368828	1					
ANR	6368857	Argument	in		6368828	0					
ANR	6368858	Identifier	in		6368828	0					
ANR	6368859	PrimaryExpression	1		6368828	1					
ANR	6368860	ExpressionStatement	"bout = calloc ( 4 , len + 1 )"	70:1:1695:1721	6368828	3	True				
ANR	6368861	AssignmentExpression	"bout = calloc ( 4 , len + 1 )"		6368828	0		=			
ANR	6368862	Identifier	bout		6368828	0					
ANR	6368863	CallExpression	"calloc ( 4 , len + 1 )"		6368828	1					
ANR	6368864	Callee	calloc		6368828	0					
ANR	6368865	Identifier	calloc		6368828	0					
ANR	6368866	ArgumentList	4		6368828	1					
ANR	6368867	Argument	4		6368828	0					
ANR	6368868	PrimaryExpression	4		6368828	0					
ANR	6368869	Argument	len + 1		6368828	1					
ANR	6368870	AdditiveExpression	len + 1		6368828	0		+			
ANR	6368871	Identifier	len		6368828	0					
ANR	6368872	PrimaryExpression	1		6368828	1					
ANR	6368873	IfStatement	"if ( r_base64_decode ( bout , in , len ) == - 1 )"		6368828	4					
ANR	6368874	Condition	"r_base64_decode ( bout , in , len ) == - 1"	71:5:1728:1764	6368828	0	True				
ANR	6368875	EqualityExpression	"r_base64_decode ( bout , in , len ) == - 1"		6368828	0		==			
ANR	6368876	CallExpression	"r_base64_decode ( bout , in , len )"		6368828	0					
ANR	6368877	Callee	r_base64_decode		6368828	0					
ANR	6368878	Identifier	r_base64_decode		6368828	0					
ANR	6368879	ArgumentList	bout		6368828	1					
ANR	6368880	Argument	bout		6368828	0					
ANR	6368881	Identifier	bout		6368828	0					
ANR	6368882	Argument	in		6368828	1					
ANR	6368883	Identifier	in		6368828	0					
ANR	6368884	Argument	len		6368828	2					
ANR	6368885	Identifier	len		6368828	0					
ANR	6368886	UnaryOperationExpression	- 1		6368828	1					
ANR	6368887	UnaryOperator	-		6368828	0					
ANR	6368888	PrimaryExpression	1		6368828	1					
ANR	6368889	CompoundStatement		10:44:160:160	6368828	1					
ANR	6368890	ExpressionStatement	free ( bout )	72:2:1771:1782	6368828	0	True				
ANR	6368891	CallExpression	free ( bout )		6368828	0					
ANR	6368892	Callee	free		6368828	0					
ANR	6368893	Identifier	free		6368828	0					
ANR	6368894	ArgumentList	bout		6368828	1					
ANR	6368895	Argument	bout		6368828	0					
ANR	6368896	Identifier	bout		6368828	0					
ANR	6368897	ReturnStatement	return NULL ;	73:2:1786:1797	6368828	1	True				
ANR	6368898	Identifier	NULL		6368828	0					
ANR	6368899	ReturnStatement	return bout ;	75:1:1803:1814	6368828	5	True				
ANR	6368900	Identifier	bout		6368828	0					
ANR	6368901	ReturnType	R_API ut8 *		6368828	1					
ANR	6368902	Identifier	r_base64_decode_dyn		6368828	2					
ANR	6368903	ParameterList	"const char * in , int len"		6368828	3					
ANR	6368904	Parameter	const char * in	62:31:1581:1594	6368828	0	True				
ANR	6368905	ParameterType	const char *		6368828	0					
ANR	6368906	Identifier	in		6368828	1					
ANR	6368907	Parameter	int len	62:47:1597:1603	6368828	1	True				
ANR	6368908	ParameterType	int		6368828	0					
ANR	6368909	Identifier	len		6368828	1					
ANR	6368910	CFGEntryNode	ENTRY		6368828		True				
ANR	6368911	CFGExitNode	EXIT		6368828		True				
ANR	6368912	Symbol	strlen		6368828						
ANR	6368913	Symbol	r_base64_decode		6368828						
ANR	6368914	Symbol	bout		6368828						
ANR	6368915	Symbol	NULL		6368828						
ANR	6368916	Symbol	len		6368828						
ANR	6368917	Symbol	in		6368828						
ANR	6368918	Symbol	calloc		6368828						
ANR	6368919	Function	r_base64_encode	78:0:1819:2121							
ANR	6368920	FunctionDef	"r_base64_encode (char * bout , const ut8 * bin , int len)"		6368919	0					
ANR	6368921	CompoundStatement		78:63:1882:2121	6368919	0					
ANR	6368922	IdentifierDeclStatement	"int in , out ;"	79:1:1885:1896	6368919	0	True				
ANR	6368923	IdentifierDecl	in		6368919	0					
ANR	6368924	IdentifierDeclType	int		6368919	0					
ANR	6368925	Identifier	in		6368919	1					
ANR	6368926	IdentifierDecl	out		6368919	1					
ANR	6368927	IdentifierDeclType	int		6368919	0					
ANR	6368928	Identifier	out		6368919	1					
ANR	6368929	IfStatement	if ( len < 0 )		6368919	1					
ANR	6368930	Condition	len < 0	80:5:1903:1909	6368919	0	True				
ANR	6368931	RelationalExpression	len < 0		6368919	0		<			
ANR	6368932	Identifier	len		6368919	0					
ANR	6368933	PrimaryExpression	0		6368919	1					
ANR	6368934	CompoundStatement		3:14:29:29	6368919	1					
ANR	6368935	ExpressionStatement	len = strlen ( ( const char * ) bin )	81:2:1916:1948	6368919	0	True				
ANR	6368936	AssignmentExpression	len = strlen ( ( const char * ) bin )		6368919	0		=			
ANR	6368937	Identifier	len		6368919	0					
ANR	6368938	CallExpression	strlen ( ( const char * ) bin )		6368919	1					
ANR	6368939	Callee	strlen		6368919	0					
ANR	6368940	Identifier	strlen		6368919	0					
ANR	6368941	ArgumentList	( const char * ) bin		6368919	1					
ANR	6368942	Argument	( const char * ) bin		6368919	0					
ANR	6368943	CastExpression	( const char * ) bin		6368919	0					
ANR	6368944	CastTarget	const char *		6368919	0					
ANR	6368945	Identifier	bin		6368919	1					
ANR	6368946	ForStatement	"for ( in = out = 0 ; in < len ; in += 3 , out += 4 )"		6368919	2					
ANR	6368947	ForInit	in = out = 0 ;	83:6:1959:1971	6368919	0	True				
ANR	6368948	AssignmentExpression	in = out = 0		6368919	0		=			
ANR	6368949	Identifier	in		6368919	0					
ANR	6368950	AssignmentExpression	out = 0		6368919	1		=			
ANR	6368951	Identifier	out		6368919	0					
ANR	6368952	PrimaryExpression	0		6368919	1					
ANR	6368953	Condition	in < len	83:20:1973:1980	6368919	1	True				
ANR	6368954	RelationalExpression	in < len		6368919	0		<			
ANR	6368955	Identifier	in		6368919	0					
ANR	6368956	Identifier	len		6368919	1					
ANR	6368957	Expression	"in += 3 , out += 4"	83:30:1983:1999	6368919	2	True				
ANR	6368958	AssignmentExpression	in += 3		6368919	0		+=			
ANR	6368959	Identifier	in		6368919	0					
ANR	6368960	PrimaryExpression	3		6368919	1					
ANR	6368961	AssignmentExpression	out += 4		6368919	1		+=			
ANR	6368962	Identifier	out		6368919	0					
ANR	6368963	PrimaryExpression	4		6368919	1					
ANR	6368964	CompoundStatement		6:49:119:119	6368919	3					
ANR	6368965	ExpressionStatement	"local_b64_encode ( bin + in , ( char * ) bout + out , ( len - in ) > 3 ? 3 : len - in )"	84:2:2006:2087	6368919	0	True				
ANR	6368966	CallExpression	"local_b64_encode ( bin + in , ( char * ) bout + out , ( len - in ) > 3 ? 3 : len - in )"		6368919	0					
ANR	6368967	Callee	local_b64_encode		6368919	0					
ANR	6368968	Identifier	local_b64_encode		6368919	0					
ANR	6368969	ArgumentList	bin + in		6368919	1					
ANR	6368970	Argument	bin + in		6368919	0					
ANR	6368971	AdditiveExpression	bin + in		6368919	0		+			
ANR	6368972	Identifier	bin		6368919	0					
ANR	6368973	Identifier	in		6368919	1					
ANR	6368974	Argument	( char * ) bout + out		6368919	1					
ANR	6368975	AdditiveExpression	( char * ) bout + out		6368919	0		+			
ANR	6368976	CastExpression	( char * ) bout		6368919	0					
ANR	6368977	CastTarget	char *		6368919	0					
ANR	6368978	Identifier	bout		6368919	1					
ANR	6368979	Identifier	out		6368919	1					
ANR	6368980	Argument	( len - in ) > 3 ? 3 : len - in		6368919	2					
ANR	6368981	ConditionalExpression	( len - in ) > 3 ? 3 : len - in		6368919	0					
ANR	6368982	Condition	( len - in ) > 3		6368919	0					
ANR	6368983	RelationalExpression	( len - in ) > 3		6368919	0		>			
ANR	6368984	AdditiveExpression	len - in		6368919	0		-			
ANR	6368985	Identifier	len		6368919	0					
ANR	6368986	Identifier	in		6368919	1					
ANR	6368987	PrimaryExpression	3		6368919	1					
ANR	6368988	PrimaryExpression	3		6368919	1					
ANR	6368989	AdditiveExpression	len - in		6368919	2		-			
ANR	6368990	Identifier	len		6368919	0					
ANR	6368991	Identifier	in		6368919	1					
ANR	6368992	ExpressionStatement	bout [ out ] = 0	87:1:2093:2106	6368919	3	True				
ANR	6368993	AssignmentExpression	bout [ out ] = 0		6368919	0		=			
ANR	6368994	ArrayIndexing	bout [ out ]		6368919	0					
ANR	6368995	Identifier	bout		6368919	0					
ANR	6368996	Identifier	out		6368919	1					
ANR	6368997	PrimaryExpression	0		6368919	1					
ANR	6368998	ReturnStatement	return out ;	88:1:2109:2119	6368919	4	True				
ANR	6368999	Identifier	out		6368919	0					
ANR	6369000	ReturnType	R_API int		6368919	1					
ANR	6369001	Identifier	r_base64_encode		6368919	2					
ANR	6369002	ParameterList	"char * bout , const ut8 * bin , int len"		6368919	3					
ANR	6369003	Parameter	char * bout	78:26:1845:1854	6368919	0	True				
ANR	6369004	ParameterType	char *		6368919	0					
ANR	6369005	Identifier	bout		6368919	1					
ANR	6369006	Parameter	const ut8 * bin	78:38:1857:1870	6368919	1	True				
ANR	6369007	ParameterType	const ut8 *		6368919	0					
ANR	6369008	Identifier	bin		6368919	1					
ANR	6369009	Parameter	int len	78:54:1873:1879	6368919	2	True				
ANR	6369010	ParameterType	int		6368919	0					
ANR	6369011	Identifier	len		6368919	1					
ANR	6369012	CFGEntryNode	ENTRY		6368919		True				
ANR	6369013	CFGExitNode	EXIT		6368919		True				
ANR	6369014	Symbol	strlen		6368919						
ANR	6369015	Symbol	bout		6368919						
ANR	6369016	Symbol	len		6368919						
ANR	6369017	Symbol	in		6368919						
ANR	6369018	Symbol	bin		6368919						
ANR	6369019	Symbol	* out		6368919						
ANR	6369020	Symbol	* bout		6368919						
ANR	6369021	Symbol	out		6368919						
ANR	6369022	Function	r_base64_encode_dyn	91:0:2124:2598							
ANR	6369023	FunctionDef	"r_base64_encode_dyn (const char * str , int len)"		6369022	0					
ANR	6369024	CompoundStatement		91:58:2182:2598	6369022	0					
ANR	6369025	IdentifierDeclStatement	char * bout ;	92:1:2185:2195	6369022	0	True				
ANR	6369026	IdentifierDecl	* bout		6369022	0					
ANR	6369027	IdentifierDeclType	char *		6369022	0					
ANR	6369028	Identifier	bout		6369022	1					
ANR	6369029	IdentifierDeclStatement	"int in , out ;"	93:1:2198:2209	6369022	1	True				
ANR	6369030	IdentifierDecl	in		6369022	0					
ANR	6369031	IdentifierDeclType	int		6369022	0					
ANR	6369032	Identifier	in		6369022	1					
ANR	6369033	IdentifierDecl	out		6369022	1					
ANR	6369034	IdentifierDeclType	int		6369022	0					
ANR	6369035	Identifier	out		6369022	1					
ANR	6369036	IfStatement	if ( ! str )		6369022	2					
ANR	6369037	Condition	! str	94:5:2216:2219	6369022	0	True				
ANR	6369038	UnaryOperationExpression	! str		6369022	0					
ANR	6369039	UnaryOperator	!		6369022	0					
ANR	6369040	Identifier	str		6369022	1					
ANR	6369041	CompoundStatement		4:11:39:39	6369022	1					
ANR	6369042	ReturnStatement	return NULL ;	95:2:2226:2237	6369022	0	True				
ANR	6369043	Identifier	NULL		6369022	0					
ANR	6369044	IfStatement	if ( len < 0 )		6369022	3					
ANR	6369045	Condition	len < 0	97:5:2247:2253	6369022	0	True				
ANR	6369046	RelationalExpression	len < 0		6369022	0		<			
ANR	6369047	Identifier	len		6369022	0					
ANR	6369048	PrimaryExpression	0		6369022	1					
ANR	6369049	CompoundStatement		7:14:73:73	6369022	1					
ANR	6369050	ExpressionStatement	len = strlen ( str )	98:2:2260:2278	6369022	0	True				
ANR	6369051	AssignmentExpression	len = strlen ( str )		6369022	0		=			
ANR	6369052	Identifier	len		6369022	0					
ANR	6369053	CallExpression	strlen ( str )		6369022	1					
ANR	6369054	Callee	strlen		6369022	0					
ANR	6369055	Identifier	strlen		6369022	0					
ANR	6369056	ArgumentList	str		6369022	1					
ANR	6369057	Argument	str		6369022	0					
ANR	6369058	Identifier	str		6369022	0					
ANR	6369059	IdentifierDeclStatement	const int olen = ( len * 4 ) + 2 ;	100:1:2284:2314	6369022	4	True				
ANR	6369060	IdentifierDecl	olen = ( len * 4 ) + 2		6369022	0					
ANR	6369061	IdentifierDeclType	const int		6369022	0					
ANR	6369062	Identifier	olen		6369022	1					
ANR	6369063	AssignmentExpression	olen = ( len * 4 ) + 2		6369022	2		=			
ANR	6369064	Identifier	olen		6369022	0					
ANR	6369065	AdditiveExpression	( len * 4 ) + 2		6369022	1		+			
ANR	6369066	MultiplicativeExpression	len * 4		6369022	0		*			
ANR	6369067	Identifier	len		6369022	0					
ANR	6369068	PrimaryExpression	4		6369022	1					
ANR	6369069	PrimaryExpression	2		6369022	1					
ANR	6369070	IfStatement	if ( olen < len )		6369022	5					
ANR	6369071	Condition	olen < len	101:5:2321:2330	6369022	0	True				
ANR	6369072	RelationalExpression	olen < len		6369022	0		<			
ANR	6369073	Identifier	olen		6369022	0					
ANR	6369074	Identifier	len		6369022	1					
ANR	6369075	CompoundStatement		11:17:150:150	6369022	1					
ANR	6369076	ReturnStatement	return NULL ;	102:2:2337:2348	6369022	0	True				
ANR	6369077	Identifier	NULL		6369022	0					
ANR	6369078	ExpressionStatement	bout = ( char * ) malloc ( olen )	104:1:2354:2382	6369022	6	True				
ANR	6369079	AssignmentExpression	bout = ( char * ) malloc ( olen )		6369022	0		=			
ANR	6369080	Identifier	bout		6369022	0					
ANR	6369081	CastExpression	( char * ) malloc ( olen )		6369022	1					
ANR	6369082	CastTarget	char *		6369022	0					
ANR	6369083	CallExpression	malloc ( olen )		6369022	1					
ANR	6369084	Callee	malloc		6369022	0					
ANR	6369085	Identifier	malloc		6369022	0					
ANR	6369086	ArgumentList	olen		6369022	1					
ANR	6369087	Argument	olen		6369022	0					
ANR	6369088	Identifier	olen		6369022	0					
ANR	6369089	IfStatement	if ( ! bout )		6369022	7					
ANR	6369090	Condition	! bout	105:5:2389:2393	6369022	0	True				
ANR	6369091	UnaryOperationExpression	! bout		6369022	0					
ANR	6369092	UnaryOperator	!		6369022	0					
ANR	6369093	Identifier	bout		6369022	1					
ANR	6369094	CompoundStatement		15:12:213:213	6369022	1					
ANR	6369095	ReturnStatement	return NULL ;	106:2:2400:2411	6369022	0	True				
ANR	6369096	Identifier	NULL		6369022	0					
ANR	6369097	ForStatement	"for ( in = out = 0 ; in < len ; in += 3 , out += 4 )"		6369022	8					
ANR	6369098	ForInit	in = out = 0 ;	108:6:2422:2434	6369022	0	True				
ANR	6369099	AssignmentExpression	in = out = 0		6369022	0		=			
ANR	6369100	Identifier	in		6369022	0					
ANR	6369101	AssignmentExpression	out = 0		6369022	1		=			
ANR	6369102	Identifier	out		6369022	0					
ANR	6369103	PrimaryExpression	0		6369022	1					
ANR	6369104	Condition	in < len	108:20:2436:2443	6369022	1	True				
ANR	6369105	RelationalExpression	in < len		6369022	0		<			
ANR	6369106	Identifier	in		6369022	0					
ANR	6369107	Identifier	len		6369022	1					
ANR	6369108	Expression	"in += 3 , out += 4"	108:30:2446:2462	6369022	2	True				
ANR	6369109	AssignmentExpression	in += 3		6369022	0		+=			
ANR	6369110	Identifier	in		6369022	0					
ANR	6369111	PrimaryExpression	3		6369022	1					
ANR	6369112	AssignmentExpression	out += 4		6369022	1		+=			
ANR	6369113	Identifier	out		6369022	0					
ANR	6369114	PrimaryExpression	4		6369022	1					
ANR	6369115	CompoundStatement		18:49:282:282	6369022	3					
ANR	6369116	ExpressionStatement	"local_b64_encode ( ( const ut8 * ) str + in , ( char * ) bout + out , ( len - in ) > 3 ? 3 : len - in )"	109:2:2469:2563	6369022	0	True				
ANR	6369117	CallExpression	"local_b64_encode ( ( const ut8 * ) str + in , ( char * ) bout + out , ( len - in ) > 3 ? 3 : len - in )"		6369022	0					
ANR	6369118	Callee	local_b64_encode		6369022	0					
ANR	6369119	Identifier	local_b64_encode		6369022	0					
ANR	6369120	ArgumentList	( const ut8 * ) str + in		6369022	1					
ANR	6369121	Argument	( const ut8 * ) str + in		6369022	0					
ANR	6369122	AdditiveExpression	( const ut8 * ) str + in		6369022	0		+			
ANR	6369123	CastExpression	( const ut8 * ) str		6369022	0					
ANR	6369124	CastTarget	const ut8 *		6369022	0					
ANR	6369125	Identifier	str		6369022	1					
ANR	6369126	Identifier	in		6369022	1					
ANR	6369127	Argument	( char * ) bout + out		6369022	1					
ANR	6369128	AdditiveExpression	( char * ) bout + out		6369022	0		+			
ANR	6369129	CastExpression	( char * ) bout		6369022	0					
ANR	6369130	CastTarget	char *		6369022	0					
ANR	6369131	Identifier	bout		6369022	1					
ANR	6369132	Identifier	out		6369022	1					
ANR	6369133	Argument	( len - in ) > 3 ? 3 : len - in		6369022	2					
ANR	6369134	ConditionalExpression	( len - in ) > 3 ? 3 : len - in		6369022	0					
ANR	6369135	Condition	( len - in ) > 3		6369022	0					
ANR	6369136	RelationalExpression	( len - in ) > 3		6369022	0		>			
ANR	6369137	AdditiveExpression	len - in		6369022	0		-			
ANR	6369138	Identifier	len		6369022	0					
ANR	6369139	Identifier	in		6369022	1					
ANR	6369140	PrimaryExpression	3		6369022	1					
ANR	6369141	PrimaryExpression	3		6369022	1					
ANR	6369142	AdditiveExpression	len - in		6369022	2		-			
ANR	6369143	Identifier	len		6369022	0					
ANR	6369144	Identifier	in		6369022	1					
ANR	6369145	ExpressionStatement	bout [ out ] = 0	112:1:2569:2582	6369022	9	True				
ANR	6369146	AssignmentExpression	bout [ out ] = 0		6369022	0		=			
ANR	6369147	ArrayIndexing	bout [ out ]		6369022	0					
ANR	6369148	Identifier	bout		6369022	0					
ANR	6369149	Identifier	out		6369022	1					
ANR	6369150	PrimaryExpression	0		6369022	1					
ANR	6369151	ReturnStatement	return bout ;	113:1:2585:2596	6369022	10	True				
ANR	6369152	Identifier	bout		6369022	0					
ANR	6369153	ReturnType	R_API char *		6369022	1					
ANR	6369154	Identifier	r_base64_encode_dyn		6369022	2					
ANR	6369155	ParameterList	"const char * str , int len"		6369022	3					
ANR	6369156	Parameter	const char * str	91:32:2156:2170	6369022	0	True				
ANR	6369157	ParameterType	const char *		6369022	0					
ANR	6369158	Identifier	str		6369022	1					
ANR	6369159	Parameter	int len	91:49:2173:2179	6369022	1	True				
ANR	6369160	ParameterType	int		6369022	0					
ANR	6369161	Identifier	len		6369022	1					
ANR	6369162	CFGEntryNode	ENTRY		6369022		True				
ANR	6369163	CFGExitNode	EXIT		6369022		True				
ANR	6369164	Symbol	str		6369022						
ANR	6369165	Symbol	strlen		6369022						
ANR	6369166	Symbol	malloc		6369022						
ANR	6369167	Symbol	bout		6369022						
ANR	6369168	Symbol	olen		6369022						
ANR	6369169	Symbol	NULL		6369022						
ANR	6369170	Symbol	len		6369022						
ANR	6369171	Symbol	in		6369022						
ANR	6369172	Symbol	* out		6369022						
ANR	6369173	Symbol	* bout		6369022						
ANR	6369174	Symbol	out		6369022						
