command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	643841	File	data/converged/CVE-2019-16718~_radare2/canal.c								
ANR	643842	ClassDef	<unnamed>	17:8:399:454							
ANR	643843	DeclStmt									
ANR	643844	Decl							RAnal	RAnal *	a
ANR	643845	DeclStmt									
ANR	643846	Decl							int	int	mode
ANR	643847	DeclStmt									
ANR	643848	Decl							PJ	PJ *	pj
ANR	643849	DeclStmt									
ANR	643850	Decl									HintListState
ANR	643851	ClassDef	<unnamed>	24:0:509:571							
ANR	643852	DeclStmt									
ANR	643853	Decl									R2Arch
ANR	643854	DeclStmt									
ANR	643855	Decl							int	"int ( const void * _a , const void * _b )"	cmpfcn
ANR	643856	Function	loganal	32:0:626:771							
ANR	643857	FunctionDef	"loganal (ut64 from , ut64 to , int depth)"		643856	0					
ANR	643858	CompoundStatement		32:51:677:771	643856	0					
ANR	643859	ExpressionStatement	r_cons_clear_line ( 1 )	33:1:680:701	643856	0	True				
ANR	643860	CallExpression	r_cons_clear_line ( 1 )		643856	0					
ANR	643861	Callee	r_cons_clear_line		643856	0					
ANR	643862	Identifier	r_cons_clear_line		643856	0					
ANR	643863	ArgumentList	1		643856	1					
ANR	643864	Argument	1		643856	0					
ANR	643865	PrimaryExpression	1		643856	0					
ANR	643866	Statement	eprintf	34:1:704:710	643856	1	True				
ANR	643867	Statement	(	34:9:712:712	643856	2	True				
ANR	643868	Statement	"""0x%08"""	34:10:713:719	643856	3	True				
ANR	643869	Statement	PFMT64x	34:17:720:726	643856	4	True				
ANR	643870	Statement	""" > 0x%08"""	34:24:727:736	643856	5	True				
ANR	643871	Statement	PFMT64x	34:34:737:743	643856	6	True				
ANR	643872	Statement	""" %d\\r"""	34:41:744:750	643856	7	True				
ANR	643873	Statement	","	34:48:751:751	643856	8	True				
ANR	643874	Statement	from	34:50:753:756	643856	9	True				
ANR	643875	Statement	","	34:54:757:757	643856	10	True				
ANR	643876	Statement	to	34:56:759:760	643856	11	True				
ANR	643877	Statement	","	34:58:761:761	643856	12	True				
ANR	643878	Statement	depth	34:60:763:767	643856	13	True				
ANR	643879	Statement	)	34:65:768:768	643856	14	True				
ANR	643880	ExpressionStatement		34:66:769:769	643856	15	True				
ANR	643881	ReturnType	static void		643856	1					
ANR	643882	Identifier	loganal		643856	2					
ANR	643883	ParameterList	"ut64 from , ut64 to , int depth"		643856	3					
ANR	643884	Parameter	ut64 from	32:20:646:654	643856	0	True				
ANR	643885	ParameterType	ut64		643856	0					
ANR	643886	Identifier	from		643856	1					
ANR	643887	Parameter	ut64 to	32:31:657:663	643856	1	True				
ANR	643888	ParameterType	ut64		643856	0					
ANR	643889	Identifier	to		643856	1					
ANR	643890	Parameter	int depth	32:40:666:674	643856	2	True				
ANR	643891	ParameterType	int		643856	0					
ANR	643892	Identifier	depth		643856	1					
ANR	643893	CFGEntryNode	ENTRY		643856		True				
ANR	643894	CFGExitNode	EXIT		643856		True				
ANR	643895	Symbol	depth		643856						
ANR	643896	Symbol	from		643856						
ANR	643897	Symbol	to		643856						
ANR	643898	Function	cmpsize	37:0:774:969							
ANR	643899	FunctionDef	"cmpsize (const void * _a , const void * _b)"		643898	0					
ANR	643900	CompoundStatement		37:52:826:969	643898	0					
ANR	643901	IdentifierDeclStatement	"const RAnalFunction * a = _a , * b = _b ;"	38:1:829:865	643898	0	True				
ANR	643902	IdentifierDecl	* a = _a		643898	0					
ANR	643903	IdentifierDeclType	const RAnalFunction *		643898	0					
ANR	643904	Identifier	a		643898	1					
ANR	643905	AssignmentExpression	* a = _a		643898	2		=			
ANR	643906	Identifier	_a		643898	0					
ANR	643907	Identifier	_a		643898	1					
ANR	643908	IdentifierDecl	* b = _b		643898	1					
ANR	643909	IdentifierDeclType	const RAnalFunction *		643898	0					
ANR	643910	Identifier	b		643898	1					
ANR	643911	AssignmentExpression	* b = _b		643898	2		=			
ANR	643912	Identifier	_b		643898	0					
ANR	643913	Identifier	_b		643898	1					
ANR	643914	IdentifierDeclStatement	ut64 as = r_anal_fcn_size ( a ) ;	39:1:868:897	643898	1	True				
ANR	643915	IdentifierDecl	as = r_anal_fcn_size ( a )		643898	0					
ANR	643916	IdentifierDeclType	ut64		643898	0					
ANR	643917	Identifier	as		643898	1					
ANR	643918	AssignmentExpression	as = r_anal_fcn_size ( a )		643898	2		=			
ANR	643919	Identifier	as		643898	0					
ANR	643920	CallExpression	r_anal_fcn_size ( a )		643898	1					
ANR	643921	Callee	r_anal_fcn_size		643898	0					
ANR	643922	Identifier	r_anal_fcn_size		643898	0					
ANR	643923	ArgumentList	a		643898	1					
ANR	643924	Argument	a		643898	0					
ANR	643925	Identifier	a		643898	0					
ANR	643926	IdentifierDeclStatement	ut64 bs = r_anal_fcn_size ( b ) ;	40:1:900:929	643898	2	True				
ANR	643927	IdentifierDecl	bs = r_anal_fcn_size ( b )		643898	0					
ANR	643928	IdentifierDeclType	ut64		643898	0					
ANR	643929	Identifier	bs		643898	1					
ANR	643930	AssignmentExpression	bs = r_anal_fcn_size ( b )		643898	2		=			
ANR	643931	Identifier	bs		643898	0					
ANR	643932	CallExpression	r_anal_fcn_size ( b )		643898	1					
ANR	643933	Callee	r_anal_fcn_size		643898	0					
ANR	643934	Identifier	r_anal_fcn_size		643898	0					
ANR	643935	ArgumentList	b		643898	1					
ANR	643936	Argument	b		643898	0					
ANR	643937	Identifier	b		643898	0					
ANR	643938	ReturnStatement	return ( as > bs ) ? 1 : ( as < bs ) ? - 1 : 0 ;	41:1:932:967	643898	3	True				
ANR	643939	ConditionalExpression	( as > bs ) ? 1 : ( as < bs ) ? - 1 : 0		643898	0					
ANR	643940	Condition	as > bs		643898	0					
ANR	643941	RelationalExpression	as > bs		643898	0		>			
ANR	643942	Identifier	as		643898	0					
ANR	643943	Identifier	bs		643898	1					
ANR	643944	PrimaryExpression	1		643898	1					
ANR	643945	ConditionalExpression	( as < bs ) ? - 1 : 0		643898	2					
ANR	643946	Condition	as < bs		643898	0					
ANR	643947	RelationalExpression	as < bs		643898	0		<			
ANR	643948	Identifier	as		643898	0					
ANR	643949	Identifier	bs		643898	1					
ANR	643950	UnaryOperationExpression	- 1		643898	1					
ANR	643951	UnaryOperator	-		643898	0					
ANR	643952	PrimaryExpression	1		643898	1					
ANR	643953	PrimaryExpression	0		643898	2					
ANR	643954	ReturnType	static int		643898	1					
ANR	643955	Identifier	cmpsize		643898	2					
ANR	643956	ParameterList	"const void * _a , const void * _b"		643898	3					
ANR	643957	Parameter	const void * _a	37:20:794:807	643898	0	True				
ANR	643958	ParameterType	const void *		643898	0					
ANR	643959	Identifier	_a		643898	1					
ANR	643960	Parameter	const void * _b	37:36:810:823	643898	1	True				
ANR	643961	ParameterType	const void *		643898	0					
ANR	643962	Identifier	_b		643898	1					
ANR	643963	CFGEntryNode	ENTRY		643898		True				
ANR	643964	CFGExitNode	EXIT		643898		True				
ANR	643965	Symbol	a		643898						
ANR	643966	Symbol	bs		643898						
ANR	643967	Symbol	_a		643898						
ANR	643968	Symbol	b		643898						
ANR	643969	Symbol	as		643898						
ANR	643970	Symbol	_b		643898						
ANR	643971	Symbol	r_anal_fcn_size		643898						
ANR	643972	Function	cmpfcncc	44:0:972:1220							
ANR	643973	FunctionDef	"cmpfcncc (const void * _a , const void * _b)"		643972	0					
ANR	643974	CompoundStatement		44:52:1024:1220	643972	0					
ANR	643975	IdentifierDeclStatement	RAnalFunction * a = ( RAnalFunction * ) _a ;	45:1:1027:1065	643972	0	True				
ANR	643976	IdentifierDecl	* a = ( RAnalFunction * ) _a		643972	0					
ANR	643977	IdentifierDeclType	RAnalFunction *		643972	0					
ANR	643978	Identifier	a		643972	1					
ANR	643979	AssignmentExpression	* a = ( RAnalFunction * ) _a		643972	2		=			
ANR	643980	Identifier	a		643972	0					
ANR	643981	CastExpression	( RAnalFunction * ) _a		643972	1					
ANR	643982	CastTarget	RAnalFunction *		643972	0					
ANR	643983	Identifier	_a		643972	1					
ANR	643984	IdentifierDeclStatement	RAnalFunction * b = ( RAnalFunction * ) _b ;	46:1:1068:1106	643972	1	True				
ANR	643985	IdentifierDecl	* b = ( RAnalFunction * ) _b		643972	0					
ANR	643986	IdentifierDeclType	RAnalFunction *		643972	0					
ANR	643987	Identifier	b		643972	1					
ANR	643988	AssignmentExpression	* b = ( RAnalFunction * ) _b		643972	2		=			
ANR	643989	Identifier	b		643972	0					
ANR	643990	CastExpression	( RAnalFunction * ) _b		643972	1					
ANR	643991	CastTarget	RAnalFunction *		643972	0					
ANR	643992	Identifier	_b		643972	1					
ANR	643993	IdentifierDeclStatement	"ut64 as = r_anal_fcn_cc ( NULL , a ) ;"	47:1:1109:1142	643972	2	True				
ANR	643994	IdentifierDecl	"as = r_anal_fcn_cc ( NULL , a )"		643972	0					
ANR	643995	IdentifierDeclType	ut64		643972	0					
ANR	643996	Identifier	as		643972	1					
ANR	643997	AssignmentExpression	"as = r_anal_fcn_cc ( NULL , a )"		643972	2		=			
ANR	643998	Identifier	as		643972	0					
ANR	643999	CallExpression	"r_anal_fcn_cc ( NULL , a )"		643972	1					
ANR	644000	Callee	r_anal_fcn_cc		643972	0					
ANR	644001	Identifier	r_anal_fcn_cc		643972	0					
ANR	644002	ArgumentList	NULL		643972	1					
ANR	644003	Argument	NULL		643972	0					
ANR	644004	Identifier	NULL		643972	0					
ANR	644005	Argument	a		643972	1					
ANR	644006	Identifier	a		643972	0					
ANR	644007	IdentifierDeclStatement	"ut64 bs = r_anal_fcn_cc ( NULL , b ) ;"	48:1:1145:1178	643972	3	True				
ANR	644008	IdentifierDecl	"bs = r_anal_fcn_cc ( NULL , b )"		643972	0					
ANR	644009	IdentifierDeclType	ut64		643972	0					
ANR	644010	Identifier	bs		643972	1					
ANR	644011	AssignmentExpression	"bs = r_anal_fcn_cc ( NULL , b )"		643972	2		=			
ANR	644012	Identifier	bs		643972	0					
ANR	644013	CallExpression	"r_anal_fcn_cc ( NULL , b )"		643972	1					
ANR	644014	Callee	r_anal_fcn_cc		643972	0					
ANR	644015	Identifier	r_anal_fcn_cc		643972	0					
ANR	644016	ArgumentList	NULL		643972	1					
ANR	644017	Argument	NULL		643972	0					
ANR	644018	Identifier	NULL		643972	0					
ANR	644019	Argument	b		643972	1					
ANR	644020	Identifier	b		643972	0					
ANR	644021	ReturnStatement	return ( as > bs ) ? 1 : ( as < bs ) ? - 1 : 0 ;	49:1:1181:1218	643972	4	True				
ANR	644022	ConditionalExpression	( as > bs ) ? 1 : ( as < bs ) ? - 1 : 0		643972	0					
ANR	644023	Condition	as > bs		643972	0					
ANR	644024	RelationalExpression	as > bs		643972	0		>			
ANR	644025	Identifier	as		643972	0					
ANR	644026	Identifier	bs		643972	1					
ANR	644027	PrimaryExpression	1		643972	1					
ANR	644028	ConditionalExpression	( as < bs ) ? - 1 : 0		643972	2					
ANR	644029	Condition	as < bs		643972	0					
ANR	644030	RelationalExpression	as < bs		643972	0		<			
ANR	644031	Identifier	as		643972	0					
ANR	644032	Identifier	bs		643972	1					
ANR	644033	UnaryOperationExpression	- 1		643972	1					
ANR	644034	UnaryOperator	-		643972	0					
ANR	644035	PrimaryExpression	1		643972	1					
ANR	644036	PrimaryExpression	0		643972	2					
ANR	644037	ReturnType	static int		643972	1					
ANR	644038	Identifier	cmpfcncc		643972	2					
ANR	644039	ParameterList	"const void * _a , const void * _b"		643972	3					
ANR	644040	Parameter	const void * _a	44:20:992:1005	643972	0	True				
ANR	644041	ParameterType	const void *		643972	0					
ANR	644042	Identifier	_a		643972	1					
ANR	644043	Parameter	const void * _b	44:36:1008:1021	643972	1	True				
ANR	644044	ParameterType	const void *		643972	0					
ANR	644045	Identifier	_b		643972	1					
ANR	644046	CFGEntryNode	ENTRY		643972		True				
ANR	644047	CFGExitNode	EXIT		643972		True				
ANR	644048	Symbol	a		643972						
ANR	644049	Symbol	bs		643972						
ANR	644050	Symbol	_a		643972						
ANR	644051	Symbol	b		643972						
ANR	644052	Symbol	as		643972						
ANR	644053	Symbol	_b		643972						
ANR	644054	Symbol	NULL		643972						
ANR	644055	Symbol	r_anal_fcn_cc		643972						
ANR	644056	Function	cmpedges	52:0:1223:1437							
ANR	644057	FunctionDef	"cmpedges (const void * _a , const void * _b)"		644056	0					
ANR	644058	CompoundStatement		52:52:1275:1437	644056	0					
ANR	644059	IdentifierDeclStatement	"const RAnalFunction * a = _a , * b = _b ;"	53:1:1278:1314	644056	0	True				
ANR	644060	IdentifierDecl	* a = _a		644056	0					
ANR	644061	IdentifierDeclType	const RAnalFunction *		644056	0					
ANR	644062	Identifier	a		644056	1					
ANR	644063	AssignmentExpression	* a = _a		644056	2		=			
ANR	644064	Identifier	_a		644056	0					
ANR	644065	Identifier	_a		644056	1					
ANR	644066	IdentifierDecl	* b = _b		644056	1					
ANR	644067	IdentifierDeclType	const RAnalFunction *		644056	0					
ANR	644068	Identifier	b		644056	1					
ANR	644069	AssignmentExpression	* b = _b		644056	2		=			
ANR	644070	Identifier	_b		644056	0					
ANR	644071	Identifier	_b		644056	1					
ANR	644072	IdentifierDeclStatement	"int as , bs ;"	54:1:1317:1327	644056	1	True				
ANR	644073	IdentifierDecl	as		644056	0					
ANR	644074	IdentifierDeclType	int		644056	0					
ANR	644075	Identifier	as		644056	1					
ANR	644076	IdentifierDecl	bs		644056	1					
ANR	644077	IdentifierDeclType	int		644056	0					
ANR	644078	Identifier	bs		644056	1					
ANR	644079	ExpressionStatement	"r_anal_fcn_count_edges ( a , & as )"	55:1:1330:1361	644056	2	True				
ANR	644080	CallExpression	"r_anal_fcn_count_edges ( a , & as )"		644056	0					
ANR	644081	Callee	r_anal_fcn_count_edges		644056	0					
ANR	644082	Identifier	r_anal_fcn_count_edges		644056	0					
ANR	644083	ArgumentList	a		644056	1					
ANR	644084	Argument	a		644056	0					
ANR	644085	Identifier	a		644056	0					
ANR	644086	Argument	& as		644056	1					
ANR	644087	UnaryOperationExpression	& as		644056	0					
ANR	644088	UnaryOperator	&		644056	0					
ANR	644089	Identifier	as		644056	1					
ANR	644090	ExpressionStatement	"r_anal_fcn_count_edges ( b , & bs )"	56:1:1364:1395	644056	3	True				
ANR	644091	CallExpression	"r_anal_fcn_count_edges ( b , & bs )"		644056	0					
ANR	644092	Callee	r_anal_fcn_count_edges		644056	0					
ANR	644093	Identifier	r_anal_fcn_count_edges		644056	0					
ANR	644094	ArgumentList	b		644056	1					
ANR	644095	Argument	b		644056	0					
ANR	644096	Identifier	b		644056	0					
ANR	644097	Argument	& bs		644056	1					
ANR	644098	UnaryOperationExpression	& bs		644056	0					
ANR	644099	UnaryOperator	&		644056	0					
ANR	644100	Identifier	bs		644056	1					
ANR	644101	ReturnStatement	return ( as > bs ) ? 1 : ( as < bs ) ? - 1 : 0 ;	57:1:1398:1435	644056	4	True				
ANR	644102	ConditionalExpression	( as > bs ) ? 1 : ( as < bs ) ? - 1 : 0		644056	0					
ANR	644103	Condition	as > bs		644056	0					
ANR	644104	RelationalExpression	as > bs		644056	0		>			
ANR	644105	Identifier	as		644056	0					
ANR	644106	Identifier	bs		644056	1					
ANR	644107	PrimaryExpression	1		644056	1					
ANR	644108	ConditionalExpression	( as < bs ) ? - 1 : 0		644056	2					
ANR	644109	Condition	as < bs		644056	0					
ANR	644110	RelationalExpression	as < bs		644056	0		<			
ANR	644111	Identifier	as		644056	0					
ANR	644112	Identifier	bs		644056	1					
ANR	644113	UnaryOperationExpression	- 1		644056	1					
ANR	644114	UnaryOperator	-		644056	0					
ANR	644115	PrimaryExpression	1		644056	1					
ANR	644116	PrimaryExpression	0		644056	2					
ANR	644117	ReturnType	static int		644056	1					
ANR	644118	Identifier	cmpedges		644056	2					
ANR	644119	ParameterList	"const void * _a , const void * _b"		644056	3					
ANR	644120	Parameter	const void * _a	52:20:1243:1256	644056	0	True				
ANR	644121	ParameterType	const void *		644056	0					
ANR	644122	Identifier	_a		644056	1					
ANR	644123	Parameter	const void * _b	52:36:1259:1272	644056	1	True				
ANR	644124	ParameterType	const void *		644056	0					
ANR	644125	Identifier	_b		644056	1					
ANR	644126	CFGEntryNode	ENTRY		644056		True				
ANR	644127	CFGExitNode	EXIT		644056		True				
ANR	644128	Symbol	a		644056						
ANR	644129	Symbol	bs		644056						
ANR	644130	Symbol	_a		644056						
ANR	644131	Symbol	b		644056						
ANR	644132	Symbol	as		644056						
ANR	644133	Symbol	_b		644056						
ANR	644134	Symbol	& bs		644056						
ANR	644135	Symbol	& as		644056						
ANR	644136	Function	cmpframe	60:0:1440:1619							
ANR	644137	FunctionDef	"cmpframe (const void * _a , const void * _b)"		644136	0					
ANR	644138	CompoundStatement		60:52:1492:1619	644136	0					
ANR	644139	IdentifierDeclStatement	"const RAnalFunction * a = _a , * b = _b ;"	61:1:1495:1531	644136	0	True				
ANR	644140	IdentifierDecl	* a = _a		644136	0					
ANR	644141	IdentifierDeclType	const RAnalFunction *		644136	0					
ANR	644142	Identifier	a		644136	1					
ANR	644143	AssignmentExpression	* a = _a		644136	2		=			
ANR	644144	Identifier	_a		644136	0					
ANR	644145	Identifier	_a		644136	1					
ANR	644146	IdentifierDecl	* b = _b		644136	1					
ANR	644147	IdentifierDeclType	const RAnalFunction *		644136	0					
ANR	644148	Identifier	b		644136	1					
ANR	644149	AssignmentExpression	* b = _b		644136	2		=			
ANR	644150	Identifier	_b		644136	0					
ANR	644151	Identifier	_b		644136	1					
ANR	644152	IdentifierDeclStatement	int as = a -> maxstack ;	62:1:1534:1554	644136	1	True				
ANR	644153	IdentifierDecl	as = a -> maxstack		644136	0					
ANR	644154	IdentifierDeclType	int		644136	0					
ANR	644155	Identifier	as		644136	1					
ANR	644156	AssignmentExpression	as = a -> maxstack		644136	2		=			
ANR	644157	Identifier	as		644136	0					
ANR	644158	PtrMemberAccess	a -> maxstack		644136	1					
ANR	644159	Identifier	a		644136	0					
ANR	644160	Identifier	maxstack		644136	1					
ANR	644161	IdentifierDeclStatement	int bs = b -> maxstack ;	63:1:1557:1577	644136	2	True				
ANR	644162	IdentifierDecl	bs = b -> maxstack		644136	0					
ANR	644163	IdentifierDeclType	int		644136	0					
ANR	644164	Identifier	bs		644136	1					
ANR	644165	AssignmentExpression	bs = b -> maxstack		644136	2		=			
ANR	644166	Identifier	bs		644136	0					
ANR	644167	PtrMemberAccess	b -> maxstack		644136	1					
ANR	644168	Identifier	b		644136	0					
ANR	644169	Identifier	maxstack		644136	1					
ANR	644170	ReturnStatement	return ( as > bs ) ? 1 : ( as < bs ) ? - 1 : 0 ;	64:1:1580:1617	644136	3	True				
ANR	644171	ConditionalExpression	( as > bs ) ? 1 : ( as < bs ) ? - 1 : 0		644136	0					
ANR	644172	Condition	as > bs		644136	0					
ANR	644173	RelationalExpression	as > bs		644136	0		>			
ANR	644174	Identifier	as		644136	0					
ANR	644175	Identifier	bs		644136	1					
ANR	644176	PrimaryExpression	1		644136	1					
ANR	644177	ConditionalExpression	( as < bs ) ? - 1 : 0		644136	2					
ANR	644178	Condition	as < bs		644136	0					
ANR	644179	RelationalExpression	as < bs		644136	0		<			
ANR	644180	Identifier	as		644136	0					
ANR	644181	Identifier	bs		644136	1					
ANR	644182	UnaryOperationExpression	- 1		644136	1					
ANR	644183	UnaryOperator	-		644136	0					
ANR	644184	PrimaryExpression	1		644136	1					
ANR	644185	PrimaryExpression	0		644136	2					
ANR	644186	ReturnType	static int		644136	1					
ANR	644187	Identifier	cmpframe		644136	2					
ANR	644188	ParameterList	"const void * _a , const void * _b"		644136	3					
ANR	644189	Parameter	const void * _a	60:20:1460:1473	644136	0	True				
ANR	644190	ParameterType	const void *		644136	0					
ANR	644191	Identifier	_a		644136	1					
ANR	644192	Parameter	const void * _b	60:36:1476:1489	644136	1	True				
ANR	644193	ParameterType	const void *		644136	0					
ANR	644194	Identifier	_b		644136	1					
ANR	644195	CFGEntryNode	ENTRY		644136		True				
ANR	644196	CFGExitNode	EXIT		644136		True				
ANR	644197	Symbol	a		644136						
ANR	644198	Symbol	bs		644136						
ANR	644199	Symbol	b -> maxstack		644136						
ANR	644200	Symbol	_a		644136						
ANR	644201	Symbol	b		644136						
ANR	644202	Symbol	as		644136						
ANR	644203	Symbol	_b		644136						
ANR	644204	Symbol	a -> maxstack		644136						
ANR	644205	Symbol	* a		644136						
ANR	644206	Symbol	* b		644136						
ANR	644207	Function	cmpxrefs	67:0:1622:1809							
ANR	644208	FunctionDef	"cmpxrefs (const void * _a , const void * _b)"		644207	0					
ANR	644209	CompoundStatement		67:52:1674:1809	644207	0					
ANR	644210	IdentifierDeclStatement	"const RAnalFunction * a = _a , * b = _b ;"	68:1:1677:1713	644207	0	True				
ANR	644211	IdentifierDecl	* a = _a		644207	0					
ANR	644212	IdentifierDeclType	const RAnalFunction *		644207	0					
ANR	644213	Identifier	a		644207	1					
ANR	644214	AssignmentExpression	* a = _a		644207	2		=			
ANR	644215	Identifier	_a		644207	0					
ANR	644216	Identifier	_a		644207	1					
ANR	644217	IdentifierDecl	* b = _b		644207	1					
ANR	644218	IdentifierDeclType	const RAnalFunction *		644207	0					
ANR	644219	Identifier	b		644207	1					
ANR	644220	AssignmentExpression	* b = _b		644207	2		=			
ANR	644221	Identifier	_b		644207	0					
ANR	644222	Identifier	_b		644207	1					
ANR	644223	IdentifierDeclStatement	int as = a -> meta . numrefs ;	69:1:1716:1740	644207	1	True				
ANR	644224	IdentifierDecl	as = a -> meta . numrefs		644207	0					
ANR	644225	IdentifierDeclType	int		644207	0					
ANR	644226	Identifier	as		644207	1					
ANR	644227	AssignmentExpression	as = a -> meta . numrefs		644207	2		=			
ANR	644228	Identifier	as		644207	0					
ANR	644229	MemberAccess	a -> meta . numrefs		644207	1					
ANR	644230	PtrMemberAccess	a -> meta		644207	0					
ANR	644231	Identifier	a		644207	0					
ANR	644232	Identifier	meta		644207	1					
ANR	644233	Identifier	numrefs		644207	1					
ANR	644234	IdentifierDeclStatement	int bs = b -> meta . numrefs ;	70:1:1743:1767	644207	2	True				
ANR	644235	IdentifierDecl	bs = b -> meta . numrefs		644207	0					
ANR	644236	IdentifierDeclType	int		644207	0					
ANR	644237	Identifier	bs		644207	1					
ANR	644238	AssignmentExpression	bs = b -> meta . numrefs		644207	2		=			
ANR	644239	Identifier	bs		644207	0					
ANR	644240	MemberAccess	b -> meta . numrefs		644207	1					
ANR	644241	PtrMemberAccess	b -> meta		644207	0					
ANR	644242	Identifier	b		644207	0					
ANR	644243	Identifier	meta		644207	1					
ANR	644244	Identifier	numrefs		644207	1					
ANR	644245	ReturnStatement	return ( as > bs ) ? 1 : ( as < bs ) ? - 1 : 0 ;	71:1:1770:1807	644207	3	True				
ANR	644246	ConditionalExpression	( as > bs ) ? 1 : ( as < bs ) ? - 1 : 0		644207	0					
ANR	644247	Condition	as > bs		644207	0					
ANR	644248	RelationalExpression	as > bs		644207	0		>			
ANR	644249	Identifier	as		644207	0					
ANR	644250	Identifier	bs		644207	1					
ANR	644251	PrimaryExpression	1		644207	1					
ANR	644252	ConditionalExpression	( as < bs ) ? - 1 : 0		644207	2					
ANR	644253	Condition	as < bs		644207	0					
ANR	644254	RelationalExpression	as < bs		644207	0		<			
ANR	644255	Identifier	as		644207	0					
ANR	644256	Identifier	bs		644207	1					
ANR	644257	UnaryOperationExpression	- 1		644207	1					
ANR	644258	UnaryOperator	-		644207	0					
ANR	644259	PrimaryExpression	1		644207	1					
ANR	644260	PrimaryExpression	0		644207	2					
ANR	644261	ReturnType	static int		644207	1					
ANR	644262	Identifier	cmpxrefs		644207	2					
ANR	644263	ParameterList	"const void * _a , const void * _b"		644207	3					
ANR	644264	Parameter	const void * _a	67:20:1642:1655	644207	0	True				
ANR	644265	ParameterType	const void *		644207	0					
ANR	644266	Identifier	_a		644207	1					
ANR	644267	Parameter	const void * _b	67:36:1658:1671	644207	1	True				
ANR	644268	ParameterType	const void *		644207	0					
ANR	644269	Identifier	_b		644207	1					
ANR	644270	CFGEntryNode	ENTRY		644207		True				
ANR	644271	CFGExitNode	EXIT		644207		True				
ANR	644272	Symbol	a		644207						
ANR	644273	Symbol	a -> meta . numrefs		644207						
ANR	644274	Symbol	bs		644207						
ANR	644275	Symbol	_a		644207						
ANR	644276	Symbol	b		644207						
ANR	644277	Symbol	as		644207						
ANR	644278	Symbol	_b		644207						
ANR	644279	Symbol	b -> meta		644207						
ANR	644280	Symbol	b -> meta . numrefs		644207						
ANR	644281	Symbol	a -> meta		644207						
ANR	644282	Symbol	* a		644207						
ANR	644283	Symbol	* b		644207						
ANR	644284	Function	cmpname	74:0:1812:2018							
ANR	644285	FunctionDef	"cmpname (const void * _a , const void * _b)"		644284	0					
ANR	644286	CompoundStatement		74:51:1863:2018	644284	0					
ANR	644287	IdentifierDeclStatement	"const RAnalFunction * a = _a , * b = _b ;"	75:1:1866:1902	644284	0	True				
ANR	644288	IdentifierDecl	* a = _a		644284	0					
ANR	644289	IdentifierDeclType	const RAnalFunction *		644284	0					
ANR	644290	Identifier	a		644284	1					
ANR	644291	AssignmentExpression	* a = _a		644284	2		=			
ANR	644292	Identifier	_a		644284	0					
ANR	644293	Identifier	_a		644284	1					
ANR	644294	IdentifierDecl	* b = _b		644284	1					
ANR	644295	IdentifierDeclType	const RAnalFunction *		644284	0					
ANR	644296	Identifier	b		644284	1					
ANR	644297	AssignmentExpression	* b = _b		644284	2		=			
ANR	644298	Identifier	_b		644284	0					
ANR	644299	Identifier	_b		644284	1					
ANR	644300	IdentifierDeclStatement	"int as = strcmp ( a -> name , b -> name ) ;"	76:1:1905:1939	644284	1	True				
ANR	644301	IdentifierDecl	"as = strcmp ( a -> name , b -> name )"		644284	0					
ANR	644302	IdentifierDeclType	int		644284	0					
ANR	644303	Identifier	as		644284	1					
ANR	644304	AssignmentExpression	"as = strcmp ( a -> name , b -> name )"		644284	2		=			
ANR	644305	Identifier	as		644284	0					
ANR	644306	CallExpression	"strcmp ( a -> name , b -> name )"		644284	1					
ANR	644307	Callee	strcmp		644284	0					
ANR	644308	Identifier	strcmp		644284	0					
ANR	644309	ArgumentList	a -> name		644284	1					
ANR	644310	Argument	a -> name		644284	0					
ANR	644311	PtrMemberAccess	a -> name		644284	0					
ANR	644312	Identifier	a		644284	0					
ANR	644313	Identifier	name		644284	1					
ANR	644314	Argument	b -> name		644284	1					
ANR	644315	PtrMemberAccess	b -> name		644284	0					
ANR	644316	Identifier	b		644284	0					
ANR	644317	Identifier	name		644284	1					
ANR	644318	IdentifierDeclStatement	"int bs = strcmp ( b -> name , a -> name ) ;"	77:1:1942:1976	644284	2	True				
ANR	644319	IdentifierDecl	"bs = strcmp ( b -> name , a -> name )"		644284	0					
ANR	644320	IdentifierDeclType	int		644284	0					
ANR	644321	Identifier	bs		644284	1					
ANR	644322	AssignmentExpression	"bs = strcmp ( b -> name , a -> name )"		644284	2		=			
ANR	644323	Identifier	bs		644284	0					
ANR	644324	CallExpression	"strcmp ( b -> name , a -> name )"		644284	1					
ANR	644325	Callee	strcmp		644284	0					
ANR	644326	Identifier	strcmp		644284	0					
ANR	644327	ArgumentList	b -> name		644284	1					
ANR	644328	Argument	b -> name		644284	0					
ANR	644329	PtrMemberAccess	b -> name		644284	0					
ANR	644330	Identifier	b		644284	0					
ANR	644331	Identifier	name		644284	1					
ANR	644332	Argument	a -> name		644284	1					
ANR	644333	PtrMemberAccess	a -> name		644284	0					
ANR	644334	Identifier	a		644284	0					
ANR	644335	Identifier	name		644284	1					
ANR	644336	ReturnStatement	return ( as > bs ) ? 1 : ( as < bs ) ? - 1 : 0 ;	78:1:1979:2016	644284	3	True				
ANR	644337	ConditionalExpression	( as > bs ) ? 1 : ( as < bs ) ? - 1 : 0		644284	0					
ANR	644338	Condition	as > bs		644284	0					
ANR	644339	RelationalExpression	as > bs		644284	0		>			
ANR	644340	Identifier	as		644284	0					
ANR	644341	Identifier	bs		644284	1					
ANR	644342	PrimaryExpression	1		644284	1					
ANR	644343	ConditionalExpression	( as < bs ) ? - 1 : 0		644284	2					
ANR	644344	Condition	as < bs		644284	0					
ANR	644345	RelationalExpression	as < bs		644284	0		<			
ANR	644346	Identifier	as		644284	0					
ANR	644347	Identifier	bs		644284	1					
ANR	644348	UnaryOperationExpression	- 1		644284	1					
ANR	644349	UnaryOperator	-		644284	0					
ANR	644350	PrimaryExpression	1		644284	1					
ANR	644351	PrimaryExpression	0		644284	2					
ANR	644352	ReturnType	static int		644284	1					
ANR	644353	Identifier	cmpname		644284	2					
ANR	644354	ParameterList	"const void * _a , const void * _b"		644284	3					
ANR	644355	Parameter	const void * _a	74:19:1831:1844	644284	0	True				
ANR	644356	ParameterType	const void *		644284	0					
ANR	644357	Identifier	_a		644284	1					
ANR	644358	Parameter	const void * _b	74:35:1847:1860	644284	1	True				
ANR	644359	ParameterType	const void *		644284	0					
ANR	644360	Identifier	_b		644284	1					
ANR	644361	CFGEntryNode	ENTRY		644284		True				
ANR	644362	CFGExitNode	EXIT		644284		True				
ANR	644363	Symbol	strcmp		644284						
ANR	644364	Symbol	a		644284						
ANR	644365	Symbol	bs		644284						
ANR	644366	Symbol	_a		644284						
ANR	644367	Symbol	b		644284						
ANR	644368	Symbol	as		644284						
ANR	644369	Symbol	_b		644284						
ANR	644370	Symbol	a -> name		644284						
ANR	644371	Symbol	* a		644284						
ANR	644372	Symbol	* b		644284						
ANR	644373	Symbol	b -> name		644284						
ANR	644374	Function	cmpcalls	81:0:2021:2216							
ANR	644375	FunctionDef	"cmpcalls (const void * _a , const void * _b)"		644374	0					
ANR	644376	CompoundStatement		81:52:2073:2216	644374	0					
ANR	644377	IdentifierDeclStatement	"const RAnalFunction * a = _a , * b = _b ;"	82:1:2076:2112	644374	0	True				
ANR	644378	IdentifierDecl	* a = _a		644374	0					
ANR	644379	IdentifierDeclType	const RAnalFunction *		644374	0					
ANR	644380	Identifier	a		644374	1					
ANR	644381	AssignmentExpression	* a = _a		644374	2		=			
ANR	644382	Identifier	_a		644374	0					
ANR	644383	Identifier	_a		644374	1					
ANR	644384	IdentifierDecl	* b = _b		644374	1					
ANR	644385	IdentifierDeclType	const RAnalFunction *		644374	0					
ANR	644386	Identifier	b		644374	1					
ANR	644387	AssignmentExpression	* b = _b		644374	2		=			
ANR	644388	Identifier	_b		644374	0					
ANR	644389	Identifier	_b		644374	1					
ANR	644390	IdentifierDeclStatement	int as = a -> meta . numcallrefs ;	83:1:2115:2143	644374	1	True				
ANR	644391	IdentifierDecl	as = a -> meta . numcallrefs		644374	0					
ANR	644392	IdentifierDeclType	int		644374	0					
ANR	644393	Identifier	as		644374	1					
ANR	644394	AssignmentExpression	as = a -> meta . numcallrefs		644374	2		=			
ANR	644395	Identifier	as		644374	0					
ANR	644396	MemberAccess	a -> meta . numcallrefs		644374	1					
ANR	644397	PtrMemberAccess	a -> meta		644374	0					
ANR	644398	Identifier	a		644374	0					
ANR	644399	Identifier	meta		644374	1					
ANR	644400	Identifier	numcallrefs		644374	1					
ANR	644401	IdentifierDeclStatement	int bs = b -> meta . numcallrefs ;	84:1:2146:2174	644374	2	True				
ANR	644402	IdentifierDecl	bs = b -> meta . numcallrefs		644374	0					
ANR	644403	IdentifierDeclType	int		644374	0					
ANR	644404	Identifier	bs		644374	1					
ANR	644405	AssignmentExpression	bs = b -> meta . numcallrefs		644374	2		=			
ANR	644406	Identifier	bs		644374	0					
ANR	644407	MemberAccess	b -> meta . numcallrefs		644374	1					
ANR	644408	PtrMemberAccess	b -> meta		644374	0					
ANR	644409	Identifier	b		644374	0					
ANR	644410	Identifier	meta		644374	1					
ANR	644411	Identifier	numcallrefs		644374	1					
ANR	644412	ReturnStatement	return ( as > bs ) ? 1 : ( as < bs ) ? - 1 : 0 ;	85:1:2177:2214	644374	3	True				
ANR	644413	ConditionalExpression	( as > bs ) ? 1 : ( as < bs ) ? - 1 : 0		644374	0					
ANR	644414	Condition	as > bs		644374	0					
ANR	644415	RelationalExpression	as > bs		644374	0		>			
ANR	644416	Identifier	as		644374	0					
ANR	644417	Identifier	bs		644374	1					
ANR	644418	PrimaryExpression	1		644374	1					
ANR	644419	ConditionalExpression	( as < bs ) ? - 1 : 0		644374	2					
ANR	644420	Condition	as < bs		644374	0					
ANR	644421	RelationalExpression	as < bs		644374	0		<			
ANR	644422	Identifier	as		644374	0					
ANR	644423	Identifier	bs		644374	1					
ANR	644424	UnaryOperationExpression	- 1		644374	1					
ANR	644425	UnaryOperator	-		644374	0					
ANR	644426	PrimaryExpression	1		644374	1					
ANR	644427	PrimaryExpression	0		644374	2					
ANR	644428	ReturnType	static int		644374	1					
ANR	644429	Identifier	cmpcalls		644374	2					
ANR	644430	ParameterList	"const void * _a , const void * _b"		644374	3					
ANR	644431	Parameter	const void * _a	81:20:2041:2054	644374	0	True				
ANR	644432	ParameterType	const void *		644374	0					
ANR	644433	Identifier	_a		644374	1					
ANR	644434	Parameter	const void * _b	81:36:2057:2070	644374	1	True				
ANR	644435	ParameterType	const void *		644374	0					
ANR	644436	Identifier	_b		644374	1					
ANR	644437	CFGEntryNode	ENTRY		644374		True				
ANR	644438	CFGExitNode	EXIT		644374		True				
ANR	644439	Symbol	b -> meta . numcallrefs		644374						
ANR	644440	Symbol	a		644374						
ANR	644441	Symbol	a -> meta . numcallrefs		644374						
ANR	644442	Symbol	bs		644374						
ANR	644443	Symbol	_a		644374						
ANR	644444	Symbol	b		644374						
ANR	644445	Symbol	as		644374						
ANR	644446	Symbol	_b		644374						
ANR	644447	Symbol	b -> meta		644374						
ANR	644448	Symbol	* a		644374						
ANR	644449	Symbol	a -> meta		644374						
ANR	644450	Symbol	* b		644374						
ANR	644451	Function	cmpnbbs	88:0:2219:2420							
ANR	644452	FunctionDef	"cmpnbbs (const void * _a , const void * _b)"		644451	0					
ANR	644453	CompoundStatement		88:52:2271:2420	644451	0					
ANR	644454	IdentifierDeclStatement	"const RAnalFunction * a = _a , * b = _b ;"	89:1:2274:2310	644451	0	True				
ANR	644455	IdentifierDecl	* a = _a		644451	0					
ANR	644456	IdentifierDeclType	const RAnalFunction *		644451	0					
ANR	644457	Identifier	a		644451	1					
ANR	644458	AssignmentExpression	* a = _a		644451	2		=			
ANR	644459	Identifier	_a		644451	0					
ANR	644460	Identifier	_a		644451	1					
ANR	644461	IdentifierDecl	* b = _b		644451	1					
ANR	644462	IdentifierDeclType	const RAnalFunction *		644451	0					
ANR	644463	Identifier	b		644451	1					
ANR	644464	AssignmentExpression	* b = _b		644451	2		=			
ANR	644465	Identifier	_b		644451	0					
ANR	644466	Identifier	_b		644451	1					
ANR	644467	IdentifierDeclStatement	ut64 as = r_list_length ( a -> bbs ) ;	90:1:2313:2345	644451	1	True				
ANR	644468	IdentifierDecl	as = r_list_length ( a -> bbs )		644451	0					
ANR	644469	IdentifierDeclType	ut64		644451	0					
ANR	644470	Identifier	as		644451	1					
ANR	644471	AssignmentExpression	as = r_list_length ( a -> bbs )		644451	2		=			
ANR	644472	Identifier	as		644451	0					
ANR	644473	CallExpression	r_list_length ( a -> bbs )		644451	1					
ANR	644474	Callee	r_list_length		644451	0					
ANR	644475	Identifier	r_list_length		644451	0					
ANR	644476	ArgumentList	a -> bbs		644451	1					
ANR	644477	Argument	a -> bbs		644451	0					
ANR	644478	PtrMemberAccess	a -> bbs		644451	0					
ANR	644479	Identifier	a		644451	0					
ANR	644480	Identifier	bbs		644451	1					
ANR	644481	IdentifierDeclStatement	ut64 bs = r_list_length ( b -> bbs ) ;	91:1:2348:2380	644451	2	True				
ANR	644482	IdentifierDecl	bs = r_list_length ( b -> bbs )		644451	0					
ANR	644483	IdentifierDeclType	ut64		644451	0					
ANR	644484	Identifier	bs		644451	1					
ANR	644485	AssignmentExpression	bs = r_list_length ( b -> bbs )		644451	2		=			
ANR	644486	Identifier	bs		644451	0					
ANR	644487	CallExpression	r_list_length ( b -> bbs )		644451	1					
ANR	644488	Callee	r_list_length		644451	0					
ANR	644489	Identifier	r_list_length		644451	0					
ANR	644490	ArgumentList	b -> bbs		644451	1					
ANR	644491	Argument	b -> bbs		644451	0					
ANR	644492	PtrMemberAccess	b -> bbs		644451	0					
ANR	644493	Identifier	b		644451	0					
ANR	644494	Identifier	bbs		644451	1					
ANR	644495	ReturnStatement	return ( as > bs ) ? 1 : ( as < bs ) ? - 1 : 0 ;	92:1:2383:2418	644451	3	True				
ANR	644496	ConditionalExpression	( as > bs ) ? 1 : ( as < bs ) ? - 1 : 0		644451	0					
ANR	644497	Condition	as > bs		644451	0					
ANR	644498	RelationalExpression	as > bs		644451	0		>			
ANR	644499	Identifier	as		644451	0					
ANR	644500	Identifier	bs		644451	1					
ANR	644501	PrimaryExpression	1		644451	1					
ANR	644502	ConditionalExpression	( as < bs ) ? - 1 : 0		644451	2					
ANR	644503	Condition	as < bs		644451	0					
ANR	644504	RelationalExpression	as < bs		644451	0		<			
ANR	644505	Identifier	as		644451	0					
ANR	644506	Identifier	bs		644451	1					
ANR	644507	UnaryOperationExpression	- 1		644451	1					
ANR	644508	UnaryOperator	-		644451	0					
ANR	644509	PrimaryExpression	1		644451	1					
ANR	644510	PrimaryExpression	0		644451	2					
ANR	644511	ReturnType	static int		644451	1					
ANR	644512	Identifier	cmpnbbs		644451	2					
ANR	644513	ParameterList	"const void * _a , const void * _b"		644451	3					
ANR	644514	Parameter	const void * _a	88:20:2239:2252	644451	0	True				
ANR	644515	ParameterType	const void *		644451	0					
ANR	644516	Identifier	_a		644451	1					
ANR	644517	Parameter	const void * _b	88:36:2255:2268	644451	1	True				
ANR	644518	ParameterType	const void *		644451	0					
ANR	644519	Identifier	_b		644451	1					
ANR	644520	CFGEntryNode	ENTRY		644451		True				
ANR	644521	CFGExitNode	EXIT		644451		True				
ANR	644522	Symbol	a		644451						
ANR	644523	Symbol	bs		644451						
ANR	644524	Symbol	_a		644451						
ANR	644525	Symbol	b		644451						
ANR	644526	Symbol	as		644451						
ANR	644527	Symbol	_b		644451						
ANR	644528	Symbol	* a		644451						
ANR	644529	Symbol	b -> bbs		644451						
ANR	644530	Symbol	* b		644451						
ANR	644531	Symbol	r_list_length		644451						
ANR	644532	Symbol	a -> bbs		644451						
ANR	644533	Function	cmpaddr	95:0:2423:2576							
ANR	644534	FunctionDef	"cmpaddr (const void * _a , const void * _b)"		644533	0					
ANR	644535	CompoundStatement		95:52:2475:2576	644533	0					
ANR	644536	IdentifierDeclStatement	"const RAnalFunction * a = _a , * b = _b ;"	96:1:2478:2514	644533	0	True				
ANR	644537	IdentifierDecl	* a = _a		644533	0					
ANR	644538	IdentifierDeclType	const RAnalFunction *		644533	0					
ANR	644539	Identifier	a		644533	1					
ANR	644540	AssignmentExpression	* a = _a		644533	2		=			
ANR	644541	Identifier	_a		644533	0					
ANR	644542	Identifier	_a		644533	1					
ANR	644543	IdentifierDecl	* b = _b		644533	1					
ANR	644544	IdentifierDeclType	const RAnalFunction *		644533	0					
ANR	644545	Identifier	b		644533	1					
ANR	644546	AssignmentExpression	* b = _b		644533	2		=			
ANR	644547	Identifier	_b		644533	0					
ANR	644548	Identifier	_b		644533	1					
ANR	644549	ReturnStatement	return ( a -> addr > b -> addr ) ? 1 : ( a -> addr < b -> addr ) ? - 1 : 0 ;	97:1:2517:2574	644533	1	True				
ANR	644550	ConditionalExpression	( a -> addr > b -> addr ) ? 1 : ( a -> addr < b -> addr ) ? - 1 : 0		644533	0					
ANR	644551	Condition	a -> addr > b -> addr		644533	0					
ANR	644552	RelationalExpression	a -> addr > b -> addr		644533	0		>			
ANR	644553	PtrMemberAccess	a -> addr		644533	0					
ANR	644554	Identifier	a		644533	0					
ANR	644555	Identifier	addr		644533	1					
ANR	644556	PtrMemberAccess	b -> addr		644533	1					
ANR	644557	Identifier	b		644533	0					
ANR	644558	Identifier	addr		644533	1					
ANR	644559	PrimaryExpression	1		644533	1					
ANR	644560	ConditionalExpression	( a -> addr < b -> addr ) ? - 1 : 0		644533	2					
ANR	644561	Condition	a -> addr < b -> addr		644533	0					
ANR	644562	RelationalExpression	a -> addr < b -> addr		644533	0		<			
ANR	644563	PtrMemberAccess	a -> addr		644533	0					
ANR	644564	Identifier	a		644533	0					
ANR	644565	Identifier	addr		644533	1					
ANR	644566	PtrMemberAccess	b -> addr		644533	1					
ANR	644567	Identifier	b		644533	0					
ANR	644568	Identifier	addr		644533	1					
ANR	644569	UnaryOperationExpression	- 1		644533	1					
ANR	644570	UnaryOperator	-		644533	0					
ANR	644571	PrimaryExpression	1		644533	1					
ANR	644572	PrimaryExpression	0		644533	2					
ANR	644573	ReturnType	static int		644533	1					
ANR	644574	Identifier	cmpaddr		644533	2					
ANR	644575	ParameterList	"const void * _a , const void * _b"		644533	3					
ANR	644576	Parameter	const void * _a	95:20:2443:2456	644533	0	True				
ANR	644577	ParameterType	const void *		644533	0					
ANR	644578	Identifier	_a		644533	1					
ANR	644579	Parameter	const void * _b	95:36:2459:2472	644533	1	True				
ANR	644580	ParameterType	const void *		644533	0					
ANR	644581	Identifier	_b		644533	1					
ANR	644582	CFGEntryNode	ENTRY		644533		True				
ANR	644583	CFGExitNode	EXIT		644533		True				
ANR	644584	Symbol	a		644533						
ANR	644585	Symbol	_a		644533						
ANR	644586	Symbol	b		644533						
ANR	644587	Symbol	_b		644533						
ANR	644588	Symbol	a -> addr		644533						
ANR	644589	Symbol	* a		644533						
ANR	644590	Symbol	* b		644533						
ANR	644591	Symbol	b -> addr		644533						
ANR	644592	Function	getFunctionName	101:0:2580:3015							
ANR	644593	FunctionDef	"getFunctionName (RCore * core , ut64 addr)"		644592	0					
ANR	644594	CompoundStatement		101:53:2633:3015	644592	0					
ANR	644595	IdentifierDeclStatement	RBinFile * bf = r_bin_cur ( core -> bin ) ;	102:1:2636:2672	644592	0	True				
ANR	644596	IdentifierDecl	* bf = r_bin_cur ( core -> bin )		644592	0					
ANR	644597	IdentifierDeclType	RBinFile *		644592	0					
ANR	644598	Identifier	bf		644592	1					
ANR	644599	AssignmentExpression	* bf = r_bin_cur ( core -> bin )		644592	2		=			
ANR	644600	Identifier	bf		644592	0					
ANR	644601	CallExpression	r_bin_cur ( core -> bin )		644592	1					
ANR	644602	Callee	r_bin_cur		644592	0					
ANR	644603	Identifier	r_bin_cur		644592	0					
ANR	644604	ArgumentList	core -> bin		644592	1					
ANR	644605	Argument	core -> bin		644592	0					
ANR	644606	PtrMemberAccess	core -> bin		644592	0					
ANR	644607	Identifier	core		644592	0					
ANR	644608	Identifier	bin		644592	1					
ANR	644609	IfStatement	if ( bf && bf -> o )		644592	1					
ANR	644610	Condition	bf && bf -> o	103:5:2679:2689	644592	0	True				
ANR	644611	AndExpression	bf && bf -> o		644592	0		&&			
ANR	644612	Identifier	bf		644592	0					
ANR	644613	PtrMemberAccess	bf -> o		644592	1					
ANR	644614	Identifier	bf		644592	0					
ANR	644615	Identifier	o		644592	1					
ANR	644616	CompoundStatement		6:2:144:175	644592	1					
ANR	644617	IdentifierDeclStatement	Sdb * kv = bf -> o -> addr2klassmethod ;	104:2:2696:2729	644592	0	True				
ANR	644618	IdentifierDecl	* kv = bf -> o -> addr2klassmethod		644592	0					
ANR	644619	IdentifierDeclType	Sdb *		644592	0					
ANR	644620	Identifier	kv		644592	1					
ANR	644621	AssignmentExpression	* kv = bf -> o -> addr2klassmethod		644592	2		=			
ANR	644622	Identifier	kv		644592	0					
ANR	644623	PtrMemberAccess	bf -> o -> addr2klassmethod		644592	1					
ANR	644624	PtrMemberAccess	bf -> o		644592	0					
ANR	644625	Identifier	bf		644592	0					
ANR	644626	Identifier	o		644592	1					
ANR	644627	Identifier	addr2klassmethod		644592	1					
ANR	644628	Statement	char	105:2:2733:2736	644592	1	True				
ANR	644629	Statement	*	105:7:2738:2738	644592	2	True				
ANR	644630	Statement	at	105:8:2739:2740	644592	3	True				
ANR	644631	Statement	=	105:11:2742:2742	644592	4	True				
ANR	644632	Statement	sdb_fmt	105:13:2744:2750	644592	5	True				
ANR	644633	Statement	(	105:21:2752:2752	644592	6	True				
ANR	644634	Statement	"""0x%08"""	105:22:2753:2759	644592	7	True				
ANR	644635	Statement	PFMT64x	105:29:2760:2766	644592	8	True				
ANR	644636	Statement	","	105:36:2767:2767	644592	9	True				
ANR	644637	Statement	addr	105:38:2769:2772	644592	10	True				
ANR	644638	Statement	)	105:42:2773:2773	644592	11	True				
ANR	644639	ExpressionStatement		105:43:2774:2774	644592	12	True				
ANR	644640	IdentifierDeclStatement	"char * res = sdb_get ( kv , at , 0 ) ;"	106:2:2778:2809	644592	13	True				
ANR	644641	IdentifierDecl	"* res = sdb_get ( kv , at , 0 )"		644592	0					
ANR	644642	IdentifierDeclType	char *		644592	0					
ANR	644643	Identifier	res		644592	1					
ANR	644644	AssignmentExpression	"* res = sdb_get ( kv , at , 0 )"		644592	2		=			
ANR	644645	Identifier	res		644592	0					
ANR	644646	CallExpression	"sdb_get ( kv , at , 0 )"		644592	1					
ANR	644647	Callee	sdb_get		644592	0					
ANR	644648	Identifier	sdb_get		644592	0					
ANR	644649	ArgumentList	kv		644592	1					
ANR	644650	Argument	kv		644592	0					
ANR	644651	Identifier	kv		644592	0					
ANR	644652	Argument	at		644592	1					
ANR	644653	Identifier	at		644592	0					
ANR	644654	Argument	0		644592	2					
ANR	644655	PrimaryExpression	0		644592	0					
ANR	644656	IfStatement	if ( res )		644592	14					
ANR	644657	Condition	res	107:6:2817:2819	644592	0	True				
ANR	644658	Identifier	res		644592	0					
ANR	644659	CompoundStatement		7:11:188:188	644592	1					
ANR	644660	ReturnStatement	return strdup ( res ) ;	108:3:2827:2846	644592	0	True				
ANR	644661	CallExpression	strdup ( res )		644592	0					
ANR	644662	Callee	strdup		644592	0					
ANR	644663	Identifier	strdup		644592	0					
ANR	644664	ArgumentList	res		644592	1					
ANR	644665	Argument	res		644592	0					
ANR	644666	Identifier	res		644592	0					
ANR	644667	IdentifierDeclStatement	"RFlagItem * fi = r_flag_get_at ( core -> flags , addr , false ) ;"	111:1:2856:2912	644592	2	True				
ANR	644668	IdentifierDecl	"* fi = r_flag_get_at ( core -> flags , addr , false )"		644592	0					
ANR	644669	IdentifierDeclType	RFlagItem *		644592	0					
ANR	644670	Identifier	fi		644592	1					
ANR	644671	AssignmentExpression	"* fi = r_flag_get_at ( core -> flags , addr , false )"		644592	2		=			
ANR	644672	Identifier	fi		644592	0					
ANR	644673	CallExpression	"r_flag_get_at ( core -> flags , addr , false )"		644592	1					
ANR	644674	Callee	r_flag_get_at		644592	0					
ANR	644675	Identifier	r_flag_get_at		644592	0					
ANR	644676	ArgumentList	core -> flags		644592	1					
ANR	644677	Argument	core -> flags		644592	0					
ANR	644678	PtrMemberAccess	core -> flags		644592	0					
ANR	644679	Identifier	core		644592	0					
ANR	644680	Identifier	flags		644592	1					
ANR	644681	Argument	addr		644592	1					
ANR	644682	Identifier	addr		644592	0					
ANR	644683	Argument	false		644592	2					
ANR	644684	Identifier	false		644592	0					
ANR	644685	IfStatement	"if ( fi && fi -> name && strncmp ( fi -> name , ""sect"" , 4 ) )"		644592	3					
ANR	644686	Condition	"fi && fi -> name && strncmp ( fi -> name , ""sect"" , 4 )"	112:5:2919:2965	644592	0	True				
ANR	644687	AndExpression	"fi && fi -> name && strncmp ( fi -> name , ""sect"" , 4 )"		644592	0		&&			
ANR	644688	Identifier	fi		644592	0					
ANR	644689	AndExpression	"fi -> name && strncmp ( fi -> name , ""sect"" , 4 )"		644592	1		&&			
ANR	644690	PtrMemberAccess	fi -> name		644592	0					
ANR	644691	Identifier	fi		644592	0					
ANR	644692	Identifier	name		644592	1					
ANR	644693	CallExpression	"strncmp ( fi -> name , ""sect"" , 4 )"		644592	1					
ANR	644694	Callee	strncmp		644592	0					
ANR	644695	Identifier	strncmp		644592	0					
ANR	644696	ArgumentList	fi -> name		644592	1					
ANR	644697	Argument	fi -> name		644592	0					
ANR	644698	PtrMemberAccess	fi -> name		644592	0					
ANR	644699	Identifier	fi		644592	0					
ANR	644700	Identifier	name		644592	1					
ANR	644701	Argument	"""sect"""		644592	1					
ANR	644702	PrimaryExpression	"""sect"""		644592	0					
ANR	644703	Argument	4		644592	2					
ANR	644704	PrimaryExpression	4		644592	0					
ANR	644705	CompoundStatement		12:54:334:334	644592	1					
ANR	644706	ReturnStatement	return strdup ( fi -> name ) ;	113:2:2972:2996	644592	0	True				
ANR	644707	CallExpression	strdup ( fi -> name )		644592	0					
ANR	644708	Callee	strdup		644592	0					
ANR	644709	Identifier	strdup		644592	0					
ANR	644710	ArgumentList	fi -> name		644592	1					
ANR	644711	Argument	fi -> name		644592	0					
ANR	644712	PtrMemberAccess	fi -> name		644592	0					
ANR	644713	Identifier	fi		644592	0					
ANR	644714	Identifier	name		644592	1					
ANR	644715	ReturnStatement	return NULL ;	115:1:3002:3013	644592	4	True				
ANR	644716	Identifier	NULL		644592	0					
ANR	644717	ReturnType	static char *		644592	1					
ANR	644718	Identifier	getFunctionName		644592	2					
ANR	644719	ParameterList	"RCore * core , ut64 addr"		644592	3					
ANR	644720	Parameter	RCore * core	101:29:2609:2619	644592	0	True				
ANR	644721	ParameterType	RCore *		644592	0					
ANR	644722	Identifier	core		644592	1					
ANR	644723	Parameter	ut64 addr	101:42:2622:2630	644592	1	True				
ANR	644724	ParameterType	ut64		644592	0					
ANR	644725	Identifier	addr		644592	1					
ANR	644726	CFGEntryNode	ENTRY		644592		True				
ANR	644727	CFGExitNode	EXIT		644592		True				
ANR	644728	Symbol	res		644592						
ANR	644729	Symbol	fi		644592						
ANR	644730	Symbol	NULL		644592						
ANR	644731	Symbol	bf		644592						
ANR	644732	Symbol	* core		644592						
ANR	644733	Symbol	r_bin_cur		644592						
ANR	644734	Symbol	false		644592						
ANR	644735	Symbol	fi -> name		644592						
ANR	644736	Symbol	* bf		644592						
ANR	644737	Symbol	sdb_get		644592						
ANR	644738	Symbol	core -> flags		644592						
ANR	644739	Symbol	* fi		644592						
ANR	644740	Symbol	kv		644592						
ANR	644741	Symbol	* bf -> o		644592						
ANR	644742	Symbol	core		644592						
ANR	644743	Symbol	strncmp		644592						
ANR	644744	Symbol	* * bf		644592						
ANR	644745	Symbol	at		644592						
ANR	644746	Symbol	bf -> o		644592						
ANR	644747	Symbol	bf -> o -> addr2klassmethod		644592						
ANR	644748	Symbol	strdup		644592						
ANR	644749	Symbol	addr		644592						
ANR	644750	Symbol	core -> bin		644592						
ANR	644751	Symbol	r_flag_get_at		644592						
ANR	644752	DeclStmt									
ANR	644753	Decl							RCore	RCore *	mycore
ANR	644754	Function	is_string	122:0:3100:3707							
ANR	644755	FunctionDef	"is_string (const ut8 * buf , int size , int * len)"		644754	0					
ANR	644756	CompoundStatement		122:57:3157:3707	644754	0					
ANR	644757	IdentifierDeclStatement	"int i , fakeLen = 0 ;"	123:1:3160:3178	644754	0	True				
ANR	644758	IdentifierDecl	i		644754	0					
ANR	644759	IdentifierDeclType	int		644754	0					
ANR	644760	Identifier	i		644754	1					
ANR	644761	IdentifierDecl	fakeLen = 0		644754	1					
ANR	644762	IdentifierDeclType	int		644754	0					
ANR	644763	Identifier	fakeLen		644754	1					
ANR	644764	AssignmentExpression	fakeLen = 0		644754	2		=			
ANR	644765	Identifier	fakeLen		644754	0					
ANR	644766	PrimaryExpression	0		644754	1					
ANR	644767	IfStatement	if ( size < 1 )		644754	1					
ANR	644768	Condition	size < 1	124:5:3185:3192	644754	0	True				
ANR	644769	RelationalExpression	size < 1		644754	0		<			
ANR	644770	Identifier	size		644754	0					
ANR	644771	PrimaryExpression	1		644754	1					
ANR	644772	CompoundStatement		3:15:37:37	644754	1					
ANR	644773	ReturnStatement	return 0 ;	125:2:3199:3207	644754	0	True				
ANR	644774	PrimaryExpression	0		644754	0					
ANR	644775	IfStatement	if ( ! len )		644754	2					
ANR	644776	Condition	! len	127:5:3217:3220	644754	0	True				
ANR	644777	UnaryOperationExpression	! len		644754	0					
ANR	644778	UnaryOperator	!		644754	0					
ANR	644779	Identifier	len		644754	1					
ANR	644780	CompoundStatement		6:11:65:65	644754	1					
ANR	644781	ExpressionStatement	len = & fakeLen	128:2:3227:3241	644754	0	True				
ANR	644782	AssignmentExpression	len = & fakeLen		644754	0		=			
ANR	644783	Identifier	len		644754	0					
ANR	644784	UnaryOperationExpression	& fakeLen		644754	1					
ANR	644785	UnaryOperator	&		644754	0					
ANR	644786	Identifier	fakeLen		644754	1					
ANR	644787	IfStatement	if ( size > 3 && buf [ 0 ] && ! buf [ 1 ] && buf [ 2 ] && ! buf [ 3 ] )		644754	3					
ANR	644788	Condition	size > 3 && buf [ 0 ] && ! buf [ 1 ] && buf [ 2 ] && ! buf [ 3 ]	130:5:3251:3300	644754	0	True				
ANR	644789	AndExpression	size > 3 && buf [ 0 ] && ! buf [ 1 ] && buf [ 2 ] && ! buf [ 3 ]		644754	0		&&			
ANR	644790	RelationalExpression	size > 3		644754	0		>			
ANR	644791	Identifier	size		644754	0					
ANR	644792	PrimaryExpression	3		644754	1					
ANR	644793	AndExpression	buf [ 0 ] && ! buf [ 1 ] && buf [ 2 ] && ! buf [ 3 ]		644754	1		&&			
ANR	644794	ArrayIndexing	buf [ 0 ]		644754	0					
ANR	644795	Identifier	buf		644754	0					
ANR	644796	PrimaryExpression	0		644754	1					
ANR	644797	AndExpression	! buf [ 1 ] && buf [ 2 ] && ! buf [ 3 ]		644754	1		&&			
ANR	644798	UnaryOperationExpression	! buf [ 1 ]		644754	0					
ANR	644799	UnaryOperator	!		644754	0					
ANR	644800	ArrayIndexing	buf [ 1 ]		644754	1					
ANR	644801	Identifier	buf		644754	0					
ANR	644802	PrimaryExpression	1		644754	1					
ANR	644803	AndExpression	buf [ 2 ] && ! buf [ 3 ]		644754	1		&&			
ANR	644804	ArrayIndexing	buf [ 2 ]		644754	0					
ANR	644805	Identifier	buf		644754	0					
ANR	644806	PrimaryExpression	2		644754	1					
ANR	644807	UnaryOperationExpression	! buf [ 3 ]		644754	1					
ANR	644808	UnaryOperator	!		644754	0					
ANR	644809	ArrayIndexing	buf [ 3 ]		644754	1					
ANR	644810	Identifier	buf		644754	0					
ANR	644811	PrimaryExpression	3		644754	1					
ANR	644812	CompoundStatement		9:57:145:145	644754	1					
ANR	644813	ExpressionStatement	* len = 1	131:2:3307:3315	644754	0	True				
ANR	644814	AssignmentExpression	* len = 1		644754	0		=			
ANR	644815	UnaryOperationExpression	* len		644754	0					
ANR	644816	UnaryOperator	*		644754	0					
ANR	644817	Identifier	len		644754	1					
ANR	644818	PrimaryExpression	1		644754	1					
ANR	644819	ReturnStatement	return 2 ;	132:2:3360:3368	644754	1	True				
ANR	644820	PrimaryExpression	2		644754	0					
ANR	644821	ForStatement	for ( i = 0 ; i < size ; i ++ )		644754	4					
ANR	644822	ForInit	i = 0 ;	134:6:3390:3395	644754	0	True				
ANR	644823	AssignmentExpression	i = 0		644754	0		=			
ANR	644824	Identifier	i		644754	0					
ANR	644825	PrimaryExpression	0		644754	1					
ANR	644826	Condition	i < size	134:13:3397:3404	644754	1	True				
ANR	644827	RelationalExpression	i < size		644754	0		<			
ANR	644828	Identifier	i		644754	0					
ANR	644829	Identifier	size		644754	1					
ANR	644830	PostIncDecOperationExpression	i ++	134:23:3407:3409	644754	2	True				
ANR	644831	Identifier	i		644754	0					
ANR	644832	IncDec	++		644754	1					
ANR	644833	CompoundStatement		13:28:254:254	644754	3					
ANR	644834	IfStatement	if ( ! buf [ i ] && i > MINLEN )		644754	0					
ANR	644835	Condition	! buf [ i ] && i > MINLEN	135:6:3420:3440	644754	0	True				
ANR	644836	AndExpression	! buf [ i ] && i > MINLEN		644754	0		&&			
ANR	644837	UnaryOperationExpression	! buf [ i ]		644754	0					
ANR	644838	UnaryOperator	!		644754	0					
ANR	644839	ArrayIndexing	buf [ i ]		644754	1					
ANR	644840	Identifier	buf		644754	0					
ANR	644841	Identifier	i		644754	1					
ANR	644842	RelationalExpression	i > MINLEN		644754	1		>			
ANR	644843	Identifier	i		644754	0					
ANR	644844	Identifier	MINLEN		644754	1					
ANR	644845	CompoundStatement		14:29:285:285	644754	1					
ANR	644846	ExpressionStatement	* len = i	136:3:3448:3456	644754	0	True				
ANR	644847	AssignmentExpression	* len = i		644754	0		=			
ANR	644848	UnaryOperationExpression	* len		644754	0					
ANR	644849	UnaryOperator	*		644754	0					
ANR	644850	Identifier	len		644754	1					
ANR	644851	Identifier	i		644754	1					
ANR	644852	ReturnStatement	return 1 ;	137:3:3461:3469	644754	1	True				
ANR	644853	PrimaryExpression	1		644754	0					
ANR	644854	IfStatement	if ( buf [ i ] == 10 || buf [ i ] == 13 || buf [ i ] == 9 )		644754	1					
ANR	644855	Condition	buf [ i ] == 10 || buf [ i ] == 13 || buf [ i ] == 9	139:6:3481:3523	644754	0	True				
ANR	644856	OrExpression	buf [ i ] == 10 || buf [ i ] == 13 || buf [ i ] == 9		644754	0		||			
ANR	644857	EqualityExpression	buf [ i ] == 10		644754	0		==			
ANR	644858	ArrayIndexing	buf [ i ]		644754	0					
ANR	644859	Identifier	buf		644754	0					
ANR	644860	Identifier	i		644754	1					
ANR	644861	PrimaryExpression	10		644754	1					
ANR	644862	OrExpression	buf [ i ] == 13 || buf [ i ] == 9		644754	1		||			
ANR	644863	EqualityExpression	buf [ i ] == 13		644754	0		==			
ANR	644864	ArrayIndexing	buf [ i ]		644754	0					
ANR	644865	Identifier	buf		644754	0					
ANR	644866	Identifier	i		644754	1					
ANR	644867	PrimaryExpression	13		644754	1					
ANR	644868	EqualityExpression	buf [ i ] == 9		644754	1		==			
ANR	644869	ArrayIndexing	buf [ i ]		644754	0					
ANR	644870	Identifier	buf		644754	0					
ANR	644871	Identifier	i		644754	1					
ANR	644872	PrimaryExpression	9		644754	1					
ANR	644873	CompoundStatement		18:51:368:368	644754	1					
ANR	644874	ContinueStatement	continue ;	140:3:3531:3539	644754	0	True				
ANR	644875	IfStatement	if ( buf [ i ] < 32 || buf [ i ] > 127 )		644754	2					
ANR	644876	Condition	buf [ i ] < 32 || buf [ i ] > 127	142:6:3551:3577	644754	0	True				
ANR	644877	OrExpression	buf [ i ] < 32 || buf [ i ] > 127		644754	0		||			
ANR	644878	RelationalExpression	buf [ i ] < 32		644754	0		<			
ANR	644879	ArrayIndexing	buf [ i ]		644754	0					
ANR	644880	Identifier	buf		644754	0					
ANR	644881	Identifier	i		644754	1					
ANR	644882	PrimaryExpression	32		644754	1					
ANR	644883	RelationalExpression	buf [ i ] > 127		644754	1		>			
ANR	644884	ArrayIndexing	buf [ i ]		644754	0					
ANR	644885	Identifier	buf		644754	0					
ANR	644886	Identifier	i		644754	1					
ANR	644887	PrimaryExpression	127		644754	1					
ANR	644888	CompoundStatement		21:35:422:422	644754	1					
ANR	644889	ReturnStatement	return 0 ;	144:3:3606:3614	644754	0	True				
ANR	644890	PrimaryExpression	0		644754	0					
ANR	644891	IfStatement	if ( ! IS_PRINTABLE ( buf [ i ] ) )		644754	3					
ANR	644892	Condition	! IS_PRINTABLE ( buf [ i ] )	146:6:3626:3647	644754	0	True				
ANR	644893	UnaryOperationExpression	! IS_PRINTABLE ( buf [ i ] )		644754	0					
ANR	644894	UnaryOperator	!		644754	0					
ANR	644895	CallExpression	IS_PRINTABLE ( buf [ i ] )		644754	1					
ANR	644896	Callee	IS_PRINTABLE		644754	0					
ANR	644897	Identifier	IS_PRINTABLE		644754	0					
ANR	644898	ArgumentList	buf [ i ]		644754	1					
ANR	644899	Argument	buf [ i ]		644754	0					
ANR	644900	ArrayIndexing	buf [ i ]		644754	0					
ANR	644901	Identifier	buf		644754	0					
ANR	644902	Identifier	i		644754	1					
ANR	644903	CompoundStatement		25:30:492:492	644754	1					
ANR	644904	ExpressionStatement	* len = i	147:3:3655:3663	644754	0	True				
ANR	644905	AssignmentExpression	* len = i		644754	0		=			
ANR	644906	UnaryOperationExpression	* len		644754	0					
ANR	644907	UnaryOperator	*		644754	0					
ANR	644908	Identifier	len		644754	1					
ANR	644909	Identifier	i		644754	1					
ANR	644910	ReturnStatement	return 0 ;	148:3:3668:3676	644754	1	True				
ANR	644911	PrimaryExpression	0		644754	0					
ANR	644912	ExpressionStatement	* len = i	151:1:3686:3694	644754	5	True				
ANR	644913	AssignmentExpression	* len = i		644754	0		=			
ANR	644914	UnaryOperationExpression	* len		644754	0					
ANR	644915	UnaryOperator	*		644754	0					
ANR	644916	Identifier	len		644754	1					
ANR	644917	Identifier	i		644754	1					
ANR	644918	ReturnStatement	return 1 ;	152:1:3697:3705	644754	6	True				
ANR	644919	PrimaryExpression	1		644754	0					
ANR	644920	ReturnType	static int		644754	1					
ANR	644921	Identifier	is_string		644754	2					
ANR	644922	ParameterList	"const ut8 * buf , int size , int * len"		644754	3					
ANR	644923	Parameter	const ut8 * buf	122:21:3121:3134	644754	0	True				
ANR	644924	ParameterType	const ut8 *		644754	0					
ANR	644925	Identifier	buf		644754	1					
ANR	644926	Parameter	int size	122:37:3137:3144	644754	1	True				
ANR	644927	ParameterType	int		644754	0					
ANR	644928	Identifier	size		644754	1					
ANR	644929	Parameter	int * len	122:47:3147:3154	644754	2	True				
ANR	644930	ParameterType	int *		644754	0					
ANR	644931	Identifier	len		644754	1					
ANR	644932	CFGEntryNode	ENTRY		644754		True				
ANR	644933	CFGExitNode	EXIT		644754		True				
ANR	644934	Symbol	buf		644754						
ANR	644935	Symbol	* buf		644754						
ANR	644936	Symbol	* i		644754						
ANR	644937	Symbol	IS_PRINTABLE		644754						
ANR	644938	Symbol	size		644754						
ANR	644939	Symbol	len		644754						
ANR	644940	Symbol	fakeLen		644754						
ANR	644941	Symbol	& fakeLen		644754						
ANR	644942	Symbol	i		644754						
ANR	644943	Symbol	MINLEN		644754						
ANR	644944	Symbol	* len		644754						
ANR	644945	Function	is_string_at	155:0:3710:5079							
ANR	644946	FunctionDef	"is_string_at (RCore * core , ut64 addr , int * olen)"		644945	0					
ANR	644947	CompoundStatement		155:61:3771:5079	644945	0					
ANR	644948	IdentifierDeclStatement	ut8 rstr [ 128 ] = { 0 } ;	156:1:3774:3793	644945	0	True				
ANR	644949	IdentifierDecl	rstr [ 128 ] = { 0 }		644945	0					
ANR	644950	IdentifierDeclType	ut8 [ 128 ]		644945	0					
ANR	644951	Identifier	rstr		644945	1					
ANR	644952	PrimaryExpression	128		644945	2					
ANR	644953	AssignmentExpression	rstr [ 128 ] = { 0 }		644945	3		=			
ANR	644954	Identifier	rstr		644945	0					
ANR	644955	InitializerList	0		644945	1					
ANR	644956	PrimaryExpression	0		644945	0					
ANR	644957	IdentifierDeclStatement	"int ret = 0 , len = 0 ;"	157:1:3796:3816	644945	1	True				
ANR	644958	IdentifierDecl	ret = 0		644945	0					
ANR	644959	IdentifierDeclType	int		644945	0					
ANR	644960	Identifier	ret		644945	1					
ANR	644961	AssignmentExpression	ret = 0		644945	2		=			
ANR	644962	Identifier	ret		644945	0					
ANR	644963	PrimaryExpression	0		644945	1					
ANR	644964	IdentifierDecl	len = 0		644945	1					
ANR	644965	IdentifierDeclType	int		644945	0					
ANR	644966	Identifier	len		644945	1					
ANR	644967	AssignmentExpression	len = 0		644945	2		=			
ANR	644968	Identifier	len		644945	0					
ANR	644969	PrimaryExpression	0		644945	1					
ANR	644970	IdentifierDeclStatement	"ut8 * str = calloc ( 256 , 1 ) ;"	158:1:3819:3845	644945	2	True				
ANR	644971	IdentifierDecl	"* str = calloc ( 256 , 1 )"		644945	0					
ANR	644972	IdentifierDeclType	ut8 *		644945	0					
ANR	644973	Identifier	str		644945	1					
ANR	644974	AssignmentExpression	"* str = calloc ( 256 , 1 )"		644945	2		=			
ANR	644975	Identifier	str		644945	0					
ANR	644976	CallExpression	"calloc ( 256 , 1 )"		644945	1					
ANR	644977	Callee	calloc		644945	0					
ANR	644978	Identifier	calloc		644945	0					
ANR	644979	ArgumentList	256		644945	1					
ANR	644980	Argument	256		644945	0					
ANR	644981	PrimaryExpression	256		644945	0					
ANR	644982	Argument	1		644945	1					
ANR	644983	PrimaryExpression	1		644945	0					
ANR	644984	IfStatement	if ( ! str )		644945	3					
ANR	644985	Condition	! str	159:5:3852:3855	644945	0	True				
ANR	644986	UnaryOperationExpression	! str		644945	0					
ANR	644987	UnaryOperator	!		644945	0					
ANR	644988	Identifier	str		644945	1					
ANR	644989	CompoundStatement		5:11:86:86	644945	1					
ANR	644990	IfStatement	if ( olen )		644945	0					
ANR	644991	Condition	olen	160:6:3866:3869	644945	0	True				
ANR	644992	Identifier	olen		644945	0					
ANR	644993	CompoundStatement		6:12:100:100	644945	1					
ANR	644994	ExpressionStatement	* olen = 0	161:3:3877:3886	644945	0	True				
ANR	644995	AssignmentExpression	* olen = 0		644945	0		=			
ANR	644996	UnaryOperationExpression	* olen		644945	0					
ANR	644997	UnaryOperator	*		644945	0					
ANR	644998	Identifier	olen		644945	1					
ANR	644999	PrimaryExpression	0		644945	1					
ANR	645000	ReturnStatement	return NULL ;	163:2:3894:3905	644945	1	True				
ANR	645001	Identifier	NULL		644945	0					
ANR	645002	ExpressionStatement	"r_io_read_at ( core -> io , addr , str , 255 )"	165:1:3911:3950	644945	4	True				
ANR	645003	CallExpression	"r_io_read_at ( core -> io , addr , str , 255 )"		644945	0					
ANR	645004	Callee	r_io_read_at		644945	0					
ANR	645005	Identifier	r_io_read_at		644945	0					
ANR	645006	ArgumentList	core -> io		644945	1					
ANR	645007	Argument	core -> io		644945	0					
ANR	645008	PtrMemberAccess	core -> io		644945	0					
ANR	645009	Identifier	core		644945	0					
ANR	645010	Identifier	io		644945	1					
ANR	645011	Argument	addr		644945	1					
ANR	645012	Identifier	addr		644945	0					
ANR	645013	Argument	str		644945	2					
ANR	645014	Identifier	str		644945	0					
ANR	645015	Argument	255		644945	3					
ANR	645016	PrimaryExpression	255		644945	0					
ANR	645017	ExpressionStatement	str [ 255 ] = 0	167:1:3954:3966	644945	5	True				
ANR	645018	AssignmentExpression	str [ 255 ] = 0		644945	0		=			
ANR	645019	ArrayIndexing	str [ 255 ]		644945	0					
ANR	645020	Identifier	str		644945	0					
ANR	645021	PrimaryExpression	255		644945	1					
ANR	645022	PrimaryExpression	0		644945	1					
ANR	645023	IfStatement	"if ( is_string ( str , 256 , & len ) )"		644945	6					
ANR	645024	Condition	"is_string ( str , 256 , & len )"	168:5:3973:3998	644945	0	True				
ANR	645025	CallExpression	"is_string ( str , 256 , & len )"		644945	0					
ANR	645026	Callee	is_string		644945	0					
ANR	645027	Identifier	is_string		644945	0					
ANR	645028	ArgumentList	str		644945	1					
ANR	645029	Argument	str		644945	0					
ANR	645030	Identifier	str		644945	0					
ANR	645031	Argument	256		644945	1					
ANR	645032	PrimaryExpression	256		644945	0					
ANR	645033	Argument	& len		644945	2					
ANR	645034	UnaryOperationExpression	& len		644945	0					
ANR	645035	UnaryOperator	&		644945	0					
ANR	645036	Identifier	len		644945	1					
ANR	645037	CompoundStatement		14:33:229:229	644945	1					
ANR	645038	IfStatement	if ( olen )		644945	0					
ANR	645039	Condition	olen	169:6:4009:4012	644945	0	True				
ANR	645040	Identifier	olen		644945	0					
ANR	645041	CompoundStatement		15:12:243:243	644945	1					
ANR	645042	ExpressionStatement	* olen = len	170:3:4020:4031	644945	0	True				
ANR	645043	AssignmentExpression	* olen = len		644945	0		=			
ANR	645044	UnaryOperationExpression	* olen		644945	0					
ANR	645045	UnaryOperator	*		644945	0					
ANR	645046	Identifier	olen		644945	1					
ANR	645047	Identifier	len		644945	1					
ANR	645048	ReturnStatement	return ( char * ) str ;	172:2:4039:4057	644945	1	True				
ANR	645049	CastExpression	( char * ) str		644945	0					
ANR	645050	CastTarget	char *		644945	0					
ANR	645051	Identifier	str		644945	1					
ANR	645052	IdentifierDeclStatement	ut64 * cstr = ( ut64 * ) str ;	175:1:4065:4088	644945	7	True				
ANR	645053	IdentifierDecl	* cstr = ( ut64 * ) str		644945	0					
ANR	645054	IdentifierDeclType	ut64 *		644945	0					
ANR	645055	Identifier	cstr		644945	1					
ANR	645056	AssignmentExpression	* cstr = ( ut64 * ) str		644945	2		=			
ANR	645057	Identifier	cstr		644945	0					
ANR	645058	CastExpression	( ut64 * ) str		644945	1					
ANR	645059	CastTarget	ut64 *		644945	0					
ANR	645060	Identifier	str		644945	1					
ANR	645061	IdentifierDeclStatement	ut64 lowptr = cstr [ 0 ] ;	176:1:4091:4112	644945	8	True				
ANR	645062	IdentifierDecl	lowptr = cstr [ 0 ]		644945	0					
ANR	645063	IdentifierDeclType	ut64		644945	0					
ANR	645064	Identifier	lowptr		644945	1					
ANR	645065	AssignmentExpression	lowptr = cstr [ 0 ]		644945	2		=			
ANR	645066	Identifier	lowptr		644945	0					
ANR	645067	ArrayIndexing	cstr [ 0 ]		644945	1					
ANR	645068	Identifier	cstr		644945	0					
ANR	645069	PrimaryExpression	0		644945	1					
ANR	645070	IfStatement	if ( lowptr >> 32 )		644945	9					
ANR	645071	Condition	lowptr >> 32	177:5:4119:4130	644945	0	True				
ANR	645072	ShiftExpression	lowptr >> 32		644945	0		>>			
ANR	645073	Identifier	lowptr		644945	0					
ANR	645074	PrimaryExpression	32		644945	1					
ANR	645075	CompoundStatement		23:19:361:361	644945	1					
ANR	645076	ExpressionStatement	lowptr &= UT32_MAX	178:2:4161:4179	644945	0	True				
ANR	645077	AssignmentExpression	lowptr &= UT32_MAX		644945	0		&=			
ANR	645078	Identifier	lowptr		644945	0					
ANR	645079	Identifier	UT32_MAX		644945	1					
ANR	645080	IfStatement	if ( cstr [ 0 ] == 0 && cstr [ 1 ] < 0x1000 )		644945	10					
ANR	645081	Condition	cstr [ 0 ] == 0 && cstr [ 1 ] < 0x1000	181:5:4201:4232	644945	0	True				
ANR	645082	AndExpression	cstr [ 0 ] == 0 && cstr [ 1 ] < 0x1000		644945	0		&&			
ANR	645083	EqualityExpression	cstr [ 0 ] == 0		644945	0		==			
ANR	645084	ArrayIndexing	cstr [ 0 ]		644945	0					
ANR	645085	Identifier	cstr		644945	0					
ANR	645086	PrimaryExpression	0		644945	1					
ANR	645087	PrimaryExpression	0		644945	1					
ANR	645088	RelationalExpression	cstr [ 1 ] < 0x1000		644945	1		<			
ANR	645089	ArrayIndexing	cstr [ 1 ]		644945	0					
ANR	645090	Identifier	cstr		644945	0					
ANR	645091	PrimaryExpression	1		644945	1					
ANR	645092	PrimaryExpression	0x1000		644945	1					
ANR	645093	CompoundStatement		28:2:467:485	644945	1					
ANR	645094	IdentifierDeclStatement	ut64 ptr = cstr [ 2 ] ;	182:2:4239:4257	644945	0	True				
ANR	645095	IdentifierDecl	ptr = cstr [ 2 ]		644945	0					
ANR	645096	IdentifierDeclType	ut64		644945	0					
ANR	645097	Identifier	ptr		644945	1					
ANR	645098	AssignmentExpression	ptr = cstr [ 2 ]		644945	2		=			
ANR	645099	Identifier	ptr		644945	0					
ANR	645100	ArrayIndexing	cstr [ 2 ]		644945	1					
ANR	645101	Identifier	cstr		644945	0					
ANR	645102	PrimaryExpression	2		644945	1					
ANR	645103	IfStatement	if ( ptr >> 32 )		644945	1					
ANR	645104	Condition	ptr >> 32	183:6:4265:4273	644945	0	True				
ANR	645105	ShiftExpression	ptr >> 32		644945	0		>>			
ANR	645106	Identifier	ptr		644945	0					
ANR	645107	PrimaryExpression	32		644945	1					
ANR	645108	CompoundStatement		29:17:504:504	644945	1					
ANR	645109	ExpressionStatement	ptr &= UT32_MAX	184:3:4305:4320	644945	0	True				
ANR	645110	AssignmentExpression	ptr &= UT32_MAX		644945	0		&=			
ANR	645111	Identifier	ptr		644945	0					
ANR	645112	Identifier	UT32_MAX		644945	1					
ANR	645113	IfStatement	if ( ptr )		644945	2					
ANR	645114	Condition	ptr	186:6:4332:4334	644945	0	True				
ANR	645115	Identifier	ptr		644945	0					
ANR	645116	CompoundStatement		32:11:565:565	644945	1					
ANR	645117	ExpressionStatement	"r_io_read_at ( core -> io , ptr , rstr , sizeof ( rstr ) )"	187:3:4343:4392	644945	0	True				
ANR	645118	CallExpression	"r_io_read_at ( core -> io , ptr , rstr , sizeof ( rstr ) )"		644945	0					
ANR	645119	Callee	r_io_read_at		644945	0					
ANR	645120	Identifier	r_io_read_at		644945	0					
ANR	645121	ArgumentList	core -> io		644945	1					
ANR	645122	Argument	core -> io		644945	0					
ANR	645123	PtrMemberAccess	core -> io		644945	0					
ANR	645124	Identifier	core		644945	0					
ANR	645125	Identifier	io		644945	1					
ANR	645126	Argument	ptr		644945	1					
ANR	645127	Identifier	ptr		644945	0					
ANR	645128	Argument	rstr		644945	2					
ANR	645129	Identifier	rstr		644945	0					
ANR	645130	Argument	sizeof ( rstr )		644945	3					
ANR	645131	SizeofExpression	sizeof ( rstr )		644945	0					
ANR	645132	Sizeof	sizeof		644945	0					
ANR	645133	SizeofOperand	rstr		644945	1					
ANR	645134	ExpressionStatement	rstr [ 127 ] = 0	188:3:4397:4410	644945	1	True				
ANR	645135	AssignmentExpression	rstr [ 127 ] = 0		644945	0		=			
ANR	645136	ArrayIndexing	rstr [ 127 ]		644945	0					
ANR	645137	Identifier	rstr		644945	0					
ANR	645138	PrimaryExpression	127		644945	1					
ANR	645139	PrimaryExpression	0		644945	1					
ANR	645140	ExpressionStatement	"ret = is_string ( rstr , 128 , & len )"	189:3:4415:4448	644945	2	True				
ANR	645141	AssignmentExpression	"ret = is_string ( rstr , 128 , & len )"		644945	0		=			
ANR	645142	Identifier	ret		644945	0					
ANR	645143	CallExpression	"is_string ( rstr , 128 , & len )"		644945	1					
ANR	645144	Callee	is_string		644945	0					
ANR	645145	Identifier	is_string		644945	0					
ANR	645146	ArgumentList	rstr		644945	1					
ANR	645147	Argument	rstr		644945	0					
ANR	645148	Identifier	rstr		644945	0					
ANR	645149	Argument	128		644945	1					
ANR	645150	PrimaryExpression	128		644945	0					
ANR	645151	Argument	& len		644945	2					
ANR	645152	UnaryOperationExpression	& len		644945	0					
ANR	645153	UnaryOperator	&		644945	0					
ANR	645154	Identifier	len		644945	1					
ANR	645155	IfStatement	if ( ret )		644945	3					
ANR	645156	Condition	ret	190:7:4457:4459	644945	0	True				
ANR	645157	Identifier	ret		644945	0					
ANR	645158	CompoundStatement		36:12:690:690	644945	1					
ANR	645159	ExpressionStatement	"strcpy ( ( char * ) str , ( char * ) rstr )"	191:4:4468:4502	644945	0	True				
ANR	645160	CallExpression	"strcpy ( ( char * ) str , ( char * ) rstr )"		644945	0					
ANR	645161	Callee	strcpy		644945	0					
ANR	645162	Identifier	strcpy		644945	0					
ANR	645163	ArgumentList	( char * ) str		644945	1					
ANR	645164	Argument	( char * ) str		644945	0					
ANR	645165	CastExpression	( char * ) str		644945	0					
ANR	645166	CastTarget	char *		644945	0					
ANR	645167	Identifier	str		644945	1					
ANR	645168	Argument	( char * ) rstr		644945	1					
ANR	645169	CastExpression	( char * ) rstr		644945	0					
ANR	645170	CastTarget	char *		644945	0					
ANR	645171	Identifier	rstr		644945	1					
ANR	645172	IfStatement	if ( olen )		644945	1					
ANR	645173	Condition	olen	192:8:4512:4515	644945	0	True				
ANR	645174	Identifier	olen		644945	0					
ANR	645175	CompoundStatement		38:14:746:746	644945	1					
ANR	645176	ExpressionStatement	* olen = len	193:5:4525:4536	644945	0	True				
ANR	645177	AssignmentExpression	* olen = len		644945	0		=			
ANR	645178	UnaryOperationExpression	* olen		644945	0					
ANR	645179	UnaryOperator	*		644945	0					
ANR	645180	Identifier	olen		644945	1					
ANR	645181	Identifier	len		644945	1					
ANR	645182	ReturnStatement	return ( char * ) str ;	195:4:4548:4566	644945	2	True				
ANR	645183	CastExpression	( char * ) str		644945	0					
ANR	645184	CastTarget	char *		644945	0					
ANR	645185	Identifier	str		644945	1					
ANR	645186	ElseStatement	else		644945	0					
ANR	645187	CompoundStatement		44:8:813:813	644945	0					
ANR	645188	ExpressionStatement	"r_io_read_at ( core -> io , lowptr , rstr , sizeof ( rstr ) )"	200:2:4602:4654	644945	0	True				
ANR	645189	CallExpression	"r_io_read_at ( core -> io , lowptr , rstr , sizeof ( rstr ) )"		644945	0					
ANR	645190	Callee	r_io_read_at		644945	0					
ANR	645191	Identifier	r_io_read_at		644945	0					
ANR	645192	ArgumentList	core -> io		644945	1					
ANR	645193	Argument	core -> io		644945	0					
ANR	645194	PtrMemberAccess	core -> io		644945	0					
ANR	645195	Identifier	core		644945	0					
ANR	645196	Identifier	io		644945	1					
ANR	645197	Argument	lowptr		644945	1					
ANR	645198	Identifier	lowptr		644945	0					
ANR	645199	Argument	rstr		644945	2					
ANR	645200	Identifier	rstr		644945	0					
ANR	645201	Argument	sizeof ( rstr )		644945	3					
ANR	645202	SizeofExpression	sizeof ( rstr )		644945	0					
ANR	645203	Sizeof	sizeof		644945	0					
ANR	645204	SizeofOperand	rstr		644945	1					
ANR	645205	ExpressionStatement	rstr [ 127 ] = 0	201:2:4658:4671	644945	1	True				
ANR	645206	AssignmentExpression	rstr [ 127 ] = 0		644945	0		=			
ANR	645207	ArrayIndexing	rstr [ 127 ]		644945	0					
ANR	645208	Identifier	rstr		644945	0					
ANR	645209	PrimaryExpression	127		644945	1					
ANR	645210	PrimaryExpression	0		644945	1					
ANR	645211	ExpressionStatement	"ret = is_string ( rstr , sizeof ( rstr ) , & len )"	202:2:4675:4718	644945	2	True				
ANR	645212	AssignmentExpression	"ret = is_string ( rstr , sizeof ( rstr ) , & len )"		644945	0		=			
ANR	645213	Identifier	ret		644945	0					
ANR	645214	CallExpression	"is_string ( rstr , sizeof ( rstr ) , & len )"		644945	1					
ANR	645215	Callee	is_string		644945	0					
ANR	645216	Identifier	is_string		644945	0					
ANR	645217	ArgumentList	rstr		644945	1					
ANR	645218	Argument	rstr		644945	0					
ANR	645219	Identifier	rstr		644945	0					
ANR	645220	Argument	sizeof ( rstr )		644945	1					
ANR	645221	SizeofExpression	sizeof ( rstr )		644945	0					
ANR	645222	Sizeof	sizeof		644945	0					
ANR	645223	SizeofOperand	rstr		644945	1					
ANR	645224	Argument	& len		644945	2					
ANR	645225	UnaryOperationExpression	& len		644945	0					
ANR	645226	UnaryOperator	&		644945	0					
ANR	645227	Identifier	len		644945	1					
ANR	645228	IfStatement	if ( ret )		644945	3					
ANR	645229	Condition	ret	203:6:4726:4728	644945	0	True				
ANR	645230	Identifier	ret		644945	0					
ANR	645231	CompoundStatement		49:11:959:959	644945	1					
ANR	645232	ExpressionStatement	"strcpy ( ( char * ) str , ( char * ) rstr )"	204:3:4736:4770	644945	0	True				
ANR	645233	CallExpression	"strcpy ( ( char * ) str , ( char * ) rstr )"		644945	0					
ANR	645234	Callee	strcpy		644945	0					
ANR	645235	Identifier	strcpy		644945	0					
ANR	645236	ArgumentList	( char * ) str		644945	1					
ANR	645237	Argument	( char * ) str		644945	0					
ANR	645238	CastExpression	( char * ) str		644945	0					
ANR	645239	CastTarget	char *		644945	0					
ANR	645240	Identifier	str		644945	1					
ANR	645241	Argument	( char * ) rstr		644945	1					
ANR	645242	CastExpression	( char * ) rstr		644945	0					
ANR	645243	CastTarget	char *		644945	0					
ANR	645244	Identifier	rstr		644945	1					
ANR	645245	IfStatement	if ( olen )		644945	1					
ANR	645246	Condition	olen	205:7:4779:4782	644945	0	True				
ANR	645247	Identifier	olen		644945	0					
ANR	645248	CompoundStatement		51:13:1013:1013	644945	1					
ANR	645249	ExpressionStatement	* olen = len	206:4:4791:4802	644945	0	True				
ANR	645250	AssignmentExpression	* olen = len		644945	0		=			
ANR	645251	UnaryOperationExpression	* olen		644945	0					
ANR	645252	UnaryOperator	*		644945	0					
ANR	645253	Identifier	olen		644945	1					
ANR	645254	Identifier	len		644945	1					
ANR	645255	ReturnStatement	return ( char * ) str ;	208:3:4812:4830	644945	2	True				
ANR	645256	CastExpression	( char * ) str		644945	0					
ANR	645257	CastTarget	char *		644945	0					
ANR	645258	Identifier	str		644945	1					
ANR	645259	IfStatement	if ( len < 1 )		644945	11					
ANR	645260	Condition	len < 1	212:5:4890:4896	644945	0	True				
ANR	645261	RelationalExpression	len < 1		644945	0		<			
ANR	645262	Identifier	len		644945	0					
ANR	645263	PrimaryExpression	1		644945	1					
ANR	645264	CompoundStatement		58:14:1127:1127	644945	1					
ANR	645265	ExpressionStatement	ret = 0	213:2:4903:4910	644945	0	True				
ANR	645266	AssignmentExpression	ret = 0		644945	0		=			
ANR	645267	Identifier	ret		644945	0					
ANR	645268	PrimaryExpression	0		644945	1					
ANR	645269	ExpressionStatement	free ( str )	214:2:4914:4924	644945	1	True				
ANR	645270	CallExpression	free ( str )		644945	0					
ANR	645271	Callee	free		644945	0					
ANR	645272	Identifier	free		644945	0					
ANR	645273	ArgumentList	str		644945	1					
ANR	645274	Argument	str		644945	0					
ANR	645275	Identifier	str		644945	0					
ANR	645276	ExpressionStatement	len = - 1	215:2:4928:4936	644945	2	True				
ANR	645277	AssignmentExpression	len = - 1		644945	0		=			
ANR	645278	Identifier	len		644945	0					
ANR	645279	UnaryOperationExpression	- 1		644945	1					
ANR	645280	UnaryOperator	-		644945	0					
ANR	645281	PrimaryExpression	1		644945	1					
ANR	645282	ElseStatement	else		644945	0					
ANR	645283	IfStatement	if ( olen )		644945	0					
ANR	645284	Condition	olen	216:12:4950:4953	644945	0	True				
ANR	645285	Identifier	olen		644945	0					
ANR	645286	CompoundStatement		62:18:1184:1184	644945	1					
ANR	645287	ExpressionStatement	* olen = len	217:2:4960:4971	644945	0	True				
ANR	645288	AssignmentExpression	* olen = len		644945	0		=			
ANR	645289	UnaryOperationExpression	* olen		644945	0					
ANR	645290	UnaryOperator	*		644945	0					
ANR	645291	Identifier	olen		644945	1					
ANR	645292	Identifier	len		644945	1					
ANR	645293	ReturnStatement	return ret ? ( char * ) str : NULL ;	220:1:5048:5077	644945	12	True				
ANR	645294	ConditionalExpression	ret ? ( char * ) str : NULL		644945	0					
ANR	645295	Condition	ret		644945	0					
ANR	645296	Identifier	ret		644945	0					
ANR	645297	CastExpression	( char * ) str		644945	1					
ANR	645298	CastTarget	char *		644945	0					
ANR	645299	Identifier	str		644945	1					
ANR	645300	Identifier	NULL		644945	2					
ANR	645301	ReturnType	static char *		644945	1					
ANR	645302	Identifier	is_string_at		644945	2					
ANR	645303	ParameterList	"RCore * core , ut64 addr , int * olen"		644945	3					
ANR	645304	Parameter	RCore * core	155:26:3736:3746	644945	0	True				
ANR	645305	ParameterType	RCore *		644945	0					
ANR	645306	Identifier	core		644945	1					
ANR	645307	Parameter	ut64 addr	155:39:3749:3757	644945	1	True				
ANR	645308	ParameterType	ut64		644945	0					
ANR	645309	Identifier	addr		644945	1					
ANR	645310	Parameter	int * olen	155:50:3760:3768	644945	2	True				
ANR	645311	ParameterType	int *		644945	0					
ANR	645312	Identifier	olen		644945	1					
ANR	645313	CFGEntryNode	ENTRY		644945		True				
ANR	645314	CFGExitNode	EXIT		644945		True				
ANR	645315	Symbol	ret		644945						
ANR	645316	Symbol	cstr		644945						
ANR	645317	Symbol	UT32_MAX		644945						
ANR	645318	Symbol	NULL		644945						
ANR	645319	Symbol	lowptr		644945						
ANR	645320	Symbol	* core		644945						
ANR	645321	Symbol	rstr		644945						
ANR	645322	Symbol	calloc		644945						
ANR	645323	Symbol	ptr		644945						
ANR	645324	Symbol	str		644945						
ANR	645325	Symbol	core		644945						
ANR	645326	Symbol	* rstr		644945						
ANR	645327	Symbol	olen		644945						
ANR	645328	Symbol	len		644945						
ANR	645329	Symbol	core -> io		644945						
ANR	645330	Symbol	is_string		644945						
ANR	645331	Symbol	* cstr		644945						
ANR	645332	Symbol	* str		644945						
ANR	645333	Symbol	addr		644945						
ANR	645334	Symbol	& len		644945						
ANR	645335	Symbol	* olen		644945						
ANR	645336	Function	r_core_anal_address	224:0:5141:8497							
ANR	645337	FunctionDef	"r_core_anal_address (RCore * core , ut64 addr)"		645336	0					
ANR	645338	CompoundStatement		224:55:5196:8497	645336	0					
ANR	645339	IdentifierDeclStatement	ut64 types = 0 ;	225:1:5199:5213	645336	0	True				
ANR	645340	IdentifierDecl	types = 0		645336	0					
ANR	645341	IdentifierDeclType	ut64		645336	0					
ANR	645342	Identifier	types		645336	1					
ANR	645343	AssignmentExpression	types = 0		645336	2		=			
ANR	645344	Identifier	types		645336	0					
ANR	645345	PrimaryExpression	0		645336	1					
ANR	645346	IdentifierDeclStatement	RRegSet * rs = NULL ;	226:1:5216:5234	645336	1	True				
ANR	645347	IdentifierDecl	* rs = NULL		645336	0					
ANR	645348	IdentifierDeclType	RRegSet *		645336	0					
ANR	645349	Identifier	rs		645336	1					
ANR	645350	AssignmentExpression	* rs = NULL		645336	2		=			
ANR	645351	Identifier	NULL		645336	0					
ANR	645352	Identifier	NULL		645336	1					
ANR	645353	IfStatement	if ( ! core )		645336	2					
ANR	645354	Condition	! core	227:5:5241:5245	645336	0	True				
ANR	645355	UnaryOperationExpression	! core		645336	0					
ANR	645356	UnaryOperator	!		645336	0					
ANR	645357	Identifier	core		645336	1					
ANR	645358	CompoundStatement		4:12:51:51	645336	1					
ANR	645359	ReturnStatement	return 0 ;	228:2:5252:5260	645336	0	True				
ANR	645360	PrimaryExpression	0		645336	0					
ANR	645361	IfStatement	if ( core -> dbg && core -> dbg -> reg )		645336	3					
ANR	645362	Condition	core -> dbg && core -> dbg -> reg	230:5:5270:5296	645336	0	True				
ANR	645363	AndExpression	core -> dbg && core -> dbg -> reg		645336	0		&&			
ANR	645364	PtrMemberAccess	core -> dbg		645336	0					
ANR	645365	Identifier	core		645336	0					
ANR	645366	Identifier	dbg		645336	1					
ANR	645367	PtrMemberAccess	core -> dbg -> reg		645336	1					
ANR	645368	PtrMemberAccess	core -> dbg		645336	0					
ANR	645369	Identifier	core		645336	0					
ANR	645370	Identifier	dbg		645336	1					
ANR	645371	Identifier	reg		645336	1					
ANR	645372	CompoundStatement		7:34:102:102	645336	1					
ANR	645373	ExpressionStatement	"rs = r_reg_regset_get ( core -> dbg -> reg , R_REG_TYPE_GPR )"	231:2:5303:5357	645336	0	True				
ANR	645374	AssignmentExpression	"rs = r_reg_regset_get ( core -> dbg -> reg , R_REG_TYPE_GPR )"		645336	0		=			
ANR	645375	Identifier	rs		645336	0					
ANR	645376	CallExpression	"r_reg_regset_get ( core -> dbg -> reg , R_REG_TYPE_GPR )"		645336	1					
ANR	645377	Callee	r_reg_regset_get		645336	0					
ANR	645378	Identifier	r_reg_regset_get		645336	0					
ANR	645379	ArgumentList	core -> dbg -> reg		645336	1					
ANR	645380	Argument	core -> dbg -> reg		645336	0					
ANR	645381	PtrMemberAccess	core -> dbg -> reg		645336	0					
ANR	645382	PtrMemberAccess	core -> dbg		645336	0					
ANR	645383	Identifier	core		645336	0					
ANR	645384	Identifier	dbg		645336	1					
ANR	645385	Identifier	reg		645336	1					
ANR	645386	Argument	R_REG_TYPE_GPR		645336	1					
ANR	645387	Identifier	R_REG_TYPE_GPR		645336	0					
ANR	645388	IfStatement	if ( rs )		645336	4					
ANR	645389	Condition	rs	233:5:5367:5368	645336	0	True				
ANR	645390	Identifier	rs		645336	0					
ANR	645391	CompoundStatement		12:2:193:208	645336	1					
ANR	645392	IdentifierDeclStatement	RRegItem * r ;	234:2:5375:5386	645336	0	True				
ANR	645393	IdentifierDecl	* r		645336	0					
ANR	645394	IdentifierDeclType	RRegItem *		645336	0					
ANR	645395	Identifier	r		645336	1					
ANR	645396	IdentifierDeclStatement	RListIter * iter ;	235:2:5390:5405	645336	1	True				
ANR	645397	IdentifierDecl	* iter		645336	0					
ANR	645398	IdentifierDeclType	RListIter *		645336	0					
ANR	645399	Identifier	iter		645336	1					
ANR	645400	Statement	r_list_foreach	236:2:5409:5422	645336	2	True				
ANR	645401	Statement	(	236:17:5424:5424	645336	3	True				
ANR	645402	Statement	rs	236:18:5425:5426	645336	4	True				
ANR	645403	Statement	->	236:20:5427:5428	645336	5	True				
ANR	645404	Statement	regs	236:22:5429:5432	645336	6	True				
ANR	645405	Statement	","	236:26:5433:5433	645336	7	True				
ANR	645406	Statement	iter	236:28:5435:5438	645336	8	True				
ANR	645407	Statement	","	236:32:5439:5439	645336	9	True				
ANR	645408	Statement	r	236:34:5441:5441	645336	10	True				
ANR	645409	Statement	)	236:35:5442:5442	645336	11	True				
ANR	645410	CompoundStatement		13:37:247:247	645336	12					
ANR	645411	IfStatement	if ( r -> type == R_REG_TYPE_GPR )		645336	0					
ANR	645412	Condition	r -> type == R_REG_TYPE_GPR	237:7:5453:5477	645336	0	True				
ANR	645413	EqualityExpression	r -> type == R_REG_TYPE_GPR		645336	0		==			
ANR	645414	PtrMemberAccess	r -> type		645336	0					
ANR	645415	Identifier	r		645336	0					
ANR	645416	Identifier	type		645336	1					
ANR	645417	Identifier	R_REG_TYPE_GPR		645336	1					
ANR	645418	CompoundStatement		15:4:289:335	645336	1					
ANR	645419	IdentifierDeclStatement	"ut64 val = r_reg_getv ( core -> dbg -> reg , r -> name ) ;"	238:4:5486:5532	645336	0	True				
ANR	645420	IdentifierDecl	"val = r_reg_getv ( core -> dbg -> reg , r -> name )"		645336	0					
ANR	645421	IdentifierDeclType	ut64		645336	0					
ANR	645422	Identifier	val		645336	1					
ANR	645423	AssignmentExpression	"val = r_reg_getv ( core -> dbg -> reg , r -> name )"		645336	2		=			
ANR	645424	Identifier	val		645336	0					
ANR	645425	CallExpression	"r_reg_getv ( core -> dbg -> reg , r -> name )"		645336	1					
ANR	645426	Callee	r_reg_getv		645336	0					
ANR	645427	Identifier	r_reg_getv		645336	0					
ANR	645428	ArgumentList	core -> dbg -> reg		645336	1					
ANR	645429	Argument	core -> dbg -> reg		645336	0					
ANR	645430	PtrMemberAccess	core -> dbg -> reg		645336	0					
ANR	645431	PtrMemberAccess	core -> dbg		645336	0					
ANR	645432	Identifier	core		645336	0					
ANR	645433	Identifier	dbg		645336	1					
ANR	645434	Identifier	reg		645336	1					
ANR	645435	Argument	r -> name		645336	1					
ANR	645436	PtrMemberAccess	r -> name		645336	0					
ANR	645437	Identifier	r		645336	0					
ANR	645438	Identifier	name		645336	1					
ANR	645439	IfStatement	if ( addr == val )		645336	1					
ANR	645440	Condition	addr == val	239:8:5542:5552	645336	0	True				
ANR	645441	EqualityExpression	addr == val		645336	0		==			
ANR	645442	Identifier	addr		645336	0					
ANR	645443	Identifier	val		645336	1					
ANR	645444	CompoundStatement		16:21:358:358	645336	1					
ANR	645445	ExpressionStatement	types |= R_ANAL_ADDR_TYPE_REG	240:5:5562:5591	645336	0	True				
ANR	645446	AssignmentExpression	types |= R_ANAL_ADDR_TYPE_REG		645336	0		|=			
ANR	645447	Identifier	types		645336	0					
ANR	645448	Identifier	R_ANAL_ADDR_TYPE_REG		645336	1					
ANR	645449	BreakStatement	break ;	241:5:5598:5603	645336	1	True				
ANR	645450	IfStatement	"if ( r_flag_get_i ( core -> flags , addr ) )"		645336	5					
ANR	645451	Condition	"r_flag_get_i ( core -> flags , addr )"	246:5:5628:5659	645336	0	True				
ANR	645452	CallExpression	"r_flag_get_i ( core -> flags , addr )"		645336	0					
ANR	645453	Callee	r_flag_get_i		645336	0					
ANR	645454	Identifier	r_flag_get_i		645336	0					
ANR	645455	ArgumentList	core -> flags		645336	1					
ANR	645456	Argument	core -> flags		645336	0					
ANR	645457	PtrMemberAccess	core -> flags		645336	0					
ANR	645458	Identifier	core		645336	0					
ANR	645459	Identifier	flags		645336	1					
ANR	645460	Argument	addr		645336	1					
ANR	645461	Identifier	addr		645336	0					
ANR	645462	CompoundStatement		23:39:465:465	645336	1					
ANR	645463	ExpressionStatement	types |= R_ANAL_ADDR_TYPE_FLAG	247:2:5666:5696	645336	0	True				
ANR	645464	AssignmentExpression	types |= R_ANAL_ADDR_TYPE_FLAG		645336	0		|=			
ANR	645465	Identifier	types		645336	0					
ANR	645466	Identifier	R_ANAL_ADDR_TYPE_FLAG		645336	1					
ANR	645467	IfStatement	"if ( r_anal_get_fcn_in ( core -> anal , addr , 0 ) )"		645336	6					
ANR	645468	Condition	"r_anal_get_fcn_in ( core -> anal , addr , 0 )"	249:5:5706:5744	645336	0	True				
ANR	645469	CallExpression	"r_anal_get_fcn_in ( core -> anal , addr , 0 )"		645336	0					
ANR	645470	Callee	r_anal_get_fcn_in		645336	0					
ANR	645471	Identifier	r_anal_get_fcn_in		645336	0					
ANR	645472	ArgumentList	core -> anal		645336	1					
ANR	645473	Argument	core -> anal		645336	0					
ANR	645474	PtrMemberAccess	core -> anal		645336	0					
ANR	645475	Identifier	core		645336	0					
ANR	645476	Identifier	anal		645336	1					
ANR	645477	Argument	addr		645336	1					
ANR	645478	Identifier	addr		645336	0					
ANR	645479	Argument	0		645336	2					
ANR	645480	PrimaryExpression	0		645336	0					
ANR	645481	CompoundStatement		26:46:550:550	645336	1					
ANR	645482	ExpressionStatement	types |= R_ANAL_ADDR_TYPE_FUNC	250:2:5751:5781	645336	0	True				
ANR	645483	AssignmentExpression	types |= R_ANAL_ADDR_TYPE_FUNC		645336	0		|=			
ANR	645484	Identifier	types		645336	0					
ANR	645485	Identifier	R_ANAL_ADDR_TYPE_FUNC		645336	1					
ANR	645486	IfStatement	if ( core -> io && core -> io -> debug && core -> dbg )		645336	7					
ANR	645487	Condition	core -> io && core -> io -> debug && core -> dbg	253:5:5811:5850	645336	0	True				
ANR	645488	AndExpression	core -> io && core -> io -> debug && core -> dbg		645336	0		&&			
ANR	645489	PtrMemberAccess	core -> io		645336	0					
ANR	645490	Identifier	core		645336	0					
ANR	645491	Identifier	io		645336	1					
ANR	645492	AndExpression	core -> io -> debug && core -> dbg		645336	1		&&			
ANR	645493	PtrMemberAccess	core -> io -> debug		645336	0					
ANR	645494	PtrMemberAccess	core -> io		645336	0					
ANR	645495	Identifier	core		645336	0					
ANR	645496	Identifier	io		645336	1					
ANR	645497	Identifier	debug		645336	1					
ANR	645498	PtrMemberAccess	core -> dbg		645336	1					
ANR	645499	Identifier	core		645336	0					
ANR	645500	Identifier	dbg		645336	1					
ANR	645501	CompoundStatement		32:2:705:720	645336	1					
ANR	645502	IdentifierDeclStatement	RDebugMap * map ;	254:2:5884:5898	645336	0	True				
ANR	645503	IdentifierDecl	* map		645336	0					
ANR	645504	IdentifierDeclType	RDebugMap *		645336	0					
ANR	645505	Identifier	map		645336	1					
ANR	645506	IdentifierDeclStatement	RListIter * iter ;	255:2:5902:5917	645336	1	True				
ANR	645507	IdentifierDecl	* iter		645336	0					
ANR	645508	IdentifierDeclType	RListIter *		645336	0					
ANR	645509	Identifier	iter		645336	1					
ANR	645510	Statement	r_list_foreach	259:2:6021:6034	645336	2	True				
ANR	645511	Statement	(	259:17:6036:6036	645336	3	True				
ANR	645512	Statement	core	259:18:6037:6040	645336	4	True				
ANR	645513	Statement	->	259:22:6041:6042	645336	5	True				
ANR	645514	Statement	dbg	259:24:6043:6045	645336	6	True				
ANR	645515	Statement	->	259:27:6046:6047	645336	7	True				
ANR	645516	Statement	maps	259:29:6048:6051	645336	8	True				
ANR	645517	Statement	","	259:33:6052:6052	645336	9	True				
ANR	645518	Statement	iter	259:35:6054:6057	645336	10	True				
ANR	645519	Statement	","	259:39:6058:6058	645336	11	True				
ANR	645520	Statement	map	259:41:6060:6062	645336	12	True				
ANR	645521	Statement	)	259:44:6063:6063	645336	13	True				
ANR	645522	CompoundStatement		36:46:868:868	645336	14					
ANR	645523	IfStatement	if ( addr >= map -> addr && addr < map -> addr_end )		645336	0					
ANR	645524	Condition	addr >= map -> addr && addr < map -> addr_end	260:7:6074:6114	645336	0	True				
ANR	645525	AndExpression	addr >= map -> addr && addr < map -> addr_end		645336	0		&&			
ANR	645526	RelationalExpression	addr >= map -> addr		645336	0		>=			
ANR	645527	Identifier	addr		645336	0					
ANR	645528	PtrMemberAccess	map -> addr		645336	1					
ANR	645529	Identifier	map		645336	0					
ANR	645530	Identifier	addr		645336	1					
ANR	645531	RelationalExpression	addr < map -> addr_end		645336	1		<			
ANR	645532	Identifier	addr		645336	0					
ANR	645533	PtrMemberAccess	map -> addr_end		645336	1					
ANR	645534	Identifier	map		645336	0					
ANR	645535	Identifier	addr_end		645336	1					
ANR	645536	CompoundStatement		37:50:920:920	645336	1					
ANR	645537	IfStatement	if ( map -> name && map -> name [ 0 ] == '/' )		645336	0					
ANR	645538	Condition	map -> name && map -> name [ 0 ] == '/'	261:8:6127:6158	645336	0	True				
ANR	645539	AndExpression	map -> name && map -> name [ 0 ] == '/'		645336	0		&&			
ANR	645540	PtrMemberAccess	map -> name		645336	0					
ANR	645541	Identifier	map		645336	0					
ANR	645542	Identifier	name		645336	1					
ANR	645543	EqualityExpression	map -> name [ 0 ] == '/'		645336	1		==			
ANR	645544	ArrayIndexing	map -> name [ 0 ]		645336	0					
ANR	645545	PtrMemberAccess	map -> name		645336	0					
ANR	645546	Identifier	map		645336	0					
ANR	645547	Identifier	name		645336	1					
ANR	645548	PrimaryExpression	0		645336	1					
ANR	645549	PrimaryExpression	'/'		645336	1					
ANR	645550	CompoundStatement		38:42:964:964	645336	1					
ANR	645551	IfStatement	"if ( core -> io && core -> io -> desc && core -> io -> desc -> name && ! strcmp ( map -> name , core -> io -> desc -> name ) )"		645336	0					
ANR	645552	Condition	"core -> io && core -> io -> desc && core -> io -> desc -> name && ! strcmp ( map -> name , core -> io -> desc -> name )"	262:9:6172:6295	645336	0	True				
ANR	645553	AndExpression	"core -> io && core -> io -> desc && core -> io -> desc -> name && ! strcmp ( map -> name , core -> io -> desc -> name )"		645336	0		&&			
ANR	645554	PtrMemberAccess	core -> io		645336	0					
ANR	645555	Identifier	core		645336	0					
ANR	645556	Identifier	io		645336	1					
ANR	645557	AndExpression	"core -> io -> desc && core -> io -> desc -> name && ! strcmp ( map -> name , core -> io -> desc -> name )"		645336	1		&&			
ANR	645558	PtrMemberAccess	core -> io -> desc		645336	0					
ANR	645559	PtrMemberAccess	core -> io		645336	0					
ANR	645560	Identifier	core		645336	0					
ANR	645561	Identifier	io		645336	1					
ANR	645562	Identifier	desc		645336	1					
ANR	645563	AndExpression	"core -> io -> desc -> name && ! strcmp ( map -> name , core -> io -> desc -> name )"		645336	1		&&			
ANR	645564	PtrMemberAccess	core -> io -> desc -> name		645336	0					
ANR	645565	PtrMemberAccess	core -> io -> desc		645336	0					
ANR	645566	PtrMemberAccess	core -> io		645336	0					
ANR	645567	Identifier	core		645336	0					
ANR	645568	Identifier	io		645336	1					
ANR	645569	Identifier	desc		645336	1					
ANR	645570	Identifier	name		645336	1					
ANR	645571	UnaryOperationExpression	"! strcmp ( map -> name , core -> io -> desc -> name )"		645336	1					
ANR	645572	UnaryOperator	!		645336	0					
ANR	645573	CallExpression	"strcmp ( map -> name , core -> io -> desc -> name )"		645336	1					
ANR	645574	Callee	strcmp		645336	0					
ANR	645575	Identifier	strcmp		645336	0					
ANR	645576	ArgumentList	map -> name		645336	1					
ANR	645577	Argument	map -> name		645336	0					
ANR	645578	PtrMemberAccess	map -> name		645336	0					
ANR	645579	Identifier	map		645336	0					
ANR	645580	Identifier	name		645336	1					
ANR	645581	Argument	core -> io -> desc -> name		645336	1					
ANR	645582	PtrMemberAccess	core -> io -> desc -> name		645336	0					
ANR	645583	PtrMemberAccess	core -> io -> desc		645336	0					
ANR	645584	PtrMemberAccess	core -> io		645336	0					
ANR	645585	Identifier	core		645336	0					
ANR	645586	Identifier	io		645336	1					
ANR	645587	Identifier	desc		645336	1					
ANR	645588	Identifier	name		645336	1					
ANR	645589	CompoundStatement		42:34:1101:1101	645336	1					
ANR	645590	ExpressionStatement	types |= R_ANAL_ADDR_TYPE_PROGRAM	266:6:6306:6339	645336	0	True				
ANR	645591	AssignmentExpression	types |= R_ANAL_ADDR_TYPE_PROGRAM		645336	0		|=			
ANR	645592	Identifier	types		645336	0					
ANR	645593	Identifier	R_ANAL_ADDR_TYPE_PROGRAM		645336	1					
ANR	645594	ElseStatement	else		645336	0					
ANR	645595	CompoundStatement		44:12:1156:1156	645336	0					
ANR	645596	ExpressionStatement	types |= R_ANAL_ADDR_TYPE_LIBRARY	268:6:6361:6394	645336	0	True				
ANR	645597	AssignmentExpression	types |= R_ANAL_ADDR_TYPE_LIBRARY		645336	0		|=			
ANR	645598	Identifier	types		645336	0					
ANR	645599	Identifier	R_ANAL_ADDR_TYPE_LIBRARY		645336	1					
ANR	645600	IfStatement	if ( map -> perm & R_PERM_X )		645336	1					
ANR	645601	Condition	map -> perm & R_PERM_X	271:8:6417:6436	645336	0	True				
ANR	645602	BitAndExpression	map -> perm & R_PERM_X		645336	0		&			
ANR	645603	PtrMemberAccess	map -> perm		645336	0					
ANR	645604	Identifier	map		645336	0					
ANR	645605	Identifier	perm		645336	1					
ANR	645606	Identifier	R_PERM_X		645336	1					
ANR	645607	CompoundStatement		48:30:1242:1242	645336	1					
ANR	645608	ExpressionStatement	types |= R_ANAL_ADDR_TYPE_EXEC	272:5:6446:6476	645336	0	True				
ANR	645609	AssignmentExpression	types |= R_ANAL_ADDR_TYPE_EXEC		645336	0		|=			
ANR	645610	Identifier	types		645336	0					
ANR	645611	Identifier	R_ANAL_ADDR_TYPE_EXEC		645336	1					
ANR	645612	IfStatement	if ( map -> perm & R_PERM_R )		645336	2					
ANR	645613	Condition	map -> perm & R_PERM_R	274:8:6492:6511	645336	0	True				
ANR	645614	BitAndExpression	map -> perm & R_PERM_R		645336	0		&			
ANR	645615	PtrMemberAccess	map -> perm		645336	0					
ANR	645616	Identifier	map		645336	0					
ANR	645617	Identifier	perm		645336	1					
ANR	645618	Identifier	R_PERM_R		645336	1					
ANR	645619	CompoundStatement		51:30:1317:1317	645336	1					
ANR	645620	ExpressionStatement	types |= R_ANAL_ADDR_TYPE_READ	275:5:6521:6551	645336	0	True				
ANR	645621	AssignmentExpression	types |= R_ANAL_ADDR_TYPE_READ		645336	0		|=			
ANR	645622	Identifier	types		645336	0					
ANR	645623	Identifier	R_ANAL_ADDR_TYPE_READ		645336	1					
ANR	645624	IfStatement	if ( map -> perm & R_PERM_W )		645336	3					
ANR	645625	Condition	map -> perm & R_PERM_W	277:8:6567:6586	645336	0	True				
ANR	645626	BitAndExpression	map -> perm & R_PERM_W		645336	0		&			
ANR	645627	PtrMemberAccess	map -> perm		645336	0					
ANR	645628	Identifier	map		645336	0					
ANR	645629	Identifier	perm		645336	1					
ANR	645630	Identifier	R_PERM_W		645336	1					
ANR	645631	CompoundStatement		54:30:1392:1392	645336	1					
ANR	645632	ExpressionStatement	types |= R_ANAL_ADDR_TYPE_WRITE	278:5:6596:6627	645336	0	True				
ANR	645633	AssignmentExpression	types |= R_ANAL_ADDR_TYPE_WRITE		645336	0		|=			
ANR	645634	Identifier	types		645336	0					
ANR	645635	Identifier	R_ANAL_ADDR_TYPE_WRITE		645336	1					
ANR	645636	IfStatement	"if ( map -> name && strstr ( map -> name , ""heap"" ) )"		645336	4					
ANR	645637	Condition	"map -> name && strstr ( map -> name , ""heap"" )"	281:8:6664:6702	645336	0	True				
ANR	645638	AndExpression	"map -> name && strstr ( map -> name , ""heap"" )"		645336	0		&&			
ANR	645639	PtrMemberAccess	map -> name		645336	0					
ANR	645640	Identifier	map		645336	0					
ANR	645641	Identifier	name		645336	1					
ANR	645642	CallExpression	"strstr ( map -> name , ""heap"" )"		645336	1					
ANR	645643	Callee	strstr		645336	0					
ANR	645644	Identifier	strstr		645336	0					
ANR	645645	ArgumentList	map -> name		645336	1					
ANR	645646	Argument	map -> name		645336	0					
ANR	645647	PtrMemberAccess	map -> name		645336	0					
ANR	645648	Identifier	map		645336	0					
ANR	645649	Identifier	name		645336	1					
ANR	645650	Argument	"""heap"""		645336	1					
ANR	645651	PrimaryExpression	"""heap"""		645336	0					
ANR	645652	CompoundStatement		58:49:1508:1508	645336	1					
ANR	645653	ExpressionStatement	types |= R_ANAL_ADDR_TYPE_HEAP	282:5:6712:6742	645336	0	True				
ANR	645654	AssignmentExpression	types |= R_ANAL_ADDR_TYPE_HEAP		645336	0		|=			
ANR	645655	Identifier	types		645336	0					
ANR	645656	Identifier	R_ANAL_ADDR_TYPE_HEAP		645336	1					
ANR	645657	IfStatement	"if ( map -> name && strstr ( map -> name , ""stack"" ) )"		645336	5					
ANR	645658	Condition	"map -> name && strstr ( map -> name , ""stack"" )"	284:8:6758:6797	645336	0	True				
ANR	645659	AndExpression	"map -> name && strstr ( map -> name , ""stack"" )"		645336	0		&&			
ANR	645660	PtrMemberAccess	map -> name		645336	0					
ANR	645661	Identifier	map		645336	0					
ANR	645662	Identifier	name		645336	1					
ANR	645663	CallExpression	"strstr ( map -> name , ""stack"" )"		645336	1					
ANR	645664	Callee	strstr		645336	0					
ANR	645665	Identifier	strstr		645336	0					
ANR	645666	ArgumentList	map -> name		645336	1					
ANR	645667	Argument	map -> name		645336	0					
ANR	645668	PtrMemberAccess	map -> name		645336	0					
ANR	645669	Identifier	map		645336	0					
ANR	645670	Identifier	name		645336	1					
ANR	645671	Argument	"""stack"""		645336	1					
ANR	645672	PrimaryExpression	"""stack"""		645336	0					
ANR	645673	CompoundStatement		61:50:1603:1603	645336	1					
ANR	645674	ExpressionStatement	types |= R_ANAL_ADDR_TYPE_STACK	285:5:6807:6838	645336	0	True				
ANR	645675	AssignmentExpression	types |= R_ANAL_ADDR_TYPE_STACK		645336	0		|=			
ANR	645676	Identifier	types		645336	0					
ANR	645677	Identifier	R_ANAL_ADDR_TYPE_STACK		645336	1					
ANR	645678	BreakStatement	break ;	287:4:6850:6855	645336	6	True				
ANR	645679	ElseStatement	else		645336	0					
ANR	645680	CompoundStatement		70:2:1712:1729	645336	0					
ANR	645681	IdentifierDeclStatement	int _perm = - 1 ;	291:2:6878:6892	645336	0	True				
ANR	645682	IdentifierDecl	_perm = - 1		645336	0					
ANR	645683	IdentifierDeclType	int		645336	0					
ANR	645684	Identifier	_perm		645336	1					
ANR	645685	AssignmentExpression	_perm = - 1		645336	2		=			
ANR	645686	Identifier	_perm		645336	0					
ANR	645687	UnaryOperationExpression	- 1		645336	1					
ANR	645688	UnaryOperator	-		645336	0					
ANR	645689	PrimaryExpression	1		645336	1					
ANR	645690	IdentifierDeclStatement	RIOMap * s ;	292:2:6896:6905	645336	1	True				
ANR	645691	IdentifierDecl	* s		645336	0					
ANR	645692	IdentifierDeclType	RIOMap *		645336	0					
ANR	645693	Identifier	s		645336	1					
ANR	645694	IdentifierDeclStatement	SdbListIter * iter ;	293:2:6909:6926	645336	2	True				
ANR	645695	IdentifierDecl	* iter		645336	0					
ANR	645696	IdentifierDeclType	SdbListIter *		645336	0					
ANR	645697	Identifier	iter		645336	1					
ANR	645698	IfStatement	if ( core -> io )		645336	3					
ANR	645699	Condition	core -> io	294:6:6934:6941	645336	0	True				
ANR	645700	PtrMemberAccess	core -> io		645336	0					
ANR	645701	Identifier	core		645336	0					
ANR	645702	Identifier	io		645336	1					
ANR	645703	CompoundStatement		71:16:1747:1747	645336	1					
ANR	645704	Statement	ls_foreach	296:3:6964:6973	645336	0	True				
ANR	645705	Statement	(	296:14:6975:6975	645336	1	True				
ANR	645706	Statement	core	296:15:6976:6979	645336	2	True				
ANR	645707	Statement	->	296:19:6980:6981	645336	3	True				
ANR	645708	Statement	io	296:21:6982:6983	645336	4	True				
ANR	645709	Statement	->	296:23:6984:6985	645336	5	True				
ANR	645710	Statement	maps	296:25:6986:6989	645336	6	True				
ANR	645711	Statement	","	296:29:6990:6990	645336	7	True				
ANR	645712	Statement	iter	296:31:6992:6995	645336	8	True				
ANR	645713	Statement	","	296:35:6996:6996	645336	9	True				
ANR	645714	Statement	s	296:37:6998:6998	645336	10	True				
ANR	645715	Statement	)	296:38:6999:6999	645336	11	True				
ANR	645716	CompoundStatement		73:40:1804:1804	645336	12					
ANR	645717	IfStatement	if ( addr >= s -> itv . addr && addr < ( s -> itv . addr + s -> itv . size ) )		645336	0					
ANR	645718	Condition	addr >= s -> itv . addr && addr < ( s -> itv . addr + s -> itv . size )	297:8:7011:7067	645336	0	True				
ANR	645719	AndExpression	addr >= s -> itv . addr && addr < ( s -> itv . addr + s -> itv . size )		645336	0		&&			
ANR	645720	RelationalExpression	addr >= s -> itv . addr		645336	0		>=			
ANR	645721	Identifier	addr		645336	0					
ANR	645722	MemberAccess	s -> itv . addr		645336	1					
ANR	645723	PtrMemberAccess	s -> itv		645336	0					
ANR	645724	Identifier	s		645336	0					
ANR	645725	Identifier	itv		645336	1					
ANR	645726	Identifier	addr		645336	1					
ANR	645727	RelationalExpression	addr < ( s -> itv . addr + s -> itv . size )		645336	1		<			
ANR	645728	Identifier	addr		645336	0					
ANR	645729	AdditiveExpression	s -> itv . addr + s -> itv . size		645336	1		+			
ANR	645730	MemberAccess	s -> itv . addr		645336	0					
ANR	645731	PtrMemberAccess	s -> itv		645336	0					
ANR	645732	Identifier	s		645336	0					
ANR	645733	Identifier	itv		645336	1					
ANR	645734	Identifier	addr		645336	1					
ANR	645735	MemberAccess	s -> itv . size		645336	1					
ANR	645736	PtrMemberAccess	s -> itv		645336	0					
ANR	645737	Identifier	s		645336	0					
ANR	645738	Identifier	itv		645336	1					
ANR	645739	Identifier	size		645336	1					
ANR	645740	CompoundStatement		74:67:1873:1873	645336	1					
ANR	645741	ExpressionStatement	"_perm = ( _perm != - 1 ) ? R_MIN ( _perm , s -> perm ) : s -> perm"	299:5:7146:7202	645336	0	True				
ANR	645742	AssignmentExpression	"_perm = ( _perm != - 1 ) ? R_MIN ( _perm , s -> perm ) : s -> perm"		645336	0		=			
ANR	645743	Identifier	_perm		645336	0					
ANR	645744	ConditionalExpression	"( _perm != - 1 ) ? R_MIN ( _perm , s -> perm ) : s -> perm"		645336	1					
ANR	645745	Condition	_perm != - 1		645336	0					
ANR	645746	EqualityExpression	_perm != - 1		645336	0		!=			
ANR	645747	Identifier	_perm		645336	0					
ANR	645748	UnaryOperationExpression	- 1		645336	1					
ANR	645749	UnaryOperator	-		645336	0					
ANR	645750	PrimaryExpression	1		645336	1					
ANR	645751	CallExpression	"R_MIN ( _perm , s -> perm )"		645336	1					
ANR	645752	Callee	R_MIN		645336	0					
ANR	645753	Identifier	R_MIN		645336	0					
ANR	645754	ArgumentList	_perm		645336	1					
ANR	645755	Argument	_perm		645336	0					
ANR	645756	Identifier	_perm		645336	0					
ANR	645757	Argument	s -> perm		645336	1					
ANR	645758	PtrMemberAccess	s -> perm		645336	0					
ANR	645759	Identifier	s		645336	0					
ANR	645760	Identifier	perm		645336	1					
ANR	645761	PtrMemberAccess	s -> perm		645336	2					
ANR	645762	Identifier	s		645336	0					
ANR	645763	Identifier	perm		645336	1					
ANR	645764	IfStatement	"if ( s -> name && strstr ( s -> name , ""heap"" ) )"		645336	1					
ANR	645765	Condition	"s -> name && strstr ( s -> name , ""heap"" )"	303:9:7406:7440	645336	0	True				
ANR	645766	AndExpression	"s -> name && strstr ( s -> name , ""heap"" )"		645336	0		&&			
ANR	645767	PtrMemberAccess	s -> name		645336	0					
ANR	645768	Identifier	s		645336	0					
ANR	645769	Identifier	name		645336	1					
ANR	645770	CallExpression	"strstr ( s -> name , ""heap"" )"		645336	1					
ANR	645771	Callee	strstr		645336	0					
ANR	645772	Identifier	strstr		645336	0					
ANR	645773	ArgumentList	s -> name		645336	1					
ANR	645774	Argument	s -> name		645336	0					
ANR	645775	PtrMemberAccess	s -> name		645336	0					
ANR	645776	Identifier	s		645336	0					
ANR	645777	Identifier	name		645336	1					
ANR	645778	Argument	"""heap"""		645336	1					
ANR	645779	PrimaryExpression	"""heap"""		645336	0					
ANR	645780	CompoundStatement		80:46:2246:2246	645336	1					
ANR	645781	ExpressionStatement	types |= R_ANAL_ADDR_TYPE_HEAP	304:6:7451:7481	645336	0	True				
ANR	645782	AssignmentExpression	types |= R_ANAL_ADDR_TYPE_HEAP		645336	0		|=			
ANR	645783	Identifier	types		645336	0					
ANR	645784	Identifier	R_ANAL_ADDR_TYPE_HEAP		645336	1					
ANR	645785	IfStatement	"if ( s -> name && strstr ( s -> name , ""stack"" ) )"		645336	2					
ANR	645786	Condition	"s -> name && strstr ( s -> name , ""stack"" )"	306:9:7499:7534	645336	0	True				
ANR	645787	AndExpression	"s -> name && strstr ( s -> name , ""stack"" )"		645336	0		&&			
ANR	645788	PtrMemberAccess	s -> name		645336	0					
ANR	645789	Identifier	s		645336	0					
ANR	645790	Identifier	name		645336	1					
ANR	645791	CallExpression	"strstr ( s -> name , ""stack"" )"		645336	1					
ANR	645792	Callee	strstr		645336	0					
ANR	645793	Identifier	strstr		645336	0					
ANR	645794	ArgumentList	s -> name		645336	1					
ANR	645795	Argument	s -> name		645336	0					
ANR	645796	PtrMemberAccess	s -> name		645336	0					
ANR	645797	Identifier	s		645336	0					
ANR	645798	Identifier	name		645336	1					
ANR	645799	Argument	"""stack"""		645336	1					
ANR	645800	PrimaryExpression	"""stack"""		645336	0					
ANR	645801	CompoundStatement		83:47:2340:2340	645336	1					
ANR	645802	ExpressionStatement	types |= R_ANAL_ADDR_TYPE_STACK	307:6:7545:7576	645336	0	True				
ANR	645803	AssignmentExpression	types |= R_ANAL_ADDR_TYPE_STACK		645336	0		|=			
ANR	645804	Identifier	types		645336	0					
ANR	645805	Identifier	R_ANAL_ADDR_TYPE_STACK		645336	1					
ANR	645806	IfStatement	if ( _perm != - 1 )		645336	4					
ANR	645807	Condition	_perm != - 1	312:6:7606:7616	645336	0	True				
ANR	645808	EqualityExpression	_perm != - 1		645336	0		!=			
ANR	645809	Identifier	_perm		645336	0					
ANR	645810	UnaryOperationExpression	- 1		645336	1					
ANR	645811	UnaryOperator	-		645336	0					
ANR	645812	PrimaryExpression	1		645336	1					
ANR	645813	CompoundStatement		89:19:2422:2422	645336	1					
ANR	645814	IfStatement	if ( _perm & R_PERM_X )		645336	0					
ANR	645815	Condition	_perm & R_PERM_X	313:7:7628:7643	645336	0	True				
ANR	645816	BitAndExpression	_perm & R_PERM_X		645336	0		&			
ANR	645817	Identifier	_perm		645336	0					
ANR	645818	Identifier	R_PERM_X		645336	1					
ANR	645819	CompoundStatement		90:25:2449:2449	645336	1					
ANR	645820	ExpressionStatement	types |= R_ANAL_ADDR_TYPE_EXEC	314:4:7652:7682	645336	0	True				
ANR	645821	AssignmentExpression	types |= R_ANAL_ADDR_TYPE_EXEC		645336	0		|=			
ANR	645822	Identifier	types		645336	0					
ANR	645823	Identifier	R_ANAL_ADDR_TYPE_EXEC		645336	1					
ANR	645824	IfStatement	if ( _perm & R_PERM_R )		645336	1					
ANR	645825	Condition	_perm & R_PERM_R	316:7:7696:7711	645336	0	True				
ANR	645826	BitAndExpression	_perm & R_PERM_R		645336	0		&			
ANR	645827	Identifier	_perm		645336	0					
ANR	645828	Identifier	R_PERM_R		645336	1					
ANR	645829	CompoundStatement		93:25:2517:2517	645336	1					
ANR	645830	ExpressionStatement	types |= R_ANAL_ADDR_TYPE_READ	317:4:7720:7750	645336	0	True				
ANR	645831	AssignmentExpression	types |= R_ANAL_ADDR_TYPE_READ		645336	0		|=			
ANR	645832	Identifier	types		645336	0					
ANR	645833	Identifier	R_ANAL_ADDR_TYPE_READ		645336	1					
ANR	645834	IfStatement	if ( _perm & R_PERM_W )		645336	2					
ANR	645835	Condition	_perm & R_PERM_W	319:7:7764:7779	645336	0	True				
ANR	645836	BitAndExpression	_perm & R_PERM_W		645336	0		&			
ANR	645837	Identifier	_perm		645336	0					
ANR	645838	Identifier	R_PERM_W		645336	1					
ANR	645839	CompoundStatement		96:25:2585:2585	645336	1					
ANR	645840	ExpressionStatement	types |= R_ANAL_ADDR_TYPE_WRITE	320:4:7788:7819	645336	0	True				
ANR	645841	AssignmentExpression	types |= R_ANAL_ADDR_TYPE_WRITE		645336	0		|=			
ANR	645842	Identifier	types		645336	0					
ANR	645843	Identifier	R_ANAL_ADDR_TYPE_WRITE		645336	1					
ANR	645844	IfStatement	if ( addr != 0 )		645336	8					
ANR	645845	Condition	addr != 0	326:5:7863:7871	645336	0	True				
ANR	645846	EqualityExpression	addr != 0		645336	0		!=			
ANR	645847	Identifier	addr		645336	0					
ANR	645848	PrimaryExpression	0		645336	1					
ANR	645849	CompoundStatement		105:2:2702:2733	645336	1					
ANR	645850	IdentifierDeclStatement	int not_ascii = 0 ;	327:2:7878:7895	645336	0	True				
ANR	645851	IdentifierDecl	not_ascii = 0		645336	0					
ANR	645852	IdentifierDeclType	int		645336	0					
ANR	645853	Identifier	not_ascii		645336	1					
ANR	645854	AssignmentExpression	not_ascii = 0		645336	2		=			
ANR	645855	Identifier	not_ascii		645336	0					
ANR	645856	PrimaryExpression	0		645336	1					
ANR	645857	IdentifierDeclStatement	"int i , failed_sequence , dir , on ;"	328:2:7899:7930	645336	1	True				
ANR	645858	IdentifierDecl	i		645336	0					
ANR	645859	IdentifierDeclType	int		645336	0					
ANR	645860	Identifier	i		645336	1					
ANR	645861	IdentifierDecl	failed_sequence		645336	1					
ANR	645862	IdentifierDeclType	int		645336	0					
ANR	645863	Identifier	failed_sequence		645336	1					
ANR	645864	IdentifierDecl	dir		645336	2					
ANR	645865	IdentifierDeclType	int		645336	0					
ANR	645866	Identifier	dir		645336	1					
ANR	645867	IdentifierDecl	on		645336	3					
ANR	645868	IdentifierDeclType	int		645336	0					
ANR	645869	Identifier	on		645336	1					
ANR	645870	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		645336	2					
ANR	645871	ForInit	i = 0 ;	329:7:7939:7944	645336	0	True				
ANR	645872	AssignmentExpression	i = 0		645336	0		=			
ANR	645873	Identifier	i		645336	0					
ANR	645874	PrimaryExpression	0		645336	1					
ANR	645875	Condition	i < 8	329:14:7946:7950	645336	1	True				
ANR	645876	RelationalExpression	i < 8		645336	0		<			
ANR	645877	Identifier	i		645336	0					
ANR	645878	PrimaryExpression	8		645336	1					
ANR	645879	PostIncDecOperationExpression	i ++	329:21:7953:7955	645336	2	True				
ANR	645880	Identifier	i		645336	0					
ANR	645881	IncDec	++		645336	1					
ANR	645882	CompoundStatement		107:3:2766:2798	645336	3					
ANR	645883	IdentifierDeclStatement	ut8 n = ( addr >> ( i * 8 ) ) & 0xff ;	330:3:7963:7995	645336	0	True				
ANR	645884	IdentifierDecl	n = ( addr >> ( i * 8 ) ) & 0xff		645336	0					
ANR	645885	IdentifierDeclType	ut8		645336	0					
ANR	645886	Identifier	n		645336	1					
ANR	645887	AssignmentExpression	n = ( addr >> ( i * 8 ) ) & 0xff		645336	2		=			
ANR	645888	Identifier	n		645336	0					
ANR	645889	BitAndExpression	( addr >> ( i * 8 ) ) & 0xff		645336	1		&			
ANR	645890	ShiftExpression	addr >> ( i * 8 )		645336	0		>>			
ANR	645891	Identifier	addr		645336	0					
ANR	645892	MultiplicativeExpression	i * 8		645336	1		*			
ANR	645893	Identifier	i		645336	0					
ANR	645894	PrimaryExpression	8		645336	1					
ANR	645895	PrimaryExpression	0xff		645336	1					
ANR	645896	IfStatement	if ( n && ! IS_PRINTABLE ( n ) )		645336	1					
ANR	645897	Condition	n && ! IS_PRINTABLE ( n )	331:7:8004:8025	645336	0	True				
ANR	645898	AndExpression	n && ! IS_PRINTABLE ( n )		645336	0		&&			
ANR	645899	Identifier	n		645336	0					
ANR	645900	UnaryOperationExpression	! IS_PRINTABLE ( n )		645336	1					
ANR	645901	UnaryOperator	!		645336	0					
ANR	645902	CallExpression	IS_PRINTABLE ( n )		645336	1					
ANR	645903	Callee	IS_PRINTABLE		645336	0					
ANR	645904	Identifier	IS_PRINTABLE		645336	0					
ANR	645905	ArgumentList	n		645336	1					
ANR	645906	Argument	n		645336	0					
ANR	645907	Identifier	n		645336	0					
ANR	645908	CompoundStatement		108:31:2831:2831	645336	1					
ANR	645909	ExpressionStatement	not_ascii = 1	332:4:8034:8047	645336	0	True				
ANR	645910	AssignmentExpression	not_ascii = 1		645336	0		=			
ANR	645911	Identifier	not_ascii		645336	0					
ANR	645912	PrimaryExpression	1		645336	1					
ANR	645913	IfStatement	if ( ! not_ascii )		645336	3					
ANR	645914	Condition	! not_ascii	335:6:8064:8073	645336	0	True				
ANR	645915	UnaryOperationExpression	! not_ascii		645336	0					
ANR	645916	UnaryOperator	!		645336	0					
ANR	645917	Identifier	not_ascii		645336	1					
ANR	645918	CompoundStatement		112:18:2879:2879	645336	1					
ANR	645919	ExpressionStatement	types |= R_ANAL_ADDR_TYPE_ASCII	336:3:8081:8112	645336	0	True				
ANR	645920	AssignmentExpression	types |= R_ANAL_ADDR_TYPE_ASCII		645336	0		|=			
ANR	645921	Identifier	types		645336	0					
ANR	645922	Identifier	R_ANAL_ADDR_TYPE_ASCII		645336	1					
ANR	645923	ExpressionStatement	failed_sequence = 0	338:2:8120:8139	645336	4	True				
ANR	645924	AssignmentExpression	failed_sequence = 0		645336	0		=			
ANR	645925	Identifier	failed_sequence		645336	0					
ANR	645926	PrimaryExpression	0		645336	1					
ANR	645927	ExpressionStatement	dir = on = - 1	339:2:8143:8156	645336	5	True				
ANR	645928	AssignmentExpression	dir = on = - 1		645336	0		=			
ANR	645929	Identifier	dir		645336	0					
ANR	645930	AssignmentExpression	on = - 1		645336	1		=			
ANR	645931	Identifier	on		645336	0					
ANR	645932	UnaryOperationExpression	- 1		645336	1					
ANR	645933	UnaryOperator	-		645336	0					
ANR	645934	PrimaryExpression	1		645336	1					
ANR	645935	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		645336	6					
ANR	645936	ForInit	i = 0 ;	340:7:8165:8170	645336	0	True				
ANR	645937	AssignmentExpression	i = 0		645336	0		=			
ANR	645938	Identifier	i		645336	0					
ANR	645939	PrimaryExpression	0		645336	1					
ANR	645940	Condition	i < 8	340:14:8172:8176	645336	1	True				
ANR	645941	RelationalExpression	i < 8		645336	0		<			
ANR	645942	Identifier	i		645336	0					
ANR	645943	PrimaryExpression	8		645336	1					
ANR	645944	PostIncDecOperationExpression	i ++	340:21:8179:8181	645336	2	True				
ANR	645945	Identifier	i		645336	0					
ANR	645946	IncDec	++		645336	1					
ANR	645947	CompoundStatement		118:3:2992:3024	645336	3					
ANR	645948	IdentifierDeclStatement	ut8 n = ( addr >> ( i * 8 ) ) & 0xff ;	341:3:8189:8221	645336	0	True				
ANR	645949	IdentifierDecl	n = ( addr >> ( i * 8 ) ) & 0xff		645336	0					
ANR	645950	IdentifierDeclType	ut8		645336	0					
ANR	645951	Identifier	n		645336	1					
ANR	645952	AssignmentExpression	n = ( addr >> ( i * 8 ) ) & 0xff		645336	2		=			
ANR	645953	Identifier	n		645336	0					
ANR	645954	BitAndExpression	( addr >> ( i * 8 ) ) & 0xff		645336	1		&			
ANR	645955	ShiftExpression	addr >> ( i * 8 )		645336	0		>>			
ANR	645956	Identifier	addr		645336	0					
ANR	645957	MultiplicativeExpression	i * 8		645336	1		*			
ANR	645958	Identifier	i		645336	0					
ANR	645959	PrimaryExpression	8		645336	1					
ANR	645960	PrimaryExpression	0xff		645336	1					
ANR	645961	IfStatement	if ( on != - 1 )		645336	1					
ANR	645962	Condition	on != - 1	342:7:8230:8237	645336	0	True				
ANR	645963	EqualityExpression	on != - 1		645336	0		!=			
ANR	645964	Identifier	on		645336	0					
ANR	645965	UnaryOperationExpression	- 1		645336	1					
ANR	645966	UnaryOperator	-		645336	0					
ANR	645967	PrimaryExpression	1		645336	1					
ANR	645968	CompoundStatement		119:17:3043:3043	645336	1					
ANR	645969	IfStatement	if ( dir == - 1 )		645336	0					
ANR	645970	Condition	dir == - 1	343:8:8250:8258	645336	0	True				
ANR	645971	EqualityExpression	dir == - 1		645336	0		==			
ANR	645972	Identifier	dir		645336	0					
ANR	645973	UnaryOperationExpression	- 1		645336	1					
ANR	645974	UnaryOperator	-		645336	0					
ANR	645975	PrimaryExpression	1		645336	1					
ANR	645976	CompoundStatement		120:19:3064:3064	645336	1					
ANR	645977	ExpressionStatement	dir = ( n > on ) ? 1 : - 1	344:5:8268:8289	645336	0	True				
ANR	645978	AssignmentExpression	dir = ( n > on ) ? 1 : - 1		645336	0		=			
ANR	645979	Identifier	dir		645336	0					
ANR	645980	ConditionalExpression	( n > on ) ? 1 : - 1		645336	1					
ANR	645981	Condition	n > on		645336	0					
ANR	645982	RelationalExpression	n > on		645336	0		>			
ANR	645983	Identifier	n		645336	0					
ANR	645984	Identifier	on		645336	1					
ANR	645985	PrimaryExpression	1		645336	1					
ANR	645986	UnaryOperationExpression	- 1		645336	2					
ANR	645987	UnaryOperator	-		645336	0					
ANR	645988	PrimaryExpression	1		645336	1					
ANR	645989	IfStatement	if ( n == on + dir )		645336	1					
ANR	645990	Condition	n == on + dir	346:8:8305:8317	645336	0	True				
ANR	645991	EqualityExpression	n == on + dir		645336	0		==			
ANR	645992	Identifier	n		645336	0					
ANR	645993	AdditiveExpression	on + dir		645336	1		+			
ANR	645994	Identifier	on		645336	0					
ANR	645995	Identifier	dir		645336	1					
ANR	645996	CompoundStatement		123:23:3123:3123	645336	1					
ANR	645997	ElseStatement	else		645336	0					
ANR	645998	CompoundStatement		125:11:3147:3147	645336	0					
ANR	645999	ExpressionStatement	failed_sequence = 1	349:5:8351:8370	645336	0	True				
ANR	646000	AssignmentExpression	failed_sequence = 1		645336	0		=			
ANR	646001	Identifier	failed_sequence		645336	0					
ANR	646002	PrimaryExpression	1		645336	1					
ANR	646003	BreakStatement	break ;	350:5:8377:8382	645336	1	True				
ANR	646004	ExpressionStatement	on = n	353:3:8398:8404	645336	2	True				
ANR	646005	AssignmentExpression	on = n		645336	0		=			
ANR	646006	Identifier	on		645336	0					
ANR	646007	Identifier	n		645336	1					
ANR	646008	IfStatement	if ( ! failed_sequence )		645336	7					
ANR	646009	Condition	! failed_sequence	355:6:8416:8431	645336	0	True				
ANR	646010	UnaryOperationExpression	! failed_sequence		645336	0					
ANR	646011	UnaryOperator	!		645336	0					
ANR	646012	Identifier	failed_sequence		645336	1					
ANR	646013	CompoundStatement		132:24:3237:3237	645336	1					
ANR	646014	ExpressionStatement	types |= R_ANAL_ADDR_TYPE_SEQUENCE	356:3:8439:8473	645336	0	True				
ANR	646015	AssignmentExpression	types |= R_ANAL_ADDR_TYPE_SEQUENCE		645336	0		|=			
ANR	646016	Identifier	types		645336	0					
ANR	646017	Identifier	R_ANAL_ADDR_TYPE_SEQUENCE		645336	1					
ANR	646018	ReturnStatement	return types ;	359:1:8483:8495	645336	9	True				
ANR	646019	Identifier	types		645336	0					
ANR	646020	ReturnType	R_API ut64		645336	1					
ANR	646021	Identifier	r_core_anal_address		645336	2					
ANR	646022	ParameterList	"RCore * core , ut64 addr"		645336	3					
ANR	646023	Parameter	RCore * core	224:31:5172:5182	645336	0	True				
ANR	646024	ParameterType	RCore *		645336	0					
ANR	646025	Identifier	core		645336	1					
ANR	646026	Parameter	ut64 addr	224:44:5185:5193	645336	1	True				
ANR	646027	ParameterType	ut64		645336	0					
ANR	646028	Identifier	addr		645336	1					
ANR	646029	CFGEntryNode	ENTRY		645336		True				
ANR	646030	CFGExitNode	EXIT		645336		True				
ANR	646031	CFGErrorNode	ERROR		645336		True				
ANR	646032	Symbol	core -> io -> desc -> name		645336						
ANR	646033	Symbol	IS_PRINTABLE		645336						
ANR	646034	Symbol	* map		645336						
ANR	646035	Symbol	s -> itv . addr		645336						
ANR	646036	Symbol	r_reg_regset_get		645336						
ANR	646037	Symbol	dir		645336						
ANR	646038	Symbol	R_ANAL_ADDR_TYPE_SEQUENCE		645336						
ANR	646039	Symbol	core -> io -> debug		645336						
ANR	646040	Symbol	* core -> io -> desc		645336						
ANR	646041	Symbol	r_flag_get_i		645336						
ANR	646042	Symbol	val		645336						
ANR	646043	Symbol	strcmp		645336						
ANR	646044	Symbol	_perm		645336						
ANR	646045	Symbol	NULL		645336						
ANR	646046	Symbol	R_ANAL_ADDR_TYPE_HEAP		645336						
ANR	646047	Symbol	R_ANAL_ADDR_TYPE_FLAG		645336						
ANR	646048	Symbol	R_ANAL_ADDR_TYPE_PROGRAM		645336						
ANR	646049	Symbol	iter		645336						
ANR	646050	Symbol	core -> io -> desc		645336						
ANR	646051	Symbol	R_ANAL_ADDR_TYPE_ASCII		645336						
ANR	646052	Symbol	* * map		645336						
ANR	646053	Symbol	core		645336						
ANR	646054	Symbol	* * * core		645336						
ANR	646055	Symbol	s -> itv . size		645336						
ANR	646056	Symbol	strstr		645336						
ANR	646057	Symbol	r -> name		645336						
ANR	646058	Symbol	map -> addr_end		645336						
ANR	646059	Symbol	r_reg_getv		645336						
ANR	646060	Symbol	s -> itv		645336						
ANR	646061	Symbol	* core -> dbg		645336						
ANR	646062	Symbol	map -> perm		645336						
ANR	646063	Symbol	rs		645336						
ANR	646064	Symbol	R_ANAL_ADDR_TYPE_REG		645336						
ANR	646065	Symbol	map -> addr		645336						
ANR	646066	Symbol	r -> type		645336						
ANR	646067	Symbol	R_ANAL_ADDR_TYPE_LIBRARY		645336						
ANR	646068	Symbol	* core		645336						
ANR	646069	Symbol	core -> anal		645336						
ANR	646070	Symbol	R_ANAL_ADDR_TYPE_FUNC		645336						
ANR	646071	Symbol	s -> perm		645336						
ANR	646072	Symbol	R_PERM_X		645336						
ANR	646073	Symbol	map -> name		645336						
ANR	646074	Symbol	R_PERM_W		645336						
ANR	646075	Symbol	core -> io		645336						
ANR	646076	Symbol	R_PERM_R		645336						
ANR	646077	Symbol	* map -> name		645336						
ANR	646078	Symbol	addr		645336						
ANR	646079	Symbol	R_ANAL_ADDR_TYPE_STACK		645336						
ANR	646080	Symbol	map		645336						
ANR	646081	Symbol	* * core		645336						
ANR	646082	Symbol	R_REG_TYPE_GPR		645336						
ANR	646083	Symbol	on		645336						
ANR	646084	Symbol	types		645336						
ANR	646085	Symbol	not_ascii		645336						
ANR	646086	Symbol	failed_sequence		645336						
ANR	646087	Symbol	i		645336						
ANR	646088	Symbol	core -> flags		645336						
ANR	646089	Symbol	R_MIN		645336						
ANR	646090	Symbol	R_ANAL_ADDR_TYPE_WRITE		645336						
ANR	646091	Symbol	n		645336						
ANR	646092	Symbol	* core -> io		645336						
ANR	646093	Symbol	r		645336						
ANR	646094	Symbol	r_anal_get_fcn_in		645336						
ANR	646095	Symbol	s		645336						
ANR	646096	Symbol	s -> name		645336						
ANR	646097	Symbol	R_ANAL_ADDR_TYPE_EXEC		645336						
ANR	646098	Symbol	core -> dbg -> reg		645336						
ANR	646099	Symbol	R_ANAL_ADDR_TYPE_READ		645336						
ANR	646100	Symbol	* r		645336						
ANR	646101	Symbol	* s		645336						
ANR	646102	Symbol	core -> dbg		645336						
ANR	646103	Symbol	* * core -> io		645336						
ANR	646104	Function	blacklisted_word	362:0:8500:8793							
ANR	646105	FunctionDef	blacklisted_word (char * name)		646104	0					
ANR	646106	CompoundStatement		362:41:8541:8793	646104	0					
ANR	646107	IdentifierDeclStatement	"const char * list [ ] = { ""__stack_chk_guard"" , ""__stderrp"" , ""__stdinp"" , ""__stdoutp"" , ""_DefaultRuneLocale"" } ;"	363:1:8544:8660	646104	0	True				
ANR	646108	IdentifierDecl	"* list [ ] = { ""__stack_chk_guard"" , ""__stderrp"" , ""__stdinp"" , ""__stdoutp"" , ""_DefaultRuneLocale"" }"		646104	0					
ANR	646109	IdentifierDeclType	const char * [ ]		646104	0					
ANR	646110	Identifier	list		646104	1					
ANR	646111	AssignmentExpression	"* list [ ] = { ""__stack_chk_guard"" , ""__stderrp"" , ""__stdinp"" , ""__stdoutp"" , ""_DefaultRuneLocale"" }"		646104	2		=			
ANR	646112	Identifier	list		646104	0					
ANR	646113	InitializerList	"""__stack_chk_guard"""		646104	1					
ANR	646114	PrimaryExpression	"""__stack_chk_guard"""		646104	0					
ANR	646115	PrimaryExpression	"""__stderrp"""		646104	1					
ANR	646116	PrimaryExpression	"""__stdinp"""		646104	2					
ANR	646117	PrimaryExpression	"""__stdoutp"""		646104	3					
ANR	646118	PrimaryExpression	"""_DefaultRuneLocale"""		646104	4					
ANR	646119	IdentifierDeclStatement	int i ;	370:1:8663:8668	646104	1	True				
ANR	646120	IdentifierDecl	i		646104	0					
ANR	646121	IdentifierDeclType	int		646104	0					
ANR	646122	Identifier	i		646104	1					
ANR	646123	ForStatement	for ( i = 0 ; i < sizeof ( list ) / sizeof ( list [ 0 ] ) ; i ++ )		646104	2					
ANR	646124	ForInit	i = 0 ;	371:6:8676:8681	646104	0	True				
ANR	646125	AssignmentExpression	i = 0		646104	0		=			
ANR	646126	Identifier	i		646104	0					
ANR	646127	PrimaryExpression	0		646104	1					
ANR	646128	Condition	i < sizeof ( list ) / sizeof ( list [ 0 ] )	371:13:8683:8718	646104	1	True				
ANR	646129	RelationalExpression	i < sizeof ( list ) / sizeof ( list [ 0 ] )		646104	0		<			
ANR	646130	Identifier	i		646104	0					
ANR	646131	MultiplicativeExpression	sizeof ( list ) / sizeof ( list [ 0 ] )		646104	1		/			
ANR	646132	SizeofExpression	sizeof ( list )		646104	0					
ANR	646133	Sizeof	sizeof		646104	0					
ANR	646134	SizeofOperand	list		646104	1					
ANR	646135	SizeofExpression	sizeof ( list [ 0 ] )		646104	1					
ANR	646136	Sizeof	sizeof		646104	0					
ANR	646137	ArrayIndexing	list [ 0 ]		646104	1					
ANR	646138	Identifier	list		646104	0					
ANR	646139	PrimaryExpression	0		646104	1					
ANR	646140	PostIncDecOperationExpression	i ++	371:51:8721:8723	646104	2	True				
ANR	646141	Identifier	i		646104	0					
ANR	646142	IncDec	++		646104	1					
ANR	646143	CompoundStatement		10:56:184:184	646104	3					
ANR	646144	IfStatement	"if ( strstr ( name , list [ i ] ) )"		646104	0					
ANR	646145	Condition	"strstr ( name , list [ i ] )"	372:6:8734:8755	646104	0	True				
ANR	646146	CallExpression	"strstr ( name , list [ i ] )"		646104	0					
ANR	646147	Callee	strstr		646104	0					
ANR	646148	Identifier	strstr		646104	0					
ANR	646149	ArgumentList	name		646104	1					
ANR	646150	Argument	name		646104	0					
ANR	646151	Identifier	name		646104	0					
ANR	646152	Argument	list [ i ]		646104	1					
ANR	646153	ArrayIndexing	list [ i ]		646104	0					
ANR	646154	Identifier	list		646104	0					
ANR	646155	Identifier	i		646104	1					
ANR	646156	CompoundStatement		11:30:216:216	646104	1					
ANR	646157	ReturnStatement	return true ;	372:32:8760:8771	646104	0	True				
ANR	646158	Identifier	true		646104	0					
ANR	646159	ReturnStatement	return false ;	374:1:8779:8791	646104	3	True				
ANR	646160	Identifier	false		646104	0					
ANR	646161	ReturnType	static bool		646104	1					
ANR	646162	Identifier	blacklisted_word		646104	2					
ANR	646163	ParameterList	char * name		646104	3					
ANR	646164	Parameter	char * name	362:29:8529:8538	646104	0	True				
ANR	646165	ParameterType	char *		646104	0					
ANR	646166	Identifier	name		646104	1					
ANR	646167	CFGEntryNode	ENTRY		646104		True				
ANR	646168	CFGExitNode	EXIT		646104		True				
ANR	646169	Symbol	* i		646104						
ANR	646170	Symbol	* list		646104						
ANR	646171	Symbol	strstr		646104						
ANR	646172	Symbol	name		646104						
ANR	646173	Symbol	true		646104						
ANR	646174	Symbol	false		646104						
ANR	646175	Symbol	i		646104						
ANR	646176	Symbol	list		646104						
ANR	646177	Function	anal_fcn_autoname	377:0:8796:11351							
ANR	646178	FunctionDef	"anal_fcn_autoname (RCore * core , RAnalFunction * fcn , int dump , int mode)"		646177	0					
ANR	646179	CompoundStatement		377:84:8880:11351	646177	0					
ANR	646180	IdentifierDeclStatement	int use_getopt = 0 ;	378:1:8883:8901	646177	0	True				
ANR	646181	IdentifierDecl	use_getopt = 0		646177	0					
ANR	646182	IdentifierDeclType	int		646177	0					
ANR	646183	Identifier	use_getopt		646177	1					
ANR	646184	AssignmentExpression	use_getopt = 0		646177	2		=			
ANR	646185	Identifier	use_getopt		646177	0					
ANR	646186	PrimaryExpression	0		646177	1					
ANR	646187	IdentifierDeclStatement	int use_isatty = 0 ;	379:1:8904:8922	646177	1	True				
ANR	646188	IdentifierDecl	use_isatty = 0		646177	0					
ANR	646189	IdentifierDeclType	int		646177	0					
ANR	646190	Identifier	use_isatty		646177	1					
ANR	646191	AssignmentExpression	use_isatty = 0		646177	2		=			
ANR	646192	Identifier	use_isatty		646177	0					
ANR	646193	PrimaryExpression	0		646177	1					
ANR	646194	IdentifierDeclStatement	PJ * pj = NULL ;	380:1:8925:8938	646177	2	True				
ANR	646195	IdentifierDecl	* pj = NULL		646177	0					
ANR	646196	IdentifierDeclType	PJ *		646177	0					
ANR	646197	Identifier	pj		646177	1					
ANR	646198	AssignmentExpression	* pj = NULL		646177	2		=			
ANR	646199	Identifier	NULL		646177	0					
ANR	646200	Identifier	NULL		646177	1					
ANR	646201	IdentifierDeclStatement	char * do_call = NULL ;	381:1:8941:8961	646177	3	True				
ANR	646202	IdentifierDecl	* do_call = NULL		646177	0					
ANR	646203	IdentifierDeclType	char *		646177	0					
ANR	646204	Identifier	do_call		646177	1					
ANR	646205	AssignmentExpression	* do_call = NULL		646177	2		=			
ANR	646206	Identifier	NULL		646177	0					
ANR	646207	Identifier	NULL		646177	1					
ANR	646208	IdentifierDeclStatement	RAnalRef * ref ;	382:1:8964:8977	646177	4	True				
ANR	646209	IdentifierDecl	* ref		646177	0					
ANR	646210	IdentifierDeclType	RAnalRef *		646177	0					
ANR	646211	Identifier	ref		646177	1					
ANR	646212	IdentifierDeclStatement	RListIter * iter ;	383:1:8980:8995	646177	5	True				
ANR	646213	IdentifierDecl	* iter		646177	0					
ANR	646214	IdentifierDeclType	RListIter *		646177	0					
ANR	646215	Identifier	iter		646177	1					
ANR	646216	IdentifierDeclStatement	"RList * refs = r_anal_fcn_get_refs ( core -> anal , fcn ) ;"	384:1:8998:9049	646177	6	True				
ANR	646217	IdentifierDecl	"* refs = r_anal_fcn_get_refs ( core -> anal , fcn )"		646177	0					
ANR	646218	IdentifierDeclType	RList *		646177	0					
ANR	646219	Identifier	refs		646177	1					
ANR	646220	AssignmentExpression	"* refs = r_anal_fcn_get_refs ( core -> anal , fcn )"		646177	2		=			
ANR	646221	Identifier	refs		646177	0					
ANR	646222	CallExpression	"r_anal_fcn_get_refs ( core -> anal , fcn )"		646177	1					
ANR	646223	Callee	r_anal_fcn_get_refs		646177	0					
ANR	646224	Identifier	r_anal_fcn_get_refs		646177	0					
ANR	646225	ArgumentList	core -> anal		646177	1					
ANR	646226	Argument	core -> anal		646177	0					
ANR	646227	PtrMemberAccess	core -> anal		646177	0					
ANR	646228	Identifier	core		646177	0					
ANR	646229	Identifier	anal		646177	1					
ANR	646230	Argument	fcn		646177	1					
ANR	646231	Identifier	fcn		646177	0					
ANR	646232	IfStatement	if ( mode == 'j' )		646177	7					
ANR	646233	Condition	mode == 'j'	385:5:9056:9066	646177	0	True				
ANR	646234	EqualityExpression	mode == 'j'		646177	0		==			
ANR	646235	Identifier	mode		646177	0					
ANR	646236	PrimaryExpression	'j'		646177	1					
ANR	646237	CompoundStatement		9:18:188:188	646177	1					
ANR	646238	ExpressionStatement	pj = pj_new ( )	387:2:9102:9116	646177	0	True				
ANR	646239	AssignmentExpression	pj = pj_new ( )		646177	0		=			
ANR	646240	Identifier	pj		646177	0					
ANR	646241	CallExpression	pj_new ( )		646177	1					
ANR	646242	Callee	pj_new		646177	0					
ANR	646243	Identifier	pj_new		646177	0					
ANR	646244	ArgumentList			646177	1					
ANR	646245	ExpressionStatement	pj_a ( pj )	388:2:9120:9129	646177	1	True				
ANR	646246	CallExpression	pj_a ( pj )		646177	0					
ANR	646247	Callee	pj_a		646177	0					
ANR	646248	Identifier	pj_a		646177	0					
ANR	646249	ArgumentList	pj		646177	1					
ANR	646250	Argument	pj		646177	0					
ANR	646251	Identifier	pj		646177	0					
ANR	646252	IfStatement	if ( refs )		646177	8					
ANR	646253	Condition	refs	390:5:9139:9142	646177	0	True				
ANR	646254	Identifier	refs		646177	0					
ANR	646255	CompoundStatement		14:11:264:264	646177	1					
ANR	646256	Statement	r_list_foreach	391:2:9149:9162	646177	0	True				
ANR	646257	Statement	(	391:17:9164:9164	646177	1	True				
ANR	646258	Statement	refs	391:18:9165:9168	646177	2	True				
ANR	646259	Statement	","	391:22:9169:9169	646177	3	True				
ANR	646260	Statement	iter	391:24:9171:9174	646177	4	True				
ANR	646261	Statement	","	391:28:9175:9175	646177	5	True				
ANR	646262	Statement	ref	391:30:9177:9179	646177	6	True				
ANR	646263	Statement	)	391:33:9180:9180	646177	7	True				
ANR	646264	CompoundStatement		16:3:306:358	646177	8					
ANR	646265	IdentifierDeclStatement	"RFlagItem * f = r_flag_get_i ( core -> flags , ref -> addr ) ;"	392:3:9187:9239	646177	0	True				
ANR	646266	IdentifierDecl	"* f = r_flag_get_i ( core -> flags , ref -> addr )"		646177	0					
ANR	646267	IdentifierDeclType	RFlagItem *		646177	0					
ANR	646268	Identifier	f		646177	1					
ANR	646269	AssignmentExpression	"* f = r_flag_get_i ( core -> flags , ref -> addr )"		646177	2		=			
ANR	646270	Identifier	f		646177	0					
ANR	646271	CallExpression	"r_flag_get_i ( core -> flags , ref -> addr )"		646177	1					
ANR	646272	Callee	r_flag_get_i		646177	0					
ANR	646273	Identifier	r_flag_get_i		646177	0					
ANR	646274	ArgumentList	core -> flags		646177	1					
ANR	646275	Argument	core -> flags		646177	0					
ANR	646276	PtrMemberAccess	core -> flags		646177	0					
ANR	646277	Identifier	core		646177	0					
ANR	646278	Identifier	flags		646177	1					
ANR	646279	Argument	ref -> addr		646177	1					
ANR	646280	PtrMemberAccess	ref -> addr		646177	0					
ANR	646281	Identifier	ref		646177	0					
ANR	646282	Identifier	addr		646177	1					
ANR	646283	IfStatement	if ( f )		646177	1					
ANR	646284	Condition	f	393:7:9248:9248	646177	0	True				
ANR	646285	Identifier	f		646177	0					
ANR	646286	CompoundStatement		17:10:370:370	646177	1					
ANR	646287	IfStatement	if ( dump )		646177	0					
ANR	646288	Condition	dump	395:8:9330:9333	646177	0	True				
ANR	646289	Identifier	dump		646177	0					
ANR	646290	CompoundStatement		19:14:455:455	646177	1					
ANR	646291	IfStatement	"if ( ! strncmp ( f -> name , ""str."" , 4 ) )"		646177	0					
ANR	646292	Condition	"! strncmp ( f -> name , ""str."" , 4 )"	397:9:9379:9407	646177	0	True				
ANR	646293	UnaryOperationExpression	"! strncmp ( f -> name , ""str."" , 4 )"		646177	0					
ANR	646294	UnaryOperator	!		646177	0					
ANR	646295	CallExpression	"strncmp ( f -> name , ""str."" , 4 )"		646177	1					
ANR	646296	Callee	strncmp		646177	0					
ANR	646297	Identifier	strncmp		646177	0					
ANR	646298	ArgumentList	f -> name		646177	1					
ANR	646299	Argument	f -> name		646177	0					
ANR	646300	PtrMemberAccess	f -> name		646177	0					
ANR	646301	Identifier	f		646177	0					
ANR	646302	Identifier	name		646177	1					
ANR	646303	Argument	"""str."""		646177	1					
ANR	646304	PrimaryExpression	"""str."""		646177	0					
ANR	646305	Argument	4		646177	2					
ANR	646306	PrimaryExpression	4		646177	0					
ANR	646307	CompoundStatement		21:40:529:529	646177	1					
ANR	646308	IfStatement	if ( mode == 'j' )		646177	0					
ANR	646309	Condition	mode == 'j'	398:10:9422:9432	646177	0	True				
ANR	646310	EqualityExpression	mode == 'j'		646177	0		==			
ANR	646311	Identifier	mode		646177	0					
ANR	646312	PrimaryExpression	'j'		646177	1					
ANR	646313	CompoundStatement		22:23:554:554	646177	1					
ANR	646314	ExpressionStatement	pj_o ( pj )	400:7:9472:9481	646177	0	True				
ANR	646315	CallExpression	pj_o ( pj )		646177	0					
ANR	646316	Callee	pj_o		646177	0					
ANR	646317	Identifier	pj_o		646177	0					
ANR	646318	ArgumentList	pj		646177	1					
ANR	646319	Argument	pj		646177	0					
ANR	646320	Identifier	pj		646177	0					
ANR	646321	ExpressionStatement	"pj_kn ( pj , ""addr"" , ref -> at )"	401:7:9490:9517	646177	1	True				
ANR	646322	CallExpression	"pj_kn ( pj , ""addr"" , ref -> at )"		646177	0					
ANR	646323	Callee	pj_kn		646177	0					
ANR	646324	Identifier	pj_kn		646177	0					
ANR	646325	ArgumentList	pj		646177	1					
ANR	646326	Argument	pj		646177	0					
ANR	646327	Identifier	pj		646177	0					
ANR	646328	Argument	"""addr"""		646177	1					
ANR	646329	PrimaryExpression	"""addr"""		646177	0					
ANR	646330	Argument	ref -> at		646177	2					
ANR	646331	PtrMemberAccess	ref -> at		646177	0					
ANR	646332	Identifier	ref		646177	0					
ANR	646333	Identifier	at		646177	1					
ANR	646334	ExpressionStatement	"pj_kn ( pj , ""ref"" , ref -> addr )"	402:7:9526:9554	646177	2	True				
ANR	646335	CallExpression	"pj_kn ( pj , ""ref"" , ref -> addr )"		646177	0					
ANR	646336	Callee	pj_kn		646177	0					
ANR	646337	Identifier	pj_kn		646177	0					
ANR	646338	ArgumentList	pj		646177	1					
ANR	646339	Argument	pj		646177	0					
ANR	646340	Identifier	pj		646177	0					
ANR	646341	Argument	"""ref"""		646177	1					
ANR	646342	PrimaryExpression	"""ref"""		646177	0					
ANR	646343	Argument	ref -> addr		646177	2					
ANR	646344	PtrMemberAccess	ref -> addr		646177	0					
ANR	646345	Identifier	ref		646177	0					
ANR	646346	Identifier	addr		646177	1					
ANR	646347	ExpressionStatement	"pj_ks ( pj , ""flag"" , f -> name )"	403:7:9563:9590	646177	3	True				
ANR	646348	CallExpression	"pj_ks ( pj , ""flag"" , f -> name )"		646177	0					
ANR	646349	Callee	pj_ks		646177	0					
ANR	646350	Identifier	pj_ks		646177	0					
ANR	646351	ArgumentList	pj		646177	1					
ANR	646352	Argument	pj		646177	0					
ANR	646353	Identifier	pj		646177	0					
ANR	646354	Argument	"""flag"""		646177	1					
ANR	646355	PrimaryExpression	"""flag"""		646177	0					
ANR	646356	Argument	f -> name		646177	2					
ANR	646357	PtrMemberAccess	f -> name		646177	0					
ANR	646358	Identifier	f		646177	0					
ANR	646359	Identifier	name		646177	1					
ANR	646360	ExpressionStatement	pj_end ( pj )	404:7:9599:9610	646177	4	True				
ANR	646361	CallExpression	pj_end ( pj )		646177	0					
ANR	646362	Callee	pj_end		646177	0					
ANR	646363	Identifier	pj_end		646177	0					
ANR	646364	ArgumentList	pj		646177	1					
ANR	646365	Argument	pj		646177	0					
ANR	646366	Identifier	pj		646177	0					
ANR	646367	ElseStatement	else		646177	0					
ANR	646368	CompoundStatement		29:13:744:744	646177	0					
ANR	646369	Statement	r_cons_printf	406:7:9634:9646	646177	0	True				
ANR	646370	Statement	(	406:21:9648:9648	646177	1	True				
ANR	646371	Statement	"""0x%08"""	406:22:9649:9655	646177	2	True				
ANR	646372	Statement	PFMT64x	406:29:9656:9662	646177	3	True				
ANR	646373	Statement	""" 0x%08"""	406:36:9663:9670	646177	4	True				
ANR	646374	Statement	PFMT64x	406:44:9671:9677	646177	5	True				
ANR	646375	Statement	""" %s\\n"""	406:51:9678:9684	646177	6	True				
ANR	646376	Statement	","	406:58:9685:9685	646177	7	True				
ANR	646377	Statement	ref	406:60:9687:9689	646177	8	True				
ANR	646378	Statement	->	406:63:9690:9691	646177	9	True				
ANR	646379	Statement	at	406:65:9692:9693	646177	10	True				
ANR	646380	Statement	","	406:67:9694:9694	646177	11	True				
ANR	646381	Statement	ref	406:69:9696:9698	646177	12	True				
ANR	646382	Statement	->	406:72:9699:9700	646177	13	True				
ANR	646383	Statement	addr	406:74:9701:9704	646177	14	True				
ANR	646384	Statement	","	406:78:9705:9705	646177	15	True				
ANR	646385	Statement	f	406:80:9707:9707	646177	16	True				
ANR	646386	Statement	->	406:81:9708:9709	646177	17	True				
ANR	646387	Statement	name	406:83:9710:9713	646177	18	True				
ANR	646388	Statement	)	406:87:9714:9714	646177	19	True				
ANR	646389	ExpressionStatement		406:88:9715:9715	646177	20	True				
ANR	646390	ElseStatement	else		646177	0					
ANR	646391	IfStatement	if ( do_call )		646177	0					
ANR	646392	Condition	do_call	409:15:9747:9753	646177	0	True				
ANR	646393	Identifier	do_call		646177	0					
ANR	646394	CompoundStatement		33:24:875:875	646177	1					
ANR	646395	BreakStatement	break ;	410:5:9820:9825	646177	0	True				
ANR	646396	IfStatement	if ( ! do_call )		646177	1					
ANR	646397	Condition	! do_call	413:8:9896:9903	646177	0	True				
ANR	646398	UnaryOperationExpression	! do_call		646177	0					
ANR	646399	UnaryOperator	!		646177	0					
ANR	646400	Identifier	do_call		646177	1					
ANR	646401	CompoundStatement		37:18:1025:1025	646177	1					
ANR	646402	IfStatement	if ( blacklisted_word ( f -> name ) )		646177	0					
ANR	646403	Condition	blacklisted_word ( f -> name )	414:9:9917:9942	646177	0	True				
ANR	646404	CallExpression	blacklisted_word ( f -> name )		646177	0					
ANR	646405	Callee	blacklisted_word		646177	0					
ANR	646406	Identifier	blacklisted_word		646177	0					
ANR	646407	ArgumentList	f -> name		646177	1					
ANR	646408	Argument	f -> name		646177	0					
ANR	646409	PtrMemberAccess	f -> name		646177	0					
ANR	646410	Identifier	f		646177	0					
ANR	646411	Identifier	name		646177	1					
ANR	646412	CompoundStatement		38:37:1064:1064	646177	1					
ANR	646413	ContinueStatement	continue ;	415:6:9953:9961	646177	0	True				
ANR	646414	IfStatement	"if ( strstr ( f -> name , "".isatty"" ) )"		646177	1					
ANR	646415	Condition	"strstr ( f -> name , "".isatty"" )"	417:9:9979:10005	646177	0	True				
ANR	646416	CallExpression	"strstr ( f -> name , "".isatty"" )"		646177	0					
ANR	646417	Callee	strstr		646177	0					
ANR	646418	Identifier	strstr		646177	0					
ANR	646419	ArgumentList	f -> name		646177	1					
ANR	646420	Argument	f -> name		646177	0					
ANR	646421	PtrMemberAccess	f -> name		646177	0					
ANR	646422	Identifier	f		646177	0					
ANR	646423	Identifier	name		646177	1					
ANR	646424	Argument	""".isatty"""		646177	1					
ANR	646425	PrimaryExpression	""".isatty"""		646177	0					
ANR	646426	CompoundStatement		41:38:1127:1127	646177	1					
ANR	646427	ExpressionStatement	use_isatty = 1	418:6:10016:10030	646177	0	True				
ANR	646428	AssignmentExpression	use_isatty = 1		646177	0		=			
ANR	646429	Identifier	use_isatty		646177	0					
ANR	646430	PrimaryExpression	1		646177	1					
ANR	646431	IfStatement	"if ( strstr ( f -> name , "".getopt"" ) )"		646177	2					
ANR	646432	Condition	"strstr ( f -> name , "".getopt"" )"	420:9:10048:10074	646177	0	True				
ANR	646433	CallExpression	"strstr ( f -> name , "".getopt"" )"		646177	0					
ANR	646434	Callee	strstr		646177	0					
ANR	646435	Identifier	strstr		646177	0					
ANR	646436	ArgumentList	f -> name		646177	1					
ANR	646437	Argument	f -> name		646177	0					
ANR	646438	PtrMemberAccess	f -> name		646177	0					
ANR	646439	Identifier	f		646177	0					
ANR	646440	Identifier	name		646177	1					
ANR	646441	Argument	""".getopt"""		646177	1					
ANR	646442	PrimaryExpression	""".getopt"""		646177	0					
ANR	646443	CompoundStatement		44:38:1196:1196	646177	1					
ANR	646444	ExpressionStatement	use_getopt = 1	421:6:10085:10099	646177	0	True				
ANR	646445	AssignmentExpression	use_getopt = 1		646177	0		=			
ANR	646446	Identifier	use_getopt		646177	0					
ANR	646447	PrimaryExpression	1		646177	1					
ANR	646448	IfStatement	"if ( ! strncmp ( f -> name , ""method."" , 7 ) )"		646177	3					
ANR	646449	Condition	"! strncmp ( f -> name , ""method."" , 7 )"	423:9:10117:10148	646177	0	True				
ANR	646450	UnaryOperationExpression	"! strncmp ( f -> name , ""method."" , 7 )"		646177	0					
ANR	646451	UnaryOperator	!		646177	0					
ANR	646452	CallExpression	"strncmp ( f -> name , ""method."" , 7 )"		646177	1					
ANR	646453	Callee	strncmp		646177	0					
ANR	646454	Identifier	strncmp		646177	0					
ANR	646455	ArgumentList	f -> name		646177	1					
ANR	646456	Argument	f -> name		646177	0					
ANR	646457	PtrMemberAccess	f -> name		646177	0					
ANR	646458	Identifier	f		646177	0					
ANR	646459	Identifier	name		646177	1					
ANR	646460	Argument	"""method."""		646177	1					
ANR	646461	PrimaryExpression	"""method."""		646177	0					
ANR	646462	Argument	7		646177	2					
ANR	646463	PrimaryExpression	7		646177	0					
ANR	646464	CompoundStatement		47:43:1270:1270	646177	1					
ANR	646465	ExpressionStatement	free ( do_call )	424:6:10159:10173	646177	0	True				
ANR	646466	CallExpression	free ( do_call )		646177	0					
ANR	646467	Callee	free		646177	0					
ANR	646468	Identifier	free		646177	0					
ANR	646469	ArgumentList	do_call		646177	1					
ANR	646470	Argument	do_call		646177	0					
ANR	646471	Identifier	do_call		646177	0					
ANR	646472	ExpressionStatement	do_call = strdup ( f -> name + 7 )	425:6:10181:10211	646177	1	True				
ANR	646473	AssignmentExpression	do_call = strdup ( f -> name + 7 )		646177	0		=			
ANR	646474	Identifier	do_call		646177	0					
ANR	646475	CallExpression	strdup ( f -> name + 7 )		646177	1					
ANR	646476	Callee	strdup		646177	0					
ANR	646477	Identifier	strdup		646177	0					
ANR	646478	ArgumentList	f -> name + 7		646177	1					
ANR	646479	Argument	f -> name + 7		646177	0					
ANR	646480	AdditiveExpression	f -> name + 7		646177	0		+			
ANR	646481	PtrMemberAccess	f -> name		646177	0					
ANR	646482	Identifier	f		646177	0					
ANR	646483	Identifier	name		646177	1					
ANR	646484	PrimaryExpression	7		646177	1					
ANR	646485	ContinueStatement	continue ;	426:6:10219:10227	646177	2	True				
ANR	646486	IfStatement	"if ( ! strncmp ( f -> name , ""str."" , 4 ) )"		646177	4					
ANR	646487	Condition	"! strncmp ( f -> name , ""str."" , 4 )"	428:9:10245:10273	646177	0	True				
ANR	646488	UnaryOperationExpression	"! strncmp ( f -> name , ""str."" , 4 )"		646177	0					
ANR	646489	UnaryOperator	!		646177	0					
ANR	646490	CallExpression	"strncmp ( f -> name , ""str."" , 4 )"		646177	1					
ANR	646491	Callee	strncmp		646177	0					
ANR	646492	Identifier	strncmp		646177	0					
ANR	646493	ArgumentList	f -> name		646177	1					
ANR	646494	Argument	f -> name		646177	0					
ANR	646495	PtrMemberAccess	f -> name		646177	0					
ANR	646496	Identifier	f		646177	0					
ANR	646497	Identifier	name		646177	1					
ANR	646498	Argument	"""str."""		646177	1					
ANR	646499	PrimaryExpression	"""str."""		646177	0					
ANR	646500	Argument	4		646177	2					
ANR	646501	PrimaryExpression	4		646177	0					
ANR	646502	CompoundStatement		52:40:1395:1395	646177	1					
ANR	646503	ExpressionStatement	free ( do_call )	429:6:10284:10298	646177	0	True				
ANR	646504	CallExpression	free ( do_call )		646177	0					
ANR	646505	Callee	free		646177	0					
ANR	646506	Identifier	free		646177	0					
ANR	646507	ArgumentList	do_call		646177	1					
ANR	646508	Argument	do_call		646177	0					
ANR	646509	Identifier	do_call		646177	0					
ANR	646510	ExpressionStatement	do_call = strdup ( f -> name + 4 )	430:6:10306:10336	646177	1	True				
ANR	646511	AssignmentExpression	do_call = strdup ( f -> name + 4 )		646177	0		=			
ANR	646512	Identifier	do_call		646177	0					
ANR	646513	CallExpression	strdup ( f -> name + 4 )		646177	1					
ANR	646514	Callee	strdup		646177	0					
ANR	646515	Identifier	strdup		646177	0					
ANR	646516	ArgumentList	f -> name + 4		646177	1					
ANR	646517	Argument	f -> name + 4		646177	0					
ANR	646518	AdditiveExpression	f -> name + 4		646177	0		+			
ANR	646519	PtrMemberAccess	f -> name		646177	0					
ANR	646520	Identifier	f		646177	0					
ANR	646521	Identifier	name		646177	1					
ANR	646522	PrimaryExpression	4		646177	1					
ANR	646523	ContinueStatement	continue ;	431:6:10344:10352	646177	2	True				
ANR	646524	IfStatement	"if ( ! strncmp ( f -> name , ""sym.imp."" , 8 ) )"		646177	5					
ANR	646525	Condition	"! strncmp ( f -> name , ""sym.imp."" , 8 )"	433:9:10370:10402	646177	0	True				
ANR	646526	UnaryOperationExpression	"! strncmp ( f -> name , ""sym.imp."" , 8 )"		646177	0					
ANR	646527	UnaryOperator	!		646177	0					
ANR	646528	CallExpression	"strncmp ( f -> name , ""sym.imp."" , 8 )"		646177	1					
ANR	646529	Callee	strncmp		646177	0					
ANR	646530	Identifier	strncmp		646177	0					
ANR	646531	ArgumentList	f -> name		646177	1					
ANR	646532	Argument	f -> name		646177	0					
ANR	646533	PtrMemberAccess	f -> name		646177	0					
ANR	646534	Identifier	f		646177	0					
ANR	646535	Identifier	name		646177	1					
ANR	646536	Argument	"""sym.imp."""		646177	1					
ANR	646537	PrimaryExpression	"""sym.imp."""		646177	0					
ANR	646538	Argument	8		646177	2					
ANR	646539	PrimaryExpression	8		646177	0					
ANR	646540	CompoundStatement		57:44:1524:1524	646177	1					
ANR	646541	ExpressionStatement	free ( do_call )	434:6:10413:10427	646177	0	True				
ANR	646542	CallExpression	free ( do_call )		646177	0					
ANR	646543	Callee	free		646177	0					
ANR	646544	Identifier	free		646177	0					
ANR	646545	ArgumentList	do_call		646177	1					
ANR	646546	Argument	do_call		646177	0					
ANR	646547	Identifier	do_call		646177	0					
ANR	646548	ExpressionStatement	do_call = strdup ( f -> name + 8 )	435:6:10435:10465	646177	1	True				
ANR	646549	AssignmentExpression	do_call = strdup ( f -> name + 8 )		646177	0		=			
ANR	646550	Identifier	do_call		646177	0					
ANR	646551	CallExpression	strdup ( f -> name + 8 )		646177	1					
ANR	646552	Callee	strdup		646177	0					
ANR	646553	Identifier	strdup		646177	0					
ANR	646554	ArgumentList	f -> name + 8		646177	1					
ANR	646555	Argument	f -> name + 8		646177	0					
ANR	646556	AdditiveExpression	f -> name + 8		646177	0		+			
ANR	646557	PtrMemberAccess	f -> name		646177	0					
ANR	646558	Identifier	f		646177	0					
ANR	646559	Identifier	name		646177	1					
ANR	646560	PrimaryExpression	8		646177	1					
ANR	646561	ContinueStatement	continue ;	436:6:10473:10481	646177	2	True				
ANR	646562	IfStatement	"if ( ! strncmp ( f -> name , ""reloc."" , 6 ) )"		646177	6					
ANR	646563	Condition	"! strncmp ( f -> name , ""reloc."" , 6 )"	438:9:10499:10529	646177	0	True				
ANR	646564	UnaryOperationExpression	"! strncmp ( f -> name , ""reloc."" , 6 )"		646177	0					
ANR	646565	UnaryOperator	!		646177	0					
ANR	646566	CallExpression	"strncmp ( f -> name , ""reloc."" , 6 )"		646177	1					
ANR	646567	Callee	strncmp		646177	0					
ANR	646568	Identifier	strncmp		646177	0					
ANR	646569	ArgumentList	f -> name		646177	1					
ANR	646570	Argument	f -> name		646177	0					
ANR	646571	PtrMemberAccess	f -> name		646177	0					
ANR	646572	Identifier	f		646177	0					
ANR	646573	Identifier	name		646177	1					
ANR	646574	Argument	"""reloc."""		646177	1					
ANR	646575	PrimaryExpression	"""reloc."""		646177	0					
ANR	646576	Argument	6		646177	2					
ANR	646577	PrimaryExpression	6		646177	0					
ANR	646578	CompoundStatement		62:42:1651:1651	646177	1					
ANR	646579	ExpressionStatement	free ( do_call )	439:6:10540:10554	646177	0	True				
ANR	646580	CallExpression	free ( do_call )		646177	0					
ANR	646581	Callee	free		646177	0					
ANR	646582	Identifier	free		646177	0					
ANR	646583	ArgumentList	do_call		646177	1					
ANR	646584	Argument	do_call		646177	0					
ANR	646585	Identifier	do_call		646177	0					
ANR	646586	ExpressionStatement	do_call = strdup ( f -> name + 6 )	440:6:10562:10592	646177	1	True				
ANR	646587	AssignmentExpression	do_call = strdup ( f -> name + 6 )		646177	0		=			
ANR	646588	Identifier	do_call		646177	0					
ANR	646589	CallExpression	strdup ( f -> name + 6 )		646177	1					
ANR	646590	Callee	strdup		646177	0					
ANR	646591	Identifier	strdup		646177	0					
ANR	646592	ArgumentList	f -> name + 6		646177	1					
ANR	646593	Argument	f -> name + 6		646177	0					
ANR	646594	AdditiveExpression	f -> name + 6		646177	0		+			
ANR	646595	PtrMemberAccess	f -> name		646177	0					
ANR	646596	Identifier	f		646177	0					
ANR	646597	Identifier	name		646177	1					
ANR	646598	PrimaryExpression	6		646177	1					
ANR	646599	ContinueStatement	continue ;	441:6:10600:10608	646177	2	True				
ANR	646600	ExpressionStatement	r_list_free ( refs )	446:2:10634:10652	646177	9	True				
ANR	646601	CallExpression	r_list_free ( refs )		646177	0					
ANR	646602	Callee	r_list_free		646177	0					
ANR	646603	Identifier	r_list_free		646177	0					
ANR	646604	ArgumentList	refs		646177	1					
ANR	646605	Argument	refs		646177	0					
ANR	646606	Identifier	refs		646177	0					
ANR	646607	IfStatement	if ( mode == 'j' )		646177	9					
ANR	646608	Condition	mode == 'j'	448:5:10662:10673	646177	0	True				
ANR	646609	EqualityExpression	mode == 'j'		646177	0		==			
ANR	646610	Identifier	mode		646177	0					
ANR	646611	PrimaryExpression	'j'		646177	1					
ANR	646612	CompoundStatement		72:19:1795:1795	646177	1					
ANR	646613	ExpressionStatement	pj_end ( pj )	449:2:10680:10691	646177	0	True				
ANR	646614	CallExpression	pj_end ( pj )		646177	0					
ANR	646615	Callee	pj_end		646177	0					
ANR	646616	Identifier	pj_end		646177	0					
ANR	646617	ArgumentList	pj		646177	1					
ANR	646618	Argument	pj		646177	0					
ANR	646619	Identifier	pj		646177	0					
ANR	646620	IfStatement	if ( pj )		646177	10					
ANR	646621	Condition	pj	451:5:10701:10702	646177	0	True				
ANR	646622	Identifier	pj		646177	0					
ANR	646623	CompoundStatement		75:9:1824:1824	646177	1					
ANR	646624	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"	452:2:10709:10747	646177	0	True				
ANR	646625	CallExpression	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"		646177	0					
ANR	646626	Callee	r_cons_printf		646177	0					
ANR	646627	Identifier	r_cons_printf		646177	0					
ANR	646628	ArgumentList	"""%s\\n"""		646177	1					
ANR	646629	Argument	"""%s\\n"""		646177	0					
ANR	646630	PrimaryExpression	"""%s\\n"""		646177	0					
ANR	646631	Argument	pj_string ( pj )		646177	1					
ANR	646632	CallExpression	pj_string ( pj )		646177	0					
ANR	646633	Callee	pj_string		646177	0					
ANR	646634	Identifier	pj_string		646177	0					
ANR	646635	ArgumentList	pj		646177	1					
ANR	646636	Argument	pj		646177	0					
ANR	646637	Identifier	pj		646177	0					
ANR	646638	ExpressionStatement	pj_free ( pj )	453:2:10751:10763	646177	1	True				
ANR	646639	CallExpression	pj_free ( pj )		646177	0					
ANR	646640	Callee	pj_free		646177	0					
ANR	646641	Identifier	pj_free		646177	0					
ANR	646642	ArgumentList	pj		646177	1					
ANR	646643	Argument	pj		646177	0					
ANR	646644	Identifier	pj		646177	0					
ANR	646645	IfStatement	if ( use_getopt )		646177	11					
ANR	646646	Condition	use_getopt	456:5:10821:10830	646177	0	True				
ANR	646647	Identifier	use_getopt		646177	0					
ANR	646648	CompoundStatement		81:2:1956:2006	646177	1					
ANR	646649	IdentifierDeclStatement	"RFlagItem * item = r_flag_get ( core -> flags , ""main"" ) ;"	457:2:10837:10887	646177	0	True				
ANR	646650	IdentifierDecl	"* item = r_flag_get ( core -> flags , ""main"" )"		646177	0					
ANR	646651	IdentifierDeclType	RFlagItem *		646177	0					
ANR	646652	Identifier	item		646177	1					
ANR	646653	AssignmentExpression	"* item = r_flag_get ( core -> flags , ""main"" )"		646177	2		=			
ANR	646654	Identifier	item		646177	0					
ANR	646655	CallExpression	"r_flag_get ( core -> flags , ""main"" )"		646177	1					
ANR	646656	Callee	r_flag_get		646177	0					
ANR	646657	Identifier	r_flag_get		646177	0					
ANR	646658	ArgumentList	core -> flags		646177	1					
ANR	646659	Argument	core -> flags		646177	0					
ANR	646660	PtrMemberAccess	core -> flags		646177	0					
ANR	646661	Identifier	core		646177	0					
ANR	646662	Identifier	flags		646177	1					
ANR	646663	Argument	"""main"""		646177	1					
ANR	646664	PrimaryExpression	"""main"""		646177	0					
ANR	646665	ExpressionStatement	free ( do_call )	458:2:10891:10905	646177	1	True				
ANR	646666	CallExpression	free ( do_call )		646177	0					
ANR	646667	Callee	free		646177	0					
ANR	646668	Identifier	free		646177	0					
ANR	646669	ArgumentList	do_call		646177	1					
ANR	646670	Argument	do_call		646177	0					
ANR	646671	Identifier	do_call		646177	0					
ANR	646672	IfStatement	if ( item && item -> offset == fcn -> addr )		646177	2					
ANR	646673	Condition	item && item -> offset == fcn -> addr	460:6:10969:11001	646177	0	True				
ANR	646674	AndExpression	item && item -> offset == fcn -> addr		646177	0		&&			
ANR	646675	Identifier	item		646177	0					
ANR	646676	EqualityExpression	item -> offset == fcn -> addr		646177	1		==			
ANR	646677	PtrMemberAccess	item -> offset		646177	0					
ANR	646678	Identifier	item		646177	0					
ANR	646679	Identifier	offset		646177	1					
ANR	646680	PtrMemberAccess	fcn -> addr		646177	1					
ANR	646681	Identifier	fcn		646177	0					
ANR	646682	Identifier	addr		646177	1					
ANR	646683	CompoundStatement		84:41:2123:2123	646177	1					
ANR	646684	ReturnStatement	"return strdup ( ""main"" ) ;"	461:3:11009:11031	646177	0	True				
ANR	646685	CallExpression	"strdup ( ""main"" )"		646177	0					
ANR	646686	Callee	strdup		646177	0					
ANR	646687	Identifier	strdup		646177	0					
ANR	646688	ArgumentList	"""main"""		646177	1					
ANR	646689	Argument	"""main"""		646177	0					
ANR	646690	PrimaryExpression	"""main"""		646177	0					
ANR	646691	ReturnStatement	"return strdup ( ""parse_args"" ) ;"	463:2:11048:11076	646177	3	True				
ANR	646692	CallExpression	"strdup ( ""parse_args"" )"		646177	0					
ANR	646693	Callee	strdup		646177	0					
ANR	646694	Identifier	strdup		646177	0					
ANR	646695	ArgumentList	"""parse_args"""		646177	1					
ANR	646696	Argument	"""parse_args"""		646177	0					
ANR	646697	PrimaryExpression	"""parse_args"""		646177	0					
ANR	646698	IfStatement	if ( use_isatty )		646177	12					
ANR	646699	Condition	use_isatty	465:5:11095:11104	646177	0	True				
ANR	646700	Identifier	use_isatty		646177	0					
ANR	646701	CompoundStatement		89:17:2226:2226	646177	1					
ANR	646702	Statement	char	466:2:11111:11114	646177	0	True				
ANR	646703	Statement	*	466:7:11116:11116	646177	1	True				
ANR	646704	Statement	ret	466:8:11117:11119	646177	2	True				
ANR	646705	Statement	=	466:12:11121:11121	646177	3	True				
ANR	646706	Statement	r_str_newf	466:14:11123:11132	646177	4	True				
ANR	646707	Statement	(	466:25:11134:11134	646177	5	True				
ANR	646708	Statement	"""sub.setup_tty_%s_%"""	466:26:11135:11154	646177	6	True				
ANR	646709	Statement	PFMT64x	466:46:11155:11161	646177	7	True				
ANR	646710	Statement	","	466:53:11162:11162	646177	8	True				
ANR	646711	Statement	do_call	466:55:11164:11170	646177	9	True				
ANR	646712	Statement	","	466:62:11171:11171	646177	10	True				
ANR	646713	Statement	fcn	466:64:11173:11175	646177	11	True				
ANR	646714	Statement	->	466:67:11176:11177	646177	12	True				
ANR	646715	Statement	addr	466:69:11178:11181	646177	13	True				
ANR	646716	Statement	)	466:73:11182:11182	646177	14	True				
ANR	646717	ExpressionStatement		466:74:11183:11183	646177	15	True				
ANR	646718	ExpressionStatement	free ( do_call )	467:2:11187:11201	646177	16	True				
ANR	646719	CallExpression	free ( do_call )		646177	0					
ANR	646720	Callee	free		646177	0					
ANR	646721	Identifier	free		646177	0					
ANR	646722	ArgumentList	do_call		646177	1					
ANR	646723	Argument	do_call		646177	0					
ANR	646724	Identifier	do_call		646177	0					
ANR	646725	ReturnStatement	return ret ;	468:2:11205:11215	646177	17	True				
ANR	646726	Identifier	ret		646177	0					
ANR	646727	IfStatement	if ( do_call )		646177	13					
ANR	646728	Condition	do_call	470:5:11225:11231	646177	0	True				
ANR	646729	Identifier	do_call		646177	0					
ANR	646730	CompoundStatement		94:14:2353:2353	646177	1					
ANR	646731	Statement	char	471:2:11238:11241	646177	0	True				
ANR	646732	Statement	*	471:7:11243:11243	646177	1	True				
ANR	646733	Statement	ret	471:8:11244:11246	646177	2	True				
ANR	646734	Statement	=	471:12:11248:11248	646177	3	True				
ANR	646735	Statement	r_str_newf	471:14:11250:11259	646177	4	True				
ANR	646736	Statement	(	471:25:11261:11261	646177	5	True				
ANR	646737	Statement	"""sub.%s_%"""	471:26:11262:11271	646177	6	True				
ANR	646738	Statement	PFMT64x	471:36:11272:11278	646177	7	True				
ANR	646739	Statement	","	471:43:11279:11279	646177	8	True				
ANR	646740	Statement	do_call	471:45:11281:11287	646177	9	True				
ANR	646741	Statement	","	471:52:11288:11288	646177	10	True				
ANR	646742	Statement	fcn	471:54:11290:11292	646177	11	True				
ANR	646743	Statement	->	471:57:11293:11294	646177	12	True				
ANR	646744	Statement	addr	471:59:11295:11298	646177	13	True				
ANR	646745	Statement	)	471:63:11299:11299	646177	14	True				
ANR	646746	ExpressionStatement		471:64:11300:11300	646177	15	True				
ANR	646747	ExpressionStatement	free ( do_call )	472:2:11304:11318	646177	16	True				
ANR	646748	CallExpression	free ( do_call )		646177	0					
ANR	646749	Callee	free		646177	0					
ANR	646750	Identifier	free		646177	0					
ANR	646751	ArgumentList	do_call		646177	1					
ANR	646752	Argument	do_call		646177	0					
ANR	646753	Identifier	do_call		646177	0					
ANR	646754	ReturnStatement	return ret ;	473:2:11322:11332	646177	17	True				
ANR	646755	Identifier	ret		646177	0					
ANR	646756	ReturnStatement	return NULL ;	475:1:11338:11349	646177	14	True				
ANR	646757	Identifier	NULL		646177	0					
ANR	646758	ReturnType	static char *		646177	1					
ANR	646759	Identifier	anal_fcn_autoname		646177	2					
ANR	646760	ParameterList	"RCore * core , RAnalFunction * fcn , int dump , int mode"		646177	3					
ANR	646761	Parameter	RCore * core	377:31:8827:8837	646177	0	True				
ANR	646762	ParameterType	RCore *		646177	0					
ANR	646763	Identifier	core		646177	1					
ANR	646764	Parameter	RAnalFunction * fcn	377:44:8840:8857	646177	1	True				
ANR	646765	ParameterType	RAnalFunction *		646177	0					
ANR	646766	Identifier	fcn		646177	1					
ANR	646767	Parameter	int dump	377:64:8860:8867	646177	2	True				
ANR	646768	ParameterType	int		646177	0					
ANR	646769	Identifier	dump		646177	1					
ANR	646770	Parameter	int mode	377:74:8870:8877	646177	3	True				
ANR	646771	ParameterType	int		646177	0					
ANR	646772	Identifier	mode		646177	1					
ANR	646773	CFGEntryNode	ENTRY		646177		True				
ANR	646774	CFGExitNode	EXIT		646177		True				
ANR	646775	CFGErrorNode	ERROR		646177		True				
ANR	646776	Symbol	ref -> addr		646177						
ANR	646777	Symbol	pj_string		646177						
ANR	646778	Symbol	* fcn		646177						
ANR	646779	Symbol	f -> name		646177						
ANR	646780	Symbol	blacklisted_word		646177						
ANR	646781	Symbol	* core		646177						
ANR	646782	Symbol	ref -> at		646177						
ANR	646783	Symbol	use_getopt		646177						
ANR	646784	Symbol	core -> anal		646177						
ANR	646785	Symbol	fcn		646177						
ANR	646786	Symbol	mode		646177						
ANR	646787	Symbol	do_call		646177						
ANR	646788	Symbol	strncmp		646177						
ANR	646789	Symbol	ref		646177						
ANR	646790	Symbol	* item		646177						
ANR	646791	Symbol	dump		646177						
ANR	646792	Symbol	r_flag_get_i		646177						
ANR	646793	Symbol	use_isatty		646177						
ANR	646794	Symbol	item -> offset		646177						
ANR	646795	Symbol	r_flag_get		646177						
ANR	646796	Symbol	ret		646177						
ANR	646797	Symbol	item		646177						
ANR	646798	Symbol	NULL		646177						
ANR	646799	Symbol	f		646177						
ANR	646800	Symbol	iter		646177						
ANR	646801	Symbol	core -> flags		646177						
ANR	646802	Symbol	r_anal_fcn_get_refs		646177						
ANR	646803	Symbol	* f		646177						
ANR	646804	Symbol	core		646177						
ANR	646805	Symbol	refs		646177						
ANR	646806	Symbol	strstr		646177						
ANR	646807	Symbol	fcn -> addr		646177						
ANR	646808	Symbol	pj		646177						
ANR	646809	Symbol	pj_new		646177						
ANR	646810	Symbol	strdup		646177						
ANR	646811	Symbol	* ref		646177						
ANR	646812	Function	r_core_anal_autoname_all_fcns	479:0:11429:11993							
ANR	646813	FunctionDef	r_core_anal_autoname_all_fcns (RCore * core)		646812	0					
ANR	646814	CompoundStatement		479:54:11483:11993	646812	0					
ANR	646815	IdentifierDeclStatement	RListIter * it ;	480:1:11486:11499	646812	0	True				
ANR	646816	IdentifierDecl	* it		646812	0					
ANR	646817	IdentifierDeclType	RListIter *		646812	0					
ANR	646818	Identifier	it		646812	1					
ANR	646819	IdentifierDeclStatement	RAnalFunction * fcn ;	481:1:11502:11520	646812	1	True				
ANR	646820	IdentifierDecl	* fcn		646812	0					
ANR	646821	IdentifierDeclType	RAnalFunction *		646812	0					
ANR	646822	Identifier	fcn		646812	1					
ANR	646823	Statement	r_list_foreach	483:1:11524:11537	646812	2	True				
ANR	646824	Statement	(	483:16:11539:11539	646812	3	True				
ANR	646825	Statement	core	483:17:11540:11543	646812	4	True				
ANR	646826	Statement	->	483:21:11544:11545	646812	5	True				
ANR	646827	Statement	anal	483:23:11546:11549	646812	6	True				
ANR	646828	Statement	->	483:27:11550:11551	646812	7	True				
ANR	646829	Statement	fcns	483:29:11552:11555	646812	8	True				
ANR	646830	Statement	","	483:33:11556:11556	646812	9	True				
ANR	646831	Statement	it	483:35:11558:11559	646812	10	True				
ANR	646832	Statement	","	483:37:11560:11560	646812	11	True				
ANR	646833	Statement	fcn	483:39:11562:11564	646812	12	True				
ANR	646834	Statement	)	483:42:11565:11565	646812	13	True				
ANR	646835	CompoundStatement		5:44:83:83	646812	14					
ANR	646836	IfStatement	"if ( ! strncmp ( fcn -> name , ""fcn."" , 4 ) || ! strncmp ( fcn -> name , ""sym.func."" , 9 ) )"		646812	0					
ANR	646837	Condition	"! strncmp ( fcn -> name , ""fcn."" , 4 ) || ! strncmp ( fcn -> name , ""sym.func."" , 9 )"	484:6:11575:11645	646812	0	True				
ANR	646838	OrExpression	"! strncmp ( fcn -> name , ""fcn."" , 4 ) || ! strncmp ( fcn -> name , ""sym.func."" , 9 )"		646812	0		||			
ANR	646839	UnaryOperationExpression	"! strncmp ( fcn -> name , ""fcn."" , 4 )"		646812	0					
ANR	646840	UnaryOperator	!		646812	0					
ANR	646841	CallExpression	"strncmp ( fcn -> name , ""fcn."" , 4 )"		646812	1					
ANR	646842	Callee	strncmp		646812	0					
ANR	646843	Identifier	strncmp		646812	0					
ANR	646844	ArgumentList	fcn -> name		646812	1					
ANR	646845	Argument	fcn -> name		646812	0					
ANR	646846	PtrMemberAccess	fcn -> name		646812	0					
ANR	646847	Identifier	fcn		646812	0					
ANR	646848	Identifier	name		646812	1					
ANR	646849	Argument	"""fcn."""		646812	1					
ANR	646850	PrimaryExpression	"""fcn."""		646812	0					
ANR	646851	Argument	4		646812	2					
ANR	646852	PrimaryExpression	4		646812	0					
ANR	646853	UnaryOperationExpression	"! strncmp ( fcn -> name , ""sym.func."" , 9 )"		646812	1					
ANR	646854	UnaryOperator	!		646812	0					
ANR	646855	CallExpression	"strncmp ( fcn -> name , ""sym.func."" , 9 )"		646812	1					
ANR	646856	Callee	strncmp		646812	0					
ANR	646857	Identifier	strncmp		646812	0					
ANR	646858	ArgumentList	fcn -> name		646812	1					
ANR	646859	Argument	fcn -> name		646812	0					
ANR	646860	PtrMemberAccess	fcn -> name		646812	0					
ANR	646861	Identifier	fcn		646812	0					
ANR	646862	Identifier	name		646812	1					
ANR	646863	Argument	"""sym.func."""		646812	1					
ANR	646864	PrimaryExpression	"""sym.func."""		646812	0					
ANR	646865	Argument	9		646812	2					
ANR	646866	PrimaryExpression	9		646812	0					
ANR	646867	CompoundStatement		7:3:169:222	646812	1					
ANR	646868	IdentifierDeclStatement	"RFlagItem * item = r_flag_get ( core -> flags , fcn -> name ) ;"	485:3:11653:11706	646812	0	True				
ANR	646869	IdentifierDecl	"* item = r_flag_get ( core -> flags , fcn -> name )"		646812	0					
ANR	646870	IdentifierDeclType	RFlagItem *		646812	0					
ANR	646871	Identifier	item		646812	1					
ANR	646872	AssignmentExpression	"* item = r_flag_get ( core -> flags , fcn -> name )"		646812	2		=			
ANR	646873	Identifier	item		646812	0					
ANR	646874	CallExpression	"r_flag_get ( core -> flags , fcn -> name )"		646812	1					
ANR	646875	Callee	r_flag_get		646812	0					
ANR	646876	Identifier	r_flag_get		646812	0					
ANR	646877	ArgumentList	core -> flags		646812	1					
ANR	646878	Argument	core -> flags		646812	0					
ANR	646879	PtrMemberAccess	core -> flags		646812	0					
ANR	646880	Identifier	core		646812	0					
ANR	646881	Identifier	flags		646812	1					
ANR	646882	Argument	fcn -> name		646812	1					
ANR	646883	PtrMemberAccess	fcn -> name		646812	0					
ANR	646884	Identifier	fcn		646812	0					
ANR	646885	Identifier	name		646812	1					
ANR	646886	IfStatement	if ( item )		646812	1					
ANR	646887	Condition	item	486:7:11715:11718	646812	0	True				
ANR	646888	Identifier	item		646812	0					
ANR	646889	CompoundStatement		9:4:243:291	646812	1					
ANR	646890	IdentifierDeclStatement	"char * name = anal_fcn_autoname ( core , fcn , 0 , 0 ) ;"	487:4:11727:11775	646812	0	True				
ANR	646891	IdentifierDecl	"* name = anal_fcn_autoname ( core , fcn , 0 , 0 )"		646812	0					
ANR	646892	IdentifierDeclType	char *		646812	0					
ANR	646893	Identifier	name		646812	1					
ANR	646894	AssignmentExpression	"* name = anal_fcn_autoname ( core , fcn , 0 , 0 )"		646812	2		=			
ANR	646895	Identifier	name		646812	0					
ANR	646896	CallExpression	"anal_fcn_autoname ( core , fcn , 0 , 0 )"		646812	1					
ANR	646897	Callee	anal_fcn_autoname		646812	0					
ANR	646898	Identifier	anal_fcn_autoname		646812	0					
ANR	646899	ArgumentList	core		646812	1					
ANR	646900	Argument	core		646812	0					
ANR	646901	Identifier	core		646812	0					
ANR	646902	Argument	fcn		646812	1					
ANR	646903	Identifier	fcn		646812	0					
ANR	646904	Argument	0		646812	2					
ANR	646905	PrimaryExpression	0		646812	0					
ANR	646906	Argument	0		646812	3					
ANR	646907	PrimaryExpression	0		646812	0					
ANR	646908	IfStatement	if ( name )		646812	1					
ANR	646909	Condition	name	488:8:11785:11788	646812	0	True				
ANR	646910	Identifier	name		646812	0					
ANR	646911	CompoundStatement		10:14:307:307	646812	1					
ANR	646912	ExpressionStatement	"r_flag_rename ( core -> flags , item , name )"	489:5:11798:11837	646812	0	True				
ANR	646913	CallExpression	"r_flag_rename ( core -> flags , item , name )"		646812	0					
ANR	646914	Callee	r_flag_rename		646812	0					
ANR	646915	Identifier	r_flag_rename		646812	0					
ANR	646916	ArgumentList	core -> flags		646812	1					
ANR	646917	Argument	core -> flags		646812	0					
ANR	646918	PtrMemberAccess	core -> flags		646812	0					
ANR	646919	Identifier	core		646812	0					
ANR	646920	Identifier	flags		646812	1					
ANR	646921	Argument	item		646812	1					
ANR	646922	Identifier	item		646812	0					
ANR	646923	Argument	name		646812	2					
ANR	646924	Identifier	name		646812	0					
ANR	646925	ExpressionStatement	free ( fcn -> name )	490:5:11844:11860	646812	1	True				
ANR	646926	CallExpression	free ( fcn -> name )		646812	0					
ANR	646927	Callee	free		646812	0					
ANR	646928	Identifier	free		646812	0					
ANR	646929	ArgumentList	fcn -> name		646812	1					
ANR	646930	Argument	fcn -> name		646812	0					
ANR	646931	PtrMemberAccess	fcn -> name		646812	0					
ANR	646932	Identifier	fcn		646812	0					
ANR	646933	Identifier	name		646812	1					
ANR	646934	ExpressionStatement	fcn -> name = name	491:5:11867:11883	646812	2	True				
ANR	646935	AssignmentExpression	fcn -> name = name		646812	0		=			
ANR	646936	PtrMemberAccess	fcn -> name		646812	0					
ANR	646937	Identifier	fcn		646812	0					
ANR	646938	Identifier	name		646812	1					
ANR	646939	Identifier	name		646812	1					
ANR	646940	ElseStatement	else		646812	0					
ANR	646941	CompoundStatement		15:10:417:417	646812	0					
ANR	646942	ExpressionStatement	r_warn_if_reached ( )	495:4:11959:11979	646812	0	True				
ANR	646943	CallExpression	r_warn_if_reached ( )		646812	0					
ANR	646944	Callee	r_warn_if_reached		646812	0					
ANR	646945	Identifier	r_warn_if_reached		646812	0					
ANR	646946	ArgumentList			646812	1					
ANR	646947	ReturnType	R_API void		646812	1					
ANR	646948	Identifier	r_core_anal_autoname_all_fcns		646812	2					
ANR	646949	ParameterList	RCore * core		646812	3					
ANR	646950	Parameter	RCore * core	479:41:11470:11480	646812	0	True				
ANR	646951	ParameterType	RCore *		646812	0					
ANR	646952	Identifier	core		646812	1					
ANR	646953	CFGEntryNode	ENTRY		646812		True				
ANR	646954	CFGExitNode	EXIT		646812		True				
ANR	646955	Symbol	fcn		646812						
ANR	646956	Symbol	r_flag_get		646812						
ANR	646957	Symbol	core		646812						
ANR	646958	Symbol	strncmp		646812						
ANR	646959	Symbol	item		646812						
ANR	646960	Symbol	* fcn		646812						
ANR	646961	Symbol	fcn -> name		646812						
ANR	646962	Symbol	* core		646812						
ANR	646963	Symbol	name		646812						
ANR	646964	Symbol	anal_fcn_autoname		646812						
ANR	646965	Symbol	core -> flags		646812						
ANR	646966	Symbol	it		646812						
ANR	646967	Function	r_core_anal_autoname_all_golang_fcns	503:0:12103:14247							
ANR	646968	FunctionDef	r_core_anal_autoname_all_golang_fcns (RCore * core)		646967	0					
ANR	646969	CompoundStatement		503:61:12164:14247	646967	0					
ANR	646970	IdentifierDeclStatement	RList * section_list = r_bin_get_sections ( core -> bin ) ;	504:1:12167:12219	646967	0	True				
ANR	646971	IdentifierDecl	* section_list = r_bin_get_sections ( core -> bin )		646967	0					
ANR	646972	IdentifierDeclType	RList *		646967	0					
ANR	646973	Identifier	section_list		646967	1					
ANR	646974	AssignmentExpression	* section_list = r_bin_get_sections ( core -> bin )		646967	2		=			
ANR	646975	Identifier	section_list		646967	0					
ANR	646976	CallExpression	r_bin_get_sections ( core -> bin )		646967	1					
ANR	646977	Callee	r_bin_get_sections		646967	0					
ANR	646978	Identifier	r_bin_get_sections		646967	0					
ANR	646979	ArgumentList	core -> bin		646967	1					
ANR	646980	Argument	core -> bin		646967	0					
ANR	646981	PtrMemberAccess	core -> bin		646967	0					
ANR	646982	Identifier	core		646967	0					
ANR	646983	Identifier	bin		646967	1					
ANR	646984	IdentifierDeclStatement	RListIter * iter ;	505:1:12222:12237	646967	1	True				
ANR	646985	IdentifierDecl	* iter		646967	0					
ANR	646986	IdentifierDeclType	RListIter *		646967	0					
ANR	646987	Identifier	iter		646967	1					
ANR	646988	IdentifierDeclStatement	const char * oldstr = NULL ;	506:1:12240:12265	646967	2	True				
ANR	646989	IdentifierDecl	* oldstr = NULL		646967	0					
ANR	646990	IdentifierDeclType	const char *		646967	0					
ANR	646991	Identifier	oldstr		646967	1					
ANR	646992	AssignmentExpression	* oldstr = NULL		646967	2		=			
ANR	646993	Identifier	NULL		646967	0					
ANR	646994	Identifier	NULL		646967	1					
ANR	646995	IdentifierDeclStatement	RBinSection * section ;	507:1:12268:12288	646967	3	True				
ANR	646996	IdentifierDecl	* section		646967	0					
ANR	646997	IdentifierDeclType	RBinSection *		646967	0					
ANR	646998	Identifier	section		646967	1					
ANR	646999	IdentifierDeclStatement	ut64 gopclntab = 0 ;	508:1:12291:12309	646967	4	True				
ANR	647000	IdentifierDecl	gopclntab = 0		646967	0					
ANR	647001	IdentifierDeclType	ut64		646967	0					
ANR	647002	Identifier	gopclntab		646967	1					
ANR	647003	AssignmentExpression	gopclntab = 0		646967	2		=			
ANR	647004	Identifier	gopclntab		646967	0					
ANR	647005	PrimaryExpression	0		646967	1					
ANR	647006	Statement	r_list_foreach	509:1:12312:12325	646967	5	True				
ANR	647007	Statement	(	509:16:12327:12327	646967	6	True				
ANR	647008	Statement	section_list	509:17:12328:12339	646967	7	True				
ANR	647009	Statement	","	509:29:12340:12340	646967	8	True				
ANR	647010	Statement	iter	509:31:12342:12345	646967	9	True				
ANR	647011	Statement	","	509:35:12346:12346	646967	10	True				
ANR	647012	Statement	section	509:37:12348:12354	646967	11	True				
ANR	647013	Statement	)	509:44:12355:12355	646967	12	True				
ANR	647014	CompoundStatement		7:46:192:192	646967	13					
ANR	647015	IfStatement	"if ( strstr ( section -> name , "".gopclntab"" ) )"		646967	0					
ANR	647016	Condition	"strstr ( section -> name , "".gopclntab"" )"	510:6:12365:12400	646967	0	True				
ANR	647017	CallExpression	"strstr ( section -> name , "".gopclntab"" )"		646967	0					
ANR	647018	Callee	strstr		646967	0					
ANR	647019	Identifier	strstr		646967	0					
ANR	647020	ArgumentList	section -> name		646967	1					
ANR	647021	Argument	section -> name		646967	0					
ANR	647022	PtrMemberAccess	section -> name		646967	0					
ANR	647023	Identifier	section		646967	0					
ANR	647024	Identifier	name		646967	1					
ANR	647025	Argument	""".gopclntab"""		646967	1					
ANR	647026	PrimaryExpression	""".gopclntab"""		646967	0					
ANR	647027	CompoundStatement		8:44:238:238	646967	1					
ANR	647028	ExpressionStatement	gopclntab = section -> vaddr	511:3:12408:12434	646967	0	True				
ANR	647029	AssignmentExpression	gopclntab = section -> vaddr		646967	0		=			
ANR	647030	Identifier	gopclntab		646967	0					
ANR	647031	PtrMemberAccess	section -> vaddr		646967	1					
ANR	647032	Identifier	section		646967	0					
ANR	647033	Identifier	vaddr		646967	1					
ANR	647034	BreakStatement	break ;	512:3:12439:12444	646967	1	True				
ANR	647035	IfStatement	if ( ! gopclntab )		646967	14					
ANR	647036	Condition	! gopclntab	515:5:12458:12467	646967	0	True				
ANR	647037	UnaryOperationExpression	! gopclntab		646967	0					
ANR	647038	UnaryOperator	!		646967	0					
ANR	647039	Identifier	gopclntab		646967	1					
ANR	647040	CompoundStatement		13:17:305:305	646967	1					
ANR	647041	ExpressionStatement	"oldstr = r_print_rowlog ( core -> print , ""Could not find .gopclntab section"" )"	516:2:12474:12548	646967	0	True				
ANR	647042	AssignmentExpression	"oldstr = r_print_rowlog ( core -> print , ""Could not find .gopclntab section"" )"		646967	0		=			
ANR	647043	Identifier	oldstr		646967	0					
ANR	647044	CallExpression	"r_print_rowlog ( core -> print , ""Could not find .gopclntab section"" )"		646967	1					
ANR	647045	Callee	r_print_rowlog		646967	0					
ANR	647046	Identifier	r_print_rowlog		646967	0					
ANR	647047	ArgumentList	core -> print		646967	1					
ANR	647048	Argument	core -> print		646967	0					
ANR	647049	PtrMemberAccess	core -> print		646967	0					
ANR	647050	Identifier	core		646967	0					
ANR	647051	Identifier	print		646967	1					
ANR	647052	Argument	"""Could not find .gopclntab section"""		646967	1					
ANR	647053	PrimaryExpression	"""Could not find .gopclntab section"""		646967	0					
ANR	647054	ExpressionStatement	"r_print_rowlog_done ( core -> print , oldstr )"	517:2:12552:12593	646967	1	True				
ANR	647055	CallExpression	"r_print_rowlog_done ( core -> print , oldstr )"		646967	0					
ANR	647056	Callee	r_print_rowlog_done		646967	0					
ANR	647057	Identifier	r_print_rowlog_done		646967	0					
ANR	647058	ArgumentList	core -> print		646967	1					
ANR	647059	Argument	core -> print		646967	0					
ANR	647060	PtrMemberAccess	core -> print		646967	0					
ANR	647061	Identifier	core		646967	0					
ANR	647062	Identifier	print		646967	1					
ANR	647063	Argument	oldstr		646967	1					
ANR	647064	Identifier	oldstr		646967	0					
ANR	647065	ReturnStatement	return ;	518:2:12597:12603	646967	2	True				
ANR	647066	IdentifierDeclStatement	int ptr_size = core -> anal -> bits / 8 ;	520:1:12609:12644	646967	15	True				
ANR	647067	IdentifierDecl	ptr_size = core -> anal -> bits / 8		646967	0					
ANR	647068	IdentifierDeclType	int		646967	0					
ANR	647069	Identifier	ptr_size		646967	1					
ANR	647070	AssignmentExpression	ptr_size = core -> anal -> bits / 8		646967	2		=			
ANR	647071	Identifier	ptr_size		646967	0					
ANR	647072	MultiplicativeExpression	core -> anal -> bits / 8		646967	1		/			
ANR	647073	PtrMemberAccess	core -> anal -> bits		646967	0					
ANR	647074	PtrMemberAccess	core -> anal		646967	0					
ANR	647075	Identifier	core		646967	0					
ANR	647076	Identifier	anal		646967	1					
ANR	647077	Identifier	bits		646967	1					
ANR	647078	PrimaryExpression	8		646967	1					
ANR	647079	IdentifierDeclStatement	ut64 offset = gopclntab + 2 * ptr_size ;	521:1:12647:12685	646967	16	True				
ANR	647080	IdentifierDecl	offset = gopclntab + 2 * ptr_size		646967	0					
ANR	647081	IdentifierDeclType	ut64		646967	0					
ANR	647082	Identifier	offset		646967	1					
ANR	647083	AssignmentExpression	offset = gopclntab + 2 * ptr_size		646967	2		=			
ANR	647084	Identifier	offset		646967	0					
ANR	647085	AdditiveExpression	gopclntab + 2 * ptr_size		646967	1		+			
ANR	647086	Identifier	gopclntab		646967	0					
ANR	647087	MultiplicativeExpression	2 * ptr_size		646967	1		*			
ANR	647088	PrimaryExpression	2		646967	0					
ANR	647089	Identifier	ptr_size		646967	1					
ANR	647090	IdentifierDeclStatement	ut64 size_offset = gopclntab + 3 * ptr_size ;	522:1:12688:12732	646967	17	True				
ANR	647091	IdentifierDecl	size_offset = gopclntab + 3 * ptr_size		646967	0					
ANR	647092	IdentifierDeclType	ut64		646967	0					
ANR	647093	Identifier	size_offset		646967	1					
ANR	647094	AssignmentExpression	size_offset = gopclntab + 3 * ptr_size		646967	2		=			
ANR	647095	Identifier	size_offset		646967	0					
ANR	647096	AdditiveExpression	gopclntab + 3 * ptr_size		646967	1		+			
ANR	647097	Identifier	gopclntab		646967	0					
ANR	647098	MultiplicativeExpression	3 * ptr_size		646967	1		*			
ANR	647099	PrimaryExpression	3		646967	0					
ANR	647100	Identifier	ptr_size		646967	1					
ANR	647101	IdentifierDeclStatement	ut8 temp_size [ 4 ] = { 0 } ;	523:1:12735:12757	646967	18	True				
ANR	647102	IdentifierDecl	temp_size [ 4 ] = { 0 }		646967	0					
ANR	647103	IdentifierDeclType	ut8 [ 4 ]		646967	0					
ANR	647104	Identifier	temp_size		646967	1					
ANR	647105	PrimaryExpression	4		646967	2					
ANR	647106	AssignmentExpression	temp_size [ 4 ] = { 0 }		646967	3		=			
ANR	647107	Identifier	temp_size		646967	0					
ANR	647108	InitializerList	0		646967	1					
ANR	647109	PrimaryExpression	0		646967	0					
ANR	647110	IfStatement	"if ( ! r_io_nread_at ( core -> io , size_offset , temp_size , 4 ) )"		646967	19					
ANR	647111	Condition	"! r_io_nread_at ( core -> io , size_offset , temp_size , 4 )"	524:5:12764:12815	646967	0	True				
ANR	647112	UnaryOperationExpression	"! r_io_nread_at ( core -> io , size_offset , temp_size , 4 )"		646967	0					
ANR	647113	UnaryOperator	!		646967	0					
ANR	647114	CallExpression	"r_io_nread_at ( core -> io , size_offset , temp_size , 4 )"		646967	1					
ANR	647115	Callee	r_io_nread_at		646967	0					
ANR	647116	Identifier	r_io_nread_at		646967	0					
ANR	647117	ArgumentList	core -> io		646967	1					
ANR	647118	Argument	core -> io		646967	0					
ANR	647119	PtrMemberAccess	core -> io		646967	0					
ANR	647120	Identifier	core		646967	0					
ANR	647121	Identifier	io		646967	1					
ANR	647122	Argument	size_offset		646967	1					
ANR	647123	Identifier	size_offset		646967	0					
ANR	647124	Argument	temp_size		646967	2					
ANR	647125	Identifier	temp_size		646967	0					
ANR	647126	Argument	4		646967	3					
ANR	647127	PrimaryExpression	4		646967	0					
ANR	647128	CompoundStatement		22:59:653:653	646967	1					
ANR	647129	ReturnStatement	return ;	525:2:12822:12828	646967	0	True				
ANR	647130	IdentifierDeclStatement	ut32 size = r_read_le32 ( temp_size ) ;	527:1:12834:12869	646967	20	True				
ANR	647131	IdentifierDecl	size = r_read_le32 ( temp_size )		646967	0					
ANR	647132	IdentifierDeclType	ut32		646967	0					
ANR	647133	Identifier	size		646967	1					
ANR	647134	AssignmentExpression	size = r_read_le32 ( temp_size )		646967	2		=			
ANR	647135	Identifier	size		646967	0					
ANR	647136	CallExpression	r_read_le32 ( temp_size )		646967	1					
ANR	647137	Callee	r_read_le32		646967	0					
ANR	647138	Identifier	r_read_le32		646967	0					
ANR	647139	ArgumentList	temp_size		646967	1					
ANR	647140	Argument	temp_size		646967	0					
ANR	647141	Identifier	temp_size		646967	0					
ANR	647142	IdentifierDeclStatement	int num_syms = 0 ;	528:1:12872:12888	646967	21	True				
ANR	647143	IdentifierDecl	num_syms = 0		646967	0					
ANR	647144	IdentifierDeclType	int		646967	0					
ANR	647145	Identifier	num_syms		646967	1					
ANR	647146	AssignmentExpression	num_syms = 0		646967	2		=			
ANR	647147	Identifier	num_syms		646967	0					
ANR	647148	PrimaryExpression	0		646967	1					
ANR	647149	ExpressionStatement	"r_flag_space_push ( core -> flags , R_FLAGS_FS_SYMBOLS )"	530:1:12940:12991	646967	22	True				
ANR	647150	CallExpression	"r_flag_space_push ( core -> flags , R_FLAGS_FS_SYMBOLS )"		646967	0					
ANR	647151	Callee	r_flag_space_push		646967	0					
ANR	647152	Identifier	r_flag_space_push		646967	0					
ANR	647153	ArgumentList	core -> flags		646967	1					
ANR	647154	Argument	core -> flags		646967	0					
ANR	647155	PtrMemberAccess	core -> flags		646967	0					
ANR	647156	Identifier	core		646967	0					
ANR	647157	Identifier	flags		646967	1					
ANR	647158	Argument	R_FLAGS_FS_SYMBOLS		646967	1					
ANR	647159	Identifier	R_FLAGS_FS_SYMBOLS		646967	0					
ANR	647160	WhileStatement	while ( offset < gopclntab + size )		646967	23					
ANR	647161	Condition	offset < gopclntab + size	531:8:13001:13025	646967	0	True				
ANR	647162	RelationalExpression	offset < gopclntab + size		646967	0		<			
ANR	647163	Identifier	offset		646967	0					
ANR	647164	AdditiveExpression	gopclntab + size		646967	1		+			
ANR	647165	Identifier	gopclntab		646967	0					
ANR	647166	Identifier	size		646967	1					
ANR	647167	CompoundStatement		44:2:1384:1407	646967	1					
ANR	647168	IdentifierDeclStatement	ut8 temp_delta [ 4 ] = { 0 } ;	532:2:13032:13055	646967	0	True				
ANR	647169	IdentifierDecl	temp_delta [ 4 ] = { 0 }		646967	0					
ANR	647170	IdentifierDeclType	ut8 [ 4 ]		646967	0					
ANR	647171	Identifier	temp_delta		646967	1					
ANR	647172	PrimaryExpression	4		646967	2					
ANR	647173	AssignmentExpression	temp_delta [ 4 ] = { 0 }		646967	3		=			
ANR	647174	Identifier	temp_delta		646967	0					
ANR	647175	InitializerList	0		646967	1					
ANR	647176	PrimaryExpression	0		646967	0					
ANR	647177	IdentifierDeclStatement	ut8 temp_func_addr [ 4 ] = { 0 } ;	533:2:13059:13086	646967	1	True				
ANR	647178	IdentifierDecl	temp_func_addr [ 4 ] = { 0 }		646967	0					
ANR	647179	IdentifierDeclType	ut8 [ 4 ]		646967	0					
ANR	647180	Identifier	temp_func_addr		646967	1					
ANR	647181	PrimaryExpression	4		646967	2					
ANR	647182	AssignmentExpression	temp_func_addr [ 4 ] = { 0 }		646967	3		=			
ANR	647183	Identifier	temp_func_addr		646967	0					
ANR	647184	InitializerList	0		646967	1					
ANR	647185	PrimaryExpression	0		646967	0					
ANR	647186	IdentifierDeclStatement	ut8 temp_func_name [ 4 ] = { 0 } ;	534:2:13090:13117	646967	2	True				
ANR	647187	IdentifierDecl	temp_func_name [ 4 ] = { 0 }		646967	0					
ANR	647188	IdentifierDeclType	ut8 [ 4 ]		646967	0					
ANR	647189	Identifier	temp_func_name		646967	1					
ANR	647190	PrimaryExpression	4		646967	2					
ANR	647191	AssignmentExpression	temp_func_name [ 4 ] = { 0 }		646967	3		=			
ANR	647192	Identifier	temp_func_name		646967	0					
ANR	647193	InitializerList	0		646967	1					
ANR	647194	PrimaryExpression	0		646967	0					
ANR	647195	IfStatement	"if ( ! r_io_nread_at ( core -> io , offset + ptr_size , temp_delta , 4 ) )"		646967	3					
ANR	647196	Condition	"! r_io_nread_at ( core -> io , offset + ptr_size , temp_delta , 4 )"	535:6:13125:13183	646967	0	True				
ANR	647197	UnaryOperationExpression	"! r_io_nread_at ( core -> io , offset + ptr_size , temp_delta , 4 )"		646967	0					
ANR	647198	UnaryOperator	!		646967	0					
ANR	647199	CallExpression	"r_io_nread_at ( core -> io , offset + ptr_size , temp_delta , 4 )"		646967	1					
ANR	647200	Callee	r_io_nread_at		646967	0					
ANR	647201	Identifier	r_io_nread_at		646967	0					
ANR	647202	ArgumentList	core -> io		646967	1					
ANR	647203	Argument	core -> io		646967	0					
ANR	647204	PtrMemberAccess	core -> io		646967	0					
ANR	647205	Identifier	core		646967	0					
ANR	647206	Identifier	io		646967	1					
ANR	647207	Argument	offset + ptr_size		646967	1					
ANR	647208	AdditiveExpression	offset + ptr_size		646967	0		+			
ANR	647209	Identifier	offset		646967	0					
ANR	647210	Identifier	ptr_size		646967	1					
ANR	647211	Argument	temp_delta		646967	2					
ANR	647212	Identifier	temp_delta		646967	0					
ANR	647213	Argument	4		646967	3					
ANR	647214	PrimaryExpression	4		646967	0					
ANR	647215	CompoundStatement		33:67:1021:1021	646967	1					
ANR	647216	BreakStatement	break ;	536:3:13191:13196	646967	0	True				
ANR	647217	IdentifierDeclStatement	ut32 delta = r_read_le32 ( temp_delta ) ;	538:2:13204:13241	646967	4	True				
ANR	647218	IdentifierDecl	delta = r_read_le32 ( temp_delta )		646967	0					
ANR	647219	IdentifierDeclType	ut32		646967	0					
ANR	647220	Identifier	delta		646967	1					
ANR	647221	AssignmentExpression	delta = r_read_le32 ( temp_delta )		646967	2		=			
ANR	647222	Identifier	delta		646967	0					
ANR	647223	CallExpression	r_read_le32 ( temp_delta )		646967	1					
ANR	647224	Callee	r_read_le32		646967	0					
ANR	647225	Identifier	r_read_le32		646967	0					
ANR	647226	ArgumentList	temp_delta		646967	1					
ANR	647227	Argument	temp_delta		646967	0					
ANR	647228	Identifier	temp_delta		646967	0					
ANR	647229	IdentifierDeclStatement	ut64 func_offset = gopclntab + delta ;	539:2:13245:13281	646967	5	True				
ANR	647230	IdentifierDecl	func_offset = gopclntab + delta		646967	0					
ANR	647231	IdentifierDeclType	ut64		646967	0					
ANR	647232	Identifier	func_offset		646967	1					
ANR	647233	AssignmentExpression	func_offset = gopclntab + delta		646967	2		=			
ANR	647234	Identifier	func_offset		646967	0					
ANR	647235	AdditiveExpression	gopclntab + delta		646967	1		+			
ANR	647236	Identifier	gopclntab		646967	0					
ANR	647237	Identifier	delta		646967	1					
ANR	647238	IfStatement	"if ( ! r_io_nread_at ( core -> io , func_offset , temp_func_addr , 4 ) || ! r_io_nread_at ( core -> io , func_offset + ptr_size , temp_func_name , 4 ) )"		646967	6					
ANR	647239	Condition	"! r_io_nread_at ( core -> io , func_offset , temp_func_addr , 4 ) || ! r_io_nread_at ( core -> io , func_offset + ptr_size , temp_func_name , 4 )"	540:6:13289:13423	646967	0	True				
ANR	647240	OrExpression	"! r_io_nread_at ( core -> io , func_offset , temp_func_addr , 4 ) || ! r_io_nread_at ( core -> io , func_offset + ptr_size , temp_func_name , 4 )"		646967	0		||			
ANR	647241	UnaryOperationExpression	"! r_io_nread_at ( core -> io , func_offset , temp_func_addr , 4 )"		646967	0					
ANR	647242	UnaryOperator	!		646967	0					
ANR	647243	CallExpression	"r_io_nread_at ( core -> io , func_offset , temp_func_addr , 4 )"		646967	1					
ANR	647244	Callee	r_io_nread_at		646967	0					
ANR	647245	Identifier	r_io_nread_at		646967	0					
ANR	647246	ArgumentList	core -> io		646967	1					
ANR	647247	Argument	core -> io		646967	0					
ANR	647248	PtrMemberAccess	core -> io		646967	0					
ANR	647249	Identifier	core		646967	0					
ANR	647250	Identifier	io		646967	1					
ANR	647251	Argument	func_offset		646967	1					
ANR	647252	Identifier	func_offset		646967	0					
ANR	647253	Argument	temp_func_addr		646967	2					
ANR	647254	Identifier	temp_func_addr		646967	0					
ANR	647255	Argument	4		646967	3					
ANR	647256	PrimaryExpression	4		646967	0					
ANR	647257	UnaryOperationExpression	"! r_io_nread_at ( core -> io , func_offset + ptr_size , temp_func_name , 4 )"		646967	1					
ANR	647258	UnaryOperator	!		646967	0					
ANR	647259	CallExpression	"r_io_nread_at ( core -> io , func_offset + ptr_size , temp_func_name , 4 )"		646967	1					
ANR	647260	Callee	r_io_nread_at		646967	0					
ANR	647261	Identifier	r_io_nread_at		646967	0					
ANR	647262	ArgumentList	core -> io		646967	1					
ANR	647263	Argument	core -> io		646967	0					
ANR	647264	PtrMemberAccess	core -> io		646967	0					
ANR	647265	Identifier	core		646967	0					
ANR	647266	Identifier	io		646967	1					
ANR	647267	Argument	func_offset + ptr_size		646967	1					
ANR	647268	AdditiveExpression	func_offset + ptr_size		646967	0		+			
ANR	647269	Identifier	func_offset		646967	0					
ANR	647270	Identifier	ptr_size		646967	1					
ANR	647271	Argument	temp_func_name		646967	2					
ANR	647272	Identifier	temp_func_name		646967	0					
ANR	647273	Argument	4		646967	3					
ANR	647274	PrimaryExpression	4		646967	0					
ANR	647275	CompoundStatement		39:76:1261:1261	646967	1					
ANR	647276	BreakStatement	break ;	542:3:13431:13436	646967	0	True				
ANR	647277	IdentifierDeclStatement	ut32 func_addr = r_read_le32 ( temp_func_addr ) ;	544:2:13444:13489	646967	7	True				
ANR	647278	IdentifierDecl	func_addr = r_read_le32 ( temp_func_addr )		646967	0					
ANR	647279	IdentifierDeclType	ut32		646967	0					
ANR	647280	Identifier	func_addr		646967	1					
ANR	647281	AssignmentExpression	func_addr = r_read_le32 ( temp_func_addr )		646967	2		=			
ANR	647282	Identifier	func_addr		646967	0					
ANR	647283	CallExpression	r_read_le32 ( temp_func_addr )		646967	1					
ANR	647284	Callee	r_read_le32		646967	0					
ANR	647285	Identifier	r_read_le32		646967	0					
ANR	647286	ArgumentList	temp_func_addr		646967	1					
ANR	647287	Argument	temp_func_addr		646967	0					
ANR	647288	Identifier	temp_func_addr		646967	0					
ANR	647289	IdentifierDeclStatement	ut32 func_name_offset = r_read_le32 ( temp_func_name ) ;	545:2:13493:13545	646967	8	True				
ANR	647290	IdentifierDecl	func_name_offset = r_read_le32 ( temp_func_name )		646967	0					
ANR	647291	IdentifierDeclType	ut32		646967	0					
ANR	647292	Identifier	func_name_offset		646967	1					
ANR	647293	AssignmentExpression	func_name_offset = r_read_le32 ( temp_func_name )		646967	2		=			
ANR	647294	Identifier	func_name_offset		646967	0					
ANR	647295	CallExpression	r_read_le32 ( temp_func_name )		646967	1					
ANR	647296	Callee	r_read_le32		646967	0					
ANR	647297	Identifier	r_read_le32		646967	0					
ANR	647298	ArgumentList	temp_func_name		646967	1					
ANR	647299	Argument	temp_func_name		646967	0					
ANR	647300	Identifier	temp_func_name		646967	0					
ANR	647301	IdentifierDeclStatement	ut8 func_name [ 64 ] = { 0 } ;	546:2:13549:13572	646967	9	True				
ANR	647302	IdentifierDecl	func_name [ 64 ] = { 0 }		646967	0					
ANR	647303	IdentifierDeclType	ut8 [ 64 ]		646967	0					
ANR	647304	Identifier	func_name		646967	1					
ANR	647305	PrimaryExpression	64		646967	2					
ANR	647306	AssignmentExpression	func_name [ 64 ] = { 0 }		646967	3		=			
ANR	647307	Identifier	func_name		646967	0					
ANR	647308	InitializerList	0		646967	1					
ANR	647309	PrimaryExpression	0		646967	0					
ANR	647310	ExpressionStatement	"r_io_read_at ( core -> io , gopclntab + func_name_offset , func_name , 63 )"	547:2:13576:13644	646967	10	True				
ANR	647311	CallExpression	"r_io_read_at ( core -> io , gopclntab + func_name_offset , func_name , 63 )"		646967	0					
ANR	647312	Callee	r_io_read_at		646967	0					
ANR	647313	Identifier	r_io_read_at		646967	0					
ANR	647314	ArgumentList	core -> io		646967	1					
ANR	647315	Argument	core -> io		646967	0					
ANR	647316	PtrMemberAccess	core -> io		646967	0					
ANR	647317	Identifier	core		646967	0					
ANR	647318	Identifier	io		646967	1					
ANR	647319	Argument	gopclntab + func_name_offset		646967	1					
ANR	647320	AdditiveExpression	gopclntab + func_name_offset		646967	0		+			
ANR	647321	Identifier	gopclntab		646967	0					
ANR	647322	Identifier	func_name_offset		646967	1					
ANR	647323	Argument	func_name		646967	2					
ANR	647324	Identifier	func_name		646967	0					
ANR	647325	Argument	63		646967	3					
ANR	647326	PrimaryExpression	63		646967	0					
ANR	647327	IfStatement	if ( func_name [ 0 ] == 0xff )		646967	11					
ANR	647328	Condition	func_name [ 0 ] == 0xff	548:6:13652:13671	646967	0	True				
ANR	647329	EqualityExpression	func_name [ 0 ] == 0xff		646967	0		==			
ANR	647330	ArrayIndexing	func_name [ 0 ]		646967	0					
ANR	647331	Identifier	func_name		646967	0					
ANR	647332	PrimaryExpression	0		646967	1					
ANR	647333	PrimaryExpression	0xff		646967	1					
ANR	647334	CompoundStatement		46:28:1509:1509	646967	1					
ANR	647335	BreakStatement	break ;	549:3:13679:13684	646967	0	True				
ANR	647336	ExpressionStatement	"r_name_filter ( ( char * ) func_name , 0 )"	551:2:13692:13728	646967	12	True				
ANR	647337	CallExpression	"r_name_filter ( ( char * ) func_name , 0 )"		646967	0					
ANR	647338	Callee	r_name_filter		646967	0					
ANR	647339	Identifier	r_name_filter		646967	0					
ANR	647340	ArgumentList	( char * ) func_name		646967	1					
ANR	647341	Argument	( char * ) func_name		646967	0					
ANR	647342	CastExpression	( char * ) func_name		646967	0					
ANR	647343	CastTarget	char *		646967	0					
ANR	647344	Identifier	func_name		646967	1					
ANR	647345	Argument	0		646967	1					
ANR	647346	PrimaryExpression	0		646967	0					
ANR	647347	ExpressionStatement	"r_flag_set ( core -> flags , sdb_fmt ( ""sym.go.%s"" , func_name ) , func_addr , 1 )"	553:2:13807:13879	646967	13	True				
ANR	647348	CallExpression	"r_flag_set ( core -> flags , sdb_fmt ( ""sym.go.%s"" , func_name ) , func_addr , 1 )"		646967	0					
ANR	647349	Callee	r_flag_set		646967	0					
ANR	647350	Identifier	r_flag_set		646967	0					
ANR	647351	ArgumentList	core -> flags		646967	1					
ANR	647352	Argument	core -> flags		646967	0					
ANR	647353	PtrMemberAccess	core -> flags		646967	0					
ANR	647354	Identifier	core		646967	0					
ANR	647355	Identifier	flags		646967	1					
ANR	647356	Argument	"sdb_fmt ( ""sym.go.%s"" , func_name )"		646967	1					
ANR	647357	CallExpression	"sdb_fmt ( ""sym.go.%s"" , func_name )"		646967	0					
ANR	647358	Callee	sdb_fmt		646967	0					
ANR	647359	Identifier	sdb_fmt		646967	0					
ANR	647360	ArgumentList	"""sym.go.%s"""		646967	1					
ANR	647361	Argument	"""sym.go.%s"""		646967	0					
ANR	647362	PrimaryExpression	"""sym.go.%s"""		646967	0					
ANR	647363	Argument	func_name		646967	1					
ANR	647364	Identifier	func_name		646967	0					
ANR	647365	Argument	func_addr		646967	2					
ANR	647366	Identifier	func_addr		646967	0					
ANR	647367	Argument	1		646967	3					
ANR	647368	PrimaryExpression	1		646967	0					
ANR	647369	ExpressionStatement	offset += 2 * ptr_size	554:2:13883:13905	646967	14	True				
ANR	647370	AssignmentExpression	offset += 2 * ptr_size		646967	0		+=			
ANR	647371	Identifier	offset		646967	0					
ANR	647372	MultiplicativeExpression	2 * ptr_size		646967	1		*			
ANR	647373	PrimaryExpression	2		646967	0					
ANR	647374	Identifier	ptr_size		646967	1					
ANR	647375	ExpressionStatement	num_syms ++	555:2:13909:13919	646967	15	True				
ANR	647376	PostIncDecOperationExpression	num_syms ++		646967	0					
ANR	647377	Identifier	num_syms		646967	0					
ANR	647378	IncDec	++		646967	1					
ANR	647379	ExpressionStatement	r_flag_space_pop ( core -> flags )	557:1:13925:13955	646967	24	True				
ANR	647380	CallExpression	r_flag_space_pop ( core -> flags )		646967	0					
ANR	647381	Callee	r_flag_space_pop		646967	0					
ANR	647382	Identifier	r_flag_space_pop		646967	0					
ANR	647383	ArgumentList	core -> flags		646967	1					
ANR	647384	Argument	core -> flags		646967	0					
ANR	647385	PtrMemberAccess	core -> flags		646967	0					
ANR	647386	Identifier	core		646967	0					
ANR	647387	Identifier	flags		646967	1					
ANR	647388	IfStatement	if ( num_syms )		646967	25					
ANR	647389	Condition	num_syms	558:5:13962:13969	646967	0	True				
ANR	647390	Identifier	num_syms		646967	0					
ANR	647391	CompoundStatement		56:15:1807:1807	646967	1					
ANR	647392	ExpressionStatement	"oldstr = r_print_rowlog ( core -> print , sdb_fmt ( ""Found %d symbols and saved them at sym.go.*"" , num_syms ) )"	559:2:13976:14080	646967	0	True				
ANR	647393	AssignmentExpression	"oldstr = r_print_rowlog ( core -> print , sdb_fmt ( ""Found %d symbols and saved them at sym.go.*"" , num_syms ) )"		646967	0		=			
ANR	647394	Identifier	oldstr		646967	0					
ANR	647395	CallExpression	"r_print_rowlog ( core -> print , sdb_fmt ( ""Found %d symbols and saved them at sym.go.*"" , num_syms ) )"		646967	1					
ANR	647396	Callee	r_print_rowlog		646967	0					
ANR	647397	Identifier	r_print_rowlog		646967	0					
ANR	647398	ArgumentList	core -> print		646967	1					
ANR	647399	Argument	core -> print		646967	0					
ANR	647400	PtrMemberAccess	core -> print		646967	0					
ANR	647401	Identifier	core		646967	0					
ANR	647402	Identifier	print		646967	1					
ANR	647403	Argument	"sdb_fmt ( ""Found %d symbols and saved them at sym.go.*"" , num_syms )"		646967	1					
ANR	647404	CallExpression	"sdb_fmt ( ""Found %d symbols and saved them at sym.go.*"" , num_syms )"		646967	0					
ANR	647405	Callee	sdb_fmt		646967	0					
ANR	647406	Identifier	sdb_fmt		646967	0					
ANR	647407	ArgumentList	"""Found %d symbols and saved them at sym.go.*"""		646967	1					
ANR	647408	Argument	"""Found %d symbols and saved them at sym.go.*"""		646967	0					
ANR	647409	PrimaryExpression	"""Found %d symbols and saved them at sym.go.*"""		646967	0					
ANR	647410	Argument	num_syms		646967	1					
ANR	647411	Identifier	num_syms		646967	0					
ANR	647412	ExpressionStatement	"r_print_rowlog_done ( core -> print , oldstr )"	560:2:14084:14125	646967	1	True				
ANR	647413	CallExpression	"r_print_rowlog_done ( core -> print , oldstr )"		646967	0					
ANR	647414	Callee	r_print_rowlog_done		646967	0					
ANR	647415	Identifier	r_print_rowlog_done		646967	0					
ANR	647416	ArgumentList	core -> print		646967	1					
ANR	647417	Argument	core -> print		646967	0					
ANR	647418	PtrMemberAccess	core -> print		646967	0					
ANR	647419	Identifier	core		646967	0					
ANR	647420	Identifier	print		646967	1					
ANR	647421	Argument	oldstr		646967	1					
ANR	647422	Identifier	oldstr		646967	0					
ANR	647423	ElseStatement	else		646967	0					
ANR	647424	CompoundStatement		59:8:1970:1970	646967	0					
ANR	647425	ExpressionStatement	"oldstr = r_print_rowlog ( core -> print , ""Found no symbols."" )"	562:2:14139:14197	646967	0	True				
ANR	647426	AssignmentExpression	"oldstr = r_print_rowlog ( core -> print , ""Found no symbols."" )"		646967	0		=			
ANR	647427	Identifier	oldstr		646967	0					
ANR	647428	CallExpression	"r_print_rowlog ( core -> print , ""Found no symbols."" )"		646967	1					
ANR	647429	Callee	r_print_rowlog		646967	0					
ANR	647430	Identifier	r_print_rowlog		646967	0					
ANR	647431	ArgumentList	core -> print		646967	1					
ANR	647432	Argument	core -> print		646967	0					
ANR	647433	PtrMemberAccess	core -> print		646967	0					
ANR	647434	Identifier	core		646967	0					
ANR	647435	Identifier	print		646967	1					
ANR	647436	Argument	"""Found no symbols."""		646967	1					
ANR	647437	PrimaryExpression	"""Found no symbols."""		646967	0					
ANR	647438	ExpressionStatement	"r_print_rowlog_done ( core -> print , oldstr )"	563:2:14201:14242	646967	1	True				
ANR	647439	CallExpression	"r_print_rowlog_done ( core -> print , oldstr )"		646967	0					
ANR	647440	Callee	r_print_rowlog_done		646967	0					
ANR	647441	Identifier	r_print_rowlog_done		646967	0					
ANR	647442	ArgumentList	core -> print		646967	1					
ANR	647443	Argument	core -> print		646967	0					
ANR	647444	PtrMemberAccess	core -> print		646967	0					
ANR	647445	Identifier	core		646967	0					
ANR	647446	Identifier	print		646967	1					
ANR	647447	Argument	oldstr		646967	1					
ANR	647448	Identifier	oldstr		646967	0					
ANR	647449	ReturnType	R_API void		646967	1					
ANR	647450	Identifier	r_core_anal_autoname_all_golang_fcns		646967	2					
ANR	647451	ParameterList	RCore * core		646967	3					
ANR	647452	Parameter	RCore * core	503:48:12151:12161	646967	0	True				
ANR	647453	ParameterType	RCore *		646967	0					
ANR	647454	Identifier	core		646967	1					
ANR	647455	CFGEntryNode	ENTRY		646967		True				
ANR	647456	CFGExitNode	EXIT		646967		True				
ANR	647457	CFGErrorNode	ERROR		646967		True				
ANR	647458	Symbol	* core		646967						
ANR	647459	Symbol	delta		646967						
ANR	647460	Symbol	func_name_offset		646967						
ANR	647461	Symbol	section		646967						
ANR	647462	Symbol	r_io_nread_at		646967						
ANR	647463	Symbol	core -> anal		646967						
ANR	647464	Symbol	num_syms		646967						
ANR	647465	Symbol	core -> io		646967						
ANR	647466	Symbol	* func_name		646967						
ANR	647467	Symbol	core -> bin		646967						
ANR	647468	Symbol	sdb_fmt		646967						
ANR	647469	Symbol	* * core		646967						
ANR	647470	Symbol	func_name		646967						
ANR	647471	Symbol	* section		646967						
ANR	647472	Symbol	oldstr		646967						
ANR	647473	Symbol	gopclntab		646967						
ANR	647474	Symbol	core -> anal -> bits		646967						
ANR	647475	Symbol	NULL		646967						
ANR	647476	Symbol	temp_size		646967						
ANR	647477	Symbol	r_read_le32		646967						
ANR	647478	Symbol	temp_delta		646967						
ANR	647479	Symbol	offset		646967						
ANR	647480	Symbol	r_print_rowlog		646967						
ANR	647481	Symbol	size_offset		646967						
ANR	647482	Symbol	temp_func_name		646967						
ANR	647483	Symbol	iter		646967						
ANR	647484	Symbol	core -> flags		646967						
ANR	647485	Symbol	section -> vaddr		646967						
ANR	647486	Symbol	core		646967						
ANR	647487	Symbol	* core -> anal		646967						
ANR	647488	Symbol	R_FLAGS_FS_SYMBOLS		646967						
ANR	647489	Symbol	size		646967						
ANR	647490	Symbol	strstr		646967						
ANR	647491	Symbol	section -> name		646967						
ANR	647492	Symbol	temp_func_addr		646967						
ANR	647493	Symbol	section_list		646967						
ANR	647494	Symbol	core -> print		646967						
ANR	647495	Symbol	ptr_size		646967						
ANR	647496	Symbol	func_offset		646967						
ANR	647497	Symbol	r_bin_get_sections		646967						
ANR	647498	Symbol	func_addr		646967						
ANR	647499	Function	r_core_anal_fcn_autoname	569:0:14385:14612							
ANR	647500	FunctionDef	"r_core_anal_fcn_autoname (RCore * core , ut64 addr , int dump , int mode)"		647499	0					
ANR	647501	CompoundStatement		569:81:14466:14612	647499	0					
ANR	647502	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , addr , 0 ) ;"	570:1:14469:14529	647499	0	True				
ANR	647503	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , addr , 0 )"		647499	0					
ANR	647504	IdentifierDeclType	RAnalFunction *		647499	0					
ANR	647505	Identifier	fcn		647499	1					
ANR	647506	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , addr , 0 )"		647499	2		=			
ANR	647507	Identifier	fcn		647499	0					
ANR	647508	CallExpression	"r_anal_get_fcn_in ( core -> anal , addr , 0 )"		647499	1					
ANR	647509	Callee	r_anal_get_fcn_in		647499	0					
ANR	647510	Identifier	r_anal_get_fcn_in		647499	0					
ANR	647511	ArgumentList	core -> anal		647499	1					
ANR	647512	Argument	core -> anal		647499	0					
ANR	647513	PtrMemberAccess	core -> anal		647499	0					
ANR	647514	Identifier	core		647499	0					
ANR	647515	Identifier	anal		647499	1					
ANR	647516	Argument	addr		647499	1					
ANR	647517	Identifier	addr		647499	0					
ANR	647518	Argument	0		647499	2					
ANR	647519	PrimaryExpression	0		647499	0					
ANR	647520	IfStatement	if ( fcn )		647499	1					
ANR	647521	Condition	fcn	571:5:14536:14538	647499	0	True				
ANR	647522	Identifier	fcn		647499	0					
ANR	647523	CompoundStatement		3:10:74:74	647499	1					
ANR	647524	ReturnStatement	"return anal_fcn_autoname ( core , fcn , dump , mode ) ;"	572:2:14545:14593	647499	0	True				
ANR	647525	CallExpression	"anal_fcn_autoname ( core , fcn , dump , mode )"		647499	0					
ANR	647526	Callee	anal_fcn_autoname		647499	0					
ANR	647527	Identifier	anal_fcn_autoname		647499	0					
ANR	647528	ArgumentList	core		647499	1					
ANR	647529	Argument	core		647499	0					
ANR	647530	Identifier	core		647499	0					
ANR	647531	Argument	fcn		647499	1					
ANR	647532	Identifier	fcn		647499	0					
ANR	647533	Argument	dump		647499	2					
ANR	647534	Identifier	dump		647499	0					
ANR	647535	Argument	mode		647499	3					
ANR	647536	Identifier	mode		647499	0					
ANR	647537	ReturnStatement	return NULL ;	574:1:14599:14610	647499	2	True				
ANR	647538	Identifier	NULL		647499	0					
ANR	647539	ReturnType	R_API char *		647499	1					
ANR	647540	Identifier	r_core_anal_fcn_autoname		647499	2					
ANR	647541	ParameterList	"RCore * core , ut64 addr , int dump , int mode"		647499	3					
ANR	647542	Parameter	RCore * core	569:37:14422:14432	647499	0	True				
ANR	647543	ParameterType	RCore *		647499	0					
ANR	647544	Identifier	core		647499	1					
ANR	647545	Parameter	ut64 addr	569:50:14435:14443	647499	1	True				
ANR	647546	ParameterType	ut64		647499	0					
ANR	647547	Identifier	addr		647499	1					
ANR	647548	Parameter	int dump	569:61:14446:14453	647499	2	True				
ANR	647549	ParameterType	int		647499	0					
ANR	647550	Identifier	dump		647499	1					
ANR	647551	Parameter	int mode	569:71:14456:14463	647499	3	True				
ANR	647552	ParameterType	int		647499	0					
ANR	647553	Identifier	mode		647499	1					
ANR	647554	CFGEntryNode	ENTRY		647499		True				
ANR	647555	CFGExitNode	EXIT		647499		True				
ANR	647556	Symbol	mode		647499						
ANR	647557	Symbol	fcn		647499						
ANR	647558	Symbol	core		647499						
ANR	647559	Symbol	r_anal_get_fcn_in		647499						
ANR	647560	Symbol	NULL		647499						
ANR	647561	Symbol	* core		647499						
ANR	647562	Symbol	anal_fcn_autoname		647499						
ANR	647563	Symbol	dump		647499						
ANR	647564	Symbol	addr		647499						
ANR	647565	Symbol	core -> anal		647499						
ANR	647566	Function	next_append	577:0:14615:14838							
ANR	647567	FunctionDef	"next_append (ut64 * next , int * nexti , ut64 v)"		647566	0					
ANR	647568	CompoundStatement		577:57:14672:14838	647566	0					
ANR	647569	IdentifierDeclStatement	"ut64 * tmp_next = realloc ( next , sizeof ( ut64 ) * ( 1 + * nexti ) ) ;"	578:1:14675:14736	647566	0	True				
ANR	647570	IdentifierDecl	"* tmp_next = realloc ( next , sizeof ( ut64 ) * ( 1 + * nexti ) )"		647566	0					
ANR	647571	IdentifierDeclType	ut64 *		647566	0					
ANR	647572	Identifier	tmp_next		647566	1					
ANR	647573	AssignmentExpression	"* tmp_next = realloc ( next , sizeof ( ut64 ) * ( 1 + * nexti ) )"		647566	2		=			
ANR	647574	Identifier	tmp_next		647566	0					
ANR	647575	CallExpression	"realloc ( next , sizeof ( ut64 ) * ( 1 + * nexti ) )"		647566	1					
ANR	647576	Callee	realloc		647566	0					
ANR	647577	Identifier	realloc		647566	0					
ANR	647578	ArgumentList	next		647566	1					
ANR	647579	Argument	next		647566	0					
ANR	647580	Identifier	next		647566	0					
ANR	647581	Argument	sizeof ( ut64 ) * ( 1 + * nexti )		647566	1					
ANR	647582	MultiplicativeExpression	sizeof ( ut64 ) * ( 1 + * nexti )		647566	0		*			
ANR	647583	SizeofExpression	sizeof ( ut64 )		647566	0					
ANR	647584	Sizeof	sizeof		647566	0					
ANR	647585	SizeofOperand	ut64		647566	1					
ANR	647586	AdditiveExpression	1 + * nexti		647566	1		+			
ANR	647587	PrimaryExpression	1		647566	0					
ANR	647588	UnaryOperationExpression	* nexti		647566	1					
ANR	647589	UnaryOperator	*		647566	0					
ANR	647590	Identifier	nexti		647566	1					
ANR	647591	IfStatement	if ( ! tmp_next )		647566	1					
ANR	647592	Condition	! tmp_next	579:5:14743:14751	647566	0	True				
ANR	647593	UnaryOperationExpression	! tmp_next		647566	0					
ANR	647594	UnaryOperator	!		647566	0					
ANR	647595	Identifier	tmp_next		647566	1					
ANR	647596	CompoundStatement		3:16:81:81	647566	1					
ANR	647597	ReturnStatement	return NULL ;	580:2:14758:14769	647566	0	True				
ANR	647598	Identifier	NULL		647566	0					
ANR	647599	ExpressionStatement	next = tmp_next	582:1:14775:14790	647566	2	True				
ANR	647600	AssignmentExpression	next = tmp_next		647566	0		=			
ANR	647601	Identifier	next		647566	0					
ANR	647602	Identifier	tmp_next		647566	1					
ANR	647603	ExpressionStatement	next [ * nexti ] = v	583:1:14793:14809	647566	3	True				
ANR	647604	AssignmentExpression	next [ * nexti ] = v		647566	0		=			
ANR	647605	ArrayIndexing	next [ * nexti ]		647566	0					
ANR	647606	Identifier	next		647566	0					
ANR	647607	UnaryOperationExpression	* nexti		647566	1					
ANR	647608	UnaryOperator	*		647566	0					
ANR	647609	Identifier	nexti		647566	1					
ANR	647610	Identifier	v		647566	1					
ANR	647611	ExpressionStatement	( * nexti ) ++	584:1:14812:14822	647566	4	True				
ANR	647612	PostIncDecOperationExpression	( * nexti ) ++		647566	0					
ANR	647613	UnaryOperationExpression	* nexti		647566	0					
ANR	647614	UnaryOperator	*		647566	0					
ANR	647615	Identifier	nexti		647566	1					
ANR	647616	IncDec	++		647566	1					
ANR	647617	ReturnStatement	return next ;	585:1:14825:14836	647566	5	True				
ANR	647618	Identifier	next		647566	0					
ANR	647619	ReturnType	static ut64 *		647566	1					
ANR	647620	Identifier	next_append		647566	2					
ANR	647621	ParameterList	"ut64 * next , int * nexti , ut64 v"		647566	3					
ANR	647622	Parameter	ut64 * next	577:25:14640:14649	647566	0	True				
ANR	647623	ParameterType	ut64 *		647566	0					
ANR	647624	Identifier	next		647566	1					
ANR	647625	Parameter	int * nexti	577:37:14652:14661	647566	1	True				
ANR	647626	ParameterType	int *		647566	0					
ANR	647627	Identifier	nexti		647566	1					
ANR	647628	Parameter	ut64 v	577:49:14664:14669	647566	2	True				
ANR	647629	ParameterType	ut64		647566	0					
ANR	647630	Identifier	v		647566	1					
ANR	647631	CFGEntryNode	ENTRY		647566		True				
ANR	647632	CFGExitNode	EXIT		647566		True				
ANR	647633	Symbol	next		647566						
ANR	647634	Symbol	NULL		647566						
ANR	647635	Symbol	* * nexti		647566						
ANR	647636	Symbol	v		647566						
ANR	647637	Symbol	tmp_next		647566						
ANR	647638	Symbol	nexti		647566						
ANR	647639	Symbol	realloc		647566						
ANR	647640	Symbol	* next		647566						
ANR	647641	Symbol	* nexti		647566						
ANR	647642	Function	r_anal_set_stringrefs	588:0:14841:15231							
ANR	647643	FunctionDef	"r_anal_set_stringrefs (RCore * core , RAnalFunction * fcn)"		647642	0					
ANR	647644	CompoundStatement		588:67:14908:15231	647642	0					
ANR	647645	IdentifierDeclStatement	RListIter * iter ;	589:1:14911:14926	647642	0	True				
ANR	647646	IdentifierDecl	* iter		647642	0					
ANR	647647	IdentifierDeclType	RListIter *		647642	0					
ANR	647648	Identifier	iter		647642	1					
ANR	647649	IdentifierDeclStatement	RAnalRef * ref ;	590:1:14929:14942	647642	1	True				
ANR	647650	IdentifierDecl	* ref		647642	0					
ANR	647651	IdentifierDeclType	RAnalRef *		647642	0					
ANR	647652	Identifier	ref		647642	1					
ANR	647653	IdentifierDeclStatement	"RList * refs = r_anal_fcn_get_refs ( core -> anal , fcn ) ;"	591:1:14945:14996	647642	2	True				
ANR	647654	IdentifierDecl	"* refs = r_anal_fcn_get_refs ( core -> anal , fcn )"		647642	0					
ANR	647655	IdentifierDeclType	RList *		647642	0					
ANR	647656	Identifier	refs		647642	1					
ANR	647657	AssignmentExpression	"* refs = r_anal_fcn_get_refs ( core -> anal , fcn )"		647642	2		=			
ANR	647658	Identifier	refs		647642	0					
ANR	647659	CallExpression	"r_anal_fcn_get_refs ( core -> anal , fcn )"		647642	1					
ANR	647660	Callee	r_anal_fcn_get_refs		647642	0					
ANR	647661	Identifier	r_anal_fcn_get_refs		647642	0					
ANR	647662	ArgumentList	core -> anal		647642	1					
ANR	647663	Argument	core -> anal		647642	0					
ANR	647664	PtrMemberAccess	core -> anal		647642	0					
ANR	647665	Identifier	core		647642	0					
ANR	647666	Identifier	anal		647642	1					
ANR	647667	Argument	fcn		647642	1					
ANR	647668	Identifier	fcn		647642	0					
ANR	647669	Statement	r_list_foreach	592:1:14999:15012	647642	3	True				
ANR	647670	Statement	(	592:16:15014:15014	647642	4	True				
ANR	647671	Statement	refs	592:17:15015:15018	647642	5	True				
ANR	647672	Statement	","	592:21:15019:15019	647642	6	True				
ANR	647673	Statement	iter	592:23:15021:15024	647642	7	True				
ANR	647674	Statement	","	592:27:15025:15025	647642	8	True				
ANR	647675	Statement	ref	592:29:15027:15029	647642	9	True				
ANR	647676	Statement	)	592:32:15030:15030	647642	10	True				
ANR	647677	CompoundStatement		5:34:123:123	647642	11					
ANR	647678	IfStatement	"if ( ref -> type == R_ANAL_REF_TYPE_DATA && r_bin_is_string ( core -> bin , ref -> addr ) )"		647642	0					
ANR	647679	Condition	"ref -> type == R_ANAL_REF_TYPE_DATA && r_bin_is_string ( core -> bin , ref -> addr )"	593:6:15040:15120	647642	0	True				
ANR	647680	AndExpression	"ref -> type == R_ANAL_REF_TYPE_DATA && r_bin_is_string ( core -> bin , ref -> addr )"		647642	0		&&			
ANR	647681	EqualityExpression	ref -> type == R_ANAL_REF_TYPE_DATA		647642	0		==			
ANR	647682	PtrMemberAccess	ref -> type		647642	0					
ANR	647683	Identifier	ref		647642	0					
ANR	647684	Identifier	type		647642	1					
ANR	647685	Identifier	R_ANAL_REF_TYPE_DATA		647642	1					
ANR	647686	CallExpression	"r_bin_is_string ( core -> bin , ref -> addr )"		647642	1					
ANR	647687	Callee	r_bin_is_string		647642	0					
ANR	647688	Identifier	r_bin_is_string		647642	0					
ANR	647689	ArgumentList	core -> bin		647642	1					
ANR	647690	Argument	core -> bin		647642	0					
ANR	647691	PtrMemberAccess	core -> bin		647642	0					
ANR	647692	Identifier	core		647642	0					
ANR	647693	Identifier	bin		647642	1					
ANR	647694	Argument	ref -> addr		647642	1					
ANR	647695	PtrMemberAccess	ref -> addr		647642	0					
ANR	647696	Identifier	ref		647642	0					
ANR	647697	Identifier	addr		647642	1					
ANR	647698	CompoundStatement		7:46:214:214	647642	1					
ANR	647699	ExpressionStatement	"r_anal_xrefs_set ( core -> anal , ref -> at , ref -> addr , R_ANAL_REF_TYPE_STRING )"	595:3:15128:15201	647642	0	True				
ANR	647700	CallExpression	"r_anal_xrefs_set ( core -> anal , ref -> at , ref -> addr , R_ANAL_REF_TYPE_STRING )"		647642	0					
ANR	647701	Callee	r_anal_xrefs_set		647642	0					
ANR	647702	Identifier	r_anal_xrefs_set		647642	0					
ANR	647703	ArgumentList	core -> anal		647642	1					
ANR	647704	Argument	core -> anal		647642	0					
ANR	647705	PtrMemberAccess	core -> anal		647642	0					
ANR	647706	Identifier	core		647642	0					
ANR	647707	Identifier	anal		647642	1					
ANR	647708	Argument	ref -> at		647642	1					
ANR	647709	PtrMemberAccess	ref -> at		647642	0					
ANR	647710	Identifier	ref		647642	0					
ANR	647711	Identifier	at		647642	1					
ANR	647712	Argument	ref -> addr		647642	2					
ANR	647713	PtrMemberAccess	ref -> addr		647642	0					
ANR	647714	Identifier	ref		647642	0					
ANR	647715	Identifier	addr		647642	1					
ANR	647716	Argument	R_ANAL_REF_TYPE_STRING		647642	3					
ANR	647717	Identifier	R_ANAL_REF_TYPE_STRING		647642	0					
ANR	647718	ExpressionStatement	r_list_free ( refs )	598:1:15211:15229	647642	12	True				
ANR	647719	CallExpression	r_list_free ( refs )		647642	0					
ANR	647720	Callee	r_list_free		647642	0					
ANR	647721	Identifier	r_list_free		647642	0					
ANR	647722	ArgumentList	refs		647642	1					
ANR	647723	Argument	refs		647642	0					
ANR	647724	Identifier	refs		647642	0					
ANR	647725	ReturnType	static void		647642	1					
ANR	647726	Identifier	r_anal_set_stringrefs		647642	2					
ANR	647727	ParameterList	"RCore * core , RAnalFunction * fcn"		647642	3					
ANR	647728	Parameter	RCore * core	588:34:14875:14885	647642	0	True				
ANR	647729	ParameterType	RCore *		647642	0					
ANR	647730	Identifier	core		647642	1					
ANR	647731	Parameter	RAnalFunction * fcn	588:47:14888:14905	647642	1	True				
ANR	647732	ParameterType	RAnalFunction *		647642	0					
ANR	647733	Identifier	fcn		647642	1					
ANR	647734	CFGEntryNode	ENTRY		647642		True				
ANR	647735	CFGExitNode	EXIT		647642		True				
ANR	647736	Symbol	ref -> addr		647642						
ANR	647737	Symbol	ref -> type		647642						
ANR	647738	Symbol	* core		647642						
ANR	647739	Symbol	ref -> at		647642						
ANR	647740	Symbol	iter		647642						
ANR	647741	Symbol	R_ANAL_REF_TYPE_DATA		647642						
ANR	647742	Symbol	core -> anal		647642						
ANR	647743	Symbol	r_bin_is_string		647642						
ANR	647744	Symbol	r_anal_fcn_get_refs		647642						
ANR	647745	Symbol	fcn		647642						
ANR	647746	Symbol	core		647642						
ANR	647747	Symbol	ref		647642						
ANR	647748	Symbol	R_ANAL_REF_TYPE_STRING		647642						
ANR	647749	Symbol	refs		647642						
ANR	647750	Symbol	* ref		647642						
ANR	647751	Symbol	core -> bin		647642						
ANR	647752	Function	r_anal_try_get_fcn	601:0:15234:16734							
ANR	647753	FunctionDef	"r_anal_try_get_fcn (RCore * core , RAnalRef * ref , int fcndepth , int refdepth)"		647752	0					
ANR	647754	CompoundStatement		601:87:15321:16734	647752	0					
ANR	647755	IfStatement	if ( ! refdepth )		647752	0					
ANR	647756	Condition	! refdepth	602:5:15328:15336	647752	0	True				
ANR	647757	UnaryOperationExpression	! refdepth		647752	0					
ANR	647758	UnaryOperator	!		647752	0					
ANR	647759	Identifier	refdepth		647752	1					
ANR	647760	CompoundStatement		2:16:17:17	647752	1					
ANR	647761	ReturnStatement	return false ;	603:2:15343:15355	647752	0	True				
ANR	647762	Identifier	false		647752	0					
ANR	647763	IdentifierDeclStatement	"RIOMap * map = r_io_map_get ( core -> io , ref -> addr ) ;"	605:1:15361:15409	647752	1	True				
ANR	647764	IdentifierDecl	"* map = r_io_map_get ( core -> io , ref -> addr )"		647752	0					
ANR	647765	IdentifierDeclType	RIOMap *		647752	0					
ANR	647766	Identifier	map		647752	1					
ANR	647767	AssignmentExpression	"* map = r_io_map_get ( core -> io , ref -> addr )"		647752	2		=			
ANR	647768	Identifier	map		647752	0					
ANR	647769	CallExpression	"r_io_map_get ( core -> io , ref -> addr )"		647752	1					
ANR	647770	Callee	r_io_map_get		647752	0					
ANR	647771	Identifier	r_io_map_get		647752	0					
ANR	647772	ArgumentList	core -> io		647752	1					
ANR	647773	Argument	core -> io		647752	0					
ANR	647774	PtrMemberAccess	core -> io		647752	0					
ANR	647775	Identifier	core		647752	0					
ANR	647776	Identifier	io		647752	1					
ANR	647777	Argument	ref -> addr		647752	1					
ANR	647778	PtrMemberAccess	ref -> addr		647752	0					
ANR	647779	Identifier	ref		647752	0					
ANR	647780	Identifier	addr		647752	1					
ANR	647781	IfStatement	if ( ! map )		647752	2					
ANR	647782	Condition	! map	606:5:15416:15419	647752	0	True				
ANR	647783	UnaryOperationExpression	! map		647752	0					
ANR	647784	UnaryOperator	!		647752	0					
ANR	647785	Identifier	map		647752	1					
ANR	647786	CompoundStatement		6:11:100:100	647752	1					
ANR	647787	ReturnStatement	return false ;	607:2:15426:15438	647752	0	True				
ANR	647788	Identifier	false		647752	0					
ANR	647789	IfStatement	if ( map -> perm & R_PERM_X )		647752	3					
ANR	647790	Condition	map -> perm & R_PERM_X	610:5:15449:15468	647752	0	True				
ANR	647791	BitAndExpression	map -> perm & R_PERM_X		647752	0		&			
ANR	647792	PtrMemberAccess	map -> perm		647752	0					
ANR	647793	Identifier	map		647752	0					
ANR	647794	Identifier	perm		647752	1					
ANR	647795	Identifier	R_PERM_X		647752	1					
ANR	647796	CompoundStatement		13:2:225:360	647752	1					
ANR	647797	IdentifierDeclStatement	ut8 buf [ 64 ] ;	611:2:15475:15486	647752	0	True				
ANR	647798	IdentifierDecl	buf [ 64 ]		647752	0					
ANR	647799	IdentifierDeclType	ut8 [ 64 ]		647752	0					
ANR	647800	Identifier	buf		647752	1					
ANR	647801	PrimaryExpression	64		647752	2					
ANR	647802	ExpressionStatement	"r_io_read_at ( core -> io , ref -> addr , buf , sizeof ( buf ) )"	612:2:15490:15543	647752	1	True				
ANR	647803	CallExpression	"r_io_read_at ( core -> io , ref -> addr , buf , sizeof ( buf ) )"		647752	0					
ANR	647804	Callee	r_io_read_at		647752	0					
ANR	647805	Identifier	r_io_read_at		647752	0					
ANR	647806	ArgumentList	core -> io		647752	1					
ANR	647807	Argument	core -> io		647752	0					
ANR	647808	PtrMemberAccess	core -> io		647752	0					
ANR	647809	Identifier	core		647752	0					
ANR	647810	Identifier	io		647752	1					
ANR	647811	Argument	ref -> addr		647752	1					
ANR	647812	PtrMemberAccess	ref -> addr		647752	0					
ANR	647813	Identifier	ref		647752	0					
ANR	647814	Identifier	addr		647752	1					
ANR	647815	Argument	buf		647752	2					
ANR	647816	Identifier	buf		647752	0					
ANR	647817	Argument	sizeof ( buf )		647752	3					
ANR	647818	SizeofExpression	sizeof ( buf )		647752	0					
ANR	647819	Sizeof	sizeof		647752	0					
ANR	647820	SizeofOperand	buf		647752	1					
ANR	647821	IdentifierDeclStatement	"bool looksLikeAFunction = r_anal_check_fcn ( core -> anal , buf , sizeof ( buf ) , ref -> addr , map -> itv . addr , map -> itv . addr + map -> itv . size ) ;"	613:2:15547:15682	647752	2	True				
ANR	647822	IdentifierDecl	"looksLikeAFunction = r_anal_check_fcn ( core -> anal , buf , sizeof ( buf ) , ref -> addr , map -> itv . addr , map -> itv . addr + map -> itv . size )"		647752	0					
ANR	647823	IdentifierDeclType	bool		647752	0					
ANR	647824	Identifier	looksLikeAFunction		647752	1					
ANR	647825	AssignmentExpression	"looksLikeAFunction = r_anal_check_fcn ( core -> anal , buf , sizeof ( buf ) , ref -> addr , map -> itv . addr , map -> itv . addr + map -> itv . size )"		647752	2		=			
ANR	647826	Identifier	looksLikeAFunction		647752	0					
ANR	647827	CallExpression	"r_anal_check_fcn ( core -> anal , buf , sizeof ( buf ) , ref -> addr , map -> itv . addr , map -> itv . addr + map -> itv . size )"		647752	1					
ANR	647828	Callee	r_anal_check_fcn		647752	0					
ANR	647829	Identifier	r_anal_check_fcn		647752	0					
ANR	647830	ArgumentList	core -> anal		647752	1					
ANR	647831	Argument	core -> anal		647752	0					
ANR	647832	PtrMemberAccess	core -> anal		647752	0					
ANR	647833	Identifier	core		647752	0					
ANR	647834	Identifier	anal		647752	1					
ANR	647835	Argument	buf		647752	1					
ANR	647836	Identifier	buf		647752	0					
ANR	647837	Argument	sizeof ( buf )		647752	2					
ANR	647838	SizeofExpression	sizeof ( buf )		647752	0					
ANR	647839	Sizeof	sizeof		647752	0					
ANR	647840	SizeofOperand	buf		647752	1					
ANR	647841	Argument	ref -> addr		647752	3					
ANR	647842	PtrMemberAccess	ref -> addr		647752	0					
ANR	647843	Identifier	ref		647752	0					
ANR	647844	Identifier	addr		647752	1					
ANR	647845	Argument	map -> itv . addr		647752	4					
ANR	647846	MemberAccess	map -> itv . addr		647752	0					
ANR	647847	PtrMemberAccess	map -> itv		647752	0					
ANR	647848	Identifier	map		647752	0					
ANR	647849	Identifier	itv		647752	1					
ANR	647850	Identifier	addr		647752	1					
ANR	647851	Argument	map -> itv . addr + map -> itv . size		647752	5					
ANR	647852	AdditiveExpression	map -> itv . addr + map -> itv . size		647752	0		+			
ANR	647853	MemberAccess	map -> itv . addr		647752	0					
ANR	647854	PtrMemberAccess	map -> itv		647752	0					
ANR	647855	Identifier	map		647752	0					
ANR	647856	Identifier	itv		647752	1					
ANR	647857	Identifier	addr		647752	1					
ANR	647858	MemberAccess	map -> itv . size		647752	1					
ANR	647859	PtrMemberAccess	map -> itv		647752	0					
ANR	647860	Identifier	map		647752	0					
ANR	647861	Identifier	itv		647752	1					
ANR	647862	Identifier	size		647752	1					
ANR	647863	IfStatement	if ( looksLikeAFunction )		647752	3					
ANR	647864	Condition	looksLikeAFunction	615:6:15690:15707	647752	0	True				
ANR	647865	Identifier	looksLikeAFunction		647752	0					
ANR	647866	CompoundStatement		15:26:388:388	647752	1					
ANR	647867	IfStatement	if ( core -> anal -> limit )		647752	0					
ANR	647868	Condition	core -> anal -> limit	616:7:15719:15735	647752	0	True				
ANR	647869	PtrMemberAccess	core -> anal -> limit		647752	0					
ANR	647870	PtrMemberAccess	core -> anal		647752	0					
ANR	647871	Identifier	core		647752	0					
ANR	647872	Identifier	anal		647752	1					
ANR	647873	Identifier	limit		647752	1					
ANR	647874	CompoundStatement		16:26:416:416	647752	1					
ANR	647875	IfStatement	if ( ref -> addr < core -> anal -> limit -> from || ref -> addr > core -> anal -> limit -> to )		647752	0					
ANR	647876	Condition	ref -> addr < core -> anal -> limit -> from || ref -> addr > core -> anal -> limit -> to	617:8:15748:15825	647752	0	True				
ANR	647877	OrExpression	ref -> addr < core -> anal -> limit -> from || ref -> addr > core -> anal -> limit -> to		647752	0		||			
ANR	647878	RelationalExpression	ref -> addr < core -> anal -> limit -> from		647752	0		<			
ANR	647879	PtrMemberAccess	ref -> addr		647752	0					
ANR	647880	Identifier	ref		647752	0					
ANR	647881	Identifier	addr		647752	1					
ANR	647882	PtrMemberAccess	core -> anal -> limit -> from		647752	1					
ANR	647883	PtrMemberAccess	core -> anal -> limit		647752	0					
ANR	647884	PtrMemberAccess	core -> anal		647752	0					
ANR	647885	Identifier	core		647752	0					
ANR	647886	Identifier	anal		647752	1					
ANR	647887	Identifier	limit		647752	1					
ANR	647888	Identifier	from		647752	1					
ANR	647889	RelationalExpression	ref -> addr > core -> anal -> limit -> to		647752	1		>			
ANR	647890	PtrMemberAccess	ref -> addr		647752	0					
ANR	647891	Identifier	ref		647752	0					
ANR	647892	Identifier	addr		647752	1					
ANR	647893	PtrMemberAccess	core -> anal -> limit -> to		647752	1					
ANR	647894	PtrMemberAccess	core -> anal -> limit		647752	0					
ANR	647895	PtrMemberAccess	core -> anal		647752	0					
ANR	647896	Identifier	core		647752	0					
ANR	647897	Identifier	anal		647752	1					
ANR	647898	Identifier	limit		647752	1					
ANR	647899	Identifier	to		647752	1					
ANR	647900	CompoundStatement		18:41:506:506	647752	1					
ANR	647901	ReturnStatement	return 1 ;	619:5:15835:15843	647752	0	True				
ANR	647902	PrimaryExpression	1		647752	0					
ANR	647903	ExpressionStatement	"r_core_anal_fcn ( core , ref -> addr , ref -> at , ref -> type , fcndepth - 1 )"	622:3:15859:15926	647752	1	True				
ANR	647904	CallExpression	"r_core_anal_fcn ( core , ref -> addr , ref -> at , ref -> type , fcndepth - 1 )"		647752	0					
ANR	647905	Callee	r_core_anal_fcn		647752	0					
ANR	647906	Identifier	r_core_anal_fcn		647752	0					
ANR	647907	ArgumentList	core		647752	1					
ANR	647908	Argument	core		647752	0					
ANR	647909	Identifier	core		647752	0					
ANR	647910	Argument	ref -> addr		647752	1					
ANR	647911	PtrMemberAccess	ref -> addr		647752	0					
ANR	647912	Identifier	ref		647752	0					
ANR	647913	Identifier	addr		647752	1					
ANR	647914	Argument	ref -> at		647752	2					
ANR	647915	PtrMemberAccess	ref -> at		647752	0					
ANR	647916	Identifier	ref		647752	0					
ANR	647917	Identifier	at		647752	1					
ANR	647918	Argument	ref -> type		647752	3					
ANR	647919	PtrMemberAccess	ref -> type		647752	0					
ANR	647920	Identifier	ref		647752	0					
ANR	647921	Identifier	type		647752	1					
ANR	647922	Argument	fcndepth - 1		647752	4					
ANR	647923	AdditiveExpression	fcndepth - 1		647752	0		-			
ANR	647924	Identifier	fcndepth		647752	0					
ANR	647925	PrimaryExpression	1		647752	1					
ANR	647926	ElseStatement	else		647752	0					
ANR	647927	CompoundStatement		34:2:801:824	647752	0					
ANR	647928	IdentifierDeclStatement	ut64 offs = 0 ;	625:2:15944:15957	647752	0	True				
ANR	647929	IdentifierDecl	offs = 0		647752	0					
ANR	647930	IdentifierDeclType	ut64		647752	0					
ANR	647931	Identifier	offs		647752	1					
ANR	647932	AssignmentExpression	offs = 0		647752	2		=			
ANR	647933	Identifier	offs		647752	0					
ANR	647934	PrimaryExpression	0		647752	1					
ANR	647935	IdentifierDeclStatement	ut64 sz = core -> anal -> bits >> 3 ;	626:2:15961:15992	647752	1	True				
ANR	647936	IdentifierDecl	sz = core -> anal -> bits >> 3		647752	0					
ANR	647937	IdentifierDeclType	ut64		647752	0					
ANR	647938	Identifier	sz		647752	1					
ANR	647939	AssignmentExpression	sz = core -> anal -> bits >> 3		647752	2		=			
ANR	647940	Identifier	sz		647752	0					
ANR	647941	ShiftExpression	core -> anal -> bits >> 3		647752	1		>>			
ANR	647942	PtrMemberAccess	core -> anal -> bits		647752	0					
ANR	647943	PtrMemberAccess	core -> anal		647752	0					
ANR	647944	Identifier	core		647752	0					
ANR	647945	Identifier	anal		647752	1					
ANR	647946	Identifier	bits		647752	1					
ANR	647947	PrimaryExpression	3		647752	1					
ANR	647948	IdentifierDeclStatement	RAnalRef ref1 ;	627:2:15996:16009	647752	2	True				
ANR	647949	IdentifierDecl	ref1		647752	0					
ANR	647950	IdentifierDeclType	RAnalRef		647752	0					
ANR	647951	Identifier	ref1		647752	1					
ANR	647952	ExpressionStatement	ref1 . type = R_ANAL_REF_TYPE_DATA	628:2:16013:16045	647752	3	True				
ANR	647953	AssignmentExpression	ref1 . type = R_ANAL_REF_TYPE_DATA		647752	0		=			
ANR	647954	MemberAccess	ref1 . type		647752	0					
ANR	647955	Identifier	ref1		647752	0					
ANR	647956	Identifier	type		647752	1					
ANR	647957	Identifier	R_ANAL_REF_TYPE_DATA		647752	1					
ANR	647958	ExpressionStatement	ref1 . at = ref -> addr	629:2:16049:16068	647752	4	True				
ANR	647959	AssignmentExpression	ref1 . at = ref -> addr		647752	0		=			
ANR	647960	MemberAccess	ref1 . at		647752	0					
ANR	647961	Identifier	ref1		647752	0					
ANR	647962	Identifier	at		647752	1					
ANR	647963	PtrMemberAccess	ref -> addr		647752	1					
ANR	647964	Identifier	ref		647752	0					
ANR	647965	Identifier	addr		647752	1					
ANR	647966	ExpressionStatement	ref1 . addr = 0	630:2:16072:16085	647752	5	True				
ANR	647967	AssignmentExpression	ref1 . addr = 0		647752	0		=			
ANR	647968	MemberAccess	ref1 . addr		647752	0					
ANR	647969	Identifier	ref1		647752	0					
ANR	647970	Identifier	addr		647752	1					
ANR	647971	PrimaryExpression	0		647752	1					
ANR	647972	IdentifierDeclStatement	ut32 i32 ;	631:2:16089:16097	647752	6	True				
ANR	647973	IdentifierDecl	i32		647752	0					
ANR	647974	IdentifierDeclType	ut32		647752	0					
ANR	647975	Identifier	i32		647752	1					
ANR	647976	IdentifierDeclStatement	ut16 i16 ;	632:2:16101:16109	647752	7	True				
ANR	647977	IdentifierDecl	i16		647752	0					
ANR	647978	IdentifierDeclType	ut16		647752	0					
ANR	647979	Identifier	i16		647752	1					
ANR	647980	IdentifierDeclStatement	ut8 i8 ;	633:2:16113:16119	647752	8	True				
ANR	647981	IdentifierDecl	i8		647752	0					
ANR	647982	IdentifierDeclType	ut8		647752	0					
ANR	647983	Identifier	i8		647752	1					
ANR	647984	IdentifierDeclStatement	ut64 offe = offs + 1024 ;	634:2:16123:16146	647752	9	True				
ANR	647985	IdentifierDecl	offe = offs + 1024		647752	0					
ANR	647986	IdentifierDeclType	ut64		647752	0					
ANR	647987	Identifier	offe		647752	1					
ANR	647988	AssignmentExpression	offe = offs + 1024		647752	2		=			
ANR	647989	Identifier	offe		647752	0					
ANR	647990	AdditiveExpression	offs + 1024		647752	1		+			
ANR	647991	Identifier	offs		647752	0					
ANR	647992	PrimaryExpression	1024		647752	1					
ANR	647993	ForStatement	"for ( offs = 0 ; offs < offe ; offs += sz , ref1 . at += sz )"		647752	10					
ANR	647994	ForInit	offs = 0 ;	635:7:16155:16163	647752	0	True				
ANR	647995	AssignmentExpression	offs = 0		647752	0		=			
ANR	647996	Identifier	offs		647752	0					
ANR	647997	PrimaryExpression	0		647752	1					
ANR	647998	Condition	offs < offe	635:17:16165:16175	647752	1	True				
ANR	647999	RelationalExpression	offs < offe		647752	0		<			
ANR	648000	Identifier	offs		647752	0					
ANR	648001	Identifier	offe		647752	1					
ANR	648002	Expression	"offs += sz , ref1 . at += sz"	635:30:16178:16202	647752	2	True				
ANR	648003	AssignmentExpression	offs += sz		647752	0		+=			
ANR	648004	Identifier	offs		647752	0					
ANR	648005	Identifier	sz		647752	1					
ANR	648006	AssignmentExpression	ref1 . at += sz		647752	1		+=			
ANR	648007	MemberAccess	ref1 . at		647752	0					
ANR	648008	Identifier	ref1		647752	0					
ANR	648009	Identifier	at		647752	1					
ANR	648010	Identifier	sz		647752	1					
ANR	648011	CompoundStatement		38:3:977:1009	647752	3					
ANR	648012	IdentifierDeclStatement	ut8 bo [ 8 ] ;	636:3:16210:16219	647752	0	True				
ANR	648013	IdentifierDecl	bo [ 8 ]		647752	0					
ANR	648014	IdentifierDeclType	ut8 [ 8 ]		647752	0					
ANR	648015	Identifier	bo		647752	1					
ANR	648016	PrimaryExpression	8		647752	2					
ANR	648017	ExpressionStatement	"r_io_read_at ( core -> io , ref -> addr + offs , bo , R_MIN ( sizeof ( bo ) , sz ) )"	637:3:16224:16294	647752	1	True				
ANR	648018	CallExpression	"r_io_read_at ( core -> io , ref -> addr + offs , bo , R_MIN ( sizeof ( bo ) , sz ) )"		647752	0					
ANR	648019	Callee	r_io_read_at		647752	0					
ANR	648020	Identifier	r_io_read_at		647752	0					
ANR	648021	ArgumentList	core -> io		647752	1					
ANR	648022	Argument	core -> io		647752	0					
ANR	648023	PtrMemberAccess	core -> io		647752	0					
ANR	648024	Identifier	core		647752	0					
ANR	648025	Identifier	io		647752	1					
ANR	648026	Argument	ref -> addr + offs		647752	1					
ANR	648027	AdditiveExpression	ref -> addr + offs		647752	0		+			
ANR	648028	PtrMemberAccess	ref -> addr		647752	0					
ANR	648029	Identifier	ref		647752	0					
ANR	648030	Identifier	addr		647752	1					
ANR	648031	Identifier	offs		647752	1					
ANR	648032	Argument	bo		647752	2					
ANR	648033	Identifier	bo		647752	0					
ANR	648034	Argument	"R_MIN ( sizeof ( bo ) , sz )"		647752	3					
ANR	648035	CallExpression	"R_MIN ( sizeof ( bo ) , sz )"		647752	0					
ANR	648036	Callee	R_MIN		647752	0					
ANR	648037	Identifier	R_MIN		647752	0					
ANR	648038	ArgumentList	sizeof ( bo )		647752	1					
ANR	648039	Argument	sizeof ( bo )		647752	0					
ANR	648040	SizeofExpression	sizeof ( bo )		647752	0					
ANR	648041	Sizeof	sizeof		647752	0					
ANR	648042	SizeofOperand	bo		647752	1					
ANR	648043	Argument	sz		647752	1					
ANR	648044	Identifier	sz		647752	0					
ANR	648045	IdentifierDeclStatement	bool be = core -> anal -> big_endian ;	638:3:16299:16331	647752	2	True				
ANR	648046	IdentifierDecl	be = core -> anal -> big_endian		647752	0					
ANR	648047	IdentifierDeclType	bool		647752	0					
ANR	648048	Identifier	be		647752	1					
ANR	648049	AssignmentExpression	be = core -> anal -> big_endian		647752	2		=			
ANR	648050	Identifier	be		647752	0					
ANR	648051	PtrMemberAccess	core -> anal -> big_endian		647752	1					
ANR	648052	PtrMemberAccess	core -> anal		647752	0					
ANR	648053	Identifier	core		647752	0					
ANR	648054	Identifier	anal		647752	1					
ANR	648055	Identifier	big_endian		647752	1					
ANR	648056	SwitchStatement	switch ( sz )		647752	3					
ANR	648057	Condition	sz	639:11:16344:16345	647752	0	True				
ANR	648058	Identifier	sz		647752	0					
ANR	648059	CompoundStatement		39:15:1026:1026	647752	1					
ANR	648060	Label	case 1 :	640:3:16353:16359	647752	0	True				
ANR	648061	ExpressionStatement	i8 = r_read_ble8 ( bo )	641:4:16365:16386	647752	1	True				
ANR	648062	AssignmentExpression	i8 = r_read_ble8 ( bo )		647752	0		=			
ANR	648063	Identifier	i8		647752	0					
ANR	648064	CallExpression	r_read_ble8 ( bo )		647752	1					
ANR	648065	Callee	r_read_ble8		647752	0					
ANR	648066	Identifier	r_read_ble8		647752	0					
ANR	648067	ArgumentList	bo		647752	1					
ANR	648068	Argument	bo		647752	0					
ANR	648069	Identifier	bo		647752	0					
ANR	648070	ExpressionStatement	ref1 . addr = ( ut64 ) i8	642:4:16392:16412	647752	2	True				
ANR	648071	AssignmentExpression	ref1 . addr = ( ut64 ) i8		647752	0		=			
ANR	648072	MemberAccess	ref1 . addr		647752	0					
ANR	648073	Identifier	ref1		647752	0					
ANR	648074	Identifier	addr		647752	1					
ANR	648075	CastExpression	( ut64 ) i8		647752	1					
ANR	648076	CastTarget	ut64		647752	0					
ANR	648077	Identifier	i8		647752	1					
ANR	648078	BreakStatement	break ;	643:4:16418:16423	647752	3	True				
ANR	648079	Label	case 2 :	644:3:16428:16434	647752	4	True				
ANR	648080	ExpressionStatement	"i16 = r_read_ble16 ( bo , be )"	645:4:16440:16467	647752	5	True				
ANR	648081	AssignmentExpression	"i16 = r_read_ble16 ( bo , be )"		647752	0		=			
ANR	648082	Identifier	i16		647752	0					
ANR	648083	CallExpression	"r_read_ble16 ( bo , be )"		647752	1					
ANR	648084	Callee	r_read_ble16		647752	0					
ANR	648085	Identifier	r_read_ble16		647752	0					
ANR	648086	ArgumentList	bo		647752	1					
ANR	648087	Argument	bo		647752	0					
ANR	648088	Identifier	bo		647752	0					
ANR	648089	Argument	be		647752	1					
ANR	648090	Identifier	be		647752	0					
ANR	648091	ExpressionStatement	ref1 . addr = ( ut64 ) i16	646:4:16473:16494	647752	6	True				
ANR	648092	AssignmentExpression	ref1 . addr = ( ut64 ) i16		647752	0		=			
ANR	648093	MemberAccess	ref1 . addr		647752	0					
ANR	648094	Identifier	ref1		647752	0					
ANR	648095	Identifier	addr		647752	1					
ANR	648096	CastExpression	( ut64 ) i16		647752	1					
ANR	648097	CastTarget	ut64		647752	0					
ANR	648098	Identifier	i16		647752	1					
ANR	648099	BreakStatement	break ;	647:4:16500:16505	647752	7	True				
ANR	648100	Label	case 4 :	648:3:16510:16516	647752	8	True				
ANR	648101	ExpressionStatement	"i32 = r_read_ble32 ( bo , be )"	649:4:16522:16549	647752	9	True				
ANR	648102	AssignmentExpression	"i32 = r_read_ble32 ( bo , be )"		647752	0		=			
ANR	648103	Identifier	i32		647752	0					
ANR	648104	CallExpression	"r_read_ble32 ( bo , be )"		647752	1					
ANR	648105	Callee	r_read_ble32		647752	0					
ANR	648106	Identifier	r_read_ble32		647752	0					
ANR	648107	ArgumentList	bo		647752	1					
ANR	648108	Argument	bo		647752	0					
ANR	648109	Identifier	bo		647752	0					
ANR	648110	Argument	be		647752	1					
ANR	648111	Identifier	be		647752	0					
ANR	648112	ExpressionStatement	ref1 . addr = ( ut64 ) i32	650:4:16555:16576	647752	10	True				
ANR	648113	AssignmentExpression	ref1 . addr = ( ut64 ) i32		647752	0		=			
ANR	648114	MemberAccess	ref1 . addr		647752	0					
ANR	648115	Identifier	ref1		647752	0					
ANR	648116	Identifier	addr		647752	1					
ANR	648117	CastExpression	( ut64 ) i32		647752	1					
ANR	648118	CastTarget	ut64		647752	0					
ANR	648119	Identifier	i32		647752	1					
ANR	648120	BreakStatement	break ;	651:4:16582:16587	647752	11	True				
ANR	648121	Label	case 8 :	652:3:16592:16598	647752	12	True				
ANR	648122	ExpressionStatement	"ref1 . addr = r_read_ble64 ( bo , be )"	653:4:16604:16637	647752	13	True				
ANR	648123	AssignmentExpression	"ref1 . addr = r_read_ble64 ( bo , be )"		647752	0		=			
ANR	648124	MemberAccess	ref1 . addr		647752	0					
ANR	648125	Identifier	ref1		647752	0					
ANR	648126	Identifier	addr		647752	1					
ANR	648127	CallExpression	"r_read_ble64 ( bo , be )"		647752	1					
ANR	648128	Callee	r_read_ble64		647752	0					
ANR	648129	Identifier	r_read_ble64		647752	0					
ANR	648130	ArgumentList	bo		647752	1					
ANR	648131	Argument	bo		647752	0					
ANR	648132	Identifier	bo		647752	0					
ANR	648133	Argument	be		647752	1					
ANR	648134	Identifier	be		647752	0					
ANR	648135	BreakStatement	break ;	654:4:16643:16648	647752	14	True				
ANR	648136	ExpressionStatement	"r_anal_try_get_fcn ( core , & ref1 , fcndepth , refdepth - 1 )"	656:3:16658:16714	647752	4	True				
ANR	648137	CallExpression	"r_anal_try_get_fcn ( core , & ref1 , fcndepth , refdepth - 1 )"		647752	0					
ANR	648138	Callee	r_anal_try_get_fcn		647752	0					
ANR	648139	Identifier	r_anal_try_get_fcn		647752	0					
ANR	648140	ArgumentList	core		647752	1					
ANR	648141	Argument	core		647752	0					
ANR	648142	Identifier	core		647752	0					
ANR	648143	Argument	& ref1		647752	1					
ANR	648144	UnaryOperationExpression	& ref1		647752	0					
ANR	648145	UnaryOperator	&		647752	0					
ANR	648146	Identifier	ref1		647752	1					
ANR	648147	Argument	fcndepth		647752	2					
ANR	648148	Identifier	fcndepth		647752	0					
ANR	648149	Argument	refdepth - 1		647752	3					
ANR	648150	AdditiveExpression	refdepth - 1		647752	0		-			
ANR	648151	Identifier	refdepth		647752	0					
ANR	648152	PrimaryExpression	1		647752	1					
ANR	648153	ReturnStatement	return 1 ;	659:1:16724:16732	647752	4	True				
ANR	648154	PrimaryExpression	1		647752	0					
ANR	648155	ReturnType	static bool		647752	1					
ANR	648156	Identifier	r_anal_try_get_fcn		647752	2					
ANR	648157	ParameterList	"RCore * core , RAnalRef * ref , int fcndepth , int refdepth"		647752	3					
ANR	648158	Parameter	RCore * core	601:31:15265:15275	647752	0	True				
ANR	648159	ParameterType	RCore *		647752	0					
ANR	648160	Identifier	core		647752	1					
ANR	648161	Parameter	RAnalRef * ref	601:44:15278:15290	647752	1	True				
ANR	648162	ParameterType	RAnalRef *		647752	0					
ANR	648163	Identifier	ref		647752	1					
ANR	648164	Parameter	int fcndepth	601:59:15293:15304	647752	2	True				
ANR	648165	ParameterType	int		647752	0					
ANR	648166	Identifier	fcndepth		647752	1					
ANR	648167	Parameter	int refdepth	601:73:15307:15318	647752	3	True				
ANR	648168	ParameterType	int		647752	0					
ANR	648169	Identifier	refdepth		647752	1					
ANR	648170	CFGEntryNode	ENTRY		647752		True				
ANR	648171	CFGExitNode	EXIT		647752		True				
ANR	648172	Symbol	ref -> addr		647752						
ANR	648173	Symbol	* map		647752						
ANR	648174	Symbol	ref -> at		647752						
ANR	648175	Symbol	i32		647752						
ANR	648176	Symbol	looksLikeAFunction		647752						
ANR	648177	Symbol	r_read_ble8		647752						
ANR	648178	Symbol	core -> anal -> big_endian		647752						
ANR	648179	Symbol	ref		647752						
ANR	648180	Symbol	* * core -> anal		647752						
ANR	648181	Symbol	core -> anal -> limit -> from		647752						
ANR	648182	Symbol	ref1 . type		647752						
ANR	648183	Symbol	r_anal_check_fcn		647752						
ANR	648184	Symbol	R_ANAL_REF_TYPE_DATA		647752						
ANR	648185	Symbol	core		647752						
ANR	648186	Symbol	* * * core		647752						
ANR	648187	Symbol	fcndepth		647752						
ANR	648188	Symbol	core -> anal -> limit -> to		647752						
ANR	648189	Symbol	map -> perm		647752						
ANR	648190	Symbol	map -> itv		647752						
ANR	648191	Symbol	be		647752						
ANR	648192	Symbol	ref -> type		647752						
ANR	648193	Symbol	ref1 . at		647752						
ANR	648194	Symbol	* core		647752						
ANR	648195	Symbol	* core -> anal -> limit		647752						
ANR	648196	Symbol	refdepth		647752						
ANR	648197	Symbol	ref1		647752						
ANR	648198	Symbol	core -> anal		647752						
ANR	648199	Symbol	bo		647752						
ANR	648200	Symbol	i16		647752						
ANR	648201	Symbol	R_PERM_X		647752						
ANR	648202	Symbol	offs		647752						
ANR	648203	Symbol	core -> io		647752						
ANR	648204	Symbol	map -> itv . addr		647752						
ANR	648205	Symbol	map		647752						
ANR	648206	Symbol	r_read_ble32		647752						
ANR	648207	Symbol	* * core		647752						
ANR	648208	Symbol	ref1 . addr		647752						
ANR	648209	Symbol	core -> anal -> bits		647752						
ANR	648210	Symbol	offe		647752						
ANR	648211	Symbol	sz		647752						
ANR	648212	Symbol	r_read_ble16		647752						
ANR	648213	Symbol	false		647752						
ANR	648214	Symbol	& ref1		647752						
ANR	648215	Symbol	R_MIN		647752						
ANR	648216	Symbol	i8		647752						
ANR	648217	Symbol	buf		647752						
ANR	648218	Symbol	map -> itv . size		647752						
ANR	648219	Symbol	* core -> anal		647752						
ANR	648220	Symbol	core -> anal -> limit		647752						
ANR	648221	Symbol	* ref		647752						
ANR	648222	Symbol	r_io_map_get		647752						
ANR	648223	Symbol	r_read_ble64		647752						
ANR	648224	Function	r_anal_analyze_fcn_refs	662:0:16737:17464							
ANR	648225	FunctionDef	"r_anal_analyze_fcn_refs (RCore * core , RAnalFunction * fcn , int depth)"		648224	0					
ANR	648226	CompoundStatement		662:79:16816:17464	648224	0					
ANR	648227	IdentifierDeclStatement	RListIter * iter ;	663:1:16819:16834	648224	0	True				
ANR	648228	IdentifierDecl	* iter		648224	0					
ANR	648229	IdentifierDeclType	RListIter *		648224	0					
ANR	648230	Identifier	iter		648224	1					
ANR	648231	IdentifierDeclStatement	RAnalRef * ref ;	664:1:16837:16850	648224	1	True				
ANR	648232	IdentifierDecl	* ref		648224	0					
ANR	648233	IdentifierDeclType	RAnalRef *		648224	0					
ANR	648234	Identifier	ref		648224	1					
ANR	648235	IdentifierDeclStatement	"RList * refs = r_anal_fcn_get_refs ( core -> anal , fcn ) ;"	665:1:16853:16904	648224	2	True				
ANR	648236	IdentifierDecl	"* refs = r_anal_fcn_get_refs ( core -> anal , fcn )"		648224	0					
ANR	648237	IdentifierDeclType	RList *		648224	0					
ANR	648238	Identifier	refs		648224	1					
ANR	648239	AssignmentExpression	"* refs = r_anal_fcn_get_refs ( core -> anal , fcn )"		648224	2		=			
ANR	648240	Identifier	refs		648224	0					
ANR	648241	CallExpression	"r_anal_fcn_get_refs ( core -> anal , fcn )"		648224	1					
ANR	648242	Callee	r_anal_fcn_get_refs		648224	0					
ANR	648243	Identifier	r_anal_fcn_get_refs		648224	0					
ANR	648244	ArgumentList	core -> anal		648224	1					
ANR	648245	Argument	core -> anal		648224	0					
ANR	648246	PtrMemberAccess	core -> anal		648224	0					
ANR	648247	Identifier	core		648224	0					
ANR	648248	Identifier	anal		648224	1					
ANR	648249	Argument	fcn		648224	1					
ANR	648250	Identifier	fcn		648224	0					
ANR	648251	Statement	r_list_foreach	667:1:16908:16921	648224	3	True				
ANR	648252	Statement	(	667:16:16923:16923	648224	4	True				
ANR	648253	Statement	refs	667:17:16924:16927	648224	5	True				
ANR	648254	Statement	","	667:21:16928:16928	648224	6	True				
ANR	648255	Statement	iter	667:23:16930:16933	648224	7	True				
ANR	648256	Statement	","	667:27:16934:16934	648224	8	True				
ANR	648257	Statement	ref	667:29:16936:16938	648224	9	True				
ANR	648258	Statement	)	667:32:16939:16939	648224	10	True				
ANR	648259	CompoundStatement		6:34:124:124	648224	11					
ANR	648260	IfStatement	if ( ref -> addr == UT64_MAX )		648224	0					
ANR	648261	Condition	ref -> addr == UT64_MAX	668:6:16949:16969	648224	0	True				
ANR	648262	EqualityExpression	ref -> addr == UT64_MAX		648224	0		==			
ANR	648263	PtrMemberAccess	ref -> addr		648224	0					
ANR	648264	Identifier	ref		648224	0					
ANR	648265	Identifier	addr		648224	1					
ANR	648266	Identifier	UT64_MAX		648224	1					
ANR	648267	CompoundStatement		7:29:155:155	648224	1					
ANR	648268	ContinueStatement	continue ;	669:3:16977:16985	648224	0	True				
ANR	648269	SwitchStatement	switch ( ref -> type )		648224	1					
ANR	648270	Condition	ref -> type	671:10:17001:17009	648224	0	True				
ANR	648271	PtrMemberAccess	ref -> type		648224	0					
ANR	648272	Identifier	ref		648224	0					
ANR	648273	Identifier	type		648224	1					
ANR	648274	CompoundStatement		10:21:195:195	648224	1					
ANR	648275	Label	case R_ANAL_REF_TYPE_DATA :	672:2:17016:17041	648224	0	True				
ANR	648276	Identifier	R_ANAL_REF_TYPE_DATA		648224	0					
ANR	648277	IfStatement	if ( core -> anal -> opt . followdatarefs )		648224	1					
ANR	648278	Condition	core -> anal -> opt . followdatarefs	673:7:17050:17079	648224	0	True				
ANR	648279	MemberAccess	core -> anal -> opt . followdatarefs		648224	0					
ANR	648280	PtrMemberAccess	core -> anal -> opt		648224	0					
ANR	648281	PtrMemberAccess	core -> anal		648224	0					
ANR	648282	Identifier	core		648224	0					
ANR	648283	Identifier	anal		648224	1					
ANR	648284	Identifier	opt		648224	1					
ANR	648285	Identifier	followdatarefs		648224	1					
ANR	648286	CompoundStatement		12:39:265:265	648224	1					
ANR	648287	ExpressionStatement	"r_anal_try_get_fcn ( core , ref , depth , 2 )"	674:4:17088:17128	648224	0	True				
ANR	648288	CallExpression	"r_anal_try_get_fcn ( core , ref , depth , 2 )"		648224	0					
ANR	648289	Callee	r_anal_try_get_fcn		648224	0					
ANR	648290	Identifier	r_anal_try_get_fcn		648224	0					
ANR	648291	ArgumentList	core		648224	1					
ANR	648292	Argument	core		648224	0					
ANR	648293	Identifier	core		648224	0					
ANR	648294	Argument	ref		648224	1					
ANR	648295	Identifier	ref		648224	0					
ANR	648296	Argument	depth		648224	2					
ANR	648297	Identifier	depth		648224	0					
ANR	648298	Argument	2		648224	3					
ANR	648299	PrimaryExpression	2		648224	0					
ANR	648300	BreakStatement	break ;	676:3:17138:17143	648224	2	True				
ANR	648301	Label	case R_ANAL_REF_TYPE_CODE :	677:2:17147:17172	648224	3	True				
ANR	648302	Identifier	R_ANAL_REF_TYPE_CODE		648224	0					
ANR	648303	Label	case R_ANAL_REF_TYPE_CALL :	678:2:17176:17201	648224	4	True				
ANR	648304	Identifier	R_ANAL_REF_TYPE_CALL		648224	0					
ANR	648305	ExpressionStatement	"r_core_anal_fcn ( core , ref -> addr , ref -> at , ref -> type , depth - 1 )"	679:3:17206:17268	648224	5	True				
ANR	648306	CallExpression	"r_core_anal_fcn ( core , ref -> addr , ref -> at , ref -> type , depth - 1 )"		648224	0					
ANR	648307	Callee	r_core_anal_fcn		648224	0					
ANR	648308	Identifier	r_core_anal_fcn		648224	0					
ANR	648309	ArgumentList	core		648224	1					
ANR	648310	Argument	core		648224	0					
ANR	648311	Identifier	core		648224	0					
ANR	648312	Argument	ref -> addr		648224	1					
ANR	648313	PtrMemberAccess	ref -> addr		648224	0					
ANR	648314	Identifier	ref		648224	0					
ANR	648315	Identifier	addr		648224	1					
ANR	648316	Argument	ref -> at		648224	2					
ANR	648317	PtrMemberAccess	ref -> at		648224	0					
ANR	648318	Identifier	ref		648224	0					
ANR	648319	Identifier	at		648224	1					
ANR	648320	Argument	ref -> type		648224	3					
ANR	648321	PtrMemberAccess	ref -> type		648224	0					
ANR	648322	Identifier	ref		648224	0					
ANR	648323	Identifier	type		648224	1					
ANR	648324	Argument	depth - 1		648224	4					
ANR	648325	AdditiveExpression	depth - 1		648224	0		-			
ANR	648326	Identifier	depth		648224	0					
ANR	648327	PrimaryExpression	1		648224	1					
ANR	648328	BreakStatement	break ;	680:3:17273:17278	648224	6	True				
ANR	648329	Label	default :	681:2:17282:17289	648224	7	True				
ANR	648330	Identifier	default		648224	0					
ANR	648331	BreakStatement	break ;	682:3:17294:17299	648224	8	True				
ANR	648332	ExpressionStatement	r_list_free ( refs )	687:1:17433:17451	648224	12	True				
ANR	648333	CallExpression	r_list_free ( refs )		648224	0					
ANR	648334	Callee	r_list_free		648224	0					
ANR	648335	Identifier	r_list_free		648224	0					
ANR	648336	ArgumentList	refs		648224	1					
ANR	648337	Argument	refs		648224	0					
ANR	648338	Identifier	refs		648224	0					
ANR	648339	ReturnStatement	return 1 ;	688:1:17454:17462	648224	13	True				
ANR	648340	PrimaryExpression	1		648224	0					
ANR	648341	ReturnType	static int		648224	1					
ANR	648342	Identifier	r_anal_analyze_fcn_refs		648224	2					
ANR	648343	ParameterList	"RCore * core , RAnalFunction * fcn , int depth"		648224	3					
ANR	648344	Parameter	RCore * core	662:35:16772:16782	648224	0	True				
ANR	648345	ParameterType	RCore *		648224	0					
ANR	648346	Identifier	core		648224	1					
ANR	648347	Parameter	RAnalFunction * fcn	662:48:16785:16802	648224	1	True				
ANR	648348	ParameterType	RAnalFunction *		648224	0					
ANR	648349	Identifier	fcn		648224	1					
ANR	648350	Parameter	int depth	662:68:16805:16813	648224	2	True				
ANR	648351	ParameterType	int		648224	0					
ANR	648352	Identifier	depth		648224	1					
ANR	648353	CFGEntryNode	ENTRY		648224		True				
ANR	648354	CFGExitNode	EXIT		648224		True				
ANR	648355	CFGErrorNode	ERROR		648224		True				
ANR	648356	Symbol	core -> anal -> opt		648224						
ANR	648357	Symbol	ref -> addr		648224						
ANR	648358	Symbol	ref -> type		648224						
ANR	648359	Symbol	* core		648224						
ANR	648360	Symbol	ref -> at		648224						
ANR	648361	Symbol	iter		648224						
ANR	648362	Symbol	core -> anal		648224						
ANR	648363	Symbol	core -> anal -> opt . followdatarefs		648224						
ANR	648364	Symbol	r_anal_fcn_get_refs		648224						
ANR	648365	Symbol	fcn		648224						
ANR	648366	Symbol	core		648224						
ANR	648367	Symbol	ref		648224						
ANR	648368	Symbol	depth		648224						
ANR	648369	Symbol	* core -> anal		648224						
ANR	648370	Symbol	refs		648224						
ANR	648371	Symbol	UT64_MAX		648224						
ANR	648372	Symbol	* ref		648224						
ANR	648373	Symbol	* * core		648224						
ANR	648374	Function	function_rename	691:0:17467:18013							
ANR	648375	FunctionDef	"function_rename (RFlag * flags , RAnalFunction * fcn)"		648374	0					
ANR	648376	CompoundStatement		691:62:17529:18013	648374	0					
ANR	648377	IdentifierDeclStatement	"const char * locname = ""loc."" ;"	692:1:17532:17560	648374	0	True				
ANR	648378	IdentifierDecl	"* locname = ""loc."""		648374	0					
ANR	648379	IdentifierDeclType	const char *		648374	0					
ANR	648380	Identifier	locname		648374	1					
ANR	648381	AssignmentExpression	"* locname = ""loc."""		648374	2		=			
ANR	648382	Identifier	locname		648374	0					
ANR	648383	PrimaryExpression	"""loc."""		648374	1					
ANR	648384	IdentifierDeclStatement	const size_t locsize = strlen ( locname ) ;	693:1:17563:17602	648374	1	True				
ANR	648385	IdentifierDecl	locsize = strlen ( locname )		648374	0					
ANR	648386	IdentifierDeclType	const size_t		648374	0					
ANR	648387	Identifier	locsize		648374	1					
ANR	648388	AssignmentExpression	locsize = strlen ( locname )		648374	2		=			
ANR	648389	Identifier	locsize		648374	0					
ANR	648390	CallExpression	strlen ( locname )		648374	1					
ANR	648391	Callee	strlen		648374	0					
ANR	648392	Identifier	strlen		648374	0					
ANR	648393	ArgumentList	locname		648374	1					
ANR	648394	Argument	locname		648374	0					
ANR	648395	Identifier	locname		648374	0					
ANR	648396	IdentifierDeclStatement	char * fcnname = fcn -> name ;	694:1:17605:17630	648374	2	True				
ANR	648397	IdentifierDecl	* fcnname = fcn -> name		648374	0					
ANR	648398	IdentifierDeclType	char *		648374	0					
ANR	648399	Identifier	fcnname		648374	1					
ANR	648400	AssignmentExpression	* fcnname = fcn -> name		648374	2		=			
ANR	648401	Identifier	fcnname		648374	0					
ANR	648402	PtrMemberAccess	fcn -> name		648374	1					
ANR	648403	Identifier	fcn		648374	0					
ANR	648404	Identifier	name		648374	1					
ANR	648405	IfStatement	"if ( strncmp ( fcn -> name , locname , locsize ) == 0 )"		648374	3					
ANR	648406	Condition	"strncmp ( fcn -> name , locname , locsize ) == 0"	696:5:17638:17679	648374	0	True				
ANR	648407	EqualityExpression	"strncmp ( fcn -> name , locname , locsize ) == 0"		648374	0		==			
ANR	648408	CallExpression	"strncmp ( fcn -> name , locname , locsize )"		648374	0					
ANR	648409	Callee	strncmp		648374	0					
ANR	648410	Identifier	strncmp		648374	0					
ANR	648411	ArgumentList	fcn -> name		648374	1					
ANR	648412	Argument	fcn -> name		648374	0					
ANR	648413	PtrMemberAccess	fcn -> name		648374	0					
ANR	648414	Identifier	fcn		648374	0					
ANR	648415	Identifier	name		648374	1					
ANR	648416	Argument	locname		648374	1					
ANR	648417	Identifier	locname		648374	0					
ANR	648418	Argument	locsize		648374	2					
ANR	648419	Identifier	locsize		648374	0					
ANR	648420	PrimaryExpression	0		648374	1					
ANR	648421	CompoundStatement		8:2:191:203	648374	1					
ANR	648422	IdentifierDeclStatement	"const char * fcnpfx , * restofname ;"	697:2:17686:17717	648374	0	True				
ANR	648423	IdentifierDecl	* fcnpfx		648374	0					
ANR	648424	IdentifierDeclType	const char *		648374	0					
ANR	648425	Identifier	fcnpfx		648374	1					
ANR	648426	IdentifierDecl	* restofname		648374	1					
ANR	648427	IdentifierDeclType	const char *		648374	0					
ANR	648428	Identifier	restofname		648374	1					
ANR	648429	IdentifierDeclStatement	RFlagItem * f ;	698:2:17721:17733	648374	1	True				
ANR	648430	IdentifierDecl	* f		648374	0					
ANR	648431	IdentifierDeclType	RFlagItem *		648374	0					
ANR	648432	Identifier	f		648374	1					
ANR	648433	ExpressionStatement	fcn -> type = R_ANAL_FCN_TYPE_FCN	700:2:17738:17769	648374	2	True				
ANR	648434	AssignmentExpression	fcn -> type = R_ANAL_FCN_TYPE_FCN		648374	0		=			
ANR	648435	PtrMemberAccess	fcn -> type		648374	0					
ANR	648436	Identifier	fcn		648374	0					
ANR	648437	Identifier	type		648374	1					
ANR	648438	Identifier	R_ANAL_FCN_TYPE_FCN		648374	1					
ANR	648439	ExpressionStatement	fcnpfx = r_anal_fcn_type_tostring ( fcn -> type )	701:2:17773:17818	648374	3	True				
ANR	648440	AssignmentExpression	fcnpfx = r_anal_fcn_type_tostring ( fcn -> type )		648374	0		=			
ANR	648441	Identifier	fcnpfx		648374	0					
ANR	648442	CallExpression	r_anal_fcn_type_tostring ( fcn -> type )		648374	1					
ANR	648443	Callee	r_anal_fcn_type_tostring		648374	0					
ANR	648444	Identifier	r_anal_fcn_type_tostring		648374	0					
ANR	648445	ArgumentList	fcn -> type		648374	1					
ANR	648446	Argument	fcn -> type		648374	0					
ANR	648447	PtrMemberAccess	fcn -> type		648374	0					
ANR	648448	Identifier	fcn		648374	0					
ANR	648449	Identifier	type		648374	1					
ANR	648450	ExpressionStatement	restofname = fcn -> name + locsize	702:2:17822:17854	648374	4	True				
ANR	648451	AssignmentExpression	restofname = fcn -> name + locsize		648374	0		=			
ANR	648452	Identifier	restofname		648374	0					
ANR	648453	AdditiveExpression	fcn -> name + locsize		648374	1		+			
ANR	648454	PtrMemberAccess	fcn -> name		648374	0					
ANR	648455	Identifier	fcn		648374	0					
ANR	648456	Identifier	name		648374	1					
ANR	648457	Identifier	locsize		648374	1					
ANR	648458	ExpressionStatement	"fcn -> name = r_str_newf ( ""%s.%s"" , fcnpfx , restofname )"	703:2:17858:17910	648374	5	True				
ANR	648459	AssignmentExpression	"fcn -> name = r_str_newf ( ""%s.%s"" , fcnpfx , restofname )"		648374	0		=			
ANR	648460	PtrMemberAccess	fcn -> name		648374	0					
ANR	648461	Identifier	fcn		648374	0					
ANR	648462	Identifier	name		648374	1					
ANR	648463	CallExpression	"r_str_newf ( ""%s.%s"" , fcnpfx , restofname )"		648374	1					
ANR	648464	Callee	r_str_newf		648374	0					
ANR	648465	Identifier	r_str_newf		648374	0					
ANR	648466	ArgumentList	"""%s.%s"""		648374	1					
ANR	648467	Argument	"""%s.%s"""		648374	0					
ANR	648468	PrimaryExpression	"""%s.%s"""		648374	0					
ANR	648469	Argument	fcnpfx		648374	1					
ANR	648470	Identifier	fcnpfx		648374	0					
ANR	648471	Argument	restofname		648374	2					
ANR	648472	Identifier	restofname		648374	0					
ANR	648473	ExpressionStatement	"f = r_flag_get_i ( flags , fcn -> addr )"	705:2:17915:17950	648374	6	True				
ANR	648474	AssignmentExpression	"f = r_flag_get_i ( flags , fcn -> addr )"		648374	0		=			
ANR	648475	Identifier	f		648374	0					
ANR	648476	CallExpression	"r_flag_get_i ( flags , fcn -> addr )"		648374	1					
ANR	648477	Callee	r_flag_get_i		648374	0					
ANR	648478	Identifier	r_flag_get_i		648374	0					
ANR	648479	ArgumentList	flags		648374	1					
ANR	648480	Argument	flags		648374	0					
ANR	648481	Identifier	flags		648374	0					
ANR	648482	Argument	fcn -> addr		648374	1					
ANR	648483	PtrMemberAccess	fcn -> addr		648374	0					
ANR	648484	Identifier	fcn		648374	0					
ANR	648485	Identifier	addr		648374	1					
ANR	648486	ExpressionStatement	"r_flag_rename ( flags , f , fcn -> name )"	706:2:17954:17989	648374	7	True				
ANR	648487	CallExpression	"r_flag_rename ( flags , f , fcn -> name )"		648374	0					
ANR	648488	Callee	r_flag_rename		648374	0					
ANR	648489	Identifier	r_flag_rename		648374	0					
ANR	648490	ArgumentList	flags		648374	1					
ANR	648491	Argument	flags		648374	0					
ANR	648492	Identifier	flags		648374	0					
ANR	648493	Argument	f		648374	1					
ANR	648494	Identifier	f		648374	0					
ANR	648495	Argument	fcn -> name		648374	2					
ANR	648496	PtrMemberAccess	fcn -> name		648374	0					
ANR	648497	Identifier	fcn		648374	0					
ANR	648498	Identifier	name		648374	1					
ANR	648499	ExpressionStatement	free ( fcnname )	708:2:17994:18008	648374	8	True				
ANR	648500	CallExpression	free ( fcnname )		648374	0					
ANR	648501	Callee	free		648374	0					
ANR	648502	Identifier	free		648374	0					
ANR	648503	ArgumentList	fcnname		648374	1					
ANR	648504	Argument	fcnname		648374	0					
ANR	648505	Identifier	fcnname		648374	0					
ANR	648506	ReturnType	static void		648374	1					
ANR	648507	Identifier	function_rename		648374	2					
ANR	648508	ParameterList	"RFlag * flags , RAnalFunction * fcn"		648374	3					
ANR	648509	Parameter	RFlag * flags	691:28:17495:17506	648374	0	True				
ANR	648510	ParameterType	RFlag *		648374	0					
ANR	648511	Identifier	flags		648374	1					
ANR	648512	Parameter	RAnalFunction * fcn	691:42:17509:17526	648374	1	True				
ANR	648513	ParameterType	RAnalFunction *		648374	0					
ANR	648514	Identifier	fcn		648374	1					
ANR	648515	CFGEntryNode	ENTRY		648374		True				
ANR	648516	CFGExitNode	EXIT		648374		True				
ANR	648517	Symbol	* fcn		648374						
ANR	648518	Symbol	fcnpfx		648374						
ANR	648519	Symbol	fcn -> name		648374						
ANR	648520	Symbol	f		648374						
ANR	648521	Symbol	R_ANAL_FCN_TYPE_FCN		648374						
ANR	648522	Symbol	flags		648374						
ANR	648523	Symbol	fcn -> type		648374						
ANR	648524	Symbol	r_str_newf		648374						
ANR	648525	Symbol	fcn		648374						
ANR	648526	Symbol	fcnname		648374						
ANR	648527	Symbol	strlen		648374						
ANR	648528	Symbol	strncmp		648374						
ANR	648529	Symbol	locsize		648374						
ANR	648530	Symbol	fcn -> addr		648374						
ANR	648531	Symbol	locname		648374						
ANR	648532	Symbol	r_flag_get_i		648374						
ANR	648533	Symbol	restofname		648374						
ANR	648534	Symbol	r_anal_fcn_type_tostring		648374						
ANR	648535	Function	autoname_imp_trampoline	712:0:18016:18610							
ANR	648536	FunctionDef	"autoname_imp_trampoline (RCore * core , RAnalFunction * fcn)"		648535	0					
ANR	648537	CompoundStatement		712:69:18085:18610	648535	0					
ANR	648538	IfStatement	if ( r_list_length ( fcn -> bbs ) == 1 && ( ( RAnalBlock * ) r_list_first ( fcn -> bbs ) ) -> ninstr == 1 )		648535	0					
ANR	648539	Condition	r_list_length ( fcn -> bbs ) == 1 && ( ( RAnalBlock * ) r_list_first ( fcn -> bbs ) ) -> ninstr == 1	713:5:18092:18177	648535	0	True				
ANR	648540	AndExpression	r_list_length ( fcn -> bbs ) == 1 && ( ( RAnalBlock * ) r_list_first ( fcn -> bbs ) ) -> ninstr == 1		648535	0		&&			
ANR	648541	EqualityExpression	r_list_length ( fcn -> bbs ) == 1		648535	0		==			
ANR	648542	CallExpression	r_list_length ( fcn -> bbs )		648535	0					
ANR	648543	Callee	r_list_length		648535	0					
ANR	648544	Identifier	r_list_length		648535	0					
ANR	648545	ArgumentList	fcn -> bbs		648535	1					
ANR	648546	Argument	fcn -> bbs		648535	0					
ANR	648547	PtrMemberAccess	fcn -> bbs		648535	0					
ANR	648548	Identifier	fcn		648535	0					
ANR	648549	Identifier	bbs		648535	1					
ANR	648550	PrimaryExpression	1		648535	1					
ANR	648551	EqualityExpression	( ( RAnalBlock * ) r_list_first ( fcn -> bbs ) ) -> ninstr == 1		648535	1		==			
ANR	648552	PtrMemberAccess	( ( RAnalBlock * ) r_list_first ( fcn -> bbs ) ) -> ninstr		648535	0					
ANR	648553	CastExpression	( RAnalBlock * ) r_list_first ( fcn -> bbs )		648535	0					
ANR	648554	CastTarget	RAnalBlock *		648535	0					
ANR	648555	CallExpression	r_list_first ( fcn -> bbs )		648535	1					
ANR	648556	Callee	r_list_first		648535	0					
ANR	648557	Identifier	r_list_first		648535	0					
ANR	648558	ArgumentList	fcn -> bbs		648535	1					
ANR	648559	Argument	fcn -> bbs		648535	0					
ANR	648560	PtrMemberAccess	fcn -> bbs		648535	0					
ANR	648561	Identifier	fcn		648535	0					
ANR	648562	Identifier	bbs		648535	1					
ANR	648563	Identifier	ninstr		648535	1					
ANR	648564	PrimaryExpression	1		648535	1					
ANR	648565	CompoundStatement		3:2:98:149	648535	1					
ANR	648566	IdentifierDeclStatement	"RList * refs = r_anal_fcn_get_refs ( core -> anal , fcn ) ;"	714:2:18184:18235	648535	0	True				
ANR	648567	IdentifierDecl	"* refs = r_anal_fcn_get_refs ( core -> anal , fcn )"		648535	0					
ANR	648568	IdentifierDeclType	RList *		648535	0					
ANR	648569	Identifier	refs		648535	1					
ANR	648570	AssignmentExpression	"* refs = r_anal_fcn_get_refs ( core -> anal , fcn )"		648535	2		=			
ANR	648571	Identifier	refs		648535	0					
ANR	648572	CallExpression	"r_anal_fcn_get_refs ( core -> anal , fcn )"		648535	1					
ANR	648573	Callee	r_anal_fcn_get_refs		648535	0					
ANR	648574	Identifier	r_anal_fcn_get_refs		648535	0					
ANR	648575	ArgumentList	core -> anal		648535	1					
ANR	648576	Argument	core -> anal		648535	0					
ANR	648577	PtrMemberAccess	core -> anal		648535	0					
ANR	648578	Identifier	core		648535	0					
ANR	648579	Identifier	anal		648535	1					
ANR	648580	Argument	fcn		648535	1					
ANR	648581	Identifier	fcn		648535	0					
ANR	648582	IfStatement	if ( refs && r_list_length ( refs ) == 1 )		648535	1					
ANR	648583	Condition	refs && r_list_length ( refs ) == 1	715:6:18243:18275	648535	0	True				
ANR	648584	AndExpression	refs && r_list_length ( refs ) == 1		648535	0		&&			
ANR	648585	Identifier	refs		648535	0					
ANR	648586	EqualityExpression	r_list_length ( refs ) == 1		648535	1		==			
ANR	648587	CallExpression	r_list_length ( refs )		648535	0					
ANR	648588	Callee	r_list_length		648535	0					
ANR	648589	Identifier	r_list_length		648535	0					
ANR	648590	ArgumentList	refs		648535	1					
ANR	648591	Argument	refs		648535	0					
ANR	648592	Identifier	refs		648535	0					
ANR	648593	PrimaryExpression	1		648535	1					
ANR	648594	CompoundStatement		5:3:197:232	648535	1					
ANR	648595	IdentifierDeclStatement	RAnalRef * ref = r_list_first ( refs ) ;	716:3:18283:18318	648535	0	True				
ANR	648596	IdentifierDecl	* ref = r_list_first ( refs )		648535	0					
ANR	648597	IdentifierDeclType	RAnalRef *		648535	0					
ANR	648598	Identifier	ref		648535	1					
ANR	648599	AssignmentExpression	* ref = r_list_first ( refs )		648535	2		=			
ANR	648600	Identifier	ref		648535	0					
ANR	648601	CallExpression	r_list_first ( refs )		648535	1					
ANR	648602	Callee	r_list_first		648535	0					
ANR	648603	Identifier	r_list_first		648535	0					
ANR	648604	ArgumentList	refs		648535	1					
ANR	648605	Argument	refs		648535	0					
ANR	648606	Identifier	refs		648535	0					
ANR	648607	IfStatement	if ( ref -> type != R_ANAL_REF_TYPE_CALL )		648535	1					
ANR	648608	Condition	ref -> type != R_ANAL_REF_TYPE_CALL	717:7:18327:18359	648535	0	True				
ANR	648609	EqualityExpression	ref -> type != R_ANAL_REF_TYPE_CALL		648535	0		!=			
ANR	648610	PtrMemberAccess	ref -> type		648535	0					
ANR	648611	Identifier	ref		648535	0					
ANR	648612	Identifier	type		648535	1					
ANR	648613	Identifier	R_ANAL_REF_TYPE_CALL		648535	1					
ANR	648614	CompoundStatement		7:4:311:365	648535	1					
ANR	648615	IdentifierDeclStatement	"RFlagItem * flg = r_flag_get_i ( core -> flags , ref -> addr ) ;"	718:4:18397:18451	648535	0	True				
ANR	648616	IdentifierDecl	"* flg = r_flag_get_i ( core -> flags , ref -> addr )"		648535	0					
ANR	648617	IdentifierDeclType	RFlagItem *		648535	0					
ANR	648618	Identifier	flg		648535	1					
ANR	648619	AssignmentExpression	"* flg = r_flag_get_i ( core -> flags , ref -> addr )"		648535	2		=			
ANR	648620	Identifier	flg		648535	0					
ANR	648621	CallExpression	"r_flag_get_i ( core -> flags , ref -> addr )"		648535	1					
ANR	648622	Callee	r_flag_get_i		648535	0					
ANR	648623	Identifier	r_flag_get_i		648535	0					
ANR	648624	ArgumentList	core -> flags		648535	1					
ANR	648625	Argument	core -> flags		648535	0					
ANR	648626	PtrMemberAccess	core -> flags		648535	0					
ANR	648627	Identifier	core		648535	0					
ANR	648628	Identifier	flags		648535	1					
ANR	648629	Argument	ref -> addr		648535	1					
ANR	648630	PtrMemberAccess	ref -> addr		648535	0					
ANR	648631	Identifier	ref		648535	0					
ANR	648632	Identifier	addr		648535	1					
ANR	648633	IfStatement	"if ( flg && r_str_startswith ( flg -> name , ""sym.imp."" ) )"		648535	1					
ANR	648634	Condition	"flg && r_str_startswith ( flg -> name , ""sym.imp."" )"	719:8:18461:18507	648535	0	True				
ANR	648635	AndExpression	"flg && r_str_startswith ( flg -> name , ""sym.imp."" )"		648535	0		&&			
ANR	648636	Identifier	flg		648535	0					
ANR	648637	CallExpression	"r_str_startswith ( flg -> name , ""sym.imp."" )"		648535	1					
ANR	648638	Callee	r_str_startswith		648535	0					
ANR	648639	Identifier	r_str_startswith		648535	0					
ANR	648640	ArgumentList	flg -> name		648535	1					
ANR	648641	Argument	flg -> name		648535	0					
ANR	648642	PtrMemberAccess	flg -> name		648535	0					
ANR	648643	Identifier	flg		648535	0					
ANR	648644	Identifier	name		648535	1					
ANR	648645	Argument	"""sym.imp."""		648535	1					
ANR	648646	PrimaryExpression	"""sym.imp."""		648535	0					
ANR	648647	CompoundStatement		8:57:424:424	648535	1					
ANR	648648	ExpressionStatement	R_FREE ( fcn -> name )	720:5:18517:18535	648535	0	True				
ANR	648649	CallExpression	R_FREE ( fcn -> name )		648535	0					
ANR	648650	Callee	R_FREE		648535	0					
ANR	648651	Identifier	R_FREE		648535	0					
ANR	648652	ArgumentList	fcn -> name		648535	1					
ANR	648653	Argument	fcn -> name		648535	0					
ANR	648654	PtrMemberAccess	fcn -> name		648535	0					
ANR	648655	Identifier	fcn		648535	0					
ANR	648656	Identifier	name		648535	1					
ANR	648657	ExpressionStatement	"fcn -> name = r_str_newf ( ""sub.%s"" , flg -> name + 8 )"	721:5:18542:18590	648535	1	True				
ANR	648658	AssignmentExpression	"fcn -> name = r_str_newf ( ""sub.%s"" , flg -> name + 8 )"		648535	0		=			
ANR	648659	PtrMemberAccess	fcn -> name		648535	0					
ANR	648660	Identifier	fcn		648535	0					
ANR	648661	Identifier	name		648535	1					
ANR	648662	CallExpression	"r_str_newf ( ""sub.%s"" , flg -> name + 8 )"		648535	1					
ANR	648663	Callee	r_str_newf		648535	0					
ANR	648664	Identifier	r_str_newf		648535	0					
ANR	648665	ArgumentList	"""sub.%s"""		648535	1					
ANR	648666	Argument	"""sub.%s"""		648535	0					
ANR	648667	PrimaryExpression	"""sub.%s"""		648535	0					
ANR	648668	Argument	flg -> name + 8		648535	1					
ANR	648669	AdditiveExpression	flg -> name + 8		648535	0		+			
ANR	648670	PtrMemberAccess	flg -> name		648535	0					
ANR	648671	Identifier	flg		648535	0					
ANR	648672	Identifier	name		648535	1					
ANR	648673	PrimaryExpression	8		648535	1					
ANR	648674	ReturnType	static void		648535	1					
ANR	648675	Identifier	autoname_imp_trampoline		648535	2					
ANR	648676	ParameterList	"RCore * core , RAnalFunction * fcn"		648535	3					
ANR	648677	Parameter	RCore * core	712:36:18052:18062	648535	0	True				
ANR	648678	ParameterType	RCore *		648535	0					
ANR	648679	Identifier	core		648535	1					
ANR	648680	Parameter	RAnalFunction * fcn	712:49:18065:18082	648535	1	True				
ANR	648681	ParameterType	RAnalFunction *		648535	0					
ANR	648682	Identifier	fcn		648535	1					
ANR	648683	CFGEntryNode	ENTRY		648535		True				
ANR	648684	CFGExitNode	EXIT		648535		True				
ANR	648685	Symbol	* r_list_first		648535						
ANR	648686	Symbol	ref -> addr		648535						
ANR	648687	Symbol	* fcn		648535						
ANR	648688	Symbol	ref -> type		648535						
ANR	648689	Symbol	fcn -> name		648535						
ANR	648690	Symbol	* core		648535						
ANR	648691	Symbol	r_str_newf		648535						
ANR	648692	Symbol	core -> anal		648535						
ANR	648693	Symbol	fcn		648535						
ANR	648694	Symbol	r_list_first		648535						
ANR	648695	Symbol	ref		648535						
ANR	648696	Symbol	( ( RAnalBlock * ) r_list_first ( fcn -> bbs ) ) -> ninstr		648535						
ANR	648697	Symbol	r_flag_get_i		648535						
ANR	648698	Symbol	R_ANAL_REF_TYPE_CALL		648535						
ANR	648699	Symbol	flg -> name		648535						
ANR	648700	Symbol	flg		648535						
ANR	648701	Symbol	r_str_startswith		648535						
ANR	648702	Symbol	core -> flags		648535						
ANR	648703	Symbol	r_anal_fcn_get_refs		648535						
ANR	648704	Symbol	core		648535						
ANR	648705	Symbol	* flg		648535						
ANR	648706	Symbol	fcn -> bbs		648535						
ANR	648707	Symbol	refs		648535						
ANR	648708	Symbol	* ref		648535						
ANR	648709	Symbol	r_list_length		648535						
ANR	648710	Function	set_fcn_name_from_flag	728:0:18613:19146							
ANR	648711	FunctionDef	"set_fcn_name_from_flag (RAnalFunction * fcn , RFlagItem * f , const char * fcnpfx)"		648710	0					
ANR	648712	CompoundStatement		728:89:18702:19146	648710	0					
ANR	648713	Statement	define	729:1:18705:18710	648710	0	True				
ANR	648714	Statement	SET_NAME	729:8:18712:18719	648710	1	True				
ANR	648715	ExpressionStatement	( newname ) R_FREE ( fcn -> name )	729:16:18720:18751	648710	2	True				
ANR	648716	CastExpression	( newname ) R_FREE ( fcn -> name )		648710	0					
ANR	648717	CastTarget	newname		648710	0					
ANR	648718	CallExpression	R_FREE ( fcn -> name )		648710	1					
ANR	648719	Callee	R_FREE		648710	0					
ANR	648720	Identifier	R_FREE		648710	0					
ANR	648721	ArgumentList	fcn -> name		648710	1					
ANR	648722	Argument	fcn -> name		648710	0					
ANR	648723	PtrMemberAccess	fcn -> name		648710	0					
ANR	648724	Identifier	fcn		648710	0					
ANR	648725	Identifier	name		648710	1					
ANR	648726	ExpressionStatement	fcn -> name = ( newname )	731:1:18756:18777	648710	3	True				
ANR	648727	AssignmentExpression	fcn -> name = ( newname )		648710	0		=			
ANR	648728	PtrMemberAccess	fcn -> name		648710	0					
ANR	648729	Identifier	fcn		648710	0					
ANR	648730	Identifier	name		648710	1					
ANR	648731	Identifier	newname		648710	1					
ANR	648732	Statement	is_name_set	732:1:18782:18792	648710	4	True				
ANR	648733	Statement	=	732:13:18794:18794	648710	5	True				
ANR	648734	IdentifierDeclStatement	true bool is_name_set = false ;	732:15:18796:18827	648710	6	True				
ANR	648735	IdentifierDecl	is_name_set = false		648710	0					
ANR	648736	IdentifierDeclType	true bool		648710	0					
ANR	648737	Identifier	is_name_set		648710	1					
ANR	648738	AssignmentExpression	is_name_set = false		648710	2		=			
ANR	648739	Identifier	false		648710	0					
ANR	648740	Identifier	false		648710	1					
ANR	648741	IfStatement	if ( f && f -> name )		648710	7					
ANR	648742	Condition	f && f -> name	735:5:18834:18845	648710	0	True				
ANR	648743	AndExpression	f && f -> name		648710	0		&&			
ANR	648744	Identifier	f		648710	0					
ANR	648745	PtrMemberAccess	f -> name		648710	1					
ANR	648746	Identifier	f		648710	0					
ANR	648747	Identifier	name		648710	1					
ANR	648748	CompoundStatement		8:19:145:145	648710	1					
ANR	648749	IfStatement	"if ( ! strncmp ( fcn -> name , ""loc."" , 4 ) || ! strncmp ( fcn -> name , ""fcn."" , 4 ) )"		648710	0					
ANR	648750	Condition	"! strncmp ( fcn -> name , ""loc."" , 4 ) || ! strncmp ( fcn -> name , ""fcn."" , 4 )"	736:6:18856:18921	648710	0	True				
ANR	648751	OrExpression	"! strncmp ( fcn -> name , ""loc."" , 4 ) || ! strncmp ( fcn -> name , ""fcn."" , 4 )"		648710	0		||			
ANR	648752	UnaryOperationExpression	"! strncmp ( fcn -> name , ""loc."" , 4 )"		648710	0					
ANR	648753	UnaryOperator	!		648710	0					
ANR	648754	CallExpression	"strncmp ( fcn -> name , ""loc."" , 4 )"		648710	1					
ANR	648755	Callee	strncmp		648710	0					
ANR	648756	Identifier	strncmp		648710	0					
ANR	648757	ArgumentList	fcn -> name		648710	1					
ANR	648758	Argument	fcn -> name		648710	0					
ANR	648759	PtrMemberAccess	fcn -> name		648710	0					
ANR	648760	Identifier	fcn		648710	0					
ANR	648761	Identifier	name		648710	1					
ANR	648762	Argument	"""loc."""		648710	1					
ANR	648763	PrimaryExpression	"""loc."""		648710	0					
ANR	648764	Argument	4		648710	2					
ANR	648765	PrimaryExpression	4		648710	0					
ANR	648766	UnaryOperationExpression	"! strncmp ( fcn -> name , ""fcn."" , 4 )"		648710	1					
ANR	648767	UnaryOperator	!		648710	0					
ANR	648768	CallExpression	"strncmp ( fcn -> name , ""fcn."" , 4 )"		648710	1					
ANR	648769	Callee	strncmp		648710	0					
ANR	648770	Identifier	strncmp		648710	0					
ANR	648771	ArgumentList	fcn -> name		648710	1					
ANR	648772	Argument	fcn -> name		648710	0					
ANR	648773	PtrMemberAccess	fcn -> name		648710	0					
ANR	648774	Identifier	fcn		648710	0					
ANR	648775	Identifier	name		648710	1					
ANR	648776	Argument	"""fcn."""		648710	1					
ANR	648777	PrimaryExpression	"""fcn."""		648710	0					
ANR	648778	Argument	4		648710	2					
ANR	648779	PrimaryExpression	4		648710	0					
ANR	648780	CompoundStatement		9:74:221:221	648710	1					
ANR	648781	ExpressionStatement	SET_NAME ( strdup ( f -> name ) )	737:3:18929:18956	648710	0	True				
ANR	648782	CallExpression	SET_NAME ( strdup ( f -> name ) )		648710	0					
ANR	648783	Callee	SET_NAME		648710	0					
ANR	648784	Identifier	SET_NAME		648710	0					
ANR	648785	ArgumentList	strdup ( f -> name )		648710	1					
ANR	648786	Argument	strdup ( f -> name )		648710	0					
ANR	648787	CallExpression	strdup ( f -> name )		648710	0					
ANR	648788	Callee	strdup		648710	0					
ANR	648789	Identifier	strdup		648710	0					
ANR	648790	ArgumentList	f -> name		648710	1					
ANR	648791	Argument	f -> name		648710	0					
ANR	648792	PtrMemberAccess	f -> name		648710	0					
ANR	648793	Identifier	f		648710	0					
ANR	648794	Identifier	name		648710	1					
ANR	648795	ElseStatement	else		648710	0					
ANR	648796	IfStatement	"if ( strncmp ( f -> name , ""sect"" , 4 ) )"		648710	0					
ANR	648797	Condition	"strncmp ( f -> name , ""sect"" , 4 )"	738:13:18971:18998	648710	0	True				
ANR	648798	CallExpression	"strncmp ( f -> name , ""sect"" , 4 )"		648710	0					
ANR	648799	Callee	strncmp		648710	0					
ANR	648800	Identifier	strncmp		648710	0					
ANR	648801	ArgumentList	f -> name		648710	1					
ANR	648802	Argument	f -> name		648710	0					
ANR	648803	PtrMemberAccess	f -> name		648710	0					
ANR	648804	Identifier	f		648710	0					
ANR	648805	Identifier	name		648710	1					
ANR	648806	Argument	"""sect"""		648710	1					
ANR	648807	PrimaryExpression	"""sect"""		648710	0					
ANR	648808	Argument	4		648710	2					
ANR	648809	PrimaryExpression	4		648710	0					
ANR	648810	CompoundStatement		11:43:298:298	648710	1					
ANR	648811	ExpressionStatement	SET_NAME ( strdup ( f -> name ) )	739:3:19006:19033	648710	0	True				
ANR	648812	CallExpression	SET_NAME ( strdup ( f -> name ) )		648710	0					
ANR	648813	Callee	SET_NAME		648710	0					
ANR	648814	Identifier	SET_NAME		648710	0					
ANR	648815	ArgumentList	strdup ( f -> name )		648710	1					
ANR	648816	Argument	strdup ( f -> name )		648710	0					
ANR	648817	CallExpression	strdup ( f -> name )		648710	0					
ANR	648818	Callee	strdup		648710	0					
ANR	648819	Identifier	strdup		648710	0					
ANR	648820	ArgumentList	f -> name		648710	1					
ANR	648821	Argument	f -> name		648710	0					
ANR	648822	PtrMemberAccess	f -> name		648710	0					
ANR	648823	Identifier	f		648710	0					
ANR	648824	Identifier	name		648710	1					
ANR	648825	IfStatement	if ( ! is_name_set )		648710	8					
ANR	648826	Condition	! is_name_set	742:5:19047:19058	648710	0	True				
ANR	648827	UnaryOperationExpression	! is_name_set		648710	0					
ANR	648828	UnaryOperator	!		648710	0					
ANR	648829	Identifier	is_name_set		648710	1					
ANR	648830	CompoundStatement		15:19:358:358	648710	1					
ANR	648831	Statement	SET_NAME	743:2:19065:19072	648710	0	True				
ANR	648832	Statement	(	743:11:19074:19074	648710	1	True				
ANR	648833	Statement	r_str_newf	743:12:19075:19084	648710	2	True				
ANR	648834	Statement	(	743:23:19086:19086	648710	3	True				
ANR	648835	Statement	"""%s.%08"""	743:24:19087:19094	648710	4	True				
ANR	648836	Statement	PFMT64x	743:33:19096:19102	648710	5	True				
ANR	648837	Statement	","	743:40:19103:19103	648710	6	True				
ANR	648838	Statement	fcnpfx	743:42:19105:19110	648710	7	True				
ANR	648839	Statement	","	743:48:19111:19111	648710	8	True				
ANR	648840	Statement	fcn	743:50:19113:19115	648710	9	True				
ANR	648841	Statement	->	743:53:19116:19117	648710	10	True				
ANR	648842	Statement	addr	743:55:19118:19121	648710	11	True				
ANR	648843	Statement	)	743:59:19122:19122	648710	12	True				
ANR	648844	Statement	)	743:60:19123:19123	648710	13	True				
ANR	648845	ExpressionStatement		743:61:19124:19124	648710	14	True				
ANR	648846	Statement	undef	746:1:19131:19135	648710	9	True				
ANR	648847	Statement	SET_NAME	746:7:19137:19144	648710	10	True				
ANR	648848	ReturnType	static void		648710	1					
ANR	648849	Identifier	set_fcn_name_from_flag		648710	2					
ANR	648850	ParameterList	"RAnalFunction * fcn , RFlagItem * f , const char * fcnpfx"		648710	3					
ANR	648851	Parameter	RAnalFunction * fcn	728:35:18648:18665	648710	0	True				
ANR	648852	ParameterType	RAnalFunction *		648710	0					
ANR	648853	Identifier	fcn		648710	1					
ANR	648854	Parameter	RFlagItem * f	728:55:18668:18679	648710	1	True				
ANR	648855	ParameterType	RFlagItem *		648710	0					
ANR	648856	Identifier	f		648710	1					
ANR	648857	Parameter	const char * fcnpfx	728:69:18682:18699	648710	2	True				
ANR	648858	ParameterType	const char *		648710	0					
ANR	648859	Identifier	fcnpfx		648710	1					
ANR	648860	CFGEntryNode	ENTRY		648710		True				
ANR	648861	CFGExitNode	EXIT		648710		True				
ANR	648862	Symbol	fcn		648710						
ANR	648863	Symbol	* f		648710						
ANR	648864	Symbol	strncmp		648710						
ANR	648865	Symbol	fcnpfx		648710						
ANR	648866	Symbol	* fcn		648710						
ANR	648867	Symbol	fcn -> name		648710						
ANR	648868	Symbol	f -> name		648710						
ANR	648869	Symbol	f		648710						
ANR	648870	Symbol	false		648710						
ANR	648871	Symbol	is_name_set		648710						
ANR	648872	Symbol	strdup		648710						
ANR	648873	Symbol	newname		648710						
ANR	648874	Function	core_anal_fcn	749:0:19149:25934							
ANR	648875	FunctionDef	"core_anal_fcn (RCore * core , ut64 at , ut64 from , int reftype , int depth)"		648874	0					
ANR	648876	CompoundStatement		749:82:19231:25934	648874	0					
ANR	648877	IfStatement	if ( depth < 0 )		648874	0					
ANR	648878	Condition	depth < 0	750:5:19238:19246	648874	0	True				
ANR	648879	RelationalExpression	depth < 0		648874	0		<			
ANR	648880	Identifier	depth		648874	0					
ANR	648881	PrimaryExpression	0		648874	1					
ANR	648882	CompoundStatement		2:16:17:17	648874	1					
ANR	648883	ReturnStatement	return false ;	753:2:19327:19339	648874	0	True				
ANR	648884	Identifier	false		648874	0					
ANR	648885	IdentifierDeclStatement	"int has_next = r_config_get_i ( core -> config , ""anal.hasnext"" ) ;"	755:1:19345:19405	648874	1	True				
ANR	648886	IdentifierDecl	"has_next = r_config_get_i ( core -> config , ""anal.hasnext"" )"		648874	0					
ANR	648887	IdentifierDeclType	int		648874	0					
ANR	648888	Identifier	has_next		648874	1					
ANR	648889	AssignmentExpression	"has_next = r_config_get_i ( core -> config , ""anal.hasnext"" )"		648874	2		=			
ANR	648890	Identifier	has_next		648874	0					
ANR	648891	CallExpression	"r_config_get_i ( core -> config , ""anal.hasnext"" )"		648874	1					
ANR	648892	Callee	r_config_get_i		648874	0					
ANR	648893	Identifier	r_config_get_i		648874	0					
ANR	648894	ArgumentList	core -> config		648874	1					
ANR	648895	Argument	core -> config		648874	0					
ANR	648896	PtrMemberAccess	core -> config		648874	0					
ANR	648897	Identifier	core		648874	0					
ANR	648898	Identifier	config		648874	1					
ANR	648899	Argument	"""anal.hasnext"""		648874	1					
ANR	648900	PrimaryExpression	"""anal.hasnext"""		648874	0					
ANR	648901	IdentifierDeclStatement	RAnalHint * hint = NULL ;	756:1:19408:19430	648874	2	True				
ANR	648902	IdentifierDecl	* hint = NULL		648874	0					
ANR	648903	IdentifierDeclType	RAnalHint *		648874	0					
ANR	648904	Identifier	hint		648874	1					
ANR	648905	AssignmentExpression	* hint = NULL		648874	2		=			
ANR	648906	Identifier	NULL		648874	0					
ANR	648907	Identifier	NULL		648874	1					
ANR	648908	IdentifierDeclStatement	"int i , nexti = 0 ;"	757:1:19433:19449	648874	3	True				
ANR	648909	IdentifierDecl	i		648874	0					
ANR	648910	IdentifierDeclType	int		648874	0					
ANR	648911	Identifier	i		648874	1					
ANR	648912	IdentifierDecl	nexti = 0		648874	1					
ANR	648913	IdentifierDeclType	int		648874	0					
ANR	648914	Identifier	nexti		648874	1					
ANR	648915	AssignmentExpression	nexti = 0		648874	2		=			
ANR	648916	Identifier	nexti		648874	0					
ANR	648917	PrimaryExpression	0		648874	1					
ANR	648918	IdentifierDeclStatement	ut64 * next = NULL ;	758:1:19452:19469	648874	4	True				
ANR	648919	IdentifierDecl	* next = NULL		648874	0					
ANR	648920	IdentifierDeclType	ut64 *		648874	0					
ANR	648921	Identifier	next		648874	1					
ANR	648922	AssignmentExpression	* next = NULL		648874	2		=			
ANR	648923	Identifier	NULL		648874	0					
ANR	648924	Identifier	NULL		648874	1					
ANR	648925	IdentifierDeclStatement	int fcnlen ;	759:1:19472:19482	648874	5	True				
ANR	648926	IdentifierDecl	fcnlen		648874	0					
ANR	648927	IdentifierDeclType	int		648874	0					
ANR	648928	Identifier	fcnlen		648874	1					
ANR	648929	IdentifierDeclStatement	RAnalFunction * fcn = r_anal_fcn_new ( ) ;	760:1:19485:19523	648874	6	True				
ANR	648930	IdentifierDecl	* fcn = r_anal_fcn_new ( )		648874	0					
ANR	648931	IdentifierDeclType	RAnalFunction *		648874	0					
ANR	648932	Identifier	fcn		648874	1					
ANR	648933	AssignmentExpression	* fcn = r_anal_fcn_new ( )		648874	2		=			
ANR	648934	Identifier	fcn		648874	0					
ANR	648935	CallExpression	r_anal_fcn_new ( )		648874	1					
ANR	648936	Callee	r_anal_fcn_new		648874	0					
ANR	648937	Identifier	r_anal_fcn_new		648874	0					
ANR	648938	ArgumentList			648874	1					
ANR	648939	IdentifierDeclStatement	"const char * fcnpfx = r_config_get ( core -> config , ""anal.fcnprefix"" ) ;"	761:1:19526:19592	648874	7	True				
ANR	648940	IdentifierDecl	"* fcnpfx = r_config_get ( core -> config , ""anal.fcnprefix"" )"		648874	0					
ANR	648941	IdentifierDeclType	const char *		648874	0					
ANR	648942	Identifier	fcnpfx		648874	1					
ANR	648943	AssignmentExpression	"* fcnpfx = r_config_get ( core -> config , ""anal.fcnprefix"" )"		648874	2		=			
ANR	648944	Identifier	fcnpfx		648874	0					
ANR	648945	CallExpression	"r_config_get ( core -> config , ""anal.fcnprefix"" )"		648874	1					
ANR	648946	Callee	r_config_get		648874	0					
ANR	648947	Identifier	r_config_get		648874	0					
ANR	648948	ArgumentList	core -> config		648874	1					
ANR	648949	Argument	core -> config		648874	0					
ANR	648950	PtrMemberAccess	core -> config		648874	0					
ANR	648951	Identifier	core		648874	0					
ANR	648952	Identifier	config		648874	1					
ANR	648953	Argument	"""anal.fcnprefix"""		648874	1					
ANR	648954	PrimaryExpression	"""anal.fcnprefix"""		648874	0					
ANR	648955	IfStatement	if ( ! fcnpfx )		648874	8					
ANR	648956	Condition	! fcnpfx	762:5:19599:19605	648874	0	True				
ANR	648957	UnaryOperationExpression	! fcnpfx		648874	0					
ANR	648958	UnaryOperator	!		648874	0					
ANR	648959	Identifier	fcnpfx		648874	1					
ANR	648960	CompoundStatement		14:14:376:376	648874	1					
ANR	648961	ExpressionStatement	"fcnpfx = ""fcn"""	763:2:19612:19626	648874	0	True				
ANR	648962	AssignmentExpression	"fcnpfx = ""fcn"""		648874	0		=			
ANR	648963	Identifier	fcnpfx		648874	0					
ANR	648964	PrimaryExpression	"""fcn"""		648874	1					
ANR	648965	IfStatement	if ( ! fcn )		648874	9					
ANR	648966	Condition	! fcn	765:5:19636:19639	648874	0	True				
ANR	648967	UnaryOperationExpression	! fcn		648874	0					
ANR	648968	UnaryOperator	!		648874	0					
ANR	648969	Identifier	fcn		648874	1					
ANR	648970	CompoundStatement		17:11:410:410	648874	1					
ANR	648971	ExpressionStatement	"eprintf ( ""Error: new (fcn)\\n"" )"	766:2:19646:19676	648874	0	True				
ANR	648972	CallExpression	"eprintf ( ""Error: new (fcn)\\n"" )"		648874	0					
ANR	648973	Callee	eprintf		648874	0					
ANR	648974	Identifier	eprintf		648874	0					
ANR	648975	ArgumentList	"""Error: new (fcn)\\n"""		648874	1					
ANR	648976	Argument	"""Error: new (fcn)\\n"""		648874	0					
ANR	648977	PrimaryExpression	"""Error: new (fcn)\\n"""		648874	0					
ANR	648978	ReturnStatement	return false ;	767:2:19680:19692	648874	1	True				
ANR	648979	Identifier	false		648874	0					
ANR	648980	ExpressionStatement	fcn -> cc = r_str_const ( r_anal_cc_default ( core -> anal ) )	769:1:19698:19752	648874	10	True				
ANR	648981	AssignmentExpression	fcn -> cc = r_str_const ( r_anal_cc_default ( core -> anal ) )		648874	0		=			
ANR	648982	PtrMemberAccess	fcn -> cc		648874	0					
ANR	648983	Identifier	fcn		648874	0					
ANR	648984	Identifier	cc		648874	1					
ANR	648985	CallExpression	r_str_const ( r_anal_cc_default ( core -> anal ) )		648874	1					
ANR	648986	Callee	r_str_const		648874	0					
ANR	648987	Identifier	r_str_const		648874	0					
ANR	648988	ArgumentList	r_anal_cc_default ( core -> anal )		648874	1					
ANR	648989	Argument	r_anal_cc_default ( core -> anal )		648874	0					
ANR	648990	CallExpression	r_anal_cc_default ( core -> anal )		648874	0					
ANR	648991	Callee	r_anal_cc_default		648874	0					
ANR	648992	Identifier	r_anal_cc_default		648874	0					
ANR	648993	ArgumentList	core -> anal		648874	1					
ANR	648994	Argument	core -> anal		648874	0					
ANR	648995	PtrMemberAccess	core -> anal		648874	0					
ANR	648996	Identifier	core		648874	0					
ANR	648997	Identifier	anal		648874	1					
ANR	648998	ExpressionStatement	"hint = r_anal_hint_get ( core -> anal , at )"	770:1:19755:19794	648874	11	True				
ANR	648999	AssignmentExpression	"hint = r_anal_hint_get ( core -> anal , at )"		648874	0		=			
ANR	649000	Identifier	hint		648874	0					
ANR	649001	CallExpression	"r_anal_hint_get ( core -> anal , at )"		648874	1					
ANR	649002	Callee	r_anal_hint_get		648874	0					
ANR	649003	Identifier	r_anal_hint_get		648874	0					
ANR	649004	ArgumentList	core -> anal		648874	1					
ANR	649005	Argument	core -> anal		648874	0					
ANR	649006	PtrMemberAccess	core -> anal		648874	0					
ANR	649007	Identifier	core		648874	0					
ANR	649008	Identifier	anal		648874	1					
ANR	649009	Argument	at		648874	1					
ANR	649010	Identifier	at		648874	0					
ANR	649011	IfStatement	if ( hint && hint -> bits == 16 )		648874	12					
ANR	649012	Condition	hint && hint -> bits == 16	771:5:19801:19824	648874	0	True				
ANR	649013	AndExpression	hint && hint -> bits == 16		648874	0		&&			
ANR	649014	Identifier	hint		648874	0					
ANR	649015	EqualityExpression	hint -> bits == 16		648874	1		==			
ANR	649016	PtrMemberAccess	hint -> bits		648874	0					
ANR	649017	Identifier	hint		648874	0					
ANR	649018	Identifier	bits		648874	1					
ANR	649019	PrimaryExpression	16		648874	1					
ANR	649020	CompoundStatement		23:31:595:595	648874	1					
ANR	649021	ExpressionStatement	fcn -> bits = 16	773:2:19862:19876	648874	0	True				
ANR	649022	AssignmentExpression	fcn -> bits = 16		648874	0		=			
ANR	649023	PtrMemberAccess	fcn -> bits		648874	0					
ANR	649024	Identifier	fcn		648874	0					
ANR	649025	Identifier	bits		648874	1					
ANR	649026	PrimaryExpression	16		648874	1					
ANR	649027	ElseStatement	else		648874	0					
ANR	649028	CompoundStatement		26:8:654:654	648874	0					
ANR	649029	ExpressionStatement	fcn -> bits = core -> anal -> bits	775:2:19890:19918	648874	0	True				
ANR	649030	AssignmentExpression	fcn -> bits = core -> anal -> bits		648874	0		=			
ANR	649031	PtrMemberAccess	fcn -> bits		648874	0					
ANR	649032	Identifier	fcn		648874	0					
ANR	649033	Identifier	bits		648874	1					
ANR	649034	PtrMemberAccess	core -> anal -> bits		648874	1					
ANR	649035	PtrMemberAccess	core -> anal		648874	0					
ANR	649036	Identifier	core		648874	0					
ANR	649037	Identifier	anal		648874	1					
ANR	649038	Identifier	bits		648874	1					
ANR	649039	ExpressionStatement	fcn -> addr = at	777:1:19924:19938	648874	13	True				
ANR	649040	AssignmentExpression	fcn -> addr = at		648874	0		=			
ANR	649041	PtrMemberAccess	fcn -> addr		648874	0					
ANR	649042	Identifier	fcn		648874	0					
ANR	649043	Identifier	addr		648874	1					
ANR	649044	Identifier	at		648874	1					
ANR	649045	ExpressionStatement	"r_anal_fcn_set_size ( NULL , fcn , 0 )"	778:1:19941:19975	648874	14	True				
ANR	649046	CallExpression	"r_anal_fcn_set_size ( NULL , fcn , 0 )"		648874	0					
ANR	649047	Callee	r_anal_fcn_set_size		648874	0					
ANR	649048	Identifier	r_anal_fcn_set_size		648874	0					
ANR	649049	ArgumentList	NULL		648874	1					
ANR	649050	Argument	NULL		648874	0					
ANR	649051	Identifier	NULL		648874	0					
ANR	649052	Argument	fcn		648874	1					
ANR	649053	Identifier	fcn		648874	0					
ANR	649054	Argument	0		648874	2					
ANR	649055	PrimaryExpression	0		648874	0					
ANR	649056	ExpressionStatement	"fcn -> name = getFunctionName ( core , at )"	779:1:19978:20016	648874	15	True				
ANR	649057	AssignmentExpression	"fcn -> name = getFunctionName ( core , at )"		648874	0		=			
ANR	649058	PtrMemberAccess	fcn -> name		648874	0					
ANR	649059	Identifier	fcn		648874	0					
ANR	649060	Identifier	name		648874	1					
ANR	649061	CallExpression	"getFunctionName ( core , at )"		648874	1					
ANR	649062	Callee	getFunctionName		648874	0					
ANR	649063	Identifier	getFunctionName		648874	0					
ANR	649064	ArgumentList	core		648874	1					
ANR	649065	Argument	core		648874	0					
ANR	649066	Identifier	core		648874	0					
ANR	649067	Argument	at		648874	1					
ANR	649068	Identifier	at		648874	0					
ANR	649069	IfStatement	if ( ! fcn -> name )		648874	16					
ANR	649070	Condition	! fcn -> name	781:5:20024:20033	648874	0	True				
ANR	649071	UnaryOperationExpression	! fcn -> name		648874	0					
ANR	649072	UnaryOperator	!		648874	0					
ANR	649073	PtrMemberAccess	fcn -> name		648874	1					
ANR	649074	Identifier	fcn		648874	0					
ANR	649075	Identifier	name		648874	1					
ANR	649076	CompoundStatement		33:17:804:804	648874	1					
ANR	649077	Statement	fcn	782:2:20040:20042	648874	0	True				
ANR	649078	Statement	->	782:5:20043:20044	648874	1	True				
ANR	649079	Statement	name	782:7:20045:20048	648874	2	True				
ANR	649080	Statement	=	782:12:20050:20050	648874	3	True				
ANR	649081	Statement	r_str_newf	782:14:20052:20061	648874	4	True				
ANR	649082	Statement	(	782:25:20063:20063	648874	5	True				
ANR	649083	Statement	"""%s.%08"""	782:26:20064:20071	648874	6	True				
ANR	649084	Statement	PFMT64x	782:34:20072:20078	648874	7	True				
ANR	649085	Statement	","	782:41:20079:20079	648874	8	True				
ANR	649086	Statement	fcnpfx	782:43:20081:20086	648874	9	True				
ANR	649087	Statement	","	782:49:20087:20087	648874	10	True				
ANR	649088	Statement	at	782:51:20089:20090	648874	11	True				
ANR	649089	Statement	)	782:53:20091:20091	648874	12	True				
ANR	649090	ExpressionStatement		782:54:20092:20092	648874	13	True				
ANR	649091	ExpressionStatement	r_anal_fcn_invalidate_read_ahead_cache ( )	784:1:20098:20139	648874	17	True				
ANR	649092	CallExpression	r_anal_fcn_invalidate_read_ahead_cache ( )		648874	0					
ANR	649093	Callee	r_anal_fcn_invalidate_read_ahead_cache		648874	0					
ANR	649094	Identifier	r_anal_fcn_invalidate_read_ahead_cache		648874	0					
ANR	649095	ArgumentList			648874	1					
ANR	649096	DoStatement	do		648874	18					
ANR	649097	CompoundStatement		39:2:933:966	648874	0					
ANR	649098	IdentifierDeclStatement	RFlagItem * f ;	786:2:20149:20161	648874	0	True				
ANR	649099	IdentifierDecl	* f		648874	0					
ANR	649100	IdentifierDeclType	RFlagItem *		648874	0					
ANR	649101	Identifier	f		648874	1					
ANR	649102	IdentifierDeclStatement	int delta = r_anal_fcn_size ( fcn ) ;	787:2:20165:20198	648874	1	True				
ANR	649103	IdentifierDecl	delta = r_anal_fcn_size ( fcn )		648874	0					
ANR	649104	IdentifierDeclType	int		648874	0					
ANR	649105	Identifier	delta		648874	1					
ANR	649106	AssignmentExpression	delta = r_anal_fcn_size ( fcn )		648874	2		=			
ANR	649107	Identifier	delta		648874	0					
ANR	649108	CallExpression	r_anal_fcn_size ( fcn )		648874	1					
ANR	649109	Callee	r_anal_fcn_size		648874	0					
ANR	649110	Identifier	r_anal_fcn_size		648874	0					
ANR	649111	ArgumentList	fcn		648874	1					
ANR	649112	Argument	fcn		648874	0					
ANR	649113	Identifier	fcn		648874	0					
ANR	649114	IfStatement	if ( core -> io -> va )		648874	2					
ANR	649115	Condition	core -> io -> va	789:6:20240:20251	648874	0	True				
ANR	649116	PtrMemberAccess	core -> io -> va		648874	0					
ANR	649117	PtrMemberAccess	core -> io		648874	0					
ANR	649118	Identifier	core		648874	0					
ANR	649119	Identifier	io		648874	1					
ANR	649120	Identifier	va		648874	1					
ANR	649121	CompoundStatement		41:20:1022:1022	648874	1					
ANR	649122	IfStatement	"if ( ! r_io_is_valid_offset ( core -> io , at + delta , ! core -> anal -> opt . noncode ) )"		648874	0					
ANR	649123	Condition	"! r_io_is_valid_offset ( core -> io , at + delta , ! core -> anal -> opt . noncode )"	790:7:20263:20332	648874	0	True				
ANR	649124	UnaryOperationExpression	"! r_io_is_valid_offset ( core -> io , at + delta , ! core -> anal -> opt . noncode )"		648874	0					
ANR	649125	UnaryOperator	!		648874	0					
ANR	649126	CallExpression	"r_io_is_valid_offset ( core -> io , at + delta , ! core -> anal -> opt . noncode )"		648874	1					
ANR	649127	Callee	r_io_is_valid_offset		648874	0					
ANR	649128	Identifier	r_io_is_valid_offset		648874	0					
ANR	649129	ArgumentList	core -> io		648874	1					
ANR	649130	Argument	core -> io		648874	0					
ANR	649131	PtrMemberAccess	core -> io		648874	0					
ANR	649132	Identifier	core		648874	0					
ANR	649133	Identifier	io		648874	1					
ANR	649134	Argument	at + delta		648874	1					
ANR	649135	AdditiveExpression	at + delta		648874	0		+			
ANR	649136	Identifier	at		648874	0					
ANR	649137	Identifier	delta		648874	1					
ANR	649138	Argument	! core -> anal -> opt . noncode		648874	2					
ANR	649139	UnaryOperationExpression	! core -> anal -> opt . noncode		648874	0					
ANR	649140	UnaryOperator	!		648874	0					
ANR	649141	MemberAccess	core -> anal -> opt . noncode		648874	1					
ANR	649142	PtrMemberAccess	core -> anal -> opt		648874	0					
ANR	649143	PtrMemberAccess	core -> anal		648874	0					
ANR	649144	Identifier	core		648874	0					
ANR	649145	Identifier	anal		648874	1					
ANR	649146	Identifier	opt		648874	1					
ANR	649147	Identifier	noncode		648874	1					
ANR	649148	CompoundStatement		42:79:1103:1103	648874	1					
ANR	649149	GotoStatement	goto error ;	791:4:20341:20351	648874	0	True				
ANR	649150	Identifier	error		648874	0					
ANR	649151	ElseStatement	else		648874	0					
ANR	649152	CompoundStatement		45:9:1135:1135	648874	0					
ANR	649153	IfStatement	"if ( ! r_io_is_valid_offset ( core -> io , at + delta , ! core -> anal -> opt . noncode ) )"		648874	0					
ANR	649154	Condition	"! r_io_is_valid_offset ( core -> io , at + delta , ! core -> anal -> opt . noncode )"	794:7:20376:20445	648874	0	True				
ANR	649155	UnaryOperationExpression	"! r_io_is_valid_offset ( core -> io , at + delta , ! core -> anal -> opt . noncode )"		648874	0					
ANR	649156	UnaryOperator	!		648874	0					
ANR	649157	CallExpression	"r_io_is_valid_offset ( core -> io , at + delta , ! core -> anal -> opt . noncode )"		648874	1					
ANR	649158	Callee	r_io_is_valid_offset		648874	0					
ANR	649159	Identifier	r_io_is_valid_offset		648874	0					
ANR	649160	ArgumentList	core -> io		648874	1					
ANR	649161	Argument	core -> io		648874	0					
ANR	649162	PtrMemberAccess	core -> io		648874	0					
ANR	649163	Identifier	core		648874	0					
ANR	649164	Identifier	io		648874	1					
ANR	649165	Argument	at + delta		648874	1					
ANR	649166	AdditiveExpression	at + delta		648874	0		+			
ANR	649167	Identifier	at		648874	0					
ANR	649168	Identifier	delta		648874	1					
ANR	649169	Argument	! core -> anal -> opt . noncode		648874	2					
ANR	649170	UnaryOperationExpression	! core -> anal -> opt . noncode		648874	0					
ANR	649171	UnaryOperator	!		648874	0					
ANR	649172	MemberAccess	core -> anal -> opt . noncode		648874	1					
ANR	649173	PtrMemberAccess	core -> anal -> opt		648874	0					
ANR	649174	PtrMemberAccess	core -> anal		648874	0					
ANR	649175	Identifier	core		648874	0					
ANR	649176	Identifier	anal		648874	1					
ANR	649177	Identifier	opt		648874	1					
ANR	649178	Identifier	noncode		648874	1					
ANR	649179	CompoundStatement		46:79:1216:1216	648874	1					
ANR	649180	GotoStatement	goto error ;	795:4:20454:20464	648874	0	True				
ANR	649181	Identifier	error		648874	0					
ANR	649182	CompoundStatement		53:3:1303:1314	648874	3					
ANR	649183	IdentifierDeclStatement	ut8 buf [ 4 ] ;	801:3:20535:20546	648874	0	True				
ANR	649184	IdentifierDecl	buf [ 4 ]		648874	0					
ANR	649185	IdentifierDeclType	ut8 [ 4 ]		648874	0					
ANR	649186	Identifier	buf		648874	1					
ANR	649187	PrimaryExpression	4		648874	2					
ANR	649188	IfStatement	"if ( ! r_io_read_at ( core -> io , at + delta , buf , 4 ) )"		648874	1					
ANR	649189	Condition	"! r_io_read_at ( core -> io , at + delta , buf , 4 )"	802:7:20555:20598	648874	0	True				
ANR	649190	UnaryOperationExpression	"! r_io_read_at ( core -> io , at + delta , buf , 4 )"		648874	0					
ANR	649191	UnaryOperator	!		648874	0					
ANR	649192	CallExpression	"r_io_read_at ( core -> io , at + delta , buf , 4 )"		648874	1					
ANR	649193	Callee	r_io_read_at		648874	0					
ANR	649194	Identifier	r_io_read_at		648874	0					
ANR	649195	ArgumentList	core -> io		648874	1					
ANR	649196	Argument	core -> io		648874	0					
ANR	649197	PtrMemberAccess	core -> io		648874	0					
ANR	649198	Identifier	core		648874	0					
ANR	649199	Identifier	io		648874	1					
ANR	649200	Argument	at + delta		648874	1					
ANR	649201	AdditiveExpression	at + delta		648874	0		+			
ANR	649202	Identifier	at		648874	0					
ANR	649203	Identifier	delta		648874	1					
ANR	649204	Argument	buf		648874	2					
ANR	649205	Identifier	buf		648874	0					
ANR	649206	Argument	4		648874	3					
ANR	649207	PrimaryExpression	4		648874	0					
ANR	649208	CompoundStatement		54:53:1369:1369	648874	1					
ANR	649209	GotoStatement	goto error ;	803:4:20607:20617	648874	0	True				
ANR	649210	Identifier	error		648874	0					
ANR	649211	IfStatement	if ( r_cons_is_breaked ( ) )		648874	4					
ANR	649212	Condition	r_cons_is_breaked ( )	807:6:20641:20660	648874	0	True				
ANR	649213	CallExpression	r_cons_is_breaked ( )		648874	0					
ANR	649214	Callee	r_cons_is_breaked		648874	0					
ANR	649215	Identifier	r_cons_is_breaked		648874	0					
ANR	649216	ArgumentList			648874	1					
ANR	649217	CompoundStatement		59:28:1431:1431	648874	1					
ANR	649218	BreakStatement	break ;	808:3:20668:20673	648874	0	True				
ANR	649219	ExpressionStatement	"fcnlen = r_anal_fcn ( core -> anal , fcn , at + delta , core -> anal -> opt . bb_max_size , reftype )"	810:2:20681:20768	648874	5	True				
ANR	649220	AssignmentExpression	"fcnlen = r_anal_fcn ( core -> anal , fcn , at + delta , core -> anal -> opt . bb_max_size , reftype )"		648874	0		=			
ANR	649221	Identifier	fcnlen		648874	0					
ANR	649222	CallExpression	"r_anal_fcn ( core -> anal , fcn , at + delta , core -> anal -> opt . bb_max_size , reftype )"		648874	1					
ANR	649223	Callee	r_anal_fcn		648874	0					
ANR	649224	Identifier	r_anal_fcn		648874	0					
ANR	649225	ArgumentList	core -> anal		648874	1					
ANR	649226	Argument	core -> anal		648874	0					
ANR	649227	PtrMemberAccess	core -> anal		648874	0					
ANR	649228	Identifier	core		648874	0					
ANR	649229	Identifier	anal		648874	1					
ANR	649230	Argument	fcn		648874	1					
ANR	649231	Identifier	fcn		648874	0					
ANR	649232	Argument	at + delta		648874	2					
ANR	649233	AdditiveExpression	at + delta		648874	0		+			
ANR	649234	Identifier	at		648874	0					
ANR	649235	Identifier	delta		648874	1					
ANR	649236	Argument	core -> anal -> opt . bb_max_size		648874	3					
ANR	649237	MemberAccess	core -> anal -> opt . bb_max_size		648874	0					
ANR	649238	PtrMemberAccess	core -> anal -> opt		648874	0					
ANR	649239	PtrMemberAccess	core -> anal		648874	0					
ANR	649240	Identifier	core		648874	0					
ANR	649241	Identifier	anal		648874	1					
ANR	649242	Identifier	opt		648874	1					
ANR	649243	Identifier	bb_max_size		648874	1					
ANR	649244	Argument	reftype		648874	4					
ANR	649245	Identifier	reftype		648874	0					
ANR	649246	IfStatement	if ( core -> anal -> opt . searchstringrefs )		648874	6					
ANR	649247	Condition	core -> anal -> opt . searchstringrefs	811:6:20776:20807	648874	0	True				
ANR	649248	MemberAccess	core -> anal -> opt . searchstringrefs		648874	0					
ANR	649249	PtrMemberAccess	core -> anal -> opt		648874	0					
ANR	649250	PtrMemberAccess	core -> anal		648874	0					
ANR	649251	Identifier	core		648874	0					
ANR	649252	Identifier	anal		648874	1					
ANR	649253	Identifier	opt		648874	1					
ANR	649254	Identifier	searchstringrefs		648874	1					
ANR	649255	CompoundStatement		63:40:1578:1578	648874	1					
ANR	649256	ExpressionStatement	"r_anal_set_stringrefs ( core , fcn )"	812:3:20815:20848	648874	0	True				
ANR	649257	CallExpression	"r_anal_set_stringrefs ( core , fcn )"		648874	0					
ANR	649258	Callee	r_anal_set_stringrefs		648874	0					
ANR	649259	Identifier	r_anal_set_stringrefs		648874	0					
ANR	649260	ArgumentList	core		648874	1					
ANR	649261	Argument	core		648874	0					
ANR	649262	Identifier	core		648874	0					
ANR	649263	Argument	fcn		648874	1					
ANR	649264	Identifier	fcn		648874	0					
ANR	649265	IfStatement	if ( fcnlen == 0 )		648874	7					
ANR	649266	Condition	fcnlen == 0	814:6:20860:20870	648874	0	True				
ANR	649267	EqualityExpression	fcnlen == 0		648874	0		==			
ANR	649268	Identifier	fcnlen		648874	0					
ANR	649269	PrimaryExpression	0		648874	1					
ANR	649270	CompoundStatement		66:19:1641:1641	648874	1					
ANR	649271	Statement	eprintf	815:3:20878:20884	648874	0	True				
ANR	649272	Statement	(	815:11:20886:20886	648874	1	True				
ANR	649273	Statement	"""Cannot analyze at 0x%08"""	815:12:20887:20911	648874	2	True				
ANR	649274	Statement	PFMT64x	815:37:20912:20918	648874	3	True				
ANR	649275	Statement	"""\\n"""	815:44:20919:20922	648874	4	True				
ANR	649276	Statement	","	815:48:20923:20923	648874	5	True				
ANR	649277	Statement	at	815:50:20925:20926	648874	6	True				
ANR	649278	Statement	+	815:53:20928:20928	648874	7	True				
ANR	649279	Statement	delta	815:55:20930:20934	648874	8	True				
ANR	649280	Statement	)	815:60:20935:20935	648874	9	True				
ANR	649281	ExpressionStatement		815:61:20936:20936	648874	10	True				
ANR	649282	GotoStatement	goto error ;	816:3:20941:20951	648874	11	True				
ANR	649283	Identifier	error		648874	0					
ANR	649284	IfStatement	if ( fcnlen < 0 )		648874	8					
ANR	649285	Condition	fcnlen < 0	818:6:20963:20972	648874	0	True				
ANR	649286	RelationalExpression	fcnlen < 0		648874	0		<			
ANR	649287	Identifier	fcnlen		648874	0					
ANR	649288	PrimaryExpression	0		648874	1					
ANR	649289	CompoundStatement		70:18:1743:1743	648874	1					
ANR	649290	SwitchStatement	switch ( fcnlen )		648874	0					
ANR	649291	Condition	fcnlen	819:11:20988:20993	648874	0	True				
ANR	649292	Identifier	fcnlen		648874	0					
ANR	649293	CompoundStatement		71:19:1764:1764	648874	1					
ANR	649294	Label	case R_ANAL_RET_ERROR :	820:3:21001:21022	648874	0	True				
ANR	649295	Identifier	R_ANAL_RET_ERROR		648874	0					
ANR	649296	Label	case R_ANAL_RET_NEW :	821:3:21027:21046	648874	1	True				
ANR	649297	Identifier	R_ANAL_RET_NEW		648874	0					
ANR	649298	Label	case R_ANAL_RET_DUP :	822:3:21051:21070	648874	2	True				
ANR	649299	Identifier	R_ANAL_RET_DUP		648874	0					
ANR	649300	Label	case R_ANAL_RET_END :	823:3:21075:21094	648874	3	True				
ANR	649301	Identifier	R_ANAL_RET_END		648874	0					
ANR	649302	BreakStatement	break ;	824:4:21100:21105	648874	4	True				
ANR	649303	Label	default :	825:3:21110:21117	648874	5	True				
ANR	649304	Identifier	default		648874	0					
ANR	649305	Statement	eprintf	826:4:21123:21129	648874	6	True				
ANR	649306	Statement	(	826:12:21131:21131	648874	7	True				
ANR	649307	Statement	"""Oops. Negative fcnsize at 0x%08"""	826:13:21132:21164	648874	8	True				
ANR	649308	Statement	PFMT64x	826:46:21165:21171	648874	9	True				
ANR	649309	Statement	""" (%d)\\n"""	826:53:21172:21180	648874	10	True				
ANR	649310	Statement	","	826:62:21181:21181	648874	11	True				
ANR	649311	Statement	at	826:64:21183:21184	648874	12	True				
ANR	649312	Statement	","	826:66:21185:21185	648874	13	True				
ANR	649313	Statement	fcnlen	826:68:21187:21192	648874	14	True				
ANR	649314	Statement	)	826:74:21193:21193	648874	15	True				
ANR	649315	ExpressionStatement		826:75:21194:21194	648874	16	True				
ANR	649316	ContinueStatement	continue ;	827:4:21200:21208	648874	17	True				
ANR	649317	ExpressionStatement	"f = r_core_flag_get_by_spaces ( core -> flags , fcn -> addr )"	830:2:21221:21275	648874	9	True				
ANR	649318	AssignmentExpression	"f = r_core_flag_get_by_spaces ( core -> flags , fcn -> addr )"		648874	0		=			
ANR	649319	Identifier	f		648874	0					
ANR	649320	CallExpression	"r_core_flag_get_by_spaces ( core -> flags , fcn -> addr )"		648874	1					
ANR	649321	Callee	r_core_flag_get_by_spaces		648874	0					
ANR	649322	Identifier	r_core_flag_get_by_spaces		648874	0					
ANR	649323	ArgumentList	core -> flags		648874	1					
ANR	649324	Argument	core -> flags		648874	0					
ANR	649325	PtrMemberAccess	core -> flags		648874	0					
ANR	649326	Identifier	core		648874	0					
ANR	649327	Identifier	flags		648874	1					
ANR	649328	Argument	fcn -> addr		648874	1					
ANR	649329	PtrMemberAccess	fcn -> addr		648874	0					
ANR	649330	Identifier	fcn		648874	0					
ANR	649331	Identifier	addr		648874	1					
ANR	649332	ExpressionStatement	"set_fcn_name_from_flag ( fcn , f , fcnpfx )"	831:2:21279:21318	648874	10	True				
ANR	649333	CallExpression	"set_fcn_name_from_flag ( fcn , f , fcnpfx )"		648874	0					
ANR	649334	Callee	set_fcn_name_from_flag		648874	0					
ANR	649335	Identifier	set_fcn_name_from_flag		648874	0					
ANR	649336	ArgumentList	fcn		648874	1					
ANR	649337	Argument	fcn		648874	0					
ANR	649338	Identifier	fcn		648874	0					
ANR	649339	Argument	f		648874	1					
ANR	649340	Identifier	f		648874	0					
ANR	649341	Argument	fcnpfx		648874	2					
ANR	649342	Identifier	fcnpfx		648874	0					
ANR	649343	IfStatement	if ( fcnlen == R_ANAL_RET_ERROR || ( fcnlen == R_ANAL_RET_END && r_anal_fcn_size ( fcn ) < 1 ) )		648874	11					
ANR	649344	Condition	fcnlen == R_ANAL_RET_ERROR || ( fcnlen == R_ANAL_RET_END && r_anal_fcn_size ( fcn ) < 1 )	833:6:21327:21414	648874	0	True				
ANR	649345	OrExpression	fcnlen == R_ANAL_RET_ERROR || ( fcnlen == R_ANAL_RET_END && r_anal_fcn_size ( fcn ) < 1 )		648874	0		||			
ANR	649346	EqualityExpression	fcnlen == R_ANAL_RET_ERROR		648874	0		==			
ANR	649347	Identifier	fcnlen		648874	0					
ANR	649348	Identifier	R_ANAL_RET_ERROR		648874	1					
ANR	649349	AndExpression	fcnlen == R_ANAL_RET_END && r_anal_fcn_size ( fcn ) < 1		648874	1		&&			
ANR	649350	EqualityExpression	fcnlen == R_ANAL_RET_END		648874	0		==			
ANR	649351	Identifier	fcnlen		648874	0					
ANR	649352	Identifier	R_ANAL_RET_END		648874	1					
ANR	649353	RelationalExpression	r_anal_fcn_size ( fcn ) < 1		648874	1		<			
ANR	649354	CallExpression	r_anal_fcn_size ( fcn )		648874	0					
ANR	649355	Callee	r_anal_fcn_size		648874	0					
ANR	649356	Identifier	r_anal_fcn_size		648874	0					
ANR	649357	ArgumentList	fcn		648874	1					
ANR	649358	Argument	fcn		648874	0					
ANR	649359	Identifier	fcn		648874	0					
ANR	649360	PrimaryExpression	1		648874	1					
ANR	649361	CompoundStatement		86:60:2185:2185	648874	1					
ANR	649362	IfStatement	if ( core -> anal -> opt . followbrokenfcnsrefs )		648874	0					
ANR	649363	Condition	core -> anal -> opt . followbrokenfcnsrefs	835:7:21457:21492	648874	0	True				
ANR	649364	MemberAccess	core -> anal -> opt . followbrokenfcnsrefs		648874	0					
ANR	649365	PtrMemberAccess	core -> anal -> opt		648874	0					
ANR	649366	PtrMemberAccess	core -> anal		648874	0					
ANR	649367	Identifier	core		648874	0					
ANR	649368	Identifier	anal		648874	1					
ANR	649369	Identifier	opt		648874	1					
ANR	649370	Identifier	followbrokenfcnsrefs		648874	1					
ANR	649371	CompoundStatement		87:45:2263:2263	648874	1					
ANR	649372	ExpressionStatement	"r_anal_analyze_fcn_refs ( core , fcn , depth )"	836:4:21501:21543	648874	0	True				
ANR	649373	CallExpression	"r_anal_analyze_fcn_refs ( core , fcn , depth )"		648874	0					
ANR	649374	Callee	r_anal_analyze_fcn_refs		648874	0					
ANR	649375	Identifier	r_anal_analyze_fcn_refs		648874	0					
ANR	649376	ArgumentList	core		648874	1					
ANR	649377	Argument	core		648874	0					
ANR	649378	Identifier	core		648874	0					
ANR	649379	Argument	fcn		648874	1					
ANR	649380	Identifier	fcn		648874	0					
ANR	649381	Argument	depth		648874	2					
ANR	649382	Identifier	depth		648874	0					
ANR	649383	GotoStatement	goto error ;	838:3:21553:21563	648874	1	True				
ANR	649384	Identifier	error		648874	0					
ANR	649385	ElseStatement	else		648874	0					
ANR	649386	IfStatement	if ( fcnlen == R_ANAL_RET_END )		648874	0					
ANR	649387	Condition	fcnlen == R_ANAL_RET_END	839:13:21578:21601	648874	0	True				
ANR	649388	EqualityExpression	fcnlen == R_ANAL_RET_END		648874	0		==			
ANR	649389	Identifier	fcnlen		648874	0					
ANR	649390	Identifier	R_ANAL_RET_END		648874	1					
ANR	649391	CompoundStatement		91:39:2372:2372	648874	1					
ANR	649392	ExpressionStatement	"f = r_core_flag_get_by_spaces ( core -> flags , fcn -> addr )"	840:3:21642:21696	648874	0	True				
ANR	649393	AssignmentExpression	"f = r_core_flag_get_by_spaces ( core -> flags , fcn -> addr )"		648874	0		=			
ANR	649394	Identifier	f		648874	0					
ANR	649395	CallExpression	"r_core_flag_get_by_spaces ( core -> flags , fcn -> addr )"		648874	1					
ANR	649396	Callee	r_core_flag_get_by_spaces		648874	0					
ANR	649397	Identifier	r_core_flag_get_by_spaces		648874	0					
ANR	649398	ArgumentList	core -> flags		648874	1					
ANR	649399	Argument	core -> flags		648874	0					
ANR	649400	PtrMemberAccess	core -> flags		648874	0					
ANR	649401	Identifier	core		648874	0					
ANR	649402	Identifier	flags		648874	1					
ANR	649403	Argument	fcn -> addr		648874	1					
ANR	649404	PtrMemberAccess	fcn -> addr		648874	0					
ANR	649405	Identifier	fcn		648874	0					
ANR	649406	Identifier	addr		648874	1					
ANR	649407	IfStatement	"if ( f && f -> name && strncmp ( f -> name , ""sect"" , 4 ) )"		648874	1					
ANR	649408	Condition	"f && f -> name && strncmp ( f -> name , ""sect"" , 4 )"	841:7:21705:21748	648874	0	True				
ANR	649409	AndExpression	"f && f -> name && strncmp ( f -> name , ""sect"" , 4 )"		648874	0		&&			
ANR	649410	Identifier	f		648874	0					
ANR	649411	AndExpression	"f -> name && strncmp ( f -> name , ""sect"" , 4 )"		648874	1		&&			
ANR	649412	PtrMemberAccess	f -> name		648874	0					
ANR	649413	Identifier	f		648874	0					
ANR	649414	Identifier	name		648874	1					
ANR	649415	CallExpression	"strncmp ( f -> name , ""sect"" , 4 )"		648874	1					
ANR	649416	Callee	strncmp		648874	0					
ANR	649417	Identifier	strncmp		648874	0					
ANR	649418	ArgumentList	f -> name		648874	1					
ANR	649419	Argument	f -> name		648874	0					
ANR	649420	PtrMemberAccess	f -> name		648874	0					
ANR	649421	Identifier	f		648874	0					
ANR	649422	Identifier	name		648874	1					
ANR	649423	Argument	"""sect"""		648874	1					
ANR	649424	PrimaryExpression	"""sect"""		648874	0					
ANR	649425	Argument	4		648874	2					
ANR	649426	PrimaryExpression	4		648874	0					
ANR	649427	CompoundStatement		93:53:2519:2519	648874	1					
ANR	649428	ExpressionStatement	R_FREE ( fcn -> name )	842:4:21793:21811	648874	0	True				
ANR	649429	CallExpression	R_FREE ( fcn -> name )		648874	0					
ANR	649430	Callee	R_FREE		648874	0					
ANR	649431	Identifier	R_FREE		648874	0					
ANR	649432	ArgumentList	fcn -> name		648874	1					
ANR	649433	Argument	fcn -> name		648874	0					
ANR	649434	PtrMemberAccess	fcn -> name		648874	0					
ANR	649435	Identifier	fcn		648874	0					
ANR	649436	Identifier	name		648874	1					
ANR	649437	ExpressionStatement	fcn -> name = strdup ( f -> name )	843:4:21817:21845	648874	1	True				
ANR	649438	AssignmentExpression	fcn -> name = strdup ( f -> name )		648874	0		=			
ANR	649439	PtrMemberAccess	fcn -> name		648874	0					
ANR	649440	Identifier	fcn		648874	0					
ANR	649441	Identifier	name		648874	1					
ANR	649442	CallExpression	strdup ( f -> name )		648874	1					
ANR	649443	Callee	strdup		648874	0					
ANR	649444	Identifier	strdup		648874	0					
ANR	649445	ArgumentList	f -> name		648874	1					
ANR	649446	Argument	f -> name		648874	0					
ANR	649447	PtrMemberAccess	f -> name		648874	0					
ANR	649448	Identifier	f		648874	0					
ANR	649449	Identifier	name		648874	1					
ANR	649450	ElseStatement	else		648874	0					
ANR	649451	CompoundStatement		98:4:2655:2712	648874	0					
ANR	649452	ExpressionStatement	R_FREE ( fcn -> name )	845:4:21863:21881	648874	0	True				
ANR	649453	CallExpression	R_FREE ( fcn -> name )		648874	0					
ANR	649454	Callee	R_FREE		648874	0					
ANR	649455	Identifier	R_FREE		648874	0					
ANR	649456	ArgumentList	fcn -> name		648874	1					
ANR	649457	Argument	fcn -> name		648874	0					
ANR	649458	PtrMemberAccess	fcn -> name		648874	0					
ANR	649459	Identifier	fcn		648874	0					
ANR	649460	Identifier	name		648874	1					
ANR	649461	IdentifierDeclStatement	const char * fcnpfx = r_anal_fcn_type_tostring ( fcn -> type ) ;	846:4:21887:21944	648874	1	True				
ANR	649462	IdentifierDecl	* fcnpfx = r_anal_fcn_type_tostring ( fcn -> type )		648874	0					
ANR	649463	IdentifierDeclType	const char *		648874	0					
ANR	649464	Identifier	fcnpfx		648874	1					
ANR	649465	AssignmentExpression	* fcnpfx = r_anal_fcn_type_tostring ( fcn -> type )		648874	2		=			
ANR	649466	Identifier	fcnpfx		648874	0					
ANR	649467	CallExpression	r_anal_fcn_type_tostring ( fcn -> type )		648874	1					
ANR	649468	Callee	r_anal_fcn_type_tostring		648874	0					
ANR	649469	Identifier	r_anal_fcn_type_tostring		648874	0					
ANR	649470	ArgumentList	fcn -> type		648874	1					
ANR	649471	Argument	fcn -> type		648874	0					
ANR	649472	PtrMemberAccess	fcn -> type		648874	0					
ANR	649473	Identifier	fcn		648874	0					
ANR	649474	Identifier	type		648874	1					
ANR	649475	IfStatement	"if ( ! fcnpfx || ! * fcnpfx || ! strcmp ( fcnpfx , ""fcn"" ) )"		648874	2					
ANR	649476	Condition	"! fcnpfx || ! * fcnpfx || ! strcmp ( fcnpfx , ""fcn"" )"	847:8:21954:21999	648874	0	True				
ANR	649477	OrExpression	"! fcnpfx || ! * fcnpfx || ! strcmp ( fcnpfx , ""fcn"" )"		648874	0		||			
ANR	649478	UnaryOperationExpression	! fcnpfx		648874	0					
ANR	649479	UnaryOperator	!		648874	0					
ANR	649480	Identifier	fcnpfx		648874	1					
ANR	649481	OrExpression	"! * fcnpfx || ! strcmp ( fcnpfx , ""fcn"" )"		648874	1		||			
ANR	649482	UnaryOperationExpression	! * fcnpfx		648874	0					
ANR	649483	UnaryOperator	!		648874	0					
ANR	649484	UnaryOperationExpression	* fcnpfx		648874	1					
ANR	649485	UnaryOperator	*		648874	0					
ANR	649486	Identifier	fcnpfx		648874	1					
ANR	649487	UnaryOperationExpression	"! strcmp ( fcnpfx , ""fcn"" )"		648874	1					
ANR	649488	UnaryOperator	!		648874	0					
ANR	649489	CallExpression	"strcmp ( fcnpfx , ""fcn"" )"		648874	1					
ANR	649490	Callee	strcmp		648874	0					
ANR	649491	Identifier	strcmp		648874	0					
ANR	649492	ArgumentList	fcnpfx		648874	1					
ANR	649493	Argument	fcnpfx		648874	0					
ANR	649494	Identifier	fcnpfx		648874	0					
ANR	649495	Argument	"""fcn"""		648874	1					
ANR	649496	PrimaryExpression	"""fcn"""		648874	0					
ANR	649497	CompoundStatement		99:56:2770:2770	648874	1					
ANR	649498	ExpressionStatement	"fcnpfx = r_config_get ( core -> config , ""anal.fcnprefix"" )"	848:5:22009:22063	648874	0	True				
ANR	649499	AssignmentExpression	"fcnpfx = r_config_get ( core -> config , ""anal.fcnprefix"" )"		648874	0		=			
ANR	649500	Identifier	fcnpfx		648874	0					
ANR	649501	CallExpression	"r_config_get ( core -> config , ""anal.fcnprefix"" )"		648874	1					
ANR	649502	Callee	r_config_get		648874	0					
ANR	649503	Identifier	r_config_get		648874	0					
ANR	649504	ArgumentList	core -> config		648874	1					
ANR	649505	Argument	core -> config		648874	0					
ANR	649506	PtrMemberAccess	core -> config		648874	0					
ANR	649507	Identifier	core		648874	0					
ANR	649508	Identifier	config		648874	1					
ANR	649509	Argument	"""anal.fcnprefix"""		648874	1					
ANR	649510	PrimaryExpression	"""anal.fcnprefix"""		648874	0					
ANR	649511	Statement	fcn	850:4:22075:22077	648874	3	True				
ANR	649512	Statement	->	850:7:22078:22079	648874	4	True				
ANR	649513	Statement	name	850:9:22080:22083	648874	5	True				
ANR	649514	Statement	=	850:14:22085:22085	648874	6	True				
ANR	649515	Statement	r_str_newf	850:16:22087:22096	648874	7	True				
ANR	649516	Statement	(	850:27:22098:22098	648874	8	True				
ANR	649517	Statement	"""%s.%08"""	850:28:22099:22106	648874	9	True				
ANR	649518	Statement	PFMT64x	850:36:22107:22113	648874	10	True				
ANR	649519	Statement	","	850:43:22114:22114	648874	11	True				
ANR	649520	Statement	fcnpfx	850:45:22116:22121	648874	12	True				
ANR	649521	Statement	","	850:51:22122:22122	648874	13	True				
ANR	649522	Statement	fcn	850:53:22124:22126	648874	14	True				
ANR	649523	Statement	->	850:56:22127:22128	648874	15	True				
ANR	649524	Statement	addr	850:58:22129:22132	648874	16	True				
ANR	649525	Statement	)	850:62:22133:22133	648874	17	True				
ANR	649526	ExpressionStatement		850:63:22134:22134	648874	18	True				
ANR	649527	ExpressionStatement	"autoname_imp_trampoline ( core , fcn )"	851:4:22140:22175	648874	19	True				
ANR	649528	CallExpression	"autoname_imp_trampoline ( core , fcn )"		648874	0					
ANR	649529	Callee	autoname_imp_trampoline		648874	0					
ANR	649530	Identifier	autoname_imp_trampoline		648874	0					
ANR	649531	ArgumentList	core		648874	1					
ANR	649532	Argument	core		648874	0					
ANR	649533	Identifier	core		648874	0					
ANR	649534	Argument	fcn		648874	1					
ANR	649535	Identifier	fcn		648874	0					
ANR	649536	ExpressionStatement	"r_flag_space_push ( core -> flags , R_FLAGS_FS_FUNCTIONS )"	853:4:22200:22253	648874	20	True				
ANR	649537	CallExpression	"r_flag_space_push ( core -> flags , R_FLAGS_FS_FUNCTIONS )"		648874	0					
ANR	649538	Callee	r_flag_space_push		648874	0					
ANR	649539	Identifier	r_flag_space_push		648874	0					
ANR	649540	ArgumentList	core -> flags		648874	1					
ANR	649541	Argument	core -> flags		648874	0					
ANR	649542	PtrMemberAccess	core -> flags		648874	0					
ANR	649543	Identifier	core		648874	0					
ANR	649544	Identifier	flags		648874	1					
ANR	649545	Argument	R_FLAGS_FS_FUNCTIONS		648874	1					
ANR	649546	Identifier	R_FLAGS_FS_FUNCTIONS		648874	0					
ANR	649547	ExpressionStatement	"r_flag_set ( core -> flags , fcn -> name , fcn -> addr , r_anal_fcn_size ( fcn ) )"	854:4:22259:22328	648874	21	True				
ANR	649548	CallExpression	"r_flag_set ( core -> flags , fcn -> name , fcn -> addr , r_anal_fcn_size ( fcn ) )"		648874	0					
ANR	649549	Callee	r_flag_set		648874	0					
ANR	649550	Identifier	r_flag_set		648874	0					
ANR	649551	ArgumentList	core -> flags		648874	1					
ANR	649552	Argument	core -> flags		648874	0					
ANR	649553	PtrMemberAccess	core -> flags		648874	0					
ANR	649554	Identifier	core		648874	0					
ANR	649555	Identifier	flags		648874	1					
ANR	649556	Argument	fcn -> name		648874	1					
ANR	649557	PtrMemberAccess	fcn -> name		648874	0					
ANR	649558	Identifier	fcn		648874	0					
ANR	649559	Identifier	name		648874	1					
ANR	649560	Argument	fcn -> addr		648874	2					
ANR	649561	PtrMemberAccess	fcn -> addr		648874	0					
ANR	649562	Identifier	fcn		648874	0					
ANR	649563	Identifier	addr		648874	1					
ANR	649564	Argument	r_anal_fcn_size ( fcn )		648874	3					
ANR	649565	CallExpression	r_anal_fcn_size ( fcn )		648874	0					
ANR	649566	Callee	r_anal_fcn_size		648874	0					
ANR	649567	Identifier	r_anal_fcn_size		648874	0					
ANR	649568	ArgumentList	fcn		648874	1					
ANR	649569	Argument	fcn		648874	0					
ANR	649570	Identifier	fcn		648874	0					
ANR	649571	ExpressionStatement	r_flag_space_pop ( core -> flags )	855:4:22334:22364	648874	22	True				
ANR	649572	CallExpression	r_flag_space_pop ( core -> flags )		648874	0					
ANR	649573	Callee	r_flag_space_pop		648874	0					
ANR	649574	Identifier	r_flag_space_pop		648874	0					
ANR	649575	ArgumentList	core -> flags		648874	1					
ANR	649576	Argument	core -> flags		648874	0					
ANR	649577	PtrMemberAccess	core -> flags		648874	0					
ANR	649578	Identifier	core		648874	0					
ANR	649579	Identifier	flags		648874	1					
ANR	649580	ExpressionStatement	fcn -> depth = 256	859:3:22496:22512	648874	2	True				
ANR	649581	AssignmentExpression	fcn -> depth = 256		648874	0		=			
ANR	649582	PtrMemberAccess	fcn -> depth		648874	0					
ANR	649583	Identifier	fcn		648874	0					
ANR	649584	Identifier	depth		648874	1					
ANR	649585	PrimaryExpression	256		648874	1					
ANR	649586	ExpressionStatement	"r_core_anal_bb ( core , fcn , fcn -> addr , true )"	860:3:22517:22560	648874	3	True				
ANR	649587	CallExpression	"r_core_anal_bb ( core , fcn , fcn -> addr , true )"		648874	0					
ANR	649588	Callee	r_core_anal_bb		648874	0					
ANR	649589	Identifier	r_core_anal_bb		648874	0					
ANR	649590	ArgumentList	core		648874	1					
ANR	649591	Argument	core		648874	0					
ANR	649592	Identifier	core		648874	0					
ANR	649593	Argument	fcn		648874	1					
ANR	649594	Identifier	fcn		648874	0					
ANR	649595	Argument	fcn -> addr		648874	2					
ANR	649596	PtrMemberAccess	fcn -> addr		648874	0					
ANR	649597	Identifier	fcn		648874	0					
ANR	649598	Identifier	addr		648874	1					
ANR	649599	Argument	true		648874	3					
ANR	649600	Identifier	true		648874	0					
ANR	649601	IfStatement	if ( ! fcn -> depth )		648874	4					
ANR	649602	Condition	! fcn -> depth	862:7:22580:22590	648874	0	True				
ANR	649603	UnaryOperationExpression	! fcn -> depth		648874	0					
ANR	649604	UnaryOperator	!		648874	0					
ANR	649605	PtrMemberAccess	fcn -> depth		648874	1					
ANR	649606	Identifier	fcn		648874	0					
ANR	649607	Identifier	depth		648874	1					
ANR	649608	CompoundStatement		114:20:3361:3361	648874	1					
ANR	649609	Statement	eprintf	863:4:22599:22605	648874	0	True				
ANR	649610	Statement	(	863:12:22607:22607	648874	1	True				
ANR	649611	Statement	"""Analysis depth reached at 0x%08"""	863:13:22608:22640	648874	2	True				
ANR	649612	Statement	PFMT64x	863:46:22641:22647	648874	3	True				
ANR	649613	Statement	"""\\n"""	863:53:22648:22651	648874	4	True				
ANR	649614	Statement	","	863:57:22652:22652	648874	5	True				
ANR	649615	Statement	fcn	863:59:22654:22656	648874	6	True				
ANR	649616	Statement	->	863:62:22657:22658	648874	7	True				
ANR	649617	Statement	addr	863:64:22659:22662	648874	8	True				
ANR	649618	Statement	)	863:68:22663:22663	648874	9	True				
ANR	649619	ExpressionStatement		863:69:22664:22664	648874	10	True				
ANR	649620	ElseStatement	else		648874	0					
ANR	649621	CompoundStatement		116:10:3444:3444	648874	0					
ANR	649622	ExpressionStatement	fcn -> depth = 256 - fcn -> depth	865:4:22682:22711	648874	0	True				
ANR	649623	AssignmentExpression	fcn -> depth = 256 - fcn -> depth		648874	0		=			
ANR	649624	PtrMemberAccess	fcn -> depth		648874	0					
ANR	649625	Identifier	fcn		648874	0					
ANR	649626	Identifier	depth		648874	1					
ANR	649627	AdditiveExpression	256 - fcn -> depth		648874	1		-			
ANR	649628	PrimaryExpression	256		648874	0					
ANR	649629	PtrMemberAccess	fcn -> depth		648874	1					
ANR	649630	Identifier	fcn		648874	0					
ANR	649631	Identifier	depth		648874	1					
ANR	649632	IfStatement	if ( from != UT64_MAX )		648874	5					
ANR	649633	Condition	from != UT64_MAX	869:7:22766:22781	648874	0	True				
ANR	649634	EqualityExpression	from != UT64_MAX		648874	0		!=			
ANR	649635	Identifier	from		648874	0					
ANR	649636	Identifier	UT64_MAX		648874	1					
ANR	649637	CompoundStatement		121:25:3552:3552	648874	1					
ANR	649638	IfStatement	if ( fcn -> type == R_ANAL_FCN_TYPE_LOC )		648874	0					
ANR	649639	Condition	fcn -> type == R_ANAL_FCN_TYPE_LOC	870:8:22794:22825	648874	0	True				
ANR	649640	EqualityExpression	fcn -> type == R_ANAL_FCN_TYPE_LOC		648874	0		==			
ANR	649641	PtrMemberAccess	fcn -> type		648874	0					
ANR	649642	Identifier	fcn		648874	0					
ANR	649643	Identifier	type		648874	1					
ANR	649644	Identifier	R_ANAL_FCN_TYPE_LOC		648874	1					
ANR	649645	CompoundStatement		123:5:3603:3662	648874	1					
ANR	649646	IdentifierDeclStatement	"RAnalFunction * f = r_anal_get_fcn_in ( core -> anal , from , - 1 ) ;"	871:5:22835:22894	648874	0	True				
ANR	649647	IdentifierDecl	"* f = r_anal_get_fcn_in ( core -> anal , from , - 1 )"		648874	0					
ANR	649648	IdentifierDeclType	RAnalFunction *		648874	0					
ANR	649649	Identifier	f		648874	1					
ANR	649650	AssignmentExpression	"* f = r_anal_get_fcn_in ( core -> anal , from , - 1 )"		648874	2		=			
ANR	649651	Identifier	f		648874	0					
ANR	649652	CallExpression	"r_anal_get_fcn_in ( core -> anal , from , - 1 )"		648874	1					
ANR	649653	Callee	r_anal_get_fcn_in		648874	0					
ANR	649654	Identifier	r_anal_get_fcn_in		648874	0					
ANR	649655	ArgumentList	core -> anal		648874	1					
ANR	649656	Argument	core -> anal		648874	0					
ANR	649657	PtrMemberAccess	core -> anal		648874	0					
ANR	649658	Identifier	core		648874	0					
ANR	649659	Identifier	anal		648874	1					
ANR	649660	Argument	from		648874	1					
ANR	649661	Identifier	from		648874	0					
ANR	649662	Argument	- 1		648874	2					
ANR	649663	UnaryOperationExpression	- 1		648874	0					
ANR	649664	UnaryOperator	-		648874	0					
ANR	649665	PrimaryExpression	1		648874	1					
ANR	649666	IfStatement	if ( f )		648874	1					
ANR	649667	Condition	f	872:9:22905:22905	648874	0	True				
ANR	649668	Identifier	f		648874	0					
ANR	649669	CompoundStatement		124:12:3676:3676	648874	1					
ANR	649670	IfStatement	if ( ! f -> fcn_locs )		648874	0					
ANR	649671	Condition	! f -> fcn_locs	873:10:22920:22931	648874	0	True				
ANR	649672	UnaryOperationExpression	! f -> fcn_locs		648874	0					
ANR	649673	UnaryOperator	!		648874	0					
ANR	649674	PtrMemberAccess	f -> fcn_locs		648874	1					
ANR	649675	Identifier	f		648874	0					
ANR	649676	Identifier	fcn_locs		648874	1					
ANR	649677	CompoundStatement		125:24:3702:3702	648874	1					
ANR	649678	ExpressionStatement	f -> fcn_locs = r_list_new ( )	874:7:22943:22970	648874	0	True				
ANR	649679	AssignmentExpression	f -> fcn_locs = r_list_new ( )		648874	0		=			
ANR	649680	PtrMemberAccess	f -> fcn_locs		648874	0					
ANR	649681	Identifier	f		648874	0					
ANR	649682	Identifier	fcn_locs		648874	1					
ANR	649683	CallExpression	r_list_new ( )		648874	1					
ANR	649684	Callee	r_list_new		648874	0					
ANR	649685	Identifier	r_list_new		648874	0					
ANR	649686	ArgumentList			648874	1					
ANR	649687	ExpressionStatement	"r_list_add_sorted ( f -> fcn_locs , fcn , & cmpfcn )"	876:6:22986:23031	648874	1	True				
ANR	649688	CallExpression	"r_list_add_sorted ( f -> fcn_locs , fcn , & cmpfcn )"		648874	0					
ANR	649689	Callee	r_list_add_sorted		648874	0					
ANR	649690	Identifier	r_list_add_sorted		648874	0					
ANR	649691	ArgumentList	f -> fcn_locs		648874	1					
ANR	649692	Argument	f -> fcn_locs		648874	0					
ANR	649693	PtrMemberAccess	f -> fcn_locs		648874	0					
ANR	649694	Identifier	f		648874	0					
ANR	649695	Identifier	fcn_locs		648874	1					
ANR	649696	Argument	fcn		648874	1					
ANR	649697	Identifier	fcn		648874	0					
ANR	649698	Argument	& cmpfcn		648874	2					
ANR	649699	UnaryOperationExpression	& cmpfcn		648874	0					
ANR	649700	UnaryOperator	&		648874	0					
ANR	649701	Identifier	cmpfcn		648874	1					
ANR	649702	ExpressionStatement	"r_anal_xrefs_set ( core -> anal , from , fcn -> addr , reftype )"	879:4:23050:23105	648874	1	True				
ANR	649703	CallExpression	"r_anal_xrefs_set ( core -> anal , from , fcn -> addr , reftype )"		648874	0					
ANR	649704	Callee	r_anal_xrefs_set		648874	0					
ANR	649705	Identifier	r_anal_xrefs_set		648874	0					
ANR	649706	ArgumentList	core -> anal		648874	1					
ANR	649707	Argument	core -> anal		648874	0					
ANR	649708	PtrMemberAccess	core -> anal		648874	0					
ANR	649709	Identifier	core		648874	0					
ANR	649710	Identifier	anal		648874	1					
ANR	649711	Argument	from		648874	1					
ANR	649712	Identifier	from		648874	0					
ANR	649713	Argument	fcn -> addr		648874	2					
ANR	649714	PtrMemberAccess	fcn -> addr		648874	0					
ANR	649715	Identifier	fcn		648874	0					
ANR	649716	Identifier	addr		648874	1					
ANR	649717	Argument	reftype		648874	3					
ANR	649718	Identifier	reftype		648874	0					
ANR	649719	ExpressionStatement	"r_anal_fcn_insert ( core -> anal , fcn )"	882:3:23157:23192	648874	6	True				
ANR	649720	CallExpression	"r_anal_fcn_insert ( core -> anal , fcn )"		648874	0					
ANR	649721	Callee	r_anal_fcn_insert		648874	0					
ANR	649722	Identifier	r_anal_fcn_insert		648874	0					
ANR	649723	ArgumentList	core -> anal		648874	1					
ANR	649724	Argument	core -> anal		648874	0					
ANR	649725	PtrMemberAccess	core -> anal		648874	0					
ANR	649726	Identifier	core		648874	0					
ANR	649727	Identifier	anal		648874	1					
ANR	649728	Argument	fcn		648874	1					
ANR	649729	Identifier	fcn		648874	0					
ANR	649730	IfStatement	if ( has_next )		648874	7					
ANR	649731	Condition	has_next	883:7:23201:23208	648874	0	True				
ANR	649732	Identifier	has_next		648874	0					
ANR	649733	CompoundStatement		137:4:4036:4079	648874	1					
ANR	649734	IdentifierDeclStatement	ut64 addr = fcn -> addr + r_anal_fcn_size ( fcn ) ;	884:4:23217:23262	648874	0	True				
ANR	649735	IdentifierDecl	addr = fcn -> addr + r_anal_fcn_size ( fcn )		648874	0					
ANR	649736	IdentifierDeclType	ut64		648874	0					
ANR	649737	Identifier	addr		648874	1					
ANR	649738	AssignmentExpression	addr = fcn -> addr + r_anal_fcn_size ( fcn )		648874	2		=			
ANR	649739	Identifier	addr		648874	0					
ANR	649740	AdditiveExpression	fcn -> addr + r_anal_fcn_size ( fcn )		648874	1		+			
ANR	649741	PtrMemberAccess	fcn -> addr		648874	0					
ANR	649742	Identifier	fcn		648874	0					
ANR	649743	Identifier	addr		648874	1					
ANR	649744	CallExpression	r_anal_fcn_size ( fcn )		648874	1					
ANR	649745	Callee	r_anal_fcn_size		648874	0					
ANR	649746	Identifier	r_anal_fcn_size		648874	0					
ANR	649747	ArgumentList	fcn		648874	1					
ANR	649748	Argument	fcn		648874	0					
ANR	649749	Identifier	fcn		648874	0					
ANR	649750	IdentifierDeclStatement	"RIOMap * map = r_io_map_get ( core -> io , addr ) ;"	885:4:23268:23311	648874	1	True				
ANR	649751	IdentifierDecl	"* map = r_io_map_get ( core -> io , addr )"		648874	0					
ANR	649752	IdentifierDeclType	RIOMap *		648874	0					
ANR	649753	Identifier	map		648874	1					
ANR	649754	AssignmentExpression	"* map = r_io_map_get ( core -> io , addr )"		648874	2		=			
ANR	649755	Identifier	map		648874	0					
ANR	649756	CallExpression	"r_io_map_get ( core -> io , addr )"		648874	1					
ANR	649757	Callee	r_io_map_get		648874	0					
ANR	649758	Identifier	r_io_map_get		648874	0					
ANR	649759	ArgumentList	core -> io		648874	1					
ANR	649760	Argument	core -> io		648874	0					
ANR	649761	PtrMemberAccess	core -> io		648874	0					
ANR	649762	Identifier	core		648874	0					
ANR	649763	Identifier	io		648874	1					
ANR	649764	Argument	addr		648874	1					
ANR	649765	Identifier	addr		648874	0					
ANR	649766	IfStatement	if ( ! map || ( map && map -> perm & R_PERM_X ) )		648874	2					
ANR	649767	Condition	! map || ( map && map -> perm & R_PERM_X )	887:8:23376:23412	648874	0	True				
ANR	649768	OrExpression	! map || ( map && map -> perm & R_PERM_X )		648874	0		||			
ANR	649769	UnaryOperationExpression	! map		648874	0					
ANR	649770	UnaryOperator	!		648874	0					
ANR	649771	Identifier	map		648874	1					
ANR	649772	AndExpression	map && map -> perm & R_PERM_X		648874	1		&&			
ANR	649773	Identifier	map		648874	0					
ANR	649774	BitAndExpression	map -> perm & R_PERM_X		648874	1		&			
ANR	649775	PtrMemberAccess	map -> perm		648874	0					
ANR	649776	Identifier	map		648874	0					
ANR	649777	Identifier	perm		648874	1					
ANR	649778	Identifier	R_PERM_X		648874	1					
ANR	649779	CompoundStatement		139:47:4183:4183	648874	1					
ANR	649780	ForStatement	for ( i = 0 ; i < nexti ; i ++ )		648874	0					
ANR	649781	ForInit	i = 0 ;	888:10:23427:23432	648874	0	True				
ANR	649782	AssignmentExpression	i = 0		648874	0		=			
ANR	649783	Identifier	i		648874	0					
ANR	649784	PrimaryExpression	0		648874	1					
ANR	649785	Condition	i < nexti	888:17:23434:23442	648874	1	True				
ANR	649786	RelationalExpression	i < nexti		648874	0		<			
ANR	649787	Identifier	i		648874	0					
ANR	649788	Identifier	nexti		648874	1					
ANR	649789	PostIncDecOperationExpression	i ++	888:28:23445:23447	648874	2	True				
ANR	649790	Identifier	i		648874	0					
ANR	649791	IncDec	++		648874	1					
ANR	649792	CompoundStatement		140:33:4218:4218	648874	3					
ANR	649793	IfStatement	if ( next [ i ] == addr )		648874	0					
ANR	649794	Condition	next [ i ] == addr	889:10:23462:23476	648874	0	True				
ANR	649795	EqualityExpression	next [ i ] == addr		648874	0		==			
ANR	649796	ArrayIndexing	next [ i ]		648874	0					
ANR	649797	Identifier	next		648874	0					
ANR	649798	Identifier	i		648874	1					
ANR	649799	Identifier	addr		648874	1					
ANR	649800	CompoundStatement		141:27:4247:4247	648874	1					
ANR	649801	BreakStatement	break ;	890:7:23488:23493	648874	0	True				
ANR	649802	IfStatement	if ( i == nexti )		648874	1					
ANR	649803	Condition	i == nexti	893:9:23519:23528	648874	0	True				
ANR	649804	EqualityExpression	i == nexti		648874	0		==			
ANR	649805	Identifier	i		648874	0					
ANR	649806	Identifier	nexti		648874	1					
ANR	649807	CompoundStatement		146:6:4307:4350	648874	1					
ANR	649808	IdentifierDeclStatement	ut64 at = fcn -> addr + r_anal_fcn_size ( fcn ) ;	894:6:23539:23582	648874	0	True				
ANR	649809	IdentifierDecl	at = fcn -> addr + r_anal_fcn_size ( fcn )		648874	0					
ANR	649810	IdentifierDeclType	ut64		648874	0					
ANR	649811	Identifier	at		648874	1					
ANR	649812	AssignmentExpression	at = fcn -> addr + r_anal_fcn_size ( fcn )		648874	2		=			
ANR	649813	Identifier	at		648874	0					
ANR	649814	AdditiveExpression	fcn -> addr + r_anal_fcn_size ( fcn )		648874	1		+			
ANR	649815	PtrMemberAccess	fcn -> addr		648874	0					
ANR	649816	Identifier	fcn		648874	0					
ANR	649817	Identifier	addr		648874	1					
ANR	649818	CallExpression	r_anal_fcn_size ( fcn )		648874	1					
ANR	649819	Callee	r_anal_fcn_size		648874	0					
ANR	649820	Identifier	r_anal_fcn_size		648874	0					
ANR	649821	ArgumentList	fcn		648874	1					
ANR	649822	Argument	fcn		648874	0					
ANR	649823	Identifier	fcn		648874	0					
ANR	649824	WhileStatement	while ( true )		648874	1					
ANR	649825	Condition	true	895:13:23597:23600	648874	0	True				
ANR	649826	Identifier	true		648874	0					
ANR	649827	CompoundStatement		148:7:4380:4448	648874	1					
ANR	649828	IdentifierDeclStatement	"RAnalMetaItem * mi = r_meta_find ( core -> anal , at , R_META_TYPE_ANY , 0 ) ;"	896:7:23612:23680	648874	0	True				
ANR	649829	IdentifierDecl	"* mi = r_meta_find ( core -> anal , at , R_META_TYPE_ANY , 0 )"		648874	0					
ANR	649830	IdentifierDeclType	RAnalMetaItem *		648874	0					
ANR	649831	Identifier	mi		648874	1					
ANR	649832	AssignmentExpression	"* mi = r_meta_find ( core -> anal , at , R_META_TYPE_ANY , 0 )"		648874	2		=			
ANR	649833	Identifier	mi		648874	0					
ANR	649834	CallExpression	"r_meta_find ( core -> anal , at , R_META_TYPE_ANY , 0 )"		648874	1					
ANR	649835	Callee	r_meta_find		648874	0					
ANR	649836	Identifier	r_meta_find		648874	0					
ANR	649837	ArgumentList	core -> anal		648874	1					
ANR	649838	Argument	core -> anal		648874	0					
ANR	649839	PtrMemberAccess	core -> anal		648874	0					
ANR	649840	Identifier	core		648874	0					
ANR	649841	Identifier	anal		648874	1					
ANR	649842	Argument	at		648874	1					
ANR	649843	Identifier	at		648874	0					
ANR	649844	Argument	R_META_TYPE_ANY		648874	2					
ANR	649845	Identifier	R_META_TYPE_ANY		648874	0					
ANR	649846	Argument	0		648874	3					
ANR	649847	PrimaryExpression	0		648874	0					
ANR	649848	IfStatement	if ( ! mi )		648874	1					
ANR	649849	Condition	! mi	897:11:23693:23695	648874	0	True				
ANR	649850	UnaryOperationExpression	! mi		648874	0					
ANR	649851	UnaryOperator	!		648874	0					
ANR	649852	Identifier	mi		648874	1					
ANR	649853	CompoundStatement		149:16:4466:4466	648874	1					
ANR	649854	BreakStatement	break ;	898:8:23708:23713	648874	0	True				
ANR	649855	ExpressionStatement	at += mi -> size	900:7:23731:23745	648874	2	True				
ANR	649856	AssignmentExpression	at += mi -> size		648874	0		+=			
ANR	649857	Identifier	at		648874	0					
ANR	649858	PtrMemberAccess	mi -> size		648874	1					
ANR	649859	Identifier	mi		648874	0					
ANR	649860	Identifier	size		648874	1					
ANR	649861	ExpressionStatement	r_meta_item_free ( mi )	901:7:23754:23775	648874	3	True				
ANR	649862	CallExpression	r_meta_item_free ( mi )		648874	0					
ANR	649863	Callee	r_meta_item_free		648874	0					
ANR	649864	Identifier	r_meta_item_free		648874	0					
ANR	649865	ArgumentList	mi		648874	1					
ANR	649866	Argument	mi		648874	0					
ANR	649867	Identifier	mi		648874	0					
ANR	649868	ExpressionStatement	r_cons_clear_line ( 1 )	905:6:23943:23964	648874	2	True				
ANR	649869	CallExpression	r_cons_clear_line ( 1 )		648874	0					
ANR	649870	Callee	r_cons_clear_line		648874	0					
ANR	649871	Identifier	r_cons_clear_line		648874	0					
ANR	649872	ArgumentList	1		648874	1					
ANR	649873	Argument	1		648874	0					
ANR	649874	PrimaryExpression	1		648874	0					
ANR	649875	ExpressionStatement	"loganal ( fcn -> addr , at , 10000 - depth )"	906:6:23972:24010	648874	3	True				
ANR	649876	CallExpression	"loganal ( fcn -> addr , at , 10000 - depth )"		648874	0					
ANR	649877	Callee	loganal		648874	0					
ANR	649878	Identifier	loganal		648874	0					
ANR	649879	ArgumentList	fcn -> addr		648874	1					
ANR	649880	Argument	fcn -> addr		648874	0					
ANR	649881	PtrMemberAccess	fcn -> addr		648874	0					
ANR	649882	Identifier	fcn		648874	0					
ANR	649883	Identifier	addr		648874	1					
ANR	649884	Argument	at		648874	1					
ANR	649885	Identifier	at		648874	0					
ANR	649886	Argument	10000 - depth		648874	2					
ANR	649887	AdditiveExpression	10000 - depth		648874	0		-			
ANR	649888	PrimaryExpression	10000		648874	0					
ANR	649889	Identifier	depth		648874	1					
ANR	649890	ExpressionStatement	"next = next_append ( next , & nexti , at )"	907:6:24018:24055	648874	4	True				
ANR	649891	AssignmentExpression	"next = next_append ( next , & nexti , at )"		648874	0		=			
ANR	649892	Identifier	next		648874	0					
ANR	649893	CallExpression	"next_append ( next , & nexti , at )"		648874	1					
ANR	649894	Callee	next_append		648874	0					
ANR	649895	Identifier	next_append		648874	0					
ANR	649896	ArgumentList	next		648874	1					
ANR	649897	Argument	next		648874	0					
ANR	649898	Identifier	next		648874	0					
ANR	649899	Argument	& nexti		648874	1					
ANR	649900	UnaryOperationExpression	& nexti		648874	0					
ANR	649901	UnaryOperator	&		648874	0					
ANR	649902	Identifier	nexti		648874	1					
ANR	649903	Argument	at		648874	2					
ANR	649904	Identifier	at		648874	0					
ANR	649905	IfStatement	"if ( ! r_anal_analyze_fcn_refs ( core , fcn , depth ) )"		648874	8					
ANR	649906	Condition	"! r_anal_analyze_fcn_refs ( core , fcn , depth )"	911:7:24082:24124	648874	0	True				
ANR	649907	UnaryOperationExpression	"! r_anal_analyze_fcn_refs ( core , fcn , depth )"		648874	0					
ANR	649908	UnaryOperator	!		648874	0					
ANR	649909	CallExpression	"r_anal_analyze_fcn_refs ( core , fcn , depth )"		648874	1					
ANR	649910	Callee	r_anal_analyze_fcn_refs		648874	0					
ANR	649911	Identifier	r_anal_analyze_fcn_refs		648874	0					
ANR	649912	ArgumentList	core		648874	1					
ANR	649913	Argument	core		648874	0					
ANR	649914	Identifier	core		648874	0					
ANR	649915	Argument	fcn		648874	1					
ANR	649916	Identifier	fcn		648874	0					
ANR	649917	Argument	depth		648874	2					
ANR	649918	Identifier	depth		648874	0					
ANR	649919	CompoundStatement		163:52:4895:4895	648874	1					
ANR	649920	GotoStatement	goto error ;	912:4:24133:24143	648874	0	True				
ANR	649921	Identifier	error		648874	0					
ANR	649922	Condition	fcnlen != R_ANAL_RET_END	915:10:24164:24187	648874	1	True				
ANR	649923	EqualityExpression	fcnlen != R_ANAL_RET_END		648874	0		!=			
ANR	649924	Identifier	fcnlen		648874	0					
ANR	649925	Identifier	R_ANAL_RET_END		648874	1					
ANR	649926	IfStatement	if ( has_next )		648874	19					
ANR	649927	Condition	has_next	916:5:24196:24203	648874	0	True				
ANR	649928	Identifier	has_next		648874	0					
ANR	649929	CompoundStatement		168:15:4974:4974	648874	1					
ANR	649930	ForStatement	for ( i = 0 ; i < nexti ; i ++ )		648874	0					
ANR	649931	ForInit	i = 0 ;	917:7:24215:24220	648874	0	True				
ANR	649932	AssignmentExpression	i = 0		648874	0		=			
ANR	649933	Identifier	i		648874	0					
ANR	649934	PrimaryExpression	0		648874	1					
ANR	649935	Condition	i < nexti	917:14:24222:24230	648874	1	True				
ANR	649936	RelationalExpression	i < nexti		648874	0		<			
ANR	649937	Identifier	i		648874	0					
ANR	649938	Identifier	nexti		648874	1					
ANR	649939	PostIncDecOperationExpression	i ++	917:25:24233:24235	648874	2	True				
ANR	649940	Identifier	i		648874	0					
ANR	649941	IncDec	++		648874	1					
ANR	649942	CompoundStatement		169:30:5006:5006	648874	3					
ANR	649943	IfStatement	"if ( ! next [ i ] || r_anal_get_fcn_in ( core -> anal , next [ i ] , 0 ) )"		648874	0					
ANR	649944	Condition	"! next [ i ] || r_anal_get_fcn_in ( core -> anal , next [ i ] , 0 )"	918:7:24247:24300	648874	0	True				
ANR	649945	OrExpression	"! next [ i ] || r_anal_get_fcn_in ( core -> anal , next [ i ] , 0 )"		648874	0		||			
ANR	649946	UnaryOperationExpression	! next [ i ]		648874	0					
ANR	649947	UnaryOperator	!		648874	0					
ANR	649948	ArrayIndexing	next [ i ]		648874	1					
ANR	649949	Identifier	next		648874	0					
ANR	649950	Identifier	i		648874	1					
ANR	649951	CallExpression	"r_anal_get_fcn_in ( core -> anal , next [ i ] , 0 )"		648874	1					
ANR	649952	Callee	r_anal_get_fcn_in		648874	0					
ANR	649953	Identifier	r_anal_get_fcn_in		648874	0					
ANR	649954	ArgumentList	core -> anal		648874	1					
ANR	649955	Argument	core -> anal		648874	0					
ANR	649956	PtrMemberAccess	core -> anal		648874	0					
ANR	649957	Identifier	core		648874	0					
ANR	649958	Identifier	anal		648874	1					
ANR	649959	Argument	next [ i ]		648874	1					
ANR	649960	ArrayIndexing	next [ i ]		648874	0					
ANR	649961	Identifier	next		648874	0					
ANR	649962	Identifier	i		648874	1					
ANR	649963	Argument	0		648874	2					
ANR	649964	PrimaryExpression	0		648874	0					
ANR	649965	CompoundStatement		170:63:5071:5071	648874	1					
ANR	649966	ContinueStatement	continue ;	919:4:24309:24317	648874	0	True				
ANR	649967	ExpressionStatement	"r_core_anal_fcn ( core , next [ i ] , from , 0 , depth - 1 )"	921:3:24327:24378	648874	1	True				
ANR	649968	CallExpression	"r_core_anal_fcn ( core , next [ i ] , from , 0 , depth - 1 )"		648874	0					
ANR	649969	Callee	r_core_anal_fcn		648874	0					
ANR	649970	Identifier	r_core_anal_fcn		648874	0					
ANR	649971	ArgumentList	core		648874	1					
ANR	649972	Argument	core		648874	0					
ANR	649973	Identifier	core		648874	0					
ANR	649974	Argument	next [ i ]		648874	1					
ANR	649975	ArrayIndexing	next [ i ]		648874	0					
ANR	649976	Identifier	next		648874	0					
ANR	649977	Identifier	i		648874	1					
ANR	649978	Argument	from		648874	2					
ANR	649979	Identifier	from		648874	0					
ANR	649980	Argument	0		648874	3					
ANR	649981	PrimaryExpression	0		648874	0					
ANR	649982	Argument	depth - 1		648874	4					
ANR	649983	AdditiveExpression	depth - 1		648874	0		-			
ANR	649984	Identifier	depth		648874	0					
ANR	649985	PrimaryExpression	1		648874	1					
ANR	649986	ExpressionStatement	free ( next )	923:2:24386:24397	648874	1	True				
ANR	649987	CallExpression	free ( next )		648874	0					
ANR	649988	Callee	free		648874	0					
ANR	649989	Identifier	free		648874	0					
ANR	649990	ArgumentList	next		648874	1					
ANR	649991	Argument	next		648874	0					
ANR	649992	Identifier	next		648874	0					
ANR	649993	IfStatement	"if ( core -> anal -> cur && core -> anal -> cur -> arch && ! strcmp ( core -> anal -> cur -> arch , ""x86"" ) )"		648874	20					
ANR	649994	Condition	"core -> anal -> cur && core -> anal -> cur -> arch && ! strcmp ( core -> anal -> cur -> arch , ""x86"" )"	925:5:24407:24488	648874	0	True				
ANR	649995	AndExpression	"core -> anal -> cur && core -> anal -> cur -> arch && ! strcmp ( core -> anal -> cur -> arch , ""x86"" )"		648874	0		&&			
ANR	649996	PtrMemberAccess	core -> anal -> cur		648874	0					
ANR	649997	PtrMemberAccess	core -> anal		648874	0					
ANR	649998	Identifier	core		648874	0					
ANR	649999	Identifier	anal		648874	1					
ANR	650000	Identifier	cur		648874	1					
ANR	650001	AndExpression	"core -> anal -> cur -> arch && ! strcmp ( core -> anal -> cur -> arch , ""x86"" )"		648874	1		&&			
ANR	650002	PtrMemberAccess	core -> anal -> cur -> arch		648874	0					
ANR	650003	PtrMemberAccess	core -> anal -> cur		648874	0					
ANR	650004	PtrMemberAccess	core -> anal		648874	0					
ANR	650005	Identifier	core		648874	0					
ANR	650006	Identifier	anal		648874	1					
ANR	650007	Identifier	cur		648874	1					
ANR	650008	Identifier	arch		648874	1					
ANR	650009	UnaryOperationExpression	"! strcmp ( core -> anal -> cur -> arch , ""x86"" )"		648874	1					
ANR	650010	UnaryOperator	!		648874	0					
ANR	650011	CallExpression	"strcmp ( core -> anal -> cur -> arch , ""x86"" )"		648874	1					
ANR	650012	Callee	strcmp		648874	0					
ANR	650013	Identifier	strcmp		648874	0					
ANR	650014	ArgumentList	core -> anal -> cur -> arch		648874	1					
ANR	650015	Argument	core -> anal -> cur -> arch		648874	0					
ANR	650016	PtrMemberAccess	core -> anal -> cur -> arch		648874	0					
ANR	650017	PtrMemberAccess	core -> anal -> cur		648874	0					
ANR	650018	PtrMemberAccess	core -> anal		648874	0					
ANR	650019	Identifier	core		648874	0					
ANR	650020	Identifier	anal		648874	1					
ANR	650021	Identifier	cur		648874	1					
ANR	650022	Identifier	arch		648874	1					
ANR	650023	Argument	"""x86"""		648874	1					
ANR	650024	PrimaryExpression	"""x86"""		648874	0					
ANR	650025	CompoundStatement		177:89:5259:5259	648874	1					
ANR	650026	ExpressionStatement	"r_anal_fcn_check_bp_use ( core -> anal , fcn )"	926:2:24495:24536	648874	0	True				
ANR	650027	CallExpression	"r_anal_fcn_check_bp_use ( core -> anal , fcn )"		648874	0					
ANR	650028	Callee	r_anal_fcn_check_bp_use		648874	0					
ANR	650029	Identifier	r_anal_fcn_check_bp_use		648874	0					
ANR	650030	ArgumentList	core -> anal		648874	1					
ANR	650031	Argument	core -> anal		648874	0					
ANR	650032	PtrMemberAccess	core -> anal		648874	0					
ANR	650033	Identifier	core		648874	0					
ANR	650034	Identifier	anal		648874	1					
ANR	650035	Argument	fcn		648874	1					
ANR	650036	Identifier	fcn		648874	0					
ANR	650037	IfStatement	if ( fcn && ! fcn -> bp_frame )		648874	1					
ANR	650038	Condition	fcn && ! fcn -> bp_frame	927:6:24544:24564	648874	0	True				
ANR	650039	AndExpression	fcn && ! fcn -> bp_frame		648874	0		&&			
ANR	650040	Identifier	fcn		648874	0					
ANR	650041	UnaryOperationExpression	! fcn -> bp_frame		648874	1					
ANR	650042	UnaryOperator	!		648874	0					
ANR	650043	PtrMemberAccess	fcn -> bp_frame		648874	1					
ANR	650044	Identifier	fcn		648874	0					
ANR	650045	Identifier	bp_frame		648874	1					
ANR	650046	CompoundStatement		179:29:5335:5335	648874	1					
ANR	650047	ExpressionStatement	"r_anal_var_delete_all ( core -> anal , fcn -> addr , 'b' )"	928:3:24572:24622	648874	0	True				
ANR	650048	CallExpression	"r_anal_var_delete_all ( core -> anal , fcn -> addr , 'b' )"		648874	0					
ANR	650049	Callee	r_anal_var_delete_all		648874	0					
ANR	650050	Identifier	r_anal_var_delete_all		648874	0					
ANR	650051	ArgumentList	core -> anal		648874	1					
ANR	650052	Argument	core -> anal		648874	0					
ANR	650053	PtrMemberAccess	core -> anal		648874	0					
ANR	650054	Identifier	core		648874	0					
ANR	650055	Identifier	anal		648874	1					
ANR	650056	Argument	fcn -> addr		648874	1					
ANR	650057	PtrMemberAccess	fcn -> addr		648874	0					
ANR	650058	Identifier	fcn		648874	0					
ANR	650059	Identifier	addr		648874	1					
ANR	650060	Argument	'b'		648874	2					
ANR	650061	PrimaryExpression	'b'		648874	0					
ANR	650062	ExpressionStatement	r_anal_hint_free ( hint )	931:1:24632:24655	648874	21	True				
ANR	650063	CallExpression	r_anal_hint_free ( hint )		648874	0					
ANR	650064	Callee	r_anal_hint_free		648874	0					
ANR	650065	Identifier	r_anal_hint_free		648874	0					
ANR	650066	ArgumentList	hint		648874	1					
ANR	650067	Argument	hint		648874	0					
ANR	650068	Identifier	hint		648874	0					
ANR	650069	ReturnStatement	return true ;	932:1:24658:24669	648874	22	True				
ANR	650070	Identifier	true		648874	0					
ANR	650071	Label	error :	934:0:24672:24677	648874	23	True				
ANR	650072	Identifier	error		648874	0					
ANR	650073	IfStatement	if ( fcn )		648874	24					
ANR	650074	Condition	fcn	936:5:24710:24712	648874	0	True				
ANR	650075	Identifier	fcn		648874	0					
ANR	650076	CompoundStatement		188:10:5483:5483	648874	1					
ANR	650077	IfStatement	if ( ! r_anal_fcn_size ( fcn ) || fcn -> addr == UT64_MAX )		648874	0					
ANR	650078	Condition	! r_anal_fcn_size ( fcn ) || fcn -> addr == UT64_MAX	937:6:24723:24769	648874	0	True				
ANR	650079	OrExpression	! r_anal_fcn_size ( fcn ) || fcn -> addr == UT64_MAX		648874	0		||			
ANR	650080	UnaryOperationExpression	! r_anal_fcn_size ( fcn )		648874	0					
ANR	650081	UnaryOperator	!		648874	0					
ANR	650082	CallExpression	r_anal_fcn_size ( fcn )		648874	1					
ANR	650083	Callee	r_anal_fcn_size		648874	0					
ANR	650084	Identifier	r_anal_fcn_size		648874	0					
ANR	650085	ArgumentList	fcn		648874	1					
ANR	650086	Argument	fcn		648874	0					
ANR	650087	Identifier	fcn		648874	0					
ANR	650088	EqualityExpression	fcn -> addr == UT64_MAX		648874	1		==			
ANR	650089	PtrMemberAccess	fcn -> addr		648874	0					
ANR	650090	Identifier	fcn		648874	0					
ANR	650091	Identifier	addr		648874	1					
ANR	650092	Identifier	UT64_MAX		648874	1					
ANR	650093	CompoundStatement		189:55:5540:5540	648874	1					
ANR	650094	ExpressionStatement	r_anal_fcn_free ( fcn )	938:3:24777:24798	648874	0	True				
ANR	650095	CallExpression	r_anal_fcn_free ( fcn )		648874	0					
ANR	650096	Callee	r_anal_fcn_free		648874	0					
ANR	650097	Identifier	r_anal_fcn_free		648874	0					
ANR	650098	ArgumentList	fcn		648874	1					
ANR	650099	Argument	fcn		648874	0					
ANR	650100	Identifier	fcn		648874	0					
ANR	650101	ExpressionStatement	fcn = NULL	939:3:24803:24813	648874	1	True				
ANR	650102	AssignmentExpression	fcn = NULL		648874	0		=			
ANR	650103	Identifier	fcn		648874	0					
ANR	650104	Identifier	NULL		648874	1					
ANR	650105	ElseStatement	else		648874	0					
ANR	650106	CompoundStatement		192:9:5592:5592	648874	0					
ANR	650107	IfStatement	if ( ! fcn -> name )		648874	0					
ANR	650108	Condition	! fcn -> name	942:7:24889:24898	648874	0	True				
ANR	650109	UnaryOperationExpression	! fcn -> name		648874	0					
ANR	650110	UnaryOperator	!		648874	0					
ANR	650111	PtrMemberAccess	fcn -> name		648874	1					
ANR	650112	Identifier	fcn		648874	0					
ANR	650113	Identifier	name		648874	1					
ANR	650114	CompoundStatement		194:19:5669:5669	648874	1					
ANR	650115	Statement	fcn	944:4:24931:24933	648874	0	True				
ANR	650116	Statement	->	944:7:24934:24935	648874	1	True				
ANR	650117	Statement	name	944:9:24936:24939	648874	2	True				
ANR	650118	Statement	=	944:14:24941:24941	648874	3	True				
ANR	650119	Statement	r_str_newf	944:16:24943:24952	648874	4	True				
ANR	650120	Statement	(	944:27:24954:24954	648874	5	True				
ANR	650121	Statement	"""%s.%08"""	945:5:24961:24968	648874	6	True				
ANR	650122	Statement	PFMT64x	945:14:24970:24976	648874	7	True				
ANR	650123	Statement	","	945:21:24977:24977	648874	8	True				
ANR	650124	Statement	r_anal_fcn_type_tostring	946:5:24984:25007	648874	9	True				
ANR	650125	Statement	(	946:30:25009:25009	648874	10	True				
ANR	650126	Statement	fcn	946:31:25010:25012	648874	11	True				
ANR	650127	Statement	->	946:34:25013:25014	648874	12	True				
ANR	650128	Statement	type	946:36:25015:25018	648874	13	True				
ANR	650129	Statement	)	946:40:25019:25019	648874	14	True				
ANR	650130	Statement	","	946:41:25020:25020	648874	15	True				
ANR	650131	Statement	at	947:5:25027:25028	648874	16	True				
ANR	650132	Statement	)	947:7:25029:25029	648874	17	True				
ANR	650133	ExpressionStatement		947:8:25030:25030	648874	18	True				
ANR	650134	ExpressionStatement	"r_flag_space_push ( core -> flags , R_FLAGS_FS_FUNCTIONS )"	949:4:25055:25108	648874	19	True				
ANR	650135	CallExpression	"r_flag_space_push ( core -> flags , R_FLAGS_FS_FUNCTIONS )"		648874	0					
ANR	650136	Callee	r_flag_space_push		648874	0					
ANR	650137	Identifier	r_flag_space_push		648874	0					
ANR	650138	ArgumentList	core -> flags		648874	1					
ANR	650139	Argument	core -> flags		648874	0					
ANR	650140	PtrMemberAccess	core -> flags		648874	0					
ANR	650141	Identifier	core		648874	0					
ANR	650142	Identifier	flags		648874	1					
ANR	650143	Argument	R_FLAGS_FS_FUNCTIONS		648874	1					
ANR	650144	Identifier	R_FLAGS_FS_FUNCTIONS		648874	0					
ANR	650145	ExpressionStatement	"r_flag_set ( core -> flags , fcn -> name , at , r_anal_fcn_size ( fcn ) )"	950:4:25114:25176	648874	20	True				
ANR	650146	CallExpression	"r_flag_set ( core -> flags , fcn -> name , at , r_anal_fcn_size ( fcn ) )"		648874	0					
ANR	650147	Callee	r_flag_set		648874	0					
ANR	650148	Identifier	r_flag_set		648874	0					
ANR	650149	ArgumentList	core -> flags		648874	1					
ANR	650150	Argument	core -> flags		648874	0					
ANR	650151	PtrMemberAccess	core -> flags		648874	0					
ANR	650152	Identifier	core		648874	0					
ANR	650153	Identifier	flags		648874	1					
ANR	650154	Argument	fcn -> name		648874	1					
ANR	650155	PtrMemberAccess	fcn -> name		648874	0					
ANR	650156	Identifier	fcn		648874	0					
ANR	650157	Identifier	name		648874	1					
ANR	650158	Argument	at		648874	2					
ANR	650159	Identifier	at		648874	0					
ANR	650160	Argument	r_anal_fcn_size ( fcn )		648874	3					
ANR	650161	CallExpression	r_anal_fcn_size ( fcn )		648874	0					
ANR	650162	Callee	r_anal_fcn_size		648874	0					
ANR	650163	Identifier	r_anal_fcn_size		648874	0					
ANR	650164	ArgumentList	fcn		648874	1					
ANR	650165	Argument	fcn		648874	0					
ANR	650166	Identifier	fcn		648874	0					
ANR	650167	ExpressionStatement	r_flag_space_pop ( core -> flags )	951:4:25182:25212	648874	21	True				
ANR	650168	CallExpression	r_flag_space_pop ( core -> flags )		648874	0					
ANR	650169	Callee	r_flag_space_pop		648874	0					
ANR	650170	Identifier	r_flag_space_pop		648874	0					
ANR	650171	ArgumentList	core -> flags		648874	1					
ANR	650172	Argument	core -> flags		648874	0					
ANR	650173	PtrMemberAccess	core -> flags		648874	0					
ANR	650174	Identifier	core		648874	0					
ANR	650175	Identifier	flags		648874	1					
ANR	650176	ExpressionStatement	"r_anal_fcn_insert ( core -> anal , fcn )"	953:3:25222:25257	648874	1	True				
ANR	650177	CallExpression	"r_anal_fcn_insert ( core -> anal , fcn )"		648874	0					
ANR	650178	Callee	r_anal_fcn_insert		648874	0					
ANR	650179	Identifier	r_anal_fcn_insert		648874	0					
ANR	650180	ArgumentList	core -> anal		648874	1					
ANR	650181	Argument	core -> anal		648874	0					
ANR	650182	PtrMemberAccess	core -> anal		648874	0					
ANR	650183	Identifier	core		648874	0					
ANR	650184	Identifier	anal		648874	1					
ANR	650185	Argument	fcn		648874	1					
ANR	650186	Identifier	fcn		648874	0					
ANR	650187	IfStatement	if ( fcn && has_next )		648874	1					
ANR	650188	Condition	fcn && has_next	955:6:25269:25283	648874	0	True				
ANR	650189	AndExpression	fcn && has_next		648874	0		&&			
ANR	650190	Identifier	fcn		648874	0					
ANR	650191	Identifier	has_next		648874	1					
ANR	650192	CompoundStatement		209:3:6112:6158	648874	1					
ANR	650193	IdentifierDeclStatement	ut64 newaddr = fcn -> addr + r_anal_fcn_size ( fcn ) ;	956:3:25291:25339	648874	0	True				
ANR	650194	IdentifierDecl	newaddr = fcn -> addr + r_anal_fcn_size ( fcn )		648874	0					
ANR	650195	IdentifierDeclType	ut64		648874	0					
ANR	650196	Identifier	newaddr		648874	1					
ANR	650197	AssignmentExpression	newaddr = fcn -> addr + r_anal_fcn_size ( fcn )		648874	2		=			
ANR	650198	Identifier	newaddr		648874	0					
ANR	650199	AdditiveExpression	fcn -> addr + r_anal_fcn_size ( fcn )		648874	1		+			
ANR	650200	PtrMemberAccess	fcn -> addr		648874	0					
ANR	650201	Identifier	fcn		648874	0					
ANR	650202	Identifier	addr		648874	1					
ANR	650203	CallExpression	r_anal_fcn_size ( fcn )		648874	1					
ANR	650204	Callee	r_anal_fcn_size		648874	0					
ANR	650205	Identifier	r_anal_fcn_size		648874	0					
ANR	650206	ArgumentList	fcn		648874	1					
ANR	650207	Argument	fcn		648874	0					
ANR	650208	Identifier	fcn		648874	0					
ANR	650209	IdentifierDeclStatement	"RIOMap * map = r_io_map_get ( core -> io , newaddr ) ;"	957:3:25344:25390	648874	1	True				
ANR	650210	IdentifierDecl	"* map = r_io_map_get ( core -> io , newaddr )"		648874	0					
ANR	650211	IdentifierDeclType	RIOMap *		648874	0					
ANR	650212	Identifier	map		648874	1					
ANR	650213	AssignmentExpression	"* map = r_io_map_get ( core -> io , newaddr )"		648874	2		=			
ANR	650214	Identifier	map		648874	0					
ANR	650215	CallExpression	"r_io_map_get ( core -> io , newaddr )"		648874	1					
ANR	650216	Callee	r_io_map_get		648874	0					
ANR	650217	Identifier	r_io_map_get		648874	0					
ANR	650218	ArgumentList	core -> io		648874	1					
ANR	650219	Argument	core -> io		648874	0					
ANR	650220	PtrMemberAccess	core -> io		648874	0					
ANR	650221	Identifier	core		648874	0					
ANR	650222	Identifier	io		648874	1					
ANR	650223	Argument	newaddr		648874	1					
ANR	650224	Identifier	newaddr		648874	0					
ANR	650225	IfStatement	if ( ! map || ( map && ( map -> perm & R_PERM_X ) ) )		648874	2					
ANR	650226	Condition	! map || ( map && ( map -> perm & R_PERM_X ) )	958:7:25399:25437	648874	0	True				
ANR	650227	OrExpression	! map || ( map && ( map -> perm & R_PERM_X ) )		648874	0		||			
ANR	650228	UnaryOperationExpression	! map		648874	0					
ANR	650229	UnaryOperator	!		648874	0					
ANR	650230	Identifier	map		648874	1					
ANR	650231	AndExpression	map && ( map -> perm & R_PERM_X )		648874	1		&&			
ANR	650232	Identifier	map		648874	0					
ANR	650233	BitAndExpression	map -> perm & R_PERM_X		648874	1		&			
ANR	650234	PtrMemberAccess	map -> perm		648874	0					
ANR	650235	Identifier	map		648874	0					
ANR	650236	Identifier	perm		648874	1					
ANR	650237	Identifier	R_PERM_X		648874	1					
ANR	650238	CompoundStatement		210:48:6208:6208	648874	1					
ANR	650239	ExpressionStatement	"next = next_append ( next , & nexti , newaddr )"	959:4:25446:25488	648874	0	True				
ANR	650240	AssignmentExpression	"next = next_append ( next , & nexti , newaddr )"		648874	0		=			
ANR	650241	Identifier	next		648874	0					
ANR	650242	CallExpression	"next_append ( next , & nexti , newaddr )"		648874	1					
ANR	650243	Callee	next_append		648874	0					
ANR	650244	Identifier	next_append		648874	0					
ANR	650245	ArgumentList	next		648874	1					
ANR	650246	Argument	next		648874	0					
ANR	650247	Identifier	next		648874	0					
ANR	650248	Argument	& nexti		648874	1					
ANR	650249	UnaryOperationExpression	& nexti		648874	0					
ANR	650250	UnaryOperator	&		648874	0					
ANR	650251	Identifier	nexti		648874	1					
ANR	650252	Argument	newaddr		648874	2					
ANR	650253	Identifier	newaddr		648874	0					
ANR	650254	ForStatement	for ( i = 0 ; i < nexti ; i ++ )		648874	1					
ANR	650255	ForInit	i = 0 ;	960:9:25499:25504	648874	0	True				
ANR	650256	AssignmentExpression	i = 0		648874	0		=			
ANR	650257	Identifier	i		648874	0					
ANR	650258	PrimaryExpression	0		648874	1					
ANR	650259	Condition	i < nexti	960:16:25506:25514	648874	1	True				
ANR	650260	RelationalExpression	i < nexti		648874	0		<			
ANR	650261	Identifier	i		648874	0					
ANR	650262	Identifier	nexti		648874	1					
ANR	650263	PostIncDecOperationExpression	i ++	960:27:25517:25519	648874	2	True				
ANR	650264	Identifier	i		648874	0					
ANR	650265	IncDec	++		648874	1					
ANR	650266	CompoundStatement		212:32:6290:6290	648874	3					
ANR	650267	IfStatement	if ( ! next [ i ] )		648874	0					
ANR	650268	Condition	! next [ i ]	961:9:25533:25540	648874	0	True				
ANR	650269	UnaryOperationExpression	! next [ i ]		648874	0					
ANR	650270	UnaryOperator	!		648874	0					
ANR	650271	ArrayIndexing	next [ i ]		648874	1					
ANR	650272	Identifier	next		648874	0					
ANR	650273	Identifier	i		648874	1					
ANR	650274	CompoundStatement		213:19:6311:6311	648874	1					
ANR	650275	ContinueStatement	continue ;	962:6:25551:25559	648874	0	True				
ANR	650276	ExpressionStatement	"r_core_anal_fcn ( core , next [ i ] , next [ i ] , 0 , depth - 1 )"	964:5:25573:25627	648874	1	True				
ANR	650277	CallExpression	"r_core_anal_fcn ( core , next [ i ] , next [ i ] , 0 , depth - 1 )"		648874	0					
ANR	650278	Callee	r_core_anal_fcn		648874	0					
ANR	650279	Identifier	r_core_anal_fcn		648874	0					
ANR	650280	ArgumentList	core		648874	1					
ANR	650281	Argument	core		648874	0					
ANR	650282	Identifier	core		648874	0					
ANR	650283	Argument	next [ i ]		648874	1					
ANR	650284	ArrayIndexing	next [ i ]		648874	0					
ANR	650285	Identifier	next		648874	0					
ANR	650286	Identifier	i		648874	1					
ANR	650287	Argument	next [ i ]		648874	2					
ANR	650288	ArrayIndexing	next [ i ]		648874	0					
ANR	650289	Identifier	next		648874	0					
ANR	650290	Identifier	i		648874	1					
ANR	650291	Argument	0		648874	3					
ANR	650292	PrimaryExpression	0		648874	0					
ANR	650293	Argument	depth - 1		648874	4					
ANR	650294	AdditiveExpression	depth - 1		648874	0		-			
ANR	650295	Identifier	depth		648874	0					
ANR	650296	PrimaryExpression	1		648874	1					
ANR	650297	ExpressionStatement	free ( next )	966:4:25639:25650	648874	2	True				
ANR	650298	CallExpression	free ( next )		648874	0					
ANR	650299	Callee	free		648874	0					
ANR	650300	Identifier	free		648874	0					
ANR	650301	ArgumentList	next		648874	1					
ANR	650302	Argument	next		648874	0					
ANR	650303	Identifier	next		648874	0					
ANR	650304	IfStatement	"if ( core -> anal -> cur && core -> anal -> cur -> arch && ! strcmp ( core -> anal -> cur -> arch , ""x86"" ) )"		648874	25					
ANR	650305	Condition	"core -> anal -> cur && core -> anal -> cur -> arch && ! strcmp ( core -> anal -> cur -> arch , ""x86"" )"	970:5:25669:25750	648874	0	True				
ANR	650306	AndExpression	"core -> anal -> cur && core -> anal -> cur -> arch && ! strcmp ( core -> anal -> cur -> arch , ""x86"" )"		648874	0		&&			
ANR	650307	PtrMemberAccess	core -> anal -> cur		648874	0					
ANR	650308	PtrMemberAccess	core -> anal		648874	0					
ANR	650309	Identifier	core		648874	0					
ANR	650310	Identifier	anal		648874	1					
ANR	650311	Identifier	cur		648874	1					
ANR	650312	AndExpression	"core -> anal -> cur -> arch && ! strcmp ( core -> anal -> cur -> arch , ""x86"" )"		648874	1		&&			
ANR	650313	PtrMemberAccess	core -> anal -> cur -> arch		648874	0					
ANR	650314	PtrMemberAccess	core -> anal -> cur		648874	0					
ANR	650315	PtrMemberAccess	core -> anal		648874	0					
ANR	650316	Identifier	core		648874	0					
ANR	650317	Identifier	anal		648874	1					
ANR	650318	Identifier	cur		648874	1					
ANR	650319	Identifier	arch		648874	1					
ANR	650320	UnaryOperationExpression	"! strcmp ( core -> anal -> cur -> arch , ""x86"" )"		648874	1					
ANR	650321	UnaryOperator	!		648874	0					
ANR	650322	CallExpression	"strcmp ( core -> anal -> cur -> arch , ""x86"" )"		648874	1					
ANR	650323	Callee	strcmp		648874	0					
ANR	650324	Identifier	strcmp		648874	0					
ANR	650325	ArgumentList	core -> anal -> cur -> arch		648874	1					
ANR	650326	Argument	core -> anal -> cur -> arch		648874	0					
ANR	650327	PtrMemberAccess	core -> anal -> cur -> arch		648874	0					
ANR	650328	PtrMemberAccess	core -> anal -> cur		648874	0					
ANR	650329	PtrMemberAccess	core -> anal		648874	0					
ANR	650330	Identifier	core		648874	0					
ANR	650331	Identifier	anal		648874	1					
ANR	650332	Identifier	cur		648874	1					
ANR	650333	Identifier	arch		648874	1					
ANR	650334	Argument	"""x86"""		648874	1					
ANR	650335	PrimaryExpression	"""x86"""		648874	0					
ANR	650336	CompoundStatement		222:89:6521:6521	648874	1					
ANR	650337	ExpressionStatement	"r_anal_fcn_check_bp_use ( core -> anal , fcn )"	971:2:25757:25798	648874	0	True				
ANR	650338	CallExpression	"r_anal_fcn_check_bp_use ( core -> anal , fcn )"		648874	0					
ANR	650339	Callee	r_anal_fcn_check_bp_use		648874	0					
ANR	650340	Identifier	r_anal_fcn_check_bp_use		648874	0					
ANR	650341	ArgumentList	core -> anal		648874	1					
ANR	650342	Argument	core -> anal		648874	0					
ANR	650343	PtrMemberAccess	core -> anal		648874	0					
ANR	650344	Identifier	core		648874	0					
ANR	650345	Identifier	anal		648874	1					
ANR	650346	Argument	fcn		648874	1					
ANR	650347	Identifier	fcn		648874	0					
ANR	650348	IfStatement	if ( fcn && ! fcn -> bp_frame )		648874	1					
ANR	650349	Condition	fcn && ! fcn -> bp_frame	972:6:25806:25826	648874	0	True				
ANR	650350	AndExpression	fcn && ! fcn -> bp_frame		648874	0		&&			
ANR	650351	Identifier	fcn		648874	0					
ANR	650352	UnaryOperationExpression	! fcn -> bp_frame		648874	1					
ANR	650353	UnaryOperator	!		648874	0					
ANR	650354	PtrMemberAccess	fcn -> bp_frame		648874	1					
ANR	650355	Identifier	fcn		648874	0					
ANR	650356	Identifier	bp_frame		648874	1					
ANR	650357	CompoundStatement		224:29:6597:6597	648874	1					
ANR	650358	ExpressionStatement	"r_anal_var_delete_all ( core -> anal , fcn -> addr , 'b' )"	973:3:25834:25884	648874	0	True				
ANR	650359	CallExpression	"r_anal_var_delete_all ( core -> anal , fcn -> addr , 'b' )"		648874	0					
ANR	650360	Callee	r_anal_var_delete_all		648874	0					
ANR	650361	Identifier	r_anal_var_delete_all		648874	0					
ANR	650362	ArgumentList	core -> anal		648874	1					
ANR	650363	Argument	core -> anal		648874	0					
ANR	650364	PtrMemberAccess	core -> anal		648874	0					
ANR	650365	Identifier	core		648874	0					
ANR	650366	Identifier	anal		648874	1					
ANR	650367	Argument	fcn -> addr		648874	1					
ANR	650368	PtrMemberAccess	fcn -> addr		648874	0					
ANR	650369	Identifier	fcn		648874	0					
ANR	650370	Identifier	addr		648874	1					
ANR	650371	Argument	'b'		648874	2					
ANR	650372	PrimaryExpression	'b'		648874	0					
ANR	650373	ExpressionStatement	r_anal_hint_free ( hint )	976:1:25894:25917	648874	26	True				
ANR	650374	CallExpression	r_anal_hint_free ( hint )		648874	0					
ANR	650375	Callee	r_anal_hint_free		648874	0					
ANR	650376	Identifier	r_anal_hint_free		648874	0					
ANR	650377	ArgumentList	hint		648874	1					
ANR	650378	Argument	hint		648874	0					
ANR	650379	Identifier	hint		648874	0					
ANR	650380	ReturnStatement	return false ;	977:1:25920:25932	648874	27	True				
ANR	650381	Identifier	false		648874	0					
ANR	650382	ReturnType	static int		648874	1					
ANR	650383	Identifier	core_anal_fcn		648874	2					
ANR	650384	ParameterList	"RCore * core , ut64 at , ut64 from , int reftype , int depth"		648874	3					
ANR	650385	Parameter	RCore * core	749:25:19174:19184	648874	0	True				
ANR	650386	ParameterType	RCore *		648874	0					
ANR	650387	Identifier	core		648874	1					
ANR	650388	Parameter	ut64 at	749:38:19187:19193	648874	1	True				
ANR	650389	ParameterType	ut64		648874	0					
ANR	650390	Identifier	at		648874	1					
ANR	650391	Parameter	ut64 from	749:47:19196:19204	648874	2	True				
ANR	650392	ParameterType	ut64		648874	0					
ANR	650393	Identifier	from		648874	1					
ANR	650394	Parameter	int reftype	749:58:19207:19217	648874	3	True				
ANR	650395	ParameterType	int		648874	0					
ANR	650396	Identifier	reftype		648874	1					
ANR	650397	Parameter	int depth	749:71:19220:19228	648874	4	True				
ANR	650398	ParameterType	int		648874	0					
ANR	650399	Identifier	depth		648874	1					
ANR	650400	CFGEntryNode	ENTRY		648874		True				
ANR	650401	CFGExitNode	EXIT		648874		True				
ANR	650402	Symbol	* fcn		648874						
ANR	650403	Symbol	fcn -> name		648874						
ANR	650404	Symbol	r_anal_fcn_size		648874						
ANR	650405	Symbol	* map		648874						
ANR	650406	Symbol	delta		648874						
ANR	650407	Symbol	R_ANAL_RET_ERROR		648874						
ANR	650408	Symbol	* next		648874						
ANR	650409	Symbol	fcn -> bits		648874						
ANR	650410	Symbol	R_ANAL_FCN_TYPE_LOC		648874						
ANR	650411	Symbol	newaddr		648874						
ANR	650412	Symbol	fcnlen		648874						
ANR	650413	Symbol	strncmp		648874						
ANR	650414	Symbol	R_FLAGS_FS_FUNCTIONS		648874						
ANR	650415	Symbol	r_anal_fcn_new		648874						
ANR	650416	Symbol	hint -> bits		648874						
ANR	650417	Symbol	* * core -> anal		648874						
ANR	650418	Symbol	from		648874						
ANR	650419	Symbol	has_next		648874						
ANR	650420	Symbol	mi		648874						
ANR	650421	Symbol	getFunctionName		648874						
ANR	650422	Symbol	core -> anal -> opt		648874						
ANR	650423	Symbol	strcmp		648874						
ANR	650424	Symbol	* hint		648874						
ANR	650425	Symbol	r_io_is_valid_offset		648874						
ANR	650426	Symbol	NULL		648874						
ANR	650427	Symbol	* core -> anal -> cur		648874						
ANR	650428	Symbol	r_anal_fcn		648874						
ANR	650429	Symbol	fcn -> type		648874						
ANR	650430	Symbol	core -> io -> va		648874						
ANR	650431	Symbol	core -> anal -> opt . bb_max_size		648874						
ANR	650432	Symbol	r_anal_cc_default		648874						
ANR	650433	Symbol	core		648874						
ANR	650434	Symbol	* * * core		648874						
ANR	650435	Symbol	at		648874						
ANR	650436	Symbol	mi -> size		648874						
ANR	650437	Symbol	r_config_get_i		648874						
ANR	650438	Symbol	hint		648874						
ANR	650439	Symbol	true		648874						
ANR	650440	Symbol	core -> anal -> opt . noncode		648874						
ANR	650441	Symbol	map -> perm		648874						
ANR	650442	Symbol	r_anal_fcn_type_tostring		648874						
ANR	650443	Symbol	next		648874						
ANR	650444	Symbol	core -> anal -> opt . searchstringrefs		648874						
ANR	650445	Symbol	* mi		648874						
ANR	650446	Symbol	f -> name		648874						
ANR	650447	Symbol	r_core_flag_get_by_spaces		648874						
ANR	650448	Symbol	core -> anal -> opt . followbrokenfcnsrefs		648874						
ANR	650449	Symbol	* core		648874						
ANR	650450	Symbol	r_config_get		648874						
ANR	650451	Symbol	next_append		648874						
ANR	650452	Symbol	R_META_TYPE_ANY		648874						
ANR	650453	Symbol	core -> anal		648874						
ANR	650454	Symbol	fcn		648874						
ANR	650455	Symbol	R_PERM_X		648874						
ANR	650456	Symbol	r_cons_is_breaked		648874						
ANR	650457	Symbol	core -> io		648874						
ANR	650458	Symbol	r_anal_analyze_fcn_refs		648874						
ANR	650459	Symbol	core -> anal -> cur -> arch		648874						
ANR	650460	Symbol	core -> anal -> cur		648874						
ANR	650461	Symbol	fcn -> cc		648874						
ANR	650462	Symbol	& nexti		648874						
ANR	650463	Symbol	UT64_MAX		648874						
ANR	650464	Symbol	addr		648874						
ANR	650465	Symbol	& cmpfcn		648874						
ANR	650466	Symbol	map		648874						
ANR	650467	Symbol	* * core		648874						
ANR	650468	Symbol	core -> config		648874						
ANR	650469	Symbol	r_str_const		648874						
ANR	650470	Symbol	R_ANAL_RET_END		648874						
ANR	650471	Symbol	f -> fcn_locs		648874						
ANR	650472	Symbol	core -> anal -> bits		648874						
ANR	650473	Symbol	fcnpfx		648874						
ANR	650474	Symbol	fcn -> bp_frame		648874						
ANR	650475	Symbol	f		648874						
ANR	650476	Symbol	false		648874						
ANR	650477	Symbol	i		648874						
ANR	650478	Symbol	r_io_read_at		648874						
ANR	650479	Symbol	core -> flags		648874						
ANR	650480	Symbol	* fcnpfx		648874						
ANR	650481	Symbol	nexti		648874						
ANR	650482	Symbol	r_anal_hint_get		648874						
ANR	650483	Symbol	* f		648874						
ANR	650484	Symbol	r_meta_find		648874						
ANR	650485	Symbol	* core -> io		648874						
ANR	650486	Symbol	buf		648874						
ANR	650487	Symbol	depth		648874						
ANR	650488	Symbol	* core -> anal		648874						
ANR	650489	Symbol	r_anal_get_fcn_in		648874						
ANR	650490	Symbol	* i		648874						
ANR	650491	Symbol	fcn -> addr		648874						
ANR	650492	Symbol	strdup		648874						
ANR	650493	Symbol	fcn -> depth		648874						
ANR	650494	Symbol	reftype		648874						
ANR	650495	Symbol	r_io_map_get		648874						
ANR	650496	Symbol	r_list_new		648874						
ANR	650497	Function	get_title	980:0:25937:26021							
ANR	650498	FunctionDef	get_title (ut64 addr)		650497	0					
ANR	650499	CompoundStatement		980:34:25971:26021	650497	0					
ANR	650500	Statement	return	981:8:25981:25986	650497	0	True				
ANR	650501	Statement	r_str_newf	981:15:25988:25997	650497	1	True				
ANR	650502	Statement	(	981:26:25999:25999	650497	2	True				
ANR	650503	Statement	"""0x%"""	981:27:26000:26004	650497	3	True				
ANR	650504	Statement	PFMT64x	981:32:26005:26011	650497	4	True				
ANR	650505	Statement	","	981:39:26012:26012	650497	5	True				
ANR	650506	Statement	addr	981:41:26014:26017	650497	6	True				
ANR	650507	Statement	)	981:45:26018:26018	650497	7	True				
ANR	650508	ExpressionStatement		981:46:26019:26019	650497	8	True				
ANR	650509	ReturnType	static char *		650497	1					
ANR	650510	Identifier	get_title		650497	2					
ANR	650511	ParameterList	ut64 addr		650497	3					
ANR	650512	Parameter	ut64 addr	980:23:25960:25968	650497	0	True				
ANR	650513	ParameterType	ut64		650497	0					
ANR	650514	Identifier	addr		650497	1					
ANR	650515	CFGEntryNode	ENTRY		650497		True				
ANR	650516	CFGExitNode	EXIT		650497		True				
ANR	650517	Symbol	addr		650497						
ANR	650518	Function	r_core_anal_op	985:0:26080:27150							
ANR	650519	FunctionDef	"r_core_anal_op (RCore * core , ut64 addr , int mask)"		650518	0					
ANR	650520	CompoundStatement		985:64:26144:27150	650518	0					
ANR	650521	IdentifierDeclStatement	int len ;	986:1:26147:26154	650518	0	True				
ANR	650522	IdentifierDecl	len		650518	0					
ANR	650523	IdentifierDeclType	int		650518	0					
ANR	650524	Identifier	len		650518	1					
ANR	650525	IdentifierDeclStatement	ut8 buf [ 32 ] ;	987:1:26157:26168	650518	1	True				
ANR	650526	IdentifierDecl	buf [ 32 ]		650518	0					
ANR	650527	IdentifierDeclType	ut8 [ 32 ]		650518	0					
ANR	650528	Identifier	buf		650518	1					
ANR	650529	PrimaryExpression	32		650518	2					
ANR	650530	IdentifierDeclStatement	ut8 * ptr ;	988:1:26171:26179	650518	2	True				
ANR	650531	IdentifierDecl	* ptr		650518	0					
ANR	650532	IdentifierDeclType	ut8 *		650518	0					
ANR	650533	Identifier	ptr		650518	1					
ANR	650534	IdentifierDeclStatement	RAsmOp asmop ;	989:1:26182:26194	650518	3	True				
ANR	650535	IdentifierDecl	asmop		650518	0					
ANR	650536	IdentifierDeclType	RAsmOp		650518	0					
ANR	650537	Identifier	asmop		650518	1					
ANR	650538	ExpressionStatement	"r_return_val_if_fail ( core , NULL )"	991:1:26198:26231	650518	4	True				
ANR	650539	CallExpression	"r_return_val_if_fail ( core , NULL )"		650518	0					
ANR	650540	Callee	r_return_val_if_fail		650518	0					
ANR	650541	Identifier	r_return_val_if_fail		650518	0					
ANR	650542	ArgumentList	core		650518	1					
ANR	650543	Argument	core		650518	0					
ANR	650544	Identifier	core		650518	0					
ANR	650545	Argument	NULL		650518	1					
ANR	650546	Identifier	NULL		650518	0					
ANR	650547	IfStatement	if ( addr == UT64_MAX )		650518	5					
ANR	650548	Condition	addr == UT64_MAX	992:5:26238:26253	650518	0	True				
ANR	650549	EqualityExpression	addr == UT64_MAX		650518	0		==			
ANR	650550	Identifier	addr		650518	0					
ANR	650551	Identifier	UT64_MAX		650518	1					
ANR	650552	CompoundStatement		8:23:111:111	650518	1					
ANR	650553	ReturnStatement	return NULL ;	993:2:26260:26271	650518	0	True				
ANR	650554	Identifier	NULL		650518	0					
ANR	650555	IdentifierDeclStatement	RAnalOp * op = R_NEW0 ( RAnalOp ) ;	995:1:26277:26307	650518	6	True				
ANR	650556	IdentifierDecl	* op = R_NEW0 ( RAnalOp )		650518	0					
ANR	650557	IdentifierDeclType	RAnalOp *		650518	0					
ANR	650558	Identifier	op		650518	1					
ANR	650559	AssignmentExpression	* op = R_NEW0 ( RAnalOp )		650518	2		=			
ANR	650560	Identifier	op		650518	0					
ANR	650561	CallExpression	R_NEW0 ( RAnalOp )		650518	1					
ANR	650562	Callee	R_NEW0		650518	0					
ANR	650563	Identifier	R_NEW0		650518	0					
ANR	650564	ArgumentList	RAnalOp		650518	1					
ANR	650565	Argument	RAnalOp		650518	0					
ANR	650566	Identifier	RAnalOp		650518	0					
ANR	650567	IfStatement	if ( ! op )		650518	7					
ANR	650568	Condition	! op	996:5:26314:26316	650518	0	True				
ANR	650569	UnaryOperationExpression	! op		650518	0					
ANR	650570	UnaryOperator	!		650518	0					
ANR	650571	Identifier	op		650518	1					
ANR	650572	CompoundStatement		12:10:174:174	650518	1					
ANR	650573	ReturnStatement	return NULL ;	997:2:26323:26334	650518	0	True				
ANR	650574	Identifier	NULL		650518	0					
ANR	650575	IfStatement	if ( addr >= core -> offset && addr + 16 < core -> offset + core -> blocksize )		650518	8					
ANR	650576	Condition	addr >= core -> offset && addr + 16 < core -> offset + core -> blocksize	999:5:26344:26409	650518	0	True				
ANR	650577	AndExpression	addr >= core -> offset && addr + 16 < core -> offset + core -> blocksize		650518	0		&&			
ANR	650578	RelationalExpression	addr >= core -> offset		650518	0		>=			
ANR	650579	Identifier	addr		650518	0					
ANR	650580	PtrMemberAccess	core -> offset		650518	1					
ANR	650581	Identifier	core		650518	0					
ANR	650582	Identifier	offset		650518	1					
ANR	650583	RelationalExpression	addr + 16 < core -> offset + core -> blocksize		650518	1		<			
ANR	650584	AdditiveExpression	addr + 16		650518	0		+			
ANR	650585	Identifier	addr		650518	0					
ANR	650586	PrimaryExpression	16		650518	1					
ANR	650587	AdditiveExpression	core -> offset + core -> blocksize		650518	1		+			
ANR	650588	PtrMemberAccess	core -> offset		650518	0					
ANR	650589	Identifier	core		650518	0					
ANR	650590	Identifier	offset		650518	1					
ANR	650591	PtrMemberAccess	core -> blocksize		650518	1					
ANR	650592	Identifier	core		650518	0					
ANR	650593	Identifier	blocksize		650518	1					
ANR	650594	CompoundStatement		16:2:271:304	650518	1					
ANR	650595	IdentifierDeclStatement	int delta = ( addr - core -> offset ) ;	1000:2:26416:26449	650518	0	True				
ANR	650596	IdentifierDecl	delta = ( addr - core -> offset )		650518	0					
ANR	650597	IdentifierDeclType	int		650518	0					
ANR	650598	Identifier	delta		650518	1					
ANR	650599	AssignmentExpression	delta = ( addr - core -> offset )		650518	2		=			
ANR	650600	Identifier	delta		650518	0					
ANR	650601	AdditiveExpression	addr - core -> offset		650518	1		-			
ANR	650602	Identifier	addr		650518	0					
ANR	650603	PtrMemberAccess	core -> offset		650518	1					
ANR	650604	Identifier	core		650518	0					
ANR	650605	Identifier	offset		650518	1					
ANR	650606	ExpressionStatement	ptr = core -> block + delta	1001:2:26453:26478	650518	1	True				
ANR	650607	AssignmentExpression	ptr = core -> block + delta		650518	0		=			
ANR	650608	Identifier	ptr		650518	0					
ANR	650609	AdditiveExpression	core -> block + delta		650518	1		+			
ANR	650610	PtrMemberAccess	core -> block		650518	0					
ANR	650611	Identifier	core		650518	0					
ANR	650612	Identifier	block		650518	1					
ANR	650613	Identifier	delta		650518	1					
ANR	650614	ExpressionStatement	len = core -> blocksize - delta	1002:2:26482:26511	650518	2	True				
ANR	650615	AssignmentExpression	len = core -> blocksize - delta		650518	0		=			
ANR	650616	Identifier	len		650518	0					
ANR	650617	AdditiveExpression	core -> blocksize - delta		650518	1		-			
ANR	650618	PtrMemberAccess	core -> blocksize		650518	0					
ANR	650619	Identifier	core		650518	0					
ANR	650620	Identifier	blocksize		650518	1					
ANR	650621	Identifier	delta		650518	1					
ANR	650622	IfStatement	if ( len < 1 )		650518	3					
ANR	650623	Condition	len < 1	1003:6:26519:26525	650518	0	True				
ANR	650624	RelationalExpression	len < 1		650518	0		<			
ANR	650625	Identifier	len		650518	0					
ANR	650626	PrimaryExpression	1		650518	1					
ANR	650627	CompoundStatement		19:15:383:383	650518	1					
ANR	650628	GotoStatement	goto err_op ;	1004:3:26533:26544	650518	0	True				
ANR	650629	Identifier	err_op		650518	0					
ANR	650630	ElseStatement	else		650518	0					
ANR	650631	CompoundStatement		22:8:413:413	650518	0					
ANR	650632	IfStatement	"if ( ! r_io_read_at ( core -> io , addr , buf , sizeof ( buf ) ) )"		650518	0					
ANR	650633	Condition	"! r_io_read_at ( core -> io , addr , buf , sizeof ( buf ) )"	1007:6:26566:26614	650518	0	True				
ANR	650634	UnaryOperationExpression	"! r_io_read_at ( core -> io , addr , buf , sizeof ( buf ) )"		650518	0					
ANR	650635	UnaryOperator	!		650518	0					
ANR	650636	CallExpression	"r_io_read_at ( core -> io , addr , buf , sizeof ( buf ) )"		650518	1					
ANR	650637	Callee	r_io_read_at		650518	0					
ANR	650638	Identifier	r_io_read_at		650518	0					
ANR	650639	ArgumentList	core -> io		650518	1					
ANR	650640	Argument	core -> io		650518	0					
ANR	650641	PtrMemberAccess	core -> io		650518	0					
ANR	650642	Identifier	core		650518	0					
ANR	650643	Identifier	io		650518	1					
ANR	650644	Argument	addr		650518	1					
ANR	650645	Identifier	addr		650518	0					
ANR	650646	Argument	buf		650518	2					
ANR	650647	Identifier	buf		650518	0					
ANR	650648	Argument	sizeof ( buf )		650518	3					
ANR	650649	SizeofExpression	sizeof ( buf )		650518	0					
ANR	650650	Sizeof	sizeof		650518	0					
ANR	650651	SizeofOperand	buf		650518	1					
ANR	650652	CompoundStatement		23:57:472:472	650518	1					
ANR	650653	GotoStatement	goto err_op ;	1008:3:26622:26633	650518	0	True				
ANR	650654	Identifier	err_op		650518	0					
ANR	650655	ExpressionStatement	ptr = buf	1010:2:26641:26650	650518	1	True				
ANR	650656	AssignmentExpression	ptr = buf		650518	0		=			
ANR	650657	Identifier	ptr		650518	0					
ANR	650658	Identifier	buf		650518	1					
ANR	650659	ExpressionStatement	len = sizeof ( buf )	1011:2:26654:26672	650518	2	True				
ANR	650660	AssignmentExpression	len = sizeof ( buf )		650518	0		=			
ANR	650661	Identifier	len		650518	0					
ANR	650662	SizeofExpression	sizeof ( buf )		650518	1					
ANR	650663	Sizeof	sizeof		650518	0					
ANR	650664	SizeofOperand	buf		650518	1					
ANR	650665	IfStatement	"if ( r_anal_op ( core -> anal , op , addr , ptr , len , mask ) < 1 )"		650518	9					
ANR	650666	Condition	"r_anal_op ( core -> anal , op , addr , ptr , len , mask ) < 1"	1013:5:26682:26733	650518	0	True				
ANR	650667	RelationalExpression	"r_anal_op ( core -> anal , op , addr , ptr , len , mask ) < 1"		650518	0		<			
ANR	650668	CallExpression	"r_anal_op ( core -> anal , op , addr , ptr , len , mask )"		650518	0					
ANR	650669	Callee	r_anal_op		650518	0					
ANR	650670	Identifier	r_anal_op		650518	0					
ANR	650671	ArgumentList	core -> anal		650518	1					
ANR	650672	Argument	core -> anal		650518	0					
ANR	650673	PtrMemberAccess	core -> anal		650518	0					
ANR	650674	Identifier	core		650518	0					
ANR	650675	Identifier	anal		650518	1					
ANR	650676	Argument	op		650518	1					
ANR	650677	Identifier	op		650518	0					
ANR	650678	Argument	addr		650518	2					
ANR	650679	Identifier	addr		650518	0					
ANR	650680	Argument	ptr		650518	3					
ANR	650681	Identifier	ptr		650518	0					
ANR	650682	Argument	len		650518	4					
ANR	650683	Identifier	len		650518	0					
ANR	650684	Argument	mask		650518	5					
ANR	650685	Identifier	mask		650518	0					
ANR	650686	PrimaryExpression	1		650518	1					
ANR	650687	CompoundStatement		29:59:591:591	650518	1					
ANR	650688	GotoStatement	goto err_op ;	1014:2:26740:26751	650518	0	True				
ANR	650689	Identifier	err_op		650518	0					
ANR	650690	IfStatement	if ( ! op -> mnemonic && mask & R_ANAL_OP_MASK_DISASM )		650518	10					
ANR	650691	Condition	! op -> mnemonic && mask & R_ANAL_OP_MASK_DISASM	1016:5:26761:26805	650518	0	True				
ANR	650692	AndExpression	! op -> mnemonic && mask & R_ANAL_OP_MASK_DISASM		650518	0		&&			
ANR	650693	UnaryOperationExpression	! op -> mnemonic		650518	0					
ANR	650694	UnaryOperator	!		650518	0					
ANR	650695	PtrMemberAccess	op -> mnemonic		650518	1					
ANR	650696	Identifier	op		650518	0					
ANR	650697	Identifier	mnemonic		650518	1					
ANR	650698	BitAndExpression	mask & R_ANAL_OP_MASK_DISASM		650518	1		&			
ANR	650699	Identifier	mask		650518	0					
ANR	650700	Identifier	R_ANAL_OP_MASK_DISASM		650518	1					
ANR	650701	CompoundStatement		32:52:663:663	650518	1					
ANR	650702	ExpressionStatement	"r_asm_set_pc ( core -> assembler , addr )"	1019:2:26882:26918	650518	0	True				
ANR	650703	CallExpression	"r_asm_set_pc ( core -> assembler , addr )"		650518	0					
ANR	650704	Callee	r_asm_set_pc		650518	0					
ANR	650705	Identifier	r_asm_set_pc		650518	0					
ANR	650706	ArgumentList	core -> assembler		650518	1					
ANR	650707	Argument	core -> assembler		650518	0					
ANR	650708	PtrMemberAccess	core -> assembler		650518	0					
ANR	650709	Identifier	core		650518	0					
ANR	650710	Identifier	assembler		650518	1					
ANR	650711	Argument	addr		650518	1					
ANR	650712	Identifier	addr		650518	0					
ANR	650713	ExpressionStatement	r_asm_op_init ( & asmop )	1020:2:26922:26944	650518	1	True				
ANR	650714	CallExpression	r_asm_op_init ( & asmop )		650518	0					
ANR	650715	Callee	r_asm_op_init		650518	0					
ANR	650716	Identifier	r_asm_op_init		650518	0					
ANR	650717	ArgumentList	& asmop		650518	1					
ANR	650718	Argument	& asmop		650518	0					
ANR	650719	UnaryOperationExpression	& asmop		650518	0					
ANR	650720	UnaryOperator	&		650518	0					
ANR	650721	Identifier	asmop		650518	1					
ANR	650722	IfStatement	"if ( r_asm_disassemble ( core -> assembler , & asmop , ptr , len ) > 0 )"		650518	2					
ANR	650723	Condition	"r_asm_disassemble ( core -> assembler , & asmop , ptr , len ) > 0"	1021:6:26952:27008	650518	0	True				
ANR	650724	RelationalExpression	"r_asm_disassemble ( core -> assembler , & asmop , ptr , len ) > 0"		650518	0		>			
ANR	650725	CallExpression	"r_asm_disassemble ( core -> assembler , & asmop , ptr , len )"		650518	0					
ANR	650726	Callee	r_asm_disassemble		650518	0					
ANR	650727	Identifier	r_asm_disassemble		650518	0					
ANR	650728	ArgumentList	core -> assembler		650518	1					
ANR	650729	Argument	core -> assembler		650518	0					
ANR	650730	PtrMemberAccess	core -> assembler		650518	0					
ANR	650731	Identifier	core		650518	0					
ANR	650732	Identifier	assembler		650518	1					
ANR	650733	Argument	& asmop		650518	1					
ANR	650734	UnaryOperationExpression	& asmop		650518	0					
ANR	650735	UnaryOperator	&		650518	0					
ANR	650736	Identifier	asmop		650518	1					
ANR	650737	Argument	ptr		650518	2					
ANR	650738	Identifier	ptr		650518	0					
ANR	650739	Argument	len		650518	3					
ANR	650740	Identifier	len		650518	0					
ANR	650741	PrimaryExpression	0		650518	1					
ANR	650742	CompoundStatement		37:65:866:866	650518	1					
ANR	650743	ExpressionStatement	op -> mnemonic = strdup ( r_strbuf_get ( & asmop . buf_asm ) )	1022:3:27016:27069	650518	0	True				
ANR	650744	AssignmentExpression	op -> mnemonic = strdup ( r_strbuf_get ( & asmop . buf_asm ) )		650518	0		=			
ANR	650745	PtrMemberAccess	op -> mnemonic		650518	0					
ANR	650746	Identifier	op		650518	0					
ANR	650747	Identifier	mnemonic		650518	1					
ANR	650748	CallExpression	strdup ( r_strbuf_get ( & asmop . buf_asm ) )		650518	1					
ANR	650749	Callee	strdup		650518	0					
ANR	650750	Identifier	strdup		650518	0					
ANR	650751	ArgumentList	r_strbuf_get ( & asmop . buf_asm )		650518	1					
ANR	650752	Argument	r_strbuf_get ( & asmop . buf_asm )		650518	0					
ANR	650753	CallExpression	r_strbuf_get ( & asmop . buf_asm )		650518	0					
ANR	650754	Callee	r_strbuf_get		650518	0					
ANR	650755	Identifier	r_strbuf_get		650518	0					
ANR	650756	ArgumentList	& asmop . buf_asm		650518	1					
ANR	650757	Argument	& asmop . buf_asm		650518	0					
ANR	650758	UnaryOperationExpression	& asmop . buf_asm		650518	0					
ANR	650759	UnaryOperator	&		650518	0					
ANR	650760	MemberAccess	asmop . buf_asm		650518	1					
ANR	650761	Identifier	asmop		650518	0					
ANR	650762	Identifier	buf_asm		650518	1					
ANR	650763	ExpressionStatement	r_asm_op_fini ( & asmop )	1024:2:27077:27099	650518	3	True				
ANR	650764	CallExpression	r_asm_op_fini ( & asmop )		650518	0					
ANR	650765	Callee	r_asm_op_fini		650518	0					
ANR	650766	Identifier	r_asm_op_fini		650518	0					
ANR	650767	ArgumentList	& asmop		650518	1					
ANR	650768	Argument	& asmop		650518	0					
ANR	650769	UnaryOperationExpression	& asmop		650518	0					
ANR	650770	UnaryOperator	&		650518	0					
ANR	650771	Identifier	asmop		650518	1					
ANR	650772	ReturnStatement	return op ;	1026:1:27105:27114	650518	11	True				
ANR	650773	Identifier	op		650518	0					
ANR	650774	Label	err_op :	1027:0:27116:27122	650518	12	True				
ANR	650775	Identifier	err_op		650518	0					
ANR	650776	ExpressionStatement	free ( op )	1028:1:27125:27134	650518	13	True				
ANR	650777	CallExpression	free ( op )		650518	0					
ANR	650778	Callee	free		650518	0					
ANR	650779	Identifier	free		650518	0					
ANR	650780	ArgumentList	op		650518	1					
ANR	650781	Argument	op		650518	0					
ANR	650782	Identifier	op		650518	0					
ANR	650783	ReturnStatement	return NULL ;	1029:1:27137:27148	650518	14	True				
ANR	650784	Identifier	NULL		650518	0					
ANR	650785	ReturnType	R_API RAnalOp *		650518	1					
ANR	650786	Identifier	r_core_anal_op		650518	2					
ANR	650787	ParameterList	"RCore * core , ut64 addr , int mask"		650518	3					
ANR	650788	Parameter	RCore * core	985:30:26110:26120	650518	0	True				
ANR	650789	ParameterType	RCore *		650518	0					
ANR	650790	Identifier	core		650518	1					
ANR	650791	Parameter	ut64 addr	985:43:26123:26131	650518	1	True				
ANR	650792	ParameterType	ut64		650518	0					
ANR	650793	Identifier	addr		650518	1					
ANR	650794	Parameter	int mask	985:54:26134:26141	650518	2	True				
ANR	650795	ParameterType	int		650518	0					
ANR	650796	Identifier	mask		650518	1					
ANR	650797	CFGEntryNode	ENTRY		650518		True				
ANR	650798	CFGExitNode	EXIT		650518		True				
ANR	650799	Symbol	* op		650518						
ANR	650800	Symbol	op -> mnemonic		650518						
ANR	650801	Symbol	* core		650518						
ANR	650802	Symbol	delta		650518						
ANR	650803	Symbol	core -> offset		650518						
ANR	650804	Symbol	core -> assembler		650518						
ANR	650805	Symbol	core -> anal		650518						
ANR	650806	Symbol	asmop		650518						
ANR	650807	Symbol	len		650518						
ANR	650808	Symbol	core -> io		650518						
ANR	650809	Symbol	addr		650518						
ANR	650810	Symbol	UT64_MAX		650518						
ANR	650811	Symbol	mask		650518						
ANR	650812	Symbol	r_anal_op		650518						
ANR	650813	Symbol	core -> blocksize		650518						
ANR	650814	Symbol	op		650518						
ANR	650815	Symbol	NULL		650518						
ANR	650816	Symbol	core -> block		650518						
ANR	650817	Symbol	r_io_read_at		650518						
ANR	650818	Symbol	RAnalOp		650518						
ANR	650819	Symbol	ptr		650518						
ANR	650820	Symbol	core		650518						
ANR	650821	Symbol	R_NEW0		650518						
ANR	650822	Symbol	buf		650518						
ANR	650823	Symbol	r_strbuf_get		650518						
ANR	650824	Symbol	R_ANAL_OP_MASK_DISASM		650518						
ANR	650825	Symbol	& asmop		650518						
ANR	650826	Symbol	& asmop . buf_asm		650518						
ANR	650827	Symbol	strdup		650518						
ANR	650828	Symbol	r_asm_disassemble		650518						
ANR	650829	Function	print_hint_h_format	1032:0:27153:28257							
ANR	650830	FunctionDef	print_hint_h_format (RAnalHint * hint)		650829	0					
ANR	650831	CompoundStatement		1032:49:27202:28257	650829	0					
ANR	650832	Statement	r_cons_printf	1033:1:27205:27217	650829	0	True				
ANR	650833	Statement	(	1033:15:27219:27219	650829	1	True				
ANR	650834	Statement	""" 0x%08"""	1033:16:27220:27227	650829	2	True				
ANR	650835	Statement	PFMT64x	1033:24:27228:27234	650829	3	True				
ANR	650836	Statement	""" - 0x%08"""	1033:31:27235:27244	650829	4	True				
ANR	650837	Statement	PFMT64x	1033:41:27245:27251	650829	5	True				
ANR	650838	Statement	""" =>"""	1033:48:27252:27256	650829	6	True				
ANR	650839	Statement	","	1033:53:27257:27257	650829	7	True				
ANR	650840	Statement	hint	1033:55:27259:27262	650829	8	True				
ANR	650841	Statement	->	1033:59:27263:27264	650829	9	True				
ANR	650842	Statement	addr	1033:61:27265:27268	650829	10	True				
ANR	650843	Statement	","	1033:65:27269:27269	650829	11	True				
ANR	650844	Statement	hint	1033:67:27271:27274	650829	12	True				
ANR	650845	Statement	->	1033:71:27275:27276	650829	13	True				
ANR	650846	Statement	addr	1033:73:27277:27280	650829	14	True				
ANR	650847	Statement	+	1033:78:27282:27282	650829	15	True				
ANR	650848	Statement	hint	1033:80:27284:27287	650829	16	True				
ANR	650849	Statement	->	1033:84:27288:27289	650829	17	True				
ANR	650850	Statement	size	1033:86:27290:27293	650829	18	True				
ANR	650851	Statement	)	1033:90:27294:27294	650829	19	True				
ANR	650852	ExpressionStatement		1033:91:27295:27295	650829	20	True				
ANR	650853	ExpressionStatement	"HINTCMD ( hint , arch , "" arch='%s'"" )"	1034:1:27298:27332	650829	21	True				
ANR	650854	CallExpression	"HINTCMD ( hint , arch , "" arch='%s'"" )"		650829	0					
ANR	650855	Callee	HINTCMD		650829	0					
ANR	650856	Identifier	HINTCMD		650829	0					
ANR	650857	ArgumentList	hint		650829	1					
ANR	650858	Argument	hint		650829	0					
ANR	650859	Identifier	hint		650829	0					
ANR	650860	Argument	arch		650829	1					
ANR	650861	Identifier	arch		650829	0					
ANR	650862	Argument	""" arch='%s'"""		650829	2					
ANR	650863	PrimaryExpression	""" arch='%s'"""		650829	0					
ANR	650864	ExpressionStatement	"HINTCMD ( hint , bits , "" bits=%d"" )"	1035:1:27335:27367	650829	22	True				
ANR	650865	CallExpression	"HINTCMD ( hint , bits , "" bits=%d"" )"		650829	0					
ANR	650866	Callee	HINTCMD		650829	0					
ANR	650867	Identifier	HINTCMD		650829	0					
ANR	650868	ArgumentList	hint		650829	1					
ANR	650869	Argument	hint		650829	0					
ANR	650870	Identifier	hint		650829	0					
ANR	650871	Argument	bits		650829	1					
ANR	650872	Identifier	bits		650829	0					
ANR	650873	Argument	""" bits=%d"""		650829	2					
ANR	650874	PrimaryExpression	""" bits=%d"""		650829	0					
ANR	650875	IfStatement	if ( hint -> type )		650829	23					
ANR	650876	Condition	hint -> type	1036:5:27374:27383	650829	0	True				
ANR	650877	PtrMemberAccess	hint -> type		650829	0					
ANR	650878	Identifier	hint		650829	0					
ANR	650879	Identifier	type		650829	1					
ANR	650880	CompoundStatement		6:2:187:242	650829	1					
ANR	650881	IdentifierDeclStatement	const char * type = r_anal_optype_to_string ( hint -> type ) ;	1037:2:27390:27445	650829	0	True				
ANR	650882	IdentifierDecl	* type = r_anal_optype_to_string ( hint -> type )		650829	0					
ANR	650883	IdentifierDeclType	const char *		650829	0					
ANR	650884	Identifier	type		650829	1					
ANR	650885	AssignmentExpression	* type = r_anal_optype_to_string ( hint -> type )		650829	2		=			
ANR	650886	Identifier	type		650829	0					
ANR	650887	CallExpression	r_anal_optype_to_string ( hint -> type )		650829	1					
ANR	650888	Callee	r_anal_optype_to_string		650829	0					
ANR	650889	Identifier	r_anal_optype_to_string		650829	0					
ANR	650890	ArgumentList	hint -> type		650829	1					
ANR	650891	Argument	hint -> type		650829	0					
ANR	650892	PtrMemberAccess	hint -> type		650829	0					
ANR	650893	Identifier	hint		650829	0					
ANR	650894	Identifier	type		650829	1					
ANR	650895	IfStatement	if ( type )		650829	1					
ANR	650896	Condition	type	1038:6:27453:27456	650829	0	True				
ANR	650897	Identifier	type		650829	0					
ANR	650898	CompoundStatement		7:12:256:256	650829	1					
ANR	650899	ExpressionStatement	"r_cons_printf ( "" type='%s'"" , type )"	1039:3:27464:27498	650829	0	True				
ANR	650900	CallExpression	"r_cons_printf ( "" type='%s'"" , type )"		650829	0					
ANR	650901	Callee	r_cons_printf		650829	0					
ANR	650902	Identifier	r_cons_printf		650829	0					
ANR	650903	ArgumentList	""" type='%s'"""		650829	1					
ANR	650904	Argument	""" type='%s'"""		650829	0					
ANR	650905	PrimaryExpression	""" type='%s'"""		650829	0					
ANR	650906	Argument	type		650829	1					
ANR	650907	Identifier	type		650829	0					
ANR	650908	ExpressionStatement	"HINTCMD ( hint , size , "" size=%d"" )"	1042:1:27508:27540	650829	24	True				
ANR	650909	CallExpression	"HINTCMD ( hint , size , "" size=%d"" )"		650829	0					
ANR	650910	Callee	HINTCMD		650829	0					
ANR	650911	Identifier	HINTCMD		650829	0					
ANR	650912	ArgumentList	hint		650829	1					
ANR	650913	Argument	hint		650829	0					
ANR	650914	Identifier	hint		650829	0					
ANR	650915	Argument	size		650829	1					
ANR	650916	Identifier	size		650829	0					
ANR	650917	Argument	""" size=%d"""		650829	2					
ANR	650918	PrimaryExpression	""" size=%d"""		650829	0					
ANR	650919	ExpressionStatement	"HINTCMD ( hint , opcode , "" opcode='%s'"" )"	1043:1:27543:27581	650829	25	True				
ANR	650920	CallExpression	"HINTCMD ( hint , opcode , "" opcode='%s'"" )"		650829	0					
ANR	650921	Callee	HINTCMD		650829	0					
ANR	650922	Identifier	HINTCMD		650829	0					
ANR	650923	ArgumentList	hint		650829	1					
ANR	650924	Argument	hint		650829	0					
ANR	650925	Identifier	hint		650829	0					
ANR	650926	Argument	opcode		650829	1					
ANR	650927	Identifier	opcode		650829	0					
ANR	650928	Argument	""" opcode='%s'"""		650829	2					
ANR	650929	PrimaryExpression	""" opcode='%s'"""		650829	0					
ANR	650930	ExpressionStatement	"HINTCMD ( hint , syntax , "" syntax='%s'"" )"	1044:1:27584:27622	650829	26	True				
ANR	650931	CallExpression	"HINTCMD ( hint , syntax , "" syntax='%s'"" )"		650829	0					
ANR	650932	Callee	HINTCMD		650829	0					
ANR	650933	Identifier	HINTCMD		650829	0					
ANR	650934	ArgumentList	hint		650829	1					
ANR	650935	Argument	hint		650829	0					
ANR	650936	Identifier	hint		650829	0					
ANR	650937	Argument	syntax		650829	1					
ANR	650938	Identifier	syntax		650829	0					
ANR	650939	Argument	""" syntax='%s'"""		650829	2					
ANR	650940	PrimaryExpression	""" syntax='%s'"""		650829	0					
ANR	650941	ExpressionStatement	"HINTCMD ( hint , immbase , "" immbase=%d"" )"	1045:1:27625:27663	650829	27	True				
ANR	650942	CallExpression	"HINTCMD ( hint , immbase , "" immbase=%d"" )"		650829	0					
ANR	650943	Callee	HINTCMD		650829	0					
ANR	650944	Identifier	HINTCMD		650829	0					
ANR	650945	ArgumentList	hint		650829	1					
ANR	650946	Argument	hint		650829	0					
ANR	650947	Identifier	hint		650829	0					
ANR	650948	Argument	immbase		650829	1					
ANR	650949	Identifier	immbase		650829	0					
ANR	650950	Argument	""" immbase=%d"""		650829	2					
ANR	650951	PrimaryExpression	""" immbase=%d"""		650829	0					
ANR	650952	ExpressionStatement	"HINTCMD ( hint , esil , "" esil='%s'"" )"	1046:1:27666:27700	650829	28	True				
ANR	650953	CallExpression	"HINTCMD ( hint , esil , "" esil='%s'"" )"		650829	0					
ANR	650954	Callee	HINTCMD		650829	0					
ANR	650955	Identifier	HINTCMD		650829	0					
ANR	650956	ArgumentList	hint		650829	1					
ANR	650957	Argument	hint		650829	0					
ANR	650958	Identifier	hint		650829	0					
ANR	650959	Argument	esil		650829	1					
ANR	650960	Identifier	esil		650829	0					
ANR	650961	Argument	""" esil='%s'"""		650829	2					
ANR	650962	PrimaryExpression	""" esil='%s'"""		650829	0					
ANR	650963	Statement	HINTCMD	1047:1:27703:27709	650829	29	True				
ANR	650964	Statement	(	1047:9:27711:27711	650829	30	True				
ANR	650965	Statement	hint	1047:10:27712:27715	650829	31	True				
ANR	650966	Statement	","	1047:14:27716:27716	650829	32	True				
ANR	650967	Statement	ptr	1047:16:27718:27720	650829	33	True				
ANR	650968	Statement	","	1047:19:27721:27721	650829	34	True				
ANR	650969	Statement	""" ptr=0x%"""	1047:21:27723:27732	650829	35	True				
ANR	650970	Statement	PFMT64x	1047:31:27733:27739	650829	36	True				
ANR	650971	Statement	)	1047:38:27740:27740	650829	37	True				
ANR	650972	ExpressionStatement		1047:39:27741:27741	650829	38	True				
ANR	650973	IfStatement	if ( hint -> val != UT64_MAX )		650829	39					
ANR	650974	Condition	hint -> val != UT64_MAX	1048:5:27748:27768	650829	0	True				
ANR	650975	EqualityExpression	hint -> val != UT64_MAX		650829	0		!=			
ANR	650976	PtrMemberAccess	hint -> val		650829	0					
ANR	650977	Identifier	hint		650829	0					
ANR	650978	Identifier	val		650829	1					
ANR	650979	Identifier	UT64_MAX		650829	1					
ANR	650980	CompoundStatement		17:28:568:568	650829	1					
ANR	650981	Statement	r_cons_printf	1049:2:27775:27787	650829	0	True				
ANR	650982	Statement	(	1049:16:27789:27789	650829	1	True				
ANR	650983	Statement	""" val=0x%08"""	1049:17:27790:27801	650829	2	True				
ANR	650984	Statement	PFMT64x	1049:29:27802:27808	650829	3	True				
ANR	650985	Statement	","	1049:36:27809:27809	650829	4	True				
ANR	650986	Statement	hint	1049:38:27811:27814	650829	5	True				
ANR	650987	Statement	->	1049:42:27815:27816	650829	6	True				
ANR	650988	Statement	val	1049:44:27817:27819	650829	7	True				
ANR	650989	Statement	)	1049:47:27820:27820	650829	8	True				
ANR	650990	ExpressionStatement		1049:48:27821:27821	650829	9	True				
ANR	650991	IfStatement	if ( hint -> jump != UT64_MAX )		650829	40					
ANR	650992	Condition	hint -> jump != UT64_MAX	1051:5:27831:27852	650829	0	True				
ANR	650993	EqualityExpression	hint -> jump != UT64_MAX		650829	0		!=			
ANR	650994	PtrMemberAccess	hint -> jump		650829	0					
ANR	650995	Identifier	hint		650829	0					
ANR	650996	Identifier	jump		650829	1					
ANR	650997	Identifier	UT64_MAX		650829	1					
ANR	650998	CompoundStatement		20:29:652:652	650829	1					
ANR	650999	Statement	r_cons_printf	1052:2:27859:27871	650829	0	True				
ANR	651000	Statement	(	1052:16:27873:27873	650829	1	True				
ANR	651001	Statement	""" jump=0x%08"""	1052:17:27874:27886	650829	2	True				
ANR	651002	Statement	PFMT64x	1052:30:27887:27893	650829	3	True				
ANR	651003	Statement	","	1052:37:27894:27894	650829	4	True				
ANR	651004	Statement	hint	1052:39:27896:27899	650829	5	True				
ANR	651005	Statement	->	1052:43:27900:27901	650829	6	True				
ANR	651006	Statement	jump	1052:45:27902:27905	650829	7	True				
ANR	651007	Statement	)	1052:49:27906:27906	650829	8	True				
ANR	651008	ExpressionStatement		1052:50:27907:27907	650829	9	True				
ANR	651009	IfStatement	if ( hint -> fail != UT64_MAX )		650829	41					
ANR	651010	Condition	hint -> fail != UT64_MAX	1054:5:27917:27938	650829	0	True				
ANR	651011	EqualityExpression	hint -> fail != UT64_MAX		650829	0		!=			
ANR	651012	PtrMemberAccess	hint -> fail		650829	0					
ANR	651013	Identifier	hint		650829	0					
ANR	651014	Identifier	fail		650829	1					
ANR	651015	Identifier	UT64_MAX		650829	1					
ANR	651016	CompoundStatement		23:29:738:738	650829	1					
ANR	651017	Statement	r_cons_printf	1055:2:27945:27957	650829	0	True				
ANR	651018	Statement	(	1055:16:27959:27959	650829	1	True				
ANR	651019	Statement	""" fail=0x%08"""	1055:17:27960:27972	650829	2	True				
ANR	651020	Statement	PFMT64x	1055:30:27973:27979	650829	3	True				
ANR	651021	Statement	","	1055:37:27980:27980	650829	4	True				
ANR	651022	Statement	hint	1055:39:27982:27985	650829	5	True				
ANR	651023	Statement	->	1055:43:27986:27987	650829	6	True				
ANR	651024	Statement	fail	1055:45:27988:27991	650829	7	True				
ANR	651025	Statement	)	1055:49:27992:27992	650829	8	True				
ANR	651026	ExpressionStatement		1055:50:27993:27993	650829	9	True				
ANR	651027	IfStatement	if ( hint -> ret != UT64_MAX )		650829	42					
ANR	651028	Condition	hint -> ret != UT64_MAX	1057:5:28003:28023	650829	0	True				
ANR	651029	EqualityExpression	hint -> ret != UT64_MAX		650829	0		!=			
ANR	651030	PtrMemberAccess	hint -> ret		650829	0					
ANR	651031	Identifier	hint		650829	0					
ANR	651032	Identifier	ret		650829	1					
ANR	651033	Identifier	UT64_MAX		650829	1					
ANR	651034	CompoundStatement		26:28:823:823	650829	1					
ANR	651035	Statement	r_cons_printf	1058:2:28030:28042	650829	0	True				
ANR	651036	Statement	(	1058:16:28044:28044	650829	1	True				
ANR	651037	Statement	""" ret=0x%08"""	1058:17:28045:28056	650829	2	True				
ANR	651038	Statement	PFMT64x	1058:29:28057:28063	650829	3	True				
ANR	651039	Statement	","	1058:36:28064:28064	650829	4	True				
ANR	651040	Statement	hint	1058:38:28066:28069	650829	5	True				
ANR	651041	Statement	->	1058:42:28070:28071	650829	6	True				
ANR	651042	Statement	ret	1058:44:28072:28074	650829	7	True				
ANR	651043	Statement	)	1058:47:28075:28075	650829	8	True				
ANR	651044	ExpressionStatement		1058:48:28076:28076	650829	9	True				
ANR	651045	IfStatement	if ( hint -> high )		650829	43					
ANR	651046	Condition	hint -> high	1060:5:28086:28095	650829	0	True				
ANR	651047	PtrMemberAccess	hint -> high		650829	0					
ANR	651048	Identifier	hint		650829	0					
ANR	651049	Identifier	high		650829	1					
ANR	651050	CompoundStatement		29:17:895:895	650829	1					
ANR	651051	ExpressionStatement	"r_cons_printf ( "" high=true"" )"	1061:2:28102:28130	650829	0	True				
ANR	651052	CallExpression	"r_cons_printf ( "" high=true"" )"		650829	0					
ANR	651053	Callee	r_cons_printf		650829	0					
ANR	651054	Identifier	r_cons_printf		650829	0					
ANR	651055	ArgumentList	""" high=true"""		650829	1					
ANR	651056	Argument	""" high=true"""		650829	0					
ANR	651057	PrimaryExpression	""" high=true"""		650829	0					
ANR	651058	IfStatement	if ( hint -> stackframe != UT64_MAX )		650829	44					
ANR	651059	Condition	hint -> stackframe != UT64_MAX	1063:5:28140:28167	650829	0	True				
ANR	651060	EqualityExpression	hint -> stackframe != UT64_MAX		650829	0		!=			
ANR	651061	PtrMemberAccess	hint -> stackframe		650829	0					
ANR	651062	Identifier	hint		650829	0					
ANR	651063	Identifier	stackframe		650829	1					
ANR	651064	Identifier	UT64_MAX		650829	1					
ANR	651065	CompoundStatement		32:35:967:967	650829	1					
ANR	651066	Statement	r_cons_printf	1064:2:28174:28186	650829	0	True				
ANR	651067	Statement	(	1064:16:28188:28188	650829	1	True				
ANR	651068	Statement	""" stackframe=0x%"""	1064:17:28189:28205	650829	2	True				
ANR	651069	Statement	PFMT64x	1064:34:28206:28212	650829	3	True				
ANR	651070	Statement	","	1064:41:28213:28213	650829	4	True				
ANR	651071	Statement	hint	1064:43:28215:28218	650829	5	True				
ANR	651072	Statement	->	1064:47:28219:28220	650829	6	True				
ANR	651073	Statement	stackframe	1064:49:28221:28230	650829	7	True				
ANR	651074	Statement	)	1064:59:28231:28231	650829	8	True				
ANR	651075	ExpressionStatement		1064:60:28232:28232	650829	9	True				
ANR	651076	ExpressionStatement	r_cons_newline ( )	1066:1:28238:28255	650829	45	True				
ANR	651077	CallExpression	r_cons_newline ( )		650829	0					
ANR	651078	Callee	r_cons_newline		650829	0					
ANR	651079	Identifier	r_cons_newline		650829	0					
ANR	651080	ArgumentList			650829	1					
ANR	651081	ReturnType	static void		650829	1					
ANR	651082	Identifier	print_hint_h_format		650829	2					
ANR	651083	ParameterList	RAnalHint * hint		650829	3					
ANR	651084	Parameter	RAnalHint * hint	1032:32:27185:27199	650829	0	True				
ANR	651085	ParameterType	RAnalHint *		650829	0					
ANR	651086	Identifier	hint		650829	1					
ANR	651087	CFGEntryNode	ENTRY		650829		True				
ANR	651088	CFGExitNode	EXIT		650829		True				
ANR	651089	Symbol	* hint		650829						
ANR	651090	Symbol	immbase		650829						
ANR	651091	Symbol	bits		650829						
ANR	651092	Symbol	hint -> val		650829						
ANR	651093	Symbol	hint -> ret		650829						
ANR	651094	Symbol	r_anal_optype_to_string		650829						
ANR	651095	Symbol	type		650829						
ANR	651096	Symbol	opcode		650829						
ANR	651097	Symbol	hint -> jump		650829						
ANR	651098	Symbol	hint -> stackframe		650829						
ANR	651099	Symbol	hint -> fail		650829						
ANR	651100	Symbol	size		650829						
ANR	651101	Symbol	hint		650829						
ANR	651102	Symbol	syntax		650829						
ANR	651103	Symbol	arch		650829						
ANR	651104	Symbol	UT64_MAX		650829						
ANR	651105	Symbol	hint -> type		650829						
ANR	651106	Symbol	esil		650829						
ANR	651107	Symbol	hint -> high		650829						
ANR	651108	Function	anal_hint_print	1070:0:28306:30611							
ANR	651109	FunctionDef	"anal_hint_print (RAnalHint * hint , int mode , PJ * pj)"		651108	0					
ANR	651110	CompoundStatement		1070:63:28369:30611	651108	0					
ANR	651111	SwitchStatement	switch ( mode )		651108	0					
ANR	651112	Condition	mode	1071:9:28380:28383	651108	0	True				
ANR	651113	Identifier	mode		651108	0					
ANR	651114	CompoundStatement		2:15:16:16	651108	1					
ANR	651115	Label	case '*' :	1072:1:28389:28397	651108	0	True				
ANR	651116	ExpressionStatement	"HINTCMD_ADDR ( hint , arch , ""aha %s"" )"	1073:2:28401:28436	651108	1	True				
ANR	651117	CallExpression	"HINTCMD_ADDR ( hint , arch , ""aha %s"" )"		651108	0					
ANR	651118	Callee	HINTCMD_ADDR		651108	0					
ANR	651119	Identifier	HINTCMD_ADDR		651108	0					
ANR	651120	ArgumentList	hint		651108	1					
ANR	651121	Argument	hint		651108	0					
ANR	651122	Identifier	hint		651108	0					
ANR	651123	Argument	arch		651108	1					
ANR	651124	Identifier	arch		651108	0					
ANR	651125	Argument	"""aha %s"""		651108	2					
ANR	651126	PrimaryExpression	"""aha %s"""		651108	0					
ANR	651127	ExpressionStatement	"HINTCMD_ADDR ( hint , bits , ""ahb %d"" )"	1074:2:28440:28475	651108	2	True				
ANR	651128	CallExpression	"HINTCMD_ADDR ( hint , bits , ""ahb %d"" )"		651108	0					
ANR	651129	Callee	HINTCMD_ADDR		651108	0					
ANR	651130	Identifier	HINTCMD_ADDR		651108	0					
ANR	651131	ArgumentList	hint		651108	1					
ANR	651132	Argument	hint		651108	0					
ANR	651133	Identifier	hint		651108	0					
ANR	651134	Argument	bits		651108	1					
ANR	651135	Identifier	bits		651108	0					
ANR	651136	Argument	"""ahb %d"""		651108	2					
ANR	651137	PrimaryExpression	"""ahb %d"""		651108	0					
ANR	651138	IfStatement	if ( hint -> type )		651108	3					
ANR	651139	Condition	hint -> type	1075:6:28483:28492	651108	0	True				
ANR	651140	PtrMemberAccess	hint -> type		651108	0					
ANR	651141	Identifier	hint		651108	0					
ANR	651142	Identifier	type		651108	1					
ANR	651143	CompoundStatement		7:3:130:185	651108	1					
ANR	651144	IdentifierDeclStatement	const char * type = r_anal_optype_to_string ( hint -> type ) ;	1076:3:28500:28555	651108	0	True				
ANR	651145	IdentifierDecl	* type = r_anal_optype_to_string ( hint -> type )		651108	0					
ANR	651146	IdentifierDeclType	const char *		651108	0					
ANR	651147	Identifier	type		651108	1					
ANR	651148	AssignmentExpression	* type = r_anal_optype_to_string ( hint -> type )		651108	2		=			
ANR	651149	Identifier	type		651108	0					
ANR	651150	CallExpression	r_anal_optype_to_string ( hint -> type )		651108	1					
ANR	651151	Callee	r_anal_optype_to_string		651108	0					
ANR	651152	Identifier	r_anal_optype_to_string		651108	0					
ANR	651153	ArgumentList	hint -> type		651108	1					
ANR	651154	Argument	hint -> type		651108	0					
ANR	651155	PtrMemberAccess	hint -> type		651108	0					
ANR	651156	Identifier	hint		651108	0					
ANR	651157	Identifier	type		651108	1					
ANR	651158	IfStatement	if ( type )		651108	1					
ANR	651159	Condition	type	1077:7:28564:28567	651108	0	True				
ANR	651160	Identifier	type		651108	0					
ANR	651161	CompoundStatement		8:13:200:200	651108	1					
ANR	651162	Statement	r_cons_printf	1078:4:28576:28588	651108	0	True				
ANR	651163	Statement	(	1078:18:28590:28590	651108	1	True				
ANR	651164	Statement	"""aht %s @ 0x%"""	1078:19:28591:28604	651108	2	True				
ANR	651165	Statement	PFMT64x	1078:33:28605:28611	651108	3	True				
ANR	651166	Statement	"""\\n"""	1078:40:28612:28615	651108	4	True				
ANR	651167	Statement	","	1078:44:28616:28616	651108	5	True				
ANR	651168	Statement	type	1078:46:28618:28621	651108	6	True				
ANR	651169	Statement	","	1078:50:28622:28622	651108	7	True				
ANR	651170	Statement	hint	1078:52:28624:28627	651108	8	True				
ANR	651171	Statement	->	1078:56:28628:28629	651108	9	True				
ANR	651172	Statement	addr	1078:58:28630:28633	651108	10	True				
ANR	651173	Statement	)	1078:62:28634:28634	651108	11	True				
ANR	651174	ExpressionStatement		1078:63:28635:28635	651108	12	True				
ANR	651175	ExpressionStatement	"HINTCMD_ADDR ( hint , size , ""ahs %d"" )"	1081:2:28648:28683	651108	4	True				
ANR	651176	CallExpression	"HINTCMD_ADDR ( hint , size , ""ahs %d"" )"		651108	0					
ANR	651177	Callee	HINTCMD_ADDR		651108	0					
ANR	651178	Identifier	HINTCMD_ADDR		651108	0					
ANR	651179	ArgumentList	hint		651108	1					
ANR	651180	Argument	hint		651108	0					
ANR	651181	Identifier	hint		651108	0					
ANR	651182	Argument	size		651108	1					
ANR	651183	Identifier	size		651108	0					
ANR	651184	Argument	"""ahs %d"""		651108	2					
ANR	651185	PrimaryExpression	"""ahs %d"""		651108	0					
ANR	651186	ExpressionStatement	"HINTCMD_ADDR ( hint , opcode , ""aho %s"" )"	1082:2:28687:28724	651108	5	True				
ANR	651187	CallExpression	"HINTCMD_ADDR ( hint , opcode , ""aho %s"" )"		651108	0					
ANR	651188	Callee	HINTCMD_ADDR		651108	0					
ANR	651189	Identifier	HINTCMD_ADDR		651108	0					
ANR	651190	ArgumentList	hint		651108	1					
ANR	651191	Argument	hint		651108	0					
ANR	651192	Identifier	hint		651108	0					
ANR	651193	Argument	opcode		651108	1					
ANR	651194	Identifier	opcode		651108	0					
ANR	651195	Argument	"""aho %s"""		651108	2					
ANR	651196	PrimaryExpression	"""aho %s"""		651108	0					
ANR	651197	ExpressionStatement	"HINTCMD_ADDR ( hint , syntax , ""ahS %s"" )"	1083:2:28728:28765	651108	6	True				
ANR	651198	CallExpression	"HINTCMD_ADDR ( hint , syntax , ""ahS %s"" )"		651108	0					
ANR	651199	Callee	HINTCMD_ADDR		651108	0					
ANR	651200	Identifier	HINTCMD_ADDR		651108	0					
ANR	651201	ArgumentList	hint		651108	1					
ANR	651202	Argument	hint		651108	0					
ANR	651203	Identifier	hint		651108	0					
ANR	651204	Argument	syntax		651108	1					
ANR	651205	Identifier	syntax		651108	0					
ANR	651206	Argument	"""ahS %s"""		651108	2					
ANR	651207	PrimaryExpression	"""ahS %s"""		651108	0					
ANR	651208	ExpressionStatement	"HINTCMD_ADDR ( hint , immbase , ""ahi %d"" )"	1084:2:28769:28807	651108	7	True				
ANR	651209	CallExpression	"HINTCMD_ADDR ( hint , immbase , ""ahi %d"" )"		651108	0					
ANR	651210	Callee	HINTCMD_ADDR		651108	0					
ANR	651211	Identifier	HINTCMD_ADDR		651108	0					
ANR	651212	ArgumentList	hint		651108	1					
ANR	651213	Argument	hint		651108	0					
ANR	651214	Identifier	hint		651108	0					
ANR	651215	Argument	immbase		651108	1					
ANR	651216	Identifier	immbase		651108	0					
ANR	651217	Argument	"""ahi %d"""		651108	2					
ANR	651218	PrimaryExpression	"""ahi %d"""		651108	0					
ANR	651219	ExpressionStatement	"HINTCMD_ADDR ( hint , esil , ""ahe %s"" )"	1085:2:28811:28846	651108	8	True				
ANR	651220	CallExpression	"HINTCMD_ADDR ( hint , esil , ""ahe %s"" )"		651108	0					
ANR	651221	Callee	HINTCMD_ADDR		651108	0					
ANR	651222	Identifier	HINTCMD_ADDR		651108	0					
ANR	651223	ArgumentList	hint		651108	1					
ANR	651224	Argument	hint		651108	0					
ANR	651225	Identifier	hint		651108	0					
ANR	651226	Argument	esil		651108	1					
ANR	651227	Identifier	esil		651108	0					
ANR	651228	Argument	"""ahe %s"""		651108	2					
ANR	651229	PrimaryExpression	"""ahe %s"""		651108	0					
ANR	651230	Statement	HINTCMD_ADDR	1086:2:28850:28861	651108	9	True				
ANR	651231	Statement	(	1086:15:28863:28863	651108	10	True				
ANR	651232	Statement	hint	1086:16:28864:28867	651108	11	True				
ANR	651233	Statement	","	1086:20:28868:28868	651108	12	True				
ANR	651234	Statement	ptr	1086:22:28870:28872	651108	13	True				
ANR	651235	Statement	","	1086:25:28873:28873	651108	14	True				
ANR	651236	Statement	"""ahp 0x%"""	1086:27:28875:28883	651108	15	True				
ANR	651237	Statement	PFMT64x	1086:36:28884:28890	651108	16	True				
ANR	651238	Statement	)	1086:43:28891:28891	651108	17	True				
ANR	651239	ExpressionStatement		1086:44:28892:28892	651108	18	True				
ANR	651240	IfStatement	if ( hint -> jump != UT64_MAX )		651108	19					
ANR	651241	Condition	hint -> jump != UT64_MAX	1087:6:28900:28921	651108	0	True				
ANR	651242	EqualityExpression	hint -> jump != UT64_MAX		651108	0		!=			
ANR	651243	PtrMemberAccess	hint -> jump		651108	0					
ANR	651244	Identifier	hint		651108	0					
ANR	651245	Identifier	jump		651108	1					
ANR	651246	Identifier	UT64_MAX		651108	1					
ANR	651247	CompoundStatement		18:30:554:554	651108	1					
ANR	651248	Statement	r_cons_printf	1088:3:28929:28941	651108	0	True				
ANR	651249	Statement	(	1088:17:28943:28943	651108	1	True				
ANR	651250	Statement	"""ahc 0x%"""	1088:18:28944:28952	651108	2	True				
ANR	651251	Statement	PFMT64x	1088:27:28953:28959	651108	3	True				
ANR	651252	Statement	""" @ 0x%"""	1088:34:28960:28967	651108	4	True				
ANR	651253	Statement	PFMT64x	1088:42:28968:28974	651108	5	True				
ANR	651254	Statement	"""\\n"""	1088:49:28975:28978	651108	6	True				
ANR	651255	Statement	","	1088:53:28979:28979	651108	7	True				
ANR	651256	Statement	hint	1088:55:28981:28984	651108	8	True				
ANR	651257	Statement	->	1088:59:28985:28986	651108	9	True				
ANR	651258	Statement	jump	1088:61:28987:28990	651108	10	True				
ANR	651259	Statement	","	1088:65:28991:28991	651108	11	True				
ANR	651260	Statement	hint	1088:67:28993:28996	651108	12	True				
ANR	651261	Statement	->	1088:71:28997:28998	651108	13	True				
ANR	651262	Statement	addr	1088:73:28999:29002	651108	14	True				
ANR	651263	Statement	)	1088:77:29003:29003	651108	15	True				
ANR	651264	ExpressionStatement		1088:78:29004:29004	651108	16	True				
ANR	651265	IfStatement	if ( hint -> fail != UT64_MAX )		651108	20					
ANR	651266	Condition	hint -> fail != UT64_MAX	1090:6:29016:29037	651108	0	True				
ANR	651267	EqualityExpression	hint -> fail != UT64_MAX		651108	0		!=			
ANR	651268	PtrMemberAccess	hint -> fail		651108	0					
ANR	651269	Identifier	hint		651108	0					
ANR	651270	Identifier	fail		651108	1					
ANR	651271	Identifier	UT64_MAX		651108	1					
ANR	651272	CompoundStatement		21:30:670:670	651108	1					
ANR	651273	Statement	r_cons_printf	1091:3:29045:29057	651108	0	True				
ANR	651274	Statement	(	1091:17:29059:29059	651108	1	True				
ANR	651275	Statement	"""ahf 0x%"""	1091:18:29060:29068	651108	2	True				
ANR	651276	Statement	PFMT64x	1091:27:29069:29075	651108	3	True				
ANR	651277	Statement	""" @ 0x%"""	1091:34:29076:29083	651108	4	True				
ANR	651278	Statement	PFMT64x	1091:42:29084:29090	651108	5	True				
ANR	651279	Statement	"""\\n"""	1091:49:29091:29094	651108	6	True				
ANR	651280	Statement	","	1091:53:29095:29095	651108	7	True				
ANR	651281	Statement	hint	1091:55:29097:29100	651108	8	True				
ANR	651282	Statement	->	1091:59:29101:29102	651108	9	True				
ANR	651283	Statement	fail	1091:61:29103:29106	651108	10	True				
ANR	651284	Statement	","	1091:65:29107:29107	651108	11	True				
ANR	651285	Statement	hint	1091:67:29109:29112	651108	12	True				
ANR	651286	Statement	->	1091:71:29113:29114	651108	13	True				
ANR	651287	Statement	addr	1091:73:29115:29118	651108	14	True				
ANR	651288	Statement	)	1091:77:29119:29119	651108	15	True				
ANR	651289	ExpressionStatement		1091:78:29120:29120	651108	16	True				
ANR	651290	IfStatement	if ( hint -> ret != UT64_MAX )		651108	21					
ANR	651291	Condition	hint -> ret != UT64_MAX	1093:6:29132:29152	651108	0	True				
ANR	651292	EqualityExpression	hint -> ret != UT64_MAX		651108	0		!=			
ANR	651293	PtrMemberAccess	hint -> ret		651108	0					
ANR	651294	Identifier	hint		651108	0					
ANR	651295	Identifier	ret		651108	1					
ANR	651296	Identifier	UT64_MAX		651108	1					
ANR	651297	CompoundStatement		24:29:785:785	651108	1					
ANR	651298	Statement	r_cons_printf	1094:3:29160:29172	651108	0	True				
ANR	651299	Statement	(	1094:17:29174:29174	651108	1	True				
ANR	651300	Statement	"""ahr 0x%"""	1094:18:29175:29183	651108	2	True				
ANR	651301	Statement	PFMT64x	1094:27:29184:29190	651108	3	True				
ANR	651302	Statement	""" @ 0x%"""	1094:34:29191:29198	651108	4	True				
ANR	651303	Statement	PFMT64x	1094:42:29199:29205	651108	5	True				
ANR	651304	Statement	"""\\n"""	1094:49:29206:29209	651108	6	True				
ANR	651305	Statement	","	1094:53:29210:29210	651108	7	True				
ANR	651306	Statement	hint	1094:55:29212:29215	651108	8	True				
ANR	651307	Statement	->	1094:59:29216:29217	651108	9	True				
ANR	651308	Statement	ret	1094:61:29218:29220	651108	10	True				
ANR	651309	Statement	","	1094:64:29221:29221	651108	11	True				
ANR	651310	Statement	hint	1094:66:29223:29226	651108	12	True				
ANR	651311	Statement	->	1094:70:29227:29228	651108	13	True				
ANR	651312	Statement	addr	1094:72:29229:29232	651108	14	True				
ANR	651313	Statement	)	1094:76:29233:29233	651108	15	True				
ANR	651314	ExpressionStatement		1094:77:29234:29234	651108	16	True				
ANR	651315	IfStatement	if ( hint -> high )		651108	22					
ANR	651316	Condition	hint -> high	1096:6:29246:29255	651108	0	True				
ANR	651317	PtrMemberAccess	hint -> high		651108	0					
ANR	651318	Identifier	hint		651108	0					
ANR	651319	Identifier	high		651108	1					
ANR	651320	CompoundStatement		27:18:888:888	651108	1					
ANR	651321	Statement	r_cons_printf	1097:3:29263:29275	651108	0	True				
ANR	651322	Statement	(	1097:17:29277:29277	651108	1	True				
ANR	651323	Statement	"""ahh @ 0x%"""	1097:18:29278:29288	651108	2	True				
ANR	651324	Statement	PFMT64x	1097:29:29289:29295	651108	3	True				
ANR	651325	Statement	"""\\n"""	1097:36:29296:29299	651108	4	True				
ANR	651326	Statement	","	1097:40:29300:29300	651108	5	True				
ANR	651327	Statement	hint	1097:42:29302:29305	651108	6	True				
ANR	651328	Statement	->	1097:46:29306:29307	651108	7	True				
ANR	651329	Statement	addr	1097:48:29308:29311	651108	8	True				
ANR	651330	Statement	)	1097:52:29312:29312	651108	9	True				
ANR	651331	ExpressionStatement		1097:53:29313:29313	651108	10	True				
ANR	651332	IfStatement	if ( hint -> stackframe != UT64_MAX )		651108	23					
ANR	651333	Condition	hint -> stackframe != UT64_MAX	1099:6:29325:29352	651108	0	True				
ANR	651334	EqualityExpression	hint -> stackframe != UT64_MAX		651108	0		!=			
ANR	651335	PtrMemberAccess	hint -> stackframe		651108	0					
ANR	651336	Identifier	hint		651108	0					
ANR	651337	Identifier	stackframe		651108	1					
ANR	651338	Identifier	UT64_MAX		651108	1					
ANR	651339	CompoundStatement		30:36:985:985	651108	1					
ANR	651340	Statement	r_cons_printf	1100:3:29360:29372	651108	0	True				
ANR	651341	Statement	(	1100:17:29374:29374	651108	1	True				
ANR	651342	Statement	"""ahF 0x%"""	1100:18:29375:29383	651108	2	True				
ANR	651343	Statement	PFMT64x	1100:27:29384:29390	651108	3	True				
ANR	651344	Statement	""" @ 0x%"""	1100:34:29391:29398	651108	4	True				
ANR	651345	Statement	PFMT64x	1100:42:29399:29405	651108	5	True				
ANR	651346	Statement	"""\\n"""	1100:49:29406:29409	651108	6	True				
ANR	651347	Statement	","	1100:53:29410:29410	651108	7	True				
ANR	651348	Statement	hint	1100:55:29412:29415	651108	8	True				
ANR	651349	Statement	->	1100:59:29416:29417	651108	9	True				
ANR	651350	Statement	stackframe	1100:61:29418:29427	651108	10	True				
ANR	651351	Statement	","	1100:71:29428:29428	651108	11	True				
ANR	651352	Statement	hint	1100:73:29430:29433	651108	12	True				
ANR	651353	Statement	->	1100:77:29434:29435	651108	13	True				
ANR	651354	Statement	addr	1100:79:29436:29439	651108	14	True				
ANR	651355	Statement	)	1100:83:29440:29440	651108	15	True				
ANR	651356	ExpressionStatement		1100:84:29441:29441	651108	16	True				
ANR	651357	BreakStatement	break ;	1102:2:29449:29454	651108	24	True				
ANR	651358	Label	case 'j' :	1103:1:29457:29465	651108	25	True				
ANR	651359	ExpressionStatement	pj_o ( pj )	1104:2:29469:29478	651108	26	True				
ANR	651360	CallExpression	pj_o ( pj )		651108	0					
ANR	651361	Callee	pj_o		651108	0					
ANR	651362	Identifier	pj_o		651108	0					
ANR	651363	ArgumentList	pj		651108	1					
ANR	651364	Argument	pj		651108	0					
ANR	651365	Identifier	pj		651108	0					
ANR	651366	ExpressionStatement	"pj_kn ( pj , ""from"" , hint -> addr )"	1105:2:29482:29512	651108	27	True				
ANR	651367	CallExpression	"pj_kn ( pj , ""from"" , hint -> addr )"		651108	0					
ANR	651368	Callee	pj_kn		651108	0					
ANR	651369	Identifier	pj_kn		651108	0					
ANR	651370	ArgumentList	pj		651108	1					
ANR	651371	Argument	pj		651108	0					
ANR	651372	Identifier	pj		651108	0					
ANR	651373	Argument	"""from"""		651108	1					
ANR	651374	PrimaryExpression	"""from"""		651108	0					
ANR	651375	Argument	hint -> addr		651108	2					
ANR	651376	PtrMemberAccess	hint -> addr		651108	0					
ANR	651377	Identifier	hint		651108	0					
ANR	651378	Identifier	addr		651108	1					
ANR	651379	ExpressionStatement	"pj_kn ( pj , ""to"" , hint -> addr + hint -> size )"	1106:2:29516:29557	651108	28	True				
ANR	651380	CallExpression	"pj_kn ( pj , ""to"" , hint -> addr + hint -> size )"		651108	0					
ANR	651381	Callee	pj_kn		651108	0					
ANR	651382	Identifier	pj_kn		651108	0					
ANR	651383	ArgumentList	pj		651108	1					
ANR	651384	Argument	pj		651108	0					
ANR	651385	Identifier	pj		651108	0					
ANR	651386	Argument	"""to"""		651108	1					
ANR	651387	PrimaryExpression	"""to"""		651108	0					
ANR	651388	Argument	hint -> addr + hint -> size		651108	2					
ANR	651389	AdditiveExpression	hint -> addr + hint -> size		651108	0		+			
ANR	651390	PtrMemberAccess	hint -> addr		651108	0					
ANR	651391	Identifier	hint		651108	0					
ANR	651392	Identifier	addr		651108	1					
ANR	651393	PtrMemberAccess	hint -> size		651108	1					
ANR	651394	Identifier	hint		651108	0					
ANR	651395	Identifier	size		651108	1					
ANR	651396	IfStatement	if ( hint -> arch )		651108	29					
ANR	651397	Condition	hint -> arch	1107:6:29565:29574	651108	0	True				
ANR	651398	PtrMemberAccess	hint -> arch		651108	0					
ANR	651399	Identifier	hint		651108	0					
ANR	651400	Identifier	arch		651108	1					
ANR	651401	CompoundStatement		38:18:1207:1207	651108	1					
ANR	651402	ExpressionStatement	"pj_ks ( pj , ""arch"" , hint -> arch )"	1108:3:29582:29612	651108	0	True				
ANR	651403	CallExpression	"pj_ks ( pj , ""arch"" , hint -> arch )"		651108	0					
ANR	651404	Callee	pj_ks		651108	0					
ANR	651405	Identifier	pj_ks		651108	0					
ANR	651406	ArgumentList	pj		651108	1					
ANR	651407	Argument	pj		651108	0					
ANR	651408	Identifier	pj		651108	0					
ANR	651409	Argument	"""arch"""		651108	1					
ANR	651410	PrimaryExpression	"""arch"""		651108	0					
ANR	651411	Argument	hint -> arch		651108	2					
ANR	651412	PtrMemberAccess	hint -> arch		651108	0					
ANR	651413	Identifier	hint		651108	0					
ANR	651414	Identifier	arch		651108	1					
ANR	651415	IfStatement	if ( hint -> bits )		651108	30					
ANR	651416	Condition	hint -> bits	1110:6:29624:29633	651108	0	True				
ANR	651417	PtrMemberAccess	hint -> bits		651108	0					
ANR	651418	Identifier	hint		651108	0					
ANR	651419	Identifier	bits		651108	1					
ANR	651420	CompoundStatement		41:18:1266:1266	651108	1					
ANR	651421	ExpressionStatement	"pj_ki ( pj , ""bits"" , hint -> bits )"	1111:3:29641:29671	651108	0	True				
ANR	651422	CallExpression	"pj_ki ( pj , ""bits"" , hint -> bits )"		651108	0					
ANR	651423	Callee	pj_ki		651108	0					
ANR	651424	Identifier	pj_ki		651108	0					
ANR	651425	ArgumentList	pj		651108	1					
ANR	651426	Argument	pj		651108	0					
ANR	651427	Identifier	pj		651108	0					
ANR	651428	Argument	"""bits"""		651108	1					
ANR	651429	PrimaryExpression	"""bits"""		651108	0					
ANR	651430	Argument	hint -> bits		651108	2					
ANR	651431	PtrMemberAccess	hint -> bits		651108	0					
ANR	651432	Identifier	hint		651108	0					
ANR	651433	Identifier	bits		651108	1					
ANR	651434	IfStatement	if ( hint -> type )		651108	31					
ANR	651435	Condition	hint -> type	1113:6:29683:29692	651108	0	True				
ANR	651436	PtrMemberAccess	hint -> type		651108	0					
ANR	651437	Identifier	hint		651108	0					
ANR	651438	Identifier	type		651108	1					
ANR	651439	CompoundStatement		45:3:1330:1385	651108	1					
ANR	651440	IdentifierDeclStatement	const char * type = r_anal_optype_to_string ( hint -> type ) ;	1114:3:29700:29755	651108	0	True				
ANR	651441	IdentifierDecl	* type = r_anal_optype_to_string ( hint -> type )		651108	0					
ANR	651442	IdentifierDeclType	const char *		651108	0					
ANR	651443	Identifier	type		651108	1					
ANR	651444	AssignmentExpression	* type = r_anal_optype_to_string ( hint -> type )		651108	2		=			
ANR	651445	Identifier	type		651108	0					
ANR	651446	CallExpression	r_anal_optype_to_string ( hint -> type )		651108	1					
ANR	651447	Callee	r_anal_optype_to_string		651108	0					
ANR	651448	Identifier	r_anal_optype_to_string		651108	0					
ANR	651449	ArgumentList	hint -> type		651108	1					
ANR	651450	Argument	hint -> type		651108	0					
ANR	651451	PtrMemberAccess	hint -> type		651108	0					
ANR	651452	Identifier	hint		651108	0					
ANR	651453	Identifier	type		651108	1					
ANR	651454	IfStatement	if ( type )		651108	1					
ANR	651455	Condition	type	1115:7:29764:29767	651108	0	True				
ANR	651456	Identifier	type		651108	0					
ANR	651457	CompoundStatement		46:13:1400:1400	651108	1					
ANR	651458	ExpressionStatement	"pj_ks ( pj , ""type"" , type )"	1116:4:29776:29800	651108	0	True				
ANR	651459	CallExpression	"pj_ks ( pj , ""type"" , type )"		651108	0					
ANR	651460	Callee	pj_ks		651108	0					
ANR	651461	Identifier	pj_ks		651108	0					
ANR	651462	ArgumentList	pj		651108	1					
ANR	651463	Argument	pj		651108	0					
ANR	651464	Identifier	pj		651108	0					
ANR	651465	Argument	"""type"""		651108	1					
ANR	651466	PrimaryExpression	"""type"""		651108	0					
ANR	651467	Argument	type		651108	2					
ANR	651468	Identifier	type		651108	0					
ANR	651469	IfStatement	if ( hint -> size )		651108	32					
ANR	651470	Condition	hint -> size	1119:6:29817:29826	651108	0	True				
ANR	651471	PtrMemberAccess	hint -> size		651108	0					
ANR	651472	Identifier	hint		651108	0					
ANR	651473	Identifier	size		651108	1					
ANR	651474	CompoundStatement		50:18:1459:1459	651108	1					
ANR	651475	ExpressionStatement	"pj_ki ( pj , ""size"" , hint -> size )"	1120:3:29834:29864	651108	0	True				
ANR	651476	CallExpression	"pj_ki ( pj , ""size"" , hint -> size )"		651108	0					
ANR	651477	Callee	pj_ki		651108	0					
ANR	651478	Identifier	pj_ki		651108	0					
ANR	651479	ArgumentList	pj		651108	1					
ANR	651480	Argument	pj		651108	0					
ANR	651481	Identifier	pj		651108	0					
ANR	651482	Argument	"""size"""		651108	1					
ANR	651483	PrimaryExpression	"""size"""		651108	0					
ANR	651484	Argument	hint -> size		651108	2					
ANR	651485	PtrMemberAccess	hint -> size		651108	0					
ANR	651486	Identifier	hint		651108	0					
ANR	651487	Identifier	size		651108	1					
ANR	651488	IfStatement	if ( hint -> opcode )		651108	33					
ANR	651489	Condition	hint -> opcode	1122:6:29876:29887	651108	0	True				
ANR	651490	PtrMemberAccess	hint -> opcode		651108	0					
ANR	651491	Identifier	hint		651108	0					
ANR	651492	Identifier	opcode		651108	1					
ANR	651493	CompoundStatement		53:20:1520:1520	651108	1					
ANR	651494	ExpressionStatement	"pj_ks ( pj , ""opcode"" , hint -> opcode )"	1123:3:29895:29929	651108	0	True				
ANR	651495	CallExpression	"pj_ks ( pj , ""opcode"" , hint -> opcode )"		651108	0					
ANR	651496	Callee	pj_ks		651108	0					
ANR	651497	Identifier	pj_ks		651108	0					
ANR	651498	ArgumentList	pj		651108	1					
ANR	651499	Argument	pj		651108	0					
ANR	651500	Identifier	pj		651108	0					
ANR	651501	Argument	"""opcode"""		651108	1					
ANR	651502	PrimaryExpression	"""opcode"""		651108	0					
ANR	651503	Argument	hint -> opcode		651108	2					
ANR	651504	PtrMemberAccess	hint -> opcode		651108	0					
ANR	651505	Identifier	hint		651108	0					
ANR	651506	Identifier	opcode		651108	1					
ANR	651507	IfStatement	if ( hint -> syntax )		651108	34					
ANR	651508	Condition	hint -> syntax	1125:6:29941:29952	651108	0	True				
ANR	651509	PtrMemberAccess	hint -> syntax		651108	0					
ANR	651510	Identifier	hint		651108	0					
ANR	651511	Identifier	syntax		651108	1					
ANR	651512	CompoundStatement		56:20:1585:1585	651108	1					
ANR	651513	ExpressionStatement	"pj_ks ( pj , ""syntax"" , hint -> syntax )"	1126:3:29960:29994	651108	0	True				
ANR	651514	CallExpression	"pj_ks ( pj , ""syntax"" , hint -> syntax )"		651108	0					
ANR	651515	Callee	pj_ks		651108	0					
ANR	651516	Identifier	pj_ks		651108	0					
ANR	651517	ArgumentList	pj		651108	1					
ANR	651518	Argument	pj		651108	0					
ANR	651519	Identifier	pj		651108	0					
ANR	651520	Argument	"""syntax"""		651108	1					
ANR	651521	PrimaryExpression	"""syntax"""		651108	0					
ANR	651522	Argument	hint -> syntax		651108	2					
ANR	651523	PtrMemberAccess	hint -> syntax		651108	0					
ANR	651524	Identifier	hint		651108	0					
ANR	651525	Identifier	syntax		651108	1					
ANR	651526	IfStatement	if ( hint -> immbase )		651108	35					
ANR	651527	Condition	hint -> immbase	1128:6:30006:30018	651108	0	True				
ANR	651528	PtrMemberAccess	hint -> immbase		651108	0					
ANR	651529	Identifier	hint		651108	0					
ANR	651530	Identifier	immbase		651108	1					
ANR	651531	CompoundStatement		59:21:1651:1651	651108	1					
ANR	651532	ExpressionStatement	"pj_ki ( pj , ""immbase"" , hint -> immbase )"	1129:3:30026:30062	651108	0	True				
ANR	651533	CallExpression	"pj_ki ( pj , ""immbase"" , hint -> immbase )"		651108	0					
ANR	651534	Callee	pj_ki		651108	0					
ANR	651535	Identifier	pj_ki		651108	0					
ANR	651536	ArgumentList	pj		651108	1					
ANR	651537	Argument	pj		651108	0					
ANR	651538	Identifier	pj		651108	0					
ANR	651539	Argument	"""immbase"""		651108	1					
ANR	651540	PrimaryExpression	"""immbase"""		651108	0					
ANR	651541	Argument	hint -> immbase		651108	2					
ANR	651542	PtrMemberAccess	hint -> immbase		651108	0					
ANR	651543	Identifier	hint		651108	0					
ANR	651544	Identifier	immbase		651108	1					
ANR	651545	IfStatement	if ( hint -> esil )		651108	36					
ANR	651546	Condition	hint -> esil	1131:6:30074:30083	651108	0	True				
ANR	651547	PtrMemberAccess	hint -> esil		651108	0					
ANR	651548	Identifier	hint		651108	0					
ANR	651549	Identifier	esil		651108	1					
ANR	651550	CompoundStatement		62:18:1716:1716	651108	1					
ANR	651551	ExpressionStatement	"pj_ks ( pj , ""esil"" , hint -> esil )"	1132:3:30091:30121	651108	0	True				
ANR	651552	CallExpression	"pj_ks ( pj , ""esil"" , hint -> esil )"		651108	0					
ANR	651553	Callee	pj_ks		651108	0					
ANR	651554	Identifier	pj_ks		651108	0					
ANR	651555	ArgumentList	pj		651108	1					
ANR	651556	Argument	pj		651108	0					
ANR	651557	Identifier	pj		651108	0					
ANR	651558	Argument	"""esil"""		651108	1					
ANR	651559	PrimaryExpression	"""esil"""		651108	0					
ANR	651560	Argument	hint -> esil		651108	2					
ANR	651561	PtrMemberAccess	hint -> esil		651108	0					
ANR	651562	Identifier	hint		651108	0					
ANR	651563	Identifier	esil		651108	1					
ANR	651564	IfStatement	if ( hint -> ptr )		651108	37					
ANR	651565	Condition	hint -> ptr	1134:6:30133:30141	651108	0	True				
ANR	651566	PtrMemberAccess	hint -> ptr		651108	0					
ANR	651567	Identifier	hint		651108	0					
ANR	651568	Identifier	ptr		651108	1					
ANR	651569	CompoundStatement		65:17:1774:1774	651108	1					
ANR	651570	ExpressionStatement	"pj_kn ( pj , ""ptr"" , hint -> ptr )"	1135:3:30149:30177	651108	0	True				
ANR	651571	CallExpression	"pj_kn ( pj , ""ptr"" , hint -> ptr )"		651108	0					
ANR	651572	Callee	pj_kn		651108	0					
ANR	651573	Identifier	pj_kn		651108	0					
ANR	651574	ArgumentList	pj		651108	1					
ANR	651575	Argument	pj		651108	0					
ANR	651576	Identifier	pj		651108	0					
ANR	651577	Argument	"""ptr"""		651108	1					
ANR	651578	PrimaryExpression	"""ptr"""		651108	0					
ANR	651579	Argument	hint -> ptr		651108	2					
ANR	651580	PtrMemberAccess	hint -> ptr		651108	0					
ANR	651581	Identifier	hint		651108	0					
ANR	651582	Identifier	ptr		651108	1					
ANR	651583	IfStatement	if ( hint -> jump != UT64_MAX )		651108	38					
ANR	651584	Condition	hint -> jump != UT64_MAX	1137:6:30189:30210	651108	0	True				
ANR	651585	EqualityExpression	hint -> jump != UT64_MAX		651108	0		!=			
ANR	651586	PtrMemberAccess	hint -> jump		651108	0					
ANR	651587	Identifier	hint		651108	0					
ANR	651588	Identifier	jump		651108	1					
ANR	651589	Identifier	UT64_MAX		651108	1					
ANR	651590	CompoundStatement		68:30:1843:1843	651108	1					
ANR	651591	ExpressionStatement	"pj_kn ( pj , ""jump"" , hint -> jump )"	1138:3:30218:30248	651108	0	True				
ANR	651592	CallExpression	"pj_kn ( pj , ""jump"" , hint -> jump )"		651108	0					
ANR	651593	Callee	pj_kn		651108	0					
ANR	651594	Identifier	pj_kn		651108	0					
ANR	651595	ArgumentList	pj		651108	1					
ANR	651596	Argument	pj		651108	0					
ANR	651597	Identifier	pj		651108	0					
ANR	651598	Argument	"""jump"""		651108	1					
ANR	651599	PrimaryExpression	"""jump"""		651108	0					
ANR	651600	Argument	hint -> jump		651108	2					
ANR	651601	PtrMemberAccess	hint -> jump		651108	0					
ANR	651602	Identifier	hint		651108	0					
ANR	651603	Identifier	jump		651108	1					
ANR	651604	IfStatement	if ( hint -> fail != UT64_MAX )		651108	39					
ANR	651605	Condition	hint -> fail != UT64_MAX	1140:6:30260:30281	651108	0	True				
ANR	651606	EqualityExpression	hint -> fail != UT64_MAX		651108	0		!=			
ANR	651607	PtrMemberAccess	hint -> fail		651108	0					
ANR	651608	Identifier	hint		651108	0					
ANR	651609	Identifier	fail		651108	1					
ANR	651610	Identifier	UT64_MAX		651108	1					
ANR	651611	CompoundStatement		71:30:1914:1914	651108	1					
ANR	651612	ExpressionStatement	"pj_kn ( pj , ""fail"" , hint -> fail )"	1141:3:30289:30319	651108	0	True				
ANR	651613	CallExpression	"pj_kn ( pj , ""fail"" , hint -> fail )"		651108	0					
ANR	651614	Callee	pj_kn		651108	0					
ANR	651615	Identifier	pj_kn		651108	0					
ANR	651616	ArgumentList	pj		651108	1					
ANR	651617	Argument	pj		651108	0					
ANR	651618	Identifier	pj		651108	0					
ANR	651619	Argument	"""fail"""		651108	1					
ANR	651620	PrimaryExpression	"""fail"""		651108	0					
ANR	651621	Argument	hint -> fail		651108	2					
ANR	651622	PtrMemberAccess	hint -> fail		651108	0					
ANR	651623	Identifier	hint		651108	0					
ANR	651624	Identifier	fail		651108	1					
ANR	651625	IfStatement	if ( hint -> ret != UT64_MAX )		651108	40					
ANR	651626	Condition	hint -> ret != UT64_MAX	1143:6:30331:30351	651108	0	True				
ANR	651627	EqualityExpression	hint -> ret != UT64_MAX		651108	0		!=			
ANR	651628	PtrMemberAccess	hint -> ret		651108	0					
ANR	651629	Identifier	hint		651108	0					
ANR	651630	Identifier	ret		651108	1					
ANR	651631	Identifier	UT64_MAX		651108	1					
ANR	651632	CompoundStatement		74:29:1984:1984	651108	1					
ANR	651633	ExpressionStatement	"pj_kn ( pj , ""ret"" , hint -> ret )"	1144:3:30359:30387	651108	0	True				
ANR	651634	CallExpression	"pj_kn ( pj , ""ret"" , hint -> ret )"		651108	0					
ANR	651635	Callee	pj_kn		651108	0					
ANR	651636	Identifier	pj_kn		651108	0					
ANR	651637	ArgumentList	pj		651108	1					
ANR	651638	Argument	pj		651108	0					
ANR	651639	Identifier	pj		651108	0					
ANR	651640	Argument	"""ret"""		651108	1					
ANR	651641	PrimaryExpression	"""ret"""		651108	0					
ANR	651642	Argument	hint -> ret		651108	2					
ANR	651643	PtrMemberAccess	hint -> ret		651108	0					
ANR	651644	Identifier	hint		651108	0					
ANR	651645	Identifier	ret		651108	1					
ANR	651646	IfStatement	if ( hint -> high )		651108	41					
ANR	651647	Condition	hint -> high	1146:6:30399:30408	651108	0	True				
ANR	651648	PtrMemberAccess	hint -> high		651108	0					
ANR	651649	Identifier	hint		651108	0					
ANR	651650	Identifier	high		651108	1					
ANR	651651	CompoundStatement		77:18:2041:2041	651108	1					
ANR	651652	ExpressionStatement	"pj_kb ( pj , ""high"" , true )"	1147:3:30416:30440	651108	0	True				
ANR	651653	CallExpression	"pj_kb ( pj , ""high"" , true )"		651108	0					
ANR	651654	Callee	pj_kb		651108	0					
ANR	651655	Identifier	pj_kb		651108	0					
ANR	651656	ArgumentList	pj		651108	1					
ANR	651657	Argument	pj		651108	0					
ANR	651658	Identifier	pj		651108	0					
ANR	651659	Argument	"""high"""		651108	1					
ANR	651660	PrimaryExpression	"""high"""		651108	0					
ANR	651661	Argument	true		651108	2					
ANR	651662	Identifier	true		651108	0					
ANR	651663	IfStatement	if ( hint -> stackframe != UT64_MAX )		651108	42					
ANR	651664	Condition	hint -> stackframe != UT64_MAX	1149:6:30452:30479	651108	0	True				
ANR	651665	EqualityExpression	hint -> stackframe != UT64_MAX		651108	0		!=			
ANR	651666	PtrMemberAccess	hint -> stackframe		651108	0					
ANR	651667	Identifier	hint		651108	0					
ANR	651668	Identifier	stackframe		651108	1					
ANR	651669	Identifier	UT64_MAX		651108	1					
ANR	651670	CompoundStatement		80:36:2112:2112	651108	1					
ANR	651671	ExpressionStatement	"pj_kn ( pj , ""stackframe"" , hint -> stackframe )"	1150:3:30487:30529	651108	0	True				
ANR	651672	CallExpression	"pj_kn ( pj , ""stackframe"" , hint -> stackframe )"		651108	0					
ANR	651673	Callee	pj_kn		651108	0					
ANR	651674	Identifier	pj_kn		651108	0					
ANR	651675	ArgumentList	pj		651108	1					
ANR	651676	Argument	pj		651108	0					
ANR	651677	Identifier	pj		651108	0					
ANR	651678	Argument	"""stackframe"""		651108	1					
ANR	651679	PrimaryExpression	"""stackframe"""		651108	0					
ANR	651680	Argument	hint -> stackframe		651108	2					
ANR	651681	PtrMemberAccess	hint -> stackframe		651108	0					
ANR	651682	Identifier	hint		651108	0					
ANR	651683	Identifier	stackframe		651108	1					
ANR	651684	ExpressionStatement	pj_end ( pj )	1152:2:30537:30548	651108	43	True				
ANR	651685	CallExpression	pj_end ( pj )		651108	0					
ANR	651686	Callee	pj_end		651108	0					
ANR	651687	Identifier	pj_end		651108	0					
ANR	651688	ArgumentList	pj		651108	1					
ANR	651689	Argument	pj		651108	0					
ANR	651690	Identifier	pj		651108	0					
ANR	651691	BreakStatement	break ;	1153:2:30552:30557	651108	44	True				
ANR	651692	Label	default :	1154:1:30560:30567	651108	45	True				
ANR	651693	Identifier	default		651108	0					
ANR	651694	ExpressionStatement	print_hint_h_format ( hint )	1155:2:30571:30597	651108	46	True				
ANR	651695	CallExpression	print_hint_h_format ( hint )		651108	0					
ANR	651696	Callee	print_hint_h_format		651108	0					
ANR	651697	Identifier	print_hint_h_format		651108	0					
ANR	651698	ArgumentList	hint		651108	1					
ANR	651699	Argument	hint		651108	0					
ANR	651700	Identifier	hint		651108	0					
ANR	651701	BreakStatement	break ;	1156:2:30601:30606	651108	47	True				
ANR	651702	ReturnType	static void		651108	1					
ANR	651703	Identifier	anal_hint_print		651108	2					
ANR	651704	ParameterList	"RAnalHint * hint , int mode , PJ * pj"		651108	3					
ANR	651705	Parameter	RAnalHint * hint	1070:28:28334:28348	651108	0	True				
ANR	651706	ParameterType	RAnalHint *		651108	0					
ANR	651707	Identifier	hint		651108	1					
ANR	651708	Parameter	int mode	1070:45:28351:28358	651108	1	True				
ANR	651709	ParameterType	int		651108	0					
ANR	651710	Identifier	mode		651108	1					
ANR	651711	Parameter	PJ * pj	1070:55:28361:28366	651108	2	True				
ANR	651712	ParameterType	PJ *		651108	0					
ANR	651713	Identifier	pj		651108	1					
ANR	651714	CFGEntryNode	ENTRY		651108		True				
ANR	651715	CFGExitNode	EXIT		651108		True				
ANR	651716	Symbol	hint -> addr		651108						
ANR	651717	Symbol	immbase		651108						
ANR	651718	Symbol	r_anal_optype_to_string		651108						
ANR	651719	Symbol	type		651108						
ANR	651720	Symbol	opcode		651108						
ANR	651721	Symbol	hint -> jump		651108						
ANR	651722	Symbol	mode		651108						
ANR	651723	Symbol	hint -> opcode		651108						
ANR	651724	Symbol	hint -> bits		651108						
ANR	651725	Symbol	hint -> size		651108						
ANR	651726	Symbol	UT64_MAX		651108						
ANR	651727	Symbol	hint -> type		651108						
ANR	651728	Symbol	hint -> immbase		651108						
ANR	651729	Symbol	hint -> esil		651108						
ANR	651730	Symbol	* hint		651108						
ANR	651731	Symbol	bits		651108						
ANR	651732	Symbol	hint -> ret		651108						
ANR	651733	Symbol	hint -> arch		651108						
ANR	651734	Symbol	hint -> stackframe		651108						
ANR	651735	Symbol	hint -> fail		651108						
ANR	651736	Symbol	size		651108						
ANR	651737	Symbol	hint -> syntax		651108						
ANR	651738	Symbol	hint		651108						
ANR	651739	Symbol	true		651108						
ANR	651740	Symbol	syntax		651108						
ANR	651741	Symbol	pj		651108						
ANR	651742	Symbol	arch		651108						
ANR	651743	Symbol	hint -> ptr		651108						
ANR	651744	Symbol	esil		651108						
ANR	651745	Symbol	hint -> high		651108						
ANR	651746	Function	cb	1161:0:30652:30952							
ANR	651747	FunctionDef	"cb (void * p , const char * k , const char * v)"		651746	0					
ANR	651748	CompoundStatement		1161:53:30705:30952	651746	0					
ANR	651749	IdentifierDeclStatement	HintListState * hls = p ;	1162:1:30708:30730	651746	0	True				
ANR	651750	IdentifierDecl	* hls = p		651746	0					
ANR	651751	IdentifierDeclType	HintListState *		651746	0					
ANR	651752	Identifier	hls		651746	1					
ANR	651753	AssignmentExpression	* hls = p		651746	2		=			
ANR	651754	Identifier	p		651746	0					
ANR	651755	Identifier	p		651746	1					
ANR	651756	IfStatement	if ( hls -> mode == 's' )		651746	1					
ANR	651757	Condition	hls -> mode == 's'	1163:5:30737:30752	651746	0	True				
ANR	651758	EqualityExpression	hls -> mode == 's'		651746	0		==			
ANR	651759	PtrMemberAccess	hls -> mode		651746	0					
ANR	651760	Identifier	hls		651746	0					
ANR	651761	Identifier	mode		651746	1					
ANR	651762	PrimaryExpression	's'		651746	1					
ANR	651763	CompoundStatement		3:23:49:49	651746	1					
ANR	651764	ExpressionStatement	"r_cons_printf ( ""%s=%s\\n"" , k , v )"	1164:2:30759:30790	651746	0	True				
ANR	651765	CallExpression	"r_cons_printf ( ""%s=%s\\n"" , k , v )"		651746	0					
ANR	651766	Callee	r_cons_printf		651746	0					
ANR	651767	Identifier	r_cons_printf		651746	0					
ANR	651768	ArgumentList	"""%s=%s\\n"""		651746	1					
ANR	651769	Argument	"""%s=%s\\n"""		651746	0					
ANR	651770	PrimaryExpression	"""%s=%s\\n"""		651746	0					
ANR	651771	Argument	k		651746	1					
ANR	651772	Identifier	k		651746	0					
ANR	651773	Argument	v		651746	2					
ANR	651774	Identifier	v		651746	0					
ANR	651775	ElseStatement	else		651746	0					
ANR	651776	CompoundStatement		6:2:98:169	651746	0					
ANR	651777	IdentifierDeclStatement	"RAnalHint * hint = r_anal_hint_from_string ( hls -> a , sdb_atoi ( k + 5 ) , v ) ;"	1166:2:30804:30875	651746	0	True				
ANR	651778	IdentifierDecl	"* hint = r_anal_hint_from_string ( hls -> a , sdb_atoi ( k + 5 ) , v )"		651746	0					
ANR	651779	IdentifierDeclType	RAnalHint *		651746	0					
ANR	651780	Identifier	hint		651746	1					
ANR	651781	AssignmentExpression	"* hint = r_anal_hint_from_string ( hls -> a , sdb_atoi ( k + 5 ) , v )"		651746	2		=			
ANR	651782	Identifier	hint		651746	0					
ANR	651783	CallExpression	"r_anal_hint_from_string ( hls -> a , sdb_atoi ( k + 5 ) , v )"		651746	1					
ANR	651784	Callee	r_anal_hint_from_string		651746	0					
ANR	651785	Identifier	r_anal_hint_from_string		651746	0					
ANR	651786	ArgumentList	hls -> a		651746	1					
ANR	651787	Argument	hls -> a		651746	0					
ANR	651788	PtrMemberAccess	hls -> a		651746	0					
ANR	651789	Identifier	hls		651746	0					
ANR	651790	Identifier	a		651746	1					
ANR	651791	Argument	sdb_atoi ( k + 5 )		651746	1					
ANR	651792	CallExpression	sdb_atoi ( k + 5 )		651746	0					
ANR	651793	Callee	sdb_atoi		651746	0					
ANR	651794	Identifier	sdb_atoi		651746	0					
ANR	651795	ArgumentList	k + 5		651746	1					
ANR	651796	Argument	k + 5		651746	0					
ANR	651797	AdditiveExpression	k + 5		651746	0		+			
ANR	651798	Identifier	k		651746	0					
ANR	651799	PrimaryExpression	5		651746	1					
ANR	651800	Argument	v		651746	2					
ANR	651801	Identifier	v		651746	0					
ANR	651802	ExpressionStatement	"anal_hint_print ( hint , hls -> mode , hls -> pj )"	1167:2:30879:30921	651746	1	True				
ANR	651803	CallExpression	"anal_hint_print ( hint , hls -> mode , hls -> pj )"		651746	0					
ANR	651804	Callee	anal_hint_print		651746	0					
ANR	651805	Identifier	anal_hint_print		651746	0					
ANR	651806	ArgumentList	hint		651746	1					
ANR	651807	Argument	hint		651746	0					
ANR	651808	Identifier	hint		651746	0					
ANR	651809	Argument	hls -> mode		651746	1					
ANR	651810	PtrMemberAccess	hls -> mode		651746	0					
ANR	651811	Identifier	hls		651746	0					
ANR	651812	Identifier	mode		651746	1					
ANR	651813	Argument	hls -> pj		651746	2					
ANR	651814	PtrMemberAccess	hls -> pj		651746	0					
ANR	651815	Identifier	hls		651746	0					
ANR	651816	Identifier	pj		651746	1					
ANR	651817	ExpressionStatement	free ( hint )	1168:2:30925:30936	651746	2	True				
ANR	651818	CallExpression	free ( hint )		651746	0					
ANR	651819	Callee	free		651746	0					
ANR	651820	Identifier	free		651746	0					
ANR	651821	ArgumentList	hint		651746	1					
ANR	651822	Argument	hint		651746	0					
ANR	651823	Identifier	hint		651746	0					
ANR	651824	ReturnStatement	return 1 ;	1170:1:30942:30950	651746	2	True				
ANR	651825	PrimaryExpression	1		651746	0					
ANR	651826	ReturnType	static int		651746	1					
ANR	651827	Identifier	cb		651746	2					
ANR	651828	ParameterList	"void * p , const char * k , const char * v"		651746	3					
ANR	651829	Parameter	void * p	1161:14:30666:30672	651746	0	True				
ANR	651830	ParameterType	void *		651746	0					
ANR	651831	Identifier	p		651746	1					
ANR	651832	Parameter	const char * k	1161:23:30675:30687	651746	1	True				
ANR	651833	ParameterType	const char *		651746	0					
ANR	651834	Identifier	k		651746	1					
ANR	651835	Parameter	const char * v	1161:38:30690:30702	651746	2	True				
ANR	651836	ParameterType	const char *		651746	0					
ANR	651837	Identifier	v		651746	1					
ANR	651838	CFGEntryNode	ENTRY		651746		True				
ANR	651839	CFGExitNode	EXIT		651746		True				
ANR	651840	Symbol	p		651746						
ANR	651841	Symbol	sdb_atoi		651746						
ANR	651842	Symbol	hls -> pj		651746						
ANR	651843	Symbol	hls -> mode		651746						
ANR	651844	Symbol	hls -> a		651746						
ANR	651845	Symbol	v		651746						
ANR	651846	Symbol	* hls		651746						
ANR	651847	Symbol	hint		651746						
ANR	651848	Symbol	k		651746						
ANR	651849	Symbol	hls		651746						
ANR	651850	Symbol	r_anal_hint_from_string		651746						
ANR	651851	Function	r_core_anal_hint_print	1173:0:30955:31285							
ANR	651852	FunctionDef	"r_core_anal_hint_print (RAnal * a , ut64 addr , int mode)"		651851	0					
ANR	651853	CompoundStatement		1173:65:31020:31285	651851	0					
ANR	651854	IdentifierDeclStatement	"RAnalHint * hint = r_anal_hint_get ( a , addr ) ;"	1174:1:31023:31066	651851	0	True				
ANR	651855	IdentifierDecl	"* hint = r_anal_hint_get ( a , addr )"		651851	0					
ANR	651856	IdentifierDeclType	RAnalHint *		651851	0					
ANR	651857	Identifier	hint		651851	1					
ANR	651858	AssignmentExpression	"* hint = r_anal_hint_get ( a , addr )"		651851	2		=			
ANR	651859	Identifier	hint		651851	0					
ANR	651860	CallExpression	"r_anal_hint_get ( a , addr )"		651851	1					
ANR	651861	Callee	r_anal_hint_get		651851	0					
ANR	651862	Identifier	r_anal_hint_get		651851	0					
ANR	651863	ArgumentList	a		651851	1					
ANR	651864	Argument	a		651851	0					
ANR	651865	Identifier	a		651851	0					
ANR	651866	Argument	addr		651851	1					
ANR	651867	Identifier	addr		651851	0					
ANR	651868	IfStatement	if ( ! hint )		651851	1					
ANR	651869	Condition	! hint	1175:5:31073:31077	651851	0	True				
ANR	651870	UnaryOperationExpression	! hint		651851	0					
ANR	651871	UnaryOperator	!		651851	0					
ANR	651872	Identifier	hint		651851	1					
ANR	651873	CompoundStatement		3:12:59:59	651851	1					
ANR	651874	ReturnStatement	return ;	1176:2:31084:31090	651851	0	True				
ANR	651875	IdentifierDeclStatement	PJ * pj = NULL ;	1178:1:31096:31109	651851	2	True				
ANR	651876	IdentifierDecl	* pj = NULL		651851	0					
ANR	651877	IdentifierDeclType	PJ *		651851	0					
ANR	651878	Identifier	pj		651851	1					
ANR	651879	AssignmentExpression	* pj = NULL		651851	2		=			
ANR	651880	Identifier	NULL		651851	0					
ANR	651881	Identifier	NULL		651851	1					
ANR	651882	IfStatement	if ( mode == 'j' )		651851	3					
ANR	651883	Condition	mode == 'j'	1179:5:31116:31126	651851	0	True				
ANR	651884	EqualityExpression	mode == 'j'		651851	0		==			
ANR	651885	Identifier	mode		651851	0					
ANR	651886	PrimaryExpression	'j'		651851	1					
ANR	651887	CompoundStatement		7:18:108:108	651851	1					
ANR	651888	ExpressionStatement	pj = pj_new ( )	1180:2:31133:31147	651851	0	True				
ANR	651889	AssignmentExpression	pj = pj_new ( )		651851	0		=			
ANR	651890	Identifier	pj		651851	0					
ANR	651891	CallExpression	pj_new ( )		651851	1					
ANR	651892	Callee	pj_new		651851	0					
ANR	651893	Identifier	pj_new		651851	0					
ANR	651894	ArgumentList			651851	1					
ANR	651895	ExpressionStatement	pj_a ( pj )	1181:2:31151:31160	651851	1	True				
ANR	651896	CallExpression	pj_a ( pj )		651851	0					
ANR	651897	Callee	pj_a		651851	0					
ANR	651898	Identifier	pj_a		651851	0					
ANR	651899	ArgumentList	pj		651851	1					
ANR	651900	Argument	pj		651851	0					
ANR	651901	Identifier	pj		651851	0					
ANR	651902	ExpressionStatement	"anal_hint_print ( hint , mode , pj )"	1183:1:31166:31198	651851	4	True				
ANR	651903	CallExpression	"anal_hint_print ( hint , mode , pj )"		651851	0					
ANR	651904	Callee	anal_hint_print		651851	0					
ANR	651905	Identifier	anal_hint_print		651851	0					
ANR	651906	ArgumentList	hint		651851	1					
ANR	651907	Argument	hint		651851	0					
ANR	651908	Identifier	hint		651851	0					
ANR	651909	Argument	mode		651851	1					
ANR	651910	Identifier	mode		651851	0					
ANR	651911	Argument	pj		651851	2					
ANR	651912	Identifier	pj		651851	0					
ANR	651913	IfStatement	if ( pj )		651851	5					
ANR	651914	Condition	pj	1184:5:31205:31206	651851	0	True				
ANR	651915	Identifier	pj		651851	0					
ANR	651916	CompoundStatement		12:9:188:188	651851	1					
ANR	651917	ExpressionStatement	pj_end ( pj )	1185:2:31213:31224	651851	0	True				
ANR	651918	CallExpression	pj_end ( pj )		651851	0					
ANR	651919	Callee	pj_end		651851	0					
ANR	651920	Identifier	pj_end		651851	0					
ANR	651921	ArgumentList	pj		651851	1					
ANR	651922	Argument	pj		651851	0					
ANR	651923	Identifier	pj		651851	0					
ANR	651924	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"	1186:2:31228:31266	651851	1	True				
ANR	651925	CallExpression	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"		651851	0					
ANR	651926	Callee	r_cons_printf		651851	0					
ANR	651927	Identifier	r_cons_printf		651851	0					
ANR	651928	ArgumentList	"""%s\\n"""		651851	1					
ANR	651929	Argument	"""%s\\n"""		651851	0					
ANR	651930	PrimaryExpression	"""%s\\n"""		651851	0					
ANR	651931	Argument	pj_string ( pj )		651851	1					
ANR	651932	CallExpression	pj_string ( pj )		651851	0					
ANR	651933	Callee	pj_string		651851	0					
ANR	651934	Identifier	pj_string		651851	0					
ANR	651935	ArgumentList	pj		651851	1					
ANR	651936	Argument	pj		651851	0					
ANR	651937	Identifier	pj		651851	0					
ANR	651938	ExpressionStatement	free ( hint )	1188:1:31272:31283	651851	6	True				
ANR	651939	CallExpression	free ( hint )		651851	0					
ANR	651940	Callee	free		651851	0					
ANR	651941	Identifier	free		651851	0					
ANR	651942	ArgumentList	hint		651851	1					
ANR	651943	Argument	hint		651851	0					
ANR	651944	Identifier	hint		651851	0					
ANR	651945	ReturnType	R_API void		651851	1					
ANR	651946	Identifier	r_core_anal_hint_print		651851	2					
ANR	651947	ParameterList	"RAnal * a , ut64 addr , int mode"		651851	3					
ANR	651948	Parameter	RAnal * a	1173:34:30989:30996	651851	0	True				
ANR	651949	ParameterType	RAnal *		651851	0					
ANR	651950	Identifier	a		651851	1					
ANR	651951	Parameter	ut64 addr	1173:44:30999:31007	651851	1	True				
ANR	651952	ParameterType	ut64		651851	0					
ANR	651953	Identifier	addr		651851	1					
ANR	651954	Parameter	int mode	1173:55:31010:31017	651851	2	True				
ANR	651955	ParameterType	int		651851	0					
ANR	651956	Identifier	mode		651851	1					
ANR	651957	CFGEntryNode	ENTRY		651851		True				
ANR	651958	CFGExitNode	EXIT		651851		True				
ANR	651959	Symbol	mode		651851						
ANR	651960	Symbol	a		651851						
ANR	651961	Symbol	NULL		651851						
ANR	651962	Symbol	pj_string		651851						
ANR	651963	Symbol	hint		651851						
ANR	651964	Symbol	pj		651851						
ANR	651965	Symbol	pj_new		651851						
ANR	651966	Symbol	r_anal_hint_get		651851						
ANR	651967	Symbol	addr		651851						
ANR	651968	Function	r_core_anal_hint_list	1191:0:31288:31792							
ANR	651969	FunctionDef	"r_core_anal_hint_list (RAnal * a , int mode)"		651968	0					
ANR	651970	CompoundStatement		1191:53:31341:31792	651968	0					
ANR	651971	IdentifierDeclStatement	HintListState hls = { 0 } ;	1193:1:31360:31383	651968	0	True				
ANR	651972	IdentifierDecl	hls = { 0 }		651968	0					
ANR	651973	IdentifierDeclType	HintListState		651968	0					
ANR	651974	Identifier	hls		651968	1					
ANR	651975	AssignmentExpression	hls = { 0 }		651968	2		=			
ANR	651976	Identifier	hls		651968	0					
ANR	651977	InitializerList	0		651968	1					
ANR	651978	PrimaryExpression	0		651968	0					
ANR	651979	ExpressionStatement	hls . mode = mode	1197:1:31424:31439	651968	1	True				
ANR	651980	AssignmentExpression	hls . mode = mode		651968	0		=			
ANR	651981	MemberAccess	hls . mode		651968	0					
ANR	651982	Identifier	hls		651968	0					
ANR	651983	Identifier	mode		651968	1					
ANR	651984	Identifier	mode		651968	1					
ANR	651985	ExpressionStatement	hls . a = a	1198:1:31442:31451	651968	2	True				
ANR	651986	AssignmentExpression	hls . a = a		651968	0		=			
ANR	651987	MemberAccess	hls . a		651968	0					
ANR	651988	Identifier	hls		651968	0					
ANR	651989	Identifier	a		651968	1					
ANR	651990	Identifier	a		651968	1					
ANR	651991	ExpressionStatement	hls . pj = NULL	1199:1:31454:31467	651968	3	True				
ANR	651992	AssignmentExpression	hls . pj = NULL		651968	0		=			
ANR	651993	MemberAccess	hls . pj		651968	0					
ANR	651994	Identifier	hls		651968	0					
ANR	651995	Identifier	pj		651968	1					
ANR	651996	Identifier	NULL		651968	1					
ANR	651997	IfStatement	if ( mode == 'j' )		651968	4					
ANR	651998	Condition	mode == 'j'	1200:5:31474:31484	651968	0	True				
ANR	651999	EqualityExpression	mode == 'j'		651968	0		==			
ANR	652000	Identifier	mode		651968	0					
ANR	652001	PrimaryExpression	'j'		651968	1					
ANR	652002	CompoundStatement		10:18:145:145	651968	1					
ANR	652003	ExpressionStatement	hls . pj = pj_new ( )	1201:2:31491:31509	651968	0	True				
ANR	652004	AssignmentExpression	hls . pj = pj_new ( )		651968	0		=			
ANR	652005	MemberAccess	hls . pj		651968	0					
ANR	652006	Identifier	hls		651968	0					
ANR	652007	Identifier	pj		651968	1					
ANR	652008	CallExpression	pj_new ( )		651968	1					
ANR	652009	Callee	pj_new		651968	0					
ANR	652010	Identifier	pj_new		651968	0					
ANR	652011	ArgumentList			651968	1					
ANR	652012	ExpressionStatement	pj_a ( hls . pj )	1202:2:31513:31526	651968	1	True				
ANR	652013	CallExpression	pj_a ( hls . pj )		651968	0					
ANR	652014	Callee	pj_a		651968	0					
ANR	652015	Identifier	pj_a		651968	0					
ANR	652016	ArgumentList	hls . pj		651968	1					
ANR	652017	Argument	hls . pj		651968	0					
ANR	652018	MemberAccess	hls . pj		651968	0					
ANR	652019	Identifier	hls		651968	0					
ANR	652020	Identifier	pj		651968	1					
ANR	652021	IdentifierDeclStatement	"SdbList * ls = sdb_foreach_list ( a -> sdb_hints , true ) ;"	1204:1:31532:31583	651968	5	True				
ANR	652022	IdentifierDecl	"* ls = sdb_foreach_list ( a -> sdb_hints , true )"		651968	0					
ANR	652023	IdentifierDeclType	SdbList *		651968	0					
ANR	652024	Identifier	ls		651968	1					
ANR	652025	AssignmentExpression	"* ls = sdb_foreach_list ( a -> sdb_hints , true )"		651968	2		=			
ANR	652026	Identifier	ls		651968	0					
ANR	652027	CallExpression	"sdb_foreach_list ( a -> sdb_hints , true )"		651968	1					
ANR	652028	Callee	sdb_foreach_list		651968	0					
ANR	652029	Identifier	sdb_foreach_list		651968	0					
ANR	652030	ArgumentList	a -> sdb_hints		651968	1					
ANR	652031	Argument	a -> sdb_hints		651968	0					
ANR	652032	PtrMemberAccess	a -> sdb_hints		651968	0					
ANR	652033	Identifier	a		651968	0					
ANR	652034	Identifier	sdb_hints		651968	1					
ANR	652035	Argument	true		651968	1					
ANR	652036	Identifier	true		651968	0					
ANR	652037	IdentifierDeclStatement	SdbListIter * lsi ;	1205:1:31586:31602	651968	6	True				
ANR	652038	IdentifierDecl	* lsi		651968	0					
ANR	652039	IdentifierDeclType	SdbListIter *		651968	0					
ANR	652040	Identifier	lsi		651968	1					
ANR	652041	IdentifierDeclStatement	SdbKv * kv ;	1206:1:31605:31614	651968	7	True				
ANR	652042	IdentifierDecl	* kv		651968	0					
ANR	652043	IdentifierDeclType	SdbKv *		651968	0					
ANR	652044	Identifier	kv		651968	1					
ANR	652045	Statement	ls_foreach	1207:1:31617:31626	651968	8	True				
ANR	652046	Statement	(	1207:12:31628:31628	651968	9	True				
ANR	652047	Statement	ls	1207:13:31629:31630	651968	10	True				
ANR	652048	Statement	","	1207:15:31631:31631	651968	11	True				
ANR	652049	Statement	lsi	1207:17:31633:31635	651968	12	True				
ANR	652050	Statement	","	1207:20:31636:31636	651968	13	True				
ANR	652051	Statement	kv	1207:22:31638:31639	651968	14	True				
ANR	652052	Statement	)	1207:24:31640:31640	651968	15	True				
ANR	652053	CompoundStatement		17:26:300:300	651968	16					
ANR	652054	ExpressionStatement	"cb ( & hls , sdbkv_key ( kv ) , sdbkv_value ( kv ) )"	1208:2:31646:31689	651968	0	True				
ANR	652055	CallExpression	"cb ( & hls , sdbkv_key ( kv ) , sdbkv_value ( kv ) )"		651968	0					
ANR	652056	Callee	cb		651968	0					
ANR	652057	Identifier	cb		651968	0					
ANR	652058	ArgumentList	& hls		651968	1					
ANR	652059	Argument	& hls		651968	0					
ANR	652060	UnaryOperationExpression	& hls		651968	0					
ANR	652061	UnaryOperator	&		651968	0					
ANR	652062	Identifier	hls		651968	1					
ANR	652063	Argument	sdbkv_key ( kv )		651968	1					
ANR	652064	CallExpression	sdbkv_key ( kv )		651968	0					
ANR	652065	Callee	sdbkv_key		651968	0					
ANR	652066	Identifier	sdbkv_key		651968	0					
ANR	652067	ArgumentList	kv		651968	1					
ANR	652068	Argument	kv		651968	0					
ANR	652069	Identifier	kv		651968	0					
ANR	652070	Argument	sdbkv_value ( kv )		651968	2					
ANR	652071	CallExpression	sdbkv_value ( kv )		651968	0					
ANR	652072	Callee	sdbkv_value		651968	0					
ANR	652073	Identifier	sdbkv_value		651968	0					
ANR	652074	ArgumentList	kv		651968	1					
ANR	652075	Argument	kv		651968	0					
ANR	652076	Identifier	kv		651968	0					
ANR	652077	ExpressionStatement	ls_free ( ls )	1210:1:31695:31707	651968	17	True				
ANR	652078	CallExpression	ls_free ( ls )		651968	0					
ANR	652079	Callee	ls_free		651968	0					
ANR	652080	Identifier	ls_free		651968	0					
ANR	652081	ArgumentList	ls		651968	1					
ANR	652082	Argument	ls		651968	0					
ANR	652083	Identifier	ls		651968	0					
ANR	652084	IfStatement	if ( hls . pj )		651968	18					
ANR	652085	Condition	hls . pj	1211:5:31714:31719	651968	0	True				
ANR	652086	MemberAccess	hls . pj		651968	0					
ANR	652087	Identifier	hls		651968	0					
ANR	652088	Identifier	pj		651968	1					
ANR	652089	CompoundStatement		21:13:380:380	651968	1					
ANR	652090	ExpressionStatement	pj_end ( hls . pj )	1212:2:31726:31741	651968	0	True				
ANR	652091	CallExpression	pj_end ( hls . pj )		651968	0					
ANR	652092	Callee	pj_end		651968	0					
ANR	652093	Identifier	pj_end		651968	0					
ANR	652094	ArgumentList	hls . pj		651968	1					
ANR	652095	Argument	hls . pj		651968	0					
ANR	652096	MemberAccess	hls . pj		651968	0					
ANR	652097	Identifier	hls		651968	0					
ANR	652098	Identifier	pj		651968	1					
ANR	652099	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , pj_string ( hls . pj ) )"	1213:2:31745:31787	651968	1	True				
ANR	652100	CallExpression	"r_cons_printf ( ""%s\\n"" , pj_string ( hls . pj ) )"		651968	0					
ANR	652101	Callee	r_cons_printf		651968	0					
ANR	652102	Identifier	r_cons_printf		651968	0					
ANR	652103	ArgumentList	"""%s\\n"""		651968	1					
ANR	652104	Argument	"""%s\\n"""		651968	0					
ANR	652105	PrimaryExpression	"""%s\\n"""		651968	0					
ANR	652106	Argument	pj_string ( hls . pj )		651968	1					
ANR	652107	CallExpression	pj_string ( hls . pj )		651968	0					
ANR	652108	Callee	pj_string		651968	0					
ANR	652109	Identifier	pj_string		651968	0					
ANR	652110	ArgumentList	hls . pj		651968	1					
ANR	652111	Argument	hls . pj		651968	0					
ANR	652112	MemberAccess	hls . pj		651968	0					
ANR	652113	Identifier	hls		651968	0					
ANR	652114	Identifier	pj		651968	1					
ANR	652115	ReturnType	R_API void		651968	1					
ANR	652116	Identifier	r_core_anal_hint_list		651968	2					
ANR	652117	ParameterList	"RAnal * a , int mode"		651968	3					
ANR	652118	Parameter	RAnal * a	1191:33:31321:31328	651968	0	True				
ANR	652119	ParameterType	RAnal *		651968	0					
ANR	652120	Identifier	a		651968	1					
ANR	652121	Parameter	int mode	1191:43:31331:31338	651968	1	True				
ANR	652122	ParameterType	int		651968	0					
ANR	652123	Identifier	mode		651968	1					
ANR	652124	CFGEntryNode	ENTRY		651968		True				
ANR	652125	CFGExitNode	EXIT		651968		True				
ANR	652126	Symbol	a		651968						
ANR	652127	Symbol	NULL		651968						
ANR	652128	Symbol	lsi		651968						
ANR	652129	Symbol	sdbkv_key		651968						
ANR	652130	Symbol	pj_string		651968						
ANR	652131	Symbol	ls		651968						
ANR	652132	Symbol	hls . a		651968						
ANR	652133	Symbol	sdb_foreach_list		651968						
ANR	652134	Symbol	* a		651968						
ANR	652135	Symbol	kv		651968						
ANR	652136	Symbol	sdbkv_value		651968						
ANR	652137	Symbol	hls . pj		651968						
ANR	652138	Symbol	hls		651968						
ANR	652139	Symbol	mode		651968						
ANR	652140	Symbol	& hls		651968						
ANR	652141	Symbol	true		651968						
ANR	652142	Symbol	pj_new		651968						
ANR	652143	Symbol	a -> sdb_hints		651968						
ANR	652144	Symbol	hls . mode		651968						
ANR	652145	Function	core_anal_graph_label	1217:0:31795:33579							
ANR	652146	FunctionDef	"core_anal_graph_label (RCore * core , RAnalBlock * bb , int opts)"		652145	0					
ANR	652147	CompoundStatement		1217:74:31869:33579	652145	0					
ANR	652148	IdentifierDeclStatement	int is_html = r_cons_singleton ( ) -> is_html ;	1218:1:31872:31914	652145	0	True				
ANR	652149	IdentifierDecl	is_html = r_cons_singleton ( ) -> is_html		652145	0					
ANR	652150	IdentifierDeclType	int		652145	0					
ANR	652151	Identifier	is_html		652145	1					
ANR	652152	AssignmentExpression	is_html = r_cons_singleton ( ) -> is_html		652145	2		=			
ANR	652153	Identifier	is_html		652145	0					
ANR	652154	PtrMemberAccess	r_cons_singleton ( ) -> is_html		652145	1					
ANR	652155	CallExpression	r_cons_singleton ( )		652145	0					
ANR	652156	Callee	r_cons_singleton		652145	0					
ANR	652157	Identifier	r_cons_singleton		652145	0					
ANR	652158	ArgumentList			652145	1					
ANR	652159	Identifier	is_html		652145	1					
ANR	652160	IdentifierDeclStatement	int is_json = opts & R_CORE_ANAL_JSON ;	1219:1:31917:31954	652145	1	True				
ANR	652161	IdentifierDecl	is_json = opts & R_CORE_ANAL_JSON		652145	0					
ANR	652162	IdentifierDeclType	int		652145	0					
ANR	652163	Identifier	is_json		652145	1					
ANR	652164	AssignmentExpression	is_json = opts & R_CORE_ANAL_JSON		652145	2		=			
ANR	652165	Identifier	is_json		652145	0					
ANR	652166	BitAndExpression	opts & R_CORE_ANAL_JSON		652145	1		&			
ANR	652167	Identifier	opts		652145	0					
ANR	652168	Identifier	R_CORE_ANAL_JSON		652145	1					
ANR	652169	IdentifierDeclStatement	"char cmd [ 1024 ] , file [ 1024 ] , * cmdstr = NULL , * filestr = NULL , * str = NULL ;"	1220:1:31957:32029	652145	2	True				
ANR	652170	IdentifierDecl	cmd [ 1024 ]		652145	0					
ANR	652171	IdentifierDeclType	char [ 1024 ]		652145	0					
ANR	652172	Identifier	cmd		652145	1					
ANR	652173	PrimaryExpression	1024		652145	2					
ANR	652174	IdentifierDecl	file [ 1024 ]		652145	1					
ANR	652175	IdentifierDeclType	char [ 1024 ]		652145	0					
ANR	652176	Identifier	file		652145	1					
ANR	652177	PrimaryExpression	1024		652145	2					
ANR	652178	IdentifierDecl	* cmdstr = NULL		652145	2					
ANR	652179	IdentifierDeclType	char *		652145	0					
ANR	652180	Identifier	cmdstr		652145	1					
ANR	652181	AssignmentExpression	* cmdstr = NULL		652145	2		=			
ANR	652182	Identifier	NULL		652145	0					
ANR	652183	Identifier	NULL		652145	1					
ANR	652184	IdentifierDecl	* filestr = NULL		652145	3					
ANR	652185	IdentifierDeclType	char *		652145	0					
ANR	652186	Identifier	filestr		652145	1					
ANR	652187	AssignmentExpression	* filestr = NULL		652145	2		=			
ANR	652188	Identifier	NULL		652145	0					
ANR	652189	Identifier	NULL		652145	1					
ANR	652190	IdentifierDecl	* str = NULL		652145	4					
ANR	652191	IdentifierDeclType	char *		652145	0					
ANR	652192	Identifier	str		652145	1					
ANR	652193	AssignmentExpression	* str = NULL		652145	2		=			
ANR	652194	Identifier	NULL		652145	0					
ANR	652195	Identifier	NULL		652145	1					
ANR	652196	IdentifierDeclStatement	"int line = 0 , oline = 0 , idx = 0 ;"	1221:1:32032:32064	652145	3	True				
ANR	652197	IdentifierDecl	line = 0		652145	0					
ANR	652198	IdentifierDeclType	int		652145	0					
ANR	652199	Identifier	line		652145	1					
ANR	652200	AssignmentExpression	line = 0		652145	2		=			
ANR	652201	Identifier	line		652145	0					
ANR	652202	PrimaryExpression	0		652145	1					
ANR	652203	IdentifierDecl	oline = 0		652145	1					
ANR	652204	IdentifierDeclType	int		652145	0					
ANR	652205	Identifier	oline		652145	1					
ANR	652206	AssignmentExpression	oline = 0		652145	2		=			
ANR	652207	Identifier	oline		652145	0					
ANR	652208	PrimaryExpression	0		652145	1					
ANR	652209	IdentifierDecl	idx = 0		652145	2					
ANR	652210	IdentifierDeclType	int		652145	0					
ANR	652211	Identifier	idx		652145	1					
ANR	652212	AssignmentExpression	idx = 0		652145	2		=			
ANR	652213	Identifier	idx		652145	0					
ANR	652214	PrimaryExpression	0		652145	1					
ANR	652215	IdentifierDeclStatement	ut64 at ;	1222:1:32067:32074	652145	4	True				
ANR	652216	IdentifierDecl	at		652145	0					
ANR	652217	IdentifierDeclType	ut64		652145	0					
ANR	652218	Identifier	at		652145	1					
ANR	652219	IfStatement	if ( opts & R_CORE_ANAL_GRAPHLINES )		652145	5					
ANR	652220	Condition	opts & R_CORE_ANAL_GRAPHLINES	1224:5:32082:32110	652145	0	True				
ANR	652221	BitAndExpression	opts & R_CORE_ANAL_GRAPHLINES		652145	0		&			
ANR	652222	Identifier	opts		652145	0					
ANR	652223	Identifier	R_CORE_ANAL_GRAPHLINES		652145	1					
ANR	652224	CompoundStatement		8:36:243:243	652145	1					
ANR	652225	ForStatement	for ( at = bb -> addr ; at < bb -> addr + bb -> size ; at += 2 )		652145	0					
ANR	652226	ForInit	at = bb -> addr ;	1225:7:32122:32135	652145	0	True				
ANR	652227	AssignmentExpression	at = bb -> addr		652145	0		=			
ANR	652228	Identifier	at		652145	0					
ANR	652229	PtrMemberAccess	bb -> addr		652145	1					
ANR	652230	Identifier	bb		652145	0					
ANR	652231	Identifier	addr		652145	1					
ANR	652232	Condition	at < bb -> addr + bb -> size	1225:22:32137:32160	652145	1	True				
ANR	652233	RelationalExpression	at < bb -> addr + bb -> size		652145	0		<			
ANR	652234	Identifier	at		652145	0					
ANR	652235	AdditiveExpression	bb -> addr + bb -> size		652145	1		+			
ANR	652236	PtrMemberAccess	bb -> addr		652145	0					
ANR	652237	Identifier	bb		652145	0					
ANR	652238	Identifier	addr		652145	1					
ANR	652239	PtrMemberAccess	bb -> size		652145	1					
ANR	652240	Identifier	bb		652145	0					
ANR	652241	Identifier	size		652145	1					
ANR	652242	AssignmentExpression	at += 2	1225:48:32163:32169	652145	2	True	+=			
ANR	652243	Identifier	at		652145	0					
ANR	652244	PrimaryExpression	2		652145	1					
ANR	652245	CompoundStatement		9:57:302:302	652145	3					
ANR	652246	ExpressionStatement	"r_bin_addr2line ( core -> bin , at , file , sizeof ( file ) - 1 , & line )"	1226:3:32177:32240	652145	0	True				
ANR	652247	CallExpression	"r_bin_addr2line ( core -> bin , at , file , sizeof ( file ) - 1 , & line )"		652145	0					
ANR	652248	Callee	r_bin_addr2line		652145	0					
ANR	652249	Identifier	r_bin_addr2line		652145	0					
ANR	652250	ArgumentList	core -> bin		652145	1					
ANR	652251	Argument	core -> bin		652145	0					
ANR	652252	PtrMemberAccess	core -> bin		652145	0					
ANR	652253	Identifier	core		652145	0					
ANR	652254	Identifier	bin		652145	1					
ANR	652255	Argument	at		652145	1					
ANR	652256	Identifier	at		652145	0					
ANR	652257	Argument	file		652145	2					
ANR	652258	Identifier	file		652145	0					
ANR	652259	Argument	sizeof ( file ) - 1		652145	3					
ANR	652260	AdditiveExpression	sizeof ( file ) - 1		652145	0		-			
ANR	652261	SizeofExpression	sizeof ( file )		652145	0					
ANR	652262	Sizeof	sizeof		652145	0					
ANR	652263	SizeofOperand	file		652145	1					
ANR	652264	PrimaryExpression	1		652145	1					
ANR	652265	Argument	& line		652145	4					
ANR	652266	UnaryOperationExpression	& line		652145	0					
ANR	652267	UnaryOperator	&		652145	0					
ANR	652268	Identifier	line		652145	1					
ANR	652269	IfStatement	"if ( line != 0 && line != oline && strcmp ( file , ""??"" ) )"		652145	1					
ANR	652270	Condition	"line != 0 && line != oline && strcmp ( file , ""??"" )"	1227:7:32249:32297	652145	0	True				
ANR	652271	AndExpression	"line != 0 && line != oline && strcmp ( file , ""??"" )"		652145	0		&&			
ANR	652272	EqualityExpression	line != 0		652145	0		!=			
ANR	652273	Identifier	line		652145	0					
ANR	652274	PrimaryExpression	0		652145	1					
ANR	652275	AndExpression	"line != oline && strcmp ( file , ""??"" )"		652145	1		&&			
ANR	652276	EqualityExpression	line != oline		652145	0		!=			
ANR	652277	Identifier	line		652145	0					
ANR	652278	Identifier	oline		652145	1					
ANR	652279	CallExpression	"strcmp ( file , ""??"" )"		652145	1					
ANR	652280	Callee	strcmp		652145	0					
ANR	652281	Identifier	strcmp		652145	0					
ANR	652282	ArgumentList	file		652145	1					
ANR	652283	Argument	file		652145	0					
ANR	652284	Identifier	file		652145	0					
ANR	652285	Argument	"""??"""		652145	1					
ANR	652286	PrimaryExpression	"""??"""		652145	0					
ANR	652287	CompoundStatement		11:58:430:430	652145	1					
ANR	652288	ExpressionStatement	"filestr = r_file_slurp_line ( file , line , 0 )"	1228:4:32306:32349	652145	0	True				
ANR	652289	AssignmentExpression	"filestr = r_file_slurp_line ( file , line , 0 )"		652145	0		=			
ANR	652290	Identifier	filestr		652145	0					
ANR	652291	CallExpression	"r_file_slurp_line ( file , line , 0 )"		652145	1					
ANR	652292	Callee	r_file_slurp_line		652145	0					
ANR	652293	Identifier	r_file_slurp_line		652145	0					
ANR	652294	ArgumentList	file		652145	1					
ANR	652295	Argument	file		652145	0					
ANR	652296	Identifier	file		652145	0					
ANR	652297	Argument	line		652145	1					
ANR	652298	Identifier	line		652145	0					
ANR	652299	Argument	0		652145	2					
ANR	652300	PrimaryExpression	0		652145	0					
ANR	652301	IfStatement	if ( filestr )		652145	1					
ANR	652302	Condition	filestr	1229:8:32359:32365	652145	0	True				
ANR	652303	Identifier	filestr		652145	0					
ANR	652304	CompoundStatement		14:5:505:532	652145	1					
ANR	652305	IdentifierDeclStatement	int flen = strlen ( filestr ) ;	1230:5:32375:32402	652145	0	True				
ANR	652306	IdentifierDecl	flen = strlen ( filestr )		652145	0					
ANR	652307	IdentifierDeclType	int		652145	0					
ANR	652308	Identifier	flen		652145	1					
ANR	652309	AssignmentExpression	flen = strlen ( filestr )		652145	2		=			
ANR	652310	Identifier	flen		652145	0					
ANR	652311	CallExpression	strlen ( filestr )		652145	1					
ANR	652312	Callee	strlen		652145	0					
ANR	652313	Identifier	strlen		652145	0					
ANR	652314	ArgumentList	filestr		652145	1					
ANR	652315	Argument	filestr		652145	0					
ANR	652316	Identifier	filestr		652145	0					
ANR	652317	ExpressionStatement	"cmdstr = realloc ( cmdstr , idx + flen + 8 )"	1231:5:32409:32450	652145	1	True				
ANR	652318	AssignmentExpression	"cmdstr = realloc ( cmdstr , idx + flen + 8 )"		652145	0		=			
ANR	652319	Identifier	cmdstr		652145	0					
ANR	652320	CallExpression	"realloc ( cmdstr , idx + flen + 8 )"		652145	1					
ANR	652321	Callee	realloc		652145	0					
ANR	652322	Identifier	realloc		652145	0					
ANR	652323	ArgumentList	cmdstr		652145	1					
ANR	652324	Argument	cmdstr		652145	0					
ANR	652325	Identifier	cmdstr		652145	0					
ANR	652326	Argument	idx + flen + 8		652145	1					
ANR	652327	AdditiveExpression	idx + flen + 8		652145	0		+			
ANR	652328	Identifier	idx		652145	0					
ANR	652329	AdditiveExpression	flen + 8		652145	1		+			
ANR	652330	Identifier	flen		652145	0					
ANR	652331	PrimaryExpression	8		652145	1					
ANR	652332	ExpressionStatement	"memcpy ( cmdstr + idx , filestr , flen )"	1232:5:32457:32493	652145	2	True				
ANR	652333	CallExpression	"memcpy ( cmdstr + idx , filestr , flen )"		652145	0					
ANR	652334	Callee	memcpy		652145	0					
ANR	652335	Identifier	memcpy		652145	0					
ANR	652336	ArgumentList	cmdstr + idx		652145	1					
ANR	652337	Argument	cmdstr + idx		652145	0					
ANR	652338	AdditiveExpression	cmdstr + idx		652145	0		+			
ANR	652339	Identifier	cmdstr		652145	0					
ANR	652340	Identifier	idx		652145	1					
ANR	652341	Argument	filestr		652145	1					
ANR	652342	Identifier	filestr		652145	0					
ANR	652343	Argument	flen		652145	2					
ANR	652344	Identifier	flen		652145	0					
ANR	652345	ExpressionStatement	idx += flen	1233:5:32500:32511	652145	3	True				
ANR	652346	AssignmentExpression	idx += flen		652145	0		+=			
ANR	652347	Identifier	idx		652145	0					
ANR	652348	Identifier	flen		652145	1					
ANR	652349	IfStatement	if ( is_json )		652145	4					
ANR	652350	Condition	is_json	1234:9:32522:32528	652145	0	True				
ANR	652351	Identifier	is_json		652145	0					
ANR	652352	CompoundStatement		18:18:661:661	652145	1					
ANR	652353	ExpressionStatement	"strcpy ( cmdstr + idx , ""\\\\n"" )"	1235:6:32539:32567	652145	0	True				
ANR	652354	CallExpression	"strcpy ( cmdstr + idx , ""\\\\n"" )"		652145	0					
ANR	652355	Callee	strcpy		652145	0					
ANR	652356	Identifier	strcpy		652145	0					
ANR	652357	ArgumentList	cmdstr + idx		652145	1					
ANR	652358	Argument	cmdstr + idx		652145	0					
ANR	652359	AdditiveExpression	cmdstr + idx		652145	0		+			
ANR	652360	Identifier	cmdstr		652145	0					
ANR	652361	Identifier	idx		652145	1					
ANR	652362	Argument	"""\\\\n"""		652145	1					
ANR	652363	PrimaryExpression	"""\\\\n"""		652145	0					
ANR	652364	ExpressionStatement	idx += 2	1236:6:32575:32583	652145	1	True				
ANR	652365	AssignmentExpression	idx += 2		652145	0		+=			
ANR	652366	Identifier	idx		652145	0					
ANR	652367	PrimaryExpression	2		652145	1					
ANR	652368	ElseStatement	else		652145	0					
ANR	652369	IfStatement	if ( is_html )		652145	0					
ANR	652370	Condition	is_html	1237:16:32601:32607	652145	0	True				
ANR	652371	Identifier	is_html		652145	0					
ANR	652372	CompoundStatement		21:25:740:740	652145	1					
ANR	652373	ExpressionStatement	"strcpy ( cmdstr + idx , ""<br />"" )"	1238:6:32618:32649	652145	0	True				
ANR	652374	CallExpression	"strcpy ( cmdstr + idx , ""<br />"" )"		652145	0					
ANR	652375	Callee	strcpy		652145	0					
ANR	652376	Identifier	strcpy		652145	0					
ANR	652377	ArgumentList	cmdstr + idx		652145	1					
ANR	652378	Argument	cmdstr + idx		652145	0					
ANR	652379	AdditiveExpression	cmdstr + idx		652145	0		+			
ANR	652380	Identifier	cmdstr		652145	0					
ANR	652381	Identifier	idx		652145	1					
ANR	652382	Argument	"""<br />"""		652145	1					
ANR	652383	PrimaryExpression	"""<br />"""		652145	0					
ANR	652384	ExpressionStatement	idx += 6	1239:6:32657:32665	652145	1	True				
ANR	652385	AssignmentExpression	idx += 6		652145	0		+=			
ANR	652386	Identifier	idx		652145	0					
ANR	652387	PrimaryExpression	6		652145	1					
ANR	652388	ElseStatement	else		652145	0					
ANR	652389	CompoundStatement		24:12:809:809	652145	0					
ANR	652390	ExpressionStatement	"strcpy ( cmdstr + idx , ""\\\\l"" )"	1241:6:32687:32715	652145	0	True				
ANR	652391	CallExpression	"strcpy ( cmdstr + idx , ""\\\\l"" )"		652145	0					
ANR	652392	Callee	strcpy		652145	0					
ANR	652393	Identifier	strcpy		652145	0					
ANR	652394	ArgumentList	cmdstr + idx		652145	1					
ANR	652395	Argument	cmdstr + idx		652145	0					
ANR	652396	AdditiveExpression	cmdstr + idx		652145	0		+			
ANR	652397	Identifier	cmdstr		652145	0					
ANR	652398	Identifier	idx		652145	1					
ANR	652399	Argument	"""\\\\l"""		652145	1					
ANR	652400	PrimaryExpression	"""\\\\l"""		652145	0					
ANR	652401	ExpressionStatement	idx += 2	1242:6:32723:32731	652145	1	True				
ANR	652402	AssignmentExpression	idx += 2		652145	0		+=			
ANR	652403	Identifier	idx		652145	0					
ANR	652404	PrimaryExpression	2		652145	1					
ANR	652405	ExpressionStatement	free ( filestr )	1244:5:32745:32759	652145	5	True				
ANR	652406	CallExpression	free ( filestr )		652145	0					
ANR	652407	Callee	free		652145	0					
ANR	652408	Identifier	free		652145	0					
ANR	652409	ArgumentList	filestr		652145	1					
ANR	652410	Argument	filestr		652145	0					
ANR	652411	Identifier	filestr		652145	0					
ANR	652412	ExpressionStatement	oline = line	1247:3:32775:32787	652145	2	True				
ANR	652413	AssignmentExpression	oline = line		652145	0		=			
ANR	652414	Identifier	oline		652145	0					
ANR	652415	Identifier	line		652145	1					
ANR	652416	ElseStatement	else		652145	0					
ANR	652417	IfStatement	if ( opts & R_CORE_ANAL_STAR )		652145	0					
ANR	652418	Condition	opts & R_CORE_ANAL_STAR	1249:12:32805:32827	652145	0	True				
ANR	652419	BitAndExpression	opts & R_CORE_ANAL_STAR		652145	0		&			
ANR	652420	Identifier	opts		652145	0					
ANR	652421	Identifier	R_CORE_ANAL_STAR		652145	1					
ANR	652422	CompoundStatement		33:37:960:960	652145	1					
ANR	652423	Statement	snprintf	1250:16:32848:32855	652145	0	True				
ANR	652424	Statement	(	1250:25:32857:32857	652145	1	True				
ANR	652425	Statement	cmd	1250:26:32858:32860	652145	2	True				
ANR	652426	Statement	","	1250:29:32861:32861	652145	3	True				
ANR	652427	Statement	sizeof	1250:31:32863:32868	652145	4	True				
ANR	652428	Statement	(	1250:38:32870:32870	652145	5	True				
ANR	652429	Statement	cmd	1250:39:32871:32873	652145	6	True				
ANR	652430	Statement	)	1250:42:32874:32874	652145	7	True				
ANR	652431	Statement	","	1250:43:32875:32875	652145	8	True				
ANR	652432	Statement	"""pdb %d @ 0x%08"""	1250:45:32877:32892	652145	9	True				
ANR	652433	Statement	PFMT64x	1250:62:32894:32900	652145	10	True				
ANR	652434	Statement	","	1250:69:32901:32901	652145	11	True				
ANR	652435	Statement	bb	1250:71:32903:32904	652145	12	True				
ANR	652436	Statement	->	1250:73:32905:32906	652145	13	True				
ANR	652437	Statement	size	1250:75:32907:32910	652145	14	True				
ANR	652438	Statement	","	1250:79:32911:32911	652145	15	True				
ANR	652439	Statement	bb	1250:81:32913:32914	652145	16	True				
ANR	652440	Statement	->	1250:83:32915:32916	652145	17	True				
ANR	652441	Statement	addr	1250:85:32917:32920	652145	18	True				
ANR	652442	Statement	)	1250:89:32921:32921	652145	19	True				
ANR	652443	ExpressionStatement		1250:90:32922:32922	652145	20	True				
ANR	652444	ExpressionStatement	"str = r_core_cmd_str ( core , cmd )"	1251:16:32940:32972	652145	21	True				
ANR	652445	AssignmentExpression	"str = r_core_cmd_str ( core , cmd )"		652145	0		=			
ANR	652446	Identifier	str		652145	0					
ANR	652447	CallExpression	"r_core_cmd_str ( core , cmd )"		652145	1					
ANR	652448	Callee	r_core_cmd_str		652145	0					
ANR	652449	Identifier	r_core_cmd_str		652145	0					
ANR	652450	ArgumentList	core		652145	1					
ANR	652451	Argument	core		652145	0					
ANR	652452	Identifier	core		652145	0					
ANR	652453	Argument	cmd		652145	1					
ANR	652454	Identifier	cmd		652145	0					
ANR	652455	ElseStatement	else		652145	0					
ANR	652456	IfStatement	if ( opts & R_CORE_ANAL_GRAPHBODY )		652145	0					
ANR	652457	Condition	opts & R_CORE_ANAL_GRAPHBODY	1252:12:32986:33013	652145	0	True				
ANR	652458	BitAndExpression	opts & R_CORE_ANAL_GRAPHBODY		652145	0		&			
ANR	652459	Identifier	opts		652145	0					
ANR	652460	Identifier	R_CORE_ANAL_GRAPHBODY		652145	1					
ANR	652461	CompoundStatement		38:2:1216:1276	652145	1					
ANR	652462	IdentifierDeclStatement	"const bool scrColor = r_config_get ( core -> config , ""scr.color"" ) ;"	1253:2:33020:33082	652145	0	True				
ANR	652463	IdentifierDecl	"scrColor = r_config_get ( core -> config , ""scr.color"" )"		652145	0					
ANR	652464	IdentifierDeclType	const bool		652145	0					
ANR	652465	Identifier	scrColor		652145	1					
ANR	652466	AssignmentExpression	"scrColor = r_config_get ( core -> config , ""scr.color"" )"		652145	2		=			
ANR	652467	Identifier	scrColor		652145	0					
ANR	652468	CallExpression	"r_config_get ( core -> config , ""scr.color"" )"		652145	1					
ANR	652469	Callee	r_config_get		652145	0					
ANR	652470	Identifier	r_config_get		652145	0					
ANR	652471	ArgumentList	core -> config		652145	1					
ANR	652472	Argument	core -> config		652145	0					
ANR	652473	PtrMemberAccess	core -> config		652145	0					
ANR	652474	Identifier	core		652145	0					
ANR	652475	Identifier	config		652145	1					
ANR	652476	Argument	"""scr.color"""		652145	1					
ANR	652477	PrimaryExpression	"""scr.color"""		652145	0					
ANR	652478	IdentifierDeclStatement	"const bool scrUtf8 = r_config_get ( core -> config , ""scr.utf8"" ) ;"	1254:2:33086:33146	652145	1	True				
ANR	652479	IdentifierDecl	"scrUtf8 = r_config_get ( core -> config , ""scr.utf8"" )"		652145	0					
ANR	652480	IdentifierDeclType	const bool		652145	0					
ANR	652481	Identifier	scrUtf8		652145	1					
ANR	652482	AssignmentExpression	"scrUtf8 = r_config_get ( core -> config , ""scr.utf8"" )"		652145	2		=			
ANR	652483	Identifier	scrUtf8		652145	0					
ANR	652484	CallExpression	"r_config_get ( core -> config , ""scr.utf8"" )"		652145	1					
ANR	652485	Callee	r_config_get		652145	0					
ANR	652486	Identifier	r_config_get		652145	0					
ANR	652487	ArgumentList	core -> config		652145	1					
ANR	652488	Argument	core -> config		652145	0					
ANR	652489	PtrMemberAccess	core -> config		652145	0					
ANR	652490	Identifier	core		652145	0					
ANR	652491	Identifier	config		652145	1					
ANR	652492	Argument	"""scr.utf8"""		652145	1					
ANR	652493	PrimaryExpression	"""scr.utf8"""		652145	0					
ANR	652494	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.color"" , COLOR_MODE_DISABLED )"	1255:2:33150:33213	652145	2	True				
ANR	652495	CallExpression	"r_config_set_i ( core -> config , ""scr.color"" , COLOR_MODE_DISABLED )"		652145	0					
ANR	652496	Callee	r_config_set_i		652145	0					
ANR	652497	Identifier	r_config_set_i		652145	0					
ANR	652498	ArgumentList	core -> config		652145	1					
ANR	652499	Argument	core -> config		652145	0					
ANR	652500	PtrMemberAccess	core -> config		652145	0					
ANR	652501	Identifier	core		652145	0					
ANR	652502	Identifier	config		652145	1					
ANR	652503	Argument	"""scr.color"""		652145	1					
ANR	652504	PrimaryExpression	"""scr.color"""		652145	0					
ANR	652505	Argument	COLOR_MODE_DISABLED		652145	2					
ANR	652506	Identifier	COLOR_MODE_DISABLED		652145	0					
ANR	652507	ExpressionStatement	"r_config_set ( core -> config , ""scr.utf8"" , ""false"" )"	1256:2:33217:33265	652145	3	True				
ANR	652508	CallExpression	"r_config_set ( core -> config , ""scr.utf8"" , ""false"" )"		652145	0					
ANR	652509	Callee	r_config_set		652145	0					
ANR	652510	Identifier	r_config_set		652145	0					
ANR	652511	ArgumentList	core -> config		652145	1					
ANR	652512	Argument	core -> config		652145	0					
ANR	652513	PtrMemberAccess	core -> config		652145	0					
ANR	652514	Identifier	core		652145	0					
ANR	652515	Identifier	config		652145	1					
ANR	652516	Argument	"""scr.utf8"""		652145	1					
ANR	652517	PrimaryExpression	"""scr.utf8"""		652145	0					
ANR	652518	Argument	"""false"""		652145	2					
ANR	652519	PrimaryExpression	"""false"""		652145	0					
ANR	652520	Statement	snprintf	1257:2:33269:33276	652145	4	True				
ANR	652521	Statement	(	1257:11:33278:33278	652145	5	True				
ANR	652522	Statement	cmd	1257:12:33279:33281	652145	6	True				
ANR	652523	Statement	","	1257:15:33282:33282	652145	7	True				
ANR	652524	Statement	sizeof	1257:17:33284:33289	652145	8	True				
ANR	652525	Statement	(	1257:24:33291:33291	652145	9	True				
ANR	652526	Statement	cmd	1257:25:33292:33294	652145	10	True				
ANR	652527	Statement	)	1257:28:33295:33295	652145	11	True				
ANR	652528	Statement	","	1257:29:33296:33296	652145	12	True				
ANR	652529	Statement	"""pD %d @ 0x%08"""	1257:31:33298:33312	652145	13	True				
ANR	652530	Statement	PFMT64x	1257:47:33314:33320	652145	14	True				
ANR	652531	Statement	","	1257:54:33321:33321	652145	15	True				
ANR	652532	Statement	bb	1257:56:33323:33324	652145	16	True				
ANR	652533	Statement	->	1257:58:33325:33326	652145	17	True				
ANR	652534	Statement	size	1257:60:33327:33330	652145	18	True				
ANR	652535	Statement	","	1257:64:33331:33331	652145	19	True				
ANR	652536	Statement	bb	1257:66:33333:33334	652145	20	True				
ANR	652537	Statement	->	1257:68:33335:33336	652145	21	True				
ANR	652538	Statement	addr	1257:70:33337:33340	652145	22	True				
ANR	652539	Statement	)	1257:74:33341:33341	652145	23	True				
ANR	652540	ExpressionStatement		1257:75:33342:33342	652145	24	True				
ANR	652541	ExpressionStatement	"cmdstr = r_core_cmd_str ( core , cmd )"	1258:2:33346:33381	652145	25	True				
ANR	652542	AssignmentExpression	"cmdstr = r_core_cmd_str ( core , cmd )"		652145	0		=			
ANR	652543	Identifier	cmdstr		652145	0					
ANR	652544	CallExpression	"r_core_cmd_str ( core , cmd )"		652145	1					
ANR	652545	Callee	r_core_cmd_str		652145	0					
ANR	652546	Identifier	r_core_cmd_str		652145	0					
ANR	652547	ArgumentList	core		652145	1					
ANR	652548	Argument	core		652145	0					
ANR	652549	Identifier	core		652145	0					
ANR	652550	Argument	cmd		652145	1					
ANR	652551	Identifier	cmd		652145	0					
ANR	652552	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.color"" , scrColor )"	1259:2:33385:33437	652145	26	True				
ANR	652553	CallExpression	"r_config_set_i ( core -> config , ""scr.color"" , scrColor )"		652145	0					
ANR	652554	Callee	r_config_set_i		652145	0					
ANR	652555	Identifier	r_config_set_i		652145	0					
ANR	652556	ArgumentList	core -> config		652145	1					
ANR	652557	Argument	core -> config		652145	0					
ANR	652558	PtrMemberAccess	core -> config		652145	0					
ANR	652559	Identifier	core		652145	0					
ANR	652560	Identifier	config		652145	1					
ANR	652561	Argument	"""scr.color"""		652145	1					
ANR	652562	PrimaryExpression	"""scr.color"""		652145	0					
ANR	652563	Argument	scrColor		652145	2					
ANR	652564	Identifier	scrColor		652145	0					
ANR	652565	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.utf8"" , scrUtf8 )"	1260:2:33441:33491	652145	27	True				
ANR	652566	CallExpression	"r_config_set_i ( core -> config , ""scr.utf8"" , scrUtf8 )"		652145	0					
ANR	652567	Callee	r_config_set_i		652145	0					
ANR	652568	Identifier	r_config_set_i		652145	0					
ANR	652569	ArgumentList	core -> config		652145	1					
ANR	652570	Argument	core -> config		652145	0					
ANR	652571	PtrMemberAccess	core -> config		652145	0					
ANR	652572	Identifier	core		652145	0					
ANR	652573	Identifier	config		652145	1					
ANR	652574	Argument	"""scr.utf8"""		652145	1					
ANR	652575	PrimaryExpression	"""scr.utf8"""		652145	0					
ANR	652576	Argument	scrUtf8		652145	2					
ANR	652577	Identifier	scrUtf8		652145	0					
ANR	652578	IfStatement	if ( cmdstr )		652145	6					
ANR	652579	Condition	cmdstr	1262:5:33501:33506	652145	0	True				
ANR	652580	Identifier	cmdstr		652145	0					
ANR	652581	CompoundStatement		46:13:1639:1639	652145	1					
ANR	652582	ExpressionStatement	str = r_str_escape_dot ( cmdstr )	1263:2:33513:33544	652145	0	True				
ANR	652583	AssignmentExpression	str = r_str_escape_dot ( cmdstr )		652145	0		=			
ANR	652584	Identifier	str		652145	0					
ANR	652585	CallExpression	r_str_escape_dot ( cmdstr )		652145	1					
ANR	652586	Callee	r_str_escape_dot		652145	0					
ANR	652587	Identifier	r_str_escape_dot		652145	0					
ANR	652588	ArgumentList	cmdstr		652145	1					
ANR	652589	Argument	cmdstr		652145	0					
ANR	652590	Identifier	cmdstr		652145	0					
ANR	652591	ExpressionStatement	free ( cmdstr )	1264:2:33548:33561	652145	1	True				
ANR	652592	CallExpression	free ( cmdstr )		652145	0					
ANR	652593	Callee	free		652145	0					
ANR	652594	Identifier	free		652145	0					
ANR	652595	ArgumentList	cmdstr		652145	1					
ANR	652596	Argument	cmdstr		652145	0					
ANR	652597	Identifier	cmdstr		652145	0					
ANR	652598	ReturnStatement	return str ;	1266:1:33567:33577	652145	7	True				
ANR	652599	Identifier	str		652145	0					
ANR	652600	ReturnType	static char *		652145	1					
ANR	652601	Identifier	core_anal_graph_label		652145	2					
ANR	652602	ParameterList	"RCore * core , RAnalBlock * bb , int opts"		652145	3					
ANR	652603	Parameter	RCore * core	1217:35:31830:31840	652145	0	True				
ANR	652604	ParameterType	RCore *		652145	0					
ANR	652605	Identifier	core		652145	1					
ANR	652606	Parameter	RAnalBlock * bb	1217:48:31843:31856	652145	1	True				
ANR	652607	ParameterType	RAnalBlock *		652145	0					
ANR	652608	Identifier	bb		652145	1					
ANR	652609	Parameter	int opts	1217:64:31859:31866	652145	2	True				
ANR	652610	ParameterType	int		652145	0					
ANR	652611	Identifier	opts		652145	1					
ANR	652612	CFGEntryNode	ENTRY		652145		True				
ANR	652613	CFGExitNode	EXIT		652145		True				
ANR	652614	Symbol	bb		652145						
ANR	652615	Symbol	flen		652145						
ANR	652616	Symbol	bb -> size		652145						
ANR	652617	Symbol	r_core_cmd_str		652145						
ANR	652618	Symbol	is_json		652145						
ANR	652619	Symbol	line		652145						
ANR	652620	Symbol	COLOR_MODE_DISABLED		652145						
ANR	652621	Symbol	R_CORE_ANAL_GRAPHLINES		652145						
ANR	652622	Symbol	* core		652145						
ANR	652623	Symbol	r_config_get		652145						
ANR	652624	Symbol	bb -> addr		652145						
ANR	652625	Symbol	realloc		652145						
ANR	652626	Symbol	r_file_slurp_line		652145						
ANR	652627	Symbol	strlen		652145						
ANR	652628	Symbol	file		652145						
ANR	652629	Symbol	opts		652145						
ANR	652630	Symbol	r_cons_singleton		652145						
ANR	652631	Symbol	core -> bin		652145						
ANR	652632	Symbol	strcmp		652145						
ANR	652633	Symbol	core -> config		652145						
ANR	652634	Symbol	NULL		652145						
ANR	652635	Symbol	& line		652145						
ANR	652636	Symbol	* bb		652145						
ANR	652637	Symbol	cmdstr		652145						
ANR	652638	Symbol	R_CORE_ANAL_STAR		652145						
ANR	652639	Symbol	R_CORE_ANAL_GRAPHBODY		652145						
ANR	652640	Symbol	oline		652145						
ANR	652641	Symbol	r_cons_singleton ( ) -> is_html		652145						
ANR	652642	Symbol	str		652145						
ANR	652643	Symbol	core		652145						
ANR	652644	Symbol	at		652145						
ANR	652645	Symbol	is_html		652145						
ANR	652646	Symbol	R_CORE_ANAL_JSON		652145						
ANR	652647	Symbol	scrUtf8		652145						
ANR	652648	Symbol	r_str_escape_dot		652145						
ANR	652649	Symbol	cmd		652145						
ANR	652650	Symbol	idx		652145						
ANR	652651	Symbol	scrColor		652145						
ANR	652652	Symbol	* r_cons_singleton		652145						
ANR	652653	Symbol	filestr		652145						
ANR	652654	Function	palColorFor	1269:0:33582:33768							
ANR	652655	FunctionDef	palColorFor (const char * k)		652654	0					
ANR	652656	CompoundStatement		1269:40:33622:33768	652654	0					
ANR	652657	IfStatement	if ( ! r_cons_singleton ( ) )		652654	0					
ANR	652658	Condition	! r_cons_singleton ( )	1270:5:33629:33648	652654	0	True				
ANR	652659	UnaryOperationExpression	! r_cons_singleton ( )		652654	0					
ANR	652660	UnaryOperator	!		652654	0					
ANR	652661	CallExpression	r_cons_singleton ( )		652654	1					
ANR	652662	Callee	r_cons_singleton		652654	0					
ANR	652663	Identifier	r_cons_singleton		652654	0					
ANR	652664	ArgumentList			652654	1					
ANR	652665	CompoundStatement		2:27:28:28	652654	1					
ANR	652666	ReturnStatement	return NULL ;	1271:2:33655:33666	652654	0	True				
ANR	652667	Identifier	NULL		652654	0					
ANR	652668	IdentifierDeclStatement	RColor rcolor = r_cons_pal_get ( k ) ;	1273:1:33672:33706	652654	1	True				
ANR	652669	IdentifierDecl	rcolor = r_cons_pal_get ( k )		652654	0					
ANR	652670	IdentifierDeclType	RColor		652654	0					
ANR	652671	Identifier	rcolor		652654	1					
ANR	652672	AssignmentExpression	rcolor = r_cons_pal_get ( k )		652654	2		=			
ANR	652673	Identifier	rcolor		652654	0					
ANR	652674	CallExpression	r_cons_pal_get ( k )		652654	1					
ANR	652675	Callee	r_cons_pal_get		652654	0					
ANR	652676	Identifier	r_cons_pal_get		652654	0					
ANR	652677	ArgumentList	k		652654	1					
ANR	652678	Argument	k		652654	0					
ANR	652679	Identifier	k		652654	0					
ANR	652680	ReturnStatement	"return r_cons_rgb_tostring ( rcolor . r , rcolor . g , rcolor . b ) ;"	1274:1:33709:33766	652654	2	True				
ANR	652681	CallExpression	"r_cons_rgb_tostring ( rcolor . r , rcolor . g , rcolor . b )"		652654	0					
ANR	652682	Callee	r_cons_rgb_tostring		652654	0					
ANR	652683	Identifier	r_cons_rgb_tostring		652654	0					
ANR	652684	ArgumentList	rcolor . r		652654	1					
ANR	652685	Argument	rcolor . r		652654	0					
ANR	652686	MemberAccess	rcolor . r		652654	0					
ANR	652687	Identifier	rcolor		652654	0					
ANR	652688	Identifier	r		652654	1					
ANR	652689	Argument	rcolor . g		652654	1					
ANR	652690	MemberAccess	rcolor . g		652654	0					
ANR	652691	Identifier	rcolor		652654	0					
ANR	652692	Identifier	g		652654	1					
ANR	652693	Argument	rcolor . b		652654	2					
ANR	652694	MemberAccess	rcolor . b		652654	0					
ANR	652695	Identifier	rcolor		652654	0					
ANR	652696	Identifier	b		652654	1					
ANR	652697	ReturnType	static char *		652654	1					
ANR	652698	Identifier	palColorFor		652654	2					
ANR	652699	ParameterList	const char * k		652654	3					
ANR	652700	Parameter	const char * k	1269:25:33607:33619	652654	0	True				
ANR	652701	ParameterType	const char *		652654	0					
ANR	652702	Identifier	k		652654	1					
ANR	652703	CFGEntryNode	ENTRY		652654		True				
ANR	652704	CFGExitNode	EXIT		652654		True				
ANR	652705	Symbol	r_cons_rgb_tostring		652654						
ANR	652706	Symbol	NULL		652654						
ANR	652707	Symbol	rcolor . g		652654						
ANR	652708	Symbol	r_cons_singleton		652654						
ANR	652709	Symbol	k		652654						
ANR	652710	Symbol	r_cons_pal_get		652654						
ANR	652711	Symbol	rcolor		652654						
ANR	652712	Symbol	rcolor . b		652654						
ANR	652713	Symbol	rcolor . r		652654						
ANR	652714	Function	core_anal_color_curr_node	1277:0:33771:34206							
ANR	652715	FunctionDef	"core_anal_color_curr_node (RCore * core , RAnalBlock * bbi)"		652714	0					
ANR	652716	CompoundStatement		1277:68:33839:34206	652714	0					
ANR	652717	IdentifierDeclStatement	"bool color_current = r_config_get_i ( core -> config , ""graph.gv.current"" ) ;"	1278:1:33842:33912	652714	0	True				
ANR	652718	IdentifierDecl	"color_current = r_config_get_i ( core -> config , ""graph.gv.current"" )"		652714	0					
ANR	652719	IdentifierDeclType	bool		652714	0					
ANR	652720	Identifier	color_current		652714	1					
ANR	652721	AssignmentExpression	"color_current = r_config_get_i ( core -> config , ""graph.gv.current"" )"		652714	2		=			
ANR	652722	Identifier	color_current		652714	0					
ANR	652723	CallExpression	"r_config_get_i ( core -> config , ""graph.gv.current"" )"		652714	1					
ANR	652724	Callee	r_config_get_i		652714	0					
ANR	652725	Identifier	r_config_get_i		652714	0					
ANR	652726	ArgumentList	core -> config		652714	1					
ANR	652727	Argument	core -> config		652714	0					
ANR	652728	PtrMemberAccess	core -> config		652714	0					
ANR	652729	Identifier	core		652714	0					
ANR	652730	Identifier	config		652714	1					
ANR	652731	Argument	"""graph.gv.current"""		652714	1					
ANR	652732	PrimaryExpression	"""graph.gv.current"""		652714	0					
ANR	652733	IdentifierDeclStatement	"char * pal_curr = palColorFor ( ""graph.current"" ) ;"	1279:1:33915:33961	652714	1	True				
ANR	652734	IdentifierDecl	"* pal_curr = palColorFor ( ""graph.current"" )"		652714	0					
ANR	652735	IdentifierDeclType	char *		652714	0					
ANR	652736	Identifier	pal_curr		652714	1					
ANR	652737	AssignmentExpression	"* pal_curr = palColorFor ( ""graph.current"" )"		652714	2		=			
ANR	652738	Identifier	pal_curr		652714	0					
ANR	652739	CallExpression	"palColorFor ( ""graph.current"" )"		652714	1					
ANR	652740	Callee	palColorFor		652714	0					
ANR	652741	Identifier	palColorFor		652714	0					
ANR	652742	ArgumentList	"""graph.current"""		652714	1					
ANR	652743	Argument	"""graph.current"""		652714	0					
ANR	652744	PrimaryExpression	"""graph.current"""		652714	0					
ANR	652745	IdentifierDeclStatement	"bool current = r_anal_bb_is_in_offset ( bbi , core -> offset ) ;"	1280:1:33964:34021	652714	2	True				
ANR	652746	IdentifierDecl	"current = r_anal_bb_is_in_offset ( bbi , core -> offset )"		652714	0					
ANR	652747	IdentifierDeclType	bool		652714	0					
ANR	652748	Identifier	current		652714	1					
ANR	652749	AssignmentExpression	"current = r_anal_bb_is_in_offset ( bbi , core -> offset )"		652714	2		=			
ANR	652750	Identifier	current		652714	0					
ANR	652751	CallExpression	"r_anal_bb_is_in_offset ( bbi , core -> offset )"		652714	1					
ANR	652752	Callee	r_anal_bb_is_in_offset		652714	0					
ANR	652753	Identifier	r_anal_bb_is_in_offset		652714	0					
ANR	652754	ArgumentList	bbi		652714	1					
ANR	652755	Argument	bbi		652714	0					
ANR	652756	Identifier	bbi		652714	0					
ANR	652757	Argument	core -> offset		652714	1					
ANR	652758	PtrMemberAccess	core -> offset		652714	0					
ANR	652759	Identifier	core		652714	0					
ANR	652760	Identifier	offset		652714	1					
ANR	652761	IfStatement	if ( current && color_current )		652714	3					
ANR	652762	Condition	current && color_current	1282:5:34029:34052	652714	0	True				
ANR	652763	AndExpression	current && color_current		652714	0		&&			
ANR	652764	Identifier	current		652714	0					
ANR	652765	Identifier	color_current		652714	1					
ANR	652766	CompoundStatement		6:31:215:215	652714	1					
ANR	652767	Statement	r_cons_printf	1283:2:34059:34071	652714	0	True				
ANR	652768	Statement	(	1283:16:34073:34073	652714	1	True				
ANR	652769	Statement	"""\\t\\""0x%08"""	1283:17:34074:34084	652714	2	True				
ANR	652770	Statement	PFMT64x	1283:28:34085:34091	652714	3	True				
ANR	652771	Statement	"""\\"" """	1283:35:34092:34096	652714	4	True				
ANR	652772	Statement	","	1283:40:34097:34097	652714	5	True				
ANR	652773	Statement	bbi	1283:42:34099:34101	652714	6	True				
ANR	652774	Statement	->	1283:45:34102:34103	652714	7	True				
ANR	652775	Statement	addr	1283:47:34104:34107	652714	8	True				
ANR	652776	Statement	)	1283:51:34108:34108	652714	9	True				
ANR	652777	ExpressionStatement		1283:52:34109:34109	652714	10	True				
ANR	652778	ExpressionStatement	"r_cons_printf ( ""\\t[fillcolor=%s style=filled shape=box];\\n"" , pal_curr )"	1284:2:34113:34183	652714	11	True				
ANR	652779	CallExpression	"r_cons_printf ( ""\\t[fillcolor=%s style=filled shape=box];\\n"" , pal_curr )"		652714	0					
ANR	652780	Callee	r_cons_printf		652714	0					
ANR	652781	Identifier	r_cons_printf		652714	0					
ANR	652782	ArgumentList	"""\\t[fillcolor=%s style=filled shape=box];\\n"""		652714	1					
ANR	652783	Argument	"""\\t[fillcolor=%s style=filled shape=box];\\n"""		652714	0					
ANR	652784	PrimaryExpression	"""\\t[fillcolor=%s style=filled shape=box];\\n"""		652714	0					
ANR	652785	Argument	pal_curr		652714	1					
ANR	652786	Identifier	pal_curr		652714	0					
ANR	652787	ExpressionStatement	free ( pal_curr )	1286:1:34189:34204	652714	4	True				
ANR	652788	CallExpression	free ( pal_curr )		652714	0					
ANR	652789	Callee	free		652714	0					
ANR	652790	Identifier	free		652714	0					
ANR	652791	ArgumentList	pal_curr		652714	1					
ANR	652792	Argument	pal_curr		652714	0					
ANR	652793	Identifier	pal_curr		652714	0					
ANR	652794	ReturnType	static void		652714	1					
ANR	652795	Identifier	core_anal_color_curr_node		652714	2					
ANR	652796	ParameterList	"RCore * core , RAnalBlock * bbi"		652714	3					
ANR	652797	Parameter	RCore * core	1277:38:33809:33819	652714	0	True				
ANR	652798	ParameterType	RCore *		652714	0					
ANR	652799	Identifier	core		652714	1					
ANR	652800	Parameter	RAnalBlock * bbi	1277:51:33822:33836	652714	1	True				
ANR	652801	ParameterType	RAnalBlock *		652714	0					
ANR	652802	Identifier	bbi		652714	1					
ANR	652803	CFGEntryNode	ENTRY		652714		True				
ANR	652804	CFGExitNode	EXIT		652714		True				
ANR	652805	Symbol	core -> config		652714						
ANR	652806	Symbol	core		652714						
ANR	652807	Symbol	pal_curr		652714						
ANR	652808	Symbol	current		652714						
ANR	652809	Symbol	color_current		652714						
ANR	652810	Symbol	r_config_get_i		652714						
ANR	652811	Symbol	bbi		652714						
ANR	652812	Symbol	* core		652714						
ANR	652813	Symbol	core -> offset		652714						
ANR	652814	Symbol	palColorFor		652714						
ANR	652815	Symbol	r_anal_bb_is_in_offset		652714						
ANR	652816	Function	core_anal_graph_construct_edges	1289:0:34209:41612							
ANR	652817	FunctionDef	"core_anal_graph_construct_edges (RCore * core , RAnalFunction * fcn , int opts , PJ * pj , Sdb * DB)"		652816	0					
ANR	652818	CompoundStatement		1289:104:34313:41612	652816	0					
ANR	652819	IdentifierDeclStatement	RAnalBlock * bbi ;	1290:8:34323:34338	652816	0	True				
ANR	652820	IdentifierDecl	* bbi		652816	0					
ANR	652821	IdentifierDeclType	RAnalBlock *		652816	0					
ANR	652822	Identifier	bbi		652816	1					
ANR	652823	IdentifierDeclStatement	RListIter * iter ;	1291:8:34348:34363	652816	1	True				
ANR	652824	IdentifierDecl	* iter		652816	0					
ANR	652825	IdentifierDeclType	RListIter *		652816	0					
ANR	652826	Identifier	iter		652816	1					
ANR	652827	IdentifierDeclStatement	int is_keva = opts & R_CORE_ANAL_KEYVALUE ;	1292:8:34373:34414	652816	2	True				
ANR	652828	IdentifierDecl	is_keva = opts & R_CORE_ANAL_KEYVALUE		652816	0					
ANR	652829	IdentifierDeclType	int		652816	0					
ANR	652830	Identifier	is_keva		652816	1					
ANR	652831	AssignmentExpression	is_keva = opts & R_CORE_ANAL_KEYVALUE		652816	2		=			
ANR	652832	Identifier	is_keva		652816	0					
ANR	652833	BitAndExpression	opts & R_CORE_ANAL_KEYVALUE		652816	1		&			
ANR	652834	Identifier	opts		652816	0					
ANR	652835	Identifier	R_CORE_ANAL_KEYVALUE		652816	1					
ANR	652836	IdentifierDeclStatement	int is_star = opts & R_CORE_ANAL_STAR ;	1293:8:34424:34461	652816	3	True				
ANR	652837	IdentifierDecl	is_star = opts & R_CORE_ANAL_STAR		652816	0					
ANR	652838	IdentifierDeclType	int		652816	0					
ANR	652839	Identifier	is_star		652816	1					
ANR	652840	AssignmentExpression	is_star = opts & R_CORE_ANAL_STAR		652816	2		=			
ANR	652841	Identifier	is_star		652816	0					
ANR	652842	BitAndExpression	opts & R_CORE_ANAL_STAR		652816	1		&			
ANR	652843	Identifier	opts		652816	0					
ANR	652844	Identifier	R_CORE_ANAL_STAR		652816	1					
ANR	652845	IdentifierDeclStatement	int is_json = opts & R_CORE_ANAL_JSON ;	1294:8:34471:34508	652816	4	True				
ANR	652846	IdentifierDecl	is_json = opts & R_CORE_ANAL_JSON		652816	0					
ANR	652847	IdentifierDeclType	int		652816	0					
ANR	652848	Identifier	is_json		652816	1					
ANR	652849	AssignmentExpression	is_json = opts & R_CORE_ANAL_JSON		652816	2		=			
ANR	652850	Identifier	is_json		652816	0					
ANR	652851	BitAndExpression	opts & R_CORE_ANAL_JSON		652816	1		&			
ANR	652852	Identifier	opts		652816	0					
ANR	652853	Identifier	R_CORE_ANAL_JSON		652816	1					
ANR	652854	IdentifierDeclStatement	int is_html = r_cons_singleton ( ) -> is_html ;	1295:8:34518:34560	652816	5	True				
ANR	652855	IdentifierDecl	is_html = r_cons_singleton ( ) -> is_html		652816	0					
ANR	652856	IdentifierDeclType	int		652816	0					
ANR	652857	Identifier	is_html		652816	1					
ANR	652858	AssignmentExpression	is_html = r_cons_singleton ( ) -> is_html		652816	2		=			
ANR	652859	Identifier	is_html		652816	0					
ANR	652860	PtrMemberAccess	r_cons_singleton ( ) -> is_html		652816	1					
ANR	652861	CallExpression	r_cons_singleton ( )		652816	0					
ANR	652862	Callee	r_cons_singleton		652816	0					
ANR	652863	Identifier	r_cons_singleton		652816	0					
ANR	652864	ArgumentList			652816	1					
ANR	652865	Identifier	is_html		652816	1					
ANR	652866	IdentifierDeclStatement	"char * pal_jump = palColorFor ( ""graph.true"" ) ;"	1296:8:34570:34613	652816	6	True				
ANR	652867	IdentifierDecl	"* pal_jump = palColorFor ( ""graph.true"" )"		652816	0					
ANR	652868	IdentifierDeclType	char *		652816	0					
ANR	652869	Identifier	pal_jump		652816	1					
ANR	652870	AssignmentExpression	"* pal_jump = palColorFor ( ""graph.true"" )"		652816	2		=			
ANR	652871	Identifier	pal_jump		652816	0					
ANR	652872	CallExpression	"palColorFor ( ""graph.true"" )"		652816	1					
ANR	652873	Callee	palColorFor		652816	0					
ANR	652874	Identifier	palColorFor		652816	0					
ANR	652875	ArgumentList	"""graph.true"""		652816	1					
ANR	652876	Argument	"""graph.true"""		652816	0					
ANR	652877	PrimaryExpression	"""graph.true"""		652816	0					
ANR	652878	IdentifierDeclStatement	"char * pal_fail = palColorFor ( ""graph.false"" ) ;"	1297:8:34623:34667	652816	7	True				
ANR	652879	IdentifierDecl	"* pal_fail = palColorFor ( ""graph.false"" )"		652816	0					
ANR	652880	IdentifierDeclType	char *		652816	0					
ANR	652881	Identifier	pal_fail		652816	1					
ANR	652882	AssignmentExpression	"* pal_fail = palColorFor ( ""graph.false"" )"		652816	2		=			
ANR	652883	Identifier	pal_fail		652816	0					
ANR	652884	CallExpression	"palColorFor ( ""graph.false"" )"		652816	1					
ANR	652885	Callee	palColorFor		652816	0					
ANR	652886	Identifier	palColorFor		652816	0					
ANR	652887	ArgumentList	"""graph.false"""		652816	1					
ANR	652888	Argument	"""graph.false"""		652816	0					
ANR	652889	PrimaryExpression	"""graph.false"""		652816	0					
ANR	652890	IdentifierDeclStatement	"char * pal_trfa = palColorFor ( ""graph.trufae"" ) ;"	1298:8:34677:34722	652816	8	True				
ANR	652891	IdentifierDecl	"* pal_trfa = palColorFor ( ""graph.trufae"" )"		652816	0					
ANR	652892	IdentifierDeclType	char *		652816	0					
ANR	652893	Identifier	pal_trfa		652816	1					
ANR	652894	AssignmentExpression	"* pal_trfa = palColorFor ( ""graph.trufae"" )"		652816	2		=			
ANR	652895	Identifier	pal_trfa		652816	0					
ANR	652896	CallExpression	"palColorFor ( ""graph.trufae"" )"		652816	1					
ANR	652897	Callee	palColorFor		652816	0					
ANR	652898	Identifier	palColorFor		652816	0					
ANR	652899	ArgumentList	"""graph.trufae"""		652816	1					
ANR	652900	Argument	"""graph.trufae"""		652816	0					
ANR	652901	PrimaryExpression	"""graph.trufae"""		652816	0					
ANR	652902	IdentifierDeclStatement	int nodes = 0 ;	1299:8:34732:34745	652816	9	True				
ANR	652903	IdentifierDecl	nodes = 0		652816	0					
ANR	652904	IdentifierDeclType	int		652816	0					
ANR	652905	Identifier	nodes		652816	1					
ANR	652906	AssignmentExpression	nodes = 0		652816	2		=			
ANR	652907	Identifier	nodes		652816	0					
ANR	652908	PrimaryExpression	0		652816	1					
ANR	652909	Statement	r_list_foreach	1300:8:34755:34768	652816	10	True				
ANR	652910	Statement	(	1300:23:34770:34770	652816	11	True				
ANR	652911	Statement	fcn	1300:24:34771:34773	652816	12	True				
ANR	652912	Statement	->	1300:27:34774:34775	652816	13	True				
ANR	652913	Statement	bbs	1300:29:34776:34778	652816	14	True				
ANR	652914	Statement	","	1300:32:34779:34779	652816	15	True				
ANR	652915	Statement	iter	1300:34:34781:34784	652816	16	True				
ANR	652916	Statement	","	1300:38:34785:34785	652816	17	True				
ANR	652917	Statement	bbi	1300:40:34787:34789	652816	18	True				
ANR	652918	Statement	)	1300:43:34790:34790	652816	19	True				
ANR	652919	CompoundStatement		12:45:478:478	652816	20					
ANR	652920	IfStatement	if ( bbi -> jump != UT64_MAX )		652816	0					
ANR	652921	Condition	bbi -> jump != UT64_MAX	1301:20:34814:34834	652816	0	True				
ANR	652922	EqualityExpression	bbi -> jump != UT64_MAX		652816	0		!=			
ANR	652923	PtrMemberAccess	bbi -> jump		652816	0					
ANR	652924	Identifier	bbi		652816	0					
ANR	652925	Identifier	jump		652816	1					
ANR	652926	Identifier	UT64_MAX		652816	1					
ANR	652927	CompoundStatement		13:43:523:523	652816	1					
ANR	652928	ExpressionStatement	nodes ++	1302:24:34863:34870	652816	0	True				
ANR	652929	PostIncDecOperationExpression	nodes ++		652816	0					
ANR	652930	Identifier	nodes		652816	0					
ANR	652931	IncDec	++		652816	1					
ANR	652932	IfStatement	if ( is_keva )		652816	1					
ANR	652933	Condition	is_keva	1303:28:34900:34906	652816	0	True				
ANR	652934	Identifier	is_keva		652816	0					
ANR	652935	CompoundStatement		17:32:676:689	652816	1					
ANR	652936	IdentifierDeclStatement	char key [ 128 ] ;	1304:32:34943:34956	652816	0	True				
ANR	652937	IdentifierDecl	key [ 128 ]		652816	0					
ANR	652938	IdentifierDeclType	char [ 128 ]		652816	0					
ANR	652939	Identifier	key		652816	1					
ANR	652940	PrimaryExpression	128		652816	2					
ANR	652941	IdentifierDeclStatement	char val [ 128 ] ;	1305:32:34990:35003	652816	1	True				
ANR	652942	IdentifierDecl	val [ 128 ]		652816	0					
ANR	652943	IdentifierDeclType	char [ 128 ]		652816	0					
ANR	652944	Identifier	val		652816	1					
ANR	652945	PrimaryExpression	128		652816	2					
ANR	652946	Statement	snprintf	1306:32:35037:35044	652816	2	True				
ANR	652947	Statement	(	1306:41:35046:35046	652816	3	True				
ANR	652948	Statement	key	1306:42:35047:35049	652816	4	True				
ANR	652949	Statement	","	1306:45:35050:35050	652816	5	True				
ANR	652950	Statement	sizeof	1306:47:35052:35057	652816	6	True				
ANR	652951	Statement	(	1306:54:35059:35059	652816	7	True				
ANR	652952	Statement	key	1306:55:35060:35062	652816	8	True				
ANR	652953	Statement	)	1306:58:35063:35063	652816	9	True				
ANR	652954	Statement	","	1306:59:35064:35064	652816	10	True				
ANR	652955	Statement	"""bb.0x%08"""	1306:61:35066:35075	652816	11	True				
ANR	652956	Statement	PFMT64x	1306:71:35076:35082	652816	12	True				
ANR	652957	Statement	""".to"""	1306:78:35083:35087	652816	13	True				
ANR	652958	Statement	","	1306:83:35088:35088	652816	14	True				
ANR	652959	Statement	bbi	1306:85:35090:35092	652816	15	True				
ANR	652960	Statement	->	1306:88:35093:35094	652816	16	True				
ANR	652961	Statement	addr	1306:90:35095:35098	652816	17	True				
ANR	652962	Statement	)	1306:94:35099:35099	652816	18	True				
ANR	652963	ExpressionStatement		1306:95:35100:35100	652816	19	True				
ANR	652964	IfStatement	if ( bbi -> fail != UT64_MAX )		652816	20					
ANR	652965	Condition	bbi -> fail != UT64_MAX	1307:36:35138:35158	652816	0	True				
ANR	652966	EqualityExpression	bbi -> fail != UT64_MAX		652816	0		!=			
ANR	652967	PtrMemberAccess	bbi -> fail		652816	0					
ANR	652968	Identifier	bbi		652816	0					
ANR	652969	Identifier	fail		652816	1					
ANR	652970	Identifier	UT64_MAX		652816	1					
ANR	652971	CompoundStatement		19:59:847:847	652816	1					
ANR	652972	Statement	snprintf	1308:40:35203:35210	652816	0	True				
ANR	652973	Statement	(	1308:49:35212:35212	652816	1	True				
ANR	652974	Statement	val	1308:50:35213:35215	652816	2	True				
ANR	652975	Statement	","	1308:53:35216:35216	652816	3	True				
ANR	652976	Statement	sizeof	1308:55:35218:35223	652816	4	True				
ANR	652977	Statement	(	1308:62:35225:35225	652816	5	True				
ANR	652978	Statement	val	1308:63:35226:35228	652816	6	True				
ANR	652979	Statement	)	1308:66:35229:35229	652816	7	True				
ANR	652980	Statement	","	1308:67:35230:35230	652816	8	True				
ANR	652981	Statement	"""0x%08"""	1308:69:35232:35238	652816	9	True				
ANR	652982	Statement	PFMT64x	1308:76:35239:35245	652816	10	True				
ANR	652983	Statement	","	1308:83:35246:35246	652816	11	True				
ANR	652984	Statement	bbi	1308:85:35248:35250	652816	12	True				
ANR	652985	Statement	->	1308:88:35251:35252	652816	13	True				
ANR	652986	Statement	jump	1308:90:35253:35256	652816	14	True				
ANR	652987	Statement	)	1308:94:35257:35257	652816	15	True				
ANR	652988	ExpressionStatement		1308:95:35258:35258	652816	16	True				
ANR	652989	ElseStatement	else		652816	0					
ANR	652990	CompoundStatement		21:39:985:985	652816	0					
ANR	652991	Statement	snprintf	1310:40:35341:35348	652816	0	True				
ANR	652992	Statement	(	1310:49:35350:35350	652816	1	True				
ANR	652993	Statement	val	1310:50:35351:35353	652816	2	True				
ANR	652994	Statement	","	1310:53:35354:35354	652816	3	True				
ANR	652995	Statement	sizeof	1310:55:35356:35361	652816	4	True				
ANR	652996	Statement	(	1310:62:35363:35363	652816	5	True				
ANR	652997	Statement	val	1310:63:35364:35366	652816	6	True				
ANR	652998	Statement	)	1310:66:35367:35367	652816	7	True				
ANR	652999	Statement	","	1310:67:35368:35368	652816	8	True				
ANR	653000	Statement	"""0x%08"""	1310:69:35370:35376	652816	9	True				
ANR	653001	Statement	PFMT64x	1310:76:35377:35383	652816	10	True				
ANR	653002	Statement	""",0x%08"""	1310:84:35385:35392	652816	11	True				
ANR	653003	Statement	PFMT64x	1310:92:35393:35399	652816	12	True				
ANR	653004	Statement	","	1310:99:35400:35400	652816	13	True				
ANR	653005	Statement	bbi	1311:48:35450:35452	652816	14	True				
ANR	653006	Statement	->	1311:51:35453:35454	652816	15	True				
ANR	653007	Statement	jump	1311:53:35455:35458	652816	16	True				
ANR	653008	Statement	","	1311:57:35459:35459	652816	17	True				
ANR	653009	Statement	bbi	1311:59:35461:35463	652816	18	True				
ANR	653010	Statement	->	1311:62:35464:35465	652816	19	True				
ANR	653011	Statement	fail	1311:64:35466:35469	652816	20	True				
ANR	653012	Statement	)	1311:68:35470:35470	652816	21	True				
ANR	653013	ExpressionStatement		1311:69:35471:35471	652816	22	True				
ANR	653014	ExpressionStatement	"sdb_set ( DB , key , val , 0 )"	1314:32:35601:35626	652816	21	True				
ANR	653015	CallExpression	"sdb_set ( DB , key , val , 0 )"		652816	0					
ANR	653016	Callee	sdb_set		652816	0					
ANR	653017	Identifier	sdb_set		652816	0					
ANR	653018	ArgumentList	DB		652816	1					
ANR	653019	Argument	DB		652816	0					
ANR	653020	Identifier	DB		652816	0					
ANR	653021	Argument	key		652816	1					
ANR	653022	Identifier	key		652816	0					
ANR	653023	Argument	val		652816	2					
ANR	653024	Identifier	val		652816	0					
ANR	653025	Argument	0		652816	3					
ANR	653026	PrimaryExpression	0		652816	0					
ANR	653027	ElseStatement	else		652816	0					
ANR	653028	IfStatement	if ( is_html )		652816	0					
ANR	653029	Condition	is_html	1315:35:35663:35669	652816	0	True				
ANR	653030	Identifier	is_html		652816	0					
ANR	653031	CompoundStatement		27:44:1358:1358	652816	1					
ANR	653032	Statement	r_cons_printf	1316:32:35706:35718	652816	0	True				
ANR	653033	Statement	(	1316:46:35720:35720	652816	1	True				
ANR	653034	Statement	"""<div class=\\""connector _0x%08"""	1316:47:35721:35751	652816	2	True				
ANR	653035	Statement	PFMT64x	1316:78:35752:35758	652816	3	True				
ANR	653036	Statement	""" _0x%08"""	1316:85:35759:35767	652816	4	True				
ANR	653037	Statement	PFMT64x	1316:94:35768:35774	652816	5	True				
ANR	653038	Statement	"""\\"">\\n"""	1316:101:35775:35781	652816	6	True				
ANR	653039	Statement	"""  <img class=\\""connector-end\\"" src=\\""img/arrow.gif\\"" /></div>\\n"""	1317:40:35823:35887	652816	7	True				
ANR	653040	Statement	","	1317:105:35888:35888	652816	8	True				
ANR	653041	Statement	bbi	1318:40:35930:35932	652816	9	True				
ANR	653042	Statement	->	1318:43:35933:35934	652816	10	True				
ANR	653043	Statement	addr	1318:45:35935:35938	652816	11	True				
ANR	653044	Statement	","	1318:49:35939:35939	652816	12	True				
ANR	653045	Statement	bbi	1318:51:35941:35943	652816	13	True				
ANR	653046	Statement	->	1318:54:35944:35945	652816	14	True				
ANR	653047	Statement	jump	1318:56:35946:35949	652816	15	True				
ANR	653048	Statement	)	1318:60:35950:35950	652816	16	True				
ANR	653049	ExpressionStatement		1318:61:35951:35951	652816	17	True				
ANR	653050	ElseStatement	else		652816	0					
ANR	653051	IfStatement	if ( ! is_json && ! is_keva )		652816	0					
ANR	653052	Condition	! is_json && ! is_keva	1319:43:35996:36015	652816	0	True				
ANR	653053	AndExpression	! is_json && ! is_keva		652816	0		&&			
ANR	653054	UnaryOperationExpression	! is_json		652816	0					
ANR	653055	UnaryOperator	!		652816	0					
ANR	653056	Identifier	is_json		652816	1					
ANR	653057	UnaryOperationExpression	! is_keva		652816	1					
ANR	653058	UnaryOperator	!		652816	0					
ANR	653059	Identifier	is_keva		652816	1					
ANR	653060	CompoundStatement		31:65:1704:1704	652816	1					
ANR	653061	IfStatement	if ( is_star )		652816	0					
ANR	653062	Condition	is_star	1320:44:36064:36070	652816	0	True				
ANR	653063	Identifier	is_star		652816	0					
ANR	653064	CompoundStatement		34:48:1893:1925	652816	1					
ANR	653065	IdentifierDeclStatement	char * from = get_title ( bbi -> addr ) ;	1321:48:36123:36157	652816	0	True				
ANR	653066	IdentifierDecl	* from = get_title ( bbi -> addr )		652816	0					
ANR	653067	IdentifierDeclType	char *		652816	0					
ANR	653068	Identifier	from		652816	1					
ANR	653069	AssignmentExpression	* from = get_title ( bbi -> addr )		652816	2		=			
ANR	653070	Identifier	from		652816	0					
ANR	653071	CallExpression	get_title ( bbi -> addr )		652816	1					
ANR	653072	Callee	get_title		652816	0					
ANR	653073	Identifier	get_title		652816	0					
ANR	653074	ArgumentList	bbi -> addr		652816	1					
ANR	653075	Argument	bbi -> addr		652816	0					
ANR	653076	PtrMemberAccess	bbi -> addr		652816	0					
ANR	653077	Identifier	bbi		652816	0					
ANR	653078	Identifier	addr		652816	1					
ANR	653079	IdentifierDeclStatement	char * to = get_title ( bbi -> jump ) ;	1322:48:36207:36239	652816	1	True				
ANR	653080	IdentifierDecl	* to = get_title ( bbi -> jump )		652816	0					
ANR	653081	IdentifierDeclType	char *		652816	0					
ANR	653082	Identifier	to		652816	1					
ANR	653083	AssignmentExpression	* to = get_title ( bbi -> jump )		652816	2		=			
ANR	653084	Identifier	to		652816	0					
ANR	653085	CallExpression	get_title ( bbi -> jump )		652816	1					
ANR	653086	Callee	get_title		652816	0					
ANR	653087	Identifier	get_title		652816	0					
ANR	653088	ArgumentList	bbi -> jump		652816	1					
ANR	653089	Argument	bbi -> jump		652816	0					
ANR	653090	PtrMemberAccess	bbi -> jump		652816	0					
ANR	653091	Identifier	bbi		652816	0					
ANR	653092	Identifier	jump		652816	1					
ANR	653093	ExpressionStatement	"r_cons_printf ( ""age %s %s\\n"" , from , to )"	1323:48:36289:36328	652816	2	True				
ANR	653094	CallExpression	"r_cons_printf ( ""age %s %s\\n"" , from , to )"		652816	0					
ANR	653095	Callee	r_cons_printf		652816	0					
ANR	653096	Identifier	r_cons_printf		652816	0					
ANR	653097	ArgumentList	"""age %s %s\\n"""		652816	1					
ANR	653098	Argument	"""age %s %s\\n"""		652816	0					
ANR	653099	PrimaryExpression	"""age %s %s\\n"""		652816	0					
ANR	653100	Argument	from		652816	1					
ANR	653101	Identifier	from		652816	0					
ANR	653102	Argument	to		652816	2					
ANR	653103	Identifier	to		652816	0					
ANR	653104	ElseStatement	else		652816	0					
ANR	653105	CompoundStatement		36:47:2063:2063	652816	0					
ANR	653106	Statement	r_cons_printf	1325:48:36427:36439	652816	0	True				
ANR	653107	Statement	(	1325:62:36441:36441	652816	1	True				
ANR	653108	Statement	"""\\t\\""0x%08"""	1325:63:36442:36452	652816	2	True				
ANR	653109	Statement	PFMT64x	1325:74:36453:36459	652816	3	True				
ANR	653110	Statement	"""\\"" -> \\""0x%08"""	1325:81:36460:36474	652816	4	True				
ANR	653111	Statement	PFMT64x	1325:96:36475:36481	652816	5	True				
ANR	653112	Statement	"""\\"" """	1325:103:36482:36486	652816	6	True				
ANR	653113	Statement	"""[color=\\""%s\\""];\\n"""	1326:63:36551:36569	652816	7	True				
ANR	653114	Statement	","	1326:82:36570:36570	652816	8	True				
ANR	653115	Statement	bbi	1326:84:36572:36574	652816	9	True				
ANR	653116	Statement	->	1326:87:36575:36576	652816	10	True				
ANR	653117	Statement	addr	1326:89:36577:36580	652816	11	True				
ANR	653118	Statement	","	1326:93:36581:36581	652816	12	True				
ANR	653119	Statement	bbi	1326:95:36583:36585	652816	13	True				
ANR	653120	Statement	->	1326:98:36586:36587	652816	14	True				
ANR	653121	Statement	jump	1326:100:36588:36591	652816	15	True				
ANR	653122	Statement	","	1326:104:36592:36592	652816	16	True				
ANR	653123	Statement	bbi	1327:63:36657:36659	652816	17	True				
ANR	653124	Statement	->	1327:66:36660:36661	652816	18	True				
ANR	653125	Statement	fail	1327:68:36662:36665	652816	19	True				
ANR	653126	Statement	!=	1327:73:36667:36668	652816	20	True				
ANR	653127	Statement	-	1327:76:36670:36670	652816	21	True				
ANR	653128	Statement	1	1327:77:36671:36671	652816	22	True				
ANR	653129	Statement	?	1327:79:36673:36673	652816	23	True				
ANR	653130	Label	pal_jump :	1327:81:36675:36684	652816	24	True				
ANR	653131	Identifier	pal_jump		652816	0					
ANR	653132	Statement	pal_trfa	1327:92:36686:36693	652816	25	True				
ANR	653133	Statement	)	1327:100:36694:36694	652816	26	True				
ANR	653134	ExpressionStatement		1327:101:36695:36695	652816	27	True				
ANR	653135	ExpressionStatement	"core_anal_color_curr_node ( core , bbi )"	1328:48:36745:36782	652816	28	True				
ANR	653136	CallExpression	"core_anal_color_curr_node ( core , bbi )"		652816	0					
ANR	653137	Callee	core_anal_color_curr_node		652816	0					
ANR	653138	Identifier	core_anal_color_curr_node		652816	0					
ANR	653139	ArgumentList	core		652816	1					
ANR	653140	Argument	core		652816	0					
ANR	653141	Identifier	core		652816	0					
ANR	653142	Argument	bbi		652816	1					
ANR	653143	Identifier	bbi		652816	0					
ANR	653144	IfStatement	if ( bbi -> fail != - 1 )		652816	1					
ANR	653145	Condition	bbi -> fail != - 1	1332:20:36898:36912	652816	0	True				
ANR	653146	EqualityExpression	bbi -> fail != - 1		652816	0		!=			
ANR	653147	PtrMemberAccess	bbi -> fail		652816	0					
ANR	653148	Identifier	bbi		652816	0					
ANR	653149	Identifier	fail		652816	1					
ANR	653150	UnaryOperationExpression	- 1		652816	1					
ANR	653151	UnaryOperator	-		652816	0					
ANR	653152	PrimaryExpression	1		652816	1					
ANR	653153	CompoundStatement		44:37:2601:2601	652816	1					
ANR	653154	ExpressionStatement	nodes ++	1333:24:36941:36948	652816	0	True				
ANR	653155	PostIncDecOperationExpression	nodes ++		652816	0					
ANR	653156	Identifier	nodes		652816	0					
ANR	653157	IncDec	++		652816	1					
ANR	653158	IfStatement	if ( is_html )		652816	1					
ANR	653159	Condition	is_html	1334:28:36978:36984	652816	0	True				
ANR	653160	Identifier	is_html		652816	0					
ANR	653161	CompoundStatement		46:37:2673:2673	652816	1					
ANR	653162	Statement	r_cons_printf	1335:32:37021:37033	652816	0	True				
ANR	653163	Statement	(	1335:46:37035:37035	652816	1	True				
ANR	653164	Statement	"""<div class=\\""connector _0x%08"""	1335:47:37036:37066	652816	2	True				
ANR	653165	Statement	PFMT64x	1335:78:37067:37073	652816	3	True				
ANR	653166	Statement	""" _0x%08"""	1335:85:37074:37082	652816	4	True				
ANR	653167	Statement	PFMT64x	1335:94:37083:37089	652816	5	True				
ANR	653168	Statement	"""\\"">\\n"""	1335:101:37090:37096	652816	6	True				
ANR	653169	Statement	"""  <img class=\\""connector-end\\"" src=\\""img/arrow.gif\\""/></div>\\n"""	1336:55:37153:37216	652816	7	True				
ANR	653170	Statement	","	1336:119:37217:37217	652816	8	True				
ANR	653171	Statement	bbi	1337:55:37274:37276	652816	9	True				
ANR	653172	Statement	->	1337:58:37277:37278	652816	10	True				
ANR	653173	Statement	addr	1337:60:37279:37282	652816	11	True				
ANR	653174	Statement	","	1337:64:37283:37283	652816	12	True				
ANR	653175	Statement	bbi	1337:66:37285:37287	652816	13	True				
ANR	653176	Statement	->	1337:69:37288:37289	652816	14	True				
ANR	653177	Statement	fail	1337:71:37290:37293	652816	15	True				
ANR	653178	Statement	)	1337:75:37294:37294	652816	16	True				
ANR	653179	ExpressionStatement		1337:76:37295:37295	652816	17	True				
ANR	653180	ElseStatement	else		652816	0					
ANR	653181	IfStatement	if ( ! is_keva && ! is_json )		652816	0					
ANR	653182	Condition	! is_keva && ! is_json	1338:43:37340:37359	652816	0	True				
ANR	653183	AndExpression	! is_keva && ! is_json		652816	0		&&			
ANR	653184	UnaryOperationExpression	! is_keva		652816	0					
ANR	653185	UnaryOperator	!		652816	0					
ANR	653186	Identifier	is_keva		652816	1					
ANR	653187	UnaryOperationExpression	! is_json		652816	1					
ANR	653188	UnaryOperator	!		652816	0					
ANR	653189	Identifier	is_json		652816	1					
ANR	653190	CompoundStatement		50:65:3048:3048	652816	1					
ANR	653191	IfStatement	if ( is_star )		652816	0					
ANR	653192	Condition	is_star	1339:44:37408:37414	652816	0	True				
ANR	653193	Identifier	is_star		652816	0					
ANR	653194	CompoundStatement		53:48:3237:3269	652816	1					
ANR	653195	IdentifierDeclStatement	char * from = get_title ( bbi -> addr ) ;	1340:48:37467:37501	652816	0	True				
ANR	653196	IdentifierDecl	* from = get_title ( bbi -> addr )		652816	0					
ANR	653197	IdentifierDeclType	char *		652816	0					
ANR	653198	Identifier	from		652816	1					
ANR	653199	AssignmentExpression	* from = get_title ( bbi -> addr )		652816	2		=			
ANR	653200	Identifier	from		652816	0					
ANR	653201	CallExpression	get_title ( bbi -> addr )		652816	1					
ANR	653202	Callee	get_title		652816	0					
ANR	653203	Identifier	get_title		652816	0					
ANR	653204	ArgumentList	bbi -> addr		652816	1					
ANR	653205	Argument	bbi -> addr		652816	0					
ANR	653206	PtrMemberAccess	bbi -> addr		652816	0					
ANR	653207	Identifier	bbi		652816	0					
ANR	653208	Identifier	addr		652816	1					
ANR	653209	IdentifierDeclStatement	char * to = get_title ( bbi -> fail ) ;	1341:48:37551:37583	652816	1	True				
ANR	653210	IdentifierDecl	* to = get_title ( bbi -> fail )		652816	0					
ANR	653211	IdentifierDeclType	char *		652816	0					
ANR	653212	Identifier	to		652816	1					
ANR	653213	AssignmentExpression	* to = get_title ( bbi -> fail )		652816	2		=			
ANR	653214	Identifier	to		652816	0					
ANR	653215	CallExpression	get_title ( bbi -> fail )		652816	1					
ANR	653216	Callee	get_title		652816	0					
ANR	653217	Identifier	get_title		652816	0					
ANR	653218	ArgumentList	bbi -> fail		652816	1					
ANR	653219	Argument	bbi -> fail		652816	0					
ANR	653220	PtrMemberAccess	bbi -> fail		652816	0					
ANR	653221	Identifier	bbi		652816	0					
ANR	653222	Identifier	fail		652816	1					
ANR	653223	ExpressionStatement	"r_cons_printf ( ""age %s %s\\n"" , from , to )"	1342:48:37633:37672	652816	2	True				
ANR	653224	CallExpression	"r_cons_printf ( ""age %s %s\\n"" , from , to )"		652816	0					
ANR	653225	Callee	r_cons_printf		652816	0					
ANR	653226	Identifier	r_cons_printf		652816	0					
ANR	653227	ArgumentList	"""age %s %s\\n"""		652816	1					
ANR	653228	Argument	"""age %s %s\\n"""		652816	0					
ANR	653229	PrimaryExpression	"""age %s %s\\n"""		652816	0					
ANR	653230	Argument	from		652816	1					
ANR	653231	Identifier	from		652816	0					
ANR	653232	Argument	to		652816	2					
ANR	653233	Identifier	to		652816	0					
ANR	653234	ElseStatement	else		652816	0					
ANR	653235	CompoundStatement		55:47:3407:3407	652816	0					
ANR	653236	Statement	r_cons_printf	1344:48:37771:37783	652816	0	True				
ANR	653237	Statement	(	1344:62:37785:37785	652816	1	True				
ANR	653238	Statement	"""\\t\\""0x%08"""	1344:63:37786:37796	652816	2	True				
ANR	653239	Statement	PFMT64x	1344:74:37797:37803	652816	3	True				
ANR	653240	Statement	"""\\"" -> \\""0x%08"""	1344:81:37804:37818	652816	4	True				
ANR	653241	Statement	PFMT64x	1344:96:37819:37825	652816	5	True				
ANR	653242	Statement	"""\\"" """	1344:103:37826:37830	652816	6	True				
ANR	653243	Statement	"""[color=\\""%s\\""];\\n"""	1345:63:37895:37913	652816	7	True				
ANR	653244	Statement	","	1345:82:37914:37914	652816	8	True				
ANR	653245	Statement	bbi	1345:84:37916:37918	652816	9	True				
ANR	653246	Statement	->	1345:87:37919:37920	652816	10	True				
ANR	653247	Statement	addr	1345:89:37921:37924	652816	11	True				
ANR	653248	Statement	","	1345:93:37925:37925	652816	12	True				
ANR	653249	Statement	bbi	1345:95:37927:37929	652816	13	True				
ANR	653250	Statement	->	1345:98:37930:37931	652816	14	True				
ANR	653251	Statement	fail	1345:100:37932:37935	652816	15	True				
ANR	653252	Statement	","	1345:104:37936:37936	652816	16	True				
ANR	653253	Statement	pal_fail	1345:106:37938:37945	652816	17	True				
ANR	653254	Statement	)	1345:114:37946:37946	652816	18	True				
ANR	653255	ExpressionStatement		1345:115:37947:37947	652816	19	True				
ANR	653256	ExpressionStatement	"core_anal_color_curr_node ( core , bbi )"	1346:48:37997:38034	652816	20	True				
ANR	653257	CallExpression	"core_anal_color_curr_node ( core , bbi )"		652816	0					
ANR	653258	Callee	core_anal_color_curr_node		652816	0					
ANR	653259	Identifier	core_anal_color_curr_node		652816	0					
ANR	653260	ArgumentList	core		652816	1					
ANR	653261	Argument	core		652816	0					
ANR	653262	Identifier	core		652816	0					
ANR	653263	Argument	bbi		652816	1					
ANR	653264	Identifier	bbi		652816	0					
ANR	653265	IfStatement	if ( bbi -> switch_op )		652816	2					
ANR	653266	Condition	bbi -> switch_op	1350:20:38150:38163	652816	0	True				
ANR	653267	PtrMemberAccess	bbi -> switch_op		652816	0					
ANR	653268	Identifier	bbi		652816	0					
ANR	653269	Identifier	switch_op		652816	1					
ANR	653270	CompoundStatement		64:24:3923:3938	652816	1					
ANR	653271	IdentifierDeclStatement	RAnalCaseOp * caseop ;	1351:24:38192:38211	652816	0	True				
ANR	653272	IdentifierDecl	* caseop		652816	0					
ANR	653273	IdentifierDeclType	RAnalCaseOp *		652816	0					
ANR	653274	Identifier	caseop		652816	1					
ANR	653275	IdentifierDeclStatement	RListIter * iter ;	1352:24:38237:38252	652816	1	True				
ANR	653276	IdentifierDecl	* iter		652816	0					
ANR	653277	IdentifierDeclType	RListIter *		652816	0					
ANR	653278	Identifier	iter		652816	1					
ANR	653279	IfStatement	if ( bbi -> fail != UT64_MAX )		652816	2					
ANR	653280	Condition	bbi -> fail != UT64_MAX	1354:28:38283:38303	652816	0	True				
ANR	653281	EqualityExpression	bbi -> fail != UT64_MAX		652816	0		!=			
ANR	653282	PtrMemberAccess	bbi -> fail		652816	0					
ANR	653283	Identifier	bbi		652816	0					
ANR	653284	Identifier	fail		652816	1					
ANR	653285	Identifier	UT64_MAX		652816	1					
ANR	653286	CompoundStatement		66:51:3992:3992	652816	1					
ANR	653287	IfStatement	if ( is_html )		652816	0					
ANR	653288	Condition	is_html	1355:36:38344:38350	652816	0	True				
ANR	653289	Identifier	is_html		652816	0					
ANR	653290	CompoundStatement		67:45:4039:4039	652816	1					
ANR	653291	Statement	r_cons_printf	1356:40:38395:38407	652816	0	True				
ANR	653292	Statement	(	1356:54:38409:38409	652816	1	True				
ANR	653293	Statement	"""<div class=\\""connector _0x%08"""	1356:55:38410:38440	652816	2	True				
ANR	653294	Statement	PFMT64x	1356:86:38441:38447	652816	3	True				
ANR	653295	Statement	""" _0x%08"""	1356:93:38448:38456	652816	4	True				
ANR	653296	Statement	PFMT64x	1356:102:38457:38463	652816	5	True				
ANR	653297	Statement	"""\\"">\\n"""	1356:109:38464:38470	652816	6	True				
ANR	653298	Statement	"""  <img class=\\""connector-end\\"" src=\\""img/arrow.gif\\""/></div>\\n"""	1357:63:38535:38598	652816	7	True				
ANR	653299	Statement	","	1357:127:38599:38599	652816	8	True				
ANR	653300	Statement	bbi	1358:63:38664:38666	652816	9	True				
ANR	653301	Statement	->	1358:66:38667:38668	652816	10	True				
ANR	653302	Statement	addr	1358:68:38669:38672	652816	11	True				
ANR	653303	Statement	","	1358:72:38673:38673	652816	12	True				
ANR	653304	Statement	bbi	1358:74:38675:38677	652816	13	True				
ANR	653305	Statement	->	1358:77:38678:38679	652816	14	True				
ANR	653306	Statement	fail	1358:79:38680:38683	652816	15	True				
ANR	653307	Statement	)	1358:83:38684:38684	652816	16	True				
ANR	653308	ExpressionStatement		1358:84:38685:38685	652816	17	True				
ANR	653309	ElseStatement	else		652816	0					
ANR	653310	IfStatement	if ( ! is_keva && ! is_json )		652816	0					
ANR	653311	Condition	! is_keva && ! is_json	1359:43:38730:38749	652816	0	True				
ANR	653312	AndExpression	! is_keva && ! is_json		652816	0		&&			
ANR	653313	UnaryOperationExpression	! is_keva		652816	0					
ANR	653314	UnaryOperator	!		652816	0					
ANR	653315	Identifier	is_keva		652816	1					
ANR	653316	UnaryOperationExpression	! is_json		652816	1					
ANR	653317	UnaryOperator	!		652816	0					
ANR	653318	Identifier	is_json		652816	1					
ANR	653319	CompoundStatement		71:65:4438:4438	652816	1					
ANR	653320	IfStatement	if ( is_star )		652816	0					
ANR	653321	Condition	is_star	1360:44:38798:38804	652816	0	True				
ANR	653322	Identifier	is_star		652816	0					
ANR	653323	CompoundStatement		74:48:4627:4659	652816	1					
ANR	653324	IdentifierDeclStatement	char * from = get_title ( bbi -> addr ) ;	1361:48:38857:38891	652816	0	True				
ANR	653325	IdentifierDecl	* from = get_title ( bbi -> addr )		652816	0					
ANR	653326	IdentifierDeclType	char *		652816	0					
ANR	653327	Identifier	from		652816	1					
ANR	653328	AssignmentExpression	* from = get_title ( bbi -> addr )		652816	2		=			
ANR	653329	Identifier	from		652816	0					
ANR	653330	CallExpression	get_title ( bbi -> addr )		652816	1					
ANR	653331	Callee	get_title		652816	0					
ANR	653332	Identifier	get_title		652816	0					
ANR	653333	ArgumentList	bbi -> addr		652816	1					
ANR	653334	Argument	bbi -> addr		652816	0					
ANR	653335	PtrMemberAccess	bbi -> addr		652816	0					
ANR	653336	Identifier	bbi		652816	0					
ANR	653337	Identifier	addr		652816	1					
ANR	653338	IdentifierDeclStatement	char * to = get_title ( bbi -> fail ) ;	1362:48:38941:38973	652816	1	True				
ANR	653339	IdentifierDecl	* to = get_title ( bbi -> fail )		652816	0					
ANR	653340	IdentifierDeclType	char *		652816	0					
ANR	653341	Identifier	to		652816	1					
ANR	653342	AssignmentExpression	* to = get_title ( bbi -> fail )		652816	2		=			
ANR	653343	Identifier	to		652816	0					
ANR	653344	CallExpression	get_title ( bbi -> fail )		652816	1					
ANR	653345	Callee	get_title		652816	0					
ANR	653346	Identifier	get_title		652816	0					
ANR	653347	ArgumentList	bbi -> fail		652816	1					
ANR	653348	Argument	bbi -> fail		652816	0					
ANR	653349	PtrMemberAccess	bbi -> fail		652816	0					
ANR	653350	Identifier	bbi		652816	0					
ANR	653351	Identifier	fail		652816	1					
ANR	653352	ExpressionStatement	"r_cons_printf ( ""%age %s %s\\n"" , from , to )"	1363:48:39023:39063	652816	2	True				
ANR	653353	CallExpression	"r_cons_printf ( ""%age %s %s\\n"" , from , to )"		652816	0					
ANR	653354	Callee	r_cons_printf		652816	0					
ANR	653355	Identifier	r_cons_printf		652816	0					
ANR	653356	ArgumentList	"""%age %s %s\\n"""		652816	1					
ANR	653357	Argument	"""%age %s %s\\n"""		652816	0					
ANR	653358	PrimaryExpression	"""%age %s %s\\n"""		652816	0					
ANR	653359	Argument	from		652816	1					
ANR	653360	Identifier	from		652816	0					
ANR	653361	Argument	to		652816	2					
ANR	653362	Identifier	to		652816	0					
ANR	653363	ElseStatement	else		652816	0					
ANR	653364	CompoundStatement		76:47:4798:4798	652816	0					
ANR	653365	Statement	r_cons_printf	1365:48:39162:39174	652816	0	True				
ANR	653366	Statement	(	1365:62:39176:39176	652816	1	True				
ANR	653367	Statement	"""\\t\\""0x%08"""	1365:63:39177:39187	652816	2	True				
ANR	653368	Statement	PFMT64x	1365:74:39188:39194	652816	3	True				
ANR	653369	Statement	"""\\"" -> \\""0x%08"""	1365:81:39195:39209	652816	4	True				
ANR	653370	Statement	PFMT64x	1365:96:39210:39216	652816	5	True				
ANR	653371	Statement	"""\\"" """	1365:103:39217:39221	652816	6	True				
ANR	653372	Statement	"""[color=\\""%s\\""];\\n"""	1366:71:39294:39312	652816	7	True				
ANR	653373	Statement	","	1366:90:39313:39313	652816	8	True				
ANR	653374	Statement	bbi	1366:92:39315:39317	652816	9	True				
ANR	653375	Statement	->	1366:95:39318:39319	652816	10	True				
ANR	653376	Statement	addr	1366:97:39320:39323	652816	11	True				
ANR	653377	Statement	","	1366:101:39324:39324	652816	12	True				
ANR	653378	Statement	bbi	1366:103:39326:39328	652816	13	True				
ANR	653379	Statement	->	1366:106:39329:39330	652816	14	True				
ANR	653380	Statement	fail	1366:108:39331:39334	652816	15	True				
ANR	653381	Statement	","	1366:112:39335:39335	652816	16	True				
ANR	653382	Statement	pal_fail	1366:114:39337:39344	652816	17	True				
ANR	653383	Statement	)	1366:122:39345:39345	652816	18	True				
ANR	653384	ExpressionStatement		1366:123:39346:39346	652816	19	True				
ANR	653385	ExpressionStatement	"core_anal_color_curr_node ( core , bbi )"	1367:48:39396:39433	652816	20	True				
ANR	653386	CallExpression	"core_anal_color_curr_node ( core , bbi )"		652816	0					
ANR	653387	Callee	core_anal_color_curr_node		652816	0					
ANR	653388	Identifier	core_anal_color_curr_node		652816	0					
ANR	653389	ArgumentList	core		652816	1					
ANR	653390	Argument	core		652816	0					
ANR	653391	Identifier	core		652816	0					
ANR	653392	Argument	bbi		652816	1					
ANR	653393	Identifier	bbi		652816	0					
ANR	653394	Statement	r_list_foreach	1371:24:39561:39574	652816	3	True				
ANR	653395	Statement	(	1371:39:39576:39576	652816	4	True				
ANR	653396	Statement	bbi	1371:40:39577:39579	652816	5	True				
ANR	653397	Statement	->	1371:43:39580:39581	652816	6	True				
ANR	653398	Statement	switch_op	1371:45:39582:39590	652816	7	True				
ANR	653399	Statement	->	1371:54:39591:39592	652816	8	True				
ANR	653400	Statement	cases	1371:56:39593:39597	652816	9	True				
ANR	653401	Statement	","	1371:61:39598:39598	652816	10	True				
ANR	653402	Statement	iter	1371:63:39600:39603	652816	11	True				
ANR	653403	Statement	","	1371:67:39604:39604	652816	12	True				
ANR	653404	Statement	caseop	1371:69:39606:39611	652816	13	True				
ANR	653405	Statement	)	1371:75:39612:39612	652816	14	True				
ANR	653406	CompoundStatement		83:77:5300:5300	652816	15					
ANR	653407	ExpressionStatement	nodes ++	1372:32:39648:39655	652816	0	True				
ANR	653408	PostIncDecOperationExpression	nodes ++		652816	0					
ANR	653409	Identifier	nodes		652816	0					
ANR	653410	IncDec	++		652816	1					
ANR	653411	IfStatement	if ( is_keva )		652816	1					
ANR	653412	Condition	is_keva	1373:36:39693:39699	652816	0	True				
ANR	653413	Identifier	is_keva		652816	0					
ANR	653414	CompoundStatement		86:40:5430:5443	652816	1					
ANR	653415	IdentifierDeclStatement	char key [ 128 ] ;	1374:40:39744:39757	652816	0	True				
ANR	653416	IdentifierDecl	key [ 128 ]		652816	0					
ANR	653417	IdentifierDeclType	char [ 128 ]		652816	0					
ANR	653418	Identifier	key		652816	1					
ANR	653419	PrimaryExpression	128		652816	2					
ANR	653420	Statement	snprintf	1375:40:39799:39806	652816	1	True				
ANR	653421	Statement	(	1375:49:39808:39808	652816	2	True				
ANR	653422	Statement	key	1375:50:39809:39811	652816	3	True				
ANR	653423	Statement	","	1375:53:39812:39812	652816	4	True				
ANR	653424	Statement	sizeof	1375:55:39814:39819	652816	5	True				
ANR	653425	Statement	(	1375:62:39821:39821	652816	6	True				
ANR	653426	Statement	key	1375:63:39822:39824	652816	7	True				
ANR	653427	Statement	)	1375:66:39825:39825	652816	8	True				
ANR	653428	Statement	","	1375:67:39826:39826	652816	9	True				
ANR	653429	Statement	"""bb.0x%08"""	1376:56:39884:39893	652816	10	True				
ANR	653430	Statement	PFMT64x	1376:66:39894:39900	652816	11	True				
ANR	653431	Statement	""".switch.%"""	1376:73:39901:39911	652816	12	True				
ANR	653432	Statement	PFMT64d	1376:84:39912:39918	652816	13	True				
ANR	653433	Statement	","	1376:91:39919:39919	652816	14	True				
ANR	653434	Statement	bbi	1377:56:39977:39979	652816	15	True				
ANR	653435	Statement	->	1377:59:39980:39981	652816	16	True				
ANR	653436	Statement	addr	1377:61:39982:39985	652816	17	True				
ANR	653437	Statement	","	1377:65:39986:39986	652816	18	True				
ANR	653438	Statement	caseop	1377:67:39988:39993	652816	19	True				
ANR	653439	Statement	->	1377:73:39994:39995	652816	20	True				
ANR	653440	Statement	value	1377:75:39996:40000	652816	21	True				
ANR	653441	Statement	)	1377:80:40001:40001	652816	22	True				
ANR	653442	ExpressionStatement		1377:81:40002:40002	652816	23	True				
ANR	653443	ExpressionStatement	"sdb_num_set ( DB , key , caseop -> jump , 0 )"	1378:40:40044:40082	652816	24	True				
ANR	653444	CallExpression	"sdb_num_set ( DB , key , caseop -> jump , 0 )"		652816	0					
ANR	653445	Callee	sdb_num_set		652816	0					
ANR	653446	Identifier	sdb_num_set		652816	0					
ANR	653447	ArgumentList	DB		652816	1					
ANR	653448	Argument	DB		652816	0					
ANR	653449	Identifier	DB		652816	0					
ANR	653450	Argument	key		652816	1					
ANR	653451	Identifier	key		652816	0					
ANR	653452	Argument	caseop -> jump		652816	2					
ANR	653453	PtrMemberAccess	caseop -> jump		652816	0					
ANR	653454	Identifier	caseop		652816	0					
ANR	653455	Identifier	jump		652816	1					
ANR	653456	Argument	0		652816	3					
ANR	653457	PrimaryExpression	0		652816	0					
ANR	653458	Statement	snprintf	1379:40:40124:40131	652816	25	True				
ANR	653459	Statement	(	1379:49:40133:40133	652816	26	True				
ANR	653460	Statement	key	1379:50:40134:40136	652816	27	True				
ANR	653461	Statement	","	1379:53:40137:40137	652816	28	True				
ANR	653462	Statement	sizeof	1379:55:40139:40144	652816	29	True				
ANR	653463	Statement	(	1379:62:40146:40146	652816	30	True				
ANR	653464	Statement	key	1379:63:40147:40149	652816	31	True				
ANR	653465	Statement	)	1379:66:40150:40150	652816	32	True				
ANR	653466	Statement	","	1379:67:40151:40151	652816	33	True				
ANR	653467	Statement	"""bb.0x%08"""	1380:56:40209:40218	652816	34	True				
ANR	653468	Statement	PFMT64x	1380:66:40219:40225	652816	35	True				
ANR	653469	Statement	""".switch"""	1380:73:40226:40234	652816	36	True				
ANR	653470	Statement	","	1380:82:40235:40235	652816	37	True				
ANR	653471	Statement	bbi	1380:84:40237:40239	652816	38	True				
ANR	653472	Statement	->	1380:87:40240:40241	652816	39	True				
ANR	653473	Statement	addr	1380:89:40242:40245	652816	40	True				
ANR	653474	Statement	)	1380:93:40246:40246	652816	41	True				
ANR	653475	ExpressionStatement		1380:94:40247:40247	652816	42	True				
ANR	653476	ExpressionStatement	"sdb_array_add_num ( DB , key , caseop -> value , 0 )"	1381:48:40297:40342	652816	43	True				
ANR	653477	CallExpression	"sdb_array_add_num ( DB , key , caseop -> value , 0 )"		652816	0					
ANR	653478	Callee	sdb_array_add_num		652816	0					
ANR	653479	Identifier	sdb_array_add_num		652816	0					
ANR	653480	ArgumentList	DB		652816	1					
ANR	653481	Argument	DB		652816	0					
ANR	653482	Identifier	DB		652816	0					
ANR	653483	Argument	key		652816	1					
ANR	653484	Identifier	key		652816	0					
ANR	653485	Argument	caseop -> value		652816	2					
ANR	653486	PtrMemberAccess	caseop -> value		652816	0					
ANR	653487	Identifier	caseop		652816	0					
ANR	653488	Identifier	value		652816	1					
ANR	653489	Argument	0		652816	3					
ANR	653490	PrimaryExpression	0		652816	0					
ANR	653491	ElseStatement	else		652816	0					
ANR	653492	IfStatement	if ( is_html )		652816	0					
ANR	653493	Condition	is_html	1382:43:40387:40393	652816	0	True				
ANR	653494	Identifier	is_html		652816	0					
ANR	653495	CompoundStatement		94:52:6082:6082	652816	1					
ANR	653496	Statement	r_cons_printf	1383:40:40438:40450	652816	0	True				
ANR	653497	Statement	(	1383:54:40452:40452	652816	1	True				
ANR	653498	Statement	"""<div class=\\""connector _0x%08"""	1383:55:40453:40483	652816	2	True				
ANR	653499	Statement	PFMT64x	1383:86:40484:40490	652816	3	True				
ANR	653500	Statement	""" _0x%08"""	1383:93:40491:40499	652816	4	True				
ANR	653501	Statement	PFMT64x	1383:102:40500:40506	652816	5	True				
ANR	653502	Statement	"""\\"">\\n"""	1383:109:40507:40513	652816	6	True				
ANR	653503	Statement	"""  <img class=\\""connector-end\\"" src=\\""img/arrow.gif\\""/></div>\\n"""	1384:56:40571:40634	652816	7	True				
ANR	653504	Statement	","	1384:120:40635:40635	652816	8	True				
ANR	653505	Statement	caseop	1385:56:40693:40698	652816	9	True				
ANR	653506	Statement	->	1385:62:40699:40700	652816	10	True				
ANR	653507	Statement	addr	1385:64:40701:40704	652816	11	True				
ANR	653508	Statement	","	1385:68:40705:40705	652816	12	True				
ANR	653509	Statement	caseop	1385:70:40707:40712	652816	13	True				
ANR	653510	Statement	->	1385:76:40713:40714	652816	14	True				
ANR	653511	Statement	jump	1385:78:40715:40718	652816	15	True				
ANR	653512	Statement	)	1385:82:40719:40719	652816	16	True				
ANR	653513	ExpressionStatement		1385:83:40720:40720	652816	17	True				
ANR	653514	ElseStatement	else		652816	0					
ANR	653515	IfStatement	if ( ! is_json && ! is_keva )		652816	0					
ANR	653516	Condition	! is_json && ! is_keva	1386:43:40765:40784	652816	0	True				
ANR	653517	AndExpression	! is_json && ! is_keva		652816	0		&&			
ANR	653518	UnaryOperationExpression	! is_json		652816	0					
ANR	653519	UnaryOperator	!		652816	0					
ANR	653520	Identifier	is_json		652816	1					
ANR	653521	UnaryOperationExpression	! is_keva		652816	1					
ANR	653522	UnaryOperator	!		652816	0					
ANR	653523	Identifier	is_keva		652816	1					
ANR	653524	CompoundStatement		98:64:6472:6472	652816	1					
ANR	653525	IfStatement	if ( is_star )		652816	0					
ANR	653526	Condition	is_star	1387:44:40832:40838	652816	0	True				
ANR	653527	Identifier	is_star		652816	0					
ANR	653528	CompoundStatement		101:48:6664:6699	652816	1					
ANR	653529	IdentifierDeclStatement	char * from = get_title ( caseop -> addr ) ;	1388:48:40891:40928	652816	0	True				
ANR	653530	IdentifierDecl	* from = get_title ( caseop -> addr )		652816	0					
ANR	653531	IdentifierDeclType	char *		652816	0					
ANR	653532	Identifier	from		652816	1					
ANR	653533	AssignmentExpression	* from = get_title ( caseop -> addr )		652816	2		=			
ANR	653534	Identifier	from		652816	0					
ANR	653535	CallExpression	get_title ( caseop -> addr )		652816	1					
ANR	653536	Callee	get_title		652816	0					
ANR	653537	Identifier	get_title		652816	0					
ANR	653538	ArgumentList	caseop -> addr		652816	1					
ANR	653539	Argument	caseop -> addr		652816	0					
ANR	653540	PtrMemberAccess	caseop -> addr		652816	0					
ANR	653541	Identifier	caseop		652816	0					
ANR	653542	Identifier	addr		652816	1					
ANR	653543	IdentifierDeclStatement	char * to = get_title ( caseop -> jump ) ;	1389:48:40978:41013	652816	1	True				
ANR	653544	IdentifierDecl	* to = get_title ( caseop -> jump )		652816	0					
ANR	653545	IdentifierDeclType	char *		652816	0					
ANR	653546	Identifier	to		652816	1					
ANR	653547	AssignmentExpression	* to = get_title ( caseop -> jump )		652816	2		=			
ANR	653548	Identifier	to		652816	0					
ANR	653549	CallExpression	get_title ( caseop -> jump )		652816	1					
ANR	653550	Callee	get_title		652816	0					
ANR	653551	Identifier	get_title		652816	0					
ANR	653552	ArgumentList	caseop -> jump		652816	1					
ANR	653553	Argument	caseop -> jump		652816	0					
ANR	653554	PtrMemberAccess	caseop -> jump		652816	0					
ANR	653555	Identifier	caseop		652816	0					
ANR	653556	Identifier	jump		652816	1					
ANR	653557	ExpressionStatement	"r_cons_printf ( ""age %s %s\\n"" , from , to )"	1390:48:41063:41102	652816	2	True				
ANR	653558	CallExpression	"r_cons_printf ( ""age %s %s\\n"" , from , to )"		652816	0					
ANR	653559	Callee	r_cons_printf		652816	0					
ANR	653560	Identifier	r_cons_printf		652816	0					
ANR	653561	ArgumentList	"""age %s %s\\n"""		652816	1					
ANR	653562	Argument	"""age %s %s\\n"""		652816	0					
ANR	653563	PrimaryExpression	"""age %s %s\\n"""		652816	0					
ANR	653564	Argument	from		652816	1					
ANR	653565	Identifier	from		652816	0					
ANR	653566	Argument	to		652816	2					
ANR	653567	Identifier	to		652816	0					
ANR	653568	ElseStatement	else		652816	0					
ANR	653569	CompoundStatement		103:47:6837:6837	652816	0					
ANR	653570	Statement	r_cons_printf	1392:48:41201:41213	652816	0	True				
ANR	653571	Statement	(	1392:62:41215:41215	652816	1	True				
ANR	653572	Statement	"""\\t\\""0x%08"""	1392:63:41216:41226	652816	2	True				
ANR	653573	Statement	PFMT64x	1392:74:41227:41233	652816	3	True				
ANR	653574	Statement	"""\\"" -> \\""0x%08"""	1392:81:41234:41248	652816	4	True				
ANR	653575	Statement	PFMT64x	1392:96:41249:41255	652816	5	True				
ANR	653576	Statement	"""\\"" """	1392:103:41256:41260	652816	6	True				
ANR	653577	Statement	"""[color2=\\""%s\\""];\\n"""	1393:48:41312:41331	652816	7	True				
ANR	653578	Statement	","	1393:68:41332:41332	652816	8	True				
ANR	653579	Statement	caseop	1393:70:41334:41339	652816	9	True				
ANR	653580	Statement	->	1393:76:41340:41341	652816	10	True				
ANR	653581	Statement	addr	1393:78:41342:41345	652816	11	True				
ANR	653582	Statement	","	1393:82:41346:41346	652816	12	True				
ANR	653583	Statement	caseop	1393:84:41348:41353	652816	13	True				
ANR	653584	Statement	->	1393:90:41354:41355	652816	14	True				
ANR	653585	Statement	jump	1393:92:41356:41359	652816	15	True				
ANR	653586	Statement	","	1393:96:41360:41360	652816	16	True				
ANR	653587	Statement	pal_fail	1393:98:41362:41369	652816	17	True				
ANR	653588	Statement	)	1393:106:41370:41370	652816	18	True				
ANR	653589	ExpressionStatement		1393:107:41371:41371	652816	19	True				
ANR	653590	ExpressionStatement	"core_anal_color_curr_node ( core , bbi )"	1394:48:41421:41458	652816	20	True				
ANR	653591	CallExpression	"core_anal_color_curr_node ( core , bbi )"		652816	0					
ANR	653592	Callee	core_anal_color_curr_node		652816	0					
ANR	653593	Identifier	core_anal_color_curr_node		652816	0					
ANR	653594	ArgumentList	core		652816	1					
ANR	653595	Argument	core		652816	0					
ANR	653596	Identifier	core		652816	0					
ANR	653597	Argument	bbi		652816	1					
ANR	653598	Identifier	bbi		652816	0					
ANR	653599	ReturnStatement	return nodes ;	1400:8:41598:41610	652816	21	True				
ANR	653600	Identifier	nodes		652816	0					
ANR	653601	ReturnType	static int		652816	1					
ANR	653602	Identifier	core_anal_graph_construct_edges		652816	2					
ANR	653603	ParameterList	"RCore * core , RAnalFunction * fcn , int opts , PJ * pj , Sdb * DB"		652816	3					
ANR	653604	Parameter	RCore * core	1289:44:34253:34263	652816	0	True				
ANR	653605	ParameterType	RCore *		652816	0					
ANR	653606	Identifier	core		652816	1					
ANR	653607	Parameter	RAnalFunction * fcn	1289:57:34266:34283	652816	1	True				
ANR	653608	ParameterType	RAnalFunction *		652816	0					
ANR	653609	Identifier	fcn		652816	1					
ANR	653610	Parameter	int opts	1289:77:34286:34293	652816	2	True				
ANR	653611	ParameterType	int		652816	0					
ANR	653612	Identifier	opts		652816	1					
ANR	653613	Parameter	PJ * pj	1289:87:34296:34301	652816	3	True				
ANR	653614	ParameterType	PJ *		652816	0					
ANR	653615	Identifier	pj		652816	1					
ANR	653616	Parameter	Sdb * DB	1289:95:34304:34310	652816	4	True				
ANR	653617	ParameterType	Sdb *		652816	0					
ANR	653618	Identifier	DB		652816	1					
ANR	653619	CFGEntryNode	ENTRY		652816		True				
ANR	653620	CFGExitNode	EXIT		652816		True				
ANR	653621	Symbol	is_json		652816						
ANR	653622	Symbol	get_title		652816						
ANR	653623	Symbol	fcn		652816						
ANR	653624	Symbol	bbi -> switch_op		652816						
ANR	653625	Symbol	opts		652816						
ANR	653626	Symbol	R_CORE_ANAL_KEYVALUE		652816						
ANR	653627	Symbol	r_cons_singleton		652816						
ANR	653628	Symbol	from		652816						
ANR	653629	Symbol	is_star		652816						
ANR	653630	Symbol	UT64_MAX		652816						
ANR	653631	Symbol	bbi -> jump		652816						
ANR	653632	Symbol	key		652816						
ANR	653633	Symbol	bbi -> addr		652816						
ANR	653634	Symbol	val		652816						
ANR	653635	Symbol	pal_trfa		652816						
ANR	653636	Symbol	is_keva		652816						
ANR	653637	Symbol	caseop -> addr		652816						
ANR	653638	Symbol	bbi		652816						
ANR	653639	Symbol	iter		652816						
ANR	653640	Symbol	R_CORE_ANAL_STAR		652816						
ANR	653641	Symbol	pal_jump		652816						
ANR	653642	Symbol	* bbi		652816						
ANR	653643	Symbol	caseop		652816						
ANR	653644	Symbol	r_cons_singleton ( ) -> is_html		652816						
ANR	653645	Symbol	bbi -> fail		652816						
ANR	653646	Symbol	core		652816						
ANR	653647	Symbol	* caseop		652816						
ANR	653648	Symbol	nodes		652816						
ANR	653649	Symbol	pal_fail		652816						
ANR	653650	Symbol	caseop -> jump		652816						
ANR	653651	Symbol	R_CORE_ANAL_JSON		652816						
ANR	653652	Symbol	is_html		652816						
ANR	653653	Symbol	pj		652816						
ANR	653654	Symbol	to		652816						
ANR	653655	Symbol	caseop -> value		652816						
ANR	653656	Symbol	DB		652816						
ANR	653657	Symbol	* r_cons_singleton		652816						
ANR	653658	Symbol	palColorFor		652816						
ANR	653659	Function	core_anal_graph_construct_nodes	1403:0:41615:56324							
ANR	653660	FunctionDef	"core_anal_graph_construct_nodes (RCore * core , RAnalFunction * fcn , int opts , PJ * pj , Sdb * DB)"		653659	0					
ANR	653661	CompoundStatement		1403:104:41719:56324	653659	0					
ANR	653662	IdentifierDeclStatement	RAnalBlock * bbi ;	1404:8:41729:41744	653659	0	True				
ANR	653663	IdentifierDecl	* bbi		653659	0					
ANR	653664	IdentifierDeclType	RAnalBlock *		653659	0					
ANR	653665	Identifier	bbi		653659	1					
ANR	653666	IdentifierDeclStatement	RListIter * iter ;	1405:8:41754:41769	653659	1	True				
ANR	653667	IdentifierDecl	* iter		653659	0					
ANR	653668	IdentifierDeclType	RListIter *		653659	0					
ANR	653669	Identifier	iter		653659	1					
ANR	653670	IdentifierDeclStatement	int is_keva = opts & R_CORE_ANAL_KEYVALUE ;	1406:8:41779:41820	653659	2	True				
ANR	653671	IdentifierDecl	is_keva = opts & R_CORE_ANAL_KEYVALUE		653659	0					
ANR	653672	IdentifierDeclType	int		653659	0					
ANR	653673	Identifier	is_keva		653659	1					
ANR	653674	AssignmentExpression	is_keva = opts & R_CORE_ANAL_KEYVALUE		653659	2		=			
ANR	653675	Identifier	is_keva		653659	0					
ANR	653676	BitAndExpression	opts & R_CORE_ANAL_KEYVALUE		653659	1		&			
ANR	653677	Identifier	opts		653659	0					
ANR	653678	Identifier	R_CORE_ANAL_KEYVALUE		653659	1					
ANR	653679	IdentifierDeclStatement	int is_star = opts & R_CORE_ANAL_STAR ;	1407:8:41830:41867	653659	3	True				
ANR	653680	IdentifierDecl	is_star = opts & R_CORE_ANAL_STAR		653659	0					
ANR	653681	IdentifierDeclType	int		653659	0					
ANR	653682	Identifier	is_star		653659	1					
ANR	653683	AssignmentExpression	is_star = opts & R_CORE_ANAL_STAR		653659	2		=			
ANR	653684	Identifier	is_star		653659	0					
ANR	653685	BitAndExpression	opts & R_CORE_ANAL_STAR		653659	1		&			
ANR	653686	Identifier	opts		653659	0					
ANR	653687	Identifier	R_CORE_ANAL_STAR		653659	1					
ANR	653688	IdentifierDeclStatement	int is_json = opts & R_CORE_ANAL_JSON ;	1408:8:41877:41914	653659	4	True				
ANR	653689	IdentifierDecl	is_json = opts & R_CORE_ANAL_JSON		653659	0					
ANR	653690	IdentifierDeclType	int		653659	0					
ANR	653691	Identifier	is_json		653659	1					
ANR	653692	AssignmentExpression	is_json = opts & R_CORE_ANAL_JSON		653659	2		=			
ANR	653693	Identifier	is_json		653659	0					
ANR	653694	BitAndExpression	opts & R_CORE_ANAL_JSON		653659	1		&			
ANR	653695	Identifier	opts		653659	0					
ANR	653696	Identifier	R_CORE_ANAL_JSON		653659	1					
ANR	653697	IdentifierDeclStatement	int is_html = r_cons_singleton ( ) -> is_html ;	1409:8:41924:41966	653659	5	True				
ANR	653698	IdentifierDecl	is_html = r_cons_singleton ( ) -> is_html		653659	0					
ANR	653699	IdentifierDeclType	int		653659	0					
ANR	653700	Identifier	is_html		653659	1					
ANR	653701	AssignmentExpression	is_html = r_cons_singleton ( ) -> is_html		653659	2		=			
ANR	653702	Identifier	is_html		653659	0					
ANR	653703	PtrMemberAccess	r_cons_singleton ( ) -> is_html		653659	1					
ANR	653704	CallExpression	r_cons_singleton ( )		653659	0					
ANR	653705	Callee	r_cons_singleton		653659	0					
ANR	653706	Identifier	r_cons_singleton		653659	0					
ANR	653707	ArgumentList			653659	1					
ANR	653708	Identifier	is_html		653659	1					
ANR	653709	IdentifierDeclStatement	int left = 300 ;	1410:8:41976:41990	653659	6	True				
ANR	653710	IdentifierDecl	left = 300		653659	0					
ANR	653711	IdentifierDeclType	int		653659	0					
ANR	653712	Identifier	left		653659	1					
ANR	653713	AssignmentExpression	left = 300		653659	2		=			
ANR	653714	Identifier	left		653659	0					
ANR	653715	PrimaryExpression	300		653659	1					
ANR	653716	IdentifierDeclStatement	int top = 0 ;	1411:8:42000:42011	653659	7	True				
ANR	653717	IdentifierDecl	top = 0		653659	0					
ANR	653718	IdentifierDeclType	int		653659	0					
ANR	653719	Identifier	top		653659	1					
ANR	653720	AssignmentExpression	top = 0		653659	2		=			
ANR	653721	Identifier	top		653659	0					
ANR	653722	PrimaryExpression	0		653659	1					
ANR	653723	IdentifierDeclStatement	int is_json_format_disasm = opts & R_CORE_ANAL_JSON_FORMAT_DISASM ;	1413:8:42022:42087	653659	8	True				
ANR	653724	IdentifierDecl	is_json_format_disasm = opts & R_CORE_ANAL_JSON_FORMAT_DISASM		653659	0					
ANR	653725	IdentifierDeclType	int		653659	0					
ANR	653726	Identifier	is_json_format_disasm		653659	1					
ANR	653727	AssignmentExpression	is_json_format_disasm = opts & R_CORE_ANAL_JSON_FORMAT_DISASM		653659	2		=			
ANR	653728	Identifier	is_json_format_disasm		653659	0					
ANR	653729	BitAndExpression	opts & R_CORE_ANAL_JSON_FORMAT_DISASM		653659	1		&			
ANR	653730	Identifier	opts		653659	0					
ANR	653731	Identifier	R_CORE_ANAL_JSON_FORMAT_DISASM		653659	1					
ANR	653732	IdentifierDeclStatement	"char * pal_curr = palColorFor ( ""graph.current"" ) ;"	1414:8:42097:42143	653659	9	True				
ANR	653733	IdentifierDecl	"* pal_curr = palColorFor ( ""graph.current"" )"		653659	0					
ANR	653734	IdentifierDeclType	char *		653659	0					
ANR	653735	Identifier	pal_curr		653659	1					
ANR	653736	AssignmentExpression	"* pal_curr = palColorFor ( ""graph.current"" )"		653659	2		=			
ANR	653737	Identifier	pal_curr		653659	0					
ANR	653738	CallExpression	"palColorFor ( ""graph.current"" )"		653659	1					
ANR	653739	Callee	palColorFor		653659	0					
ANR	653740	Identifier	palColorFor		653659	0					
ANR	653741	ArgumentList	"""graph.current"""		653659	1					
ANR	653742	Argument	"""graph.current"""		653659	0					
ANR	653743	PrimaryExpression	"""graph.current"""		653659	0					
ANR	653744	IdentifierDeclStatement	"char * pal_traced = palColorFor ( ""graph.traced"" ) ;"	1415:8:42153:42200	653659	10	True				
ANR	653745	IdentifierDecl	"* pal_traced = palColorFor ( ""graph.traced"" )"		653659	0					
ANR	653746	IdentifierDeclType	char *		653659	0					
ANR	653747	Identifier	pal_traced		653659	1					
ANR	653748	AssignmentExpression	"* pal_traced = palColorFor ( ""graph.traced"" )"		653659	2		=			
ANR	653749	Identifier	pal_traced		653659	0					
ANR	653750	CallExpression	"palColorFor ( ""graph.traced"" )"		653659	1					
ANR	653751	Callee	palColorFor		653659	0					
ANR	653752	Identifier	palColorFor		653659	0					
ANR	653753	ArgumentList	"""graph.traced"""		653659	1					
ANR	653754	Argument	"""graph.traced"""		653659	0					
ANR	653755	PrimaryExpression	"""graph.traced"""		653659	0					
ANR	653756	IdentifierDeclStatement	"char * pal_box4 = palColorFor ( ""graph.box4"" ) ;"	1416:8:42210:42253	653659	11	True				
ANR	653757	IdentifierDecl	"* pal_box4 = palColorFor ( ""graph.box4"" )"		653659	0					
ANR	653758	IdentifierDeclType	char *		653659	0					
ANR	653759	Identifier	pal_box4		653659	1					
ANR	653760	AssignmentExpression	"* pal_box4 = palColorFor ( ""graph.box4"" )"		653659	2		=			
ANR	653761	Identifier	pal_box4		653659	0					
ANR	653762	CallExpression	"palColorFor ( ""graph.box4"" )"		653659	1					
ANR	653763	Callee	palColorFor		653659	0					
ANR	653764	Identifier	palColorFor		653659	0					
ANR	653765	ArgumentList	"""graph.box4"""		653659	1					
ANR	653766	Argument	"""graph.box4"""		653659	0					
ANR	653767	PrimaryExpression	"""graph.box4"""		653659	0					
ANR	653768	IdentifierDeclStatement	"const char * font = r_config_get ( core -> config , ""graph.font"" ) ;"	1417:8:42263:42323	653659	12	True				
ANR	653769	IdentifierDecl	"* font = r_config_get ( core -> config , ""graph.font"" )"		653659	0					
ANR	653770	IdentifierDeclType	const char *		653659	0					
ANR	653771	Identifier	font		653659	1					
ANR	653772	AssignmentExpression	"* font = r_config_get ( core -> config , ""graph.font"" )"		653659	2		=			
ANR	653773	Identifier	font		653659	0					
ANR	653774	CallExpression	"r_config_get ( core -> config , ""graph.font"" )"		653659	1					
ANR	653775	Callee	r_config_get		653659	0					
ANR	653776	Identifier	r_config_get		653659	0					
ANR	653777	ArgumentList	core -> config		653659	1					
ANR	653778	Argument	core -> config		653659	0					
ANR	653779	PtrMemberAccess	core -> config		653659	0					
ANR	653780	Identifier	core		653659	0					
ANR	653781	Identifier	config		653659	1					
ANR	653782	Argument	"""graph.font"""		653659	1					
ANR	653783	PrimaryExpression	"""graph.font"""		653659	0					
ANR	653784	IdentifierDeclStatement	"bool color_current = r_config_get_i ( core -> config , ""graph.gv.current"" ) ;"	1418:8:42333:42403	653659	13	True				
ANR	653785	IdentifierDecl	"color_current = r_config_get_i ( core -> config , ""graph.gv.current"" )"		653659	0					
ANR	653786	IdentifierDeclType	bool		653659	0					
ANR	653787	Identifier	color_current		653659	1					
ANR	653788	AssignmentExpression	"color_current = r_config_get_i ( core -> config , ""graph.gv.current"" )"		653659	2		=			
ANR	653789	Identifier	color_current		653659	0					
ANR	653790	CallExpression	"r_config_get_i ( core -> config , ""graph.gv.current"" )"		653659	1					
ANR	653791	Callee	r_config_get_i		653659	0					
ANR	653792	Identifier	r_config_get_i		653659	0					
ANR	653793	ArgumentList	core -> config		653659	1					
ANR	653794	Argument	core -> config		653659	0					
ANR	653795	PtrMemberAccess	core -> config		653659	0					
ANR	653796	Identifier	core		653659	0					
ANR	653797	Identifier	config		653659	1					
ANR	653798	Argument	"""graph.gv.current"""		653659	1					
ANR	653799	PrimaryExpression	"""graph.gv.current"""		653659	0					
ANR	653800	IdentifierDeclStatement	char * str ;	1419:8:42413:42422	653659	14	True				
ANR	653801	IdentifierDecl	* str		653659	0					
ANR	653802	IdentifierDeclType	char *		653659	0					
ANR	653803	Identifier	str		653659	1					
ANR	653804	IdentifierDeclStatement	int nodes = 0 ;	1420:8:42432:42445	653659	15	True				
ANR	653805	IdentifierDecl	nodes = 0		653659	0					
ANR	653806	IdentifierDeclType	int		653659	0					
ANR	653807	Identifier	nodes		653659	1					
ANR	653808	AssignmentExpression	nodes = 0		653659	2		=			
ANR	653809	Identifier	nodes		653659	0					
ANR	653810	PrimaryExpression	0		653659	1					
ANR	653811	Statement	r_list_foreach	1421:8:42455:42468	653659	16	True				
ANR	653812	Statement	(	1421:23:42470:42470	653659	17	True				
ANR	653813	Statement	fcn	1421:24:42471:42473	653659	18	True				
ANR	653814	Statement	->	1421:27:42474:42475	653659	19	True				
ANR	653815	Statement	bbs	1421:29:42476:42478	653659	20	True				
ANR	653816	Statement	","	1421:32:42479:42479	653659	21	True				
ANR	653817	Statement	iter	1421:34:42481:42484	653659	22	True				
ANR	653818	Statement	","	1421:38:42485:42485	653659	23	True				
ANR	653819	Statement	bbi	1421:40:42487:42489	653659	24	True				
ANR	653820	Statement	)	1421:43:42490:42490	653659	25	True				
ANR	653821	CompoundStatement		19:45:772:772	653659	26					
ANR	653822	IfStatement	if ( is_keva )		653659	0					
ANR	653823	Condition	is_keva	1422:20:42514:42520	653659	0	True				
ANR	653824	Identifier	is_keva		653659	0					
ANR	653825	CompoundStatement		21:24:829:842	653659	1					
ANR	653826	IdentifierDeclStatement	char key [ 128 ] ;	1423:24:42549:42562	653659	0	True				
ANR	653827	IdentifierDecl	key [ 128 ]		653659	0					
ANR	653828	IdentifierDeclType	char [ 128 ]		653659	0					
ANR	653829	Identifier	key		653659	1					
ANR	653830	PrimaryExpression	128		653659	2					
ANR	653831	ExpressionStatement	"sdb_array_push_num ( DB , ""bbs"" , bbi -> addr , 0 )"	1424:24:42588:42632	653659	1	True				
ANR	653832	CallExpression	"sdb_array_push_num ( DB , ""bbs"" , bbi -> addr , 0 )"		653659	0					
ANR	653833	Callee	sdb_array_push_num		653659	0					
ANR	653834	Identifier	sdb_array_push_num		653659	0					
ANR	653835	ArgumentList	DB		653659	1					
ANR	653836	Argument	DB		653659	0					
ANR	653837	Identifier	DB		653659	0					
ANR	653838	Argument	"""bbs"""		653659	1					
ANR	653839	PrimaryExpression	"""bbs"""		653659	0					
ANR	653840	Argument	bbi -> addr		653659	2					
ANR	653841	PtrMemberAccess	bbi -> addr		653659	0					
ANR	653842	Identifier	bbi		653659	0					
ANR	653843	Identifier	addr		653659	1					
ANR	653844	Argument	0		653659	3					
ANR	653845	PrimaryExpression	0		653659	0					
ANR	653846	Statement	snprintf	1425:24:42658:42665	653659	2	True				
ANR	653847	Statement	(	1425:33:42667:42667	653659	3	True				
ANR	653848	Statement	key	1425:34:42668:42670	653659	4	True				
ANR	653849	Statement	","	1425:37:42671:42671	653659	5	True				
ANR	653850	Statement	sizeof	1425:39:42673:42678	653659	6	True				
ANR	653851	Statement	(	1425:46:42680:42680	653659	7	True				
ANR	653852	Statement	key	1425:47:42681:42683	653659	8	True				
ANR	653853	Statement	)	1425:50:42684:42684	653659	9	True				
ANR	653854	Statement	","	1425:51:42685:42685	653659	10	True				
ANR	653855	Statement	"""bb.0x%08"""	1425:53:42687:42696	653659	11	True				
ANR	653856	Statement	PFMT64x	1425:63:42697:42703	653659	12	True				
ANR	653857	Statement	""".size"""	1425:70:42704:42710	653659	13	True				
ANR	653858	Statement	","	1425:77:42711:42711	653659	14	True				
ANR	653859	Statement	bbi	1425:79:42713:42715	653659	15	True				
ANR	653860	Statement	->	1425:82:42716:42717	653659	16	True				
ANR	653861	Statement	addr	1425:84:42718:42721	653659	17	True				
ANR	653862	Statement	)	1425:88:42722:42722	653659	18	True				
ANR	653863	ExpressionStatement		1425:89:42723:42723	653659	19	True				
ANR	653864	ExpressionStatement	"sdb_num_set ( DB , key , bbi -> size , 0 )"	1426:24:42749:42784	653659	20	True				
ANR	653865	CallExpression	"sdb_num_set ( DB , key , bbi -> size , 0 )"		653659	0					
ANR	653866	Callee	sdb_num_set		653659	0					
ANR	653867	Identifier	sdb_num_set		653659	0					
ANR	653868	ArgumentList	DB		653659	1					
ANR	653869	Argument	DB		653659	0					
ANR	653870	Identifier	DB		653659	0					
ANR	653871	Argument	key		653659	1					
ANR	653872	Identifier	key		653659	0					
ANR	653873	Argument	bbi -> size		653659	2					
ANR	653874	PtrMemberAccess	bbi -> size		653659	0					
ANR	653875	Identifier	bbi		653659	0					
ANR	653876	Identifier	size		653659	1					
ANR	653877	Argument	0		653659	3					
ANR	653878	PrimaryExpression	0		653659	0					
ANR	653879	ElseStatement	else		653659	0					
ANR	653880	IfStatement	if ( is_json )		653659	0					
ANR	653881	Condition	is_json	1427:27:42837:42843	653659	0	True				
ANR	653882	Identifier	is_json		653659	0					
ANR	653883	CompoundStatement		27:24:1240:1269	653659	1					
ANR	653884	IdentifierDeclStatement	"RDebugTracepoint * t = r_debug_trace_get ( core -> dbg , bbi -> addr ) ;"	1428:24:42872:42934	653659	0	True				
ANR	653885	IdentifierDecl	"* t = r_debug_trace_get ( core -> dbg , bbi -> addr )"		653659	0					
ANR	653886	IdentifierDeclType	RDebugTracepoint *		653659	0					
ANR	653887	Identifier	t		653659	1					
ANR	653888	AssignmentExpression	"* t = r_debug_trace_get ( core -> dbg , bbi -> addr )"		653659	2		=			
ANR	653889	Identifier	t		653659	0					
ANR	653890	CallExpression	"r_debug_trace_get ( core -> dbg , bbi -> addr )"		653659	1					
ANR	653891	Callee	r_debug_trace_get		653659	0					
ANR	653892	Identifier	r_debug_trace_get		653659	0					
ANR	653893	ArgumentList	core -> dbg		653659	1					
ANR	653894	Argument	core -> dbg		653659	0					
ANR	653895	PtrMemberAccess	core -> dbg		653659	0					
ANR	653896	Identifier	core		653659	0					
ANR	653897	Identifier	dbg		653659	1					
ANR	653898	Argument	bbi -> addr		653659	1					
ANR	653899	PtrMemberAccess	bbi -> addr		653659	0					
ANR	653900	Identifier	bbi		653659	0					
ANR	653901	Identifier	addr		653659	1					
ANR	653902	IdentifierDeclStatement	ut8 * buf = malloc ( bbi -> size ) ;	1429:24:42960:42989	653659	1	True				
ANR	653903	IdentifierDecl	* buf = malloc ( bbi -> size )		653659	0					
ANR	653904	IdentifierDeclType	ut8 *		653659	0					
ANR	653905	Identifier	buf		653659	1					
ANR	653906	AssignmentExpression	* buf = malloc ( bbi -> size )		653659	2		=			
ANR	653907	Identifier	buf		653659	0					
ANR	653908	CallExpression	malloc ( bbi -> size )		653659	1					
ANR	653909	Callee	malloc		653659	0					
ANR	653910	Identifier	malloc		653659	0					
ANR	653911	ArgumentList	bbi -> size		653659	1					
ANR	653912	Argument	bbi -> size		653659	0					
ANR	653913	PtrMemberAccess	bbi -> size		653659	0					
ANR	653914	Identifier	bbi		653659	0					
ANR	653915	Identifier	size		653659	1					
ANR	653916	ExpressionStatement	pj_o ( pj )	1430:24:43015:43024	653659	2	True				
ANR	653917	CallExpression	pj_o ( pj )		653659	0					
ANR	653918	Callee	pj_o		653659	0					
ANR	653919	Identifier	pj_o		653659	0					
ANR	653920	ArgumentList	pj		653659	1					
ANR	653921	Argument	pj		653659	0					
ANR	653922	Identifier	pj		653659	0					
ANR	653923	ExpressionStatement	"pj_kn ( pj , ""offset"" , bbi -> addr )"	1431:24:43050:43081	653659	3	True				
ANR	653924	CallExpression	"pj_kn ( pj , ""offset"" , bbi -> addr )"		653659	0					
ANR	653925	Callee	pj_kn		653659	0					
ANR	653926	Identifier	pj_kn		653659	0					
ANR	653927	ArgumentList	pj		653659	1					
ANR	653928	Argument	pj		653659	0					
ANR	653929	Identifier	pj		653659	0					
ANR	653930	Argument	"""offset"""		653659	1					
ANR	653931	PrimaryExpression	"""offset"""		653659	0					
ANR	653932	Argument	bbi -> addr		653659	2					
ANR	653933	PtrMemberAccess	bbi -> addr		653659	0					
ANR	653934	Identifier	bbi		653659	0					
ANR	653935	Identifier	addr		653659	1					
ANR	653936	ExpressionStatement	"pj_kn ( pj , ""size"" , bbi -> size )"	1432:24:43107:43136	653659	4	True				
ANR	653937	CallExpression	"pj_kn ( pj , ""size"" , bbi -> size )"		653659	0					
ANR	653938	Callee	pj_kn		653659	0					
ANR	653939	Identifier	pj_kn		653659	0					
ANR	653940	ArgumentList	pj		653659	1					
ANR	653941	Argument	pj		653659	0					
ANR	653942	Identifier	pj		653659	0					
ANR	653943	Argument	"""size"""		653659	1					
ANR	653944	PrimaryExpression	"""size"""		653659	0					
ANR	653945	Argument	bbi -> size		653659	2					
ANR	653946	PtrMemberAccess	bbi -> size		653659	0					
ANR	653947	Identifier	bbi		653659	0					
ANR	653948	Identifier	size		653659	1					
ANR	653949	IfStatement	if ( bbi -> jump != UT64_MAX )		653659	5					
ANR	653950	Condition	bbi -> jump != UT64_MAX	1433:28:43166:43186	653659	0	True				
ANR	653951	EqualityExpression	bbi -> jump != UT64_MAX		653659	0		!=			
ANR	653952	PtrMemberAccess	bbi -> jump		653659	0					
ANR	653953	Identifier	bbi		653659	0					
ANR	653954	Identifier	jump		653659	1					
ANR	653955	Identifier	UT64_MAX		653659	1					
ANR	653956	CompoundStatement		31:51:1469:1469	653659	1					
ANR	653957	ExpressionStatement	"pj_kn ( pj , ""jump"" , bbi -> jump )"	1434:32:43223:43252	653659	0	True				
ANR	653958	CallExpression	"pj_kn ( pj , ""jump"" , bbi -> jump )"		653659	0					
ANR	653959	Callee	pj_kn		653659	0					
ANR	653960	Identifier	pj_kn		653659	0					
ANR	653961	ArgumentList	pj		653659	1					
ANR	653962	Argument	pj		653659	0					
ANR	653963	Identifier	pj		653659	0					
ANR	653964	Argument	"""jump"""		653659	1					
ANR	653965	PrimaryExpression	"""jump"""		653659	0					
ANR	653966	Argument	bbi -> jump		653659	2					
ANR	653967	PtrMemberAccess	bbi -> jump		653659	0					
ANR	653968	Identifier	bbi		653659	0					
ANR	653969	Identifier	jump		653659	1					
ANR	653970	IfStatement	if ( bbi -> fail != - 1 )		653659	6					
ANR	653971	Condition	bbi -> fail != - 1	1436:28:43308:43322	653659	0	True				
ANR	653972	EqualityExpression	bbi -> fail != - 1		653659	0		!=			
ANR	653973	PtrMemberAccess	bbi -> fail		653659	0					
ANR	653974	Identifier	bbi		653659	0					
ANR	653975	Identifier	fail		653659	1					
ANR	653976	UnaryOperationExpression	- 1		653659	1					
ANR	653977	UnaryOperator	-		653659	0					
ANR	653978	PrimaryExpression	1		653659	1					
ANR	653979	CompoundStatement		34:45:1605:1605	653659	1					
ANR	653980	ExpressionStatement	"pj_kn ( pj , ""fail"" , bbi -> fail )"	1437:32:43359:43388	653659	0	True				
ANR	653981	CallExpression	"pj_kn ( pj , ""fail"" , bbi -> fail )"		653659	0					
ANR	653982	Callee	pj_kn		653659	0					
ANR	653983	Identifier	pj_kn		653659	0					
ANR	653984	ArgumentList	pj		653659	1					
ANR	653985	Argument	pj		653659	0					
ANR	653986	Identifier	pj		653659	0					
ANR	653987	Argument	"""fail"""		653659	1					
ANR	653988	PrimaryExpression	"""fail"""		653659	0					
ANR	653989	Argument	bbi -> fail		653659	2					
ANR	653990	PtrMemberAccess	bbi -> fail		653659	0					
ANR	653991	Identifier	bbi		653659	0					
ANR	653992	Identifier	fail		653659	1					
ANR	653993	IfStatement	if ( bbi -> switch_op )		653659	7					
ANR	653994	Condition	bbi -> switch_op	1439:28:43444:43457	653659	0	True				
ANR	653995	PtrMemberAccess	bbi -> switch_op		653659	0					
ANR	653996	Identifier	bbi		653659	0					
ANR	653997	Identifier	switch_op		653659	1					
ANR	653998	CompoundStatement		48:32:2354:2374	653659	1					
ANR	653999	IdentifierDeclStatement	RAnalSwitchOp * op = bbi -> switch_op ;	1440:32:43494:43528	653659	0	True				
ANR	654000	IdentifierDecl	* op = bbi -> switch_op		653659	0					
ANR	654001	IdentifierDeclType	RAnalSwitchOp *		653659	0					
ANR	654002	Identifier	op		653659	1					
ANR	654003	AssignmentExpression	* op = bbi -> switch_op		653659	2		=			
ANR	654004	Identifier	op		653659	0					
ANR	654005	PtrMemberAccess	bbi -> switch_op		653659	1					
ANR	654006	Identifier	bbi		653659	0					
ANR	654007	Identifier	switch_op		653659	1					
ANR	654008	ExpressionStatement	"pj_k ( pj , ""switchop"" )"	1441:32:43562:43583	653659	1	True				
ANR	654009	CallExpression	"pj_k ( pj , ""switchop"" )"		653659	0					
ANR	654010	Callee	pj_k		653659	0					
ANR	654011	Identifier	pj_k		653659	0					
ANR	654012	ArgumentList	pj		653659	1					
ANR	654013	Argument	pj		653659	0					
ANR	654014	Identifier	pj		653659	0					
ANR	654015	Argument	"""switchop"""		653659	1					
ANR	654016	PrimaryExpression	"""switchop"""		653659	0					
ANR	654017	ExpressionStatement	pj_o ( pj )	1442:32:43617:43626	653659	2	True				
ANR	654018	CallExpression	pj_o ( pj )		653659	0					
ANR	654019	Callee	pj_o		653659	0					
ANR	654020	Identifier	pj_o		653659	0					
ANR	654021	ArgumentList	pj		653659	1					
ANR	654022	Argument	pj		653659	0					
ANR	654023	Identifier	pj		653659	0					
ANR	654024	ExpressionStatement	"pj_kn ( pj , ""offset"" , op -> addr )"	1443:32:43660:43690	653659	3	True				
ANR	654025	CallExpression	"pj_kn ( pj , ""offset"" , op -> addr )"		653659	0					
ANR	654026	Callee	pj_kn		653659	0					
ANR	654027	Identifier	pj_kn		653659	0					
ANR	654028	ArgumentList	pj		653659	1					
ANR	654029	Argument	pj		653659	0					
ANR	654030	Identifier	pj		653659	0					
ANR	654031	Argument	"""offset"""		653659	1					
ANR	654032	PrimaryExpression	"""offset"""		653659	0					
ANR	654033	Argument	op -> addr		653659	2					
ANR	654034	PtrMemberAccess	op -> addr		653659	0					
ANR	654035	Identifier	op		653659	0					
ANR	654036	Identifier	addr		653659	1					
ANR	654037	ExpressionStatement	"pj_kn ( pj , ""defval"" , op -> def_val )"	1444:32:43724:43757	653659	4	True				
ANR	654038	CallExpression	"pj_kn ( pj , ""defval"" , op -> def_val )"		653659	0					
ANR	654039	Callee	pj_kn		653659	0					
ANR	654040	Identifier	pj_kn		653659	0					
ANR	654041	ArgumentList	pj		653659	1					
ANR	654042	Argument	pj		653659	0					
ANR	654043	Identifier	pj		653659	0					
ANR	654044	Argument	"""defval"""		653659	1					
ANR	654045	PrimaryExpression	"""defval"""		653659	0					
ANR	654046	Argument	op -> def_val		653659	2					
ANR	654047	PtrMemberAccess	op -> def_val		653659	0					
ANR	654048	Identifier	op		653659	0					
ANR	654049	Identifier	def_val		653659	1					
ANR	654050	ExpressionStatement	"pj_kn ( pj , ""maxval"" , op -> max_val )"	1445:32:43791:43824	653659	5	True				
ANR	654051	CallExpression	"pj_kn ( pj , ""maxval"" , op -> max_val )"		653659	0					
ANR	654052	Callee	pj_kn		653659	0					
ANR	654053	Identifier	pj_kn		653659	0					
ANR	654054	ArgumentList	pj		653659	1					
ANR	654055	Argument	pj		653659	0					
ANR	654056	Identifier	pj		653659	0					
ANR	654057	Argument	"""maxval"""		653659	1					
ANR	654058	PrimaryExpression	"""maxval"""		653659	0					
ANR	654059	Argument	op -> max_val		653659	2					
ANR	654060	PtrMemberAccess	op -> max_val		653659	0					
ANR	654061	Identifier	op		653659	0					
ANR	654062	Identifier	max_val		653659	1					
ANR	654063	ExpressionStatement	"pj_kn ( pj , ""minval"" , op -> min_val )"	1446:32:43858:43891	653659	6	True				
ANR	654064	CallExpression	"pj_kn ( pj , ""minval"" , op -> min_val )"		653659	0					
ANR	654065	Callee	pj_kn		653659	0					
ANR	654066	Identifier	pj_kn		653659	0					
ANR	654067	ArgumentList	pj		653659	1					
ANR	654068	Argument	pj		653659	0					
ANR	654069	Identifier	pj		653659	0					
ANR	654070	Argument	"""minval"""		653659	1					
ANR	654071	PrimaryExpression	"""minval"""		653659	0					
ANR	654072	Argument	op -> min_val		653659	2					
ANR	654073	PtrMemberAccess	op -> min_val		653659	0					
ANR	654074	Identifier	op		653659	0					
ANR	654075	Identifier	min_val		653659	1					
ANR	654076	ExpressionStatement	"pj_k ( pj , ""cases"" )"	1447:32:43925:43943	653659	7	True				
ANR	654077	CallExpression	"pj_k ( pj , ""cases"" )"		653659	0					
ANR	654078	Callee	pj_k		653659	0					
ANR	654079	Identifier	pj_k		653659	0					
ANR	654080	ArgumentList	pj		653659	1					
ANR	654081	Argument	pj		653659	0					
ANR	654082	Identifier	pj		653659	0					
ANR	654083	Argument	"""cases"""		653659	1					
ANR	654084	PrimaryExpression	"""cases"""		653659	0					
ANR	654085	ExpressionStatement	pj_a ( pj )	1448:32:43977:43986	653659	8	True				
ANR	654086	CallExpression	pj_a ( pj )		653659	0					
ANR	654087	Callee	pj_a		653659	0					
ANR	654088	Identifier	pj_a		653659	0					
ANR	654089	ArgumentList	pj		653659	1					
ANR	654090	Argument	pj		653659	0					
ANR	654091	Identifier	pj		653659	0					
ANR	654092	IdentifierDeclStatement	RAnalCaseOp * case_op ;	1449:32:44020:44040	653659	9	True				
ANR	654093	IdentifierDecl	* case_op		653659	0					
ANR	654094	IdentifierDeclType	RAnalCaseOp *		653659	0					
ANR	654095	Identifier	case_op		653659	1					
ANR	654096	IdentifierDeclStatement	RListIter * case_iter ;	1450:32:44074:44094	653659	10	True				
ANR	654097	IdentifierDecl	* case_iter		653659	0					
ANR	654098	IdentifierDeclType	RListIter *		653659	0					
ANR	654099	Identifier	case_iter		653659	1					
ANR	654100	Statement	r_list_foreach	1451:32:44128:44141	653659	11	True				
ANR	654101	Statement	(	1451:47:44143:44143	653659	12	True				
ANR	654102	Statement	op	1451:48:44144:44145	653659	13	True				
ANR	654103	Statement	->	1451:50:44146:44147	653659	14	True				
ANR	654104	Statement	cases	1451:52:44148:44152	653659	15	True				
ANR	654105	Statement	","	1451:57:44153:44153	653659	16	True				
ANR	654106	Statement	case_iter	1451:59:44155:44163	653659	17	True				
ANR	654107	Statement	","	1451:68:44164:44164	653659	18	True				
ANR	654108	Statement	case_op	1451:70:44166:44172	653659	19	True				
ANR	654109	Statement	)	1451:77:44173:44173	653659	20	True				
ANR	654110	CompoundStatement		49:79:2455:2455	653659	21					
ANR	654111	ExpressionStatement	pj_o ( pj )	1452:40:44217:44226	653659	0	True				
ANR	654112	CallExpression	pj_o ( pj )		653659	0					
ANR	654113	Callee	pj_o		653659	0					
ANR	654114	Identifier	pj_o		653659	0					
ANR	654115	ArgumentList	pj		653659	1					
ANR	654116	Argument	pj		653659	0					
ANR	654117	Identifier	pj		653659	0					
ANR	654118	ExpressionStatement	"pj_kn ( pj , ""offset"" , case_op -> addr )"	1453:40:44268:44303	653659	1	True				
ANR	654119	CallExpression	"pj_kn ( pj , ""offset"" , case_op -> addr )"		653659	0					
ANR	654120	Callee	pj_kn		653659	0					
ANR	654121	Identifier	pj_kn		653659	0					
ANR	654122	ArgumentList	pj		653659	1					
ANR	654123	Argument	pj		653659	0					
ANR	654124	Identifier	pj		653659	0					
ANR	654125	Argument	"""offset"""		653659	1					
ANR	654126	PrimaryExpression	"""offset"""		653659	0					
ANR	654127	Argument	case_op -> addr		653659	2					
ANR	654128	PtrMemberAccess	case_op -> addr		653659	0					
ANR	654129	Identifier	case_op		653659	0					
ANR	654130	Identifier	addr		653659	1					
ANR	654131	ExpressionStatement	"pj_kn ( pj , ""value"" , case_op -> value )"	1454:40:44345:44380	653659	2	True				
ANR	654132	CallExpression	"pj_kn ( pj , ""value"" , case_op -> value )"		653659	0					
ANR	654133	Callee	pj_kn		653659	0					
ANR	654134	Identifier	pj_kn		653659	0					
ANR	654135	ArgumentList	pj		653659	1					
ANR	654136	Argument	pj		653659	0					
ANR	654137	Identifier	pj		653659	0					
ANR	654138	Argument	"""value"""		653659	1					
ANR	654139	PrimaryExpression	"""value"""		653659	0					
ANR	654140	Argument	case_op -> value		653659	2					
ANR	654141	PtrMemberAccess	case_op -> value		653659	0					
ANR	654142	Identifier	case_op		653659	0					
ANR	654143	Identifier	value		653659	1					
ANR	654144	ExpressionStatement	"pj_kn ( pj , ""jump"" , case_op -> jump )"	1455:40:44422:44455	653659	3	True				
ANR	654145	CallExpression	"pj_kn ( pj , ""jump"" , case_op -> jump )"		653659	0					
ANR	654146	Callee	pj_kn		653659	0					
ANR	654147	Identifier	pj_kn		653659	0					
ANR	654148	ArgumentList	pj		653659	1					
ANR	654149	Argument	pj		653659	0					
ANR	654150	Identifier	pj		653659	0					
ANR	654151	Argument	"""jump"""		653659	1					
ANR	654152	PrimaryExpression	"""jump"""		653659	0					
ANR	654153	Argument	case_op -> jump		653659	2					
ANR	654154	PtrMemberAccess	case_op -> jump		653659	0					
ANR	654155	Identifier	case_op		653659	0					
ANR	654156	Identifier	jump		653659	1					
ANR	654157	ExpressionStatement	pj_end ( pj )	1456:40:44497:44508	653659	4	True				
ANR	654158	CallExpression	pj_end ( pj )		653659	0					
ANR	654159	Callee	pj_end		653659	0					
ANR	654160	Identifier	pj_end		653659	0					
ANR	654161	ArgumentList	pj		653659	1					
ANR	654162	Argument	pj		653659	0					
ANR	654163	Identifier	pj		653659	0					
ANR	654164	ExpressionStatement	pj_end ( pj )	1458:32:44576:44587	653659	22	True				
ANR	654165	CallExpression	pj_end ( pj )		653659	0					
ANR	654166	Callee	pj_end		653659	0					
ANR	654167	Identifier	pj_end		653659	0					
ANR	654168	ArgumentList	pj		653659	1					
ANR	654169	Argument	pj		653659	0					
ANR	654170	Identifier	pj		653659	0					
ANR	654171	ExpressionStatement	pj_end ( pj )	1459:32:44621:44632	653659	23	True				
ANR	654172	CallExpression	pj_end ( pj )		653659	0					
ANR	654173	Callee	pj_end		653659	0					
ANR	654174	Identifier	pj_end		653659	0					
ANR	654175	ArgumentList	pj		653659	1					
ANR	654176	Argument	pj		653659	0					
ANR	654177	Identifier	pj		653659	0					
ANR	654178	IfStatement	if ( t )		653659	8					
ANR	654179	Condition	t	1461:28:44688:44688	653659	0	True				
ANR	654180	Identifier	t		653659	0					
ANR	654181	CompoundStatement		59:31:2971:2971	653659	1					
ANR	654182	ExpressionStatement	"pj_k ( pj , ""trace"" )"	1462:32:44725:44743	653659	0	True				
ANR	654183	CallExpression	"pj_k ( pj , ""trace"" )"		653659	0					
ANR	654184	Callee	pj_k		653659	0					
ANR	654185	Identifier	pj_k		653659	0					
ANR	654186	ArgumentList	pj		653659	1					
ANR	654187	Argument	pj		653659	0					
ANR	654188	Identifier	pj		653659	0					
ANR	654189	Argument	"""trace"""		653659	1					
ANR	654190	PrimaryExpression	"""trace"""		653659	0					
ANR	654191	ExpressionStatement	pj_o ( pj )	1463:32:44777:44786	653659	1	True				
ANR	654192	CallExpression	pj_o ( pj )		653659	0					
ANR	654193	Callee	pj_o		653659	0					
ANR	654194	Identifier	pj_o		653659	0					
ANR	654195	ArgumentList	pj		653659	1					
ANR	654196	Argument	pj		653659	0					
ANR	654197	Identifier	pj		653659	0					
ANR	654198	ExpressionStatement	"pj_ki ( pj , ""count"" , t -> count )"	1464:32:44820:44849	653659	2	True				
ANR	654199	CallExpression	"pj_ki ( pj , ""count"" , t -> count )"		653659	0					
ANR	654200	Callee	pj_ki		653659	0					
ANR	654201	Identifier	pj_ki		653659	0					
ANR	654202	ArgumentList	pj		653659	1					
ANR	654203	Argument	pj		653659	0					
ANR	654204	Identifier	pj		653659	0					
ANR	654205	Argument	"""count"""		653659	1					
ANR	654206	PrimaryExpression	"""count"""		653659	0					
ANR	654207	Argument	t -> count		653659	2					
ANR	654208	PtrMemberAccess	t -> count		653659	0					
ANR	654209	Identifier	t		653659	0					
ANR	654210	Identifier	count		653659	1					
ANR	654211	ExpressionStatement	"pj_ki ( pj , ""times"" , t -> times )"	1465:32:44883:44912	653659	3	True				
ANR	654212	CallExpression	"pj_ki ( pj , ""times"" , t -> times )"		653659	0					
ANR	654213	Callee	pj_ki		653659	0					
ANR	654214	Identifier	pj_ki		653659	0					
ANR	654215	ArgumentList	pj		653659	1					
ANR	654216	Argument	pj		653659	0					
ANR	654217	Identifier	pj		653659	0					
ANR	654218	Argument	"""times"""		653659	1					
ANR	654219	PrimaryExpression	"""times"""		653659	0					
ANR	654220	Argument	t -> times		653659	2					
ANR	654221	PtrMemberAccess	t -> times		653659	0					
ANR	654222	Identifier	t		653659	0					
ANR	654223	Identifier	times		653659	1					
ANR	654224	ExpressionStatement	pj_end ( pj )	1466:32:44946:44957	653659	4	True				
ANR	654225	CallExpression	pj_end ( pj )		653659	0					
ANR	654226	Callee	pj_end		653659	0					
ANR	654227	Identifier	pj_end		653659	0					
ANR	654228	ArgumentList	pj		653659	1					
ANR	654229	Argument	pj		653659	0					
ANR	654230	Identifier	pj		653659	0					
ANR	654231	ExpressionStatement	"pj_kn ( pj , ""colorize"" , bbi -> colorize )"	1468:24:45009:45046	653659	9	True				
ANR	654232	CallExpression	"pj_kn ( pj , ""colorize"" , bbi -> colorize )"		653659	0					
ANR	654233	Callee	pj_kn		653659	0					
ANR	654234	Identifier	pj_kn		653659	0					
ANR	654235	ArgumentList	pj		653659	1					
ANR	654236	Argument	pj		653659	0					
ANR	654237	Identifier	pj		653659	0					
ANR	654238	Argument	"""colorize"""		653659	1					
ANR	654239	PrimaryExpression	"""colorize"""		653659	0					
ANR	654240	Argument	bbi -> colorize		653659	2					
ANR	654241	PtrMemberAccess	bbi -> colorize		653659	0					
ANR	654242	Identifier	bbi		653659	0					
ANR	654243	Identifier	colorize		653659	1					
ANR	654244	ExpressionStatement	"pj_k ( pj , ""ops"" )"	1469:24:45072:45088	653659	10	True				
ANR	654245	CallExpression	"pj_k ( pj , ""ops"" )"		653659	0					
ANR	654246	Callee	pj_k		653659	0					
ANR	654247	Identifier	pj_k		653659	0					
ANR	654248	ArgumentList	pj		653659	1					
ANR	654249	Argument	pj		653659	0					
ANR	654250	Identifier	pj		653659	0					
ANR	654251	Argument	"""ops"""		653659	1					
ANR	654252	PrimaryExpression	"""ops"""		653659	0					
ANR	654253	ExpressionStatement	pj_a ( pj )	1470:24:45114:45123	653659	11	True				
ANR	654254	CallExpression	pj_a ( pj )		653659	0					
ANR	654255	Callee	pj_a		653659	0					
ANR	654256	Identifier	pj_a		653659	0					
ANR	654257	ArgumentList	pj		653659	1					
ANR	654258	Argument	pj		653659	0					
ANR	654259	Identifier	pj		653659	0					
ANR	654260	IfStatement	if ( buf )		653659	12					
ANR	654261	Condition	buf	1471:28:45153:45155	653659	0	True				
ANR	654262	Identifier	buf		653659	0					
ANR	654263	CompoundStatement		69:33:3438:3438	653659	1					
ANR	654264	ExpressionStatement	"r_io_read_at ( core -> io , bbi -> addr , buf , bbi -> size )"	1472:32:45192:45242	653659	0	True				
ANR	654265	CallExpression	"r_io_read_at ( core -> io , bbi -> addr , buf , bbi -> size )"		653659	0					
ANR	654266	Callee	r_io_read_at		653659	0					
ANR	654267	Identifier	r_io_read_at		653659	0					
ANR	654268	ArgumentList	core -> io		653659	1					
ANR	654269	Argument	core -> io		653659	0					
ANR	654270	PtrMemberAccess	core -> io		653659	0					
ANR	654271	Identifier	core		653659	0					
ANR	654272	Identifier	io		653659	1					
ANR	654273	Argument	bbi -> addr		653659	1					
ANR	654274	PtrMemberAccess	bbi -> addr		653659	0					
ANR	654275	Identifier	bbi		653659	0					
ANR	654276	Identifier	addr		653659	1					
ANR	654277	Argument	buf		653659	2					
ANR	654278	Identifier	buf		653659	0					
ANR	654279	Argument	bbi -> size		653659	3					
ANR	654280	PtrMemberAccess	bbi -> size		653659	0					
ANR	654281	Identifier	bbi		653659	0					
ANR	654282	Identifier	size		653659	1					
ANR	654283	IfStatement	if ( is_json_format_disasm )		653659	1					
ANR	654284	Condition	is_json_format_disasm	1473:36:45280:45300	653659	0	True				
ANR	654285	Identifier	is_json_format_disasm		653659	0					
ANR	654286	CompoundStatement		71:59:3583:3583	653659	1					
ANR	654287	ExpressionStatement	"r_core_print_disasm ( core -> print , core , bbi -> addr , buf , bbi -> size , bbi -> size , 0 , 1 , true , pj , NULL )"	1474:40:45345:45444	653659	0	True				
ANR	654288	CallExpression	"r_core_print_disasm ( core -> print , core , bbi -> addr , buf , bbi -> size , bbi -> size , 0 , 1 , true , pj , NULL )"		653659	0					
ANR	654289	Callee	r_core_print_disasm		653659	0					
ANR	654290	Identifier	r_core_print_disasm		653659	0					
ANR	654291	ArgumentList	core -> print		653659	1					
ANR	654292	Argument	core -> print		653659	0					
ANR	654293	PtrMemberAccess	core -> print		653659	0					
ANR	654294	Identifier	core		653659	0					
ANR	654295	Identifier	print		653659	1					
ANR	654296	Argument	core		653659	1					
ANR	654297	Identifier	core		653659	0					
ANR	654298	Argument	bbi -> addr		653659	2					
ANR	654299	PtrMemberAccess	bbi -> addr		653659	0					
ANR	654300	Identifier	bbi		653659	0					
ANR	654301	Identifier	addr		653659	1					
ANR	654302	Argument	buf		653659	3					
ANR	654303	Identifier	buf		653659	0					
ANR	654304	Argument	bbi -> size		653659	4					
ANR	654305	PtrMemberAccess	bbi -> size		653659	0					
ANR	654306	Identifier	bbi		653659	0					
ANR	654307	Identifier	size		653659	1					
ANR	654308	Argument	bbi -> size		653659	5					
ANR	654309	PtrMemberAccess	bbi -> size		653659	0					
ANR	654310	Identifier	bbi		653659	0					
ANR	654311	Identifier	size		653659	1					
ANR	654312	Argument	0		653659	6					
ANR	654313	PrimaryExpression	0		653659	0					
ANR	654314	Argument	1		653659	7					
ANR	654315	PrimaryExpression	1		653659	0					
ANR	654316	Argument	true		653659	8					
ANR	654317	Identifier	true		653659	0					
ANR	654318	Argument	pj		653659	9					
ANR	654319	Identifier	pj		653659	0					
ANR	654320	Argument	NULL		653659	10					
ANR	654321	Identifier	NULL		653659	0					
ANR	654322	ElseStatement	else		653659	0					
ANR	654323	CompoundStatement		73:39:3765:3765	653659	0					
ANR	654324	ExpressionStatement	"r_core_print_disasm_json ( core , bbi -> addr , buf , bbi -> size , 0 , pj )"	1476:40:45527:45592	653659	0	True				
ANR	654325	CallExpression	"r_core_print_disasm_json ( core , bbi -> addr , buf , bbi -> size , 0 , pj )"		653659	0					
ANR	654326	Callee	r_core_print_disasm_json		653659	0					
ANR	654327	Identifier	r_core_print_disasm_json		653659	0					
ANR	654328	ArgumentList	core		653659	1					
ANR	654329	Argument	core		653659	0					
ANR	654330	Identifier	core		653659	0					
ANR	654331	Argument	bbi -> addr		653659	1					
ANR	654332	PtrMemberAccess	bbi -> addr		653659	0					
ANR	654333	Identifier	bbi		653659	0					
ANR	654334	Identifier	addr		653659	1					
ANR	654335	Argument	buf		653659	2					
ANR	654336	Identifier	buf		653659	0					
ANR	654337	Argument	bbi -> size		653659	3					
ANR	654338	PtrMemberAccess	bbi -> size		653659	0					
ANR	654339	Identifier	bbi		653659	0					
ANR	654340	Identifier	size		653659	1					
ANR	654341	Argument	0		653659	4					
ANR	654342	PrimaryExpression	0		653659	0					
ANR	654343	Argument	pj		653659	5					
ANR	654344	Identifier	pj		653659	0					
ANR	654345	ExpressionStatement	free ( buf )	1478:32:45660:45670	653659	2	True				
ANR	654346	CallExpression	free ( buf )		653659	0					
ANR	654347	Callee	free		653659	0					
ANR	654348	Identifier	free		653659	0					
ANR	654349	ArgumentList	buf		653659	1					
ANR	654350	Argument	buf		653659	0					
ANR	654351	Identifier	buf		653659	0					
ANR	654352	ElseStatement	else		653659	0					
ANR	654353	CompoundStatement		77:31:3983:3983	653659	0					
ANR	654354	ExpressionStatement	"eprintf ( ""cannot allocate %d byte(s)\\n"" , bbi -> size )"	1480:32:45737:45788	653659	0	True				
ANR	654355	CallExpression	"eprintf ( ""cannot allocate %d byte(s)\\n"" , bbi -> size )"		653659	0					
ANR	654356	Callee	eprintf		653659	0					
ANR	654357	Identifier	eprintf		653659	0					
ANR	654358	ArgumentList	"""cannot allocate %d byte(s)\\n"""		653659	1					
ANR	654359	Argument	"""cannot allocate %d byte(s)\\n"""		653659	0					
ANR	654360	PrimaryExpression	"""cannot allocate %d byte(s)\\n"""		653659	0					
ANR	654361	Argument	bbi -> size		653659	1					
ANR	654362	PtrMemberAccess	bbi -> size		653659	0					
ANR	654363	Identifier	bbi		653659	0					
ANR	654364	Identifier	size		653659	1					
ANR	654365	ExpressionStatement	pj_end ( pj )	1482:24:45840:45851	653659	13	True				
ANR	654366	CallExpression	pj_end ( pj )		653659	0					
ANR	654367	Callee	pj_end		653659	0					
ANR	654368	Identifier	pj_end		653659	0					
ANR	654369	ArgumentList	pj		653659	1					
ANR	654370	Argument	pj		653659	0					
ANR	654371	Identifier	pj		653659	0					
ANR	654372	ExpressionStatement	pj_end ( pj )	1483:24:45877:45888	653659	14	True				
ANR	654373	CallExpression	pj_end ( pj )		653659	0					
ANR	654374	Callee	pj_end		653659	0					
ANR	654375	Identifier	pj_end		653659	0					
ANR	654376	ArgumentList	pj		653659	1					
ANR	654377	Argument	pj		653659	0					
ANR	654378	Identifier	pj		653659	0					
ANR	654379	ContinueStatement	continue ;	1484:24:45914:45922	653659	15	True				
ANR	654380	IfStatement	"if ( ( str = core_anal_graph_label ( core , bbi , opts ) ) )"		653659	1					
ANR	654381	Condition	"str = core_anal_graph_label ( core , bbi , opts )"	1486:20:45962:46008	653659	0	True				
ANR	654382	AssignmentExpression	"str = core_anal_graph_label ( core , bbi , opts )"		653659	0		=			
ANR	654383	Identifier	str		653659	0					
ANR	654384	CallExpression	"core_anal_graph_label ( core , bbi , opts )"		653659	1					
ANR	654385	Callee	core_anal_graph_label		653659	0					
ANR	654386	Identifier	core_anal_graph_label		653659	0					
ANR	654387	ArgumentList	core		653659	1					
ANR	654388	Argument	core		653659	0					
ANR	654389	Identifier	core		653659	0					
ANR	654390	Argument	bbi		653659	1					
ANR	654391	Identifier	bbi		653659	0					
ANR	654392	Argument	opts		653659	2					
ANR	654393	Identifier	opts		653659	0					
ANR	654394	CompoundStatement		84:69:4291:4291	653659	1					
ANR	654395	IfStatement	if ( opts & R_CORE_ANAL_GRAPHDIFF )		653659	0					
ANR	654396	Condition	opts & R_CORE_ANAL_GRAPHDIFF	1487:28:46041:46068	653659	0	True				
ANR	654397	BitAndExpression	opts & R_CORE_ANAL_GRAPHDIFF		653659	0		&			
ANR	654398	Identifier	opts		653659	0					
ANR	654399	Identifier	R_CORE_ANAL_GRAPHDIFF		653659	1					
ANR	654400	CompoundStatement		89:32:4643:4861	653659	1					
ANR	654401	IdentifierDeclStatement	"const char * difftype = bbi -> diff ? ( bbi -> diff -> type == R_ANAL_DIFF_TYPE_MATCH ? ""lightgray"" : bbi -> diff -> type == R_ANAL_DIFF_TYPE_UNMATCH ? ""yellow"" : ""red"" ) : ""orange"" ;"	1488:32:46105:46329	653659	0	True				
ANR	654402	IdentifierDecl	"* difftype = bbi -> diff ? ( bbi -> diff -> type == R_ANAL_DIFF_TYPE_MATCH ? ""lightgray"" : bbi -> diff -> type == R_ANAL_DIFF_TYPE_UNMATCH ? ""yellow"" : ""red"" ) : ""orange"""		653659	0					
ANR	654403	IdentifierDeclType	const char *		653659	0					
ANR	654404	Identifier	difftype		653659	1					
ANR	654405	AssignmentExpression	"* difftype = bbi -> diff ? ( bbi -> diff -> type == R_ANAL_DIFF_TYPE_MATCH ? ""lightgray"" : bbi -> diff -> type == R_ANAL_DIFF_TYPE_UNMATCH ? ""yellow"" : ""red"" ) : ""orange"""		653659	2		=			
ANR	654406	Identifier	difftype		653659	0					
ANR	654407	ConditionalExpression	"bbi -> diff ? ( bbi -> diff -> type == R_ANAL_DIFF_TYPE_MATCH ? ""lightgray"" : bbi -> diff -> type == R_ANAL_DIFF_TYPE_UNMATCH ? ""yellow"" : ""red"" ) : ""orange"""		653659	1					
ANR	654408	Condition	bbi -> diff		653659	0					
ANR	654409	PtrMemberAccess	bbi -> diff		653659	0					
ANR	654410	Identifier	bbi		653659	0					
ANR	654411	Identifier	diff		653659	1					
ANR	654412	ConditionalExpression	"bbi -> diff -> type == R_ANAL_DIFF_TYPE_MATCH ? ""lightgray"" : bbi -> diff -> type == R_ANAL_DIFF_TYPE_UNMATCH ? ""yellow"" : ""red"""		653659	1					
ANR	654413	Condition	bbi -> diff -> type == R_ANAL_DIFF_TYPE_MATCH		653659	0					
ANR	654414	EqualityExpression	bbi -> diff -> type == R_ANAL_DIFF_TYPE_MATCH		653659	0		==			
ANR	654415	PtrMemberAccess	bbi -> diff -> type		653659	0					
ANR	654416	PtrMemberAccess	bbi -> diff		653659	0					
ANR	654417	Identifier	bbi		653659	0					
ANR	654418	Identifier	diff		653659	1					
ANR	654419	Identifier	type		653659	1					
ANR	654420	Identifier	R_ANAL_DIFF_TYPE_MATCH		653659	1					
ANR	654421	PrimaryExpression	"""lightgray"""		653659	1					
ANR	654422	ConditionalExpression	"bbi -> diff -> type == R_ANAL_DIFF_TYPE_UNMATCH ? ""yellow"" : ""red"""		653659	2					
ANR	654423	Condition	bbi -> diff -> type == R_ANAL_DIFF_TYPE_UNMATCH		653659	0					
ANR	654424	EqualityExpression	bbi -> diff -> type == R_ANAL_DIFF_TYPE_UNMATCH		653659	0		==			
ANR	654425	PtrMemberAccess	bbi -> diff -> type		653659	0					
ANR	654426	PtrMemberAccess	bbi -> diff		653659	0					
ANR	654427	Identifier	bbi		653659	0					
ANR	654428	Identifier	diff		653659	1					
ANR	654429	Identifier	type		653659	1					
ANR	654430	Identifier	R_ANAL_DIFF_TYPE_UNMATCH		653659	1					
ANR	654431	PrimaryExpression	"""yellow"""		653659	1					
ANR	654432	PrimaryExpression	"""red"""		653659	2					
ANR	654433	PrimaryExpression	"""orange"""		653659	2					
ANR	654434	IdentifierDeclStatement	"const char * diffname = bbi -> diff ? ( bbi -> diff -> type == R_ANAL_DIFF_TYPE_MATCH ? ""match"" : bbi -> diff -> type == R_ANAL_DIFF_TYPE_UNMATCH ? ""unmatch"" : ""new"" ) : ""unk"" ;"	1491:32:46363:46581	653659	1	True				
ANR	654435	IdentifierDecl	"* diffname = bbi -> diff ? ( bbi -> diff -> type == R_ANAL_DIFF_TYPE_MATCH ? ""match"" : bbi -> diff -> type == R_ANAL_DIFF_TYPE_UNMATCH ? ""unmatch"" : ""new"" ) : ""unk"""		653659	0					
ANR	654436	IdentifierDeclType	const char *		653659	0					
ANR	654437	Identifier	diffname		653659	1					
ANR	654438	AssignmentExpression	"* diffname = bbi -> diff ? ( bbi -> diff -> type == R_ANAL_DIFF_TYPE_MATCH ? ""match"" : bbi -> diff -> type == R_ANAL_DIFF_TYPE_UNMATCH ? ""unmatch"" : ""new"" ) : ""unk"""		653659	2		=			
ANR	654439	Identifier	diffname		653659	0					
ANR	654440	ConditionalExpression	"bbi -> diff ? ( bbi -> diff -> type == R_ANAL_DIFF_TYPE_MATCH ? ""match"" : bbi -> diff -> type == R_ANAL_DIFF_TYPE_UNMATCH ? ""unmatch"" : ""new"" ) : ""unk"""		653659	1					
ANR	654441	Condition	bbi -> diff		653659	0					
ANR	654442	PtrMemberAccess	bbi -> diff		653659	0					
ANR	654443	Identifier	bbi		653659	0					
ANR	654444	Identifier	diff		653659	1					
ANR	654445	ConditionalExpression	"bbi -> diff -> type == R_ANAL_DIFF_TYPE_MATCH ? ""match"" : bbi -> diff -> type == R_ANAL_DIFF_TYPE_UNMATCH ? ""unmatch"" : ""new"""		653659	1					
ANR	654446	Condition	bbi -> diff -> type == R_ANAL_DIFF_TYPE_MATCH		653659	0					
ANR	654447	EqualityExpression	bbi -> diff -> type == R_ANAL_DIFF_TYPE_MATCH		653659	0		==			
ANR	654448	PtrMemberAccess	bbi -> diff -> type		653659	0					
ANR	654449	PtrMemberAccess	bbi -> diff		653659	0					
ANR	654450	Identifier	bbi		653659	0					
ANR	654451	Identifier	diff		653659	1					
ANR	654452	Identifier	type		653659	1					
ANR	654453	Identifier	R_ANAL_DIFF_TYPE_MATCH		653659	1					
ANR	654454	PrimaryExpression	"""match"""		653659	1					
ANR	654455	ConditionalExpression	"bbi -> diff -> type == R_ANAL_DIFF_TYPE_UNMATCH ? ""unmatch"" : ""new"""		653659	2					
ANR	654456	Condition	bbi -> diff -> type == R_ANAL_DIFF_TYPE_UNMATCH		653659	0					
ANR	654457	EqualityExpression	bbi -> diff -> type == R_ANAL_DIFF_TYPE_UNMATCH		653659	0		==			
ANR	654458	PtrMemberAccess	bbi -> diff -> type		653659	0					
ANR	654459	PtrMemberAccess	bbi -> diff		653659	0					
ANR	654460	Identifier	bbi		653659	0					
ANR	654461	Identifier	diff		653659	1					
ANR	654462	Identifier	type		653659	1					
ANR	654463	Identifier	R_ANAL_DIFF_TYPE_UNMATCH		653659	1					
ANR	654464	PrimaryExpression	"""unmatch"""		653659	1					
ANR	654465	PrimaryExpression	"""new"""		653659	2					
ANR	654466	PrimaryExpression	"""unk"""		653659	2					
ANR	654467	IfStatement	if ( is_keva )		653659	2					
ANR	654468	Condition	is_keva	1494:36:46619:46625	653659	0	True				
ANR	654469	Identifier	is_keva		653659	0					
ANR	654470	CompoundStatement		92:45:4908:4908	653659	1					
ANR	654471	ExpressionStatement	"sdb_set ( DB , ""diff"" , diffname , 0 )"	1495:40:46670:46703	653659	0	True				
ANR	654472	CallExpression	"sdb_set ( DB , ""diff"" , diffname , 0 )"		653659	0					
ANR	654473	Callee	sdb_set		653659	0					
ANR	654474	Identifier	sdb_set		653659	0					
ANR	654475	ArgumentList	DB		653659	1					
ANR	654476	Argument	DB		653659	0					
ANR	654477	Identifier	DB		653659	0					
ANR	654478	Argument	"""diff"""		653659	1					
ANR	654479	PrimaryExpression	"""diff"""		653659	0					
ANR	654480	Argument	diffname		653659	2					
ANR	654481	Identifier	diffname		653659	0					
ANR	654482	Argument	0		653659	3					
ANR	654483	PrimaryExpression	0		653659	0					
ANR	654484	ExpressionStatement	"sdb_set ( DB , ""label"" , str , 0 )"	1496:40:46745:46774	653659	1	True				
ANR	654485	CallExpression	"sdb_set ( DB , ""label"" , str , 0 )"		653659	0					
ANR	654486	Callee	sdb_set		653659	0					
ANR	654487	Identifier	sdb_set		653659	0					
ANR	654488	ArgumentList	DB		653659	1					
ANR	654489	Argument	DB		653659	0					
ANR	654490	Identifier	DB		653659	0					
ANR	654491	Argument	"""label"""		653659	1					
ANR	654492	PrimaryExpression	"""label"""		653659	0					
ANR	654493	Argument	str		653659	2					
ANR	654494	Identifier	str		653659	0					
ANR	654495	Argument	0		653659	3					
ANR	654496	PrimaryExpression	0		653659	0					
ANR	654497	ElseStatement	else		653659	0					
ANR	654498	IfStatement	if ( ! is_json )		653659	0					
ANR	654499	Condition	! is_json	1497:43:46819:46826	653659	0	True				
ANR	654500	UnaryOperationExpression	! is_json		653659	0					
ANR	654501	UnaryOperator	!		653659	0					
ANR	654502	Identifier	is_json		653659	1					
ANR	654503	CompoundStatement		100:40:5507:5531	653659	1					
ANR	654504	ExpressionStatement	nodes ++	1498:40:46871:46878	653659	0	True				
ANR	654505	PostIncDecOperationExpression	nodes ++		653659	0					
ANR	654506	Identifier	nodes		653659	0					
ANR	654507	IncDec	++		653659	1					
ANR	654508	IdentifierDeclStatement	RConfigHold * hc = r_config_hold_new ( core -> config ) ;	1499:40:46920:46970	653659	1	True				
ANR	654509	IdentifierDecl	* hc = r_config_hold_new ( core -> config )		653659	0					
ANR	654510	IdentifierDeclType	RConfigHold *		653659	0					
ANR	654511	Identifier	hc		653659	1					
ANR	654512	AssignmentExpression	* hc = r_config_hold_new ( core -> config )		653659	2		=			
ANR	654513	Identifier	hc		653659	0					
ANR	654514	CallExpression	r_config_hold_new ( core -> config )		653659	1					
ANR	654515	Callee	r_config_hold_new		653659	0					
ANR	654516	Identifier	r_config_hold_new		653659	0					
ANR	654517	ArgumentList	core -> config		653659	1					
ANR	654518	Argument	core -> config		653659	0					
ANR	654519	PtrMemberAccess	core -> config		653659	0					
ANR	654520	Identifier	core		653659	0					
ANR	654521	Identifier	config		653659	1					
ANR	654522	ExpressionStatement	"r_config_hold_i ( hc , ""scr.color"" , ""scr.utf8"" , ""asm.offset"" , ""asm.lines"" , ""asm.cmt.right"" , ""asm.lines.fcn"" , ""asm.bytes"" , NULL )"	1500:40:47012:47185	653659	2	True				
ANR	654523	CallExpression	"r_config_hold_i ( hc , ""scr.color"" , ""scr.utf8"" , ""asm.offset"" , ""asm.lines"" , ""asm.cmt.right"" , ""asm.lines.fcn"" , ""asm.bytes"" , NULL )"		653659	0					
ANR	654524	Callee	r_config_hold_i		653659	0					
ANR	654525	Identifier	r_config_hold_i		653659	0					
ANR	654526	ArgumentList	hc		653659	1					
ANR	654527	Argument	hc		653659	0					
ANR	654528	Identifier	hc		653659	0					
ANR	654529	Argument	"""scr.color"""		653659	1					
ANR	654530	PrimaryExpression	"""scr.color"""		653659	0					
ANR	654531	Argument	"""scr.utf8"""		653659	2					
ANR	654532	PrimaryExpression	"""scr.utf8"""		653659	0					
ANR	654533	Argument	"""asm.offset"""		653659	3					
ANR	654534	PrimaryExpression	"""asm.offset"""		653659	0					
ANR	654535	Argument	"""asm.lines"""		653659	4					
ANR	654536	PrimaryExpression	"""asm.lines"""		653659	0					
ANR	654537	Argument	"""asm.cmt.right"""		653659	5					
ANR	654538	PrimaryExpression	"""asm.cmt.right"""		653659	0					
ANR	654539	Argument	"""asm.lines.fcn"""		653659	6					
ANR	654540	PrimaryExpression	"""asm.lines.fcn"""		653659	0					
ANR	654541	Argument	"""asm.bytes"""		653659	7					
ANR	654542	PrimaryExpression	"""asm.bytes"""		653659	0					
ANR	654543	Argument	NULL		653659	8					
ANR	654544	Identifier	NULL		653659	0					
ANR	654545	IdentifierDeclStatement	RDiff * d = r_diff_new ( ) ;	1502:40:47227:47251	653659	3	True				
ANR	654546	IdentifierDecl	* d = r_diff_new ( )		653659	0					
ANR	654547	IdentifierDeclType	RDiff *		653659	0					
ANR	654548	Identifier	d		653659	1					
ANR	654549	AssignmentExpression	* d = r_diff_new ( )		653659	2		=			
ANR	654550	Identifier	d		653659	0					
ANR	654551	CallExpression	r_diff_new ( )		653659	1					
ANR	654552	Callee	r_diff_new		653659	0					
ANR	654553	Identifier	r_diff_new		653659	0					
ANR	654554	ArgumentList			653659	1					
ANR	654555	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.utf8"" , 0 )"	1503:40:47293:47337	653659	4	True				
ANR	654556	CallExpression	"r_config_set_i ( core -> config , ""scr.utf8"" , 0 )"		653659	0					
ANR	654557	Callee	r_config_set_i		653659	0					
ANR	654558	Identifier	r_config_set_i		653659	0					
ANR	654559	ArgumentList	core -> config		653659	1					
ANR	654560	Argument	core -> config		653659	0					
ANR	654561	PtrMemberAccess	core -> config		653659	0					
ANR	654562	Identifier	core		653659	0					
ANR	654563	Identifier	config		653659	1					
ANR	654564	Argument	"""scr.utf8"""		653659	1					
ANR	654565	PrimaryExpression	"""scr.utf8"""		653659	0					
ANR	654566	Argument	0		653659	2					
ANR	654567	PrimaryExpression	0		653659	0					
ANR	654568	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.offset"" , 0 )"	1504:40:47379:47425	653659	5	True				
ANR	654569	CallExpression	"r_config_set_i ( core -> config , ""asm.offset"" , 0 )"		653659	0					
ANR	654570	Callee	r_config_set_i		653659	0					
ANR	654571	Identifier	r_config_set_i		653659	0					
ANR	654572	ArgumentList	core -> config		653659	1					
ANR	654573	Argument	core -> config		653659	0					
ANR	654574	PtrMemberAccess	core -> config		653659	0					
ANR	654575	Identifier	core		653659	0					
ANR	654576	Identifier	config		653659	1					
ANR	654577	Argument	"""asm.offset"""		653659	1					
ANR	654578	PrimaryExpression	"""asm.offset"""		653659	0					
ANR	654579	Argument	0		653659	2					
ANR	654580	PrimaryExpression	0		653659	0					
ANR	654581	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.lines"" , 0 )"	1505:40:47467:47512	653659	6	True				
ANR	654582	CallExpression	"r_config_set_i ( core -> config , ""asm.lines"" , 0 )"		653659	0					
ANR	654583	Callee	r_config_set_i		653659	0					
ANR	654584	Identifier	r_config_set_i		653659	0					
ANR	654585	ArgumentList	core -> config		653659	1					
ANR	654586	Argument	core -> config		653659	0					
ANR	654587	PtrMemberAccess	core -> config		653659	0					
ANR	654588	Identifier	core		653659	0					
ANR	654589	Identifier	config		653659	1					
ANR	654590	Argument	"""asm.lines"""		653659	1					
ANR	654591	PrimaryExpression	"""asm.lines"""		653659	0					
ANR	654592	Argument	0		653659	2					
ANR	654593	PrimaryExpression	0		653659	0					
ANR	654594	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.cmt.right"" , 0 )"	1506:40:47554:47603	653659	7	True				
ANR	654595	CallExpression	"r_config_set_i ( core -> config , ""asm.cmt.right"" , 0 )"		653659	0					
ANR	654596	Callee	r_config_set_i		653659	0					
ANR	654597	Identifier	r_config_set_i		653659	0					
ANR	654598	ArgumentList	core -> config		653659	1					
ANR	654599	Argument	core -> config		653659	0					
ANR	654600	PtrMemberAccess	core -> config		653659	0					
ANR	654601	Identifier	core		653659	0					
ANR	654602	Identifier	config		653659	1					
ANR	654603	Argument	"""asm.cmt.right"""		653659	1					
ANR	654604	PrimaryExpression	"""asm.cmt.right"""		653659	0					
ANR	654605	Argument	0		653659	2					
ANR	654606	PrimaryExpression	0		653659	0					
ANR	654607	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.lines.fcn"" , 0 )"	1507:40:47645:47694	653659	8	True				
ANR	654608	CallExpression	"r_config_set_i ( core -> config , ""asm.lines.fcn"" , 0 )"		653659	0					
ANR	654609	Callee	r_config_set_i		653659	0					
ANR	654610	Identifier	r_config_set_i		653659	0					
ANR	654611	ArgumentList	core -> config		653659	1					
ANR	654612	Argument	core -> config		653659	0					
ANR	654613	PtrMemberAccess	core -> config		653659	0					
ANR	654614	Identifier	core		653659	0					
ANR	654615	Identifier	config		653659	1					
ANR	654616	Argument	"""asm.lines.fcn"""		653659	1					
ANR	654617	PrimaryExpression	"""asm.lines.fcn"""		653659	0					
ANR	654618	Argument	0		653659	2					
ANR	654619	PrimaryExpression	0		653659	0					
ANR	654620	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.bytes"" , 0 )"	1508:40:47736:47781	653659	9	True				
ANR	654621	CallExpression	"r_config_set_i ( core -> config , ""asm.bytes"" , 0 )"		653659	0					
ANR	654622	Callee	r_config_set_i		653659	0					
ANR	654623	Identifier	r_config_set_i		653659	0					
ANR	654624	ArgumentList	core -> config		653659	1					
ANR	654625	Argument	core -> config		653659	0					
ANR	654626	PtrMemberAccess	core -> config		653659	0					
ANR	654627	Identifier	core		653659	0					
ANR	654628	Identifier	config		653659	1					
ANR	654629	Argument	"""asm.bytes"""		653659	1					
ANR	654630	PrimaryExpression	"""asm.bytes"""		653659	0					
ANR	654631	Argument	0		653659	2					
ANR	654632	PrimaryExpression	0		653659	0					
ANR	654633	IfStatement	if ( ! is_star )		653659	10					
ANR	654634	Condition	! is_star	1509:44:47827:47834	653659	0	True				
ANR	654635	UnaryOperationExpression	! is_star		653659	0					
ANR	654636	UnaryOperator	!		653659	0					
ANR	654637	Identifier	is_star		653659	1					
ANR	654638	CompoundStatement		107:54:6117:6117	653659	1					
ANR	654639	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.color"" , 0 )"	1510:6:47845:47890	653659	0	True				
ANR	654640	CallExpression	"r_config_set_i ( core -> config , ""scr.color"" , 0 )"		653659	0					
ANR	654641	Callee	r_config_set_i		653659	0					
ANR	654642	Identifier	r_config_set_i		653659	0					
ANR	654643	ArgumentList	core -> config		653659	1					
ANR	654644	Argument	core -> config		653659	0					
ANR	654645	PtrMemberAccess	core -> config		653659	0					
ANR	654646	Identifier	core		653659	0					
ANR	654647	Identifier	config		653659	1					
ANR	654648	Argument	"""scr.color"""		653659	1					
ANR	654649	PrimaryExpression	"""scr.color"""		653659	0					
ANR	654650	Argument	0		653659	2					
ANR	654651	PrimaryExpression	0		653659	0					
ANR	654652	IfStatement	if ( bbi -> diff && bbi -> diff -> type != R_ANAL_DIFF_TYPE_MATCH && core -> c2 )		653659	11					
ANR	654653	Condition	bbi -> diff && bbi -> diff -> type != R_ANAL_DIFF_TYPE_MATCH && core -> c2	1513:44:48004:48069	653659	0	True				
ANR	654654	AndExpression	bbi -> diff && bbi -> diff -> type != R_ANAL_DIFF_TYPE_MATCH && core -> c2		653659	0		&&			
ANR	654655	PtrMemberAccess	bbi -> diff		653659	0					
ANR	654656	Identifier	bbi		653659	0					
ANR	654657	Identifier	diff		653659	1					
ANR	654658	AndExpression	bbi -> diff -> type != R_ANAL_DIFF_TYPE_MATCH && core -> c2		653659	1		&&			
ANR	654659	EqualityExpression	bbi -> diff -> type != R_ANAL_DIFF_TYPE_MATCH		653659	0		!=			
ANR	654660	PtrMemberAccess	bbi -> diff -> type		653659	0					
ANR	654661	PtrMemberAccess	bbi -> diff		653659	0					
ANR	654662	Identifier	bbi		653659	0					
ANR	654663	Identifier	diff		653659	1					
ANR	654664	Identifier	type		653659	1					
ANR	654665	Identifier	R_ANAL_DIFF_TYPE_MATCH		653659	1					
ANR	654666	PtrMemberAccess	core -> c2		653659	1					
ANR	654667	Identifier	core		653659	0					
ANR	654668	Identifier	c2		653659	1					
ANR	654669	CompoundStatement		118:48:6974:7194	653659	1					
ANR	654670	IdentifierDeclStatement	RCore * c = core -> c2 ;	1514:48:48122:48141	653659	0	True				
ANR	654671	IdentifierDecl	* c = core -> c2		653659	0					
ANR	654672	IdentifierDeclType	RCore *		653659	0					
ANR	654673	Identifier	c		653659	1					
ANR	654674	AssignmentExpression	* c = core -> c2		653659	2		=			
ANR	654675	Identifier	c		653659	0					
ANR	654676	PtrMemberAccess	core -> c2		653659	1					
ANR	654677	Identifier	core		653659	0					
ANR	654678	Identifier	c2		653659	1					
ANR	654679	IdentifierDeclStatement	RConfig * oc = c -> config ;	1515:48:48191:48214	653659	1	True				
ANR	654680	IdentifierDecl	* oc = c -> config		653659	0					
ANR	654681	IdentifierDeclType	RConfig *		653659	0					
ANR	654682	Identifier	oc		653659	1					
ANR	654683	AssignmentExpression	* oc = c -> config		653659	2		=			
ANR	654684	Identifier	oc		653659	0					
ANR	654685	PtrMemberAccess	c -> config		653659	1					
ANR	654686	Identifier	c		653659	0					
ANR	654687	Identifier	config		653659	1					
ANR	654688	Statement	char	1516:48:48264:48267	653659	2	True				
ANR	654689	Statement	*	1516:53:48269:48269	653659	3	True				
ANR	654690	Statement	str	1516:54:48270:48272	653659	4	True				
ANR	654691	Statement	=	1516:58:48274:48274	653659	5	True				
ANR	654692	Statement	r_core_cmd_strf	1516:60:48276:48290	653659	6	True				
ANR	654693	Statement	(	1516:76:48292:48292	653659	7	True				
ANR	654694	Statement	core	1516:77:48293:48296	653659	8	True				
ANR	654695	Statement	","	1516:81:48297:48297	653659	9	True				
ANR	654696	Statement	"""pdb @ 0x%08"""	1516:83:48299:48311	653659	10	True				
ANR	654697	Statement	PFMT64x	1516:96:48312:48318	653659	11	True				
ANR	654698	Statement	","	1516:103:48319:48319	653659	12	True				
ANR	654699	Statement	bbi	1516:105:48321:48323	653659	13	True				
ANR	654700	Statement	->	1516:108:48324:48325	653659	14	True				
ANR	654701	Statement	addr	1516:110:48326:48329	653659	15	True				
ANR	654702	Statement	)	1516:114:48330:48330	653659	16	True				
ANR	654703	ExpressionStatement		1516:115:48331:48331	653659	17	True				
ANR	654704	ExpressionStatement	c -> config = core -> config	1517:48:48381:48405	653659	18	True				
ANR	654705	AssignmentExpression	c -> config = core -> config		653659	0		=			
ANR	654706	PtrMemberAccess	c -> config		653659	0					
ANR	654707	Identifier	c		653659	0					
ANR	654708	Identifier	config		653659	1					
ANR	654709	PtrMemberAccess	core -> config		653659	1					
ANR	654710	Identifier	core		653659	0					
ANR	654711	Identifier	config		653659	1					
ANR	654712	Statement	char	1519:48:48573:48576	653659	19	True				
ANR	654713	Statement	*	1519:53:48578:48578	653659	20	True				
ANR	654714	Statement	str2	1519:54:48579:48582	653659	21	True				
ANR	654715	Statement	=	1519:59:48584:48584	653659	22	True				
ANR	654716	Statement	r_core_cmd_strf	1519:61:48586:48600	653659	23	True				
ANR	654717	Statement	(	1519:77:48602:48602	653659	24	True				
ANR	654718	Statement	c	1519:78:48603:48603	653659	25	True				
ANR	654719	Statement	","	1519:79:48604:48604	653659	26	True				
ANR	654720	Statement	"""pdb @ 0x%08"""	1519:81:48606:48618	653659	27	True				
ANR	654721	Statement	PFMT64x	1519:94:48619:48625	653659	28	True				
ANR	654722	Statement	","	1519:101:48626:48626	653659	29	True				
ANR	654723	Statement	bbi	1519:103:48628:48630	653659	30	True				
ANR	654724	Statement	->	1519:106:48631:48632	653659	31	True				
ANR	654725	Statement	diff	1519:108:48633:48636	653659	32	True				
ANR	654726	Statement	->	1519:112:48637:48638	653659	33	True				
ANR	654727	Statement	addr	1519:114:48639:48642	653659	34	True				
ANR	654728	Statement	)	1519:118:48643:48643	653659	35	True				
ANR	654729	ExpressionStatement		1519:119:48644:48644	653659	36	True				
ANR	654730	IdentifierDeclStatement	"char * diffstr = r_diff_buffers_to_string ( d , ( const ut8 * ) str , strlen ( str ) , ( const ut8 * ) str2 , strlen ( str2 ) ) ;"	1520:48:48694:48914	653659	37	True				
ANR	654731	IdentifierDecl	"* diffstr = r_diff_buffers_to_string ( d , ( const ut8 * ) str , strlen ( str ) , ( const ut8 * ) str2 , strlen ( str2 ) )"		653659	0					
ANR	654732	IdentifierDeclType	char *		653659	0					
ANR	654733	Identifier	diffstr		653659	1					
ANR	654734	AssignmentExpression	"* diffstr = r_diff_buffers_to_string ( d , ( const ut8 * ) str , strlen ( str ) , ( const ut8 * ) str2 , strlen ( str2 ) )"		653659	2		=			
ANR	654735	Identifier	diffstr		653659	0					
ANR	654736	CallExpression	"r_diff_buffers_to_string ( d , ( const ut8 * ) str , strlen ( str ) , ( const ut8 * ) str2 , strlen ( str2 ) )"		653659	1					
ANR	654737	Callee	r_diff_buffers_to_string		653659	0					
ANR	654738	Identifier	r_diff_buffers_to_string		653659	0					
ANR	654739	ArgumentList	d		653659	1					
ANR	654740	Argument	d		653659	0					
ANR	654741	Identifier	d		653659	0					
ANR	654742	Argument	( const ut8 * ) str		653659	1					
ANR	654743	CastExpression	( const ut8 * ) str		653659	0					
ANR	654744	CastTarget	const ut8 *		653659	0					
ANR	654745	Identifier	str		653659	1					
ANR	654746	Argument	strlen ( str )		653659	2					
ANR	654747	CallExpression	strlen ( str )		653659	0					
ANR	654748	Callee	strlen		653659	0					
ANR	654749	Identifier	strlen		653659	0					
ANR	654750	ArgumentList	str		653659	1					
ANR	654751	Argument	str		653659	0					
ANR	654752	Identifier	str		653659	0					
ANR	654753	Argument	( const ut8 * ) str2		653659	3					
ANR	654754	CastExpression	( const ut8 * ) str2		653659	0					
ANR	654755	CastTarget	const ut8 *		653659	0					
ANR	654756	Identifier	str2		653659	1					
ANR	654757	Argument	strlen ( str2 )		653659	4					
ANR	654758	CallExpression	strlen ( str2 )		653659	0					
ANR	654759	Callee	strlen		653659	0					
ANR	654760	Identifier	strlen		653659	0					
ANR	654761	ArgumentList	str2		653659	1					
ANR	654762	Argument	str2		653659	0					
ANR	654763	Identifier	str2		653659	0					
ANR	654764	IfStatement	if ( diffstr )		653659	38					
ANR	654765	Condition	diffstr	1524:10:48927:48933	653659	0	True				
ANR	654766	Identifier	diffstr		653659	0					
ANR	654767	CompoundStatement		123:7:7225:7258	653659	1					
ANR	654768	IdentifierDeclStatement	"char * nl = strchr ( diffstr , '\\n' ) ;"	1525:7:48945:48978	653659	0	True				
ANR	654769	IdentifierDecl	"* nl = strchr ( diffstr , '\\n' )"		653659	0					
ANR	654770	IdentifierDeclType	char *		653659	0					
ANR	654771	Identifier	nl		653659	1					
ANR	654772	AssignmentExpression	"* nl = strchr ( diffstr , '\\n' )"		653659	2		=			
ANR	654773	Identifier	nl		653659	0					
ANR	654774	CallExpression	"strchr ( diffstr , '\\n' )"		653659	1					
ANR	654775	Callee	strchr		653659	0					
ANR	654776	Identifier	strchr		653659	0					
ANR	654777	ArgumentList	diffstr		653659	1					
ANR	654778	Argument	diffstr		653659	0					
ANR	654779	Identifier	diffstr		653659	0					
ANR	654780	Argument	'\\n'		653659	1					
ANR	654781	PrimaryExpression	'\\n'		653659	0					
ANR	654782	IfStatement	if ( nl )		653659	1					
ANR	654783	Condition	nl	1526:11:48991:48992	653659	0	True				
ANR	654784	Identifier	nl		653659	0					
ANR	654785	CompoundStatement		124:15:7275:7275	653659	1					
ANR	654786	ExpressionStatement	"nl = strchr ( nl + 1 , '\\n' )"	1527:8:49005:49031	653659	0	True				
ANR	654787	AssignmentExpression	"nl = strchr ( nl + 1 , '\\n' )"		653659	0		=			
ANR	654788	Identifier	nl		653659	0					
ANR	654789	CallExpression	"strchr ( nl + 1 , '\\n' )"		653659	1					
ANR	654790	Callee	strchr		653659	0					
ANR	654791	Identifier	strchr		653659	0					
ANR	654792	ArgumentList	nl + 1		653659	1					
ANR	654793	Argument	nl + 1		653659	0					
ANR	654794	AdditiveExpression	nl + 1		653659	0		+			
ANR	654795	Identifier	nl		653659	0					
ANR	654796	PrimaryExpression	1		653659	1					
ANR	654797	Argument	'\\n'		653659	1					
ANR	654798	PrimaryExpression	'\\n'		653659	0					
ANR	654799	IfStatement	if ( nl )		653659	1					
ANR	654800	Condition	nl	1528:12:49045:49046	653659	0	True				
ANR	654801	Identifier	nl		653659	0					
ANR	654802	CompoundStatement		126:16:7329:7329	653659	1					
ANR	654803	ExpressionStatement	"nl = strchr ( nl + 1 , '\\n' )"	1529:9:49060:49086	653659	0	True				
ANR	654804	AssignmentExpression	"nl = strchr ( nl + 1 , '\\n' )"		653659	0		=			
ANR	654805	Identifier	nl		653659	0					
ANR	654806	CallExpression	"strchr ( nl + 1 , '\\n' )"		653659	1					
ANR	654807	Callee	strchr		653659	0					
ANR	654808	Identifier	strchr		653659	0					
ANR	654809	ArgumentList	nl + 1		653659	1					
ANR	654810	Argument	nl + 1		653659	0					
ANR	654811	AdditiveExpression	nl + 1		653659	0		+			
ANR	654812	Identifier	nl		653659	0					
ANR	654813	PrimaryExpression	1		653659	1					
ANR	654814	Argument	'\\n'		653659	1					
ANR	654815	PrimaryExpression	'\\n'		653659	0					
ANR	654816	IfStatement	if ( nl )		653659	1					
ANR	654817	Condition	nl	1530:13:49101:49102	653659	0	True				
ANR	654818	Identifier	nl		653659	0					
ANR	654819	CompoundStatement		128:17:7385:7385	653659	1					
ANR	654820	ExpressionStatement	"r_str_cpy ( diffstr , nl + 1 )"	1531:10:49117:49144	653659	0	True				
ANR	654821	CallExpression	"r_str_cpy ( diffstr , nl + 1 )"		653659	0					
ANR	654822	Callee	r_str_cpy		653659	0					
ANR	654823	Identifier	r_str_cpy		653659	0					
ANR	654824	ArgumentList	diffstr		653659	1					
ANR	654825	Argument	diffstr		653659	0					
ANR	654826	Identifier	diffstr		653659	0					
ANR	654827	Argument	nl + 1		653659	1					
ANR	654828	AdditiveExpression	nl + 1		653659	0		+			
ANR	654829	Identifier	nl		653659	0					
ANR	654830	PrimaryExpression	1		653659	1					
ANR	654831	IfStatement	if ( is_star )		653659	39					
ANR	654832	Condition	is_star	1537:52:49237:49243	653659	0	True				
ANR	654833	Identifier	is_star		653659	0					
ANR	654834	CompoundStatement		137:56:7677:7727	653659	1					
ANR	654835	IdentifierDeclStatement	char * title = get_title ( bbi -> addr ) ;	1538:56:49304:49339	653659	0	True				
ANR	654836	IdentifierDecl	* title = get_title ( bbi -> addr )		653659	0					
ANR	654837	IdentifierDeclType	char *		653659	0					
ANR	654838	Identifier	title		653659	1					
ANR	654839	AssignmentExpression	* title = get_title ( bbi -> addr )		653659	2		=			
ANR	654840	Identifier	title		653659	0					
ANR	654841	CallExpression	get_title ( bbi -> addr )		653659	1					
ANR	654842	Callee	get_title		653659	0					
ANR	654843	Identifier	get_title		653659	0					
ANR	654844	ArgumentList	bbi -> addr		653659	1					
ANR	654845	Argument	bbi -> addr		653659	0					
ANR	654846	PtrMemberAccess	bbi -> addr		653659	0					
ANR	654847	Identifier	bbi		653659	0					
ANR	654848	Identifier	addr		653659	1					
ANR	654849	IdentifierDeclStatement	"char * body_b64 = r_base64_encode_dyn ( diffstr , - 1 ) ;"	1539:56:49397:49447	653659	1	True				
ANR	654850	IdentifierDecl	"* body_b64 = r_base64_encode_dyn ( diffstr , - 1 )"		653659	0					
ANR	654851	IdentifierDeclType	char *		653659	0					
ANR	654852	Identifier	body_b64		653659	1					
ANR	654853	AssignmentExpression	"* body_b64 = r_base64_encode_dyn ( diffstr , - 1 )"		653659	2		=			
ANR	654854	Identifier	body_b64		653659	0					
ANR	654855	CallExpression	"r_base64_encode_dyn ( diffstr , - 1 )"		653659	1					
ANR	654856	Callee	r_base64_encode_dyn		653659	0					
ANR	654857	Identifier	r_base64_encode_dyn		653659	0					
ANR	654858	ArgumentList	diffstr		653659	1					
ANR	654859	Argument	diffstr		653659	0					
ANR	654860	Identifier	diffstr		653659	0					
ANR	654861	Argument	- 1		653659	1					
ANR	654862	UnaryOperationExpression	- 1		653659	0					
ANR	654863	UnaryOperator	-		653659	0					
ANR	654864	PrimaryExpression	1		653659	1					
ANR	654865	IfStatement	if ( ! title || ! body_b64 )		653659	2					
ANR	654866	Condition	! title || ! body_b64	1540:60:49509:49528	653659	0	True				
ANR	654867	OrExpression	! title || ! body_b64		653659	0		||			
ANR	654868	UnaryOperationExpression	! title		653659	0					
ANR	654869	UnaryOperator	!		653659	0					
ANR	654870	Identifier	title		653659	1					
ANR	654871	UnaryOperationExpression	! body_b64		653659	1					
ANR	654872	UnaryOperator	!		653659	0					
ANR	654873	Identifier	body_b64		653659	1					
ANR	654874	CompoundStatement		138:82:7811:7811	653659	1					
ANR	654875	ExpressionStatement	free ( body_b64 )	1541:64:49597:49612	653659	0	True				
ANR	654876	CallExpression	free ( body_b64 )		653659	0					
ANR	654877	Callee	free		653659	0					
ANR	654878	Identifier	free		653659	0					
ANR	654879	ArgumentList	body_b64		653659	1					
ANR	654880	Argument	body_b64		653659	0					
ANR	654881	Identifier	body_b64		653659	0					
ANR	654882	ExpressionStatement	free ( title )	1542:64:49678:49690	653659	1	True				
ANR	654883	CallExpression	free ( title )		653659	0					
ANR	654884	Callee	free		653659	0					
ANR	654885	Identifier	free		653659	0					
ANR	654886	ArgumentList	title		653659	1					
ANR	654887	Argument	title		653659	0					
ANR	654888	Identifier	title		653659	0					
ANR	654889	ReturnStatement	return false ;	1543:64:49756:49768	653659	2	True				
ANR	654890	Identifier	false		653659	0					
ANR	654891	ExpressionStatement	"body_b64 = r_str_prepend ( body_b64 , ""base64:"" )"	1545:56:49884:49930	653659	3	True				
ANR	654892	AssignmentExpression	"body_b64 = r_str_prepend ( body_b64 , ""base64:"" )"		653659	0		=			
ANR	654893	Identifier	body_b64		653659	0					
ANR	654894	CallExpression	"r_str_prepend ( body_b64 , ""base64:"" )"		653659	1					
ANR	654895	Callee	r_str_prepend		653659	0					
ANR	654896	Identifier	r_str_prepend		653659	0					
ANR	654897	ArgumentList	body_b64		653659	1					
ANR	654898	Argument	body_b64		653659	0					
ANR	654899	Identifier	body_b64		653659	0					
ANR	654900	Argument	"""base64:"""		653659	1					
ANR	654901	PrimaryExpression	"""base64:"""		653659	0					
ANR	654902	ExpressionStatement	"r_cons_printf ( ""agn %s %s %d\\n"" , title , body_b64 , bbi -> diff -> type )"	1546:56:49988:50054	653659	4	True				
ANR	654903	CallExpression	"r_cons_printf ( ""agn %s %s %d\\n"" , title , body_b64 , bbi -> diff -> type )"		653659	0					
ANR	654904	Callee	r_cons_printf		653659	0					
ANR	654905	Identifier	r_cons_printf		653659	0					
ANR	654906	ArgumentList	"""agn %s %s %d\\n"""		653659	1					
ANR	654907	Argument	"""agn %s %s %d\\n"""		653659	0					
ANR	654908	PrimaryExpression	"""agn %s %s %d\\n"""		653659	0					
ANR	654909	Argument	title		653659	1					
ANR	654910	Identifier	title		653659	0					
ANR	654911	Argument	body_b64		653659	2					
ANR	654912	Identifier	body_b64		653659	0					
ANR	654913	Argument	bbi -> diff -> type		653659	3					
ANR	654914	PtrMemberAccess	bbi -> diff -> type		653659	0					
ANR	654915	PtrMemberAccess	bbi -> diff		653659	0					
ANR	654916	Identifier	bbi		653659	0					
ANR	654917	Identifier	diff		653659	1					
ANR	654918	Identifier	type		653659	1					
ANR	654919	ExpressionStatement	free ( body_b64 )	1547:56:50112:50127	653659	5	True				
ANR	654920	CallExpression	free ( body_b64 )		653659	0					
ANR	654921	Callee	free		653659	0					
ANR	654922	Identifier	free		653659	0					
ANR	654923	ArgumentList	body_b64		653659	1					
ANR	654924	Argument	body_b64		653659	0					
ANR	654925	Identifier	body_b64		653659	0					
ANR	654926	ExpressionStatement	free ( title )	1548:56:50185:50197	653659	6	True				
ANR	654927	CallExpression	free ( title )		653659	0					
ANR	654928	Callee	free		653659	0					
ANR	654929	Identifier	free		653659	0					
ANR	654930	ArgumentList	title		653659	1					
ANR	654931	Argument	title		653659	0					
ANR	654932	Identifier	title		653659	0					
ANR	654933	ElseStatement	else		653659	0					
ANR	654934	CompoundStatement		147:55:8534:8534	653659	0					
ANR	654935	ExpressionStatement	"diffstr = r_str_replace ( diffstr , ""\\n"" , ""\\\\l"" , 1 )"	1550:7:50263:50312	653659	0	True				
ANR	654936	AssignmentExpression	"diffstr = r_str_replace ( diffstr , ""\\n"" , ""\\\\l"" , 1 )"		653659	0		=			
ANR	654937	Identifier	diffstr		653659	0					
ANR	654938	CallExpression	"r_str_replace ( diffstr , ""\\n"" , ""\\\\l"" , 1 )"		653659	1					
ANR	654939	Callee	r_str_replace		653659	0					
ANR	654940	Identifier	r_str_replace		653659	0					
ANR	654941	ArgumentList	diffstr		653659	1					
ANR	654942	Argument	diffstr		653659	0					
ANR	654943	Identifier	diffstr		653659	0					
ANR	654944	Argument	"""\\n"""		653659	1					
ANR	654945	PrimaryExpression	"""\\n"""		653659	0					
ANR	654946	Argument	"""\\\\l"""		653659	2					
ANR	654947	PrimaryExpression	"""\\\\l"""		653659	0					
ANR	654948	Argument	1		653659	3					
ANR	654949	PrimaryExpression	1		653659	0					
ANR	654950	ExpressionStatement	"diffstr = r_str_replace ( diffstr , ""\\"""" , ""'"" , 1 )"	1551:7:50321:50368	653659	1	True				
ANR	654951	AssignmentExpression	"diffstr = r_str_replace ( diffstr , ""\\"""" , ""'"" , 1 )"		653659	0		=			
ANR	654952	Identifier	diffstr		653659	0					
ANR	654953	CallExpression	"r_str_replace ( diffstr , ""\\"""" , ""'"" , 1 )"		653659	1					
ANR	654954	Callee	r_str_replace		653659	0					
ANR	654955	Identifier	r_str_replace		653659	0					
ANR	654956	ArgumentList	diffstr		653659	1					
ANR	654957	Argument	diffstr		653659	0					
ANR	654958	Identifier	diffstr		653659	0					
ANR	654959	Argument	"""\\"""""		653659	1					
ANR	654960	PrimaryExpression	"""\\"""""		653659	0					
ANR	654961	Argument	"""'"""		653659	2					
ANR	654962	PrimaryExpression	"""'"""		653659	0					
ANR	654963	Argument	1		653659	3					
ANR	654964	PrimaryExpression	1		653659	0					
ANR	654965	Statement	r_cons_printf	1552:56:50426:50438	653659	2	True				
ANR	654966	Statement	(	1552:69:50439:50439	653659	3	True				
ANR	654967	Statement	""" \\""0x%08"""	1552:70:50440:50449	653659	4	True				
ANR	654968	Statement	PFMT64x	1552:80:50450:50456	653659	5	True				
ANR	654969	Statement	"""\\"" [fillcolor=\\""%s\\"","""	1552:87:50457:50479	653659	6	True				
ANR	654970	Statement	"""color=\\""black\\"", fontname=\\""Courier\\"","""	1553:56:50537:50576	653659	7	True				
ANR	654971	Statement	""" label=\\""%s\\"", URL=\\""%s/0x%08"""	1554:56:50634:50664	653659	8	True				
ANR	654972	Statement	PFMT64x	1554:87:50665:50671	653659	9	True				
ANR	654973	Statement	"""\\""]\\n"""	1554:94:50672:50678	653659	10	True				
ANR	654974	Statement	","	1554:101:50679:50679	653659	11	True				
ANR	654975	Statement	bbi	1555:56:50737:50739	653659	12	True				
ANR	654976	Statement	->	1555:59:50740:50741	653659	13	True				
ANR	654977	Statement	addr	1555:61:50742:50745	653659	14	True				
ANR	654978	Statement	","	1555:65:50746:50746	653659	15	True				
ANR	654979	Statement	difftype	1555:67:50748:50755	653659	16	True				
ANR	654980	Statement	","	1555:75:50756:50756	653659	17	True				
ANR	654981	Statement	diffstr	1555:77:50758:50764	653659	18	True				
ANR	654982	Statement	","	1555:84:50765:50765	653659	19	True				
ANR	654983	Statement	fcn	1555:86:50767:50769	653659	20	True				
ANR	654984	Statement	->	1555:89:50770:50771	653659	21	True				
ANR	654985	Statement	name	1555:91:50772:50775	653659	22	True				
ANR	654986	Statement	","	1555:95:50776:50776	653659	23	True				
ANR	654987	Statement	bbi	1556:56:50834:50836	653659	24	True				
ANR	654988	Statement	->	1556:59:50837:50838	653659	25	True				
ANR	654989	Statement	addr	1556:61:50839:50842	653659	26	True				
ANR	654990	Statement	)	1556:65:50843:50843	653659	27	True				
ANR	654991	ExpressionStatement		1556:66:50844:50844	653659	28	True				
ANR	654992	ExpressionStatement	free ( diffstr )	1558:48:50944:50958	653659	40	True				
ANR	654993	CallExpression	free ( diffstr )		653659	0					
ANR	654994	Callee	free		653659	0					
ANR	654995	Identifier	free		653659	0					
ANR	654996	ArgumentList	diffstr		653659	1					
ANR	654997	Argument	diffstr		653659	0					
ANR	654998	Identifier	diffstr		653659	0					
ANR	654999	ExpressionStatement	c -> config = oc	1559:48:51008:51022	653659	41	True				
ANR	655000	AssignmentExpression	c -> config = oc		653659	0		=			
ANR	655001	PtrMemberAccess	c -> config		653659	0					
ANR	655002	Identifier	c		653659	0					
ANR	655003	Identifier	config		653659	1					
ANR	655004	Identifier	oc		653659	1					
ANR	655005	ElseStatement	else		653659	0					
ANR	655006	CompoundStatement		158:47:9351:9351	653659	0					
ANR	655007	IfStatement	if ( is_star )		653659	0					
ANR	655008	Condition	is_star	1561:52:51125:51131	653659	0	True				
ANR	655009	Identifier	is_star		653659	0					
ANR	655010	CompoundStatement		162:56:9669:9721	653659	1					
ANR	655011	IdentifierDeclStatement	char * title = get_title ( bbi -> addr ) ;	1562:56:51192:51227	653659	0	True				
ANR	655012	IdentifierDecl	* title = get_title ( bbi -> addr )		653659	0					
ANR	655013	IdentifierDeclType	char *		653659	0					
ANR	655014	Identifier	title		653659	1					
ANR	655015	AssignmentExpression	* title = get_title ( bbi -> addr )		653659	2		=			
ANR	655016	Identifier	title		653659	0					
ANR	655017	CallExpression	get_title ( bbi -> addr )		653659	1					
ANR	655018	Callee	get_title		653659	0					
ANR	655019	Identifier	get_title		653659	0					
ANR	655020	ArgumentList	bbi -> addr		653659	1					
ANR	655021	Argument	bbi -> addr		653659	0					
ANR	655022	PtrMemberAccess	bbi -> addr		653659	0					
ANR	655023	Identifier	bbi		653659	0					
ANR	655024	Identifier	addr		653659	1					
ANR	655025	IdentifierDeclStatement	"char * body_b64 = r_base64_encode_dyn ( str , - 1 ) ;"	1563:56:51285:51331	653659	1	True				
ANR	655026	IdentifierDecl	"* body_b64 = r_base64_encode_dyn ( str , - 1 )"		653659	0					
ANR	655027	IdentifierDeclType	char *		653659	0					
ANR	655028	Identifier	body_b64		653659	1					
ANR	655029	AssignmentExpression	"* body_b64 = r_base64_encode_dyn ( str , - 1 )"		653659	2		=			
ANR	655030	Identifier	body_b64		653659	0					
ANR	655031	CallExpression	"r_base64_encode_dyn ( str , - 1 )"		653659	1					
ANR	655032	Callee	r_base64_encode_dyn		653659	0					
ANR	655033	Identifier	r_base64_encode_dyn		653659	0					
ANR	655034	ArgumentList	str		653659	1					
ANR	655035	Argument	str		653659	0					
ANR	655036	Identifier	str		653659	0					
ANR	655037	Argument	- 1		653659	1					
ANR	655038	UnaryOperationExpression	- 1		653659	0					
ANR	655039	UnaryOperator	-		653659	0					
ANR	655040	PrimaryExpression	1		653659	1					
ANR	655041	IdentifierDeclStatement	int color = ( bbi && bbi -> diff ) ? bbi -> diff -> type : 0 ;	1564:56:51389:51441	653659	2	True				
ANR	655042	IdentifierDecl	color = ( bbi && bbi -> diff ) ? bbi -> diff -> type : 0		653659	0					
ANR	655043	IdentifierDeclType	int		653659	0					
ANR	655044	Identifier	color		653659	1					
ANR	655045	AssignmentExpression	color = ( bbi && bbi -> diff ) ? bbi -> diff -> type : 0		653659	2		=			
ANR	655046	Identifier	color		653659	0					
ANR	655047	ConditionalExpression	( bbi && bbi -> diff ) ? bbi -> diff -> type : 0		653659	1					
ANR	655048	Condition	bbi && bbi -> diff		653659	0					
ANR	655049	AndExpression	bbi && bbi -> diff		653659	0		&&			
ANR	655050	Identifier	bbi		653659	0					
ANR	655051	PtrMemberAccess	bbi -> diff		653659	1					
ANR	655052	Identifier	bbi		653659	0					
ANR	655053	Identifier	diff		653659	1					
ANR	655054	PtrMemberAccess	bbi -> diff -> type		653659	1					
ANR	655055	PtrMemberAccess	bbi -> diff		653659	0					
ANR	655056	Identifier	bbi		653659	0					
ANR	655057	Identifier	diff		653659	1					
ANR	655058	Identifier	type		653659	1					
ANR	655059	PrimaryExpression	0		653659	2					
ANR	655060	IfStatement	if ( ! title || ! body_b64 )		653659	3					
ANR	655061	Condition	! title || ! body_b64	1565:60:51503:51522	653659	0	True				
ANR	655062	OrExpression	! title || ! body_b64		653659	0		||			
ANR	655063	UnaryOperationExpression	! title		653659	0					
ANR	655064	UnaryOperator	!		653659	0					
ANR	655065	Identifier	title		653659	1					
ANR	655066	UnaryOperationExpression	! body_b64		653659	1					
ANR	655067	UnaryOperator	!		653659	0					
ANR	655068	Identifier	body_b64		653659	1					
ANR	655069	CompoundStatement		163:82:9805:9805	653659	1					
ANR	655070	ExpressionStatement	free ( body_b64 )	1566:64:51591:51606	653659	0	True				
ANR	655071	CallExpression	free ( body_b64 )		653659	0					
ANR	655072	Callee	free		653659	0					
ANR	655073	Identifier	free		653659	0					
ANR	655074	ArgumentList	body_b64		653659	1					
ANR	655075	Argument	body_b64		653659	0					
ANR	655076	Identifier	body_b64		653659	0					
ANR	655077	ExpressionStatement	free ( title )	1567:64:51672:51684	653659	1	True				
ANR	655078	CallExpression	free ( title )		653659	0					
ANR	655079	Callee	free		653659	0					
ANR	655080	Identifier	free		653659	0					
ANR	655081	ArgumentList	title		653659	1					
ANR	655082	Argument	title		653659	0					
ANR	655083	Identifier	title		653659	0					
ANR	655084	ReturnStatement	return false ;	1568:64:51750:51762	653659	2	True				
ANR	655085	Identifier	false		653659	0					
ANR	655086	ExpressionStatement	"body_b64 = r_str_prepend ( body_b64 , ""base64:"" )"	1570:56:51878:51924	653659	4	True				
ANR	655087	AssignmentExpression	"body_b64 = r_str_prepend ( body_b64 , ""base64:"" )"		653659	0		=			
ANR	655088	Identifier	body_b64		653659	0					
ANR	655089	CallExpression	"r_str_prepend ( body_b64 , ""base64:"" )"		653659	1					
ANR	655090	Callee	r_str_prepend		653659	0					
ANR	655091	Identifier	r_str_prepend		653659	0					
ANR	655092	ArgumentList	body_b64		653659	1					
ANR	655093	Argument	body_b64		653659	0					
ANR	655094	Identifier	body_b64		653659	0					
ANR	655095	Argument	"""base64:"""		653659	1					
ANR	655096	PrimaryExpression	"""base64:"""		653659	0					
ANR	655097	ExpressionStatement	"r_cons_printf ( ""agn %s %s %d\\n"" , title , body_b64 , color )"	1571:56:51982:52038	653659	5	True				
ANR	655098	CallExpression	"r_cons_printf ( ""agn %s %s %d\\n"" , title , body_b64 , color )"		653659	0					
ANR	655099	Callee	r_cons_printf		653659	0					
ANR	655100	Identifier	r_cons_printf		653659	0					
ANR	655101	ArgumentList	"""agn %s %s %d\\n"""		653659	1					
ANR	655102	Argument	"""agn %s %s %d\\n"""		653659	0					
ANR	655103	PrimaryExpression	"""agn %s %s %d\\n"""		653659	0					
ANR	655104	Argument	title		653659	1					
ANR	655105	Identifier	title		653659	0					
ANR	655106	Argument	body_b64		653659	2					
ANR	655107	Identifier	body_b64		653659	0					
ANR	655108	Argument	color		653659	3					
ANR	655109	Identifier	color		653659	0					
ANR	655110	ExpressionStatement	free ( body_b64 )	1572:56:52096:52111	653659	6	True				
ANR	655111	CallExpression	free ( body_b64 )		653659	0					
ANR	655112	Callee	free		653659	0					
ANR	655113	Identifier	free		653659	0					
ANR	655114	ArgumentList	body_b64		653659	1					
ANR	655115	Argument	body_b64		653659	0					
ANR	655116	Identifier	body_b64		653659	0					
ANR	655117	ExpressionStatement	free ( title )	1573:56:52169:52181	653659	7	True				
ANR	655118	CallExpression	free ( title )		653659	0					
ANR	655119	Callee	free		653659	0					
ANR	655120	Identifier	free		653659	0					
ANR	655121	ArgumentList	title		653659	1					
ANR	655122	Argument	title		653659	0					
ANR	655123	Identifier	title		653659	0					
ANR	655124	ElseStatement	else		653659	0					
ANR	655125	CompoundStatement		172:55:10518:10518	653659	0					
ANR	655126	Statement	r_cons_printf	1575:56:52296:52308	653659	0	True				
ANR	655127	Statement	(	1575:69:52309:52309	653659	1	True				
ANR	655128	Statement	""" \\""0x%08"""	1575:70:52310:52319	653659	2	True				
ANR	655129	Statement	PFMT64x	1575:80:52320:52326	653659	3	True				
ANR	655130	Statement	"""\\"" [fillcolor=\\""%s\\"","""	1575:87:52327:52349	653659	4	True				
ANR	655131	Statement	"""color=\\""black\\"", fontname=\\""Courier\\"","""	1576:78:52429:52468	653659	5	True				
ANR	655132	Statement	""" label=\\""%s\\"", URL=\\""%s/0x%08"""	1577:78:52548:52578	653659	6	True				
ANR	655133	Statement	PFMT64x	1577:109:52579:52585	653659	7	True				
ANR	655134	Statement	"""\\""]\\n"""	1577:116:52586:52592	653659	8	True				
ANR	655135	Statement	","	1577:123:52593:52593	653659	9	True				
ANR	655136	Statement	bbi	1578:78:52673:52675	653659	10	True				
ANR	655137	Statement	->	1578:81:52676:52677	653659	11	True				
ANR	655138	Statement	addr	1578:83:52678:52681	653659	12	True				
ANR	655139	Statement	","	1578:87:52682:52682	653659	13	True				
ANR	655140	Statement	difftype	1578:89:52684:52691	653659	14	True				
ANR	655141	Statement	","	1578:97:52692:52692	653659	15	True				
ANR	655142	Statement	str	1578:99:52694:52696	653659	16	True				
ANR	655143	Statement	","	1578:102:52697:52697	653659	17	True				
ANR	655144	Statement	fcn	1578:104:52699:52701	653659	18	True				
ANR	655145	Statement	->	1578:107:52702:52703	653659	19	True				
ANR	655146	Statement	name	1578:109:52704:52707	653659	20	True				
ANR	655147	Statement	","	1578:113:52708:52708	653659	21	True				
ANR	655148	Statement	bbi	1578:115:52710:52712	653659	22	True				
ANR	655149	Statement	->	1578:118:52713:52714	653659	23	True				
ANR	655150	Statement	addr	1578:120:52715:52718	653659	24	True				
ANR	655151	Statement	)	1578:124:52719:52719	653659	25	True				
ANR	655152	ExpressionStatement		1578:125:52720:52720	653659	26	True				
ANR	655153	ExpressionStatement	r_diff_free ( d )	1581:40:52854:52869	653659	12	True				
ANR	655154	CallExpression	r_diff_free ( d )		653659	0					
ANR	655155	Callee	r_diff_free		653659	0					
ANR	655156	Identifier	r_diff_free		653659	0					
ANR	655157	ArgumentList	d		653659	1					
ANR	655158	Argument	d		653659	0					
ANR	655159	Identifier	d		653659	0					
ANR	655160	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.color"" , 1 )"	1582:40:52911:52956	653659	13	True				
ANR	655161	CallExpression	"r_config_set_i ( core -> config , ""scr.color"" , 1 )"		653659	0					
ANR	655162	Callee	r_config_set_i		653659	0					
ANR	655163	Identifier	r_config_set_i		653659	0					
ANR	655164	ArgumentList	core -> config		653659	1					
ANR	655165	Argument	core -> config		653659	0					
ANR	655166	PtrMemberAccess	core -> config		653659	0					
ANR	655167	Identifier	core		653659	0					
ANR	655168	Identifier	config		653659	1					
ANR	655169	Argument	"""scr.color"""		653659	1					
ANR	655170	PrimaryExpression	"""scr.color"""		653659	0					
ANR	655171	Argument	1		653659	2					
ANR	655172	PrimaryExpression	1		653659	0					
ANR	655173	ExpressionStatement	r_config_hold_free ( hc )	1583:40:52998:53021	653659	14	True				
ANR	655174	CallExpression	r_config_hold_free ( hc )		653659	0					
ANR	655175	Callee	r_config_hold_free		653659	0					
ANR	655176	Identifier	r_config_hold_free		653659	0					
ANR	655177	ArgumentList	hc		653659	1					
ANR	655178	Argument	hc		653659	0					
ANR	655179	Identifier	hc		653659	0					
ANR	655180	ElseStatement	else		653659	0					
ANR	655181	CompoundStatement		183:31:11368:11368	653659	0					
ANR	655182	IfStatement	if ( is_html )		653659	0					
ANR	655183	Condition	is_html	1586:36:53126:53132	653659	0	True				
ANR	655184	Identifier	is_html		653659	0					
ANR	655185	CompoundStatement		184:45:11415:11415	653659	1					
ANR	655186	ExpressionStatement	nodes ++	1587:40:53177:53184	653659	0	True				
ANR	655187	PostIncDecOperationExpression	nodes ++		653659	0					
ANR	655188	Identifier	nodes		653659	0					
ANR	655189	IncDec	++		653659	1					
ANR	655190	Statement	r_cons_printf	1588:40:53226:53238	653659	1	True				
ANR	655191	Statement	(	1588:54:53240:53240	653659	2	True				
ANR	655192	Statement	"""<p class=\\""block draggable\\"" style=\\"""""	1588:55:53241:53279	653659	3	True				
ANR	655193	Statement	"""top: %dpx; left: %dpx; width: 400px;\\"" id=\\"""""	1589:63:53344:53389	653659	4	True				
ANR	655194	Statement	"""_0x%08"""	1590:63:53454:53461	653659	5	True				
ANR	655195	Statement	PFMT64x	1590:71:53462:53468	653659	6	True				
ANR	655196	Statement	"""\\"">\\n%s</p>\\n"""	1590:78:53469:53483	653659	7	True				
ANR	655197	Statement	","	1590:93:53484:53484	653659	8	True				
ANR	655198	Statement	top	1591:63:53549:53551	653659	9	True				
ANR	655199	Statement	","	1591:66:53552:53552	653659	10	True				
ANR	655200	Statement	left	1591:68:53554:53557	653659	11	True				
ANR	655201	Statement	","	1591:72:53558:53558	653659	12	True				
ANR	655202	Statement	bbi	1591:74:53560:53562	653659	13	True				
ANR	655203	Statement	->	1591:77:53563:53564	653659	14	True				
ANR	655204	Statement	addr	1591:79:53565:53568	653659	15	True				
ANR	655205	Statement	","	1591:83:53569:53569	653659	16	True				
ANR	655206	Statement	str	1591:85:53571:53573	653659	17	True				
ANR	655207	Statement	)	1591:88:53574:53574	653659	18	True				
ANR	655208	ExpressionStatement		1591:89:53575:53575	653659	19	True				
ANR	655209	ExpressionStatement	left = left ? 0 : 600	1592:40:53617:53636	653659	20	True				
ANR	655210	AssignmentExpression	left = left ? 0 : 600		653659	0		=			
ANR	655211	Identifier	left		653659	0					
ANR	655212	ConditionalExpression	left ? 0 : 600		653659	1					
ANR	655213	Condition	left		653659	0					
ANR	655214	Identifier	left		653659	0					
ANR	655215	PrimaryExpression	0		653659	1					
ANR	655216	PrimaryExpression	600		653659	2					
ANR	655217	IfStatement	if ( ! left )		653659	21					
ANR	655218	Condition	! left	1593:44:53682:53686	653659	0	True				
ANR	655219	UnaryOperationExpression	! left		653659	0					
ANR	655220	UnaryOperator	!		653659	0					
ANR	655221	Identifier	left		653659	1					
ANR	655222	CompoundStatement		191:51:11969:11969	653659	1					
ANR	655223	ExpressionStatement	top += 250	1594:48:53739:53749	653659	0	True				
ANR	655224	AssignmentExpression	top += 250		653659	0		+=			
ANR	655225	Identifier	top		653659	0					
ANR	655226	PrimaryExpression	250		653659	1					
ANR	655227	ElseStatement	else		653659	0					
ANR	655228	IfStatement	if ( ! is_json && ! is_keva )		653659	0					
ANR	655229	Condition	! is_json && ! is_keva	1596:43:53836:53855	653659	0	True				
ANR	655230	AndExpression	! is_json && ! is_keva		653659	0		&&			
ANR	655231	UnaryOperationExpression	! is_json		653659	0					
ANR	655232	UnaryOperator	!		653659	0					
ANR	655233	Identifier	is_json		653659	1					
ANR	655234	UnaryOperationExpression	! is_keva		653659	1					
ANR	655235	UnaryOperator	!		653659	0					
ANR	655236	Identifier	is_keva		653659	1					
ANR	655237	CompoundStatement		201:40:12614:12698	653659	1					
ANR	655238	IdentifierDeclStatement	"bool current = r_anal_bb_is_in_offset ( bbi , core -> offset ) ;"	1597:40:53900:53957	653659	0	True				
ANR	655239	IdentifierDecl	"current = r_anal_bb_is_in_offset ( bbi , core -> offset )"		653659	0					
ANR	655240	IdentifierDeclType	bool		653659	0					
ANR	655241	Identifier	current		653659	1					
ANR	655242	AssignmentExpression	"current = r_anal_bb_is_in_offset ( bbi , core -> offset )"		653659	2		=			
ANR	655243	Identifier	current		653659	0					
ANR	655244	CallExpression	"r_anal_bb_is_in_offset ( bbi , core -> offset )"		653659	1					
ANR	655245	Callee	r_anal_bb_is_in_offset		653659	0					
ANR	655246	Identifier	r_anal_bb_is_in_offset		653659	0					
ANR	655247	ArgumentList	bbi		653659	1					
ANR	655248	Argument	bbi		653659	0					
ANR	655249	Identifier	bbi		653659	0					
ANR	655250	Argument	core -> offset		653659	1					
ANR	655251	PtrMemberAccess	core -> offset		653659	0					
ANR	655252	Identifier	core		653659	0					
ANR	655253	Identifier	offset		653659	1					
ANR	655254	IdentifierDeclStatement	const char * label_color = bbi -> traced ? pal_traced : ( current && color_current ) ? pal_curr : pal_box4 ;	1598:40:53999:54292	653659	1	True				
ANR	655255	IdentifierDecl	* label_color = bbi -> traced ? pal_traced : ( current && color_current ) ? pal_curr : pal_box4		653659	0					
ANR	655256	IdentifierDeclType	const char *		653659	0					
ANR	655257	Identifier	label_color		653659	1					
ANR	655258	AssignmentExpression	* label_color = bbi -> traced ? pal_traced : ( current && color_current ) ? pal_curr : pal_box4		653659	2		=			
ANR	655259	Identifier	label_color		653659	0					
ANR	655260	ConditionalExpression	bbi -> traced ? pal_traced : ( current && color_current ) ? pal_curr : pal_box4		653659	1					
ANR	655261	Condition	bbi -> traced		653659	0					
ANR	655262	PtrMemberAccess	bbi -> traced		653659	0					
ANR	655263	Identifier	bbi		653659	0					
ANR	655264	Identifier	traced		653659	1					
ANR	655265	Identifier	pal_traced		653659	1					
ANR	655266	ConditionalExpression	( current && color_current ) ? pal_curr : pal_box4		653659	2					
ANR	655267	Condition	current && color_current		653659	0					
ANR	655268	AndExpression	current && color_current		653659	0		&&			
ANR	655269	Identifier	current		653659	0					
ANR	655270	Identifier	color_current		653659	1					
ANR	655271	Identifier	pal_curr		653659	1					
ANR	655272	Identifier	pal_box4		653659	2					
ANR	655273	IdentifierDeclStatement	"const char * fill_color = ( current || label_color == pal_traced ) ? pal_traced : ""white"" ;"	1603:40:54334:54418	653659	2	True				
ANR	655274	IdentifierDecl	"* fill_color = ( current || label_color == pal_traced ) ? pal_traced : ""white"""		653659	0					
ANR	655275	IdentifierDeclType	const char *		653659	0					
ANR	655276	Identifier	fill_color		653659	1					
ANR	655277	AssignmentExpression	"* fill_color = ( current || label_color == pal_traced ) ? pal_traced : ""white"""		653659	2		=			
ANR	655278	Identifier	fill_color		653659	0					
ANR	655279	ConditionalExpression	"( current || label_color == pal_traced ) ? pal_traced : ""white"""		653659	1					
ANR	655280	Condition	current || label_color == pal_traced		653659	0					
ANR	655281	OrExpression	current || label_color == pal_traced		653659	0		||			
ANR	655282	Identifier	current		653659	0					
ANR	655283	EqualityExpression	label_color == pal_traced		653659	1		==			
ANR	655284	Identifier	label_color		653659	0					
ANR	655285	Identifier	pal_traced		653659	1					
ANR	655286	Identifier	pal_traced		653659	1					
ANR	655287	PrimaryExpression	"""white"""		653659	2					
ANR	655288	ExpressionStatement	nodes ++	1604:40:54460:54467	653659	3	True				
ANR	655289	PostIncDecOperationExpression	nodes ++		653659	0					
ANR	655290	Identifier	nodes		653659	0					
ANR	655291	IncDec	++		653659	1					
ANR	655292	IfStatement	if ( is_star )		653659	4					
ANR	655293	Condition	is_star	1605:44:54513:54519	653659	0	True				
ANR	655294	Identifier	is_star		653659	0					
ANR	655295	CompoundStatement		206:48:13033:13085	653659	1					
ANR	655296	IdentifierDeclStatement	char * title = get_title ( bbi -> addr ) ;	1606:48:54572:54607	653659	0	True				
ANR	655297	IdentifierDecl	* title = get_title ( bbi -> addr )		653659	0					
ANR	655298	IdentifierDeclType	char *		653659	0					
ANR	655299	Identifier	title		653659	1					
ANR	655300	AssignmentExpression	* title = get_title ( bbi -> addr )		653659	2		=			
ANR	655301	Identifier	title		653659	0					
ANR	655302	CallExpression	get_title ( bbi -> addr )		653659	1					
ANR	655303	Callee	get_title		653659	0					
ANR	655304	Identifier	get_title		653659	0					
ANR	655305	ArgumentList	bbi -> addr		653659	1					
ANR	655306	Argument	bbi -> addr		653659	0					
ANR	655307	PtrMemberAccess	bbi -> addr		653659	0					
ANR	655308	Identifier	bbi		653659	0					
ANR	655309	Identifier	addr		653659	1					
ANR	655310	IdentifierDeclStatement	"char * body_b64 = r_base64_encode_dyn ( str , - 1 ) ;"	1607:48:54657:54703	653659	1	True				
ANR	655311	IdentifierDecl	"* body_b64 = r_base64_encode_dyn ( str , - 1 )"		653659	0					
ANR	655312	IdentifierDeclType	char *		653659	0					
ANR	655313	Identifier	body_b64		653659	1					
ANR	655314	AssignmentExpression	"* body_b64 = r_base64_encode_dyn ( str , - 1 )"		653659	2		=			
ANR	655315	Identifier	body_b64		653659	0					
ANR	655316	CallExpression	"r_base64_encode_dyn ( str , - 1 )"		653659	1					
ANR	655317	Callee	r_base64_encode_dyn		653659	0					
ANR	655318	Identifier	r_base64_encode_dyn		653659	0					
ANR	655319	ArgumentList	str		653659	1					
ANR	655320	Argument	str		653659	0					
ANR	655321	Identifier	str		653659	0					
ANR	655322	Argument	- 1		653659	1					
ANR	655323	UnaryOperationExpression	- 1		653659	0					
ANR	655324	UnaryOperator	-		653659	0					
ANR	655325	PrimaryExpression	1		653659	1					
ANR	655326	IdentifierDeclStatement	int color = ( bbi && bbi -> diff ) ? bbi -> diff -> type : 0 ;	1608:48:54753:54805	653659	2	True				
ANR	655327	IdentifierDecl	color = ( bbi && bbi -> diff ) ? bbi -> diff -> type : 0		653659	0					
ANR	655328	IdentifierDeclType	int		653659	0					
ANR	655329	Identifier	color		653659	1					
ANR	655330	AssignmentExpression	color = ( bbi && bbi -> diff ) ? bbi -> diff -> type : 0		653659	2		=			
ANR	655331	Identifier	color		653659	0					
ANR	655332	ConditionalExpression	( bbi && bbi -> diff ) ? bbi -> diff -> type : 0		653659	1					
ANR	655333	Condition	bbi && bbi -> diff		653659	0					
ANR	655334	AndExpression	bbi && bbi -> diff		653659	0		&&			
ANR	655335	Identifier	bbi		653659	0					
ANR	655336	PtrMemberAccess	bbi -> diff		653659	1					
ANR	655337	Identifier	bbi		653659	0					
ANR	655338	Identifier	diff		653659	1					
ANR	655339	PtrMemberAccess	bbi -> diff -> type		653659	1					
ANR	655340	PtrMemberAccess	bbi -> diff		653659	0					
ANR	655341	Identifier	bbi		653659	0					
ANR	655342	Identifier	diff		653659	1					
ANR	655343	Identifier	type		653659	1					
ANR	655344	PrimaryExpression	0		653659	2					
ANR	655345	IfStatement	if ( ! title || ! body_b64 )		653659	3					
ANR	655346	Condition	! title || ! body_b64	1609:52:54859:54878	653659	0	True				
ANR	655347	OrExpression	! title || ! body_b64		653659	0		||			
ANR	655348	UnaryOperationExpression	! title		653659	0					
ANR	655349	UnaryOperator	!		653659	0					
ANR	655350	Identifier	title		653659	1					
ANR	655351	UnaryOperationExpression	! body_b64		653659	1					
ANR	655352	UnaryOperator	!		653659	0					
ANR	655353	Identifier	body_b64		653659	1					
ANR	655354	CompoundStatement		207:74:13161:13161	653659	1					
ANR	655355	ExpressionStatement	free ( body_b64 )	1610:56:54939:54954	653659	0	True				
ANR	655356	CallExpression	free ( body_b64 )		653659	0					
ANR	655357	Callee	free		653659	0					
ANR	655358	Identifier	free		653659	0					
ANR	655359	ArgumentList	body_b64		653659	1					
ANR	655360	Argument	body_b64		653659	0					
ANR	655361	Identifier	body_b64		653659	0					
ANR	655362	ExpressionStatement	free ( title )	1611:56:55012:55024	653659	1	True				
ANR	655363	CallExpression	free ( title )		653659	0					
ANR	655364	Callee	free		653659	0					
ANR	655365	Identifier	free		653659	0					
ANR	655366	ArgumentList	title		653659	1					
ANR	655367	Argument	title		653659	0					
ANR	655368	Identifier	title		653659	0					
ANR	655369	ReturnStatement	return false ;	1612:56:55082:55094	653659	2	True				
ANR	655370	Identifier	false		653659	0					
ANR	655371	ExpressionStatement	"body_b64 = r_str_prepend ( body_b64 , ""base64:"" )"	1614:48:55194:55240	653659	4	True				
ANR	655372	AssignmentExpression	"body_b64 = r_str_prepend ( body_b64 , ""base64:"" )"		653659	0		=			
ANR	655373	Identifier	body_b64		653659	0					
ANR	655374	CallExpression	"r_str_prepend ( body_b64 , ""base64:"" )"		653659	1					
ANR	655375	Callee	r_str_prepend		653659	0					
ANR	655376	Identifier	r_str_prepend		653659	0					
ANR	655377	ArgumentList	body_b64		653659	1					
ANR	655378	Argument	body_b64		653659	0					
ANR	655379	Identifier	body_b64		653659	0					
ANR	655380	Argument	"""base64:"""		653659	1					
ANR	655381	PrimaryExpression	"""base64:"""		653659	0					
ANR	655382	ExpressionStatement	"r_cons_printf ( ""agn %s %s %d\\n"" , title , body_b64 , color )"	1615:48:55290:55346	653659	5	True				
ANR	655383	CallExpression	"r_cons_printf ( ""agn %s %s %d\\n"" , title , body_b64 , color )"		653659	0					
ANR	655384	Callee	r_cons_printf		653659	0					
ANR	655385	Identifier	r_cons_printf		653659	0					
ANR	655386	ArgumentList	"""agn %s %s %d\\n"""		653659	1					
ANR	655387	Argument	"""agn %s %s %d\\n"""		653659	0					
ANR	655388	PrimaryExpression	"""agn %s %s %d\\n"""		653659	0					
ANR	655389	Argument	title		653659	1					
ANR	655390	Identifier	title		653659	0					
ANR	655391	Argument	body_b64		653659	2					
ANR	655392	Identifier	body_b64		653659	0					
ANR	655393	Argument	color		653659	3					
ANR	655394	Identifier	color		653659	0					
ANR	655395	ExpressionStatement	free ( body_b64 )	1616:48:55396:55411	653659	6	True				
ANR	655396	CallExpression	free ( body_b64 )		653659	0					
ANR	655397	Callee	free		653659	0					
ANR	655398	Identifier	free		653659	0					
ANR	655399	ArgumentList	body_b64		653659	1					
ANR	655400	Argument	body_b64		653659	0					
ANR	655401	Identifier	body_b64		653659	0					
ANR	655402	ExpressionStatement	free ( title )	1617:48:55461:55473	653659	7	True				
ANR	655403	CallExpression	free ( title )		653659	0					
ANR	655404	Callee	free		653659	0					
ANR	655405	Identifier	free		653659	0					
ANR	655406	ArgumentList	title		653659	1					
ANR	655407	Argument	title		653659	0					
ANR	655408	Identifier	title		653659	0					
ANR	655409	ElseStatement	else		653659	0					
ANR	655410	CompoundStatement		216:47:13802:13802	653659	0					
ANR	655411	Statement	r_cons_printf	1619:48:55572:55584	653659	0	True				
ANR	655412	Statement	(	1619:62:55586:55586	653659	1	True				
ANR	655413	Statement	"""\\t\\""0x%08"""	1619:63:55587:55597	653659	2	True				
ANR	655414	Statement	PFMT64x	1619:74:55598:55604	653659	3	True				
ANR	655415	Statement	"""\\"" ["""	1619:81:55605:55610	653659	4	True				
ANR	655416	Statement	"""URL=\\""%s/0x%08"""	1620:71:55683:55698	653659	5	True				
ANR	655417	Statement	PFMT64x	1620:87:55699:55705	653659	6	True				
ANR	655418	Statement	"""\\"", fillcolor=\\""%s\\"","""	1620:94:55706:55728	653659	7	True				
ANR	655419	Statement	"""color=\\""%s\\"", fontname=\\""%s\\"","""	1621:71:55801:55832	653659	8	True				
ANR	655420	Statement	"""label=\\""%s\\""]\\n"""	1622:71:55905:55921	653659	9	True				
ANR	655421	Statement	","	1622:88:55922:55922	653659	10	True				
ANR	655422	Statement	bbi	1623:71:55995:55997	653659	11	True				
ANR	655423	Statement	->	1623:74:55998:55999	653659	12	True				
ANR	655424	Statement	addr	1623:76:56000:56003	653659	13	True				
ANR	655425	Statement	","	1623:80:56004:56004	653659	14	True				
ANR	655426	Statement	fcn	1623:82:56006:56008	653659	15	True				
ANR	655427	Statement	->	1623:85:56009:56010	653659	16	True				
ANR	655428	Statement	name	1623:87:56011:56014	653659	17	True				
ANR	655429	Statement	","	1623:91:56015:56015	653659	18	True				
ANR	655430	Statement	bbi	1623:93:56017:56019	653659	19	True				
ANR	655431	Statement	->	1623:96:56020:56021	653659	20	True				
ANR	655432	Statement	addr	1623:98:56022:56025	653659	21	True				
ANR	655433	Statement	","	1623:102:56026:56026	653659	22	True				
ANR	655434	Statement	fill_color	1624:71:56099:56108	653659	23	True				
ANR	655435	Statement	","	1624:81:56109:56109	653659	24	True				
ANR	655436	Statement	label_color	1624:83:56111:56121	653659	25	True				
ANR	655437	Statement	","	1624:94:56122:56122	653659	26	True				
ANR	655438	Statement	font	1624:96:56124:56127	653659	27	True				
ANR	655439	Statement	","	1624:100:56128:56128	653659	28	True				
ANR	655440	Statement	str	1624:102:56130:56132	653659	29	True				
ANR	655441	Statement	)	1624:105:56133:56133	653659	30	True				
ANR	655442	ExpressionStatement		1624:106:56134:56134	653659	31	True				
ANR	655443	ExpressionStatement	free ( str )	1628:24:56262:56272	653659	1	True				
ANR	655444	CallExpression	free ( str )		653659	0					
ANR	655445	Callee	free		653659	0					
ANR	655446	Identifier	free		653659	0					
ANR	655447	ArgumentList	str		653659	1					
ANR	655448	Argument	str		653659	0					
ANR	655449	Identifier	str		653659	0					
ANR	655450	ReturnStatement	return nodes ;	1631:8:56310:56322	653659	27	True				
ANR	655451	Identifier	nodes		653659	0					
ANR	655452	ReturnType	static int		653659	1					
ANR	655453	Identifier	core_anal_graph_construct_nodes		653659	2					
ANR	655454	ParameterList	"RCore * core , RAnalFunction * fcn , int opts , PJ * pj , Sdb * DB"		653659	3					
ANR	655455	Parameter	RCore * core	1403:44:41659:41669	653659	0	True				
ANR	655456	ParameterType	RCore *		653659	0					
ANR	655457	Identifier	core		653659	1					
ANR	655458	Parameter	RAnalFunction * fcn	1403:57:41672:41689	653659	1	True				
ANR	655459	ParameterType	RAnalFunction *		653659	0					
ANR	655460	Identifier	fcn		653659	1					
ANR	655461	Parameter	int opts	1403:77:41692:41699	653659	2	True				
ANR	655462	ParameterType	int		653659	0					
ANR	655463	Identifier	opts		653659	1					
ANR	655464	Parameter	PJ * pj	1403:87:41702:41707	653659	3	True				
ANR	655465	ParameterType	PJ *		653659	0					
ANR	655466	Identifier	pj		653659	1					
ANR	655467	Parameter	Sdb * DB	1403:95:41710:41716	653659	4	True				
ANR	655468	ParameterType	Sdb *		653659	0					
ANR	655469	Identifier	DB		653659	1					
ANR	655470	CFGEntryNode	ENTRY		653659		True				
ANR	655471	CFGExitNode	EXIT		653659		True				
ANR	655472	CFGErrorNode	ERROR		653659		True				
ANR	655473	Symbol	body_b64		653659						
ANR	655474	Symbol	is_json_format_disasm		653659						
ANR	655475	Symbol	pal_traced		653659						
ANR	655476	Symbol	bbi -> size		653659						
ANR	655477	Symbol	strchr		653659						
ANR	655478	Symbol	core -> offset		653659						
ANR	655479	Symbol	bbi -> diff		653659						
ANR	655480	Symbol	opts		653659						
ANR	655481	Symbol	str2		653659						
ANR	655482	Symbol	R_CORE_ANAL_KEYVALUE		653659						
ANR	655483	Symbol	t -> times		653659						
ANR	655484	Symbol	bbi -> addr		653659						
ANR	655485	Symbol	pal_curr		653659						
ANR	655486	Symbol	c -> config		653659						
ANR	655487	Symbol	bbi		653659						
ANR	655488	Symbol	* case_op		653659						
ANR	655489	Symbol	iter		653659						
ANR	655490	Symbol	bbi -> fail		653659						
ANR	655491	Symbol	R_ANAL_DIFF_TYPE_UNMATCH		653659						
ANR	655492	Symbol	str		653659						
ANR	655493	Symbol	bbi -> traced		653659						
ANR	655494	Symbol	left		653659						
ANR	655495	Symbol	r_config_get_i		653659						
ANR	655496	Symbol	r_diff_buffers_to_string		653659						
ANR	655497	Symbol	case_iter		653659						
ANR	655498	Symbol	core_anal_graph_label		653659						
ANR	655499	Symbol	palColorFor		653659						
ANR	655500	Symbol	case_op		653659						
ANR	655501	Symbol	R_ANAL_DIFF_TYPE_MATCH		653659						
ANR	655502	Symbol	* core		653659						
ANR	655503	Symbol	r_config_get		653659						
ANR	655504	Symbol	get_title		653659						
ANR	655505	Symbol	fcn		653659						
ANR	655506	Symbol	case_op -> value		653659						
ANR	655507	Symbol	diffname		653659						
ANR	655508	Symbol	current		653659						
ANR	655509	Symbol	top		653659						
ANR	655510	Symbol	core -> io		653659						
ANR	655511	Symbol	r_config_hold_new		653659						
ANR	655512	Symbol	is_star		653659						
ANR	655513	Symbol	bbi -> jump		653659						
ANR	655514	Symbol	core -> c2		653659						
ANR	655515	Symbol	key		653659						
ANR	655516	Symbol	malloc		653659						
ANR	655517	Symbol	is_keva		653659						
ANR	655518	Symbol	t -> count		653659						
ANR	655519	Symbol	c		653659						
ANR	655520	Symbol	d		653659						
ANR	655521	Symbol	label_color		653659						
ANR	655522	Symbol	r_debug_trace_get		653659						
ANR	655523	Symbol	r_str_prepend		653659						
ANR	655524	Symbol	* bbi		653659						
ANR	655525	Symbol	buf		653659						
ANR	655526	Symbol	t		653659						
ANR	655527	Symbol	R_CORE_ANAL_JSON		653659						
ANR	655528	Symbol	* * bbi		653659						
ANR	655529	Symbol	DB		653659						
ANR	655530	Symbol	* r_cons_singleton		653659						
ANR	655531	Symbol	font		653659						
ANR	655532	Symbol	* op		653659						
ANR	655533	Symbol	bbi -> diff -> type		653659						
ANR	655534	Symbol	R_CORE_ANAL_GRAPHDIFF		653659						
ANR	655535	Symbol	strlen		653659						
ANR	655536	Symbol	r_base64_encode_dyn		653659						
ANR	655537	Symbol	pal_box4		653659						
ANR	655538	Symbol	fill_color		653659						
ANR	655539	Symbol	NULL		653659						
ANR	655540	Symbol	color_current		653659						
ANR	655541	Symbol	r_cons_singleton ( ) -> is_html		653659						
ANR	655542	Symbol	core		653659						
ANR	655543	Symbol	R_CORE_ANAL_JSON_FORMAT_DISASM		653659						
ANR	655544	Symbol	case_op -> jump		653659						
ANR	655545	Symbol	is_html		653659						
ANR	655546	Symbol	true		653659						
ANR	655547	Symbol	core -> print		653659						
ANR	655548	Symbol	nl		653659						
ANR	655549	Symbol	color		653659						
ANR	655550	Symbol	is_json		653659						
ANR	655551	Symbol	op -> def_val		653659						
ANR	655552	Symbol	r_diff_new		653659						
ANR	655553	Symbol	op -> min_val		653659						
ANR	655554	Symbol	title		653659						
ANR	655555	Symbol	bbi -> colorize		653659						
ANR	655556	Symbol	bbi -> switch_op		653659						
ANR	655557	Symbol	oc		653659						
ANR	655558	Symbol	r_str_replace		653659						
ANR	655559	Symbol	r_cons_singleton		653659						
ANR	655560	Symbol	UT64_MAX		653659						
ANR	655561	Symbol	core -> config		653659						
ANR	655562	Symbol	op		653659						
ANR	655563	Symbol	op -> addr		653659						
ANR	655564	Symbol	op -> max_val		653659						
ANR	655565	Symbol	diffstr		653659						
ANR	655566	Symbol	case_op -> addr		653659						
ANR	655567	Symbol	false		653659						
ANR	655568	Symbol	R_CORE_ANAL_STAR		653659						
ANR	655569	Symbol	* bbi -> diff		653659						
ANR	655570	Symbol	* c		653659						
ANR	655571	Symbol	nodes		653659						
ANR	655572	Symbol	difftype		653659						
ANR	655573	Symbol	pj		653659						
ANR	655574	Symbol	hc		653659						
ANR	655575	Symbol	* t		653659						
ANR	655576	Symbol	r_anal_bb_is_in_offset		653659						
ANR	655577	Symbol	core -> dbg		653659						
ANR	655578	Function	core_anal_graph_nodes	1634:0:56327:58730							
ANR	655579	FunctionDef	"core_anal_graph_nodes (RCore * core , RAnalFunction * fcn , int opts , PJ * pj)"		655578	0					
ANR	655580	CompoundStatement		1634:84:56411:58730	655578	0					
ANR	655581	IdentifierDeclStatement	int is_json = opts & R_CORE_ANAL_JSON ;	1635:1:56414:56451	655578	0	True				
ANR	655582	IdentifierDecl	is_json = opts & R_CORE_ANAL_JSON		655578	0					
ANR	655583	IdentifierDeclType	int		655578	0					
ANR	655584	Identifier	is_json		655578	1					
ANR	655585	AssignmentExpression	is_json = opts & R_CORE_ANAL_JSON		655578	2		=			
ANR	655586	Identifier	is_json		655578	0					
ANR	655587	BitAndExpression	opts & R_CORE_ANAL_JSON		655578	1		&			
ANR	655588	Identifier	opts		655578	0					
ANR	655589	Identifier	R_CORE_ANAL_JSON		655578	1					
ANR	655590	IdentifierDeclStatement	int is_keva = opts & R_CORE_ANAL_KEYVALUE ;	1636:1:56454:56495	655578	1	True				
ANR	655591	IdentifierDecl	is_keva = opts & R_CORE_ANAL_KEYVALUE		655578	0					
ANR	655592	IdentifierDeclType	int		655578	0					
ANR	655593	Identifier	is_keva		655578	1					
ANR	655594	AssignmentExpression	is_keva = opts & R_CORE_ANAL_KEYVALUE		655578	2		=			
ANR	655595	Identifier	is_keva		655578	0					
ANR	655596	BitAndExpression	opts & R_CORE_ANAL_KEYVALUE		655578	1		&			
ANR	655597	Identifier	opts		655578	0					
ANR	655598	Identifier	R_CORE_ANAL_KEYVALUE		655578	1					
ANR	655599	IdentifierDeclStatement	int nodes = 0 ;	1637:1:56498:56511	655578	2	True				
ANR	655600	IdentifierDecl	nodes = 0		655578	0					
ANR	655601	IdentifierDeclType	int		655578	0					
ANR	655602	Identifier	nodes		655578	1					
ANR	655603	AssignmentExpression	nodes = 0		655578	2		=			
ANR	655604	Identifier	nodes		655578	0					
ANR	655605	PrimaryExpression	0		655578	1					
ANR	655606	IdentifierDeclStatement	Sdb * DB = NULL ;	1638:1:56514:56528	655578	3	True				
ANR	655607	IdentifierDecl	* DB = NULL		655578	0					
ANR	655608	IdentifierDeclType	Sdb *		655578	0					
ANR	655609	Identifier	DB		655578	1					
ANR	655610	AssignmentExpression	* DB = NULL		655578	2		=			
ANR	655611	Identifier	NULL		655578	0					
ANR	655612	Identifier	NULL		655578	1					
ANR	655613	IdentifierDeclStatement	"char * pal_jump = palColorFor ( ""graph.true"" ) ;"	1639:1:56531:56574	655578	4	True				
ANR	655614	IdentifierDecl	"* pal_jump = palColorFor ( ""graph.true"" )"		655578	0					
ANR	655615	IdentifierDeclType	char *		655578	0					
ANR	655616	Identifier	pal_jump		655578	1					
ANR	655617	AssignmentExpression	"* pal_jump = palColorFor ( ""graph.true"" )"		655578	2		=			
ANR	655618	Identifier	pal_jump		655578	0					
ANR	655619	CallExpression	"palColorFor ( ""graph.true"" )"		655578	1					
ANR	655620	Callee	palColorFor		655578	0					
ANR	655621	Identifier	palColorFor		655578	0					
ANR	655622	ArgumentList	"""graph.true"""		655578	1					
ANR	655623	Argument	"""graph.true"""		655578	0					
ANR	655624	PrimaryExpression	"""graph.true"""		655578	0					
ANR	655625	IdentifierDeclStatement	"char * pal_fail = palColorFor ( ""graph.false"" ) ;"	1640:1:56577:56621	655578	5	True				
ANR	655626	IdentifierDecl	"* pal_fail = palColorFor ( ""graph.false"" )"		655578	0					
ANR	655627	IdentifierDeclType	char *		655578	0					
ANR	655628	Identifier	pal_fail		655578	1					
ANR	655629	AssignmentExpression	"* pal_fail = palColorFor ( ""graph.false"" )"		655578	2		=			
ANR	655630	Identifier	pal_fail		655578	0					
ANR	655631	CallExpression	"palColorFor ( ""graph.false"" )"		655578	1					
ANR	655632	Callee	palColorFor		655578	0					
ANR	655633	Identifier	palColorFor		655578	0					
ANR	655634	ArgumentList	"""graph.false"""		655578	1					
ANR	655635	Argument	"""graph.false"""		655578	0					
ANR	655636	PrimaryExpression	"""graph.false"""		655578	0					
ANR	655637	IdentifierDeclStatement	"char * pal_trfa = palColorFor ( ""graph.trufae"" ) ;"	1641:1:56624:56669	655578	6	True				
ANR	655638	IdentifierDecl	"* pal_trfa = palColorFor ( ""graph.trufae"" )"		655578	0					
ANR	655639	IdentifierDeclType	char *		655578	0					
ANR	655640	Identifier	pal_trfa		655578	1					
ANR	655641	AssignmentExpression	"* pal_trfa = palColorFor ( ""graph.trufae"" )"		655578	2		=			
ANR	655642	Identifier	pal_trfa		655578	0					
ANR	655643	CallExpression	"palColorFor ( ""graph.trufae"" )"		655578	1					
ANR	655644	Callee	palColorFor		655578	0					
ANR	655645	Identifier	palColorFor		655578	0					
ANR	655646	ArgumentList	"""graph.trufae"""		655578	1					
ANR	655647	Argument	"""graph.trufae"""		655578	0					
ANR	655648	PrimaryExpression	"""graph.trufae"""		655578	0					
ANR	655649	IdentifierDeclStatement	"char * pal_curr = palColorFor ( ""graph.current"" ) ;"	1642:1:56672:56718	655578	7	True				
ANR	655650	IdentifierDecl	"* pal_curr = palColorFor ( ""graph.current"" )"		655578	0					
ANR	655651	IdentifierDeclType	char *		655578	0					
ANR	655652	Identifier	pal_curr		655578	1					
ANR	655653	AssignmentExpression	"* pal_curr = palColorFor ( ""graph.current"" )"		655578	2		=			
ANR	655654	Identifier	pal_curr		655578	0					
ANR	655655	CallExpression	"palColorFor ( ""graph.current"" )"		655578	1					
ANR	655656	Callee	palColorFor		655578	0					
ANR	655657	Identifier	palColorFor		655578	0					
ANR	655658	ArgumentList	"""graph.current"""		655578	1					
ANR	655659	Argument	"""graph.current"""		655578	0					
ANR	655660	PrimaryExpression	"""graph.current"""		655578	0					
ANR	655661	IdentifierDeclStatement	"char * pal_traced = palColorFor ( ""graph.traced"" ) ;"	1643:1:56721:56768	655578	8	True				
ANR	655662	IdentifierDecl	"* pal_traced = palColorFor ( ""graph.traced"" )"		655578	0					
ANR	655663	IdentifierDeclType	char *		655578	0					
ANR	655664	Identifier	pal_traced		655578	1					
ANR	655665	AssignmentExpression	"* pal_traced = palColorFor ( ""graph.traced"" )"		655578	2		=			
ANR	655666	Identifier	pal_traced		655578	0					
ANR	655667	CallExpression	"palColorFor ( ""graph.traced"" )"		655578	1					
ANR	655668	Callee	palColorFor		655578	0					
ANR	655669	Identifier	palColorFor		655578	0					
ANR	655670	ArgumentList	"""graph.traced"""		655578	1					
ANR	655671	Argument	"""graph.traced"""		655578	0					
ANR	655672	PrimaryExpression	"""graph.traced"""		655578	0					
ANR	655673	IdentifierDeclStatement	"char * pal_box4 = palColorFor ( ""graph.box4"" ) ;"	1644:1:56771:56814	655578	9	True				
ANR	655674	IdentifierDecl	"* pal_box4 = palColorFor ( ""graph.box4"" )"		655578	0					
ANR	655675	IdentifierDeclType	char *		655578	0					
ANR	655676	Identifier	pal_box4		655578	1					
ANR	655677	AssignmentExpression	"* pal_box4 = palColorFor ( ""graph.box4"" )"		655578	2		=			
ANR	655678	Identifier	pal_box4		655578	0					
ANR	655679	CallExpression	"palColorFor ( ""graph.box4"" )"		655578	1					
ANR	655680	Callee	palColorFor		655578	0					
ANR	655681	Identifier	palColorFor		655578	0					
ANR	655682	ArgumentList	"""graph.box4"""		655578	1					
ANR	655683	Argument	"""graph.box4"""		655578	0					
ANR	655684	PrimaryExpression	"""graph.box4"""		655578	0					
ANR	655685	IfStatement	if ( ! fcn || ! fcn -> bbs )		655578	10					
ANR	655686	Condition	! fcn || ! fcn -> bbs	1645:5:56821:56837	655578	0	True				
ANR	655687	OrExpression	! fcn || ! fcn -> bbs		655578	0		||			
ANR	655688	UnaryOperationExpression	! fcn		655578	0					
ANR	655689	UnaryOperator	!		655578	0					
ANR	655690	Identifier	fcn		655578	1					
ANR	655691	UnaryOperationExpression	! fcn -> bbs		655578	1					
ANR	655692	UnaryOperator	!		655578	0					
ANR	655693	PtrMemberAccess	fcn -> bbs		655578	1					
ANR	655694	Identifier	fcn		655578	0					
ANR	655695	Identifier	bbs		655578	1					
ANR	655696	CompoundStatement		12:24:428:428	655578	1					
ANR	655697	ExpressionStatement	"eprintf ( ""No fcn\\n"" )"	1646:2:56844:56864	655578	0	True				
ANR	655698	CallExpression	"eprintf ( ""No fcn\\n"" )"		655578	0					
ANR	655699	Callee	eprintf		655578	0					
ANR	655700	Identifier	eprintf		655578	0					
ANR	655701	ArgumentList	"""No fcn\\n"""		655578	1					
ANR	655702	Argument	"""No fcn\\n"""		655578	0					
ANR	655703	PrimaryExpression	"""No fcn\\n"""		655578	0					
ANR	655704	ReturnStatement	return - 1 ;	1647:2:56868:56877	655578	1	True				
ANR	655705	UnaryOperationExpression	- 1		655578	0					
ANR	655706	UnaryOperator	-		655578	0					
ANR	655707	PrimaryExpression	1		655578	1					
ANR	655708	IfStatement	if ( is_keva )		655578	11					
ANR	655709	Condition	is_keva	1650:5:56888:56894	655578	0	True				
ANR	655710	Identifier	is_keva		655578	0					
ANR	655711	CompoundStatement		18:2:489:500	655578	1					
ANR	655712	IdentifierDeclStatement	char ns [ 64 ] ;	1651:2:56901:56912	655578	0	True				
ANR	655713	IdentifierDecl	ns [ 64 ]		655578	0					
ANR	655714	IdentifierDeclType	char [ 64 ]		655578	0					
ANR	655715	Identifier	ns		655578	1					
ANR	655716	PrimaryExpression	64		655578	2					
ANR	655717	ExpressionStatement	"DB = sdb_ns ( core -> anal -> sdb , ""graph"" , 1 )"	1652:2:56916:56957	655578	1	True				
ANR	655718	AssignmentExpression	"DB = sdb_ns ( core -> anal -> sdb , ""graph"" , 1 )"		655578	0		=			
ANR	655719	Identifier	DB		655578	0					
ANR	655720	CallExpression	"sdb_ns ( core -> anal -> sdb , ""graph"" , 1 )"		655578	1					
ANR	655721	Callee	sdb_ns		655578	0					
ANR	655722	Identifier	sdb_ns		655578	0					
ANR	655723	ArgumentList	core -> anal -> sdb		655578	1					
ANR	655724	Argument	core -> anal -> sdb		655578	0					
ANR	655725	PtrMemberAccess	core -> anal -> sdb		655578	0					
ANR	655726	PtrMemberAccess	core -> anal		655578	0					
ANR	655727	Identifier	core		655578	0					
ANR	655728	Identifier	anal		655578	1					
ANR	655729	Identifier	sdb		655578	1					
ANR	655730	Argument	"""graph"""		655578	1					
ANR	655731	PrimaryExpression	"""graph"""		655578	0					
ANR	655732	Argument	1		655578	2					
ANR	655733	PrimaryExpression	1		655578	0					
ANR	655734	Statement	snprintf	1653:2:56961:56968	655578	2	True				
ANR	655735	Statement	(	1653:11:56970:56970	655578	3	True				
ANR	655736	Statement	ns	1653:12:56971:56972	655578	4	True				
ANR	655737	Statement	","	1653:14:56973:56973	655578	5	True				
ANR	655738	Statement	sizeof	1653:16:56975:56980	655578	6	True				
ANR	655739	Statement	(	1653:23:56982:56982	655578	7	True				
ANR	655740	Statement	ns	1653:24:56983:56984	655578	8	True				
ANR	655741	Statement	)	1653:26:56985:56985	655578	9	True				
ANR	655742	Statement	","	1653:27:56986:56986	655578	10	True				
ANR	655743	Statement	"""fcn.0x%08"""	1653:29:56988:56998	655578	11	True				
ANR	655744	Statement	PFMT64x	1653:40:56999:57005	655578	12	True				
ANR	655745	Statement	","	1653:47:57006:57006	655578	13	True				
ANR	655746	Statement	fcn	1653:49:57008:57010	655578	14	True				
ANR	655747	Statement	->	1653:52:57011:57012	655578	15	True				
ANR	655748	Statement	addr	1653:54:57013:57016	655578	16	True				
ANR	655749	Statement	)	1653:58:57017:57017	655578	17	True				
ANR	655750	ExpressionStatement		1653:59:57018:57018	655578	18	True				
ANR	655751	ExpressionStatement	"DB = sdb_ns ( DB , ns , 1 )"	1654:2:57022:57045	655578	19	True				
ANR	655752	AssignmentExpression	"DB = sdb_ns ( DB , ns , 1 )"		655578	0		=			
ANR	655753	Identifier	DB		655578	0					
ANR	655754	CallExpression	"sdb_ns ( DB , ns , 1 )"		655578	1					
ANR	655755	Callee	sdb_ns		655578	0					
ANR	655756	Identifier	sdb_ns		655578	0					
ANR	655757	ArgumentList	DB		655578	1					
ANR	655758	Argument	DB		655578	0					
ANR	655759	Identifier	DB		655578	0					
ANR	655760	Argument	ns		655578	1					
ANR	655761	Identifier	ns		655578	0					
ANR	655762	Argument	1		655578	2					
ANR	655763	PrimaryExpression	1		655578	0					
ANR	655764	IfStatement	if ( is_keva )		655578	12					
ANR	655765	Condition	is_keva	1657:5:57056:57062	655578	0	True				
ANR	655766	Identifier	is_keva		655578	0					
ANR	655767	CompoundStatement		25:2:657:709	655578	1					
ANR	655768	IdentifierDeclStatement	"char * ename = sdb_encode ( ( const ut8 * ) fcn -> name , - 1 ) ;"	1658:2:57069:57121	655578	0	True				
ANR	655769	IdentifierDecl	"* ename = sdb_encode ( ( const ut8 * ) fcn -> name , - 1 )"		655578	0					
ANR	655770	IdentifierDeclType	char *		655578	0					
ANR	655771	Identifier	ename		655578	1					
ANR	655772	AssignmentExpression	"* ename = sdb_encode ( ( const ut8 * ) fcn -> name , - 1 )"		655578	2		=			
ANR	655773	Identifier	ename		655578	0					
ANR	655774	CallExpression	"sdb_encode ( ( const ut8 * ) fcn -> name , - 1 )"		655578	1					
ANR	655775	Callee	sdb_encode		655578	0					
ANR	655776	Identifier	sdb_encode		655578	0					
ANR	655777	ArgumentList	( const ut8 * ) fcn -> name		655578	1					
ANR	655778	Argument	( const ut8 * ) fcn -> name		655578	0					
ANR	655779	CastExpression	( const ut8 * ) fcn -> name		655578	0					
ANR	655780	CastTarget	const ut8 *		655578	0					
ANR	655781	PtrMemberAccess	fcn -> name		655578	1					
ANR	655782	Identifier	fcn		655578	0					
ANR	655783	Identifier	name		655578	1					
ANR	655784	Argument	- 1		655578	1					
ANR	655785	UnaryOperationExpression	- 1		655578	0					
ANR	655786	UnaryOperator	-		655578	0					
ANR	655787	PrimaryExpression	1		655578	1					
ANR	655788	ExpressionStatement	"sdb_set ( DB , ""name"" , fcn -> name , 0 )"	1659:2:57125:57159	655578	1	True				
ANR	655789	CallExpression	"sdb_set ( DB , ""name"" , fcn -> name , 0 )"		655578	0					
ANR	655790	Callee	sdb_set		655578	0					
ANR	655791	Identifier	sdb_set		655578	0					
ANR	655792	ArgumentList	DB		655578	1					
ANR	655793	Argument	DB		655578	0					
ANR	655794	Identifier	DB		655578	0					
ANR	655795	Argument	"""name"""		655578	1					
ANR	655796	PrimaryExpression	"""name"""		655578	0					
ANR	655797	Argument	fcn -> name		655578	2					
ANR	655798	PtrMemberAccess	fcn -> name		655578	0					
ANR	655799	Identifier	fcn		655578	0					
ANR	655800	Identifier	name		655578	1					
ANR	655801	Argument	0		655578	3					
ANR	655802	PrimaryExpression	0		655578	0					
ANR	655803	ExpressionStatement	"sdb_set ( DB , ""ename"" , ename , 0 )"	1660:2:57163:57194	655578	2	True				
ANR	655804	CallExpression	"sdb_set ( DB , ""ename"" , ename , 0 )"		655578	0					
ANR	655805	Callee	sdb_set		655578	0					
ANR	655806	Identifier	sdb_set		655578	0					
ANR	655807	ArgumentList	DB		655578	1					
ANR	655808	Argument	DB		655578	0					
ANR	655809	Identifier	DB		655578	0					
ANR	655810	Argument	"""ename"""		655578	1					
ANR	655811	PrimaryExpression	"""ename"""		655578	0					
ANR	655812	Argument	ename		655578	2					
ANR	655813	Identifier	ename		655578	0					
ANR	655814	Argument	0		655578	3					
ANR	655815	PrimaryExpression	0		655578	0					
ANR	655816	ExpressionStatement	free ( ename )	1661:2:57198:57210	655578	3	True				
ANR	655817	CallExpression	free ( ename )		655578	0					
ANR	655818	Callee	free		655578	0					
ANR	655819	Identifier	free		655578	0					
ANR	655820	ArgumentList	ename		655578	1					
ANR	655821	Argument	ename		655578	0					
ANR	655822	Identifier	ename		655578	0					
ANR	655823	IfStatement	if ( fcn -> nargs > 0 )		655578	4					
ANR	655824	Condition	fcn -> nargs > 0	1662:6:57218:57231	655578	0	True				
ANR	655825	RelationalExpression	fcn -> nargs > 0		655578	0		>			
ANR	655826	PtrMemberAccess	fcn -> nargs		655578	0					
ANR	655827	Identifier	fcn		655578	0					
ANR	655828	Identifier	nargs		655578	1					
ANR	655829	PrimaryExpression	0		655578	1					
ANR	655830	CompoundStatement		29:22:822:822	655578	1					
ANR	655831	ExpressionStatement	"sdb_num_set ( DB , ""nargs"" , fcn -> nargs , 0 )"	1663:3:57239:57279	655578	0	True				
ANR	655832	CallExpression	"sdb_num_set ( DB , ""nargs"" , fcn -> nargs , 0 )"		655578	0					
ANR	655833	Callee	sdb_num_set		655578	0					
ANR	655834	Identifier	sdb_num_set		655578	0					
ANR	655835	ArgumentList	DB		655578	1					
ANR	655836	Argument	DB		655578	0					
ANR	655837	Identifier	DB		655578	0					
ANR	655838	Argument	"""nargs"""		655578	1					
ANR	655839	PrimaryExpression	"""nargs"""		655578	0					
ANR	655840	Argument	fcn -> nargs		655578	2					
ANR	655841	PtrMemberAccess	fcn -> nargs		655578	0					
ANR	655842	Identifier	fcn		655578	0					
ANR	655843	Identifier	nargs		655578	1					
ANR	655844	Argument	0		655578	3					
ANR	655845	PrimaryExpression	0		655578	0					
ANR	655846	ExpressionStatement	"sdb_num_set ( DB , ""size"" , r_anal_fcn_size ( fcn ) , 0 )"	1665:2:57287:57337	655578	5	True				
ANR	655847	CallExpression	"sdb_num_set ( DB , ""size"" , r_anal_fcn_size ( fcn ) , 0 )"		655578	0					
ANR	655848	Callee	sdb_num_set		655578	0					
ANR	655849	Identifier	sdb_num_set		655578	0					
ANR	655850	ArgumentList	DB		655578	1					
ANR	655851	Argument	DB		655578	0					
ANR	655852	Identifier	DB		655578	0					
ANR	655853	Argument	"""size"""		655578	1					
ANR	655854	PrimaryExpression	"""size"""		655578	0					
ANR	655855	Argument	r_anal_fcn_size ( fcn )		655578	2					
ANR	655856	CallExpression	r_anal_fcn_size ( fcn )		655578	0					
ANR	655857	Callee	r_anal_fcn_size		655578	0					
ANR	655858	Identifier	r_anal_fcn_size		655578	0					
ANR	655859	ArgumentList	fcn		655578	1					
ANR	655860	Argument	fcn		655578	0					
ANR	655861	Identifier	fcn		655578	0					
ANR	655862	Argument	0		655578	3					
ANR	655863	PrimaryExpression	0		655578	0					
ANR	655864	IfStatement	if ( fcn -> maxstack > 0 )		655578	6					
ANR	655865	Condition	fcn -> maxstack > 0	1666:6:57345:57361	655578	0	True				
ANR	655866	RelationalExpression	fcn -> maxstack > 0		655578	0		>			
ANR	655867	PtrMemberAccess	fcn -> maxstack		655578	0					
ANR	655868	Identifier	fcn		655578	0					
ANR	655869	Identifier	maxstack		655578	1					
ANR	655870	PrimaryExpression	0		655578	1					
ANR	655871	CompoundStatement		33:25:952:952	655578	1					
ANR	655872	ExpressionStatement	"sdb_num_set ( DB , ""stack"" , fcn -> maxstack , 0 )"	1667:3:57369:57412	655578	0	True				
ANR	655873	CallExpression	"sdb_num_set ( DB , ""stack"" , fcn -> maxstack , 0 )"		655578	0					
ANR	655874	Callee	sdb_num_set		655578	0					
ANR	655875	Identifier	sdb_num_set		655578	0					
ANR	655876	ArgumentList	DB		655578	1					
ANR	655877	Argument	DB		655578	0					
ANR	655878	Identifier	DB		655578	0					
ANR	655879	Argument	"""stack"""		655578	1					
ANR	655880	PrimaryExpression	"""stack"""		655578	0					
ANR	655881	Argument	fcn -> maxstack		655578	2					
ANR	655882	PtrMemberAccess	fcn -> maxstack		655578	0					
ANR	655883	Identifier	fcn		655578	0					
ANR	655884	Identifier	maxstack		655578	1					
ANR	655885	Argument	0		655578	3					
ANR	655886	PrimaryExpression	0		655578	0					
ANR	655887	ExpressionStatement	"sdb_set ( DB , ""pos"" , ""0,0"" , 0 )"	1669:2:57420:57449	655578	7	True				
ANR	655888	CallExpression	"sdb_set ( DB , ""pos"" , ""0,0"" , 0 )"		655578	0					
ANR	655889	Callee	sdb_set		655578	0					
ANR	655890	Identifier	sdb_set		655578	0					
ANR	655891	ArgumentList	DB		655578	1					
ANR	655892	Argument	DB		655578	0					
ANR	655893	Identifier	DB		655578	0					
ANR	655894	Argument	"""pos"""		655578	1					
ANR	655895	PrimaryExpression	"""pos"""		655578	0					
ANR	655896	Argument	"""0,0"""		655578	2					
ANR	655897	PrimaryExpression	"""0,0"""		655578	0					
ANR	655898	Argument	0		655578	3					
ANR	655899	PrimaryExpression	0		655578	0					
ANR	655900	ExpressionStatement	"sdb_set ( DB , ""type"" , r_anal_fcn_type_tostring ( fcn -> type ) , 0 )"	1670:2:57476:57537	655578	8	True				
ANR	655901	CallExpression	"sdb_set ( DB , ""type"" , r_anal_fcn_type_tostring ( fcn -> type ) , 0 )"		655578	0					
ANR	655902	Callee	sdb_set		655578	0					
ANR	655903	Identifier	sdb_set		655578	0					
ANR	655904	ArgumentList	DB		655578	1					
ANR	655905	Argument	DB		655578	0					
ANR	655906	Identifier	DB		655578	0					
ANR	655907	Argument	"""type"""		655578	1					
ANR	655908	PrimaryExpression	"""type"""		655578	0					
ANR	655909	Argument	r_anal_fcn_type_tostring ( fcn -> type )		655578	2					
ANR	655910	CallExpression	r_anal_fcn_type_tostring ( fcn -> type )		655578	0					
ANR	655911	Callee	r_anal_fcn_type_tostring		655578	0					
ANR	655912	Identifier	r_anal_fcn_type_tostring		655578	0					
ANR	655913	ArgumentList	fcn -> type		655578	1					
ANR	655914	Argument	fcn -> type		655578	0					
ANR	655915	PtrMemberAccess	fcn -> type		655578	0					
ANR	655916	Identifier	fcn		655578	0					
ANR	655917	Identifier	type		655578	1					
ANR	655918	Argument	0		655578	3					
ANR	655919	PrimaryExpression	0		655578	0					
ANR	655920	ElseStatement	else		655578	0					
ANR	655921	IfStatement	if ( is_json )		655578	0					
ANR	655922	Condition	is_json	1671:12:57551:57557	655578	0	True				
ANR	655923	Identifier	is_json		655578	0					
ANR	655924	CompoundStatement		40:2:1189:1256	655578	1					
ANR	655925	IdentifierDeclStatement	"char * fcn_name_escaped = r_str_escape_utf8_for_json ( fcn -> name , - 1 ) ;"	1673:2:57601:57668	655578	0	True				
ANR	655926	IdentifierDecl	"* fcn_name_escaped = r_str_escape_utf8_for_json ( fcn -> name , - 1 )"		655578	0					
ANR	655927	IdentifierDeclType	char *		655578	0					
ANR	655928	Identifier	fcn_name_escaped		655578	1					
ANR	655929	AssignmentExpression	"* fcn_name_escaped = r_str_escape_utf8_for_json ( fcn -> name , - 1 )"		655578	2		=			
ANR	655930	Identifier	fcn_name_escaped		655578	0					
ANR	655931	CallExpression	"r_str_escape_utf8_for_json ( fcn -> name , - 1 )"		655578	1					
ANR	655932	Callee	r_str_escape_utf8_for_json		655578	0					
ANR	655933	Identifier	r_str_escape_utf8_for_json		655578	0					
ANR	655934	ArgumentList	fcn -> name		655578	1					
ANR	655935	Argument	fcn -> name		655578	0					
ANR	655936	PtrMemberAccess	fcn -> name		655578	0					
ANR	655937	Identifier	fcn		655578	0					
ANR	655938	Identifier	name		655578	1					
ANR	655939	Argument	- 1		655578	1					
ANR	655940	UnaryOperationExpression	- 1		655578	0					
ANR	655941	UnaryOperator	-		655578	0					
ANR	655942	PrimaryExpression	1		655578	1					
ANR	655943	ExpressionStatement	pj_o ( pj )	1674:2:57672:57681	655578	1	True				
ANR	655944	CallExpression	pj_o ( pj )		655578	0					
ANR	655945	Callee	pj_o		655578	0					
ANR	655946	Identifier	pj_o		655578	0					
ANR	655947	ArgumentList	pj		655578	1					
ANR	655948	Argument	pj		655578	0					
ANR	655949	Identifier	pj		655578	0					
ANR	655950	ExpressionStatement	"pj_ks ( pj , ""name"" , r_str_get ( fcn_name_escaped ) )"	1675:2:57685:57733	655578	2	True				
ANR	655951	CallExpression	"pj_ks ( pj , ""name"" , r_str_get ( fcn_name_escaped ) )"		655578	0					
ANR	655952	Callee	pj_ks		655578	0					
ANR	655953	Identifier	pj_ks		655578	0					
ANR	655954	ArgumentList	pj		655578	1					
ANR	655955	Argument	pj		655578	0					
ANR	655956	Identifier	pj		655578	0					
ANR	655957	Argument	"""name"""		655578	1					
ANR	655958	PrimaryExpression	"""name"""		655578	0					
ANR	655959	Argument	r_str_get ( fcn_name_escaped )		655578	2					
ANR	655960	CallExpression	r_str_get ( fcn_name_escaped )		655578	0					
ANR	655961	Callee	r_str_get		655578	0					
ANR	655962	Identifier	r_str_get		655578	0					
ANR	655963	ArgumentList	fcn_name_escaped		655578	1					
ANR	655964	Argument	fcn_name_escaped		655578	0					
ANR	655965	Identifier	fcn_name_escaped		655578	0					
ANR	655966	ExpressionStatement	free ( fcn_name_escaped )	1676:2:57737:57760	655578	3	True				
ANR	655967	CallExpression	free ( fcn_name_escaped )		655578	0					
ANR	655968	Callee	free		655578	0					
ANR	655969	Identifier	free		655578	0					
ANR	655970	ArgumentList	fcn_name_escaped		655578	1					
ANR	655971	Argument	fcn_name_escaped		655578	0					
ANR	655972	Identifier	fcn_name_escaped		655578	0					
ANR	655973	ExpressionStatement	"pj_kn ( pj , ""offset"" , fcn -> addr )"	1677:2:57764:57795	655578	4	True				
ANR	655974	CallExpression	"pj_kn ( pj , ""offset"" , fcn -> addr )"		655578	0					
ANR	655975	Callee	pj_kn		655578	0					
ANR	655976	Identifier	pj_kn		655578	0					
ANR	655977	ArgumentList	pj		655578	1					
ANR	655978	Argument	pj		655578	0					
ANR	655979	Identifier	pj		655578	0					
ANR	655980	Argument	"""offset"""		655578	1					
ANR	655981	PrimaryExpression	"""offset"""		655578	0					
ANR	655982	Argument	fcn -> addr		655578	2					
ANR	655983	PtrMemberAccess	fcn -> addr		655578	0					
ANR	655984	Identifier	fcn		655578	0					
ANR	655985	Identifier	addr		655578	1					
ANR	655986	ExpressionStatement	"pj_ki ( pj , ""ninstr"" , fcn -> ninstr )"	1678:2:57799:57832	655578	5	True				
ANR	655987	CallExpression	"pj_ki ( pj , ""ninstr"" , fcn -> ninstr )"		655578	0					
ANR	655988	Callee	pj_ki		655578	0					
ANR	655989	Identifier	pj_ki		655578	0					
ANR	655990	ArgumentList	pj		655578	1					
ANR	655991	Argument	pj		655578	0					
ANR	655992	Identifier	pj		655578	0					
ANR	655993	Argument	"""ninstr"""		655578	1					
ANR	655994	PrimaryExpression	"""ninstr"""		655578	0					
ANR	655995	Argument	fcn -> ninstr		655578	2					
ANR	655996	PtrMemberAccess	fcn -> ninstr		655578	0					
ANR	655997	Identifier	fcn		655578	0					
ANR	655998	Identifier	ninstr		655578	1					
ANR	655999	ExpressionStatement	"pj_ki ( pj , ""nargs"" , r_anal_var_count ( core -> anal , fcn , 'r' , 1 ) + r_anal_var_count ( core -> anal , fcn , 's' , 1 ) + r_anal_var_count ( core -> anal , fcn , 'b' , 1 ) )"	1679:2:57836:57998	655578	6	True				
ANR	656000	CallExpression	"pj_ki ( pj , ""nargs"" , r_anal_var_count ( core -> anal , fcn , 'r' , 1 ) + r_anal_var_count ( core -> anal , fcn , 's' , 1 ) + r_anal_var_count ( core -> anal , fcn , 'b' , 1 ) )"		655578	0					
ANR	656001	Callee	pj_ki		655578	0					
ANR	656002	Identifier	pj_ki		655578	0					
ANR	656003	ArgumentList	pj		655578	1					
ANR	656004	Argument	pj		655578	0					
ANR	656005	Identifier	pj		655578	0					
ANR	656006	Argument	"""nargs"""		655578	1					
ANR	656007	PrimaryExpression	"""nargs"""		655578	0					
ANR	656008	Argument	"r_anal_var_count ( core -> anal , fcn , 'r' , 1 ) + r_anal_var_count ( core -> anal , fcn , 's' , 1 ) + r_anal_var_count ( core -> anal , fcn , 'b' , 1 )"		655578	2					
ANR	656009	AdditiveExpression	"r_anal_var_count ( core -> anal , fcn , 'r' , 1 ) + r_anal_var_count ( core -> anal , fcn , 's' , 1 ) + r_anal_var_count ( core -> anal , fcn , 'b' , 1 )"		655578	0		+			
ANR	656010	CallExpression	"r_anal_var_count ( core -> anal , fcn , 'r' , 1 )"		655578	0					
ANR	656011	Callee	r_anal_var_count		655578	0					
ANR	656012	Identifier	r_anal_var_count		655578	0					
ANR	656013	ArgumentList	core -> anal		655578	1					
ANR	656014	Argument	core -> anal		655578	0					
ANR	656015	PtrMemberAccess	core -> anal		655578	0					
ANR	656016	Identifier	core		655578	0					
ANR	656017	Identifier	anal		655578	1					
ANR	656018	Argument	fcn		655578	1					
ANR	656019	Identifier	fcn		655578	0					
ANR	656020	Argument	'r'		655578	2					
ANR	656021	PrimaryExpression	'r'		655578	0					
ANR	656022	Argument	1		655578	3					
ANR	656023	PrimaryExpression	1		655578	0					
ANR	656024	AdditiveExpression	"r_anal_var_count ( core -> anal , fcn , 's' , 1 ) + r_anal_var_count ( core -> anal , fcn , 'b' , 1 )"		655578	1		+			
ANR	656025	CallExpression	"r_anal_var_count ( core -> anal , fcn , 's' , 1 )"		655578	0					
ANR	656026	Callee	r_anal_var_count		655578	0					
ANR	656027	Identifier	r_anal_var_count		655578	0					
ANR	656028	ArgumentList	core -> anal		655578	1					
ANR	656029	Argument	core -> anal		655578	0					
ANR	656030	PtrMemberAccess	core -> anal		655578	0					
ANR	656031	Identifier	core		655578	0					
ANR	656032	Identifier	anal		655578	1					
ANR	656033	Argument	fcn		655578	1					
ANR	656034	Identifier	fcn		655578	0					
ANR	656035	Argument	's'		655578	2					
ANR	656036	PrimaryExpression	's'		655578	0					
ANR	656037	Argument	1		655578	3					
ANR	656038	PrimaryExpression	1		655578	0					
ANR	656039	CallExpression	"r_anal_var_count ( core -> anal , fcn , 'b' , 1 )"		655578	1					
ANR	656040	Callee	r_anal_var_count		655578	0					
ANR	656041	Identifier	r_anal_var_count		655578	0					
ANR	656042	ArgumentList	core -> anal		655578	1					
ANR	656043	Argument	core -> anal		655578	0					
ANR	656044	PtrMemberAccess	core -> anal		655578	0					
ANR	656045	Identifier	core		655578	0					
ANR	656046	Identifier	anal		655578	1					
ANR	656047	Argument	fcn		655578	1					
ANR	656048	Identifier	fcn		655578	0					
ANR	656049	Argument	'b'		655578	2					
ANR	656050	PrimaryExpression	'b'		655578	0					
ANR	656051	Argument	1		655578	3					
ANR	656052	PrimaryExpression	1		655578	0					
ANR	656053	ExpressionStatement	"pj_ki ( pj , ""nlocals"" , r_anal_var_count ( core -> anal , fcn , 'r' , 0 ) + r_anal_var_count ( core -> anal , fcn , 's' , 0 ) + r_anal_var_count ( core -> anal , fcn , 'b' , 0 ) )"	1683:2:58002:58166	655578	7	True				
ANR	656054	CallExpression	"pj_ki ( pj , ""nlocals"" , r_anal_var_count ( core -> anal , fcn , 'r' , 0 ) + r_anal_var_count ( core -> anal , fcn , 's' , 0 ) + r_anal_var_count ( core -> anal , fcn , 'b' , 0 ) )"		655578	0					
ANR	656055	Callee	pj_ki		655578	0					
ANR	656056	Identifier	pj_ki		655578	0					
ANR	656057	ArgumentList	pj		655578	1					
ANR	656058	Argument	pj		655578	0					
ANR	656059	Identifier	pj		655578	0					
ANR	656060	Argument	"""nlocals"""		655578	1					
ANR	656061	PrimaryExpression	"""nlocals"""		655578	0					
ANR	656062	Argument	"r_anal_var_count ( core -> anal , fcn , 'r' , 0 ) + r_anal_var_count ( core -> anal , fcn , 's' , 0 ) + r_anal_var_count ( core -> anal , fcn , 'b' , 0 )"		655578	2					
ANR	656063	AdditiveExpression	"r_anal_var_count ( core -> anal , fcn , 'r' , 0 ) + r_anal_var_count ( core -> anal , fcn , 's' , 0 ) + r_anal_var_count ( core -> anal , fcn , 'b' , 0 )"		655578	0		+			
ANR	656064	CallExpression	"r_anal_var_count ( core -> anal , fcn , 'r' , 0 )"		655578	0					
ANR	656065	Callee	r_anal_var_count		655578	0					
ANR	656066	Identifier	r_anal_var_count		655578	0					
ANR	656067	ArgumentList	core -> anal		655578	1					
ANR	656068	Argument	core -> anal		655578	0					
ANR	656069	PtrMemberAccess	core -> anal		655578	0					
ANR	656070	Identifier	core		655578	0					
ANR	656071	Identifier	anal		655578	1					
ANR	656072	Argument	fcn		655578	1					
ANR	656073	Identifier	fcn		655578	0					
ANR	656074	Argument	'r'		655578	2					
ANR	656075	PrimaryExpression	'r'		655578	0					
ANR	656076	Argument	0		655578	3					
ANR	656077	PrimaryExpression	0		655578	0					
ANR	656078	AdditiveExpression	"r_anal_var_count ( core -> anal , fcn , 's' , 0 ) + r_anal_var_count ( core -> anal , fcn , 'b' , 0 )"		655578	1		+			
ANR	656079	CallExpression	"r_anal_var_count ( core -> anal , fcn , 's' , 0 )"		655578	0					
ANR	656080	Callee	r_anal_var_count		655578	0					
ANR	656081	Identifier	r_anal_var_count		655578	0					
ANR	656082	ArgumentList	core -> anal		655578	1					
ANR	656083	Argument	core -> anal		655578	0					
ANR	656084	PtrMemberAccess	core -> anal		655578	0					
ANR	656085	Identifier	core		655578	0					
ANR	656086	Identifier	anal		655578	1					
ANR	656087	Argument	fcn		655578	1					
ANR	656088	Identifier	fcn		655578	0					
ANR	656089	Argument	's'		655578	2					
ANR	656090	PrimaryExpression	's'		655578	0					
ANR	656091	Argument	0		655578	3					
ANR	656092	PrimaryExpression	0		655578	0					
ANR	656093	CallExpression	"r_anal_var_count ( core -> anal , fcn , 'b' , 0 )"		655578	1					
ANR	656094	Callee	r_anal_var_count		655578	0					
ANR	656095	Identifier	r_anal_var_count		655578	0					
ANR	656096	ArgumentList	core -> anal		655578	1					
ANR	656097	Argument	core -> anal		655578	0					
ANR	656098	PtrMemberAccess	core -> anal		655578	0					
ANR	656099	Identifier	core		655578	0					
ANR	656100	Identifier	anal		655578	1					
ANR	656101	Argument	fcn		655578	1					
ANR	656102	Identifier	fcn		655578	0					
ANR	656103	Argument	'b'		655578	2					
ANR	656104	PrimaryExpression	'b'		655578	0					
ANR	656105	Argument	0		655578	3					
ANR	656106	PrimaryExpression	0		655578	0					
ANR	656107	ExpressionStatement	"pj_kn ( pj , ""size"" , r_anal_fcn_size ( fcn ) )"	1687:2:58170:58212	655578	8	True				
ANR	656108	CallExpression	"pj_kn ( pj , ""size"" , r_anal_fcn_size ( fcn ) )"		655578	0					
ANR	656109	Callee	pj_kn		655578	0					
ANR	656110	Identifier	pj_kn		655578	0					
ANR	656111	ArgumentList	pj		655578	1					
ANR	656112	Argument	pj		655578	0					
ANR	656113	Identifier	pj		655578	0					
ANR	656114	Argument	"""size"""		655578	1					
ANR	656115	PrimaryExpression	"""size"""		655578	0					
ANR	656116	Argument	r_anal_fcn_size ( fcn )		655578	2					
ANR	656117	CallExpression	r_anal_fcn_size ( fcn )		655578	0					
ANR	656118	Callee	r_anal_fcn_size		655578	0					
ANR	656119	Identifier	r_anal_fcn_size		655578	0					
ANR	656120	ArgumentList	fcn		655578	1					
ANR	656121	Argument	fcn		655578	0					
ANR	656122	Identifier	fcn		655578	0					
ANR	656123	ExpressionStatement	"pj_ki ( pj , ""stack"" , fcn -> maxstack )"	1688:2:58216:58250	655578	9	True				
ANR	656124	CallExpression	"pj_ki ( pj , ""stack"" , fcn -> maxstack )"		655578	0					
ANR	656125	Callee	pj_ki		655578	0					
ANR	656126	Identifier	pj_ki		655578	0					
ANR	656127	ArgumentList	pj		655578	1					
ANR	656128	Argument	pj		655578	0					
ANR	656129	Identifier	pj		655578	0					
ANR	656130	Argument	"""stack"""		655578	1					
ANR	656131	PrimaryExpression	"""stack"""		655578	0					
ANR	656132	Argument	fcn -> maxstack		655578	2					
ANR	656133	PtrMemberAccess	fcn -> maxstack		655578	0					
ANR	656134	Identifier	fcn		655578	0					
ANR	656135	Identifier	maxstack		655578	1					
ANR	656136	ExpressionStatement	"pj_ks ( pj , ""type"" , r_anal_fcn_type_tostring ( fcn -> type ) )"	1689:2:58254:58310	655578	10	True				
ANR	656137	CallExpression	"pj_ks ( pj , ""type"" , r_anal_fcn_type_tostring ( fcn -> type ) )"		655578	0					
ANR	656138	Callee	pj_ks		655578	0					
ANR	656139	Identifier	pj_ks		655578	0					
ANR	656140	ArgumentList	pj		655578	1					
ANR	656141	Argument	pj		655578	0					
ANR	656142	Identifier	pj		655578	0					
ANR	656143	Argument	"""type"""		655578	1					
ANR	656144	PrimaryExpression	"""type"""		655578	0					
ANR	656145	Argument	r_anal_fcn_type_tostring ( fcn -> type )		655578	2					
ANR	656146	CallExpression	r_anal_fcn_type_tostring ( fcn -> type )		655578	0					
ANR	656147	Callee	r_anal_fcn_type_tostring		655578	0					
ANR	656148	Identifier	r_anal_fcn_type_tostring		655578	0					
ANR	656149	ArgumentList	fcn -> type		655578	1					
ANR	656150	Argument	fcn -> type		655578	0					
ANR	656151	PtrMemberAccess	fcn -> type		655578	0					
ANR	656152	Identifier	fcn		655578	0					
ANR	656153	Identifier	type		655578	1					
ANR	656154	IfStatement	if ( fcn -> dsc )		655578	11					
ANR	656155	Condition	fcn -> dsc	1690:6:58318:58325	655578	0	True				
ANR	656156	PtrMemberAccess	fcn -> dsc		655578	0					
ANR	656157	Identifier	fcn		655578	0					
ANR	656158	Identifier	dsc		655578	1					
ANR	656159	CompoundStatement		57:16:1916:1916	655578	1					
ANR	656160	ExpressionStatement	"pj_ks ( pj , ""signature"" , fcn -> dsc )"	1691:3:58333:58366	655578	0	True				
ANR	656161	CallExpression	"pj_ks ( pj , ""signature"" , fcn -> dsc )"		655578	0					
ANR	656162	Callee	pj_ks		655578	0					
ANR	656163	Identifier	pj_ks		655578	0					
ANR	656164	ArgumentList	pj		655578	1					
ANR	656165	Argument	pj		655578	0					
ANR	656166	Identifier	pj		655578	0					
ANR	656167	Argument	"""signature"""		655578	1					
ANR	656168	PrimaryExpression	"""signature"""		655578	0					
ANR	656169	Argument	fcn -> dsc		655578	2					
ANR	656170	PtrMemberAccess	fcn -> dsc		655578	0					
ANR	656171	Identifier	fcn		655578	0					
ANR	656172	Identifier	dsc		655578	1					
ANR	656173	ExpressionStatement	"pj_k ( pj , ""blocks"" )"	1693:2:58374:58393	655578	12	True				
ANR	656174	CallExpression	"pj_k ( pj , ""blocks"" )"		655578	0					
ANR	656175	Callee	pj_k		655578	0					
ANR	656176	Identifier	pj_k		655578	0					
ANR	656177	ArgumentList	pj		655578	1					
ANR	656178	Argument	pj		655578	0					
ANR	656179	Identifier	pj		655578	0					
ANR	656180	Argument	"""blocks"""		655578	1					
ANR	656181	PrimaryExpression	"""blocks"""		655578	0					
ANR	656182	ExpressionStatement	pj_a ( pj )	1694:2:58397:58406	655578	13	True				
ANR	656183	CallExpression	pj_a ( pj )		655578	0					
ANR	656184	Callee	pj_a		655578	0					
ANR	656185	Identifier	pj_a		655578	0					
ANR	656186	ArgumentList	pj		655578	1					
ANR	656187	Argument	pj		655578	0					
ANR	656188	Identifier	pj		655578	0					
ANR	656189	ExpressionStatement	"nodes += core_anal_graph_construct_nodes ( core , fcn , opts , pj , DB )"	1696:1:58412:58478	655578	13	True				
ANR	656190	AssignmentExpression	"nodes += core_anal_graph_construct_nodes ( core , fcn , opts , pj , DB )"		655578	0		+=			
ANR	656191	Identifier	nodes		655578	0					
ANR	656192	CallExpression	"core_anal_graph_construct_nodes ( core , fcn , opts , pj , DB )"		655578	1					
ANR	656193	Callee	core_anal_graph_construct_nodes		655578	0					
ANR	656194	Identifier	core_anal_graph_construct_nodes		655578	0					
ANR	656195	ArgumentList	core		655578	1					
ANR	656196	Argument	core		655578	0					
ANR	656197	Identifier	core		655578	0					
ANR	656198	Argument	fcn		655578	1					
ANR	656199	Identifier	fcn		655578	0					
ANR	656200	Argument	opts		655578	2					
ANR	656201	Identifier	opts		655578	0					
ANR	656202	Argument	pj		655578	3					
ANR	656203	Identifier	pj		655578	0					
ANR	656204	Argument	DB		655578	4					
ANR	656205	Identifier	DB		655578	0					
ANR	656206	ExpressionStatement	"nodes += core_anal_graph_construct_edges ( core , fcn , opts , pj , DB )"	1697:8:58488:58554	655578	14	True				
ANR	656207	AssignmentExpression	"nodes += core_anal_graph_construct_edges ( core , fcn , opts , pj , DB )"		655578	0		+=			
ANR	656208	Identifier	nodes		655578	0					
ANR	656209	CallExpression	"core_anal_graph_construct_edges ( core , fcn , opts , pj , DB )"		655578	1					
ANR	656210	Callee	core_anal_graph_construct_edges		655578	0					
ANR	656211	Identifier	core_anal_graph_construct_edges		655578	0					
ANR	656212	ArgumentList	core		655578	1					
ANR	656213	Argument	core		655578	0					
ANR	656214	Identifier	core		655578	0					
ANR	656215	Argument	fcn		655578	1					
ANR	656216	Identifier	fcn		655578	0					
ANR	656217	Argument	opts		655578	2					
ANR	656218	Identifier	opts		655578	0					
ANR	656219	Argument	pj		655578	3					
ANR	656220	Identifier	pj		655578	0					
ANR	656221	Argument	DB		655578	4					
ANR	656222	Identifier	DB		655578	0					
ANR	656223	IfStatement	if ( is_json )		655578	15					
ANR	656224	Condition	is_json	1698:5:58561:58567	655578	0	True				
ANR	656225	Identifier	is_json		655578	0					
ANR	656226	CompoundStatement		65:14:2158:2158	655578	1					
ANR	656227	ExpressionStatement	pj_end ( pj )	1699:2:58574:58585	655578	0	True				
ANR	656228	CallExpression	pj_end ( pj )		655578	0					
ANR	656229	Callee	pj_end		655578	0					
ANR	656230	Identifier	pj_end		655578	0					
ANR	656231	ArgumentList	pj		655578	1					
ANR	656232	Argument	pj		655578	0					
ANR	656233	Identifier	pj		655578	0					
ANR	656234	ExpressionStatement	pj_end ( pj )	1700:2:58589:58600	655578	1	True				
ANR	656235	CallExpression	pj_end ( pj )		655578	0					
ANR	656236	Callee	pj_end		655578	0					
ANR	656237	Identifier	pj_end		655578	0					
ANR	656238	ArgumentList	pj		655578	1					
ANR	656239	Argument	pj		655578	0					
ANR	656240	Identifier	pj		655578	0					
ANR	656241	ExpressionStatement	free ( pal_jump )	1702:1:58606:58621	655578	16	True				
ANR	656242	CallExpression	free ( pal_jump )		655578	0					
ANR	656243	Callee	free		655578	0					
ANR	656244	Identifier	free		655578	0					
ANR	656245	ArgumentList	pal_jump		655578	1					
ANR	656246	Argument	pal_jump		655578	0					
ANR	656247	Identifier	pal_jump		655578	0					
ANR	656248	ExpressionStatement	free ( pal_fail )	1703:1:58624:58639	655578	17	True				
ANR	656249	CallExpression	free ( pal_fail )		655578	0					
ANR	656250	Callee	free		655578	0					
ANR	656251	Identifier	free		655578	0					
ANR	656252	ArgumentList	pal_fail		655578	1					
ANR	656253	Argument	pal_fail		655578	0					
ANR	656254	Identifier	pal_fail		655578	0					
ANR	656255	ExpressionStatement	free ( pal_trfa )	1704:1:58642:58657	655578	18	True				
ANR	656256	CallExpression	free ( pal_trfa )		655578	0					
ANR	656257	Callee	free		655578	0					
ANR	656258	Identifier	free		655578	0					
ANR	656259	ArgumentList	pal_trfa		655578	1					
ANR	656260	Argument	pal_trfa		655578	0					
ANR	656261	Identifier	pal_trfa		655578	0					
ANR	656262	ExpressionStatement	free ( pal_curr )	1705:1:58660:58675	655578	19	True				
ANR	656263	CallExpression	free ( pal_curr )		655578	0					
ANR	656264	Callee	free		655578	0					
ANR	656265	Identifier	free		655578	0					
ANR	656266	ArgumentList	pal_curr		655578	1					
ANR	656267	Argument	pal_curr		655578	0					
ANR	656268	Identifier	pal_curr		655578	0					
ANR	656269	ExpressionStatement	free ( pal_traced )	1706:1:58678:58695	655578	20	True				
ANR	656270	CallExpression	free ( pal_traced )		655578	0					
ANR	656271	Callee	free		655578	0					
ANR	656272	Identifier	free		655578	0					
ANR	656273	ArgumentList	pal_traced		655578	1					
ANR	656274	Argument	pal_traced		655578	0					
ANR	656275	Identifier	pal_traced		655578	0					
ANR	656276	ExpressionStatement	free ( pal_box4 )	1707:1:58698:58713	655578	21	True				
ANR	656277	CallExpression	free ( pal_box4 )		655578	0					
ANR	656278	Callee	free		655578	0					
ANR	656279	Identifier	free		655578	0					
ANR	656280	ArgumentList	pal_box4		655578	1					
ANR	656281	Argument	pal_box4		655578	0					
ANR	656282	Identifier	pal_box4		655578	0					
ANR	656283	ReturnStatement	return nodes ;	1708:1:58716:58728	655578	22	True				
ANR	656284	Identifier	nodes		655578	0					
ANR	656285	ReturnType	static int		655578	1					
ANR	656286	Identifier	core_anal_graph_nodes		655578	2					
ANR	656287	ParameterList	"RCore * core , RAnalFunction * fcn , int opts , PJ * pj"		655578	3					
ANR	656288	Parameter	RCore * core	1634:33:56360:56370	655578	0	True				
ANR	656289	ParameterType	RCore *		655578	0					
ANR	656290	Identifier	core		655578	1					
ANR	656291	Parameter	RAnalFunction * fcn	1634:46:56373:56390	655578	1	True				
ANR	656292	ParameterType	RAnalFunction *		655578	0					
ANR	656293	Identifier	fcn		655578	1					
ANR	656294	Parameter	int opts	1634:66:56393:56400	655578	2	True				
ANR	656295	ParameterType	int		655578	0					
ANR	656296	Identifier	opts		655578	1					
ANR	656297	Parameter	PJ * pj	1634:76:56403:56408	655578	3	True				
ANR	656298	ParameterType	PJ *		655578	0					
ANR	656299	Identifier	pj		655578	1					
ANR	656300	CFGEntryNode	ENTRY		655578		True				
ANR	656301	CFGExitNode	EXIT		655578		True				
ANR	656302	Symbol	* fcn		655578						
ANR	656303	Symbol	is_json		655578						
ANR	656304	Symbol	ns		655578						
ANR	656305	Symbol	fcn -> name		655578						
ANR	656306	Symbol	r_anal_fcn_size		655578						
ANR	656307	Symbol	pal_traced		655578						
ANR	656308	Symbol	* core		655578						
ANR	656309	Symbol	fcn -> nargs		655578						
ANR	656310	Symbol	core -> anal		655578						
ANR	656311	Symbol	fcn -> maxstack		655578						
ANR	656312	Symbol	fcn		655578						
ANR	656313	Symbol	opts		655578						
ANR	656314	Symbol	fcn_name_escaped		655578						
ANR	656315	Symbol	sdb_encode		655578						
ANR	656316	Symbol	core_anal_graph_construct_edges		655578						
ANR	656317	Symbol	r_anal_var_count		655578						
ANR	656318	Symbol	R_CORE_ANAL_KEYVALUE		655578						
ANR	656319	Symbol	pal_box4		655578						
ANR	656320	Symbol	fcn -> ninstr		655578						
ANR	656321	Symbol	* * core		655578						
ANR	656322	Symbol	r_str_get		655578						
ANR	656323	Symbol	pal_trfa		655578						
ANR	656324	Symbol	is_keva		655578						
ANR	656325	Symbol	pal_curr		655578						
ANR	656326	Symbol	core -> anal -> sdb		655578						
ANR	656327	Symbol	NULL		655578						
ANR	656328	Symbol	pal_jump		655578						
ANR	656329	Symbol	fcn -> type		655578						
ANR	656330	Symbol	r_str_escape_utf8_for_json		655578						
ANR	656331	Symbol	core		655578						
ANR	656332	Symbol	ename		655578						
ANR	656333	Symbol	fcn -> dsc		655578						
ANR	656334	Symbol	nodes		655578						
ANR	656335	Symbol	* core -> anal		655578						
ANR	656336	Symbol	pal_fail		655578						
ANR	656337	Symbol	fcn -> bbs		655578						
ANR	656338	Symbol	core_anal_graph_construct_nodes		655578						
ANR	656339	Symbol	R_CORE_ANAL_JSON		655578						
ANR	656340	Symbol	fcn -> addr		655578						
ANR	656341	Symbol	pj		655578						
ANR	656342	Symbol	DB		655578						
ANR	656343	Symbol	palColorFor		655578						
ANR	656344	Symbol	sdb_ns		655578						
ANR	656345	Symbol	r_anal_fcn_type_tostring		655578						
ANR	656346	Function	r_core_anal_bb	1712:0:58812:60789							
ANR	656347	FunctionDef	"r_core_anal_bb (RCore * core , RAnalFunction * fcn , ut64 addr , int head)"		656346	0					
ANR	656348	CompoundStatement		1712:79:58891:60789	656346	0					
ANR	656349	IdentifierDeclStatement	"RAnalBlock * bb , * bbi ;"	1713:1:58894:58914	656346	0	True				
ANR	656350	IdentifierDecl	* bb		656346	0					
ANR	656351	IdentifierDeclType	RAnalBlock *		656346	0					
ANR	656352	Identifier	bb		656346	1					
ANR	656353	IdentifierDecl	* bbi		656346	1					
ANR	656354	IdentifierDeclType	RAnalBlock *		656346	0					
ANR	656355	Identifier	bbi		656346	1					
ANR	656356	IdentifierDeclStatement	RListIter * iter ;	1714:1:58917:58932	656346	1	True				
ANR	656357	IdentifierDecl	* iter		656346	0					
ANR	656358	IdentifierDeclType	RListIter *		656346	0					
ANR	656359	Identifier	iter		656346	1					
ANR	656360	IdentifierDeclStatement	"ut64 jump , fail ;"	1715:1:58935:58950	656346	2	True				
ANR	656361	IdentifierDecl	jump		656346	0					
ANR	656362	IdentifierDeclType	ut64		656346	0					
ANR	656363	Identifier	jump		656346	1					
ANR	656364	IdentifierDecl	fail		656346	1					
ANR	656365	IdentifierDeclType	ut64		656346	0					
ANR	656366	Identifier	fail		656346	1					
ANR	656367	IdentifierDeclStatement	int rc = true ;	1716:1:58953:58966	656346	3	True				
ANR	656368	IdentifierDecl	rc = true		656346	0					
ANR	656369	IdentifierDeclType	int		656346	0					
ANR	656370	Identifier	rc		656346	1					
ANR	656371	AssignmentExpression	rc = true		656346	2		=			
ANR	656372	Identifier	true		656346	0					
ANR	656373	Identifier	true		656346	1					
ANR	656374	IdentifierDeclStatement	int ret = R_ANAL_RET_NEW ;	1717:1:58969:58993	656346	4	True				
ANR	656375	IdentifierDecl	ret = R_ANAL_RET_NEW		656346	0					
ANR	656376	IdentifierDeclType	int		656346	0					
ANR	656377	Identifier	ret		656346	1					
ANR	656378	AssignmentExpression	ret = R_ANAL_RET_NEW		656346	2		=			
ANR	656379	Identifier	R_ANAL_RET_NEW		656346	0					
ANR	656380	Identifier	R_ANAL_RET_NEW		656346	1					
ANR	656381	IdentifierDeclStatement	"bool x86 = core -> anal -> cur -> arch && ! strcmp ( core -> anal -> cur -> arch , ""x86"" ) ;"	1718:1:58996:59070	656346	5	True				
ANR	656382	IdentifierDecl	"x86 = core -> anal -> cur -> arch && ! strcmp ( core -> anal -> cur -> arch , ""x86"" )"		656346	0					
ANR	656383	IdentifierDeclType	bool		656346	0					
ANR	656384	Identifier	x86		656346	1					
ANR	656385	AssignmentExpression	"x86 = core -> anal -> cur -> arch && ! strcmp ( core -> anal -> cur -> arch , ""x86"" )"		656346	2		=			
ANR	656386	Identifier	x86		656346	0					
ANR	656387	AndExpression	"core -> anal -> cur -> arch && ! strcmp ( core -> anal -> cur -> arch , ""x86"" )"		656346	1		&&			
ANR	656388	PtrMemberAccess	core -> anal -> cur -> arch		656346	0					
ANR	656389	PtrMemberAccess	core -> anal -> cur		656346	0					
ANR	656390	PtrMemberAccess	core -> anal		656346	0					
ANR	656391	Identifier	core		656346	0					
ANR	656392	Identifier	anal		656346	1					
ANR	656393	Identifier	cur		656346	1					
ANR	656394	Identifier	arch		656346	1					
ANR	656395	UnaryOperationExpression	"! strcmp ( core -> anal -> cur -> arch , ""x86"" )"		656346	1					
ANR	656396	UnaryOperator	!		656346	0					
ANR	656397	CallExpression	"strcmp ( core -> anal -> cur -> arch , ""x86"" )"		656346	1					
ANR	656398	Callee	strcmp		656346	0					
ANR	656399	Identifier	strcmp		656346	0					
ANR	656400	ArgumentList	core -> anal -> cur -> arch		656346	1					
ANR	656401	Argument	core -> anal -> cur -> arch		656346	0					
ANR	656402	PtrMemberAccess	core -> anal -> cur -> arch		656346	0					
ANR	656403	PtrMemberAccess	core -> anal -> cur		656346	0					
ANR	656404	PtrMemberAccess	core -> anal		656346	0					
ANR	656405	Identifier	core		656346	0					
ANR	656406	Identifier	anal		656346	1					
ANR	656407	Identifier	cur		656346	1					
ANR	656408	Identifier	arch		656346	1					
ANR	656409	Argument	"""x86"""		656346	1					
ANR	656410	PrimaryExpression	"""x86"""		656346	0					
ANR	656411	IfStatement	if ( -- fcn -> depth <= 0 )		656346	6					
ANR	656412	Condition	-- fcn -> depth <= 0	1720:5:59078:59094	656346	0	True				
ANR	656413	RelationalExpression	-- fcn -> depth <= 0		656346	0		<=			
ANR	656414	UnaryExpression	-- fcn -> depth		656346	0					
ANR	656415	IncDec	--		656346	0					
ANR	656416	PtrMemberAccess	fcn -> depth		656346	1					
ANR	656417	Identifier	fcn		656346	0					
ANR	656418	Identifier	depth		656346	1					
ANR	656419	PrimaryExpression	0		656346	1					
ANR	656420	CompoundStatement		9:24:205:205	656346	1					
ANR	656421	ReturnStatement	return false ;	1721:2:59101:59113	656346	0	True				
ANR	656422	Identifier	false		656346	0					
ANR	656423	ExpressionStatement	bb = r_anal_bb_new ( )	1724:1:59120:59141	656346	7	True				
ANR	656424	AssignmentExpression	bb = r_anal_bb_new ( )		656346	0		=			
ANR	656425	Identifier	bb		656346	0					
ANR	656426	CallExpression	r_anal_bb_new ( )		656346	1					
ANR	656427	Callee	r_anal_bb_new		656346	0					
ANR	656428	Identifier	r_anal_bb_new		656346	0					
ANR	656429	ArgumentList			656346	1					
ANR	656430	IfStatement	if ( ! bb )		656346	8					
ANR	656431	Condition	! bb	1725:5:59148:59150	656346	0	True				
ANR	656432	UnaryOperationExpression	! bb		656346	0					
ANR	656433	UnaryOperator	!		656346	0					
ANR	656434	Identifier	bb		656346	1					
ANR	656435	CompoundStatement		14:10:261:261	656346	1					
ANR	656436	ReturnStatement	return false ;	1726:2:59157:59169	656346	0	True				
ANR	656437	Identifier	false		656346	0					
ANR	656438	Statement	r_list_foreach	1729:1:59176:59189	656346	9	True				
ANR	656439	Statement	(	1729:16:59191:59191	656346	10	True				
ANR	656440	Statement	fcn	1729:17:59192:59194	656346	11	True				
ANR	656441	Statement	->	1729:20:59195:59196	656346	12	True				
ANR	656442	Statement	bbs	1729:22:59197:59199	656346	13	True				
ANR	656443	Statement	","	1729:25:59200:59200	656346	14	True				
ANR	656444	Statement	iter	1729:27:59202:59205	656346	15	True				
ANR	656445	Statement	","	1729:31:59206:59206	656346	16	True				
ANR	656446	Statement	bbi	1729:33:59208:59210	656346	17	True				
ANR	656447	Statement	)	1729:36:59211:59211	656346	18	True				
ANR	656448	CompoundStatement		18:38:321:321	656346	19					
ANR	656449	IfStatement	"if ( addr >= bbi -> addr && addr < bbi -> addr + bbi -> size && ( ! core -> anal -> opt . jmpmid || ! x86 || r_anal_bb_op_starts_at ( bbi , addr ) ) )"		656346	0					
ANR	656450	Condition	"addr >= bbi -> addr && addr < bbi -> addr + bbi -> size && ( ! core -> anal -> opt . jmpmid || ! x86 || r_anal_bb_op_starts_at ( bbi , addr ) )"	1730:6:59221:59350	656346	0	True				
ANR	656451	AndExpression	"addr >= bbi -> addr && addr < bbi -> addr + bbi -> size && ( ! core -> anal -> opt . jmpmid || ! x86 || r_anal_bb_op_starts_at ( bbi , addr ) )"		656346	0		&&			
ANR	656452	RelationalExpression	addr >= bbi -> addr		656346	0		>=			
ANR	656453	Identifier	addr		656346	0					
ANR	656454	PtrMemberAccess	bbi -> addr		656346	1					
ANR	656455	Identifier	bbi		656346	0					
ANR	656456	Identifier	addr		656346	1					
ANR	656457	AndExpression	"addr < bbi -> addr + bbi -> size && ( ! core -> anal -> opt . jmpmid || ! x86 || r_anal_bb_op_starts_at ( bbi , addr ) )"		656346	1		&&			
ANR	656458	RelationalExpression	addr < bbi -> addr + bbi -> size		656346	0		<			
ANR	656459	Identifier	addr		656346	0					
ANR	656460	AdditiveExpression	bbi -> addr + bbi -> size		656346	1		+			
ANR	656461	PtrMemberAccess	bbi -> addr		656346	0					
ANR	656462	Identifier	bbi		656346	0					
ANR	656463	Identifier	addr		656346	1					
ANR	656464	PtrMemberAccess	bbi -> size		656346	1					
ANR	656465	Identifier	bbi		656346	0					
ANR	656466	Identifier	size		656346	1					
ANR	656467	OrExpression	"! core -> anal -> opt . jmpmid || ! x86 || r_anal_bb_op_starts_at ( bbi , addr )"		656346	1		||			
ANR	656468	UnaryOperationExpression	! core -> anal -> opt . jmpmid		656346	0					
ANR	656469	UnaryOperator	!		656346	0					
ANR	656470	MemberAccess	core -> anal -> opt . jmpmid		656346	1					
ANR	656471	PtrMemberAccess	core -> anal -> opt		656346	0					
ANR	656472	PtrMemberAccess	core -> anal		656346	0					
ANR	656473	Identifier	core		656346	0					
ANR	656474	Identifier	anal		656346	1					
ANR	656475	Identifier	opt		656346	1					
ANR	656476	Identifier	jmpmid		656346	1					
ANR	656477	OrExpression	"! x86 || r_anal_bb_op_starts_at ( bbi , addr )"		656346	1		||			
ANR	656478	UnaryOperationExpression	! x86		656346	0					
ANR	656479	UnaryOperator	!		656346	0					
ANR	656480	Identifier	x86		656346	1					
ANR	656481	CallExpression	"r_anal_bb_op_starts_at ( bbi , addr )"		656346	1					
ANR	656482	Callee	r_anal_bb_op_starts_at		656346	0					
ANR	656483	Identifier	r_anal_bb_op_starts_at		656346	0					
ANR	656484	ArgumentList	bbi		656346	1					
ANR	656485	Argument	bbi		656346	0					
ANR	656486	Identifier	bbi		656346	0					
ANR	656487	Argument	addr		656346	1					
ANR	656488	Identifier	addr		656346	0					
ANR	656489	CompoundStatement		20:82:461:461	656346	1					
ANR	656490	ExpressionStatement	"ret = r_anal_fcn_split_bb ( core -> anal , fcn , bbi , addr )"	1732:3:59358:59412	656346	0	True				
ANR	656491	AssignmentExpression	"ret = r_anal_fcn_split_bb ( core -> anal , fcn , bbi , addr )"		656346	0		=			
ANR	656492	Identifier	ret		656346	0					
ANR	656493	CallExpression	"r_anal_fcn_split_bb ( core -> anal , fcn , bbi , addr )"		656346	1					
ANR	656494	Callee	r_anal_fcn_split_bb		656346	0					
ANR	656495	Identifier	r_anal_fcn_split_bb		656346	0					
ANR	656496	ArgumentList	core -> anal		656346	1					
ANR	656497	Argument	core -> anal		656346	0					
ANR	656498	PtrMemberAccess	core -> anal		656346	0					
ANR	656499	Identifier	core		656346	0					
ANR	656500	Identifier	anal		656346	1					
ANR	656501	Argument	fcn		656346	1					
ANR	656502	Identifier	fcn		656346	0					
ANR	656503	Argument	bbi		656346	2					
ANR	656504	Identifier	bbi		656346	0					
ANR	656505	Argument	addr		656346	3					
ANR	656506	Identifier	addr		656346	0					
ANR	656507	BreakStatement	break ;	1733:3:59417:59422	656346	1	True				
ANR	656508	IdentifierDeclStatement	ut8 * buf = NULL ;	1736:1:59432:59447	656346	20	True				
ANR	656509	IdentifierDecl	* buf = NULL		656346	0					
ANR	656510	IdentifierDeclType	ut8 *		656346	0					
ANR	656511	Identifier	buf		656346	1					
ANR	656512	AssignmentExpression	* buf = NULL		656346	2		=			
ANR	656513	Identifier	NULL		656346	0					
ANR	656514	Identifier	NULL		656346	1					
ANR	656515	IfStatement	if ( ret == R_ANAL_RET_DUP )		656346	21					
ANR	656516	Condition	ret == R_ANAL_RET_DUP	1737:5:59454:59474	656346	0	True				
ANR	656517	EqualityExpression	ret == R_ANAL_RET_DUP		656346	0		==			
ANR	656518	Identifier	ret		656346	0					
ANR	656519	Identifier	R_ANAL_RET_DUP		656346	1					
ANR	656520	CompoundStatement		26:28:585:585	656346	1					
ANR	656521	GotoStatement	goto error ;	1739:2:59508:59518	656346	0	True				
ANR	656522	Identifier	error		656346	0					
ANR	656523	IfStatement	if ( ret == R_ANAL_RET_NEW )		656346	22					
ANR	656524	Condition	ret == R_ANAL_RET_NEW	1742:5:59529:59549	656346	0	True				
ANR	656525	EqualityExpression	ret == R_ANAL_RET_NEW		656346	0		==			
ANR	656526	Identifier	ret		656346	0					
ANR	656527	Identifier	R_ANAL_RET_NEW		656346	1					
ANR	656528	CompoundStatement		39:2:902:909	656346	1					
ANR	656529	IdentifierDeclStatement	const int buflen = core -> anal -> opt . bb_max_size ;	1744:2:59642:59688	656346	0	True				
ANR	656530	IdentifierDecl	buflen = core -> anal -> opt . bb_max_size		656346	0					
ANR	656531	IdentifierDeclType	const int		656346	0					
ANR	656532	Identifier	buflen		656346	1					
ANR	656533	AssignmentExpression	buflen = core -> anal -> opt . bb_max_size		656346	2		=			
ANR	656534	Identifier	buflen		656346	0					
ANR	656535	MemberAccess	core -> anal -> opt . bb_max_size		656346	1					
ANR	656536	PtrMemberAccess	core -> anal -> opt		656346	0					
ANR	656537	PtrMemberAccess	core -> anal		656346	0					
ANR	656538	Identifier	core		656346	0					
ANR	656539	Identifier	anal		656346	1					
ANR	656540	Identifier	opt		656346	1					
ANR	656541	Identifier	bb_max_size		656346	1					
ANR	656542	ExpressionStatement	"buf = calloc ( 1 , buflen )"	1745:2:59716:59740	656346	1	True				
ANR	656543	AssignmentExpression	"buf = calloc ( 1 , buflen )"		656346	0		=			
ANR	656544	Identifier	buf		656346	0					
ANR	656545	CallExpression	"calloc ( 1 , buflen )"		656346	1					
ANR	656546	Callee	calloc		656346	0					
ANR	656547	Identifier	calloc		656346	0					
ANR	656548	ArgumentList	1		656346	1					
ANR	656549	Argument	1		656346	0					
ANR	656550	PrimaryExpression	1		656346	0					
ANR	656551	Argument	buflen		656346	1					
ANR	656552	Identifier	buflen		656346	0					
ANR	656553	IfStatement	if ( ! buf )		656346	2					
ANR	656554	Condition	! buf	1746:6:59748:59751	656346	0	True				
ANR	656555	UnaryOperationExpression	! buf		656346	0					
ANR	656556	UnaryOperator	!		656346	0					
ANR	656557	Identifier	buf		656346	1					
ANR	656558	CompoundStatement		35:12:862:862	656346	1					
ANR	656559	GotoStatement	goto error ;	1747:3:59759:59769	656346	0	True				
ANR	656560	Identifier	error		656346	0					
ANR	656561	IdentifierDeclStatement	int bblen = 0 ;	1749:2:59777:59790	656346	3	True				
ANR	656562	IdentifierDecl	bblen = 0		656346	0					
ANR	656563	IdentifierDeclType	int		656346	0					
ANR	656564	Identifier	bblen		656346	1					
ANR	656565	AssignmentExpression	bblen = 0		656346	2		=			
ANR	656566	Identifier	bblen		656346	0					
ANR	656567	PrimaryExpression	0		656346	1					
ANR	656568	IdentifierDeclStatement	ut64 at ;	1750:2:59794:59801	656346	4	True				
ANR	656569	IdentifierDecl	at		656346	0					
ANR	656570	IdentifierDeclType	ut64		656346	0					
ANR	656571	Identifier	at		656346	1					
ANR	656572	DoStatement	do		656346	5					
ANR	656573	CompoundStatement		40:5:916:916	656346	0					
ANR	656574	ExpressionStatement	at = addr + bblen	1752:3:59813:59830	656346	0	True				
ANR	656575	AssignmentExpression	at = addr + bblen		656346	0		=			
ANR	656576	Identifier	at		656346	0					
ANR	656577	AdditiveExpression	addr + bblen		656346	1		+			
ANR	656578	Identifier	addr		656346	0					
ANR	656579	Identifier	bblen		656346	1					
ANR	656580	IfStatement	"if ( ! r_io_is_valid_offset ( core -> io , at , ! core -> anal -> opt . noncode ) )"		656346	1					
ANR	656581	Condition	"! r_io_is_valid_offset ( core -> io , at , ! core -> anal -> opt . noncode )"	1753:7:59839:59900	656346	0	True				
ANR	656582	UnaryOperationExpression	"! r_io_is_valid_offset ( core -> io , at , ! core -> anal -> opt . noncode )"		656346	0					
ANR	656583	UnaryOperator	!		656346	0					
ANR	656584	CallExpression	"r_io_is_valid_offset ( core -> io , at , ! core -> anal -> opt . noncode )"		656346	1					
ANR	656585	Callee	r_io_is_valid_offset		656346	0					
ANR	656586	Identifier	r_io_is_valid_offset		656346	0					
ANR	656587	ArgumentList	core -> io		656346	1					
ANR	656588	Argument	core -> io		656346	0					
ANR	656589	PtrMemberAccess	core -> io		656346	0					
ANR	656590	Identifier	core		656346	0					
ANR	656591	Identifier	io		656346	1					
ANR	656592	Argument	at		656346	1					
ANR	656593	Identifier	at		656346	0					
ANR	656594	Argument	! core -> anal -> opt . noncode		656346	2					
ANR	656595	UnaryOperationExpression	! core -> anal -> opt . noncode		656346	0					
ANR	656596	UnaryOperator	!		656346	0					
ANR	656597	MemberAccess	core -> anal -> opt . noncode		656346	1					
ANR	656598	PtrMemberAccess	core -> anal -> opt		656346	0					
ANR	656599	PtrMemberAccess	core -> anal		656346	0					
ANR	656600	Identifier	core		656346	0					
ANR	656601	Identifier	anal		656346	1					
ANR	656602	Identifier	opt		656346	1					
ANR	656603	Identifier	noncode		656346	1					
ANR	656604	CompoundStatement		42:71:1011:1011	656346	1					
ANR	656605	GotoStatement	goto error ;	1754:4:59909:59919	656346	0	True				
ANR	656606	Identifier	error		656346	0					
ANR	656607	IfStatement	"if ( ! r_io_read_at ( core -> io , at , buf , core -> anal -> opt . bb_max_size ) )"		656346	2					
ANR	656608	Condition	"! r_io_read_at ( core -> io , at , buf , core -> anal -> opt . bb_max_size )"	1756:7:59933:59994	656346	0	True				
ANR	656609	UnaryOperationExpression	"! r_io_read_at ( core -> io , at , buf , core -> anal -> opt . bb_max_size )"		656346	0					
ANR	656610	UnaryOperator	!		656346	0					
ANR	656611	CallExpression	"r_io_read_at ( core -> io , at , buf , core -> anal -> opt . bb_max_size )"		656346	1					
ANR	656612	Callee	r_io_read_at		656346	0					
ANR	656613	Identifier	r_io_read_at		656346	0					
ANR	656614	ArgumentList	core -> io		656346	1					
ANR	656615	Argument	core -> io		656346	0					
ANR	656616	PtrMemberAccess	core -> io		656346	0					
ANR	656617	Identifier	core		656346	0					
ANR	656618	Identifier	io		656346	1					
ANR	656619	Argument	at		656346	1					
ANR	656620	Identifier	at		656346	0					
ANR	656621	Argument	buf		656346	2					
ANR	656622	Identifier	buf		656346	0					
ANR	656623	Argument	core -> anal -> opt . bb_max_size		656346	3					
ANR	656624	MemberAccess	core -> anal -> opt . bb_max_size		656346	0					
ANR	656625	PtrMemberAccess	core -> anal -> opt		656346	0					
ANR	656626	PtrMemberAccess	core -> anal		656346	0					
ANR	656627	Identifier	core		656346	0					
ANR	656628	Identifier	anal		656346	1					
ANR	656629	Identifier	opt		656346	1					
ANR	656630	Identifier	bb_max_size		656346	1					
ANR	656631	CompoundStatement		45:71:1105:1105	656346	1					
ANR	656632	GotoStatement	goto error ;	1757:4:60015:60025	656346	0	True				
ANR	656633	Identifier	error		656346	0					
ANR	656634	ExpressionStatement	"bblen = r_anal_bb ( core -> anal , bb , at , buf , buflen , head )"	1759:3:60035:60092	656346	3	True				
ANR	656635	AssignmentExpression	"bblen = r_anal_bb ( core -> anal , bb , at , buf , buflen , head )"		656346	0		=			
ANR	656636	Identifier	bblen		656346	0					
ANR	656637	CallExpression	"r_anal_bb ( core -> anal , bb , at , buf , buflen , head )"		656346	1					
ANR	656638	Callee	r_anal_bb		656346	0					
ANR	656639	Identifier	r_anal_bb		656346	0					
ANR	656640	ArgumentList	core -> anal		656346	1					
ANR	656641	Argument	core -> anal		656346	0					
ANR	656642	PtrMemberAccess	core -> anal		656346	0					
ANR	656643	Identifier	core		656346	0					
ANR	656644	Identifier	anal		656346	1					
ANR	656645	Argument	bb		656346	1					
ANR	656646	Identifier	bb		656346	0					
ANR	656647	Argument	at		656346	2					
ANR	656648	Identifier	at		656346	0					
ANR	656649	Argument	buf		656346	3					
ANR	656650	Identifier	buf		656346	0					
ANR	656651	Argument	buflen		656346	4					
ANR	656652	Identifier	buflen		656346	0					
ANR	656653	Argument	head		656346	5					
ANR	656654	Identifier	head		656346	0					
ANR	656655	IfStatement	if ( bblen == R_ANAL_RET_ERROR || ( bblen == R_ANAL_RET_END && bb -> size < 1 ) )		656346	4					
ANR	656656	Condition	bblen == R_ANAL_RET_ERROR || ( bblen == R_ANAL_RET_END && bb -> size < 1 )	1760:7:60101:60170	656346	0	True				
ANR	656657	OrExpression	bblen == R_ANAL_RET_ERROR || ( bblen == R_ANAL_RET_END && bb -> size < 1 )		656346	0		||			
ANR	656658	EqualityExpression	bblen == R_ANAL_RET_ERROR		656346	0		==			
ANR	656659	Identifier	bblen		656346	0					
ANR	656660	Identifier	R_ANAL_RET_ERROR		656346	1					
ANR	656661	AndExpression	bblen == R_ANAL_RET_END && bb -> size < 1		656346	1		&&			
ANR	656662	EqualityExpression	bblen == R_ANAL_RET_END		656346	0		==			
ANR	656663	Identifier	bblen		656346	0					
ANR	656664	Identifier	R_ANAL_RET_END		656346	1					
ANR	656665	RelationalExpression	bb -> size < 1		656346	1		<			
ANR	656666	PtrMemberAccess	bb -> size		656346	0					
ANR	656667	Identifier	bb		656346	0					
ANR	656668	Identifier	size		656346	1					
ANR	656669	PrimaryExpression	1		656346	1					
ANR	656670	CompoundStatement		49:79:1281:1281	656346	1					
ANR	656671	GotoStatement	goto error ;	1761:4:60204:60214	656346	0	True				
ANR	656672	Identifier	error		656346	0					
ANR	656673	IfStatement	if ( bblen == R_ANAL_RET_END )		656346	5					
ANR	656674	Condition	bblen == R_ANAL_RET_END	1763:7:60228:60250	656346	0	True				
ANR	656675	EqualityExpression	bblen == R_ANAL_RET_END		656346	0		==			
ANR	656676	Identifier	bblen		656346	0					
ANR	656677	Identifier	R_ANAL_RET_END		656346	1					
ANR	656678	CompoundStatement		52:32:1361:1361	656346	1					
ANR	656679	ExpressionStatement	"ret = r_anal_fcn_bb_overlaps ( fcn , bb )"	1764:4:60286:60324	656346	0	True				
ANR	656680	AssignmentExpression	"ret = r_anal_fcn_bb_overlaps ( fcn , bb )"		656346	0		=			
ANR	656681	Identifier	ret		656346	0					
ANR	656682	CallExpression	"r_anal_fcn_bb_overlaps ( fcn , bb )"		656346	1					
ANR	656683	Callee	r_anal_fcn_bb_overlaps		656346	0					
ANR	656684	Identifier	r_anal_fcn_bb_overlaps		656346	0					
ANR	656685	ArgumentList	fcn		656346	1					
ANR	656686	Argument	fcn		656346	0					
ANR	656687	Identifier	fcn		656346	0					
ANR	656688	Argument	bb		656346	1					
ANR	656689	Identifier	bb		656346	0					
ANR	656690	IfStatement	if ( ret == R_ANAL_RET_NEW )		656346	1					
ANR	656691	Condition	ret == R_ANAL_RET_NEW	1765:8:60334:60354	656346	0	True				
ANR	656692	EqualityExpression	ret == R_ANAL_RET_NEW		656346	0		==			
ANR	656693	Identifier	ret		656346	0					
ANR	656694	Identifier	R_ANAL_RET_NEW		656346	1					
ANR	656695	CompoundStatement		54:31:1465:1465	656346	1					
ANR	656696	ExpressionStatement	"r_anal_fcn_bbadd ( fcn , bb )"	1766:5:60364:60390	656346	0	True				
ANR	656697	CallExpression	"r_anal_fcn_bbadd ( fcn , bb )"		656346	0					
ANR	656698	Callee	r_anal_fcn_bbadd		656346	0					
ANR	656699	Identifier	r_anal_fcn_bbadd		656346	0					
ANR	656700	ArgumentList	fcn		656346	1					
ANR	656701	Argument	fcn		656346	0					
ANR	656702	Identifier	fcn		656346	0					
ANR	656703	Argument	bb		656346	1					
ANR	656704	Identifier	bb		656346	0					
ANR	656705	ExpressionStatement	fail = bb -> fail	1767:5:60397:60412	656346	1	True				
ANR	656706	AssignmentExpression	fail = bb -> fail		656346	0		=			
ANR	656707	Identifier	fail		656346	0					
ANR	656708	PtrMemberAccess	bb -> fail		656346	1					
ANR	656709	Identifier	bb		656346	0					
ANR	656710	Identifier	fail		656346	1					
ANR	656711	ExpressionStatement	jump = bb -> jump	1768:5:60419:60434	656346	2	True				
ANR	656712	AssignmentExpression	jump = bb -> jump		656346	0		=			
ANR	656713	Identifier	jump		656346	0					
ANR	656714	PtrMemberAccess	bb -> jump		656346	1					
ANR	656715	Identifier	bb		656346	0					
ANR	656716	Identifier	jump		656346	1					
ANR	656717	IfStatement	if ( fail != - 1 )		656346	3					
ANR	656718	Condition	fail != - 1	1769:9:60445:60454	656346	0	True				
ANR	656719	EqualityExpression	fail != - 1		656346	0		!=			
ANR	656720	Identifier	fail		656346	0					
ANR	656721	UnaryOperationExpression	- 1		656346	1					
ANR	656722	UnaryOperator	-		656346	0					
ANR	656723	PrimaryExpression	1		656346	1					
ANR	656724	CompoundStatement		58:21:1565:1565	656346	1					
ANR	656725	ExpressionStatement	"r_core_anal_bb ( core , fcn , fail , false )"	1770:6:60465:60504	656346	0	True				
ANR	656726	CallExpression	"r_core_anal_bb ( core , fcn , fail , false )"		656346	0					
ANR	656727	Callee	r_core_anal_bb		656346	0					
ANR	656728	Identifier	r_core_anal_bb		656346	0					
ANR	656729	ArgumentList	core		656346	1					
ANR	656730	Argument	core		656346	0					
ANR	656731	Identifier	core		656346	0					
ANR	656732	Argument	fcn		656346	1					
ANR	656733	Identifier	fcn		656346	0					
ANR	656734	Argument	fail		656346	2					
ANR	656735	Identifier	fail		656346	0					
ANR	656736	Argument	false		656346	3					
ANR	656737	Identifier	false		656346	0					
ANR	656738	IfStatement	if ( jump != - 1 )		656346	4					
ANR	656739	Condition	jump != - 1	1772:9:60522:60531	656346	0	True				
ANR	656740	EqualityExpression	jump != - 1		656346	0		!=			
ANR	656741	Identifier	jump		656346	0					
ANR	656742	UnaryOperationExpression	- 1		656346	1					
ANR	656743	UnaryOperator	-		656346	0					
ANR	656744	PrimaryExpression	1		656346	1					
ANR	656745	CompoundStatement		61:21:1642:1642	656346	1					
ANR	656746	ExpressionStatement	"r_core_anal_bb ( core , fcn , jump , false )"	1773:6:60542:60581	656346	0	True				
ANR	656747	CallExpression	"r_core_anal_bb ( core , fcn , jump , false )"		656346	0					
ANR	656748	Callee	r_core_anal_bb		656346	0					
ANR	656749	Identifier	r_core_anal_bb		656346	0					
ANR	656750	ArgumentList	core		656346	1					
ANR	656751	Argument	core		656346	0					
ANR	656752	Identifier	core		656346	0					
ANR	656753	Argument	fcn		656346	1					
ANR	656754	Identifier	fcn		656346	0					
ANR	656755	Argument	jump		656346	2					
ANR	656756	Identifier	jump		656346	0					
ANR	656757	Argument	false		656346	3					
ANR	656758	Identifier	false		656346	0					
ANR	656759	Condition	bblen != R_ANAL_RET_END	1777:11:60612:60634	656346	1	True				
ANR	656760	EqualityExpression	bblen != R_ANAL_RET_END		656346	0		!=			
ANR	656761	Identifier	bblen		656346	0					
ANR	656762	Identifier	R_ANAL_RET_END		656346	1					
ANR	656763	ExpressionStatement	free ( buf )	1778:2:60640:60650	656346	6	True				
ANR	656764	CallExpression	free ( buf )		656346	0					
ANR	656765	Callee	free		656346	0					
ANR	656766	Identifier	free		656346	0					
ANR	656767	ArgumentList	buf		656346	1					
ANR	656768	Argument	buf		656346	0					
ANR	656769	Identifier	buf		656346	0					
ANR	656770	ReturnStatement	return true ;	1779:2:60654:60665	656346	7	True				
ANR	656771	Identifier	true		656346	0					
ANR	656772	GotoStatement	goto fin ;	1781:1:60671:60679	656346	23	True				
ANR	656773	Identifier	fin		656346	0					
ANR	656774	Label	error :	1782:0:60681:60686	656346	24	True				
ANR	656775	Identifier	error		656346	0					
ANR	656776	ExpressionStatement	rc = false	1783:1:60689:60699	656346	25	True				
ANR	656777	AssignmentExpression	rc = false		656346	0		=			
ANR	656778	Identifier	rc		656346	0					
ANR	656779	Identifier	false		656346	1					
ANR	656780	Label	fin :	1784:0:60701:60704	656346	26	True				
ANR	656781	Identifier	fin		656346	0					
ANR	656782	ExpressionStatement	"r_list_delete_data ( fcn -> bbs , bb )"	1785:1:60707:60740	656346	27	True				
ANR	656783	CallExpression	"r_list_delete_data ( fcn -> bbs , bb )"		656346	0					
ANR	656784	Callee	r_list_delete_data		656346	0					
ANR	656785	Identifier	r_list_delete_data		656346	0					
ANR	656786	ArgumentList	fcn -> bbs		656346	1					
ANR	656787	Argument	fcn -> bbs		656346	0					
ANR	656788	PtrMemberAccess	fcn -> bbs		656346	0					
ANR	656789	Identifier	fcn		656346	0					
ANR	656790	Identifier	bbs		656346	1					
ANR	656791	Argument	bb		656346	1					
ANR	656792	Identifier	bb		656346	0					
ANR	656793	ExpressionStatement	r_anal_bb_free ( bb )	1786:1:60743:60762	656346	28	True				
ANR	656794	CallExpression	r_anal_bb_free ( bb )		656346	0					
ANR	656795	Callee	r_anal_bb_free		656346	0					
ANR	656796	Identifier	r_anal_bb_free		656346	0					
ANR	656797	ArgumentList	bb		656346	1					
ANR	656798	Argument	bb		656346	0					
ANR	656799	Identifier	bb		656346	0					
ANR	656800	ExpressionStatement	free ( buf )	1787:1:60765:60775	656346	29	True				
ANR	656801	CallExpression	free ( buf )		656346	0					
ANR	656802	Callee	free		656346	0					
ANR	656803	Identifier	free		656346	0					
ANR	656804	ArgumentList	buf		656346	1					
ANR	656805	Argument	buf		656346	0					
ANR	656806	Identifier	buf		656346	0					
ANR	656807	ReturnStatement	return rc ;	1788:1:60778:60787	656346	30	True				
ANR	656808	Identifier	rc		656346	0					
ANR	656809	ReturnType	R_API int		656346	1					
ANR	656810	Identifier	r_core_anal_bb		656346	2					
ANR	656811	ParameterList	"RCore * core , RAnalFunction * fcn , ut64 addr , int head"		656346	3					
ANR	656812	Parameter	RCore * core	1712:25:58837:58847	656346	0	True				
ANR	656813	ParameterType	RCore *		656346	0					
ANR	656814	Identifier	core		656346	1					
ANR	656815	Parameter	RAnalFunction * fcn	1712:38:58850:58867	656346	1	True				
ANR	656816	ParameterType	RAnalFunction *		656346	0					
ANR	656817	Identifier	fcn		656346	1					
ANR	656818	Parameter	ut64 addr	1712:58:58870:58878	656346	2	True				
ANR	656819	ParameterType	ut64		656346	0					
ANR	656820	Identifier	addr		656346	1					
ANR	656821	Parameter	int head	1712:69:58881:58888	656346	3	True				
ANR	656822	ParameterType	int		656346	0					
ANR	656823	Identifier	head		656346	1					
ANR	656824	CFGEntryNode	ENTRY		656346		True				
ANR	656825	CFGExitNode	EXIT		656346		True				
ANR	656826	CFGErrorNode	ERROR		656346		True				
ANR	656827	Symbol	bb -> size		656346						
ANR	656828	Symbol	* fcn		656346						
ANR	656829	Symbol	R_ANAL_RET_DUP		656346						
ANR	656830	Symbol	bbi -> size		656346						
ANR	656831	Symbol	R_ANAL_RET_ERROR		656346						
ANR	656832	Symbol	* * core -> anal		656346						
ANR	656833	Symbol	buflen		656346						
ANR	656834	Symbol	jump		656346						
ANR	656835	Symbol	bbi -> addr		656346						
ANR	656836	Symbol	ret		656346						
ANR	656837	Symbol	strcmp		656346						
ANR	656838	Symbol	core -> anal -> opt		656346						
ANR	656839	Symbol	r_io_is_valid_offset		656346						
ANR	656840	Symbol	NULL		656346						
ANR	656841	Symbol	* core -> anal -> cur		656346						
ANR	656842	Symbol	bbi		656346						
ANR	656843	Symbol	iter		656346						
ANR	656844	Symbol	R_ANAL_RET_NEW		656346						
ANR	656845	Symbol	core -> anal -> opt . bb_max_size		656346						
ANR	656846	Symbol	core		656346						
ANR	656847	Symbol	fail		656346						
ANR	656848	Symbol	rc		656346						
ANR	656849	Symbol	* * * core		656346						
ANR	656850	Symbol	at		656346						
ANR	656851	Symbol	r_anal_fcn_bb_overlaps		656346						
ANR	656852	Symbol	true		656346						
ANR	656853	Symbol	core -> anal -> opt . noncode		656346						
ANR	656854	Symbol	bb		656346						
ANR	656855	Symbol	r_anal_bb_op_starts_at		656346						
ANR	656856	Symbol	bblen		656346						
ANR	656857	Symbol	* core		656346						
ANR	656858	Symbol	calloc		656346						
ANR	656859	Symbol	core -> anal		656346						
ANR	656860	Symbol	fcn		656346						
ANR	656861	Symbol	head		656346						
ANR	656862	Symbol	core -> anal -> cur -> arch		656346						
ANR	656863	Symbol	core -> io		656346						
ANR	656864	Symbol	core -> anal -> cur		656346						
ANR	656865	Symbol	r_anal_fcn_split_bb		656346						
ANR	656866	Symbol	addr		656346						
ANR	656867	Symbol	* * core		656346						
ANR	656868	Symbol	R_ANAL_RET_END		656346						
ANR	656869	Symbol	bb -> fail		656346						
ANR	656870	Symbol	* bb		656346						
ANR	656871	Symbol	false		656346						
ANR	656872	Symbol	r_io_read_at		656346						
ANR	656873	Symbol	* bbi		656346						
ANR	656874	Symbol	buf		656346						
ANR	656875	Symbol	bb -> jump		656346						
ANR	656876	Symbol	* core -> anal		656346						
ANR	656877	Symbol	fcn -> bbs		656346						
ANR	656878	Symbol	x86		656346						
ANR	656879	Symbol	core -> anal -> opt . jmpmid		656346						
ANR	656880	Symbol	fcn -> depth		656346						
ANR	656881	Symbol	r_anal_bb_new		656346						
ANR	656882	Symbol	r_anal_bb		656346						
ANR	656883	Function	r_core_anal_get_bbaddr	1793:0:60903:61233							
ANR	656884	FunctionDef	"r_core_anal_get_bbaddr (RCore * core , ut64 addr)"		656883	0					
ANR	656885	CompoundStatement		1793:58:60961:61233	656883	0					
ANR	656886	IdentifierDeclStatement	RAnalBlock * bbi ;	1794:1:60964:60979	656883	0	True				
ANR	656887	IdentifierDecl	* bbi		656883	0					
ANR	656888	IdentifierDeclType	RAnalBlock *		656883	0					
ANR	656889	Identifier	bbi		656883	1					
ANR	656890	IdentifierDeclStatement	RAnalFunction * fcni ;	1795:1:60982:61001	656883	1	True				
ANR	656891	IdentifierDecl	* fcni		656883	0					
ANR	656892	IdentifierDeclType	RAnalFunction *		656883	0					
ANR	656893	Identifier	fcni		656883	1					
ANR	656894	IdentifierDeclStatement	"RListIter * iter , * iter2 ;"	1796:1:61004:61027	656883	2	True				
ANR	656895	IdentifierDecl	* iter		656883	0					
ANR	656896	IdentifierDeclType	RListIter *		656883	0					
ANR	656897	Identifier	iter		656883	1					
ANR	656898	IdentifierDecl	* iter2		656883	1					
ANR	656899	IdentifierDeclType	RListIter *		656883	0					
ANR	656900	Identifier	iter2		656883	1					
ANR	656901	Statement	r_list_foreach	1797:1:61030:61043	656883	3	True				
ANR	656902	Statement	(	1797:16:61045:61045	656883	4	True				
ANR	656903	Statement	core	1797:17:61046:61049	656883	5	True				
ANR	656904	Statement	->	1797:21:61050:61051	656883	6	True				
ANR	656905	Statement	anal	1797:23:61052:61055	656883	7	True				
ANR	656906	Statement	->	1797:27:61056:61057	656883	8	True				
ANR	656907	Statement	fcns	1797:29:61058:61061	656883	9	True				
ANR	656908	Statement	","	1797:33:61062:61062	656883	10	True				
ANR	656909	Statement	iter	1797:35:61064:61067	656883	11	True				
ANR	656910	Statement	","	1797:39:61068:61068	656883	12	True				
ANR	656911	Statement	fcni	1797:41:61070:61073	656883	13	True				
ANR	656912	Statement	)	1797:45:61074:61074	656883	14	True				
ANR	656913	CompoundStatement		5:47:114:114	656883	15					
ANR	656914	Statement	r_list_foreach	1798:2:61080:61093	656883	0	True				
ANR	656915	Statement	(	1798:17:61095:61095	656883	1	True				
ANR	656916	Statement	fcni	1798:18:61096:61099	656883	2	True				
ANR	656917	Statement	->	1798:22:61100:61101	656883	3	True				
ANR	656918	Statement	bbs	1798:24:61102:61104	656883	4	True				
ANR	656919	Statement	","	1798:27:61105:61105	656883	5	True				
ANR	656920	Statement	iter2	1798:29:61107:61111	656883	6	True				
ANR	656921	Statement	","	1798:34:61112:61112	656883	7	True				
ANR	656922	Statement	bbi	1798:36:61114:61116	656883	8	True				
ANR	656923	Statement	)	1798:39:61117:61117	656883	9	True				
ANR	656924	CompoundStatement		6:41:157:157	656883	10					
ANR	656925	IfStatement	if ( addr >= bbi -> addr && addr < bbi -> addr + bbi -> size )		656883	0					
ANR	656926	Condition	addr >= bbi -> addr && addr < bbi -> addr + bbi -> size	1799:7:61128:61176	656883	0	True				
ANR	656927	AndExpression	addr >= bbi -> addr && addr < bbi -> addr + bbi -> size		656883	0		&&			
ANR	656928	RelationalExpression	addr >= bbi -> addr		656883	0		>=			
ANR	656929	Identifier	addr		656883	0					
ANR	656930	PtrMemberAccess	bbi -> addr		656883	1					
ANR	656931	Identifier	bbi		656883	0					
ANR	656932	Identifier	addr		656883	1					
ANR	656933	RelationalExpression	addr < bbi -> addr + bbi -> size		656883	1		<			
ANR	656934	Identifier	addr		656883	0					
ANR	656935	AdditiveExpression	bbi -> addr + bbi -> size		656883	1		+			
ANR	656936	PtrMemberAccess	bbi -> addr		656883	0					
ANR	656937	Identifier	bbi		656883	0					
ANR	656938	Identifier	addr		656883	1					
ANR	656939	PtrMemberAccess	bbi -> size		656883	1					
ANR	656940	Identifier	bbi		656883	0					
ANR	656941	Identifier	size		656883	1					
ANR	656942	CompoundStatement		7:58:217:217	656883	1					
ANR	656943	ReturnStatement	return bbi -> addr ;	1800:4:61185:61201	656883	0	True				
ANR	656944	PtrMemberAccess	bbi -> addr		656883	0					
ANR	656945	Identifier	bbi		656883	0					
ANR	656946	Identifier	addr		656883	1					
ANR	656947	ReturnStatement	return UT64_MAX ;	1804:1:61216:61231	656883	16	True				
ANR	656948	Identifier	UT64_MAX		656883	0					
ANR	656949	ReturnType	R_API ut64		656883	1					
ANR	656950	Identifier	r_core_anal_get_bbaddr		656883	2					
ANR	656951	ParameterList	"RCore * core , ut64 addr"		656883	3					
ANR	656952	Parameter	RCore * core	1793:34:60937:60947	656883	0	True				
ANR	656953	ParameterType	RCore *		656883	0					
ANR	656954	Identifier	core		656883	1					
ANR	656955	Parameter	ut64 addr	1793:47:60950:60958	656883	1	True				
ANR	656956	ParameterType	ut64		656883	0					
ANR	656957	Identifier	addr		656883	1					
ANR	656958	CFGEntryNode	ENTRY		656883		True				
ANR	656959	CFGExitNode	EXIT		656883		True				
ANR	656960	Symbol	core		656883						
ANR	656961	Symbol	fcni		656883						
ANR	656962	Symbol	iter2		656883						
ANR	656963	Symbol	bbi -> size		656883						
ANR	656964	Symbol	bbi		656883						
ANR	656965	Symbol	iter		656883						
ANR	656966	Symbol	addr		656883						
ANR	656967	Symbol	* bbi		656883						
ANR	656968	Symbol	UT64_MAX		656883						
ANR	656969	Symbol	bbi -> addr		656883						
ANR	656970	Function	r_core_anal_bb_seek	1809:0:61333:61529							
ANR	656971	FunctionDef	"r_core_anal_bb_seek (RCore * core , ut64 addr)"		656970	0					
ANR	656972	CompoundStatement		1809:54:61387:61529	656970	0					
ANR	656973	IdentifierDeclStatement	"ut64 bbaddr = r_core_anal_get_bbaddr ( core , addr ) ;"	1810:1:61390:61439	656970	0	True				
ANR	656974	IdentifierDecl	"bbaddr = r_core_anal_get_bbaddr ( core , addr )"		656970	0					
ANR	656975	IdentifierDeclType	ut64		656970	0					
ANR	656976	Identifier	bbaddr		656970	1					
ANR	656977	AssignmentExpression	"bbaddr = r_core_anal_get_bbaddr ( core , addr )"		656970	2		=			
ANR	656978	Identifier	bbaddr		656970	0					
ANR	656979	CallExpression	"r_core_anal_get_bbaddr ( core , addr )"		656970	1					
ANR	656980	Callee	r_core_anal_get_bbaddr		656970	0					
ANR	656981	Identifier	r_core_anal_get_bbaddr		656970	0					
ANR	656982	ArgumentList	core		656970	1					
ANR	656983	Argument	core		656970	0					
ANR	656984	Identifier	core		656970	0					
ANR	656985	Argument	addr		656970	1					
ANR	656986	Identifier	addr		656970	0					
ANR	656987	IfStatement	if ( bbaddr != UT64_MAX )		656970	1					
ANR	656988	Condition	bbaddr != UT64_MAX	1811:5:61446:61463	656970	0	True				
ANR	656989	EqualityExpression	bbaddr != UT64_MAX		656970	0		!=			
ANR	656990	Identifier	bbaddr		656970	0					
ANR	656991	Identifier	UT64_MAX		656970	1					
ANR	656992	CompoundStatement		3:25:78:78	656970	1					
ANR	656993	ExpressionStatement	addr = bbaddr	1812:2:61470:61483	656970	0	True				
ANR	656994	AssignmentExpression	addr = bbaddr		656970	0		=			
ANR	656995	Identifier	addr		656970	0					
ANR	656996	Identifier	bbaddr		656970	1					
ANR	656997	ReturnStatement	"return r_core_seek ( core , addr , false ) ;"	1814:1:61489:61527	656970	2	True				
ANR	656998	CallExpression	"r_core_seek ( core , addr , false )"		656970	0					
ANR	656999	Callee	r_core_seek		656970	0					
ANR	657000	Identifier	r_core_seek		656970	0					
ANR	657001	ArgumentList	core		656970	1					
ANR	657002	Argument	core		656970	0					
ANR	657003	Identifier	core		656970	0					
ANR	657004	Argument	addr		656970	1					
ANR	657005	Identifier	addr		656970	0					
ANR	657006	Argument	false		656970	2					
ANR	657007	Identifier	false		656970	0					
ANR	657008	ReturnType	R_API int		656970	1					
ANR	657009	Identifier	r_core_anal_bb_seek		656970	2					
ANR	657010	ParameterList	"RCore * core , ut64 addr"		656970	3					
ANR	657011	Parameter	RCore * core	1809:30:61363:61373	656970	0	True				
ANR	657012	ParameterType	RCore *		656970	0					
ANR	657013	Identifier	core		656970	1					
ANR	657014	Parameter	ut64 addr	1809:43:61376:61384	656970	1	True				
ANR	657015	ParameterType	ut64		656970	0					
ANR	657016	Identifier	addr		656970	1					
ANR	657017	CFGEntryNode	ENTRY		656970		True				
ANR	657018	CFGExitNode	EXIT		656970		True				
ANR	657019	Symbol	core		656970						
ANR	657020	Symbol	r_core_anal_get_bbaddr		656970						
ANR	657021	Symbol	false		656970						
ANR	657022	Symbol	r_core_seek		656970						
ANR	657023	Symbol	addr		656970						
ANR	657024	Symbol	bbaddr		656970						
ANR	657025	Symbol	UT64_MAX		656970						
ANR	657026	Function	r_core_anal_esil_fcn	1817:0:61532:62041							
ANR	657027	FunctionDef	"r_core_anal_esil_fcn (RCore * core , ut64 at , ut64 from , int reftype , int depth)"		657026	0					
ANR	657028	CompoundStatement		1817:88:61620:62041	657026	0					
ANR	657029	IdentifierDeclStatement	const char * esil ;	1818:1:61623:61639	657026	0	True				
ANR	657030	IdentifierDecl	* esil		657026	0					
ANR	657031	IdentifierDeclType	const char *		657026	0					
ANR	657032	Identifier	esil		657026	1					
ANR	657033	ExpressionStatement	"eprintf ( ""TODO\\n"" )"	1819:1:61642:61660	657026	1	True				
ANR	657034	CallExpression	"eprintf ( ""TODO\\n"" )"		657026	0					
ANR	657035	Callee	eprintf		657026	0					
ANR	657036	Identifier	eprintf		657026	0					
ANR	657037	ArgumentList	"""TODO\\n"""		657026	1					
ANR	657038	Argument	"""TODO\\n"""		657026	0					
ANR	657039	PrimaryExpression	"""TODO\\n"""		657026	0					
ANR	657040	WhileStatement	while ( 1 )		657026	2					
ANR	657041	Condition	1	1820:8:61670:61670	657026	0	True				
ANR	657042	PrimaryExpression	1		657026	0					
ANR	657043	CompoundStatement		6:2:118:178	657026	1					
ANR	657044	IdentifierDeclStatement	"RAnalOp * op = r_core_anal_op ( core , at , R_ANAL_OP_MASK_ESIL ) ;"	1822:2:61739:61799	657026	0	True				
ANR	657045	IdentifierDecl	"* op = r_core_anal_op ( core , at , R_ANAL_OP_MASK_ESIL )"		657026	0					
ANR	657046	IdentifierDeclType	RAnalOp *		657026	0					
ANR	657047	Identifier	op		657026	1					
ANR	657048	AssignmentExpression	"* op = r_core_anal_op ( core , at , R_ANAL_OP_MASK_ESIL )"		657026	2		=			
ANR	657049	Identifier	op		657026	0					
ANR	657050	CallExpression	"r_core_anal_op ( core , at , R_ANAL_OP_MASK_ESIL )"		657026	1					
ANR	657051	Callee	r_core_anal_op		657026	0					
ANR	657052	Identifier	r_core_anal_op		657026	0					
ANR	657053	ArgumentList	core		657026	1					
ANR	657054	Argument	core		657026	0					
ANR	657055	Identifier	core		657026	0					
ANR	657056	Argument	at		657026	1					
ANR	657057	Identifier	at		657026	0					
ANR	657058	Argument	R_ANAL_OP_MASK_ESIL		657026	2					
ANR	657059	Identifier	R_ANAL_OP_MASK_ESIL		657026	0					
ANR	657060	IfStatement	if ( ! op )		657026	1					
ANR	657061	Condition	! op	1823:6:61807:61809	657026	0	True				
ANR	657062	UnaryOperationExpression	! op		657026	0					
ANR	657063	UnaryOperator	!		657026	0					
ANR	657064	Identifier	op		657026	1					
ANR	657065	CompoundStatement		7:11:191:191	657026	1					
ANR	657066	BreakStatement	break ;	1824:3:61817:61822	657026	0	True				
ANR	657067	ExpressionStatement	esil = R_STRBUF_SAFEGET ( & op -> esil )	1826:2:61830:61865	657026	2	True				
ANR	657068	AssignmentExpression	esil = R_STRBUF_SAFEGET ( & op -> esil )		657026	0		=			
ANR	657069	Identifier	esil		657026	0					
ANR	657070	CallExpression	R_STRBUF_SAFEGET ( & op -> esil )		657026	1					
ANR	657071	Callee	R_STRBUF_SAFEGET		657026	0					
ANR	657072	Identifier	R_STRBUF_SAFEGET		657026	0					
ANR	657073	ArgumentList	& op -> esil		657026	1					
ANR	657074	Argument	& op -> esil		657026	0					
ANR	657075	UnaryOperationExpression	& op -> esil		657026	0					
ANR	657076	UnaryOperator	&		657026	0					
ANR	657077	PtrMemberAccess	op -> esil		657026	1					
ANR	657078	Identifier	op		657026	0					
ANR	657079	Identifier	esil		657026	1					
ANR	657080	Statement	eprintf	1827:2:61869:61875	657026	3	True				
ANR	657081	Statement	(	1827:10:61877:61877	657026	4	True				
ANR	657082	Statement	"""0x%08"""	1827:11:61878:61884	657026	5	True				
ANR	657083	Statement	PFMT64x	1827:18:61885:61891	657026	6	True				
ANR	657084	Statement	""" %d %s\\n"""	1827:25:61892:61901	657026	7	True				
ANR	657085	Statement	","	1827:35:61902:61902	657026	8	True				
ANR	657086	Statement	at	1827:37:61904:61905	657026	9	True				
ANR	657087	Statement	","	1827:39:61906:61906	657026	10	True				
ANR	657088	Statement	op	1827:41:61908:61909	657026	11	True				
ANR	657089	Statement	->	1827:43:61910:61911	657026	12	True				
ANR	657090	Statement	size	1827:45:61912:61915	657026	13	True				
ANR	657091	Statement	","	1827:49:61916:61916	657026	14	True				
ANR	657092	Statement	esil	1827:51:61918:61921	657026	15	True				
ANR	657093	Statement	)	1827:55:61922:61922	657026	16	True				
ANR	657094	ExpressionStatement		1827:56:61923:61923	657026	17	True				
ANR	657095	ExpressionStatement	at += op -> size	1828:2:61927:61941	657026	18	True				
ANR	657096	AssignmentExpression	at += op -> size		657026	0		+=			
ANR	657097	Identifier	at		657026	0					
ANR	657098	PtrMemberAccess	op -> size		657026	1					
ANR	657099	Identifier	op		657026	0					
ANR	657100	Identifier	size		657026	1					
ANR	657101	ExpressionStatement	r_anal_op_free ( op )	1832:2:61997:62016	657026	19	True				
ANR	657102	CallExpression	r_anal_op_free ( op )		657026	0					
ANR	657103	Callee	r_anal_op_free		657026	0					
ANR	657104	Identifier	r_anal_op_free		657026	0					
ANR	657105	ArgumentList	op		657026	1					
ANR	657106	Argument	op		657026	0					
ANR	657107	Identifier	op		657026	0					
ANR	657108	BreakStatement	break ;	1833:2:62020:62025	657026	20	True				
ANR	657109	ReturnStatement	return 0 ;	1835:1:62031:62039	657026	3	True				
ANR	657110	PrimaryExpression	0		657026	0					
ANR	657111	ReturnType	R_API int		657026	1					
ANR	657112	Identifier	r_core_anal_esil_fcn		657026	2					
ANR	657113	ParameterList	"RCore * core , ut64 at , ut64 from , int reftype , int depth"		657026	3					
ANR	657114	Parameter	RCore * core	1817:31:61563:61573	657026	0	True				
ANR	657115	ParameterType	RCore *		657026	0					
ANR	657116	Identifier	core		657026	1					
ANR	657117	Parameter	ut64 at	1817:44:61576:61582	657026	1	True				
ANR	657118	ParameterType	ut64		657026	0					
ANR	657119	Identifier	at		657026	1					
ANR	657120	Parameter	ut64 from	1817:53:61585:61593	657026	2	True				
ANR	657121	ParameterType	ut64		657026	0					
ANR	657122	Identifier	from		657026	1					
ANR	657123	Parameter	int reftype	1817:64:61596:61606	657026	3	True				
ANR	657124	ParameterType	int		657026	0					
ANR	657125	Identifier	reftype		657026	1					
ANR	657126	Parameter	int depth	1817:77:61609:61617	657026	4	True				
ANR	657127	ParameterType	int		657026	0					
ANR	657128	Identifier	depth		657026	1					
ANR	657129	CFGEntryNode	ENTRY		657026		True				
ANR	657130	CFGExitNode	EXIT		657026		True				
ANR	657131	Symbol	op		657026						
ANR	657132	Symbol	& op -> esil		657026						
ANR	657133	Symbol	* op		657026						
ANR	657134	Symbol	R_STRBUF_SAFEGET		657026						
ANR	657135	Symbol	r_core_anal_op		657026						
ANR	657136	Symbol	core		657026						
ANR	657137	Symbol	at		657026						
ANR	657138	Symbol	depth		657026						
ANR	657139	Symbol	from		657026						
ANR	657140	Symbol	op -> size		657026						
ANR	657141	Symbol	reftype		657026						
ANR	657142	Symbol	esil		657026						
ANR	657143	Symbol	R_ANAL_OP_MASK_ESIL		657026						
ANR	657144	Function	r_core_anal_fcn	1842:0:62222:64875							
ANR	657145	FunctionDef	"r_core_anal_fcn (RCore * core , ut64 at , ut64 from , int reftype , int depth)"		657144	0					
ANR	657146	CompoundStatement		1842:83:62305:64875	657144	0					
ANR	657147	IfStatement	"if ( from == UT64_MAX && r_anal_get_fcn_in ( core -> anal , at , 0 ) )"		657144	0					
ANR	657148	Condition	"from == UT64_MAX && r_anal_get_fcn_in ( core -> anal , at , 0 )"	1843:5:62312:62368	657144	0	True				
ANR	657149	AndExpression	"from == UT64_MAX && r_anal_get_fcn_in ( core -> anal , at , 0 )"		657144	0		&&			
ANR	657150	EqualityExpression	from == UT64_MAX		657144	0		==			
ANR	657151	Identifier	from		657144	0					
ANR	657152	Identifier	UT64_MAX		657144	1					
ANR	657153	CallExpression	"r_anal_get_fcn_in ( core -> anal , at , 0 )"		657144	1					
ANR	657154	Callee	r_anal_get_fcn_in		657144	0					
ANR	657155	Identifier	r_anal_get_fcn_in		657144	0					
ANR	657156	ArgumentList	core -> anal		657144	1					
ANR	657157	Argument	core -> anal		657144	0					
ANR	657158	PtrMemberAccess	core -> anal		657144	0					
ANR	657159	Identifier	core		657144	0					
ANR	657160	Identifier	anal		657144	1					
ANR	657161	Argument	at		657144	1					
ANR	657162	Identifier	at		657144	0					
ANR	657163	Argument	0		657144	2					
ANR	657164	PrimaryExpression	0		657144	0					
ANR	657165	CompoundStatement		2:64:65:65	657144	1					
ANR	657166	IfStatement	if ( core -> anal -> verbose )		657144	0					
ANR	657167	Condition	core -> anal -> verbose	1844:6:62379:62397	657144	0	True				
ANR	657168	PtrMemberAccess	core -> anal -> verbose		657144	0					
ANR	657169	PtrMemberAccess	core -> anal		657144	0					
ANR	657170	Identifier	core		657144	0					
ANR	657171	Identifier	anal		657144	1					
ANR	657172	Identifier	verbose		657144	1					
ANR	657173	CompoundStatement		3:27:94:94	657144	1					
ANR	657174	Statement	eprintf	1845:3:62405:62411	657144	0	True				
ANR	657175	Statement	(	1845:11:62413:62413	657144	1	True				
ANR	657176	Statement	"""Message: Invalid address for function 0x%08"""	1845:12:62414:62458	657144	2	True				
ANR	657177	Statement	PFMT64x	1845:57:62459:62465	657144	3	True				
ANR	657178	Statement	"""\\n"""	1845:64:62466:62469	657144	4	True				
ANR	657179	Statement	","	1845:68:62470:62470	657144	5	True				
ANR	657180	Statement	at	1845:70:62472:62473	657144	6	True				
ANR	657181	Statement	)	1845:72:62474:62474	657144	7	True				
ANR	657182	ExpressionStatement		1845:73:62475:62475	657144	8	True				
ANR	657183	ReturnStatement	return 0 ;	1847:2:62483:62491	657144	1	True				
ANR	657184	PrimaryExpression	0		657144	0					
ANR	657185	IdentifierDeclStatement	"const bool use_esil = r_config_get_i ( core -> config , ""anal.esil"" ) ;"	1850:1:62498:62562	657144	1	True				
ANR	657186	IdentifierDecl	"use_esil = r_config_get_i ( core -> config , ""anal.esil"" )"		657144	0					
ANR	657187	IdentifierDeclType	const bool		657144	0					
ANR	657188	Identifier	use_esil		657144	1					
ANR	657189	AssignmentExpression	"use_esil = r_config_get_i ( core -> config , ""anal.esil"" )"		657144	2		=			
ANR	657190	Identifier	use_esil		657144	0					
ANR	657191	CallExpression	"r_config_get_i ( core -> config , ""anal.esil"" )"		657144	1					
ANR	657192	Callee	r_config_get_i		657144	0					
ANR	657193	Identifier	r_config_get_i		657144	0					
ANR	657194	ArgumentList	core -> config		657144	1					
ANR	657195	Argument	core -> config		657144	0					
ANR	657196	PtrMemberAccess	core -> config		657144	0					
ANR	657197	Identifier	core		657144	0					
ANR	657198	Identifier	config		657144	1					
ANR	657199	Argument	"""anal.esil"""		657144	1					
ANR	657200	PrimaryExpression	"""anal.esil"""		657144	0					
ANR	657201	IdentifierDeclStatement	RAnalFunction * fcn ;	1851:1:62565:62583	657144	2	True				
ANR	657202	IdentifierDecl	* fcn		657144	0					
ANR	657203	IdentifierDeclType	RAnalFunction *		657144	0					
ANR	657204	Identifier	fcn		657144	1					
ANR	657205	IdentifierDeclStatement	RListIter * iter ;	1852:1:62586:62601	657144	3	True				
ANR	657206	IdentifierDecl	* iter		657144	0					
ANR	657207	IdentifierDeclType	RListIter *		657144	0					
ANR	657208	Identifier	iter		657144	1					
ANR	657209	ExpressionStatement	"r_core_seek_archbits ( core , at )"	1856:1:62715:62746	657144	4	True				
ANR	657210	CallExpression	"r_core_seek_archbits ( core , at )"		657144	0					
ANR	657211	Callee	r_core_seek_archbits		657144	0					
ANR	657212	Identifier	r_core_seek_archbits		657144	0					
ANR	657213	ArgumentList	core		657144	1					
ANR	657214	Argument	core		657144	0					
ANR	657215	Identifier	core		657144	0					
ANR	657216	Argument	at		657144	1					
ANR	657217	Identifier	at		657144	0					
ANR	657218	IfStatement	if ( core -> io -> va )		657144	5					
ANR	657219	Condition	core -> io -> va	1858:5:62754:62765	657144	0	True				
ANR	657220	PtrMemberAccess	core -> io -> va		657144	0					
ANR	657221	PtrMemberAccess	core -> io		657144	0					
ANR	657222	Identifier	core		657144	0					
ANR	657223	Identifier	io		657144	1					
ANR	657224	Identifier	va		657144	1					
ANR	657225	CompoundStatement		17:19:462:462	657144	1					
ANR	657226	IfStatement	"if ( ! r_io_is_valid_offset ( core -> io , at , ! core -> anal -> opt . noncode ) )"		657144	0					
ANR	657227	Condition	"! r_io_is_valid_offset ( core -> io , at , ! core -> anal -> opt . noncode )"	1859:6:62776:62837	657144	0	True				
ANR	657228	UnaryOperationExpression	"! r_io_is_valid_offset ( core -> io , at , ! core -> anal -> opt . noncode )"		657144	0					
ANR	657229	UnaryOperator	!		657144	0					
ANR	657230	CallExpression	"r_io_is_valid_offset ( core -> io , at , ! core -> anal -> opt . noncode )"		657144	1					
ANR	657231	Callee	r_io_is_valid_offset		657144	0					
ANR	657232	Identifier	r_io_is_valid_offset		657144	0					
ANR	657233	ArgumentList	core -> io		657144	1					
ANR	657234	Argument	core -> io		657144	0					
ANR	657235	PtrMemberAccess	core -> io		657144	0					
ANR	657236	Identifier	core		657144	0					
ANR	657237	Identifier	io		657144	1					
ANR	657238	Argument	at		657144	1					
ANR	657239	Identifier	at		657144	0					
ANR	657240	Argument	! core -> anal -> opt . noncode		657144	2					
ANR	657241	UnaryOperationExpression	! core -> anal -> opt . noncode		657144	0					
ANR	657242	UnaryOperator	!		657144	0					
ANR	657243	MemberAccess	core -> anal -> opt . noncode		657144	1					
ANR	657244	PtrMemberAccess	core -> anal -> opt		657144	0					
ANR	657245	PtrMemberAccess	core -> anal		657144	0					
ANR	657246	Identifier	core		657144	0					
ANR	657247	Identifier	anal		657144	1					
ANR	657248	Identifier	opt		657144	1					
ANR	657249	Identifier	noncode		657144	1					
ANR	657250	CompoundStatement		18:70:534:534	657144	1					
ANR	657251	ReturnStatement	return false ;	1860:3:62845:62857	657144	0	True				
ANR	657252	Identifier	false		657144	0					
ANR	657253	IfStatement	"if ( r_config_get_i ( core -> config , ""anal.a2f"" ) )"		657144	6					
ANR	657254	Condition	"r_config_get_i ( core -> config , ""anal.a2f"" )"	1863:5:62871:62911	657144	0	True				
ANR	657255	CallExpression	"r_config_get_i ( core -> config , ""anal.a2f"" )"		657144	0					
ANR	657256	Callee	r_config_get_i		657144	0					
ANR	657257	Identifier	r_config_get_i		657144	0					
ANR	657258	ArgumentList	core -> config		657144	1					
ANR	657259	Argument	core -> config		657144	0					
ANR	657260	PtrMemberAccess	core -> config		657144	0					
ANR	657261	Identifier	core		657144	0					
ANR	657262	Identifier	config		657144	1					
ANR	657263	Argument	"""anal.a2f"""		657144	1					
ANR	657264	PrimaryExpression	"""anal.a2f"""		657144	0					
ANR	657265	CompoundStatement		22:48:608:608	657144	1					
ANR	657266	ExpressionStatement	"r_core_cmd0 ( core , "".a2f"" )"	1864:2:62918:62944	657144	0	True				
ANR	657267	CallExpression	"r_core_cmd0 ( core , "".a2f"" )"		657144	0					
ANR	657268	Callee	r_core_cmd0		657144	0					
ANR	657269	Identifier	r_core_cmd0		657144	0					
ANR	657270	ArgumentList	core		657144	1					
ANR	657271	Argument	core		657144	0					
ANR	657272	Identifier	core		657144	0					
ANR	657273	Argument	""".a2f"""		657144	1					
ANR	657274	PrimaryExpression	""".a2f"""		657144	0					
ANR	657275	ReturnStatement	return 0 ;	1865:2:62948:62956	657144	1	True				
ANR	657276	PrimaryExpression	0		657144	0					
ANR	657277	IfStatement	if ( use_esil )		657144	7					
ANR	657278	Condition	use_esil	1867:5:62966:62973	657144	0	True				
ANR	657279	Identifier	use_esil		657144	0					
ANR	657280	CompoundStatement		26:15:670:670	657144	1					
ANR	657281	ReturnStatement	"return r_core_anal_esil_fcn ( core , at , from , reftype , depth ) ;"	1868:2:62980:63040	657144	0	True				
ANR	657282	CallExpression	"r_core_anal_esil_fcn ( core , at , from , reftype , depth )"		657144	0					
ANR	657283	Callee	r_core_anal_esil_fcn		657144	0					
ANR	657284	Identifier	r_core_anal_esil_fcn		657144	0					
ANR	657285	ArgumentList	core		657144	1					
ANR	657286	Argument	core		657144	0					
ANR	657287	Identifier	core		657144	0					
ANR	657288	Argument	at		657144	1					
ANR	657289	Identifier	at		657144	0					
ANR	657290	Argument	from		657144	2					
ANR	657291	Identifier	from		657144	0					
ANR	657292	Argument	reftype		657144	3					
ANR	657293	Identifier	reftype		657144	0					
ANR	657294	Argument	depth		657144	4					
ANR	657295	Identifier	depth		657144	0					
ANR	657296	IfStatement	if ( core -> anal -> use_ex && core -> anal -> cur && core -> anal -> cur -> analyze_fns )		657144	8					
ANR	657297	Condition	core -> anal -> use_ex && core -> anal -> cur && core -> anal -> cur -> analyze_fns	1873:5:63172:63240	657144	0	True				
ANR	657298	AndExpression	core -> anal -> use_ex && core -> anal -> cur && core -> anal -> cur -> analyze_fns		657144	0		&&			
ANR	657299	PtrMemberAccess	core -> anal -> use_ex		657144	0					
ANR	657300	PtrMemberAccess	core -> anal		657144	0					
ANR	657301	Identifier	core		657144	0					
ANR	657302	Identifier	anal		657144	1					
ANR	657303	Identifier	use_ex		657144	1					
ANR	657304	AndExpression	core -> anal -> cur && core -> anal -> cur -> analyze_fns		657144	1		&&			
ANR	657305	PtrMemberAccess	core -> anal -> cur		657144	0					
ANR	657306	PtrMemberAccess	core -> anal		657144	0					
ANR	657307	Identifier	core		657144	0					
ANR	657308	Identifier	anal		657144	1					
ANR	657309	Identifier	cur		657144	1					
ANR	657310	PtrMemberAccess	core -> anal -> cur -> analyze_fns		657144	1					
ANR	657311	PtrMemberAccess	core -> anal -> cur		657144	0					
ANR	657312	PtrMemberAccess	core -> anal		657144	0					
ANR	657313	Identifier	core		657144	0					
ANR	657314	Identifier	anal		657144	1					
ANR	657315	Identifier	cur		657144	1					
ANR	657316	Identifier	analyze_fns		657144	1					
ANR	657317	CompoundStatement		33:2:941:970	657144	1					
ANR	657318	IdentifierDeclStatement	int result = R_ANAL_RET_ERROR ;	1874:2:63247:63276	657144	0	True				
ANR	657319	IdentifierDecl	result = R_ANAL_RET_ERROR		657144	0					
ANR	657320	IdentifierDeclType	int		657144	0					
ANR	657321	Identifier	result		657144	1					
ANR	657322	AssignmentExpression	result = R_ANAL_RET_ERROR		657144	2		=			
ANR	657323	Identifier	R_ANAL_RET_ERROR		657144	0					
ANR	657324	Identifier	R_ANAL_RET_ERROR		657144	1					
ANR	657325	ExpressionStatement	"result = core -> anal -> cur -> analyze_fns ( core -> anal , at , from , reftype , depth )"	1875:2:63280:63356	657144	1	True				
ANR	657326	AssignmentExpression	"result = core -> anal -> cur -> analyze_fns ( core -> anal , at , from , reftype , depth )"		657144	0		=			
ANR	657327	Identifier	result		657144	0					
ANR	657328	CallExpression	"core -> anal -> cur -> analyze_fns ( core -> anal , at , from , reftype , depth )"		657144	1					
ANR	657329	Callee	core -> anal -> cur -> analyze_fns		657144	0					
ANR	657330	PtrMemberAccess	core -> anal -> cur -> analyze_fns		657144	0					
ANR	657331	PtrMemberAccess	core -> anal -> cur		657144	0					
ANR	657332	PtrMemberAccess	core -> anal		657144	0					
ANR	657333	Identifier	core		657144	0					
ANR	657334	Identifier	anal		657144	1					
ANR	657335	Identifier	cur		657144	1					
ANR	657336	Identifier	analyze_fns		657144	1					
ANR	657337	ArgumentList	core -> anal		657144	1					
ANR	657338	Argument	core -> anal		657144	0					
ANR	657339	PtrMemberAccess	core -> anal		657144	0					
ANR	657340	Identifier	core		657144	0					
ANR	657341	Identifier	anal		657144	1					
ANR	657342	Argument	at		657144	1					
ANR	657343	Identifier	at		657144	0					
ANR	657344	Argument	from		657144	2					
ANR	657345	Identifier	from		657144	0					
ANR	657346	Argument	reftype		657144	3					
ANR	657347	Identifier	reftype		657144	0					
ANR	657348	Argument	depth		657144	4					
ANR	657349	Identifier	depth		657144	0					
ANR	657350	ExpressionStatement	"r_flag_space_push ( core -> flags , R_FLAGS_FS_FUNCTIONS )"	1877:2:63435:63488	657144	2	True				
ANR	657351	CallExpression	"r_flag_space_push ( core -> flags , R_FLAGS_FS_FUNCTIONS )"		657144	0					
ANR	657352	Callee	r_flag_space_push		657144	0					
ANR	657353	Identifier	r_flag_space_push		657144	0					
ANR	657354	ArgumentList	core -> flags		657144	1					
ANR	657355	Argument	core -> flags		657144	0					
ANR	657356	PtrMemberAccess	core -> flags		657144	0					
ANR	657357	Identifier	core		657144	0					
ANR	657358	Identifier	flags		657144	1					
ANR	657359	Argument	R_FLAGS_FS_FUNCTIONS		657144	1					
ANR	657360	Identifier	R_FLAGS_FS_FUNCTIONS		657144	0					
ANR	657361	Statement	r_list_foreach	1878:2:63492:63505	657144	3	True				
ANR	657362	Statement	(	1878:17:63507:63507	657144	4	True				
ANR	657363	Statement	core	1878:18:63508:63511	657144	5	True				
ANR	657364	Statement	->	1878:22:63512:63513	657144	6	True				
ANR	657365	Statement	anal	1878:24:63514:63517	657144	7	True				
ANR	657366	Statement	->	1878:28:63518:63519	657144	8	True				
ANR	657367	Statement	fcns	1878:30:63520:63523	657144	9	True				
ANR	657368	Statement	","	1878:34:63524:63524	657144	10	True				
ANR	657369	Statement	iter	1878:36:63526:63529	657144	11	True				
ANR	657370	Statement	","	1878:40:63530:63530	657144	12	True				
ANR	657371	Statement	fcn	1878:42:63532:63534	657144	13	True				
ANR	657372	Statement	)	1878:45:63535:63535	657144	14	True				
ANR	657373	CompoundStatement		37:47:1231:1231	657144	15					
ANR	657374	ExpressionStatement	"r_flag_set ( core -> flags , fcn -> name , fcn -> addr , r_anal_fcn_size ( fcn ) )"	1879:3:63542:63611	657144	0	True				
ANR	657375	CallExpression	"r_flag_set ( core -> flags , fcn -> name , fcn -> addr , r_anal_fcn_size ( fcn ) )"		657144	0					
ANR	657376	Callee	r_flag_set		657144	0					
ANR	657377	Identifier	r_flag_set		657144	0					
ANR	657378	ArgumentList	core -> flags		657144	1					
ANR	657379	Argument	core -> flags		657144	0					
ANR	657380	PtrMemberAccess	core -> flags		657144	0					
ANR	657381	Identifier	core		657144	0					
ANR	657382	Identifier	flags		657144	1					
ANR	657383	Argument	fcn -> name		657144	1					
ANR	657384	PtrMemberAccess	fcn -> name		657144	0					
ANR	657385	Identifier	fcn		657144	0					
ANR	657386	Identifier	name		657144	1					
ANR	657387	Argument	fcn -> addr		657144	2					
ANR	657388	PtrMemberAccess	fcn -> addr		657144	0					
ANR	657389	Identifier	fcn		657144	0					
ANR	657390	Identifier	addr		657144	1					
ANR	657391	Argument	r_anal_fcn_size ( fcn )		657144	3					
ANR	657392	CallExpression	r_anal_fcn_size ( fcn )		657144	0					
ANR	657393	Callee	r_anal_fcn_size		657144	0					
ANR	657394	Identifier	r_anal_fcn_size		657144	0					
ANR	657395	ArgumentList	fcn		657144	1					
ANR	657396	Argument	fcn		657144	0					
ANR	657397	Identifier	fcn		657144	0					
ANR	657398	ExpressionStatement	r_flag_space_pop ( core -> flags )	1881:2:63619:63649	657144	16	True				
ANR	657399	CallExpression	r_flag_space_pop ( core -> flags )		657144	0					
ANR	657400	Callee	r_flag_space_pop		657144	0					
ANR	657401	Identifier	r_flag_space_pop		657144	0					
ANR	657402	ArgumentList	core -> flags		657144	1					
ANR	657403	Argument	core -> flags		657144	0					
ANR	657404	PtrMemberAccess	core -> flags		657144	0					
ANR	657405	Identifier	core		657144	0					
ANR	657406	Identifier	flags		657144	1					
ANR	657407	ReturnStatement	return result ;	1882:2:63653:63666	657144	17	True				
ANR	657408	Identifier	result		657144	0					
ANR	657409	IfStatement	if ( ( from != UT64_MAX && ! at ) || at == UT64_MAX )		657144	9					
ANR	657410	Condition	( from != UT64_MAX && ! at ) || at == UT64_MAX	1884:5:63676:63718	657144	0	True				
ANR	657411	OrExpression	( from != UT64_MAX && ! at ) || at == UT64_MAX		657144	0		||			
ANR	657412	AndExpression	from != UT64_MAX && ! at		657144	0		&&			
ANR	657413	EqualityExpression	from != UT64_MAX		657144	0		!=			
ANR	657414	Identifier	from		657144	0					
ANR	657415	Identifier	UT64_MAX		657144	1					
ANR	657416	UnaryOperationExpression	! at		657144	1					
ANR	657417	UnaryOperator	!		657144	0					
ANR	657418	Identifier	at		657144	1					
ANR	657419	EqualityExpression	at == UT64_MAX		657144	1		==			
ANR	657420	Identifier	at		657144	0					
ANR	657421	Identifier	UT64_MAX		657144	1					
ANR	657422	CompoundStatement		43:50:1415:1415	657144	1					
ANR	657423	Statement	eprintf	1885:2:63725:63731	657144	0	True				
ANR	657424	Statement	(	1885:10:63733:63733	657144	1	True				
ANR	657425	Statement	"""Invalid address from 0x%08"""	1885:11:63734:63761	657144	2	True				
ANR	657426	Statement	PFMT64x	1885:39:63762:63768	657144	3	True				
ANR	657427	Statement	"""\\n"""	1885:46:63769:63772	657144	4	True				
ANR	657428	Statement	","	1885:50:63773:63773	657144	5	True				
ANR	657429	Statement	from	1885:52:63775:63778	657144	6	True				
ANR	657430	Statement	)	1885:56:63779:63779	657144	7	True				
ANR	657431	ExpressionStatement		1885:57:63780:63780	657144	8	True				
ANR	657432	ReturnStatement	return false ;	1886:2:63784:63796	657144	9	True				
ANR	657433	Identifier	false		657144	0					
ANR	657434	IfStatement	if ( depth < 0 )		657144	10					
ANR	657435	Condition	depth < 0	1888:5:63806:63814	657144	0	True				
ANR	657436	RelationalExpression	depth < 0		657144	0		<			
ANR	657437	Identifier	depth		657144	0					
ANR	657438	PrimaryExpression	0		657144	1					
ANR	657439	CompoundStatement		47:16:1511:1511	657144	1					
ANR	657440	ReturnStatement	return false ;	1889:2:63821:63833	657144	0	True				
ANR	657441	Identifier	false		657144	0					
ANR	657442	IfStatement	if ( r_cons_is_breaked ( ) )		657144	11					
ANR	657443	Condition	r_cons_is_breaked ( )	1891:5:63843:63862	657144	0	True				
ANR	657444	CallExpression	r_cons_is_breaked ( )		657144	0					
ANR	657445	Callee	r_cons_is_breaked		657144	0					
ANR	657446	Identifier	r_cons_is_breaked		657144	0					
ANR	657447	ArgumentList			657144	1					
ANR	657448	CompoundStatement		50:27:1559:1559	657144	1					
ANR	657449	ReturnStatement	return false ;	1892:2:63869:63881	657144	0	True				
ANR	657450	Identifier	false		657144	0					
ANR	657451	ExpressionStatement	"fcn = r_anal_get_fcn_in ( core -> anal , at , 0 )"	1894:1:63887:63930	657144	12	True				
ANR	657452	AssignmentExpression	"fcn = r_anal_get_fcn_in ( core -> anal , at , 0 )"		657144	0		=			
ANR	657453	Identifier	fcn		657144	0					
ANR	657454	CallExpression	"r_anal_get_fcn_in ( core -> anal , at , 0 )"		657144	1					
ANR	657455	Callee	r_anal_get_fcn_in		657144	0					
ANR	657456	Identifier	r_anal_get_fcn_in		657144	0					
ANR	657457	ArgumentList	core -> anal		657144	1					
ANR	657458	Argument	core -> anal		657144	0					
ANR	657459	PtrMemberAccess	core -> anal		657144	0					
ANR	657460	Identifier	core		657144	0					
ANR	657461	Identifier	anal		657144	1					
ANR	657462	Argument	at		657144	1					
ANR	657463	Identifier	at		657144	0					
ANR	657464	Argument	0		657144	2					
ANR	657465	PrimaryExpression	0		657144	0					
ANR	657466	IfStatement	if ( fcn )		657144	13					
ANR	657467	Condition	fcn	1895:5:63937:63939	657144	0	True				
ANR	657468	Identifier	fcn		657144	0					
ANR	657469	CompoundStatement		54:10:1636:1636	657144	1					
ANR	657470	IfStatement	if ( fcn -> addr == at )		657144	0					
ANR	657471	Condition	fcn -> addr == at	1896:6:63950:63964	657144	0	True				
ANR	657472	EqualityExpression	fcn -> addr == at		657144	0		==			
ANR	657473	PtrMemberAccess	fcn -> addr		657144	0					
ANR	657474	Identifier	fcn		657144	0					
ANR	657475	Identifier	addr		657144	1					
ANR	657476	Identifier	at		657144	1					
ANR	657477	CompoundStatement		55:23:1661:1661	657144	1					
ANR	657478	IfStatement	if ( reftype == R_ANAL_REF_TYPE_CALL && fcn -> type == R_ANAL_FCN_TYPE_LOC )		657144	0					
ANR	657479	Condition	reftype == R_ANAL_REF_TYPE_CALL && fcn -> type == R_ANAL_FCN_TYPE_LOC	1900:7:64132:64198	657144	0	True				
ANR	657480	AndExpression	reftype == R_ANAL_REF_TYPE_CALL && fcn -> type == R_ANAL_FCN_TYPE_LOC		657144	0		&&			
ANR	657481	EqualityExpression	reftype == R_ANAL_REF_TYPE_CALL		657144	0		==			
ANR	657482	Identifier	reftype		657144	0					
ANR	657483	Identifier	R_ANAL_REF_TYPE_CALL		657144	1					
ANR	657484	EqualityExpression	fcn -> type == R_ANAL_FCN_TYPE_LOC		657144	1		==			
ANR	657485	PtrMemberAccess	fcn -> type		657144	0					
ANR	657486	Identifier	fcn		657144	0					
ANR	657487	Identifier	type		657144	1					
ANR	657488	Identifier	R_ANAL_FCN_TYPE_LOC		657144	1					
ANR	657489	CompoundStatement		59:76:1895:1895	657144	1					
ANR	657490	ExpressionStatement	"function_rename ( core -> flags , fcn )"	1901:4:64207:64241	657144	0	True				
ANR	657491	CallExpression	"function_rename ( core -> flags , fcn )"		657144	0					
ANR	657492	Callee	function_rename		657144	0					
ANR	657493	Identifier	function_rename		657144	0					
ANR	657494	ArgumentList	core -> flags		657144	1					
ANR	657495	Argument	core -> flags		657144	0					
ANR	657496	PtrMemberAccess	core -> flags		657144	0					
ANR	657497	Identifier	core		657144	0					
ANR	657498	Identifier	flags		657144	1					
ANR	657499	Argument	fcn		657144	1					
ANR	657500	Identifier	fcn		657144	0					
ANR	657501	ReturnStatement	return 0 ;	1904:3:64252:64260	657144	1	True				
ANR	657502	PrimaryExpression	0		657144	0					
ANR	657503	IfStatement	"if ( r_anal_fcn_is_in_offset ( fcn , from ) )"		657144	1					
ANR	657504	Condition	"r_anal_fcn_is_in_offset ( fcn , from )"	1906:6:64302:64336	657144	0	True				
ANR	657505	CallExpression	"r_anal_fcn_is_in_offset ( fcn , from )"		657144	0					
ANR	657506	Callee	r_anal_fcn_is_in_offset		657144	0					
ANR	657507	Identifier	r_anal_fcn_is_in_offset		657144	0					
ANR	657508	ArgumentList	fcn		657144	1					
ANR	657509	Argument	fcn		657144	0					
ANR	657510	Identifier	fcn		657144	0					
ANR	657511	Argument	from		657144	1					
ANR	657512	Identifier	from		657144	0					
ANR	657513	CompoundStatement		66:3:2056:2102	657144	1					
ANR	657514	IdentifierDeclStatement	"RList * l = r_anal_xrefs_get ( core -> anal , from ) ;"	1907:3:64362:64408	657144	0	True				
ANR	657515	IdentifierDecl	"* l = r_anal_xrefs_get ( core -> anal , from )"		657144	0					
ANR	657516	IdentifierDeclType	RList *		657144	0					
ANR	657517	Identifier	l		657144	1					
ANR	657518	AssignmentExpression	"* l = r_anal_xrefs_get ( core -> anal , from )"		657144	2		=			
ANR	657519	Identifier	l		657144	0					
ANR	657520	CallExpression	"r_anal_xrefs_get ( core -> anal , from )"		657144	1					
ANR	657521	Callee	r_anal_xrefs_get		657144	0					
ANR	657522	Identifier	r_anal_xrefs_get		657144	0					
ANR	657523	ArgumentList	core -> anal		657144	1					
ANR	657524	Argument	core -> anal		657144	0					
ANR	657525	PtrMemberAccess	core -> anal		657144	0					
ANR	657526	Identifier	core		657144	0					
ANR	657527	Identifier	anal		657144	1					
ANR	657528	Argument	from		657144	1					
ANR	657529	Identifier	from		657144	0					
ANR	657530	IfStatement	if ( l && ! r_list_empty ( l ) )		657144	1					
ANR	657531	Condition	l && ! r_list_empty ( l )	1908:7:64417:64438	657144	0	True				
ANR	657532	AndExpression	l && ! r_list_empty ( l )		657144	0		&&			
ANR	657533	Identifier	l		657144	0					
ANR	657534	UnaryOperationExpression	! r_list_empty ( l )		657144	1					
ANR	657535	UnaryOperator	!		657144	0					
ANR	657536	CallExpression	r_list_empty ( l )		657144	1					
ANR	657537	Callee	r_list_empty		657144	0					
ANR	657538	Identifier	r_list_empty		657144	0					
ANR	657539	ArgumentList	l		657144	1					
ANR	657540	Argument	l		657144	0					
ANR	657541	Identifier	l		657144	0					
ANR	657542	CompoundStatement		67:31:2135:2135	657144	1					
ANR	657543	ExpressionStatement	r_list_free ( l )	1909:4:64447:64462	657144	0	True				
ANR	657544	CallExpression	r_list_free ( l )		657144	0					
ANR	657545	Callee	r_list_free		657144	0					
ANR	657546	Identifier	r_list_free		657144	0					
ANR	657547	ArgumentList	l		657144	1					
ANR	657548	Argument	l		657144	0					
ANR	657549	Identifier	l		657144	0					
ANR	657550	ReturnStatement	return true ;	1910:4:64468:64479	657144	1	True				
ANR	657551	Identifier	true		657144	0					
ANR	657552	ExpressionStatement	r_list_free ( l )	1912:3:64489:64504	657144	2	True				
ANR	657553	CallExpression	r_list_free ( l )		657144	0					
ANR	657554	Callee	r_list_free		657144	0					
ANR	657555	Identifier	r_list_free		657144	0					
ANR	657556	ArgumentList	l		657144	1					
ANR	657557	Argument	l		657144	0					
ANR	657558	Identifier	l		657144	0					
ANR	657559	IfStatement	if ( from != UT64_MAX )		657144	3					
ANR	657560	Condition	from != UT64_MAX	1915:7:64576:64591	657144	0	True				
ANR	657561	EqualityExpression	from != UT64_MAX		657144	0		!=			
ANR	657562	Identifier	from		657144	0					
ANR	657563	Identifier	UT64_MAX		657144	1					
ANR	657564	CompoundStatement		74:25:2288:2288	657144	1					
ANR	657565	ExpressionStatement	"r_anal_xrefs_set ( core -> anal , from , at , reftype )"	1916:4:64600:64648	657144	0	True				
ANR	657566	CallExpression	"r_anal_xrefs_set ( core -> anal , from , at , reftype )"		657144	0					
ANR	657567	Callee	r_anal_xrefs_set		657144	0					
ANR	657568	Identifier	r_anal_xrefs_set		657144	0					
ANR	657569	ArgumentList	core -> anal		657144	1					
ANR	657570	Argument	core -> anal		657144	0					
ANR	657571	PtrMemberAccess	core -> anal		657144	0					
ANR	657572	Identifier	core		657144	0					
ANR	657573	Identifier	anal		657144	1					
ANR	657574	Argument	from		657144	1					
ANR	657575	Identifier	from		657144	0					
ANR	657576	Argument	at		657144	2					
ANR	657577	Identifier	at		657144	0					
ANR	657578	Argument	reftype		657144	3					
ANR	657579	Identifier	reftype		657144	0					
ANR	657580	ReturnStatement	return true ;	1918:3:64658:64669	657144	4	True				
ANR	657581	Identifier	true		657144	0					
ANR	657582	IfStatement	"if ( core_anal_fcn ( core , at , from , reftype , depth - 1 ) )"		657144	14					
ANR	657583	Condition	"core_anal_fcn ( core , at , from , reftype , depth - 1 )"	1921:5:64683:64732	657144	0	True				
ANR	657584	CallExpression	"core_anal_fcn ( core , at , from , reftype , depth - 1 )"		657144	0					
ANR	657585	Callee	core_anal_fcn		657144	0					
ANR	657586	Identifier	core_anal_fcn		657144	0					
ANR	657587	ArgumentList	core		657144	1					
ANR	657588	Argument	core		657144	0					
ANR	657589	Identifier	core		657144	0					
ANR	657590	Argument	at		657144	1					
ANR	657591	Identifier	at		657144	0					
ANR	657592	Argument	from		657144	2					
ANR	657593	Identifier	from		657144	0					
ANR	657594	Argument	reftype		657144	3					
ANR	657595	Identifier	reftype		657144	0					
ANR	657596	Argument	depth - 1		657144	4					
ANR	657597	AdditiveExpression	depth - 1		657144	0		-			
ANR	657598	Identifier	depth		657144	0					
ANR	657599	PrimaryExpression	1		657144	1					
ANR	657600	CompoundStatement		80:57:2429:2429	657144	1					
ANR	657601	IfStatement	if ( fcn )		657144	0					
ANR	657602	Condition	fcn	1923:6:64775:64777	657144	0	True				
ANR	657603	Identifier	fcn		657144	0					
ANR	657604	CompoundStatement		82:11:2474:2474	657144	1					
ANR	657605	ExpressionStatement	"r_anal_fcn_resize ( core -> anal , fcn , at - fcn -> addr )"	1924:3:64785:64836	657144	0	True				
ANR	657606	CallExpression	"r_anal_fcn_resize ( core -> anal , fcn , at - fcn -> addr )"		657144	0					
ANR	657607	Callee	r_anal_fcn_resize		657144	0					
ANR	657608	Identifier	r_anal_fcn_resize		657144	0					
ANR	657609	ArgumentList	core -> anal		657144	1					
ANR	657610	Argument	core -> anal		657144	0					
ANR	657611	PtrMemberAccess	core -> anal		657144	0					
ANR	657612	Identifier	core		657144	0					
ANR	657613	Identifier	anal		657144	1					
ANR	657614	Argument	fcn		657144	1					
ANR	657615	Identifier	fcn		657144	0					
ANR	657616	Argument	at - fcn -> addr		657144	2					
ANR	657617	AdditiveExpression	at - fcn -> addr		657144	0		-			
ANR	657618	Identifier	at		657144	0					
ANR	657619	PtrMemberAccess	fcn -> addr		657144	1					
ANR	657620	Identifier	fcn		657144	0					
ANR	657621	Identifier	addr		657144	1					
ANR	657622	ReturnStatement	return true ;	1926:2:64844:64855	657144	1	True				
ANR	657623	Identifier	true		657144	0					
ANR	657624	ReturnStatement	return false ;	1928:1:64861:64873	657144	15	True				
ANR	657625	Identifier	false		657144	0					
ANR	657626	ReturnType	R_API int		657144	1					
ANR	657627	Identifier	r_core_anal_fcn		657144	2					
ANR	657628	ParameterList	"RCore * core , ut64 at , ut64 from , int reftype , int depth"		657144	3					
ANR	657629	Parameter	RCore * core	1842:26:62248:62258	657144	0	True				
ANR	657630	ParameterType	RCore *		657144	0					
ANR	657631	Identifier	core		657144	1					
ANR	657632	Parameter	ut64 at	1842:39:62261:62267	657144	1	True				
ANR	657633	ParameterType	ut64		657144	0					
ANR	657634	Identifier	at		657144	1					
ANR	657635	Parameter	ut64 from	1842:48:62270:62278	657144	2	True				
ANR	657636	ParameterType	ut64		657144	0					
ANR	657637	Identifier	from		657144	1					
ANR	657638	Parameter	int reftype	1842:59:62281:62291	657144	3	True				
ANR	657639	ParameterType	int		657144	0					
ANR	657640	Identifier	reftype		657144	1					
ANR	657641	Parameter	int depth	1842:72:62294:62302	657144	4	True				
ANR	657642	ParameterType	int		657144	0					
ANR	657643	Identifier	depth		657144	1					
ANR	657644	CFGEntryNode	ENTRY		657144		True				
ANR	657645	CFGExitNode	EXIT		657144		True				
ANR	657646	Symbol	* fcn		657144						
ANR	657647	Symbol	core -> anal -> cur -> analyze_fns		657144						
ANR	657648	Symbol	r_anal_fcn_size		657144						
ANR	657649	Symbol	fcn -> name		657144						
ANR	657650	Symbol	core_anal_fcn		657144						
ANR	657651	Symbol	R_ANAL_RET_ERROR		657144						
ANR	657652	Symbol	use_esil		657144						
ANR	657653	Symbol	R_ANAL_FCN_TYPE_LOC		657144						
ANR	657654	Symbol	R_FLAGS_FS_FUNCTIONS		657144						
ANR	657655	Symbol	r_anal_fcn_is_in_offset		657144						
ANR	657656	Symbol	* * core -> anal		657144						
ANR	657657	Symbol	from		657144						
ANR	657658	Symbol	core -> anal -> opt		657144						
ANR	657659	Symbol	r_io_is_valid_offset		657144						
ANR	657660	Symbol	* core -> anal -> cur		657144						
ANR	657661	Symbol	iter		657144						
ANR	657662	Symbol	fcn -> type		657144						
ANR	657663	Symbol	core -> io -> va		657144						
ANR	657664	Symbol	core		657144						
ANR	657665	Symbol	* * * core		657144						
ANR	657666	Symbol	at		657144						
ANR	657667	Symbol	r_core_anal_esil_fcn		657144						
ANR	657668	Symbol	r_config_get_i		657144						
ANR	657669	Symbol	true		657144						
ANR	657670	Symbol	r_list_empty		657144						
ANR	657671	Symbol	core -> anal -> opt . noncode		657144						
ANR	657672	Symbol	core -> anal -> use_ex		657144						
ANR	657673	Symbol	* core		657144						
ANR	657674	Symbol	core -> anal		657144						
ANR	657675	Symbol	core -> anal -> verbose		657144						
ANR	657676	Symbol	fcn		657144						
ANR	657677	Symbol	result		657144						
ANR	657678	Symbol	r_cons_is_breaked		657144						
ANR	657679	Symbol	core -> io		657144						
ANR	657680	Symbol	core -> anal -> cur		657144						
ANR	657681	Symbol	r_anal_xrefs_get		657144						
ANR	657682	Symbol	UT64_MAX		657144						
ANR	657683	Symbol	* * core		657144						
ANR	657684	Symbol	R_ANAL_REF_TYPE_CALL		657144						
ANR	657685	Symbol	core -> config		657144						
ANR	657686	Symbol	false		657144						
ANR	657687	Symbol	core -> flags		657144						
ANR	657688	Symbol	l		657144						
ANR	657689	Symbol	* core -> io		657144						
ANR	657690	Symbol	depth		657144						
ANR	657691	Symbol	r_anal_get_fcn_in		657144						
ANR	657692	Symbol	* core -> anal		657144						
ANR	657693	Symbol	fcn -> addr		657144						
ANR	657694	Symbol	reftype		657144						
ANR	657695	Function	r_core_anal_fcn_clean	1933:0:64968:65498							
ANR	657696	FunctionDef	"r_core_anal_fcn_clean (RCore * core , ut64 addr)"		657695	0					
ANR	657697	CompoundStatement		1933:56:65024:65498	657695	0					
ANR	657698	IdentifierDeclStatement	RAnalFunction * fcni ;	1934:1:65027:65046	657695	0	True				
ANR	657699	IdentifierDecl	* fcni		657695	0					
ANR	657700	IdentifierDeclType	RAnalFunction *		657695	0					
ANR	657701	Identifier	fcni		657695	1					
ANR	657702	IdentifierDeclStatement	"RListIter * iter , * iter_tmp ;"	1935:1:65049:65075	657695	1	True				
ANR	657703	IdentifierDecl	* iter		657695	0					
ANR	657704	IdentifierDeclType	RListIter *		657695	0					
ANR	657705	Identifier	iter		657695	1					
ANR	657706	IdentifierDecl	* iter_tmp		657695	1					
ANR	657707	IdentifierDeclType	RListIter *		657695	0					
ANR	657708	Identifier	iter_tmp		657695	1					
ANR	657709	IfStatement	if ( ! addr )		657695	2					
ANR	657710	Condition	! addr	1937:5:65083:65087	657695	0	True				
ANR	657711	UnaryOperationExpression	! addr		657695	0					
ANR	657712	UnaryOperator	!		657695	0					
ANR	657713	Identifier	addr		657695	1					
ANR	657714	CompoundStatement		5:12:65:65	657695	1					
ANR	657715	ExpressionStatement	r_list_purge ( core -> anal -> fcns )	1938:2:65094:65125	657695	0	True				
ANR	657716	CallExpression	r_list_purge ( core -> anal -> fcns )		657695	0					
ANR	657717	Callee	r_list_purge		657695	0					
ANR	657718	Identifier	r_list_purge		657695	0					
ANR	657719	ArgumentList	core -> anal -> fcns		657695	1					
ANR	657720	Argument	core -> anal -> fcns		657695	0					
ANR	657721	PtrMemberAccess	core -> anal -> fcns		657695	0					
ANR	657722	PtrMemberAccess	core -> anal		657695	0					
ANR	657723	Identifier	core		657695	0					
ANR	657724	Identifier	anal		657695	1					
ANR	657725	Identifier	fcns		657695	1					
ANR	657726	ExpressionStatement	core -> anal -> fcn_tree = NULL	1939:2:65129:65156	657695	1	True				
ANR	657727	AssignmentExpression	core -> anal -> fcn_tree = NULL		657695	0		=			
ANR	657728	PtrMemberAccess	core -> anal -> fcn_tree		657695	0					
ANR	657729	PtrMemberAccess	core -> anal		657695	0					
ANR	657730	Identifier	core		657695	0					
ANR	657731	Identifier	anal		657695	1					
ANR	657732	Identifier	fcn_tree		657695	1					
ANR	657733	Identifier	NULL		657695	1					
ANR	657734	ExpressionStatement	core -> anal -> fcn_addr_tree = NULL	1940:2:65160:65192	657695	2	True				
ANR	657735	AssignmentExpression	core -> anal -> fcn_addr_tree = NULL		657695	0		=			
ANR	657736	PtrMemberAccess	core -> anal -> fcn_addr_tree		657695	0					
ANR	657737	PtrMemberAccess	core -> anal		657695	0					
ANR	657738	Identifier	core		657695	0					
ANR	657739	Identifier	anal		657695	1					
ANR	657740	Identifier	fcn_addr_tree		657695	1					
ANR	657741	Identifier	NULL		657695	1					
ANR	657742	IfStatement	if ( ! ( core -> anal -> fcns = r_anal_fcn_list_new ( ) ) )		657695	3					
ANR	657743	Condition	! ( core -> anal -> fcns = r_anal_fcn_list_new ( ) )	1941:6:65200:65243	657695	0	True				
ANR	657744	UnaryOperationExpression	! ( core -> anal -> fcns = r_anal_fcn_list_new ( ) )		657695	0					
ANR	657745	UnaryOperator	!		657695	0					
ANR	657746	AssignmentExpression	core -> anal -> fcns = r_anal_fcn_list_new ( )		657695	1		=			
ANR	657747	PtrMemberAccess	core -> anal -> fcns		657695	0					
ANR	657748	PtrMemberAccess	core -> anal		657695	0					
ANR	657749	Identifier	core		657695	0					
ANR	657750	Identifier	anal		657695	1					
ANR	657751	Identifier	fcns		657695	1					
ANR	657752	CallExpression	r_anal_fcn_list_new ( )		657695	1					
ANR	657753	Callee	r_anal_fcn_list_new		657695	0					
ANR	657754	Identifier	r_anal_fcn_list_new		657695	0					
ANR	657755	ArgumentList			657695	1					
ANR	657756	CompoundStatement		9:52:221:221	657695	1					
ANR	657757	ReturnStatement	return false ;	1942:3:65251:65263	657695	0	True				
ANR	657758	Identifier	false		657695	0					
ANR	657759	ElseStatement	else		657695	0					
ANR	657760	CompoundStatement		12:8:252:252	657695	0					
ANR	657761	Statement	r_list_foreach_safe	1945:2:65281:65299	657695	0	True				
ANR	657762	Statement	(	1945:22:65301:65301	657695	1	True				
ANR	657763	Statement	core	1945:23:65302:65305	657695	2	True				
ANR	657764	Statement	->	1945:27:65306:65307	657695	3	True				
ANR	657765	Statement	anal	1945:29:65308:65311	657695	4	True				
ANR	657766	Statement	->	1945:33:65312:65313	657695	5	True				
ANR	657767	Statement	fcns	1945:35:65314:65317	657695	6	True				
ANR	657768	Statement	","	1945:39:65318:65318	657695	7	True				
ANR	657769	Statement	iter	1945:41:65320:65323	657695	8	True				
ANR	657770	Statement	","	1945:45:65324:65324	657695	9	True				
ANR	657771	Statement	iter_tmp	1945:47:65326:65333	657695	10	True				
ANR	657772	Statement	","	1945:55:65334:65334	657695	11	True				
ANR	657773	Statement	fcni	1945:57:65336:65339	657695	12	True				
ANR	657774	Statement	)	1945:61:65340:65340	657695	13	True				
ANR	657775	CompoundStatement		13:63:317:317	657695	14					
ANR	657776	IfStatement	"if ( r_anal_fcn_in ( fcni , addr ) )"		657695	0					
ANR	657777	Condition	"r_anal_fcn_in ( fcni , addr )"	1946:7:65351:65376	657695	0	True				
ANR	657778	CallExpression	"r_anal_fcn_in ( fcni , addr )"		657695	0					
ANR	657779	Callee	r_anal_fcn_in		657695	0					
ANR	657780	Identifier	r_anal_fcn_in		657695	0					
ANR	657781	ArgumentList	fcni		657695	1					
ANR	657782	Argument	fcni		657695	0					
ANR	657783	Identifier	fcni		657695	0					
ANR	657784	Argument	addr		657695	1					
ANR	657785	Identifier	addr		657695	0					
ANR	657786	CompoundStatement		14:35:354:354	657695	1					
ANR	657787	ExpressionStatement	"r_anal_fcn_tree_delete ( core -> anal , fcni )"	1947:4:65385:65426	657695	0	True				
ANR	657788	CallExpression	"r_anal_fcn_tree_delete ( core -> anal , fcni )"		657695	0					
ANR	657789	Callee	r_anal_fcn_tree_delete		657695	0					
ANR	657790	Identifier	r_anal_fcn_tree_delete		657695	0					
ANR	657791	ArgumentList	core -> anal		657695	1					
ANR	657792	Argument	core -> anal		657695	0					
ANR	657793	PtrMemberAccess	core -> anal		657695	0					
ANR	657794	Identifier	core		657695	0					
ANR	657795	Identifier	anal		657695	1					
ANR	657796	Argument	fcni		657695	1					
ANR	657797	Identifier	fcni		657695	0					
ANR	657798	ExpressionStatement	"r_list_delete ( core -> anal -> fcns , iter )"	1948:4:65432:65470	657695	1	True				
ANR	657799	CallExpression	"r_list_delete ( core -> anal -> fcns , iter )"		657695	0					
ANR	657800	Callee	r_list_delete		657695	0					
ANR	657801	Identifier	r_list_delete		657695	0					
ANR	657802	ArgumentList	core -> anal -> fcns		657695	1					
ANR	657803	Argument	core -> anal -> fcns		657695	0					
ANR	657804	PtrMemberAccess	core -> anal -> fcns		657695	0					
ANR	657805	PtrMemberAccess	core -> anal		657695	0					
ANR	657806	Identifier	core		657695	0					
ANR	657807	Identifier	anal		657695	1					
ANR	657808	Identifier	fcns		657695	1					
ANR	657809	Argument	iter		657695	1					
ANR	657810	Identifier	iter		657695	0					
ANR	657811	ReturnStatement	return true ;	1952:1:65485:65496	657695	3	True				
ANR	657812	Identifier	true		657695	0					
ANR	657813	ReturnType	R_API int		657695	1					
ANR	657814	Identifier	r_core_anal_fcn_clean		657695	2					
ANR	657815	ParameterList	"RCore * core , ut64 addr"		657695	3					
ANR	657816	Parameter	RCore * core	1933:32:65000:65010	657695	0	True				
ANR	657817	ParameterType	RCore *		657695	0					
ANR	657818	Identifier	core		657695	1					
ANR	657819	Parameter	ut64 addr	1933:45:65013:65021	657695	1	True				
ANR	657820	ParameterType	ut64		657695	0					
ANR	657821	Identifier	addr		657695	1					
ANR	657822	CFGEntryNode	ENTRY		657695		True				
ANR	657823	CFGExitNode	EXIT		657695		True				
ANR	657824	Symbol	r_anal_fcn_list_new		657695						
ANR	657825	Symbol	r_anal_fcn_in		657695						
ANR	657826	Symbol	core -> anal -> fcn_tree		657695						
ANR	657827	Symbol	NULL		657695						
ANR	657828	Symbol	* core		657695						
ANR	657829	Symbol	false		657695						
ANR	657830	Symbol	iter		657695						
ANR	657831	Symbol	iter_tmp		657695						
ANR	657832	Symbol	core -> anal -> fcns		657695						
ANR	657833	Symbol	core -> anal		657695						
ANR	657834	Symbol	core		657695						
ANR	657835	Symbol	core -> anal -> fcn_addr_tree		657695						
ANR	657836	Symbol	* core -> anal		657695						
ANR	657837	Symbol	fcni		657695						
ANR	657838	Symbol	true		657695						
ANR	657839	Symbol	addr		657695						
ANR	657840	Symbol	* * core		657695						
ANR	657841	Function	r_core_print_bb_custom	1955:0:65501:67524							
ANR	657842	FunctionDef	"r_core_print_bb_custom (RCore * core , RAnalFunction * fcn)"		657841	0					
ANR	657843	CompoundStatement		1955:66:65567:67524	657841	0					
ANR	657844	IdentifierDeclStatement	RAnalBlock * bb ;	1956:1:65570:65584	657841	0	True				
ANR	657845	IdentifierDecl	* bb		657841	0					
ANR	657846	IdentifierDeclType	RAnalBlock *		657841	0					
ANR	657847	Identifier	bb		657841	1					
ANR	657848	IdentifierDeclStatement	RListIter * iter ;	1957:1:65587:65602	657841	1	True				
ANR	657849	IdentifierDecl	* iter		657841	0					
ANR	657850	IdentifierDeclType	RListIter *		657841	0					
ANR	657851	Identifier	iter		657841	1					
ANR	657852	IfStatement	if ( ! fcn )		657841	2					
ANR	657853	Condition	! fcn	1958:5:65609:65612	657841	0	True				
ANR	657854	UnaryOperationExpression	! fcn		657841	0					
ANR	657855	UnaryOperator	!		657841	0					
ANR	657856	Identifier	fcn		657841	1					
ANR	657857	CompoundStatement		4:11:47:47	657841	1					
ANR	657858	ReturnStatement	return false ;	1959:2:65619:65631	657841	0	True				
ANR	657859	Identifier	false		657841	0					
ANR	657860	IdentifierDeclStatement	RConfigHold * hc = r_config_hold_new ( core -> config ) ;	1962:1:65638:65688	657841	3	True				
ANR	657861	IdentifierDecl	* hc = r_config_hold_new ( core -> config )		657841	0					
ANR	657862	IdentifierDeclType	RConfigHold *		657841	0					
ANR	657863	Identifier	hc		657841	1					
ANR	657864	AssignmentExpression	* hc = r_config_hold_new ( core -> config )		657841	2		=			
ANR	657865	Identifier	hc		657841	0					
ANR	657866	CallExpression	r_config_hold_new ( core -> config )		657841	1					
ANR	657867	Callee	r_config_hold_new		657841	0					
ANR	657868	Identifier	r_config_hold_new		657841	0					
ANR	657869	ArgumentList	core -> config		657841	1					
ANR	657870	Argument	core -> config		657841	0					
ANR	657871	PtrMemberAccess	core -> config		657841	0					
ANR	657872	Identifier	core		657841	0					
ANR	657873	Identifier	config		657841	1					
ANR	657874	ExpressionStatement	"r_config_hold_i ( hc , ""scr.color"" , ""scr.utf8"" , ""asm.marks"" , ""asm.offset"" , ""asm.lines"" , ""asm.cmt.right"" , ""asm.cmt.col"" , ""asm.lines.fcn"" , ""asm.bytes"" , NULL )"	1963:1:65691:65847	657841	4	True				
ANR	657875	CallExpression	"r_config_hold_i ( hc , ""scr.color"" , ""scr.utf8"" , ""asm.marks"" , ""asm.offset"" , ""asm.lines"" , ""asm.cmt.right"" , ""asm.cmt.col"" , ""asm.lines.fcn"" , ""asm.bytes"" , NULL )"		657841	0					
ANR	657876	Callee	r_config_hold_i		657841	0					
ANR	657877	Identifier	r_config_hold_i		657841	0					
ANR	657878	ArgumentList	hc		657841	1					
ANR	657879	Argument	hc		657841	0					
ANR	657880	Identifier	hc		657841	0					
ANR	657881	Argument	"""scr.color"""		657841	1					
ANR	657882	PrimaryExpression	"""scr.color"""		657841	0					
ANR	657883	Argument	"""scr.utf8"""		657841	2					
ANR	657884	PrimaryExpression	"""scr.utf8"""		657841	0					
ANR	657885	Argument	"""asm.marks"""		657841	3					
ANR	657886	PrimaryExpression	"""asm.marks"""		657841	0					
ANR	657887	Argument	"""asm.offset"""		657841	4					
ANR	657888	PrimaryExpression	"""asm.offset"""		657841	0					
ANR	657889	Argument	"""asm.lines"""		657841	5					
ANR	657890	PrimaryExpression	"""asm.lines"""		657841	0					
ANR	657891	Argument	"""asm.cmt.right"""		657841	6					
ANR	657892	PrimaryExpression	"""asm.cmt.right"""		657841	0					
ANR	657893	Argument	"""asm.cmt.col"""		657841	7					
ANR	657894	PrimaryExpression	"""asm.cmt.col"""		657841	0					
ANR	657895	Argument	"""asm.lines.fcn"""		657841	8					
ANR	657896	PrimaryExpression	"""asm.lines.fcn"""		657841	0					
ANR	657897	Argument	"""asm.bytes"""		657841	9					
ANR	657898	PrimaryExpression	"""asm.bytes"""		657841	0					
ANR	657899	Argument	NULL		657841	10					
ANR	657900	Identifier	NULL		657841	0					
ANR	657901	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.utf8"" , 0 )"	1966:1:65902:65946	657841	5	True				
ANR	657902	CallExpression	"r_config_set_i ( core -> config , ""scr.utf8"" , 0 )"		657841	0					
ANR	657903	Callee	r_config_set_i		657841	0					
ANR	657904	Identifier	r_config_set_i		657841	0					
ANR	657905	ArgumentList	core -> config		657841	1					
ANR	657906	Argument	core -> config		657841	0					
ANR	657907	PtrMemberAccess	core -> config		657841	0					
ANR	657908	Identifier	core		657841	0					
ANR	657909	Identifier	config		657841	1					
ANR	657910	Argument	"""scr.utf8"""		657841	1					
ANR	657911	PrimaryExpression	"""scr.utf8"""		657841	0					
ANR	657912	Argument	0		657841	2					
ANR	657913	PrimaryExpression	0		657841	0					
ANR	657914	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.marks"" , 0 )"	1967:1:65949:65994	657841	6	True				
ANR	657915	CallExpression	"r_config_set_i ( core -> config , ""asm.marks"" , 0 )"		657841	0					
ANR	657916	Callee	r_config_set_i		657841	0					
ANR	657917	Identifier	r_config_set_i		657841	0					
ANR	657918	ArgumentList	core -> config		657841	1					
ANR	657919	Argument	core -> config		657841	0					
ANR	657920	PtrMemberAccess	core -> config		657841	0					
ANR	657921	Identifier	core		657841	0					
ANR	657922	Identifier	config		657841	1					
ANR	657923	Argument	"""asm.marks"""		657841	1					
ANR	657924	PrimaryExpression	"""asm.marks"""		657841	0					
ANR	657925	Argument	0		657841	2					
ANR	657926	PrimaryExpression	0		657841	0					
ANR	657927	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.offset"" , 0 )"	1968:1:65997:66043	657841	7	True				
ANR	657928	CallExpression	"r_config_set_i ( core -> config , ""asm.offset"" , 0 )"		657841	0					
ANR	657929	Callee	r_config_set_i		657841	0					
ANR	657930	Identifier	r_config_set_i		657841	0					
ANR	657931	ArgumentList	core -> config		657841	1					
ANR	657932	Argument	core -> config		657841	0					
ANR	657933	PtrMemberAccess	core -> config		657841	0					
ANR	657934	Identifier	core		657841	0					
ANR	657935	Identifier	config		657841	1					
ANR	657936	Argument	"""asm.offset"""		657841	1					
ANR	657937	PrimaryExpression	"""asm.offset"""		657841	0					
ANR	657938	Argument	0		657841	2					
ANR	657939	PrimaryExpression	0		657841	0					
ANR	657940	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.lines"" , 0 )"	1969:1:66046:66091	657841	8	True				
ANR	657941	CallExpression	"r_config_set_i ( core -> config , ""asm.lines"" , 0 )"		657841	0					
ANR	657942	Callee	r_config_set_i		657841	0					
ANR	657943	Identifier	r_config_set_i		657841	0					
ANR	657944	ArgumentList	core -> config		657841	1					
ANR	657945	Argument	core -> config		657841	0					
ANR	657946	PtrMemberAccess	core -> config		657841	0					
ANR	657947	Identifier	core		657841	0					
ANR	657948	Identifier	config		657841	1					
ANR	657949	Argument	"""asm.lines"""		657841	1					
ANR	657950	PrimaryExpression	"""asm.lines"""		657841	0					
ANR	657951	Argument	0		657841	2					
ANR	657952	PrimaryExpression	0		657841	0					
ANR	657953	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.cmt.right"" , 0 )"	1970:1:66094:66143	657841	9	True				
ANR	657954	CallExpression	"r_config_set_i ( core -> config , ""asm.cmt.right"" , 0 )"		657841	0					
ANR	657955	Callee	r_config_set_i		657841	0					
ANR	657956	Identifier	r_config_set_i		657841	0					
ANR	657957	ArgumentList	core -> config		657841	1					
ANR	657958	Argument	core -> config		657841	0					
ANR	657959	PtrMemberAccess	core -> config		657841	0					
ANR	657960	Identifier	core		657841	0					
ANR	657961	Identifier	config		657841	1					
ANR	657962	Argument	"""asm.cmt.right"""		657841	1					
ANR	657963	PrimaryExpression	"""asm.cmt.right"""		657841	0					
ANR	657964	Argument	0		657841	2					
ANR	657965	PrimaryExpression	0		657841	0					
ANR	657966	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.cmt.col"" , 0 )"	1971:1:66146:66193	657841	10	True				
ANR	657967	CallExpression	"r_config_set_i ( core -> config , ""asm.cmt.col"" , 0 )"		657841	0					
ANR	657968	Callee	r_config_set_i		657841	0					
ANR	657969	Identifier	r_config_set_i		657841	0					
ANR	657970	ArgumentList	core -> config		657841	1					
ANR	657971	Argument	core -> config		657841	0					
ANR	657972	PtrMemberAccess	core -> config		657841	0					
ANR	657973	Identifier	core		657841	0					
ANR	657974	Identifier	config		657841	1					
ANR	657975	Argument	"""asm.cmt.col"""		657841	1					
ANR	657976	PrimaryExpression	"""asm.cmt.col"""		657841	0					
ANR	657977	Argument	0		657841	2					
ANR	657978	PrimaryExpression	0		657841	0					
ANR	657979	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.lines.fcn"" , 0 )"	1972:1:66196:66245	657841	11	True				
ANR	657980	CallExpression	"r_config_set_i ( core -> config , ""asm.lines.fcn"" , 0 )"		657841	0					
ANR	657981	Callee	r_config_set_i		657841	0					
ANR	657982	Identifier	r_config_set_i		657841	0					
ANR	657983	ArgumentList	core -> config		657841	1					
ANR	657984	Argument	core -> config		657841	0					
ANR	657985	PtrMemberAccess	core -> config		657841	0					
ANR	657986	Identifier	core		657841	0					
ANR	657987	Identifier	config		657841	1					
ANR	657988	Argument	"""asm.lines.fcn"""		657841	1					
ANR	657989	PrimaryExpression	"""asm.lines.fcn"""		657841	0					
ANR	657990	Argument	0		657841	2					
ANR	657991	PrimaryExpression	0		657841	0					
ANR	657992	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.bytes"" , 0 )"	1973:1:66248:66293	657841	12	True				
ANR	657993	CallExpression	"r_config_set_i ( core -> config , ""asm.bytes"" , 0 )"		657841	0					
ANR	657994	Callee	r_config_set_i		657841	0					
ANR	657995	Identifier	r_config_set_i		657841	0					
ANR	657996	ArgumentList	core -> config		657841	1					
ANR	657997	Argument	core -> config		657841	0					
ANR	657998	PtrMemberAccess	core -> config		657841	0					
ANR	657999	Identifier	core		657841	0					
ANR	658000	Identifier	config		657841	1					
ANR	658001	Argument	"""asm.bytes"""		657841	1					
ANR	658002	PrimaryExpression	"""asm.bytes"""		657841	0					
ANR	658003	Argument	0		657841	2					
ANR	658004	PrimaryExpression	0		657841	0					
ANR	658005	Statement	r_list_foreach	1975:1:66297:66310	657841	13	True				
ANR	658006	Statement	(	1975:16:66312:66312	657841	14	True				
ANR	658007	Statement	fcn	1975:17:66313:66315	657841	15	True				
ANR	658008	Statement	->	1975:20:66316:66317	657841	16	True				
ANR	658009	Statement	bbs	1975:22:66318:66320	657841	17	True				
ANR	658010	Statement	","	1975:25:66321:66321	657841	18	True				
ANR	658011	Statement	iter	1975:27:66323:66326	657841	19	True				
ANR	658012	Statement	","	1975:31:66327:66327	657841	20	True				
ANR	658013	Statement	bb	1975:33:66329:66330	657841	21	True				
ANR	658014	Statement	)	1975:35:66331:66331	657841	22	True				
ANR	658015	CompoundStatement		27:2:925:972	657841	23					
ANR	658016	IfStatement	if ( bb -> addr == UT64_MAX )		657841	0					
ANR	658017	Condition	bb -> addr == UT64_MAX	1976:6:66341:66360	657841	0	True				
ANR	658018	EqualityExpression	bb -> addr == UT64_MAX		657841	0		==			
ANR	658019	PtrMemberAccess	bb -> addr		657841	0					
ANR	658020	Identifier	bb		657841	0					
ANR	658021	Identifier	addr		657841	1					
ANR	658022	Identifier	UT64_MAX		657841	1					
ANR	658023	CompoundStatement		22:28:795:795	657841	1					
ANR	658024	ContinueStatement	continue ;	1977:3:66368:66376	657841	0	True				
ANR	658025	IdentifierDeclStatement	char * title = get_title ( bb -> addr ) ;	1979:2:66384:66418	657841	1	True				
ANR	658026	IdentifierDecl	* title = get_title ( bb -> addr )		657841	0					
ANR	658027	IdentifierDeclType	char *		657841	0					
ANR	658028	Identifier	title		657841	1					
ANR	658029	AssignmentExpression	* title = get_title ( bb -> addr )		657841	2		=			
ANR	658030	Identifier	title		657841	0					
ANR	658031	CallExpression	get_title ( bb -> addr )		657841	1					
ANR	658032	Callee	get_title		657841	0					
ANR	658033	Identifier	get_title		657841	0					
ANR	658034	ArgumentList	bb -> addr		657841	1					
ANR	658035	Argument	bb -> addr		657841	0					
ANR	658036	PtrMemberAccess	bb -> addr		657841	0					
ANR	658037	Identifier	bb		657841	0					
ANR	658038	Identifier	addr		657841	1					
ANR	658039	Statement	char	1980:2:66422:66425	657841	2	True				
ANR	658040	Statement	*	1980:7:66427:66427	657841	3	True				
ANR	658041	Statement	body	1980:8:66428:66431	657841	4	True				
ANR	658042	Statement	=	1980:13:66433:66433	657841	5	True				
ANR	658043	Statement	r_core_cmd_strf	1980:15:66435:66449	657841	6	True				
ANR	658044	Statement	(	1980:31:66451:66451	657841	7	True				
ANR	658045	Statement	core	1980:32:66452:66455	657841	8	True				
ANR	658046	Statement	","	1980:36:66456:66456	657841	9	True				
ANR	658047	Statement	"""pdb @ 0x%08"""	1980:38:66458:66470	657841	10	True				
ANR	658048	Statement	PFMT64x	1980:51:66471:66477	657841	11	True				
ANR	658049	Statement	","	1980:58:66478:66478	657841	12	True				
ANR	658050	Statement	bb	1980:60:66480:66481	657841	13	True				
ANR	658051	Statement	->	1980:62:66482:66483	657841	14	True				
ANR	658052	Statement	addr	1980:64:66484:66487	657841	15	True				
ANR	658053	Statement	)	1980:68:66488:66488	657841	16	True				
ANR	658054	ExpressionStatement		1980:69:66489:66489	657841	17	True				
ANR	658055	IdentifierDeclStatement	"char * body_b64 = r_base64_encode_dyn ( body , - 1 ) ;"	1981:2:66493:66540	657841	18	True				
ANR	658056	IdentifierDecl	"* body_b64 = r_base64_encode_dyn ( body , - 1 )"		657841	0					
ANR	658057	IdentifierDeclType	char *		657841	0					
ANR	658058	Identifier	body_b64		657841	1					
ANR	658059	AssignmentExpression	"* body_b64 = r_base64_encode_dyn ( body , - 1 )"		657841	2		=			
ANR	658060	Identifier	body_b64		657841	0					
ANR	658061	CallExpression	"r_base64_encode_dyn ( body , - 1 )"		657841	1					
ANR	658062	Callee	r_base64_encode_dyn		657841	0					
ANR	658063	Identifier	r_base64_encode_dyn		657841	0					
ANR	658064	ArgumentList	body		657841	1					
ANR	658065	Argument	body		657841	0					
ANR	658066	Identifier	body		657841	0					
ANR	658067	Argument	- 1		657841	1					
ANR	658068	UnaryOperationExpression	- 1		657841	0					
ANR	658069	UnaryOperator	-		657841	0					
ANR	658070	PrimaryExpression	1		657841	1					
ANR	658071	IfStatement	if ( ! title || ! body || ! body_b64 )		657841	19					
ANR	658072	Condition	! title || ! body || ! body_b64	1982:6:66548:66575	657841	0	True				
ANR	658073	OrExpression	! title || ! body || ! body_b64		657841	0		||			
ANR	658074	UnaryOperationExpression	! title		657841	0					
ANR	658075	UnaryOperator	!		657841	0					
ANR	658076	Identifier	title		657841	1					
ANR	658077	OrExpression	! body || ! body_b64		657841	1		||			
ANR	658078	UnaryOperationExpression	! body		657841	0					
ANR	658079	UnaryOperator	!		657841	0					
ANR	658080	Identifier	body		657841	1					
ANR	658081	UnaryOperationExpression	! body_b64		657841	1					
ANR	658082	UnaryOperator	!		657841	0					
ANR	658083	Identifier	body_b64		657841	1					
ANR	658084	CompoundStatement		28:36:1010:1010	657841	1					
ANR	658085	ExpressionStatement	free ( body_b64 )	1983:3:66583:66598	657841	0	True				
ANR	658086	CallExpression	free ( body_b64 )		657841	0					
ANR	658087	Callee	free		657841	0					
ANR	658088	Identifier	free		657841	0					
ANR	658089	ArgumentList	body_b64		657841	1					
ANR	658090	Argument	body_b64		657841	0					
ANR	658091	Identifier	body_b64		657841	0					
ANR	658092	ExpressionStatement	free ( body )	1984:3:66603:66614	657841	1	True				
ANR	658093	CallExpression	free ( body )		657841	0					
ANR	658094	Callee	free		657841	0					
ANR	658095	Identifier	free		657841	0					
ANR	658096	ArgumentList	body		657841	1					
ANR	658097	Argument	body		657841	0					
ANR	658098	Identifier	body		657841	0					
ANR	658099	ExpressionStatement	free ( title )	1985:3:66619:66631	657841	2	True				
ANR	658100	CallExpression	free ( title )		657841	0					
ANR	658101	Callee	free		657841	0					
ANR	658102	Identifier	free		657841	0					
ANR	658103	ArgumentList	title		657841	1					
ANR	658104	Argument	title		657841	0					
ANR	658105	Identifier	title		657841	0					
ANR	658106	ExpressionStatement	r_config_hold_restore ( hc )	1986:3:66636:66662	657841	3	True				
ANR	658107	CallExpression	r_config_hold_restore ( hc )		657841	0					
ANR	658108	Callee	r_config_hold_restore		657841	0					
ANR	658109	Identifier	r_config_hold_restore		657841	0					
ANR	658110	ArgumentList	hc		657841	1					
ANR	658111	Argument	hc		657841	0					
ANR	658112	Identifier	hc		657841	0					
ANR	658113	ExpressionStatement	r_config_hold_free ( hc )	1987:3:66667:66690	657841	4	True				
ANR	658114	CallExpression	r_config_hold_free ( hc )		657841	0					
ANR	658115	Callee	r_config_hold_free		657841	0					
ANR	658116	Identifier	r_config_hold_free		657841	0					
ANR	658117	ArgumentList	hc		657841	1					
ANR	658118	Argument	hc		657841	0					
ANR	658119	Identifier	hc		657841	0					
ANR	658120	ReturnStatement	return false ;	1988:3:66695:66707	657841	5	True				
ANR	658121	Identifier	false		657841	0					
ANR	658122	ExpressionStatement	"body_b64 = r_str_prepend ( body_b64 , ""base64:"" )"	1990:2:66715:66761	657841	20	True				
ANR	658123	AssignmentExpression	"body_b64 = r_str_prepend ( body_b64 , ""base64:"" )"		657841	0		=			
ANR	658124	Identifier	body_b64		657841	0					
ANR	658125	CallExpression	"r_str_prepend ( body_b64 , ""base64:"" )"		657841	1					
ANR	658126	Callee	r_str_prepend		657841	0					
ANR	658127	Identifier	r_str_prepend		657841	0					
ANR	658128	ArgumentList	body_b64		657841	1					
ANR	658129	Argument	body_b64		657841	0					
ANR	658130	Identifier	body_b64		657841	0					
ANR	658131	Argument	"""base64:"""		657841	1					
ANR	658132	PrimaryExpression	"""base64:"""		657841	0					
ANR	658133	ExpressionStatement	"r_cons_printf ( ""agn %s %s\\n"" , title , body_b64 )"	1991:2:66765:66811	657841	21	True				
ANR	658134	CallExpression	"r_cons_printf ( ""agn %s %s\\n"" , title , body_b64 )"		657841	0					
ANR	658135	Callee	r_cons_printf		657841	0					
ANR	658136	Identifier	r_cons_printf		657841	0					
ANR	658137	ArgumentList	"""agn %s %s\\n"""		657841	1					
ANR	658138	Argument	"""agn %s %s\\n"""		657841	0					
ANR	658139	PrimaryExpression	"""agn %s %s\\n"""		657841	0					
ANR	658140	Argument	title		657841	1					
ANR	658141	Identifier	title		657841	0					
ANR	658142	Argument	body_b64		657841	2					
ANR	658143	Identifier	body_b64		657841	0					
ANR	658144	ExpressionStatement	free ( body )	1992:2:66815:66826	657841	22	True				
ANR	658145	CallExpression	free ( body )		657841	0					
ANR	658146	Callee	free		657841	0					
ANR	658147	Identifier	free		657841	0					
ANR	658148	ArgumentList	body		657841	1					
ANR	658149	Argument	body		657841	0					
ANR	658150	Identifier	body		657841	0					
ANR	658151	ExpressionStatement	free ( body_b64 )	1993:2:66830:66845	657841	23	True				
ANR	658152	CallExpression	free ( body_b64 )		657841	0					
ANR	658153	Callee	free		657841	0					
ANR	658154	Identifier	free		657841	0					
ANR	658155	ArgumentList	body_b64		657841	1					
ANR	658156	Argument	body_b64		657841	0					
ANR	658157	Identifier	body_b64		657841	0					
ANR	658158	ExpressionStatement	free ( title )	1994:2:66849:66861	657841	24	True				
ANR	658159	CallExpression	free ( title )		657841	0					
ANR	658160	Callee	free		657841	0					
ANR	658161	Identifier	free		657841	0					
ANR	658162	ArgumentList	title		657841	1					
ANR	658163	Argument	title		657841	0					
ANR	658164	Identifier	title		657841	0					
ANR	658165	ExpressionStatement	r_config_hold_restore ( hc )	1997:1:66868:66894	657841	24	True				
ANR	658166	CallExpression	r_config_hold_restore ( hc )		657841	0					
ANR	658167	Callee	r_config_hold_restore		657841	0					
ANR	658168	Identifier	r_config_hold_restore		657841	0					
ANR	658169	ArgumentList	hc		657841	1					
ANR	658170	Argument	hc		657841	0					
ANR	658171	Identifier	hc		657841	0					
ANR	658172	ExpressionStatement	r_config_hold_free ( hc )	1998:1:66897:66920	657841	25	True				
ANR	658173	CallExpression	r_config_hold_free ( hc )		657841	0					
ANR	658174	Callee	r_config_hold_free		657841	0					
ANR	658175	Identifier	r_config_hold_free		657841	0					
ANR	658176	ArgumentList	hc		657841	1					
ANR	658177	Argument	hc		657841	0					
ANR	658178	Identifier	hc		657841	0					
ANR	658179	Statement	r_list_foreach	2000:1:66924:66937	657841	26	True				
ANR	658180	Statement	(	2000:16:66939:66939	657841	27	True				
ANR	658181	Statement	fcn	2000:17:66940:66942	657841	28	True				
ANR	658182	Statement	->	2000:20:66943:66944	657841	29	True				
ANR	658183	Statement	bbs	2000:22:66945:66947	657841	30	True				
ANR	658184	Statement	","	2000:25:66948:66948	657841	31	True				
ANR	658185	Statement	iter	2000:27:66950:66953	657841	32	True				
ANR	658186	Statement	","	2000:31:66954:66954	657841	33	True				
ANR	658187	Statement	bb	2000:33:66956:66957	657841	34	True				
ANR	658188	Statement	)	2000:35:66958:66958	657841	35	True				
ANR	658189	CompoundStatement		50:2:1443:1484	657841	36					
ANR	658190	IfStatement	if ( bb -> addr == UT64_MAX )		657841	0					
ANR	658191	Condition	bb -> addr == UT64_MAX	2001:6:66968:66987	657841	0	True				
ANR	658192	EqualityExpression	bb -> addr == UT64_MAX		657841	0		==			
ANR	658193	PtrMemberAccess	bb -> addr		657841	0					
ANR	658194	Identifier	bb		657841	0					
ANR	658195	Identifier	addr		657841	1					
ANR	658196	Identifier	UT64_MAX		657841	1					
ANR	658197	CompoundStatement		47:28:1422:1422	657841	1					
ANR	658198	ContinueStatement	continue ;	2002:3:66995:67003	657841	0	True				
ANR	658199	IdentifierDeclStatement	"char * u = get_title ( bb -> addr ) , * v = NULL ;"	2004:2:67011:67052	657841	1	True				
ANR	658200	IdentifierDecl	* u = get_title ( bb -> addr )		657841	0					
ANR	658201	IdentifierDeclType	char *		657841	0					
ANR	658202	Identifier	u		657841	1					
ANR	658203	AssignmentExpression	* u = get_title ( bb -> addr )		657841	2		=			
ANR	658204	Identifier	u		657841	0					
ANR	658205	CallExpression	get_title ( bb -> addr )		657841	1					
ANR	658206	Callee	get_title		657841	0					
ANR	658207	Identifier	get_title		657841	0					
ANR	658208	ArgumentList	bb -> addr		657841	1					
ANR	658209	Argument	bb -> addr		657841	0					
ANR	658210	PtrMemberAccess	bb -> addr		657841	0					
ANR	658211	Identifier	bb		657841	0					
ANR	658212	Identifier	addr		657841	1					
ANR	658213	IdentifierDecl	* v = NULL		657841	1					
ANR	658214	IdentifierDeclType	char *		657841	0					
ANR	658215	Identifier	v		657841	1					
ANR	658216	AssignmentExpression	* v = NULL		657841	2		=			
ANR	658217	Identifier	NULL		657841	0					
ANR	658218	Identifier	NULL		657841	1					
ANR	658219	IfStatement	if ( bb -> jump != UT64_MAX )		657841	2					
ANR	658220	Condition	bb -> jump != UT64_MAX	2005:6:67060:67079	657841	0	True				
ANR	658221	EqualityExpression	bb -> jump != UT64_MAX		657841	0		!=			
ANR	658222	PtrMemberAccess	bb -> jump		657841	0					
ANR	658223	Identifier	bb		657841	0					
ANR	658224	Identifier	jump		657841	1					
ANR	658225	Identifier	UT64_MAX		657841	1					
ANR	658226	CompoundStatement		51:28:1514:1514	657841	1					
ANR	658227	ExpressionStatement	v = get_title ( bb -> jump )	2006:3:67087:67111	657841	0	True				
ANR	658228	AssignmentExpression	v = get_title ( bb -> jump )		657841	0		=			
ANR	658229	Identifier	v		657841	0					
ANR	658230	CallExpression	get_title ( bb -> jump )		657841	1					
ANR	658231	Callee	get_title		657841	0					
ANR	658232	Identifier	get_title		657841	0					
ANR	658233	ArgumentList	bb -> jump		657841	1					
ANR	658234	Argument	bb -> jump		657841	0					
ANR	658235	PtrMemberAccess	bb -> jump		657841	0					
ANR	658236	Identifier	bb		657841	0					
ANR	658237	Identifier	jump		657841	1					
ANR	658238	ExpressionStatement	"r_cons_printf ( ""age %s %s\\n"" , u , v )"	2007:3:67116:67151	657841	1	True				
ANR	658239	CallExpression	"r_cons_printf ( ""age %s %s\\n"" , u , v )"		657841	0					
ANR	658240	Callee	r_cons_printf		657841	0					
ANR	658241	Identifier	r_cons_printf		657841	0					
ANR	658242	ArgumentList	"""age %s %s\\n"""		657841	1					
ANR	658243	Argument	"""age %s %s\\n"""		657841	0					
ANR	658244	PrimaryExpression	"""age %s %s\\n"""		657841	0					
ANR	658245	Argument	u		657841	1					
ANR	658246	Identifier	u		657841	0					
ANR	658247	Argument	v		657841	2					
ANR	658248	Identifier	v		657841	0					
ANR	658249	ExpressionStatement	free ( v )	2008:3:67156:67164	657841	2	True				
ANR	658250	CallExpression	free ( v )		657841	0					
ANR	658251	Callee	free		657841	0					
ANR	658252	Identifier	free		657841	0					
ANR	658253	ArgumentList	v		657841	1					
ANR	658254	Argument	v		657841	0					
ANR	658255	Identifier	v		657841	0					
ANR	658256	IfStatement	if ( bb -> fail != UT64_MAX )		657841	3					
ANR	658257	Condition	bb -> fail != UT64_MAX	2010:6:67176:67195	657841	0	True				
ANR	658258	EqualityExpression	bb -> fail != UT64_MAX		657841	0		!=			
ANR	658259	PtrMemberAccess	bb -> fail		657841	0					
ANR	658260	Identifier	bb		657841	0					
ANR	658261	Identifier	fail		657841	1					
ANR	658262	Identifier	UT64_MAX		657841	1					
ANR	658263	CompoundStatement		56:28:1630:1630	657841	1					
ANR	658264	ExpressionStatement	v = get_title ( bb -> fail )	2011:3:67203:67227	657841	0	True				
ANR	658265	AssignmentExpression	v = get_title ( bb -> fail )		657841	0		=			
ANR	658266	Identifier	v		657841	0					
ANR	658267	CallExpression	get_title ( bb -> fail )		657841	1					
ANR	658268	Callee	get_title		657841	0					
ANR	658269	Identifier	get_title		657841	0					
ANR	658270	ArgumentList	bb -> fail		657841	1					
ANR	658271	Argument	bb -> fail		657841	0					
ANR	658272	PtrMemberAccess	bb -> fail		657841	0					
ANR	658273	Identifier	bb		657841	0					
ANR	658274	Identifier	fail		657841	1					
ANR	658275	ExpressionStatement	"r_cons_printf ( ""age %s %s\\n"" , u , v )"	2012:3:67232:67267	657841	1	True				
ANR	658276	CallExpression	"r_cons_printf ( ""age %s %s\\n"" , u , v )"		657841	0					
ANR	658277	Callee	r_cons_printf		657841	0					
ANR	658278	Identifier	r_cons_printf		657841	0					
ANR	658279	ArgumentList	"""age %s %s\\n"""		657841	1					
ANR	658280	Argument	"""age %s %s\\n"""		657841	0					
ANR	658281	PrimaryExpression	"""age %s %s\\n"""		657841	0					
ANR	658282	Argument	u		657841	1					
ANR	658283	Identifier	u		657841	0					
ANR	658284	Argument	v		657841	2					
ANR	658285	Identifier	v		657841	0					
ANR	658286	ExpressionStatement	free ( v )	2013:3:67272:67280	657841	2	True				
ANR	658287	CallExpression	free ( v )		657841	0					
ANR	658288	Callee	free		657841	0					
ANR	658289	Identifier	free		657841	0					
ANR	658290	ArgumentList	v		657841	1					
ANR	658291	Argument	v		657841	0					
ANR	658292	Identifier	v		657841	0					
ANR	658293	IfStatement	if ( bb -> switch_op )		657841	4					
ANR	658294	Condition	bb -> switch_op	2015:6:67292:67304	657841	0	True				
ANR	658295	PtrMemberAccess	bb -> switch_op		657841	0					
ANR	658296	Identifier	bb		657841	0					
ANR	658297	Identifier	switch_op		657841	1					
ANR	658298	CompoundStatement		63:3:1762:1778	657841	1					
ANR	658299	IdentifierDeclStatement	RListIter * it ;	2016:3:67312:67325	657841	0	True				
ANR	658300	IdentifierDecl	* it		657841	0					
ANR	658301	IdentifierDeclType	RListIter *		657841	0					
ANR	658302	Identifier	it		657841	1					
ANR	658303	IdentifierDeclStatement	RAnalCaseOp * cop ;	2017:3:67330:67346	657841	1	True				
ANR	658304	IdentifierDecl	* cop		657841	0					
ANR	658305	IdentifierDeclType	RAnalCaseOp *		657841	0					
ANR	658306	Identifier	cop		657841	1					
ANR	658307	Statement	r_list_foreach	2018:3:67351:67364	657841	2	True				
ANR	658308	Statement	(	2018:18:67366:67366	657841	3	True				
ANR	658309	Statement	bb	2018:19:67367:67368	657841	4	True				
ANR	658310	Statement	->	2018:21:67369:67370	657841	5	True				
ANR	658311	Statement	switch_op	2018:23:67371:67379	657841	6	True				
ANR	658312	Statement	->	2018:32:67380:67381	657841	7	True				
ANR	658313	Statement	cases	2018:34:67382:67386	657841	8	True				
ANR	658314	Statement	","	2018:39:67387:67387	657841	9	True				
ANR	658315	Statement	it	2018:41:67389:67390	657841	10	True				
ANR	658316	Statement	","	2018:43:67391:67391	657841	11	True				
ANR	658317	Statement	cop	2018:45:67393:67395	657841	12	True				
ANR	658318	Statement	)	2018:48:67396:67396	657841	13	True				
ANR	658319	CompoundStatement		64:50:1830:1830	657841	14					
ANR	658320	ExpressionStatement	v = get_title ( cop -> addr )	2019:4:67404:67429	657841	0	True				
ANR	658321	AssignmentExpression	v = get_title ( cop -> addr )		657841	0		=			
ANR	658322	Identifier	v		657841	0					
ANR	658323	CallExpression	get_title ( cop -> addr )		657841	1					
ANR	658324	Callee	get_title		657841	0					
ANR	658325	Identifier	get_title		657841	0					
ANR	658326	ArgumentList	cop -> addr		657841	1					
ANR	658327	Argument	cop -> addr		657841	0					
ANR	658328	PtrMemberAccess	cop -> addr		657841	0					
ANR	658329	Identifier	cop		657841	0					
ANR	658330	Identifier	addr		657841	1					
ANR	658331	ExpressionStatement	"r_cons_printf ( ""age %s %s\\n"" , u , v )"	2020:4:67435:67470	657841	1	True				
ANR	658332	CallExpression	"r_cons_printf ( ""age %s %s\\n"" , u , v )"		657841	0					
ANR	658333	Callee	r_cons_printf		657841	0					
ANR	658334	Identifier	r_cons_printf		657841	0					
ANR	658335	ArgumentList	"""age %s %s\\n"""		657841	1					
ANR	658336	Argument	"""age %s %s\\n"""		657841	0					
ANR	658337	PrimaryExpression	"""age %s %s\\n"""		657841	0					
ANR	658338	Argument	u		657841	1					
ANR	658339	Identifier	u		657841	0					
ANR	658340	Argument	v		657841	2					
ANR	658341	Identifier	v		657841	0					
ANR	658342	ExpressionStatement	free ( v )	2021:4:67476:67484	657841	2	True				
ANR	658343	CallExpression	free ( v )		657841	0					
ANR	658344	Callee	free		657841	0					
ANR	658345	Identifier	free		657841	0					
ANR	658346	ArgumentList	v		657841	1					
ANR	658347	Argument	v		657841	0					
ANR	658348	Identifier	v		657841	0					
ANR	658349	ExpressionStatement	free ( u )	2024:2:67497:67505	657841	5	True				
ANR	658350	CallExpression	free ( u )		657841	0					
ANR	658351	Callee	free		657841	0					
ANR	658352	Identifier	free		657841	0					
ANR	658353	ArgumentList	u		657841	1					
ANR	658354	Argument	u		657841	0					
ANR	658355	Identifier	u		657841	0					
ANR	658356	ReturnStatement	return true ;	2026:1:67511:67522	657841	37	True				
ANR	658357	Identifier	true		657841	0					
ANR	658358	ReturnType	R_API int		657841	1					
ANR	658359	Identifier	r_core_print_bb_custom		657841	2					
ANR	658360	ParameterList	"RCore * core , RAnalFunction * fcn"		657841	3					
ANR	658361	Parameter	RCore * core	1955:33:65534:65544	657841	0	True				
ANR	658362	ParameterType	RCore *		657841	0					
ANR	658363	Identifier	core		657841	1					
ANR	658364	Parameter	RAnalFunction * fcn	1955:46:65547:65564	657841	1	True				
ANR	658365	ParameterType	RAnalFunction *		657841	0					
ANR	658366	Identifier	fcn		657841	1					
ANR	658367	CFGEntryNode	ENTRY		657841		True				
ANR	658368	CFGExitNode	EXIT		657841		True				
ANR	658369	CFGErrorNode	ERROR		657841		True				
ANR	658370	Symbol	bb		657841						
ANR	658371	Symbol	body_b64		657841						
ANR	658372	Symbol	cop		657841						
ANR	658373	Symbol	* core		657841						
ANR	658374	Symbol	bb -> addr		657841						
ANR	658375	Symbol	title		657841						
ANR	658376	Symbol	body		657841						
ANR	658377	Symbol	get_title		657841						
ANR	658378	Symbol	fcn		657841						
ANR	658379	Symbol	* cop		657841						
ANR	658380	Symbol	r_base64_encode_dyn		657841						
ANR	658381	Symbol	r_config_hold_new		657841						
ANR	658382	Symbol	UT64_MAX		657841						
ANR	658383	Symbol	core -> config		657841						
ANR	658384	Symbol	bb -> fail		657841						
ANR	658385	Symbol	NULL		657841						
ANR	658386	Symbol	* bb		657841						
ANR	658387	Symbol	false		657841						
ANR	658388	Symbol	iter		657841						
ANR	658389	Symbol	r_str_prepend		657841						
ANR	658390	Symbol	it		657841						
ANR	658391	Symbol	cop -> addr		657841						
ANR	658392	Symbol	core		657841						
ANR	658393	Symbol	bb -> jump		657841						
ANR	658394	Symbol	u		657841						
ANR	658395	Symbol	v		657841						
ANR	658396	Symbol	true		657841						
ANR	658397	Symbol	hc		657841						
ANR	658398	Symbol	bb -> switch_op		657841						
ANR	658399	Function	r_core_print_bb_gml	2030:0:67544:70050							
ANR	658400	FunctionDef	"r_core_print_bb_gml (RCore * core , RAnalFunction * fcn)"		658399	0					
ANR	658401	CompoundStatement		2030:63:67607:70050	658399	0					
ANR	658402	IdentifierDeclStatement	RAnalBlock * bb ;	2031:1:67610:67624	658399	0	True				
ANR	658403	IdentifierDecl	* bb		658399	0					
ANR	658404	IdentifierDeclType	RAnalBlock *		658399	0					
ANR	658405	Identifier	bb		658399	1					
ANR	658406	IdentifierDeclStatement	RListIter * iter ;	2032:1:67627:67642	658399	1	True				
ANR	658407	IdentifierDecl	* iter		658399	0					
ANR	658408	IdentifierDeclType	RListIter *		658399	0					
ANR	658409	Identifier	iter		658399	1					
ANR	658410	IfStatement	if ( ! fcn )		658399	2					
ANR	658411	Condition	! fcn	2033:5:67649:67652	658399	0	True				
ANR	658412	UnaryOperationExpression	! fcn		658399	0					
ANR	658413	UnaryOperator	!		658399	0					
ANR	658414	Identifier	fcn		658399	1					
ANR	658415	CompoundStatement		4:11:47:47	658399	1					
ANR	658416	ReturnStatement	return false ;	2034:2:67659:67671	658399	0	True				
ANR	658417	Identifier	false		658399	0					
ANR	658418	IdentifierDeclStatement	int id = 0 ;	2036:1:67677:67687	658399	3	True				
ANR	658419	IdentifierDecl	id = 0		658399	0					
ANR	658420	IdentifierDeclType	int		658399	0					
ANR	658421	Identifier	id		658399	1					
ANR	658422	AssignmentExpression	id = 0		658399	2		=			
ANR	658423	Identifier	id		658399	0					
ANR	658424	PrimaryExpression	0		658399	1					
ANR	658425	IdentifierDeclStatement	HtUUOptions opt = { 0 } ;	2037:1:67690:67713	658399	4	True				
ANR	658426	IdentifierDecl	opt = { 0 }		658399	0					
ANR	658427	IdentifierDeclType	HtUUOptions		658399	0					
ANR	658428	Identifier	opt		658399	1					
ANR	658429	AssignmentExpression	opt = { 0 }		658399	2		=			
ANR	658430	Identifier	opt		658399	0					
ANR	658431	InitializerList	0		658399	1					
ANR	658432	PrimaryExpression	0		658399	0					
ANR	658433	IdentifierDeclStatement	HtUU * ht = ht_uu_new_opt ( & opt ) ;	2038:1:67716:67747	658399	5	True				
ANR	658434	IdentifierDecl	* ht = ht_uu_new_opt ( & opt )		658399	0					
ANR	658435	IdentifierDeclType	HtUU *		658399	0					
ANR	658436	Identifier	ht		658399	1					
ANR	658437	AssignmentExpression	* ht = ht_uu_new_opt ( & opt )		658399	2		=			
ANR	658438	Identifier	ht		658399	0					
ANR	658439	CallExpression	ht_uu_new_opt ( & opt )		658399	1					
ANR	658440	Callee	ht_uu_new_opt		658399	0					
ANR	658441	Identifier	ht_uu_new_opt		658399	0					
ANR	658442	ArgumentList	& opt		658399	1					
ANR	658443	Argument	& opt		658399	0					
ANR	658444	UnaryOperationExpression	& opt		658399	0					
ANR	658445	UnaryOperator	&		658399	0					
ANR	658446	Identifier	opt		658399	1					
ANR	658447	Statement	r_cons_printf	2040:1:67751:67763	658399	6	True				
ANR	658448	Statement	(	2040:15:67765:67765	658399	7	True				
ANR	658449	Statement	"""graph\\n[\\n"""	2040:16:67766:67777	658399	8	True				
ANR	658450	Statement	"""hierarchic 1\\n"""	2040:29:67779:67794	658399	9	True				
ANR	658451	Statement	"""label \\""\\""\\n"""	2040:46:67796:67809	658399	10	True				
ANR	658452	Statement	"""directed 1\\n"""	2040:61:67811:67824	658399	11	True				
ANR	658453	Statement	)	2040:75:67825:67825	658399	12	True				
ANR	658454	ExpressionStatement		2040:76:67826:67826	658399	13	True				
ANR	658455	Statement	r_list_foreach	2042:1:67830:67843	658399	14	True				
ANR	658456	Statement	(	2042:16:67845:67845	658399	15	True				
ANR	658457	Statement	fcn	2042:17:67846:67848	658399	16	True				
ANR	658458	Statement	->	2042:20:67849:67850	658399	17	True				
ANR	658459	Statement	bbs	2042:22:67851:67853	658399	18	True				
ANR	658460	Statement	","	2042:25:67854:67854	658399	19	True				
ANR	658461	Statement	iter	2042:27:67856:67859	658399	20	True				
ANR	658462	Statement	","	2042:31:67860:67860	658399	21	True				
ANR	658463	Statement	bb	2042:33:67862:67863	658399	22	True				
ANR	658464	Statement	)	2042:35:67864:67864	658399	23	True				
ANR	658465	CompoundStatement		14:2:262:316	658399	24					
ANR	658466	IdentifierDeclStatement	"RFlagItem * flag = r_flag_get_i ( core -> flags , bb -> addr ) ;"	2043:2:67870:67924	658399	0	True				
ANR	658467	IdentifierDecl	"* flag = r_flag_get_i ( core -> flags , bb -> addr )"		658399	0					
ANR	658468	IdentifierDeclType	RFlagItem *		658399	0					
ANR	658469	Identifier	flag		658399	1					
ANR	658470	AssignmentExpression	"* flag = r_flag_get_i ( core -> flags , bb -> addr )"		658399	2		=			
ANR	658471	Identifier	flag		658399	0					
ANR	658472	CallExpression	"r_flag_get_i ( core -> flags , bb -> addr )"		658399	1					
ANR	658473	Callee	r_flag_get_i		658399	0					
ANR	658474	Identifier	r_flag_get_i		658399	0					
ANR	658475	ArgumentList	core -> flags		658399	1					
ANR	658476	Argument	core -> flags		658399	0					
ANR	658477	PtrMemberAccess	core -> flags		658399	0					
ANR	658478	Identifier	core		658399	0					
ANR	658479	Identifier	flags		658399	1					
ANR	658480	Argument	bb -> addr		658399	1					
ANR	658481	PtrMemberAccess	bb -> addr		658399	0					
ANR	658482	Identifier	bb		658399	0					
ANR	658483	Identifier	addr		658399	1					
ANR	658484	Statement	char	2044:2:67928:67931	658399	1	True				
ANR	658485	Statement	*	2044:7:67933:67933	658399	2	True				
ANR	658486	Statement	msg	2044:8:67934:67936	658399	3	True				
ANR	658487	Statement	=	2044:12:67938:67938	658399	4	True				
ANR	658488	Statement	flag	2044:14:67940:67943	658399	5	True				
ANR	658489	Statement	?	2044:18:67944:67944	658399	6	True				
ANR	658490	Statement	strdup	2044:20:67946:67951	658399	7	True				
ANR	658491	Statement	(	2044:27:67953:67953	658399	8	True				
ANR	658492	Statement	flag	2044:28:67954:67957	658399	9	True				
ANR	658493	Statement	->	2044:32:67958:67959	658399	10	True				
ANR	658494	Statement	name	2044:34:67960:67963	658399	11	True				
ANR	658495	Statement	)	2044:38:67964:67964	658399	12	True				
ANR	658496	Statement	:	2044:39:67965:67965	658399	13	True				
ANR	658497	Statement	r_str_newf	2044:41:67967:67976	658399	14	True				
ANR	658498	Statement	(	2044:52:67978:67978	658399	15	True				
ANR	658499	Statement	"""0x%08"""	2044:53:67979:67985	658399	16	True				
ANR	658500	Statement	PFMT64x	2044:60:67986:67992	658399	17	True				
ANR	658501	Statement	","	2044:67:67993:67993	658399	18	True				
ANR	658502	Statement	bb	2044:69:67995:67996	658399	19	True				
ANR	658503	Statement	->	2044:71:67997:67998	658399	20	True				
ANR	658504	Statement	addr	2044:73:67999:68002	658399	21	True				
ANR	658505	Statement	)	2044:77:68003:68003	658399	22	True				
ANR	658506	ExpressionStatement		2044:78:68004:68004	658399	23	True				
ANR	658507	ExpressionStatement	"ht_uu_insert ( ht , bb -> addr , id )"	2046:2:68019:68050	658399	24	True				
ANR	658508	CallExpression	"ht_uu_insert ( ht , bb -> addr , id )"		658399	0					
ANR	658509	Callee	ht_uu_insert		658399	0					
ANR	658510	Identifier	ht_uu_insert		658399	0					
ANR	658511	ArgumentList	ht		658399	1					
ANR	658512	Argument	ht		658399	0					
ANR	658513	Identifier	ht		658399	0					
ANR	658514	Argument	bb -> addr		658399	1					
ANR	658515	PtrMemberAccess	bb -> addr		658399	0					
ANR	658516	Identifier	bb		658399	0					
ANR	658517	Identifier	addr		658399	1					
ANR	658518	Argument	id		658399	2					
ANR	658519	Identifier	id		658399	0					
ANR	658520	Statement	r_cons_printf	2047:2:68054:68066	658399	25	True				
ANR	658521	Statement	(	2047:16:68068:68068	658399	26	True				
ANR	658522	Statement	"""  node [\\n"""	2047:17:68069:68080	658399	27	True				
ANR	658523	Statement	"""    id  %d\\n"""	2048:4:68086:68099	658399	28	True				
ANR	658524	Statement	"""    label  \\""%s\\""\\n"""	2049:4:68105:68125	658399	29	True				
ANR	658525	Statement	"""  ]\\n"""	2050:4:68131:68137	658399	30	True				
ANR	658526	Statement	","	2050:11:68138:68138	658399	31	True				
ANR	658527	Statement	id	2050:13:68140:68141	658399	32	True				
ANR	658528	Statement	","	2050:15:68142:68142	658399	33	True				
ANR	658529	Statement	msg	2050:17:68144:68146	658399	34	True				
ANR	658530	Statement	)	2050:20:68147:68147	658399	35	True				
ANR	658531	ExpressionStatement		2050:21:68148:68148	658399	36	True				
ANR	658532	ExpressionStatement	id ++	2051:2:68152:68156	658399	37	True				
ANR	658533	PostIncDecOperationExpression	id ++		658399	0					
ANR	658534	Identifier	id		658399	0					
ANR	658535	IncDec	++		658399	1					
ANR	658536	ExpressionStatement	free ( msg )	2058:2:68285:68295	658399	38	True				
ANR	658537	CallExpression	free ( msg )		658399	0					
ANR	658538	Callee	free		658399	0					
ANR	658539	Identifier	free		658399	0					
ANR	658540	ArgumentList	msg		658399	1					
ANR	658541	Argument	msg		658399	0					
ANR	658542	Identifier	msg		658399	0					
ANR	658543	Statement	r_list_foreach	2061:1:68302:68315	658399	25	True				
ANR	658544	Statement	(	2061:16:68317:68317	658399	26	True				
ANR	658545	Statement	fcn	2061:17:68318:68320	658399	27	True				
ANR	658546	Statement	->	2061:20:68321:68322	658399	28	True				
ANR	658547	Statement	bbs	2061:22:68323:68325	658399	29	True				
ANR	658548	Statement	","	2061:25:68326:68326	658399	30	True				
ANR	658549	Statement	iter	2061:27:68328:68331	658399	31	True				
ANR	658550	Statement	","	2061:31:68332:68332	658399	32	True				
ANR	658551	Statement	bb	2061:33:68334:68335	658399	33	True				
ANR	658552	Statement	)	2061:35:68336:68336	658399	34	True				
ANR	658553	CompoundStatement		32:37:730:730	658399	35					
ANR	658554	IfStatement	if ( bb -> addr == UT64_MAX )		658399	0					
ANR	658555	Condition	bb -> addr == UT64_MAX	2062:6:68346:68365	658399	0	True				
ANR	658556	EqualityExpression	bb -> addr == UT64_MAX		658399	0		==			
ANR	658557	PtrMemberAccess	bb -> addr		658399	0					
ANR	658558	Identifier	bb		658399	0					
ANR	658559	Identifier	addr		658399	1					
ANR	658560	Identifier	UT64_MAX		658399	1					
ANR	658561	CompoundStatement		33:28:760:760	658399	1					
ANR	658562	ContinueStatement	continue ;	2063:3:68373:68381	658399	0	True				
ANR	658563	IfStatement	if ( bb -> jump != UT64_MAX )		658399	1					
ANR	658564	Condition	bb -> jump != UT64_MAX	2067:6:68405:68424	658399	0	True				
ANR	658565	EqualityExpression	bb -> jump != UT64_MAX		658399	0		!=			
ANR	658566	PtrMemberAccess	bb -> jump		658399	0					
ANR	658567	Identifier	bb		658399	0					
ANR	658568	Identifier	jump		658399	1					
ANR	658569	Identifier	UT64_MAX		658399	1					
ANR	658570	CompoundStatement		40:3:839:880	658399	1					
ANR	658571	IdentifierDeclStatement	bool found ;	2068:3:68432:68442	658399	0	True				
ANR	658572	IdentifierDecl	found		658399	0					
ANR	658573	IdentifierDeclType	bool		658399	0					
ANR	658574	Identifier	found		658399	1					
ANR	658575	IdentifierDeclStatement	"int i = ht_uu_find ( ht , bb -> addr , & found ) ;"	2069:3:68447:68488	658399	1	True				
ANR	658576	IdentifierDecl	"i = ht_uu_find ( ht , bb -> addr , & found )"		658399	0					
ANR	658577	IdentifierDeclType	int		658399	0					
ANR	658578	Identifier	i		658399	1					
ANR	658579	AssignmentExpression	"i = ht_uu_find ( ht , bb -> addr , & found )"		658399	2		=			
ANR	658580	Identifier	i		658399	0					
ANR	658581	CallExpression	"ht_uu_find ( ht , bb -> addr , & found )"		658399	1					
ANR	658582	Callee	ht_uu_find		658399	0					
ANR	658583	Identifier	ht_uu_find		658399	0					
ANR	658584	ArgumentList	ht		658399	1					
ANR	658585	Argument	ht		658399	0					
ANR	658586	Identifier	ht		658399	0					
ANR	658587	Argument	bb -> addr		658399	1					
ANR	658588	PtrMemberAccess	bb -> addr		658399	0					
ANR	658589	Identifier	bb		658399	0					
ANR	658590	Identifier	addr		658399	1					
ANR	658591	Argument	& found		658399	2					
ANR	658592	UnaryOperationExpression	& found		658399	0					
ANR	658593	UnaryOperator	&		658399	0					
ANR	658594	Identifier	found		658399	1					
ANR	658595	IfStatement	if ( found )		658399	2					
ANR	658596	Condition	found	2070:7:68497:68501	658399	0	True				
ANR	658597	Identifier	found		658399	0					
ANR	658598	CompoundStatement		42:4:902:944	658399	1					
ANR	658599	IdentifierDeclStatement	"int i2 = ht_uu_find ( ht , bb -> jump , & found ) ;"	2071:4:68510:68552	658399	0	True				
ANR	658600	IdentifierDecl	"i2 = ht_uu_find ( ht , bb -> jump , & found )"		658399	0					
ANR	658601	IdentifierDeclType	int		658399	0					
ANR	658602	Identifier	i2		658399	1					
ANR	658603	AssignmentExpression	"i2 = ht_uu_find ( ht , bb -> jump , & found )"		658399	2		=			
ANR	658604	Identifier	i2		658399	0					
ANR	658605	CallExpression	"ht_uu_find ( ht , bb -> jump , & found )"		658399	1					
ANR	658606	Callee	ht_uu_find		658399	0					
ANR	658607	Identifier	ht_uu_find		658399	0					
ANR	658608	ArgumentList	ht		658399	1					
ANR	658609	Argument	ht		658399	0					
ANR	658610	Identifier	ht		658399	0					
ANR	658611	Argument	bb -> jump		658399	1					
ANR	658612	PtrMemberAccess	bb -> jump		658399	0					
ANR	658613	Identifier	bb		658399	0					
ANR	658614	Identifier	jump		658399	1					
ANR	658615	Argument	& found		658399	2					
ANR	658616	UnaryOperationExpression	& found		658399	0					
ANR	658617	UnaryOperator	&		658399	0					
ANR	658618	Identifier	found		658399	1					
ANR	658619	IfStatement	if ( found )		658399	1					
ANR	658620	Condition	found	2072:8:68562:68566	658399	0	True				
ANR	658621	Identifier	found		658399	0					
ANR	658622	CompoundStatement		43:15:961:961	658399	1					
ANR	658623	Statement	r_cons_printf	2073:5:68576:68588	658399	0	True				
ANR	658624	Statement	(	2073:19:68590:68590	658399	1	True				
ANR	658625	Statement	"""  edge [\\n"""	2073:20:68591:68602	658399	2	True				
ANR	658626	Statement	"""    source  %d\\n"""	2074:7:68611:68628	658399	3	True				
ANR	658627	Statement	"""    target  %d\\n"""	2075:7:68637:68654	658399	4	True				
ANR	658628	Statement	"""  ]\\n"""	2076:7:68663:68669	658399	5	True				
ANR	658629	Statement	","	2076:14:68670:68670	658399	6	True				
ANR	658630	Statement	i	2076:16:68672:68672	658399	7	True				
ANR	658631	Statement	","	2076:17:68673:68673	658399	8	True				
ANR	658632	Statement	i2	2076:19:68675:68676	658399	9	True				
ANR	658633	Statement	)	2076:21:68677:68677	658399	10	True				
ANR	658634	ExpressionStatement		2076:22:68678:68678	658399	11	True				
ANR	658635	IfStatement	if ( bb -> fail != UT64_MAX )		658399	2					
ANR	658636	Condition	bb -> fail != UT64_MAX	2080:6:68701:68720	658399	0	True				
ANR	658637	EqualityExpression	bb -> fail != UT64_MAX		658399	0		!=			
ANR	658638	PtrMemberAccess	bb -> fail		658399	0					
ANR	658639	Identifier	bb		658399	0					
ANR	658640	Identifier	fail		658399	1					
ANR	658641	Identifier	UT64_MAX		658399	1					
ANR	658642	CompoundStatement		53:3:1135:1176	658399	1					
ANR	658643	IdentifierDeclStatement	bool found ;	2081:3:68728:68738	658399	0	True				
ANR	658644	IdentifierDecl	found		658399	0					
ANR	658645	IdentifierDeclType	bool		658399	0					
ANR	658646	Identifier	found		658399	1					
ANR	658647	IdentifierDeclStatement	"int i = ht_uu_find ( ht , bb -> addr , & found ) ;"	2082:3:68743:68784	658399	1	True				
ANR	658648	IdentifierDecl	"i = ht_uu_find ( ht , bb -> addr , & found )"		658399	0					
ANR	658649	IdentifierDeclType	int		658399	0					
ANR	658650	Identifier	i		658399	1					
ANR	658651	AssignmentExpression	"i = ht_uu_find ( ht , bb -> addr , & found )"		658399	2		=			
ANR	658652	Identifier	i		658399	0					
ANR	658653	CallExpression	"ht_uu_find ( ht , bb -> addr , & found )"		658399	1					
ANR	658654	Callee	ht_uu_find		658399	0					
ANR	658655	Identifier	ht_uu_find		658399	0					
ANR	658656	ArgumentList	ht		658399	1					
ANR	658657	Argument	ht		658399	0					
ANR	658658	Identifier	ht		658399	0					
ANR	658659	Argument	bb -> addr		658399	1					
ANR	658660	PtrMemberAccess	bb -> addr		658399	0					
ANR	658661	Identifier	bb		658399	0					
ANR	658662	Identifier	addr		658399	1					
ANR	658663	Argument	& found		658399	2					
ANR	658664	UnaryOperationExpression	& found		658399	0					
ANR	658665	UnaryOperator	&		658399	0					
ANR	658666	Identifier	found		658399	1					
ANR	658667	IfStatement	if ( found )		658399	2					
ANR	658668	Condition	found	2083:7:68793:68797	658399	0	True				
ANR	658669	Identifier	found		658399	0					
ANR	658670	CompoundStatement		55:4:1198:1240	658399	1					
ANR	658671	IdentifierDeclStatement	"int i2 = ht_uu_find ( ht , bb -> fail , & found ) ;"	2084:4:68806:68848	658399	0	True				
ANR	658672	IdentifierDecl	"i2 = ht_uu_find ( ht , bb -> fail , & found )"		658399	0					
ANR	658673	IdentifierDeclType	int		658399	0					
ANR	658674	Identifier	i2		658399	1					
ANR	658675	AssignmentExpression	"i2 = ht_uu_find ( ht , bb -> fail , & found )"		658399	2		=			
ANR	658676	Identifier	i2		658399	0					
ANR	658677	CallExpression	"ht_uu_find ( ht , bb -> fail , & found )"		658399	1					
ANR	658678	Callee	ht_uu_find		658399	0					
ANR	658679	Identifier	ht_uu_find		658399	0					
ANR	658680	ArgumentList	ht		658399	1					
ANR	658681	Argument	ht		658399	0					
ANR	658682	Identifier	ht		658399	0					
ANR	658683	Argument	bb -> fail		658399	1					
ANR	658684	PtrMemberAccess	bb -> fail		658399	0					
ANR	658685	Identifier	bb		658399	0					
ANR	658686	Identifier	fail		658399	1					
ANR	658687	Argument	& found		658399	2					
ANR	658688	UnaryOperationExpression	& found		658399	0					
ANR	658689	UnaryOperator	&		658399	0					
ANR	658690	Identifier	found		658399	1					
ANR	658691	IfStatement	if ( found )		658399	1					
ANR	658692	Condition	found	2085:8:68858:68862	658399	0	True				
ANR	658693	Identifier	found		658399	0					
ANR	658694	CompoundStatement		56:15:1257:1257	658399	1					
ANR	658695	Statement	r_cons_printf	2086:5:68872:68884	658399	0	True				
ANR	658696	Statement	(	2086:19:68886:68886	658399	1	True				
ANR	658697	Statement	"""  edge [\\n"""	2086:20:68887:68898	658399	2	True				
ANR	658698	Statement	"""    source  %d\\n"""	2087:6:68906:68923	658399	3	True				
ANR	658699	Statement	"""    target  %d\\n"""	2088:6:68931:68948	658399	4	True				
ANR	658700	Statement	"""  ]\\n"""	2089:6:68956:68962	658399	5	True				
ANR	658701	Statement	","	2089:13:68963:68963	658399	6	True				
ANR	658702	Statement	i	2089:15:68965:68965	658399	7	True				
ANR	658703	Statement	","	2089:16:68966:68966	658399	8	True				
ANR	658704	Statement	i2	2089:18:68968:68969	658399	9	True				
ANR	658705	Statement	)	2089:20:68970:68970	658399	10	True				
ANR	658706	ExpressionStatement		2089:21:68971:68971	658399	11	True				
ANR	658707	IfStatement	if ( bb -> switch_op )		658399	3					
ANR	658708	Condition	bb -> switch_op	2093:6:68994:69006	658399	0	True				
ANR	658709	PtrMemberAccess	bb -> switch_op		658399	0					
ANR	658710	Identifier	bb		658399	0					
ANR	658711	Identifier	switch_op		658399	1					
ANR	658712	CompoundStatement		66:3:1424:1440	658399	1					
ANR	658713	IdentifierDeclStatement	RListIter * it ;	2094:3:69014:69027	658399	0	True				
ANR	658714	IdentifierDecl	* it		658399	0					
ANR	658715	IdentifierDeclType	RListIter *		658399	0					
ANR	658716	Identifier	it		658399	1					
ANR	658717	IdentifierDeclStatement	RAnalCaseOp * cop ;	2095:3:69032:69048	658399	1	True				
ANR	658718	IdentifierDecl	* cop		658399	0					
ANR	658719	IdentifierDeclType	RAnalCaseOp *		658399	0					
ANR	658720	Identifier	cop		658399	1					
ANR	658721	Statement	r_list_foreach	2096:3:69053:69066	658399	2	True				
ANR	658722	Statement	(	2096:18:69068:69068	658399	3	True				
ANR	658723	Statement	bb	2096:19:69069:69070	658399	4	True				
ANR	658724	Statement	->	2096:21:69071:69072	658399	5	True				
ANR	658725	Statement	switch_op	2096:23:69073:69081	658399	6	True				
ANR	658726	Statement	->	2096:32:69082:69083	658399	7	True				
ANR	658727	Statement	cases	2096:34:69084:69088	658399	8	True				
ANR	658728	Statement	","	2096:39:69089:69089	658399	9	True				
ANR	658729	Statement	it	2096:41:69091:69092	658399	10	True				
ANR	658730	Statement	","	2096:43:69093:69093	658399	11	True				
ANR	658731	Statement	cop	2096:45:69095:69097	658399	12	True				
ANR	658732	Statement	)	2096:48:69098:69098	658399	13	True				
ANR	658733	CompoundStatement		69:4:1514:1555	658399	14					
ANR	658734	IdentifierDeclStatement	bool found ;	2097:4:69106:69116	658399	0	True				
ANR	658735	IdentifierDecl	found		658399	0					
ANR	658736	IdentifierDeclType	bool		658399	0					
ANR	658737	Identifier	found		658399	1					
ANR	658738	IdentifierDeclStatement	"int i = ht_uu_find ( ht , bb -> addr , & found ) ;"	2098:4:69122:69163	658399	1	True				
ANR	658739	IdentifierDecl	"i = ht_uu_find ( ht , bb -> addr , & found )"		658399	0					
ANR	658740	IdentifierDeclType	int		658399	0					
ANR	658741	Identifier	i		658399	1					
ANR	658742	AssignmentExpression	"i = ht_uu_find ( ht , bb -> addr , & found )"		658399	2		=			
ANR	658743	Identifier	i		658399	0					
ANR	658744	CallExpression	"ht_uu_find ( ht , bb -> addr , & found )"		658399	1					
ANR	658745	Callee	ht_uu_find		658399	0					
ANR	658746	Identifier	ht_uu_find		658399	0					
ANR	658747	ArgumentList	ht		658399	1					
ANR	658748	Argument	ht		658399	0					
ANR	658749	Identifier	ht		658399	0					
ANR	658750	Argument	bb -> addr		658399	1					
ANR	658751	PtrMemberAccess	bb -> addr		658399	0					
ANR	658752	Identifier	bb		658399	0					
ANR	658753	Identifier	addr		658399	1					
ANR	658754	Argument	& found		658399	2					
ANR	658755	UnaryOperationExpression	& found		658399	0					
ANR	658756	UnaryOperator	&		658399	0					
ANR	658757	Identifier	found		658399	1					
ANR	658758	IfStatement	if ( found )		658399	2					
ANR	658759	Condition	found	2099:8:69173:69177	658399	0	True				
ANR	658760	Identifier	found		658399	0					
ANR	658761	CompoundStatement		71:5:1579:1622	658399	1					
ANR	658762	IdentifierDeclStatement	"int i2 = ht_uu_find ( ht , cop -> addr , & found ) ;"	2100:5:69187:69230	658399	0	True				
ANR	658763	IdentifierDecl	"i2 = ht_uu_find ( ht , cop -> addr , & found )"		658399	0					
ANR	658764	IdentifierDeclType	int		658399	0					
ANR	658765	Identifier	i2		658399	1					
ANR	658766	AssignmentExpression	"i2 = ht_uu_find ( ht , cop -> addr , & found )"		658399	2		=			
ANR	658767	Identifier	i2		658399	0					
ANR	658768	CallExpression	"ht_uu_find ( ht , cop -> addr , & found )"		658399	1					
ANR	658769	Callee	ht_uu_find		658399	0					
ANR	658770	Identifier	ht_uu_find		658399	0					
ANR	658771	ArgumentList	ht		658399	1					
ANR	658772	Argument	ht		658399	0					
ANR	658773	Identifier	ht		658399	0					
ANR	658774	Argument	cop -> addr		658399	1					
ANR	658775	PtrMemberAccess	cop -> addr		658399	0					
ANR	658776	Identifier	cop		658399	0					
ANR	658777	Identifier	addr		658399	1					
ANR	658778	Argument	& found		658399	2					
ANR	658779	UnaryOperationExpression	& found		658399	0					
ANR	658780	UnaryOperator	&		658399	0					
ANR	658781	Identifier	found		658399	1					
ANR	658782	IfStatement	if ( found )		658399	1					
ANR	658783	Condition	found	2101:9:69241:69245	658399	0	True				
ANR	658784	Identifier	found		658399	0					
ANR	658785	CompoundStatement		72:16:1640:1640	658399	1					
ANR	658786	Statement	r_cons_printf	2102:6:69256:69268	658399	0	True				
ANR	658787	Statement	(	2102:20:69270:69270	658399	1	True				
ANR	658788	Statement	"""  edge [\\n"""	2102:21:69271:69282	658399	2	True				
ANR	658789	Statement	"""    source  %d\\n"""	2103:8:69292:69309	658399	3	True				
ANR	658790	Statement	"""    target  %d\\n"""	2104:8:69319:69336	658399	4	True				
ANR	658791	Statement	"""  ]\\n"""	2105:8:69346:69352	658399	5	True				
ANR	658792	Statement	","	2105:15:69353:69353	658399	6	True				
ANR	658793	Statement	i	2105:17:69355:69355	658399	7	True				
ANR	658794	Statement	","	2105:18:69356:69356	658399	8	True				
ANR	658795	Statement	i2	2105:20:69358:69359	658399	9	True				
ANR	658796	Statement	)	2105:22:69360:69360	658399	10	True				
ANR	658797	ExpressionStatement		2105:23:69361:69361	658399	11	True				
ANR	658798	ExpressionStatement	"r_cons_printf ( ""]\\n"" )"	2138:1:69995:70016	658399	36	True				
ANR	658799	CallExpression	"r_cons_printf ( ""]\\n"" )"		658399	0					
ANR	658800	Callee	r_cons_printf		658399	0					
ANR	658801	Identifier	r_cons_printf		658399	0					
ANR	658802	ArgumentList	"""]\\n"""		658399	1					
ANR	658803	Argument	"""]\\n"""		658399	0					
ANR	658804	PrimaryExpression	"""]\\n"""		658399	0					
ANR	658805	ExpressionStatement	ht_uu_free ( ht )	2139:1:70019:70034	658399	37	True				
ANR	658806	CallExpression	ht_uu_free ( ht )		658399	0					
ANR	658807	Callee	ht_uu_free		658399	0					
ANR	658808	Identifier	ht_uu_free		658399	0					
ANR	658809	ArgumentList	ht		658399	1					
ANR	658810	Argument	ht		658399	0					
ANR	658811	Identifier	ht		658399	0					
ANR	658812	ReturnStatement	return true ;	2140:1:70037:70048	658399	38	True				
ANR	658813	Identifier	true		658399	0					
ANR	658814	ReturnType	R_API int		658399	1					
ANR	658815	Identifier	r_core_print_bb_gml		658399	2					
ANR	658816	ParameterList	"RCore * core , RAnalFunction * fcn"		658399	3					
ANR	658817	Parameter	RCore * core	2030:30:67574:67584	658399	0	True				
ANR	658818	ParameterType	RCore *		658399	0					
ANR	658819	Identifier	core		658399	1					
ANR	658820	Parameter	RAnalFunction * fcn	2030:43:67587:67604	658399	1	True				
ANR	658821	ParameterType	RAnalFunction *		658399	0					
ANR	658822	Identifier	fcn		658399	1					
ANR	658823	CFGEntryNode	ENTRY		658399		True				
ANR	658824	CFGExitNode	EXIT		658399		True				
ANR	658825	CFGErrorNode	ERROR		658399		True				
ANR	658826	Symbol	bb		658399						
ANR	658827	Symbol	msg		658399						
ANR	658828	Symbol	flag		658399						
ANR	658829	Symbol	cop		658399						
ANR	658830	Symbol	* core		658399						
ANR	658831	Symbol	bb -> addr		658399						
ANR	658832	Symbol	ht		658399						
ANR	658833	Symbol	fcn		658399						
ANR	658834	Symbol	& found		658399						
ANR	658835	Symbol	* cop		658399						
ANR	658836	Symbol	found		658399						
ANR	658837	Symbol	id		658399						
ANR	658838	Symbol	UT64_MAX		658399						
ANR	658839	Symbol	r_flag_get_i		658399						
ANR	658840	Symbol	& opt		658399						
ANR	658841	Symbol	bb -> fail		658399						
ANR	658842	Symbol	* bb		658399						
ANR	658843	Symbol	false		658399						
ANR	658844	Symbol	iter		658399						
ANR	658845	Symbol	i		658399						
ANR	658846	Symbol	i2		658399						
ANR	658847	Symbol	core -> flags		658399						
ANR	658848	Symbol	it		658399						
ANR	658849	Symbol	cop -> addr		658399						
ANR	658850	Symbol	core		658399						
ANR	658851	Symbol	opt		658399						
ANR	658852	Symbol	bb -> jump		658399						
ANR	658853	Symbol	ht_uu_new_opt		658399						
ANR	658854	Symbol	ht_uu_find		658399						
ANR	658855	Symbol	true		658399						
ANR	658856	Symbol	bb -> switch_op		658399						
ANR	658857	Function	r_core_anal_datarefs	2143:0:70053:70926							
ANR	658858	FunctionDef	"r_core_anal_datarefs (RCore * core , ut64 addr)"		658857	0					
ANR	658859	CompoundStatement		2143:56:70109:70926	658857	0					
ANR	658860	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , addr , - 1 ) ;"	2144:1:70112:70173	658857	0	True				
ANR	658861	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , addr , - 1 )"		658857	0					
ANR	658862	IdentifierDeclType	RAnalFunction *		658857	0					
ANR	658863	Identifier	fcn		658857	1					
ANR	658864	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , addr , - 1 )"		658857	2		=			
ANR	658865	Identifier	fcn		658857	0					
ANR	658866	CallExpression	"r_anal_get_fcn_in ( core -> anal , addr , - 1 )"		658857	1					
ANR	658867	Callee	r_anal_get_fcn_in		658857	0					
ANR	658868	Identifier	r_anal_get_fcn_in		658857	0					
ANR	658869	ArgumentList	core -> anal		658857	1					
ANR	658870	Argument	core -> anal		658857	0					
ANR	658871	PtrMemberAccess	core -> anal		658857	0					
ANR	658872	Identifier	core		658857	0					
ANR	658873	Identifier	anal		658857	1					
ANR	658874	Argument	addr		658857	1					
ANR	658875	Identifier	addr		658857	0					
ANR	658876	Argument	- 1		658857	2					
ANR	658877	UnaryOperationExpression	- 1		658857	0					
ANR	658878	UnaryOperator	-		658857	0					
ANR	658879	PrimaryExpression	1		658857	1					
ANR	658880	IfStatement	if ( fcn )		658857	1					
ANR	658881	Condition	fcn	2145:5:70180:70182	658857	0	True				
ANR	658882	Identifier	fcn		658857	0					
ANR	658883	CompoundStatement		8:2:167:218	658857	1					
ANR	658884	IdentifierDeclStatement	bool found = false ;	2146:2:70189:70207	658857	0	True				
ANR	658885	IdentifierDecl	found = false		658857	0					
ANR	658886	IdentifierDeclType	bool		658857	0					
ANR	658887	Identifier	found		658857	1					
ANR	658888	AssignmentExpression	found = false		658857	2		=			
ANR	658889	Identifier	false		658857	0					
ANR	658890	Identifier	false		658857	1					
ANR	658891	IdentifierDeclStatement	const char * me = fcn -> name ;	2147:2:70211:70237	658857	1	True				
ANR	658892	IdentifierDecl	* me = fcn -> name		658857	0					
ANR	658893	IdentifierDeclType	const char *		658857	0					
ANR	658894	Identifier	me		658857	1					
ANR	658895	AssignmentExpression	* me = fcn -> name		658857	2		=			
ANR	658896	Identifier	me		658857	0					
ANR	658897	PtrMemberAccess	fcn -> name		658857	1					
ANR	658898	Identifier	fcn		658857	0					
ANR	658899	Identifier	name		658857	1					
ANR	658900	IdentifierDeclStatement	RListIter * iter ;	2148:2:70241:70256	658857	2	True				
ANR	658901	IdentifierDecl	* iter		658857	0					
ANR	658902	IdentifierDeclType	RListIter *		658857	0					
ANR	658903	Identifier	iter		658857	1					
ANR	658904	IdentifierDeclStatement	RAnalRef * ref ;	2149:2:70260:70273	658857	3	True				
ANR	658905	IdentifierDecl	* ref		658857	0					
ANR	658906	IdentifierDeclType	RAnalRef *		658857	0					
ANR	658907	Identifier	ref		658857	1					
ANR	658908	IdentifierDeclStatement	"RList * refs = r_anal_fcn_get_refs ( core -> anal , fcn ) ;"	2150:2:70277:70328	658857	4	True				
ANR	658909	IdentifierDecl	"* refs = r_anal_fcn_get_refs ( core -> anal , fcn )"		658857	0					
ANR	658910	IdentifierDeclType	RList *		658857	0					
ANR	658911	Identifier	refs		658857	1					
ANR	658912	AssignmentExpression	"* refs = r_anal_fcn_get_refs ( core -> anal , fcn )"		658857	2		=			
ANR	658913	Identifier	refs		658857	0					
ANR	658914	CallExpression	"r_anal_fcn_get_refs ( core -> anal , fcn )"		658857	1					
ANR	658915	Callee	r_anal_fcn_get_refs		658857	0					
ANR	658916	Identifier	r_anal_fcn_get_refs		658857	0					
ANR	658917	ArgumentList	core -> anal		658857	1					
ANR	658918	Argument	core -> anal		658857	0					
ANR	658919	PtrMemberAccess	core -> anal		658857	0					
ANR	658920	Identifier	core		658857	0					
ANR	658921	Identifier	anal		658857	1					
ANR	658922	Argument	fcn		658857	1					
ANR	658923	Identifier	fcn		658857	0					
ANR	658924	Statement	r_list_foreach	2151:2:70332:70345	658857	5	True				
ANR	658925	Statement	(	2151:17:70347:70347	658857	6	True				
ANR	658926	Statement	refs	2151:18:70348:70351	658857	7	True				
ANR	658927	Statement	","	2151:22:70352:70352	658857	8	True				
ANR	658928	Statement	iter	2151:24:70354:70357	658857	9	True				
ANR	658929	Statement	","	2151:28:70358:70358	658857	10	True				
ANR	658930	Statement	ref	2151:30:70360:70362	658857	11	True				
ANR	658931	Statement	)	2151:33:70363:70363	658857	12	True				
ANR	658932	CompoundStatement		11:3:311:376	658857	13					
ANR	658933	IdentifierDeclStatement	RBinObject * obj = r_bin_cur_object ( core -> bin ) ;	2152:3:70370:70416	658857	0	True				
ANR	658934	IdentifierDecl	* obj = r_bin_cur_object ( core -> bin )		658857	0					
ANR	658935	IdentifierDeclType	RBinObject *		658857	0					
ANR	658936	Identifier	obj		658857	1					
ANR	658937	AssignmentExpression	* obj = r_bin_cur_object ( core -> bin )		658857	2		=			
ANR	658938	Identifier	obj		658857	0					
ANR	658939	CallExpression	r_bin_cur_object ( core -> bin )		658857	1					
ANR	658940	Callee	r_bin_cur_object		658857	0					
ANR	658941	Identifier	r_bin_cur_object		658857	0					
ANR	658942	ArgumentList	core -> bin		658857	1					
ANR	658943	Argument	core -> bin		658857	0					
ANR	658944	PtrMemberAccess	core -> bin		658857	0					
ANR	658945	Identifier	core		658857	0					
ANR	658946	Identifier	bin		658857	1					
ANR	658947	IdentifierDeclStatement	"RBinSection * binsec = r_bin_get_section_at ( obj , ref -> addr , true ) ;"	2153:3:70421:70486	658857	1	True				
ANR	658948	IdentifierDecl	"* binsec = r_bin_get_section_at ( obj , ref -> addr , true )"		658857	0					
ANR	658949	IdentifierDeclType	RBinSection *		658857	0					
ANR	658950	Identifier	binsec		658857	1					
ANR	658951	AssignmentExpression	"* binsec = r_bin_get_section_at ( obj , ref -> addr , true )"		658857	2		=			
ANR	658952	Identifier	binsec		658857	0					
ANR	658953	CallExpression	"r_bin_get_section_at ( obj , ref -> addr , true )"		658857	1					
ANR	658954	Callee	r_bin_get_section_at		658857	0					
ANR	658955	Identifier	r_bin_get_section_at		658857	0					
ANR	658956	ArgumentList	obj		658857	1					
ANR	658957	Argument	obj		658857	0					
ANR	658958	Identifier	obj		658857	0					
ANR	658959	Argument	ref -> addr		658857	1					
ANR	658960	PtrMemberAccess	ref -> addr		658857	0					
ANR	658961	Identifier	ref		658857	0					
ANR	658962	Identifier	addr		658857	1					
ANR	658963	Argument	true		658857	2					
ANR	658964	Identifier	true		658857	0					
ANR	658965	IfStatement	if ( binsec && binsec -> is_data )		658857	2					
ANR	658966	Condition	binsec && binsec -> is_data	2154:7:70495:70519	658857	0	True				
ANR	658967	AndExpression	binsec && binsec -> is_data		658857	0		&&			
ANR	658968	Identifier	binsec		658857	0					
ANR	658969	PtrMemberAccess	binsec -> is_data		658857	1					
ANR	658970	Identifier	binsec		658857	0					
ANR	658971	Identifier	is_data		658857	1					
ANR	658972	CompoundStatement		17:4:498:553	658857	1					
ANR	658973	IfStatement	if ( ! found )		658857	0					
ANR	658974	Condition	! found	2155:8:70532:70537	658857	0	True				
ANR	658975	UnaryOperationExpression	! found		658857	0					
ANR	658976	UnaryOperator	!		658857	0					
ANR	658977	Identifier	found		658857	1					
ANR	658978	CompoundStatement		13:16:430:430	658857	1					
ANR	658979	ExpressionStatement	"r_cons_printf ( ""agn %s\\n"" , me )"	2156:5:70547:70577	658857	0	True				
ANR	658980	CallExpression	"r_cons_printf ( ""agn %s\\n"" , me )"		658857	0					
ANR	658981	Callee	r_cons_printf		658857	0					
ANR	658982	Identifier	r_cons_printf		658857	0					
ANR	658983	ArgumentList	"""agn %s\\n"""		658857	1					
ANR	658984	Argument	"""agn %s\\n"""		658857	0					
ANR	658985	PrimaryExpression	"""agn %s\\n"""		658857	0					
ANR	658986	Argument	me		658857	1					
ANR	658987	Identifier	me		658857	0					
ANR	658988	ExpressionStatement	found = true	2157:5:70584:70596	658857	1	True				
ANR	658989	AssignmentExpression	found = true		658857	0		=			
ANR	658990	Identifier	found		658857	0					
ANR	658991	Identifier	true		658857	1					
ANR	658992	IdentifierDeclStatement	"RFlagItem * item = r_flag_get_i ( core -> flags , ref -> addr ) ;"	2159:4:70608:70663	658857	1	True				
ANR	658993	IdentifierDecl	"* item = r_flag_get_i ( core -> flags , ref -> addr )"		658857	0					
ANR	658994	IdentifierDeclType	RFlagItem *		658857	0					
ANR	658995	Identifier	item		658857	1					
ANR	658996	AssignmentExpression	"* item = r_flag_get_i ( core -> flags , ref -> addr )"		658857	2		=			
ANR	658997	Identifier	item		658857	0					
ANR	658998	CallExpression	"r_flag_get_i ( core -> flags , ref -> addr )"		658857	1					
ANR	658999	Callee	r_flag_get_i		658857	0					
ANR	659000	Identifier	r_flag_get_i		658857	0					
ANR	659001	ArgumentList	core -> flags		658857	1					
ANR	659002	Argument	core -> flags		658857	0					
ANR	659003	PtrMemberAccess	core -> flags		658857	0					
ANR	659004	Identifier	core		658857	0					
ANR	659005	Identifier	flags		658857	1					
ANR	659006	Argument	ref -> addr		658857	1					
ANR	659007	PtrMemberAccess	ref -> addr		658857	0					
ANR	659008	Identifier	ref		658857	0					
ANR	659009	Identifier	addr		658857	1					
ANR	659010	Statement	const	2160:4:70669:70673	658857	2	True				
ANR	659011	Statement	char	2160:10:70675:70678	658857	3	True				
ANR	659012	Statement	*	2160:15:70680:70680	658857	4	True				
ANR	659013	Statement	dst	2160:16:70681:70683	658857	5	True				
ANR	659014	Statement	=	2160:20:70685:70685	658857	6	True				
ANR	659015	Statement	item	2160:22:70687:70690	658857	7	True				
ANR	659016	Statement	?	2160:26:70691:70691	658857	8	True				
ANR	659017	Statement	item	2160:28:70693:70696	658857	9	True				
ANR	659018	Statement	->	2160:32:70697:70698	658857	10	True				
ANR	659019	Label	name :	2160:34:70699:70703	658857	11	True				
ANR	659020	Identifier	name		658857	0					
ANR	659021	Statement	sdb_fmt	2160:40:70705:70711	658857	12	True				
ANR	659022	Statement	(	2160:48:70713:70713	658857	13	True				
ANR	659023	Statement	"""0x%08"""	2160:49:70714:70720	658857	14	True				
ANR	659024	Statement	PFMT64x	2160:56:70721:70727	658857	15	True				
ANR	659025	Statement	","	2160:63:70728:70728	658857	16	True				
ANR	659026	Statement	ref	2160:65:70730:70732	658857	17	True				
ANR	659027	Statement	->	2160:68:70733:70734	658857	18	True				
ANR	659028	Statement	addr	2160:70:70735:70738	658857	19	True				
ANR	659029	Statement	)	2160:74:70739:70739	658857	20	True				
ANR	659030	ExpressionStatement		2160:75:70740:70740	658857	21	True				
ANR	659031	ExpressionStatement	"r_cons_printf ( ""agn %s\\n"" , dst )"	2161:4:70746:70777	658857	22	True				
ANR	659032	CallExpression	"r_cons_printf ( ""agn %s\\n"" , dst )"		658857	0					
ANR	659033	Callee	r_cons_printf		658857	0					
ANR	659034	Identifier	r_cons_printf		658857	0					
ANR	659035	ArgumentList	"""agn %s\\n"""		658857	1					
ANR	659036	Argument	"""agn %s\\n"""		658857	0					
ANR	659037	PrimaryExpression	"""agn %s\\n"""		658857	0					
ANR	659038	Argument	dst		658857	1					
ANR	659039	Identifier	dst		658857	0					
ANR	659040	ExpressionStatement	"r_cons_printf ( ""age %s %s\\n"" , me , dst )"	2162:4:70783:70821	658857	23	True				
ANR	659041	CallExpression	"r_cons_printf ( ""age %s %s\\n"" , me , dst )"		658857	0					
ANR	659042	Callee	r_cons_printf		658857	0					
ANR	659043	Identifier	r_cons_printf		658857	0					
ANR	659044	ArgumentList	"""age %s %s\\n"""		658857	1					
ANR	659045	Argument	"""age %s %s\\n"""		658857	0					
ANR	659046	PrimaryExpression	"""age %s %s\\n"""		658857	0					
ANR	659047	Argument	me		658857	1					
ANR	659048	Identifier	me		658857	0					
ANR	659049	Argument	dst		658857	2					
ANR	659050	Identifier	dst		658857	0					
ANR	659051	ExpressionStatement	r_list_free ( refs )	2165:2:70834:70852	658857	14	True				
ANR	659052	CallExpression	r_list_free ( refs )		658857	0					
ANR	659053	Callee	r_list_free		658857	0					
ANR	659054	Identifier	r_list_free		658857	0					
ANR	659055	ArgumentList	refs		658857	1					
ANR	659056	Argument	refs		658857	0					
ANR	659057	Identifier	refs		658857	0					
ANR	659058	ElseStatement	else		658857	0					
ANR	659059	CompoundStatement		24:8:752:752	658857	0					
ANR	659060	ExpressionStatement	"eprintf ( ""Not in a function. Use 'df' to define it.\\n"" )"	2167:2:70866:70921	658857	0	True				
ANR	659061	CallExpression	"eprintf ( ""Not in a function. Use 'df' to define it.\\n"" )"		658857	0					
ANR	659062	Callee	eprintf		658857	0					
ANR	659063	Identifier	eprintf		658857	0					
ANR	659064	ArgumentList	"""Not in a function. Use 'df' to define it.\\n"""		658857	1					
ANR	659065	Argument	"""Not in a function. Use 'df' to define it.\\n"""		658857	0					
ANR	659066	PrimaryExpression	"""Not in a function. Use 'df' to define it.\\n"""		658857	0					
ANR	659067	ReturnType	R_API void		658857	1					
ANR	659068	Identifier	r_core_anal_datarefs		658857	2					
ANR	659069	ParameterList	"RCore * core , ut64 addr"		658857	3					
ANR	659070	Parameter	RCore * core	2143:32:70085:70095	658857	0	True				
ANR	659071	ParameterType	RCore *		658857	0					
ANR	659072	Identifier	core		658857	1					
ANR	659073	Parameter	ut64 addr	2143:45:70098:70106	658857	1	True				
ANR	659074	ParameterType	ut64		658857	0					
ANR	659075	Identifier	addr		658857	1					
ANR	659076	CFGEntryNode	ENTRY		658857		True				
ANR	659077	CFGExitNode	EXIT		658857		True				
ANR	659078	Symbol	ref -> addr		658857						
ANR	659079	Symbol	* fcn		658857						
ANR	659080	Symbol	dst		658857						
ANR	659081	Symbol	fcn -> name		658857						
ANR	659082	Symbol	* core		658857						
ANR	659083	Symbol	core -> anal		658857						
ANR	659084	Symbol	* binsec		658857						
ANR	659085	Symbol	fcn		658857						
ANR	659086	Symbol	ref		658857						
ANR	659087	Symbol	found		658857						
ANR	659088	Symbol	binsec -> is_data		658857						
ANR	659089	Symbol	me		658857						
ANR	659090	Symbol	addr		658857						
ANR	659091	Symbol	binsec		658857						
ANR	659092	Symbol	core -> bin		658857						
ANR	659093	Symbol	r_flag_get_i		658857						
ANR	659094	Symbol	r_bin_cur_object		658857						
ANR	659095	Symbol	item		658857						
ANR	659096	Symbol	false		658857						
ANR	659097	Symbol	iter		658857						
ANR	659098	Symbol	core -> flags		658857						
ANR	659099	Symbol	r_bin_get_section_at		658857						
ANR	659100	Symbol	r_anal_fcn_get_refs		658857						
ANR	659101	Symbol	core		658857						
ANR	659102	Symbol	r_anal_get_fcn_in		658857						
ANR	659103	Symbol	refs		658857						
ANR	659104	Symbol	obj		658857						
ANR	659105	Symbol	true		658857						
ANR	659106	Symbol	* ref		658857						
ANR	659107	Function	r_core_anal_coderefs	2171:0:70929:71567							
ANR	659108	FunctionDef	"r_core_anal_coderefs (RCore * core , ut64 addr)"		659107	0					
ANR	659109	CompoundStatement		2171:56:70985:71567	659107	0					
ANR	659110	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , addr , - 1 ) ;"	2172:1:70988:71049	659107	0	True				
ANR	659111	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , addr , - 1 )"		659107	0					
ANR	659112	IdentifierDeclType	RAnalFunction *		659107	0					
ANR	659113	Identifier	fcn		659107	1					
ANR	659114	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , addr , - 1 )"		659107	2		=			
ANR	659115	Identifier	fcn		659107	0					
ANR	659116	CallExpression	"r_anal_get_fcn_in ( core -> anal , addr , - 1 )"		659107	1					
ANR	659117	Callee	r_anal_get_fcn_in		659107	0					
ANR	659118	Identifier	r_anal_get_fcn_in		659107	0					
ANR	659119	ArgumentList	core -> anal		659107	1					
ANR	659120	Argument	core -> anal		659107	0					
ANR	659121	PtrMemberAccess	core -> anal		659107	0					
ANR	659122	Identifier	core		659107	0					
ANR	659123	Identifier	anal		659107	1					
ANR	659124	Argument	addr		659107	1					
ANR	659125	Identifier	addr		659107	0					
ANR	659126	Argument	- 1		659107	2					
ANR	659127	UnaryOperationExpression	- 1		659107	0					
ANR	659128	UnaryOperator	-		659107	0					
ANR	659129	PrimaryExpression	1		659107	1					
ANR	659130	IfStatement	if ( fcn )		659107	1					
ANR	659131	Condition	fcn	2173:5:71056:71058	659107	0	True				
ANR	659132	Identifier	fcn		659107	0					
ANR	659133	CompoundStatement		7:2:145:196	659107	1					
ANR	659134	IdentifierDeclStatement	const char * me = fcn -> name ;	2174:2:71065:71091	659107	0	True				
ANR	659135	IdentifierDecl	* me = fcn -> name		659107	0					
ANR	659136	IdentifierDeclType	const char *		659107	0					
ANR	659137	Identifier	me		659107	1					
ANR	659138	AssignmentExpression	* me = fcn -> name		659107	2		=			
ANR	659139	Identifier	me		659107	0					
ANR	659140	PtrMemberAccess	fcn -> name		659107	1					
ANR	659141	Identifier	fcn		659107	0					
ANR	659142	Identifier	name		659107	1					
ANR	659143	IdentifierDeclStatement	RListIter * iter ;	2175:2:71095:71110	659107	1	True				
ANR	659144	IdentifierDecl	* iter		659107	0					
ANR	659145	IdentifierDeclType	RListIter *		659107	0					
ANR	659146	Identifier	iter		659107	1					
ANR	659147	IdentifierDeclStatement	RAnalRef * ref ;	2176:2:71114:71127	659107	2	True				
ANR	659148	IdentifierDecl	* ref		659107	0					
ANR	659149	IdentifierDeclType	RAnalRef *		659107	0					
ANR	659150	Identifier	ref		659107	1					
ANR	659151	IdentifierDeclStatement	"RList * refs = r_anal_fcn_get_refs ( core -> anal , fcn ) ;"	2177:2:71131:71182	659107	3	True				
ANR	659152	IdentifierDecl	"* refs = r_anal_fcn_get_refs ( core -> anal , fcn )"		659107	0					
ANR	659153	IdentifierDeclType	RList *		659107	0					
ANR	659154	Identifier	refs		659107	1					
ANR	659155	AssignmentExpression	"* refs = r_anal_fcn_get_refs ( core -> anal , fcn )"		659107	2		=			
ANR	659156	Identifier	refs		659107	0					
ANR	659157	CallExpression	"r_anal_fcn_get_refs ( core -> anal , fcn )"		659107	1					
ANR	659158	Callee	r_anal_fcn_get_refs		659107	0					
ANR	659159	Identifier	r_anal_fcn_get_refs		659107	0					
ANR	659160	ArgumentList	core -> anal		659107	1					
ANR	659161	Argument	core -> anal		659107	0					
ANR	659162	PtrMemberAccess	core -> anal		659107	0					
ANR	659163	Identifier	core		659107	0					
ANR	659164	Identifier	anal		659107	1					
ANR	659165	Argument	fcn		659107	1					
ANR	659166	Identifier	fcn		659107	0					
ANR	659167	ExpressionStatement	"r_cons_printf ( ""agn %s\\n"" , me )"	2178:2:71186:71216	659107	4	True				
ANR	659168	CallExpression	"r_cons_printf ( ""agn %s\\n"" , me )"		659107	0					
ANR	659169	Callee	r_cons_printf		659107	0					
ANR	659170	Identifier	r_cons_printf		659107	0					
ANR	659171	ArgumentList	"""agn %s\\n"""		659107	1					
ANR	659172	Argument	"""agn %s\\n"""		659107	0					
ANR	659173	PrimaryExpression	"""agn %s\\n"""		659107	0					
ANR	659174	Argument	me		659107	1					
ANR	659175	Identifier	me		659107	0					
ANR	659176	Statement	r_list_foreach	2179:2:71220:71233	659107	5	True				
ANR	659177	Statement	(	2179:17:71235:71235	659107	6	True				
ANR	659178	Statement	refs	2179:18:71236:71239	659107	7	True				
ANR	659179	Statement	","	2179:22:71240:71240	659107	8	True				
ANR	659180	Statement	iter	2179:24:71242:71245	659107	9	True				
ANR	659181	Statement	","	2179:28:71246:71246	659107	10	True				
ANR	659182	Statement	ref	2179:30:71248:71250	659107	11	True				
ANR	659183	Statement	)	2179:33:71251:71251	659107	12	True				
ANR	659184	CompoundStatement		10:3:272:327	659107	13					
ANR	659185	IdentifierDeclStatement	"RFlagItem * item = r_flag_get_i ( core -> flags , ref -> addr ) ;"	2180:3:71258:71313	659107	0	True				
ANR	659186	IdentifierDecl	"* item = r_flag_get_i ( core -> flags , ref -> addr )"		659107	0					
ANR	659187	IdentifierDeclType	RFlagItem *		659107	0					
ANR	659188	Identifier	item		659107	1					
ANR	659189	AssignmentExpression	"* item = r_flag_get_i ( core -> flags , ref -> addr )"		659107	2		=			
ANR	659190	Identifier	item		659107	0					
ANR	659191	CallExpression	"r_flag_get_i ( core -> flags , ref -> addr )"		659107	1					
ANR	659192	Callee	r_flag_get_i		659107	0					
ANR	659193	Identifier	r_flag_get_i		659107	0					
ANR	659194	ArgumentList	core -> flags		659107	1					
ANR	659195	Argument	core -> flags		659107	0					
ANR	659196	PtrMemberAccess	core -> flags		659107	0					
ANR	659197	Identifier	core		659107	0					
ANR	659198	Identifier	flags		659107	1					
ANR	659199	Argument	ref -> addr		659107	1					
ANR	659200	PtrMemberAccess	ref -> addr		659107	0					
ANR	659201	Identifier	ref		659107	0					
ANR	659202	Identifier	addr		659107	1					
ANR	659203	Statement	const	2181:3:71318:71322	659107	1	True				
ANR	659204	Statement	char	2181:9:71324:71327	659107	2	True				
ANR	659205	Statement	*	2181:14:71329:71329	659107	3	True				
ANR	659206	Statement	dst	2181:15:71330:71332	659107	4	True				
ANR	659207	Statement	=	2181:19:71334:71334	659107	5	True				
ANR	659208	Statement	item	2181:21:71336:71339	659107	6	True				
ANR	659209	Statement	?	2181:25:71340:71340	659107	7	True				
ANR	659210	Statement	item	2181:27:71342:71345	659107	8	True				
ANR	659211	Statement	->	2181:31:71346:71347	659107	9	True				
ANR	659212	Label	name :	2181:33:71348:71352	659107	10	True				
ANR	659213	Identifier	name		659107	0					
ANR	659214	Statement	sdb_fmt	2181:39:71354:71360	659107	11	True				
ANR	659215	Statement	(	2181:47:71362:71362	659107	12	True				
ANR	659216	Statement	"""0x%08"""	2181:48:71363:71369	659107	13	True				
ANR	659217	Statement	PFMT64x	2181:55:71370:71376	659107	14	True				
ANR	659218	Statement	","	2181:62:71377:71377	659107	15	True				
ANR	659219	Statement	ref	2181:64:71379:71381	659107	16	True				
ANR	659220	Statement	->	2181:67:71382:71383	659107	17	True				
ANR	659221	Statement	addr	2181:69:71384:71387	659107	18	True				
ANR	659222	Statement	)	2181:73:71388:71388	659107	19	True				
ANR	659223	ExpressionStatement		2181:74:71389:71389	659107	20	True				
ANR	659224	ExpressionStatement	"r_cons_printf ( ""agn %s\\n"" , dst )"	2182:3:71394:71425	659107	21	True				
ANR	659225	CallExpression	"r_cons_printf ( ""agn %s\\n"" , dst )"		659107	0					
ANR	659226	Callee	r_cons_printf		659107	0					
ANR	659227	Identifier	r_cons_printf		659107	0					
ANR	659228	ArgumentList	"""agn %s\\n"""		659107	1					
ANR	659229	Argument	"""agn %s\\n"""		659107	0					
ANR	659230	PrimaryExpression	"""agn %s\\n"""		659107	0					
ANR	659231	Argument	dst		659107	1					
ANR	659232	Identifier	dst		659107	0					
ANR	659233	ExpressionStatement	"r_cons_printf ( ""age %s %s\\n"" , me , dst )"	2183:3:71430:71468	659107	22	True				
ANR	659234	CallExpression	"r_cons_printf ( ""age %s %s\\n"" , me , dst )"		659107	0					
ANR	659235	Callee	r_cons_printf		659107	0					
ANR	659236	Identifier	r_cons_printf		659107	0					
ANR	659237	ArgumentList	"""age %s %s\\n"""		659107	1					
ANR	659238	Argument	"""age %s %s\\n"""		659107	0					
ANR	659239	PrimaryExpression	"""age %s %s\\n"""		659107	0					
ANR	659240	Argument	me		659107	1					
ANR	659241	Identifier	me		659107	0					
ANR	659242	Argument	dst		659107	2					
ANR	659243	Identifier	dst		659107	0					
ANR	659244	ExpressionStatement	r_list_free ( refs )	2185:2:71476:71494	659107	14	True				
ANR	659245	CallExpression	r_list_free ( refs )		659107	0					
ANR	659246	Callee	r_list_free		659107	0					
ANR	659247	Identifier	r_list_free		659107	0					
ANR	659248	ArgumentList	refs		659107	1					
ANR	659249	Argument	refs		659107	0					
ANR	659250	Identifier	refs		659107	0					
ANR	659251	ElseStatement	else		659107	0					
ANR	659252	CompoundStatement		16:8:518:518	659107	0					
ANR	659253	ExpressionStatement	"eprintf ( ""Not in a function. Use 'df' to define it.\\n"" )"	2187:2:71508:71562	659107	0	True				
ANR	659254	CallExpression	"eprintf ( ""Not in a function. Use 'df' to define it.\\n"" )"		659107	0					
ANR	659255	Callee	eprintf		659107	0					
ANR	659256	Identifier	eprintf		659107	0					
ANR	659257	ArgumentList	"""Not in a function. Use 'df' to define it.\\n"""		659107	1					
ANR	659258	Argument	"""Not in a function. Use 'df' to define it.\\n"""		659107	0					
ANR	659259	PrimaryExpression	"""Not in a function. Use 'df' to define it.\\n"""		659107	0					
ANR	659260	ReturnType	R_API void		659107	1					
ANR	659261	Identifier	r_core_anal_coderefs		659107	2					
ANR	659262	ParameterList	"RCore * core , ut64 addr"		659107	3					
ANR	659263	Parameter	RCore * core	2171:32:70961:70971	659107	0	True				
ANR	659264	ParameterType	RCore *		659107	0					
ANR	659265	Identifier	core		659107	1					
ANR	659266	Parameter	ut64 addr	2171:45:70974:70982	659107	1	True				
ANR	659267	ParameterType	ut64		659107	0					
ANR	659268	Identifier	addr		659107	1					
ANR	659269	CFGEntryNode	ENTRY		659107		True				
ANR	659270	CFGExitNode	EXIT		659107		True				
ANR	659271	Symbol	item		659107						
ANR	659272	Symbol	ref -> addr		659107						
ANR	659273	Symbol	* fcn		659107						
ANR	659274	Symbol	dst		659107						
ANR	659275	Symbol	fcn -> name		659107						
ANR	659276	Symbol	* core		659107						
ANR	659277	Symbol	iter		659107						
ANR	659278	Symbol	core -> flags		659107						
ANR	659279	Symbol	core -> anal		659107						
ANR	659280	Symbol	r_anal_fcn_get_refs		659107						
ANR	659281	Symbol	fcn		659107						
ANR	659282	Symbol	core		659107						
ANR	659283	Symbol	ref		659107						
ANR	659284	Symbol	r_anal_get_fcn_in		659107						
ANR	659285	Symbol	refs		659107						
ANR	659286	Symbol	me		659107						
ANR	659287	Symbol	addr		659107						
ANR	659288	Symbol	* ref		659107						
ANR	659289	Symbol	r_flag_get_i		659107						
ANR	659290	Function	r_core_anal_importxrefs	2191:0:71570:72089							
ANR	659291	FunctionDef	r_core_anal_importxrefs (RCore * core)		659290	0					
ANR	659292	CompoundStatement		2191:48:71618:72089	659290	0					
ANR	659293	IdentifierDeclStatement	RBinInfo * info = r_bin_get_info ( core -> bin ) ;	2192:1:71621:71664	659290	0	True				
ANR	659294	IdentifierDecl	* info = r_bin_get_info ( core -> bin )		659290	0					
ANR	659295	IdentifierDeclType	RBinInfo *		659290	0					
ANR	659296	Identifier	info		659290	1					
ANR	659297	AssignmentExpression	* info = r_bin_get_info ( core -> bin )		659290	2		=			
ANR	659298	Identifier	info		659290	0					
ANR	659299	CallExpression	r_bin_get_info ( core -> bin )		659290	1					
ANR	659300	Callee	r_bin_get_info		659290	0					
ANR	659301	Identifier	r_bin_get_info		659290	0					
ANR	659302	ArgumentList	core -> bin		659290	1					
ANR	659303	Argument	core -> bin		659290	0					
ANR	659304	PtrMemberAccess	core -> bin		659290	0					
ANR	659305	Identifier	core		659290	0					
ANR	659306	Identifier	bin		659290	1					
ANR	659307	IdentifierDeclStatement	RBinObject * obj = r_bin_cur_object ( core -> bin ) ;	2193:1:71667:71713	659290	1	True				
ANR	659308	IdentifierDecl	* obj = r_bin_cur_object ( core -> bin )		659290	0					
ANR	659309	IdentifierDeclType	RBinObject *		659290	0					
ANR	659310	Identifier	obj		659290	1					
ANR	659311	AssignmentExpression	* obj = r_bin_cur_object ( core -> bin )		659290	2		=			
ANR	659312	Identifier	obj		659290	0					
ANR	659313	CallExpression	r_bin_cur_object ( core -> bin )		659290	1					
ANR	659314	Callee	r_bin_cur_object		659290	0					
ANR	659315	Identifier	r_bin_cur_object		659290	0					
ANR	659316	ArgumentList	core -> bin		659290	1					
ANR	659317	Argument	core -> bin		659290	0					
ANR	659318	PtrMemberAccess	core -> bin		659290	0					
ANR	659319	Identifier	core		659290	0					
ANR	659320	Identifier	bin		659290	1					
ANR	659321	IdentifierDeclStatement	bool lit = info ? info -> has_lit : false ;	2194:1:71716:71754	659290	2	True				
ANR	659322	IdentifierDecl	lit = info ? info -> has_lit : false		659290	0					
ANR	659323	IdentifierDeclType	bool		659290	0					
ANR	659324	Identifier	lit		659290	1					
ANR	659325	AssignmentExpression	lit = info ? info -> has_lit : false		659290	2		=			
ANR	659326	Identifier	lit		659290	0					
ANR	659327	ConditionalExpression	info ? info -> has_lit : false		659290	1					
ANR	659328	Condition	info		659290	0					
ANR	659329	Identifier	info		659290	0					
ANR	659330	PtrMemberAccess	info -> has_lit		659290	1					
ANR	659331	Identifier	info		659290	0					
ANR	659332	Identifier	has_lit		659290	1					
ANR	659333	Identifier	false		659290	2					
ANR	659334	IdentifierDeclStatement	int va = core -> io -> va || core -> io -> debug ;	2195:1:71757:71797	659290	3	True				
ANR	659335	IdentifierDecl	va = core -> io -> va || core -> io -> debug		659290	0					
ANR	659336	IdentifierDeclType	int		659290	0					
ANR	659337	Identifier	va		659290	1					
ANR	659338	AssignmentExpression	va = core -> io -> va || core -> io -> debug		659290	2		=			
ANR	659339	Identifier	va		659290	0					
ANR	659340	OrExpression	core -> io -> va || core -> io -> debug		659290	1		||			
ANR	659341	PtrMemberAccess	core -> io -> va		659290	0					
ANR	659342	PtrMemberAccess	core -> io		659290	0					
ANR	659343	Identifier	core		659290	0					
ANR	659344	Identifier	io		659290	1					
ANR	659345	Identifier	va		659290	1					
ANR	659346	PtrMemberAccess	core -> io -> debug		659290	1					
ANR	659347	PtrMemberAccess	core -> io		659290	0					
ANR	659348	Identifier	core		659290	0					
ANR	659349	Identifier	io		659290	1					
ANR	659350	Identifier	debug		659290	1					
ANR	659351	IdentifierDeclStatement	RListIter * iter ;	2197:1:71801:71816	659290	4	True				
ANR	659352	IdentifierDecl	* iter		659290	0					
ANR	659353	IdentifierDeclType	RListIter *		659290	0					
ANR	659354	Identifier	iter		659290	1					
ANR	659355	IdentifierDeclStatement	RBinImport * imp ;	2198:1:71819:71834	659290	5	True				
ANR	659356	IdentifierDecl	* imp		659290	0					
ANR	659357	IdentifierDeclType	RBinImport *		659290	0					
ANR	659358	Identifier	imp		659290	1					
ANR	659359	IfStatement	if ( ! obj )		659290	6					
ANR	659360	Condition	! obj	2199:5:71841:71844	659290	0	True				
ANR	659361	UnaryOperationExpression	! obj		659290	0					
ANR	659362	UnaryOperator	!		659290	0					
ANR	659363	Identifier	obj		659290	1					
ANR	659364	CompoundStatement		9:11:228:228	659290	1					
ANR	659365	ReturnStatement	return ;	2200:2:71851:71857	659290	0	True				
ANR	659366	Statement	r_list_foreach	2202:1:71863:71876	659290	7	True				
ANR	659367	Statement	(	2202:16:71878:71878	659290	8	True				
ANR	659368	Statement	obj	2202:17:71879:71881	659290	9	True				
ANR	659369	Statement	->	2202:20:71882:71883	659290	10	True				
ANR	659370	Statement	imports	2202:22:71884:71890	659290	11	True				
ANR	659371	Statement	","	2202:29:71891:71891	659290	12	True				
ANR	659372	Statement	iter	2202:31:71893:71896	659290	13	True				
ANR	659373	Statement	","	2202:35:71897:71897	659290	14	True				
ANR	659374	Statement	imp	2202:37:71899:71901	659290	15	True				
ANR	659375	Statement	)	2202:40:71902:71902	659290	16	True				
ANR	659376	CompoundStatement		13:2:289:355	659290	17					
ANR	659377	IdentifierDeclStatement	"ut64 addr = lit ? r_core_bin_impaddr ( core -> bin , va , imp -> name ) : 0 ;"	2203:2:71908:71974	659290	0	True				
ANR	659378	IdentifierDecl	"addr = lit ? r_core_bin_impaddr ( core -> bin , va , imp -> name ) : 0"		659290	0					
ANR	659379	IdentifierDeclType	ut64		659290	0					
ANR	659380	Identifier	addr		659290	1					
ANR	659381	AssignmentExpression	"addr = lit ? r_core_bin_impaddr ( core -> bin , va , imp -> name ) : 0"		659290	2		=			
ANR	659382	Identifier	addr		659290	0					
ANR	659383	ConditionalExpression	"lit ? r_core_bin_impaddr ( core -> bin , va , imp -> name ) : 0"		659290	1					
ANR	659384	Condition	lit		659290	0					
ANR	659385	Identifier	lit		659290	0					
ANR	659386	CallExpression	"r_core_bin_impaddr ( core -> bin , va , imp -> name )"		659290	1					
ANR	659387	Callee	r_core_bin_impaddr		659290	0					
ANR	659388	Identifier	r_core_bin_impaddr		659290	0					
ANR	659389	ArgumentList	core -> bin		659290	1					
ANR	659390	Argument	core -> bin		659290	0					
ANR	659391	PtrMemberAccess	core -> bin		659290	0					
ANR	659392	Identifier	core		659290	0					
ANR	659393	Identifier	bin		659290	1					
ANR	659394	Argument	va		659290	1					
ANR	659395	Identifier	va		659290	0					
ANR	659396	Argument	imp -> name		659290	2					
ANR	659397	PtrMemberAccess	imp -> name		659290	0					
ANR	659398	Identifier	imp		659290	0					
ANR	659399	Identifier	name		659290	1					
ANR	659400	PrimaryExpression	0		659290	2					
ANR	659401	IfStatement	if ( addr )		659290	1					
ANR	659402	Condition	addr	2204:6:71982:71985	659290	0	True				
ANR	659403	Identifier	addr		659290	0					
ANR	659404	CompoundStatement		14:12:369:369	659290	1					
ANR	659405	ExpressionStatement	"r_core_anal_codexrefs ( core , addr )"	2205:3:71993:72027	659290	0	True				
ANR	659406	CallExpression	"r_core_anal_codexrefs ( core , addr )"		659290	0					
ANR	659407	Callee	r_core_anal_codexrefs		659290	0					
ANR	659408	Identifier	r_core_anal_codexrefs		659290	0					
ANR	659409	ArgumentList	core		659290	1					
ANR	659410	Argument	core		659290	0					
ANR	659411	Identifier	core		659290	0					
ANR	659412	Argument	addr		659290	1					
ANR	659413	Identifier	addr		659290	0					
ANR	659414	ElseStatement	else		659290	0					
ANR	659415	CompoundStatement		16:9:419:419	659290	0					
ANR	659416	ExpressionStatement	"r_cons_printf ( ""agn %s\\n"" , imp -> name )"	2207:3:72043:72080	659290	0	True				
ANR	659417	CallExpression	"r_cons_printf ( ""agn %s\\n"" , imp -> name )"		659290	0					
ANR	659418	Callee	r_cons_printf		659290	0					
ANR	659419	Identifier	r_cons_printf		659290	0					
ANR	659420	ArgumentList	"""agn %s\\n"""		659290	1					
ANR	659421	Argument	"""agn %s\\n"""		659290	0					
ANR	659422	PrimaryExpression	"""agn %s\\n"""		659290	0					
ANR	659423	Argument	imp -> name		659290	1					
ANR	659424	PtrMemberAccess	imp -> name		659290	0					
ANR	659425	Identifier	imp		659290	0					
ANR	659426	Identifier	name		659290	1					
ANR	659427	ReturnType	R_API void		659290	1					
ANR	659428	Identifier	r_core_anal_importxrefs		659290	2					
ANR	659429	ParameterList	RCore * core		659290	3					
ANR	659430	Parameter	RCore * core	2191:35:71605:71615	659290	0	True				
ANR	659431	ParameterType	RCore *		659290	0					
ANR	659432	Identifier	core		659290	1					
ANR	659433	CFGEntryNode	ENTRY		659290		True				
ANR	659434	CFGExitNode	EXIT		659290		True				
ANR	659435	Symbol	imp -> name		659290						
ANR	659436	Symbol	r_core_bin_impaddr		659290						
ANR	659437	Symbol	* core		659290						
ANR	659438	Symbol	false		659290						
ANR	659439	Symbol	iter		659290						
ANR	659440	Symbol	* imp		659290						
ANR	659441	Symbol	va		659290						
ANR	659442	Symbol	imp		659290						
ANR	659443	Symbol	r_bin_get_info		659290						
ANR	659444	Symbol	core -> io -> va		659290						
ANR	659445	Symbol	core		659290						
ANR	659446	Symbol	* core -> io		659290						
ANR	659447	Symbol	core -> io		659290						
ANR	659448	Symbol	obj		659290						
ANR	659449	Symbol	lit		659290						
ANR	659450	Symbol	core -> io -> debug		659290						
ANR	659451	Symbol	info -> has_lit		659290						
ANR	659452	Symbol	* info		659290						
ANR	659453	Symbol	addr		659290						
ANR	659454	Symbol	core -> bin		659290						
ANR	659455	Symbol	r_bin_cur_object		659290						
ANR	659456	Symbol	* * core		659290						
ANR	659457	Symbol	info		659290						
ANR	659458	Function	r_core_anal_codexrefs	2212:0:72092:72707							
ANR	659459	FunctionDef	"r_core_anal_codexrefs (RCore * core , ut64 addr)"		659458	0					
ANR	659460	CompoundStatement		2212:57:72149:72707	659458	0					
ANR	659461	IdentifierDeclStatement	"RFlagItem * f = r_flag_get_at ( core -> flags , addr , false ) ;"	2213:1:72152:72207	659458	0	True				
ANR	659462	IdentifierDecl	"* f = r_flag_get_at ( core -> flags , addr , false )"		659458	0					
ANR	659463	IdentifierDeclType	RFlagItem *		659458	0					
ANR	659464	Identifier	f		659458	1					
ANR	659465	AssignmentExpression	"* f = r_flag_get_at ( core -> flags , addr , false )"		659458	2		=			
ANR	659466	Identifier	f		659458	0					
ANR	659467	CallExpression	"r_flag_get_at ( core -> flags , addr , false )"		659458	1					
ANR	659468	Callee	r_flag_get_at		659458	0					
ANR	659469	Identifier	r_flag_get_at		659458	0					
ANR	659470	ArgumentList	core -> flags		659458	1					
ANR	659471	Argument	core -> flags		659458	0					
ANR	659472	PtrMemberAccess	core -> flags		659458	0					
ANR	659473	Identifier	core		659458	0					
ANR	659474	Identifier	flags		659458	1					
ANR	659475	Argument	addr		659458	1					
ANR	659476	Identifier	addr		659458	0					
ANR	659477	Argument	false		659458	2					
ANR	659478	Identifier	false		659458	0					
ANR	659479	Statement	char	2214:1:72210:72213	659458	1	True				
ANR	659480	Statement	*	2214:6:72215:72215	659458	2	True				
ANR	659481	Statement	me	2214:7:72216:72217	659458	3	True				
ANR	659482	Statement	=	2214:10:72219:72219	659458	4	True				
ANR	659483	Statement	(	2214:12:72221:72221	659458	5	True				
ANR	659484	Statement	f	2214:13:72222:72222	659458	6	True				
ANR	659485	Statement	&&	2214:15:72224:72225	659458	7	True				
ANR	659486	Statement	f	2214:18:72227:72227	659458	8	True				
ANR	659487	Statement	->	2214:19:72228:72229	659458	9	True				
ANR	659488	Statement	offset	2214:21:72230:72235	659458	10	True				
ANR	659489	Statement	==	2214:28:72237:72238	659458	11	True				
ANR	659490	Statement	addr	2214:31:72240:72243	659458	12	True				
ANR	659491	Statement	)	2214:35:72244:72244	659458	13	True				
ANR	659492	Statement	?	2215:2:72248:72248	659458	14	True				
ANR	659493	Statement	r_str_new	2215:4:72250:72258	659458	15	True				
ANR	659494	Statement	(	2215:14:72260:72260	659458	16	True				
ANR	659495	Statement	f	2215:15:72261:72261	659458	17	True				
ANR	659496	Statement	->	2215:16:72262:72263	659458	18	True				
ANR	659497	Statement	name	2215:18:72264:72267	659458	19	True				
ANR	659498	Statement	)	2215:22:72268:72268	659458	20	True				
ANR	659499	Statement	:	2215:24:72270:72270	659458	21	True				
ANR	659500	Statement	r_str_newf	2215:26:72272:72281	659458	22	True				
ANR	659501	Statement	(	2215:37:72283:72283	659458	23	True				
ANR	659502	Statement	"""0x%"""	2215:38:72284:72288	659458	24	True				
ANR	659503	Statement	PFMT64x	2215:43:72289:72295	659458	25	True				
ANR	659504	Statement	","	2215:50:72296:72296	659458	26	True				
ANR	659505	Statement	addr	2215:52:72298:72301	659458	27	True				
ANR	659506	Statement	)	2215:56:72302:72302	659458	28	True				
ANR	659507	ExpressionStatement		2215:57:72303:72303	659458	29	True				
ANR	659508	ExpressionStatement	"r_cons_printf ( ""agn %s\\n"" , me )"	2216:1:72306:72336	659458	30	True				
ANR	659509	CallExpression	"r_cons_printf ( ""agn %s\\n"" , me )"		659458	0					
ANR	659510	Callee	r_cons_printf		659458	0					
ANR	659511	Identifier	r_cons_printf		659458	0					
ANR	659512	ArgumentList	"""agn %s\\n"""		659458	1					
ANR	659513	Argument	"""agn %s\\n"""		659458	0					
ANR	659514	PrimaryExpression	"""agn %s\\n"""		659458	0					
ANR	659515	Argument	me		659458	1					
ANR	659516	Identifier	me		659458	0					
ANR	659517	IdentifierDeclStatement	RListIter * iter ;	2217:1:72339:72354	659458	31	True				
ANR	659518	IdentifierDecl	* iter		659458	0					
ANR	659519	IdentifierDeclType	RListIter *		659458	0					
ANR	659520	Identifier	iter		659458	1					
ANR	659521	IdentifierDeclStatement	RAnalRef * ref ;	2218:1:72357:72370	659458	32	True				
ANR	659522	IdentifierDecl	* ref		659458	0					
ANR	659523	IdentifierDeclType	RAnalRef *		659458	0					
ANR	659524	Identifier	ref		659458	1					
ANR	659525	IdentifierDeclStatement	"RList * list = r_anal_xrefs_get ( core -> anal , addr ) ;"	2219:1:72373:72422	659458	33	True				
ANR	659526	IdentifierDecl	"* list = r_anal_xrefs_get ( core -> anal , addr )"		659458	0					
ANR	659527	IdentifierDeclType	RList *		659458	0					
ANR	659528	Identifier	list		659458	1					
ANR	659529	AssignmentExpression	"* list = r_anal_xrefs_get ( core -> anal , addr )"		659458	2		=			
ANR	659530	Identifier	list		659458	0					
ANR	659531	CallExpression	"r_anal_xrefs_get ( core -> anal , addr )"		659458	1					
ANR	659532	Callee	r_anal_xrefs_get		659458	0					
ANR	659533	Identifier	r_anal_xrefs_get		659458	0					
ANR	659534	ArgumentList	core -> anal		659458	1					
ANR	659535	Argument	core -> anal		659458	0					
ANR	659536	PtrMemberAccess	core -> anal		659458	0					
ANR	659537	Identifier	core		659458	0					
ANR	659538	Identifier	anal		659458	1					
ANR	659539	Argument	addr		659458	1					
ANR	659540	Identifier	addr		659458	0					
ANR	659541	Statement	r_list_foreach	2220:1:72425:72438	659458	34	True				
ANR	659542	Statement	(	2220:16:72440:72440	659458	35	True				
ANR	659543	Statement	list	2220:17:72441:72444	659458	36	True				
ANR	659544	Statement	","	2220:21:72445:72445	659458	37	True				
ANR	659545	Statement	iter	2220:23:72447:72450	659458	38	True				
ANR	659546	Statement	","	2220:27:72451:72451	659458	39	True				
ANR	659547	Statement	ref	2220:29:72453:72455	659458	40	True				
ANR	659548	Statement	)	2220:32:72456:72456	659458	41	True				
ANR	659549	CompoundStatement		10:2:312:367	659458	42					
ANR	659550	IdentifierDeclStatement	"RFlagItem * item = r_flag_get_i ( core -> flags , ref -> addr ) ;"	2221:2:72462:72517	659458	0	True				
ANR	659551	IdentifierDecl	"* item = r_flag_get_i ( core -> flags , ref -> addr )"		659458	0					
ANR	659552	IdentifierDeclType	RFlagItem *		659458	0					
ANR	659553	Identifier	item		659458	1					
ANR	659554	AssignmentExpression	"* item = r_flag_get_i ( core -> flags , ref -> addr )"		659458	2		=			
ANR	659555	Identifier	item		659458	0					
ANR	659556	CallExpression	"r_flag_get_i ( core -> flags , ref -> addr )"		659458	1					
ANR	659557	Callee	r_flag_get_i		659458	0					
ANR	659558	Identifier	r_flag_get_i		659458	0					
ANR	659559	ArgumentList	core -> flags		659458	1					
ANR	659560	Argument	core -> flags		659458	0					
ANR	659561	PtrMemberAccess	core -> flags		659458	0					
ANR	659562	Identifier	core		659458	0					
ANR	659563	Identifier	flags		659458	1					
ANR	659564	Argument	ref -> addr		659458	1					
ANR	659565	PtrMemberAccess	ref -> addr		659458	0					
ANR	659566	Identifier	ref		659458	0					
ANR	659567	Identifier	addr		659458	1					
ANR	659568	Statement	const	2222:2:72521:72525	659458	1	True				
ANR	659569	Statement	char	2222:8:72527:72530	659458	2	True				
ANR	659570	Statement	*	2222:13:72532:72532	659458	3	True				
ANR	659571	Statement	src	2222:14:72533:72535	659458	4	True				
ANR	659572	Statement	=	2222:18:72537:72537	659458	5	True				
ANR	659573	Statement	item	2222:20:72539:72542	659458	6	True				
ANR	659574	Statement	?	2222:24:72543:72543	659458	7	True				
ANR	659575	Statement	item	2222:26:72545:72548	659458	8	True				
ANR	659576	Statement	->	2222:30:72549:72550	659458	9	True				
ANR	659577	Label	name :	2222:32:72551:72555	659458	10	True				
ANR	659578	Identifier	name		659458	0					
ANR	659579	Statement	sdb_fmt	2222:38:72557:72563	659458	11	True				
ANR	659580	Statement	(	2222:46:72565:72565	659458	12	True				
ANR	659581	Statement	"""0x%08"""	2222:47:72566:72572	659458	13	True				
ANR	659582	Statement	PFMT64x	2222:54:72573:72579	659458	14	True				
ANR	659583	Statement	","	2222:61:72580:72580	659458	15	True				
ANR	659584	Statement	ref	2222:63:72582:72584	659458	16	True				
ANR	659585	Statement	->	2222:66:72585:72586	659458	17	True				
ANR	659586	Statement	addr	2222:68:72587:72590	659458	18	True				
ANR	659587	Statement	)	2222:72:72591:72591	659458	19	True				
ANR	659588	ExpressionStatement		2222:73:72592:72592	659458	20	True				
ANR	659589	ExpressionStatement	"r_cons_printf ( ""agn %s\\n"" , src )"	2223:2:72596:72627	659458	21	True				
ANR	659590	CallExpression	"r_cons_printf ( ""agn %s\\n"" , src )"		659458	0					
ANR	659591	Callee	r_cons_printf		659458	0					
ANR	659592	Identifier	r_cons_printf		659458	0					
ANR	659593	ArgumentList	"""agn %s\\n"""		659458	1					
ANR	659594	Argument	"""agn %s\\n"""		659458	0					
ANR	659595	PrimaryExpression	"""agn %s\\n"""		659458	0					
ANR	659596	Argument	src		659458	1					
ANR	659597	Identifier	src		659458	0					
ANR	659598	ExpressionStatement	"r_cons_printf ( ""age %s %s\\n"" , src , me )"	2224:2:72631:72669	659458	22	True				
ANR	659599	CallExpression	"r_cons_printf ( ""age %s %s\\n"" , src , me )"		659458	0					
ANR	659600	Callee	r_cons_printf		659458	0					
ANR	659601	Identifier	r_cons_printf		659458	0					
ANR	659602	ArgumentList	"""age %s %s\\n"""		659458	1					
ANR	659603	Argument	"""age %s %s\\n"""		659458	0					
ANR	659604	PrimaryExpression	"""age %s %s\\n"""		659458	0					
ANR	659605	Argument	src		659458	1					
ANR	659606	Identifier	src		659458	0					
ANR	659607	Argument	me		659458	2					
ANR	659608	Identifier	me		659458	0					
ANR	659609	ExpressionStatement	r_list_free ( list )	2226:1:72675:72693	659458	43	True				
ANR	659610	CallExpression	r_list_free ( list )		659458	0					
ANR	659611	Callee	r_list_free		659458	0					
ANR	659612	Identifier	r_list_free		659458	0					
ANR	659613	ArgumentList	list		659458	1					
ANR	659614	Argument	list		659458	0					
ANR	659615	Identifier	list		659458	0					
ANR	659616	ExpressionStatement	free ( me )	2227:1:72696:72705	659458	44	True				
ANR	659617	CallExpression	free ( me )		659458	0					
ANR	659618	Callee	free		659458	0					
ANR	659619	Identifier	free		659458	0					
ANR	659620	ArgumentList	me		659458	1					
ANR	659621	Argument	me		659458	0					
ANR	659622	Identifier	me		659458	0					
ANR	659623	ReturnType	R_API void		659458	1					
ANR	659624	Identifier	r_core_anal_codexrefs		659458	2					
ANR	659625	ParameterList	"RCore * core , ut64 addr"		659458	3					
ANR	659626	Parameter	RCore * core	2212:33:72125:72135	659458	0	True				
ANR	659627	ParameterType	RCore *		659458	0					
ANR	659628	Identifier	core		659458	1					
ANR	659629	Parameter	ut64 addr	2212:46:72138:72146	659458	1	True				
ANR	659630	ParameterType	ut64		659458	0					
ANR	659631	Identifier	addr		659458	1					
ANR	659632	CFGEntryNode	ENTRY		659458		True				
ANR	659633	CFGExitNode	EXIT		659458		True				
ANR	659634	Symbol	item		659458						
ANR	659635	Symbol	ref -> addr		659458						
ANR	659636	Symbol	src		659458						
ANR	659637	Symbol	f		659458						
ANR	659638	Symbol	* core		659458						
ANR	659639	Symbol	false		659458						
ANR	659640	Symbol	iter		659458						
ANR	659641	Symbol	core -> flags		659458						
ANR	659642	Symbol	list		659458						
ANR	659643	Symbol	core -> anal		659458						
ANR	659644	Symbol	core		659458						
ANR	659645	Symbol	ref		659458						
ANR	659646	Symbol	r_anal_xrefs_get		659458						
ANR	659647	Symbol	me		659458						
ANR	659648	Symbol	addr		659458						
ANR	659649	Symbol	r_flag_get_at		659458						
ANR	659650	Symbol	* ref		659458						
ANR	659651	Symbol	r_flag_get_i		659458						
ANR	659652	Function	RAnalRef_cmp	2230:0:72710:72814							
ANR	659653	FunctionDef	"RAnalRef_cmp (const RAnalRef * ref1 , const RAnalRef * ref2)"		659652	0					
ANR	659654	CompoundStatement		2230:68:72778:72814	659652	0					
ANR	659655	ReturnStatement	return ref1 -> addr != ref2 -> addr ;	2231:1:72781:72812	659652	0	True				
ANR	659656	EqualityExpression	ref1 -> addr != ref2 -> addr		659652	0		!=			
ANR	659657	PtrMemberAccess	ref1 -> addr		659652	0					
ANR	659658	Identifier	ref1		659652	0					
ANR	659659	Identifier	addr		659652	1					
ANR	659660	PtrMemberAccess	ref2 -> addr		659652	1					
ANR	659661	Identifier	ref2		659652	0					
ANR	659662	Identifier	addr		659652	1					
ANR	659663	ReturnType	static int		659652	1					
ANR	659664	Identifier	RAnalRef_cmp		659652	2					
ANR	659665	ParameterList	"const RAnalRef * ref1 , const RAnalRef * ref2"		659652	3					
ANR	659666	Parameter	const RAnalRef * ref1	2230:24:72734:72753	659652	0	True				
ANR	659667	ParameterType	const RAnalRef *		659652	0					
ANR	659668	Identifier	ref1		659652	1					
ANR	659669	Parameter	const RAnalRef * ref2	2230:46:72756:72775	659652	1	True				
ANR	659670	ParameterType	const RAnalRef *		659652	0					
ANR	659671	Identifier	ref2		659652	1					
ANR	659672	CFGEntryNode	ENTRY		659652		True				
ANR	659673	CFGExitNode	EXIT		659652		True				
ANR	659674	Symbol	ref1 -> addr		659652						
ANR	659675	Symbol	* ref2		659652						
ANR	659676	Symbol	* ref1		659652						
ANR	659677	Symbol	ref2		659652						
ANR	659678	Symbol	ref1		659652						
ANR	659679	Symbol	ref2 -> addr		659652						
ANR	659680	Function	r_core_anal_callgraph	2234:0:72817:78914							
ANR	659681	FunctionDef	"r_core_anal_callgraph (RCore * core , ut64 addr , int fmt)"		659680	0					
ANR	659682	CompoundStatement		2234:66:72883:78914	659680	0					
ANR	659683	IdentifierDeclStatement	"const char * font = r_config_get ( core -> config , ""graph.font"" ) ;"	2235:1:72886:72946	659680	0	True				
ANR	659684	IdentifierDecl	"* font = r_config_get ( core -> config , ""graph.font"" )"		659680	0					
ANR	659685	IdentifierDeclType	const char *		659680	0					
ANR	659686	Identifier	font		659680	1					
ANR	659687	AssignmentExpression	"* font = r_config_get ( core -> config , ""graph.font"" )"		659680	2		=			
ANR	659688	Identifier	font		659680	0					
ANR	659689	CallExpression	"r_config_get ( core -> config , ""graph.font"" )"		659680	1					
ANR	659690	Callee	r_config_get		659680	0					
ANR	659691	Identifier	r_config_get		659680	0					
ANR	659692	ArgumentList	core -> config		659680	1					
ANR	659693	Argument	core -> config		659680	0					
ANR	659694	PtrMemberAccess	core -> config		659680	0					
ANR	659695	Identifier	core		659680	0					
ANR	659696	Identifier	config		659680	1					
ANR	659697	Argument	"""graph.font"""		659680	1					
ANR	659698	PrimaryExpression	"""graph.font"""		659680	0					
ANR	659699	IdentifierDeclStatement	int is_html = r_cons_singleton ( ) -> is_html ;	2236:1:72949:72991	659680	1	True				
ANR	659700	IdentifierDecl	is_html = r_cons_singleton ( ) -> is_html		659680	0					
ANR	659701	IdentifierDeclType	int		659680	0					
ANR	659702	Identifier	is_html		659680	1					
ANR	659703	AssignmentExpression	is_html = r_cons_singleton ( ) -> is_html		659680	2		=			
ANR	659704	Identifier	is_html		659680	0					
ANR	659705	PtrMemberAccess	r_cons_singleton ( ) -> is_html		659680	1					
ANR	659706	CallExpression	r_cons_singleton ( )		659680	0					
ANR	659707	Callee	r_cons_singleton		659680	0					
ANR	659708	Identifier	r_cons_singleton		659680	0					
ANR	659709	ArgumentList			659680	1					
ANR	659710	Identifier	is_html		659680	1					
ANR	659711	IdentifierDeclStatement	"bool refgraph = r_config_get_i ( core -> config , ""graph.refs"" ) ;"	2237:1:72994:73053	659680	2	True				
ANR	659712	IdentifierDecl	"refgraph = r_config_get_i ( core -> config , ""graph.refs"" )"		659680	0					
ANR	659713	IdentifierDeclType	bool		659680	0					
ANR	659714	Identifier	refgraph		659680	1					
ANR	659715	AssignmentExpression	"refgraph = r_config_get_i ( core -> config , ""graph.refs"" )"		659680	2		=			
ANR	659716	Identifier	refgraph		659680	0					
ANR	659717	CallExpression	"r_config_get_i ( core -> config , ""graph.refs"" )"		659680	1					
ANR	659718	Callee	r_config_get_i		659680	0					
ANR	659719	Identifier	r_config_get_i		659680	0					
ANR	659720	ArgumentList	core -> config		659680	1					
ANR	659721	Argument	core -> config		659680	0					
ANR	659722	PtrMemberAccess	core -> config		659680	0					
ANR	659723	Identifier	core		659680	0					
ANR	659724	Identifier	config		659680	1					
ANR	659725	Argument	"""graph.refs"""		659680	1					
ANR	659726	PrimaryExpression	"""graph.refs"""		659680	0					
ANR	659727	IdentifierDeclStatement	"int first , first2 ;"	2238:1:73056:73073	659680	3	True				
ANR	659728	IdentifierDecl	first		659680	0					
ANR	659729	IdentifierDeclType	int		659680	0					
ANR	659730	Identifier	first		659680	1					
ANR	659731	IdentifierDecl	first2		659680	1					
ANR	659732	IdentifierDeclType	int		659680	0					
ANR	659733	Identifier	first2		659680	1					
ANR	659734	IdentifierDeclStatement	"RListIter * iter , * iter2 ;"	2239:1:73076:73099	659680	4	True				
ANR	659735	IdentifierDecl	* iter		659680	0					
ANR	659736	IdentifierDeclType	RListIter *		659680	0					
ANR	659737	Identifier	iter		659680	1					
ANR	659738	IdentifierDecl	* iter2		659680	1					
ANR	659739	IdentifierDeclType	RListIter *		659680	0					
ANR	659740	Identifier	iter2		659680	1					
ANR	659741	IdentifierDeclStatement	"int usenames = r_config_get_i ( core -> config , ""graph.json.usenames"" ) ;"	2240:1:73102:73169	659680	5	True				
ANR	659742	IdentifierDecl	"usenames = r_config_get_i ( core -> config , ""graph.json.usenames"" )"		659680	0					
ANR	659743	IdentifierDeclType	int		659680	0					
ANR	659744	Identifier	usenames		659680	1					
ANR	659745	AssignmentExpression	"usenames = r_config_get_i ( core -> config , ""graph.json.usenames"" )"		659680	2		=			
ANR	659746	Identifier	usenames		659680	0					
ANR	659747	CallExpression	"r_config_get_i ( core -> config , ""graph.json.usenames"" )"		659680	1					
ANR	659748	Callee	r_config_get_i		659680	0					
ANR	659749	Identifier	r_config_get_i		659680	0					
ANR	659750	ArgumentList	core -> config		659680	1					
ANR	659751	Argument	core -> config		659680	0					
ANR	659752	PtrMemberAccess	core -> config		659680	0					
ANR	659753	Identifier	core		659680	0					
ANR	659754	Identifier	config		659680	1					
ANR	659755	Argument	"""graph.json.usenames"""		659680	1					
ANR	659756	PrimaryExpression	"""graph.json.usenames"""		659680	0					
ANR	659757	ExpressionStatement		2240:69:73170:73170	659680	6	True				
ANR	659758	IdentifierDeclStatement	RAnalFunction * fcni ;	2241:1:73173:73192	659680	7	True				
ANR	659759	IdentifierDecl	* fcni		659680	0					
ANR	659760	IdentifierDeclType	RAnalFunction *		659680	0					
ANR	659761	Identifier	fcni		659680	1					
ANR	659762	IdentifierDeclStatement	RAnalRef * fcnr ;	2242:1:73195:73209	659680	8	True				
ANR	659763	IdentifierDecl	* fcnr		659680	0					
ANR	659764	IdentifierDeclType	RAnalRef *		659680	0					
ANR	659765	Identifier	fcnr		659680	1					
ANR	659766	IdentifierDeclStatement	"ut64 from = r_config_get_i ( core -> config , ""graph.from"" ) ;"	2244:1:73213:73268	659680	9	True				
ANR	659767	IdentifierDecl	"from = r_config_get_i ( core -> config , ""graph.from"" )"		659680	0					
ANR	659768	IdentifierDeclType	ut64		659680	0					
ANR	659769	Identifier	from		659680	1					
ANR	659770	AssignmentExpression	"from = r_config_get_i ( core -> config , ""graph.from"" )"		659680	2		=			
ANR	659771	Identifier	from		659680	0					
ANR	659772	CallExpression	"r_config_get_i ( core -> config , ""graph.from"" )"		659680	1					
ANR	659773	Callee	r_config_get_i		659680	0					
ANR	659774	Identifier	r_config_get_i		659680	0					
ANR	659775	ArgumentList	core -> config		659680	1					
ANR	659776	Argument	core -> config		659680	0					
ANR	659777	PtrMemberAccess	core -> config		659680	0					
ANR	659778	Identifier	core		659680	0					
ANR	659779	Identifier	config		659680	1					
ANR	659780	Argument	"""graph.from"""		659680	1					
ANR	659781	PrimaryExpression	"""graph.from"""		659680	0					
ANR	659782	IdentifierDeclStatement	"ut64 to = r_config_get_i ( core -> config , ""graph.to"" ) ;"	2245:1:73271:73322	659680	10	True				
ANR	659783	IdentifierDecl	"to = r_config_get_i ( core -> config , ""graph.to"" )"		659680	0					
ANR	659784	IdentifierDeclType	ut64		659680	0					
ANR	659785	Identifier	to		659680	1					
ANR	659786	AssignmentExpression	"to = r_config_get_i ( core -> config , ""graph.to"" )"		659680	2		=			
ANR	659787	Identifier	to		659680	0					
ANR	659788	CallExpression	"r_config_get_i ( core -> config , ""graph.to"" )"		659680	1					
ANR	659789	Callee	r_config_get_i		659680	0					
ANR	659790	Identifier	r_config_get_i		659680	0					
ANR	659791	ArgumentList	core -> config		659680	1					
ANR	659792	Argument	core -> config		659680	0					
ANR	659793	PtrMemberAccess	core -> config		659680	0					
ANR	659794	Identifier	core		659680	0					
ANR	659795	Identifier	config		659680	1					
ANR	659796	Argument	"""graph.to"""		659680	1					
ANR	659797	PrimaryExpression	"""graph.to"""		659680	0					
ANR	659798	SwitchStatement	switch ( fmt )		659680	11					
ANR	659799	Condition	fmt	2247:9:73334:73336	659680	0	True				
ANR	659800	Identifier	fmt		659680	0					
ANR	659801	CompoundStatement		15:1:456:456	659680	1					
ANR	659802	Label	case R_GRAPH_FORMAT_JSON :	2249:1:73343:73367	659680	0	True				
ANR	659803	Identifier	R_GRAPH_FORMAT_JSON		659680	0					
ANR	659804	ExpressionStatement	"r_cons_printf ( ""["" )"	2250:2:73371:73390	659680	1	True				
ANR	659805	CallExpression	"r_cons_printf ( ""["" )"		659680	0					
ANR	659806	Callee	r_cons_printf		659680	0					
ANR	659807	Identifier	r_cons_printf		659680	0					
ANR	659808	ArgumentList	"""["""		659680	1					
ANR	659809	Argument	"""["""		659680	0					
ANR	659810	PrimaryExpression	"""["""		659680	0					
ANR	659811	BreakStatement	break ;	2251:2:73394:73399	659680	2	True				
ANR	659812	Label	case R_GRAPH_FORMAT_GML :	2252:1:73402:73425	659680	3	True				
ANR	659813	Identifier	R_GRAPH_FORMAT_GML		659680	0					
ANR	659814	Label	case R_GRAPH_FORMAT_GMLFCN :	2253:1:73428:73454	659680	4	True				
ANR	659815	Identifier	R_GRAPH_FORMAT_GMLFCN		659680	0					
ANR	659816	Statement	r_cons_printf	2254:2:73458:73470	659680	5	True				
ANR	659817	Statement	(	2254:16:73472:73472	659680	6	True				
ANR	659818	Statement	"""graph\\n[\\n"""	2254:17:73473:73484	659680	7	True				
ANR	659819	Statement	"""hierarchic  1\\n"""	2255:4:73490:73506	659680	8	True				
ANR	659820	Statement	"""label  \\""\\""\\n"""	2256:4:73512:73526	659680	9	True				
ANR	659821	Statement	"""directed  1\\n"""	2257:4:73532:73546	659680	10	True				
ANR	659822	Statement	)	2257:19:73547:73547	659680	11	True				
ANR	659823	ExpressionStatement		2257:20:73548:73548	659680	12	True				
ANR	659824	BreakStatement	break ;	2258:2:73552:73557	659680	13	True				
ANR	659825	Label	case R_GRAPH_FORMAT_DOT :	2259:1:73560:73583	659680	14	True				
ANR	659826	Identifier	R_GRAPH_FORMAT_DOT		659680	0					
ANR	659827	IfStatement	if ( ! is_html )		659680	15					
ANR	659828	Condition	! is_html	2260:6:73591:73598	659680	0	True				
ANR	659829	UnaryOperationExpression	! is_html		659680	0					
ANR	659830	UnaryOperator	!		659680	0					
ANR	659831	Identifier	is_html		659680	1					
ANR	659832	CompoundStatement		31:3:939:1010	659680	1					
ANR	659833	IdentifierDeclStatement	"const char * gv_edge = r_config_get ( core -> config , ""graph.gv.edge"" ) ;"	2261:3:73606:73673	659680	0	True				
ANR	659834	IdentifierDecl	"* gv_edge = r_config_get ( core -> config , ""graph.gv.edge"" )"		659680	0					
ANR	659835	IdentifierDeclType	const char *		659680	0					
ANR	659836	Identifier	gv_edge		659680	1					
ANR	659837	AssignmentExpression	"* gv_edge = r_config_get ( core -> config , ""graph.gv.edge"" )"		659680	2		=			
ANR	659838	Identifier	gv_edge		659680	0					
ANR	659839	CallExpression	"r_config_get ( core -> config , ""graph.gv.edge"" )"		659680	1					
ANR	659840	Callee	r_config_get		659680	0					
ANR	659841	Identifier	r_config_get		659680	0					
ANR	659842	ArgumentList	core -> config		659680	1					
ANR	659843	Argument	core -> config		659680	0					
ANR	659844	PtrMemberAccess	core -> config		659680	0					
ANR	659845	Identifier	core		659680	0					
ANR	659846	Identifier	config		659680	1					
ANR	659847	Argument	"""graph.gv.edge"""		659680	1					
ANR	659848	PrimaryExpression	"""graph.gv.edge"""		659680	0					
ANR	659849	IdentifierDeclStatement	"const char * gv_node = r_config_get ( core -> config , ""graph.gv.node"" ) ;"	2262:3:73678:73745	659680	1	True				
ANR	659850	IdentifierDecl	"* gv_node = r_config_get ( core -> config , ""graph.gv.node"" )"		659680	0					
ANR	659851	IdentifierDeclType	const char *		659680	0					
ANR	659852	Identifier	gv_node		659680	1					
ANR	659853	AssignmentExpression	"* gv_node = r_config_get ( core -> config , ""graph.gv.node"" )"		659680	2		=			
ANR	659854	Identifier	gv_node		659680	0					
ANR	659855	CallExpression	"r_config_get ( core -> config , ""graph.gv.node"" )"		659680	1					
ANR	659856	Callee	r_config_get		659680	0					
ANR	659857	Identifier	r_config_get		659680	0					
ANR	659858	ArgumentList	core -> config		659680	1					
ANR	659859	Argument	core -> config		659680	0					
ANR	659860	PtrMemberAccess	core -> config		659680	0					
ANR	659861	Identifier	core		659680	0					
ANR	659862	Identifier	config		659680	1					
ANR	659863	Argument	"""graph.gv.node"""		659680	1					
ANR	659864	PrimaryExpression	"""graph.gv.node"""		659680	0					
ANR	659865	IdentifierDeclStatement	"const char * gv_grph = r_config_get ( core -> config , ""graph.gv.graph"" ) ;"	2263:3:73750:73818	659680	2	True				
ANR	659866	IdentifierDecl	"* gv_grph = r_config_get ( core -> config , ""graph.gv.graph"" )"		659680	0					
ANR	659867	IdentifierDeclType	const char *		659680	0					
ANR	659868	Identifier	gv_grph		659680	1					
ANR	659869	AssignmentExpression	"* gv_grph = r_config_get ( core -> config , ""graph.gv.graph"" )"		659680	2		=			
ANR	659870	Identifier	gv_grph		659680	0					
ANR	659871	CallExpression	"r_config_get ( core -> config , ""graph.gv.graph"" )"		659680	1					
ANR	659872	Callee	r_config_get		659680	0					
ANR	659873	Identifier	r_config_get		659680	0					
ANR	659874	ArgumentList	core -> config		659680	1					
ANR	659875	Argument	core -> config		659680	0					
ANR	659876	PtrMemberAccess	core -> config		659680	0					
ANR	659877	Identifier	core		659680	0					
ANR	659878	Identifier	config		659680	1					
ANR	659879	Argument	"""graph.gv.graph"""		659680	1					
ANR	659880	PrimaryExpression	"""graph.gv.graph"""		659680	0					
ANR	659881	IdentifierDeclStatement	"const char * gv_spline = r_config_get ( core -> config , ""graph.gv.spline"" ) ;"	2264:3:73823:73894	659680	3	True				
ANR	659882	IdentifierDecl	"* gv_spline = r_config_get ( core -> config , ""graph.gv.spline"" )"		659680	0					
ANR	659883	IdentifierDeclType	const char *		659680	0					
ANR	659884	Identifier	gv_spline		659680	1					
ANR	659885	AssignmentExpression	"* gv_spline = r_config_get ( core -> config , ""graph.gv.spline"" )"		659680	2		=			
ANR	659886	Identifier	gv_spline		659680	0					
ANR	659887	CallExpression	"r_config_get ( core -> config , ""graph.gv.spline"" )"		659680	1					
ANR	659888	Callee	r_config_get		659680	0					
ANR	659889	Identifier	r_config_get		659680	0					
ANR	659890	ArgumentList	core -> config		659680	1					
ANR	659891	Argument	core -> config		659680	0					
ANR	659892	PtrMemberAccess	core -> config		659680	0					
ANR	659893	Identifier	core		659680	0					
ANR	659894	Identifier	config		659680	1					
ANR	659895	Argument	"""graph.gv.spline"""		659680	1					
ANR	659896	PrimaryExpression	"""graph.gv.spline"""		659680	0					
ANR	659897	IfStatement	if ( ! gv_edge || ! * gv_edge )		659680	4					
ANR	659898	Condition	! gv_edge || ! * gv_edge	2265:7:73903:73923	659680	0	True				
ANR	659899	OrExpression	! gv_edge || ! * gv_edge		659680	0		||			
ANR	659900	UnaryOperationExpression	! gv_edge		659680	0					
ANR	659901	UnaryOperator	!		659680	0					
ANR	659902	Identifier	gv_edge		659680	1					
ANR	659903	UnaryOperationExpression	! * gv_edge		659680	1					
ANR	659904	UnaryOperator	!		659680	0					
ANR	659905	UnaryOperationExpression	* gv_edge		659680	1					
ANR	659906	UnaryOperator	*		659680	0					
ANR	659907	Identifier	gv_edge		659680	1					
ANR	659908	CompoundStatement		32:30:1042:1042	659680	1					
ANR	659909	ExpressionStatement	"gv_edge = ""arrowhead=\\""normal\\"" style=bold weight=2"""	2266:4:73932:73984	659680	0	True				
ANR	659910	AssignmentExpression	"gv_edge = ""arrowhead=\\""normal\\"" style=bold weight=2"""		659680	0		=			
ANR	659911	Identifier	gv_edge		659680	0					
ANR	659912	PrimaryExpression	"""arrowhead=\\""normal\\"" style=bold weight=2"""		659680	1					
ANR	659913	IfStatement	if ( ! gv_node || ! * gv_node )		659680	5					
ANR	659914	Condition	! gv_node || ! * gv_node	2268:7:73998:74018	659680	0	True				
ANR	659915	OrExpression	! gv_node || ! * gv_node		659680	0		||			
ANR	659916	UnaryOperationExpression	! gv_node		659680	0					
ANR	659917	UnaryOperator	!		659680	0					
ANR	659918	Identifier	gv_node		659680	1					
ANR	659919	UnaryOperationExpression	! * gv_node		659680	1					
ANR	659920	UnaryOperator	!		659680	0					
ANR	659921	UnaryOperationExpression	* gv_node		659680	1					
ANR	659922	UnaryOperator	*		659680	0					
ANR	659923	Identifier	gv_node		659680	1					
ANR	659924	CompoundStatement		35:30:1137:1137	659680	1					
ANR	659925	ExpressionStatement	"gv_node = ""penwidth=4 fillcolor=white style=filled fontname=\\""Courier New Bold\\"" fontsize=14 shape=box"""	2269:4:74027:74130	659680	0	True				
ANR	659926	AssignmentExpression	"gv_node = ""penwidth=4 fillcolor=white style=filled fontname=\\""Courier New Bold\\"" fontsize=14 shape=box"""		659680	0		=			
ANR	659927	Identifier	gv_node		659680	0					
ANR	659928	PrimaryExpression	"""penwidth=4 fillcolor=white style=filled fontname=\\""Courier New Bold\\"" fontsize=14 shape=box"""		659680	1					
ANR	659929	IfStatement	if ( ! gv_grph || ! * gv_grph )		659680	6					
ANR	659930	Condition	! gv_grph || ! * gv_grph	2271:7:74144:74164	659680	0	True				
ANR	659931	OrExpression	! gv_grph || ! * gv_grph		659680	0		||			
ANR	659932	UnaryOperationExpression	! gv_grph		659680	0					
ANR	659933	UnaryOperator	!		659680	0					
ANR	659934	Identifier	gv_grph		659680	1					
ANR	659935	UnaryOperationExpression	! * gv_grph		659680	1					
ANR	659936	UnaryOperator	!		659680	0					
ANR	659937	UnaryOperationExpression	* gv_grph		659680	1					
ANR	659938	UnaryOperator	*		659680	0					
ANR	659939	Identifier	gv_grph		659680	1					
ANR	659940	CompoundStatement		38:30:1283:1283	659680	1					
ANR	659941	ExpressionStatement	"gv_grph = ""bgcolor=azure"""	2272:4:74173:74198	659680	0	True				
ANR	659942	AssignmentExpression	"gv_grph = ""bgcolor=azure"""		659680	0		=			
ANR	659943	Identifier	gv_grph		659680	0					
ANR	659944	PrimaryExpression	"""bgcolor=azure"""		659680	1					
ANR	659945	IfStatement	if ( ! gv_spline || ! * gv_spline )		659680	7					
ANR	659946	Condition	! gv_spline || ! * gv_spline	2274:7:74212:74236	659680	0	True				
ANR	659947	OrExpression	! gv_spline || ! * gv_spline		659680	0		||			
ANR	659948	UnaryOperationExpression	! gv_spline		659680	0					
ANR	659949	UnaryOperator	!		659680	0					
ANR	659950	Identifier	gv_spline		659680	1					
ANR	659951	UnaryOperationExpression	! * gv_spline		659680	1					
ANR	659952	UnaryOperator	!		659680	0					
ANR	659953	UnaryOperationExpression	* gv_spline		659680	1					
ANR	659954	UnaryOperator	*		659680	0					
ANR	659955	Identifier	gv_spline		659680	1					
ANR	659956	CompoundStatement		41:34:1355:1355	659680	1					
ANR	659957	ExpressionStatement	"gv_spline = ""splines=\\""curved\\"""""	2276:4:74295:74327	659680	0	True				
ANR	659958	AssignmentExpression	"gv_spline = ""splines=\\""curved\\"""""		659680	0		=			
ANR	659959	Identifier	gv_spline		659680	0					
ANR	659960	PrimaryExpression	"""splines=\\""curved\\"""""		659680	1					
ANR	659961	Statement	r_cons_printf	2278:3:74337:74349	659680	8	True				
ANR	659962	Statement	(	2278:17:74351:74351	659680	9	True				
ANR	659963	Statement	"""digraph code {\\n"""	2278:18:74352:74369	659680	10	True				
ANR	659964	Statement	"""rankdir=LR;\\n"""	2279:5:74376:74390	659680	11	True				
ANR	659965	Statement	"""outputorder=edgesfirst;\\n"""	2280:5:74397:74423	659680	12	True				
ANR	659966	Statement	"""graph [%s fontname=\\""%s\\"" %s];\\n"""	2281:5:74430:74463	659680	13	True				
ANR	659967	Statement	"""node [%s];\\n"""	2282:5:74470:74483	659680	14	True				
ANR	659968	Statement	"""edge [%s];\\n"""	2283:5:74490:74503	659680	15	True				
ANR	659969	Statement	","	2283:19:74504:74504	659680	16	True				
ANR	659970	Statement	gv_grph	2283:21:74506:74512	659680	17	True				
ANR	659971	Statement	","	2283:28:74513:74513	659680	18	True				
ANR	659972	Statement	font	2283:30:74515:74518	659680	19	True				
ANR	659973	Statement	","	2283:34:74519:74519	659680	20	True				
ANR	659974	Statement	gv_spline	2283:36:74521:74529	659680	21	True				
ANR	659975	Statement	","	2283:45:74530:74530	659680	22	True				
ANR	659976	Statement	gv_node	2284:5:74537:74543	659680	23	True				
ANR	659977	Statement	","	2284:12:74544:74544	659680	24	True				
ANR	659978	Statement	gv_edge	2284:14:74546:74552	659680	25	True				
ANR	659979	Statement	)	2284:21:74553:74553	659680	26	True				
ANR	659980	ExpressionStatement		2284:22:74554:74554	659680	27	True				
ANR	659981	BreakStatement	break ;	2286:2:74562:74567	659680	16	True				
ANR	659982	ExpressionStatement	first = 0	2288:1:74573:74582	659680	12	True				
ANR	659983	AssignmentExpression	first = 0		659680	0		=			
ANR	659984	Identifier	first		659680	0					
ANR	659985	PrimaryExpression	0		659680	1					
ANR	659986	IdentifierDeclStatement	ut64 base = UT64_MAX ;	2289:1:74585:74605	659680	13	True				
ANR	659987	IdentifierDecl	base = UT64_MAX		659680	0					
ANR	659988	IdentifierDeclType	ut64		659680	0					
ANR	659989	Identifier	base		659680	1					
ANR	659990	AssignmentExpression	base = UT64_MAX		659680	2		=			
ANR	659991	Identifier	UT64_MAX		659680	0					
ANR	659992	Identifier	UT64_MAX		659680	1					
ANR	659993	IdentifierDeclStatement	int iteration = 0 ;	2290:1:74608:74625	659680	14	True				
ANR	659994	IdentifierDecl	iteration = 0		659680	0					
ANR	659995	IdentifierDeclType	int		659680	0					
ANR	659996	Identifier	iteration		659680	1					
ANR	659997	AssignmentExpression	iteration = 0		659680	2		=			
ANR	659998	Identifier	iteration		659680	0					
ANR	659999	PrimaryExpression	0		659680	1					
ANR	660000	Label	repeat :	2291:0:74627:74633	659680	15	True				
ANR	660001	Identifier	repeat		659680	0					
ANR	660002	Statement	r_list_foreach	2292:1:74636:74649	659680	16	True				
ANR	660003	Statement	(	2292:16:74651:74651	659680	17	True				
ANR	660004	Statement	core	2292:17:74652:74655	659680	18	True				
ANR	660005	Statement	->	2292:21:74656:74657	659680	19	True				
ANR	660006	Statement	anal	2292:23:74658:74661	659680	20	True				
ANR	660007	Statement	->	2292:27:74662:74663	659680	21	True				
ANR	660008	Statement	fcns	2292:29:74664:74667	659680	22	True				
ANR	660009	Statement	","	2292:33:74668:74668	659680	23	True				
ANR	660010	Statement	iter	2292:35:74670:74673	659680	24	True				
ANR	660011	Statement	","	2292:39:74674:74674	659680	25	True				
ANR	660012	Statement	fcni	2292:41:74676:74679	659680	26	True				
ANR	660013	Statement	)	2292:45:74680:74680	659680	27	True				
ANR	660014	CompoundStatement		73:2:2099:2127	659680	28					
ANR	660015	IfStatement	if ( base == UT64_MAX )		659680	0					
ANR	660016	Condition	base == UT64_MAX	2293:6:74690:74705	659680	0	True				
ANR	660017	EqualityExpression	base == UT64_MAX		659680	0		==			
ANR	660018	Identifier	base		659680	0					
ANR	660019	Identifier	UT64_MAX		659680	1					
ANR	660020	CompoundStatement		60:24:1824:1824	659680	1					
ANR	660021	ExpressionStatement	base = fcni -> addr	2294:3:74713:74730	659680	0	True				
ANR	660022	AssignmentExpression	base = fcni -> addr		659680	0		=			
ANR	660023	Identifier	base		659680	0					
ANR	660024	PtrMemberAccess	fcni -> addr		659680	1					
ANR	660025	Identifier	fcni		659680	0					
ANR	660026	Identifier	addr		659680	1					
ANR	660027	IfStatement	if ( from != UT64_MAX && fcni -> addr < from )		659680	1					
ANR	660028	Condition	from != UT64_MAX && fcni -> addr < from	2296:6:74742:74778	659680	0	True				
ANR	660029	AndExpression	from != UT64_MAX && fcni -> addr < from		659680	0		&&			
ANR	660030	EqualityExpression	from != UT64_MAX		659680	0		!=			
ANR	660031	Identifier	from		659680	0					
ANR	660032	Identifier	UT64_MAX		659680	1					
ANR	660033	RelationalExpression	fcni -> addr < from		659680	1		<			
ANR	660034	PtrMemberAccess	fcni -> addr		659680	0					
ANR	660035	Identifier	fcni		659680	0					
ANR	660036	Identifier	addr		659680	1					
ANR	660037	Identifier	from		659680	1					
ANR	660038	CompoundStatement		63:45:1897:1897	659680	1					
ANR	660039	ContinueStatement	continue ;	2297:3:74786:74794	659680	0	True				
ANR	660040	IfStatement	if ( to != UT64_MAX && fcni -> addr > to )		659680	2					
ANR	660041	Condition	to != UT64_MAX && fcni -> addr > to	2299:6:74806:74838	659680	0	True				
ANR	660042	AndExpression	to != UT64_MAX && fcni -> addr > to		659680	0		&&			
ANR	660043	EqualityExpression	to != UT64_MAX		659680	0		!=			
ANR	660044	Identifier	to		659680	0					
ANR	660045	Identifier	UT64_MAX		659680	1					
ANR	660046	RelationalExpression	fcni -> addr > to		659680	1		>			
ANR	660047	PtrMemberAccess	fcni -> addr		659680	0					
ANR	660048	Identifier	fcni		659680	0					
ANR	660049	Identifier	addr		659680	1					
ANR	660050	Identifier	to		659680	1					
ANR	660051	CompoundStatement		66:41:1957:1957	659680	1					
ANR	660052	ContinueStatement	continue ;	2300:3:74846:74854	659680	0	True				
ANR	660053	IfStatement	if ( addr != UT64_MAX && addr != fcni -> addr )		659680	3					
ANR	660054	Condition	addr != UT64_MAX && addr != fcni -> addr	2302:6:74866:74903	659680	0	True				
ANR	660055	AndExpression	addr != UT64_MAX && addr != fcni -> addr		659680	0		&&			
ANR	660056	EqualityExpression	addr != UT64_MAX		659680	0		!=			
ANR	660057	Identifier	addr		659680	0					
ANR	660058	Identifier	UT64_MAX		659680	1					
ANR	660059	EqualityExpression	addr != fcni -> addr		659680	1		!=			
ANR	660060	Identifier	addr		659680	0					
ANR	660061	PtrMemberAccess	fcni -> addr		659680	1					
ANR	660062	Identifier	fcni		659680	0					
ANR	660063	Identifier	addr		659680	1					
ANR	660064	CompoundStatement		69:46:2022:2022	659680	1					
ANR	660065	ContinueStatement	continue ;	2303:3:74911:74919	659680	0	True				
ANR	660066	IdentifierDeclStatement	"RList * refs = r_anal_fcn_get_refs ( core -> anal , fcni ) ;"	2305:2:74927:74979	659680	4	True				
ANR	660067	IdentifierDecl	"* refs = r_anal_fcn_get_refs ( core -> anal , fcni )"		659680	0					
ANR	660068	IdentifierDeclType	RList *		659680	0					
ANR	660069	Identifier	refs		659680	1					
ANR	660070	AssignmentExpression	"* refs = r_anal_fcn_get_refs ( core -> anal , fcni )"		659680	2		=			
ANR	660071	Identifier	refs		659680	0					
ANR	660072	CallExpression	"r_anal_fcn_get_refs ( core -> anal , fcni )"		659680	1					
ANR	660073	Callee	r_anal_fcn_get_refs		659680	0					
ANR	660074	Identifier	r_anal_fcn_get_refs		659680	0					
ANR	660075	ArgumentList	core -> anal		659680	1					
ANR	660076	Argument	core -> anal		659680	0					
ANR	660077	PtrMemberAccess	core -> anal		659680	0					
ANR	660078	Identifier	core		659680	0					
ANR	660079	Identifier	anal		659680	1					
ANR	660080	Argument	fcni		659680	1					
ANR	660081	Identifier	fcni		659680	0					
ANR	660082	IdentifierDeclStatement	RList * calls = r_list_new ( ) ;	2306:2:74983:75011	659680	5	True				
ANR	660083	IdentifierDecl	* calls = r_list_new ( )		659680	0					
ANR	660084	IdentifierDeclType	RList *		659680	0					
ANR	660085	Identifier	calls		659680	1					
ANR	660086	AssignmentExpression	* calls = r_list_new ( )		659680	2		=			
ANR	660087	Identifier	calls		659680	0					
ANR	660088	CallExpression	r_list_new ( )		659680	1					
ANR	660089	Callee	r_list_new		659680	0					
ANR	660090	Identifier	r_list_new		659680	0					
ANR	660091	ArgumentList			659680	1					
ANR	660092	Statement	r_list_foreach	2308:2:75054:75067	659680	6	True				
ANR	660093	Statement	(	2308:17:75069:75069	659680	7	True				
ANR	660094	Statement	refs	2308:18:75070:75073	659680	8	True				
ANR	660095	Statement	","	2308:22:75074:75074	659680	9	True				
ANR	660096	Statement	iter2	2308:24:75076:75080	659680	10	True				
ANR	660097	Statement	","	2308:29:75081:75081	659680	11	True				
ANR	660098	Statement	fcnr	2308:31:75083:75086	659680	12	True				
ANR	660099	Statement	)	2308:35:75087:75087	659680	13	True				
ANR	660100	CompoundStatement		75:37:2205:2205	659680	14					
ANR	660101	IfStatement	"if ( fcnr -> type == 'C' && r_list_find ( calls , fcnr , ( RListComparator ) RAnalRef_cmp ) == NULL )"		659680	0					
ANR	660102	Condition	"fcnr -> type == 'C' && r_list_find ( calls , fcnr , ( RListComparator ) RAnalRef_cmp ) == NULL"	2310:7:75143:75226	659680	0	True				
ANR	660103	AndExpression	"fcnr -> type == 'C' && r_list_find ( calls , fcnr , ( RListComparator ) RAnalRef_cmp ) == NULL"		659680	0		&&			
ANR	660104	EqualityExpression	fcnr -> type == 'C'		659680	0		==			
ANR	660105	PtrMemberAccess	fcnr -> type		659680	0					
ANR	660106	Identifier	fcnr		659680	0					
ANR	660107	Identifier	type		659680	1					
ANR	660108	PrimaryExpression	'C'		659680	1					
ANR	660109	EqualityExpression	"r_list_find ( calls , fcnr , ( RListComparator ) RAnalRef_cmp ) == NULL"		659680	1		==			
ANR	660110	CallExpression	"r_list_find ( calls , fcnr , ( RListComparator ) RAnalRef_cmp )"		659680	0					
ANR	660111	Callee	r_list_find		659680	0					
ANR	660112	Identifier	r_list_find		659680	0					
ANR	660113	ArgumentList	calls		659680	1					
ANR	660114	Argument	calls		659680	0					
ANR	660115	Identifier	calls		659680	0					
ANR	660116	Argument	fcnr		659680	1					
ANR	660117	Identifier	fcnr		659680	0					
ANR	660118	Argument	( RListComparator ) RAnalRef_cmp		659680	2					
ANR	660119	CastExpression	( RListComparator ) RAnalRef_cmp		659680	0					
ANR	660120	CastTarget	RListComparator		659680	0					
ANR	660121	Identifier	RAnalRef_cmp		659680	1					
ANR	660122	Identifier	NULL		659680	1					
ANR	660123	CompoundStatement		77:93:2345:2345	659680	1					
ANR	660124	ExpressionStatement	"r_list_append ( calls , fcnr )"	2311:4:75235:75262	659680	0	True				
ANR	660125	CallExpression	"r_list_append ( calls , fcnr )"		659680	0					
ANR	660126	Callee	r_list_append		659680	0					
ANR	660127	Identifier	r_list_append		659680	0					
ANR	660128	ArgumentList	calls		659680	1					
ANR	660129	Argument	calls		659680	0					
ANR	660130	Identifier	calls		659680	0					
ANR	660131	Argument	fcnr		659680	1					
ANR	660132	Identifier	fcnr		659680	0					
ANR	660133	IfStatement	if ( r_list_empty ( calls ) )		659680	15					
ANR	660134	Condition	r_list_empty ( calls )	2314:6:75279:75297	659680	0	True				
ANR	660135	CallExpression	r_list_empty ( calls )		659680	0					
ANR	660136	Callee	r_list_empty		659680	0					
ANR	660137	Identifier	r_list_empty		659680	0					
ANR	660138	ArgumentList	calls		659680	1					
ANR	660139	Argument	calls		659680	0					
ANR	660140	Identifier	calls		659680	0					
ANR	660141	CompoundStatement		81:27:2416:2416	659680	1					
ANR	660142	ExpressionStatement	r_list_free ( refs )	2315:3:75305:75323	659680	0	True				
ANR	660143	CallExpression	r_list_free ( refs )		659680	0					
ANR	660144	Callee	r_list_free		659680	0					
ANR	660145	Identifier	r_list_free		659680	0					
ANR	660146	ArgumentList	refs		659680	1					
ANR	660147	Argument	refs		659680	0					
ANR	660148	Identifier	refs		659680	0					
ANR	660149	ExpressionStatement	r_list_free ( calls )	2316:3:75328:75347	659680	1	True				
ANR	660150	CallExpression	r_list_free ( calls )		659680	0					
ANR	660151	Callee	r_list_free		659680	0					
ANR	660152	Identifier	r_list_free		659680	0					
ANR	660153	ArgumentList	calls		659680	1					
ANR	660154	Argument	calls		659680	0					
ANR	660155	Identifier	calls		659680	0					
ANR	660156	ContinueStatement	continue ;	2317:3:75352:75360	659680	2	True				
ANR	660157	SwitchStatement	switch ( fmt )		659680	16					
ANR	660158	Condition	fmt	2319:10:75376:75378	659680	0	True				
ANR	660159	Identifier	fmt		659680	0					
ANR	660160	CompoundStatement		86:15:2497:2497	659680	1					
ANR	660161	Label	case R_GRAPH_FORMAT_NO :	2320:2:75385:75407	659680	0	True				
ANR	660162	Identifier	R_GRAPH_FORMAT_NO		659680	0					
ANR	660163	Statement	r_cons_printf	2321:3:75412:75424	659680	1	True				
ANR	660164	Statement	(	2321:17:75426:75426	659680	2	True				
ANR	660165	Statement	"""0x%08"""	2321:18:75427:75433	659680	3	True				
ANR	660166	Statement	PFMT64x	2321:25:75434:75440	659680	4	True				
ANR	660167	Statement	"""\\n"""	2321:32:75441:75444	659680	5	True				
ANR	660168	Statement	","	2321:36:75445:75445	659680	6	True				
ANR	660169	Statement	fcni	2321:38:75447:75450	659680	7	True				
ANR	660170	Statement	->	2321:42:75451:75452	659680	8	True				
ANR	660171	Statement	addr	2321:44:75453:75456	659680	9	True				
ANR	660172	Statement	)	2321:48:75457:75457	659680	10	True				
ANR	660173	ExpressionStatement		2321:49:75458:75458	659680	11	True				
ANR	660174	BreakStatement	break ;	2322:3:75463:75468	659680	12	True				
ANR	660175	Label	case R_GRAPH_FORMAT_GML :	2323:2:75472:75495	659680	13	True				
ANR	660176	Identifier	R_GRAPH_FORMAT_GML		659680	0					
ANR	660177	Label	case R_GRAPH_FORMAT_GMLFCN :	2324:2:75499:75525	659680	14	True				
ANR	660178	Identifier	R_GRAPH_FORMAT_GMLFCN		659680	0					
ANR	660179	CompoundStatement		92:3:2648:2704	659680	15					
ANR	660180	IdentifierDeclStatement	"RFlagItem * flag = r_flag_get_i ( core -> flags , fcni -> addr ) ;"	2325:3:75532:75588	659680	0	True				
ANR	660181	IdentifierDecl	"* flag = r_flag_get_i ( core -> flags , fcni -> addr )"		659680	0					
ANR	660182	IdentifierDeclType	RFlagItem *		659680	0					
ANR	660183	Identifier	flag		659680	1					
ANR	660184	AssignmentExpression	"* flag = r_flag_get_i ( core -> flags , fcni -> addr )"		659680	2		=			
ANR	660185	Identifier	flag		659680	0					
ANR	660186	CallExpression	"r_flag_get_i ( core -> flags , fcni -> addr )"		659680	1					
ANR	660187	Callee	r_flag_get_i		659680	0					
ANR	660188	Identifier	r_flag_get_i		659680	0					
ANR	660189	ArgumentList	core -> flags		659680	1					
ANR	660190	Argument	core -> flags		659680	0					
ANR	660191	PtrMemberAccess	core -> flags		659680	0					
ANR	660192	Identifier	core		659680	0					
ANR	660193	Identifier	flags		659680	1					
ANR	660194	Argument	fcni -> addr		659680	1					
ANR	660195	PtrMemberAccess	fcni -> addr		659680	0					
ANR	660196	Identifier	fcni		659680	0					
ANR	660197	Identifier	addr		659680	1					
ANR	660198	IfStatement	if ( iteration == 0 )		659680	1					
ANR	660199	Condition	iteration == 0	2326:7:75597:75610	659680	0	True				
ANR	660200	EqualityExpression	iteration == 0		659680	0		==			
ANR	660201	Identifier	iteration		659680	0					
ANR	660202	PrimaryExpression	0		659680	1					
ANR	660203	CompoundStatement		93:23:2729:2729	659680	1					
ANR	660204	Statement	char	2327:4:75619:75622	659680	0	True				
ANR	660205	Statement	*	2327:9:75624:75624	659680	1	True				
ANR	660206	Statement	msg	2327:10:75625:75627	659680	2	True				
ANR	660207	Statement	=	2327:14:75629:75629	659680	3	True				
ANR	660208	Statement	flag	2327:16:75631:75634	659680	4	True				
ANR	660209	Statement	?	2327:20:75635:75635	659680	5	True				
ANR	660210	Statement	strdup	2327:22:75637:75642	659680	6	True				
ANR	660211	Statement	(	2327:29:75644:75644	659680	7	True				
ANR	660212	Statement	flag	2327:30:75645:75648	659680	8	True				
ANR	660213	Statement	->	2327:34:75649:75650	659680	9	True				
ANR	660214	Statement	name	2327:36:75651:75654	659680	10	True				
ANR	660215	Statement	)	2327:40:75655:75655	659680	11	True				
ANR	660216	Statement	:	2327:41:75656:75656	659680	12	True				
ANR	660217	Statement	r_str_newf	2327:43:75658:75667	659680	13	True				
ANR	660218	Statement	(	2327:54:75669:75669	659680	14	True				
ANR	660219	Statement	"""0x%08"""	2327:55:75670:75676	659680	15	True				
ANR	660220	Statement	PFMT64x	2327:62:75677:75683	659680	16	True				
ANR	660221	Statement	","	2327:69:75684:75684	659680	17	True				
ANR	660222	Statement	fcni	2327:71:75686:75689	659680	18	True				
ANR	660223	Statement	->	2327:75:75690:75691	659680	19	True				
ANR	660224	Statement	addr	2327:77:75692:75695	659680	20	True				
ANR	660225	Statement	)	2327:81:75696:75696	659680	21	True				
ANR	660226	ExpressionStatement		2327:82:75697:75697	659680	22	True				
ANR	660227	Statement	r_cons_printf	2328:4:75703:75715	659680	23	True				
ANR	660228	Statement	(	2328:18:75717:75717	659680	24	True				
ANR	660229	Statement	"""  node [\\n"""	2328:19:75718:75729	659680	25	True				
ANR	660230	Statement	"""  id  %"""	2329:6:75737:75745	659680	26	True				
ANR	660231	Statement	PFMT64d	2329:15:75746:75752	659680	27	True				
ANR	660232	Statement	"""\\n"""	2329:22:75753:75756	659680	28	True				
ANR	660233	Statement	"""    label  \\""%s\\""\\n"""	2330:6:75764:75784	659680	29	True				
ANR	660234	Statement	"""  ]\\n"""	2331:6:75792:75798	659680	30	True				
ANR	660235	Statement	","	2331:13:75799:75799	659680	31	True				
ANR	660236	Statement	fcni	2331:15:75801:75804	659680	32	True				
ANR	660237	Statement	->	2331:19:75805:75806	659680	33	True				
ANR	660238	Statement	addr	2331:21:75807:75810	659680	34	True				
ANR	660239	Statement	-	2331:26:75812:75812	659680	35	True				
ANR	660240	Statement	base	2331:28:75814:75817	659680	36	True				
ANR	660241	Statement	","	2331:32:75818:75818	659680	37	True				
ANR	660242	Statement	msg	2331:34:75820:75822	659680	38	True				
ANR	660243	Statement	)	2331:37:75823:75823	659680	39	True				
ANR	660244	ExpressionStatement		2331:38:75824:75824	659680	40	True				
ANR	660245	ExpressionStatement	free ( msg )	2332:4:75830:75840	659680	41	True				
ANR	660246	CallExpression	free ( msg )		659680	0					
ANR	660247	Callee	free		659680	0					
ANR	660248	Identifier	free		659680	0					
ANR	660249	ArgumentList	msg		659680	1					
ANR	660250	Argument	msg		659680	0					
ANR	660251	Identifier	msg		659680	0					
ANR	660252	BreakStatement	break ;	2334:3:75850:75855	659680	2	True				
ANR	660253	Label	case R_GRAPH_FORMAT_JSON :	2336:2:75863:75887	659680	16	True				
ANR	660254	Identifier	R_GRAPH_FORMAT_JSON		659680	0					
ANR	660255	IfStatement	if ( usenames )		659680	17					
ANR	660256	Condition	usenames	2337:7:75896:75903	659680	0	True				
ANR	660257	Identifier	usenames		659680	0					
ANR	660258	CompoundStatement		104:17:3022:3022	659680	1					
ANR	660259	Statement	r_cons_printf	2338:4:75912:75924	659680	0	True				
ANR	660260	Statement	(	2338:18:75926:75926	659680	1	True				
ANR	660261	Statement	"""%s{\\""name\\"":\\""%s\\"", """	2338:19:75927:75948	659680	2	True				
ANR	660262	Statement	"""\\""size\\"":%d,\\""imports\\"":["""	2339:6:75956:75982	659680	3	True				
ANR	660263	Statement	","	2339:33:75983:75983	659680	4	True				
ANR	660264	Statement	first	2340:6:75991:75995	659680	5	True				
ANR	660265	Statement	?	2340:12:75997:75997	659680	6	True				
ANR	660266	Statement	""","""	2340:14:75999:76001	659680	7	True				
ANR	660267	Statement	:	2340:18:76003:76003	659680	8	True				
ANR	660268	Statement	""""""	2340:20:76005:76006	659680	9	True				
ANR	660269	Statement	","	2340:22:76007:76007	659680	10	True				
ANR	660270	Statement	fcni	2340:24:76009:76012	659680	11	True				
ANR	660271	Statement	->	2340:28:76013:76014	659680	12	True				
ANR	660272	Statement	name	2340:30:76015:76018	659680	13	True				
ANR	660273	Statement	","	2340:34:76019:76019	659680	14	True				
ANR	660274	Statement	r_anal_fcn_size	2341:6:76027:76041	659680	15	True				
ANR	660275	Statement	(	2341:22:76043:76043	659680	16	True				
ANR	660276	Statement	fcni	2341:23:76044:76047	659680	17	True				
ANR	660277	Statement	)	2341:27:76048:76048	659680	18	True				
ANR	660278	Statement	)	2341:28:76049:76049	659680	19	True				
ANR	660279	ExpressionStatement		2341:29:76050:76050	659680	20	True				
ANR	660280	ElseStatement	else		659680	0					
ANR	660281	CompoundStatement		109:10:3178:3178	659680	0					
ANR	660282	Statement	r_cons_printf	2343:4:76068:76080	659680	0	True				
ANR	660283	Statement	(	2343:18:76082:76082	659680	1	True				
ANR	660284	Statement	"""%s{\\""name\\"":\\""0x%08"""	2343:19:76083:76103	659680	2	True				
ANR	660285	Statement	PFMT64x	2343:41:76105:76111	659680	3	True				
ANR	660286	Statement	"""\\"", \\""size\\"":%d,\\""imports\\"":["""	2344:6:76119:76149	659680	4	True				
ANR	660287	Statement	","	2344:37:76150:76150	659680	5	True				
ANR	660288	Statement	first	2345:6:76158:76162	659680	6	True				
ANR	660289	Statement	?	2345:12:76164:76164	659680	7	True				
ANR	660290	Statement	""","""	2345:14:76166:76168	659680	8	True				
ANR	660291	Statement	:	2345:18:76170:76170	659680	9	True				
ANR	660292	Statement	""""""	2345:20:76172:76173	659680	10	True				
ANR	660293	Statement	","	2345:22:76174:76174	659680	11	True				
ANR	660294	Statement	fcni	2345:24:76176:76179	659680	12	True				
ANR	660295	Statement	->	2345:28:76180:76181	659680	13	True				
ANR	660296	Statement	addr	2345:30:76182:76185	659680	14	True				
ANR	660297	Statement	","	2345:34:76186:76186	659680	15	True				
ANR	660298	Statement	r_anal_fcn_size	2346:6:76194:76208	659680	16	True				
ANR	660299	Statement	(	2346:22:76210:76210	659680	17	True				
ANR	660300	Statement	fcni	2346:23:76211:76214	659680	18	True				
ANR	660301	Statement	)	2346:27:76215:76215	659680	19	True				
ANR	660302	Statement	)	2346:28:76216:76216	659680	20	True				
ANR	660303	ExpressionStatement		2346:29:76217:76217	659680	21	True				
ANR	660304	ExpressionStatement	first = 1	2348:3:76227:76236	659680	18	True				
ANR	660305	AssignmentExpression	first = 1		659680	0		=			
ANR	660306	Identifier	first		659680	0					
ANR	660307	PrimaryExpression	1		659680	1					
ANR	660308	BreakStatement	break ;	2349:3:76241:76246	659680	19	True				
ANR	660309	Label	case R_GRAPH_FORMAT_DOT :	2350:2:76250:76273	659680	20	True				
ANR	660310	Identifier	R_GRAPH_FORMAT_DOT		659680	0					
ANR	660311	Statement	r_cons_printf	2351:3:76278:76290	659680	21	True				
ANR	660312	Statement	(	2351:17:76292:76292	659680	22	True				
ANR	660313	Statement	"""  \\""0x%08"""	2351:18:76293:76303	659680	23	True				
ANR	660314	Statement	PFMT64x	2351:29:76304:76310	659680	24	True				
ANR	660315	Statement	"""\\"" """	2351:36:76311:76315	659680	25	True				
ANR	660316	Statement	"""[label=\\""%s\\"""""	2352:5:76322:76336	659680	26	True				
ANR	660317	Statement	""" URL=\\""%s/0x%08"""	2353:5:76343:76359	659680	27	True				
ANR	660318	Statement	PFMT64x	2353:22:76360:76366	659680	28	True				
ANR	660319	Statement	"""\\""];\\n"""	2353:29:76367:76374	659680	29	True				
ANR	660320	Statement	","	2353:37:76375:76375	659680	30	True				
ANR	660321	Statement	fcni	2354:5:76382:76385	659680	31	True				
ANR	660322	Statement	->	2354:9:76386:76387	659680	32	True				
ANR	660323	Statement	addr	2354:11:76388:76391	659680	33	True				
ANR	660324	Statement	","	2354:15:76392:76392	659680	34	True				
ANR	660325	Statement	fcni	2354:17:76394:76397	659680	35	True				
ANR	660326	Statement	->	2354:21:76398:76399	659680	36	True				
ANR	660327	Statement	name	2354:23:76400:76403	659680	37	True				
ANR	660328	Statement	","	2354:27:76404:76404	659680	38	True				
ANR	660329	Statement	fcni	2355:5:76411:76414	659680	39	True				
ANR	660330	Statement	->	2355:9:76415:76416	659680	40	True				
ANR	660331	Statement	name	2355:11:76417:76420	659680	41	True				
ANR	660332	Statement	","	2355:15:76421:76421	659680	42	True				
ANR	660333	Statement	fcni	2355:17:76423:76426	659680	43	True				
ANR	660334	Statement	->	2355:21:76427:76428	659680	44	True				
ANR	660335	Statement	addr	2355:23:76429:76432	659680	45	True				
ANR	660336	Statement	)	2355:27:76433:76433	659680	46	True				
ANR	660337	ExpressionStatement		2355:28:76434:76434	659680	47	True				
ANR	660338	ExpressionStatement	first2 = 0	2357:2:76442:76452	659680	17	True				
ANR	660339	AssignmentExpression	first2 = 0		659680	0		=			
ANR	660340	Identifier	first2		659680	0					
ANR	660341	PrimaryExpression	0		659680	1					
ANR	660342	Statement	r_list_foreach	2358:2:76456:76469	659680	18	True				
ANR	660343	Statement	(	2358:17:76471:76471	659680	19	True				
ANR	660344	Statement	calls	2358:18:76472:76476	659680	20	True				
ANR	660345	Statement	","	2358:23:76477:76477	659680	21	True				
ANR	660346	Statement	iter2	2358:25:76479:76483	659680	22	True				
ANR	660347	Statement	","	2358:30:76484:76484	659680	23	True				
ANR	660348	Statement	fcnr	2358:32:76486:76489	659680	24	True				
ANR	660349	Statement	)	2358:36:76490:76490	659680	25	True				
ANR	660350	CompoundStatement		127:3:3657:3713	659680	26					
ANR	660351	IdentifierDeclStatement	"RFlagItem * flag = r_flag_get_i ( core -> flags , fcnr -> addr ) ;"	2360:3:76541:76597	659680	0	True				
ANR	660352	IdentifierDecl	"* flag = r_flag_get_i ( core -> flags , fcnr -> addr )"		659680	0					
ANR	660353	IdentifierDeclType	RFlagItem *		659680	0					
ANR	660354	Identifier	flag		659680	1					
ANR	660355	AssignmentExpression	"* flag = r_flag_get_i ( core -> flags , fcnr -> addr )"		659680	2		=			
ANR	660356	Identifier	flag		659680	0					
ANR	660357	CallExpression	"r_flag_get_i ( core -> flags , fcnr -> addr )"		659680	1					
ANR	660358	Callee	r_flag_get_i		659680	0					
ANR	660359	Identifier	r_flag_get_i		659680	0					
ANR	660360	ArgumentList	core -> flags		659680	1					
ANR	660361	Argument	core -> flags		659680	0					
ANR	660362	PtrMemberAccess	core -> flags		659680	0					
ANR	660363	Identifier	core		659680	0					
ANR	660364	Identifier	flags		659680	1					
ANR	660365	Argument	fcnr -> addr		659680	1					
ANR	660366	PtrMemberAccess	fcnr -> addr		659680	0					
ANR	660367	Identifier	fcnr		659680	0					
ANR	660368	Identifier	addr		659680	1					
ANR	660369	Statement	char	2361:3:76602:76605	659680	1	True				
ANR	660370	Statement	*	2361:8:76607:76607	659680	2	True				
ANR	660371	Statement	fcnr_name	2361:9:76608:76616	659680	3	True				
ANR	660372	Statement	=	2361:19:76618:76618	659680	4	True				
ANR	660373	Statement	(	2361:21:76620:76620	659680	5	True				
ANR	660374	Statement	flag	2361:22:76621:76624	659680	6	True				
ANR	660375	Statement	&&	2361:27:76626:76627	659680	7	True				
ANR	660376	Statement	flag	2361:30:76629:76632	659680	8	True				
ANR	660377	Statement	->	2361:34:76633:76634	659680	9	True				
ANR	660378	Statement	name	2361:36:76635:76638	659680	10	True				
ANR	660379	Statement	)	2361:40:76639:76639	659680	11	True				
ANR	660380	Statement	?	2361:42:76641:76641	659680	12	True				
ANR	660381	Statement	flag	2361:44:76643:76646	659680	13	True				
ANR	660382	Statement	->	2361:48:76647:76648	659680	14	True				
ANR	660383	Label	name :	2361:50:76649:76654	659680	15	True				
ANR	660384	Identifier	name		659680	0					
ANR	660385	Statement	r_str_newf	2361:57:76656:76665	659680	16	True				
ANR	660386	Statement	(	2361:68:76667:76667	659680	17	True				
ANR	660387	Statement	"""unk.0x%"""	2361:69:76668:76676	659680	18	True				
ANR	660388	Statement	PFMT64x	2361:78:76677:76683	659680	19	True				
ANR	660389	Statement	","	2361:85:76684:76684	659680	20	True				
ANR	660390	Statement	fcnr	2361:87:76686:76689	659680	21	True				
ANR	660391	Statement	->	2361:91:76690:76691	659680	22	True				
ANR	660392	Statement	addr	2361:93:76692:76695	659680	23	True				
ANR	660393	Statement	)	2361:97:76696:76696	659680	24	True				
ANR	660394	ExpressionStatement		2361:98:76697:76697	659680	25	True				
ANR	660395	SwitchStatement	switch ( fmt )		659680	26					
ANR	660396	Condition	fmt	2362:10:76709:76711	659680	0	True				
ANR	660397	Identifier	fmt		659680	0					
ANR	660398	CompoundStatement		130:3:3833:3833	659680	1					
ANR	660399	Label	case R_GRAPH_FORMAT_GMLFCN :	2364:3:76722:76748	659680	0	True				
ANR	660400	Identifier	R_GRAPH_FORMAT_GMLFCN		659680	0					
ANR	660401	IfStatement	if ( iteration == 0 )		659680	1					
ANR	660402	Condition	iteration == 0	2365:8:76758:76771	659680	0	True				
ANR	660403	EqualityExpression	iteration == 0		659680	0		==			
ANR	660404	Identifier	iteration		659680	0					
ANR	660405	PrimaryExpression	0		659680	1					
ANR	660406	CompoundStatement		132:24:3890:3890	659680	1					
ANR	660407	Statement	r_cons_printf	2366:5:76781:76793	659680	0	True				
ANR	660408	Statement	(	2366:19:76795:76795	659680	1	True				
ANR	660409	Statement	"""  node [\\n"""	2366:20:76796:76807	659680	2	True				
ANR	660410	Statement	"""    id  %"""	2367:7:76816:76826	659680	3	True				
ANR	660411	Statement	PFMT64d	2367:18:76827:76833	659680	4	True				
ANR	660412	Statement	"""\\n"""	2367:25:76834:76837	659680	5	True				
ANR	660413	Statement	"""    label  \\""%s\\""\\n"""	2368:7:76846:76866	659680	6	True				
ANR	660414	Statement	"""  ]\\n"""	2369:7:76875:76881	659680	7	True				
ANR	660415	Statement	","	2369:14:76882:76882	659680	8	True				
ANR	660416	Statement	fcnr	2369:16:76884:76887	659680	9	True				
ANR	660417	Statement	->	2369:20:76888:76889	659680	10	True				
ANR	660418	Statement	addr	2369:22:76890:76893	659680	11	True				
ANR	660419	Statement	-	2369:27:76895:76895	659680	12	True				
ANR	660420	Statement	base	2369:29:76897:76900	659680	13	True				
ANR	660421	Statement	","	2369:33:76901:76901	659680	14	True				
ANR	660422	Statement	fcnr_name	2369:35:76903:76911	659680	15	True				
ANR	660423	Statement	)	2369:44:76912:76912	659680	16	True				
ANR	660424	ExpressionStatement		2369:45:76913:76913	659680	17	True				
ANR	660425	Statement	r_cons_printf	2370:5:76920:76932	659680	18	True				
ANR	660426	Statement	(	2370:19:76934:76934	659680	19	True				
ANR	660427	Statement	"""  edge [\\n"""	2370:20:76935:76946	659680	20	True				
ANR	660428	Statement	"""    source  %"""	2371:7:76955:76969	659680	21	True				
ANR	660429	Statement	PFMT64d	2371:22:76970:76976	659680	22	True				
ANR	660430	Statement	"""\\n"""	2371:29:76977:76980	659680	23	True				
ANR	660431	Statement	"""    target  %"""	2372:7:76989:77003	659680	24	True				
ANR	660432	Statement	PFMT64d	2372:22:77004:77010	659680	25	True				
ANR	660433	Statement	"""\\n"""	2372:29:77011:77014	659680	26	True				
ANR	660434	Statement	"""  ]\\n"""	2373:7:77023:77029	659680	27	True				
ANR	660435	Statement	","	2373:14:77030:77030	659680	28	True				
ANR	660436	Statement	fcni	2373:16:77032:77035	659680	29	True				
ANR	660437	Statement	->	2373:20:77036:77037	659680	30	True				
ANR	660438	Statement	addr	2373:22:77038:77041	659680	31	True				
ANR	660439	Statement	-	2373:26:77042:77042	659680	32	True				
ANR	660440	Statement	base	2373:27:77043:77046	659680	33	True				
ANR	660441	Statement	","	2373:31:77047:77047	659680	34	True				
ANR	660442	Statement	fcnr	2373:33:77049:77052	659680	35	True				
ANR	660443	Statement	->	2373:37:77053:77054	659680	36	True				
ANR	660444	Statement	addr	2373:39:77055:77058	659680	37	True				
ANR	660445	Statement	-	2373:43:77059:77059	659680	38	True				
ANR	660446	Statement	base	2373:44:77060:77063	659680	39	True				
ANR	660447	Statement	)	2373:48:77064:77064	659680	40	True				
ANR	660448	ExpressionStatement		2373:49:77065:77065	659680	41	True				
ANR	660449	Label	case R_GRAPH_FORMAT_GML :	2375:3:77076:77099	659680	2	True				
ANR	660450	Identifier	R_GRAPH_FORMAT_GML		659680	0					
ANR	660451	IfStatement	if ( iteration != 0 )		659680	3					
ANR	660452	Condition	iteration != 0	2376:8:77109:77122	659680	0	True				
ANR	660453	EqualityExpression	iteration != 0		659680	0		!=			
ANR	660454	Identifier	iteration		659680	0					
ANR	660455	PrimaryExpression	0		659680	1					
ANR	660456	CompoundStatement		143:24:4241:4241	659680	1					
ANR	660457	Statement	r_cons_printf	2377:5:77132:77144	659680	0	True				
ANR	660458	Statement	(	2377:19:77146:77146	659680	1	True				
ANR	660459	Statement	"""  edge [\\n"""	2377:20:77147:77158	659680	2	True				
ANR	660460	Statement	"""    source  %"""	2378:7:77167:77181	659680	3	True				
ANR	660461	Statement	PFMT64d	2378:22:77182:77188	659680	4	True				
ANR	660462	Statement	"""\\n"""	2378:29:77189:77192	659680	5	True				
ANR	660463	Statement	"""    target  %"""	2379:7:77201:77215	659680	6	True				
ANR	660464	Statement	PFMT64d	2379:22:77216:77222	659680	7	True				
ANR	660465	Statement	"""\\n"""	2379:29:77223:77226	659680	8	True				
ANR	660466	Statement	"""  ]\\n"""	2380:7:77235:77241	659680	9	True				
ANR	660467	Statement	","	2380:14:77242:77242	659680	10	True				
ANR	660468	Statement	fcni	2380:16:77244:77247	659680	11	True				
ANR	660469	Statement	->	2380:20:77248:77249	659680	12	True				
ANR	660470	Statement	addr	2380:22:77250:77253	659680	13	True				
ANR	660471	Statement	-	2380:26:77254:77254	659680	14	True				
ANR	660472	Statement	base	2380:27:77255:77258	659680	15	True				
ANR	660473	Statement	","	2380:31:77259:77259	659680	16	True				
ANR	660474	Statement	fcnr	2380:33:77261:77264	659680	17	True				
ANR	660475	Statement	->	2380:37:77265:77266	659680	18	True				
ANR	660476	Statement	addr	2380:39:77267:77270	659680	19	True				
ANR	660477	Statement	-	2380:43:77271:77271	659680	20	True				
ANR	660478	Statement	base	2380:44:77272:77275	659680	21	True				
ANR	660479	Statement	)	2380:48:77276:77276	659680	22	True				
ANR	660480	ExpressionStatement		2380:49:77277:77277	659680	23	True				
ANR	660481	BreakStatement	break ;	2382:4:77303:77308	659680	4	True				
ANR	660482	Label	case R_GRAPH_FORMAT_DOT :	2383:3:77313:77336	659680	5	True				
ANR	660483	Identifier	R_GRAPH_FORMAT_DOT		659680	0					
ANR	660484	Statement	r_cons_printf	2384:4:77342:77354	659680	6	True				
ANR	660485	Statement	(	2384:18:77356:77356	659680	7	True				
ANR	660486	Statement	"""  \\""0x%08"""	2384:19:77357:77367	659680	8	True				
ANR	660487	Statement	PFMT64x	2384:30:77368:77374	659680	9	True				
ANR	660488	Statement	"""\\"" -> \\""0x%08"""	2384:37:77375:77389	659680	10	True				
ANR	660489	Statement	PFMT64x	2384:52:77390:77396	659680	11	True				
ANR	660490	Statement	"""\\"" """	2384:59:77397:77401	659680	12	True				
ANR	660491	Statement	"""[color=\\""%s\\"" URL=\\""%s/0x%08"""	2385:6:77409:77438	659680	13	True				
ANR	660492	Statement	PFMT64x	2385:36:77439:77445	659680	14	True				
ANR	660493	Statement	"""\\""];\\n"""	2385:43:77446:77453	659680	15	True				
ANR	660494	Statement	","	2385:51:77454:77454	659680	16	True				
ANR	660495	Statement	fcni	2387:6:77530:77533	659680	17	True				
ANR	660496	Statement	->	2387:10:77534:77535	659680	18	True				
ANR	660497	Statement	addr	2387:12:77536:77539	659680	19	True				
ANR	660498	Statement	","	2387:16:77540:77540	659680	20	True				
ANR	660499	Statement	fcnr	2387:18:77542:77545	659680	21	True				
ANR	660500	Statement	->	2387:22:77546:77547	659680	22	True				
ANR	660501	Statement	addr	2387:24:77548:77551	659680	23	True				
ANR	660502	Statement	","	2387:28:77552:77552	659680	24	True				
ANR	660503	Statement	"""#61afef"""	2388:6:77575:77583	659680	25	True				
ANR	660504	Statement	","	2388:15:77584:77584	659680	26	True				
ANR	660505	Statement	fcnr_name	2389:6:77592:77600	659680	27	True				
ANR	660506	Statement	","	2389:15:77601:77601	659680	28	True				
ANR	660507	Statement	fcnr	2389:17:77603:77606	659680	29	True				
ANR	660508	Statement	->	2389:21:77607:77608	659680	30	True				
ANR	660509	Statement	addr	2389:23:77609:77612	659680	31	True				
ANR	660510	Statement	)	2389:27:77613:77613	659680	32	True				
ANR	660511	ExpressionStatement		2389:28:77614:77614	659680	33	True				
ANR	660512	Statement	r_cons_printf	2390:4:77620:77632	659680	34	True				
ANR	660513	Statement	(	2390:18:77634:77634	659680	35	True				
ANR	660514	Statement	"""  \\""0x%08"""	2390:19:77635:77645	659680	36	True				
ANR	660515	Statement	PFMT64x	2390:30:77646:77652	659680	37	True				
ANR	660516	Statement	"""\\"" """	2390:37:77653:77657	659680	38	True				
ANR	660517	Statement	"""[label=\\""%s\\"""""	2391:6:77665:77679	659680	39	True				
ANR	660518	Statement	""" URL=\\""%s/0x%08"""	2392:6:77687:77703	659680	40	True				
ANR	660519	Statement	PFMT64x	2392:23:77704:77710	659680	41	True				
ANR	660520	Statement	"""\\""];\\n"""	2392:30:77711:77718	659680	42	True				
ANR	660521	Statement	","	2392:38:77719:77719	659680	43	True				
ANR	660522	Statement	fcnr	2393:6:77727:77730	659680	44	True				
ANR	660523	Statement	->	2393:10:77731:77732	659680	45	True				
ANR	660524	Statement	addr	2393:12:77733:77736	659680	46	True				
ANR	660525	Statement	","	2393:16:77737:77737	659680	47	True				
ANR	660526	Statement	fcnr_name	2393:18:77739:77747	659680	48	True				
ANR	660527	Statement	","	2393:27:77748:77748	659680	49	True				
ANR	660528	Statement	fcnr_name	2394:6:77756:77764	659680	50	True				
ANR	660529	Statement	","	2394:15:77765:77765	659680	51	True				
ANR	660530	Statement	fcnr	2394:17:77767:77770	659680	52	True				
ANR	660531	Statement	->	2394:21:77771:77772	659680	53	True				
ANR	660532	Statement	addr	2394:23:77773:77776	659680	54	True				
ANR	660533	Statement	)	2394:27:77777:77777	659680	55	True				
ANR	660534	ExpressionStatement		2394:28:77778:77778	659680	56	True				
ANR	660535	BreakStatement	break ;	2395:4:77784:77789	659680	57	True				
ANR	660536	Label	case R_GRAPH_FORMAT_JSON :	2396:3:77794:77818	659680	58	True				
ANR	660537	Identifier	R_GRAPH_FORMAT_JSON		659680	0					
ANR	660538	IfStatement	if ( usenames )		659680	59					
ANR	660539	Condition	usenames	2397:8:77828:77835	659680	0	True				
ANR	660540	Identifier	usenames		659680	0					
ANR	660541	CompoundStatement		164:18:4954:4954	659680	1					
ANR	660542	ExpressionStatement	"r_cons_printf ( ""%s\\""%s\\"""" , first2 ? "","" : """" , fcnr_name )"	2398:5:77845:77897	659680	0	True				
ANR	660543	CallExpression	"r_cons_printf ( ""%s\\""%s\\"""" , first2 ? "","" : """" , fcnr_name )"		659680	0					
ANR	660544	Callee	r_cons_printf		659680	0					
ANR	660545	Identifier	r_cons_printf		659680	0					
ANR	660546	ArgumentList	"""%s\\""%s\\"""""		659680	1					
ANR	660547	Argument	"""%s\\""%s\\"""""		659680	0					
ANR	660548	PrimaryExpression	"""%s\\""%s\\"""""		659680	0					
ANR	660549	Argument	"first2 ? "","" : """""		659680	1					
ANR	660550	ConditionalExpression	"first2 ? "","" : """""		659680	0					
ANR	660551	Condition	first2		659680	0					
ANR	660552	Identifier	first2		659680	0					
ANR	660553	PrimaryExpression	""","""		659680	1					
ANR	660554	PrimaryExpression	""""""		659680	2					
ANR	660555	Argument	fcnr_name		659680	2					
ANR	660556	Identifier	fcnr_name		659680	0					
ANR	660557	ElseStatement	else		659680	0					
ANR	660558	CompoundStatement		167:9:5030:5030	659680	0					
ANR	660559	Statement	r_cons_printf	2401:5:77921:77933	659680	0	True				
ANR	660560	Statement	(	2401:19:77935:77935	659680	1	True				
ANR	660561	Statement	"""%s\\""0x%08"""	2401:20:77936:77946	659680	2	True				
ANR	660562	Statement	PFMT64x	2401:31:77947:77953	659680	3	True				
ANR	660563	Statement	"""\\"""""	2401:38:77954:77957	659680	4	True				
ANR	660564	Statement	","	2401:42:77958:77958	659680	5	True				
ANR	660565	Statement	first2	2401:44:77960:77965	659680	6	True				
ANR	660566	Statement	?	2401:50:77966:77966	659680	7	True				
ANR	660567	Statement	""","""	2401:51:77967:77969	659680	8	True				
ANR	660568	Statement	:	2401:54:77970:77970	659680	9	True				
ANR	660569	Statement	""""""	2401:55:77971:77972	659680	10	True				
ANR	660570	Statement	","	2401:57:77973:77973	659680	11	True				
ANR	660571	Statement	fcnr_name	2401:59:77975:77983	659680	12	True				
ANR	660572	Statement	)	2401:68:77984:77984	659680	13	True				
ANR	660573	ExpressionStatement		2401:69:77985:77985	659680	14	True				
ANR	660574	BreakStatement	break ;	2403:4:77997:78002	659680	60	True				
ANR	660575	Label	default :	2404:3:78007:78014	659680	61	True				
ANR	660576	Identifier	default		659680	0					
ANR	660577	IfStatement	if ( refgraph || fcnr -> type == R_ANAL_REF_TYPE_CALL )		659680	62					
ANR	660578	Condition	refgraph || fcnr -> type == R_ANAL_REF_TYPE_CALL	2405:8:78024:78069	659680	0	True				
ANR	660579	OrExpression	refgraph || fcnr -> type == R_ANAL_REF_TYPE_CALL		659680	0		||			
ANR	660580	Identifier	refgraph		659680	0					
ANR	660581	EqualityExpression	fcnr -> type == R_ANAL_REF_TYPE_CALL		659680	1		==			
ANR	660582	PtrMemberAccess	fcnr -> type		659680	0					
ANR	660583	Identifier	fcnr		659680	0					
ANR	660584	Identifier	type		659680	1					
ANR	660585	Identifier	R_ANAL_REF_TYPE_CALL		659680	1					
ANR	660586	CompoundStatement		172:56:5188:5188	659680	1					
ANR	660587	ExpressionStatement	"r_cons_printf ( ""agn %s\\n"" , fcni -> name )"	2407:5:78130:78168	659680	0	True				
ANR	660588	CallExpression	"r_cons_printf ( ""agn %s\\n"" , fcni -> name )"		659680	0					
ANR	660589	Callee	r_cons_printf		659680	0					
ANR	660590	Identifier	r_cons_printf		659680	0					
ANR	660591	ArgumentList	"""agn %s\\n"""		659680	1					
ANR	660592	Argument	"""agn %s\\n"""		659680	0					
ANR	660593	PrimaryExpression	"""agn %s\\n"""		659680	0					
ANR	660594	Argument	fcni -> name		659680	1					
ANR	660595	PtrMemberAccess	fcni -> name		659680	0					
ANR	660596	Identifier	fcni		659680	0					
ANR	660597	Identifier	name		659680	1					
ANR	660598	ExpressionStatement	"r_cons_printf ( ""agn %s\\n"" , fcnr_name )"	2408:5:78175:78212	659680	1	True				
ANR	660599	CallExpression	"r_cons_printf ( ""agn %s\\n"" , fcnr_name )"		659680	0					
ANR	660600	Callee	r_cons_printf		659680	0					
ANR	660601	Identifier	r_cons_printf		659680	0					
ANR	660602	ArgumentList	"""agn %s\\n"""		659680	1					
ANR	660603	Argument	"""agn %s\\n"""		659680	0					
ANR	660604	PrimaryExpression	"""agn %s\\n"""		659680	0					
ANR	660605	Argument	fcnr_name		659680	1					
ANR	660606	Identifier	fcnr_name		659680	0					
ANR	660607	ExpressionStatement	"r_cons_printf ( ""age %s %s\\n"" , fcni -> name , fcnr_name )"	2409:5:78219:78271	659680	2	True				
ANR	660608	CallExpression	"r_cons_printf ( ""age %s %s\\n"" , fcni -> name , fcnr_name )"		659680	0					
ANR	660609	Callee	r_cons_printf		659680	0					
ANR	660610	Identifier	r_cons_printf		659680	0					
ANR	660611	ArgumentList	"""age %s %s\\n"""		659680	1					
ANR	660612	Argument	"""age %s %s\\n"""		659680	0					
ANR	660613	PrimaryExpression	"""age %s %s\\n"""		659680	0					
ANR	660614	Argument	fcni -> name		659680	1					
ANR	660615	PtrMemberAccess	fcni -> name		659680	0					
ANR	660616	Identifier	fcni		659680	0					
ANR	660617	Identifier	name		659680	1					
ANR	660618	Argument	fcnr_name		659680	2					
ANR	660619	Identifier	fcnr_name		659680	0					
ANR	660620	ElseStatement	else		659680	0					
ANR	660621	CompoundStatement		177:11:5400:5400	659680	0					
ANR	660622	Statement	r_cons_printf	2411:5:78291:78303	659680	0	True				
ANR	660623	Statement	(	2411:19:78305:78305	659680	1	True				
ANR	660624	Statement	"""# - 0x%08"""	2411:20:78306:78316	659680	2	True				
ANR	660625	Statement	PFMT64x	2411:31:78317:78323	659680	3	True				
ANR	660626	Statement	""" (%c)\\n"""	2411:38:78324:78332	659680	4	True				
ANR	660627	Statement	","	2411:47:78333:78333	659680	5	True				
ANR	660628	Statement	fcnr	2411:49:78335:78338	659680	6	True				
ANR	660629	Statement	->	2411:53:78339:78340	659680	7	True				
ANR	660630	Statement	addr	2411:55:78341:78344	659680	8	True				
ANR	660631	Statement	","	2411:59:78345:78345	659680	9	True				
ANR	660632	Statement	fcnr	2411:61:78347:78350	659680	10	True				
ANR	660633	Statement	->	2411:65:78351:78352	659680	11	True				
ANR	660634	Statement	type	2411:67:78353:78356	659680	12	True				
ANR	660635	Statement	)	2411:71:78357:78357	659680	13	True				
ANR	660636	ExpressionStatement		2411:72:78358:78358	659680	14	True				
ANR	660637	IfStatement	if ( ! ( flag && flag -> name ) )		659680	27					
ANR	660638	Condition	! ( flag && flag -> name )	2414:7:78378:78398	659680	0	True				
ANR	660639	UnaryOperationExpression	! ( flag && flag -> name )		659680	0					
ANR	660640	UnaryOperator	!		659680	0					
ANR	660641	AndExpression	flag && flag -> name		659680	1		&&			
ANR	660642	Identifier	flag		659680	0					
ANR	660643	PtrMemberAccess	flag -> name		659680	1					
ANR	660644	Identifier	flag		659680	0					
ANR	660645	Identifier	name		659680	1					
ANR	660646	CompoundStatement		181:30:5517:5517	659680	1					
ANR	660647	ExpressionStatement	free ( fcnr_name )	2415:4:78407:78422	659680	0	True				
ANR	660648	CallExpression	free ( fcnr_name )		659680	0					
ANR	660649	Callee	free		659680	0					
ANR	660650	Identifier	free		659680	0					
ANR	660651	ArgumentList	fcnr_name		659680	1					
ANR	660652	Argument	fcnr_name		659680	0					
ANR	660653	Identifier	fcnr_name		659680	0					
ANR	660654	ExpressionStatement	first2 = 1	2417:3:78432:78442	659680	28	True				
ANR	660655	AssignmentExpression	first2 = 1		659680	0		=			
ANR	660656	Identifier	first2		659680	0					
ANR	660657	PrimaryExpression	1		659680	1					
ANR	660658	ExpressionStatement	r_list_free ( refs )	2419:2:78450:78468	659680	27	True				
ANR	660659	CallExpression	r_list_free ( refs )		659680	0					
ANR	660660	Callee	r_list_free		659680	0					
ANR	660661	Identifier	r_list_free		659680	0					
ANR	660662	ArgumentList	refs		659680	1					
ANR	660663	Argument	refs		659680	0					
ANR	660664	Identifier	refs		659680	0					
ANR	660665	ExpressionStatement	r_list_free ( calls )	2420:2:78472:78491	659680	28	True				
ANR	660666	CallExpression	r_list_free ( calls )		659680	0					
ANR	660667	Callee	r_list_free		659680	0					
ANR	660668	Identifier	r_list_free		659680	0					
ANR	660669	ArgumentList	calls		659680	1					
ANR	660670	Argument	calls		659680	0					
ANR	660671	Identifier	calls		659680	0					
ANR	660672	IfStatement	if ( fmt == R_GRAPH_FORMAT_JSON )		659680	29					
ANR	660673	Condition	fmt == R_GRAPH_FORMAT_JSON	2421:6:78499:78524	659680	0	True				
ANR	660674	EqualityExpression	fmt == R_GRAPH_FORMAT_JSON		659680	0		==			
ANR	660675	Identifier	fmt		659680	0					
ANR	660676	Identifier	R_GRAPH_FORMAT_JSON		659680	1					
ANR	660677	CompoundStatement		188:34:5643:5643	659680	1					
ANR	660678	ExpressionStatement	"r_cons_printf ( ""]}"" )"	2422:3:78532:78552	659680	0	True				
ANR	660679	CallExpression	"r_cons_printf ( ""]}"" )"		659680	0					
ANR	660680	Callee	r_cons_printf		659680	0					
ANR	660681	Identifier	r_cons_printf		659680	0					
ANR	660682	ArgumentList	"""]}"""		659680	1					
ANR	660683	Argument	"""]}"""		659680	0					
ANR	660684	PrimaryExpression	"""]}"""		659680	0					
ANR	660685	IfStatement	if ( iteration == 0 && fmt == R_GRAPH_FORMAT_GML )		659680	29					
ANR	660686	Condition	iteration == 0 && fmt == R_GRAPH_FORMAT_GML	2425:5:78566:78608	659680	0	True				
ANR	660687	AndExpression	iteration == 0 && fmt == R_GRAPH_FORMAT_GML		659680	0		&&			
ANR	660688	EqualityExpression	iteration == 0		659680	0		==			
ANR	660689	Identifier	iteration		659680	0					
ANR	660690	PrimaryExpression	0		659680	1					
ANR	660691	EqualityExpression	fmt == R_GRAPH_FORMAT_GML		659680	1		==			
ANR	660692	Identifier	fmt		659680	0					
ANR	660693	Identifier	R_GRAPH_FORMAT_GML		659680	1					
ANR	660694	CompoundStatement		192:50:5727:5727	659680	1					
ANR	660695	ExpressionStatement	iteration ++	2426:2:78615:78626	659680	0	True				
ANR	660696	PostIncDecOperationExpression	iteration ++		659680	0					
ANR	660697	Identifier	iteration		659680	0					
ANR	660698	IncDec	++		659680	1					
ANR	660699	GotoStatement	goto repeat ;	2427:2:78630:78641	659680	1	True				
ANR	660700	Identifier	repeat		659680	0					
ANR	660701	IfStatement	if ( iteration == 0 && fmt == R_GRAPH_FORMAT_GMLFCN )		659680	30					
ANR	660702	Condition	iteration == 0 && fmt == R_GRAPH_FORMAT_GMLFCN	2429:5:78651:78696	659680	0	True				
ANR	660703	AndExpression	iteration == 0 && fmt == R_GRAPH_FORMAT_GMLFCN		659680	0		&&			
ANR	660704	EqualityExpression	iteration == 0		659680	0		==			
ANR	660705	Identifier	iteration		659680	0					
ANR	660706	PrimaryExpression	0		659680	1					
ANR	660707	EqualityExpression	fmt == R_GRAPH_FORMAT_GMLFCN		659680	1		==			
ANR	660708	Identifier	fmt		659680	0					
ANR	660709	Identifier	R_GRAPH_FORMAT_GMLFCN		659680	1					
ANR	660710	CompoundStatement		196:53:5815:5815	659680	1					
ANR	660711	ExpressionStatement	iteration ++	2430:2:78703:78714	659680	0	True				
ANR	660712	PostIncDecOperationExpression	iteration ++		659680	0					
ANR	660713	Identifier	iteration		659680	0					
ANR	660714	IncDec	++		659680	1					
ANR	660715	SwitchStatement	switch ( fmt )		659680	31					
ANR	660716	Condition	fmt	2432:8:78727:78729	659680	0	True				
ANR	660717	Identifier	fmt		659680	0					
ANR	660718	CompoundStatement		200:1:5849:5849	659680	1					
ANR	660719	Label	case R_GRAPH_FORMAT_GML :	2434:1:78736:78759	659680	0	True				
ANR	660720	Identifier	R_GRAPH_FORMAT_GML		659680	0					
ANR	660721	Label	case R_GRAPH_FORMAT_GMLFCN :	2435:1:78762:78788	659680	1	True				
ANR	660722	Identifier	R_GRAPH_FORMAT_GMLFCN		659680	0					
ANR	660723	Label	case R_GRAPH_FORMAT_JSON :	2436:1:78791:78815	659680	2	True				
ANR	660724	Identifier	R_GRAPH_FORMAT_JSON		659680	0					
ANR	660725	ExpressionStatement	"r_cons_printf ( ""]\\n"" )"	2437:2:78819:78840	659680	3	True				
ANR	660726	CallExpression	"r_cons_printf ( ""]\\n"" )"		659680	0					
ANR	660727	Callee	r_cons_printf		659680	0					
ANR	660728	Identifier	r_cons_printf		659680	0					
ANR	660729	ArgumentList	"""]\\n"""		659680	1					
ANR	660730	Argument	"""]\\n"""		659680	0					
ANR	660731	PrimaryExpression	"""]\\n"""		659680	0					
ANR	660732	BreakStatement	break ;	2438:2:78844:78849	659680	4	True				
ANR	660733	Label	case R_GRAPH_FORMAT_DOT :	2439:1:78852:78875	659680	5	True				
ANR	660734	Identifier	R_GRAPH_FORMAT_DOT		659680	0					
ANR	660735	ExpressionStatement	"r_cons_printf ( ""}\\n"" )"	2440:2:78879:78900	659680	6	True				
ANR	660736	CallExpression	"r_cons_printf ( ""}\\n"" )"		659680	0					
ANR	660737	Callee	r_cons_printf		659680	0					
ANR	660738	Identifier	r_cons_printf		659680	0					
ANR	660739	ArgumentList	"""}\\n"""		659680	1					
ANR	660740	Argument	"""}\\n"""		659680	0					
ANR	660741	PrimaryExpression	"""}\\n"""		659680	0					
ANR	660742	BreakStatement	break ;	2441:2:78904:78909	659680	7	True				
ANR	660743	ReturnType	R_API void		659680	1					
ANR	660744	Identifier	r_core_anal_callgraph		659680	2					
ANR	660745	ParameterList	"RCore * core , ut64 addr , int fmt"		659680	3					
ANR	660746	Parameter	RCore * core	2234:33:72850:72860	659680	0	True				
ANR	660747	ParameterType	RCore *		659680	0					
ANR	660748	Identifier	core		659680	1					
ANR	660749	Parameter	ut64 addr	2234:46:72863:72871	659680	1	True				
ANR	660750	ParameterType	ut64		659680	0					
ANR	660751	Identifier	addr		659680	1					
ANR	660752	Parameter	int fmt	2234:57:72874:72880	659680	2	True				
ANR	660753	ParameterType	int		659680	0					
ANR	660754	Identifier	fmt		659680	1					
ANR	660755	CFGEntryNode	ENTRY		659680		True				
ANR	660756	CFGExitNode	EXIT		659680		True				
ANR	660757	CFGErrorNode	ERROR		659680		True				
ANR	660758	Symbol	msg		659680						
ANR	660759	Symbol	fcni -> name		659680						
ANR	660760	Symbol	first2		659680						
ANR	660761	Symbol	fmt		659680						
ANR	660762	Symbol	refgraph		659680						
ANR	660763	Symbol	fcni		659680						
ANR	660764	Symbol	* gv_node		659680						
ANR	660765	Symbol	from		659680						
ANR	660766	Symbol	gv_grph		659680						
ANR	660767	Symbol	r_flag_get_i		659680						
ANR	660768	Symbol	NULL		659680						
ANR	660769	Symbol	iter		659680						
ANR	660770	Symbol	R_GRAPH_FORMAT_GMLFCN		659680						
ANR	660771	Symbol	R_GRAPH_FORMAT_JSON		659680						
ANR	660772	Symbol	fcni -> addr		659680						
ANR	660773	Symbol	r_cons_singleton ( ) -> is_html		659680						
ANR	660774	Symbol	r_anal_fcn_get_refs		659680						
ANR	660775	Symbol	core		659680						
ANR	660776	Symbol	r_list_find		659680						
ANR	660777	Symbol	* gv_grph		659680						
ANR	660778	Symbol	is_html		659680						
ANR	660779	Symbol	r_config_get_i		659680						
ANR	660780	Symbol	r_list_empty		659680						
ANR	660781	Symbol	* gv_spline		659680						
ANR	660782	Symbol	* flag		659680						
ANR	660783	Symbol	fcnr -> addr		659680						
ANR	660784	Symbol	R_GRAPH_FORMAT_GML		659680						
ANR	660785	Symbol	gv_node		659680						
ANR	660786	Symbol	flag		659680						
ANR	660787	Symbol	* core		659680						
ANR	660788	Symbol	r_config_get		659680						
ANR	660789	Symbol	usenames		659680						
ANR	660790	Symbol	core -> anal		659680						
ANR	660791	Symbol	fcnr -> type		659680						
ANR	660792	Symbol	* gv_edge		659680						
ANR	660793	Symbol	r_cons_singleton		659680						
ANR	660794	Symbol	iteration		659680						
ANR	660795	Symbol	addr		659680						
ANR	660796	Symbol	UT64_MAX		659680						
ANR	660797	Symbol	R_ANAL_REF_TYPE_CALL		659680						
ANR	660798	Symbol	core -> config		659680						
ANR	660799	Symbol	RAnalRef_cmp		659680						
ANR	660800	Symbol	flag -> name		659680						
ANR	660801	Symbol	iter2		659680						
ANR	660802	Symbol	* fcnr		659680						
ANR	660803	Symbol	gv_edge		659680						
ANR	660804	Symbol	core -> flags		659680						
ANR	660805	Symbol	fcnr		659680						
ANR	660806	Symbol	* fcni		659680						
ANR	660807	Symbol	refs		659680						
ANR	660808	Symbol	calls		659680						
ANR	660809	Symbol	fcnr_name		659680						
ANR	660810	Symbol	to		659680						
ANR	660811	Symbol	gv_spline		659680						
ANR	660812	Symbol	* r_cons_singleton		659680						
ANR	660813	Symbol	first		659680						
ANR	660814	Symbol	font		659680						
ANR	660815	Symbol	base		659680						
ANR	660816	Symbol	r_list_new		659680						
ANR	660817	Function	fcn_list_bbs	2445:0:78917:79879							
ANR	660818	FunctionDef	fcn_list_bbs (RAnalFunction * fcn)		660817	0					
ANR	660819	CompoundStatement		2445:45:78962:79879	660817	0					
ANR	660820	IdentifierDeclStatement	RAnalBlock * bbi ;	2446:1:78965:78980	660817	0	True				
ANR	660821	IdentifierDecl	* bbi		660817	0					
ANR	660822	IdentifierDeclType	RAnalBlock *		660817	0					
ANR	660823	Identifier	bbi		660817	1					
ANR	660824	IdentifierDeclStatement	RListIter * iter ;	2447:1:78983:78998	660817	1	True				
ANR	660825	IdentifierDecl	* iter		660817	0					
ANR	660826	IdentifierDeclType	RListIter *		660817	0					
ANR	660827	Identifier	iter		660817	1					
ANR	660828	Statement	r_list_foreach	2449:1:79002:79015	660817	2	True				
ANR	660829	Statement	(	2449:16:79017:79017	660817	3	True				
ANR	660830	Statement	fcn	2449:17:79018:79020	660817	4	True				
ANR	660831	Statement	->	2449:20:79021:79022	660817	5	True				
ANR	660832	Statement	bbs	2449:22:79023:79025	660817	6	True				
ANR	660833	Statement	","	2449:25:79026:79026	660817	7	True				
ANR	660834	Statement	iter	2449:27:79028:79031	660817	8	True				
ANR	660835	Statement	","	2449:31:79032:79032	660817	9	True				
ANR	660836	Statement	bbi	2449:33:79034:79036	660817	10	True				
ANR	660837	Statement	)	2449:36:79037:79037	660817	11	True				
ANR	660838	CompoundStatement		5:38:76:76	660817	12					
ANR	660839	Statement	r_cons_printf	2450:2:79043:79055	660817	0	True				
ANR	660840	Statement	(	2450:16:79057:79057	660817	1	True				
ANR	660841	Statement	"""afb+ 0x%08"""	2450:17:79058:79069	660817	2	True				
ANR	660842	Statement	PFMT64x	2450:30:79071:79077	660817	3	True				
ANR	660843	Statement	""" 0x%08"""	2450:38:79079:79086	660817	4	True				
ANR	660844	Statement	PFMT64x	2450:47:79088:79094	660817	5	True				
ANR	660845	Statement	""" %d """	2450:55:79096:79101	660817	6	True				
ANR	660846	Statement	","	2450:61:79102:79102	660817	7	True				
ANR	660847	Statement	fcn	2451:10:79114:79116	660817	8	True				
ANR	660848	Statement	->	2451:13:79117:79118	660817	9	True				
ANR	660849	Statement	addr	2451:15:79119:79122	660817	10	True				
ANR	660850	Statement	","	2451:19:79123:79123	660817	11	True				
ANR	660851	Statement	bbi	2451:21:79125:79127	660817	12	True				
ANR	660852	Statement	->	2451:24:79128:79129	660817	13	True				
ANR	660853	Statement	addr	2451:26:79130:79133	660817	14	True				
ANR	660854	Statement	","	2451:30:79134:79134	660817	15	True				
ANR	660855	Statement	bbi	2451:32:79136:79138	660817	16	True				
ANR	660856	Statement	->	2451:35:79139:79140	660817	17	True				
ANR	660857	Statement	size	2451:37:79141:79144	660817	18	True				
ANR	660858	Statement	)	2451:41:79145:79145	660817	19	True				
ANR	660859	ExpressionStatement		2451:42:79146:79146	660817	20	True				
ANR	660860	Statement	r_cons_printf	2452:2:79150:79162	660817	21	True				
ANR	660861	Statement	(	2452:16:79164:79164	660817	22	True				
ANR	660862	Statement	"""0x%08"""	2452:17:79165:79171	660817	23	True				
ANR	660863	Statement	PFMT64x	2452:24:79172:79178	660817	24	True				
ANR	660864	Statement	""" """	2452:31:79179:79181	660817	25	True				
ANR	660865	Statement	","	2452:34:79182:79182	660817	26	True				
ANR	660866	Statement	bbi	2452:36:79184:79186	660817	27	True				
ANR	660867	Statement	->	2452:39:79187:79188	660817	28	True				
ANR	660868	Statement	jump	2452:41:79189:79192	660817	29	True				
ANR	660869	Statement	)	2452:45:79193:79193	660817	30	True				
ANR	660870	ExpressionStatement		2452:46:79194:79194	660817	31	True				
ANR	660871	Statement	r_cons_printf	2453:2:79198:79210	660817	32	True				
ANR	660872	Statement	(	2453:16:79212:79212	660817	33	True				
ANR	660873	Statement	"""0x%08"""	2453:17:79213:79219	660817	34	True				
ANR	660874	Statement	PFMT64x	2453:24:79220:79226	660817	35	True				
ANR	660875	Statement	""" """	2453:31:79227:79229	660817	36	True				
ANR	660876	Statement	","	2453:34:79230:79230	660817	37	True				
ANR	660877	Statement	bbi	2453:36:79232:79234	660817	38	True				
ANR	660878	Statement	->	2453:39:79235:79236	660817	39	True				
ANR	660879	Statement	fail	2453:41:79237:79240	660817	40	True				
ANR	660880	Statement	)	2453:45:79241:79241	660817	41	True				
ANR	660881	ExpressionStatement		2453:46:79242:79242	660817	42	True				
ANR	660882	IfStatement	if ( bbi -> type != R_ANAL_BB_TYPE_NULL )		660817	43					
ANR	660883	Condition	bbi -> type != R_ANAL_BB_TYPE_NULL	2454:6:79250:79281	660817	0	True				
ANR	660884	EqualityExpression	bbi -> type != R_ANAL_BB_TYPE_NULL		660817	0		!=			
ANR	660885	PtrMemberAccess	bbi -> type		660817	0					
ANR	660886	Identifier	bbi		660817	0					
ANR	660887	Identifier	type		660817	1					
ANR	660888	Identifier	R_ANAL_BB_TYPE_NULL		660817	1					
ANR	660889	CompoundStatement		10:40:321:321	660817	1					
ANR	660890	IfStatement	if ( ( bbi -> type & R_ANAL_BB_TYPE_BODY ) )		660817	0					
ANR	660891	Condition	bbi -> type & R_ANAL_BB_TYPE_BODY	2455:7:79293:79325	660817	0	True				
ANR	660892	BitAndExpression	bbi -> type & R_ANAL_BB_TYPE_BODY		660817	0		&			
ANR	660893	PtrMemberAccess	bbi -> type		660817	0					
ANR	660894	Identifier	bbi		660817	0					
ANR	660895	Identifier	type		660817	1					
ANR	660896	Identifier	R_ANAL_BB_TYPE_BODY		660817	1					
ANR	660897	CompoundStatement		11:42:365:365	660817	1					
ANR	660898	ExpressionStatement	"r_cons_printf ( ""b"" )"	2456:4:79334:79353	660817	0	True				
ANR	660899	CallExpression	"r_cons_printf ( ""b"" )"		660817	0					
ANR	660900	Callee	r_cons_printf		660817	0					
ANR	660901	Identifier	r_cons_printf		660817	0					
ANR	660902	ArgumentList	"""b"""		660817	1					
ANR	660903	Argument	"""b"""		660817	0					
ANR	660904	PrimaryExpression	"""b"""		660817	0					
ANR	660905	IfStatement	if ( ( bbi -> type & R_ANAL_BB_TYPE_FOOT ) )		660817	1					
ANR	660906	Condition	bbi -> type & R_ANAL_BB_TYPE_FOOT	2458:7:79367:79399	660817	0	True				
ANR	660907	BitAndExpression	bbi -> type & R_ANAL_BB_TYPE_FOOT		660817	0		&			
ANR	660908	PtrMemberAccess	bbi -> type		660817	0					
ANR	660909	Identifier	bbi		660817	0					
ANR	660910	Identifier	type		660817	1					
ANR	660911	Identifier	R_ANAL_BB_TYPE_FOOT		660817	1					
ANR	660912	CompoundStatement		14:42:439:439	660817	1					
ANR	660913	ExpressionStatement	"r_cons_printf ( ""f"" )"	2459:4:79408:79427	660817	0	True				
ANR	660914	CallExpression	"r_cons_printf ( ""f"" )"		660817	0					
ANR	660915	Callee	r_cons_printf		660817	0					
ANR	660916	Identifier	r_cons_printf		660817	0					
ANR	660917	ArgumentList	"""f"""		660817	1					
ANR	660918	Argument	"""f"""		660817	0					
ANR	660919	PrimaryExpression	"""f"""		660817	0					
ANR	660920	IfStatement	if ( ( bbi -> type & R_ANAL_BB_TYPE_HEAD ) )		660817	2					
ANR	660921	Condition	bbi -> type & R_ANAL_BB_TYPE_HEAD	2461:7:79441:79473	660817	0	True				
ANR	660922	BitAndExpression	bbi -> type & R_ANAL_BB_TYPE_HEAD		660817	0		&			
ANR	660923	PtrMemberAccess	bbi -> type		660817	0					
ANR	660924	Identifier	bbi		660817	0					
ANR	660925	Identifier	type		660817	1					
ANR	660926	Identifier	R_ANAL_BB_TYPE_HEAD		660817	1					
ANR	660927	CompoundStatement		17:42:513:513	660817	1					
ANR	660928	ExpressionStatement	"r_cons_printf ( ""h"" )"	2462:4:79482:79501	660817	0	True				
ANR	660929	CallExpression	"r_cons_printf ( ""h"" )"		660817	0					
ANR	660930	Callee	r_cons_printf		660817	0					
ANR	660931	Identifier	r_cons_printf		660817	0					
ANR	660932	ArgumentList	"""h"""		660817	1					
ANR	660933	Argument	"""h"""		660817	0					
ANR	660934	PrimaryExpression	"""h"""		660817	0					
ANR	660935	IfStatement	if ( ( bbi -> type & R_ANAL_BB_TYPE_LAST ) )		660817	3					
ANR	660936	Condition	bbi -> type & R_ANAL_BB_TYPE_LAST	2464:7:79515:79547	660817	0	True				
ANR	660937	BitAndExpression	bbi -> type & R_ANAL_BB_TYPE_LAST		660817	0		&			
ANR	660938	PtrMemberAccess	bbi -> type		660817	0					
ANR	660939	Identifier	bbi		660817	0					
ANR	660940	Identifier	type		660817	1					
ANR	660941	Identifier	R_ANAL_BB_TYPE_LAST		660817	1					
ANR	660942	CompoundStatement		20:42:587:587	660817	1					
ANR	660943	ExpressionStatement	"r_cons_printf ( ""l"" )"	2465:4:79556:79575	660817	0	True				
ANR	660944	CallExpression	"r_cons_printf ( ""l"" )"		660817	0					
ANR	660945	Callee	r_cons_printf		660817	0					
ANR	660946	Identifier	r_cons_printf		660817	0					
ANR	660947	ArgumentList	"""l"""		660817	1					
ANR	660948	Argument	"""l"""		660817	0					
ANR	660949	PrimaryExpression	"""l"""		660817	0					
ANR	660950	ElseStatement	else		660817	0					
ANR	660951	CompoundStatement		23:9:628:628	660817	0					
ANR	660952	ExpressionStatement	"r_cons_printf ( ""n"" )"	2468:3:79596:79615	660817	0	True				
ANR	660953	CallExpression	"r_cons_printf ( ""n"" )"		660817	0					
ANR	660954	Callee	r_cons_printf		660817	0					
ANR	660955	Identifier	r_cons_printf		660817	0					
ANR	660956	ArgumentList	"""n"""		660817	1					
ANR	660957	Argument	"""n"""		660817	0					
ANR	660958	PrimaryExpression	"""n"""		660817	0					
ANR	660959	IfStatement	if ( bbi -> diff )		660817	44					
ANR	660960	Condition	bbi -> diff	2470:6:79627:79635	660817	0	True				
ANR	660961	PtrMemberAccess	bbi -> diff		660817	0					
ANR	660962	Identifier	bbi		660817	0					
ANR	660963	Identifier	diff		660817	1					
ANR	660964	CompoundStatement		26:17:675:675	660817	1					
ANR	660965	IfStatement	if ( bbi -> diff -> type == R_ANAL_DIFF_TYPE_MATCH )		660817	0					
ANR	660966	Condition	bbi -> diff -> type == R_ANAL_DIFF_TYPE_MATCH	2471:7:79647:79687	660817	0	True				
ANR	660967	EqualityExpression	bbi -> diff -> type == R_ANAL_DIFF_TYPE_MATCH		660817	0		==			
ANR	660968	PtrMemberAccess	bbi -> diff -> type		660817	0					
ANR	660969	PtrMemberAccess	bbi -> diff		660817	0					
ANR	660970	Identifier	bbi		660817	0					
ANR	660971	Identifier	diff		660817	1					
ANR	660972	Identifier	type		660817	1					
ANR	660973	Identifier	R_ANAL_DIFF_TYPE_MATCH		660817	1					
ANR	660974	CompoundStatement		27:50:727:727	660817	1					
ANR	660975	ExpressionStatement	"r_cons_printf ( "" m"" )"	2472:4:79696:79716	660817	0	True				
ANR	660976	CallExpression	"r_cons_printf ( "" m"" )"		660817	0					
ANR	660977	Callee	r_cons_printf		660817	0					
ANR	660978	Identifier	r_cons_printf		660817	0					
ANR	660979	ArgumentList	""" m"""		660817	1					
ANR	660980	Argument	""" m"""		660817	0					
ANR	660981	PrimaryExpression	""" m"""		660817	0					
ANR	660982	ElseStatement	else		660817	0					
ANR	660983	IfStatement	if ( bbi -> diff -> type == R_ANAL_DIFF_TYPE_UNMATCH )		660817	0					
ANR	660984	Condition	bbi -> diff -> type == R_ANAL_DIFF_TYPE_UNMATCH	2473:14:79732:79774	660817	0	True				
ANR	660985	EqualityExpression	bbi -> diff -> type == R_ANAL_DIFF_TYPE_UNMATCH		660817	0		==			
ANR	660986	PtrMemberAccess	bbi -> diff -> type		660817	0					
ANR	660987	PtrMemberAccess	bbi -> diff		660817	0					
ANR	660988	Identifier	bbi		660817	0					
ANR	660989	Identifier	diff		660817	1					
ANR	660990	Identifier	type		660817	1					
ANR	660991	Identifier	R_ANAL_DIFF_TYPE_UNMATCH		660817	1					
ANR	660992	CompoundStatement		29:59:814:814	660817	1					
ANR	660993	ExpressionStatement	"r_cons_printf ( "" u"" )"	2474:4:79783:79803	660817	0	True				
ANR	660994	CallExpression	"r_cons_printf ( "" u"" )"		660817	0					
ANR	660995	Callee	r_cons_printf		660817	0					
ANR	660996	Identifier	r_cons_printf		660817	0					
ANR	660997	ArgumentList	""" u"""		660817	1					
ANR	660998	Argument	""" u"""		660817	0					
ANR	660999	PrimaryExpression	""" u"""		660817	0					
ANR	661000	ElseStatement	else		660817	0					
ANR	661001	CompoundStatement		31:10:852:852	660817	0					
ANR	661002	ExpressionStatement	"r_cons_printf ( "" n"" )"	2476:4:79821:79841	660817	0	True				
ANR	661003	CallExpression	"r_cons_printf ( "" n"" )"		660817	0					
ANR	661004	Callee	r_cons_printf		660817	0					
ANR	661005	Identifier	r_cons_printf		660817	0					
ANR	661006	ArgumentList	""" n"""		660817	1					
ANR	661007	Argument	""" n"""		660817	0					
ANR	661008	PrimaryExpression	""" n"""		660817	0					
ANR	661009	ExpressionStatement	"r_cons_printf ( ""\\n"" )"	2479:2:79854:79874	660817	45	True				
ANR	661010	CallExpression	"r_cons_printf ( ""\\n"" )"		660817	0					
ANR	661011	Callee	r_cons_printf		660817	0					
ANR	661012	Identifier	r_cons_printf		660817	0					
ANR	661013	ArgumentList	"""\\n"""		660817	1					
ANR	661014	Argument	"""\\n"""		660817	0					
ANR	661015	PrimaryExpression	"""\\n"""		660817	0					
ANR	661016	ReturnType	static void		660817	1					
ANR	661017	Identifier	fcn_list_bbs		660817	2					
ANR	661018	ParameterList	RAnalFunction * fcn		660817	3					
ANR	661019	Parameter	RAnalFunction * fcn	2445:25:78942:78959	660817	0	True				
ANR	661020	ParameterType	RAnalFunction *		660817	0					
ANR	661021	Identifier	fcn		660817	1					
ANR	661022	CFGEntryNode	ENTRY		660817		True				
ANR	661023	CFGExitNode	EXIT		660817		True				
ANR	661024	Symbol	R_ANAL_BB_TYPE_NULL		660817						
ANR	661025	Symbol	R_ANAL_BB_TYPE_BODY		660817						
ANR	661026	Symbol	R_ANAL_BB_TYPE_HEAD		660817						
ANR	661027	Symbol	bbi -> diff -> type		660817						
ANR	661028	Symbol	R_ANAL_DIFF_TYPE_MATCH		660817						
ANR	661029	Symbol	bbi		660817						
ANR	661030	Symbol	iter		660817						
ANR	661031	Symbol	bbi -> diff		660817						
ANR	661032	Symbol	* bbi		660817						
ANR	661033	Symbol	* bbi -> diff		660817						
ANR	661034	Symbol	bbi -> type		660817						
ANR	661035	Symbol	R_ANAL_BB_TYPE_FOOT		660817						
ANR	661036	Symbol	R_ANAL_DIFF_TYPE_UNMATCH		660817						
ANR	661037	Symbol	fcn		660817						
ANR	661038	Symbol	R_ANAL_BB_TYPE_LAST		660817						
ANR	661039	Symbol	* * bbi		660817						
ANR	661040	Function	r_core_anal_fcn_list_size	2483:0:79882:80122							
ANR	661041	FunctionDef	r_core_anal_fcn_list_size (RCore * core)		661040	0					
ANR	661042	CompoundStatement		2483:49:79931:80122	661040	0					
ANR	661043	IdentifierDeclStatement	RAnalFunction * fcn ;	2484:1:79934:79952	661040	0	True				
ANR	661044	IdentifierDecl	* fcn		661040	0					
ANR	661045	IdentifierDeclType	RAnalFunction *		661040	0					
ANR	661046	Identifier	fcn		661040	1					
ANR	661047	IdentifierDeclStatement	RListIter * iter ;	2485:1:79955:79970	661040	1	True				
ANR	661048	IdentifierDecl	* iter		661040	0					
ANR	661049	IdentifierDeclType	RListIter *		661040	0					
ANR	661050	Identifier	iter		661040	1					
ANR	661051	IdentifierDeclStatement	ut32 total = 0 ;	2486:1:79973:79987	661040	2	True				
ANR	661052	IdentifierDecl	total = 0		661040	0					
ANR	661053	IdentifierDeclType	ut32		661040	0					
ANR	661054	Identifier	total		661040	1					
ANR	661055	AssignmentExpression	total = 0		661040	2		=			
ANR	661056	Identifier	total		661040	0					
ANR	661057	PrimaryExpression	0		661040	1					
ANR	661058	Statement	r_list_foreach	2488:1:79991:80004	661040	3	True				
ANR	661059	Statement	(	2488:16:80006:80006	661040	4	True				
ANR	661060	Statement	core	2488:17:80007:80010	661040	5	True				
ANR	661061	Statement	->	2488:21:80011:80012	661040	6	True				
ANR	661062	Statement	anal	2488:23:80013:80016	661040	7	True				
ANR	661063	Statement	->	2488:27:80017:80018	661040	8	True				
ANR	661064	Statement	fcns	2488:29:80019:80022	661040	9	True				
ANR	661065	Statement	","	2488:33:80023:80023	661040	10	True				
ANR	661066	Statement	iter	2488:35:80025:80028	661040	11	True				
ANR	661067	Statement	","	2488:39:80029:80029	661040	12	True				
ANR	661068	Statement	fcn	2488:41:80031:80033	661040	13	True				
ANR	661069	Statement	)	2488:44:80034:80034	661040	14	True				
ANR	661070	CompoundStatement		6:46:104:104	661040	15					
ANR	661071	ExpressionStatement	total += r_anal_fcn_size ( fcn )	2489:2:80040:80070	661040	0	True				
ANR	661072	AssignmentExpression	total += r_anal_fcn_size ( fcn )		661040	0		+=			
ANR	661073	Identifier	total		661040	0					
ANR	661074	CallExpression	r_anal_fcn_size ( fcn )		661040	1					
ANR	661075	Callee	r_anal_fcn_size		661040	0					
ANR	661076	Identifier	r_anal_fcn_size		661040	0					
ANR	661077	ArgumentList	fcn		661040	1					
ANR	661078	Argument	fcn		661040	0					
ANR	661079	Identifier	fcn		661040	0					
ANR	661080	ExpressionStatement	"r_cons_printf ( ""%d\\n"" , total )"	2491:1:80076:80105	661040	16	True				
ANR	661081	CallExpression	"r_cons_printf ( ""%d\\n"" , total )"		661040	0					
ANR	661082	Callee	r_cons_printf		661040	0					
ANR	661083	Identifier	r_cons_printf		661040	0					
ANR	661084	ArgumentList	"""%d\\n"""		661040	1					
ANR	661085	Argument	"""%d\\n"""		661040	0					
ANR	661086	PrimaryExpression	"""%d\\n"""		661040	0					
ANR	661087	Argument	total		661040	1					
ANR	661088	Identifier	total		661040	0					
ANR	661089	ReturnStatement	return total ;	2492:1:80108:80120	661040	17	True				
ANR	661090	Identifier	total		661040	0					
ANR	661091	ReturnType	R_API int		661040	1					
ANR	661092	Identifier	r_core_anal_fcn_list_size		661040	2					
ANR	661093	ParameterList	RCore * core		661040	3					
ANR	661094	Parameter	RCore * core	2483:36:79918:79928	661040	0	True				
ANR	661095	ParameterType	RCore *		661040	0					
ANR	661096	Identifier	core		661040	1					
ANR	661097	CFGEntryNode	ENTRY		661040		True				
ANR	661098	CFGExitNode	EXIT		661040		True				
ANR	661099	Symbol	fcn		661040						
ANR	661100	Symbol	core		661040						
ANR	661101	Symbol	total		661040						
ANR	661102	Symbol	r_anal_fcn_size		661040						
ANR	661103	Symbol	iter		661040						
ANR	661104	Function	cmpfcn	2495:0:80125:80261							
ANR	661105	FunctionDef	"cmpfcn (const void * _a , const void * _b)"		661104	0					
ANR	661106	CompoundStatement		2495:50:80175:80261	661104	0					
ANR	661107	IdentifierDeclStatement	"const RAnalFunction * _fcn1 = _a , * _fcn2 = _b ;"	2496:1:80178:80222	661104	0	True				
ANR	661108	IdentifierDecl	* _fcn1 = _a		661104	0					
ANR	661109	IdentifierDeclType	const RAnalFunction *		661104	0					
ANR	661110	Identifier	_fcn1		661104	1					
ANR	661111	AssignmentExpression	* _fcn1 = _a		661104	2		=			
ANR	661112	Identifier	_a		661104	0					
ANR	661113	Identifier	_a		661104	1					
ANR	661114	IdentifierDecl	* _fcn2 = _b		661104	1					
ANR	661115	IdentifierDeclType	const RAnalFunction *		661104	0					
ANR	661116	Identifier	_fcn2		661104	1					
ANR	661117	AssignmentExpression	* _fcn2 = _b		661104	2		=			
ANR	661118	Identifier	_b		661104	0					
ANR	661119	Identifier	_b		661104	1					
ANR	661120	ReturnStatement	return ( _fcn1 -> addr - _fcn2 -> addr ) ;	2497:1:80225:80259	661104	1	True				
ANR	661121	AdditiveExpression	_fcn1 -> addr - _fcn2 -> addr		661104	0		-			
ANR	661122	PtrMemberAccess	_fcn1 -> addr		661104	0					
ANR	661123	Identifier	_fcn1		661104	0					
ANR	661124	Identifier	addr		661104	1					
ANR	661125	PtrMemberAccess	_fcn2 -> addr		661104	1					
ANR	661126	Identifier	_fcn2		661104	0					
ANR	661127	Identifier	addr		661104	1					
ANR	661128	ReturnType	static int		661104	1					
ANR	661129	Identifier	cmpfcn		661104	2					
ANR	661130	ParameterList	"const void * _a , const void * _b"		661104	3					
ANR	661131	Parameter	const void * _a	2495:18:80143:80156	661104	0	True				
ANR	661132	ParameterType	const void *		661104	0					
ANR	661133	Identifier	_a		661104	1					
ANR	661134	Parameter	const void * _b	2495:34:80159:80172	661104	1	True				
ANR	661135	ParameterType	const void *		661104	0					
ANR	661136	Identifier	_b		661104	1					
ANR	661137	CFGEntryNode	ENTRY		661104		True				
ANR	661138	CFGExitNode	EXIT		661104		True				
ANR	661139	Symbol	* _fcn2		661104						
ANR	661140	Symbol	_a		661104						
ANR	661141	Symbol	* _fcn1		661104						
ANR	661142	Symbol	_b		661104						
ANR	661143	Symbol	_fcn1 -> addr		661104						
ANR	661144	Symbol	_fcn1		661104						
ANR	661145	Symbol	_fcn2		661104						
ANR	661146	Symbol	_fcn2 -> addr		661104						
ANR	661147	Function	fcnlist_gather_metadata	2501:0:80308:81339							
ANR	661148	FunctionDef	"fcnlist_gather_metadata (RAnal * anal , RList * fcns)"		661147	0					
ANR	661149	CompoundStatement		2501:61:80369:81339	661147	0					
ANR	661150	IdentifierDeclStatement	RListIter * iter ;	2502:1:80372:80387	661147	0	True				
ANR	661151	IdentifierDecl	* iter		661147	0					
ANR	661152	IdentifierDeclType	RListIter *		661147	0					
ANR	661153	Identifier	iter		661147	1					
ANR	661154	IdentifierDeclStatement	RAnalFunction * fcn ;	2503:1:80390:80408	661147	1	True				
ANR	661155	IdentifierDecl	* fcn		661147	0					
ANR	661156	IdentifierDeclType	RAnalFunction *		661147	0					
ANR	661157	Identifier	fcn		661147	1					
ANR	661158	IdentifierDeclStatement	RList * xrefs ;	2504:1:80411:80423	661147	2	True				
ANR	661159	IdentifierDecl	* xrefs		661147	0					
ANR	661160	IdentifierDeclType	RList *		661147	0					
ANR	661161	Identifier	xrefs		661147	1					
ANR	661162	Statement	r_list_foreach	2506:1:80427:80440	661147	3	True				
ANR	661163	Statement	(	2506:16:80442:80442	661147	4	True				
ANR	661164	Statement	fcns	2506:17:80443:80446	661147	5	True				
ANR	661165	Statement	","	2506:21:80447:80447	661147	6	True				
ANR	661166	Statement	iter	2506:23:80449:80452	661147	7	True				
ANR	661167	Statement	","	2506:27:80453:80453	661147	8	True				
ANR	661168	Statement	fcn	2506:29:80455:80457	661147	9	True				
ANR	661169	Statement	)	2506:32:80458:80458	661147	10	True				
ANR	661170	CompoundStatement		28:2:685:700	661147	11					
ANR	661171	IdentifierDeclStatement	RListIter * callrefiter ;	2508:2:80520:80542	661147	0	True				
ANR	661172	IdentifierDecl	* callrefiter		661147	0					
ANR	661173	IdentifierDeclType	RListIter *		661147	0					
ANR	661174	Identifier	callrefiter		661147	1					
ANR	661175	IdentifierDeclStatement	RAnalRef * ref ;	2509:2:80546:80559	661147	1	True				
ANR	661176	IdentifierDecl	* ref		661147	0					
ANR	661177	IdentifierDeclType	RAnalRef *		661147	0					
ANR	661178	Identifier	ref		661147	1					
ANR	661179	IdentifierDeclStatement	"RList * refs = r_anal_fcn_get_refs ( anal , fcn ) ;"	2510:2:80563:80608	661147	2	True				
ANR	661180	IdentifierDecl	"* refs = r_anal_fcn_get_refs ( anal , fcn )"		661147	0					
ANR	661181	IdentifierDeclType	RList *		661147	0					
ANR	661182	Identifier	refs		661147	1					
ANR	661183	AssignmentExpression	"* refs = r_anal_fcn_get_refs ( anal , fcn )"		661147	2		=			
ANR	661184	Identifier	refs		661147	0					
ANR	661185	CallExpression	"r_anal_fcn_get_refs ( anal , fcn )"		661147	1					
ANR	661186	Callee	r_anal_fcn_get_refs		661147	0					
ANR	661187	Identifier	r_anal_fcn_get_refs		661147	0					
ANR	661188	ArgumentList	anal		661147	1					
ANR	661189	Argument	anal		661147	0					
ANR	661190	Identifier	anal		661147	0					
ANR	661191	Argument	fcn		661147	1					
ANR	661192	Identifier	fcn		661147	0					
ANR	661193	IdentifierDeclStatement	int numcallrefs = 0 ;	2511:2:80612:80631	661147	3	True				
ANR	661194	IdentifierDecl	numcallrefs = 0		661147	0					
ANR	661195	IdentifierDeclType	int		661147	0					
ANR	661196	Identifier	numcallrefs		661147	1					
ANR	661197	AssignmentExpression	numcallrefs = 0		661147	2		=			
ANR	661198	Identifier	numcallrefs		661147	0					
ANR	661199	PrimaryExpression	0		661147	1					
ANR	661200	Statement	r_list_foreach	2512:2:80635:80648	661147	4	True				
ANR	661201	Statement	(	2512:17:80650:80650	661147	5	True				
ANR	661202	Statement	refs	2512:18:80651:80654	661147	6	True				
ANR	661203	Statement	","	2512:22:80655:80655	661147	7	True				
ANR	661204	Statement	callrefiter	2512:24:80657:80667	661147	8	True				
ANR	661205	Statement	","	2512:35:80668:80668	661147	9	True				
ANR	661206	Statement	ref	2512:37:80670:80672	661147	10	True				
ANR	661207	Statement	)	2512:40:80673:80673	661147	11	True				
ANR	661208	CompoundStatement		12:42:305:305	661147	12					
ANR	661209	IfStatement	if ( ref -> type == R_ANAL_REF_TYPE_CALL )		661147	0					
ANR	661210	Condition	ref -> type == R_ANAL_REF_TYPE_CALL	2513:7:80684:80716	661147	0	True				
ANR	661211	EqualityExpression	ref -> type == R_ANAL_REF_TYPE_CALL		661147	0		==			
ANR	661212	PtrMemberAccess	ref -> type		661147	0					
ANR	661213	Identifier	ref		661147	0					
ANR	661214	Identifier	type		661147	1					
ANR	661215	Identifier	R_ANAL_REF_TYPE_CALL		661147	1					
ANR	661216	CompoundStatement		13:42:349:349	661147	1					
ANR	661217	ExpressionStatement	numcallrefs ++	2514:4:80725:80738	661147	0	True				
ANR	661218	PostIncDecOperationExpression	numcallrefs ++		661147	0					
ANR	661219	Identifier	numcallrefs		661147	0					
ANR	661220	IncDec	++		661147	1					
ANR	661221	ExpressionStatement	r_list_free ( refs )	2517:2:80751:80769	661147	13	True				
ANR	661222	CallExpression	r_list_free ( refs )		661147	0					
ANR	661223	Callee	r_list_free		661147	0					
ANR	661224	Identifier	r_list_free		661147	0					
ANR	661225	ArgumentList	refs		661147	1					
ANR	661226	Argument	refs		661147	0					
ANR	661227	Identifier	refs		661147	0					
ANR	661228	ExpressionStatement	fcn -> meta . numcallrefs = numcallrefs	2518:2:80773:80808	661147	14	True				
ANR	661229	AssignmentExpression	fcn -> meta . numcallrefs = numcallrefs		661147	0		=			
ANR	661230	MemberAccess	fcn -> meta . numcallrefs		661147	0					
ANR	661231	PtrMemberAccess	fcn -> meta		661147	0					
ANR	661232	Identifier	fcn		661147	0					
ANR	661233	Identifier	meta		661147	1					
ANR	661234	Identifier	numcallrefs		661147	1					
ANR	661235	Identifier	numcallrefs		661147	1					
ANR	661236	ExpressionStatement	"xrefs = r_anal_xrefs_get ( anal , fcn -> addr )"	2519:2:80812:80854	661147	15	True				
ANR	661237	AssignmentExpression	"xrefs = r_anal_xrefs_get ( anal , fcn -> addr )"		661147	0		=			
ANR	661238	Identifier	xrefs		661147	0					
ANR	661239	CallExpression	"r_anal_xrefs_get ( anal , fcn -> addr )"		661147	1					
ANR	661240	Callee	r_anal_xrefs_get		661147	0					
ANR	661241	Identifier	r_anal_xrefs_get		661147	0					
ANR	661242	ArgumentList	anal		661147	1					
ANR	661243	Argument	anal		661147	0					
ANR	661244	Identifier	anal		661147	0					
ANR	661245	Argument	fcn -> addr		661147	1					
ANR	661246	PtrMemberAccess	fcn -> addr		661147	0					
ANR	661247	Identifier	fcn		661147	0					
ANR	661248	Identifier	addr		661147	1					
ANR	661249	ExpressionStatement	fcn -> meta . numrefs = xrefs ? xrefs -> length : 0	2520:2:80858:80901	661147	16	True				
ANR	661250	AssignmentExpression	fcn -> meta . numrefs = xrefs ? xrefs -> length : 0		661147	0		=			
ANR	661251	MemberAccess	fcn -> meta . numrefs		661147	0					
ANR	661252	PtrMemberAccess	fcn -> meta		661147	0					
ANR	661253	Identifier	fcn		661147	0					
ANR	661254	Identifier	meta		661147	1					
ANR	661255	Identifier	numrefs		661147	1					
ANR	661256	ConditionalExpression	xrefs ? xrefs -> length : 0		661147	1					
ANR	661257	Condition	xrefs		661147	0					
ANR	661258	Identifier	xrefs		661147	0					
ANR	661259	PtrMemberAccess	xrefs -> length		661147	1					
ANR	661260	Identifier	xrefs		661147	0					
ANR	661261	Identifier	length		661147	1					
ANR	661262	PrimaryExpression	0		661147	2					
ANR	661263	ExpressionStatement	r_list_free ( xrefs )	2521:2:80905:80924	661147	17	True				
ANR	661264	CallExpression	r_list_free ( xrefs )		661147	0					
ANR	661265	Callee	r_list_free		661147	0					
ANR	661266	Identifier	r_list_free		661147	0					
ANR	661267	ArgumentList	xrefs		661147	1					
ANR	661268	Argument	xrefs		661147	0					
ANR	661269	Identifier	xrefs		661147	0					
ANR	661270	IdentifierDeclStatement	ut64 min = UT64_MAX ;	2524:2:80986:81005	661147	18	True				
ANR	661271	IdentifierDecl	min = UT64_MAX		661147	0					
ANR	661272	IdentifierDeclType	ut64		661147	0					
ANR	661273	Identifier	min		661147	1					
ANR	661274	AssignmentExpression	min = UT64_MAX		661147	2		=			
ANR	661275	Identifier	UT64_MAX		661147	0					
ANR	661276	Identifier	UT64_MAX		661147	1					
ANR	661277	IdentifierDeclStatement	ut64 max = UT64_MIN ;	2525:2:81009:81028	661147	19	True				
ANR	661278	IdentifierDecl	max = UT64_MIN		661147	0					
ANR	661279	IdentifierDeclType	ut64		661147	0					
ANR	661280	Identifier	max		661147	1					
ANR	661281	AssignmentExpression	max = UT64_MIN		661147	2		=			
ANR	661282	Identifier	UT64_MIN		661147	0					
ANR	661283	Identifier	UT64_MIN		661147	1					
ANR	661284	IdentifierDeclStatement	RListIter * bbsiter ;	2527:2:81033:81051	661147	20	True				
ANR	661285	IdentifierDecl	* bbsiter		661147	0					
ANR	661286	IdentifierDeclType	RListIter *		661147	0					
ANR	661287	Identifier	bbsiter		661147	1					
ANR	661288	IdentifierDeclStatement	RAnalBlock * bbi ;	2528:2:81055:81070	661147	21	True				
ANR	661289	IdentifierDecl	* bbi		661147	0					
ANR	661290	IdentifierDeclType	RAnalBlock *		661147	0					
ANR	661291	Identifier	bbi		661147	1					
ANR	661292	Statement	r_list_foreach	2529:2:81074:81087	661147	22	True				
ANR	661293	Statement	(	2529:17:81089:81089	661147	23	True				
ANR	661294	Statement	fcn	2529:18:81090:81092	661147	24	True				
ANR	661295	Statement	->	2529:21:81093:81094	661147	25	True				
ANR	661296	Statement	bbs	2529:23:81095:81097	661147	26	True				
ANR	661297	Statement	","	2529:26:81098:81098	661147	27	True				
ANR	661298	Statement	bbsiter	2529:28:81100:81106	661147	28	True				
ANR	661299	Statement	","	2529:35:81107:81107	661147	29	True				
ANR	661300	Statement	bbi	2529:37:81109:81111	661147	30	True				
ANR	661301	Statement	)	2529:40:81112:81112	661147	31	True				
ANR	661302	CompoundStatement		29:42:744:744	661147	32					
ANR	661303	IfStatement	if ( max < bbi -> addr + bbi -> size )		661147	0					
ANR	661304	Condition	max < bbi -> addr + bbi -> size	2530:7:81123:81149	661147	0	True				
ANR	661305	RelationalExpression	max < bbi -> addr + bbi -> size		661147	0		<			
ANR	661306	Identifier	max		661147	0					
ANR	661307	AdditiveExpression	bbi -> addr + bbi -> size		661147	1		+			
ANR	661308	PtrMemberAccess	bbi -> addr		661147	0					
ANR	661309	Identifier	bbi		661147	0					
ANR	661310	Identifier	addr		661147	1					
ANR	661311	PtrMemberAccess	bbi -> size		661147	1					
ANR	661312	Identifier	bbi		661147	0					
ANR	661313	Identifier	size		661147	1					
ANR	661314	CompoundStatement		30:36:782:782	661147	1					
ANR	661315	ExpressionStatement	max = bbi -> addr + bbi -> size	2531:4:81158:81185	661147	0	True				
ANR	661316	AssignmentExpression	max = bbi -> addr + bbi -> size		661147	0		=			
ANR	661317	Identifier	max		661147	0					
ANR	661318	AdditiveExpression	bbi -> addr + bbi -> size		661147	1		+			
ANR	661319	PtrMemberAccess	bbi -> addr		661147	0					
ANR	661320	Identifier	bbi		661147	0					
ANR	661321	Identifier	addr		661147	1					
ANR	661322	PtrMemberAccess	bbi -> size		661147	1					
ANR	661323	Identifier	bbi		661147	0					
ANR	661324	Identifier	size		661147	1					
ANR	661325	IfStatement	if ( min > bbi -> addr )		661147	1					
ANR	661326	Condition	min > bbi -> addr	2533:7:81199:81213	661147	0	True				
ANR	661327	RelationalExpression	min > bbi -> addr		661147	0		>			
ANR	661328	Identifier	min		661147	0					
ANR	661329	PtrMemberAccess	bbi -> addr		661147	1					
ANR	661330	Identifier	bbi		661147	0					
ANR	661331	Identifier	addr		661147	1					
ANR	661332	CompoundStatement		33:24:846:846	661147	1					
ANR	661333	ExpressionStatement	min = bbi -> addr	2534:4:81222:81237	661147	0	True				
ANR	661334	AssignmentExpression	min = bbi -> addr		661147	0		=			
ANR	661335	Identifier	min		661147	0					
ANR	661336	PtrMemberAccess	bbi -> addr		661147	1					
ANR	661337	Identifier	bbi		661147	0					
ANR	661338	Identifier	addr		661147	1					
ANR	661339	ExpressionStatement	fcn -> meta . min = min	2537:2:81250:81269	661147	33	True				
ANR	661340	AssignmentExpression	fcn -> meta . min = min		661147	0		=			
ANR	661341	MemberAccess	fcn -> meta . min		661147	0					
ANR	661342	PtrMemberAccess	fcn -> meta		661147	0					
ANR	661343	Identifier	fcn		661147	0					
ANR	661344	Identifier	meta		661147	1					
ANR	661345	Identifier	min		661147	1					
ANR	661346	Identifier	min		661147	1					
ANR	661347	ExpressionStatement	fcn -> meta . max = max	2538:2:81273:81292	661147	34	True				
ANR	661348	AssignmentExpression	fcn -> meta . max = max		661147	0		=			
ANR	661349	MemberAccess	fcn -> meta . max		661147	0					
ANR	661350	PtrMemberAccess	fcn -> meta		661147	0					
ANR	661351	Identifier	fcn		661147	0					
ANR	661352	Identifier	meta		661147	1					
ANR	661353	Identifier	max		661147	1					
ANR	661354	Identifier	max		661147	1					
ANR	661355	ReturnStatement	return 0 ;	2541:1:81329:81337	661147	12	True				
ANR	661356	PrimaryExpression	0		661147	0					
ANR	661357	ReturnType	static int		661147	1					
ANR	661358	Identifier	fcnlist_gather_metadata		661147	2					
ANR	661359	ParameterList	"RAnal * anal , RList * fcns"		661147	3					
ANR	661360	Parameter	RAnal * anal	2501:35:80343:80353	661147	0	True				
ANR	661361	ParameterType	RAnal *		661147	0					
ANR	661362	Identifier	anal		661147	1					
ANR	661363	Parameter	RList * fcns	2501:48:80356:80366	661147	1	True				
ANR	661364	ParameterType	RList *		661147	0					
ANR	661365	Identifier	fcns		661147	1					
ANR	661366	CFGEntryNode	ENTRY		661147		True				
ANR	661367	CFGExitNode	EXIT		661147		True				
ANR	661368	Symbol	fcn -> meta . numcallrefs		661147						
ANR	661369	Symbol	* fcn		661147						
ANR	661370	Symbol	ref -> type		661147						
ANR	661371	Symbol	bbi -> size		661147						
ANR	661372	Symbol	fcn -> meta		661147						
ANR	661373	Symbol	fcn		661147						
ANR	661374	Symbol	ref		661147						
ANR	661375	Symbol	min		661147						
ANR	661376	Symbol	r_anal_xrefs_get		661147						
ANR	661377	Symbol	numcallrefs		661147						
ANR	661378	Symbol	callrefiter		661147						
ANR	661379	Symbol	UT64_MAX		661147						
ANR	661380	Symbol	R_ANAL_REF_TYPE_CALL		661147						
ANR	661381	Symbol	bbi -> addr		661147						
ANR	661382	Symbol	max		661147						
ANR	661383	Symbol	xrefs		661147						
ANR	661384	Symbol	bbsiter		661147						
ANR	661385	Symbol	bbi		661147						
ANR	661386	Symbol	iter		661147						
ANR	661387	Symbol	xrefs -> length		661147						
ANR	661388	Symbol	* bbi		661147						
ANR	661389	Symbol	fcns		661147						
ANR	661390	Symbol	UT64_MIN		661147						
ANR	661391	Symbol	fcn -> meta . max		661147						
ANR	661392	Symbol	r_anal_fcn_get_refs		661147						
ANR	661393	Symbol	* xrefs		661147						
ANR	661394	Symbol	anal		661147						
ANR	661395	Symbol	refs		661147						
ANR	661396	Symbol	fcn -> addr		661147						
ANR	661397	Symbol	fcn -> meta . min		661147						
ANR	661398	Symbol	* ref		661147						
ANR	661399	Symbol	fcn -> meta . numrefs		661147						
ANR	661400	Function	r_core_anal_fcn_name	2544:0:81342:81835							
ANR	661401	FunctionDef	"r_core_anal_fcn_name (RCore * core , RAnalFunction * fcn)"		661400	0					
ANR	661402	CompoundStatement		2544:66:81408:81835	661400	0					
ANR	661403	IdentifierDeclStatement	"bool demangle = r_config_get_i ( core -> config , ""bin.demangle"" ) ;"	2545:1:81411:81472	661400	0	True				
ANR	661404	IdentifierDecl	"demangle = r_config_get_i ( core -> config , ""bin.demangle"" )"		661400	0					
ANR	661405	IdentifierDeclType	bool		661400	0					
ANR	661406	Identifier	demangle		661400	1					
ANR	661407	AssignmentExpression	"demangle = r_config_get_i ( core -> config , ""bin.demangle"" )"		661400	2		=			
ANR	661408	Identifier	demangle		661400	0					
ANR	661409	CallExpression	"r_config_get_i ( core -> config , ""bin.demangle"" )"		661400	1					
ANR	661410	Callee	r_config_get_i		661400	0					
ANR	661411	Identifier	r_config_get_i		661400	0					
ANR	661412	ArgumentList	core -> config		661400	1					
ANR	661413	Argument	core -> config		661400	0					
ANR	661414	PtrMemberAccess	core -> config		661400	0					
ANR	661415	Identifier	core		661400	0					
ANR	661416	Identifier	config		661400	1					
ANR	661417	Argument	"""bin.demangle"""		661400	1					
ANR	661418	PrimaryExpression	"""bin.demangle"""		661400	0					
ANR	661419	IdentifierDeclStatement	"const char * lang = demangle ? r_config_get ( core -> config , ""bin.lang"" ) : NULL ;"	2546:1:81475:81551	661400	1	True				
ANR	661420	IdentifierDecl	"* lang = demangle ? r_config_get ( core -> config , ""bin.lang"" ) : NULL"		661400	0					
ANR	661421	IdentifierDeclType	const char *		661400	0					
ANR	661422	Identifier	lang		661400	1					
ANR	661423	AssignmentExpression	"* lang = demangle ? r_config_get ( core -> config , ""bin.lang"" ) : NULL"		661400	2		=			
ANR	661424	Identifier	lang		661400	0					
ANR	661425	ConditionalExpression	"demangle ? r_config_get ( core -> config , ""bin.lang"" ) : NULL"		661400	1					
ANR	661426	Condition	demangle		661400	0					
ANR	661427	Identifier	demangle		661400	0					
ANR	661428	CallExpression	"r_config_get ( core -> config , ""bin.lang"" )"		661400	1					
ANR	661429	Callee	r_config_get		661400	0					
ANR	661430	Identifier	r_config_get		661400	0					
ANR	661431	ArgumentList	core -> config		661400	1					
ANR	661432	Argument	core -> config		661400	0					
ANR	661433	PtrMemberAccess	core -> config		661400	0					
ANR	661434	Identifier	core		661400	0					
ANR	661435	Identifier	config		661400	1					
ANR	661436	Argument	"""bin.lang"""		661400	1					
ANR	661437	PrimaryExpression	"""bin.lang"""		661400	0					
ANR	661438	Identifier	NULL		661400	2					
ANR	661439	IdentifierDeclStatement	"bool keep_lib = r_config_get_i ( core -> config , ""bin.demangle.libs"" ) ;"	2547:1:81554:81620	661400	2	True				
ANR	661440	IdentifierDecl	"keep_lib = r_config_get_i ( core -> config , ""bin.demangle.libs"" )"		661400	0					
ANR	661441	IdentifierDeclType	bool		661400	0					
ANR	661442	Identifier	keep_lib		661400	1					
ANR	661443	AssignmentExpression	"keep_lib = r_config_get_i ( core -> config , ""bin.demangle.libs"" )"		661400	2		=			
ANR	661444	Identifier	keep_lib		661400	0					
ANR	661445	CallExpression	"r_config_get_i ( core -> config , ""bin.demangle.libs"" )"		661400	1					
ANR	661446	Callee	r_config_get_i		661400	0					
ANR	661447	Identifier	r_config_get_i		661400	0					
ANR	661448	ArgumentList	core -> config		661400	1					
ANR	661449	Argument	core -> config		661400	0					
ANR	661450	PtrMemberAccess	core -> config		661400	0					
ANR	661451	Identifier	core		661400	0					
ANR	661452	Identifier	config		661400	1					
ANR	661453	Argument	"""bin.demangle.libs"""		661400	1					
ANR	661454	PrimaryExpression	"""bin.demangle.libs"""		661400	0					
ANR	661455	IdentifierDeclStatement	"char * name = strdup ( fcn -> name ? fcn -> name : """" ) ;"	2548:1:81623:81671	661400	3	True				
ANR	661456	IdentifierDecl	"* name = strdup ( fcn -> name ? fcn -> name : """" )"		661400	0					
ANR	661457	IdentifierDeclType	char *		661400	0					
ANR	661458	Identifier	name		661400	1					
ANR	661459	AssignmentExpression	"* name = strdup ( fcn -> name ? fcn -> name : """" )"		661400	2		=			
ANR	661460	Identifier	name		661400	0					
ANR	661461	CallExpression	"strdup ( fcn -> name ? fcn -> name : """" )"		661400	1					
ANR	661462	Callee	strdup		661400	0					
ANR	661463	Identifier	strdup		661400	0					
ANR	661464	ArgumentList	"fcn -> name ? fcn -> name : """""		661400	1					
ANR	661465	Argument	"fcn -> name ? fcn -> name : """""		661400	0					
ANR	661466	ConditionalExpression	"fcn -> name ? fcn -> name : """""		661400	0					
ANR	661467	Condition	fcn -> name		661400	0					
ANR	661468	PtrMemberAccess	fcn -> name		661400	0					
ANR	661469	Identifier	fcn		661400	0					
ANR	661470	Identifier	name		661400	1					
ANR	661471	PtrMemberAccess	fcn -> name		661400	1					
ANR	661472	Identifier	fcn		661400	0					
ANR	661473	Identifier	name		661400	1					
ANR	661474	PrimaryExpression	""""""		661400	2					
ANR	661475	IfStatement	if ( demangle )		661400	4					
ANR	661476	Condition	demangle	2549:5:81678:81685	661400	0	True				
ANR	661477	Identifier	demangle		661400	0					
ANR	661478	CompoundStatement		7:2:283:359	661400	1					
ANR	661479	IdentifierDeclStatement	"char * tmp = r_bin_demangle ( core -> bin -> cur , lang , name , fcn -> addr , keep_lib ) ;"	2550:2:81692:81768	661400	0	True				
ANR	661480	IdentifierDecl	"* tmp = r_bin_demangle ( core -> bin -> cur , lang , name , fcn -> addr , keep_lib )"		661400	0					
ANR	661481	IdentifierDeclType	char *		661400	0					
ANR	661482	Identifier	tmp		661400	1					
ANR	661483	AssignmentExpression	"* tmp = r_bin_demangle ( core -> bin -> cur , lang , name , fcn -> addr , keep_lib )"		661400	2		=			
ANR	661484	Identifier	tmp		661400	0					
ANR	661485	CallExpression	"r_bin_demangle ( core -> bin -> cur , lang , name , fcn -> addr , keep_lib )"		661400	1					
ANR	661486	Callee	r_bin_demangle		661400	0					
ANR	661487	Identifier	r_bin_demangle		661400	0					
ANR	661488	ArgumentList	core -> bin -> cur		661400	1					
ANR	661489	Argument	core -> bin -> cur		661400	0					
ANR	661490	PtrMemberAccess	core -> bin -> cur		661400	0					
ANR	661491	PtrMemberAccess	core -> bin		661400	0					
ANR	661492	Identifier	core		661400	0					
ANR	661493	Identifier	bin		661400	1					
ANR	661494	Identifier	cur		661400	1					
ANR	661495	Argument	lang		661400	1					
ANR	661496	Identifier	lang		661400	0					
ANR	661497	Argument	name		661400	2					
ANR	661498	Identifier	name		661400	0					
ANR	661499	Argument	fcn -> addr		661400	3					
ANR	661500	PtrMemberAccess	fcn -> addr		661400	0					
ANR	661501	Identifier	fcn		661400	0					
ANR	661502	Identifier	addr		661400	1					
ANR	661503	Argument	keep_lib		661400	4					
ANR	661504	Identifier	keep_lib		661400	0					
ANR	661505	IfStatement	if ( tmp )		661400	1					
ANR	661506	Condition	tmp	2551:6:81776:81778	661400	0	True				
ANR	661507	Identifier	tmp		661400	0					
ANR	661508	CompoundStatement		8:11:372:372	661400	1					
ANR	661509	ExpressionStatement	free ( name )	2552:3:81786:81797	661400	0	True				
ANR	661510	CallExpression	free ( name )		661400	0					
ANR	661511	Callee	free		661400	0					
ANR	661512	Identifier	free		661400	0					
ANR	661513	ArgumentList	name		661400	1					
ANR	661514	Argument	name		661400	0					
ANR	661515	Identifier	name		661400	0					
ANR	661516	ExpressionStatement	name = tmp	2553:3:81802:81812	661400	1	True				
ANR	661517	AssignmentExpression	name = tmp		661400	0		=			
ANR	661518	Identifier	name		661400	0					
ANR	661519	Identifier	tmp		661400	1					
ANR	661520	ReturnStatement	return name ;	2556:1:81822:81833	661400	5	True				
ANR	661521	Identifier	name		661400	0					
ANR	661522	ReturnType	R_API char *		661400	1					
ANR	661523	Identifier	r_core_anal_fcn_name		661400	2					
ANR	661524	ParameterList	"RCore * core , RAnalFunction * fcn"		661400	3					
ANR	661525	Parameter	RCore * core	2544:33:81375:81385	661400	0	True				
ANR	661526	ParameterType	RCore *		661400	0					
ANR	661527	Identifier	core		661400	1					
ANR	661528	Parameter	RAnalFunction * fcn	2544:46:81388:81405	661400	1	True				
ANR	661529	ParameterType	RAnalFunction *		661400	0					
ANR	661530	Identifier	fcn		661400	1					
ANR	661531	CFGEntryNode	ENTRY		661400		True				
ANR	661532	CFGExitNode	EXIT		661400		True				
ANR	661533	Symbol	core -> config		661400						
ANR	661534	Symbol	NULL		661400						
ANR	661535	Symbol	* fcn		661400						
ANR	661536	Symbol	fcn -> name		661400						
ANR	661537	Symbol	* core		661400						
ANR	661538	Symbol	r_config_get		661400						
ANR	661539	Symbol	keep_lib		661400						
ANR	661540	Symbol	core -> bin -> cur		661400						
ANR	661541	Symbol	fcn		661400						
ANR	661542	Symbol	core		661400						
ANR	661543	Symbol	demangle		661400						
ANR	661544	Symbol	tmp		661400						
ANR	661545	Symbol	r_config_get_i		661400						
ANR	661546	Symbol	r_bin_demangle		661400						
ANR	661547	Symbol	name		661400						
ANR	661548	Symbol	fcn -> addr		661400						
ANR	661549	Symbol	strdup		661400						
ANR	661550	Symbol	* core -> bin		661400						
ANR	661551	Symbol	lang		661400						
ANR	661552	Symbol	core -> bin		661400						
ANR	661553	Symbol	* * core		661400						
ANR	661554	Function	fcn_print_verbose	2560:0:81969:83208							
ANR	661555	FunctionDef	"fcn_print_verbose (RCore * core , RAnalFunction * fcn , bool use_color)"		661554	0					
ANR	661556	CompoundStatement		2560:78:82047:83208	661554	0					
ANR	661557	IdentifierDeclStatement	"char * name = r_core_anal_fcn_name ( core , fcn ) ;"	2561:1:82050:82095	661554	0	True				
ANR	661558	IdentifierDecl	"* name = r_core_anal_fcn_name ( core , fcn )"		661554	0					
ANR	661559	IdentifierDeclType	char *		661554	0					
ANR	661560	Identifier	name		661554	1					
ANR	661561	AssignmentExpression	"* name = r_core_anal_fcn_name ( core , fcn )"		661554	2		=			
ANR	661562	Identifier	name		661554	0					
ANR	661563	CallExpression	"r_core_anal_fcn_name ( core , fcn )"		661554	1					
ANR	661564	Callee	r_core_anal_fcn_name		661554	0					
ANR	661565	Identifier	r_core_anal_fcn_name		661554	0					
ANR	661566	ArgumentList	core		661554	1					
ANR	661567	Argument	core		661554	0					
ANR	661568	Identifier	core		661554	0					
ANR	661569	Argument	fcn		661554	1					
ANR	661570	Identifier	fcn		661554	0					
ANR	661571	IdentifierDeclStatement	int ebbs = 0 ;	2562:1:82098:82110	661554	1	True				
ANR	661572	IdentifierDecl	ebbs = 0		661554	0					
ANR	661573	IdentifierDeclType	int		661554	0					
ANR	661574	Identifier	ebbs		661554	1					
ANR	661575	AssignmentExpression	ebbs = 0		661554	2		=			
ANR	661576	Identifier	ebbs		661554	0					
ANR	661577	PrimaryExpression	0		661554	1					
ANR	661578	IdentifierDeclStatement	int addrwidth = 8 ;	2563:1:82113:82130	661554	2	True				
ANR	661579	IdentifierDecl	addrwidth = 8		661554	0					
ANR	661580	IdentifierDeclType	int		661554	0					
ANR	661581	Identifier	addrwidth		661554	1					
ANR	661582	AssignmentExpression	addrwidth = 8		661554	2		=			
ANR	661583	Identifier	addrwidth		661554	0					
ANR	661584	PrimaryExpression	8		661554	1					
ANR	661585	IdentifierDeclStatement	"const char * color = """" ;"	2564:1:82133:82155	661554	3	True				
ANR	661586	IdentifierDecl	"* color = """""		661554	0					
ANR	661587	IdentifierDeclType	const char *		661554	0					
ANR	661588	Identifier	color		661554	1					
ANR	661589	AssignmentExpression	"* color = """""		661554	2		=			
ANR	661590	Identifier	color		661554	0					
ANR	661591	PrimaryExpression	""""""		661554	1					
ANR	661592	IdentifierDeclStatement	"const char * color_end = """" ;"	2565:1:82158:82184	661554	4	True				
ANR	661593	IdentifierDecl	"* color_end = """""		661554	0					
ANR	661594	IdentifierDeclType	const char *		661554	0					
ANR	661595	Identifier	color_end		661554	1					
ANR	661596	AssignmentExpression	"* color_end = """""		661554	2		=			
ANR	661597	Identifier	color_end		661554	0					
ANR	661598	PrimaryExpression	""""""		661554	1					
ANR	661599	IfStatement	if ( use_color )		661554	5					
ANR	661600	Condition	use_color	2566:5:82191:82199	661554	0	True				
ANR	661601	Identifier	use_color		661554	0					
ANR	661602	CompoundStatement		7:16:154:154	661554	1					
ANR	661603	ExpressionStatement	color_end = Color_RESET	2567:2:82206:82229	661554	0	True				
ANR	661604	AssignmentExpression	color_end = Color_RESET		661554	0		=			
ANR	661605	Identifier	color_end		661554	0					
ANR	661606	Identifier	Color_RESET		661554	1					
ANR	661607	IfStatement	"if ( strstr ( name , ""sym.imp."" ) )"		661554	1					
ANR	661608	Condition	"strstr ( name , ""sym.imp."" )"	2568:6:82237:82261	661554	0	True				
ANR	661609	CallExpression	"strstr ( name , ""sym.imp."" )"		661554	0					
ANR	661610	Callee	strstr		661554	0					
ANR	661611	Identifier	strstr		661554	0					
ANR	661612	ArgumentList	name		661554	1					
ANR	661613	Argument	name		661554	0					
ANR	661614	Identifier	name		661554	0					
ANR	661615	Argument	"""sym.imp."""		661554	1					
ANR	661616	PrimaryExpression	"""sym.imp."""		661554	0					
ANR	661617	CompoundStatement		9:33:216:216	661554	1					
ANR	661618	ExpressionStatement	color = Color_YELLOW	2569:3:82269:82289	661554	0	True				
ANR	661619	AssignmentExpression	color = Color_YELLOW		661554	0		=			
ANR	661620	Identifier	color		661554	0					
ANR	661621	Identifier	Color_YELLOW		661554	1					
ANR	661622	ElseStatement	else		661554	0					
ANR	661623	IfStatement	"if ( strstr ( name , ""sym."" ) )"		661554	0					
ANR	661624	Condition	"strstr ( name , ""sym."" )"	2570:13:82304:82324	661554	0	True				
ANR	661625	CallExpression	"strstr ( name , ""sym."" )"		661554	0					
ANR	661626	Callee	strstr		661554	0					
ANR	661627	Identifier	strstr		661554	0					
ANR	661628	ArgumentList	name		661554	1					
ANR	661629	Argument	name		661554	0					
ANR	661630	Identifier	name		661554	0					
ANR	661631	Argument	"""sym."""		661554	1					
ANR	661632	PrimaryExpression	"""sym."""		661554	0					
ANR	661633	CompoundStatement		11:36:279:279	661554	1					
ANR	661634	ExpressionStatement	color = Color_GREEN	2571:3:82332:82351	661554	0	True				
ANR	661635	AssignmentExpression	color = Color_GREEN		661554	0		=			
ANR	661636	Identifier	color		661554	0					
ANR	661637	Identifier	Color_GREEN		661554	1					
ANR	661638	ElseStatement	else		661554	0					
ANR	661639	IfStatement	"if ( strstr ( name , ""sub."" ) )"		661554	0					
ANR	661640	Condition	"strstr ( name , ""sub."" )"	2572:13:82366:82386	661554	0	True				
ANR	661641	CallExpression	"strstr ( name , ""sub."" )"		661554	0					
ANR	661642	Callee	strstr		661554	0					
ANR	661643	Identifier	strstr		661554	0					
ANR	661644	ArgumentList	name		661554	1					
ANR	661645	Argument	name		661554	0					
ANR	661646	Identifier	name		661554	0					
ANR	661647	Argument	"""sub."""		661554	1					
ANR	661648	PrimaryExpression	"""sub."""		661554	0					
ANR	661649	CompoundStatement		13:36:341:341	661554	1					
ANR	661650	ExpressionStatement	color = Color_MAGENTA	2573:3:82394:82415	661554	0	True				
ANR	661651	AssignmentExpression	color = Color_MAGENTA		661554	0		=			
ANR	661652	Identifier	color		661554	0					
ANR	661653	Identifier	Color_MAGENTA		661554	1					
ANR	661654	IfStatement	if ( core -> anal -> bits == 64 )		661554	6					
ANR	661655	Condition	core -> anal -> bits == 64	2577:5:82430:82451	661554	0	True				
ANR	661656	EqualityExpression	core -> anal -> bits == 64		661554	0		==			
ANR	661657	PtrMemberAccess	core -> anal -> bits		661554	0					
ANR	661658	PtrMemberAccess	core -> anal		661554	0					
ANR	661659	Identifier	core		661554	0					
ANR	661660	Identifier	anal		661554	1					
ANR	661661	Identifier	bits		661554	1					
ANR	661662	PrimaryExpression	64		661554	1					
ANR	661663	CompoundStatement		18:29:406:406	661554	1					
ANR	661664	ExpressionStatement	addrwidth = 16	2578:2:82458:82472	661554	0	True				
ANR	661665	AssignmentExpression	addrwidth = 16		661554	0		=			
ANR	661666	Identifier	addrwidth		661554	0					
ANR	661667	PrimaryExpression	16		661554	1					
ANR	661668	ExpressionStatement	"r_cons_printf ( FCN_LIST_VERBOSE_ENTRY , color , addrwidth , fcn -> addr , r_anal_fcn_realsize ( fcn ) , r_list_length ( fcn -> bbs ) , r_anal_fcn_count_edges ( fcn , & ebbs ) , r_anal_fcn_cc ( core -> anal , fcn ) , r_anal_fcn_cost ( core -> anal , fcn ) , addrwidth , fcn -> meta . min , r_anal_fcn_size ( fcn ) , addrwidth , fcn -> meta . max , fcn -> meta . numcallrefs , r_anal_var_count ( core -> anal , fcn , 's' , 0 ) + r_anal_var_count ( core -> anal , fcn , 'b' , 0 ) + r_anal_var_count ( core -> anal , fcn , 'r' , 0 ) , r_anal_var_count ( core -> anal , fcn , 's' , 1 ) + r_anal_var_count ( core -> anal , fcn , 'b' , 1 ) + r_anal_var_count ( core -> anal , fcn , 'r' , 1 ) , fcn -> meta . numrefs , fcn -> maxstack , name , color_end )"	2581:1:82479:83181	661554	7	True				
ANR	661669	CallExpression	"r_cons_printf ( FCN_LIST_VERBOSE_ENTRY , color , addrwidth , fcn -> addr , r_anal_fcn_realsize ( fcn ) , r_list_length ( fcn -> bbs ) , r_anal_fcn_count_edges ( fcn , & ebbs ) , r_anal_fcn_cc ( core -> anal , fcn ) , r_anal_fcn_cost ( core -> anal , fcn ) , addrwidth , fcn -> meta . min , r_anal_fcn_size ( fcn ) , addrwidth , fcn -> meta . max , fcn -> meta . numcallrefs , r_anal_var_count ( core -> anal , fcn , 's' , 0 ) + r_anal_var_count ( core -> anal , fcn , 'b' , 0 ) + r_anal_var_count ( core -> anal , fcn , 'r' , 0 ) , r_anal_var_count ( core -> anal , fcn , 's' , 1 ) + r_anal_var_count ( core -> anal , fcn , 'b' , 1 ) + r_anal_var_count ( core -> anal , fcn , 'r' , 1 ) , fcn -> meta . numrefs , fcn -> maxstack , name , color_end )"		661554	0					
ANR	661670	Callee	r_cons_printf		661554	0					
ANR	661671	Identifier	r_cons_printf		661554	0					
ANR	661672	ArgumentList	FCN_LIST_VERBOSE_ENTRY		661554	1					
ANR	661673	Argument	FCN_LIST_VERBOSE_ENTRY		661554	0					
ANR	661674	Identifier	FCN_LIST_VERBOSE_ENTRY		661554	0					
ANR	661675	Argument	color		661554	1					
ANR	661676	Identifier	color		661554	0					
ANR	661677	Argument	addrwidth		661554	2					
ANR	661678	Identifier	addrwidth		661554	0					
ANR	661679	Argument	fcn -> addr		661554	3					
ANR	661680	PtrMemberAccess	fcn -> addr		661554	0					
ANR	661681	Identifier	fcn		661554	0					
ANR	661682	Identifier	addr		661554	1					
ANR	661683	Argument	r_anal_fcn_realsize ( fcn )		661554	4					
ANR	661684	CallExpression	r_anal_fcn_realsize ( fcn )		661554	0					
ANR	661685	Callee	r_anal_fcn_realsize		661554	0					
ANR	661686	Identifier	r_anal_fcn_realsize		661554	0					
ANR	661687	ArgumentList	fcn		661554	1					
ANR	661688	Argument	fcn		661554	0					
ANR	661689	Identifier	fcn		661554	0					
ANR	661690	Argument	r_list_length ( fcn -> bbs )		661554	5					
ANR	661691	CallExpression	r_list_length ( fcn -> bbs )		661554	0					
ANR	661692	Callee	r_list_length		661554	0					
ANR	661693	Identifier	r_list_length		661554	0					
ANR	661694	ArgumentList	fcn -> bbs		661554	1					
ANR	661695	Argument	fcn -> bbs		661554	0					
ANR	661696	PtrMemberAccess	fcn -> bbs		661554	0					
ANR	661697	Identifier	fcn		661554	0					
ANR	661698	Identifier	bbs		661554	1					
ANR	661699	Argument	"r_anal_fcn_count_edges ( fcn , & ebbs )"		661554	6					
ANR	661700	CallExpression	"r_anal_fcn_count_edges ( fcn , & ebbs )"		661554	0					
ANR	661701	Callee	r_anal_fcn_count_edges		661554	0					
ANR	661702	Identifier	r_anal_fcn_count_edges		661554	0					
ANR	661703	ArgumentList	fcn		661554	1					
ANR	661704	Argument	fcn		661554	0					
ANR	661705	Identifier	fcn		661554	0					
ANR	661706	Argument	& ebbs		661554	1					
ANR	661707	UnaryOperationExpression	& ebbs		661554	0					
ANR	661708	UnaryOperator	&		661554	0					
ANR	661709	Identifier	ebbs		661554	1					
ANR	661710	Argument	"r_anal_fcn_cc ( core -> anal , fcn )"		661554	7					
ANR	661711	CallExpression	"r_anal_fcn_cc ( core -> anal , fcn )"		661554	0					
ANR	661712	Callee	r_anal_fcn_cc		661554	0					
ANR	661713	Identifier	r_anal_fcn_cc		661554	0					
ANR	661714	ArgumentList	core -> anal		661554	1					
ANR	661715	Argument	core -> anal		661554	0					
ANR	661716	PtrMemberAccess	core -> anal		661554	0					
ANR	661717	Identifier	core		661554	0					
ANR	661718	Identifier	anal		661554	1					
ANR	661719	Argument	fcn		661554	1					
ANR	661720	Identifier	fcn		661554	0					
ANR	661721	Argument	"r_anal_fcn_cost ( core -> anal , fcn )"		661554	8					
ANR	661722	CallExpression	"r_anal_fcn_cost ( core -> anal , fcn )"		661554	0					
ANR	661723	Callee	r_anal_fcn_cost		661554	0					
ANR	661724	Identifier	r_anal_fcn_cost		661554	0					
ANR	661725	ArgumentList	core -> anal		661554	1					
ANR	661726	Argument	core -> anal		661554	0					
ANR	661727	PtrMemberAccess	core -> anal		661554	0					
ANR	661728	Identifier	core		661554	0					
ANR	661729	Identifier	anal		661554	1					
ANR	661730	Argument	fcn		661554	1					
ANR	661731	Identifier	fcn		661554	0					
ANR	661732	Argument	addrwidth		661554	9					
ANR	661733	Identifier	addrwidth		661554	0					
ANR	661734	Argument	fcn -> meta . min		661554	10					
ANR	661735	MemberAccess	fcn -> meta . min		661554	0					
ANR	661736	PtrMemberAccess	fcn -> meta		661554	0					
ANR	661737	Identifier	fcn		661554	0					
ANR	661738	Identifier	meta		661554	1					
ANR	661739	Identifier	min		661554	1					
ANR	661740	Argument	r_anal_fcn_size ( fcn )		661554	11					
ANR	661741	CallExpression	r_anal_fcn_size ( fcn )		661554	0					
ANR	661742	Callee	r_anal_fcn_size		661554	0					
ANR	661743	Identifier	r_anal_fcn_size		661554	0					
ANR	661744	ArgumentList	fcn		661554	1					
ANR	661745	Argument	fcn		661554	0					
ANR	661746	Identifier	fcn		661554	0					
ANR	661747	Argument	addrwidth		661554	12					
ANR	661748	Identifier	addrwidth		661554	0					
ANR	661749	Argument	fcn -> meta . max		661554	13					
ANR	661750	MemberAccess	fcn -> meta . max		661554	0					
ANR	661751	PtrMemberAccess	fcn -> meta		661554	0					
ANR	661752	Identifier	fcn		661554	0					
ANR	661753	Identifier	meta		661554	1					
ANR	661754	Identifier	max		661554	1					
ANR	661755	Argument	fcn -> meta . numcallrefs		661554	14					
ANR	661756	MemberAccess	fcn -> meta . numcallrefs		661554	0					
ANR	661757	PtrMemberAccess	fcn -> meta		661554	0					
ANR	661758	Identifier	fcn		661554	0					
ANR	661759	Identifier	meta		661554	1					
ANR	661760	Identifier	numcallrefs		661554	1					
ANR	661761	Argument	"r_anal_var_count ( core -> anal , fcn , 's' , 0 ) + r_anal_var_count ( core -> anal , fcn , 'b' , 0 ) + r_anal_var_count ( core -> anal , fcn , 'r' , 0 )"		661554	15					
ANR	661762	AdditiveExpression	"r_anal_var_count ( core -> anal , fcn , 's' , 0 ) + r_anal_var_count ( core -> anal , fcn , 'b' , 0 ) + r_anal_var_count ( core -> anal , fcn , 'r' , 0 )"		661554	0		+			
ANR	661763	CallExpression	"r_anal_var_count ( core -> anal , fcn , 's' , 0 )"		661554	0					
ANR	661764	Callee	r_anal_var_count		661554	0					
ANR	661765	Identifier	r_anal_var_count		661554	0					
ANR	661766	ArgumentList	core -> anal		661554	1					
ANR	661767	Argument	core -> anal		661554	0					
ANR	661768	PtrMemberAccess	core -> anal		661554	0					
ANR	661769	Identifier	core		661554	0					
ANR	661770	Identifier	anal		661554	1					
ANR	661771	Argument	fcn		661554	1					
ANR	661772	Identifier	fcn		661554	0					
ANR	661773	Argument	's'		661554	2					
ANR	661774	PrimaryExpression	's'		661554	0					
ANR	661775	Argument	0		661554	3					
ANR	661776	PrimaryExpression	0		661554	0					
ANR	661777	AdditiveExpression	"r_anal_var_count ( core -> anal , fcn , 'b' , 0 ) + r_anal_var_count ( core -> anal , fcn , 'r' , 0 )"		661554	1		+			
ANR	661778	CallExpression	"r_anal_var_count ( core -> anal , fcn , 'b' , 0 )"		661554	0					
ANR	661779	Callee	r_anal_var_count		661554	0					
ANR	661780	Identifier	r_anal_var_count		661554	0					
ANR	661781	ArgumentList	core -> anal		661554	1					
ANR	661782	Argument	core -> anal		661554	0					
ANR	661783	PtrMemberAccess	core -> anal		661554	0					
ANR	661784	Identifier	core		661554	0					
ANR	661785	Identifier	anal		661554	1					
ANR	661786	Argument	fcn		661554	1					
ANR	661787	Identifier	fcn		661554	0					
ANR	661788	Argument	'b'		661554	2					
ANR	661789	PrimaryExpression	'b'		661554	0					
ANR	661790	Argument	0		661554	3					
ANR	661791	PrimaryExpression	0		661554	0					
ANR	661792	CallExpression	"r_anal_var_count ( core -> anal , fcn , 'r' , 0 )"		661554	1					
ANR	661793	Callee	r_anal_var_count		661554	0					
ANR	661794	Identifier	r_anal_var_count		661554	0					
ANR	661795	ArgumentList	core -> anal		661554	1					
ANR	661796	Argument	core -> anal		661554	0					
ANR	661797	PtrMemberAccess	core -> anal		661554	0					
ANR	661798	Identifier	core		661554	0					
ANR	661799	Identifier	anal		661554	1					
ANR	661800	Argument	fcn		661554	1					
ANR	661801	Identifier	fcn		661554	0					
ANR	661802	Argument	'r'		661554	2					
ANR	661803	PrimaryExpression	'r'		661554	0					
ANR	661804	Argument	0		661554	3					
ANR	661805	PrimaryExpression	0		661554	0					
ANR	661806	Argument	"r_anal_var_count ( core -> anal , fcn , 's' , 1 ) + r_anal_var_count ( core -> anal , fcn , 'b' , 1 ) + r_anal_var_count ( core -> anal , fcn , 'r' , 1 )"		661554	16					
ANR	661807	AdditiveExpression	"r_anal_var_count ( core -> anal , fcn , 's' , 1 ) + r_anal_var_count ( core -> anal , fcn , 'b' , 1 ) + r_anal_var_count ( core -> anal , fcn , 'r' , 1 )"		661554	0		+			
ANR	661808	CallExpression	"r_anal_var_count ( core -> anal , fcn , 's' , 1 )"		661554	0					
ANR	661809	Callee	r_anal_var_count		661554	0					
ANR	661810	Identifier	r_anal_var_count		661554	0					
ANR	661811	ArgumentList	core -> anal		661554	1					
ANR	661812	Argument	core -> anal		661554	0					
ANR	661813	PtrMemberAccess	core -> anal		661554	0					
ANR	661814	Identifier	core		661554	0					
ANR	661815	Identifier	anal		661554	1					
ANR	661816	Argument	fcn		661554	1					
ANR	661817	Identifier	fcn		661554	0					
ANR	661818	Argument	's'		661554	2					
ANR	661819	PrimaryExpression	's'		661554	0					
ANR	661820	Argument	1		661554	3					
ANR	661821	PrimaryExpression	1		661554	0					
ANR	661822	AdditiveExpression	"r_anal_var_count ( core -> anal , fcn , 'b' , 1 ) + r_anal_var_count ( core -> anal , fcn , 'r' , 1 )"		661554	1		+			
ANR	661823	CallExpression	"r_anal_var_count ( core -> anal , fcn , 'b' , 1 )"		661554	0					
ANR	661824	Callee	r_anal_var_count		661554	0					
ANR	661825	Identifier	r_anal_var_count		661554	0					
ANR	661826	ArgumentList	core -> anal		661554	1					
ANR	661827	Argument	core -> anal		661554	0					
ANR	661828	PtrMemberAccess	core -> anal		661554	0					
ANR	661829	Identifier	core		661554	0					
ANR	661830	Identifier	anal		661554	1					
ANR	661831	Argument	fcn		661554	1					
ANR	661832	Identifier	fcn		661554	0					
ANR	661833	Argument	'b'		661554	2					
ANR	661834	PrimaryExpression	'b'		661554	0					
ANR	661835	Argument	1		661554	3					
ANR	661836	PrimaryExpression	1		661554	0					
ANR	661837	CallExpression	"r_anal_var_count ( core -> anal , fcn , 'r' , 1 )"		661554	1					
ANR	661838	Callee	r_anal_var_count		661554	0					
ANR	661839	Identifier	r_anal_var_count		661554	0					
ANR	661840	ArgumentList	core -> anal		661554	1					
ANR	661841	Argument	core -> anal		661554	0					
ANR	661842	PtrMemberAccess	core -> anal		661554	0					
ANR	661843	Identifier	core		661554	0					
ANR	661844	Identifier	anal		661554	1					
ANR	661845	Argument	fcn		661554	1					
ANR	661846	Identifier	fcn		661554	0					
ANR	661847	Argument	'r'		661554	2					
ANR	661848	PrimaryExpression	'r'		661554	0					
ANR	661849	Argument	1		661554	3					
ANR	661850	PrimaryExpression	1		661554	0					
ANR	661851	Argument	fcn -> meta . numrefs		661554	17					
ANR	661852	MemberAccess	fcn -> meta . numrefs		661554	0					
ANR	661853	PtrMemberAccess	fcn -> meta		661554	0					
ANR	661854	Identifier	fcn		661554	0					
ANR	661855	Identifier	meta		661554	1					
ANR	661856	Identifier	numrefs		661554	1					
ANR	661857	Argument	fcn -> maxstack		661554	18					
ANR	661858	PtrMemberAccess	fcn -> maxstack		661554	0					
ANR	661859	Identifier	fcn		661554	0					
ANR	661860	Identifier	maxstack		661554	1					
ANR	661861	Argument	name		661554	19					
ANR	661862	Identifier	name		661554	0					
ANR	661863	Argument	color_end		661554	20					
ANR	661864	Identifier	color_end		661554	0					
ANR	661865	ExpressionStatement	free ( name )	2602:1:83184:83195	661554	8	True				
ANR	661866	CallExpression	free ( name )		661554	0					
ANR	661867	Callee	free		661554	0					
ANR	661868	Identifier	free		661554	0					
ANR	661869	ArgumentList	name		661554	1					
ANR	661870	Argument	name		661554	0					
ANR	661871	Identifier	name		661554	0					
ANR	661872	ReturnStatement	return 0 ;	2603:1:83198:83206	661554	9	True				
ANR	661873	PrimaryExpression	0		661554	0					
ANR	661874	ReturnType	static int		661554	1					
ANR	661875	Identifier	fcn_print_verbose		661554	2					
ANR	661876	ParameterList	"RCore * core , RAnalFunction * fcn , bool use_color"		661554	3					
ANR	661877	Parameter	RCore * core	2560:29:81998:82008	661554	0	True				
ANR	661878	ParameterType	RCore *		661554	0					
ANR	661879	Identifier	core		661554	1					
ANR	661880	Parameter	RAnalFunction * fcn	2560:42:82011:82028	661554	1	True				
ANR	661881	ParameterType	RAnalFunction *		661554	0					
ANR	661882	Identifier	fcn		661554	1					
ANR	661883	Parameter	bool use_color	2560:62:82031:82044	661554	2	True				
ANR	661884	ParameterType	bool		661554	0					
ANR	661885	Identifier	use_color		661554	1					
ANR	661886	CFGEntryNode	ENTRY		661554		True				
ANR	661887	CFGExitNode	EXIT		661554		True				
ANR	661888	Symbol	ebbs		661554						
ANR	661889	Symbol	Color_GREEN		661554						
ANR	661890	Symbol	fcn -> meta . numcallrefs		661554						
ANR	661891	Symbol	color		661554						
ANR	661892	Symbol	* fcn		661554						
ANR	661893	Symbol	r_anal_fcn_size		661554						
ANR	661894	Symbol	r_anal_fcn_cc		661554						
ANR	661895	Symbol	Color_RESET		661554						
ANR	661896	Symbol	* core		661554						
ANR	661897	Symbol	fcn -> meta		661554						
ANR	661898	Symbol	core -> anal		661554						
ANR	661899	Symbol	fcn -> maxstack		661554						
ANR	661900	Symbol	fcn		661554						
ANR	661901	Symbol	r_anal_fcn_cost		661554						
ANR	661902	Symbol	r_anal_fcn_realsize		661554						
ANR	661903	Symbol	r_core_anal_fcn_name		661554						
ANR	661904	Symbol	r_anal_var_count		661554						
ANR	661905	Symbol	* * core		661554						
ANR	661906	Symbol	core -> anal -> bits		661554						
ANR	661907	Symbol	& ebbs		661554						
ANR	661908	Symbol	Color_YELLOW		661554						
ANR	661909	Symbol	color_end		661554						
ANR	661910	Symbol	FCN_LIST_VERBOSE_ENTRY		661554						
ANR	661911	Symbol	addrwidth		661554						
ANR	661912	Symbol	Color_MAGENTA		661554						
ANR	661913	Symbol	use_color		661554						
ANR	661914	Symbol	r_anal_fcn_count_edges		661554						
ANR	661915	Symbol	fcn -> meta . max		661554						
ANR	661916	Symbol	core		661554						
ANR	661917	Symbol	* core -> anal		661554						
ANR	661918	Symbol	strstr		661554						
ANR	661919	Symbol	fcn -> bbs		661554						
ANR	661920	Symbol	name		661554						
ANR	661921	Symbol	fcn -> addr		661554						
ANR	661922	Symbol	fcn -> meta . min		661554						
ANR	661923	Symbol	r_list_length		661554						
ANR	661924	Symbol	fcn -> meta . numrefs		661554						
ANR	661925	Function	fcn_list_verbose	2606:0:83211:84727							
ANR	661926	FunctionDef	"fcn_list_verbose (RCore * core , RList * fcns , const char * sortby)"		661925	0					
ANR	661927	CompoundStatement		2606:74:83285:84727	661925	0					
ANR	661928	IdentifierDeclStatement	"bool use_color = r_config_get_i ( core -> config , ""scr.color"" ) ;"	2607:1:83288:83347	661925	0	True				
ANR	661929	IdentifierDecl	"use_color = r_config_get_i ( core -> config , ""scr.color"" )"		661925	0					
ANR	661930	IdentifierDeclType	bool		661925	0					
ANR	661931	Identifier	use_color		661925	1					
ANR	661932	AssignmentExpression	"use_color = r_config_get_i ( core -> config , ""scr.color"" )"		661925	2		=			
ANR	661933	Identifier	use_color		661925	0					
ANR	661934	CallExpression	"r_config_get_i ( core -> config , ""scr.color"" )"		661925	1					
ANR	661935	Callee	r_config_get_i		661925	0					
ANR	661936	Identifier	r_config_get_i		661925	0					
ANR	661937	ArgumentList	core -> config		661925	1					
ANR	661938	Argument	core -> config		661925	0					
ANR	661939	PtrMemberAccess	core -> config		661925	0					
ANR	661940	Identifier	core		661925	0					
ANR	661941	Identifier	config		661925	1					
ANR	661942	Argument	"""scr.color"""		661925	1					
ANR	661943	PrimaryExpression	"""scr.color"""		661925	0					
ANR	661944	IdentifierDeclStatement	int headeraddr_width = 10 ;	2608:1:83350:83375	661925	1	True				
ANR	661945	IdentifierDecl	headeraddr_width = 10		661925	0					
ANR	661946	IdentifierDeclType	int		661925	0					
ANR	661947	Identifier	headeraddr_width		661925	1					
ANR	661948	AssignmentExpression	headeraddr_width = 10		661925	2		=			
ANR	661949	Identifier	headeraddr_width		661925	0					
ANR	661950	PrimaryExpression	10		661925	1					
ANR	661951	IdentifierDeclStatement	"char * headeraddr = ""=========="" ;"	2609:1:83378:83409	661925	2	True				
ANR	661952	IdentifierDecl	"* headeraddr = ""=========="""		661925	0					
ANR	661953	IdentifierDeclType	char *		661925	0					
ANR	661954	Identifier	headeraddr		661925	1					
ANR	661955	AssignmentExpression	"* headeraddr = ""=========="""		661925	2		=			
ANR	661956	Identifier	headeraddr		661925	0					
ANR	661957	PrimaryExpression	"""=========="""		661925	1					
ANR	661958	IfStatement	if ( core -> anal -> bits == 64 )		661925	3					
ANR	661959	Condition	core -> anal -> bits == 64	2611:5:83417:83438	661925	0	True				
ANR	661960	EqualityExpression	core -> anal -> bits == 64		661925	0		==			
ANR	661961	PtrMemberAccess	core -> anal -> bits		661925	0					
ANR	661962	PtrMemberAccess	core -> anal		661925	0					
ANR	661963	Identifier	core		661925	0					
ANR	661964	Identifier	anal		661925	1					
ANR	661965	Identifier	bits		661925	1					
ANR	661966	PrimaryExpression	64		661925	1					
ANR	661967	CompoundStatement		6:29:155:155	661925	1					
ANR	661968	ExpressionStatement	headeraddr_width = 18	2612:2:83445:83466	661925	0	True				
ANR	661969	AssignmentExpression	headeraddr_width = 18		661925	0		=			
ANR	661970	Identifier	headeraddr_width		661925	0					
ANR	661971	PrimaryExpression	18		661925	1					
ANR	661972	ExpressionStatement	"headeraddr = ""=================="""	2613:2:83470:83503	661925	1	True				
ANR	661973	AssignmentExpression	"headeraddr = ""=================="""		661925	0		=			
ANR	661974	Identifier	headeraddr		661925	0					
ANR	661975	PrimaryExpression	"""=================="""		661925	1					
ANR	661976	IfStatement	if ( sortby )		661925	4					
ANR	661977	Condition	sortby	2616:5:83514:83519	661925	0	True				
ANR	661978	Identifier	sortby		661925	0					
ANR	661979	CompoundStatement		11:13:236:236	661925	1					
ANR	661980	IfStatement	"if ( ! strcmp ( sortby , ""size"" ) )"		661925	0					
ANR	661981	Condition	"! strcmp ( sortby , ""size"" )"	2617:6:83530:83553	661925	0	True				
ANR	661982	UnaryOperationExpression	"! strcmp ( sortby , ""size"" )"		661925	0					
ANR	661983	UnaryOperator	!		661925	0					
ANR	661984	CallExpression	"strcmp ( sortby , ""size"" )"		661925	1					
ANR	661985	Callee	strcmp		661925	0					
ANR	661986	Identifier	strcmp		661925	0					
ANR	661987	ArgumentList	sortby		661925	1					
ANR	661988	Argument	sortby		661925	0					
ANR	661989	Identifier	sortby		661925	0					
ANR	661990	Argument	"""size"""		661925	1					
ANR	661991	PrimaryExpression	"""size"""		661925	0					
ANR	661992	CompoundStatement		12:32:270:270	661925	1					
ANR	661993	ExpressionStatement	"r_list_sort ( fcns , cmpsize )"	2618:3:83561:83588	661925	0	True				
ANR	661994	CallExpression	"r_list_sort ( fcns , cmpsize )"		661925	0					
ANR	661995	Callee	r_list_sort		661925	0					
ANR	661996	Identifier	r_list_sort		661925	0					
ANR	661997	ArgumentList	fcns		661925	1					
ANR	661998	Argument	fcns		661925	0					
ANR	661999	Identifier	fcns		661925	0					
ANR	662000	Argument	cmpsize		661925	1					
ANR	662001	Identifier	cmpsize		661925	0					
ANR	662002	ElseStatement	else		661925	0					
ANR	662003	IfStatement	"if ( ! strcmp ( sortby , ""addr"" ) )"		661925	0					
ANR	662004	Condition	"! strcmp ( sortby , ""addr"" )"	2619:13:83603:83626	661925	0	True				
ANR	662005	UnaryOperationExpression	"! strcmp ( sortby , ""addr"" )"		661925	0					
ANR	662006	UnaryOperator	!		661925	0					
ANR	662007	CallExpression	"strcmp ( sortby , ""addr"" )"		661925	1					
ANR	662008	Callee	strcmp		661925	0					
ANR	662009	Identifier	strcmp		661925	0					
ANR	662010	ArgumentList	sortby		661925	1					
ANR	662011	Argument	sortby		661925	0					
ANR	662012	Identifier	sortby		661925	0					
ANR	662013	Argument	"""addr"""		661925	1					
ANR	662014	PrimaryExpression	"""addr"""		661925	0					
ANR	662015	CompoundStatement		14:39:343:343	661925	1					
ANR	662016	ExpressionStatement	"r_list_sort ( fcns , cmpaddr )"	2620:3:83634:83661	661925	0	True				
ANR	662017	CallExpression	"r_list_sort ( fcns , cmpaddr )"		661925	0					
ANR	662018	Callee	r_list_sort		661925	0					
ANR	662019	Identifier	r_list_sort		661925	0					
ANR	662020	ArgumentList	fcns		661925	1					
ANR	662021	Argument	fcns		661925	0					
ANR	662022	Identifier	fcns		661925	0					
ANR	662023	Argument	cmpaddr		661925	1					
ANR	662024	Identifier	cmpaddr		661925	0					
ANR	662025	ElseStatement	else		661925	0					
ANR	662026	IfStatement	"if ( ! strcmp ( sortby , ""cc"" ) )"		661925	0					
ANR	662027	Condition	"! strcmp ( sortby , ""cc"" )"	2621:13:83676:83697	661925	0	True				
ANR	662028	UnaryOperationExpression	"! strcmp ( sortby , ""cc"" )"		661925	0					
ANR	662029	UnaryOperator	!		661925	0					
ANR	662030	CallExpression	"strcmp ( sortby , ""cc"" )"		661925	1					
ANR	662031	Callee	strcmp		661925	0					
ANR	662032	Identifier	strcmp		661925	0					
ANR	662033	ArgumentList	sortby		661925	1					
ANR	662034	Argument	sortby		661925	0					
ANR	662035	Identifier	sortby		661925	0					
ANR	662036	Argument	"""cc"""		661925	1					
ANR	662037	PrimaryExpression	"""cc"""		661925	0					
ANR	662038	CompoundStatement		16:37:414:414	661925	1					
ANR	662039	ExpressionStatement	"r_list_sort ( fcns , cmpfcncc )"	2622:3:83705:83733	661925	0	True				
ANR	662040	CallExpression	"r_list_sort ( fcns , cmpfcncc )"		661925	0					
ANR	662041	Callee	r_list_sort		661925	0					
ANR	662042	Identifier	r_list_sort		661925	0					
ANR	662043	ArgumentList	fcns		661925	1					
ANR	662044	Argument	fcns		661925	0					
ANR	662045	Identifier	fcns		661925	0					
ANR	662046	Argument	cmpfcncc		661925	1					
ANR	662047	Identifier	cmpfcncc		661925	0					
ANR	662048	ElseStatement	else		661925	0					
ANR	662049	IfStatement	"if ( ! strcmp ( sortby , ""edges"" ) )"		661925	0					
ANR	662050	Condition	"! strcmp ( sortby , ""edges"" )"	2623:13:83748:83772	661925	0	True				
ANR	662051	UnaryOperationExpression	"! strcmp ( sortby , ""edges"" )"		661925	0					
ANR	662052	UnaryOperator	!		661925	0					
ANR	662053	CallExpression	"strcmp ( sortby , ""edges"" )"		661925	1					
ANR	662054	Callee	strcmp		661925	0					
ANR	662055	Identifier	strcmp		661925	0					
ANR	662056	ArgumentList	sortby		661925	1					
ANR	662057	Argument	sortby		661925	0					
ANR	662058	Identifier	sortby		661925	0					
ANR	662059	Argument	"""edges"""		661925	1					
ANR	662060	PrimaryExpression	"""edges"""		661925	0					
ANR	662061	CompoundStatement		18:40:489:489	661925	1					
ANR	662062	ExpressionStatement	"r_list_sort ( fcns , cmpedges )"	2624:3:83780:83808	661925	0	True				
ANR	662063	CallExpression	"r_list_sort ( fcns , cmpedges )"		661925	0					
ANR	662064	Callee	r_list_sort		661925	0					
ANR	662065	Identifier	r_list_sort		661925	0					
ANR	662066	ArgumentList	fcns		661925	1					
ANR	662067	Argument	fcns		661925	0					
ANR	662068	Identifier	fcns		661925	0					
ANR	662069	Argument	cmpedges		661925	1					
ANR	662070	Identifier	cmpedges		661925	0					
ANR	662071	ElseStatement	else		661925	0					
ANR	662072	IfStatement	"if ( ! strcmp ( sortby , ""calls"" ) )"		661925	0					
ANR	662073	Condition	"! strcmp ( sortby , ""calls"" )"	2625:13:83823:83847	661925	0	True				
ANR	662074	UnaryOperationExpression	"! strcmp ( sortby , ""calls"" )"		661925	0					
ANR	662075	UnaryOperator	!		661925	0					
ANR	662076	CallExpression	"strcmp ( sortby , ""calls"" )"		661925	1					
ANR	662077	Callee	strcmp		661925	0					
ANR	662078	Identifier	strcmp		661925	0					
ANR	662079	ArgumentList	sortby		661925	1					
ANR	662080	Argument	sortby		661925	0					
ANR	662081	Identifier	sortby		661925	0					
ANR	662082	Argument	"""calls"""		661925	1					
ANR	662083	PrimaryExpression	"""calls"""		661925	0					
ANR	662084	CompoundStatement		20:40:564:564	661925	1					
ANR	662085	ExpressionStatement	"r_list_sort ( fcns , cmpcalls )"	2626:3:83855:83883	661925	0	True				
ANR	662086	CallExpression	"r_list_sort ( fcns , cmpcalls )"		661925	0					
ANR	662087	Callee	r_list_sort		661925	0					
ANR	662088	Identifier	r_list_sort		661925	0					
ANR	662089	ArgumentList	fcns		661925	1					
ANR	662090	Argument	fcns		661925	0					
ANR	662091	Identifier	fcns		661925	0					
ANR	662092	Argument	cmpcalls		661925	1					
ANR	662093	Identifier	cmpcalls		661925	0					
ANR	662094	ElseStatement	else		661925	0					
ANR	662095	IfStatement	"if ( strstr ( sortby , ""name"" ) )"		661925	0					
ANR	662096	Condition	"strstr ( sortby , ""name"" )"	2627:13:83898:83920	661925	0	True				
ANR	662097	CallExpression	"strstr ( sortby , ""name"" )"		661925	0					
ANR	662098	Callee	strstr		661925	0					
ANR	662099	Identifier	strstr		661925	0					
ANR	662100	ArgumentList	sortby		661925	1					
ANR	662101	Argument	sortby		661925	0					
ANR	662102	Identifier	sortby		661925	0					
ANR	662103	Argument	"""name"""		661925	1					
ANR	662104	PrimaryExpression	"""name"""		661925	0					
ANR	662105	CompoundStatement		22:38:637:637	661925	1					
ANR	662106	ExpressionStatement	"r_list_sort ( fcns , cmpname )"	2628:3:83928:83955	661925	0	True				
ANR	662107	CallExpression	"r_list_sort ( fcns , cmpname )"		661925	0					
ANR	662108	Callee	r_list_sort		661925	0					
ANR	662109	Identifier	r_list_sort		661925	0					
ANR	662110	ArgumentList	fcns		661925	1					
ANR	662111	Argument	fcns		661925	0					
ANR	662112	Identifier	fcns		661925	0					
ANR	662113	Argument	cmpname		661925	1					
ANR	662114	Identifier	cmpname		661925	0					
ANR	662115	ElseStatement	else		661925	0					
ANR	662116	IfStatement	"if ( strstr ( sortby , ""frame"" ) )"		661925	0					
ANR	662117	Condition	"strstr ( sortby , ""frame"" )"	2629:13:83970:83993	661925	0	True				
ANR	662118	CallExpression	"strstr ( sortby , ""frame"" )"		661925	0					
ANR	662119	Callee	strstr		661925	0					
ANR	662120	Identifier	strstr		661925	0					
ANR	662121	ArgumentList	sortby		661925	1					
ANR	662122	Argument	sortby		661925	0					
ANR	662123	Identifier	sortby		661925	0					
ANR	662124	Argument	"""frame"""		661925	1					
ANR	662125	PrimaryExpression	"""frame"""		661925	0					
ANR	662126	CompoundStatement		24:39:710:710	661925	1					
ANR	662127	ExpressionStatement	"r_list_sort ( fcns , cmpframe )"	2630:3:84001:84029	661925	0	True				
ANR	662128	CallExpression	"r_list_sort ( fcns , cmpframe )"		661925	0					
ANR	662129	Callee	r_list_sort		661925	0					
ANR	662130	Identifier	r_list_sort		661925	0					
ANR	662131	ArgumentList	fcns		661925	1					
ANR	662132	Argument	fcns		661925	0					
ANR	662133	Identifier	fcns		661925	0					
ANR	662134	Argument	cmpframe		661925	1					
ANR	662135	Identifier	cmpframe		661925	0					
ANR	662136	ElseStatement	else		661925	0					
ANR	662137	IfStatement	"if ( strstr ( sortby , ""ref"" ) )"		661925	0					
ANR	662138	Condition	"strstr ( sortby , ""ref"" )"	2631:13:84044:84065	661925	0	True				
ANR	662139	CallExpression	"strstr ( sortby , ""ref"" )"		661925	0					
ANR	662140	Callee	strstr		661925	0					
ANR	662141	Identifier	strstr		661925	0					
ANR	662142	ArgumentList	sortby		661925	1					
ANR	662143	Argument	sortby		661925	0					
ANR	662144	Identifier	sortby		661925	0					
ANR	662145	Argument	"""ref"""		661925	1					
ANR	662146	PrimaryExpression	"""ref"""		661925	0					
ANR	662147	CompoundStatement		26:37:782:782	661925	1					
ANR	662148	ExpressionStatement	"r_list_sort ( fcns , cmpxrefs )"	2632:3:84073:84101	661925	0	True				
ANR	662149	CallExpression	"r_list_sort ( fcns , cmpxrefs )"		661925	0					
ANR	662150	Callee	r_list_sort		661925	0					
ANR	662151	Identifier	r_list_sort		661925	0					
ANR	662152	ArgumentList	fcns		661925	1					
ANR	662153	Argument	fcns		661925	0					
ANR	662154	Identifier	fcns		661925	0					
ANR	662155	Argument	cmpxrefs		661925	1					
ANR	662156	Identifier	cmpxrefs		661925	0					
ANR	662157	ElseStatement	else		661925	0					
ANR	662158	IfStatement	"if ( ! strcmp ( sortby , ""nbbs"" ) )"		661925	0					
ANR	662159	Condition	"! strcmp ( sortby , ""nbbs"" )"	2633:13:84116:84139	661925	0	True				
ANR	662160	UnaryOperationExpression	"! strcmp ( sortby , ""nbbs"" )"		661925	0					
ANR	662161	UnaryOperator	!		661925	0					
ANR	662162	CallExpression	"strcmp ( sortby , ""nbbs"" )"		661925	1					
ANR	662163	Callee	strcmp		661925	0					
ANR	662164	Identifier	strcmp		661925	0					
ANR	662165	ArgumentList	sortby		661925	1					
ANR	662166	Argument	sortby		661925	0					
ANR	662167	Identifier	sortby		661925	0					
ANR	662168	Argument	"""nbbs"""		661925	1					
ANR	662169	PrimaryExpression	"""nbbs"""		661925	0					
ANR	662170	CompoundStatement		28:39:856:856	661925	1					
ANR	662171	ExpressionStatement	"r_list_sort ( fcns , cmpnbbs )"	2634:3:84147:84174	661925	0	True				
ANR	662172	CallExpression	"r_list_sort ( fcns , cmpnbbs )"		661925	0					
ANR	662173	Callee	r_list_sort		661925	0					
ANR	662174	Identifier	r_list_sort		661925	0					
ANR	662175	ArgumentList	fcns		661925	1					
ANR	662176	Argument	fcns		661925	0					
ANR	662177	Identifier	fcns		661925	0					
ANR	662178	Argument	cmpnbbs		661925	1					
ANR	662179	Identifier	cmpnbbs		661925	0					
ANR	662180	ExpressionStatement	"r_cons_printf ( ""%-*s %4s %5s %5s %5s %4s %*s range %-*s %s %s %s %s %s %s\\n"" , headeraddr_width , ""address"" , ""size"" , ""nbbs"" , ""edges"" , ""cc"" , ""cost"" , headeraddr_width , ""min bound"" , headeraddr_width , ""max bound"" , ""calls"" , ""locals"" , ""args"" , ""xref"" , ""frame"" , ""name"" )"	2638:1:84185:84453	661925	5	True				
ANR	662181	CallExpression	"r_cons_printf ( ""%-*s %4s %5s %5s %5s %4s %*s range %-*s %s %s %s %s %s %s\\n"" , headeraddr_width , ""address"" , ""size"" , ""nbbs"" , ""edges"" , ""cc"" , ""cost"" , headeraddr_width , ""min bound"" , headeraddr_width , ""max bound"" , ""calls"" , ""locals"" , ""args"" , ""xref"" , ""frame"" , ""name"" )"		661925	0					
ANR	662182	Callee	r_cons_printf		661925	0					
ANR	662183	Identifier	r_cons_printf		661925	0					
ANR	662184	ArgumentList	"""%-*s %4s %5s %5s %5s %4s %*s range %-*s %s %s %s %s %s %s\\n"""		661925	1					
ANR	662185	Argument	"""%-*s %4s %5s %5s %5s %4s %*s range %-*s %s %s %s %s %s %s\\n"""		661925	0					
ANR	662186	PrimaryExpression	"""%-*s %4s %5s %5s %5s %4s %*s range %-*s %s %s %s %s %s %s\\n"""		661925	0					
ANR	662187	Argument	headeraddr_width		661925	1					
ANR	662188	Identifier	headeraddr_width		661925	0					
ANR	662189	Argument	"""address"""		661925	2					
ANR	662190	PrimaryExpression	"""address"""		661925	0					
ANR	662191	Argument	"""size"""		661925	3					
ANR	662192	PrimaryExpression	"""size"""		661925	0					
ANR	662193	Argument	"""nbbs"""		661925	4					
ANR	662194	PrimaryExpression	"""nbbs"""		661925	0					
ANR	662195	Argument	"""edges"""		661925	5					
ANR	662196	PrimaryExpression	"""edges"""		661925	0					
ANR	662197	Argument	"""cc"""		661925	6					
ANR	662198	PrimaryExpression	"""cc"""		661925	0					
ANR	662199	Argument	"""cost"""		661925	7					
ANR	662200	PrimaryExpression	"""cost"""		661925	0					
ANR	662201	Argument	headeraddr_width		661925	8					
ANR	662202	Identifier	headeraddr_width		661925	0					
ANR	662203	Argument	"""min bound"""		661925	9					
ANR	662204	PrimaryExpression	"""min bound"""		661925	0					
ANR	662205	Argument	headeraddr_width		661925	10					
ANR	662206	Identifier	headeraddr_width		661925	0					
ANR	662207	Argument	"""max bound"""		661925	11					
ANR	662208	PrimaryExpression	"""max bound"""		661925	0					
ANR	662209	Argument	"""calls"""		661925	12					
ANR	662210	PrimaryExpression	"""calls"""		661925	0					
ANR	662211	Argument	"""locals"""		661925	13					
ANR	662212	PrimaryExpression	"""locals"""		661925	0					
ANR	662213	Argument	"""args"""		661925	14					
ANR	662214	PrimaryExpression	"""args"""		661925	0					
ANR	662215	Argument	"""xref"""		661925	15					
ANR	662216	PrimaryExpression	"""xref"""		661925	0					
ANR	662217	Argument	"""frame"""		661925	16					
ANR	662218	PrimaryExpression	"""frame"""		661925	0					
ANR	662219	Argument	"""name"""		661925	17					
ANR	662220	PrimaryExpression	"""name"""		661925	0					
ANR	662221	ExpressionStatement	"r_cons_printf ( ""%s ==== ===== ===== ===== ==== %s ===== %s ===== ====== ==== ==== ===== ====\\n"" , headeraddr , headeraddr , headeraddr )"	2642:1:84456:84591	661925	6	True				
ANR	662222	CallExpression	"r_cons_printf ( ""%s ==== ===== ===== ===== ==== %s ===== %s ===== ====== ==== ==== ===== ====\\n"" , headeraddr , headeraddr , headeraddr )"		661925	0					
ANR	662223	Callee	r_cons_printf		661925	0					
ANR	662224	Identifier	r_cons_printf		661925	0					
ANR	662225	ArgumentList	"""%s ==== ===== ===== ===== ==== %s ===== %s ===== ====== ==== ==== ===== ====\\n"""		661925	1					
ANR	662226	Argument	"""%s ==== ===== ===== ===== ==== %s ===== %s ===== ====== ==== ==== ===== ====\\n"""		661925	0					
ANR	662227	PrimaryExpression	"""%s ==== ===== ===== ===== ==== %s ===== %s ===== ====== ==== ==== ===== ====\\n"""		661925	0					
ANR	662228	Argument	headeraddr		661925	1					
ANR	662229	Identifier	headeraddr		661925	0					
ANR	662230	Argument	headeraddr		661925	2					
ANR	662231	Identifier	headeraddr		661925	0					
ANR	662232	Argument	headeraddr		661925	3					
ANR	662233	Identifier	headeraddr		661925	0					
ANR	662234	IdentifierDeclStatement	RListIter * iter ;	2644:1:84594:84609	661925	7	True				
ANR	662235	IdentifierDecl	* iter		661925	0					
ANR	662236	IdentifierDeclType	RListIter *		661925	0					
ANR	662237	Identifier	iter		661925	1					
ANR	662238	IdentifierDeclStatement	RAnalFunction * fcn ;	2645:1:84612:84630	661925	8	True				
ANR	662239	IdentifierDecl	* fcn		661925	0					
ANR	662240	IdentifierDeclType	RAnalFunction *		661925	0					
ANR	662241	Identifier	fcn		661925	1					
ANR	662242	Statement	r_list_foreach	2646:1:84633:84646	661925	9	True				
ANR	662243	Statement	(	2646:16:84648:84648	661925	10	True				
ANR	662244	Statement	fcns	2646:17:84649:84652	661925	11	True				
ANR	662245	Statement	","	2646:21:84653:84653	661925	12	True				
ANR	662246	Statement	iter	2646:23:84655:84658	661925	13	True				
ANR	662247	Statement	","	2646:27:84659:84659	661925	14	True				
ANR	662248	Statement	fcn	2646:29:84661:84663	661925	15	True				
ANR	662249	Statement	)	2646:32:84664:84664	661925	16	True				
ANR	662250	CompoundStatement		41:34:1380:1380	661925	17					
ANR	662251	ExpressionStatement	"fcn_print_verbose ( core , fcn , use_color )"	2647:2:84670:84710	661925	0	True				
ANR	662252	CallExpression	"fcn_print_verbose ( core , fcn , use_color )"		661925	0					
ANR	662253	Callee	fcn_print_verbose		661925	0					
ANR	662254	Identifier	fcn_print_verbose		661925	0					
ANR	662255	ArgumentList	core		661925	1					
ANR	662256	Argument	core		661925	0					
ANR	662257	Identifier	core		661925	0					
ANR	662258	Argument	fcn		661925	1					
ANR	662259	Identifier	fcn		661925	0					
ANR	662260	Argument	use_color		661925	2					
ANR	662261	Identifier	use_color		661925	0					
ANR	662262	ReturnStatement	return 0 ;	2650:1:84717:84725	661925	18	True				
ANR	662263	PrimaryExpression	0		661925	0					
ANR	662264	ReturnType	static int		661925	1					
ANR	662265	Identifier	fcn_list_verbose		661925	2					
ANR	662266	ParameterList	"RCore * core , RList * fcns , const char * sortby"		661925	3					
ANR	662267	Parameter	RCore * core	2606:28:83239:83249	661925	0	True				
ANR	662268	ParameterType	RCore *		661925	0					
ANR	662269	Identifier	core		661925	1					
ANR	662270	Parameter	RList * fcns	2606:41:83252:83262	661925	1	True				
ANR	662271	ParameterType	RList *		661925	0					
ANR	662272	Identifier	fcns		661925	1					
ANR	662273	Parameter	const char * sortby	2606:54:83265:83282	661925	2	True				
ANR	662274	ParameterType	const char *		661925	0					
ANR	662275	Identifier	sortby		661925	1					
ANR	662276	CFGEntryNode	ENTRY		661925		True				
ANR	662277	CFGExitNode	EXIT		661925		True				
ANR	662278	Symbol	* core		661925						
ANR	662279	Symbol	core -> anal		661925						
ANR	662280	Symbol	fcn		661925						
ANR	662281	Symbol	cmpcalls		661925						
ANR	662282	Symbol	cmpaddr		661925						
ANR	662283	Symbol	headeraddr		661925						
ANR	662284	Symbol	headeraddr_width		661925						
ANR	662285	Symbol	* * core		661925						
ANR	662286	Symbol	core -> config		661925						
ANR	662287	Symbol	strcmp		661925						
ANR	662288	Symbol	core -> anal -> bits		661925						
ANR	662289	Symbol	cmpedges		661925						
ANR	662290	Symbol	iter		661925						
ANR	662291	Symbol	cmpframe		661925						
ANR	662292	Symbol	fcns		661925						
ANR	662293	Symbol	use_color		661925						
ANR	662294	Symbol	cmpfcncc		661925						
ANR	662295	Symbol	cmpnbbs		661925						
ANR	662296	Symbol	cmpsize		661925						
ANR	662297	Symbol	core		661925						
ANR	662298	Symbol	* core -> anal		661925						
ANR	662299	Symbol	strstr		661925						
ANR	662300	Symbol	r_config_get_i		661925						
ANR	662301	Symbol	cmpname		661925						
ANR	662302	Symbol	cmpxrefs		661925						
ANR	662303	Symbol	sortby		661925						
ANR	662304	Function	__fcn_print_default	2653:0:84730:85281							
ANR	662305	FunctionDef	"__fcn_print_default (RCore * core , RAnalFunction * fcn , bool quiet)"		662304	0					
ANR	662306	CompoundStatement		2653:77:84807:85281	662304	0					
ANR	662307	IfStatement	if ( quiet )		662304	0					
ANR	662308	Condition	quiet	2654:5:84814:84818	662304	0	True				
ANR	662309	Identifier	quiet		662304	0					
ANR	662310	CompoundStatement		2:12:13:13	662304	1					
ANR	662311	Statement	r_cons_printf	2655:2:84825:84837	662304	0	True				
ANR	662312	Statement	(	2655:16:84839:84839	662304	1	True				
ANR	662313	Statement	"""0x%08"""	2655:17:84840:84846	662304	2	True				
ANR	662314	Statement	PFMT64x	2655:24:84847:84853	662304	3	True				
ANR	662315	Statement	""" """	2655:31:84854:84856	662304	4	True				
ANR	662316	Statement	","	2655:34:84857:84857	662304	5	True				
ANR	662317	Statement	fcn	2655:36:84859:84861	662304	6	True				
ANR	662318	Statement	->	2655:39:84862:84863	662304	7	True				
ANR	662319	Statement	addr	2655:41:84864:84867	662304	8	True				
ANR	662320	Statement	)	2655:45:84868:84868	662304	9	True				
ANR	662321	ExpressionStatement		2655:46:84869:84869	662304	10	True				
ANR	662322	ElseStatement	else		662304	0					
ANR	662323	CompoundStatement		7:2:174:206	662304	0					
ANR	662324	IdentifierDeclStatement	"char * msg , * name = r_core_anal_fcn_name ( core , fcn ) ;"	2657:2:84883:84934	662304	0	True				
ANR	662325	IdentifierDecl	* msg		662304	0					
ANR	662326	IdentifierDeclType	char *		662304	0					
ANR	662327	Identifier	msg		662304	1					
ANR	662328	IdentifierDecl	"* name = r_core_anal_fcn_name ( core , fcn )"		662304	1					
ANR	662329	IdentifierDeclType	char *		662304	0					
ANR	662330	Identifier	name		662304	1					
ANR	662331	AssignmentExpression	"* name = r_core_anal_fcn_name ( core , fcn )"		662304	2		=			
ANR	662332	Identifier	name		662304	0					
ANR	662333	CallExpression	"r_core_anal_fcn_name ( core , fcn )"		662304	1					
ANR	662334	Callee	r_core_anal_fcn_name		662304	0					
ANR	662335	Identifier	r_core_anal_fcn_name		662304	0					
ANR	662336	ArgumentList	core		662304	1					
ANR	662337	Argument	core		662304	0					
ANR	662338	Identifier	core		662304	0					
ANR	662339	Argument	fcn		662304	1					
ANR	662340	Identifier	fcn		662304	0					
ANR	662341	IdentifierDeclStatement	int realsize = r_anal_fcn_realsize ( fcn ) ;	2658:2:84938:84978	662304	1	True				
ANR	662342	IdentifierDecl	realsize = r_anal_fcn_realsize ( fcn )		662304	0					
ANR	662343	IdentifierDeclType	int		662304	0					
ANR	662344	Identifier	realsize		662304	1					
ANR	662345	AssignmentExpression	realsize = r_anal_fcn_realsize ( fcn )		662304	2		=			
ANR	662346	Identifier	realsize		662304	0					
ANR	662347	CallExpression	r_anal_fcn_realsize ( fcn )		662304	1					
ANR	662348	Callee	r_anal_fcn_realsize		662304	0					
ANR	662349	Identifier	r_anal_fcn_realsize		662304	0					
ANR	662350	ArgumentList	fcn		662304	1					
ANR	662351	Argument	fcn		662304	0					
ANR	662352	Identifier	fcn		662304	0					
ANR	662353	IdentifierDeclStatement	int size = r_anal_fcn_size ( fcn ) ;	2659:2:84982:85014	662304	2	True				
ANR	662354	IdentifierDecl	size = r_anal_fcn_size ( fcn )		662304	0					
ANR	662355	IdentifierDeclType	int		662304	0					
ANR	662356	Identifier	size		662304	1					
ANR	662357	AssignmentExpression	size = r_anal_fcn_size ( fcn )		662304	2		=			
ANR	662358	Identifier	size		662304	0					
ANR	662359	CallExpression	r_anal_fcn_size ( fcn )		662304	1					
ANR	662360	Callee	r_anal_fcn_size		662304	0					
ANR	662361	Identifier	r_anal_fcn_size		662304	0					
ANR	662362	ArgumentList	fcn		662304	1					
ANR	662363	Argument	fcn		662304	0					
ANR	662364	Identifier	fcn		662304	0					
ANR	662365	IfStatement	if ( realsize == size )		662304	3					
ANR	662366	Condition	realsize == size	2660:6:85022:85037	662304	0	True				
ANR	662367	EqualityExpression	realsize == size		662304	0		==			
ANR	662368	Identifier	realsize		662304	0					
ANR	662369	Identifier	size		662304	1					
ANR	662370	CompoundStatement		8:24:232:232	662304	1					
ANR	662371	ExpressionStatement	"msg = r_str_newf ( ""%-12d"" , size )"	2661:3:85045:85077	662304	0	True				
ANR	662372	AssignmentExpression	"msg = r_str_newf ( ""%-12d"" , size )"		662304	0		=			
ANR	662373	Identifier	msg		662304	0					
ANR	662374	CallExpression	"r_str_newf ( ""%-12d"" , size )"		662304	1					
ANR	662375	Callee	r_str_newf		662304	0					
ANR	662376	Identifier	r_str_newf		662304	0					
ANR	662377	ArgumentList	"""%-12d"""		662304	1					
ANR	662378	Argument	"""%-12d"""		662304	0					
ANR	662379	PrimaryExpression	"""%-12d"""		662304	0					
ANR	662380	Argument	size		662304	1					
ANR	662381	Identifier	size		662304	0					
ANR	662382	ElseStatement	else		662304	0					
ANR	662383	CompoundStatement		10:9:280:280	662304	0					
ANR	662384	ExpressionStatement	"msg = r_str_newf ( ""%-4d -> %-4d"" , size , realsize )"	2663:3:85093:85142	662304	0	True				
ANR	662385	AssignmentExpression	"msg = r_str_newf ( ""%-4d -> %-4d"" , size , realsize )"		662304	0		=			
ANR	662386	Identifier	msg		662304	0					
ANR	662387	CallExpression	"r_str_newf ( ""%-4d -> %-4d"" , size , realsize )"		662304	1					
ANR	662388	Callee	r_str_newf		662304	0					
ANR	662389	Identifier	r_str_newf		662304	0					
ANR	662390	ArgumentList	"""%-4d -> %-4d"""		662304	1					
ANR	662391	Argument	"""%-4d -> %-4d"""		662304	0					
ANR	662392	PrimaryExpression	"""%-4d -> %-4d"""		662304	0					
ANR	662393	Argument	size		662304	1					
ANR	662394	Identifier	size		662304	0					
ANR	662395	Argument	realsize		662304	2					
ANR	662396	Identifier	realsize		662304	0					
ANR	662397	Statement	r_cons_printf	2665:2:85150:85162	662304	4	True				
ANR	662398	Statement	(	2665:16:85164:85164	662304	5	True				
ANR	662399	Statement	"""0x%08"""	2665:17:85165:85171	662304	6	True				
ANR	662400	Statement	PFMT64x	2665:24:85172:85178	662304	7	True				
ANR	662401	Statement	""" %4d %4s %s\\n"""	2665:31:85179:85193	662304	8	True				
ANR	662402	Statement	","	2665:46:85194:85194	662304	9	True				
ANR	662403	Statement	fcn	2666:4:85200:85202	662304	10	True				
ANR	662404	Statement	->	2666:7:85203:85204	662304	11	True				
ANR	662405	Statement	addr	2666:9:85205:85208	662304	12	True				
ANR	662406	Statement	","	2666:13:85209:85209	662304	13	True				
ANR	662407	Statement	r_list_length	2666:15:85211:85223	662304	14	True				
ANR	662408	Statement	(	2666:29:85225:85225	662304	15	True				
ANR	662409	Statement	fcn	2666:30:85226:85228	662304	16	True				
ANR	662410	Statement	->	2666:33:85229:85230	662304	17	True				
ANR	662411	Statement	bbs	2666:35:85231:85233	662304	18	True				
ANR	662412	Statement	)	2666:38:85234:85234	662304	19	True				
ANR	662413	Statement	","	2666:39:85235:85235	662304	20	True				
ANR	662414	Statement	msg	2666:41:85237:85239	662304	21	True				
ANR	662415	Statement	","	2666:44:85240:85240	662304	22	True				
ANR	662416	Statement	name	2666:46:85242:85245	662304	23	True				
ANR	662417	Statement	)	2666:50:85246:85246	662304	24	True				
ANR	662418	ExpressionStatement		2666:51:85247:85247	662304	25	True				
ANR	662419	ExpressionStatement	free ( name )	2667:2:85251:85262	662304	26	True				
ANR	662420	CallExpression	free ( name )		662304	0					
ANR	662421	Callee	free		662304	0					
ANR	662422	Identifier	free		662304	0					
ANR	662423	ArgumentList	name		662304	1					
ANR	662424	Argument	name		662304	0					
ANR	662425	Identifier	name		662304	0					
ANR	662426	ExpressionStatement	free ( msg )	2668:2:85266:85276	662304	27	True				
ANR	662427	CallExpression	free ( msg )		662304	0					
ANR	662428	Callee	free		662304	0					
ANR	662429	Identifier	free		662304	0					
ANR	662430	ArgumentList	msg		662304	1					
ANR	662431	Argument	msg		662304	0					
ANR	662432	Identifier	msg		662304	0					
ANR	662433	ReturnType	static void		662304	1					
ANR	662434	Identifier	__fcn_print_default		662304	2					
ANR	662435	ParameterList	"RCore * core , RAnalFunction * fcn , bool quiet"		662304	3					
ANR	662436	Parameter	RCore * core	2653:32:84762:84772	662304	0	True				
ANR	662437	ParameterType	RCore *		662304	0					
ANR	662438	Identifier	core		662304	1					
ANR	662439	Parameter	RAnalFunction * fcn	2653:45:84775:84792	662304	1	True				
ANR	662440	ParameterType	RAnalFunction *		662304	0					
ANR	662441	Identifier	fcn		662304	1					
ANR	662442	Parameter	bool quiet	2653:65:84795:84804	662304	2	True				
ANR	662443	ParameterType	bool		662304	0					
ANR	662444	Identifier	quiet		662304	1					
ANR	662445	CFGEntryNode	ENTRY		662304		True				
ANR	662446	CFGExitNode	EXIT		662304		True				
ANR	662447	Symbol	fcn		662304						
ANR	662448	Symbol	msg		662304						
ANR	662449	Symbol	core		662304						
ANR	662450	Symbol	r_anal_fcn_realsize		662304						
ANR	662451	Symbol	size		662304						
ANR	662452	Symbol	r_core_anal_fcn_name		662304						
ANR	662453	Symbol	r_anal_fcn_size		662304						
ANR	662454	Symbol	realsize		662304						
ANR	662455	Symbol	name		662304						
ANR	662456	Symbol	quiet		662304						
ANR	662457	Symbol	r_str_newf		662304						
ANR	662458	Function	fcn_list_default	2672:0:85284:85524							
ANR	662459	FunctionDef	"fcn_list_default (RCore * core , RList * fcns , bool quiet)"		662458	0					
ANR	662460	CompoundStatement		2672:66:85350:85524	662458	0					
ANR	662461	IdentifierDeclStatement	RListIter * iter ;	2673:1:85353:85368	662458	0	True				
ANR	662462	IdentifierDecl	* iter		662458	0					
ANR	662463	IdentifierDeclType	RListIter *		662458	0					
ANR	662464	Identifier	iter		662458	1					
ANR	662465	IdentifierDeclStatement	RAnalFunction * fcn ;	2674:1:85371:85389	662458	1	True				
ANR	662466	IdentifierDecl	* fcn		662458	0					
ANR	662467	IdentifierDeclType	RAnalFunction *		662458	0					
ANR	662468	Identifier	fcn		662458	1					
ANR	662469	Statement	r_list_foreach	2675:1:85392:85405	662458	2	True				
ANR	662470	Statement	(	2675:16:85407:85407	662458	3	True				
ANR	662471	Statement	fcns	2675:17:85408:85411	662458	4	True				
ANR	662472	Statement	","	2675:21:85412:85412	662458	5	True				
ANR	662473	Statement	iter	2675:23:85414:85417	662458	6	True				
ANR	662474	Statement	","	2675:27:85418:85418	662458	7	True				
ANR	662475	Statement	fcn	2675:29:85420:85422	662458	8	True				
ANR	662476	Statement	)	2675:32:85423:85423	662458	9	True				
ANR	662477	CompoundStatement		4:34:74:74	662458	10					
ANR	662478	ExpressionStatement	"__fcn_print_default ( core , fcn , quiet )"	2676:2:85429:85467	662458	0	True				
ANR	662479	CallExpression	"__fcn_print_default ( core , fcn , quiet )"		662458	0					
ANR	662480	Callee	__fcn_print_default		662458	0					
ANR	662481	Identifier	__fcn_print_default		662458	0					
ANR	662482	ArgumentList	core		662458	1					
ANR	662483	Argument	core		662458	0					
ANR	662484	Identifier	core		662458	0					
ANR	662485	Argument	fcn		662458	1					
ANR	662486	Identifier	fcn		662458	0					
ANR	662487	Argument	quiet		662458	2					
ANR	662488	Identifier	quiet		662458	0					
ANR	662489	IfStatement	if ( quiet )		662458	1					
ANR	662490	Condition	quiet	2677:6:85475:85479	662458	0	True				
ANR	662491	Identifier	quiet		662458	0					
ANR	662492	CompoundStatement		6:13:131:131	662458	1					
ANR	662493	ExpressionStatement	r_cons_newline ( )	2678:3:85487:85504	662458	0	True				
ANR	662494	CallExpression	r_cons_newline ( )		662458	0					
ANR	662495	Callee	r_cons_newline		662458	0					
ANR	662496	Identifier	r_cons_newline		662458	0					
ANR	662497	ArgumentList			662458	1					
ANR	662498	ReturnStatement	return 0 ;	2681:1:85514:85522	662458	11	True				
ANR	662499	PrimaryExpression	0		662458	0					
ANR	662500	ReturnType	static int		662458	1					
ANR	662501	Identifier	fcn_list_default		662458	2					
ANR	662502	ParameterList	"RCore * core , RList * fcns , bool quiet"		662458	3					
ANR	662503	Parameter	RCore * core	2672:28:85312:85322	662458	0	True				
ANR	662504	ParameterType	RCore *		662458	0					
ANR	662505	Identifier	core		662458	1					
ANR	662506	Parameter	RList * fcns	2672:41:85325:85335	662458	1	True				
ANR	662507	ParameterType	RList *		662458	0					
ANR	662508	Identifier	fcns		662458	1					
ANR	662509	Parameter	bool quiet	2672:54:85338:85347	662458	2	True				
ANR	662510	ParameterType	bool		662458	0					
ANR	662511	Identifier	quiet		662458	1					
ANR	662512	CFGEntryNode	ENTRY		662458		True				
ANR	662513	CFGExitNode	EXIT		662458		True				
ANR	662514	Symbol	fcn		662458						
ANR	662515	Symbol	core		662458						
ANR	662516	Symbol	iter		662458						
ANR	662517	Symbol	quiet		662458						
ANR	662518	Symbol	fcns		662458						
ANR	662519	Function	r_core_anal_fcn_get_calls	2685:0:85608:86102							
ANR	662520	FunctionDef	"r_core_anal_fcn_get_calls (RCore * core , RAnalFunction * fcn)"		662519	0					
ANR	662521	CompoundStatement		2685:73:85681:86102	662519	0					
ANR	662522	IdentifierDeclStatement	RAnalRef * refi ;	2686:1:85684:85698	662519	0	True				
ANR	662523	IdentifierDecl	* refi		662519	0					
ANR	662524	IdentifierDeclType	RAnalRef *		662519	0					
ANR	662525	Identifier	refi		662519	1					
ANR	662526	IdentifierDeclStatement	"RListIter * iter , * iter2 ;"	2687:1:85701:85724	662519	1	True				
ANR	662527	IdentifierDecl	* iter		662519	0					
ANR	662528	IdentifierDeclType	RListIter *		662519	0					
ANR	662529	Identifier	iter		662519	1					
ANR	662530	IdentifierDecl	* iter2		662519	1					
ANR	662531	IdentifierDeclType	RListIter *		662519	0					
ANR	662532	Identifier	iter2		662519	1					
ANR	662533	IdentifierDeclStatement	"RList * refs = r_anal_fcn_get_refs ( core -> anal , fcn ) ;"	2690:1:85770:85821	662519	2	True				
ANR	662534	IdentifierDecl	"* refs = r_anal_fcn_get_refs ( core -> anal , fcn )"		662519	0					
ANR	662535	IdentifierDeclType	RList *		662519	0					
ANR	662536	Identifier	refs		662519	1					
ANR	662537	AssignmentExpression	"* refs = r_anal_fcn_get_refs ( core -> anal , fcn )"		662519	2		=			
ANR	662538	Identifier	refs		662519	0					
ANR	662539	CallExpression	"r_anal_fcn_get_refs ( core -> anal , fcn )"		662519	1					
ANR	662540	Callee	r_anal_fcn_get_refs		662519	0					
ANR	662541	Identifier	r_anal_fcn_get_refs		662519	0					
ANR	662542	ArgumentList	core -> anal		662519	1					
ANR	662543	Argument	core -> anal		662519	0					
ANR	662544	PtrMemberAccess	core -> anal		662519	0					
ANR	662545	Identifier	core		662519	0					
ANR	662546	Identifier	anal		662519	1					
ANR	662547	Argument	fcn		662519	1					
ANR	662548	Identifier	fcn		662519	0					
ANR	662549	IfStatement	if ( ! r_list_empty ( refs ) )		662519	3					
ANR	662550	Condition	! r_list_empty ( refs )	2692:5:85845:85864	662519	0	True				
ANR	662551	UnaryOperationExpression	! r_list_empty ( refs )		662519	0					
ANR	662552	UnaryOperator	!		662519	0					
ANR	662553	CallExpression	r_list_empty ( refs )		662519	1					
ANR	662554	Callee	r_list_empty		662519	0					
ANR	662555	Identifier	r_list_empty		662519	0					
ANR	662556	ArgumentList	refs		662519	1					
ANR	662557	Argument	refs		662519	0					
ANR	662558	Identifier	refs		662519	0					
ANR	662559	CompoundStatement		8:27:185:185	662519	1					
ANR	662560	Statement	r_list_foreach_safe	2694:2:85951:85969	662519	0	True				
ANR	662561	Statement	(	2694:22:85971:85971	662519	1	True				
ANR	662562	Statement	refs	2694:23:85972:85975	662519	2	True				
ANR	662563	Statement	","	2694:27:85976:85976	662519	3	True				
ANR	662564	Statement	iter	2694:29:85978:85981	662519	4	True				
ANR	662565	Statement	","	2694:33:85982:85982	662519	5	True				
ANR	662566	Statement	iter2	2694:35:85984:85988	662519	6	True				
ANR	662567	Statement	","	2694:40:85989:85989	662519	7	True				
ANR	662568	Statement	refi	2694:42:85991:85994	662519	8	True				
ANR	662569	Statement	)	2694:46:85995:85995	662519	9	True				
ANR	662570	CompoundStatement		10:48:315:315	662519	10					
ANR	662571	IfStatement	if ( refi -> type != R_ANAL_REF_TYPE_CALL )		662519	0					
ANR	662572	Condition	refi -> type != R_ANAL_REF_TYPE_CALL	2695:7:86006:86039	662519	0	True				
ANR	662573	EqualityExpression	refi -> type != R_ANAL_REF_TYPE_CALL		662519	0		!=			
ANR	662574	PtrMemberAccess	refi -> type		662519	0					
ANR	662575	Identifier	refi		662519	0					
ANR	662576	Identifier	type		662519	1					
ANR	662577	Identifier	R_ANAL_REF_TYPE_CALL		662519	1					
ANR	662578	CompoundStatement		11:43:360:360	662519	1					
ANR	662579	ExpressionStatement	"r_list_delete ( refs , iter )"	2696:4:86048:86074	662519	0	True				
ANR	662580	CallExpression	"r_list_delete ( refs , iter )"		662519	0					
ANR	662581	Callee	r_list_delete		662519	0					
ANR	662582	Identifier	r_list_delete		662519	0					
ANR	662583	ArgumentList	refs		662519	1					
ANR	662584	Argument	refs		662519	0					
ANR	662585	Identifier	refs		662519	0					
ANR	662586	Argument	iter		662519	1					
ANR	662587	Identifier	iter		662519	0					
ANR	662588	ReturnStatement	return refs ;	2700:1:86089:86100	662519	4	True				
ANR	662589	Identifier	refs		662519	0					
ANR	662590	ReturnType	R_API RList *		662519	1					
ANR	662591	Identifier	r_core_anal_fcn_get_calls		662519	2					
ANR	662592	ParameterList	"RCore * core , RAnalFunction * fcn"		662519	3					
ANR	662593	Parameter	RCore * core	2685:40:85648:85658	662519	0	True				
ANR	662594	ParameterType	RCore *		662519	0					
ANR	662595	Identifier	core		662519	1					
ANR	662596	Parameter	RAnalFunction * fcn	2685:53:85661:85678	662519	1	True				
ANR	662597	ParameterType	RAnalFunction *		662519	0					
ANR	662598	Identifier	fcn		662519	1					
ANR	662599	CFGEntryNode	ENTRY		662519		True				
ANR	662600	CFGExitNode	EXIT		662519		True				
ANR	662601	Symbol	refi		662519						
ANR	662602	Symbol	iter2		662519						
ANR	662603	Symbol	* core		662519						
ANR	662604	Symbol	iter		662519						
ANR	662605	Symbol	core -> anal		662519						
ANR	662606	Symbol	r_anal_fcn_get_refs		662519						
ANR	662607	Symbol	* refi		662519						
ANR	662608	Symbol	fcn		662519						
ANR	662609	Symbol	core		662519						
ANR	662610	Symbol	refi -> type		662519						
ANR	662611	Symbol	refs		662519						
ANR	662612	Symbol	r_list_empty		662519						
ANR	662613	Symbol	R_ANAL_REF_TYPE_CALL		662519						
ANR	662614	Function	fcn_print_makestyle	2704:0:86157:87847							
ANR	662615	FunctionDef	"fcn_print_makestyle (RCore * core , RList * fcns , char mode)"		662614	0					
ANR	662616	CompoundStatement		2704:68:86225:87847	662614	0					
ANR	662617	IdentifierDeclStatement	RListIter * refiter ;	2705:1:86228:86246	662614	0	True				
ANR	662618	IdentifierDecl	* refiter		662614	0					
ANR	662619	IdentifierDeclType	RListIter *		662614	0					
ANR	662620	Identifier	refiter		662614	1					
ANR	662621	IdentifierDeclStatement	RListIter * fcniter ;	2706:1:86249:86267	662614	1	True				
ANR	662622	IdentifierDecl	* fcniter		662614	0					
ANR	662623	IdentifierDeclType	RListIter *		662614	0					
ANR	662624	Identifier	fcniter		662614	1					
ANR	662625	IdentifierDeclStatement	RAnalFunction * fcn ;	2707:1:86270:86288	662614	2	True				
ANR	662626	IdentifierDecl	* fcn		662614	0					
ANR	662627	IdentifierDeclType	RAnalFunction *		662614	0					
ANR	662628	Identifier	fcn		662614	1					
ANR	662629	IdentifierDeclStatement	RAnalRef * refi ;	2708:1:86291:86305	662614	3	True				
ANR	662630	IdentifierDecl	* refi		662614	0					
ANR	662631	IdentifierDeclType	RAnalRef *		662614	0					
ANR	662632	Identifier	refi		662614	1					
ANR	662633	IdentifierDeclStatement	RList * refs = NULL ;	2709:1:86308:86326	662614	4	True				
ANR	662634	IdentifierDecl	* refs = NULL		662614	0					
ANR	662635	IdentifierDeclType	RList *		662614	0					
ANR	662636	Identifier	refs		662614	1					
ANR	662637	AssignmentExpression	* refs = NULL		662614	2		=			
ANR	662638	Identifier	NULL		662614	0					
ANR	662639	Identifier	NULL		662614	1					
ANR	662640	IdentifierDeclStatement	PJ * pj = NULL ;	2710:1:86329:86342	662614	5	True				
ANR	662641	IdentifierDecl	* pj = NULL		662614	0					
ANR	662642	IdentifierDeclType	PJ *		662614	0					
ANR	662643	Identifier	pj		662614	1					
ANR	662644	AssignmentExpression	* pj = NULL		662614	2		=			
ANR	662645	Identifier	NULL		662614	0					
ANR	662646	Identifier	NULL		662614	1					
ANR	662647	IfStatement	if ( mode == 'j' )		662614	6					
ANR	662648	Condition	mode == 'j'	2712:5:86350:86360	662614	0	True				
ANR	662649	EqualityExpression	mode == 'j'		662614	0		==			
ANR	662650	Identifier	mode		662614	0					
ANR	662651	PrimaryExpression	'j'		662614	1					
ANR	662652	CompoundStatement		9:18:137:137	662614	1					
ANR	662653	ExpressionStatement	pj = pj_new ( )	2713:2:86367:86381	662614	0	True				
ANR	662654	AssignmentExpression	pj = pj_new ( )		662614	0		=			
ANR	662655	Identifier	pj		662614	0					
ANR	662656	CallExpression	pj_new ( )		662614	1					
ANR	662657	Callee	pj_new		662614	0					
ANR	662658	Identifier	pj_new		662614	0					
ANR	662659	ArgumentList			662614	1					
ANR	662660	ExpressionStatement	pj_a ( pj )	2714:2:86385:86394	662614	1	True				
ANR	662661	CallExpression	pj_a ( pj )		662614	0					
ANR	662662	Callee	pj_a		662614	0					
ANR	662663	Identifier	pj_a		662614	0					
ANR	662664	ArgumentList	pj		662614	1					
ANR	662665	Argument	pj		662614	0					
ANR	662666	Identifier	pj		662614	0					
ANR	662667	Statement	r_list_foreach	2718:1:86432:86445	662614	7	True				
ANR	662668	Statement	(	2718:16:86447:86447	662614	8	True				
ANR	662669	Statement	fcns	2718:17:86448:86451	662614	9	True				
ANR	662670	Statement	","	2718:21:86452:86452	662614	10	True				
ANR	662671	Statement	fcniter	2718:23:86454:86460	662614	11	True				
ANR	662672	Statement	","	2718:30:86461:86461	662614	12	True				
ANR	662673	Statement	fcn	2718:32:86463:86465	662614	13	True				
ANR	662674	Statement	)	2718:35:86466:86466	662614	14	True				
ANR	662675	CompoundStatement		15:37:242:242	662614	15					
ANR	662676	ExpressionStatement	"refs = r_core_anal_fcn_get_calls ( core , fcn )"	2720:2:86505:86549	662614	0	True				
ANR	662677	AssignmentExpression	"refs = r_core_anal_fcn_get_calls ( core , fcn )"		662614	0		=			
ANR	662678	Identifier	refs		662614	0					
ANR	662679	CallExpression	"r_core_anal_fcn_get_calls ( core , fcn )"		662614	1					
ANR	662680	Callee	r_core_anal_fcn_get_calls		662614	0					
ANR	662681	Identifier	r_core_anal_fcn_get_calls		662614	0					
ANR	662682	ArgumentList	core		662614	1					
ANR	662683	Argument	core		662614	0					
ANR	662684	Identifier	core		662614	0					
ANR	662685	Argument	fcn		662614	1					
ANR	662686	Identifier	fcn		662614	0					
ANR	662687	ExpressionStatement	"refs = r_list_uniq ( refs , ( RListComparator ) RAnalRef_cmp )"	2722:2:86589:86645	662614	1	True				
ANR	662688	AssignmentExpression	"refs = r_list_uniq ( refs , ( RListComparator ) RAnalRef_cmp )"		662614	0		=			
ANR	662689	Identifier	refs		662614	0					
ANR	662690	CallExpression	"r_list_uniq ( refs , ( RListComparator ) RAnalRef_cmp )"		662614	1					
ANR	662691	Callee	r_list_uniq		662614	0					
ANR	662692	Identifier	r_list_uniq		662614	0					
ANR	662693	ArgumentList	refs		662614	1					
ANR	662694	Argument	refs		662614	0					
ANR	662695	Identifier	refs		662614	0					
ANR	662696	Argument	( RListComparator ) RAnalRef_cmp		662614	1					
ANR	662697	CastExpression	( RListComparator ) RAnalRef_cmp		662614	0					
ANR	662698	CastTarget	RListComparator		662614	0					
ANR	662699	Identifier	RAnalRef_cmp		662614	1					
ANR	662700	IfStatement	if ( ! r_list_empty ( refs ) )		662614	2					
ANR	662701	Condition	! r_list_empty ( refs )	2725:6:86698:86717	662614	0	True				
ANR	662702	UnaryOperationExpression	! r_list_empty ( refs )		662614	0					
ANR	662703	UnaryOperator	!		662614	0					
ANR	662704	CallExpression	r_list_empty ( refs )		662614	1					
ANR	662705	Callee	r_list_empty		662614	0					
ANR	662706	Identifier	r_list_empty		662614	0					
ANR	662707	ArgumentList	refs		662614	1					
ANR	662708	Argument	refs		662614	0					
ANR	662709	Identifier	refs		662614	0					
ANR	662710	CompoundStatement		22:28:494:494	662614	1					
ANR	662711	IfStatement	if ( pj )		662614	0					
ANR	662712	Condition	pj	2726:7:86729:86730	662614	0	True				
ANR	662713	Identifier	pj		662614	0					
ANR	662714	CompoundStatement		23:11:507:507	662614	1					
ANR	662715	ExpressionStatement	pj_o ( pj )	2727:4:86772:86781	662614	0	True				
ANR	662716	CallExpression	pj_o ( pj )		662614	0					
ANR	662717	Callee	pj_o		662614	0					
ANR	662718	Identifier	pj_o		662614	0					
ANR	662719	ArgumentList	pj		662614	1					
ANR	662720	Argument	pj		662614	0					
ANR	662721	Identifier	pj		662614	0					
ANR	662722	ExpressionStatement	"pj_ks ( pj , ""name"" , fcn -> name )"	2728:4:86787:86816	662614	1	True				
ANR	662723	CallExpression	"pj_ks ( pj , ""name"" , fcn -> name )"		662614	0					
ANR	662724	Callee	pj_ks		662614	0					
ANR	662725	Identifier	pj_ks		662614	0					
ANR	662726	ArgumentList	pj		662614	1					
ANR	662727	Argument	pj		662614	0					
ANR	662728	Identifier	pj		662614	0					
ANR	662729	Argument	"""name"""		662614	1					
ANR	662730	PrimaryExpression	"""name"""		662614	0					
ANR	662731	Argument	fcn -> name		662614	2					
ANR	662732	PtrMemberAccess	fcn -> name		662614	0					
ANR	662733	Identifier	fcn		662614	0					
ANR	662734	Identifier	name		662614	1					
ANR	662735	ExpressionStatement	"pj_kn ( pj , ""addr"" , fcn -> addr )"	2729:4:86822:86851	662614	2	True				
ANR	662736	CallExpression	"pj_kn ( pj , ""addr"" , fcn -> addr )"		662614	0					
ANR	662737	Callee	pj_kn		662614	0					
ANR	662738	Identifier	pj_kn		662614	0					
ANR	662739	ArgumentList	pj		662614	1					
ANR	662740	Argument	pj		662614	0					
ANR	662741	Identifier	pj		662614	0					
ANR	662742	Argument	"""addr"""		662614	1					
ANR	662743	PrimaryExpression	"""addr"""		662614	0					
ANR	662744	Argument	fcn -> addr		662614	2					
ANR	662745	PtrMemberAccess	fcn -> addr		662614	0					
ANR	662746	Identifier	fcn		662614	0					
ANR	662747	Identifier	addr		662614	1					
ANR	662748	ExpressionStatement	"pj_k ( pj , ""calls"" )"	2730:4:86857:86875	662614	3	True				
ANR	662749	CallExpression	"pj_k ( pj , ""calls"" )"		662614	0					
ANR	662750	Callee	pj_k		662614	0					
ANR	662751	Identifier	pj_k		662614	0					
ANR	662752	ArgumentList	pj		662614	1					
ANR	662753	Argument	pj		662614	0					
ANR	662754	Identifier	pj		662614	0					
ANR	662755	Argument	"""calls"""		662614	1					
ANR	662756	PrimaryExpression	"""calls"""		662614	0					
ANR	662757	ExpressionStatement	pj_a ( pj )	2731:4:86881:86890	662614	4	True				
ANR	662758	CallExpression	pj_a ( pj )		662614	0					
ANR	662759	Callee	pj_a		662614	0					
ANR	662760	Identifier	pj_a		662614	0					
ANR	662761	ArgumentList	pj		662614	1					
ANR	662762	Argument	pj		662614	0					
ANR	662763	Identifier	pj		662614	0					
ANR	662764	ElseStatement	else		662614	0					
ANR	662765	CompoundStatement		29:10:676:676	662614	0					
ANR	662766	ExpressionStatement	"r_cons_printf ( ""%s"" , fcn -> name )"	2733:4:86908:86939	662614	0	True				
ANR	662767	CallExpression	"r_cons_printf ( ""%s"" , fcn -> name )"		662614	0					
ANR	662768	Callee	r_cons_printf		662614	0					
ANR	662769	Identifier	r_cons_printf		662614	0					
ANR	662770	ArgumentList	"""%s"""		662614	1					
ANR	662771	Argument	"""%s"""		662614	0					
ANR	662772	PrimaryExpression	"""%s"""		662614	0					
ANR	662773	Argument	fcn -> name		662614	1					
ANR	662774	PtrMemberAccess	fcn -> name		662614	0					
ANR	662775	Identifier	fcn		662614	0					
ANR	662776	Identifier	name		662614	1					
ANR	662777	IfStatement	if ( mode == 'm' )		662614	1					
ANR	662778	Condition	mode == 'm'	2736:7:86954:86964	662614	0	True				
ANR	662779	EqualityExpression	mode == 'm'		662614	0		==			
ANR	662780	Identifier	mode		662614	0					
ANR	662781	PrimaryExpression	'm'		662614	1					
ANR	662782	CompoundStatement		33:20:741:741	662614	1					
ANR	662783	ExpressionStatement	"r_cons_printf ( "":\\n"" )"	2737:4:86973:86994	662614	0	True				
ANR	662784	CallExpression	"r_cons_printf ( "":\\n"" )"		662614	0					
ANR	662785	Callee	r_cons_printf		662614	0					
ANR	662786	Identifier	r_cons_printf		662614	0					
ANR	662787	ArgumentList	""":\\n"""		662614	1					
ANR	662788	Argument	""":\\n"""		662614	0					
ANR	662789	PrimaryExpression	""":\\n"""		662614	0					
ANR	662790	ElseStatement	else		662614	0					
ANR	662791	IfStatement	if ( mode == 'q' )		662614	0					
ANR	662792	Condition	mode == 'q'	2738:14:87010:87020	662614	0	True				
ANR	662793	EqualityExpression	mode == 'q'		662614	0		==			
ANR	662794	Identifier	mode		662614	0					
ANR	662795	PrimaryExpression	'q'		662614	1					
ANR	662796	CompoundStatement		35:27:797:797	662614	1					
ANR	662797	ExpressionStatement	"r_cons_printf ( "" -> "" )"	2739:4:87029:87051	662614	0	True				
ANR	662798	CallExpression	"r_cons_printf ( "" -> "" )"		662614	0					
ANR	662799	Callee	r_cons_printf		662614	0					
ANR	662800	Identifier	r_cons_printf		662614	0					
ANR	662801	ArgumentList	""" -> """		662614	1					
ANR	662802	Argument	""" -> """		662614	0					
ANR	662803	PrimaryExpression	""" -> """		662614	0					
ANR	662804	Statement	r_list_foreach	2742:3:87105:87118	662614	2	True				
ANR	662805	Statement	(	2742:18:87120:87120	662614	3	True				
ANR	662806	Statement	refs	2742:19:87121:87124	662614	4	True				
ANR	662807	Statement	","	2742:23:87125:87125	662614	5	True				
ANR	662808	Statement	refiter	2742:25:87127:87133	662614	6	True				
ANR	662809	Statement	","	2742:32:87134:87134	662614	7	True				
ANR	662810	Statement	refi	2742:34:87136:87139	662614	8	True				
ANR	662811	Statement	)	2742:38:87140:87140	662614	9	True				
ANR	662812	CompoundStatement		40:4:922:975	662614	10					
ANR	662813	IdentifierDeclStatement	"RFlagItem * f = r_flag_get_i ( core -> flags , refi -> addr ) ;"	2743:4:87148:87201	662614	0	True				
ANR	662814	IdentifierDecl	"* f = r_flag_get_i ( core -> flags , refi -> addr )"		662614	0					
ANR	662815	IdentifierDeclType	RFlagItem *		662614	0					
ANR	662816	Identifier	f		662614	1					
ANR	662817	AssignmentExpression	"* f = r_flag_get_i ( core -> flags , refi -> addr )"		662614	2		=			
ANR	662818	Identifier	f		662614	0					
ANR	662819	CallExpression	"r_flag_get_i ( core -> flags , refi -> addr )"		662614	1					
ANR	662820	Callee	r_flag_get_i		662614	0					
ANR	662821	Identifier	r_flag_get_i		662614	0					
ANR	662822	ArgumentList	core -> flags		662614	1					
ANR	662823	Argument	core -> flags		662614	0					
ANR	662824	PtrMemberAccess	core -> flags		662614	0					
ANR	662825	Identifier	core		662614	0					
ANR	662826	Identifier	flags		662614	1					
ANR	662827	Argument	refi -> addr		662614	1					
ANR	662828	PtrMemberAccess	refi -> addr		662614	0					
ANR	662829	Identifier	refi		662614	0					
ANR	662830	Identifier	addr		662614	1					
ANR	662831	Statement	char	2744:4:87207:87210	662614	1	True				
ANR	662832	Statement	*	2744:9:87212:87212	662614	2	True				
ANR	662833	Statement	dst	2744:10:87213:87215	662614	3	True				
ANR	662834	Statement	=	2744:14:87217:87217	662614	4	True				
ANR	662835	Statement	r_str_newf	2744:16:87219:87228	662614	5	True				
ANR	662836	Statement	(	2744:27:87230:87230	662614	6	True				
ANR	662837	Statement	(	2744:28:87231:87231	662614	7	True				
ANR	662838	Statement	f	2744:29:87232:87232	662614	8	True				
ANR	662839	Statement	?	2744:30:87233:87233	662614	9	True				
ANR	662840	Statement	f	2744:32:87235:87235	662614	10	True				
ANR	662841	Statement	->	2744:33:87236:87237	662614	11	True				
ANR	662842	Label	name :	2744:35:87238:87242	662614	12	True				
ANR	662843	Identifier	name		662614	0					
ANR	662844	Statement	"""0x%08"""	2744:41:87244:87250	662614	13	True				
ANR	662845	Statement	PFMT64x	2744:48:87251:87257	662614	14	True				
ANR	662846	Statement	)	2744:55:87258:87258	662614	15	True				
ANR	662847	Statement	","	2744:56:87259:87259	662614	16	True				
ANR	662848	Statement	refi	2744:58:87261:87264	662614	17	True				
ANR	662849	Statement	->	2744:62:87265:87266	662614	18	True				
ANR	662850	Statement	addr	2744:64:87267:87270	662614	19	True				
ANR	662851	Statement	)	2744:68:87271:87271	662614	20	True				
ANR	662852	ExpressionStatement		2744:69:87272:87272	662614	21	True				
ANR	662853	IfStatement	if ( pj )		662614	22					
ANR	662854	Condition	pj	2745:8:87282:87283	662614	0	True				
ANR	662855	Identifier	pj		662614	0					
ANR	662856	CompoundStatement		42:12:1060:1060	662614	1					
ANR	662857	ExpressionStatement	pj_o ( pj )	2746:5:87319:87328	662614	0	True				
ANR	662858	CallExpression	pj_o ( pj )		662614	0					
ANR	662859	Callee	pj_o		662614	0					
ANR	662860	Identifier	pj_o		662614	0					
ANR	662861	ArgumentList	pj		662614	1					
ANR	662862	Argument	pj		662614	0					
ANR	662863	Identifier	pj		662614	0					
ANR	662864	ExpressionStatement	"pj_ks ( pj , ""name"" , dst )"	2747:5:87335:87358	662614	1	True				
ANR	662865	CallExpression	"pj_ks ( pj , ""name"" , dst )"		662614	0					
ANR	662866	Callee	pj_ks		662614	0					
ANR	662867	Identifier	pj_ks		662614	0					
ANR	662868	ArgumentList	pj		662614	1					
ANR	662869	Argument	pj		662614	0					
ANR	662870	Identifier	pj		662614	0					
ANR	662871	Argument	"""name"""		662614	1					
ANR	662872	PrimaryExpression	"""name"""		662614	0					
ANR	662873	Argument	dst		662614	2					
ANR	662874	Identifier	dst		662614	0					
ANR	662875	ExpressionStatement	"pj_kn ( pj , ""addr"" , refi -> addr )"	2748:5:87365:87395	662614	2	True				
ANR	662876	CallExpression	"pj_kn ( pj , ""addr"" , refi -> addr )"		662614	0					
ANR	662877	Callee	pj_kn		662614	0					
ANR	662878	Identifier	pj_kn		662614	0					
ANR	662879	ArgumentList	pj		662614	1					
ANR	662880	Argument	pj		662614	0					
ANR	662881	Identifier	pj		662614	0					
ANR	662882	Argument	"""addr"""		662614	1					
ANR	662883	PrimaryExpression	"""addr"""		662614	0					
ANR	662884	Argument	refi -> addr		662614	2					
ANR	662885	PtrMemberAccess	refi -> addr		662614	0					
ANR	662886	Identifier	refi		662614	0					
ANR	662887	Identifier	addr		662614	1					
ANR	662888	ExpressionStatement	pj_end ( pj )	2749:5:87402:87413	662614	3	True				
ANR	662889	CallExpression	pj_end ( pj )		662614	0					
ANR	662890	Callee	pj_end		662614	0					
ANR	662891	Identifier	pj_end		662614	0					
ANR	662892	ArgumentList	pj		662614	1					
ANR	662893	Argument	pj		662614	0					
ANR	662894	Identifier	pj		662614	0					
ANR	662895	ElseStatement	else		662614	0					
ANR	662896	IfStatement	if ( mode == 'q' )		662614	0					
ANR	662897	Condition	mode == 'q'	2750:15:87455:87465	662614	0	True				
ANR	662898	EqualityExpression	mode == 'q'		662614	0		==			
ANR	662899	Identifier	mode		662614	0					
ANR	662900	PrimaryExpression	'q'		662614	1					
ANR	662901	CompoundStatement		47:28:1242:1242	662614	1					
ANR	662902	ExpressionStatement	"r_cons_printf ( ""%s "" , dst )"	2751:5:87475:87501	662614	0	True				
ANR	662903	CallExpression	"r_cons_printf ( ""%s "" , dst )"		662614	0					
ANR	662904	Callee	r_cons_printf		662614	0					
ANR	662905	Identifier	r_cons_printf		662614	0					
ANR	662906	ArgumentList	"""%s """		662614	1					
ANR	662907	Argument	"""%s """		662614	0					
ANR	662908	PrimaryExpression	"""%s """		662614	0					
ANR	662909	Argument	dst		662614	1					
ANR	662910	Identifier	dst		662614	0					
ANR	662911	ElseStatement	else		662614	0					
ANR	662912	CompoundStatement		49:11:1288:1288	662614	0					
ANR	662913	ExpressionStatement	"r_cons_printf ( ""    %s\\n"" , dst )"	2753:5:87521:87552	662614	0	True				
ANR	662914	CallExpression	"r_cons_printf ( ""    %s\\n"" , dst )"		662614	0					
ANR	662915	Callee	r_cons_printf		662614	0					
ANR	662916	Identifier	r_cons_printf		662614	0					
ANR	662917	ArgumentList	"""    %s\\n"""		662614	1					
ANR	662918	Argument	"""    %s\\n"""		662614	0					
ANR	662919	PrimaryExpression	"""    %s\\n"""		662614	0					
ANR	662920	Argument	dst		662614	1					
ANR	662921	Identifier	dst		662614	0					
ANR	662922	IfStatement	if ( pj )		662614	11					
ANR	662923	Condition	pj	2756:7:87572:87573	662614	0	True				
ANR	662924	Identifier	pj		662614	0					
ANR	662925	CompoundStatement		53:11:1350:1350	662614	1					
ANR	662926	ExpressionStatement	pj_end ( pj )	2757:4:87582:87593	662614	0	True				
ANR	662927	CallExpression	pj_end ( pj )		662614	0					
ANR	662928	Callee	pj_end		662614	0					
ANR	662929	Identifier	pj_end		662614	0					
ANR	662930	ArgumentList	pj		662614	1					
ANR	662931	Argument	pj		662614	0					
ANR	662932	Identifier	pj		662614	0					
ANR	662933	ExpressionStatement	pj_end ( pj )	2758:4:87622:87633	662614	1	True				
ANR	662934	CallExpression	pj_end ( pj )		662614	0					
ANR	662935	Callee	pj_end		662614	0					
ANR	662936	Identifier	pj_end		662614	0					
ANR	662937	ArgumentList	pj		662614	1					
ANR	662938	Argument	pj		662614	0					
ANR	662939	Identifier	pj		662614	0					
ANR	662940	ElseStatement	else		662614	0					
ANR	662941	CompoundStatement		56:10:1442:1442	662614	0					
ANR	662942	ExpressionStatement	r_cons_newline ( )	2760:4:87674:87690	662614	0	True				
ANR	662943	CallExpression	r_cons_newline ( )		662614	0					
ANR	662944	Callee	r_cons_newline		662614	0					
ANR	662945	Identifier	r_cons_newline		662614	0					
ANR	662946	ArgumentList			662614	1					
ANR	662947	IfStatement	if ( mode == 'j' )		662614	16					
ANR	662948	Condition	mode == 'j'	2765:5:87710:87720	662614	0	True				
ANR	662949	EqualityExpression	mode == 'j'		662614	0		==			
ANR	662950	Identifier	mode		662614	0					
ANR	662951	PrimaryExpression	'j'		662614	1					
ANR	662952	CompoundStatement		62:18:1497:1497	662614	1					
ANR	662953	ExpressionStatement	pj_end ( pj )	2766:2:87727:87738	662614	0	True				
ANR	662954	CallExpression	pj_end ( pj )		662614	0					
ANR	662955	Callee	pj_end		662614	0					
ANR	662956	Identifier	pj_end		662614	0					
ANR	662957	ArgumentList	pj		662614	1					
ANR	662958	Argument	pj		662614	0					
ANR	662959	Identifier	pj		662614	0					
ANR	662960	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"	2767:2:87763:87801	662614	1	True				
ANR	662961	CallExpression	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"		662614	0					
ANR	662962	Callee	r_cons_printf		662614	0					
ANR	662963	Identifier	r_cons_printf		662614	0					
ANR	662964	ArgumentList	"""%s\\n"""		662614	1					
ANR	662965	Argument	"""%s\\n"""		662614	0					
ANR	662966	PrimaryExpression	"""%s\\n"""		662614	0					
ANR	662967	Argument	pj_string ( pj )		662614	1					
ANR	662968	CallExpression	pj_string ( pj )		662614	0					
ANR	662969	Callee	pj_string		662614	0					
ANR	662970	Identifier	pj_string		662614	0					
ANR	662971	ArgumentList	pj		662614	1					
ANR	662972	Argument	pj		662614	0					
ANR	662973	Identifier	pj		662614	0					
ANR	662974	IfStatement	if ( pj )		662614	17					
ANR	662975	Condition	pj	2769:5:87811:87812	662614	0	True				
ANR	662976	Identifier	pj		662614	0					
ANR	662977	CompoundStatement		66:9:1589:1589	662614	1					
ANR	662978	ExpressionStatement	pj_free ( pj )	2770:2:87819:87831	662614	0	True				
ANR	662979	CallExpression	pj_free ( pj )		662614	0					
ANR	662980	Callee	pj_free		662614	0					
ANR	662981	Identifier	pj_free		662614	0					
ANR	662982	ArgumentList	pj		662614	1					
ANR	662983	Argument	pj		662614	0					
ANR	662984	Identifier	pj		662614	0					
ANR	662985	ReturnStatement	return 0 ;	2772:1:87837:87845	662614	18	True				
ANR	662986	PrimaryExpression	0		662614	0					
ANR	662987	ReturnType	static int		662614	1					
ANR	662988	Identifier	fcn_print_makestyle		662614	2					
ANR	662989	ParameterList	"RCore * core , RList * fcns , char mode"		662614	3					
ANR	662990	Parameter	RCore * core	2704:31:86188:86198	662614	0	True				
ANR	662991	ParameterType	RCore *		662614	0					
ANR	662992	Identifier	core		662614	1					
ANR	662993	Parameter	RList * fcns	2704:44:86201:86211	662614	1	True				
ANR	662994	ParameterType	RList *		662614	0					
ANR	662995	Identifier	fcns		662614	1					
ANR	662996	Parameter	char mode	2704:57:86214:86222	662614	2	True				
ANR	662997	ParameterType	char		662614	0					
ANR	662998	Identifier	mode		662614	1					
ANR	662999	CFGEntryNode	ENTRY		662614		True				
ANR	663000	CFGExitNode	EXIT		662614		True				
ANR	663001	Symbol	fcniter		662614						
ANR	663002	Symbol	refi		662614						
ANR	663003	Symbol	* fcn		662614						
ANR	663004	Symbol	dst		662614						
ANR	663005	Symbol	pj_string		662614						
ANR	663006	Symbol	refiter		662614						
ANR	663007	Symbol	fcn -> name		662614						
ANR	663008	Symbol	* core		662614						
ANR	663009	Symbol	* refi		662614						
ANR	663010	Symbol	mode		662614						
ANR	663011	Symbol	fcn		662614						
ANR	663012	Symbol	refi -> addr		662614						
ANR	663013	Symbol	r_list_uniq		662614						
ANR	663014	Symbol	r_core_anal_fcn_get_calls		662614						
ANR	663015	Symbol	r_flag_get_i		662614						
ANR	663016	Symbol	NULL		662614						
ANR	663017	Symbol	RAnalRef_cmp		662614						
ANR	663018	Symbol	f		662614						
ANR	663019	Symbol	core -> flags		662614						
ANR	663020	Symbol	fcns		662614						
ANR	663021	Symbol	core		662614						
ANR	663022	Symbol	refs		662614						
ANR	663023	Symbol	r_list_empty		662614						
ANR	663024	Symbol	fcn -> addr		662614						
ANR	663025	Symbol	pj		662614						
ANR	663026	Symbol	pj_new		662614						
ANR	663027	Function	fcn_print_json	2775:0:87850:91504							
ANR	663028	FunctionDef	"fcn_print_json (RCore * core , RAnalFunction * fcn , PJ * pj)"		663027	0					
ANR	663029	CompoundStatement		2775:67:87917:91504	663027	0					
ANR	663030	IdentifierDeclStatement	RListIter * iter ;	2776:1:87920:87935	663027	0	True				
ANR	663031	IdentifierDecl	* iter		663027	0					
ANR	663032	IdentifierDeclType	RListIter *		663027	0					
ANR	663033	Identifier	iter		663027	1					
ANR	663034	IdentifierDeclStatement	RAnalRef * refi ;	2777:1:87938:87952	663027	1	True				
ANR	663035	IdentifierDecl	* refi		663027	0					
ANR	663036	IdentifierDeclType	RAnalRef *		663027	0					
ANR	663037	Identifier	refi		663027	1					
ANR	663038	IdentifierDeclStatement	"RList * refs , * xrefs ;"	2778:1:87955:87974	663027	2	True				
ANR	663039	IdentifierDecl	* refs		663027	0					
ANR	663040	IdentifierDeclType	RList *		663027	0					
ANR	663041	Identifier	refs		663027	1					
ANR	663042	IdentifierDecl	* xrefs		663027	1					
ANR	663043	IdentifierDeclType	RList *		663027	0					
ANR	663044	Identifier	xrefs		663027	1					
ANR	663045	IfStatement	if ( ! pj )		663027	3					
ANR	663046	Condition	! pj	2779:5:87981:87983	663027	0	True				
ANR	663047	UnaryOperationExpression	! pj		663027	0					
ANR	663048	UnaryOperator	!		663027	0					
ANR	663049	Identifier	pj		663027	1					
ANR	663050	CompoundStatement		5:10:68:68	663027	1					
ANR	663051	ReturnStatement	return - 1 ;	2780:2:87990:87999	663027	0	True				
ANR	663052	UnaryOperationExpression	- 1		663027	0					
ANR	663053	UnaryOperator	-		663027	0					
ANR	663054	PrimaryExpression	1		663027	1					
ANR	663055	IdentifierDeclStatement	int ebbs = 0 ;	2782:1:88005:88017	663027	4	True				
ANR	663056	IdentifierDecl	ebbs = 0		663027	0					
ANR	663057	IdentifierDeclType	int		663027	0					
ANR	663058	Identifier	ebbs		663027	1					
ANR	663059	AssignmentExpression	ebbs = 0		663027	2		=			
ANR	663060	Identifier	ebbs		663027	0					
ANR	663061	PrimaryExpression	0		663027	1					
ANR	663062	ExpressionStatement	pj_o ( pj )	2783:1:88020:88029	663027	5	True				
ANR	663063	CallExpression	pj_o ( pj )		663027	0					
ANR	663064	Callee	pj_o		663027	0					
ANR	663065	Identifier	pj_o		663027	0					
ANR	663066	ArgumentList	pj		663027	1					
ANR	663067	Argument	pj		663027	0					
ANR	663068	Identifier	pj		663027	0					
ANR	663069	ExpressionStatement	"pj_kn ( pj , ""offset"" , fcn -> addr )"	2784:1:88032:88063	663027	6	True				
ANR	663070	CallExpression	"pj_kn ( pj , ""offset"" , fcn -> addr )"		663027	0					
ANR	663071	Callee	pj_kn		663027	0					
ANR	663072	Identifier	pj_kn		663027	0					
ANR	663073	ArgumentList	pj		663027	1					
ANR	663074	Argument	pj		663027	0					
ANR	663075	Identifier	pj		663027	0					
ANR	663076	Argument	"""offset"""		663027	1					
ANR	663077	PrimaryExpression	"""offset"""		663027	0					
ANR	663078	Argument	fcn -> addr		663027	2					
ANR	663079	PtrMemberAccess	fcn -> addr		663027	0					
ANR	663080	Identifier	fcn		663027	0					
ANR	663081	Identifier	addr		663027	1					
ANR	663082	IdentifierDeclStatement	"char * name = r_core_anal_fcn_name ( core , fcn ) ;"	2785:1:88066:88111	663027	7	True				
ANR	663083	IdentifierDecl	"* name = r_core_anal_fcn_name ( core , fcn )"		663027	0					
ANR	663084	IdentifierDeclType	char *		663027	0					
ANR	663085	Identifier	name		663027	1					
ANR	663086	AssignmentExpression	"* name = r_core_anal_fcn_name ( core , fcn )"		663027	2		=			
ANR	663087	Identifier	name		663027	0					
ANR	663088	CallExpression	"r_core_anal_fcn_name ( core , fcn )"		663027	1					
ANR	663089	Callee	r_core_anal_fcn_name		663027	0					
ANR	663090	Identifier	r_core_anal_fcn_name		663027	0					
ANR	663091	ArgumentList	core		663027	1					
ANR	663092	Argument	core		663027	0					
ANR	663093	Identifier	core		663027	0					
ANR	663094	Argument	fcn		663027	1					
ANR	663095	Identifier	fcn		663027	0					
ANR	663096	IfStatement	if ( name )		663027	8					
ANR	663097	Condition	name	2786:5:88118:88121	663027	0	True				
ANR	663098	Identifier	name		663027	0					
ANR	663099	CompoundStatement		12:11:206:206	663027	1					
ANR	663100	ExpressionStatement	"pj_ks ( pj , ""name"" , name )"	2787:2:88128:88152	663027	0	True				
ANR	663101	CallExpression	"pj_ks ( pj , ""name"" , name )"		663027	0					
ANR	663102	Callee	pj_ks		663027	0					
ANR	663103	Identifier	pj_ks		663027	0					
ANR	663104	ArgumentList	pj		663027	1					
ANR	663105	Argument	pj		663027	0					
ANR	663106	Identifier	pj		663027	0					
ANR	663107	Argument	"""name"""		663027	1					
ANR	663108	PrimaryExpression	"""name"""		663027	0					
ANR	663109	Argument	name		663027	2					
ANR	663110	Identifier	name		663027	0					
ANR	663111	ExpressionStatement	"pj_ki ( pj , ""size"" , r_anal_fcn_size ( fcn ) )"	2789:1:88158:88199	663027	9	True				
ANR	663112	CallExpression	"pj_ki ( pj , ""size"" , r_anal_fcn_size ( fcn ) )"		663027	0					
ANR	663113	Callee	pj_ki		663027	0					
ANR	663114	Identifier	pj_ki		663027	0					
ANR	663115	ArgumentList	pj		663027	1					
ANR	663116	Argument	pj		663027	0					
ANR	663117	Identifier	pj		663027	0					
ANR	663118	Argument	"""size"""		663027	1					
ANR	663119	PrimaryExpression	"""size"""		663027	0					
ANR	663120	Argument	r_anal_fcn_size ( fcn )		663027	2					
ANR	663121	CallExpression	r_anal_fcn_size ( fcn )		663027	0					
ANR	663122	Callee	r_anal_fcn_size		663027	0					
ANR	663123	Identifier	r_anal_fcn_size		663027	0					
ANR	663124	ArgumentList	fcn		663027	1					
ANR	663125	Argument	fcn		663027	0					
ANR	663126	Identifier	fcn		663027	0					
ANR	663127	ExpressionStatement	"pj_ks ( pj , ""is-pure"" , r_str_bool ( r_anal_fcn_get_purity ( core -> anal , fcn ) ) )"	2790:1:88202:88277	663027	10	True				
ANR	663128	CallExpression	"pj_ks ( pj , ""is-pure"" , r_str_bool ( r_anal_fcn_get_purity ( core -> anal , fcn ) ) )"		663027	0					
ANR	663129	Callee	pj_ks		663027	0					
ANR	663130	Identifier	pj_ks		663027	0					
ANR	663131	ArgumentList	pj		663027	1					
ANR	663132	Argument	pj		663027	0					
ANR	663133	Identifier	pj		663027	0					
ANR	663134	Argument	"""is-pure"""		663027	1					
ANR	663135	PrimaryExpression	"""is-pure"""		663027	0					
ANR	663136	Argument	"r_str_bool ( r_anal_fcn_get_purity ( core -> anal , fcn ) )"		663027	2					
ANR	663137	CallExpression	"r_str_bool ( r_anal_fcn_get_purity ( core -> anal , fcn ) )"		663027	0					
ANR	663138	Callee	r_str_bool		663027	0					
ANR	663139	Identifier	r_str_bool		663027	0					
ANR	663140	ArgumentList	"r_anal_fcn_get_purity ( core -> anal , fcn )"		663027	1					
ANR	663141	Argument	"r_anal_fcn_get_purity ( core -> anal , fcn )"		663027	0					
ANR	663142	CallExpression	"r_anal_fcn_get_purity ( core -> anal , fcn )"		663027	0					
ANR	663143	Callee	r_anal_fcn_get_purity		663027	0					
ANR	663144	Identifier	r_anal_fcn_get_purity		663027	0					
ANR	663145	ArgumentList	core -> anal		663027	1					
ANR	663146	Argument	core -> anal		663027	0					
ANR	663147	PtrMemberAccess	core -> anal		663027	0					
ANR	663148	Identifier	core		663027	0					
ANR	663149	Identifier	anal		663027	1					
ANR	663150	Argument	fcn		663027	1					
ANR	663151	Identifier	fcn		663027	0					
ANR	663152	ExpressionStatement	"pj_ki ( pj , ""realsz"" , r_anal_fcn_realsize ( fcn ) )"	2791:1:88280:88327	663027	11	True				
ANR	663153	CallExpression	"pj_ki ( pj , ""realsz"" , r_anal_fcn_realsize ( fcn ) )"		663027	0					
ANR	663154	Callee	pj_ki		663027	0					
ANR	663155	Identifier	pj_ki		663027	0					
ANR	663156	ArgumentList	pj		663027	1					
ANR	663157	Argument	pj		663027	0					
ANR	663158	Identifier	pj		663027	0					
ANR	663159	Argument	"""realsz"""		663027	1					
ANR	663160	PrimaryExpression	"""realsz"""		663027	0					
ANR	663161	Argument	r_anal_fcn_realsize ( fcn )		663027	2					
ANR	663162	CallExpression	r_anal_fcn_realsize ( fcn )		663027	0					
ANR	663163	Callee	r_anal_fcn_realsize		663027	0					
ANR	663164	Identifier	r_anal_fcn_realsize		663027	0					
ANR	663165	ArgumentList	fcn		663027	1					
ANR	663166	Argument	fcn		663027	0					
ANR	663167	Identifier	fcn		663027	0					
ANR	663168	ExpressionStatement	"pj_ki ( pj , ""stackframe"" , fcn -> maxstack )"	2792:1:88330:88369	663027	12	True				
ANR	663169	CallExpression	"pj_ki ( pj , ""stackframe"" , fcn -> maxstack )"		663027	0					
ANR	663170	Callee	pj_ki		663027	0					
ANR	663171	Identifier	pj_ki		663027	0					
ANR	663172	ArgumentList	pj		663027	1					
ANR	663173	Argument	pj		663027	0					
ANR	663174	Identifier	pj		663027	0					
ANR	663175	Argument	"""stackframe"""		663027	1					
ANR	663176	PrimaryExpression	"""stackframe"""		663027	0					
ANR	663177	Argument	fcn -> maxstack		663027	2					
ANR	663178	PtrMemberAccess	fcn -> maxstack		663027	0					
ANR	663179	Identifier	fcn		663027	0					
ANR	663180	Identifier	maxstack		663027	1					
ANR	663181	IfStatement	if ( fcn -> cc )		663027	13					
ANR	663182	Condition	fcn -> cc	2793:5:88376:88382	663027	0	True				
ANR	663183	PtrMemberAccess	fcn -> cc		663027	0					
ANR	663184	Identifier	fcn		663027	0					
ANR	663185	Identifier	cc		663027	1					
ANR	663186	CompoundStatement		19:14:467:467	663027	1					
ANR	663187	ExpressionStatement	"pj_ks ( pj , ""calltype"" , fcn -> cc )"	2794:2:88389:88420	663027	0	True				
ANR	663188	CallExpression	"pj_ks ( pj , ""calltype"" , fcn -> cc )"		663027	0					
ANR	663189	Callee	pj_ks		663027	0					
ANR	663190	Identifier	pj_ks		663027	0					
ANR	663191	ArgumentList	pj		663027	1					
ANR	663192	Argument	pj		663027	0					
ANR	663193	Identifier	pj		663027	0					
ANR	663194	Argument	"""calltype"""		663027	1					
ANR	663195	PrimaryExpression	"""calltype"""		663027	0					
ANR	663196	Argument	fcn -> cc		663027	2					
ANR	663197	PtrMemberAccess	fcn -> cc		663027	0					
ANR	663198	Identifier	fcn		663027	0					
ANR	663199	Identifier	cc		663027	1					
ANR	663200	ExpressionStatement	"pj_ki ( pj , ""cost"" , r_anal_fcn_cost ( core -> anal , fcn ) )"	2796:1:88449:88502	663027	14	True				
ANR	663201	CallExpression	"pj_ki ( pj , ""cost"" , r_anal_fcn_cost ( core -> anal , fcn ) )"		663027	0					
ANR	663202	Callee	pj_ki		663027	0					
ANR	663203	Identifier	pj_ki		663027	0					
ANR	663204	ArgumentList	pj		663027	1					
ANR	663205	Argument	pj		663027	0					
ANR	663206	Identifier	pj		663027	0					
ANR	663207	Argument	"""cost"""		663027	1					
ANR	663208	PrimaryExpression	"""cost"""		663027	0					
ANR	663209	Argument	"r_anal_fcn_cost ( core -> anal , fcn )"		663027	2					
ANR	663210	CallExpression	"r_anal_fcn_cost ( core -> anal , fcn )"		663027	0					
ANR	663211	Callee	r_anal_fcn_cost		663027	0					
ANR	663212	Identifier	r_anal_fcn_cost		663027	0					
ANR	663213	ArgumentList	core -> anal		663027	1					
ANR	663214	Argument	core -> anal		663027	0					
ANR	663215	PtrMemberAccess	core -> anal		663027	0					
ANR	663216	Identifier	core		663027	0					
ANR	663217	Identifier	anal		663027	1					
ANR	663218	Argument	fcn		663027	1					
ANR	663219	Identifier	fcn		663027	0					
ANR	663220	ExpressionStatement	"pj_ki ( pj , ""cc"" , r_anal_fcn_cc ( core -> anal , fcn ) )"	2797:1:88523:88572	663027	15	True				
ANR	663221	CallExpression	"pj_ki ( pj , ""cc"" , r_anal_fcn_cc ( core -> anal , fcn ) )"		663027	0					
ANR	663222	Callee	pj_ki		663027	0					
ANR	663223	Identifier	pj_ki		663027	0					
ANR	663224	ArgumentList	pj		663027	1					
ANR	663225	Argument	pj		663027	0					
ANR	663226	Identifier	pj		663027	0					
ANR	663227	Argument	"""cc"""		663027	1					
ANR	663228	PrimaryExpression	"""cc"""		663027	0					
ANR	663229	Argument	"r_anal_fcn_cc ( core -> anal , fcn )"		663027	2					
ANR	663230	CallExpression	"r_anal_fcn_cc ( core -> anal , fcn )"		663027	0					
ANR	663231	Callee	r_anal_fcn_cc		663027	0					
ANR	663232	Identifier	r_anal_fcn_cc		663027	0					
ANR	663233	ArgumentList	core -> anal		663027	1					
ANR	663234	Argument	core -> anal		663027	0					
ANR	663235	PtrMemberAccess	core -> anal		663027	0					
ANR	663236	Identifier	core		663027	0					
ANR	663237	Identifier	anal		663027	1					
ANR	663238	Argument	fcn		663027	1					
ANR	663239	Identifier	fcn		663027	0					
ANR	663240	ExpressionStatement	"pj_ki ( pj , ""bits"" , fcn -> bits )"	2798:1:88590:88619	663027	16	True				
ANR	663241	CallExpression	"pj_ki ( pj , ""bits"" , fcn -> bits )"		663027	0					
ANR	663242	Callee	pj_ki		663027	0					
ANR	663243	Identifier	pj_ki		663027	0					
ANR	663244	ArgumentList	pj		663027	1					
ANR	663245	Argument	pj		663027	0					
ANR	663246	Identifier	pj		663027	0					
ANR	663247	Argument	"""bits"""		663027	1					
ANR	663248	PrimaryExpression	"""bits"""		663027	0					
ANR	663249	Argument	fcn -> bits		663027	2					
ANR	663250	PtrMemberAccess	fcn -> bits		663027	0					
ANR	663251	Identifier	fcn		663027	0					
ANR	663252	Identifier	bits		663027	1					
ANR	663253	ExpressionStatement	"pj_ks ( pj , ""type"" , r_anal_fcn_type_tostring ( fcn -> type ) )"	2799:1:88622:88678	663027	17	True				
ANR	663254	CallExpression	"pj_ks ( pj , ""type"" , r_anal_fcn_type_tostring ( fcn -> type ) )"		663027	0					
ANR	663255	Callee	pj_ks		663027	0					
ANR	663256	Identifier	pj_ks		663027	0					
ANR	663257	ArgumentList	pj		663027	1					
ANR	663258	Argument	pj		663027	0					
ANR	663259	Identifier	pj		663027	0					
ANR	663260	Argument	"""type"""		663027	1					
ANR	663261	PrimaryExpression	"""type"""		663027	0					
ANR	663262	Argument	r_anal_fcn_type_tostring ( fcn -> type )		663027	2					
ANR	663263	CallExpression	r_anal_fcn_type_tostring ( fcn -> type )		663027	0					
ANR	663264	Callee	r_anal_fcn_type_tostring		663027	0					
ANR	663265	Identifier	r_anal_fcn_type_tostring		663027	0					
ANR	663266	ArgumentList	fcn -> type		663027	1					
ANR	663267	Argument	fcn -> type		663027	0					
ANR	663268	PtrMemberAccess	fcn -> type		663027	0					
ANR	663269	Identifier	fcn		663027	0					
ANR	663270	Identifier	type		663027	1					
ANR	663271	ExpressionStatement	"pj_ki ( pj , ""nbbs"" , r_list_length ( fcn -> bbs ) )"	2800:1:88681:88725	663027	18	True				
ANR	663272	CallExpression	"pj_ki ( pj , ""nbbs"" , r_list_length ( fcn -> bbs ) )"		663027	0					
ANR	663273	Callee	pj_ki		663027	0					
ANR	663274	Identifier	pj_ki		663027	0					
ANR	663275	ArgumentList	pj		663027	1					
ANR	663276	Argument	pj		663027	0					
ANR	663277	Identifier	pj		663027	0					
ANR	663278	Argument	"""nbbs"""		663027	1					
ANR	663279	PrimaryExpression	"""nbbs"""		663027	0					
ANR	663280	Argument	r_list_length ( fcn -> bbs )		663027	2					
ANR	663281	CallExpression	r_list_length ( fcn -> bbs )		663027	0					
ANR	663282	Callee	r_list_length		663027	0					
ANR	663283	Identifier	r_list_length		663027	0					
ANR	663284	ArgumentList	fcn -> bbs		663027	1					
ANR	663285	Argument	fcn -> bbs		663027	0					
ANR	663286	PtrMemberAccess	fcn -> bbs		663027	0					
ANR	663287	Identifier	fcn		663027	0					
ANR	663288	Identifier	bbs		663027	1					
ANR	663289	ExpressionStatement	"pj_ki ( pj , ""edges"" , r_anal_fcn_count_edges ( fcn , & ebbs ) )"	2801:1:88728:88784	663027	19	True				
ANR	663290	CallExpression	"pj_ki ( pj , ""edges"" , r_anal_fcn_count_edges ( fcn , & ebbs ) )"		663027	0					
ANR	663291	Callee	pj_ki		663027	0					
ANR	663292	Identifier	pj_ki		663027	0					
ANR	663293	ArgumentList	pj		663027	1					
ANR	663294	Argument	pj		663027	0					
ANR	663295	Identifier	pj		663027	0					
ANR	663296	Argument	"""edges"""		663027	1					
ANR	663297	PrimaryExpression	"""edges"""		663027	0					
ANR	663298	Argument	"r_anal_fcn_count_edges ( fcn , & ebbs )"		663027	2					
ANR	663299	CallExpression	"r_anal_fcn_count_edges ( fcn , & ebbs )"		663027	0					
ANR	663300	Callee	r_anal_fcn_count_edges		663027	0					
ANR	663301	Identifier	r_anal_fcn_count_edges		663027	0					
ANR	663302	ArgumentList	fcn		663027	1					
ANR	663303	Argument	fcn		663027	0					
ANR	663304	Identifier	fcn		663027	0					
ANR	663305	Argument	& ebbs		663027	1					
ANR	663306	UnaryOperationExpression	& ebbs		663027	0					
ANR	663307	UnaryOperator	&		663027	0					
ANR	663308	Identifier	ebbs		663027	1					
ANR	663309	ExpressionStatement	"pj_ki ( pj , ""ebbs"" , ebbs )"	2802:1:88787:88811	663027	20	True				
ANR	663310	CallExpression	"pj_ki ( pj , ""ebbs"" , ebbs )"		663027	0					
ANR	663311	Callee	pj_ki		663027	0					
ANR	663312	Identifier	pj_ki		663027	0					
ANR	663313	ArgumentList	pj		663027	1					
ANR	663314	Argument	pj		663027	0					
ANR	663315	Identifier	pj		663027	0					
ANR	663316	Argument	"""ebbs"""		663027	1					
ANR	663317	PrimaryExpression	"""ebbs"""		663027	0					
ANR	663318	Argument	ebbs		663027	2					
ANR	663319	Identifier	ebbs		663027	0					
ANR	663320	CompoundStatement		29:1:896:896	663027	21					
ANR	663321	Statement	char	2804:2:88818:88821	663027	0	True				
ANR	663322	Statement	*	2804:7:88823:88823	663027	1	True				
ANR	663323	Statement	sig	2804:8:88824:88826	663027	2	True				
ANR	663324	Statement	=	2804:12:88828:88828	663027	3	True				
ANR	663325	Statement	r_core_cmd_strf	2804:14:88830:88844	663027	4	True				
ANR	663326	Statement	(	2804:30:88846:88846	663027	5	True				
ANR	663327	Statement	core	2804:31:88847:88850	663027	6	True				
ANR	663328	Statement	","	2804:35:88851:88851	663027	7	True				
ANR	663329	Statement	"""afcf @ 0x%"""	2804:37:88853:88864	663027	8	True				
ANR	663330	Statement	PFMT64x	2804:49:88865:88871	663027	9	True				
ANR	663331	Statement	","	2804:56:88872:88872	663027	10	True				
ANR	663332	Statement	fcn	2804:58:88874:88876	663027	11	True				
ANR	663333	Statement	->	2804:61:88877:88878	663027	12	True				
ANR	663334	Statement	addr	2804:63:88879:88882	663027	13	True				
ANR	663335	Statement	)	2804:67:88883:88883	663027	14	True				
ANR	663336	ExpressionStatement		2804:68:88884:88884	663027	15	True				
ANR	663337	IfStatement	if ( sig )		663027	16					
ANR	663338	Condition	sig	2805:6:88892:88894	663027	0	True				
ANR	663339	Identifier	sig		663027	0					
ANR	663340	CompoundStatement		31:11:979:979	663027	1					
ANR	663341	ExpressionStatement	r_str_trim ( sig )	2806:3:88902:88918	663027	0	True				
ANR	663342	CallExpression	r_str_trim ( sig )		663027	0					
ANR	663343	Callee	r_str_trim		663027	0					
ANR	663344	Identifier	r_str_trim		663027	0					
ANR	663345	ArgumentList	sig		663027	1					
ANR	663346	Argument	sig		663027	0					
ANR	663347	Identifier	sig		663027	0					
ANR	663348	ExpressionStatement	"pj_ks ( pj , ""signature"" , sig )"	2807:3:88923:88951	663027	1	True				
ANR	663349	CallExpression	"pj_ks ( pj , ""signature"" , sig )"		663027	0					
ANR	663350	Callee	pj_ks		663027	0					
ANR	663351	Identifier	pj_ks		663027	0					
ANR	663352	ArgumentList	pj		663027	1					
ANR	663353	Argument	pj		663027	0					
ANR	663354	Identifier	pj		663027	0					
ANR	663355	Argument	"""signature"""		663027	1					
ANR	663356	PrimaryExpression	"""signature"""		663027	0					
ANR	663357	Argument	sig		663027	2					
ANR	663358	Identifier	sig		663027	0					
ANR	663359	ExpressionStatement	free ( sig )	2808:3:88956:88966	663027	2	True				
ANR	663360	CallExpression	free ( sig )		663027	0					
ANR	663361	Callee	free		663027	0					
ANR	663362	Identifier	free		663027	0					
ANR	663363	ArgumentList	sig		663027	1					
ANR	663364	Argument	sig		663027	0					
ANR	663365	Identifier	sig		663027	0					
ANR	663366	ExpressionStatement	"pj_ki ( pj , ""minbound"" , fcn -> meta . min )"	2812:1:88977:89014	663027	22	True				
ANR	663367	CallExpression	"pj_ki ( pj , ""minbound"" , fcn -> meta . min )"		663027	0					
ANR	663368	Callee	pj_ki		663027	0					
ANR	663369	Identifier	pj_ki		663027	0					
ANR	663370	ArgumentList	pj		663027	1					
ANR	663371	Argument	pj		663027	0					
ANR	663372	Identifier	pj		663027	0					
ANR	663373	Argument	"""minbound"""		663027	1					
ANR	663374	PrimaryExpression	"""minbound"""		663027	0					
ANR	663375	Argument	fcn -> meta . min		663027	2					
ANR	663376	MemberAccess	fcn -> meta . min		663027	0					
ANR	663377	PtrMemberAccess	fcn -> meta		663027	0					
ANR	663378	Identifier	fcn		663027	0					
ANR	663379	Identifier	meta		663027	1					
ANR	663380	Identifier	min		663027	1					
ANR	663381	ExpressionStatement	"pj_ki ( pj , ""maxbound"" , fcn -> meta . max )"	2813:1:89017:89054	663027	23	True				
ANR	663382	CallExpression	"pj_ki ( pj , ""maxbound"" , fcn -> meta . max )"		663027	0					
ANR	663383	Callee	pj_ki		663027	0					
ANR	663384	Identifier	pj_ki		663027	0					
ANR	663385	ArgumentList	pj		663027	1					
ANR	663386	Argument	pj		663027	0					
ANR	663387	Identifier	pj		663027	0					
ANR	663388	Argument	"""maxbound"""		663027	1					
ANR	663389	PrimaryExpression	"""maxbound"""		663027	0					
ANR	663390	Argument	fcn -> meta . max		663027	2					
ANR	663391	MemberAccess	fcn -> meta . max		663027	0					
ANR	663392	PtrMemberAccess	fcn -> meta		663027	0					
ANR	663393	Identifier	fcn		663027	0					
ANR	663394	Identifier	meta		663027	1					
ANR	663395	Identifier	max		663027	1					
ANR	663396	IdentifierDeclStatement	int outdegree = 0 ;	2815:1:89058:89075	663027	24	True				
ANR	663397	IdentifierDecl	outdegree = 0		663027	0					
ANR	663398	IdentifierDeclType	int		663027	0					
ANR	663399	Identifier	outdegree		663027	1					
ANR	663400	AssignmentExpression	outdegree = 0		663027	2		=			
ANR	663401	Identifier	outdegree		663027	0					
ANR	663402	PrimaryExpression	0		663027	1					
ANR	663403	ExpressionStatement	"refs = r_anal_fcn_get_refs ( core -> anal , fcn )"	2816:1:89078:89122	663027	25	True				
ANR	663404	AssignmentExpression	"refs = r_anal_fcn_get_refs ( core -> anal , fcn )"		663027	0		=			
ANR	663405	Identifier	refs		663027	0					
ANR	663406	CallExpression	"r_anal_fcn_get_refs ( core -> anal , fcn )"		663027	1					
ANR	663407	Callee	r_anal_fcn_get_refs		663027	0					
ANR	663408	Identifier	r_anal_fcn_get_refs		663027	0					
ANR	663409	ArgumentList	core -> anal		663027	1					
ANR	663410	Argument	core -> anal		663027	0					
ANR	663411	PtrMemberAccess	core -> anal		663027	0					
ANR	663412	Identifier	core		663027	0					
ANR	663413	Identifier	anal		663027	1					
ANR	663414	Argument	fcn		663027	1					
ANR	663415	Identifier	fcn		663027	0					
ANR	663416	IfStatement	if ( ! r_list_empty ( refs ) )		663027	26					
ANR	663417	Condition	! r_list_empty ( refs )	2817:5:89129:89148	663027	0	True				
ANR	663418	UnaryOperationExpression	! r_list_empty ( refs )		663027	0					
ANR	663419	UnaryOperator	!		663027	0					
ANR	663420	CallExpression	r_list_empty ( refs )		663027	1					
ANR	663421	Callee	r_list_empty		663027	0					
ANR	663422	Identifier	r_list_empty		663027	0					
ANR	663423	ArgumentList	refs		663027	1					
ANR	663424	Argument	refs		663027	0					
ANR	663425	Identifier	refs		663027	0					
ANR	663426	CompoundStatement		43:27:1233:1233	663027	1					
ANR	663427	ExpressionStatement	"pj_k ( pj , ""callrefs"" )"	2818:2:89155:89176	663027	0	True				
ANR	663428	CallExpression	"pj_k ( pj , ""callrefs"" )"		663027	0					
ANR	663429	Callee	pj_k		663027	0					
ANR	663430	Identifier	pj_k		663027	0					
ANR	663431	ArgumentList	pj		663027	1					
ANR	663432	Argument	pj		663027	0					
ANR	663433	Identifier	pj		663027	0					
ANR	663434	Argument	"""callrefs"""		663027	1					
ANR	663435	PrimaryExpression	"""callrefs"""		663027	0					
ANR	663436	ExpressionStatement	pj_a ( pj )	2819:2:89180:89189	663027	1	True				
ANR	663437	CallExpression	pj_a ( pj )		663027	0					
ANR	663438	Callee	pj_a		663027	0					
ANR	663439	Identifier	pj_a		663027	0					
ANR	663440	ArgumentList	pj		663027	1					
ANR	663441	Argument	pj		663027	0					
ANR	663442	Identifier	pj		663027	0					
ANR	663443	Statement	r_list_foreach	2820:2:89193:89206	663027	2	True				
ANR	663444	Statement	(	2820:17:89208:89208	663027	3	True				
ANR	663445	Statement	refs	2820:18:89209:89212	663027	4	True				
ANR	663446	Statement	","	2820:22:89213:89213	663027	5	True				
ANR	663447	Statement	iter	2820:24:89215:89218	663027	6	True				
ANR	663448	Statement	","	2820:28:89219:89219	663027	7	True				
ANR	663449	Statement	refi	2820:30:89221:89224	663027	8	True				
ANR	663450	Statement	)	2820:34:89225:89225	663027	9	True				
ANR	663451	CompoundStatement		46:36:1309:1309	663027	10					
ANR	663452	IfStatement	if ( refi -> type == R_ANAL_REF_TYPE_CALL )		663027	0					
ANR	663453	Condition	refi -> type == R_ANAL_REF_TYPE_CALL	2821:7:89236:89269	663027	0	True				
ANR	663454	EqualityExpression	refi -> type == R_ANAL_REF_TYPE_CALL		663027	0		==			
ANR	663455	PtrMemberAccess	refi -> type		663027	0					
ANR	663456	Identifier	refi		663027	0					
ANR	663457	Identifier	type		663027	1					
ANR	663458	Identifier	R_ANAL_REF_TYPE_CALL		663027	1					
ANR	663459	CompoundStatement		47:43:1354:1354	663027	1					
ANR	663460	ExpressionStatement	outdegree ++	2822:4:89278:89289	663027	0	True				
ANR	663461	PostIncDecOperationExpression	outdegree ++		663027	0					
ANR	663462	Identifier	outdegree		663027	0					
ANR	663463	IncDec	++		663027	1					
ANR	663464	IfStatement	if ( refi -> type == R_ANAL_REF_TYPE_CODE || refi -> type == R_ANAL_REF_TYPE_CALL )		663027	1					
ANR	663465	Condition	refi -> type == R_ANAL_REF_TYPE_CODE || refi -> type == R_ANAL_REF_TYPE_CALL	2824:7:89303:89381	663027	0	True				
ANR	663466	OrExpression	refi -> type == R_ANAL_REF_TYPE_CODE || refi -> type == R_ANAL_REF_TYPE_CALL		663027	0		||			
ANR	663467	EqualityExpression	refi -> type == R_ANAL_REF_TYPE_CODE		663027	0		==			
ANR	663468	PtrMemberAccess	refi -> type		663027	0					
ANR	663469	Identifier	refi		663027	0					
ANR	663470	Identifier	type		663027	1					
ANR	663471	Identifier	R_ANAL_REF_TYPE_CODE		663027	1					
ANR	663472	EqualityExpression	refi -> type == R_ANAL_REF_TYPE_CALL		663027	1		==			
ANR	663473	PtrMemberAccess	refi -> type		663027	0					
ANR	663474	Identifier	refi		663027	0					
ANR	663475	Identifier	type		663027	1					
ANR	663476	Identifier	R_ANAL_REF_TYPE_CALL		663027	1					
ANR	663477	CompoundStatement		51:43:1466:1466	663027	1					
ANR	663478	ExpressionStatement	pj_o ( pj )	2826:4:89390:89399	663027	0	True				
ANR	663479	CallExpression	pj_o ( pj )		663027	0					
ANR	663480	Callee	pj_o		663027	0					
ANR	663481	Identifier	pj_o		663027	0					
ANR	663482	ArgumentList	pj		663027	1					
ANR	663483	Argument	pj		663027	0					
ANR	663484	Identifier	pj		663027	0					
ANR	663485	ExpressionStatement	"pj_kn ( pj , ""addr"" , refi -> addr )"	2827:4:89405:89435	663027	1	True				
ANR	663486	CallExpression	"pj_kn ( pj , ""addr"" , refi -> addr )"		663027	0					
ANR	663487	Callee	pj_kn		663027	0					
ANR	663488	Identifier	pj_kn		663027	0					
ANR	663489	ArgumentList	pj		663027	1					
ANR	663490	Argument	pj		663027	0					
ANR	663491	Identifier	pj		663027	0					
ANR	663492	Argument	"""addr"""		663027	1					
ANR	663493	PrimaryExpression	"""addr"""		663027	0					
ANR	663494	Argument	refi -> addr		663027	2					
ANR	663495	PtrMemberAccess	refi -> addr		663027	0					
ANR	663496	Identifier	refi		663027	0					
ANR	663497	Identifier	addr		663027	1					
ANR	663498	ExpressionStatement	"pj_ks ( pj , ""type"" , r_anal_xrefs_type_tostring ( refi -> type ) )"	2828:4:89441:89500	663027	2	True				
ANR	663499	CallExpression	"pj_ks ( pj , ""type"" , r_anal_xrefs_type_tostring ( refi -> type ) )"		663027	0					
ANR	663500	Callee	pj_ks		663027	0					
ANR	663501	Identifier	pj_ks		663027	0					
ANR	663502	ArgumentList	pj		663027	1					
ANR	663503	Argument	pj		663027	0					
ANR	663504	Identifier	pj		663027	0					
ANR	663505	Argument	"""type"""		663027	1					
ANR	663506	PrimaryExpression	"""type"""		663027	0					
ANR	663507	Argument	r_anal_xrefs_type_tostring ( refi -> type )		663027	2					
ANR	663508	CallExpression	r_anal_xrefs_type_tostring ( refi -> type )		663027	0					
ANR	663509	Callee	r_anal_xrefs_type_tostring		663027	0					
ANR	663510	Identifier	r_anal_xrefs_type_tostring		663027	0					
ANR	663511	ArgumentList	refi -> type		663027	1					
ANR	663512	Argument	refi -> type		663027	0					
ANR	663513	PtrMemberAccess	refi -> type		663027	0					
ANR	663514	Identifier	refi		663027	0					
ANR	663515	Identifier	type		663027	1					
ANR	663516	ExpressionStatement	"pj_kn ( pj , ""at"" , refi -> at )"	2829:4:89506:89532	663027	3	True				
ANR	663517	CallExpression	"pj_kn ( pj , ""at"" , refi -> at )"		663027	0					
ANR	663518	Callee	pj_kn		663027	0					
ANR	663519	Identifier	pj_kn		663027	0					
ANR	663520	ArgumentList	pj		663027	1					
ANR	663521	Argument	pj		663027	0					
ANR	663522	Identifier	pj		663027	0					
ANR	663523	Argument	"""at"""		663027	1					
ANR	663524	PrimaryExpression	"""at"""		663027	0					
ANR	663525	Argument	refi -> at		663027	2					
ANR	663526	PtrMemberAccess	refi -> at		663027	0					
ANR	663527	Identifier	refi		663027	0					
ANR	663528	Identifier	at		663027	1					
ANR	663529	ExpressionStatement	pj_end ( pj )	2830:4:89538:89549	663027	4	True				
ANR	663530	CallExpression	pj_end ( pj )		663027	0					
ANR	663531	Callee	pj_end		663027	0					
ANR	663532	Identifier	pj_end		663027	0					
ANR	663533	ArgumentList	pj		663027	1					
ANR	663534	Argument	pj		663027	0					
ANR	663535	Identifier	pj		663027	0					
ANR	663536	ExpressionStatement	pj_end ( pj )	2833:2:89562:89573	663027	11	True				
ANR	663537	CallExpression	pj_end ( pj )		663027	0					
ANR	663538	Callee	pj_end		663027	0					
ANR	663539	Identifier	pj_end		663027	0					
ANR	663540	ArgumentList	pj		663027	1					
ANR	663541	Argument	pj		663027	0					
ANR	663542	Identifier	pj		663027	0					
ANR	663543	ExpressionStatement	"pj_k ( pj , ""datarefs"" )"	2835:2:89578:89599	663027	12	True				
ANR	663544	CallExpression	"pj_k ( pj , ""datarefs"" )"		663027	0					
ANR	663545	Callee	pj_k		663027	0					
ANR	663546	Identifier	pj_k		663027	0					
ANR	663547	ArgumentList	pj		663027	1					
ANR	663548	Argument	pj		663027	0					
ANR	663549	Identifier	pj		663027	0					
ANR	663550	Argument	"""datarefs"""		663027	1					
ANR	663551	PrimaryExpression	"""datarefs"""		663027	0					
ANR	663552	ExpressionStatement	pj_a ( pj )	2836:2:89603:89612	663027	13	True				
ANR	663553	CallExpression	pj_a ( pj )		663027	0					
ANR	663554	Callee	pj_a		663027	0					
ANR	663555	Identifier	pj_a		663027	0					
ANR	663556	ArgumentList	pj		663027	1					
ANR	663557	Argument	pj		663027	0					
ANR	663558	Identifier	pj		663027	0					
ANR	663559	Statement	r_list_foreach	2837:2:89616:89629	663027	14	True				
ANR	663560	Statement	(	2837:17:89631:89631	663027	15	True				
ANR	663561	Statement	refs	2837:18:89632:89635	663027	16	True				
ANR	663562	Statement	","	2837:22:89636:89636	663027	17	True				
ANR	663563	Statement	iter	2837:24:89638:89641	663027	18	True				
ANR	663564	Statement	","	2837:28:89642:89642	663027	19	True				
ANR	663565	Statement	refi	2837:30:89644:89647	663027	20	True				
ANR	663566	Statement	)	2837:34:89648:89648	663027	21	True				
ANR	663567	CompoundStatement		63:36:1732:1732	663027	22					
ANR	663568	IfStatement	if ( refi -> type == R_ANAL_REF_TYPE_DATA )		663027	0					
ANR	663569	Condition	refi -> type == R_ANAL_REF_TYPE_DATA	2838:7:89659:89692	663027	0	True				
ANR	663570	EqualityExpression	refi -> type == R_ANAL_REF_TYPE_DATA		663027	0		==			
ANR	663571	PtrMemberAccess	refi -> type		663027	0					
ANR	663572	Identifier	refi		663027	0					
ANR	663573	Identifier	type		663027	1					
ANR	663574	Identifier	R_ANAL_REF_TYPE_DATA		663027	1					
ANR	663575	CompoundStatement		64:43:1777:1777	663027	1					
ANR	663576	ExpressionStatement	"pj_n ( pj , refi -> addr )"	2839:4:89701:89722	663027	0	True				
ANR	663577	CallExpression	"pj_n ( pj , refi -> addr )"		663027	0					
ANR	663578	Callee	pj_n		663027	0					
ANR	663579	Identifier	pj_n		663027	0					
ANR	663580	ArgumentList	pj		663027	1					
ANR	663581	Argument	pj		663027	0					
ANR	663582	Identifier	pj		663027	0					
ANR	663583	Argument	refi -> addr		663027	1					
ANR	663584	PtrMemberAccess	refi -> addr		663027	0					
ANR	663585	Identifier	refi		663027	0					
ANR	663586	Identifier	addr		663027	1					
ANR	663587	ExpressionStatement	pj_end ( pj )	2842:2:89735:89746	663027	23	True				
ANR	663588	CallExpression	pj_end ( pj )		663027	0					
ANR	663589	Callee	pj_end		663027	0					
ANR	663590	Identifier	pj_end		663027	0					
ANR	663591	ArgumentList	pj		663027	1					
ANR	663592	Argument	pj		663027	0					
ANR	663593	Identifier	pj		663027	0					
ANR	663594	ExpressionStatement	r_list_free ( refs )	2844:1:89752:89770	663027	27	True				
ANR	663595	CallExpression	r_list_free ( refs )		663027	0					
ANR	663596	Callee	r_list_free		663027	0					
ANR	663597	Identifier	r_list_free		663027	0					
ANR	663598	ArgumentList	refs		663027	1					
ANR	663599	Argument	refs		663027	0					
ANR	663600	Identifier	refs		663027	0					
ANR	663601	IdentifierDeclStatement	int indegree = 0 ;	2846:1:89774:89790	663027	28	True				
ANR	663602	IdentifierDecl	indegree = 0		663027	0					
ANR	663603	IdentifierDeclType	int		663027	0					
ANR	663604	Identifier	indegree		663027	1					
ANR	663605	AssignmentExpression	indegree = 0		663027	2		=			
ANR	663606	Identifier	indegree		663027	0					
ANR	663607	PrimaryExpression	0		663027	1					
ANR	663608	ExpressionStatement	"xrefs = r_anal_fcn_get_xrefs ( core -> anal , fcn )"	2847:1:89793:89839	663027	29	True				
ANR	663609	AssignmentExpression	"xrefs = r_anal_fcn_get_xrefs ( core -> anal , fcn )"		663027	0		=			
ANR	663610	Identifier	xrefs		663027	0					
ANR	663611	CallExpression	"r_anal_fcn_get_xrefs ( core -> anal , fcn )"		663027	1					
ANR	663612	Callee	r_anal_fcn_get_xrefs		663027	0					
ANR	663613	Identifier	r_anal_fcn_get_xrefs		663027	0					
ANR	663614	ArgumentList	core -> anal		663027	1					
ANR	663615	Argument	core -> anal		663027	0					
ANR	663616	PtrMemberAccess	core -> anal		663027	0					
ANR	663617	Identifier	core		663027	0					
ANR	663618	Identifier	anal		663027	1					
ANR	663619	Argument	fcn		663027	1					
ANR	663620	Identifier	fcn		663027	0					
ANR	663621	IfStatement	if ( ! r_list_empty ( xrefs ) )		663027	30					
ANR	663622	Condition	! r_list_empty ( xrefs )	2848:5:89846:89866	663027	0	True				
ANR	663623	UnaryOperationExpression	! r_list_empty ( xrefs )		663027	0					
ANR	663624	UnaryOperator	!		663027	0					
ANR	663625	CallExpression	r_list_empty ( xrefs )		663027	1					
ANR	663626	Callee	r_list_empty		663027	0					
ANR	663627	Identifier	r_list_empty		663027	0					
ANR	663628	ArgumentList	xrefs		663027	1					
ANR	663629	Argument	xrefs		663027	0					
ANR	663630	Identifier	xrefs		663027	0					
ANR	663631	CompoundStatement		74:28:1951:1951	663027	1					
ANR	663632	ExpressionStatement	"pj_k ( pj , ""codexrefs"" )"	2849:2:89873:89895	663027	0	True				
ANR	663633	CallExpression	"pj_k ( pj , ""codexrefs"" )"		663027	0					
ANR	663634	Callee	pj_k		663027	0					
ANR	663635	Identifier	pj_k		663027	0					
ANR	663636	ArgumentList	pj		663027	1					
ANR	663637	Argument	pj		663027	0					
ANR	663638	Identifier	pj		663027	0					
ANR	663639	Argument	"""codexrefs"""		663027	1					
ANR	663640	PrimaryExpression	"""codexrefs"""		663027	0					
ANR	663641	ExpressionStatement	pj_a ( pj )	2850:2:89899:89908	663027	1	True				
ANR	663642	CallExpression	pj_a ( pj )		663027	0					
ANR	663643	Callee	pj_a		663027	0					
ANR	663644	Identifier	pj_a		663027	0					
ANR	663645	ArgumentList	pj		663027	1					
ANR	663646	Argument	pj		663027	0					
ANR	663647	Identifier	pj		663027	0					
ANR	663648	Statement	r_list_foreach	2851:2:89912:89925	663027	2	True				
ANR	663649	Statement	(	2851:17:89927:89927	663027	3	True				
ANR	663650	Statement	xrefs	2851:18:89928:89932	663027	4	True				
ANR	663651	Statement	","	2851:23:89933:89933	663027	5	True				
ANR	663652	Statement	iter	2851:25:89935:89938	663027	6	True				
ANR	663653	Statement	","	2851:29:89939:89939	663027	7	True				
ANR	663654	Statement	refi	2851:31:89941:89944	663027	8	True				
ANR	663655	Statement	)	2851:35:89945:89945	663027	9	True				
ANR	663656	CompoundStatement		77:37:2029:2029	663027	10					
ANR	663657	IfStatement	if ( refi -> type == R_ANAL_REF_TYPE_CODE || refi -> type == R_ANAL_REF_TYPE_CALL )		663027	0					
ANR	663658	Condition	refi -> type == R_ANAL_REF_TYPE_CODE || refi -> type == R_ANAL_REF_TYPE_CALL	2852:7:89956:90034	663027	0	True				
ANR	663659	OrExpression	refi -> type == R_ANAL_REF_TYPE_CODE || refi -> type == R_ANAL_REF_TYPE_CALL		663027	0		||			
ANR	663660	EqualityExpression	refi -> type == R_ANAL_REF_TYPE_CODE		663027	0		==			
ANR	663661	PtrMemberAccess	refi -> type		663027	0					
ANR	663662	Identifier	refi		663027	0					
ANR	663663	Identifier	type		663027	1					
ANR	663664	Identifier	R_ANAL_REF_TYPE_CODE		663027	1					
ANR	663665	EqualityExpression	refi -> type == R_ANAL_REF_TYPE_CALL		663027	1		==			
ANR	663666	PtrMemberAccess	refi -> type		663027	0					
ANR	663667	Identifier	refi		663027	0					
ANR	663668	Identifier	type		663027	1					
ANR	663669	Identifier	R_ANAL_REF_TYPE_CALL		663027	1					
ANR	663670	CompoundStatement		79:43:2119:2119	663027	1					
ANR	663671	ExpressionStatement	indegree ++	2854:4:90043:90053	663027	0	True				
ANR	663672	PostIncDecOperationExpression	indegree ++		663027	0					
ANR	663673	Identifier	indegree		663027	0					
ANR	663674	IncDec	++		663027	1					
ANR	663675	ExpressionStatement	pj_o ( pj )	2855:4:90059:90068	663027	1	True				
ANR	663676	CallExpression	pj_o ( pj )		663027	0					
ANR	663677	Callee	pj_o		663027	0					
ANR	663678	Identifier	pj_o		663027	0					
ANR	663679	ArgumentList	pj		663027	1					
ANR	663680	Argument	pj		663027	0					
ANR	663681	Identifier	pj		663027	0					
ANR	663682	ExpressionStatement	"pj_kn ( pj , ""addr"" , refi -> addr )"	2856:4:90074:90104	663027	2	True				
ANR	663683	CallExpression	"pj_kn ( pj , ""addr"" , refi -> addr )"		663027	0					
ANR	663684	Callee	pj_kn		663027	0					
ANR	663685	Identifier	pj_kn		663027	0					
ANR	663686	ArgumentList	pj		663027	1					
ANR	663687	Argument	pj		663027	0					
ANR	663688	Identifier	pj		663027	0					
ANR	663689	Argument	"""addr"""		663027	1					
ANR	663690	PrimaryExpression	"""addr"""		663027	0					
ANR	663691	Argument	refi -> addr		663027	2					
ANR	663692	PtrMemberAccess	refi -> addr		663027	0					
ANR	663693	Identifier	refi		663027	0					
ANR	663694	Identifier	addr		663027	1					
ANR	663695	ExpressionStatement	"pj_ks ( pj , ""type"" , r_anal_xrefs_type_tostring ( refi -> type ) )"	2857:4:90110:90169	663027	3	True				
ANR	663696	CallExpression	"pj_ks ( pj , ""type"" , r_anal_xrefs_type_tostring ( refi -> type ) )"		663027	0					
ANR	663697	Callee	pj_ks		663027	0					
ANR	663698	Identifier	pj_ks		663027	0					
ANR	663699	ArgumentList	pj		663027	1					
ANR	663700	Argument	pj		663027	0					
ANR	663701	Identifier	pj		663027	0					
ANR	663702	Argument	"""type"""		663027	1					
ANR	663703	PrimaryExpression	"""type"""		663027	0					
ANR	663704	Argument	r_anal_xrefs_type_tostring ( refi -> type )		663027	2					
ANR	663705	CallExpression	r_anal_xrefs_type_tostring ( refi -> type )		663027	0					
ANR	663706	Callee	r_anal_xrefs_type_tostring		663027	0					
ANR	663707	Identifier	r_anal_xrefs_type_tostring		663027	0					
ANR	663708	ArgumentList	refi -> type		663027	1					
ANR	663709	Argument	refi -> type		663027	0					
ANR	663710	PtrMemberAccess	refi -> type		663027	0					
ANR	663711	Identifier	refi		663027	0					
ANR	663712	Identifier	type		663027	1					
ANR	663713	ExpressionStatement	"pj_kn ( pj , ""at"" , refi -> at )"	2858:4:90175:90201	663027	4	True				
ANR	663714	CallExpression	"pj_kn ( pj , ""at"" , refi -> at )"		663027	0					
ANR	663715	Callee	pj_kn		663027	0					
ANR	663716	Identifier	pj_kn		663027	0					
ANR	663717	ArgumentList	pj		663027	1					
ANR	663718	Argument	pj		663027	0					
ANR	663719	Identifier	pj		663027	0					
ANR	663720	Argument	"""at"""		663027	1					
ANR	663721	PrimaryExpression	"""at"""		663027	0					
ANR	663722	Argument	refi -> at		663027	2					
ANR	663723	PtrMemberAccess	refi -> at		663027	0					
ANR	663724	Identifier	refi		663027	0					
ANR	663725	Identifier	at		663027	1					
ANR	663726	ExpressionStatement	pj_end ( pj )	2859:4:90207:90218	663027	5	True				
ANR	663727	CallExpression	pj_end ( pj )		663027	0					
ANR	663728	Callee	pj_end		663027	0					
ANR	663729	Identifier	pj_end		663027	0					
ANR	663730	ArgumentList	pj		663027	1					
ANR	663731	Argument	pj		663027	0					
ANR	663732	Identifier	pj		663027	0					
ANR	663733	ExpressionStatement	pj_end ( pj )	2863:2:90232:90243	663027	11	True				
ANR	663734	CallExpression	pj_end ( pj )		663027	0					
ANR	663735	Callee	pj_end		663027	0					
ANR	663736	Identifier	pj_end		663027	0					
ANR	663737	ArgumentList	pj		663027	1					
ANR	663738	Argument	pj		663027	0					
ANR	663739	Identifier	pj		663027	0					
ANR	663740	ExpressionStatement	"pj_k ( pj , ""dataxrefs"" )"	2864:2:90247:90269	663027	12	True				
ANR	663741	CallExpression	"pj_k ( pj , ""dataxrefs"" )"		663027	0					
ANR	663742	Callee	pj_k		663027	0					
ANR	663743	Identifier	pj_k		663027	0					
ANR	663744	ArgumentList	pj		663027	1					
ANR	663745	Argument	pj		663027	0					
ANR	663746	Identifier	pj		663027	0					
ANR	663747	Argument	"""dataxrefs"""		663027	1					
ANR	663748	PrimaryExpression	"""dataxrefs"""		663027	0					
ANR	663749	ExpressionStatement	pj_a ( pj )	2865:2:90273:90282	663027	13	True				
ANR	663750	CallExpression	pj_a ( pj )		663027	0					
ANR	663751	Callee	pj_a		663027	0					
ANR	663752	Identifier	pj_a		663027	0					
ANR	663753	ArgumentList	pj		663027	1					
ANR	663754	Argument	pj		663027	0					
ANR	663755	Identifier	pj		663027	0					
ANR	663756	Statement	r_list_foreach	2867:2:90287:90300	663027	14	True				
ANR	663757	Statement	(	2867:17:90302:90302	663027	15	True				
ANR	663758	Statement	xrefs	2867:18:90303:90307	663027	16	True				
ANR	663759	Statement	","	2867:23:90308:90308	663027	17	True				
ANR	663760	Statement	iter	2867:25:90310:90313	663027	18	True				
ANR	663761	Statement	","	2867:29:90314:90314	663027	19	True				
ANR	663762	Statement	refi	2867:31:90316:90319	663027	20	True				
ANR	663763	Statement	)	2867:35:90320:90320	663027	21	True				
ANR	663764	CompoundStatement		93:37:2404:2404	663027	22					
ANR	663765	IfStatement	if ( refi -> type == R_ANAL_REF_TYPE_DATA )		663027	0					
ANR	663766	Condition	refi -> type == R_ANAL_REF_TYPE_DATA	2868:7:90331:90364	663027	0	True				
ANR	663767	EqualityExpression	refi -> type == R_ANAL_REF_TYPE_DATA		663027	0		==			
ANR	663768	PtrMemberAccess	refi -> type		663027	0					
ANR	663769	Identifier	refi		663027	0					
ANR	663770	Identifier	type		663027	1					
ANR	663771	Identifier	R_ANAL_REF_TYPE_DATA		663027	1					
ANR	663772	CompoundStatement		94:43:2449:2449	663027	1					
ANR	663773	ExpressionStatement	"pj_n ( pj , refi -> addr )"	2869:4:90373:90394	663027	0	True				
ANR	663774	CallExpression	"pj_n ( pj , refi -> addr )"		663027	0					
ANR	663775	Callee	pj_n		663027	0					
ANR	663776	Identifier	pj_n		663027	0					
ANR	663777	ArgumentList	pj		663027	1					
ANR	663778	Argument	pj		663027	0					
ANR	663779	Identifier	pj		663027	0					
ANR	663780	Argument	refi -> addr		663027	1					
ANR	663781	PtrMemberAccess	refi -> addr		663027	0					
ANR	663782	Identifier	refi		663027	0					
ANR	663783	Identifier	addr		663027	1					
ANR	663784	ExpressionStatement	pj_end ( pj )	2872:2:90407:90418	663027	23	True				
ANR	663785	CallExpression	pj_end ( pj )		663027	0					
ANR	663786	Callee	pj_end		663027	0					
ANR	663787	Identifier	pj_end		663027	0					
ANR	663788	ArgumentList	pj		663027	1					
ANR	663789	Argument	pj		663027	0					
ANR	663790	Identifier	pj		663027	0					
ANR	663791	ExpressionStatement	r_list_free ( xrefs )	2874:1:90424:90443	663027	31	True				
ANR	663792	CallExpression	r_list_free ( xrefs )		663027	0					
ANR	663793	Callee	r_list_free		663027	0					
ANR	663794	Identifier	r_list_free		663027	0					
ANR	663795	ArgumentList	xrefs		663027	1					
ANR	663796	Argument	xrefs		663027	0					
ANR	663797	Identifier	xrefs		663027	0					
ANR	663798	ExpressionStatement	"pj_ki ( pj , ""indegree"" , indegree )"	2876:1:90447:90479	663027	32	True				
ANR	663799	CallExpression	"pj_ki ( pj , ""indegree"" , indegree )"		663027	0					
ANR	663800	Callee	pj_ki		663027	0					
ANR	663801	Identifier	pj_ki		663027	0					
ANR	663802	ArgumentList	pj		663027	1					
ANR	663803	Argument	pj		663027	0					
ANR	663804	Identifier	pj		663027	0					
ANR	663805	Argument	"""indegree"""		663027	1					
ANR	663806	PrimaryExpression	"""indegree"""		663027	0					
ANR	663807	Argument	indegree		663027	2					
ANR	663808	Identifier	indegree		663027	0					
ANR	663809	ExpressionStatement	"pj_ki ( pj , ""outdegree"" , outdegree )"	2877:1:90482:90516	663027	33	True				
ANR	663810	CallExpression	"pj_ki ( pj , ""outdegree"" , outdegree )"		663027	0					
ANR	663811	Callee	pj_ki		663027	0					
ANR	663812	Identifier	pj_ki		663027	0					
ANR	663813	ArgumentList	pj		663027	1					
ANR	663814	Argument	pj		663027	0					
ANR	663815	Identifier	pj		663027	0					
ANR	663816	Argument	"""outdegree"""		663027	1					
ANR	663817	PrimaryExpression	"""outdegree"""		663027	0					
ANR	663818	Argument	outdegree		663027	2					
ANR	663819	Identifier	outdegree		663027	0					
ANR	663820	IfStatement	if ( fcn -> type == R_ANAL_FCN_TYPE_FCN || fcn -> type == R_ANAL_FCN_TYPE_SYM )		663027	34					
ANR	663821	Condition	fcn -> type == R_ANAL_FCN_TYPE_FCN || fcn -> type == R_ANAL_FCN_TYPE_SYM	2879:5:90524:90591	663027	0	True				
ANR	663822	OrExpression	fcn -> type == R_ANAL_FCN_TYPE_FCN || fcn -> type == R_ANAL_FCN_TYPE_SYM		663027	0		||			
ANR	663823	EqualityExpression	fcn -> type == R_ANAL_FCN_TYPE_FCN		663027	0		==			
ANR	663824	PtrMemberAccess	fcn -> type		663027	0					
ANR	663825	Identifier	fcn		663027	0					
ANR	663826	Identifier	type		663027	1					
ANR	663827	Identifier	R_ANAL_FCN_TYPE_FCN		663027	1					
ANR	663828	EqualityExpression	fcn -> type == R_ANAL_FCN_TYPE_SYM		663027	1		==			
ANR	663829	PtrMemberAccess	fcn -> type		663027	0					
ANR	663830	Identifier	fcn		663027	0					
ANR	663831	Identifier	type		663027	1					
ANR	663832	Identifier	R_ANAL_FCN_TYPE_SYM		663027	1					
ANR	663833	CompoundStatement		105:75:2676:2676	663027	1					
ANR	663834	ExpressionStatement	"pj_ki ( pj , ""nlocals"" , r_anal_var_count ( core -> anal , fcn , 'b' , 0 ) + r_anal_var_count ( core -> anal , fcn , 'r' , 0 ) + r_anal_var_count ( core -> anal , fcn , 's' , 0 ) )"	2880:2:90598:90761	663027	0	True				
ANR	663835	CallExpression	"pj_ki ( pj , ""nlocals"" , r_anal_var_count ( core -> anal , fcn , 'b' , 0 ) + r_anal_var_count ( core -> anal , fcn , 'r' , 0 ) + r_anal_var_count ( core -> anal , fcn , 's' , 0 ) )"		663027	0					
ANR	663836	Callee	pj_ki		663027	0					
ANR	663837	Identifier	pj_ki		663027	0					
ANR	663838	ArgumentList	pj		663027	1					
ANR	663839	Argument	pj		663027	0					
ANR	663840	Identifier	pj		663027	0					
ANR	663841	Argument	"""nlocals"""		663027	1					
ANR	663842	PrimaryExpression	"""nlocals"""		663027	0					
ANR	663843	Argument	"r_anal_var_count ( core -> anal , fcn , 'b' , 0 ) + r_anal_var_count ( core -> anal , fcn , 'r' , 0 ) + r_anal_var_count ( core -> anal , fcn , 's' , 0 )"		663027	2					
ANR	663844	AdditiveExpression	"r_anal_var_count ( core -> anal , fcn , 'b' , 0 ) + r_anal_var_count ( core -> anal , fcn , 'r' , 0 ) + r_anal_var_count ( core -> anal , fcn , 's' , 0 )"		663027	0		+			
ANR	663845	CallExpression	"r_anal_var_count ( core -> anal , fcn , 'b' , 0 )"		663027	0					
ANR	663846	Callee	r_anal_var_count		663027	0					
ANR	663847	Identifier	r_anal_var_count		663027	0					
ANR	663848	ArgumentList	core -> anal		663027	1					
ANR	663849	Argument	core -> anal		663027	0					
ANR	663850	PtrMemberAccess	core -> anal		663027	0					
ANR	663851	Identifier	core		663027	0					
ANR	663852	Identifier	anal		663027	1					
ANR	663853	Argument	fcn		663027	1					
ANR	663854	Identifier	fcn		663027	0					
ANR	663855	Argument	'b'		663027	2					
ANR	663856	PrimaryExpression	'b'		663027	0					
ANR	663857	Argument	0		663027	3					
ANR	663858	PrimaryExpression	0		663027	0					
ANR	663859	AdditiveExpression	"r_anal_var_count ( core -> anal , fcn , 'r' , 0 ) + r_anal_var_count ( core -> anal , fcn , 's' , 0 )"		663027	1		+			
ANR	663860	CallExpression	"r_anal_var_count ( core -> anal , fcn , 'r' , 0 )"		663027	0					
ANR	663861	Callee	r_anal_var_count		663027	0					
ANR	663862	Identifier	r_anal_var_count		663027	0					
ANR	663863	ArgumentList	core -> anal		663027	1					
ANR	663864	Argument	core -> anal		663027	0					
ANR	663865	PtrMemberAccess	core -> anal		663027	0					
ANR	663866	Identifier	core		663027	0					
ANR	663867	Identifier	anal		663027	1					
ANR	663868	Argument	fcn		663027	1					
ANR	663869	Identifier	fcn		663027	0					
ANR	663870	Argument	'r'		663027	2					
ANR	663871	PrimaryExpression	'r'		663027	0					
ANR	663872	Argument	0		663027	3					
ANR	663873	PrimaryExpression	0		663027	0					
ANR	663874	CallExpression	"r_anal_var_count ( core -> anal , fcn , 's' , 0 )"		663027	1					
ANR	663875	Callee	r_anal_var_count		663027	0					
ANR	663876	Identifier	r_anal_var_count		663027	0					
ANR	663877	ArgumentList	core -> anal		663027	1					
ANR	663878	Argument	core -> anal		663027	0					
ANR	663879	PtrMemberAccess	core -> anal		663027	0					
ANR	663880	Identifier	core		663027	0					
ANR	663881	Identifier	anal		663027	1					
ANR	663882	Argument	fcn		663027	1					
ANR	663883	Identifier	fcn		663027	0					
ANR	663884	Argument	's'		663027	2					
ANR	663885	PrimaryExpression	's'		663027	0					
ANR	663886	Argument	0		663027	3					
ANR	663887	PrimaryExpression	0		663027	0					
ANR	663888	ExpressionStatement	"pj_ki ( pj , ""nargs"" , r_anal_var_count ( core -> anal , fcn , 'b' , 1 ) + r_anal_var_count ( core -> anal , fcn , 'r' , 1 ) + r_anal_var_count ( core -> anal , fcn , 's' , 1 ) )"	2883:2:90765:90926	663027	1	True				
ANR	663889	CallExpression	"pj_ki ( pj , ""nargs"" , r_anal_var_count ( core -> anal , fcn , 'b' , 1 ) + r_anal_var_count ( core -> anal , fcn , 'r' , 1 ) + r_anal_var_count ( core -> anal , fcn , 's' , 1 ) )"		663027	0					
ANR	663890	Callee	pj_ki		663027	0					
ANR	663891	Identifier	pj_ki		663027	0					
ANR	663892	ArgumentList	pj		663027	1					
ANR	663893	Argument	pj		663027	0					
ANR	663894	Identifier	pj		663027	0					
ANR	663895	Argument	"""nargs"""		663027	1					
ANR	663896	PrimaryExpression	"""nargs"""		663027	0					
ANR	663897	Argument	"r_anal_var_count ( core -> anal , fcn , 'b' , 1 ) + r_anal_var_count ( core -> anal , fcn , 'r' , 1 ) + r_anal_var_count ( core -> anal , fcn , 's' , 1 )"		663027	2					
ANR	663898	AdditiveExpression	"r_anal_var_count ( core -> anal , fcn , 'b' , 1 ) + r_anal_var_count ( core -> anal , fcn , 'r' , 1 ) + r_anal_var_count ( core -> anal , fcn , 's' , 1 )"		663027	0		+			
ANR	663899	CallExpression	"r_anal_var_count ( core -> anal , fcn , 'b' , 1 )"		663027	0					
ANR	663900	Callee	r_anal_var_count		663027	0					
ANR	663901	Identifier	r_anal_var_count		663027	0					
ANR	663902	ArgumentList	core -> anal		663027	1					
ANR	663903	Argument	core -> anal		663027	0					
ANR	663904	PtrMemberAccess	core -> anal		663027	0					
ANR	663905	Identifier	core		663027	0					
ANR	663906	Identifier	anal		663027	1					
ANR	663907	Argument	fcn		663027	1					
ANR	663908	Identifier	fcn		663027	0					
ANR	663909	Argument	'b'		663027	2					
ANR	663910	PrimaryExpression	'b'		663027	0					
ANR	663911	Argument	1		663027	3					
ANR	663912	PrimaryExpression	1		663027	0					
ANR	663913	AdditiveExpression	"r_anal_var_count ( core -> anal , fcn , 'r' , 1 ) + r_anal_var_count ( core -> anal , fcn , 's' , 1 )"		663027	1		+			
ANR	663914	CallExpression	"r_anal_var_count ( core -> anal , fcn , 'r' , 1 )"		663027	0					
ANR	663915	Callee	r_anal_var_count		663027	0					
ANR	663916	Identifier	r_anal_var_count		663027	0					
ANR	663917	ArgumentList	core -> anal		663027	1					
ANR	663918	Argument	core -> anal		663027	0					
ANR	663919	PtrMemberAccess	core -> anal		663027	0					
ANR	663920	Identifier	core		663027	0					
ANR	663921	Identifier	anal		663027	1					
ANR	663922	Argument	fcn		663027	1					
ANR	663923	Identifier	fcn		663027	0					
ANR	663924	Argument	'r'		663027	2					
ANR	663925	PrimaryExpression	'r'		663027	0					
ANR	663926	Argument	1		663027	3					
ANR	663927	PrimaryExpression	1		663027	0					
ANR	663928	CallExpression	"r_anal_var_count ( core -> anal , fcn , 's' , 1 )"		663027	1					
ANR	663929	Callee	r_anal_var_count		663027	0					
ANR	663930	Identifier	r_anal_var_count		663027	0					
ANR	663931	ArgumentList	core -> anal		663027	1					
ANR	663932	Argument	core -> anal		663027	0					
ANR	663933	PtrMemberAccess	core -> anal		663027	0					
ANR	663934	Identifier	core		663027	0					
ANR	663935	Identifier	anal		663027	1					
ANR	663936	Argument	fcn		663027	1					
ANR	663937	Identifier	fcn		663027	0					
ANR	663938	Argument	's'		663027	2					
ANR	663939	PrimaryExpression	's'		663027	0					
ANR	663940	Argument	1		663027	3					
ANR	663941	PrimaryExpression	1		663027	0					
ANR	663942	ExpressionStatement	"pj_k ( pj , ""bpvars"" )"	2887:2:90931:90950	663027	2	True				
ANR	663943	CallExpression	"pj_k ( pj , ""bpvars"" )"		663027	0					
ANR	663944	Callee	pj_k		663027	0					
ANR	663945	Identifier	pj_k		663027	0					
ANR	663946	ArgumentList	pj		663027	1					
ANR	663947	Argument	pj		663027	0					
ANR	663948	Identifier	pj		663027	0					
ANR	663949	Argument	"""bpvars"""		663027	1					
ANR	663950	PrimaryExpression	"""bpvars"""		663027	0					
ANR	663951	ExpressionStatement	"r_anal_var_list_show ( core -> anal , fcn , 'b' , 'j' , pj )"	2888:2:90954:91006	663027	3	True				
ANR	663952	CallExpression	"r_anal_var_list_show ( core -> anal , fcn , 'b' , 'j' , pj )"		663027	0					
ANR	663953	Callee	r_anal_var_list_show		663027	0					
ANR	663954	Identifier	r_anal_var_list_show		663027	0					
ANR	663955	ArgumentList	core -> anal		663027	1					
ANR	663956	Argument	core -> anal		663027	0					
ANR	663957	PtrMemberAccess	core -> anal		663027	0					
ANR	663958	Identifier	core		663027	0					
ANR	663959	Identifier	anal		663027	1					
ANR	663960	Argument	fcn		663027	1					
ANR	663961	Identifier	fcn		663027	0					
ANR	663962	Argument	'b'		663027	2					
ANR	663963	PrimaryExpression	'b'		663027	0					
ANR	663964	Argument	'j'		663027	3					
ANR	663965	PrimaryExpression	'j'		663027	0					
ANR	663966	Argument	pj		663027	4					
ANR	663967	Identifier	pj		663027	0					
ANR	663968	ExpressionStatement	"pj_k ( pj , ""spvars"" )"	2889:2:91010:91029	663027	4	True				
ANR	663969	CallExpression	"pj_k ( pj , ""spvars"" )"		663027	0					
ANR	663970	Callee	pj_k		663027	0					
ANR	663971	Identifier	pj_k		663027	0					
ANR	663972	ArgumentList	pj		663027	1					
ANR	663973	Argument	pj		663027	0					
ANR	663974	Identifier	pj		663027	0					
ANR	663975	Argument	"""spvars"""		663027	1					
ANR	663976	PrimaryExpression	"""spvars"""		663027	0					
ANR	663977	ExpressionStatement	"r_anal_var_list_show ( core -> anal , fcn , 's' , 'j' , pj )"	2890:2:91033:91085	663027	5	True				
ANR	663978	CallExpression	"r_anal_var_list_show ( core -> anal , fcn , 's' , 'j' , pj )"		663027	0					
ANR	663979	Callee	r_anal_var_list_show		663027	0					
ANR	663980	Identifier	r_anal_var_list_show		663027	0					
ANR	663981	ArgumentList	core -> anal		663027	1					
ANR	663982	Argument	core -> anal		663027	0					
ANR	663983	PtrMemberAccess	core -> anal		663027	0					
ANR	663984	Identifier	core		663027	0					
ANR	663985	Identifier	anal		663027	1					
ANR	663986	Argument	fcn		663027	1					
ANR	663987	Identifier	fcn		663027	0					
ANR	663988	Argument	's'		663027	2					
ANR	663989	PrimaryExpression	's'		663027	0					
ANR	663990	Argument	'j'		663027	3					
ANR	663991	PrimaryExpression	'j'		663027	0					
ANR	663992	Argument	pj		663027	4					
ANR	663993	Identifier	pj		663027	0					
ANR	663994	ExpressionStatement	"pj_k ( pj , ""regvars"" )"	2891:2:91089:91109	663027	6	True				
ANR	663995	CallExpression	"pj_k ( pj , ""regvars"" )"		663027	0					
ANR	663996	Callee	pj_k		663027	0					
ANR	663997	Identifier	pj_k		663027	0					
ANR	663998	ArgumentList	pj		663027	1					
ANR	663999	Argument	pj		663027	0					
ANR	664000	Identifier	pj		663027	0					
ANR	664001	Argument	"""regvars"""		663027	1					
ANR	664002	PrimaryExpression	"""regvars"""		663027	0					
ANR	664003	ExpressionStatement	"r_anal_var_list_show ( core -> anal , fcn , 'r' , 'j' , pj )"	2892:2:91113:91165	663027	7	True				
ANR	664004	CallExpression	"r_anal_var_list_show ( core -> anal , fcn , 'r' , 'j' , pj )"		663027	0					
ANR	664005	Callee	r_anal_var_list_show		663027	0					
ANR	664006	Identifier	r_anal_var_list_show		663027	0					
ANR	664007	ArgumentList	core -> anal		663027	1					
ANR	664008	Argument	core -> anal		663027	0					
ANR	664009	PtrMemberAccess	core -> anal		663027	0					
ANR	664010	Identifier	core		663027	0					
ANR	664011	Identifier	anal		663027	1					
ANR	664012	Argument	fcn		663027	1					
ANR	664013	Identifier	fcn		663027	0					
ANR	664014	Argument	'r'		663027	2					
ANR	664015	PrimaryExpression	'r'		663027	0					
ANR	664016	Argument	'j'		663027	3					
ANR	664017	PrimaryExpression	'j'		663027	0					
ANR	664018	Argument	pj		663027	4					
ANR	664019	Identifier	pj		663027	0					
ANR	664020	ExpressionStatement	"pj_ks ( pj , ""difftype"" , fcn -> diff -> type == R_ANAL_DIFF_TYPE_MATCH ? ""match"" : fcn -> diff -> type == R_ANAL_DIFF_TYPE_UNMATCH ? ""unmatch"" : ""new"" )"	2894:2:91170:91308	663027	8	True				
ANR	664021	CallExpression	"pj_ks ( pj , ""difftype"" , fcn -> diff -> type == R_ANAL_DIFF_TYPE_MATCH ? ""match"" : fcn -> diff -> type == R_ANAL_DIFF_TYPE_UNMATCH ? ""unmatch"" : ""new"" )"		663027	0					
ANR	664022	Callee	pj_ks		663027	0					
ANR	664023	Identifier	pj_ks		663027	0					
ANR	664024	ArgumentList	pj		663027	1					
ANR	664025	Argument	pj		663027	0					
ANR	664026	Identifier	pj		663027	0					
ANR	664027	Argument	"""difftype"""		663027	1					
ANR	664028	PrimaryExpression	"""difftype"""		663027	0					
ANR	664029	Argument	"fcn -> diff -> type == R_ANAL_DIFF_TYPE_MATCH ? ""match"" : fcn -> diff -> type == R_ANAL_DIFF_TYPE_UNMATCH ? ""unmatch"" : ""new"""		663027	2					
ANR	664030	ConditionalExpression	"fcn -> diff -> type == R_ANAL_DIFF_TYPE_MATCH ? ""match"" : fcn -> diff -> type == R_ANAL_DIFF_TYPE_UNMATCH ? ""unmatch"" : ""new"""		663027	0					
ANR	664031	Condition	fcn -> diff -> type == R_ANAL_DIFF_TYPE_MATCH		663027	0					
ANR	664032	EqualityExpression	fcn -> diff -> type == R_ANAL_DIFF_TYPE_MATCH		663027	0		==			
ANR	664033	PtrMemberAccess	fcn -> diff -> type		663027	0					
ANR	664034	PtrMemberAccess	fcn -> diff		663027	0					
ANR	664035	Identifier	fcn		663027	0					
ANR	664036	Identifier	diff		663027	1					
ANR	664037	Identifier	type		663027	1					
ANR	664038	Identifier	R_ANAL_DIFF_TYPE_MATCH		663027	1					
ANR	664039	PrimaryExpression	"""match"""		663027	1					
ANR	664040	ConditionalExpression	"fcn -> diff -> type == R_ANAL_DIFF_TYPE_UNMATCH ? ""unmatch"" : ""new"""		663027	2					
ANR	664041	Condition	fcn -> diff -> type == R_ANAL_DIFF_TYPE_UNMATCH		663027	0					
ANR	664042	EqualityExpression	fcn -> diff -> type == R_ANAL_DIFF_TYPE_UNMATCH		663027	0		==			
ANR	664043	PtrMemberAccess	fcn -> diff -> type		663027	0					
ANR	664044	PtrMemberAccess	fcn -> diff		663027	0					
ANR	664045	Identifier	fcn		663027	0					
ANR	664046	Identifier	diff		663027	1					
ANR	664047	Identifier	type		663027	1					
ANR	664048	Identifier	R_ANAL_DIFF_TYPE_UNMATCH		663027	1					
ANR	664049	PrimaryExpression	"""unmatch"""		663027	1					
ANR	664050	PrimaryExpression	"""new"""		663027	2					
ANR	664051	IfStatement	if ( fcn -> diff -> addr != - 1 )		663027	9					
ANR	664052	Condition	fcn -> diff -> addr != - 1	2896:6:91316:91336	663027	0	True				
ANR	664053	EqualityExpression	fcn -> diff -> addr != - 1		663027	0		!=			
ANR	664054	PtrMemberAccess	fcn -> diff -> addr		663027	0					
ANR	664055	PtrMemberAccess	fcn -> diff		663027	0					
ANR	664056	Identifier	fcn		663027	0					
ANR	664057	Identifier	diff		663027	1					
ANR	664058	Identifier	addr		663027	1					
ANR	664059	UnaryOperationExpression	- 1		663027	1					
ANR	664060	UnaryOperator	-		663027	0					
ANR	664061	PrimaryExpression	1		663027	1					
ANR	664062	CompoundStatement		122:29:3421:3421	663027	1					
ANR	664063	ExpressionStatement	"pj_kn ( pj , ""diffaddr"" , fcn -> diff -> addr )"	2897:3:91344:91383	663027	0	True				
ANR	664064	CallExpression	"pj_kn ( pj , ""diffaddr"" , fcn -> diff -> addr )"		663027	0					
ANR	664065	Callee	pj_kn		663027	0					
ANR	664066	Identifier	pj_kn		663027	0					
ANR	664067	ArgumentList	pj		663027	1					
ANR	664068	Argument	pj		663027	0					
ANR	664069	Identifier	pj		663027	0					
ANR	664070	Argument	"""diffaddr"""		663027	1					
ANR	664071	PrimaryExpression	"""diffaddr"""		663027	0					
ANR	664072	Argument	fcn -> diff -> addr		663027	2					
ANR	664073	PtrMemberAccess	fcn -> diff -> addr		663027	0					
ANR	664074	PtrMemberAccess	fcn -> diff		663027	0					
ANR	664075	Identifier	fcn		663027	0					
ANR	664076	Identifier	diff		663027	1					
ANR	664077	Identifier	addr		663027	1					
ANR	664078	IfStatement	if ( fcn -> diff -> name )		663027	10					
ANR	664079	Condition	fcn -> diff -> name	2899:6:91395:91409	663027	0	True				
ANR	664080	PtrMemberAccess	fcn -> diff -> name		663027	0					
ANR	664081	PtrMemberAccess	fcn -> diff		663027	0					
ANR	664082	Identifier	fcn		663027	0					
ANR	664083	Identifier	diff		663027	1					
ANR	664084	Identifier	name		663027	1					
ANR	664085	CompoundStatement		125:23:3494:3494	663027	1					
ANR	664086	ExpressionStatement	"pj_ks ( pj , ""diffname"" , fcn -> diff -> name )"	2900:3:91417:91456	663027	0	True				
ANR	664087	CallExpression	"pj_ks ( pj , ""diffname"" , fcn -> diff -> name )"		663027	0					
ANR	664088	Callee	pj_ks		663027	0					
ANR	664089	Identifier	pj_ks		663027	0					
ANR	664090	ArgumentList	pj		663027	1					
ANR	664091	Argument	pj		663027	0					
ANR	664092	Identifier	pj		663027	0					
ANR	664093	Argument	"""diffname"""		663027	1					
ANR	664094	PrimaryExpression	"""diffname"""		663027	0					
ANR	664095	Argument	fcn -> diff -> name		663027	2					
ANR	664096	PtrMemberAccess	fcn -> diff -> name		663027	0					
ANR	664097	PtrMemberAccess	fcn -> diff		663027	0					
ANR	664098	Identifier	fcn		663027	0					
ANR	664099	Identifier	diff		663027	1					
ANR	664100	Identifier	name		663027	1					
ANR	664101	ExpressionStatement	pj_end ( pj )	2903:1:91466:91477	663027	35	True				
ANR	664102	CallExpression	pj_end ( pj )		663027	0					
ANR	664103	Callee	pj_end		663027	0					
ANR	664104	Identifier	pj_end		663027	0					
ANR	664105	ArgumentList	pj		663027	1					
ANR	664106	Argument	pj		663027	0					
ANR	664107	Identifier	pj		663027	0					
ANR	664108	ExpressionStatement	free ( name )	2904:1:91480:91491	663027	36	True				
ANR	664109	CallExpression	free ( name )		663027	0					
ANR	664110	Callee	free		663027	0					
ANR	664111	Identifier	free		663027	0					
ANR	664112	ArgumentList	name		663027	1					
ANR	664113	Argument	name		663027	0					
ANR	664114	Identifier	name		663027	0					
ANR	664115	ReturnStatement	return 0 ;	2905:1:91494:91502	663027	37	True				
ANR	664116	PrimaryExpression	0		663027	0					
ANR	664117	ReturnType	static int		663027	1					
ANR	664118	Identifier	fcn_print_json		663027	2					
ANR	664119	ParameterList	"RCore * core , RAnalFunction * fcn , PJ * pj"		663027	3					
ANR	664120	Parameter	RCore * core	2775:26:87876:87886	663027	0	True				
ANR	664121	ParameterType	RCore *		663027	0					
ANR	664122	Identifier	core		663027	1					
ANR	664123	Parameter	RAnalFunction * fcn	2775:39:87889:87906	663027	1	True				
ANR	664124	ParameterType	RAnalFunction *		663027	0					
ANR	664125	Identifier	fcn		663027	1					
ANR	664126	Parameter	PJ * pj	2775:59:87909:87914	663027	2	True				
ANR	664127	ParameterType	PJ *		663027	0					
ANR	664128	Identifier	pj		663027	1					
ANR	664129	CFGEntryNode	ENTRY		663027		True				
ANR	664130	CFGExitNode	EXIT		663027		True				
ANR	664131	Symbol	ebbs		663027						
ANR	664132	Symbol	refi		663027						
ANR	664133	Symbol	* fcn		663027						
ANR	664134	Symbol	r_anal_fcn_size		663027						
ANR	664135	Symbol	R_ANAL_FCN_TYPE_FCN		663027						
ANR	664136	Symbol	fcn -> meta		663027						
ANR	664137	Symbol	fcn -> bits		663027						
ANR	664138	Symbol	fcn -> diff		663027						
ANR	664139	Symbol	refi -> addr		663027						
ANR	664140	Symbol	refi -> at		663027						
ANR	664141	Symbol	r_anal_var_count		663027						
ANR	664142	Symbol	r_anal_fcn_get_xrefs		663027						
ANR	664143	Symbol	R_ANAL_FCN_TYPE_SYM		663027						
ANR	664144	Symbol	indegree		663027						
ANR	664145	Symbol	& ebbs		663027						
ANR	664146	Symbol	fcn -> diff -> type		663027						
ANR	664147	Symbol	* * fcn		663027						
ANR	664148	Symbol	iter		663027						
ANR	664149	Symbol	R_ANAL_REF_TYPE_DATA		663027						
ANR	664150	Symbol	fcn -> type		663027						
ANR	664151	Symbol	fcn -> meta . max		663027						
ANR	664152	Symbol	R_ANAL_DIFF_TYPE_UNMATCH		663027						
ANR	664153	Symbol	r_anal_fcn_get_refs		663027						
ANR	664154	Symbol	core		663027						
ANR	664155	Symbol	* fcn -> diff		663027						
ANR	664156	Symbol	r_anal_fcn_get_purity		663027						
ANR	664157	Symbol	name		663027						
ANR	664158	Symbol	r_list_empty		663027						
ANR	664159	Symbol	fcn -> meta . min		663027						
ANR	664160	Symbol	r_anal_fcn_type_tostring		663027						
ANR	664161	Symbol	r_anal_fcn_cc		663027						
ANR	664162	Symbol	R_ANAL_DIFF_TYPE_MATCH		663027						
ANR	664163	Symbol	* core		663027						
ANR	664164	Symbol	core -> anal		663027						
ANR	664165	Symbol	fcn -> maxstack		663027						
ANR	664166	Symbol	* refi		663027						
ANR	664167	Symbol	fcn		663027						
ANR	664168	Symbol	r_anal_fcn_cost		663027						
ANR	664169	Symbol	sig		663027						
ANR	664170	Symbol	r_anal_fcn_realsize		663027						
ANR	664171	Symbol	refi -> type		663027						
ANR	664172	Symbol	r_core_anal_fcn_name		663027						
ANR	664173	Symbol	outdegree		663027						
ANR	664174	Symbol	fcn -> cc		663027						
ANR	664175	Symbol	r_anal_xrefs_type_tostring		663027						
ANR	664176	Symbol	R_ANAL_REF_TYPE_CALL		663027						
ANR	664177	Symbol	r_str_bool		663027						
ANR	664178	Symbol	fcn -> diff -> addr		663027						
ANR	664179	Symbol	xrefs		663027						
ANR	664180	Symbol	r_anal_fcn_count_edges		663027						
ANR	664181	Symbol	R_ANAL_REF_TYPE_CODE		663027						
ANR	664182	Symbol	refs		663027						
ANR	664183	Symbol	fcn -> bbs		663027						
ANR	664184	Symbol	fcn -> diff -> name		663027						
ANR	664185	Symbol	fcn -> addr		663027						
ANR	664186	Symbol	pj		663027						
ANR	664187	Symbol	r_list_length		663027						
ANR	664188	Function	fcn_list_json	2908:0:91507:91875							
ANR	664189	FunctionDef	"fcn_list_json (RCore * core , RList * fcns , bool quiet)"		664188	0					
ANR	664190	CompoundStatement		2908:63:91570:91875	664188	0					
ANR	664191	IdentifierDeclStatement	RListIter * iter ;	2909:1:91573:91588	664188	0	True				
ANR	664192	IdentifierDecl	* iter		664188	0					
ANR	664193	IdentifierDeclType	RListIter *		664188	0					
ANR	664194	Identifier	iter		664188	1					
ANR	664195	IdentifierDeclStatement	RAnalFunction * fcn ;	2910:1:91591:91609	664188	1	True				
ANR	664196	IdentifierDecl	* fcn		664188	0					
ANR	664197	IdentifierDeclType	RAnalFunction *		664188	0					
ANR	664198	Identifier	fcn		664188	1					
ANR	664199	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	2911:1:91612:91630	664188	2	True				
ANR	664200	IdentifierDecl	* pj = pj_new ( )		664188	0					
ANR	664201	IdentifierDeclType	PJ *		664188	0					
ANR	664202	Identifier	pj		664188	1					
ANR	664203	AssignmentExpression	* pj = pj_new ( )		664188	2		=			
ANR	664204	Identifier	pj		664188	0					
ANR	664205	CallExpression	pj_new ( )		664188	1					
ANR	664206	Callee	pj_new		664188	0					
ANR	664207	Identifier	pj_new		664188	0					
ANR	664208	ArgumentList			664188	1					
ANR	664209	IfStatement	if ( ! pj )		664188	3					
ANR	664210	Condition	! pj	2912:5:91637:91639	664188	0	True				
ANR	664211	UnaryOperationExpression	! pj		664188	0					
ANR	664212	UnaryOperator	!		664188	0					
ANR	664213	Identifier	pj		664188	1					
ANR	664214	CompoundStatement		5:10:71:71	664188	1					
ANR	664215	ReturnStatement	return - 1 ;	2913:2:91646:91655	664188	0	True				
ANR	664216	UnaryOperationExpression	- 1		664188	0					
ANR	664217	UnaryOperator	-		664188	0					
ANR	664218	PrimaryExpression	1		664188	1					
ANR	664219	ExpressionStatement	pj_a ( pj )	2915:1:91661:91670	664188	4	True				
ANR	664220	CallExpression	pj_a ( pj )		664188	0					
ANR	664221	Callee	pj_a		664188	0					
ANR	664222	Identifier	pj_a		664188	0					
ANR	664223	ArgumentList	pj		664188	1					
ANR	664224	Argument	pj		664188	0					
ANR	664225	Identifier	pj		664188	0					
ANR	664226	Statement	r_list_foreach	2916:1:91673:91686	664188	5	True				
ANR	664227	Statement	(	2916:16:91688:91688	664188	6	True				
ANR	664228	Statement	fcns	2916:17:91689:91692	664188	7	True				
ANR	664229	Statement	","	2916:21:91693:91693	664188	8	True				
ANR	664230	Statement	iter	2916:23:91695:91698	664188	9	True				
ANR	664231	Statement	","	2916:27:91699:91699	664188	10	True				
ANR	664232	Statement	fcn	2916:29:91701:91703	664188	11	True				
ANR	664233	Statement	)	2916:32:91704:91704	664188	12	True				
ANR	664234	CompoundStatement		9:34:135:135	664188	13					
ANR	664235	IfStatement	if ( quiet )		664188	0					
ANR	664236	Condition	quiet	2917:6:91714:91718	664188	0	True				
ANR	664237	Identifier	quiet		664188	0					
ANR	664238	CompoundStatement		10:13:150:150	664188	1					
ANR	664239	ExpressionStatement	"pj_n ( pj , fcn -> addr )"	2918:3:91726:91746	664188	0	True				
ANR	664240	CallExpression	"pj_n ( pj , fcn -> addr )"		664188	0					
ANR	664241	Callee	pj_n		664188	0					
ANR	664242	Identifier	pj_n		664188	0					
ANR	664243	ArgumentList	pj		664188	1					
ANR	664244	Argument	pj		664188	0					
ANR	664245	Identifier	pj		664188	0					
ANR	664246	Argument	fcn -> addr		664188	1					
ANR	664247	PtrMemberAccess	fcn -> addr		664188	0					
ANR	664248	Identifier	fcn		664188	0					
ANR	664249	Identifier	addr		664188	1					
ANR	664250	ElseStatement	else		664188	0					
ANR	664251	CompoundStatement		12:9:186:186	664188	0					
ANR	664252	ExpressionStatement	"fcn_print_json ( core , fcn , pj )"	2920:3:91762:91792	664188	0	True				
ANR	664253	CallExpression	"fcn_print_json ( core , fcn , pj )"		664188	0					
ANR	664254	Callee	fcn_print_json		664188	0					
ANR	664255	Identifier	fcn_print_json		664188	0					
ANR	664256	ArgumentList	core		664188	1					
ANR	664257	Argument	core		664188	0					
ANR	664258	Identifier	core		664188	0					
ANR	664259	Argument	fcn		664188	1					
ANR	664260	Identifier	fcn		664188	0					
ANR	664261	Argument	pj		664188	2					
ANR	664262	Identifier	pj		664188	0					
ANR	664263	ExpressionStatement	pj_end ( pj )	2923:1:91802:91813	664188	14	True				
ANR	664264	CallExpression	pj_end ( pj )		664188	0					
ANR	664265	Callee	pj_end		664188	0					
ANR	664266	Identifier	pj_end		664188	0					
ANR	664267	ArgumentList	pj		664188	1					
ANR	664268	Argument	pj		664188	0					
ANR	664269	Identifier	pj		664188	0					
ANR	664270	ExpressionStatement	r_cons_println ( pj_string ( pj ) )	2924:1:91816:91847	664188	15	True				
ANR	664271	CallExpression	r_cons_println ( pj_string ( pj ) )		664188	0					
ANR	664272	Callee	r_cons_println		664188	0					
ANR	664273	Identifier	r_cons_println		664188	0					
ANR	664274	ArgumentList	pj_string ( pj )		664188	1					
ANR	664275	Argument	pj_string ( pj )		664188	0					
ANR	664276	CallExpression	pj_string ( pj )		664188	0					
ANR	664277	Callee	pj_string		664188	0					
ANR	664278	Identifier	pj_string		664188	0					
ANR	664279	ArgumentList	pj		664188	1					
ANR	664280	Argument	pj		664188	0					
ANR	664281	Identifier	pj		664188	0					
ANR	664282	ExpressionStatement	pj_free ( pj )	2925:1:91850:91862	664188	16	True				
ANR	664283	CallExpression	pj_free ( pj )		664188	0					
ANR	664284	Callee	pj_free		664188	0					
ANR	664285	Identifier	pj_free		664188	0					
ANR	664286	ArgumentList	pj		664188	1					
ANR	664287	Argument	pj		664188	0					
ANR	664288	Identifier	pj		664188	0					
ANR	664289	ReturnStatement	return 0 ;	2926:1:91865:91873	664188	17	True				
ANR	664290	PrimaryExpression	0		664188	0					
ANR	664291	ReturnType	static int		664188	1					
ANR	664292	Identifier	fcn_list_json		664188	2					
ANR	664293	ParameterList	"RCore * core , RList * fcns , bool quiet"		664188	3					
ANR	664294	Parameter	RCore * core	2908:25:91532:91542	664188	0	True				
ANR	664295	ParameterType	RCore *		664188	0					
ANR	664296	Identifier	core		664188	1					
ANR	664297	Parameter	RList * fcns	2908:38:91545:91555	664188	1	True				
ANR	664298	ParameterType	RList *		664188	0					
ANR	664299	Identifier	fcns		664188	1					
ANR	664300	Parameter	bool quiet	2908:51:91558:91567	664188	2	True				
ANR	664301	ParameterType	bool		664188	0					
ANR	664302	Identifier	quiet		664188	1					
ANR	664303	CFGEntryNode	ENTRY		664188		True				
ANR	664304	CFGExitNode	EXIT		664188		True				
ANR	664305	Symbol	fcn		664188						
ANR	664306	Symbol	core		664188						
ANR	664307	Symbol	* fcn		664188						
ANR	664308	Symbol	pj_string		664188						
ANR	664309	Symbol	iter		664188						
ANR	664310	Symbol	fcn -> addr		664188						
ANR	664311	Symbol	pj		664188						
ANR	664312	Symbol	pj_new		664188						
ANR	664313	Symbol	quiet		664188						
ANR	664314	Symbol	fcns		664188						
ANR	664315	Function	fcn_list_verbose_json	2929:0:91878:91982							
ANR	664316	FunctionDef	"fcn_list_verbose_json (RCore * core , RList * fcns)"		664315	0					
ANR	664317	CompoundStatement		2929:59:91937:91982	664315	0					
ANR	664318	ReturnStatement	"return fcn_list_json ( core , fcns , false ) ;"	2930:1:91940:91980	664315	0	True				
ANR	664319	CallExpression	"fcn_list_json ( core , fcns , false )"		664315	0					
ANR	664320	Callee	fcn_list_json		664315	0					
ANR	664321	Identifier	fcn_list_json		664315	0					
ANR	664322	ArgumentList	core		664315	1					
ANR	664323	Argument	core		664315	0					
ANR	664324	Identifier	core		664315	0					
ANR	664325	Argument	fcns		664315	1					
ANR	664326	Identifier	fcns		664315	0					
ANR	664327	Argument	false		664315	2					
ANR	664328	Identifier	false		664315	0					
ANR	664329	ReturnType	static int		664315	1					
ANR	664330	Identifier	fcn_list_verbose_json		664315	2					
ANR	664331	ParameterList	"RCore * core , RList * fcns"		664315	3					
ANR	664332	Parameter	RCore * core	2929:33:91911:91921	664315	0	True				
ANR	664333	ParameterType	RCore *		664315	0					
ANR	664334	Identifier	core		664315	1					
ANR	664335	Parameter	RList * fcns	2929:46:91924:91934	664315	1	True				
ANR	664336	ParameterType	RList *		664315	0					
ANR	664337	Identifier	fcns		664315	1					
ANR	664338	CFGEntryNode	ENTRY		664315		True				
ANR	664339	CFGExitNode	EXIT		664315		True				
ANR	664340	Symbol	core		664315						
ANR	664341	Symbol	false		664315						
ANR	664342	Symbol	fcn_list_json		664315						
ANR	664343	Symbol	fcns		664315						
ANR	664344	Function	fcn_print_detail	2933:0:91985:94145							
ANR	664345	FunctionDef	"fcn_print_detail (RCore * core , RAnalFunction * fcn)"		664344	0					
ANR	664346	CompoundStatement		2933:61:92046:94145	664344	0					
ANR	664347	IdentifierDeclStatement	const char * defaultCC = r_anal_cc_default ( core -> anal ) ;	2934:1:92049:92103	664344	0	True				
ANR	664348	IdentifierDecl	* defaultCC = r_anal_cc_default ( core -> anal )		664344	0					
ANR	664349	IdentifierDeclType	const char *		664344	0					
ANR	664350	Identifier	defaultCC		664344	1					
ANR	664351	AssignmentExpression	* defaultCC = r_anal_cc_default ( core -> anal )		664344	2		=			
ANR	664352	Identifier	defaultCC		664344	0					
ANR	664353	CallExpression	r_anal_cc_default ( core -> anal )		664344	1					
ANR	664354	Callee	r_anal_cc_default		664344	0					
ANR	664355	Identifier	r_anal_cc_default		664344	0					
ANR	664356	ArgumentList	core -> anal		664344	1					
ANR	664357	Argument	core -> anal		664344	0					
ANR	664358	PtrMemberAccess	core -> anal		664344	0					
ANR	664359	Identifier	core		664344	0					
ANR	664360	Identifier	anal		664344	1					
ANR	664361	IdentifierDeclStatement	"char * name = r_core_anal_fcn_name ( core , fcn ) ;"	2935:1:92106:92151	664344	1	True				
ANR	664362	IdentifierDecl	"* name = r_core_anal_fcn_name ( core , fcn )"		664344	0					
ANR	664363	IdentifierDeclType	char *		664344	0					
ANR	664364	Identifier	name		664344	1					
ANR	664365	AssignmentExpression	"* name = r_core_anal_fcn_name ( core , fcn )"		664344	2		=			
ANR	664366	Identifier	name		664344	0					
ANR	664367	CallExpression	"r_core_anal_fcn_name ( core , fcn )"		664344	1					
ANR	664368	Callee	r_core_anal_fcn_name		664344	0					
ANR	664369	Identifier	r_core_anal_fcn_name		664344	0					
ANR	664370	ArgumentList	core		664344	1					
ANR	664371	Argument	core		664344	0					
ANR	664372	Identifier	core		664344	0					
ANR	664373	Argument	fcn		664344	1					
ANR	664374	Identifier	fcn		664344	0					
ANR	664375	Statement	r_cons_printf	2936:1:92154:92166	664344	2	True				
ANR	664376	Statement	(	2936:15:92168:92168	664344	3	True				
ANR	664377	Statement	"""\\""f %s %d 0x%08"""	2936:16:92169:92185	664344	4	True				
ANR	664378	Statement	PFMT64x	2936:33:92186:92192	664344	5	True				
ANR	664379	Statement	"""\\""\\n"""	2936:40:92193:92198	664344	6	True				
ANR	664380	Statement	","	2936:46:92199:92199	664344	7	True				
ANR	664381	Statement	name	2936:48:92201:92204	664344	8	True				
ANR	664382	Statement	","	2936:52:92205:92205	664344	9	True				
ANR	664383	Statement	r_anal_fcn_size	2936:54:92207:92221	664344	10	True				
ANR	664384	Statement	(	2936:70:92223:92223	664344	11	True				
ANR	664385	Statement	fcn	2936:71:92224:92226	664344	12	True				
ANR	664386	Statement	)	2936:74:92227:92227	664344	13	True				
ANR	664387	Statement	","	2936:75:92228:92228	664344	14	True				
ANR	664388	Statement	fcn	2936:77:92230:92232	664344	15	True				
ANR	664389	Statement	->	2936:80:92233:92234	664344	16	True				
ANR	664390	Statement	addr	2936:82:92235:92238	664344	17	True				
ANR	664391	Statement	)	2936:86:92239:92239	664344	18	True				
ANR	664392	ExpressionStatement		2936:87:92240:92240	664344	19	True				
ANR	664393	Statement	r_cons_printf	2937:1:92243:92255	664344	20	True				
ANR	664394	Statement	(	2937:15:92257:92257	664344	21	True				
ANR	664395	Statement	"""\\""af+ 0x%08"""	2937:16:92258:92270	664344	22	True				
ANR	664396	Statement	PFMT64x	2937:29:92271:92277	664344	23	True				
ANR	664397	Statement	""" %s %c %c\\""\\n"""	2937:36:92278:92292	664344	24	True				
ANR	664398	Statement	","	2937:51:92293:92293	664344	25	True				
ANR	664399	Statement	fcn	2938:3:92298:92300	664344	26	True				
ANR	664400	Statement	->	2938:6:92301:92302	664344	27	True				
ANR	664401	Statement	addr	2938:8:92303:92306	664344	28	True				
ANR	664402	Statement	","	2938:12:92307:92307	664344	29	True				
ANR	664403	Statement	name	2938:14:92309:92312	664344	30	True				
ANR	664404	Statement	","	2938:18:92313:92313	664344	31	True				
ANR	664405	Statement	fcn	2939:3:92349:92351	664344	32	True				
ANR	664406	Statement	->	2939:6:92352:92353	664344	33	True				
ANR	664407	Statement	type	2939:8:92354:92357	664344	34	True				
ANR	664408	Statement	==	2939:13:92359:92360	664344	35	True				
ANR	664409	Statement	R_ANAL_FCN_TYPE_LOC	2939:16:92362:92380	664344	36	True				
ANR	664410	Statement	?	2939:35:92381:92381	664344	37	True				
ANR	664411	Label	'l' :	2939:36:92382:92385	664344	38	True				
ANR	664412	Statement	fcn	2940:3:92390:92392	664344	39	True				
ANR	664413	Statement	->	2940:6:92393:92394	664344	40	True				
ANR	664414	Statement	type	2940:8:92395:92398	664344	41	True				
ANR	664415	Statement	==	2940:13:92400:92401	664344	42	True				
ANR	664416	Statement	R_ANAL_FCN_TYPE_SYM	2940:16:92403:92421	664344	43	True				
ANR	664417	Statement	?	2940:35:92422:92422	664344	44	True				
ANR	664418	Label	's' :	2940:36:92423:92426	664344	45	True				
ANR	664419	Statement	fcn	2941:3:92431:92433	664344	46	True				
ANR	664420	Statement	->	2941:6:92434:92435	664344	47	True				
ANR	664421	Statement	type	2941:8:92436:92439	664344	48	True				
ANR	664422	Statement	==	2941:13:92441:92442	664344	49	True				
ANR	664423	Statement	R_ANAL_FCN_TYPE_IMP	2941:16:92444:92462	664344	50	True				
ANR	664424	Statement	?	2941:35:92463:92463	664344	51	True				
ANR	664425	Label	'i' :	2941:36:92464:92467	664344	52	True				
ANR	664426	Statement	'f'	2941:40:92468:92470	664344	53	True				
ANR	664427	Statement	","	2941:43:92471:92471	664344	54	True				
ANR	664428	Statement	fcn	2942:3:92476:92478	664344	55	True				
ANR	664429	Statement	->	2942:6:92479:92480	664344	56	True				
ANR	664430	Statement	diff	2942:8:92481:92484	664344	57	True				
ANR	664431	Statement	->	2942:12:92485:92486	664344	58	True				
ANR	664432	Statement	type	2942:14:92487:92490	664344	59	True				
ANR	664433	Statement	==	2942:19:92492:92493	664344	60	True				
ANR	664434	Statement	R_ANAL_DIFF_TYPE_MATCH	2942:22:92495:92516	664344	61	True				
ANR	664435	Statement	?	2942:44:92517:92517	664344	62	True				
ANR	664436	Label	'm' :	2942:45:92518:92521	664344	63	True				
ANR	664437	Statement	fcn	2943:3:92526:92528	664344	64	True				
ANR	664438	Statement	->	2943:6:92529:92530	664344	65	True				
ANR	664439	Statement	diff	2943:8:92531:92534	664344	66	True				
ANR	664440	Statement	->	2943:12:92535:92536	664344	67	True				
ANR	664441	Statement	type	2943:14:92537:92540	664344	68	True				
ANR	664442	Statement	==	2943:19:92542:92543	664344	69	True				
ANR	664443	Statement	R_ANAL_DIFF_TYPE_UNMATCH	2943:22:92545:92568	664344	70	True				
ANR	664444	Statement	?	2943:46:92569:92569	664344	71	True				
ANR	664445	Label	'u' :	2943:47:92570:92573	664344	72	True				
ANR	664446	Statement	'n'	2943:51:92574:92576	664344	73	True				
ANR	664447	Statement	)	2943:54:92577:92577	664344	74	True				
ANR	664448	ExpressionStatement		2943:55:92578:92578	664344	75	True				
ANR	664449	ExpressionStatement	fcn_list_bbs ( fcn )	2945:1:92669:92687	664344	76	True				
ANR	664450	CallExpression	fcn_list_bbs ( fcn )		664344	0					
ANR	664451	Callee	fcn_list_bbs		664344	0					
ANR	664452	Identifier	fcn_list_bbs		664344	0					
ANR	664453	ArgumentList	fcn		664344	1					
ANR	664454	Argument	fcn		664344	0					
ANR	664455	Identifier	fcn		664344	0					
ANR	664456	IfStatement	if ( fcn -> bits != 0 )		664344	77					
ANR	664457	Condition	fcn -> bits != 0	2946:5:92694:92707	664344	0	True				
ANR	664458	EqualityExpression	fcn -> bits != 0		664344	0		!=			
ANR	664459	PtrMemberAccess	fcn -> bits		664344	0					
ANR	664460	Identifier	fcn		664344	0					
ANR	664461	Identifier	bits		664344	1					
ANR	664462	PrimaryExpression	0		664344	1					
ANR	664463	CompoundStatement		14:21:663:663	664344	1					
ANR	664464	Statement	r_cons_printf	2947:2:92714:92726	664344	0	True				
ANR	664465	Statement	(	2947:16:92728:92728	664344	1	True				
ANR	664466	Statement	"""afB %d @ 0x%08"""	2947:17:92729:92744	664344	2	True				
ANR	664467	Statement	PFMT64x	2947:33:92745:92751	664344	3	True				
ANR	664468	Statement	"""\\n"""	2947:40:92752:92755	664344	4	True				
ANR	664469	Statement	","	2947:44:92756:92756	664344	5	True				
ANR	664470	Statement	fcn	2947:46:92758:92760	664344	6	True				
ANR	664471	Statement	->	2947:49:92761:92762	664344	7	True				
ANR	664472	Statement	bits	2947:51:92763:92766	664344	8	True				
ANR	664473	Statement	","	2947:55:92767:92767	664344	9	True				
ANR	664474	Statement	fcn	2947:57:92769:92771	664344	10	True				
ANR	664475	Statement	->	2947:60:92772:92773	664344	11	True				
ANR	664476	Statement	addr	2947:62:92774:92777	664344	12	True				
ANR	664477	Statement	)	2947:66:92778:92778	664344	13	True				
ANR	664478	ExpressionStatement		2947:67:92779:92779	664344	14	True				
ANR	664479	Statement	r_cons_printf	2950:1:92823:92835	664344	78	True				
ANR	664480	Statement	(	2950:15:92837:92837	664344	79	True				
ANR	664481	Statement	"""afc %s @ 0x%08"""	2950:16:92838:92853	664344	80	True				
ANR	664482	Statement	PFMT64x	2950:32:92854:92860	664344	81	True				
ANR	664483	Statement	"""\\n"""	2950:39:92861:92864	664344	82	True				
ANR	664484	Statement	","	2950:43:92865:92865	664344	83	True				
ANR	664485	Statement	fcn	2950:45:92867:92869	664344	84	True				
ANR	664486	Statement	->	2950:48:92870:92871	664344	85	True				
ANR	664487	Statement	cc	2950:50:92872:92873	664344	86	True				
ANR	664488	Statement	?	2950:52:92874:92874	664344	87	True				
ANR	664489	Statement	fcn	2950:53:92875:92877	664344	88	True				
ANR	664490	Statement	->	2950:56:92878:92879	664344	89	True				
ANR	664491	Label	cc :	2950:58:92880:92882	664344	90	True				
ANR	664492	Identifier	cc		664344	0					
ANR	664493	Statement	defaultCC	2950:62:92884:92892	664344	91	True				
ANR	664494	Statement	","	2950:71:92893:92893	664344	92	True				
ANR	664495	Statement	fcn	2950:73:92895:92897	664344	93	True				
ANR	664496	Statement	->	2950:76:92898:92899	664344	94	True				
ANR	664497	Statement	addr	2950:78:92900:92903	664344	95	True				
ANR	664498	Statement	)	2950:82:92904:92904	664344	96	True				
ANR	664499	ExpressionStatement		2950:83:92905:92905	664344	97	True				
ANR	664500	IfStatement	if ( fcn -> folded )		664344	98					
ANR	664501	Condition	fcn -> folded	2951:5:92912:92922	664344	0	True				
ANR	664502	PtrMemberAccess	fcn -> folded		664344	0					
ANR	664503	Identifier	fcn		664344	0					
ANR	664504	Identifier	folded		664344	1					
ANR	664505	CompoundStatement		19:18:878:878	664344	1					
ANR	664506	Statement	r_cons_printf	2952:2:92929:92941	664344	0	True				
ANR	664507	Statement	(	2952:16:92943:92943	664344	1	True				
ANR	664508	Statement	"""afF @ 0x%08"""	2952:17:92944:92956	664344	2	True				
ANR	664509	Statement	PFMT64x	2952:30:92957:92963	664344	3	True				
ANR	664510	Statement	"""\\n"""	2952:37:92964:92967	664344	4	True				
ANR	664511	Statement	","	2952:41:92968:92968	664344	5	True				
ANR	664512	Statement	fcn	2952:43:92970:92972	664344	6	True				
ANR	664513	Statement	->	2952:46:92973:92974	664344	7	True				
ANR	664514	Statement	addr	2952:48:92975:92978	664344	8	True				
ANR	664515	Statement	)	2952:52:92979:92979	664344	9	True				
ANR	664516	ExpressionStatement		2952:53:92980:92980	664344	10	True				
ANR	664517	IfStatement	if ( fcn )		664344	99					
ANR	664518	Condition	fcn	2954:5:92990:92992	664344	0	True				
ANR	664519	Identifier	fcn		664344	0					
ANR	664520	CompoundStatement		22:10:948:948	664344	1					
ANR	664521	Statement	r_core_cmdf	2956:2:93037:93047	664344	0	True				
ANR	664522	Statement	(	2956:14:93049:93049	664344	1	True				
ANR	664523	Statement	core	2956:15:93050:93053	664344	2	True				
ANR	664524	Statement	","	2956:19:93054:93054	664344	3	True				
ANR	664525	Statement	"""afvb* @ 0x%"""	2956:21:93056:93068	664344	4	True				
ANR	664526	Statement	PFMT64x	2956:34:93069:93075	664344	5	True				
ANR	664527	Statement	"""\\n"""	2956:41:93076:93079	664344	6	True				
ANR	664528	Statement	","	2956:45:93080:93080	664344	7	True				
ANR	664529	Statement	fcn	2956:47:93082:93084	664344	8	True				
ANR	664530	Statement	->	2956:50:93085:93086	664344	9	True				
ANR	664531	Statement	addr	2956:52:93087:93090	664344	10	True				
ANR	664532	Statement	)	2956:56:93091:93091	664344	11	True				
ANR	664533	ExpressionStatement		2956:57:93092:93092	664344	12	True				
ANR	664534	Statement	r_core_cmdf	2957:2:93096:93106	664344	13	True				
ANR	664535	Statement	(	2957:14:93108:93108	664344	14	True				
ANR	664536	Statement	core	2957:15:93109:93112	664344	15	True				
ANR	664537	Statement	","	2957:19:93113:93113	664344	16	True				
ANR	664538	Statement	"""afvr* @ 0x%"""	2957:21:93115:93127	664344	17	True				
ANR	664539	Statement	PFMT64x	2957:34:93128:93134	664344	18	True				
ANR	664540	Statement	"""\\n"""	2957:41:93135:93138	664344	19	True				
ANR	664541	Statement	","	2957:45:93139:93139	664344	20	True				
ANR	664542	Statement	fcn	2957:47:93141:93143	664344	21	True				
ANR	664543	Statement	->	2957:50:93144:93145	664344	22	True				
ANR	664544	Statement	addr	2957:52:93146:93149	664344	23	True				
ANR	664545	Statement	)	2957:56:93150:93150	664344	24	True				
ANR	664546	ExpressionStatement		2957:57:93151:93151	664344	25	True				
ANR	664547	Statement	r_core_cmdf	2958:2:93155:93165	664344	26	True				
ANR	664548	Statement	(	2958:14:93167:93167	664344	27	True				
ANR	664549	Statement	core	2958:15:93168:93171	664344	28	True				
ANR	664550	Statement	","	2958:19:93172:93172	664344	29	True				
ANR	664551	Statement	"""afvs* @ 0x%"""	2958:21:93174:93186	664344	30	True				
ANR	664552	Statement	PFMT64x	2958:34:93187:93193	664344	31	True				
ANR	664553	Statement	"""\\n"""	2958:41:93194:93197	664344	32	True				
ANR	664554	Statement	","	2958:45:93198:93198	664344	33	True				
ANR	664555	Statement	fcn	2958:47:93200:93202	664344	34	True				
ANR	664556	Statement	->	2958:50:93203:93204	664344	35	True				
ANR	664557	Statement	addr	2958:52:93205:93208	664344	36	True				
ANR	664558	Statement	)	2958:56:93209:93209	664344	37	True				
ANR	664559	ExpressionStatement		2958:57:93210:93210	664344	38	True				
ANR	664560	IdentifierDeclStatement	RListIter * refiter ;	2961:1:93239:93257	664344	100	True				
ANR	664561	IdentifierDecl	* refiter		664344	0					
ANR	664562	IdentifierDeclType	RListIter *		664344	0					
ANR	664563	Identifier	refiter		664344	1					
ANR	664564	IdentifierDeclStatement	RAnalRef * refi ;	2962:1:93260:93274	664344	101	True				
ANR	664565	IdentifierDecl	* refi		664344	0					
ANR	664566	IdentifierDeclType	RAnalRef *		664344	0					
ANR	664567	Identifier	refi		664344	1					
ANR	664568	IdentifierDeclStatement	"RList * refs = r_anal_fcn_get_refs ( core -> anal , fcn ) ;"	2963:1:93277:93328	664344	102	True				
ANR	664569	IdentifierDecl	"* refs = r_anal_fcn_get_refs ( core -> anal , fcn )"		664344	0					
ANR	664570	IdentifierDeclType	RList *		664344	0					
ANR	664571	Identifier	refs		664344	1					
ANR	664572	AssignmentExpression	"* refs = r_anal_fcn_get_refs ( core -> anal , fcn )"		664344	2		=			
ANR	664573	Identifier	refs		664344	0					
ANR	664574	CallExpression	"r_anal_fcn_get_refs ( core -> anal , fcn )"		664344	1					
ANR	664575	Callee	r_anal_fcn_get_refs		664344	0					
ANR	664576	Identifier	r_anal_fcn_get_refs		664344	0					
ANR	664577	ArgumentList	core -> anal		664344	1					
ANR	664578	Argument	core -> anal		664344	0					
ANR	664579	PtrMemberAccess	core -> anal		664344	0					
ANR	664580	Identifier	core		664344	0					
ANR	664581	Identifier	anal		664344	1					
ANR	664582	Argument	fcn		664344	1					
ANR	664583	Identifier	fcn		664344	0					
ANR	664584	Statement	r_list_foreach	2964:1:93331:93344	664344	103	True				
ANR	664585	Statement	(	2964:16:93346:93346	664344	104	True				
ANR	664586	Statement	refs	2964:17:93347:93350	664344	105	True				
ANR	664587	Statement	","	2964:21:93351:93351	664344	106	True				
ANR	664588	Statement	refiter	2964:23:93353:93359	664344	107	True				
ANR	664589	Statement	","	2964:30:93360:93360	664344	108	True				
ANR	664590	Statement	refi	2964:32:93362:93365	664344	109	True				
ANR	664591	Statement	)	2964:36:93366:93366	664344	110	True				
ANR	664592	CompoundStatement		32:38:1321:1321	664344	111					
ANR	664593	SwitchStatement	switch ( refi -> type )		664344	0					
ANR	664594	Condition	refi -> type	2965:10:93380:93389	664344	0	True				
ANR	664595	PtrMemberAccess	refi -> type		664344	0					
ANR	664596	Identifier	refi		664344	0					
ANR	664597	Identifier	type		664344	1					
ANR	664598	CompoundStatement		33:22:1345:1345	664344	1					
ANR	664599	Label	case R_ANAL_REF_TYPE_CALL :	2966:2:93396:93421	664344	0	True				
ANR	664600	Identifier	R_ANAL_REF_TYPE_CALL		664344	0					
ANR	664601	Statement	r_cons_printf	2967:3:93426:93438	664344	1	True				
ANR	664602	Statement	(	2967:17:93440:93440	664344	2	True				
ANR	664603	Statement	"""axC 0x%"""	2967:18:93441:93449	664344	3	True				
ANR	664604	Statement	PFMT64x	2967:27:93450:93456	664344	4	True				
ANR	664605	Statement	""" 0x%"""	2967:34:93457:93462	664344	5	True				
ANR	664606	Statement	PFMT64x	2967:40:93463:93469	664344	6	True				
ANR	664607	Statement	"""\\n"""	2967:47:93470:93473	664344	7	True				
ANR	664608	Statement	","	2967:51:93474:93474	664344	8	True				
ANR	664609	Statement	refi	2967:53:93476:93479	664344	9	True				
ANR	664610	Statement	->	2967:57:93480:93481	664344	10	True				
ANR	664611	Statement	addr	2967:59:93482:93485	664344	11	True				
ANR	664612	Statement	","	2967:63:93486:93486	664344	12	True				
ANR	664613	Statement	refi	2967:65:93488:93491	664344	13	True				
ANR	664614	Statement	->	2967:69:93492:93493	664344	14	True				
ANR	664615	Statement	at	2967:71:93494:93495	664344	15	True				
ANR	664616	Statement	)	2967:73:93496:93496	664344	16	True				
ANR	664617	ExpressionStatement		2967:74:93497:93497	664344	17	True				
ANR	664618	BreakStatement	break ;	2968:3:93502:93507	664344	18	True				
ANR	664619	Label	case R_ANAL_REF_TYPE_DATA :	2969:2:93511:93536	664344	19	True				
ANR	664620	Identifier	R_ANAL_REF_TYPE_DATA		664344	0					
ANR	664621	Statement	r_cons_printf	2970:3:93541:93553	664344	20	True				
ANR	664622	Statement	(	2970:17:93555:93555	664344	21	True				
ANR	664623	Statement	"""axd 0x%"""	2970:18:93556:93564	664344	22	True				
ANR	664624	Statement	PFMT64x	2970:27:93565:93571	664344	23	True				
ANR	664625	Statement	""" 0x%"""	2970:34:93572:93577	664344	24	True				
ANR	664626	Statement	PFMT64x	2970:40:93578:93584	664344	25	True				
ANR	664627	Statement	"""\\n"""	2970:47:93585:93588	664344	26	True				
ANR	664628	Statement	","	2970:51:93589:93589	664344	27	True				
ANR	664629	Statement	refi	2970:53:93591:93594	664344	28	True				
ANR	664630	Statement	->	2970:57:93595:93596	664344	29	True				
ANR	664631	Statement	addr	2970:59:93597:93600	664344	30	True				
ANR	664632	Statement	","	2970:63:93601:93601	664344	31	True				
ANR	664633	Statement	refi	2970:65:93603:93606	664344	32	True				
ANR	664634	Statement	->	2970:69:93607:93608	664344	33	True				
ANR	664635	Statement	at	2970:71:93609:93610	664344	34	True				
ANR	664636	Statement	)	2970:73:93611:93611	664344	35	True				
ANR	664637	ExpressionStatement		2970:74:93612:93612	664344	36	True				
ANR	664638	BreakStatement	break ;	2971:3:93617:93622	664344	37	True				
ANR	664639	Label	case R_ANAL_REF_TYPE_CODE :	2972:2:93626:93651	664344	38	True				
ANR	664640	Identifier	R_ANAL_REF_TYPE_CODE		664344	0					
ANR	664641	Statement	r_cons_printf	2973:3:93656:93668	664344	39	True				
ANR	664642	Statement	(	2973:17:93670:93670	664344	40	True				
ANR	664643	Statement	"""axc 0x%"""	2973:18:93671:93679	664344	41	True				
ANR	664644	Statement	PFMT64x	2973:27:93680:93686	664344	42	True				
ANR	664645	Statement	""" 0x%"""	2973:34:93687:93692	664344	43	True				
ANR	664646	Statement	PFMT64x	2973:40:93693:93699	664344	44	True				
ANR	664647	Statement	"""\\n"""	2973:47:93700:93703	664344	45	True				
ANR	664648	Statement	","	2973:51:93704:93704	664344	46	True				
ANR	664649	Statement	refi	2973:53:93706:93709	664344	47	True				
ANR	664650	Statement	->	2973:57:93710:93711	664344	48	True				
ANR	664651	Statement	addr	2973:59:93712:93715	664344	49	True				
ANR	664652	Statement	","	2973:63:93716:93716	664344	50	True				
ANR	664653	Statement	refi	2973:65:93718:93721	664344	51	True				
ANR	664654	Statement	->	2973:69:93722:93723	664344	52	True				
ANR	664655	Statement	at	2973:71:93724:93725	664344	53	True				
ANR	664656	Statement	)	2973:73:93726:93726	664344	54	True				
ANR	664657	ExpressionStatement		2973:74:93727:93727	664344	55	True				
ANR	664658	BreakStatement	break ;	2974:3:93732:93737	664344	56	True				
ANR	664659	Label	case R_ANAL_REF_TYPE_STRING :	2975:2:93741:93768	664344	57	True				
ANR	664660	Identifier	R_ANAL_REF_TYPE_STRING		664344	0					
ANR	664661	Statement	r_cons_printf	2976:3:93773:93785	664344	58	True				
ANR	664662	Statement	(	2976:17:93787:93787	664344	59	True				
ANR	664663	Statement	"""axs 0x%"""	2976:18:93788:93796	664344	60	True				
ANR	664664	Statement	PFMT64x	2976:27:93797:93803	664344	61	True				
ANR	664665	Statement	""" 0x%"""	2976:34:93804:93809	664344	62	True				
ANR	664666	Statement	PFMT64x	2976:40:93810:93816	664344	63	True				
ANR	664667	Statement	"""\\n"""	2976:47:93817:93820	664344	64	True				
ANR	664668	Statement	","	2976:51:93821:93821	664344	65	True				
ANR	664669	Statement	refi	2976:53:93823:93826	664344	66	True				
ANR	664670	Statement	->	2976:57:93827:93828	664344	67	True				
ANR	664671	Statement	addr	2976:59:93829:93832	664344	68	True				
ANR	664672	Statement	","	2976:63:93833:93833	664344	69	True				
ANR	664673	Statement	refi	2976:65:93835:93838	664344	70	True				
ANR	664674	Statement	->	2976:69:93839:93840	664344	71	True				
ANR	664675	Statement	at	2976:71:93841:93842	664344	72	True				
ANR	664676	Statement	)	2976:73:93843:93843	664344	73	True				
ANR	664677	ExpressionStatement		2976:74:93844:93844	664344	74	True				
ANR	664678	BreakStatement	break ;	2977:3:93849:93854	664344	75	True				
ANR	664679	Label	case R_ANAL_REF_TYPE_NULL :	2978:2:93858:93883	664344	76	True				
ANR	664680	Identifier	R_ANAL_REF_TYPE_NULL		664344	0					
ANR	664681	Label	default :	2979:2:93887:93894	664344	77	True				
ANR	664682	Identifier	default		664344	0					
ANR	664683	Statement	r_cons_printf	2980:3:93899:93911	664344	78	True				
ANR	664684	Statement	(	2980:17:93913:93913	664344	79	True				
ANR	664685	Statement	"""ax 0x%"""	2980:18:93914:93921	664344	80	True				
ANR	664686	Statement	PFMT64x	2980:26:93922:93928	664344	81	True				
ANR	664687	Statement	""" 0x%"""	2980:33:93929:93934	664344	82	True				
ANR	664688	Statement	PFMT64x	2980:39:93935:93941	664344	83	True				
ANR	664689	Statement	"""\\n"""	2980:46:93942:93945	664344	84	True				
ANR	664690	Statement	","	2980:50:93946:93946	664344	85	True				
ANR	664691	Statement	refi	2980:52:93948:93951	664344	86	True				
ANR	664692	Statement	->	2980:56:93952:93953	664344	87	True				
ANR	664693	Statement	addr	2980:58:93954:93957	664344	88	True				
ANR	664694	Statement	","	2980:62:93958:93958	664344	89	True				
ANR	664695	Statement	refi	2980:64:93960:93963	664344	90	True				
ANR	664696	Statement	->	2980:68:93964:93965	664344	91	True				
ANR	664697	Statement	at	2980:70:93966:93967	664344	92	True				
ANR	664698	Statement	)	2980:72:93968:93968	664344	93	True				
ANR	664699	ExpressionStatement		2980:73:93969:93969	664344	94	True				
ANR	664700	BreakStatement	break ;	2981:3:93974:93979	664344	95	True				
ANR	664701	ExpressionStatement	r_list_free ( refs )	2984:1:93989:94007	664344	112	True				
ANR	664702	CallExpression	r_list_free ( refs )		664344	0					
ANR	664703	Callee	r_list_free		664344	0					
ANR	664704	Identifier	r_list_free		664344	0					
ANR	664705	ArgumentList	refs		664344	1					
ANR	664706	Argument	refs		664344	0					
ANR	664707	Identifier	refs		664344	0					
ANR	664708	Statement	r_cons_printf	2986:1:94043:94055	664344	113	True				
ANR	664709	Statement	(	2986:15:94057:94057	664344	114	True				
ANR	664710	Statement	"""afS %"""	2986:16:94058:94064	664344	115	True				
ANR	664711	Statement	PFMT64d	2986:23:94065:94071	664344	116	True				
ANR	664712	Statement	""" @ 0x%"""	2986:30:94072:94079	664344	117	True				
ANR	664713	Statement	PFMT64x	2986:38:94080:94086	664344	118	True				
ANR	664714	Statement	"""\\n"""	2986:45:94087:94090	664344	119	True				
ANR	664715	Statement	","	2986:49:94091:94091	664344	120	True				
ANR	664716	Statement	fcn	2986:51:94093:94095	664344	121	True				
ANR	664717	Statement	->	2986:54:94096:94097	664344	122	True				
ANR	664718	Statement	maxstack	2986:56:94098:94105	664344	123	True				
ANR	664719	Statement	","	2986:64:94106:94106	664344	124	True				
ANR	664720	Statement	fcn	2986:66:94108:94110	664344	125	True				
ANR	664721	Statement	->	2986:69:94111:94112	664344	126	True				
ANR	664722	Statement	addr	2986:71:94113:94116	664344	127	True				
ANR	664723	Statement	)	2986:75:94117:94117	664344	128	True				
ANR	664724	ExpressionStatement		2986:76:94118:94118	664344	129	True				
ANR	664725	ExpressionStatement	free ( name )	2987:1:94121:94132	664344	130	True				
ANR	664726	CallExpression	free ( name )		664344	0					
ANR	664727	Callee	free		664344	0					
ANR	664728	Identifier	free		664344	0					
ANR	664729	ArgumentList	name		664344	1					
ANR	664730	Argument	name		664344	0					
ANR	664731	Identifier	name		664344	0					
ANR	664732	ReturnStatement	return 0 ;	2988:1:94135:94143	664344	131	True				
ANR	664733	PrimaryExpression	0		664344	0					
ANR	664734	ReturnType	static int		664344	1					
ANR	664735	Identifier	fcn_print_detail		664344	2					
ANR	664736	ParameterList	"RCore * core , RAnalFunction * fcn"		664344	3					
ANR	664737	Parameter	RCore * core	2933:28:92013:92023	664344	0	True				
ANR	664738	ParameterType	RCore *		664344	0					
ANR	664739	Identifier	core		664344	1					
ANR	664740	Parameter	RAnalFunction * fcn	2933:41:92026:92043	664344	1	True				
ANR	664741	ParameterType	RAnalFunction *		664344	0					
ANR	664742	Identifier	fcn		664344	1					
ANR	664743	CFGEntryNode	ENTRY		664344		True				
ANR	664744	CFGExitNode	EXIT		664344		True				
ANR	664745	Symbol	refi		664344						
ANR	664746	Symbol	* fcn		664344						
ANR	664747	Symbol	refiter		664344						
ANR	664748	Symbol	* core		664344						
ANR	664749	Symbol	core -> anal		664344						
ANR	664750	Symbol	fcn -> bits		664344						
ANR	664751	Symbol	fcn -> folded		664344						
ANR	664752	Symbol	r_anal_fcn_get_refs		664344						
ANR	664753	Symbol	* refi		664344						
ANR	664754	Symbol	fcn		664344						
ANR	664755	Symbol	r_anal_cc_default		664344						
ANR	664756	Symbol	core		664344						
ANR	664757	Symbol	refi -> type		664344						
ANR	664758	Symbol	r_core_anal_fcn_name		664344						
ANR	664759	Symbol	refs		664344						
ANR	664760	Symbol	defaultCC		664344						
ANR	664761	Symbol	name		664344						
ANR	664762	Function	is_fcn_traced	2991:0:94148:94516							
ANR	664763	FunctionDef	"is_fcn_traced (RDebugTrace * traced , RAnalFunction * fcn)"		664762	0					
ANR	664764	CompoundStatement		2991:67:94215:94516	664762	0					
ANR	664765	IdentifierDeclStatement	int tag = traced -> tag ;	2992:1:94218:94239	664762	0	True				
ANR	664766	IdentifierDecl	tag = traced -> tag		664762	0					
ANR	664767	IdentifierDeclType	int		664762	0					
ANR	664768	Identifier	tag		664762	1					
ANR	664769	AssignmentExpression	tag = traced -> tag		664762	2		=			
ANR	664770	Identifier	tag		664762	0					
ANR	664771	PtrMemberAccess	traced -> tag		664762	1					
ANR	664772	Identifier	traced		664762	0					
ANR	664773	Identifier	tag		664762	1					
ANR	664774	IdentifierDeclStatement	RListIter * iter ;	2993:1:94242:94257	664762	1	True				
ANR	664775	IdentifierDecl	* iter		664762	0					
ANR	664776	IdentifierDeclType	RListIter *		664762	0					
ANR	664777	Identifier	iter		664762	1					
ANR	664778	IdentifierDeclStatement	RDebugTracepoint * trace ;	2994:1:94260:94283	664762	2	True				
ANR	664779	IdentifierDecl	* trace		664762	0					
ANR	664780	IdentifierDeclType	RDebugTracepoint *		664762	0					
ANR	664781	Identifier	trace		664762	1					
ANR	664782	Statement	r_list_foreach	2996:1:94287:94300	664762	3	True				
ANR	664783	Statement	(	2996:16:94302:94302	664762	4	True				
ANR	664784	Statement	traced	2996:17:94303:94308	664762	5	True				
ANR	664785	Statement	->	2996:23:94309:94310	664762	6	True				
ANR	664786	Statement	traces	2996:25:94311:94316	664762	7	True				
ANR	664787	Statement	","	2996:31:94317:94317	664762	8	True				
ANR	664788	Statement	iter	2996:33:94319:94322	664762	9	True				
ANR	664789	Statement	","	2996:37:94323:94323	664762	10	True				
ANR	664790	Statement	trace	2996:39:94325:94329	664762	11	True				
ANR	664791	Statement	)	2996:44:94330:94330	664762	12	True				
ANR	664792	CompoundStatement		6:46:116:116	664762	13					
ANR	664793	IfStatement	if ( ! trace -> tag || ( tag & trace -> tag ) )		664762	0					
ANR	664794	Condition	! trace -> tag || ( tag & trace -> tag )	2997:6:94340:94372	664762	0	True				
ANR	664795	OrExpression	! trace -> tag || ( tag & trace -> tag )		664762	0		||			
ANR	664796	UnaryOperationExpression	! trace -> tag		664762	0					
ANR	664797	UnaryOperator	!		664762	0					
ANR	664798	PtrMemberAccess	trace -> tag		664762	1					
ANR	664799	Identifier	trace		664762	0					
ANR	664800	Identifier	tag		664762	1					
ANR	664801	BitAndExpression	tag & trace -> tag		664762	1		&			
ANR	664802	Identifier	tag		664762	0					
ANR	664803	PtrMemberAccess	trace -> tag		664762	1					
ANR	664804	Identifier	trace		664762	0					
ANR	664805	Identifier	tag		664762	1					
ANR	664806	CompoundStatement		7:41:159:159	664762	1					
ANR	664807	IfStatement	"if ( r_anal_fcn_in ( fcn , trace -> addr ) )"		664762	0					
ANR	664808	Condition	"r_anal_fcn_in ( fcn , trace -> addr )"	2998:7:94384:94415	664762	0	True				
ANR	664809	CallExpression	"r_anal_fcn_in ( fcn , trace -> addr )"		664762	0					
ANR	664810	Callee	r_anal_fcn_in		664762	0					
ANR	664811	Identifier	r_anal_fcn_in		664762	0					
ANR	664812	ArgumentList	fcn		664762	1					
ANR	664813	Argument	fcn		664762	0					
ANR	664814	Identifier	fcn		664762	0					
ANR	664815	Argument	trace -> addr		664762	1					
ANR	664816	PtrMemberAccess	trace -> addr		664762	0					
ANR	664817	Identifier	trace		664762	0					
ANR	664818	Identifier	addr		664762	1					
ANR	664819	CompoundStatement		8:41:202:202	664762	1					
ANR	664820	ExpressionStatement	"r_cons_printf ( ""\\ntraced: %d\\n"" , trace -> times )"	2999:4:94424:94470	664762	0	True				
ANR	664821	CallExpression	"r_cons_printf ( ""\\ntraced: %d\\n"" , trace -> times )"		664762	0					
ANR	664822	Callee	r_cons_printf		664762	0					
ANR	664823	Identifier	r_cons_printf		664762	0					
ANR	664824	ArgumentList	"""\\ntraced: %d\\n"""		664762	1					
ANR	664825	Argument	"""\\ntraced: %d\\n"""		664762	0					
ANR	664826	PrimaryExpression	"""\\ntraced: %d\\n"""		664762	0					
ANR	664827	Argument	trace -> times		664762	1					
ANR	664828	PtrMemberAccess	trace -> times		664762	0					
ANR	664829	Identifier	trace		664762	0					
ANR	664830	Identifier	times		664762	1					
ANR	664831	ReturnStatement	return true ;	3000:4:94476:94487	664762	1	True				
ANR	664832	Identifier	true		664762	0					
ANR	664833	ReturnStatement	return false ;	3004:1:94502:94514	664762	14	True				
ANR	664834	Identifier	false		664762	0					
ANR	664835	ReturnType	static bool		664762	1					
ANR	664836	Identifier	is_fcn_traced		664762	2					
ANR	664837	ParameterList	"RDebugTrace * traced , RAnalFunction * fcn"		664762	3					
ANR	664838	Parameter	RDebugTrace * traced	2991:26:94174:94192	664762	0	True				
ANR	664839	ParameterType	RDebugTrace *		664762	0					
ANR	664840	Identifier	traced		664762	1					
ANR	664841	Parameter	RAnalFunction * fcn	2991:47:94195:94212	664762	1	True				
ANR	664842	ParameterType	RAnalFunction *		664762	0					
ANR	664843	Identifier	fcn		664762	1					
ANR	664844	CFGEntryNode	ENTRY		664762		True				
ANR	664845	CFGExitNode	EXIT		664762		True				
ANR	664846	Symbol	r_anal_fcn_in		664762						
ANR	664847	Symbol	traced -> tag		664762						
ANR	664848	Symbol	trace -> tag		664762						
ANR	664849	Symbol	trace -> addr		664762						
ANR	664850	Symbol	false		664762						
ANR	664851	Symbol	iter		664762						
ANR	664852	Symbol	* traced		664762						
ANR	664853	Symbol	fcn		664762						
ANR	664854	Symbol	trace		664762						
ANR	664855	Symbol	trace -> times		664762						
ANR	664856	Symbol	* trace		664762						
ANR	664857	Symbol	true		664762						
ANR	664858	Symbol	traced		664762						
ANR	664859	Symbol	tag		664762						
ANR	664860	Function	fcn_print_legacy	3007:0:94519:98102							
ANR	664861	FunctionDef	"fcn_print_legacy (RCore * core , RAnalFunction * fcn)"		664860	0					
ANR	664862	CompoundStatement		3007:61:94580:98102	664860	0					
ANR	664863	IdentifierDeclStatement	RListIter * iter ;	3008:1:94583:94598	664860	0	True				
ANR	664864	IdentifierDecl	* iter		664860	0					
ANR	664865	IdentifierDeclType	RListIter *		664860	0					
ANR	664866	Identifier	iter		664860	1					
ANR	664867	IdentifierDeclStatement	RAnalRef * refi ;	3009:1:94601:94615	664860	1	True				
ANR	664868	IdentifierDecl	* refi		664860	0					
ANR	664869	IdentifierDeclType	RAnalRef *		664860	0					
ANR	664870	Identifier	refi		664860	1					
ANR	664871	IdentifierDeclStatement	"RList * refs , * xrefs ;"	3010:1:94618:94637	664860	2	True				
ANR	664872	IdentifierDecl	* refs		664860	0					
ANR	664873	IdentifierDeclType	RList *		664860	0					
ANR	664874	Identifier	refs		664860	1					
ANR	664875	IdentifierDecl	* xrefs		664860	1					
ANR	664876	IdentifierDeclType	RList *		664860	0					
ANR	664877	Identifier	xrefs		664860	1					
ANR	664878	IdentifierDeclStatement	int ebbs = 0 ;	3011:1:94640:94652	664860	3	True				
ANR	664879	IdentifierDecl	ebbs = 0		664860	0					
ANR	664880	IdentifierDeclType	int		664860	0					
ANR	664881	Identifier	ebbs		664860	1					
ANR	664882	AssignmentExpression	ebbs = 0		664860	2		=			
ANR	664883	Identifier	ebbs		664860	0					
ANR	664884	PrimaryExpression	0		664860	1					
ANR	664885	IdentifierDeclStatement	"char * name = r_core_anal_fcn_name ( core , fcn ) ;"	3012:1:94655:94700	664860	4	True				
ANR	664886	IdentifierDecl	"* name = r_core_anal_fcn_name ( core , fcn )"		664860	0					
ANR	664887	IdentifierDeclType	char *		664860	0					
ANR	664888	Identifier	name		664860	1					
ANR	664889	AssignmentExpression	"* name = r_core_anal_fcn_name ( core , fcn )"		664860	2		=			
ANR	664890	Identifier	name		664860	0					
ANR	664891	CallExpression	"r_core_anal_fcn_name ( core , fcn )"		664860	1					
ANR	664892	Callee	r_core_anal_fcn_name		664860	0					
ANR	664893	Identifier	r_core_anal_fcn_name		664860	0					
ANR	664894	ArgumentList	core		664860	1					
ANR	664895	Argument	core		664860	0					
ANR	664896	Identifier	core		664860	0					
ANR	664897	Argument	fcn		664860	1					
ANR	664898	Identifier	fcn		664860	0					
ANR	664899	Statement	r_cons_printf	3014:1:94704:94716	664860	5	True				
ANR	664900	Statement	(	3014:15:94718:94718	664860	6	True				
ANR	664901	Statement	"""#\\noffset: 0x%08"""	3014:16:94719:94736	664860	7	True				
ANR	664902	Statement	PFMT64x	3014:34:94737:94743	664860	8	True				
ANR	664903	Statement	"""\\nname: %s\\nsize: %"""	3014:41:94744:94764	664860	9	True				
ANR	664904	Statement	PFMT64d	3014:62:94765:94771	664860	10	True				
ANR	664905	Statement	","	3014:69:94772:94772	664860	11	True				
ANR	664906	Statement	fcn	3015:3:94777:94779	664860	12	True				
ANR	664907	Statement	->	3015:6:94780:94781	664860	13	True				
ANR	664908	Statement	addr	3015:8:94782:94785	664860	14	True				
ANR	664909	Statement	","	3015:12:94786:94786	664860	15	True				
ANR	664910	Statement	name	3015:14:94788:94791	664860	16	True				
ANR	664911	Statement	","	3015:18:94792:94792	664860	17	True				
ANR	664912	Statement	(	3015:20:94794:94794	664860	18	True				
ANR	664913	Statement	ut64	3015:21:94795:94798	664860	19	True				
ANR	664914	Statement	)	3015:25:94799:94799	664860	20	True				
ANR	664915	Statement	r_anal_fcn_size	3015:26:94800:94814	664860	21	True				
ANR	664916	Statement	(	3015:42:94816:94816	664860	22	True				
ANR	664917	Statement	fcn	3015:43:94817:94819	664860	23	True				
ANR	664918	Statement	)	3015:46:94820:94820	664860	24	True				
ANR	664919	Statement	)	3015:47:94821:94821	664860	25	True				
ANR	664920	ExpressionStatement		3015:48:94822:94822	664860	26	True				
ANR	664921	ExpressionStatement	"r_cons_printf ( ""\\nis-pure: %s"" , r_str_bool ( r_anal_fcn_get_purity ( core -> anal , fcn ) ) )"	3016:1:94825:94910	664860	27	True				
ANR	664922	CallExpression	"r_cons_printf ( ""\\nis-pure: %s"" , r_str_bool ( r_anal_fcn_get_purity ( core -> anal , fcn ) ) )"		664860	0					
ANR	664923	Callee	r_cons_printf		664860	0					
ANR	664924	Identifier	r_cons_printf		664860	0					
ANR	664925	ArgumentList	"""\\nis-pure: %s"""		664860	1					
ANR	664926	Argument	"""\\nis-pure: %s"""		664860	0					
ANR	664927	PrimaryExpression	"""\\nis-pure: %s"""		664860	0					
ANR	664928	Argument	"r_str_bool ( r_anal_fcn_get_purity ( core -> anal , fcn ) )"		664860	1					
ANR	664929	CallExpression	"r_str_bool ( r_anal_fcn_get_purity ( core -> anal , fcn ) )"		664860	0					
ANR	664930	Callee	r_str_bool		664860	0					
ANR	664931	Identifier	r_str_bool		664860	0					
ANR	664932	ArgumentList	"r_anal_fcn_get_purity ( core -> anal , fcn )"		664860	1					
ANR	664933	Argument	"r_anal_fcn_get_purity ( core -> anal , fcn )"		664860	0					
ANR	664934	CallExpression	"r_anal_fcn_get_purity ( core -> anal , fcn )"		664860	0					
ANR	664935	Callee	r_anal_fcn_get_purity		664860	0					
ANR	664936	Identifier	r_anal_fcn_get_purity		664860	0					
ANR	664937	ArgumentList	core -> anal		664860	1					
ANR	664938	Argument	core -> anal		664860	0					
ANR	664939	PtrMemberAccess	core -> anal		664860	0					
ANR	664940	Identifier	core		664860	0					
ANR	664941	Identifier	anal		664860	1					
ANR	664942	Argument	fcn		664860	1					
ANR	664943	Identifier	fcn		664860	0					
ANR	664944	ExpressionStatement	"r_cons_printf ( ""\\nrealsz: %d"" , r_anal_fcn_realsize ( fcn ) )"	3017:1:94913:94970	664860	28	True				
ANR	664945	CallExpression	"r_cons_printf ( ""\\nrealsz: %d"" , r_anal_fcn_realsize ( fcn ) )"		664860	0					
ANR	664946	Callee	r_cons_printf		664860	0					
ANR	664947	Identifier	r_cons_printf		664860	0					
ANR	664948	ArgumentList	"""\\nrealsz: %d"""		664860	1					
ANR	664949	Argument	"""\\nrealsz: %d"""		664860	0					
ANR	664950	PrimaryExpression	"""\\nrealsz: %d"""		664860	0					
ANR	664951	Argument	r_anal_fcn_realsize ( fcn )		664860	1					
ANR	664952	CallExpression	r_anal_fcn_realsize ( fcn )		664860	0					
ANR	664953	Callee	r_anal_fcn_realsize		664860	0					
ANR	664954	Identifier	r_anal_fcn_realsize		664860	0					
ANR	664955	ArgumentList	fcn		664860	1					
ANR	664956	Argument	fcn		664860	0					
ANR	664957	Identifier	fcn		664860	0					
ANR	664958	ExpressionStatement	"r_cons_printf ( ""\\nstackframe: %d"" , fcn -> maxstack )"	3018:1:94973:95022	664860	29	True				
ANR	664959	CallExpression	"r_cons_printf ( ""\\nstackframe: %d"" , fcn -> maxstack )"		664860	0					
ANR	664960	Callee	r_cons_printf		664860	0					
ANR	664961	Identifier	r_cons_printf		664860	0					
ANR	664962	ArgumentList	"""\\nstackframe: %d"""		664860	1					
ANR	664963	Argument	"""\\nstackframe: %d"""		664860	0					
ANR	664964	PrimaryExpression	"""\\nstackframe: %d"""		664860	0					
ANR	664965	Argument	fcn -> maxstack		664860	1					
ANR	664966	PtrMemberAccess	fcn -> maxstack		664860	0					
ANR	664967	Identifier	fcn		664860	0					
ANR	664968	Identifier	maxstack		664860	1					
ANR	664969	IfStatement	if ( fcn -> cc )		664860	30					
ANR	664970	Condition	fcn -> cc	3019:5:95029:95035	664860	0	True				
ANR	664971	PtrMemberAccess	fcn -> cc		664860	0					
ANR	664972	Identifier	fcn		664860	0					
ANR	664973	Identifier	cc		664860	1					
ANR	664974	CompoundStatement		13:14:457:457	664860	1					
ANR	664975	ExpressionStatement	"r_cons_printf ( ""\\ncall-convention: %s"" , fcn -> cc )"	3020:2:95042:95090	664860	0	True				
ANR	664976	CallExpression	"r_cons_printf ( ""\\ncall-convention: %s"" , fcn -> cc )"		664860	0					
ANR	664977	Callee	r_cons_printf		664860	0					
ANR	664978	Identifier	r_cons_printf		664860	0					
ANR	664979	ArgumentList	"""\\ncall-convention: %s"""		664860	1					
ANR	664980	Argument	"""\\ncall-convention: %s"""		664860	0					
ANR	664981	PrimaryExpression	"""\\ncall-convention: %s"""		664860	0					
ANR	664982	Argument	fcn -> cc		664860	1					
ANR	664983	PtrMemberAccess	fcn -> cc		664860	0					
ANR	664984	Identifier	fcn		664860	0					
ANR	664985	Identifier	cc		664860	1					
ANR	664986	ExpressionStatement	"r_cons_printf ( ""\\ncyclomatic-cost : %d"" , r_anal_fcn_cost ( core -> anal , fcn ) )"	3022:1:95096:95171	664860	31	True				
ANR	664987	CallExpression	"r_cons_printf ( ""\\ncyclomatic-cost : %d"" , r_anal_fcn_cost ( core -> anal , fcn ) )"		664860	0					
ANR	664988	Callee	r_cons_printf		664860	0					
ANR	664989	Identifier	r_cons_printf		664860	0					
ANR	664990	ArgumentList	"""\\ncyclomatic-cost : %d"""		664860	1					
ANR	664991	Argument	"""\\ncyclomatic-cost : %d"""		664860	0					
ANR	664992	PrimaryExpression	"""\\ncyclomatic-cost : %d"""		664860	0					
ANR	664993	Argument	"r_anal_fcn_cost ( core -> anal , fcn )"		664860	1					
ANR	664994	CallExpression	"r_anal_fcn_cost ( core -> anal , fcn )"		664860	0					
ANR	664995	Callee	r_anal_fcn_cost		664860	0					
ANR	664996	Identifier	r_anal_fcn_cost		664860	0					
ANR	664997	ArgumentList	core -> anal		664860	1					
ANR	664998	Argument	core -> anal		664860	0					
ANR	664999	PtrMemberAccess	core -> anal		664860	0					
ANR	665000	Identifier	core		664860	0					
ANR	665001	Identifier	anal		664860	1					
ANR	665002	Argument	fcn		664860	1					
ANR	665003	Identifier	fcn		664860	0					
ANR	665004	ExpressionStatement	"r_cons_printf ( ""\\ncyclomatic-complexity: %d"" , r_anal_fcn_cc ( core -> anal , fcn ) )"	3023:1:95174:95252	664860	32	True				
ANR	665005	CallExpression	"r_cons_printf ( ""\\ncyclomatic-complexity: %d"" , r_anal_fcn_cc ( core -> anal , fcn ) )"		664860	0					
ANR	665006	Callee	r_cons_printf		664860	0					
ANR	665007	Identifier	r_cons_printf		664860	0					
ANR	665008	ArgumentList	"""\\ncyclomatic-complexity: %d"""		664860	1					
ANR	665009	Argument	"""\\ncyclomatic-complexity: %d"""		664860	0					
ANR	665010	PrimaryExpression	"""\\ncyclomatic-complexity: %d"""		664860	0					
ANR	665011	Argument	"r_anal_fcn_cc ( core -> anal , fcn )"		664860	1					
ANR	665012	CallExpression	"r_anal_fcn_cc ( core -> anal , fcn )"		664860	0					
ANR	665013	Callee	r_anal_fcn_cc		664860	0					
ANR	665014	Identifier	r_anal_fcn_cc		664860	0					
ANR	665015	ArgumentList	core -> anal		664860	1					
ANR	665016	Argument	core -> anal		664860	0					
ANR	665017	PtrMemberAccess	core -> anal		664860	0					
ANR	665018	Identifier	core		664860	0					
ANR	665019	Identifier	anal		664860	1					
ANR	665020	Argument	fcn		664860	1					
ANR	665021	Identifier	fcn		664860	0					
ANR	665022	ExpressionStatement	"r_cons_printf ( ""\\nbits: %d"" , fcn -> bits )"	3024:1:95255:95294	664860	33	True				
ANR	665023	CallExpression	"r_cons_printf ( ""\\nbits: %d"" , fcn -> bits )"		664860	0					
ANR	665024	Callee	r_cons_printf		664860	0					
ANR	665025	Identifier	r_cons_printf		664860	0					
ANR	665026	ArgumentList	"""\\nbits: %d"""		664860	1					
ANR	665027	Argument	"""\\nbits: %d"""		664860	0					
ANR	665028	PrimaryExpression	"""\\nbits: %d"""		664860	0					
ANR	665029	Argument	fcn -> bits		664860	1					
ANR	665030	PtrMemberAccess	fcn -> bits		664860	0					
ANR	665031	Identifier	fcn		664860	0					
ANR	665032	Identifier	bits		664860	1					
ANR	665033	ExpressionStatement	"r_cons_printf ( ""\\ntype: %s"" , r_anal_fcn_type_tostring ( fcn -> type ) )"	3025:1:95297:95363	664860	34	True				
ANR	665034	CallExpression	"r_cons_printf ( ""\\ntype: %s"" , r_anal_fcn_type_tostring ( fcn -> type ) )"		664860	0					
ANR	665035	Callee	r_cons_printf		664860	0					
ANR	665036	Identifier	r_cons_printf		664860	0					
ANR	665037	ArgumentList	"""\\ntype: %s"""		664860	1					
ANR	665038	Argument	"""\\ntype: %s"""		664860	0					
ANR	665039	PrimaryExpression	"""\\ntype: %s"""		664860	0					
ANR	665040	Argument	r_anal_fcn_type_tostring ( fcn -> type )		664860	1					
ANR	665041	CallExpression	r_anal_fcn_type_tostring ( fcn -> type )		664860	0					
ANR	665042	Callee	r_anal_fcn_type_tostring		664860	0					
ANR	665043	Identifier	r_anal_fcn_type_tostring		664860	0					
ANR	665044	ArgumentList	fcn -> type		664860	1					
ANR	665045	Argument	fcn -> type		664860	0					
ANR	665046	PtrMemberAccess	fcn -> type		664860	0					
ANR	665047	Identifier	fcn		664860	0					
ANR	665048	Identifier	type		664860	1					
ANR	665049	IfStatement	if ( fcn -> type == R_ANAL_FCN_TYPE_FCN || fcn -> type == R_ANAL_FCN_TYPE_SYM )		664860	35					
ANR	665050	Condition	fcn -> type == R_ANAL_FCN_TYPE_FCN || fcn -> type == R_ANAL_FCN_TYPE_SYM	3026:5:95370:95437	664860	0	True				
ANR	665051	OrExpression	fcn -> type == R_ANAL_FCN_TYPE_FCN || fcn -> type == R_ANAL_FCN_TYPE_SYM		664860	0		||			
ANR	665052	EqualityExpression	fcn -> type == R_ANAL_FCN_TYPE_FCN		664860	0		==			
ANR	665053	PtrMemberAccess	fcn -> type		664860	0					
ANR	665054	Identifier	fcn		664860	0					
ANR	665055	Identifier	type		664860	1					
ANR	665056	Identifier	R_ANAL_FCN_TYPE_FCN		664860	1					
ANR	665057	EqualityExpression	fcn -> type == R_ANAL_FCN_TYPE_SYM		664860	1		==			
ANR	665058	PtrMemberAccess	fcn -> type		664860	0					
ANR	665059	Identifier	fcn		664860	0					
ANR	665060	Identifier	type		664860	1					
ANR	665061	Identifier	R_ANAL_FCN_TYPE_SYM		664860	1					
ANR	665062	CompoundStatement		20:75:859:859	664860	1					
ANR	665063	ExpressionStatement	"r_cons_printf ( "" [%s]"" , fcn -> diff -> type == R_ANAL_DIFF_TYPE_MATCH ? ""MATCH"" : fcn -> diff -> type == R_ANAL_DIFF_TYPE_UNMATCH ? ""UNMATCH"" : ""NEW"" )"	3027:2:95444:95587	664860	0	True				
ANR	665064	CallExpression	"r_cons_printf ( "" [%s]"" , fcn -> diff -> type == R_ANAL_DIFF_TYPE_MATCH ? ""MATCH"" : fcn -> diff -> type == R_ANAL_DIFF_TYPE_UNMATCH ? ""UNMATCH"" : ""NEW"" )"		664860	0					
ANR	665065	Callee	r_cons_printf		664860	0					
ANR	665066	Identifier	r_cons_printf		664860	0					
ANR	665067	ArgumentList	""" [%s]"""		664860	1					
ANR	665068	Argument	""" [%s]"""		664860	0					
ANR	665069	PrimaryExpression	""" [%s]"""		664860	0					
ANR	665070	Argument	"fcn -> diff -> type == R_ANAL_DIFF_TYPE_MATCH ? ""MATCH"" : fcn -> diff -> type == R_ANAL_DIFF_TYPE_UNMATCH ? ""UNMATCH"" : ""NEW"""		664860	1					
ANR	665071	ConditionalExpression	"fcn -> diff -> type == R_ANAL_DIFF_TYPE_MATCH ? ""MATCH"" : fcn -> diff -> type == R_ANAL_DIFF_TYPE_UNMATCH ? ""UNMATCH"" : ""NEW"""		664860	0					
ANR	665072	Condition	fcn -> diff -> type == R_ANAL_DIFF_TYPE_MATCH		664860	0					
ANR	665073	EqualityExpression	fcn -> diff -> type == R_ANAL_DIFF_TYPE_MATCH		664860	0		==			
ANR	665074	PtrMemberAccess	fcn -> diff -> type		664860	0					
ANR	665075	PtrMemberAccess	fcn -> diff		664860	0					
ANR	665076	Identifier	fcn		664860	0					
ANR	665077	Identifier	diff		664860	1					
ANR	665078	Identifier	type		664860	1					
ANR	665079	Identifier	R_ANAL_DIFF_TYPE_MATCH		664860	1					
ANR	665080	PrimaryExpression	"""MATCH"""		664860	1					
ANR	665081	ConditionalExpression	"fcn -> diff -> type == R_ANAL_DIFF_TYPE_UNMATCH ? ""UNMATCH"" : ""NEW"""		664860	2					
ANR	665082	Condition	fcn -> diff -> type == R_ANAL_DIFF_TYPE_UNMATCH		664860	0					
ANR	665083	EqualityExpression	fcn -> diff -> type == R_ANAL_DIFF_TYPE_UNMATCH		664860	0		==			
ANR	665084	PtrMemberAccess	fcn -> diff -> type		664860	0					
ANR	665085	PtrMemberAccess	fcn -> diff		664860	0					
ANR	665086	Identifier	fcn		664860	0					
ANR	665087	Identifier	diff		664860	1					
ANR	665088	Identifier	type		664860	1					
ANR	665089	Identifier	R_ANAL_DIFF_TYPE_UNMATCH		664860	1					
ANR	665090	PrimaryExpression	"""UNMATCH"""		664860	1					
ANR	665091	PrimaryExpression	"""NEW"""		664860	2					
ANR	665092	ExpressionStatement	"r_cons_printf ( ""\\nnum-bbs: %d"" , r_list_length ( fcn -> bbs ) )"	3031:1:95593:95650	664860	36	True				
ANR	665093	CallExpression	"r_cons_printf ( ""\\nnum-bbs: %d"" , r_list_length ( fcn -> bbs ) )"		664860	0					
ANR	665094	Callee	r_cons_printf		664860	0					
ANR	665095	Identifier	r_cons_printf		664860	0					
ANR	665096	ArgumentList	"""\\nnum-bbs: %d"""		664860	1					
ANR	665097	Argument	"""\\nnum-bbs: %d"""		664860	0					
ANR	665098	PrimaryExpression	"""\\nnum-bbs: %d"""		664860	0					
ANR	665099	Argument	r_list_length ( fcn -> bbs )		664860	1					
ANR	665100	CallExpression	r_list_length ( fcn -> bbs )		664860	0					
ANR	665101	Callee	r_list_length		664860	0					
ANR	665102	Identifier	r_list_length		664860	0					
ANR	665103	ArgumentList	fcn -> bbs		664860	1					
ANR	665104	Argument	fcn -> bbs		664860	0					
ANR	665105	PtrMemberAccess	fcn -> bbs		664860	0					
ANR	665106	Identifier	fcn		664860	0					
ANR	665107	Identifier	bbs		664860	1					
ANR	665108	ExpressionStatement	"r_cons_printf ( ""\\nedges: %d"" , r_anal_fcn_count_edges ( fcn , & ebbs ) )"	3032:1:95653:95719	664860	37	True				
ANR	665109	CallExpression	"r_cons_printf ( ""\\nedges: %d"" , r_anal_fcn_count_edges ( fcn , & ebbs ) )"		664860	0					
ANR	665110	Callee	r_cons_printf		664860	0					
ANR	665111	Identifier	r_cons_printf		664860	0					
ANR	665112	ArgumentList	"""\\nedges: %d"""		664860	1					
ANR	665113	Argument	"""\\nedges: %d"""		664860	0					
ANR	665114	PrimaryExpression	"""\\nedges: %d"""		664860	0					
ANR	665115	Argument	"r_anal_fcn_count_edges ( fcn , & ebbs )"		664860	1					
ANR	665116	CallExpression	"r_anal_fcn_count_edges ( fcn , & ebbs )"		664860	0					
ANR	665117	Callee	r_anal_fcn_count_edges		664860	0					
ANR	665118	Identifier	r_anal_fcn_count_edges		664860	0					
ANR	665119	ArgumentList	fcn		664860	1					
ANR	665120	Argument	fcn		664860	0					
ANR	665121	Identifier	fcn		664860	0					
ANR	665122	Argument	& ebbs		664860	1					
ANR	665123	UnaryOperationExpression	& ebbs		664860	0					
ANR	665124	UnaryOperator	&		664860	0					
ANR	665125	Identifier	ebbs		664860	1					
ANR	665126	ExpressionStatement	"r_cons_printf ( ""\\nend-bbs: %d"" , ebbs )"	3033:1:95722:95759	664860	38	True				
ANR	665127	CallExpression	"r_cons_printf ( ""\\nend-bbs: %d"" , ebbs )"		664860	0					
ANR	665128	Callee	r_cons_printf		664860	0					
ANR	665129	Identifier	r_cons_printf		664860	0					
ANR	665130	ArgumentList	"""\\nend-bbs: %d"""		664860	1					
ANR	665131	Argument	"""\\nend-bbs: %d"""		664860	0					
ANR	665132	PrimaryExpression	"""\\nend-bbs: %d"""		664860	0					
ANR	665133	Argument	ebbs		664860	1					
ANR	665134	Identifier	ebbs		664860	0					
ANR	665135	ExpressionStatement	"r_cons_printf ( ""\\ncall-refs:"" )"	3034:1:95762:95792	664860	39	True				
ANR	665136	CallExpression	"r_cons_printf ( ""\\ncall-refs:"" )"		664860	0					
ANR	665137	Callee	r_cons_printf		664860	0					
ANR	665138	Identifier	r_cons_printf		664860	0					
ANR	665139	ArgumentList	"""\\ncall-refs:"""		664860	1					
ANR	665140	Argument	"""\\ncall-refs:"""		664860	0					
ANR	665141	PrimaryExpression	"""\\ncall-refs:"""		664860	0					
ANR	665142	IdentifierDeclStatement	int outdegree = 0 ;	3035:1:95795:95812	664860	40	True				
ANR	665143	IdentifierDecl	outdegree = 0		664860	0					
ANR	665144	IdentifierDeclType	int		664860	0					
ANR	665145	Identifier	outdegree		664860	1					
ANR	665146	AssignmentExpression	outdegree = 0		664860	2		=			
ANR	665147	Identifier	outdegree		664860	0					
ANR	665148	PrimaryExpression	0		664860	1					
ANR	665149	ExpressionStatement	"refs = r_anal_fcn_get_refs ( core -> anal , fcn )"	3036:1:95815:95859	664860	41	True				
ANR	665150	AssignmentExpression	"refs = r_anal_fcn_get_refs ( core -> anal , fcn )"		664860	0		=			
ANR	665151	Identifier	refs		664860	0					
ANR	665152	CallExpression	"r_anal_fcn_get_refs ( core -> anal , fcn )"		664860	1					
ANR	665153	Callee	r_anal_fcn_get_refs		664860	0					
ANR	665154	Identifier	r_anal_fcn_get_refs		664860	0					
ANR	665155	ArgumentList	core -> anal		664860	1					
ANR	665156	Argument	core -> anal		664860	0					
ANR	665157	PtrMemberAccess	core -> anal		664860	0					
ANR	665158	Identifier	core		664860	0					
ANR	665159	Identifier	anal		664860	1					
ANR	665160	Argument	fcn		664860	1					
ANR	665161	Identifier	fcn		664860	0					
ANR	665162	Statement	r_list_foreach	3037:1:95862:95875	664860	42	True				
ANR	665163	Statement	(	3037:16:95877:95877	664860	43	True				
ANR	665164	Statement	refs	3037:17:95878:95881	664860	44	True				
ANR	665165	Statement	","	3037:21:95882:95882	664860	45	True				
ANR	665166	Statement	iter	3037:23:95884:95887	664860	46	True				
ANR	665167	Statement	","	3037:27:95888:95888	664860	47	True				
ANR	665168	Statement	refi	3037:29:95890:95893	664860	48	True				
ANR	665169	Statement	)	3037:33:95894:95894	664860	49	True				
ANR	665170	CompoundStatement		31:35:1315:1315	664860	50					
ANR	665171	IfStatement	if ( refi -> type == R_ANAL_REF_TYPE_CALL )		664860	0					
ANR	665172	Condition	refi -> type == R_ANAL_REF_TYPE_CALL	3038:6:95904:95937	664860	0	True				
ANR	665173	EqualityExpression	refi -> type == R_ANAL_REF_TYPE_CALL		664860	0		==			
ANR	665174	PtrMemberAccess	refi -> type		664860	0					
ANR	665175	Identifier	refi		664860	0					
ANR	665176	Identifier	type		664860	1					
ANR	665177	Identifier	R_ANAL_REF_TYPE_CALL		664860	1					
ANR	665178	CompoundStatement		32:42:1359:1359	664860	1					
ANR	665179	ExpressionStatement	outdegree ++	3039:3:95945:95956	664860	0	True				
ANR	665180	PostIncDecOperationExpression	outdegree ++		664860	0					
ANR	665181	Identifier	outdegree		664860	0					
ANR	665182	IncDec	++		664860	1					
ANR	665183	IfStatement	if ( refi -> type == R_ANAL_REF_TYPE_CODE || refi -> type == R_ANAL_REF_TYPE_CALL )		664860	1					
ANR	665184	Condition	refi -> type == R_ANAL_REF_TYPE_CODE || refi -> type == R_ANAL_REF_TYPE_CALL	3041:6:95968:96039	664860	0	True				
ANR	665185	OrExpression	refi -> type == R_ANAL_REF_TYPE_CODE || refi -> type == R_ANAL_REF_TYPE_CALL		664860	0		||			
ANR	665186	EqualityExpression	refi -> type == R_ANAL_REF_TYPE_CODE		664860	0		==			
ANR	665187	PtrMemberAccess	refi -> type		664860	0					
ANR	665188	Identifier	refi		664860	0					
ANR	665189	Identifier	type		664860	1					
ANR	665190	Identifier	R_ANAL_REF_TYPE_CODE		664860	1					
ANR	665191	EqualityExpression	refi -> type == R_ANAL_REF_TYPE_CALL		664860	1		==			
ANR	665192	PtrMemberAccess	refi -> type		664860	0					
ANR	665193	Identifier	refi		664860	0					
ANR	665194	Identifier	type		664860	1					
ANR	665195	Identifier	R_ANAL_REF_TYPE_CALL		664860	1					
ANR	665196	CompoundStatement		35:80:1461:1461	664860	1					
ANR	665197	Statement	r_cons_printf	3042:3:96047:96059	664860	0	True				
ANR	665198	Statement	(	3042:17:96061:96061	664860	1	True				
ANR	665199	Statement	""" 0x%08"""	3042:18:96062:96069	664860	2	True				
ANR	665200	Statement	PFMT64x	3042:26:96070:96076	664860	3	True				
ANR	665201	Statement	""" %c"""	3042:33:96077:96081	664860	4	True				
ANR	665202	Statement	","	3042:38:96082:96082	664860	5	True				
ANR	665203	Statement	refi	3042:40:96084:96087	664860	6	True				
ANR	665204	Statement	->	3042:44:96088:96089	664860	7	True				
ANR	665205	Statement	addr	3042:46:96090:96093	664860	8	True				
ANR	665206	Statement	","	3042:50:96094:96094	664860	9	True				
ANR	665207	Statement	refi	3043:5:96101:96104	664860	10	True				
ANR	665208	Statement	->	3043:9:96105:96106	664860	11	True				
ANR	665209	Statement	type	3043:11:96107:96110	664860	12	True				
ANR	665210	Statement	==	3043:16:96112:96113	664860	13	True				
ANR	665211	Statement	R_ANAL_REF_TYPE_CALL	3043:19:96115:96134	664860	14	True				
ANR	665212	Statement	?	3043:39:96135:96135	664860	15	True				
ANR	665213	Label	'C' :	3043:40:96136:96139	664860	16	True				
ANR	665214	Statement	'J'	3043:44:96140:96142	664860	17	True				
ANR	665215	Statement	)	3043:47:96143:96143	664860	18	True				
ANR	665216	ExpressionStatement		3043:48:96144:96144	664860	19	True				
ANR	665217	ExpressionStatement	"r_cons_printf ( ""\\ndata-refs:"" )"	3046:1:96154:96184	664860	51	True				
ANR	665218	CallExpression	"r_cons_printf ( ""\\ndata-refs:"" )"		664860	0					
ANR	665219	Callee	r_cons_printf		664860	0					
ANR	665220	Identifier	r_cons_printf		664860	0					
ANR	665221	ArgumentList	"""\\ndata-refs:"""		664860	1					
ANR	665222	Argument	"""\\ndata-refs:"""		664860	0					
ANR	665223	PrimaryExpression	"""\\ndata-refs:"""		664860	0					
ANR	665224	Statement	r_list_foreach	3047:1:96187:96200	664860	52	True				
ANR	665225	Statement	(	3047:16:96202:96202	664860	53	True				
ANR	665226	Statement	refs	3047:17:96203:96206	664860	54	True				
ANR	665227	Statement	","	3047:21:96207:96207	664860	55	True				
ANR	665228	Statement	iter	3047:23:96209:96212	664860	56	True				
ANR	665229	Statement	","	3047:27:96213:96213	664860	57	True				
ANR	665230	Statement	refi	3047:29:96215:96218	664860	58	True				
ANR	665231	Statement	)	3047:33:96219:96219	664860	59	True				
ANR	665232	CompoundStatement		41:35:1640:1640	664860	60					
ANR	665233	IfStatement	if ( refi -> type == R_ANAL_REF_TYPE_DATA )		664860	0					
ANR	665234	Condition	refi -> type == R_ANAL_REF_TYPE_DATA	3048:6:96229:96262	664860	0	True				
ANR	665235	EqualityExpression	refi -> type == R_ANAL_REF_TYPE_DATA		664860	0		==			
ANR	665236	PtrMemberAccess	refi -> type		664860	0					
ANR	665237	Identifier	refi		664860	0					
ANR	665238	Identifier	type		664860	1					
ANR	665239	Identifier	R_ANAL_REF_TYPE_DATA		664860	1					
ANR	665240	CompoundStatement		42:42:1684:1684	664860	1					
ANR	665241	Statement	r_cons_printf	3049:3:96270:96282	664860	0	True				
ANR	665242	Statement	(	3049:17:96284:96284	664860	1	True				
ANR	665243	Statement	""" 0x%08"""	3049:18:96285:96292	664860	2	True				
ANR	665244	Statement	PFMT64x	3049:26:96293:96299	664860	3	True				
ANR	665245	Statement	","	3049:33:96300:96300	664860	4	True				
ANR	665246	Statement	refi	3049:35:96302:96305	664860	5	True				
ANR	665247	Statement	->	3049:39:96306:96307	664860	6	True				
ANR	665248	Statement	addr	3049:41:96308:96311	664860	7	True				
ANR	665249	Statement	)	3049:45:96312:96312	664860	8	True				
ANR	665250	ExpressionStatement		3049:46:96313:96313	664860	9	True				
ANR	665251	ExpressionStatement	r_list_free ( refs )	3052:1:96323:96341	664860	61	True				
ANR	665252	CallExpression	r_list_free ( refs )		664860	0					
ANR	665253	Callee	r_list_free		664860	0					
ANR	665254	Identifier	r_list_free		664860	0					
ANR	665255	ArgumentList	refs		664860	1					
ANR	665256	Argument	refs		664860	0					
ANR	665257	Identifier	refs		664860	0					
ANR	665258	IdentifierDeclStatement	int indegree = 0 ;	3054:1:96345:96361	664860	62	True				
ANR	665259	IdentifierDecl	indegree = 0		664860	0					
ANR	665260	IdentifierDeclType	int		664860	0					
ANR	665261	Identifier	indegree		664860	1					
ANR	665262	AssignmentExpression	indegree = 0		664860	2		=			
ANR	665263	Identifier	indegree		664860	0					
ANR	665264	PrimaryExpression	0		664860	1					
ANR	665265	ExpressionStatement	"r_cons_printf ( ""\\ncode-xrefs:"" )"	3055:1:96364:96395	664860	63	True				
ANR	665266	CallExpression	"r_cons_printf ( ""\\ncode-xrefs:"" )"		664860	0					
ANR	665267	Callee	r_cons_printf		664860	0					
ANR	665268	Identifier	r_cons_printf		664860	0					
ANR	665269	ArgumentList	"""\\ncode-xrefs:"""		664860	1					
ANR	665270	Argument	"""\\ncode-xrefs:"""		664860	0					
ANR	665271	PrimaryExpression	"""\\ncode-xrefs:"""		664860	0					
ANR	665272	ExpressionStatement	"xrefs = r_anal_fcn_get_xrefs ( core -> anal , fcn )"	3056:1:96398:96444	664860	64	True				
ANR	665273	AssignmentExpression	"xrefs = r_anal_fcn_get_xrefs ( core -> anal , fcn )"		664860	0		=			
ANR	665274	Identifier	xrefs		664860	0					
ANR	665275	CallExpression	"r_anal_fcn_get_xrefs ( core -> anal , fcn )"		664860	1					
ANR	665276	Callee	r_anal_fcn_get_xrefs		664860	0					
ANR	665277	Identifier	r_anal_fcn_get_xrefs		664860	0					
ANR	665278	ArgumentList	core -> anal		664860	1					
ANR	665279	Argument	core -> anal		664860	0					
ANR	665280	PtrMemberAccess	core -> anal		664860	0					
ANR	665281	Identifier	core		664860	0					
ANR	665282	Identifier	anal		664860	1					
ANR	665283	Argument	fcn		664860	1					
ANR	665284	Identifier	fcn		664860	0					
ANR	665285	Statement	r_list_foreach	3057:1:96447:96460	664860	65	True				
ANR	665286	Statement	(	3057:16:96462:96462	664860	66	True				
ANR	665287	Statement	xrefs	3057:17:96463:96467	664860	67	True				
ANR	665288	Statement	","	3057:22:96468:96468	664860	68	True				
ANR	665289	Statement	iter	3057:24:96470:96473	664860	69	True				
ANR	665290	Statement	","	3057:28:96474:96474	664860	70	True				
ANR	665291	Statement	refi	3057:30:96476:96479	664860	71	True				
ANR	665292	Statement	)	3057:34:96480:96480	664860	72	True				
ANR	665293	CompoundStatement		51:36:1901:1901	664860	73					
ANR	665294	IfStatement	if ( refi -> type == R_ANAL_REF_TYPE_CODE || refi -> type == R_ANAL_REF_TYPE_CALL )		664860	0					
ANR	665295	Condition	refi -> type == R_ANAL_REF_TYPE_CODE || refi -> type == R_ANAL_REF_TYPE_CALL	3058:6:96490:96561	664860	0	True				
ANR	665296	OrExpression	refi -> type == R_ANAL_REF_TYPE_CODE || refi -> type == R_ANAL_REF_TYPE_CALL		664860	0		||			
ANR	665297	EqualityExpression	refi -> type == R_ANAL_REF_TYPE_CODE		664860	0		==			
ANR	665298	PtrMemberAccess	refi -> type		664860	0					
ANR	665299	Identifier	refi		664860	0					
ANR	665300	Identifier	type		664860	1					
ANR	665301	Identifier	R_ANAL_REF_TYPE_CODE		664860	1					
ANR	665302	EqualityExpression	refi -> type == R_ANAL_REF_TYPE_CALL		664860	1		==			
ANR	665303	PtrMemberAccess	refi -> type		664860	0					
ANR	665304	Identifier	refi		664860	0					
ANR	665305	Identifier	type		664860	1					
ANR	665306	Identifier	R_ANAL_REF_TYPE_CALL		664860	1					
ANR	665307	CompoundStatement		52:80:1983:1983	664860	1					
ANR	665308	ExpressionStatement	indegree ++	3059:3:96569:96579	664860	0	True				
ANR	665309	PostIncDecOperationExpression	indegree ++		664860	0					
ANR	665310	Identifier	indegree		664860	0					
ANR	665311	IncDec	++		664860	1					
ANR	665312	Statement	r_cons_printf	3060:3:96584:96596	664860	1	True				
ANR	665313	Statement	(	3060:17:96598:96598	664860	2	True				
ANR	665314	Statement	""" 0x%08"""	3060:18:96599:96606	664860	3	True				
ANR	665315	Statement	PFMT64x	3060:26:96607:96613	664860	4	True				
ANR	665316	Statement	""" %c"""	3060:33:96614:96618	664860	5	True				
ANR	665317	Statement	","	3060:38:96619:96619	664860	6	True				
ANR	665318	Statement	refi	3060:40:96621:96624	664860	7	True				
ANR	665319	Statement	->	3060:44:96625:96626	664860	8	True				
ANR	665320	Statement	addr	3060:46:96627:96630	664860	9	True				
ANR	665321	Statement	","	3060:50:96631:96631	664860	10	True				
ANR	665322	Statement	refi	3061:5:96638:96641	664860	11	True				
ANR	665323	Statement	->	3061:9:96642:96643	664860	12	True				
ANR	665324	Statement	type	3061:11:96644:96647	664860	13	True				
ANR	665325	Statement	==	3061:16:96649:96650	664860	14	True				
ANR	665326	Statement	R_ANAL_REF_TYPE_CALL	3061:19:96652:96671	664860	15	True				
ANR	665327	Statement	?	3061:39:96672:96672	664860	16	True				
ANR	665328	Label	'C' :	3061:40:96673:96676	664860	17	True				
ANR	665329	Statement	'J'	3061:44:96677:96679	664860	18	True				
ANR	665330	Statement	)	3061:47:96680:96680	664860	19	True				
ANR	665331	ExpressionStatement		3061:48:96681:96681	664860	20	True				
ANR	665332	ExpressionStatement	"r_cons_printf ( ""\\nin-degree: %d"" , indegree )"	3064:1:96691:96734	664860	74	True				
ANR	665333	CallExpression	"r_cons_printf ( ""\\nin-degree: %d"" , indegree )"		664860	0					
ANR	665334	Callee	r_cons_printf		664860	0					
ANR	665335	Identifier	r_cons_printf		664860	0					
ANR	665336	ArgumentList	"""\\nin-degree: %d"""		664860	1					
ANR	665337	Argument	"""\\nin-degree: %d"""		664860	0					
ANR	665338	PrimaryExpression	"""\\nin-degree: %d"""		664860	0					
ANR	665339	Argument	indegree		664860	1					
ANR	665340	Identifier	indegree		664860	0					
ANR	665341	ExpressionStatement	"r_cons_printf ( ""\\nout-degree: %d"" , outdegree )"	3065:1:96737:96782	664860	75	True				
ANR	665342	CallExpression	"r_cons_printf ( ""\\nout-degree: %d"" , outdegree )"		664860	0					
ANR	665343	Callee	r_cons_printf		664860	0					
ANR	665344	Identifier	r_cons_printf		664860	0					
ANR	665345	ArgumentList	"""\\nout-degree: %d"""		664860	1					
ANR	665346	Argument	"""\\nout-degree: %d"""		664860	0					
ANR	665347	PrimaryExpression	"""\\nout-degree: %d"""		664860	0					
ANR	665348	Argument	outdegree		664860	1					
ANR	665349	Identifier	outdegree		664860	0					
ANR	665350	ExpressionStatement	"r_cons_printf ( ""\\ndata-xrefs:"" )"	3066:1:96785:96816	664860	76	True				
ANR	665351	CallExpression	"r_cons_printf ( ""\\ndata-xrefs:"" )"		664860	0					
ANR	665352	Callee	r_cons_printf		664860	0					
ANR	665353	Identifier	r_cons_printf		664860	0					
ANR	665354	ArgumentList	"""\\ndata-xrefs:"""		664860	1					
ANR	665355	Argument	"""\\ndata-xrefs:"""		664860	0					
ANR	665356	PrimaryExpression	"""\\ndata-xrefs:"""		664860	0					
ANR	665357	Statement	r_list_foreach	3067:1:96819:96832	664860	77	True				
ANR	665358	Statement	(	3067:16:96834:96834	664860	78	True				
ANR	665359	Statement	xrefs	3067:17:96835:96839	664860	79	True				
ANR	665360	Statement	","	3067:22:96840:96840	664860	80	True				
ANR	665361	Statement	iter	3067:24:96842:96845	664860	81	True				
ANR	665362	Statement	","	3067:28:96846:96846	664860	82	True				
ANR	665363	Statement	refi	3067:30:96848:96851	664860	83	True				
ANR	665364	Statement	)	3067:34:96852:96852	664860	84	True				
ANR	665365	CompoundStatement		61:36:2273:2273	664860	85					
ANR	665366	IfStatement	if ( refi -> type == R_ANAL_REF_TYPE_DATA )		664860	0					
ANR	665367	Condition	refi -> type == R_ANAL_REF_TYPE_DATA	3068:6:96862:96895	664860	0	True				
ANR	665368	EqualityExpression	refi -> type == R_ANAL_REF_TYPE_DATA		664860	0		==			
ANR	665369	PtrMemberAccess	refi -> type		664860	0					
ANR	665370	Identifier	refi		664860	0					
ANR	665371	Identifier	type		664860	1					
ANR	665372	Identifier	R_ANAL_REF_TYPE_DATA		664860	1					
ANR	665373	CompoundStatement		62:42:2317:2317	664860	1					
ANR	665374	Statement	r_cons_printf	3069:3:96903:96915	664860	0	True				
ANR	665375	Statement	(	3069:17:96917:96917	664860	1	True				
ANR	665376	Statement	""" 0x%08"""	3069:18:96918:96925	664860	2	True				
ANR	665377	Statement	PFMT64x	3069:26:96926:96932	664860	3	True				
ANR	665378	Statement	","	3069:33:96933:96933	664860	4	True				
ANR	665379	Statement	refi	3069:35:96935:96938	664860	5	True				
ANR	665380	Statement	->	3069:39:96939:96940	664860	6	True				
ANR	665381	Statement	addr	3069:41:96941:96944	664860	7	True				
ANR	665382	Statement	)	3069:45:96945:96945	664860	8	True				
ANR	665383	ExpressionStatement		3069:46:96946:96946	664860	9	True				
ANR	665384	ExpressionStatement	r_list_free ( xrefs )	3072:1:96956:96975	664860	86	True				
ANR	665385	CallExpression	r_list_free ( xrefs )		664860	0					
ANR	665386	Callee	r_list_free		664860	0					
ANR	665387	Identifier	r_list_free		664860	0					
ANR	665388	ArgumentList	xrefs		664860	1					
ANR	665389	Argument	xrefs		664860	0					
ANR	665390	Identifier	xrefs		664860	0					
ANR	665391	IfStatement	if ( fcn -> type == R_ANAL_FCN_TYPE_FCN || fcn -> type == R_ANAL_FCN_TYPE_SYM )		664860	87					
ANR	665392	Condition	fcn -> type == R_ANAL_FCN_TYPE_FCN || fcn -> type == R_ANAL_FCN_TYPE_SYM	3074:5:96983:97050	664860	0	True				
ANR	665393	OrExpression	fcn -> type == R_ANAL_FCN_TYPE_FCN || fcn -> type == R_ANAL_FCN_TYPE_SYM		664860	0		||			
ANR	665394	EqualityExpression	fcn -> type == R_ANAL_FCN_TYPE_FCN		664860	0		==			
ANR	665395	PtrMemberAccess	fcn -> type		664860	0					
ANR	665396	Identifier	fcn		664860	0					
ANR	665397	Identifier	type		664860	1					
ANR	665398	Identifier	R_ANAL_FCN_TYPE_FCN		664860	1					
ANR	665399	EqualityExpression	fcn -> type == R_ANAL_FCN_TYPE_SYM		664860	1		==			
ANR	665400	PtrMemberAccess	fcn -> type		664860	0					
ANR	665401	Identifier	fcn		664860	0					
ANR	665402	Identifier	type		664860	1					
ANR	665403	Identifier	R_ANAL_FCN_TYPE_SYM		664860	1					
ANR	665404	CompoundStatement		72:2:2659:2717	664860	1					
ANR	665405	IdentifierDeclStatement	"int args_count = r_anal_var_count ( core -> anal , fcn , 'b' , 1 ) ;"	3075:2:97057:97116	664860	0	True				
ANR	665406	IdentifierDecl	"args_count = r_anal_var_count ( core -> anal , fcn , 'b' , 1 )"		664860	0					
ANR	665407	IdentifierDeclType	int		664860	0					
ANR	665408	Identifier	args_count		664860	1					
ANR	665409	AssignmentExpression	"args_count = r_anal_var_count ( core -> anal , fcn , 'b' , 1 )"		664860	2		=			
ANR	665410	Identifier	args_count		664860	0					
ANR	665411	CallExpression	"r_anal_var_count ( core -> anal , fcn , 'b' , 1 )"		664860	1					
ANR	665412	Callee	r_anal_var_count		664860	0					
ANR	665413	Identifier	r_anal_var_count		664860	0					
ANR	665414	ArgumentList	core -> anal		664860	1					
ANR	665415	Argument	core -> anal		664860	0					
ANR	665416	PtrMemberAccess	core -> anal		664860	0					
ANR	665417	Identifier	core		664860	0					
ANR	665418	Identifier	anal		664860	1					
ANR	665419	Argument	fcn		664860	1					
ANR	665420	Identifier	fcn		664860	0					
ANR	665421	Argument	'b'		664860	2					
ANR	665422	PrimaryExpression	'b'		664860	0					
ANR	665423	Argument	1		664860	3					
ANR	665424	PrimaryExpression	1		664860	0					
ANR	665425	ExpressionStatement	"args_count += r_anal_var_count ( core -> anal , fcn , 's' , 1 )"	3076:2:97120:97176	664860	1	True				
ANR	665426	AssignmentExpression	"args_count += r_anal_var_count ( core -> anal , fcn , 's' , 1 )"		664860	0		+=			
ANR	665427	Identifier	args_count		664860	0					
ANR	665428	CallExpression	"r_anal_var_count ( core -> anal , fcn , 's' , 1 )"		664860	1					
ANR	665429	Callee	r_anal_var_count		664860	0					
ANR	665430	Identifier	r_anal_var_count		664860	0					
ANR	665431	ArgumentList	core -> anal		664860	1					
ANR	665432	Argument	core -> anal		664860	0					
ANR	665433	PtrMemberAccess	core -> anal		664860	0					
ANR	665434	Identifier	core		664860	0					
ANR	665435	Identifier	anal		664860	1					
ANR	665436	Argument	fcn		664860	1					
ANR	665437	Identifier	fcn		664860	0					
ANR	665438	Argument	's'		664860	2					
ANR	665439	PrimaryExpression	's'		664860	0					
ANR	665440	Argument	1		664860	3					
ANR	665441	PrimaryExpression	1		664860	0					
ANR	665442	ExpressionStatement	"args_count += r_anal_var_count ( core -> anal , fcn , 'r' , 1 )"	3077:2:97180:97236	664860	2	True				
ANR	665443	AssignmentExpression	"args_count += r_anal_var_count ( core -> anal , fcn , 'r' , 1 )"		664860	0		+=			
ANR	665444	Identifier	args_count		664860	0					
ANR	665445	CallExpression	"r_anal_var_count ( core -> anal , fcn , 'r' , 1 )"		664860	1					
ANR	665446	Callee	r_anal_var_count		664860	0					
ANR	665447	Identifier	r_anal_var_count		664860	0					
ANR	665448	ArgumentList	core -> anal		664860	1					
ANR	665449	Argument	core -> anal		664860	0					
ANR	665450	PtrMemberAccess	core -> anal		664860	0					
ANR	665451	Identifier	core		664860	0					
ANR	665452	Identifier	anal		664860	1					
ANR	665453	Argument	fcn		664860	1					
ANR	665454	Identifier	fcn		664860	0					
ANR	665455	Argument	'r'		664860	2					
ANR	665456	PrimaryExpression	'r'		664860	0					
ANR	665457	Argument	1		664860	3					
ANR	665458	PrimaryExpression	1		664860	0					
ANR	665459	IdentifierDeclStatement	"int var_count = r_anal_var_count ( core -> anal , fcn , 'b' , 0 ) ;"	3078:2:97240:97298	664860	3	True				
ANR	665460	IdentifierDecl	"var_count = r_anal_var_count ( core -> anal , fcn , 'b' , 0 )"		664860	0					
ANR	665461	IdentifierDeclType	int		664860	0					
ANR	665462	Identifier	var_count		664860	1					
ANR	665463	AssignmentExpression	"var_count = r_anal_var_count ( core -> anal , fcn , 'b' , 0 )"		664860	2		=			
ANR	665464	Identifier	var_count		664860	0					
ANR	665465	CallExpression	"r_anal_var_count ( core -> anal , fcn , 'b' , 0 )"		664860	1					
ANR	665466	Callee	r_anal_var_count		664860	0					
ANR	665467	Identifier	r_anal_var_count		664860	0					
ANR	665468	ArgumentList	core -> anal		664860	1					
ANR	665469	Argument	core -> anal		664860	0					
ANR	665470	PtrMemberAccess	core -> anal		664860	0					
ANR	665471	Identifier	core		664860	0					
ANR	665472	Identifier	anal		664860	1					
ANR	665473	Argument	fcn		664860	1					
ANR	665474	Identifier	fcn		664860	0					
ANR	665475	Argument	'b'		664860	2					
ANR	665476	PrimaryExpression	'b'		664860	0					
ANR	665477	Argument	0		664860	3					
ANR	665478	PrimaryExpression	0		664860	0					
ANR	665479	ExpressionStatement	"var_count += r_anal_var_count ( core -> anal , fcn , 's' , 0 )"	3079:2:97302:97357	664860	4	True				
ANR	665480	AssignmentExpression	"var_count += r_anal_var_count ( core -> anal , fcn , 's' , 0 )"		664860	0		+=			
ANR	665481	Identifier	var_count		664860	0					
ANR	665482	CallExpression	"r_anal_var_count ( core -> anal , fcn , 's' , 0 )"		664860	1					
ANR	665483	Callee	r_anal_var_count		664860	0					
ANR	665484	Identifier	r_anal_var_count		664860	0					
ANR	665485	ArgumentList	core -> anal		664860	1					
ANR	665486	Argument	core -> anal		664860	0					
ANR	665487	PtrMemberAccess	core -> anal		664860	0					
ANR	665488	Identifier	core		664860	0					
ANR	665489	Identifier	anal		664860	1					
ANR	665490	Argument	fcn		664860	1					
ANR	665491	Identifier	fcn		664860	0					
ANR	665492	Argument	's'		664860	2					
ANR	665493	PrimaryExpression	's'		664860	0					
ANR	665494	Argument	0		664860	3					
ANR	665495	PrimaryExpression	0		664860	0					
ANR	665496	ExpressionStatement	"var_count += r_anal_var_count ( core -> anal , fcn , 'r' , 0 )"	3080:2:97361:97416	664860	5	True				
ANR	665497	AssignmentExpression	"var_count += r_anal_var_count ( core -> anal , fcn , 'r' , 0 )"		664860	0		+=			
ANR	665498	Identifier	var_count		664860	0					
ANR	665499	CallExpression	"r_anal_var_count ( core -> anal , fcn , 'r' , 0 )"		664860	1					
ANR	665500	Callee	r_anal_var_count		664860	0					
ANR	665501	Identifier	r_anal_var_count		664860	0					
ANR	665502	ArgumentList	core -> anal		664860	1					
ANR	665503	Argument	core -> anal		664860	0					
ANR	665504	PtrMemberAccess	core -> anal		664860	0					
ANR	665505	Identifier	core		664860	0					
ANR	665506	Identifier	anal		664860	1					
ANR	665507	Argument	fcn		664860	1					
ANR	665508	Identifier	fcn		664860	0					
ANR	665509	Argument	'r'		664860	2					
ANR	665510	PrimaryExpression	'r'		664860	0					
ANR	665511	Argument	0		664860	3					
ANR	665512	PrimaryExpression	0		664860	0					
ANR	665513	ExpressionStatement	"r_cons_printf ( ""\\nlocals: %d\\nargs: %d\\n"" , var_count , args_count )"	3082:2:97421:97486	664860	6	True				
ANR	665514	CallExpression	"r_cons_printf ( ""\\nlocals: %d\\nargs: %d\\n"" , var_count , args_count )"		664860	0					
ANR	665515	Callee	r_cons_printf		664860	0					
ANR	665516	Identifier	r_cons_printf		664860	0					
ANR	665517	ArgumentList	"""\\nlocals: %d\\nargs: %d\\n"""		664860	1					
ANR	665518	Argument	"""\\nlocals: %d\\nargs: %d\\n"""		664860	0					
ANR	665519	PrimaryExpression	"""\\nlocals: %d\\nargs: %d\\n"""		664860	0					
ANR	665520	Argument	var_count		664860	1					
ANR	665521	Identifier	var_count		664860	0					
ANR	665522	Argument	args_count		664860	2					
ANR	665523	Identifier	args_count		664860	0					
ANR	665524	ExpressionStatement	"r_anal_var_list_show ( core -> anal , fcn , 'b' , 0 , NULL )"	3083:2:97490:97542	664860	7	True				
ANR	665525	CallExpression	"r_anal_var_list_show ( core -> anal , fcn , 'b' , 0 , NULL )"		664860	0					
ANR	665526	Callee	r_anal_var_list_show		664860	0					
ANR	665527	Identifier	r_anal_var_list_show		664860	0					
ANR	665528	ArgumentList	core -> anal		664860	1					
ANR	665529	Argument	core -> anal		664860	0					
ANR	665530	PtrMemberAccess	core -> anal		664860	0					
ANR	665531	Identifier	core		664860	0					
ANR	665532	Identifier	anal		664860	1					
ANR	665533	Argument	fcn		664860	1					
ANR	665534	Identifier	fcn		664860	0					
ANR	665535	Argument	'b'		664860	2					
ANR	665536	PrimaryExpression	'b'		664860	0					
ANR	665537	Argument	0		664860	3					
ANR	665538	PrimaryExpression	0		664860	0					
ANR	665539	Argument	NULL		664860	4					
ANR	665540	Identifier	NULL		664860	0					
ANR	665541	ExpressionStatement	"r_anal_var_list_show ( core -> anal , fcn , 's' , 0 , NULL )"	3084:2:97546:97598	664860	8	True				
ANR	665542	CallExpression	"r_anal_var_list_show ( core -> anal , fcn , 's' , 0 , NULL )"		664860	0					
ANR	665543	Callee	r_anal_var_list_show		664860	0					
ANR	665544	Identifier	r_anal_var_list_show		664860	0					
ANR	665545	ArgumentList	core -> anal		664860	1					
ANR	665546	Argument	core -> anal		664860	0					
ANR	665547	PtrMemberAccess	core -> anal		664860	0					
ANR	665548	Identifier	core		664860	0					
ANR	665549	Identifier	anal		664860	1					
ANR	665550	Argument	fcn		664860	1					
ANR	665551	Identifier	fcn		664860	0					
ANR	665552	Argument	's'		664860	2					
ANR	665553	PrimaryExpression	's'		664860	0					
ANR	665554	Argument	0		664860	3					
ANR	665555	PrimaryExpression	0		664860	0					
ANR	665556	Argument	NULL		664860	4					
ANR	665557	Identifier	NULL		664860	0					
ANR	665558	ExpressionStatement	"r_anal_var_list_show ( core -> anal , fcn , 'r' , 0 , NULL )"	3085:2:97602:97654	664860	9	True				
ANR	665559	CallExpression	"r_anal_var_list_show ( core -> anal , fcn , 'r' , 0 , NULL )"		664860	0					
ANR	665560	Callee	r_anal_var_list_show		664860	0					
ANR	665561	Identifier	r_anal_var_list_show		664860	0					
ANR	665562	ArgumentList	core -> anal		664860	1					
ANR	665563	Argument	core -> anal		664860	0					
ANR	665564	PtrMemberAccess	core -> anal		664860	0					
ANR	665565	Identifier	core		664860	0					
ANR	665566	Identifier	anal		664860	1					
ANR	665567	Argument	fcn		664860	1					
ANR	665568	Identifier	fcn		664860	0					
ANR	665569	Argument	'r'		664860	2					
ANR	665570	PrimaryExpression	'r'		664860	0					
ANR	665571	Argument	0		664860	3					
ANR	665572	PrimaryExpression	0		664860	0					
ANR	665573	Argument	NULL		664860	4					
ANR	665574	Identifier	NULL		664860	0					
ANR	665575	ExpressionStatement	"r_cons_printf ( ""diff: type: %s"" , fcn -> diff -> type == R_ANAL_DIFF_TYPE_MATCH ? ""match"" : fcn -> diff -> type == R_ANAL_DIFF_TYPE_UNMATCH ? ""unmatch"" : ""new"" )"	3086:2:97658:97810	664860	10	True				
ANR	665576	CallExpression	"r_cons_printf ( ""diff: type: %s"" , fcn -> diff -> type == R_ANAL_DIFF_TYPE_MATCH ? ""match"" : fcn -> diff -> type == R_ANAL_DIFF_TYPE_UNMATCH ? ""unmatch"" : ""new"" )"		664860	0					
ANR	665577	Callee	r_cons_printf		664860	0					
ANR	665578	Identifier	r_cons_printf		664860	0					
ANR	665579	ArgumentList	"""diff: type: %s"""		664860	1					
ANR	665580	Argument	"""diff: type: %s"""		664860	0					
ANR	665581	PrimaryExpression	"""diff: type: %s"""		664860	0					
ANR	665582	Argument	"fcn -> diff -> type == R_ANAL_DIFF_TYPE_MATCH ? ""match"" : fcn -> diff -> type == R_ANAL_DIFF_TYPE_UNMATCH ? ""unmatch"" : ""new"""		664860	1					
ANR	665583	ConditionalExpression	"fcn -> diff -> type == R_ANAL_DIFF_TYPE_MATCH ? ""match"" : fcn -> diff -> type == R_ANAL_DIFF_TYPE_UNMATCH ? ""unmatch"" : ""new"""		664860	0					
ANR	665584	Condition	fcn -> diff -> type == R_ANAL_DIFF_TYPE_MATCH		664860	0					
ANR	665585	EqualityExpression	fcn -> diff -> type == R_ANAL_DIFF_TYPE_MATCH		664860	0		==			
ANR	665586	PtrMemberAccess	fcn -> diff -> type		664860	0					
ANR	665587	PtrMemberAccess	fcn -> diff		664860	0					
ANR	665588	Identifier	fcn		664860	0					
ANR	665589	Identifier	diff		664860	1					
ANR	665590	Identifier	type		664860	1					
ANR	665591	Identifier	R_ANAL_DIFF_TYPE_MATCH		664860	1					
ANR	665592	PrimaryExpression	"""match"""		664860	1					
ANR	665593	ConditionalExpression	"fcn -> diff -> type == R_ANAL_DIFF_TYPE_UNMATCH ? ""unmatch"" : ""new"""		664860	2					
ANR	665594	Condition	fcn -> diff -> type == R_ANAL_DIFF_TYPE_UNMATCH		664860	0					
ANR	665595	EqualityExpression	fcn -> diff -> type == R_ANAL_DIFF_TYPE_UNMATCH		664860	0		==			
ANR	665596	PtrMemberAccess	fcn -> diff -> type		664860	0					
ANR	665597	PtrMemberAccess	fcn -> diff		664860	0					
ANR	665598	Identifier	fcn		664860	0					
ANR	665599	Identifier	diff		664860	1					
ANR	665600	Identifier	type		664860	1					
ANR	665601	Identifier	R_ANAL_DIFF_TYPE_UNMATCH		664860	1					
ANR	665602	PrimaryExpression	"""unmatch"""		664860	1					
ANR	665603	PrimaryExpression	"""new"""		664860	2					
ANR	665604	IfStatement	if ( fcn -> diff -> addr != - 1 )		664860	11					
ANR	665605	Condition	fcn -> diff -> addr != - 1	3089:6:97818:97838	664860	0	True				
ANR	665606	EqualityExpression	fcn -> diff -> addr != - 1		664860	0		!=			
ANR	665607	PtrMemberAccess	fcn -> diff -> addr		664860	0					
ANR	665608	PtrMemberAccess	fcn -> diff		664860	0					
ANR	665609	Identifier	fcn		664860	0					
ANR	665610	Identifier	diff		664860	1					
ANR	665611	Identifier	addr		664860	1					
ANR	665612	UnaryOperationExpression	- 1		664860	1					
ANR	665613	UnaryOperator	-		664860	0					
ANR	665614	PrimaryExpression	1		664860	1					
ANR	665615	CompoundStatement		83:29:3260:3260	664860	1					
ANR	665616	Statement	r_cons_printf	3090:3:97846:97858	664860	0	True				
ANR	665617	Statement	(	3090:17:97860:97860	664860	1	True				
ANR	665618	Statement	"""addr: 0x%"""	3090:18:97861:97871	664860	2	True				
ANR	665619	Statement	PFMT64x	3090:29:97872:97878	664860	3	True				
ANR	665620	Statement	","	3090:36:97879:97879	664860	4	True				
ANR	665621	Statement	fcn	3090:38:97881:97883	664860	5	True				
ANR	665622	Statement	->	3090:41:97884:97885	664860	6	True				
ANR	665623	Statement	diff	3090:43:97886:97889	664860	7	True				
ANR	665624	Statement	->	3090:47:97890:97891	664860	8	True				
ANR	665625	Statement	addr	3090:49:97892:97895	664860	9	True				
ANR	665626	Statement	)	3090:53:97896:97896	664860	10	True				
ANR	665627	ExpressionStatement		3090:54:97897:97897	664860	11	True				
ANR	665628	IfStatement	if ( fcn -> diff -> name )		664860	12					
ANR	665629	Condition	fcn -> diff -> name	3092:6:97909:97923	664860	0	True				
ANR	665630	PtrMemberAccess	fcn -> diff -> name		664860	0					
ANR	665631	PtrMemberAccess	fcn -> diff		664860	0					
ANR	665632	Identifier	fcn		664860	0					
ANR	665633	Identifier	diff		664860	1					
ANR	665634	Identifier	name		664860	1					
ANR	665635	CompoundStatement		86:23:3345:3345	664860	1					
ANR	665636	ExpressionStatement	"r_cons_printf ( ""function: %s"" , fcn -> diff -> name )"	3093:3:97931:97978	664860	0	True				
ANR	665637	CallExpression	"r_cons_printf ( ""function: %s"" , fcn -> diff -> name )"		664860	0					
ANR	665638	Callee	r_cons_printf		664860	0					
ANR	665639	Identifier	r_cons_printf		664860	0					
ANR	665640	ArgumentList	"""function: %s"""		664860	1					
ANR	665641	Argument	"""function: %s"""		664860	0					
ANR	665642	PrimaryExpression	"""function: %s"""		664860	0					
ANR	665643	Argument	fcn -> diff -> name		664860	1					
ANR	665644	PtrMemberAccess	fcn -> diff -> name		664860	0					
ANR	665645	PtrMemberAccess	fcn -> diff		664860	0					
ANR	665646	Identifier	fcn		664860	0					
ANR	665647	Identifier	diff		664860	1					
ANR	665648	Identifier	name		664860	1					
ANR	665649	ExpressionStatement	free ( name )	3096:1:97988:97999	664860	88	True				
ANR	665650	CallExpression	free ( name )		664860	0					
ANR	665651	Callee	free		664860	0					
ANR	665652	Identifier	free		664860	0					
ANR	665653	ArgumentList	name		664860	1					
ANR	665654	Argument	name		664860	0					
ANR	665655	Identifier	name		664860	0					
ANR	665656	IfStatement	if ( core -> dbg -> trace -> enabled )		664860	89					
ANR	665657	Condition	core -> dbg -> trace -> enabled	3099:5:98018:98042	664860	0	True				
ANR	665658	PtrMemberAccess	core -> dbg -> trace -> enabled		664860	0					
ANR	665659	PtrMemberAccess	core -> dbg -> trace		664860	0					
ANR	665660	PtrMemberAccess	core -> dbg		664860	0					
ANR	665661	Identifier	core		664860	0					
ANR	665662	Identifier	dbg		664860	1					
ANR	665663	Identifier	trace		664860	1					
ANR	665664	Identifier	enabled		664860	1					
ANR	665665	CompoundStatement		93:32:3464:3464	664860	1					
ANR	665666	ExpressionStatement	"is_fcn_traced ( core -> dbg -> trace , fcn )"	3100:2:98049:98086	664860	0	True				
ANR	665667	CallExpression	"is_fcn_traced ( core -> dbg -> trace , fcn )"		664860	0					
ANR	665668	Callee	is_fcn_traced		664860	0					
ANR	665669	Identifier	is_fcn_traced		664860	0					
ANR	665670	ArgumentList	core -> dbg -> trace		664860	1					
ANR	665671	Argument	core -> dbg -> trace		664860	0					
ANR	665672	PtrMemberAccess	core -> dbg -> trace		664860	0					
ANR	665673	PtrMemberAccess	core -> dbg		664860	0					
ANR	665674	Identifier	core		664860	0					
ANR	665675	Identifier	dbg		664860	1					
ANR	665676	Identifier	trace		664860	1					
ANR	665677	Argument	fcn		664860	1					
ANR	665678	Identifier	fcn		664860	0					
ANR	665679	ReturnStatement	return 0 ;	3102:1:98092:98100	664860	90	True				
ANR	665680	PrimaryExpression	0		664860	0					
ANR	665681	ReturnType	static int		664860	1					
ANR	665682	Identifier	fcn_print_legacy		664860	2					
ANR	665683	ParameterList	"RCore * core , RAnalFunction * fcn"		664860	3					
ANR	665684	Parameter	RCore * core	3007:28:94547:94557	664860	0	True				
ANR	665685	ParameterType	RCore *		664860	0					
ANR	665686	Identifier	core		664860	1					
ANR	665687	Parameter	RAnalFunction * fcn	3007:41:94560:94577	664860	1	True				
ANR	665688	ParameterType	RAnalFunction *		664860	0					
ANR	665689	Identifier	fcn		664860	1					
ANR	665690	CFGEntryNode	ENTRY		664860		True				
ANR	665691	CFGExitNode	EXIT		664860		True				
ANR	665692	Symbol	ebbs		664860						
ANR	665693	Symbol	refi		664860						
ANR	665694	Symbol	* fcn		664860						
ANR	665695	Symbol	R_ANAL_FCN_TYPE_FCN		664860						
ANR	665696	Symbol	* core -> dbg -> trace		664860						
ANR	665697	Symbol	fcn -> bits		664860						
ANR	665698	Symbol	fcn -> diff		664860						
ANR	665699	Symbol	r_anal_var_count		664860						
ANR	665700	Symbol	r_anal_fcn_get_xrefs		664860						
ANR	665701	Symbol	R_ANAL_FCN_TYPE_SYM		664860						
ANR	665702	Symbol	indegree		664860						
ANR	665703	Symbol	& ebbs		664860						
ANR	665704	Symbol	fcn -> diff -> type		664860						
ANR	665705	Symbol	NULL		664860						
ANR	665706	Symbol	* * fcn		664860						
ANR	665707	Symbol	iter		664860						
ANR	665708	Symbol	R_ANAL_REF_TYPE_DATA		664860						
ANR	665709	Symbol	fcn -> type		664860						
ANR	665710	Symbol	R_ANAL_DIFF_TYPE_UNMATCH		664860						
ANR	665711	Symbol	r_anal_fcn_get_refs		664860						
ANR	665712	Symbol	core		664860						
ANR	665713	Symbol	* * * core		664860						
ANR	665714	Symbol	* fcn -> diff		664860						
ANR	665715	Symbol	core -> dbg -> trace -> enabled		664860						
ANR	665716	Symbol	r_anal_fcn_get_purity		664860						
ANR	665717	Symbol	name		664860						
ANR	665718	Symbol	args_count		664860						
ANR	665719	Symbol	* core -> dbg		664860						
ANR	665720	Symbol	r_anal_fcn_type_tostring		664860						
ANR	665721	Symbol	r_anal_fcn_cc		664860						
ANR	665722	Symbol	R_ANAL_DIFF_TYPE_MATCH		664860						
ANR	665723	Symbol	* core		664860						
ANR	665724	Symbol	core -> anal		664860						
ANR	665725	Symbol	fcn -> maxstack		664860						
ANR	665726	Symbol	* refi		664860						
ANR	665727	Symbol	fcn		664860						
ANR	665728	Symbol	r_anal_fcn_cost		664860						
ANR	665729	Symbol	var_count		664860						
ANR	665730	Symbol	r_anal_fcn_realsize		664860						
ANR	665731	Symbol	refi -> type		664860						
ANR	665732	Symbol	r_core_anal_fcn_name		664860						
ANR	665733	Symbol	outdegree		664860						
ANR	665734	Symbol	fcn -> cc		664860						
ANR	665735	Symbol	core -> dbg -> trace		664860						
ANR	665736	Symbol	R_ANAL_REF_TYPE_CALL		664860						
ANR	665737	Symbol	* * core		664860						
ANR	665738	Symbol	r_str_bool		664860						
ANR	665739	Symbol	fcn -> diff -> addr		664860						
ANR	665740	Symbol	xrefs		664860						
ANR	665741	Symbol	r_anal_fcn_count_edges		664860						
ANR	665742	Symbol	R_ANAL_REF_TYPE_CODE		664860						
ANR	665743	Symbol	refs		664860						
ANR	665744	Symbol	fcn -> bbs		664860						
ANR	665745	Symbol	fcn -> diff -> name		664860						
ANR	665746	Symbol	r_list_length		664860						
ANR	665747	Symbol	core -> dbg		664860						
ANR	665748	Symbol	* * core -> dbg		664860						
ANR	665749	Function	fcn_list_detail	3105:0:98105:98301							
ANR	665750	FunctionDef	"fcn_list_detail (RCore * core , RList * fcns)"		665749	0					
ANR	665751	CompoundStatement		3105:53:98158:98301	665749	0					
ANR	665752	IdentifierDeclStatement	RListIter * iter ;	3106:1:98161:98176	665749	0	True				
ANR	665753	IdentifierDecl	* iter		665749	0					
ANR	665754	IdentifierDeclType	RListIter *		665749	0					
ANR	665755	Identifier	iter		665749	1					
ANR	665756	IdentifierDeclStatement	RAnalFunction * fcn ;	3107:1:98179:98197	665749	1	True				
ANR	665757	IdentifierDecl	* fcn		665749	0					
ANR	665758	IdentifierDeclType	RAnalFunction *		665749	0					
ANR	665759	Identifier	fcn		665749	1					
ANR	665760	Statement	r_list_foreach	3108:1:98200:98213	665749	2	True				
ANR	665761	Statement	(	3108:16:98215:98215	665749	3	True				
ANR	665762	Statement	fcns	3108:17:98216:98219	665749	4	True				
ANR	665763	Statement	","	3108:21:98220:98220	665749	5	True				
ANR	665764	Statement	iter	3108:23:98222:98225	665749	6	True				
ANR	665765	Statement	","	3108:27:98226:98226	665749	7	True				
ANR	665766	Statement	fcn	3108:29:98228:98230	665749	8	True				
ANR	665767	Statement	)	3108:32:98231:98231	665749	9	True				
ANR	665768	CompoundStatement		4:34:74:74	665749	10					
ANR	665769	ExpressionStatement	"fcn_print_detail ( core , fcn )"	3109:2:98237:98265	665749	0	True				
ANR	665770	CallExpression	"fcn_print_detail ( core , fcn )"		665749	0					
ANR	665771	Callee	fcn_print_detail		665749	0					
ANR	665772	Identifier	fcn_print_detail		665749	0					
ANR	665773	ArgumentList	core		665749	1					
ANR	665774	Argument	core		665749	0					
ANR	665775	Identifier	core		665749	0					
ANR	665776	Argument	fcn		665749	1					
ANR	665777	Identifier	fcn		665749	0					
ANR	665778	ExpressionStatement	r_cons_newline ( )	3111:1:98271:98288	665749	11	True				
ANR	665779	CallExpression	r_cons_newline ( )		665749	0					
ANR	665780	Callee	r_cons_newline		665749	0					
ANR	665781	Identifier	r_cons_newline		665749	0					
ANR	665782	ArgumentList			665749	1					
ANR	665783	ReturnStatement	return 0 ;	3112:1:98291:98299	665749	12	True				
ANR	665784	PrimaryExpression	0		665749	0					
ANR	665785	ReturnType	static int		665749	1					
ANR	665786	Identifier	fcn_list_detail		665749	2					
ANR	665787	ParameterList	"RCore * core , RList * fcns"		665749	3					
ANR	665788	Parameter	RCore * core	3105:27:98132:98142	665749	0	True				
ANR	665789	ParameterType	RCore *		665749	0					
ANR	665790	Identifier	core		665749	1					
ANR	665791	Parameter	RList * fcns	3105:40:98145:98155	665749	1	True				
ANR	665792	ParameterType	RList *		665749	0					
ANR	665793	Identifier	fcns		665749	1					
ANR	665794	CFGEntryNode	ENTRY		665749		True				
ANR	665795	CFGExitNode	EXIT		665749		True				
ANR	665796	Symbol	fcn		665749						
ANR	665797	Symbol	core		665749						
ANR	665798	Symbol	iter		665749						
ANR	665799	Symbol	fcns		665749						
ANR	665800	Function	fcn_list_table	3115:0:98304:99964							
ANR	665801	FunctionDef	"fcn_list_table (RCore * core , const char * q , int fmt)"		665800	0					
ANR	665802	CompoundStatement		3115:63:98367:99964	665800	0					
ANR	665803	IdentifierDeclStatement	RAnalFunction * fcn ;	3116:1:98370:98388	665800	0	True				
ANR	665804	IdentifierDecl	* fcn		665800	0					
ANR	665805	IdentifierDeclType	RAnalFunction *		665800	0					
ANR	665806	Identifier	fcn		665800	1					
ANR	665807	IdentifierDeclStatement	RListIter * iter ;	3117:1:98391:98406	665800	1	True				
ANR	665808	IdentifierDecl	* iter		665800	0					
ANR	665809	IdentifierDeclType	RListIter *		665800	0					
ANR	665810	Identifier	iter		665800	1					
ANR	665811	IdentifierDeclStatement	RTable * t = r_table_new ( ) ;	3118:1:98409:98435	665800	2	True				
ANR	665812	IdentifierDecl	* t = r_table_new ( )		665800	0					
ANR	665813	IdentifierDeclType	RTable *		665800	0					
ANR	665814	Identifier	t		665800	1					
ANR	665815	AssignmentExpression	* t = r_table_new ( )		665800	2		=			
ANR	665816	Identifier	t		665800	0					
ANR	665817	CallExpression	r_table_new ( )		665800	1					
ANR	665818	Callee	r_table_new		665800	0					
ANR	665819	Identifier	r_table_new		665800	0					
ANR	665820	ArgumentList			665800	1					
ANR	665821	IdentifierDeclStatement	"RTableColumnType * typeString = r_table_type ( ""string"" ) ;"	3119:1:98438:98492	665800	3	True				
ANR	665822	IdentifierDecl	"* typeString = r_table_type ( ""string"" )"		665800	0					
ANR	665823	IdentifierDeclType	RTableColumnType *		665800	0					
ANR	665824	Identifier	typeString		665800	1					
ANR	665825	AssignmentExpression	"* typeString = r_table_type ( ""string"" )"		665800	2		=			
ANR	665826	Identifier	typeString		665800	0					
ANR	665827	CallExpression	"r_table_type ( ""string"" )"		665800	1					
ANR	665828	Callee	r_table_type		665800	0					
ANR	665829	Identifier	r_table_type		665800	0					
ANR	665830	ArgumentList	"""string"""		665800	1					
ANR	665831	Argument	"""string"""		665800	0					
ANR	665832	PrimaryExpression	"""string"""		665800	0					
ANR	665833	IdentifierDeclStatement	"RTableColumnType * typeNumber = r_table_type ( ""number"" ) ;"	3120:1:98495:98549	665800	4	True				
ANR	665834	IdentifierDecl	"* typeNumber = r_table_type ( ""number"" )"		665800	0					
ANR	665835	IdentifierDeclType	RTableColumnType *		665800	0					
ANR	665836	Identifier	typeNumber		665800	1					
ANR	665837	AssignmentExpression	"* typeNumber = r_table_type ( ""number"" )"		665800	2		=			
ANR	665838	Identifier	typeNumber		665800	0					
ANR	665839	CallExpression	"r_table_type ( ""number"" )"		665800	1					
ANR	665840	Callee	r_table_type		665800	0					
ANR	665841	Identifier	r_table_type		665800	0					
ANR	665842	ArgumentList	"""number"""		665800	1					
ANR	665843	Argument	"""number"""		665800	0					
ANR	665844	PrimaryExpression	"""number"""		665800	0					
ANR	665845	ExpressionStatement	"r_table_add_column ( t , typeNumber , ""addr"" , 0 )"	3121:1:98552:98597	665800	5	True				
ANR	665846	CallExpression	"r_table_add_column ( t , typeNumber , ""addr"" , 0 )"		665800	0					
ANR	665847	Callee	r_table_add_column		665800	0					
ANR	665848	Identifier	r_table_add_column		665800	0					
ANR	665849	ArgumentList	t		665800	1					
ANR	665850	Argument	t		665800	0					
ANR	665851	Identifier	t		665800	0					
ANR	665852	Argument	typeNumber		665800	1					
ANR	665853	Identifier	typeNumber		665800	0					
ANR	665854	Argument	"""addr"""		665800	2					
ANR	665855	PrimaryExpression	"""addr"""		665800	0					
ANR	665856	Argument	0		665800	3					
ANR	665857	PrimaryExpression	0		665800	0					
ANR	665858	ExpressionStatement	"r_table_add_column ( t , typeNumber , ""size"" , 0 )"	3122:1:98600:98645	665800	6	True				
ANR	665859	CallExpression	"r_table_add_column ( t , typeNumber , ""size"" , 0 )"		665800	0					
ANR	665860	Callee	r_table_add_column		665800	0					
ANR	665861	Identifier	r_table_add_column		665800	0					
ANR	665862	ArgumentList	t		665800	1					
ANR	665863	Argument	t		665800	0					
ANR	665864	Identifier	t		665800	0					
ANR	665865	Argument	typeNumber		665800	1					
ANR	665866	Identifier	typeNumber		665800	0					
ANR	665867	Argument	"""size"""		665800	2					
ANR	665868	PrimaryExpression	"""size"""		665800	0					
ANR	665869	Argument	0		665800	3					
ANR	665870	PrimaryExpression	0		665800	0					
ANR	665871	ExpressionStatement	"r_table_add_column ( t , typeString , ""name"" , 0 )"	3123:1:98648:98693	665800	7	True				
ANR	665872	CallExpression	"r_table_add_column ( t , typeString , ""name"" , 0 )"		665800	0					
ANR	665873	Callee	r_table_add_column		665800	0					
ANR	665874	Identifier	r_table_add_column		665800	0					
ANR	665875	ArgumentList	t		665800	1					
ANR	665876	Argument	t		665800	0					
ANR	665877	Identifier	t		665800	0					
ANR	665878	Argument	typeString		665800	1					
ANR	665879	Identifier	typeString		665800	0					
ANR	665880	Argument	"""name"""		665800	2					
ANR	665881	PrimaryExpression	"""name"""		665800	0					
ANR	665882	Argument	0		665800	3					
ANR	665883	PrimaryExpression	0		665800	0					
ANR	665884	ExpressionStatement	"r_table_add_column ( t , typeNumber , ""nbbs"" , 0 )"	3124:1:98696:98741	665800	8	True				
ANR	665885	CallExpression	"r_table_add_column ( t , typeNumber , ""nbbs"" , 0 )"		665800	0					
ANR	665886	Callee	r_table_add_column		665800	0					
ANR	665887	Identifier	r_table_add_column		665800	0					
ANR	665888	ArgumentList	t		665800	1					
ANR	665889	Argument	t		665800	0					
ANR	665890	Identifier	t		665800	0					
ANR	665891	Argument	typeNumber		665800	1					
ANR	665892	Identifier	typeNumber		665800	0					
ANR	665893	Argument	"""nbbs"""		665800	2					
ANR	665894	PrimaryExpression	"""nbbs"""		665800	0					
ANR	665895	Argument	0		665800	3					
ANR	665896	PrimaryExpression	0		665800	0					
ANR	665897	ExpressionStatement	"r_table_add_column ( t , typeNumber , ""xref"" , 0 )"	3125:1:98744:98789	665800	9	True				
ANR	665898	CallExpression	"r_table_add_column ( t , typeNumber , ""xref"" , 0 )"		665800	0					
ANR	665899	Callee	r_table_add_column		665800	0					
ANR	665900	Identifier	r_table_add_column		665800	0					
ANR	665901	ArgumentList	t		665800	1					
ANR	665902	Argument	t		665800	0					
ANR	665903	Identifier	t		665800	0					
ANR	665904	Argument	typeNumber		665800	1					
ANR	665905	Identifier	typeNumber		665800	0					
ANR	665906	Argument	"""xref"""		665800	2					
ANR	665907	PrimaryExpression	"""xref"""		665800	0					
ANR	665908	Argument	0		665800	3					
ANR	665909	PrimaryExpression	0		665800	0					
ANR	665910	ExpressionStatement	"r_table_add_column ( t , typeNumber , ""calls"" , 0 )"	3126:1:98792:98838	665800	10	True				
ANR	665911	CallExpression	"r_table_add_column ( t , typeNumber , ""calls"" , 0 )"		665800	0					
ANR	665912	Callee	r_table_add_column		665800	0					
ANR	665913	Identifier	r_table_add_column		665800	0					
ANR	665914	ArgumentList	t		665800	1					
ANR	665915	Argument	t		665800	0					
ANR	665916	Identifier	t		665800	0					
ANR	665917	Argument	typeNumber		665800	1					
ANR	665918	Identifier	typeNumber		665800	0					
ANR	665919	Argument	"""calls"""		665800	2					
ANR	665920	PrimaryExpression	"""calls"""		665800	0					
ANR	665921	Argument	0		665800	3					
ANR	665922	PrimaryExpression	0		665800	0					
ANR	665923	ExpressionStatement	"r_table_add_column ( t , typeNumber , ""cc"" , 0 )"	3127:1:98841:98884	665800	11	True				
ANR	665924	CallExpression	"r_table_add_column ( t , typeNumber , ""cc"" , 0 )"		665800	0					
ANR	665925	Callee	r_table_add_column		665800	0					
ANR	665926	Identifier	r_table_add_column		665800	0					
ANR	665927	ArgumentList	t		665800	1					
ANR	665928	Argument	t		665800	0					
ANR	665929	Identifier	t		665800	0					
ANR	665930	Argument	typeNumber		665800	1					
ANR	665931	Identifier	typeNumber		665800	0					
ANR	665932	Argument	"""cc"""		665800	2					
ANR	665933	PrimaryExpression	"""cc"""		665800	0					
ANR	665934	Argument	0		665800	3					
ANR	665935	PrimaryExpression	0		665800	0					
ANR	665936	Statement	r_list_foreach	3128:1:98887:98900	665800	12	True				
ANR	665937	Statement	(	3128:16:98902:98902	665800	13	True				
ANR	665938	Statement	core	3128:17:98903:98906	665800	14	True				
ANR	665939	Statement	->	3128:21:98907:98908	665800	15	True				
ANR	665940	Statement	anal	3128:23:98909:98912	665800	16	True				
ANR	665941	Statement	->	3128:27:98913:98914	665800	17	True				
ANR	665942	Statement	fcns	3128:29:98915:98918	665800	18	True				
ANR	665943	Statement	","	3128:33:98919:98919	665800	19	True				
ANR	665944	Statement	iter	3128:35:98921:98924	665800	20	True				
ANR	665945	Statement	","	3128:39:98925:98925	665800	21	True				
ANR	665946	Statement	fcn	3128:41:98927:98929	665800	22	True				
ANR	665947	Statement	)	3128:44:98930:98930	665800	23	True				
ANR	665948	CompoundStatement		26:2:1111:1170	665800	24					
ANR	665949	Statement	const	3129:2:98936:98940	665800	0	True				
ANR	665950	Statement	char	3129:8:98942:98945	665800	1	True				
ANR	665951	Statement	*	3129:13:98947:98947	665800	2	True				
ANR	665952	Statement	fcnAddr	3129:14:98948:98954	665800	3	True				
ANR	665953	Statement	=	3129:22:98956:98956	665800	4	True				
ANR	665954	Statement	sdb_fmt	3129:24:98958:98964	665800	5	True				
ANR	665955	Statement	(	3129:32:98966:98966	665800	6	True				
ANR	665956	Statement	"""0x%08"""	3129:33:98967:98973	665800	7	True				
ANR	665957	Statement	PFMT64x	3129:40:98974:98980	665800	8	True				
ANR	665958	Statement	","	3129:47:98981:98981	665800	9	True				
ANR	665959	Statement	fcn	3129:49:98983:98985	665800	10	True				
ANR	665960	Statement	->	3129:52:98986:98987	665800	11	True				
ANR	665961	Statement	addr	3129:54:98988:98991	665800	12	True				
ANR	665962	Statement	)	3129:58:98992:98992	665800	13	True				
ANR	665963	ExpressionStatement		3129:59:98993:98993	665800	14	True				
ANR	665964	IdentifierDeclStatement	"const char * fcnSize = sdb_fmt ( ""%d"" , r_anal_fcn_size ( fcn ) ) ;"	3130:2:98997:99056	665800	15	True				
ANR	665965	IdentifierDecl	"* fcnSize = sdb_fmt ( ""%d"" , r_anal_fcn_size ( fcn ) )"		665800	0					
ANR	665966	IdentifierDeclType	const char *		665800	0					
ANR	665967	Identifier	fcnSize		665800	1					
ANR	665968	AssignmentExpression	"* fcnSize = sdb_fmt ( ""%d"" , r_anal_fcn_size ( fcn ) )"		665800	2		=			
ANR	665969	Identifier	fcnSize		665800	0					
ANR	665970	CallExpression	"sdb_fmt ( ""%d"" , r_anal_fcn_size ( fcn ) )"		665800	1					
ANR	665971	Callee	sdb_fmt		665800	0					
ANR	665972	Identifier	sdb_fmt		665800	0					
ANR	665973	ArgumentList	"""%d"""		665800	1					
ANR	665974	Argument	"""%d"""		665800	0					
ANR	665975	PrimaryExpression	"""%d"""		665800	0					
ANR	665976	Argument	r_anal_fcn_size ( fcn )		665800	1					
ANR	665977	CallExpression	r_anal_fcn_size ( fcn )		665800	0					
ANR	665978	Callee	r_anal_fcn_size		665800	0					
ANR	665979	Identifier	r_anal_fcn_size		665800	0					
ANR	665980	ArgumentList	fcn		665800	1					
ANR	665981	Argument	fcn		665800	0					
ANR	665982	Identifier	fcn		665800	0					
ANR	665983	IdentifierDeclStatement	"const char * nbbs = sdb_fmt ( ""%d"" , r_list_length ( fcn -> bbs ) ) ;"	3131:2:99060:99119	665800	16	True				
ANR	665984	IdentifierDecl	"* nbbs = sdb_fmt ( ""%d"" , r_list_length ( fcn -> bbs ) )"		665800	0					
ANR	665985	IdentifierDeclType	const char *		665800	0					
ANR	665986	Identifier	nbbs		665800	1					
ANR	665987	AssignmentExpression	"* nbbs = sdb_fmt ( ""%d"" , r_list_length ( fcn -> bbs ) )"		665800	2		=			
ANR	665988	Identifier	nbbs		665800	0					
ANR	665989	CallExpression	"sdb_fmt ( ""%d"" , r_list_length ( fcn -> bbs ) )"		665800	1					
ANR	665990	Callee	sdb_fmt		665800	0					
ANR	665991	Identifier	sdb_fmt		665800	0					
ANR	665992	ArgumentList	"""%d"""		665800	1					
ANR	665993	Argument	"""%d"""		665800	0					
ANR	665994	PrimaryExpression	"""%d"""		665800	0					
ANR	665995	Argument	r_list_length ( fcn -> bbs )		665800	1					
ANR	665996	CallExpression	r_list_length ( fcn -> bbs )		665800	0					
ANR	665997	Callee	r_list_length		665800	0					
ANR	665998	Identifier	r_list_length		665800	0					
ANR	665999	ArgumentList	fcn -> bbs		665800	1					
ANR	666000	Argument	fcn -> bbs		665800	0					
ANR	666001	PtrMemberAccess	fcn -> bbs		665800	0					
ANR	666002	Identifier	fcn		665800	0					
ANR	666003	Identifier	bbs		665800	1					
ANR	666004	IdentifierDeclStatement	"RList * xrefs = r_anal_fcn_get_xrefs ( core -> anal , fcn ) ;"	3132:2:99150:99203	665800	17	True				
ANR	666005	IdentifierDecl	"* xrefs = r_anal_fcn_get_xrefs ( core -> anal , fcn )"		665800	0					
ANR	666006	IdentifierDeclType	RList *		665800	0					
ANR	666007	Identifier	xrefs		665800	1					
ANR	666008	AssignmentExpression	"* xrefs = r_anal_fcn_get_xrefs ( core -> anal , fcn )"		665800	2		=			
ANR	666009	Identifier	xrefs		665800	0					
ANR	666010	CallExpression	"r_anal_fcn_get_xrefs ( core -> anal , fcn )"		665800	1					
ANR	666011	Callee	r_anal_fcn_get_xrefs		665800	0					
ANR	666012	Identifier	r_anal_fcn_get_xrefs		665800	0					
ANR	666013	ArgumentList	core -> anal		665800	1					
ANR	666014	Argument	core -> anal		665800	0					
ANR	666015	PtrMemberAccess	core -> anal		665800	0					
ANR	666016	Identifier	core		665800	0					
ANR	666017	Identifier	anal		665800	1					
ANR	666018	Argument	fcn		665800	1					
ANR	666019	Identifier	fcn		665800	0					
ANR	666020	IdentifierDeclStatement	"char xref [ 128 ] , ccstr [ 128 ] ;"	3133:2:99207:99233	665800	18	True				
ANR	666021	IdentifierDecl	xref [ 128 ]		665800	0					
ANR	666022	IdentifierDeclType	char [ 128 ]		665800	0					
ANR	666023	Identifier	xref		665800	1					
ANR	666024	PrimaryExpression	128		665800	2					
ANR	666025	IdentifierDecl	ccstr [ 128 ]		665800	1					
ANR	666026	IdentifierDeclType	char [ 128 ]		665800	0					
ANR	666027	Identifier	ccstr		665800	1					
ANR	666028	PrimaryExpression	128		665800	2					
ANR	666029	ExpressionStatement	"snprintf ( xref , sizeof ( xref ) , ""%d"" , r_list_length ( xrefs ) )"	3134:2:99237:99296	665800	19	True				
ANR	666030	CallExpression	"snprintf ( xref , sizeof ( xref ) , ""%d"" , r_list_length ( xrefs ) )"		665800	0					
ANR	666031	Callee	snprintf		665800	0					
ANR	666032	Identifier	snprintf		665800	0					
ANR	666033	ArgumentList	xref		665800	1					
ANR	666034	Argument	xref		665800	0					
ANR	666035	Identifier	xref		665800	0					
ANR	666036	Argument	sizeof ( xref )		665800	1					
ANR	666037	SizeofExpression	sizeof ( xref )		665800	0					
ANR	666038	Sizeof	sizeof		665800	0					
ANR	666039	SizeofOperand	xref		665800	1					
ANR	666040	Argument	"""%d"""		665800	2					
ANR	666041	PrimaryExpression	"""%d"""		665800	0					
ANR	666042	Argument	r_list_length ( xrefs )		665800	3					
ANR	666043	CallExpression	r_list_length ( xrefs )		665800	0					
ANR	666044	Callee	r_list_length		665800	0					
ANR	666045	Identifier	r_list_length		665800	0					
ANR	666046	ArgumentList	xrefs		665800	1					
ANR	666047	Argument	xrefs		665800	0					
ANR	666048	Identifier	xrefs		665800	0					
ANR	666049	ExpressionStatement	r_list_free ( xrefs )	3135:2:99300:99319	665800	20	True				
ANR	666050	CallExpression	r_list_free ( xrefs )		665800	0					
ANR	666051	Callee	r_list_free		665800	0					
ANR	666052	Identifier	r_list_free		665800	0					
ANR	666053	ArgumentList	xrefs		665800	1					
ANR	666054	Argument	xrefs		665800	0					
ANR	666055	Identifier	xrefs		665800	0					
ANR	666056	IdentifierDeclStatement	"RList * calls = r_core_anal_fcn_get_calls ( core , fcn ) ;"	3137:2:99324:99377	665800	21	True				
ANR	666057	IdentifierDecl	"* calls = r_core_anal_fcn_get_calls ( core , fcn )"		665800	0					
ANR	666058	IdentifierDeclType	RList *		665800	0					
ANR	666059	Identifier	calls		665800	1					
ANR	666060	AssignmentExpression	"* calls = r_core_anal_fcn_get_calls ( core , fcn )"		665800	2		=			
ANR	666061	Identifier	calls		665800	0					
ANR	666062	CallExpression	"r_core_anal_fcn_get_calls ( core , fcn )"		665800	1					
ANR	666063	Callee	r_core_anal_fcn_get_calls		665800	0					
ANR	666064	Identifier	r_core_anal_fcn_get_calls		665800	0					
ANR	666065	ArgumentList	core		665800	1					
ANR	666066	Argument	core		665800	0					
ANR	666067	Identifier	core		665800	0					
ANR	666068	Argument	fcn		665800	1					
ANR	666069	Identifier	fcn		665800	0					
ANR	666070	ExpressionStatement	"calls = r_list_uniq ( calls , ( RListComparator ) RAnalRef_cmp )"	3139:2:99417:99475	665800	22	True				
ANR	666071	AssignmentExpression	"calls = r_list_uniq ( calls , ( RListComparator ) RAnalRef_cmp )"		665800	0		=			
ANR	666072	Identifier	calls		665800	0					
ANR	666073	CallExpression	"r_list_uniq ( calls , ( RListComparator ) RAnalRef_cmp )"		665800	1					
ANR	666074	Callee	r_list_uniq		665800	0					
ANR	666075	Identifier	r_list_uniq		665800	0					
ANR	666076	ArgumentList	calls		665800	1					
ANR	666077	Argument	calls		665800	0					
ANR	666078	Identifier	calls		665800	0					
ANR	666079	Argument	( RListComparator ) RAnalRef_cmp		665800	1					
ANR	666080	CastExpression	( RListComparator ) RAnalRef_cmp		665800	0					
ANR	666081	CastTarget	RListComparator		665800	0					
ANR	666082	Identifier	RAnalRef_cmp		665800	1					
ANR	666083	IdentifierDeclStatement	"const char * callstr = sdb_fmt ( ""%d"" , r_list_length ( calls ) ) ;"	3140:2:99479:99538	665800	23	True				
ANR	666084	IdentifierDecl	"* callstr = sdb_fmt ( ""%d"" , r_list_length ( calls ) )"		665800	0					
ANR	666085	IdentifierDeclType	const char *		665800	0					
ANR	666086	Identifier	callstr		665800	1					
ANR	666087	AssignmentExpression	"* callstr = sdb_fmt ( ""%d"" , r_list_length ( calls ) )"		665800	2		=			
ANR	666088	Identifier	callstr		665800	0					
ANR	666089	CallExpression	"sdb_fmt ( ""%d"" , r_list_length ( calls ) )"		665800	1					
ANR	666090	Callee	sdb_fmt		665800	0					
ANR	666091	Identifier	sdb_fmt		665800	0					
ANR	666092	ArgumentList	"""%d"""		665800	1					
ANR	666093	Argument	"""%d"""		665800	0					
ANR	666094	PrimaryExpression	"""%d"""		665800	0					
ANR	666095	Argument	r_list_length ( calls )		665800	1					
ANR	666096	CallExpression	r_list_length ( calls )		665800	0					
ANR	666097	Callee	r_list_length		665800	0					
ANR	666098	Identifier	r_list_length		665800	0					
ANR	666099	ArgumentList	calls		665800	1					
ANR	666100	Argument	calls		665800	0					
ANR	666101	Identifier	calls		665800	0					
ANR	666102	ExpressionStatement	r_list_free ( calls )	3141:2:99542:99561	665800	24	True				
ANR	666103	CallExpression	r_list_free ( calls )		665800	0					
ANR	666104	Callee	r_list_free		665800	0					
ANR	666105	Identifier	r_list_free		665800	0					
ANR	666106	ArgumentList	calls		665800	1					
ANR	666107	Argument	calls		665800	0					
ANR	666108	Identifier	calls		665800	0					
ANR	666109	ExpressionStatement	"snprintf ( ccstr , sizeof ( ccstr ) , ""%d"" , r_anal_fcn_cc ( core -> anal , fcn ) )"	3142:2:99565:99636	665800	25	True				
ANR	666110	CallExpression	"snprintf ( ccstr , sizeof ( ccstr ) , ""%d"" , r_anal_fcn_cc ( core -> anal , fcn ) )"		665800	0					
ANR	666111	Callee	snprintf		665800	0					
ANR	666112	Identifier	snprintf		665800	0					
ANR	666113	ArgumentList	ccstr		665800	1					
ANR	666114	Argument	ccstr		665800	0					
ANR	666115	Identifier	ccstr		665800	0					
ANR	666116	Argument	sizeof ( ccstr )		665800	1					
ANR	666117	SizeofExpression	sizeof ( ccstr )		665800	0					
ANR	666118	Sizeof	sizeof		665800	0					
ANR	666119	SizeofOperand	ccstr		665800	1					
ANR	666120	Argument	"""%d"""		665800	2					
ANR	666121	PrimaryExpression	"""%d"""		665800	0					
ANR	666122	Argument	"r_anal_fcn_cc ( core -> anal , fcn )"		665800	3					
ANR	666123	CallExpression	"r_anal_fcn_cc ( core -> anal , fcn )"		665800	0					
ANR	666124	Callee	r_anal_fcn_cc		665800	0					
ANR	666125	Identifier	r_anal_fcn_cc		665800	0					
ANR	666126	ArgumentList	core -> anal		665800	1					
ANR	666127	Argument	core -> anal		665800	0					
ANR	666128	PtrMemberAccess	core -> anal		665800	0					
ANR	666129	Identifier	core		665800	0					
ANR	666130	Identifier	anal		665800	1					
ANR	666131	Argument	fcn		665800	1					
ANR	666132	Identifier	fcn		665800	0					
ANR	666133	ExpressionStatement	"r_table_add_row ( t , fcnAddr , fcnSize , fcn -> name , nbbs , xref , callstr , ccstr , NULL )"	3144:2:99641:99723	665800	26	True				
ANR	666134	CallExpression	"r_table_add_row ( t , fcnAddr , fcnSize , fcn -> name , nbbs , xref , callstr , ccstr , NULL )"		665800	0					
ANR	666135	Callee	r_table_add_row		665800	0					
ANR	666136	Identifier	r_table_add_row		665800	0					
ANR	666137	ArgumentList	t		665800	1					
ANR	666138	Argument	t		665800	0					
ANR	666139	Identifier	t		665800	0					
ANR	666140	Argument	fcnAddr		665800	1					
ANR	666141	Identifier	fcnAddr		665800	0					
ANR	666142	Argument	fcnSize		665800	2					
ANR	666143	Identifier	fcnSize		665800	0					
ANR	666144	Argument	fcn -> name		665800	3					
ANR	666145	PtrMemberAccess	fcn -> name		665800	0					
ANR	666146	Identifier	fcn		665800	0					
ANR	666147	Identifier	name		665800	1					
ANR	666148	Argument	nbbs		665800	4					
ANR	666149	Identifier	nbbs		665800	0					
ANR	666150	Argument	xref		665800	5					
ANR	666151	Identifier	xref		665800	0					
ANR	666152	Argument	callstr		665800	6					
ANR	666153	Identifier	callstr		665800	0					
ANR	666154	Argument	ccstr		665800	7					
ANR	666155	Identifier	ccstr		665800	0					
ANR	666156	Argument	NULL		665800	8					
ANR	666157	Identifier	NULL		665800	0					
ANR	666158	ExpressionStatement	"r_table_query ( t , q )"	3146:1:99729:99749	665800	25	True				
ANR	666159	CallExpression	"r_table_query ( t , q )"		665800	0					
ANR	666160	Callee	r_table_query		665800	0					
ANR	666161	Identifier	r_table_query		665800	0					
ANR	666162	ArgumentList	t		665800	1					
ANR	666163	Argument	t		665800	0					
ANR	666164	Identifier	t		665800	0					
ANR	666165	Argument	q		665800	1					
ANR	666166	Identifier	q		665800	0					
ANR	666167	IdentifierDeclStatement	char * s = NULL ;	3147:1:99752:99766	665800	26	True				
ANR	666168	IdentifierDecl	* s = NULL		665800	0					
ANR	666169	IdentifierDeclType	char *		665800	0					
ANR	666170	Identifier	s		665800	1					
ANR	666171	AssignmentExpression	* s = NULL		665800	2		=			
ANR	666172	Identifier	NULL		665800	0					
ANR	666173	Identifier	NULL		665800	1					
ANR	666174	IfStatement	if ( fmt == 'j' )		665800	27					
ANR	666175	Condition	fmt == 'j'	3148:5:99773:99782	665800	0	True				
ANR	666176	EqualityExpression	fmt == 'j'		665800	0		==			
ANR	666177	Identifier	fmt		665800	0					
ANR	666178	PrimaryExpression	'j'		665800	1					
ANR	666179	CompoundStatement		34:17:1417:1417	665800	1					
ANR	666180	ExpressionStatement	s = r_table_tojson ( t )	3149:2:99789:99811	665800	0	True				
ANR	666181	AssignmentExpression	s = r_table_tojson ( t )		665800	0		=			
ANR	666182	Identifier	s		665800	0					
ANR	666183	CallExpression	r_table_tojson ( t )		665800	1					
ANR	666184	Callee	r_table_tojson		665800	0					
ANR	666185	Identifier	r_table_tojson		665800	0					
ANR	666186	ArgumentList	t		665800	1					
ANR	666187	Argument	t		665800	0					
ANR	666188	Identifier	t		665800	0					
ANR	666189	ElseStatement	else		665800	0					
ANR	666190	CompoundStatement		36:8:1453:1453	665800	0					
ANR	666191	ExpressionStatement	s = r_table_tofancystring ( t )	3151:2:99825:99854	665800	0	True				
ANR	666192	AssignmentExpression	s = r_table_tofancystring ( t )		665800	0		=			
ANR	666193	Identifier	s		665800	0					
ANR	666194	CallExpression	r_table_tofancystring ( t )		665800	1					
ANR	666195	Callee	r_table_tofancystring		665800	0					
ANR	666196	Identifier	r_table_tofancystring		665800	0					
ANR	666197	ArgumentList	t		665800	1					
ANR	666198	Argument	t		665800	0					
ANR	666199	Identifier	t		665800	0					
ANR	666200	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , s )"	3154:1:99896:99921	665800	28	True				
ANR	666201	CallExpression	"r_cons_printf ( ""%s\\n"" , s )"		665800	0					
ANR	666202	Callee	r_cons_printf		665800	0					
ANR	666203	Identifier	r_cons_printf		665800	0					
ANR	666204	ArgumentList	"""%s\\n"""		665800	1					
ANR	666205	Argument	"""%s\\n"""		665800	0					
ANR	666206	PrimaryExpression	"""%s\\n"""		665800	0					
ANR	666207	Argument	s		665800	1					
ANR	666208	Identifier	s		665800	0					
ANR	666209	ExpressionStatement	free ( s )	3155:1:99924:99932	665800	29	True				
ANR	666210	CallExpression	free ( s )		665800	0					
ANR	666211	Callee	free		665800	0					
ANR	666212	Identifier	free		665800	0					
ANR	666213	ArgumentList	s		665800	1					
ANR	666214	Argument	s		665800	0					
ANR	666215	Identifier	s		665800	0					
ANR	666216	ExpressionStatement	r_table_free ( t )	3156:1:99935:99951	665800	30	True				
ANR	666217	CallExpression	r_table_free ( t )		665800	0					
ANR	666218	Callee	r_table_free		665800	0					
ANR	666219	Identifier	r_table_free		665800	0					
ANR	666220	ArgumentList	t		665800	1					
ANR	666221	Argument	t		665800	0					
ANR	666222	Identifier	t		665800	0					
ANR	666223	ReturnStatement	return 0 ;	3157:1:99954:99962	665800	31	True				
ANR	666224	PrimaryExpression	0		665800	0					
ANR	666225	ReturnType	static int		665800	1					
ANR	666226	Identifier	fcn_list_table		665800	2					
ANR	666227	ParameterList	"RCore * core , const char * q , int fmt"		665800	3					
ANR	666228	Parameter	RCore * core	3115:26:98330:98340	665800	0	True				
ANR	666229	ParameterType	RCore *		665800	0					
ANR	666230	Identifier	core		665800	1					
ANR	666231	Parameter	const char * q	3115:39:98343:98355	665800	1	True				
ANR	666232	ParameterType	const char *		665800	0					
ANR	666233	Identifier	q		665800	1					
ANR	666234	Parameter	int fmt	3115:54:98358:98364	665800	2	True				
ANR	666235	ParameterType	int		665800	0					
ANR	666236	Identifier	fmt		665800	1					
ANR	666237	CFGEntryNode	ENTRY		665800		True				
ANR	666238	CFGExitNode	EXIT		665800		True				
ANR	666239	Symbol	* fcn		665800						
ANR	666240	Symbol	r_anal_fcn_size		665800						
ANR	666241	Symbol	r_anal_fcn_cc		665800						
ANR	666242	Symbol	fcn -> name		665800						
ANR	666243	Symbol	* core		665800						
ANR	666244	Symbol	fmt		665800						
ANR	666245	Symbol	core -> anal		665800						
ANR	666246	Symbol	fcn		665800						
ANR	666247	Symbol	fcnSize		665800						
ANR	666248	Symbol	r_table_tofancystring		665800						
ANR	666249	Symbol	typeNumber		665800						
ANR	666250	Symbol	r_list_uniq		665800						
ANR	666251	Symbol	typeString		665800						
ANR	666252	Symbol	r_anal_fcn_get_xrefs		665800						
ANR	666253	Symbol	r_core_anal_fcn_get_calls		665800						
ANR	666254	Symbol	sdb_fmt		665800						
ANR	666255	Symbol	callstr		665800						
ANR	666256	Symbol	xref		665800						
ANR	666257	Symbol	NULL		665800						
ANR	666258	Symbol	RAnalRef_cmp		665800						
ANR	666259	Symbol	xrefs		665800						
ANR	666260	Symbol	iter		665800						
ANR	666261	Symbol	r_table_tojson		665800						
ANR	666262	Symbol	ccstr		665800						
ANR	666263	Symbol	core		665800						
ANR	666264	Symbol	q		665800						
ANR	666265	Symbol	s		665800						
ANR	666266	Symbol	t		665800						
ANR	666267	Symbol	r_table_new		665800						
ANR	666268	Symbol	fcn -> bbs		665800						
ANR	666269	Symbol	calls		665800						
ANR	666270	Symbol	r_table_type		665800						
ANR	666271	Symbol	nbbs		665800						
ANR	666272	Symbol	fcnAddr		665800						
ANR	666273	Symbol	r_list_length		665800						
ANR	666274	Function	fcn_list_legacy	3160:0:99967:100163							
ANR	666275	FunctionDef	"fcn_list_legacy (RCore * core , RList * fcns)"		666274	0					
ANR	666276	CompoundStatement		3160:53:100020:100163	666274	0					
ANR	666277	IdentifierDeclStatement	RListIter * iter ;	3161:1:100023:100038	666274	0	True				
ANR	666278	IdentifierDecl	* iter		666274	0					
ANR	666279	IdentifierDeclType	RListIter *		666274	0					
ANR	666280	Identifier	iter		666274	1					
ANR	666281	IdentifierDeclStatement	RAnalFunction * fcn ;	3162:1:100041:100059	666274	1	True				
ANR	666282	IdentifierDecl	* fcn		666274	0					
ANR	666283	IdentifierDeclType	RAnalFunction *		666274	0					
ANR	666284	Identifier	fcn		666274	1					
ANR	666285	Statement	r_list_foreach	3163:1:100062:100075	666274	2	True				
ANR	666286	Statement	(	3163:16:100077:100077	666274	3	True				
ANR	666287	Statement	fcns	3163:17:100078:100081	666274	4	True				
ANR	666288	Statement	","	3163:21:100082:100082	666274	5	True				
ANR	666289	Statement	iter	3163:23:100084:100087	666274	6	True				
ANR	666290	Statement	","	3163:27:100088:100088	666274	7	True				
ANR	666291	Statement	fcn	3163:29:100090:100092	666274	8	True				
ANR	666292	Statement	)	3163:32:100093:100093	666274	9	True				
ANR	666293	CompoundStatement		4:34:74:74	666274	10					
ANR	666294	ExpressionStatement	"fcn_print_legacy ( core , fcn )"	3164:2:100099:100127	666274	0	True				
ANR	666295	CallExpression	"fcn_print_legacy ( core , fcn )"		666274	0					
ANR	666296	Callee	fcn_print_legacy		666274	0					
ANR	666297	Identifier	fcn_print_legacy		666274	0					
ANR	666298	ArgumentList	core		666274	1					
ANR	666299	Argument	core		666274	0					
ANR	666300	Identifier	core		666274	0					
ANR	666301	Argument	fcn		666274	1					
ANR	666302	Identifier	fcn		666274	0					
ANR	666303	ExpressionStatement	r_cons_newline ( )	3166:1:100133:100150	666274	11	True				
ANR	666304	CallExpression	r_cons_newline ( )		666274	0					
ANR	666305	Callee	r_cons_newline		666274	0					
ANR	666306	Identifier	r_cons_newline		666274	0					
ANR	666307	ArgumentList			666274	1					
ANR	666308	ReturnStatement	return 0 ;	3167:1:100153:100161	666274	12	True				
ANR	666309	PrimaryExpression	0		666274	0					
ANR	666310	ReturnType	static int		666274	1					
ANR	666311	Identifier	fcn_list_legacy		666274	2					
ANR	666312	ParameterList	"RCore * core , RList * fcns"		666274	3					
ANR	666313	Parameter	RCore * core	3160:27:99994:100004	666274	0	True				
ANR	666314	ParameterType	RCore *		666274	0					
ANR	666315	Identifier	core		666274	1					
ANR	666316	Parameter	RList * fcns	3160:40:100007:100017	666274	1	True				
ANR	666317	ParameterType	RList *		666274	0					
ANR	666318	Identifier	fcns		666274	1					
ANR	666319	CFGEntryNode	ENTRY		666274		True				
ANR	666320	CFGExitNode	EXIT		666274		True				
ANR	666321	Symbol	fcn		666274						
ANR	666322	Symbol	core		666274						
ANR	666323	Symbol	iter		666274						
ANR	666324	Symbol	fcns		666274						
ANR	666325	Function	r_core_anal_fcn_list	3170:0:100166:102861							
ANR	666326	FunctionDef	"r_core_anal_fcn_list (RCore * core , const char * input , const char * rad)"		666325	0					
ANR	666327	CompoundStatement		3170:80:100246:102861	666325	0					
ANR	666328	IdentifierDeclStatement	char temp [ 64 ] ;	3171:1:100249:100262	666325	0	True				
ANR	666329	IdentifierDecl	temp [ 64 ]		666325	0					
ANR	666330	IdentifierDeclType	char [ 64 ]		666325	0					
ANR	666331	Identifier	temp		666325	1					
ANR	666332	PrimaryExpression	64		666325	2					
ANR	666333	ExpressionStatement	"r_return_val_if_fail ( core && core -> anal , 0 )"	3172:1:100265:100309	666325	1	True				
ANR	666334	CallExpression	"r_return_val_if_fail ( core && core -> anal , 0 )"		666325	0					
ANR	666335	Callee	r_return_val_if_fail		666325	0					
ANR	666336	Identifier	r_return_val_if_fail		666325	0					
ANR	666337	ArgumentList	core && core -> anal		666325	1					
ANR	666338	Argument	core && core -> anal		666325	0					
ANR	666339	AndExpression	core && core -> anal		666325	0		&&			
ANR	666340	Identifier	core		666325	0					
ANR	666341	PtrMemberAccess	core -> anal		666325	1					
ANR	666342	Identifier	core		666325	0					
ANR	666343	Identifier	anal		666325	1					
ANR	666344	Argument	0		666325	1					
ANR	666345	PrimaryExpression	0		666325	0					
ANR	666346	IfStatement	if ( r_list_empty ( core -> anal -> fcns ) )		666325	2					
ANR	666347	Condition	r_list_empty ( core -> anal -> fcns )	3173:5:100316:100346	666325	0	True				
ANR	666348	CallExpression	r_list_empty ( core -> anal -> fcns )		666325	0					
ANR	666349	Callee	r_list_empty		666325	0					
ANR	666350	Identifier	r_list_empty		666325	0					
ANR	666351	ArgumentList	core -> anal -> fcns		666325	1					
ANR	666352	Argument	core -> anal -> fcns		666325	0					
ANR	666353	PtrMemberAccess	core -> anal -> fcns		666325	0					
ANR	666354	PtrMemberAccess	core -> anal		666325	0					
ANR	666355	Identifier	core		666325	0					
ANR	666356	Identifier	anal		666325	1					
ANR	666357	Identifier	fcns		666325	1					
ANR	666358	CompoundStatement		4:38:102:102	666325	1					
ANR	666359	ReturnStatement	return 0 ;	3174:2:100353:100361	666325	0	True				
ANR	666360	PrimaryExpression	0		666325	0					
ANR	666361	IfStatement	if ( * rad == '.' )		666325	3					
ANR	666362	Condition	* rad == '.'	3176:5:100371:100381	666325	0	True				
ANR	666363	EqualityExpression	* rad == '.'		666325	0		==			
ANR	666364	UnaryOperationExpression	* rad		666325	0					
ANR	666365	UnaryOperator	*		666325	0					
ANR	666366	Identifier	rad		666325	1					
ANR	666367	PrimaryExpression	'.'		666325	1					
ANR	666368	CompoundStatement		8:2:141:209	666325	1					
ANR	666369	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_at ( core -> anal , core -> offset , 0 ) ;"	3177:2:100388:100456	666325	0	True				
ANR	666370	IdentifierDecl	"* fcn = r_anal_get_fcn_at ( core -> anal , core -> offset , 0 )"		666325	0					
ANR	666371	IdentifierDeclType	RAnalFunction *		666325	0					
ANR	666372	Identifier	fcn		666325	1					
ANR	666373	AssignmentExpression	"* fcn = r_anal_get_fcn_at ( core -> anal , core -> offset , 0 )"		666325	2		=			
ANR	666374	Identifier	fcn		666325	0					
ANR	666375	CallExpression	"r_anal_get_fcn_at ( core -> anal , core -> offset , 0 )"		666325	1					
ANR	666376	Callee	r_anal_get_fcn_at		666325	0					
ANR	666377	Identifier	r_anal_get_fcn_at		666325	0					
ANR	666378	ArgumentList	core -> anal		666325	1					
ANR	666379	Argument	core -> anal		666325	0					
ANR	666380	PtrMemberAccess	core -> anal		666325	0					
ANR	666381	Identifier	core		666325	0					
ANR	666382	Identifier	anal		666325	1					
ANR	666383	Argument	core -> offset		666325	1					
ANR	666384	PtrMemberAccess	core -> offset		666325	0					
ANR	666385	Identifier	core		666325	0					
ANR	666386	Identifier	offset		666325	1					
ANR	666387	Argument	0		666325	2					
ANR	666388	PrimaryExpression	0		666325	0					
ANR	666389	ExpressionStatement	"__fcn_print_default ( core , fcn , false )"	3178:2:100460:100498	666325	1	True				
ANR	666390	CallExpression	"__fcn_print_default ( core , fcn , false )"		666325	0					
ANR	666391	Callee	__fcn_print_default		666325	0					
ANR	666392	Identifier	__fcn_print_default		666325	0					
ANR	666393	ArgumentList	core		666325	1					
ANR	666394	Argument	core		666325	0					
ANR	666395	Identifier	core		666325	0					
ANR	666396	Argument	fcn		666325	1					
ANR	666397	Identifier	fcn		666325	0					
ANR	666398	Argument	false		666325	2					
ANR	666399	Identifier	false		666325	0					
ANR	666400	ReturnStatement	return 0 ;	3179:2:100502:100510	666325	2	True				
ANR	666401	PrimaryExpression	0		666325	0					
ANR	666402	IfStatement	if ( rad && ( * rad == 'l' || * rad == 'j' ) )		666325	4					
ANR	666403	Condition	rad && ( * rad == 'l' || * rad == 'j' )	3182:5:100521:100555	666325	0	True				
ANR	666404	AndExpression	rad && ( * rad == 'l' || * rad == 'j' )		666325	0		&&			
ANR	666405	Identifier	rad		666325	0					
ANR	666406	OrExpression	* rad == 'l' || * rad == 'j'		666325	1		||			
ANR	666407	EqualityExpression	* rad == 'l'		666325	0		==			
ANR	666408	UnaryOperationExpression	* rad		666325	0					
ANR	666409	UnaryOperator	*		666325	0					
ANR	666410	Identifier	rad		666325	1					
ANR	666411	PrimaryExpression	'l'		666325	1					
ANR	666412	EqualityExpression	* rad == 'j'		666325	1		==			
ANR	666413	UnaryOperationExpression	* rad		666325	0					
ANR	666414	UnaryOperator	*		666325	0					
ANR	666415	Identifier	rad		666325	1					
ANR	666416	PrimaryExpression	'j'		666325	1					
ANR	666417	CompoundStatement		13:42:311:311	666325	1					
ANR	666418	ExpressionStatement	"fcnlist_gather_metadata ( core -> anal , core -> anal -> fcns )"	3183:2:100562:100616	666325	0	True				
ANR	666419	CallExpression	"fcnlist_gather_metadata ( core -> anal , core -> anal -> fcns )"		666325	0					
ANR	666420	Callee	fcnlist_gather_metadata		666325	0					
ANR	666421	Identifier	fcnlist_gather_metadata		666325	0					
ANR	666422	ArgumentList	core -> anal		666325	1					
ANR	666423	Argument	core -> anal		666325	0					
ANR	666424	PtrMemberAccess	core -> anal		666325	0					
ANR	666425	Identifier	core		666325	0					
ANR	666426	Identifier	anal		666325	1					
ANR	666427	Argument	core -> anal -> fcns		666325	1					
ANR	666428	PtrMemberAccess	core -> anal -> fcns		666325	0					
ANR	666429	PtrMemberAccess	core -> anal		666325	0					
ANR	666430	Identifier	core		666325	0					
ANR	666431	Identifier	anal		666325	1					
ANR	666432	Identifier	fcns		666325	1					
ANR	666433	IdentifierDeclStatement	const char * name = input ;	3186:1:100623:100647	666325	5	True				
ANR	666434	IdentifierDecl	* name = input		666325	0					
ANR	666435	IdentifierDeclType	const char *		666325	0					
ANR	666436	Identifier	name		666325	1					
ANR	666437	AssignmentExpression	* name = input		666325	2		=			
ANR	666438	Identifier	input		666325	0					
ANR	666439	Identifier	input		666325	1					
ANR	666440	IdentifierDeclStatement	ut64 addr = core -> offset ;	3187:1:100650:100674	666325	6	True				
ANR	666441	IdentifierDecl	addr = core -> offset		666325	0					
ANR	666442	IdentifierDeclType	ut64		666325	0					
ANR	666443	Identifier	addr		666325	1					
ANR	666444	AssignmentExpression	addr = core -> offset		666325	2		=			
ANR	666445	Identifier	addr		666325	0					
ANR	666446	PtrMemberAccess	core -> offset		666325	1					
ANR	666447	Identifier	core		666325	0					
ANR	666448	Identifier	offset		666325	1					
ANR	666449	IfStatement	if ( input && * input )		666325	7					
ANR	666450	Condition	input && * input	3188:5:100681:100695	666325	0	True				
ANR	666451	AndExpression	input && * input		666325	0		&&			
ANR	666452	Identifier	input		666325	0					
ANR	666453	UnaryOperationExpression	* input		666325	1					
ANR	666454	UnaryOperator	*		666325	0					
ANR	666455	Identifier	input		666325	1					
ANR	666456	CompoundStatement		19:22:451:451	666325	1					
ANR	666457	ExpressionStatement	name = input + 1	3189:2:100702:100718	666325	0	True				
ANR	666458	AssignmentExpression	name = input + 1		666325	0		=			
ANR	666459	Identifier	name		666325	0					
ANR	666460	AdditiveExpression	input + 1		666325	1		+			
ANR	666461	Identifier	input		666325	0					
ANR	666462	PrimaryExpression	1		666325	1					
ANR	666463	ExpressionStatement	"addr = r_num_math ( core -> num , name )"	3190:2:100722:100757	666325	1	True				
ANR	666464	AssignmentExpression	"addr = r_num_math ( core -> num , name )"		666325	0		=			
ANR	666465	Identifier	addr		666325	0					
ANR	666466	CallExpression	"r_num_math ( core -> num , name )"		666325	1					
ANR	666467	Callee	r_num_math		666325	0					
ANR	666468	Identifier	r_num_math		666325	0					
ANR	666469	ArgumentList	core -> num		666325	1					
ANR	666470	Argument	core -> num		666325	0					
ANR	666471	PtrMemberAccess	core -> num		666325	0					
ANR	666472	Identifier	core		666325	0					
ANR	666473	Identifier	num		666325	1					
ANR	666474	Argument	name		666325	1					
ANR	666475	Identifier	name		666325	0					
ANR	666476	IdentifierDeclStatement	RList * fcns = r_list_newf ( NULL ) ;	3193:1:100764:100796	666325	8	True				
ANR	666477	IdentifierDecl	* fcns = r_list_newf ( NULL )		666325	0					
ANR	666478	IdentifierDeclType	RList *		666325	0					
ANR	666479	Identifier	fcns		666325	1					
ANR	666480	AssignmentExpression	* fcns = r_list_newf ( NULL )		666325	2		=			
ANR	666481	Identifier	fcns		666325	0					
ANR	666482	CallExpression	r_list_newf ( NULL )		666325	1					
ANR	666483	Callee	r_list_newf		666325	0					
ANR	666484	Identifier	r_list_newf		666325	0					
ANR	666485	ArgumentList	NULL		666325	1					
ANR	666486	Argument	NULL		666325	0					
ANR	666487	Identifier	NULL		666325	0					
ANR	666488	IfStatement	if ( ! fcns )		666325	9					
ANR	666489	Condition	! fcns	3194:5:100803:100807	666325	0	True				
ANR	666490	UnaryOperationExpression	! fcns		666325	0					
ANR	666491	UnaryOperator	!		666325	0					
ANR	666492	Identifier	fcns		666325	1					
ANR	666493	CompoundStatement		25:12:563:563	666325	1					
ANR	666494	ReturnStatement	return - 1 ;	3195:2:100814:100823	666325	0	True				
ANR	666495	UnaryOperationExpression	- 1		666325	0					
ANR	666496	UnaryOperator	-		666325	0					
ANR	666497	PrimaryExpression	1		666325	1					
ANR	666498	IdentifierDeclStatement	RListIter * iter ;	3197:1:100829:100844	666325	10	True				
ANR	666499	IdentifierDecl	* iter		666325	0					
ANR	666500	IdentifierDeclType	RListIter *		666325	0					
ANR	666501	Identifier	iter		666325	1					
ANR	666502	IdentifierDeclStatement	RAnalFunction * fcn ;	3198:1:100847:100865	666325	11	True				
ANR	666503	IdentifierDecl	* fcn		666325	0					
ANR	666504	IdentifierDeclType	RAnalFunction *		666325	0					
ANR	666505	Identifier	fcn		666325	1					
ANR	666506	Statement	r_list_foreach	3199:1:100868:100881	666325	12	True				
ANR	666507	Statement	(	3199:16:100883:100883	666325	13	True				
ANR	666508	Statement	core	3199:17:100884:100887	666325	14	True				
ANR	666509	Statement	->	3199:21:100888:100889	666325	15	True				
ANR	666510	Statement	anal	3199:23:100890:100893	666325	16	True				
ANR	666511	Statement	->	3199:27:100894:100895	666325	17	True				
ANR	666512	Statement	fcns	3199:29:100896:100899	666325	18	True				
ANR	666513	Statement	","	3199:33:100900:100900	666325	19	True				
ANR	666514	Statement	iter	3199:35:100902:100905	666325	20	True				
ANR	666515	Statement	","	3199:39:100906:100906	666325	21	True				
ANR	666516	Statement	fcn	3199:41:100908:100910	666325	22	True				
ANR	666517	Statement	)	3199:44:100911:100911	666325	23	True				
ANR	666518	CompoundStatement		30:46:666:666	666325	24					
ANR	666519	IfStatement	"if ( ! input || r_anal_fcn_in ( fcn , addr ) || ( ! strcmp ( name , fcn -> name ) ) )"		666325	0					
ANR	666520	Condition	"! input || r_anal_fcn_in ( fcn , addr ) || ( ! strcmp ( name , fcn -> name ) )"	3200:6:100921:100986	666325	0	True				
ANR	666521	OrExpression	"! input || r_anal_fcn_in ( fcn , addr ) || ( ! strcmp ( name , fcn -> name ) )"		666325	0		||			
ANR	666522	UnaryOperationExpression	! input		666325	0					
ANR	666523	UnaryOperator	!		666325	0					
ANR	666524	Identifier	input		666325	1					
ANR	666525	OrExpression	"r_anal_fcn_in ( fcn , addr ) || ( ! strcmp ( name , fcn -> name ) )"		666325	1		||			
ANR	666526	CallExpression	"r_anal_fcn_in ( fcn , addr )"		666325	0					
ANR	666527	Callee	r_anal_fcn_in		666325	0					
ANR	666528	Identifier	r_anal_fcn_in		666325	0					
ANR	666529	ArgumentList	fcn		666325	1					
ANR	666530	Argument	fcn		666325	0					
ANR	666531	Identifier	fcn		666325	0					
ANR	666532	Argument	addr		666325	1					
ANR	666533	Identifier	addr		666325	0					
ANR	666534	UnaryOperationExpression	"! strcmp ( name , fcn -> name )"		666325	1					
ANR	666535	UnaryOperator	!		666325	0					
ANR	666536	CallExpression	"strcmp ( name , fcn -> name )"		666325	1					
ANR	666537	Callee	strcmp		666325	0					
ANR	666538	Identifier	strcmp		666325	0					
ANR	666539	ArgumentList	name		666325	1					
ANR	666540	Argument	name		666325	0					
ANR	666541	Identifier	name		666325	0					
ANR	666542	Argument	fcn -> name		666325	1					
ANR	666543	PtrMemberAccess	fcn -> name		666325	0					
ANR	666544	Identifier	fcn		666325	0					
ANR	666545	Identifier	name		666325	1					
ANR	666546	CompoundStatement		31:74:742:742	666325	1					
ANR	666547	ExpressionStatement	"r_list_append ( fcns , fcn )"	3201:3:100994:101019	666325	0	True				
ANR	666548	CallExpression	"r_list_append ( fcns , fcn )"		666325	0					
ANR	666549	Callee	r_list_append		666325	0					
ANR	666550	Identifier	r_list_append		666325	0					
ANR	666551	ArgumentList	fcns		666325	1					
ANR	666552	Argument	fcns		666325	0					
ANR	666553	Identifier	fcns		666325	0					
ANR	666554	Argument	fcn		666325	1					
ANR	666555	Identifier	fcn		666325	0					
ANR	666556	IfStatement	if ( ! rad )		666325	25					
ANR	666557	Condition	! rad	3206:5:101067:101070	666325	0	True				
ANR	666558	UnaryOperationExpression	! rad		666325	0					
ANR	666559	UnaryOperator	!		666325	0					
ANR	666560	Identifier	rad		666325	1					
ANR	666561	CompoundStatement		37:11:826:826	666325	1					
ANR	666562	ExpressionStatement	"fcn_list_default ( core , fcns , false )"	3207:2:101077:101113	666325	0	True				
ANR	666563	CallExpression	"fcn_list_default ( core , fcns , false )"		666325	0					
ANR	666564	Callee	fcn_list_default		666325	0					
ANR	666565	Identifier	fcn_list_default		666325	0					
ANR	666566	ArgumentList	core		666325	1					
ANR	666567	Argument	core		666325	0					
ANR	666568	Identifier	core		666325	0					
ANR	666569	Argument	fcns		666325	1					
ANR	666570	Identifier	fcns		666325	0					
ANR	666571	Argument	false		666325	2					
ANR	666572	Identifier	false		666325	0					
ANR	666573	ExpressionStatement	r_list_free ( fcns )	3208:2:101117:101135	666325	1	True				
ANR	666574	CallExpression	r_list_free ( fcns )		666325	0					
ANR	666575	Callee	r_list_free		666325	0					
ANR	666576	Identifier	r_list_free		666325	0					
ANR	666577	ArgumentList	fcns		666325	1					
ANR	666578	Argument	fcns		666325	0					
ANR	666579	Identifier	fcns		666325	0					
ANR	666580	ReturnStatement	return 0 ;	3209:2:101139:101147	666325	2	True				
ANR	666581	PrimaryExpression	0		666325	0					
ANR	666582	SwitchStatement	switch ( * rad )		666325	26					
ANR	666583	Condition	* rad	3211:9:101161:101164	666325	0	True				
ANR	666584	UnaryOperationExpression	* rad		666325	0					
ANR	666585	UnaryOperator	*		666325	0					
ANR	666586	Identifier	rad		666325	1					
ANR	666587	CompoundStatement		42:15:920:920	666325	1					
ANR	666588	Label	case '+' :	3212:1:101170:101178	666325	0	True				
ANR	666589	ExpressionStatement	r_core_anal_fcn_list_size ( core )	3213:2:101182:101214	666325	1	True				
ANR	666590	CallExpression	r_core_anal_fcn_list_size ( core )		666325	0					
ANR	666591	Callee	r_core_anal_fcn_list_size		666325	0					
ANR	666592	Identifier	r_core_anal_fcn_list_size		666325	0					
ANR	666593	ArgumentList	core		666325	1					
ANR	666594	Argument	core		666325	0					
ANR	666595	Identifier	core		666325	0					
ANR	666596	BreakStatement	break ;	3214:2:101218:101223	666325	2	True				
ANR	666597	Label	case '=' :	3215:1:101226:101234	666325	3	True				
ANR	666598	CompoundStatement		48:2:1032:1088	666325	4					
ANR	666599	ExpressionStatement	"r_list_sort ( fcns , cmpaddr )"	3216:2:101248:101275	666325	0	True				
ANR	666600	CallExpression	"r_list_sort ( fcns , cmpaddr )"		666325	0					
ANR	666601	Callee	r_list_sort		666325	0					
ANR	666602	Identifier	r_list_sort		666325	0					
ANR	666603	ArgumentList	fcns		666325	1					
ANR	666604	Argument	fcns		666325	0					
ANR	666605	Identifier	fcns		666325	0					
ANR	666606	Argument	cmpaddr		666325	1					
ANR	666607	Identifier	cmpaddr		666325	0					
ANR	666608	IdentifierDeclStatement	RList * flist = r_list_newf ( ( RListFree ) r_listinfo_free ) ;	3217:2:101279:101335	666325	1	True				
ANR	666609	IdentifierDecl	* flist = r_list_newf ( ( RListFree ) r_listinfo_free )		666325	0					
ANR	666610	IdentifierDeclType	RList *		666325	0					
ANR	666611	Identifier	flist		666325	1					
ANR	666612	AssignmentExpression	* flist = r_list_newf ( ( RListFree ) r_listinfo_free )		666325	2		=			
ANR	666613	Identifier	flist		666325	0					
ANR	666614	CallExpression	r_list_newf ( ( RListFree ) r_listinfo_free )		666325	1					
ANR	666615	Callee	r_list_newf		666325	0					
ANR	666616	Identifier	r_list_newf		666325	0					
ANR	666617	ArgumentList	( RListFree ) r_listinfo_free		666325	1					
ANR	666618	Argument	( RListFree ) r_listinfo_free		666325	0					
ANR	666619	CastExpression	( RListFree ) r_listinfo_free		666325	0					
ANR	666620	CastTarget	RListFree		666325	0					
ANR	666621	Identifier	r_listinfo_free		666325	1					
ANR	666622	IfStatement	if ( ! flist )		666325	2					
ANR	666623	Condition	! flist	3218:6:101343:101348	666325	0	True				
ANR	666624	UnaryOperationExpression	! flist		666325	0					
ANR	666625	UnaryOperator	!		666325	0					
ANR	666626	Identifier	flist		666325	1					
ANR	666627	CompoundStatement		49:14:1104:1104	666325	1					
ANR	666628	ReturnStatement	return - 1 ;	3219:3:101356:101365	666325	0	True				
ANR	666629	UnaryOperationExpression	- 1		666325	0					
ANR	666630	UnaryOperator	-		666325	0					
ANR	666631	PrimaryExpression	1		666325	1					
ANR	666632	Statement	ls_foreach	3221:2:101373:101382	666325	3	True				
ANR	666633	Statement	(	3221:13:101384:101384	666325	4	True				
ANR	666634	Statement	fcns	3221:14:101385:101388	666325	5	True				
ANR	666635	Statement	","	3221:18:101389:101389	666325	6	True				
ANR	666636	Statement	iter	3221:20:101391:101394	666325	7	True				
ANR	666637	Statement	","	3221:24:101395:101395	666325	8	True				
ANR	666638	Statement	fcn	3221:26:101397:101399	666325	9	True				
ANR	666639	Statement	)	3221:29:101400:101400	666325	10	True				
ANR	666640	CompoundStatement		54:3:1229:1346	666325	11					
ANR	666641	Statement	RInterval	3222:3:101407:101415	666325	0	True				
ANR	666642	Statement	inter	3222:13:101417:101421	666325	1	True				
ANR	666643	Statement	=	3222:19:101423:101423	666325	2	True				
ANR	666644	Statement	(	3222:21:101425:101425	666325	3	True				
ANR	666645	Statement	RInterval	3222:22:101426:101434	666325	4	True				
ANR	666646	Statement	)	3222:31:101435:101435	666325	5	True				
ANR	666647	CompoundStatement		53:33:1190:1190	666325	6					
ANR	666648	Statement	fcn	3222:34:101438:101440	666325	0	True				
ANR	666649	Statement	->	3222:37:101441:101442	666325	1	True				
ANR	666650	Statement	addr	3222:39:101443:101446	666325	2	True				
ANR	666651	Statement	","	3222:43:101447:101447	666325	3	True				
ANR	666652	Statement	r_anal_fcn_size	3222:45:101449:101463	666325	4	True				
ANR	666653	Statement	(	3222:61:101465:101465	666325	5	True				
ANR	666654	Statement	fcn	3222:62:101466:101468	666325	6	True				
ANR	666655	Statement	)	3222:65:101469:101469	666325	7	True				
ANR	666656	ExpressionStatement		3222:67:101471:101471	666325	7	True				
ANR	666657	IdentifierDeclStatement	"RListInfo * info = r_listinfo_new ( r_core_anal_fcn_name ( core , fcn ) , inter , inter , - 1 , sdb_itoa ( fcn -> bits , temp , 10 ) ) ;"	3223:3:101476:101593	666325	8	True				
ANR	666658	IdentifierDecl	"* info = r_listinfo_new ( r_core_anal_fcn_name ( core , fcn ) , inter , inter , - 1 , sdb_itoa ( fcn -> bits , temp , 10 ) )"		666325	0					
ANR	666659	IdentifierDeclType	RListInfo *		666325	0					
ANR	666660	Identifier	info		666325	1					
ANR	666661	AssignmentExpression	"* info = r_listinfo_new ( r_core_anal_fcn_name ( core , fcn ) , inter , inter , - 1 , sdb_itoa ( fcn -> bits , temp , 10 ) )"		666325	2		=			
ANR	666662	Identifier	info		666325	0					
ANR	666663	CallExpression	"r_listinfo_new ( r_core_anal_fcn_name ( core , fcn ) , inter , inter , - 1 , sdb_itoa ( fcn -> bits , temp , 10 ) )"		666325	1					
ANR	666664	Callee	r_listinfo_new		666325	0					
ANR	666665	Identifier	r_listinfo_new		666325	0					
ANR	666666	ArgumentList	"r_core_anal_fcn_name ( core , fcn )"		666325	1					
ANR	666667	Argument	"r_core_anal_fcn_name ( core , fcn )"		666325	0					
ANR	666668	CallExpression	"r_core_anal_fcn_name ( core , fcn )"		666325	0					
ANR	666669	Callee	r_core_anal_fcn_name		666325	0					
ANR	666670	Identifier	r_core_anal_fcn_name		666325	0					
ANR	666671	ArgumentList	core		666325	1					
ANR	666672	Argument	core		666325	0					
ANR	666673	Identifier	core		666325	0					
ANR	666674	Argument	fcn		666325	1					
ANR	666675	Identifier	fcn		666325	0					
ANR	666676	Argument	inter		666325	1					
ANR	666677	Identifier	inter		666325	0					
ANR	666678	Argument	inter		666325	2					
ANR	666679	Identifier	inter		666325	0					
ANR	666680	Argument	- 1		666325	3					
ANR	666681	UnaryOperationExpression	- 1		666325	0					
ANR	666682	UnaryOperator	-		666325	0					
ANR	666683	PrimaryExpression	1		666325	1					
ANR	666684	Argument	"sdb_itoa ( fcn -> bits , temp , 10 )"		666325	4					
ANR	666685	CallExpression	"sdb_itoa ( fcn -> bits , temp , 10 )"		666325	0					
ANR	666686	Callee	sdb_itoa		666325	0					
ANR	666687	Identifier	sdb_itoa		666325	0					
ANR	666688	ArgumentList	fcn -> bits		666325	1					
ANR	666689	Argument	fcn -> bits		666325	0					
ANR	666690	PtrMemberAccess	fcn -> bits		666325	0					
ANR	666691	Identifier	fcn		666325	0					
ANR	666692	Identifier	bits		666325	1					
ANR	666693	Argument	temp		666325	1					
ANR	666694	Identifier	temp		666325	0					
ANR	666695	Argument	10		666325	2					
ANR	666696	PrimaryExpression	10		666325	0					
ANR	666697	IfStatement	if ( ! info )		666325	9					
ANR	666698	Condition	! info	3224:7:101602:101606	666325	0	True				
ANR	666699	UnaryOperationExpression	! info		666325	0					
ANR	666700	UnaryOperator	!		666325	0					
ANR	666701	Identifier	info		666325	1					
ANR	666702	CompoundStatement		55:14:1362:1362	666325	1					
ANR	666703	BreakStatement	break ;	3225:4:101615:101620	666325	0	True				
ANR	666704	ExpressionStatement	"r_list_append ( flist , info )"	3227:3:101630:101657	666325	10	True				
ANR	666705	CallExpression	"r_list_append ( flist , info )"		666325	0					
ANR	666706	Callee	r_list_append		666325	0					
ANR	666707	Identifier	r_list_append		666325	0					
ANR	666708	ArgumentList	flist		666325	1					
ANR	666709	Argument	flist		666325	0					
ANR	666710	Identifier	flist		666325	0					
ANR	666711	Argument	info		666325	1					
ANR	666712	Identifier	info		666325	0					
ANR	666713	ExpressionStatement	"r_core_visual_list ( core , flist , core -> offset , core -> blocksize , r_cons_get_size ( NULL ) , r_config_get_i ( core -> config , ""scr.color"" ) )"	3229:2:101665:101799	666325	12	True				
ANR	666714	CallExpression	"r_core_visual_list ( core , flist , core -> offset , core -> blocksize , r_cons_get_size ( NULL ) , r_config_get_i ( core -> config , ""scr.color"" ) )"		666325	0					
ANR	666715	Callee	r_core_visual_list		666325	0					
ANR	666716	Identifier	r_core_visual_list		666325	0					
ANR	666717	ArgumentList	core		666325	1					
ANR	666718	Argument	core		666325	0					
ANR	666719	Identifier	core		666325	0					
ANR	666720	Argument	flist		666325	1					
ANR	666721	Identifier	flist		666325	0					
ANR	666722	Argument	core -> offset		666325	2					
ANR	666723	PtrMemberAccess	core -> offset		666325	0					
ANR	666724	Identifier	core		666325	0					
ANR	666725	Identifier	offset		666325	1					
ANR	666726	Argument	core -> blocksize		666325	3					
ANR	666727	PtrMemberAccess	core -> blocksize		666325	0					
ANR	666728	Identifier	core		666325	0					
ANR	666729	Identifier	blocksize		666325	1					
ANR	666730	Argument	r_cons_get_size ( NULL )		666325	4					
ANR	666731	CallExpression	r_cons_get_size ( NULL )		666325	0					
ANR	666732	Callee	r_cons_get_size		666325	0					
ANR	666733	Identifier	r_cons_get_size		666325	0					
ANR	666734	ArgumentList	NULL		666325	1					
ANR	666735	Argument	NULL		666325	0					
ANR	666736	Identifier	NULL		666325	0					
ANR	666737	Argument	"r_config_get_i ( core -> config , ""scr.color"" )"		666325	5					
ANR	666738	CallExpression	"r_config_get_i ( core -> config , ""scr.color"" )"		666325	0					
ANR	666739	Callee	r_config_get_i		666325	0					
ANR	666740	Identifier	r_config_get_i		666325	0					
ANR	666741	ArgumentList	core -> config		666325	1					
ANR	666742	Argument	core -> config		666325	0					
ANR	666743	PtrMemberAccess	core -> config		666325	0					
ANR	666744	Identifier	core		666325	0					
ANR	666745	Identifier	config		666325	1					
ANR	666746	Argument	"""scr.color"""		666325	1					
ANR	666747	PrimaryExpression	"""scr.color"""		666325	0					
ANR	666748	ExpressionStatement	r_list_free ( flist )	3231:2:101803:101822	666325	13	True				
ANR	666749	CallExpression	r_list_free ( flist )		666325	0					
ANR	666750	Callee	r_list_free		666325	0					
ANR	666751	Identifier	r_list_free		666325	0					
ANR	666752	ArgumentList	flist		666325	1					
ANR	666753	Argument	flist		666325	0					
ANR	666754	Identifier	flist		666325	0					
ANR	666755	BreakStatement	break ;	3232:2:101826:101831	666325	14	True				
ANR	666756	Label	case 't' :	3234:1:101838:101846	666325	5	True				
ANR	666757	IfStatement	if ( rad [ 1 ] == 'j' )		666325	6					
ANR	666758	Condition	rad [ 1 ] == 'j'	3235:6:101872:101884	666325	0	True				
ANR	666759	EqualityExpression	rad [ 1 ] == 'j'		666325	0		==			
ANR	666760	ArrayIndexing	rad [ 1 ]		666325	0					
ANR	666761	Identifier	rad		666325	0					
ANR	666762	PrimaryExpression	1		666325	1					
ANR	666763	PrimaryExpression	'j'		666325	1					
ANR	666764	CompoundStatement		66:21:1640:1640	666325	1					
ANR	666765	ExpressionStatement	"fcn_list_table ( core , r_str_trim_ro ( rad + 2 ) , 'j' )"	3236:3:101892:101942	666325	0	True				
ANR	666766	CallExpression	"fcn_list_table ( core , r_str_trim_ro ( rad + 2 ) , 'j' )"		666325	0					
ANR	666767	Callee	fcn_list_table		666325	0					
ANR	666768	Identifier	fcn_list_table		666325	0					
ANR	666769	ArgumentList	core		666325	1					
ANR	666770	Argument	core		666325	0					
ANR	666771	Identifier	core		666325	0					
ANR	666772	Argument	r_str_trim_ro ( rad + 2 )		666325	1					
ANR	666773	CallExpression	r_str_trim_ro ( rad + 2 )		666325	0					
ANR	666774	Callee	r_str_trim_ro		666325	0					
ANR	666775	Identifier	r_str_trim_ro		666325	0					
ANR	666776	ArgumentList	rad + 2		666325	1					
ANR	666777	Argument	rad + 2		666325	0					
ANR	666778	AdditiveExpression	rad + 2		666325	0		+			
ANR	666779	Identifier	rad		666325	0					
ANR	666780	PrimaryExpression	2		666325	1					
ANR	666781	Argument	'j'		666325	2					
ANR	666782	PrimaryExpression	'j'		666325	0					
ANR	666783	ElseStatement	else		666325	0					
ANR	666784	CompoundStatement		68:9:1706:1706	666325	0					
ANR	666785	ExpressionStatement	"fcn_list_table ( core , r_str_trim_ro ( rad + 1 ) , rad [ 1 ] )"	3238:3:101958:102012	666325	0	True				
ANR	666786	CallExpression	"fcn_list_table ( core , r_str_trim_ro ( rad + 1 ) , rad [ 1 ] )"		666325	0					
ANR	666787	Callee	fcn_list_table		666325	0					
ANR	666788	Identifier	fcn_list_table		666325	0					
ANR	666789	ArgumentList	core		666325	1					
ANR	666790	Argument	core		666325	0					
ANR	666791	Identifier	core		666325	0					
ANR	666792	Argument	r_str_trim_ro ( rad + 1 )		666325	1					
ANR	666793	CallExpression	r_str_trim_ro ( rad + 1 )		666325	0					
ANR	666794	Callee	r_str_trim_ro		666325	0					
ANR	666795	Identifier	r_str_trim_ro		666325	0					
ANR	666796	ArgumentList	rad + 1		666325	1					
ANR	666797	Argument	rad + 1		666325	0					
ANR	666798	AdditiveExpression	rad + 1		666325	0		+			
ANR	666799	Identifier	rad		666325	0					
ANR	666800	PrimaryExpression	1		666325	1					
ANR	666801	Argument	rad [ 1 ]		666325	2					
ANR	666802	ArrayIndexing	rad [ 1 ]		666325	0					
ANR	666803	Identifier	rad		666325	0					
ANR	666804	PrimaryExpression	1		666325	1					
ANR	666805	BreakStatement	break ;	3240:2:102020:102025	666325	7	True				
ANR	666806	Label	case 'l' :	3241:1:102028:102036	666325	8	True				
ANR	666807	IfStatement	if ( rad [ 1 ] == 'j' )		666325	9					
ANR	666808	Condition	rad [ 1 ] == 'j'	3242:6:102062:102074	666325	0	True				
ANR	666809	EqualityExpression	rad [ 1 ] == 'j'		666325	0		==			
ANR	666810	ArrayIndexing	rad [ 1 ]		666325	0					
ANR	666811	Identifier	rad		666325	0					
ANR	666812	PrimaryExpression	1		666325	1					
ANR	666813	PrimaryExpression	'j'		666325	1					
ANR	666814	CompoundStatement		73:21:1830:1830	666325	1					
ANR	666815	ExpressionStatement	"fcn_list_verbose_json ( core , fcns )"	3243:3:102082:102116	666325	0	True				
ANR	666816	CallExpression	"fcn_list_verbose_json ( core , fcns )"		666325	0					
ANR	666817	Callee	fcn_list_verbose_json		666325	0					
ANR	666818	Identifier	fcn_list_verbose_json		666325	0					
ANR	666819	ArgumentList	core		666325	1					
ANR	666820	Argument	core		666325	0					
ANR	666821	Identifier	core		666325	0					
ANR	666822	Argument	fcns		666325	1					
ANR	666823	Identifier	fcns		666325	0					
ANR	666824	ElseStatement	else		666325	0					
ANR	666825	CompoundStatement		76:3:1885:1913	666325	0					
ANR	666826	IdentifierDeclStatement	"char * sp = strchr ( rad , ' ' ) ;"	3245:3:102132:102160	666325	0	True				
ANR	666827	IdentifierDecl	"* sp = strchr ( rad , ' ' )"		666325	0					
ANR	666828	IdentifierDeclType	char *		666325	0					
ANR	666829	Identifier	sp		666325	1					
ANR	666830	AssignmentExpression	"* sp = strchr ( rad , ' ' )"		666325	2		=			
ANR	666831	Identifier	sp		666325	0					
ANR	666832	CallExpression	"strchr ( rad , ' ' )"		666325	1					
ANR	666833	Callee	strchr		666325	0					
ANR	666834	Identifier	strchr		666325	0					
ANR	666835	ArgumentList	rad		666325	1					
ANR	666836	Argument	rad		666325	0					
ANR	666837	Identifier	rad		666325	0					
ANR	666838	Argument	' '		666325	1					
ANR	666839	PrimaryExpression	' '		666325	0					
ANR	666840	ExpressionStatement	"fcn_list_verbose ( core , fcns , sp ? sp + 1 : NULL )"	3246:3:102165:102209	666325	1	True				
ANR	666841	CallExpression	"fcn_list_verbose ( core , fcns , sp ? sp + 1 : NULL )"		666325	0					
ANR	666842	Callee	fcn_list_verbose		666325	0					
ANR	666843	Identifier	fcn_list_verbose		666325	0					
ANR	666844	ArgumentList	core		666325	1					
ANR	666845	Argument	core		666325	0					
ANR	666846	Identifier	core		666325	0					
ANR	666847	Argument	fcns		666325	1					
ANR	666848	Identifier	fcns		666325	0					
ANR	666849	Argument	sp ? sp + 1 : NULL		666325	2					
ANR	666850	ConditionalExpression	sp ? sp + 1 : NULL		666325	0					
ANR	666851	Condition	sp		666325	0					
ANR	666852	Identifier	sp		666325	0					
ANR	666853	AdditiveExpression	sp + 1		666325	1		+			
ANR	666854	Identifier	sp		666325	0					
ANR	666855	PrimaryExpression	1		666325	1					
ANR	666856	Identifier	NULL		666325	2					
ANR	666857	BreakStatement	break ;	3248:2:102217:102222	666325	10	True				
ANR	666858	Label	case 'q' :	3249:1:102225:102233	666325	11	True				
ANR	666859	IfStatement	if ( rad [ 1 ] == 'j' )		666325	12					
ANR	666860	Condition	rad [ 1 ] == 'j'	3250:6:102241:102253	666325	0	True				
ANR	666861	EqualityExpression	rad [ 1 ] == 'j'		666325	0		==			
ANR	666862	ArrayIndexing	rad [ 1 ]		666325	0					
ANR	666863	Identifier	rad		666325	0					
ANR	666864	PrimaryExpression	1		666325	1					
ANR	666865	PrimaryExpression	'j'		666325	1					
ANR	666866	CompoundStatement		81:21:2009:2009	666325	1					
ANR	666867	ExpressionStatement	"fcn_list_json ( core , fcns , true )"	3251:3:102261:102293	666325	0	True				
ANR	666868	CallExpression	"fcn_list_json ( core , fcns , true )"		666325	0					
ANR	666869	Callee	fcn_list_json		666325	0					
ANR	666870	Identifier	fcn_list_json		666325	0					
ANR	666871	ArgumentList	core		666325	1					
ANR	666872	Argument	core		666325	0					
ANR	666873	Identifier	core		666325	0					
ANR	666874	Argument	fcns		666325	1					
ANR	666875	Identifier	fcns		666325	0					
ANR	666876	Argument	true		666325	2					
ANR	666877	Identifier	true		666325	0					
ANR	666878	ElseStatement	else		666325	0					
ANR	666879	CompoundStatement		83:9:2057:2057	666325	0					
ANR	666880	ExpressionStatement	"fcn_list_default ( core , fcns , true )"	3253:3:102309:102344	666325	0	True				
ANR	666881	CallExpression	"fcn_list_default ( core , fcns , true )"		666325	0					
ANR	666882	Callee	fcn_list_default		666325	0					
ANR	666883	Identifier	fcn_list_default		666325	0					
ANR	666884	ArgumentList	core		666325	1					
ANR	666885	Argument	core		666325	0					
ANR	666886	Identifier	core		666325	0					
ANR	666887	Argument	fcns		666325	1					
ANR	666888	Identifier	fcns		666325	0					
ANR	666889	Argument	true		666325	2					
ANR	666890	Identifier	true		666325	0					
ANR	666891	BreakStatement	break ;	3255:2:102352:102357	666325	13	True				
ANR	666892	Label	case 'j' :	3256:1:102360:102368	666325	14	True				
ANR	666893	ExpressionStatement	"fcn_list_json ( core , fcns , false )"	3257:2:102372:102405	666325	15	True				
ANR	666894	CallExpression	"fcn_list_json ( core , fcns , false )"		666325	0					
ANR	666895	Callee	fcn_list_json		666325	0					
ANR	666896	Identifier	fcn_list_json		666325	0					
ANR	666897	ArgumentList	core		666325	1					
ANR	666898	Argument	core		666325	0					
ANR	666899	Identifier	core		666325	0					
ANR	666900	Argument	fcns		666325	1					
ANR	666901	Identifier	fcns		666325	0					
ANR	666902	Argument	false		666325	2					
ANR	666903	Identifier	false		666325	0					
ANR	666904	BreakStatement	break ;	3258:2:102409:102414	666325	16	True				
ANR	666905	Label	case '*' :	3259:1:102417:102425	666325	17	True				
ANR	666906	ExpressionStatement	"fcn_list_detail ( core , fcns )"	3260:2:102429:102457	666325	18	True				
ANR	666907	CallExpression	"fcn_list_detail ( core , fcns )"		666325	0					
ANR	666908	Callee	fcn_list_detail		666325	0					
ANR	666909	Identifier	fcn_list_detail		666325	0					
ANR	666910	ArgumentList	core		666325	1					
ANR	666911	Argument	core		666325	0					
ANR	666912	Identifier	core		666325	0					
ANR	666913	Argument	fcns		666325	1					
ANR	666914	Identifier	fcns		666325	0					
ANR	666915	BreakStatement	break ;	3261:2:102461:102466	666325	19	True				
ANR	666916	Label	case 'm' :	3262:1:102469:102477	666325	20	True				
ANR	666917	CompoundStatement		95:3:2249:2264	666325	21					
ANR	666918	IdentifierDeclStatement	char mode = 'm' ;	3264:3:102496:102511	666325	0	True				
ANR	666919	IdentifierDecl	mode = 'm'		666325	0					
ANR	666920	IdentifierDeclType	char		666325	0					
ANR	666921	Identifier	mode		666325	1					
ANR	666922	AssignmentExpression	mode = 'm'		666325	2		=			
ANR	666923	Identifier	mode		666325	0					
ANR	666924	PrimaryExpression	'm'		666325	1					
ANR	666925	IfStatement	if ( rad [ 1 ] != 0 )		666325	1					
ANR	666926	Condition	rad [ 1 ] != 0	3265:7:102520:102530	666325	0	True				
ANR	666927	EqualityExpression	rad [ 1 ] != 0		666325	0		!=			
ANR	666928	ArrayIndexing	rad [ 1 ]		666325	0					
ANR	666929	Identifier	rad		666325	0					
ANR	666930	PrimaryExpression	1		666325	1					
ANR	666931	PrimaryExpression	0		666325	1					
ANR	666932	CompoundStatement		96:20:2286:2286	666325	1					
ANR	666933	IfStatement	if ( rad [ 1 ] == 'j' )		666325	0					
ANR	666934	Condition	rad [ 1 ] == 'j'	3266:8:102543:102555	666325	0	True				
ANR	666935	EqualityExpression	rad [ 1 ] == 'j'		666325	0		==			
ANR	666936	ArrayIndexing	rad [ 1 ]		666325	0					
ANR	666937	Identifier	rad		666325	0					
ANR	666938	PrimaryExpression	1		666325	1					
ANR	666939	PrimaryExpression	'j'		666325	1					
ANR	666940	CompoundStatement		97:23:2311:2311	666325	1					
ANR	666941	ExpressionStatement	mode = 'j'	3267:5:102576:102586	666325	0	True				
ANR	666942	AssignmentExpression	mode = 'j'		666325	0		=			
ANR	666943	Identifier	mode		666325	0					
ANR	666944	PrimaryExpression	'j'		666325	1					
ANR	666945	ElseStatement	else		666325	0					
ANR	666946	IfStatement	if ( rad [ 1 ] == 'q' )		666325	0					
ANR	666947	Condition	rad [ 1 ] == 'q'	3268:15:102603:102615	666325	0	True				
ANR	666948	EqualityExpression	rad [ 1 ] == 'q'		666325	0		==			
ANR	666949	ArrayIndexing	rad [ 1 ]		666325	0					
ANR	666950	Identifier	rad		666325	0					
ANR	666951	PrimaryExpression	1		666325	1					
ANR	666952	PrimaryExpression	'q'		666325	1					
ANR	666953	CompoundStatement		99:30:2371:2371	666325	1					
ANR	666954	ExpressionStatement	mode = 'q'	3269:5:102636:102646	666325	0	True				
ANR	666955	AssignmentExpression	mode = 'q'		666325	0		=			
ANR	666956	Identifier	mode		666325	0					
ANR	666957	PrimaryExpression	'q'		666325	1					
ANR	666958	ExpressionStatement	"fcn_print_makestyle ( core , fcns , mode )"	3272:3:102662:102700	666325	2	True				
ANR	666959	CallExpression	"fcn_print_makestyle ( core , fcns , mode )"		666325	0					
ANR	666960	Callee	fcn_print_makestyle		666325	0					
ANR	666961	Identifier	fcn_print_makestyle		666325	0					
ANR	666962	ArgumentList	core		666325	1					
ANR	666963	Argument	core		666325	0					
ANR	666964	Identifier	core		666325	0					
ANR	666965	Argument	fcns		666325	1					
ANR	666966	Identifier	fcns		666325	0					
ANR	666967	Argument	mode		666325	2					
ANR	666968	Identifier	mode		666325	0					
ANR	666969	BreakStatement	break ;	3273:3:102705:102710	666325	3	True				
ANR	666970	Label	case 1 :	3275:1:102717:102723	666325	22	True				
ANR	666971	ExpressionStatement	"fcn_list_legacy ( core , fcns )"	3276:2:102727:102755	666325	23	True				
ANR	666972	CallExpression	"fcn_list_legacy ( core , fcns )"		666325	0					
ANR	666973	Callee	fcn_list_legacy		666325	0					
ANR	666974	Identifier	fcn_list_legacy		666325	0					
ANR	666975	ArgumentList	core		666325	1					
ANR	666976	Argument	core		666325	0					
ANR	666977	Identifier	core		666325	0					
ANR	666978	Argument	fcns		666325	1					
ANR	666979	Identifier	fcns		666325	0					
ANR	666980	BreakStatement	break ;	3277:2:102759:102764	666325	24	True				
ANR	666981	Label	default :	3278:1:102767:102774	666325	25	True				
ANR	666982	Identifier	default		666325	0					
ANR	666983	ExpressionStatement	"fcn_list_default ( core , fcns , false )"	3279:2:102778:102814	666325	26	True				
ANR	666984	CallExpression	"fcn_list_default ( core , fcns , false )"		666325	0					
ANR	666985	Callee	fcn_list_default		666325	0					
ANR	666986	Identifier	fcn_list_default		666325	0					
ANR	666987	ArgumentList	core		666325	1					
ANR	666988	Argument	core		666325	0					
ANR	666989	Identifier	core		666325	0					
ANR	666990	Argument	fcns		666325	1					
ANR	666991	Identifier	fcns		666325	0					
ANR	666992	Argument	false		666325	2					
ANR	666993	Identifier	false		666325	0					
ANR	666994	BreakStatement	break ;	3280:2:102818:102823	666325	27	True				
ANR	666995	ExpressionStatement	r_list_free ( fcns )	3283:1:102830:102848	666325	27	True				
ANR	666996	CallExpression	r_list_free ( fcns )		666325	0					
ANR	666997	Callee	r_list_free		666325	0					
ANR	666998	Identifier	r_list_free		666325	0					
ANR	666999	ArgumentList	fcns		666325	1					
ANR	667000	Argument	fcns		666325	0					
ANR	667001	Identifier	fcns		666325	0					
ANR	667002	ReturnStatement	return 0 ;	3284:1:102851:102859	666325	28	True				
ANR	667003	PrimaryExpression	0		666325	0					
ANR	667004	ReturnType	R_API int		666325	1					
ANR	667005	Identifier	r_core_anal_fcn_list		666325	2					
ANR	667006	ParameterList	"RCore * core , const char * input , const char * rad"		666325	3					
ANR	667007	Parameter	RCore * core	3170:31:100197:100207	666325	0	True				
ANR	667008	ParameterType	RCore *		666325	0					
ANR	667009	Identifier	core		666325	1					
ANR	667010	Parameter	const char * input	3170:44:100210:100226	666325	1	True				
ANR	667011	ParameterType	const char *		666325	0					
ANR	667012	Identifier	input		666325	1					
ANR	667013	Parameter	const char * rad	3170:63:100229:100243	666325	2	True				
ANR	667014	ParameterType	const char *		666325	0					
ANR	667015	Identifier	rad		666325	1					
ANR	667016	CFGEntryNode	ENTRY		666325		True				
ANR	667017	CFGExitNode	EXIT		666325		True				
ANR	667018	Symbol	r_anal_fcn_in		666325						
ANR	667019	Symbol	r_anal_get_fcn_at		666325						
ANR	667020	Symbol	* fcn		666325						
ANR	667021	Symbol	fcn -> name		666325						
ANR	667022	Symbol	* core		666325						
ANR	667023	Symbol	* input		666325						
ANR	667024	Symbol	core -> offset		666325						
ANR	667025	Symbol	strchr		666325						
ANR	667026	Symbol	core -> anal		666325						
ANR	667027	Symbol	r_num_math		666325						
ANR	667028	Symbol	fcn -> bits		666325						
ANR	667029	Symbol	fcn		666325						
ANR	667030	Symbol	mode		666325						
ANR	667031	Symbol	rad		666325						
ANR	667032	Symbol	flist		666325						
ANR	667033	Symbol	r_core_anal_fcn_name		666325						
ANR	667034	Symbol	cmpaddr		666325						
ANR	667035	Symbol	r_listinfo_new		666325						
ANR	667036	Symbol	addr		666325						
ANR	667037	Symbol	core -> num		666325						
ANR	667038	Symbol	sp		666325						
ANR	667039	Symbol	* * core		666325						
ANR	667040	Symbol	info		666325						
ANR	667041	Symbol	strcmp		666325						
ANR	667042	Symbol	core -> config		666325						
ANR	667043	Symbol	core -> blocksize		666325						
ANR	667044	Symbol	temp		666325						
ANR	667045	Symbol	NULL		666325						
ANR	667046	Symbol	r_list_newf		666325						
ANR	667047	Symbol	r_cons_get_size		666325						
ANR	667048	Symbol	inter		666325						
ANR	667049	Symbol	false		666325						
ANR	667050	Symbol	iter		666325						
ANR	667051	Symbol	core -> anal -> fcns		666325						
ANR	667052	Symbol	fcns		666325						
ANR	667053	Symbol	core		666325						
ANR	667054	Symbol	input		666325						
ANR	667055	Symbol	* core -> anal		666325						
ANR	667056	Symbol	sdb_itoa		666325						
ANR	667057	Symbol	r_config_get_i		666325						
ANR	667058	Symbol	name		666325						
ANR	667059	Symbol	r_str_trim_ro		666325						
ANR	667060	Symbol	true		666325						
ANR	667061	Symbol	r_list_empty		666325						
ANR	667062	Symbol	* rad		666325						
ANR	667063	Symbol	r_listinfo_free		666325						
ANR	667064	DeclStmt									
ANR	667065	Decl							RList	"RList * ( RCore * core , ut64 addr , RAnalBlock * dest )"	recurse_bb
ANR	667066	Function	recurse	3289:0:102933:103180							
ANR	667067	FunctionDef	"recurse (RCore * core , RAnalBlock * from , RAnalBlock * dest)"		667066	0					
ANR	667068	CompoundStatement		3289:71:103004:103180	667066	0					
ANR	667069	ExpressionStatement	"recurse_bb ( core , from -> jump , dest )"	3290:1:103007:103042	667066	0	True				
ANR	667070	CallExpression	"recurse_bb ( core , from -> jump , dest )"		667066	0					
ANR	667071	Callee	recurse_bb		667066	0					
ANR	667072	Identifier	recurse_bb		667066	0					
ANR	667073	ArgumentList	core		667066	1					
ANR	667074	Argument	core		667066	0					
ANR	667075	Identifier	core		667066	0					
ANR	667076	Argument	from -> jump		667066	1					
ANR	667077	PtrMemberAccess	from -> jump		667066	0					
ANR	667078	Identifier	from		667066	0					
ANR	667079	Identifier	jump		667066	1					
ANR	667080	Argument	dest		667066	2					
ANR	667081	Identifier	dest		667066	0					
ANR	667082	ExpressionStatement	"recurse_bb ( core , from -> fail , dest )"	3291:1:103045:103080	667066	1	True				
ANR	667083	CallExpression	"recurse_bb ( core , from -> fail , dest )"		667066	0					
ANR	667084	Callee	recurse_bb		667066	0					
ANR	667085	Identifier	recurse_bb		667066	0					
ANR	667086	ArgumentList	core		667066	1					
ANR	667087	Argument	core		667066	0					
ANR	667088	Identifier	core		667066	0					
ANR	667089	Argument	from -> fail		667066	1					
ANR	667090	PtrMemberAccess	from -> fail		667066	0					
ANR	667091	Identifier	from		667066	0					
ANR	667092	Identifier	fail		667066	1					
ANR	667093	Argument	dest		667066	2					
ANR	667094	Identifier	dest		667066	0					
ANR	667095	ReturnStatement	return NULL ;	3295:1:103167:103178	667066	2	True				
ANR	667096	Identifier	NULL		667066	0					
ANR	667097	ReturnType	static RList *		667066	1					
ANR	667098	Identifier	recurse		667066	2					
ANR	667099	ParameterList	"RCore * core , RAnalBlock * from , RAnalBlock * dest"		667066	3					
ANR	667100	Parameter	RCore * core	3289:22:102955:102965	667066	0	True				
ANR	667101	ParameterType	RCore *		667066	0					
ANR	667102	Identifier	core		667066	1					
ANR	667103	Parameter	RAnalBlock * from	3289:35:102968:102983	667066	1	True				
ANR	667104	ParameterType	RAnalBlock *		667066	0					
ANR	667105	Identifier	from		667066	1					
ANR	667106	Parameter	RAnalBlock * dest	3289:53:102986:103001	667066	2	True				
ANR	667107	ParameterType	RAnalBlock *		667066	0					
ANR	667108	Identifier	dest		667066	1					
ANR	667109	CFGEntryNode	ENTRY		667066		True				
ANR	667110	CFGExitNode	EXIT		667066		True				
ANR	667111	Symbol	core		667066						
ANR	667112	Symbol	NULL		667066						
ANR	667113	Symbol	from		667066						
ANR	667114	Symbol	dest		667066						
ANR	667115	Symbol	from -> jump		667066						
ANR	667116	Symbol	* from		667066						
ANR	667117	Symbol	from -> fail		667066						
ANR	667118	Function	recurse_bb	3298:0:103183:103440							
ANR	667119	FunctionDef	"recurse_bb (RCore * core , ut64 addr , RAnalBlock * dest)"		667118	0					
ANR	667120	CompoundStatement		3298:67:103250:103440	667118	0					
ANR	667121	IdentifierDeclStatement	RAnalBlock * bb ;	3299:1:103253:103267	667118	0	True				
ANR	667122	IdentifierDecl	* bb		667118	0					
ANR	667123	IdentifierDeclType	RAnalBlock *		667118	0					
ANR	667124	Identifier	bb		667118	1					
ANR	667125	IdentifierDeclStatement	RList * ret ;	3300:1:103270:103280	667118	1	True				
ANR	667126	IdentifierDecl	* ret		667118	0					
ANR	667127	IdentifierDeclType	RList *		667118	0					
ANR	667128	Identifier	ret		667118	1					
ANR	667129	ExpressionStatement	"bb = r_anal_bb_from_offset ( core -> anal , addr )"	3301:1:103283:103328	667118	2	True				
ANR	667130	AssignmentExpression	"bb = r_anal_bb_from_offset ( core -> anal , addr )"		667118	0		=			
ANR	667131	Identifier	bb		667118	0					
ANR	667132	CallExpression	"r_anal_bb_from_offset ( core -> anal , addr )"		667118	1					
ANR	667133	Callee	r_anal_bb_from_offset		667118	0					
ANR	667134	Identifier	r_anal_bb_from_offset		667118	0					
ANR	667135	ArgumentList	core -> anal		667118	1					
ANR	667136	Argument	core -> anal		667118	0					
ANR	667137	PtrMemberAccess	core -> anal		667118	0					
ANR	667138	Identifier	core		667118	0					
ANR	667139	Identifier	anal		667118	1					
ANR	667140	Argument	addr		667118	1					
ANR	667141	Identifier	addr		667118	0					
ANR	667142	IfStatement	if ( bb == dest )		667118	3					
ANR	667143	Condition	bb == dest	3302:5:103335:103344	667118	0	True				
ANR	667144	EqualityExpression	bb == dest		667118	0		==			
ANR	667145	Identifier	bb		667118	0					
ANR	667146	Identifier	dest		667118	1					
ANR	667147	CompoundStatement		5:17:96:96	667118	1					
ANR	667148	ExpressionStatement	"eprintf ( ""path found!"" )"	3303:2:103351:103374	667118	0	True				
ANR	667149	CallExpression	"eprintf ( ""path found!"" )"		667118	0					
ANR	667150	Callee	eprintf		667118	0					
ANR	667151	Identifier	eprintf		667118	0					
ANR	667152	ArgumentList	"""path found!"""		667118	1					
ANR	667153	Argument	"""path found!"""		667118	0					
ANR	667154	PrimaryExpression	"""path found!"""		667118	0					
ANR	667155	ReturnStatement	return NULL ;	3304:2:103378:103389	667118	1	True				
ANR	667156	Identifier	NULL		667118	0					
ANR	667157	ExpressionStatement	"ret = recurse ( core , bb , dest )"	3306:1:103395:103425	667118	4	True				
ANR	667158	AssignmentExpression	"ret = recurse ( core , bb , dest )"		667118	0		=			
ANR	667159	Identifier	ret		667118	0					
ANR	667160	CallExpression	"recurse ( core , bb , dest )"		667118	1					
ANR	667161	Callee	recurse		667118	0					
ANR	667162	Identifier	recurse		667118	0					
ANR	667163	ArgumentList	core		667118	1					
ANR	667164	Argument	core		667118	0					
ANR	667165	Identifier	core		667118	0					
ANR	667166	Argument	bb		667118	1					
ANR	667167	Identifier	bb		667118	0					
ANR	667168	Argument	dest		667118	2					
ANR	667169	Identifier	dest		667118	0					
ANR	667170	ReturnStatement	return ret ;	3307:1:103428:103438	667118	5	True				
ANR	667171	Identifier	ret		667118	0					
ANR	667172	ReturnType	static RList *		667118	1					
ANR	667173	Identifier	recurse_bb		667118	2					
ANR	667174	ParameterList	"RCore * core , ut64 addr , RAnalBlock * dest"		667118	3					
ANR	667175	Parameter	RCore * core	3298:25:103208:103218	667118	0	True				
ANR	667176	ParameterType	RCore *		667118	0					
ANR	667177	Identifier	core		667118	1					
ANR	667178	Parameter	ut64 addr	3298:38:103221:103229	667118	1	True				
ANR	667179	ParameterType	ut64		667118	0					
ANR	667180	Identifier	addr		667118	1					
ANR	667181	Parameter	RAnalBlock * dest	3298:49:103232:103247	667118	2	True				
ANR	667182	ParameterType	RAnalBlock *		667118	0					
ANR	667183	Identifier	dest		667118	1					
ANR	667184	CFGEntryNode	ENTRY		667118		True				
ANR	667185	CFGExitNode	EXIT		667118		True				
ANR	667186	Symbol	bb		667118						
ANR	667187	Symbol	ret		667118						
ANR	667188	Symbol	core		667118						
ANR	667189	Symbol	r_anal_bb_from_offset		667118						
ANR	667190	Symbol	NULL		667118						
ANR	667191	Symbol	recurse		667118						
ANR	667192	Symbol	* core		667118						
ANR	667193	Symbol	addr		667118						
ANR	667194	Symbol	dest		667118						
ANR	667195	Symbol	core -> anal		667118						
ANR	667196	Function	r_core_recover_vars	3311:0:103492:104527							
ANR	667197	FunctionDef	"r_core_recover_vars (RCore * core , RAnalFunction * fcn , bool argonly)"		667196	0					
ANR	667198	CompoundStatement		3311:78:103570:104527	667196	0					
ANR	667199	IdentifierDeclStatement	RListIter * tmp = NULL ;	3312:1:103573:103594	667196	0	True				
ANR	667200	IdentifierDecl	* tmp = NULL		667196	0					
ANR	667201	IdentifierDeclType	RListIter *		667196	0					
ANR	667202	Identifier	tmp		667196	1					
ANR	667203	AssignmentExpression	* tmp = NULL		667196	2		=			
ANR	667204	Identifier	NULL		667196	0					
ANR	667205	Identifier	NULL		667196	1					
ANR	667206	IdentifierDeclStatement	RAnalBlock * bb = NULL ;	3313:1:103597:103618	667196	1	True				
ANR	667207	IdentifierDecl	* bb = NULL		667196	0					
ANR	667208	IdentifierDeclType	RAnalBlock *		667196	0					
ANR	667209	Identifier	bb		667196	1					
ANR	667210	AssignmentExpression	* bb = NULL		667196	2		=			
ANR	667211	Identifier	NULL		667196	0					
ANR	667212	Identifier	NULL		667196	1					
ANR	667213	IdentifierDeclStatement	int count = 0 ;	3314:1:103621:103634	667196	2	True				
ANR	667214	IdentifierDecl	count = 0		667196	0					
ANR	667215	IdentifierDeclType	int		667196	0					
ANR	667216	Identifier	count		667196	1					
ANR	667217	AssignmentExpression	count = 0		667196	2		=			
ANR	667218	Identifier	count		667196	0					
ANR	667219	PrimaryExpression	0		667196	1					
ANR	667220	IdentifierDeclStatement	int reg_set [ R_ANAL_CC_MAXARG ] = { 0 } ;	3315:1:103637:103672	667196	3	True				
ANR	667221	IdentifierDecl	reg_set [ R_ANAL_CC_MAXARG ] = { 0 }		667196	0					
ANR	667222	IdentifierDeclType	int [ R_ANAL_CC_MAXARG ]		667196	0					
ANR	667223	Identifier	reg_set		667196	1					
ANR	667224	Identifier	R_ANAL_CC_MAXARG		667196	2					
ANR	667225	AssignmentExpression	reg_set [ R_ANAL_CC_MAXARG ] = { 0 }		667196	3		=			
ANR	667226	Identifier	R_ANAL_CC_MAXARG		667196	0					
ANR	667227	InitializerList	0		667196	1					
ANR	667228	PrimaryExpression	0		667196	0					
ANR	667229	ExpressionStatement	r_return_if_fail ( core && core -> anal && fcn )	3317:1:103676:103720	667196	4	True				
ANR	667230	CallExpression	r_return_if_fail ( core && core -> anal && fcn )		667196	0					
ANR	667231	Callee	r_return_if_fail		667196	0					
ANR	667232	Identifier	r_return_if_fail		667196	0					
ANR	667233	ArgumentList	core && core -> anal && fcn		667196	1					
ANR	667234	Argument	core && core -> anal && fcn		667196	0					
ANR	667235	AndExpression	core && core -> anal && fcn		667196	0		&&			
ANR	667236	Identifier	core		667196	0					
ANR	667237	AndExpression	core -> anal && fcn		667196	1		&&			
ANR	667238	PtrMemberAccess	core -> anal		667196	0					
ANR	667239	Identifier	core		667196	0					
ANR	667240	Identifier	anal		667196	1					
ANR	667241	Identifier	fcn		667196	1					
ANR	667242	IfStatement	if ( core -> anal -> opt . bb_max_size < 1 )		667196	5					
ANR	667243	Condition	core -> anal -> opt . bb_max_size < 1	3318:5:103727:103757	667196	0	True				
ANR	667244	RelationalExpression	core -> anal -> opt . bb_max_size < 1		667196	0		<			
ANR	667245	MemberAccess	core -> anal -> opt . bb_max_size		667196	0					
ANR	667246	PtrMemberAccess	core -> anal -> opt		667196	0					
ANR	667247	PtrMemberAccess	core -> anal		667196	0					
ANR	667248	Identifier	core		667196	0					
ANR	667249	Identifier	anal		667196	1					
ANR	667250	Identifier	opt		667196	1					
ANR	667251	Identifier	bb_max_size		667196	1					
ANR	667252	PrimaryExpression	1		667196	1					
ANR	667253	CompoundStatement		8:38:189:189	667196	1					
ANR	667254	ReturnStatement	return ;	3319:2:103764:103770	667196	0	True				
ANR	667255	IdentifierDeclStatement	const int max_bb_size = core -> anal -> opt . bb_max_size ;	3321:1:103776:103827	667196	6	True				
ANR	667256	IdentifierDecl	max_bb_size = core -> anal -> opt . bb_max_size		667196	0					
ANR	667257	IdentifierDeclType	const int		667196	0					
ANR	667258	Identifier	max_bb_size		667196	1					
ANR	667259	AssignmentExpression	max_bb_size = core -> anal -> opt . bb_max_size		667196	2		=			
ANR	667260	Identifier	max_bb_size		667196	0					
ANR	667261	MemberAccess	core -> anal -> opt . bb_max_size		667196	1					
ANR	667262	PtrMemberAccess	core -> anal -> opt		667196	0					
ANR	667263	PtrMemberAccess	core -> anal		667196	0					
ANR	667264	Identifier	core		667196	0					
ANR	667265	Identifier	anal		667196	1					
ANR	667266	Identifier	opt		667196	1					
ANR	667267	Identifier	bb_max_size		667196	1					
ANR	667268	Statement	r_list_foreach	3322:1:103830:103843	667196	7	True				
ANR	667269	Statement	(	3322:16:103845:103845	667196	8	True				
ANR	667270	Statement	fcn	3322:17:103846:103848	667196	9	True				
ANR	667271	Statement	->	3322:20:103849:103850	667196	10	True				
ANR	667272	Statement	bbs	3322:22:103851:103853	667196	11	True				
ANR	667273	Statement	","	3322:25:103854:103854	667196	12	True				
ANR	667274	Statement	tmp	3322:27:103856:103858	667196	13	True				
ANR	667275	Statement	","	3322:30:103859:103859	667196	14	True				
ANR	667276	Statement	bb	3322:32:103861:103862	667196	15	True				
ANR	667277	Statement	)	3322:34:103863:103863	667196	16	True				
ANR	667278	CompoundStatement		22:2:430:449	667196	17					
ANR	667279	IfStatement	if ( r_cons_is_breaked ( ) )		667196	0					
ANR	667280	Condition	r_cons_is_breaked ( )	3323:6:103873:103892	667196	0	True				
ANR	667281	CallExpression	r_cons_is_breaked ( )		667196	0					
ANR	667282	Callee	r_cons_is_breaked		667196	0					
ANR	667283	Identifier	r_cons_is_breaked		667196	0					
ANR	667284	ArgumentList			667196	1					
ANR	667285	CompoundStatement		13:28:324:324	667196	1					
ANR	667286	BreakStatement	break ;	3324:3:103900:103905	667196	0	True				
ANR	667287	IfStatement	if ( bb -> size < 1 )		667196	1					
ANR	667288	Condition	bb -> size < 1	3326:6:103917:103928	667196	0	True				
ANR	667289	RelationalExpression	bb -> size < 1		667196	0		<			
ANR	667290	PtrMemberAccess	bb -> size		667196	0					
ANR	667291	Identifier	bb		667196	0					
ANR	667292	Identifier	size		667196	1					
ANR	667293	PrimaryExpression	1		667196	1					
ANR	667294	CompoundStatement		16:20:360:360	667196	1					
ANR	667295	ContinueStatement	continue ;	3327:3:103936:103944	667196	0	True				
ANR	667296	IfStatement	if ( bb -> size > max_bb_size )		667196	2					
ANR	667297	Condition	bb -> size > max_bb_size	3329:6:103956:103977	667196	0	True				
ANR	667298	RelationalExpression	bb -> size > max_bb_size		667196	0		>			
ANR	667299	PtrMemberAccess	bb -> size		667196	0					
ANR	667300	Identifier	bb		667196	0					
ANR	667301	Identifier	size		667196	1					
ANR	667302	Identifier	max_bb_size		667196	1					
ANR	667303	CompoundStatement		19:30:409:409	667196	1					
ANR	667304	ContinueStatement	continue ;	3330:3:103985:103993	667196	0	True				
ANR	667305	IdentifierDeclStatement	ut64 pos = bb -> addr ;	3332:2:104001:104020	667196	3	True				
ANR	667306	IdentifierDecl	pos = bb -> addr		667196	0					
ANR	667307	IdentifierDeclType	ut64		667196	0					
ANR	667308	Identifier	pos		667196	1					
ANR	667309	AssignmentExpression	pos = bb -> addr		667196	2		=			
ANR	667310	Identifier	pos		667196	0					
ANR	667311	PtrMemberAccess	bb -> addr		667196	1					
ANR	667312	Identifier	bb		667196	0					
ANR	667313	Identifier	addr		667196	1					
ANR	667314	WhileStatement	while ( pos < bb -> addr + bb -> size )		667196	4					
ANR	667315	Condition	pos < bb -> addr + bb -> size	3333:9:104031:104055	667196	0	True				
ANR	667316	RelationalExpression	pos < bb -> addr + bb -> size		667196	0		<			
ANR	667317	Identifier	pos		667196	0					
ANR	667318	AdditiveExpression	bb -> addr + bb -> size		667196	1		+			
ANR	667319	PtrMemberAccess	bb -> addr		667196	0					
ANR	667320	Identifier	bb		667196	0					
ANR	667321	Identifier	addr		667196	1					
ANR	667322	PtrMemberAccess	bb -> size		667196	1					
ANR	667323	Identifier	bb		667196	0					
ANR	667324	Identifier	size		667196	1					
ANR	667325	CompoundStatement		36:3:847:868	667196	1					
ANR	667326	IfStatement	if ( r_cons_is_breaked ( ) )		667196	0					
ANR	667327	Condition	r_cons_is_breaked ( )	3334:7:104067:104086	667196	0	True				
ANR	667328	CallExpression	r_cons_is_breaked ( )		667196	0					
ANR	667329	Callee	r_cons_is_breaked		667196	0					
ANR	667330	Identifier	r_cons_is_breaked		667196	0					
ANR	667331	ArgumentList			667196	1					
ANR	667332	CompoundStatement		24:29:518:518	667196	1					
ANR	667333	BreakStatement	break ;	3335:4:104095:104100	667196	0	True				
ANR	667334	IdentifierDeclStatement	"RAnalOp * op = r_core_anal_op ( core , pos , R_ANAL_OP_MASK_ESIL | R_ANAL_OP_MASK_VAL | R_ANAL_OP_MASK_HINT ) ;"	3337:3:104110:104214	667196	1	True				
ANR	667335	IdentifierDecl	"* op = r_core_anal_op ( core , pos , R_ANAL_OP_MASK_ESIL | R_ANAL_OP_MASK_VAL | R_ANAL_OP_MASK_HINT )"		667196	0					
ANR	667336	IdentifierDeclType	RAnalOp *		667196	0					
ANR	667337	Identifier	op		667196	1					
ANR	667338	AssignmentExpression	"* op = r_core_anal_op ( core , pos , R_ANAL_OP_MASK_ESIL | R_ANAL_OP_MASK_VAL | R_ANAL_OP_MASK_HINT )"		667196	2		=			
ANR	667339	Identifier	op		667196	0					
ANR	667340	CallExpression	"r_core_anal_op ( core , pos , R_ANAL_OP_MASK_ESIL | R_ANAL_OP_MASK_VAL | R_ANAL_OP_MASK_HINT )"		667196	1					
ANR	667341	Callee	r_core_anal_op		667196	0					
ANR	667342	Identifier	r_core_anal_op		667196	0					
ANR	667343	ArgumentList	core		667196	1					
ANR	667344	Argument	core		667196	0					
ANR	667345	Identifier	core		667196	0					
ANR	667346	Argument	pos		667196	1					
ANR	667347	Identifier	pos		667196	0					
ANR	667348	Argument	R_ANAL_OP_MASK_ESIL | R_ANAL_OP_MASK_VAL | R_ANAL_OP_MASK_HINT		667196	2					
ANR	667349	InclusiveOrExpression	R_ANAL_OP_MASK_ESIL | R_ANAL_OP_MASK_VAL | R_ANAL_OP_MASK_HINT		667196	0		|			
ANR	667350	Identifier	R_ANAL_OP_MASK_ESIL		667196	0					
ANR	667351	InclusiveOrExpression	R_ANAL_OP_MASK_VAL | R_ANAL_OP_MASK_HINT		667196	1		|			
ANR	667352	Identifier	R_ANAL_OP_MASK_VAL		667196	0					
ANR	667353	Identifier	R_ANAL_OP_MASK_HINT		667196	1					
ANR	667354	IfStatement	if ( ! op )		667196	2					
ANR	667355	Condition	! op	3338:7:104223:104225	667196	0	True				
ANR	667356	UnaryOperationExpression	! op		667196	0					
ANR	667357	UnaryOperator	!		667196	0					
ANR	667358	Identifier	op		667196	1					
ANR	667359	CompoundStatement		28:12:657:657	667196	1					
ANR	667360	BreakStatement	break ;	3340:4:104269:104274	667196	0	True				
ANR	667361	ExpressionStatement	"r_anal_extract_rarg ( core -> anal , op , fcn , reg_set , & count )"	3342:3:104284:104342	667196	3	True				
ANR	667362	CallExpression	"r_anal_extract_rarg ( core -> anal , op , fcn , reg_set , & count )"		667196	0					
ANR	667363	Callee	r_anal_extract_rarg		667196	0					
ANR	667364	Identifier	r_anal_extract_rarg		667196	0					
ANR	667365	ArgumentList	core -> anal		667196	1					
ANR	667366	Argument	core -> anal		667196	0					
ANR	667367	PtrMemberAccess	core -> anal		667196	0					
ANR	667368	Identifier	core		667196	0					
ANR	667369	Identifier	anal		667196	1					
ANR	667370	Argument	op		667196	1					
ANR	667371	Identifier	op		667196	0					
ANR	667372	Argument	fcn		667196	2					
ANR	667373	Identifier	fcn		667196	0					
ANR	667374	Argument	reg_set		667196	3					
ANR	667375	Identifier	reg_set		667196	0					
ANR	667376	Argument	& count		667196	4					
ANR	667377	UnaryOperationExpression	& count		667196	0					
ANR	667378	UnaryOperator	&		667196	0					
ANR	667379	Identifier	count		667196	1					
ANR	667380	IfStatement	if ( ! argonly )		667196	4					
ANR	667381	Condition	! argonly	3343:7:104351:104358	667196	0	True				
ANR	667382	UnaryOperationExpression	! argonly		667196	0					
ANR	667383	UnaryOperator	!		667196	0					
ANR	667384	Identifier	argonly		667196	1					
ANR	667385	CompoundStatement		33:17:790:790	667196	1					
ANR	667386	ExpressionStatement	"r_anal_extract_vars ( core -> anal , fcn , op )"	3344:4:104367:104408	667196	0	True				
ANR	667387	CallExpression	"r_anal_extract_vars ( core -> anal , fcn , op )"		667196	0					
ANR	667388	Callee	r_anal_extract_vars		667196	0					
ANR	667389	Identifier	r_anal_extract_vars		667196	0					
ANR	667390	ArgumentList	core -> anal		667196	1					
ANR	667391	Argument	core -> anal		667196	0					
ANR	667392	PtrMemberAccess	core -> anal		667196	0					
ANR	667393	Identifier	core		667196	0					
ANR	667394	Identifier	anal		667196	1					
ANR	667395	Argument	fcn		667196	1					
ANR	667396	Identifier	fcn		667196	0					
ANR	667397	Argument	op		667196	2					
ANR	667398	Identifier	op		667196	0					
ANR	667399	IdentifierDeclStatement	int opsize = op -> size ;	3346:3:104418:104439	667196	5	True				
ANR	667400	IdentifierDecl	opsize = op -> size		667196	0					
ANR	667401	IdentifierDeclType	int		667196	0					
ANR	667402	Identifier	opsize		667196	1					
ANR	667403	AssignmentExpression	opsize = op -> size		667196	2		=			
ANR	667404	Identifier	opsize		667196	0					
ANR	667405	PtrMemberAccess	op -> size		667196	1					
ANR	667406	Identifier	op		667196	0					
ANR	667407	Identifier	size		667196	1					
ANR	667408	ExpressionStatement	r_anal_op_free ( op )	3347:3:104444:104463	667196	6	True				
ANR	667409	CallExpression	r_anal_op_free ( op )		667196	0					
ANR	667410	Callee	r_anal_op_free		667196	0					
ANR	667411	Identifier	r_anal_op_free		667196	0					
ANR	667412	ArgumentList	op		667196	1					
ANR	667413	Argument	op		667196	0					
ANR	667414	Identifier	op		667196	0					
ANR	667415	IfStatement	if ( opsize < 1 )		667196	7					
ANR	667416	Condition	opsize < 1	3348:7:104472:104481	667196	0	True				
ANR	667417	RelationalExpression	opsize < 1		667196	0		<			
ANR	667418	Identifier	opsize		667196	0					
ANR	667419	PrimaryExpression	1		667196	1					
ANR	667420	CompoundStatement		38:19:913:913	667196	1					
ANR	667421	BreakStatement	break ;	3349:4:104490:104495	667196	0	True				
ANR	667422	ExpressionStatement	pos += opsize	3351:3:104505:104518	667196	8	True				
ANR	667423	AssignmentExpression	pos += opsize		667196	0		+=			
ANR	667424	Identifier	pos		667196	0					
ANR	667425	Identifier	opsize		667196	1					
ANR	667426	ReturnType	R_API void		667196	1					
ANR	667427	Identifier	r_core_recover_vars		667196	2					
ANR	667428	ParameterList	"RCore * core , RAnalFunction * fcn , bool argonly"		667196	3					
ANR	667429	Parameter	RCore * core	3311:31:103523:103533	667196	0	True				
ANR	667430	ParameterType	RCore *		667196	0					
ANR	667431	Identifier	core		667196	1					
ANR	667432	Parameter	RAnalFunction * fcn	3311:44:103536:103553	667196	1	True				
ANR	667433	ParameterType	RAnalFunction *		667196	0					
ANR	667434	Identifier	fcn		667196	1					
ANR	667435	Parameter	bool argonly	3311:64:103556:103567	667196	2	True				
ANR	667436	ParameterType	bool		667196	0					
ANR	667437	Identifier	argonly		667196	1					
ANR	667438	CFGEntryNode	ENTRY		667196		True				
ANR	667439	CFGExitNode	EXIT		667196		True				
ANR	667440	CFGErrorNode	ERROR		667196		True				
ANR	667441	Symbol	bb		667196						
ANR	667442	Symbol	bb -> size		667196						
ANR	667443	Symbol	* op		667196						
ANR	667444	Symbol	* core		667196						
ANR	667445	Symbol	bb -> addr		667196						
ANR	667446	Symbol	r_core_anal_op		667196						
ANR	667447	Symbol	core -> anal		667196						
ANR	667448	Symbol	reg_set		667196						
ANR	667449	Symbol	fcn		667196						
ANR	667450	Symbol	r_cons_is_breaked		667196						
ANR	667451	Symbol	pos		667196						
ANR	667452	Symbol	tmp		667196						
ANR	667453	Symbol	R_ANAL_CC_MAXARG		667196						
ANR	667454	Symbol	* * core		667196						
ANR	667455	Symbol	core -> anal -> opt		667196						
ANR	667456	Symbol	max_bb_size		667196						
ANR	667457	Symbol	op		667196						
ANR	667458	Symbol	NULL		667196						
ANR	667459	Symbol	* bb		667196						
ANR	667460	Symbol	argonly		667196						
ANR	667461	Symbol	R_ANAL_OP_MASK_VAL		667196						
ANR	667462	Symbol	count		667196						
ANR	667463	Symbol	opsize		667196						
ANR	667464	Symbol	core -> anal -> opt . bb_max_size		667196						
ANR	667465	Symbol	core		667196						
ANR	667466	Symbol	* core -> anal		667196						
ANR	667467	Symbol	R_ANAL_OP_MASK_HINT		667196						
ANR	667468	Symbol	& count		667196						
ANR	667469	Symbol	op -> size		667196						
ANR	667470	Symbol	R_ANAL_OP_MASK_ESIL		667196						
ANR	667471	Function	anal_path_exists	3356:0:104530:106072							
ANR	667472	FunctionDef	"anal_path_exists (RCore * core , ut64 from , ut64 to , RList * bbs , int depth , HtUP * state , HtUP * avoid)"		667471	0					
ANR	667473	CompoundStatement		3356:111:104641:106072	667471	0					
ANR	667474	ExpressionStatement	"r_return_val_if_fail ( bbs , false )"	3357:1:104644:104677	667471	0	True				
ANR	667475	CallExpression	"r_return_val_if_fail ( bbs , false )"		667471	0					
ANR	667476	Callee	r_return_val_if_fail		667471	0					
ANR	667477	Identifier	r_return_val_if_fail		667471	0					
ANR	667478	ArgumentList	bbs		667471	1					
ANR	667479	Argument	bbs		667471	0					
ANR	667480	Identifier	bbs		667471	0					
ANR	667481	Argument	false		667471	1					
ANR	667482	Identifier	false		667471	0					
ANR	667483	IdentifierDeclStatement	"RAnalBlock * bb = r_anal_bb_from_offset ( core -> anal , from ) ;"	3358:1:104680:104737	667471	1	True				
ANR	667484	IdentifierDecl	"* bb = r_anal_bb_from_offset ( core -> anal , from )"		667471	0					
ANR	667485	IdentifierDeclType	RAnalBlock *		667471	0					
ANR	667486	Identifier	bb		667471	1					
ANR	667487	AssignmentExpression	"* bb = r_anal_bb_from_offset ( core -> anal , from )"		667471	2		=			
ANR	667488	Identifier	bb		667471	0					
ANR	667489	CallExpression	"r_anal_bb_from_offset ( core -> anal , from )"		667471	1					
ANR	667490	Callee	r_anal_bb_from_offset		667471	0					
ANR	667491	Identifier	r_anal_bb_from_offset		667471	0					
ANR	667492	ArgumentList	core -> anal		667471	1					
ANR	667493	Argument	core -> anal		667471	0					
ANR	667494	PtrMemberAccess	core -> anal		667471	0					
ANR	667495	Identifier	core		667471	0					
ANR	667496	Identifier	anal		667471	1					
ANR	667497	Argument	from		667471	1					
ANR	667498	Identifier	from		667471	0					
ANR	667499	IdentifierDeclStatement	RListIter * iter = NULL ;	3359:1:104740:104762	667471	2	True				
ANR	667500	IdentifierDecl	* iter = NULL		667471	0					
ANR	667501	IdentifierDeclType	RListIter *		667471	0					
ANR	667502	Identifier	iter		667471	1					
ANR	667503	AssignmentExpression	* iter = NULL		667471	2		=			
ANR	667504	Identifier	NULL		667471	0					
ANR	667505	Identifier	NULL		667471	1					
ANR	667506	IdentifierDeclStatement	RAnalRef * refi ;	3360:1:104765:104779	667471	3	True				
ANR	667507	IdentifierDecl	* refi		667471	0					
ANR	667508	IdentifierDeclType	RAnalRef *		667471	0					
ANR	667509	Identifier	refi		667471	1					
ANR	667510	IfStatement	if ( depth < 1 )		667471	4					
ANR	667511	Condition	depth < 1	3362:5:104787:104795	667471	0	True				
ANR	667512	RelationalExpression	depth < 1		667471	0		<			
ANR	667513	Identifier	depth		667471	0					
ANR	667514	PrimaryExpression	1		667471	1					
ANR	667515	CompoundStatement		7:16:156:156	667471	1					
ANR	667516	ExpressionStatement	"eprintf ( ""going too deep\\n"" )"	3363:2:104802:104830	667471	0	True				
ANR	667517	CallExpression	"eprintf ( ""going too deep\\n"" )"		667471	0					
ANR	667518	Callee	eprintf		667471	0					
ANR	667519	Identifier	eprintf		667471	0					
ANR	667520	ArgumentList	"""going too deep\\n"""		667471	1					
ANR	667521	Argument	"""going too deep\\n"""		667471	0					
ANR	667522	PrimaryExpression	"""going too deep\\n"""		667471	0					
ANR	667523	ReturnStatement	return false ;	3364:2:104834:104846	667471	1	True				
ANR	667524	Identifier	false		667471	0					
ANR	667525	IfStatement	if ( ! bb )		667471	5					
ANR	667526	Condition	! bb	3367:5:104857:104859	667471	0	True				
ANR	667527	UnaryOperationExpression	! bb		667471	0					
ANR	667528	UnaryOperator	!		667471	0					
ANR	667529	Identifier	bb		667471	1					
ANR	667530	CompoundStatement		12:10:220:220	667471	1					
ANR	667531	ReturnStatement	return false ;	3368:2:104866:104878	667471	0	True				
ANR	667532	Identifier	false		667471	0					
ANR	667533	ExpressionStatement	"ht_up_update ( state , from , bb )"	3371:1:104885:104915	667471	6	True				
ANR	667534	CallExpression	"ht_up_update ( state , from , bb )"		667471	0					
ANR	667535	Callee	ht_up_update		667471	0					
ANR	667536	Identifier	ht_up_update		667471	0					
ANR	667537	ArgumentList	state		667471	1					
ANR	667538	Argument	state		667471	0					
ANR	667539	Identifier	state		667471	0					
ANR	667540	Argument	from		667471	1					
ANR	667541	Identifier	from		667471	0					
ANR	667542	Argument	bb		667471	2					
ANR	667543	Identifier	bb		667471	0					
ANR	667544	IfStatement	"if ( r_anal_bb_is_in_offset ( bb , to ) || ( ( ! ht_up_find ( avoid , bb -> jump , NULL ) && ! ht_up_find ( state , bb -> jump , NULL ) && anal_path_exists ( core , bb -> jump , to , bbs , depth - 1 , state , avoid ) ) ) || ( ( ! ht_up_find ( avoid , bb -> fail , NULL ) && ! ht_up_find ( state , bb -> fail , NULL ) && anal_path_exists ( core , bb -> fail , to , bbs , depth - 1 , state , avoid ) ) ) )"		667471	7					
ANR	667545	Condition	"r_anal_bb_is_in_offset ( bb , to ) || ( ( ! ht_up_find ( avoid , bb -> jump , NULL ) && ! ht_up_find ( state , bb -> jump , NULL ) && anal_path_exists ( core , bb -> jump , to , bbs , depth - 1 , state , avoid ) ) ) || ( ( ! ht_up_find ( avoid , bb -> fail , NULL ) && ! ht_up_find ( state , bb -> fail , NULL ) && anal_path_exists ( core , bb -> fail , to , bbs , depth - 1 , state , avoid ) ) )"	3374:5:104974:105326	667471	0	True				
ANR	667546	OrExpression	"r_anal_bb_is_in_offset ( bb , to ) || ( ( ! ht_up_find ( avoid , bb -> jump , NULL ) && ! ht_up_find ( state , bb -> jump , NULL ) && anal_path_exists ( core , bb -> jump , to , bbs , depth - 1 , state , avoid ) ) ) || ( ( ! ht_up_find ( avoid , bb -> fail , NULL ) && ! ht_up_find ( state , bb -> fail , NULL ) && anal_path_exists ( core , bb -> fail , to , bbs , depth - 1 , state , avoid ) ) )"		667471	0		||			
ANR	667547	CallExpression	"r_anal_bb_is_in_offset ( bb , to )"		667471	0					
ANR	667548	Callee	r_anal_bb_is_in_offset		667471	0					
ANR	667549	Identifier	r_anal_bb_is_in_offset		667471	0					
ANR	667550	ArgumentList	bb		667471	1					
ANR	667551	Argument	bb		667471	0					
ANR	667552	Identifier	bb		667471	0					
ANR	667553	Argument	to		667471	1					
ANR	667554	Identifier	to		667471	0					
ANR	667555	OrExpression	"( ( ! ht_up_find ( avoid , bb -> jump , NULL ) && ! ht_up_find ( state , bb -> jump , NULL ) && anal_path_exists ( core , bb -> jump , to , bbs , depth - 1 , state , avoid ) ) ) || ( ( ! ht_up_find ( avoid , bb -> fail , NULL ) && ! ht_up_find ( state , bb -> fail , NULL ) && anal_path_exists ( core , bb -> fail , to , bbs , depth - 1 , state , avoid ) ) )"		667471	1		||			
ANR	667556	AndExpression	"! ht_up_find ( avoid , bb -> jump , NULL ) && ! ht_up_find ( state , bb -> jump , NULL ) && anal_path_exists ( core , bb -> jump , to , bbs , depth - 1 , state , avoid )"		667471	0		&&			
ANR	667557	UnaryOperationExpression	"! ht_up_find ( avoid , bb -> jump , NULL )"		667471	0					
ANR	667558	UnaryOperator	!		667471	0					
ANR	667559	CallExpression	"ht_up_find ( avoid , bb -> jump , NULL )"		667471	1					
ANR	667560	Callee	ht_up_find		667471	0					
ANR	667561	Identifier	ht_up_find		667471	0					
ANR	667562	ArgumentList	avoid		667471	1					
ANR	667563	Argument	avoid		667471	0					
ANR	667564	Identifier	avoid		667471	0					
ANR	667565	Argument	bb -> jump		667471	1					
ANR	667566	PtrMemberAccess	bb -> jump		667471	0					
ANR	667567	Identifier	bb		667471	0					
ANR	667568	Identifier	jump		667471	1					
ANR	667569	Argument	NULL		667471	2					
ANR	667570	Identifier	NULL		667471	0					
ANR	667571	AndExpression	"! ht_up_find ( state , bb -> jump , NULL ) && anal_path_exists ( core , bb -> jump , to , bbs , depth - 1 , state , avoid )"		667471	1		&&			
ANR	667572	UnaryOperationExpression	"! ht_up_find ( state , bb -> jump , NULL )"		667471	0					
ANR	667573	UnaryOperator	!		667471	0					
ANR	667574	CallExpression	"ht_up_find ( state , bb -> jump , NULL )"		667471	1					
ANR	667575	Callee	ht_up_find		667471	0					
ANR	667576	Identifier	ht_up_find		667471	0					
ANR	667577	ArgumentList	state		667471	1					
ANR	667578	Argument	state		667471	0					
ANR	667579	Identifier	state		667471	0					
ANR	667580	Argument	bb -> jump		667471	1					
ANR	667581	PtrMemberAccess	bb -> jump		667471	0					
ANR	667582	Identifier	bb		667471	0					
ANR	667583	Identifier	jump		667471	1					
ANR	667584	Argument	NULL		667471	2					
ANR	667585	Identifier	NULL		667471	0					
ANR	667586	CallExpression	"anal_path_exists ( core , bb -> jump , to , bbs , depth - 1 , state , avoid )"		667471	1					
ANR	667587	Callee	anal_path_exists		667471	0					
ANR	667588	Identifier	anal_path_exists		667471	0					
ANR	667589	ArgumentList	core		667471	1					
ANR	667590	Argument	core		667471	0					
ANR	667591	Identifier	core		667471	0					
ANR	667592	Argument	bb -> jump		667471	1					
ANR	667593	PtrMemberAccess	bb -> jump		667471	0					
ANR	667594	Identifier	bb		667471	0					
ANR	667595	Identifier	jump		667471	1					
ANR	667596	Argument	to		667471	2					
ANR	667597	Identifier	to		667471	0					
ANR	667598	Argument	bbs		667471	3					
ANR	667599	Identifier	bbs		667471	0					
ANR	667600	Argument	depth - 1		667471	4					
ANR	667601	AdditiveExpression	depth - 1		667471	0		-			
ANR	667602	Identifier	depth		667471	0					
ANR	667603	PrimaryExpression	1		667471	1					
ANR	667604	Argument	state		667471	5					
ANR	667605	Identifier	state		667471	0					
ANR	667606	Argument	avoid		667471	6					
ANR	667607	Identifier	avoid		667471	0					
ANR	667608	AndExpression	"! ht_up_find ( avoid , bb -> fail , NULL ) && ! ht_up_find ( state , bb -> fail , NULL ) && anal_path_exists ( core , bb -> fail , to , bbs , depth - 1 , state , avoid )"		667471	1		&&			
ANR	667609	UnaryOperationExpression	"! ht_up_find ( avoid , bb -> fail , NULL )"		667471	0					
ANR	667610	UnaryOperator	!		667471	0					
ANR	667611	CallExpression	"ht_up_find ( avoid , bb -> fail , NULL )"		667471	1					
ANR	667612	Callee	ht_up_find		667471	0					
ANR	667613	Identifier	ht_up_find		667471	0					
ANR	667614	ArgumentList	avoid		667471	1					
ANR	667615	Argument	avoid		667471	0					
ANR	667616	Identifier	avoid		667471	0					
ANR	667617	Argument	bb -> fail		667471	1					
ANR	667618	PtrMemberAccess	bb -> fail		667471	0					
ANR	667619	Identifier	bb		667471	0					
ANR	667620	Identifier	fail		667471	1					
ANR	667621	Argument	NULL		667471	2					
ANR	667622	Identifier	NULL		667471	0					
ANR	667623	AndExpression	"! ht_up_find ( state , bb -> fail , NULL ) && anal_path_exists ( core , bb -> fail , to , bbs , depth - 1 , state , avoid )"		667471	1		&&			
ANR	667624	UnaryOperationExpression	"! ht_up_find ( state , bb -> fail , NULL )"		667471	0					
ANR	667625	UnaryOperator	!		667471	0					
ANR	667626	CallExpression	"ht_up_find ( state , bb -> fail , NULL )"		667471	1					
ANR	667627	Callee	ht_up_find		667471	0					
ANR	667628	Identifier	ht_up_find		667471	0					
ANR	667629	ArgumentList	state		667471	1					
ANR	667630	Argument	state		667471	0					
ANR	667631	Identifier	state		667471	0					
ANR	667632	Argument	bb -> fail		667471	1					
ANR	667633	PtrMemberAccess	bb -> fail		667471	0					
ANR	667634	Identifier	bb		667471	0					
ANR	667635	Identifier	fail		667471	1					
ANR	667636	Argument	NULL		667471	2					
ANR	667637	Identifier	NULL		667471	0					
ANR	667638	CallExpression	"anal_path_exists ( core , bb -> fail , to , bbs , depth - 1 , state , avoid )"		667471	1					
ANR	667639	Callee	anal_path_exists		667471	0					
ANR	667640	Identifier	anal_path_exists		667471	0					
ANR	667641	ArgumentList	core		667471	1					
ANR	667642	Argument	core		667471	0					
ANR	667643	Identifier	core		667471	0					
ANR	667644	Argument	bb -> fail		667471	1					
ANR	667645	PtrMemberAccess	bb -> fail		667471	0					
ANR	667646	Identifier	bb		667471	0					
ANR	667647	Identifier	fail		667471	1					
ANR	667648	Argument	to		667471	2					
ANR	667649	Identifier	to		667471	0					
ANR	667650	Argument	bbs		667471	3					
ANR	667651	Identifier	bbs		667471	0					
ANR	667652	Argument	depth - 1		667471	4					
ANR	667653	AdditiveExpression	depth - 1		667471	0		-			
ANR	667654	Identifier	depth		667471	0					
ANR	667655	PrimaryExpression	1		667471	1					
ANR	667656	Argument	state		667471	5					
ANR	667657	Identifier	state		667471	0					
ANR	667658	Argument	avoid		667471	6					
ANR	667659	Identifier	avoid		667471	0					
ANR	667660	CompoundStatement		25:74:687:687	667471	1					
ANR	667661	ExpressionStatement	"r_list_prepend ( bbs , bb )"	3381:2:105333:105357	667471	0	True				
ANR	667662	CallExpression	"r_list_prepend ( bbs , bb )"		667471	0					
ANR	667663	Callee	r_list_prepend		667471	0					
ANR	667664	Identifier	r_list_prepend		667471	0					
ANR	667665	ArgumentList	bbs		667471	1					
ANR	667666	Argument	bbs		667471	0					
ANR	667667	Identifier	bbs		667471	0					
ANR	667668	Argument	bb		667471	1					
ANR	667669	Identifier	bb		667471	0					
ANR	667670	ReturnStatement	return true ;	3382:2:105361:105372	667471	1	True				
ANR	667671	Identifier	true		667471	0					
ANR	667672	IdentifierDeclStatement	"RAnalFunction * cur_fcn = r_anal_get_fcn_in ( core -> anal , from , 0 ) ;"	3386:1:105409:105473	667471	8	True				
ANR	667673	IdentifierDecl	"* cur_fcn = r_anal_get_fcn_in ( core -> anal , from , 0 )"		667471	0					
ANR	667674	IdentifierDeclType	RAnalFunction *		667471	0					
ANR	667675	Identifier	cur_fcn		667471	1					
ANR	667676	AssignmentExpression	"* cur_fcn = r_anal_get_fcn_in ( core -> anal , from , 0 )"		667471	2		=			
ANR	667677	Identifier	cur_fcn		667471	0					
ANR	667678	CallExpression	"r_anal_get_fcn_in ( core -> anal , from , 0 )"		667471	1					
ANR	667679	Callee	r_anal_get_fcn_in		667471	0					
ANR	667680	Identifier	r_anal_get_fcn_in		667471	0					
ANR	667681	ArgumentList	core -> anal		667471	1					
ANR	667682	Argument	core -> anal		667471	0					
ANR	667683	PtrMemberAccess	core -> anal		667471	0					
ANR	667684	Identifier	core		667471	0					
ANR	667685	Identifier	anal		667471	1					
ANR	667686	Argument	from		667471	1					
ANR	667687	Identifier	from		667471	0					
ANR	667688	Argument	0		667471	2					
ANR	667689	PrimaryExpression	0		667471	0					
ANR	667690	IfStatement	if ( cur_fcn )		667471	9					
ANR	667691	Condition	cur_fcn	3389:5:105550:105556	667471	0	True				
ANR	667692	Identifier	cur_fcn		667471	0					
ANR	667693	CompoundStatement		35:2:921:976	667471	1					
ANR	667694	IdentifierDeclStatement	"RList * refs = r_anal_fcn_get_refs ( core -> anal , cur_fcn ) ;"	3390:2:105563:105618	667471	0	True				
ANR	667695	IdentifierDecl	"* refs = r_anal_fcn_get_refs ( core -> anal , cur_fcn )"		667471	0					
ANR	667696	IdentifierDeclType	RList *		667471	0					
ANR	667697	Identifier	refs		667471	1					
ANR	667698	AssignmentExpression	"* refs = r_anal_fcn_get_refs ( core -> anal , cur_fcn )"		667471	2		=			
ANR	667699	Identifier	refs		667471	0					
ANR	667700	CallExpression	"r_anal_fcn_get_refs ( core -> anal , cur_fcn )"		667471	1					
ANR	667701	Callee	r_anal_fcn_get_refs		667471	0					
ANR	667702	Identifier	r_anal_fcn_get_refs		667471	0					
ANR	667703	ArgumentList	core -> anal		667471	1					
ANR	667704	Argument	core -> anal		667471	0					
ANR	667705	PtrMemberAccess	core -> anal		667471	0					
ANR	667706	Identifier	core		667471	0					
ANR	667707	Identifier	anal		667471	1					
ANR	667708	Argument	cur_fcn		667471	1					
ANR	667709	Identifier	cur_fcn		667471	0					
ANR	667710	IfStatement	if ( refs )		667471	1					
ANR	667711	Condition	refs	3391:6:105626:105629	667471	0	True				
ANR	667712	Identifier	refs		667471	0					
ANR	667713	CompoundStatement		36:12:990:990	667471	1					
ANR	667714	Statement	r_list_foreach	3392:3:105637:105650	667471	0	True				
ANR	667715	Statement	(	3392:18:105652:105652	667471	1	True				
ANR	667716	Statement	refs	3392:19:105653:105656	667471	2	True				
ANR	667717	Statement	","	3392:23:105657:105657	667471	3	True				
ANR	667718	Statement	iter	3392:25:105659:105662	667471	4	True				
ANR	667719	Statement	","	3392:29:105663:105663	667471	5	True				
ANR	667720	Statement	refi	3392:31:105665:105668	667471	6	True				
ANR	667721	Statement	)	3392:35:105669:105669	667471	7	True				
ANR	667722	CompoundStatement		37:37:1029:1029	667471	8					
ANR	667723	IfStatement	if ( refi -> type == R_ANAL_REF_TYPE_CALL )		667471	0					
ANR	667724	Condition	refi -> type == R_ANAL_REF_TYPE_CALL	3393:8:105681:105714	667471	0	True				
ANR	667725	EqualityExpression	refi -> type == R_ANAL_REF_TYPE_CALL		667471	0		==			
ANR	667726	PtrMemberAccess	refi -> type		667471	0					
ANR	667727	Identifier	refi		667471	0					
ANR	667728	Identifier	type		667471	1					
ANR	667729	Identifier	R_ANAL_REF_TYPE_CALL		667471	1					
ANR	667730	CompoundStatement		38:44:1075:1075	667471	1					
ANR	667731	IfStatement	"if ( r_anal_bb_is_in_offset ( bb , refi -> at ) )"		667471	0					
ANR	667732	Condition	"r_anal_bb_is_in_offset ( bb , refi -> at )"	3394:9:105728:105764	667471	0	True				
ANR	667733	CallExpression	"r_anal_bb_is_in_offset ( bb , refi -> at )"		667471	0					
ANR	667734	Callee	r_anal_bb_is_in_offset		667471	0					
ANR	667735	Identifier	r_anal_bb_is_in_offset		667471	0					
ANR	667736	ArgumentList	bb		667471	1					
ANR	667737	Argument	bb		667471	0					
ANR	667738	Identifier	bb		667471	0					
ANR	667739	Argument	refi -> at		667471	1					
ANR	667740	PtrMemberAccess	refi -> at		667471	0					
ANR	667741	Identifier	refi		667471	0					
ANR	667742	Identifier	at		667471	1					
ANR	667743	CompoundStatement		39:48:1125:1125	667471	1					
ANR	667744	IfStatement	"if ( ( refi -> at != refi -> addr ) && ! ht_up_find ( state , refi -> addr , NULL ) && anal_path_exists ( core , refi -> addr , to , bbs , depth - 1 , state , avoid ) )"		667471	0					
ANR	667745	Condition	"( refi -> at != refi -> addr ) && ! ht_up_find ( state , refi -> addr , NULL ) && anal_path_exists ( core , refi -> addr , to , bbs , depth - 1 , state , avoid )"	3395:10:105779:105916	667471	0	True				
ANR	667746	AndExpression	"( refi -> at != refi -> addr ) && ! ht_up_find ( state , refi -> addr , NULL ) && anal_path_exists ( core , refi -> addr , to , bbs , depth - 1 , state , avoid )"		667471	0		&&			
ANR	667747	EqualityExpression	refi -> at != refi -> addr		667471	0		!=			
ANR	667748	PtrMemberAccess	refi -> at		667471	0					
ANR	667749	Identifier	refi		667471	0					
ANR	667750	Identifier	at		667471	1					
ANR	667751	PtrMemberAccess	refi -> addr		667471	1					
ANR	667752	Identifier	refi		667471	0					
ANR	667753	Identifier	addr		667471	1					
ANR	667754	AndExpression	"! ht_up_find ( state , refi -> addr , NULL ) && anal_path_exists ( core , refi -> addr , to , bbs , depth - 1 , state , avoid )"		667471	1		&&			
ANR	667755	UnaryOperationExpression	"! ht_up_find ( state , refi -> addr , NULL )"		667471	0					
ANR	667756	UnaryOperator	!		667471	0					
ANR	667757	CallExpression	"ht_up_find ( state , refi -> addr , NULL )"		667471	1					
ANR	667758	Callee	ht_up_find		667471	0					
ANR	667759	Identifier	ht_up_find		667471	0					
ANR	667760	ArgumentList	state		667471	1					
ANR	667761	Argument	state		667471	0					
ANR	667762	Identifier	state		667471	0					
ANR	667763	Argument	refi -> addr		667471	1					
ANR	667764	PtrMemberAccess	refi -> addr		667471	0					
ANR	667765	Identifier	refi		667471	0					
ANR	667766	Identifier	addr		667471	1					
ANR	667767	Argument	NULL		667471	2					
ANR	667768	Identifier	NULL		667471	0					
ANR	667769	CallExpression	"anal_path_exists ( core , refi -> addr , to , bbs , depth - 1 , state , avoid )"		667471	1					
ANR	667770	Callee	anal_path_exists		667471	0					
ANR	667771	Identifier	anal_path_exists		667471	0					
ANR	667772	ArgumentList	core		667471	1					
ANR	667773	Argument	core		667471	0					
ANR	667774	Identifier	core		667471	0					
ANR	667775	Argument	refi -> addr		667471	1					
ANR	667776	PtrMemberAccess	refi -> addr		667471	0					
ANR	667777	Identifier	refi		667471	0					
ANR	667778	Identifier	addr		667471	1					
ANR	667779	Argument	to		667471	2					
ANR	667780	Identifier	to		667471	0					
ANR	667781	Argument	bbs		667471	3					
ANR	667782	Identifier	bbs		667471	0					
ANR	667783	Argument	depth - 1		667471	4					
ANR	667784	AdditiveExpression	depth - 1		667471	0		-			
ANR	667785	Identifier	depth		667471	0					
ANR	667786	PrimaryExpression	1		667471	1					
ANR	667787	Argument	state		667471	5					
ANR	667788	Identifier	state		667471	0					
ANR	667789	Argument	avoid		667471	6					
ANR	667790	Identifier	avoid		667471	0					
ANR	667791	CompoundStatement		40:150:1277:1277	667471	1					
ANR	667792	ExpressionStatement	"r_list_prepend ( bbs , bb )"	3396:7:105928:105952	667471	0	True				
ANR	667793	CallExpression	"r_list_prepend ( bbs , bb )"		667471	0					
ANR	667794	Callee	r_list_prepend		667471	0					
ANR	667795	Identifier	r_list_prepend		667471	0					
ANR	667796	ArgumentList	bbs		667471	1					
ANR	667797	Argument	bbs		667471	0					
ANR	667798	Identifier	bbs		667471	0					
ANR	667799	Argument	bb		667471	1					
ANR	667800	Identifier	bb		667471	0					
ANR	667801	ExpressionStatement	r_list_free ( refs )	3397:7:105961:105979	667471	1	True				
ANR	667802	CallExpression	r_list_free ( refs )		667471	0					
ANR	667803	Callee	r_list_free		667471	0					
ANR	667804	Identifier	r_list_free		667471	0					
ANR	667805	ArgumentList	refs		667471	1					
ANR	667806	Argument	refs		667471	0					
ANR	667807	Identifier	refs		667471	0					
ANR	667808	ReturnStatement	return true ;	3398:7:105988:105999	667471	2	True				
ANR	667809	Identifier	true		667471	0					
ANR	667810	ExpressionStatement	r_list_free ( refs )	3404:2:106033:106051	667471	2	True				
ANR	667811	CallExpression	r_list_free ( refs )		667471	0					
ANR	667812	Callee	r_list_free		667471	0					
ANR	667813	Identifier	r_list_free		667471	0					
ANR	667814	ArgumentList	refs		667471	1					
ANR	667815	Argument	refs		667471	0					
ANR	667816	Identifier	refs		667471	0					
ANR	667817	ReturnStatement	return false ;	3407:1:106058:106070	667471	10	True				
ANR	667818	Identifier	false		667471	0					
ANR	667819	ReturnType	static bool		667471	1					
ANR	667820	Identifier	anal_path_exists		667471	2					
ANR	667821	ParameterList	"RCore * core , ut64 from , ut64 to , RList * bbs , int depth , HtUP * state , HtUP * avoid"		667471	3					
ANR	667822	Parameter	RCore * core	3356:29:104559:104569	667471	0	True				
ANR	667823	ParameterType	RCore *		667471	0					
ANR	667824	Identifier	core		667471	1					
ANR	667825	Parameter	ut64 from	3356:42:104572:104580	667471	1	True				
ANR	667826	ParameterType	ut64		667471	0					
ANR	667827	Identifier	from		667471	1					
ANR	667828	Parameter	ut64 to	3356:53:104583:104589	667471	2	True				
ANR	667829	ParameterType	ut64		667471	0					
ANR	667830	Identifier	to		667471	1					
ANR	667831	Parameter	RList * bbs	3356:62:104592:104601	667471	3	True				
ANR	667832	ParameterType	RList *		667471	0					
ANR	667833	Identifier	bbs		667471	1					
ANR	667834	Parameter	int depth	3356:74:104604:104612	667471	4	True				
ANR	667835	ParameterType	int		667471	0					
ANR	667836	Identifier	depth		667471	1					
ANR	667837	Parameter	HtUP * state	3356:85:104615:104625	667471	5	True				
ANR	667838	ParameterType	HtUP *		667471	0					
ANR	667839	Identifier	state		667471	1					
ANR	667840	Parameter	HtUP * avoid	3356:98:104628:104638	667471	6	True				
ANR	667841	ParameterType	HtUP *		667471	0					
ANR	667842	Identifier	avoid		667471	1					
ANR	667843	CFGEntryNode	ENTRY		667471		True				
ANR	667844	CFGExitNode	EXIT		667471		True				
ANR	667845	Symbol	bb		667471						
ANR	667846	Symbol	ht_up_find		667471						
ANR	667847	Symbol	r_anal_bb_from_offset		667471						
ANR	667848	Symbol	refi		667471						
ANR	667849	Symbol	* core		667471						
ANR	667850	Symbol	core -> anal		667471						
ANR	667851	Symbol	* refi		667471						
ANR	667852	Symbol	refi -> type		667471						
ANR	667853	Symbol	refi -> addr		667471						
ANR	667854	Symbol	refi -> at		667471						
ANR	667855	Symbol	from		667471						
ANR	667856	Symbol	state		667471						
ANR	667857	Symbol	R_ANAL_REF_TYPE_CALL		667471						
ANR	667858	Symbol	bb -> fail		667471						
ANR	667859	Symbol	NULL		667471						
ANR	667860	Symbol	* bb		667471						
ANR	667861	Symbol	false		667471						
ANR	667862	Symbol	iter		667471						
ANR	667863	Symbol	r_anal_fcn_get_refs		667471						
ANR	667864	Symbol	core		667471						
ANR	667865	Symbol	cur_fcn		667471						
ANR	667866	Symbol	bbs		667471						
ANR	667867	Symbol	bb -> jump		667471						
ANR	667868	Symbol	anal_path_exists		667471						
ANR	667869	Symbol	depth		667471						
ANR	667870	Symbol	r_anal_get_fcn_in		667471						
ANR	667871	Symbol	refs		667471						
ANR	667872	Symbol	true		667471						
ANR	667873	Symbol	to		667471						
ANR	667874	Symbol	avoid		667471						
ANR	667875	Symbol	r_anal_bb_is_in_offset		667471						
ANR	667876	Function	anal_graph_to	3410:0:106075:107132							
ANR	667877	FunctionDef	"anal_graph_to (RCore * core , ut64 addr , int depth , HtUP * avoid)"		667876	0					
ANR	667878	CompoundStatement		3410:76:106151:107132	667876	0					
ANR	667879	IdentifierDeclStatement	"RAnalFunction * cur_fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 ) ;"	3411:1:106154:106226	667876	0	True				
ANR	667880	IdentifierDecl	"* cur_fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		667876	0					
ANR	667881	IdentifierDeclType	RAnalFunction *		667876	0					
ANR	667882	Identifier	cur_fcn		667876	1					
ANR	667883	AssignmentExpression	"* cur_fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		667876	2		=			
ANR	667884	Identifier	cur_fcn		667876	0					
ANR	667885	CallExpression	"r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		667876	1					
ANR	667886	Callee	r_anal_get_fcn_in		667876	0					
ANR	667887	Identifier	r_anal_get_fcn_in		667876	0					
ANR	667888	ArgumentList	core -> anal		667876	1					
ANR	667889	Argument	core -> anal		667876	0					
ANR	667890	PtrMemberAccess	core -> anal		667876	0					
ANR	667891	Identifier	core		667876	0					
ANR	667892	Identifier	anal		667876	1					
ANR	667893	Argument	core -> offset		667876	1					
ANR	667894	PtrMemberAccess	core -> offset		667876	0					
ANR	667895	Identifier	core		667876	0					
ANR	667896	Identifier	offset		667876	1					
ANR	667897	Argument	0		667876	2					
ANR	667898	PrimaryExpression	0		667876	0					
ANR	667899	IdentifierDeclStatement	RList * list = r_list_new ( ) ;	3412:1:106229:106256	667876	1	True				
ANR	667900	IdentifierDecl	* list = r_list_new ( )		667876	0					
ANR	667901	IdentifierDeclType	RList *		667876	0					
ANR	667902	Identifier	list		667876	1					
ANR	667903	AssignmentExpression	* list = r_list_new ( )		667876	2		=			
ANR	667904	Identifier	list		667876	0					
ANR	667905	CallExpression	r_list_new ( )		667876	1					
ANR	667906	Callee	r_list_new		667876	0					
ANR	667907	Identifier	r_list_new		667876	0					
ANR	667908	ArgumentList			667876	1					
ANR	667909	IdentifierDeclStatement	HtUP * state = ht_up_new0 ( ) ;	3413:1:106259:106286	667876	2	True				
ANR	667910	IdentifierDecl	* state = ht_up_new0 ( )		667876	0					
ANR	667911	IdentifierDeclType	HtUP *		667876	0					
ANR	667912	Identifier	state		667876	1					
ANR	667913	AssignmentExpression	* state = ht_up_new0 ( )		667876	2		=			
ANR	667914	Identifier	state		667876	0					
ANR	667915	CallExpression	ht_up_new0 ( )		667876	1					
ANR	667916	Callee	ht_up_new0		667876	0					
ANR	667917	Identifier	ht_up_new0		667876	0					
ANR	667918	ArgumentList			667876	1					
ANR	667919	IfStatement	if ( ! list || ! state || ! cur_fcn )		667876	3					
ANR	667920	Condition	! list || ! state || ! cur_fcn	3415:5:106294:106320	667876	0	True				
ANR	667921	OrExpression	! list || ! state || ! cur_fcn		667876	0		||			
ANR	667922	UnaryOperationExpression	! list		667876	0					
ANR	667923	UnaryOperator	!		667876	0					
ANR	667924	Identifier	list		667876	1					
ANR	667925	OrExpression	! state || ! cur_fcn		667876	1		||			
ANR	667926	UnaryOperationExpression	! state		667876	0					
ANR	667927	UnaryOperator	!		667876	0					
ANR	667928	Identifier	state		667876	1					
ANR	667929	UnaryOperationExpression	! cur_fcn		667876	1					
ANR	667930	UnaryOperator	!		667876	0					
ANR	667931	Identifier	cur_fcn		667876	1					
ANR	667932	CompoundStatement		6:34:171:171	667876	1					
ANR	667933	ExpressionStatement	r_list_free ( list )	3416:2:106327:106345	667876	0	True				
ANR	667934	CallExpression	r_list_free ( list )		667876	0					
ANR	667935	Callee	r_list_free		667876	0					
ANR	667936	Identifier	r_list_free		667876	0					
ANR	667937	ArgumentList	list		667876	1					
ANR	667938	Argument	list		667876	0					
ANR	667939	Identifier	list		667876	0					
ANR	667940	ExpressionStatement	ht_up_free ( state )	3417:2:106349:106367	667876	1	True				
ANR	667941	CallExpression	ht_up_free ( state )		667876	0					
ANR	667942	Callee	ht_up_free		667876	0					
ANR	667943	Identifier	ht_up_free		667876	0					
ANR	667944	ArgumentList	state		667876	1					
ANR	667945	Argument	state		667876	0					
ANR	667946	Identifier	state		667876	0					
ANR	667947	ReturnStatement	return NULL ;	3418:2:106371:106382	667876	2	True				
ANR	667948	Identifier	NULL		667876	0					
ANR	667949	IfStatement	"if ( anal_path_exists ( core , core -> offset , addr , list , depth - 1 , state , avoid ) )"		667876	4					
ANR	667950	Condition	"anal_path_exists ( core , core -> offset , addr , list , depth - 1 , state , avoid )"	3422:5:106412:106485	667876	0	True				
ANR	667951	CallExpression	"anal_path_exists ( core , core -> offset , addr , list , depth - 1 , state , avoid )"		667876	0					
ANR	667952	Callee	anal_path_exists		667876	0					
ANR	667953	Identifier	anal_path_exists		667876	0					
ANR	667954	ArgumentList	core		667876	1					
ANR	667955	Argument	core		667876	0					
ANR	667956	Identifier	core		667876	0					
ANR	667957	Argument	core -> offset		667876	1					
ANR	667958	PtrMemberAccess	core -> offset		667876	0					
ANR	667959	Identifier	core		667876	0					
ANR	667960	Identifier	offset		667876	1					
ANR	667961	Argument	addr		667876	2					
ANR	667962	Identifier	addr		667876	0					
ANR	667963	Argument	list		667876	3					
ANR	667964	Identifier	list		667876	0					
ANR	667965	Argument	depth - 1		667876	4					
ANR	667966	AdditiveExpression	depth - 1		667876	0		-			
ANR	667967	Identifier	depth		667876	0					
ANR	667968	PrimaryExpression	1		667876	1					
ANR	667969	Argument	state		667876	5					
ANR	667970	Identifier	state		667876	0					
ANR	667971	Argument	avoid		667876	6					
ANR	667972	Identifier	avoid		667876	0					
ANR	667973	CompoundStatement		13:81:336:336	667876	1					
ANR	667974	ExpressionStatement	ht_up_free ( state )	3423:2:106492:106510	667876	0	True				
ANR	667975	CallExpression	ht_up_free ( state )		667876	0					
ANR	667976	Callee	ht_up_free		667876	0					
ANR	667977	Identifier	ht_up_free		667876	0					
ANR	667978	ArgumentList	state		667876	1					
ANR	667979	Argument	state		667876	0					
ANR	667980	Identifier	state		667876	0					
ANR	667981	ReturnStatement	return list ;	3424:2:106514:106525	667876	1	True				
ANR	667982	Identifier	list		667876	0					
ANR	667983	IdentifierDeclStatement	"RList * xrefs = r_anal_xrefs_get ( core -> anal , cur_fcn -> addr ) ;"	3428:1:106552:106611	667876	5	True				
ANR	667984	IdentifierDecl	"* xrefs = r_anal_xrefs_get ( core -> anal , cur_fcn -> addr )"		667876	0					
ANR	667985	IdentifierDeclType	RList *		667876	0					
ANR	667986	Identifier	xrefs		667876	1					
ANR	667987	AssignmentExpression	"* xrefs = r_anal_xrefs_get ( core -> anal , cur_fcn -> addr )"		667876	2		=			
ANR	667988	Identifier	xrefs		667876	0					
ANR	667989	CallExpression	"r_anal_xrefs_get ( core -> anal , cur_fcn -> addr )"		667876	1					
ANR	667990	Callee	r_anal_xrefs_get		667876	0					
ANR	667991	Identifier	r_anal_xrefs_get		667876	0					
ANR	667992	ArgumentList	core -> anal		667876	1					
ANR	667993	Argument	core -> anal		667876	0					
ANR	667994	PtrMemberAccess	core -> anal		667876	0					
ANR	667995	Identifier	core		667876	0					
ANR	667996	Identifier	anal		667876	1					
ANR	667997	Argument	cur_fcn -> addr		667876	1					
ANR	667998	PtrMemberAccess	cur_fcn -> addr		667876	0					
ANR	667999	Identifier	cur_fcn		667876	0					
ANR	668000	Identifier	addr		667876	1					
ANR	668001	IfStatement	if ( xrefs )		667876	6					
ANR	668002	Condition	xrefs	3429:5:106618:106622	667876	0	True				
ANR	668003	Identifier	xrefs		667876	0					
ANR	668004	CompoundStatement		22:2:496:517	667876	1					
ANR	668005	IdentifierDeclStatement	RListIter * iter ;	3430:2:106629:106644	667876	0	True				
ANR	668006	IdentifierDecl	* iter		667876	0					
ANR	668007	IdentifierDeclType	RListIter *		667876	0					
ANR	668008	Identifier	iter		667876	1					
ANR	668009	IdentifierDeclStatement	RAnalRef * xref = NULL ;	3431:2:106648:106669	667876	1	True				
ANR	668010	IdentifierDecl	* xref = NULL		667876	0					
ANR	668011	IdentifierDeclType	RAnalRef *		667876	0					
ANR	668012	Identifier	xref		667876	1					
ANR	668013	AssignmentExpression	* xref = NULL		667876	2		=			
ANR	668014	Identifier	NULL		667876	0					
ANR	668015	Identifier	NULL		667876	1					
ANR	668016	Statement	r_list_foreach	3432:2:106673:106686	667876	2	True				
ANR	668017	Statement	(	3432:17:106688:106688	667876	3	True				
ANR	668018	Statement	xrefs	3432:18:106689:106693	667876	4	True				
ANR	668019	Statement	","	3432:23:106694:106694	667876	5	True				
ANR	668020	Statement	iter	3432:25:106696:106699	667876	6	True				
ANR	668021	Statement	","	3432:29:106700:106700	667876	7	True				
ANR	668022	Statement	xref	3432:31:106702:106705	667876	8	True				
ANR	668023	Statement	)	3432:35:106706:106706	667876	9	True				
ANR	668024	CompoundStatement		23:37:556:556	667876	10					
ANR	668025	IfStatement	if ( xref -> type == R_ANAL_REF_TYPE_CALL )		667876	0					
ANR	668026	Condition	xref -> type == R_ANAL_REF_TYPE_CALL	3433:7:106717:106750	667876	0	True				
ANR	668027	EqualityExpression	xref -> type == R_ANAL_REF_TYPE_CALL		667876	0		==			
ANR	668028	PtrMemberAccess	xref -> type		667876	0					
ANR	668029	Identifier	xref		667876	0					
ANR	668030	Identifier	type		667876	1					
ANR	668031	Identifier	R_ANAL_REF_TYPE_CALL		667876	1					
ANR	668032	CompoundStatement		25:4:607:633	667876	1					
ANR	668033	IdentifierDeclStatement	ut64 offset = core -> offset ;	3434:4:106759:106785	667876	0	True				
ANR	668034	IdentifierDecl	offset = core -> offset		667876	0					
ANR	668035	IdentifierDeclType	ut64		667876	0					
ANR	668036	Identifier	offset		667876	1					
ANR	668037	AssignmentExpression	offset = core -> offset		667876	2		=			
ANR	668038	Identifier	offset		667876	0					
ANR	668039	PtrMemberAccess	core -> offset		667876	1					
ANR	668040	Identifier	core		667876	0					
ANR	668041	Identifier	offset		667876	1					
ANR	668042	ExpressionStatement	core -> offset = xref -> addr	3435:4:106791:106816	667876	1	True				
ANR	668043	AssignmentExpression	core -> offset = xref -> addr		667876	0		=			
ANR	668044	PtrMemberAccess	core -> offset		667876	0					
ANR	668045	Identifier	core		667876	0					
ANR	668046	Identifier	offset		667876	1					
ANR	668047	PtrMemberAccess	xref -> addr		667876	1					
ANR	668048	Identifier	xref		667876	0					
ANR	668049	Identifier	addr		667876	1					
ANR	668050	ExpressionStatement	r_list_free ( list )	3436:4:106822:106840	667876	2	True				
ANR	668051	CallExpression	r_list_free ( list )		667876	0					
ANR	668052	Callee	r_list_free		667876	0					
ANR	668053	Identifier	r_list_free		667876	0					
ANR	668054	ArgumentList	list		667876	1					
ANR	668055	Argument	list		667876	0					
ANR	668056	Identifier	list		667876	0					
ANR	668057	ExpressionStatement	"list = anal_graph_to ( core , addr , depth - 1 , avoid )"	3437:4:106846:106897	667876	3	True				
ANR	668058	AssignmentExpression	"list = anal_graph_to ( core , addr , depth - 1 , avoid )"		667876	0		=			
ANR	668059	Identifier	list		667876	0					
ANR	668060	CallExpression	"anal_graph_to ( core , addr , depth - 1 , avoid )"		667876	1					
ANR	668061	Callee	anal_graph_to		667876	0					
ANR	668062	Identifier	anal_graph_to		667876	0					
ANR	668063	ArgumentList	core		667876	1					
ANR	668064	Argument	core		667876	0					
ANR	668065	Identifier	core		667876	0					
ANR	668066	Argument	addr		667876	1					
ANR	668067	Identifier	addr		667876	0					
ANR	668068	Argument	depth - 1		667876	2					
ANR	668069	AdditiveExpression	depth - 1		667876	0		-			
ANR	668070	Identifier	depth		667876	0					
ANR	668071	PrimaryExpression	1		667876	1					
ANR	668072	Argument	avoid		667876	3					
ANR	668073	Identifier	avoid		667876	0					
ANR	668074	ExpressionStatement	core -> offset = offset	3438:4:106903:106924	667876	4	True				
ANR	668075	AssignmentExpression	core -> offset = offset		667876	0		=			
ANR	668076	PtrMemberAccess	core -> offset		667876	0					
ANR	668077	Identifier	core		667876	0					
ANR	668078	Identifier	offset		667876	1					
ANR	668079	Identifier	offset		667876	1					
ANR	668080	IfStatement	if ( list && r_list_length ( list ) )		667876	5					
ANR	668081	Condition	list && r_list_length ( list )	3439:8:106934:106961	667876	0	True				
ANR	668082	AndExpression	list && r_list_length ( list )		667876	0		&&			
ANR	668083	Identifier	list		667876	0					
ANR	668084	CallExpression	r_list_length ( list )		667876	1					
ANR	668085	Callee	r_list_length		667876	0					
ANR	668086	Identifier	r_list_length		667876	0					
ANR	668087	ArgumentList	list		667876	1					
ANR	668088	Argument	list		667876	0					
ANR	668089	Identifier	list		667876	0					
ANR	668090	CompoundStatement		30:38:812:812	667876	1					
ANR	668091	ExpressionStatement	r_list_free ( xrefs )	3440:5:106971:106990	667876	0	True				
ANR	668092	CallExpression	r_list_free ( xrefs )		667876	0					
ANR	668093	Callee	r_list_free		667876	0					
ANR	668094	Identifier	r_list_free		667876	0					
ANR	668095	ArgumentList	xrefs		667876	1					
ANR	668096	Argument	xrefs		667876	0					
ANR	668097	Identifier	xrefs		667876	0					
ANR	668098	ExpressionStatement	ht_up_free ( state )	3441:5:106997:107015	667876	1	True				
ANR	668099	CallExpression	ht_up_free ( state )		667876	0					
ANR	668100	Callee	ht_up_free		667876	0					
ANR	668101	Identifier	ht_up_free		667876	0					
ANR	668102	ArgumentList	state		667876	1					
ANR	668103	Argument	state		667876	0					
ANR	668104	Identifier	state		667876	0					
ANR	668105	ReturnStatement	return list ;	3442:5:107022:107033	667876	2	True				
ANR	668106	Identifier	list		667876	0					
ANR	668107	ExpressionStatement	r_list_free ( xrefs )	3448:1:107055:107074	667876	7	True				
ANR	668108	CallExpression	r_list_free ( xrefs )		667876	0					
ANR	668109	Callee	r_list_free		667876	0					
ANR	668110	Identifier	r_list_free		667876	0					
ANR	668111	ArgumentList	xrefs		667876	1					
ANR	668112	Argument	xrefs		667876	0					
ANR	668113	Identifier	xrefs		667876	0					
ANR	668114	ExpressionStatement	ht_up_free ( state )	3449:1:107077:107095	667876	8	True				
ANR	668115	CallExpression	ht_up_free ( state )		667876	0					
ANR	668116	Callee	ht_up_free		667876	0					
ANR	668117	Identifier	ht_up_free		667876	0					
ANR	668118	ArgumentList	state		667876	1					
ANR	668119	Argument	state		667876	0					
ANR	668120	Identifier	state		667876	0					
ANR	668121	ExpressionStatement	r_list_free ( list )	3450:1:107098:107116	667876	9	True				
ANR	668122	CallExpression	r_list_free ( list )		667876	0					
ANR	668123	Callee	r_list_free		667876	0					
ANR	668124	Identifier	r_list_free		667876	0					
ANR	668125	ArgumentList	list		667876	1					
ANR	668126	Argument	list		667876	0					
ANR	668127	Identifier	list		667876	0					
ANR	668128	ReturnStatement	return NULL ;	3451:1:107119:107130	667876	10	True				
ANR	668129	Identifier	NULL		667876	0					
ANR	668130	ReturnType	static RList *		667876	1					
ANR	668131	Identifier	anal_graph_to		667876	2					
ANR	668132	ParameterList	"RCore * core , ut64 addr , int depth , HtUP * avoid"		667876	3					
ANR	668133	Parameter	RCore * core	3410:28:106103:106113	667876	0	True				
ANR	668134	ParameterType	RCore *		667876	0					
ANR	668135	Identifier	core		667876	1					
ANR	668136	Parameter	ut64 addr	3410:41:106116:106124	667876	1	True				
ANR	668137	ParameterType	ut64		667876	0					
ANR	668138	Identifier	addr		667876	1					
ANR	668139	Parameter	int depth	3410:52:106127:106135	667876	2	True				
ANR	668140	ParameterType	int		667876	0					
ANR	668141	Identifier	depth		667876	1					
ANR	668142	Parameter	HtUP * avoid	3410:63:106138:106148	667876	3	True				
ANR	668143	ParameterType	HtUP *		667876	0					
ANR	668144	Identifier	avoid		667876	1					
ANR	668145	CFGEntryNode	ENTRY		667876		True				
ANR	668146	CFGExitNode	EXIT		667876		True				
ANR	668147	Symbol	* core		667876						
ANR	668148	Symbol	core -> offset		667876						
ANR	668149	Symbol	core -> anal		667876						
ANR	668150	Symbol	xref -> addr		667876						
ANR	668151	Symbol	anal_graph_to		667876						
ANR	668152	Symbol	r_anal_xrefs_get		667876						
ANR	668153	Symbol	state		667876						
ANR	668154	Symbol	addr		667876						
ANR	668155	Symbol	* cur_fcn		667876						
ANR	668156	Symbol	R_ANAL_REF_TYPE_CALL		667876						
ANR	668157	Symbol	NULL		667876						
ANR	668158	Symbol	xref		667876						
ANR	668159	Symbol	offset		667876						
ANR	668160	Symbol	xrefs		667876						
ANR	668161	Symbol	iter		667876						
ANR	668162	Symbol	list		667876						
ANR	668163	Symbol	ht_up_new0		667876						
ANR	668164	Symbol	core		667876						
ANR	668165	Symbol	cur_fcn		667876						
ANR	668166	Symbol	anal_path_exists		667876						
ANR	668167	Symbol	depth		667876						
ANR	668168	Symbol	r_anal_get_fcn_in		667876						
ANR	668169	Symbol	cur_fcn -> addr		667876						
ANR	668170	Symbol	* xref		667876						
ANR	668171	Symbol	xref -> type		667876						
ANR	668172	Symbol	avoid		667876						
ANR	668173	Symbol	r_list_length		667876						
ANR	668174	Symbol	r_list_new		667876						
ANR	668175	Function	r_core_anal_graph_to	3454:0:107135:107698							
ANR	668176	FunctionDef	"r_core_anal_graph_to (RCore * core , ut64 addr , int n)"		668175	0					
ANR	668177	CompoundStatement		3454:65:107200:107698	668175	0					
ANR	668178	IdentifierDeclStatement	"int depth = r_config_get_i ( core -> config , ""anal.graph_depth"" ) ;"	3455:1:107203:107264	668175	0	True				
ANR	668179	IdentifierDecl	"depth = r_config_get_i ( core -> config , ""anal.graph_depth"" )"		668175	0					
ANR	668180	IdentifierDeclType	int		668175	0					
ANR	668181	Identifier	depth		668175	1					
ANR	668182	AssignmentExpression	"depth = r_config_get_i ( core -> config , ""anal.graph_depth"" )"		668175	2		=			
ANR	668183	Identifier	depth		668175	0					
ANR	668184	CallExpression	"r_config_get_i ( core -> config , ""anal.graph_depth"" )"		668175	1					
ANR	668185	Callee	r_config_get_i		668175	0					
ANR	668186	Identifier	r_config_get_i		668175	0					
ANR	668187	ArgumentList	core -> config		668175	1					
ANR	668188	Argument	core -> config		668175	0					
ANR	668189	PtrMemberAccess	core -> config		668175	0					
ANR	668190	Identifier	core		668175	0					
ANR	668191	Identifier	config		668175	1					
ANR	668192	Argument	"""anal.graph_depth"""		668175	1					
ANR	668193	PrimaryExpression	"""anal.graph_depth"""		668175	0					
ANR	668194	IdentifierDeclStatement	"RList * path , * paths = r_list_new ( ) ;"	3456:1:107267:107302	668175	1	True				
ANR	668195	IdentifierDecl	* path		668175	0					
ANR	668196	IdentifierDeclType	RList *		668175	0					
ANR	668197	Identifier	path		668175	1					
ANR	668198	IdentifierDecl	* paths = r_list_new ( )		668175	1					
ANR	668199	IdentifierDeclType	RList *		668175	0					
ANR	668200	Identifier	paths		668175	1					
ANR	668201	AssignmentExpression	* paths = r_list_new ( )		668175	2		=			
ANR	668202	Identifier	paths		668175	0					
ANR	668203	CallExpression	r_list_new ( )		668175	1					
ANR	668204	Callee	r_list_new		668175	0					
ANR	668205	Identifier	r_list_new		668175	0					
ANR	668206	ArgumentList			668175	1					
ANR	668207	IdentifierDeclStatement	HtUP * avoid = ht_up_new0 ( ) ;	3457:1:107305:107332	668175	2	True				
ANR	668208	IdentifierDecl	* avoid = ht_up_new0 ( )		668175	0					
ANR	668209	IdentifierDeclType	HtUP *		668175	0					
ANR	668210	Identifier	avoid		668175	1					
ANR	668211	AssignmentExpression	* avoid = ht_up_new0 ( )		668175	2		=			
ANR	668212	Identifier	avoid		668175	0					
ANR	668213	CallExpression	ht_up_new0 ( )		668175	1					
ANR	668214	Callee	ht_up_new0		668175	0					
ANR	668215	Identifier	ht_up_new0		668175	0					
ANR	668216	ArgumentList			668175	1					
ANR	668217	WhileStatement	while ( n )		668175	3					
ANR	668218	Condition	n	3458:8:107342:107342	668175	0	True				
ANR	668219	Identifier	n		668175	0					
ANR	668220	CompoundStatement		5:11:144:144	668175	1					
ANR	668221	ExpressionStatement	"path = anal_graph_to ( core , addr , depth , avoid )"	3459:2:107349:107396	668175	0	True				
ANR	668222	AssignmentExpression	"path = anal_graph_to ( core , addr , depth , avoid )"		668175	0		=			
ANR	668223	Identifier	path		668175	0					
ANR	668224	CallExpression	"anal_graph_to ( core , addr , depth , avoid )"		668175	1					
ANR	668225	Callee	anal_graph_to		668175	0					
ANR	668226	Identifier	anal_graph_to		668175	0					
ANR	668227	ArgumentList	core		668175	1					
ANR	668228	Argument	core		668175	0					
ANR	668229	Identifier	core		668175	0					
ANR	668230	Argument	addr		668175	1					
ANR	668231	Identifier	addr		668175	0					
ANR	668232	Argument	depth		668175	2					
ANR	668233	Identifier	depth		668175	0					
ANR	668234	Argument	avoid		668175	3					
ANR	668235	Identifier	avoid		668175	0					
ANR	668236	IfStatement	if ( path )		668175	1					
ANR	668237	Condition	path	3460:6:107404:107407	668175	0	True				
ANR	668238	Identifier	path		668175	0					
ANR	668239	CompoundStatement		7:12:209:209	668175	1					
ANR	668240	ExpressionStatement	"r_list_append ( paths , path )"	3461:3:107415:107442	668175	0	True				
ANR	668241	CallExpression	"r_list_append ( paths , path )"		668175	0					
ANR	668242	Callee	r_list_append		668175	0					
ANR	668243	Identifier	r_list_append		668175	0					
ANR	668244	ArgumentList	paths		668175	1					
ANR	668245	Argument	paths		668175	0					
ANR	668246	Identifier	paths		668175	0					
ANR	668247	Argument	path		668175	1					
ANR	668248	Identifier	path		668175	0					
ANR	668249	IfStatement	if ( r_list_length ( path ) >= 2 )		668175	1					
ANR	668250	Condition	r_list_length ( path ) >= 2	3462:7:107451:107475	668175	0	True				
ANR	668251	RelationalExpression	r_list_length ( path ) >= 2		668175	0		>=			
ANR	668252	CallExpression	r_list_length ( path )		668175	0					
ANR	668253	Callee	r_list_length		668175	0					
ANR	668254	Identifier	r_list_length		668175	0					
ANR	668255	ArgumentList	path		668175	1					
ANR	668256	Argument	path		668175	0					
ANR	668257	Identifier	path		668175	0					
ANR	668258	PrimaryExpression	2		668175	1					
ANR	668259	CompoundStatement		10:4:283:347	668175	1					
ANR	668260	IdentifierDeclStatement	"RAnalBlock * last = r_list_get_n ( path , r_list_length ( path ) - 2 ) ;"	3463:4:107484:107548	668175	0	True				
ANR	668261	IdentifierDecl	"* last = r_list_get_n ( path , r_list_length ( path ) - 2 )"		668175	0					
ANR	668262	IdentifierDeclType	RAnalBlock *		668175	0					
ANR	668263	Identifier	last		668175	1					
ANR	668264	AssignmentExpression	"* last = r_list_get_n ( path , r_list_length ( path ) - 2 )"		668175	2		=			
ANR	668265	Identifier	last		668175	0					
ANR	668266	CallExpression	"r_list_get_n ( path , r_list_length ( path ) - 2 )"		668175	1					
ANR	668267	Callee	r_list_get_n		668175	0					
ANR	668268	Identifier	r_list_get_n		668175	0					
ANR	668269	ArgumentList	path		668175	1					
ANR	668270	Argument	path		668175	0					
ANR	668271	Identifier	path		668175	0					
ANR	668272	Argument	r_list_length ( path ) - 2		668175	1					
ANR	668273	AdditiveExpression	r_list_length ( path ) - 2		668175	0		-			
ANR	668274	CallExpression	r_list_length ( path )		668175	0					
ANR	668275	Callee	r_list_length		668175	0					
ANR	668276	Identifier	r_list_length		668175	0					
ANR	668277	ArgumentList	path		668175	1					
ANR	668278	Argument	path		668175	0					
ANR	668279	Identifier	path		668175	0					
ANR	668280	PrimaryExpression	2		668175	1					
ANR	668281	ExpressionStatement	"ht_up_update ( avoid , last -> addr , last )"	3464:4:107554:107592	668175	1	True				
ANR	668282	CallExpression	"ht_up_update ( avoid , last -> addr , last )"		668175	0					
ANR	668283	Callee	ht_up_update		668175	0					
ANR	668284	Identifier	ht_up_update		668175	0					
ANR	668285	ArgumentList	avoid		668175	1					
ANR	668286	Argument	avoid		668175	0					
ANR	668287	Identifier	avoid		668175	0					
ANR	668288	Argument	last -> addr		668175	1					
ANR	668289	PtrMemberAccess	last -> addr		668175	0					
ANR	668290	Identifier	last		668175	0					
ANR	668291	Identifier	addr		668175	1					
ANR	668292	Argument	last		668175	2					
ANR	668293	Identifier	last		668175	0					
ANR	668294	ExpressionStatement	n --	3465:4:107598:107601	668175	2	True				
ANR	668295	PostIncDecOperationExpression	n --		668175	0					
ANR	668296	Identifier	n		668175	0					
ANR	668297	IncDec	--		668175	1					
ANR	668298	ContinueStatement	continue ;	3466:4:107607:107615	668175	3	True				
ANR	668299	BreakStatement	break ;	3470:2:107652:107657	668175	2	True				
ANR	668300	ExpressionStatement	ht_up_free ( avoid )	3472:1:107663:107681	668175	4	True				
ANR	668301	CallExpression	ht_up_free ( avoid )		668175	0					
ANR	668302	Callee	ht_up_free		668175	0					
ANR	668303	Identifier	ht_up_free		668175	0					
ANR	668304	ArgumentList	avoid		668175	1					
ANR	668305	Argument	avoid		668175	0					
ANR	668306	Identifier	avoid		668175	0					
ANR	668307	ReturnStatement	return paths ;	3473:1:107684:107696	668175	5	True				
ANR	668308	Identifier	paths		668175	0					
ANR	668309	ReturnType	R_API RList *		668175	1					
ANR	668310	Identifier	r_core_anal_graph_to		668175	2					
ANR	668311	ParameterList	"RCore * core , ut64 addr , int n"		668175	3					
ANR	668312	Parameter	RCore * core	3454:34:107169:107179	668175	0	True				
ANR	668313	ParameterType	RCore *		668175	0					
ANR	668314	Identifier	core		668175	1					
ANR	668315	Parameter	ut64 addr	3454:47:107182:107190	668175	1	True				
ANR	668316	ParameterType	ut64		668175	0					
ANR	668317	Identifier	addr		668175	1					
ANR	668318	Parameter	int n	3454:58:107193:107197	668175	2	True				
ANR	668319	ParameterType	int		668175	0					
ANR	668320	Identifier	n		668175	1					
ANR	668321	CFGEntryNode	ENTRY		668175		True				
ANR	668322	CFGExitNode	EXIT		668175		True				
ANR	668323	Symbol	core -> config		668175						
ANR	668324	Symbol	last -> addr		668175						
ANR	668325	Symbol	last		668175						
ANR	668326	Symbol	* core		668175						
ANR	668327	Symbol	r_list_get_n		668175						
ANR	668328	Symbol	* last		668175						
ANR	668329	Symbol	n		668175						
ANR	668330	Symbol	ht_up_new0		668175						
ANR	668331	Symbol	anal_graph_to		668175						
ANR	668332	Symbol	core		668175						
ANR	668333	Symbol	path		668175						
ANR	668334	Symbol	depth		668175						
ANR	668335	Symbol	paths		668175						
ANR	668336	Symbol	r_config_get_i		668175						
ANR	668337	Symbol	avoid		668175						
ANR	668338	Symbol	addr		668175						
ANR	668339	Symbol	r_list_length		668175						
ANR	668340	Symbol	r_list_new		668175						
ANR	668341	Function	r_core_anal_graph	3476:0:107701:110646							
ANR	668342	FunctionDef	"r_core_anal_graph (RCore * core , ut64 addr , int opts)"		668341	0					
ANR	668343	CompoundStatement		3476:62:107763:110646	668341	0					
ANR	668344	IdentifierDeclStatement	"ut64 from = r_config_get_i ( core -> config , ""graph.from"" ) ;"	3477:1:107766:107821	668341	0	True				
ANR	668345	IdentifierDecl	"from = r_config_get_i ( core -> config , ""graph.from"" )"		668341	0					
ANR	668346	IdentifierDeclType	ut64		668341	0					
ANR	668347	Identifier	from		668341	1					
ANR	668348	AssignmentExpression	"from = r_config_get_i ( core -> config , ""graph.from"" )"		668341	2		=			
ANR	668349	Identifier	from		668341	0					
ANR	668350	CallExpression	"r_config_get_i ( core -> config , ""graph.from"" )"		668341	1					
ANR	668351	Callee	r_config_get_i		668341	0					
ANR	668352	Identifier	r_config_get_i		668341	0					
ANR	668353	ArgumentList	core -> config		668341	1					
ANR	668354	Argument	core -> config		668341	0					
ANR	668355	PtrMemberAccess	core -> config		668341	0					
ANR	668356	Identifier	core		668341	0					
ANR	668357	Identifier	config		668341	1					
ANR	668358	Argument	"""graph.from"""		668341	1					
ANR	668359	PrimaryExpression	"""graph.from"""		668341	0					
ANR	668360	IdentifierDeclStatement	"ut64 to = r_config_get_i ( core -> config , ""graph.to"" ) ;"	3478:1:107824:107875	668341	1	True				
ANR	668361	IdentifierDecl	"to = r_config_get_i ( core -> config , ""graph.to"" )"		668341	0					
ANR	668362	IdentifierDeclType	ut64		668341	0					
ANR	668363	Identifier	to		668341	1					
ANR	668364	AssignmentExpression	"to = r_config_get_i ( core -> config , ""graph.to"" )"		668341	2		=			
ANR	668365	Identifier	to		668341	0					
ANR	668366	CallExpression	"r_config_get_i ( core -> config , ""graph.to"" )"		668341	1					
ANR	668367	Callee	r_config_get_i		668341	0					
ANR	668368	Identifier	r_config_get_i		668341	0					
ANR	668369	ArgumentList	core -> config		668341	1					
ANR	668370	Argument	core -> config		668341	0					
ANR	668371	PtrMemberAccess	core -> config		668341	0					
ANR	668372	Identifier	core		668341	0					
ANR	668373	Identifier	config		668341	1					
ANR	668374	Argument	"""graph.to"""		668341	1					
ANR	668375	PrimaryExpression	"""graph.to"""		668341	0					
ANR	668376	IdentifierDeclStatement	"const char * font = r_config_get ( core -> config , ""graph.font"" ) ;"	3479:1:107878:107938	668341	2	True				
ANR	668377	IdentifierDecl	"* font = r_config_get ( core -> config , ""graph.font"" )"		668341	0					
ANR	668378	IdentifierDeclType	const char *		668341	0					
ANR	668379	Identifier	font		668341	1					
ANR	668380	AssignmentExpression	"* font = r_config_get ( core -> config , ""graph.font"" )"		668341	2		=			
ANR	668381	Identifier	font		668341	0					
ANR	668382	CallExpression	"r_config_get ( core -> config , ""graph.font"" )"		668341	1					
ANR	668383	Callee	r_config_get		668341	0					
ANR	668384	Identifier	r_config_get		668341	0					
ANR	668385	ArgumentList	core -> config		668341	1					
ANR	668386	Argument	core -> config		668341	0					
ANR	668387	PtrMemberAccess	core -> config		668341	0					
ANR	668388	Identifier	core		668341	0					
ANR	668389	Identifier	config		668341	1					
ANR	668390	Argument	"""graph.font"""		668341	1					
ANR	668391	PrimaryExpression	"""graph.font"""		668341	0					
ANR	668392	IdentifierDeclStatement	int is_html = r_cons_singleton ( ) -> is_html ;	3480:1:107941:107983	668341	3	True				
ANR	668393	IdentifierDecl	is_html = r_cons_singleton ( ) -> is_html		668341	0					
ANR	668394	IdentifierDeclType	int		668341	0					
ANR	668395	Identifier	is_html		668341	1					
ANR	668396	AssignmentExpression	is_html = r_cons_singleton ( ) -> is_html		668341	2		=			
ANR	668397	Identifier	is_html		668341	0					
ANR	668398	PtrMemberAccess	r_cons_singleton ( ) -> is_html		668341	1					
ANR	668399	CallExpression	r_cons_singleton ( )		668341	0					
ANR	668400	Callee	r_cons_singleton		668341	0					
ANR	668401	Identifier	r_cons_singleton		668341	0					
ANR	668402	ArgumentList			668341	1					
ANR	668403	Identifier	is_html		668341	1					
ANR	668404	IdentifierDeclStatement	int is_json = opts & R_CORE_ANAL_JSON ;	3481:1:107986:108023	668341	4	True				
ANR	668405	IdentifierDecl	is_json = opts & R_CORE_ANAL_JSON		668341	0					
ANR	668406	IdentifierDeclType	int		668341	0					
ANR	668407	Identifier	is_json		668341	1					
ANR	668408	AssignmentExpression	is_json = opts & R_CORE_ANAL_JSON		668341	2		=			
ANR	668409	Identifier	is_json		668341	0					
ANR	668410	BitAndExpression	opts & R_CORE_ANAL_JSON		668341	1		&			
ANR	668411	Identifier	opts		668341	0					
ANR	668412	Identifier	R_CORE_ANAL_JSON		668341	1					
ANR	668413	IdentifierDeclStatement	int is_json_format_disasm = opts & R_CORE_ANAL_JSON_FORMAT_DISASM ;	3482:1:108026:108091	668341	5	True				
ANR	668414	IdentifierDecl	is_json_format_disasm = opts & R_CORE_ANAL_JSON_FORMAT_DISASM		668341	0					
ANR	668415	IdentifierDeclType	int		668341	0					
ANR	668416	Identifier	is_json_format_disasm		668341	1					
ANR	668417	AssignmentExpression	is_json_format_disasm = opts & R_CORE_ANAL_JSON_FORMAT_DISASM		668341	2		=			
ANR	668418	Identifier	is_json_format_disasm		668341	0					
ANR	668419	BitAndExpression	opts & R_CORE_ANAL_JSON_FORMAT_DISASM		668341	1		&			
ANR	668420	Identifier	opts		668341	0					
ANR	668421	Identifier	R_CORE_ANAL_JSON_FORMAT_DISASM		668341	1					
ANR	668422	IdentifierDeclStatement	int is_keva = opts & R_CORE_ANAL_KEYVALUE ;	3483:1:108094:108135	668341	6	True				
ANR	668423	IdentifierDecl	is_keva = opts & R_CORE_ANAL_KEYVALUE		668341	0					
ANR	668424	IdentifierDeclType	int		668341	0					
ANR	668425	Identifier	is_keva		668341	1					
ANR	668426	AssignmentExpression	is_keva = opts & R_CORE_ANAL_KEYVALUE		668341	2		=			
ANR	668427	Identifier	is_keva		668341	0					
ANR	668428	BitAndExpression	opts & R_CORE_ANAL_KEYVALUE		668341	1		&			
ANR	668429	Identifier	opts		668341	0					
ANR	668430	Identifier	R_CORE_ANAL_KEYVALUE		668341	1					
ANR	668431	IdentifierDeclStatement	int is_star = opts & R_CORE_ANAL_STAR ;	3484:1:108138:108175	668341	7	True				
ANR	668432	IdentifierDecl	is_star = opts & R_CORE_ANAL_STAR		668341	0					
ANR	668433	IdentifierDeclType	int		668341	0					
ANR	668434	Identifier	is_star		668341	1					
ANR	668435	AssignmentExpression	is_star = opts & R_CORE_ANAL_STAR		668341	2		=			
ANR	668436	Identifier	is_star		668341	0					
ANR	668437	BitAndExpression	opts & R_CORE_ANAL_STAR		668341	1		&			
ANR	668438	Identifier	opts		668341	0					
ANR	668439	Identifier	R_CORE_ANAL_STAR		668341	1					
ANR	668440	IdentifierDeclStatement	RConfigHold * hc ;	3485:1:108178:108193	668341	8	True				
ANR	668441	IdentifierDecl	* hc		668341	0					
ANR	668442	IdentifierDeclType	RConfigHold *		668341	0					
ANR	668443	Identifier	hc		668341	1					
ANR	668444	IdentifierDeclStatement	RAnalFunction * fcni ;	3486:1:108196:108215	668341	9	True				
ANR	668445	IdentifierDecl	* fcni		668341	0					
ANR	668446	IdentifierDeclType	RAnalFunction *		668341	0					
ANR	668447	Identifier	fcni		668341	1					
ANR	668448	IdentifierDeclStatement	RListIter * iter ;	3487:1:108218:108233	668341	10	True				
ANR	668449	IdentifierDecl	* iter		668341	0					
ANR	668450	IdentifierDeclType	RListIter *		668341	0					
ANR	668451	Identifier	iter		668341	1					
ANR	668452	IdentifierDeclStatement	int nodes = 0 ;	3488:1:108236:108249	668341	11	True				
ANR	668453	IdentifierDecl	nodes = 0		668341	0					
ANR	668454	IdentifierDeclType	int		668341	0					
ANR	668455	Identifier	nodes		668341	1					
ANR	668456	AssignmentExpression	nodes = 0		668341	2		=			
ANR	668457	Identifier	nodes		668341	0					
ANR	668458	PrimaryExpression	0		668341	1					
ANR	668459	IdentifierDeclStatement	PJ * pj = NULL ;	3489:1:108252:108265	668341	12	True				
ANR	668460	IdentifierDecl	* pj = NULL		668341	0					
ANR	668461	IdentifierDeclType	PJ *		668341	0					
ANR	668462	Identifier	pj		668341	1					
ANR	668463	AssignmentExpression	* pj = NULL		668341	2		=			
ANR	668464	Identifier	NULL		668341	0					
ANR	668465	Identifier	NULL		668341	1					
ANR	668466	IfStatement	if ( ! addr )		668341	13					
ANR	668467	Condition	! addr	3491:5:108273:108277	668341	0	True				
ANR	668468	UnaryOperationExpression	! addr		668341	0					
ANR	668469	UnaryOperator	!		668341	0					
ANR	668470	Identifier	addr		668341	1					
ANR	668471	CompoundStatement		16:12:516:516	668341	1					
ANR	668472	ExpressionStatement	addr = core -> offset	3492:2:108284:108303	668341	0	True				
ANR	668473	AssignmentExpression	addr = core -> offset		668341	0		=			
ANR	668474	Identifier	addr		668341	0					
ANR	668475	PtrMemberAccess	core -> offset		668341	1					
ANR	668476	Identifier	core		668341	0					
ANR	668477	Identifier	offset		668341	1					
ANR	668478	IfStatement	if ( r_list_empty ( core -> anal -> fcns ) )		668341	14					
ANR	668479	Condition	r_list_empty ( core -> anal -> fcns )	3494:5:108313:108343	668341	0	True				
ANR	668480	CallExpression	r_list_empty ( core -> anal -> fcns )		668341	0					
ANR	668481	Callee	r_list_empty		668341	0					
ANR	668482	Identifier	r_list_empty		668341	0					
ANR	668483	ArgumentList	core -> anal -> fcns		668341	1					
ANR	668484	Argument	core -> anal -> fcns		668341	0					
ANR	668485	PtrMemberAccess	core -> anal -> fcns		668341	0					
ANR	668486	PtrMemberAccess	core -> anal		668341	0					
ANR	668487	Identifier	core		668341	0					
ANR	668488	Identifier	anal		668341	1					
ANR	668489	Identifier	fcns		668341	1					
ANR	668490	CompoundStatement		19:38:582:582	668341	1					
ANR	668491	ReturnStatement	return false ;	3495:2:108350:108362	668341	0	True				
ANR	668492	Identifier	false		668341	0					
ANR	668493	ExpressionStatement	hc = r_config_hold_new ( core -> config )	3497:1:108368:108405	668341	15	True				
ANR	668494	AssignmentExpression	hc = r_config_hold_new ( core -> config )		668341	0		=			
ANR	668495	Identifier	hc		668341	0					
ANR	668496	CallExpression	r_config_hold_new ( core -> config )		668341	1					
ANR	668497	Callee	r_config_hold_new		668341	0					
ANR	668498	Identifier	r_config_hold_new		668341	0					
ANR	668499	ArgumentList	core -> config		668341	1					
ANR	668500	Argument	core -> config		668341	0					
ANR	668501	PtrMemberAccess	core -> config		668341	0					
ANR	668502	Identifier	core		668341	0					
ANR	668503	Identifier	config		668341	1					
ANR	668504	IfStatement	if ( ! hc )		668341	16					
ANR	668505	Condition	! hc	3498:5:108412:108414	668341	0	True				
ANR	668506	UnaryOperationExpression	! hc		668341	0					
ANR	668507	UnaryOperator	!		668341	0					
ANR	668508	Identifier	hc		668341	1					
ANR	668509	CompoundStatement		23:10:653:653	668341	1					
ANR	668510	ReturnStatement	return false ;	3499:2:108421:108433	668341	0	True				
ANR	668511	Identifier	false		668341	0					
ANR	668512	ExpressionStatement	"r_config_hold_i ( hc , ""asm.lines"" , ""asm.bytes"" , ""asm.dwarf"" , NULL )"	3502:1:108440:108505	668341	17	True				
ANR	668513	CallExpression	"r_config_hold_i ( hc , ""asm.lines"" , ""asm.bytes"" , ""asm.dwarf"" , NULL )"		668341	0					
ANR	668514	Callee	r_config_hold_i		668341	0					
ANR	668515	Identifier	r_config_hold_i		668341	0					
ANR	668516	ArgumentList	hc		668341	1					
ANR	668517	Argument	hc		668341	0					
ANR	668518	Identifier	hc		668341	0					
ANR	668519	Argument	"""asm.lines"""		668341	1					
ANR	668520	PrimaryExpression	"""asm.lines"""		668341	0					
ANR	668521	Argument	"""asm.bytes"""		668341	2					
ANR	668522	PrimaryExpression	"""asm.bytes"""		668341	0					
ANR	668523	Argument	"""asm.dwarf"""		668341	3					
ANR	668524	PrimaryExpression	"""asm.dwarf"""		668341	0					
ANR	668525	Argument	NULL		668341	4					
ANR	668526	Identifier	NULL		668341	0					
ANR	668527	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.lines"" , 0 )"	3504:1:108542:108587	668341	18	True				
ANR	668528	CallExpression	"r_config_set_i ( core -> config , ""asm.lines"" , 0 )"		668341	0					
ANR	668529	Callee	r_config_set_i		668341	0					
ANR	668530	Identifier	r_config_set_i		668341	0					
ANR	668531	ArgumentList	core -> config		668341	1					
ANR	668532	Argument	core -> config		668341	0					
ANR	668533	PtrMemberAccess	core -> config		668341	0					
ANR	668534	Identifier	core		668341	0					
ANR	668535	Identifier	config		668341	1					
ANR	668536	Argument	"""asm.lines"""		668341	1					
ANR	668537	PrimaryExpression	"""asm.lines"""		668341	0					
ANR	668538	Argument	0		668341	2					
ANR	668539	PrimaryExpression	0		668341	0					
ANR	668540	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.dwarf"" , 0 )"	3505:1:108590:108635	668341	19	True				
ANR	668541	CallExpression	"r_config_set_i ( core -> config , ""asm.dwarf"" , 0 )"		668341	0					
ANR	668542	Callee	r_config_set_i		668341	0					
ANR	668543	Identifier	r_config_set_i		668341	0					
ANR	668544	ArgumentList	core -> config		668341	1					
ANR	668545	Argument	core -> config		668341	0					
ANR	668546	PtrMemberAccess	core -> config		668341	0					
ANR	668547	Identifier	core		668341	0					
ANR	668548	Identifier	config		668341	1					
ANR	668549	Argument	"""asm.dwarf"""		668341	1					
ANR	668550	PrimaryExpression	"""asm.dwarf"""		668341	0					
ANR	668551	Argument	0		668341	2					
ANR	668552	PrimaryExpression	0		668341	0					
ANR	668553	IfStatement	if ( ! is_json_format_disasm )		668341	20					
ANR	668554	Condition	! is_json_format_disasm	3506:5:108642:108663	668341	0	True				
ANR	668555	UnaryOperationExpression	! is_json_format_disasm		668341	0					
ANR	668556	UnaryOperator	!		668341	0					
ANR	668557	Identifier	is_json_format_disasm		668341	1					
ANR	668558	CompoundStatement		31:29:902:902	668341	1					
ANR	668559	ExpressionStatement	"r_config_hold_i ( hc , ""asm.bytes"" , NULL )"	3507:2:108670:108709	668341	0	True				
ANR	668560	CallExpression	"r_config_hold_i ( hc , ""asm.bytes"" , NULL )"		668341	0					
ANR	668561	Callee	r_config_hold_i		668341	0					
ANR	668562	Identifier	r_config_hold_i		668341	0					
ANR	668563	ArgumentList	hc		668341	1					
ANR	668564	Argument	hc		668341	0					
ANR	668565	Identifier	hc		668341	0					
ANR	668566	Argument	"""asm.bytes"""		668341	1					
ANR	668567	PrimaryExpression	"""asm.bytes"""		668341	0					
ANR	668568	Argument	NULL		668341	2					
ANR	668569	Identifier	NULL		668341	0					
ANR	668570	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.bytes"" , 0 )"	3508:2:108713:108758	668341	1	True				
ANR	668571	CallExpression	"r_config_set_i ( core -> config , ""asm.bytes"" , 0 )"		668341	0					
ANR	668572	Callee	r_config_set_i		668341	0					
ANR	668573	Identifier	r_config_set_i		668341	0					
ANR	668574	ArgumentList	core -> config		668341	1					
ANR	668575	Argument	core -> config		668341	0					
ANR	668576	PtrMemberAccess	core -> config		668341	0					
ANR	668577	Identifier	core		668341	0					
ANR	668578	Identifier	config		668341	1					
ANR	668579	Argument	"""asm.bytes"""		668341	1					
ANR	668580	PrimaryExpression	"""asm.bytes"""		668341	0					
ANR	668581	Argument	0		668341	2					
ANR	668582	PrimaryExpression	0		668341	0					
ANR	668583	IfStatement	if ( ! is_html && ! is_json && ! is_keva && ! is_star )		668341	21					
ANR	668584	Condition	! is_html && ! is_json && ! is_keva && ! is_star	3510:5:108768:108811	668341	0	True				
ANR	668585	AndExpression	! is_html && ! is_json && ! is_keva && ! is_star		668341	0		&&			
ANR	668586	UnaryOperationExpression	! is_html		668341	0					
ANR	668587	UnaryOperator	!		668341	0					
ANR	668588	Identifier	is_html		668341	1					
ANR	668589	AndExpression	! is_json && ! is_keva && ! is_star		668341	1		&&			
ANR	668590	UnaryOperationExpression	! is_json		668341	0					
ANR	668591	UnaryOperator	!		668341	0					
ANR	668592	Identifier	is_json		668341	1					
ANR	668593	AndExpression	! is_keva && ! is_star		668341	1		&&			
ANR	668594	UnaryOperationExpression	! is_keva		668341	0					
ANR	668595	UnaryOperator	!		668341	0					
ANR	668596	Identifier	is_keva		668341	1					
ANR	668597	UnaryOperationExpression	! is_star		668341	1					
ANR	668598	UnaryOperator	!		668341	0					
ANR	668599	Identifier	is_star		668341	1					
ANR	668600	CompoundStatement		38:2:1196:1267	668341	1					
ANR	668601	IdentifierDeclStatement	"const char * gv_edge = r_config_get ( core -> config , ""graph.gv.edge"" ) ;"	3511:2:108818:108885	668341	0	True				
ANR	668602	IdentifierDecl	"* gv_edge = r_config_get ( core -> config , ""graph.gv.edge"" )"		668341	0					
ANR	668603	IdentifierDeclType	const char *		668341	0					
ANR	668604	Identifier	gv_edge		668341	1					
ANR	668605	AssignmentExpression	"* gv_edge = r_config_get ( core -> config , ""graph.gv.edge"" )"		668341	2		=			
ANR	668606	Identifier	gv_edge		668341	0					
ANR	668607	CallExpression	"r_config_get ( core -> config , ""graph.gv.edge"" )"		668341	1					
ANR	668608	Callee	r_config_get		668341	0					
ANR	668609	Identifier	r_config_get		668341	0					
ANR	668610	ArgumentList	core -> config		668341	1					
ANR	668611	Argument	core -> config		668341	0					
ANR	668612	PtrMemberAccess	core -> config		668341	0					
ANR	668613	Identifier	core		668341	0					
ANR	668614	Identifier	config		668341	1					
ANR	668615	Argument	"""graph.gv.edge"""		668341	1					
ANR	668616	PrimaryExpression	"""graph.gv.edge"""		668341	0					
ANR	668617	IdentifierDeclStatement	"const char * gv_node = r_config_get ( core -> config , ""graph.gv.node"" ) ;"	3512:2:108889:108956	668341	1	True				
ANR	668618	IdentifierDecl	"* gv_node = r_config_get ( core -> config , ""graph.gv.node"" )"		668341	0					
ANR	668619	IdentifierDeclType	const char *		668341	0					
ANR	668620	Identifier	gv_node		668341	1					
ANR	668621	AssignmentExpression	"* gv_node = r_config_get ( core -> config , ""graph.gv.node"" )"		668341	2		=			
ANR	668622	Identifier	gv_node		668341	0					
ANR	668623	CallExpression	"r_config_get ( core -> config , ""graph.gv.node"" )"		668341	1					
ANR	668624	Callee	r_config_get		668341	0					
ANR	668625	Identifier	r_config_get		668341	0					
ANR	668626	ArgumentList	core -> config		668341	1					
ANR	668627	Argument	core -> config		668341	0					
ANR	668628	PtrMemberAccess	core -> config		668341	0					
ANR	668629	Identifier	core		668341	0					
ANR	668630	Identifier	config		668341	1					
ANR	668631	Argument	"""graph.gv.node"""		668341	1					
ANR	668632	PrimaryExpression	"""graph.gv.node"""		668341	0					
ANR	668633	IdentifierDeclStatement	"const char * gv_spline = r_config_get ( core -> config , ""graph.gv.spline"" ) ;"	3513:2:108960:109031	668341	2	True				
ANR	668634	IdentifierDecl	"* gv_spline = r_config_get ( core -> config , ""graph.gv.spline"" )"		668341	0					
ANR	668635	IdentifierDeclType	const char *		668341	0					
ANR	668636	Identifier	gv_spline		668341	1					
ANR	668637	AssignmentExpression	"* gv_spline = r_config_get ( core -> config , ""graph.gv.spline"" )"		668341	2		=			
ANR	668638	Identifier	gv_spline		668341	0					
ANR	668639	CallExpression	"r_config_get ( core -> config , ""graph.gv.spline"" )"		668341	1					
ANR	668640	Callee	r_config_get		668341	0					
ANR	668641	Identifier	r_config_get		668341	0					
ANR	668642	ArgumentList	core -> config		668341	1					
ANR	668643	Argument	core -> config		668341	0					
ANR	668644	PtrMemberAccess	core -> config		668341	0					
ANR	668645	Identifier	core		668341	0					
ANR	668646	Identifier	config		668341	1					
ANR	668647	Argument	"""graph.gv.spline"""		668341	1					
ANR	668648	PrimaryExpression	"""graph.gv.spline"""		668341	0					
ANR	668649	IfStatement	if ( ! gv_edge || ! * gv_edge )		668341	3					
ANR	668650	Condition	! gv_edge || ! * gv_edge	3514:6:109039:109059	668341	0	True				
ANR	668651	OrExpression	! gv_edge || ! * gv_edge		668341	0		||			
ANR	668652	UnaryOperationExpression	! gv_edge		668341	0					
ANR	668653	UnaryOperator	!		668341	0					
ANR	668654	Identifier	gv_edge		668341	1					
ANR	668655	UnaryOperationExpression	! * gv_edge		668341	1					
ANR	668656	UnaryOperator	!		668341	0					
ANR	668657	UnaryOperationExpression	* gv_edge		668341	1					
ANR	668658	UnaryOperator	*		668341	0					
ANR	668659	Identifier	gv_edge		668341	1					
ANR	668660	CompoundStatement		39:29:1298:1298	668341	1					
ANR	668661	ExpressionStatement	"gv_edge = ""arrowhead=\\""normal\\"""""	3515:3:109067:109099	668341	0	True				
ANR	668662	AssignmentExpression	"gv_edge = ""arrowhead=\\""normal\\"""""		668341	0		=			
ANR	668663	Identifier	gv_edge		668341	0					
ANR	668664	PrimaryExpression	"""arrowhead=\\""normal\\"""""		668341	1					
ANR	668665	IfStatement	if ( ! gv_node || ! * gv_node )		668341	4					
ANR	668666	Condition	! gv_node || ! * gv_node	3517:6:109111:109131	668341	0	True				
ANR	668667	OrExpression	! gv_node || ! * gv_node		668341	0		||			
ANR	668668	UnaryOperationExpression	! gv_node		668341	0					
ANR	668669	UnaryOperator	!		668341	0					
ANR	668670	Identifier	gv_node		668341	1					
ANR	668671	UnaryOperationExpression	! * gv_node		668341	1					
ANR	668672	UnaryOperator	!		668341	0					
ANR	668673	UnaryOperationExpression	* gv_node		668341	1					
ANR	668674	UnaryOperator	*		668341	0					
ANR	668675	Identifier	gv_node		668341	1					
ANR	668676	CompoundStatement		42:29:1370:1370	668341	1					
ANR	668677	ExpressionStatement	"gv_node = ""fillcolor=gray style=filled shape=box"""	3518:3:109139:109188	668341	0	True				
ANR	668678	AssignmentExpression	"gv_node = ""fillcolor=gray style=filled shape=box"""		668341	0		=			
ANR	668679	Identifier	gv_node		668341	0					
ANR	668680	PrimaryExpression	"""fillcolor=gray style=filled shape=box"""		668341	1					
ANR	668681	IfStatement	if ( ! gv_spline || ! * gv_spline )		668341	5					
ANR	668682	Condition	! gv_spline || ! * gv_spline	3520:6:109200:109224	668341	0	True				
ANR	668683	OrExpression	! gv_spline || ! * gv_spline		668341	0		||			
ANR	668684	UnaryOperationExpression	! gv_spline		668341	0					
ANR	668685	UnaryOperator	!		668341	0					
ANR	668686	Identifier	gv_spline		668341	1					
ANR	668687	UnaryOperationExpression	! * gv_spline		668341	1					
ANR	668688	UnaryOperator	!		668341	0					
ANR	668689	UnaryOperationExpression	* gv_spline		668341	1					
ANR	668690	UnaryOperator	*		668341	0					
ANR	668691	Identifier	gv_spline		668341	1					
ANR	668692	CompoundStatement		45:33:1463:1463	668341	1					
ANR	668693	ExpressionStatement	"gv_spline = ""splines=\\""ortho\\"""""	3521:3:109232:109263	668341	0	True				
ANR	668694	AssignmentExpression	"gv_spline = ""splines=\\""ortho\\"""""		668341	0		=			
ANR	668695	Identifier	gv_spline		668341	0					
ANR	668696	PrimaryExpression	"""splines=\\""ortho\\"""""		668341	1					
ANR	668697	Statement	r_cons_printf	3523:2:109271:109283	668341	6	True				
ANR	668698	Statement	(	3523:16:109285:109285	668341	7	True				
ANR	668699	Statement	"""digraph code {\\n"""	3523:17:109286:109303	668341	8	True				
ANR	668700	Statement	"""\\tgraph [bgcolor=azure fontsize=8 fontname=\\""%s\\"" %s];\\n"""	3524:3:109308:109365	668341	9	True				
ANR	668701	Statement	"""\\tnode [%s];\\n"""	3525:3:109370:109385	668341	10	True				
ANR	668702	Statement	"""\\tedge [%s];\\n"""	3526:3:109390:109405	668341	11	True				
ANR	668703	Statement	","	3526:19:109406:109406	668341	12	True				
ANR	668704	Statement	font	3526:21:109408:109411	668341	13	True				
ANR	668705	Statement	","	3526:25:109412:109412	668341	14	True				
ANR	668706	Statement	gv_spline	3526:27:109414:109422	668341	15	True				
ANR	668707	Statement	","	3526:36:109423:109423	668341	16	True				
ANR	668708	Statement	gv_node	3526:38:109425:109431	668341	17	True				
ANR	668709	Statement	","	3526:45:109432:109432	668341	18	True				
ANR	668710	Statement	gv_edge	3526:47:109434:109440	668341	19	True				
ANR	668711	Statement	)	3526:54:109441:109441	668341	20	True				
ANR	668712	ExpressionStatement		3526:55:109442:109442	668341	21	True				
ANR	668713	IfStatement	if ( is_json )		668341	22					
ANR	668714	Condition	is_json	3528:5:109452:109458	668341	0	True				
ANR	668715	Identifier	is_json		668341	0					
ANR	668716	CompoundStatement		53:14:1697:1697	668341	1					
ANR	668717	ExpressionStatement	pj = pj_new ( )	3529:2:109465:109479	668341	0	True				
ANR	668718	AssignmentExpression	pj = pj_new ( )		668341	0		=			
ANR	668719	Identifier	pj		668341	0					
ANR	668720	CallExpression	pj_new ( )		668341	1					
ANR	668721	Callee	pj_new		668341	0					
ANR	668722	Identifier	pj_new		668341	0					
ANR	668723	ArgumentList			668341	1					
ANR	668724	IfStatement	if ( ! pj )		668341	1					
ANR	668725	Condition	! pj	3530:6:109487:109489	668341	0	True				
ANR	668726	UnaryOperationExpression	! pj		668341	0					
ANR	668727	UnaryOperator	!		668341	0					
ANR	668728	Identifier	pj		668341	1					
ANR	668729	CompoundStatement		55:11:1728:1728	668341	1					
ANR	668730	ReturnStatement	return false ;	3531:3:109497:109509	668341	0	True				
ANR	668731	Identifier	false		668341	0					
ANR	668732	ExpressionStatement	pj_a ( pj )	3533:2:109517:109526	668341	2	True				
ANR	668733	CallExpression	pj_a ( pj )		668341	0					
ANR	668734	Callee	pj_a		668341	0					
ANR	668735	Identifier	pj_a		668341	0					
ANR	668736	ArgumentList	pj		668341	1					
ANR	668737	Argument	pj		668341	0					
ANR	668738	Identifier	pj		668341	0					
ANR	668739	Statement	r_list_foreach	3535:1:109532:109545	668341	23	True				
ANR	668740	Statement	(	3535:16:109547:109547	668341	24	True				
ANR	668741	Statement	core	3535:17:109548:109551	668341	25	True				
ANR	668742	Statement	->	3535:21:109552:109553	668341	26	True				
ANR	668743	Statement	anal	3535:23:109554:109557	668341	27	True				
ANR	668744	Statement	->	3535:27:109558:109559	668341	28	True				
ANR	668745	Statement	fcns	3535:29:109560:109563	668341	29	True				
ANR	668746	Statement	","	3535:33:109564:109564	668341	30	True				
ANR	668747	Statement	iter	3535:35:109566:109569	668341	31	True				
ANR	668748	Statement	","	3535:39:109570:109570	668341	32	True				
ANR	668749	Statement	fcni	3535:41:109572:109575	668341	33	True				
ANR	668750	Statement	)	3535:45:109576:109576	668341	34	True				
ANR	668751	CompoundStatement		60:47:1814:1814	668341	35					
ANR	668752	IfStatement	"if ( fcni -> type & ( R_ANAL_FCN_TYPE_SYM | R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_LOC ) && ( addr == UT64_MAX || r_anal_get_fcn_in ( core -> anal , addr , 0 ) == fcni ) )"		668341	0					
ANR	668753	Condition	"fcni -> type & ( R_ANAL_FCN_TYPE_SYM | R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_LOC ) && ( addr == UT64_MAX || r_anal_get_fcn_in ( core -> anal , addr , 0 ) == fcni )"	3536:6:109586:109762	668341	0	True				
ANR	668754	AndExpression	"fcni -> type & ( R_ANAL_FCN_TYPE_SYM | R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_LOC ) && ( addr == UT64_MAX || r_anal_get_fcn_in ( core -> anal , addr , 0 ) == fcni )"		668341	0		&&			
ANR	668755	BitAndExpression	fcni -> type & ( R_ANAL_FCN_TYPE_SYM | R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_LOC )		668341	0		&			
ANR	668756	PtrMemberAccess	fcni -> type		668341	0					
ANR	668757	Identifier	fcni		668341	0					
ANR	668758	Identifier	type		668341	1					
ANR	668759	InclusiveOrExpression	R_ANAL_FCN_TYPE_SYM | R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_LOC		668341	1		|			
ANR	668760	Identifier	R_ANAL_FCN_TYPE_SYM		668341	0					
ANR	668761	InclusiveOrExpression	R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_LOC		668341	1		|			
ANR	668762	Identifier	R_ANAL_FCN_TYPE_FCN		668341	0					
ANR	668763	Identifier	R_ANAL_FCN_TYPE_LOC		668341	1					
ANR	668764	OrExpression	"addr == UT64_MAX || r_anal_get_fcn_in ( core -> anal , addr , 0 ) == fcni"		668341	1		||			
ANR	668765	EqualityExpression	addr == UT64_MAX		668341	0		==			
ANR	668766	Identifier	addr		668341	0					
ANR	668767	Identifier	UT64_MAX		668341	1					
ANR	668768	EqualityExpression	"r_anal_get_fcn_in ( core -> anal , addr , 0 ) == fcni"		668341	1		==			
ANR	668769	CallExpression	"r_anal_get_fcn_in ( core -> anal , addr , 0 )"		668341	0					
ANR	668770	Callee	r_anal_get_fcn_in		668341	0					
ANR	668771	Identifier	r_anal_get_fcn_in		668341	0					
ANR	668772	ArgumentList	core -> anal		668341	1					
ANR	668773	Argument	core -> anal		668341	0					
ANR	668774	PtrMemberAccess	core -> anal		668341	0					
ANR	668775	Identifier	core		668341	0					
ANR	668776	Identifier	anal		668341	1					
ANR	668777	Argument	addr		668341	1					
ANR	668778	Identifier	addr		668341	0					
ANR	668779	Argument	0		668341	2					
ANR	668780	PrimaryExpression	0		668341	0					
ANR	668781	Identifier	fcni		668341	1					
ANR	668782	CompoundStatement		63:77:2001:2001	668341	1					
ANR	668783	IfStatement	if ( addr == UT64_MAX && ( from != UT64_MAX && to != UT64_MAX ) )		668341	0					
ANR	668784	Condition	addr == UT64_MAX && ( from != UT64_MAX && to != UT64_MAX )	3539:7:109774:109829	668341	0	True				
ANR	668785	AndExpression	addr == UT64_MAX && ( from != UT64_MAX && to != UT64_MAX )		668341	0		&&			
ANR	668786	EqualityExpression	addr == UT64_MAX		668341	0		==			
ANR	668787	Identifier	addr		668341	0					
ANR	668788	Identifier	UT64_MAX		668341	1					
ANR	668789	AndExpression	from != UT64_MAX && to != UT64_MAX		668341	1		&&			
ANR	668790	EqualityExpression	from != UT64_MAX		668341	0		!=			
ANR	668791	Identifier	from		668341	0					
ANR	668792	Identifier	UT64_MAX		668341	1					
ANR	668793	EqualityExpression	to != UT64_MAX		668341	1		!=			
ANR	668794	Identifier	to		668341	0					
ANR	668795	Identifier	UT64_MAX		668341	1					
ANR	668796	CompoundStatement		64:65:2068:2068	668341	1					
ANR	668797	IfStatement	if ( fcni -> addr < from || fcni -> addr > to )		668341	0					
ANR	668798	Condition	fcni -> addr < from || fcni -> addr > to	3540:8:109842:109877	668341	0	True				
ANR	668799	OrExpression	fcni -> addr < from || fcni -> addr > to		668341	0		||			
ANR	668800	RelationalExpression	fcni -> addr < from		668341	0		<			
ANR	668801	PtrMemberAccess	fcni -> addr		668341	0					
ANR	668802	Identifier	fcni		668341	0					
ANR	668803	Identifier	addr		668341	1					
ANR	668804	Identifier	from		668341	1					
ANR	668805	RelationalExpression	fcni -> addr > to		668341	1		>			
ANR	668806	PtrMemberAccess	fcni -> addr		668341	0					
ANR	668807	Identifier	fcni		668341	0					
ANR	668808	Identifier	addr		668341	1					
ANR	668809	Identifier	to		668341	1					
ANR	668810	CompoundStatement		65:46:2116:2116	668341	1					
ANR	668811	ContinueStatement	continue ;	3541:5:109887:109895	668341	0	True				
ANR	668812	ExpressionStatement	"nodes += core_anal_graph_nodes ( core , fcni , opts , pj )"	3544:3:109911:109964	668341	1	True				
ANR	668813	AssignmentExpression	"nodes += core_anal_graph_nodes ( core , fcni , opts , pj )"		668341	0		+=			
ANR	668814	Identifier	nodes		668341	0					
ANR	668815	CallExpression	"core_anal_graph_nodes ( core , fcni , opts , pj )"		668341	1					
ANR	668816	Callee	core_anal_graph_nodes		668341	0					
ANR	668817	Identifier	core_anal_graph_nodes		668341	0					
ANR	668818	ArgumentList	core		668341	1					
ANR	668819	Argument	core		668341	0					
ANR	668820	Identifier	core		668341	0					
ANR	668821	Argument	fcni		668341	1					
ANR	668822	Identifier	fcni		668341	0					
ANR	668823	Argument	opts		668341	2					
ANR	668824	Identifier	opts		668341	0					
ANR	668825	Argument	pj		668341	3					
ANR	668826	Identifier	pj		668341	0					
ANR	668827	IfStatement	if ( addr != UT64_MAX )		668341	2					
ANR	668828	Condition	addr != UT64_MAX	3545:7:109973:109988	668341	0	True				
ANR	668829	EqualityExpression	addr != UT64_MAX		668341	0		!=			
ANR	668830	Identifier	addr		668341	0					
ANR	668831	Identifier	UT64_MAX		668341	1					
ANR	668832	CompoundStatement		70:25:2227:2227	668341	1					
ANR	668833	BreakStatement	break ;	3546:4:109997:110002	668341	0	True				
ANR	668834	IfStatement	if ( ! nodes )		668341	36					
ANR	668835	Condition	! nodes	3550:5:110021:110026	668341	0	True				
ANR	668836	UnaryOperationExpression	! nodes		668341	0					
ANR	668837	UnaryOperator	!		668341	0					
ANR	668838	Identifier	nodes		668341	1					
ANR	668839	CompoundStatement		75:13:2265:2265	668341	1					
ANR	668840	IfStatement	if ( ! is_html && ! is_json && ! is_keva )		668341	0					
ANR	668841	Condition	! is_html && ! is_json && ! is_keva	3551:6:110037:110068	668341	0	True				
ANR	668842	AndExpression	! is_html && ! is_json && ! is_keva		668341	0		&&			
ANR	668843	UnaryOperationExpression	! is_html		668341	0					
ANR	668844	UnaryOperator	!		668341	0					
ANR	668845	Identifier	is_html		668341	1					
ANR	668846	AndExpression	! is_json && ! is_keva		668341	1		&&			
ANR	668847	UnaryOperationExpression	! is_json		668341	0					
ANR	668848	UnaryOperator	!		668341	0					
ANR	668849	Identifier	is_json		668341	1					
ANR	668850	UnaryOperationExpression	! is_keva		668341	1					
ANR	668851	UnaryOperator	!		668341	0					
ANR	668852	Identifier	is_keva		668341	1					
ANR	668853	CompoundStatement		77:3:2312:2372	668341	1					
ANR	668854	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , addr , 0 ) ;"	3552:3:110076:110136	668341	0	True				
ANR	668855	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , addr , 0 )"		668341	0					
ANR	668856	IdentifierDeclType	RAnalFunction *		668341	0					
ANR	668857	Identifier	fcn		668341	1					
ANR	668858	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , addr , 0 )"		668341	2		=			
ANR	668859	Identifier	fcn		668341	0					
ANR	668860	CallExpression	"r_anal_get_fcn_in ( core -> anal , addr , 0 )"		668341	1					
ANR	668861	Callee	r_anal_get_fcn_in		668341	0					
ANR	668862	Identifier	r_anal_get_fcn_in		668341	0					
ANR	668863	ArgumentList	core -> anal		668341	1					
ANR	668864	Argument	core -> anal		668341	0					
ANR	668865	PtrMemberAccess	core -> anal		668341	0					
ANR	668866	Identifier	core		668341	0					
ANR	668867	Identifier	anal		668341	1					
ANR	668868	Argument	addr		668341	1					
ANR	668869	Identifier	addr		668341	0					
ANR	668870	Argument	0		668341	2					
ANR	668871	PrimaryExpression	0		668341	0					
ANR	668872	IfStatement	if ( is_star )		668341	1					
ANR	668873	Condition	is_star	3553:7:110145:110151	668341	0	True				
ANR	668874	Identifier	is_star		668341	0					
ANR	668875	CompoundStatement		79:11:2403:2448	668341	1					
ANR	668876	IdentifierDeclStatement	char * name = get_title ( fcn ? fcn -> addr : addr ) ;	3554:11:110167:110212	668341	0	True				
ANR	668877	IdentifierDecl	* name = get_title ( fcn ? fcn -> addr : addr )		668341	0					
ANR	668878	IdentifierDeclType	char *		668341	0					
ANR	668879	Identifier	name		668341	1					
ANR	668880	AssignmentExpression	* name = get_title ( fcn ? fcn -> addr : addr )		668341	2		=			
ANR	668881	Identifier	name		668341	0					
ANR	668882	CallExpression	get_title ( fcn ? fcn -> addr : addr )		668341	1					
ANR	668883	Callee	get_title		668341	0					
ANR	668884	Identifier	get_title		668341	0					
ANR	668885	ArgumentList	fcn ? fcn -> addr : addr		668341	1					
ANR	668886	Argument	fcn ? fcn -> addr : addr		668341	0					
ANR	668887	ConditionalExpression	fcn ? fcn -> addr : addr		668341	0					
ANR	668888	Condition	fcn		668341	0					
ANR	668889	Identifier	fcn		668341	0					
ANR	668890	PtrMemberAccess	fcn -> addr		668341	1					
ANR	668891	Identifier	fcn		668341	0					
ANR	668892	Identifier	addr		668341	1					
ANR	668893	Identifier	addr		668341	2					
ANR	668894	ExpressionStatement	"r_cons_printf ( ""agn %s;"" , name )"	3555:11:110225:110256	668341	1	True				
ANR	668895	CallExpression	"r_cons_printf ( ""agn %s;"" , name )"		668341	0					
ANR	668896	Callee	r_cons_printf		668341	0					
ANR	668897	Identifier	r_cons_printf		668341	0					
ANR	668898	ArgumentList	"""agn %s;"""		668341	1					
ANR	668899	Argument	"""agn %s;"""		668341	0					
ANR	668900	PrimaryExpression	"""agn %s;"""		668341	0					
ANR	668901	Argument	name		668341	1					
ANR	668902	Identifier	name		668341	0					
ANR	668903	ElseStatement	else		668341	0					
ANR	668904	CompoundStatement		81:9:2503:2503	668341	0					
ANR	668905	Statement	r_cons_printf	3557:32:110301:110313	668341	0	True				
ANR	668906	Statement	(	3557:46:110315:110315	668341	1	True				
ANR	668907	Statement	"""\\t\\""0x%08"""	3557:47:110316:110326	668341	2	True				
ANR	668908	Statement	PFMT64x	3557:58:110327:110333	668341	3	True				
ANR	668909	Statement	"""\\"";\\n"""	3557:65:110334:110340	668341	4	True				
ANR	668910	Statement	","	3557:72:110341:110341	668341	5	True				
ANR	668911	Statement	fcn	3557:74:110343:110345	668341	6	True				
ANR	668912	Statement	?	3557:77:110346:110346	668341	7	True				
ANR	668913	Statement	fcn	3557:79:110348:110350	668341	8	True				
ANR	668914	Statement	->	3557:82:110351:110352	668341	9	True				
ANR	668915	Label	addr :	3557:84:110353:110357	668341	10	True				
ANR	668916	Identifier	addr		668341	0					
ANR	668917	Statement	addr	3557:90:110359:110362	668341	11	True				
ANR	668918	Statement	)	3557:94:110363:110363	668341	12	True				
ANR	668919	ExpressionStatement		3557:95:110364:110364	668341	13	True				
ANR	668920	IfStatement	if ( ! is_keva && ! is_html && ! is_json && ! is_star && ! is_json_format_disasm )		668341	37					
ANR	668921	Condition	! is_keva && ! is_html && ! is_json && ! is_star && ! is_json_format_disasm	3561:5:110383:110452	668341	0	True				
ANR	668922	AndExpression	! is_keva && ! is_html && ! is_json && ! is_star && ! is_json_format_disasm		668341	0		&&			
ANR	668923	UnaryOperationExpression	! is_keva		668341	0					
ANR	668924	UnaryOperator	!		668341	0					
ANR	668925	Identifier	is_keva		668341	1					
ANR	668926	AndExpression	! is_html && ! is_json && ! is_star && ! is_json_format_disasm		668341	1		&&			
ANR	668927	UnaryOperationExpression	! is_html		668341	0					
ANR	668928	UnaryOperator	!		668341	0					
ANR	668929	Identifier	is_html		668341	1					
ANR	668930	AndExpression	! is_json && ! is_star && ! is_json_format_disasm		668341	1		&&			
ANR	668931	UnaryOperationExpression	! is_json		668341	0					
ANR	668932	UnaryOperator	!		668341	0					
ANR	668933	Identifier	is_json		668341	1					
ANR	668934	AndExpression	! is_star && ! is_json_format_disasm		668341	1		&&			
ANR	668935	UnaryOperationExpression	! is_star		668341	0					
ANR	668936	UnaryOperator	!		668341	0					
ANR	668937	Identifier	is_star		668341	1					
ANR	668938	UnaryOperationExpression	! is_json_format_disasm		668341	1					
ANR	668939	UnaryOperator	!		668341	0					
ANR	668940	Identifier	is_json_format_disasm		668341	1					
ANR	668941	CompoundStatement		86:77:2691:2691	668341	1					
ANR	668942	ExpressionStatement	"r_cons_printf ( ""}\\n"" )"	3562:2:110459:110480	668341	0	True				
ANR	668943	CallExpression	"r_cons_printf ( ""}\\n"" )"		668341	0					
ANR	668944	Callee	r_cons_printf		668341	0					
ANR	668945	Identifier	r_cons_printf		668341	0					
ANR	668946	ArgumentList	"""}\\n"""		668341	1					
ANR	668947	Argument	"""}\\n"""		668341	0					
ANR	668948	PrimaryExpression	"""}\\n"""		668341	0					
ANR	668949	IfStatement	if ( is_json )		668341	38					
ANR	668950	Condition	is_json	3564:5:110490:110496	668341	0	True				
ANR	668951	Identifier	is_json		668341	0					
ANR	668952	CompoundStatement		89:14:2735:2735	668341	1					
ANR	668953	ExpressionStatement	pj_end ( pj )	3565:2:110503:110514	668341	0	True				
ANR	668954	CallExpression	pj_end ( pj )		668341	0					
ANR	668955	Callee	pj_end		668341	0					
ANR	668956	Identifier	pj_end		668341	0					
ANR	668957	ArgumentList	pj		668341	1					
ANR	668958	Argument	pj		668341	0					
ANR	668959	Identifier	pj		668341	0					
ANR	668960	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"	3566:2:110518:110556	668341	1	True				
ANR	668961	CallExpression	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"		668341	0					
ANR	668962	Callee	r_cons_printf		668341	0					
ANR	668963	Identifier	r_cons_printf		668341	0					
ANR	668964	ArgumentList	"""%s\\n"""		668341	1					
ANR	668965	Argument	"""%s\\n"""		668341	0					
ANR	668966	PrimaryExpression	"""%s\\n"""		668341	0					
ANR	668967	Argument	pj_string ( pj )		668341	1					
ANR	668968	CallExpression	pj_string ( pj )		668341	0					
ANR	668969	Callee	pj_string		668341	0					
ANR	668970	Identifier	pj_string		668341	0					
ANR	668971	ArgumentList	pj		668341	1					
ANR	668972	Argument	pj		668341	0					
ANR	668973	Identifier	pj		668341	0					
ANR	668974	ExpressionStatement	pj_free ( pj )	3567:2:110560:110572	668341	2	True				
ANR	668975	CallExpression	pj_free ( pj )		668341	0					
ANR	668976	Callee	pj_free		668341	0					
ANR	668977	Identifier	pj_free		668341	0					
ANR	668978	ArgumentList	pj		668341	1					
ANR	668979	Argument	pj		668341	0					
ANR	668980	Identifier	pj		668341	0					
ANR	668981	ExpressionStatement	r_config_hold_restore ( hc )	3569:1:110578:110604	668341	39	True				
ANR	668982	CallExpression	r_config_hold_restore ( hc )		668341	0					
ANR	668983	Callee	r_config_hold_restore		668341	0					
ANR	668984	Identifier	r_config_hold_restore		668341	0					
ANR	668985	ArgumentList	hc		668341	1					
ANR	668986	Argument	hc		668341	0					
ANR	668987	Identifier	hc		668341	0					
ANR	668988	ExpressionStatement	r_config_hold_free ( hc )	3570:1:110607:110630	668341	40	True				
ANR	668989	CallExpression	r_config_hold_free ( hc )		668341	0					
ANR	668990	Callee	r_config_hold_free		668341	0					
ANR	668991	Identifier	r_config_hold_free		668341	0					
ANR	668992	ArgumentList	hc		668341	1					
ANR	668993	Argument	hc		668341	0					
ANR	668994	Identifier	hc		668341	0					
ANR	668995	ReturnStatement	return true ;	3571:1:110633:110644	668341	41	True				
ANR	668996	Identifier	true		668341	0					
ANR	668997	ReturnType	R_API int		668341	1					
ANR	668998	Identifier	r_core_anal_graph		668341	2					
ANR	668999	ParameterList	"RCore * core , ut64 addr , int opts"		668341	3					
ANR	669000	Parameter	RCore * core	3476:28:107729:107739	668341	0	True				
ANR	669001	ParameterType	RCore *		668341	0					
ANR	669002	Identifier	core		668341	1					
ANR	669003	Parameter	ut64 addr	3476:41:107742:107750	668341	1	True				
ANR	669004	ParameterType	ut64		668341	0					
ANR	669005	Identifier	addr		668341	1					
ANR	669006	Parameter	int opts	3476:52:107753:107760	668341	2	True				
ANR	669007	ParameterType	int		668341	0					
ANR	669008	Identifier	opts		668341	1					
ANR	669009	CFGEntryNode	ENTRY		668341		True				
ANR	669010	CFGExitNode	EXIT		668341		True				
ANR	669011	CFGErrorNode	ERROR		668341		True				
ANR	669012	Symbol	* fcn		668341						
ANR	669013	Symbol	pj_string		668341						
ANR	669014	Symbol	is_json_format_disasm		668341						
ANR	669015	Symbol	R_ANAL_FCN_TYPE_FCN		668341						
ANR	669016	Symbol	core -> offset		668341						
ANR	669017	Symbol	R_ANAL_FCN_TYPE_LOC		668341						
ANR	669018	Symbol	opts		668341						
ANR	669019	Symbol	fcni		668341						
ANR	669020	Symbol	* gv_node		668341						
ANR	669021	Symbol	R_CORE_ANAL_KEYVALUE		668341						
ANR	669022	Symbol	R_ANAL_FCN_TYPE_SYM		668341						
ANR	669023	Symbol	from		668341						
ANR	669024	Symbol	NULL		668341						
ANR	669025	Symbol	iter		668341						
ANR	669026	Symbol	core -> anal -> fcns		668341						
ANR	669027	Symbol	fcni -> addr		668341						
ANR	669028	Symbol	r_cons_singleton ( ) -> is_html		668341						
ANR	669029	Symbol	core		668341						
ANR	669030	Symbol	R_CORE_ANAL_JSON_FORMAT_DISASM		668341						
ANR	669031	Symbol	r_config_get_i		668341						
ANR	669032	Symbol	is_html		668341						
ANR	669033	Symbol	name		668341						
ANR	669034	Symbol	true		668341						
ANR	669035	Symbol	r_list_empty		668341						
ANR	669036	Symbol	* gv_spline		668341						
ANR	669037	Symbol	gv_node		668341						
ANR	669038	Symbol	is_json		668341						
ANR	669039	Symbol	* core		668341						
ANR	669040	Symbol	r_config_get		668341						
ANR	669041	Symbol	core -> anal		668341						
ANR	669042	Symbol	get_title		668341						
ANR	669043	Symbol	* gv_edge		668341						
ANR	669044	Symbol	fcn		668341						
ANR	669045	Symbol	r_config_hold_new		668341						
ANR	669046	Symbol	r_cons_singleton		668341						
ANR	669047	Symbol	core_anal_graph_nodes		668341						
ANR	669048	Symbol	is_star		668341						
ANR	669049	Symbol	addr		668341						
ANR	669050	Symbol	UT64_MAX		668341						
ANR	669051	Symbol	fcni -> type		668341						
ANR	669052	Symbol	* * core		668341						
ANR	669053	Symbol	core -> config		668341						
ANR	669054	Symbol	is_keva		668341						
ANR	669055	Symbol	false		668341						
ANR	669056	Symbol	R_CORE_ANAL_STAR		668341						
ANR	669057	Symbol	gv_edge		668341						
ANR	669058	Symbol	* fcni		668341						
ANR	669059	Symbol	nodes		668341						
ANR	669060	Symbol	* core -> anal		668341						
ANR	669061	Symbol	r_anal_get_fcn_in		668341						
ANR	669062	Symbol	R_CORE_ANAL_JSON		668341						
ANR	669063	Symbol	fcn -> addr		668341						
ANR	669064	Symbol	pj		668341						
ANR	669065	Symbol	pj_new		668341						
ANR	669066	Symbol	to		668341						
ANR	669067	Symbol	hc		668341						
ANR	669068	Symbol	gv_spline		668341						
ANR	669069	Symbol	* r_cons_singleton		668341						
ANR	669070	Symbol	font		668341						
ANR	669071	Function	core_anal_followptr	3574:0:110649:111358							
ANR	669072	FunctionDef	"core_anal_followptr (RCore * core , int type , ut64 at , ut64 ptr , ut64 ref , int code , int depth)"		669071	0					
ANR	669073	CompoundStatement		3574:104:110753:111358	669071	0					
ANR	669074	IfStatement	if ( ! ptr )		669071	0					
ANR	669075	Condition	! ptr	3576:5:110813:110816	669071	0	True				
ANR	669076	UnaryOperationExpression	! ptr		669071	0					
ANR	669077	UnaryOperator	!		669071	0					
ANR	669078	Identifier	ptr		669071	1					
ANR	669079	CompoundStatement		3:11:65:65	669071	1					
ANR	669080	ReturnStatement	return false ;	3577:2:110823:110835	669071	0	True				
ANR	669081	Identifier	false		669071	0					
ANR	669082	IfStatement	if ( ref == UT64_MAX || ptr == ref )		669071	1					
ANR	669083	Condition	ref == UT64_MAX || ptr == ref	3579:5:110845:110873	669071	0	True				
ANR	669084	OrExpression	ref == UT64_MAX || ptr == ref		669071	0		||			
ANR	669085	EqualityExpression	ref == UT64_MAX		669071	0		==			
ANR	669086	Identifier	ref		669071	0					
ANR	669087	Identifier	UT64_MAX		669071	1					
ANR	669088	EqualityExpression	ptr == ref		669071	1		==			
ANR	669089	Identifier	ptr		669071	0					
ANR	669090	Identifier	ref		669071	1					
ANR	669091	CompoundStatement		7:2:126:209	669071	1					
ANR	669092	IdentifierDeclStatement	const RAnalRefType t = code ? type ? type : R_ANAL_REF_TYPE_CODE : R_ANAL_REF_TYPE_DATA ;	3580:2:110880:110963	669071	0	True				
ANR	669093	IdentifierDecl	t = code ? type ? type : R_ANAL_REF_TYPE_CODE : R_ANAL_REF_TYPE_DATA		669071	0					
ANR	669094	IdentifierDeclType	const RAnalRefType		669071	0					
ANR	669095	Identifier	t		669071	1					
ANR	669096	AssignmentExpression	t = code ? type ? type : R_ANAL_REF_TYPE_CODE : R_ANAL_REF_TYPE_DATA		669071	2		=			
ANR	669097	Identifier	t		669071	0					
ANR	669098	ConditionalExpression	code ? type ? type : R_ANAL_REF_TYPE_CODE : R_ANAL_REF_TYPE_DATA		669071	1					
ANR	669099	Condition	code		669071	0					
ANR	669100	Identifier	code		669071	0					
ANR	669101	ConditionalExpression	type ? type : R_ANAL_REF_TYPE_CODE		669071	1					
ANR	669102	Condition	type		669071	0					
ANR	669103	Identifier	type		669071	0					
ANR	669104	Identifier	type		669071	1					
ANR	669105	Identifier	R_ANAL_REF_TYPE_CODE		669071	2					
ANR	669106	Identifier	R_ANAL_REF_TYPE_DATA		669071	2					
ANR	669107	ExpressionStatement	"r_anal_xrefs_set ( core -> anal , at , ptr , t )"	3581:2:110967:111008	669071	1	True				
ANR	669108	CallExpression	"r_anal_xrefs_set ( core -> anal , at , ptr , t )"		669071	0					
ANR	669109	Callee	r_anal_xrefs_set		669071	0					
ANR	669110	Identifier	r_anal_xrefs_set		669071	0					
ANR	669111	ArgumentList	core -> anal		669071	1					
ANR	669112	Argument	core -> anal		669071	0					
ANR	669113	PtrMemberAccess	core -> anal		669071	0					
ANR	669114	Identifier	core		669071	0					
ANR	669115	Identifier	anal		669071	1					
ANR	669116	Argument	at		669071	1					
ANR	669117	Identifier	at		669071	0					
ANR	669118	Argument	ptr		669071	2					
ANR	669119	Identifier	ptr		669071	0					
ANR	669120	Argument	t		669071	3					
ANR	669121	Identifier	t		669071	0					
ANR	669122	ReturnStatement	return true ;	3582:2:111012:111023	669071	2	True				
ANR	669123	Identifier	true		669071	0					
ANR	669124	IfStatement	if ( depth < 1 )		669071	2					
ANR	669125	Condition	depth < 1	3584:5:111033:111041	669071	0	True				
ANR	669126	RelationalExpression	depth < 1		669071	0		<			
ANR	669127	Identifier	depth		669071	0					
ANR	669128	PrimaryExpression	1		669071	1					
ANR	669129	CompoundStatement		11:16:290:290	669071	1					
ANR	669130	ReturnStatement	return false ;	3585:2:111048:111060	669071	0	True				
ANR	669131	Identifier	false		669071	0					
ANR	669132	IdentifierDeclStatement	int wordsize = ( int ) ( core -> anal -> bits / 8 ) ;	3587:1:111066:111108	669071	3	True				
ANR	669133	IdentifierDecl	wordsize = ( int ) ( core -> anal -> bits / 8 )		669071	0					
ANR	669134	IdentifierDeclType	int		669071	0					
ANR	669135	Identifier	wordsize		669071	1					
ANR	669136	AssignmentExpression	wordsize = ( int ) ( core -> anal -> bits / 8 )		669071	2		=			
ANR	669137	Identifier	wordsize		669071	0					
ANR	669138	CastExpression	( int ) ( core -> anal -> bits / 8 )		669071	1					
ANR	669139	CastTarget	int		669071	0					
ANR	669140	MultiplicativeExpression	core -> anal -> bits / 8		669071	1		/			
ANR	669141	PtrMemberAccess	core -> anal -> bits		669071	0					
ANR	669142	PtrMemberAccess	core -> anal		669071	0					
ANR	669143	Identifier	core		669071	0					
ANR	669144	Identifier	anal		669071	1					
ANR	669145	Identifier	bits		669071	1					
ANR	669146	PrimaryExpression	8		669071	1					
ANR	669147	IdentifierDeclStatement	ut64 dataptr ;	3588:1:111111:111123	669071	4	True				
ANR	669148	IdentifierDecl	dataptr		669071	0					
ANR	669149	IdentifierDeclType	ut64		669071	0					
ANR	669150	Identifier	dataptr		669071	1					
ANR	669151	IfStatement	"if ( ! r_io_read_i ( core -> io , ptr , & dataptr , wordsize , false ) )"		669071	5					
ANR	669152	Condition	"! r_io_read_i ( core -> io , ptr , & dataptr , wordsize , false )"	3589:5:111130:111184	669071	0	True				
ANR	669153	UnaryOperationExpression	"! r_io_read_i ( core -> io , ptr , & dataptr , wordsize , false )"		669071	0					
ANR	669154	UnaryOperator	!		669071	0					
ANR	669155	CallExpression	"r_io_read_i ( core -> io , ptr , & dataptr , wordsize , false )"		669071	1					
ANR	669156	Callee	r_io_read_i		669071	0					
ANR	669157	Identifier	r_io_read_i		669071	0					
ANR	669158	ArgumentList	core -> io		669071	1					
ANR	669159	Argument	core -> io		669071	0					
ANR	669160	PtrMemberAccess	core -> io		669071	0					
ANR	669161	Identifier	core		669071	0					
ANR	669162	Identifier	io		669071	1					
ANR	669163	Argument	ptr		669071	1					
ANR	669164	Identifier	ptr		669071	0					
ANR	669165	Argument	& dataptr		669071	2					
ANR	669166	UnaryOperationExpression	& dataptr		669071	0					
ANR	669167	UnaryOperator	&		669071	0					
ANR	669168	Identifier	dataptr		669071	1					
ANR	669169	Argument	wordsize		669071	3					
ANR	669170	Identifier	wordsize		669071	0					
ANR	669171	Argument	false		669071	4					
ANR	669172	Identifier	false		669071	0					
ANR	669173	CompoundStatement		16:62:433:433	669071	1					
ANR	669174	ReturnStatement	return false ;	3591:2:111264:111276	669071	0	True				
ANR	669175	Identifier	false		669071	0					
ANR	669176	ReturnStatement	"return core_anal_followptr ( core , type , at , dataptr , ref , code , depth - 1 ) ;"	3593:1:111282:111356	669071	6	True				
ANR	669177	CallExpression	"core_anal_followptr ( core , type , at , dataptr , ref , code , depth - 1 )"		669071	0					
ANR	669178	Callee	core_anal_followptr		669071	0					
ANR	669179	Identifier	core_anal_followptr		669071	0					
ANR	669180	ArgumentList	core		669071	1					
ANR	669181	Argument	core		669071	0					
ANR	669182	Identifier	core		669071	0					
ANR	669183	Argument	type		669071	1					
ANR	669184	Identifier	type		669071	0					
ANR	669185	Argument	at		669071	2					
ANR	669186	Identifier	at		669071	0					
ANR	669187	Argument	dataptr		669071	3					
ANR	669188	Identifier	dataptr		669071	0					
ANR	669189	Argument	ref		669071	4					
ANR	669190	Identifier	ref		669071	0					
ANR	669191	Argument	code		669071	5					
ANR	669192	Identifier	code		669071	0					
ANR	669193	Argument	depth - 1		669071	6					
ANR	669194	AdditiveExpression	depth - 1		669071	0		-			
ANR	669195	Identifier	depth		669071	0					
ANR	669196	PrimaryExpression	1		669071	1					
ANR	669197	ReturnType	static int		669071	1					
ANR	669198	Identifier	core_anal_followptr		669071	2					
ANR	669199	ParameterList	"RCore * core , int type , ut64 at , ut64 ptr , ut64 ref , int code , int depth"		669071	3					
ANR	669200	Parameter	RCore * core	3574:31:110680:110690	669071	0	True				
ANR	669201	ParameterType	RCore *		669071	0					
ANR	669202	Identifier	core		669071	1					
ANR	669203	Parameter	int type	3574:44:110693:110700	669071	1	True				
ANR	669204	ParameterType	int		669071	0					
ANR	669205	Identifier	type		669071	1					
ANR	669206	Parameter	ut64 at	3574:54:110703:110709	669071	2	True				
ANR	669207	ParameterType	ut64		669071	0					
ANR	669208	Identifier	at		669071	1					
ANR	669209	Parameter	ut64 ptr	3574:63:110712:110719	669071	3	True				
ANR	669210	ParameterType	ut64		669071	0					
ANR	669211	Identifier	ptr		669071	1					
ANR	669212	Parameter	ut64 ref	3574:73:110722:110729	669071	4	True				
ANR	669213	ParameterType	ut64		669071	0					
ANR	669214	Identifier	ref		669071	1					
ANR	669215	Parameter	int code	3574:83:110732:110739	669071	5	True				
ANR	669216	ParameterType	int		669071	0					
ANR	669217	Identifier	code		669071	1					
ANR	669218	Parameter	int depth	3574:93:110742:110750	669071	6	True				
ANR	669219	ParameterType	int		669071	0					
ANR	669220	Identifier	depth		669071	1					
ANR	669221	CFGEntryNode	ENTRY		669071		True				
ANR	669222	CFGExitNode	EXIT		669071		True				
ANR	669223	Symbol	dataptr		669071						
ANR	669224	Symbol	core -> anal -> bits		669071						
ANR	669225	Symbol	code		669071						
ANR	669226	Symbol	false		669071						
ANR	669227	Symbol	* core		669071						
ANR	669228	Symbol	R_ANAL_REF_TYPE_DATA		669071						
ANR	669229	Symbol	type		669071						
ANR	669230	Symbol	core -> anal		669071						
ANR	669231	Symbol	r_io_read_i		669071						
ANR	669232	Symbol	ptr		669071						
ANR	669233	Symbol	R_ANAL_REF_TYPE_CODE		669071						
ANR	669234	Symbol	core		669071						
ANR	669235	Symbol	ref		669071						
ANR	669236	Symbol	at		669071						
ANR	669237	Symbol	depth		669071						
ANR	669238	Symbol	* core -> anal		669071						
ANR	669239	Symbol	t		669071						
ANR	669240	Symbol	wordsize		669071						
ANR	669241	Symbol	core -> io		669071						
ANR	669242	Symbol	true		669071						
ANR	669243	Symbol	& dataptr		669071						
ANR	669244	Symbol	UT64_MAX		669071						
ANR	669245	Symbol	core_anal_followptr		669071						
ANR	669246	Symbol	* * core		669071						
ANR	669247	Function	opiscall	3596:0:111361:112073							
ANR	669248	FunctionDef	"opiscall (RCore * core , RAnalOp * aop , ut64 addr , const ut8 * buf , int len , int arch)"		669247	0					
ANR	669249	CompoundStatement		3596:94:111455:112073	669247	0					
ANR	669250	SwitchStatement	switch ( arch )		669247	0					
ANR	669251	Condition	arch	3597:9:111466:111469	669247	0	True				
ANR	669252	Identifier	arch		669247	0					
ANR	669253	CompoundStatement		2:15:16:16	669247	1					
ANR	669254	Label	case R2_ARCH_ARM64 :	3598:1:111475:111493	669247	0	True				
ANR	669255	Identifier	R2_ARCH_ARM64		669247	0					
ANR	669256	ExpressionStatement	aop -> size = 4	3599:2:111497:111510	669247	1	True				
ANR	669257	AssignmentExpression	aop -> size = 4		669247	0		=			
ANR	669258	PtrMemberAccess	aop -> size		669247	0					
ANR	669259	Identifier	aop		669247	0					
ANR	669260	Identifier	size		669247	1					
ANR	669261	PrimaryExpression	4		669247	1					
ANR	669262	IfStatement	if ( addr % 4 )		669247	2					
ANR	669263	Condition	addr % 4	3601:6:111561:111568	669247	0	True				
ANR	669264	MultiplicativeExpression	addr % 4		669247	0		%			
ANR	669265	Identifier	addr		669247	0					
ANR	669266	PrimaryExpression	4		669247	1					
ANR	669267	CompoundStatement		7:3:120:140	669247	1					
ANR	669268	IdentifierDeclStatement	char diff = addr % 4 ;	3602:3:111576:111596	669247	0	True				
ANR	669269	IdentifierDecl	diff = addr % 4		669247	0					
ANR	669270	IdentifierDeclType	char		669247	0					
ANR	669271	Identifier	diff		669247	1					
ANR	669272	AssignmentExpression	diff = addr % 4		669247	2		=			
ANR	669273	Identifier	diff		669247	0					
ANR	669274	MultiplicativeExpression	addr % 4		669247	1		%			
ANR	669275	Identifier	addr		669247	0					
ANR	669276	PrimaryExpression	4		669247	1					
ANR	669277	ExpressionStatement	addr = addr - diff	3603:3:111601:111619	669247	1	True				
ANR	669278	AssignmentExpression	addr = addr - diff		669247	0		=			
ANR	669279	Identifier	addr		669247	0					
ANR	669280	AdditiveExpression	addr - diff		669247	1		-			
ANR	669281	Identifier	addr		669247	0					
ANR	669282	Identifier	diff		669247	1					
ANR	669283	ExpressionStatement	buf = buf - diff	3604:3:111624:111640	669247	2	True				
ANR	669284	AssignmentExpression	buf = buf - diff		669247	0		=			
ANR	669285	Identifier	buf		669247	0					
ANR	669286	AdditiveExpression	buf - diff		669247	1		-			
ANR	669287	Identifier	buf		669247	0					
ANR	669288	Identifier	diff		669247	1					
ANR	669289	IfStatement	if ( buf [ 3 ] == 0x94 )		669247	3					
ANR	669290	Condition	buf [ 3 ] == 0x94	3607:6:111684:111697	669247	0	True				
ANR	669291	EqualityExpression	buf [ 3 ] == 0x94		669247	0		==			
ANR	669292	ArrayIndexing	buf [ 3 ]		669247	0					
ANR	669293	Identifier	buf		669247	0					
ANR	669294	PrimaryExpression	3		669247	1					
ANR	669295	PrimaryExpression	0x94		669247	1					
ANR	669296	CompoundStatement		12:22:244:244	669247	1					
ANR	669297	IfStatement	"if ( r_anal_op ( core -> anal , aop , addr , buf , len , R_ANAL_OP_MASK_BASIC ) )"		669247	0					
ANR	669298	Condition	"r_anal_op ( core -> anal , aop , addr , buf , len , R_ANAL_OP_MASK_BASIC )"	3608:7:111709:111773	669247	0	True				
ANR	669299	CallExpression	"r_anal_op ( core -> anal , aop , addr , buf , len , R_ANAL_OP_MASK_BASIC )"		669247	0					
ANR	669300	Callee	r_anal_op		669247	0					
ANR	669301	Identifier	r_anal_op		669247	0					
ANR	669302	ArgumentList	core -> anal		669247	1					
ANR	669303	Argument	core -> anal		669247	0					
ANR	669304	PtrMemberAccess	core -> anal		669247	0					
ANR	669305	Identifier	core		669247	0					
ANR	669306	Identifier	anal		669247	1					
ANR	669307	Argument	aop		669247	1					
ANR	669308	Identifier	aop		669247	0					
ANR	669309	Argument	addr		669247	2					
ANR	669310	Identifier	addr		669247	0					
ANR	669311	Argument	buf		669247	3					
ANR	669312	Identifier	buf		669247	0					
ANR	669313	Argument	len		669247	4					
ANR	669314	Identifier	len		669247	0					
ANR	669315	Argument	R_ANAL_OP_MASK_BASIC		669247	5					
ANR	669316	Identifier	R_ANAL_OP_MASK_BASIC		669247	0					
ANR	669317	CompoundStatement		13:74:320:320	669247	1					
ANR	669318	ReturnStatement	return true ;	3609:4:111782:111793	669247	0	True				
ANR	669319	Identifier	true		669247	0					
ANR	669320	BreakStatement	break ;	3612:2:111806:111811	669247	4	True				
ANR	669321	Label	default :	3613:1:111814:111821	669247	5	True				
ANR	669322	Identifier	default		669247	0					
ANR	669323	ExpressionStatement	aop -> size = 1	3614:2:111825:111838	669247	6	True				
ANR	669324	AssignmentExpression	aop -> size = 1		669247	0		=			
ANR	669325	PtrMemberAccess	aop -> size		669247	0					
ANR	669326	Identifier	aop		669247	0					
ANR	669327	Identifier	size		669247	1					
ANR	669328	PrimaryExpression	1		669247	1					
ANR	669329	IfStatement	"if ( r_anal_op ( core -> anal , aop , addr , buf , len , R_ANAL_OP_MASK_BASIC ) )"		669247	7					
ANR	669330	Condition	"r_anal_op ( core -> anal , aop , addr , buf , len , R_ANAL_OP_MASK_BASIC )"	3615:6:111846:111910	669247	0	True				
ANR	669331	CallExpression	"r_anal_op ( core -> anal , aop , addr , buf , len , R_ANAL_OP_MASK_BASIC )"		669247	0					
ANR	669332	Callee	r_anal_op		669247	0					
ANR	669333	Identifier	r_anal_op		669247	0					
ANR	669334	ArgumentList	core -> anal		669247	1					
ANR	669335	Argument	core -> anal		669247	0					
ANR	669336	PtrMemberAccess	core -> anal		669247	0					
ANR	669337	Identifier	core		669247	0					
ANR	669338	Identifier	anal		669247	1					
ANR	669339	Argument	aop		669247	1					
ANR	669340	Identifier	aop		669247	0					
ANR	669341	Argument	addr		669247	2					
ANR	669342	Identifier	addr		669247	0					
ANR	669343	Argument	buf		669247	3					
ANR	669344	Identifier	buf		669247	0					
ANR	669345	Argument	len		669247	4					
ANR	669346	Identifier	len		669247	0					
ANR	669347	Argument	R_ANAL_OP_MASK_BASIC		669247	5					
ANR	669348	Identifier	R_ANAL_OP_MASK_BASIC		669247	0					
ANR	669349	CompoundStatement		20:73:457:457	669247	1					
ANR	669350	SwitchStatement	switch ( aop -> type & R_ANAL_OP_TYPE_MASK )		669247	0					
ANR	669351	Condition	aop -> type & R_ANAL_OP_TYPE_MASK	3616:11:111926:111956	669247	0	True				
ANR	669352	BitAndExpression	aop -> type & R_ANAL_OP_TYPE_MASK		669247	0		&			
ANR	669353	PtrMemberAccess	aop -> type		669247	0					
ANR	669354	Identifier	aop		669247	0					
ANR	669355	Identifier	type		669247	1					
ANR	669356	Identifier	R_ANAL_OP_TYPE_MASK		669247	1					
ANR	669357	CompoundStatement		21:44:503:503	669247	1					
ANR	669358	Label	case R_ANAL_OP_TYPE_CALL :	3617:3:111964:111988	669247	0	True				
ANR	669359	Identifier	R_ANAL_OP_TYPE_CALL		669247	0					
ANR	669360	Label	case R_ANAL_OP_TYPE_CCALL :	3618:3:111993:112018	669247	1	True				
ANR	669361	Identifier	R_ANAL_OP_TYPE_CCALL		669247	0					
ANR	669362	ReturnStatement	return true ;	3619:4:112024:112035	669247	2	True				
ANR	669363	Identifier	true		669247	0					
ANR	669364	BreakStatement	break ;	3622:2:112048:112053	669247	8	True				
ANR	669365	ReturnStatement	return false ;	3624:1:112059:112071	669247	1	True				
ANR	669366	Identifier	false		669247	0					
ANR	669367	ReturnType	static bool		669247	1					
ANR	669368	Identifier	opiscall		669247	2					
ANR	669369	ParameterList	"RCore * core , RAnalOp * aop , ut64 addr , const ut8 * buf , int len , int arch"		669247	3					
ANR	669370	Parameter	RCore * core	3596:21:111382:111392	669247	0	True				
ANR	669371	ParameterType	RCore *		669247	0					
ANR	669372	Identifier	core		669247	1					
ANR	669373	Parameter	RAnalOp * aop	3596:34:111395:111406	669247	1	True				
ANR	669374	ParameterType	RAnalOp *		669247	0					
ANR	669375	Identifier	aop		669247	1					
ANR	669376	Parameter	ut64 addr	3596:48:111409:111417	669247	2	True				
ANR	669377	ParameterType	ut64		669247	0					
ANR	669378	Identifier	addr		669247	1					
ANR	669379	Parameter	const ut8 * buf	3596:59:111420:111433	669247	3	True				
ANR	669380	ParameterType	const ut8 *		669247	0					
ANR	669381	Identifier	buf		669247	1					
ANR	669382	Parameter	int len	3596:75:111436:111442	669247	4	True				
ANR	669383	ParameterType	int		669247	0					
ANR	669384	Identifier	len		669247	1					
ANR	669385	Parameter	int arch	3596:84:111445:111452	669247	5	True				
ANR	669386	ParameterType	int		669247	0					
ANR	669387	Identifier	arch		669247	1					
ANR	669388	CFGEntryNode	ENTRY		669247		True				
ANR	669389	CFGExitNode	EXIT		669247		True				
ANR	669390	Symbol	R_ANAL_OP_TYPE_MASK		669247						
ANR	669391	Symbol	aop -> size		669247						
ANR	669392	Symbol	* buf		669247						
ANR	669393	Symbol	aop		669247						
ANR	669394	Symbol	* core		669247						
ANR	669395	Symbol	false		669247						
ANR	669396	Symbol	diff		669247						
ANR	669397	Symbol	R_ANAL_OP_MASK_BASIC		669247						
ANR	669398	Symbol	core -> anal		669247						
ANR	669399	Symbol	core		669247						
ANR	669400	Symbol	buf		669247						
ANR	669401	Symbol	* aop		669247						
ANR	669402	Symbol	len		669247						
ANR	669403	Symbol	true		669247						
ANR	669404	Symbol	arch		669247						
ANR	669405	Symbol	addr		669247						
ANR	669406	Symbol	r_anal_op		669247						
ANR	669407	Symbol	aop -> type		669247						
ANR	669408	Function	r_core_anal_search	3629:0:112126:116111							
ANR	669409	FunctionDef	"r_core_anal_search (RCore * core , ut64 from , ut64 to , ut64 ref , int mode)"		669408	0					
ANR	669410	CompoundStatement		3629:82:112208:116111	669408	0					
ANR	669411	IdentifierDeclStatement	ut8 * buf = ( ut8 * ) malloc ( core -> blocksize ) ;	3630:1:112211:112253	669408	0	True				
ANR	669412	IdentifierDecl	* buf = ( ut8 * ) malloc ( core -> blocksize )		669408	0					
ANR	669413	IdentifierDeclType	ut8 *		669408	0					
ANR	669414	Identifier	buf		669408	1					
ANR	669415	AssignmentExpression	* buf = ( ut8 * ) malloc ( core -> blocksize )		669408	2		=			
ANR	669416	Identifier	buf		669408	0					
ANR	669417	CastExpression	( ut8 * ) malloc ( core -> blocksize )		669408	1					
ANR	669418	CastTarget	ut8 *		669408	0					
ANR	669419	CallExpression	malloc ( core -> blocksize )		669408	1					
ANR	669420	Callee	malloc		669408	0					
ANR	669421	Identifier	malloc		669408	0					
ANR	669422	ArgumentList	core -> blocksize		669408	1					
ANR	669423	Argument	core -> blocksize		669408	0					
ANR	669424	PtrMemberAccess	core -> blocksize		669408	0					
ANR	669425	Identifier	core		669408	0					
ANR	669426	Identifier	blocksize		669408	1					
ANR	669427	IfStatement	if ( ! buf )		669408	1					
ANR	669428	Condition	! buf	3631:5:112260:112263	669408	0	True				
ANR	669429	UnaryOperationExpression	! buf		669408	0					
ANR	669430	UnaryOperator	!		669408	0					
ANR	669431	Identifier	buf		669408	1					
ANR	669432	CompoundStatement		3:11:57:57	669408	1					
ANR	669433	ReturnStatement	return - 1 ;	3632:2:112270:112279	669408	0	True				
ANR	669434	UnaryOperationExpression	- 1		669408	0					
ANR	669435	UnaryOperator	-		669408	0					
ANR	669436	PrimaryExpression	1		669408	1					
ANR	669437	IdentifierDeclStatement	"int ptrdepth = r_config_get_i ( core -> config , ""anal.ptrdepth"" ) ;"	3634:1:112285:112346	669408	2	True				
ANR	669438	IdentifierDecl	"ptrdepth = r_config_get_i ( core -> config , ""anal.ptrdepth"" )"		669408	0					
ANR	669439	IdentifierDeclType	int		669408	0					
ANR	669440	Identifier	ptrdepth		669408	1					
ANR	669441	AssignmentExpression	"ptrdepth = r_config_get_i ( core -> config , ""anal.ptrdepth"" )"		669408	2		=			
ANR	669442	Identifier	ptrdepth		669408	0					
ANR	669443	CallExpression	"r_config_get_i ( core -> config , ""anal.ptrdepth"" )"		669408	1					
ANR	669444	Callee	r_config_get_i		669408	0					
ANR	669445	Identifier	r_config_get_i		669408	0					
ANR	669446	ArgumentList	core -> config		669408	1					
ANR	669447	Argument	core -> config		669408	0					
ANR	669448	PtrMemberAccess	core -> config		669408	0					
ANR	669449	Identifier	core		669408	0					
ANR	669450	Identifier	config		669408	1					
ANR	669451	Argument	"""anal.ptrdepth"""		669408	1					
ANR	669452	PrimaryExpression	"""anal.ptrdepth"""		669408	0					
ANR	669453	IdentifierDeclStatement	"int i , count = 0 ;"	3635:1:112349:112365	669408	3	True				
ANR	669454	IdentifierDecl	i		669408	0					
ANR	669455	IdentifierDeclType	int		669408	0					
ANR	669456	Identifier	i		669408	1					
ANR	669457	IdentifierDecl	count = 0		669408	1					
ANR	669458	IdentifierDeclType	int		669408	0					
ANR	669459	Identifier	count		669408	1					
ANR	669460	AssignmentExpression	count = 0		669408	2		=			
ANR	669461	Identifier	count		669408	0					
ANR	669462	PrimaryExpression	0		669408	1					
ANR	669463	IdentifierDeclStatement	RAnalOp op = R_EMPTY ;	3636:1:112368:112388	669408	4	True				
ANR	669464	IdentifierDecl	op = R_EMPTY		669408	0					
ANR	669465	IdentifierDeclType	RAnalOp		669408	0					
ANR	669466	Identifier	op		669408	1					
ANR	669467	AssignmentExpression	op = R_EMPTY		669408	2		=			
ANR	669468	Identifier	R_EMPTY		669408	0					
ANR	669469	Identifier	R_EMPTY		669408	1					
ANR	669470	IdentifierDeclStatement	ut64 at ;	3637:1:112391:112398	669408	5	True				
ANR	669471	IdentifierDecl	at		669408	0					
ANR	669472	IdentifierDeclType	ut64		669408	0					
ANR	669473	Identifier	at		669408	1					
ANR	669474	IdentifierDeclStatement	"char bckwrds , do_bckwrd_srch ;"	3638:1:112401:112429	669408	6	True				
ANR	669475	IdentifierDecl	bckwrds		669408	0					
ANR	669476	IdentifierDeclType	char		669408	0					
ANR	669477	Identifier	bckwrds		669408	1					
ANR	669478	IdentifierDecl	do_bckwrd_srch		669408	1					
ANR	669479	IdentifierDeclType	char		669408	0					
ANR	669480	Identifier	do_bckwrd_srch		669408	1					
ANR	669481	IdentifierDeclStatement	int arch = - 1 ;	3639:1:112432:112445	669408	7	True				
ANR	669482	IdentifierDecl	arch = - 1		669408	0					
ANR	669483	IdentifierDeclType	int		669408	0					
ANR	669484	Identifier	arch		669408	1					
ANR	669485	AssignmentExpression	arch = - 1		669408	2		=			
ANR	669486	Identifier	arch		669408	0					
ANR	669487	UnaryOperationExpression	- 1		669408	1					
ANR	669488	UnaryOperator	-		669408	0					
ANR	669489	PrimaryExpression	1		669408	1					
ANR	669490	IfStatement	if ( core -> assembler -> bits == 64 )		669408	8					
ANR	669491	Condition	core -> assembler -> bits == 64	3640:5:112452:112478	669408	0	True				
ANR	669492	EqualityExpression	core -> assembler -> bits == 64		669408	0		==			
ANR	669493	PtrMemberAccess	core -> assembler -> bits		669408	0					
ANR	669494	PtrMemberAccess	core -> assembler		669408	0					
ANR	669495	Identifier	core		669408	0					
ANR	669496	Identifier	assembler		669408	1					
ANR	669497	Identifier	bits		669408	1					
ANR	669498	PrimaryExpression	64		669408	1					
ANR	669499	CompoundStatement		12:34:272:272	669408	1					
ANR	669500	IfStatement	"if ( ! strncmp ( core -> assembler -> cur -> name , ""arm"" , 3 ) )"		669408	0					
ANR	669501	Condition	"! strncmp ( core -> assembler -> cur -> name , ""arm"" , 3 )"	3642:6:112509:112555	669408	0	True				
ANR	669502	UnaryOperationExpression	"! strncmp ( core -> assembler -> cur -> name , ""arm"" , 3 )"		669408	0					
ANR	669503	UnaryOperator	!		669408	0					
ANR	669504	CallExpression	"strncmp ( core -> assembler -> cur -> name , ""arm"" , 3 )"		669408	1					
ANR	669505	Callee	strncmp		669408	0					
ANR	669506	Identifier	strncmp		669408	0					
ANR	669507	ArgumentList	core -> assembler -> cur -> name		669408	1					
ANR	669508	Argument	core -> assembler -> cur -> name		669408	0					
ANR	669509	PtrMemberAccess	core -> assembler -> cur -> name		669408	0					
ANR	669510	PtrMemberAccess	core -> assembler -> cur		669408	0					
ANR	669511	PtrMemberAccess	core -> assembler		669408	0					
ANR	669512	Identifier	core		669408	0					
ANR	669513	Identifier	assembler		669408	1					
ANR	669514	Identifier	cur		669408	1					
ANR	669515	Identifier	name		669408	1					
ANR	669516	Argument	"""arm"""		669408	1					
ANR	669517	PrimaryExpression	"""arm"""		669408	0					
ANR	669518	Argument	3		669408	2					
ANR	669519	PrimaryExpression	3		669408	0					
ANR	669520	CompoundStatement		14:55:349:349	669408	1					
ANR	669521	ExpressionStatement	arch = R2_ARCH_ARM64	3643:3:112563:112583	669408	0	True				
ANR	669522	AssignmentExpression	arch = R2_ARCH_ARM64		669408	0		=			
ANR	669523	Identifier	arch		669408	0					
ANR	669524	Identifier	R2_ARCH_ARM64		669408	1					
ANR	669525	ExpressionStatement	do_bckwrd_srch = bckwrds = core -> search -> bckwrds	3649:1:112684:112732	669408	9	True				
ANR	669526	AssignmentExpression	do_bckwrd_srch = bckwrds = core -> search -> bckwrds		669408	0		=			
ANR	669527	Identifier	do_bckwrd_srch		669408	0					
ANR	669528	AssignmentExpression	bckwrds = core -> search -> bckwrds		669408	1		=			
ANR	669529	Identifier	bckwrds		669408	0					
ANR	669530	PtrMemberAccess	core -> search -> bckwrds		669408	1					
ANR	669531	PtrMemberAccess	core -> search		669408	0					
ANR	669532	Identifier	core		669408	0					
ANR	669533	Identifier	search		669408	1					
ANR	669534	Identifier	bckwrds		669408	1					
ANR	669535	IfStatement	if ( core -> file )		669408	10					
ANR	669536	Condition	core -> file	3650:5:112739:112748	669408	0	True				
ANR	669537	PtrMemberAccess	core -> file		669408	0					
ANR	669538	Identifier	core		669408	0					
ANR	669539	Identifier	file		669408	1					
ANR	669540	CompoundStatement		22:17:542:542	669408	1					
ANR	669541	ExpressionStatement	"r_io_use_fd ( core -> io , core -> file -> fd )"	3651:2:112755:112793	669408	0	True				
ANR	669542	CallExpression	"r_io_use_fd ( core -> io , core -> file -> fd )"		669408	0					
ANR	669543	Callee	r_io_use_fd		669408	0					
ANR	669544	Identifier	r_io_use_fd		669408	0					
ANR	669545	ArgumentList	core -> io		669408	1					
ANR	669546	Argument	core -> io		669408	0					
ANR	669547	PtrMemberAccess	core -> io		669408	0					
ANR	669548	Identifier	core		669408	0					
ANR	669549	Identifier	io		669408	1					
ANR	669550	Argument	core -> file -> fd		669408	1					
ANR	669551	PtrMemberAccess	core -> file -> fd		669408	0					
ANR	669552	PtrMemberAccess	core -> file		669408	0					
ANR	669553	Identifier	core		669408	0					
ANR	669554	Identifier	file		669408	1					
ANR	669555	Identifier	fd		669408	1					
ANR	669556	IfStatement	if ( ! ref )		669408	11					
ANR	669557	Condition	! ref	3653:5:112803:112806	669408	0	True				
ANR	669558	UnaryOperationExpression	! ref		669408	0					
ANR	669559	UnaryOperator	!		669408	0					
ANR	669560	Identifier	ref		669408	1					
ANR	669561	CompoundStatement		25:11:600:600	669408	1					
ANR	669562	ExpressionStatement	"eprintf ( ""Null reference search is not supported\\n"" )"	3654:2:112813:112865	669408	0	True				
ANR	669563	CallExpression	"eprintf ( ""Null reference search is not supported\\n"" )"		669408	0					
ANR	669564	Callee	eprintf		669408	0					
ANR	669565	Identifier	eprintf		669408	0					
ANR	669566	ArgumentList	"""Null reference search is not supported\\n"""		669408	1					
ANR	669567	Argument	"""Null reference search is not supported\\n"""		669408	0					
ANR	669568	PrimaryExpression	"""Null reference search is not supported\\n"""		669408	0					
ANR	669569	ExpressionStatement	free ( buf )	3655:2:112869:112879	669408	1	True				
ANR	669570	CallExpression	free ( buf )		669408	0					
ANR	669571	Callee	free		669408	0					
ANR	669572	Identifier	free		669408	0					
ANR	669573	ArgumentList	buf		669408	1					
ANR	669574	Argument	buf		669408	0					
ANR	669575	Identifier	buf		669408	0					
ANR	669576	ReturnStatement	return - 1 ;	3656:2:112883:112892	669408	2	True				
ANR	669577	UnaryOperationExpression	- 1		669408	0					
ANR	669578	UnaryOperator	-		669408	0					
ANR	669579	PrimaryExpression	1		669408	1					
ANR	669580	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	3658:1:112898:112928	669408	12	True				
ANR	669581	CallExpression	"r_cons_break_push ( NULL , NULL )"		669408	0					
ANR	669582	Callee	r_cons_break_push		669408	0					
ANR	669583	Identifier	r_cons_break_push		669408	0					
ANR	669584	ArgumentList	NULL		669408	1					
ANR	669585	Argument	NULL		669408	0					
ANR	669586	Identifier	NULL		669408	0					
ANR	669587	Argument	NULL		669408	1					
ANR	669588	Identifier	NULL		669408	0					
ANR	669589	IfStatement	if ( core -> blocksize > OPSZ )		669408	13					
ANR	669590	Condition	core -> blocksize > OPSZ	3659:5:112935:112956	669408	0	True				
ANR	669591	RelationalExpression	core -> blocksize > OPSZ		669408	0		>			
ANR	669592	PtrMemberAccess	core -> blocksize		669408	0					
ANR	669593	Identifier	core		669408	0					
ANR	669594	Identifier	blocksize		669408	1					
ANR	669595	Identifier	OPSZ		669408	1					
ANR	669596	CompoundStatement		31:29:750:750	669408	1					
ANR	669597	IfStatement	if ( bckwrds )		669408	0					
ANR	669598	Condition	bckwrds	3660:6:112967:112973	669408	0	True				
ANR	669599	Identifier	bckwrds		669408	0					
ANR	669600	CompoundStatement		32:15:767:767	669408	1					
ANR	669601	IfStatement	if ( from + core -> blocksize > to )		669408	0					
ANR	669602	Condition	from + core -> blocksize > to	3661:7:112985:113011	669408	0	True				
ANR	669603	RelationalExpression	from + core -> blocksize > to		669408	0		>			
ANR	669604	AdditiveExpression	from + core -> blocksize		669408	0		+			
ANR	669605	Identifier	from		669408	0					
ANR	669606	PtrMemberAccess	core -> blocksize		669408	1					
ANR	669607	Identifier	core		669408	0					
ANR	669608	Identifier	blocksize		669408	1					
ANR	669609	Identifier	to		669408	1					
ANR	669610	CompoundStatement		33:36:805:805	669408	1					
ANR	669611	ExpressionStatement	at = from	3662:4:113020:113029	669408	0	True				
ANR	669612	AssignmentExpression	at = from		669408	0		=			
ANR	669613	Identifier	at		669408	0					
ANR	669614	Identifier	from		669408	1					
ANR	669615	ExpressionStatement	do_bckwrd_srch = false	3663:4:113035:113057	669408	1	True				
ANR	669616	AssignmentExpression	do_bckwrd_srch = false		669408	0		=			
ANR	669617	Identifier	do_bckwrd_srch		669408	0					
ANR	669618	Identifier	false		669408	1					
ANR	669619	ElseStatement	else		669408	0					
ANR	669620	CompoundStatement		36:10:860:860	669408	0					
ANR	669621	ExpressionStatement	at = to - core -> blocksize	3665:4:113075:113100	669408	0	True				
ANR	669622	AssignmentExpression	at = to - core -> blocksize		669408	0		=			
ANR	669623	Identifier	at		669408	0					
ANR	669624	AdditiveExpression	to - core -> blocksize		669408	1		-			
ANR	669625	Identifier	to		669408	0					
ANR	669626	PtrMemberAccess	core -> blocksize		669408	1					
ANR	669627	Identifier	core		669408	0					
ANR	669628	Identifier	blocksize		669408	1					
ANR	669629	ElseStatement	else		669408	0					
ANR	669630	CompoundStatement		39:9:907:907	669408	0					
ANR	669631	ExpressionStatement	at = from	3668:3:113121:113130	669408	0	True				
ANR	669632	AssignmentExpression	at = from		669408	0		=			
ANR	669633	Identifier	at		669408	0					
ANR	669634	Identifier	from		669408	1					
ANR	669635	WhileStatement	while ( ( ! bckwrds && at < to ) || bckwrds )		669408	1					
ANR	669636	Condition	( ! bckwrds && at < to ) || bckwrds	3670:9:113145:113176	669408	0	True				
ANR	669637	OrExpression	( ! bckwrds && at < to ) || bckwrds		669408	0		||			
ANR	669638	AndExpression	! bckwrds && at < to		669408	0		&&			
ANR	669639	UnaryOperationExpression	! bckwrds		669408	0					
ANR	669640	UnaryOperator	!		669408	0					
ANR	669641	Identifier	bckwrds		669408	1					
ANR	669642	RelationalExpression	at < to		669408	1		<			
ANR	669643	Identifier	at		669408	0					
ANR	669644	Identifier	to		669408	1					
ANR	669645	Identifier	bckwrds		669408	1					
ANR	669646	CompoundStatement		42:43:970:970	669408	1					
ANR	669647	Statement	eprintf	3671:3:113184:113190	669408	0	True				
ANR	669648	Statement	(	3671:11:113192:113192	669408	1	True				
ANR	669649	Statement	"""\\r[0x%08"""	3671:12:113193:113202	669408	2	True				
ANR	669650	Statement	PFMT64x	3671:22:113203:113209	669408	3	True				
ANR	669651	Statement	"""-0x%08"""	3671:29:113210:113217	669408	4	True				
ANR	669652	Statement	PFMT64x	3671:37:113218:113224	669408	5	True				
ANR	669653	Statement	"""] """	3671:44:113225:113228	669408	6	True				
ANR	669654	Statement	","	3671:48:113229:113229	669408	7	True				
ANR	669655	Statement	at	3671:50:113231:113232	669408	8	True				
ANR	669656	Statement	","	3671:52:113233:113233	669408	9	True				
ANR	669657	Statement	to	3671:54:113235:113236	669408	10	True				
ANR	669658	Statement	)	3671:56:113237:113237	669408	11	True				
ANR	669659	ExpressionStatement		3671:57:113238:113238	669408	12	True				
ANR	669660	IfStatement	if ( r_cons_is_breaked ( ) )		669408	13					
ANR	669661	Condition	r_cons_is_breaked ( )	3672:7:113247:113266	669408	0	True				
ANR	669662	CallExpression	r_cons_is_breaked ( )		669408	0					
ANR	669663	Callee	r_cons_is_breaked		669408	0					
ANR	669664	Identifier	r_cons_is_breaked		669408	0					
ANR	669665	ArgumentList			669408	1					
ANR	669666	CompoundStatement		44:29:1060:1060	669408	1					
ANR	669667	BreakStatement	break ;	3673:4:113275:113280	669408	0	True				
ANR	669668	IfStatement	"if ( ! r_io_read_at ( core -> io , at , buf , core -> blocksize ) )"		669408	14					
ANR	669669	Condition	"! r_io_read_at ( core -> io , at , buf , core -> blocksize )"	3676:7:113336:113385	669408	0	True				
ANR	669670	UnaryOperationExpression	"! r_io_read_at ( core -> io , at , buf , core -> blocksize )"		669408	0					
ANR	669671	UnaryOperator	!		669408	0					
ANR	669672	CallExpression	"r_io_read_at ( core -> io , at , buf , core -> blocksize )"		669408	1					
ANR	669673	Callee	r_io_read_at		669408	0					
ANR	669674	Identifier	r_io_read_at		669408	0					
ANR	669675	ArgumentList	core -> io		669408	1					
ANR	669676	Argument	core -> io		669408	0					
ANR	669677	PtrMemberAccess	core -> io		669408	0					
ANR	669678	Identifier	core		669408	0					
ANR	669679	Identifier	io		669408	1					
ANR	669680	Argument	at		669408	1					
ANR	669681	Identifier	at		669408	0					
ANR	669682	Argument	buf		669408	2					
ANR	669683	Identifier	buf		669408	0					
ANR	669684	Argument	core -> blocksize		669408	3					
ANR	669685	PtrMemberAccess	core -> blocksize		669408	0					
ANR	669686	Identifier	core		669408	0					
ANR	669687	Identifier	blocksize		669408	1					
ANR	669688	CompoundStatement		48:59:1179:1179	669408	1					
ANR	669689	Statement	eprintf	3677:4:113394:113400	669408	0	True				
ANR	669690	Statement	(	3677:12:113402:113402	669408	1	True				
ANR	669691	Statement	"""Failed to read at 0x%08"""	3677:13:113403:113427	669408	2	True				
ANR	669692	Statement	PFMT64x	3677:39:113429:113435	669408	3	True				
ANR	669693	Statement	"""\\n"""	3677:47:113437:113440	669408	4	True				
ANR	669694	Statement	","	3677:51:113441:113441	669408	5	True				
ANR	669695	Statement	at	3677:53:113443:113444	669408	6	True				
ANR	669696	Statement	)	3677:55:113445:113445	669408	7	True				
ANR	669697	ExpressionStatement		3677:56:113446:113446	669408	8	True				
ANR	669698	BreakStatement	break ;	3678:4:113452:113457	669408	9	True				
ANR	669699	ForStatement	for ( i = bckwrds ? ( core -> blocksize - OPSZ - 1 ) : 0 ; ( ! bckwrds && i < core -> blocksize - OPSZ ) || ( bckwrds && i > 0 ) ; bckwrds ? i -- : i ++ )		669408	15					
ANR	669700	ForInit	i = bckwrds ? ( core -> blocksize - OPSZ - 1 ) : 0 ;	3680:8:113472:113518	669408	0	True				
ANR	669701	AssignmentExpression	i = bckwrds ? ( core -> blocksize - OPSZ - 1 ) : 0		669408	0		=			
ANR	669702	Identifier	i		669408	0					
ANR	669703	ConditionalExpression	bckwrds ? ( core -> blocksize - OPSZ - 1 ) : 0		669408	1					
ANR	669704	Condition	bckwrds		669408	0					
ANR	669705	Identifier	bckwrds		669408	0					
ANR	669706	AdditiveExpression	core -> blocksize - OPSZ - 1		669408	1		-			
ANR	669707	PtrMemberAccess	core -> blocksize		669408	0					
ANR	669708	Identifier	core		669408	0					
ANR	669709	Identifier	blocksize		669408	1					
ANR	669710	AdditiveExpression	OPSZ - 1		669408	1		-			
ANR	669711	Identifier	OPSZ		669408	0					
ANR	669712	PrimaryExpression	1		669408	1					
ANR	669713	PrimaryExpression	0		669408	2					
ANR	669714	Condition	( ! bckwrds && i < core -> blocksize - OPSZ ) || ( bckwrds && i > 0 )	3681:8:113528:113597	669408	1	True				
ANR	669715	OrExpression	( ! bckwrds && i < core -> blocksize - OPSZ ) || ( bckwrds && i > 0 )		669408	0		||			
ANR	669716	AndExpression	! bckwrds && i < core -> blocksize - OPSZ		669408	0		&&			
ANR	669717	UnaryOperationExpression	! bckwrds		669408	0					
ANR	669718	UnaryOperator	!		669408	0					
ANR	669719	Identifier	bckwrds		669408	1					
ANR	669720	RelationalExpression	i < core -> blocksize - OPSZ		669408	1		<			
ANR	669721	Identifier	i		669408	0					
ANR	669722	AdditiveExpression	core -> blocksize - OPSZ		669408	1		-			
ANR	669723	PtrMemberAccess	core -> blocksize		669408	0					
ANR	669724	Identifier	core		669408	0					
ANR	669725	Identifier	blocksize		669408	1					
ANR	669726	Identifier	OPSZ		669408	1					
ANR	669727	AndExpression	bckwrds && i > 0		669408	1		&&			
ANR	669728	Identifier	bckwrds		669408	0					
ANR	669729	RelationalExpression	i > 0		669408	1		>			
ANR	669730	Identifier	i		669408	0					
ANR	669731	PrimaryExpression	0		669408	1					
ANR	669732	ConditionalExpression	bckwrds ? i -- : i ++	3683:8:113608:113626	669408	2	True				
ANR	669733	Condition	bckwrds		669408	0					
ANR	669734	Identifier	bckwrds		669408	0					
ANR	669735	PostIncDecOperationExpression	i --		669408	1					
ANR	669736	Identifier	i		669408	0					
ANR	669737	IncDec	--		669408	1					
ANR	669738	PostIncDecOperationExpression	i ++		669408	2					
ANR	669739	Identifier	i		669408	0					
ANR	669740	IncDec	++		669408	1					
ANR	669741	CompoundStatement		55:29:1420:1420	669408	3					
ANR	669742	IfStatement	if ( r_cons_is_breaked ( ) )		669408	0					
ANR	669743	Condition	r_cons_is_breaked ( )	3685:8:113669:113688	669408	0	True				
ANR	669744	CallExpression	r_cons_is_breaked ( )		669408	0					
ANR	669745	Callee	r_cons_is_breaked		669408	0					
ANR	669746	Identifier	r_cons_is_breaked		669408	0					
ANR	669747	ArgumentList			669408	1					
ANR	669748	CompoundStatement		57:30:1482:1482	669408	1					
ANR	669749	BreakStatement	break ;	3686:5:113698:113703	669408	0	True				
ANR	669750	SwitchStatement	switch ( mode )		669408	1					
ANR	669751	Condition	mode	3688:12:113723:113726	669408	0	True				
ANR	669752	Identifier	mode		669408	0					
ANR	669753	CompoundStatement		60:18:1520:1520	669408	1					
ANR	669754	Label	case 'c' :	3689:4:113735:113743	669408	0	True				
ANR	669755	ExpressionStatement	"( void ) opiscall ( core , & op , at + i , buf + i , core -> blocksize - i , arch )"	3690:5:113750:113820	669408	1	True				
ANR	669756	CastExpression	"( void ) opiscall ( core , & op , at + i , buf + i , core -> blocksize - i , arch )"		669408	0					
ANR	669757	CastTarget	void		669408	0					
ANR	669758	CallExpression	"opiscall ( core , & op , at + i , buf + i , core -> blocksize - i , arch )"		669408	1					
ANR	669759	Callee	opiscall		669408	0					
ANR	669760	Identifier	opiscall		669408	0					
ANR	669761	ArgumentList	core		669408	1					
ANR	669762	Argument	core		669408	0					
ANR	669763	Identifier	core		669408	0					
ANR	669764	Argument	& op		669408	1					
ANR	669765	UnaryOperationExpression	& op		669408	0					
ANR	669766	UnaryOperator	&		669408	0					
ANR	669767	Identifier	op		669408	1					
ANR	669768	Argument	at + i		669408	2					
ANR	669769	AdditiveExpression	at + i		669408	0		+			
ANR	669770	Identifier	at		669408	0					
ANR	669771	Identifier	i		669408	1					
ANR	669772	Argument	buf + i		669408	3					
ANR	669773	AdditiveExpression	buf + i		669408	0		+			
ANR	669774	Identifier	buf		669408	0					
ANR	669775	Identifier	i		669408	1					
ANR	669776	Argument	core -> blocksize - i		669408	4					
ANR	669777	AdditiveExpression	core -> blocksize - i		669408	0		-			
ANR	669778	PtrMemberAccess	core -> blocksize		669408	0					
ANR	669779	Identifier	core		669408	0					
ANR	669780	Identifier	blocksize		669408	1					
ANR	669781	Identifier	i		669408	1					
ANR	669782	Argument	arch		669408	5					
ANR	669783	Identifier	arch		669408	0					
ANR	669784	IfStatement	if ( op . size < 1 )		669408	2					
ANR	669785	Condition	op . size < 1	3691:9:113831:113841	669408	0	True				
ANR	669786	RelationalExpression	op . size < 1		669408	0		<			
ANR	669787	MemberAccess	op . size		669408	0					
ANR	669788	Identifier	op		669408	0					
ANR	669789	Identifier	size		669408	1					
ANR	669790	PrimaryExpression	1		669408	1					
ANR	669791	CompoundStatement		63:22:1635:1635	669408	1					
ANR	669792	ExpressionStatement	op . size = 1	3692:6:113852:113863	669408	0	True				
ANR	669793	AssignmentExpression	op . size = 1		669408	0		=			
ANR	669794	MemberAccess	op . size		669408	0					
ANR	669795	Identifier	op		669408	0					
ANR	669796	Identifier	size		669408	1					
ANR	669797	PrimaryExpression	1		669408	1					
ANR	669798	BreakStatement	break ;	3694:5:113877:113882	669408	3	True				
ANR	669799	Label	case 'r' :	3695:4:113888:113896	669408	4	True				
ANR	669800	Label	case 'w' :	3696:4:113902:113910	669408	5	True				
ANR	669801	Label	case 'x' :	3697:4:113916:113924	669408	6	True				
ANR	669802	CompoundStatement		72:6:1825:1887	669408	7					
ANR	669803	ExpressionStatement	"r_anal_op ( core -> anal , & op , at + i , buf + i , core -> blocksize - i , R_ANAL_OP_MASK_BASIC )"	3699:6:113939:114026	669408	0	True				
ANR	669804	CallExpression	"r_anal_op ( core -> anal , & op , at + i , buf + i , core -> blocksize - i , R_ANAL_OP_MASK_BASIC )"		669408	0					
ANR	669805	Callee	r_anal_op		669408	0					
ANR	669806	Identifier	r_anal_op		669408	0					
ANR	669807	ArgumentList	core -> anal		669408	1					
ANR	669808	Argument	core -> anal		669408	0					
ANR	669809	PtrMemberAccess	core -> anal		669408	0					
ANR	669810	Identifier	core		669408	0					
ANR	669811	Identifier	anal		669408	1					
ANR	669812	Argument	& op		669408	1					
ANR	669813	UnaryOperationExpression	& op		669408	0					
ANR	669814	UnaryOperator	&		669408	0					
ANR	669815	Identifier	op		669408	1					
ANR	669816	Argument	at + i		669408	2					
ANR	669817	AdditiveExpression	at + i		669408	0		+			
ANR	669818	Identifier	at		669408	0					
ANR	669819	Identifier	i		669408	1					
ANR	669820	Argument	buf + i		669408	3					
ANR	669821	AdditiveExpression	buf + i		669408	0		+			
ANR	669822	Identifier	buf		669408	0					
ANR	669823	Identifier	i		669408	1					
ANR	669824	Argument	core -> blocksize - i		669408	4					
ANR	669825	AdditiveExpression	core -> blocksize - i		669408	0		-			
ANR	669826	PtrMemberAccess	core -> blocksize		669408	0					
ANR	669827	Identifier	core		669408	0					
ANR	669828	Identifier	blocksize		669408	1					
ANR	669829	Identifier	i		669408	1					
ANR	669830	Argument	R_ANAL_OP_MASK_BASIC		669408	5					
ANR	669831	Identifier	R_ANAL_OP_MASK_BASIC		669408	0					
ANR	669832	IdentifierDeclStatement	int mask = mode == 'r' ? 1 : mode == 'w' ? 2 : mode == 'x' ? 4 : 0 ;	3700:6:114034:114096	669408	1	True				
ANR	669833	IdentifierDecl	mask = mode == 'r' ? 1 : mode == 'w' ? 2 : mode == 'x' ? 4 : 0		669408	0					
ANR	669834	IdentifierDeclType	int		669408	0					
ANR	669835	Identifier	mask		669408	1					
ANR	669836	AssignmentExpression	mask = mode == 'r' ? 1 : mode == 'w' ? 2 : mode == 'x' ? 4 : 0		669408	2		=			
ANR	669837	Identifier	mask		669408	0					
ANR	669838	ConditionalExpression	mode == 'r' ? 1 : mode == 'w' ? 2 : mode == 'x' ? 4 : 0		669408	1					
ANR	669839	Condition	mode == 'r'		669408	0					
ANR	669840	EqualityExpression	mode == 'r'		669408	0		==			
ANR	669841	Identifier	mode		669408	0					
ANR	669842	PrimaryExpression	'r'		669408	1					
ANR	669843	PrimaryExpression	1		669408	1					
ANR	669844	ConditionalExpression	mode == 'w' ? 2 : mode == 'x' ? 4 : 0		669408	2					
ANR	669845	Condition	mode == 'w'		669408	0					
ANR	669846	EqualityExpression	mode == 'w'		669408	0		==			
ANR	669847	Identifier	mode		669408	0					
ANR	669848	PrimaryExpression	'w'		669408	1					
ANR	669849	PrimaryExpression	2		669408	1					
ANR	669850	ConditionalExpression	mode == 'x' ? 4 : 0		669408	2					
ANR	669851	Condition	mode == 'x'		669408	0					
ANR	669852	EqualityExpression	mode == 'x'		669408	0		==			
ANR	669853	Identifier	mode		669408	0					
ANR	669854	PrimaryExpression	'x'		669408	1					
ANR	669855	PrimaryExpression	4		669408	1					
ANR	669856	PrimaryExpression	0		669408	2					
ANR	669857	IfStatement	if ( op . direction == mask )		669408	2					
ANR	669858	Condition	op . direction == mask	3701:10:114108:114127	669408	0	True				
ANR	669859	EqualityExpression	op . direction == mask		669408	0		==			
ANR	669860	MemberAccess	op . direction		669408	0					
ANR	669861	Identifier	op		669408	0					
ANR	669862	Identifier	direction		669408	1					
ANR	669863	Identifier	mask		669408	1					
ANR	669864	CompoundStatement		73:32:1921:1921	669408	1					
ANR	669865	ExpressionStatement	i += op . size	3702:7:114139:114151	669408	0	True				
ANR	669866	AssignmentExpression	i += op . size		669408	0		+=			
ANR	669867	Identifier	i		669408	0					
ANR	669868	MemberAccess	op . size		669408	1					
ANR	669869	Identifier	op		669408	0					
ANR	669870	Identifier	size		669408	1					
ANR	669871	ExpressionStatement	r_anal_op_fini ( & op )	3704:6:114167:114187	669408	3	True				
ANR	669872	CallExpression	r_anal_op_fini ( & op )		669408	0					
ANR	669873	Callee	r_anal_op_fini		669408	0					
ANR	669874	Identifier	r_anal_op_fini		669408	0					
ANR	669875	ArgumentList	& op		669408	1					
ANR	669876	Argument	& op		669408	0					
ANR	669877	UnaryOperationExpression	& op		669408	0					
ANR	669878	UnaryOperator	&		669408	0					
ANR	669879	Identifier	op		669408	1					
ANR	669880	ContinueStatement	continue ;	3705:6:114195:114203	669408	4	True				
ANR	669881	BreakStatement	break ;	3707:5:114217:114222	669408	8	True				
ANR	669882	Label	default :	3708:4:114228:114235	669408	9	True				
ANR	669883	Identifier	default		669408	0					
ANR	669884	IfStatement	"if ( ! r_anal_op ( core -> anal , & op , at + i , buf + i , core -> blocksize - i , R_ANAL_OP_MASK_BASIC ) )"		669408	10					
ANR	669885	Condition	"! r_anal_op ( core -> anal , & op , at + i , buf + i , core -> blocksize - i , R_ANAL_OP_MASK_BASIC )"	3709:9:114246:114333	669408	0	True				
ANR	669886	UnaryOperationExpression	"! r_anal_op ( core -> anal , & op , at + i , buf + i , core -> blocksize - i , R_ANAL_OP_MASK_BASIC )"		669408	0					
ANR	669887	UnaryOperator	!		669408	0					
ANR	669888	CallExpression	"r_anal_op ( core -> anal , & op , at + i , buf + i , core -> blocksize - i , R_ANAL_OP_MASK_BASIC )"		669408	1					
ANR	669889	Callee	r_anal_op		669408	0					
ANR	669890	Identifier	r_anal_op		669408	0					
ANR	669891	ArgumentList	core -> anal		669408	1					
ANR	669892	Argument	core -> anal		669408	0					
ANR	669893	PtrMemberAccess	core -> anal		669408	0					
ANR	669894	Identifier	core		669408	0					
ANR	669895	Identifier	anal		669408	1					
ANR	669896	Argument	& op		669408	1					
ANR	669897	UnaryOperationExpression	& op		669408	0					
ANR	669898	UnaryOperator	&		669408	0					
ANR	669899	Identifier	op		669408	1					
ANR	669900	Argument	at + i		669408	2					
ANR	669901	AdditiveExpression	at + i		669408	0		+			
ANR	669902	Identifier	at		669408	0					
ANR	669903	Identifier	i		669408	1					
ANR	669904	Argument	buf + i		669408	3					
ANR	669905	AdditiveExpression	buf + i		669408	0		+			
ANR	669906	Identifier	buf		669408	0					
ANR	669907	Identifier	i		669408	1					
ANR	669908	Argument	core -> blocksize - i		669408	4					
ANR	669909	AdditiveExpression	core -> blocksize - i		669408	0		-			
ANR	669910	PtrMemberAccess	core -> blocksize		669408	0					
ANR	669911	Identifier	core		669408	0					
ANR	669912	Identifier	blocksize		669408	1					
ANR	669913	Identifier	i		669408	1					
ANR	669914	Argument	R_ANAL_OP_MASK_BASIC		669408	5					
ANR	669915	Identifier	R_ANAL_OP_MASK_BASIC		669408	0					
ANR	669916	CompoundStatement		81:99:2127:2127	669408	1					
ANR	669917	ExpressionStatement	r_anal_op_fini ( & op )	3710:6:114344:114364	669408	0	True				
ANR	669918	CallExpression	r_anal_op_fini ( & op )		669408	0					
ANR	669919	Callee	r_anal_op_fini		669408	0					
ANR	669920	Identifier	r_anal_op_fini		669408	0					
ANR	669921	ArgumentList	& op		669408	1					
ANR	669922	Argument	& op		669408	0					
ANR	669923	UnaryOperationExpression	& op		669408	0					
ANR	669924	UnaryOperator	&		669408	0					
ANR	669925	Identifier	op		669408	1					
ANR	669926	ContinueStatement	continue ;	3711:6:114372:114380	669408	1	True				
ANR	669927	SwitchStatement	switch ( op . type )		669408	2					
ANR	669928	Condition	op . type	3714:12:114407:114413	669408	0	True				
ANR	669929	MemberAccess	op . type		669408	0					
ANR	669930	Identifier	op		669408	0					
ANR	669931	Identifier	type		669408	1					
ANR	669932	CompoundStatement		86:21:2207:2207	669408	1					
ANR	669933	Label	case R_ANAL_OP_TYPE_JMP :	3715:4:114422:114445	669408	0	True				
ANR	669934	Identifier	R_ANAL_OP_TYPE_JMP		669408	0					
ANR	669935	Label	case R_ANAL_OP_TYPE_CJMP :	3716:4:114451:114475	669408	1	True				
ANR	669936	Identifier	R_ANAL_OP_TYPE_CJMP		669408	0					
ANR	669937	Label	case R_ANAL_OP_TYPE_CALL :	3717:4:114481:114505	669408	2	True				
ANR	669938	Identifier	R_ANAL_OP_TYPE_CALL		669408	0					
ANR	669939	Label	case R_ANAL_OP_TYPE_CCALL :	3718:4:114511:114536	669408	3	True				
ANR	669940	Identifier	R_ANAL_OP_TYPE_CCALL		669408	0					
ANR	669941	IfStatement	"if ( op . jump != UT64_MAX && core_anal_followptr ( core , 'C' , at + i , op . jump , ref , true , 0 ) )"		669408	4					
ANR	669942	Condition	"op . jump != UT64_MAX && core_anal_followptr ( core , 'C' , at + i , op . jump , ref , true , 0 )"	3719:9:114547:114637	669408	0	True				
ANR	669943	AndExpression	"op . jump != UT64_MAX && core_anal_followptr ( core , 'C' , at + i , op . jump , ref , true , 0 )"		669408	0		&&			
ANR	669944	EqualityExpression	op . jump != UT64_MAX		669408	0		!=			
ANR	669945	MemberAccess	op . jump		669408	0					
ANR	669946	Identifier	op		669408	0					
ANR	669947	Identifier	jump		669408	1					
ANR	669948	Identifier	UT64_MAX		669408	1					
ANR	669949	CallExpression	"core_anal_followptr ( core , 'C' , at + i , op . jump , ref , true , 0 )"		669408	1					
ANR	669950	Callee	core_anal_followptr		669408	0					
ANR	669951	Identifier	core_anal_followptr		669408	0					
ANR	669952	ArgumentList	core		669408	1					
ANR	669953	Argument	core		669408	0					
ANR	669954	Identifier	core		669408	0					
ANR	669955	Argument	'C'		669408	1					
ANR	669956	PrimaryExpression	'C'		669408	0					
ANR	669957	Argument	at + i		669408	2					
ANR	669958	AdditiveExpression	at + i		669408	0		+			
ANR	669959	Identifier	at		669408	0					
ANR	669960	Identifier	i		669408	1					
ANR	669961	Argument	op . jump		669408	3					
ANR	669962	MemberAccess	op . jump		669408	0					
ANR	669963	Identifier	op		669408	0					
ANR	669964	Identifier	jump		669408	1					
ANR	669965	Argument	ref		669408	4					
ANR	669966	Identifier	ref		669408	0					
ANR	669967	Argument	true		669408	5					
ANR	669968	Identifier	true		669408	0					
ANR	669969	Argument	0		669408	6					
ANR	669970	PrimaryExpression	0		669408	0					
ANR	669971	CompoundStatement		92:70:2431:2431	669408	1					
ANR	669972	ExpressionStatement	count ++	3721:6:114648:114656	669408	0	True				
ANR	669973	PostIncDecOperationExpression	count ++		669408	0					
ANR	669974	Identifier	count		669408	0					
ANR	669975	IncDec	++		669408	1					
ANR	669976	BreakStatement	break ;	3723:5:114670:114675	669408	5	True				
ANR	669977	Label	case R_ANAL_OP_TYPE_UCJMP :	3724:4:114681:114706	669408	6	True				
ANR	669978	Identifier	R_ANAL_OP_TYPE_UCJMP		669408	0					
ANR	669979	Label	case R_ANAL_OP_TYPE_UJMP :	3725:4:114712:114736	669408	7	True				
ANR	669980	Identifier	R_ANAL_OP_TYPE_UJMP		669408	0					
ANR	669981	Label	case R_ANAL_OP_TYPE_IJMP :	3726:4:114742:114766	669408	8	True				
ANR	669982	Identifier	R_ANAL_OP_TYPE_IJMP		669408	0					
ANR	669983	Label	case R_ANAL_OP_TYPE_RJMP :	3727:4:114772:114796	669408	9	True				
ANR	669984	Identifier	R_ANAL_OP_TYPE_RJMP		669408	0					
ANR	669985	Label	case R_ANAL_OP_TYPE_IRJMP :	3728:4:114802:114827	669408	10	True				
ANR	669986	Identifier	R_ANAL_OP_TYPE_IRJMP		669408	0					
ANR	669987	Label	case R_ANAL_OP_TYPE_MJMP :	3729:4:114833:114857	669408	11	True				
ANR	669988	Identifier	R_ANAL_OP_TYPE_MJMP		669408	0					
ANR	669989	IfStatement	"if ( op . ptr != UT64_MAX && core_anal_followptr ( core , 'c' , at + i , op . ptr , ref , true , 1 ) )"		669408	12					
ANR	669990	Condition	"op . ptr != UT64_MAX && core_anal_followptr ( core , 'c' , at + i , op . ptr , ref , true , 1 )"	3730:9:114868:114956	669408	0	True				
ANR	669991	AndExpression	"op . ptr != UT64_MAX && core_anal_followptr ( core , 'c' , at + i , op . ptr , ref , true , 1 )"		669408	0		&&			
ANR	669992	EqualityExpression	op . ptr != UT64_MAX		669408	0		!=			
ANR	669993	MemberAccess	op . ptr		669408	0					
ANR	669994	Identifier	op		669408	0					
ANR	669995	Identifier	ptr		669408	1					
ANR	669996	Identifier	UT64_MAX		669408	1					
ANR	669997	CallExpression	"core_anal_followptr ( core , 'c' , at + i , op . ptr , ref , true , 1 )"		669408	1					
ANR	669998	Callee	core_anal_followptr		669408	0					
ANR	669999	Identifier	core_anal_followptr		669408	0					
ANR	670000	ArgumentList	core		669408	1					
ANR	670001	Argument	core		669408	0					
ANR	670002	Identifier	core		669408	0					
ANR	670003	Argument	'c'		669408	1					
ANR	670004	PrimaryExpression	'c'		669408	0					
ANR	670005	Argument	at + i		669408	2					
ANR	670006	AdditiveExpression	at + i		669408	0		+			
ANR	670007	Identifier	at		669408	0					
ANR	670008	Identifier	i		669408	1					
ANR	670009	Argument	op . ptr		669408	3					
ANR	670010	MemberAccess	op . ptr		669408	0					
ANR	670011	Identifier	op		669408	0					
ANR	670012	Identifier	ptr		669408	1					
ANR	670013	Argument	ref		669408	4					
ANR	670014	Identifier	ref		669408	0					
ANR	670015	Argument	true		669408	5					
ANR	670016	Identifier	true		669408	0					
ANR	670017	Argument	1		669408	6					
ANR	670018	PrimaryExpression	1		669408	0					
ANR	670019	CompoundStatement		103:69:2750:2750	669408	1					
ANR	670020	ExpressionStatement	count ++	3732:6:114967:114975	669408	0	True				
ANR	670021	PostIncDecOperationExpression	count ++		669408	0					
ANR	670022	Identifier	count		669408	0					
ANR	670023	IncDec	++		669408	1					
ANR	670024	BreakStatement	break ;	3734:5:114989:114994	669408	13	True				
ANR	670025	Label	case R_ANAL_OP_TYPE_UCALL :	3735:4:115000:115025	669408	14	True				
ANR	670026	Identifier	R_ANAL_OP_TYPE_UCALL		669408	0					
ANR	670027	Label	case R_ANAL_OP_TYPE_ICALL :	3736:4:115031:115056	669408	15	True				
ANR	670028	Identifier	R_ANAL_OP_TYPE_ICALL		669408	0					
ANR	670029	Label	case R_ANAL_OP_TYPE_RCALL :	3737:4:115062:115087	669408	16	True				
ANR	670030	Identifier	R_ANAL_OP_TYPE_RCALL		669408	0					
ANR	670031	Label	case R_ANAL_OP_TYPE_IRCALL :	3738:4:115093:115119	669408	17	True				
ANR	670032	Identifier	R_ANAL_OP_TYPE_IRCALL		669408	0					
ANR	670033	Label	case R_ANAL_OP_TYPE_UCCALL :	3739:4:115125:115151	669408	18	True				
ANR	670034	Identifier	R_ANAL_OP_TYPE_UCCALL		669408	0					
ANR	670035	IfStatement	"if ( op . ptr != UT64_MAX && core_anal_followptr ( core , 'C' , at + i , op . ptr , ref , true , 1 ) )"		669408	19					
ANR	670036	Condition	"op . ptr != UT64_MAX && core_anal_followptr ( core , 'C' , at + i , op . ptr , ref , true , 1 )"	3740:9:115162:115250	669408	0	True				
ANR	670037	AndExpression	"op . ptr != UT64_MAX && core_anal_followptr ( core , 'C' , at + i , op . ptr , ref , true , 1 )"		669408	0		&&			
ANR	670038	EqualityExpression	op . ptr != UT64_MAX		669408	0		!=			
ANR	670039	MemberAccess	op . ptr		669408	0					
ANR	670040	Identifier	op		669408	0					
ANR	670041	Identifier	ptr		669408	1					
ANR	670042	Identifier	UT64_MAX		669408	1					
ANR	670043	CallExpression	"core_anal_followptr ( core , 'C' , at + i , op . ptr , ref , true , 1 )"		669408	1					
ANR	670044	Callee	core_anal_followptr		669408	0					
ANR	670045	Identifier	core_anal_followptr		669408	0					
ANR	670046	ArgumentList	core		669408	1					
ANR	670047	Argument	core		669408	0					
ANR	670048	Identifier	core		669408	0					
ANR	670049	Argument	'C'		669408	1					
ANR	670050	PrimaryExpression	'C'		669408	0					
ANR	670051	Argument	at + i		669408	2					
ANR	670052	AdditiveExpression	at + i		669408	0		+			
ANR	670053	Identifier	at		669408	0					
ANR	670054	Identifier	i		669408	1					
ANR	670055	Argument	op . ptr		669408	3					
ANR	670056	MemberAccess	op . ptr		669408	0					
ANR	670057	Identifier	op		669408	0					
ANR	670058	Identifier	ptr		669408	1					
ANR	670059	Argument	ref		669408	4					
ANR	670060	Identifier	ref		669408	0					
ANR	670061	Argument	true		669408	5					
ANR	670062	Identifier	true		669408	0					
ANR	670063	Argument	1		669408	6					
ANR	670064	PrimaryExpression	1		669408	0					
ANR	670065	CompoundStatement		113:69:3044:3044	669408	1					
ANR	670066	ExpressionStatement	count ++	3742:6:115261:115269	669408	0	True				
ANR	670067	PostIncDecOperationExpression	count ++		669408	0					
ANR	670068	Identifier	count		669408	0					
ANR	670069	IncDec	++		669408	1					
ANR	670070	BreakStatement	break ;	3744:5:115283:115288	669408	20	True				
ANR	670071	Label	default :	3745:4:115294:115301	669408	21	True				
ANR	670072	Identifier	default		669408	0					
ANR	670073	CompoundStatement		118:5:3099:3099	669408	22					
ANR	670074	IfStatement	"if ( ! r_anal_op ( core -> anal , & op , at + i , buf + i , core -> blocksize - i , R_ANAL_OP_MASK_BASIC ) )"		669408	0					
ANR	670075	Condition	"! r_anal_op ( core -> anal , & op , at + i , buf + i , core -> blocksize - i , R_ANAL_OP_MASK_BASIC )"	3747:10:115320:115407	669408	0	True				
ANR	670076	UnaryOperationExpression	"! r_anal_op ( core -> anal , & op , at + i , buf + i , core -> blocksize - i , R_ANAL_OP_MASK_BASIC )"		669408	0					
ANR	670077	UnaryOperator	!		669408	0					
ANR	670078	CallExpression	"r_anal_op ( core -> anal , & op , at + i , buf + i , core -> blocksize - i , R_ANAL_OP_MASK_BASIC )"		669408	1					
ANR	670079	Callee	r_anal_op		669408	0					
ANR	670080	Identifier	r_anal_op		669408	0					
ANR	670081	ArgumentList	core -> anal		669408	1					
ANR	670082	Argument	core -> anal		669408	0					
ANR	670083	PtrMemberAccess	core -> anal		669408	0					
ANR	670084	Identifier	core		669408	0					
ANR	670085	Identifier	anal		669408	1					
ANR	670086	Argument	& op		669408	1					
ANR	670087	UnaryOperationExpression	& op		669408	0					
ANR	670088	UnaryOperator	&		669408	0					
ANR	670089	Identifier	op		669408	1					
ANR	670090	Argument	at + i		669408	2					
ANR	670091	AdditiveExpression	at + i		669408	0		+			
ANR	670092	Identifier	at		669408	0					
ANR	670093	Identifier	i		669408	1					
ANR	670094	Argument	buf + i		669408	3					
ANR	670095	AdditiveExpression	buf + i		669408	0		+			
ANR	670096	Identifier	buf		669408	0					
ANR	670097	Identifier	i		669408	1					
ANR	670098	Argument	core -> blocksize - i		669408	4					
ANR	670099	AdditiveExpression	core -> blocksize - i		669408	0		-			
ANR	670100	PtrMemberAccess	core -> blocksize		669408	0					
ANR	670101	Identifier	core		669408	0					
ANR	670102	Identifier	blocksize		669408	1					
ANR	670103	Identifier	i		669408	1					
ANR	670104	Argument	R_ANAL_OP_MASK_BASIC		669408	5					
ANR	670105	Identifier	R_ANAL_OP_MASK_BASIC		669408	0					
ANR	670106	CompoundStatement		119:100:3201:3201	669408	1					
ANR	670107	ExpressionStatement	r_anal_op_fini ( & op )	3748:7:115419:115439	669408	0	True				
ANR	670108	CallExpression	r_anal_op_fini ( & op )		669408	0					
ANR	670109	Callee	r_anal_op_fini		669408	0					
ANR	670110	Identifier	r_anal_op_fini		669408	0					
ANR	670111	ArgumentList	& op		669408	1					
ANR	670112	Argument	& op		669408	0					
ANR	670113	UnaryOperationExpression	& op		669408	0					
ANR	670114	UnaryOperator	&		669408	0					
ANR	670115	Identifier	op		669408	1					
ANR	670116	ContinueStatement	continue ;	3749:7:115448:115456	669408	1	True				
ANR	670117	IfStatement	"if ( op . ptr != UT64_MAX && core_anal_followptr ( core , 'd' , at + i , op . ptr , ref , false , ptrdepth ) )"		669408	23					
ANR	670118	Condition	"op . ptr != UT64_MAX && core_anal_followptr ( core , 'd' , at + i , op . ptr , ref , false , ptrdepth )"	3752:9:115482:115578	669408	0	True				
ANR	670119	AndExpression	"op . ptr != UT64_MAX && core_anal_followptr ( core , 'd' , at + i , op . ptr , ref , false , ptrdepth )"		669408	0		&&			
ANR	670120	EqualityExpression	op . ptr != UT64_MAX		669408	0		!=			
ANR	670121	MemberAccess	op . ptr		669408	0					
ANR	670122	Identifier	op		669408	0					
ANR	670123	Identifier	ptr		669408	1					
ANR	670124	Identifier	UT64_MAX		669408	1					
ANR	670125	CallExpression	"core_anal_followptr ( core , 'd' , at + i , op . ptr , ref , false , ptrdepth )"		669408	1					
ANR	670126	Callee	core_anal_followptr		669408	0					
ANR	670127	Identifier	core_anal_followptr		669408	0					
ANR	670128	ArgumentList	core		669408	1					
ANR	670129	Argument	core		669408	0					
ANR	670130	Identifier	core		669408	0					
ANR	670131	Argument	'd'		669408	1					
ANR	670132	PrimaryExpression	'd'		669408	0					
ANR	670133	Argument	at + i		669408	2					
ANR	670134	AdditiveExpression	at + i		669408	0		+			
ANR	670135	Identifier	at		669408	0					
ANR	670136	Identifier	i		669408	1					
ANR	670137	Argument	op . ptr		669408	3					
ANR	670138	MemberAccess	op . ptr		669408	0					
ANR	670139	Identifier	op		669408	0					
ANR	670140	Identifier	ptr		669408	1					
ANR	670141	Argument	ref		669408	4					
ANR	670142	Identifier	ref		669408	0					
ANR	670143	Argument	false		669408	5					
ANR	670144	Identifier	false		669408	0					
ANR	670145	Argument	ptrdepth		669408	6					
ANR	670146	Identifier	ptrdepth		669408	0					
ANR	670147	CompoundStatement		125:77:3372:3372	669408	1					
ANR	670148	ExpressionStatement	count ++	3754:6:115589:115597	669408	0	True				
ANR	670149	PostIncDecOperationExpression	count ++		669408	0					
ANR	670150	Identifier	count		669408	0					
ANR	670151	IncDec	++		669408	1					
ANR	670152	BreakStatement	break ;	3756:5:115611:115616	669408	24	True				
ANR	670153	IfStatement	if ( op . size < 1 )		669408	3					
ANR	670154	Condition	op . size < 1	3758:8:115632:115642	669408	0	True				
ANR	670155	RelationalExpression	op . size < 1		669408	0		<			
ANR	670156	MemberAccess	op . size		669408	0					
ANR	670157	Identifier	op		669408	0					
ANR	670158	Identifier	size		669408	1					
ANR	670159	PrimaryExpression	1		669408	1					
ANR	670160	CompoundStatement		130:21:3436:3436	669408	1					
ANR	670161	ExpressionStatement	op . size = 1	3759:5:115652:115663	669408	0	True				
ANR	670162	AssignmentExpression	op . size = 1		669408	0		=			
ANR	670163	MemberAccess	op . size		669408	0					
ANR	670164	Identifier	op		669408	0					
ANR	670165	Identifier	size		669408	1					
ANR	670166	PrimaryExpression	1		669408	1					
ANR	670167	ExpressionStatement	i += op . size - 1	3761:4:115675:115691	669408	4	True				
ANR	670168	AssignmentExpression	i += op . size - 1		669408	0		+=			
ANR	670169	Identifier	i		669408	0					
ANR	670170	AdditiveExpression	op . size - 1		669408	1		-			
ANR	670171	MemberAccess	op . size		669408	0					
ANR	670172	Identifier	op		669408	0					
ANR	670173	Identifier	size		669408	1					
ANR	670174	PrimaryExpression	1		669408	1					
ANR	670175	ExpressionStatement	r_anal_op_fini ( & op )	3762:4:115697:115717	669408	5	True				
ANR	670176	CallExpression	r_anal_op_fini ( & op )		669408	0					
ANR	670177	Callee	r_anal_op_fini		669408	0					
ANR	670178	Identifier	r_anal_op_fini		669408	0					
ANR	670179	ArgumentList	& op		669408	1					
ANR	670180	Argument	& op		669408	0					
ANR	670181	UnaryOperationExpression	& op		669408	0					
ANR	670182	UnaryOperator	&		669408	0					
ANR	670183	Identifier	op		669408	1					
ANR	670184	IfStatement	if ( bckwrds )		669408	16					
ANR	670185	Condition	bckwrds	3764:7:115731:115737	669408	0	True				
ANR	670186	Identifier	bckwrds		669408	0					
ANR	670187	CompoundStatement		136:16:3531:3531	669408	1					
ANR	670188	IfStatement	if ( ! do_bckwrd_srch )		669408	0					
ANR	670189	Condition	! do_bckwrd_srch	3765:8:115750:115764	669408	0	True				
ANR	670190	UnaryOperationExpression	! do_bckwrd_srch		669408	0					
ANR	670191	UnaryOperator	!		669408	0					
ANR	670192	Identifier	do_bckwrd_srch		669408	1					
ANR	670193	CompoundStatement		137:25:3558:3558	669408	1					
ANR	670194	BreakStatement	break ;	3766:5:115774:115779	669408	0	True				
ANR	670195	IfStatement	if ( at > from + core -> blocksize - OPSZ )		669408	1					
ANR	670196	Condition	at > from + core -> blocksize - OPSZ	3768:8:115795:115828	669408	0	True				
ANR	670197	RelationalExpression	at > from + core -> blocksize - OPSZ		669408	0		>			
ANR	670198	Identifier	at		669408	0					
ANR	670199	AdditiveExpression	from + core -> blocksize - OPSZ		669408	1		+			
ANR	670200	Identifier	from		669408	0					
ANR	670201	AdditiveExpression	core -> blocksize - OPSZ		669408	1		-			
ANR	670202	PtrMemberAccess	core -> blocksize		669408	0					
ANR	670203	Identifier	core		669408	0					
ANR	670204	Identifier	blocksize		669408	1					
ANR	670205	Identifier	OPSZ		669408	1					
ANR	670206	CompoundStatement		140:44:3622:3622	669408	1					
ANR	670207	ExpressionStatement	at -= core -> blocksize	3769:5:115838:115859	669408	0	True				
ANR	670208	AssignmentExpression	at -= core -> blocksize		669408	0		-=			
ANR	670209	Identifier	at		669408	0					
ANR	670210	PtrMemberAccess	core -> blocksize		669408	1					
ANR	670211	Identifier	core		669408	0					
ANR	670212	Identifier	blocksize		669408	1					
ANR	670213	ElseStatement	else		669408	0					
ANR	670214	CompoundStatement		142:11:3663:3663	669408	0					
ANR	670215	ExpressionStatement	do_bckwrd_srch = false	3771:5:115879:115901	669408	0	True				
ANR	670216	AssignmentExpression	do_bckwrd_srch = false		669408	0		=			
ANR	670217	Identifier	do_bckwrd_srch		669408	0					
ANR	670218	Identifier	false		669408	1					
ANR	670219	ExpressionStatement	at = from	3772:5:115908:115917	669408	1	True				
ANR	670220	AssignmentExpression	at = from		669408	0		=			
ANR	670221	Identifier	at		669408	0					
ANR	670222	Identifier	from		669408	1					
ANR	670223	ElseStatement	else		669408	0					
ANR	670224	CompoundStatement		146:10:3726:3726	669408	0					
ANR	670225	ExpressionStatement	at += core -> blocksize - OPSZ	3775:4:115941:115969	669408	0	True				
ANR	670226	AssignmentExpression	at += core -> blocksize - OPSZ		669408	0		+=			
ANR	670227	Identifier	at		669408	0					
ANR	670228	AdditiveExpression	core -> blocksize - OPSZ		669408	1		-			
ANR	670229	PtrMemberAccess	core -> blocksize		669408	0					
ANR	670230	Identifier	core		669408	0					
ANR	670231	Identifier	blocksize		669408	1					
ANR	670232	Identifier	OPSZ		669408	1					
ANR	670233	ElseStatement	else		669408	0					
ANR	670234	CompoundStatement		150:8:3779:3779	669408	0					
ANR	670235	ExpressionStatement	"eprintf ( ""error: block size too small\\n"" )"	3779:2:115992:116033	669408	0	True				
ANR	670236	CallExpression	"eprintf ( ""error: block size too small\\n"" )"		669408	0					
ANR	670237	Callee	eprintf		669408	0					
ANR	670238	Identifier	eprintf		669408	0					
ANR	670239	ArgumentList	"""error: block size too small\\n"""		669408	1					
ANR	670240	Argument	"""error: block size too small\\n"""		669408	0					
ANR	670241	PrimaryExpression	"""error: block size too small\\n"""		669408	0					
ANR	670242	ExpressionStatement	r_cons_break_pop ( )	3781:1:116039:116058	669408	14	True				
ANR	670243	CallExpression	r_cons_break_pop ( )		669408	0					
ANR	670244	Callee	r_cons_break_pop		669408	0					
ANR	670245	Identifier	r_cons_break_pop		669408	0					
ANR	670246	ArgumentList			669408	1					
ANR	670247	ExpressionStatement	free ( buf )	3782:1:116061:116071	669408	15	True				
ANR	670248	CallExpression	free ( buf )		669408	0					
ANR	670249	Callee	free		669408	0					
ANR	670250	Identifier	free		669408	0					
ANR	670251	ArgumentList	buf		669408	1					
ANR	670252	Argument	buf		669408	0					
ANR	670253	Identifier	buf		669408	0					
ANR	670254	ExpressionStatement	r_anal_op_fini ( & op )	3783:1:116074:116094	669408	16	True				
ANR	670255	CallExpression	r_anal_op_fini ( & op )		669408	0					
ANR	670256	Callee	r_anal_op_fini		669408	0					
ANR	670257	Identifier	r_anal_op_fini		669408	0					
ANR	670258	ArgumentList	& op		669408	1					
ANR	670259	Argument	& op		669408	0					
ANR	670260	UnaryOperationExpression	& op		669408	0					
ANR	670261	UnaryOperator	&		669408	0					
ANR	670262	Identifier	op		669408	1					
ANR	670263	ReturnStatement	return count ;	3784:1:116097:116109	669408	17	True				
ANR	670264	Identifier	count		669408	0					
ANR	670265	ReturnType	R_API int		669408	1					
ANR	670266	Identifier	r_core_anal_search		669408	2					
ANR	670267	ParameterList	"RCore * core , ut64 from , ut64 to , ut64 ref , int mode"		669408	3					
ANR	670268	Parameter	RCore * core	3629:29:112155:112165	669408	0	True				
ANR	670269	ParameterType	RCore *		669408	0					
ANR	670270	Identifier	core		669408	1					
ANR	670271	Parameter	ut64 from	3629:42:112168:112176	669408	1	True				
ANR	670272	ParameterType	ut64		669408	0					
ANR	670273	Identifier	from		669408	1					
ANR	670274	Parameter	ut64 to	3629:53:112179:112185	669408	2	True				
ANR	670275	ParameterType	ut64		669408	0					
ANR	670276	Identifier	to		669408	1					
ANR	670277	Parameter	ut64 ref	3629:62:112188:112195	669408	3	True				
ANR	670278	ParameterType	ut64		669408	0					
ANR	670279	Identifier	ref		669408	1					
ANR	670280	Parameter	int mode	3629:72:112198:112205	669408	4	True				
ANR	670281	ParameterType	int		669408	0					
ANR	670282	Identifier	mode		669408	1					
ANR	670283	CFGEntryNode	ENTRY		669408		True				
ANR	670284	CFGExitNode	EXIT		669408		True				
ANR	670285	Symbol	do_bckwrd_srch		669408						
ANR	670286	Symbol	& op		669408						
ANR	670287	Symbol	mode		669408						
ANR	670288	Symbol	* core -> assembler		669408						
ANR	670289	Symbol	strncmp		669408						
ANR	670290	Symbol	ref		669408						
ANR	670291	Symbol	op . jump		669408						
ANR	670292	Symbol	from		669408						
ANR	670293	Symbol	ptrdepth		669408						
ANR	670294	Symbol	core_anal_followptr		669408						
ANR	670295	Symbol	r_anal_op		669408						
ANR	670296	Symbol	core -> blocksize		669408						
ANR	670297	Symbol	NULL		669408						
ANR	670298	Symbol	count		669408						
ANR	670299	Symbol	* core -> search		669408						
ANR	670300	Symbol	core -> assembler -> cur -> name		669408						
ANR	670301	Symbol	OPSZ		669408						
ANR	670302	Symbol	core		669408						
ANR	670303	Symbol	* * * core		669408						
ANR	670304	Symbol	at		669408						
ANR	670305	Symbol	r_config_get_i		669408						
ANR	670306	Symbol	core -> file -> fd		669408						
ANR	670307	Symbol	true		669408						
ANR	670308	Symbol	op . size		669408						
ANR	670309	Symbol	* core -> assembler -> cur		669408						
ANR	670310	Symbol	* core		669408						
ANR	670311	Symbol	core -> assembler -> bits		669408						
ANR	670312	Symbol	core -> assembler		669408						
ANR	670313	Symbol	R_EMPTY		669408						
ANR	670314	Symbol	R_ANAL_OP_MASK_BASIC		669408						
ANR	670315	Symbol	core -> anal		669408						
ANR	670316	Symbol	r_cons_is_breaked		669408						
ANR	670317	Symbol	core -> io		669408						
ANR	670318	Symbol	op . direction		669408						
ANR	670319	Symbol	bckwrds		669408						
ANR	670320	Symbol	UT64_MAX		669408						
ANR	670321	Symbol	core -> search		669408						
ANR	670322	Symbol	* * core		669408						
ANR	670323	Symbol	mask		669408						
ANR	670324	Symbol	core -> config		669408						
ANR	670325	Symbol	malloc		669408						
ANR	670326	Symbol	op		669408						
ANR	670327	Symbol	core -> file		669408						
ANR	670328	Symbol	op . type		669408						
ANR	670329	Symbol	false		669408						
ANR	670330	Symbol	i		669408						
ANR	670331	Symbol	r_io_read_at		669408						
ANR	670332	Symbol	core -> search -> bckwrds		669408						
ANR	670333	Symbol	R2_ARCH_ARM64		669408						
ANR	670334	Symbol	* core -> file		669408						
ANR	670335	Symbol	buf		669408						
ANR	670336	Symbol	op . ptr		669408						
ANR	670337	Symbol	* * core -> assembler		669408						
ANR	670338	Symbol	core -> assembler -> cur		669408						
ANR	670339	Symbol	to		669408						
ANR	670340	Symbol	arch		669408						
ANR	670341	Function	found_xref	3787:0:116114:118335							
ANR	670342	FunctionDef	"found_xref (RCore * core , ut64 at , ut64 xref_to , RAnalRefType type , int count , int rad , int cfg_debug , bool cfg_anal_strings)"		670341	0					
ANR	670343	CompoundStatement		3787:136:116250:118335	670341	0					
ANR	670344	IfStatement	if ( type == R_ANAL_REF_TYPE_NULL )		670341	0					
ANR	670345	Condition	type == R_ANAL_REF_TYPE_NULL	3792:5:116497:116524	670341	0	True				
ANR	670346	EqualityExpression	type == R_ANAL_REF_TYPE_NULL		670341	0		==			
ANR	670347	Identifier	type		670341	0					
ANR	670348	Identifier	R_ANAL_REF_TYPE_NULL		670341	1					
ANR	670349	CompoundStatement		6:35:276:276	670341	1					
ANR	670350	ReturnStatement	return false ;	3793:2:116531:116543	670341	0	True				
ANR	670351	Identifier	false		670341	0					
ANR	670352	IfStatement	if ( cfg_debug )		670341	1					
ANR	670353	Condition	cfg_debug	3795:5:116553:116561	670341	0	True				
ANR	670354	Identifier	cfg_debug		670341	0					
ANR	670355	CompoundStatement		9:16:313:313	670341	1					
ANR	670356	IfStatement	"if ( ! r_debug_map_get ( core -> dbg , xref_to ) )"		670341	0					
ANR	670357	Condition	"! r_debug_map_get ( core -> dbg , xref_to )"	3796:6:116572:116608	670341	0	True				
ANR	670358	UnaryOperationExpression	"! r_debug_map_get ( core -> dbg , xref_to )"		670341	0					
ANR	670359	UnaryOperator	!		670341	0					
ANR	670360	CallExpression	"r_debug_map_get ( core -> dbg , xref_to )"		670341	1					
ANR	670361	Callee	r_debug_map_get		670341	0					
ANR	670362	Identifier	r_debug_map_get		670341	0					
ANR	670363	ArgumentList	core -> dbg		670341	1					
ANR	670364	Argument	core -> dbg		670341	0					
ANR	670365	PtrMemberAccess	core -> dbg		670341	0					
ANR	670366	Identifier	core		670341	0					
ANR	670367	Identifier	dbg		670341	1					
ANR	670368	Argument	xref_to		670341	1					
ANR	670369	Identifier	xref_to		670341	0					
ANR	670370	CompoundStatement		10:45:360:360	670341	1					
ANR	670371	ReturnStatement	return false ;	3797:3:116616:116628	670341	0	True				
ANR	670372	Identifier	false		670341	0					
ANR	670373	ElseStatement	else		670341	0					
ANR	670374	IfStatement	if ( core -> io -> va )		670341	0					
ANR	670375	Condition	core -> io -> va	3799:12:116646:116657	670341	0	True				
ANR	670376	PtrMemberAccess	core -> io -> va		670341	0					
ANR	670377	PtrMemberAccess	core -> io		670341	0					
ANR	670378	Identifier	core		670341	0					
ANR	670379	Identifier	io		670341	1					
ANR	670380	Identifier	va		670341	1					
ANR	670381	CompoundStatement		13:26:409:409	670341	1					
ANR	670382	IfStatement	"if ( ! r_io_is_valid_offset ( core -> io , xref_to , 0 ) )"		670341	0					
ANR	670383	Condition	"! r_io_is_valid_offset ( core -> io , xref_to , 0 )"	3800:6:116668:116711	670341	0	True				
ANR	670384	UnaryOperationExpression	"! r_io_is_valid_offset ( core -> io , xref_to , 0 )"		670341	0					
ANR	670385	UnaryOperator	!		670341	0					
ANR	670386	CallExpression	"r_io_is_valid_offset ( core -> io , xref_to , 0 )"		670341	1					
ANR	670387	Callee	r_io_is_valid_offset		670341	0					
ANR	670388	Identifier	r_io_is_valid_offset		670341	0					
ANR	670389	ArgumentList	core -> io		670341	1					
ANR	670390	Argument	core -> io		670341	0					
ANR	670391	PtrMemberAccess	core -> io		670341	0					
ANR	670392	Identifier	core		670341	0					
ANR	670393	Identifier	io		670341	1					
ANR	670394	Argument	xref_to		670341	1					
ANR	670395	Identifier	xref_to		670341	0					
ANR	670396	Argument	0		670341	2					
ANR	670397	PrimaryExpression	0		670341	0					
ANR	670398	CompoundStatement		14:52:463:463	670341	1					
ANR	670399	ReturnStatement	return false ;	3801:3:116719:116731	670341	0	True				
ANR	670400	Identifier	false		670341	0					
ANR	670401	IfStatement	if ( ! rad )		670341	2					
ANR	670402	Condition	! rad	3804:5:116745:116748	670341	0	True				
ANR	670403	UnaryOperationExpression	! rad		670341	0					
ANR	670404	UnaryOperator	!		670341	0					
ANR	670405	Identifier	rad		670341	1					
ANR	670406	CompoundStatement		18:11:500:500	670341	1					
ANR	670407	IfStatement	if ( cfg_anal_strings && type == R_ANAL_REF_TYPE_DATA )		670341	0					
ANR	670408	Condition	cfg_anal_strings && type == R_ANAL_REF_TYPE_DATA	3805:6:116759:116806	670341	0	True				
ANR	670409	AndExpression	cfg_anal_strings && type == R_ANAL_REF_TYPE_DATA		670341	0		&&			
ANR	670410	Identifier	cfg_anal_strings		670341	0					
ANR	670411	EqualityExpression	type == R_ANAL_REF_TYPE_DATA		670341	1		==			
ANR	670412	Identifier	type		670341	0					
ANR	670413	Identifier	R_ANAL_REF_TYPE_DATA		670341	1					
ANR	670414	CompoundStatement		21:3:579:632	670341	1					
ANR	670415	IdentifierDeclStatement	int len = 0 ;	3806:3:116814:116825	670341	0	True				
ANR	670416	IdentifierDecl	len = 0		670341	0					
ANR	670417	IdentifierDeclType	int		670341	0					
ANR	670418	Identifier	len		670341	1					
ANR	670419	AssignmentExpression	len = 0		670341	2		=			
ANR	670420	Identifier	len		670341	0					
ANR	670421	PrimaryExpression	0		670341	1					
ANR	670422	IdentifierDeclStatement	"char * str_string = is_string_at ( core , xref_to , & len ) ;"	3807:3:116830:116883	670341	1	True				
ANR	670423	IdentifierDecl	"* str_string = is_string_at ( core , xref_to , & len )"		670341	0					
ANR	670424	IdentifierDeclType	char *		670341	0					
ANR	670425	Identifier	str_string		670341	1					
ANR	670426	AssignmentExpression	"* str_string = is_string_at ( core , xref_to , & len )"		670341	2		=			
ANR	670427	Identifier	str_string		670341	0					
ANR	670428	CallExpression	"is_string_at ( core , xref_to , & len )"		670341	1					
ANR	670429	Callee	is_string_at		670341	0					
ANR	670430	Identifier	is_string_at		670341	0					
ANR	670431	ArgumentList	core		670341	1					
ANR	670432	Argument	core		670341	0					
ANR	670433	Identifier	core		670341	0					
ANR	670434	Argument	xref_to		670341	1					
ANR	670435	Identifier	xref_to		670341	0					
ANR	670436	Argument	& len		670341	2					
ANR	670437	UnaryOperationExpression	& len		670341	0					
ANR	670438	UnaryOperator	&		670341	0					
ANR	670439	Identifier	len		670341	1					
ANR	670440	IfStatement	if ( str_string )		670341	2					
ANR	670441	Condition	str_string	3808:7:116892:116901	670341	0	True				
ANR	670442	Identifier	str_string		670341	0					
ANR	670443	CompoundStatement		24:4:695:749	670341	1					
ANR	670444	ExpressionStatement	"r_name_filter ( str_string , - 1 )"	3809:4:116910:116940	670341	0	True				
ANR	670445	CallExpression	"r_name_filter ( str_string , - 1 )"		670341	0					
ANR	670446	Callee	r_name_filter		670341	0					
ANR	670447	Identifier	r_name_filter		670341	0					
ANR	670448	ArgumentList	str_string		670341	1					
ANR	670449	Argument	str_string		670341	0					
ANR	670450	Identifier	str_string		670341	0					
ANR	670451	Argument	- 1		670341	1					
ANR	670452	UnaryOperationExpression	- 1		670341	0					
ANR	670453	UnaryOperator	-		670341	0					
ANR	670454	PrimaryExpression	1		670341	1					
ANR	670455	IdentifierDeclStatement	"char * str_flagname = r_str_newf ( ""str.%s"" , str_string ) ;"	3810:4:116946:117000	670341	1	True				
ANR	670456	IdentifierDecl	"* str_flagname = r_str_newf ( ""str.%s"" , str_string )"		670341	0					
ANR	670457	IdentifierDeclType	char *		670341	0					
ANR	670458	Identifier	str_flagname		670341	1					
ANR	670459	AssignmentExpression	"* str_flagname = r_str_newf ( ""str.%s"" , str_string )"		670341	2		=			
ANR	670460	Identifier	str_flagname		670341	0					
ANR	670461	CallExpression	"r_str_newf ( ""str.%s"" , str_string )"		670341	1					
ANR	670462	Callee	r_str_newf		670341	0					
ANR	670463	Identifier	r_str_newf		670341	0					
ANR	670464	ArgumentList	"""str.%s"""		670341	1					
ANR	670465	Argument	"""str.%s"""		670341	0					
ANR	670466	PrimaryExpression	"""str.%s"""		670341	0					
ANR	670467	Argument	str_string		670341	1					
ANR	670468	Identifier	str_string		670341	0					
ANR	670469	ExpressionStatement	"r_flag_space_push ( core -> flags , R_FLAGS_FS_STRINGS )"	3811:4:117006:117057	670341	2	True				
ANR	670470	CallExpression	"r_flag_space_push ( core -> flags , R_FLAGS_FS_STRINGS )"		670341	0					
ANR	670471	Callee	r_flag_space_push		670341	0					
ANR	670472	Identifier	r_flag_space_push		670341	0					
ANR	670473	ArgumentList	core -> flags		670341	1					
ANR	670474	Argument	core -> flags		670341	0					
ANR	670475	PtrMemberAccess	core -> flags		670341	0					
ANR	670476	Identifier	core		670341	0					
ANR	670477	Identifier	flags		670341	1					
ANR	670478	Argument	R_FLAGS_FS_STRINGS		670341	1					
ANR	670479	Identifier	R_FLAGS_FS_STRINGS		670341	0					
ANR	670480	ExpressionStatement	"( void ) r_flag_set ( core -> flags , str_flagname , xref_to , 1 )"	3812:4:117063:117119	670341	3	True				
ANR	670481	CastExpression	"( void ) r_flag_set ( core -> flags , str_flagname , xref_to , 1 )"		670341	0					
ANR	670482	CastTarget	void		670341	0					
ANR	670483	CallExpression	"r_flag_set ( core -> flags , str_flagname , xref_to , 1 )"		670341	1					
ANR	670484	Callee	r_flag_set		670341	0					
ANR	670485	Identifier	r_flag_set		670341	0					
ANR	670486	ArgumentList	core -> flags		670341	1					
ANR	670487	Argument	core -> flags		670341	0					
ANR	670488	PtrMemberAccess	core -> flags		670341	0					
ANR	670489	Identifier	core		670341	0					
ANR	670490	Identifier	flags		670341	1					
ANR	670491	Argument	str_flagname		670341	1					
ANR	670492	Identifier	str_flagname		670341	0					
ANR	670493	Argument	xref_to		670341	2					
ANR	670494	Identifier	xref_to		670341	0					
ANR	670495	Argument	1		670341	3					
ANR	670496	PrimaryExpression	1		670341	0					
ANR	670497	ExpressionStatement	r_flag_space_pop ( core -> flags )	3813:4:117125:117155	670341	4	True				
ANR	670498	CallExpression	r_flag_space_pop ( core -> flags )		670341	0					
ANR	670499	Callee	r_flag_space_pop		670341	0					
ANR	670500	Identifier	r_flag_space_pop		670341	0					
ANR	670501	ArgumentList	core -> flags		670341	1					
ANR	670502	Argument	core -> flags		670341	0					
ANR	670503	PtrMemberAccess	core -> flags		670341	0					
ANR	670504	Identifier	core		670341	0					
ANR	670505	Identifier	flags		670341	1					
ANR	670506	ExpressionStatement	free ( str_flagname )	3814:4:117161:117180	670341	5	True				
ANR	670507	CallExpression	free ( str_flagname )		670341	0					
ANR	670508	Callee	free		670341	0					
ANR	670509	Identifier	free		670341	0					
ANR	670510	ArgumentList	str_flagname		670341	1					
ANR	670511	Argument	str_flagname		670341	0					
ANR	670512	Identifier	str_flagname		670341	0					
ANR	670513	IfStatement	if ( len > 0 )		670341	6					
ANR	670514	Condition	len > 0	3815:8:117190:117196	670341	0	True				
ANR	670515	RelationalExpression	len > 0		670341	0		>			
ANR	670516	Identifier	len		670341	0					
ANR	670517	PrimaryExpression	0		670341	1					
ANR	670518	CompoundStatement		29:17:948:948	670341	1					
ANR	670519	ExpressionStatement	"r_meta_add ( core -> anal , R_META_TYPE_STRING , xref_to , xref_to + len , ( const char * ) str_string )"	3816:5:117206:117306	670341	0	True				
ANR	670520	CallExpression	"r_meta_add ( core -> anal , R_META_TYPE_STRING , xref_to , xref_to + len , ( const char * ) str_string )"		670341	0					
ANR	670521	Callee	r_meta_add		670341	0					
ANR	670522	Identifier	r_meta_add		670341	0					
ANR	670523	ArgumentList	core -> anal		670341	1					
ANR	670524	Argument	core -> anal		670341	0					
ANR	670525	PtrMemberAccess	core -> anal		670341	0					
ANR	670526	Identifier	core		670341	0					
ANR	670527	Identifier	anal		670341	1					
ANR	670528	Argument	R_META_TYPE_STRING		670341	1					
ANR	670529	Identifier	R_META_TYPE_STRING		670341	0					
ANR	670530	Argument	xref_to		670341	2					
ANR	670531	Identifier	xref_to		670341	0					
ANR	670532	Argument	xref_to + len		670341	3					
ANR	670533	AdditiveExpression	xref_to + len		670341	0		+			
ANR	670534	Identifier	xref_to		670341	0					
ANR	670535	Identifier	len		670341	1					
ANR	670536	Argument	( const char * ) str_string		670341	4					
ANR	670537	CastExpression	( const char * ) str_string		670341	0					
ANR	670538	CastTarget	const char *		670341	0					
ANR	670539	Identifier	str_string		670341	1					
ANR	670540	ExpressionStatement	free ( str_string )	3819:4:117318:117335	670341	7	True				
ANR	670541	CallExpression	free ( str_string )		670341	0					
ANR	670542	Callee	free		670341	0					
ANR	670543	Identifier	free		670341	0					
ANR	670544	ArgumentList	str_string		670341	1					
ANR	670545	Argument	str_string		670341	0					
ANR	670546	Identifier	str_string		670341	0					
ANR	670547	IfStatement	if ( xref_to )		670341	1					
ANR	670548	Condition	xref_to	3823:6:117368:117374	670341	0	True				
ANR	670549	Identifier	xref_to		670341	0					
ANR	670550	CompoundStatement		37:15:1126:1126	670341	1					
ANR	670551	ExpressionStatement	"r_anal_xrefs_set ( core -> anal , at , xref_to , type )"	3824:3:117382:117430	670341	0	True				
ANR	670552	CallExpression	"r_anal_xrefs_set ( core -> anal , at , xref_to , type )"		670341	0					
ANR	670553	Callee	r_anal_xrefs_set		670341	0					
ANR	670554	Identifier	r_anal_xrefs_set		670341	0					
ANR	670555	ArgumentList	core -> anal		670341	1					
ANR	670556	Argument	core -> anal		670341	0					
ANR	670557	PtrMemberAccess	core -> anal		670341	0					
ANR	670558	Identifier	core		670341	0					
ANR	670559	Identifier	anal		670341	1					
ANR	670560	Argument	at		670341	1					
ANR	670561	Identifier	at		670341	0					
ANR	670562	Argument	xref_to		670341	2					
ANR	670563	Identifier	xref_to		670341	0					
ANR	670564	Argument	type		670341	3					
ANR	670565	Identifier	type		670341	0					
ANR	670566	ElseStatement	else		670341	0					
ANR	670567	IfStatement	if ( rad == 'j' )		670341	0					
ANR	670568	Condition	rad == 'j'	3826:12:117448:117457	670341	0	True				
ANR	670569	EqualityExpression	rad == 'j'		670341	0		==			
ANR	670570	Identifier	rad		670341	0					
ANR	670571	PrimaryExpression	'j'		670341	1					
ANR	670572	CompoundStatement		40:24:1209:1209	670341	1					
ANR	670573	IfStatement	if ( count > 0 )		670341	0					
ANR	670574	Condition	count > 0	3828:6:117485:117493	670341	0	True				
ANR	670575	RelationalExpression	count > 0		670341	0		>			
ANR	670576	Identifier	count		670341	0					
ANR	670577	PrimaryExpression	0		670341	1					
ANR	670578	CompoundStatement		42:17:1245:1245	670341	1					
ANR	670579	ExpressionStatement	"r_cons_printf ( "","" )"	3829:3:117501:117520	670341	0	True				
ANR	670580	CallExpression	"r_cons_printf ( "","" )"		670341	0					
ANR	670581	Callee	r_cons_printf		670341	0					
ANR	670582	Identifier	r_cons_printf		670341	0					
ANR	670583	ArgumentList	""","""		670341	1					
ANR	670584	Argument	""","""		670341	0					
ANR	670585	PrimaryExpression	""","""		670341	0					
ANR	670586	Statement	r_cons_printf	3831:2:117528:117540	670341	1	True				
ANR	670587	Statement	(	3831:16:117542:117542	670341	2	True				
ANR	670588	Statement	"""\\""0x%"""	3831:17:117543:117549	670341	3	True				
ANR	670589	Statement	PFMT64x	3831:24:117550:117556	670341	4	True				
ANR	670590	Statement	"""\\"":\\""0x%"""	3831:31:117557:117566	670341	5	True				
ANR	670591	Statement	PFMT64x	3831:41:117567:117573	670341	6	True				
ANR	670592	Statement	"""\\"""""	3831:48:117574:117577	670341	7	True				
ANR	670593	Statement	","	3831:52:117578:117578	670341	8	True				
ANR	670594	Statement	xref_to	3831:54:117580:117586	670341	9	True				
ANR	670595	Statement	","	3831:61:117587:117587	670341	10	True				
ANR	670596	Statement	at	3831:63:117589:117590	670341	11	True				
ANR	670597	Statement	)	3831:65:117591:117591	670341	12	True				
ANR	670598	ExpressionStatement		3831:66:117592:117592	670341	13	True				
ANR	670599	ElseStatement	else		670341	0					
ANR	670600	CompoundStatement		49:2:1409:1418	670341	0					
ANR	670601	IdentifierDeclStatement	int len = 0 ;	3833:2:117606:117617	670341	0	True				
ANR	670602	IdentifierDecl	len = 0		670341	0					
ANR	670603	IdentifierDeclType	int		670341	0					
ANR	670604	Identifier	len		670341	1					
ANR	670605	AssignmentExpression	len = 0		670341	2		=			
ANR	670606	Identifier	len		670341	0					
ANR	670607	PrimaryExpression	0		670341	1					
ANR	670608	IdentifierDeclStatement	char * cmd ;	3835:2:117660:117669	670341	1	True				
ANR	670609	IdentifierDecl	* cmd		670341	0					
ANR	670610	IdentifierDeclType	char *		670341	0					
ANR	670611	Identifier	cmd		670341	1					
ANR	670612	SwitchStatement	switch ( type )		670341	2					
ANR	670613	Condition	type	3836:10:117681:117684	670341	0	True				
ANR	670614	Identifier	type		670341	0					
ANR	670615	CompoundStatement		50:16:1436:1436	670341	1					
ANR	670616	Label	case R_ANAL_REF_TYPE_CODE :	3837:2:117691:117716	670341	0	True				
ANR	670617	Identifier	R_ANAL_REF_TYPE_CODE		670341	0					
ANR	670618	ExpressionStatement	"cmd = ""axc"""	3837:29:117718:117729	670341	1	True				
ANR	670619	AssignmentExpression	"cmd = ""axc"""		670341	0		=			
ANR	670620	Identifier	cmd		670341	0					
ANR	670621	PrimaryExpression	"""axc"""		670341	1					
ANR	670622	BreakStatement	break ;	3837:42:117731:117736	670341	2	True				
ANR	670623	Label	case R_ANAL_REF_TYPE_CALL :	3838:2:117740:117765	670341	3	True				
ANR	670624	Identifier	R_ANAL_REF_TYPE_CALL		670341	0					
ANR	670625	ExpressionStatement	"cmd = ""axC"""	3838:29:117767:117778	670341	4	True				
ANR	670626	AssignmentExpression	"cmd = ""axC"""		670341	0		=			
ANR	670627	Identifier	cmd		670341	0					
ANR	670628	PrimaryExpression	"""axC"""		670341	1					
ANR	670629	BreakStatement	break ;	3838:42:117780:117785	670341	5	True				
ANR	670630	Label	case R_ANAL_REF_TYPE_DATA :	3839:2:117789:117814	670341	6	True				
ANR	670631	Identifier	R_ANAL_REF_TYPE_DATA		670341	0					
ANR	670632	ExpressionStatement	"cmd = ""axd"""	3839:29:117816:117827	670341	7	True				
ANR	670633	AssignmentExpression	"cmd = ""axd"""		670341	0		=			
ANR	670634	Identifier	cmd		670341	0					
ANR	670635	PrimaryExpression	"""axd"""		670341	1					
ANR	670636	BreakStatement	break ;	3839:42:117829:117834	670341	8	True				
ANR	670637	Label	default :	3840:2:117838:117845	670341	9	True				
ANR	670638	Identifier	default		670341	0					
ANR	670639	ExpressionStatement	"cmd = ""ax"""	3840:11:117847:117857	670341	10	True				
ANR	670640	AssignmentExpression	"cmd = ""ax"""		670341	0		=			
ANR	670641	Identifier	cmd		670341	0					
ANR	670642	PrimaryExpression	"""ax"""		670341	1					
ANR	670643	BreakStatement	break ;	3840:23:117859:117864	670341	11	True				
ANR	670644	Statement	r_cons_printf	3842:2:117872:117884	670341	3	True				
ANR	670645	Statement	(	3842:16:117886:117886	670341	4	True				
ANR	670646	Statement	"""%s 0x%08"""	3842:17:117887:117896	670341	5	True				
ANR	670647	Statement	PFMT64x	3842:27:117897:117903	670341	6	True				
ANR	670648	Statement	""" 0x%08"""	3842:34:117904:117911	670341	7	True				
ANR	670649	Statement	PFMT64x	3842:42:117912:117918	670341	8	True				
ANR	670650	Statement	"""\\n"""	3842:49:117919:117922	670341	9	True				
ANR	670651	Statement	","	3842:53:117923:117923	670341	10	True				
ANR	670652	Statement	cmd	3842:55:117925:117927	670341	11	True				
ANR	670653	Statement	","	3842:58:117928:117928	670341	12	True				
ANR	670654	Statement	xref_to	3842:60:117930:117936	670341	13	True				
ANR	670655	Statement	","	3842:67:117937:117937	670341	14	True				
ANR	670656	Statement	at	3842:69:117939:117940	670341	15	True				
ANR	670657	Statement	)	3842:71:117941:117941	670341	16	True				
ANR	670658	ExpressionStatement		3842:72:117942:117942	670341	17	True				
ANR	670659	IfStatement	if ( cfg_anal_strings && type == R_ANAL_REF_TYPE_DATA )		670341	18					
ANR	670660	Condition	cfg_anal_strings && type == R_ANAL_REF_TYPE_DATA	3843:6:117950:117997	670341	0	True				
ANR	670661	AndExpression	cfg_anal_strings && type == R_ANAL_REF_TYPE_DATA		670341	0		&&			
ANR	670662	Identifier	cfg_anal_strings		670341	0					
ANR	670663	EqualityExpression	type == R_ANAL_REF_TYPE_DATA		670341	1		==			
ANR	670664	Identifier	type		670341	0					
ANR	670665	Identifier	R_ANAL_REF_TYPE_DATA		670341	1					
ANR	670666	CompoundStatement		58:3:1754:1809	670341	1					
ANR	670667	IdentifierDeclStatement	"char * str_flagname = is_string_at ( core , xref_to , & len ) ;"	3844:3:118005:118060	670341	0	True				
ANR	670668	IdentifierDecl	"* str_flagname = is_string_at ( core , xref_to , & len )"		670341	0					
ANR	670669	IdentifierDeclType	char *		670341	0					
ANR	670670	Identifier	str_flagname		670341	1					
ANR	670671	AssignmentExpression	"* str_flagname = is_string_at ( core , xref_to , & len )"		670341	2		=			
ANR	670672	Identifier	str_flagname		670341	0					
ANR	670673	CallExpression	"is_string_at ( core , xref_to , & len )"		670341	1					
ANR	670674	Callee	is_string_at		670341	0					
ANR	670675	Identifier	is_string_at		670341	0					
ANR	670676	ArgumentList	core		670341	1					
ANR	670677	Argument	core		670341	0					
ANR	670678	Identifier	core		670341	0					
ANR	670679	Argument	xref_to		670341	1					
ANR	670680	Identifier	xref_to		670341	0					
ANR	670681	Argument	& len		670341	2					
ANR	670682	UnaryOperationExpression	& len		670341	0					
ANR	670683	UnaryOperator	&		670341	0					
ANR	670684	Identifier	len		670341	1					
ANR	670685	IfStatement	if ( str_flagname )		670341	1					
ANR	670686	Condition	str_flagname	3845:7:118069:118080	670341	0	True				
ANR	670687	Identifier	str_flagname		670341	0					
ANR	670688	CompoundStatement		60:4:1838:1861	670341	1					
ANR	670689	IdentifierDeclStatement	ut64 str_addr = xref_to ;	3846:4:118089:118112	670341	0	True				
ANR	670690	IdentifierDecl	str_addr = xref_to		670341	0					
ANR	670691	IdentifierDeclType	ut64		670341	0					
ANR	670692	Identifier	str_addr		670341	1					
ANR	670693	AssignmentExpression	str_addr = xref_to		670341	2		=			
ANR	670694	Identifier	xref_to		670341	0					
ANR	670695	Identifier	xref_to		670341	1					
ANR	670696	ExpressionStatement	"r_name_filter ( str_flagname , - 1 )"	3847:4:118118:118150	670341	1	True				
ANR	670697	CallExpression	"r_name_filter ( str_flagname , - 1 )"		670341	0					
ANR	670698	Callee	r_name_filter		670341	0					
ANR	670699	Identifier	r_name_filter		670341	0					
ANR	670700	ArgumentList	str_flagname		670341	1					
ANR	670701	Argument	str_flagname		670341	0					
ANR	670702	Identifier	str_flagname		670341	0					
ANR	670703	Argument	- 1		670341	1					
ANR	670704	UnaryOperationExpression	- 1		670341	0					
ANR	670705	UnaryOperator	-		670341	0					
ANR	670706	PrimaryExpression	1		670341	1					
ANR	670707	Statement	r_cons_printf	3848:4:118156:118168	670341	2	True				
ANR	670708	Statement	(	3848:18:118170:118170	670341	3	True				
ANR	670709	Statement	"""f str.%s=0x%"""	3848:19:118171:118184	670341	4	True				
ANR	670710	Statement	PFMT64x	3848:33:118185:118191	670341	5	True				
ANR	670711	Statement	"""\\n"""	3848:40:118192:118195	670341	6	True				
ANR	670712	Statement	","	3848:44:118196:118196	670341	7	True				
ANR	670713	Statement	str_flagname	3848:46:118198:118209	670341	8	True				
ANR	670714	Statement	","	3848:58:118210:118210	670341	9	True				
ANR	670715	Statement	str_addr	3848:60:118212:118219	670341	10	True				
ANR	670716	Statement	)	3848:68:118220:118220	670341	11	True				
ANR	670717	ExpressionStatement		3848:69:118221:118221	670341	12	True				
ANR	670718	Statement	r_cons_printf	3849:4:118227:118239	670341	13	True				
ANR	670719	Statement	(	3849:18:118241:118241	670341	14	True				
ANR	670720	Statement	"""Cs %d @ 0x%"""	3849:19:118242:118254	670341	15	True				
ANR	670721	Statement	PFMT64x	3849:32:118255:118261	670341	16	True				
ANR	670722	Statement	"""\\n"""	3849:39:118262:118265	670341	17	True				
ANR	670723	Statement	","	3849:43:118266:118266	670341	18	True				
ANR	670724	Statement	len	3849:45:118268:118270	670341	19	True				
ANR	670725	Statement	","	3849:48:118271:118271	670341	20	True				
ANR	670726	Statement	str_addr	3849:50:118273:118280	670341	21	True				
ANR	670727	Statement	)	3849:58:118281:118281	670341	22	True				
ANR	670728	ExpressionStatement		3849:59:118282:118282	670341	23	True				
ANR	670729	ExpressionStatement	free ( str_flagname )	3850:4:118288:118307	670341	24	True				
ANR	670730	CallExpression	free ( str_flagname )		670341	0					
ANR	670731	Callee	free		670341	0					
ANR	670732	Identifier	free		670341	0					
ANR	670733	ArgumentList	str_flagname		670341	1					
ANR	670734	Argument	str_flagname		670341	0					
ANR	670735	Identifier	str_flagname		670341	0					
ANR	670736	ReturnStatement	return true ;	3854:1:118322:118333	670341	3	True				
ANR	670737	Identifier	true		670341	0					
ANR	670738	ReturnType	static bool		670341	1					
ANR	670739	Identifier	found_xref		670341	2					
ANR	670740	ParameterList	"RCore * core , ut64 at , ut64 xref_to , RAnalRefType type , int count , int rad , int cfg_debug , bool cfg_anal_strings"		670341	3					
ANR	670741	Parameter	RCore * core	3787:23:116137:116147	670341	0	True				
ANR	670742	ParameterType	RCore *		670341	0					
ANR	670743	Identifier	core		670341	1					
ANR	670744	Parameter	ut64 at	3787:36:116150:116156	670341	1	True				
ANR	670745	ParameterType	ut64		670341	0					
ANR	670746	Identifier	at		670341	1					
ANR	670747	Parameter	ut64 xref_to	3787:45:116159:116170	670341	2	True				
ANR	670748	ParameterType	ut64		670341	0					
ANR	670749	Identifier	xref_to		670341	1					
ANR	670750	Parameter	RAnalRefType type	3787:59:116173:116189	670341	3	True				
ANR	670751	ParameterType	RAnalRefType		670341	0					
ANR	670752	Identifier	type		670341	1					
ANR	670753	Parameter	int count	3787:78:116192:116200	670341	4	True				
ANR	670754	ParameterType	int		670341	0					
ANR	670755	Identifier	count		670341	1					
ANR	670756	Parameter	int rad	3787:89:116203:116209	670341	5	True				
ANR	670757	ParameterType	int		670341	0					
ANR	670758	Identifier	rad		670341	1					
ANR	670759	Parameter	int cfg_debug	3787:98:116212:116224	670341	6	True				
ANR	670760	ParameterType	int		670341	0					
ANR	670761	Identifier	cfg_debug		670341	1					
ANR	670762	Parameter	bool cfg_anal_strings	3787:113:116227:116247	670341	7	True				
ANR	670763	ParameterType	bool		670341	0					
ANR	670764	Identifier	cfg_anal_strings		670341	1					
ANR	670765	CFGEntryNode	ENTRY		670341		True				
ANR	670766	CFGExitNode	EXIT		670341		True				
ANR	670767	Symbol	str_flagname		670341						
ANR	670768	Symbol	cfg_anal_strings		670341						
ANR	670769	Symbol	* core		670341						
ANR	670770	Symbol	r_str_newf		670341						
ANR	670771	Symbol	R_FLAGS_FS_STRINGS		670341						
ANR	670772	Symbol	type		670341						
ANR	670773	Symbol	core -> anal		670341						
ANR	670774	Symbol	R_ANAL_REF_TYPE_NULL		670341						
ANR	670775	Symbol	rad		670341						
ANR	670776	Symbol	core -> io		670341						
ANR	670777	Symbol	len		670341						
ANR	670778	Symbol	str_string		670341						
ANR	670779	Symbol	str_addr		670341						
ANR	670780	Symbol	r_debug_map_get		670341						
ANR	670781	Symbol	is_string_at		670341						
ANR	670782	Symbol	* * core		670341						
ANR	670783	Symbol	r_io_is_valid_offset		670341						
ANR	670784	Symbol	cfg_debug		670341						
ANR	670785	Symbol	count		670341						
ANR	670786	Symbol	false		670341						
ANR	670787	Symbol	R_ANAL_REF_TYPE_DATA		670341						
ANR	670788	Symbol	core -> flags		670341						
ANR	670789	Symbol	xref_to		670341						
ANR	670790	Symbol	core -> io -> va		670341						
ANR	670791	Symbol	core		670341						
ANR	670792	Symbol	* core -> io		670341						
ANR	670793	Symbol	at		670341						
ANR	670794	Symbol	R_META_TYPE_STRING		670341						
ANR	670795	Symbol	true		670341						
ANR	670796	Symbol	cmd		670341						
ANR	670797	Symbol	& len		670341						
ANR	670798	Symbol	core -> dbg		670341						
ANR	670799	Function	r_core_anal_search_xrefs	3857:0:118338:121578							
ANR	670800	FunctionDef	"r_core_anal_search_xrefs (RCore * core , ut64 from , ut64 to , int rad)"		670799	0					
ANR	670801	CompoundStatement		3857:77:118415:121578	670799	0					
ANR	670802	IdentifierDeclStatement	"int cfg_debug = r_config_get_i ( core -> config , ""cfg.debug"" ) ;"	3858:1:118418:118476	670799	0	True				
ANR	670803	IdentifierDecl	"cfg_debug = r_config_get_i ( core -> config , ""cfg.debug"" )"		670799	0					
ANR	670804	IdentifierDeclType	int		670799	0					
ANR	670805	Identifier	cfg_debug		670799	1					
ANR	670806	AssignmentExpression	"cfg_debug = r_config_get_i ( core -> config , ""cfg.debug"" )"		670799	2		=			
ANR	670807	Identifier	cfg_debug		670799	0					
ANR	670808	CallExpression	"r_config_get_i ( core -> config , ""cfg.debug"" )"		670799	1					
ANR	670809	Callee	r_config_get_i		670799	0					
ANR	670810	Identifier	r_config_get_i		670799	0					
ANR	670811	ArgumentList	core -> config		670799	1					
ANR	670812	Argument	core -> config		670799	0					
ANR	670813	PtrMemberAccess	core -> config		670799	0					
ANR	670814	Identifier	core		670799	0					
ANR	670815	Identifier	config		670799	1					
ANR	670816	Argument	"""cfg.debug"""		670799	1					
ANR	670817	PrimaryExpression	"""cfg.debug"""		670799	0					
ANR	670818	IdentifierDeclStatement	"bool cfg_anal_strings = r_config_get_i ( core -> config , ""anal.strings"" ) ;"	3859:1:118479:118548	670799	1	True				
ANR	670819	IdentifierDecl	"cfg_anal_strings = r_config_get_i ( core -> config , ""anal.strings"" )"		670799	0					
ANR	670820	IdentifierDeclType	bool		670799	0					
ANR	670821	Identifier	cfg_anal_strings		670799	1					
ANR	670822	AssignmentExpression	"cfg_anal_strings = r_config_get_i ( core -> config , ""anal.strings"" )"		670799	2		=			
ANR	670823	Identifier	cfg_anal_strings		670799	0					
ANR	670824	CallExpression	"r_config_get_i ( core -> config , ""anal.strings"" )"		670799	1					
ANR	670825	Callee	r_config_get_i		670799	0					
ANR	670826	Identifier	r_config_get_i		670799	0					
ANR	670827	ArgumentList	core -> config		670799	1					
ANR	670828	Argument	core -> config		670799	0					
ANR	670829	PtrMemberAccess	core -> config		670799	0					
ANR	670830	Identifier	core		670799	0					
ANR	670831	Identifier	config		670799	1					
ANR	670832	Argument	"""anal.strings"""		670799	1					
ANR	670833	PrimaryExpression	"""anal.strings"""		670799	0					
ANR	670834	IdentifierDeclStatement	ut64 at ;	3860:1:118551:118558	670799	2	True				
ANR	670835	IdentifierDecl	at		670799	0					
ANR	670836	IdentifierDeclType	ut64		670799	0					
ANR	670837	Identifier	at		670799	1					
ANR	670838	IdentifierDeclStatement	int count = 0 ;	3861:1:118561:118574	670799	3	True				
ANR	670839	IdentifierDecl	count = 0		670799	0					
ANR	670840	IdentifierDeclType	int		670799	0					
ANR	670841	Identifier	count		670799	1					
ANR	670842	AssignmentExpression	count = 0		670799	2		=			
ANR	670843	Identifier	count		670799	0					
ANR	670844	PrimaryExpression	0		670799	1					
ANR	670845	IdentifierDeclStatement	const int bsz = 8096 ;	3862:1:118577:118597	670799	4	True				
ANR	670846	IdentifierDecl	bsz = 8096		670799	0					
ANR	670847	IdentifierDeclType	const int		670799	0					
ANR	670848	Identifier	bsz		670799	1					
ANR	670849	AssignmentExpression	bsz = 8096		670799	2		=			
ANR	670850	Identifier	bsz		670799	0					
ANR	670851	PrimaryExpression	8096		670799	1					
ANR	670852	IdentifierDeclStatement	RAnalOp op = { 0 } ;	3863:1:118600:118618	670799	5	True				
ANR	670853	IdentifierDecl	op = { 0 }		670799	0					
ANR	670854	IdentifierDeclType	RAnalOp		670799	0					
ANR	670855	Identifier	op		670799	1					
ANR	670856	AssignmentExpression	op = { 0 }		670799	2		=			
ANR	670857	Identifier	op		670799	0					
ANR	670858	InitializerList	0		670799	1					
ANR	670859	PrimaryExpression	0		670799	0					
ANR	670860	IfStatement	if ( from == to )		670799	6					
ANR	670861	Condition	from == to	3865:5:118626:118635	670799	0	True				
ANR	670862	EqualityExpression	from == to		670799	0		==			
ANR	670863	Identifier	from		670799	0					
ANR	670864	Identifier	to		670799	1					
ANR	670865	CompoundStatement		9:17:222:222	670799	1					
ANR	670866	ReturnStatement	return - 1 ;	3866:2:118642:118651	670799	0	True				
ANR	670867	UnaryOperationExpression	- 1		670799	0					
ANR	670868	UnaryOperator	-		670799	0					
ANR	670869	PrimaryExpression	1		670799	1					
ANR	670870	IfStatement	if ( from > to )		670799	7					
ANR	670871	Condition	from > to	3868:5:118661:118669	670799	0	True				
ANR	670872	RelationalExpression	from > to		670799	0		>			
ANR	670873	Identifier	from		670799	0					
ANR	670874	Identifier	to		670799	1					
ANR	670875	CompoundStatement		12:16:256:256	670799	1					
ANR	670876	Statement	eprintf	3869:2:118676:118682	670799	0	True				
ANR	670877	Statement	(	3869:10:118684:118684	670799	1	True				
ANR	670878	Statement	"""Invalid range (0x%"""	3869:11:118685:118704	670799	2	True				
ANR	670879	Statement	PFMT64x	3869:31:118705:118711	670799	3	True				
ANR	670880	Statement	""" >= 0x%"""	3870:2:118715:118723	670799	4	True				
ANR	670881	Statement	PFMT64x	3870:11:118724:118730	670799	5	True				
ANR	670882	Statement	""")\\n"""	3870:18:118731:118735	670799	6	True				
ANR	670883	Statement	","	3870:23:118736:118736	670799	7	True				
ANR	670884	Statement	from	3870:25:118738:118741	670799	8	True				
ANR	670885	Statement	","	3870:29:118742:118742	670799	9	True				
ANR	670886	Statement	to	3870:31:118744:118745	670799	10	True				
ANR	670887	Statement	)	3870:33:118746:118746	670799	11	True				
ANR	670888	ExpressionStatement		3870:34:118747:118747	670799	12	True				
ANR	670889	ReturnStatement	return - 1 ;	3871:2:118751:118760	670799	13	True				
ANR	670890	UnaryOperationExpression	- 1		670799	0					
ANR	670891	UnaryOperator	-		670799	0					
ANR	670892	PrimaryExpression	1		670799	1					
ANR	670893	IfStatement	if ( core -> blocksize <= OPSZ )		670799	8					
ANR	670894	Condition	core -> blocksize <= OPSZ	3874:5:118771:118793	670799	0	True				
ANR	670895	RelationalExpression	core -> blocksize <= OPSZ		670799	0		<=			
ANR	670896	PtrMemberAccess	core -> blocksize		670799	0					
ANR	670897	Identifier	core		670799	0					
ANR	670898	Identifier	blocksize		670799	1					
ANR	670899	Identifier	OPSZ		670799	1					
ANR	670900	CompoundStatement		18:30:380:380	670799	1					
ANR	670901	ExpressionStatement	"eprintf ( ""Error: block size too small\\n"" )"	3875:2:118800:118841	670799	0	True				
ANR	670902	CallExpression	"eprintf ( ""Error: block size too small\\n"" )"		670799	0					
ANR	670903	Callee	eprintf		670799	0					
ANR	670904	Identifier	eprintf		670799	0					
ANR	670905	ArgumentList	"""Error: block size too small\\n"""		670799	1					
ANR	670906	Argument	"""Error: block size too small\\n"""		670799	0					
ANR	670907	PrimaryExpression	"""Error: block size too small\\n"""		670799	0					
ANR	670908	ReturnStatement	return - 1 ;	3876:2:118845:118854	670799	1	True				
ANR	670909	UnaryOperationExpression	- 1		670799	0					
ANR	670910	UnaryOperator	-		670799	0					
ANR	670911	PrimaryExpression	1		670799	1					
ANR	670912	IdentifierDeclStatement	ut8 * buf = malloc ( bsz ) ;	3878:1:118860:118883	670799	9	True				
ANR	670913	IdentifierDecl	* buf = malloc ( bsz )		670799	0					
ANR	670914	IdentifierDeclType	ut8 *		670799	0					
ANR	670915	Identifier	buf		670799	1					
ANR	670916	AssignmentExpression	* buf = malloc ( bsz )		670799	2		=			
ANR	670917	Identifier	buf		670799	0					
ANR	670918	CallExpression	malloc ( bsz )		670799	1					
ANR	670919	Callee	malloc		670799	0					
ANR	670920	Identifier	malloc		670799	0					
ANR	670921	ArgumentList	bsz		670799	1					
ANR	670922	Argument	bsz		670799	0					
ANR	670923	Identifier	bsz		670799	0					
ANR	670924	IfStatement	if ( ! buf )		670799	10					
ANR	670925	Condition	! buf	3879:5:118890:118893	670799	0	True				
ANR	670926	UnaryOperationExpression	! buf		670799	0					
ANR	670927	UnaryOperator	!		670799	0					
ANR	670928	Identifier	buf		670799	1					
ANR	670929	CompoundStatement		23:11:480:480	670799	1					
ANR	670930	ExpressionStatement	"eprintf ( ""Error: cannot allocate a block\\n"" )"	3880:2:118900:118944	670799	0	True				
ANR	670931	CallExpression	"eprintf ( ""Error: cannot allocate a block\\n"" )"		670799	0					
ANR	670932	Callee	eprintf		670799	0					
ANR	670933	Identifier	eprintf		670799	0					
ANR	670934	ArgumentList	"""Error: cannot allocate a block\\n"""		670799	1					
ANR	670935	Argument	"""Error: cannot allocate a block\\n"""		670799	0					
ANR	670936	PrimaryExpression	"""Error: cannot allocate a block\\n"""		670799	0					
ANR	670937	ReturnStatement	return - 1 ;	3881:2:118948:118957	670799	1	True				
ANR	670938	UnaryOperationExpression	- 1		670799	0					
ANR	670939	UnaryOperator	-		670799	0					
ANR	670940	PrimaryExpression	1		670799	1					
ANR	670941	IdentifierDeclStatement	ut8 * block = malloc ( bsz ) ;	3883:1:118963:118988	670799	11	True				
ANR	670942	IdentifierDecl	* block = malloc ( bsz )		670799	0					
ANR	670943	IdentifierDeclType	ut8 *		670799	0					
ANR	670944	Identifier	block		670799	1					
ANR	670945	AssignmentExpression	* block = malloc ( bsz )		670799	2		=			
ANR	670946	Identifier	block		670799	0					
ANR	670947	CallExpression	malloc ( bsz )		670799	1					
ANR	670948	Callee	malloc		670799	0					
ANR	670949	Identifier	malloc		670799	0					
ANR	670950	ArgumentList	bsz		670799	1					
ANR	670951	Argument	bsz		670799	0					
ANR	670952	Identifier	bsz		670799	0					
ANR	670953	IfStatement	if ( ! block )		670799	12					
ANR	670954	Condition	! block	3884:5:118995:119000	670799	0	True				
ANR	670955	UnaryOperationExpression	! block		670799	0					
ANR	670956	UnaryOperator	!		670799	0					
ANR	670957	Identifier	block		670799	1					
ANR	670958	CompoundStatement		28:13:587:587	670799	1					
ANR	670959	ExpressionStatement	"eprintf ( ""Error: cannot allocate a temp block\\n"" )"	3885:2:119007:119056	670799	0	True				
ANR	670960	CallExpression	"eprintf ( ""Error: cannot allocate a temp block\\n"" )"		670799	0					
ANR	670961	Callee	eprintf		670799	0					
ANR	670962	Identifier	eprintf		670799	0					
ANR	670963	ArgumentList	"""Error: cannot allocate a temp block\\n"""		670799	1					
ANR	670964	Argument	"""Error: cannot allocate a temp block\\n"""		670799	0					
ANR	670965	PrimaryExpression	"""Error: cannot allocate a temp block\\n"""		670799	0					
ANR	670966	ExpressionStatement	free ( buf )	3886:2:119060:119070	670799	1	True				
ANR	670967	CallExpression	free ( buf )		670799	0					
ANR	670968	Callee	free		670799	0					
ANR	670969	Identifier	free		670799	0					
ANR	670970	ArgumentList	buf		670799	1					
ANR	670971	Argument	buf		670799	0					
ANR	670972	Identifier	buf		670799	0					
ANR	670973	ReturnStatement	return - 1 ;	3887:2:119074:119083	670799	2	True				
ANR	670974	UnaryOperationExpression	- 1		670799	0					
ANR	670975	UnaryOperator	-		670799	0					
ANR	670976	PrimaryExpression	1		670799	1					
ANR	670977	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	3889:1:119089:119119	670799	13	True				
ANR	670978	CallExpression	"r_cons_break_push ( NULL , NULL )"		670799	0					
ANR	670979	Callee	r_cons_break_push		670799	0					
ANR	670980	Identifier	r_cons_break_push		670799	0					
ANR	670981	ArgumentList	NULL		670799	1					
ANR	670982	Argument	NULL		670799	0					
ANR	670983	Identifier	NULL		670799	0					
ANR	670984	Argument	NULL		670799	1					
ANR	670985	Identifier	NULL		670799	0					
ANR	670986	ExpressionStatement	at = from	3890:1:119122:119131	670799	14	True				
ANR	670987	AssignmentExpression	at = from		670799	0		=			
ANR	670988	Identifier	at		670799	0					
ANR	670989	Identifier	from		670799	1					
ANR	670990	IdentifierDeclStatement	"st64 asm_var_submin = r_config_get_i ( core -> config , ""asm.var.submin"" ) ;"	3891:1:119134:119203	670799	15	True				
ANR	670991	IdentifierDecl	"asm_var_submin = r_config_get_i ( core -> config , ""asm.var.submin"" )"		670799	0					
ANR	670992	IdentifierDeclType	st64		670799	0					
ANR	670993	Identifier	asm_var_submin		670799	1					
ANR	670994	AssignmentExpression	"asm_var_submin = r_config_get_i ( core -> config , ""asm.var.submin"" )"		670799	2		=			
ANR	670995	Identifier	asm_var_submin		670799	0					
ANR	670996	CallExpression	"r_config_get_i ( core -> config , ""asm.var.submin"" )"		670799	1					
ANR	670997	Callee	r_config_get_i		670799	0					
ANR	670998	Identifier	r_config_get_i		670799	0					
ANR	670999	ArgumentList	core -> config		670799	1					
ANR	671000	Argument	core -> config		670799	0					
ANR	671001	PtrMemberAccess	core -> config		670799	0					
ANR	671002	Identifier	core		670799	0					
ANR	671003	Identifier	config		670799	1					
ANR	671004	Argument	"""asm.var.submin"""		670799	1					
ANR	671005	PrimaryExpression	"""asm.var.submin"""		670799	0					
ANR	671006	WhileStatement	while ( at < to && ! r_cons_is_breaked ( ) )		670799	16					
ANR	671007	Condition	at < to && ! r_cons_is_breaked ( )	3892:8:119213:119244	670799	0	True				
ANR	671008	AndExpression	at < to && ! r_cons_is_breaked ( )		670799	0		&&			
ANR	671009	RelationalExpression	at < to		670799	0		<			
ANR	671010	Identifier	at		670799	0					
ANR	671011	Identifier	to		670799	1					
ANR	671012	UnaryOperationExpression	! r_cons_is_breaked ( )		670799	1					
ANR	671013	UnaryOperator	!		670799	0					
ANR	671014	CallExpression	r_cons_is_breaked ( )		670799	1					
ANR	671015	Callee	r_cons_is_breaked		670799	0					
ANR	671016	Identifier	r_cons_is_breaked		670799	0					
ANR	671017	ArgumentList			670799	1					
ANR	671018	CompoundStatement		37:2:835:855	670799	1					
ANR	671019	IdentifierDeclStatement	"int i = 0 , ret = bsz ;"	3893:2:119251:119271	670799	0	True				
ANR	671020	IdentifierDecl	i = 0		670799	0					
ANR	671021	IdentifierDeclType	int		670799	0					
ANR	671022	Identifier	i		670799	1					
ANR	671023	AssignmentExpression	i = 0		670799	2		=			
ANR	671024	Identifier	i		670799	0					
ANR	671025	PrimaryExpression	0		670799	1					
ANR	671026	IdentifierDecl	ret = bsz		670799	1					
ANR	671027	IdentifierDeclType	int		670799	0					
ANR	671028	Identifier	ret		670799	1					
ANR	671029	AssignmentExpression	ret = bsz		670799	2		=			
ANR	671030	Identifier	bsz		670799	0					
ANR	671031	Identifier	bsz		670799	1					
ANR	671032	IfStatement	"if ( ! r_io_is_valid_offset ( core -> io , at , R_PERM_X ) )"		670799	1					
ANR	671033	Condition	"! r_io_is_valid_offset ( core -> io , at , R_PERM_X )"	3894:6:119279:119324	670799	0	True				
ANR	671034	UnaryOperationExpression	"! r_io_is_valid_offset ( core -> io , at , R_PERM_X )"		670799	0					
ANR	671035	UnaryOperator	!		670799	0					
ANR	671036	CallExpression	"r_io_is_valid_offset ( core -> io , at , R_PERM_X )"		670799	1					
ANR	671037	Callee	r_io_is_valid_offset		670799	0					
ANR	671038	Identifier	r_io_is_valid_offset		670799	0					
ANR	671039	ArgumentList	core -> io		670799	1					
ANR	671040	Argument	core -> io		670799	0					
ANR	671041	PtrMemberAccess	core -> io		670799	0					
ANR	671042	Identifier	core		670799	0					
ANR	671043	Identifier	io		670799	1					
ANR	671044	Argument	at		670799	1					
ANR	671045	Identifier	at		670799	0					
ANR	671046	Argument	R_PERM_X		670799	2					
ANR	671047	Identifier	R_PERM_X		670799	0					
ANR	671048	CompoundStatement		38:54:911:911	670799	1					
ANR	671049	BreakStatement	break ;	3895:3:119332:119337	670799	0	True				
ANR	671050	ExpressionStatement	"( void ) r_io_read_at ( core -> io , at , buf , bsz )"	3897:2:119345:119388	670799	2	True				
ANR	671051	CastExpression	"( void ) r_io_read_at ( core -> io , at , buf , bsz )"		670799	0					
ANR	671052	CastTarget	void		670799	0					
ANR	671053	CallExpression	"r_io_read_at ( core -> io , at , buf , bsz )"		670799	1					
ANR	671054	Callee	r_io_read_at		670799	0					
ANR	671055	Identifier	r_io_read_at		670799	0					
ANR	671056	ArgumentList	core -> io		670799	1					
ANR	671057	Argument	core -> io		670799	0					
ANR	671058	PtrMemberAccess	core -> io		670799	0					
ANR	671059	Identifier	core		670799	0					
ANR	671060	Identifier	io		670799	1					
ANR	671061	Argument	at		670799	1					
ANR	671062	Identifier	at		670799	0					
ANR	671063	Argument	buf		670799	2					
ANR	671064	Identifier	buf		670799	0					
ANR	671065	Argument	bsz		670799	3					
ANR	671066	Identifier	bsz		670799	0					
ANR	671067	ExpressionStatement	"memset ( block , - 1 , bsz )"	3898:2:119392:119415	670799	3	True				
ANR	671068	CallExpression	"memset ( block , - 1 , bsz )"		670799	0					
ANR	671069	Callee	memset		670799	0					
ANR	671070	Identifier	memset		670799	0					
ANR	671071	ArgumentList	block		670799	1					
ANR	671072	Argument	block		670799	0					
ANR	671073	Identifier	block		670799	0					
ANR	671074	Argument	- 1		670799	1					
ANR	671075	UnaryOperationExpression	- 1		670799	0					
ANR	671076	UnaryOperator	-		670799	0					
ANR	671077	PrimaryExpression	1		670799	1					
ANR	671078	Argument	bsz		670799	2					
ANR	671079	Identifier	bsz		670799	0					
ANR	671080	IfStatement	"if ( ! memcmp ( buf , block , bsz ) )"		670799	4					
ANR	671081	Condition	"! memcmp ( buf , block , bsz )"	3899:6:119423:119447	670799	0	True				
ANR	671082	UnaryOperationExpression	"! memcmp ( buf , block , bsz )"		670799	0					
ANR	671083	UnaryOperator	!		670799	0					
ANR	671084	CallExpression	"memcmp ( buf , block , bsz )"		670799	1					
ANR	671085	Callee	memcmp		670799	0					
ANR	671086	Identifier	memcmp		670799	0					
ANR	671087	ArgumentList	buf		670799	1					
ANR	671088	Argument	buf		670799	0					
ANR	671089	Identifier	buf		670799	0					
ANR	671090	Argument	block		670799	1					
ANR	671091	Identifier	block		670799	0					
ANR	671092	Argument	bsz		670799	2					
ANR	671093	Identifier	bsz		670799	0					
ANR	671094	CompoundStatement		43:33:1034:1034	670799	1					
ANR	671095	ExpressionStatement	at += ret	3901:3:119512:119521	670799	0	True				
ANR	671096	AssignmentExpression	at += ret		670799	0		+=			
ANR	671097	Identifier	at		670799	0					
ANR	671098	Identifier	ret		670799	1					
ANR	671099	ContinueStatement	continue ;	3902:3:119526:119534	670799	1	True				
ANR	671100	ExpressionStatement	"memset ( block , 0 , bsz )"	3904:2:119542:119564	670799	5	True				
ANR	671101	CallExpression	"memset ( block , 0 , bsz )"		670799	0					
ANR	671102	Callee	memset		670799	0					
ANR	671103	Identifier	memset		670799	0					
ANR	671104	ArgumentList	block		670799	1					
ANR	671105	Argument	block		670799	0					
ANR	671106	Identifier	block		670799	0					
ANR	671107	Argument	0		670799	1					
ANR	671108	PrimaryExpression	0		670799	0					
ANR	671109	Argument	bsz		670799	2					
ANR	671110	Identifier	bsz		670799	0					
ANR	671111	IfStatement	"if ( ! memcmp ( buf , block , bsz ) )"		670799	6					
ANR	671112	Condition	"! memcmp ( buf , block , bsz )"	3905:6:119572:119596	670799	0	True				
ANR	671113	UnaryOperationExpression	"! memcmp ( buf , block , bsz )"		670799	0					
ANR	671114	UnaryOperator	!		670799	0					
ANR	671115	CallExpression	"memcmp ( buf , block , bsz )"		670799	1					
ANR	671116	Callee	memcmp		670799	0					
ANR	671117	Identifier	memcmp		670799	0					
ANR	671118	ArgumentList	buf		670799	1					
ANR	671119	Argument	buf		670799	0					
ANR	671120	Identifier	buf		670799	0					
ANR	671121	Argument	block		670799	1					
ANR	671122	Identifier	block		670799	0					
ANR	671123	Argument	bsz		670799	2					
ANR	671124	Identifier	bsz		670799	0					
ANR	671125	CompoundStatement		49:33:1183:1183	670799	1					
ANR	671126	ExpressionStatement	at += ret	3907:3:119661:119670	670799	0	True				
ANR	671127	AssignmentExpression	at += ret		670799	0		+=			
ANR	671128	Identifier	at		670799	0					
ANR	671129	Identifier	ret		670799	1					
ANR	671130	ContinueStatement	continue ;	3908:3:119675:119683	670799	1	True				
ANR	671131	WhileStatement	while ( i < bsz && ! r_cons_is_breaked ( ) )		670799	7					
ANR	671132	Condition	i < bsz && ! r_cons_is_breaked ( )	3910:9:119698:119729	670799	0	True				
ANR	671133	AndExpression	i < bsz && ! r_cons_is_breaked ( )		670799	0		&&			
ANR	671134	RelationalExpression	i < bsz		670799	0		<			
ANR	671135	Identifier	i		670799	0					
ANR	671136	Identifier	bsz		670799	1					
ANR	671137	UnaryOperationExpression	! r_cons_is_breaked ( )		670799	1					
ANR	671138	UnaryOperator	!		670799	0					
ANR	671139	CallExpression	r_cons_is_breaked ( )		670799	1					
ANR	671140	Callee	r_cons_is_breaked		670799	0					
ANR	671141	Identifier	r_cons_is_breaked		670799	0					
ANR	671142	ArgumentList			670799	1					
ANR	671143	CompoundStatement		54:43:1316:1316	670799	1					
ANR	671144	ExpressionStatement	"ret = r_anal_op ( core -> anal , & op , at + i , buf + i , bsz - i , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_HINT )"	3911:3:119737:119840	670799	0	True				
ANR	671145	AssignmentExpression	"ret = r_anal_op ( core -> anal , & op , at + i , buf + i , bsz - i , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_HINT )"		670799	0		=			
ANR	671146	Identifier	ret		670799	0					
ANR	671147	CallExpression	"r_anal_op ( core -> anal , & op , at + i , buf + i , bsz - i , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_HINT )"		670799	1					
ANR	671148	Callee	r_anal_op		670799	0					
ANR	671149	Identifier	r_anal_op		670799	0					
ANR	671150	ArgumentList	core -> anal		670799	1					
ANR	671151	Argument	core -> anal		670799	0					
ANR	671152	PtrMemberAccess	core -> anal		670799	0					
ANR	671153	Identifier	core		670799	0					
ANR	671154	Identifier	anal		670799	1					
ANR	671155	Argument	& op		670799	1					
ANR	671156	UnaryOperationExpression	& op		670799	0					
ANR	671157	UnaryOperator	&		670799	0					
ANR	671158	Identifier	op		670799	1					
ANR	671159	Argument	at + i		670799	2					
ANR	671160	AdditiveExpression	at + i		670799	0		+			
ANR	671161	Identifier	at		670799	0					
ANR	671162	Identifier	i		670799	1					
ANR	671163	Argument	buf + i		670799	3					
ANR	671164	AdditiveExpression	buf + i		670799	0		+			
ANR	671165	Identifier	buf		670799	0					
ANR	671166	Identifier	i		670799	1					
ANR	671167	Argument	bsz - i		670799	4					
ANR	671168	AdditiveExpression	bsz - i		670799	0		-			
ANR	671169	Identifier	bsz		670799	0					
ANR	671170	Identifier	i		670799	1					
ANR	671171	Argument	R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_HINT		670799	5					
ANR	671172	InclusiveOrExpression	R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_HINT		670799	0		|			
ANR	671173	Identifier	R_ANAL_OP_MASK_BASIC		670799	0					
ANR	671174	Identifier	R_ANAL_OP_MASK_HINT		670799	1					
ANR	671175	ExpressionStatement	ret = ret > 0 ? ret : 1	3912:3:119845:119868	670799	1	True				
ANR	671176	AssignmentExpression	ret = ret > 0 ? ret : 1		670799	0		=			
ANR	671177	Identifier	ret		670799	0					
ANR	671178	ConditionalExpression	ret > 0 ? ret : 1		670799	1					
ANR	671179	Condition	ret > 0		670799	0					
ANR	671180	RelationalExpression	ret > 0		670799	0		>			
ANR	671181	Identifier	ret		670799	0					
ANR	671182	PrimaryExpression	0		670799	1					
ANR	671183	Identifier	ret		670799	1					
ANR	671184	PrimaryExpression	1		670799	2					
ANR	671185	ExpressionStatement	i += ret	3913:3:119873:119881	670799	2	True				
ANR	671186	AssignmentExpression	i += ret		670799	0		+=			
ANR	671187	Identifier	i		670799	0					
ANR	671188	Identifier	ret		670799	1					
ANR	671189	IfStatement	if ( ret <= 0 || i > bsz )		670799	3					
ANR	671190	Condition	ret <= 0 || i > bsz	3914:7:119890:119908	670799	0	True				
ANR	671191	OrExpression	ret <= 0 || i > bsz		670799	0		||			
ANR	671192	RelationalExpression	ret <= 0		670799	0		<=			
ANR	671193	Identifier	ret		670799	0					
ANR	671194	PrimaryExpression	0		670799	1					
ANR	671195	RelationalExpression	i > bsz		670799	1		>			
ANR	671196	Identifier	i		670799	0					
ANR	671197	Identifier	bsz		670799	1					
ANR	671198	CompoundStatement		58:28:1495:1495	670799	1					
ANR	671199	BreakStatement	break ;	3915:4:119917:119922	670799	0	True				
ANR	671200	IfStatement	if ( ( st64 ) op . val > asm_var_submin && op . val != UT64_MAX && op . val != UT32_MAX )		670799	4					
ANR	671201	Condition	( st64 ) op . val > asm_var_submin && op . val != UT64_MAX && op . val != UT32_MAX	3918:7:119958:120030	670799	0	True				
ANR	671202	AndExpression	( st64 ) op . val > asm_var_submin && op . val != UT64_MAX && op . val != UT32_MAX		670799	0		&&			
ANR	671203	RelationalExpression	( st64 ) op . val > asm_var_submin		670799	0		>			
ANR	671204	CastExpression	( st64 ) op . val		670799	0					
ANR	671205	CastTarget	st64		670799	0					
ANR	671206	MemberAccess	op . val		670799	1					
ANR	671207	Identifier	op		670799	0					
ANR	671208	Identifier	val		670799	1					
ANR	671209	Identifier	asm_var_submin		670799	1					
ANR	671210	AndExpression	op . val != UT64_MAX && op . val != UT32_MAX		670799	1		&&			
ANR	671211	EqualityExpression	op . val != UT64_MAX		670799	0		!=			
ANR	671212	MemberAccess	op . val		670799	0					
ANR	671213	Identifier	op		670799	0					
ANR	671214	Identifier	val		670799	1					
ANR	671215	Identifier	UT64_MAX		670799	1					
ANR	671216	EqualityExpression	op . val != UT32_MAX		670799	1		!=			
ANR	671217	MemberAccess	op . val		670799	0					
ANR	671218	Identifier	op		670799	0					
ANR	671219	Identifier	val		670799	1					
ANR	671220	Identifier	UT32_MAX		670799	1					
ANR	671221	CompoundStatement		62:82:1617:1617	670799	1					
ANR	671222	IfStatement	"if ( found_xref ( core , op . addr , op . val , R_ANAL_REF_TYPE_DATA , count , rad , cfg_debug , cfg_anal_strings ) )"		670799	0					
ANR	671223	Condition	"found_xref ( core , op . addr , op . val , R_ANAL_REF_TYPE_DATA , count , rad , cfg_debug , cfg_anal_strings )"	3919:8:120043:120139	670799	0	True				
ANR	671224	CallExpression	"found_xref ( core , op . addr , op . val , R_ANAL_REF_TYPE_DATA , count , rad , cfg_debug , cfg_anal_strings )"		670799	0					
ANR	671225	Callee	found_xref		670799	0					
ANR	671226	Identifier	found_xref		670799	0					
ANR	671227	ArgumentList	core		670799	1					
ANR	671228	Argument	core		670799	0					
ANR	671229	Identifier	core		670799	0					
ANR	671230	Argument	op . addr		670799	1					
ANR	671231	MemberAccess	op . addr		670799	0					
ANR	671232	Identifier	op		670799	0					
ANR	671233	Identifier	addr		670799	1					
ANR	671234	Argument	op . val		670799	2					
ANR	671235	MemberAccess	op . val		670799	0					
ANR	671236	Identifier	op		670799	0					
ANR	671237	Identifier	val		670799	1					
ANR	671238	Argument	R_ANAL_REF_TYPE_DATA		670799	3					
ANR	671239	Identifier	R_ANAL_REF_TYPE_DATA		670799	0					
ANR	671240	Argument	count		670799	4					
ANR	671241	Identifier	count		670799	0					
ANR	671242	Argument	rad		670799	5					
ANR	671243	Identifier	rad		670799	0					
ANR	671244	Argument	cfg_debug		670799	6					
ANR	671245	Identifier	cfg_debug		670799	0					
ANR	671246	Argument	cfg_anal_strings		670799	7					
ANR	671247	Identifier	cfg_anal_strings		670799	0					
ANR	671248	CompoundStatement		63:107:1726:1726	670799	1					
ANR	671249	ExpressionStatement	count ++	3920:5:120149:120156	670799	0	True				
ANR	671250	PostIncDecOperationExpression	count ++		670799	0					
ANR	671251	Identifier	count		670799	0					
ANR	671252	IncDec	++		670799	1					
ANR	671253	IfStatement	if ( op . ptr && op . ptr != UT64_MAX && op . ptr != UT32_MAX )		670799	5					
ANR	671254	Condition	op . ptr && op . ptr != UT64_MAX && op . ptr != UT32_MAX	3924:7:120198:120247	670799	0	True				
ANR	671255	AndExpression	op . ptr && op . ptr != UT64_MAX && op . ptr != UT32_MAX		670799	0		&&			
ANR	671256	MemberAccess	op . ptr		670799	0					
ANR	671257	Identifier	op		670799	0					
ANR	671258	Identifier	ptr		670799	1					
ANR	671259	AndExpression	op . ptr != UT64_MAX && op . ptr != UT32_MAX		670799	1		&&			
ANR	671260	EqualityExpression	op . ptr != UT64_MAX		670799	0		!=			
ANR	671261	MemberAccess	op . ptr		670799	0					
ANR	671262	Identifier	op		670799	0					
ANR	671263	Identifier	ptr		670799	1					
ANR	671264	Identifier	UT64_MAX		670799	1					
ANR	671265	EqualityExpression	op . ptr != UT32_MAX		670799	1		!=			
ANR	671266	MemberAccess	op . ptr		670799	0					
ANR	671267	Identifier	op		670799	0					
ANR	671268	Identifier	ptr		670799	1					
ANR	671269	Identifier	UT32_MAX		670799	1					
ANR	671270	CompoundStatement		68:59:1834:1834	670799	1					
ANR	671271	IfStatement	"if ( found_xref ( core , op . addr , op . ptr , R_ANAL_REF_TYPE_DATA , count , rad , cfg_debug , cfg_anal_strings ) )"		670799	0					
ANR	671272	Condition	"found_xref ( core , op . addr , op . ptr , R_ANAL_REF_TYPE_DATA , count , rad , cfg_debug , cfg_anal_strings )"	3925:8:120260:120356	670799	0	True				
ANR	671273	CallExpression	"found_xref ( core , op . addr , op . ptr , R_ANAL_REF_TYPE_DATA , count , rad , cfg_debug , cfg_anal_strings )"		670799	0					
ANR	671274	Callee	found_xref		670799	0					
ANR	671275	Identifier	found_xref		670799	0					
ANR	671276	ArgumentList	core		670799	1					
ANR	671277	Argument	core		670799	0					
ANR	671278	Identifier	core		670799	0					
ANR	671279	Argument	op . addr		670799	1					
ANR	671280	MemberAccess	op . addr		670799	0					
ANR	671281	Identifier	op		670799	0					
ANR	671282	Identifier	addr		670799	1					
ANR	671283	Argument	op . ptr		670799	2					
ANR	671284	MemberAccess	op . ptr		670799	0					
ANR	671285	Identifier	op		670799	0					
ANR	671286	Identifier	ptr		670799	1					
ANR	671287	Argument	R_ANAL_REF_TYPE_DATA		670799	3					
ANR	671288	Identifier	R_ANAL_REF_TYPE_DATA		670799	0					
ANR	671289	Argument	count		670799	4					
ANR	671290	Identifier	count		670799	0					
ANR	671291	Argument	rad		670799	5					
ANR	671292	Identifier	rad		670799	0					
ANR	671293	Argument	cfg_debug		670799	6					
ANR	671294	Identifier	cfg_debug		670799	0					
ANR	671295	Argument	cfg_anal_strings		670799	7					
ANR	671296	Identifier	cfg_anal_strings		670799	0					
ANR	671297	CompoundStatement		69:107:1943:1943	670799	1					
ANR	671298	ExpressionStatement	count ++	3926:5:120366:120373	670799	0	True				
ANR	671299	PostIncDecOperationExpression	count ++		670799	0					
ANR	671300	Identifier	count		670799	0					
ANR	671301	IncDec	++		670799	1					
ANR	671302	SwitchStatement	switch ( op . type )		670799	6					
ANR	671303	Condition	op . type	3929:11:120397:120403	670799	0	True				
ANR	671304	MemberAccess	op . type		670799	0					
ANR	671305	Identifier	op		670799	0					
ANR	671306	Identifier	type		670799	1					
ANR	671307	CompoundStatement		73:20:1990:1990	670799	1					
ANR	671308	Label	case R_ANAL_OP_TYPE_JMP :	3930:3:120411:120434	670799	0	True				
ANR	671309	Identifier	R_ANAL_OP_TYPE_JMP		670799	0					
ANR	671310	Label	case R_ANAL_OP_TYPE_CJMP :	3931:3:120439:120463	670799	1	True				
ANR	671311	Identifier	R_ANAL_OP_TYPE_CJMP		670799	0					
ANR	671312	IfStatement	"if ( found_xref ( core , op . addr , op . jump , R_ANAL_REF_TYPE_CODE , count , rad , cfg_debug , cfg_anal_strings ) )"		670799	2					
ANR	671313	Condition	"found_xref ( core , op . addr , op . jump , R_ANAL_REF_TYPE_CODE , count , rad , cfg_debug , cfg_anal_strings )"	3932:8:120473:120570	670799	0	True				
ANR	671314	CallExpression	"found_xref ( core , op . addr , op . jump , R_ANAL_REF_TYPE_CODE , count , rad , cfg_debug , cfg_anal_strings )"		670799	0					
ANR	671315	Callee	found_xref		670799	0					
ANR	671316	Identifier	found_xref		670799	0					
ANR	671317	ArgumentList	core		670799	1					
ANR	671318	Argument	core		670799	0					
ANR	671319	Identifier	core		670799	0					
ANR	671320	Argument	op . addr		670799	1					
ANR	671321	MemberAccess	op . addr		670799	0					
ANR	671322	Identifier	op		670799	0					
ANR	671323	Identifier	addr		670799	1					
ANR	671324	Argument	op . jump		670799	2					
ANR	671325	MemberAccess	op . jump		670799	0					
ANR	671326	Identifier	op		670799	0					
ANR	671327	Identifier	jump		670799	1					
ANR	671328	Argument	R_ANAL_REF_TYPE_CODE		670799	3					
ANR	671329	Identifier	R_ANAL_REF_TYPE_CODE		670799	0					
ANR	671330	Argument	count		670799	4					
ANR	671331	Identifier	count		670799	0					
ANR	671332	Argument	rad		670799	5					
ANR	671333	Identifier	rad		670799	0					
ANR	671334	Argument	cfg_debug		670799	6					
ANR	671335	Identifier	cfg_debug		670799	0					
ANR	671336	Argument	cfg_anal_strings		670799	7					
ANR	671337	Identifier	cfg_anal_strings		670799	0					
ANR	671338	CompoundStatement		76:108:2157:2157	670799	1					
ANR	671339	ExpressionStatement	count ++	3933:5:120580:120587	670799	0	True				
ANR	671340	PostIncDecOperationExpression	count ++		670799	0					
ANR	671341	Identifier	count		670799	0					
ANR	671342	IncDec	++		670799	1					
ANR	671343	BreakStatement	break ;	3935:4:120599:120604	670799	3	True				
ANR	671344	Label	case R_ANAL_OP_TYPE_CALL :	3936:3:120609:120633	670799	4	True				
ANR	671345	Identifier	R_ANAL_OP_TYPE_CALL		670799	0					
ANR	671346	Label	case R_ANAL_OP_TYPE_CCALL :	3937:3:120638:120663	670799	5	True				
ANR	671347	Identifier	R_ANAL_OP_TYPE_CCALL		670799	0					
ANR	671348	IfStatement	"if ( found_xref ( core , op . addr , op . jump , R_ANAL_REF_TYPE_CALL , count , rad , cfg_debug , cfg_anal_strings ) )"		670799	6					
ANR	671349	Condition	"found_xref ( core , op . addr , op . jump , R_ANAL_REF_TYPE_CALL , count , rad , cfg_debug , cfg_anal_strings )"	3938:8:120673:120770	670799	0	True				
ANR	671350	CallExpression	"found_xref ( core , op . addr , op . jump , R_ANAL_REF_TYPE_CALL , count , rad , cfg_debug , cfg_anal_strings )"		670799	0					
ANR	671351	Callee	found_xref		670799	0					
ANR	671352	Identifier	found_xref		670799	0					
ANR	671353	ArgumentList	core		670799	1					
ANR	671354	Argument	core		670799	0					
ANR	671355	Identifier	core		670799	0					
ANR	671356	Argument	op . addr		670799	1					
ANR	671357	MemberAccess	op . addr		670799	0					
ANR	671358	Identifier	op		670799	0					
ANR	671359	Identifier	addr		670799	1					
ANR	671360	Argument	op . jump		670799	2					
ANR	671361	MemberAccess	op . jump		670799	0					
ANR	671362	Identifier	op		670799	0					
ANR	671363	Identifier	jump		670799	1					
ANR	671364	Argument	R_ANAL_REF_TYPE_CALL		670799	3					
ANR	671365	Identifier	R_ANAL_REF_TYPE_CALL		670799	0					
ANR	671366	Argument	count		670799	4					
ANR	671367	Identifier	count		670799	0					
ANR	671368	Argument	rad		670799	5					
ANR	671369	Identifier	rad		670799	0					
ANR	671370	Argument	cfg_debug		670799	6					
ANR	671371	Identifier	cfg_debug		670799	0					
ANR	671372	Argument	cfg_anal_strings		670799	7					
ANR	671373	Identifier	cfg_anal_strings		670799	0					
ANR	671374	CompoundStatement		82:108:2357:2357	670799	1					
ANR	671375	ExpressionStatement	count ++	3939:5:120780:120787	670799	0	True				
ANR	671376	PostIncDecOperationExpression	count ++		670799	0					
ANR	671377	Identifier	count		670799	0					
ANR	671378	IncDec	++		670799	1					
ANR	671379	BreakStatement	break ;	3941:4:120799:120804	670799	7	True				
ANR	671380	Label	case R_ANAL_OP_TYPE_UJMP :	3942:3:120809:120833	670799	8	True				
ANR	671381	Identifier	R_ANAL_OP_TYPE_UJMP		670799	0					
ANR	671382	Label	case R_ANAL_OP_TYPE_IJMP :	3943:3:120838:120862	670799	9	True				
ANR	671383	Identifier	R_ANAL_OP_TYPE_IJMP		670799	0					
ANR	671384	Label	case R_ANAL_OP_TYPE_RJMP :	3944:3:120867:120891	670799	10	True				
ANR	671385	Identifier	R_ANAL_OP_TYPE_RJMP		670799	0					
ANR	671386	Label	case R_ANAL_OP_TYPE_IRJMP :	3945:3:120896:120921	670799	11	True				
ANR	671387	Identifier	R_ANAL_OP_TYPE_IRJMP		670799	0					
ANR	671388	Label	case R_ANAL_OP_TYPE_MJMP :	3946:3:120926:120950	670799	12	True				
ANR	671389	Identifier	R_ANAL_OP_TYPE_MJMP		670799	0					
ANR	671390	Label	case R_ANAL_OP_TYPE_UCJMP :	3947:3:120955:120980	670799	13	True				
ANR	671391	Identifier	R_ANAL_OP_TYPE_UCJMP		670799	0					
ANR	671392	IfStatement	"if ( found_xref ( core , op . addr , op . ptr , R_ANAL_REF_TYPE_CODE , count ++ , rad , cfg_debug , cfg_anal_strings ) )"		670799	14					
ANR	671393	Condition	"found_xref ( core , op . addr , op . ptr , R_ANAL_REF_TYPE_CODE , count ++ , rad , cfg_debug , cfg_anal_strings )"	3948:8:120990:121088	670799	0	True				
ANR	671394	CallExpression	"found_xref ( core , op . addr , op . ptr , R_ANAL_REF_TYPE_CODE , count ++ , rad , cfg_debug , cfg_anal_strings )"		670799	0					
ANR	671395	Callee	found_xref		670799	0					
ANR	671396	Identifier	found_xref		670799	0					
ANR	671397	ArgumentList	core		670799	1					
ANR	671398	Argument	core		670799	0					
ANR	671399	Identifier	core		670799	0					
ANR	671400	Argument	op . addr		670799	1					
ANR	671401	MemberAccess	op . addr		670799	0					
ANR	671402	Identifier	op		670799	0					
ANR	671403	Identifier	addr		670799	1					
ANR	671404	Argument	op . ptr		670799	2					
ANR	671405	MemberAccess	op . ptr		670799	0					
ANR	671406	Identifier	op		670799	0					
ANR	671407	Identifier	ptr		670799	1					
ANR	671408	Argument	R_ANAL_REF_TYPE_CODE		670799	3					
ANR	671409	Identifier	R_ANAL_REF_TYPE_CODE		670799	0					
ANR	671410	Argument	count ++		670799	4					
ANR	671411	PostIncDecOperationExpression	count ++		670799	0					
ANR	671412	Identifier	count		670799	0					
ANR	671413	IncDec	++		670799	1					
ANR	671414	Argument	rad		670799	5					
ANR	671415	Identifier	rad		670799	0					
ANR	671416	Argument	cfg_debug		670799	6					
ANR	671417	Identifier	cfg_debug		670799	0					
ANR	671418	Argument	cfg_anal_strings		670799	7					
ANR	671419	Identifier	cfg_anal_strings		670799	0					
ANR	671420	CompoundStatement		92:109:2675:2675	670799	1					
ANR	671421	ExpressionStatement	count ++	3949:5:121098:121105	670799	0	True				
ANR	671422	PostIncDecOperationExpression	count ++		670799	0					
ANR	671423	Identifier	count		670799	0					
ANR	671424	IncDec	++		670799	1					
ANR	671425	BreakStatement	break ;	3951:4:121117:121122	670799	15	True				
ANR	671426	Label	case R_ANAL_OP_TYPE_UCALL :	3952:3:121127:121152	670799	16	True				
ANR	671427	Identifier	R_ANAL_OP_TYPE_UCALL		670799	0					
ANR	671428	Label	case R_ANAL_OP_TYPE_ICALL :	3953:3:121157:121182	670799	17	True				
ANR	671429	Identifier	R_ANAL_OP_TYPE_ICALL		670799	0					
ANR	671430	Label	case R_ANAL_OP_TYPE_RCALL :	3954:3:121187:121212	670799	18	True				
ANR	671431	Identifier	R_ANAL_OP_TYPE_RCALL		670799	0					
ANR	671432	Label	case R_ANAL_OP_TYPE_IRCALL :	3955:3:121217:121243	670799	19	True				
ANR	671433	Identifier	R_ANAL_OP_TYPE_IRCALL		670799	0					
ANR	671434	Label	case R_ANAL_OP_TYPE_UCCALL :	3956:3:121248:121274	670799	20	True				
ANR	671435	Identifier	R_ANAL_OP_TYPE_UCCALL		670799	0					
ANR	671436	IfStatement	"if ( found_xref ( core , op . addr , op . ptr , R_ANAL_REF_TYPE_CALL , count , rad , cfg_debug , cfg_anal_strings ) )"		670799	21					
ANR	671437	Condition	"found_xref ( core , op . addr , op . ptr , R_ANAL_REF_TYPE_CALL , count , rad , cfg_debug , cfg_anal_strings )"	3957:8:121284:121380	670799	0	True				
ANR	671438	CallExpression	"found_xref ( core , op . addr , op . ptr , R_ANAL_REF_TYPE_CALL , count , rad , cfg_debug , cfg_anal_strings )"		670799	0					
ANR	671439	Callee	found_xref		670799	0					
ANR	671440	Identifier	found_xref		670799	0					
ANR	671441	ArgumentList	core		670799	1					
ANR	671442	Argument	core		670799	0					
ANR	671443	Identifier	core		670799	0					
ANR	671444	Argument	op . addr		670799	1					
ANR	671445	MemberAccess	op . addr		670799	0					
ANR	671446	Identifier	op		670799	0					
ANR	671447	Identifier	addr		670799	1					
ANR	671448	Argument	op . ptr		670799	2					
ANR	671449	MemberAccess	op . ptr		670799	0					
ANR	671450	Identifier	op		670799	0					
ANR	671451	Identifier	ptr		670799	1					
ANR	671452	Argument	R_ANAL_REF_TYPE_CALL		670799	3					
ANR	671453	Identifier	R_ANAL_REF_TYPE_CALL		670799	0					
ANR	671454	Argument	count		670799	4					
ANR	671455	Identifier	count		670799	0					
ANR	671456	Argument	rad		670799	5					
ANR	671457	Identifier	rad		670799	0					
ANR	671458	Argument	cfg_debug		670799	6					
ANR	671459	Identifier	cfg_debug		670799	0					
ANR	671460	Argument	cfg_anal_strings		670799	7					
ANR	671461	Identifier	cfg_anal_strings		670799	0					
ANR	671462	CompoundStatement		101:107:2967:2967	670799	1					
ANR	671463	ExpressionStatement	count ++	3958:5:121390:121397	670799	0	True				
ANR	671464	PostIncDecOperationExpression	count ++		670799	0					
ANR	671465	Identifier	count		670799	0					
ANR	671466	IncDec	++		670799	1					
ANR	671467	BreakStatement	break ;	3960:4:121409:121414	670799	22	True				
ANR	671468	Label	default :	3961:3:121419:121426	670799	23	True				
ANR	671469	Identifier	default		670799	0					
ANR	671470	BreakStatement	break ;	3962:4:121432:121437	670799	24	True				
ANR	671471	ExpressionStatement	r_anal_op_fini ( & op )	3964:3:121447:121467	670799	7	True				
ANR	671472	CallExpression	r_anal_op_fini ( & op )		670799	0					
ANR	671473	Callee	r_anal_op_fini		670799	0					
ANR	671474	Identifier	r_anal_op_fini		670799	0					
ANR	671475	ArgumentList	& op		670799	1					
ANR	671476	Argument	& op		670799	0					
ANR	671477	UnaryOperationExpression	& op		670799	0					
ANR	671478	UnaryOperator	&		670799	0					
ANR	671479	Identifier	op		670799	1					
ANR	671480	ExpressionStatement	at += bsz	3966:2:121475:121484	670799	8	True				
ANR	671481	AssignmentExpression	at += bsz		670799	0		+=			
ANR	671482	Identifier	at		670799	0					
ANR	671483	Identifier	bsz		670799	1					
ANR	671484	ExpressionStatement	r_anal_op_fini ( & op )	3967:2:121488:121508	670799	9	True				
ANR	671485	CallExpression	r_anal_op_fini ( & op )		670799	0					
ANR	671486	Callee	r_anal_op_fini		670799	0					
ANR	671487	Identifier	r_anal_op_fini		670799	0					
ANR	671488	ArgumentList	& op		670799	1					
ANR	671489	Argument	& op		670799	0					
ANR	671490	UnaryOperationExpression	& op		670799	0					
ANR	671491	UnaryOperator	&		670799	0					
ANR	671492	Identifier	op		670799	1					
ANR	671493	ExpressionStatement	r_cons_break_pop ( )	3969:1:121514:121533	670799	17	True				
ANR	671494	CallExpression	r_cons_break_pop ( )		670799	0					
ANR	671495	Callee	r_cons_break_pop		670799	0					
ANR	671496	Identifier	r_cons_break_pop		670799	0					
ANR	671497	ArgumentList			670799	1					
ANR	671498	ExpressionStatement	free ( buf )	3970:1:121536:121546	670799	18	True				
ANR	671499	CallExpression	free ( buf )		670799	0					
ANR	671500	Callee	free		670799	0					
ANR	671501	Identifier	free		670799	0					
ANR	671502	ArgumentList	buf		670799	1					
ANR	671503	Argument	buf		670799	0					
ANR	671504	Identifier	buf		670799	0					
ANR	671505	ExpressionStatement	free ( block )	3971:1:121549:121561	670799	19	True				
ANR	671506	CallExpression	free ( block )		670799	0					
ANR	671507	Callee	free		670799	0					
ANR	671508	Identifier	free		670799	0					
ANR	671509	ArgumentList	block		670799	1					
ANR	671510	Argument	block		670799	0					
ANR	671511	Identifier	block		670799	0					
ANR	671512	ReturnStatement	return count ;	3972:1:121564:121576	670799	20	True				
ANR	671513	Identifier	count		670799	0					
ANR	671514	ReturnType	R_API int		670799	1					
ANR	671515	Identifier	r_core_anal_search_xrefs		670799	2					
ANR	671516	ParameterList	"RCore * core , ut64 from , ut64 to , int rad"		670799	3					
ANR	671517	Parameter	RCore * core	3857:35:118373:118383	670799	0	True				
ANR	671518	ParameterType	RCore *		670799	0					
ANR	671519	Identifier	core		670799	1					
ANR	671520	Parameter	ut64 from	3857:48:118386:118394	670799	1	True				
ANR	671521	ParameterType	ut64		670799	0					
ANR	671522	Identifier	from		670799	1					
ANR	671523	Parameter	ut64 to	3857:59:118397:118403	670799	2	True				
ANR	671524	ParameterType	ut64		670799	0					
ANR	671525	Identifier	to		670799	1					
ANR	671526	Parameter	int rad	3857:68:118406:118412	670799	3	True				
ANR	671527	ParameterType	int		670799	0					
ANR	671528	Identifier	rad		670799	1					
ANR	671529	CFGEntryNode	ENTRY		670799		True				
ANR	671530	CFGExitNode	EXIT		670799		True				
ANR	671531	Symbol	UT32_MAX		670799						
ANR	671532	Symbol	* core		670799						
ANR	671533	Symbol	cfg_anal_strings		670799						
ANR	671534	Symbol	bsz		670799						
ANR	671535	Symbol	& op		670799						
ANR	671536	Symbol	core -> anal		670799						
ANR	671537	Symbol	R_ANAL_OP_MASK_BASIC		670799						
ANR	671538	Symbol	R_PERM_X		670799						
ANR	671539	Symbol	r_cons_is_breaked		670799						
ANR	671540	Symbol	memcmp		670799						
ANR	671541	Symbol	rad		670799						
ANR	671542	Symbol	core -> io		670799						
ANR	671543	Symbol	op . jump		670799						
ANR	671544	Symbol	from		670799						
ANR	671545	Symbol	block		670799						
ANR	671546	Symbol	UT64_MAX		670799						
ANR	671547	Symbol	R_ANAL_REF_TYPE_CALL		670799						
ANR	671548	Symbol	r_anal_op		670799						
ANR	671549	Symbol	core -> config		670799						
ANR	671550	Symbol	core -> blocksize		670799						
ANR	671551	Symbol	ret		670799						
ANR	671552	Symbol	op . val		670799						
ANR	671553	Symbol	op		670799						
ANR	671554	Symbol	malloc		670799						
ANR	671555	Symbol	r_io_is_valid_offset		670799						
ANR	671556	Symbol	NULL		670799						
ANR	671557	Symbol	op . addr		670799						
ANR	671558	Symbol	op . type		670799						
ANR	671559	Symbol	cfg_debug		670799						
ANR	671560	Symbol	found_xref		670799						
ANR	671561	Symbol	count		670799						
ANR	671562	Symbol	i		670799						
ANR	671563	Symbol	R_ANAL_REF_TYPE_DATA		670799						
ANR	671564	Symbol	OPSZ		670799						
ANR	671565	Symbol	asm_var_submin		670799						
ANR	671566	Symbol	R_ANAL_REF_TYPE_CODE		670799						
ANR	671567	Symbol	core		670799						
ANR	671568	Symbol	buf		670799						
ANR	671569	Symbol	op . ptr		670799						
ANR	671570	Symbol	at		670799						
ANR	671571	Symbol	R_ANAL_OP_MASK_HINT		670799						
ANR	671572	Symbol	r_config_get_i		670799						
ANR	671573	Symbol	to		670799						
ANR	671574	Function	isValidSymbol	3975:0:121581:121873							
ANR	671575	FunctionDef	isValidSymbol (RBinSymbol * symbol)		671574	0					
ANR	671576	CompoundStatement		3975:46:121627:121873	671574	0					
ANR	671577	IfStatement	if ( symbol && symbol -> type )		671574	0					
ANR	671578	Condition	symbol && symbol -> type	3976:5:121634:121655	671574	0	True				
ANR	671579	AndExpression	symbol && symbol -> type		671574	0		&&			
ANR	671580	Identifier	symbol		671574	0					
ANR	671581	PtrMemberAccess	symbol -> type		671574	1					
ANR	671582	Identifier	symbol		671574	0					
ANR	671583	Identifier	type		671574	1					
ANR	671584	CompoundStatement		3:2:34:65	671574	1					
ANR	671585	IdentifierDeclStatement	const char * type = symbol -> type ;	3977:2:121662:121693	671574	0	True				
ANR	671586	IdentifierDecl	* type = symbol -> type		671574	0					
ANR	671587	IdentifierDeclType	const char *		671574	0					
ANR	671588	Identifier	type		671574	1					
ANR	671589	AssignmentExpression	* type = symbol -> type		671574	2		=			
ANR	671590	Identifier	type		671574	0					
ANR	671591	PtrMemberAccess	symbol -> type		671574	1					
ANR	671592	Identifier	symbol		671574	0					
ANR	671593	Identifier	type		671574	1					
ANR	671594	ReturnStatement	"return ( symbol -> paddr != UT64_MAX ) && ( ! strcmp ( type , R_BIN_TYPE_FUNC_STR ) || ! strcmp ( type , R_BIN_TYPE_METH_STR ) || ! strcmp ( type , R_BIN_TYPE_STATIC_STR ) ) ;"	3978:2:121697:121853	671574	1	True				
ANR	671595	AndExpression	"( symbol -> paddr != UT64_MAX ) && ( ! strcmp ( type , R_BIN_TYPE_FUNC_STR ) || ! strcmp ( type , R_BIN_TYPE_METH_STR ) || ! strcmp ( type , R_BIN_TYPE_STATIC_STR ) )"		671574	0		&&			
ANR	671596	EqualityExpression	symbol -> paddr != UT64_MAX		671574	0		!=			
ANR	671597	PtrMemberAccess	symbol -> paddr		671574	0					
ANR	671598	Identifier	symbol		671574	0					
ANR	671599	Identifier	paddr		671574	1					
ANR	671600	Identifier	UT64_MAX		671574	1					
ANR	671601	OrExpression	"! strcmp ( type , R_BIN_TYPE_FUNC_STR ) || ! strcmp ( type , R_BIN_TYPE_METH_STR ) || ! strcmp ( type , R_BIN_TYPE_STATIC_STR )"		671574	1		||			
ANR	671602	UnaryOperationExpression	"! strcmp ( type , R_BIN_TYPE_FUNC_STR )"		671574	0					
ANR	671603	UnaryOperator	!		671574	0					
ANR	671604	CallExpression	"strcmp ( type , R_BIN_TYPE_FUNC_STR )"		671574	1					
ANR	671605	Callee	strcmp		671574	0					
ANR	671606	Identifier	strcmp		671574	0					
ANR	671607	ArgumentList	type		671574	1					
ANR	671608	Argument	type		671574	0					
ANR	671609	Identifier	type		671574	0					
ANR	671610	Argument	R_BIN_TYPE_FUNC_STR		671574	1					
ANR	671611	Identifier	R_BIN_TYPE_FUNC_STR		671574	0					
ANR	671612	OrExpression	"! strcmp ( type , R_BIN_TYPE_METH_STR ) || ! strcmp ( type , R_BIN_TYPE_STATIC_STR )"		671574	1		||			
ANR	671613	UnaryOperationExpression	"! strcmp ( type , R_BIN_TYPE_METH_STR )"		671574	0					
ANR	671614	UnaryOperator	!		671574	0					
ANR	671615	CallExpression	"strcmp ( type , R_BIN_TYPE_METH_STR )"		671574	1					
ANR	671616	Callee	strcmp		671574	0					
ANR	671617	Identifier	strcmp		671574	0					
ANR	671618	ArgumentList	type		671574	1					
ANR	671619	Argument	type		671574	0					
ANR	671620	Identifier	type		671574	0					
ANR	671621	Argument	R_BIN_TYPE_METH_STR		671574	1					
ANR	671622	Identifier	R_BIN_TYPE_METH_STR		671574	0					
ANR	671623	UnaryOperationExpression	"! strcmp ( type , R_BIN_TYPE_STATIC_STR )"		671574	1					
ANR	671624	UnaryOperator	!		671574	0					
ANR	671625	CallExpression	"strcmp ( type , R_BIN_TYPE_STATIC_STR )"		671574	1					
ANR	671626	Callee	strcmp		671574	0					
ANR	671627	Identifier	strcmp		671574	0					
ANR	671628	ArgumentList	type		671574	1					
ANR	671629	Argument	type		671574	0					
ANR	671630	Identifier	type		671574	0					
ANR	671631	Argument	R_BIN_TYPE_STATIC_STR		671574	1					
ANR	671632	Identifier	R_BIN_TYPE_STATIC_STR		671574	0					
ANR	671633	ReturnStatement	return false ;	3980:1:121859:121871	671574	1	True				
ANR	671634	Identifier	false		671574	0					
ANR	671635	ReturnType	static bool		671574	1					
ANR	671636	Identifier	isValidSymbol		671574	2					
ANR	671637	ParameterList	RBinSymbol * symbol		671574	3					
ANR	671638	Parameter	RBinSymbol * symbol	3975:26:121607:121624	671574	0	True				
ANR	671639	ParameterType	RBinSymbol *		671574	0					
ANR	671640	Identifier	symbol		671574	1					
ANR	671641	CFGEntryNode	ENTRY		671574		True				
ANR	671642	CFGExitNode	EXIT		671574		True				
ANR	671643	Symbol	strcmp		671574						
ANR	671644	Symbol	symbol		671574						
ANR	671645	Symbol	R_BIN_TYPE_FUNC_STR		671574						
ANR	671646	Symbol	R_BIN_TYPE_METH_STR		671574						
ANR	671647	Symbol	symbol -> paddr		671574						
ANR	671648	Symbol	false		671574						
ANR	671649	Symbol	symbol -> type		671574						
ANR	671650	Symbol	* symbol		671574						
ANR	671651	Symbol	type		671574						
ANR	671652	Symbol	UT64_MAX		671574						
ANR	671653	Symbol	R_BIN_TYPE_STATIC_STR		671574						
ANR	671654	Function	isDllImport	3983:0:121876:122117							
ANR	671655	FunctionDef	isDllImport (RBinSymbol * s)		671654	0					
ANR	671656	CompoundStatement		3983:39:121915:122117	671654	0					
ANR	671657	IfStatement	if ( s && s -> name && s -> bind )		671654	0					
ANR	671658	Condition	s && s -> name && s -> bind	3984:5:121922:121944	671654	0	True				
ANR	671659	AndExpression	s && s -> name && s -> bind		671654	0		&&			
ANR	671660	Identifier	s		671654	0					
ANR	671661	AndExpression	s -> name && s -> bind		671654	1		&&			
ANR	671662	PtrMemberAccess	s -> name		671654	0					
ANR	671663	Identifier	s		671654	0					
ANR	671664	Identifier	name		671654	1					
ANR	671665	PtrMemberAccess	s -> bind		671654	1					
ANR	671666	Identifier	s		671654	0					
ANR	671667	Identifier	bind		671654	1					
ANR	671668	CompoundStatement		2:30:31:31	671654	1					
ANR	671669	IfStatement	"if ( ! strcmp ( s -> bind , ""NONE"" ) )"		671654	0					
ANR	671670	Condition	"! strcmp ( s -> bind , ""NONE"" )"	3985:6:121955:121979	671654	0	True				
ANR	671671	UnaryOperationExpression	"! strcmp ( s -> bind , ""NONE"" )"		671654	0					
ANR	671672	UnaryOperator	!		671654	0					
ANR	671673	CallExpression	"strcmp ( s -> bind , ""NONE"" )"		671654	1					
ANR	671674	Callee	strcmp		671654	0					
ANR	671675	Identifier	strcmp		671654	0					
ANR	671676	ArgumentList	s -> bind		671654	1					
ANR	671677	Argument	s -> bind		671654	0					
ANR	671678	PtrMemberAccess	s -> bind		671654	0					
ANR	671679	Identifier	s		671654	0					
ANR	671680	Identifier	bind		671654	1					
ANR	671681	Argument	"""NONE"""		671654	1					
ANR	671682	PrimaryExpression	"""NONE"""		671654	0					
ANR	671683	CompoundStatement		3:33:66:66	671654	1					
ANR	671684	IfStatement	"if ( r_str_startswith ( s -> name , ""imp."" ) )"		671654	0					
ANR	671685	Condition	"r_str_startswith ( s -> name , ""imp."" )"	3986:7:121991:122024	671654	0	True				
ANR	671686	CallExpression	"r_str_startswith ( s -> name , ""imp."" )"		671654	0					
ANR	671687	Callee	r_str_startswith		671654	0					
ANR	671688	Identifier	r_str_startswith		671654	0					
ANR	671689	ArgumentList	s -> name		671654	1					
ANR	671690	Argument	s -> name		671654	0					
ANR	671691	PtrMemberAccess	s -> name		671654	0					
ANR	671692	Identifier	s		671654	0					
ANR	671693	Identifier	name		671654	1					
ANR	671694	Argument	"""imp."""		671654	1					
ANR	671695	PrimaryExpression	"""imp."""		671654	0					
ANR	671696	CompoundStatement		4:43:111:111	671654	1					
ANR	671697	IfStatement	"if ( strstr ( s -> name , "".dll_"" ) )"		671654	0					
ANR	671698	Condition	"strstr ( s -> name , "".dll_"" )"	3987:8:122037:122061	671654	0	True				
ANR	671699	CallExpression	"strstr ( s -> name , "".dll_"" )"		671654	0					
ANR	671700	Callee	strstr		671654	0					
ANR	671701	Identifier	strstr		671654	0					
ANR	671702	ArgumentList	s -> name		671654	1					
ANR	671703	Argument	s -> name		671654	0					
ANR	671704	PtrMemberAccess	s -> name		671654	0					
ANR	671705	Identifier	s		671654	0					
ANR	671706	Identifier	name		671654	1					
ANR	671707	Argument	""".dll_"""		671654	1					
ANR	671708	PrimaryExpression	""".dll_"""		671654	0					
ANR	671709	CompoundStatement		5:35:148:148	671654	1					
ANR	671710	ReturnStatement	return true ;	3988:5:122071:122082	671654	0	True				
ANR	671711	Identifier	true		671654	0					
ANR	671712	ReturnStatement	return false ;	3993:1:122103:122115	671654	1	True				
ANR	671713	Identifier	false		671654	0					
ANR	671714	ReturnType	static bool		671654	1					
ANR	671715	Identifier	isDllImport		671654	2					
ANR	671716	ParameterList	RBinSymbol * s		671654	3					
ANR	671717	Parameter	RBinSymbol * s	3983:24:121900:121912	671654	0	True				
ANR	671718	ParameterType	RBinSymbol *		671654	0					
ANR	671719	Identifier	s		671654	1					
ANR	671720	CFGEntryNode	ENTRY		671654		True				
ANR	671721	CFGExitNode	EXIT		671654		True				
ANR	671722	Symbol	strcmp		671654						
ANR	671723	Symbol	r_str_startswith		671654						
ANR	671724	Symbol	s		671654						
ANR	671725	Symbol	s -> name		671654						
ANR	671726	Symbol	strstr		671654						
ANR	671727	Symbol	s -> bind		671654						
ANR	671728	Symbol	true		671654						
ANR	671729	Symbol	false		671654						
ANR	671730	Symbol	* s		671654						
ANR	671731	Function	r_core_anal_all	3996:0:122120:124142							
ANR	671732	FunctionDef	r_core_anal_all (RCore * core)		671731	0					
ANR	671733	CompoundStatement		3996:39:122159:124142	671731	0					
ANR	671734	IdentifierDeclStatement	RList * list ;	3997:1:122162:122173	671731	0	True				
ANR	671735	IdentifierDecl	* list		671731	0					
ANR	671736	IdentifierDeclType	RList *		671731	0					
ANR	671737	Identifier	list		671731	1					
ANR	671738	IdentifierDeclStatement	RListIter * iter ;	3998:1:122176:122191	671731	1	True				
ANR	671739	IdentifierDecl	* iter		671731	0					
ANR	671740	IdentifierDeclType	RListIter *		671731	0					
ANR	671741	Identifier	iter		671731	1					
ANR	671742	IdentifierDeclStatement	RFlagItem * item ;	3999:1:122194:122209	671731	2	True				
ANR	671743	IdentifierDecl	* item		671731	0					
ANR	671744	IdentifierDeclType	RFlagItem *		671731	0					
ANR	671745	Identifier	item		671731	1					
ANR	671746	IdentifierDeclStatement	RAnalFunction * fcni ;	4000:1:122212:122231	671731	3	True				
ANR	671747	IdentifierDecl	* fcni		671731	0					
ANR	671748	IdentifierDeclType	RAnalFunction *		671731	0					
ANR	671749	Identifier	fcni		671731	1					
ANR	671750	IdentifierDeclStatement	RBinAddr * binmain ;	4001:1:122234:122251	671731	4	True				
ANR	671751	IdentifierDecl	* binmain		671731	0					
ANR	671752	IdentifierDeclType	RBinAddr *		671731	0					
ANR	671753	Identifier	binmain		671731	1					
ANR	671754	IdentifierDeclStatement	RBinAddr * entry ;	4002:1:122254:122269	671731	5	True				
ANR	671755	IdentifierDecl	* entry		671731	0					
ANR	671756	IdentifierDeclType	RBinAddr *		671731	0					
ANR	671757	Identifier	entry		671731	1					
ANR	671758	IdentifierDeclStatement	RBinSymbol * symbol ;	4003:1:122272:122290	671731	6	True				
ANR	671759	IdentifierDecl	* symbol		671731	0					
ANR	671760	IdentifierDeclType	RBinSymbol *		671731	0					
ANR	671761	Identifier	symbol		671731	1					
ANR	671762	IdentifierDeclStatement	int depth = core -> anal -> opt . depth ;	4004:1:122293:122326	671731	7	True				
ANR	671763	IdentifierDecl	depth = core -> anal -> opt . depth		671731	0					
ANR	671764	IdentifierDeclType	int		671731	0					
ANR	671765	Identifier	depth		671731	1					
ANR	671766	AssignmentExpression	depth = core -> anal -> opt . depth		671731	2		=			
ANR	671767	Identifier	depth		671731	0					
ANR	671768	MemberAccess	core -> anal -> opt . depth		671731	1					
ANR	671769	PtrMemberAccess	core -> anal -> opt		671731	0					
ANR	671770	PtrMemberAccess	core -> anal		671731	0					
ANR	671771	Identifier	core		671731	0					
ANR	671772	Identifier	anal		671731	1					
ANR	671773	Identifier	opt		671731	1					
ANR	671774	Identifier	depth		671731	1					
ANR	671775	IdentifierDeclStatement	"bool anal_vars = r_config_get_i ( core -> config , ""anal.vars"" ) ;"	4005:1:122329:122388	671731	8	True				
ANR	671776	IdentifierDecl	"anal_vars = r_config_get_i ( core -> config , ""anal.vars"" )"		671731	0					
ANR	671777	IdentifierDeclType	bool		671731	0					
ANR	671778	Identifier	anal_vars		671731	1					
ANR	671779	AssignmentExpression	"anal_vars = r_config_get_i ( core -> config , ""anal.vars"" )"		671731	2		=			
ANR	671780	Identifier	anal_vars		671731	0					
ANR	671781	CallExpression	"r_config_get_i ( core -> config , ""anal.vars"" )"		671731	1					
ANR	671782	Callee	r_config_get_i		671731	0					
ANR	671783	Identifier	r_config_get_i		671731	0					
ANR	671784	ArgumentList	core -> config		671731	1					
ANR	671785	Argument	core -> config		671731	0					
ANR	671786	PtrMemberAccess	core -> config		671731	0					
ANR	671787	Identifier	core		671731	0					
ANR	671788	Identifier	config		671731	1					
ANR	671789	Argument	"""anal.vars"""		671731	1					
ANR	671790	PrimaryExpression	"""anal.vars"""		671731	0					
ANR	671791	ExpressionStatement	"item = r_flag_get ( core -> flags , ""entry0"" )"	4009:1:122432:122473	671731	9	True				
ANR	671792	AssignmentExpression	"item = r_flag_get ( core -> flags , ""entry0"" )"		671731	0		=			
ANR	671793	Identifier	item		671731	0					
ANR	671794	CallExpression	"r_flag_get ( core -> flags , ""entry0"" )"		671731	1					
ANR	671795	Callee	r_flag_get		671731	0					
ANR	671796	Identifier	r_flag_get		671731	0					
ANR	671797	ArgumentList	core -> flags		671731	1					
ANR	671798	Argument	core -> flags		671731	0					
ANR	671799	PtrMemberAccess	core -> flags		671731	0					
ANR	671800	Identifier	core		671731	0					
ANR	671801	Identifier	flags		671731	1					
ANR	671802	Argument	"""entry0"""		671731	1					
ANR	671803	PrimaryExpression	"""entry0"""		671731	0					
ANR	671804	IfStatement	if ( item )		671731	10					
ANR	671805	Condition	item	4010:5:122480:122483	671731	0	True				
ANR	671806	Identifier	item		671731	0					
ANR	671807	CompoundStatement		15:11:326:326	671731	1					
ANR	671808	ExpressionStatement	"r_core_anal_fcn ( core , item -> offset , - 1 , R_ANAL_REF_TYPE_NULL , depth - 1 )"	4011:2:122490:122563	671731	0	True				
ANR	671809	CallExpression	"r_core_anal_fcn ( core , item -> offset , - 1 , R_ANAL_REF_TYPE_NULL , depth - 1 )"		671731	0					
ANR	671810	Callee	r_core_anal_fcn		671731	0					
ANR	671811	Identifier	r_core_anal_fcn		671731	0					
ANR	671812	ArgumentList	core		671731	1					
ANR	671813	Argument	core		671731	0					
ANR	671814	Identifier	core		671731	0					
ANR	671815	Argument	item -> offset		671731	1					
ANR	671816	PtrMemberAccess	item -> offset		671731	0					
ANR	671817	Identifier	item		671731	0					
ANR	671818	Identifier	offset		671731	1					
ANR	671819	Argument	- 1		671731	2					
ANR	671820	UnaryOperationExpression	- 1		671731	0					
ANR	671821	UnaryOperator	-		671731	0					
ANR	671822	PrimaryExpression	1		671731	1					
ANR	671823	Argument	R_ANAL_REF_TYPE_NULL		671731	3					
ANR	671824	Identifier	R_ANAL_REF_TYPE_NULL		671731	0					
ANR	671825	Argument	depth - 1		671731	4					
ANR	671826	AdditiveExpression	depth - 1		671731	0		-			
ANR	671827	Identifier	depth		671731	0					
ANR	671828	PrimaryExpression	1		671731	1					
ANR	671829	Statement	r_core_cmdf	4012:2:122567:122577	671731	1	True				
ANR	671830	Statement	(	4012:14:122579:122579	671731	2	True				
ANR	671831	Statement	core	4012:15:122580:122583	671731	3	True				
ANR	671832	Statement	","	4012:19:122584:122584	671731	4	True				
ANR	671833	Statement	"""afn entry0 0x%08"""	4012:21:122586:122603	671731	5	True				
ANR	671834	Statement	PFMT64x	4012:39:122604:122610	671731	6	True				
ANR	671835	Statement	","	4012:46:122611:122611	671731	7	True				
ANR	671836	Statement	item	4012:48:122613:122616	671731	8	True				
ANR	671837	Statement	->	4012:52:122617:122618	671731	9	True				
ANR	671838	Statement	offset	4012:54:122619:122624	671731	10	True				
ANR	671839	Statement	)	4012:60:122625:122625	671731	11	True				
ANR	671840	ExpressionStatement		4012:61:122626:122626	671731	12	True				
ANR	671841	ElseStatement	else		671731	0					
ANR	671842	CompoundStatement		18:8:476:476	671731	0					
ANR	671843	ExpressionStatement	"r_core_cmd0 ( core , ""af"" )"	4014:2:122640:122664	671731	0	True				
ANR	671844	CallExpression	"r_core_cmd0 ( core , ""af"" )"		671731	0					
ANR	671845	Callee	r_core_cmd0		671731	0					
ANR	671846	Identifier	r_core_cmd0		671731	0					
ANR	671847	ArgumentList	core		671731	1					
ANR	671848	Argument	core		671731	0					
ANR	671849	Identifier	core		671731	0					
ANR	671850	Argument	"""af"""		671731	1					
ANR	671851	PrimaryExpression	"""af"""		671731	0					
ANR	671852	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	4017:1:122671:122701	671731	11	True				
ANR	671853	CallExpression	"r_cons_break_push ( NULL , NULL )"		671731	0					
ANR	671854	Callee	r_cons_break_push		671731	0					
ANR	671855	Identifier	r_cons_break_push		671731	0					
ANR	671856	ArgumentList	NULL		671731	1					
ANR	671857	Argument	NULL		671731	0					
ANR	671858	Identifier	NULL		671731	0					
ANR	671859	Argument	NULL		671731	1					
ANR	671860	Identifier	NULL		671731	0					
ANR	671861	IfStatement	if ( ( list = r_bin_get_symbols ( core -> bin ) ) != NULL )		671731	12					
ANR	671862	Condition	( list = r_bin_get_symbols ( core -> bin ) ) != NULL	4019:5:122772:122817	671731	0	True				
ANR	671863	EqualityExpression	( list = r_bin_get_symbols ( core -> bin ) ) != NULL		671731	0		!=			
ANR	671864	AssignmentExpression	list = r_bin_get_symbols ( core -> bin )		671731	0		=			
ANR	671865	Identifier	list		671731	0					
ANR	671866	CallExpression	r_bin_get_symbols ( core -> bin )		671731	1					
ANR	671867	Callee	r_bin_get_symbols		671731	0					
ANR	671868	Identifier	r_bin_get_symbols		671731	0					
ANR	671869	ArgumentList	core -> bin		671731	1					
ANR	671870	Argument	core -> bin		671731	0					
ANR	671871	PtrMemberAccess	core -> bin		671731	0					
ANR	671872	Identifier	core		671731	0					
ANR	671873	Identifier	bin		671731	1					
ANR	671874	Identifier	NULL		671731	1					
ANR	671875	CompoundStatement		24:53:660:660	671731	1					
ANR	671876	Statement	r_list_foreach	4020:2:122824:122837	671731	0	True				
ANR	671877	Statement	(	4020:17:122839:122839	671731	1	True				
ANR	671878	Statement	list	4020:18:122840:122843	671731	2	True				
ANR	671879	Statement	","	4020:22:122844:122844	671731	3	True				
ANR	671880	Statement	iter	4020:24:122846:122849	671731	4	True				
ANR	671881	Statement	","	4020:28:122850:122850	671731	5	True				
ANR	671882	Statement	symbol	4020:30:122852:122857	671731	6	True				
ANR	671883	Statement	)	4020:36:122858:122858	671731	7	True				
ANR	671884	CompoundStatement		25:38:700:700	671731	8					
ANR	671885	IfStatement	if ( r_cons_is_breaked ( ) )		671731	0					
ANR	671886	Condition	r_cons_is_breaked ( )	4021:7:122869:122888	671731	0	True				
ANR	671887	CallExpression	r_cons_is_breaked ( )		671731	0					
ANR	671888	Callee	r_cons_is_breaked		671731	0					
ANR	671889	Identifier	r_cons_is_breaked		671731	0					
ANR	671890	ArgumentList			671731	1					
ANR	671891	CompoundStatement		26:29:731:731	671731	1					
ANR	671892	BreakStatement	break ;	4022:4:122897:122902	671731	0	True				
ANR	671893	IfStatement	if ( isDllImport ( symbol ) )		671731	1					
ANR	671894	Condition	isDllImport ( symbol )	4025:7:122956:122975	671731	0	True				
ANR	671895	CallExpression	isDllImport ( symbol )		671731	0					
ANR	671896	Callee	isDllImport		671731	0					
ANR	671897	Identifier	isDllImport		671731	0					
ANR	671898	ArgumentList	symbol		671731	1					
ANR	671899	Argument	symbol		671731	0					
ANR	671900	Identifier	symbol		671731	0					
ANR	671901	CompoundStatement		30:29:818:818	671731	1					
ANR	671902	ContinueStatement	continue ;	4026:4:122984:122992	671731	0	True				
ANR	671903	IfStatement	if ( isValidSymbol ( symbol ) )		671731	2					
ANR	671904	Condition	isValidSymbol ( symbol )	4028:7:123006:123027	671731	0	True				
ANR	671905	CallExpression	isValidSymbol ( symbol )		671731	0					
ANR	671906	Callee	isValidSymbol		671731	0					
ANR	671907	Identifier	isValidSymbol		671731	0					
ANR	671908	ArgumentList	symbol		671731	1					
ANR	671909	Argument	symbol		671731	0					
ANR	671910	Identifier	symbol		671731	0					
ANR	671911	CompoundStatement		34:4:876:950	671731	1					
ANR	671912	IdentifierDeclStatement	"ut64 addr = r_bin_get_vaddr ( core -> bin , symbol -> paddr , symbol -> vaddr ) ;"	4029:4:123036:123110	671731	0	True				
ANR	671913	IdentifierDecl	"addr = r_bin_get_vaddr ( core -> bin , symbol -> paddr , symbol -> vaddr )"		671731	0					
ANR	671914	IdentifierDeclType	ut64		671731	0					
ANR	671915	Identifier	addr		671731	1					
ANR	671916	AssignmentExpression	"addr = r_bin_get_vaddr ( core -> bin , symbol -> paddr , symbol -> vaddr )"		671731	2		=			
ANR	671917	Identifier	addr		671731	0					
ANR	671918	CallExpression	"r_bin_get_vaddr ( core -> bin , symbol -> paddr , symbol -> vaddr )"		671731	1					
ANR	671919	Callee	r_bin_get_vaddr		671731	0					
ANR	671920	Identifier	r_bin_get_vaddr		671731	0					
ANR	671921	ArgumentList	core -> bin		671731	1					
ANR	671922	Argument	core -> bin		671731	0					
ANR	671923	PtrMemberAccess	core -> bin		671731	0					
ANR	671924	Identifier	core		671731	0					
ANR	671925	Identifier	bin		671731	1					
ANR	671926	Argument	symbol -> paddr		671731	1					
ANR	671927	PtrMemberAccess	symbol -> paddr		671731	0					
ANR	671928	Identifier	symbol		671731	0					
ANR	671929	Identifier	paddr		671731	1					
ANR	671930	Argument	symbol -> vaddr		671731	2					
ANR	671931	PtrMemberAccess	symbol -> vaddr		671731	0					
ANR	671932	Identifier	symbol		671731	0					
ANR	671933	Identifier	vaddr		671731	1					
ANR	671934	ExpressionStatement	"r_core_anal_fcn ( core , addr , - 1 , R_ANAL_REF_TYPE_NULL , depth - 1 )"	4031:4:123116:123181	671731	1	True				
ANR	671935	CallExpression	"r_core_anal_fcn ( core , addr , - 1 , R_ANAL_REF_TYPE_NULL , depth - 1 )"		671731	0					
ANR	671936	Callee	r_core_anal_fcn		671731	0					
ANR	671937	Identifier	r_core_anal_fcn		671731	0					
ANR	671938	ArgumentList	core		671731	1					
ANR	671939	Argument	core		671731	0					
ANR	671940	Identifier	core		671731	0					
ANR	671941	Argument	addr		671731	1					
ANR	671942	Identifier	addr		671731	0					
ANR	671943	Argument	- 1		671731	2					
ANR	671944	UnaryOperationExpression	- 1		671731	0					
ANR	671945	UnaryOperator	-		671731	0					
ANR	671946	PrimaryExpression	1		671731	1					
ANR	671947	Argument	R_ANAL_REF_TYPE_NULL		671731	3					
ANR	671948	Identifier	R_ANAL_REF_TYPE_NULL		671731	0					
ANR	671949	Argument	depth - 1		671731	4					
ANR	671950	AdditiveExpression	depth - 1		671731	0		-			
ANR	671951	Identifier	depth		671731	0					
ANR	671952	PrimaryExpression	1		671731	1					
ANR	671953	IfStatement	"if ( ( binmain = r_bin_get_sym ( core -> bin , R_BIN_SYM_MAIN ) ) != NULL )"		671731	13					
ANR	671954	Condition	"( binmain = r_bin_get_sym ( core -> bin , R_BIN_SYM_MAIN ) ) != NULL"	4036:5:123212:123272	671731	0	True				
ANR	671955	EqualityExpression	"( binmain = r_bin_get_sym ( core -> bin , R_BIN_SYM_MAIN ) ) != NULL"		671731	0		!=			
ANR	671956	AssignmentExpression	"binmain = r_bin_get_sym ( core -> bin , R_BIN_SYM_MAIN )"		671731	0		=			
ANR	671957	Identifier	binmain		671731	0					
ANR	671958	CallExpression	"r_bin_get_sym ( core -> bin , R_BIN_SYM_MAIN )"		671731	1					
ANR	671959	Callee	r_bin_get_sym		671731	0					
ANR	671960	Identifier	r_bin_get_sym		671731	0					
ANR	671961	ArgumentList	core -> bin		671731	1					
ANR	671962	Argument	core -> bin		671731	0					
ANR	671963	PtrMemberAccess	core -> bin		671731	0					
ANR	671964	Identifier	core		671731	0					
ANR	671965	Identifier	bin		671731	1					
ANR	671966	Argument	R_BIN_SYM_MAIN		671731	1					
ANR	671967	Identifier	R_BIN_SYM_MAIN		671731	0					
ANR	671968	Identifier	NULL		671731	1					
ANR	671969	CompoundStatement		41:68:1115:1115	671731	1					
ANR	671970	IfStatement	if ( binmain -> paddr != UT64_MAX )		671731	0					
ANR	671971	Condition	binmain -> paddr != UT64_MAX	4037:6:123283:123308	671731	0	True				
ANR	671972	EqualityExpression	binmain -> paddr != UT64_MAX		671731	0		!=			
ANR	671973	PtrMemberAccess	binmain -> paddr		671731	0					
ANR	671974	Identifier	binmain		671731	0					
ANR	671975	Identifier	paddr		671731	1					
ANR	671976	Identifier	UT64_MAX		671731	1					
ANR	671977	CompoundStatement		43:3:1156:1227	671731	1					
ANR	671978	IdentifierDeclStatement	"ut64 addr = r_bin_get_vaddr ( core -> bin , binmain -> paddr , binmain -> vaddr ) ;"	4038:3:123316:123387	671731	0	True				
ANR	671979	IdentifierDecl	"addr = r_bin_get_vaddr ( core -> bin , binmain -> paddr , binmain -> vaddr )"		671731	0					
ANR	671980	IdentifierDeclType	ut64		671731	0					
ANR	671981	Identifier	addr		671731	1					
ANR	671982	AssignmentExpression	"addr = r_bin_get_vaddr ( core -> bin , binmain -> paddr , binmain -> vaddr )"		671731	2		=			
ANR	671983	Identifier	addr		671731	0					
ANR	671984	CallExpression	"r_bin_get_vaddr ( core -> bin , binmain -> paddr , binmain -> vaddr )"		671731	1					
ANR	671985	Callee	r_bin_get_vaddr		671731	0					
ANR	671986	Identifier	r_bin_get_vaddr		671731	0					
ANR	671987	ArgumentList	core -> bin		671731	1					
ANR	671988	Argument	core -> bin		671731	0					
ANR	671989	PtrMemberAccess	core -> bin		671731	0					
ANR	671990	Identifier	core		671731	0					
ANR	671991	Identifier	bin		671731	1					
ANR	671992	Argument	binmain -> paddr		671731	1					
ANR	671993	PtrMemberAccess	binmain -> paddr		671731	0					
ANR	671994	Identifier	binmain		671731	0					
ANR	671995	Identifier	paddr		671731	1					
ANR	671996	Argument	binmain -> vaddr		671731	2					
ANR	671997	PtrMemberAccess	binmain -> vaddr		671731	0					
ANR	671998	Identifier	binmain		671731	0					
ANR	671999	Identifier	vaddr		671731	1					
ANR	672000	ExpressionStatement	"r_core_anal_fcn ( core , addr , - 1 , R_ANAL_REF_TYPE_NULL , depth - 1 )"	4039:3:123392:123457	671731	1	True				
ANR	672001	CallExpression	"r_core_anal_fcn ( core , addr , - 1 , R_ANAL_REF_TYPE_NULL , depth - 1 )"		671731	0					
ANR	672002	Callee	r_core_anal_fcn		671731	0					
ANR	672003	Identifier	r_core_anal_fcn		671731	0					
ANR	672004	ArgumentList	core		671731	1					
ANR	672005	Argument	core		671731	0					
ANR	672006	Identifier	core		671731	0					
ANR	672007	Argument	addr		671731	1					
ANR	672008	Identifier	addr		671731	0					
ANR	672009	Argument	- 1		671731	2					
ANR	672010	UnaryOperationExpression	- 1		671731	0					
ANR	672011	UnaryOperator	-		671731	0					
ANR	672012	PrimaryExpression	1		671731	1					
ANR	672013	Argument	R_ANAL_REF_TYPE_NULL		671731	3					
ANR	672014	Identifier	R_ANAL_REF_TYPE_NULL		671731	0					
ANR	672015	Argument	depth - 1		671731	4					
ANR	672016	AdditiveExpression	depth - 1		671731	0		-			
ANR	672017	Identifier	depth		671731	0					
ANR	672018	PrimaryExpression	1		671731	1					
ANR	672019	IfStatement	if ( ( list = r_bin_get_entries ( core -> bin ) ) != NULL )		671731	14					
ANR	672020	Condition	( list = r_bin_get_entries ( core -> bin ) ) != NULL	4042:5:123471:123516	671731	0	True				
ANR	672021	EqualityExpression	( list = r_bin_get_entries ( core -> bin ) ) != NULL		671731	0		!=			
ANR	672022	AssignmentExpression	list = r_bin_get_entries ( core -> bin )		671731	0		=			
ANR	672023	Identifier	list		671731	0					
ANR	672024	CallExpression	r_bin_get_entries ( core -> bin )		671731	1					
ANR	672025	Callee	r_bin_get_entries		671731	0					
ANR	672026	Identifier	r_bin_get_entries		671731	0					
ANR	672027	ArgumentList	core -> bin		671731	1					
ANR	672028	Argument	core -> bin		671731	0					
ANR	672029	PtrMemberAccess	core -> bin		671731	0					
ANR	672030	Identifier	core		671731	0					
ANR	672031	Identifier	bin		671731	1					
ANR	672032	Identifier	NULL		671731	1					
ANR	672033	CompoundStatement		47:53:1359:1359	671731	1					
ANR	672034	Statement	r_list_foreach	4043:2:123523:123536	671731	0	True				
ANR	672035	Statement	(	4043:17:123538:123538	671731	1	True				
ANR	672036	Statement	list	4043:18:123539:123542	671731	2	True				
ANR	672037	Statement	","	4043:22:123543:123543	671731	3	True				
ANR	672038	Statement	iter	4043:24:123545:123548	671731	4	True				
ANR	672039	Statement	","	4043:28:123549:123549	671731	5	True				
ANR	672040	Statement	entry	4043:30:123551:123555	671731	6	True				
ANR	672041	Statement	)	4043:35:123556:123556	671731	7	True				
ANR	672042	CompoundStatement		52:3:1457:1524	671731	8					
ANR	672043	IfStatement	if ( entry -> paddr == UT64_MAX )		671731	0					
ANR	672044	Condition	entry -> paddr == UT64_MAX	4044:7:123567:123590	671731	0	True				
ANR	672045	EqualityExpression	entry -> paddr == UT64_MAX		671731	0		==			
ANR	672046	PtrMemberAccess	entry -> paddr		671731	0					
ANR	672047	Identifier	entry		671731	0					
ANR	672048	Identifier	paddr		671731	1					
ANR	672049	Identifier	UT64_MAX		671731	1					
ANR	672050	CompoundStatement		49:33:1433:1433	671731	1					
ANR	672051	ContinueStatement	continue ;	4045:4:123599:123607	671731	0	True				
ANR	672052	IdentifierDeclStatement	"ut64 addr = r_bin_get_vaddr ( core -> bin , entry -> paddr , entry -> vaddr ) ;"	4047:3:123617:123684	671731	1	True				
ANR	672053	IdentifierDecl	"addr = r_bin_get_vaddr ( core -> bin , entry -> paddr , entry -> vaddr )"		671731	0					
ANR	672054	IdentifierDeclType	ut64		671731	0					
ANR	672055	Identifier	addr		671731	1					
ANR	672056	AssignmentExpression	"addr = r_bin_get_vaddr ( core -> bin , entry -> paddr , entry -> vaddr )"		671731	2		=			
ANR	672057	Identifier	addr		671731	0					
ANR	672058	CallExpression	"r_bin_get_vaddr ( core -> bin , entry -> paddr , entry -> vaddr )"		671731	1					
ANR	672059	Callee	r_bin_get_vaddr		671731	0					
ANR	672060	Identifier	r_bin_get_vaddr		671731	0					
ANR	672061	ArgumentList	core -> bin		671731	1					
ANR	672062	Argument	core -> bin		671731	0					
ANR	672063	PtrMemberAccess	core -> bin		671731	0					
ANR	672064	Identifier	core		671731	0					
ANR	672065	Identifier	bin		671731	1					
ANR	672066	Argument	entry -> paddr		671731	1					
ANR	672067	PtrMemberAccess	entry -> paddr		671731	0					
ANR	672068	Identifier	entry		671731	0					
ANR	672069	Identifier	paddr		671731	1					
ANR	672070	Argument	entry -> vaddr		671731	2					
ANR	672071	PtrMemberAccess	entry -> vaddr		671731	0					
ANR	672072	Identifier	entry		671731	0					
ANR	672073	Identifier	vaddr		671731	1					
ANR	672074	ExpressionStatement	"r_core_anal_fcn ( core , addr , - 1 , R_ANAL_REF_TYPE_NULL , depth - 1 )"	4048:3:123689:123754	671731	2	True				
ANR	672075	CallExpression	"r_core_anal_fcn ( core , addr , - 1 , R_ANAL_REF_TYPE_NULL , depth - 1 )"		671731	0					
ANR	672076	Callee	r_core_anal_fcn		671731	0					
ANR	672077	Identifier	r_core_anal_fcn		671731	0					
ANR	672078	ArgumentList	core		671731	1					
ANR	672079	Argument	core		671731	0					
ANR	672080	Identifier	core		671731	0					
ANR	672081	Argument	addr		671731	1					
ANR	672082	Identifier	addr		671731	0					
ANR	672083	Argument	- 1		671731	2					
ANR	672084	UnaryOperationExpression	- 1		671731	0					
ANR	672085	UnaryOperator	-		671731	0					
ANR	672086	PrimaryExpression	1		671731	1					
ANR	672087	Argument	R_ANAL_REF_TYPE_NULL		671731	3					
ANR	672088	Identifier	R_ANAL_REF_TYPE_NULL		671731	0					
ANR	672089	Argument	depth - 1		671731	4					
ANR	672090	AdditiveExpression	depth - 1		671731	0		-			
ANR	672091	Identifier	depth		671731	0					
ANR	672092	PrimaryExpression	1		671731	1					
ANR	672093	IfStatement	if ( anal_vars )		671731	15					
ANR	672094	Condition	anal_vars	4051:5:123768:123776	671731	0	True				
ANR	672095	Identifier	anal_vars		671731	0					
ANR	672096	CompoundStatement		56:16:1619:1619	671731	1					
ANR	672097	Statement	r_list_foreach	4053:2:123839:123852	671731	0	True				
ANR	672098	Statement	(	4053:17:123854:123854	671731	1	True				
ANR	672099	Statement	core	4053:18:123855:123858	671731	2	True				
ANR	672100	Statement	->	4053:22:123859:123860	671731	3	True				
ANR	672101	Statement	anal	4053:24:123861:123864	671731	4	True				
ANR	672102	Statement	->	4053:28:123865:123866	671731	5	True				
ANR	672103	Statement	fcns	4053:30:123867:123870	671731	6	True				
ANR	672104	Statement	","	4053:34:123871:123871	671731	7	True				
ANR	672105	Statement	iter	4053:36:123873:123876	671731	8	True				
ANR	672106	Statement	","	4053:40:123877:123877	671731	9	True				
ANR	672107	Statement	fcni	4053:42:123879:123882	671731	10	True				
ANR	672108	Statement	)	4053:46:123883:123883	671731	11	True				
ANR	672109	CompoundStatement		58:48:1725:1725	671731	12					
ANR	672110	IfStatement	if ( r_cons_is_breaked ( ) )		671731	0					
ANR	672111	Condition	r_cons_is_breaked ( )	4054:7:123894:123913	671731	0	True				
ANR	672112	CallExpression	r_cons_is_breaked ( )		671731	0					
ANR	672113	Callee	r_cons_is_breaked		671731	0					
ANR	672114	Identifier	r_cons_is_breaked		671731	0					
ANR	672115	ArgumentList			671731	1					
ANR	672116	CompoundStatement		59:29:1756:1756	671731	1					
ANR	672117	BreakStatement	break ;	4055:4:123922:123927	671731	0	True				
ANR	672118	ExpressionStatement	"r_core_recover_vars ( core , fcni , true )"	4057:3:123937:123975	671731	1	True				
ANR	672119	CallExpression	"r_core_recover_vars ( core , fcni , true )"		671731	0					
ANR	672120	Callee	r_core_recover_vars		671731	0					
ANR	672121	Identifier	r_core_recover_vars		671731	0					
ANR	672122	ArgumentList	core		671731	1					
ANR	672123	Argument	core		671731	0					
ANR	672124	Identifier	core		671731	0					
ANR	672125	Argument	fcni		671731	1					
ANR	672126	Identifier	fcni		671731	0					
ANR	672127	Argument	true		671731	2					
ANR	672128	Identifier	true		671731	0					
ANR	672129	IfStatement	"if ( ! strncmp ( fcni -> name , ""sym."" , 4 ) || ! strncmp ( fcni -> name , ""main"" , 4 ) )"		671731	2					
ANR	672130	Condition	"! strncmp ( fcni -> name , ""sym."" , 4 ) || ! strncmp ( fcni -> name , ""main"" , 4 )"	4058:7:123984:124051	671731	0	True				
ANR	672131	OrExpression	"! strncmp ( fcni -> name , ""sym."" , 4 ) || ! strncmp ( fcni -> name , ""main"" , 4 )"		671731	0		||			
ANR	672132	UnaryOperationExpression	"! strncmp ( fcni -> name , ""sym."" , 4 )"		671731	0					
ANR	672133	UnaryOperator	!		671731	0					
ANR	672134	CallExpression	"strncmp ( fcni -> name , ""sym."" , 4 )"		671731	1					
ANR	672135	Callee	strncmp		671731	0					
ANR	672136	Identifier	strncmp		671731	0					
ANR	672137	ArgumentList	fcni -> name		671731	1					
ANR	672138	Argument	fcni -> name		671731	0					
ANR	672139	PtrMemberAccess	fcni -> name		671731	0					
ANR	672140	Identifier	fcni		671731	0					
ANR	672141	Identifier	name		671731	1					
ANR	672142	Argument	"""sym."""		671731	1					
ANR	672143	PrimaryExpression	"""sym."""		671731	0					
ANR	672144	Argument	4		671731	2					
ANR	672145	PrimaryExpression	4		671731	0					
ANR	672146	UnaryOperationExpression	"! strncmp ( fcni -> name , ""main"" , 4 )"		671731	1					
ANR	672147	UnaryOperator	!		671731	0					
ANR	672148	CallExpression	"strncmp ( fcni -> name , ""main"" , 4 )"		671731	1					
ANR	672149	Callee	strncmp		671731	0					
ANR	672150	Identifier	strncmp		671731	0					
ANR	672151	ArgumentList	fcni -> name		671731	1					
ANR	672152	Argument	fcni -> name		671731	0					
ANR	672153	PtrMemberAccess	fcni -> name		671731	0					
ANR	672154	Identifier	fcni		671731	0					
ANR	672155	Identifier	name		671731	1					
ANR	672156	Argument	"""main"""		671731	1					
ANR	672157	PrimaryExpression	"""main"""		671731	0					
ANR	672158	Argument	4		671731	2					
ANR	672159	PrimaryExpression	4		671731	0					
ANR	672160	CompoundStatement		63:77:1894:1894	671731	1					
ANR	672161	ExpressionStatement	fcni -> type = R_ANAL_FCN_TYPE_SYM	4059:4:124060:124092	671731	0	True				
ANR	672162	AssignmentExpression	fcni -> type = R_ANAL_FCN_TYPE_SYM		671731	0		=			
ANR	672163	PtrMemberAccess	fcni -> type		671731	0					
ANR	672164	Identifier	fcni		671731	0					
ANR	672165	Identifier	type		671731	1					
ANR	672166	Identifier	R_ANAL_FCN_TYPE_SYM		671731	1					
ANR	672167	ExpressionStatement	r_cons_break_pop ( )	4063:1:124107:124126	671731	16	True				
ANR	672168	CallExpression	r_cons_break_pop ( )		671731	0					
ANR	672169	Callee	r_cons_break_pop		671731	0					
ANR	672170	Identifier	r_cons_break_pop		671731	0					
ANR	672171	ArgumentList			671731	1					
ANR	672172	ReturnStatement	return true ;	4064:1:124129:124140	671731	17	True				
ANR	672173	Identifier	true		671731	0					
ANR	672174	ReturnType	R_API int		671731	1					
ANR	672175	Identifier	r_core_anal_all		671731	2					
ANR	672176	ParameterList	RCore * core		671731	3					
ANR	672177	Parameter	RCore * core	3996:26:122146:122156	671731	0	True				
ANR	672178	ParameterType	RCore *		671731	0					
ANR	672179	Identifier	core		671731	1					
ANR	672180	CFGEntryNode	ENTRY		671731		True				
ANR	672181	CFGExitNode	EXIT		671731		True				
ANR	672182	CFGErrorNode	ERROR		671731		True				
ANR	672183	Symbol	symbol		671731						
ANR	672184	Symbol	r_bin_get_entries		671731						
ANR	672185	Symbol	fcni -> name		671731						
ANR	672186	Symbol	R_ANAL_REF_TYPE_NULL		671731						
ANR	672187	Symbol	strncmp		671731						
ANR	672188	Symbol	entry -> paddr		671731						
ANR	672189	Symbol	fcni		671731						
ANR	672190	Symbol	symbol -> paddr		671731						
ANR	672191	Symbol	R_ANAL_FCN_TYPE_SYM		671731						
ANR	672192	Symbol	* symbol		671731						
ANR	672193	Symbol	core -> bin		671731						
ANR	672194	Symbol	item -> offset		671731						
ANR	672195	Symbol	core -> anal -> opt		671731						
ANR	672196	Symbol	entry -> vaddr		671731						
ANR	672197	Symbol	item		671731						
ANR	672198	Symbol	NULL		671731						
ANR	672199	Symbol	iter		671731						
ANR	672200	Symbol	r_bin_get_sym		671731						
ANR	672201	Symbol	list		671731						
ANR	672202	Symbol	core		671731						
ANR	672203	Symbol	entry		671731						
ANR	672204	Symbol	R_BIN_SYM_MAIN		671731						
ANR	672205	Symbol	r_config_get_i		671731						
ANR	672206	Symbol	true		671731						
ANR	672207	Symbol	* binmain		671731						
ANR	672208	Symbol	isDllImport		671731						
ANR	672209	Symbol	symbol -> vaddr		671731						
ANR	672210	Symbol	* core		671731						
ANR	672211	Symbol	core -> anal		671731						
ANR	672212	Symbol	binmain		671731						
ANR	672213	Symbol	r_cons_is_breaked		671731						
ANR	672214	Symbol	* item		671731						
ANR	672215	Symbol	anal_vars		671731						
ANR	672216	Symbol	addr		671731						
ANR	672217	Symbol	UT64_MAX		671731						
ANR	672218	Symbol	binmain -> vaddr		671731						
ANR	672219	Symbol	fcni -> type		671731						
ANR	672220	Symbol	* * core		671731						
ANR	672221	Symbol	* entry		671731						
ANR	672222	Symbol	core -> config		671731						
ANR	672223	Symbol	r_flag_get		671731						
ANR	672224	Symbol	core -> anal -> opt . depth		671731						
ANR	672225	Symbol	core -> flags		671731						
ANR	672226	Symbol	isValidSymbol		671731						
ANR	672227	Symbol	r_bin_get_vaddr		671731						
ANR	672228	Symbol	* fcni		671731						
ANR	672229	Symbol	depth		671731						
ANR	672230	Symbol	* core -> anal		671731						
ANR	672231	Symbol	r_bin_get_symbols		671731						
ANR	672232	Symbol	binmain -> paddr		671731						
ANR	672233	Function	r_core_anal_data	4067:0:124145:125696							
ANR	672234	FunctionDef	"r_core_anal_data (RCore * core , ut64 addr , int count , int depth , int wordsize)"		672233	0					
ANR	672235	CompoundStatement		4067:87:124232:125696	672233	0					
ANR	672236	IdentifierDeclStatement	RAnalData * d ;	4068:1:124235:124247	672233	0	True				
ANR	672237	IdentifierDecl	* d		672233	0					
ANR	672238	IdentifierDeclType	RAnalData *		672233	0					
ANR	672239	Identifier	d		672233	1					
ANR	672240	Statement	ut64	4069:1:124250:124253	672233	1	True				
ANR	672241	Statement	dstaddr	4069:6:124255:124261	672233	2	True				
ANR	672242	Statement	=	4069:14:124263:124263	672233	3	True				
ANR	672243	Statement	0L	4069:16:124265:124266	672233	4	True				
ANR	672244	ExpressionStatement	L	4069:18:124267:124268	672233	5	True				
ANR	672245	Identifier	L		672233	0					
ANR	672246	IdentifierDeclStatement	ut8 * buf = core -> block ;	4070:1:124271:124293	672233	6	True				
ANR	672247	IdentifierDecl	* buf = core -> block		672233	0					
ANR	672248	IdentifierDeclType	ut8 *		672233	0					
ANR	672249	Identifier	buf		672233	1					
ANR	672250	AssignmentExpression	* buf = core -> block		672233	2		=			
ANR	672251	Identifier	buf		672233	0					
ANR	672252	PtrMemberAccess	core -> block		672233	1					
ANR	672253	Identifier	core		672233	0					
ANR	672254	Identifier	block		672233	1					
ANR	672255	IdentifierDeclStatement	int len = core -> blocksize ;	4071:1:124296:124321	672233	7	True				
ANR	672256	IdentifierDecl	len = core -> blocksize		672233	0					
ANR	672257	IdentifierDeclType	int		672233	0					
ANR	672258	Identifier	len		672233	1					
ANR	672259	AssignmentExpression	len = core -> blocksize		672233	2		=			
ANR	672260	Identifier	len		672233	0					
ANR	672261	PtrMemberAccess	core -> blocksize		672233	1					
ANR	672262	Identifier	core		672233	0					
ANR	672263	Identifier	blocksize		672233	1					
ANR	672264	IdentifierDeclStatement	int word = wordsize ? wordsize : core -> assembler -> bits / 8 ;	4072:1:124324:124381	672233	8	True				
ANR	672265	IdentifierDecl	word = wordsize ? wordsize : core -> assembler -> bits / 8		672233	0					
ANR	672266	IdentifierDeclType	int		672233	0					
ANR	672267	Identifier	word		672233	1					
ANR	672268	AssignmentExpression	word = wordsize ? wordsize : core -> assembler -> bits / 8		672233	2		=			
ANR	672269	Identifier	word		672233	0					
ANR	672270	ConditionalExpression	wordsize ? wordsize : core -> assembler -> bits / 8		672233	1					
ANR	672271	Condition	wordsize		672233	0					
ANR	672272	Identifier	wordsize		672233	0					
ANR	672273	Identifier	wordsize		672233	1					
ANR	672274	MultiplicativeExpression	core -> assembler -> bits / 8		672233	2		/			
ANR	672275	PtrMemberAccess	core -> assembler -> bits		672233	0					
ANR	672276	PtrMemberAccess	core -> assembler		672233	0					
ANR	672277	Identifier	core		672233	0					
ANR	672278	Identifier	assembler		672233	1					
ANR	672279	Identifier	bits		672233	1					
ANR	672280	PrimaryExpression	8		672233	1					
ANR	672281	IdentifierDeclStatement	char * str ;	4073:1:124384:124393	672233	9	True				
ANR	672282	IdentifierDecl	* str		672233	0					
ANR	672283	IdentifierDeclType	char *		672233	0					
ANR	672284	Identifier	str		672233	1					
ANR	672285	IdentifierDeclStatement	"int i , j ;"	4074:1:124396:124404	672233	10	True				
ANR	672286	IdentifierDecl	i		672233	0					
ANR	672287	IdentifierDeclType	int		672233	0					
ANR	672288	Identifier	i		672233	1					
ANR	672289	IdentifierDecl	j		672233	1					
ANR	672290	IdentifierDeclType	int		672233	0					
ANR	672291	Identifier	j		672233	1					
ANR	672292	ExpressionStatement	"count = R_MIN ( count , len )"	4076:1:124408:124434	672233	11	True				
ANR	672293	AssignmentExpression	"count = R_MIN ( count , len )"		672233	0		=			
ANR	672294	Identifier	count		672233	0					
ANR	672295	CallExpression	"R_MIN ( count , len )"		672233	1					
ANR	672296	Callee	R_MIN		672233	0					
ANR	672297	Identifier	R_MIN		672233	0					
ANR	672298	ArgumentList	count		672233	1					
ANR	672299	Argument	count		672233	0					
ANR	672300	Identifier	count		672233	0					
ANR	672301	Argument	len		672233	1					
ANR	672302	Identifier	len		672233	0					
ANR	672303	ExpressionStatement	buf = malloc ( len + 1 )	4077:1:124437:124459	672233	12	True				
ANR	672304	AssignmentExpression	buf = malloc ( len + 1 )		672233	0		=			
ANR	672305	Identifier	buf		672233	0					
ANR	672306	CallExpression	malloc ( len + 1 )		672233	1					
ANR	672307	Callee	malloc		672233	0					
ANR	672308	Identifier	malloc		672233	0					
ANR	672309	ArgumentList	len + 1		672233	1					
ANR	672310	Argument	len + 1		672233	0					
ANR	672311	AdditiveExpression	len + 1		672233	0		+			
ANR	672312	Identifier	len		672233	0					
ANR	672313	PrimaryExpression	1		672233	1					
ANR	672314	IfStatement	if ( ! buf )		672233	13					
ANR	672315	Condition	! buf	4078:5:124466:124469	672233	0	True				
ANR	672316	UnaryOperationExpression	! buf		672233	0					
ANR	672317	UnaryOperator	!		672233	0					
ANR	672318	Identifier	buf		672233	1					
ANR	672319	CompoundStatement		12:11:239:239	672233	1					
ANR	672320	ReturnStatement	return false ;	4079:2:124476:124488	672233	0	True				
ANR	672321	Identifier	false		672233	0					
ANR	672322	ExpressionStatement	"memset ( buf , 0xff , len )"	4081:1:124494:124517	672233	14	True				
ANR	672323	CallExpression	"memset ( buf , 0xff , len )"		672233	0					
ANR	672324	Callee	memset		672233	0					
ANR	672325	Identifier	memset		672233	0					
ANR	672326	ArgumentList	buf		672233	1					
ANR	672327	Argument	buf		672233	0					
ANR	672328	Identifier	buf		672233	0					
ANR	672329	Argument	0xff		672233	1					
ANR	672330	PrimaryExpression	0xff		672233	0					
ANR	672331	Argument	len		672233	2					
ANR	672332	Identifier	len		672233	0					
ANR	672333	ExpressionStatement	"r_io_read_at ( core -> io , addr , buf , len )"	4082:1:124520:124559	672233	15	True				
ANR	672334	CallExpression	"r_io_read_at ( core -> io , addr , buf , len )"		672233	0					
ANR	672335	Callee	r_io_read_at		672233	0					
ANR	672336	Identifier	r_io_read_at		672233	0					
ANR	672337	ArgumentList	core -> io		672233	1					
ANR	672338	Argument	core -> io		672233	0					
ANR	672339	PtrMemberAccess	core -> io		672233	0					
ANR	672340	Identifier	core		672233	0					
ANR	672341	Identifier	io		672233	1					
ANR	672342	Argument	addr		672233	1					
ANR	672343	Identifier	addr		672233	0					
ANR	672344	Argument	buf		672233	2					
ANR	672345	Identifier	buf		672233	0					
ANR	672346	Argument	len		672233	3					
ANR	672347	Identifier	len		672233	0					
ANR	672348	ExpressionStatement	buf [ len - 1 ] = 0	4083:1:124562:124578	672233	16	True				
ANR	672349	AssignmentExpression	buf [ len - 1 ] = 0		672233	0		=			
ANR	672350	ArrayIndexing	buf [ len - 1 ]		672233	0					
ANR	672351	Identifier	buf		672233	0					
ANR	672352	AdditiveExpression	len - 1		672233	1		-			
ANR	672353	Identifier	len		672233	0					
ANR	672354	PrimaryExpression	1		672233	1					
ANR	672355	PrimaryExpression	0		672233	1					
ANR	672356	IdentifierDeclStatement	"RConsPrintablePalette * pal = r_config_get_i ( core -> config , ""scr.color"" ) ? & r_cons_singleton ( ) -> context -> pal : NULL ;"	4085:1:124582:124695	672233	17	True				
ANR	672357	IdentifierDecl	"* pal = r_config_get_i ( core -> config , ""scr.color"" ) ? & r_cons_singleton ( ) -> context -> pal : NULL"		672233	0					
ANR	672358	IdentifierDeclType	RConsPrintablePalette *		672233	0					
ANR	672359	Identifier	pal		672233	1					
ANR	672360	AssignmentExpression	"* pal = r_config_get_i ( core -> config , ""scr.color"" ) ? & r_cons_singleton ( ) -> context -> pal : NULL"		672233	2		=			
ANR	672361	Identifier	pal		672233	0					
ANR	672362	ConditionalExpression	"r_config_get_i ( core -> config , ""scr.color"" ) ? & r_cons_singleton ( ) -> context -> pal : NULL"		672233	1					
ANR	672363	Condition	"r_config_get_i ( core -> config , ""scr.color"" )"		672233	0					
ANR	672364	CallExpression	"r_config_get_i ( core -> config , ""scr.color"" )"		672233	0					
ANR	672365	Callee	r_config_get_i		672233	0					
ANR	672366	Identifier	r_config_get_i		672233	0					
ANR	672367	ArgumentList	core -> config		672233	1					
ANR	672368	Argument	core -> config		672233	0					
ANR	672369	PtrMemberAccess	core -> config		672233	0					
ANR	672370	Identifier	core		672233	0					
ANR	672371	Identifier	config		672233	1					
ANR	672372	Argument	"""scr.color"""		672233	1					
ANR	672373	PrimaryExpression	"""scr.color"""		672233	0					
ANR	672374	UnaryOperationExpression	& r_cons_singleton ( ) -> context -> pal		672233	1					
ANR	672375	UnaryOperator	&		672233	0					
ANR	672376	PtrMemberAccess	r_cons_singleton ( ) -> context -> pal		672233	1					
ANR	672377	PtrMemberAccess	r_cons_singleton ( ) -> context		672233	0					
ANR	672378	CallExpression	r_cons_singleton ( )		672233	0					
ANR	672379	Callee	r_cons_singleton		672233	0					
ANR	672380	Identifier	r_cons_singleton		672233	0					
ANR	672381	ArgumentList			672233	1					
ANR	672382	Identifier	context		672233	1					
ANR	672383	Identifier	pal		672233	1					
ANR	672384	Identifier	NULL		672233	2					
ANR	672385	ForStatement	for ( i = j = 0 ; j < count ; j ++ )		672233	18					
ANR	672386	ForInit	i = j = 0 ;	4086:6:124703:124712	672233	0	True				
ANR	672387	AssignmentExpression	i = j = 0		672233	0		=			
ANR	672388	Identifier	i		672233	0					
ANR	672389	AssignmentExpression	j = 0		672233	1		=			
ANR	672390	Identifier	j		672233	0					
ANR	672391	PrimaryExpression	0		672233	1					
ANR	672392	Condition	j < count	4086:17:124714:124722	672233	1	True				
ANR	672393	RelationalExpression	j < count		672233	0		<			
ANR	672394	Identifier	j		672233	0					
ANR	672395	Identifier	count		672233	1					
ANR	672396	PostIncDecOperationExpression	j ++	4086:28:124725:124727	672233	2	True				
ANR	672397	Identifier	j		672233	0					
ANR	672398	IncDec	++		672233	1					
ANR	672399	CompoundStatement		20:33:497:497	672233	3					
ANR	672400	IfStatement	if ( i >= len )		672233	0					
ANR	672401	Condition	i >= len	4087:6:124738:124745	672233	0	True				
ANR	672402	RelationalExpression	i >= len		672233	0		>=			
ANR	672403	Identifier	i		672233	0					
ANR	672404	Identifier	len		672233	1					
ANR	672405	CompoundStatement		21:16:515:515	672233	1					
ANR	672406	ExpressionStatement	"r_io_read_at ( core -> io , addr + i , buf , len )"	4088:3:124753:124796	672233	0	True				
ANR	672407	CallExpression	"r_io_read_at ( core -> io , addr + i , buf , len )"		672233	0					
ANR	672408	Callee	r_io_read_at		672233	0					
ANR	672409	Identifier	r_io_read_at		672233	0					
ANR	672410	ArgumentList	core -> io		672233	1					
ANR	672411	Argument	core -> io		672233	0					
ANR	672412	PtrMemberAccess	core -> io		672233	0					
ANR	672413	Identifier	core		672233	0					
ANR	672414	Identifier	io		672233	1					
ANR	672415	Argument	addr + i		672233	1					
ANR	672416	AdditiveExpression	addr + i		672233	0		+			
ANR	672417	Identifier	addr		672233	0					
ANR	672418	Identifier	i		672233	1					
ANR	672419	Argument	buf		672233	2					
ANR	672420	Identifier	buf		672233	0					
ANR	672421	Argument	len		672233	3					
ANR	672422	Identifier	len		672233	0					
ANR	672423	ExpressionStatement	buf [ len ] = 0	4089:3:124801:124813	672233	1	True				
ANR	672424	AssignmentExpression	buf [ len ] = 0		672233	0		=			
ANR	672425	ArrayIndexing	buf [ len ]		672233	0					
ANR	672426	Identifier	buf		672233	0					
ANR	672427	Identifier	len		672233	1					
ANR	672428	PrimaryExpression	0		672233	1					
ANR	672429	ExpressionStatement	addr += i	4090:3:124818:124827	672233	2	True				
ANR	672430	AssignmentExpression	addr += i		672233	0		+=			
ANR	672431	Identifier	addr		672233	0					
ANR	672432	Identifier	i		672233	1					
ANR	672433	ExpressionStatement	i = 0	4091:3:124832:124837	672233	3	True				
ANR	672434	AssignmentExpression	i = 0		672233	0		=			
ANR	672435	Identifier	i		672233	0					
ANR	672436	PrimaryExpression	0		672233	1					
ANR	672437	ContinueStatement	continue ;	4092:3:124842:124850	672233	4	True				
ANR	672438	ExpressionStatement	"d = r_anal_data ( core -> anal , addr + i , buf + i , len - i , wordsize )"	4097:2:125038:125104	672233	1	True				
ANR	672439	AssignmentExpression	"d = r_anal_data ( core -> anal , addr + i , buf + i , len - i , wordsize )"		672233	0		=			
ANR	672440	Identifier	d		672233	0					
ANR	672441	CallExpression	"r_anal_data ( core -> anal , addr + i , buf + i , len - i , wordsize )"		672233	1					
ANR	672442	Callee	r_anal_data		672233	0					
ANR	672443	Identifier	r_anal_data		672233	0					
ANR	672444	ArgumentList	core -> anal		672233	1					
ANR	672445	Argument	core -> anal		672233	0					
ANR	672446	PtrMemberAccess	core -> anal		672233	0					
ANR	672447	Identifier	core		672233	0					
ANR	672448	Identifier	anal		672233	1					
ANR	672449	Argument	addr + i		672233	1					
ANR	672450	AdditiveExpression	addr + i		672233	0		+			
ANR	672451	Identifier	addr		672233	0					
ANR	672452	Identifier	i		672233	1					
ANR	672453	Argument	buf + i		672233	2					
ANR	672454	AdditiveExpression	buf + i		672233	0		+			
ANR	672455	Identifier	buf		672233	0					
ANR	672456	Identifier	i		672233	1					
ANR	672457	Argument	len - i		672233	3					
ANR	672458	AdditiveExpression	len - i		672233	0		-			
ANR	672459	Identifier	len		672233	0					
ANR	672460	Identifier	i		672233	1					
ANR	672461	Argument	wordsize		672233	4					
ANR	672462	Identifier	wordsize		672233	0					
ANR	672463	ExpressionStatement	"str = r_anal_data_to_string ( d , pal )"	4098:2:125108:125144	672233	2	True				
ANR	672464	AssignmentExpression	"str = r_anal_data_to_string ( d , pal )"		672233	0		=			
ANR	672465	Identifier	str		672233	0					
ANR	672466	CallExpression	"r_anal_data_to_string ( d , pal )"		672233	1					
ANR	672467	Callee	r_anal_data_to_string		672233	0					
ANR	672468	Identifier	r_anal_data_to_string		672233	0					
ANR	672469	ArgumentList	d		672233	1					
ANR	672470	Argument	d		672233	0					
ANR	672471	Identifier	d		672233	0					
ANR	672472	Argument	pal		672233	1					
ANR	672473	Identifier	pal		672233	0					
ANR	672474	ExpressionStatement	r_cons_println ( str )	4099:2:125148:125168	672233	3	True				
ANR	672475	CallExpression	r_cons_println ( str )		672233	0					
ANR	672476	Callee	r_cons_println		672233	0					
ANR	672477	Identifier	r_cons_println		672233	0					
ANR	672478	ArgumentList	str		672233	1					
ANR	672479	Argument	str		672233	0					
ANR	672480	Identifier	str		672233	0					
ANR	672481	IfStatement	if ( d )		672233	4					
ANR	672482	Condition	d	4101:6:125177:125177	672233	0	True				
ANR	672483	Identifier	d		672233	0					
ANR	672484	CompoundStatement		35:9:947:947	672233	1					
ANR	672485	SwitchStatement	switch ( d -> type )		672233	0					
ANR	672486	Condition	d -> type	4102:11:125193:125199	672233	0	True				
ANR	672487	PtrMemberAccess	d -> type		672233	0					
ANR	672488	Identifier	d		672233	0					
ANR	672489	Identifier	type		672233	1					
ANR	672490	CompoundStatement		36:20:969:969	672233	1					
ANR	672491	Label	case R_ANAL_DATA_TYPE_POINTER :	4103:3:125207:125236	672233	0	True				
ANR	672492	Identifier	R_ANAL_DATA_TYPE_POINTER		672233	0					
ANR	672493	ExpressionStatement	"r_cons_printf ( ""`- "" )"	4104:4:125242:125263	672233	1	True				
ANR	672494	CallExpression	"r_cons_printf ( ""`- "" )"		672233	0					
ANR	672495	Callee	r_cons_printf		672233	0					
ANR	672496	Identifier	r_cons_printf		672233	0					
ANR	672497	ArgumentList	"""`- """		672233	1					
ANR	672498	Argument	"""`- """		672233	0					
ANR	672499	PrimaryExpression	"""`- """		672233	0					
ANR	672500	ExpressionStatement	"dstaddr = r_mem_get_num ( buf + i , word )"	4105:4:125269:125308	672233	2	True				
ANR	672501	AssignmentExpression	"dstaddr = r_mem_get_num ( buf + i , word )"		672233	0		=			
ANR	672502	Identifier	dstaddr		672233	0					
ANR	672503	CallExpression	"r_mem_get_num ( buf + i , word )"		672233	1					
ANR	672504	Callee	r_mem_get_num		672233	0					
ANR	672505	Identifier	r_mem_get_num		672233	0					
ANR	672506	ArgumentList	buf + i		672233	1					
ANR	672507	Argument	buf + i		672233	0					
ANR	672508	AdditiveExpression	buf + i		672233	0		+			
ANR	672509	Identifier	buf		672233	0					
ANR	672510	Identifier	i		672233	1					
ANR	672511	Argument	word		672233	1					
ANR	672512	Identifier	word		672233	0					
ANR	672513	IfStatement	if ( depth > 0 )		672233	3					
ANR	672514	Condition	depth > 0	4106:8:125318:125326	672233	0	True				
ANR	672515	RelationalExpression	depth > 0		672233	0		>			
ANR	672516	Identifier	depth		672233	0					
ANR	672517	PrimaryExpression	0		672233	1					
ANR	672518	CompoundStatement		40:19:1096:1096	672233	1					
ANR	672519	ExpressionStatement	"r_core_anal_data ( core , dstaddr , 1 , depth - 1 , wordsize )"	4107:5:125336:125392	672233	0	True				
ANR	672520	CallExpression	"r_core_anal_data ( core , dstaddr , 1 , depth - 1 , wordsize )"		672233	0					
ANR	672521	Callee	r_core_anal_data		672233	0					
ANR	672522	Identifier	r_core_anal_data		672233	0					
ANR	672523	ArgumentList	core		672233	1					
ANR	672524	Argument	core		672233	0					
ANR	672525	Identifier	core		672233	0					
ANR	672526	Argument	dstaddr		672233	1					
ANR	672527	Identifier	dstaddr		672233	0					
ANR	672528	Argument	1		672233	2					
ANR	672529	PrimaryExpression	1		672233	0					
ANR	672530	Argument	depth - 1		672233	3					
ANR	672531	AdditiveExpression	depth - 1		672233	0		-			
ANR	672532	Identifier	depth		672233	0					
ANR	672533	PrimaryExpression	1		672233	1					
ANR	672534	Argument	wordsize		672233	4					
ANR	672535	Identifier	wordsize		672233	0					
ANR	672536	ExpressionStatement	i += word	4109:4:125404:125413	672233	4	True				
ANR	672537	AssignmentExpression	i += word		672233	0		+=			
ANR	672538	Identifier	i		672233	0					
ANR	672539	Identifier	word		672233	1					
ANR	672540	BreakStatement	break ;	4110:4:125419:125424	672233	5	True				
ANR	672541	Label	case R_ANAL_DATA_TYPE_STRING :	4111:3:125429:125457	672233	6	True				
ANR	672542	Identifier	R_ANAL_DATA_TYPE_STRING		672233	0					
ANR	672543	ExpressionStatement	buf [ len - 1 ] = 0	4112:4:125463:125477	672233	7	True				
ANR	672544	AssignmentExpression	buf [ len - 1 ] = 0		672233	0		=			
ANR	672545	ArrayIndexing	buf [ len - 1 ]		672233	0					
ANR	672546	Identifier	buf		672233	0					
ANR	672547	AdditiveExpression	len - 1		672233	1		-			
ANR	672548	Identifier	len		672233	0					
ANR	672549	PrimaryExpression	1		672233	1					
ANR	672550	PrimaryExpression	0		672233	1					
ANR	672551	ExpressionStatement	i += strlen ( ( const char * ) buf + i ) + 1	4113:4:125483:125521	672233	8	True				
ANR	672552	AssignmentExpression	i += strlen ( ( const char * ) buf + i ) + 1		672233	0		+=			
ANR	672553	Identifier	i		672233	0					
ANR	672554	AdditiveExpression	strlen ( ( const char * ) buf + i ) + 1		672233	1		+			
ANR	672555	CallExpression	strlen ( ( const char * ) buf + i )		672233	0					
ANR	672556	Callee	strlen		672233	0					
ANR	672557	Identifier	strlen		672233	0					
ANR	672558	ArgumentList	( const char * ) buf + i		672233	1					
ANR	672559	Argument	( const char * ) buf + i		672233	0					
ANR	672560	AdditiveExpression	( const char * ) buf + i		672233	0		+			
ANR	672561	CastExpression	( const char * ) buf		672233	0					
ANR	672562	CastTarget	const char *		672233	0					
ANR	672563	Identifier	buf		672233	1					
ANR	672564	Identifier	i		672233	1					
ANR	672565	PrimaryExpression	1		672233	1					
ANR	672566	BreakStatement	break ;	4114:4:125527:125532	672233	9	True				
ANR	672567	Label	default :	4115:3:125537:125544	672233	10	True				
ANR	672568	Identifier	default		672233	0					
ANR	672569	ExpressionStatement	i += ( d -> len > 3 ) ? d -> len : word	4116:4:125550:125581	672233	11	True				
ANR	672570	AssignmentExpression	i += ( d -> len > 3 ) ? d -> len : word		672233	0		+=			
ANR	672571	Identifier	i		672233	0					
ANR	672572	ConditionalExpression	( d -> len > 3 ) ? d -> len : word		672233	1					
ANR	672573	Condition	d -> len > 3		672233	0					
ANR	672574	RelationalExpression	d -> len > 3		672233	0		>			
ANR	672575	PtrMemberAccess	d -> len		672233	0					
ANR	672576	Identifier	d		672233	0					
ANR	672577	Identifier	len		672233	1					
ANR	672578	PrimaryExpression	3		672233	1					
ANR	672579	PtrMemberAccess	d -> len		672233	1					
ANR	672580	Identifier	d		672233	0					
ANR	672581	Identifier	len		672233	1					
ANR	672582	Identifier	word		672233	2					
ANR	672583	BreakStatement	break ;	4117:4:125587:125592	672233	12	True				
ANR	672584	ElseStatement	else		672233	0					
ANR	672585	CompoundStatement		53:9:1375:1375	672233	0					
ANR	672586	ExpressionStatement	i += word	4120:3:125613:125622	672233	0	True				
ANR	672587	AssignmentExpression	i += word		672233	0		+=			
ANR	672588	Identifier	i		672233	0					
ANR	672589	Identifier	word		672233	1					
ANR	672590	ExpressionStatement	free ( str )	4122:2:125630:125640	672233	5	True				
ANR	672591	CallExpression	free ( str )		672233	0					
ANR	672592	Callee	free		672233	0					
ANR	672593	Identifier	free		672233	0					
ANR	672594	ArgumentList	str		672233	1					
ANR	672595	Argument	str		672233	0					
ANR	672596	Identifier	str		672233	0					
ANR	672597	ExpressionStatement	r_anal_data_free ( d )	4123:2:125644:125664	672233	6	True				
ANR	672598	CallExpression	r_anal_data_free ( d )		672233	0					
ANR	672599	Callee	r_anal_data_free		672233	0					
ANR	672600	Identifier	r_anal_data_free		672233	0					
ANR	672601	ArgumentList	d		672233	1					
ANR	672602	Argument	d		672233	0					
ANR	672603	Identifier	d		672233	0					
ANR	672604	ExpressionStatement	free ( buf )	4125:1:125670:125680	672233	19	True				
ANR	672605	CallExpression	free ( buf )		672233	0					
ANR	672606	Callee	free		672233	0					
ANR	672607	Identifier	free		672233	0					
ANR	672608	ArgumentList	buf		672233	1					
ANR	672609	Argument	buf		672233	0					
ANR	672610	Identifier	buf		672233	0					
ANR	672611	ReturnStatement	return true ;	4126:1:125683:125694	672233	20	True				
ANR	672612	Identifier	true		672233	0					
ANR	672613	ReturnType	R_API int		672233	1					
ANR	672614	Identifier	r_core_anal_data		672233	2					
ANR	672615	ParameterList	"RCore * core , ut64 addr , int count , int depth , int wordsize"		672233	3					
ANR	672616	Parameter	RCore * core	4067:27:124172:124182	672233	0	True				
ANR	672617	ParameterType	RCore *		672233	0					
ANR	672618	Identifier	core		672233	1					
ANR	672619	Parameter	ut64 addr	4067:40:124185:124193	672233	1	True				
ANR	672620	ParameterType	ut64		672233	0					
ANR	672621	Identifier	addr		672233	1					
ANR	672622	Parameter	int count	4067:51:124196:124204	672233	2	True				
ANR	672623	ParameterType	int		672233	0					
ANR	672624	Identifier	count		672233	1					
ANR	672625	Parameter	int depth	4067:62:124207:124215	672233	3	True				
ANR	672626	ParameterType	int		672233	0					
ANR	672627	Identifier	depth		672233	1					
ANR	672628	Parameter	int wordsize	4067:73:124218:124229	672233	4	True				
ANR	672629	ParameterType	int		672233	0					
ANR	672630	Identifier	wordsize		672233	1					
ANR	672631	CFGEntryNode	ENTRY		672233		True				
ANR	672632	CFGExitNode	EXIT		672233		True				
ANR	672633	Symbol	* core		672233						
ANR	672634	Symbol	core -> assembler -> bits		672233						
ANR	672635	Symbol	core -> assembler		672233						
ANR	672636	Symbol	dstaddr		672233						
ANR	672637	Symbol	core -> anal		672233						
ANR	672638	Symbol	* core -> assembler		672233						
ANR	672639	Symbol	strlen		672233						
ANR	672640	Symbol	d -> type		672233						
ANR	672641	Symbol	len		672233						
ANR	672642	Symbol	core -> io		672233						
ANR	672643	Symbol	r_cons_singleton		672233						
ANR	672644	Symbol	pal		672233						
ANR	672645	Symbol	addr		672233						
ANR	672646	Symbol	r_anal_data		672233						
ANR	672647	Symbol	* * core		672233						
ANR	672648	Symbol	core -> blocksize		672233						
ANR	672649	Symbol	core -> config		672233						
ANR	672650	Symbol	malloc		672233						
ANR	672651	Symbol	* buf		672233						
ANR	672652	Symbol	d -> len		672233						
ANR	672653	Symbol	NULL		672233						
ANR	672654	Symbol	d		672233						
ANR	672655	Symbol	core -> block		672233						
ANR	672656	Symbol	count		672233						
ANR	672657	Symbol	false		672233						
ANR	672658	Symbol	i		672233						
ANR	672659	Symbol	j		672233						
ANR	672660	Symbol	R_MIN		672233						
ANR	672661	Symbol	r_anal_data_to_string		672233						
ANR	672662	Symbol	* d		672233						
ANR	672663	Symbol	str		672233						
ANR	672664	Symbol	core		672233						
ANR	672665	Symbol	buf		672233						
ANR	672666	Symbol	depth		672233						
ANR	672667	Symbol	& r_cons_singleton ( ) -> context -> pal		672233						
ANR	672668	Symbol	wordsize		672233						
ANR	672669	Symbol	r_config_get_i		672233						
ANR	672670	Symbol	true		672233						
ANR	672671	Symbol	r_mem_get_num		672233						
ANR	672672	Symbol	word		672233						
ANR	672673	Symbol	r_cons_singleton ( ) -> context		672233						
ANR	672674	Symbol	* r_cons_singleton		672233						
ANR	672675	Symbol	* len		672233						
ANR	672676	ClassDef	block_flags_stat_t	4129:0:125699:125772							
ANR	672677	DeclStmt									
ANR	672678	Decl							ut64	ut64	step
ANR	672679	DeclStmt									
ANR	672680	Decl							ut64	ut64	from
ANR	672681	DeclStmt									
ANR	672682	Decl							RCoreAnalStats	RCoreAnalStats *	as
ANR	672683	Function	block_flags_stat	4135:0:125776:125992							
ANR	672684	FunctionDef	"block_flags_stat (RFlagItem * fi , void * user)"		672683	0					
ANR	672685	CompoundStatement		4135:56:125832:125992	672683	0					
ANR	672686	IdentifierDeclStatement	struct block_flags_stat_t * u = ( struct block_flags_stat_t * ) user ;	4136:1:125835:125899	672683	0	True				
ANR	672687	IdentifierDecl	* u = ( struct block_flags_stat_t * ) user		672683	0					
ANR	672688	IdentifierDeclType	struct block_flags_stat_t *		672683	0					
ANR	672689	Identifier	u		672683	1					
ANR	672690	AssignmentExpression	* u = ( struct block_flags_stat_t * ) user		672683	2		=			
ANR	672691	Identifier	u		672683	0					
ANR	672692	CastExpression	( struct block_flags_stat_t * ) user		672683	1					
ANR	672693	CastTarget	struct block_flags_stat_t *		672683	0					
ANR	672694	Identifier	user		672683	1					
ANR	672695	IdentifierDeclStatement	int piece = ( fi -> offset - u -> from ) / u -> step ;	4137:1:125902:125946	672683	1	True				
ANR	672696	IdentifierDecl	piece = ( fi -> offset - u -> from ) / u -> step		672683	0					
ANR	672697	IdentifierDeclType	int		672683	0					
ANR	672698	Identifier	piece		672683	1					
ANR	672699	AssignmentExpression	piece = ( fi -> offset - u -> from ) / u -> step		672683	2		=			
ANR	672700	Identifier	piece		672683	0					
ANR	672701	MultiplicativeExpression	( fi -> offset - u -> from ) / u -> step		672683	1		/			
ANR	672702	AdditiveExpression	fi -> offset - u -> from		672683	0		-			
ANR	672703	PtrMemberAccess	fi -> offset		672683	0					
ANR	672704	Identifier	fi		672683	0					
ANR	672705	Identifier	offset		672683	1					
ANR	672706	PtrMemberAccess	u -> from		672683	1					
ANR	672707	Identifier	u		672683	0					
ANR	672708	Identifier	from		672683	1					
ANR	672709	PtrMemberAccess	u -> step		672683	1					
ANR	672710	Identifier	u		672683	0					
ANR	672711	Identifier	step		672683	1					
ANR	672712	ExpressionStatement	u -> as -> block [ piece ] . flags ++	4138:1:125949:125976	672683	2	True				
ANR	672713	PostIncDecOperationExpression	u -> as -> block [ piece ] . flags ++		672683	0					
ANR	672714	MemberAccess	u -> as -> block [ piece ] . flags		672683	0					
ANR	672715	ArrayIndexing	u -> as -> block [ piece ]		672683	0					
ANR	672716	PtrMemberAccess	u -> as -> block		672683	0					
ANR	672717	PtrMemberAccess	u -> as		672683	0					
ANR	672718	Identifier	u		672683	0					
ANR	672719	Identifier	as		672683	1					
ANR	672720	Identifier	block		672683	1					
ANR	672721	Identifier	piece		672683	1					
ANR	672722	Identifier	flags		672683	1					
ANR	672723	IncDec	++		672683	1					
ANR	672724	ReturnStatement	return true ;	4139:1:125979:125990	672683	3	True				
ANR	672725	Identifier	true		672683	0					
ANR	672726	ReturnType	static bool		672683	1					
ANR	672727	Identifier	block_flags_stat		672683	2					
ANR	672728	ParameterList	"RFlagItem * fi , void * user"		672683	3					
ANR	672729	Parameter	RFlagItem * fi	4135:29:125805:125817	672683	0	True				
ANR	672730	ParameterType	RFlagItem *		672683	0					
ANR	672731	Identifier	fi		672683	1					
ANR	672732	Parameter	void * user	4135:44:125820:125829	672683	1	True				
ANR	672733	ParameterType	void *		672683	0					
ANR	672734	Identifier	user		672683	1					
ANR	672735	CFGEntryNode	ENTRY		672683		True				
ANR	672736	CFGExitNode	EXIT		672683		True				
ANR	672737	Symbol	u -> as -> block [ piece ] . flags		672683						
ANR	672738	Symbol	fi		672683						
ANR	672739	Symbol	* piece		672683						
ANR	672740	Symbol	u -> as -> block		672683						
ANR	672741	Symbol	* fi		672683						
ANR	672742	Symbol	u -> from		672683						
ANR	672743	Symbol	* u -> as		672683						
ANR	672744	Symbol	* * * u		672683						
ANR	672745	Symbol	* u -> as -> block		672683						
ANR	672746	Symbol	* * u -> as		672683						
ANR	672747	Symbol	u		672683						
ANR	672748	Symbol	piece		672683						
ANR	672749	Symbol	* * u		672683						
ANR	672750	Symbol	fi -> offset		672683						
ANR	672751	Symbol	true		672683						
ANR	672752	Symbol	u -> step		672683						
ANR	672753	Symbol	u -> as		672683						
ANR	672754	Symbol	user		672683						
ANR	672755	Symbol	* u		672683						
ANR	672756	Function	r_core_anal_get_stats	4144:0:126050:128258							
ANR	672757	FunctionDef	"r_core_anal_get_stats (RCore * core , ut64 from , ut64 to , ut64 step)"		672756	0					
ANR	672758	CompoundStatement		4144:88:126138:128258	672756	0					
ANR	672759	IdentifierDeclStatement	RAnalFunction * F ;	4145:1:126141:126157	672756	0	True				
ANR	672760	IdentifierDecl	* F		672756	0					
ANR	672761	IdentifierDeclType	RAnalFunction *		672756	0					
ANR	672762	Identifier	F		672756	1					
ANR	672763	IdentifierDeclStatement	RAnalBlock * B ;	4146:1:126160:126174	672756	1	True				
ANR	672764	IdentifierDecl	* B		672756	0					
ANR	672765	IdentifierDeclType	RAnalBlock *		672756	0					
ANR	672766	Identifier	B		672756	1					
ANR	672767	IdentifierDeclStatement	RBinSymbol * S ;	4147:1:126177:126190	672756	2	True				
ANR	672768	IdentifierDecl	* S		672756	0					
ANR	672769	IdentifierDeclType	RBinSymbol *		672756	0					
ANR	672770	Identifier	S		672756	1					
ANR	672771	IdentifierDeclStatement	"RListIter * iter , * iter2 ;"	4148:1:126193:126216	672756	3	True				
ANR	672772	IdentifierDecl	* iter		672756	0					
ANR	672773	IdentifierDeclType	RListIter *		672756	0					
ANR	672774	Identifier	iter		672756	1					
ANR	672775	IdentifierDecl	* iter2		672756	1					
ANR	672776	IdentifierDeclType	RListIter *		672756	0					
ANR	672777	Identifier	iter2		672756	1					
ANR	672778	IdentifierDeclStatement	RCoreAnalStats * as = NULL ;	4149:1:126219:126244	672756	4	True				
ANR	672779	IdentifierDecl	* as = NULL		672756	0					
ANR	672780	IdentifierDeclType	RCoreAnalStats *		672756	0					
ANR	672781	Identifier	as		672756	1					
ANR	672782	AssignmentExpression	* as = NULL		672756	2		=			
ANR	672783	Identifier	NULL		672756	0					
ANR	672784	Identifier	NULL		672756	1					
ANR	672785	IdentifierDeclStatement	"int piece , as_size , blocks ;"	4150:1:126247:126273	672756	5	True				
ANR	672786	IdentifierDecl	piece		672756	0					
ANR	672787	IdentifierDeclType	int		672756	0					
ANR	672788	Identifier	piece		672756	1					
ANR	672789	IdentifierDecl	as_size		672756	1					
ANR	672790	IdentifierDeclType	int		672756	0					
ANR	672791	Identifier	as_size		672756	1					
ANR	672792	IdentifierDecl	blocks		672756	2					
ANR	672793	IdentifierDeclType	int		672756	0					
ANR	672794	Identifier	blocks		672756	1					
ANR	672795	IdentifierDeclStatement	ut64 at ;	4151:1:126276:126283	672756	6	True				
ANR	672796	IdentifierDecl	at		672756	0					
ANR	672797	IdentifierDeclType	ut64		672756	0					
ANR	672798	Identifier	at		672756	1					
ANR	672799	IfStatement	if ( from == to || from == UT64_MAX || to == UT64_MAX )		672756	7					
ANR	672800	Condition	from == to || from == UT64_MAX || to == UT64_MAX	4153:5:126291:126338	672756	0	True				
ANR	672801	OrExpression	from == to || from == UT64_MAX || to == UT64_MAX		672756	0		||			
ANR	672802	EqualityExpression	from == to		672756	0		==			
ANR	672803	Identifier	from		672756	0					
ANR	672804	Identifier	to		672756	1					
ANR	672805	OrExpression	from == UT64_MAX || to == UT64_MAX		672756	1		||			
ANR	672806	EqualityExpression	from == UT64_MAX		672756	0		==			
ANR	672807	Identifier	from		672756	0					
ANR	672808	Identifier	UT64_MAX		672756	1					
ANR	672809	EqualityExpression	to == UT64_MAX		672756	1		==			
ANR	672810	Identifier	to		672756	0					
ANR	672811	Identifier	UT64_MAX		672756	1					
ANR	672812	CompoundStatement		10:55:202:202	672756	1					
ANR	672813	ExpressionStatement	"eprintf ( ""Cannot alloc for this range\\n"" )"	4154:2:126345:126386	672756	0	True				
ANR	672814	CallExpression	"eprintf ( ""Cannot alloc for this range\\n"" )"		672756	0					
ANR	672815	Callee	eprintf		672756	0					
ANR	672816	Identifier	eprintf		672756	0					
ANR	672817	ArgumentList	"""Cannot alloc for this range\\n"""		672756	1					
ANR	672818	Argument	"""Cannot alloc for this range\\n"""		672756	0					
ANR	672819	PrimaryExpression	"""Cannot alloc for this range\\n"""		672756	0					
ANR	672820	ReturnStatement	return NULL ;	4155:2:126390:126401	672756	1	True				
ANR	672821	Identifier	NULL		672756	0					
ANR	672822	ExpressionStatement	as = R_NEW0 ( RCoreAnalStats )	4157:1:126407:126435	672756	8	True				
ANR	672823	AssignmentExpression	as = R_NEW0 ( RCoreAnalStats )		672756	0		=			
ANR	672824	Identifier	as		672756	0					
ANR	672825	CallExpression	R_NEW0 ( RCoreAnalStats )		672756	1					
ANR	672826	Callee	R_NEW0		672756	0					
ANR	672827	Identifier	R_NEW0		672756	0					
ANR	672828	ArgumentList	RCoreAnalStats		672756	1					
ANR	672829	Argument	RCoreAnalStats		672756	0					
ANR	672830	Identifier	RCoreAnalStats		672756	0					
ANR	672831	IfStatement	if ( ! as )		672756	9					
ANR	672832	Condition	! as	4158:5:126442:126444	672756	0	True				
ANR	672833	UnaryOperationExpression	! as		672756	0					
ANR	672834	UnaryOperator	!		672756	0					
ANR	672835	Identifier	as		672756	1					
ANR	672836	CompoundStatement		15:10:308:308	672756	1					
ANR	672837	ReturnStatement	return NULL ;	4159:2:126451:126462	672756	0	True				
ANR	672838	Identifier	NULL		672756	0					
ANR	672839	IfStatement	if ( step < 1 )		672756	10					
ANR	672840	Condition	step < 1	4161:5:126472:126479	672756	0	True				
ANR	672841	RelationalExpression	step < 1		672756	0		<			
ANR	672842	Identifier	step		672756	0					
ANR	672843	PrimaryExpression	1		672756	1					
ANR	672844	CompoundStatement		18:15:343:343	672756	1					
ANR	672845	ExpressionStatement	step = 1	4162:2:126486:126494	672756	0	True				
ANR	672846	AssignmentExpression	step = 1		672756	0		=			
ANR	672847	Identifier	step		672756	0					
ANR	672848	PrimaryExpression	1		672756	1					
ANR	672849	ExpressionStatement	blocks = ( to - from ) / step	4164:1:126500:126527	672756	11	True				
ANR	672850	AssignmentExpression	blocks = ( to - from ) / step		672756	0		=			
ANR	672851	Identifier	blocks		672756	0					
ANR	672852	MultiplicativeExpression	( to - from ) / step		672756	1		/			
ANR	672853	AdditiveExpression	to - from		672756	0		-			
ANR	672854	Identifier	to		672756	0					
ANR	672855	Identifier	from		672756	1					
ANR	672856	Identifier	step		672756	1					
ANR	672857	ExpressionStatement	as_size = ( 1 + blocks ) * sizeof ( RCoreAnalStatsItem )	4165:1:126530:126582	672756	12	True				
ANR	672858	AssignmentExpression	as_size = ( 1 + blocks ) * sizeof ( RCoreAnalStatsItem )		672756	0		=			
ANR	672859	Identifier	as_size		672756	0					
ANR	672860	MultiplicativeExpression	( 1 + blocks ) * sizeof ( RCoreAnalStatsItem )		672756	1		*			
ANR	672861	AdditiveExpression	1 + blocks		672756	0		+			
ANR	672862	PrimaryExpression	1		672756	0					
ANR	672863	Identifier	blocks		672756	1					
ANR	672864	SizeofExpression	sizeof ( RCoreAnalStatsItem )		672756	1					
ANR	672865	Sizeof	sizeof		672756	0					
ANR	672866	SizeofOperand	RCoreAnalStatsItem		672756	1					
ANR	672867	ExpressionStatement	as -> block = malloc ( as_size )	4166:1:126585:126613	672756	13	True				
ANR	672868	AssignmentExpression	as -> block = malloc ( as_size )		672756	0		=			
ANR	672869	PtrMemberAccess	as -> block		672756	0					
ANR	672870	Identifier	as		672756	0					
ANR	672871	Identifier	block		672756	1					
ANR	672872	CallExpression	malloc ( as_size )		672756	1					
ANR	672873	Callee	malloc		672756	0					
ANR	672874	Identifier	malloc		672756	0					
ANR	672875	ArgumentList	as_size		672756	1					
ANR	672876	Argument	as_size		672756	0					
ANR	672877	Identifier	as_size		672756	0					
ANR	672878	IfStatement	if ( ! as -> block )		672756	14					
ANR	672879	Condition	! as -> block	4167:5:126620:126629	672756	0	True				
ANR	672880	UnaryOperationExpression	! as -> block		672756	0					
ANR	672881	UnaryOperator	!		672756	0					
ANR	672882	PtrMemberAccess	as -> block		672756	1					
ANR	672883	Identifier	as		672756	0					
ANR	672884	Identifier	block		672756	1					
ANR	672885	CompoundStatement		24:17:493:493	672756	1					
ANR	672886	ExpressionStatement	free ( as )	4168:2:126636:126645	672756	0	True				
ANR	672887	CallExpression	free ( as )		672756	0					
ANR	672888	Callee	free		672756	0					
ANR	672889	Identifier	free		672756	0					
ANR	672890	ArgumentList	as		672756	1					
ANR	672891	Argument	as		672756	0					
ANR	672892	Identifier	as		672756	0					
ANR	672893	ReturnStatement	return NULL ;	4169:2:126649:126660	672756	1	True				
ANR	672894	Identifier	NULL		672756	0					
ANR	672895	ExpressionStatement	"memset ( as -> block , 0 , as_size )"	4171:1:126666:126696	672756	15	True				
ANR	672896	CallExpression	"memset ( as -> block , 0 , as_size )"		672756	0					
ANR	672897	Callee	memset		672756	0					
ANR	672898	Identifier	memset		672756	0					
ANR	672899	ArgumentList	as -> block		672756	1					
ANR	672900	Argument	as -> block		672756	0					
ANR	672901	PtrMemberAccess	as -> block		672756	0					
ANR	672902	Identifier	as		672756	0					
ANR	672903	Identifier	block		672756	1					
ANR	672904	Argument	0		672756	1					
ANR	672905	PrimaryExpression	0		672756	0					
ANR	672906	Argument	as_size		672756	2					
ANR	672907	Identifier	as_size		672756	0					
ANR	672908	ForStatement	for ( at = from ; at < to ; at += step )		672756	16					
ANR	672909	ForInit	at = from ;	4172:6:126704:126713	672756	0	True				
ANR	672910	AssignmentExpression	at = from		672756	0		=			
ANR	672911	Identifier	at		672756	0					
ANR	672912	Identifier	from		672756	1					
ANR	672913	Condition	at < to	4172:17:126715:126721	672756	1	True				
ANR	672914	RelationalExpression	at < to		672756	0		<			
ANR	672915	Identifier	at		672756	0					
ANR	672916	Identifier	to		672756	1					
ANR	672917	AssignmentExpression	at += step	4172:26:126724:126733	672756	2	True	+=			
ANR	672918	Identifier	at		672756	0					
ANR	672919	Identifier	step		672756	1					
ANR	672920	CompoundStatement		30:2:601:642	672756	3					
ANR	672921	IdentifierDeclStatement	"RIOMap * map = r_io_map_get ( core -> io , at ) ;"	4173:2:126740:126781	672756	0	True				
ANR	672922	IdentifierDecl	"* map = r_io_map_get ( core -> io , at )"		672756	0					
ANR	672923	IdentifierDeclType	RIOMap *		672756	0					
ANR	672924	Identifier	map		672756	1					
ANR	672925	AssignmentExpression	"* map = r_io_map_get ( core -> io , at )"		672756	2		=			
ANR	672926	Identifier	map		672756	0					
ANR	672927	CallExpression	"r_io_map_get ( core -> io , at )"		672756	1					
ANR	672928	Callee	r_io_map_get		672756	0					
ANR	672929	Identifier	r_io_map_get		672756	0					
ANR	672930	ArgumentList	core -> io		672756	1					
ANR	672931	Argument	core -> io		672756	0					
ANR	672932	PtrMemberAccess	core -> io		672756	0					
ANR	672933	Identifier	core		672756	0					
ANR	672934	Identifier	io		672756	1					
ANR	672935	Argument	at		672756	1					
ANR	672936	Identifier	at		672756	0					
ANR	672937	ExpressionStatement	piece = ( at - from ) / step	4174:2:126785:126811	672756	1	True				
ANR	672938	AssignmentExpression	piece = ( at - from ) / step		672756	0		=			
ANR	672939	Identifier	piece		672756	0					
ANR	672940	MultiplicativeExpression	( at - from ) / step		672756	1		/			
ANR	672941	AdditiveExpression	at - from		672756	0		-			
ANR	672942	Identifier	at		672756	0					
ANR	672943	Identifier	from		672756	1					
ANR	672944	Identifier	step		672756	1					
ANR	672945	ExpressionStatement	as -> block [ piece ] . perm = map ? map -> perm : ( core -> io -> desc ? core -> io -> desc -> perm : 0 )	4175:2:126815:126898	672756	2	True				
ANR	672946	AssignmentExpression	as -> block [ piece ] . perm = map ? map -> perm : ( core -> io -> desc ? core -> io -> desc -> perm : 0 )		672756	0		=			
ANR	672947	MemberAccess	as -> block [ piece ] . perm		672756	0					
ANR	672948	ArrayIndexing	as -> block [ piece ]		672756	0					
ANR	672949	PtrMemberAccess	as -> block		672756	0					
ANR	672950	Identifier	as		672756	0					
ANR	672951	Identifier	block		672756	1					
ANR	672952	Identifier	piece		672756	1					
ANR	672953	Identifier	perm		672756	1					
ANR	672954	ConditionalExpression	map ? map -> perm : ( core -> io -> desc ? core -> io -> desc -> perm : 0 )		672756	1					
ANR	672955	Condition	map		672756	0					
ANR	672956	Identifier	map		672756	0					
ANR	672957	PtrMemberAccess	map -> perm		672756	1					
ANR	672958	Identifier	map		672756	0					
ANR	672959	Identifier	perm		672756	1					
ANR	672960	ConditionalExpression	core -> io -> desc ? core -> io -> desc -> perm : 0		672756	2					
ANR	672961	Condition	core -> io -> desc		672756	0					
ANR	672962	PtrMemberAccess	core -> io -> desc		672756	0					
ANR	672963	PtrMemberAccess	core -> io		672756	0					
ANR	672964	Identifier	core		672756	0					
ANR	672965	Identifier	io		672756	1					
ANR	672966	Identifier	desc		672756	1					
ANR	672967	PtrMemberAccess	core -> io -> desc -> perm		672756	1					
ANR	672968	PtrMemberAccess	core -> io -> desc		672756	0					
ANR	672969	PtrMemberAccess	core -> io		672756	0					
ANR	672970	Identifier	core		672756	0					
ANR	672971	Identifier	io		672756	1					
ANR	672972	Identifier	desc		672756	1					
ANR	672973	Identifier	perm		672756	1					
ANR	672974	PrimaryExpression	0		672756	2					
ANR	672975	Statement	struct	4178:1:126923:126928	672756	17	True				
ANR	672976	Statement	block_flags_stat_t	4178:8:126930:126947	672756	18	True				
ANR	672977	Statement	u	4178:27:126949:126949	672756	19	True				
ANR	672978	Statement	=	4178:29:126951:126951	672756	20	True				
ANR	672979	CompoundStatement		35:31:814:814	672756	21					
ANR	672980	Statement	.	4178:33:126955:126955	672756	0	True				
ANR	672981	Statement	step	4178:34:126956:126959	672756	1	True				
ANR	672982	Statement	=	4178:39:126961:126961	672756	2	True				
ANR	672983	Statement	step	4178:41:126963:126966	672756	3	True				
ANR	672984	Statement	","	4178:45:126967:126967	672756	4	True				
ANR	672985	Statement	.	4178:47:126969:126969	672756	5	True				
ANR	672986	Statement	from	4178:48:126970:126973	672756	6	True				
ANR	672987	Statement	=	4178:53:126975:126975	672756	7	True				
ANR	672988	Statement	from	4178:55:126977:126980	672756	8	True				
ANR	672989	Statement	","	4178:59:126981:126981	672756	9	True				
ANR	672990	Statement	.	4178:61:126983:126983	672756	10	True				
ANR	672991	Statement	as	4178:62:126984:126985	672756	11	True				
ANR	672992	Statement	=	4178:65:126987:126987	672756	12	True				
ANR	672993	Statement	as	4178:67:126989:126990	672756	13	True				
ANR	672994	ExpressionStatement		4178:71:126993:126993	672756	22	True				
ANR	672995	ExpressionStatement	"r_flag_foreach_range ( core -> flags , from , to + 1 , block_flags_stat , & u )"	4179:1:126996:127066	672756	23	True				
ANR	672996	CallExpression	"r_flag_foreach_range ( core -> flags , from , to + 1 , block_flags_stat , & u )"		672756	0					
ANR	672997	Callee	r_flag_foreach_range		672756	0					
ANR	672998	Identifier	r_flag_foreach_range		672756	0					
ANR	672999	ArgumentList	core -> flags		672756	1					
ANR	673000	Argument	core -> flags		672756	0					
ANR	673001	PtrMemberAccess	core -> flags		672756	0					
ANR	673002	Identifier	core		672756	0					
ANR	673003	Identifier	flags		672756	1					
ANR	673004	Argument	from		672756	1					
ANR	673005	Identifier	from		672756	0					
ANR	673006	Argument	to + 1		672756	2					
ANR	673007	AdditiveExpression	to + 1		672756	0		+			
ANR	673008	Identifier	to		672756	0					
ANR	673009	PrimaryExpression	1		672756	1					
ANR	673010	Argument	block_flags_stat		672756	3					
ANR	673011	Identifier	block_flags_stat		672756	0					
ANR	673012	Argument	& u		672756	4					
ANR	673013	UnaryOperationExpression	& u		672756	0					
ANR	673014	UnaryOperator	&		672756	0					
ANR	673015	Identifier	u		672756	1					
ANR	673016	Statement	r_list_foreach	4181:1:127092:127105	672756	24	True				
ANR	673017	Statement	(	4181:16:127107:127107	672756	25	True				
ANR	673018	Statement	core	4181:17:127108:127111	672756	26	True				
ANR	673019	Statement	->	4181:21:127112:127113	672756	27	True				
ANR	673020	Statement	anal	4181:23:127114:127117	672756	28	True				
ANR	673021	Statement	->	4181:27:127118:127119	672756	29	True				
ANR	673022	Statement	fcns	4181:29:127120:127123	672756	30	True				
ANR	673023	Statement	","	4181:33:127124:127124	672756	31	True				
ANR	673024	Statement	iter	4181:35:127126:127129	672756	32	True				
ANR	673025	Statement	","	4181:39:127130:127130	672756	33	True				
ANR	673026	Statement	F	4181:41:127132:127132	672756	34	True				
ANR	673027	Statement	)	4181:42:127133:127133	672756	35	True				
ANR	673028	CompoundStatement		44:2:1124:1192	672756	36					
ANR	673029	IfStatement	if ( F -> addr < from || F -> addr > to )		672756	0					
ANR	673030	Condition	F -> addr < from || F -> addr > to	4182:6:127143:127172	672756	0	True				
ANR	673031	OrExpression	F -> addr < from || F -> addr > to		672756	0		||			
ANR	673032	RelationalExpression	F -> addr < from		672756	0		<			
ANR	673033	PtrMemberAccess	F -> addr		672756	0					
ANR	673034	Identifier	F		672756	0					
ANR	673035	Identifier	addr		672756	1					
ANR	673036	Identifier	from		672756	1					
ANR	673037	RelationalExpression	F -> addr > to		672756	1		>			
ANR	673038	PtrMemberAccess	F -> addr		672756	0					
ANR	673039	Identifier	F		672756	0					
ANR	673040	Identifier	addr		672756	1					
ANR	673041	Identifier	to		672756	1					
ANR	673042	CompoundStatement		39:38:1036:1036	672756	1					
ANR	673043	ContinueStatement	continue ;	4183:3:127180:127188	672756	0	True				
ANR	673044	ExpressionStatement	piece = ( F -> addr - from ) / step	4185:2:127196:127227	672756	1	True				
ANR	673045	AssignmentExpression	piece = ( F -> addr - from ) / step		672756	0		=			
ANR	673046	Identifier	piece		672756	0					
ANR	673047	MultiplicativeExpression	( F -> addr - from ) / step		672756	1		/			
ANR	673048	AdditiveExpression	F -> addr - from		672756	0		-			
ANR	673049	PtrMemberAccess	F -> addr		672756	0					
ANR	673050	Identifier	F		672756	0					
ANR	673051	Identifier	addr		672756	1					
ANR	673052	Identifier	from		672756	1					
ANR	673053	Identifier	step		672756	1					
ANR	673054	ExpressionStatement	as -> block [ piece ] . functions ++	4186:2:127231:127259	672756	2	True				
ANR	673055	PostIncDecOperationExpression	as -> block [ piece ] . functions ++		672756	0					
ANR	673056	MemberAccess	as -> block [ piece ] . functions		672756	0					
ANR	673057	ArrayIndexing	as -> block [ piece ]		672756	0					
ANR	673058	PtrMemberAccess	as -> block		672756	0					
ANR	673059	Identifier	as		672756	0					
ANR	673060	Identifier	block		672756	1					
ANR	673061	Identifier	piece		672756	1					
ANR	673062	Identifier	functions		672756	1					
ANR	673063	IncDec	++		672756	1					
ANR	673064	IdentifierDeclStatement	"int last_piece = R_MIN ( ( F -> addr + F -> _size - 1 ) / step , blocks - 1 ) ;"	4187:2:127263:127331	672756	3	True				
ANR	673065	IdentifierDecl	"last_piece = R_MIN ( ( F -> addr + F -> _size - 1 ) / step , blocks - 1 )"		672756	0					
ANR	673066	IdentifierDeclType	int		672756	0					
ANR	673067	Identifier	last_piece		672756	1					
ANR	673068	AssignmentExpression	"last_piece = R_MIN ( ( F -> addr + F -> _size - 1 ) / step , blocks - 1 )"		672756	2		=			
ANR	673069	Identifier	last_piece		672756	0					
ANR	673070	CallExpression	"R_MIN ( ( F -> addr + F -> _size - 1 ) / step , blocks - 1 )"		672756	1					
ANR	673071	Callee	R_MIN		672756	0					
ANR	673072	Identifier	R_MIN		672756	0					
ANR	673073	ArgumentList	( F -> addr + F -> _size - 1 ) / step		672756	1					
ANR	673074	Argument	( F -> addr + F -> _size - 1 ) / step		672756	0					
ANR	673075	MultiplicativeExpression	( F -> addr + F -> _size - 1 ) / step		672756	0		/			
ANR	673076	AdditiveExpression	F -> addr + F -> _size - 1		672756	0		+			
ANR	673077	PtrMemberAccess	F -> addr		672756	0					
ANR	673078	Identifier	F		672756	0					
ANR	673079	Identifier	addr		672756	1					
ANR	673080	AdditiveExpression	F -> _size - 1		672756	1		-			
ANR	673081	PtrMemberAccess	F -> _size		672756	0					
ANR	673082	Identifier	F		672756	0					
ANR	673083	Identifier	_size		672756	1					
ANR	673084	PrimaryExpression	1		672756	1					
ANR	673085	Identifier	step		672756	1					
ANR	673086	Argument	blocks - 1		672756	1					
ANR	673087	AdditiveExpression	blocks - 1		672756	0		-			
ANR	673088	Identifier	blocks		672756	0					
ANR	673089	PrimaryExpression	1		672756	1					
ANR	673090	ForStatement	for ( ; piece <= last_piece ; piece ++ )		672756	4					
ANR	673091	Condition	piece <= last_piece	4188:9:127342:127360	672756	0	True				
ANR	673092	RelationalExpression	piece <= last_piece		672756	0		<=			
ANR	673093	Identifier	piece		672756	0					
ANR	673094	Identifier	last_piece		672756	1					
ANR	673095	PostIncDecOperationExpression	piece ++	4188:30:127363:127369	672756	1	True				
ANR	673096	Identifier	piece		672756	0					
ANR	673097	IncDec	++		672756	1					
ANR	673098	CompoundStatement		45:39:1233:1233	672756	2					
ANR	673099	ExpressionStatement	as -> block [ piece ] . in_functions ++	4189:3:127377:127408	672756	0	True				
ANR	673100	PostIncDecOperationExpression	as -> block [ piece ] . in_functions ++		672756	0					
ANR	673101	MemberAccess	as -> block [ piece ] . in_functions		672756	0					
ANR	673102	ArrayIndexing	as -> block [ piece ]		672756	0					
ANR	673103	PtrMemberAccess	as -> block		672756	0					
ANR	673104	Identifier	as		672756	0					
ANR	673105	Identifier	block		672756	1					
ANR	673106	Identifier	piece		672756	1					
ANR	673107	Identifier	in_functions		672756	1					
ANR	673108	IncDec	++		672756	1					
ANR	673109	Statement	r_list_foreach	4192:2:127443:127456	672756	5	True				
ANR	673110	Statement	(	4192:17:127458:127458	672756	6	True				
ANR	673111	Statement	F	4192:18:127459:127459	672756	7	True				
ANR	673112	Statement	->	4192:19:127460:127461	672756	8	True				
ANR	673113	Statement	bbs	4192:21:127462:127464	672756	9	True				
ANR	673114	Statement	","	4192:24:127465:127465	672756	10	True				
ANR	673115	Statement	iter2	4192:26:127467:127471	672756	11	True				
ANR	673116	Statement	","	4192:31:127472:127472	672756	12	True				
ANR	673117	Statement	B	4192:33:127474:127474	672756	13	True				
ANR	673118	Statement	)	4192:34:127475:127475	672756	14	True				
ANR	673119	CompoundStatement		49:36:1338:1338	672756	15					
ANR	673120	IfStatement	if ( B -> addr < from || B -> addr > to )		672756	0					
ANR	673121	Condition	B -> addr < from || B -> addr > to	4193:7:127486:127515	672756	0	True				
ANR	673122	OrExpression	B -> addr < from || B -> addr > to		672756	0		||			
ANR	673123	RelationalExpression	B -> addr < from		672756	0		<			
ANR	673124	PtrMemberAccess	B -> addr		672756	0					
ANR	673125	Identifier	B		672756	0					
ANR	673126	Identifier	addr		672756	1					
ANR	673127	Identifier	from		672756	1					
ANR	673128	RelationalExpression	B -> addr > to		672756	1		>			
ANR	673129	PtrMemberAccess	B -> addr		672756	0					
ANR	673130	Identifier	B		672756	0					
ANR	673131	Identifier	addr		672756	1					
ANR	673132	Identifier	to		672756	1					
ANR	673133	CompoundStatement		50:39:1379:1379	672756	1					
ANR	673134	ContinueStatement	continue ;	4194:4:127524:127532	672756	0	True				
ANR	673135	ExpressionStatement	piece = ( B -> addr - from ) / step	4196:3:127542:127573	672756	1	True				
ANR	673136	AssignmentExpression	piece = ( B -> addr - from ) / step		672756	0		=			
ANR	673137	Identifier	piece		672756	0					
ANR	673138	MultiplicativeExpression	( B -> addr - from ) / step		672756	1		/			
ANR	673139	AdditiveExpression	B -> addr - from		672756	0		-			
ANR	673140	PtrMemberAccess	B -> addr		672756	0					
ANR	673141	Identifier	B		672756	0					
ANR	673142	Identifier	addr		672756	1					
ANR	673143	Identifier	from		672756	1					
ANR	673144	Identifier	step		672756	1					
ANR	673145	ExpressionStatement	as -> block [ piece ] . blocks ++	4197:3:127578:127603	672756	2	True				
ANR	673146	PostIncDecOperationExpression	as -> block [ piece ] . blocks ++		672756	0					
ANR	673147	MemberAccess	as -> block [ piece ] . blocks		672756	0					
ANR	673148	ArrayIndexing	as -> block [ piece ]		672756	0					
ANR	673149	PtrMemberAccess	as -> block		672756	0					
ANR	673150	Identifier	as		672756	0					
ANR	673151	Identifier	block		672756	1					
ANR	673152	Identifier	piece		672756	1					
ANR	673153	Identifier	blocks		672756	1					
ANR	673154	IncDec	++		672756	1					
ANR	673155	Statement	r_list_foreach	4201:1:127634:127647	672756	37	True				
ANR	673156	Statement	(	4201:16:127649:127649	672756	38	True				
ANR	673157	Statement	r_bin_get_symbols	4201:17:127650:127666	672756	39	True				
ANR	673158	Statement	(	4201:35:127668:127668	672756	40	True				
ANR	673159	Statement	core	4201:36:127669:127672	672756	41	True				
ANR	673160	Statement	->	4201:40:127673:127674	672756	42	True				
ANR	673161	Statement	bin	4201:42:127675:127677	672756	43	True				
ANR	673162	Statement	)	4201:45:127678:127678	672756	44	True				
ANR	673163	Statement	","	4201:46:127679:127679	672756	45	True				
ANR	673164	Statement	iter	4201:48:127681:127684	672756	46	True				
ANR	673165	Statement	","	4201:52:127685:127685	672756	47	True				
ANR	673166	Statement	S	4201:54:127687:127687	672756	48	True				
ANR	673167	Statement	)	4201:55:127688:127688	672756	49	True				
ANR	673168	CompoundStatement		58:57:1551:1551	672756	50					
ANR	673169	IfStatement	if ( S -> vaddr < from || S -> vaddr > to )		672756	0					
ANR	673170	Condition	S -> vaddr < from || S -> vaddr > to	4202:6:127698:127729	672756	0	True				
ANR	673171	OrExpression	S -> vaddr < from || S -> vaddr > to		672756	0		||			
ANR	673172	RelationalExpression	S -> vaddr < from		672756	0		<			
ANR	673173	PtrMemberAccess	S -> vaddr		672756	0					
ANR	673174	Identifier	S		672756	0					
ANR	673175	Identifier	vaddr		672756	1					
ANR	673176	Identifier	from		672756	1					
ANR	673177	RelationalExpression	S -> vaddr > to		672756	1		>			
ANR	673178	PtrMemberAccess	S -> vaddr		672756	0					
ANR	673179	Identifier	S		672756	0					
ANR	673180	Identifier	vaddr		672756	1					
ANR	673181	Identifier	to		672756	1					
ANR	673182	CompoundStatement		59:40:1593:1593	672756	1					
ANR	673183	ContinueStatement	continue ;	4203:3:127737:127745	672756	0	True				
ANR	673184	ExpressionStatement	piece = ( S -> vaddr - from ) / step	4205:2:127753:127785	672756	1	True				
ANR	673185	AssignmentExpression	piece = ( S -> vaddr - from ) / step		672756	0		=			
ANR	673186	Identifier	piece		672756	0					
ANR	673187	MultiplicativeExpression	( S -> vaddr - from ) / step		672756	1		/			
ANR	673188	AdditiveExpression	S -> vaddr - from		672756	0		-			
ANR	673189	PtrMemberAccess	S -> vaddr		672756	0					
ANR	673190	Identifier	S		672756	0					
ANR	673191	Identifier	vaddr		672756	1					
ANR	673192	Identifier	from		672756	1					
ANR	673193	Identifier	step		672756	1					
ANR	673194	ExpressionStatement	as -> block [ piece ] . symbols ++	4206:2:127789:127815	672756	2	True				
ANR	673195	PostIncDecOperationExpression	as -> block [ piece ] . symbols ++		672756	0					
ANR	673196	MemberAccess	as -> block [ piece ] . symbols		672756	0					
ANR	673197	ArrayIndexing	as -> block [ piece ]		672756	0					
ANR	673198	PtrMemberAccess	as -> block		672756	0					
ANR	673199	Identifier	as		672756	0					
ANR	673200	Identifier	block		672756	1					
ANR	673201	Identifier	piece		672756	1					
ANR	673202	Identifier	symbols		672756	1					
ANR	673203	IncDec	++		672756	1					
ANR	673204	IdentifierDeclStatement	"RList * metas = r_meta_enumerate ( core -> anal , - 1 ) ;"	4208:1:127821:127869	672756	51	True				
ANR	673205	IdentifierDecl	"* metas = r_meta_enumerate ( core -> anal , - 1 )"		672756	0					
ANR	673206	IdentifierDeclType	RList *		672756	0					
ANR	673207	Identifier	metas		672756	1					
ANR	673208	AssignmentExpression	"* metas = r_meta_enumerate ( core -> anal , - 1 )"		672756	2		=			
ANR	673209	Identifier	metas		672756	0					
ANR	673210	CallExpression	"r_meta_enumerate ( core -> anal , - 1 )"		672756	1					
ANR	673211	Callee	r_meta_enumerate		672756	0					
ANR	673212	Identifier	r_meta_enumerate		672756	0					
ANR	673213	ArgumentList	core -> anal		672756	1					
ANR	673214	Argument	core -> anal		672756	0					
ANR	673215	PtrMemberAccess	core -> anal		672756	0					
ANR	673216	Identifier	core		672756	0					
ANR	673217	Identifier	anal		672756	1					
ANR	673218	Argument	- 1		672756	1					
ANR	673219	UnaryOperationExpression	- 1		672756	0					
ANR	673220	UnaryOperator	-		672756	0					
ANR	673221	PrimaryExpression	1		672756	1					
ANR	673222	IdentifierDeclStatement	RAnalMetaItem * M ;	4209:1:127872:127888	672756	52	True				
ANR	673223	IdentifierDecl	* M		672756	0					
ANR	673224	IdentifierDeclType	RAnalMetaItem *		672756	0					
ANR	673225	Identifier	M		672756	1					
ANR	673226	Statement	r_list_foreach	4210:1:127891:127904	672756	53	True				
ANR	673227	Statement	(	4210:16:127906:127906	672756	54	True				
ANR	673228	Statement	metas	4210:17:127907:127911	672756	55	True				
ANR	673229	Statement	","	4210:22:127912:127912	672756	56	True				
ANR	673230	Statement	iter	4210:24:127914:127917	672756	57	True				
ANR	673231	Statement	","	4210:28:127918:127918	672756	58	True				
ANR	673232	Statement	M	4210:30:127920:127920	672756	59	True				
ANR	673233	Statement	)	4210:31:127921:127921	672756	60	True				
ANR	673234	CompoundStatement		67:33:1784:1784	672756	61					
ANR	673235	IfStatement	if ( M -> from < from || M -> to > to )		672756	0					
ANR	673236	Condition	M -> from < from || M -> to > to	4211:6:127931:127958	672756	0	True				
ANR	673237	OrExpression	M -> from < from || M -> to > to		672756	0		||			
ANR	673238	RelationalExpression	M -> from < from		672756	0		<			
ANR	673239	PtrMemberAccess	M -> from		672756	0					
ANR	673240	Identifier	M		672756	0					
ANR	673241	Identifier	from		672756	1					
ANR	673242	Identifier	from		672756	1					
ANR	673243	RelationalExpression	M -> to > to		672756	1		>			
ANR	673244	PtrMemberAccess	M -> to		672756	0					
ANR	673245	Identifier	M		672756	0					
ANR	673246	Identifier	to		672756	1					
ANR	673247	Identifier	to		672756	1					
ANR	673248	CompoundStatement		68:36:1822:1822	672756	1					
ANR	673249	ContinueStatement	continue ;	4212:3:127966:127974	672756	0	True				
ANR	673250	ExpressionStatement	piece = ( M -> from - from ) / step	4214:2:127982:128013	672756	1	True				
ANR	673251	AssignmentExpression	piece = ( M -> from - from ) / step		672756	0		=			
ANR	673252	Identifier	piece		672756	0					
ANR	673253	MultiplicativeExpression	( M -> from - from ) / step		672756	1		/			
ANR	673254	AdditiveExpression	M -> from - from		672756	0		-			
ANR	673255	PtrMemberAccess	M -> from		672756	0					
ANR	673256	Identifier	M		672756	0					
ANR	673257	Identifier	from		672756	1					
ANR	673258	Identifier	from		672756	1					
ANR	673259	Identifier	step		672756	1					
ANR	673260	SwitchStatement	switch ( M -> type )		672756	2					
ANR	673261	Condition	M -> type	4215:10:128025:128031	672756	0	True				
ANR	673262	PtrMemberAccess	M -> type		672756	0					
ANR	673263	Identifier	M		672756	0					
ANR	673264	Identifier	type		672756	1					
ANR	673265	CompoundStatement		72:19:1895:1895	672756	1					
ANR	673266	Label	case R_META_TYPE_STRING :	4216:2:128038:128061	672756	0	True				
ANR	673267	Identifier	R_META_TYPE_STRING		672756	0					
ANR	673268	ExpressionStatement	as -> block [ piece ] . strings ++	4217:3:128066:128092	672756	1	True				
ANR	673269	PostIncDecOperationExpression	as -> block [ piece ] . strings ++		672756	0					
ANR	673270	MemberAccess	as -> block [ piece ] . strings		672756	0					
ANR	673271	ArrayIndexing	as -> block [ piece ]		672756	0					
ANR	673272	PtrMemberAccess	as -> block		672756	0					
ANR	673273	Identifier	as		672756	0					
ANR	673274	Identifier	block		672756	1					
ANR	673275	Identifier	piece		672756	1					
ANR	673276	Identifier	strings		672756	1					
ANR	673277	IncDec	++		672756	1					
ANR	673278	BreakStatement	break ;	4218:3:128097:128102	672756	2	True				
ANR	673279	Label	case R_META_TYPE_COMMENT :	4219:2:128106:128130	672756	3	True				
ANR	673280	Identifier	R_META_TYPE_COMMENT		672756	0					
ANR	673281	ExpressionStatement	as -> block [ piece ] . comments ++	4220:3:128135:128162	672756	4	True				
ANR	673282	PostIncDecOperationExpression	as -> block [ piece ] . comments ++		672756	0					
ANR	673283	MemberAccess	as -> block [ piece ] . comments		672756	0					
ANR	673284	ArrayIndexing	as -> block [ piece ]		672756	0					
ANR	673285	PtrMemberAccess	as -> block		672756	0					
ANR	673286	Identifier	as		672756	0					
ANR	673287	Identifier	block		672756	1					
ANR	673288	Identifier	piece		672756	1					
ANR	673289	Identifier	comments		672756	1					
ANR	673290	IncDec	++		672756	1					
ANR	673291	BreakStatement	break ;	4221:3:128167:128172	672756	5	True				
ANR	673292	ExpressionStatement	r_list_free ( metas )	4224:1:128182:128201	672756	62	True				
ANR	673293	CallExpression	r_list_free ( metas )		672756	0					
ANR	673294	Callee	r_list_free		672756	0					
ANR	673295	Identifier	r_list_free		672756	0					
ANR	673296	ArgumentList	metas		672756	1					
ANR	673297	Argument	metas		672756	0					
ANR	673298	Identifier	metas		672756	0					
ANR	673299	ReturnStatement	return as ;	4227:1:128247:128256	672756	63	True				
ANR	673300	Identifier	as		672756	0					
ANR	673301	ReturnType	R_API RCoreAnalStats *		672756	1					
ANR	673302	Identifier	r_core_anal_get_stats		672756	2					
ANR	673303	ParameterList	"RCore * core , ut64 from , ut64 to , ut64 step"		672756	3					
ANR	673304	Parameter	RCore * core	4144:44:126094:126104	672756	0	True				
ANR	673305	ParameterType	RCore *		672756	0					
ANR	673306	Identifier	core		672756	1					
ANR	673307	Parameter	ut64 from	4144:57:126107:126115	672756	1	True				
ANR	673308	ParameterType	ut64		672756	0					
ANR	673309	Identifier	from		672756	1					
ANR	673310	Parameter	ut64 to	4144:68:126118:126124	672756	2	True				
ANR	673311	ParameterType	ut64		672756	0					
ANR	673312	Identifier	to		672756	1					
ANR	673313	Parameter	ut64 step	4144:77:126127:126135	672756	3	True				
ANR	673314	ParameterType	ut64		672756	0					
ANR	673315	Identifier	step		672756	1					
ANR	673316	CFGEntryNode	ENTRY		672756		True				
ANR	673317	CFGExitNode	EXIT		672756		True				
ANR	673318	CFGErrorNode	ERROR		672756		True				
ANR	673319	Symbol	as_size		672756						
ANR	673320	Symbol	* map		672756						
ANR	673321	Symbol	as -> block [ piece ] . comments		672756						
ANR	673322	Symbol	M -> type		672756						
ANR	673323	Symbol	M -> from		672756						
ANR	673324	Symbol	as -> block [ piece ] . in_functions		672756						
ANR	673325	Symbol	S -> vaddr		672756						
ANR	673326	Symbol	from		672756						
ANR	673327	Symbol	* * as		672756						
ANR	673328	Symbol	* core -> io -> desc		672756						
ANR	673329	Symbol	metas		672756						
ANR	673330	Symbol	NULL		672756						
ANR	673331	Symbol	core -> io -> desc -> perm		672756						
ANR	673332	Symbol	as -> block [ piece ] . functions		672756						
ANR	673333	Symbol	iter		672756						
ANR	673334	Symbol	core -> io -> desc		672756						
ANR	673335	Symbol	core		672756						
ANR	673336	Symbol	R_NEW0		672756						
ANR	673337	Symbol	as -> block		672756						
ANR	673338	Symbol	* * * core		672756						
ANR	673339	Symbol	as		672756						
ANR	673340	Symbol	at		672756						
ANR	673341	Symbol	piece		672756						
ANR	673342	Symbol	F -> addr		672756						
ANR	673343	Symbol	map -> perm		672756						
ANR	673344	Symbol	r_meta_enumerate		672756						
ANR	673345	Symbol	B		672756						
ANR	673346	Symbol	* piece		672756						
ANR	673347	Symbol	F		672756						
ANR	673348	Symbol	M -> to		672756						
ANR	673349	Symbol	RCoreAnalStats		672756						
ANR	673350	Symbol	* core		672756						
ANR	673351	Symbol	as -> block [ piece ] . blocks		672756						
ANR	673352	Symbol	* B		672756						
ANR	673353	Symbol	core -> anal		672756						
ANR	673354	Symbol	M		672756						
ANR	673355	Symbol	as -> block [ piece ] . perm		672756						
ANR	673356	Symbol	F -> _size		672756						
ANR	673357	Symbol	as -> block [ piece ] . strings		672756						
ANR	673358	Symbol	* F		672756						
ANR	673359	Symbol	S		672756						
ANR	673360	Symbol	core -> io		672756						
ANR	673361	Symbol	as -> block [ piece ] . symbols		672756						
ANR	673362	Symbol	* M		672756						
ANR	673363	Symbol	UT64_MAX		672756						
ANR	673364	Symbol	map		672756						
ANR	673365	Symbol	B -> addr		672756						
ANR	673366	Symbol	* S		672756						
ANR	673367	Symbol	* * core		672756						
ANR	673368	Symbol	last_piece		672756						
ANR	673369	Symbol	malloc		672756						
ANR	673370	Symbol	block_flags_stat		672756						
ANR	673371	Symbol	blocks		672756						
ANR	673372	Symbol	iter2		672756						
ANR	673373	Symbol	* as -> block		672756						
ANR	673374	Symbol	core -> flags		672756						
ANR	673375	Symbol	R_MIN		672756						
ANR	673376	Symbol	* core -> io		672756						
ANR	673377	Symbol	step		672756						
ANR	673378	Symbol	to		672756						
ANR	673379	Symbol	* as		672756						
ANR	673380	Symbol	& u		672756						
ANR	673381	Symbol	r_io_map_get		672756						
ANR	673382	Symbol	* * core -> io		672756						
ANR	673383	Function	r_core_anal_stats_free	4230:0:128261:128359							
ANR	673384	FunctionDef	r_core_anal_stats_free (RCoreAnalStats * s)		673383	0					
ANR	673385	CompoundStatement		4230:53:128314:128359	673383	0					
ANR	673386	IfStatement	if ( s )		673383	0					
ANR	673387	Condition	s	4231:5:128321:128321	673383	0	True				
ANR	673388	Identifier	s		673383	0					
ANR	673389	CompoundStatement		2:8:9:9	673383	1					
ANR	673390	ExpressionStatement	free ( s -> block )	4232:2:128328:128343	673383	0	True				
ANR	673391	CallExpression	free ( s -> block )		673383	0					
ANR	673392	Callee	free		673383	0					
ANR	673393	Identifier	free		673383	0					
ANR	673394	ArgumentList	s -> block		673383	1					
ANR	673395	Argument	s -> block		673383	0					
ANR	673396	PtrMemberAccess	s -> block		673383	0					
ANR	673397	Identifier	s		673383	0					
ANR	673398	Identifier	block		673383	1					
ANR	673399	ExpressionStatement	free ( s )	4234:1:128349:128357	673383	1	True				
ANR	673400	CallExpression	free ( s )		673383	0					
ANR	673401	Callee	free		673383	0					
ANR	673402	Identifier	free		673383	0					
ANR	673403	ArgumentList	s		673383	1					
ANR	673404	Argument	s		673383	0					
ANR	673405	Identifier	s		673383	0					
ANR	673406	ReturnType	R_API void		673383	1					
ANR	673407	Identifier	r_core_anal_stats_free		673383	2					
ANR	673408	ParameterList	RCoreAnalStats * s		673383	3					
ANR	673409	Parameter	RCoreAnalStats * s	4230:34:128295:128311	673383	0	True				
ANR	673410	ParameterType	RCoreAnalStats *		673383	0					
ANR	673411	Identifier	s		673383	1					
ANR	673412	CFGEntryNode	ENTRY		673383		True				
ANR	673413	CFGExitNode	EXIT		673383		True				
ANR	673414	Symbol	s		673383						
ANR	673415	Symbol	* s		673383						
ANR	673416	Symbol	s -> block		673383						
ANR	673417	Function	r_core_anal_cycles	4237:0:128362:132634							
ANR	673418	FunctionDef	"r_core_anal_cycles (RCore * core , int ccl)"		673417	0					
ANR	673419	CompoundStatement		4237:54:128416:132634	673417	0					
ANR	673420	IdentifierDeclStatement	ut64 addr = core -> offset ;	4238:1:128419:128443	673417	0	True				
ANR	673421	IdentifierDecl	addr = core -> offset		673417	0					
ANR	673422	IdentifierDeclType	ut64		673417	0					
ANR	673423	Identifier	addr		673417	1					
ANR	673424	AssignmentExpression	addr = core -> offset		673417	2		=			
ANR	673425	Identifier	addr		673417	0					
ANR	673426	PtrMemberAccess	core -> offset		673417	1					
ANR	673427	Identifier	core		673417	0					
ANR	673428	Identifier	offset		673417	1					
ANR	673429	IdentifierDeclStatement	int depth = 0 ;	4239:1:128446:128459	673417	1	True				
ANR	673430	IdentifierDecl	depth = 0		673417	0					
ANR	673431	IdentifierDeclType	int		673417	0					
ANR	673432	Identifier	depth		673417	1					
ANR	673433	AssignmentExpression	depth = 0		673417	2		=			
ANR	673434	Identifier	depth		673417	0					
ANR	673435	PrimaryExpression	0		673417	1					
ANR	673436	IdentifierDeclStatement	RAnalOp * op = NULL ;	4240:1:128462:128480	673417	2	True				
ANR	673437	IdentifierDecl	* op = NULL		673417	0					
ANR	673438	IdentifierDeclType	RAnalOp *		673417	0					
ANR	673439	Identifier	op		673417	1					
ANR	673440	AssignmentExpression	* op = NULL		673417	2		=			
ANR	673441	Identifier	NULL		673417	0					
ANR	673442	Identifier	NULL		673417	1					
ANR	673443	IdentifierDeclStatement	"RAnalCycleFrame * prev = NULL , * cf = NULL ;"	4241:1:128483:128523	673417	3	True				
ANR	673444	IdentifierDecl	* prev = NULL		673417	0					
ANR	673445	IdentifierDeclType	RAnalCycleFrame *		673417	0					
ANR	673446	Identifier	prev		673417	1					
ANR	673447	AssignmentExpression	* prev = NULL		673417	2		=			
ANR	673448	Identifier	NULL		673417	0					
ANR	673449	Identifier	NULL		673417	1					
ANR	673450	IdentifierDecl	* cf = NULL		673417	1					
ANR	673451	IdentifierDeclType	RAnalCycleFrame *		673417	0					
ANR	673452	Identifier	cf		673417	1					
ANR	673453	AssignmentExpression	* cf = NULL		673417	2		=			
ANR	673454	Identifier	NULL		673417	0					
ANR	673455	Identifier	NULL		673417	1					
ANR	673456	IdentifierDeclStatement	RAnalCycleHook * ch ;	4242:1:128526:128544	673417	4	True				
ANR	673457	IdentifierDecl	* ch		673417	0					
ANR	673458	IdentifierDeclType	RAnalCycleHook *		673417	0					
ANR	673459	Identifier	ch		673417	1					
ANR	673460	IdentifierDeclStatement	RList * hooks = r_list_new ( ) ;	4243:1:128547:128575	673417	5	True				
ANR	673461	IdentifierDecl	* hooks = r_list_new ( )		673417	0					
ANR	673462	IdentifierDeclType	RList *		673417	0					
ANR	673463	Identifier	hooks		673417	1					
ANR	673464	AssignmentExpression	* hooks = r_list_new ( )		673417	2		=			
ANR	673465	Identifier	hooks		673417	0					
ANR	673466	CallExpression	r_list_new ( )		673417	1					
ANR	673467	Callee	r_list_new		673417	0					
ANR	673468	Identifier	r_list_new		673417	0					
ANR	673469	ArgumentList			673417	1					
ANR	673470	IfStatement	if ( ! hooks )		673417	6					
ANR	673471	Condition	! hooks	4244:5:128582:128587	673417	0	True				
ANR	673472	UnaryOperationExpression	! hooks		673417	0					
ANR	673473	UnaryOperator	!		673417	0					
ANR	673474	Identifier	hooks		673417	1					
ANR	673475	CompoundStatement		8:13:173:173	673417	1					
ANR	673476	ReturnStatement	return NULL ;	4245:2:128594:128605	673417	0	True				
ANR	673477	Identifier	NULL		673417	0					
ANR	673478	ExpressionStatement	cf = r_anal_cycle_frame_new ( )	4247:1:128611:128641	673417	7	True				
ANR	673479	AssignmentExpression	cf = r_anal_cycle_frame_new ( )		673417	0		=			
ANR	673480	Identifier	cf		673417	0					
ANR	673481	CallExpression	r_anal_cycle_frame_new ( )		673417	1					
ANR	673482	Callee	r_anal_cycle_frame_new		673417	0					
ANR	673483	Identifier	r_anal_cycle_frame_new		673417	0					
ANR	673484	ArgumentList			673417	1					
ANR	673485	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	4248:1:128644:128674	673417	8	True				
ANR	673486	CallExpression	"r_cons_break_push ( NULL , NULL )"		673417	0					
ANR	673487	Callee	r_cons_break_push		673417	0					
ANR	673488	Identifier	r_cons_break_push		673417	0					
ANR	673489	ArgumentList	NULL		673417	1					
ANR	673490	Argument	NULL		673417	0					
ANR	673491	Identifier	NULL		673417	0					
ANR	673492	Argument	NULL		673417	1					
ANR	673493	Identifier	NULL		673417	0					
ANR	673494	WhileStatement	while ( cf && ! r_cons_is_breaked ( ) )		673417	9					
ANR	673495	Condition	cf && ! r_cons_is_breaked ( )	4249:8:128684:128710	673417	0	True				
ANR	673496	AndExpression	cf && ! r_cons_is_breaked ( )		673417	0		&&			
ANR	673497	Identifier	cf		673417	0					
ANR	673498	UnaryOperationExpression	! r_cons_is_breaked ( )		673417	1					
ANR	673499	UnaryOperator	!		673417	0					
ANR	673500	CallExpression	r_cons_is_breaked ( )		673417	1					
ANR	673501	Callee	r_cons_is_breaked		673417	0					
ANR	673502	Identifier	r_cons_is_breaked		673417	0					
ANR	673503	ArgumentList			673417	1					
ANR	673504	CompoundStatement		13:37:296:296	673417	1					
ANR	673505	IfStatement	"if ( ( op = r_core_anal_op ( core , addr , R_ANAL_OP_MASK_BASIC ) ) && ( op -> cycles ) && ( ccl > 0 ) )"		673417	0					
ANR	673506	Condition	"( op = r_core_anal_op ( core , addr , R_ANAL_OP_MASK_BASIC ) ) && ( op -> cycles ) && ( ccl > 0 )"	4250:6:128721:128805	673417	0	True				
ANR	673507	AndExpression	"( op = r_core_anal_op ( core , addr , R_ANAL_OP_MASK_BASIC ) ) && ( op -> cycles ) && ( ccl > 0 )"		673417	0		&&			
ANR	673508	AssignmentExpression	"op = r_core_anal_op ( core , addr , R_ANAL_OP_MASK_BASIC )"		673417	0		=			
ANR	673509	Identifier	op		673417	0					
ANR	673510	CallExpression	"r_core_anal_op ( core , addr , R_ANAL_OP_MASK_BASIC )"		673417	1					
ANR	673511	Callee	r_core_anal_op		673417	0					
ANR	673512	Identifier	r_core_anal_op		673417	0					
ANR	673513	ArgumentList	core		673417	1					
ANR	673514	Argument	core		673417	0					
ANR	673515	Identifier	core		673417	0					
ANR	673516	Argument	addr		673417	1					
ANR	673517	Identifier	addr		673417	0					
ANR	673518	Argument	R_ANAL_OP_MASK_BASIC		673417	2					
ANR	673519	Identifier	R_ANAL_OP_MASK_BASIC		673417	0					
ANR	673520	AndExpression	( op -> cycles ) && ( ccl > 0 )		673417	1		&&			
ANR	673521	PtrMemberAccess	op -> cycles		673417	0					
ANR	673522	Identifier	op		673417	0					
ANR	673523	Identifier	cycles		673417	1					
ANR	673524	RelationalExpression	ccl > 0		673417	1		>			
ANR	673525	Identifier	ccl		673417	0					
ANR	673526	PrimaryExpression	0		673417	1					
ANR	673527	CompoundStatement		14:93:391:391	673417	1					
ANR	673528	ExpressionStatement	r_cons_clear_line ( 1 )	4251:3:128813:128834	673417	0	True				
ANR	673529	CallExpression	r_cons_clear_line ( 1 )		673417	0					
ANR	673530	Callee	r_cons_clear_line		673417	0					
ANR	673531	Identifier	r_cons_clear_line		673417	0					
ANR	673532	ArgumentList	1		673417	1					
ANR	673533	Argument	1		673417	0					
ANR	673534	PrimaryExpression	1		673417	0					
ANR	673535	ExpressionStatement	"eprintf ( ""%i -- "" , ccl )"	4252:3:128839:128862	673417	1	True				
ANR	673536	CallExpression	"eprintf ( ""%i -- "" , ccl )"		673417	0					
ANR	673537	Callee	eprintf		673417	0					
ANR	673538	Identifier	eprintf		673417	0					
ANR	673539	ArgumentList	"""%i -- """		673417	1					
ANR	673540	Argument	"""%i -- """		673417	0					
ANR	673541	PrimaryExpression	"""%i -- """		673417	0					
ANR	673542	Argument	ccl		673417	1					
ANR	673543	Identifier	ccl		673417	0					
ANR	673544	ExpressionStatement	addr += op -> size	4253:3:128867:128883	673417	2	True				
ANR	673545	AssignmentExpression	addr += op -> size		673417	0		+=			
ANR	673546	Identifier	addr		673417	0					
ANR	673547	PtrMemberAccess	op -> size		673417	1					
ANR	673548	Identifier	op		673417	0					
ANR	673549	Identifier	size		673417	1					
ANR	673550	SwitchStatement	switch ( op -> type )		673417	3					
ANR	673551	Condition	op -> type	4254:11:128896:128903	673417	0	True				
ANR	673552	PtrMemberAccess	op -> type		673417	0					
ANR	673553	Identifier	op		673417	0					
ANR	673554	Identifier	type		673417	1					
ANR	673555	CompoundStatement		18:21:489:489	673417	1					
ANR	673556	Label	case R_ANAL_OP_TYPE_JMP :	4255:3:128911:128934	673417	0	True				
ANR	673557	Identifier	R_ANAL_OP_TYPE_JMP		673417	0					
ANR	673558	ExpressionStatement	addr = op -> jump	4256:4:128940:128955	673417	1	True				
ANR	673559	AssignmentExpression	addr = op -> jump		673417	0		=			
ANR	673560	Identifier	addr		673417	0					
ANR	673561	PtrMemberAccess	op -> jump		673417	1					
ANR	673562	Identifier	op		673417	0					
ANR	673563	Identifier	jump		673417	1					
ANR	673564	ExpressionStatement	ccl -= op -> cycles	4257:4:128961:128978	673417	2	True				
ANR	673565	AssignmentExpression	ccl -= op -> cycles		673417	0		-=			
ANR	673566	Identifier	ccl		673417	0					
ANR	673567	PtrMemberAccess	op -> cycles		673417	1					
ANR	673568	Identifier	op		673417	0					
ANR	673569	Identifier	cycles		673417	1					
ANR	673570	ExpressionStatement	"loganal ( op -> addr , addr , depth )"	4258:4:128984:129015	673417	3	True				
ANR	673571	CallExpression	"loganal ( op -> addr , addr , depth )"		673417	0					
ANR	673572	Callee	loganal		673417	0					
ANR	673573	Identifier	loganal		673417	0					
ANR	673574	ArgumentList	op -> addr		673417	1					
ANR	673575	Argument	op -> addr		673417	0					
ANR	673576	PtrMemberAccess	op -> addr		673417	0					
ANR	673577	Identifier	op		673417	0					
ANR	673578	Identifier	addr		673417	1					
ANR	673579	Argument	addr		673417	1					
ANR	673580	Identifier	addr		673417	0					
ANR	673581	Argument	depth		673417	2					
ANR	673582	Identifier	depth		673417	0					
ANR	673583	BreakStatement	break ;	4259:4:129021:129026	673417	4	True				
ANR	673584	Label	case R_ANAL_OP_TYPE_UJMP :	4260:3:129031:129055	673417	5	True				
ANR	673585	Identifier	R_ANAL_OP_TYPE_UJMP		673417	0					
ANR	673586	Label	case R_ANAL_OP_TYPE_MJMP :	4261:3:129060:129084	673417	6	True				
ANR	673587	Identifier	R_ANAL_OP_TYPE_MJMP		673417	0					
ANR	673588	Label	case R_ANAL_OP_TYPE_UCALL :	4262:3:129089:129114	673417	7	True				
ANR	673589	Identifier	R_ANAL_OP_TYPE_UCALL		673417	0					
ANR	673590	Label	case R_ANAL_OP_TYPE_ICALL :	4263:3:129119:129144	673417	8	True				
ANR	673591	Identifier	R_ANAL_OP_TYPE_ICALL		673417	0					
ANR	673592	Label	case R_ANAL_OP_TYPE_RCALL :	4264:3:129149:129174	673417	9	True				
ANR	673593	Identifier	R_ANAL_OP_TYPE_RCALL		673417	0					
ANR	673594	Label	case R_ANAL_OP_TYPE_IRCALL :	4265:3:129179:129205	673417	10	True				
ANR	673595	Identifier	R_ANAL_OP_TYPE_IRCALL		673417	0					
ANR	673596	ExpressionStatement	ch = R_NEW0 ( RAnalCycleHook )	4266:4:129211:129239	673417	11	True				
ANR	673597	AssignmentExpression	ch = R_NEW0 ( RAnalCycleHook )		673417	0		=			
ANR	673598	Identifier	ch		673417	0					
ANR	673599	CallExpression	R_NEW0 ( RAnalCycleHook )		673417	1					
ANR	673600	Callee	R_NEW0		673417	0					
ANR	673601	Identifier	R_NEW0		673417	0					
ANR	673602	ArgumentList	RAnalCycleHook		673417	1					
ANR	673603	Argument	RAnalCycleHook		673417	0					
ANR	673604	Identifier	RAnalCycleHook		673417	0					
ANR	673605	ExpressionStatement	ch -> addr = op -> addr	4267:4:129245:129264	673417	12	True				
ANR	673606	AssignmentExpression	ch -> addr = op -> addr		673417	0		=			
ANR	673607	PtrMemberAccess	ch -> addr		673417	0					
ANR	673608	Identifier	ch		673417	0					
ANR	673609	Identifier	addr		673417	1					
ANR	673610	PtrMemberAccess	op -> addr		673417	1					
ANR	673611	Identifier	op		673417	0					
ANR	673612	Identifier	addr		673417	1					
ANR	673613	Statement	eprintf	4268:4:129270:129276	673417	13	True				
ANR	673614	Statement	(	4268:12:129278:129278	673417	14	True				
ANR	673615	Statement	"""0x%08"""	4268:13:129279:129285	673417	15	True				
ANR	673616	Statement	PFMT64x	4268:20:129286:129292	673417	16	True				
ANR	673617	Statement	""" > ?\\r"""	4268:27:129293:129300	673417	17	True				
ANR	673618	Statement	","	4268:35:129301:129301	673417	18	True				
ANR	673619	Statement	op	4268:37:129303:129304	673417	19	True				
ANR	673620	Statement	->	4268:39:129305:129306	673417	20	True				
ANR	673621	Statement	addr	4268:41:129307:129310	673417	21	True				
ANR	673622	Statement	)	4268:45:129311:129311	673417	22	True				
ANR	673623	ExpressionStatement		4268:46:129312:129312	673417	23	True				
ANR	673624	ExpressionStatement	ch -> cycles = ccl	4269:4:129318:129334	673417	24	True				
ANR	673625	AssignmentExpression	ch -> cycles = ccl		673417	0		=			
ANR	673626	PtrMemberAccess	ch -> cycles		673417	0					
ANR	673627	Identifier	ch		673417	0					
ANR	673628	Identifier	cycles		673417	1					
ANR	673629	Identifier	ccl		673417	1					
ANR	673630	ExpressionStatement	"r_list_append ( hooks , ch )"	4270:4:129340:129365	673417	25	True				
ANR	673631	CallExpression	"r_list_append ( hooks , ch )"		673417	0					
ANR	673632	Callee	r_list_append		673417	0					
ANR	673633	Identifier	r_list_append		673417	0					
ANR	673634	ArgumentList	hooks		673417	1					
ANR	673635	Argument	hooks		673417	0					
ANR	673636	Identifier	hooks		673417	0					
ANR	673637	Argument	ch		673417	1					
ANR	673638	Identifier	ch		673417	0					
ANR	673639	ExpressionStatement	ch = NULL	4271:4:129371:129380	673417	26	True				
ANR	673640	AssignmentExpression	ch = NULL		673417	0		=			
ANR	673641	Identifier	ch		673417	0					
ANR	673642	Identifier	NULL		673417	1					
ANR	673643	WhileStatement	while ( ! ch && cf )		673417	27					
ANR	673644	Condition	! ch && cf	4272:11:129393:129401	673417	0	True				
ANR	673645	AndExpression	! ch && cf		673417	0		&&			
ANR	673646	UnaryOperationExpression	! ch		673417	0					
ANR	673647	UnaryOperator	!		673417	0					
ANR	673648	Identifier	ch		673417	1					
ANR	673649	Identifier	cf		673417	1					
ANR	673650	CompoundStatement		36:22:987:987	673417	1					
ANR	673651	ExpressionStatement	ch = r_list_pop ( cf -> hooks )	4273:5:129411:129438	673417	0	True				
ANR	673652	AssignmentExpression	ch = r_list_pop ( cf -> hooks )		673417	0		=			
ANR	673653	Identifier	ch		673417	0					
ANR	673654	CallExpression	r_list_pop ( cf -> hooks )		673417	1					
ANR	673655	Callee	r_list_pop		673417	0					
ANR	673656	Identifier	r_list_pop		673417	0					
ANR	673657	ArgumentList	cf -> hooks		673417	1					
ANR	673658	Argument	cf -> hooks		673417	0					
ANR	673659	PtrMemberAccess	cf -> hooks		673417	0					
ANR	673660	Identifier	cf		673417	0					
ANR	673661	Identifier	hooks		673417	1					
ANR	673662	IfStatement	if ( ch )		673417	1					
ANR	673663	Condition	ch	4274:9:129449:129450	673417	0	True				
ANR	673664	Identifier	ch		673417	0					
ANR	673665	CompoundStatement		38:13:1036:1036	673417	1					
ANR	673666	ExpressionStatement	addr = ch -> addr	4275:6:129461:129476	673417	0	True				
ANR	673667	AssignmentExpression	addr = ch -> addr		673417	0		=			
ANR	673668	Identifier	addr		673417	0					
ANR	673669	PtrMemberAccess	ch -> addr		673417	1					
ANR	673670	Identifier	ch		673417	0					
ANR	673671	Identifier	addr		673417	1					
ANR	673672	ExpressionStatement	ccl = ch -> cycles	4276:6:129484:129500	673417	1	True				
ANR	673673	AssignmentExpression	ccl = ch -> cycles		673417	0		=			
ANR	673674	Identifier	ccl		673417	0					
ANR	673675	PtrMemberAccess	ch -> cycles		673417	1					
ANR	673676	Identifier	ch		673417	0					
ANR	673677	Identifier	cycles		673417	1					
ANR	673678	ExpressionStatement	free ( ch )	4277:6:129508:129517	673417	2	True				
ANR	673679	CallExpression	free ( ch )		673417	0					
ANR	673680	Callee	free		673417	0					
ANR	673681	Identifier	free		673417	0					
ANR	673682	ArgumentList	ch		673417	1					
ANR	673683	Argument	ch		673417	0					
ANR	673684	Identifier	ch		673417	0					
ANR	673685	ElseStatement	else		673417	0					
ANR	673686	CompoundStatement		42:12:1114:1114	673417	0					
ANR	673687	ExpressionStatement	r_anal_cycle_frame_free ( cf )	4279:6:129539:129567	673417	0	True				
ANR	673688	CallExpression	r_anal_cycle_frame_free ( cf )		673417	0					
ANR	673689	Callee	r_anal_cycle_frame_free		673417	0					
ANR	673690	Identifier	r_anal_cycle_frame_free		673417	0					
ANR	673691	ArgumentList	cf		673417	1					
ANR	673692	Argument	cf		673417	0					
ANR	673693	Identifier	cf		673417	0					
ANR	673694	ExpressionStatement	cf = prev	4280:6:129575:129584	673417	1	True				
ANR	673695	AssignmentExpression	cf = prev		673417	0		=			
ANR	673696	Identifier	cf		673417	0					
ANR	673697	Identifier	prev		673417	1					
ANR	673698	IfStatement	if ( cf )		673417	2					
ANR	673699	Condition	cf	4281:10:129596:129597	673417	0	True				
ANR	673700	Identifier	cf		673417	0					
ANR	673701	CompoundStatement		45:14:1183:1183	673417	1					
ANR	673702	ExpressionStatement	prev = cf -> prev	4282:7:129609:129624	673417	0	True				
ANR	673703	AssignmentExpression	prev = cf -> prev		673417	0		=			
ANR	673704	Identifier	prev		673417	0					
ANR	673705	PtrMemberAccess	cf -> prev		673417	1					
ANR	673706	Identifier	cf		673417	0					
ANR	673707	Identifier	prev		673417	1					
ANR	673708	BreakStatement	break ;	4286:4:129651:129656	673417	28	True				
ANR	673709	Label	case R_ANAL_OP_TYPE_CJMP :	4287:3:129661:129685	673417	29	True				
ANR	673710	Identifier	R_ANAL_OP_TYPE_CJMP		673417	0					
ANR	673711	ExpressionStatement	ch = R_NEW0 ( RAnalCycleHook )	4288:4:129691:129719	673417	30	True				
ANR	673712	AssignmentExpression	ch = R_NEW0 ( RAnalCycleHook )		673417	0		=			
ANR	673713	Identifier	ch		673417	0					
ANR	673714	CallExpression	R_NEW0 ( RAnalCycleHook )		673417	1					
ANR	673715	Callee	R_NEW0		673417	0					
ANR	673716	Identifier	R_NEW0		673417	0					
ANR	673717	ArgumentList	RAnalCycleHook		673417	1					
ANR	673718	Argument	RAnalCycleHook		673417	0					
ANR	673719	Identifier	RAnalCycleHook		673417	0					
ANR	673720	ExpressionStatement	ch -> addr = addr	4289:4:129725:129740	673417	31	True				
ANR	673721	AssignmentExpression	ch -> addr = addr		673417	0		=			
ANR	673722	PtrMemberAccess	ch -> addr		673417	0					
ANR	673723	Identifier	ch		673417	0					
ANR	673724	Identifier	addr		673417	1					
ANR	673725	Identifier	addr		673417	1					
ANR	673726	ExpressionStatement	ch -> cycles = ccl - op -> failcycles	4290:4:129746:129779	673417	32	True				
ANR	673727	AssignmentExpression	ch -> cycles = ccl - op -> failcycles		673417	0		=			
ANR	673728	PtrMemberAccess	ch -> cycles		673417	0					
ANR	673729	Identifier	ch		673417	0					
ANR	673730	Identifier	cycles		673417	1					
ANR	673731	AdditiveExpression	ccl - op -> failcycles		673417	1		-			
ANR	673732	Identifier	ccl		673417	0					
ANR	673733	PtrMemberAccess	op -> failcycles		673417	1					
ANR	673734	Identifier	op		673417	0					
ANR	673735	Identifier	failcycles		673417	1					
ANR	673736	ExpressionStatement	"r_list_push ( cf -> hooks , ch )"	4291:4:129785:129812	673417	33	True				
ANR	673737	CallExpression	"r_list_push ( cf -> hooks , ch )"		673417	0					
ANR	673738	Callee	r_list_push		673417	0					
ANR	673739	Identifier	r_list_push		673417	0					
ANR	673740	ArgumentList	cf -> hooks		673417	1					
ANR	673741	Argument	cf -> hooks		673417	0					
ANR	673742	PtrMemberAccess	cf -> hooks		673417	0					
ANR	673743	Identifier	cf		673417	0					
ANR	673744	Identifier	hooks		673417	1					
ANR	673745	Argument	ch		673417	1					
ANR	673746	Identifier	ch		673417	0					
ANR	673747	ExpressionStatement	ch = NULL	4292:4:129818:129827	673417	34	True				
ANR	673748	AssignmentExpression	ch = NULL		673417	0		=			
ANR	673749	Identifier	ch		673417	0					
ANR	673750	Identifier	NULL		673417	1					
ANR	673751	ExpressionStatement	addr = op -> jump	4293:4:129833:129848	673417	35	True				
ANR	673752	AssignmentExpression	addr = op -> jump		673417	0		=			
ANR	673753	Identifier	addr		673417	0					
ANR	673754	PtrMemberAccess	op -> jump		673417	1					
ANR	673755	Identifier	op		673417	0					
ANR	673756	Identifier	jump		673417	1					
ANR	673757	ExpressionStatement	"loganal ( op -> addr , addr , depth )"	4294:4:129854:129885	673417	36	True				
ANR	673758	CallExpression	"loganal ( op -> addr , addr , depth )"		673417	0					
ANR	673759	Callee	loganal		673417	0					
ANR	673760	Identifier	loganal		673417	0					
ANR	673761	ArgumentList	op -> addr		673417	1					
ANR	673762	Argument	op -> addr		673417	0					
ANR	673763	PtrMemberAccess	op -> addr		673417	0					
ANR	673764	Identifier	op		673417	0					
ANR	673765	Identifier	addr		673417	1					
ANR	673766	Argument	addr		673417	1					
ANR	673767	Identifier	addr		673417	0					
ANR	673768	Argument	depth		673417	2					
ANR	673769	Identifier	depth		673417	0					
ANR	673770	BreakStatement	break ;	4295:4:129891:129896	673417	37	True				
ANR	673771	Label	case R_ANAL_OP_TYPE_UCJMP :	4296:3:129901:129926	673417	38	True				
ANR	673772	Identifier	R_ANAL_OP_TYPE_UCJMP		673417	0					
ANR	673773	Label	case R_ANAL_OP_TYPE_UCCALL :	4297:3:129931:129957	673417	39	True				
ANR	673774	Identifier	R_ANAL_OP_TYPE_UCCALL		673417	0					
ANR	673775	ExpressionStatement	ch = R_NEW0 ( RAnalCycleHook )	4298:4:129963:129991	673417	40	True				
ANR	673776	AssignmentExpression	ch = R_NEW0 ( RAnalCycleHook )		673417	0		=			
ANR	673777	Identifier	ch		673417	0					
ANR	673778	CallExpression	R_NEW0 ( RAnalCycleHook )		673417	1					
ANR	673779	Callee	R_NEW0		673417	0					
ANR	673780	Identifier	R_NEW0		673417	0					
ANR	673781	ArgumentList	RAnalCycleHook		673417	1					
ANR	673782	Argument	RAnalCycleHook		673417	0					
ANR	673783	Identifier	RAnalCycleHook		673417	0					
ANR	673784	ExpressionStatement	ch -> addr = op -> addr	4299:4:129997:130016	673417	41	True				
ANR	673785	AssignmentExpression	ch -> addr = op -> addr		673417	0		=			
ANR	673786	PtrMemberAccess	ch -> addr		673417	0					
ANR	673787	Identifier	ch		673417	0					
ANR	673788	Identifier	addr		673417	1					
ANR	673789	PtrMemberAccess	op -> addr		673417	1					
ANR	673790	Identifier	op		673417	0					
ANR	673791	Identifier	addr		673417	1					
ANR	673792	ExpressionStatement	ch -> cycles = ccl	4300:4:130022:130038	673417	42	True				
ANR	673793	AssignmentExpression	ch -> cycles = ccl		673417	0		=			
ANR	673794	PtrMemberAccess	ch -> cycles		673417	0					
ANR	673795	Identifier	ch		673417	0					
ANR	673796	Identifier	cycles		673417	1					
ANR	673797	Identifier	ccl		673417	1					
ANR	673798	ExpressionStatement	"r_list_append ( hooks , ch )"	4301:4:130044:130069	673417	43	True				
ANR	673799	CallExpression	"r_list_append ( hooks , ch )"		673417	0					
ANR	673800	Callee	r_list_append		673417	0					
ANR	673801	Identifier	r_list_append		673417	0					
ANR	673802	ArgumentList	hooks		673417	1					
ANR	673803	Argument	hooks		673417	0					
ANR	673804	Identifier	hooks		673417	0					
ANR	673805	Argument	ch		673417	1					
ANR	673806	Identifier	ch		673417	0					
ANR	673807	ExpressionStatement	ch = NULL	4302:4:130075:130084	673417	44	True				
ANR	673808	AssignmentExpression	ch = NULL		673417	0		=			
ANR	673809	Identifier	ch		673417	0					
ANR	673810	Identifier	NULL		673417	1					
ANR	673811	ExpressionStatement	ccl -= op -> failcycles	4303:4:130090:130111	673417	45	True				
ANR	673812	AssignmentExpression	ccl -= op -> failcycles		673417	0		-=			
ANR	673813	Identifier	ccl		673417	0					
ANR	673814	PtrMemberAccess	op -> failcycles		673417	1					
ANR	673815	Identifier	op		673417	0					
ANR	673816	Identifier	failcycles		673417	1					
ANR	673817	Statement	eprintf	4304:4:130117:130123	673417	46	True				
ANR	673818	Statement	(	4304:12:130125:130125	673417	47	True				
ANR	673819	Statement	"""0x%08"""	4304:13:130126:130132	673417	48	True				
ANR	673820	Statement	PFMT64x	4304:20:130133:130139	673417	49	True				
ANR	673821	Statement	""" > ?\\r"""	4304:27:130140:130147	673417	50	True				
ANR	673822	Statement	","	4304:35:130148:130148	673417	51	True				
ANR	673823	Statement	op	4304:37:130150:130151	673417	52	True				
ANR	673824	Statement	->	4304:39:130152:130153	673417	53	True				
ANR	673825	Statement	addr	4304:41:130154:130157	673417	54	True				
ANR	673826	Statement	)	4304:45:130158:130158	673417	55	True				
ANR	673827	ExpressionStatement		4304:46:130159:130159	673417	56	True				
ANR	673828	BreakStatement	break ;	4305:4:130165:130170	673417	57	True				
ANR	673829	Label	case R_ANAL_OP_TYPE_CCALL :	4306:3:130175:130200	673417	58	True				
ANR	673830	Identifier	R_ANAL_OP_TYPE_CCALL		673417	0					
ANR	673831	ExpressionStatement	ch = R_NEW0 ( RAnalCycleHook )	4307:4:130206:130234	673417	59	True				
ANR	673832	AssignmentExpression	ch = R_NEW0 ( RAnalCycleHook )		673417	0		=			
ANR	673833	Identifier	ch		673417	0					
ANR	673834	CallExpression	R_NEW0 ( RAnalCycleHook )		673417	1					
ANR	673835	Callee	R_NEW0		673417	0					
ANR	673836	Identifier	R_NEW0		673417	0					
ANR	673837	ArgumentList	RAnalCycleHook		673417	1					
ANR	673838	Argument	RAnalCycleHook		673417	0					
ANR	673839	Identifier	RAnalCycleHook		673417	0					
ANR	673840	ExpressionStatement	ch -> addr = addr	4308:4:130240:130255	673417	60	True				
ANR	673841	AssignmentExpression	ch -> addr = addr		673417	0		=			
ANR	673842	PtrMemberAccess	ch -> addr		673417	0					
ANR	673843	Identifier	ch		673417	0					
ANR	673844	Identifier	addr		673417	1					
ANR	673845	Identifier	addr		673417	1					
ANR	673846	ExpressionStatement	ch -> cycles = ccl - op -> failcycles	4309:4:130261:130294	673417	61	True				
ANR	673847	AssignmentExpression	ch -> cycles = ccl - op -> failcycles		673417	0		=			
ANR	673848	PtrMemberAccess	ch -> cycles		673417	0					
ANR	673849	Identifier	ch		673417	0					
ANR	673850	Identifier	cycles		673417	1					
ANR	673851	AdditiveExpression	ccl - op -> failcycles		673417	1		-			
ANR	673852	Identifier	ccl		673417	0					
ANR	673853	PtrMemberAccess	op -> failcycles		673417	1					
ANR	673854	Identifier	op		673417	0					
ANR	673855	Identifier	failcycles		673417	1					
ANR	673856	ExpressionStatement	"r_list_push ( cf -> hooks , ch )"	4310:4:130300:130327	673417	62	True				
ANR	673857	CallExpression	"r_list_push ( cf -> hooks , ch )"		673417	0					
ANR	673858	Callee	r_list_push		673417	0					
ANR	673859	Identifier	r_list_push		673417	0					
ANR	673860	ArgumentList	cf -> hooks		673417	1					
ANR	673861	Argument	cf -> hooks		673417	0					
ANR	673862	PtrMemberAccess	cf -> hooks		673417	0					
ANR	673863	Identifier	cf		673417	0					
ANR	673864	Identifier	hooks		673417	1					
ANR	673865	Argument	ch		673417	1					
ANR	673866	Identifier	ch		673417	0					
ANR	673867	ExpressionStatement	ch = NULL	4311:4:130333:130342	673417	63	True				
ANR	673868	AssignmentExpression	ch = NULL		673417	0		=			
ANR	673869	Identifier	ch		673417	0					
ANR	673870	Identifier	NULL		673417	1					
ANR	673871	Label	case R_ANAL_OP_TYPE_CALL :	4312:3:130347:130371	673417	64	True				
ANR	673872	Identifier	R_ANAL_OP_TYPE_CALL		673417	0					
ANR	673873	IfStatement	if ( op -> addr != op -> jump )		673417	65					
ANR	673874	Condition	op -> addr != op -> jump	4313:8:130381:130400	673417	0	True				
ANR	673875	EqualityExpression	op -> addr != op -> jump		673417	0		!=			
ANR	673876	PtrMemberAccess	op -> addr		673417	0					
ANR	673877	Identifier	op		673417	0					
ANR	673878	Identifier	addr		673417	1					
ANR	673879	PtrMemberAccess	op -> jump		673417	1					
ANR	673880	Identifier	op		673417	0					
ANR	673881	Identifier	jump		673417	1					
ANR	673882	CompoundStatement		77:30:1986:1986	673417	1					
ANR	673883	ExpressionStatement	cf -> naddr = addr	4314:5:130423:130439	673417	0	True				
ANR	673884	AssignmentExpression	cf -> naddr = addr		673417	0		=			
ANR	673885	PtrMemberAccess	cf -> naddr		673417	0					
ANR	673886	Identifier	cf		673417	0					
ANR	673887	Identifier	naddr		673417	1					
ANR	673888	Identifier	addr		673417	1					
ANR	673889	ExpressionStatement	prev = cf	4315:5:130446:130455	673417	1	True				
ANR	673890	AssignmentExpression	prev = cf		673417	0		=			
ANR	673891	Identifier	prev		673417	0					
ANR	673892	Identifier	cf		673417	1					
ANR	673893	ExpressionStatement	cf = r_anal_cycle_frame_new ( )	4316:5:130462:130492	673417	2	True				
ANR	673894	AssignmentExpression	cf = r_anal_cycle_frame_new ( )		673417	0		=			
ANR	673895	Identifier	cf		673417	0					
ANR	673896	CallExpression	r_anal_cycle_frame_new ( )		673417	1					
ANR	673897	Callee	r_anal_cycle_frame_new		673417	0					
ANR	673898	Identifier	r_anal_cycle_frame_new		673417	0					
ANR	673899	ArgumentList			673417	1					
ANR	673900	ExpressionStatement	cf -> prev = prev	4317:5:130499:130514	673417	3	True				
ANR	673901	AssignmentExpression	cf -> prev = prev		673417	0		=			
ANR	673902	PtrMemberAccess	cf -> prev		673417	0					
ANR	673903	Identifier	cf		673417	0					
ANR	673904	Identifier	prev		673417	1					
ANR	673905	Identifier	prev		673417	1					
ANR	673906	ExpressionStatement	ccl -= op -> cycles	4319:4:130526:130543	673417	66	True				
ANR	673907	AssignmentExpression	ccl -= op -> cycles		673417	0		-=			
ANR	673908	Identifier	ccl		673417	0					
ANR	673909	PtrMemberAccess	op -> cycles		673417	1					
ANR	673910	Identifier	op		673417	0					
ANR	673911	Identifier	cycles		673417	1					
ANR	673912	ExpressionStatement	addr = op -> jump	4320:4:130549:130564	673417	67	True				
ANR	673913	AssignmentExpression	addr = op -> jump		673417	0		=			
ANR	673914	Identifier	addr		673417	0					
ANR	673915	PtrMemberAccess	op -> jump		673417	1					
ANR	673916	Identifier	op		673417	0					
ANR	673917	Identifier	jump		673417	1					
ANR	673918	ExpressionStatement	"loganal ( op -> addr , addr , depth - 1 )"	4321:4:130570:130605	673417	68	True				
ANR	673919	CallExpression	"loganal ( op -> addr , addr , depth - 1 )"		673417	0					
ANR	673920	Callee	loganal		673417	0					
ANR	673921	Identifier	loganal		673417	0					
ANR	673922	ArgumentList	op -> addr		673417	1					
ANR	673923	Argument	op -> addr		673417	0					
ANR	673924	PtrMemberAccess	op -> addr		673417	0					
ANR	673925	Identifier	op		673417	0					
ANR	673926	Identifier	addr		673417	1					
ANR	673927	Argument	addr		673417	1					
ANR	673928	Identifier	addr		673417	0					
ANR	673929	Argument	depth - 1		673417	2					
ANR	673930	AdditiveExpression	depth - 1		673417	0		-			
ANR	673931	Identifier	depth		673417	0					
ANR	673932	PrimaryExpression	1		673417	1					
ANR	673933	BreakStatement	break ;	4322:4:130611:130616	673417	69	True				
ANR	673934	Label	case R_ANAL_OP_TYPE_RET :	4323:3:130621:130644	673417	70	True				
ANR	673935	Identifier	R_ANAL_OP_TYPE_RET		673417	0					
ANR	673936	ExpressionStatement	ch = R_NEW0 ( RAnalCycleHook )	4324:4:130650:130678	673417	71	True				
ANR	673937	AssignmentExpression	ch = R_NEW0 ( RAnalCycleHook )		673417	0		=			
ANR	673938	Identifier	ch		673417	0					
ANR	673939	CallExpression	R_NEW0 ( RAnalCycleHook )		673417	1					
ANR	673940	Callee	R_NEW0		673417	0					
ANR	673941	Identifier	R_NEW0		673417	0					
ANR	673942	ArgumentList	RAnalCycleHook		673417	1					
ANR	673943	Argument	RAnalCycleHook		673417	0					
ANR	673944	Identifier	RAnalCycleHook		673417	0					
ANR	673945	IfStatement	if ( prev )		673417	72					
ANR	673946	Condition	prev	4325:8:130688:130691	673417	0	True				
ANR	673947	Identifier	prev		673417	0					
ANR	673948	CompoundStatement		89:14:2277:2277	673417	1					
ANR	673949	ExpressionStatement	ch -> addr = prev -> naddr	4326:5:130701:130723	673417	0	True				
ANR	673950	AssignmentExpression	ch -> addr = prev -> naddr		673417	0		=			
ANR	673951	PtrMemberAccess	ch -> addr		673417	0					
ANR	673952	Identifier	ch		673417	0					
ANR	673953	Identifier	addr		673417	1					
ANR	673954	PtrMemberAccess	prev -> naddr		673417	1					
ANR	673955	Identifier	prev		673417	0					
ANR	673956	Identifier	naddr		673417	1					
ANR	673957	ExpressionStatement	ccl -= op -> cycles	4327:5:130730:130747	673417	1	True				
ANR	673958	AssignmentExpression	ccl -= op -> cycles		673417	0		-=			
ANR	673959	Identifier	ccl		673417	0					
ANR	673960	PtrMemberAccess	op -> cycles		673417	1					
ANR	673961	Identifier	op		673417	0					
ANR	673962	Identifier	cycles		673417	1					
ANR	673963	ExpressionStatement	ch -> cycles = ccl	4328:5:130754:130770	673417	2	True				
ANR	673964	AssignmentExpression	ch -> cycles = ccl		673417	0		=			
ANR	673965	PtrMemberAccess	ch -> cycles		673417	0					
ANR	673966	Identifier	ch		673417	0					
ANR	673967	Identifier	cycles		673417	1					
ANR	673968	Identifier	ccl		673417	1					
ANR	673969	ExpressionStatement	"r_list_push ( prev -> hooks , ch )"	4329:5:130777:130806	673417	3	True				
ANR	673970	CallExpression	"r_list_push ( prev -> hooks , ch )"		673417	0					
ANR	673971	Callee	r_list_push		673417	0					
ANR	673972	Identifier	r_list_push		673417	0					
ANR	673973	ArgumentList	prev -> hooks		673417	1					
ANR	673974	Argument	prev -> hooks		673417	0					
ANR	673975	PtrMemberAccess	prev -> hooks		673417	0					
ANR	673976	Identifier	prev		673417	0					
ANR	673977	Identifier	hooks		673417	1					
ANR	673978	Argument	ch		673417	1					
ANR	673979	Identifier	ch		673417	0					
ANR	673980	Statement	eprintf	4330:5:130813:130819	673417	4	True				
ANR	673981	Statement	(	4330:13:130821:130821	673417	5	True				
ANR	673982	Statement	"""0x%08"""	4330:14:130822:130828	673417	6	True				
ANR	673983	Statement	PFMT64x	4330:21:130829:130835	673417	7	True				
ANR	673984	Statement	""" < 0x%08"""	4330:28:130836:130845	673417	8	True				
ANR	673985	Statement	PFMT64x	4330:38:130846:130852	673417	9	True				
ANR	673986	Statement	"""\\r"""	4330:45:130853:130856	673417	10	True				
ANR	673987	Statement	","	4330:49:130857:130857	673417	11	True				
ANR	673988	Statement	prev	4330:51:130859:130862	673417	12	True				
ANR	673989	Statement	->	4330:55:130863:130864	673417	13	True				
ANR	673990	Statement	naddr	4330:57:130865:130869	673417	14	True				
ANR	673991	Statement	","	4330:62:130870:130870	673417	15	True				
ANR	673992	Statement	op	4330:64:130872:130873	673417	16	True				
ANR	673993	Statement	->	4330:66:130874:130875	673417	17	True				
ANR	673994	Statement	addr	4330:68:130876:130879	673417	18	True				
ANR	673995	Statement	)	4330:72:130880:130880	673417	19	True				
ANR	673996	ExpressionStatement		4330:73:130881:130881	673417	20	True				
ANR	673997	ElseStatement	else		673417	0					
ANR	673998	CompoundStatement		95:11:2477:2477	673417	0					
ANR	673999	ExpressionStatement	ch -> addr = op -> addr	4332:5:130901:130920	673417	0	True				
ANR	674000	AssignmentExpression	ch -> addr = op -> addr		673417	0		=			
ANR	674001	PtrMemberAccess	ch -> addr		673417	0					
ANR	674002	Identifier	ch		673417	0					
ANR	674003	Identifier	addr		673417	1					
ANR	674004	PtrMemberAccess	op -> addr		673417	1					
ANR	674005	Identifier	op		673417	0					
ANR	674006	Identifier	addr		673417	1					
ANR	674007	ExpressionStatement	ch -> cycles = ccl	4333:5:130927:130943	673417	1	True				
ANR	674008	AssignmentExpression	ch -> cycles = ccl		673417	0		=			
ANR	674009	PtrMemberAccess	ch -> cycles		673417	0					
ANR	674010	Identifier	ch		673417	0					
ANR	674011	Identifier	cycles		673417	1					
ANR	674012	Identifier	ccl		673417	1					
ANR	674013	ExpressionStatement	"r_list_append ( hooks , ch )"	4334:5:130950:130975	673417	2	True				
ANR	674014	CallExpression	"r_list_append ( hooks , ch )"		673417	0					
ANR	674015	Callee	r_list_append		673417	0					
ANR	674016	Identifier	r_list_append		673417	0					
ANR	674017	ArgumentList	hooks		673417	1					
ANR	674018	Argument	hooks		673417	0					
ANR	674019	Identifier	hooks		673417	0					
ANR	674020	Argument	ch		673417	1					
ANR	674021	Identifier	ch		673417	0					
ANR	674022	Statement	eprintf	4335:5:130982:130988	673417	3	True				
ANR	674023	Statement	(	4335:13:130990:130990	673417	4	True				
ANR	674024	Statement	"""? < 0x%08"""	4335:14:130991:131001	673417	5	True				
ANR	674025	Statement	PFMT64x	4335:25:131002:131008	673417	6	True				
ANR	674026	Statement	"""\\r"""	4335:32:131009:131012	673417	7	True				
ANR	674027	Statement	","	4335:36:131013:131013	673417	8	True				
ANR	674028	Statement	op	4335:38:131015:131016	673417	9	True				
ANR	674029	Statement	->	4335:40:131017:131018	673417	10	True				
ANR	674030	Statement	addr	4335:42:131019:131022	673417	11	True				
ANR	674031	Statement	)	4335:46:131023:131023	673417	12	True				
ANR	674032	ExpressionStatement		4335:47:131024:131024	673417	13	True				
ANR	674033	ExpressionStatement	ch = NULL	4337:4:131036:131045	673417	73	True				
ANR	674034	AssignmentExpression	ch = NULL		673417	0		=			
ANR	674035	Identifier	ch		673417	0					
ANR	674036	Identifier	NULL		673417	1					
ANR	674037	WhileStatement	while ( ! ch && cf )		673417	74					
ANR	674038	Condition	! ch && cf	4338:11:131058:131066	673417	0	True				
ANR	674039	AndExpression	! ch && cf		673417	0		&&			
ANR	674040	UnaryOperationExpression	! ch		673417	0					
ANR	674041	UnaryOperator	!		673417	0					
ANR	674042	Identifier	ch		673417	1					
ANR	674043	Identifier	cf		673417	1					
ANR	674044	CompoundStatement		102:22:2652:2652	673417	1					
ANR	674045	ExpressionStatement	ch = r_list_pop ( cf -> hooks )	4339:5:131076:131103	673417	0	True				
ANR	674046	AssignmentExpression	ch = r_list_pop ( cf -> hooks )		673417	0		=			
ANR	674047	Identifier	ch		673417	0					
ANR	674048	CallExpression	r_list_pop ( cf -> hooks )		673417	1					
ANR	674049	Callee	r_list_pop		673417	0					
ANR	674050	Identifier	r_list_pop		673417	0					
ANR	674051	ArgumentList	cf -> hooks		673417	1					
ANR	674052	Argument	cf -> hooks		673417	0					
ANR	674053	PtrMemberAccess	cf -> hooks		673417	0					
ANR	674054	Identifier	cf		673417	0					
ANR	674055	Identifier	hooks		673417	1					
ANR	674056	IfStatement	if ( ch )		673417	1					
ANR	674057	Condition	ch	4340:9:131114:131115	673417	0	True				
ANR	674058	Identifier	ch		673417	0					
ANR	674059	CompoundStatement		104:13:2701:2701	673417	1					
ANR	674060	ExpressionStatement	addr = ch -> addr	4341:6:131126:131141	673417	0	True				
ANR	674061	AssignmentExpression	addr = ch -> addr		673417	0		=			
ANR	674062	Identifier	addr		673417	0					
ANR	674063	PtrMemberAccess	ch -> addr		673417	1					
ANR	674064	Identifier	ch		673417	0					
ANR	674065	Identifier	addr		673417	1					
ANR	674066	ExpressionStatement	ccl = ch -> cycles	4342:6:131149:131165	673417	1	True				
ANR	674067	AssignmentExpression	ccl = ch -> cycles		673417	0		=			
ANR	674068	Identifier	ccl		673417	0					
ANR	674069	PtrMemberAccess	ch -> cycles		673417	1					
ANR	674070	Identifier	ch		673417	0					
ANR	674071	Identifier	cycles		673417	1					
ANR	674072	ExpressionStatement	free ( ch )	4343:6:131173:131182	673417	2	True				
ANR	674073	CallExpression	free ( ch )		673417	0					
ANR	674074	Callee	free		673417	0					
ANR	674075	Identifier	free		673417	0					
ANR	674076	ArgumentList	ch		673417	1					
ANR	674077	Argument	ch		673417	0					
ANR	674078	Identifier	ch		673417	0					
ANR	674079	ElseStatement	else		673417	0					
ANR	674080	CompoundStatement		108:12:2779:2779	673417	0					
ANR	674081	ExpressionStatement	r_anal_cycle_frame_free ( cf )	4345:6:131204:131232	673417	0	True				
ANR	674082	CallExpression	r_anal_cycle_frame_free ( cf )		673417	0					
ANR	674083	Callee	r_anal_cycle_frame_free		673417	0					
ANR	674084	Identifier	r_anal_cycle_frame_free		673417	0					
ANR	674085	ArgumentList	cf		673417	1					
ANR	674086	Argument	cf		673417	0					
ANR	674087	Identifier	cf		673417	0					
ANR	674088	ExpressionStatement	cf = prev	4346:6:131240:131249	673417	1	True				
ANR	674089	AssignmentExpression	cf = prev		673417	0		=			
ANR	674090	Identifier	cf		673417	0					
ANR	674091	Identifier	prev		673417	1					
ANR	674092	IfStatement	if ( cf )		673417	2					
ANR	674093	Condition	cf	4347:10:131261:131262	673417	0	True				
ANR	674094	Identifier	cf		673417	0					
ANR	674095	CompoundStatement		111:14:2848:2848	673417	1					
ANR	674096	ExpressionStatement	prev = cf -> prev	4348:7:131274:131289	673417	0	True				
ANR	674097	AssignmentExpression	prev = cf -> prev		673417	0		=			
ANR	674098	Identifier	prev		673417	0					
ANR	674099	PtrMemberAccess	cf -> prev		673417	1					
ANR	674100	Identifier	cf		673417	0					
ANR	674101	Identifier	prev		673417	1					
ANR	674102	BreakStatement	break ;	4352:4:131316:131321	673417	75	True				
ANR	674103	Label	case R_ANAL_OP_TYPE_CRET :	4353:3:131326:131350	673417	76	True				
ANR	674104	Identifier	R_ANAL_OP_TYPE_CRET		673417	0					
ANR	674105	ExpressionStatement	ch = R_NEW0 ( RAnalCycleHook )	4354:4:131356:131384	673417	77	True				
ANR	674106	AssignmentExpression	ch = R_NEW0 ( RAnalCycleHook )		673417	0		=			
ANR	674107	Identifier	ch		673417	0					
ANR	674108	CallExpression	R_NEW0 ( RAnalCycleHook )		673417	1					
ANR	674109	Callee	R_NEW0		673417	0					
ANR	674110	Identifier	R_NEW0		673417	0					
ANR	674111	ArgumentList	RAnalCycleHook		673417	1					
ANR	674112	Argument	RAnalCycleHook		673417	0					
ANR	674113	Identifier	RAnalCycleHook		673417	0					
ANR	674114	IfStatement	if ( prev )		673417	78					
ANR	674115	Condition	prev	4355:8:131394:131397	673417	0	True				
ANR	674116	Identifier	prev		673417	0					
ANR	674117	CompoundStatement		119:14:2983:2983	673417	1					
ANR	674118	ExpressionStatement	ch -> addr = prev -> naddr	4356:5:131407:131429	673417	0	True				
ANR	674119	AssignmentExpression	ch -> addr = prev -> naddr		673417	0		=			
ANR	674120	PtrMemberAccess	ch -> addr		673417	0					
ANR	674121	Identifier	ch		673417	0					
ANR	674122	Identifier	addr		673417	1					
ANR	674123	PtrMemberAccess	prev -> naddr		673417	1					
ANR	674124	Identifier	prev		673417	0					
ANR	674125	Identifier	naddr		673417	1					
ANR	674126	ExpressionStatement	ch -> cycles = ccl - op -> cycles	4357:5:131436:131465	673417	1	True				
ANR	674127	AssignmentExpression	ch -> cycles = ccl - op -> cycles		673417	0		=			
ANR	674128	PtrMemberAccess	ch -> cycles		673417	0					
ANR	674129	Identifier	ch		673417	0					
ANR	674130	Identifier	cycles		673417	1					
ANR	674131	AdditiveExpression	ccl - op -> cycles		673417	1		-			
ANR	674132	Identifier	ccl		673417	0					
ANR	674133	PtrMemberAccess	op -> cycles		673417	1					
ANR	674134	Identifier	op		673417	0					
ANR	674135	Identifier	cycles		673417	1					
ANR	674136	ExpressionStatement	"r_list_push ( prev -> hooks , ch )"	4358:5:131472:131501	673417	2	True				
ANR	674137	CallExpression	"r_list_push ( prev -> hooks , ch )"		673417	0					
ANR	674138	Callee	r_list_push		673417	0					
ANR	674139	Identifier	r_list_push		673417	0					
ANR	674140	ArgumentList	prev -> hooks		673417	1					
ANR	674141	Argument	prev -> hooks		673417	0					
ANR	674142	PtrMemberAccess	prev -> hooks		673417	0					
ANR	674143	Identifier	prev		673417	0					
ANR	674144	Identifier	hooks		673417	1					
ANR	674145	Argument	ch		673417	1					
ANR	674146	Identifier	ch		673417	0					
ANR	674147	Statement	eprintf	4359:5:131508:131514	673417	3	True				
ANR	674148	Statement	(	4359:13:131516:131516	673417	4	True				
ANR	674149	Statement	"""0x%08"""	4359:14:131517:131523	673417	5	True				
ANR	674150	Statement	PFMT64x	4359:21:131524:131530	673417	6	True				
ANR	674151	Statement	""" < 0x%08"""	4359:28:131531:131540	673417	7	True				
ANR	674152	Statement	PFMT64x	4359:38:131541:131547	673417	8	True				
ANR	674153	Statement	"""\\r"""	4359:45:131548:131551	673417	9	True				
ANR	674154	Statement	","	4359:49:131552:131552	673417	10	True				
ANR	674155	Statement	prev	4359:51:131554:131557	673417	11	True				
ANR	674156	Statement	->	4359:55:131558:131559	673417	12	True				
ANR	674157	Statement	naddr	4359:57:131560:131564	673417	13	True				
ANR	674158	Statement	","	4359:62:131565:131565	673417	14	True				
ANR	674159	Statement	op	4359:64:131567:131568	673417	15	True				
ANR	674160	Statement	->	4359:66:131569:131570	673417	16	True				
ANR	674161	Statement	addr	4359:68:131571:131574	673417	17	True				
ANR	674162	Statement	)	4359:72:131575:131575	673417	18	True				
ANR	674163	ExpressionStatement		4359:73:131576:131576	673417	19	True				
ANR	674164	ElseStatement	else		673417	0					
ANR	674165	CompoundStatement		124:11:3172:3172	673417	0					
ANR	674166	ExpressionStatement	ch -> addr = op -> addr	4361:5:131596:131615	673417	0	True				
ANR	674167	AssignmentExpression	ch -> addr = op -> addr		673417	0		=			
ANR	674168	PtrMemberAccess	ch -> addr		673417	0					
ANR	674169	Identifier	ch		673417	0					
ANR	674170	Identifier	addr		673417	1					
ANR	674171	PtrMemberAccess	op -> addr		673417	1					
ANR	674172	Identifier	op		673417	0					
ANR	674173	Identifier	addr		673417	1					
ANR	674174	ExpressionStatement	ch -> cycles = ccl - op -> cycles	4362:5:131622:131651	673417	1	True				
ANR	674175	AssignmentExpression	ch -> cycles = ccl - op -> cycles		673417	0		=			
ANR	674176	PtrMemberAccess	ch -> cycles		673417	0					
ANR	674177	Identifier	ch		673417	0					
ANR	674178	Identifier	cycles		673417	1					
ANR	674179	AdditiveExpression	ccl - op -> cycles		673417	1		-			
ANR	674180	Identifier	ccl		673417	0					
ANR	674181	PtrMemberAccess	op -> cycles		673417	1					
ANR	674182	Identifier	op		673417	0					
ANR	674183	Identifier	cycles		673417	1					
ANR	674184	ExpressionStatement	"r_list_append ( hooks , ch )"	4363:5:131658:131683	673417	2	True				
ANR	674185	CallExpression	"r_list_append ( hooks , ch )"		673417	0					
ANR	674186	Callee	r_list_append		673417	0					
ANR	674187	Identifier	r_list_append		673417	0					
ANR	674188	ArgumentList	hooks		673417	1					
ANR	674189	Argument	hooks		673417	0					
ANR	674190	Identifier	hooks		673417	0					
ANR	674191	Argument	ch		673417	1					
ANR	674192	Identifier	ch		673417	0					
ANR	674193	Statement	eprintf	4364:5:131690:131696	673417	3	True				
ANR	674194	Statement	(	4364:13:131698:131698	673417	4	True				
ANR	674195	Statement	"""? < 0x%08"""	4364:14:131699:131709	673417	5	True				
ANR	674196	Statement	PFMT64x	4364:25:131710:131716	673417	6	True				
ANR	674197	Statement	"""\\r"""	4364:32:131717:131720	673417	7	True				
ANR	674198	Statement	","	4364:36:131721:131721	673417	8	True				
ANR	674199	Statement	op	4364:38:131723:131724	673417	9	True				
ANR	674200	Statement	->	4364:40:131725:131726	673417	10	True				
ANR	674201	Statement	addr	4364:42:131727:131730	673417	11	True				
ANR	674202	Statement	)	4364:46:131731:131731	673417	12	True				
ANR	674203	ExpressionStatement		4364:47:131732:131732	673417	13	True				
ANR	674204	ExpressionStatement	ccl -= op -> failcycles	4366:4:131744:131765	673417	79	True				
ANR	674205	AssignmentExpression	ccl -= op -> failcycles		673417	0		-=			
ANR	674206	Identifier	ccl		673417	0					
ANR	674207	PtrMemberAccess	op -> failcycles		673417	1					
ANR	674208	Identifier	op		673417	0					
ANR	674209	Identifier	failcycles		673417	1					
ANR	674210	BreakStatement	break ;	4367:4:131771:131776	673417	80	True				
ANR	674211	Label	default :	4368:3:131781:131788	673417	81	True				
ANR	674212	Identifier	default		673417	0					
ANR	674213	ExpressionStatement	ccl -= op -> cycles	4369:4:131794:131811	673417	82	True				
ANR	674214	AssignmentExpression	ccl -= op -> cycles		673417	0		-=			
ANR	674215	Identifier	ccl		673417	0					
ANR	674216	PtrMemberAccess	op -> cycles		673417	1					
ANR	674217	Identifier	op		673417	0					
ANR	674218	Identifier	cycles		673417	1					
ANR	674219	Statement	eprintf	4370:4:131817:131823	673417	83	True				
ANR	674220	Statement	(	4370:12:131825:131825	673417	84	True				
ANR	674221	Statement	"""0x%08"""	4370:13:131826:131832	673417	85	True				
ANR	674222	Statement	PFMT64x	4370:20:131833:131839	673417	86	True				
ANR	674223	Statement	"""\\r"""	4370:27:131840:131843	673417	87	True				
ANR	674224	Statement	","	4370:31:131844:131844	673417	88	True				
ANR	674225	Statement	op	4370:33:131846:131847	673417	89	True				
ANR	674226	Statement	->	4370:35:131848:131849	673417	90	True				
ANR	674227	Statement	addr	4370:37:131850:131853	673417	91	True				
ANR	674228	Statement	)	4370:41:131854:131854	673417	92	True				
ANR	674229	ExpressionStatement		4370:42:131855:131855	673417	93	True				
ANR	674230	BreakStatement	break ;	4371:4:131861:131866	673417	94	True				
ANR	674231	ElseStatement	else		673417	0					
ANR	674232	CompoundStatement		137:9:3465:3465	673417	0					
ANR	674233	ExpressionStatement	ch = R_NEW0 ( RAnalCycleHook )	4374:3:131887:131915	673417	0	True				
ANR	674234	AssignmentExpression	ch = R_NEW0 ( RAnalCycleHook )		673417	0		=			
ANR	674235	Identifier	ch		673417	0					
ANR	674236	CallExpression	R_NEW0 ( RAnalCycleHook )		673417	1					
ANR	674237	Callee	R_NEW0		673417	0					
ANR	674238	Identifier	R_NEW0		673417	0					
ANR	674239	ArgumentList	RAnalCycleHook		673417	1					
ANR	674240	Argument	RAnalCycleHook		673417	0					
ANR	674241	Identifier	RAnalCycleHook		673417	0					
ANR	674242	IfStatement	if ( ! ch )		673417	1					
ANR	674243	Condition	! ch	4375:7:131924:131926	673417	0	True				
ANR	674244	UnaryOperationExpression	! ch		673417	0					
ANR	674245	UnaryOperator	!		673417	0					
ANR	674246	Identifier	ch		673417	1					
ANR	674247	CompoundStatement		139:12:3512:3512	673417	1					
ANR	674248	ExpressionStatement	r_anal_cycle_frame_free ( cf )	4376:4:131935:131963	673417	0	True				
ANR	674249	CallExpression	r_anal_cycle_frame_free ( cf )		673417	0					
ANR	674250	Callee	r_anal_cycle_frame_free		673417	0					
ANR	674251	Identifier	r_anal_cycle_frame_free		673417	0					
ANR	674252	ArgumentList	cf		673417	1					
ANR	674253	Argument	cf		673417	0					
ANR	674254	Identifier	cf		673417	0					
ANR	674255	ExpressionStatement	r_list_free ( hooks )	4377:4:131969:131988	673417	1	True				
ANR	674256	CallExpression	r_list_free ( hooks )		673417	0					
ANR	674257	Callee	r_list_free		673417	0					
ANR	674258	Identifier	r_list_free		673417	0					
ANR	674259	ArgumentList	hooks		673417	1					
ANR	674260	Argument	hooks		673417	0					
ANR	674261	Identifier	hooks		673417	0					
ANR	674262	ReturnStatement	return NULL ;	4378:4:131994:132005	673417	2	True				
ANR	674263	Identifier	NULL		673417	0					
ANR	674264	ExpressionStatement	ch -> addr = addr	4380:3:132015:132030	673417	2	True				
ANR	674265	AssignmentExpression	ch -> addr = addr		673417	0		=			
ANR	674266	PtrMemberAccess	ch -> addr		673417	0					
ANR	674267	Identifier	ch		673417	0					
ANR	674268	Identifier	addr		673417	1					
ANR	674269	Identifier	addr		673417	1					
ANR	674270	ExpressionStatement	ch -> cycles = ccl	4381:3:132035:132051	673417	3	True				
ANR	674271	AssignmentExpression	ch -> cycles = ccl		673417	0		=			
ANR	674272	PtrMemberAccess	ch -> cycles		673417	0					
ANR	674273	Identifier	ch		673417	0					
ANR	674274	Identifier	cycles		673417	1					
ANR	674275	Identifier	ccl		673417	1					
ANR	674276	ExpressionStatement	"r_list_append ( hooks , ch )"	4382:3:132056:132081	673417	4	True				
ANR	674277	CallExpression	"r_list_append ( hooks , ch )"		673417	0					
ANR	674278	Callee	r_list_append		673417	0					
ANR	674279	Identifier	r_list_append		673417	0					
ANR	674280	ArgumentList	hooks		673417	1					
ANR	674281	Argument	hooks		673417	0					
ANR	674282	Identifier	hooks		673417	0					
ANR	674283	Argument	ch		673417	1					
ANR	674284	Identifier	ch		673417	0					
ANR	674285	ExpressionStatement	ch = NULL	4383:3:132086:132095	673417	5	True				
ANR	674286	AssignmentExpression	ch = NULL		673417	0		=			
ANR	674287	Identifier	ch		673417	0					
ANR	674288	Identifier	NULL		673417	1					
ANR	674289	WhileStatement	while ( ! ch && cf )		673417	6					
ANR	674290	Condition	! ch && cf	4384:10:132107:132115	673417	0	True				
ANR	674291	AndExpression	! ch && cf		673417	0		&&			
ANR	674292	UnaryOperationExpression	! ch		673417	0					
ANR	674293	UnaryOperator	!		673417	0					
ANR	674294	Identifier	ch		673417	1					
ANR	674295	Identifier	cf		673417	1					
ANR	674296	CompoundStatement		148:21:3701:3701	673417	1					
ANR	674297	ExpressionStatement	ch = r_list_pop ( cf -> hooks )	4385:4:132124:132151	673417	0	True				
ANR	674298	AssignmentExpression	ch = r_list_pop ( cf -> hooks )		673417	0		=			
ANR	674299	Identifier	ch		673417	0					
ANR	674300	CallExpression	r_list_pop ( cf -> hooks )		673417	1					
ANR	674301	Callee	r_list_pop		673417	0					
ANR	674302	Identifier	r_list_pop		673417	0					
ANR	674303	ArgumentList	cf -> hooks		673417	1					
ANR	674304	Argument	cf -> hooks		673417	0					
ANR	674305	PtrMemberAccess	cf -> hooks		673417	0					
ANR	674306	Identifier	cf		673417	0					
ANR	674307	Identifier	hooks		673417	1					
ANR	674308	IfStatement	if ( ch )		673417	1					
ANR	674309	Condition	ch	4386:8:132161:132162	673417	0	True				
ANR	674310	Identifier	ch		673417	0					
ANR	674311	CompoundStatement		150:12:3748:3748	673417	1					
ANR	674312	ExpressionStatement	addr = ch -> addr	4387:5:132172:132187	673417	0	True				
ANR	674313	AssignmentExpression	addr = ch -> addr		673417	0		=			
ANR	674314	Identifier	addr		673417	0					
ANR	674315	PtrMemberAccess	ch -> addr		673417	1					
ANR	674316	Identifier	ch		673417	0					
ANR	674317	Identifier	addr		673417	1					
ANR	674318	ExpressionStatement	ccl = ch -> cycles	4388:5:132194:132210	673417	1	True				
ANR	674319	AssignmentExpression	ccl = ch -> cycles		673417	0		=			
ANR	674320	Identifier	ccl		673417	0					
ANR	674321	PtrMemberAccess	ch -> cycles		673417	1					
ANR	674322	Identifier	ch		673417	0					
ANR	674323	Identifier	cycles		673417	1					
ANR	674324	ExpressionStatement	free ( ch )	4389:5:132217:132226	673417	2	True				
ANR	674325	CallExpression	free ( ch )		673417	0					
ANR	674326	Callee	free		673417	0					
ANR	674327	Identifier	free		673417	0					
ANR	674328	ArgumentList	ch		673417	1					
ANR	674329	Argument	ch		673417	0					
ANR	674330	Identifier	ch		673417	0					
ANR	674331	ElseStatement	else		673417	0					
ANR	674332	CompoundStatement		154:11:3822:3822	673417	0					
ANR	674333	ExpressionStatement	r_anal_cycle_frame_free ( cf )	4391:5:132246:132274	673417	0	True				
ANR	674334	CallExpression	r_anal_cycle_frame_free ( cf )		673417	0					
ANR	674335	Callee	r_anal_cycle_frame_free		673417	0					
ANR	674336	Identifier	r_anal_cycle_frame_free		673417	0					
ANR	674337	ArgumentList	cf		673417	1					
ANR	674338	Argument	cf		673417	0					
ANR	674339	Identifier	cf		673417	0					
ANR	674340	ExpressionStatement	cf = prev	4392:5:132281:132290	673417	1	True				
ANR	674341	AssignmentExpression	cf = prev		673417	0		=			
ANR	674342	Identifier	cf		673417	0					
ANR	674343	Identifier	prev		673417	1					
ANR	674344	IfStatement	if ( cf )		673417	2					
ANR	674345	Condition	cf	4393:9:132301:132302	673417	0	True				
ANR	674346	Identifier	cf		673417	0					
ANR	674347	CompoundStatement		157:13:3888:3888	673417	1					
ANR	674348	ExpressionStatement	prev = cf -> prev	4394:6:132313:132328	673417	0	True				
ANR	674349	AssignmentExpression	prev = cf -> prev		673417	0		=			
ANR	674350	Identifier	prev		673417	0					
ANR	674351	PtrMemberAccess	cf -> prev		673417	1					
ANR	674352	Identifier	cf		673417	0					
ANR	674353	Identifier	prev		673417	1					
ANR	674354	ExpressionStatement	r_anal_op_free ( op )	4399:2:132354:132373	673417	1	True				
ANR	674355	CallExpression	r_anal_op_free ( op )		673417	0					
ANR	674356	Callee	r_anal_op_free		673417	0					
ANR	674357	Identifier	r_anal_op_free		673417	0					
ANR	674358	ArgumentList	op		673417	1					
ANR	674359	Argument	op		673417	0					
ANR	674360	Identifier	op		673417	0					
ANR	674361	IfStatement	if ( r_cons_is_breaked ( ) )		673417	10					
ANR	674362	Condition	r_cons_is_breaked ( )	4401:5:132383:132402	673417	0	True				
ANR	674363	CallExpression	r_cons_is_breaked ( )		673417	0					
ANR	674364	Callee	r_cons_is_breaked		673417	0					
ANR	674365	Identifier	r_cons_is_breaked		673417	0					
ANR	674366	ArgumentList			673417	1					
ANR	674367	CompoundStatement		165:27:3988:3988	673417	1					
ANR	674368	WhileStatement	while ( cf )		673417	0					
ANR	674369	Condition	cf	4402:9:132416:132417	673417	0	True				
ANR	674370	Identifier	cf		673417	0					
ANR	674371	CompoundStatement		166:13:4003:4003	673417	1					
ANR	674372	ExpressionStatement	ch = r_list_pop ( cf -> hooks )	4403:3:132425:132452	673417	0	True				
ANR	674373	AssignmentExpression	ch = r_list_pop ( cf -> hooks )		673417	0		=			
ANR	674374	Identifier	ch		673417	0					
ANR	674375	CallExpression	r_list_pop ( cf -> hooks )		673417	1					
ANR	674376	Callee	r_list_pop		673417	0					
ANR	674377	Identifier	r_list_pop		673417	0					
ANR	674378	ArgumentList	cf -> hooks		673417	1					
ANR	674379	Argument	cf -> hooks		673417	0					
ANR	674380	PtrMemberAccess	cf -> hooks		673417	0					
ANR	674381	Identifier	cf		673417	0					
ANR	674382	Identifier	hooks		673417	1					
ANR	674383	WhileStatement	while ( ch )		673417	1					
ANR	674384	Condition	ch	4404:10:132464:132465	673417	0	True				
ANR	674385	Identifier	ch		673417	0					
ANR	674386	CompoundStatement		168:14:4051:4051	673417	1					
ANR	674387	ExpressionStatement	free ( ch )	4405:4:132474:132483	673417	0	True				
ANR	674388	CallExpression	free ( ch )		673417	0					
ANR	674389	Callee	free		673417	0					
ANR	674390	Identifier	free		673417	0					
ANR	674391	ArgumentList	ch		673417	1					
ANR	674392	Argument	ch		673417	0					
ANR	674393	Identifier	ch		673417	0					
ANR	674394	ExpressionStatement	ch = r_list_pop ( cf -> hooks )	4406:4:132489:132516	673417	1	True				
ANR	674395	AssignmentExpression	ch = r_list_pop ( cf -> hooks )		673417	0		=			
ANR	674396	Identifier	ch		673417	0					
ANR	674397	CallExpression	r_list_pop ( cf -> hooks )		673417	1					
ANR	674398	Callee	r_list_pop		673417	0					
ANR	674399	Identifier	r_list_pop		673417	0					
ANR	674400	ArgumentList	cf -> hooks		673417	1					
ANR	674401	Argument	cf -> hooks		673417	0					
ANR	674402	PtrMemberAccess	cf -> hooks		673417	0					
ANR	674403	Identifier	cf		673417	0					
ANR	674404	Identifier	hooks		673417	1					
ANR	674405	ExpressionStatement	prev = cf -> prev	4408:3:132526:132541	673417	2	True				
ANR	674406	AssignmentExpression	prev = cf -> prev		673417	0		=			
ANR	674407	Identifier	prev		673417	0					
ANR	674408	PtrMemberAccess	cf -> prev		673417	1					
ANR	674409	Identifier	cf		673417	0					
ANR	674410	Identifier	prev		673417	1					
ANR	674411	ExpressionStatement	r_anal_cycle_frame_free ( cf )	4409:3:132546:132574	673417	3	True				
ANR	674412	CallExpression	r_anal_cycle_frame_free ( cf )		673417	0					
ANR	674413	Callee	r_anal_cycle_frame_free		673417	0					
ANR	674414	Identifier	r_anal_cycle_frame_free		673417	0					
ANR	674415	ArgumentList	cf		673417	1					
ANR	674416	Argument	cf		673417	0					
ANR	674417	Identifier	cf		673417	0					
ANR	674418	ExpressionStatement	cf = prev	4410:3:132579:132588	673417	4	True				
ANR	674419	AssignmentExpression	cf = prev		673417	0		=			
ANR	674420	Identifier	cf		673417	0					
ANR	674421	Identifier	prev		673417	1					
ANR	674422	ExpressionStatement	r_cons_break_pop ( )	4413:1:132598:132617	673417	11	True				
ANR	674423	CallExpression	r_cons_break_pop ( )		673417	0					
ANR	674424	Callee	r_cons_break_pop		673417	0					
ANR	674425	Identifier	r_cons_break_pop		673417	0					
ANR	674426	ArgumentList			673417	1					
ANR	674427	ReturnStatement	return hooks ;	4414:1:132620:132632	673417	12	True				
ANR	674428	Identifier	hooks		673417	0					
ANR	674429	ReturnType	R_API RList *		673417	1					
ANR	674430	Identifier	r_core_anal_cycles		673417	2					
ANR	674431	ParameterList	"RCore * core , int ccl"		673417	3					
ANR	674432	Parameter	RCore * core	4237:32:128394:128404	673417	0	True				
ANR	674433	ParameterType	RCore *		673417	0					
ANR	674434	Identifier	core		673417	1					
ANR	674435	Parameter	int ccl	4237:45:128407:128413	673417	1	True				
ANR	674436	ParameterType	int		673417	0					
ANR	674437	Identifier	ccl		673417	1					
ANR	674438	CFGEntryNode	ENTRY		673417		True				
ANR	674439	CFGExitNode	EXIT		673417		True				
ANR	674440	Symbol	prev -> naddr		673417						
ANR	674441	Symbol	* op		673417						
ANR	674442	Symbol	prev		673417						
ANR	674443	Symbol	* core		673417						
ANR	674444	Symbol	* ch		673417						
ANR	674445	Symbol	ch -> cycles		673417						
ANR	674446	Symbol	cf -> prev		673417						
ANR	674447	Symbol	core -> offset		673417						
ANR	674448	Symbol	* cf		673417						
ANR	674449	Symbol	* prev		673417						
ANR	674450	Symbol	r_core_anal_op		673417						
ANR	674451	Symbol	ch -> addr		673417						
ANR	674452	Symbol	ccl		673417						
ANR	674453	Symbol	R_ANAL_OP_MASK_BASIC		673417						
ANR	674454	Symbol	r_list_pop		673417						
ANR	674455	Symbol	r_anal_cycle_frame_new		673417						
ANR	674456	Symbol	r_cons_is_breaked		673417						
ANR	674457	Symbol	op -> jump		673417						
ANR	674458	Symbol	RAnalCycleHook		673417						
ANR	674459	Symbol	addr		673417						
ANR	674460	Symbol	hooks		673417						
ANR	674461	Symbol	op		673417						
ANR	674462	Symbol	op -> addr		673417						
ANR	674463	Symbol	NULL		673417						
ANR	674464	Symbol	cf		673417						
ANR	674465	Symbol	ch		673417						
ANR	674466	Symbol	op -> type		673417						
ANR	674467	Symbol	op -> failcycles		673417						
ANR	674468	Symbol	core		673417						
ANR	674469	Symbol	R_NEW0		673417						
ANR	674470	Symbol	depth		673417						
ANR	674471	Symbol	op -> size		673417						
ANR	674472	Symbol	cf -> hooks		673417						
ANR	674473	Symbol	cf -> naddr		673417						
ANR	674474	Symbol	r_list_new		673417						
ANR	674475	Symbol	op -> cycles		673417						
ANR	674476	Symbol	prev -> hooks		673417						
ANR	674477	Function	r_core_anal_undefine	4417:0:132637:133004							
ANR	674478	FunctionDef	"r_core_anal_undefine (RCore * core , ut64 off)"		674477	0					
ANR	674479	CompoundStatement		4417:55:132692:133004	674477	0					
ANR	674480	IdentifierDeclStatement	RAnalFunction * f ;	4418:1:132695:132711	674477	0	True				
ANR	674481	IdentifierDecl	* f		674477	0					
ANR	674482	IdentifierDeclType	RAnalFunction *		674477	0					
ANR	674483	Identifier	f		674477	1					
ANR	674484	ExpressionStatement	"r_anal_fcn_del_locs ( core -> anal , off )"	4419:1:132714:132751	674477	1	True				
ANR	674485	CallExpression	"r_anal_fcn_del_locs ( core -> anal , off )"		674477	0					
ANR	674486	Callee	r_anal_fcn_del_locs		674477	0					
ANR	674487	Identifier	r_anal_fcn_del_locs		674477	0					
ANR	674488	ArgumentList	core -> anal		674477	1					
ANR	674489	Argument	core -> anal		674477	0					
ANR	674490	PtrMemberAccess	core -> anal		674477	0					
ANR	674491	Identifier	core		674477	0					
ANR	674492	Identifier	anal		674477	1					
ANR	674493	Argument	off		674477	1					
ANR	674494	Identifier	off		674477	0					
ANR	674495	ExpressionStatement	"f = r_anal_get_fcn_in ( core -> anal , off , 0 )"	4420:1:132754:132796	674477	2	True				
ANR	674496	AssignmentExpression	"f = r_anal_get_fcn_in ( core -> anal , off , 0 )"		674477	0		=			
ANR	674497	Identifier	f		674477	0					
ANR	674498	CallExpression	"r_anal_get_fcn_in ( core -> anal , off , 0 )"		674477	1					
ANR	674499	Callee	r_anal_get_fcn_in		674477	0					
ANR	674500	Identifier	r_anal_get_fcn_in		674477	0					
ANR	674501	ArgumentList	core -> anal		674477	1					
ANR	674502	Argument	core -> anal		674477	0					
ANR	674503	PtrMemberAccess	core -> anal		674477	0					
ANR	674504	Identifier	core		674477	0					
ANR	674505	Identifier	anal		674477	1					
ANR	674506	Argument	off		674477	1					
ANR	674507	Identifier	off		674477	0					
ANR	674508	Argument	0		674477	2					
ANR	674509	PrimaryExpression	0		674477	0					
ANR	674510	IfStatement	if ( f )		674477	3					
ANR	674511	Condition	f	4421:5:132803:132803	674477	0	True				
ANR	674512	Identifier	f		674477	0					
ANR	674513	CompoundStatement		5:8:113:113	674477	1					
ANR	674514	IfStatement	"if ( ! strncmp ( f -> name , ""fcn."" , 4 ) )"		674477	0					
ANR	674515	Condition	"! strncmp ( f -> name , ""fcn."" , 4 )"	4422:6:132814:132842	674477	0	True				
ANR	674516	UnaryOperationExpression	"! strncmp ( f -> name , ""fcn."" , 4 )"		674477	0					
ANR	674517	UnaryOperator	!		674477	0					
ANR	674518	CallExpression	"strncmp ( f -> name , ""fcn."" , 4 )"		674477	1					
ANR	674519	Callee	strncmp		674477	0					
ANR	674520	Identifier	strncmp		674477	0					
ANR	674521	ArgumentList	f -> name		674477	1					
ANR	674522	Argument	f -> name		674477	0					
ANR	674523	PtrMemberAccess	f -> name		674477	0					
ANR	674524	Identifier	f		674477	0					
ANR	674525	Identifier	name		674477	1					
ANR	674526	Argument	"""fcn."""		674477	1					
ANR	674527	PrimaryExpression	"""fcn."""		674477	0					
ANR	674528	Argument	4		674477	2					
ANR	674529	PrimaryExpression	4		674477	0					
ANR	674530	CompoundStatement		6:37:152:152	674477	1					
ANR	674531	ExpressionStatement	"r_flag_unset_name ( core -> flags , f -> name )"	4423:3:132850:132890	674477	0	True				
ANR	674532	CallExpression	"r_flag_unset_name ( core -> flags , f -> name )"		674477	0					
ANR	674533	Callee	r_flag_unset_name		674477	0					
ANR	674534	Identifier	r_flag_unset_name		674477	0					
ANR	674535	ArgumentList	core -> flags		674477	1					
ANR	674536	Argument	core -> flags		674477	0					
ANR	674537	PtrMemberAccess	core -> flags		674477	0					
ANR	674538	Identifier	core		674477	0					
ANR	674539	Identifier	flags		674477	1					
ANR	674540	Argument	f -> name		674477	1					
ANR	674541	PtrMemberAccess	f -> name		674477	0					
ANR	674542	Identifier	f		674477	0					
ANR	674543	Identifier	name		674477	1					
ANR	674544	ExpressionStatement	"r_meta_del ( core -> anal , R_META_TYPE_ANY , off , r_anal_fcn_size ( f ) )"	4425:2:132898:132964	674477	1	True				
ANR	674545	CallExpression	"r_meta_del ( core -> anal , R_META_TYPE_ANY , off , r_anal_fcn_size ( f ) )"		674477	0					
ANR	674546	Callee	r_meta_del		674477	0					
ANR	674547	Identifier	r_meta_del		674477	0					
ANR	674548	ArgumentList	core -> anal		674477	1					
ANR	674549	Argument	core -> anal		674477	0					
ANR	674550	PtrMemberAccess	core -> anal		674477	0					
ANR	674551	Identifier	core		674477	0					
ANR	674552	Identifier	anal		674477	1					
ANR	674553	Argument	R_META_TYPE_ANY		674477	1					
ANR	674554	Identifier	R_META_TYPE_ANY		674477	0					
ANR	674555	Argument	off		674477	2					
ANR	674556	Identifier	off		674477	0					
ANR	674557	Argument	r_anal_fcn_size ( f )		674477	3					
ANR	674558	CallExpression	r_anal_fcn_size ( f )		674477	0					
ANR	674559	Callee	r_anal_fcn_size		674477	0					
ANR	674560	Identifier	r_anal_fcn_size		674477	0					
ANR	674561	ArgumentList	f		674477	1					
ANR	674562	Argument	f		674477	0					
ANR	674563	Identifier	f		674477	0					
ANR	674564	ExpressionStatement	"r_anal_fcn_del ( core -> anal , off )"	4427:1:132970:133002	674477	4	True				
ANR	674565	CallExpression	"r_anal_fcn_del ( core -> anal , off )"		674477	0					
ANR	674566	Callee	r_anal_fcn_del		674477	0					
ANR	674567	Identifier	r_anal_fcn_del		674477	0					
ANR	674568	ArgumentList	core -> anal		674477	1					
ANR	674569	Argument	core -> anal		674477	0					
ANR	674570	PtrMemberAccess	core -> anal		674477	0					
ANR	674571	Identifier	core		674477	0					
ANR	674572	Identifier	anal		674477	1					
ANR	674573	Argument	off		674477	1					
ANR	674574	Identifier	off		674477	0					
ANR	674575	ReturnType	R_API void		674477	1					
ANR	674576	Identifier	r_core_anal_undefine		674477	2					
ANR	674577	ParameterList	"RCore * core , ut64 off"		674477	3					
ANR	674578	Parameter	RCore * core	4417:32:132669:132679	674477	0	True				
ANR	674579	ParameterType	RCore *		674477	0					
ANR	674580	Identifier	core		674477	1					
ANR	674581	Parameter	ut64 off	4417:45:132682:132689	674477	1	True				
ANR	674582	ParameterType	ut64		674477	0					
ANR	674583	Identifier	off		674477	1					
ANR	674584	CFGEntryNode	ENTRY		674477		True				
ANR	674585	CFGExitNode	EXIT		674477		True				
ANR	674586	Symbol	* f		674477						
ANR	674587	Symbol	core		674477						
ANR	674588	Symbol	strncmp		674477						
ANR	674589	Symbol	r_anal_get_fcn_in		674477						
ANR	674590	Symbol	f -> name		674477						
ANR	674591	Symbol	r_anal_fcn_size		674477						
ANR	674592	Symbol	f		674477						
ANR	674593	Symbol	* core		674477						
ANR	674594	Symbol	core -> flags		674477						
ANR	674595	Symbol	R_META_TYPE_ANY		674477						
ANR	674596	Symbol	core -> anal		674477						
ANR	674597	Symbol	off		674477						
ANR	674598	Function	r_core_anal_fcn_merge	4432:0:133089:134559							
ANR	674599	FunctionDef	"r_core_anal_fcn_merge (RCore * core , ut64 addr , ut64 addr2)"		674598	0					
ANR	674600	CompoundStatement		4432:69:133158:134559	674598	0					
ANR	674601	IdentifierDeclStatement	RListIter * iter ;	4433:1:133161:133176	674598	0	True				
ANR	674602	IdentifierDecl	* iter		674598	0					
ANR	674603	IdentifierDeclType	RListIter *		674598	0					
ANR	674604	Identifier	iter		674598	1					
ANR	674605	IdentifierDeclStatement	ut64 min = 0 ;	4434:1:133179:133191	674598	1	True				
ANR	674606	IdentifierDecl	min = 0		674598	0					
ANR	674607	IdentifierDeclType	ut64		674598	0					
ANR	674608	Identifier	min		674598	1					
ANR	674609	AssignmentExpression	min = 0		674598	2		=			
ANR	674610	Identifier	min		674598	0					
ANR	674611	PrimaryExpression	0		674598	1					
ANR	674612	IdentifierDeclStatement	ut64 max = 0 ;	4435:1:133194:133206	674598	2	True				
ANR	674613	IdentifierDecl	max = 0		674598	0					
ANR	674614	IdentifierDeclType	ut64		674598	0					
ANR	674615	Identifier	max		674598	1					
ANR	674616	AssignmentExpression	max = 0		674598	2		=			
ANR	674617	Identifier	max		674598	0					
ANR	674618	PrimaryExpression	0		674598	1					
ANR	674619	IdentifierDeclStatement	int first = 1 ;	4436:1:133209:133222	674598	3	True				
ANR	674620	IdentifierDecl	first = 1		674598	0					
ANR	674621	IdentifierDeclType	int		674598	0					
ANR	674622	Identifier	first		674598	1					
ANR	674623	AssignmentExpression	first = 1		674598	2		=			
ANR	674624	Identifier	first		674598	0					
ANR	674625	PrimaryExpression	1		674598	1					
ANR	674626	IdentifierDeclStatement	RAnalBlock * bb ;	4437:1:133225:133239	674598	4	True				
ANR	674627	IdentifierDecl	* bb		674598	0					
ANR	674628	IdentifierDeclType	RAnalBlock *		674598	0					
ANR	674629	Identifier	bb		674598	1					
ANR	674630	IdentifierDeclStatement	"RAnalFunction * f1 = r_anal_get_fcn_at ( core -> anal , addr , 0 ) ;"	4438:1:133242:133301	674598	5	True				
ANR	674631	IdentifierDecl	"* f1 = r_anal_get_fcn_at ( core -> anal , addr , 0 )"		674598	0					
ANR	674632	IdentifierDeclType	RAnalFunction *		674598	0					
ANR	674633	Identifier	f1		674598	1					
ANR	674634	AssignmentExpression	"* f1 = r_anal_get_fcn_at ( core -> anal , addr , 0 )"		674598	2		=			
ANR	674635	Identifier	f1		674598	0					
ANR	674636	CallExpression	"r_anal_get_fcn_at ( core -> anal , addr , 0 )"		674598	1					
ANR	674637	Callee	r_anal_get_fcn_at		674598	0					
ANR	674638	Identifier	r_anal_get_fcn_at		674598	0					
ANR	674639	ArgumentList	core -> anal		674598	1					
ANR	674640	Argument	core -> anal		674598	0					
ANR	674641	PtrMemberAccess	core -> anal		674598	0					
ANR	674642	Identifier	core		674598	0					
ANR	674643	Identifier	anal		674598	1					
ANR	674644	Argument	addr		674598	1					
ANR	674645	Identifier	addr		674598	0					
ANR	674646	Argument	0		674598	2					
ANR	674647	PrimaryExpression	0		674598	0					
ANR	674648	IdentifierDeclStatement	"RAnalFunction * f2 = r_anal_get_fcn_at ( core -> anal , addr2 , 0 ) ;"	4439:1:133304:133364	674598	6	True				
ANR	674649	IdentifierDecl	"* f2 = r_anal_get_fcn_at ( core -> anal , addr2 , 0 )"		674598	0					
ANR	674650	IdentifierDeclType	RAnalFunction *		674598	0					
ANR	674651	Identifier	f2		674598	1					
ANR	674652	AssignmentExpression	"* f2 = r_anal_get_fcn_at ( core -> anal , addr2 , 0 )"		674598	2		=			
ANR	674653	Identifier	f2		674598	0					
ANR	674654	CallExpression	"r_anal_get_fcn_at ( core -> anal , addr2 , 0 )"		674598	1					
ANR	674655	Callee	r_anal_get_fcn_at		674598	0					
ANR	674656	Identifier	r_anal_get_fcn_at		674598	0					
ANR	674657	ArgumentList	core -> anal		674598	1					
ANR	674658	Argument	core -> anal		674598	0					
ANR	674659	PtrMemberAccess	core -> anal		674598	0					
ANR	674660	Identifier	core		674598	0					
ANR	674661	Identifier	anal		674598	1					
ANR	674662	Argument	addr2		674598	1					
ANR	674663	Identifier	addr2		674598	0					
ANR	674664	Argument	0		674598	2					
ANR	674665	PrimaryExpression	0		674598	0					
ANR	674666	IdentifierDeclStatement	RAnalFunction * f3 = NULL ;	4440:1:133367:133391	674598	7	True				
ANR	674667	IdentifierDecl	* f3 = NULL		674598	0					
ANR	674668	IdentifierDeclType	RAnalFunction *		674598	0					
ANR	674669	Identifier	f3		674598	1					
ANR	674670	AssignmentExpression	* f3 = NULL		674598	2		=			
ANR	674671	Identifier	NULL		674598	0					
ANR	674672	Identifier	NULL		674598	1					
ANR	674673	IfStatement	if ( ! f1 || ! f2 )		674598	8					
ANR	674674	Condition	! f1 || ! f2	4441:5:133398:133407	674598	0	True				
ANR	674675	OrExpression	! f1 || ! f2		674598	0		||			
ANR	674676	UnaryOperationExpression	! f1		674598	0					
ANR	674677	UnaryOperator	!		674598	0					
ANR	674678	Identifier	f1		674598	1					
ANR	674679	UnaryOperationExpression	! f2		674598	1					
ANR	674680	UnaryOperator	!		674598	0					
ANR	674681	Identifier	f2		674598	1					
ANR	674682	CompoundStatement		10:17:251:251	674598	1					
ANR	674683	ExpressionStatement	"eprintf ( ""Cannot find function\\n"" )"	4442:2:133414:133448	674598	0	True				
ANR	674684	CallExpression	"eprintf ( ""Cannot find function\\n"" )"		674598	0					
ANR	674685	Callee	eprintf		674598	0					
ANR	674686	Identifier	eprintf		674598	0					
ANR	674687	ArgumentList	"""Cannot find function\\n"""		674598	1					
ANR	674688	Argument	"""Cannot find function\\n"""		674598	0					
ANR	674689	PrimaryExpression	"""Cannot find function\\n"""		674598	0					
ANR	674690	ReturnStatement	return ;	4443:2:133452:133458	674598	1	True				
ANR	674691	IfStatement	if ( f1 == f2 )		674598	9					
ANR	674692	Condition	f1 == f2	4445:5:133468:133475	674598	0	True				
ANR	674693	EqualityExpression	f1 == f2		674598	0		==			
ANR	674694	Identifier	f1		674598	0					
ANR	674695	Identifier	f2		674598	1					
ANR	674696	CompoundStatement		14:15:319:319	674598	1					
ANR	674697	ExpressionStatement	"eprintf ( ""Cannot merge the same function\\n"" )"	4446:2:133482:133526	674598	0	True				
ANR	674698	CallExpression	"eprintf ( ""Cannot merge the same function\\n"" )"		674598	0					
ANR	674699	Callee	eprintf		674598	0					
ANR	674700	Identifier	eprintf		674598	0					
ANR	674701	ArgumentList	"""Cannot merge the same function\\n"""		674598	1					
ANR	674702	Argument	"""Cannot merge the same function\\n"""		674598	0					
ANR	674703	PrimaryExpression	"""Cannot merge the same function\\n"""		674598	0					
ANR	674704	ReturnStatement	return ;	4447:2:133530:133536	674598	1	True				
ANR	674705	Statement	eprintf	4451:1:133614:133620	674598	10	True				
ANR	674706	Statement	(	4451:9:133622:133622	674598	11	True				
ANR	674707	Statement	"""Merge 0x%08"""	4451:10:133623:133635	674598	12	True				
ANR	674708	Statement	PFMT64x	4451:23:133636:133642	674598	13	True				
ANR	674709	Statement	""" into 0x%08"""	4451:30:133643:133655	674598	14	True				
ANR	674710	Statement	PFMT64x	4451:43:133656:133662	674598	15	True				
ANR	674711	Statement	"""\\n"""	4451:50:133663:133666	674598	16	True				
ANR	674712	Statement	","	4451:54:133667:133667	674598	17	True				
ANR	674713	Statement	addr	4451:56:133669:133672	674598	18	True				
ANR	674714	Statement	","	4451:60:133673:133673	674598	19	True				
ANR	674715	Statement	addr2	4451:62:133675:133679	674598	20	True				
ANR	674716	Statement	)	4451:67:133680:133680	674598	21	True				
ANR	674717	ExpressionStatement		4451:68:133681:133681	674598	22	True				
ANR	674718	Statement	r_list_foreach	4452:1:133684:133697	674598	23	True				
ANR	674719	Statement	(	4452:16:133699:133699	674598	24	True				
ANR	674720	Statement	f1	4452:17:133700:133701	674598	25	True				
ANR	674721	Statement	->	4452:19:133702:133703	674598	26	True				
ANR	674722	Statement	bbs	4452:21:133704:133706	674598	27	True				
ANR	674723	Statement	","	4452:24:133707:133707	674598	28	True				
ANR	674724	Statement	iter	4452:26:133709:133712	674598	29	True				
ANR	674725	Statement	","	4452:30:133713:133713	674598	30	True				
ANR	674726	Statement	bb	4452:32:133715:133716	674598	31	True				
ANR	674727	Statement	)	4452:34:133717:133717	674598	32	True				
ANR	674728	CompoundStatement		21:36:560:560	674598	33					
ANR	674729	IfStatement	if ( first )		674598	0					
ANR	674730	Condition	first	4453:6:133727:133731	674598	0	True				
ANR	674731	Identifier	first		674598	0					
ANR	674732	CompoundStatement		22:13:575:575	674598	1					
ANR	674733	ExpressionStatement	min = bb -> addr	4454:3:133739:133753	674598	0	True				
ANR	674734	AssignmentExpression	min = bb -> addr		674598	0		=			
ANR	674735	Identifier	min		674598	0					
ANR	674736	PtrMemberAccess	bb -> addr		674598	1					
ANR	674737	Identifier	bb		674598	0					
ANR	674738	Identifier	addr		674598	1					
ANR	674739	ExpressionStatement	max = bb -> addr + bb -> size	4455:3:133758:133783	674598	1	True				
ANR	674740	AssignmentExpression	max = bb -> addr + bb -> size		674598	0		=			
ANR	674741	Identifier	max		674598	0					
ANR	674742	AdditiveExpression	bb -> addr + bb -> size		674598	1		+			
ANR	674743	PtrMemberAccess	bb -> addr		674598	0					
ANR	674744	Identifier	bb		674598	0					
ANR	674745	Identifier	addr		674598	1					
ANR	674746	PtrMemberAccess	bb -> size		674598	1					
ANR	674747	Identifier	bb		674598	0					
ANR	674748	Identifier	size		674598	1					
ANR	674749	ExpressionStatement	first = 0	4456:3:133788:133797	674598	2	True				
ANR	674750	AssignmentExpression	first = 0		674598	0		=			
ANR	674751	Identifier	first		674598	0					
ANR	674752	PrimaryExpression	0		674598	1					
ANR	674753	ElseStatement	else		674598	0					
ANR	674754	CompoundStatement		26:9:649:649	674598	0					
ANR	674755	IfStatement	if ( bb -> addr < min )		674598	0					
ANR	674756	Condition	bb -> addr < min	4458:7:133817:133830	674598	0	True				
ANR	674757	RelationalExpression	bb -> addr < min		674598	0		<			
ANR	674758	PtrMemberAccess	bb -> addr		674598	0					
ANR	674759	Identifier	bb		674598	0					
ANR	674760	Identifier	addr		674598	1					
ANR	674761	Identifier	min		674598	1					
ANR	674762	CompoundStatement		27:23:674:674	674598	1					
ANR	674763	ExpressionStatement	min = bb -> addr	4459:4:133839:133853	674598	0	True				
ANR	674764	AssignmentExpression	min = bb -> addr		674598	0		=			
ANR	674765	Identifier	min		674598	0					
ANR	674766	PtrMemberAccess	bb -> addr		674598	1					
ANR	674767	Identifier	bb		674598	0					
ANR	674768	Identifier	addr		674598	1					
ANR	674769	IfStatement	if ( bb -> addr + bb -> size > max )		674598	1					
ANR	674770	Condition	bb -> addr + bb -> size > max	4461:7:133867:133891	674598	0	True				
ANR	674771	RelationalExpression	bb -> addr + bb -> size > max		674598	0		>			
ANR	674772	AdditiveExpression	bb -> addr + bb -> size		674598	0		+			
ANR	674773	PtrMemberAccess	bb -> addr		674598	0					
ANR	674774	Identifier	bb		674598	0					
ANR	674775	Identifier	addr		674598	1					
ANR	674776	PtrMemberAccess	bb -> size		674598	1					
ANR	674777	Identifier	bb		674598	0					
ANR	674778	Identifier	size		674598	1					
ANR	674779	Identifier	max		674598	1					
ANR	674780	CompoundStatement		30:34:735:735	674598	1					
ANR	674781	ExpressionStatement	max = bb -> addr + bb -> size	4462:4:133900:133925	674598	0	True				
ANR	674782	AssignmentExpression	max = bb -> addr + bb -> size		674598	0		=			
ANR	674783	Identifier	max		674598	0					
ANR	674784	AdditiveExpression	bb -> addr + bb -> size		674598	1		+			
ANR	674785	PtrMemberAccess	bb -> addr		674598	0					
ANR	674786	Identifier	bb		674598	0					
ANR	674787	Identifier	addr		674598	1					
ANR	674788	PtrMemberAccess	bb -> size		674598	1					
ANR	674789	Identifier	bb		674598	0					
ANR	674790	Identifier	size		674598	1					
ANR	674791	Statement	r_list_foreach	4466:1:133940:133953	674598	34	True				
ANR	674792	Statement	(	4466:16:133955:133955	674598	35	True				
ANR	674793	Statement	f2	4466:17:133956:133957	674598	36	True				
ANR	674794	Statement	->	4466:19:133958:133959	674598	37	True				
ANR	674795	Statement	bbs	4466:21:133960:133962	674598	38	True				
ANR	674796	Statement	","	4466:24:133963:133963	674598	39	True				
ANR	674797	Statement	iter	4466:26:133965:133968	674598	40	True				
ANR	674798	Statement	","	4466:30:133969:133969	674598	41	True				
ANR	674799	Statement	bb	4466:32:133971:133972	674598	42	True				
ANR	674800	Statement	)	4466:34:133973:133973	674598	43	True				
ANR	674801	CompoundStatement		35:36:816:816	674598	44					
ANR	674802	IfStatement	if ( first )		674598	0					
ANR	674803	Condition	first	4467:6:133983:133987	674598	0	True				
ANR	674804	Identifier	first		674598	0					
ANR	674805	CompoundStatement		36:13:831:831	674598	1					
ANR	674806	ExpressionStatement	min = bb -> addr	4468:3:133995:134009	674598	0	True				
ANR	674807	AssignmentExpression	min = bb -> addr		674598	0		=			
ANR	674808	Identifier	min		674598	0					
ANR	674809	PtrMemberAccess	bb -> addr		674598	1					
ANR	674810	Identifier	bb		674598	0					
ANR	674811	Identifier	addr		674598	1					
ANR	674812	ExpressionStatement	max = bb -> addr + bb -> size	4469:3:134014:134039	674598	1	True				
ANR	674813	AssignmentExpression	max = bb -> addr + bb -> size		674598	0		=			
ANR	674814	Identifier	max		674598	0					
ANR	674815	AdditiveExpression	bb -> addr + bb -> size		674598	1		+			
ANR	674816	PtrMemberAccess	bb -> addr		674598	0					
ANR	674817	Identifier	bb		674598	0					
ANR	674818	Identifier	addr		674598	1					
ANR	674819	PtrMemberAccess	bb -> size		674598	1					
ANR	674820	Identifier	bb		674598	0					
ANR	674821	Identifier	size		674598	1					
ANR	674822	ExpressionStatement	first = 0	4470:3:134044:134053	674598	2	True				
ANR	674823	AssignmentExpression	first = 0		674598	0		=			
ANR	674824	Identifier	first		674598	0					
ANR	674825	PrimaryExpression	0		674598	1					
ANR	674826	ElseStatement	else		674598	0					
ANR	674827	CompoundStatement		40:9:905:905	674598	0					
ANR	674828	IfStatement	if ( bb -> addr < min )		674598	0					
ANR	674829	Condition	bb -> addr < min	4472:7:134073:134086	674598	0	True				
ANR	674830	RelationalExpression	bb -> addr < min		674598	0		<			
ANR	674831	PtrMemberAccess	bb -> addr		674598	0					
ANR	674832	Identifier	bb		674598	0					
ANR	674833	Identifier	addr		674598	1					
ANR	674834	Identifier	min		674598	1					
ANR	674835	CompoundStatement		41:23:930:930	674598	1					
ANR	674836	ExpressionStatement	min = bb -> addr	4473:4:134095:134109	674598	0	True				
ANR	674837	AssignmentExpression	min = bb -> addr		674598	0		=			
ANR	674838	Identifier	min		674598	0					
ANR	674839	PtrMemberAccess	bb -> addr		674598	1					
ANR	674840	Identifier	bb		674598	0					
ANR	674841	Identifier	addr		674598	1					
ANR	674842	IfStatement	if ( bb -> addr + bb -> size > max )		674598	1					
ANR	674843	Condition	bb -> addr + bb -> size > max	4475:7:134123:134147	674598	0	True				
ANR	674844	RelationalExpression	bb -> addr + bb -> size > max		674598	0		>			
ANR	674845	AdditiveExpression	bb -> addr + bb -> size		674598	0		+			
ANR	674846	PtrMemberAccess	bb -> addr		674598	0					
ANR	674847	Identifier	bb		674598	0					
ANR	674848	Identifier	addr		674598	1					
ANR	674849	PtrMemberAccess	bb -> size		674598	1					
ANR	674850	Identifier	bb		674598	0					
ANR	674851	Identifier	size		674598	1					
ANR	674852	Identifier	max		674598	1					
ANR	674853	CompoundStatement		44:34:991:991	674598	1					
ANR	674854	ExpressionStatement	max = bb -> addr + bb -> size	4476:4:134156:134181	674598	0	True				
ANR	674855	AssignmentExpression	max = bb -> addr + bb -> size		674598	0		=			
ANR	674856	Identifier	max		674598	0					
ANR	674857	AdditiveExpression	bb -> addr + bb -> size		674598	1		+			
ANR	674858	PtrMemberAccess	bb -> addr		674598	0					
ANR	674859	Identifier	bb		674598	0					
ANR	674860	Identifier	addr		674598	1					
ANR	674861	PtrMemberAccess	bb -> size		674598	1					
ANR	674862	Identifier	bb		674598	0					
ANR	674863	Identifier	size		674598	1					
ANR	674864	ExpressionStatement	"r_anal_fcn_bbadd ( f1 , bb )"	4479:2:134194:134219	674598	1	True				
ANR	674865	CallExpression	"r_anal_fcn_bbadd ( f1 , bb )"		674598	0					
ANR	674866	Callee	r_anal_fcn_bbadd		674598	0					
ANR	674867	Identifier	r_anal_fcn_bbadd		674598	0					
ANR	674868	ArgumentList	f1		674598	1					
ANR	674869	Argument	f1		674598	0					
ANR	674870	Identifier	f1		674598	0					
ANR	674871	Argument	bb		674598	1					
ANR	674872	Identifier	bb		674598	0					
ANR	674873	ExpressionStatement	"f1 -> addr = R_MIN ( addr , addr2 )"	4483:1:134273:134303	674598	45	True				
ANR	674874	AssignmentExpression	"f1 -> addr = R_MIN ( addr , addr2 )"		674598	0		=			
ANR	674875	PtrMemberAccess	f1 -> addr		674598	0					
ANR	674876	Identifier	f1		674598	0					
ANR	674877	Identifier	addr		674598	1					
ANR	674878	CallExpression	"R_MIN ( addr , addr2 )"		674598	1					
ANR	674879	Callee	R_MIN		674598	0					
ANR	674880	Identifier	R_MIN		674598	0					
ANR	674881	ArgumentList	addr		674598	1					
ANR	674882	Argument	addr		674598	0					
ANR	674883	Identifier	addr		674598	0					
ANR	674884	Argument	addr2		674598	1					
ANR	674885	Identifier	addr2		674598	0					
ANR	674886	ExpressionStatement	"r_anal_fcn_set_size ( core -> anal , f1 , max - min )"	4484:1:134306:134353	674598	46	True				
ANR	674887	CallExpression	"r_anal_fcn_set_size ( core -> anal , f1 , max - min )"		674598	0					
ANR	674888	Callee	r_anal_fcn_set_size		674598	0					
ANR	674889	Identifier	r_anal_fcn_set_size		674598	0					
ANR	674890	ArgumentList	core -> anal		674598	1					
ANR	674891	Argument	core -> anal		674598	0					
ANR	674892	PtrMemberAccess	core -> anal		674598	0					
ANR	674893	Identifier	core		674598	0					
ANR	674894	Identifier	anal		674598	1					
ANR	674895	Argument	f1		674598	1					
ANR	674896	Identifier	f1		674598	0					
ANR	674897	Argument	max - min		674598	2					
ANR	674898	AdditiveExpression	max - min		674598	0		-			
ANR	674899	Identifier	max		674598	0					
ANR	674900	Identifier	min		674598	1					
ANR	674901	ExpressionStatement	f2 -> bbs = NULL	4486:1:134367:134381	674598	47	True				
ANR	674902	AssignmentExpression	f2 -> bbs = NULL		674598	0		=			
ANR	674903	PtrMemberAccess	f2 -> bbs		674598	0					
ANR	674904	Identifier	f2		674598	0					
ANR	674905	Identifier	bbs		674598	1					
ANR	674906	Identifier	NULL		674598	1					
ANR	674907	ExpressionStatement	"r_anal_fcn_tree_delete ( core -> anal , f2 )"	4487:1:134384:134423	674598	48	True				
ANR	674908	CallExpression	"r_anal_fcn_tree_delete ( core -> anal , f2 )"		674598	0					
ANR	674909	Callee	r_anal_fcn_tree_delete		674598	0					
ANR	674910	Identifier	r_anal_fcn_tree_delete		674598	0					
ANR	674911	ArgumentList	core -> anal		674598	1					
ANR	674912	Argument	core -> anal		674598	0					
ANR	674913	PtrMemberAccess	core -> anal		674598	0					
ANR	674914	Identifier	core		674598	0					
ANR	674915	Identifier	anal		674598	1					
ANR	674916	Argument	f2		674598	1					
ANR	674917	Identifier	f2		674598	0					
ANR	674918	Statement	r_list_foreach	4488:1:134426:134439	674598	49	True				
ANR	674919	Statement	(	4488:16:134441:134441	674598	50	True				
ANR	674920	Statement	core	4488:17:134442:134445	674598	51	True				
ANR	674921	Statement	->	4488:21:134446:134447	674598	52	True				
ANR	674922	Statement	anal	4488:23:134448:134451	674598	53	True				
ANR	674923	Statement	->	4488:27:134452:134453	674598	54	True				
ANR	674924	Statement	fcns	4488:29:134454:134457	674598	55	True				
ANR	674925	Statement	","	4488:33:134458:134458	674598	56	True				
ANR	674926	Statement	iter	4488:35:134460:134463	674598	57	True				
ANR	674927	Statement	","	4488:39:134464:134464	674598	58	True				
ANR	674928	Statement	f2	4488:41:134466:134467	674598	59	True				
ANR	674929	Statement	)	4488:43:134468:134468	674598	60	True				
ANR	674930	CompoundStatement		57:45:1311:1311	674598	61					
ANR	674931	IfStatement	if ( f2 == f3 )		674598	0					
ANR	674932	Condition	f2 == f3	4489:6:134478:134485	674598	0	True				
ANR	674933	EqualityExpression	f2 == f3		674598	0		==			
ANR	674934	Identifier	f2		674598	0					
ANR	674935	Identifier	f3		674598	1					
ANR	674936	CompoundStatement		58:16:1329:1329	674598	1					
ANR	674937	ExpressionStatement	"r_list_delete ( core -> anal -> fcns , iter )"	4490:3:134493:134531	674598	0	True				
ANR	674938	CallExpression	"r_list_delete ( core -> anal -> fcns , iter )"		674598	0					
ANR	674939	Callee	r_list_delete		674598	0					
ANR	674940	Identifier	r_list_delete		674598	0					
ANR	674941	ArgumentList	core -> anal -> fcns		674598	1					
ANR	674942	Argument	core -> anal -> fcns		674598	0					
ANR	674943	PtrMemberAccess	core -> anal -> fcns		674598	0					
ANR	674944	PtrMemberAccess	core -> anal		674598	0					
ANR	674945	Identifier	core		674598	0					
ANR	674946	Identifier	anal		674598	1					
ANR	674947	Identifier	fcns		674598	1					
ANR	674948	Argument	iter		674598	1					
ANR	674949	Identifier	iter		674598	0					
ANR	674950	ExpressionStatement	f3 -> bbs = NULL	4491:3:134536:134550	674598	1	True				
ANR	674951	AssignmentExpression	f3 -> bbs = NULL		674598	0		=			
ANR	674952	PtrMemberAccess	f3 -> bbs		674598	0					
ANR	674953	Identifier	f3		674598	0					
ANR	674954	Identifier	bbs		674598	1					
ANR	674955	Identifier	NULL		674598	1					
ANR	674956	ReturnType	R_API void		674598	1					
ANR	674957	Identifier	r_core_anal_fcn_merge		674598	2					
ANR	674958	ParameterList	"RCore * core , ut64 addr , ut64 addr2"		674598	3					
ANR	674959	Parameter	RCore * core	4432:33:133122:133132	674598	0	True				
ANR	674960	ParameterType	RCore *		674598	0					
ANR	674961	Identifier	core		674598	1					
ANR	674962	Parameter	ut64 addr	4432:46:133135:133143	674598	1	True				
ANR	674963	ParameterType	ut64		674598	0					
ANR	674964	Identifier	addr		674598	1					
ANR	674965	Parameter	ut64 addr2	4432:57:133146:133155	674598	2	True				
ANR	674966	ParameterType	ut64		674598	0					
ANR	674967	Identifier	addr2		674598	1					
ANR	674968	CFGEntryNode	ENTRY		674598		True				
ANR	674969	CFGExitNode	EXIT		674598		True				
ANR	674970	Symbol	bb		674598						
ANR	674971	Symbol	r_anal_get_fcn_at		674598						
ANR	674972	Symbol	bb -> size		674598						
ANR	674973	Symbol	* core		674598						
ANR	674974	Symbol	bb -> addr		674598						
ANR	674975	Symbol	f1		674598						
ANR	674976	Symbol	f2		674598						
ANR	674977	Symbol	core -> anal		674598						
ANR	674978	Symbol	f3		674598						
ANR	674979	Symbol	* f3		674598						
ANR	674980	Symbol	* f2		674598						
ANR	674981	Symbol	* f1		674598						
ANR	674982	Symbol	f2 -> bbs		674598						
ANR	674983	Symbol	min		674598						
ANR	674984	Symbol	addr		674598						
ANR	674985	Symbol	f1 -> addr		674598						
ANR	674986	Symbol	f3 -> bbs		674598						
ANR	674987	Symbol	* * core		674598						
ANR	674988	Symbol	NULL		674598						
ANR	674989	Symbol	addr2		674598						
ANR	674990	Symbol	max		674598						
ANR	674991	Symbol	* bb		674598						
ANR	674992	Symbol	iter		674598						
ANR	674993	Symbol	R_MIN		674598						
ANR	674994	Symbol	core -> anal -> fcns		674598						
ANR	674995	Symbol	core		674598						
ANR	674996	Symbol	* core -> anal		674598						
ANR	674997	Symbol	first		674598						
ANR	674998	DeclStmt									
ANR	674999	Decl							bool	bool	esil_anal_stop
ANR	675000	Function	cccb	4497:0:134598:134669							
ANR	675001	FunctionDef	cccb (void * u)		675000	0					
ANR	675002	CompoundStatement		4497:26:134624:134669	675000	0					
ANR	675003	ExpressionStatement	esil_anal_stop = true	4498:1:134627:134648	675000	0	True				
ANR	675004	AssignmentExpression	esil_anal_stop = true		675000	0		=			
ANR	675005	Identifier	esil_anal_stop		675000	0					
ANR	675006	Identifier	true		675000	1					
ANR	675007	ExpressionStatement	"eprintf ( ""^C\\n"" )"	4499:1:134651:134667	675000	1	True				
ANR	675008	CallExpression	"eprintf ( ""^C\\n"" )"		675000	0					
ANR	675009	Callee	eprintf		675000	0					
ANR	675010	Identifier	eprintf		675000	0					
ANR	675011	ArgumentList	"""^C\\n"""		675000	1					
ANR	675012	Argument	"""^C\\n"""		675000	0					
ANR	675013	PrimaryExpression	"""^C\\n"""		675000	0					
ANR	675014	ReturnType	static void		675000	1					
ANR	675015	Identifier	cccb		675000	2					
ANR	675016	ParameterList	void * u		675000	3					
ANR	675017	Parameter	void * u	4497:17:134615:134621	675000	0	True				
ANR	675018	ParameterType	void *		675000	0					
ANR	675019	Identifier	u		675000	1					
ANR	675020	CFGEntryNode	ENTRY		675000		True				
ANR	675021	CFGExitNode	EXIT		675000		True				
ANR	675022	Symbol	u		675000						
ANR	675023	Symbol	esil_anal_stop		675000						
ANR	675024	Symbol	true		675000						
ANR	675025	Function	add_string_ref	4502:0:134672:135379							
ANR	675026	FunctionDef	"add_string_ref (RCore * core , ut64 xref_from , ut64 xref_to)"		675025	0					
ANR	675027	CompoundStatement		4502:70:134742:135379	675025	0					
ANR	675028	IdentifierDeclStatement	int len = 0 ;	4503:1:134745:134756	675025	0	True				
ANR	675029	IdentifierDecl	len = 0		675025	0					
ANR	675030	IdentifierDeclType	int		675025	0					
ANR	675031	Identifier	len		675025	1					
ANR	675032	AssignmentExpression	len = 0		675025	2		=			
ANR	675033	Identifier	len		675025	0					
ANR	675034	PrimaryExpression	0		675025	1					
ANR	675035	IfStatement	if ( xref_to == UT64_MAX || ! xref_to )		675025	1					
ANR	675036	Condition	xref_to == UT64_MAX || ! xref_to	4504:5:134763:134793	675025	0	True				
ANR	675037	OrExpression	xref_to == UT64_MAX || ! xref_to		675025	0		||			
ANR	675038	EqualityExpression	xref_to == UT64_MAX		675025	0		==			
ANR	675039	Identifier	xref_to		675025	0					
ANR	675040	Identifier	UT64_MAX		675025	1					
ANR	675041	UnaryOperationExpression	! xref_to		675025	1					
ANR	675042	UnaryOperator	!		675025	0					
ANR	675043	Identifier	xref_to		675025	1					
ANR	675044	CompoundStatement		3:38:53:53	675025	1					
ANR	675045	ReturnStatement	return ;	4505:2:134800:134806	675025	0	True				
ANR	675046	IfStatement	if ( ! xref_from || xref_from == UT64_MAX )		675025	2					
ANR	675047	Condition	! xref_from || xref_from == UT64_MAX	4507:5:134816:134850	675025	0	True				
ANR	675048	OrExpression	! xref_from || xref_from == UT64_MAX		675025	0		||			
ANR	675049	UnaryOperationExpression	! xref_from		675025	0					
ANR	675050	UnaryOperator	!		675025	0					
ANR	675051	Identifier	xref_from		675025	1					
ANR	675052	EqualityExpression	xref_from == UT64_MAX		675025	1		==			
ANR	675053	Identifier	xref_from		675025	0					
ANR	675054	Identifier	UT64_MAX		675025	1					
ANR	675055	CompoundStatement		6:42:110:110	675025	1					
ANR	675056	ExpressionStatement	xref_from = core -> anal -> esil -> address	4508:2:134857:134894	675025	0	True				
ANR	675057	AssignmentExpression	xref_from = core -> anal -> esil -> address		675025	0		=			
ANR	675058	Identifier	xref_from		675025	0					
ANR	675059	PtrMemberAccess	core -> anal -> esil -> address		675025	1					
ANR	675060	PtrMemberAccess	core -> anal -> esil		675025	0					
ANR	675061	PtrMemberAccess	core -> anal		675025	0					
ANR	675062	Identifier	core		675025	0					
ANR	675063	Identifier	anal		675025	1					
ANR	675064	Identifier	esil		675025	1					
ANR	675065	Identifier	address		675025	1					
ANR	675066	IdentifierDeclStatement	"char * str_flagname = is_string_at ( core , xref_to , & len ) ;"	4510:1:134900:134955	675025	3	True				
ANR	675067	IdentifierDecl	"* str_flagname = is_string_at ( core , xref_to , & len )"		675025	0					
ANR	675068	IdentifierDeclType	char *		675025	0					
ANR	675069	Identifier	str_flagname		675025	1					
ANR	675070	AssignmentExpression	"* str_flagname = is_string_at ( core , xref_to , & len )"		675025	2		=			
ANR	675071	Identifier	str_flagname		675025	0					
ANR	675072	CallExpression	"is_string_at ( core , xref_to , & len )"		675025	1					
ANR	675073	Callee	is_string_at		675025	0					
ANR	675074	Identifier	is_string_at		675025	0					
ANR	675075	ArgumentList	core		675025	1					
ANR	675076	Argument	core		675025	0					
ANR	675077	Identifier	core		675025	0					
ANR	675078	Argument	xref_to		675025	1					
ANR	675079	Identifier	xref_to		675025	0					
ANR	675080	Argument	& len		675025	2					
ANR	675081	UnaryOperationExpression	& len		675025	0					
ANR	675082	UnaryOperator	&		675025	0					
ANR	675083	Identifier	len		675025	1					
ANR	675084	IfStatement	if ( str_flagname )		675025	4					
ANR	675085	Condition	str_flagname	4511:5:134962:134973	675025	0	True				
ANR	675086	Identifier	str_flagname		675025	0					
ANR	675087	CompoundStatement		13:2:348:397	675025	1					
ANR	675088	ExpressionStatement	"r_anal_xrefs_set ( core -> anal , xref_from , xref_to , R_ANAL_REF_TYPE_DATA )"	4512:2:134980:135051	675025	0	True				
ANR	675089	CallExpression	"r_anal_xrefs_set ( core -> anal , xref_from , xref_to , R_ANAL_REF_TYPE_DATA )"		675025	0					
ANR	675090	Callee	r_anal_xrefs_set		675025	0					
ANR	675091	Identifier	r_anal_xrefs_set		675025	0					
ANR	675092	ArgumentList	core -> anal		675025	1					
ANR	675093	Argument	core -> anal		675025	0					
ANR	675094	PtrMemberAccess	core -> anal		675025	0					
ANR	675095	Identifier	core		675025	0					
ANR	675096	Identifier	anal		675025	1					
ANR	675097	Argument	xref_from		675025	1					
ANR	675098	Identifier	xref_from		675025	0					
ANR	675099	Argument	xref_to		675025	2					
ANR	675100	Identifier	xref_to		675025	0					
ANR	675101	Argument	R_ANAL_REF_TYPE_DATA		675025	3					
ANR	675102	Identifier	R_ANAL_REF_TYPE_DATA		675025	0					
ANR	675103	ExpressionStatement	"r_name_filter ( str_flagname , - 1 )"	4513:2:135055:135087	675025	1	True				
ANR	675104	CallExpression	"r_name_filter ( str_flagname , - 1 )"		675025	0					
ANR	675105	Callee	r_name_filter		675025	0					
ANR	675106	Identifier	r_name_filter		675025	0					
ANR	675107	ArgumentList	str_flagname		675025	1					
ANR	675108	Argument	str_flagname		675025	0					
ANR	675109	Identifier	str_flagname		675025	0					
ANR	675110	Argument	- 1		675025	1					
ANR	675111	UnaryOperationExpression	- 1		675025	0					
ANR	675112	UnaryOperator	-		675025	0					
ANR	675113	PrimaryExpression	1		675025	1					
ANR	675114	IdentifierDeclStatement	"char * flagname = sdb_fmt ( ""str.%s"" , str_flagname ) ;"	4514:2:135091:135140	675025	2	True				
ANR	675115	IdentifierDecl	"* flagname = sdb_fmt ( ""str.%s"" , str_flagname )"		675025	0					
ANR	675116	IdentifierDeclType	char *		675025	0					
ANR	675117	Identifier	flagname		675025	1					
ANR	675118	AssignmentExpression	"* flagname = sdb_fmt ( ""str.%s"" , str_flagname )"		675025	2		=			
ANR	675119	Identifier	flagname		675025	0					
ANR	675120	CallExpression	"sdb_fmt ( ""str.%s"" , str_flagname )"		675025	1					
ANR	675121	Callee	sdb_fmt		675025	0					
ANR	675122	Identifier	sdb_fmt		675025	0					
ANR	675123	ArgumentList	"""str.%s"""		675025	1					
ANR	675124	Argument	"""str.%s"""		675025	0					
ANR	675125	PrimaryExpression	"""str.%s"""		675025	0					
ANR	675126	Argument	str_flagname		675025	1					
ANR	675127	Identifier	str_flagname		675025	0					
ANR	675128	ExpressionStatement	"r_flag_space_push ( core -> flags , R_FLAGS_FS_STRINGS )"	4515:2:135144:135195	675025	3	True				
ANR	675129	CallExpression	"r_flag_space_push ( core -> flags , R_FLAGS_FS_STRINGS )"		675025	0					
ANR	675130	Callee	r_flag_space_push		675025	0					
ANR	675131	Identifier	r_flag_space_push		675025	0					
ANR	675132	ArgumentList	core -> flags		675025	1					
ANR	675133	Argument	core -> flags		675025	0					
ANR	675134	PtrMemberAccess	core -> flags		675025	0					
ANR	675135	Identifier	core		675025	0					
ANR	675136	Identifier	flags		675025	1					
ANR	675137	Argument	R_FLAGS_FS_STRINGS		675025	1					
ANR	675138	Identifier	R_FLAGS_FS_STRINGS		675025	0					
ANR	675139	ExpressionStatement	"r_flag_set ( core -> flags , flagname , xref_to , len )"	4516:2:135199:135247	675025	4	True				
ANR	675140	CallExpression	"r_flag_set ( core -> flags , flagname , xref_to , len )"		675025	0					
ANR	675141	Callee	r_flag_set		675025	0					
ANR	675142	Identifier	r_flag_set		675025	0					
ANR	675143	ArgumentList	core -> flags		675025	1					
ANR	675144	Argument	core -> flags		675025	0					
ANR	675145	PtrMemberAccess	core -> flags		675025	0					
ANR	675146	Identifier	core		675025	0					
ANR	675147	Identifier	flags		675025	1					
ANR	675148	Argument	flagname		675025	1					
ANR	675149	Identifier	flagname		675025	0					
ANR	675150	Argument	xref_to		675025	2					
ANR	675151	Identifier	xref_to		675025	0					
ANR	675152	Argument	len		675025	3					
ANR	675153	Identifier	len		675025	0					
ANR	675154	ExpressionStatement	r_flag_space_pop ( core -> flags )	4517:2:135251:135281	675025	5	True				
ANR	675155	CallExpression	r_flag_space_pop ( core -> flags )		675025	0					
ANR	675156	Callee	r_flag_space_pop		675025	0					
ANR	675157	Identifier	r_flag_space_pop		675025	0					
ANR	675158	ArgumentList	core -> flags		675025	1					
ANR	675159	Argument	core -> flags		675025	0					
ANR	675160	PtrMemberAccess	core -> flags		675025	0					
ANR	675161	Identifier	core		675025	0					
ANR	675162	Identifier	flags		675025	1					
ANR	675163	ExpressionStatement	"r_meta_add ( core -> anal , 's' , xref_to , xref_to + len , str_flagname )"	4518:2:135285:135351	675025	6	True				
ANR	675164	CallExpression	"r_meta_add ( core -> anal , 's' , xref_to , xref_to + len , str_flagname )"		675025	0					
ANR	675165	Callee	r_meta_add		675025	0					
ANR	675166	Identifier	r_meta_add		675025	0					
ANR	675167	ArgumentList	core -> anal		675025	1					
ANR	675168	Argument	core -> anal		675025	0					
ANR	675169	PtrMemberAccess	core -> anal		675025	0					
ANR	675170	Identifier	core		675025	0					
ANR	675171	Identifier	anal		675025	1					
ANR	675172	Argument	's'		675025	1					
ANR	675173	PrimaryExpression	's'		675025	0					
ANR	675174	Argument	xref_to		675025	2					
ANR	675175	Identifier	xref_to		675025	0					
ANR	675176	Argument	xref_to + len		675025	3					
ANR	675177	AdditiveExpression	xref_to + len		675025	0		+			
ANR	675178	Identifier	xref_to		675025	0					
ANR	675179	Identifier	len		675025	1					
ANR	675180	Argument	str_flagname		675025	4					
ANR	675181	Identifier	str_flagname		675025	0					
ANR	675182	ExpressionStatement	free ( str_flagname )	4519:2:135355:135374	675025	7	True				
ANR	675183	CallExpression	free ( str_flagname )		675025	0					
ANR	675184	Callee	free		675025	0					
ANR	675185	Identifier	free		675025	0					
ANR	675186	ArgumentList	str_flagname		675025	1					
ANR	675187	Argument	str_flagname		675025	0					
ANR	675188	Identifier	str_flagname		675025	0					
ANR	675189	ReturnType	static void		675025	1					
ANR	675190	Identifier	add_string_ref		675025	2					
ANR	675191	ParameterList	"RCore * core , ut64 xref_from , ut64 xref_to"		675025	3					
ANR	675192	Parameter	RCore * core	4502:27:134699:134709	675025	0	True				
ANR	675193	ParameterType	RCore *		675025	0					
ANR	675194	Identifier	core		675025	1					
ANR	675195	Parameter	ut64 xref_from	4502:40:134712:134725	675025	1	True				
ANR	675196	ParameterType	ut64		675025	0					
ANR	675197	Identifier	xref_from		675025	1					
ANR	675198	Parameter	ut64 xref_to	4502:56:134728:134739	675025	2	True				
ANR	675199	ParameterType	ut64		675025	0					
ANR	675200	Identifier	xref_to		675025	1					
ANR	675201	CFGEntryNode	ENTRY		675025		True				
ANR	675202	CFGExitNode	EXIT		675025		True				
ANR	675203	Symbol	str_flagname		675025						
ANR	675204	Symbol	xref_from		675025						
ANR	675205	Symbol	* core		675025						
ANR	675206	Symbol	R_ANAL_REF_TYPE_DATA		675025						
ANR	675207	Symbol	flagname		675025						
ANR	675208	Symbol	core -> flags		675025						
ANR	675209	Symbol	R_FLAGS_FS_STRINGS		675025						
ANR	675210	Symbol	xref_to		675025						
ANR	675211	Symbol	core -> anal		675025						
ANR	675212	Symbol	core		675025						
ANR	675213	Symbol	* * * core		675025						
ANR	675214	Symbol	* core -> anal		675025						
ANR	675215	Symbol	len		675025						
ANR	675216	Symbol	* core -> anal -> esil		675025						
ANR	675217	Symbol	core -> anal -> esil -> address		675025						
ANR	675218	Symbol	* * core -> anal		675025						
ANR	675219	Symbol	UT64_MAX		675025						
ANR	675220	Symbol	core -> anal -> esil		675025						
ANR	675221	Symbol	& len		675025						
ANR	675222	Symbol	is_string_at		675025						
ANR	675223	Symbol	sdb_fmt		675025						
ANR	675224	Symbol	* * core		675025						
ANR	675225	Function	myvalid	4524:0:135383:135644							
ANR	675226	FunctionDef	"myvalid (RIO * io , ut64 addr)"		675225	0					
ANR	675227	CompoundStatement		4524:40:135423:135644	675225	0					
ANR	675228	IfStatement	if ( addr < 0x100 )		675225	0					
ANR	675229	Condition	addr < 0x100	4525:5:135430:135441	675225	0	True				
ANR	675230	RelationalExpression	addr < 0x100		675225	0		<			
ANR	675231	Identifier	addr		675225	0					
ANR	675232	PrimaryExpression	0x100		675225	1					
ANR	675233	CompoundStatement		2:19:20:20	675225	1					
ANR	675234	ReturnStatement	return false ;	4526:2:135448:135460	675225	0	True				
ANR	675235	Identifier	false		675225	0					
ANR	675236	IfStatement	if ( addr == UT32_MAX || addr == UT64_MAX )		675225	1					
ANR	675237	Condition	addr == UT32_MAX || addr == UT64_MAX	4528:5:135470:135505	675225	0	True				
ANR	675238	OrExpression	addr == UT32_MAX || addr == UT64_MAX		675225	0		||			
ANR	675239	EqualityExpression	addr == UT32_MAX		675225	0		==			
ANR	675240	Identifier	addr		675225	0					
ANR	675241	Identifier	UT32_MAX		675225	1					
ANR	675242	EqualityExpression	addr == UT64_MAX		675225	1		==			
ANR	675243	Identifier	addr		675225	0					
ANR	675244	Identifier	UT64_MAX		675225	1					
ANR	675245	CompoundStatement		5:43:84:84	675225	1					
ANR	675246	ReturnStatement	return false ;	4529:2:135550:135562	675225	0	True				
ANR	675247	Identifier	false		675225	0					
ANR	675248	IfStatement	"if ( ! r_io_is_valid_offset ( io , addr , 0 ) )"		675225	2					
ANR	675249	Condition	"! r_io_is_valid_offset ( io , addr , 0 )"	4531:5:135572:135606	675225	0	True				
ANR	675250	UnaryOperationExpression	"! r_io_is_valid_offset ( io , addr , 0 )"		675225	0					
ANR	675251	UnaryOperator	!		675225	0					
ANR	675252	CallExpression	"r_io_is_valid_offset ( io , addr , 0 )"		675225	1					
ANR	675253	Callee	r_io_is_valid_offset		675225	0					
ANR	675254	Identifier	r_io_is_valid_offset		675225	0					
ANR	675255	ArgumentList	io		675225	1					
ANR	675256	Argument	io		675225	0					
ANR	675257	Identifier	io		675225	0					
ANR	675258	Argument	addr		675225	1					
ANR	675259	Identifier	addr		675225	0					
ANR	675260	Argument	0		675225	2					
ANR	675261	PrimaryExpression	0		675225	0					
ANR	675262	CompoundStatement		8:42:185:185	675225	1					
ANR	675263	ReturnStatement	return false ;	4532:2:135613:135625	675225	0	True				
ANR	675264	Identifier	false		675225	0					
ANR	675265	ReturnStatement	return true ;	4534:1:135631:135642	675225	3	True				
ANR	675266	Identifier	true		675225	0					
ANR	675267	ReturnType	static bool		675225	1					
ANR	675268	Identifier	myvalid		675225	2					
ANR	675269	ParameterList	"RIO * io , ut64 addr"		675225	3					
ANR	675270	Parameter	RIO * io	4524:20:135403:135409	675225	0	True				
ANR	675271	ParameterType	RIO *		675225	0					
ANR	675272	Identifier	io		675225	1					
ANR	675273	Parameter	ut64 addr	4524:29:135412:135420	675225	1	True				
ANR	675274	ParameterType	ut64		675225	0					
ANR	675275	Identifier	addr		675225	1					
ANR	675276	CFGEntryNode	ENTRY		675225		True				
ANR	675277	CFGExitNode	EXIT		675225		True				
ANR	675278	Symbol	UT32_MAX		675225						
ANR	675279	Symbol	r_io_is_valid_offset		675225						
ANR	675280	Symbol	io		675225						
ANR	675281	Symbol	false		675225						
ANR	675282	Symbol	true		675225						
ANR	675283	Symbol	addr		675225						
ANR	675284	Symbol	UT64_MAX		675225						
ANR	675285	Function	esilbreak_mem_write	4537:0:135647:135762							
ANR	675286	FunctionDef	"esilbreak_mem_write (RAnalEsil * esil , ut64 addr , const ut8 * buf , int len)"		675285	0					
ANR	675287	CompoundStatement		4537:84:135731:135762	675285	0					
ANR	675288	ReturnStatement	return 1 ;	4539:1:135752:135760	675285	0	True				
ANR	675289	PrimaryExpression	1		675285	0					
ANR	675290	ReturnType	static int		675285	1					
ANR	675291	Identifier	esilbreak_mem_write		675285	2					
ANR	675292	ParameterList	"RAnalEsil * esil , ut64 addr , const ut8 * buf , int len"		675285	3					
ANR	675293	Parameter	RAnalEsil * esil	4537:31:135678:135692	675285	0	True				
ANR	675294	ParameterType	RAnalEsil *		675285	0					
ANR	675295	Identifier	esil		675285	1					
ANR	675296	Parameter	ut64 addr	4537:48:135695:135703	675285	1	True				
ANR	675297	ParameterType	ut64		675285	0					
ANR	675298	Identifier	addr		675285	1					
ANR	675299	Parameter	const ut8 * buf	4537:59:135706:135719	675285	2	True				
ANR	675300	ParameterType	const ut8 *		675285	0					
ANR	675301	Identifier	buf		675285	1					
ANR	675302	Parameter	int len	4537:75:135722:135728	675285	3	True				
ANR	675303	ParameterType	int		675285	0					
ANR	675304	Identifier	len		675285	1					
ANR	675305	CFGEntryNode	ENTRY		675285		True				
ANR	675306	CFGExitNode	EXIT		675285		True				
ANR	675307	Symbol	buf		675285						
ANR	675308	Symbol	len		675285						
ANR	675309	Symbol	addr		675285						
ANR	675310	Symbol	esil		675285						
ANR	675311	DeclStmt									
ANR	675312	Decl							ut64	ut64	esilbreak_last_read
ANR	675313	DeclStmt									
ANR	675314	Decl							ut64	ut64	esilbreak_last_data
ANR	675315	DeclStmt									
ANR	675316	Decl							ut64	ut64	ntarget
ANR	675317	Function	esilbreak_mem_read	4549:0:136020:137443							
ANR	675318	FunctionDef	"esilbreak_mem_read (RAnalEsil * esil , ut64 addr , ut8 * buf , int len)"		675317	0					
ANR	675319	CompoundStatement		4549:77:136097:137443	675317	0					
ANR	675320	IdentifierDeclStatement	ut8 str [ 128 ] ;	4550:1:136100:136112	675317	0	True				
ANR	675321	IdentifierDecl	str [ 128 ]		675317	0					
ANR	675322	IdentifierDeclType	ut8 [ 128 ]		675317	0					
ANR	675323	Identifier	str		675317	1					
ANR	675324	PrimaryExpression	128		675317	2					
ANR	675325	IfStatement	if ( addr != UT64_MAX )		675317	1					
ANR	675326	Condition	addr != UT64_MAX	4551:5:136119:136134	675317	0	True				
ANR	675327	EqualityExpression	addr != UT64_MAX		675317	0		!=			
ANR	675328	Identifier	addr		675317	0					
ANR	675329	Identifier	UT64_MAX		675317	1					
ANR	675330	CompoundStatement		3:23:39:39	675317	1					
ANR	675331	ExpressionStatement	esilbreak_last_read = addr	4552:2:136141:136167	675317	0	True				
ANR	675332	AssignmentExpression	esilbreak_last_read = addr		675317	0		=			
ANR	675333	Identifier	esilbreak_last_read		675317	0					
ANR	675334	Identifier	addr		675317	1					
ANR	675335	IfStatement	"if ( myvalid ( mycore -> io , addr ) && r_io_read_at ( mycore -> io , addr , ( ut8 * ) buf , len ) )"		675317	2					
ANR	675336	Condition	"myvalid ( mycore -> io , addr ) && r_io_read_at ( mycore -> io , addr , ( ut8 * ) buf , len )"	4554:5:136177:136253	675317	0	True				
ANR	675337	AndExpression	"myvalid ( mycore -> io , addr ) && r_io_read_at ( mycore -> io , addr , ( ut8 * ) buf , len )"		675317	0		&&			
ANR	675338	CallExpression	"myvalid ( mycore -> io , addr )"		675317	0					
ANR	675339	Callee	myvalid		675317	0					
ANR	675340	Identifier	myvalid		675317	0					
ANR	675341	ArgumentList	mycore -> io		675317	1					
ANR	675342	Argument	mycore -> io		675317	0					
ANR	675343	PtrMemberAccess	mycore -> io		675317	0					
ANR	675344	Identifier	mycore		675317	0					
ANR	675345	Identifier	io		675317	1					
ANR	675346	Argument	addr		675317	1					
ANR	675347	Identifier	addr		675317	0					
ANR	675348	CallExpression	"r_io_read_at ( mycore -> io , addr , ( ut8 * ) buf , len )"		675317	1					
ANR	675349	Callee	r_io_read_at		675317	0					
ANR	675350	Identifier	r_io_read_at		675317	0					
ANR	675351	ArgumentList	mycore -> io		675317	1					
ANR	675352	Argument	mycore -> io		675317	0					
ANR	675353	PtrMemberAccess	mycore -> io		675317	0					
ANR	675354	Identifier	mycore		675317	0					
ANR	675355	Identifier	io		675317	1					
ANR	675356	Argument	addr		675317	1					
ANR	675357	Identifier	addr		675317	0					
ANR	675358	Argument	( ut8 * ) buf		675317	2					
ANR	675359	CastExpression	( ut8 * ) buf		675317	0					
ANR	675360	CastTarget	ut8 *		675317	0					
ANR	675361	Identifier	buf		675317	1					
ANR	675362	Argument	len		675317	3					
ANR	675363	Identifier	len		675317	0					
ANR	675364	CompoundStatement		25:2:636:657	675317	1					
ANR	675365	IdentifierDeclStatement	ut64 refptr ;	4555:2:136260:136271	675317	0	True				
ANR	675366	IdentifierDecl	refptr		675317	0					
ANR	675367	IdentifierDeclType	ut64		675317	0					
ANR	675368	Identifier	refptr		675317	1					
ANR	675369	IdentifierDeclStatement	bool trace = true ;	4556:2:136275:136292	675317	1	True				
ANR	675370	IdentifierDecl	trace = true		675317	0					
ANR	675371	IdentifierDeclType	bool		675317	0					
ANR	675372	Identifier	trace		675317	1					
ANR	675373	AssignmentExpression	trace = true		675317	2		=			
ANR	675374	Identifier	true		675317	0					
ANR	675375	Identifier	true		675317	1					
ANR	675376	SwitchStatement	switch ( len )		675317	2					
ANR	675377	Condition	len	4557:10:136304:136306	675317	0	True				
ANR	675378	Identifier	len		675317	0					
ANR	675379	CompoundStatement		9:15:211:211	675317	1					
ANR	675380	Label	case 2 :	4558:2:136313:136319	675317	0	True				
ANR	675381	ExpressionStatement	"esilbreak_last_data = refptr = ( ut64 ) r_read_ble16 ( buf , esil -> anal -> big_endian )"	4559:3:136324:136403	675317	1	True				
ANR	675382	AssignmentExpression	"esilbreak_last_data = refptr = ( ut64 ) r_read_ble16 ( buf , esil -> anal -> big_endian )"		675317	0		=			
ANR	675383	Identifier	esilbreak_last_data		675317	0					
ANR	675384	AssignmentExpression	"refptr = ( ut64 ) r_read_ble16 ( buf , esil -> anal -> big_endian )"		675317	1		=			
ANR	675385	Identifier	refptr		675317	0					
ANR	675386	CastExpression	"( ut64 ) r_read_ble16 ( buf , esil -> anal -> big_endian )"		675317	1					
ANR	675387	CastTarget	ut64		675317	0					
ANR	675388	CallExpression	"r_read_ble16 ( buf , esil -> anal -> big_endian )"		675317	1					
ANR	675389	Callee	r_read_ble16		675317	0					
ANR	675390	Identifier	r_read_ble16		675317	0					
ANR	675391	ArgumentList	buf		675317	1					
ANR	675392	Argument	buf		675317	0					
ANR	675393	Identifier	buf		675317	0					
ANR	675394	Argument	esil -> anal -> big_endian		675317	1					
ANR	675395	PtrMemberAccess	esil -> anal -> big_endian		675317	0					
ANR	675396	PtrMemberAccess	esil -> anal		675317	0					
ANR	675397	Identifier	esil		675317	0					
ANR	675398	Identifier	anal		675317	1					
ANR	675399	Identifier	big_endian		675317	1					
ANR	675400	BreakStatement	break ;	4560:3:136408:136413	675317	2	True				
ANR	675401	Label	case 4 :	4561:2:136417:136423	675317	3	True				
ANR	675402	ExpressionStatement	"esilbreak_last_data = refptr = ( ut64 ) r_read_ble32 ( buf , esil -> anal -> big_endian )"	4562:3:136428:136507	675317	4	True				
ANR	675403	AssignmentExpression	"esilbreak_last_data = refptr = ( ut64 ) r_read_ble32 ( buf , esil -> anal -> big_endian )"		675317	0		=			
ANR	675404	Identifier	esilbreak_last_data		675317	0					
ANR	675405	AssignmentExpression	"refptr = ( ut64 ) r_read_ble32 ( buf , esil -> anal -> big_endian )"		675317	1		=			
ANR	675406	Identifier	refptr		675317	0					
ANR	675407	CastExpression	"( ut64 ) r_read_ble32 ( buf , esil -> anal -> big_endian )"		675317	1					
ANR	675408	CastTarget	ut64		675317	0					
ANR	675409	CallExpression	"r_read_ble32 ( buf , esil -> anal -> big_endian )"		675317	1					
ANR	675410	Callee	r_read_ble32		675317	0					
ANR	675411	Identifier	r_read_ble32		675317	0					
ANR	675412	ArgumentList	buf		675317	1					
ANR	675413	Argument	buf		675317	0					
ANR	675414	Identifier	buf		675317	0					
ANR	675415	Argument	esil -> anal -> big_endian		675317	1					
ANR	675416	PtrMemberAccess	esil -> anal -> big_endian		675317	0					
ANR	675417	PtrMemberAccess	esil -> anal		675317	0					
ANR	675418	Identifier	esil		675317	0					
ANR	675419	Identifier	anal		675317	1					
ANR	675420	Identifier	big_endian		675317	1					
ANR	675421	BreakStatement	break ;	4563:3:136512:136517	675317	5	True				
ANR	675422	Label	case 8 :	4564:2:136521:136527	675317	6	True				
ANR	675423	ExpressionStatement	"esilbreak_last_data = refptr = r_read_ble64 ( buf , esil -> anal -> big_endian )"	4565:3:136532:136605	675317	7	True				
ANR	675424	AssignmentExpression	"esilbreak_last_data = refptr = r_read_ble64 ( buf , esil -> anal -> big_endian )"		675317	0		=			
ANR	675425	Identifier	esilbreak_last_data		675317	0					
ANR	675426	AssignmentExpression	"refptr = r_read_ble64 ( buf , esil -> anal -> big_endian )"		675317	1		=			
ANR	675427	Identifier	refptr		675317	0					
ANR	675428	CallExpression	"r_read_ble64 ( buf , esil -> anal -> big_endian )"		675317	1					
ANR	675429	Callee	r_read_ble64		675317	0					
ANR	675430	Identifier	r_read_ble64		675317	0					
ANR	675431	ArgumentList	buf		675317	1					
ANR	675432	Argument	buf		675317	0					
ANR	675433	Identifier	buf		675317	0					
ANR	675434	Argument	esil -> anal -> big_endian		675317	1					
ANR	675435	PtrMemberAccess	esil -> anal -> big_endian		675317	0					
ANR	675436	PtrMemberAccess	esil -> anal		675317	0					
ANR	675437	Identifier	esil		675317	0					
ANR	675438	Identifier	anal		675317	1					
ANR	675439	Identifier	big_endian		675317	1					
ANR	675440	BreakStatement	break ;	4566:3:136610:136615	675317	8	True				
ANR	675441	Label	default :	4567:2:136619:136626	675317	9	True				
ANR	675442	Identifier	default		675317	0					
ANR	675443	ExpressionStatement	trace = false	4568:3:136631:136644	675317	10	True				
ANR	675444	AssignmentExpression	trace = false		675317	0		=			
ANR	675445	Identifier	trace		675317	0					
ANR	675446	Identifier	false		675317	1					
ANR	675447	ExpressionStatement	"r_io_read_at ( mycore -> io , addr , ( ut8 * ) buf , len )"	4569:3:136649:136696	675317	11	True				
ANR	675448	CallExpression	"r_io_read_at ( mycore -> io , addr , ( ut8 * ) buf , len )"		675317	0					
ANR	675449	Callee	r_io_read_at		675317	0					
ANR	675450	Identifier	r_io_read_at		675317	0					
ANR	675451	ArgumentList	mycore -> io		675317	1					
ANR	675452	Argument	mycore -> io		675317	0					
ANR	675453	PtrMemberAccess	mycore -> io		675317	0					
ANR	675454	Identifier	mycore		675317	0					
ANR	675455	Identifier	io		675317	1					
ANR	675456	Argument	addr		675317	1					
ANR	675457	Identifier	addr		675317	0					
ANR	675458	Argument	( ut8 * ) buf		675317	2					
ANR	675459	CastExpression	( ut8 * ) buf		675317	0					
ANR	675460	CastTarget	ut8 *		675317	0					
ANR	675461	Identifier	buf		675317	1					
ANR	675462	Argument	len		675317	3					
ANR	675463	Identifier	len		675317	0					
ANR	675464	BreakStatement	break ;	4570:3:136701:136706	675317	12	True				
ANR	675465	IdentifierDeclStatement	bool validRef = false ;	4573:2:136734:136755	675317	3	True				
ANR	675466	IdentifierDecl	validRef = false		675317	0					
ANR	675467	IdentifierDeclType	bool		675317	0					
ANR	675468	Identifier	validRef		675317	1					
ANR	675469	AssignmentExpression	validRef = false		675317	2		=			
ANR	675470	Identifier	false		675317	0					
ANR	675471	Identifier	false		675317	1					
ANR	675472	IfStatement	"if ( trace && myvalid ( mycore -> io , refptr ) )"		675317	4					
ANR	675473	Condition	"trace && myvalid ( mycore -> io , refptr )"	4574:6:136763:136799	675317	0	True				
ANR	675474	AndExpression	"trace && myvalid ( mycore -> io , refptr )"		675317	0		&&			
ANR	675475	Identifier	trace		675317	0					
ANR	675476	CallExpression	"myvalid ( mycore -> io , refptr )"		675317	1					
ANR	675477	Callee	myvalid		675317	0					
ANR	675478	Identifier	myvalid		675317	0					
ANR	675479	ArgumentList	mycore -> io		675317	1					
ANR	675480	Argument	mycore -> io		675317	0					
ANR	675481	PtrMemberAccess	mycore -> io		675317	0					
ANR	675482	Identifier	mycore		675317	0					
ANR	675483	Identifier	io		675317	1					
ANR	675484	Argument	refptr		675317	1					
ANR	675485	Identifier	refptr		675317	0					
ANR	675486	CompoundStatement		26:45:704:704	675317	1					
ANR	675487	IfStatement	if ( ntarget == UT64_MAX || ntarget == refptr )		675317	0					
ANR	675488	Condition	ntarget == UT64_MAX || ntarget == refptr	4575:7:136811:136850	675317	0	True				
ANR	675489	OrExpression	ntarget == UT64_MAX || ntarget == refptr		675317	0		||			
ANR	675490	EqualityExpression	ntarget == UT64_MAX		675317	0		==			
ANR	675491	Identifier	ntarget		675317	0					
ANR	675492	Identifier	UT64_MAX		675317	1					
ANR	675493	EqualityExpression	ntarget == refptr		675317	1		==			
ANR	675494	Identifier	ntarget		675317	0					
ANR	675495	Identifier	refptr		675317	1					
ANR	675496	CompoundStatement		27:49:755:755	675317	1					
ANR	675497	ExpressionStatement	"r_anal_xrefs_set ( mycore -> anal , esil -> address , refptr , R_ANAL_REF_TYPE_DATA )"	4576:4:136859:136935	675317	0	True				
ANR	675498	CallExpression	"r_anal_xrefs_set ( mycore -> anal , esil -> address , refptr , R_ANAL_REF_TYPE_DATA )"		675317	0					
ANR	675499	Callee	r_anal_xrefs_set		675317	0					
ANR	675500	Identifier	r_anal_xrefs_set		675317	0					
ANR	675501	ArgumentList	mycore -> anal		675317	1					
ANR	675502	Argument	mycore -> anal		675317	0					
ANR	675503	PtrMemberAccess	mycore -> anal		675317	0					
ANR	675504	Identifier	mycore		675317	0					
ANR	675505	Identifier	anal		675317	1					
ANR	675506	Argument	esil -> address		675317	1					
ANR	675507	PtrMemberAccess	esil -> address		675317	0					
ANR	675508	Identifier	esil		675317	0					
ANR	675509	Identifier	address		675317	1					
ANR	675510	Argument	refptr		675317	2					
ANR	675511	Identifier	refptr		675317	0					
ANR	675512	Argument	R_ANAL_REF_TYPE_DATA		675317	3					
ANR	675513	Identifier	R_ANAL_REF_TYPE_DATA		675317	0					
ANR	675514	ExpressionStatement	str [ 0 ] = 0	4577:4:136941:136951	675317	1	True				
ANR	675515	AssignmentExpression	str [ 0 ] = 0		675317	0		=			
ANR	675516	ArrayIndexing	str [ 0 ]		675317	0					
ANR	675517	Identifier	str		675317	0					
ANR	675518	PrimaryExpression	0		675317	1					
ANR	675519	PrimaryExpression	0		675317	1					
ANR	675520	IfStatement	"if ( r_io_read_at ( mycore -> io , refptr , str , sizeof ( str ) ) < 1 )"		675317	2					
ANR	675521	Condition	"r_io_read_at ( mycore -> io , refptr , str , sizeof ( str ) ) < 1"	4578:8:136961:137016	675317	0	True				
ANR	675522	RelationalExpression	"r_io_read_at ( mycore -> io , refptr , str , sizeof ( str ) ) < 1"		675317	0		<			
ANR	675523	CallExpression	"r_io_read_at ( mycore -> io , refptr , str , sizeof ( str ) )"		675317	0					
ANR	675524	Callee	r_io_read_at		675317	0					
ANR	675525	Identifier	r_io_read_at		675317	0					
ANR	675526	ArgumentList	mycore -> io		675317	1					
ANR	675527	Argument	mycore -> io		675317	0					
ANR	675528	PtrMemberAccess	mycore -> io		675317	0					
ANR	675529	Identifier	mycore		675317	0					
ANR	675530	Identifier	io		675317	1					
ANR	675531	Argument	refptr		675317	1					
ANR	675532	Identifier	refptr		675317	0					
ANR	675533	Argument	str		675317	2					
ANR	675534	Identifier	str		675317	0					
ANR	675535	Argument	sizeof ( str )		675317	3					
ANR	675536	SizeofExpression	sizeof ( str )		675317	0					
ANR	675537	Sizeof	sizeof		675317	0					
ANR	675538	SizeofOperand	str		675317	1					
ANR	675539	PrimaryExpression	1		675317	1					
ANR	675540	CompoundStatement		30:66:921:921	675317	1					
ANR	675541	ExpressionStatement	"eprintf ( ""Invalid read\\n"" )"	4579:5:137026:137052	675317	0	True				
ANR	675542	CallExpression	"eprintf ( ""Invalid read\\n"" )"		675317	0					
ANR	675543	Callee	eprintf		675317	0					
ANR	675544	Identifier	eprintf		675317	0					
ANR	675545	ArgumentList	"""Invalid read\\n"""		675317	1					
ANR	675546	Argument	"""Invalid read\\n"""		675317	0					
ANR	675547	PrimaryExpression	"""Invalid read\\n"""		675317	0					
ANR	675548	ExpressionStatement	str [ 0 ] = 0	4580:5:137059:137069	675317	1	True				
ANR	675549	AssignmentExpression	str [ 0 ] = 0		675317	0		=			
ANR	675550	ArrayIndexing	str [ 0 ]		675317	0					
ANR	675551	Identifier	str		675317	0					
ANR	675552	PrimaryExpression	0		675317	1					
ANR	675553	PrimaryExpression	0		675317	1					
ANR	675554	ExpressionStatement	str [ sizeof ( str ) - 1 ] = 0	4582:4:137081:137106	675317	3	True				
ANR	675555	AssignmentExpression	str [ sizeof ( str ) - 1 ] = 0		675317	0		=			
ANR	675556	ArrayIndexing	str [ sizeof ( str ) - 1 ]		675317	0					
ANR	675557	Identifier	str		675317	0					
ANR	675558	AdditiveExpression	sizeof ( str ) - 1		675317	1		-			
ANR	675559	SizeofExpression	sizeof ( str )		675317	0					
ANR	675560	Sizeof	sizeof		675317	0					
ANR	675561	SizeofOperand	str		675317	1					
ANR	675562	PrimaryExpression	1		675317	1					
ANR	675563	PrimaryExpression	0		675317	1					
ANR	675564	ExpressionStatement	"add_string_ref ( mycore , esil -> address , refptr )"	4583:4:137112:137158	675317	4	True				
ANR	675565	CallExpression	"add_string_ref ( mycore , esil -> address , refptr )"		675317	0					
ANR	675566	Callee	add_string_ref		675317	0					
ANR	675567	Identifier	add_string_ref		675317	0					
ANR	675568	ArgumentList	mycore		675317	1					
ANR	675569	Argument	mycore		675317	0					
ANR	675570	Identifier	mycore		675317	0					
ANR	675571	Argument	esil -> address		675317	1					
ANR	675572	PtrMemberAccess	esil -> address		675317	0					
ANR	675573	Identifier	esil		675317	0					
ANR	675574	Identifier	address		675317	1					
ANR	675575	Argument	refptr		675317	2					
ANR	675576	Identifier	refptr		675317	0					
ANR	675577	ExpressionStatement	esilbreak_last_data = UT64_MAX	4584:4:137164:137194	675317	5	True				
ANR	675578	AssignmentExpression	esilbreak_last_data = UT64_MAX		675317	0		=			
ANR	675579	Identifier	esilbreak_last_data		675317	0					
ANR	675580	Identifier	UT64_MAX		675317	1					
ANR	675581	ExpressionStatement	validRef = true	4585:4:137200:137215	675317	6	True				
ANR	675582	AssignmentExpression	validRef = true		675317	0		=			
ANR	675583	Identifier	validRef		675317	0					
ANR	675584	Identifier	true		675317	1					
ANR	675585	IfStatement	if ( ntarget == UT64_MAX || ntarget == addr || ( ntarget == UT64_MAX && ! validRef ) )		675317	5					
ANR	675586	Condition	ntarget == UT64_MAX || ntarget == addr || ( ntarget == UT64_MAX && ! validRef )	4590:6:137254:137329	675317	0	True				
ANR	675587	OrExpression	ntarget == UT64_MAX || ntarget == addr || ( ntarget == UT64_MAX && ! validRef )		675317	0		||			
ANR	675588	EqualityExpression	ntarget == UT64_MAX		675317	0		==			
ANR	675589	Identifier	ntarget		675317	0					
ANR	675590	Identifier	UT64_MAX		675317	1					
ANR	675591	OrExpression	ntarget == addr || ( ntarget == UT64_MAX && ! validRef )		675317	1		||			
ANR	675592	EqualityExpression	ntarget == addr		675317	0		==			
ANR	675593	Identifier	ntarget		675317	0					
ANR	675594	Identifier	addr		675317	1					
ANR	675595	AndExpression	ntarget == UT64_MAX && ! validRef		675317	1		&&			
ANR	675596	EqualityExpression	ntarget == UT64_MAX		675317	0		==			
ANR	675597	Identifier	ntarget		675317	0					
ANR	675598	Identifier	UT64_MAX		675317	1					
ANR	675599	UnaryOperationExpression	! validRef		675317	1					
ANR	675600	UnaryOperator	!		675317	0					
ANR	675601	Identifier	validRef		675317	1					
ANR	675602	CompoundStatement		42:84:1234:1234	675317	1					
ANR	675603	ExpressionStatement	"r_anal_xrefs_set ( mycore -> anal , esil -> address , addr , R_ANAL_REF_TYPE_DATA )"	4591:3:137337:137411	675317	0	True				
ANR	675604	CallExpression	"r_anal_xrefs_set ( mycore -> anal , esil -> address , addr , R_ANAL_REF_TYPE_DATA )"		675317	0					
ANR	675605	Callee	r_anal_xrefs_set		675317	0					
ANR	675606	Identifier	r_anal_xrefs_set		675317	0					
ANR	675607	ArgumentList	mycore -> anal		675317	1					
ANR	675608	Argument	mycore -> anal		675317	0					
ANR	675609	PtrMemberAccess	mycore -> anal		675317	0					
ANR	675610	Identifier	mycore		675317	0					
ANR	675611	Identifier	anal		675317	1					
ANR	675612	Argument	esil -> address		675317	1					
ANR	675613	PtrMemberAccess	esil -> address		675317	0					
ANR	675614	Identifier	esil		675317	0					
ANR	675615	Identifier	address		675317	1					
ANR	675616	Argument	addr		675317	2					
ANR	675617	Identifier	addr		675317	0					
ANR	675618	Argument	R_ANAL_REF_TYPE_DATA		675317	3					
ANR	675619	Identifier	R_ANAL_REF_TYPE_DATA		675317	0					
ANR	675620	ReturnStatement	return 0 ;	4594:1:137421:137429	675317	3	True				
ANR	675621	PrimaryExpression	0		675317	0					
ANR	675622	ReturnType	static int		675317	1					
ANR	675623	Identifier	esilbreak_mem_read		675317	2					
ANR	675624	ParameterList	"RAnalEsil * esil , ut64 addr , ut8 * buf , int len"		675317	3					
ANR	675625	Parameter	RAnalEsil * esil	4549:30:136050:136064	675317	0	True				
ANR	675626	ParameterType	RAnalEsil *		675317	0					
ANR	675627	Identifier	esil		675317	1					
ANR	675628	Parameter	ut64 addr	4549:47:136067:136075	675317	1	True				
ANR	675629	ParameterType	ut64		675317	0					
ANR	675630	Identifier	addr		675317	1					
ANR	675631	Parameter	ut8 * buf	4549:58:136078:136085	675317	2	True				
ANR	675632	ParameterType	ut8 *		675317	0					
ANR	675633	Identifier	buf		675317	1					
ANR	675634	Parameter	int len	4549:68:136088:136094	675317	3	True				
ANR	675635	ParameterType	int		675317	0					
ANR	675636	Identifier	len		675317	1					
ANR	675637	CFGEntryNode	ENTRY		675317		True				
ANR	675638	CFGExitNode	EXIT		675317		True				
ANR	675639	Symbol	esil -> address		675317						
ANR	675640	Symbol	esilbreak_last_data		675317						
ANR	675641	Symbol	* mycore		675317						
ANR	675642	Symbol	trace		675317						
ANR	675643	Symbol	mycore		675317						
ANR	675644	Symbol	len		675317						
ANR	675645	Symbol	ntarget		675317						
ANR	675646	Symbol	* esil		675317						
ANR	675647	Symbol	mycore -> anal		675317						
ANR	675648	Symbol	* str		675317						
ANR	675649	Symbol	addr		675317						
ANR	675650	Symbol	UT64_MAX		675317						
ANR	675651	Symbol	r_read_ble32		675317						
ANR	675652	Symbol	esil -> anal -> big_endian		675317						
ANR	675653	Symbol	* esil -> anal		675317						
ANR	675654	Symbol	r_read_ble16		675317						
ANR	675655	Symbol	false		675317						
ANR	675656	Symbol	r_io_read_at		675317						
ANR	675657	Symbol	R_ANAL_REF_TYPE_DATA		675317						
ANR	675658	Symbol	* * esil		675317						
ANR	675659	Symbol	str		675317						
ANR	675660	Symbol	buf		675317						
ANR	675661	Symbol	esil -> anal		675317						
ANR	675662	Symbol	true		675317						
ANR	675663	Symbol	mycore -> io		675317						
ANR	675664	Symbol	refptr		675317						
ANR	675665	Symbol	esil		675317						
ANR	675666	Symbol	myvalid		675317						
ANR	675667	Symbol	r_read_ble64		675317						
ANR	675668	Symbol	esilbreak_last_read		675317						
ANR	675669	Symbol	validRef		675317						
ANR	675670	Function	esilbreak_reg_write	4597:0:137446:138643							
ANR	675671	FunctionDef	"esilbreak_reg_write (RAnalEsil * esil , const char * name , ut64 * val)"		675670	0					
ANR	675672	CompoundStatement		4597:77:137523:138643	675670	0					
ANR	675673	IfStatement	if ( ! esil )		675670	0					
ANR	675674	Condition	! esil	4598:5:137530:137534	675670	0	True				
ANR	675675	UnaryOperationExpression	! esil		675670	0					
ANR	675676	UnaryOperator	!		675670	0					
ANR	675677	Identifier	esil		675670	1					
ANR	675678	CompoundStatement		2:12:13:13	675670	1					
ANR	675679	ReturnStatement	return 0 ;	4599:2:137541:137549	675670	0	True				
ANR	675680	PrimaryExpression	0		675670	0					
ANR	675681	IdentifierDeclStatement	RAnal * anal = esil -> anal ;	4601:1:137555:137579	675670	1	True				
ANR	675682	IdentifierDecl	* anal = esil -> anal		675670	0					
ANR	675683	IdentifierDeclType	RAnal *		675670	0					
ANR	675684	Identifier	anal		675670	1					
ANR	675685	AssignmentExpression	* anal = esil -> anal		675670	2		=			
ANR	675686	Identifier	anal		675670	0					
ANR	675687	PtrMemberAccess	esil -> anal		675670	1					
ANR	675688	Identifier	esil		675670	0					
ANR	675689	Identifier	anal		675670	1					
ANR	675690	IdentifierDeclStatement	RAnalOp * op = esil -> user ;	4602:1:137582:137606	675670	2	True				
ANR	675691	IdentifierDecl	* op = esil -> user		675670	0					
ANR	675692	IdentifierDeclType	RAnalOp *		675670	0					
ANR	675693	Identifier	op		675670	1					
ANR	675694	AssignmentExpression	* op = esil -> user		675670	2		=			
ANR	675695	Identifier	op		675670	0					
ANR	675696	PtrMemberAccess	esil -> user		675670	1					
ANR	675697	Identifier	esil		675670	0					
ANR	675698	Identifier	user		675670	1					
ANR	675699	IdentifierDeclStatement	RCore * core = anal -> coreb . core ;	4603:1:137609:137639	675670	3	True				
ANR	675700	IdentifierDecl	* core = anal -> coreb . core		675670	0					
ANR	675701	IdentifierDeclType	RCore *		675670	0					
ANR	675702	Identifier	core		675670	1					
ANR	675703	AssignmentExpression	* core = anal -> coreb . core		675670	2		=			
ANR	675704	Identifier	core		675670	0					
ANR	675705	MemberAccess	anal -> coreb . core		675670	1					
ANR	675706	PtrMemberAccess	anal -> coreb		675670	0					
ANR	675707	Identifier	anal		675670	0					
ANR	675708	Identifier	coreb		675670	1					
ANR	675709	Identifier	core		675670	1					
ANR	675710	IdentifierDeclStatement	ut64 at = * val ;	4606:1:137759:137773	675670	4	True				
ANR	675711	IdentifierDecl	at = * val		675670	0					
ANR	675712	IdentifierDeclType	ut64		675670	0					
ANR	675713	Identifier	at		675670	1					
ANR	675714	AssignmentExpression	at = * val		675670	2		=			
ANR	675715	Identifier	at		675670	0					
ANR	675716	UnaryOperationExpression	* val		675670	1					
ANR	675717	UnaryOperator	*		675670	0					
ANR	675718	Identifier	val		675670	1					
ANR	675719	IfStatement	if ( anal && anal -> opt . armthumb )		675670	5					
ANR	675720	Condition	anal && anal -> opt . armthumb	4607:5:137780:137805	675670	0	True				
ANR	675721	AndExpression	anal && anal -> opt . armthumb		675670	0		&&			
ANR	675722	Identifier	anal		675670	0					
ANR	675723	MemberAccess	anal -> opt . armthumb		675670	1					
ANR	675724	PtrMemberAccess	anal -> opt		675670	0					
ANR	675725	Identifier	anal		675670	0					
ANR	675726	Identifier	opt		675670	1					
ANR	675727	Identifier	armthumb		675670	1					
ANR	675728	CompoundStatement		11:33:284:284	675670	1					
ANR	675729	IfStatement	"if ( anal -> cur && anal -> cur -> arch && anal -> bits < 33 && strstr ( anal -> cur -> arch , ""arm"" ) && ! strcmp ( name , ""pc"" ) && op )"		675670	0					
ANR	675730	Condition	"anal -> cur && anal -> cur -> arch && anal -> bits < 33 && strstr ( anal -> cur -> arch , ""arm"" ) && ! strcmp ( name , ""pc"" ) && op"	4608:6:137816:137933	675670	0	True				
ANR	675731	AndExpression	"anal -> cur && anal -> cur -> arch && anal -> bits < 33 && strstr ( anal -> cur -> arch , ""arm"" ) && ! strcmp ( name , ""pc"" ) && op"		675670	0		&&			
ANR	675732	PtrMemberAccess	anal -> cur		675670	0					
ANR	675733	Identifier	anal		675670	0					
ANR	675734	Identifier	cur		675670	1					
ANR	675735	AndExpression	"anal -> cur -> arch && anal -> bits < 33 && strstr ( anal -> cur -> arch , ""arm"" ) && ! strcmp ( name , ""pc"" ) && op"		675670	1		&&			
ANR	675736	PtrMemberAccess	anal -> cur -> arch		675670	0					
ANR	675737	PtrMemberAccess	anal -> cur		675670	0					
ANR	675738	Identifier	anal		675670	0					
ANR	675739	Identifier	cur		675670	1					
ANR	675740	Identifier	arch		675670	1					
ANR	675741	AndExpression	"anal -> bits < 33 && strstr ( anal -> cur -> arch , ""arm"" ) && ! strcmp ( name , ""pc"" ) && op"		675670	1		&&			
ANR	675742	RelationalExpression	anal -> bits < 33		675670	0		<			
ANR	675743	PtrMemberAccess	anal -> bits		675670	0					
ANR	675744	Identifier	anal		675670	0					
ANR	675745	Identifier	bits		675670	1					
ANR	675746	PrimaryExpression	33		675670	1					
ANR	675747	AndExpression	"strstr ( anal -> cur -> arch , ""arm"" ) && ! strcmp ( name , ""pc"" ) && op"		675670	1		&&			
ANR	675748	CallExpression	"strstr ( anal -> cur -> arch , ""arm"" )"		675670	0					
ANR	675749	Callee	strstr		675670	0					
ANR	675750	Identifier	strstr		675670	0					
ANR	675751	ArgumentList	anal -> cur -> arch		675670	1					
ANR	675752	Argument	anal -> cur -> arch		675670	0					
ANR	675753	PtrMemberAccess	anal -> cur -> arch		675670	0					
ANR	675754	PtrMemberAccess	anal -> cur		675670	0					
ANR	675755	Identifier	anal		675670	0					
ANR	675756	Identifier	cur		675670	1					
ANR	675757	Identifier	arch		675670	1					
ANR	675758	Argument	"""arm"""		675670	1					
ANR	675759	PrimaryExpression	"""arm"""		675670	0					
ANR	675760	AndExpression	"! strcmp ( name , ""pc"" ) && op"		675670	1		&&			
ANR	675761	UnaryOperationExpression	"! strcmp ( name , ""pc"" )"		675670	0					
ANR	675762	UnaryOperator	!		675670	0					
ANR	675763	CallExpression	"strcmp ( name , ""pc"" )"		675670	1					
ANR	675764	Callee	strcmp		675670	0					
ANR	675765	Identifier	strcmp		675670	0					
ANR	675766	ArgumentList	name		675670	1					
ANR	675767	Argument	name		675670	0					
ANR	675768	Identifier	name		675670	0					
ANR	675769	Argument	"""pc"""		675670	1					
ANR	675770	PrimaryExpression	"""pc"""		675670	0					
ANR	675771	Identifier	op		675670	1					
ANR	675772	CompoundStatement		13:69:412:412	675670	1					
ANR	675773	SwitchStatement	switch ( op -> type )		675670	0					
ANR	675774	Condition	op -> type	4610:11:137949:137956	675670	0	True				
ANR	675775	PtrMemberAccess	op -> type		675670	0					
ANR	675776	Identifier	op		675670	0					
ANR	675777	Identifier	type		675670	1					
ANR	675778	CompoundStatement		14:21:435:435	675670	1					
ANR	675779	Label	case R_ANAL_OP_TYPE_UCALL :	4611:3:137964:137989	675670	0	True				
ANR	675780	Identifier	R_ANAL_OP_TYPE_UCALL		675670	0					
ANR	675781	Label	case R_ANAL_OP_TYPE_UJMP :	4612:3:138001:138025	675670	1	True				
ANR	675782	Identifier	R_ANAL_OP_TYPE_UJMP		675670	0					
ANR	675783	IfStatement	if ( ! ( * val & 1 ) )		675670	2					
ANR	675784	Condition	! ( * val & 1 )	4614:8:138080:138090	675670	0	True				
ANR	675785	UnaryOperationExpression	! ( * val & 1 )		675670	0					
ANR	675786	UnaryOperator	!		675670	0					
ANR	675787	BitAndExpression	* val & 1		675670	1		&			
ANR	675788	UnaryOperationExpression	* val		675670	0					
ANR	675789	UnaryOperator	*		675670	0					
ANR	675790	Identifier	val		675670	1					
ANR	675791	PrimaryExpression	1		675670	1					
ANR	675792	CompoundStatement		18:21:569:569	675670	1					
ANR	675793	ExpressionStatement	"r_anal_hint_set_bits ( anal , * val , 32 )"	4615:5:138100:138137	675670	0	True				
ANR	675794	CallExpression	"r_anal_hint_set_bits ( anal , * val , 32 )"		675670	0					
ANR	675795	Callee	r_anal_hint_set_bits		675670	0					
ANR	675796	Identifier	r_anal_hint_set_bits		675670	0					
ANR	675797	ArgumentList	anal		675670	1					
ANR	675798	Argument	anal		675670	0					
ANR	675799	Identifier	anal		675670	0					
ANR	675800	Argument	* val		675670	1					
ANR	675801	UnaryOperationExpression	* val		675670	0					
ANR	675802	UnaryOperator	*		675670	0					
ANR	675803	Identifier	val		675670	1					
ANR	675804	Argument	32		675670	2					
ANR	675805	PrimaryExpression	32		675670	0					
ANR	675806	ElseStatement	else		675670	0					
ANR	675807	CompoundStatement		21:5:633:672	675670	0					
ANR	675808	IdentifierDeclStatement	"ut64 snv = r_reg_getv ( anal -> reg , ""pc"" ) ;"	4617:5:138157:138196	675670	0	True				
ANR	675809	IdentifierDecl	"snv = r_reg_getv ( anal -> reg , ""pc"" )"		675670	0					
ANR	675810	IdentifierDeclType	ut64		675670	0					
ANR	675811	Identifier	snv		675670	1					
ANR	675812	AssignmentExpression	"snv = r_reg_getv ( anal -> reg , ""pc"" )"		675670	2		=			
ANR	675813	Identifier	snv		675670	0					
ANR	675814	CallExpression	"r_reg_getv ( anal -> reg , ""pc"" )"		675670	1					
ANR	675815	Callee	r_reg_getv		675670	0					
ANR	675816	Identifier	r_reg_getv		675670	0					
ANR	675817	ArgumentList	anal -> reg		675670	1					
ANR	675818	Argument	anal -> reg		675670	0					
ANR	675819	PtrMemberAccess	anal -> reg		675670	0					
ANR	675820	Identifier	anal		675670	0					
ANR	675821	Identifier	reg		675670	1					
ANR	675822	Argument	"""pc"""		675670	1					
ANR	675823	PrimaryExpression	"""pc"""		675670	0					
ANR	675824	IfStatement	if ( snv != UT32_MAX && snv != UT64_MAX )		675670	1					
ANR	675825	Condition	snv != UT32_MAX && snv != UT64_MAX	4618:9:138207:138240	675670	0	True				
ANR	675826	AndExpression	snv != UT32_MAX && snv != UT64_MAX		675670	0		&&			
ANR	675827	EqualityExpression	snv != UT32_MAX		675670	0		!=			
ANR	675828	Identifier	snv		675670	0					
ANR	675829	Identifier	UT32_MAX		675670	1					
ANR	675830	EqualityExpression	snv != UT64_MAX		675670	1		!=			
ANR	675831	Identifier	snv		675670	0					
ANR	675832	Identifier	UT64_MAX		675670	1					
ANR	675833	CompoundStatement		22:45:719:719	675670	1					
ANR	675834	IfStatement	"if ( r_io_is_valid_offset ( anal -> iob . io , * val , 1 ) )"		675670	0					
ANR	675835	Condition	"r_io_is_valid_offset ( anal -> iob . io , * val , 1 )"	4619:10:138255:138298	675670	0	True				
ANR	675836	CallExpression	"r_io_is_valid_offset ( anal -> iob . io , * val , 1 )"		675670	0					
ANR	675837	Callee	r_io_is_valid_offset		675670	0					
ANR	675838	Identifier	r_io_is_valid_offset		675670	0					
ANR	675839	ArgumentList	anal -> iob . io		675670	1					
ANR	675840	Argument	anal -> iob . io		675670	0					
ANR	675841	MemberAccess	anal -> iob . io		675670	0					
ANR	675842	PtrMemberAccess	anal -> iob		675670	0					
ANR	675843	Identifier	anal		675670	0					
ANR	675844	Identifier	iob		675670	1					
ANR	675845	Identifier	io		675670	1					
ANR	675846	Argument	* val		675670	1					
ANR	675847	UnaryOperationExpression	* val		675670	0					
ANR	675848	UnaryOperator	*		675670	0					
ANR	675849	Identifier	val		675670	1					
ANR	675850	Argument	1		675670	2					
ANR	675851	PrimaryExpression	1		675670	0					
ANR	675852	CompoundStatement		23:56:777:777	675670	1					
ANR	675853	ExpressionStatement	"r_anal_hint_set_bits ( anal , * val - 1 , 16 )"	4620:7:138310:138351	675670	0	True				
ANR	675854	CallExpression	"r_anal_hint_set_bits ( anal , * val - 1 , 16 )"		675670	0					
ANR	675855	Callee	r_anal_hint_set_bits		675670	0					
ANR	675856	Identifier	r_anal_hint_set_bits		675670	0					
ANR	675857	ArgumentList	anal		675670	1					
ANR	675858	Argument	anal		675670	0					
ANR	675859	Identifier	anal		675670	0					
ANR	675860	Argument	* val - 1		675670	1					
ANR	675861	AdditiveExpression	* val - 1		675670	0		-			
ANR	675862	UnaryOperationExpression	* val		675670	0					
ANR	675863	UnaryOperator	*		675670	0					
ANR	675864	Identifier	val		675670	1					
ANR	675865	PrimaryExpression	1		675670	1					
ANR	675866	Argument	16		675670	2					
ANR	675867	PrimaryExpression	16		675670	0					
ANR	675868	IfStatement	"if ( core -> assembler -> bits == 32 && strstr ( core -> assembler -> cur -> name , ""arm"" ) )"		675670	6					
ANR	675869	Condition	"core -> assembler -> bits == 32 && strstr ( core -> assembler -> cur -> name , ""arm"" )"	4627:5:138391:138463	675670	0	True				
ANR	675870	AndExpression	"core -> assembler -> bits == 32 && strstr ( core -> assembler -> cur -> name , ""arm"" )"		675670	0		&&			
ANR	675871	EqualityExpression	core -> assembler -> bits == 32		675670	0		==			
ANR	675872	PtrMemberAccess	core -> assembler -> bits		675670	0					
ANR	675873	PtrMemberAccess	core -> assembler		675670	0					
ANR	675874	Identifier	core		675670	0					
ANR	675875	Identifier	assembler		675670	1					
ANR	675876	Identifier	bits		675670	1					
ANR	675877	PrimaryExpression	32		675670	1					
ANR	675878	CallExpression	"strstr ( core -> assembler -> cur -> name , ""arm"" )"		675670	1					
ANR	675879	Callee	strstr		675670	0					
ANR	675880	Identifier	strstr		675670	0					
ANR	675881	ArgumentList	core -> assembler -> cur -> name		675670	1					
ANR	675882	Argument	core -> assembler -> cur -> name		675670	0					
ANR	675883	PtrMemberAccess	core -> assembler -> cur -> name		675670	0					
ANR	675884	PtrMemberAccess	core -> assembler -> cur		675670	0					
ANR	675885	PtrMemberAccess	core -> assembler		675670	0					
ANR	675886	Identifier	core		675670	0					
ANR	675887	Identifier	assembler		675670	1					
ANR	675888	Identifier	cur		675670	1					
ANR	675889	Identifier	name		675670	1					
ANR	675890	Argument	"""arm"""		675670	1					
ANR	675891	PrimaryExpression	"""arm"""		675670	0					
ANR	675892	CompoundStatement		31:80:942:942	675670	1					
ANR	675893	IfStatement	"if ( ( ! ( at & 1 ) ) && r_io_is_valid_offset ( anal -> iob . io , at , 0 ) )"		675670	0					
ANR	675894	Condition	"( ! ( at & 1 ) ) && r_io_is_valid_offset ( anal -> iob . io , at , 0 )"	4628:6:138474:138530	675670	0	True				
ANR	675895	AndExpression	"( ! ( at & 1 ) ) && r_io_is_valid_offset ( anal -> iob . io , at , 0 )"		675670	0		&&			
ANR	675896	UnaryOperationExpression	! ( at & 1 )		675670	0					
ANR	675897	UnaryOperator	!		675670	0					
ANR	675898	BitAndExpression	at & 1		675670	1		&			
ANR	675899	Identifier	at		675670	0					
ANR	675900	PrimaryExpression	1		675670	1					
ANR	675901	CallExpression	"r_io_is_valid_offset ( anal -> iob . io , at , 0 )"		675670	1					
ANR	675902	Callee	r_io_is_valid_offset		675670	0					
ANR	675903	Identifier	r_io_is_valid_offset		675670	0					
ANR	675904	ArgumentList	anal -> iob . io		675670	1					
ANR	675905	Argument	anal -> iob . io		675670	0					
ANR	675906	MemberAccess	anal -> iob . io		675670	0					
ANR	675907	PtrMemberAccess	anal -> iob		675670	0					
ANR	675908	Identifier	anal		675670	0					
ANR	675909	Identifier	iob		675670	1					
ANR	675910	Identifier	io		675670	1					
ANR	675911	Argument	at		675670	1					
ANR	675912	Identifier	at		675670	0					
ANR	675913	Argument	0		675670	2					
ANR	675914	PrimaryExpression	0		675670	0					
ANR	675915	CompoundStatement		32:65:1009:1009	675670	1					
ANR	675916	ExpressionStatement	"add_string_ref ( anal -> coreb . core , esil -> address , at )"	4629:3:138571:138623	675670	0	True				
ANR	675917	CallExpression	"add_string_ref ( anal -> coreb . core , esil -> address , at )"		675670	0					
ANR	675918	Callee	add_string_ref		675670	0					
ANR	675919	Identifier	add_string_ref		675670	0					
ANR	675920	ArgumentList	anal -> coreb . core		675670	1					
ANR	675921	Argument	anal -> coreb . core		675670	0					
ANR	675922	MemberAccess	anal -> coreb . core		675670	0					
ANR	675923	PtrMemberAccess	anal -> coreb		675670	0					
ANR	675924	Identifier	anal		675670	0					
ANR	675925	Identifier	coreb		675670	1					
ANR	675926	Identifier	core		675670	1					
ANR	675927	Argument	esil -> address		675670	1					
ANR	675928	PtrMemberAccess	esil -> address		675670	0					
ANR	675929	Identifier	esil		675670	0					
ANR	675930	Identifier	address		675670	1					
ANR	675931	Argument	at		675670	2					
ANR	675932	Identifier	at		675670	0					
ANR	675933	ReturnStatement	return 0 ;	4632:1:138633:138641	675670	7	True				
ANR	675934	PrimaryExpression	0		675670	0					
ANR	675935	ReturnType	static int		675670	1					
ANR	675936	Identifier	esilbreak_reg_write		675670	2					
ANR	675937	ParameterList	"RAnalEsil * esil , const char * name , ut64 * val"		675670	3					
ANR	675938	Parameter	RAnalEsil * esil	4597:31:137477:137491	675670	0	True				
ANR	675939	ParameterType	RAnalEsil *		675670	0					
ANR	675940	Identifier	esil		675670	1					
ANR	675941	Parameter	const char * name	4597:48:137494:137509	675670	1	True				
ANR	675942	ParameterType	const char *		675670	0					
ANR	675943	Identifier	name		675670	1					
ANR	675944	Parameter	ut64 * val	4597:66:137512:137520	675670	2	True				
ANR	675945	ParameterType	ut64 *		675670	0					
ANR	675946	Identifier	val		675670	1					
ANR	675947	CFGEntryNode	ENTRY		675670		True				
ANR	675948	CFGExitNode	EXIT		675670		True				
ANR	675949	Symbol	UT32_MAX		675670						
ANR	675950	Symbol	* anal -> cur		675670						
ANR	675951	Symbol	anal -> reg		675670						
ANR	675952	Symbol	* core -> assembler -> cur		675670						
ANR	675953	Symbol	* op		675670						
ANR	675954	Symbol	esil -> address		675670						
ANR	675955	Symbol	* core		675670						
ANR	675956	Symbol	core -> assembler -> bits		675670						
ANR	675957	Symbol	core -> assembler		675670						
ANR	675958	Symbol	* val		675670						
ANR	675959	Symbol	anal -> cur -> arch		675670						
ANR	675960	Symbol	* core -> assembler		675670						
ANR	675961	Symbol	* * anal		675670						
ANR	675962	Symbol	* anal		675670						
ANR	675963	Symbol	* esil		675670						
ANR	675964	Symbol	UT64_MAX		675670						
ANR	675965	Symbol	anal -> iob . io		675670						
ANR	675966	Symbol	* * core		675670						
ANR	675967	Symbol	val		675670						
ANR	675968	Symbol	strcmp		675670						
ANR	675969	Symbol	op		675670						
ANR	675970	Symbol	anal -> opt		675670						
ANR	675971	Symbol	r_io_is_valid_offset		675670						
ANR	675972	Symbol	op -> type		675670						
ANR	675973	Symbol	anal -> coreb . core		675670						
ANR	675974	Symbol	core -> assembler -> cur -> name		675670						
ANR	675975	Symbol	anal -> bits		675670						
ANR	675976	Symbol	core		675670						
ANR	675977	Symbol	anal -> opt . armthumb		675670						
ANR	675978	Symbol	* * * core		675670						
ANR	675979	Symbol	esil -> anal		675670						
ANR	675980	Symbol	at		675670						
ANR	675981	Symbol	anal		675670						
ANR	675982	Symbol	strstr		675670						
ANR	675983	Symbol	anal -> cur		675670						
ANR	675984	Symbol	name		675670						
ANR	675985	Symbol	anal -> coreb		675670						
ANR	675986	Symbol	* * core -> assembler		675670						
ANR	675987	Symbol	snv		675670						
ANR	675988	Symbol	core -> assembler -> cur		675670						
ANR	675989	Symbol	r_reg_getv		675670						
ANR	675990	Symbol	anal -> iob		675670						
ANR	675991	Symbol	esil		675670						
ANR	675992	Symbol	esil -> user		675670						
ANR	675993	Function	getpcfromstack	4635:0:138646:141302							
ANR	675994	FunctionDef	"getpcfromstack (RCore * core , RAnalEsil * esil)"		675993	0					
ANR	675995	CompoundStatement		4635:57:138703:141302	675993	0					
ANR	675996	IdentifierDeclStatement	ut64 cur ;	4636:1:138706:138714	675993	0	True				
ANR	675997	IdentifierDecl	cur		675993	0					
ANR	675998	IdentifierDeclType	ut64		675993	0					
ANR	675999	Identifier	cur		675993	1					
ANR	676000	IdentifierDeclStatement	ut64 addr ;	4637:1:138717:138726	675993	1	True				
ANR	676001	IdentifierDecl	addr		675993	0					
ANR	676002	IdentifierDeclType	ut64		675993	0					
ANR	676003	Identifier	addr		675993	1					
ANR	676004	IdentifierDeclStatement	ut64 size ;	4638:1:138729:138738	675993	2	True				
ANR	676005	IdentifierDecl	size		675993	0					
ANR	676006	IdentifierDeclType	ut64		675993	0					
ANR	676007	Identifier	size		675993	1					
ANR	676008	IdentifierDeclStatement	int idx ;	4639:1:138741:138748	675993	3	True				
ANR	676009	IdentifierDecl	idx		675993	0					
ANR	676010	IdentifierDeclType	int		675993	0					
ANR	676011	Identifier	idx		675993	1					
ANR	676012	IdentifierDeclStatement	RAnalEsil esil_cpy ;	4640:1:138751:138769	675993	4	True				
ANR	676013	IdentifierDecl	esil_cpy		675993	0					
ANR	676014	IdentifierDeclType	RAnalEsil		675993	0					
ANR	676015	Identifier	esil_cpy		675993	1					
ANR	676016	IdentifierDeclStatement	RAnalOp op = R_EMPTY ;	4641:1:138772:138792	675993	5	True				
ANR	676017	IdentifierDecl	op = R_EMPTY		675993	0					
ANR	676018	IdentifierDeclType	RAnalOp		675993	0					
ANR	676019	Identifier	op		675993	1					
ANR	676020	AssignmentExpression	op = R_EMPTY		675993	2		=			
ANR	676021	Identifier	R_EMPTY		675993	0					
ANR	676022	Identifier	R_EMPTY		675993	1					
ANR	676023	IdentifierDeclStatement	RAnalFunction * fcn = NULL ;	4642:1:138795:138820	675993	6	True				
ANR	676024	IdentifierDecl	* fcn = NULL		675993	0					
ANR	676025	IdentifierDeclType	RAnalFunction *		675993	0					
ANR	676026	Identifier	fcn		675993	1					
ANR	676027	AssignmentExpression	* fcn = NULL		675993	2		=			
ANR	676028	Identifier	NULL		675993	0					
ANR	676029	Identifier	NULL		675993	1					
ANR	676030	IdentifierDeclStatement	ut8 * buf = NULL ;	4643:1:138823:138838	675993	7	True				
ANR	676031	IdentifierDecl	* buf = NULL		675993	0					
ANR	676032	IdentifierDeclType	ut8 *		675993	0					
ANR	676033	Identifier	buf		675993	1					
ANR	676034	AssignmentExpression	* buf = NULL		675993	2		=			
ANR	676035	Identifier	NULL		675993	0					
ANR	676036	Identifier	NULL		675993	1					
ANR	676037	IdentifierDeclStatement	char * tmp_esil_str = NULL ;	4644:1:138841:138866	675993	8	True				
ANR	676038	IdentifierDecl	* tmp_esil_str = NULL		675993	0					
ANR	676039	IdentifierDeclType	char *		675993	0					
ANR	676040	Identifier	tmp_esil_str		675993	1					
ANR	676041	AssignmentExpression	* tmp_esil_str = NULL		675993	2		=			
ANR	676042	Identifier	NULL		675993	0					
ANR	676043	Identifier	NULL		675993	1					
ANR	676044	IdentifierDeclStatement	int tmp_esil_str_len ;	4645:1:138869:138889	675993	9	True				
ANR	676045	IdentifierDecl	tmp_esil_str_len		675993	0					
ANR	676046	IdentifierDeclType	int		675993	0					
ANR	676047	Identifier	tmp_esil_str_len		675993	1					
ANR	676048	IdentifierDeclStatement	const char * esilstr ;	4646:1:138892:138911	675993	10	True				
ANR	676049	IdentifierDecl	* esilstr		675993	0					
ANR	676050	IdentifierDeclType	const char *		675993	0					
ANR	676051	Identifier	esilstr		675993	1					
ANR	676052	IdentifierDeclStatement	const int maxaddrlen = 20 ;	4647:1:138914:138939	675993	11	True				
ANR	676053	IdentifierDecl	maxaddrlen = 20		675993	0					
ANR	676054	IdentifierDeclType	const int		675993	0					
ANR	676055	Identifier	maxaddrlen		675993	1					
ANR	676056	AssignmentExpression	maxaddrlen = 20		675993	2		=			
ANR	676057	Identifier	maxaddrlen		675993	0					
ANR	676058	PrimaryExpression	20		675993	1					
ANR	676059	IdentifierDeclStatement	const char * spname = NULL ;	4648:1:138942:138967	675993	12	True				
ANR	676060	IdentifierDecl	* spname = NULL		675993	0					
ANR	676061	IdentifierDeclType	const char *		675993	0					
ANR	676062	Identifier	spname		675993	1					
ANR	676063	AssignmentExpression	* spname = NULL		675993	2		=			
ANR	676064	Identifier	NULL		675993	0					
ANR	676065	Identifier	NULL		675993	1					
ANR	676066	IfStatement	if ( ! esil )		675993	13					
ANR	676067	Condition	! esil	4649:5:138974:138978	675993	0	True				
ANR	676068	UnaryOperationExpression	! esil		675993	0					
ANR	676069	UnaryOperator	!		675993	0					
ANR	676070	Identifier	esil		675993	1					
ANR	676071	CompoundStatement		15:12:277:277	675993	1					
ANR	676072	ReturnStatement	return ;	4650:2:138985:138991	675993	0	True				
ANR	676073	ExpressionStatement	"memcpy ( & esil_cpy , esil , sizeof ( esil_cpy ) )"	4653:1:138998:139041	675993	14	True				
ANR	676074	CallExpression	"memcpy ( & esil_cpy , esil , sizeof ( esil_cpy ) )"		675993	0					
ANR	676075	Callee	memcpy		675993	0					
ANR	676076	Identifier	memcpy		675993	0					
ANR	676077	ArgumentList	& esil_cpy		675993	1					
ANR	676078	Argument	& esil_cpy		675993	0					
ANR	676079	UnaryOperationExpression	& esil_cpy		675993	0					
ANR	676080	UnaryOperator	&		675993	0					
ANR	676081	Identifier	esil_cpy		675993	1					
ANR	676082	Argument	esil		675993	1					
ANR	676083	Identifier	esil		675993	0					
ANR	676084	Argument	sizeof ( esil_cpy )		675993	2					
ANR	676085	SizeofExpression	sizeof ( esil_cpy )		675993	0					
ANR	676086	Sizeof	sizeof		675993	0					
ANR	676087	SizeofOperand	esil_cpy		675993	1					
ANR	676088	ExpressionStatement	addr = cur = esil_cpy . cur	4654:1:139044:139069	675993	15	True				
ANR	676089	AssignmentExpression	addr = cur = esil_cpy . cur		675993	0		=			
ANR	676090	Identifier	addr		675993	0					
ANR	676091	AssignmentExpression	cur = esil_cpy . cur		675993	1		=			
ANR	676092	Identifier	cur		675993	0					
ANR	676093	MemberAccess	esil_cpy . cur		675993	1					
ANR	676094	Identifier	esil_cpy		675993	0					
ANR	676095	Identifier	cur		675993	1					
ANR	676096	ExpressionStatement	"fcn = r_anal_get_fcn_in ( core -> anal , addr , 0 )"	4655:1:139072:139117	675993	16	True				
ANR	676097	AssignmentExpression	"fcn = r_anal_get_fcn_in ( core -> anal , addr , 0 )"		675993	0		=			
ANR	676098	Identifier	fcn		675993	0					
ANR	676099	CallExpression	"r_anal_get_fcn_in ( core -> anal , addr , 0 )"		675993	1					
ANR	676100	Callee	r_anal_get_fcn_in		675993	0					
ANR	676101	Identifier	r_anal_get_fcn_in		675993	0					
ANR	676102	ArgumentList	core -> anal		675993	1					
ANR	676103	Argument	core -> anal		675993	0					
ANR	676104	PtrMemberAccess	core -> anal		675993	0					
ANR	676105	Identifier	core		675993	0					
ANR	676106	Identifier	anal		675993	1					
ANR	676107	Argument	addr		675993	1					
ANR	676108	Identifier	addr		675993	0					
ANR	676109	Argument	0		675993	2					
ANR	676110	PrimaryExpression	0		675993	0					
ANR	676111	IfStatement	if ( ! fcn )		675993	17					
ANR	676112	Condition	! fcn	4656:5:139124:139127	675993	0	True				
ANR	676113	UnaryOperationExpression	! fcn		675993	0					
ANR	676114	UnaryOperator	!		675993	0					
ANR	676115	Identifier	fcn		675993	1					
ANR	676116	CompoundStatement		22:11:426:426	675993	1					
ANR	676117	ReturnStatement	return ;	4657:2:139134:139140	675993	0	True				
ANR	676118	ExpressionStatement	size = r_anal_fcn_size ( fcn )	4660:1:139147:139175	675993	18	True				
ANR	676119	AssignmentExpression	size = r_anal_fcn_size ( fcn )		675993	0		=			
ANR	676120	Identifier	size		675993	0					
ANR	676121	CallExpression	r_anal_fcn_size ( fcn )		675993	1					
ANR	676122	Callee	r_anal_fcn_size		675993	0					
ANR	676123	Identifier	r_anal_fcn_size		675993	0					
ANR	676124	ArgumentList	fcn		675993	1					
ANR	676125	Argument	fcn		675993	0					
ANR	676126	Identifier	fcn		675993	0					
ANR	676127	IfStatement	if ( size <= 0 )		675993	19					
ANR	676128	Condition	size <= 0	4661:5:139182:139190	675993	0	True				
ANR	676129	RelationalExpression	size <= 0		675993	0		<=			
ANR	676130	Identifier	size		675993	0					
ANR	676131	PrimaryExpression	0		675993	1					
ANR	676132	CompoundStatement		27:16:489:489	675993	1					
ANR	676133	ReturnStatement	return ;	4662:2:139197:139203	675993	0	True				
ANR	676134	ExpressionStatement	buf = malloc ( size + 2 )	4665:1:139210:139233	675993	20	True				
ANR	676135	AssignmentExpression	buf = malloc ( size + 2 )		675993	0		=			
ANR	676136	Identifier	buf		675993	0					
ANR	676137	CallExpression	malloc ( size + 2 )		675993	1					
ANR	676138	Callee	malloc		675993	0					
ANR	676139	Identifier	malloc		675993	0					
ANR	676140	ArgumentList	size + 2		675993	1					
ANR	676141	Argument	size + 2		675993	0					
ANR	676142	AdditiveExpression	size + 2		675993	0		+			
ANR	676143	Identifier	size		675993	0					
ANR	676144	PrimaryExpression	2		675993	1					
ANR	676145	IfStatement	if ( ! buf )		675993	21					
ANR	676146	Condition	! buf	4666:5:139240:139243	675993	0	True				
ANR	676147	UnaryOperationExpression	! buf		675993	0					
ANR	676148	UnaryOperator	!		675993	0					
ANR	676149	Identifier	buf		675993	1					
ANR	676150	CompoundStatement		32:11:542:542	675993	1					
ANR	676151	ExpressionStatement	"perror ( ""malloc"" )"	4667:2:139250:139267	675993	0	True				
ANR	676152	CallExpression	"perror ( ""malloc"" )"		675993	0					
ANR	676153	Callee	perror		675993	0					
ANR	676154	Identifier	perror		675993	0					
ANR	676155	ArgumentList	"""malloc"""		675993	1					
ANR	676156	Argument	"""malloc"""		675993	0					
ANR	676157	PrimaryExpression	"""malloc"""		675993	0					
ANR	676158	ReturnStatement	return ;	4668:2:139271:139277	675993	1	True				
ANR	676159	ExpressionStatement	"r_io_read_at ( core -> io , addr , buf , size + 1 )"	4671:1:139284:139328	675993	22	True				
ANR	676160	CallExpression	"r_io_read_at ( core -> io , addr , buf , size + 1 )"		675993	0					
ANR	676161	Callee	r_io_read_at		675993	0					
ANR	676162	Identifier	r_io_read_at		675993	0					
ANR	676163	ArgumentList	core -> io		675993	1					
ANR	676164	Argument	core -> io		675993	0					
ANR	676165	PtrMemberAccess	core -> io		675993	0					
ANR	676166	Identifier	core		675993	0					
ANR	676167	Identifier	io		675993	1					
ANR	676168	Argument	addr		675993	1					
ANR	676169	Identifier	addr		675993	0					
ANR	676170	Argument	buf		675993	2					
ANR	676171	Identifier	buf		675993	0					
ANR	676172	Argument	size + 1		675993	3					
ANR	676173	AdditiveExpression	size + 1		675993	0		+			
ANR	676174	Identifier	size		675993	0					
ANR	676175	PrimaryExpression	1		675993	1					
ANR	676176	ExpressionStatement	idx = 0	4674:1:139409:139416	675993	23	True				
ANR	676177	AssignmentExpression	idx = 0		675993	0		=			
ANR	676178	Identifier	idx		675993	0					
ANR	676179	PrimaryExpression	0		675993	1					
ANR	676180	IfStatement	"if ( r_anal_op ( core -> anal , & op , cur , buf + idx , size - idx , R_ANAL_OP_MASK_ESIL ) <= 0 || op . size <= 0 || ( op . type != R_ANAL_OP_TYPE_MOV && op . type != R_ANAL_OP_TYPE_CMOV ) )"		675993	24					
ANR	676181	Condition	"r_anal_op ( core -> anal , & op , cur , buf + idx , size - idx , R_ANAL_OP_MASK_ESIL ) <= 0 || op . size <= 0 || ( op . type != R_ANAL_OP_TYPE_MOV && op . type != R_ANAL_OP_TYPE_CMOV )"	4675:5:139423:139594	675993	0	True				
ANR	676182	OrExpression	"r_anal_op ( core -> anal , & op , cur , buf + idx , size - idx , R_ANAL_OP_MASK_ESIL ) <= 0 || op . size <= 0 || ( op . type != R_ANAL_OP_TYPE_MOV && op . type != R_ANAL_OP_TYPE_CMOV )"		675993	0		||			
ANR	676183	RelationalExpression	"r_anal_op ( core -> anal , & op , cur , buf + idx , size - idx , R_ANAL_OP_MASK_ESIL ) <= 0"		675993	0		<=			
ANR	676184	CallExpression	"r_anal_op ( core -> anal , & op , cur , buf + idx , size - idx , R_ANAL_OP_MASK_ESIL )"		675993	0					
ANR	676185	Callee	r_anal_op		675993	0					
ANR	676186	Identifier	r_anal_op		675993	0					
ANR	676187	ArgumentList	core -> anal		675993	1					
ANR	676188	Argument	core -> anal		675993	0					
ANR	676189	PtrMemberAccess	core -> anal		675993	0					
ANR	676190	Identifier	core		675993	0					
ANR	676191	Identifier	anal		675993	1					
ANR	676192	Argument	& op		675993	1					
ANR	676193	UnaryOperationExpression	& op		675993	0					
ANR	676194	UnaryOperator	&		675993	0					
ANR	676195	Identifier	op		675993	1					
ANR	676196	Argument	cur		675993	2					
ANR	676197	Identifier	cur		675993	0					
ANR	676198	Argument	buf + idx		675993	3					
ANR	676199	AdditiveExpression	buf + idx		675993	0		+			
ANR	676200	Identifier	buf		675993	0					
ANR	676201	Identifier	idx		675993	1					
ANR	676202	Argument	size - idx		675993	4					
ANR	676203	AdditiveExpression	size - idx		675993	0		-			
ANR	676204	Identifier	size		675993	0					
ANR	676205	Identifier	idx		675993	1					
ANR	676206	Argument	R_ANAL_OP_MASK_ESIL		675993	5					
ANR	676207	Identifier	R_ANAL_OP_MASK_ESIL		675993	0					
ANR	676208	PrimaryExpression	0		675993	1					
ANR	676209	OrExpression	op . size <= 0 || ( op . type != R_ANAL_OP_TYPE_MOV && op . type != R_ANAL_OP_TYPE_CMOV )		675993	1		||			
ANR	676210	RelationalExpression	op . size <= 0		675993	0		<=			
ANR	676211	MemberAccess	op . size		675993	0					
ANR	676212	Identifier	op		675993	0					
ANR	676213	Identifier	size		675993	1					
ANR	676214	PrimaryExpression	0		675993	1					
ANR	676215	AndExpression	op . type != R_ANAL_OP_TYPE_MOV && op . type != R_ANAL_OP_TYPE_CMOV		675993	1		&&			
ANR	676216	EqualityExpression	op . type != R_ANAL_OP_TYPE_MOV		675993	0		!=			
ANR	676217	MemberAccess	op . type		675993	0					
ANR	676218	Identifier	op		675993	0					
ANR	676219	Identifier	type		675993	1					
ANR	676220	Identifier	R_ANAL_OP_TYPE_MOV		675993	1					
ANR	676221	EqualityExpression	op . type != R_ANAL_OP_TYPE_CMOV		675993	1		!=			
ANR	676222	MemberAccess	op . type		675993	0					
ANR	676223	Identifier	op		675993	0					
ANR	676224	Identifier	type		675993	1					
ANR	676225	Identifier	R_ANAL_OP_TYPE_CMOV		675993	1					
ANR	676226	CompoundStatement		43:70:893:893	675993	1					
ANR	676227	GotoStatement	goto err_anal_op ;	4678:2:139601:139617	675993	0	True				
ANR	676228	Identifier	err_anal_op		675993	0					
ANR	676229	ExpressionStatement	"r_asm_set_pc ( core -> assembler , cur )"	4681:1:139624:139659	675993	25	True				
ANR	676230	CallExpression	"r_asm_set_pc ( core -> assembler , cur )"		675993	0					
ANR	676231	Callee	r_asm_set_pc		675993	0					
ANR	676232	Identifier	r_asm_set_pc		675993	0					
ANR	676233	ArgumentList	core -> assembler		675993	1					
ANR	676234	Argument	core -> assembler		675993	0					
ANR	676235	PtrMemberAccess	core -> assembler		675993	0					
ANR	676236	Identifier	core		675993	0					
ANR	676237	Identifier	assembler		675993	1					
ANR	676238	Argument	cur		675993	1					
ANR	676239	Identifier	cur		675993	0					
ANR	676240	ExpressionStatement	esilstr = R_STRBUF_SAFEGET ( & op . esil )	4682:1:139662:139699	675993	26	True				
ANR	676241	AssignmentExpression	esilstr = R_STRBUF_SAFEGET ( & op . esil )		675993	0		=			
ANR	676242	Identifier	esilstr		675993	0					
ANR	676243	CallExpression	R_STRBUF_SAFEGET ( & op . esil )		675993	1					
ANR	676244	Callee	R_STRBUF_SAFEGET		675993	0					
ANR	676245	Identifier	R_STRBUF_SAFEGET		675993	0					
ANR	676246	ArgumentList	& op . esil		675993	1					
ANR	676247	Argument	& op . esil		675993	0					
ANR	676248	UnaryOperationExpression	& op . esil		675993	0					
ANR	676249	UnaryOperator	&		675993	0					
ANR	676250	MemberAccess	op . esil		675993	1					
ANR	676251	Identifier	op		675993	0					
ANR	676252	Identifier	esil		675993	1					
ANR	676253	IfStatement	if ( ! esilstr )		675993	27					
ANR	676254	Condition	! esilstr	4683:5:139706:139713	675993	0	True				
ANR	676255	UnaryOperationExpression	! esilstr		675993	0					
ANR	676256	UnaryOperator	!		675993	0					
ANR	676257	Identifier	esilstr		675993	1					
ANR	676258	CompoundStatement		49:15:1012:1012	675993	1					
ANR	676259	GotoStatement	goto err_anal_op ;	4684:2:139720:139736	675993	0	True				
ANR	676260	Identifier	err_anal_op		675993	0					
ANR	676261	ExpressionStatement	"spname = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SP )"	4688:1:139875:139931	675993	28	True				
ANR	676262	AssignmentExpression	"spname = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SP )"		675993	0		=			
ANR	676263	Identifier	spname		675993	0					
ANR	676264	CallExpression	"r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SP )"		675993	1					
ANR	676265	Callee	r_reg_get_name		675993	0					
ANR	676266	Identifier	r_reg_get_name		675993	0					
ANR	676267	ArgumentList	core -> anal -> reg		675993	1					
ANR	676268	Argument	core -> anal -> reg		675993	0					
ANR	676269	PtrMemberAccess	core -> anal -> reg		675993	0					
ANR	676270	PtrMemberAccess	core -> anal		675993	0					
ANR	676271	Identifier	core		675993	0					
ANR	676272	Identifier	anal		675993	1					
ANR	676273	Identifier	reg		675993	1					
ANR	676274	Argument	R_REG_NAME_SP		675993	1					
ANR	676275	Identifier	R_REG_NAME_SP		675993	0					
ANR	676276	IfStatement	if ( ! spname || ! * spname )		675993	29					
ANR	676277	Condition	! spname || ! * spname	4689:5:139938:139956	675993	0	True				
ANR	676278	OrExpression	! spname || ! * spname		675993	0		||			
ANR	676279	UnaryOperationExpression	! spname		675993	0					
ANR	676280	UnaryOperator	!		675993	0					
ANR	676281	Identifier	spname		675993	1					
ANR	676282	UnaryOperationExpression	! * spname		675993	1					
ANR	676283	UnaryOperator	!		675993	0					
ANR	676284	UnaryOperationExpression	* spname		675993	1					
ANR	676285	UnaryOperator	*		675993	0					
ANR	676286	Identifier	spname		675993	1					
ANR	676287	CompoundStatement		55:26:1255:1255	675993	1					
ANR	676288	GotoStatement	goto err_anal_op ;	4690:2:139963:139979	675993	0	True				
ANR	676289	Identifier	err_anal_op		675993	0					
ANR	676290	ExpressionStatement	tmp_esil_str_len = strlen ( esilstr ) + strlen ( spname ) + maxaddrlen	4692:1:139985:140051	675993	30	True				
ANR	676291	AssignmentExpression	tmp_esil_str_len = strlen ( esilstr ) + strlen ( spname ) + maxaddrlen		675993	0		=			
ANR	676292	Identifier	tmp_esil_str_len		675993	0					
ANR	676293	AdditiveExpression	strlen ( esilstr ) + strlen ( spname ) + maxaddrlen		675993	1		+			
ANR	676294	CallExpression	strlen ( esilstr )		675993	0					
ANR	676295	Callee	strlen		675993	0					
ANR	676296	Identifier	strlen		675993	0					
ANR	676297	ArgumentList	esilstr		675993	1					
ANR	676298	Argument	esilstr		675993	0					
ANR	676299	Identifier	esilstr		675993	0					
ANR	676300	AdditiveExpression	strlen ( spname ) + maxaddrlen		675993	1		+			
ANR	676301	CallExpression	strlen ( spname )		675993	0					
ANR	676302	Callee	strlen		675993	0					
ANR	676303	Identifier	strlen		675993	0					
ANR	676304	ArgumentList	spname		675993	1					
ANR	676305	Argument	spname		675993	0					
ANR	676306	Identifier	spname		675993	0					
ANR	676307	Identifier	maxaddrlen		675993	1					
ANR	676308	ExpressionStatement	tmp_esil_str = ( char * ) malloc ( tmp_esil_str_len )	4693:1:140054:140102	675993	31	True				
ANR	676309	AssignmentExpression	tmp_esil_str = ( char * ) malloc ( tmp_esil_str_len )		675993	0		=			
ANR	676310	Identifier	tmp_esil_str		675993	0					
ANR	676311	CastExpression	( char * ) malloc ( tmp_esil_str_len )		675993	1					
ANR	676312	CastTarget	char *		675993	0					
ANR	676313	CallExpression	malloc ( tmp_esil_str_len )		675993	1					
ANR	676314	Callee	malloc		675993	0					
ANR	676315	Identifier	malloc		675993	0					
ANR	676316	ArgumentList	tmp_esil_str_len		675993	1					
ANR	676317	Argument	tmp_esil_str_len		675993	0					
ANR	676318	Identifier	tmp_esil_str_len		675993	0					
ANR	676319	IfStatement	if ( ! tmp_esil_str )		675993	32					
ANR	676320	Condition	! tmp_esil_str	4694:5:140109:140121	675993	0	True				
ANR	676321	UnaryOperationExpression	! tmp_esil_str		675993	0					
ANR	676322	UnaryOperator	!		675993	0					
ANR	676323	Identifier	tmp_esil_str		675993	1					
ANR	676324	CompoundStatement		60:20:1420:1420	675993	1					
ANR	676325	GotoStatement	goto err_anal_op ;	4695:2:140128:140144	675993	0	True				
ANR	676326	Identifier	err_anal_op		675993	0					
ANR	676327	ExpressionStatement	tmp_esil_str [ tmp_esil_str_len - 1 ] = '\\0'	4697:1:140150:140191	675993	33	True				
ANR	676328	AssignmentExpression	tmp_esil_str [ tmp_esil_str_len - 1 ] = '\\0'		675993	0		=			
ANR	676329	ArrayIndexing	tmp_esil_str [ tmp_esil_str_len - 1 ]		675993	0					
ANR	676330	Identifier	tmp_esil_str		675993	0					
ANR	676331	AdditiveExpression	tmp_esil_str_len - 1		675993	1		-			
ANR	676332	Identifier	tmp_esil_str_len		675993	0					
ANR	676333	PrimaryExpression	1		675993	1					
ANR	676334	PrimaryExpression	'\\0'		675993	1					
ANR	676335	ExpressionStatement	"snprintf ( tmp_esil_str , tmp_esil_str_len - 1 , ""%s,["" , spname )"	4698:1:140194:140255	675993	34	True				
ANR	676336	CallExpression	"snprintf ( tmp_esil_str , tmp_esil_str_len - 1 , ""%s,["" , spname )"		675993	0					
ANR	676337	Callee	snprintf		675993	0					
ANR	676338	Identifier	snprintf		675993	0					
ANR	676339	ArgumentList	tmp_esil_str		675993	1					
ANR	676340	Argument	tmp_esil_str		675993	0					
ANR	676341	Identifier	tmp_esil_str		675993	0					
ANR	676342	Argument	tmp_esil_str_len - 1		675993	1					
ANR	676343	AdditiveExpression	tmp_esil_str_len - 1		675993	0		-			
ANR	676344	Identifier	tmp_esil_str_len		675993	0					
ANR	676345	PrimaryExpression	1		675993	1					
ANR	676346	Argument	"""%s,["""		675993	2					
ANR	676347	PrimaryExpression	"""%s,["""		675993	0					
ANR	676348	Argument	spname		675993	3					
ANR	676349	Identifier	spname		675993	0					
ANR	676350	IfStatement	"if ( ! * esilstr || ( strncmp ( esilstr , tmp_esil_str , strlen ( tmp_esil_str ) ) ) )"		675993	35					
ANR	676351	Condition	"! * esilstr || ( strncmp ( esilstr , tmp_esil_str , strlen ( tmp_esil_str ) ) )"	4699:5:140262:140331	675993	0	True				
ANR	676352	OrExpression	"! * esilstr || ( strncmp ( esilstr , tmp_esil_str , strlen ( tmp_esil_str ) ) )"		675993	0		||			
ANR	676353	UnaryOperationExpression	! * esilstr		675993	0					
ANR	676354	UnaryOperator	!		675993	0					
ANR	676355	UnaryOperationExpression	* esilstr		675993	1					
ANR	676356	UnaryOperator	*		675993	0					
ANR	676357	Identifier	esilstr		675993	1					
ANR	676358	CallExpression	"strncmp ( esilstr , tmp_esil_str , strlen ( tmp_esil_str ) )"		675993	1					
ANR	676359	Callee	strncmp		675993	0					
ANR	676360	Identifier	strncmp		675993	0					
ANR	676361	ArgumentList	esilstr		675993	1					
ANR	676362	Argument	esilstr		675993	0					
ANR	676363	Identifier	esilstr		675993	0					
ANR	676364	Argument	tmp_esil_str		675993	1					
ANR	676365	Identifier	tmp_esil_str		675993	0					
ANR	676366	Argument	strlen ( tmp_esil_str )		675993	2					
ANR	676367	CallExpression	strlen ( tmp_esil_str )		675993	0					
ANR	676368	Callee	strlen		675993	0					
ANR	676369	Identifier	strlen		675993	0					
ANR	676370	ArgumentList	tmp_esil_str		675993	1					
ANR	676371	Argument	tmp_esil_str		675993	0					
ANR	676372	Identifier	tmp_esil_str		675993	0					
ANR	676373	CompoundStatement		65:77:1630:1630	675993	1					
ANR	676374	ExpressionStatement	free ( tmp_esil_str )	4700:2:140338:140357	675993	0	True				
ANR	676375	CallExpression	free ( tmp_esil_str )		675993	0					
ANR	676376	Callee	free		675993	0					
ANR	676377	Identifier	free		675993	0					
ANR	676378	ArgumentList	tmp_esil_str		675993	1					
ANR	676379	Argument	tmp_esil_str		675993	0					
ANR	676380	Identifier	tmp_esil_str		675993	0					
ANR	676381	GotoStatement	goto err_anal_op ;	4701:2:140361:140377	675993	1	True				
ANR	676382	Identifier	err_anal_op		675993	0					
ANR	676383	Statement	snprintf	4704:1:140384:140391	675993	36	True				
ANR	676384	Statement	(	4704:10:140393:140393	675993	37	True				
ANR	676385	Statement	tmp_esil_str	4704:11:140394:140405	675993	38	True				
ANR	676386	Statement	","	4704:23:140406:140406	675993	39	True				
ANR	676387	Statement	tmp_esil_str_len	4704:25:140408:140423	675993	40	True				
ANR	676388	Statement	-	4704:42:140425:140425	675993	41	True				
ANR	676389	Statement	1	4704:44:140427:140427	675993	42	True				
ANR	676390	Statement	","	4704:45:140428:140428	675993	43	True				
ANR	676391	Statement	"""%20"""	4704:47:140430:140434	675993	44	True				
ANR	676392	Statement	PFMT64u	4704:53:140436:140442	675993	45	True				
ANR	676393	Statement	"""%s"""	4704:61:140444:140447	675993	46	True				
ANR	676394	Statement	","	4704:65:140448:140448	675993	47	True				
ANR	676395	Statement	esil_cpy	4704:67:140450:140457	675993	48	True				
ANR	676396	Statement	.	4704:75:140458:140458	675993	49	True				
ANR	676397	Statement	old	4704:76:140459:140461	675993	50	True				
ANR	676398	Statement	","	4704:79:140462:140462	675993	51	True				
ANR	676399	Statement	&	4704:81:140464:140464	675993	52	True				
ANR	676400	Statement	esilstr	4704:82:140465:140471	675993	53	True				
ANR	676401	Statement	[	4704:89:140472:140472	675993	54	True				
ANR	676402	Statement	strlen	4704:90:140473:140478	675993	55	True				
ANR	676403	Statement	(	4704:97:140480:140480	675993	56	True				
ANR	676404	Statement	spname	4704:98:140481:140486	675993	57	True				
ANR	676405	Statement	)	4704:104:140487:140487	675993	58	True				
ANR	676406	Statement	+	4704:106:140489:140489	675993	59	True				
ANR	676407	Statement	4	4704:108:140491:140491	675993	60	True				
ANR	676408	Statement	]	4704:109:140492:140492	675993	61	True				
ANR	676409	Statement	)	4704:110:140493:140493	675993	62	True				
ANR	676410	ExpressionStatement		4704:111:140494:140494	675993	63	True				
ANR	676411	ExpressionStatement	tmp_esil_str = r_str_trim_head_tail ( tmp_esil_str )	4705:1:140497:140547	675993	64	True				
ANR	676412	AssignmentExpression	tmp_esil_str = r_str_trim_head_tail ( tmp_esil_str )		675993	0		=			
ANR	676413	Identifier	tmp_esil_str		675993	0					
ANR	676414	CallExpression	r_str_trim_head_tail ( tmp_esil_str )		675993	1					
ANR	676415	Callee	r_str_trim_head_tail		675993	0					
ANR	676416	Identifier	r_str_trim_head_tail		675993	0					
ANR	676417	ArgumentList	tmp_esil_str		675993	1					
ANR	676418	Argument	tmp_esil_str		675993	0					
ANR	676419	Identifier	tmp_esil_str		675993	0					
ANR	676420	ExpressionStatement	idx += op . size	4706:1:140550:140564	675993	65	True				
ANR	676421	AssignmentExpression	idx += op . size		675993	0		+=			
ANR	676422	Identifier	idx		675993	0					
ANR	676423	MemberAccess	op . size		675993	1					
ANR	676424	Identifier	op		675993	0					
ANR	676425	Identifier	size		675993	1					
ANR	676426	ExpressionStatement	"r_anal_esil_set_pc ( & esil_cpy , cur )"	4707:1:140567:140602	675993	66	True				
ANR	676427	CallExpression	"r_anal_esil_set_pc ( & esil_cpy , cur )"		675993	0					
ANR	676428	Callee	r_anal_esil_set_pc		675993	0					
ANR	676429	Identifier	r_anal_esil_set_pc		675993	0					
ANR	676430	ArgumentList	& esil_cpy		675993	1					
ANR	676431	Argument	& esil_cpy		675993	0					
ANR	676432	UnaryOperationExpression	& esil_cpy		675993	0					
ANR	676433	UnaryOperator	&		675993	0					
ANR	676434	Identifier	esil_cpy		675993	1					
ANR	676435	Argument	cur		675993	1					
ANR	676436	Identifier	cur		675993	0					
ANR	676437	ExpressionStatement	"r_anal_esil_parse ( & esil_cpy , tmp_esil_str )"	4708:1:140605:140648	675993	67	True				
ANR	676438	CallExpression	"r_anal_esil_parse ( & esil_cpy , tmp_esil_str )"		675993	0					
ANR	676439	Callee	r_anal_esil_parse		675993	0					
ANR	676440	Identifier	r_anal_esil_parse		675993	0					
ANR	676441	ArgumentList	& esil_cpy		675993	1					
ANR	676442	Argument	& esil_cpy		675993	0					
ANR	676443	UnaryOperationExpression	& esil_cpy		675993	0					
ANR	676444	UnaryOperator	&		675993	0					
ANR	676445	Identifier	esil_cpy		675993	1					
ANR	676446	Argument	tmp_esil_str		675993	1					
ANR	676447	Identifier	tmp_esil_str		675993	0					
ANR	676448	ExpressionStatement	r_anal_esil_stack_free ( & esil_cpy )	4709:1:140651:140685	675993	68	True				
ANR	676449	CallExpression	r_anal_esil_stack_free ( & esil_cpy )		675993	0					
ANR	676450	Callee	r_anal_esil_stack_free		675993	0					
ANR	676451	Identifier	r_anal_esil_stack_free		675993	0					
ANR	676452	ArgumentList	& esil_cpy		675993	1					
ANR	676453	Argument	& esil_cpy		675993	0					
ANR	676454	UnaryOperationExpression	& esil_cpy		675993	0					
ANR	676455	UnaryOperator	&		675993	0					
ANR	676456	Identifier	esil_cpy		675993	1					
ANR	676457	ExpressionStatement	free ( tmp_esil_str )	4710:1:140688:140707	675993	69	True				
ANR	676458	CallExpression	free ( tmp_esil_str )		675993	0					
ANR	676459	Callee	free		675993	0					
ANR	676460	Identifier	free		675993	0					
ANR	676461	ArgumentList	tmp_esil_str		675993	1					
ANR	676462	Argument	tmp_esil_str		675993	0					
ANR	676463	Identifier	tmp_esil_str		675993	0					
ANR	676464	ExpressionStatement	cur = addr + idx	4712:1:140711:140727	675993	70	True				
ANR	676465	AssignmentExpression	cur = addr + idx		675993	0		=			
ANR	676466	Identifier	cur		675993	0					
ANR	676467	AdditiveExpression	addr + idx		675993	1		+			
ANR	676468	Identifier	addr		675993	0					
ANR	676469	Identifier	idx		675993	1					
ANR	676470	ExpressionStatement	r_anal_op_fini ( & op )	4713:1:140730:140750	675993	71	True				
ANR	676471	CallExpression	r_anal_op_fini ( & op )		675993	0					
ANR	676472	Callee	r_anal_op_fini		675993	0					
ANR	676473	Identifier	r_anal_op_fini		675993	0					
ANR	676474	ArgumentList	& op		675993	1					
ANR	676475	Argument	& op		675993	0					
ANR	676476	UnaryOperationExpression	& op		675993	0					
ANR	676477	UnaryOperator	&		675993	0					
ANR	676478	Identifier	op		675993	1					
ANR	676479	IfStatement	"if ( r_anal_op ( core -> anal , & op , cur , buf + idx , size - idx , R_ANAL_OP_MASK_ESIL ) <= 0 || op . size <= 0 || ( op . type != R_ANAL_OP_TYPE_RET && op . type != R_ANAL_OP_TYPE_CRET ) )"		675993	72					
ANR	676480	Condition	"r_anal_op ( core -> anal , & op , cur , buf + idx , size - idx , R_ANAL_OP_MASK_ESIL ) <= 0 || op . size <= 0 || ( op . type != R_ANAL_OP_TYPE_RET && op . type != R_ANAL_OP_TYPE_CRET )"	4714:5:140757:140928	675993	0	True				
ANR	676481	OrExpression	"r_anal_op ( core -> anal , & op , cur , buf + idx , size - idx , R_ANAL_OP_MASK_ESIL ) <= 0 || op . size <= 0 || ( op . type != R_ANAL_OP_TYPE_RET && op . type != R_ANAL_OP_TYPE_CRET )"		675993	0		||			
ANR	676482	RelationalExpression	"r_anal_op ( core -> anal , & op , cur , buf + idx , size - idx , R_ANAL_OP_MASK_ESIL ) <= 0"		675993	0		<=			
ANR	676483	CallExpression	"r_anal_op ( core -> anal , & op , cur , buf + idx , size - idx , R_ANAL_OP_MASK_ESIL )"		675993	0					
ANR	676484	Callee	r_anal_op		675993	0					
ANR	676485	Identifier	r_anal_op		675993	0					
ANR	676486	ArgumentList	core -> anal		675993	1					
ANR	676487	Argument	core -> anal		675993	0					
ANR	676488	PtrMemberAccess	core -> anal		675993	0					
ANR	676489	Identifier	core		675993	0					
ANR	676490	Identifier	anal		675993	1					
ANR	676491	Argument	& op		675993	1					
ANR	676492	UnaryOperationExpression	& op		675993	0					
ANR	676493	UnaryOperator	&		675993	0					
ANR	676494	Identifier	op		675993	1					
ANR	676495	Argument	cur		675993	2					
ANR	676496	Identifier	cur		675993	0					
ANR	676497	Argument	buf + idx		675993	3					
ANR	676498	AdditiveExpression	buf + idx		675993	0		+			
ANR	676499	Identifier	buf		675993	0					
ANR	676500	Identifier	idx		675993	1					
ANR	676501	Argument	size - idx		675993	4					
ANR	676502	AdditiveExpression	size - idx		675993	0		-			
ANR	676503	Identifier	size		675993	0					
ANR	676504	Identifier	idx		675993	1					
ANR	676505	Argument	R_ANAL_OP_MASK_ESIL		675993	5					
ANR	676506	Identifier	R_ANAL_OP_MASK_ESIL		675993	0					
ANR	676507	PrimaryExpression	0		675993	1					
ANR	676508	OrExpression	op . size <= 0 || ( op . type != R_ANAL_OP_TYPE_RET && op . type != R_ANAL_OP_TYPE_CRET )		675993	1		||			
ANR	676509	RelationalExpression	op . size <= 0		675993	0		<=			
ANR	676510	MemberAccess	op . size		675993	0					
ANR	676511	Identifier	op		675993	0					
ANR	676512	Identifier	size		675993	1					
ANR	676513	PrimaryExpression	0		675993	1					
ANR	676514	AndExpression	op . type != R_ANAL_OP_TYPE_RET && op . type != R_ANAL_OP_TYPE_CRET		675993	1		&&			
ANR	676515	EqualityExpression	op . type != R_ANAL_OP_TYPE_RET		675993	0		!=			
ANR	676516	MemberAccess	op . type		675993	0					
ANR	676517	Identifier	op		675993	0					
ANR	676518	Identifier	type		675993	1					
ANR	676519	Identifier	R_ANAL_OP_TYPE_RET		675993	1					
ANR	676520	EqualityExpression	op . type != R_ANAL_OP_TYPE_CRET		675993	1		!=			
ANR	676521	MemberAccess	op . type		675993	0					
ANR	676522	Identifier	op		675993	0					
ANR	676523	Identifier	type		675993	1					
ANR	676524	Identifier	R_ANAL_OP_TYPE_CRET		675993	1					
ANR	676525	CompoundStatement		82:70:2227:2227	675993	1					
ANR	676526	GotoStatement	goto err_anal_op ;	4717:2:140935:140951	675993	0	True				
ANR	676527	Identifier	err_anal_op		675993	0					
ANR	676528	ExpressionStatement	"r_asm_set_pc ( core -> assembler , cur )"	4719:1:140957:140992	675993	73	True				
ANR	676529	CallExpression	"r_asm_set_pc ( core -> assembler , cur )"		675993	0					
ANR	676530	Callee	r_asm_set_pc		675993	0					
ANR	676531	Identifier	r_asm_set_pc		675993	0					
ANR	676532	ArgumentList	core -> assembler		675993	1					
ANR	676533	Argument	core -> assembler		675993	0					
ANR	676534	PtrMemberAccess	core -> assembler		675993	0					
ANR	676535	Identifier	core		675993	0					
ANR	676536	Identifier	assembler		675993	1					
ANR	676537	Argument	cur		675993	1					
ANR	676538	Identifier	cur		675993	0					
ANR	676539	ExpressionStatement	esilstr = R_STRBUF_SAFEGET ( & op . esil )	4721:1:140996:141033	675993	74	True				
ANR	676540	AssignmentExpression	esilstr = R_STRBUF_SAFEGET ( & op . esil )		675993	0		=			
ANR	676541	Identifier	esilstr		675993	0					
ANR	676542	CallExpression	R_STRBUF_SAFEGET ( & op . esil )		675993	1					
ANR	676543	Callee	R_STRBUF_SAFEGET		675993	0					
ANR	676544	Identifier	R_STRBUF_SAFEGET		675993	0					
ANR	676545	ArgumentList	& op . esil		675993	1					
ANR	676546	Argument	& op . esil		675993	0					
ANR	676547	UnaryOperationExpression	& op . esil		675993	0					
ANR	676548	UnaryOperator	&		675993	0					
ANR	676549	MemberAccess	op . esil		675993	1					
ANR	676550	Identifier	op		675993	0					
ANR	676551	Identifier	esil		675993	1					
ANR	676552	ExpressionStatement	"r_anal_esil_set_pc ( & esil_cpy , cur )"	4722:1:141036:141071	675993	75	True				
ANR	676553	CallExpression	"r_anal_esil_set_pc ( & esil_cpy , cur )"		675993	0					
ANR	676554	Callee	r_anal_esil_set_pc		675993	0					
ANR	676555	Identifier	r_anal_esil_set_pc		675993	0					
ANR	676556	ArgumentList	& esil_cpy		675993	1					
ANR	676557	Argument	& esil_cpy		675993	0					
ANR	676558	UnaryOperationExpression	& esil_cpy		675993	0					
ANR	676559	UnaryOperator	&		675993	0					
ANR	676560	Identifier	esil_cpy		675993	1					
ANR	676561	Argument	cur		675993	1					
ANR	676562	Identifier	cur		675993	0					
ANR	676563	IfStatement	if ( ! esilstr || ! * esilstr )		675993	76					
ANR	676564	Condition	! esilstr || ! * esilstr	4723:5:141078:141098	675993	0	True				
ANR	676565	OrExpression	! esilstr || ! * esilstr		675993	0		||			
ANR	676566	UnaryOperationExpression	! esilstr		675993	0					
ANR	676567	UnaryOperator	!		675993	0					
ANR	676568	Identifier	esilstr		675993	1					
ANR	676569	UnaryOperationExpression	! * esilstr		675993	1					
ANR	676570	UnaryOperator	!		675993	0					
ANR	676571	UnaryOperationExpression	* esilstr		675993	1					
ANR	676572	UnaryOperator	*		675993	0					
ANR	676573	Identifier	esilstr		675993	1					
ANR	676574	CompoundStatement		89:28:2397:2397	675993	1					
ANR	676575	GotoStatement	goto err_anal_op ;	4724:2:141105:141121	675993	0	True				
ANR	676576	Identifier	err_anal_op		675993	0					
ANR	676577	ExpressionStatement	"r_anal_esil_parse ( & esil_cpy , esilstr )"	4726:1:141127:141165	675993	77	True				
ANR	676578	CallExpression	"r_anal_esil_parse ( & esil_cpy , esilstr )"		675993	0					
ANR	676579	Callee	r_anal_esil_parse		675993	0					
ANR	676580	Identifier	r_anal_esil_parse		675993	0					
ANR	676581	ArgumentList	& esil_cpy		675993	1					
ANR	676582	Argument	& esil_cpy		675993	0					
ANR	676583	UnaryOperationExpression	& esil_cpy		675993	0					
ANR	676584	UnaryOperator	&		675993	0					
ANR	676585	Identifier	esil_cpy		675993	1					
ANR	676586	Argument	esilstr		675993	1					
ANR	676587	Identifier	esilstr		675993	0					
ANR	676588	ExpressionStatement	r_anal_esil_stack_free ( & esil_cpy )	4727:1:141168:141202	675993	78	True				
ANR	676589	CallExpression	r_anal_esil_stack_free ( & esil_cpy )		675993	0					
ANR	676590	Callee	r_anal_esil_stack_free		675993	0					
ANR	676591	Identifier	r_anal_esil_stack_free		675993	0					
ANR	676592	ArgumentList	& esil_cpy		675993	1					
ANR	676593	Argument	& esil_cpy		675993	0					
ANR	676594	UnaryOperationExpression	& esil_cpy		675993	0					
ANR	676595	UnaryOperator	&		675993	0					
ANR	676596	Identifier	esil_cpy		675993	1					
ANR	676597	ExpressionStatement	"memcpy ( esil , & esil_cpy , sizeof ( esil_cpy ) )"	4729:1:141206:141249	675993	79	True				
ANR	676598	CallExpression	"memcpy ( esil , & esil_cpy , sizeof ( esil_cpy ) )"		675993	0					
ANR	676599	Callee	memcpy		675993	0					
ANR	676600	Identifier	memcpy		675993	0					
ANR	676601	ArgumentList	esil		675993	1					
ANR	676602	Argument	esil		675993	0					
ANR	676603	Identifier	esil		675993	0					
ANR	676604	Argument	& esil_cpy		675993	1					
ANR	676605	UnaryOperationExpression	& esil_cpy		675993	0					
ANR	676606	UnaryOperator	&		675993	0					
ANR	676607	Identifier	esil_cpy		675993	1					
ANR	676608	Argument	sizeof ( esil_cpy )		675993	2					
ANR	676609	SizeofExpression	sizeof ( esil_cpy )		675993	0					
ANR	676610	Sizeof	sizeof		675993	0					
ANR	676611	SizeofOperand	esil_cpy		675993	1					
ANR	676612	Label	err_anal_op :	4731:1:141253:141264	675993	80	True				
ANR	676613	Identifier	err_anal_op		675993	0					
ANR	676614	ExpressionStatement	r_anal_op_fini ( & op )	4732:1:141267:141287	675993	81	True				
ANR	676615	CallExpression	r_anal_op_fini ( & op )		675993	0					
ANR	676616	Callee	r_anal_op_fini		675993	0					
ANR	676617	Identifier	r_anal_op_fini		675993	0					
ANR	676618	ArgumentList	& op		675993	1					
ANR	676619	Argument	& op		675993	0					
ANR	676620	UnaryOperationExpression	& op		675993	0					
ANR	676621	UnaryOperator	&		675993	0					
ANR	676622	Identifier	op		675993	1					
ANR	676623	ExpressionStatement	free ( buf )	4733:1:141290:141300	675993	82	True				
ANR	676624	CallExpression	free ( buf )		675993	0					
ANR	676625	Callee	free		675993	0					
ANR	676626	Identifier	free		675993	0					
ANR	676627	ArgumentList	buf		675993	1					
ANR	676628	Argument	buf		675993	0					
ANR	676629	Identifier	buf		675993	0					
ANR	676630	ReturnType	static void		675993	1					
ANR	676631	Identifier	getpcfromstack		675993	2					
ANR	676632	ParameterList	"RCore * core , RAnalEsil * esil"		675993	3					
ANR	676633	Parameter	RCore * core	4635:27:138673:138683	675993	0	True				
ANR	676634	ParameterType	RCore *		675993	0					
ANR	676635	Identifier	core		675993	1					
ANR	676636	Parameter	RAnalEsil * esil	4635:40:138686:138700	675993	1	True				
ANR	676637	ParameterType	RAnalEsil *		675993	0					
ANR	676638	Identifier	esil		675993	1					
ANR	676639	CFGEntryNode	ENTRY		675993		True				
ANR	676640	CFGExitNode	EXIT		675993		True				
ANR	676641	Symbol	core -> anal -> reg		675993						
ANR	676642	Symbol	r_anal_fcn_size		675993						
ANR	676643	Symbol	& op		675993						
ANR	676644	Symbol	strlen		675993						
ANR	676645	Symbol	strncmp		675993						
ANR	676646	Symbol	esil_cpy . cur		675993						
ANR	676647	Symbol	* tmp_esil_str		675993						
ANR	676648	Symbol	tmp_esil_str		675993						
ANR	676649	Symbol	tmp_esil_str_len		675993						
ANR	676650	Symbol	r_anal_op		675993						
ANR	676651	Symbol	& op . esil		675993						
ANR	676652	Symbol	NULL		675993						
ANR	676653	Symbol	* esilstr		675993						
ANR	676654	Symbol	R_ANAL_OP_TYPE_MOV		675993						
ANR	676655	Symbol	esil_cpy		675993						
ANR	676656	Symbol	core		675993						
ANR	676657	Symbol	R_REG_NAME_SP		675993						
ANR	676658	Symbol	size		675993						
ANR	676659	Symbol	r_reg_get_name		675993						
ANR	676660	Symbol	R_ANAL_OP_TYPE_CRET		675993						
ANR	676661	Symbol	R_ANAL_OP_TYPE_CMOV		675993						
ANR	676662	Symbol	idx		675993						
ANR	676663	Symbol	op . size		675993						
ANR	676664	Symbol	R_ANAL_OP_MASK_ESIL		675993						
ANR	676665	Symbol	cur		675993						
ANR	676666	Symbol	* core		675993						
ANR	676667	Symbol	core -> assembler		675993						
ANR	676668	Symbol	R_EMPTY		675993						
ANR	676669	Symbol	esilstr		675993						
ANR	676670	Symbol	core -> anal		675993						
ANR	676671	Symbol	* spname		675993						
ANR	676672	Symbol	fcn		675993						
ANR	676673	Symbol	core -> io		675993						
ANR	676674	Symbol	r_str_trim_head_tail		675993						
ANR	676675	Symbol	addr		675993						
ANR	676676	Symbol	* * core		675993						
ANR	676677	Symbol	R_ANAL_OP_TYPE_RET		675993						
ANR	676678	Symbol	op		675993						
ANR	676679	Symbol	malloc		675993						
ANR	676680	Symbol	op . type		675993						
ANR	676681	Symbol	R_STRBUF_SAFEGET		675993						
ANR	676682	Symbol	buf		675993						
ANR	676683	Symbol	spname		675993						
ANR	676684	Symbol	r_anal_get_fcn_in		675993						
ANR	676685	Symbol	* core -> anal		675993						
ANR	676686	Symbol	maxaddrlen		675993						
ANR	676687	Symbol	& esil_cpy		675993						
ANR	676688	Symbol	esil		675993						
ANR	676689	Symbol	* tmp_esil_str_len		675993						
ANR	676690	Function	canal_isThumb	4736:0:141305:141479							
ANR	676691	FunctionDef	canal_isThumb (RCore * core)		676690	0					
ANR	676692	CompoundStatement		4736:46:141351:141479	676690	0					
ANR	676693	IdentifierDeclStatement	"const char * asmarch = r_config_get ( core -> config , ""asm.arch"" ) ;"	4737:1:141354:141415	676690	0	True				
ANR	676694	IdentifierDecl	"* asmarch = r_config_get ( core -> config , ""asm.arch"" )"		676690	0					
ANR	676695	IdentifierDeclType	const char *		676690	0					
ANR	676696	Identifier	asmarch		676690	1					
ANR	676697	AssignmentExpression	"* asmarch = r_config_get ( core -> config , ""asm.arch"" )"		676690	2		=			
ANR	676698	Identifier	asmarch		676690	0					
ANR	676699	CallExpression	"r_config_get ( core -> config , ""asm.arch"" )"		676690	1					
ANR	676700	Callee	r_config_get		676690	0					
ANR	676701	Identifier	r_config_get		676690	0					
ANR	676702	ArgumentList	core -> config		676690	1					
ANR	676703	Argument	core -> config		676690	0					
ANR	676704	PtrMemberAccess	core -> config		676690	0					
ANR	676705	Identifier	core		676690	0					
ANR	676706	Identifier	config		676690	1					
ANR	676707	Argument	"""asm.arch"""		676690	1					
ANR	676708	PrimaryExpression	"""asm.arch"""		676690	0					
ANR	676709	ReturnStatement	"return ( ! strcmp ( asmarch , ""arm"" ) && core -> anal -> bits == 16 ) ;"	4738:1:141418:141477	676690	1	True				
ANR	676710	AndExpression	"! strcmp ( asmarch , ""arm"" ) && core -> anal -> bits == 16"		676690	0		&&			
ANR	676711	UnaryOperationExpression	"! strcmp ( asmarch , ""arm"" )"		676690	0					
ANR	676712	UnaryOperator	!		676690	0					
ANR	676713	CallExpression	"strcmp ( asmarch , ""arm"" )"		676690	1					
ANR	676714	Callee	strcmp		676690	0					
ANR	676715	Identifier	strcmp		676690	0					
ANR	676716	ArgumentList	asmarch		676690	1					
ANR	676717	Argument	asmarch		676690	0					
ANR	676718	Identifier	asmarch		676690	0					
ANR	676719	Argument	"""arm"""		676690	1					
ANR	676720	PrimaryExpression	"""arm"""		676690	0					
ANR	676721	EqualityExpression	core -> anal -> bits == 16		676690	1		==			
ANR	676722	PtrMemberAccess	core -> anal -> bits		676690	0					
ANR	676723	PtrMemberAccess	core -> anal		676690	0					
ANR	676724	Identifier	core		676690	0					
ANR	676725	Identifier	anal		676690	1					
ANR	676726	Identifier	bits		676690	1					
ANR	676727	PrimaryExpression	16		676690	1					
ANR	676728	ReturnType	static inline bool		676690	1					
ANR	676729	Identifier	canal_isThumb		676690	2					
ANR	676730	ParameterList	RCore * core		676690	3					
ANR	676731	Parameter	RCore * core	4736:33:141338:141348	676690	0	True				
ANR	676732	ParameterType	RCore *		676690	0					
ANR	676733	Identifier	core		676690	1					
ANR	676734	CFGEntryNode	ENTRY		676690		True				
ANR	676735	CFGExitNode	EXIT		676690		True				
ANR	676736	Symbol	core -> config		676690						
ANR	676737	Symbol	strcmp		676690						
ANR	676738	Symbol	core		676690						
ANR	676739	Symbol	core -> anal -> bits		676690						
ANR	676740	Symbol	* core -> anal		676690						
ANR	676741	Symbol	asmarch		676690						
ANR	676742	Symbol	* core		676690						
ANR	676743	Symbol	r_config_get		676690						
ANR	676744	Symbol	core -> anal		676690						
ANR	676745	Symbol	* * core		676690						
ANR	676746	Function	r_core_anal_esil	4741:0:141482:152877							
ANR	676747	FunctionDef	"r_core_anal_esil (RCore * core , const char * str , const char * target)"		676746	0					
ANR	676748	CompoundStatement		4741:78:141560:152877	676746	0					
ANR	676749	IdentifierDeclStatement	"bool cfg_anal_strings = r_config_get_i ( core -> config , ""anal.strings"" ) ;"	4742:1:141563:141632	676746	0	True				
ANR	676750	IdentifierDecl	"cfg_anal_strings = r_config_get_i ( core -> config , ""anal.strings"" )"		676746	0					
ANR	676751	IdentifierDeclType	bool		676746	0					
ANR	676752	Identifier	cfg_anal_strings		676746	1					
ANR	676753	AssignmentExpression	"cfg_anal_strings = r_config_get_i ( core -> config , ""anal.strings"" )"		676746	2		=			
ANR	676754	Identifier	cfg_anal_strings		676746	0					
ANR	676755	CallExpression	"r_config_get_i ( core -> config , ""anal.strings"" )"		676746	1					
ANR	676756	Callee	r_config_get_i		676746	0					
ANR	676757	Identifier	r_config_get_i		676746	0					
ANR	676758	ArgumentList	core -> config		676746	1					
ANR	676759	Argument	core -> config		676746	0					
ANR	676760	PtrMemberAccess	core -> config		676746	0					
ANR	676761	Identifier	core		676746	0					
ANR	676762	Identifier	config		676746	1					
ANR	676763	Argument	"""anal.strings"""		676746	1					
ANR	676764	PrimaryExpression	"""anal.strings"""		676746	0					
ANR	676765	IdentifierDeclStatement	"bool emu_lazy = r_config_get_i ( core -> config , ""emu.lazy"" ) ;"	4743:1:141635:141692	676746	1	True				
ANR	676766	IdentifierDecl	"emu_lazy = r_config_get_i ( core -> config , ""emu.lazy"" )"		676746	0					
ANR	676767	IdentifierDeclType	bool		676746	0					
ANR	676768	Identifier	emu_lazy		676746	1					
ANR	676769	AssignmentExpression	"emu_lazy = r_config_get_i ( core -> config , ""emu.lazy"" )"		676746	2		=			
ANR	676770	Identifier	emu_lazy		676746	0					
ANR	676771	CallExpression	"r_config_get_i ( core -> config , ""emu.lazy"" )"		676746	1					
ANR	676772	Callee	r_config_get_i		676746	0					
ANR	676773	Identifier	r_config_get_i		676746	0					
ANR	676774	ArgumentList	core -> config		676746	1					
ANR	676775	Argument	core -> config		676746	0					
ANR	676776	PtrMemberAccess	core -> config		676746	0					
ANR	676777	Identifier	core		676746	0					
ANR	676778	Identifier	config		676746	1					
ANR	676779	Argument	"""emu.lazy"""		676746	1					
ANR	676780	PrimaryExpression	"""emu.lazy"""		676746	0					
ANR	676781	IdentifierDeclStatement	"bool gp_fixed = r_config_get_i ( core -> config , ""anal.gpfixed"" ) ;"	4744:1:141695:141756	676746	2	True				
ANR	676782	IdentifierDecl	"gp_fixed = r_config_get_i ( core -> config , ""anal.gpfixed"" )"		676746	0					
ANR	676783	IdentifierDeclType	bool		676746	0					
ANR	676784	Identifier	gp_fixed		676746	1					
ANR	676785	AssignmentExpression	"gp_fixed = r_config_get_i ( core -> config , ""anal.gpfixed"" )"		676746	2		=			
ANR	676786	Identifier	gp_fixed		676746	0					
ANR	676787	CallExpression	"r_config_get_i ( core -> config , ""anal.gpfixed"" )"		676746	1					
ANR	676788	Callee	r_config_get_i		676746	0					
ANR	676789	Identifier	r_config_get_i		676746	0					
ANR	676790	ArgumentList	core -> config		676746	1					
ANR	676791	Argument	core -> config		676746	0					
ANR	676792	PtrMemberAccess	core -> config		676746	0					
ANR	676793	Identifier	core		676746	0					
ANR	676794	Identifier	config		676746	1					
ANR	676795	Argument	"""anal.gpfixed"""		676746	1					
ANR	676796	PrimaryExpression	"""anal.gpfixed"""		676746	0					
ANR	676797	IdentifierDeclStatement	RAnalEsil * ESIL = core -> anal -> esil ;	4745:1:141759:141793	676746	3	True				
ANR	676798	IdentifierDecl	* ESIL = core -> anal -> esil		676746	0					
ANR	676799	IdentifierDeclType	RAnalEsil *		676746	0					
ANR	676800	Identifier	ESIL		676746	1					
ANR	676801	AssignmentExpression	* ESIL = core -> anal -> esil		676746	2		=			
ANR	676802	Identifier	ESIL		676746	0					
ANR	676803	PtrMemberAccess	core -> anal -> esil		676746	1					
ANR	676804	PtrMemberAccess	core -> anal		676746	0					
ANR	676805	Identifier	core		676746	0					
ANR	676806	Identifier	anal		676746	1					
ANR	676807	Identifier	esil		676746	1					
ANR	676808	Statement	ut64	4746:1:141796:141799	676746	4	True				
ANR	676809	Statement	refptr	4746:6:141801:141806	676746	5	True				
ANR	676810	Statement	=	4746:13:141808:141808	676746	6	True				
ANR	676811	Statement	0L	4746:15:141810:141811	676746	7	True				
ANR	676812	ExpressionStatement	L	4746:17:141812:141813	676746	8	True				
ANR	676813	Identifier	L		676746	0					
ANR	676814	IdentifierDeclStatement	const char * pcname ;	4747:1:141816:141834	676746	9	True				
ANR	676815	IdentifierDecl	* pcname		676746	0					
ANR	676816	IdentifierDeclType	const char *		676746	0					
ANR	676817	Identifier	pcname		676746	1					
ANR	676818	IdentifierDeclStatement	RAnalOp op = R_EMPTY ;	4748:1:141837:141857	676746	10	True				
ANR	676819	IdentifierDecl	op = R_EMPTY		676746	0					
ANR	676820	IdentifierDeclType	RAnalOp		676746	0					
ANR	676821	Identifier	op		676746	1					
ANR	676822	AssignmentExpression	op = R_EMPTY		676746	2		=			
ANR	676823	Identifier	R_EMPTY		676746	0					
ANR	676824	Identifier	R_EMPTY		676746	1					
ANR	676825	IdentifierDeclStatement	ut8 * buf = NULL ;	4749:1:141860:141875	676746	11	True				
ANR	676826	IdentifierDecl	* buf = NULL		676746	0					
ANR	676827	IdentifierDeclType	ut8 *		676746	0					
ANR	676828	Identifier	buf		676746	1					
ANR	676829	AssignmentExpression	* buf = NULL		676746	2		=			
ANR	676830	Identifier	NULL		676746	0					
ANR	676831	Identifier	NULL		676746	1					
ANR	676832	IdentifierDeclStatement	bool end_address_set = false ;	4750:1:141878:141906	676746	12	True				
ANR	676833	IdentifierDecl	end_address_set = false		676746	0					
ANR	676834	IdentifierDeclType	bool		676746	0					
ANR	676835	Identifier	end_address_set		676746	1					
ANR	676836	AssignmentExpression	end_address_set = false		676746	2		=			
ANR	676837	Identifier	false		676746	0					
ANR	676838	Identifier	false		676746	1					
ANR	676839	IdentifierDeclStatement	"int i , iend ;"	4751:1:141909:141920	676746	13	True				
ANR	676840	IdentifierDecl	i		676746	0					
ANR	676841	IdentifierDeclType	int		676746	0					
ANR	676842	Identifier	i		676746	1					
ANR	676843	IdentifierDecl	iend		676746	1					
ANR	676844	IdentifierDeclType	int		676746	0					
ANR	676845	Identifier	iend		676746	1					
ANR	676846	IdentifierDeclStatement	int minopsize = 4 ;	4752:1:141923:141940	676746	14	True				
ANR	676847	IdentifierDecl	minopsize = 4		676746	0					
ANR	676848	IdentifierDeclType	int		676746	0					
ANR	676849	Identifier	minopsize		676746	1					
ANR	676850	AssignmentExpression	minopsize = 4		676746	2		=			
ANR	676851	Identifier	minopsize		676746	0					
ANR	676852	PrimaryExpression	4		676746	1					
ANR	676853	IdentifierDeclStatement	ut64 addr = core -> offset ;	4753:1:141984:142008	676746	15	True				
ANR	676854	IdentifierDecl	addr = core -> offset		676746	0					
ANR	676855	IdentifierDeclType	ut64		676746	0					
ANR	676856	Identifier	addr		676746	1					
ANR	676857	AssignmentExpression	addr = core -> offset		676746	2		=			
ANR	676858	Identifier	addr		676746	0					
ANR	676859	PtrMemberAccess	core -> offset		676746	1					
ANR	676860	Identifier	core		676746	0					
ANR	676861	Identifier	offset		676746	1					
ANR	676862	Statement	ut64	4754:1:142011:142014	676746	16	True				
ANR	676863	Statement	end	4754:6:142016:142018	676746	17	True				
ANR	676864	Statement	=	4754:10:142020:142020	676746	18	True				
ANR	676865	Statement	0L	4754:12:142022:142023	676746	19	True				
ANR	676866	ExpressionStatement	L	4754:14:142024:142025	676746	20	True				
ANR	676867	Identifier	L		676746	0					
ANR	676868	IdentifierDeclStatement	ut64 cur ;	4755:1:142028:142036	676746	21	True				
ANR	676869	IdentifierDecl	cur		676746	0					
ANR	676870	IdentifierDeclType	ut64		676746	0					
ANR	676871	Identifier	cur		676746	1					
ANR	676872	ExpressionStatement	mycore = core	4757:1:142040:142053	676746	22	True				
ANR	676873	AssignmentExpression	mycore = core		676746	0		=			
ANR	676874	Identifier	mycore		676746	0					
ANR	676875	Identifier	core		676746	1					
ANR	676876	IfStatement	"if ( ! strcmp ( str , ""?"" ) )"		676746	23					
ANR	676877	Condition	"! strcmp ( str , ""?"" )"	4758:5:142060:142077	676746	0	True				
ANR	676878	UnaryOperationExpression	"! strcmp ( str , ""?"" )"		676746	0					
ANR	676879	UnaryOperator	!		676746	0					
ANR	676880	CallExpression	"strcmp ( str , ""?"" )"		676746	1					
ANR	676881	Callee	strcmp		676746	0					
ANR	676882	Identifier	strcmp		676746	0					
ANR	676883	ArgumentList	str		676746	1					
ANR	676884	Argument	str		676746	0					
ANR	676885	Identifier	str		676746	0					
ANR	676886	Argument	"""?"""		676746	1					
ANR	676887	PrimaryExpression	"""?"""		676746	0					
ANR	676888	CompoundStatement		18:25:519:519	676746	1					
ANR	676889	ExpressionStatement	"eprintf ( ""Usage: aae[f] [len] [addr] - analyze refs in function, section or len bytes with esil\\n"" )"	4759:2:142084:142183	676746	0	True				
ANR	676890	CallExpression	"eprintf ( ""Usage: aae[f] [len] [addr] - analyze refs in function, section or len bytes with esil\\n"" )"		676746	0					
ANR	676891	Callee	eprintf		676746	0					
ANR	676892	Identifier	eprintf		676746	0					
ANR	676893	ArgumentList	"""Usage: aae[f] [len] [addr] - analyze refs in function, section or len bytes with esil\\n"""		676746	1					
ANR	676894	Argument	"""Usage: aae[f] [len] [addr] - analyze refs in function, section or len bytes with esil\\n"""		676746	0					
ANR	676895	PrimaryExpression	"""Usage: aae[f] [len] [addr] - analyze refs in function, section or len bytes with esil\\n"""		676746	0					
ANR	676896	ExpressionStatement	"eprintf ( ""  aae $SS @ $S             - analyze the whole section\\n"" )"	4760:2:142187:142255	676746	1	True				
ANR	676897	CallExpression	"eprintf ( ""  aae $SS @ $S             - analyze the whole section\\n"" )"		676746	0					
ANR	676898	Callee	eprintf		676746	0					
ANR	676899	Identifier	eprintf		676746	0					
ANR	676900	ArgumentList	"""  aae $SS @ $S             - analyze the whole section\\n"""		676746	1					
ANR	676901	Argument	"""  aae $SS @ $S             - analyze the whole section\\n"""		676746	0					
ANR	676902	PrimaryExpression	"""  aae $SS @ $S             - analyze the whole section\\n"""		676746	0					
ANR	676903	ExpressionStatement	"eprintf ( ""  aae $SS str.Hello @ $S   - find references for str.Hellow\\n"" )"	4761:2:142259:142332	676746	2	True				
ANR	676904	CallExpression	"eprintf ( ""  aae $SS str.Hello @ $S   - find references for str.Hellow\\n"" )"		676746	0					
ANR	676905	Callee	eprintf		676746	0					
ANR	676906	Identifier	eprintf		676746	0					
ANR	676907	ArgumentList	"""  aae $SS str.Hello @ $S   - find references for str.Hellow\\n"""		676746	1					
ANR	676908	Argument	"""  aae $SS str.Hello @ $S   - find references for str.Hellow\\n"""		676746	0					
ANR	676909	PrimaryExpression	"""  aae $SS str.Hello @ $S   - find references for str.Hellow\\n"""		676746	0					
ANR	676910	ReturnStatement	return ;	4762:2:142336:142342	676746	3	True				
ANR	676911	Statement	define	4764:1:142348:142353	676746	24	True				
ANR	676912	Statement	CHECKREF	4764:8:142355:142362	676746	25	True				
ANR	676913	Statement	(	4764:16:142363:142363	676746	26	True				
ANR	676914	Statement	x	4764:17:142364:142364	676746	27	True				
ANR	676915	Statement	)	4764:18:142365:142365	676746	28	True				
ANR	676916	Statement	(	4764:20:142367:142367	676746	29	True				
ANR	676917	Statement	(	4764:21:142368:142368	676746	30	True				
ANR	676918	Statement	refptr	4764:22:142369:142374	676746	31	True				
ANR	676919	Statement	&&	4764:29:142376:142377	676746	32	True				
ANR	676920	Statement	(	4764:32:142379:142379	676746	33	True				
ANR	676921	Statement	x	4764:33:142380:142380	676746	34	True				
ANR	676922	Statement	)	4764:34:142381:142381	676746	35	True				
ANR	676923	Statement	==	4764:36:142383:142384	676746	36	True				
ANR	676924	Statement	refptr	4764:39:142386:142391	676746	37	True				
ANR	676925	Statement	)	4764:45:142392:142392	676746	38	True				
ANR	676926	Statement	||	4764:47:142394:142395	676746	39	True				
ANR	676927	Statement	!	4764:50:142397:142397	676746	40	True				
ANR	676928	Statement	refptr	4764:51:142398:142403	676746	41	True				
ANR	676929	Statement	)	4764:57:142404:142404	676746	42	True				
ANR	676930	IfStatement	if ( target )		676746	43					
ANR	676931	Condition	target	4765:5:142411:142416	676746	0	True				
ANR	676932	Identifier	target		676746	0					
ANR	676933	CompoundStatement		26:2:862:903	676746	1					
ANR	676934	IdentifierDeclStatement	const char * expr = r_str_trim_ro ( target ) ;	4766:2:142423:142464	676746	0	True				
ANR	676935	IdentifierDecl	* expr = r_str_trim_ro ( target )		676746	0					
ANR	676936	IdentifierDeclType	const char *		676746	0					
ANR	676937	Identifier	expr		676746	1					
ANR	676938	AssignmentExpression	* expr = r_str_trim_ro ( target )		676746	2		=			
ANR	676939	Identifier	expr		676746	0					
ANR	676940	CallExpression	r_str_trim_ro ( target )		676746	1					
ANR	676941	Callee	r_str_trim_ro		676746	0					
ANR	676942	Identifier	r_str_trim_ro		676746	0					
ANR	676943	ArgumentList	target		676746	1					
ANR	676944	Argument	target		676746	0					
ANR	676945	Identifier	target		676746	0					
ANR	676946	IfStatement	if ( * expr )		676746	1					
ANR	676947	Condition	* expr	4767:6:142472:142476	676746	0	True				
ANR	676948	UnaryOperationExpression	* expr		676746	0					
ANR	676949	UnaryOperator	*		676746	0					
ANR	676950	Identifier	expr		676746	1					
ANR	676951	CompoundStatement		27:13:918:918	676746	1					
ANR	676952	ExpressionStatement	"refptr = ntarget = r_num_math ( core -> num , expr )"	4768:3:142484:142531	676746	0	True				
ANR	676953	AssignmentExpression	"refptr = ntarget = r_num_math ( core -> num , expr )"		676746	0		=			
ANR	676954	Identifier	refptr		676746	0					
ANR	676955	AssignmentExpression	"ntarget = r_num_math ( core -> num , expr )"		676746	1		=			
ANR	676956	Identifier	ntarget		676746	0					
ANR	676957	CallExpression	"r_num_math ( core -> num , expr )"		676746	1					
ANR	676958	Callee	r_num_math		676746	0					
ANR	676959	Identifier	r_num_math		676746	0					
ANR	676960	ArgumentList	core -> num		676746	1					
ANR	676961	Argument	core -> num		676746	0					
ANR	676962	PtrMemberAccess	core -> num		676746	0					
ANR	676963	Identifier	core		676746	0					
ANR	676964	Identifier	num		676746	1					
ANR	676965	Argument	expr		676746	1					
ANR	676966	Identifier	expr		676746	0					
ANR	676967	IfStatement	if ( ! refptr )		676746	1					
ANR	676968	Condition	! refptr	4769:7:142540:142546	676746	0	True				
ANR	676969	UnaryOperationExpression	! refptr		676746	0					
ANR	676970	UnaryOperator	!		676746	0					
ANR	676971	Identifier	refptr		676746	1					
ANR	676972	CompoundStatement		29:16:988:988	676746	1					
ANR	676973	ExpressionStatement	ntarget = refptr = addr	4770:4:142555:142578	676746	0	True				
ANR	676974	AssignmentExpression	ntarget = refptr = addr		676746	0		=			
ANR	676975	Identifier	ntarget		676746	0					
ANR	676976	AssignmentExpression	refptr = addr		676746	1		=			
ANR	676977	Identifier	refptr		676746	0					
ANR	676978	Identifier	addr		676746	1					
ANR	676979	ElseStatement	else		676746	0					
ANR	676980	CompoundStatement		32:9:1033:1033	676746	0					
ANR	676981	ExpressionStatement	ntarget = UT64_MAX	4773:3:142599:142617	676746	0	True				
ANR	676982	AssignmentExpression	ntarget = UT64_MAX		676746	0		=			
ANR	676983	Identifier	ntarget		676746	0					
ANR	676984	Identifier	UT64_MAX		676746	1					
ANR	676985	Statement	refptr	4774:3:142622:142627	676746	1	True				
ANR	676986	Statement	=	4774:10:142629:142629	676746	2	True				
ANR	676987	Statement	0L	4774:12:142631:142632	676746	3	True				
ANR	676988	ExpressionStatement	L	4774:14:142633:142634	676746	4	True				
ANR	676989	Identifier	L		676746	0					
ANR	676990	ElseStatement	else		676746	0					
ANR	676991	CompoundStatement		36:8:1087:1087	676746	0					
ANR	676992	ExpressionStatement	ntarget = UT64_MAX	4777:2:142652:142670	676746	0	True				
ANR	676993	AssignmentExpression	ntarget = UT64_MAX		676746	0		=			
ANR	676994	Identifier	ntarget		676746	0					
ANR	676995	Identifier	UT64_MAX		676746	1					
ANR	676996	Statement	refptr	4778:2:142674:142679	676746	1	True				
ANR	676997	Statement	=	4778:9:142681:142681	676746	2	True				
ANR	676998	Statement	0L	4778:11:142683:142684	676746	3	True				
ANR	676999	ExpressionStatement	L	4778:13:142685:142686	676746	4	True				
ANR	677000	Identifier	L		676746	0					
ANR	677001	IfStatement	"if ( ! strcmp ( str , ""f"" ) )"		676746	44					
ANR	677002	Condition	"! strcmp ( str , ""f"" )"	4780:5:142696:142713	676746	0	True				
ANR	677003	UnaryOperationExpression	"! strcmp ( str , ""f"" )"		676746	0					
ANR	677004	UnaryOperator	!		676746	0					
ANR	677005	CallExpression	"strcmp ( str , ""f"" )"		676746	1					
ANR	677006	Callee	strcmp		676746	0					
ANR	677007	Identifier	strcmp		676746	0					
ANR	677008	ArgumentList	str		676746	1					
ANR	677009	Argument	str		676746	0					
ANR	677010	Identifier	str		676746	0					
ANR	677011	Argument	"""f"""		676746	1					
ANR	677012	PrimaryExpression	"""f"""		676746	0					
ANR	677013	CompoundStatement		41:2:1159:1227	676746	1					
ANR	677014	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 ) ;"	4781:2:142720:142788	676746	0	True				
ANR	677015	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		676746	0					
ANR	677016	IdentifierDeclType	RAnalFunction *		676746	0					
ANR	677017	Identifier	fcn		676746	1					
ANR	677018	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		676746	2		=			
ANR	677019	Identifier	fcn		676746	0					
ANR	677020	CallExpression	"r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		676746	1					
ANR	677021	Callee	r_anal_get_fcn_in		676746	0					
ANR	677022	Identifier	r_anal_get_fcn_in		676746	0					
ANR	677023	ArgumentList	core -> anal		676746	1					
ANR	677024	Argument	core -> anal		676746	0					
ANR	677025	PtrMemberAccess	core -> anal		676746	0					
ANR	677026	Identifier	core		676746	0					
ANR	677027	Identifier	anal		676746	1					
ANR	677028	Argument	core -> offset		676746	1					
ANR	677029	PtrMemberAccess	core -> offset		676746	0					
ANR	677030	Identifier	core		676746	0					
ANR	677031	Identifier	offset		676746	1					
ANR	677032	Argument	0		676746	2					
ANR	677033	PrimaryExpression	0		676746	0					
ANR	677034	IfStatement	if ( fcn )		676746	1					
ANR	677035	Condition	fcn	4782:6:142796:142798	676746	0	True				
ANR	677036	Identifier	fcn		676746	0					
ANR	677037	CompoundStatement		42:11:1240:1240	676746	1					
ANR	677038	ExpressionStatement	addr = fcn -> addr	4783:3:142806:142822	676746	0	True				
ANR	677039	AssignmentExpression	addr = fcn -> addr		676746	0		=			
ANR	677040	Identifier	addr		676746	0					
ANR	677041	PtrMemberAccess	fcn -> addr		676746	1					
ANR	677042	Identifier	fcn		676746	0					
ANR	677043	Identifier	addr		676746	1					
ANR	677044	ExpressionStatement	end = fcn -> addr + r_anal_fcn_size ( fcn )	4784:3:142827:142866	676746	1	True				
ANR	677045	AssignmentExpression	end = fcn -> addr + r_anal_fcn_size ( fcn )		676746	0		=			
ANR	677046	Identifier	end		676746	0					
ANR	677047	AdditiveExpression	fcn -> addr + r_anal_fcn_size ( fcn )		676746	1		+			
ANR	677048	PtrMemberAccess	fcn -> addr		676746	0					
ANR	677049	Identifier	fcn		676746	0					
ANR	677050	Identifier	addr		676746	1					
ANR	677051	CallExpression	r_anal_fcn_size ( fcn )		676746	1					
ANR	677052	Callee	r_anal_fcn_size		676746	0					
ANR	677053	Identifier	r_anal_fcn_size		676746	0					
ANR	677054	ArgumentList	fcn		676746	1					
ANR	677055	Argument	fcn		676746	0					
ANR	677056	Identifier	fcn		676746	0					
ANR	677057	ExpressionStatement	end_address_set = true	4785:3:142871:142893	676746	2	True				
ANR	677058	AssignmentExpression	end_address_set = true		676746	0		=			
ANR	677059	Identifier	end_address_set		676746	0					
ANR	677060	Identifier	true		676746	1					
ANR	677061	IfStatement	if ( ! end_address_set )		676746	45					
ANR	677062	Condition	! end_address_set	4789:5:142908:142923	676746	0	True				
ANR	677063	UnaryOperationExpression	! end_address_set		676746	0					
ANR	677064	UnaryOperator	!		676746	0					
ANR	677065	Identifier	end_address_set		676746	1					
ANR	677066	CompoundStatement		49:23:1365:1365	676746	1					
ANR	677067	IfStatement	if ( str [ 0 ] == ' ' )		676746	0					
ANR	677068	Condition	str [ 0 ] == ' '	4790:6:142934:142946	676746	0	True				
ANR	677069	EqualityExpression	str [ 0 ] == ' '		676746	0		==			
ANR	677070	ArrayIndexing	str [ 0 ]		676746	0					
ANR	677071	Identifier	str		676746	0					
ANR	677072	PrimaryExpression	0		676746	1					
ANR	677073	PrimaryExpression	' '		676746	1					
ANR	677074	CompoundStatement		50:21:1388:1388	676746	1					
ANR	677075	ExpressionStatement	"end = addr + r_num_math ( core -> num , str + 1 )"	4791:3:142954:142998	676746	0	True				
ANR	677076	AssignmentExpression	"end = addr + r_num_math ( core -> num , str + 1 )"		676746	0		=			
ANR	677077	Identifier	end		676746	0					
ANR	677078	AdditiveExpression	"addr + r_num_math ( core -> num , str + 1 )"		676746	1		+			
ANR	677079	Identifier	addr		676746	0					
ANR	677080	CallExpression	"r_num_math ( core -> num , str + 1 )"		676746	1					
ANR	677081	Callee	r_num_math		676746	0					
ANR	677082	Identifier	r_num_math		676746	0					
ANR	677083	ArgumentList	core -> num		676746	1					
ANR	677084	Argument	core -> num		676746	0					
ANR	677085	PtrMemberAccess	core -> num		676746	0					
ANR	677086	Identifier	core		676746	0					
ANR	677087	Identifier	num		676746	1					
ANR	677088	Argument	str + 1		676746	1					
ANR	677089	AdditiveExpression	str + 1		676746	0		+			
ANR	677090	Identifier	str		676746	0					
ANR	677091	PrimaryExpression	1		676746	1					
ANR	677092	ElseStatement	else		676746	0					
ANR	677093	CompoundStatement		53:3:1453:1496	676746	0					
ANR	677094	IdentifierDeclStatement	"RIOMap * map = r_io_map_get ( core -> io , addr ) ;"	4793:3:143014:143057	676746	0	True				
ANR	677095	IdentifierDecl	"* map = r_io_map_get ( core -> io , addr )"		676746	0					
ANR	677096	IdentifierDeclType	RIOMap *		676746	0					
ANR	677097	Identifier	map		676746	1					
ANR	677098	AssignmentExpression	"* map = r_io_map_get ( core -> io , addr )"		676746	2		=			
ANR	677099	Identifier	map		676746	0					
ANR	677100	CallExpression	"r_io_map_get ( core -> io , addr )"		676746	1					
ANR	677101	Callee	r_io_map_get		676746	0					
ANR	677102	Identifier	r_io_map_get		676746	0					
ANR	677103	ArgumentList	core -> io		676746	1					
ANR	677104	Argument	core -> io		676746	0					
ANR	677105	PtrMemberAccess	core -> io		676746	0					
ANR	677106	Identifier	core		676746	0					
ANR	677107	Identifier	io		676746	1					
ANR	677108	Argument	addr		676746	1					
ANR	677109	Identifier	addr		676746	0					
ANR	677110	IfStatement	if ( map )		676746	1					
ANR	677111	Condition	map	4794:7:143066:143068	676746	0	True				
ANR	677112	Identifier	map		676746	0					
ANR	677113	CompoundStatement		54:12:1510:1510	676746	1					
ANR	677114	ExpressionStatement	end = map -> itv . addr + map -> itv . size	4795:4:143077:143112	676746	0	True				
ANR	677115	AssignmentExpression	end = map -> itv . addr + map -> itv . size		676746	0		=			
ANR	677116	Identifier	end		676746	0					
ANR	677117	AdditiveExpression	map -> itv . addr + map -> itv . size		676746	1		+			
ANR	677118	MemberAccess	map -> itv . addr		676746	0					
ANR	677119	PtrMemberAccess	map -> itv		676746	0					
ANR	677120	Identifier	map		676746	0					
ANR	677121	Identifier	itv		676746	1					
ANR	677122	Identifier	addr		676746	1					
ANR	677123	MemberAccess	map -> itv . size		676746	1					
ANR	677124	PtrMemberAccess	map -> itv		676746	0					
ANR	677125	Identifier	map		676746	0					
ANR	677126	Identifier	itv		676746	1					
ANR	677127	Identifier	size		676746	1					
ANR	677128	ElseStatement	else		676746	0					
ANR	677129	CompoundStatement		56:10:1563:1563	676746	0					
ANR	677130	ExpressionStatement	end = addr + core -> blocksize	4797:4:143130:143158	676746	0	True				
ANR	677131	AssignmentExpression	end = addr + core -> blocksize		676746	0		=			
ANR	677132	Identifier	end		676746	0					
ANR	677133	AdditiveExpression	addr + core -> blocksize		676746	1		+			
ANR	677134	Identifier	addr		676746	0					
ANR	677135	PtrMemberAccess	core -> blocksize		676746	1					
ANR	677136	Identifier	core		676746	0					
ANR	677137	Identifier	blocksize		676746	1					
ANR	677138	ExpressionStatement	iend = end - addr	4802:1:143174:143191	676746	46	True				
ANR	677139	AssignmentExpression	iend = end - addr		676746	0		=			
ANR	677140	Identifier	iend		676746	0					
ANR	677141	AdditiveExpression	end - addr		676746	1		-			
ANR	677142	Identifier	end		676746	0					
ANR	677143	Identifier	addr		676746	1					
ANR	677144	IfStatement	if ( iend < 0 )		676746	47					
ANR	677145	Condition	iend < 0	4803:5:143198:143205	676746	0	True				
ANR	677146	RelationalExpression	iend < 0		676746	0		<			
ANR	677147	Identifier	iend		676746	0					
ANR	677148	PrimaryExpression	0		676746	1					
ANR	677149	CompoundStatement		63:15:1647:1647	676746	1					
ANR	677150	ReturnStatement	return ;	4804:2:143212:143218	676746	0	True				
ANR	677151	ExpressionStatement	buf = malloc ( iend + 2 )	4806:1:143224:143247	676746	48	True				
ANR	677152	AssignmentExpression	buf = malloc ( iend + 2 )		676746	0		=			
ANR	677153	Identifier	buf		676746	0					
ANR	677154	CallExpression	malloc ( iend + 2 )		676746	1					
ANR	677155	Callee	malloc		676746	0					
ANR	677156	Identifier	malloc		676746	0					
ANR	677157	ArgumentList	iend + 2		676746	1					
ANR	677158	Argument	iend + 2		676746	0					
ANR	677159	AdditiveExpression	iend + 2		676746	0		+			
ANR	677160	Identifier	iend		676746	0					
ANR	677161	PrimaryExpression	2		676746	1					
ANR	677162	IfStatement	if ( ! buf )		676746	49					
ANR	677163	Condition	! buf	4807:5:143254:143257	676746	0	True				
ANR	677164	UnaryOperationExpression	! buf		676746	0					
ANR	677165	UnaryOperator	!		676746	0					
ANR	677166	Identifier	buf		676746	1					
ANR	677167	CompoundStatement		67:11:1699:1699	676746	1					
ANR	677168	ExpressionStatement	"perror ( ""malloc"" )"	4808:2:143264:143281	676746	0	True				
ANR	677169	CallExpression	"perror ( ""malloc"" )"		676746	0					
ANR	677170	Callee	perror		676746	0					
ANR	677171	Identifier	perror		676746	0					
ANR	677172	ArgumentList	"""malloc"""		676746	1					
ANR	677173	Argument	"""malloc"""		676746	0					
ANR	677174	PrimaryExpression	"""malloc"""		676746	0					
ANR	677175	ReturnStatement	return ;	4809:2:143285:143291	676746	1	True				
ANR	677176	ExpressionStatement	esilbreak_last_read = UT64_MAX	4811:1:143297:143327	676746	50	True				
ANR	677177	AssignmentExpression	esilbreak_last_read = UT64_MAX		676746	0		=			
ANR	677178	Identifier	esilbreak_last_read		676746	0					
ANR	677179	Identifier	UT64_MAX		676746	1					
ANR	677180	ExpressionStatement	"r_io_read_at ( core -> io , addr , buf , iend + 1 )"	4812:1:143330:143374	676746	51	True				
ANR	677181	CallExpression	"r_io_read_at ( core -> io , addr , buf , iend + 1 )"		676746	0					
ANR	677182	Callee	r_io_read_at		676746	0					
ANR	677183	Identifier	r_io_read_at		676746	0					
ANR	677184	ArgumentList	core -> io		676746	1					
ANR	677185	Argument	core -> io		676746	0					
ANR	677186	PtrMemberAccess	core -> io		676746	0					
ANR	677187	Identifier	core		676746	0					
ANR	677188	Identifier	io		676746	1					
ANR	677189	Argument	addr		676746	1					
ANR	677190	Identifier	addr		676746	0					
ANR	677191	Argument	buf		676746	2					
ANR	677192	Identifier	buf		676746	0					
ANR	677193	Argument	iend + 1		676746	3					
ANR	677194	AdditiveExpression	iend + 1		676746	0		+			
ANR	677195	Identifier	iend		676746	0					
ANR	677196	PrimaryExpression	1		676746	1					
ANR	677197	IfStatement	if ( ! ESIL )		676746	52					
ANR	677198	Condition	! ESIL	4813:5:143381:143385	676746	0	True				
ANR	677199	UnaryOperationExpression	! ESIL		676746	0					
ANR	677200	UnaryOperator	!		676746	0					
ANR	677201	Identifier	ESIL		676746	1					
ANR	677202	CompoundStatement		73:12:1827:1827	676746	1					
ANR	677203	ExpressionStatement	"r_core_cmd0 ( core , ""aei"" )"	4814:2:143392:143417	676746	0	True				
ANR	677204	CallExpression	"r_core_cmd0 ( core , ""aei"" )"		676746	0					
ANR	677205	Callee	r_core_cmd0		676746	0					
ANR	677206	Identifier	r_core_cmd0		676746	0					
ANR	677207	ArgumentList	core		676746	1					
ANR	677208	Argument	core		676746	0					
ANR	677209	Identifier	core		676746	0					
ANR	677210	Argument	"""aei"""		676746	1					
ANR	677211	PrimaryExpression	"""aei"""		676746	0					
ANR	677212	ExpressionStatement	ESIL = core -> anal -> esil	4815:2:143421:143444	676746	1	True				
ANR	677213	AssignmentExpression	ESIL = core -> anal -> esil		676746	0		=			
ANR	677214	Identifier	ESIL		676746	0					
ANR	677215	PtrMemberAccess	core -> anal -> esil		676746	1					
ANR	677216	PtrMemberAccess	core -> anal		676746	0					
ANR	677217	Identifier	core		676746	0					
ANR	677218	Identifier	anal		676746	1					
ANR	677219	Identifier	esil		676746	1					
ANR	677220	IfStatement	if ( ! ESIL )		676746	2					
ANR	677221	Condition	! ESIL	4816:6:143452:143456	676746	0	True				
ANR	677222	UnaryOperationExpression	! ESIL		676746	0					
ANR	677223	UnaryOperator	!		676746	0					
ANR	677224	Identifier	ESIL		676746	1					
ANR	677225	CompoundStatement		76:13:1898:1898	676746	1					
ANR	677226	ExpressionStatement	"eprintf ( ""ESIL not initialized\\n"" )"	4817:3:143464:143498	676746	0	True				
ANR	677227	CallExpression	"eprintf ( ""ESIL not initialized\\n"" )"		676746	0					
ANR	677228	Callee	eprintf		676746	0					
ANR	677229	Identifier	eprintf		676746	0					
ANR	677230	ArgumentList	"""ESIL not initialized\\n"""		676746	1					
ANR	677231	Argument	"""ESIL not initialized\\n"""		676746	0					
ANR	677232	PrimaryExpression	"""ESIL not initialized\\n"""		676746	0					
ANR	677233	ReturnStatement	return ;	4818:3:143503:143509	676746	1	True				
ANR	677234	ExpressionStatement	ESIL -> cb . hook_reg_write = & esilbreak_reg_write	4821:1:143519:143565	676746	53	True				
ANR	677235	AssignmentExpression	ESIL -> cb . hook_reg_write = & esilbreak_reg_write		676746	0		=			
ANR	677236	MemberAccess	ESIL -> cb . hook_reg_write		676746	0					
ANR	677237	PtrMemberAccess	ESIL -> cb		676746	0					
ANR	677238	Identifier	ESIL		676746	0					
ANR	677239	Identifier	cb		676746	1					
ANR	677240	Identifier	hook_reg_write		676746	1					
ANR	677241	UnaryOperationExpression	& esilbreak_reg_write		676746	1					
ANR	677242	UnaryOperator	&		676746	0					
ANR	677243	Identifier	esilbreak_reg_write		676746	1					
ANR	677244	ExpressionStatement	ESIL -> user = & op	4823:1:143627:143643	676746	54	True				
ANR	677245	AssignmentExpression	ESIL -> user = & op		676746	0		=			
ANR	677246	PtrMemberAccess	ESIL -> user		676746	0					
ANR	677247	Identifier	ESIL		676746	0					
ANR	677248	Identifier	user		676746	1					
ANR	677249	UnaryOperationExpression	& op		676746	1					
ANR	677250	UnaryOperator	&		676746	0					
ANR	677251	Identifier	op		676746	1					
ANR	677252	ExpressionStatement	ESIL -> cb . hook_mem_read = & esilbreak_mem_read	4824:1:143646:143690	676746	55	True				
ANR	677253	AssignmentExpression	ESIL -> cb . hook_mem_read = & esilbreak_mem_read		676746	0		=			
ANR	677254	MemberAccess	ESIL -> cb . hook_mem_read		676746	0					
ANR	677255	PtrMemberAccess	ESIL -> cb		676746	0					
ANR	677256	Identifier	ESIL		676746	0					
ANR	677257	Identifier	cb		676746	1					
ANR	677258	Identifier	hook_mem_read		676746	1					
ANR	677259	UnaryOperationExpression	& esilbreak_mem_read		676746	1					
ANR	677260	UnaryOperator	&		676746	0					
ANR	677261	Identifier	esilbreak_mem_read		676746	1					
ANR	677262	ExpressionStatement	ESIL -> cb . hook_mem_write = & esilbreak_mem_write	4825:1:143693:143739	676746	56	True				
ANR	677263	AssignmentExpression	ESIL -> cb . hook_mem_write = & esilbreak_mem_write		676746	0		=			
ANR	677264	MemberAccess	ESIL -> cb . hook_mem_write		676746	0					
ANR	677265	PtrMemberAccess	ESIL -> cb		676746	0					
ANR	677266	Identifier	ESIL		676746	0					
ANR	677267	Identifier	cb		676746	1					
ANR	677268	Identifier	hook_mem_write		676746	1					
ANR	677269	UnaryOperationExpression	& esilbreak_mem_write		676746	1					
ANR	677270	UnaryOperator	&		676746	0					
ANR	677271	Identifier	esilbreak_mem_write		676746	1					
ANR	677272	ExpressionStatement	"pcname = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"	4828:1:143886:143942	676746	57	True				
ANR	677273	AssignmentExpression	"pcname = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		676746	0		=			
ANR	677274	Identifier	pcname		676746	0					
ANR	677275	CallExpression	"r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		676746	1					
ANR	677276	Callee	r_reg_get_name		676746	0					
ANR	677277	Identifier	r_reg_get_name		676746	0					
ANR	677278	ArgumentList	core -> anal -> reg		676746	1					
ANR	677279	Argument	core -> anal -> reg		676746	0					
ANR	677280	PtrMemberAccess	core -> anal -> reg		676746	0					
ANR	677281	PtrMemberAccess	core -> anal		676746	0					
ANR	677282	Identifier	core		676746	0					
ANR	677283	Identifier	anal		676746	1					
ANR	677284	Identifier	reg		676746	1					
ANR	677285	Argument	R_REG_NAME_PC		676746	1					
ANR	677286	Identifier	R_REG_NAME_PC		676746	0					
ANR	677287	IfStatement	if ( ! pcname || ! * pcname )		676746	58					
ANR	677288	Condition	! pcname || ! * pcname	4829:5:143949:143967	676746	0	True				
ANR	677289	OrExpression	! pcname || ! * pcname		676746	0		||			
ANR	677290	UnaryOperationExpression	! pcname		676746	0					
ANR	677291	UnaryOperator	!		676746	0					
ANR	677292	Identifier	pcname		676746	1					
ANR	677293	UnaryOperationExpression	! * pcname		676746	1					
ANR	677294	UnaryOperator	!		676746	0					
ANR	677295	UnaryOperationExpression	* pcname		676746	1					
ANR	677296	UnaryOperator	*		676746	0					
ANR	677297	Identifier	pcname		676746	1					
ANR	677298	CompoundStatement		89:26:2409:2409	676746	1					
ANR	677299	ExpressionStatement	"eprintf ( ""Cannot find program counter register in the current profile.\\n"" )"	4830:2:143974:144048	676746	0	True				
ANR	677300	CallExpression	"eprintf ( ""Cannot find program counter register in the current profile.\\n"" )"		676746	0					
ANR	677301	Callee	eprintf		676746	0					
ANR	677302	Identifier	eprintf		676746	0					
ANR	677303	ArgumentList	"""Cannot find program counter register in the current profile.\\n"""		676746	1					
ANR	677304	Argument	"""Cannot find program counter register in the current profile.\\n"""		676746	0					
ANR	677305	PrimaryExpression	"""Cannot find program counter register in the current profile.\\n"""		676746	0					
ANR	677306	ReturnStatement	return ;	4831:2:144052:144058	676746	1	True				
ANR	677307	ExpressionStatement	esil_anal_stop = false	4833:1:144064:144086	676746	59	True				
ANR	677308	AssignmentExpression	esil_anal_stop = false		676746	0		=			
ANR	677309	Identifier	esil_anal_stop		676746	0					
ANR	677310	Identifier	false		676746	1					
ANR	677311	ExpressionStatement	"r_cons_break_push ( cccb , core )"	4834:1:144089:144119	676746	60	True				
ANR	677312	CallExpression	"r_cons_break_push ( cccb , core )"		676746	0					
ANR	677313	Callee	r_cons_break_push		676746	0					
ANR	677314	Identifier	r_cons_break_push		676746	0					
ANR	677315	ArgumentList	cccb		676746	1					
ANR	677316	Argument	cccb		676746	0					
ANR	677317	Identifier	cccb		676746	0					
ANR	677318	Argument	core		676746	1					
ANR	677319	Identifier	core		676746	0					
ANR	677320	IdentifierDeclStatement	int arch = - 1 ;	4836:1:144123:144136	676746	61	True				
ANR	677321	IdentifierDecl	arch = - 1		676746	0					
ANR	677322	IdentifierDeclType	int		676746	0					
ANR	677323	Identifier	arch		676746	1					
ANR	677324	AssignmentExpression	arch = - 1		676746	2		=			
ANR	677325	Identifier	arch		676746	0					
ANR	677326	UnaryOperationExpression	- 1		676746	1					
ANR	677327	UnaryOperator	-		676746	0					
ANR	677328	PrimaryExpression	1		676746	1					
ANR	677329	IfStatement	"if ( ! strcmp ( core -> anal -> cur -> arch , ""arm"" ) )"		676746	62					
ANR	677330	Condition	"! strcmp ( core -> anal -> cur -> arch , ""arm"" )"	4837:5:144143:144180	676746	0	True				
ANR	677331	UnaryOperationExpression	"! strcmp ( core -> anal -> cur -> arch , ""arm"" )"		676746	0					
ANR	677332	UnaryOperator	!		676746	0					
ANR	677333	CallExpression	"strcmp ( core -> anal -> cur -> arch , ""arm"" )"		676746	1					
ANR	677334	Callee	strcmp		676746	0					
ANR	677335	Identifier	strcmp		676746	0					
ANR	677336	ArgumentList	core -> anal -> cur -> arch		676746	1					
ANR	677337	Argument	core -> anal -> cur -> arch		676746	0					
ANR	677338	PtrMemberAccess	core -> anal -> cur -> arch		676746	0					
ANR	677339	PtrMemberAccess	core -> anal -> cur		676746	0					
ANR	677340	PtrMemberAccess	core -> anal		676746	0					
ANR	677341	Identifier	core		676746	0					
ANR	677342	Identifier	anal		676746	1					
ANR	677343	Identifier	cur		676746	1					
ANR	677344	Identifier	arch		676746	1					
ANR	677345	Argument	"""arm"""		676746	1					
ANR	677346	PrimaryExpression	"""arm"""		676746	0					
ANR	677347	CompoundStatement		97:45:2622:2622	676746	1					
ANR	677348	SwitchStatement	switch ( core -> anal -> cur -> bits )		676746	0					
ANR	677349	Condition	core -> anal -> cur -> bits	4838:10:144195:144215	676746	0	True				
ANR	677350	PtrMemberAccess	core -> anal -> cur -> bits		676746	0					
ANR	677351	PtrMemberAccess	core -> anal -> cur		676746	0					
ANR	677352	PtrMemberAccess	core -> anal		676746	0					
ANR	677353	Identifier	core		676746	0					
ANR	677354	Identifier	anal		676746	1					
ANR	677355	Identifier	cur		676746	1					
ANR	677356	Identifier	bits		676746	1					
ANR	677357	CompoundStatement		98:33:2657:2657	676746	1					
ANR	677358	Label	case 64 :	4839:2:144222:144229	676746	0	True				
ANR	677359	ExpressionStatement	arch = R2_ARCH_ARM64	4839:11:144231:144251	676746	1	True				
ANR	677360	AssignmentExpression	arch = R2_ARCH_ARM64		676746	0		=			
ANR	677361	Identifier	arch		676746	0					
ANR	677362	Identifier	R2_ARCH_ARM64		676746	1					
ANR	677363	BreakStatement	break ;	4839:33:144253:144258	676746	2	True				
ANR	677364	Label	case 32 :	4840:2:144262:144269	676746	3	True				
ANR	677365	ExpressionStatement	arch = R2_ARCH_ARM32	4840:11:144271:144291	676746	4	True				
ANR	677366	AssignmentExpression	arch = R2_ARCH_ARM32		676746	0		=			
ANR	677367	Identifier	arch		676746	0					
ANR	677368	Identifier	R2_ARCH_ARM32		676746	1					
ANR	677369	BreakStatement	break ;	4840:33:144293:144298	676746	5	True				
ANR	677370	Label	case 16 :	4841:2:144302:144309	676746	6	True				
ANR	677371	ExpressionStatement	arch = R2_ARCH_THUMB	4841:11:144311:144331	676746	7	True				
ANR	677372	AssignmentExpression	arch = R2_ARCH_THUMB		676746	0		=			
ANR	677373	Identifier	arch		676746	0					
ANR	677374	Identifier	R2_ARCH_THUMB		676746	1					
ANR	677375	BreakStatement	break ;	4841:33:144333:144338	676746	8	True				
ANR	677376	IdentifierDeclStatement	"ut64 gp = r_config_get_i ( core -> config , ""anal.gp"" ) ;"	4845:1:144349:144399	676746	63	True				
ANR	677377	IdentifierDecl	"gp = r_config_get_i ( core -> config , ""anal.gp"" )"		676746	0					
ANR	677378	IdentifierDeclType	ut64		676746	0					
ANR	677379	Identifier	gp		676746	1					
ANR	677380	AssignmentExpression	"gp = r_config_get_i ( core -> config , ""anal.gp"" )"		676746	2		=			
ANR	677381	Identifier	gp		676746	0					
ANR	677382	CallExpression	"r_config_get_i ( core -> config , ""anal.gp"" )"		676746	1					
ANR	677383	Callee	r_config_get_i		676746	0					
ANR	677384	Identifier	r_config_get_i		676746	0					
ANR	677385	ArgumentList	core -> config		676746	1					
ANR	677386	Argument	core -> config		676746	0					
ANR	677387	PtrMemberAccess	core -> config		676746	0					
ANR	677388	Identifier	core		676746	0					
ANR	677389	Identifier	config		676746	1					
ANR	677390	Argument	"""anal.gp"""		676746	1					
ANR	677391	PrimaryExpression	"""anal.gp"""		676746	0					
ANR	677392	IdentifierDeclStatement	const char * gp_reg = NULL ;	4846:1:144402:144427	676746	64	True				
ANR	677393	IdentifierDecl	* gp_reg = NULL		676746	0					
ANR	677394	IdentifierDeclType	const char *		676746	0					
ANR	677395	Identifier	gp_reg		676746	1					
ANR	677396	AssignmentExpression	* gp_reg = NULL		676746	2		=			
ANR	677397	Identifier	NULL		676746	0					
ANR	677398	Identifier	NULL		676746	1					
ANR	677399	IfStatement	"if ( ! strcmp ( core -> anal -> cur -> arch , ""mips"" ) )"		676746	65					
ANR	677400	Condition	"! strcmp ( core -> anal -> cur -> arch , ""mips"" )"	4847:5:144434:144472	676746	0	True				
ANR	677401	UnaryOperationExpression	"! strcmp ( core -> anal -> cur -> arch , ""mips"" )"		676746	0					
ANR	677402	UnaryOperator	!		676746	0					
ANR	677403	CallExpression	"strcmp ( core -> anal -> cur -> arch , ""mips"" )"		676746	1					
ANR	677404	Callee	strcmp		676746	0					
ANR	677405	Identifier	strcmp		676746	0					
ANR	677406	ArgumentList	core -> anal -> cur -> arch		676746	1					
ANR	677407	Argument	core -> anal -> cur -> arch		676746	0					
ANR	677408	PtrMemberAccess	core -> anal -> cur -> arch		676746	0					
ANR	677409	PtrMemberAccess	core -> anal -> cur		676746	0					
ANR	677410	PtrMemberAccess	core -> anal		676746	0					
ANR	677411	Identifier	core		676746	0					
ANR	677412	Identifier	anal		676746	1					
ANR	677413	Identifier	cur		676746	1					
ANR	677414	Identifier	arch		676746	1					
ANR	677415	Argument	"""mips"""		676746	1					
ANR	677416	PrimaryExpression	"""mips"""		676746	0					
ANR	677417	CompoundStatement		107:46:2914:2914	676746	1					
ANR	677418	ExpressionStatement	"gp_reg = ""gp"""	4848:2:144479:144492	676746	0	True				
ANR	677419	AssignmentExpression	"gp_reg = ""gp"""		676746	0		=			
ANR	677420	Identifier	gp_reg		676746	0					
ANR	677421	PrimaryExpression	"""gp"""		676746	1					
ANR	677422	IdentifierDeclStatement	"int opalign = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_ALIGN ) ;"	4851:1:144499:144564	676746	66	True				
ANR	677423	IdentifierDecl	"opalign = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_ALIGN )"		676746	0					
ANR	677424	IdentifierDeclType	int		676746	0					
ANR	677425	Identifier	opalign		676746	1					
ANR	677426	AssignmentExpression	"opalign = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_ALIGN )"		676746	2		=			
ANR	677427	Identifier	opalign		676746	0					
ANR	677428	CallExpression	"r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_ALIGN )"		676746	1					
ANR	677429	Callee	r_anal_archinfo		676746	0					
ANR	677430	Identifier	r_anal_archinfo		676746	0					
ANR	677431	ArgumentList	core -> anal		676746	1					
ANR	677432	Argument	core -> anal		676746	0					
ANR	677433	PtrMemberAccess	core -> anal		676746	0					
ANR	677434	Identifier	core		676746	0					
ANR	677435	Identifier	anal		676746	1					
ANR	677436	Argument	R_ANAL_ARCHINFO_ALIGN		676746	1					
ANR	677437	Identifier	R_ANAL_ARCHINFO_ALIGN		676746	0					
ANR	677438	IdentifierDeclStatement	"const char * sn = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SN ) ;"	4852:1:144567:144631	676746	67	True				
ANR	677439	IdentifierDecl	"* sn = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SN )"		676746	0					
ANR	677440	IdentifierDeclType	const char *		676746	0					
ANR	677441	Identifier	sn		676746	1					
ANR	677442	AssignmentExpression	"* sn = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SN )"		676746	2		=			
ANR	677443	Identifier	sn		676746	0					
ANR	677444	CallExpression	"r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SN )"		676746	1					
ANR	677445	Callee	r_reg_get_name		676746	0					
ANR	677446	Identifier	r_reg_get_name		676746	0					
ANR	677447	ArgumentList	core -> anal -> reg		676746	1					
ANR	677448	Argument	core -> anal -> reg		676746	0					
ANR	677449	PtrMemberAccess	core -> anal -> reg		676746	0					
ANR	677450	PtrMemberAccess	core -> anal		676746	0					
ANR	677451	Identifier	core		676746	0					
ANR	677452	Identifier	anal		676746	1					
ANR	677453	Identifier	reg		676746	1					
ANR	677454	Argument	R_REG_NAME_SN		676746	1					
ANR	677455	Identifier	R_REG_NAME_SN		676746	0					
ANR	677456	IfStatement	if ( ! sn )		676746	68					
ANR	677457	Condition	! sn	4853:5:144638:144640	676746	0	True				
ANR	677458	UnaryOperationExpression	! sn		676746	0					
ANR	677459	UnaryOperator	!		676746	0					
ANR	677460	Identifier	sn		676746	1					
ANR	677461	CompoundStatement		113:10:3082:3082	676746	1					
ANR	677462	ExpressionStatement	"eprintf ( ""Warning: No SN reg alias for current architecture.\\n"" )"	4854:2:144647:144711	676746	0	True				
ANR	677463	CallExpression	"eprintf ( ""Warning: No SN reg alias for current architecture.\\n"" )"		676746	0					
ANR	677464	Callee	eprintf		676746	0					
ANR	677465	Identifier	eprintf		676746	0					
ANR	677466	ArgumentList	"""Warning: No SN reg alias for current architecture.\\n"""		676746	1					
ANR	677467	Argument	"""Warning: No SN reg alias for current architecture.\\n"""		676746	0					
ANR	677468	PrimaryExpression	"""Warning: No SN reg alias for current architecture.\\n"""		676746	0					
ANR	677469	IdentifierDeclStatement	"int mininstrsz = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE ) ;"	4856:1:144717:144791	676746	69	True				
ANR	677470	IdentifierDecl	"mininstrsz = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE )"		676746	0					
ANR	677471	IdentifierDeclType	int		676746	0					
ANR	677472	Identifier	mininstrsz		676746	1					
ANR	677473	AssignmentExpression	"mininstrsz = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE )"		676746	2		=			
ANR	677474	Identifier	mininstrsz		676746	0					
ANR	677475	CallExpression	"r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE )"		676746	1					
ANR	677476	Callee	r_anal_archinfo		676746	0					
ANR	677477	Identifier	r_anal_archinfo		676746	0					
ANR	677478	ArgumentList	core -> anal		676746	1					
ANR	677479	Argument	core -> anal		676746	0					
ANR	677480	PtrMemberAccess	core -> anal		676746	0					
ANR	677481	Identifier	core		676746	0					
ANR	677482	Identifier	anal		676746	1					
ANR	677483	Argument	R_ANAL_ARCHINFO_MIN_OP_SIZE		676746	1					
ANR	677484	Identifier	R_ANAL_ARCHINFO_MIN_OP_SIZE		676746	0					
ANR	677485	ExpressionStatement	r_reg_arena_push ( core -> anal -> reg )	4857:1:144794:144828	676746	70	True				
ANR	677486	CallExpression	r_reg_arena_push ( core -> anal -> reg )		676746	0					
ANR	677487	Callee	r_reg_arena_push		676746	0					
ANR	677488	Identifier	r_reg_arena_push		676746	0					
ANR	677489	ArgumentList	core -> anal -> reg		676746	1					
ANR	677490	Argument	core -> anal -> reg		676746	0					
ANR	677491	PtrMemberAccess	core -> anal -> reg		676746	0					
ANR	677492	PtrMemberAccess	core -> anal		676746	0					
ANR	677493	Identifier	core		676746	0					
ANR	677494	Identifier	anal		676746	1					
ANR	677495	Identifier	reg		676746	1					
ANR	677496	ForStatement	for ( i = 0 ; i < iend ; i ++ )		676746	71					
ANR	677497	ForInit	i = 0 ;	4858:6:144836:144841	676746	0	True				
ANR	677498	AssignmentExpression	i = 0		676746	0		=			
ANR	677499	Identifier	i		676746	0					
ANR	677500	PrimaryExpression	0		676746	1					
ANR	677501	Condition	i < iend	4858:13:144843:144850	676746	1	True				
ANR	677502	RelationalExpression	i < iend		676746	0		<			
ANR	677503	Identifier	i		676746	0					
ANR	677504	Identifier	iend		676746	1					
ANR	677505	PostIncDecOperationExpression	i ++	4858:23:144853:144855	676746	2	True				
ANR	677506	Identifier	i		676746	0					
ANR	677507	IncDec	++		676746	1					
ANR	677508	CompoundStatement		118:28:3297:3297	676746	3					
ANR	677509	Label	repeat :	4859:0:144860:144866	676746	0	True				
ANR	677510	Identifier	repeat		676746	0					
ANR	677511	IfStatement	if ( i + mininstrsz >= iend )		676746	1					
ANR	677512	Condition	i + mininstrsz >= iend	4861:6:144936:144957	676746	0	True				
ANR	677513	RelationalExpression	i + mininstrsz >= iend		676746	0		>=			
ANR	677514	AdditiveExpression	i + mininstrsz		676746	0		+			
ANR	677515	Identifier	i		676746	0					
ANR	677516	Identifier	mininstrsz		676746	1					
ANR	677517	Identifier	iend		676746	1					
ANR	677518	CompoundStatement		121:30:3399:3399	676746	1					
ANR	677519	BreakStatement	break ;	4862:3:144965:144970	676746	0	True				
ANR	677520	IfStatement	if ( esil_anal_stop || r_cons_is_breaked ( ) )		676746	2					
ANR	677521	Condition	esil_anal_stop || r_cons_is_breaked ( )	4864:6:144982:145019	676746	0	True				
ANR	677522	OrExpression	esil_anal_stop || r_cons_is_breaked ( )		676746	0		||			
ANR	677523	Identifier	esil_anal_stop		676746	0					
ANR	677524	CallExpression	r_cons_is_breaked ( )		676746	1					
ANR	677525	Callee	r_cons_is_breaked		676746	0					
ANR	677526	Identifier	r_cons_is_breaked		676746	0					
ANR	677527	ArgumentList			676746	1					
ANR	677528	CompoundStatement		124:46:3461:3461	676746	1					
ANR	677529	BreakStatement	break ;	4865:3:145027:145032	676746	0	True				
ANR	677530	ExpressionStatement	cur = addr + i	4867:2:145040:145054	676746	3	True				
ANR	677531	AssignmentExpression	cur = addr + i		676746	0		=			
ANR	677532	Identifier	cur		676746	0					
ANR	677533	AdditiveExpression	addr + i		676746	1		+			
ANR	677534	Identifier	addr		676746	0					
ANR	677535	Identifier	i		676746	1					
ANR	677536	CompoundStatement		131:3:3585:3604	676746	4					
ANR	677537	IdentifierDeclStatement	"RList * list = r_meta_find_list_in ( core -> anal , cur , - 1 , 4 ) ;"	4869:3:145063:145121	676746	0	True				
ANR	677538	IdentifierDecl	"* list = r_meta_find_list_in ( core -> anal , cur , - 1 , 4 )"		676746	0					
ANR	677539	IdentifierDeclType	RList *		676746	0					
ANR	677540	Identifier	list		676746	1					
ANR	677541	AssignmentExpression	"* list = r_meta_find_list_in ( core -> anal , cur , - 1 , 4 )"		676746	2		=			
ANR	677542	Identifier	list		676746	0					
ANR	677543	CallExpression	"r_meta_find_list_in ( core -> anal , cur , - 1 , 4 )"		676746	1					
ANR	677544	Callee	r_meta_find_list_in		676746	0					
ANR	677545	Identifier	r_meta_find_list_in		676746	0					
ANR	677546	ArgumentList	core -> anal		676746	1					
ANR	677547	Argument	core -> anal		676746	0					
ANR	677548	PtrMemberAccess	core -> anal		676746	0					
ANR	677549	Identifier	core		676746	0					
ANR	677550	Identifier	anal		676746	1					
ANR	677551	Argument	cur		676746	1					
ANR	677552	Identifier	cur		676746	0					
ANR	677553	Argument	- 1		676746	2					
ANR	677554	UnaryOperationExpression	- 1		676746	0					
ANR	677555	UnaryOperator	-		676746	0					
ANR	677556	PrimaryExpression	1		676746	1					
ANR	677557	Argument	4		676746	3					
ANR	677558	PrimaryExpression	4		676746	0					
ANR	677559	IdentifierDeclStatement	RListIter * iter ;	4870:3:145126:145141	676746	1	True				
ANR	677560	IdentifierDecl	* iter		676746	0					
ANR	677561	IdentifierDeclType	RListIter *		676746	0					
ANR	677562	Identifier	iter		676746	1					
ANR	677563	IdentifierDeclStatement	RAnalMetaItem * meta ;	4871:3:145146:145165	676746	2	True				
ANR	677564	IdentifierDecl	* meta		676746	0					
ANR	677565	IdentifierDeclType	RAnalMetaItem *		676746	0					
ANR	677566	Identifier	meta		676746	1					
ANR	677567	Statement	r_list_foreach	4872:3:145170:145183	676746	3	True				
ANR	677568	Statement	(	4872:18:145185:145185	676746	4	True				
ANR	677569	Statement	list	4872:19:145186:145189	676746	5	True				
ANR	677570	Statement	","	4872:23:145190:145190	676746	6	True				
ANR	677571	Statement	iter	4872:25:145192:145195	676746	7	True				
ANR	677572	Statement	","	4872:29:145196:145196	676746	8	True				
ANR	677573	Statement	meta	4872:31:145198:145201	676746	9	True				
ANR	677574	Statement	)	4872:35:145202:145202	676746	10	True				
ANR	677575	CompoundStatement		132:37:3643:3643	676746	11					
ANR	677576	SwitchStatement	switch ( meta -> type )		676746	0					
ANR	677577	Condition	meta -> type	4873:12:145218:145227	676746	0	True				
ANR	677578	PtrMemberAccess	meta -> type		676746	0					
ANR	677579	Identifier	meta		676746	0					
ANR	677580	Identifier	type		676746	1					
ANR	677581	CompoundStatement		133:24:3669:3669	676746	1					
ANR	677582	Label	case R_META_TYPE_DATA :	4874:4:145236:145257	676746	0	True				
ANR	677583	Identifier	R_META_TYPE_DATA		676746	0					
ANR	677584	Label	case R_META_TYPE_STRING :	4875:4:145263:145286	676746	1	True				
ANR	677585	Identifier	R_META_TYPE_STRING		676746	0					
ANR	677586	Label	case R_META_TYPE_FORMAT :	4876:4:145292:145315	676746	2	True				
ANR	677587	Identifier	R_META_TYPE_FORMAT		676746	0					
ANR	677588	ExpressionStatement	i += 4	4877:5:145322:145328	676746	3	True				
ANR	677589	AssignmentExpression	i += 4		676746	0		+=			
ANR	677590	Identifier	i		676746	0					
ANR	677591	PrimaryExpression	4		676746	1					
ANR	677592	ExpressionStatement	r_list_free ( list )	4878:5:145335:145353	676746	4	True				
ANR	677593	CallExpression	r_list_free ( list )		676746	0					
ANR	677594	Callee	r_list_free		676746	0					
ANR	677595	Identifier	r_list_free		676746	0					
ANR	677596	ArgumentList	list		676746	1					
ANR	677597	Argument	list		676746	0					
ANR	677598	Identifier	list		676746	0					
ANR	677599	GotoStatement	goto repeat ;	4879:5:145360:145371	676746	5	True				
ANR	677600	Identifier	repeat		676746	0					
ANR	677601	IfStatement	if ( list )		676746	12					
ANR	677602	Condition	list	4882:7:145391:145394	676746	0	True				
ANR	677603	Identifier	list		676746	0					
ANR	677604	CompoundStatement		142:13:3836:3836	676746	1					
ANR	677605	ExpressionStatement	r_list_free ( list )	4883:4:145403:145421	676746	0	True				
ANR	677606	CallExpression	r_list_free ( list )		676746	0					
ANR	677607	Callee	r_list_free		676746	0					
ANR	677608	Identifier	r_list_free		676746	0					
ANR	677609	ArgumentList	list		676746	1					
ANR	677610	Argument	list		676746	0					
ANR	677611	Identifier	list		676746	0					
ANR	677612	IfStatement	if ( opalign > 0 )		676746	5					
ANR	677613	Condition	opalign > 0	4887:6:145472:145482	676746	0	True				
ANR	677614	RelationalExpression	opalign > 0		676746	0		>			
ANR	677615	Identifier	opalign		676746	0					
ANR	677616	PrimaryExpression	0		676746	1					
ANR	677617	CompoundStatement		147:19:3924:3924	676746	1					
ANR	677618	ExpressionStatement	cur -= ( cur % opalign )	4888:3:145490:145512	676746	0	True				
ANR	677619	AssignmentExpression	cur -= ( cur % opalign )		676746	0		-=			
ANR	677620	Identifier	cur		676746	0					
ANR	677621	MultiplicativeExpression	cur % opalign		676746	1		%			
ANR	677622	Identifier	cur		676746	0					
ANR	677623	Identifier	opalign		676746	1					
ANR	677624	ExpressionStatement	r_anal_op_fini ( & op )	4890:2:145520:145540	676746	6	True				
ANR	677625	CallExpression	r_anal_op_fini ( & op )		676746	0					
ANR	677626	Callee	r_anal_op_fini		676746	0					
ANR	677627	Identifier	r_anal_op_fini		676746	0					
ANR	677628	ArgumentList	& op		676746	1					
ANR	677629	Argument	& op		676746	0					
ANR	677630	UnaryOperationExpression	& op		676746	0					
ANR	677631	UnaryOperator	&		676746	0					
ANR	677632	Identifier	op		676746	1					
ANR	677633	ExpressionStatement	"r_asm_set_pc ( core -> assembler , cur )"	4891:2:145544:145579	676746	7	True				
ANR	677634	CallExpression	"r_asm_set_pc ( core -> assembler , cur )"		676746	0					
ANR	677635	Callee	r_asm_set_pc		676746	0					
ANR	677636	Identifier	r_asm_set_pc		676746	0					
ANR	677637	ArgumentList	core -> assembler		676746	1					
ANR	677638	Argument	core -> assembler		676746	0					
ANR	677639	PtrMemberAccess	core -> assembler		676746	0					
ANR	677640	Identifier	core		676746	0					
ANR	677641	Identifier	assembler		676746	1					
ANR	677642	Argument	cur		676746	1					
ANR	677643	Identifier	cur		676746	0					
ANR	677644	IfStatement	"if ( ! r_anal_op ( core -> anal , & op , cur , buf + i , iend - i , R_ANAL_OP_MASK_ESIL | R_ANAL_OP_MASK_VAL | R_ANAL_OP_MASK_HINT ) )"		676746	8					
ANR	677645	Condition	"! r_anal_op ( core -> anal , & op , cur , buf + i , iend - i , R_ANAL_OP_MASK_ESIL | R_ANAL_OP_MASK_VAL | R_ANAL_OP_MASK_HINT )"	4892:6:145587:145702	676746	0	True				
ANR	677646	UnaryOperationExpression	"! r_anal_op ( core -> anal , & op , cur , buf + i , iend - i , R_ANAL_OP_MASK_ESIL | R_ANAL_OP_MASK_VAL | R_ANAL_OP_MASK_HINT )"		676746	0					
ANR	677647	UnaryOperator	!		676746	0					
ANR	677648	CallExpression	"r_anal_op ( core -> anal , & op , cur , buf + i , iend - i , R_ANAL_OP_MASK_ESIL | R_ANAL_OP_MASK_VAL | R_ANAL_OP_MASK_HINT )"		676746	1					
ANR	677649	Callee	r_anal_op		676746	0					
ANR	677650	Identifier	r_anal_op		676746	0					
ANR	677651	ArgumentList	core -> anal		676746	1					
ANR	677652	Argument	core -> anal		676746	0					
ANR	677653	PtrMemberAccess	core -> anal		676746	0					
ANR	677654	Identifier	core		676746	0					
ANR	677655	Identifier	anal		676746	1					
ANR	677656	Argument	& op		676746	1					
ANR	677657	UnaryOperationExpression	& op		676746	0					
ANR	677658	UnaryOperator	&		676746	0					
ANR	677659	Identifier	op		676746	1					
ANR	677660	Argument	cur		676746	2					
ANR	677661	Identifier	cur		676746	0					
ANR	677662	Argument	buf + i		676746	3					
ANR	677663	AdditiveExpression	buf + i		676746	0		+			
ANR	677664	Identifier	buf		676746	0					
ANR	677665	Identifier	i		676746	1					
ANR	677666	Argument	iend - i		676746	4					
ANR	677667	AdditiveExpression	iend - i		676746	0		-			
ANR	677668	Identifier	iend		676746	0					
ANR	677669	Identifier	i		676746	1					
ANR	677670	Argument	R_ANAL_OP_MASK_ESIL | R_ANAL_OP_MASK_VAL | R_ANAL_OP_MASK_HINT		676746	5					
ANR	677671	InclusiveOrExpression	R_ANAL_OP_MASK_ESIL | R_ANAL_OP_MASK_VAL | R_ANAL_OP_MASK_HINT		676746	0		|			
ANR	677672	Identifier	R_ANAL_OP_MASK_ESIL		676746	0					
ANR	677673	InclusiveOrExpression	R_ANAL_OP_MASK_VAL | R_ANAL_OP_MASK_HINT		676746	1		|			
ANR	677674	Identifier	R_ANAL_OP_MASK_VAL		676746	0					
ANR	677675	Identifier	R_ANAL_OP_MASK_HINT		676746	1					
ANR	677676	CompoundStatement		152:124:4144:4144	676746	1					
ANR	677677	ExpressionStatement	i += minopsize - 1	4893:3:145710:145728	676746	0	True				
ANR	677678	AssignmentExpression	i += minopsize - 1		676746	0		+=			
ANR	677679	Identifier	i		676746	0					
ANR	677680	AdditiveExpression	minopsize - 1		676746	1		-			
ANR	677681	Identifier	minopsize		676746	0					
ANR	677682	PrimaryExpression	1		676746	1					
ANR	677683	IfStatement	if ( op . type == R_ANAL_OP_TYPE_ILL || op . type == R_ANAL_OP_TYPE_UNK )		676746	9					
ANR	677684	Condition	op . type == R_ANAL_OP_TYPE_ILL || op . type == R_ANAL_OP_TYPE_UNK	4896:6:145820:145881	676746	0	True				
ANR	677685	OrExpression	op . type == R_ANAL_OP_TYPE_ILL || op . type == R_ANAL_OP_TYPE_UNK		676746	0		||			
ANR	677686	EqualityExpression	op . type == R_ANAL_OP_TYPE_ILL		676746	0		==			
ANR	677687	MemberAccess	op . type		676746	0					
ANR	677688	Identifier	op		676746	0					
ANR	677689	Identifier	type		676746	1					
ANR	677690	Identifier	R_ANAL_OP_TYPE_ILL		676746	1					
ANR	677691	EqualityExpression	op . type == R_ANAL_OP_TYPE_UNK		676746	1		==			
ANR	677692	MemberAccess	op . type		676746	0					
ANR	677693	Identifier	op		676746	0					
ANR	677694	Identifier	type		676746	1					
ANR	677695	Identifier	R_ANAL_OP_TYPE_UNK		676746	1					
ANR	677696	CompoundStatement		156:70:4323:4323	676746	1					
ANR	677697	ExpressionStatement	r_anal_op_fini ( & op )	4898:3:145902:145922	676746	0	True				
ANR	677698	CallExpression	r_anal_op_fini ( & op )		676746	0					
ANR	677699	Callee	r_anal_op_fini		676746	0					
ANR	677700	Identifier	r_anal_op_fini		676746	0					
ANR	677701	ArgumentList	& op		676746	1					
ANR	677702	Argument	& op		676746	0					
ANR	677703	UnaryOperationExpression	& op		676746	0					
ANR	677704	UnaryOperator	&		676746	0					
ANR	677705	Identifier	op		676746	1					
ANR	677706	ContinueStatement	continue ;	4899:3:145927:145935	676746	1	True				
ANR	677707	IfStatement	if ( i > iend )		676746	10					
ANR	677708	Condition	i > iend	4903:6:146054:146061	676746	0	True				
ANR	677709	RelationalExpression	i > iend		676746	0		>			
ANR	677710	Identifier	i		676746	0					
ANR	677711	Identifier	iend		676746	1					
ANR	677712	CompoundStatement		163:16:4503:4503	676746	1					
ANR	677713	BreakStatement	break ;	4904:3:146069:146074	676746	0	True				
ANR	677714	IfStatement	if ( op . size < 1 )		676746	11					
ANR	677715	Condition	op . size < 1	4906:6:146086:146096	676746	0	True				
ANR	677716	RelationalExpression	op . size < 1		676746	0		<			
ANR	677717	MemberAccess	op . size		676746	0					
ANR	677718	Identifier	op		676746	0					
ANR	677719	Identifier	size		676746	1					
ANR	677720	PrimaryExpression	1		676746	1					
ANR	677721	CompoundStatement		166:19:4538:4538	676746	1					
ANR	677722	ExpressionStatement	i += minopsize - 1	4907:3:146104:146122	676746	0	True				
ANR	677723	AssignmentExpression	i += minopsize - 1		676746	0		+=			
ANR	677724	Identifier	i		676746	0					
ANR	677725	AdditiveExpression	minopsize - 1		676746	1		-			
ANR	677726	Identifier	minopsize		676746	0					
ANR	677727	PrimaryExpression	1		676746	1					
ANR	677728	ContinueStatement	continue ;	4908:3:146127:146135	676746	1	True				
ANR	677729	IfStatement	if ( emu_lazy )		676746	12					
ANR	677730	Condition	emu_lazy	4910:6:146147:146154	676746	0	True				
ANR	677731	Identifier	emu_lazy		676746	0					
ANR	677732	CompoundStatement		170:16:4596:4596	676746	1					
ANR	677733	IfStatement	if ( op . type & R_ANAL_OP_TYPE_REP )		676746	0					
ANR	677734	Condition	op . type & R_ANAL_OP_TYPE_REP	4911:7:146166:146193	676746	0	True				
ANR	677735	BitAndExpression	op . type & R_ANAL_OP_TYPE_REP		676746	0		&			
ANR	677736	MemberAccess	op . type		676746	0					
ANR	677737	Identifier	op		676746	0					
ANR	677738	Identifier	type		676746	1					
ANR	677739	Identifier	R_ANAL_OP_TYPE_REP		676746	1					
ANR	677740	CompoundStatement		171:37:4635:4635	676746	1					
ANR	677741	ExpressionStatement	i += op . size - 1	4912:4:146202:146218	676746	0	True				
ANR	677742	AssignmentExpression	i += op . size - 1		676746	0		+=			
ANR	677743	Identifier	i		676746	0					
ANR	677744	AdditiveExpression	op . size - 1		676746	1		-			
ANR	677745	MemberAccess	op . size		676746	0					
ANR	677746	Identifier	op		676746	0					
ANR	677747	Identifier	size		676746	1					
ANR	677748	PrimaryExpression	1		676746	1					
ANR	677749	ContinueStatement	continue ;	4913:4:146224:146232	676746	1	True				
ANR	677750	SwitchStatement	switch ( op . type & R_ANAL_OP_TYPE_MASK )		676746	1					
ANR	677751	Condition	op . type & R_ANAL_OP_TYPE_MASK	4915:11:146250:146278	676746	0	True				
ANR	677752	BitAndExpression	op . type & R_ANAL_OP_TYPE_MASK		676746	0		&			
ANR	677753	MemberAccess	op . type		676746	0					
ANR	677754	Identifier	op		676746	0					
ANR	677755	Identifier	type		676746	1					
ANR	677756	Identifier	R_ANAL_OP_TYPE_MASK		676746	1					
ANR	677757	CompoundStatement		175:42:4720:4720	676746	1					
ANR	677758	Label	case R_ANAL_OP_TYPE_JMP :	4916:3:146286:146309	676746	0	True				
ANR	677759	Identifier	R_ANAL_OP_TYPE_JMP		676746	0					
ANR	677760	Label	case R_ANAL_OP_TYPE_CJMP :	4917:3:146314:146338	676746	1	True				
ANR	677761	Identifier	R_ANAL_OP_TYPE_CJMP		676746	0					
ANR	677762	Label	case R_ANAL_OP_TYPE_CALL :	4918:3:146343:146367	676746	2	True				
ANR	677763	Identifier	R_ANAL_OP_TYPE_CALL		676746	0					
ANR	677764	Label	case R_ANAL_OP_TYPE_RET :	4919:3:146372:146395	676746	3	True				
ANR	677765	Identifier	R_ANAL_OP_TYPE_RET		676746	0					
ANR	677766	Label	case R_ANAL_OP_TYPE_ILL :	4920:3:146400:146423	676746	4	True				
ANR	677767	Identifier	R_ANAL_OP_TYPE_ILL		676746	0					
ANR	677768	Label	case R_ANAL_OP_TYPE_NOP :	4921:3:146428:146451	676746	5	True				
ANR	677769	Identifier	R_ANAL_OP_TYPE_NOP		676746	0					
ANR	677770	Label	case R_ANAL_OP_TYPE_UJMP :	4922:3:146456:146480	676746	6	True				
ANR	677771	Identifier	R_ANAL_OP_TYPE_UJMP		676746	0					
ANR	677772	Label	case R_ANAL_OP_TYPE_IO :	4923:3:146485:146507	676746	7	True				
ANR	677773	Identifier	R_ANAL_OP_TYPE_IO		676746	0					
ANR	677774	Label	case R_ANAL_OP_TYPE_LEAVE :	4924:3:146512:146537	676746	8	True				
ANR	677775	Identifier	R_ANAL_OP_TYPE_LEAVE		676746	0					
ANR	677776	Label	case R_ANAL_OP_TYPE_CRYPTO :	4925:3:146542:146568	676746	9	True				
ANR	677777	Identifier	R_ANAL_OP_TYPE_CRYPTO		676746	0					
ANR	677778	Label	case R_ANAL_OP_TYPE_CPL :	4926:3:146573:146596	676746	10	True				
ANR	677779	Identifier	R_ANAL_OP_TYPE_CPL		676746	0					
ANR	677780	Label	case R_ANAL_OP_TYPE_SYNC :	4927:3:146601:146625	676746	11	True				
ANR	677781	Identifier	R_ANAL_OP_TYPE_SYNC		676746	0					
ANR	677782	Label	case R_ANAL_OP_TYPE_SWI :	4928:3:146630:146653	676746	12	True				
ANR	677783	Identifier	R_ANAL_OP_TYPE_SWI		676746	0					
ANR	677784	Label	case R_ANAL_OP_TYPE_CMP :	4929:3:146658:146681	676746	13	True				
ANR	677785	Identifier	R_ANAL_OP_TYPE_CMP		676746	0					
ANR	677786	Label	case R_ANAL_OP_TYPE_ACMP :	4930:3:146686:146710	676746	14	True				
ANR	677787	Identifier	R_ANAL_OP_TYPE_ACMP		676746	0					
ANR	677788	Label	case R_ANAL_OP_TYPE_NULL :	4931:3:146715:146739	676746	15	True				
ANR	677789	Identifier	R_ANAL_OP_TYPE_NULL		676746	0					
ANR	677790	Label	case R_ANAL_OP_TYPE_CSWI :	4932:3:146744:146768	676746	16	True				
ANR	677791	Identifier	R_ANAL_OP_TYPE_CSWI		676746	0					
ANR	677792	Label	case R_ANAL_OP_TYPE_TRAP :	4933:3:146773:146797	676746	17	True				
ANR	677793	Identifier	R_ANAL_OP_TYPE_TRAP		676746	0					
ANR	677794	ExpressionStatement	i += op . size - 1	4934:4:146803:146819	676746	18	True				
ANR	677795	AssignmentExpression	i += op . size - 1		676746	0		+=			
ANR	677796	Identifier	i		676746	0					
ANR	677797	AdditiveExpression	op . size - 1		676746	1		-			
ANR	677798	MemberAccess	op . size		676746	0					
ANR	677799	Identifier	op		676746	0					
ANR	677800	Identifier	size		676746	1					
ANR	677801	PrimaryExpression	1		676746	1					
ANR	677802	ContinueStatement	continue ;	4935:4:146825:146833	676746	19	True				
ANR	677803	Label	case R_ANAL_OP_TYPE_PUSH :	4937:3:146873:146897	676746	20	True				
ANR	677804	Identifier	R_ANAL_OP_TYPE_PUSH		676746	0					
ANR	677805	Label	case R_ANAL_OP_TYPE_POP :	4938:3:146902:146925	676746	21	True				
ANR	677806	Identifier	R_ANAL_OP_TYPE_POP		676746	0					
ANR	677807	ExpressionStatement	i += op . size - 1	4939:4:146931:146947	676746	22	True				
ANR	677808	AssignmentExpression	i += op . size - 1		676746	0		+=			
ANR	677809	Identifier	i		676746	0					
ANR	677810	AdditiveExpression	op . size - 1		676746	1		-			
ANR	677811	MemberAccess	op . size		676746	0					
ANR	677812	Identifier	op		676746	0					
ANR	677813	Identifier	size		676746	1					
ANR	677814	PrimaryExpression	1		676746	1					
ANR	677815	ContinueStatement	continue ;	4940:4:146953:146961	676746	23	True				
ANR	677816	IfStatement	if ( sn && op . type == R_ANAL_OP_TYPE_SWI )		676746	13					
ANR	677817	Condition	sn && op . type == R_ANAL_OP_TYPE_SWI	4943:6:146978:147012	676746	0	True				
ANR	677818	AndExpression	sn && op . type == R_ANAL_OP_TYPE_SWI		676746	0		&&			
ANR	677819	Identifier	sn		676746	0					
ANR	677820	EqualityExpression	op . type == R_ANAL_OP_TYPE_SWI		676746	1		==			
ANR	677821	MemberAccess	op . type		676746	0					
ANR	677822	Identifier	op		676746	0					
ANR	677823	Identifier	type		676746	1					
ANR	677824	Identifier	R_ANAL_OP_TYPE_SWI		676746	1					
ANR	677825	CompoundStatement		206:3:5597:5660	676746	1					
ANR	677826	ExpressionStatement	"r_flag_space_set ( core -> flags , R_FLAGS_FS_SYSCALLS )"	4944:3:147020:147071	676746	0	True				
ANR	677827	CallExpression	"r_flag_space_set ( core -> flags , R_FLAGS_FS_SYSCALLS )"		676746	0					
ANR	677828	Callee	r_flag_space_set		676746	0					
ANR	677829	Identifier	r_flag_space_set		676746	0					
ANR	677830	ArgumentList	core -> flags		676746	1					
ANR	677831	Argument	core -> flags		676746	0					
ANR	677832	PtrMemberAccess	core -> flags		676746	0					
ANR	677833	Identifier	core		676746	0					
ANR	677834	Identifier	flags		676746	1					
ANR	677835	Argument	R_FLAGS_FS_SYSCALLS		676746	1					
ANR	677836	Identifier	R_FLAGS_FS_SYSCALLS		676746	0					
ANR	677837	IdentifierDeclStatement	"int snv = canal_isThumb ( core ) ? op . val : ( int ) r_reg_getv ( core -> anal -> reg , sn ) ;"	4945:3:147076:147153	676746	1	True				
ANR	677838	IdentifierDecl	"snv = canal_isThumb ( core ) ? op . val : ( int ) r_reg_getv ( core -> anal -> reg , sn )"		676746	0					
ANR	677839	IdentifierDeclType	int		676746	0					
ANR	677840	Identifier	snv		676746	1					
ANR	677841	AssignmentExpression	"snv = canal_isThumb ( core ) ? op . val : ( int ) r_reg_getv ( core -> anal -> reg , sn )"		676746	2		=			
ANR	677842	Identifier	snv		676746	0					
ANR	677843	ConditionalExpression	"canal_isThumb ( core ) ? op . val : ( int ) r_reg_getv ( core -> anal -> reg , sn )"		676746	1					
ANR	677844	Condition	canal_isThumb ( core )		676746	0					
ANR	677845	CallExpression	canal_isThumb ( core )		676746	0					
ANR	677846	Callee	canal_isThumb		676746	0					
ANR	677847	Identifier	canal_isThumb		676746	0					
ANR	677848	ArgumentList	core		676746	1					
ANR	677849	Argument	core		676746	0					
ANR	677850	Identifier	core		676746	0					
ANR	677851	MemberAccess	op . val		676746	1					
ANR	677852	Identifier	op		676746	0					
ANR	677853	Identifier	val		676746	1					
ANR	677854	CastExpression	"( int ) r_reg_getv ( core -> anal -> reg , sn )"		676746	2					
ANR	677855	CastTarget	int		676746	0					
ANR	677856	CallExpression	"r_reg_getv ( core -> anal -> reg , sn )"		676746	1					
ANR	677857	Callee	r_reg_getv		676746	0					
ANR	677858	Identifier	r_reg_getv		676746	0					
ANR	677859	ArgumentList	core -> anal -> reg		676746	1					
ANR	677860	Argument	core -> anal -> reg		676746	0					
ANR	677861	PtrMemberAccess	core -> anal -> reg		676746	0					
ANR	677862	PtrMemberAccess	core -> anal		676746	0					
ANR	677863	Identifier	core		676746	0					
ANR	677864	Identifier	anal		676746	1					
ANR	677865	Identifier	reg		676746	1					
ANR	677866	Argument	sn		676746	1					
ANR	677867	Identifier	sn		676746	0					
ANR	677868	IdentifierDeclStatement	"RSyscallItem * si = r_syscall_get ( core -> anal -> syscall , snv , - 1 ) ;"	4946:3:147158:147221	676746	2	True				
ANR	677869	IdentifierDecl	"* si = r_syscall_get ( core -> anal -> syscall , snv , - 1 )"		676746	0					
ANR	677870	IdentifierDeclType	RSyscallItem *		676746	0					
ANR	677871	Identifier	si		676746	1					
ANR	677872	AssignmentExpression	"* si = r_syscall_get ( core -> anal -> syscall , snv , - 1 )"		676746	2		=			
ANR	677873	Identifier	si		676746	0					
ANR	677874	CallExpression	"r_syscall_get ( core -> anal -> syscall , snv , - 1 )"		676746	1					
ANR	677875	Callee	r_syscall_get		676746	0					
ANR	677876	Identifier	r_syscall_get		676746	0					
ANR	677877	ArgumentList	core -> anal -> syscall		676746	1					
ANR	677878	Argument	core -> anal -> syscall		676746	0					
ANR	677879	PtrMemberAccess	core -> anal -> syscall		676746	0					
ANR	677880	PtrMemberAccess	core -> anal		676746	0					
ANR	677881	Identifier	core		676746	0					
ANR	677882	Identifier	anal		676746	1					
ANR	677883	Identifier	syscall		676746	1					
ANR	677884	Argument	snv		676746	1					
ANR	677885	Identifier	snv		676746	0					
ANR	677886	Argument	- 1		676746	2					
ANR	677887	UnaryOperationExpression	- 1		676746	0					
ANR	677888	UnaryOperator	-		676746	0					
ANR	677889	PrimaryExpression	1		676746	1					
ANR	677890	IfStatement	if ( si )		676746	3					
ANR	677891	Condition	si	4947:7:147230:147231	676746	0	True				
ANR	677892	Identifier	si		676746	0					
ANR	677893	CompoundStatement		207:11:5673:5673	676746	1					
ANR	677894	ExpressionStatement	"r_flag_set_next ( core -> flags , sdb_fmt ( ""syscall.%s"" , si -> name ) , cur , 1 )"	4949:4:147312:147383	676746	0	True				
ANR	677895	CallExpression	"r_flag_set_next ( core -> flags , sdb_fmt ( ""syscall.%s"" , si -> name ) , cur , 1 )"		676746	0					
ANR	677896	Callee	r_flag_set_next		676746	0					
ANR	677897	Identifier	r_flag_set_next		676746	0					
ANR	677898	ArgumentList	core -> flags		676746	1					
ANR	677899	Argument	core -> flags		676746	0					
ANR	677900	PtrMemberAccess	core -> flags		676746	0					
ANR	677901	Identifier	core		676746	0					
ANR	677902	Identifier	flags		676746	1					
ANR	677903	Argument	"sdb_fmt ( ""syscall.%s"" , si -> name )"		676746	1					
ANR	677904	CallExpression	"sdb_fmt ( ""syscall.%s"" , si -> name )"		676746	0					
ANR	677905	Callee	sdb_fmt		676746	0					
ANR	677906	Identifier	sdb_fmt		676746	0					
ANR	677907	ArgumentList	"""syscall.%s"""		676746	1					
ANR	677908	Argument	"""syscall.%s"""		676746	0					
ANR	677909	PrimaryExpression	"""syscall.%s"""		676746	0					
ANR	677910	Argument	si -> name		676746	1					
ANR	677911	PtrMemberAccess	si -> name		676746	0					
ANR	677912	Identifier	si		676746	0					
ANR	677913	Identifier	name		676746	1					
ANR	677914	Argument	cur		676746	2					
ANR	677915	Identifier	cur		676746	0					
ANR	677916	Argument	1		676746	3					
ANR	677917	PrimaryExpression	1		676746	0					
ANR	677918	ElseStatement	else		676746	0					
ANR	677919	CompoundStatement		210:10:5834:5834	676746	0					
ANR	677920	ExpressionStatement	"r_flag_set_next ( core -> flags , sdb_fmt ( ""syscall.%d"" , snv ) , cur , 1 )"	4954:4:147598:147664	676746	0	True				
ANR	677921	CallExpression	"r_flag_set_next ( core -> flags , sdb_fmt ( ""syscall.%d"" , snv ) , cur , 1 )"		676746	0					
ANR	677922	Callee	r_flag_set_next		676746	0					
ANR	677923	Identifier	r_flag_set_next		676746	0					
ANR	677924	ArgumentList	core -> flags		676746	1					
ANR	677925	Argument	core -> flags		676746	0					
ANR	677926	PtrMemberAccess	core -> flags		676746	0					
ANR	677927	Identifier	core		676746	0					
ANR	677928	Identifier	flags		676746	1					
ANR	677929	Argument	"sdb_fmt ( ""syscall.%d"" , snv )"		676746	1					
ANR	677930	CallExpression	"sdb_fmt ( ""syscall.%d"" , snv )"		676746	0					
ANR	677931	Callee	sdb_fmt		676746	0					
ANR	677932	Identifier	sdb_fmt		676746	0					
ANR	677933	ArgumentList	"""syscall.%d"""		676746	1					
ANR	677934	Argument	"""syscall.%d"""		676746	0					
ANR	677935	PrimaryExpression	"""syscall.%d"""		676746	0					
ANR	677936	Argument	snv		676746	1					
ANR	677937	Identifier	snv		676746	0					
ANR	677938	Argument	cur		676746	2					
ANR	677939	Identifier	cur		676746	0					
ANR	677940	Argument	1		676746	3					
ANR	677941	PrimaryExpression	1		676746	0					
ANR	677942	ExpressionStatement	"r_flag_space_set ( core -> flags , NULL )"	4956:3:147674:147710	676746	4	True				
ANR	677943	CallExpression	"r_flag_space_set ( core -> flags , NULL )"		676746	0					
ANR	677944	Callee	r_flag_space_set		676746	0					
ANR	677945	Identifier	r_flag_space_set		676746	0					
ANR	677946	ArgumentList	core -> flags		676746	1					
ANR	677947	Argument	core -> flags		676746	0					
ANR	677948	PtrMemberAccess	core -> flags		676746	0					
ANR	677949	Identifier	core		676746	0					
ANR	677950	Identifier	flags		676746	1					
ANR	677951	Argument	NULL		676746	1					
ANR	677952	Identifier	NULL		676746	0					
ANR	677953	IfStatement	if ( 1 )		676746	14					
ANR	677954	Condition	1	4958:6:147722:147722	676746	0	True				
ANR	677955	PrimaryExpression	1		676746	0					
ANR	677956	CompoundStatement		219:3:6169:6218	676746	1					
ANR	677957	IdentifierDeclStatement	const char * esilstr = R_STRBUF_SAFEGET ( & op . esil ) ;	4959:3:147730:147779	676746	0	True				
ANR	677958	IdentifierDecl	* esilstr = R_STRBUF_SAFEGET ( & op . esil )		676746	0					
ANR	677959	IdentifierDeclType	const char *		676746	0					
ANR	677960	Identifier	esilstr		676746	1					
ANR	677961	AssignmentExpression	* esilstr = R_STRBUF_SAFEGET ( & op . esil )		676746	2		=			
ANR	677962	Identifier	esilstr		676746	0					
ANR	677963	CallExpression	R_STRBUF_SAFEGET ( & op . esil )		676746	1					
ANR	677964	Callee	R_STRBUF_SAFEGET		676746	0					
ANR	677965	Identifier	R_STRBUF_SAFEGET		676746	0					
ANR	677966	ArgumentList	& op . esil		676746	1					
ANR	677967	Argument	& op . esil		676746	0					
ANR	677968	UnaryOperationExpression	& op . esil		676746	0					
ANR	677969	UnaryOperator	&		676746	0					
ANR	677970	MemberAccess	op . esil		676746	1					
ANR	677971	Identifier	op		676746	0					
ANR	677972	Identifier	esil		676746	1					
ANR	677973	ExpressionStatement	i += op . size - 1	4960:3:147784:147800	676746	1	True				
ANR	677974	AssignmentExpression	i += op . size - 1		676746	0		+=			
ANR	677975	Identifier	i		676746	0					
ANR	677976	AdditiveExpression	op . size - 1		676746	1		-			
ANR	677977	MemberAccess	op . size		676746	0					
ANR	677978	Identifier	op		676746	0					
ANR	677979	Identifier	size		676746	1					
ANR	677980	PrimaryExpression	1		676746	1					
ANR	677981	IfStatement	if ( ! esilstr || ! * esilstr )		676746	2					
ANR	677982	Condition	! esilstr || ! * esilstr	4961:7:147809:147829	676746	0	True				
ANR	677983	OrExpression	! esilstr || ! * esilstr		676746	0		||			
ANR	677984	UnaryOperationExpression	! esilstr		676746	0					
ANR	677985	UnaryOperator	!		676746	0					
ANR	677986	Identifier	esilstr		676746	1					
ANR	677987	UnaryOperationExpression	! * esilstr		676746	1					
ANR	677988	UnaryOperator	!		676746	0					
ANR	677989	UnaryOperationExpression	* esilstr		676746	1					
ANR	677990	UnaryOperator	*		676746	0					
ANR	677991	Identifier	esilstr		676746	1					
ANR	677992	CompoundStatement		221:30:6271:6271	676746	1					
ANR	677993	ContinueStatement	continue ;	4962:4:147838:147846	676746	0	True				
ANR	677994	ExpressionStatement	"r_anal_esil_set_pc ( ESIL , cur )"	4964:3:147856:147886	676746	3	True				
ANR	677995	CallExpression	"r_anal_esil_set_pc ( ESIL , cur )"		676746	0					
ANR	677996	Callee	r_anal_esil_set_pc		676746	0					
ANR	677997	Identifier	r_anal_esil_set_pc		676746	0					
ANR	677998	ArgumentList	ESIL		676746	1					
ANR	677999	Argument	ESIL		676746	0					
ANR	678000	Identifier	ESIL		676746	0					
ANR	678001	Argument	cur		676746	1					
ANR	678002	Identifier	cur		676746	0					
ANR	678003	ExpressionStatement	"r_reg_setv ( core -> anal -> reg , pcname , cur + op . size )"	4965:3:147891:147942	676746	4	True				
ANR	678004	CallExpression	"r_reg_setv ( core -> anal -> reg , pcname , cur + op . size )"		676746	0					
ANR	678005	Callee	r_reg_setv		676746	0					
ANR	678006	Identifier	r_reg_setv		676746	0					
ANR	678007	ArgumentList	core -> anal -> reg		676746	1					
ANR	678008	Argument	core -> anal -> reg		676746	0					
ANR	678009	PtrMemberAccess	core -> anal -> reg		676746	0					
ANR	678010	PtrMemberAccess	core -> anal		676746	0					
ANR	678011	Identifier	core		676746	0					
ANR	678012	Identifier	anal		676746	1					
ANR	678013	Identifier	reg		676746	1					
ANR	678014	Argument	pcname		676746	1					
ANR	678015	Identifier	pcname		676746	0					
ANR	678016	Argument	cur + op . size		676746	2					
ANR	678017	AdditiveExpression	cur + op . size		676746	0		+			
ANR	678018	Identifier	cur		676746	0					
ANR	678019	MemberAccess	op . size		676746	1					
ANR	678020	Identifier	op		676746	0					
ANR	678021	Identifier	size		676746	1					
ANR	678022	IfStatement	if ( gp_fixed && gp_reg )		676746	5					
ANR	678023	Condition	gp_fixed && gp_reg	4966:7:147951:147968	676746	0	True				
ANR	678024	AndExpression	gp_fixed && gp_reg		676746	0		&&			
ANR	678025	Identifier	gp_fixed		676746	0					
ANR	678026	Identifier	gp_reg		676746	1					
ANR	678027	CompoundStatement		226:27:6410:6410	676746	1					
ANR	678028	ExpressionStatement	"r_reg_setv ( core -> anal -> reg , gp_reg , gp )"	4967:4:147977:148017	676746	0	True				
ANR	678029	CallExpression	"r_reg_setv ( core -> anal -> reg , gp_reg , gp )"		676746	0					
ANR	678030	Callee	r_reg_setv		676746	0					
ANR	678031	Identifier	r_reg_setv		676746	0					
ANR	678032	ArgumentList	core -> anal -> reg		676746	1					
ANR	678033	Argument	core -> anal -> reg		676746	0					
ANR	678034	PtrMemberAccess	core -> anal -> reg		676746	0					
ANR	678035	PtrMemberAccess	core -> anal		676746	0					
ANR	678036	Identifier	core		676746	0					
ANR	678037	Identifier	anal		676746	1					
ANR	678038	Identifier	reg		676746	1					
ANR	678039	Argument	gp_reg		676746	1					
ANR	678040	Identifier	gp_reg		676746	0					
ANR	678041	Argument	gp		676746	2					
ANR	678042	Identifier	gp		676746	0					
ANR	678043	ExpressionStatement	"( void ) r_anal_esil_parse ( ESIL , esilstr )"	4969:3:148027:148066	676746	6	True				
ANR	678044	CastExpression	"( void ) r_anal_esil_parse ( ESIL , esilstr )"		676746	0					
ANR	678045	CastTarget	void		676746	0					
ANR	678046	CallExpression	"r_anal_esil_parse ( ESIL , esilstr )"		676746	1					
ANR	678047	Callee	r_anal_esil_parse		676746	0					
ANR	678048	Identifier	r_anal_esil_parse		676746	0					
ANR	678049	ArgumentList	ESIL		676746	1					
ANR	678050	Argument	ESIL		676746	0					
ANR	678051	Identifier	ESIL		676746	0					
ANR	678052	Argument	esilstr		676746	1					
ANR	678053	Identifier	esilstr		676746	0					
ANR	678054	SwitchStatement	switch ( op . type )		676746	7					
ANR	678055	Condition	op . type	4973:11:148200:148206	676746	0	True				
ANR	678056	MemberAccess	op . type		676746	0					
ANR	678057	Identifier	op		676746	0					
ANR	678058	Identifier	type		676746	1					
ANR	678059	CompoundStatement		233:20:6648:6648	676746	1					
ANR	678060	Label	case R_ANAL_OP_TYPE_LEA :	4974:3:148214:148237	676746	0	True				
ANR	678061	Identifier	R_ANAL_OP_TYPE_LEA		676746	0					
ANR	678062	IfStatement	if ( core -> anal -> cur && arch == R2_ARCH_ARM64 )		676746	1					
ANR	678063	Condition	core -> anal -> cur && arch == R2_ARCH_ARM64	4976:8:148260:148299	676746	0	True				
ANR	678064	AndExpression	core -> anal -> cur && arch == R2_ARCH_ARM64		676746	0		&&			
ANR	678065	PtrMemberAccess	core -> anal -> cur		676746	0					
ANR	678066	PtrMemberAccess	core -> anal		676746	0					
ANR	678067	Identifier	core		676746	0					
ANR	678068	Identifier	anal		676746	1					
ANR	678069	Identifier	cur		676746	1					
ANR	678070	EqualityExpression	arch == R2_ARCH_ARM64		676746	1		==			
ANR	678071	Identifier	arch		676746	0					
ANR	678072	Identifier	R2_ARCH_ARM64		676746	1					
ANR	678073	CompoundStatement		236:50:6741:6741	676746	1					
ANR	678074	IfStatement	if ( CHECKREF ( ESIL -> cur ) )		676746	0					
ANR	678075	Condition	CHECKREF ( ESIL -> cur )	4977:9:148313:148332	676746	0	True				
ANR	678076	CallExpression	CHECKREF ( ESIL -> cur )		676746	0					
ANR	678077	Callee	CHECKREF		676746	0					
ANR	678078	Identifier	CHECKREF		676746	0					
ANR	678079	ArgumentList	ESIL -> cur		676746	1					
ANR	678080	Argument	ESIL -> cur		676746	0					
ANR	678081	PtrMemberAccess	ESIL -> cur		676746	0					
ANR	678082	Identifier	ESIL		676746	0					
ANR	678083	Identifier	cur		676746	1					
ANR	678084	CompoundStatement		237:31:6774:6774	676746	1					
ANR	678085	ExpressionStatement	"r_anal_xrefs_set ( core -> anal , cur , ESIL -> cur , R_ANAL_REF_TYPE_STRING )"	4978:6:148343:148412	676746	0	True				
ANR	678086	CallExpression	"r_anal_xrefs_set ( core -> anal , cur , ESIL -> cur , R_ANAL_REF_TYPE_STRING )"		676746	0					
ANR	678087	Callee	r_anal_xrefs_set		676746	0					
ANR	678088	Identifier	r_anal_xrefs_set		676746	0					
ANR	678089	ArgumentList	core -> anal		676746	1					
ANR	678090	Argument	core -> anal		676746	0					
ANR	678091	PtrMemberAccess	core -> anal		676746	0					
ANR	678092	Identifier	core		676746	0					
ANR	678093	Identifier	anal		676746	1					
ANR	678094	Argument	cur		676746	1					
ANR	678095	Identifier	cur		676746	0					
ANR	678096	Argument	ESIL -> cur		676746	2					
ANR	678097	PtrMemberAccess	ESIL -> cur		676746	0					
ANR	678098	Identifier	ESIL		676746	0					
ANR	678099	Identifier	cur		676746	1					
ANR	678100	Argument	R_ANAL_REF_TYPE_STRING		676746	3					
ANR	678101	Identifier	R_ANAL_REF_TYPE_STRING		676746	0					
ANR	678102	ElseStatement	else		676746	0					
ANR	678103	IfStatement	if ( ( target && op . ptr == ntarget ) || ! target )		676746	0					
ANR	678104	Condition	( target && op . ptr == ntarget ) || ! target	4980:15:148436:148475	676746	0	True				
ANR	678105	OrExpression	( target && op . ptr == ntarget ) || ! target		676746	0		||			
ANR	678106	AndExpression	target && op . ptr == ntarget		676746	0		&&			
ANR	678107	Identifier	target		676746	0					
ANR	678108	EqualityExpression	op . ptr == ntarget		676746	1		==			
ANR	678109	MemberAccess	op . ptr		676746	0					
ANR	678110	Identifier	op		676746	0					
ANR	678111	Identifier	ptr		676746	1					
ANR	678112	Identifier	ntarget		676746	1					
ANR	678113	UnaryOperationExpression	! target		676746	1					
ANR	678114	UnaryOperator	!		676746	0					
ANR	678115	Identifier	target		676746	1					
ANR	678116	CompoundStatement		240:57:6917:6917	676746	1					
ANR	678117	IfStatement	if ( CHECKREF ( ESIL -> cur ) )		676746	0					
ANR	678118	Condition	CHECKREF ( ESIL -> cur )	4982:9:148560:148579	676746	0	True				
ANR	678119	CallExpression	CHECKREF ( ESIL -> cur )		676746	0					
ANR	678120	Callee	CHECKREF		676746	0					
ANR	678121	Identifier	CHECKREF		676746	0					
ANR	678122	ArgumentList	ESIL -> cur		676746	1					
ANR	678123	Argument	ESIL -> cur		676746	0					
ANR	678124	PtrMemberAccess	ESIL -> cur		676746	0					
ANR	678125	Identifier	ESIL		676746	0					
ANR	678126	Identifier	cur		676746	1					
ANR	678127	CompoundStatement		242:31:7021:7021	676746	1					
ANR	678128	IfStatement	"if ( op . ptr && r_io_is_valid_offset ( core -> io , op . ptr , ! core -> anal -> opt . noncode ) )"		676746	0					
ANR	678129	Condition	"op . ptr && r_io_is_valid_offset ( core -> io , op . ptr , ! core -> anal -> opt . noncode )"	4983:10:148594:148668	676746	0	True				
ANR	678130	AndExpression	"op . ptr && r_io_is_valid_offset ( core -> io , op . ptr , ! core -> anal -> opt . noncode )"		676746	0		&&			
ANR	678131	MemberAccess	op . ptr		676746	0					
ANR	678132	Identifier	op		676746	0					
ANR	678133	Identifier	ptr		676746	1					
ANR	678134	CallExpression	"r_io_is_valid_offset ( core -> io , op . ptr , ! core -> anal -> opt . noncode )"		676746	1					
ANR	678135	Callee	r_io_is_valid_offset		676746	0					
ANR	678136	Identifier	r_io_is_valid_offset		676746	0					
ANR	678137	ArgumentList	core -> io		676746	1					
ANR	678138	Argument	core -> io		676746	0					
ANR	678139	PtrMemberAccess	core -> io		676746	0					
ANR	678140	Identifier	core		676746	0					
ANR	678141	Identifier	io		676746	1					
ANR	678142	Argument	op . ptr		676746	1					
ANR	678143	MemberAccess	op . ptr		676746	0					
ANR	678144	Identifier	op		676746	0					
ANR	678145	Identifier	ptr		676746	1					
ANR	678146	Argument	! core -> anal -> opt . noncode		676746	2					
ANR	678147	UnaryOperationExpression	! core -> anal -> opt . noncode		676746	0					
ANR	678148	UnaryOperator	!		676746	0					
ANR	678149	MemberAccess	core -> anal -> opt . noncode		676746	1					
ANR	678150	PtrMemberAccess	core -> anal -> opt		676746	0					
ANR	678151	PtrMemberAccess	core -> anal		676746	0					
ANR	678152	Identifier	core		676746	0					
ANR	678153	Identifier	anal		676746	1					
ANR	678154	Identifier	opt		676746	1					
ANR	678155	Identifier	noncode		676746	1					
ANR	678156	CompoundStatement		243:87:7110:7110	676746	1					
ANR	678157	ExpressionStatement	"r_anal_xrefs_set ( core -> anal , cur , op . ptr , R_ANAL_REF_TYPE_STRING )"	4984:7:148680:148746	676746	0	True				
ANR	678158	CallExpression	"r_anal_xrefs_set ( core -> anal , cur , op . ptr , R_ANAL_REF_TYPE_STRING )"		676746	0					
ANR	678159	Callee	r_anal_xrefs_set		676746	0					
ANR	678160	Identifier	r_anal_xrefs_set		676746	0					
ANR	678161	ArgumentList	core -> anal		676746	1					
ANR	678162	Argument	core -> anal		676746	0					
ANR	678163	PtrMemberAccess	core -> anal		676746	0					
ANR	678164	Identifier	core		676746	0					
ANR	678165	Identifier	anal		676746	1					
ANR	678166	Argument	cur		676746	1					
ANR	678167	Identifier	cur		676746	0					
ANR	678168	Argument	op . ptr		676746	2					
ANR	678169	MemberAccess	op . ptr		676746	0					
ANR	678170	Identifier	op		676746	0					
ANR	678171	Identifier	ptr		676746	1					
ANR	678172	Argument	R_ANAL_REF_TYPE_STRING		676746	3					
ANR	678173	Identifier	R_ANAL_REF_TYPE_STRING		676746	0					
ANR	678174	ElseStatement	else		676746	0					
ANR	678175	CompoundStatement		245:13:7200:7200	676746	0					
ANR	678176	ExpressionStatement	"r_anal_xrefs_set ( core -> anal , cur , ESIL -> cur , R_ANAL_REF_TYPE_STRING )"	4986:7:148770:148839	676746	0	True				
ANR	678177	CallExpression	"r_anal_xrefs_set ( core -> anal , cur , ESIL -> cur , R_ANAL_REF_TYPE_STRING )"		676746	0					
ANR	678178	Callee	r_anal_xrefs_set		676746	0					
ANR	678179	Identifier	r_anal_xrefs_set		676746	0					
ANR	678180	ArgumentList	core -> anal		676746	1					
ANR	678181	Argument	core -> anal		676746	0					
ANR	678182	PtrMemberAccess	core -> anal		676746	0					
ANR	678183	Identifier	core		676746	0					
ANR	678184	Identifier	anal		676746	1					
ANR	678185	Argument	cur		676746	1					
ANR	678186	Identifier	cur		676746	0					
ANR	678187	Argument	ESIL -> cur		676746	2					
ANR	678188	PtrMemberAccess	ESIL -> cur		676746	0					
ANR	678189	Identifier	ESIL		676746	0					
ANR	678190	Identifier	cur		676746	1					
ANR	678191	Argument	R_ANAL_REF_TYPE_STRING		676746	3					
ANR	678192	Identifier	R_ANAL_REF_TYPE_STRING		676746	0					
ANR	678193	IfStatement	if ( cfg_anal_strings )		676746	2					
ANR	678194	Condition	cfg_anal_strings	4990:8:148870:148885	676746	0	True				
ANR	678195	Identifier	cfg_anal_strings		676746	0					
ANR	678196	CompoundStatement		250:26:7327:7327	676746	1					
ANR	678197	ExpressionStatement	"add_string_ref ( core , op . addr , op . ptr )"	4991:5:148895:148933	676746	0	True				
ANR	678198	CallExpression	"add_string_ref ( core , op . addr , op . ptr )"		676746	0					
ANR	678199	Callee	add_string_ref		676746	0					
ANR	678200	Identifier	add_string_ref		676746	0					
ANR	678201	ArgumentList	core		676746	1					
ANR	678202	Argument	core		676746	0					
ANR	678203	Identifier	core		676746	0					
ANR	678204	Argument	op . addr		676746	1					
ANR	678205	MemberAccess	op . addr		676746	0					
ANR	678206	Identifier	op		676746	0					
ANR	678207	Identifier	addr		676746	1					
ANR	678208	Argument	op . ptr		676746	2					
ANR	678209	MemberAccess	op . ptr		676746	0					
ANR	678210	Identifier	op		676746	0					
ANR	678211	Identifier	ptr		676746	1					
ANR	678212	BreakStatement	break ;	4993:4:148945:148950	676746	3	True				
ANR	678213	Label	case R_ANAL_OP_TYPE_ADD :	4994:3:148955:148978	676746	4	True				
ANR	678214	Identifier	R_ANAL_OP_TYPE_ADD		676746	0					
ANR	678215	IfStatement	"if ( core -> anal -> cur && ! strcmp ( core -> anal -> cur -> arch , ""arm"" ) )"		676746	5					
ANR	678216	Condition	"core -> anal -> cur && ! strcmp ( core -> anal -> cur -> arch , ""arm"" )"	4996:8:149046:149102	676746	0	True				
ANR	678217	AndExpression	"core -> anal -> cur && ! strcmp ( core -> anal -> cur -> arch , ""arm"" )"		676746	0		&&			
ANR	678218	PtrMemberAccess	core -> anal -> cur		676746	0					
ANR	678219	PtrMemberAccess	core -> anal		676746	0					
ANR	678220	Identifier	core		676746	0					
ANR	678221	Identifier	anal		676746	1					
ANR	678222	Identifier	cur		676746	1					
ANR	678223	UnaryOperationExpression	"! strcmp ( core -> anal -> cur -> arch , ""arm"" )"		676746	1					
ANR	678224	UnaryOperator	!		676746	0					
ANR	678225	CallExpression	"strcmp ( core -> anal -> cur -> arch , ""arm"" )"		676746	1					
ANR	678226	Callee	strcmp		676746	0					
ANR	678227	Identifier	strcmp		676746	0					
ANR	678228	ArgumentList	core -> anal -> cur -> arch		676746	1					
ANR	678229	Argument	core -> anal -> cur -> arch		676746	0					
ANR	678230	PtrMemberAccess	core -> anal -> cur -> arch		676746	0					
ANR	678231	PtrMemberAccess	core -> anal -> cur		676746	0					
ANR	678232	PtrMemberAccess	core -> anal		676746	0					
ANR	678233	Identifier	core		676746	0					
ANR	678234	Identifier	anal		676746	1					
ANR	678235	Identifier	cur		676746	1					
ANR	678236	Identifier	arch		676746	1					
ANR	678237	Argument	"""arm"""		676746	1					
ANR	678238	PrimaryExpression	"""arm"""		676746	0					
ANR	678239	CompoundStatement		258:5:7613:7633	676746	1					
ANR	678240	IdentifierDeclStatement	ut64 dst = ESIL -> cur ;	4998:5:149174:149194	676746	0	True				
ANR	678241	IdentifierDecl	dst = ESIL -> cur		676746	0					
ANR	678242	IdentifierDeclType	ut64		676746	0					
ANR	678243	Identifier	dst		676746	1					
ANR	678244	AssignmentExpression	dst = ESIL -> cur		676746	2		=			
ANR	678245	Identifier	dst		676746	0					
ANR	678246	PtrMemberAccess	ESIL -> cur		676746	1					
ANR	678247	Identifier	ESIL		676746	0					
ANR	678248	Identifier	cur		676746	1					
ANR	678249	IfStatement	if ( ( target && dst == ntarget ) || ! target )		676746	1					
ANR	678250	Condition	( target && dst == ntarget ) || ! target	4999:9:149205:149241	676746	0	True				
ANR	678251	OrExpression	( target && dst == ntarget ) || ! target		676746	0		||			
ANR	678252	AndExpression	target && dst == ntarget		676746	0		&&			
ANR	678253	Identifier	target		676746	0					
ANR	678254	EqualityExpression	dst == ntarget		676746	1		==			
ANR	678255	Identifier	dst		676746	0					
ANR	678256	Identifier	ntarget		676746	1					
ANR	678257	UnaryOperationExpression	! target		676746	1					
ANR	678258	UnaryOperator	!		676746	0					
ANR	678259	Identifier	target		676746	1					
ANR	678260	CompoundStatement		259:48:7683:7683	676746	1					
ANR	678261	IfStatement	if ( CHECKREF ( dst ) )		676746	0					
ANR	678262	Condition	CHECKREF ( dst )	5000:10:149256:149269	676746	0	True				
ANR	678263	CallExpression	CHECKREF ( dst )		676746	0					
ANR	678264	Callee	CHECKREF		676746	0					
ANR	678265	Identifier	CHECKREF		676746	0					
ANR	678266	ArgumentList	dst		676746	1					
ANR	678267	Argument	dst		676746	0					
ANR	678268	Identifier	dst		676746	0					
ANR	678269	CompoundStatement		260:26:7711:7711	676746	1					
ANR	678270	IfStatement	if ( ( dst & 1 ) && ( core -> anal -> bits == 16 ) )		676746	0					
ANR	678271	Condition	( dst & 1 ) && ( core -> anal -> bits == 16 )	5001:11:149285:149321	676746	0	True				
ANR	678272	AndExpression	( dst & 1 ) && ( core -> anal -> bits == 16 )		676746	0		&&			
ANR	678273	BitAndExpression	dst & 1		676746	0		&			
ANR	678274	Identifier	dst		676746	0					
ANR	678275	PrimaryExpression	1		676746	1					
ANR	678276	EqualityExpression	core -> anal -> bits == 16		676746	1		==			
ANR	678277	PtrMemberAccess	core -> anal -> bits		676746	0					
ANR	678278	PtrMemberAccess	core -> anal		676746	0					
ANR	678279	Identifier	core		676746	0					
ANR	678280	Identifier	anal		676746	1					
ANR	678281	Identifier	bits		676746	1					
ANR	678282	PrimaryExpression	16		676746	1					
ANR	678283	CompoundStatement		261:50:7763:7763	676746	1					
ANR	678284	ExpressionStatement	dst &= ~1	5002:8:149334:149343	676746	0	True				
ANR	678285	AssignmentExpression	dst &= ~1		676746	0		&=			
ANR	678286	Identifier	dst		676746	0					
ANR	678287	Identifier	~1		676746	1					
ANR	678288	ExpressionStatement	"r_anal_xrefs_set ( core -> anal , cur , dst , R_ANAL_REF_TYPE_DATA )"	5004:7:149361:149422	676746	1	True				
ANR	678289	CallExpression	"r_anal_xrefs_set ( core -> anal , cur , dst , R_ANAL_REF_TYPE_DATA )"		676746	0					
ANR	678290	Callee	r_anal_xrefs_set		676746	0					
ANR	678291	Identifier	r_anal_xrefs_set		676746	0					
ANR	678292	ArgumentList	core -> anal		676746	1					
ANR	678293	Argument	core -> anal		676746	0					
ANR	678294	PtrMemberAccess	core -> anal		676746	0					
ANR	678295	Identifier	core		676746	0					
ANR	678296	Identifier	anal		676746	1					
ANR	678297	Argument	cur		676746	1					
ANR	678298	Identifier	cur		676746	0					
ANR	678299	Argument	dst		676746	2					
ANR	678300	Identifier	dst		676746	0					
ANR	678301	Argument	R_ANAL_REF_TYPE_DATA		676746	3					
ANR	678302	Identifier	R_ANAL_REF_TYPE_DATA		676746	0					
ANR	678303	IfStatement	if ( cfg_anal_strings )		676746	2					
ANR	678304	Condition	cfg_anal_strings	5007:9:149448:149463	676746	0	True				
ANR	678305	Identifier	cfg_anal_strings		676746	0					
ANR	678306	CompoundStatement		267:27:7905:7905	676746	1					
ANR	678307	ExpressionStatement	"add_string_ref ( core , op . addr , dst )"	5008:6:149474:149509	676746	0	True				
ANR	678308	CallExpression	"add_string_ref ( core , op . addr , dst )"		676746	0					
ANR	678309	Callee	add_string_ref		676746	0					
ANR	678310	Identifier	add_string_ref		676746	0					
ANR	678311	ArgumentList	core		676746	1					
ANR	678312	Argument	core		676746	0					
ANR	678313	Identifier	core		676746	0					
ANR	678314	Argument	op . addr		676746	1					
ANR	678315	MemberAccess	op . addr		676746	0					
ANR	678316	Identifier	op		676746	0					
ANR	678317	Identifier	addr		676746	1					
ANR	678318	Argument	dst		676746	2					
ANR	678319	Identifier	dst		676746	0					
ANR	678320	ElseStatement	else		676746	0					
ANR	678321	IfStatement	"if ( ( core -> anal -> bits == 32 && core -> anal -> cur && ! strcmp ( core -> anal -> cur -> arch , ""mips"" ) ) )"		676746	0					
ANR	678322	Condition	"core -> anal -> bits == 32 && core -> anal -> cur && ! strcmp ( core -> anal -> cur -> arch , ""mips"" )"	5010:15:149533:149618	676746	0	True				
ANR	678323	AndExpression	"core -> anal -> bits == 32 && core -> anal -> cur && ! strcmp ( core -> anal -> cur -> arch , ""mips"" )"		676746	0		&&			
ANR	678324	EqualityExpression	core -> anal -> bits == 32		676746	0		==			
ANR	678325	PtrMemberAccess	core -> anal -> bits		676746	0					
ANR	678326	PtrMemberAccess	core -> anal		676746	0					
ANR	678327	Identifier	core		676746	0					
ANR	678328	Identifier	anal		676746	1					
ANR	678329	Identifier	bits		676746	1					
ANR	678330	PrimaryExpression	32		676746	1					
ANR	678331	AndExpression	"core -> anal -> cur && ! strcmp ( core -> anal -> cur -> arch , ""mips"" )"		676746	1		&&			
ANR	678332	PtrMemberAccess	core -> anal -> cur		676746	0					
ANR	678333	PtrMemberAccess	core -> anal		676746	0					
ANR	678334	Identifier	core		676746	0					
ANR	678335	Identifier	anal		676746	1					
ANR	678336	Identifier	cur		676746	1					
ANR	678337	UnaryOperationExpression	"! strcmp ( core -> anal -> cur -> arch , ""mips"" )"		676746	1					
ANR	678338	UnaryOperator	!		676746	0					
ANR	678339	CallExpression	"strcmp ( core -> anal -> cur -> arch , ""mips"" )"		676746	1					
ANR	678340	Callee	strcmp		676746	0					
ANR	678341	Identifier	strcmp		676746	0					
ANR	678342	ArgumentList	core -> anal -> cur -> arch		676746	1					
ANR	678343	Argument	core -> anal -> cur -> arch		676746	0					
ANR	678344	PtrMemberAccess	core -> anal -> cur -> arch		676746	0					
ANR	678345	PtrMemberAccess	core -> anal -> cur		676746	0					
ANR	678346	PtrMemberAccess	core -> anal		676746	0					
ANR	678347	Identifier	core		676746	0					
ANR	678348	Identifier	anal		676746	1					
ANR	678349	Identifier	cur		676746	1					
ANR	678350	Identifier	arch		676746	1					
ANR	678351	Argument	"""mips"""		676746	1					
ANR	678352	PrimaryExpression	"""mips"""		676746	0					
ANR	678353	CompoundStatement		271:5:8067:8087	676746	1					
ANR	678354	IdentifierDeclStatement	ut64 dst = ESIL -> cur ;	5011:5:149628:149648	676746	0	True				
ANR	678355	IdentifierDecl	dst = ESIL -> cur		676746	0					
ANR	678356	IdentifierDeclType	ut64		676746	0					
ANR	678357	Identifier	dst		676746	1					
ANR	678358	AssignmentExpression	dst = ESIL -> cur		676746	2		=			
ANR	678359	Identifier	dst		676746	0					
ANR	678360	PtrMemberAccess	ESIL -> cur		676746	1					
ANR	678361	Identifier	ESIL		676746	0					
ANR	678362	Identifier	cur		676746	1					
ANR	678363	IfStatement	if ( ! op . src [ 0 ] || ! op . src [ 0 ] -> reg || ! op . src [ 0 ] -> reg -> name )		676746	1					
ANR	678364	Condition	! op . src [ 0 ] || ! op . src [ 0 ] -> reg || ! op . src [ 0 ] -> reg -> name	5012:9:149659:149712	676746	0	True				
ANR	678365	OrExpression	! op . src [ 0 ] || ! op . src [ 0 ] -> reg || ! op . src [ 0 ] -> reg -> name		676746	0		||			
ANR	678366	UnaryOperationExpression	! op . src [ 0 ]		676746	0					
ANR	678367	UnaryOperator	!		676746	0					
ANR	678368	ArrayIndexing	op . src [ 0 ]		676746	1					
ANR	678369	MemberAccess	op . src		676746	0					
ANR	678370	Identifier	op		676746	0					
ANR	678371	Identifier	src		676746	1					
ANR	678372	PrimaryExpression	0		676746	1					
ANR	678373	OrExpression	! op . src [ 0 ] -> reg || ! op . src [ 0 ] -> reg -> name		676746	1		||			
ANR	678374	UnaryOperationExpression	! op . src [ 0 ] -> reg		676746	0					
ANR	678375	UnaryOperator	!		676746	0					
ANR	678376	PtrMemberAccess	op . src [ 0 ] -> reg		676746	1					
ANR	678377	ArrayIndexing	op . src [ 0 ]		676746	0					
ANR	678378	MemberAccess	op . src		676746	0					
ANR	678379	Identifier	op		676746	0					
ANR	678380	Identifier	src		676746	1					
ANR	678381	PrimaryExpression	0		676746	1					
ANR	678382	Identifier	reg		676746	1					
ANR	678383	UnaryOperationExpression	! op . src [ 0 ] -> reg -> name		676746	1					
ANR	678384	UnaryOperator	!		676746	0					
ANR	678385	PtrMemberAccess	op . src [ 0 ] -> reg -> name		676746	1					
ANR	678386	PtrMemberAccess	op . src [ 0 ] -> reg		676746	0					
ANR	678387	ArrayIndexing	op . src [ 0 ]		676746	0					
ANR	678388	MemberAccess	op . src		676746	0					
ANR	678389	Identifier	op		676746	0					
ANR	678390	Identifier	src		676746	1					
ANR	678391	PrimaryExpression	0		676746	1					
ANR	678392	Identifier	reg		676746	1					
ANR	678393	Identifier	name		676746	1					
ANR	678394	CompoundStatement		272:65:8154:8154	676746	1					
ANR	678395	BreakStatement	break ;	5013:6:149723:149728	676746	0	True				
ANR	678396	IfStatement	"if ( ! strcmp ( op . src [ 0 ] -> reg -> name , ""sp"" ) )"		676746	2					
ANR	678397	Condition	"! strcmp ( op . src [ 0 ] -> reg -> name , ""sp"" )"	5015:9:149746:149781	676746	0	True				
ANR	678398	UnaryOperationExpression	"! strcmp ( op . src [ 0 ] -> reg -> name , ""sp"" )"		676746	0					
ANR	678399	UnaryOperator	!		676746	0					
ANR	678400	CallExpression	"strcmp ( op . src [ 0 ] -> reg -> name , ""sp"" )"		676746	1					
ANR	678401	Callee	strcmp		676746	0					
ANR	678402	Identifier	strcmp		676746	0					
ANR	678403	ArgumentList	op . src [ 0 ] -> reg -> name		676746	1					
ANR	678404	Argument	op . src [ 0 ] -> reg -> name		676746	0					
ANR	678405	PtrMemberAccess	op . src [ 0 ] -> reg -> name		676746	0					
ANR	678406	PtrMemberAccess	op . src [ 0 ] -> reg		676746	0					
ANR	678407	ArrayIndexing	op . src [ 0 ]		676746	0					
ANR	678408	MemberAccess	op . src		676746	0					
ANR	678409	Identifier	op		676746	0					
ANR	678410	Identifier	src		676746	1					
ANR	678411	PrimaryExpression	0		676746	1					
ANR	678412	Identifier	reg		676746	1					
ANR	678413	Identifier	name		676746	1					
ANR	678414	Argument	"""sp"""		676746	1					
ANR	678415	PrimaryExpression	"""sp"""		676746	0					
ANR	678416	CompoundStatement		275:47:8223:8223	676746	1					
ANR	678417	BreakStatement	break ;	5016:6:149792:149797	676746	0	True				
ANR	678418	IfStatement	"if ( ! strcmp ( op . src [ 0 ] -> reg -> name , ""zero"" ) )"		676746	3					
ANR	678419	Condition	"! strcmp ( op . src [ 0 ] -> reg -> name , ""zero"" )"	5018:9:149815:149852	676746	0	True				
ANR	678420	UnaryOperationExpression	"! strcmp ( op . src [ 0 ] -> reg -> name , ""zero"" )"		676746	0					
ANR	678421	UnaryOperator	!		676746	0					
ANR	678422	CallExpression	"strcmp ( op . src [ 0 ] -> reg -> name , ""zero"" )"		676746	1					
ANR	678423	Callee	strcmp		676746	0					
ANR	678424	Identifier	strcmp		676746	0					
ANR	678425	ArgumentList	op . src [ 0 ] -> reg -> name		676746	1					
ANR	678426	Argument	op . src [ 0 ] -> reg -> name		676746	0					
ANR	678427	PtrMemberAccess	op . src [ 0 ] -> reg -> name		676746	0					
ANR	678428	PtrMemberAccess	op . src [ 0 ] -> reg		676746	0					
ANR	678429	ArrayIndexing	op . src [ 0 ]		676746	0					
ANR	678430	MemberAccess	op . src		676746	0					
ANR	678431	Identifier	op		676746	0					
ANR	678432	Identifier	src		676746	1					
ANR	678433	PrimaryExpression	0		676746	1					
ANR	678434	Identifier	reg		676746	1					
ANR	678435	Identifier	name		676746	1					
ANR	678436	Argument	"""zero"""		676746	1					
ANR	678437	PrimaryExpression	"""zero"""		676746	0					
ANR	678438	CompoundStatement		278:49:8294:8294	676746	1					
ANR	678439	BreakStatement	break ;	5019:6:149863:149868	676746	0	True				
ANR	678440	IfStatement	if ( ( target && dst == ntarget ) || ! target )		676746	4					
ANR	678441	Condition	( target && dst == ntarget ) || ! target	5021:9:149886:149922	676746	0	True				
ANR	678442	OrExpression	( target && dst == ntarget ) || ! target		676746	0		||			
ANR	678443	AndExpression	target && dst == ntarget		676746	0		&&			
ANR	678444	Identifier	target		676746	0					
ANR	678445	EqualityExpression	dst == ntarget		676746	1		==			
ANR	678446	Identifier	dst		676746	0					
ANR	678447	Identifier	ntarget		676746	1					
ANR	678448	UnaryOperationExpression	! target		676746	1					
ANR	678449	UnaryOperator	!		676746	0					
ANR	678450	Identifier	target		676746	1					
ANR	678451	CompoundStatement		281:48:8364:8364	676746	1					
ANR	678452	IfStatement	"if ( dst > 0xffff && op . src [ 1 ] && ( dst & 0xffff ) == ( op . src [ 1 ] -> imm & 0xffff ) && myvalid ( mycore -> io , dst ) )"		676746	0					
ANR	678453	Condition	"dst > 0xffff && op . src [ 1 ] && ( dst & 0xffff ) == ( op . src [ 1 ] -> imm & 0xffff ) && myvalid ( mycore -> io , dst )"	5022:10:149937:150037	676746	0	True				
ANR	678454	AndExpression	"dst > 0xffff && op . src [ 1 ] && ( dst & 0xffff ) == ( op . src [ 1 ] -> imm & 0xffff ) && myvalid ( mycore -> io , dst )"		676746	0		&&			
ANR	678455	RelationalExpression	dst > 0xffff		676746	0		>			
ANR	678456	Identifier	dst		676746	0					
ANR	678457	PrimaryExpression	0xffff		676746	1					
ANR	678458	AndExpression	"op . src [ 1 ] && ( dst & 0xffff ) == ( op . src [ 1 ] -> imm & 0xffff ) && myvalid ( mycore -> io , dst )"		676746	1		&&			
ANR	678459	ArrayIndexing	op . src [ 1 ]		676746	0					
ANR	678460	MemberAccess	op . src		676746	0					
ANR	678461	Identifier	op		676746	0					
ANR	678462	Identifier	src		676746	1					
ANR	678463	PrimaryExpression	1		676746	1					
ANR	678464	AndExpression	"( dst & 0xffff ) == ( op . src [ 1 ] -> imm & 0xffff ) && myvalid ( mycore -> io , dst )"		676746	1		&&			
ANR	678465	EqualityExpression	( dst & 0xffff ) == ( op . src [ 1 ] -> imm & 0xffff )		676746	0		==			
ANR	678466	BitAndExpression	dst & 0xffff		676746	0		&			
ANR	678467	Identifier	dst		676746	0					
ANR	678468	PrimaryExpression	0xffff		676746	1					
ANR	678469	BitAndExpression	op . src [ 1 ] -> imm & 0xffff		676746	1		&			
ANR	678470	PtrMemberAccess	op . src [ 1 ] -> imm		676746	0					
ANR	678471	ArrayIndexing	op . src [ 1 ]		676746	0					
ANR	678472	MemberAccess	op . src		676746	0					
ANR	678473	Identifier	op		676746	0					
ANR	678474	Identifier	src		676746	1					
ANR	678475	PrimaryExpression	1		676746	1					
ANR	678476	Identifier	imm		676746	1					
ANR	678477	PrimaryExpression	0xffff		676746	1					
ANR	678478	CallExpression	"myvalid ( mycore -> io , dst )"		676746	1					
ANR	678479	Callee	myvalid		676746	0					
ANR	678480	Identifier	myvalid		676746	0					
ANR	678481	ArgumentList	mycore -> io		676746	1					
ANR	678482	Argument	mycore -> io		676746	0					
ANR	678483	PtrMemberAccess	mycore -> io		676746	0					
ANR	678484	Identifier	mycore		676746	0					
ANR	678485	Identifier	io		676746	1					
ANR	678486	Argument	dst		676746	1					
ANR	678487	Identifier	dst		676746	0					
ANR	678488	CompoundStatement		284:7:8509:8518	676746	1					
ANR	678489	IdentifierDeclStatement	RFlagItem * f ;	5023:7:150049:150061	676746	0	True				
ANR	678490	IdentifierDecl	* f		676746	0					
ANR	678491	IdentifierDeclType	RFlagItem *		676746	0					
ANR	678492	Identifier	f		676746	1					
ANR	678493	IdentifierDeclStatement	char * str ;	5024:7:150070:150079	676746	1	True				
ANR	678494	IdentifierDecl	* str		676746	0					
ANR	678495	IdentifierDeclType	char *		676746	0					
ANR	678496	Identifier	str		676746	1					
ANR	678497	IfStatement	if ( CHECKREF ( dst ) || CHECKREF ( cur ) )		676746	2					
ANR	678498	Condition	CHECKREF ( dst ) || CHECKREF ( cur )	5025:11:150092:150123	676746	0	True				
ANR	678499	OrExpression	CHECKREF ( dst ) || CHECKREF ( cur )		676746	0		||			
ANR	678500	CallExpression	CHECKREF ( dst )		676746	0					
ANR	678501	Callee	CHECKREF		676746	0					
ANR	678502	Identifier	CHECKREF		676746	0					
ANR	678503	ArgumentList	dst		676746	1					
ANR	678504	Argument	dst		676746	0					
ANR	678505	Identifier	dst		676746	0					
ANR	678506	CallExpression	CHECKREF ( cur )		676746	1					
ANR	678507	Callee	CHECKREF		676746	0					
ANR	678508	Identifier	CHECKREF		676746	0					
ANR	678509	ArgumentList	cur		676746	1					
ANR	678510	Argument	cur		676746	0					
ANR	678511	Identifier	cur		676746	0					
ANR	678512	CompoundStatement		285:45:8565:8565	676746	1					
ANR	678513	ExpressionStatement	"r_anal_xrefs_set ( core -> anal , cur , dst , R_ANAL_REF_TYPE_DATA )"	5026:8:150136:150197	676746	0	True				
ANR	678514	CallExpression	"r_anal_xrefs_set ( core -> anal , cur , dst , R_ANAL_REF_TYPE_DATA )"		676746	0					
ANR	678515	Callee	r_anal_xrefs_set		676746	0					
ANR	678516	Identifier	r_anal_xrefs_set		676746	0					
ANR	678517	ArgumentList	core -> anal		676746	1					
ANR	678518	Argument	core -> anal		676746	0					
ANR	678519	PtrMemberAccess	core -> anal		676746	0					
ANR	678520	Identifier	core		676746	0					
ANR	678521	Identifier	anal		676746	1					
ANR	678522	Argument	cur		676746	1					
ANR	678523	Identifier	cur		676746	0					
ANR	678524	Argument	dst		676746	2					
ANR	678525	Identifier	dst		676746	0					
ANR	678526	Argument	R_ANAL_REF_TYPE_DATA		676746	3					
ANR	678527	Identifier	R_ANAL_REF_TYPE_DATA		676746	0					
ANR	678528	IfStatement	if ( cfg_anal_strings )		676746	1					
ANR	678529	Condition	cfg_anal_strings	5027:12:150211:150226	676746	0	True				
ANR	678530	Identifier	cfg_anal_strings		676746	0					
ANR	678531	CompoundStatement		287:30:8668:8668	676746	1					
ANR	678532	ExpressionStatement	"add_string_ref ( core , op . addr , dst )"	5028:9:150240:150275	676746	0	True				
ANR	678533	CallExpression	"add_string_ref ( core , op . addr , dst )"		676746	0					
ANR	678534	Callee	add_string_ref		676746	0					
ANR	678535	Identifier	add_string_ref		676746	0					
ANR	678536	ArgumentList	core		676746	1					
ANR	678537	Argument	core		676746	0					
ANR	678538	Identifier	core		676746	0					
ANR	678539	Argument	op . addr		676746	1					
ANR	678540	MemberAccess	op . addr		676746	0					
ANR	678541	Identifier	op		676746	0					
ANR	678542	Identifier	addr		676746	1					
ANR	678543	Argument	dst		676746	2					
ANR	678544	Identifier	dst		676746	0					
ANR	678545	IfStatement	"if ( ( f = r_core_flag_get_by_spaces ( core -> flags , dst ) ) )"		676746	2					
ANR	678546	Condition	"f = r_core_flag_get_by_spaces ( core -> flags , dst )"	5030:12:150299:150348	676746	0	True				
ANR	678547	AssignmentExpression	"f = r_core_flag_get_by_spaces ( core -> flags , dst )"		676746	0		=			
ANR	678548	Identifier	f		676746	0					
ANR	678549	CallExpression	"r_core_flag_get_by_spaces ( core -> flags , dst )"		676746	1					
ANR	678550	Callee	r_core_flag_get_by_spaces		676746	0					
ANR	678551	Identifier	r_core_flag_get_by_spaces		676746	0					
ANR	678552	ArgumentList	core -> flags		676746	1					
ANR	678553	Argument	core -> flags		676746	0					
ANR	678554	PtrMemberAccess	core -> flags		676746	0					
ANR	678555	Identifier	core		676746	0					
ANR	678556	Identifier	flags		676746	1					
ANR	678557	Argument	dst		676746	1					
ANR	678558	Identifier	dst		676746	0					
ANR	678559	CompoundStatement		290:64:8790:8790	676746	1					
ANR	678560	ExpressionStatement	"r_meta_set_string ( core -> anal , R_META_TYPE_COMMENT , cur , f -> name )"	5031:9:150362:150427	676746	0	True				
ANR	678561	CallExpression	"r_meta_set_string ( core -> anal , R_META_TYPE_COMMENT , cur , f -> name )"		676746	0					
ANR	678562	Callee	r_meta_set_string		676746	0					
ANR	678563	Identifier	r_meta_set_string		676746	0					
ANR	678564	ArgumentList	core -> anal		676746	1					
ANR	678565	Argument	core -> anal		676746	0					
ANR	678566	PtrMemberAccess	core -> anal		676746	0					
ANR	678567	Identifier	core		676746	0					
ANR	678568	Identifier	anal		676746	1					
ANR	678569	Argument	R_META_TYPE_COMMENT		676746	1					
ANR	678570	Identifier	R_META_TYPE_COMMENT		676746	0					
ANR	678571	Argument	cur		676746	2					
ANR	678572	Identifier	cur		676746	0					
ANR	678573	Argument	f -> name		676746	3					
ANR	678574	PtrMemberAccess	f -> name		676746	0					
ANR	678575	Identifier	f		676746	0					
ANR	678576	Identifier	name		676746	1					
ANR	678577	ElseStatement	else		676746	0					
ANR	678578	IfStatement	"if ( ( str = is_string_at ( mycore , dst , NULL ) ) )"		676746	0					
ANR	678579	Condition	"str = is_string_at ( mycore , dst , NULL )"	5032:19:150448:150487	676746	0	True				
ANR	678580	AssignmentExpression	"str = is_string_at ( mycore , dst , NULL )"		676746	0		=			
ANR	678581	Identifier	str		676746	0					
ANR	678582	CallExpression	"is_string_at ( mycore , dst , NULL )"		676746	1					
ANR	678583	Callee	is_string_at		676746	0					
ANR	678584	Identifier	is_string_at		676746	0					
ANR	678585	ArgumentList	mycore		676746	1					
ANR	678586	Argument	mycore		676746	0					
ANR	678587	Identifier	mycore		676746	0					
ANR	678588	Argument	dst		676746	1					
ANR	678589	Identifier	dst		676746	0					
ANR	678590	Argument	NULL		676746	2					
ANR	678591	Identifier	NULL		676746	0					
ANR	678592	CompoundStatement		293:9:8940:8983	676746	1					
ANR	678593	IdentifierDeclStatement	"char * str2 = sdb_fmt ( ""esilref: '%s'"" , str ) ;"	5033:9:150501:150544	676746	0	True				
ANR	678594	IdentifierDecl	"* str2 = sdb_fmt ( ""esilref: '%s'"" , str )"		676746	0					
ANR	678595	IdentifierDeclType	char *		676746	0					
ANR	678596	Identifier	str2		676746	1					
ANR	678597	AssignmentExpression	"* str2 = sdb_fmt ( ""esilref: '%s'"" , str )"		676746	2		=			
ANR	678598	Identifier	str2		676746	0					
ANR	678599	CallExpression	"sdb_fmt ( ""esilref: '%s'"" , str )"		676746	1					
ANR	678600	Callee	sdb_fmt		676746	0					
ANR	678601	Identifier	sdb_fmt		676746	0					
ANR	678602	ArgumentList	"""esilref: '%s'"""		676746	1					
ANR	678603	Argument	"""esilref: '%s'"""		676746	0					
ANR	678604	PrimaryExpression	"""esilref: '%s'"""		676746	0					
ANR	678605	Argument	str		676746	1					
ANR	678606	Identifier	str		676746	0					
ANR	678607	ExpressionStatement	"r_str_replace_char ( str2 , '%' , '&' )"	5037:9:150753:150788	676746	1	True				
ANR	678608	CallExpression	"r_str_replace_char ( str2 , '%' , '&' )"		676746	0					
ANR	678609	Callee	r_str_replace_char		676746	0					
ANR	678610	Identifier	r_str_replace_char		676746	0					
ANR	678611	ArgumentList	str2		676746	1					
ANR	678612	Argument	str2		676746	0					
ANR	678613	Identifier	str2		676746	0					
ANR	678614	Argument	'%'		676746	1					
ANR	678615	PrimaryExpression	'%'		676746	0					
ANR	678616	Argument	'&'		676746	2					
ANR	678617	PrimaryExpression	'&'		676746	0					
ANR	678618	ExpressionStatement	"r_meta_set_string ( core -> anal , R_META_TYPE_COMMENT , cur , str2 )"	5038:9:150799:150861	676746	2	True				
ANR	678619	CallExpression	"r_meta_set_string ( core -> anal , R_META_TYPE_COMMENT , cur , str2 )"		676746	0					
ANR	678620	Callee	r_meta_set_string		676746	0					
ANR	678621	Identifier	r_meta_set_string		676746	0					
ANR	678622	ArgumentList	core -> anal		676746	1					
ANR	678623	Argument	core -> anal		676746	0					
ANR	678624	PtrMemberAccess	core -> anal		676746	0					
ANR	678625	Identifier	core		676746	0					
ANR	678626	Identifier	anal		676746	1					
ANR	678627	Argument	R_META_TYPE_COMMENT		676746	1					
ANR	678628	Identifier	R_META_TYPE_COMMENT		676746	0					
ANR	678629	Argument	cur		676746	2					
ANR	678630	Identifier	cur		676746	0					
ANR	678631	Argument	str2		676746	3					
ANR	678632	Identifier	str2		676746	0					
ANR	678633	ExpressionStatement	free ( str )	5039:9:150872:150882	676746	3	True				
ANR	678634	CallExpression	free ( str )		676746	0					
ANR	678635	Callee	free		676746	0					
ANR	678636	Identifier	free		676746	0					
ANR	678637	ArgumentList	str		676746	1					
ANR	678638	Argument	str		676746	0					
ANR	678639	Identifier	str		676746	0					
ANR	678640	BreakStatement	break ;	5045:4:150928:150933	676746	6	True				
ANR	678641	Label	case R_ANAL_OP_TYPE_LOAD :	5046:3:150938:150962	676746	7	True				
ANR	678642	Identifier	R_ANAL_OP_TYPE_LOAD		676746	0					
ANR	678643	CompoundStatement		308:5:9414:9444	676746	8					
ANR	678644	IdentifierDeclStatement	ut64 dst = esilbreak_last_read ;	5048:5:150975:151005	676746	0	True				
ANR	678645	IdentifierDecl	dst = esilbreak_last_read		676746	0					
ANR	678646	IdentifierDeclType	ut64		676746	0					
ANR	678647	Identifier	dst		676746	1					
ANR	678648	AssignmentExpression	dst = esilbreak_last_read		676746	2		=			
ANR	678649	Identifier	esilbreak_last_read		676746	0					
ANR	678650	Identifier	esilbreak_last_read		676746	1					
ANR	678651	IfStatement	if ( dst != UT64_MAX && CHECKREF ( dst ) )		676746	1					
ANR	678652	Condition	dst != UT64_MAX && CHECKREF ( dst )	5049:9:151016:151048	676746	0	True				
ANR	678653	AndExpression	dst != UT64_MAX && CHECKREF ( dst )		676746	0		&&			
ANR	678654	EqualityExpression	dst != UT64_MAX		676746	0		!=			
ANR	678655	Identifier	dst		676746	0					
ANR	678656	Identifier	UT64_MAX		676746	1					
ANR	678657	CallExpression	CHECKREF ( dst )		676746	1					
ANR	678658	Callee	CHECKREF		676746	0					
ANR	678659	Identifier	CHECKREF		676746	0					
ANR	678660	ArgumentList	dst		676746	1					
ANR	678661	Argument	dst		676746	0					
ANR	678662	Identifier	dst		676746	0					
ANR	678663	CompoundStatement		309:44:9490:9490	676746	1					
ANR	678664	IfStatement	"if ( myvalid ( mycore -> io , dst ) )"		676746	0					
ANR	678665	Condition	"myvalid ( mycore -> io , dst )"	5050:10:151063:151087	676746	0	True				
ANR	678666	CallExpression	"myvalid ( mycore -> io , dst )"		676746	0					
ANR	678667	Callee	myvalid		676746	0					
ANR	678668	Identifier	myvalid		676746	0					
ANR	678669	ArgumentList	mycore -> io		676746	1					
ANR	678670	Argument	mycore -> io		676746	0					
ANR	678671	PtrMemberAccess	mycore -> io		676746	0					
ANR	678672	Identifier	mycore		676746	0					
ANR	678673	Identifier	io		676746	1					
ANR	678674	Argument	dst		676746	1					
ANR	678675	Identifier	dst		676746	0					
ANR	678676	CompoundStatement		310:37:9529:9529	676746	1					
ANR	678677	ExpressionStatement	"r_anal_xrefs_set ( core -> anal , cur , dst , R_ANAL_REF_TYPE_DATA )"	5051:7:151099:151160	676746	0	True				
ANR	678678	CallExpression	"r_anal_xrefs_set ( core -> anal , cur , dst , R_ANAL_REF_TYPE_DATA )"		676746	0					
ANR	678679	Callee	r_anal_xrefs_set		676746	0					
ANR	678680	Identifier	r_anal_xrefs_set		676746	0					
ANR	678681	ArgumentList	core -> anal		676746	1					
ANR	678682	Argument	core -> anal		676746	0					
ANR	678683	PtrMemberAccess	core -> anal		676746	0					
ANR	678684	Identifier	core		676746	0					
ANR	678685	Identifier	anal		676746	1					
ANR	678686	Argument	cur		676746	1					
ANR	678687	Identifier	cur		676746	0					
ANR	678688	Argument	dst		676746	2					
ANR	678689	Identifier	dst		676746	0					
ANR	678690	Argument	R_ANAL_REF_TYPE_DATA		676746	3					
ANR	678691	Identifier	R_ANAL_REF_TYPE_DATA		676746	0					
ANR	678692	IfStatement	if ( cfg_anal_strings )		676746	1					
ANR	678693	Condition	cfg_anal_strings	5052:11:151173:151188	676746	0	True				
ANR	678694	Identifier	cfg_anal_strings		676746	0					
ANR	678695	CompoundStatement		312:29:9630:9630	676746	1					
ANR	678696	ExpressionStatement	"add_string_ref ( core , op . addr , dst )"	5053:8:151201:151236	676746	0	True				
ANR	678697	CallExpression	"add_string_ref ( core , op . addr , dst )"		676746	0					
ANR	678698	Callee	add_string_ref		676746	0					
ANR	678699	Identifier	add_string_ref		676746	0					
ANR	678700	ArgumentList	core		676746	1					
ANR	678701	Argument	core		676746	0					
ANR	678702	Identifier	core		676746	0					
ANR	678703	Argument	op . addr		676746	1					
ANR	678704	MemberAccess	op . addr		676746	0					
ANR	678705	Identifier	op		676746	0					
ANR	678706	Identifier	addr		676746	1					
ANR	678707	Argument	dst		676746	2					
ANR	678708	Identifier	dst		676746	0					
ANR	678709	ExpressionStatement	dst = esilbreak_last_data	5057:5:151267:151292	676746	2	True				
ANR	678710	AssignmentExpression	dst = esilbreak_last_data		676746	0		=			
ANR	678711	Identifier	dst		676746	0					
ANR	678712	Identifier	esilbreak_last_data		676746	1					
ANR	678713	IfStatement	if ( dst != UT64_MAX && CHECKREF ( dst ) )		676746	3					
ANR	678714	Condition	dst != UT64_MAX && CHECKREF ( dst )	5058:9:151303:151335	676746	0	True				
ANR	678715	AndExpression	dst != UT64_MAX && CHECKREF ( dst )		676746	0		&&			
ANR	678716	EqualityExpression	dst != UT64_MAX		676746	0		!=			
ANR	678717	Identifier	dst		676746	0					
ANR	678718	Identifier	UT64_MAX		676746	1					
ANR	678719	CallExpression	CHECKREF ( dst )		676746	1					
ANR	678720	Callee	CHECKREF		676746	0					
ANR	678721	Identifier	CHECKREF		676746	0					
ANR	678722	ArgumentList	dst		676746	1					
ANR	678723	Argument	dst		676746	0					
ANR	678724	Identifier	dst		676746	0					
ANR	678725	CompoundStatement		318:44:9777:9777	676746	1					
ANR	678726	IfStatement	"if ( myvalid ( mycore -> io , dst ) )"		676746	0					
ANR	678727	Condition	"myvalid ( mycore -> io , dst )"	5059:10:151350:151374	676746	0	True				
ANR	678728	CallExpression	"myvalid ( mycore -> io , dst )"		676746	0					
ANR	678729	Callee	myvalid		676746	0					
ANR	678730	Identifier	myvalid		676746	0					
ANR	678731	ArgumentList	mycore -> io		676746	1					
ANR	678732	Argument	mycore -> io		676746	0					
ANR	678733	PtrMemberAccess	mycore -> io		676746	0					
ANR	678734	Identifier	mycore		676746	0					
ANR	678735	Identifier	io		676746	1					
ANR	678736	Argument	dst		676746	1					
ANR	678737	Identifier	dst		676746	0					
ANR	678738	CompoundStatement		319:37:9816:9816	676746	1					
ANR	678739	ExpressionStatement	"r_anal_xrefs_set ( core -> anal , cur , dst , R_ANAL_REF_TYPE_DATA )"	5060:7:151386:151447	676746	0	True				
ANR	678740	CallExpression	"r_anal_xrefs_set ( core -> anal , cur , dst , R_ANAL_REF_TYPE_DATA )"		676746	0					
ANR	678741	Callee	r_anal_xrefs_set		676746	0					
ANR	678742	Identifier	r_anal_xrefs_set		676746	0					
ANR	678743	ArgumentList	core -> anal		676746	1					
ANR	678744	Argument	core -> anal		676746	0					
ANR	678745	PtrMemberAccess	core -> anal		676746	0					
ANR	678746	Identifier	core		676746	0					
ANR	678747	Identifier	anal		676746	1					
ANR	678748	Argument	cur		676746	1					
ANR	678749	Identifier	cur		676746	0					
ANR	678750	Argument	dst		676746	2					
ANR	678751	Identifier	dst		676746	0					
ANR	678752	Argument	R_ANAL_REF_TYPE_DATA		676746	3					
ANR	678753	Identifier	R_ANAL_REF_TYPE_DATA		676746	0					
ANR	678754	IfStatement	if ( cfg_anal_strings )		676746	1					
ANR	678755	Condition	cfg_anal_strings	5061:11:151460:151475	676746	0	True				
ANR	678756	Identifier	cfg_anal_strings		676746	0					
ANR	678757	CompoundStatement		321:29:9917:9917	676746	1					
ANR	678758	ExpressionStatement	"add_string_ref ( core , op . addr , dst )"	5062:8:151488:151523	676746	0	True				
ANR	678759	CallExpression	"add_string_ref ( core , op . addr , dst )"		676746	0					
ANR	678760	Callee	add_string_ref		676746	0					
ANR	678761	Identifier	add_string_ref		676746	0					
ANR	678762	ArgumentList	core		676746	1					
ANR	678763	Argument	core		676746	0					
ANR	678764	Identifier	core		676746	0					
ANR	678765	Argument	op . addr		676746	1					
ANR	678766	MemberAccess	op . addr		676746	0					
ANR	678767	Identifier	op		676746	0					
ANR	678768	Identifier	addr		676746	1					
ANR	678769	Argument	dst		676746	2					
ANR	678770	Identifier	dst		676746	0					
ANR	678771	BreakStatement	break ;	5067:4:151559:151564	676746	9	True				
ANR	678772	Label	case R_ANAL_OP_TYPE_JMP :	5068:3:151569:151592	676746	10	True				
ANR	678773	Identifier	R_ANAL_OP_TYPE_JMP		676746	0					
ANR	678774	CompoundStatement		330:5:10044:10062	676746	11					
ANR	678775	IdentifierDeclStatement	ut64 dst = op . jump ;	5070:5:151605:151623	676746	0	True				
ANR	678776	IdentifierDecl	dst = op . jump		676746	0					
ANR	678777	IdentifierDeclType	ut64		676746	0					
ANR	678778	Identifier	dst		676746	1					
ANR	678779	AssignmentExpression	dst = op . jump		676746	2		=			
ANR	678780	Identifier	dst		676746	0					
ANR	678781	MemberAccess	op . jump		676746	1					
ANR	678782	Identifier	op		676746	0					
ANR	678783	Identifier	jump		676746	1					
ANR	678784	IfStatement	if ( CHECKREF ( dst ) )		676746	1					
ANR	678785	Condition	CHECKREF ( dst )	5071:9:151634:151647	676746	0	True				
ANR	678786	CallExpression	CHECKREF ( dst )		676746	0					
ANR	678787	Callee	CHECKREF		676746	0					
ANR	678788	Identifier	CHECKREF		676746	0					
ANR	678789	ArgumentList	dst		676746	1					
ANR	678790	Argument	dst		676746	0					
ANR	678791	Identifier	dst		676746	0					
ANR	678792	CompoundStatement		331:25:10089:10089	676746	1					
ANR	678793	IfStatement	"if ( myvalid ( core -> io , dst ) )"		676746	0					
ANR	678794	Condition	"myvalid ( core -> io , dst )"	5072:10:151662:151684	676746	0	True				
ANR	678795	CallExpression	"myvalid ( core -> io , dst )"		676746	0					
ANR	678796	Callee	myvalid		676746	0					
ANR	678797	Identifier	myvalid		676746	0					
ANR	678798	ArgumentList	core -> io		676746	1					
ANR	678799	Argument	core -> io		676746	0					
ANR	678800	PtrMemberAccess	core -> io		676746	0					
ANR	678801	Identifier	core		676746	0					
ANR	678802	Identifier	io		676746	1					
ANR	678803	Argument	dst		676746	1					
ANR	678804	Identifier	dst		676746	0					
ANR	678805	CompoundStatement		332:35:10126:10126	676746	1					
ANR	678806	ExpressionStatement	"r_anal_xrefs_set ( core -> anal , cur , dst , R_ANAL_REF_TYPE_CODE )"	5073:7:151696:151757	676746	0	True				
ANR	678807	CallExpression	"r_anal_xrefs_set ( core -> anal , cur , dst , R_ANAL_REF_TYPE_CODE )"		676746	0					
ANR	678808	Callee	r_anal_xrefs_set		676746	0					
ANR	678809	Identifier	r_anal_xrefs_set		676746	0					
ANR	678810	ArgumentList	core -> anal		676746	1					
ANR	678811	Argument	core -> anal		676746	0					
ANR	678812	PtrMemberAccess	core -> anal		676746	0					
ANR	678813	Identifier	core		676746	0					
ANR	678814	Identifier	anal		676746	1					
ANR	678815	Argument	cur		676746	1					
ANR	678816	Identifier	cur		676746	0					
ANR	678817	Argument	dst		676746	2					
ANR	678818	Identifier	dst		676746	0					
ANR	678819	Argument	R_ANAL_REF_TYPE_CODE		676746	3					
ANR	678820	Identifier	R_ANAL_REF_TYPE_CODE		676746	0					
ANR	678821	BreakStatement	break ;	5077:4:151784:151789	676746	12	True				
ANR	678822	Label	case R_ANAL_OP_TYPE_CALL :	5078:3:151794:151818	676746	13	True				
ANR	678823	Identifier	R_ANAL_OP_TYPE_CALL		676746	0					
ANR	678824	CompoundStatement		340:5:10270:10288	676746	14					
ANR	678825	IdentifierDeclStatement	ut64 dst = op . jump ;	5080:5:151831:151849	676746	0	True				
ANR	678826	IdentifierDecl	dst = op . jump		676746	0					
ANR	678827	IdentifierDeclType	ut64		676746	0					
ANR	678828	Identifier	dst		676746	1					
ANR	678829	AssignmentExpression	dst = op . jump		676746	2		=			
ANR	678830	Identifier	dst		676746	0					
ANR	678831	MemberAccess	op . jump		676746	1					
ANR	678832	Identifier	op		676746	0					
ANR	678833	Identifier	jump		676746	1					
ANR	678834	IfStatement	if ( CHECKREF ( dst ) )		676746	1					
ANR	678835	Condition	CHECKREF ( dst )	5081:9:151860:151873	676746	0	True				
ANR	678836	CallExpression	CHECKREF ( dst )		676746	0					
ANR	678837	Callee	CHECKREF		676746	0					
ANR	678838	Identifier	CHECKREF		676746	0					
ANR	678839	ArgumentList	dst		676746	1					
ANR	678840	Argument	dst		676746	0					
ANR	678841	Identifier	dst		676746	0					
ANR	678842	CompoundStatement		341:25:10315:10315	676746	1					
ANR	678843	IfStatement	"if ( myvalid ( core -> io , dst ) )"		676746	0					
ANR	678844	Condition	"myvalid ( core -> io , dst )"	5082:10:151888:151910	676746	0	True				
ANR	678845	CallExpression	"myvalid ( core -> io , dst )"		676746	0					
ANR	678846	Callee	myvalid		676746	0					
ANR	678847	Identifier	myvalid		676746	0					
ANR	678848	ArgumentList	core -> io		676746	1					
ANR	678849	Argument	core -> io		676746	0					
ANR	678850	PtrMemberAccess	core -> io		676746	0					
ANR	678851	Identifier	core		676746	0					
ANR	678852	Identifier	io		676746	1					
ANR	678853	Argument	dst		676746	1					
ANR	678854	Identifier	dst		676746	0					
ANR	678855	CompoundStatement		342:35:10352:10352	676746	1					
ANR	678856	ExpressionStatement	"r_anal_xrefs_set ( core -> anal , cur , dst , R_ANAL_REF_TYPE_CALL )"	5083:7:151922:151983	676746	0	True				
ANR	678857	CallExpression	"r_anal_xrefs_set ( core -> anal , cur , dst , R_ANAL_REF_TYPE_CALL )"		676746	0					
ANR	678858	Callee	r_anal_xrefs_set		676746	0					
ANR	678859	Identifier	r_anal_xrefs_set		676746	0					
ANR	678860	ArgumentList	core -> anal		676746	1					
ANR	678861	Argument	core -> anal		676746	0					
ANR	678862	PtrMemberAccess	core -> anal		676746	0					
ANR	678863	Identifier	core		676746	0					
ANR	678864	Identifier	anal		676746	1					
ANR	678865	Argument	cur		676746	1					
ANR	678866	Identifier	cur		676746	0					
ANR	678867	Argument	dst		676746	2					
ANR	678868	Identifier	dst		676746	0					
ANR	678869	Argument	R_ANAL_REF_TYPE_CALL		676746	3					
ANR	678870	Identifier	R_ANAL_REF_TYPE_CALL		676746	0					
ANR	678871	ExpressionStatement	ESIL -> old = cur + op . size	5085:6:151999:152024	676746	1	True				
ANR	678872	AssignmentExpression	ESIL -> old = cur + op . size		676746	0		=			
ANR	678873	PtrMemberAccess	ESIL -> old		676746	0					
ANR	678874	Identifier	ESIL		676746	0					
ANR	678875	Identifier	old		676746	1					
ANR	678876	AdditiveExpression	cur + op . size		676746	1		+			
ANR	678877	Identifier	cur		676746	0					
ANR	678878	MemberAccess	op . size		676746	1					
ANR	678879	Identifier	op		676746	0					
ANR	678880	Identifier	size		676746	1					
ANR	678881	ExpressionStatement	"getpcfromstack ( core , ESIL )"	5086:6:152032:152059	676746	2	True				
ANR	678882	CallExpression	"getpcfromstack ( core , ESIL )"		676746	0					
ANR	678883	Callee	getpcfromstack		676746	0					
ANR	678884	Identifier	getpcfromstack		676746	0					
ANR	678885	ArgumentList	core		676746	1					
ANR	678886	Argument	core		676746	0					
ANR	678887	Identifier	core		676746	0					
ANR	678888	Argument	ESIL		676746	1					
ANR	678889	Identifier	ESIL		676746	0					
ANR	678890	BreakStatement	break ;	5089:4:152078:152083	676746	15	True				
ANR	678891	Label	case R_ANAL_OP_TYPE_UJMP :	5090:3:152088:152112	676746	16	True				
ANR	678892	Identifier	R_ANAL_OP_TYPE_UJMP		676746	0					
ANR	678893	Label	case R_ANAL_OP_TYPE_UCALL :	5091:3:152117:152142	676746	17	True				
ANR	678894	Identifier	R_ANAL_OP_TYPE_UCALL		676746	0					
ANR	678895	Label	case R_ANAL_OP_TYPE_ICALL :	5092:3:152147:152172	676746	18	True				
ANR	678896	Identifier	R_ANAL_OP_TYPE_ICALL		676746	0					
ANR	678897	Label	case R_ANAL_OP_TYPE_RCALL :	5093:3:152177:152202	676746	19	True				
ANR	678898	Identifier	R_ANAL_OP_TYPE_RCALL		676746	0					
ANR	678899	Label	case R_ANAL_OP_TYPE_IRCALL :	5094:3:152207:152233	676746	20	True				
ANR	678900	Identifier	R_ANAL_OP_TYPE_IRCALL		676746	0					
ANR	678901	Label	case R_ANAL_OP_TYPE_MJMP :	5095:3:152238:152262	676746	21	True				
ANR	678902	Identifier	R_ANAL_OP_TYPE_MJMP		676746	0					
ANR	678903	CompoundStatement		357:5:10714:10754	676746	22					
ANR	678904	IdentifierDeclStatement	ut64 dst = core -> anal -> esil -> jump_target ;	5097:5:152275:152315	676746	0	True				
ANR	678905	IdentifierDecl	dst = core -> anal -> esil -> jump_target		676746	0					
ANR	678906	IdentifierDeclType	ut64		676746	0					
ANR	678907	Identifier	dst		676746	1					
ANR	678908	AssignmentExpression	dst = core -> anal -> esil -> jump_target		676746	2		=			
ANR	678909	Identifier	dst		676746	0					
ANR	678910	PtrMemberAccess	core -> anal -> esil -> jump_target		676746	1					
ANR	678911	PtrMemberAccess	core -> anal -> esil		676746	0					
ANR	678912	PtrMemberAccess	core -> anal		676746	0					
ANR	678913	Identifier	core		676746	0					
ANR	678914	Identifier	anal		676746	1					
ANR	678915	Identifier	esil		676746	1					
ANR	678916	Identifier	jump_target		676746	1					
ANR	678917	IfStatement	if ( dst == 0 || dst == UT64_MAX )		676746	1					
ANR	678918	Condition	dst == 0 || dst == UT64_MAX	5098:9:152326:152352	676746	0	True				
ANR	678919	OrExpression	dst == 0 || dst == UT64_MAX		676746	0		||			
ANR	678920	EqualityExpression	dst == 0		676746	0		==			
ANR	678921	Identifier	dst		676746	0					
ANR	678922	PrimaryExpression	0		676746	1					
ANR	678923	EqualityExpression	dst == UT64_MAX		676746	1		==			
ANR	678924	Identifier	dst		676746	0					
ANR	678925	Identifier	UT64_MAX		676746	1					
ANR	678926	CompoundStatement		358:38:10794:10794	676746	1					
ANR	678927	ExpressionStatement	"dst = r_reg_getv ( core -> anal -> reg , pcname )"	5099:6:152363:152405	676746	0	True				
ANR	678928	AssignmentExpression	"dst = r_reg_getv ( core -> anal -> reg , pcname )"		676746	0		=			
ANR	678929	Identifier	dst		676746	0					
ANR	678930	CallExpression	"r_reg_getv ( core -> anal -> reg , pcname )"		676746	1					
ANR	678931	Callee	r_reg_getv		676746	0					
ANR	678932	Identifier	r_reg_getv		676746	0					
ANR	678933	ArgumentList	core -> anal -> reg		676746	1					
ANR	678934	Argument	core -> anal -> reg		676746	0					
ANR	678935	PtrMemberAccess	core -> anal -> reg		676746	0					
ANR	678936	PtrMemberAccess	core -> anal		676746	0					
ANR	678937	Identifier	core		676746	0					
ANR	678938	Identifier	anal		676746	1					
ANR	678939	Identifier	reg		676746	1					
ANR	678940	Argument	pcname		676746	1					
ANR	678941	Identifier	pcname		676746	0					
ANR	678942	IfStatement	if ( CHECKREF ( dst ) )		676746	2					
ANR	678943	Condition	CHECKREF ( dst )	5101:9:152423:152436	676746	0	True				
ANR	678944	CallExpression	CHECKREF ( dst )		676746	0					
ANR	678945	Callee	CHECKREF		676746	0					
ANR	678946	Identifier	CHECKREF		676746	0					
ANR	678947	ArgumentList	dst		676746	1					
ANR	678948	Argument	dst		676746	0					
ANR	678949	Identifier	dst		676746	0					
ANR	678950	CompoundStatement		361:25:10878:10878	676746	1					
ANR	678951	IfStatement	"if ( myvalid ( core -> io , dst ) )"		676746	0					
ANR	678952	Condition	"myvalid ( core -> io , dst )"	5102:10:152451:152473	676746	0	True				
ANR	678953	CallExpression	"myvalid ( core -> io , dst )"		676746	0					
ANR	678954	Callee	myvalid		676746	0					
ANR	678955	Identifier	myvalid		676746	0					
ANR	678956	ArgumentList	core -> io		676746	1					
ANR	678957	Argument	core -> io		676746	0					
ANR	678958	PtrMemberAccess	core -> io		676746	0					
ANR	678959	Identifier	core		676746	0					
ANR	678960	Identifier	io		676746	1					
ANR	678961	Argument	dst		676746	1					
ANR	678962	Identifier	dst		676746	0					
ANR	678963	CompoundStatement		363:7:10924:11068	676746	1					
ANR	678964	IdentifierDeclStatement	RAnalRefType ref = ( op . type & R_ANAL_OP_TYPE_MASK ) == R_ANAL_OP_TYPE_UCALL ? R_ANAL_REF_TYPE_CALL : R_ANAL_REF_TYPE_CODE ;	5103:7:152485:152629	676746	0	True				
ANR	678965	IdentifierDecl	ref = ( op . type & R_ANAL_OP_TYPE_MASK ) == R_ANAL_OP_TYPE_UCALL ? R_ANAL_REF_TYPE_CALL : R_ANAL_REF_TYPE_CODE		676746	0					
ANR	678966	IdentifierDeclType	RAnalRefType		676746	0					
ANR	678967	Identifier	ref		676746	1					
ANR	678968	AssignmentExpression	ref = ( op . type & R_ANAL_OP_TYPE_MASK ) == R_ANAL_OP_TYPE_UCALL ? R_ANAL_REF_TYPE_CALL : R_ANAL_REF_TYPE_CODE		676746	2		=			
ANR	678969	Identifier	ref		676746	0					
ANR	678970	ConditionalExpression	( op . type & R_ANAL_OP_TYPE_MASK ) == R_ANAL_OP_TYPE_UCALL ? R_ANAL_REF_TYPE_CALL : R_ANAL_REF_TYPE_CODE		676746	1					
ANR	678971	Condition	( op . type & R_ANAL_OP_TYPE_MASK ) == R_ANAL_OP_TYPE_UCALL		676746	0					
ANR	678972	EqualityExpression	( op . type & R_ANAL_OP_TYPE_MASK ) == R_ANAL_OP_TYPE_UCALL		676746	0		==			
ANR	678973	BitAndExpression	op . type & R_ANAL_OP_TYPE_MASK		676746	0		&			
ANR	678974	MemberAccess	op . type		676746	0					
ANR	678975	Identifier	op		676746	0					
ANR	678976	Identifier	type		676746	1					
ANR	678977	Identifier	R_ANAL_OP_TYPE_MASK		676746	1					
ANR	678978	Identifier	R_ANAL_OP_TYPE_UCALL		676746	1					
ANR	678979	Identifier	R_ANAL_REF_TYPE_CALL		676746	1					
ANR	678980	Identifier	R_ANAL_REF_TYPE_CODE		676746	2					
ANR	678981	ExpressionStatement	"r_anal_xrefs_set ( core -> anal , cur , dst , ref )"	5107:7:152638:152682	676746	1	True				
ANR	678982	CallExpression	"r_anal_xrefs_set ( core -> anal , cur , dst , ref )"		676746	0					
ANR	678983	Callee	r_anal_xrefs_set		676746	0					
ANR	678984	Identifier	r_anal_xrefs_set		676746	0					
ANR	678985	ArgumentList	core -> anal		676746	1					
ANR	678986	Argument	core -> anal		676746	0					
ANR	678987	PtrMemberAccess	core -> anal		676746	0					
ANR	678988	Identifier	core		676746	0					
ANR	678989	Identifier	anal		676746	1					
ANR	678990	Argument	cur		676746	1					
ANR	678991	Identifier	cur		676746	0					
ANR	678992	Argument	dst		676746	2					
ANR	678993	Identifier	dst		676746	0					
ANR	678994	Argument	ref		676746	3					
ANR	678995	Identifier	ref		676746	0					
ANR	678996	BreakStatement	break ;	5111:4:152709:152714	676746	23	True				
ANR	678997	ExpressionStatement	r_anal_esil_stack_free ( ESIL )	5113:3:152724:152753	676746	8	True				
ANR	678998	CallExpression	r_anal_esil_stack_free ( ESIL )		676746	0					
ANR	678999	Callee	r_anal_esil_stack_free		676746	0					
ANR	679000	Identifier	r_anal_esil_stack_free		676746	0					
ANR	679001	ArgumentList	ESIL		676746	1					
ANR	679002	Argument	ESIL		676746	0					
ANR	679003	Identifier	ESIL		676746	0					
ANR	679004	ExpressionStatement	free ( buf )	5116:1:152763:152773	676746	72	True				
ANR	679005	CallExpression	free ( buf )		676746	0					
ANR	679006	Callee	free		676746	0					
ANR	679007	Identifier	free		676746	0					
ANR	679008	ArgumentList	buf		676746	1					
ANR	679009	Argument	buf		676746	0					
ANR	679010	Identifier	buf		676746	0					
ANR	679011	ExpressionStatement	r_anal_op_fini ( & op )	5117:1:152776:152796	676746	73	True				
ANR	679012	CallExpression	r_anal_op_fini ( & op )		676746	0					
ANR	679013	Callee	r_anal_op_fini		676746	0					
ANR	679014	Identifier	r_anal_op_fini		676746	0					
ANR	679015	ArgumentList	& op		676746	1					
ANR	679016	Argument	& op		676746	0					
ANR	679017	UnaryOperationExpression	& op		676746	0					
ANR	679018	UnaryOperator	&		676746	0					
ANR	679019	Identifier	op		676746	1					
ANR	679020	ExpressionStatement	r_cons_break_pop ( )	5118:1:152799:152818	676746	74	True				
ANR	679021	CallExpression	r_cons_break_pop ( )		676746	0					
ANR	679022	Callee	r_cons_break_pop		676746	0					
ANR	679023	Identifier	r_cons_break_pop		676746	0					
ANR	679024	ArgumentList			676746	1					
ANR	679025	ExpressionStatement	r_reg_arena_pop ( core -> anal -> reg )	5120:1:152842:152875	676746	75	True				
ANR	679026	CallExpression	r_reg_arena_pop ( core -> anal -> reg )		676746	0					
ANR	679027	Callee	r_reg_arena_pop		676746	0					
ANR	679028	Identifier	r_reg_arena_pop		676746	0					
ANR	679029	ArgumentList	core -> anal -> reg		676746	1					
ANR	679030	Argument	core -> anal -> reg		676746	0					
ANR	679031	PtrMemberAccess	core -> anal -> reg		676746	0					
ANR	679032	PtrMemberAccess	core -> anal		676746	0					
ANR	679033	Identifier	core		676746	0					
ANR	679034	Identifier	anal		676746	1					
ANR	679035	Identifier	reg		676746	1					
ANR	679036	ReturnType	R_API void		676746	1					
ANR	679037	Identifier	r_core_anal_esil		676746	2					
ANR	679038	ParameterList	"RCore * core , const char * str , const char * target"		676746	3					
ANR	679039	Parameter	RCore * core	4741:28:141510:141520	676746	0	True				
ANR	679040	ParameterType	RCore *		676746	0					
ANR	679041	Identifier	core		676746	1					
ANR	679042	Parameter	const char * str	4741:41:141523:141537	676746	1	True				
ANR	679043	ParameterType	const char *		676746	0					
ANR	679044	Identifier	str		676746	1					
ANR	679045	Parameter	const char * target	4741:58:141540:141557	676746	2	True				
ANR	679046	ParameterType	const char *		676746	0					
ANR	679047	Identifier	target		676746	1					
ANR	679048	CFGEntryNode	ENTRY		676746		True				
ANR	679049	CFGExitNode	EXIT		676746		True				
ANR	679050	Symbol	minopsize		676746						
ANR	679051	Symbol	* op . src		676746						
ANR	679052	Symbol	* fcn		676746						
ANR	679053	Symbol	& esilbreak_mem_read		676746						
ANR	679054	Symbol	R_REG_NAME_PC		676746						
ANR	679055	Symbol	core -> anal -> cur -> bits		676746						
ANR	679056	Symbol	* map		676746						
ANR	679057	Symbol	mininstrsz		676746						
ANR	679058	Symbol	cfg_anal_strings		676746						
ANR	679059	Symbol	* ESIL		676746						
ANR	679060	Symbol	core -> offset		676746						
ANR	679061	Symbol	& op		676746						
ANR	679062	Symbol	R_ANAL_REF_TYPE_STRING		676746						
ANR	679063	Symbol	ntarget		676746						
ANR	679064	Symbol	* core -> anal -> esil		676746						
ANR	679065	Symbol	str2		676746						
ANR	679066	Symbol	core -> anal -> esil		676746						
ANR	679067	Symbol	r_anal_op		676746						
ANR	679068	Symbol	* si		676746						
ANR	679069	Symbol	core -> blocksize		676746						
ANR	679070	Symbol	& op . esil		676746						
ANR	679071	Symbol	ESIL -> cb		676746						
ANR	679072	Symbol	R_ANAL_OP_TYPE_REP		676746						
ANR	679073	Symbol	* core -> anal -> cur		676746						
ANR	679074	Symbol	gp_reg		676746						
ANR	679075	Symbol	* esilstr		676746						
ANR	679076	Symbol	iter		676746						
ANR	679077	Symbol	R_ANAL_REF_TYPE_DATA		676746						
ANR	679078	Symbol	& esilbreak_mem_write		676746						
ANR	679079	Symbol	str		676746						
ANR	679080	Symbol	* * * core		676746						
ANR	679081	Symbol	meta		676746						
ANR	679082	Symbol	r_config_get_i		676746						
ANR	679083	Symbol	* op . src [ 0 ] -> reg		676746						
ANR	679084	Symbol	r_str_trim_ro		676746						
ANR	679085	Symbol	core -> anal -> opt . noncode		676746						
ANR	679086	Symbol	* * op . src		676746						
ANR	679087	Symbol	pcname		676746						
ANR	679088	Symbol	R_ANAL_OP_TYPE_SWI		676746						
ANR	679089	Symbol	ESIL -> old		676746						
ANR	679090	Symbol	refptr		676746						
ANR	679091	Symbol	cur		676746						
ANR	679092	Symbol	r_syscall_get		676746						
ANR	679093	Symbol	f -> name		676746						
ANR	679094	Symbol	* core		676746						
ANR	679095	Symbol	core -> assembler		676746						
ANR	679096	Symbol	core -> anal		676746						
ANR	679097	Symbol	esilstr		676746						
ANR	679098	Symbol	* * op		676746						
ANR	679099	Symbol	op . src [ 0 ] -> reg -> name		676746						
ANR	679100	Symbol	fcn		676746						
ANR	679101	Symbol	ESIL -> cb . hook_reg_write		676746						
ANR	679102	Symbol	R_ANAL_OP_TYPE_UCALL		676746						
ANR	679103	Symbol	R2_ARCH_ARM32		676746						
ANR	679104	Symbol	r_cons_is_breaked		676746						
ANR	679105	Symbol	emu_lazy		676746						
ANR	679106	Symbol	core -> io		676746						
ANR	679107	Symbol	core -> anal -> cur -> arch		676746						
ANR	679108	Symbol	si		676746						
ANR	679109	Symbol	R_ANAL_OP_TYPE_ILL		676746						
ANR	679110	Symbol	meta -> type		676746						
ANR	679111	Symbol	* str		676746						
ANR	679112	Symbol	sn		676746						
ANR	679113	Symbol	map		676746						
ANR	679114	Symbol	R_ANAL_REF_TYPE_CALL		676746						
ANR	679115	Symbol	R_ANAL_ARCHINFO_MIN_OP_SIZE		676746						
ANR	679116	Symbol	malloc		676746						
ANR	679117	Symbol	core -> anal -> bits		676746						
ANR	679118	Symbol	op . type		676746						
ANR	679119	Symbol	R_STRBUF_SAFEGET		676746						
ANR	679120	Symbol	f		676746						
ANR	679121	Symbol	i		676746						
ANR	679122	Symbol	core -> flags		676746						
ANR	679123	Symbol	ESIL		676746						
ANR	679124	Symbol	R_ANAL_ARCHINFO_ALIGN		676746						
ANR	679125	Symbol	buf		676746						
ANR	679126	Symbol	op . ptr		676746						
ANR	679127	Symbol	* core -> anal		676746						
ANR	679128	Symbol	r_meta_find_list_in		676746						
ANR	679129	Symbol	~1		676746						
ANR	679130	Symbol	canal_isThumb		676746						
ANR	679131	Symbol	fcn -> addr		676746						
ANR	679132	Symbol	snv		676746						
ANR	679133	Symbol	arch		676746						
ANR	679134	Symbol	op . src		676746						
ANR	679135	Symbol	esilbreak_last_read		676746						
ANR	679136	Symbol	core -> anal -> reg		676746						
ANR	679137	Symbol	op . src [ 0 ] -> reg		676746						
ANR	679138	Symbol	* op		676746						
ANR	679139	Symbol	r_anal_fcn_size		676746						
ANR	679140	Symbol	r_anal_archinfo		676746						
ANR	679141	Symbol	R_FLAGS_FS_SYSCALLS		676746						
ANR	679142	Symbol	esilbreak_last_data		676746						
ANR	679143	Symbol	R_ANAL_OP_TYPE_UNK		676746						
ANR	679144	Symbol	op . src [ 1 ] -> imm		676746						
ANR	679145	Symbol	cccb		676746						
ANR	679146	Symbol	* mycore		676746						
ANR	679147	Symbol	ESIL -> cb . hook_mem_read		676746						
ANR	679148	Symbol	ref		676746						
ANR	679149	Symbol	mycore		676746						
ANR	679150	Symbol	op . jump		676746						
ANR	679151	Symbol	* * core -> anal		676746						
ANR	679152	Symbol	* meta		676746						
ANR	679153	Symbol	& esilbreak_reg_write		676746						
ANR	679154	Symbol	core -> num		676746						
ANR	679155	Symbol	core -> anal -> esil -> jump_target		676746						
ANR	679156	Symbol	gp_fixed		676746						
ANR	679157	Symbol	strcmp		676746						
ANR	679158	Symbol	op . val		676746						
ANR	679159	Symbol	si -> name		676746						
ANR	679160	Symbol	core -> anal -> opt		676746						
ANR	679161	Symbol	r_io_is_valid_offset		676746						
ANR	679162	Symbol	NULL		676746						
ANR	679163	Symbol	op . addr		676746						
ANR	679164	Symbol	ESIL -> user		676746						
ANR	679165	Symbol	ESIL -> cb . hook_mem_write		676746						
ANR	679166	Symbol	R_ANAL_OP_MASK_VAL		676746						
ANR	679167	Symbol	R2_ARCH_THUMB		676746						
ANR	679168	Symbol	list		676746						
ANR	679169	Symbol	core		676746						
ANR	679170	Symbol	* expr		676746						
ANR	679171	Symbol	r_reg_get_name		676746						
ANR	679172	Symbol	true		676746						
ANR	679173	Symbol	opalign		676746						
ANR	679174	Symbol	* * * op		676746						
ANR	679175	Symbol	r_reg_getv		676746						
ANR	679176	Symbol	op . size		676746						
ANR	679177	Symbol	* * * op . src		676746						
ANR	679178	Symbol	R_REG_NAME_SN		676746						
ANR	679179	Symbol	R_ANAL_OP_MASK_ESIL		676746						
ANR	679180	Symbol	R_ANAL_OP_TYPE_MASK		676746						
ANR	679181	Symbol	map -> itv		676746						
ANR	679182	Symbol	dst		676746						
ANR	679183	Symbol	esil_anal_stop		676746						
ANR	679184	Symbol	r_core_flag_get_by_spaces		676746						
ANR	679185	Symbol	R_META_TYPE_COMMENT		676746						
ANR	679186	Symbol	* pcname		676746						
ANR	679187	Symbol	CHECKREF		676746						
ANR	679188	Symbol	R_EMPTY		676746						
ANR	679189	Symbol	r_num_math		676746						
ANR	679190	Symbol	core -> anal -> cur		676746						
ANR	679191	Symbol	end_address_set		676746						
ANR	679192	Symbol	expr		676746						
ANR	679193	Symbol	end		676746						
ANR	679194	Symbol	map -> itv . addr		676746						
ANR	679195	Symbol	addr		676746						
ANR	679196	Symbol	UT64_MAX		676746						
ANR	679197	Symbol	ESIL -> cur		676746						
ANR	679198	Symbol	sdb_fmt		676746						
ANR	679199	Symbol	is_string_at		676746						
ANR	679200	Symbol	* * core		676746						
ANR	679201	Symbol	core -> config		676746						
ANR	679202	Symbol	op		676746						
ANR	679203	Symbol	iend		676746						
ANR	679204	Symbol	false		676746						
ANR	679205	Symbol	gp		676746						
ANR	679206	Symbol	core -> anal -> syscall		676746						
ANR	679207	Symbol	target		676746						
ANR	679208	Symbol	R_ANAL_REF_TYPE_CODE		676746						
ANR	679209	Symbol	R2_ARCH_ARM64		676746						
ANR	679210	Symbol	* f		676746						
ANR	679211	Symbol	r_anal_get_fcn_in		676746						
ANR	679212	Symbol	map -> itv . size		676746						
ANR	679213	Symbol	R_ANAL_OP_MASK_HINT		676746						
ANR	679214	Symbol	mycore -> io		676746						
ANR	679215	Symbol	r_io_map_get		676746						
ANR	679216	Symbol	myvalid		676746						
ANR	679217	Function	isValidAddress	5123:0:152880:153394							
ANR	679218	FunctionDef	"isValidAddress (RCore * core , ut64 addr)"		679217	0					
ANR	679219	CompoundStatement		5123:52:152932:153394	679217	0					
ANR	679220	IdentifierDeclStatement	"RIOMap * map = r_io_map_get ( core -> io , addr ) ;"	5125:1:152966:153009	679217	0	True				
ANR	679221	IdentifierDecl	"* map = r_io_map_get ( core -> io , addr )"		679217	0					
ANR	679222	IdentifierDeclType	RIOMap *		679217	0					
ANR	679223	Identifier	map		679217	1					
ANR	679224	AssignmentExpression	"* map = r_io_map_get ( core -> io , addr )"		679217	2		=			
ANR	679225	Identifier	map		679217	0					
ANR	679226	CallExpression	"r_io_map_get ( core -> io , addr )"		679217	1					
ANR	679227	Callee	r_io_map_get		679217	0					
ANR	679228	Identifier	r_io_map_get		679217	0					
ANR	679229	ArgumentList	core -> io		679217	1					
ANR	679230	Argument	core -> io		679217	0					
ANR	679231	PtrMemberAccess	core -> io		679217	0					
ANR	679232	Identifier	core		679217	0					
ANR	679233	Identifier	io		679217	1					
ANR	679234	Argument	addr		679217	1					
ANR	679235	Identifier	addr		679217	0					
ANR	679236	IfStatement	if ( ! map )		679217	1					
ANR	679237	Condition	! map	5126:5:153016:153019	679217	0	True				
ANR	679238	UnaryOperationExpression	! map		679217	0					
ANR	679239	UnaryOperator	!		679217	0					
ANR	679240	Identifier	map		679217	1					
ANR	679241	CompoundStatement		4:11:89:89	679217	1					
ANR	679242	ReturnStatement	return false ;	5127:2:153026:153038	679217	0	True				
ANR	679243	Identifier	false		679217	0					
ANR	679244	IdentifierDeclStatement	"st64 fdsz = ( st64 ) r_io_fd_size ( core -> io , map -> fd ) ;"	5129:1:153044:153094	679217	2	True				
ANR	679245	IdentifierDecl	"fdsz = ( st64 ) r_io_fd_size ( core -> io , map -> fd )"		679217	0					
ANR	679246	IdentifierDeclType	st64		679217	0					
ANR	679247	Identifier	fdsz		679217	1					
ANR	679248	AssignmentExpression	"fdsz = ( st64 ) r_io_fd_size ( core -> io , map -> fd )"		679217	2		=			
ANR	679249	Identifier	fdsz		679217	0					
ANR	679250	CastExpression	"( st64 ) r_io_fd_size ( core -> io , map -> fd )"		679217	1					
ANR	679251	CastTarget	st64		679217	0					
ANR	679252	CallExpression	"r_io_fd_size ( core -> io , map -> fd )"		679217	1					
ANR	679253	Callee	r_io_fd_size		679217	0					
ANR	679254	Identifier	r_io_fd_size		679217	0					
ANR	679255	ArgumentList	core -> io		679217	1					
ANR	679256	Argument	core -> io		679217	0					
ANR	679257	PtrMemberAccess	core -> io		679217	0					
ANR	679258	Identifier	core		679217	0					
ANR	679259	Identifier	io		679217	1					
ANR	679260	Argument	map -> fd		679217	1					
ANR	679261	PtrMemberAccess	map -> fd		679217	0					
ANR	679262	Identifier	map		679217	0					
ANR	679263	Identifier	fd		679217	1					
ANR	679264	IfStatement	if ( fdsz > 0 && map -> delta > fdsz )		679217	3					
ANR	679265	Condition	fdsz > 0 && map -> delta > fdsz	5130:5:153101:153129	679217	0	True				
ANR	679266	AndExpression	fdsz > 0 && map -> delta > fdsz		679217	0		&&			
ANR	679267	RelationalExpression	fdsz > 0		679217	0		>			
ANR	679268	Identifier	fdsz		679217	0					
ANR	679269	PrimaryExpression	0		679217	1					
ANR	679270	RelationalExpression	map -> delta > fdsz		679217	1		>			
ANR	679271	PtrMemberAccess	map -> delta		679217	0					
ANR	679272	Identifier	map		679217	0					
ANR	679273	Identifier	delta		679217	1					
ANR	679274	Identifier	fdsz		679217	1					
ANR	679275	CompoundStatement		8:36:199:199	679217	1					
ANR	679276	ReturnStatement	return false ;	5131:2:153136:153148	679217	0	True				
ANR	679277	Identifier	false		679217	0					
ANR	679278	IdentifierDeclStatement	"RIODesc * desc = r_io_desc_get ( core -> io , map -> fd ) ;"	5134:1:153193:153242	679217	4	True				
ANR	679279	IdentifierDecl	"* desc = r_io_desc_get ( core -> io , map -> fd )"		679217	0					
ANR	679280	IdentifierDeclType	RIODesc *		679217	0					
ANR	679281	Identifier	desc		679217	1					
ANR	679282	AssignmentExpression	"* desc = r_io_desc_get ( core -> io , map -> fd )"		679217	2		=			
ANR	679283	Identifier	desc		679217	0					
ANR	679284	CallExpression	"r_io_desc_get ( core -> io , map -> fd )"		679217	1					
ANR	679285	Callee	r_io_desc_get		679217	0					
ANR	679286	Identifier	r_io_desc_get		679217	0					
ANR	679287	ArgumentList	core -> io		679217	1					
ANR	679288	Argument	core -> io		679217	0					
ANR	679289	PtrMemberAccess	core -> io		679217	0					
ANR	679290	Identifier	core		679217	0					
ANR	679291	Identifier	io		679217	1					
ANR	679292	Argument	map -> fd		679217	1					
ANR	679293	PtrMemberAccess	map -> fd		679217	0					
ANR	679294	Identifier	map		679217	0					
ANR	679295	Identifier	fd		679217	1					
ANR	679296	IfStatement	if ( ! desc )		679217	5					
ANR	679297	Condition	! desc	5135:5:153249:153253	679217	0	True				
ANR	679298	UnaryOperationExpression	! desc		679217	0					
ANR	679299	UnaryOperator	!		679217	0					
ANR	679300	Identifier	desc		679217	1					
ANR	679301	CompoundStatement		13:12:323:323	679217	1					
ANR	679302	ReturnStatement	return false ;	5136:2:153260:153272	679217	0	True				
ANR	679303	Identifier	false		679217	0					
ANR	679304	IfStatement	"if ( ! strncmp ( desc -> name , ""null://"" , 7 ) )"		679217	6					
ANR	679305	Condition	"! strncmp ( desc -> name , ""null://"" , 7 )"	5139:5:153322:153356	679217	0	True				
ANR	679306	UnaryOperationExpression	"! strncmp ( desc -> name , ""null://"" , 7 )"		679217	0					
ANR	679307	UnaryOperator	!		679217	0					
ANR	679308	CallExpression	"strncmp ( desc -> name , ""null://"" , 7 )"		679217	1					
ANR	679309	Callee	strncmp		679217	0					
ANR	679310	Identifier	strncmp		679217	0					
ANR	679311	ArgumentList	desc -> name		679217	1					
ANR	679312	Argument	desc -> name		679217	0					
ANR	679313	PtrMemberAccess	desc -> name		679217	0					
ANR	679314	Identifier	desc		679217	0					
ANR	679315	Identifier	name		679217	1					
ANR	679316	Argument	"""null://"""		679217	1					
ANR	679317	PrimaryExpression	"""null://"""		679217	0					
ANR	679318	Argument	7		679217	2					
ANR	679319	PrimaryExpression	7		679217	0					
ANR	679320	CompoundStatement		17:42:426:426	679217	1					
ANR	679321	ReturnStatement	return false ;	5140:2:153363:153375	679217	0	True				
ANR	679322	Identifier	false		679217	0					
ANR	679323	ReturnStatement	return true ;	5142:1:153381:153392	679217	7	True				
ANR	679324	Identifier	true		679217	0					
ANR	679325	ReturnType	static bool		679217	1					
ANR	679326	Identifier	isValidAddress		679217	2					
ANR	679327	ParameterList	"RCore * core , ut64 addr"		679217	3					
ANR	679328	Parameter	RCore * core	5123:28:152908:152918	679217	0	True				
ANR	679329	ParameterType	RCore *		679217	0					
ANR	679330	Identifier	core		679217	1					
ANR	679331	Parameter	ut64 addr	5123:41:152921:152929	679217	1	True				
ANR	679332	ParameterType	ut64		679217	0					
ANR	679333	Identifier	addr		679217	1					
ANR	679334	CFGEntryNode	ENTRY		679217		True				
ANR	679335	CFGExitNode	EXIT		679217		True				
ANR	679336	Symbol	r_io_desc_get		679217						
ANR	679337	Symbol	* map		679217						
ANR	679338	Symbol	* core		679217						
ANR	679339	Symbol	false		679217						
ANR	679340	Symbol	map -> fd		679217						
ANR	679341	Symbol	fdsz		679217						
ANR	679342	Symbol	map -> delta		679217						
ANR	679343	Symbol	core		679217						
ANR	679344	Symbol	strncmp		679217						
ANR	679345	Symbol	r_io_fd_size		679217						
ANR	679346	Symbol	core -> io		679217						
ANR	679347	Symbol	true		679217						
ANR	679348	Symbol	* desc		679217						
ANR	679349	Symbol	addr		679217						
ANR	679350	Symbol	map		679217						
ANR	679351	Symbol	r_io_map_get		679217						
ANR	679352	Symbol	desc		679217						
ANR	679353	Symbol	desc -> name		679217						
ANR	679354	Function	stringAt	5145:0:153397:153686							
ANR	679355	FunctionDef	"stringAt (RCore * core , ut64 addr)"		679354	0					
ANR	679356	CompoundStatement		5145:45:153442:153686	679354	0					
ANR	679357	IdentifierDeclStatement	ut8 buf [ 32 ] ;	5146:1:153445:153456	679354	0	True				
ANR	679358	IdentifierDecl	buf [ 32 ]		679354	0					
ANR	679359	IdentifierDeclType	ut8 [ 32 ]		679354	0					
ANR	679360	Identifier	buf		679354	1					
ANR	679361	PrimaryExpression	32		679354	2					
ANR	679362	ExpressionStatement	"r_io_read_at ( core -> io , addr - 1 , buf , sizeof ( buf ) )"	5147:1:153459:153511	679354	1	True				
ANR	679363	CallExpression	"r_io_read_at ( core -> io , addr - 1 , buf , sizeof ( buf ) )"		679354	0					
ANR	679364	Callee	r_io_read_at		679354	0					
ANR	679365	Identifier	r_io_read_at		679354	0					
ANR	679366	ArgumentList	core -> io		679354	1					
ANR	679367	Argument	core -> io		679354	0					
ANR	679368	PtrMemberAccess	core -> io		679354	0					
ANR	679369	Identifier	core		679354	0					
ANR	679370	Identifier	io		679354	1					
ANR	679371	Argument	addr - 1		679354	1					
ANR	679372	AdditiveExpression	addr - 1		679354	0		-			
ANR	679373	Identifier	addr		679354	0					
ANR	679374	PrimaryExpression	1		679354	1					
ANR	679375	Argument	buf		679354	2					
ANR	679376	Identifier	buf		679354	0					
ANR	679377	Argument	sizeof ( buf )		679354	3					
ANR	679378	SizeofExpression	sizeof ( buf )		679354	0					
ANR	679379	Sizeof	sizeof		679354	0					
ANR	679380	SizeofOperand	buf		679354	1					
ANR	679381	IfStatement	if ( buf [ 0 ] != 0 )		679354	2					
ANR	679382	Condition	buf [ 0 ] != 0	5149:5:153613:153623	679354	0	True				
ANR	679383	EqualityExpression	buf [ 0 ] != 0		679354	0		!=			
ANR	679384	ArrayIndexing	buf [ 0 ]		679354	0					
ANR	679385	Identifier	buf		679354	0					
ANR	679386	PrimaryExpression	0		679354	1					
ANR	679387	PrimaryExpression	0		679354	1					
ANR	679388	CompoundStatement		5:18:183:183	679354	1					
ANR	679389	ReturnStatement	return false ;	5150:2:153630:153642	679354	0	True				
ANR	679390	Identifier	false		679354	0					
ANR	679391	ReturnStatement	"return is_string ( buf + 1 , 31 , NULL ) ;"	5152:1:153648:153684	679354	3	True				
ANR	679392	CallExpression	"is_string ( buf + 1 , 31 , NULL )"		679354	0					
ANR	679393	Callee	is_string		679354	0					
ANR	679394	Identifier	is_string		679354	0					
ANR	679395	ArgumentList	buf + 1		679354	1					
ANR	679396	Argument	buf + 1		679354	0					
ANR	679397	AdditiveExpression	buf + 1		679354	0		+			
ANR	679398	Identifier	buf		679354	0					
ANR	679399	PrimaryExpression	1		679354	1					
ANR	679400	Argument	31		679354	1					
ANR	679401	PrimaryExpression	31		679354	0					
ANR	679402	Argument	NULL		679354	2					
ANR	679403	Identifier	NULL		679354	0					
ANR	679404	ReturnType	static bool		679354	1					
ANR	679405	Identifier	stringAt		679354	2					
ANR	679406	ParameterList	"RCore * core , ut64 addr"		679354	3					
ANR	679407	Parameter	RCore * core	5145:21:153418:153428	679354	0	True				
ANR	679408	ParameterType	RCore *		679354	0					
ANR	679409	Identifier	core		679354	1					
ANR	679410	Parameter	ut64 addr	5145:34:153431:153439	679354	1	True				
ANR	679411	ParameterType	ut64		679354	0					
ANR	679412	Identifier	addr		679354	1					
ANR	679413	CFGEntryNode	ENTRY		679354		True				
ANR	679414	CFGExitNode	EXIT		679354		True				
ANR	679415	Symbol	core		679354						
ANR	679416	Symbol	buf		679354						
ANR	679417	Symbol	* buf		679354						
ANR	679418	Symbol	NULL		679354						
ANR	679419	Symbol	core -> io		679354						
ANR	679420	Symbol	* core		679354						
ANR	679421	Symbol	false		679354						
ANR	679422	Symbol	is_string		679354						
ANR	679423	Symbol	addr		679354						
ANR	679424	Function	r_core_search_value_in_range	5155:0:153689:156834							
ANR	679425	FunctionDef	"r_core_search_value_in_range (RCore * core , RInterval search_itv , ut64 vmin , ut64 vmax , int vsize , bool asterisk , inRangeCb cb)"		679424	0					
ANR	679426	CompoundStatement		5156:60:153834:156834	679424	0					
ANR	679427	IdentifierDeclStatement	"int i , align = core -> search -> align , hitctr = 0 ;"	5157:1:153837:153883	679424	0	True				
ANR	679428	IdentifierDecl	i		679424	0					
ANR	679429	IdentifierDeclType	int		679424	0					
ANR	679430	Identifier	i		679424	1					
ANR	679431	IdentifierDecl	align = core -> search -> align		679424	1					
ANR	679432	IdentifierDeclType	int		679424	0					
ANR	679433	Identifier	align		679424	1					
ANR	679434	AssignmentExpression	align = core -> search -> align		679424	2		=			
ANR	679435	Identifier	align		679424	0					
ANR	679436	PtrMemberAccess	core -> search -> align		679424	1					
ANR	679437	PtrMemberAccess	core -> search		679424	0					
ANR	679438	Identifier	core		679424	0					
ANR	679439	Identifier	search		679424	1					
ANR	679440	Identifier	align		679424	1					
ANR	679441	IdentifierDecl	hitctr = 0		679424	2					
ANR	679442	IdentifierDeclType	int		679424	0					
ANR	679443	Identifier	hitctr		679424	1					
ANR	679444	AssignmentExpression	hitctr = 0		679424	2		=			
ANR	679445	Identifier	hitctr		679424	0					
ANR	679446	PrimaryExpression	0		679424	1					
ANR	679447	IdentifierDeclStatement	"bool vinfun = r_config_get_i ( core -> config , ""anal.vinfun"" ) ;"	5158:1:153886:153944	679424	1	True				
ANR	679448	IdentifierDecl	"vinfun = r_config_get_i ( core -> config , ""anal.vinfun"" )"		679424	0					
ANR	679449	IdentifierDeclType	bool		679424	0					
ANR	679450	Identifier	vinfun		679424	1					
ANR	679451	AssignmentExpression	"vinfun = r_config_get_i ( core -> config , ""anal.vinfun"" )"		679424	2		=			
ANR	679452	Identifier	vinfun		679424	0					
ANR	679453	CallExpression	"r_config_get_i ( core -> config , ""anal.vinfun"" )"		679424	1					
ANR	679454	Callee	r_config_get_i		679424	0					
ANR	679455	Identifier	r_config_get_i		679424	0					
ANR	679456	ArgumentList	core -> config		679424	1					
ANR	679457	Argument	core -> config		679424	0					
ANR	679458	PtrMemberAccess	core -> config		679424	0					
ANR	679459	Identifier	core		679424	0					
ANR	679460	Identifier	config		679424	1					
ANR	679461	Argument	"""anal.vinfun"""		679424	1					
ANR	679462	PrimaryExpression	"""anal.vinfun"""		679424	0					
ANR	679463	IdentifierDeclStatement	"bool vinfunr = r_config_get_i ( core -> config , ""anal.vinfunrange"" ) ;"	5159:1:153947:154011	679424	2	True				
ANR	679464	IdentifierDecl	"vinfunr = r_config_get_i ( core -> config , ""anal.vinfunrange"" )"		679424	0					
ANR	679465	IdentifierDeclType	bool		679424	0					
ANR	679466	Identifier	vinfunr		679424	1					
ANR	679467	AssignmentExpression	"vinfunr = r_config_get_i ( core -> config , ""anal.vinfunrange"" )"		679424	2		=			
ANR	679468	Identifier	vinfunr		679424	0					
ANR	679469	CallExpression	"r_config_get_i ( core -> config , ""anal.vinfunrange"" )"		679424	1					
ANR	679470	Callee	r_config_get_i		679424	0					
ANR	679471	Identifier	r_config_get_i		679424	0					
ANR	679472	ArgumentList	core -> config		679424	1					
ANR	679473	Argument	core -> config		679424	0					
ANR	679474	PtrMemberAccess	core -> config		679424	0					
ANR	679475	Identifier	core		679424	0					
ANR	679476	Identifier	config		679424	1					
ANR	679477	Argument	"""anal.vinfunrange"""		679424	1					
ANR	679478	PrimaryExpression	"""anal.vinfunrange"""		679424	0					
ANR	679479	IdentifierDeclStatement	"bool analStrings = r_config_get_i ( core -> config , ""anal.strings"" ) ;"	5160:1:154014:154078	679424	3	True				
ANR	679480	IdentifierDecl	"analStrings = r_config_get_i ( core -> config , ""anal.strings"" )"		679424	0					
ANR	679481	IdentifierDeclType	bool		679424	0					
ANR	679482	Identifier	analStrings		679424	1					
ANR	679483	AssignmentExpression	"analStrings = r_config_get_i ( core -> config , ""anal.strings"" )"		679424	2		=			
ANR	679484	Identifier	analStrings		679424	0					
ANR	679485	CallExpression	"r_config_get_i ( core -> config , ""anal.strings"" )"		679424	1					
ANR	679486	Callee	r_config_get_i		679424	0					
ANR	679487	Identifier	r_config_get_i		679424	0					
ANR	679488	ArgumentList	core -> config		679424	1					
ANR	679489	Argument	core -> config		679424	0					
ANR	679490	PtrMemberAccess	core -> config		679424	0					
ANR	679491	Identifier	core		679424	0					
ANR	679492	Identifier	config		679424	1					
ANR	679493	Argument	"""anal.strings"""		679424	1					
ANR	679494	PrimaryExpression	"""anal.strings"""		679424	0					
ANR	679495	ExpressionStatement	mycore = core	5161:1:154081:154094	679424	4	True				
ANR	679496	AssignmentExpression	mycore = core		679424	0		=			
ANR	679497	Identifier	mycore		679424	0					
ANR	679498	Identifier	core		679424	1					
ANR	679499	IdentifierDeclStatement	ut8 buf [ 4096 ] ;	5162:1:154097:154110	679424	5	True				
ANR	679500	IdentifierDecl	buf [ 4096 ]		679424	0					
ANR	679501	IdentifierDeclType	ut8 [ 4096 ]		679424	0					
ANR	679502	Identifier	buf		679424	1					
ANR	679503	PrimaryExpression	4096		679424	2					
ANR	679504	IdentifierDeclStatement	"ut64 v64 , value = 0 , size ;"	5163:1:154113:154138	679424	6	True				
ANR	679505	IdentifierDecl	v64		679424	0					
ANR	679506	IdentifierDeclType	ut64		679424	0					
ANR	679507	Identifier	v64		679424	1					
ANR	679508	IdentifierDecl	value = 0		679424	1					
ANR	679509	IdentifierDeclType	ut64		679424	0					
ANR	679510	Identifier	value		679424	1					
ANR	679511	AssignmentExpression	value = 0		679424	2		=			
ANR	679512	Identifier	value		679424	0					
ANR	679513	PrimaryExpression	0		679424	1					
ANR	679514	IdentifierDecl	size		679424	2					
ANR	679515	IdentifierDeclType	ut64		679424	0					
ANR	679516	Identifier	size		679424	1					
ANR	679517	IdentifierDeclStatement	"ut64 from = search_itv . addr , to = r_itv_end ( search_itv ) ;"	5164:1:154141:154197	679424	7	True				
ANR	679518	IdentifierDecl	from = search_itv . addr		679424	0					
ANR	679519	IdentifierDeclType	ut64		679424	0					
ANR	679520	Identifier	from		679424	1					
ANR	679521	AssignmentExpression	from = search_itv . addr		679424	2		=			
ANR	679522	Identifier	from		679424	0					
ANR	679523	MemberAccess	search_itv . addr		679424	1					
ANR	679524	Identifier	search_itv		679424	0					
ANR	679525	Identifier	addr		679424	1					
ANR	679526	IdentifierDecl	to = r_itv_end ( search_itv )		679424	1					
ANR	679527	IdentifierDeclType	ut64		679424	0					
ANR	679528	Identifier	to		679424	1					
ANR	679529	AssignmentExpression	to = r_itv_end ( search_itv )		679424	2		=			
ANR	679530	Identifier	to		679424	0					
ANR	679531	CallExpression	r_itv_end ( search_itv )		679424	1					
ANR	679532	Callee	r_itv_end		679424	0					
ANR	679533	Identifier	r_itv_end		679424	0					
ANR	679534	ArgumentList	search_itv		679424	1					
ANR	679535	Argument	search_itv		679424	0					
ANR	679536	Identifier	search_itv		679424	0					
ANR	679537	IdentifierDeclStatement	ut32 v32 ;	5165:1:154200:154208	679424	8	True				
ANR	679538	IdentifierDecl	v32		679424	0					
ANR	679539	IdentifierDeclType	ut32		679424	0					
ANR	679540	Identifier	v32		679424	1					
ANR	679541	IdentifierDeclStatement	ut16 v16 ;	5166:1:154211:154219	679424	9	True				
ANR	679542	IdentifierDecl	v16		679424	0					
ANR	679543	IdentifierDeclType	ut16		679424	0					
ANR	679544	Identifier	v16		679424	1					
ANR	679545	IfStatement	if ( from >= to )		679424	10					
ANR	679546	Condition	from >= to	5167:5:154226:154235	679424	0	True				
ANR	679547	RelationalExpression	from >= to		679424	0		>=			
ANR	679548	Identifier	from		679424	0					
ANR	679549	Identifier	to		679424	1					
ANR	679550	CompoundStatement		12:17:403:403	679424	1					
ANR	679551	ExpressionStatement	"eprintf ( ""Error: from must be lower than to\\n"" )"	5168:2:154242:154289	679424	0	True				
ANR	679552	CallExpression	"eprintf ( ""Error: from must be lower than to\\n"" )"		679424	0					
ANR	679553	Callee	eprintf		679424	0					
ANR	679554	Identifier	eprintf		679424	0					
ANR	679555	ArgumentList	"""Error: from must be lower than to\\n"""		679424	1					
ANR	679556	Argument	"""Error: from must be lower than to\\n"""		679424	0					
ANR	679557	PrimaryExpression	"""Error: from must be lower than to\\n"""		679424	0					
ANR	679558	ReturnStatement	return - 1 ;	5169:2:154293:154302	679424	1	True				
ANR	679559	UnaryOperationExpression	- 1		679424	0					
ANR	679560	UnaryOperator	-		679424	0					
ANR	679561	PrimaryExpression	1		679424	1					
ANR	679562	IdentifierDeclStatement	bool maybeThumb = false ;	5171:1:154308:154331	679424	11	True				
ANR	679563	IdentifierDecl	maybeThumb = false		679424	0					
ANR	679564	IdentifierDeclType	bool		679424	0					
ANR	679565	Identifier	maybeThumb		679424	1					
ANR	679566	AssignmentExpression	maybeThumb = false		679424	2		=			
ANR	679567	Identifier	false		679424	0					
ANR	679568	Identifier	false		679424	1					
ANR	679569	IfStatement	if ( align && core -> anal -> cur && core -> anal -> cur -> arch )		679424	12					
ANR	679570	Condition	align && core -> anal -> cur && core -> anal -> cur -> arch	5172:5:154338:154386	679424	0	True				
ANR	679571	AndExpression	align && core -> anal -> cur && core -> anal -> cur -> arch		679424	0		&&			
ANR	679572	Identifier	align		679424	0					
ANR	679573	AndExpression	core -> anal -> cur && core -> anal -> cur -> arch		679424	1		&&			
ANR	679574	PtrMemberAccess	core -> anal -> cur		679424	0					
ANR	679575	PtrMemberAccess	core -> anal		679424	0					
ANR	679576	Identifier	core		679424	0					
ANR	679577	Identifier	anal		679424	1					
ANR	679578	Identifier	cur		679424	1					
ANR	679579	PtrMemberAccess	core -> anal -> cur -> arch		679424	1					
ANR	679580	PtrMemberAccess	core -> anal -> cur		679424	0					
ANR	679581	PtrMemberAccess	core -> anal		679424	0					
ANR	679582	Identifier	core		679424	0					
ANR	679583	Identifier	anal		679424	1					
ANR	679584	Identifier	cur		679424	1					
ANR	679585	Identifier	arch		679424	1					
ANR	679586	CompoundStatement		17:56:554:554	679424	1					
ANR	679587	IfStatement	"if ( ! strcmp ( core -> anal -> cur -> arch , ""arm"" ) && core -> anal -> bits != 64 )"		679424	0					
ANR	679588	Condition	"! strcmp ( core -> anal -> cur -> arch , ""arm"" ) && core -> anal -> bits != 64"	5173:6:154397:154460	679424	0	True				
ANR	679589	AndExpression	"! strcmp ( core -> anal -> cur -> arch , ""arm"" ) && core -> anal -> bits != 64"		679424	0		&&			
ANR	679590	UnaryOperationExpression	"! strcmp ( core -> anal -> cur -> arch , ""arm"" )"		679424	0					
ANR	679591	UnaryOperator	!		679424	0					
ANR	679592	CallExpression	"strcmp ( core -> anal -> cur -> arch , ""arm"" )"		679424	1					
ANR	679593	Callee	strcmp		679424	0					
ANR	679594	Identifier	strcmp		679424	0					
ANR	679595	ArgumentList	core -> anal -> cur -> arch		679424	1					
ANR	679596	Argument	core -> anal -> cur -> arch		679424	0					
ANR	679597	PtrMemberAccess	core -> anal -> cur -> arch		679424	0					
ANR	679598	PtrMemberAccess	core -> anal -> cur		679424	0					
ANR	679599	PtrMemberAccess	core -> anal		679424	0					
ANR	679600	Identifier	core		679424	0					
ANR	679601	Identifier	anal		679424	1					
ANR	679602	Identifier	cur		679424	1					
ANR	679603	Identifier	arch		679424	1					
ANR	679604	Argument	"""arm"""		679424	1					
ANR	679605	PrimaryExpression	"""arm"""		679424	0					
ANR	679606	EqualityExpression	core -> anal -> bits != 64		679424	1		!=			
ANR	679607	PtrMemberAccess	core -> anal -> bits		679424	0					
ANR	679608	PtrMemberAccess	core -> anal		679424	0					
ANR	679609	Identifier	core		679424	0					
ANR	679610	Identifier	anal		679424	1					
ANR	679611	Identifier	bits		679424	1					
ANR	679612	PrimaryExpression	64		679424	1					
ANR	679613	CompoundStatement		18:72:628:628	679424	1					
ANR	679614	ExpressionStatement	maybeThumb = true	5174:3:154468:154485	679424	0	True				
ANR	679615	AssignmentExpression	maybeThumb = true		679424	0		=			
ANR	679616	Identifier	maybeThumb		679424	0					
ANR	679617	Identifier	true		679424	1					
ANR	679618	IfStatement	if ( vmin >= vmax )		679424	13					
ANR	679619	Condition	vmin >= vmax	5178:5:154500:154511	679424	0	True				
ANR	679620	RelationalExpression	vmin >= vmax		679424	0		>=			
ANR	679621	Identifier	vmin		679424	0					
ANR	679622	Identifier	vmax		679424	1					
ANR	679623	CompoundStatement		23:19:679:679	679424	1					
ANR	679624	ExpressionStatement	"eprintf ( ""Error: vmin must be lower than vmax\\n"" )"	5179:2:154518:154567	679424	0	True				
ANR	679625	CallExpression	"eprintf ( ""Error: vmin must be lower than vmax\\n"" )"		679424	0					
ANR	679626	Callee	eprintf		679424	0					
ANR	679627	Identifier	eprintf		679424	0					
ANR	679628	ArgumentList	"""Error: vmin must be lower than vmax\\n"""		679424	1					
ANR	679629	Argument	"""Error: vmin must be lower than vmax\\n"""		679424	0					
ANR	679630	PrimaryExpression	"""Error: vmin must be lower than vmax\\n"""		679424	0					
ANR	679631	ReturnStatement	return - 1 ;	5180:2:154571:154580	679424	1	True				
ANR	679632	UnaryOperationExpression	- 1		679424	0					
ANR	679633	UnaryOperator	-		679424	0					
ANR	679634	PrimaryExpression	1		679424	1					
ANR	679635	IfStatement	if ( to == UT64_MAX )		679424	14					
ANR	679636	Condition	to == UT64_MAX	5182:5:154590:154603	679424	0	True				
ANR	679637	EqualityExpression	to == UT64_MAX		679424	0		==			
ANR	679638	Identifier	to		679424	0					
ANR	679639	Identifier	UT64_MAX		679424	1					
ANR	679640	CompoundStatement		27:21:771:771	679424	1					
ANR	679641	ExpressionStatement	"eprintf ( ""Error: Invalid destination boundary\\n"" )"	5183:2:154610:154659	679424	0	True				
ANR	679642	CallExpression	"eprintf ( ""Error: Invalid destination boundary\\n"" )"		679424	0					
ANR	679643	Callee	eprintf		679424	0					
ANR	679644	Identifier	eprintf		679424	0					
ANR	679645	ArgumentList	"""Error: Invalid destination boundary\\n"""		679424	1					
ANR	679646	Argument	"""Error: Invalid destination boundary\\n"""		679424	0					
ANR	679647	PrimaryExpression	"""Error: Invalid destination boundary\\n"""		679424	0					
ANR	679648	ReturnStatement	return - 1 ;	5184:2:154663:154672	679424	1	True				
ANR	679649	UnaryOperationExpression	- 1		679424	0					
ANR	679650	UnaryOperator	-		679424	0					
ANR	679651	PrimaryExpression	1		679424	1					
ANR	679652	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	5186:1:154678:154708	679424	15	True				
ANR	679653	CallExpression	"r_cons_break_push ( NULL , NULL )"		679424	0					
ANR	679654	Callee	r_cons_break_push		679424	0					
ANR	679655	Identifier	r_cons_break_push		679424	0					
ANR	679656	ArgumentList	NULL		679424	1					
ANR	679657	Argument	NULL		679424	0					
ANR	679658	Identifier	NULL		679424	0					
ANR	679659	Argument	NULL		679424	1					
ANR	679660	Identifier	NULL		679424	0					
ANR	679661	WhileStatement	while ( from < to )		679424	16					
ANR	679662	Condition	from < to	5188:8:154719:154727	679424	0	True				
ANR	679663	RelationalExpression	from < to		679424	0		<			
ANR	679664	Identifier	from		679424	0					
ANR	679665	Identifier	to		679424	1					
ANR	679666	CompoundStatement		39:2:1050:1108	679424	1					
ANR	679667	ExpressionStatement	"size = R_MIN ( to - from , sizeof ( buf ) )"	5189:2:154734:154772	679424	0	True				
ANR	679668	AssignmentExpression	"size = R_MIN ( to - from , sizeof ( buf ) )"		679424	0		=			
ANR	679669	Identifier	size		679424	0					
ANR	679670	CallExpression	"R_MIN ( to - from , sizeof ( buf ) )"		679424	1					
ANR	679671	Callee	R_MIN		679424	0					
ANR	679672	Identifier	R_MIN		679424	0					
ANR	679673	ArgumentList	to - from		679424	1					
ANR	679674	Argument	to - from		679424	0					
ANR	679675	AdditiveExpression	to - from		679424	0		-			
ANR	679676	Identifier	to		679424	0					
ANR	679677	Identifier	from		679424	1					
ANR	679678	Argument	sizeof ( buf )		679424	1					
ANR	679679	SizeofExpression	sizeof ( buf )		679424	0					
ANR	679680	Sizeof	sizeof		679424	0					
ANR	679681	SizeofOperand	buf		679424	1					
ANR	679682	ExpressionStatement	"memset ( buf , 0xff , sizeof ( buf ) )"	5190:2:154776:154808	679424	1	True				
ANR	679683	CallExpression	"memset ( buf , 0xff , sizeof ( buf ) )"		679424	0					
ANR	679684	Callee	memset		679424	0					
ANR	679685	Identifier	memset		679424	0					
ANR	679686	ArgumentList	buf		679424	1					
ANR	679687	Argument	buf		679424	0					
ANR	679688	Identifier	buf		679424	0					
ANR	679689	Argument	0xff		679424	1					
ANR	679690	PrimaryExpression	0xff		679424	0					
ANR	679691	Argument	sizeof ( buf )		679424	2					
ANR	679692	SizeofExpression	sizeof ( buf )		679424	0					
ANR	679693	Sizeof	sizeof		679424	0					
ANR	679694	SizeofOperand	buf		679424	1					
ANR	679695	IfStatement	if ( r_cons_is_breaked ( ) )		679424	2					
ANR	679696	Condition	r_cons_is_breaked ( )	5191:6:154840:154859	679424	0	True				
ANR	679697	CallExpression	r_cons_is_breaked ( )		679424	0					
ANR	679698	Callee	r_cons_is_breaked		679424	0					
ANR	679699	Identifier	r_cons_is_breaked		679424	0					
ANR	679700	ArgumentList			679424	1					
ANR	679701	CompoundStatement		36:28:1027:1027	679424	1					
ANR	679702	GotoStatement	goto beach ;	5192:3:154867:154877	679424	0	True				
ANR	679703	Identifier	beach		679424	0					
ANR	679704	IdentifierDeclStatement	"bool res = r_io_read_at_mapped ( core -> io , from , buf , size ) ;"	5194:2:154885:154943	679424	3	True				
ANR	679705	IdentifierDecl	"res = r_io_read_at_mapped ( core -> io , from , buf , size )"		679424	0					
ANR	679706	IdentifierDeclType	bool		679424	0					
ANR	679707	Identifier	res		679424	1					
ANR	679708	AssignmentExpression	"res = r_io_read_at_mapped ( core -> io , from , buf , size )"		679424	2		=			
ANR	679709	Identifier	res		679424	0					
ANR	679710	CallExpression	"r_io_read_at_mapped ( core -> io , from , buf , size )"		679424	1					
ANR	679711	Callee	r_io_read_at_mapped		679424	0					
ANR	679712	Identifier	r_io_read_at_mapped		679424	0					
ANR	679713	ArgumentList	core -> io		679424	1					
ANR	679714	Argument	core -> io		679424	0					
ANR	679715	PtrMemberAccess	core -> io		679424	0					
ANR	679716	Identifier	core		679424	0					
ANR	679717	Identifier	io		679424	1					
ANR	679718	Argument	from		679424	1					
ANR	679719	Identifier	from		679424	0					
ANR	679720	Argument	buf		679424	2					
ANR	679721	Identifier	buf		679424	0					
ANR	679722	Argument	size		679424	3					
ANR	679723	Identifier	size		679424	0					
ANR	679724	IfStatement	"if ( ! res || ! memcmp ( buf , ""\\xff\\xff\\xff\\xff"" , 4 ) || ! memcmp ( buf , ""\\x00\\x00\\x00\\x00"" , 4 ) )"		679424	4					
ANR	679725	Condition	"! res || ! memcmp ( buf , ""\\xff\\xff\\xff\\xff"" , 4 ) || ! memcmp ( buf , ""\\x00\\x00\\x00\\x00"" , 4 )"	5195:6:154951:155034	679424	0	True				
ANR	679726	OrExpression	"! res || ! memcmp ( buf , ""\\xff\\xff\\xff\\xff"" , 4 ) || ! memcmp ( buf , ""\\x00\\x00\\x00\\x00"" , 4 )"		679424	0		||			
ANR	679727	UnaryOperationExpression	! res		679424	0					
ANR	679728	UnaryOperator	!		679424	0					
ANR	679729	Identifier	res		679424	1					
ANR	679730	OrExpression	"! memcmp ( buf , ""\\xff\\xff\\xff\\xff"" , 4 ) || ! memcmp ( buf , ""\\x00\\x00\\x00\\x00"" , 4 )"		679424	1		||			
ANR	679731	UnaryOperationExpression	"! memcmp ( buf , ""\\xff\\xff\\xff\\xff"" , 4 )"		679424	0					
ANR	679732	UnaryOperator	!		679424	0					
ANR	679733	CallExpression	"memcmp ( buf , ""\\xff\\xff\\xff\\xff"" , 4 )"		679424	1					
ANR	679734	Callee	memcmp		679424	0					
ANR	679735	Identifier	memcmp		679424	0					
ANR	679736	ArgumentList	buf		679424	1					
ANR	679737	Argument	buf		679424	0					
ANR	679738	Identifier	buf		679424	0					
ANR	679739	Argument	"""\\xff\\xff\\xff\\xff"""		679424	1					
ANR	679740	PrimaryExpression	"""\\xff\\xff\\xff\\xff"""		679424	0					
ANR	679741	Argument	4		679424	2					
ANR	679742	PrimaryExpression	4		679424	0					
ANR	679743	UnaryOperationExpression	"! memcmp ( buf , ""\\x00\\x00\\x00\\x00"" , 4 )"		679424	1					
ANR	679744	UnaryOperator	!		679424	0					
ANR	679745	CallExpression	"memcmp ( buf , ""\\x00\\x00\\x00\\x00"" , 4 )"		679424	1					
ANR	679746	Callee	memcmp		679424	0					
ANR	679747	Identifier	memcmp		679424	0					
ANR	679748	ArgumentList	buf		679424	1					
ANR	679749	Argument	buf		679424	0					
ANR	679750	Identifier	buf		679424	0					
ANR	679751	Argument	"""\\x00\\x00\\x00\\x00"""		679424	1					
ANR	679752	PrimaryExpression	"""\\x00\\x00\\x00\\x00"""		679424	0					
ANR	679753	Argument	4		679424	2					
ANR	679754	PrimaryExpression	4		679424	0					
ANR	679755	CompoundStatement		40:92:1202:1202	679424	1					
ANR	679756	IfStatement	"if ( ! isValidAddress ( core , from ) )"		679424	0					
ANR	679757	Condition	"! isValidAddress ( core , from )"	5196:7:155046:155073	679424	0	True				
ANR	679758	UnaryOperationExpression	"! isValidAddress ( core , from )"		679424	0					
ANR	679759	UnaryOperator	!		679424	0					
ANR	679760	CallExpression	"isValidAddress ( core , from )"		679424	1					
ANR	679761	Callee	isValidAddress		679424	0					
ANR	679762	Identifier	isValidAddress		679424	0					
ANR	679763	ArgumentList	core		679424	1					
ANR	679764	Argument	core		679424	0					
ANR	679765	Identifier	core		679424	0					
ANR	679766	Argument	from		679424	1					
ANR	679767	Identifier	from		679424	0					
ANR	679768	CompoundStatement		42:4:1247:1297	679424	1					
ANR	679769	IdentifierDeclStatement	"ut64 next = r_io_map_next_address ( core -> io , from ) ;"	5197:4:155082:155132	679424	0	True				
ANR	679770	IdentifierDecl	"next = r_io_map_next_address ( core -> io , from )"		679424	0					
ANR	679771	IdentifierDeclType	ut64		679424	0					
ANR	679772	Identifier	next		679424	1					
ANR	679773	AssignmentExpression	"next = r_io_map_next_address ( core -> io , from )"		679424	2		=			
ANR	679774	Identifier	next		679424	0					
ANR	679775	CallExpression	"r_io_map_next_address ( core -> io , from )"		679424	1					
ANR	679776	Callee	r_io_map_next_address		679424	0					
ANR	679777	Identifier	r_io_map_next_address		679424	0					
ANR	679778	ArgumentList	core -> io		679424	1					
ANR	679779	Argument	core -> io		679424	0					
ANR	679780	PtrMemberAccess	core -> io		679424	0					
ANR	679781	Identifier	core		679424	0					
ANR	679782	Identifier	io		679424	1					
ANR	679783	Argument	from		679424	1					
ANR	679784	Identifier	from		679424	0					
ANR	679785	IfStatement	if ( next == UT64_MAX )		679424	1					
ANR	679786	Condition	next == UT64_MAX	5198:8:155142:155157	679424	0	True				
ANR	679787	EqualityExpression	next == UT64_MAX		679424	0		==			
ANR	679788	Identifier	next		679424	0					
ANR	679789	Identifier	UT64_MAX		679424	1					
ANR	679790	CompoundStatement		43:26:1325:1325	679424	1					
ANR	679791	ExpressionStatement	from += sizeof ( buf )	5199:5:155167:155187	679424	0	True				
ANR	679792	AssignmentExpression	from += sizeof ( buf )		679424	0		+=			
ANR	679793	Identifier	from		679424	0					
ANR	679794	SizeofExpression	sizeof ( buf )		679424	1					
ANR	679795	Sizeof	sizeof		679424	0					
ANR	679796	SizeofOperand	buf		679424	1					
ANR	679797	ElseStatement	else		679424	0					
ANR	679798	CompoundStatement		45:11:1365:1365	679424	0					
ANR	679799	ExpressionStatement	from += ( next - from )	5201:5:155207:155228	679424	0	True				
ANR	679800	AssignmentExpression	from += ( next - from )		679424	0		+=			
ANR	679801	Identifier	from		679424	0					
ANR	679802	AdditiveExpression	next - from		679424	1		-			
ANR	679803	Identifier	next		679424	0					
ANR	679804	Identifier	from		679424	1					
ANR	679805	ContinueStatement	continue ;	5203:4:155240:155248	679424	2	True				
ANR	679806	ForStatement	for ( i = 0 ; i <= ( size - vsize ) ; i ++ )		679424	5					
ANR	679807	ForInit	i = 0 ;	5206:7:155266:155271	679424	0	True				
ANR	679808	AssignmentExpression	i = 0		679424	0		=			
ANR	679809	Identifier	i		679424	0					
ANR	679810	PrimaryExpression	0		679424	1					
ANR	679811	Condition	i <= ( size - vsize )	5206:14:155273:155291	679424	1	True				
ANR	679812	RelationalExpression	i <= ( size - vsize )		679424	0		<=			
ANR	679813	Identifier	i		679424	0					
ANR	679814	AdditiveExpression	size - vsize		679424	1		-			
ANR	679815	Identifier	size		679424	0					
ANR	679816	Identifier	vsize		679424	1					
ANR	679817	PostIncDecOperationExpression	i ++	5206:35:155294:155296	679424	2	True				
ANR	679818	Identifier	i		679424	0					
ANR	679819	IncDec	++		679424	1					
ANR	679820	CompoundStatement		61:3:1645:1664	679424	3					
ANR	679821	IdentifierDeclStatement	void * v = ( buf + i ) ;	5207:3:155304:155323	679424	0	True				
ANR	679822	IdentifierDecl	* v = ( buf + i )		679424	0					
ANR	679823	IdentifierDeclType	void *		679424	0					
ANR	679824	Identifier	v		679424	1					
ANR	679825	AssignmentExpression	* v = ( buf + i )		679424	2		=			
ANR	679826	Identifier	v		679424	0					
ANR	679827	AdditiveExpression	buf + i		679424	1		+			
ANR	679828	Identifier	buf		679424	0					
ANR	679829	Identifier	i		679424	1					
ANR	679830	IdentifierDeclStatement	ut64 addr = from + i ;	5208:3:155328:155348	679424	1	True				
ANR	679831	IdentifierDecl	addr = from + i		679424	0					
ANR	679832	IdentifierDeclType	ut64		679424	0					
ANR	679833	Identifier	addr		679424	1					
ANR	679834	AssignmentExpression	addr = from + i		679424	2		=			
ANR	679835	Identifier	addr		679424	0					
ANR	679836	AdditiveExpression	from + i		679424	1		+			
ANR	679837	Identifier	from		679424	0					
ANR	679838	Identifier	i		679424	1					
ANR	679839	IfStatement	if ( r_cons_is_breaked ( ) )		679424	2					
ANR	679840	Condition	r_cons_is_breaked ( )	5209:7:155357:155376	679424	0	True				
ANR	679841	CallExpression	r_cons_is_breaked ( )		679424	0					
ANR	679842	Callee	r_cons_is_breaked		679424	0					
ANR	679843	Identifier	r_cons_is_breaked		679424	0					
ANR	679844	ArgumentList			679424	1					
ANR	679845	CompoundStatement		54:29:1544:1544	679424	1					
ANR	679846	GotoStatement	goto beach ;	5210:4:155385:155395	679424	0	True				
ANR	679847	Identifier	beach		679424	0					
ANR	679848	IfStatement	if ( align && ( addr ) % align )		679424	3					
ANR	679849	Condition	align && ( addr ) % align	5212:7:155409:155431	679424	0	True				
ANR	679850	AndExpression	align && ( addr ) % align		679424	0		&&			
ANR	679851	Identifier	align		679424	0					
ANR	679852	MultiplicativeExpression	( addr ) % align		679424	1		%			
ANR	679853	Identifier	addr		679424	0					
ANR	679854	Identifier	align		679424	1					
ANR	679855	CompoundStatement		57:32:1599:1599	679424	1					
ANR	679856	ContinueStatement	continue ;	5213:4:155440:155448	679424	0	True				
ANR	679857	IdentifierDeclStatement	int match = false ;	5215:3:155458:155475	679424	4	True				
ANR	679858	IdentifierDecl	match = false		679424	0					
ANR	679859	IdentifierDeclType	int		679424	0					
ANR	679860	Identifier	match		679424	1					
ANR	679861	AssignmentExpression	match = false		679424	2		=			
ANR	679862	Identifier	false		679424	0					
ANR	679863	Identifier	false		679424	1					
ANR	679864	IdentifierDeclStatement	int left = size - i ;	5216:3:155480:155499	679424	5	True				
ANR	679865	IdentifierDecl	left = size - i		679424	0					
ANR	679866	IdentifierDeclType	int		679424	0					
ANR	679867	Identifier	left		679424	1					
ANR	679868	AssignmentExpression	left = size - i		679424	2		=			
ANR	679869	Identifier	left		679424	0					
ANR	679870	AdditiveExpression	size - i		679424	1		-			
ANR	679871	Identifier	size		679424	0					
ANR	679872	Identifier	i		679424	1					
ANR	679873	IfStatement	if ( vsize > left )		679424	6					
ANR	679874	Condition	vsize > left	5217:7:155508:155519	679424	0	True				
ANR	679875	RelationalExpression	vsize > left		679424	0		>			
ANR	679876	Identifier	vsize		679424	0					
ANR	679877	Identifier	left		679424	1					
ANR	679878	CompoundStatement		62:21:1687:1687	679424	1					
ANR	679879	BreakStatement	break ;	5218:4:155528:155533	679424	0	True				
ANR	679880	SwitchStatement	switch ( vsize )		679424	7					
ANR	679881	Condition	vsize	5220:11:155551:155555	679424	0	True				
ANR	679882	Identifier	vsize		679424	0					
ANR	679883	CompoundStatement		65:18:1723:1723	679424	1					
ANR	679884	Label	case 1 :	5221:3:155563:155569	679424	0	True				
ANR	679885	ExpressionStatement	value = * ( ut8 * ) v	5221:11:155571:155588	679424	1	True				
ANR	679886	AssignmentExpression	value = * ( ut8 * ) v		679424	0		=			
ANR	679887	Identifier	value		679424	0					
ANR	679888	UnaryOperationExpression	* ( ut8 * ) v		679424	1					
ANR	679889	UnaryOperator	*		679424	0					
ANR	679890	CastExpression	( ut8 * ) v		679424	1					
ANR	679891	CastTarget	ut8 *		679424	0					
ANR	679892	Identifier	v		679424	1					
ANR	679893	ExpressionStatement	match = ( buf [ i ] >= vmin && buf [ i ] <= vmax )	5221:30:155590:155632	679424	2	True				
ANR	679894	AssignmentExpression	match = ( buf [ i ] >= vmin && buf [ i ] <= vmax )		679424	0		=			
ANR	679895	Identifier	match		679424	0					
ANR	679896	AndExpression	buf [ i ] >= vmin && buf [ i ] <= vmax		679424	1		&&			
ANR	679897	RelationalExpression	buf [ i ] >= vmin		679424	0		>=			
ANR	679898	ArrayIndexing	buf [ i ]		679424	0					
ANR	679899	Identifier	buf		679424	0					
ANR	679900	Identifier	i		679424	1					
ANR	679901	Identifier	vmin		679424	1					
ANR	679902	RelationalExpression	buf [ i ] <= vmax		679424	1		<=			
ANR	679903	ArrayIndexing	buf [ i ]		679424	0					
ANR	679904	Identifier	buf		679424	0					
ANR	679905	Identifier	i		679424	1					
ANR	679906	Identifier	vmax		679424	1					
ANR	679907	BreakStatement	break ;	5221:74:155634:155639	679424	3	True				
ANR	679908	Label	case 2 :	5222:3:155644:155650	679424	4	True				
ANR	679909	ExpressionStatement	v16 = * ( uut16 * ) v	5222:11:155652:155669	679424	5	True				
ANR	679910	AssignmentExpression	v16 = * ( uut16 * ) v		679424	0		=			
ANR	679911	Identifier	v16		679424	0					
ANR	679912	UnaryOperationExpression	* ( uut16 * ) v		679424	1					
ANR	679913	UnaryOperator	*		679424	0					
ANR	679914	CastExpression	( uut16 * ) v		679424	1					
ANR	679915	CastTarget	uut16 *		679424	0					
ANR	679916	Identifier	v		679424	1					
ANR	679917	ExpressionStatement	match = ( v16 >= vmin && v16 <= vmax )	5222:30:155671:155707	679424	6	True				
ANR	679918	AssignmentExpression	match = ( v16 >= vmin && v16 <= vmax )		679424	0		=			
ANR	679919	Identifier	match		679424	0					
ANR	679920	AndExpression	v16 >= vmin && v16 <= vmax		679424	1		&&			
ANR	679921	RelationalExpression	v16 >= vmin		679424	0		>=			
ANR	679922	Identifier	v16		679424	0					
ANR	679923	Identifier	vmin		679424	1					
ANR	679924	RelationalExpression	v16 <= vmax		679424	1		<=			
ANR	679925	Identifier	v16		679424	0					
ANR	679926	Identifier	vmax		679424	1					
ANR	679927	ExpressionStatement	value = v16	5222:68:155709:155720	679424	7	True				
ANR	679928	AssignmentExpression	value = v16		679424	0		=			
ANR	679929	Identifier	value		679424	0					
ANR	679930	Identifier	v16		679424	1					
ANR	679931	BreakStatement	break ;	5222:81:155722:155727	679424	8	True				
ANR	679932	Label	case 4 :	5223:3:155732:155738	679424	9	True				
ANR	679933	ExpressionStatement	v32 = * ( uut32 * ) v	5223:11:155740:155757	679424	10	True				
ANR	679934	AssignmentExpression	v32 = * ( uut32 * ) v		679424	0		=			
ANR	679935	Identifier	v32		679424	0					
ANR	679936	UnaryOperationExpression	* ( uut32 * ) v		679424	1					
ANR	679937	UnaryOperator	*		679424	0					
ANR	679938	CastExpression	( uut32 * ) v		679424	1					
ANR	679939	CastTarget	uut32 *		679424	0					
ANR	679940	Identifier	v		679424	1					
ANR	679941	ExpressionStatement	match = ( v32 >= vmin && v32 <= vmax )	5223:30:155759:155795	679424	11	True				
ANR	679942	AssignmentExpression	match = ( v32 >= vmin && v32 <= vmax )		679424	0		=			
ANR	679943	Identifier	match		679424	0					
ANR	679944	AndExpression	v32 >= vmin && v32 <= vmax		679424	1		&&			
ANR	679945	RelationalExpression	v32 >= vmin		679424	0		>=			
ANR	679946	Identifier	v32		679424	0					
ANR	679947	Identifier	vmin		679424	1					
ANR	679948	RelationalExpression	v32 <= vmax		679424	1		<=			
ANR	679949	Identifier	v32		679424	0					
ANR	679950	Identifier	vmax		679424	1					
ANR	679951	ExpressionStatement	value = v32	5223:68:155797:155808	679424	12	True				
ANR	679952	AssignmentExpression	value = v32		679424	0		=			
ANR	679953	Identifier	value		679424	0					
ANR	679954	Identifier	v32		679424	1					
ANR	679955	BreakStatement	break ;	5223:81:155810:155815	679424	13	True				
ANR	679956	Label	case 8 :	5224:3:155820:155826	679424	14	True				
ANR	679957	ExpressionStatement	v64 = * ( uut64 * ) v	5224:11:155828:155845	679424	15	True				
ANR	679958	AssignmentExpression	v64 = * ( uut64 * ) v		679424	0		=			
ANR	679959	Identifier	v64		679424	0					
ANR	679960	UnaryOperationExpression	* ( uut64 * ) v		679424	1					
ANR	679961	UnaryOperator	*		679424	0					
ANR	679962	CastExpression	( uut64 * ) v		679424	1					
ANR	679963	CastTarget	uut64 *		679424	0					
ANR	679964	Identifier	v		679424	1					
ANR	679965	ExpressionStatement	match = ( v64 >= vmin && v64 <= vmax )	5224:30:155847:155883	679424	16	True				
ANR	679966	AssignmentExpression	match = ( v64 >= vmin && v64 <= vmax )		679424	0		=			
ANR	679967	Identifier	match		679424	0					
ANR	679968	AndExpression	v64 >= vmin && v64 <= vmax		679424	1		&&			
ANR	679969	RelationalExpression	v64 >= vmin		679424	0		>=			
ANR	679970	Identifier	v64		679424	0					
ANR	679971	Identifier	vmin		679424	1					
ANR	679972	RelationalExpression	v64 <= vmax		679424	1		<=			
ANR	679973	Identifier	v64		679424	0					
ANR	679974	Identifier	vmax		679424	1					
ANR	679975	ExpressionStatement	value = v64	5224:68:155885:155896	679424	17	True				
ANR	679976	AssignmentExpression	value = v64		679424	0		=			
ANR	679977	Identifier	value		679424	0					
ANR	679978	Identifier	v64		679424	1					
ANR	679979	BreakStatement	break ;	5224:81:155898:155903	679424	18	True				
ANR	679980	Label	default :	5225:3:155908:155915	679424	19	True				
ANR	679981	Identifier	default		679424	0					
ANR	679982	ExpressionStatement	"eprintf ( ""Unknown vsize %d\\n"" , vsize )"	5225:12:155917:155954	679424	20	True				
ANR	679983	CallExpression	"eprintf ( ""Unknown vsize %d\\n"" , vsize )"		679424	0					
ANR	679984	Callee	eprintf		679424	0					
ANR	679985	Identifier	eprintf		679424	0					
ANR	679986	ArgumentList	"""Unknown vsize %d\\n"""		679424	1					
ANR	679987	Argument	"""Unknown vsize %d\\n"""		679424	0					
ANR	679988	PrimaryExpression	"""Unknown vsize %d\\n"""		679424	0					
ANR	679989	Argument	vsize		679424	1					
ANR	679990	Identifier	vsize		679424	0					
ANR	679991	ReturnStatement	return - 1 ;	5225:51:155956:155965	679424	21	True				
ANR	679992	UnaryOperationExpression	- 1		679424	0					
ANR	679993	UnaryOperator	-		679424	0					
ANR	679994	PrimaryExpression	1		679424	1					
ANR	679995	IfStatement	if ( match && ! vinfun )		679424	8					
ANR	679996	Condition	match && ! vinfun	5227:7:155979:155994	679424	0	True				
ANR	679997	AndExpression	match && ! vinfun		679424	0		&&			
ANR	679998	Identifier	match		679424	0					
ANR	679999	UnaryOperationExpression	! vinfun		679424	1					
ANR	680000	UnaryOperator	!		679424	0					
ANR	680001	Identifier	vinfun		679424	1					
ANR	680002	CompoundStatement		72:25:2162:2162	679424	1					
ANR	680003	IfStatement	if ( vinfunr )		679424	0					
ANR	680004	Condition	vinfunr	5228:8:156007:156013	679424	0	True				
ANR	680005	Identifier	vinfunr		679424	0					
ANR	680006	CompoundStatement		73:17:2181:2181	679424	1					
ANR	680007	IfStatement	"if ( r_anal_get_fcn_in_bounds ( core -> anal , addr , R_ANAL_FCN_TYPE_NULL ) )"		679424	0					
ANR	680008	Condition	"r_anal_get_fcn_in_bounds ( core -> anal , addr , R_ANAL_FCN_TYPE_NULL )"	5229:9:156027:156091	679424	0	True				
ANR	680009	CallExpression	"r_anal_get_fcn_in_bounds ( core -> anal , addr , R_ANAL_FCN_TYPE_NULL )"		679424	0					
ANR	680010	Callee	r_anal_get_fcn_in_bounds		679424	0					
ANR	680011	Identifier	r_anal_get_fcn_in_bounds		679424	0					
ANR	680012	ArgumentList	core -> anal		679424	1					
ANR	680013	Argument	core -> anal		679424	0					
ANR	680014	PtrMemberAccess	core -> anal		679424	0					
ANR	680015	Identifier	core		679424	0					
ANR	680016	Identifier	anal		679424	1					
ANR	680017	Argument	addr		679424	1					
ANR	680018	Identifier	addr		679424	0					
ANR	680019	Argument	R_ANAL_FCN_TYPE_NULL		679424	2					
ANR	680020	Identifier	R_ANAL_FCN_TYPE_NULL		679424	0					
ANR	680021	CompoundStatement		74:76:2259:2259	679424	1					
ANR	680022	ExpressionStatement	match = false	5230:6:156102:156115	679424	0	True				
ANR	680023	AssignmentExpression	match = false		679424	0		=			
ANR	680024	Identifier	match		679424	0					
ANR	680025	Identifier	false		679424	1					
ANR	680026	ElseStatement	else		679424	0					
ANR	680027	CompoundStatement		77:11:2300:2300	679424	0					
ANR	680028	IfStatement	"if ( r_anal_get_fcn_in ( core -> anal , addr , R_ANAL_FCN_TYPE_NULL ) )"		679424	0					
ANR	680029	Condition	"r_anal_get_fcn_in ( core -> anal , addr , R_ANAL_FCN_TYPE_NULL )"	5233:9:156146:156203	679424	0	True				
ANR	680030	CallExpression	"r_anal_get_fcn_in ( core -> anal , addr , R_ANAL_FCN_TYPE_NULL )"		679424	0					
ANR	680031	Callee	r_anal_get_fcn_in		679424	0					
ANR	680032	Identifier	r_anal_get_fcn_in		679424	0					
ANR	680033	ArgumentList	core -> anal		679424	1					
ANR	680034	Argument	core -> anal		679424	0					
ANR	680035	PtrMemberAccess	core -> anal		679424	0					
ANR	680036	Identifier	core		679424	0					
ANR	680037	Identifier	anal		679424	1					
ANR	680038	Argument	addr		679424	1					
ANR	680039	Identifier	addr		679424	0					
ANR	680040	Argument	R_ANAL_FCN_TYPE_NULL		679424	2					
ANR	680041	Identifier	R_ANAL_FCN_TYPE_NULL		679424	0					
ANR	680042	CompoundStatement		78:69:2371:2371	679424	1					
ANR	680043	ExpressionStatement	match = false	5234:6:156214:156227	679424	0	True				
ANR	680044	AssignmentExpression	match = false		679424	0		=			
ANR	680045	Identifier	match		679424	0					
ANR	680046	Identifier	false		679424	1					
ANR	680047	IfStatement	if ( match && value )		679424	9					
ANR	680048	Condition	match && value	5238:7:156254:156267	679424	0	True				
ANR	680049	AndExpression	match && value		679424	0		&&			
ANR	680050	Identifier	match		679424	0					
ANR	680051	Identifier	value		679424	1					
ANR	680052	CompoundStatement		84:4:2441:2465	679424	1					
ANR	680053	IdentifierDeclStatement	bool isValidMatch = true ;	5239:4:156276:156300	679424	0	True				
ANR	680054	IdentifierDecl	isValidMatch = true		679424	0					
ANR	680055	IdentifierDeclType	bool		679424	0					
ANR	680056	Identifier	isValidMatch		679424	1					
ANR	680057	AssignmentExpression	isValidMatch = true		679424	2		=			
ANR	680058	Identifier	true		679424	0					
ANR	680059	Identifier	true		679424	1					
ANR	680060	IfStatement	if ( align && ( value % align ) )		679424	1					
ANR	680061	Condition	align && ( value % align )	5240:8:156310:156333	679424	0	True				
ANR	680062	AndExpression	align && ( value % align )		679424	0		&&			
ANR	680063	Identifier	align		679424	0					
ANR	680064	MultiplicativeExpression	value % align		679424	1		%			
ANR	680065	Identifier	value		679424	0					
ANR	680066	Identifier	align		679424	1					
ANR	680067	CompoundStatement		85:34:2501:2501	679424	1					
ANR	680068	ExpressionStatement	isValidMatch = false	5242:5:156415:156435	679424	0	True				
ANR	680069	AssignmentExpression	isValidMatch = false		679424	0		=			
ANR	680070	Identifier	isValidMatch		679424	0					
ANR	680071	Identifier	false		679424	1					
ANR	680072	IfStatement	if ( maybeThumb && ( value & 1 ) )		679424	1					
ANR	680073	Condition	maybeThumb && ( value & 1 )	5243:9:156446:156470	679424	0	True				
ANR	680074	AndExpression	maybeThumb && ( value & 1 )		679424	0		&&			
ANR	680075	Identifier	maybeThumb		679424	0					
ANR	680076	BitAndExpression	value & 1		679424	1		&			
ANR	680077	Identifier	value		679424	0					
ANR	680078	PrimaryExpression	1		679424	1					
ANR	680079	CompoundStatement		88:36:2638:2638	679424	1					
ANR	680080	ExpressionStatement	isValidMatch = true	5244:6:156481:156500	679424	0	True				
ANR	680081	AssignmentExpression	isValidMatch = true		679424	0		=			
ANR	680082	Identifier	isValidMatch		679424	0					
ANR	680083	Identifier	true		679424	1					
ANR	680084	IfStatement	if ( isValidMatch )		679424	2					
ANR	680085	Condition	isValidMatch	5247:8:156523:156534	679424	0	True				
ANR	680086	Identifier	isValidMatch		679424	0					
ANR	680087	CompoundStatement		92:22:2702:2702	679424	1					
ANR	680088	ExpressionStatement	"cb ( core , addr , value , vsize , asterisk , hitctr )"	5248:5:156544:156591	679424	0	True				
ANR	680089	CallExpression	"cb ( core , addr , value , vsize , asterisk , hitctr )"		679424	0					
ANR	680090	Callee	cb		679424	0					
ANR	680091	Identifier	cb		679424	0					
ANR	680092	ArgumentList	core		679424	1					
ANR	680093	Argument	core		679424	0					
ANR	680094	Identifier	core		679424	0					
ANR	680095	Argument	addr		679424	1					
ANR	680096	Identifier	addr		679424	0					
ANR	680097	Argument	value		679424	2					
ANR	680098	Identifier	value		679424	0					
ANR	680099	Argument	vsize		679424	3					
ANR	680100	Identifier	vsize		679424	0					
ANR	680101	Argument	asterisk		679424	4					
ANR	680102	Identifier	asterisk		679424	0					
ANR	680103	Argument	hitctr		679424	5					
ANR	680104	Identifier	hitctr		679424	0					
ANR	680105	IfStatement	"if ( analStrings && stringAt ( core , addr ) )"		679424	1					
ANR	680106	Condition	"analStrings && stringAt ( core , addr )"	5249:9:156602:156637	679424	0	True				
ANR	680107	AndExpression	"analStrings && stringAt ( core , addr )"		679424	0		&&			
ANR	680108	Identifier	analStrings		679424	0					
ANR	680109	CallExpression	"stringAt ( core , addr )"		679424	1					
ANR	680110	Callee	stringAt		679424	0					
ANR	680111	Identifier	stringAt		679424	0					
ANR	680112	ArgumentList	core		679424	1					
ANR	680113	Argument	core		679424	0					
ANR	680114	Identifier	core		679424	0					
ANR	680115	Argument	addr		679424	1					
ANR	680116	Identifier	addr		679424	0					
ANR	680117	CompoundStatement		94:47:2805:2805	679424	1					
ANR	680118	ExpressionStatement	"add_string_ref ( mycore , addr , value )"	5250:6:156648:156684	679424	0	True				
ANR	680119	CallExpression	"add_string_ref ( mycore , addr , value )"		679424	0					
ANR	680120	Callee	add_string_ref		679424	0					
ANR	680121	Identifier	add_string_ref		679424	0					
ANR	680122	ArgumentList	mycore		679424	1					
ANR	680123	Argument	mycore		679424	0					
ANR	680124	Identifier	mycore		679424	0					
ANR	680125	Argument	addr		679424	1					
ANR	680126	Identifier	addr		679424	0					
ANR	680127	Argument	value		679424	2					
ANR	680128	Identifier	value		679424	0					
ANR	680129	ExpressionStatement	hitctr ++	5252:5:156698:156706	679424	2	True				
ANR	680130	PostIncDecOperationExpression	hitctr ++		679424	0					
ANR	680131	Identifier	hitctr		679424	0					
ANR	680132	IncDec	++		679424	1					
ANR	680133	IfStatement	if ( size == to - from )		679424	6					
ANR	680134	Condition	size == to - from	5256:6:156729:156743	679424	0	True				
ANR	680135	EqualityExpression	size == to - from		679424	0		==			
ANR	680136	Identifier	size		679424	0					
ANR	680137	AdditiveExpression	to - from		679424	1		-			
ANR	680138	Identifier	to		679424	0					
ANR	680139	Identifier	from		679424	1					
ANR	680140	CompoundStatement		101:23:2911:2911	679424	1					
ANR	680141	BreakStatement	break ;	5257:3:156751:156756	679424	0	True				
ANR	680142	ExpressionStatement	from += size - vsize + 1	5259:2:156764:156784	679424	7	True				
ANR	680143	AssignmentExpression	from += size - vsize + 1		679424	0		+=			
ANR	680144	Identifier	from		679424	0					
ANR	680145	AdditiveExpression	size - vsize + 1		679424	1		-			
ANR	680146	Identifier	size		679424	0					
ANR	680147	AdditiveExpression	vsize + 1		679424	1		+			
ANR	680148	Identifier	vsize		679424	0					
ANR	680149	PrimaryExpression	1		679424	1					
ANR	680150	Label	beach :	5261:0:156789:156794	679424	17	True				
ANR	680151	Identifier	beach		679424	0					
ANR	680152	ExpressionStatement	r_cons_break_pop ( )	5262:1:156797:156816	679424	18	True				
ANR	680153	CallExpression	r_cons_break_pop ( )		679424	0					
ANR	680154	Callee	r_cons_break_pop		679424	0					
ANR	680155	Identifier	r_cons_break_pop		679424	0					
ANR	680156	ArgumentList			679424	1					
ANR	680157	ReturnStatement	return hitctr ;	5263:1:156819:156832	679424	19	True				
ANR	680158	Identifier	hitctr		679424	0					
ANR	680159	ReturnType	R_API int		679424	1					
ANR	680160	Identifier	r_core_search_value_in_range		679424	2					
ANR	680161	ParameterList	"RCore * core , RInterval search_itv , ut64 vmin , ut64 vmax , int vsize , bool asterisk , inRangeCb cb"		679424	3					
ANR	680162	Parameter	RCore * core	5155:39:153728:153738	679424	0	True				
ANR	680163	ParameterType	RCore *		679424	0					
ANR	680164	Identifier	core		679424	1					
ANR	680165	Parameter	RInterval search_itv	5155:52:153741:153760	679424	1	True				
ANR	680166	ParameterType	RInterval		679424	0					
ANR	680167	Identifier	search_itv		679424	1					
ANR	680168	Parameter	ut64 vmin	5155:74:153763:153771	679424	2	True				
ANR	680169	ParameterType	ut64		679424	0					
ANR	680170	Identifier	vmin		679424	1					
ANR	680171	Parameter	ut64 vmax	5156:9:153783:153791	679424	3	True				
ANR	680172	ParameterType	ut64		679424	0					
ANR	680173	Identifier	vmax		679424	1					
ANR	680174	Parameter	int vsize	5156:20:153794:153802	679424	4	True				
ANR	680175	ParameterType	int		679424	0					
ANR	680176	Identifier	vsize		679424	1					
ANR	680177	Parameter	bool asterisk	5156:31:153805:153817	679424	5	True				
ANR	680178	ParameterType	bool		679424	0					
ANR	680179	Identifier	asterisk		679424	1					
ANR	680180	Parameter	inRangeCb cb	5156:46:153820:153831	679424	6	True				
ANR	680181	ParameterType	inRangeCb		679424	0					
ANR	680182	Identifier	cb		679424	1					
ANR	680183	CFGEntryNode	ENTRY		679424		True				
ANR	680184	CFGExitNode	EXIT		679424		True				
ANR	680185	Symbol	* v		679424						
ANR	680186	Symbol	asterisk		679424						
ANR	680187	Symbol	align		679424						
ANR	680188	Symbol	mycore		679424						
ANR	680189	Symbol	memcmp		679424						
ANR	680190	Symbol	core -> search -> align		679424						
ANR	680191	Symbol	vmax		679424						
ANR	680192	Symbol	* * core -> anal		679424						
ANR	680193	Symbol	from		679424						
ANR	680194	Symbol	v16		679424						
ANR	680195	Symbol	maybeThumb		679424						
ANR	680196	Symbol	strcmp		679424						
ANR	680197	Symbol	res		679424						
ANR	680198	Symbol	* buf		679424						
ANR	680199	Symbol	NULL		679424						
ANR	680200	Symbol	* core -> anal -> cur		679424						
ANR	680201	Symbol	* core -> search		679424						
ANR	680202	Symbol	r_io_read_at_mapped		679424						
ANR	680203	Symbol	vmin		679424						
ANR	680204	Symbol	core		679424						
ANR	680205	Symbol	* * * core		679424						
ANR	680206	Symbol	r_io_map_next_address		679424						
ANR	680207	Symbol	size		679424						
ANR	680208	Symbol	v64		679424						
ANR	680209	Symbol	search_itv . addr		679424						
ANR	680210	Symbol	left		679424						
ANR	680211	Symbol	r_config_get_i		679424						
ANR	680212	Symbol	* ( ut8 * ) v		679424						
ANR	680213	Symbol	search_itv		679424						
ANR	680214	Symbol	true		679424						
ANR	680215	Symbol	next		679424						
ANR	680216	Symbol	vsize		679424						
ANR	680217	Symbol	* core		679424						
ANR	680218	Symbol	core -> anal		679424						
ANR	680219	Symbol	r_anal_get_fcn_in_bounds		679424						
ANR	680220	Symbol	r_cons_is_breaked		679424						
ANR	680221	Symbol	vinfun		679424						
ANR	680222	Symbol	v32		679424						
ANR	680223	Symbol	core -> anal -> cur -> arch		679424						
ANR	680224	Symbol	core -> io		679424						
ANR	680225	Symbol	core -> anal -> cur		679424						
ANR	680226	Symbol	* ( uut16 * ) v		679424						
ANR	680227	Symbol	isValidAddress		679424						
ANR	680228	Symbol	stringAt		679424						
ANR	680229	Symbol	hitctr		679424						
ANR	680230	Symbol	UT64_MAX		679424						
ANR	680231	Symbol	addr		679424						
ANR	680232	Symbol	isValidMatch		679424						
ANR	680233	Symbol	core -> search		679424						
ANR	680234	Symbol	value		679424						
ANR	680235	Symbol	* * core		679424						
ANR	680236	Symbol	cb		679424						
ANR	680237	Symbol	core -> config		679424						
ANR	680238	Symbol	core -> anal -> bits		679424						
ANR	680239	Symbol	* ( uut32 * ) v		679424						
ANR	680240	Symbol	R_ANAL_FCN_TYPE_NULL		679424						
ANR	680241	Symbol	vinfunr		679424						
ANR	680242	Symbol	false		679424						
ANR	680243	Symbol	match		679424						
ANR	680244	Symbol	i		679424						
ANR	680245	Symbol	R_MIN		679424						
ANR	680246	Symbol	r_itv_end		679424						
ANR	680247	Symbol	* ( uut64 * ) v		679424						
ANR	680248	Symbol	buf		679424						
ANR	680249	Symbol	* core -> anal		679424						
ANR	680250	Symbol	* i		679424						
ANR	680251	Symbol	r_anal_get_fcn_in		679424						
ANR	680252	Symbol	v		679424						
ANR	680253	Symbol	analStrings		679424						
ANR	680254	Symbol	to		679424						
ANR	680255	ClassDef	<unnamed>	5267:8:156846:157068							
ANR	680256	DeclStmt									
ANR	680257	Decl							dict	dict	visited
ANR	680258	DeclStmt									
ANR	680259	Decl							RList	RList *	path
ANR	680260	DeclStmt									
ANR	680261	Decl							RCore	RCore *	core
ANR	680262	DeclStmt									
ANR	680263	Decl							ut64	ut64	from
ANR	680264	DeclStmt									
ANR	680265	Decl							RAnalBlock	RAnalBlock *	fromBB
ANR	680266	DeclStmt									
ANR	680267	Decl							ut64	ut64	to
ANR	680268	DeclStmt									
ANR	680269	Decl							RAnalBlock	RAnalBlock *	toBB
ANR	680270	DeclStmt									
ANR	680271	Decl							RAnalBlock	RAnalBlock *	cur
ANR	680272	DeclStmt									
ANR	680273	Decl							bool	bool	followCalls
ANR	680274	DeclStmt									
ANR	680275	Decl							int	int	followDepth
ANR	680276	DeclStmt									
ANR	680277	Decl							int	int	count
ANR	680278	DeclStmt									
ANR	680279	Decl									RCoreAnalPaths
ANR	680280	Function	printAnalPaths	5281:0:157071:157483							
ANR	680281	FunctionDef	"printAnalPaths (RCoreAnalPaths * p , PJ * pj)"		680280	0					
ANR	680282	CompoundStatement		5281:54:157125:157483	680280	0					
ANR	680283	IdentifierDeclStatement	RListIter * iter ;	5282:1:157128:157143	680280	0	True				
ANR	680284	IdentifierDecl	* iter		680280	0					
ANR	680285	IdentifierDeclType	RListIter *		680280	0					
ANR	680286	Identifier	iter		680280	1					
ANR	680287	IdentifierDeclStatement	RAnalBlock * path ;	5283:1:157146:157162	680280	1	True				
ANR	680288	IdentifierDecl	* path		680280	0					
ANR	680289	IdentifierDeclType	RAnalBlock *		680280	0					
ANR	680290	Identifier	path		680280	1					
ANR	680291	IfStatement	if ( pj )		680280	2					
ANR	680292	Condition	pj	5284:5:157169:157170	680280	0	True				
ANR	680293	Identifier	pj		680280	0					
ANR	680294	CompoundStatement		4:9:47:47	680280	1					
ANR	680295	ExpressionStatement	pj_a ( pj )	5285:2:157177:157186	680280	0	True				
ANR	680296	CallExpression	pj_a ( pj )		680280	0					
ANR	680297	Callee	pj_a		680280	0					
ANR	680298	Identifier	pj_a		680280	0					
ANR	680299	ArgumentList	pj		680280	1					
ANR	680300	Argument	pj		680280	0					
ANR	680301	Identifier	pj		680280	0					
ANR	680302	ElseStatement	else		680280	0					
ANR	680303	CompoundStatement		6:8:70:70	680280	0					
ANR	680304	ExpressionStatement	"r_cons_printf ( ""pdb @@= "" )"	5287:2:157200:157226	680280	0	True				
ANR	680305	CallExpression	"r_cons_printf ( ""pdb @@= "" )"		680280	0					
ANR	680306	Callee	r_cons_printf		680280	0					
ANR	680307	Identifier	r_cons_printf		680280	0					
ANR	680308	ArgumentList	"""pdb @@= """		680280	1					
ANR	680309	Argument	"""pdb @@= """		680280	0					
ANR	680310	PrimaryExpression	"""pdb @@= """		680280	0					
ANR	680311	Statement	r_list_foreach	5290:1:157233:157246	680280	3	True				
ANR	680312	Statement	(	5290:16:157248:157248	680280	4	True				
ANR	680313	Statement	p	5290:17:157249:157249	680280	5	True				
ANR	680314	Statement	->	5290:18:157250:157251	680280	6	True				
ANR	680315	Statement	path	5290:20:157252:157255	680280	7	True				
ANR	680316	Statement	","	5290:24:157256:157256	680280	8	True				
ANR	680317	Statement	iter	5290:26:157258:157261	680280	9	True				
ANR	680318	Statement	","	5290:30:157262:157262	680280	10	True				
ANR	680319	Statement	path	5290:32:157264:157267	680280	11	True				
ANR	680320	Statement	)	5290:36:157268:157268	680280	12	True				
ANR	680321	CompoundStatement		10:38:144:144	680280	13					
ANR	680322	IfStatement	if ( pj )		680280	0					
ANR	680323	Condition	pj	5291:6:157278:157279	680280	0	True				
ANR	680324	Identifier	pj		680280	0					
ANR	680325	CompoundStatement		11:10:156:156	680280	1					
ANR	680326	ExpressionStatement	"pj_n ( pj , path -> addr )"	5292:3:157287:157308	680280	0	True				
ANR	680327	CallExpression	"pj_n ( pj , path -> addr )"		680280	0					
ANR	680328	Callee	pj_n		680280	0					
ANR	680329	Identifier	pj_n		680280	0					
ANR	680330	ArgumentList	pj		680280	1					
ANR	680331	Argument	pj		680280	0					
ANR	680332	Identifier	pj		680280	0					
ANR	680333	Argument	path -> addr		680280	1					
ANR	680334	PtrMemberAccess	path -> addr		680280	0					
ANR	680335	Identifier	path		680280	0					
ANR	680336	Identifier	addr		680280	1					
ANR	680337	ElseStatement	else		680280	0					
ANR	680338	CompoundStatement		13:9:193:193	680280	0					
ANR	680339	Statement	r_cons_printf	5294:3:157324:157336	680280	0	True				
ANR	680340	Statement	(	5294:17:157338:157338	680280	1	True				
ANR	680341	Statement	"""0x%08"""	5294:18:157339:157345	680280	2	True				
ANR	680342	Statement	PFMT64x	5294:25:157346:157352	680280	3	True				
ANR	680343	Statement	""" """	5294:32:157353:157355	680280	4	True				
ANR	680344	Statement	","	5294:35:157356:157356	680280	5	True				
ANR	680345	Statement	path	5294:37:157358:157361	680280	6	True				
ANR	680346	Statement	->	5294:41:157362:157363	680280	7	True				
ANR	680347	Statement	addr	5294:43:157364:157367	680280	8	True				
ANR	680348	Statement	)	5294:47:157368:157368	680280	9	True				
ANR	680349	ExpressionStatement		5294:48:157369:157369	680280	10	True				
ANR	680350	IfStatement	if ( pj )		680280	14					
ANR	680351	Condition	pj	5298:4:157383:157384	680280	0	True				
ANR	680352	Identifier	pj		680280	0					
ANR	680353	CompoundStatement		18:8:261:261	680280	1					
ANR	680354	ExpressionStatement	pj_end ( pj )	5299:2:157391:157402	680280	0	True				
ANR	680355	CallExpression	pj_end ( pj )		680280	0					
ANR	680356	Callee	pj_end		680280	0					
ANR	680357	Identifier	pj_end		680280	0					
ANR	680358	ArgumentList	pj		680280	1					
ANR	680359	Argument	pj		680280	0					
ANR	680360	Identifier	pj		680280	0					
ANR	680361	ElseStatement	else		680280	0					
ANR	680362	CompoundStatement		20:8:286:286	680280	0					
ANR	680363	ExpressionStatement	"r_cons_printf ( ""\\n"" )"	5301:2:157416:157436	680280	0	True				
ANR	680364	CallExpression	"r_cons_printf ( ""\\n"" )"		680280	0					
ANR	680365	Callee	r_cons_printf		680280	0					
ANR	680366	Identifier	r_cons_printf		680280	0					
ANR	680367	ArgumentList	"""\\n"""		680280	1					
ANR	680368	Argument	"""\\n"""		680280	0					
ANR	680369	PrimaryExpression	"""\\n"""		680280	0					
ANR	680370	ReturnStatement	return ( p -> count < 1 || -- p -> count > 0 ) ;	5303:1:157442:157481	680280	15	True				
ANR	680371	OrExpression	p -> count < 1 || -- p -> count > 0		680280	0		||			
ANR	680372	RelationalExpression	p -> count < 1		680280	0		<			
ANR	680373	PtrMemberAccess	p -> count		680280	0					
ANR	680374	Identifier	p		680280	0					
ANR	680375	Identifier	count		680280	1					
ANR	680376	PrimaryExpression	1		680280	1					
ANR	680377	RelationalExpression	-- p -> count > 0		680280	1		>			
ANR	680378	UnaryExpression	-- p -> count		680280	0					
ANR	680379	IncDec	--		680280	0					
ANR	680380	PtrMemberAccess	p -> count		680280	1					
ANR	680381	Identifier	p		680280	0					
ANR	680382	Identifier	count		680280	1					
ANR	680383	PrimaryExpression	0		680280	1					
ANR	680384	ReturnType	static bool		680280	1					
ANR	680385	Identifier	printAnalPaths		680280	2					
ANR	680386	ParameterList	"RCoreAnalPaths * p , PJ * pj"		680280	3					
ANR	680387	Parameter	RCoreAnalPaths * p	5281:27:157098:157114	680280	0	True				
ANR	680388	ParameterType	RCoreAnalPaths *		680280	0					
ANR	680389	Identifier	p		680280	1					
ANR	680390	Parameter	PJ * pj	5281:46:157117:157122	680280	1	True				
ANR	680391	ParameterType	PJ *		680280	0					
ANR	680392	Identifier	pj		680280	1					
ANR	680393	CFGEntryNode	ENTRY		680280		True				
ANR	680394	CFGExitNode	EXIT		680280		True				
ANR	680395	Symbol	p		680280						
ANR	680396	Symbol	path		680280						
ANR	680397	Symbol	p -> count		680280						
ANR	680398	Symbol	iter		680280						
ANR	680399	Symbol	* path		680280						
ANR	680400	Symbol	pj		680280						
ANR	680401	Symbol	path -> addr		680280						
ANR	680402	Symbol	* p		680280						
ANR	680403	DeclStmt									
ANR	680404	Decl							void	"void ( RCoreAnalPaths * p , PJ * pj )"	analPaths
ANR	680405	Function	analPathFollow	5307:0:157536:157759							
ANR	680406	FunctionDef	"analPathFollow (RCoreAnalPaths * p , ut64 addr , PJ * pj)"		680405	0					
ANR	680407	CompoundStatement		5307:65:157601:157759	680405	0					
ANR	680408	IfStatement	if ( addr == UT64_MAX )		680405	0					
ANR	680409	Condition	addr == UT64_MAX	5308:5:157608:157623	680405	0	True				
ANR	680410	EqualityExpression	addr == UT64_MAX		680405	0		==			
ANR	680411	Identifier	addr		680405	0					
ANR	680412	Identifier	UT64_MAX		680405	1					
ANR	680413	CompoundStatement		2:23:24:24	680405	1					
ANR	680414	ReturnStatement	return ;	5309:2:157630:157636	680405	0	True				
ANR	680415	IfStatement	"if ( ! dict_get ( & p -> visited , addr ) )"		680405	1					
ANR	680416	Condition	"! dict_get ( & p -> visited , addr )"	5311:5:157646:157674	680405	0	True				
ANR	680417	UnaryOperationExpression	"! dict_get ( & p -> visited , addr )"		680405	0					
ANR	680418	UnaryOperator	!		680405	0					
ANR	680419	CallExpression	"dict_get ( & p -> visited , addr )"		680405	1					
ANR	680420	Callee	dict_get		680405	0					
ANR	680421	Identifier	dict_get		680405	0					
ANR	680422	ArgumentList	& p -> visited		680405	1					
ANR	680423	Argument	& p -> visited		680405	0					
ANR	680424	UnaryOperationExpression	& p -> visited		680405	0					
ANR	680425	UnaryOperator	&		680405	0					
ANR	680426	PtrMemberAccess	p -> visited		680405	1					
ANR	680427	Identifier	p		680405	0					
ANR	680428	Identifier	visited		680405	1					
ANR	680429	Argument	addr		680405	1					
ANR	680430	Identifier	addr		680405	0					
ANR	680431	CompoundStatement		5:36:75:75	680405	1					
ANR	680432	ExpressionStatement	"p -> cur = r_anal_bb_from_offset ( p -> core -> anal , addr )"	5312:2:157681:157733	680405	0	True				
ANR	680433	AssignmentExpression	"p -> cur = r_anal_bb_from_offset ( p -> core -> anal , addr )"		680405	0		=			
ANR	680434	PtrMemberAccess	p -> cur		680405	0					
ANR	680435	Identifier	p		680405	0					
ANR	680436	Identifier	cur		680405	1					
ANR	680437	CallExpression	"r_anal_bb_from_offset ( p -> core -> anal , addr )"		680405	1					
ANR	680438	Callee	r_anal_bb_from_offset		680405	0					
ANR	680439	Identifier	r_anal_bb_from_offset		680405	0					
ANR	680440	ArgumentList	p -> core -> anal		680405	1					
ANR	680441	Argument	p -> core -> anal		680405	0					
ANR	680442	PtrMemberAccess	p -> core -> anal		680405	0					
ANR	680443	PtrMemberAccess	p -> core		680405	0					
ANR	680444	Identifier	p		680405	0					
ANR	680445	Identifier	core		680405	1					
ANR	680446	Identifier	anal		680405	1					
ANR	680447	Argument	addr		680405	1					
ANR	680448	Identifier	addr		680405	0					
ANR	680449	ExpressionStatement	"analPaths ( p , pj )"	5313:2:157737:157754	680405	1	True				
ANR	680450	CallExpression	"analPaths ( p , pj )"		680405	0					
ANR	680451	Callee	analPaths		680405	0					
ANR	680452	Identifier	analPaths		680405	0					
ANR	680453	ArgumentList	p		680405	1					
ANR	680454	Argument	p		680405	0					
ANR	680455	Identifier	p		680405	0					
ANR	680456	Argument	pj		680405	1					
ANR	680457	Identifier	pj		680405	0					
ANR	680458	ReturnType	static void		680405	1					
ANR	680459	Identifier	analPathFollow		680405	2					
ANR	680460	ParameterList	"RCoreAnalPaths * p , ut64 addr , PJ * pj"		680405	3					
ANR	680461	Parameter	RCoreAnalPaths * p	5307:27:157563:157579	680405	0	True				
ANR	680462	ParameterType	RCoreAnalPaths *		680405	0					
ANR	680463	Identifier	p		680405	1					
ANR	680464	Parameter	ut64 addr	5307:46:157582:157590	680405	1	True				
ANR	680465	ParameterType	ut64		680405	0					
ANR	680466	Identifier	addr		680405	1					
ANR	680467	Parameter	PJ * pj	5307:57:157593:157598	680405	2	True				
ANR	680468	ParameterType	PJ *		680405	0					
ANR	680469	Identifier	pj		680405	1					
ANR	680470	CFGEntryNode	ENTRY		680405		True				
ANR	680471	CFGExitNode	EXIT		680405		True				
ANR	680472	Symbol	r_anal_bb_from_offset		680405						
ANR	680473	Symbol	p -> core -> anal		680405						
ANR	680474	Symbol	* p -> core		680405						
ANR	680475	Symbol	& p -> visited		680405						
ANR	680476	Symbol	dict_get		680405						
ANR	680477	Symbol	p -> cur		680405						
ANR	680478	Symbol	p		680405						
ANR	680479	Symbol	p -> core		680405						
ANR	680480	Symbol	pj		680405						
ANR	680481	Symbol	* p		680405						
ANR	680482	Symbol	* * p		680405						
ANR	680483	Symbol	addr		680405						
ANR	680484	Symbol	UT64_MAX		680405						
ANR	680485	Function	analPaths	5317:0:157762:158778							
ANR	680486	FunctionDef	"analPaths (RCoreAnalPaths * p , PJ * pj)"		680485	0					
ANR	680487	CompoundStatement		5317:49:157811:158778	680485	0					
ANR	680488	IdentifierDeclStatement	RAnalBlock * cur = p -> cur ;	5318:1:157814:157838	680485	0	True				
ANR	680489	IdentifierDecl	* cur = p -> cur		680485	0					
ANR	680490	IdentifierDeclType	RAnalBlock *		680485	0					
ANR	680491	Identifier	cur		680485	1					
ANR	680492	AssignmentExpression	* cur = p -> cur		680485	2		=			
ANR	680493	Identifier	cur		680485	0					
ANR	680494	PtrMemberAccess	p -> cur		680485	1					
ANR	680495	Identifier	p		680485	0					
ANR	680496	Identifier	cur		680485	1					
ANR	680497	IfStatement	if ( ! cur )		680485	1					
ANR	680498	Condition	! cur	5319:5:157845:157848	680485	0	True				
ANR	680499	UnaryOperationExpression	! cur		680485	0					
ANR	680500	UnaryOperator	!		680485	0					
ANR	680501	Identifier	cur		680485	1					
ANR	680502	CompoundStatement		3:11:39:39	680485	1					
ANR	680503	ReturnStatement	return ;	5321:2:157879:157885	680485	0	True				
ANR	680504	IfStatement	if ( r_cons_is_breaked ( ) )		680485	2					
ANR	680505	Condition	r_cons_is_breaked ( )	5324:5:157912:157931	680485	0	True				
ANR	680506	CallExpression	r_cons_is_breaked ( )		680485	0					
ANR	680507	Callee	r_cons_is_breaked		680485	0					
ANR	680508	Identifier	r_cons_is_breaked		680485	0					
ANR	680509	ArgumentList			680485	1					
ANR	680510	CompoundStatement		8:27:122:122	680485	1					
ANR	680511	ReturnStatement	return ;	5325:2:157938:157944	680485	0	True				
ANR	680512	ExpressionStatement	"dict_set ( & p -> visited , cur -> addr , 1 , NULL )"	5327:1:157950:157992	680485	3	True				
ANR	680513	CallExpression	"dict_set ( & p -> visited , cur -> addr , 1 , NULL )"		680485	0					
ANR	680514	Callee	dict_set		680485	0					
ANR	680515	Identifier	dict_set		680485	0					
ANR	680516	ArgumentList	& p -> visited		680485	1					
ANR	680517	Argument	& p -> visited		680485	0					
ANR	680518	UnaryOperationExpression	& p -> visited		680485	0					
ANR	680519	UnaryOperator	&		680485	0					
ANR	680520	PtrMemberAccess	p -> visited		680485	1					
ANR	680521	Identifier	p		680485	0					
ANR	680522	Identifier	visited		680485	1					
ANR	680523	Argument	cur -> addr		680485	1					
ANR	680524	PtrMemberAccess	cur -> addr		680485	0					
ANR	680525	Identifier	cur		680485	0					
ANR	680526	Identifier	addr		680485	1					
ANR	680527	Argument	1		680485	2					
ANR	680528	PrimaryExpression	1		680485	0					
ANR	680529	Argument	NULL		680485	3					
ANR	680530	Identifier	NULL		680485	0					
ANR	680531	ExpressionStatement	"r_list_append ( p -> path , cur )"	5328:1:157995:158023	680485	4	True				
ANR	680532	CallExpression	"r_list_append ( p -> path , cur )"		680485	0					
ANR	680533	Callee	r_list_append		680485	0					
ANR	680534	Identifier	r_list_append		680485	0					
ANR	680535	ArgumentList	p -> path		680485	1					
ANR	680536	Argument	p -> path		680485	0					
ANR	680537	PtrMemberAccess	p -> path		680485	0					
ANR	680538	Identifier	p		680485	0					
ANR	680539	Identifier	path		680485	1					
ANR	680540	Argument	cur		680485	1					
ANR	680541	Identifier	cur		680485	0					
ANR	680542	IfStatement	if ( p -> followDepth && -- p -> followDepth == 0 )		680485	5					
ANR	680543	Condition	p -> followDepth && -- p -> followDepth == 0	5329:5:158030:158068	680485	0	True				
ANR	680544	AndExpression	p -> followDepth && -- p -> followDepth == 0		680485	0		&&			
ANR	680545	PtrMemberAccess	p -> followDepth		680485	0					
ANR	680546	Identifier	p		680485	0					
ANR	680547	Identifier	followDepth		680485	1					
ANR	680548	EqualityExpression	-- p -> followDepth == 0		680485	1		==			
ANR	680549	UnaryExpression	-- p -> followDepth		680485	0					
ANR	680550	IncDec	--		680485	0					
ANR	680551	PtrMemberAccess	p -> followDepth		680485	1					
ANR	680552	Identifier	p		680485	0					
ANR	680553	Identifier	followDepth		680485	1					
ANR	680554	PrimaryExpression	0		680485	1					
ANR	680555	CompoundStatement		13:46:259:259	680485	1					
ANR	680556	ReturnStatement	return ;	5330:2:158075:158081	680485	0	True				
ANR	680557	IfStatement	if ( p -> toBB && cur -> addr == p -> toBB -> addr )		680485	6					
ANR	680558	Condition	p -> toBB && cur -> addr == p -> toBB -> addr	5332:5:158091:158127	680485	0	True				
ANR	680559	AndExpression	p -> toBB && cur -> addr == p -> toBB -> addr		680485	0		&&			
ANR	680560	PtrMemberAccess	p -> toBB		680485	0					
ANR	680561	Identifier	p		680485	0					
ANR	680562	Identifier	toBB		680485	1					
ANR	680563	EqualityExpression	cur -> addr == p -> toBB -> addr		680485	1		==			
ANR	680564	PtrMemberAccess	cur -> addr		680485	0					
ANR	680565	Identifier	cur		680485	0					
ANR	680566	Identifier	addr		680485	1					
ANR	680567	PtrMemberAccess	p -> toBB -> addr		680485	1					
ANR	680568	PtrMemberAccess	p -> toBB		680485	0					
ANR	680569	Identifier	p		680485	0					
ANR	680570	Identifier	toBB		680485	1					
ANR	680571	Identifier	addr		680485	1					
ANR	680572	CompoundStatement		16:44:318:318	680485	1					
ANR	680573	IfStatement	"if ( ! printAnalPaths ( p , pj ) )"		680485	0					
ANR	680574	Condition	"! printAnalPaths ( p , pj )"	5333:6:158138:158160	680485	0	True				
ANR	680575	UnaryOperationExpression	"! printAnalPaths ( p , pj )"		680485	0					
ANR	680576	UnaryOperator	!		680485	0					
ANR	680577	CallExpression	"printAnalPaths ( p , pj )"		680485	1					
ANR	680578	Callee	printAnalPaths		680485	0					
ANR	680579	Identifier	printAnalPaths		680485	0					
ANR	680580	ArgumentList	p		680485	1					
ANR	680581	Argument	p		680485	0					
ANR	680582	Identifier	p		680485	0					
ANR	680583	Argument	pj		680485	1					
ANR	680584	Identifier	pj		680485	0					
ANR	680585	CompoundStatement		17:31:351:351	680485	1					
ANR	680586	ReturnStatement	return ;	5334:3:158168:158174	680485	0	True				
ANR	680587	ElseStatement	else		680485	0					
ANR	680588	CompoundStatement		23:2:425:443	680485	0					
ANR	680589	IdentifierDeclStatement	RAnalBlock * c = cur ;	5337:2:158192:158211	680485	0	True				
ANR	680590	IdentifierDecl	* c = cur		680485	0					
ANR	680591	IdentifierDeclType	RAnalBlock *		680485	0					
ANR	680592	Identifier	c		680485	1					
ANR	680593	AssignmentExpression	* c = cur		680485	2		=			
ANR	680594	Identifier	cur		680485	0					
ANR	680595	Identifier	cur		680485	1					
ANR	680596	IdentifierDeclStatement	ut64 j = cur -> jump ;	5338:2:158215:158233	680485	1	True				
ANR	680597	IdentifierDecl	j = cur -> jump		680485	0					
ANR	680598	IdentifierDeclType	ut64		680485	0					
ANR	680599	Identifier	j		680485	1					
ANR	680600	AssignmentExpression	j = cur -> jump		680485	2		=			
ANR	680601	Identifier	j		680485	0					
ANR	680602	PtrMemberAccess	cur -> jump		680485	1					
ANR	680603	Identifier	cur		680485	0					
ANR	680604	Identifier	jump		680485	1					
ANR	680605	IdentifierDeclStatement	ut64 f = cur -> fail ;	5339:2:158237:158255	680485	2	True				
ANR	680606	IdentifierDecl	f = cur -> fail		680485	0					
ANR	680607	IdentifierDeclType	ut64		680485	0					
ANR	680608	Identifier	f		680485	1					
ANR	680609	AssignmentExpression	f = cur -> fail		680485	2		=			
ANR	680610	Identifier	f		680485	0					
ANR	680611	PtrMemberAccess	cur -> fail		680485	1					
ANR	680612	Identifier	cur		680485	0					
ANR	680613	Identifier	fail		680485	1					
ANR	680614	ExpressionStatement	"analPathFollow ( p , j , pj )"	5340:2:158259:158284	680485	3	True				
ANR	680615	CallExpression	"analPathFollow ( p , j , pj )"		680485	0					
ANR	680616	Callee	analPathFollow		680485	0					
ANR	680617	Identifier	analPathFollow		680485	0					
ANR	680618	ArgumentList	p		680485	1					
ANR	680619	Argument	p		680485	0					
ANR	680620	Identifier	p		680485	0					
ANR	680621	Argument	j		680485	1					
ANR	680622	Identifier	j		680485	0					
ANR	680623	Argument	pj		680485	2					
ANR	680624	Identifier	pj		680485	0					
ANR	680625	ExpressionStatement	cur = c	5341:2:158288:158295	680485	4	True				
ANR	680626	AssignmentExpression	cur = c		680485	0		=			
ANR	680627	Identifier	cur		680485	0					
ANR	680628	Identifier	c		680485	1					
ANR	680629	ExpressionStatement	"analPathFollow ( p , f , pj )"	5342:2:158299:158324	680485	5	True				
ANR	680630	CallExpression	"analPathFollow ( p , f , pj )"		680485	0					
ANR	680631	Callee	analPathFollow		680485	0					
ANR	680632	Identifier	analPathFollow		680485	0					
ANR	680633	ArgumentList	p		680485	1					
ANR	680634	Argument	p		680485	0					
ANR	680635	Identifier	p		680485	0					
ANR	680636	Argument	f		680485	1					
ANR	680637	Identifier	f		680485	0					
ANR	680638	Argument	pj		680485	2					
ANR	680639	Identifier	pj		680485	0					
ANR	680640	IfStatement	if ( p -> followCalls )		680485	6					
ANR	680641	Condition	p -> followCalls	5343:6:158332:158345	680485	0	True				
ANR	680642	PtrMemberAccess	p -> followCalls		680485	0					
ANR	680643	Identifier	p		680485	0					
ANR	680644	Identifier	followCalls		680485	1					
ANR	680645	CompoundStatement		28:3:541:546	680485	1					
ANR	680646	IdentifierDeclStatement	int i ;	5344:3:158353:158358	680485	0	True				
ANR	680647	IdentifierDecl	i		680485	0					
ANR	680648	IdentifierDeclType	int		680485	0					
ANR	680649	Identifier	i		680485	1					
ANR	680650	ForStatement	for ( i = 0 ; i < cur -> op_pos_size ; i ++ )		680485	1					
ANR	680651	ForInit	i = 0 ;	5345:8:158368:158373	680485	0	True				
ANR	680652	AssignmentExpression	i = 0		680485	0		=			
ANR	680653	Identifier	i		680485	0					
ANR	680654	PrimaryExpression	0		680485	1					
ANR	680655	Condition	i < cur -> op_pos_size	5345:15:158375:158394	680485	1	True				
ANR	680656	RelationalExpression	i < cur -> op_pos_size		680485	0		<			
ANR	680657	Identifier	i		680485	0					
ANR	680658	PtrMemberAccess	cur -> op_pos_size		680485	1					
ANR	680659	Identifier	cur		680485	0					
ANR	680660	Identifier	op_pos_size		680485	1					
ANR	680661	PostIncDecOperationExpression	i ++	5345:37:158397:158399	680485	2	True				
ANR	680662	Identifier	i		680485	0					
ANR	680663	IncDec	++		680485	1					
ANR	680664	CompoundStatement		31:4:640:706	680485	3					
ANR	680665	IdentifierDeclStatement	ut64 addr = cur -> addr + cur -> op_pos [ i ] ;	5346:4:158408:158446	680485	0	True				
ANR	680666	IdentifierDecl	addr = cur -> addr + cur -> op_pos [ i ]		680485	0					
ANR	680667	IdentifierDeclType	ut64		680485	0					
ANR	680668	Identifier	addr		680485	1					
ANR	680669	AssignmentExpression	addr = cur -> addr + cur -> op_pos [ i ]		680485	2		=			
ANR	680670	Identifier	addr		680485	0					
ANR	680671	AdditiveExpression	cur -> addr + cur -> op_pos [ i ]		680485	1		+			
ANR	680672	PtrMemberAccess	cur -> addr		680485	0					
ANR	680673	Identifier	cur		680485	0					
ANR	680674	Identifier	addr		680485	1					
ANR	680675	ArrayIndexing	cur -> op_pos [ i ]		680485	1					
ANR	680676	PtrMemberAccess	cur -> op_pos		680485	0					
ANR	680677	Identifier	cur		680485	0					
ANR	680678	Identifier	op_pos		680485	1					
ANR	680679	Identifier	i		680485	1					
ANR	680680	IdentifierDeclStatement	"RAnalOp * op = r_core_anal_op ( p -> core , addr , R_ANAL_OP_MASK_BASIC ) ;"	5347:4:158452:158518	680485	1	True				
ANR	680681	IdentifierDecl	"* op = r_core_anal_op ( p -> core , addr , R_ANAL_OP_MASK_BASIC )"		680485	0					
ANR	680682	IdentifierDeclType	RAnalOp *		680485	0					
ANR	680683	Identifier	op		680485	1					
ANR	680684	AssignmentExpression	"* op = r_core_anal_op ( p -> core , addr , R_ANAL_OP_MASK_BASIC )"		680485	2		=			
ANR	680685	Identifier	op		680485	0					
ANR	680686	CallExpression	"r_core_anal_op ( p -> core , addr , R_ANAL_OP_MASK_BASIC )"		680485	1					
ANR	680687	Callee	r_core_anal_op		680485	0					
ANR	680688	Identifier	r_core_anal_op		680485	0					
ANR	680689	ArgumentList	p -> core		680485	1					
ANR	680690	Argument	p -> core		680485	0					
ANR	680691	PtrMemberAccess	p -> core		680485	0					
ANR	680692	Identifier	p		680485	0					
ANR	680693	Identifier	core		680485	1					
ANR	680694	Argument	addr		680485	1					
ANR	680695	Identifier	addr		680485	0					
ANR	680696	Argument	R_ANAL_OP_MASK_BASIC		680485	2					
ANR	680697	Identifier	R_ANAL_OP_MASK_BASIC		680485	0					
ANR	680698	IfStatement	if ( op && op -> type == R_ANAL_OP_TYPE_CALL )		680485	2					
ANR	680699	Condition	op && op -> type == R_ANAL_OP_TYPE_CALL	5348:8:158528:158564	680485	0	True				
ANR	680700	AndExpression	op && op -> type == R_ANAL_OP_TYPE_CALL		680485	0		&&			
ANR	680701	Identifier	op		680485	0					
ANR	680702	EqualityExpression	op -> type == R_ANAL_OP_TYPE_CALL		680485	1		==			
ANR	680703	PtrMemberAccess	op -> type		680485	0					
ANR	680704	Identifier	op		680485	0					
ANR	680705	Identifier	type		680485	1					
ANR	680706	Identifier	R_ANAL_OP_TYPE_CALL		680485	1					
ANR	680707	CompoundStatement		32:47:755:755	680485	1					
ANR	680708	ExpressionStatement	"analPathFollow ( p , op -> jump , pj )"	5349:5:158574:158606	680485	0	True				
ANR	680709	CallExpression	"analPathFollow ( p , op -> jump , pj )"		680485	0					
ANR	680710	Callee	analPathFollow		680485	0					
ANR	680711	Identifier	analPathFollow		680485	0					
ANR	680712	ArgumentList	p		680485	1					
ANR	680713	Argument	p		680485	0					
ANR	680714	Identifier	p		680485	0					
ANR	680715	Argument	op -> jump		680485	1					
ANR	680716	PtrMemberAccess	op -> jump		680485	0					
ANR	680717	Identifier	op		680485	0					
ANR	680718	Identifier	jump		680485	1					
ANR	680719	Argument	pj		680485	2					
ANR	680720	Identifier	pj		680485	0					
ANR	680721	ExpressionStatement	cur = c	5351:4:158618:158625	680485	3	True				
ANR	680722	AssignmentExpression	cur = c		680485	0		=			
ANR	680723	Identifier	cur		680485	0					
ANR	680724	Identifier	c		680485	1					
ANR	680725	ExpressionStatement	r_anal_op_free ( op )	5352:4:158631:158650	680485	4	True				
ANR	680726	CallExpression	r_anal_op_free ( op )		680485	0					
ANR	680727	Callee	r_anal_op_free		680485	0					
ANR	680728	Identifier	r_anal_op_free		680485	0					
ANR	680729	ArgumentList	op		680485	1					
ANR	680730	Argument	op		680485	0					
ANR	680731	Identifier	op		680485	0					
ANR	680732	ExpressionStatement	p -> cur = r_list_pop ( p -> path )	5356:1:158665:158694	680485	7	True				
ANR	680733	AssignmentExpression	p -> cur = r_list_pop ( p -> path )		680485	0		=			
ANR	680734	PtrMemberAccess	p -> cur		680485	0					
ANR	680735	Identifier	p		680485	0					
ANR	680736	Identifier	cur		680485	1					
ANR	680737	CallExpression	r_list_pop ( p -> path )		680485	1					
ANR	680738	Callee	r_list_pop		680485	0					
ANR	680739	Identifier	r_list_pop		680485	0					
ANR	680740	ArgumentList	p -> path		680485	1					
ANR	680741	Argument	p -> path		680485	0					
ANR	680742	PtrMemberAccess	p -> path		680485	0					
ANR	680743	Identifier	p		680485	0					
ANR	680744	Identifier	path		680485	1					
ANR	680745	ExpressionStatement	"dict_del ( & p -> visited , cur -> addr )"	5357:1:158697:158730	680485	8	True				
ANR	680746	CallExpression	"dict_del ( & p -> visited , cur -> addr )"		680485	0					
ANR	680747	Callee	dict_del		680485	0					
ANR	680748	Identifier	dict_del		680485	0					
ANR	680749	ArgumentList	& p -> visited		680485	1					
ANR	680750	Argument	& p -> visited		680485	0					
ANR	680751	UnaryOperationExpression	& p -> visited		680485	0					
ANR	680752	UnaryOperator	&		680485	0					
ANR	680753	PtrMemberAccess	p -> visited		680485	1					
ANR	680754	Identifier	p		680485	0					
ANR	680755	Identifier	visited		680485	1					
ANR	680756	Argument	cur -> addr		680485	1					
ANR	680757	PtrMemberAccess	cur -> addr		680485	0					
ANR	680758	Identifier	cur		680485	0					
ANR	680759	Identifier	addr		680485	1					
ANR	680760	IfStatement	if ( p -> followDepth )		680485	9					
ANR	680761	Condition	p -> followDepth	5358:5:158737:158750	680485	0	True				
ANR	680762	PtrMemberAccess	p -> followDepth		680485	0					
ANR	680763	Identifier	p		680485	0					
ANR	680764	Identifier	followDepth		680485	1					
ANR	680765	CompoundStatement		42:21:941:941	680485	1					
ANR	680766	ExpressionStatement	p -> followDepth ++	5359:2:158757:158773	680485	0	True				
ANR	680767	PostIncDecOperationExpression	p -> followDepth ++		680485	0					
ANR	680768	PtrMemberAccess	p -> followDepth		680485	0					
ANR	680769	Identifier	p		680485	0					
ANR	680770	Identifier	followDepth		680485	1					
ANR	680771	IncDec	++		680485	1					
ANR	680772	ReturnType	static void		680485	1					
ANR	680773	Identifier	analPaths		680485	2					
ANR	680774	ParameterList	"RCoreAnalPaths * p , PJ * pj"		680485	3					
ANR	680775	Parameter	RCoreAnalPaths * p	5317:22:157784:157800	680485	0	True				
ANR	680776	ParameterType	RCoreAnalPaths *		680485	0					
ANR	680777	Identifier	p		680485	1					
ANR	680778	Parameter	PJ * pj	5317:41:157803:157808	680485	1	True				
ANR	680779	ParameterType	PJ *		680485	0					
ANR	680780	Identifier	pj		680485	1					
ANR	680781	CFGEntryNode	ENTRY		680485		True				
ANR	680782	CFGExitNode	EXIT		680485		True				
ANR	680783	Symbol	cur		680485						
ANR	680784	Symbol	p -> followDepth		680485						
ANR	680785	Symbol	printAnalPaths		680485						
ANR	680786	Symbol	* op		680485						
ANR	680787	Symbol	cur -> jump		680485						
ANR	680788	Symbol	cur -> op_pos_size		680485						
ANR	680789	Symbol	r_core_anal_op		680485						
ANR	680790	Symbol	R_ANAL_OP_MASK_BASIC		680485						
ANR	680791	Symbol	p -> toBB		680485						
ANR	680792	Symbol	r_list_pop		680485						
ANR	680793	Symbol	p -> cur		680485						
ANR	680794	Symbol	r_cons_is_breaked		680485						
ANR	680795	Symbol	* * cur		680485						
ANR	680796	Symbol	* cur		680485						
ANR	680797	Symbol	cur -> fail		680485						
ANR	680798	Symbol	p -> path		680485						
ANR	680799	Symbol	op -> jump		680485						
ANR	680800	Symbol	* * p		680485						
ANR	680801	Symbol	addr		680485						
ANR	680802	Symbol	* cur -> op_pos		680485						
ANR	680803	Symbol	cur -> op_pos		680485						
ANR	680804	Symbol	op		680485						
ANR	680805	Symbol	NULL		680485						
ANR	680806	Symbol	* p -> toBB		680485						
ANR	680807	Symbol	c		680485						
ANR	680808	Symbol	f		680485						
ANR	680809	Symbol	op -> type		680485						
ANR	680810	Symbol	p -> followCalls		680485						
ANR	680811	Symbol	i		680485						
ANR	680812	Symbol	& p -> visited		680485						
ANR	680813	Symbol	j		680485						
ANR	680814	Symbol	p		680485						
ANR	680815	Symbol	p -> core		680485						
ANR	680816	Symbol	* i		680485						
ANR	680817	Symbol	cur -> addr		680485						
ANR	680818	Symbol	R_ANAL_OP_TYPE_CALL		680485						
ANR	680819	Symbol	p -> toBB -> addr		680485						
ANR	680820	Symbol	pj		680485						
ANR	680821	Symbol	* p		680485						
ANR	680822	Function	r_core_anal_paths	5363:0:158781:159817							
ANR	680823	FunctionDef	"r_core_anal_paths (RCore * core , ut64 from , ut64 to , bool followCalls , int followDepth , bool is_json)"		680822	0					
ANR	680824	CompoundStatement		5363:111:158892:159817	680822	0					
ANR	680825	IdentifierDeclStatement	"RAnalBlock * b0 = r_anal_bb_from_offset ( core -> anal , from ) ;"	5364:1:158895:158952	680822	0	True				
ANR	680826	IdentifierDecl	"* b0 = r_anal_bb_from_offset ( core -> anal , from )"		680822	0					
ANR	680827	IdentifierDeclType	RAnalBlock *		680822	0					
ANR	680828	Identifier	b0		680822	1					
ANR	680829	AssignmentExpression	"* b0 = r_anal_bb_from_offset ( core -> anal , from )"		680822	2		=			
ANR	680830	Identifier	b0		680822	0					
ANR	680831	CallExpression	"r_anal_bb_from_offset ( core -> anal , from )"		680822	1					
ANR	680832	Callee	r_anal_bb_from_offset		680822	0					
ANR	680833	Identifier	r_anal_bb_from_offset		680822	0					
ANR	680834	ArgumentList	core -> anal		680822	1					
ANR	680835	Argument	core -> anal		680822	0					
ANR	680836	PtrMemberAccess	core -> anal		680822	0					
ANR	680837	Identifier	core		680822	0					
ANR	680838	Identifier	anal		680822	1					
ANR	680839	Argument	from		680822	1					
ANR	680840	Identifier	from		680822	0					
ANR	680841	IdentifierDeclStatement	"RAnalBlock * b1 = r_anal_bb_from_offset ( core -> anal , to ) ;"	5365:1:158955:159010	680822	1	True				
ANR	680842	IdentifierDecl	"* b1 = r_anal_bb_from_offset ( core -> anal , to )"		680822	0					
ANR	680843	IdentifierDeclType	RAnalBlock *		680822	0					
ANR	680844	Identifier	b1		680822	1					
ANR	680845	AssignmentExpression	"* b1 = r_anal_bb_from_offset ( core -> anal , to )"		680822	2		=			
ANR	680846	Identifier	b1		680822	0					
ANR	680847	CallExpression	"r_anal_bb_from_offset ( core -> anal , to )"		680822	1					
ANR	680848	Callee	r_anal_bb_from_offset		680822	0					
ANR	680849	Identifier	r_anal_bb_from_offset		680822	0					
ANR	680850	ArgumentList	core -> anal		680822	1					
ANR	680851	Argument	core -> anal		680822	0					
ANR	680852	PtrMemberAccess	core -> anal		680822	0					
ANR	680853	Identifier	core		680822	0					
ANR	680854	Identifier	anal		680822	1					
ANR	680855	Argument	to		680822	1					
ANR	680856	Identifier	to		680822	0					
ANR	680857	IdentifierDeclStatement	PJ * pj = NULL ;	5366:1:159013:159026	680822	2	True				
ANR	680858	IdentifierDecl	* pj = NULL		680822	0					
ANR	680859	IdentifierDeclType	PJ *		680822	0					
ANR	680860	Identifier	pj		680822	1					
ANR	680861	AssignmentExpression	* pj = NULL		680822	2		=			
ANR	680862	Identifier	NULL		680822	0					
ANR	680863	Identifier	NULL		680822	1					
ANR	680864	IfStatement	if ( ! b0 )		680822	3					
ANR	680865	Condition	! b0	5367:5:159033:159035	680822	0	True				
ANR	680866	UnaryOperationExpression	! b0		680822	0					
ANR	680867	UnaryOperator	!		680822	0					
ANR	680868	Identifier	b0		680822	1					
ANR	680869	CompoundStatement		5:10:145:145	680822	1					
ANR	680870	Statement	eprintf	5368:2:159042:159048	680822	0	True				
ANR	680871	Statement	(	5368:10:159050:159050	680822	1	True				
ANR	680872	Statement	"""Cannot find basic block for 0x%08"""	5368:11:159051:159085	680822	2	True				
ANR	680873	Statement	PFMT64x	5368:46:159086:159092	680822	3	True				
ANR	680874	Statement	"""\\n"""	5368:53:159093:159096	680822	4	True				
ANR	680875	Statement	","	5368:57:159097:159097	680822	5	True				
ANR	680876	Statement	from	5368:59:159099:159102	680822	6	True				
ANR	680877	Statement	)	5368:63:159103:159103	680822	7	True				
ANR	680878	ExpressionStatement		5368:64:159104:159104	680822	8	True				
ANR	680879	ReturnStatement	return ;	5369:2:159108:159114	680822	9	True				
ANR	680880	IfStatement	if ( ! b1 )		680822	4					
ANR	680881	Condition	! b1	5371:5:159124:159126	680822	0	True				
ANR	680882	UnaryOperationExpression	! b1		680822	0					
ANR	680883	UnaryOperator	!		680822	0					
ANR	680884	Identifier	b1		680822	1					
ANR	680885	CompoundStatement		9:10:236:236	680822	1					
ANR	680886	Statement	eprintf	5372:2:159133:159139	680822	0	True				
ANR	680887	Statement	(	5372:10:159141:159141	680822	1	True				
ANR	680888	Statement	"""Cannot find basic block for 0x%08"""	5372:11:159142:159176	680822	2	True				
ANR	680889	Statement	PFMT64x	5372:46:159177:159183	680822	3	True				
ANR	680890	Statement	"""\\n"""	5372:53:159184:159187	680822	4	True				
ANR	680891	Statement	","	5372:57:159188:159188	680822	5	True				
ANR	680892	Statement	to	5372:59:159190:159191	680822	6	True				
ANR	680893	Statement	)	5372:61:159192:159192	680822	7	True				
ANR	680894	ExpressionStatement		5372:62:159193:159193	680822	8	True				
ANR	680895	ReturnStatement	return ;	5373:2:159197:159203	680822	9	True				
ANR	680896	IdentifierDeclStatement	RCoreAnalPaths rcap = { { 0 } } ;	5375:1:159209:159236	680822	5	True				
ANR	680897	IdentifierDecl	rcap = { { 0 } }		680822	0					
ANR	680898	IdentifierDeclType	RCoreAnalPaths		680822	0					
ANR	680899	Identifier	rcap		680822	1					
ANR	680900	AssignmentExpression	rcap = { { 0 } }		680822	2		=			
ANR	680901	Identifier	rcap		680822	0					
ANR	680902	InitializerList	0		680822	1					
ANR	680903	InitializerList	0		680822	0					
ANR	680904	PrimaryExpression	0		680822	0					
ANR	680905	ExpressionStatement	"dict_init ( & rcap . visited , 32 , free )"	5376:1:159239:159274	680822	6	True				
ANR	680906	CallExpression	"dict_init ( & rcap . visited , 32 , free )"		680822	0					
ANR	680907	Callee	dict_init		680822	0					
ANR	680908	Identifier	dict_init		680822	0					
ANR	680909	ArgumentList	& rcap . visited		680822	1					
ANR	680910	Argument	& rcap . visited		680822	0					
ANR	680911	UnaryOperationExpression	& rcap . visited		680822	0					
ANR	680912	UnaryOperator	&		680822	0					
ANR	680913	MemberAccess	rcap . visited		680822	1					
ANR	680914	Identifier	rcap		680822	0					
ANR	680915	Identifier	visited		680822	1					
ANR	680916	Argument	32		680822	1					
ANR	680917	PrimaryExpression	32		680822	0					
ANR	680918	Argument	free		680822	2					
ANR	680919	Identifier	free		680822	0					
ANR	680920	ExpressionStatement	rcap . path = r_list_new ( )	5377:1:159277:159302	680822	7	True				
ANR	680921	AssignmentExpression	rcap . path = r_list_new ( )		680822	0		=			
ANR	680922	MemberAccess	rcap . path		680822	0					
ANR	680923	Identifier	rcap		680822	0					
ANR	680924	Identifier	path		680822	1					
ANR	680925	CallExpression	r_list_new ( )		680822	1					
ANR	680926	Callee	r_list_new		680822	0					
ANR	680927	Identifier	r_list_new		680822	0					
ANR	680928	ArgumentList			680822	1					
ANR	680929	ExpressionStatement	rcap . core = core	5378:1:159305:159321	680822	8	True				
ANR	680930	AssignmentExpression	rcap . core = core		680822	0		=			
ANR	680931	MemberAccess	rcap . core		680822	0					
ANR	680932	Identifier	rcap		680822	0					
ANR	680933	Identifier	core		680822	1					
ANR	680934	Identifier	core		680822	1					
ANR	680935	ExpressionStatement	rcap . from = from	5379:1:159324:159340	680822	9	True				
ANR	680936	AssignmentExpression	rcap . from = from		680822	0		=			
ANR	680937	MemberAccess	rcap . from		680822	0					
ANR	680938	Identifier	rcap		680822	0					
ANR	680939	Identifier	from		680822	1					
ANR	680940	Identifier	from		680822	1					
ANR	680941	ExpressionStatement	rcap . fromBB = b0	5380:1:159343:159359	680822	10	True				
ANR	680942	AssignmentExpression	rcap . fromBB = b0		680822	0		=			
ANR	680943	MemberAccess	rcap . fromBB		680822	0					
ANR	680944	Identifier	rcap		680822	0					
ANR	680945	Identifier	fromBB		680822	1					
ANR	680946	Identifier	b0		680822	1					
ANR	680947	ExpressionStatement	rcap . to = to	5381:1:159362:159374	680822	11	True				
ANR	680948	AssignmentExpression	rcap . to = to		680822	0		=			
ANR	680949	MemberAccess	rcap . to		680822	0					
ANR	680950	Identifier	rcap		680822	0					
ANR	680951	Identifier	to		680822	1					
ANR	680952	Identifier	to		680822	1					
ANR	680953	ExpressionStatement	rcap . toBB = b1	5382:1:159377:159391	680822	12	True				
ANR	680954	AssignmentExpression	rcap . toBB = b1		680822	0		=			
ANR	680955	MemberAccess	rcap . toBB		680822	0					
ANR	680956	Identifier	rcap		680822	0					
ANR	680957	Identifier	toBB		680822	1					
ANR	680958	Identifier	b1		680822	1					
ANR	680959	ExpressionStatement	rcap . cur = b0	5383:1:159394:159407	680822	13	True				
ANR	680960	AssignmentExpression	rcap . cur = b0		680822	0		=			
ANR	680961	MemberAccess	rcap . cur		680822	0					
ANR	680962	Identifier	rcap		680822	0					
ANR	680963	Identifier	cur		680822	1					
ANR	680964	Identifier	b0		680822	1					
ANR	680965	ExpressionStatement	"rcap . count = r_config_get_i ( core -> config , ""search.maxhits"" )"	5384:1:159410:159470	680822	14	True				
ANR	680966	AssignmentExpression	"rcap . count = r_config_get_i ( core -> config , ""search.maxhits"" )"		680822	0		=			
ANR	680967	MemberAccess	rcap . count		680822	0					
ANR	680968	Identifier	rcap		680822	0					
ANR	680969	Identifier	count		680822	1					
ANR	680970	CallExpression	"r_config_get_i ( core -> config , ""search.maxhits"" )"		680822	1					
ANR	680971	Callee	r_config_get_i		680822	0					
ANR	680972	Identifier	r_config_get_i		680822	0					
ANR	680973	ArgumentList	core -> config		680822	1					
ANR	680974	Argument	core -> config		680822	0					
ANR	680975	PtrMemberAccess	core -> config		680822	0					
ANR	680976	Identifier	core		680822	0					
ANR	680977	Identifier	config		680822	1					
ANR	680978	Argument	"""search.maxhits"""		680822	1					
ANR	680979	PrimaryExpression	"""search.maxhits"""		680822	0					
ANR	680980	ExpressionStatement		5384:62:159471:159471	680822	15	True				
ANR	680981	ExpressionStatement	rcap . followCalls = followCalls	5385:1:159474:159504	680822	16	True				
ANR	680982	AssignmentExpression	rcap . followCalls = followCalls		680822	0		=			
ANR	680983	MemberAccess	rcap . followCalls		680822	0					
ANR	680984	Identifier	rcap		680822	0					
ANR	680985	Identifier	followCalls		680822	1					
ANR	680986	Identifier	followCalls		680822	1					
ANR	680987	ExpressionStatement	rcap . followDepth = followDepth	5386:1:159507:159537	680822	17	True				
ANR	680988	AssignmentExpression	rcap . followDepth = followDepth		680822	0		=			
ANR	680989	MemberAccess	rcap . followDepth		680822	0					
ANR	680990	Identifier	rcap		680822	0					
ANR	680991	Identifier	followDepth		680822	1					
ANR	680992	Identifier	followDepth		680822	1					
ANR	680993	IfStatement	if ( is_json )		680822	18					
ANR	680994	Condition	is_json	5389:5:159586:159592	680822	0	True				
ANR	680995	Identifier	is_json		680822	0					
ANR	680996	CompoundStatement		27:14:702:702	680822	1					
ANR	680997	ExpressionStatement	pj = pj_new ( )	5390:2:159599:159613	680822	0	True				
ANR	680998	AssignmentExpression	pj = pj_new ( )		680822	0		=			
ANR	680999	Identifier	pj		680822	0					
ANR	681000	CallExpression	pj_new ( )		680822	1					
ANR	681001	Callee	pj_new		680822	0					
ANR	681002	Identifier	pj_new		680822	0					
ANR	681003	ArgumentList			680822	1					
ANR	681004	ExpressionStatement	pj_a ( pj )	5391:2:159617:159626	680822	1	True				
ANR	681005	CallExpression	pj_a ( pj )		680822	0					
ANR	681006	Callee	pj_a		680822	0					
ANR	681007	Identifier	pj_a		680822	0					
ANR	681008	ArgumentList	pj		680822	1					
ANR	681009	Argument	pj		680822	0					
ANR	681010	Identifier	pj		680822	0					
ANR	681011	ExpressionStatement	"analPaths ( & rcap , pj )"	5394:1:159633:159654	680822	19	True				
ANR	681012	CallExpression	"analPaths ( & rcap , pj )"		680822	0					
ANR	681013	Callee	analPaths		680822	0					
ANR	681014	Identifier	analPaths		680822	0					
ANR	681015	ArgumentList	& rcap		680822	1					
ANR	681016	Argument	& rcap		680822	0					
ANR	681017	UnaryOperationExpression	& rcap		680822	0					
ANR	681018	UnaryOperator	&		680822	0					
ANR	681019	Identifier	rcap		680822	1					
ANR	681020	Argument	pj		680822	1					
ANR	681021	Identifier	pj		680822	0					
ANR	681022	IfStatement	if ( is_json )		680822	20					
ANR	681023	Condition	is_json	5396:5:159662:159668	680822	0	True				
ANR	681024	Identifier	is_json		680822	0					
ANR	681025	CompoundStatement		34:14:778:778	680822	1					
ANR	681026	ExpressionStatement	pj_end ( pj )	5397:2:159675:159686	680822	0	True				
ANR	681027	CallExpression	pj_end ( pj )		680822	0					
ANR	681028	Callee	pj_end		680822	0					
ANR	681029	Identifier	pj_end		680822	0					
ANR	681030	ArgumentList	pj		680822	1					
ANR	681031	Argument	pj		680822	0					
ANR	681032	Identifier	pj		680822	0					
ANR	681033	ExpressionStatement	"r_cons_printf ( ""%s"" , pj_string ( pj ) )"	5398:2:159690:159726	680822	1	True				
ANR	681034	CallExpression	"r_cons_printf ( ""%s"" , pj_string ( pj ) )"		680822	0					
ANR	681035	Callee	r_cons_printf		680822	0					
ANR	681036	Identifier	r_cons_printf		680822	0					
ANR	681037	ArgumentList	"""%s"""		680822	1					
ANR	681038	Argument	"""%s"""		680822	0					
ANR	681039	PrimaryExpression	"""%s"""		680822	0					
ANR	681040	Argument	pj_string ( pj )		680822	1					
ANR	681041	CallExpression	pj_string ( pj )		680822	0					
ANR	681042	Callee	pj_string		680822	0					
ANR	681043	Identifier	pj_string		680822	0					
ANR	681044	ArgumentList	pj		680822	1					
ANR	681045	Argument	pj		680822	0					
ANR	681046	Identifier	pj		680822	0					
ANR	681047	IfStatement	if ( pj )		680822	21					
ANR	681048	Condition	pj	5401:5:159737:159738	680822	0	True				
ANR	681049	Identifier	pj		680822	0					
ANR	681050	CompoundStatement		39:9:848:848	680822	1					
ANR	681051	ExpressionStatement	pj_free ( pj )	5402:2:159745:159757	680822	0	True				
ANR	681052	CallExpression	pj_free ( pj )		680822	0					
ANR	681053	Callee	pj_free		680822	0					
ANR	681054	Identifier	pj_free		680822	0					
ANR	681055	ArgumentList	pj		680822	1					
ANR	681056	Argument	pj		680822	0					
ANR	681057	Identifier	pj		680822	0					
ANR	681058	ExpressionStatement	dict_fini ( & rcap . visited )	5405:1:159764:159789	680822	22	True				
ANR	681059	CallExpression	dict_fini ( & rcap . visited )		680822	0					
ANR	681060	Callee	dict_fini		680822	0					
ANR	681061	Identifier	dict_fini		680822	0					
ANR	681062	ArgumentList	& rcap . visited		680822	1					
ANR	681063	Argument	& rcap . visited		680822	0					
ANR	681064	UnaryOperationExpression	& rcap . visited		680822	0					
ANR	681065	UnaryOperator	&		680822	0					
ANR	681066	MemberAccess	rcap . visited		680822	1					
ANR	681067	Identifier	rcap		680822	0					
ANR	681068	Identifier	visited		680822	1					
ANR	681069	ExpressionStatement	r_list_free ( rcap . path )	5406:1:159792:159815	680822	23	True				
ANR	681070	CallExpression	r_list_free ( rcap . path )		680822	0					
ANR	681071	Callee	r_list_free		680822	0					
ANR	681072	Identifier	r_list_free		680822	0					
ANR	681073	ArgumentList	rcap . path		680822	1					
ANR	681074	Argument	rcap . path		680822	0					
ANR	681075	MemberAccess	rcap . path		680822	0					
ANR	681076	Identifier	rcap		680822	0					
ANR	681077	Identifier	path		680822	1					
ANR	681078	ReturnType	R_API void		680822	1					
ANR	681079	Identifier	r_core_anal_paths		680822	2					
ANR	681080	ParameterList	"RCore * core , ut64 from , ut64 to , bool followCalls , int followDepth , bool is_json"		680822	3					
ANR	681081	Parameter	RCore * core	5363:29:158810:158820	680822	0	True				
ANR	681082	ParameterType	RCore *		680822	0					
ANR	681083	Identifier	core		680822	1					
ANR	681084	Parameter	ut64 from	5363:42:158823:158831	680822	1	True				
ANR	681085	ParameterType	ut64		680822	0					
ANR	681086	Identifier	from		680822	1					
ANR	681087	Parameter	ut64 to	5363:53:158834:158840	680822	2	True				
ANR	681088	ParameterType	ut64		680822	0					
ANR	681089	Identifier	to		680822	1					
ANR	681090	Parameter	bool followCalls	5363:62:158843:158858	680822	3	True				
ANR	681091	ParameterType	bool		680822	0					
ANR	681092	Identifier	followCalls		680822	1					
ANR	681093	Parameter	int followDepth	5363:80:158861:158875	680822	4	True				
ANR	681094	ParameterType	int		680822	0					
ANR	681095	Identifier	followDepth		680822	1					
ANR	681096	Parameter	bool is_json	5363:97:158878:158889	680822	5	True				
ANR	681097	ParameterType	bool		680822	0					
ANR	681098	Identifier	is_json		680822	1					
ANR	681099	CFGEntryNode	ENTRY		680822		True				
ANR	681100	CFGExitNode	EXIT		680822		True				
ANR	681101	Symbol	rcap . toBB		680822						
ANR	681102	Symbol	r_anal_bb_from_offset		680822						
ANR	681103	Symbol	pj_string		680822						
ANR	681104	Symbol	is_json		680822						
ANR	681105	Symbol	* core		680822						
ANR	681106	Symbol	rcap . followCalls		680822						
ANR	681107	Symbol	& rcap		680822						
ANR	681108	Symbol	rcap . count		680822						
ANR	681109	Symbol	core -> anal		680822						
ANR	681110	Symbol	b0		680822						
ANR	681111	Symbol	b1		680822						
ANR	681112	Symbol	rcap		680822						
ANR	681113	Symbol	from		680822						
ANR	681114	Symbol	free		680822						
ANR	681115	Symbol	core -> config		680822						
ANR	681116	Symbol	& rcap . visited		680822						
ANR	681117	Symbol	NULL		680822						
ANR	681118	Symbol	rcap . cur		680822						
ANR	681119	Symbol	rcap . followDepth		680822						
ANR	681120	Symbol	rcap . to		680822						
ANR	681121	Symbol	core		680822						
ANR	681122	Symbol	followCalls		680822						
ANR	681123	Symbol	followDepth		680822						
ANR	681124	Symbol	rcap . from		680822						
ANR	681125	Symbol	rcap . fromBB		680822						
ANR	681126	Symbol	rcap . core		680822						
ANR	681127	Symbol	r_config_get_i		680822						
ANR	681128	Symbol	pj		680822						
ANR	681129	Symbol	rcap . path		680822						
ANR	681130	Symbol	pj_new		680822						
ANR	681131	Symbol	to		680822						
ANR	681132	Symbol	r_list_new		680822						
ANR	681133	Function	__cb	5409:0:159820:159944							
ANR	681134	FunctionDef	"__cb (RFlagItem * fi , void * user)"		681133	0					
ANR	681135	CompoundStatement		5409:44:159864:159944	681133	0					
ANR	681136	Statement	r_list_append	5410:1:159867:159879	681133	0	True				
ANR	681137	Statement	(	5410:15:159881:159881	681133	1	True				
ANR	681138	Statement	user	5410:16:159882:159885	681133	2	True				
ANR	681139	Statement	","	5410:20:159886:159886	681133	3	True				
ANR	681140	Statement	r_str_newf	5410:22:159888:159897	681133	4	True				
ANR	681141	Statement	(	5410:33:159899:159899	681133	5	True				
ANR	681142	Statement	"""0x%08"""	5410:34:159900:159906	681133	6	True				
ANR	681143	Statement	PFMT64x	5410:41:159907:159913	681133	7	True				
ANR	681144	Statement	","	5410:48:159914:159914	681133	8	True				
ANR	681145	Statement	fi	5410:50:159916:159917	681133	9	True				
ANR	681146	Statement	->	5410:52:159918:159919	681133	10	True				
ANR	681147	Statement	offset	5410:54:159920:159925	681133	11	True				
ANR	681148	Statement	)	5410:60:159926:159926	681133	12	True				
ANR	681149	Statement	)	5410:61:159927:159927	681133	13	True				
ANR	681150	ExpressionStatement		5410:62:159928:159928	681133	14	True				
ANR	681151	ReturnStatement	return true ;	5411:1:159931:159942	681133	15	True				
ANR	681152	Identifier	true		681133	0					
ANR	681153	ReturnType	static bool		681133	1					
ANR	681154	Identifier	__cb		681133	2					
ANR	681155	ParameterList	"RFlagItem * fi , void * user"		681133	3					
ANR	681156	Parameter	RFlagItem * fi	5409:17:159837:159849	681133	0	True				
ANR	681157	ParameterType	RFlagItem *		681133	0					
ANR	681158	Identifier	fi		681133	1					
ANR	681159	Parameter	void * user	5409:32:159852:159861	681133	1	True				
ANR	681160	ParameterType	void *		681133	0					
ANR	681161	Identifier	user		681133	1					
ANR	681162	CFGEntryNode	ENTRY		681133		True				
ANR	681163	CFGExitNode	EXIT		681133		True				
ANR	681164	Symbol	fi		681133						
ANR	681165	Symbol	true		681133						
ANR	681166	Symbol	user		681133						
ANR	681167	Function	__addrs_cmp	5414:0:159947:160133							
ANR	681168	FunctionDef	"__addrs_cmp (void * _a , void * _b)"		681167	0					
ANR	681169	CompoundStatement		5414:43:159990:160133	681167	0					
ANR	681170	IdentifierDeclStatement	"ut64 a = r_num_get ( NULL , _a ) ;"	5415:1:159993:160022	681167	0	True				
ANR	681171	IdentifierDecl	"a = r_num_get ( NULL , _a )"		681167	0					
ANR	681172	IdentifierDeclType	ut64		681167	0					
ANR	681173	Identifier	a		681167	1					
ANR	681174	AssignmentExpression	"a = r_num_get ( NULL , _a )"		681167	2		=			
ANR	681175	Identifier	a		681167	0					
ANR	681176	CallExpression	"r_num_get ( NULL , _a )"		681167	1					
ANR	681177	Callee	r_num_get		681167	0					
ANR	681178	Identifier	r_num_get		681167	0					
ANR	681179	ArgumentList	NULL		681167	1					
ANR	681180	Argument	NULL		681167	0					
ANR	681181	Identifier	NULL		681167	0					
ANR	681182	Argument	_a		681167	1					
ANR	681183	Identifier	_a		681167	0					
ANR	681184	IdentifierDeclStatement	"ut64 b = r_num_get ( NULL , _b ) ;"	5416:1:160025:160054	681167	1	True				
ANR	681185	IdentifierDecl	"b = r_num_get ( NULL , _b )"		681167	0					
ANR	681186	IdentifierDeclType	ut64		681167	0					
ANR	681187	Identifier	b		681167	1					
ANR	681188	AssignmentExpression	"b = r_num_get ( NULL , _b )"		681167	2		=			
ANR	681189	Identifier	b		681167	0					
ANR	681190	CallExpression	"r_num_get ( NULL , _b )"		681167	1					
ANR	681191	Callee	r_num_get		681167	0					
ANR	681192	Identifier	r_num_get		681167	0					
ANR	681193	ArgumentList	NULL		681167	1					
ANR	681194	Argument	NULL		681167	0					
ANR	681195	Identifier	NULL		681167	0					
ANR	681196	Argument	_b		681167	1					
ANR	681197	Identifier	_b		681167	0					
ANR	681198	IfStatement	if ( a > b )		681167	2					
ANR	681199	Condition	a > b	5417:5:160061:160065	681167	0	True				
ANR	681200	RelationalExpression	a > b		681167	0		>			
ANR	681201	Identifier	a		681167	0					
ANR	681202	Identifier	b		681167	1					
ANR	681203	CompoundStatement		4:12:77:77	681167	1					
ANR	681204	ReturnStatement	return 1 ;	5418:2:160072:160080	681167	0	True				
ANR	681205	PrimaryExpression	1		681167	0					
ANR	681206	IfStatement	if ( a < b )		681167	3					
ANR	681207	Condition	a < b	5420:5:160090:160094	681167	0	True				
ANR	681208	RelationalExpression	a < b		681167	0		<			
ANR	681209	Identifier	a		681167	0					
ANR	681210	Identifier	b		681167	1					
ANR	681211	CompoundStatement		7:12:106:106	681167	1					
ANR	681212	ReturnStatement	return - 1 ;	5421:2:160101:160110	681167	0	True				
ANR	681213	UnaryOperationExpression	- 1		681167	0					
ANR	681214	UnaryOperator	-		681167	0					
ANR	681215	PrimaryExpression	1		681167	1					
ANR	681216	ReturnStatement	return 0 ;	5423:8:160123:160131	681167	4	True				
ANR	681217	PrimaryExpression	0		681167	0					
ANR	681218	ReturnType	static int		681167	1					
ANR	681219	Identifier	__addrs_cmp		681167	2					
ANR	681220	ParameterList	"void * _a , void * _b"		681167	3					
ANR	681221	Parameter	void * _a	5414:23:159970:159977	681167	0	True				
ANR	681222	ParameterType	void *		681167	0					
ANR	681223	Identifier	_a		681167	1					
ANR	681224	Parameter	void * _b	5414:33:159980:159987	681167	1	True				
ANR	681225	ParameterType	void *		681167	0					
ANR	681226	Identifier	_b		681167	1					
ANR	681227	CFGEntryNode	ENTRY		681167		True				
ANR	681228	CFGExitNode	EXIT		681167		True				
ANR	681229	Symbol	a		681167						
ANR	681230	Symbol	_a		681167						
ANR	681231	Symbol	b		681167						
ANR	681232	Symbol	_b		681167						
ANR	681233	Symbol	NULL		681167						
ANR	681234	Symbol	r_num_get		681167						
ANR	681235	Function	r_core_anal_inflags	5426:0:160136:162131							
ANR	681236	FunctionDef	"r_core_anal_inflags (RCore * core , const char * glob)"		681235	0					
ANR	681237	CompoundStatement		5426:62:160198:162131	681235	0					
ANR	681238	IdentifierDeclStatement	RList * addrs = r_list_newf ( free ) ;	5427:1:160201:160234	681235	0	True				
ANR	681239	IdentifierDecl	* addrs = r_list_newf ( free )		681235	0					
ANR	681240	IdentifierDeclType	RList *		681235	0					
ANR	681241	Identifier	addrs		681235	1					
ANR	681242	AssignmentExpression	* addrs = r_list_newf ( free )		681235	2		=			
ANR	681243	Identifier	addrs		681235	0					
ANR	681244	CallExpression	r_list_newf ( free )		681235	1					
ANR	681245	Callee	r_list_newf		681235	0					
ANR	681246	Identifier	r_list_newf		681235	0					
ANR	681247	ArgumentList	free		681235	1					
ANR	681248	Argument	free		681235	0					
ANR	681249	Identifier	free		681235	0					
ANR	681250	IdentifierDeclStatement	RListIter * iter ;	5428:1:160237:160252	681235	1	True				
ANR	681251	IdentifierDecl	* iter		681235	0					
ANR	681252	IdentifierDeclType	RListIter *		681235	0					
ANR	681253	Identifier	iter		681235	1					
ANR	681254	IdentifierDeclStatement	"bool a2f = r_config_get_i ( core -> config , ""anal.a2f"" ) ;"	5429:1:160255:160307	681235	2	True				
ANR	681255	IdentifierDecl	"a2f = r_config_get_i ( core -> config , ""anal.a2f"" )"		681235	0					
ANR	681256	IdentifierDeclType	bool		681235	0					
ANR	681257	Identifier	a2f		681235	1					
ANR	681258	AssignmentExpression	"a2f = r_config_get_i ( core -> config , ""anal.a2f"" )"		681235	2		=			
ANR	681259	Identifier	a2f		681235	0					
ANR	681260	CallExpression	"r_config_get_i ( core -> config , ""anal.a2f"" )"		681235	1					
ANR	681261	Callee	r_config_get_i		681235	0					
ANR	681262	Identifier	r_config_get_i		681235	0					
ANR	681263	ArgumentList	core -> config		681235	1					
ANR	681264	Argument	core -> config		681235	0					
ANR	681265	PtrMemberAccess	core -> config		681235	0					
ANR	681266	Identifier	core		681235	0					
ANR	681267	Identifier	config		681235	1					
ANR	681268	Argument	"""anal.a2f"""		681235	1					
ANR	681269	PrimaryExpression	"""anal.a2f"""		681235	0					
ANR	681270	IdentifierDeclStatement	"char * anal_in = strdup ( r_config_get ( core -> config , ""anal.in"" ) ) ;"	5430:1:160310:160373	681235	3	True				
ANR	681271	IdentifierDecl	"* anal_in = strdup ( r_config_get ( core -> config , ""anal.in"" ) )"		681235	0					
ANR	681272	IdentifierDeclType	char *		681235	0					
ANR	681273	Identifier	anal_in		681235	1					
ANR	681274	AssignmentExpression	"* anal_in = strdup ( r_config_get ( core -> config , ""anal.in"" ) )"		681235	2		=			
ANR	681275	Identifier	anal_in		681235	0					
ANR	681276	CallExpression	"strdup ( r_config_get ( core -> config , ""anal.in"" ) )"		681235	1					
ANR	681277	Callee	strdup		681235	0					
ANR	681278	Identifier	strdup		681235	0					
ANR	681279	ArgumentList	"r_config_get ( core -> config , ""anal.in"" )"		681235	1					
ANR	681280	Argument	"r_config_get ( core -> config , ""anal.in"" )"		681235	0					
ANR	681281	CallExpression	"r_config_get ( core -> config , ""anal.in"" )"		681235	0					
ANR	681282	Callee	r_config_get		681235	0					
ANR	681283	Identifier	r_config_get		681235	0					
ANR	681284	ArgumentList	core -> config		681235	1					
ANR	681285	Argument	core -> config		681235	0					
ANR	681286	PtrMemberAccess	core -> config		681235	0					
ANR	681287	Identifier	core		681235	0					
ANR	681288	Identifier	config		681235	1					
ANR	681289	Argument	"""anal.in"""		681235	1					
ANR	681290	PrimaryExpression	"""anal.in"""		681235	0					
ANR	681291	ExpressionStatement	"r_config_set ( core -> config , ""anal.in"" , ""block"" )"	5431:1:160376:160423	681235	4	True				
ANR	681292	CallExpression	"r_config_set ( core -> config , ""anal.in"" , ""block"" )"		681235	0					
ANR	681293	Callee	r_config_set		681235	0					
ANR	681294	Identifier	r_config_set		681235	0					
ANR	681295	ArgumentList	core -> config		681235	1					
ANR	681296	Argument	core -> config		681235	0					
ANR	681297	PtrMemberAccess	core -> config		681235	0					
ANR	681298	Identifier	core		681235	0					
ANR	681299	Identifier	config		681235	1					
ANR	681300	Argument	"""anal.in"""		681235	1					
ANR	681301	PrimaryExpression	"""anal.in"""		681235	0					
ANR	681302	Argument	"""block"""		681235	2					
ANR	681303	PrimaryExpression	"""block"""		681235	0					
ANR	681304	IdentifierDeclStatement	bool simple = ( glob && * glob == 'a' ) ? false : true ;	5433:1:160460:160509	681235	5	True				
ANR	681305	IdentifierDecl	simple = ( glob && * glob == 'a' ) ? false : true		681235	0					
ANR	681306	IdentifierDeclType	bool		681235	0					
ANR	681307	Identifier	simple		681235	1					
ANR	681308	AssignmentExpression	simple = ( glob && * glob == 'a' ) ? false : true		681235	2		=			
ANR	681309	Identifier	simple		681235	0					
ANR	681310	ConditionalExpression	( glob && * glob == 'a' ) ? false : true		681235	1					
ANR	681311	Condition	glob && * glob == 'a'		681235	0					
ANR	681312	AndExpression	glob && * glob == 'a'		681235	0		&&			
ANR	681313	Identifier	glob		681235	0					
ANR	681314	EqualityExpression	* glob == 'a'		681235	1		==			
ANR	681315	UnaryOperationExpression	* glob		681235	0					
ANR	681316	UnaryOperator	*		681235	0					
ANR	681317	Identifier	glob		681235	1					
ANR	681318	PrimaryExpression	'a'		681235	1					
ANR	681319	Identifier	false		681235	1					
ANR	681320	Identifier	true		681235	2					
ANR	681321	ExpressionStatement	glob = r_str_trim_ro ( glob )	5434:1:160512:160539	681235	6	True				
ANR	681322	AssignmentExpression	glob = r_str_trim_ro ( glob )		681235	0		=			
ANR	681323	Identifier	glob		681235	0					
ANR	681324	CallExpression	r_str_trim_ro ( glob )		681235	1					
ANR	681325	Callee	r_str_trim_ro		681235	0					
ANR	681326	Identifier	r_str_trim_ro		681235	0					
ANR	681327	ArgumentList	glob		681235	1					
ANR	681328	Argument	glob		681235	0					
ANR	681329	Identifier	glob		681235	0					
ANR	681330	IdentifierDeclStatement	char * addr ;	5435:1:160542:160552	681235	7	True				
ANR	681331	IdentifierDecl	* addr		681235	0					
ANR	681332	IdentifierDeclType	char *		681235	0					
ANR	681333	Identifier	addr		681235	1					
ANR	681334	ExpressionStatement	"r_flag_foreach_glob ( core -> flags , glob , __cb , addrs )"	5436:1:160555:160607	681235	8	True				
ANR	681335	CallExpression	"r_flag_foreach_glob ( core -> flags , glob , __cb , addrs )"		681235	0					
ANR	681336	Callee	r_flag_foreach_glob		681235	0					
ANR	681337	Identifier	r_flag_foreach_glob		681235	0					
ANR	681338	ArgumentList	core -> flags		681235	1					
ANR	681339	Argument	core -> flags		681235	0					
ANR	681340	PtrMemberAccess	core -> flags		681235	0					
ANR	681341	Identifier	core		681235	0					
ANR	681342	Identifier	flags		681235	1					
ANR	681343	Argument	glob		681235	1					
ANR	681344	Identifier	glob		681235	0					
ANR	681345	Argument	__cb		681235	2					
ANR	681346	Identifier	__cb		681235	0					
ANR	681347	Argument	addrs		681235	3					
ANR	681348	Identifier	addrs		681235	0					
ANR	681349	ExpressionStatement	"r_list_sort ( addrs , ( RListComparator ) __addrs_cmp )"	5438:1:160640:160689	681235	9	True				
ANR	681350	CallExpression	"r_list_sort ( addrs , ( RListComparator ) __addrs_cmp )"		681235	0					
ANR	681351	Callee	r_list_sort		681235	0					
ANR	681352	Identifier	r_list_sort		681235	0					
ANR	681353	ArgumentList	addrs		681235	1					
ANR	681354	Argument	addrs		681235	0					
ANR	681355	Identifier	addrs		681235	0					
ANR	681356	Argument	( RListComparator ) __addrs_cmp		681235	1					
ANR	681357	CastExpression	( RListComparator ) __addrs_cmp		681235	0					
ANR	681358	CastTarget	RListComparator		681235	0					
ANR	681359	Identifier	__addrs_cmp		681235	1					
ANR	681360	Statement	r_list_foreach	5439:1:160692:160705	681235	10	True				
ANR	681361	Statement	(	5439:16:160707:160707	681235	11	True				
ANR	681362	Statement	addrs	5439:17:160708:160712	681235	12	True				
ANR	681363	Statement	","	5439:22:160713:160713	681235	13	True				
ANR	681364	Statement	iter	5439:24:160715:160718	681235	14	True				
ANR	681365	Statement	","	5439:28:160719:160719	681235	15	True				
ANR	681366	Statement	addr	5439:30:160721:160724	681235	16	True				
ANR	681367	Statement	)	5439:34:160725:160725	681235	17	True				
ANR	681368	CompoundStatement		32:2:881:898	681235	18					
ANR	681369	IfStatement	if ( ! iter -> n || r_cons_is_breaked ( ) )		681235	0					
ANR	681370	Condition	! iter -> n || r_cons_is_breaked ( )	5440:6:160735:160766	681235	0	True				
ANR	681371	OrExpression	! iter -> n || r_cons_is_breaked ( )		681235	0		||			
ANR	681372	UnaryOperationExpression	! iter -> n		681235	0					
ANR	681373	UnaryOperator	!		681235	0					
ANR	681374	PtrMemberAccess	iter -> n		681235	1					
ANR	681375	Identifier	iter		681235	0					
ANR	681376	Identifier	n		681235	1					
ANR	681377	CallExpression	r_cons_is_breaked ( )		681235	1					
ANR	681378	Callee	r_cons_is_breaked		681235	0					
ANR	681379	Identifier	r_cons_is_breaked		681235	0					
ANR	681380	ArgumentList			681235	1					
ANR	681381	CompoundStatement		15:40:570:570	681235	1					
ANR	681382	BreakStatement	break ;	5441:3:160774:160779	681235	0	True				
ANR	681383	IdentifierDeclStatement	char * addr2 = iter -> n -> data ;	5443:2:160787:160814	681235	1	True				
ANR	681384	IdentifierDecl	* addr2 = iter -> n -> data		681235	0					
ANR	681385	IdentifierDeclType	char *		681235	0					
ANR	681386	Identifier	addr2		681235	1					
ANR	681387	AssignmentExpression	* addr2 = iter -> n -> data		681235	2		=			
ANR	681388	Identifier	addr2		681235	0					
ANR	681389	PtrMemberAccess	iter -> n -> data		681235	1					
ANR	681390	PtrMemberAccess	iter -> n		681235	0					
ANR	681391	Identifier	iter		681235	0					
ANR	681392	Identifier	n		681235	1					
ANR	681393	Identifier	data		681235	1					
ANR	681394	IfStatement	if ( ! addr || ! addr2 )		681235	2					
ANR	681395	Condition	! addr || ! addr2	5444:6:160822:160836	681235	0	True				
ANR	681396	OrExpression	! addr || ! addr2		681235	0		||			
ANR	681397	UnaryOperationExpression	! addr		681235	0					
ANR	681398	UnaryOperator	!		681235	0					
ANR	681399	Identifier	addr		681235	1					
ANR	681400	UnaryOperationExpression	! addr2		681235	1					
ANR	681401	UnaryOperator	!		681235	0					
ANR	681402	Identifier	addr2		681235	1					
ANR	681403	CompoundStatement		19:23:640:640	681235	1					
ANR	681404	BreakStatement	break ;	5445:3:160844:160849	681235	0	True				
ANR	681405	IdentifierDeclStatement	"ut64 a0 = r_num_get ( NULL , addr ) ;"	5447:2:160857:160889	681235	3	True				
ANR	681406	IdentifierDecl	"a0 = r_num_get ( NULL , addr )"		681235	0					
ANR	681407	IdentifierDeclType	ut64		681235	0					
ANR	681408	Identifier	a0		681235	1					
ANR	681409	AssignmentExpression	"a0 = r_num_get ( NULL , addr )"		681235	2		=			
ANR	681410	Identifier	a0		681235	0					
ANR	681411	CallExpression	"r_num_get ( NULL , addr )"		681235	1					
ANR	681412	Callee	r_num_get		681235	0					
ANR	681413	Identifier	r_num_get		681235	0					
ANR	681414	ArgumentList	NULL		681235	1					
ANR	681415	Argument	NULL		681235	0					
ANR	681416	Identifier	NULL		681235	0					
ANR	681417	Argument	addr		681235	1					
ANR	681418	Identifier	addr		681235	0					
ANR	681419	IdentifierDeclStatement	"ut64 a1 = r_num_get ( NULL , addr2 ) ;"	5448:2:160893:160926	681235	4	True				
ANR	681420	IdentifierDecl	"a1 = r_num_get ( NULL , addr2 )"		681235	0					
ANR	681421	IdentifierDeclType	ut64		681235	0					
ANR	681422	Identifier	a1		681235	1					
ANR	681423	AssignmentExpression	"a1 = r_num_get ( NULL , addr2 )"		681235	2		=			
ANR	681424	Identifier	a1		681235	0					
ANR	681425	CallExpression	"r_num_get ( NULL , addr2 )"		681235	1					
ANR	681426	Callee	r_num_get		681235	0					
ANR	681427	Identifier	r_num_get		681235	0					
ANR	681428	ArgumentList	NULL		681235	1					
ANR	681429	Argument	NULL		681235	0					
ANR	681430	Identifier	NULL		681235	0					
ANR	681431	Argument	addr2		681235	1					
ANR	681432	Identifier	addr2		681235	0					
ANR	681433	IfStatement	if ( a0 == a1 )		681235	5					
ANR	681434	Condition	a0 == a1	5449:6:160934:160941	681235	0	True				
ANR	681435	EqualityExpression	a0 == a1		681235	0		==			
ANR	681436	Identifier	a0		681235	0					
ANR	681437	Identifier	a1		681235	1					
ANR	681438	CompoundStatement		24:16:745:745	681235	1					
ANR	681439	ContinueStatement	continue ;	5451:3:160962:160970	681235	0	True				
ANR	681440	IfStatement	if ( a0 > a1 )		681235	6					
ANR	681441	Condition	a0 > a1	5453:6:160982:160988	681235	0	True				
ANR	681442	RelationalExpression	a0 > a1		681235	0		>			
ANR	681443	Identifier	a0		681235	0					
ANR	681444	Identifier	a1		681235	1					
ANR	681445	CompoundStatement		28:15:792:792	681235	1					
ANR	681446	ExpressionStatement	"eprintf ( ""Warning: unsorted flag list 0x%llx 0x%llx\\n"" , a0 , a1 )"	5454:3:160996:161059	681235	0	True				
ANR	681447	CallExpression	"eprintf ( ""Warning: unsorted flag list 0x%llx 0x%llx\\n"" , a0 , a1 )"		681235	0					
ANR	681448	Callee	eprintf		681235	0					
ANR	681449	Identifier	eprintf		681235	0					
ANR	681450	ArgumentList	"""Warning: unsorted flag list 0x%llx 0x%llx\\n"""		681235	1					
ANR	681451	Argument	"""Warning: unsorted flag list 0x%llx 0x%llx\\n"""		681235	0					
ANR	681452	PrimaryExpression	"""Warning: unsorted flag list 0x%llx 0x%llx\\n"""		681235	0					
ANR	681453	Argument	a0		681235	1					
ANR	681454	Identifier	a0		681235	0					
ANR	681455	Argument	a1		681235	2					
ANR	681456	Identifier	a1		681235	0					
ANR	681457	ContinueStatement	continue ;	5455:3:161064:161072	681235	1	True				
ANR	681458	IdentifierDeclStatement	st64 sz = a1 - a0 ;	5457:2:161080:161097	681235	7	True				
ANR	681459	IdentifierDecl	sz = a1 - a0		681235	0					
ANR	681460	IdentifierDeclType	st64		681235	0					
ANR	681461	Identifier	sz		681235	1					
ANR	681462	AssignmentExpression	sz = a1 - a0		681235	2		=			
ANR	681463	Identifier	sz		681235	0					
ANR	681464	AdditiveExpression	a1 - a0		681235	1		-			
ANR	681465	Identifier	a1		681235	0					
ANR	681466	Identifier	a0		681235	1					
ANR	681467	IfStatement	if ( sz < 1 || sz > core -> anal -> opt . bb_max_size )		681235	8					
ANR	681468	Condition	sz < 1 || sz > core -> anal -> opt . bb_max_size	5458:6:161105:161146	681235	0	True				
ANR	681469	OrExpression	sz < 1 || sz > core -> anal -> opt . bb_max_size		681235	0		||			
ANR	681470	RelationalExpression	sz < 1		681235	0		<			
ANR	681471	Identifier	sz		681235	0					
ANR	681472	PrimaryExpression	1		681235	1					
ANR	681473	RelationalExpression	sz > core -> anal -> opt . bb_max_size		681235	1		>			
ANR	681474	Identifier	sz		681235	0					
ANR	681475	MemberAccess	core -> anal -> opt . bb_max_size		681235	1					
ANR	681476	PtrMemberAccess	core -> anal -> opt		681235	0					
ANR	681477	PtrMemberAccess	core -> anal		681235	0					
ANR	681478	Identifier	core		681235	0					
ANR	681479	Identifier	anal		681235	1					
ANR	681480	Identifier	opt		681235	1					
ANR	681481	Identifier	bb_max_size		681235	1					
ANR	681482	CompoundStatement		33:50:950:950	681235	1					
ANR	681483	Statement	eprintf	5459:3:161154:161160	681235	0	True				
ANR	681484	Statement	(	5459:11:161162:161162	681235	1	True				
ANR	681485	Statement	"""Warning: invalid flag range from 0x%08"""	5459:12:161163:161202	681235	2	True				
ANR	681486	Statement	PFMT64x	5459:52:161203:161209	681235	3	True				
ANR	681487	Statement	""" to 0x%08"""	5459:59:161210:161220	681235	4	True				
ANR	681488	Statement	PFMT64x	5459:70:161221:161227	681235	5	True				
ANR	681489	Statement	"""\\n"""	5459:77:161228:161231	681235	6	True				
ANR	681490	Statement	","	5459:81:161232:161232	681235	7	True				
ANR	681491	Statement	a0	5459:83:161234:161235	681235	8	True				
ANR	681492	Statement	","	5459:85:161236:161236	681235	9	True				
ANR	681493	Statement	a1	5459:87:161238:161239	681235	10	True				
ANR	681494	Statement	)	5459:89:161240:161240	681235	11	True				
ANR	681495	ExpressionStatement		5459:90:161241:161241	681235	12	True				
ANR	681496	ContinueStatement	continue ;	5460:3:161246:161254	681235	13	True				
ANR	681497	IfStatement	if ( simple )		681235	9					
ANR	681498	Condition	simple	5462:6:161266:161271	681235	0	True				
ANR	681499	Identifier	simple		681235	0					
ANR	681500	CompoundStatement		38:3:1080:1130	681235	1					
ANR	681501	IdentifierDeclStatement	"RFlagItem * fi = r_flag_get_at ( core -> flags , a0 , 0 ) ;"	5463:3:161279:161329	681235	0	True				
ANR	681502	IdentifierDecl	"* fi = r_flag_get_at ( core -> flags , a0 , 0 )"		681235	0					
ANR	681503	IdentifierDeclType	RFlagItem *		681235	0					
ANR	681504	Identifier	fi		681235	1					
ANR	681505	AssignmentExpression	"* fi = r_flag_get_at ( core -> flags , a0 , 0 )"		681235	2		=			
ANR	681506	Identifier	fi		681235	0					
ANR	681507	CallExpression	"r_flag_get_at ( core -> flags , a0 , 0 )"		681235	1					
ANR	681508	Callee	r_flag_get_at		681235	0					
ANR	681509	Identifier	r_flag_get_at		681235	0					
ANR	681510	ArgumentList	core -> flags		681235	1					
ANR	681511	Argument	core -> flags		681235	0					
ANR	681512	PtrMemberAccess	core -> flags		681235	0					
ANR	681513	Identifier	core		681235	0					
ANR	681514	Identifier	flags		681235	1					
ANR	681515	Argument	a0		681235	1					
ANR	681516	Identifier	a0		681235	0					
ANR	681517	Argument	0		681235	2					
ANR	681518	PrimaryExpression	0		681235	0					
ANR	681519	ExpressionStatement	"r_core_cmdf ( core , ""af+ %s fcn.%s"" , addr , fi ? fi -> name : addr )"	5464:3:161334:161395	681235	1	True				
ANR	681520	CallExpression	"r_core_cmdf ( core , ""af+ %s fcn.%s"" , addr , fi ? fi -> name : addr )"		681235	0					
ANR	681521	Callee	r_core_cmdf		681235	0					
ANR	681522	Identifier	r_core_cmdf		681235	0					
ANR	681523	ArgumentList	core		681235	1					
ANR	681524	Argument	core		681235	0					
ANR	681525	Identifier	core		681235	0					
ANR	681526	Argument	"""af+ %s fcn.%s"""		681235	1					
ANR	681527	PrimaryExpression	"""af+ %s fcn.%s"""		681235	0					
ANR	681528	Argument	addr		681235	2					
ANR	681529	Identifier	addr		681235	0					
ANR	681530	Argument	fi ? fi -> name : addr		681235	3					
ANR	681531	ConditionalExpression	fi ? fi -> name : addr		681235	0					
ANR	681532	Condition	fi		681235	0					
ANR	681533	Identifier	fi		681235	0					
ANR	681534	PtrMemberAccess	fi -> name		681235	1					
ANR	681535	Identifier	fi		681235	0					
ANR	681536	Identifier	name		681235	1					
ANR	681537	Identifier	addr		681235	2					
ANR	681538	ExpressionStatement	"r_core_cmdf ( core , ""afb+ %s %s %d"" , addr , addr , ( int ) sz )"	5465:3:161400:161456	681235	2	True				
ANR	681539	CallExpression	"r_core_cmdf ( core , ""afb+ %s %s %d"" , addr , addr , ( int ) sz )"		681235	0					
ANR	681540	Callee	r_core_cmdf		681235	0					
ANR	681541	Identifier	r_core_cmdf		681235	0					
ANR	681542	ArgumentList	core		681235	1					
ANR	681543	Argument	core		681235	0					
ANR	681544	Identifier	core		681235	0					
ANR	681545	Argument	"""afb+ %s %s %d"""		681235	1					
ANR	681546	PrimaryExpression	"""afb+ %s %s %d"""		681235	0					
ANR	681547	Argument	addr		681235	2					
ANR	681548	Identifier	addr		681235	0					
ANR	681549	Argument	addr		681235	3					
ANR	681550	Identifier	addr		681235	0					
ANR	681551	Argument	( int ) sz		681235	4					
ANR	681552	CastExpression	( int ) sz		681235	0					
ANR	681553	CastTarget	int		681235	0					
ANR	681554	Identifier	sz		681235	1					
ANR	681555	ElseStatement	else		681235	0					
ANR	681556	CompoundStatement		43:3:1333:1417	681235	0					
ANR	681557	ExpressionStatement	"r_core_cmdf ( core , ""aab@%s!%s-%s\\n"" , addr , addr2 , addr )"	5467:3:161472:161527	681235	0	True				
ANR	681558	CallExpression	"r_core_cmdf ( core , ""aab@%s!%s-%s\\n"" , addr , addr2 , addr )"		681235	0					
ANR	681559	Callee	r_core_cmdf		681235	0					
ANR	681560	Identifier	r_core_cmdf		681235	0					
ANR	681561	ArgumentList	core		681235	1					
ANR	681562	Argument	core		681235	0					
ANR	681563	Identifier	core		681235	0					
ANR	681564	Argument	"""aab@%s!%s-%s\\n"""		681235	1					
ANR	681565	PrimaryExpression	"""aab@%s!%s-%s\\n"""		681235	0					
ANR	681566	Argument	addr		681235	2					
ANR	681567	Identifier	addr		681235	0					
ANR	681568	Argument	addr2		681235	3					
ANR	681569	Identifier	addr2		681235	0					
ANR	681570	Argument	addr		681235	4					
ANR	681571	Identifier	addr		681235	0					
ANR	681572	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , r_num_math ( core -> num , addr ) , 0 ) ;"	5468:3:161532:161616	681235	1	True				
ANR	681573	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , r_num_math ( core -> num , addr ) , 0 )"		681235	0					
ANR	681574	IdentifierDeclType	RAnalFunction *		681235	0					
ANR	681575	Identifier	fcn		681235	1					
ANR	681576	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , r_num_math ( core -> num , addr ) , 0 )"		681235	2		=			
ANR	681577	Identifier	fcn		681235	0					
ANR	681578	CallExpression	"r_anal_get_fcn_in ( core -> anal , r_num_math ( core -> num , addr ) , 0 )"		681235	1					
ANR	681579	Callee	r_anal_get_fcn_in		681235	0					
ANR	681580	Identifier	r_anal_get_fcn_in		681235	0					
ANR	681581	ArgumentList	core -> anal		681235	1					
ANR	681582	Argument	core -> anal		681235	0					
ANR	681583	PtrMemberAccess	core -> anal		681235	0					
ANR	681584	Identifier	core		681235	0					
ANR	681585	Identifier	anal		681235	1					
ANR	681586	Argument	"r_num_math ( core -> num , addr )"		681235	1					
ANR	681587	CallExpression	"r_num_math ( core -> num , addr )"		681235	0					
ANR	681588	Callee	r_num_math		681235	0					
ANR	681589	Identifier	r_num_math		681235	0					
ANR	681590	ArgumentList	core -> num		681235	1					
ANR	681591	Argument	core -> num		681235	0					
ANR	681592	PtrMemberAccess	core -> num		681235	0					
ANR	681593	Identifier	core		681235	0					
ANR	681594	Identifier	num		681235	1					
ANR	681595	Argument	addr		681235	1					
ANR	681596	Identifier	addr		681235	0					
ANR	681597	Argument	0		681235	2					
ANR	681598	PrimaryExpression	0		681235	0					
ANR	681599	IfStatement	if ( fcn )		681235	2					
ANR	681600	Condition	fcn	5469:7:161625:161627	681235	0	True				
ANR	681601	Identifier	fcn		681235	0					
ANR	681602	CompoundStatement		44:12:1431:1431	681235	1					
ANR	681603	Statement	eprintf	5470:4:161636:161642	681235	0	True				
ANR	681604	Statement	(	5470:12:161644:161644	681235	1	True				
ANR	681605	Statement	"""%s  %s %"""	5470:13:161645:161654	681235	2	True				
ANR	681606	Statement	PFMT64d	5470:23:161655:161661	681235	3	True				
ANR	681607	Statement	"""    # %s\\n"""	5470:30:161662:161673	681235	4	True				
ANR	681608	Statement	","	5470:42:161674:161674	681235	5	True				
ANR	681609	Statement	addr	5470:44:161676:161679	681235	6	True				
ANR	681610	Statement	","	5470:48:161680:161680	681235	7	True				
ANR	681611	Statement	"""af"""	5470:50:161682:161685	681235	8	True				
ANR	681612	Statement	","	5470:54:161686:161686	681235	9	True				
ANR	681613	Statement	sz	5470:56:161688:161689	681235	10	True				
ANR	681614	Statement	","	5470:58:161690:161690	681235	11	True				
ANR	681615	Statement	fcn	5470:60:161692:161694	681235	12	True				
ANR	681616	Statement	->	5470:63:161695:161696	681235	13	True				
ANR	681617	Statement	name	5470:65:161697:161700	681235	14	True				
ANR	681618	Statement	)	5470:69:161701:161701	681235	15	True				
ANR	681619	ExpressionStatement		5470:70:161702:161702	681235	16	True				
ANR	681620	ElseStatement	else		681235	0					
ANR	681621	CompoundStatement		46:10:1515:1515	681235	0					
ANR	681622	IfStatement	if ( a2f )		681235	0					
ANR	681623	Condition	a2f	5472:8:161724:161726	681235	0	True				
ANR	681624	Identifier	a2f		681235	0					
ANR	681625	CompoundStatement		47:13:1530:1530	681235	1					
ANR	681626	ExpressionStatement	"r_core_cmdf ( core , ""a2f@%s!%s-%s\\n"" , addr , addr2 , addr )"	5473:5:161736:161791	681235	0	True				
ANR	681627	CallExpression	"r_core_cmdf ( core , ""a2f@%s!%s-%s\\n"" , addr , addr2 , addr )"		681235	0					
ANR	681628	Callee	r_core_cmdf		681235	0					
ANR	681629	Identifier	r_core_cmdf		681235	0					
ANR	681630	ArgumentList	core		681235	1					
ANR	681631	Argument	core		681235	0					
ANR	681632	Identifier	core		681235	0					
ANR	681633	Argument	"""a2f@%s!%s-%s\\n"""		681235	1					
ANR	681634	PrimaryExpression	"""a2f@%s!%s-%s\\n"""		681235	0					
ANR	681635	Argument	addr		681235	2					
ANR	681636	Identifier	addr		681235	0					
ANR	681637	Argument	addr2		681235	3					
ANR	681638	Identifier	addr2		681235	0					
ANR	681639	Argument	addr		681235	4					
ANR	681640	Identifier	addr		681235	0					
ANR	681641	ElseStatement	else		681235	0					
ANR	681642	CompoundStatement		49:11:1605:1605	681235	0					
ANR	681643	ExpressionStatement	"r_core_cmdf ( core , ""af@%s!%s-%s\\n"" , addr , addr2 , addr )"	5475:5:161811:161865	681235	0	True				
ANR	681644	CallExpression	"r_core_cmdf ( core , ""af@%s!%s-%s\\n"" , addr , addr2 , addr )"		681235	0					
ANR	681645	Callee	r_core_cmdf		681235	0					
ANR	681646	Identifier	r_core_cmdf		681235	0					
ANR	681647	ArgumentList	core		681235	1					
ANR	681648	Argument	core		681235	0					
ANR	681649	Identifier	core		681235	0					
ANR	681650	Argument	"""af@%s!%s-%s\\n"""		681235	1					
ANR	681651	PrimaryExpression	"""af@%s!%s-%s\\n"""		681235	0					
ANR	681652	Argument	addr		681235	2					
ANR	681653	Identifier	addr		681235	0					
ANR	681654	Argument	addr2		681235	3					
ANR	681655	Identifier	addr2		681235	0					
ANR	681656	Argument	addr		681235	4					
ANR	681657	Identifier	addr		681235	0					
ANR	681658	ExpressionStatement	"fcn = r_anal_get_fcn_in ( core -> anal , r_num_math ( core -> num , addr ) , 0 )"	5477:4:161877:161946	681235	1	True				
ANR	681659	AssignmentExpression	"fcn = r_anal_get_fcn_in ( core -> anal , r_num_math ( core -> num , addr ) , 0 )"		681235	0		=			
ANR	681660	Identifier	fcn		681235	0					
ANR	681661	CallExpression	"r_anal_get_fcn_in ( core -> anal , r_num_math ( core -> num , addr ) , 0 )"		681235	1					
ANR	681662	Callee	r_anal_get_fcn_in		681235	0					
ANR	681663	Identifier	r_anal_get_fcn_in		681235	0					
ANR	681664	ArgumentList	core -> anal		681235	1					
ANR	681665	Argument	core -> anal		681235	0					
ANR	681666	PtrMemberAccess	core -> anal		681235	0					
ANR	681667	Identifier	core		681235	0					
ANR	681668	Identifier	anal		681235	1					
ANR	681669	Argument	"r_num_math ( core -> num , addr )"		681235	1					
ANR	681670	CallExpression	"r_num_math ( core -> num , addr )"		681235	0					
ANR	681671	Callee	r_num_math		681235	0					
ANR	681672	Identifier	r_num_math		681235	0					
ANR	681673	ArgumentList	core -> num		681235	1					
ANR	681674	Argument	core -> num		681235	0					
ANR	681675	PtrMemberAccess	core -> num		681235	0					
ANR	681676	Identifier	core		681235	0					
ANR	681677	Identifier	num		681235	1					
ANR	681678	Argument	addr		681235	1					
ANR	681679	Identifier	addr		681235	0					
ANR	681680	Argument	0		681235	2					
ANR	681681	PrimaryExpression	0		681235	0					
ANR	681682	Statement	eprintf	5478:4:161952:161958	681235	2	True				
ANR	681683	Statement	(	5478:12:161960:161960	681235	3	True				
ANR	681684	Statement	"""%s  %s %.4"""	5478:13:161961:161972	681235	4	True				
ANR	681685	Statement	PFMT64d	5478:25:161973:161979	681235	5	True				
ANR	681686	Statement	"""   # %s\\n"""	5478:32:161980:161990	681235	6	True				
ANR	681687	Statement	","	5478:43:161991:161991	681235	7	True				
ANR	681688	Statement	addr	5478:45:161993:161996	681235	8	True				
ANR	681689	Statement	","	5478:49:161997:161997	681235	9	True				
ANR	681690	Statement	"""aab"""	5478:51:161999:162003	681235	10	True				
ANR	681691	Statement	","	5478:56:162004:162004	681235	11	True				
ANR	681692	Statement	sz	5478:58:162006:162007	681235	12	True				
ANR	681693	Statement	","	5478:60:162008:162008	681235	13	True				
ANR	681694	Statement	fcn	5478:62:162010:162012	681235	14	True				
ANR	681695	Statement	?	5478:65:162013:162013	681235	15	True				
ANR	681696	Statement	fcn	5478:66:162014:162016	681235	16	True				
ANR	681697	Statement	->	5478:69:162017:162018	681235	17	True				
ANR	681698	Label	name :	5478:71:162019:162023	681235	18	True				
ANR	681699	Identifier	name		681235	0					
ANR	681700	Statement	""""""	5478:77:162025:162026	681235	19	True				
ANR	681701	Statement	)	5478:79:162027:162027	681235	20	True				
ANR	681702	ExpressionStatement		5478:80:162028:162028	681235	21	True				
ANR	681703	ExpressionStatement	r_list_free ( addrs )	5482:1:162043:162062	681235	19	True				
ANR	681704	CallExpression	r_list_free ( addrs )		681235	0					
ANR	681705	Callee	r_list_free		681235	0					
ANR	681706	Identifier	r_list_free		681235	0					
ANR	681707	ArgumentList	addrs		681235	1					
ANR	681708	Argument	addrs		681235	0					
ANR	681709	Identifier	addrs		681235	0					
ANR	681710	ExpressionStatement	"r_config_set ( core -> config , ""anal.in"" , anal_in )"	5483:1:162065:162112	681235	20	True				
ANR	681711	CallExpression	"r_config_set ( core -> config , ""anal.in"" , anal_in )"		681235	0					
ANR	681712	Callee	r_config_set		681235	0					
ANR	681713	Identifier	r_config_set		681235	0					
ANR	681714	ArgumentList	core -> config		681235	1					
ANR	681715	Argument	core -> config		681235	0					
ANR	681716	PtrMemberAccess	core -> config		681235	0					
ANR	681717	Identifier	core		681235	0					
ANR	681718	Identifier	config		681235	1					
ANR	681719	Argument	"""anal.in"""		681235	1					
ANR	681720	PrimaryExpression	"""anal.in"""		681235	0					
ANR	681721	Argument	anal_in		681235	2					
ANR	681722	Identifier	anal_in		681235	0					
ANR	681723	ExpressionStatement	free ( anal_in )	5484:1:162115:162129	681235	21	True				
ANR	681724	CallExpression	free ( anal_in )		681235	0					
ANR	681725	Callee	free		681235	0					
ANR	681726	Identifier	free		681235	0					
ANR	681727	ArgumentList	anal_in		681235	1					
ANR	681728	Argument	anal_in		681235	0					
ANR	681729	Identifier	anal_in		681235	0					
ANR	681730	ReturnType	R_API void		681235	1					
ANR	681731	Identifier	r_core_anal_inflags		681235	2					
ANR	681732	ParameterList	"RCore * core , const char * glob"		681235	3					
ANR	681733	Parameter	RCore * core	5426:31:160167:160177	681235	0	True				
ANR	681734	ParameterType	RCore *		681235	0					
ANR	681735	Identifier	core		681235	1					
ANR	681736	Parameter	const char * glob	5426:44:160180:160195	681235	1	True				
ANR	681737	ParameterType	const char *		681235	0					
ANR	681738	Identifier	glob		681235	1					
ANR	681739	CFGEntryNode	ENTRY		681235		True				
ANR	681740	CFGExitNode	EXIT		681235		True				
ANR	681741	CFGErrorNode	ERROR		681235		True				
ANR	681742	Symbol	fi		681235						
ANR	681743	Symbol	glob		681235						
ANR	681744	Symbol	* core		681235						
ANR	681745	Symbol	r_config_get		681235						
ANR	681746	Symbol	fi -> name		681235						
ANR	681747	Symbol	simple		681235						
ANR	681748	Symbol	core -> anal		681235						
ANR	681749	Symbol	r_num_math		681235						
ANR	681750	Symbol	fcn		681235						
ANR	681751	Symbol	* iter		681235						
ANR	681752	Symbol	r_cons_is_breaked		681235						
ANR	681753	Symbol	* iter -> n		681235						
ANR	681754	Symbol	__cb		681235						
ANR	681755	Symbol	a2f		681235						
ANR	681756	Symbol	anal_in		681235						
ANR	681757	Symbol	iter -> n		681235						
ANR	681758	Symbol	r_num_get		681235						
ANR	681759	Symbol	free		681235						
ANR	681760	Symbol	addr		681235						
ANR	681761	Symbol	* * iter		681235						
ANR	681762	Symbol	core -> num		681235						
ANR	681763	Symbol	* * core		681235						
ANR	681764	Symbol	core -> config		681235						
ANR	681765	Symbol	core -> anal -> opt		681235						
ANR	681766	Symbol	NULL		681235						
ANR	681767	Symbol	addr2		681235						
ANR	681768	Symbol	r_list_newf		681235						
ANR	681769	Symbol	addrs		681235						
ANR	681770	Symbol	sz		681235						
ANR	681771	Symbol	false		681235						
ANR	681772	Symbol	iter		681235						
ANR	681773	Symbol	iter -> n -> data		681235						
ANR	681774	Symbol	core -> flags		681235						
ANR	681775	Symbol	* fi		681235						
ANR	681776	Symbol	a0		681235						
ANR	681777	Symbol	core -> anal -> opt . bb_max_size		681235						
ANR	681778	Symbol	* glob		681235						
ANR	681779	Symbol	a1		681235						
ANR	681780	Symbol	core		681235						
ANR	681781	Symbol	__addrs_cmp		681235						
ANR	681782	Symbol	* core -> anal		681235						
ANR	681783	Symbol	r_anal_get_fcn_in		681235						
ANR	681784	Symbol	r_config_get_i		681235						
ANR	681785	Symbol	true		681235						
ANR	681786	Symbol	r_str_trim_ro		681235						
ANR	681787	Symbol	strdup		681235						
ANR	681788	Symbol	r_flag_get_at		681235						
ANR	681789	Function	is_noreturn_function	5487:0:162134:162728							
ANR	681790	FunctionDef	"is_noreturn_function (RCore * core , RAnalFunction * f)"		681789	0					
ANR	681791	CompoundStatement		5487:64:162198:162728	681789	0					
ANR	681792	IdentifierDeclStatement	RListIter * iter ;	5488:1:162201:162216	681789	0	True				
ANR	681793	IdentifierDecl	* iter		681789	0					
ANR	681794	IdentifierDeclType	RListIter *		681789	0					
ANR	681795	Identifier	iter		681789	1					
ANR	681796	IdentifierDeclStatement	RAnalBlock * bb ;	5489:1:162219:162233	681789	1	True				
ANR	681797	IdentifierDecl	* bb		681789	0					
ANR	681798	IdentifierDeclType	RAnalBlock *		681789	0					
ANR	681799	Identifier	bb		681789	1					
ANR	681800	Statement	r_list_foreach	5490:1:162236:162249	681789	2	True				
ANR	681801	Statement	(	5490:16:162251:162251	681789	3	True				
ANR	681802	Statement	f	5490:17:162252:162252	681789	4	True				
ANR	681803	Statement	->	5490:18:162253:162254	681789	5	True				
ANR	681804	Statement	bbs	5490:20:162255:162257	681789	6	True				
ANR	681805	Statement	","	5490:23:162258:162258	681789	7	True				
ANR	681806	Statement	iter	5490:25:162260:162263	681789	8	True				
ANR	681807	Statement	","	5490:29:162264:162264	681789	9	True				
ANR	681808	Statement	bb	5490:31:162266:162267	681789	10	True				
ANR	681809	Statement	)	5490:33:162268:162268	681789	11	True				
ANR	681810	CompoundStatement		13:2:214:257	681789	12					
ANR	681811	IdentifierDeclStatement	ut64 opaddr ;	5491:2:162274:162285	681789	0	True				
ANR	681812	IdentifierDecl	opaddr		681789	0					
ANR	681813	IdentifierDeclType	ut64		681789	0					
ANR	681814	Identifier	opaddr		681789	1					
ANR	681815	ExpressionStatement	"opaddr = r_anal_bb_opaddr_i ( bb , bb -> ninstr - 1 )"	5493:2:162290:162338	681789	1	True				
ANR	681816	AssignmentExpression	"opaddr = r_anal_bb_opaddr_i ( bb , bb -> ninstr - 1 )"		681789	0		=			
ANR	681817	Identifier	opaddr		681789	0					
ANR	681818	CallExpression	"r_anal_bb_opaddr_i ( bb , bb -> ninstr - 1 )"		681789	1					
ANR	681819	Callee	r_anal_bb_opaddr_i		681789	0					
ANR	681820	Identifier	r_anal_bb_opaddr_i		681789	0					
ANR	681821	ArgumentList	bb		681789	1					
ANR	681822	Argument	bb		681789	0					
ANR	681823	Identifier	bb		681789	0					
ANR	681824	Argument	bb -> ninstr - 1		681789	1					
ANR	681825	AdditiveExpression	bb -> ninstr - 1		681789	0		-			
ANR	681826	PtrMemberAccess	bb -> ninstr		681789	0					
ANR	681827	Identifier	bb		681789	0					
ANR	681828	Identifier	ninstr		681789	1					
ANR	681829	PrimaryExpression	1		681789	1					
ANR	681830	IfStatement	if ( opaddr == UT64_MAX )		681789	2					
ANR	681831	Condition	opaddr == UT64_MAX	5494:6:162346:162363	681789	0	True				
ANR	681832	EqualityExpression	opaddr == UT64_MAX		681789	0		==			
ANR	681833	Identifier	opaddr		681789	0					
ANR	681834	Identifier	UT64_MAX		681789	1					
ANR	681835	CompoundStatement		8:26:167:167	681789	1					
ANR	681836	ReturnStatement	return false ;	5495:3:162371:162383	681789	0	True				
ANR	681837	Identifier	false		681789	0					
ANR	681838	IdentifierDeclStatement	"RAnalOp * op = r_core_op_anal ( core , opaddr ) ;"	5499:2:162413:162456	681789	3	True				
ANR	681839	IdentifierDecl	"* op = r_core_op_anal ( core , opaddr )"		681789	0					
ANR	681840	IdentifierDeclType	RAnalOp *		681789	0					
ANR	681841	Identifier	op		681789	1					
ANR	681842	AssignmentExpression	"* op = r_core_op_anal ( core , opaddr )"		681789	2		=			
ANR	681843	Identifier	op		681789	0					
ANR	681844	CallExpression	"r_core_op_anal ( core , opaddr )"		681789	1					
ANR	681845	Callee	r_core_op_anal		681789	0					
ANR	681846	Identifier	r_core_op_anal		681789	0					
ANR	681847	ArgumentList	core		681789	1					
ANR	681848	Argument	core		681789	0					
ANR	681849	Identifier	core		681789	0					
ANR	681850	Argument	opaddr		681789	1					
ANR	681851	Identifier	opaddr		681789	0					
ANR	681852	IfStatement	if ( ! op )		681789	4					
ANR	681853	Condition	! op	5500:6:162464:162466	681789	0	True				
ANR	681854	UnaryOperationExpression	! op		681789	0					
ANR	681855	UnaryOperator	!		681789	0					
ANR	681856	Identifier	op		681789	1					
ANR	681857	CompoundStatement		14:11:270:270	681789	1					
ANR	681858	Statement	eprintf	5501:3:162474:162480	681789	0	True				
ANR	681859	Statement	(	5501:11:162482:162482	681789	1	True				
ANR	681860	Statement	"""Cannot analyze opcode at 0x%08"""	5501:12:162483:162514	681789	2	True				
ANR	681861	Statement	PFMT64x	5501:45:162516:162522	681789	3	True				
ANR	681862	Statement	"""\\n"""	5501:53:162524:162527	681789	4	True				
ANR	681863	Statement	","	5501:57:162528:162528	681789	5	True				
ANR	681864	Statement	opaddr	5501:59:162530:162535	681789	6	True				
ANR	681865	Statement	)	5501:65:162536:162536	681789	7	True				
ANR	681866	ExpressionStatement		5501:66:162537:162537	681789	8	True				
ANR	681867	ReturnStatement	return false ;	5502:3:162542:162554	681789	9	True				
ANR	681868	Identifier	false		681789	0					
ANR	681869	SwitchStatement	switch ( op -> type & R_ANAL_OP_TYPE_MASK )		681789	5					
ANR	681870	Condition	op -> type & R_ANAL_OP_TYPE_MASK	5505:10:162571:162600	681789	0	True				
ANR	681871	BitAndExpression	op -> type & R_ANAL_OP_TYPE_MASK		681789	0		&			
ANR	681872	PtrMemberAccess	op -> type		681789	0					
ANR	681873	Identifier	op		681789	0					
ANR	681874	Identifier	type		681789	1					
ANR	681875	Identifier	R_ANAL_OP_TYPE_MASK		681789	1					
ANR	681876	CompoundStatement		19:42:404:404	681789	1					
ANR	681877	Label	case R_ANAL_OP_TYPE_ILL :	5506:3:162608:162631	681789	0	True				
ANR	681878	Identifier	R_ANAL_OP_TYPE_ILL		681789	0					
ANR	681879	Label	case R_ANAL_OP_TYPE_RET :	5507:3:162636:162659	681789	1	True				
ANR	681880	Identifier	R_ANAL_OP_TYPE_RET		681789	0					
ANR	681881	ExpressionStatement	free ( op )	5508:4:162665:162674	681789	2	True				
ANR	681882	CallExpression	free ( op )		681789	0					
ANR	681883	Callee	free		681789	0					
ANR	681884	Identifier	free		681789	0					
ANR	681885	ArgumentList	op		681789	1					
ANR	681886	Argument	op		681789	0					
ANR	681887	Identifier	op		681789	0					
ANR	681888	ReturnStatement	return false ;	5509:4:162680:162692	681789	3	True				
ANR	681889	Identifier	false		681789	0					
ANR	681890	ExpressionStatement	free ( op )	5511:2:162700:162709	681789	6	True				
ANR	681891	CallExpression	free ( op )		681789	0					
ANR	681892	Callee	free		681789	0					
ANR	681893	Identifier	free		681789	0					
ANR	681894	ArgumentList	op		681789	1					
ANR	681895	Argument	op		681789	0					
ANR	681896	Identifier	op		681789	0					
ANR	681897	ReturnStatement	return true ;	5513:1:162715:162726	681789	13	True				
ANR	681898	Identifier	true		681789	0					
ANR	681899	ReturnType	static bool		681789	1					
ANR	681900	Identifier	is_noreturn_function		681789	2					
ANR	681901	ParameterList	"RCore * core , RAnalFunction * f"		681789	3					
ANR	681902	Parameter	RCore * core	5487:33:162167:162177	681789	0	True				
ANR	681903	ParameterType	RCore *		681789	0					
ANR	681904	Identifier	core		681789	1					
ANR	681905	Parameter	RAnalFunction * f	5487:46:162180:162195	681789	1	True				
ANR	681906	ParameterType	RAnalFunction *		681789	0					
ANR	681907	Identifier	f		681789	1					
ANR	681908	CFGEntryNode	ENTRY		681789		True				
ANR	681909	CFGExitNode	EXIT		681789		True				
ANR	681910	Symbol	bb		681789						
ANR	681911	Symbol	R_ANAL_OP_TYPE_MASK		681789						
ANR	681912	Symbol	op		681789						
ANR	681913	Symbol	* op		681789						
ANR	681914	Symbol	* bb		681789						
ANR	681915	Symbol	f		681789						
ANR	681916	Symbol	op -> type		681789						
ANR	681917	Symbol	false		681789						
ANR	681918	Symbol	iter		681789						
ANR	681919	Symbol	bb -> ninstr		681789						
ANR	681920	Symbol	r_anal_bb_opaddr_i		681789						
ANR	681921	Symbol	core		681789						
ANR	681922	Symbol	opaddr		681789						
ANR	681923	Symbol	true		681789						
ANR	681924	Symbol	UT64_MAX		681789						
ANR	681925	Symbol	r_core_op_anal		681789						
ANR	681926	Function	r_core_anal_propagate_noreturn	5516:0:162731:164636							
ANR	681927	FunctionDef	r_core_anal_propagate_noreturn (RCore * core)		681926	0					
ANR	681928	CompoundStatement		5516:55:162786:164636	681926	0					
ANR	681929	IdentifierDeclStatement	RList * todo = r_list_newf ( free ) ;	5517:1:162789:162821	681926	0	True				
ANR	681930	IdentifierDecl	* todo = r_list_newf ( free )		681926	0					
ANR	681931	IdentifierDeclType	RList *		681926	0					
ANR	681932	Identifier	todo		681926	1					
ANR	681933	AssignmentExpression	* todo = r_list_newf ( free )		681926	2		=			
ANR	681934	Identifier	todo		681926	0					
ANR	681935	CallExpression	r_list_newf ( free )		681926	1					
ANR	681936	Callee	r_list_newf		681926	0					
ANR	681937	Identifier	r_list_newf		681926	0					
ANR	681938	ArgumentList	free		681926	1					
ANR	681939	Argument	free		681926	0					
ANR	681940	Identifier	free		681926	0					
ANR	681941	IfStatement	if ( ! todo )		681926	1					
ANR	681942	Condition	! todo	5518:5:162828:162832	681926	0	True				
ANR	681943	UnaryOperationExpression	! todo		681926	0					
ANR	681944	UnaryOperator	!		681926	0					
ANR	681945	Identifier	todo		681926	1					
ANR	681946	CompoundStatement		3:12:48:48	681926	1					
ANR	681947	ReturnStatement	return ;	5519:2:162839:162845	681926	0	True				
ANR	681948	IdentifierDeclStatement	HtUU * done = ht_uu_new0 ( ) ;	5522:1:162852:162878	681926	2	True				
ANR	681949	IdentifierDecl	* done = ht_uu_new0 ( )		681926	0					
ANR	681950	IdentifierDeclType	HtUU *		681926	0					
ANR	681951	Identifier	done		681926	1					
ANR	681952	AssignmentExpression	* done = ht_uu_new0 ( )		681926	2		=			
ANR	681953	Identifier	done		681926	0					
ANR	681954	CallExpression	ht_uu_new0 ( )		681926	1					
ANR	681955	Callee	ht_uu_new0		681926	0					
ANR	681956	Identifier	ht_uu_new0		681926	0					
ANR	681957	ArgumentList			681926	1					
ANR	681958	IfStatement	if ( ! done )		681926	3					
ANR	681959	Condition	! done	5523:5:162885:162889	681926	0	True				
ANR	681960	UnaryOperationExpression	! done		681926	0					
ANR	681961	UnaryOperator	!		681926	0					
ANR	681962	Identifier	done		681926	1					
ANR	681963	CompoundStatement		8:12:105:105	681926	1					
ANR	681964	ExpressionStatement	r_list_free ( todo )	5524:2:162896:162914	681926	0	True				
ANR	681965	CallExpression	r_list_free ( todo )		681926	0					
ANR	681966	Callee	r_list_free		681926	0					
ANR	681967	Identifier	r_list_free		681926	0					
ANR	681968	ArgumentList	todo		681926	1					
ANR	681969	Argument	todo		681926	0					
ANR	681970	Identifier	todo		681926	0					
ANR	681971	ReturnStatement	return ;	5525:2:162918:162924	681926	1	True				
ANR	681972	IdentifierDeclStatement	RAnalFunction * f ;	5529:1:162978:162994	681926	4	True				
ANR	681973	IdentifierDecl	* f		681926	0					
ANR	681974	IdentifierDeclType	RAnalFunction *		681926	0					
ANR	681975	Identifier	f		681926	1					
ANR	681976	IdentifierDeclStatement	RListIter * iter ;	5530:1:162997:163012	681926	5	True				
ANR	681977	IdentifierDecl	* iter		681926	0					
ANR	681978	IdentifierDeclType	RListIter *		681926	0					
ANR	681979	Identifier	iter		681926	1					
ANR	681980	Statement	r_list_foreach	5532:1:163016:163029	681926	6	True				
ANR	681981	Statement	(	5532:16:163031:163031	681926	7	True				
ANR	681982	Statement	core	5532:17:163032:163035	681926	8	True				
ANR	681983	Statement	->	5532:21:163036:163037	681926	9	True				
ANR	681984	Statement	anal	5532:23:163038:163041	681926	10	True				
ANR	681985	Statement	->	5532:27:163042:163043	681926	11	True				
ANR	681986	Statement	fcns	5532:29:163044:163047	681926	12	True				
ANR	681987	Statement	","	5532:33:163048:163048	681926	13	True				
ANR	681988	Statement	iter	5532:35:163050:163053	681926	14	True				
ANR	681989	Statement	","	5532:39:163054:163054	681926	15	True				
ANR	681990	Statement	f	5532:41:163056:163056	681926	16	True				
ANR	681991	Statement	)	5532:42:163057:163057	681926	17	True				
ANR	681992	CompoundStatement		17:44:272:272	681926	18					
ANR	681993	IfStatement	if ( f -> is_noreturn )		681926	0					
ANR	681994	Condition	f -> is_noreturn	5533:6:163067:163080	681926	0	True				
ANR	681995	PtrMemberAccess	f -> is_noreturn		681926	0					
ANR	681996	Identifier	f		681926	0					
ANR	681997	Identifier	is_noreturn		681926	1					
ANR	681998	CompoundStatement		19:3:301:333	681926	1					
ANR	681999	IdentifierDeclStatement	ut64 * n = malloc ( sizeof ( ut64 ) ) ;	5534:3:163088:163120	681926	0	True				
ANR	682000	IdentifierDecl	* n = malloc ( sizeof ( ut64 ) )		681926	0					
ANR	682001	IdentifierDeclType	ut64 *		681926	0					
ANR	682002	Identifier	n		681926	1					
ANR	682003	AssignmentExpression	* n = malloc ( sizeof ( ut64 ) )		681926	2		=			
ANR	682004	Identifier	n		681926	0					
ANR	682005	CallExpression	malloc ( sizeof ( ut64 ) )		681926	1					
ANR	682006	Callee	malloc		681926	0					
ANR	682007	Identifier	malloc		681926	0					
ANR	682008	ArgumentList	sizeof ( ut64 )		681926	1					
ANR	682009	Argument	sizeof ( ut64 )		681926	0					
ANR	682010	SizeofExpression	sizeof ( ut64 )		681926	0					
ANR	682011	Sizeof	sizeof		681926	0					
ANR	682012	SizeofOperand	ut64		681926	1					
ANR	682013	ExpressionStatement	* n = f -> addr	5535:3:163125:163137	681926	1	True				
ANR	682014	AssignmentExpression	* n = f -> addr		681926	0		=			
ANR	682015	UnaryOperationExpression	* n		681926	0					
ANR	682016	UnaryOperator	*		681926	0					
ANR	682017	Identifier	n		681926	1					
ANR	682018	PtrMemberAccess	f -> addr		681926	1					
ANR	682019	Identifier	f		681926	0					
ANR	682020	Identifier	addr		681926	1					
ANR	682021	ExpressionStatement	"r_list_append ( todo , n )"	5536:3:163142:163165	681926	2	True				
ANR	682022	CallExpression	"r_list_append ( todo , n )"		681926	0					
ANR	682023	Callee	r_list_append		681926	0					
ANR	682024	Identifier	r_list_append		681926	0					
ANR	682025	ArgumentList	todo		681926	1					
ANR	682026	Argument	todo		681926	0					
ANR	682027	Identifier	todo		681926	0					
ANR	682028	Argument	n		681926	1					
ANR	682029	Identifier	n		681926	0					
ANR	682030	WhileStatement	while ( ! r_list_empty ( todo ) )		681926	19					
ANR	682031	Condition	! r_list_empty ( todo )	5540:8:163183:163202	681926	0	True				
ANR	682032	UnaryOperationExpression	! r_list_empty ( todo )		681926	0					
ANR	682033	UnaryOperator	!		681926	0					
ANR	682034	CallExpression	r_list_empty ( todo )		681926	1					
ANR	682035	Callee	r_list_empty		681926	0					
ANR	682036	Identifier	r_list_empty		681926	0					
ANR	682037	ArgumentList	todo		681926	1					
ANR	682038	Argument	todo		681926	0					
ANR	682039	Identifier	todo		681926	0					
ANR	682040	CompoundStatement		33:2:612:626	681926	1					
ANR	682041	IdentifierDeclStatement	ut64 * paddr = ( ut64 * ) r_list_pop ( todo ) ;	5541:2:163209:163247	681926	0	True				
ANR	682042	IdentifierDecl	* paddr = ( ut64 * ) r_list_pop ( todo )		681926	0					
ANR	682043	IdentifierDeclType	ut64 *		681926	0					
ANR	682044	Identifier	paddr		681926	1					
ANR	682045	AssignmentExpression	* paddr = ( ut64 * ) r_list_pop ( todo )		681926	2		=			
ANR	682046	Identifier	paddr		681926	0					
ANR	682047	CastExpression	( ut64 * ) r_list_pop ( todo )		681926	1					
ANR	682048	CastTarget	ut64 *		681926	0					
ANR	682049	CallExpression	r_list_pop ( todo )		681926	1					
ANR	682050	Callee	r_list_pop		681926	0					
ANR	682051	Identifier	r_list_pop		681926	0					
ANR	682052	ArgumentList	todo		681926	1					
ANR	682053	Argument	todo		681926	0					
ANR	682054	Identifier	todo		681926	0					
ANR	682055	IdentifierDeclStatement	ut64 noret_addr = * paddr ;	5542:2:163251:163275	681926	1	True				
ANR	682056	IdentifierDecl	noret_addr = * paddr		681926	0					
ANR	682057	IdentifierDeclType	ut64		681926	0					
ANR	682058	Identifier	noret_addr		681926	1					
ANR	682059	AssignmentExpression	noret_addr = * paddr		681926	2		=			
ANR	682060	Identifier	noret_addr		681926	0					
ANR	682061	UnaryOperationExpression	* paddr		681926	1					
ANR	682062	UnaryOperator	*		681926	0					
ANR	682063	Identifier	paddr		681926	1					
ANR	682064	ExpressionStatement	free ( paddr )	5543:2:163279:163291	681926	2	True				
ANR	682065	CallExpression	free ( paddr )		681926	0					
ANR	682066	Callee	free		681926	0					
ANR	682067	Identifier	free		681926	0					
ANR	682068	ArgumentList	paddr		681926	1					
ANR	682069	Argument	paddr		681926	0					
ANR	682070	Identifier	paddr		681926	0					
ANR	682071	IfStatement	if ( r_cons_is_breaked ( ) )		681926	3					
ANR	682072	Condition	r_cons_is_breaked ( )	5544:6:163299:163318	681926	0	True				
ANR	682073	CallExpression	r_cons_is_breaked ( )		681926	0					
ANR	682074	Callee	r_cons_is_breaked		681926	0					
ANR	682075	Identifier	r_cons_is_breaked		681926	0					
ANR	682076	ArgumentList			681926	1					
ANR	682077	CompoundStatement		29:28:534:534	681926	1					
ANR	682078	BreakStatement	break ;	5545:3:163326:163331	681926	0	True				
ANR	682079	IdentifierDeclStatement	"RList * xrefs = r_anal_xrefs_get ( core -> anal , noret_addr ) ;"	5547:2:163339:163395	681926	4	True				
ANR	682080	IdentifierDecl	"* xrefs = r_anal_xrefs_get ( core -> anal , noret_addr )"		681926	0					
ANR	682081	IdentifierDeclType	RList *		681926	0					
ANR	682082	Identifier	xrefs		681926	1					
ANR	682083	AssignmentExpression	"* xrefs = r_anal_xrefs_get ( core -> anal , noret_addr )"		681926	2		=			
ANR	682084	Identifier	xrefs		681926	0					
ANR	682085	CallExpression	"r_anal_xrefs_get ( core -> anal , noret_addr )"		681926	1					
ANR	682086	Callee	r_anal_xrefs_get		681926	0					
ANR	682087	Identifier	r_anal_xrefs_get		681926	0					
ANR	682088	ArgumentList	core -> anal		681926	1					
ANR	682089	Argument	core -> anal		681926	0					
ANR	682090	PtrMemberAccess	core -> anal		681926	0					
ANR	682091	Identifier	core		681926	0					
ANR	682092	Identifier	anal		681926	1					
ANR	682093	Argument	noret_addr		681926	1					
ANR	682094	Identifier	noret_addr		681926	0					
ANR	682095	IdentifierDeclStatement	RAnalRef * xref ;	5548:2:163399:163413	681926	5	True				
ANR	682096	IdentifierDecl	* xref		681926	0					
ANR	682097	IdentifierDeclType	RAnalRef *		681926	0					
ANR	682098	Identifier	xref		681926	1					
ANR	682099	Statement	r_list_foreach	5549:2:163417:163430	681926	6	True				
ANR	682100	Statement	(	5549:17:163432:163432	681926	7	True				
ANR	682101	Statement	xrefs	5549:18:163433:163437	681926	8	True				
ANR	682102	Statement	","	5549:23:163438:163438	681926	9	True				
ANR	682103	Statement	iter	5549:25:163440:163443	681926	10	True				
ANR	682104	Statement	","	5549:29:163444:163444	681926	11	True				
ANR	682105	Statement	xref	5549:31:163446:163449	681926	12	True				
ANR	682106	Statement	)	5549:35:163450:163450	681926	13	True				
ANR	682107	CompoundStatement		58:3:1419:1437	681926	14					
ANR	682108	IdentifierDeclStatement	"RAnalOp * xrefop = r_core_op_anal ( core , xref -> addr ) ;"	5550:3:163457:163508	681926	0	True				
ANR	682109	IdentifierDecl	"* xrefop = r_core_op_anal ( core , xref -> addr )"		681926	0					
ANR	682110	IdentifierDeclType	RAnalOp *		681926	0					
ANR	682111	Identifier	xrefop		681926	1					
ANR	682112	AssignmentExpression	"* xrefop = r_core_op_anal ( core , xref -> addr )"		681926	2		=			
ANR	682113	Identifier	xrefop		681926	0					
ANR	682114	CallExpression	"r_core_op_anal ( core , xref -> addr )"		681926	1					
ANR	682115	Callee	r_core_op_anal		681926	0					
ANR	682116	Identifier	r_core_op_anal		681926	0					
ANR	682117	ArgumentList	core		681926	1					
ANR	682118	Argument	core		681926	0					
ANR	682119	Identifier	core		681926	0					
ANR	682120	Argument	xref -> addr		681926	1					
ANR	682121	PtrMemberAccess	xref -> addr		681926	0					
ANR	682122	Identifier	xref		681926	0					
ANR	682123	Identifier	addr		681926	1					
ANR	682124	IfStatement	if ( ! xrefop )		681926	1					
ANR	682125	Condition	! xrefop	5551:7:163517:163523	681926	0	True				
ANR	682126	UnaryOperationExpression	! xrefop		681926	0					
ANR	682127	UnaryOperator	!		681926	0					
ANR	682128	Identifier	xrefop		681926	1					
ANR	682129	CompoundStatement		36:16:739:739	681926	1					
ANR	682130	Statement	eprintf	5552:4:163532:163538	681926	0	True				
ANR	682131	Statement	(	5552:12:163540:163540	681926	1	True				
ANR	682132	Statement	"""Cannot analyze opcode at 0x%08"""	5552:13:163541:163572	681926	2	True				
ANR	682133	Statement	PFMT64x	5552:46:163574:163580	681926	3	True				
ANR	682134	Statement	"""\\n"""	5552:54:163582:163585	681926	4	True				
ANR	682135	Statement	","	5552:58:163586:163586	681926	5	True				
ANR	682136	Statement	xref	5552:60:163588:163591	681926	6	True				
ANR	682137	Statement	->	5552:64:163592:163593	681926	7	True				
ANR	682138	Statement	addr	5552:66:163594:163597	681926	8	True				
ANR	682139	Statement	)	5552:70:163598:163598	681926	9	True				
ANR	682140	ExpressionStatement		5552:71:163599:163599	681926	10	True				
ANR	682141	ContinueStatement	continue ;	5553:4:163605:163613	681926	11	True				
ANR	682142	IfStatement	if ( xref -> type != R_ANAL_REF_TYPE_CALL )		681926	2					
ANR	682143	Condition	xref -> type != R_ANAL_REF_TYPE_CALL	5555:7:163627:163660	681926	0	True				
ANR	682144	EqualityExpression	xref -> type != R_ANAL_REF_TYPE_CALL		681926	0		!=			
ANR	682145	PtrMemberAccess	xref -> type		681926	0					
ANR	682146	Identifier	xref		681926	0					
ANR	682147	Identifier	type		681926	1					
ANR	682148	Identifier	R_ANAL_REF_TYPE_CALL		681926	1					
ANR	682149	CompoundStatement		40:43:876:876	681926	1					
ANR	682150	ContinueStatement	continue ;	5556:4:163669:163677	681926	0	True				
ANR	682151	ExpressionStatement	"f = r_anal_get_fcn_in ( core -> anal , xref -> addr , 0 )"	5558:3:163687:163736	681926	3	True				
ANR	682152	AssignmentExpression	"f = r_anal_get_fcn_in ( core -> anal , xref -> addr , 0 )"		681926	0		=			
ANR	682153	Identifier	f		681926	0					
ANR	682154	CallExpression	"r_anal_get_fcn_in ( core -> anal , xref -> addr , 0 )"		681926	1					
ANR	682155	Callee	r_anal_get_fcn_in		681926	0					
ANR	682156	Identifier	r_anal_get_fcn_in		681926	0					
ANR	682157	ArgumentList	core -> anal		681926	1					
ANR	682158	Argument	core -> anal		681926	0					
ANR	682159	PtrMemberAccess	core -> anal		681926	0					
ANR	682160	Identifier	core		681926	0					
ANR	682161	Identifier	anal		681926	1					
ANR	682162	Argument	xref -> addr		681926	1					
ANR	682163	PtrMemberAccess	xref -> addr		681926	0					
ANR	682164	Identifier	xref		681926	0					
ANR	682165	Identifier	addr		681926	1					
ANR	682166	Argument	0		681926	2					
ANR	682167	PrimaryExpression	0		681926	0					
ANR	682168	IfStatement	if ( ! f || ( f -> type != R_ANAL_FCN_TYPE_FCN && f -> type != R_ANAL_FCN_TYPE_SYM ) )		681926	4					
ANR	682169	Condition	! f || ( f -> type != R_ANAL_FCN_TYPE_FCN && f -> type != R_ANAL_FCN_TYPE_SYM )	5559:7:163745:163816	681926	0	True				
ANR	682170	OrExpression	! f || ( f -> type != R_ANAL_FCN_TYPE_FCN && f -> type != R_ANAL_FCN_TYPE_SYM )		681926	0		||			
ANR	682171	UnaryOperationExpression	! f		681926	0					
ANR	682172	UnaryOperator	!		681926	0					
ANR	682173	Identifier	f		681926	1					
ANR	682174	AndExpression	f -> type != R_ANAL_FCN_TYPE_FCN && f -> type != R_ANAL_FCN_TYPE_SYM		681926	1		&&			
ANR	682175	EqualityExpression	f -> type != R_ANAL_FCN_TYPE_FCN		681926	0		!=			
ANR	682176	PtrMemberAccess	f -> type		681926	0					
ANR	682177	Identifier	f		681926	0					
ANR	682178	Identifier	type		681926	1					
ANR	682179	Identifier	R_ANAL_FCN_TYPE_FCN		681926	1					
ANR	682180	EqualityExpression	f -> type != R_ANAL_FCN_TYPE_SYM		681926	1		!=			
ANR	682181	PtrMemberAccess	f -> type		681926	0					
ANR	682182	Identifier	f		681926	0					
ANR	682183	Identifier	type		681926	1					
ANR	682184	Identifier	R_ANAL_FCN_TYPE_SYM		681926	1					
ANR	682185	CompoundStatement		44:81:1032:1032	681926	1					
ANR	682186	ContinueStatement	continue ;	5560:4:163825:163833	681926	0	True				
ANR	682187	IdentifierDeclStatement	ut64 addr = f -> addr ;	5562:3:163843:163862	681926	5	True				
ANR	682188	IdentifierDecl	addr = f -> addr		681926	0					
ANR	682189	IdentifierDeclType	ut64		681926	0					
ANR	682190	Identifier	addr		681926	1					
ANR	682191	AssignmentExpression	addr = f -> addr		681926	2		=			
ANR	682192	Identifier	addr		681926	0					
ANR	682193	PtrMemberAccess	f -> addr		681926	1					
ANR	682194	Identifier	f		681926	0					
ANR	682195	Identifier	addr		681926	1					
ANR	682196	ExpressionStatement	"r_anal_fcn_del_locs ( core -> anal , addr )"	5564:3:163868:163906	681926	6	True				
ANR	682197	CallExpression	"r_anal_fcn_del_locs ( core -> anal , addr )"		681926	0					
ANR	682198	Callee	r_anal_fcn_del_locs		681926	0					
ANR	682199	Identifier	r_anal_fcn_del_locs		681926	0					
ANR	682200	ArgumentList	core -> anal		681926	1					
ANR	682201	Argument	core -> anal		681926	0					
ANR	682202	PtrMemberAccess	core -> anal		681926	0					
ANR	682203	Identifier	core		681926	0					
ANR	682204	Identifier	anal		681926	1					
ANR	682205	Argument	addr		681926	1					
ANR	682206	Identifier	addr		681926	0					
ANR	682207	ExpressionStatement	"r_core_anal_fcn ( core , addr , UT64_MAX , R_ANAL_REF_TYPE_NULL , 3 )"	5566:3:163986:164049	681926	7	True				
ANR	682208	CallExpression	"r_core_anal_fcn ( core , addr , UT64_MAX , R_ANAL_REF_TYPE_NULL , 3 )"		681926	0					
ANR	682209	Callee	r_core_anal_fcn		681926	0					
ANR	682210	Identifier	r_core_anal_fcn		681926	0					
ANR	682211	ArgumentList	core		681926	1					
ANR	682212	Argument	core		681926	0					
ANR	682213	Identifier	core		681926	0					
ANR	682214	Argument	addr		681926	1					
ANR	682215	Identifier	addr		681926	0					
ANR	682216	Argument	UT64_MAX		681926	2					
ANR	682217	Identifier	UT64_MAX		681926	0					
ANR	682218	Argument	R_ANAL_REF_TYPE_NULL		681926	3					
ANR	682219	Identifier	R_ANAL_REF_TYPE_NULL		681926	0					
ANR	682220	Argument	3		681926	4					
ANR	682221	PrimaryExpression	3		681926	0					
ANR	682222	ExpressionStatement	"f = r_anal_get_fcn_at ( core -> anal , addr , 0 )"	5568:3:164055:164098	681926	8	True				
ANR	682223	AssignmentExpression	"f = r_anal_get_fcn_at ( core -> anal , addr , 0 )"		681926	0		=			
ANR	682224	Identifier	f		681926	0					
ANR	682225	CallExpression	"r_anal_get_fcn_at ( core -> anal , addr , 0 )"		681926	1					
ANR	682226	Callee	r_anal_get_fcn_at		681926	0					
ANR	682227	Identifier	r_anal_get_fcn_at		681926	0					
ANR	682228	ArgumentList	core -> anal		681926	1					
ANR	682229	Argument	core -> anal		681926	0					
ANR	682230	PtrMemberAccess	core -> anal		681926	0					
ANR	682231	Identifier	core		681926	0					
ANR	682232	Identifier	anal		681926	1					
ANR	682233	Argument	addr		681926	1					
ANR	682234	Identifier	addr		681926	0					
ANR	682235	Argument	0		681926	2					
ANR	682236	PrimaryExpression	0		681926	0					
ANR	682237	IfStatement	if ( ! f || ( f -> type != R_ANAL_FCN_TYPE_FCN && f -> type != R_ANAL_FCN_TYPE_SYM ) )		681926	9					
ANR	682238	Condition	! f || ( f -> type != R_ANAL_FCN_TYPE_FCN && f -> type != R_ANAL_FCN_TYPE_SYM )	5569:7:164107:164178	681926	0	True				
ANR	682239	OrExpression	! f || ( f -> type != R_ANAL_FCN_TYPE_FCN && f -> type != R_ANAL_FCN_TYPE_SYM )		681926	0		||			
ANR	682240	UnaryOperationExpression	! f		681926	0					
ANR	682241	UnaryOperator	!		681926	0					
ANR	682242	Identifier	f		681926	1					
ANR	682243	AndExpression	f -> type != R_ANAL_FCN_TYPE_FCN && f -> type != R_ANAL_FCN_TYPE_SYM		681926	1		&&			
ANR	682244	EqualityExpression	f -> type != R_ANAL_FCN_TYPE_FCN		681926	0		!=			
ANR	682245	PtrMemberAccess	f -> type		681926	0					
ANR	682246	Identifier	f		681926	0					
ANR	682247	Identifier	type		681926	1					
ANR	682248	Identifier	R_ANAL_FCN_TYPE_FCN		681926	1					
ANR	682249	EqualityExpression	f -> type != R_ANAL_FCN_TYPE_SYM		681926	1		!=			
ANR	682250	PtrMemberAccess	f -> type		681926	0					
ANR	682251	Identifier	f		681926	0					
ANR	682252	Identifier	type		681926	1					
ANR	682253	Identifier	R_ANAL_FCN_TYPE_SYM		681926	1					
ANR	682254	CompoundStatement		54:81:1394:1394	681926	1					
ANR	682255	ContinueStatement	continue ;	5570:4:164187:164195	681926	0	True				
ANR	682256	IdentifierDeclStatement	bool found = false ;	5573:3:164206:164224	681926	10	True				
ANR	682257	IdentifierDecl	found = false		681926	0					
ANR	682258	IdentifierDeclType	bool		681926	0					
ANR	682259	Identifier	found		681926	1					
ANR	682260	AssignmentExpression	found = false		681926	2		=			
ANR	682261	Identifier	false		681926	0					
ANR	682262	Identifier	false		681926	1					
ANR	682263	ExpressionStatement	"found = ht_uu_find ( done , f -> addr , & found )"	5574:3:164229:164271	681926	11	True				
ANR	682264	AssignmentExpression	"found = ht_uu_find ( done , f -> addr , & found )"		681926	0		=			
ANR	682265	Identifier	found		681926	0					
ANR	682266	CallExpression	"ht_uu_find ( done , f -> addr , & found )"		681926	1					
ANR	682267	Callee	ht_uu_find		681926	0					
ANR	682268	Identifier	ht_uu_find		681926	0					
ANR	682269	ArgumentList	done		681926	1					
ANR	682270	Argument	done		681926	0					
ANR	682271	Identifier	done		681926	0					
ANR	682272	Argument	f -> addr		681926	1					
ANR	682273	PtrMemberAccess	f -> addr		681926	0					
ANR	682274	Identifier	f		681926	0					
ANR	682275	Identifier	addr		681926	1					
ANR	682276	Argument	& found		681926	2					
ANR	682277	UnaryOperationExpression	& found		681926	0					
ANR	682278	UnaryOperator	&		681926	0					
ANR	682279	Identifier	found		681926	1					
ANR	682280	IfStatement	"if ( f -> addr && ! found && is_noreturn_function ( core , f ) )"		681926	12					
ANR	682281	Condition	"f -> addr && ! found && is_noreturn_function ( core , f )"	5575:7:164280:164330	681926	0	True				
ANR	682282	AndExpression	"f -> addr && ! found && is_noreturn_function ( core , f )"		681926	0		&&			
ANR	682283	PtrMemberAccess	f -> addr		681926	0					
ANR	682284	Identifier	f		681926	0					
ANR	682285	Identifier	addr		681926	1					
ANR	682286	AndExpression	"! found && is_noreturn_function ( core , f )"		681926	1		&&			
ANR	682287	UnaryOperationExpression	! found		681926	0					
ANR	682288	UnaryOperator	!		681926	0					
ANR	682289	Identifier	found		681926	1					
ANR	682290	CallExpression	"is_noreturn_function ( core , f )"		681926	1					
ANR	682291	Callee	is_noreturn_function		681926	0					
ANR	682292	Identifier	is_noreturn_function		681926	0					
ANR	682293	ArgumentList	core		681926	1					
ANR	682294	Argument	core		681926	0					
ANR	682295	Identifier	core		681926	0					
ANR	682296	Argument	f		681926	1					
ANR	682297	Identifier	f		681926	0					
ANR	682298	CompoundStatement		63:4:1632:1664	681926	1					
ANR	682299	ExpressionStatement	f -> is_noreturn = true	5576:4:164339:164360	681926	0	True				
ANR	682300	AssignmentExpression	f -> is_noreturn = true		681926	0		=			
ANR	682301	PtrMemberAccess	f -> is_noreturn		681926	0					
ANR	682302	Identifier	f		681926	0					
ANR	682303	Identifier	is_noreturn		681926	1					
ANR	682304	Identifier	true		681926	1					
ANR	682305	ExpressionStatement	"r_anal_noreturn_add ( core -> anal , NULL , f -> addr )"	5577:4:164366:164413	681926	1	True				
ANR	682306	CallExpression	"r_anal_noreturn_add ( core -> anal , NULL , f -> addr )"		681926	0					
ANR	682307	Callee	r_anal_noreturn_add		681926	0					
ANR	682308	Identifier	r_anal_noreturn_add		681926	0					
ANR	682309	ArgumentList	core -> anal		681926	1					
ANR	682310	Argument	core -> anal		681926	0					
ANR	682311	PtrMemberAccess	core -> anal		681926	0					
ANR	682312	Identifier	core		681926	0					
ANR	682313	Identifier	anal		681926	1					
ANR	682314	Argument	NULL		681926	1					
ANR	682315	Identifier	NULL		681926	0					
ANR	682316	Argument	f -> addr		681926	2					
ANR	682317	PtrMemberAccess	f -> addr		681926	0					
ANR	682318	Identifier	f		681926	0					
ANR	682319	Identifier	addr		681926	1					
ANR	682320	IdentifierDeclStatement	ut64 * n = malloc ( sizeof ( ut64 ) ) ;	5578:4:164419:164451	681926	2	True				
ANR	682321	IdentifierDecl	* n = malloc ( sizeof ( ut64 ) )		681926	0					
ANR	682322	IdentifierDeclType	ut64 *		681926	0					
ANR	682323	Identifier	n		681926	1					
ANR	682324	AssignmentExpression	* n = malloc ( sizeof ( ut64 ) )		681926	2		=			
ANR	682325	Identifier	n		681926	0					
ANR	682326	CallExpression	malloc ( sizeof ( ut64 ) )		681926	1					
ANR	682327	Callee	malloc		681926	0					
ANR	682328	Identifier	malloc		681926	0					
ANR	682329	ArgumentList	sizeof ( ut64 )		681926	1					
ANR	682330	Argument	sizeof ( ut64 )		681926	0					
ANR	682331	SizeofExpression	sizeof ( ut64 )		681926	0					
ANR	682332	Sizeof	sizeof		681926	0					
ANR	682333	SizeofOperand	ut64		681926	1					
ANR	682334	ExpressionStatement	* n = f -> addr	5579:4:164457:164469	681926	3	True				
ANR	682335	AssignmentExpression	* n = f -> addr		681926	0		=			
ANR	682336	UnaryOperationExpression	* n		681926	0					
ANR	682337	UnaryOperator	*		681926	0					
ANR	682338	Identifier	n		681926	1					
ANR	682339	PtrMemberAccess	f -> addr		681926	1					
ANR	682340	Identifier	f		681926	0					
ANR	682341	Identifier	addr		681926	1					
ANR	682342	ExpressionStatement	"r_list_append ( todo , n )"	5580:4:164475:164498	681926	4	True				
ANR	682343	CallExpression	"r_list_append ( todo , n )"		681926	0					
ANR	682344	Callee	r_list_append		681926	0					
ANR	682345	Identifier	r_list_append		681926	0					
ANR	682346	ArgumentList	todo		681926	1					
ANR	682347	Argument	todo		681926	0					
ANR	682348	Identifier	todo		681926	0					
ANR	682349	Argument	n		681926	1					
ANR	682350	Identifier	n		681926	0					
ANR	682351	ExpressionStatement	"ht_uu_insert ( done , * n , 1 )"	5581:4:164504:164530	681926	5	True				
ANR	682352	CallExpression	"ht_uu_insert ( done , * n , 1 )"		681926	0					
ANR	682353	Callee	ht_uu_insert		681926	0					
ANR	682354	Identifier	ht_uu_insert		681926	0					
ANR	682355	ArgumentList	done		681926	1					
ANR	682356	Argument	done		681926	0					
ANR	682357	Identifier	done		681926	0					
ANR	682358	Argument	* n		681926	1					
ANR	682359	UnaryOperationExpression	* n		681926	0					
ANR	682360	UnaryOperator	*		681926	0					
ANR	682361	Identifier	n		681926	1					
ANR	682362	Argument	1		681926	2					
ANR	682363	PrimaryExpression	1		681926	0					
ANR	682364	ExpressionStatement	r_anal_op_free ( xrefop )	5583:3:164540:164563	681926	13	True				
ANR	682365	CallExpression	r_anal_op_free ( xrefop )		681926	0					
ANR	682366	Callee	r_anal_op_free		681926	0					
ANR	682367	Identifier	r_anal_op_free		681926	0					
ANR	682368	ArgumentList	xrefop		681926	1					
ANR	682369	Argument	xrefop		681926	0					
ANR	682370	Identifier	xrefop		681926	0					
ANR	682371	ExpressionStatement	r_list_free ( xrefs )	5585:2:164571:164590	681926	15	True				
ANR	682372	CallExpression	r_list_free ( xrefs )		681926	0					
ANR	682373	Callee	r_list_free		681926	0					
ANR	682374	Identifier	r_list_free		681926	0					
ANR	682375	ArgumentList	xrefs		681926	1					
ANR	682376	Argument	xrefs		681926	0					
ANR	682377	Identifier	xrefs		681926	0					
ANR	682378	ExpressionStatement	r_list_free ( todo )	5587:1:164596:164614	681926	20	True				
ANR	682379	CallExpression	r_list_free ( todo )		681926	0					
ANR	682380	Callee	r_list_free		681926	0					
ANR	682381	Identifier	r_list_free		681926	0					
ANR	682382	ArgumentList	todo		681926	1					
ANR	682383	Argument	todo		681926	0					
ANR	682384	Identifier	todo		681926	0					
ANR	682385	ExpressionStatement	ht_uu_free ( done )	5588:1:164617:164634	681926	21	True				
ANR	682386	CallExpression	ht_uu_free ( done )		681926	0					
ANR	682387	Callee	ht_uu_free		681926	0					
ANR	682388	Identifier	ht_uu_free		681926	0					
ANR	682389	ArgumentList	done		681926	1					
ANR	682390	Argument	done		681926	0					
ANR	682391	Identifier	done		681926	0					
ANR	682392	ReturnType	R_API void		681926	1					
ANR	682393	Identifier	r_core_anal_propagate_noreturn		681926	2					
ANR	682394	ParameterList	RCore * core		681926	3					
ANR	682395	Parameter	RCore * core	5516:42:162773:162783	681926	0	True				
ANR	682396	ParameterType	RCore *		681926	0					
ANR	682397	Identifier	core		681926	1					
ANR	682398	CFGEntryNode	ENTRY		681926		True				
ANR	682399	CFGExitNode	EXIT		681926		True				
ANR	682400	Symbol	r_anal_get_fcn_at		681926						
ANR	682401	Symbol	xrefop		681926						
ANR	682402	Symbol	R_ANAL_FCN_TYPE_FCN		681926						
ANR	682403	Symbol	* core		681926						
ANR	682404	Symbol	core -> anal		681926						
ANR	682405	Symbol	xref -> addr		681926						
ANR	682406	Symbol	r_list_pop		681926						
ANR	682407	Symbol	R_ANAL_REF_TYPE_NULL		681926						
ANR	682408	Symbol	& found		681926						
ANR	682409	Symbol	r_cons_is_breaked		681926						
ANR	682410	Symbol	* paddr		681926						
ANR	682411	Symbol	found		681926						
ANR	682412	Symbol	r_anal_xrefs_get		681926						
ANR	682413	Symbol	f -> addr		681926						
ANR	682414	Symbol	R_ANAL_FCN_TYPE_SYM		681926						
ANR	682415	Symbol	free		681926						
ANR	682416	Symbol	addr		681926						
ANR	682417	Symbol	UT64_MAX		681926						
ANR	682418	Symbol	r_core_op_anal		681926						
ANR	682419	Symbol	R_ANAL_REF_TYPE_CALL		681926						
ANR	682420	Symbol	noret_addr		681926						
ANR	682421	Symbol	malloc		681926						
ANR	682422	Symbol	xref		681926						
ANR	682423	Symbol	NULL		681926						
ANR	682424	Symbol	r_list_newf		681926						
ANR	682425	Symbol	f		681926						
ANR	682426	Symbol	f -> type		681926						
ANR	682427	Symbol	xrefs		681926						
ANR	682428	Symbol	false		681926						
ANR	682429	Symbol	iter		681926						
ANR	682430	Symbol	ht_uu_new0		681926						
ANR	682431	Symbol	done		681926						
ANR	682432	Symbol	n		681926						
ANR	682433	Symbol	todo		681926						
ANR	682434	Symbol	* f		681926						
ANR	682435	Symbol	core		681926						
ANR	682436	Symbol	r_anal_get_fcn_in		681926						
ANR	682437	Symbol	paddr		681926						
ANR	682438	Symbol	* xref		681926						
ANR	682439	Symbol	ht_uu_find		681926						
ANR	682440	Symbol	* n		681926						
ANR	682441	Symbol	true		681926						
ANR	682442	Symbol	r_list_empty		681926						
ANR	682443	Symbol	f -> is_noreturn		681926						
ANR	682444	Symbol	xref -> type		681926						
ANR	682445	Symbol	is_noreturn_function		681926						
