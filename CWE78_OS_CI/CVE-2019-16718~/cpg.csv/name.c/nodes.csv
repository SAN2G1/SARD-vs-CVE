command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5435222	File	data/converged/CVE-2019-16718~_radare2/name.c								
ANR	5435223	Function	r_name_validate_char	5:0:74:300							
ANR	5435224	FunctionDef	r_name_validate_char (const char ch)		5435223	0					
ANR	5435225	CompoundStatement		5:46:120:300	5435223	0					
ANR	5435226	IfStatement	if ( ( ch >= 'a' && ch <= 'z' ) || ( ch >= 'A' && ch <= 'Z' ) || ( IS_DIGIT ( ch ) ) )		5435223	0					
ANR	5435227	Condition	( ch >= 'a' && ch <= 'z' ) || ( ch >= 'A' && ch <= 'Z' ) || ( IS_DIGIT ( ch ) )	6:5:127:196	5435223	0	True				
ANR	5435228	OrExpression	( ch >= 'a' && ch <= 'z' ) || ( ch >= 'A' && ch <= 'Z' ) || ( IS_DIGIT ( ch ) )		5435223	0		||			
ANR	5435229	AndExpression	ch >= 'a' && ch <= 'z'		5435223	0		&&			
ANR	5435230	RelationalExpression	ch >= 'a'		5435223	0		>=			
ANR	5435231	Identifier	ch		5435223	0					
ANR	5435232	PrimaryExpression	'a'		5435223	1					
ANR	5435233	RelationalExpression	ch <= 'z'		5435223	1		<=			
ANR	5435234	Identifier	ch		5435223	0					
ANR	5435235	PrimaryExpression	'z'		5435223	1					
ANR	5435236	OrExpression	( ch >= 'A' && ch <= 'Z' ) || ( IS_DIGIT ( ch ) )		5435223	1		||			
ANR	5435237	AndExpression	ch >= 'A' && ch <= 'Z'		5435223	0		&&			
ANR	5435238	RelationalExpression	ch >= 'A'		5435223	0		>=			
ANR	5435239	Identifier	ch		5435223	0					
ANR	5435240	PrimaryExpression	'A'		5435223	1					
ANR	5435241	RelationalExpression	ch <= 'Z'		5435223	1		<=			
ANR	5435242	Identifier	ch		5435223	0					
ANR	5435243	PrimaryExpression	'Z'		5435223	1					
ANR	5435244	CallExpression	IS_DIGIT ( ch )		5435223	1					
ANR	5435245	Callee	IS_DIGIT		5435223	0					
ANR	5435246	Identifier	IS_DIGIT		5435223	0					
ANR	5435247	ArgumentList	ch		5435223	1					
ANR	5435248	Argument	ch		5435223	0					
ANR	5435249	Identifier	ch		5435223	0					
ANR	5435250	CompoundStatement		2:77:78:78	5435223	1					
ANR	5435251	ReturnStatement	return true ;	7:2:203:214	5435223	0	True				
ANR	5435252	Identifier	true		5435223	0					
ANR	5435253	SwitchStatement	switch ( ch )		5435223	1					
ANR	5435254	Condition	ch	9:9:228:229	5435223	0	True				
ANR	5435255	Identifier	ch		5435223	0					
ANR	5435256	CompoundStatement		5:13:111:111	5435223	1					
ANR	5435257	Label	case ':' :	10:1:235:243	5435223	0	True				
ANR	5435258	Label	case '.' :	11:1:246:254	5435223	1	True				
ANR	5435259	Label	case '_' :	12:1:257:265	5435223	2	True				
ANR	5435260	ReturnStatement	return true ;	13:2:269:280	5435223	3	True				
ANR	5435261	Identifier	true		5435223	0					
ANR	5435262	ReturnStatement	return false ;	15:1:286:298	5435223	2	True				
ANR	5435263	Identifier	false		5435223	0					
ANR	5435264	ReturnType	R_API int		5435223	1					
ANR	5435265	Identifier	r_name_validate_char		5435223	2					
ANR	5435266	ParameterList	const char ch		5435223	3					
ANR	5435267	Parameter	const char ch	5:31:105:117	5435223	0	True				
ANR	5435268	ParameterType	const char		5435223	0					
ANR	5435269	Identifier	ch		5435223	1					
ANR	5435270	CFGEntryNode	ENTRY		5435223		True				
ANR	5435271	CFGExitNode	EXIT		5435223		True				
ANR	5435272	Symbol	ch		5435223						
ANR	5435273	Symbol	true		5435223						
ANR	5435274	Symbol	false		5435223						
ANR	5435275	Symbol	IS_DIGIT		5435223						
ANR	5435276	Function	r_name_check	18:0:303:602							
ANR	5435277	FunctionDef	r_name_check (const char * name)		5435276	0					
ANR	5435278	CompoundStatement		18:41:344:602	5435276	0					
ANR	5435279	IfStatement	if ( ! name || ! * name || IS_DIGIT ( * name ) )		5435276	0					
ANR	5435280	Condition	! name || ! * name || IS_DIGIT ( * name )	20:5:381:415	5435276	0	True				
ANR	5435281	OrExpression	! name || ! * name || IS_DIGIT ( * name )		5435276	0		||			
ANR	5435282	UnaryOperationExpression	! name		5435276	0					
ANR	5435283	UnaryOperator	!		5435276	0					
ANR	5435284	Identifier	name		5435276	1					
ANR	5435285	OrExpression	! * name || IS_DIGIT ( * name )		5435276	1		||			
ANR	5435286	UnaryOperationExpression	! * name		5435276	0					
ANR	5435287	UnaryOperator	!		5435276	0					
ANR	5435288	UnaryOperationExpression	* name		5435276	1					
ANR	5435289	UnaryOperator	*		5435276	0					
ANR	5435290	Identifier	name		5435276	1					
ANR	5435291	CallExpression	IS_DIGIT ( * name )		5435276	1					
ANR	5435292	Callee	IS_DIGIT		5435276	0					
ANR	5435293	Identifier	IS_DIGIT		5435276	0					
ANR	5435294	ArgumentList	* name		5435276	1					
ANR	5435295	Argument	* name		5435276	0					
ANR	5435296	UnaryOperationExpression	* name		5435276	0					
ANR	5435297	UnaryOperator	*		5435276	0					
ANR	5435298	Identifier	name		5435276	1					
ANR	5435299	CompoundStatement		3:42:73:73	5435276	1					
ANR	5435300	ReturnStatement	return false ;	21:2:422:434	5435276	0	True				
ANR	5435301	Identifier	false		5435276	0					
ANR	5435302	ForStatement	for ( ; * name != '\\0' ; name ++ )		5435276	1					
ANR	5435303	Condition	* name != '\\0'	24:8:500:512	5435276	0	True				
ANR	5435304	EqualityExpression	* name != '\\0'		5435276	0		!=			
ANR	5435305	UnaryOperationExpression	* name		5435276	0					
ANR	5435306	UnaryOperator	*		5435276	0					
ANR	5435307	Identifier	name		5435276	1					
ANR	5435308	PrimaryExpression	'\\0'		5435276	1					
ANR	5435309	PostIncDecOperationExpression	name ++	24:23:515:520	5435276	1	True				
ANR	5435310	Identifier	name		5435276	0					
ANR	5435311	IncDec	++		5435276	1					
ANR	5435312	CompoundStatement		7:31:178:178	5435276	2					
ANR	5435313	IfStatement	if ( ! r_name_validate_char ( * name ) )		5435276	0					
ANR	5435314	Condition	! r_name_validate_char ( * name )	25:6:531:559	5435276	0	True				
ANR	5435315	UnaryOperationExpression	! r_name_validate_char ( * name )		5435276	0					
ANR	5435316	UnaryOperator	!		5435276	0					
ANR	5435317	CallExpression	r_name_validate_char ( * name )		5435276	1					
ANR	5435318	Callee	r_name_validate_char		5435276	0					
ANR	5435319	Identifier	r_name_validate_char		5435276	0					
ANR	5435320	ArgumentList	* name		5435276	1					
ANR	5435321	Argument	* name		5435276	0					
ANR	5435322	UnaryOperationExpression	* name		5435276	0					
ANR	5435323	UnaryOperator	*		5435276	0					
ANR	5435324	Identifier	name		5435276	1					
ANR	5435325	CompoundStatement		8:37:217:217	5435276	1					
ANR	5435326	ReturnStatement	return false ;	26:3:567:579	5435276	0	True				
ANR	5435327	Identifier	false		5435276	0					
ANR	5435328	ReturnStatement	return true ;	29:1:589:600	5435276	2	True				
ANR	5435329	Identifier	true		5435276	0					
ANR	5435330	ReturnType	R_API int		5435276	1					
ANR	5435331	Identifier	r_name_check		5435276	2					
ANR	5435332	ParameterList	const char * name		5435276	3					
ANR	5435333	Parameter	const char * name	18:23:326:341	5435276	0	True				
ANR	5435334	ParameterType	const char *		5435276	0					
ANR	5435335	Identifier	name		5435276	1					
ANR	5435336	CFGEntryNode	ENTRY		5435276		True				
ANR	5435337	CFGExitNode	EXIT		5435276		True				
ANR	5435338	Symbol	* name		5435276						
ANR	5435339	Symbol	name		5435276						
ANR	5435340	Symbol	false		5435276						
ANR	5435341	Symbol	true		5435276						
ANR	5435342	Symbol	r_name_validate_char		5435276						
ANR	5435343	Symbol	IS_DIGIT		5435276						
ANR	5435344	Function	is_special_char	32:0:605:770							
ANR	5435345	FunctionDef	is_special_char (char * name)		5435344	0					
ANR	5435346	CompoundStatement		32:48:653:770	5435344	0					
ANR	5435347	IdentifierDeclStatement	const char n = * name ;	33:1:656:676	5435344	0	True				
ANR	5435348	IdentifierDecl	n = * name		5435344	0					
ANR	5435349	IdentifierDeclType	const char		5435344	0					
ANR	5435350	Identifier	n		5435344	1					
ANR	5435351	AssignmentExpression	n = * name		5435344	2		=			
ANR	5435352	Identifier	n		5435344	0					
ANR	5435353	UnaryOperationExpression	* name		5435344	1					
ANR	5435354	UnaryOperator	*		5435344	0					
ANR	5435355	Identifier	name		5435344	1					
ANR	5435356	ReturnStatement	return ( n == 'b' || n == 'f' || n == 'n' || n == 'r' || n == 't' || n == 'v' || n == 'a' ) ;	34:1:679:768	5435344	1	True				
ANR	5435357	OrExpression	n == 'b' || n == 'f' || n == 'n' || n == 'r' || n == 't' || n == 'v' || n == 'a'		5435344	0		||			
ANR	5435358	EqualityExpression	n == 'b'		5435344	0		==			
ANR	5435359	Identifier	n		5435344	0					
ANR	5435360	PrimaryExpression	'b'		5435344	1					
ANR	5435361	OrExpression	n == 'f' || n == 'n' || n == 'r' || n == 't' || n == 'v' || n == 'a'		5435344	1		||			
ANR	5435362	EqualityExpression	n == 'f'		5435344	0		==			
ANR	5435363	Identifier	n		5435344	0					
ANR	5435364	PrimaryExpression	'f'		5435344	1					
ANR	5435365	OrExpression	n == 'n' || n == 'r' || n == 't' || n == 'v' || n == 'a'		5435344	1		||			
ANR	5435366	EqualityExpression	n == 'n'		5435344	0		==			
ANR	5435367	Identifier	n		5435344	0					
ANR	5435368	PrimaryExpression	'n'		5435344	1					
ANR	5435369	OrExpression	n == 'r' || n == 't' || n == 'v' || n == 'a'		5435344	1		||			
ANR	5435370	EqualityExpression	n == 'r'		5435344	0		==			
ANR	5435371	Identifier	n		5435344	0					
ANR	5435372	PrimaryExpression	'r'		5435344	1					
ANR	5435373	OrExpression	n == 't' || n == 'v' || n == 'a'		5435344	1		||			
ANR	5435374	EqualityExpression	n == 't'		5435344	0		==			
ANR	5435375	Identifier	n		5435344	0					
ANR	5435376	PrimaryExpression	't'		5435344	1					
ANR	5435377	OrExpression	n == 'v' || n == 'a'		5435344	1		||			
ANR	5435378	EqualityExpression	n == 'v'		5435344	0		==			
ANR	5435379	Identifier	n		5435344	0					
ANR	5435380	PrimaryExpression	'v'		5435344	1					
ANR	5435381	EqualityExpression	n == 'a'		5435344	1		==			
ANR	5435382	Identifier	n		5435344	0					
ANR	5435383	PrimaryExpression	'a'		5435344	1					
ANR	5435384	ReturnType	static inline bool		5435344	1					
ANR	5435385	Identifier	is_special_char		5435344	2					
ANR	5435386	ParameterList	char * name		5435344	3					
ANR	5435387	Parameter	char * name	32:36:641:650	5435344	0	True				
ANR	5435388	ParameterType	char *		5435344	0					
ANR	5435389	Identifier	name		5435344	1					
ANR	5435390	CFGEntryNode	ENTRY		5435344		True				
ANR	5435391	CFGExitNode	EXIT		5435344		True				
ANR	5435392	Symbol	* name		5435344						
ANR	5435393	Symbol	name		5435344						
ANR	5435394	Symbol	n		5435344						
ANR	5435395	Function	r_name_filter	37:0:773:1766							
ANR	5435396	FunctionDef	"r_name_filter (char * name , int maxlen)"		5435395	0					
ANR	5435397	CompoundStatement		37:48:821:1766	5435395	0					
ANR	5435398	IdentifierDeclStatement	int i ;	38:1:824:829	5435395	0	True				
ANR	5435399	IdentifierDecl	i		5435395	0					
ANR	5435400	IdentifierDeclType	int		5435395	0					
ANR	5435401	Identifier	i		5435395	1					
ANR	5435402	IdentifierDeclStatement	size_t len ;	39:1:832:842	5435395	1	True				
ANR	5435403	IdentifierDecl	len		5435395	0					
ANR	5435404	IdentifierDeclType	size_t		5435395	0					
ANR	5435405	Identifier	len		5435395	1					
ANR	5435406	IfStatement	if ( ! name )		5435395	2					
ANR	5435407	Condition	! name	40:5:849:853	5435395	0	True				
ANR	5435408	UnaryOperationExpression	! name		5435395	0					
ANR	5435409	UnaryOperator	!		5435395	0					
ANR	5435410	Identifier	name		5435395	1					
ANR	5435411	CompoundStatement		4:12:34:34	5435395	1					
ANR	5435412	ReturnStatement	return 0 ;	41:2:860:868	5435395	0	True				
ANR	5435413	PrimaryExpression	0		5435395	0					
ANR	5435414	IfStatement	if ( maxlen < 0 )		5435395	3					
ANR	5435415	Condition	maxlen < 0	43:5:878:887	5435395	0	True				
ANR	5435416	RelationalExpression	maxlen < 0		5435395	0		<			
ANR	5435417	Identifier	maxlen		5435395	0					
ANR	5435418	PrimaryExpression	0		5435395	1					
ANR	5435419	CompoundStatement		7:17:68:68	5435395	1					
ANR	5435420	ExpressionStatement	maxlen = strlen ( name )	44:2:894:916	5435395	0	True				
ANR	5435421	AssignmentExpression	maxlen = strlen ( name )		5435395	0		=			
ANR	5435422	Identifier	maxlen		5435395	0					
ANR	5435423	CallExpression	strlen ( name )		5435395	1					
ANR	5435424	Callee	strlen		5435395	0					
ANR	5435425	Identifier	strlen		5435395	0					
ANR	5435426	ArgumentList	name		5435395	1					
ANR	5435427	Argument	name		5435395	0					
ANR	5435428	Identifier	name		5435395	0					
ANR	5435429	IdentifierDeclStatement	char * oname = name = r_str_trim_head_tail ( name ) ;	46:1:922:970	5435395	4	True				
ANR	5435430	IdentifierDecl	* oname = name = r_str_trim_head_tail ( name )		5435395	0					
ANR	5435431	IdentifierDeclType	char *		5435395	0					
ANR	5435432	Identifier	oname		5435395	1					
ANR	5435433	AssignmentExpression	* oname = name = r_str_trim_head_tail ( name )		5435395	2		=			
ANR	5435434	Identifier	oname		5435395	0					
ANR	5435435	AssignmentExpression	name = r_str_trim_head_tail ( name )		5435395	1		=			
ANR	5435436	Identifier	name		5435395	0					
ANR	5435437	CallExpression	r_str_trim_head_tail ( name )		5435395	1					
ANR	5435438	Callee	r_str_trim_head_tail		5435395	0					
ANR	5435439	Identifier	r_str_trim_head_tail		5435395	0					
ANR	5435440	ArgumentList	name		5435395	1					
ANR	5435441	Argument	name		5435395	0					
ANR	5435442	Identifier	name		5435395	0					
ANR	5435443	ForStatement	"for ( i = 0 ; * name ; name ++ , i ++ )"		5435395	5					
ANR	5435444	ForInit	i = 0 ;	47:6:978:983	5435395	0	True				
ANR	5435445	AssignmentExpression	i = 0		5435395	0		=			
ANR	5435446	Identifier	i		5435395	0					
ANR	5435447	PrimaryExpression	0		5435395	1					
ANR	5435448	Condition	* name	47:13:985:989	5435395	1	True				
ANR	5435449	UnaryOperationExpression	* name		5435395	0					
ANR	5435450	UnaryOperator	*		5435395	0					
ANR	5435451	Identifier	name		5435395	1					
ANR	5435452	Expression	"name ++ , i ++"	47:20:992:1002	5435395	2	True				
ANR	5435453	PostIncDecOperationExpression	name ++		5435395	0					
ANR	5435454	Identifier	name		5435395	0					
ANR	5435455	IncDec	++		5435395	1					
ANR	5435456	PostIncDecOperationExpression	i ++		5435395	1					
ANR	5435457	Identifier	i		5435395	0					
ANR	5435458	IncDec	++		5435395	1					
ANR	5435459	CompoundStatement		11:33:183:183	5435395	3					
ANR	5435460	IfStatement	if ( maxlen && i > maxlen )		5435395	0					
ANR	5435461	Condition	maxlen && i > maxlen	48:6:1013:1032	5435395	0	True				
ANR	5435462	AndExpression	maxlen && i > maxlen		5435395	0		&&			
ANR	5435463	Identifier	maxlen		5435395	0					
ANR	5435464	RelationalExpression	i > maxlen		5435395	1		>			
ANR	5435465	Identifier	i		5435395	0					
ANR	5435466	Identifier	maxlen		5435395	1					
ANR	5435467	CompoundStatement		12:28:213:213	5435395	1					
ANR	5435468	ExpressionStatement	* name = '\\0'	49:3:1040:1052	5435395	0	True				
ANR	5435469	AssignmentExpression	* name = '\\0'		5435395	0		=			
ANR	5435470	UnaryOperationExpression	* name		5435395	0					
ANR	5435471	UnaryOperator	*		5435395	0					
ANR	5435472	Identifier	name		5435395	1					
ANR	5435473	PrimaryExpression	'\\0'		5435395	1					
ANR	5435474	BreakStatement	break ;	50:3:1057:1062	5435395	1	True				
ANR	5435475	IfStatement	if ( ! r_name_validate_char ( * name ) && * name != '\\\\' )		5435395	1					
ANR	5435476	Condition	! r_name_validate_char ( * name ) && * name != '\\\\'	52:6:1074:1119	5435395	0	True				
ANR	5435477	AndExpression	! r_name_validate_char ( * name ) && * name != '\\\\'		5435395	0		&&			
ANR	5435478	UnaryOperationExpression	! r_name_validate_char ( * name )		5435395	0					
ANR	5435479	UnaryOperator	!		5435395	0					
ANR	5435480	CallExpression	r_name_validate_char ( * name )		5435395	1					
ANR	5435481	Callee	r_name_validate_char		5435395	0					
ANR	5435482	Identifier	r_name_validate_char		5435395	0					
ANR	5435483	ArgumentList	* name		5435395	1					
ANR	5435484	Argument	* name		5435395	0					
ANR	5435485	UnaryOperationExpression	* name		5435395	0					
ANR	5435486	UnaryOperator	*		5435395	0					
ANR	5435487	Identifier	name		5435395	1					
ANR	5435488	EqualityExpression	* name != '\\\\'		5435395	1		!=			
ANR	5435489	UnaryOperationExpression	* name		5435395	0					
ANR	5435490	UnaryOperator	*		5435395	0					
ANR	5435491	Identifier	name		5435395	1					
ANR	5435492	PrimaryExpression	'\\\\'		5435395	1					
ANR	5435493	CompoundStatement		16:54:300:300	5435395	1					
ANR	5435494	ExpressionStatement	* name = '_'	53:3:1127:1138	5435395	0	True				
ANR	5435495	AssignmentExpression	* name = '_'		5435395	0		=			
ANR	5435496	UnaryOperationExpression	* name		5435395	0					
ANR	5435497	UnaryOperator	*		5435395	0					
ANR	5435498	Identifier	name		5435395	1					
ANR	5435499	PrimaryExpression	'_'		5435395	1					
ANR	5435500	WhileStatement	while ( i > 0 )		5435395	6					
ANR	5435501	Condition	i > 0	58:8:1205:1209	5435395	0	True				
ANR	5435502	RelationalExpression	i > 0		5435395	0		>			
ANR	5435503	Identifier	i		5435395	0					
ANR	5435504	PrimaryExpression	0		5435395	1					
ANR	5435505	CompoundStatement		22:15:390:390	5435395	1					
ANR	5435506	IfStatement	if ( * ( name - 1 ) == '\\\\' && is_special_char ( name ) )		5435395	0					
ANR	5435507	Condition	* ( name - 1 ) == '\\\\' && is_special_char ( name )	59:6:1220:1264	5435395	0	True				
ANR	5435508	AndExpression	* ( name - 1 ) == '\\\\' && is_special_char ( name )		5435395	0		&&			
ANR	5435509	EqualityExpression	* ( name - 1 ) == '\\\\'		5435395	0		==			
ANR	5435510	UnaryOperationExpression	* ( name - 1 )		5435395	0					
ANR	5435511	UnaryOperator	*		5435395	0					
ANR	5435512	AdditiveExpression	name - 1		5435395	1		-			
ANR	5435513	Identifier	name		5435395	0					
ANR	5435514	PrimaryExpression	1		5435395	1					
ANR	5435515	PrimaryExpression	'\\\\'		5435395	1					
ANR	5435516	CallExpression	is_special_char ( name )		5435395	1					
ANR	5435517	Callee	is_special_char		5435395	0					
ANR	5435518	Identifier	is_special_char		5435395	0					
ANR	5435519	ArgumentList	name		5435395	1					
ANR	5435520	Argument	name		5435395	0					
ANR	5435521	Identifier	name		5435395	0					
ANR	5435522	CompoundStatement		23:53:445:445	5435395	1					
ANR	5435523	ExpressionStatement	* name = '_'	60:3:1272:1283	5435395	0	True				
ANR	5435524	AssignmentExpression	* name = '_'		5435395	0		=			
ANR	5435525	UnaryOperationExpression	* name		5435395	0					
ANR	5435526	UnaryOperator	*		5435395	0					
ANR	5435527	Identifier	name		5435395	1					
ANR	5435528	PrimaryExpression	'_'		5435395	1					
ANR	5435529	ExpressionStatement	* ( name - 1 ) = '_'	61:3:1288:1305	5435395	1	True				
ANR	5435530	AssignmentExpression	* ( name - 1 ) = '_'		5435395	0		=			
ANR	5435531	UnaryOperationExpression	* ( name - 1 )		5435395	0					
ANR	5435532	UnaryOperator	*		5435395	0					
ANR	5435533	AdditiveExpression	name - 1		5435395	1		-			
ANR	5435534	Identifier	name		5435395	0					
ANR	5435535	PrimaryExpression	1		5435395	1					
ANR	5435536	PrimaryExpression	'_'		5435395	1					
ANR	5435537	IfStatement	if ( * name == '\\\\' )		5435395	1					
ANR	5435538	Condition	* name == '\\\\'	63:6:1317:1329	5435395	0	True				
ANR	5435539	EqualityExpression	* name == '\\\\'		5435395	0		==			
ANR	5435540	UnaryOperationExpression	* name		5435395	0					
ANR	5435541	UnaryOperator	*		5435395	0					
ANR	5435542	Identifier	name		5435395	1					
ANR	5435543	PrimaryExpression	'\\\\'		5435395	1					
ANR	5435544	CompoundStatement		27:21:510:510	5435395	1					
ANR	5435545	ExpressionStatement	* name = '_'	64:3:1337:1348	5435395	0	True				
ANR	5435546	AssignmentExpression	* name = '_'		5435395	0		=			
ANR	5435547	UnaryOperationExpression	* name		5435395	0					
ANR	5435548	UnaryOperator	*		5435395	0					
ANR	5435549	Identifier	name		5435395	1					
ANR	5435550	PrimaryExpression	'_'		5435395	1					
ANR	5435551	ExpressionStatement	name --	66:2:1356:1362	5435395	2	True				
ANR	5435552	PostIncDecOperationExpression	name --		5435395	0					
ANR	5435553	Identifier	name		5435395	0					
ANR	5435554	IncDec	--		5435395	1					
ANR	5435555	ExpressionStatement	i --	67:2:1366:1369	5435395	3	True				
ANR	5435556	PostIncDecOperationExpression	i --		5435395	0					
ANR	5435557	Identifier	i		5435395	0					
ANR	5435558	IncDec	--		5435395	1					
ANR	5435559	IfStatement	if ( * name == '\\\\' )		5435395	7					
ANR	5435560	Condition	* name == '\\\\'	69:5:1379:1391	5435395	0	True				
ANR	5435561	EqualityExpression	* name == '\\\\'		5435395	0		==			
ANR	5435562	UnaryOperationExpression	* name		5435395	0					
ANR	5435563	UnaryOperator	*		5435395	0					
ANR	5435564	Identifier	name		5435395	1					
ANR	5435565	PrimaryExpression	'\\\\'		5435395	1					
ANR	5435566	CompoundStatement		33:20:572:572	5435395	1					
ANR	5435567	ExpressionStatement	* name = '_'	70:2:1398:1409	5435395	0	True				
ANR	5435568	AssignmentExpression	* name = '_'		5435395	0		=			
ANR	5435569	UnaryOperationExpression	* name		5435395	0					
ANR	5435570	UnaryOperator	*		5435395	0					
ANR	5435571	Identifier	name		5435395	1					
ANR	5435572	PrimaryExpression	'_'		5435395	1					
ANR	5435573	ExpressionStatement	len = strlen ( name )	73:1:1461:1480	5435395	8	True				
ANR	5435574	AssignmentExpression	len = strlen ( name )		5435395	0		=			
ANR	5435575	Identifier	len		5435395	0					
ANR	5435576	CallExpression	strlen ( name )		5435395	1					
ANR	5435577	Callee	strlen		5435395	0					
ANR	5435578	Identifier	strlen		5435395	0					
ANR	5435579	ArgumentList	name		5435395	1					
ANR	5435580	Argument	name		5435395	0					
ANR	5435581	Identifier	name		5435395	0					
ANR	5435582	ForStatement	for ( ; len > 0 && * ( name + len - 1 ) == '_' ; len -- )		5435395	9					
ANR	5435583	Condition	len > 0 && * ( name + len - 1 ) == '_'	74:8:1490:1524	5435395	0	True				
ANR	5435584	AndExpression	len > 0 && * ( name + len - 1 ) == '_'		5435395	0		&&			
ANR	5435585	RelationalExpression	len > 0		5435395	0		>			
ANR	5435586	Identifier	len		5435395	0					
ANR	5435587	PrimaryExpression	0		5435395	1					
ANR	5435588	EqualityExpression	* ( name + len - 1 ) == '_'		5435395	1		==			
ANR	5435589	UnaryOperationExpression	* ( name + len - 1 )		5435395	0					
ANR	5435590	UnaryOperator	*		5435395	0					
ANR	5435591	AdditiveExpression	name + len - 1		5435395	1		+			
ANR	5435592	Identifier	name		5435395	0					
ANR	5435593	AdditiveExpression	len - 1		5435395	1		-			
ANR	5435594	Identifier	len		5435395	0					
ANR	5435595	PrimaryExpression	1		5435395	1					
ANR	5435596	PrimaryExpression	'_'		5435395	1					
ANR	5435597	PostIncDecOperationExpression	len --	74:45:1527:1531	5435395	1	True				
ANR	5435598	Identifier	len		5435395	0					
ANR	5435599	IncDec	--		5435395	1					
ANR	5435600	CompoundStatement		38:52:712:712	5435395	2					
ANR	5435601	ExpressionStatement		75:2:1538:1538	5435395	0	True				
ANR	5435602	IfStatement	if ( ! len )		5435395	10					
ANR	5435603	Condition	! len	77:5:1548:1551	5435395	0	True				
ANR	5435604	UnaryOperationExpression	! len		5435395	0					
ANR	5435605	UnaryOperator	!		5435395	0					
ANR	5435606	Identifier	len		5435395	1					
ANR	5435607	CompoundStatement		41:11:732:732	5435395	1					
ANR	5435608	ReturnStatement	return r_name_check ( oname ) ;	78:2:1595:1622	5435395	0	True				
ANR	5435609	CallExpression	r_name_check ( oname )		5435395	0					
ANR	5435610	Callee	r_name_check		5435395	0					
ANR	5435611	Identifier	r_name_check		5435395	0					
ANR	5435612	ArgumentList	oname		5435395	1					
ANR	5435613	Argument	oname		5435395	0					
ANR	5435614	Identifier	oname		5435395	0					
ANR	5435615	ForStatement	"for ( i = 0 ; * ( name + i ) == '_' ; i ++ , len -- )"		5435395	11					
ANR	5435616	ForInit	i = 0 ;	80:6:1633:1638	5435395	0	True				
ANR	5435617	AssignmentExpression	i = 0		5435395	0		=			
ANR	5435618	Identifier	i		5435395	0					
ANR	5435619	PrimaryExpression	0		5435395	1					
ANR	5435620	Condition	* ( name + i ) == '_'	80:13:1640:1657	5435395	1	True				
ANR	5435621	EqualityExpression	* ( name + i ) == '_'		5435395	0		==			
ANR	5435622	UnaryOperationExpression	* ( name + i )		5435395	0					
ANR	5435623	UnaryOperator	*		5435395	0					
ANR	5435624	AdditiveExpression	name + i		5435395	1		+			
ANR	5435625	Identifier	name		5435395	0					
ANR	5435626	Identifier	i		5435395	1					
ANR	5435627	PrimaryExpression	'_'		5435395	1					
ANR	5435628	Expression	"i ++ , len --"	80:33:1660:1669	5435395	2	True				
ANR	5435629	PostIncDecOperationExpression	i ++		5435395	0					
ANR	5435630	Identifier	i		5435395	0					
ANR	5435631	IncDec	++		5435395	1					
ANR	5435632	PostIncDecOperationExpression	len --		5435395	1					
ANR	5435633	Identifier	len		5435395	0					
ANR	5435634	IncDec	--		5435395	1					
ANR	5435635	CompoundStatement		44:45:850:850	5435395	3					
ANR	5435636	ExpressionStatement		81:2:1676:1676	5435395	0	True				
ANR	5435637	ExpressionStatement	"memmove ( name , name + i , len )"	83:1:1682:1711	5435395	12	True				
ANR	5435638	CallExpression	"memmove ( name , name + i , len )"		5435395	0					
ANR	5435639	Callee	memmove		5435395	0					
ANR	5435640	Identifier	memmove		5435395	0					
ANR	5435641	ArgumentList	name		5435395	1					
ANR	5435642	Argument	name		5435395	0					
ANR	5435643	Identifier	name		5435395	0					
ANR	5435644	Argument	name + i		5435395	1					
ANR	5435645	AdditiveExpression	name + i		5435395	0		+			
ANR	5435646	Identifier	name		5435395	0					
ANR	5435647	Identifier	i		5435395	1					
ANR	5435648	Argument	len		5435395	2					
ANR	5435649	Identifier	len		5435395	0					
ANR	5435650	ExpressionStatement	* ( name + len ) = '\\0'	84:1:1714:1734	5435395	13	True				
ANR	5435651	AssignmentExpression	* ( name + len ) = '\\0'		5435395	0		=			
ANR	5435652	UnaryOperationExpression	* ( name + len )		5435395	0					
ANR	5435653	UnaryOperator	*		5435395	0					
ANR	5435654	AdditiveExpression	name + len		5435395	1		+			
ANR	5435655	Identifier	name		5435395	0					
ANR	5435656	Identifier	len		5435395	1					
ANR	5435657	PrimaryExpression	'\\0'		5435395	1					
ANR	5435658	ReturnStatement	return r_name_check ( oname ) ;	85:1:1737:1764	5435395	14	True				
ANR	5435659	CallExpression	r_name_check ( oname )		5435395	0					
ANR	5435660	Callee	r_name_check		5435395	0					
ANR	5435661	Identifier	r_name_check		5435395	0					
ANR	5435662	ArgumentList	oname		5435395	1					
ANR	5435663	Argument	oname		5435395	0					
ANR	5435664	Identifier	oname		5435395	0					
ANR	5435665	ReturnType	R_API int		5435395	1					
ANR	5435666	Identifier	r_name_filter		5435395	2					
ANR	5435667	ParameterList	"char * name , int maxlen"		5435395	3					
ANR	5435668	Parameter	char * name	37:24:797:806	5435395	0	True				
ANR	5435669	ParameterType	char *		5435395	0					
ANR	5435670	Identifier	name		5435395	1					
ANR	5435671	Parameter	int maxlen	37:36:809:818	5435395	1	True				
ANR	5435672	ParameterType	int		5435395	0					
ANR	5435673	Identifier	maxlen		5435395	1					
ANR	5435674	CFGEntryNode	ENTRY		5435395		True				
ANR	5435675	CFGExitNode	EXIT		5435395		True				
ANR	5435676	Symbol	* name		5435395						
ANR	5435677	Symbol	* ( name + i )		5435395						
ANR	5435678	Symbol	* ( name + len - 1 )		5435395						
ANR	5435679	Symbol	i		5435395						
ANR	5435680	Symbol	is_special_char		5435395						
ANR	5435681	Symbol	r_name_check		5435395						
ANR	5435682	Symbol	strlen		5435395						
ANR	5435683	Symbol	* ( name + len )		5435395						
ANR	5435684	Symbol	* ( name - 1 )		5435395						
ANR	5435685	Symbol	* i		5435395						
ANR	5435686	Symbol	len		5435395						
ANR	5435687	Symbol	oname		5435395						
ANR	5435688	Symbol	r_str_trim_head_tail		5435395						
ANR	5435689	Symbol	name		5435395						
ANR	5435690	Symbol	r_name_validate_char		5435395						
ANR	5435691	Symbol	maxlen		5435395						
ANR	5435692	Symbol	* len		5435395						
ANR	5435693	Function	r_name_filter2	88:0:1769:2003							
ANR	5435694	FunctionDef	r_name_filter2 (const char * name)		5435693	0					
ANR	5435695	CompoundStatement		88:45:1814:2003	5435693	0					
ANR	5435696	IdentifierDeclStatement	int i ;	89:1:1817:1822	5435693	0	True				
ANR	5435697	IdentifierDecl	i		5435693	0					
ANR	5435698	IdentifierDeclType	int		5435693	0					
ANR	5435699	Identifier	i		5435693	1					
ANR	5435700	WhileStatement	while ( ! IS_PRINTABLE ( * name ) )		5435693	1					
ANR	5435701	Condition	! IS_PRINTABLE ( * name )	90:8:1832:1852	5435693	0	True				
ANR	5435702	UnaryOperationExpression	! IS_PRINTABLE ( * name )		5435693	0					
ANR	5435703	UnaryOperator	!		5435693	0					
ANR	5435704	CallExpression	IS_PRINTABLE ( * name )		5435693	1					
ANR	5435705	Callee	IS_PRINTABLE		5435693	0					
ANR	5435706	Identifier	IS_PRINTABLE		5435693	0					
ANR	5435707	ArgumentList	* name		5435693	1					
ANR	5435708	Argument	* name		5435693	0					
ANR	5435709	UnaryOperationExpression	* name		5435693	0					
ANR	5435710	UnaryOperator	*		5435693	0					
ANR	5435711	Identifier	name		5435693	1					
ANR	5435712	CompoundStatement		3:31:40:40	5435693	1					
ANR	5435713	ExpressionStatement	name ++	91:2:1859:1865	5435693	0	True				
ANR	5435714	PostIncDecOperationExpression	name ++		5435693	0					
ANR	5435715	Identifier	name		5435693	0					
ANR	5435716	IncDec	++		5435693	1					
ANR	5435717	IdentifierDeclStatement	char * res = strdup ( name ) ;	93:1:1871:1896	5435693	2	True				
ANR	5435718	IdentifierDecl	* res = strdup ( name )		5435693	0					
ANR	5435719	IdentifierDeclType	char *		5435693	0					
ANR	5435720	Identifier	res		5435693	1					
ANR	5435721	AssignmentExpression	* res = strdup ( name )		5435693	2		=			
ANR	5435722	Identifier	res		5435693	0					
ANR	5435723	CallExpression	strdup ( name )		5435693	1					
ANR	5435724	Callee	strdup		5435693	0					
ANR	5435725	Identifier	strdup		5435693	0					
ANR	5435726	ArgumentList	name		5435693	1					
ANR	5435727	Argument	name		5435693	0					
ANR	5435728	Identifier	name		5435693	0					
ANR	5435729	ForStatement	for ( i = 0 ; res [ i ] ; i ++ )		5435693	3					
ANR	5435730	ForInit	i = 0 ;	94:6:1904:1909	5435693	0	True				
ANR	5435731	AssignmentExpression	i = 0		5435693	0		=			
ANR	5435732	Identifier	i		5435693	0					
ANR	5435733	PrimaryExpression	0		5435693	1					
ANR	5435734	Condition	res [ i ]	94:13:1911:1916	5435693	1	True				
ANR	5435735	ArrayIndexing	res [ i ]		5435693	0					
ANR	5435736	Identifier	res		5435693	0					
ANR	5435737	Identifier	i		5435693	1					
ANR	5435738	PostIncDecOperationExpression	i ++	94:21:1919:1921	5435693	2	True				
ANR	5435739	Identifier	i		5435693	0					
ANR	5435740	IncDec	++		5435693	1					
ANR	5435741	CompoundStatement		7:26:109:109	5435693	3					
ANR	5435742	IfStatement	if ( ! r_name_validate_char ( res [ i ] ) )		5435693	0					
ANR	5435743	Condition	! r_name_validate_char ( res [ i ] )	95:6:1932:1961	5435693	0	True				
ANR	5435744	UnaryOperationExpression	! r_name_validate_char ( res [ i ] )		5435693	0					
ANR	5435745	UnaryOperator	!		5435693	0					
ANR	5435746	CallExpression	r_name_validate_char ( res [ i ] )		5435693	1					
ANR	5435747	Callee	r_name_validate_char		5435693	0					
ANR	5435748	Identifier	r_name_validate_char		5435693	0					
ANR	5435749	ArgumentList	res [ i ]		5435693	1					
ANR	5435750	Argument	res [ i ]		5435693	0					
ANR	5435751	ArrayIndexing	res [ i ]		5435693	0					
ANR	5435752	Identifier	res		5435693	0					
ANR	5435753	Identifier	i		5435693	1					
ANR	5435754	CompoundStatement		8:38:149:149	5435693	1					
ANR	5435755	ExpressionStatement	res [ i ] = '_'	96:3:1969:1981	5435693	0	True				
ANR	5435756	AssignmentExpression	res [ i ] = '_'		5435693	0		=			
ANR	5435757	ArrayIndexing	res [ i ]		5435693	0					
ANR	5435758	Identifier	res		5435693	0					
ANR	5435759	Identifier	i		5435693	1					
ANR	5435760	PrimaryExpression	'_'		5435693	1					
ANR	5435761	ReturnStatement	return res ;	99:1:1991:2001	5435693	4	True				
ANR	5435762	Identifier	res		5435693	0					
ANR	5435763	ReturnType	R_API char *		5435693	1					
ANR	5435764	Identifier	r_name_filter2		5435693	2					
ANR	5435765	ParameterList	const char * name		5435693	3					
ANR	5435766	Parameter	const char * name	88:27:1796:1811	5435693	0	True				
ANR	5435767	ParameterType	const char *		5435693	0					
ANR	5435768	Identifier	name		5435693	1					
ANR	5435769	CFGEntryNode	ENTRY		5435693		True				
ANR	5435770	CFGExitNode	EXIT		5435693		True				
ANR	5435771	Symbol	* name		5435693						
ANR	5435772	Symbol	res		5435693						
ANR	5435773	Symbol	IS_PRINTABLE		5435693						
ANR	5435774	Symbol	* i		5435693						
ANR	5435775	Symbol	name		5435693						
ANR	5435776	Symbol	i		5435693						
ANR	5435777	Symbol	* res		5435693						
ANR	5435778	Symbol	strdup		5435693						
ANR	5435779	Symbol	r_name_validate_char		5435693						
