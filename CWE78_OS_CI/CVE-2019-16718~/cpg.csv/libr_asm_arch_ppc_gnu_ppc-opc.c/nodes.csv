command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3297842	File	data/converged/CVE-2019-16718~_radare2/libr_asm_arch_ppc_gnu_ppc-opc.c								
ANR	3297843	DeclStmt									
ANR	3297844	Decl							unsigned long	"unsigned long ( unsigned long , long , ppc_cpu_t , const char * * )"	insert_bat
ANR	3297845	DeclStmt									
ANR	3297846	Decl							long	"long ( unsigned long , ppc_cpu_t , int * )"	extract_bat
ANR	3297847	DeclStmt									
ANR	3297848	Decl							unsigned long	"unsigned long ( unsigned long , long , ppc_cpu_t , const char * * )"	insert_bba
ANR	3297849	DeclStmt									
ANR	3297850	Decl							long	"long ( unsigned long , ppc_cpu_t , int * )"	extract_bba
ANR	3297851	DeclStmt									
ANR	3297852	Decl							unsigned long	"unsigned long ( unsigned long , long , ppc_cpu_t , const char * * )"	insert_bdm
ANR	3297853	DeclStmt									
ANR	3297854	Decl							long	"long ( unsigned long , ppc_cpu_t , int * )"	extract_bdm
ANR	3297855	DeclStmt									
ANR	3297856	Decl							unsigned long	"unsigned long ( unsigned long , long , ppc_cpu_t , const char * * )"	insert_bdp
ANR	3297857	DeclStmt									
ANR	3297858	Decl							long	"long ( unsigned long , ppc_cpu_t , int * )"	extract_bdp
ANR	3297859	DeclStmt									
ANR	3297860	Decl							unsigned long	"unsigned long ( unsigned long , long , ppc_cpu_t , const char * * )"	insert_bo
ANR	3297861	DeclStmt									
ANR	3297862	Decl							long	"long ( unsigned long , ppc_cpu_t , int * )"	extract_bo
ANR	3297863	DeclStmt									
ANR	3297864	Decl							unsigned long	"unsigned long ( unsigned long , long , ppc_cpu_t , const char * * )"	insert_boe
ANR	3297865	DeclStmt									
ANR	3297866	Decl							long	"long ( unsigned long , ppc_cpu_t , int * )"	extract_boe
ANR	3297867	DeclStmt									
ANR	3297868	Decl							unsigned long	"unsigned long ( unsigned long , long , ppc_cpu_t , const char * * )"	insert_fxm
ANR	3297869	DeclStmt									
ANR	3297870	Decl							long	"long ( unsigned long , ppc_cpu_t , int * )"	extract_fxm
ANR	3297871	DeclStmt									
ANR	3297872	Decl							unsigned long	"unsigned long ( unsigned long , long , ppc_cpu_t , const char * * )"	insert_mbe
ANR	3297873	DeclStmt									
ANR	3297874	Decl							long	"long ( unsigned long , ppc_cpu_t , int * )"	extract_mbe
ANR	3297875	DeclStmt									
ANR	3297876	Decl							unsigned long	"unsigned long ( unsigned long , long , ppc_cpu_t , const char * * )"	insert_mb6
ANR	3297877	DeclStmt									
ANR	3297878	Decl							long	"long ( unsigned long , ppc_cpu_t , int * )"	extract_mb6
ANR	3297879	DeclStmt									
ANR	3297880	Decl							long	"long ( unsigned long , ppc_cpu_t , int * )"	extract_nb
ANR	3297881	DeclStmt									
ANR	3297882	Decl							unsigned long	"unsigned long ( unsigned long , long , ppc_cpu_t , const char * * )"	insert_nsi
ANR	3297883	DeclStmt									
ANR	3297884	Decl							long	"long ( unsigned long , ppc_cpu_t , int * )"	extract_nsi
ANR	3297885	DeclStmt									
ANR	3297886	Decl							unsigned long	"unsigned long ( unsigned long , long , ppc_cpu_t , const char * * )"	insert_ral
ANR	3297887	DeclStmt									
ANR	3297888	Decl							unsigned long	"unsigned long ( unsigned long , long , ppc_cpu_t , const char * * )"	insert_ram
ANR	3297889	DeclStmt									
ANR	3297890	Decl							unsigned long	"unsigned long ( unsigned long , long , ppc_cpu_t , const char * * )"	insert_raq
ANR	3297891	DeclStmt									
ANR	3297892	Decl							unsigned long	"unsigned long ( unsigned long , long , ppc_cpu_t , const char * * )"	insert_ras
ANR	3297893	DeclStmt									
ANR	3297894	Decl							unsigned long	"unsigned long ( unsigned long , long , ppc_cpu_t , const char * * )"	insert_rbs
ANR	3297895	DeclStmt									
ANR	3297896	Decl							long	"long ( unsigned long , ppc_cpu_t , int * )"	extract_rbs
ANR	3297897	DeclStmt									
ANR	3297898	Decl							unsigned long	"unsigned long ( unsigned long , long , ppc_cpu_t , const char * * )"	insert_sh6
ANR	3297899	DeclStmt									
ANR	3297900	Decl							long	"long ( unsigned long , ppc_cpu_t , int * )"	extract_sh6
ANR	3297901	DeclStmt									
ANR	3297902	Decl							unsigned long	"unsigned long ( unsigned long , long , ppc_cpu_t , const char * * )"	insert_spr
ANR	3297903	DeclStmt									
ANR	3297904	Decl							long	"long ( unsigned long , ppc_cpu_t , int * )"	extract_spr
ANR	3297905	DeclStmt									
ANR	3297906	Decl							unsigned long	"unsigned long ( unsigned long , long , ppc_cpu_t , const char * * )"	insert_sprg
ANR	3297907	DeclStmt									
ANR	3297908	Decl							long	"long ( unsigned long , ppc_cpu_t , int * )"	extract_sprg
ANR	3297909	DeclStmt									
ANR	3297910	Decl							unsigned long	"unsigned long ( unsigned long , long , ppc_cpu_t , const char * * )"	insert_tbr
ANR	3297911	DeclStmt									
ANR	3297912	Decl							long	"long ( unsigned long , ppc_cpu_t , int * )"	extract_tbr
ANR	3297913	DeclStmt									
ANR	3297914	Decl							unsigned long	"unsigned long ( unsigned long , long , ppc_cpu_t , const char * * )"	insert_xt6
ANR	3297915	DeclStmt									
ANR	3297916	Decl							long	"long ( unsigned long , ppc_cpu_t , int * )"	extract_xt6
ANR	3297917	DeclStmt									
ANR	3297918	Decl							unsigned long	"unsigned long ( unsigned long , long , ppc_cpu_t , const char * * )"	insert_xa6
ANR	3297919	DeclStmt									
ANR	3297920	Decl							long	"long ( unsigned long , ppc_cpu_t , int * )"	extract_xa6
ANR	3297921	DeclStmt									
ANR	3297922	Decl							unsigned long	"unsigned long ( unsigned long , long , ppc_cpu_t , const char * * )"	insert_xb6
ANR	3297923	DeclStmt									
ANR	3297924	Decl							long	"long ( unsigned long , ppc_cpu_t , int * )"	extract_xb6
ANR	3297925	DeclStmt									
ANR	3297926	Decl							unsigned long	"unsigned long ( unsigned long , long , ppc_cpu_t , const char * * )"	insert_xb6s
ANR	3297927	DeclStmt									
ANR	3297928	Decl							long	"long ( unsigned long , ppc_cpu_t , int * )"	extract_xb6s
ANR	3297929	DeclStmt									
ANR	3297930	Decl							const struct powerpc_operand	const struct powerpc_operand [ ]	powerpc_operands
ANR	3297931	DeclStmt									
ANR	3297932	Decl							const unsigned int	const unsigned int	num_powerpc_operands
ANR	3297933	Function	extract_bat	655:0:23342:23536							
ANR	3297934	FunctionDef	"extract_bat (unsigned long insn , ppc_cpu_t dialect ATTRIBUTE_UNUSED , int * invalid)"		3297933	0					
ANR	3297935	CompoundStatement		659:0:23449:23536	3297933	0					
ANR	3297936	IfStatement	if ( ( ( insn >> 21 ) & 0x1f ) != ( ( insn >> 16 ) & 0x1f ) )		3297933	0					
ANR	3297937	Condition	( ( insn >> 21 ) & 0x1f ) != ( ( insn >> 16 ) & 0x1f )	660:5:23456:23501	3297933	0	True				
ANR	3297938	EqualityExpression	( ( insn >> 21 ) & 0x1f ) != ( ( insn >> 16 ) & 0x1f )		3297933	0		!=			
ANR	3297939	BitAndExpression	( insn >> 21 ) & 0x1f		3297933	0		&			
ANR	3297940	ShiftExpression	insn >> 21		3297933	0		>>			
ANR	3297941	Identifier	insn		3297933	0					
ANR	3297942	PrimaryExpression	21		3297933	1					
ANR	3297943	PrimaryExpression	0x1f		3297933	1					
ANR	3297944	BitAndExpression	( insn >> 16 ) & 0x1f		3297933	1		&			
ANR	3297945	ShiftExpression	insn >> 16		3297933	0		>>			
ANR	3297946	Identifier	insn		3297933	0					
ANR	3297947	PrimaryExpression	16		3297933	1					
ANR	3297948	PrimaryExpression	0x1f		3297933	1					
ANR	3297949	CompoundStatement		2:53:54:54	3297933	1					
ANR	3297950	ExpressionStatement	* invalid = 1	661:2:23508:23520	3297933	0	True				
ANR	3297951	AssignmentExpression	* invalid = 1		3297933	0		=			
ANR	3297952	UnaryOperationExpression	* invalid		3297933	0					
ANR	3297953	UnaryOperator	*		3297933	0					
ANR	3297954	Identifier	invalid		3297933	1					
ANR	3297955	PrimaryExpression	1		3297933	1					
ANR	3297956	ReturnStatement	return 0 ;	663:1:23526:23534	3297933	1	True				
ANR	3297957	PrimaryExpression	0		3297933	0					
ANR	3297958	ReturnType	static long		3297933	1					
ANR	3297959	Identifier	extract_bat		3297933	2					
ANR	3297960	ParameterList	"unsigned long insn , ppc_cpu_t dialect ATTRIBUTE_UNUSED , int * invalid"		3297933	3					
ANR	3297961	Parameter	unsigned long insn	656:13:23367:23384	3297933	0	True				
ANR	3297962	ParameterType	unsigned long		3297933	0					
ANR	3297963	Identifier	insn		3297933	1					
ANR	3297964	Parameter	ppc_cpu_t dialect ATTRIBUTE_UNUSED	657:6:23393:23426	3297933	1	True				
ANR	3297965	ParameterType	ppc_cpu_t dialect		3297933	0					
ANR	3297966	Identifier	ATTRIBUTE_UNUSED		3297933	1					
ANR	3297967	Parameter	int * invalid	658:6:23435:23446	3297933	2	True				
ANR	3297968	ParameterType	int *		3297933	0					
ANR	3297969	Identifier	invalid		3297933	1					
ANR	3297970	CFGEntryNode	ENTRY		3297933		True				
ANR	3297971	CFGExitNode	EXIT		3297933		True				
ANR	3297972	Symbol	insn		3297933						
ANR	3297973	Symbol	ATTRIBUTE_UNUSED		3297933						
ANR	3297974	Symbol	invalid		3297933						
ANR	3297975	Symbol	* invalid		3297933						
ANR	3297976	Function	extract_bba	681:0:24054:24248							
ANR	3297977	FunctionDef	"extract_bba (unsigned long insn , ppc_cpu_t dialect ATTRIBUTE_UNUSED , int * invalid)"		3297976	0					
ANR	3297978	CompoundStatement		685:0:24161:24248	3297976	0					
ANR	3297979	IfStatement	if ( ( ( insn >> 16 ) & 0x1f ) != ( ( insn >> 11 ) & 0x1f ) )		3297976	0					
ANR	3297980	Condition	( ( insn >> 16 ) & 0x1f ) != ( ( insn >> 11 ) & 0x1f )	686:5:24168:24213	3297976	0	True				
ANR	3297981	EqualityExpression	( ( insn >> 16 ) & 0x1f ) != ( ( insn >> 11 ) & 0x1f )		3297976	0		!=			
ANR	3297982	BitAndExpression	( insn >> 16 ) & 0x1f		3297976	0		&			
ANR	3297983	ShiftExpression	insn >> 16		3297976	0		>>			
ANR	3297984	Identifier	insn		3297976	0					
ANR	3297985	PrimaryExpression	16		3297976	1					
ANR	3297986	PrimaryExpression	0x1f		3297976	1					
ANR	3297987	BitAndExpression	( insn >> 11 ) & 0x1f		3297976	1		&			
ANR	3297988	ShiftExpression	insn >> 11		3297976	0		>>			
ANR	3297989	Identifier	insn		3297976	0					
ANR	3297990	PrimaryExpression	11		3297976	1					
ANR	3297991	PrimaryExpression	0x1f		3297976	1					
ANR	3297992	CompoundStatement		2:53:54:54	3297976	1					
ANR	3297993	ExpressionStatement	* invalid = 1	687:2:24220:24232	3297976	0	True				
ANR	3297994	AssignmentExpression	* invalid = 1		3297976	0		=			
ANR	3297995	UnaryOperationExpression	* invalid		3297976	0					
ANR	3297996	UnaryOperator	*		3297976	0					
ANR	3297997	Identifier	invalid		3297976	1					
ANR	3297998	PrimaryExpression	1		3297976	1					
ANR	3297999	ReturnStatement	return 0 ;	689:1:24238:24246	3297976	1	True				
ANR	3298000	PrimaryExpression	0		3297976	0					
ANR	3298001	ReturnType	static long		3297976	1					
ANR	3298002	Identifier	extract_bba		3297976	2					
ANR	3298003	ParameterList	"unsigned long insn , ppc_cpu_t dialect ATTRIBUTE_UNUSED , int * invalid"		3297976	3					
ANR	3298004	Parameter	unsigned long insn	682:13:24079:24096	3297976	0	True				
ANR	3298005	ParameterType	unsigned long		3297976	0					
ANR	3298006	Identifier	insn		3297976	1					
ANR	3298007	Parameter	ppc_cpu_t dialect ATTRIBUTE_UNUSED	683:6:24105:24138	3297976	1	True				
ANR	3298008	ParameterType	ppc_cpu_t dialect		3297976	0					
ANR	3298009	Identifier	ATTRIBUTE_UNUSED		3297976	1					
ANR	3298010	Parameter	int * invalid	684:6:24147:24158	3297976	2	True				
ANR	3298011	ParameterType	int *		3297976	0					
ANR	3298012	Identifier	invalid		3297976	1					
ANR	3298013	CFGEntryNode	ENTRY		3297976		True				
ANR	3298014	CFGExitNode	EXIT		3297976		True				
ANR	3298015	Symbol	insn		3297976						
ANR	3298016	Symbol	ATTRIBUTE_UNUSED		3297976						
ANR	3298017	Symbol	invalid		3297976						
ANR	3298018	Symbol	* invalid		3297976						
ANR	3298019	Function	extract_bdm	732:0:25756:26174							
ANR	3298020	FunctionDef	"extract_bdm (unsigned long insn , ppc_cpu_t dialect , int * invalid)"		3298019	0					
ANR	3298021	CompoundStatement		736:0:25846:26174	3298019	0					
ANR	3298022	IfStatement	if ( ( dialect & PPC_OPCODE_POWER4 ) == 0 )		3298019	0					
ANR	3298023	Condition	( dialect & PPC_OPCODE_POWER4 ) == 0	737:6:25854:25887	3298019	0	True				
ANR	3298024	EqualityExpression	( dialect & PPC_OPCODE_POWER4 ) == 0		3298019	0		==			
ANR	3298025	BitAndExpression	dialect & PPC_OPCODE_POWER4		3298019	0		&			
ANR	3298026	Identifier	dialect		3298019	0					
ANR	3298027	Identifier	PPC_OPCODE_POWER4		3298019	1					
ANR	3298028	PrimaryExpression	0		3298019	1					
ANR	3298029	CompoundStatement		3:4:47:47	3298019	1					
ANR	3298030	IfStatement	if ( ( ( insn & ( 1 << 21 ) ) == 0 ) != ( ( insn & ( 1 << 15 ) ) == 0 ) )		3298019	0					
ANR	3298031	Condition	( ( insn & ( 1 << 21 ) ) == 0 ) != ( ( insn & ( 1 << 15 ) ) == 0 )	739:7:25903:25956	3298019	0	True				
ANR	3298032	EqualityExpression	( ( insn & ( 1 << 21 ) ) == 0 ) != ( ( insn & ( 1 << 15 ) ) == 0 )		3298019	0		!=			
ANR	3298033	EqualityExpression	( insn & ( 1 << 21 ) ) == 0		3298019	0		==			
ANR	3298034	BitAndExpression	insn & ( 1 << 21 )		3298019	0		&			
ANR	3298035	Identifier	insn		3298019	0					
ANR	3298036	ShiftExpression	1 << 21		3298019	1		<<			
ANR	3298037	PrimaryExpression	1		3298019	0					
ANR	3298038	PrimaryExpression	21		3298019	1					
ANR	3298039	PrimaryExpression	0		3298019	1					
ANR	3298040	EqualityExpression	( insn & ( 1 << 15 ) ) == 0		3298019	1		==			
ANR	3298041	BitAndExpression	insn & ( 1 << 15 )		3298019	0		&			
ANR	3298042	Identifier	insn		3298019	0					
ANR	3298043	ShiftExpression	1 << 15		3298019	1		<<			
ANR	3298044	PrimaryExpression	1		3298019	0					
ANR	3298045	PrimaryExpression	15		3298019	1					
ANR	3298046	PrimaryExpression	0		3298019	1					
ANR	3298047	CompoundStatement		4:63:112:112	3298019	1					
ANR	3298048	ExpressionStatement	* invalid = 1	740:4:25965:25977	3298019	0	True				
ANR	3298049	AssignmentExpression	* invalid = 1		3298019	0		=			
ANR	3298050	UnaryOperationExpression	* invalid		3298019	0					
ANR	3298051	UnaryOperator	*		3298019	0					
ANR	3298052	Identifier	invalid		3298019	1					
ANR	3298053	PrimaryExpression	1		3298019	1					
ANR	3298054	ElseStatement	else		3298019	0					
ANR	3298055	CompoundStatement		9:4:154:154	3298019	0					
ANR	3298056	IfStatement	if ( ( insn & ( 0x17 << 21 ) ) != ( 0x06 << 21 ) && ( insn & ( 0x1d << 21 ) ) != ( 0x18 << 21 ) )		3298019	0					
ANR	3298057	Condition	( insn & ( 0x17 << 21 ) ) != ( 0x06 << 21 ) && ( insn & ( 0x1d << 21 ) ) != ( 0x18 << 21 )	745:9:26012:26089	3298019	0	True				
ANR	3298058	AndExpression	( insn & ( 0x17 << 21 ) ) != ( 0x06 << 21 ) && ( insn & ( 0x1d << 21 ) ) != ( 0x18 << 21 )		3298019	0		&&			
ANR	3298059	EqualityExpression	( insn & ( 0x17 << 21 ) ) != ( 0x06 << 21 )		3298019	0		!=			
ANR	3298060	BitAndExpression	insn & ( 0x17 << 21 )		3298019	0		&			
ANR	3298061	Identifier	insn		3298019	0					
ANR	3298062	ShiftExpression	0x17 << 21		3298019	1		<<			
ANR	3298063	PrimaryExpression	0x17		3298019	0					
ANR	3298064	PrimaryExpression	21		3298019	1					
ANR	3298065	ShiftExpression	0x06 << 21		3298019	1		<<			
ANR	3298066	PrimaryExpression	0x06		3298019	0					
ANR	3298067	PrimaryExpression	21		3298019	1					
ANR	3298068	EqualityExpression	( insn & ( 0x1d << 21 ) ) != ( 0x18 << 21 )		3298019	1		!=			
ANR	3298069	BitAndExpression	insn & ( 0x1d << 21 )		3298019	0		&			
ANR	3298070	Identifier	insn		3298019	0					
ANR	3298071	ShiftExpression	0x1d << 21		3298019	1		<<			
ANR	3298072	PrimaryExpression	0x1d		3298019	0					
ANR	3298073	PrimaryExpression	21		3298019	1					
ANR	3298074	ShiftExpression	0x18 << 21		3298019	1		<<			
ANR	3298075	PrimaryExpression	0x18		3298019	0					
ANR	3298076	PrimaryExpression	21		3298019	1					
ANR	3298077	CompoundStatement		10:89:245:245	3298019	1					
ANR	3298078	ExpressionStatement	* invalid = 1	746:6:26100:26112	3298019	0	True				
ANR	3298079	AssignmentExpression	* invalid = 1		3298019	0		=			
ANR	3298080	UnaryOperationExpression	* invalid		3298019	0					
ANR	3298081	UnaryOperator	*		3298019	0					
ANR	3298082	Identifier	invalid		3298019	1					
ANR	3298083	PrimaryExpression	1		3298019	1					
ANR	3298084	ReturnStatement	return ( ( insn & 0xfffc ) ^ 0x8000 ) - 0x8000 ;	750:2:26130:26172	3298019	1	True				
ANR	3298085	AdditiveExpression	( ( insn & 0xfffc ) ^ 0x8000 ) - 0x8000		3298019	0		-			
ANR	3298086	ExclusiveOrExpression	( insn & 0xfffc ) ^ 0x8000		3298019	0		^			
ANR	3298087	BitAndExpression	insn & 0xfffc		3298019	0		&			
ANR	3298088	Identifier	insn		3298019	0					
ANR	3298089	PrimaryExpression	0xfffc		3298019	1					
ANR	3298090	PrimaryExpression	0x8000		3298019	1					
ANR	3298091	PrimaryExpression	0x8000		3298019	1					
ANR	3298092	ReturnType	static long		3298019	1					
ANR	3298093	Identifier	extract_bdm		3298019	2					
ANR	3298094	ParameterList	"unsigned long insn , ppc_cpu_t dialect , int * invalid"		3298019	3					
ANR	3298095	Parameter	unsigned long insn	733:13:25781:25798	3298019	0	True				
ANR	3298096	ParameterType	unsigned long		3298019	0					
ANR	3298097	Identifier	insn		3298019	1					
ANR	3298098	Parameter	ppc_cpu_t dialect	734:6:25807:25823	3298019	1	True				
ANR	3298099	ParameterType	ppc_cpu_t		3298019	0					
ANR	3298100	Identifier	dialect		3298019	1					
ANR	3298101	Parameter	int * invalid	735:6:25832:25843	3298019	2	True				
ANR	3298102	ParameterType	int *		3298019	0					
ANR	3298103	Identifier	invalid		3298019	1					
ANR	3298104	CFGEntryNode	ENTRY		3298019		True				
ANR	3298105	CFGExitNode	EXIT		3298019		True				
ANR	3298106	Symbol	insn		3298019						
ANR	3298107	Symbol	dialect		3298019						
ANR	3298108	Symbol	PPC_OPCODE_POWER4		3298019						
ANR	3298109	Symbol	invalid		3298019						
ANR	3298110	Symbol	* invalid		3298019						
ANR	3298111	Function	extract_bdp	780:0:26803:27221							
ANR	3298112	FunctionDef	"extract_bdp (unsigned long insn , ppc_cpu_t dialect , int * invalid)"		3298111	0					
ANR	3298113	CompoundStatement		784:0:26893:27221	3298111	0					
ANR	3298114	IfStatement	if ( ( dialect & PPC_OPCODE_POWER4 ) == 0 )		3298111	0					
ANR	3298115	Condition	( dialect & PPC_OPCODE_POWER4 ) == 0	785:6:26901:26934	3298111	0	True				
ANR	3298116	EqualityExpression	( dialect & PPC_OPCODE_POWER4 ) == 0		3298111	0		==			
ANR	3298117	BitAndExpression	dialect & PPC_OPCODE_POWER4		3298111	0		&			
ANR	3298118	Identifier	dialect		3298111	0					
ANR	3298119	Identifier	PPC_OPCODE_POWER4		3298111	1					
ANR	3298120	PrimaryExpression	0		3298111	1					
ANR	3298121	CompoundStatement		3:4:47:47	3298111	1					
ANR	3298122	IfStatement	if ( ( ( insn & ( 1 << 21 ) ) == 0 ) == ( ( insn & ( 1 << 15 ) ) == 0 ) )		3298111	0					
ANR	3298123	Condition	( ( insn & ( 1 << 21 ) ) == 0 ) == ( ( insn & ( 1 << 15 ) ) == 0 )	787:7:26950:27003	3298111	0	True				
ANR	3298124	EqualityExpression	( ( insn & ( 1 << 21 ) ) == 0 ) == ( ( insn & ( 1 << 15 ) ) == 0 )		3298111	0		==			
ANR	3298125	EqualityExpression	( insn & ( 1 << 21 ) ) == 0		3298111	0		==			
ANR	3298126	BitAndExpression	insn & ( 1 << 21 )		3298111	0		&			
ANR	3298127	Identifier	insn		3298111	0					
ANR	3298128	ShiftExpression	1 << 21		3298111	1		<<			
ANR	3298129	PrimaryExpression	1		3298111	0					
ANR	3298130	PrimaryExpression	21		3298111	1					
ANR	3298131	PrimaryExpression	0		3298111	1					
ANR	3298132	EqualityExpression	( insn & ( 1 << 15 ) ) == 0		3298111	1		==			
ANR	3298133	BitAndExpression	insn & ( 1 << 15 )		3298111	0		&			
ANR	3298134	Identifier	insn		3298111	0					
ANR	3298135	ShiftExpression	1 << 15		3298111	1		<<			
ANR	3298136	PrimaryExpression	1		3298111	0					
ANR	3298137	PrimaryExpression	15		3298111	1					
ANR	3298138	PrimaryExpression	0		3298111	1					
ANR	3298139	CompoundStatement		4:63:112:112	3298111	1					
ANR	3298140	ExpressionStatement	* invalid = 1	788:4:27012:27024	3298111	0	True				
ANR	3298141	AssignmentExpression	* invalid = 1		3298111	0		=			
ANR	3298142	UnaryOperationExpression	* invalid		3298111	0					
ANR	3298143	UnaryOperator	*		3298111	0					
ANR	3298144	Identifier	invalid		3298111	1					
ANR	3298145	PrimaryExpression	1		3298111	1					
ANR	3298146	ElseStatement	else		3298111	0					
ANR	3298147	CompoundStatement		9:4:154:154	3298111	0					
ANR	3298148	IfStatement	if ( ( insn & ( 0x17 << 21 ) ) != ( 0x07 << 21 ) && ( insn & ( 0x1d << 21 ) ) != ( 0x19 << 21 ) )		3298111	0					
ANR	3298149	Condition	( insn & ( 0x17 << 21 ) ) != ( 0x07 << 21 ) && ( insn & ( 0x1d << 21 ) ) != ( 0x19 << 21 )	793:9:27059:27136	3298111	0	True				
ANR	3298150	AndExpression	( insn & ( 0x17 << 21 ) ) != ( 0x07 << 21 ) && ( insn & ( 0x1d << 21 ) ) != ( 0x19 << 21 )		3298111	0		&&			
ANR	3298151	EqualityExpression	( insn & ( 0x17 << 21 ) ) != ( 0x07 << 21 )		3298111	0		!=			
ANR	3298152	BitAndExpression	insn & ( 0x17 << 21 )		3298111	0		&			
ANR	3298153	Identifier	insn		3298111	0					
ANR	3298154	ShiftExpression	0x17 << 21		3298111	1		<<			
ANR	3298155	PrimaryExpression	0x17		3298111	0					
ANR	3298156	PrimaryExpression	21		3298111	1					
ANR	3298157	ShiftExpression	0x07 << 21		3298111	1		<<			
ANR	3298158	PrimaryExpression	0x07		3298111	0					
ANR	3298159	PrimaryExpression	21		3298111	1					
ANR	3298160	EqualityExpression	( insn & ( 0x1d << 21 ) ) != ( 0x19 << 21 )		3298111	1		!=			
ANR	3298161	BitAndExpression	insn & ( 0x1d << 21 )		3298111	0		&			
ANR	3298162	Identifier	insn		3298111	0					
ANR	3298163	ShiftExpression	0x1d << 21		3298111	1		<<			
ANR	3298164	PrimaryExpression	0x1d		3298111	0					
ANR	3298165	PrimaryExpression	21		3298111	1					
ANR	3298166	ShiftExpression	0x19 << 21		3298111	1		<<			
ANR	3298167	PrimaryExpression	0x19		3298111	0					
ANR	3298168	PrimaryExpression	21		3298111	1					
ANR	3298169	CompoundStatement		10:89:245:245	3298111	1					
ANR	3298170	ExpressionStatement	* invalid = 1	794:6:27147:27159	3298111	0	True				
ANR	3298171	AssignmentExpression	* invalid = 1		3298111	0		=			
ANR	3298172	UnaryOperationExpression	* invalid		3298111	0					
ANR	3298173	UnaryOperator	*		3298111	0					
ANR	3298174	Identifier	invalid		3298111	1					
ANR	3298175	PrimaryExpression	1		3298111	1					
ANR	3298176	ReturnStatement	return ( ( insn & 0xfffc ) ^ 0x8000 ) - 0x8000 ;	798:2:27177:27219	3298111	1	True				
ANR	3298177	AdditiveExpression	( ( insn & 0xfffc ) ^ 0x8000 ) - 0x8000		3298111	0		-			
ANR	3298178	ExclusiveOrExpression	( insn & 0xfffc ) ^ 0x8000		3298111	0		^			
ANR	3298179	BitAndExpression	insn & 0xfffc		3298111	0		&			
ANR	3298180	Identifier	insn		3298111	0					
ANR	3298181	PrimaryExpression	0xfffc		3298111	1					
ANR	3298182	PrimaryExpression	0x8000		3298111	1					
ANR	3298183	PrimaryExpression	0x8000		3298111	1					
ANR	3298184	ReturnType	static long		3298111	1					
ANR	3298185	Identifier	extract_bdp		3298111	2					
ANR	3298186	ParameterList	"unsigned long insn , ppc_cpu_t dialect , int * invalid"		3298111	3					
ANR	3298187	Parameter	unsigned long insn	781:13:26828:26845	3298111	0	True				
ANR	3298188	ParameterType	unsigned long		3298111	0					
ANR	3298189	Identifier	insn		3298111	1					
ANR	3298190	Parameter	ppc_cpu_t dialect	782:6:26854:26870	3298111	1	True				
ANR	3298191	ParameterType	ppc_cpu_t		3298111	0					
ANR	3298192	Identifier	dialect		3298111	1					
ANR	3298193	Parameter	int * invalid	783:6:26879:26890	3298111	2	True				
ANR	3298194	ParameterType	int *		3298111	0					
ANR	3298195	Identifier	invalid		3298111	1					
ANR	3298196	CFGEntryNode	ENTRY		3298111		True				
ANR	3298197	CFGExitNode	EXIT		3298111		True				
ANR	3298198	Symbol	insn		3298111						
ANR	3298199	Symbol	dialect		3298111						
ANR	3298200	Symbol	PPC_OPCODE_POWER4		3298111						
ANR	3298201	Symbol	invalid		3298111						
ANR	3298202	Symbol	* invalid		3298111						
ANR	3298203	Function	valid_bo	803:0:27270:28338							
ANR	3298204	FunctionDef	"valid_bo (long value , ppc_cpu_t dialect , int extract)"		3298203	0					
ANR	3298205	CompoundStatement		805:0:27335:28338	3298203	0					
ANR	3298206	IfStatement	if ( ( dialect & PPC_OPCODE_POWER4 ) == 0 )		3298203	0					
ANR	3298207	Condition	( dialect & PPC_OPCODE_POWER4 ) == 0	806:6:27343:27376	3298203	0	True				
ANR	3298208	EqualityExpression	( dialect & PPC_OPCODE_POWER4 ) == 0		3298203	0		==			
ANR	3298209	BitAndExpression	dialect & PPC_OPCODE_POWER4		3298203	0		&			
ANR	3298210	Identifier	dialect		3298203	0					
ANR	3298211	Identifier	PPC_OPCODE_POWER4		3298203	1					
ANR	3298212	PrimaryExpression	0		3298203	1					
ANR	3298213	CompoundStatement		4:6:55:64	3298203	1					
ANR	3298214	IdentifierDeclStatement	int valid ;	808:6:27391:27400	3298203	0	True				
ANR	3298215	IdentifierDecl	valid		3298203	0					
ANR	3298216	IdentifierDeclType	int		3298203	0					
ANR	3298217	Identifier	valid		3298203	1					
ANR	3298218	SwitchStatement	switch ( value & 0x14 )		3298203	1					
ANR	3298219	Condition	value & 0x14	817:14:27601:27612	3298203	0	True				
ANR	3298220	BitAndExpression	value & 0x14		3298203	0		&			
ANR	3298221	Identifier	value		3298203	0					
ANR	3298222	PrimaryExpression	0x14		3298203	1					
ANR	3298223	CompoundStatement		14:1:280:280	3298203	1					
ANR	3298224	Label	default :	819:1:27619:27626	3298203	0	True				
ANR	3298225	Identifier	default		3298203	0					
ANR	3298226	Label	case 0 :	820:1:27629:27635	3298203	1	True				
ANR	3298227	ExpressionStatement	valid = 1	821:3:27640:27649	3298203	2	True				
ANR	3298228	AssignmentExpression	valid = 1		3298203	0		=			
ANR	3298229	Identifier	valid		3298203	0					
ANR	3298230	PrimaryExpression	1		3298203	1					
ANR	3298231	BreakStatement	break ;	822:3:27654:27659	3298203	3	True				
ANR	3298232	Label	case 0x4 :	823:1:27662:27670	3298203	4	True				
ANR	3298233	ExpressionStatement	valid = ( value & 0x2 ) == 0	824:3:27675:27701	3298203	5	True				
ANR	3298234	AssignmentExpression	valid = ( value & 0x2 ) == 0		3298203	0		=			
ANR	3298235	Identifier	valid		3298203	0					
ANR	3298236	EqualityExpression	( value & 0x2 ) == 0		3298203	1		==			
ANR	3298237	BitAndExpression	value & 0x2		3298203	0		&			
ANR	3298238	Identifier	value		3298203	0					
ANR	3298239	PrimaryExpression	0x2		3298203	1					
ANR	3298240	PrimaryExpression	0		3298203	1					
ANR	3298241	BreakStatement	break ;	825:3:27706:27711	3298203	6	True				
ANR	3298242	Label	case 0x10 :	826:1:27714:27723	3298203	7	True				
ANR	3298243	ExpressionStatement	valid = ( value & 0x8 ) == 0	827:3:27728:27754	3298203	8	True				
ANR	3298244	AssignmentExpression	valid = ( value & 0x8 ) == 0		3298203	0		=			
ANR	3298245	Identifier	valid		3298203	0					
ANR	3298246	EqualityExpression	( value & 0x8 ) == 0		3298203	1		==			
ANR	3298247	BitAndExpression	value & 0x8		3298203	0		&			
ANR	3298248	Identifier	value		3298203	0					
ANR	3298249	PrimaryExpression	0x8		3298203	1					
ANR	3298250	PrimaryExpression	0		3298203	1					
ANR	3298251	BreakStatement	break ;	828:3:27759:27764	3298203	9	True				
ANR	3298252	Label	case 0x14 :	829:1:27767:27776	3298203	10	True				
ANR	3298253	ExpressionStatement	valid = value == 0x14	830:3:27781:27802	3298203	11	True				
ANR	3298254	AssignmentExpression	valid = value == 0x14		3298203	0		=			
ANR	3298255	Identifier	valid		3298203	0					
ANR	3298256	EqualityExpression	value == 0x14		3298203	1		==			
ANR	3298257	Identifier	value		3298203	0					
ANR	3298258	PrimaryExpression	0x14		3298203	1					
ANR	3298259	BreakStatement	break ;	831:3:27807:27812	3298203	12	True				
ANR	3298260	IfStatement	if ( valid || ( dialect & PPC_OPCODE_ANY ) == 0 || ! extract )		3298203	2					
ANR	3298261	Condition	valid || ( dialect & PPC_OPCODE_ANY ) == 0 || ! extract	834:5:27895:27946	3298203	0	True				
ANR	3298262	OrExpression	valid || ( dialect & PPC_OPCODE_ANY ) == 0 || ! extract		3298203	0		||			
ANR	3298263	Identifier	valid		3298203	0					
ANR	3298264	OrExpression	( dialect & PPC_OPCODE_ANY ) == 0 || ! extract		3298203	1		||			
ANR	3298265	EqualityExpression	( dialect & PPC_OPCODE_ANY ) == 0		3298203	0		==			
ANR	3298266	BitAndExpression	dialect & PPC_OPCODE_ANY		3298203	0		&			
ANR	3298267	Identifier	dialect		3298203	0					
ANR	3298268	Identifier	PPC_OPCODE_ANY		3298203	1					
ANR	3298269	PrimaryExpression	0		3298203	1					
ANR	3298270	UnaryOperationExpression	! extract		3298203	1					
ANR	3298271	UnaryOperator	!		3298203	0					
ANR	3298272	Identifier	extract		3298203	1					
ANR	3298273	CompoundStatement		30:59:613:613	3298203	1					
ANR	3298274	ReturnStatement	return valid ;	835:2:27953:27965	3298203	0	True				
ANR	3298275	Identifier	valid		3298203	0					
ANR	3298276	IfStatement	if ( ( value & 0x14 ) == 0 )		3298203	1					
ANR	3298277	Condition	( value & 0x14 ) == 0	851:8:28181:28199	3298203	0	True				
ANR	3298278	EqualityExpression	( value & 0x14 ) == 0		3298203	0		==			
ANR	3298279	BitAndExpression	value & 0x14		3298203	0		&			
ANR	3298280	Identifier	value		3298203	0					
ANR	3298281	PrimaryExpression	0x14		3298203	1					
ANR	3298282	PrimaryExpression	0		3298203	1					
ANR	3298283	CompoundStatement		47:29:866:866	3298203	1					
ANR	3298284	ReturnStatement	return ( value & 0x1 ) == 0 ;	852:5:28209:28234	3298203	0	True				
ANR	3298285	EqualityExpression	( value & 0x1 ) == 0		3298203	0		==			
ANR	3298286	BitAndExpression	value & 0x1		3298203	0		&			
ANR	3298287	Identifier	value		3298203	0					
ANR	3298288	PrimaryExpression	0x1		3298203	1					
ANR	3298289	PrimaryExpression	0		3298203	1					
ANR	3298290	ElseStatement	else		3298203	0					
ANR	3298291	IfStatement	if ( ( value & 0x14 ) == 0x14 )		3298203	0					
ANR	3298292	Condition	( value & 0x14 ) == 0x14	853:15:28251:28272	3298203	0	True				
ANR	3298293	EqualityExpression	( value & 0x14 ) == 0x14		3298203	0		==			
ANR	3298294	BitAndExpression	value & 0x14		3298203	0		&			
ANR	3298295	Identifier	value		3298203	0					
ANR	3298296	PrimaryExpression	0x14		3298203	1					
ANR	3298297	PrimaryExpression	0x14		3298203	1					
ANR	3298298	CompoundStatement		49:39:939:939	3298203	1					
ANR	3298299	ReturnStatement	return value == 0x14 ;	854:5:28282:28302	3298203	0	True				
ANR	3298300	EqualityExpression	value == 0x14		3298203	0		==			
ANR	3298301	Identifier	value		3298203	0					
ANR	3298302	PrimaryExpression	0x14		3298203	1					
ANR	3298303	ElseStatement	else		3298203	0					
ANR	3298304	CompoundStatement		51:11:979:979	3298203	0					
ANR	3298305	ReturnStatement	return 1 ;	856:5:28322:28330	3298203	0	True				
ANR	3298306	PrimaryExpression	1		3298203	0					
ANR	3298307	ReturnType	static int		3298203	1					
ANR	3298308	Identifier	valid_bo		3298203	2					
ANR	3298309	ParameterList	"long value , ppc_cpu_t dialect , int extract"		3298203	3					
ANR	3298310	Parameter	long value	804:10:27291:27300	3298203	0	True				
ANR	3298311	ParameterType	long		3298203	0					
ANR	3298312	Identifier	value		3298203	1					
ANR	3298313	Parameter	ppc_cpu_t dialect	804:22:27303:27319	3298203	1	True				
ANR	3298314	ParameterType	ppc_cpu_t		3298203	0					
ANR	3298315	Identifier	dialect		3298203	1					
ANR	3298316	Parameter	int extract	804:41:27322:27332	3298203	2	True				
ANR	3298317	ParameterType	int		3298203	0					
ANR	3298318	Identifier	extract		3298203	1					
ANR	3298319	CFGEntryNode	ENTRY		3298203		True				
ANR	3298320	CFGExitNode	EXIT		3298203		True				
ANR	3298321	Symbol	valid		3298203						
ANR	3298322	Symbol	PPC_OPCODE_ANY		3298203						
ANR	3298323	Symbol	dialect		3298203						
ANR	3298324	Symbol	extract		3298203						
ANR	3298325	Symbol	PPC_OPCODE_POWER4		3298203						
ANR	3298326	Symbol	value		3298203						
ANR	3298327	Function	insert_bo	863:0:28449:28693							
ANR	3298328	FunctionDef	"insert_bo (unsigned long insn , long value , ppc_cpu_t dialect , const char * * errmsg)"		3298327	0					
ANR	3298329	CompoundStatement		868:0:28565:28693	3298327	0					
ANR	3298330	IfStatement	"if ( ! valid_bo ( value , dialect , 0 ) )"		3298327	0					
ANR	3298331	Condition	"! valid_bo ( value , dialect , 0 )"	869:5:28572:28600	3298327	0	True				
ANR	3298332	UnaryOperationExpression	"! valid_bo ( value , dialect , 0 )"		3298327	0					
ANR	3298333	UnaryOperator	!		3298327	0					
ANR	3298334	CallExpression	"valid_bo ( value , dialect , 0 )"		3298327	1					
ANR	3298335	Callee	valid_bo		3298327	0					
ANR	3298336	Identifier	valid_bo		3298327	0					
ANR	3298337	ArgumentList	value		3298327	1					
ANR	3298338	Argument	value		3298327	0					
ANR	3298339	Identifier	value		3298327	0					
ANR	3298340	Argument	dialect		3298327	1					
ANR	3298341	Identifier	dialect		3298327	0					
ANR	3298342	Argument	0		3298327	2					
ANR	3298343	PrimaryExpression	0		3298327	0					
ANR	3298344	CompoundStatement		2:36:37:37	3298327	1					
ANR	3298345	ExpressionStatement	"* errmsg = _ ( ""invalid conditional option"" )"	870:2:28607:28649	3298327	0	True				
ANR	3298346	AssignmentExpression	"* errmsg = _ ( ""invalid conditional option"" )"		3298327	0		=			
ANR	3298347	UnaryOperationExpression	* errmsg		3298327	0					
ANR	3298348	UnaryOperator	*		3298327	0					
ANR	3298349	Identifier	errmsg		3298327	1					
ANR	3298350	CallExpression	"_ ( ""invalid conditional option"" )"		3298327	1					
ANR	3298351	Callee	_		3298327	0					
ANR	3298352	Identifier	_		3298327	0					
ANR	3298353	ArgumentList	"""invalid conditional option"""		3298327	1					
ANR	3298354	Argument	"""invalid conditional option"""		3298327	0					
ANR	3298355	PrimaryExpression	"""invalid conditional option"""		3298327	0					
ANR	3298356	ReturnStatement	return insn | ( ( value & 0x1f ) << 21 ) ;	872:1:28655:28691	3298327	1	True				
ANR	3298357	InclusiveOrExpression	insn | ( ( value & 0x1f ) << 21 )		3298327	0		|			
ANR	3298358	Identifier	insn		3298327	0					
ANR	3298359	ShiftExpression	( value & 0x1f ) << 21		3298327	1		<<			
ANR	3298360	BitAndExpression	value & 0x1f		3298327	0		&			
ANR	3298361	Identifier	value		3298327	0					
ANR	3298362	PrimaryExpression	0x1f		3298327	1					
ANR	3298363	PrimaryExpression	21		3298327	1					
ANR	3298364	ReturnType	static unsigned long		3298327	1					
ANR	3298365	Identifier	insert_bo		3298327	2					
ANR	3298366	ParameterList	"unsigned long insn , long value , ppc_cpu_t dialect , const char * * errmsg"		3298327	3					
ANR	3298367	Parameter	unsigned long insn	864:11:28481:28498	3298327	0	True				
ANR	3298368	ParameterType	unsigned long		3298327	0					
ANR	3298369	Identifier	insn		3298327	1					
ANR	3298370	Parameter	long value	865:4:28505:28514	3298327	1	True				
ANR	3298371	ParameterType	long		3298327	0					
ANR	3298372	Identifier	value		3298327	1					
ANR	3298373	Parameter	ppc_cpu_t dialect	866:4:28521:28537	3298327	2	True				
ANR	3298374	ParameterType	ppc_cpu_t		3298327	0					
ANR	3298375	Identifier	dialect		3298327	1					
ANR	3298376	Parameter	const char * * errmsg	867:4:28544:28562	3298327	3	True				
ANR	3298377	ParameterType	const char * *		3298327	0					
ANR	3298378	Identifier	errmsg		3298327	1					
ANR	3298379	CFGEntryNode	ENTRY		3298327		True				
ANR	3298380	CFGExitNode	EXIT		3298327		True				
ANR	3298381	Symbol	insn		3298327						
ANR	3298382	Symbol	dialect		3298327						
ANR	3298383	Symbol	errmsg		3298327						
ANR	3298384	Symbol	valid_bo		3298327						
ANR	3298385	Symbol	* errmsg		3298327						
ANR	3298386	Symbol	value		3298327						
ANR	3298387	Symbol	_		3298327						
ANR	3298388	Function	extract_bo	875:0:28696:28907							
ANR	3298389	FunctionDef	"extract_bo (unsigned long insn , ppc_cpu_t dialect , int * invalid)"		3298388	0					
ANR	3298390	CompoundStatement		879:0:28783:28907	3298388	0					
ANR	3298391	IdentifierDeclStatement	long value ;	880:2:28787:28797	3298388	0	True				
ANR	3298392	IdentifierDecl	value		3298388	0					
ANR	3298393	IdentifierDeclType	long		3298388	0					
ANR	3298394	Identifier	value		3298388	1					
ANR	3298395	ExpressionStatement	value = ( insn >> 21 ) & 0x1f	882:2:28802:28829	3298388	1	True				
ANR	3298396	AssignmentExpression	value = ( insn >> 21 ) & 0x1f		3298388	0		=			
ANR	3298397	Identifier	value		3298388	0					
ANR	3298398	BitAndExpression	( insn >> 21 ) & 0x1f		3298388	1		&			
ANR	3298399	ShiftExpression	insn >> 21		3298388	0		>>			
ANR	3298400	Identifier	insn		3298388	0					
ANR	3298401	PrimaryExpression	21		3298388	1					
ANR	3298402	PrimaryExpression	0x1f		3298388	1					
ANR	3298403	IfStatement	"if ( ! valid_bo ( value , dialect , 1 ) )"		3298388	2					
ANR	3298404	Condition	"! valid_bo ( value , dialect , 1 )"	883:6:28837:28865	3298388	0	True				
ANR	3298405	UnaryOperationExpression	"! valid_bo ( value , dialect , 1 )"		3298388	0					
ANR	3298406	UnaryOperator	!		3298388	0					
ANR	3298407	CallExpression	"valid_bo ( value , dialect , 1 )"		3298388	1					
ANR	3298408	Callee	valid_bo		3298388	0					
ANR	3298409	Identifier	valid_bo		3298388	0					
ANR	3298410	ArgumentList	value		3298388	1					
ANR	3298411	Argument	value		3298388	0					
ANR	3298412	Identifier	value		3298388	0					
ANR	3298413	Argument	dialect		3298388	1					
ANR	3298414	Identifier	dialect		3298388	0					
ANR	3298415	Argument	1		3298388	2					
ANR	3298416	PrimaryExpression	1		3298388	0					
ANR	3298417	CompoundStatement		5:37:84:84	3298388	1					
ANR	3298418	ExpressionStatement	* invalid = 1	884:3:28873:28885	3298388	0	True				
ANR	3298419	AssignmentExpression	* invalid = 1		3298388	0		=			
ANR	3298420	UnaryOperationExpression	* invalid		3298388	0					
ANR	3298421	UnaryOperator	*		3298388	0					
ANR	3298422	Identifier	invalid		3298388	1					
ANR	3298423	PrimaryExpression	1		3298388	1					
ANR	3298424	ReturnStatement	return value ;	886:2:28893:28905	3298388	3	True				
ANR	3298425	Identifier	value		3298388	0					
ANR	3298426	ReturnType	static long		3298388	1					
ANR	3298427	Identifier	extract_bo		3298388	2					
ANR	3298428	ParameterList	"unsigned long insn , ppc_cpu_t dialect , int * invalid"		3298388	3					
ANR	3298429	Parameter	unsigned long insn	876:12:28720:28737	3298388	0	True				
ANR	3298430	ParameterType	unsigned long		3298388	0					
ANR	3298431	Identifier	insn		3298388	1					
ANR	3298432	Parameter	ppc_cpu_t dialect	877:5:28745:28761	3298388	1	True				
ANR	3298433	ParameterType	ppc_cpu_t		3298388	0					
ANR	3298434	Identifier	dialect		3298388	1					
ANR	3298435	Parameter	int * invalid	878:5:28769:28780	3298388	2	True				
ANR	3298436	ParameterType	int *		3298388	0					
ANR	3298437	Identifier	invalid		3298388	1					
ANR	3298438	CFGEntryNode	ENTRY		3298388		True				
ANR	3298439	CFGExitNode	EXIT		3298388		True				
ANR	3298440	Symbol	insn		3298388						
ANR	3298441	Symbol	dialect		3298388						
ANR	3298442	Symbol	invalid		3298388						
ANR	3298443	Symbol	valid_bo		3298388						
ANR	3298444	Symbol	value		3298388						
ANR	3298445	Symbol	* invalid		3298388						
ANR	3298446	Function	insert_boe	893:0:29089:29437							
ANR	3298447	FunctionDef	"insert_boe (unsigned long insn , long value , ppc_cpu_t dialect , const char * * errmsg)"		3298446	0					
ANR	3298448	CompoundStatement		898:0:29209:29437	3298446	0					
ANR	3298449	IfStatement	"if ( ! valid_bo ( value , dialect , 0 ) )"		3298446	0					
ANR	3298450	Condition	"! valid_bo ( value , dialect , 0 )"	899:5:29216:29244	3298446	0	True				
ANR	3298451	UnaryOperationExpression	"! valid_bo ( value , dialect , 0 )"		3298446	0					
ANR	3298452	UnaryOperator	!		3298446	0					
ANR	3298453	CallExpression	"valid_bo ( value , dialect , 0 )"		3298446	1					
ANR	3298454	Callee	valid_bo		3298446	0					
ANR	3298455	Identifier	valid_bo		3298446	0					
ANR	3298456	ArgumentList	value		3298446	1					
ANR	3298457	Argument	value		3298446	0					
ANR	3298458	Identifier	value		3298446	0					
ANR	3298459	Argument	dialect		3298446	1					
ANR	3298460	Identifier	dialect		3298446	0					
ANR	3298461	Argument	0		3298446	2					
ANR	3298462	PrimaryExpression	0		3298446	0					
ANR	3298463	CompoundStatement		2:36:37:37	3298446	1					
ANR	3298464	ExpressionStatement	"* errmsg = _ ( ""invalid conditional option"" )"	900:2:29251:29293	3298446	0	True				
ANR	3298465	AssignmentExpression	"* errmsg = _ ( ""invalid conditional option"" )"		3298446	0		=			
ANR	3298466	UnaryOperationExpression	* errmsg		3298446	0					
ANR	3298467	UnaryOperator	*		3298446	0					
ANR	3298468	Identifier	errmsg		3298446	1					
ANR	3298469	CallExpression	"_ ( ""invalid conditional option"" )"		3298446	1					
ANR	3298470	Callee	_		3298446	0					
ANR	3298471	Identifier	_		3298446	0					
ANR	3298472	ArgumentList	"""invalid conditional option"""		3298446	1					
ANR	3298473	Argument	"""invalid conditional option"""		3298446	0					
ANR	3298474	PrimaryExpression	"""invalid conditional option"""		3298446	0					
ANR	3298475	ElseStatement	else		3298446	0					
ANR	3298476	IfStatement	if ( ( value & 1 ) != 0 )		3298446	0					
ANR	3298477	Condition	( value & 1 ) != 0	901:12:29307:29322	3298446	0	True				
ANR	3298478	EqualityExpression	( value & 1 ) != 0		3298446	0		!=			
ANR	3298479	BitAndExpression	value & 1		3298446	0		&			
ANR	3298480	Identifier	value		3298446	0					
ANR	3298481	PrimaryExpression	1		3298446	1					
ANR	3298482	PrimaryExpression	0		3298446	1					
ANR	3298483	CompoundStatement		4:30:115:115	3298446	1					
ANR	3298484	ExpressionStatement	"* errmsg = _ ( ""attempt to set y bit when using + or - modifier"" )"	902:2:29329:29392	3298446	0	True				
ANR	3298485	AssignmentExpression	"* errmsg = _ ( ""attempt to set y bit when using + or - modifier"" )"		3298446	0		=			
ANR	3298486	UnaryOperationExpression	* errmsg		3298446	0					
ANR	3298487	UnaryOperator	*		3298446	0					
ANR	3298488	Identifier	errmsg		3298446	1					
ANR	3298489	CallExpression	"_ ( ""attempt to set y bit when using + or - modifier"" )"		3298446	1					
ANR	3298490	Callee	_		3298446	0					
ANR	3298491	Identifier	_		3298446	0					
ANR	3298492	ArgumentList	"""attempt to set y bit when using + or - modifier"""		3298446	1					
ANR	3298493	Argument	"""attempt to set y bit when using + or - modifier"""		3298446	0					
ANR	3298494	PrimaryExpression	"""attempt to set y bit when using + or - modifier"""		3298446	0					
ANR	3298495	ReturnStatement	return insn | ( ( value & 0x1f ) << 21 ) ;	905:1:29399:29435	3298446	1	True				
ANR	3298496	InclusiveOrExpression	insn | ( ( value & 0x1f ) << 21 )		3298446	0		|			
ANR	3298497	Identifier	insn		3298446	0					
ANR	3298498	ShiftExpression	( value & 0x1f ) << 21		3298446	1		<<			
ANR	3298499	BitAndExpression	value & 0x1f		3298446	0		&			
ANR	3298500	Identifier	value		3298446	0					
ANR	3298501	PrimaryExpression	0x1f		3298446	1					
ANR	3298502	PrimaryExpression	21		3298446	1					
ANR	3298503	ReturnType	static unsigned long		3298446	1					
ANR	3298504	Identifier	insert_boe		3298446	2					
ANR	3298505	ParameterList	"unsigned long insn , long value , ppc_cpu_t dialect , const char * * errmsg"		3298446	3					
ANR	3298506	Parameter	unsigned long insn	894:12:29122:29139	3298446	0	True				
ANR	3298507	ParameterType	unsigned long		3298446	0					
ANR	3298508	Identifier	insn		3298446	1					
ANR	3298509	Parameter	long value	895:5:29147:29156	3298446	1	True				
ANR	3298510	ParameterType	long		3298446	0					
ANR	3298511	Identifier	value		3298446	1					
ANR	3298512	Parameter	ppc_cpu_t dialect	896:5:29164:29180	3298446	2	True				
ANR	3298513	ParameterType	ppc_cpu_t		3298446	0					
ANR	3298514	Identifier	dialect		3298446	1					
ANR	3298515	Parameter	const char * * errmsg	897:5:29188:29206	3298446	3	True				
ANR	3298516	ParameterType	const char * *		3298446	0					
ANR	3298517	Identifier	errmsg		3298446	1					
ANR	3298518	CFGEntryNode	ENTRY		3298446		True				
ANR	3298519	CFGExitNode	EXIT		3298446		True				
ANR	3298520	Symbol	insn		3298446						
ANR	3298521	Symbol	dialect		3298446						
ANR	3298522	Symbol	errmsg		3298446						
ANR	3298523	Symbol	valid_bo		3298446						
ANR	3298524	Symbol	* errmsg		3298446						
ANR	3298525	Symbol	value		3298446						
ANR	3298526	Symbol	_		3298446						
ANR	3298527	Function	extract_boe	908:0:29440:29661							
ANR	3298528	FunctionDef	"extract_boe (unsigned long insn , ppc_cpu_t dialect , int * invalid)"		3298527	0					
ANR	3298529	CompoundStatement		912:0:29530:29661	3298527	0					
ANR	3298530	IdentifierDeclStatement	long value ;	913:2:29534:29544	3298527	0	True				
ANR	3298531	IdentifierDecl	value		3298527	0					
ANR	3298532	IdentifierDeclType	long		3298527	0					
ANR	3298533	Identifier	value		3298527	1					
ANR	3298534	ExpressionStatement	value = ( insn >> 21 ) & 0x1f	915:2:29549:29576	3298527	1	True				
ANR	3298535	AssignmentExpression	value = ( insn >> 21 ) & 0x1f		3298527	0		=			
ANR	3298536	Identifier	value		3298527	0					
ANR	3298537	BitAndExpression	( insn >> 21 ) & 0x1f		3298527	1		&			
ANR	3298538	ShiftExpression	insn >> 21		3298527	0		>>			
ANR	3298539	Identifier	insn		3298527	0					
ANR	3298540	PrimaryExpression	21		3298527	1					
ANR	3298541	PrimaryExpression	0x1f		3298527	1					
ANR	3298542	IfStatement	"if ( ! valid_bo ( value , dialect , 1 ) )"		3298527	2					
ANR	3298543	Condition	"! valid_bo ( value , dialect , 1 )"	916:6:29584:29612	3298527	0	True				
ANR	3298544	UnaryOperationExpression	"! valid_bo ( value , dialect , 1 )"		3298527	0					
ANR	3298545	UnaryOperator	!		3298527	0					
ANR	3298546	CallExpression	"valid_bo ( value , dialect , 1 )"		3298527	1					
ANR	3298547	Callee	valid_bo		3298527	0					
ANR	3298548	Identifier	valid_bo		3298527	0					
ANR	3298549	ArgumentList	value		3298527	1					
ANR	3298550	Argument	value		3298527	0					
ANR	3298551	Identifier	value		3298527	0					
ANR	3298552	Argument	dialect		3298527	1					
ANR	3298553	Identifier	dialect		3298527	0					
ANR	3298554	Argument	1		3298527	2					
ANR	3298555	PrimaryExpression	1		3298527	0					
ANR	3298556	CompoundStatement		5:37:84:84	3298527	1					
ANR	3298557	ExpressionStatement	* invalid = 1	917:3:29620:29632	3298527	0	True				
ANR	3298558	AssignmentExpression	* invalid = 1		3298527	0		=			
ANR	3298559	UnaryOperationExpression	* invalid		3298527	0					
ANR	3298560	UnaryOperator	*		3298527	0					
ANR	3298561	Identifier	invalid		3298527	1					
ANR	3298562	PrimaryExpression	1		3298527	1					
ANR	3298563	ReturnStatement	return value & 0x1e ;	919:2:29640:29659	3298527	3	True				
ANR	3298564	BitAndExpression	value & 0x1e		3298527	0		&			
ANR	3298565	Identifier	value		3298527	0					
ANR	3298566	PrimaryExpression	0x1e		3298527	1					
ANR	3298567	ReturnType	static long		3298527	1					
ANR	3298568	Identifier	extract_boe		3298527	2					
ANR	3298569	ParameterList	"unsigned long insn , ppc_cpu_t dialect , int * invalid"		3298527	3					
ANR	3298570	Parameter	unsigned long insn	909:13:29465:29482	3298527	0	True				
ANR	3298571	ParameterType	unsigned long		3298527	0					
ANR	3298572	Identifier	insn		3298527	1					
ANR	3298573	Parameter	ppc_cpu_t dialect	910:6:29491:29507	3298527	1	True				
ANR	3298574	ParameterType	ppc_cpu_t		3298527	0					
ANR	3298575	Identifier	dialect		3298527	1					
ANR	3298576	Parameter	int * invalid	911:6:29516:29527	3298527	2	True				
ANR	3298577	ParameterType	int *		3298527	0					
ANR	3298578	Identifier	invalid		3298527	1					
ANR	3298579	CFGEntryNode	ENTRY		3298527		True				
ANR	3298580	CFGExitNode	EXIT		3298527		True				
ANR	3298581	Symbol	insn		3298527						
ANR	3298582	Symbol	dialect		3298527						
ANR	3298583	Symbol	invalid		3298527						
ANR	3298584	Symbol	valid_bo		3298527						
ANR	3298585	Symbol	value		3298527						
ANR	3298586	Symbol	* invalid		3298527						
ANR	3298587	Function	insert_fxm	924:0:29713:31115							
ANR	3298588	FunctionDef	"insert_fxm (unsigned long insn , long value , ppc_cpu_t dialect , const char * * errmsg)"		3298587	0					
ANR	3298589	CompoundStatement		929:0:29833:31115	3298587	0					
ANR	3298590	IfStatement	if ( ( insn & ( 1 << 20 ) ) != 0 )		3298587	0					
ANR	3298591	Condition	( insn & ( 1 << 20 ) ) != 0	932:6:29955:29977	3298587	0	True				
ANR	3298592	EqualityExpression	( insn & ( 1 << 20 ) ) != 0		3298587	0		!=			
ANR	3298593	BitAndExpression	insn & ( 1 << 20 )		3298587	0		&			
ANR	3298594	Identifier	insn		3298587	0					
ANR	3298595	ShiftExpression	1 << 20		3298587	1		<<			
ANR	3298596	PrimaryExpression	1		3298587	0					
ANR	3298597	PrimaryExpression	20		3298587	1					
ANR	3298598	PrimaryExpression	0		3298587	1					
ANR	3298599	CompoundStatement		5:4:150:150	3298587	1					
ANR	3298600	IfStatement	if ( value == 0 || ( value & - value ) != value )		3298587	0					
ANR	3298601	Condition	value == 0 || ( value & - value ) != value	934:10:29996:30034	3298587	0	True				
ANR	3298602	OrExpression	value == 0 || ( value & - value ) != value		3298587	0		||			
ANR	3298603	EqualityExpression	value == 0		3298587	0		==			
ANR	3298604	Identifier	value		3298587	0					
ANR	3298605	PrimaryExpression	0		3298587	1					
ANR	3298606	EqualityExpression	( value & - value ) != value		3298587	1		!=			
ANR	3298607	BitAndExpression	value & - value		3298587	0		&			
ANR	3298608	Identifier	value		3298587	0					
ANR	3298609	UnaryOperationExpression	- value		3298587	1					
ANR	3298610	UnaryOperator	-		3298587	0					
ANR	3298611	Identifier	value		3298587	1					
ANR	3298612	Identifier	value		3298587	1					
ANR	3298613	CompoundStatement		7:1:204:204	3298587	1					
ANR	3298614	ExpressionStatement	"* errmsg = _ ( ""invalid mask field"" )"	936:3:30043:30076	3298587	0	True				
ANR	3298615	AssignmentExpression	"* errmsg = _ ( ""invalid mask field"" )"		3298587	0		=			
ANR	3298616	UnaryOperationExpression	* errmsg		3298587	0					
ANR	3298617	UnaryOperator	*		3298587	0					
ANR	3298618	Identifier	errmsg		3298587	1					
ANR	3298619	CallExpression	"_ ( ""invalid mask field"" )"		3298587	1					
ANR	3298620	Callee	_		3298587	0					
ANR	3298621	Identifier	_		3298587	0					
ANR	3298622	ArgumentList	"""invalid mask field"""		3298587	1					
ANR	3298623	Argument	"""invalid mask field"""		3298587	0					
ANR	3298624	PrimaryExpression	"""invalid mask field"""		3298587	0					
ANR	3298625	ExpressionStatement	value = 0	937:3:30081:30090	3298587	1	True				
ANR	3298626	AssignmentExpression	value = 0		3298587	0		=			
ANR	3298627	Identifier	value		3298587	0					
ANR	3298628	PrimaryExpression	0		3298587	1					
ANR	3298629	ElseStatement	else		3298587	0					
ANR	3298630	IfStatement	if ( value == 0 )		3298587	0					
ANR	3298631	Condition	value == 0	945:11:30395:30404	3298587	0	True				
ANR	3298632	EqualityExpression	value == 0		3298587	0		==			
ANR	3298633	Identifier	value		3298587	0					
ANR	3298634	PrimaryExpression	0		3298587	1					
ANR	3298635	CompoundStatement		17:23:573:573	3298587	1					
ANR	3298636	ExpressionStatement		946:3:30412:30412	3298587	0	True				
ANR	3298637	ElseStatement	else		3298587	0					
ANR	3298638	IfStatement	if ( ( value & - value ) == value && ( ( dialect & PPC_OPCODE_POWER4 ) != 0 || ( ( dialect & PPC_OPCODE_ANY ) != 0 && ( insn & ( 0x3ff << 1 ) ) == 19 << 1 ) ) )		3298587	0					
ANR	3298639	Condition	( value & - value ) == value && ( ( dialect & PPC_OPCODE_POWER4 ) != 0 || ( ( dialect & PPC_OPCODE_ANY ) != 0 && ( insn & ( 0x3ff << 1 ) ) == 19 << 1 ) )	953:13:30748:30885	3298587	0	True				
ANR	3298640	AndExpression	( value & - value ) == value && ( ( dialect & PPC_OPCODE_POWER4 ) != 0 || ( ( dialect & PPC_OPCODE_ANY ) != 0 && ( insn & ( 0x3ff << 1 ) ) == 19 << 1 ) )		3298587	0		&&			
ANR	3298641	EqualityExpression	( value & - value ) == value		3298587	0		==			
ANR	3298642	BitAndExpression	value & - value		3298587	0		&			
ANR	3298643	Identifier	value		3298587	0					
ANR	3298644	UnaryOperationExpression	- value		3298587	1					
ANR	3298645	UnaryOperator	-		3298587	0					
ANR	3298646	Identifier	value		3298587	1					
ANR	3298647	Identifier	value		3298587	1					
ANR	3298648	OrExpression	( dialect & PPC_OPCODE_POWER4 ) != 0 || ( ( dialect & PPC_OPCODE_ANY ) != 0 && ( insn & ( 0x3ff << 1 ) ) == 19 << 1 )		3298587	1		||			
ANR	3298649	EqualityExpression	( dialect & PPC_OPCODE_POWER4 ) != 0		3298587	0		!=			
ANR	3298650	BitAndExpression	dialect & PPC_OPCODE_POWER4		3298587	0		&			
ANR	3298651	Identifier	dialect		3298587	0					
ANR	3298652	Identifier	PPC_OPCODE_POWER4		3298587	1					
ANR	3298653	PrimaryExpression	0		3298587	1					
ANR	3298654	AndExpression	( dialect & PPC_OPCODE_ANY ) != 0 && ( insn & ( 0x3ff << 1 ) ) == 19 << 1		3298587	1		&&			
ANR	3298655	EqualityExpression	( dialect & PPC_OPCODE_ANY ) != 0		3298587	0		!=			
ANR	3298656	BitAndExpression	dialect & PPC_OPCODE_ANY		3298587	0		&			
ANR	3298657	Identifier	dialect		3298587	0					
ANR	3298658	Identifier	PPC_OPCODE_ANY		3298587	1					
ANR	3298659	PrimaryExpression	0		3298587	1					
ANR	3298660	EqualityExpression	( insn & ( 0x3ff << 1 ) ) == 19 << 1		3298587	1		==			
ANR	3298661	BitAndExpression	insn & ( 0x3ff << 1 )		3298587	0		&			
ANR	3298662	Identifier	insn		3298587	0					
ANR	3298663	ShiftExpression	0x3ff << 1		3298587	1		<<			
ANR	3298664	PrimaryExpression	0x3ff		3298587	0					
ANR	3298665	PrimaryExpression	1		3298587	1					
ANR	3298666	ShiftExpression	19 << 1		3298587	1		<<			
ANR	3298667	PrimaryExpression	19		3298587	0					
ANR	3298668	PrimaryExpression	1		3298587	1					
ANR	3298669	CompoundStatement		25:153:1054:1054	3298587	1					
ANR	3298670	ExpressionStatement	insn |= 1 << 20	954:3:30893:30908	3298587	0	True				
ANR	3298671	AssignmentExpression	insn |= 1 << 20		3298587	0		|=			
ANR	3298672	Identifier	insn		3298587	0					
ANR	3298673	ShiftExpression	1 << 20		3298587	1		<<			
ANR	3298674	PrimaryExpression	1		3298587	0					
ANR	3298675	PrimaryExpression	20		3298587	1					
ANR	3298676	ElseStatement	else		3298587	0					
ANR	3298677	IfStatement	if ( ( insn & ( 0x3ff << 1 ) ) == 19 << 1 )		3298587	0					
ANR	3298678	Condition	( insn & ( 0x3ff << 1 ) ) == 19 << 1	957:13:30971:31002	3298587	0	True				
ANR	3298679	EqualityExpression	( insn & ( 0x3ff << 1 ) ) == 19 << 1		3298587	0		==			
ANR	3298680	BitAndExpression	insn & ( 0x3ff << 1 )		3298587	0		&			
ANR	3298681	Identifier	insn		3298587	0					
ANR	3298682	ShiftExpression	0x3ff << 1		3298587	1		<<			
ANR	3298683	PrimaryExpression	0x3ff		3298587	0					
ANR	3298684	PrimaryExpression	1		3298587	1					
ANR	3298685	ShiftExpression	19 << 1		3298587	1		<<			
ANR	3298686	PrimaryExpression	19		3298587	0					
ANR	3298687	PrimaryExpression	1		3298587	1					
ANR	3298688	CompoundStatement		29:47:1171:1171	3298587	1					
ANR	3298689	ExpressionStatement	"* errmsg = _ ( ""ignoring invalid mfcr mask"" )"	958:3:31010:31052	3298587	0	True				
ANR	3298690	AssignmentExpression	"* errmsg = _ ( ""ignoring invalid mfcr mask"" )"		3298587	0		=			
ANR	3298691	UnaryOperationExpression	* errmsg		3298587	0					
ANR	3298692	UnaryOperator	*		3298587	0					
ANR	3298693	Identifier	errmsg		3298587	1					
ANR	3298694	CallExpression	"_ ( ""ignoring invalid mfcr mask"" )"		3298587	1					
ANR	3298695	Callee	_		3298587	0					
ANR	3298696	Identifier	_		3298587	0					
ANR	3298697	ArgumentList	"""ignoring invalid mfcr mask"""		3298587	1					
ANR	3298698	Argument	"""ignoring invalid mfcr mask"""		3298587	0					
ANR	3298699	PrimaryExpression	"""ignoring invalid mfcr mask"""		3298587	0					
ANR	3298700	ExpressionStatement	value = 0	959:3:31057:31066	3298587	1	True				
ANR	3298701	AssignmentExpression	value = 0		3298587	0		=			
ANR	3298702	Identifier	value		3298587	0					
ANR	3298703	PrimaryExpression	0		3298587	1					
ANR	3298704	ReturnStatement	return insn | ( ( value & 0xff ) << 12 ) ;	962:2:31077:31113	3298587	1	True				
ANR	3298705	InclusiveOrExpression	insn | ( ( value & 0xff ) << 12 )		3298587	0		|			
ANR	3298706	Identifier	insn		3298587	0					
ANR	3298707	ShiftExpression	( value & 0xff ) << 12		3298587	1		<<			
ANR	3298708	BitAndExpression	value & 0xff		3298587	0		&			
ANR	3298709	Identifier	value		3298587	0					
ANR	3298710	PrimaryExpression	0xff		3298587	1					
ANR	3298711	PrimaryExpression	12		3298587	1					
ANR	3298712	ReturnType	static unsigned long		3298587	1					
ANR	3298713	Identifier	insert_fxm		3298587	2					
ANR	3298714	ParameterList	"unsigned long insn , long value , ppc_cpu_t dialect , const char * * errmsg"		3298587	3					
ANR	3298715	Parameter	unsigned long insn	925:12:29746:29763	3298587	0	True				
ANR	3298716	ParameterType	unsigned long		3298587	0					
ANR	3298717	Identifier	insn		3298587	1					
ANR	3298718	Parameter	long value	926:5:29771:29780	3298587	1	True				
ANR	3298719	ParameterType	long		3298587	0					
ANR	3298720	Identifier	value		3298587	1					
ANR	3298721	Parameter	ppc_cpu_t dialect	927:5:29788:29804	3298587	2	True				
ANR	3298722	ParameterType	ppc_cpu_t		3298587	0					
ANR	3298723	Identifier	dialect		3298587	1					
ANR	3298724	Parameter	const char * * errmsg	928:5:29812:29830	3298587	3	True				
ANR	3298725	ParameterType	const char * *		3298587	0					
ANR	3298726	Identifier	errmsg		3298587	1					
ANR	3298727	CFGEntryNode	ENTRY		3298587		True				
ANR	3298728	CFGExitNode	EXIT		3298587		True				
ANR	3298729	Symbol	PPC_OPCODE_ANY		3298587						
ANR	3298730	Symbol	insn		3298587						
ANR	3298731	Symbol	dialect		3298587						
ANR	3298732	Symbol	PPC_OPCODE_POWER4		3298587						
ANR	3298733	Symbol	errmsg		3298587						
ANR	3298734	Symbol	* errmsg		3298587						
ANR	3298735	Symbol	value		3298587						
ANR	3298736	Symbol	_		3298587						
ANR	3298737	Function	extract_fxm	965:0:31118:31652							
ANR	3298738	FunctionDef	"extract_fxm (unsigned long insn , ppc_cpu_t dialect ATTRIBUTE_UNUSED , int * invalid)"		3298737	0					
ANR	3298739	CompoundStatement		969:0:31225:31652	3298737	0					
ANR	3298740	IdentifierDeclStatement	long mask = ( insn >> 12 ) & 0xff ;	970:2:31229:31260	3298737	0	True				
ANR	3298741	IdentifierDecl	mask = ( insn >> 12 ) & 0xff		3298737	0					
ANR	3298742	IdentifierDeclType	long		3298737	0					
ANR	3298743	Identifier	mask		3298737	1					
ANR	3298744	AssignmentExpression	mask = ( insn >> 12 ) & 0xff		3298737	2		=			
ANR	3298745	Identifier	mask		3298737	0					
ANR	3298746	BitAndExpression	( insn >> 12 ) & 0xff		3298737	1		&			
ANR	3298747	ShiftExpression	insn >> 12		3298737	0		>>			
ANR	3298748	Identifier	insn		3298737	0					
ANR	3298749	PrimaryExpression	12		3298737	1					
ANR	3298750	PrimaryExpression	0xff		3298737	1					
ANR	3298751	IfStatement	if ( ( insn & ( 1 << 20 ) ) != 0 )		3298737	1					
ANR	3298752	Condition	( insn & ( 1 << 20 ) ) != 0	973:6:31301:31323	3298737	0	True				
ANR	3298753	EqualityExpression	( insn & ( 1 << 20 ) ) != 0		3298737	0		!=			
ANR	3298754	BitAndExpression	insn & ( 1 << 20 )		3298737	0		&			
ANR	3298755	Identifier	insn		3298737	0					
ANR	3298756	ShiftExpression	1 << 20		3298737	1		<<			
ANR	3298757	PrimaryExpression	1		3298737	0					
ANR	3298758	PrimaryExpression	20		3298737	1					
ANR	3298759	PrimaryExpression	0		3298737	1					
ANR	3298760	CompoundStatement		6:4:104:104	3298737	1					
ANR	3298761	IfStatement	if ( mask == 0 || ( mask & - mask ) != mask )		3298737	0					
ANR	3298762	Condition	mask == 0 || ( mask & - mask ) != mask	976:10:31394:31428	3298737	0	True				
ANR	3298763	OrExpression	mask == 0 || ( mask & - mask ) != mask		3298737	0		||			
ANR	3298764	EqualityExpression	mask == 0		3298737	0		==			
ANR	3298765	Identifier	mask		3298737	0					
ANR	3298766	PrimaryExpression	0		3298737	1					
ANR	3298767	EqualityExpression	( mask & - mask ) != mask		3298737	1		!=			
ANR	3298768	BitAndExpression	mask & - mask		3298737	0		&			
ANR	3298769	Identifier	mask		3298737	0					
ANR	3298770	UnaryOperationExpression	- mask		3298737	1					
ANR	3298771	UnaryOperator	-		3298737	0					
ANR	3298772	Identifier	mask		3298737	1					
ANR	3298773	Identifier	mask		3298737	1					
ANR	3298774	CompoundStatement		8:47:205:205	3298737	1					
ANR	3298775	ExpressionStatement	* invalid = 1	977:7:31440:31452	3298737	0	True				
ANR	3298776	AssignmentExpression	* invalid = 1		3298737	0		=			
ANR	3298777	UnaryOperationExpression	* invalid		3298737	0					
ANR	3298778	UnaryOperator	*		3298737	0					
ANR	3298779	Identifier	invalid		3298737	1					
ANR	3298780	PrimaryExpression	1		3298737	1					
ANR	3298781	ElseStatement	else		3298737	0					
ANR	3298782	IfStatement	if ( ( insn & ( 0x3ff << 1 ) ) == 19 << 1 )		3298737	0					
ANR	3298783	Condition	( insn & ( 0x3ff << 1 ) ) == 19 << 1	982:11:31541:31572	3298737	0	True				
ANR	3298784	EqualityExpression	( insn & ( 0x3ff << 1 ) ) == 19 << 1		3298737	0		==			
ANR	3298785	BitAndExpression	insn & ( 0x3ff << 1 )		3298737	0		&			
ANR	3298786	Identifier	insn		3298737	0					
ANR	3298787	ShiftExpression	0x3ff << 1		3298737	1		<<			
ANR	3298788	PrimaryExpression	0x3ff		3298737	0					
ANR	3298789	PrimaryExpression	1		3298737	1					
ANR	3298790	ShiftExpression	19 << 1		3298737	1		<<			
ANR	3298791	PrimaryExpression	19		3298737	0					
ANR	3298792	PrimaryExpression	1		3298737	1					
ANR	3298793	CompoundStatement		15:4:353:353	3298737	1					
ANR	3298794	IfStatement	if ( mask != 0 )		3298737	0					
ANR	3298795	Condition	mask != 0	984:9:31590:31598	3298737	0	True				
ANR	3298796	EqualityExpression	mask != 0		3298737	0		!=			
ANR	3298797	Identifier	mask		3298737	0					
ANR	3298798	PrimaryExpression	0		3298737	1					
ANR	3298799	CompoundStatement		16:20:375:375	3298737	1					
ANR	3298800	ExpressionStatement	* invalid = 1	985:6:31609:31621	3298737	0	True				
ANR	3298801	AssignmentExpression	* invalid = 1		3298737	0		=			
ANR	3298802	UnaryOperationExpression	* invalid		3298737	0					
ANR	3298803	UnaryOperator	*		3298737	0					
ANR	3298804	Identifier	invalid		3298737	1					
ANR	3298805	PrimaryExpression	1		3298737	1					
ANR	3298806	ReturnStatement	return mask ;	989:2:31639:31650	3298737	2	True				
ANR	3298807	Identifier	mask		3298737	0					
ANR	3298808	ReturnType	static long		3298737	1					
ANR	3298809	Identifier	extract_fxm		3298737	2					
ANR	3298810	ParameterList	"unsigned long insn , ppc_cpu_t dialect ATTRIBUTE_UNUSED , int * invalid"		3298737	3					
ANR	3298811	Parameter	unsigned long insn	966:13:31143:31160	3298737	0	True				
ANR	3298812	ParameterType	unsigned long		3298737	0					
ANR	3298813	Identifier	insn		3298737	1					
ANR	3298814	Parameter	ppc_cpu_t dialect ATTRIBUTE_UNUSED	967:6:31169:31202	3298737	1	True				
ANR	3298815	ParameterType	ppc_cpu_t dialect		3298737	0					
ANR	3298816	Identifier	ATTRIBUTE_UNUSED		3298737	1					
ANR	3298817	Parameter	int * invalid	968:6:31211:31222	3298737	2	True				
ANR	3298818	ParameterType	int *		3298737	0					
ANR	3298819	Identifier	invalid		3298737	1					
ANR	3298820	CFGEntryNode	ENTRY		3298737		True				
ANR	3298821	CFGExitNode	EXIT		3298737		True				
ANR	3298822	Symbol	insn		3298737						
ANR	3298823	Symbol	ATTRIBUTE_UNUSED		3298737						
ANR	3298824	Symbol	invalid		3298737						
ANR	3298825	Symbol	* invalid		3298737						
ANR	3298826	Symbol	mask		3298737						
ANR	3298827	Function	insert_mbe	997:0:31909:32842							
ANR	3298828	FunctionDef	"insert_mbe (unsigned long insn , long value , ppc_cpu_t dialect ATTRIBUTE_UNUSED , const char * * errmsg)"		3298827	0					
ANR	3298829	CompoundStatement		1002:0:32046:32842	3298827	0					
ANR	3298830	IdentifierDeclStatement	"unsigned long uval , mask ;"	1003:2:32050:32074	3298827	0	True				
ANR	3298831	IdentifierDecl	uval		3298827	0					
ANR	3298832	IdentifierDeclType	unsigned long		3298827	0					
ANR	3298833	Identifier	uval		3298827	1					
ANR	3298834	IdentifierDecl	mask		3298827	1					
ANR	3298835	IdentifierDeclType	unsigned long		3298827	0					
ANR	3298836	Identifier	mask		3298827	1					
ANR	3298837	IdentifierDeclStatement	"int mb , me , mx , count , last ;"	1004:2:32078:32105	3298827	1	True				
ANR	3298838	IdentifierDecl	mb		3298827	0					
ANR	3298839	IdentifierDeclType	int		3298827	0					
ANR	3298840	Identifier	mb		3298827	1					
ANR	3298841	IdentifierDecl	me		3298827	1					
ANR	3298842	IdentifierDeclType	int		3298827	0					
ANR	3298843	Identifier	me		3298827	1					
ANR	3298844	IdentifierDecl	mx		3298827	2					
ANR	3298845	IdentifierDeclType	int		3298827	0					
ANR	3298846	Identifier	mx		3298827	1					
ANR	3298847	IdentifierDecl	count		3298827	3					
ANR	3298848	IdentifierDeclType	int		3298827	0					
ANR	3298849	Identifier	count		3298827	1					
ANR	3298850	IdentifierDecl	last		3298827	4					
ANR	3298851	IdentifierDeclType	int		3298827	0					
ANR	3298852	Identifier	last		3298827	1					
ANR	3298853	ExpressionStatement	uval = value	1006:2:32110:32122	3298827	2	True				
ANR	3298854	AssignmentExpression	uval = value		3298827	0		=			
ANR	3298855	Identifier	uval		3298827	0					
ANR	3298856	Identifier	value		3298827	1					
ANR	3298857	IfStatement	if ( uval == 0 )		3298827	3					
ANR	3298858	Condition	uval == 0	1008:6:32131:32139	3298827	0	True				
ANR	3298859	EqualityExpression	uval == 0		3298827	0		==			
ANR	3298860	Identifier	uval		3298827	0					
ANR	3298861	PrimaryExpression	0		3298827	1					
ANR	3298862	CompoundStatement		8:4:99:99	3298827	1					
ANR	3298863	ExpressionStatement	"* errmsg = _ ( ""illegal bitmask"" )"	1010:6:32154:32184	3298827	0	True				
ANR	3298864	AssignmentExpression	"* errmsg = _ ( ""illegal bitmask"" )"		3298827	0		=			
ANR	3298865	UnaryOperationExpression	* errmsg		3298827	0					
ANR	3298866	UnaryOperator	*		3298827	0					
ANR	3298867	Identifier	errmsg		3298827	1					
ANR	3298868	CallExpression	"_ ( ""illegal bitmask"" )"		3298827	1					
ANR	3298869	Callee	_		3298827	0					
ANR	3298870	Identifier	_		3298827	0					
ANR	3298871	ArgumentList	"""illegal bitmask"""		3298827	1					
ANR	3298872	Argument	"""illegal bitmask"""		3298827	0					
ANR	3298873	PrimaryExpression	"""illegal bitmask"""		3298827	0					
ANR	3298874	ReturnStatement	return insn ;	1011:6:32192:32203	3298827	1	True				
ANR	3298875	Identifier	insn		3298827	0					
ANR	3298876	ExpressionStatement	mb = 0	1014:2:32214:32220	3298827	4	True				
ANR	3298877	AssignmentExpression	mb = 0		3298827	0		=			
ANR	3298878	Identifier	mb		3298827	0					
ANR	3298879	PrimaryExpression	0		3298827	1					
ANR	3298880	ExpressionStatement	me = 32	1015:2:32224:32231	3298827	5	True				
ANR	3298881	AssignmentExpression	me = 32		3298827	0		=			
ANR	3298882	Identifier	me		3298827	0					
ANR	3298883	PrimaryExpression	32		3298827	1					
ANR	3298884	IfStatement	if ( ( uval & 1 ) != 0 )		3298827	6					
ANR	3298885	Condition	( uval & 1 ) != 0	1016:6:32239:32253	3298827	0	True				
ANR	3298886	EqualityExpression	( uval & 1 ) != 0		3298827	0		!=			
ANR	3298887	BitAndExpression	uval & 1		3298827	0		&			
ANR	3298888	Identifier	uval		3298827	0					
ANR	3298889	PrimaryExpression	1		3298827	1					
ANR	3298890	PrimaryExpression	0		3298827	1					
ANR	3298891	CompoundStatement		15:23:209:209	3298827	1					
ANR	3298892	ExpressionStatement	last = 1	1017:3:32261:32269	3298827	0	True				
ANR	3298893	AssignmentExpression	last = 1		3298827	0		=			
ANR	3298894	Identifier	last		3298827	0					
ANR	3298895	PrimaryExpression	1		3298827	1					
ANR	3298896	ElseStatement	else		3298827	0					
ANR	3298897	CompoundStatement		17:9:233:233	3298827	0					
ANR	3298898	ExpressionStatement	last = 0	1019:3:32285:32293	3298827	0	True				
ANR	3298899	AssignmentExpression	last = 0		3298827	0		=			
ANR	3298900	Identifier	last		3298827	0					
ANR	3298901	PrimaryExpression	0		3298827	1					
ANR	3298902	ExpressionStatement	count = 0	1021:2:32301:32310	3298827	7	True				
ANR	3298903	AssignmentExpression	count = 0		3298827	0		=			
ANR	3298904	Identifier	count		3298827	0					
ANR	3298905	PrimaryExpression	0		3298827	1					
ANR	3298906	ForStatement	"for ( mx = 0 , mask = 1L << 31 ; mx < 32 ; ++ mx , mask >>= 1 )"		3298827	8					
ANR	3298907	ForInit	"mx = 0 , mask = 1L << 31 ;"	1027:7:32440:32463	3298827	0	True				
ANR	3298908	Expression	"mx = 0 , mask = 1L << 31"		3298827	0					
ANR	3298909	AssignmentExpression	mx = 0		3298827	0		=			
ANR	3298910	Identifier	mx		3298827	0					
ANR	3298911	PrimaryExpression	0		3298827	1					
ANR	3298912	AssignmentExpression	mask = 1L << 31		3298827	1		=			
ANR	3298913	Identifier	mask		3298827	0					
ANR	3298914	ShiftExpression	1L << 31		3298827	1		<<			
ANR	3298915	PrimaryExpression	1L		3298827	0					
ANR	3298916	PrimaryExpression	31		3298827	1					
ANR	3298917	Condition	mx < 32	1027:32:32465:32471	3298827	1	True				
ANR	3298918	RelationalExpression	mx < 32		3298827	0		<			
ANR	3298919	Identifier	mx		3298827	0					
ANR	3298920	PrimaryExpression	32		3298827	1					
ANR	3298921	Expression	"++ mx , mask >>= 1"	1027:41:32474:32489	3298827	2	True				
ANR	3298922	UnaryExpression	++ mx		3298827	0					
ANR	3298923	IncDec	++		3298827	0					
ANR	3298924	Identifier	mx		3298827	1					
ANR	3298925	AssignmentExpression	mask >>= 1		3298827	1		>>=			
ANR	3298926	Identifier	mask		3298827	0					
ANR	3298927	PrimaryExpression	1		3298827	1					
ANR	3298928	CompoundStatement		27:4:449:449	3298827	3					
ANR	3298929	IfStatement	if ( ( uval & mask ) && ! last )		3298827	0					
ANR	3298930	Condition	( uval & mask ) && ! last	1029:10:32508:32529	3298827	0	True				
ANR	3298931	AndExpression	( uval & mask ) && ! last		3298827	0		&&			
ANR	3298932	BitAndExpression	uval & mask		3298827	0		&			
ANR	3298933	Identifier	uval		3298827	0					
ANR	3298934	Identifier	mask		3298827	1					
ANR	3298935	UnaryOperationExpression	! last		3298827	1					
ANR	3298936	UnaryOperator	!		3298827	0					
ANR	3298937	Identifier	last		3298827	1					
ANR	3298938	CompoundStatement		29:1:486:486	3298827	1					
ANR	3298939	ExpressionStatement	++ count	1031:3:32538:32545	3298827	0	True				
ANR	3298940	UnaryExpression	++ count		3298827	0					
ANR	3298941	IncDec	++		3298827	0					
ANR	3298942	Identifier	count		3298827	1					
ANR	3298943	ExpressionStatement	mb = mx	1032:3:32550:32557	3298827	1	True				
ANR	3298944	AssignmentExpression	mb = mx		3298827	0		=			
ANR	3298945	Identifier	mb		3298827	0					
ANR	3298946	Identifier	mx		3298827	1					
ANR	3298947	ExpressionStatement	last = 1	1033:3:32562:32570	3298827	2	True				
ANR	3298948	AssignmentExpression	last = 1		3298827	0		=			
ANR	3298949	Identifier	last		3298827	0					
ANR	3298950	PrimaryExpression	1		3298827	1					
ANR	3298951	ElseStatement	else		3298827	0					
ANR	3298952	IfStatement	if ( ! ( uval & mask ) && last )		3298827	0					
ANR	3298953	Condition	! ( uval & mask ) && last	1035:15:32590:32611	3298827	0	True				
ANR	3298954	AndExpression	! ( uval & mask ) && last		3298827	0		&&			
ANR	3298955	UnaryOperationExpression	! ( uval & mask )		3298827	0					
ANR	3298956	UnaryOperator	!		3298827	0					
ANR	3298957	BitAndExpression	uval & mask		3298827	1		&			
ANR	3298958	Identifier	uval		3298827	0					
ANR	3298959	Identifier	mask		3298827	1					
ANR	3298960	Identifier	last		3298827	1					
ANR	3298961	CompoundStatement		35:1:568:568	3298827	1					
ANR	3298962	ExpressionStatement	++ count	1037:3:32620:32627	3298827	0	True				
ANR	3298963	UnaryExpression	++ count		3298827	0					
ANR	3298964	IncDec	++		3298827	0					
ANR	3298965	Identifier	count		3298827	1					
ANR	3298966	ExpressionStatement	me = mx	1038:3:32632:32639	3298827	1	True				
ANR	3298967	AssignmentExpression	me = mx		3298827	0		=			
ANR	3298968	Identifier	me		3298827	0					
ANR	3298969	Identifier	mx		3298827	1					
ANR	3298970	ExpressionStatement	last = 0	1039:3:32644:32652	3298827	2	True				
ANR	3298971	AssignmentExpression	last = 0		3298827	0		=			
ANR	3298972	Identifier	last		3298827	0					
ANR	3298973	PrimaryExpression	0		3298827	1					
ANR	3298974	IfStatement	if ( me == 0 )		3298827	9					
ANR	3298975	Condition	me == 0	1042:8:32671:32677	3298827	0	True				
ANR	3298976	EqualityExpression	me == 0		3298827	0		==			
ANR	3298977	Identifier	me		3298827	0					
ANR	3298978	PrimaryExpression	0		3298827	1					
ANR	3298979	CompoundStatement		41:17:633:633	3298827	1					
ANR	3298980	ExpressionStatement	me = 32	1043:5:32687:32694	3298827	0	True				
ANR	3298981	AssignmentExpression	me = 32		3298827	0		=			
ANR	3298982	Identifier	me		3298827	0					
ANR	3298983	PrimaryExpression	32		3298827	1					
ANR	3298984	IfStatement	if ( count != 2 && ( count != 0 || ! last ) )		3298827	10					
ANR	3298985	Condition	count != 2 && ( count != 0 || ! last )	1046:8:32711:32745	3298827	0	True				
ANR	3298986	AndExpression	count != 2 && ( count != 0 || ! last )		3298827	0		&&			
ANR	3298987	EqualityExpression	count != 2		3298827	0		!=			
ANR	3298988	Identifier	count		3298827	0					
ANR	3298989	PrimaryExpression	2		3298827	1					
ANR	3298990	OrExpression	count != 0 || ! last		3298827	1		||			
ANR	3298991	EqualityExpression	count != 0		3298827	0		!=			
ANR	3298992	Identifier	count		3298827	0					
ANR	3298993	PrimaryExpression	0		3298827	1					
ANR	3298994	UnaryOperationExpression	! last		3298827	1					
ANR	3298995	UnaryOperator	!		3298827	0					
ANR	3298996	Identifier	last		3298827	1					
ANR	3298997	CompoundStatement		45:45:701:701	3298827	1					
ANR	3298998	ExpressionStatement	"* errmsg = _ ( ""illegal bitmask"" )"	1047:5:32755:32786	3298827	0	True				
ANR	3298999	AssignmentExpression	"* errmsg = _ ( ""illegal bitmask"" )"		3298827	0		=			
ANR	3299000	UnaryOperationExpression	* errmsg		3298827	0					
ANR	3299001	UnaryOperator	*		3298827	0					
ANR	3299002	Identifier	errmsg		3298827	1					
ANR	3299003	CallExpression	"_ ( ""illegal bitmask"" )"		3298827	1					
ANR	3299004	Callee	_		3298827	0					
ANR	3299005	Identifier	_		3298827	0					
ANR	3299006	ArgumentList	"""illegal bitmask"""		3298827	1					
ANR	3299007	Argument	"""illegal bitmask"""		3298827	0					
ANR	3299008	PrimaryExpression	"""illegal bitmask"""		3298827	0					
ANR	3299009	ReturnStatement	return insn | ( mb << 6 ) | ( ( me - 1 ) << 1 ) ;	1050:4:32799:32840	3298827	11	True				
ANR	3299010	InclusiveOrExpression	insn | ( mb << 6 ) | ( ( me - 1 ) << 1 )		3298827	0		|			
ANR	3299011	Identifier	insn		3298827	0					
ANR	3299012	InclusiveOrExpression	( mb << 6 ) | ( ( me - 1 ) << 1 )		3298827	1		|			
ANR	3299013	ShiftExpression	mb << 6		3298827	0		<<			
ANR	3299014	Identifier	mb		3298827	0					
ANR	3299015	PrimaryExpression	6		3298827	1					
ANR	3299016	ShiftExpression	( me - 1 ) << 1		3298827	1		<<			
ANR	3299017	AdditiveExpression	me - 1		3298827	0		-			
ANR	3299018	Identifier	me		3298827	0					
ANR	3299019	PrimaryExpression	1		3298827	1					
ANR	3299020	PrimaryExpression	1		3298827	1					
ANR	3299021	ReturnType	static unsigned long		3298827	1					
ANR	3299022	Identifier	insert_mbe		3298827	2					
ANR	3299023	ParameterList	"unsigned long insn , long value , ppc_cpu_t dialect ATTRIBUTE_UNUSED , const char * * errmsg"		3298827	3					
ANR	3299024	Parameter	unsigned long insn	998:12:31942:31959	3298827	0	True				
ANR	3299025	ParameterType	unsigned long		3298827	0					
ANR	3299026	Identifier	insn		3298827	1					
ANR	3299027	Parameter	long value	999:5:31967:31976	3298827	1	True				
ANR	3299028	ParameterType	long		3298827	0					
ANR	3299029	Identifier	value		3298827	1					
ANR	3299030	Parameter	ppc_cpu_t dialect ATTRIBUTE_UNUSED	1000:5:31984:32017	3298827	2	True				
ANR	3299031	ParameterType	ppc_cpu_t dialect		3298827	0					
ANR	3299032	Identifier	ATTRIBUTE_UNUSED		3298827	1					
ANR	3299033	Parameter	const char * * errmsg	1001:5:32025:32043	3298827	3	True				
ANR	3299034	ParameterType	const char * *		3298827	0					
ANR	3299035	Identifier	errmsg		3298827	1					
ANR	3299036	CFGEntryNode	ENTRY		3298827		True				
ANR	3299037	CFGExitNode	EXIT		3298827		True				
ANR	3299038	Symbol	ATTRIBUTE_UNUSED		3298827						
ANR	3299039	Symbol	last		3298827						
ANR	3299040	Symbol	count		3298827						
ANR	3299041	Symbol	errmsg		3298827						
ANR	3299042	Symbol	mx		3298827						
ANR	3299043	Symbol	insn		3298827						
ANR	3299044	Symbol	mb		3298827						
ANR	3299045	Symbol	me		3298827						
ANR	3299046	Symbol	uval		3298827						
ANR	3299047	Symbol	* errmsg		3298827						
ANR	3299048	Symbol	value		3298827						
ANR	3299049	Symbol	mask		3298827						
ANR	3299050	Symbol	_		3298827						
ANR	3299051	Function	extract_mbe	1053:0:32845:33352							
ANR	3299052	FunctionDef	"extract_mbe (unsigned long insn , ppc_cpu_t dialect ATTRIBUTE_UNUSED , int * invalid)"		3299051	0					
ANR	3299053	CompoundStatement		1057:0:32952:33352	3299051	0					
ANR	3299054	IdentifierDeclStatement	long ret ;	1058:2:32956:32964	3299051	0	True				
ANR	3299055	IdentifierDecl	ret		3299051	0					
ANR	3299056	IdentifierDeclType	long		3299051	0					
ANR	3299057	Identifier	ret		3299051	1					
ANR	3299058	IdentifierDeclStatement	"int mb , me ;"	1059:2:32968:32978	3299051	1	True				
ANR	3299059	IdentifierDecl	mb		3299051	0					
ANR	3299060	IdentifierDeclType	int		3299051	0					
ANR	3299061	Identifier	mb		3299051	1					
ANR	3299062	IdentifierDecl	me		3299051	1					
ANR	3299063	IdentifierDeclType	int		3299051	0					
ANR	3299064	Identifier	me		3299051	1					
ANR	3299065	IdentifierDeclStatement	int i ;	1060:2:32982:32987	3299051	2	True				
ANR	3299066	IdentifierDecl	i		3299051	0					
ANR	3299067	IdentifierDeclType	int		3299051	0					
ANR	3299068	Identifier	i		3299051	1					
ANR	3299069	ExpressionStatement	* invalid = 1	1062:2:32992:33004	3299051	3	True				
ANR	3299070	AssignmentExpression	* invalid = 1		3299051	0		=			
ANR	3299071	UnaryOperationExpression	* invalid		3299051	0					
ANR	3299072	UnaryOperator	*		3299051	0					
ANR	3299073	Identifier	invalid		3299051	1					
ANR	3299074	PrimaryExpression	1		3299051	1					
ANR	3299075	ExpressionStatement	mb = ( insn >> 6 ) & 0x1f	1064:2:33009:33032	3299051	4	True				
ANR	3299076	AssignmentExpression	mb = ( insn >> 6 ) & 0x1f		3299051	0		=			
ANR	3299077	Identifier	mb		3299051	0					
ANR	3299078	BitAndExpression	( insn >> 6 ) & 0x1f		3299051	1		&			
ANR	3299079	ShiftExpression	insn >> 6		3299051	0		>>			
ANR	3299080	Identifier	insn		3299051	0					
ANR	3299081	PrimaryExpression	6		3299051	1					
ANR	3299082	PrimaryExpression	0x1f		3299051	1					
ANR	3299083	ExpressionStatement	me = ( insn >> 1 ) & 0x1f	1065:2:33036:33059	3299051	5	True				
ANR	3299084	AssignmentExpression	me = ( insn >> 1 ) & 0x1f		3299051	0		=			
ANR	3299085	Identifier	me		3299051	0					
ANR	3299086	BitAndExpression	( insn >> 1 ) & 0x1f		3299051	1		&			
ANR	3299087	ShiftExpression	insn >> 1		3299051	0		>>			
ANR	3299088	Identifier	insn		3299051	0					
ANR	3299089	PrimaryExpression	1		3299051	1					
ANR	3299090	PrimaryExpression	0x1f		3299051	1					
ANR	3299091	IfStatement	if ( mb < me + 1 )		3299051	6					
ANR	3299092	Condition	mb < me + 1	1066:6:33067:33077	3299051	0	True				
ANR	3299093	RelationalExpression	mb < me + 1		3299051	0		<			
ANR	3299094	Identifier	mb		3299051	0					
ANR	3299095	AdditiveExpression	me + 1		3299051	1		+			
ANR	3299096	Identifier	me		3299051	0					
ANR	3299097	PrimaryExpression	1		3299051	1					
ANR	3299098	CompoundStatement		11:4:131:131	3299051	1					
ANR	3299099	ExpressionStatement	ret = 0	1068:6:33092:33099	3299051	0	True				
ANR	3299100	AssignmentExpression	ret = 0		3299051	0		=			
ANR	3299101	Identifier	ret		3299051	0					
ANR	3299102	PrimaryExpression	0		3299051	1					
ANR	3299103	ForStatement	for ( i = mb ; i <= me ; i ++ )		3299051	1					
ANR	3299104	ForInit	i = mb ;	1069:11:33112:33118	3299051	0	True				
ANR	3299105	AssignmentExpression	i = mb		3299051	0		=			
ANR	3299106	Identifier	i		3299051	0					
ANR	3299107	Identifier	mb		3299051	1					
ANR	3299108	Condition	i <= me	1069:19:33120:33126	3299051	1	True				
ANR	3299109	RelationalExpression	i <= me		3299051	0		<=			
ANR	3299110	Identifier	i		3299051	0					
ANR	3299111	Identifier	me		3299051	1					
ANR	3299112	PostIncDecOperationExpression	i ++	1069:28:33129:33131	3299051	2	True				
ANR	3299113	Identifier	i		3299051	0					
ANR	3299114	IncDec	++		3299051	1					
ANR	3299115	CompoundStatement		13:33:181:181	3299051	3					
ANR	3299116	ExpressionStatement	ret |= 1L << ( 31 - i )	1070:7:33143:33164	3299051	0	True				
ANR	3299117	AssignmentExpression	ret |= 1L << ( 31 - i )		3299051	0		|=			
ANR	3299118	Identifier	ret		3299051	0					
ANR	3299119	ShiftExpression	1L << ( 31 - i )		3299051	1		<<			
ANR	3299120	PrimaryExpression	1L		3299051	0					
ANR	3299121	AdditiveExpression	31 - i		3299051	1		-			
ANR	3299122	PrimaryExpression	31		3299051	0					
ANR	3299123	Identifier	i		3299051	1					
ANR	3299124	ElseStatement	else		3299051	0					
ANR	3299125	IfStatement	if ( mb == me + 1 )		3299051	0					
ANR	3299126	Condition	mb == me + 1	1072:13:33187:33198	3299051	0	True				
ANR	3299127	EqualityExpression	mb == me + 1		3299051	0		==			
ANR	3299128	Identifier	mb		3299051	0					
ANR	3299129	AdditiveExpression	me + 1		3299051	1		+			
ANR	3299130	Identifier	me		3299051	0					
ANR	3299131	PrimaryExpression	1		3299051	1					
ANR	3299132	CompoundStatement		16:27:248:248	3299051	1					
ANR	3299133	ExpressionStatement	ret = ~0	1073:3:33206:33214	3299051	0	True				
ANR	3299134	AssignmentExpression	ret = ~0		3299051	0		=			
ANR	3299135	Identifier	ret		3299051	0					
ANR	3299136	Identifier	~0		3299051	1					
ANR	3299137	ElseStatement	else		3299051	0					
ANR	3299138	CompoundStatement		19:2:294:294	3299051	0					
ANR	3299139	ExpressionStatement	ret = ~0	1076:3:33252:33260	3299051	0	True				
ANR	3299140	AssignmentExpression	ret = ~0		3299051	0		=			
ANR	3299141	Identifier	ret		3299051	0					
ANR	3299142	Identifier	~0		3299051	1					
ANR	3299143	ForStatement	for ( i = me + 1 ; i < mb ; i ++ )		3299051	1					
ANR	3299144	ForInit	i = me + 1 ;	1077:8:33270:33280	3299051	0	True				
ANR	3299145	AssignmentExpression	i = me + 1		3299051	0		=			
ANR	3299146	Identifier	i		3299051	0					
ANR	3299147	AdditiveExpression	me + 1		3299051	1		+			
ANR	3299148	Identifier	me		3299051	0					
ANR	3299149	PrimaryExpression	1		3299051	1					
ANR	3299150	Condition	i < mb	1077:20:33282:33287	3299051	1	True				
ANR	3299151	RelationalExpression	i < mb		3299051	0		<			
ANR	3299152	Identifier	i		3299051	0					
ANR	3299153	Identifier	mb		3299051	1					
ANR	3299154	PostIncDecOperationExpression	i ++	1077:28:33290:33292	3299051	2	True				
ANR	3299155	Identifier	i		3299051	0					
ANR	3299156	IncDec	++		3299051	1					
ANR	3299157	CompoundStatement		21:33:342:342	3299051	3					
ANR	3299158	ExpressionStatement	ret &= ~ ( 1L << ( 31 - i ) )	1078:4:33301:33325	3299051	0	True				
ANR	3299159	AssignmentExpression	ret &= ~ ( 1L << ( 31 - i ) )		3299051	0		&=			
ANR	3299160	Identifier	ret		3299051	0					
ANR	3299161	UnaryOperationExpression	~ ( 1L << ( 31 - i ) )		3299051	1					
ANR	3299162	UnaryOperator	~		3299051	0					
ANR	3299163	ShiftExpression	1L << ( 31 - i )		3299051	1		<<			
ANR	3299164	PrimaryExpression	1L		3299051	0					
ANR	3299165	AdditiveExpression	31 - i		3299051	1		-			
ANR	3299166	PrimaryExpression	31		3299051	0					
ANR	3299167	Identifier	i		3299051	1					
ANR	3299168	ReturnStatement	return ret ;	1081:2:33340:33350	3299051	7	True				
ANR	3299169	Identifier	ret		3299051	0					
ANR	3299170	ReturnType	static long		3299051	1					
ANR	3299171	Identifier	extract_mbe		3299051	2					
ANR	3299172	ParameterList	"unsigned long insn , ppc_cpu_t dialect ATTRIBUTE_UNUSED , int * invalid"		3299051	3					
ANR	3299173	Parameter	unsigned long insn	1054:13:32870:32887	3299051	0	True				
ANR	3299174	ParameterType	unsigned long		3299051	0					
ANR	3299175	Identifier	insn		3299051	1					
ANR	3299176	Parameter	ppc_cpu_t dialect ATTRIBUTE_UNUSED	1055:6:32896:32929	3299051	1	True				
ANR	3299177	ParameterType	ppc_cpu_t dialect		3299051	0					
ANR	3299178	Identifier	ATTRIBUTE_UNUSED		3299051	1					
ANR	3299179	Parameter	int * invalid	1056:6:32938:32949	3299051	2	True				
ANR	3299180	ParameterType	int *		3299051	0					
ANR	3299181	Identifier	invalid		3299051	1					
ANR	3299182	CFGEntryNode	ENTRY		3299051		True				
ANR	3299183	CFGExitNode	EXIT		3299051		True				
ANR	3299184	Symbol	ret		3299051						
ANR	3299185	Symbol	insn		3299051						
ANR	3299186	Symbol	ATTRIBUTE_UNUSED		3299051						
ANR	3299187	Symbol	~0		3299051						
ANR	3299188	Symbol	mb		3299051						
ANR	3299189	Symbol	invalid		3299051						
ANR	3299190	Symbol	me		3299051						
ANR	3299191	Symbol	i		3299051						
ANR	3299192	Symbol	* invalid		3299051						
ANR	3299193	DeclStmt									
ANR	3299194	Decl							long	long	ret
ANR	3299195	Function	extract_nsi	1135:0:34581:34755							
ANR	3299196	FunctionDef	"extract_nsi (unsigned long insn , ppc_cpu_t dialect ATTRIBUTE_UNUSED , int * invalid)"		3299195	0					
ANR	3299197	CompoundStatement		1139:0:34688:34755	3299195	0					
ANR	3299198	ExpressionStatement	* invalid = 1	1140:2:34692:34704	3299195	0	True				
ANR	3299199	AssignmentExpression	* invalid = 1		3299195	0		=			
ANR	3299200	UnaryOperationExpression	* invalid		3299195	0					
ANR	3299201	UnaryOperator	*		3299195	0					
ANR	3299202	Identifier	invalid		3299195	1					
ANR	3299203	PrimaryExpression	1		3299195	1					
ANR	3299204	ReturnStatement	return - ( ( ( insn & 0xffff ) ^ 0x8000 ) - 0x8000 ) ;	1141:2:34708:34753	3299195	1	True				
ANR	3299205	UnaryOperationExpression	- ( ( ( insn & 0xffff ) ^ 0x8000 ) - 0x8000 )		3299195	0					
ANR	3299206	UnaryOperator	-		3299195	0					
ANR	3299207	AdditiveExpression	( ( insn & 0xffff ) ^ 0x8000 ) - 0x8000		3299195	1		-			
ANR	3299208	ExclusiveOrExpression	( insn & 0xffff ) ^ 0x8000		3299195	0		^			
ANR	3299209	BitAndExpression	insn & 0xffff		3299195	0		&			
ANR	3299210	Identifier	insn		3299195	0					
ANR	3299211	PrimaryExpression	0xffff		3299195	1					
ANR	3299212	PrimaryExpression	0x8000		3299195	1					
ANR	3299213	PrimaryExpression	0x8000		3299195	1					
ANR	3299214	ReturnType	static long		3299195	1					
ANR	3299215	Identifier	extract_nsi		3299195	2					
ANR	3299216	ParameterList	"unsigned long insn , ppc_cpu_t dialect ATTRIBUTE_UNUSED , int * invalid"		3299195	3					
ANR	3299217	Parameter	unsigned long insn	1136:13:34606:34623	3299195	0	True				
ANR	3299218	ParameterType	unsigned long		3299195	0					
ANR	3299219	Identifier	insn		3299195	1					
ANR	3299220	Parameter	ppc_cpu_t dialect ATTRIBUTE_UNUSED	1137:6:34632:34665	3299195	1	True				
ANR	3299221	ParameterType	ppc_cpu_t dialect		3299195	0					
ANR	3299222	Identifier	ATTRIBUTE_UNUSED		3299195	1					
ANR	3299223	Parameter	int * invalid	1138:6:34674:34685	3299195	2	True				
ANR	3299224	ParameterType	int *		3299195	0					
ANR	3299225	Identifier	invalid		3299195	1					
ANR	3299226	CFGEntryNode	ENTRY		3299195		True				
ANR	3299227	CFGExitNode	EXIT		3299195		True				
ANR	3299228	Symbol	insn		3299195						
ANR	3299229	Symbol	ATTRIBUTE_UNUSED		3299195						
ANR	3299230	Symbol	invalid		3299195						
ANR	3299231	Symbol	* invalid		3299195						
ANR	3299232	Function	insert_ral	1148:0:34919:35222							
ANR	3299233	FunctionDef	"insert_ral (unsigned long insn , long value , ppc_cpu_t dialect ATTRIBUTE_UNUSED , const char * * errmsg)"		3299232	0					
ANR	3299234	CompoundStatement		1153:0:35056:35222	3299232	0					
ANR	3299235	IfStatement	if ( value == 0 || ( unsigned long ) value == ( ( insn >> 21 ) & 0x1f ) )		3299232	0					
ANR	3299236	Condition	value == 0 || ( unsigned long ) value == ( ( insn >> 21 ) & 0x1f )	1154:5:35063:35121	3299232	0	True				
ANR	3299237	OrExpression	value == 0 || ( unsigned long ) value == ( ( insn >> 21 ) & 0x1f )		3299232	0		||			
ANR	3299238	EqualityExpression	value == 0		3299232	0		==			
ANR	3299239	Identifier	value		3299232	0					
ANR	3299240	PrimaryExpression	0		3299232	1					
ANR	3299241	EqualityExpression	( unsigned long ) value == ( ( insn >> 21 ) & 0x1f )		3299232	1		==			
ANR	3299242	CastExpression	( unsigned long ) value		3299232	0					
ANR	3299243	CastTarget	unsigned long		3299232	0					
ANR	3299244	Identifier	value		3299232	1					
ANR	3299245	BitAndExpression	( insn >> 21 ) & 0x1f		3299232	1		&			
ANR	3299246	ShiftExpression	insn >> 21		3299232	0		>>			
ANR	3299247	Identifier	insn		3299232	0					
ANR	3299248	PrimaryExpression	21		3299232	1					
ANR	3299249	PrimaryExpression	0x1f		3299232	1					
ANR	3299250	CompoundStatement		2:66:67:67	3299232	1					
ANR	3299251	ExpressionStatement	"* errmsg = ""invalid register operand when updating"""	1155:2:35128:35178	3299232	0	True				
ANR	3299252	AssignmentExpression	"* errmsg = ""invalid register operand when updating"""		3299232	0		=			
ANR	3299253	UnaryOperationExpression	* errmsg		3299232	0					
ANR	3299254	UnaryOperator	*		3299232	0					
ANR	3299255	Identifier	errmsg		3299232	1					
ANR	3299256	PrimaryExpression	"""invalid register operand when updating"""		3299232	1					
ANR	3299257	ReturnStatement	return insn | ( ( value & 0x1f ) << 16 ) ;	1157:1:35184:35220	3299232	1	True				
ANR	3299258	InclusiveOrExpression	insn | ( ( value & 0x1f ) << 16 )		3299232	0		|			
ANR	3299259	Identifier	insn		3299232	0					
ANR	3299260	ShiftExpression	( value & 0x1f ) << 16		3299232	1		<<			
ANR	3299261	BitAndExpression	value & 0x1f		3299232	0		&			
ANR	3299262	Identifier	value		3299232	0					
ANR	3299263	PrimaryExpression	0x1f		3299232	1					
ANR	3299264	PrimaryExpression	16		3299232	1					
ANR	3299265	ReturnType	static unsigned long		3299232	1					
ANR	3299266	Identifier	insert_ral		3299232	2					
ANR	3299267	ParameterList	"unsigned long insn , long value , ppc_cpu_t dialect ATTRIBUTE_UNUSED , const char * * errmsg"		3299232	3					
ANR	3299268	Parameter	unsigned long insn	1149:12:34952:34969	3299232	0	True				
ANR	3299269	ParameterType	unsigned long		3299232	0					
ANR	3299270	Identifier	insn		3299232	1					
ANR	3299271	Parameter	long value	1150:5:34977:34986	3299232	1	True				
ANR	3299272	ParameterType	long		3299232	0					
ANR	3299273	Identifier	value		3299232	1					
ANR	3299274	Parameter	ppc_cpu_t dialect ATTRIBUTE_UNUSED	1151:5:34994:35027	3299232	2	True				
ANR	3299275	ParameterType	ppc_cpu_t dialect		3299232	0					
ANR	3299276	Identifier	ATTRIBUTE_UNUSED		3299232	1					
ANR	3299277	Parameter	const char * * errmsg	1152:5:35035:35053	3299232	3	True				
ANR	3299278	ParameterType	const char * *		3299232	0					
ANR	3299279	Identifier	errmsg		3299232	1					
ANR	3299280	CFGEntryNode	ENTRY		3299232		True				
ANR	3299281	CFGExitNode	EXIT		3299232		True				
ANR	3299282	Symbol	insn		3299232						
ANR	3299283	Symbol	ATTRIBUTE_UNUSED		3299232						
ANR	3299284	Symbol	errmsg		3299232						
ANR	3299285	Symbol	* errmsg		3299232						
ANR	3299286	Symbol	value		3299232						
ANR	3299287	Function	insert_ram	1163:0:35310:35593							
ANR	3299288	FunctionDef	"insert_ram (unsigned long insn , long value , ppc_cpu_t dialect ATTRIBUTE_UNUSED , const char * * errmsg)"		3299287	0					
ANR	3299289	CompoundStatement		1168:0:35447:35593	3299287	0					
ANR	3299290	IfStatement	if ( ( unsigned long ) value >= ( ( insn >> 21 ) & 0x1f ) )		3299287	0					
ANR	3299291	Condition	( unsigned long ) value >= ( ( insn >> 21 ) & 0x1f )	1169:5:35454:35498	3299287	0	True				
ANR	3299292	RelationalExpression	( unsigned long ) value >= ( ( insn >> 21 ) & 0x1f )		3299287	0		>=			
ANR	3299293	CastExpression	( unsigned long ) value		3299287	0					
ANR	3299294	CastTarget	unsigned long		3299287	0					
ANR	3299295	Identifier	value		3299287	1					
ANR	3299296	BitAndExpression	( insn >> 21 ) & 0x1f		3299287	1		&			
ANR	3299297	ShiftExpression	insn >> 21		3299287	0		>>			
ANR	3299298	Identifier	insn		3299287	0					
ANR	3299299	PrimaryExpression	21		3299287	1					
ANR	3299300	PrimaryExpression	0x1f		3299287	1					
ANR	3299301	CompoundStatement		2:52:53:53	3299287	1					
ANR	3299302	ExpressionStatement	"* errmsg = _ ( ""index register in load range"" )"	1170:2:35505:35549	3299287	0	True				
ANR	3299303	AssignmentExpression	"* errmsg = _ ( ""index register in load range"" )"		3299287	0		=			
ANR	3299304	UnaryOperationExpression	* errmsg		3299287	0					
ANR	3299305	UnaryOperator	*		3299287	0					
ANR	3299306	Identifier	errmsg		3299287	1					
ANR	3299307	CallExpression	"_ ( ""index register in load range"" )"		3299287	1					
ANR	3299308	Callee	_		3299287	0					
ANR	3299309	Identifier	_		3299287	0					
ANR	3299310	ArgumentList	"""index register in load range"""		3299287	1					
ANR	3299311	Argument	"""index register in load range"""		3299287	0					
ANR	3299312	PrimaryExpression	"""index register in load range"""		3299287	0					
ANR	3299313	ReturnStatement	return insn | ( ( value & 0x1f ) << 16 ) ;	1172:1:35555:35591	3299287	1	True				
ANR	3299314	InclusiveOrExpression	insn | ( ( value & 0x1f ) << 16 )		3299287	0		|			
ANR	3299315	Identifier	insn		3299287	0					
ANR	3299316	ShiftExpression	( value & 0x1f ) << 16		3299287	1		<<			
ANR	3299317	BitAndExpression	value & 0x1f		3299287	0		&			
ANR	3299318	Identifier	value		3299287	0					
ANR	3299319	PrimaryExpression	0x1f		3299287	1					
ANR	3299320	PrimaryExpression	16		3299287	1					
ANR	3299321	ReturnType	static unsigned long		3299287	1					
ANR	3299322	Identifier	insert_ram		3299287	2					
ANR	3299323	ParameterList	"unsigned long insn , long value , ppc_cpu_t dialect ATTRIBUTE_UNUSED , const char * * errmsg"		3299287	3					
ANR	3299324	Parameter	unsigned long insn	1164:12:35343:35360	3299287	0	True				
ANR	3299325	ParameterType	unsigned long		3299287	0					
ANR	3299326	Identifier	insn		3299287	1					
ANR	3299327	Parameter	long value	1165:5:35368:35377	3299287	1	True				
ANR	3299328	ParameterType	long		3299287	0					
ANR	3299329	Identifier	value		3299287	1					
ANR	3299330	Parameter	ppc_cpu_t dialect ATTRIBUTE_UNUSED	1166:5:35385:35418	3299287	2	True				
ANR	3299331	ParameterType	ppc_cpu_t dialect		3299287	0					
ANR	3299332	Identifier	ATTRIBUTE_UNUSED		3299287	1					
ANR	3299333	Parameter	const char * * errmsg	1167:5:35426:35444	3299287	3	True				
ANR	3299334	ParameterType	const char * *		3299287	0					
ANR	3299335	Identifier	errmsg		3299287	1					
ANR	3299336	CFGEntryNode	ENTRY		3299287		True				
ANR	3299337	CFGExitNode	EXIT		3299287		True				
ANR	3299338	Symbol	insn		3299287						
ANR	3299339	Symbol	ATTRIBUTE_UNUSED		3299287						
ANR	3299340	Symbol	errmsg		3299287						
ANR	3299341	Symbol	* errmsg		3299287						
ANR	3299342	Symbol	value		3299287						
ANR	3299343	Symbol	_		3299287						
ANR	3299344	Function	insert_raq	1178:0:35689:36014							
ANR	3299345	FunctionDef	"insert_raq (unsigned long insn , long value , ppc_cpu_t dialect ATTRIBUTE_UNUSED , const char * * errmsg)"		3299344	0					
ANR	3299346	CompoundStatement		1183:0:35826:36014	3299344	0					
ANR	3299347	IdentifierDeclStatement	long rtvalue = ( insn & RT_MASK ) >> 21 ;	1184:2:35830:35867	3299344	0	True				
ANR	3299348	IdentifierDecl	rtvalue = ( insn & RT_MASK ) >> 21		3299344	0					
ANR	3299349	IdentifierDeclType	long		3299344	0					
ANR	3299350	Identifier	rtvalue		3299344	1					
ANR	3299351	AssignmentExpression	rtvalue = ( insn & RT_MASK ) >> 21		3299344	2		=			
ANR	3299352	Identifier	rtvalue		3299344	0					
ANR	3299353	ShiftExpression	( insn & RT_MASK ) >> 21		3299344	1		>>			
ANR	3299354	BitAndExpression	insn & RT_MASK		3299344	0		&			
ANR	3299355	Identifier	insn		3299344	0					
ANR	3299356	Identifier	RT_MASK		3299344	1					
ANR	3299357	PrimaryExpression	21		3299344	1					
ANR	3299358	IfStatement	if ( value == rtvalue )		3299344	1					
ANR	3299359	Condition	value == rtvalue	1186:6:35876:35891	3299344	0	True				
ANR	3299360	EqualityExpression	value == rtvalue		3299344	0		==			
ANR	3299361	Identifier	value		3299344	0					
ANR	3299362	Identifier	rtvalue		3299344	1					
ANR	3299363	CompoundStatement		4:24:67:67	3299344	1					
ANR	3299364	ExpressionStatement	"* errmsg = _ ( ""source and target register operands must be different"" )"	1187:3:35899:35968	3299344	0	True				
ANR	3299365	AssignmentExpression	"* errmsg = _ ( ""source and target register operands must be different"" )"		3299344	0		=			
ANR	3299366	UnaryOperationExpression	* errmsg		3299344	0					
ANR	3299367	UnaryOperator	*		3299344	0					
ANR	3299368	Identifier	errmsg		3299344	1					
ANR	3299369	CallExpression	"_ ( ""source and target register operands must be different"" )"		3299344	1					
ANR	3299370	Callee	_		3299344	0					
ANR	3299371	Identifier	_		3299344	0					
ANR	3299372	ArgumentList	"""source and target register operands must be different"""		3299344	1					
ANR	3299373	Argument	"""source and target register operands must be different"""		3299344	0					
ANR	3299374	PrimaryExpression	"""source and target register operands must be different"""		3299344	0					
ANR	3299375	ReturnStatement	return insn | ( ( value & 0x1f ) << 16 ) ;	1189:2:35976:36012	3299344	2	True				
ANR	3299376	InclusiveOrExpression	insn | ( ( value & 0x1f ) << 16 )		3299344	0		|			
ANR	3299377	Identifier	insn		3299344	0					
ANR	3299378	ShiftExpression	( value & 0x1f ) << 16		3299344	1		<<			
ANR	3299379	BitAndExpression	value & 0x1f		3299344	0		&			
ANR	3299380	Identifier	value		3299344	0					
ANR	3299381	PrimaryExpression	0x1f		3299344	1					
ANR	3299382	PrimaryExpression	16		3299344	1					
ANR	3299383	ReturnType	static unsigned long		3299344	1					
ANR	3299384	Identifier	insert_raq		3299344	2					
ANR	3299385	ParameterList	"unsigned long insn , long value , ppc_cpu_t dialect ATTRIBUTE_UNUSED , const char * * errmsg"		3299344	3					
ANR	3299386	Parameter	unsigned long insn	1179:12:35722:35739	3299344	0	True				
ANR	3299387	ParameterType	unsigned long		3299344	0					
ANR	3299388	Identifier	insn		3299344	1					
ANR	3299389	Parameter	long value	1180:5:35747:35756	3299344	1	True				
ANR	3299390	ParameterType	long		3299344	0					
ANR	3299391	Identifier	value		3299344	1					
ANR	3299392	Parameter	ppc_cpu_t dialect ATTRIBUTE_UNUSED	1181:5:35764:35797	3299344	2	True				
ANR	3299393	ParameterType	ppc_cpu_t dialect		3299344	0					
ANR	3299394	Identifier	ATTRIBUTE_UNUSED		3299344	1					
ANR	3299395	Parameter	const char * * errmsg	1182:5:35805:35823	3299344	3	True				
ANR	3299396	ParameterType	const char * *		3299344	0					
ANR	3299397	Identifier	errmsg		3299344	1					
ANR	3299398	CFGEntryNode	ENTRY		3299344		True				
ANR	3299399	CFGExitNode	EXIT		3299344		True				
ANR	3299400	Symbol	insn		3299344						
ANR	3299401	Symbol	ATTRIBUTE_UNUSED		3299344						
ANR	3299402	Symbol	errmsg		3299344						
ANR	3299403	Symbol	rtvalue		3299344						
ANR	3299404	Symbol	* errmsg		3299344						
ANR	3299405	Symbol	value		3299344						
ANR	3299406	Symbol	RT_MASK		3299344						
ANR	3299407	Symbol	_		3299344						
ANR	3299408	Function	insert_ras	1196:0:36183:36441							
ANR	3299409	FunctionDef	"insert_ras (unsigned long insn , long value , ppc_cpu_t dialect ATTRIBUTE_UNUSED , const char * * errmsg)"		3299408	0					
ANR	3299410	CompoundStatement		1201:0:36320:36441	3299408	0					
ANR	3299411	IfStatement	if ( value == 0 )		3299408	0					
ANR	3299412	Condition	value == 0	1202:5:36327:36336	3299408	0	True				
ANR	3299413	EqualityExpression	value == 0		3299408	0		==			
ANR	3299414	Identifier	value		3299408	0					
ANR	3299415	PrimaryExpression	0		3299408	1					
ANR	3299416	CompoundStatement		2:17:18:18	3299408	1					
ANR	3299417	ExpressionStatement	"* errmsg = _ ( ""invalid register operand when updating"" )"	1203:2:36343:36397	3299408	0	True				
ANR	3299418	AssignmentExpression	"* errmsg = _ ( ""invalid register operand when updating"" )"		3299408	0		=			
ANR	3299419	UnaryOperationExpression	* errmsg		3299408	0					
ANR	3299420	UnaryOperator	*		3299408	0					
ANR	3299421	Identifier	errmsg		3299408	1					
ANR	3299422	CallExpression	"_ ( ""invalid register operand when updating"" )"		3299408	1					
ANR	3299423	Callee	_		3299408	0					
ANR	3299424	Identifier	_		3299408	0					
ANR	3299425	ArgumentList	"""invalid register operand when updating"""		3299408	1					
ANR	3299426	Argument	"""invalid register operand when updating"""		3299408	0					
ANR	3299427	PrimaryExpression	"""invalid register operand when updating"""		3299408	0					
ANR	3299428	ReturnStatement	return insn | ( ( value & 0x1f ) << 16 ) ;	1205:1:36403:36439	3299408	1	True				
ANR	3299429	InclusiveOrExpression	insn | ( ( value & 0x1f ) << 16 )		3299408	0		|			
ANR	3299430	Identifier	insn		3299408	0					
ANR	3299431	ShiftExpression	( value & 0x1f ) << 16		3299408	1		<<			
ANR	3299432	BitAndExpression	value & 0x1f		3299408	0		&			
ANR	3299433	Identifier	value		3299408	0					
ANR	3299434	PrimaryExpression	0x1f		3299408	1					
ANR	3299435	PrimaryExpression	16		3299408	1					
ANR	3299436	ReturnType	static unsigned long		3299408	1					
ANR	3299437	Identifier	insert_ras		3299408	2					
ANR	3299438	ParameterList	"unsigned long insn , long value , ppc_cpu_t dialect ATTRIBUTE_UNUSED , const char * * errmsg"		3299408	3					
ANR	3299439	Parameter	unsigned long insn	1197:12:36216:36233	3299408	0	True				
ANR	3299440	ParameterType	unsigned long		3299408	0					
ANR	3299441	Identifier	insn		3299408	1					
ANR	3299442	Parameter	long value	1198:5:36241:36250	3299408	1	True				
ANR	3299443	ParameterType	long		3299408	0					
ANR	3299444	Identifier	value		3299408	1					
ANR	3299445	Parameter	ppc_cpu_t dialect ATTRIBUTE_UNUSED	1199:5:36258:36291	3299408	2	True				
ANR	3299446	ParameterType	ppc_cpu_t dialect		3299408	0					
ANR	3299447	Identifier	ATTRIBUTE_UNUSED		3299408	1					
ANR	3299448	Parameter	const char * * errmsg	1200:5:36299:36317	3299408	3	True				
ANR	3299449	ParameterType	const char * *		3299408	0					
ANR	3299450	Identifier	errmsg		3299408	1					
ANR	3299451	CFGEntryNode	ENTRY		3299408		True				
ANR	3299452	CFGExitNode	EXIT		3299408		True				
ANR	3299453	Symbol	insn		3299408						
ANR	3299454	Symbol	ATTRIBUTE_UNUSED		3299408						
ANR	3299455	Symbol	errmsg		3299408						
ANR	3299456	Symbol	* errmsg		3299408						
ANR	3299457	Symbol	value		3299408						
ANR	3299458	Symbol	_		3299408						
ANR	3299459	Function	extract_rbs	1223:0:37000:37194							
ANR	3299460	FunctionDef	"extract_rbs (unsigned long insn , ppc_cpu_t dialect ATTRIBUTE_UNUSED , int * invalid)"		3299459	0					
ANR	3299461	CompoundStatement		1227:0:37107:37194	3299459	0					
ANR	3299462	IfStatement	if ( ( ( insn >> 21 ) & 0x1f ) != ( ( insn >> 11 ) & 0x1f ) )		3299459	0					
ANR	3299463	Condition	( ( insn >> 21 ) & 0x1f ) != ( ( insn >> 11 ) & 0x1f )	1228:5:37114:37159	3299459	0	True				
ANR	3299464	EqualityExpression	( ( insn >> 21 ) & 0x1f ) != ( ( insn >> 11 ) & 0x1f )		3299459	0		!=			
ANR	3299465	BitAndExpression	( insn >> 21 ) & 0x1f		3299459	0		&			
ANR	3299466	ShiftExpression	insn >> 21		3299459	0		>>			
ANR	3299467	Identifier	insn		3299459	0					
ANR	3299468	PrimaryExpression	21		3299459	1					
ANR	3299469	PrimaryExpression	0x1f		3299459	1					
ANR	3299470	BitAndExpression	( insn >> 11 ) & 0x1f		3299459	1		&			
ANR	3299471	ShiftExpression	insn >> 11		3299459	0		>>			
ANR	3299472	Identifier	insn		3299459	0					
ANR	3299473	PrimaryExpression	11		3299459	1					
ANR	3299474	PrimaryExpression	0x1f		3299459	1					
ANR	3299475	CompoundStatement		2:53:54:54	3299459	1					
ANR	3299476	ExpressionStatement	* invalid = 1	1229:2:37166:37178	3299459	0	True				
ANR	3299477	AssignmentExpression	* invalid = 1		3299459	0		=			
ANR	3299478	UnaryOperationExpression	* invalid		3299459	0					
ANR	3299479	UnaryOperator	*		3299459	0					
ANR	3299480	Identifier	invalid		3299459	1					
ANR	3299481	PrimaryExpression	1		3299459	1					
ANR	3299482	ReturnStatement	return 0 ;	1231:1:37184:37192	3299459	1	True				
ANR	3299483	PrimaryExpression	0		3299459	0					
ANR	3299484	ReturnType	static long		3299459	1					
ANR	3299485	Identifier	extract_rbs		3299459	2					
ANR	3299486	ParameterList	"unsigned long insn , ppc_cpu_t dialect ATTRIBUTE_UNUSED , int * invalid"		3299459	3					
ANR	3299487	Parameter	unsigned long insn	1224:13:37025:37042	3299459	0	True				
ANR	3299488	ParameterType	unsigned long		3299459	0					
ANR	3299489	Identifier	insn		3299459	1					
ANR	3299490	Parameter	ppc_cpu_t dialect ATTRIBUTE_UNUSED	1225:6:37051:37084	3299459	1	True				
ANR	3299491	ParameterType	ppc_cpu_t dialect		3299459	0					
ANR	3299492	Identifier	ATTRIBUTE_UNUSED		3299459	1					
ANR	3299493	Parameter	int * invalid	1226:6:37093:37104	3299459	2	True				
ANR	3299494	ParameterType	int *		3299459	0					
ANR	3299495	Identifier	invalid		3299459	1					
ANR	3299496	CFGEntryNode	ENTRY		3299459		True				
ANR	3299497	CFGExitNode	EXIT		3299459		True				
ANR	3299498	Symbol	insn		3299459						
ANR	3299499	Symbol	ATTRIBUTE_UNUSED		3299459						
ANR	3299500	Symbol	invalid		3299459						
ANR	3299501	Symbol	* invalid		3299459						
ANR	3299502	Function	insert_sprg	1275:0:38279:38766							
ANR	3299503	FunctionDef	"insert_sprg (unsigned long insn , long value , ppc_cpu_t dialect , const char * * errmsg)"		3299502	0					
ANR	3299504	CompoundStatement		1280:0:38403:38766	3299502	0					
ANR	3299505	IfStatement	if ( value > 7 || ( value > 3 && ( dialect & ( PPC_OPCODE_BOOKE | PPC_OPCODE_405 ) ) == 0 ) )		3299502	0					
ANR	3299506	Condition	value > 7 || ( value > 3 && ( dialect & ( PPC_OPCODE_BOOKE | PPC_OPCODE_405 ) ) == 0 )	1281:5:38410:38489	3299502	0	True				
ANR	3299507	OrExpression	value > 7 || ( value > 3 && ( dialect & ( PPC_OPCODE_BOOKE | PPC_OPCODE_405 ) ) == 0 )		3299502	0		||			
ANR	3299508	RelationalExpression	value > 7		3299502	0		>			
ANR	3299509	Identifier	value		3299502	0					
ANR	3299510	PrimaryExpression	7		3299502	1					
ANR	3299511	AndExpression	value > 3 && ( dialect & ( PPC_OPCODE_BOOKE | PPC_OPCODE_405 ) ) == 0		3299502	1		&&			
ANR	3299512	RelationalExpression	value > 3		3299502	0		>			
ANR	3299513	Identifier	value		3299502	0					
ANR	3299514	PrimaryExpression	3		3299502	1					
ANR	3299515	EqualityExpression	( dialect & ( PPC_OPCODE_BOOKE | PPC_OPCODE_405 ) ) == 0		3299502	1		==			
ANR	3299516	BitAndExpression	dialect & ( PPC_OPCODE_BOOKE | PPC_OPCODE_405 )		3299502	0		&			
ANR	3299517	Identifier	dialect		3299502	0					
ANR	3299518	InclusiveOrExpression	PPC_OPCODE_BOOKE | PPC_OPCODE_405		3299502	1		|			
ANR	3299519	Identifier	PPC_OPCODE_BOOKE		3299502	0					
ANR	3299520	Identifier	PPC_OPCODE_405		3299502	1					
ANR	3299521	PrimaryExpression	0		3299502	1					
ANR	3299522	CompoundStatement		2:87:88:88	3299502	1					
ANR	3299523	ExpressionStatement	"* errmsg = _ ( ""invalid sprg number"" )"	1282:2:38496:38531	3299502	0	True				
ANR	3299524	AssignmentExpression	"* errmsg = _ ( ""invalid sprg number"" )"		3299502	0		=			
ANR	3299525	UnaryOperationExpression	* errmsg		3299502	0					
ANR	3299526	UnaryOperator	*		3299502	0					
ANR	3299527	Identifier	errmsg		3299502	1					
ANR	3299528	CallExpression	"_ ( ""invalid sprg number"" )"		3299502	1					
ANR	3299529	Callee	_		3299502	0					
ANR	3299530	Identifier	_		3299502	0					
ANR	3299531	ArgumentList	"""invalid sprg number"""		3299502	1					
ANR	3299532	Argument	"""invalid sprg number"""		3299502	0					
ANR	3299533	PrimaryExpression	"""invalid sprg number"""		3299502	0					
ANR	3299534	IfStatement	if ( value <= 3 || ( insn & 0x100 ) != 0 )		3299502	1					
ANR	3299535	Condition	value <= 3 || ( insn & 0x100 ) != 0	1287:5:38669:38701	3299502	0	True				
ANR	3299536	OrExpression	value <= 3 || ( insn & 0x100 ) != 0		3299502	0		||			
ANR	3299537	RelationalExpression	value <= 3		3299502	0		<=			
ANR	3299538	Identifier	value		3299502	0					
ANR	3299539	PrimaryExpression	3		3299502	1					
ANR	3299540	EqualityExpression	( insn & 0x100 ) != 0		3299502	1		!=			
ANR	3299541	BitAndExpression	insn & 0x100		3299502	0		&			
ANR	3299542	Identifier	insn		3299502	0					
ANR	3299543	PrimaryExpression	0x100		3299502	1					
ANR	3299544	PrimaryExpression	0		3299502	1					
ANR	3299545	CompoundStatement		8:40:300:300	3299502	1					
ANR	3299546	ExpressionStatement	value |= 0x10	1288:2:38708:38721	3299502	0	True				
ANR	3299547	AssignmentExpression	value |= 0x10		3299502	0		|=			
ANR	3299548	Identifier	value		3299502	0					
ANR	3299549	PrimaryExpression	0x10		3299502	1					
ANR	3299550	ReturnStatement	return insn | ( ( value & 0x17 ) << 16 ) ;	1291:1:38728:38764	3299502	2	True				
ANR	3299551	InclusiveOrExpression	insn | ( ( value & 0x17 ) << 16 )		3299502	0		|			
ANR	3299552	Identifier	insn		3299502	0					
ANR	3299553	ShiftExpression	( value & 0x17 ) << 16		3299502	1		<<			
ANR	3299554	BitAndExpression	value & 0x17		3299502	0		&			
ANR	3299555	Identifier	value		3299502	0					
ANR	3299556	PrimaryExpression	0x17		3299502	1					
ANR	3299557	PrimaryExpression	16		3299502	1					
ANR	3299558	ReturnType	static unsigned long		3299502	1					
ANR	3299559	Identifier	insert_sprg		3299502	2					
ANR	3299560	ParameterList	"unsigned long insn , long value , ppc_cpu_t dialect , const char * * errmsg"		3299502	3					
ANR	3299561	Parameter	unsigned long insn	1276:13:38313:38330	3299502	0	True				
ANR	3299562	ParameterType	unsigned long		3299502	0					
ANR	3299563	Identifier	insn		3299502	1					
ANR	3299564	Parameter	long value	1277:6:38339:38348	3299502	1	True				
ANR	3299565	ParameterType	long		3299502	0					
ANR	3299566	Identifier	value		3299502	1					
ANR	3299567	Parameter	ppc_cpu_t dialect	1278:6:38357:38373	3299502	2	True				
ANR	3299568	ParameterType	ppc_cpu_t		3299502	0					
ANR	3299569	Identifier	dialect		3299502	1					
ANR	3299570	Parameter	const char * * errmsg	1279:6:38382:38400	3299502	3	True				
ANR	3299571	ParameterType	const char * *		3299502	0					
ANR	3299572	Identifier	errmsg		3299502	1					
ANR	3299573	CFGEntryNode	ENTRY		3299502		True				
ANR	3299574	CFGExitNode	EXIT		3299502		True				
ANR	3299575	Symbol	insn		3299502						
ANR	3299576	Symbol	dialect		3299502						
ANR	3299577	Symbol	PPC_OPCODE_405		3299502						
ANR	3299578	Symbol	PPC_OPCODE_BOOKE		3299502						
ANR	3299579	Symbol	errmsg		3299502						
ANR	3299580	Symbol	* errmsg		3299502						
ANR	3299581	Symbol	value		3299502						
ANR	3299582	Symbol	_		3299502						
ANR	3299583	Function	extract_sprg	1294:0:38769:39235							
ANR	3299584	FunctionDef	"extract_sprg (unsigned long insn , ppc_cpu_t dialect , int * invalid)"		3299583	0					
ANR	3299585	CompoundStatement		1298:0:38862:39235	3299583	0					
ANR	3299586	IdentifierDeclStatement	unsigned long val = ( insn >> 16 ) & 0x1f ;	1299:2:38866:38905	3299583	0	True				
ANR	3299587	IdentifierDecl	val = ( insn >> 16 ) & 0x1f		3299583	0					
ANR	3299588	IdentifierDeclType	unsigned long		3299583	0					
ANR	3299589	Identifier	val		3299583	1					
ANR	3299590	AssignmentExpression	val = ( insn >> 16 ) & 0x1f		3299583	2		=			
ANR	3299591	Identifier	val		3299583	0					
ANR	3299592	BitAndExpression	( insn >> 16 ) & 0x1f		3299583	1		&			
ANR	3299593	ShiftExpression	insn >> 16		3299583	0		>>			
ANR	3299594	Identifier	insn		3299583	0					
ANR	3299595	PrimaryExpression	16		3299583	1					
ANR	3299596	PrimaryExpression	0x1f		3299583	1					
ANR	3299597	IfStatement	if ( ( val - 0x10 > 3 && ( dialect & ( PPC_OPCODE_BOOKE | PPC_OPCODE_405 ) ) == 0 ) || ( val - 0x10 > 7 && ( insn & 0x100 ) != 0 ) || val <= 3 || ( val & 8 ) != 0 )		3299583	1					
ANR	3299598	Condition	( val - 0x10 > 3 && ( dialect & ( PPC_OPCODE_BOOKE | PPC_OPCODE_405 ) ) == 0 ) || ( val - 0x10 > 7 && ( insn & 0x100 ) != 0 ) || val <= 3 || ( val & 8 ) != 0	1303:6:39047:39191	3299583	0	True				
ANR	3299599	OrExpression	( val - 0x10 > 3 && ( dialect & ( PPC_OPCODE_BOOKE | PPC_OPCODE_405 ) ) == 0 ) || ( val - 0x10 > 7 && ( insn & 0x100 ) != 0 ) || val <= 3 || ( val & 8 ) != 0		3299583	0		||			
ANR	3299600	AndExpression	val - 0x10 > 3 && ( dialect & ( PPC_OPCODE_BOOKE | PPC_OPCODE_405 ) ) == 0		3299583	0		&&			
ANR	3299601	RelationalExpression	val - 0x10 > 3		3299583	0		>			
ANR	3299602	AdditiveExpression	val - 0x10		3299583	0		-			
ANR	3299603	Identifier	val		3299583	0					
ANR	3299604	PrimaryExpression	0x10		3299583	1					
ANR	3299605	PrimaryExpression	3		3299583	1					
ANR	3299606	EqualityExpression	( dialect & ( PPC_OPCODE_BOOKE | PPC_OPCODE_405 ) ) == 0		3299583	1		==			
ANR	3299607	BitAndExpression	dialect & ( PPC_OPCODE_BOOKE | PPC_OPCODE_405 )		3299583	0		&			
ANR	3299608	Identifier	dialect		3299583	0					
ANR	3299609	InclusiveOrExpression	PPC_OPCODE_BOOKE | PPC_OPCODE_405		3299583	1		|			
ANR	3299610	Identifier	PPC_OPCODE_BOOKE		3299583	0					
ANR	3299611	Identifier	PPC_OPCODE_405		3299583	1					
ANR	3299612	PrimaryExpression	0		3299583	1					
ANR	3299613	OrExpression	( val - 0x10 > 7 && ( insn & 0x100 ) != 0 ) || val <= 3 || ( val & 8 ) != 0		3299583	1		||			
ANR	3299614	AndExpression	val - 0x10 > 7 && ( insn & 0x100 ) != 0		3299583	0		&&			
ANR	3299615	RelationalExpression	val - 0x10 > 7		3299583	0		>			
ANR	3299616	AdditiveExpression	val - 0x10		3299583	0		-			
ANR	3299617	Identifier	val		3299583	0					
ANR	3299618	PrimaryExpression	0x10		3299583	1					
ANR	3299619	PrimaryExpression	7		3299583	1					
ANR	3299620	EqualityExpression	( insn & 0x100 ) != 0		3299583	1		!=			
ANR	3299621	BitAndExpression	insn & 0x100		3299583	0		&			
ANR	3299622	Identifier	insn		3299583	0					
ANR	3299623	PrimaryExpression	0x100		3299583	1					
ANR	3299624	PrimaryExpression	0		3299583	1					
ANR	3299625	OrExpression	val <= 3 || ( val & 8 ) != 0		3299583	1		||			
ANR	3299626	RelationalExpression	val <= 3		3299583	0		<=			
ANR	3299627	Identifier	val		3299583	0					
ANR	3299628	PrimaryExpression	3		3299583	1					
ANR	3299629	EqualityExpression	( val & 8 ) != 0		3299583	1		!=			
ANR	3299630	BitAndExpression	val & 8		3299583	0		&			
ANR	3299631	Identifier	val		3299583	0					
ANR	3299632	PrimaryExpression	8		3299583	1					
ANR	3299633	PrimaryExpression	0		3299583	1					
ANR	3299634	CompoundStatement		6:153:331:331	3299583	1					
ANR	3299635	ExpressionStatement	* invalid = 1	1304:3:39199:39211	3299583	0	True				
ANR	3299636	AssignmentExpression	* invalid = 1		3299583	0		=			
ANR	3299637	UnaryOperationExpression	* invalid		3299583	0					
ANR	3299638	UnaryOperator	*		3299583	0					
ANR	3299639	Identifier	invalid		3299583	1					
ANR	3299640	PrimaryExpression	1		3299583	1					
ANR	3299641	ReturnStatement	return val & 7 ;	1306:2:39219:39233	3299583	2	True				
ANR	3299642	BitAndExpression	val & 7		3299583	0		&			
ANR	3299643	Identifier	val		3299583	0					
ANR	3299644	PrimaryExpression	7		3299583	1					
ANR	3299645	ReturnType	static long		3299583	1					
ANR	3299646	Identifier	extract_sprg		3299583	2					
ANR	3299647	ParameterList	"unsigned long insn , ppc_cpu_t dialect , int * invalid"		3299583	3					
ANR	3299648	Parameter	unsigned long insn	1295:14:38795:38812	3299583	0	True				
ANR	3299649	ParameterType	unsigned long		3299583	0					
ANR	3299650	Identifier	insn		3299583	1					
ANR	3299651	Parameter	ppc_cpu_t dialect	1296:7:38822:38838	3299583	1	True				
ANR	3299652	ParameterType	ppc_cpu_t		3299583	0					
ANR	3299653	Identifier	dialect		3299583	1					
ANR	3299654	Parameter	int * invalid	1297:7:38848:38859	3299583	2	True				
ANR	3299655	ParameterType	int *		3299583	0					
ANR	3299656	Identifier	invalid		3299583	1					
ANR	3299657	CFGEntryNode	ENTRY		3299583		True				
ANR	3299658	CFGExitNode	EXIT		3299583		True				
ANR	3299659	Symbol	val		3299583						
ANR	3299660	Symbol	insn		3299583						
ANR	3299661	Symbol	dialect		3299583						
ANR	3299662	Symbol	PPC_OPCODE_405		3299583						
ANR	3299663	Symbol	PPC_OPCODE_BOOKE		3299583						
ANR	3299664	Symbol	invalid		3299583						
ANR	3299665	Symbol	* invalid		3299583						
ANR	3299666	DeclStmt									
ANR	3299667	Decl							long	long	ret
ANR	3299668	Function	extract_xb6s	1417:0:42241:42486							
ANR	3299669	FunctionDef	"extract_xb6s (unsigned long insn , ppc_cpu_t dialect ATTRIBUTE_UNUSED , int * invalid)"		3299668	0					
ANR	3299670	CompoundStatement		1421:0:42349:42486	3299668	0					
ANR	3299671	IfStatement	if ( ( ( ( insn >> 16 ) & 0x1f ) != ( ( insn >> 11 ) & 0x1f ) ) || ( ( ( insn >> 2 ) & 0x1 ) != ( ( insn >> 1 ) & 0x1 ) ) )		3299668	0					
ANR	3299672	Condition	( ( ( insn >> 16 ) & 0x1f ) != ( ( insn >> 11 ) & 0x1f ) ) || ( ( ( insn >> 2 ) & 0x1 ) != ( ( insn >> 1 ) & 0x1 ) )	1422:5:42356:42451	3299668	0	True				
ANR	3299673	OrExpression	( ( ( insn >> 16 ) & 0x1f ) != ( ( insn >> 11 ) & 0x1f ) ) || ( ( ( insn >> 2 ) & 0x1 ) != ( ( insn >> 1 ) & 0x1 ) )		3299668	0		||			
ANR	3299674	EqualityExpression	( ( insn >> 16 ) & 0x1f ) != ( ( insn >> 11 ) & 0x1f )		3299668	0		!=			
ANR	3299675	BitAndExpression	( insn >> 16 ) & 0x1f		3299668	0		&			
ANR	3299676	ShiftExpression	insn >> 16		3299668	0		>>			
ANR	3299677	Identifier	insn		3299668	0					
ANR	3299678	PrimaryExpression	16		3299668	1					
ANR	3299679	PrimaryExpression	0x1f		3299668	1					
ANR	3299680	BitAndExpression	( insn >> 11 ) & 0x1f		3299668	1		&			
ANR	3299681	ShiftExpression	insn >> 11		3299668	0		>>			
ANR	3299682	Identifier	insn		3299668	0					
ANR	3299683	PrimaryExpression	11		3299668	1					
ANR	3299684	PrimaryExpression	0x1f		3299668	1					
ANR	3299685	EqualityExpression	( ( insn >> 2 ) & 0x1 ) != ( ( insn >> 1 ) & 0x1 )		3299668	1		!=			
ANR	3299686	BitAndExpression	( insn >> 2 ) & 0x1		3299668	0		&			
ANR	3299687	ShiftExpression	insn >> 2		3299668	0		>>			
ANR	3299688	Identifier	insn		3299668	0					
ANR	3299689	PrimaryExpression	2		3299668	1					
ANR	3299690	PrimaryExpression	0x1		3299668	1					
ANR	3299691	BitAndExpression	( insn >> 1 ) & 0x1		3299668	1		&			
ANR	3299692	ShiftExpression	insn >> 1		3299668	0		>>			
ANR	3299693	Identifier	insn		3299668	0					
ANR	3299694	PrimaryExpression	1		3299668	1					
ANR	3299695	PrimaryExpression	0x1		3299668	1					
ANR	3299696	CompoundStatement		2:103:104:104	3299668	1					
ANR	3299697	ExpressionStatement	* invalid = 1	1423:2:42458:42470	3299668	0	True				
ANR	3299698	AssignmentExpression	* invalid = 1		3299668	0		=			
ANR	3299699	UnaryOperationExpression	* invalid		3299668	0					
ANR	3299700	UnaryOperator	*		3299668	0					
ANR	3299701	Identifier	invalid		3299668	1					
ANR	3299702	PrimaryExpression	1		3299668	1					
ANR	3299703	ReturnStatement	return 0 ;	1425:1:42476:42484	3299668	1	True				
ANR	3299704	PrimaryExpression	0		3299668	0					
ANR	3299705	ReturnType	static long		3299668	1					
ANR	3299706	Identifier	extract_xb6s		3299668	2					
ANR	3299707	ParameterList	"unsigned long insn , ppc_cpu_t dialect ATTRIBUTE_UNUSED , int * invalid"		3299668	3					
ANR	3299708	Parameter	unsigned long insn	1418:14:42267:42284	3299668	0	True				
ANR	3299709	ParameterType	unsigned long		3299668	0					
ANR	3299710	Identifier	insn		3299668	1					
ANR	3299711	Parameter	ppc_cpu_t dialect ATTRIBUTE_UNUSED	1419:6:42293:42326	3299668	1	True				
ANR	3299712	ParameterType	ppc_cpu_t dialect		3299668	0					
ANR	3299713	Identifier	ATTRIBUTE_UNUSED		3299668	1					
ANR	3299714	Parameter	int * invalid	1420:6:42335:42346	3299668	2	True				
ANR	3299715	ParameterType	int *		3299668	0					
ANR	3299716	Identifier	invalid		3299668	1					
ANR	3299717	CFGEntryNode	ENTRY		3299668		True				
ANR	3299718	CFGExitNode	EXIT		3299668		True				
ANR	3299719	Symbol	insn		3299668						
ANR	3299720	Symbol	ATTRIBUTE_UNUSED		3299668						
ANR	3299721	Symbol	invalid		3299668						
ANR	3299722	Symbol	* invalid		3299668						
ANR	3299723	DeclStmt									
ANR	3299724	Decl							const struct powerpc_opcode	const struct powerpc_opcode [ ]	powerpc_opcodes
ANR	3299725	DeclStmt									
ANR	3299726	Decl							const int	const int	powerpc_num_opcodes
ANR	3299727	DeclStmt									
ANR	3299728	Decl							const struct powerpc_macro	const struct powerpc_macro [ ]	powerpc_macros
ANR	3299729	DeclStmt									
ANR	3299730	Decl							const int	const int	powerpc_num_macros
