command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6169208	File	data/converged/CVE-2019-16718~_radare2/shlr_zip_zip_zip_extra_field.c								
ANR	6169209	Function	_zip_ef_clone	44:0:1716:2286							
ANR	6169210	FunctionDef	"_zip_ef_clone (const struct zip_extra_field * ef , struct zip_error * error)"		6169209	0					
ANR	6169211	CompoundStatement		46:0:1814:2286	6169209	0					
ANR	6169212	IdentifierDeclStatement	"struct zip_extra_field * head , * prev , * def ;"	47:4:1820:1861	6169209	0	True				
ANR	6169213	IdentifierDecl	* head		6169209	0					
ANR	6169214	IdentifierDeclType	struct zip_extra_field *		6169209	0					
ANR	6169215	Identifier	head		6169209	1					
ANR	6169216	IdentifierDecl	* prev		6169209	1					
ANR	6169217	IdentifierDeclType	struct zip_extra_field *		6169209	0					
ANR	6169218	Identifier	prev		6169209	1					
ANR	6169219	IdentifierDecl	* def		6169209	2					
ANR	6169220	IdentifierDeclType	struct zip_extra_field *		6169209	0					
ANR	6169221	Identifier	def		6169209	1					
ANR	6169222	ExpressionStatement	head = prev = NULL	49:4:1872:1890	6169209	1	True				
ANR	6169223	AssignmentExpression	head = prev = NULL		6169209	0		=			
ANR	6169224	Identifier	head		6169209	0					
ANR	6169225	AssignmentExpression	prev = NULL		6169209	1		=			
ANR	6169226	Identifier	prev		6169209	0					
ANR	6169227	Identifier	NULL		6169209	1					
ANR	6169228	WhileStatement	while ( ef )		6169209	2					
ANR	6169229	Condition	ef	51:11:1908:1909	6169209	0	True				
ANR	6169230	Identifier	ef		6169209	0					
ANR	6169231	CompoundStatement		6:15:97:97	6169209	1					
ANR	6169232	IfStatement	"if ( ( def = _zip_ef_new ( ef -> id , ef -> size , ef -> data , ef -> flags ) ) == NULL )"		6169209	0					
ANR	6169233	Condition	"( def = _zip_ef_new ( ef -> id , ef -> size , ef -> data , ef -> flags ) ) == NULL"	52:12:1926:1989	6169209	0	True				
ANR	6169234	EqualityExpression	"( def = _zip_ef_new ( ef -> id , ef -> size , ef -> data , ef -> flags ) ) == NULL"		6169209	0		==			
ANR	6169235	AssignmentExpression	"def = _zip_ef_new ( ef -> id , ef -> size , ef -> data , ef -> flags )"		6169209	0		=			
ANR	6169236	Identifier	def		6169209	0					
ANR	6169237	CallExpression	"_zip_ef_new ( ef -> id , ef -> size , ef -> data , ef -> flags )"		6169209	1					
ANR	6169238	Callee	_zip_ef_new		6169209	0					
ANR	6169239	Identifier	_zip_ef_new		6169209	0					
ANR	6169240	ArgumentList	ef -> id		6169209	1					
ANR	6169241	Argument	ef -> id		6169209	0					
ANR	6169242	PtrMemberAccess	ef -> id		6169209	0					
ANR	6169243	Identifier	ef		6169209	0					
ANR	6169244	Identifier	id		6169209	1					
ANR	6169245	Argument	ef -> size		6169209	1					
ANR	6169246	PtrMemberAccess	ef -> size		6169209	0					
ANR	6169247	Identifier	ef		6169209	0					
ANR	6169248	Identifier	size		6169209	1					
ANR	6169249	Argument	ef -> data		6169209	2					
ANR	6169250	PtrMemberAccess	ef -> data		6169209	0					
ANR	6169251	Identifier	ef		6169209	0					
ANR	6169252	Identifier	data		6169209	1					
ANR	6169253	Argument	ef -> flags		6169209	3					
ANR	6169254	PtrMemberAccess	ef -> flags		6169209	0					
ANR	6169255	Identifier	ef		6169209	0					
ANR	6169256	Identifier	flags		6169209	1					
ANR	6169257	Identifier	NULL		6169209	1					
ANR	6169258	CompoundStatement		7:78:177:177	6169209	1					
ANR	6169259	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_MEMORY , 0 )"	53:12:2006:2045	6169209	0	True				
ANR	6169260	CallExpression	"_zip_error_set ( error , ZIP_ER_MEMORY , 0 )"		6169209	0					
ANR	6169261	Callee	_zip_error_set		6169209	0					
ANR	6169262	Identifier	_zip_error_set		6169209	0					
ANR	6169263	ArgumentList	error		6169209	1					
ANR	6169264	Argument	error		6169209	0					
ANR	6169265	Identifier	error		6169209	0					
ANR	6169266	Argument	ZIP_ER_MEMORY		6169209	1					
ANR	6169267	Identifier	ZIP_ER_MEMORY		6169209	0					
ANR	6169268	Argument	0		6169209	2					
ANR	6169269	PrimaryExpression	0		6169209	0					
ANR	6169270	ExpressionStatement	_zip_ef_free ( head )	54:12:2059:2077	6169209	1	True				
ANR	6169271	CallExpression	_zip_ef_free ( head )		6169209	0					
ANR	6169272	Callee	_zip_ef_free		6169209	0					
ANR	6169273	Identifier	_zip_ef_free		6169209	0					
ANR	6169274	ArgumentList	head		6169209	1					
ANR	6169275	Argument	head		6169209	0					
ANR	6169276	Identifier	head		6169209	0					
ANR	6169277	ReturnStatement	return NULL ;	55:12:2091:2102	6169209	2	True				
ANR	6169278	Identifier	NULL		6169209	0					
ANR	6169279	IfStatement	if ( head == NULL )		6169209	1					
ANR	6169280	Condition	head == NULL	58:12:2135:2146	6169209	0	True				
ANR	6169281	EqualityExpression	head == NULL		6169209	0		==			
ANR	6169282	Identifier	head		6169209	0					
ANR	6169283	Identifier	NULL		6169209	1					
ANR	6169284	ExpressionStatement	head = def	59:12:2161:2171	6169209	1	True				
ANR	6169285	AssignmentExpression	head = def		6169209	0		=			
ANR	6169286	Identifier	head		6169209	0					
ANR	6169287	Identifier	def		6169209	1					
ANR	6169288	IfStatement	if ( prev )		6169209	2					
ANR	6169289	Condition	prev	60:12:2185:2188	6169209	0	True				
ANR	6169290	Identifier	prev		6169209	0					
ANR	6169291	ExpressionStatement	prev -> next = def	61:12:2203:2219	6169209	1	True				
ANR	6169292	AssignmentExpression	prev -> next = def		6169209	0		=			
ANR	6169293	PtrMemberAccess	prev -> next		6169209	0					
ANR	6169294	Identifier	prev		6169209	0					
ANR	6169295	Identifier	next		6169209	1					
ANR	6169296	Identifier	def		6169209	1					
ANR	6169297	ExpressionStatement	prev = def	62:8:2229:2239	6169209	3	True				
ANR	6169298	AssignmentExpression	prev = def		6169209	0		=			
ANR	6169299	Identifier	prev		6169209	0					
ANR	6169300	Identifier	def		6169209	1					
ANR	6169301	ExpressionStatement	ef = ef -> next	64:1:2243:2256	6169209	4	True				
ANR	6169302	AssignmentExpression	ef = ef -> next		6169209	0		=			
ANR	6169303	Identifier	ef		6169209	0					
ANR	6169304	PtrMemberAccess	ef -> next		6169209	1					
ANR	6169305	Identifier	ef		6169209	0					
ANR	6169306	Identifier	next		6169209	1					
ANR	6169307	ReturnStatement	return head ;	67:4:2273:2284	6169209	3	True				
ANR	6169308	Identifier	head		6169209	0					
ANR	6169309	ReturnType	struct zip_extra_field *		6169209	1					
ANR	6169310	Identifier	_zip_ef_clone		6169209	2					
ANR	6169311	ParameterList	"const struct zip_extra_field * ef , struct zip_error * error"		6169209	3					
ANR	6169312	Parameter	const struct zip_extra_field * ef	45:14:1755:1786	6169209	0	True				
ANR	6169313	ParameterType	const struct zip_extra_field *		6169209	0					
ANR	6169314	Identifier	ef		6169209	1					
ANR	6169315	Parameter	struct zip_error * error	45:48:1789:1811	6169209	1	True				
ANR	6169316	ParameterType	struct zip_error *		6169209	0					
ANR	6169317	Identifier	error		6169209	1					
ANR	6169318	CFGEntryNode	ENTRY		6169209		True				
ANR	6169319	CFGExitNode	EXIT		6169209		True				
ANR	6169320	Symbol	ef -> data		6169209						
ANR	6169321	Symbol	prev -> next		6169209						
ANR	6169322	Symbol	ef		6169209						
ANR	6169323	Symbol	NULL		6169209						
ANR	6169324	Symbol	def		6169209						
ANR	6169325	Symbol	* ef		6169209						
ANR	6169326	Symbol	prev		6169209						
ANR	6169327	Symbol	* prev		6169209						
ANR	6169328	Symbol	error		6169209						
ANR	6169329	Symbol	ef -> id		6169209						
ANR	6169330	Symbol	head		6169209						
ANR	6169331	Symbol	ef -> size		6169209						
ANR	6169332	Symbol	_zip_ef_new		6169209						
ANR	6169333	Symbol	ef -> flags		6169209						
ANR	6169334	Symbol	ZIP_ER_MEMORY		6169209						
ANR	6169335	Symbol	ef -> next		6169209						
ANR	6169336	Function	_zip_ef_delete_by_id	71:0:2290:3032							
ANR	6169337	FunctionDef	"_zip_ef_delete_by_id (struct zip_extra_field * ef , zip_uint16_t id , zip_uint16_t id_idx , zip_flags_t flags)"		6169336	0					
ANR	6169338	CompoundStatement		73:0:2421:3032	6169336	0					
ANR	6169339	IdentifierDeclStatement	"struct zip_extra_field * head , * prev ;"	74:4:2427:2462	6169336	0	True				
ANR	6169340	IdentifierDecl	* head		6169336	0					
ANR	6169341	IdentifierDeclType	struct zip_extra_field *		6169336	0					
ANR	6169342	Identifier	head		6169336	1					
ANR	6169343	IdentifierDecl	* prev		6169336	1					
ANR	6169344	IdentifierDeclType	struct zip_extra_field *		6169336	0					
ANR	6169345	Identifier	prev		6169336	1					
ANR	6169346	IdentifierDeclStatement	int i ;	75:4:2468:2473	6169336	1	True				
ANR	6169347	IdentifierDecl	i		6169336	0					
ANR	6169348	IdentifierDeclType	int		6169336	0					
ANR	6169349	Identifier	i		6169336	1					
ANR	6169350	ExpressionStatement	i = 0	77:4:2480:2485	6169336	2	True				
ANR	6169351	AssignmentExpression	i = 0		6169336	0		=			
ANR	6169352	Identifier	i		6169336	0					
ANR	6169353	PrimaryExpression	0		6169336	1					
ANR	6169354	ExpressionStatement	head = ef	78:4:2491:2500	6169336	3	True				
ANR	6169355	AssignmentExpression	head = ef		6169336	0		=			
ANR	6169356	Identifier	head		6169336	0					
ANR	6169357	Identifier	ef		6169336	1					
ANR	6169358	ExpressionStatement	prev = NULL	79:4:2506:2517	6169336	4	True				
ANR	6169359	AssignmentExpression	prev = NULL		6169336	0		=			
ANR	6169360	Identifier	prev		6169336	0					
ANR	6169361	Identifier	NULL		6169336	1					
ANR	6169362	ForStatement	for ( ; ef ; ef = ( prev ? prev -> next : head ) )		6169336	5					
ANR	6169363	Condition	ef	80:11:2530:2531	6169336	0	True				
ANR	6169364	Identifier	ef		6169336	0					
ANR	6169365	AssignmentExpression	ef = ( prev ? prev -> next : head )	80:15:2534:2562	6169336	1	True	=			
ANR	6169366	Identifier	ef		6169336	0					
ANR	6169367	ConditionalExpression	prev ? prev -> next : head		6169336	1					
ANR	6169368	Condition	prev		6169336	0					
ANR	6169369	Identifier	prev		6169336	0					
ANR	6169370	PtrMemberAccess	prev -> next		6169336	1					
ANR	6169371	Identifier	prev		6169336	0					
ANR	6169372	Identifier	next		6169336	1					
ANR	6169373	Identifier	head		6169336	2					
ANR	6169374	CompoundStatement		8:46:143:143	6169336	2					
ANR	6169375	IfStatement	if ( ( ef -> flags & flags & ZIP_EF_BOTH ) && ef -> id == id )		6169336	0					
ANR	6169376	Condition	( ef -> flags & flags & ZIP_EF_BOTH ) && ef -> id == id	81:5:2572:2620	6169336	0	True				
ANR	6169377	AndExpression	( ef -> flags & flags & ZIP_EF_BOTH ) && ef -> id == id		6169336	0		&&			
ANR	6169378	BitAndExpression	ef -> flags & flags & ZIP_EF_BOTH		6169336	0		&			
ANR	6169379	PtrMemberAccess	ef -> flags		6169336	0					
ANR	6169380	Identifier	ef		6169336	0					
ANR	6169381	Identifier	flags		6169336	1					
ANR	6169382	BitAndExpression	flags & ZIP_EF_BOTH		6169336	1		&			
ANR	6169383	Identifier	flags		6169336	0					
ANR	6169384	Identifier	ZIP_EF_BOTH		6169336	1					
ANR	6169385	EqualityExpression	ef -> id == id		6169336	1		==			
ANR	6169386	PtrMemberAccess	ef -> id		6169336	0					
ANR	6169387	Identifier	ef		6169336	0					
ANR	6169388	Identifier	id		6169336	1					
ANR	6169389	Identifier	id		6169336	1					
ANR	6169390	CompoundStatement		9:56:201:201	6169336	1					
ANR	6169391	IfStatement	if ( id_idx == ZIP_EXTRA_FIELD_ALL || i == id_idx )		6169336	0					
ANR	6169392	Condition	id_idx == ZIP_EXTRA_FIELD_ALL || i == id_idx	82:9:2634:2677	6169336	0	True				
ANR	6169393	OrExpression	id_idx == ZIP_EXTRA_FIELD_ALL || i == id_idx		6169336	0		||			
ANR	6169394	EqualityExpression	id_idx == ZIP_EXTRA_FIELD_ALL		6169336	0		==			
ANR	6169395	Identifier	id_idx		6169336	0					
ANR	6169396	Identifier	ZIP_EXTRA_FIELD_ALL		6169336	1					
ANR	6169397	EqualityExpression	i == id_idx		6169336	1		==			
ANR	6169398	Identifier	i		6169336	0					
ANR	6169399	Identifier	id_idx		6169336	1					
ANR	6169400	CompoundStatement		10:55:258:258	6169336	1					
ANR	6169401	ExpressionStatement	ef -> flags &= ~ ( flags & ZIP_EF_BOTH )	83:2:2684:2719	6169336	0	True				
ANR	6169402	AssignmentExpression	ef -> flags &= ~ ( flags & ZIP_EF_BOTH )		6169336	0		&=			
ANR	6169403	PtrMemberAccess	ef -> flags		6169336	0					
ANR	6169404	Identifier	ef		6169336	0					
ANR	6169405	Identifier	flags		6169336	1					
ANR	6169406	UnaryOperationExpression	~ ( flags & ZIP_EF_BOTH )		6169336	1					
ANR	6169407	UnaryOperator	~		6169336	0					
ANR	6169408	BitAndExpression	flags & ZIP_EF_BOTH		6169336	1		&			
ANR	6169409	Identifier	flags		6169336	0					
ANR	6169410	Identifier	ZIP_EF_BOTH		6169336	1					
ANR	6169411	IfStatement	if ( ( ef -> flags & ZIP_EF_BOTH ) == 0 )		6169336	1					
ANR	6169412	Condition	( ef -> flags & ZIP_EF_BOTH ) == 0	84:6:2727:2756	6169336	0	True				
ANR	6169413	EqualityExpression	( ef -> flags & ZIP_EF_BOTH ) == 0		6169336	0		==			
ANR	6169414	BitAndExpression	ef -> flags & ZIP_EF_BOTH		6169336	0		&			
ANR	6169415	PtrMemberAccess	ef -> flags		6169336	0					
ANR	6169416	Identifier	ef		6169336	0					
ANR	6169417	Identifier	flags		6169336	1					
ANR	6169418	Identifier	ZIP_EF_BOTH		6169336	1					
ANR	6169419	PrimaryExpression	0		6169336	1					
ANR	6169420	CompoundStatement		12:38:337:337	6169336	1					
ANR	6169421	IfStatement	if ( prev )		6169336	0					
ANR	6169422	Condition	prev	85:10:2771:2774	6169336	0	True				
ANR	6169423	Identifier	prev		6169336	0					
ANR	6169424	ExpressionStatement	prev -> next = ef -> next	86:3:2780:2801	6169336	1	True				
ANR	6169425	AssignmentExpression	prev -> next = ef -> next		6169336	0		=			
ANR	6169426	PtrMemberAccess	prev -> next		6169336	0					
ANR	6169427	Identifier	prev		6169336	0					
ANR	6169428	Identifier	next		6169336	1					
ANR	6169429	PtrMemberAccess	ef -> next		6169336	1					
ANR	6169430	Identifier	ef		6169336	0					
ANR	6169431	Identifier	next		6169336	1					
ANR	6169432	ElseStatement	else		6169336	0					
ANR	6169433	ExpressionStatement	head = ef -> next	88:3:2817:2832	6169336	0	True				
ANR	6169434	AssignmentExpression	head = ef -> next		6169336	0		=			
ANR	6169435	Identifier	head		6169336	0					
ANR	6169436	PtrMemberAccess	ef -> next		6169336	1					
ANR	6169437	Identifier	ef		6169336	0					
ANR	6169438	Identifier	next		6169336	1					
ANR	6169439	ExpressionStatement	ef -> next = NULL	89:6:2840:2855	6169336	1	True				
ANR	6169440	AssignmentExpression	ef -> next = NULL		6169336	0		=			
ANR	6169441	PtrMemberAccess	ef -> next		6169336	0					
ANR	6169442	Identifier	ef		6169336	0					
ANR	6169443	Identifier	next		6169336	1					
ANR	6169444	Identifier	NULL		6169336	1					
ANR	6169445	ExpressionStatement	_zip_ef_free ( ef )	90:6:2863:2879	6169336	2	True				
ANR	6169446	CallExpression	_zip_ef_free ( ef )		6169336	0					
ANR	6169447	Callee	_zip_ef_free		6169336	0					
ANR	6169448	Identifier	_zip_ef_free		6169336	0					
ANR	6169449	ArgumentList	ef		6169336	1					
ANR	6169450	Argument	ef		6169336	0					
ANR	6169451	Identifier	ef		6169336	0					
ANR	6169452	IfStatement	if ( id_idx == ZIP_EXTRA_FIELD_ALL )		6169336	3					
ANR	6169453	Condition	id_idx == ZIP_EXTRA_FIELD_ALL	92:10:2892:2920	6169336	0	True				
ANR	6169454	EqualityExpression	id_idx == ZIP_EXTRA_FIELD_ALL		6169336	0		==			
ANR	6169455	Identifier	id_idx		6169336	0					
ANR	6169456	Identifier	ZIP_EXTRA_FIELD_ALL		6169336	1					
ANR	6169457	ContinueStatement	continue ;	93:3:2926:2934	6169336	1	True				
ANR	6169458	ExpressionStatement	i ++	97:5:2958:2961	6169336	1	True				
ANR	6169459	PostIncDecOperationExpression	i ++		6169336	0					
ANR	6169460	Identifier	i		6169336	0					
ANR	6169461	IncDec	++		6169336	1					
ANR	6169462	IfStatement	if ( i > id_idx )		6169336	2					
ANR	6169463	Condition	i > id_idx	98:9:2972:2981	6169336	0	True				
ANR	6169464	RelationalExpression	i > id_idx		6169336	0		>			
ANR	6169465	Identifier	i		6169336	0					
ANR	6169466	Identifier	id_idx		6169336	1					
ANR	6169467	BreakStatement	break ;	99:2:2986:2991	6169336	1	True				
ANR	6169468	ExpressionStatement	prev = ef	101:1:2997:3006	6169336	1	True				
ANR	6169469	AssignmentExpression	prev = ef		6169336	0		=			
ANR	6169470	Identifier	prev		6169336	0					
ANR	6169471	Identifier	ef		6169336	1					
ANR	6169472	ReturnStatement	return head ;	104:4:3019:3030	6169336	6	True				
ANR	6169473	Identifier	head		6169336	0					
ANR	6169474	ReturnType	struct zip_extra_field *		6169336	1					
ANR	6169475	Identifier	_zip_ef_delete_by_id		6169336	2					
ANR	6169476	ParameterList	"struct zip_extra_field * ef , zip_uint16_t id , zip_uint16_t id_idx , zip_flags_t flags"		6169336	3					
ANR	6169477	Parameter	struct zip_extra_field * ef	72:21:2336:2361	6169336	0	True				
ANR	6169478	ParameterType	struct zip_extra_field *		6169336	0					
ANR	6169479	Identifier	ef		6169336	1					
ANR	6169480	Parameter	zip_uint16_t id	72:49:2364:2378	6169336	1	True				
ANR	6169481	ParameterType	zip_uint16_t		6169336	0					
ANR	6169482	Identifier	id		6169336	1					
ANR	6169483	Parameter	zip_uint16_t id_idx	72:66:2381:2399	6169336	2	True				
ANR	6169484	ParameterType	zip_uint16_t		6169336	0					
ANR	6169485	Identifier	id_idx		6169336	1					
ANR	6169486	Parameter	zip_flags_t flags	72:87:2402:2418	6169336	3	True				
ANR	6169487	ParameterType	zip_flags_t		6169336	0					
ANR	6169488	Identifier	flags		6169336	1					
ANR	6169489	CFGEntryNode	ENTRY		6169336		True				
ANR	6169490	CFGExitNode	EXIT		6169336		True				
ANR	6169491	Symbol	prev -> next		6169336						
ANR	6169492	Symbol	ef		6169336						
ANR	6169493	Symbol	id_idx		6169336						
ANR	6169494	Symbol	NULL		6169336						
ANR	6169495	Symbol	ZIP_EF_BOTH		6169336						
ANR	6169496	Symbol	* ef		6169336						
ANR	6169497	Symbol	prev		6169336						
ANR	6169498	Symbol	flags		6169336						
ANR	6169499	Symbol	i		6169336						
ANR	6169500	Symbol	* prev		6169336						
ANR	6169501	Symbol	ZIP_EXTRA_FIELD_ALL		6169336						
ANR	6169502	Symbol	ef -> id		6169336						
ANR	6169503	Symbol	head		6169336						
ANR	6169504	Symbol	ef -> flags		6169336						
ANR	6169505	Symbol	id		6169336						
ANR	6169506	Symbol	ef -> next		6169336						
ANR	6169507	Function	_zip_ef_free	110:0:3039:3200							
ANR	6169508	FunctionDef	_zip_ef_free (struct zip_extra_field * ef)		6169507	0					
ANR	6169509	CompoundStatement		112:0:3085:3200	6169507	0					
ANR	6169510	IdentifierDeclStatement	struct zip_extra_field * ef2 ;	113:4:3091:3118	6169507	0	True				
ANR	6169511	IdentifierDecl	* ef2		6169507	0					
ANR	6169512	IdentifierDeclType	struct zip_extra_field *		6169507	0					
ANR	6169513	Identifier	ef2		6169507	1					
ANR	6169514	WhileStatement	while ( ef )		6169507	1					
ANR	6169515	Condition	ef	115:11:3132:3133	6169507	0	True				
ANR	6169516	Identifier	ef		6169507	0					
ANR	6169517	CompoundStatement		4:15:50:50	6169507	1					
ANR	6169518	ExpressionStatement	ef2 = ef -> next	116:1:3139:3153	6169507	0	True				
ANR	6169519	AssignmentExpression	ef2 = ef -> next		6169507	0		=			
ANR	6169520	Identifier	ef2		6169507	0					
ANR	6169521	PtrMemberAccess	ef -> next		6169507	1					
ANR	6169522	Identifier	ef		6169507	0					
ANR	6169523	Identifier	next		6169507	1					
ANR	6169524	ExpressionStatement	free ( ef -> data )	117:1:3156:3170	6169507	1	True				
ANR	6169525	CallExpression	free ( ef -> data )		6169507	0					
ANR	6169526	Callee	free		6169507	0					
ANR	6169527	Identifier	free		6169507	0					
ANR	6169528	ArgumentList	ef -> data		6169507	1					
ANR	6169529	Argument	ef -> data		6169507	0					
ANR	6169530	PtrMemberAccess	ef -> data		6169507	0					
ANR	6169531	Identifier	ef		6169507	0					
ANR	6169532	Identifier	data		6169507	1					
ANR	6169533	ExpressionStatement	free ( ef )	118:1:3173:3181	6169507	2	True				
ANR	6169534	CallExpression	free ( ef )		6169507	0					
ANR	6169535	Callee	free		6169507	0					
ANR	6169536	Identifier	free		6169507	0					
ANR	6169537	ArgumentList	ef		6169507	1					
ANR	6169538	Argument	ef		6169507	0					
ANR	6169539	Identifier	ef		6169507	0					
ANR	6169540	ExpressionStatement	ef = ef2	119:1:3184:3192	6169507	3	True				
ANR	6169541	AssignmentExpression	ef = ef2		6169507	0		=			
ANR	6169542	Identifier	ef		6169507	0					
ANR	6169543	Identifier	ef2		6169507	1					
ANR	6169544	ReturnType	void		6169507	1					
ANR	6169545	Identifier	_zip_ef_free		6169507	2					
ANR	6169546	ParameterList	struct zip_extra_field * ef		6169507	3					
ANR	6169547	Parameter	struct zip_extra_field * ef	111:13:3057:3082	6169507	0	True				
ANR	6169548	ParameterType	struct zip_extra_field *		6169507	0					
ANR	6169549	Identifier	ef		6169507	1					
ANR	6169550	CFGEntryNode	ENTRY		6169507		True				
ANR	6169551	CFGExitNode	EXIT		6169507		True				
ANR	6169552	Symbol	ef2		6169507						
ANR	6169553	Symbol	ef -> data		6169507						
ANR	6169554	Symbol	ef		6169507						
ANR	6169555	Symbol	* ef		6169507						
ANR	6169556	Symbol	ef -> next		6169507						
ANR	6169557	Function	_zip_ef_get_by_id	125:0:3206:3772							
ANR	6169558	FunctionDef	"_zip_ef_get_by_id (const struct zip_extra_field * ef , zip_uint16_t * lenp , zip_uint16_t id , zip_uint16_t id_idx , zip_flags_t flags , struct zip_error * error)"		6169557	0					
ANR	6169559	CompoundStatement		127:0:3380:3772	6169557	0					
ANR	6169560	Statement	static	128:4:3386:3391	6169557	0	True				
ANR	6169561	IdentifierDeclStatement	const zip_uint8_t empty [ 1 ] = { '\\0' } ;	128:11:3393:3430	6169557	1	True				
ANR	6169562	IdentifierDecl	empty [ 1 ] = { '\\0' }		6169557	0					
ANR	6169563	IdentifierDeclType	const zip_uint8_t [ 1 ]		6169557	0					
ANR	6169564	Identifier	empty		6169557	1					
ANR	6169565	PrimaryExpression	1		6169557	2					
ANR	6169566	AssignmentExpression	empty [ 1 ] = { '\\0' }		6169557	3		=			
ANR	6169567	Identifier	empty		6169557	0					
ANR	6169568	InitializerList	'\\0'		6169557	1					
ANR	6169569	PrimaryExpression	'\\0'		6169557	0					
ANR	6169570	IdentifierDeclStatement	int i ;	130:4:3441:3446	6169557	2	True				
ANR	6169571	IdentifierDecl	i		6169557	0					
ANR	6169572	IdentifierDeclType	int		6169557	0					
ANR	6169573	Identifier	i		6169557	1					
ANR	6169574	ExpressionStatement	i = 0	132:4:3453:3458	6169557	3	True				
ANR	6169575	AssignmentExpression	i = 0		6169557	0		=			
ANR	6169576	Identifier	i		6169557	0					
ANR	6169577	PrimaryExpression	0		6169557	1					
ANR	6169578	ForStatement	for ( ; ef ; ef = ef -> next )		6169557	4					
ANR	6169579	Condition	ef	133:11:3471:3472	6169557	0	True				
ANR	6169580	Identifier	ef		6169557	0					
ANR	6169581	AssignmentExpression	ef = ef -> next	133:15:3475:3485	6169557	1	True	=			
ANR	6169582	Identifier	ef		6169557	0					
ANR	6169583	PtrMemberAccess	ef -> next		6169557	1					
ANR	6169584	Identifier	ef		6169557	0					
ANR	6169585	Identifier	next		6169557	1					
ANR	6169586	CompoundStatement		7:28:107:107	6169557	2					
ANR	6169587	IfStatement	if ( ef -> id == id && ( ef -> flags & flags & ZIP_EF_BOTH ) )		6169557	0					
ANR	6169588	Condition	ef -> id == id && ( ef -> flags & flags & ZIP_EF_BOTH )	134:5:3495:3543	6169557	0	True				
ANR	6169589	AndExpression	ef -> id == id && ( ef -> flags & flags & ZIP_EF_BOTH )		6169557	0		&&			
ANR	6169590	EqualityExpression	ef -> id == id		6169557	0		==			
ANR	6169591	PtrMemberAccess	ef -> id		6169557	0					
ANR	6169592	Identifier	ef		6169557	0					
ANR	6169593	Identifier	id		6169557	1					
ANR	6169594	Identifier	id		6169557	1					
ANR	6169595	BitAndExpression	ef -> flags & flags & ZIP_EF_BOTH		6169557	1		&			
ANR	6169596	PtrMemberAccess	ef -> flags		6169557	0					
ANR	6169597	Identifier	ef		6169557	0					
ANR	6169598	Identifier	flags		6169557	1					
ANR	6169599	BitAndExpression	flags & ZIP_EF_BOTH		6169557	1		&			
ANR	6169600	Identifier	flags		6169557	0					
ANR	6169601	Identifier	ZIP_EF_BOTH		6169557	1					
ANR	6169602	CompoundStatement		8:56:165:165	6169557	1					
ANR	6169603	IfStatement	if ( i < id_idx )		6169557	0					
ANR	6169604	Condition	i < id_idx	135:9:3557:3566	6169557	0	True				
ANR	6169605	RelationalExpression	i < id_idx		6169557	0		<			
ANR	6169606	Identifier	i		6169557	0					
ANR	6169607	Identifier	id_idx		6169557	1					
ANR	6169608	CompoundStatement		9:21:188:188	6169557	1					
ANR	6169609	ExpressionStatement	i ++	136:2:3573:3576	6169557	0	True				
ANR	6169610	PostIncDecOperationExpression	i ++		6169557	0					
ANR	6169611	Identifier	i		6169557	0					
ANR	6169612	IncDec	++		6169557	1					
ANR	6169613	ContinueStatement	continue ;	137:2:3580:3588	6169557	1	True				
ANR	6169614	IfStatement	if ( lenp )		6169557	1					
ANR	6169615	Condition	lenp	140:9:3607:3610	6169557	0	True				
ANR	6169616	Identifier	lenp		6169557	0					
ANR	6169617	ExpressionStatement	* lenp = ef -> size	141:2:3615:3631	6169557	1	True				
ANR	6169618	AssignmentExpression	* lenp = ef -> size		6169557	0		=			
ANR	6169619	UnaryOperationExpression	* lenp		6169557	0					
ANR	6169620	UnaryOperator	*		6169557	0					
ANR	6169621	Identifier	lenp		6169557	1					
ANR	6169622	PtrMemberAccess	ef -> size		6169557	1					
ANR	6169623	Identifier	ef		6169557	0					
ANR	6169624	Identifier	size		6169557	1					
ANR	6169625	IfStatement	if ( ef -> size > 0 )		6169557	2					
ANR	6169626	Condition	ef -> size > 0	142:9:3642:3653	6169557	0	True				
ANR	6169627	RelationalExpression	ef -> size > 0		6169557	0		>			
ANR	6169628	PtrMemberAccess	ef -> size		6169557	0					
ANR	6169629	Identifier	ef		6169557	0					
ANR	6169630	Identifier	size		6169557	1					
ANR	6169631	PrimaryExpression	0		6169557	1					
ANR	6169632	ReturnStatement	return ef -> data ;	143:2:3658:3673	6169557	1	True				
ANR	6169633	PtrMemberAccess	ef -> data		6169557	0					
ANR	6169634	Identifier	ef		6169557	0					
ANR	6169635	Identifier	data		6169557	1					
ANR	6169636	ElseStatement	else		6169557	0					
ANR	6169637	ReturnStatement	return empty ;	145:2:3687:3699	6169557	0	True				
ANR	6169638	Identifier	empty		6169557	0					
ANR	6169639	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_NOENT , 0 )"	149:4:3715:3753	6169557	5	True				
ANR	6169640	CallExpression	"_zip_error_set ( error , ZIP_ER_NOENT , 0 )"		6169557	0					
ANR	6169641	Callee	_zip_error_set		6169557	0					
ANR	6169642	Identifier	_zip_error_set		6169557	0					
ANR	6169643	ArgumentList	error		6169557	1					
ANR	6169644	Argument	error		6169557	0					
ANR	6169645	Identifier	error		6169557	0					
ANR	6169646	Argument	ZIP_ER_NOENT		6169557	1					
ANR	6169647	Identifier	ZIP_ER_NOENT		6169557	0					
ANR	6169648	Argument	0		6169557	2					
ANR	6169649	PrimaryExpression	0		6169557	0					
ANR	6169650	ReturnStatement	return NULL ;	150:4:3759:3770	6169557	6	True				
ANR	6169651	Identifier	NULL		6169557	0					
ANR	6169652	ReturnType	const zip_uint8_t *		6169557	1					
ANR	6169653	Identifier	_zip_ef_get_by_id		6169557	2					
ANR	6169654	ParameterList	"const struct zip_extra_field * ef , zip_uint16_t * lenp , zip_uint16_t id , zip_uint16_t id_idx , zip_flags_t flags , struct zip_error * error"		6169557	3					
ANR	6169655	Parameter	const struct zip_extra_field * ef	126:18:3244:3275	6169557	0	True				
ANR	6169656	ParameterType	const struct zip_extra_field *		6169557	0					
ANR	6169657	Identifier	ef		6169557	1					
ANR	6169658	Parameter	zip_uint16_t * lenp	126:52:3278:3295	6169557	1	True				
ANR	6169659	ParameterType	zip_uint16_t *		6169557	0					
ANR	6169660	Identifier	lenp		6169557	1					
ANR	6169661	Parameter	zip_uint16_t id	126:72:3298:3312	6169557	2	True				
ANR	6169662	ParameterType	zip_uint16_t		6169557	0					
ANR	6169663	Identifier	id		6169557	1					
ANR	6169664	Parameter	zip_uint16_t id_idx	126:89:3315:3333	6169557	3	True				
ANR	6169665	ParameterType	zip_uint16_t		6169557	0					
ANR	6169666	Identifier	id_idx		6169557	1					
ANR	6169667	Parameter	zip_flags_t flags	126:110:3336:3352	6169557	4	True				
ANR	6169668	ParameterType	zip_flags_t		6169557	0					
ANR	6169669	Identifier	flags		6169557	1					
ANR	6169670	Parameter	struct zip_error * error	126:129:3355:3377	6169557	5	True				
ANR	6169671	ParameterType	struct zip_error *		6169557	0					
ANR	6169672	Identifier	error		6169557	1					
ANR	6169673	CFGEntryNode	ENTRY		6169557		True				
ANR	6169674	CFGExitNode	EXIT		6169557		True				
ANR	6169675	Symbol	ef -> data		6169557						
ANR	6169676	Symbol	ef		6169557						
ANR	6169677	Symbol	id_idx		6169557						
ANR	6169678	Symbol	NULL		6169557						
ANR	6169679	Symbol	* ef		6169557						
ANR	6169680	Symbol	ZIP_EF_BOTH		6169557						
ANR	6169681	Symbol	flags		6169557						
ANR	6169682	Symbol	lenp		6169557						
ANR	6169683	Symbol	i		6169557						
ANR	6169684	Symbol	error		6169557						
ANR	6169685	Symbol	empty		6169557						
ANR	6169686	Symbol	ef -> id		6169557						
ANR	6169687	Symbol	* lenp		6169557						
ANR	6169688	Symbol	ef -> size		6169557						
ANR	6169689	Symbol	ZIP_ER_NOENT		6169557						
ANR	6169690	Symbol	ef -> flags		6169557						
ANR	6169691	Symbol	id		6169557						
ANR	6169692	Symbol	ef -> next		6169557						
ANR	6169693	Function	_zip_ef_merge	155:0:3778:4465							
ANR	6169694	FunctionDef	"_zip_ef_merge (struct zip_extra_field * to , struct zip_extra_field * from)"		6169693	0					
ANR	6169695	CompoundStatement		157:0:3875:4465	6169693	0					
ANR	6169696	IdentifierDeclStatement	"struct zip_extra_field * ef2 , * tt , * tail ;"	158:4:3881:3920	6169693	0	True				
ANR	6169697	IdentifierDecl	* ef2		6169693	0					
ANR	6169698	IdentifierDeclType	struct zip_extra_field *		6169693	0					
ANR	6169699	Identifier	ef2		6169693	1					
ANR	6169700	IdentifierDecl	* tt		6169693	1					
ANR	6169701	IdentifierDeclType	struct zip_extra_field *		6169693	0					
ANR	6169702	Identifier	tt		6169693	1					
ANR	6169703	IdentifierDecl	* tail		6169693	2					
ANR	6169704	IdentifierDeclType	struct zip_extra_field *		6169693	0					
ANR	6169705	Identifier	tail		6169693	1					
ANR	6169706	IdentifierDeclStatement	int duplicate ;	159:4:3926:3939	6169693	1	True				
ANR	6169707	IdentifierDecl	duplicate		6169693	0					
ANR	6169708	IdentifierDeclType	int		6169693	0					
ANR	6169709	Identifier	duplicate		6169693	1					
ANR	6169710	IfStatement	if ( to == NULL )		6169693	2					
ANR	6169711	Condition	to == NULL	161:8:3950:3959	6169693	0	True				
ANR	6169712	EqualityExpression	to == NULL		6169693	0		==			
ANR	6169713	Identifier	to		6169693	0					
ANR	6169714	Identifier	NULL		6169693	1					
ANR	6169715	ReturnStatement	return from ;	162:1:3963:3974	6169693	1	True				
ANR	6169716	Identifier	from		6169693	0					
ANR	6169717	ForStatement	for ( tail = to ; tail -> next ; tail = tail -> next )		6169693	3					
ANR	6169718	ForInit	tail = to ;	164:9:3986:3993	6169693	0	True				
ANR	6169719	AssignmentExpression	tail = to		6169693	0		=			
ANR	6169720	Identifier	tail		6169693	0					
ANR	6169721	Identifier	to		6169693	1					
ANR	6169722	Condition	tail -> next	164:18:3995:4004	6169693	1	True				
ANR	6169723	PtrMemberAccess	tail -> next		6169693	0					
ANR	6169724	Identifier	tail		6169693	0					
ANR	6169725	Identifier	next		6169693	1					
ANR	6169726	AssignmentExpression	tail = tail -> next	164:30:4007:4021	6169693	2	True	=			
ANR	6169727	Identifier	tail		6169693	0					
ANR	6169728	PtrMemberAccess	tail -> next		6169693	1					
ANR	6169729	Identifier	tail		6169693	0					
ANR	6169730	Identifier	next		6169693	1					
ANR	6169731	ExpressionStatement		165:1:4025:4025	6169693	3	True				
ANR	6169732	ForStatement	for ( ; from ; from = ef2 )		6169693	4					
ANR	6169733	Condition	from	167:11:4039:4042	6169693	0	True				
ANR	6169734	Identifier	from		6169693	0					
ANR	6169735	AssignmentExpression	from = ef2	167:17:4045:4052	6169693	1	True	=			
ANR	6169736	Identifier	from		6169693	0					
ANR	6169737	Identifier	ef2		6169693	1					
ANR	6169738	CompoundStatement		11:27:179:179	6169693	2					
ANR	6169739	ExpressionStatement	ef2 = from -> next	168:1:4058:4074	6169693	0	True				
ANR	6169740	AssignmentExpression	ef2 = from -> next		6169693	0		=			
ANR	6169741	Identifier	ef2		6169693	0					
ANR	6169742	PtrMemberAccess	from -> next		6169693	1					
ANR	6169743	Identifier	from		6169693	0					
ANR	6169744	Identifier	next		6169693	1					
ANR	6169745	ExpressionStatement	duplicate = 0	170:1:4078:4091	6169693	1	True				
ANR	6169746	AssignmentExpression	duplicate = 0		6169693	0		=			
ANR	6169747	Identifier	duplicate		6169693	0					
ANR	6169748	PrimaryExpression	0		6169693	1					
ANR	6169749	ForStatement	for ( tt = to ; tt ; tt = tt -> next )		6169693	2					
ANR	6169750	ForInit	tt = to ;	171:6:4099:4104	6169693	0	True				
ANR	6169751	AssignmentExpression	tt = to		6169693	0		=			
ANR	6169752	Identifier	tt		6169693	0					
ANR	6169753	Identifier	to		6169693	1					
ANR	6169754	Condition	tt	171:13:4106:4107	6169693	1	True				
ANR	6169755	Identifier	tt		6169693	0					
ANR	6169756	AssignmentExpression	tt = tt -> next	171:17:4110:4120	6169693	2	True	=			
ANR	6169757	Identifier	tt		6169693	0					
ANR	6169758	PtrMemberAccess	tt -> next		6169693	1					
ANR	6169759	Identifier	tt		6169693	0					
ANR	6169760	Identifier	next		6169693	1					
ANR	6169761	CompoundStatement		15:30:247:247	6169693	3					
ANR	6169762	IfStatement	if ( tt -> id == from -> id && tt -> size == from -> size )		6169693	0					
ANR	6169763	Condition	tt -> id == from -> id && tt -> size == from -> size	172:9:4134:4177	6169693	0	True				
ANR	6169764	AndExpression	tt -> id == from -> id && tt -> size == from -> size		6169693	0		&&			
ANR	6169765	EqualityExpression	tt -> id == from -> id		6169693	0		==			
ANR	6169766	PtrMemberAccess	tt -> id		6169693	0					
ANR	6169767	Identifier	tt		6169693	0					
ANR	6169768	Identifier	id		6169693	1					
ANR	6169769	PtrMemberAccess	from -> id		6169693	1					
ANR	6169770	Identifier	from		6169693	0					
ANR	6169771	Identifier	id		6169693	1					
ANR	6169772	EqualityExpression	tt -> size == from -> size		6169693	1		==			
ANR	6169773	PtrMemberAccess	tt -> size		6169693	0					
ANR	6169774	Identifier	tt		6169693	0					
ANR	6169775	Identifier	size		6169693	1					
ANR	6169776	PtrMemberAccess	from -> size		6169693	1					
ANR	6169777	Identifier	from		6169693	0					
ANR	6169778	Identifier	size		6169693	1					
ANR	6169779	CompoundStatement		16:55:304:304	6169693	1					
ANR	6169780	IfStatement	"if ( tt -> data && from -> data && ! memcmp ( tt -> data , from -> data , tt -> size ) )"		6169693	0					
ANR	6169781	Condition	"tt -> data && from -> data && ! memcmp ( tt -> data , from -> data , tt -> size )"	173:6:4188:4252	6169693	0	True				
ANR	6169782	AndExpression	"tt -> data && from -> data && ! memcmp ( tt -> data , from -> data , tt -> size )"		6169693	0		&&			
ANR	6169783	PtrMemberAccess	tt -> data		6169693	0					
ANR	6169784	Identifier	tt		6169693	0					
ANR	6169785	Identifier	data		6169693	1					
ANR	6169786	AndExpression	"from -> data && ! memcmp ( tt -> data , from -> data , tt -> size )"		6169693	1		&&			
ANR	6169787	PtrMemberAccess	from -> data		6169693	0					
ANR	6169788	Identifier	from		6169693	0					
ANR	6169789	Identifier	data		6169693	1					
ANR	6169790	UnaryOperationExpression	"! memcmp ( tt -> data , from -> data , tt -> size )"		6169693	1					
ANR	6169791	UnaryOperator	!		6169693	0					
ANR	6169792	CallExpression	"memcmp ( tt -> data , from -> data , tt -> size )"		6169693	1					
ANR	6169793	Callee	memcmp		6169693	0					
ANR	6169794	Identifier	memcmp		6169693	0					
ANR	6169795	ArgumentList	tt -> data		6169693	1					
ANR	6169796	Argument	tt -> data		6169693	0					
ANR	6169797	PtrMemberAccess	tt -> data		6169693	0					
ANR	6169798	Identifier	tt		6169693	0					
ANR	6169799	Identifier	data		6169693	1					
ANR	6169800	Argument	from -> data		6169693	1					
ANR	6169801	PtrMemberAccess	from -> data		6169693	0					
ANR	6169802	Identifier	from		6169693	0					
ANR	6169803	Identifier	data		6169693	1					
ANR	6169804	Argument	tt -> size		6169693	2					
ANR	6169805	PtrMemberAccess	tt -> size		6169693	0					
ANR	6169806	Identifier	tt		6169693	0					
ANR	6169807	Identifier	size		6169693	1					
ANR	6169808	CompoundStatement		17:73:379:379	6169693	1					
ANR	6169809	ExpressionStatement	tt -> flags |= ( from -> flags & ZIP_EF_BOTH )	174:3:4260:4300	6169693	0	True				
ANR	6169810	AssignmentExpression	tt -> flags |= ( from -> flags & ZIP_EF_BOTH )		6169693	0		|=			
ANR	6169811	PtrMemberAccess	tt -> flags		6169693	0					
ANR	6169812	Identifier	tt		6169693	0					
ANR	6169813	Identifier	flags		6169693	1					
ANR	6169814	BitAndExpression	from -> flags & ZIP_EF_BOTH		6169693	1		&			
ANR	6169815	PtrMemberAccess	from -> flags		6169693	0					
ANR	6169816	Identifier	from		6169693	0					
ANR	6169817	Identifier	flags		6169693	1					
ANR	6169818	Identifier	ZIP_EF_BOTH		6169693	1					
ANR	6169819	ExpressionStatement	duplicate = 1	175:3:4305:4318	6169693	1	True				
ANR	6169820	AssignmentExpression	duplicate = 1		6169693	0		=			
ANR	6169821	Identifier	duplicate		6169693	0					
ANR	6169822	PrimaryExpression	1		6169693	1					
ANR	6169823	BreakStatement	break ;	176:3:4323:4328	6169693	2	True				
ANR	6169824	ExpressionStatement	from -> next = NULL	181:1:4346:4363	6169693	3	True				
ANR	6169825	AssignmentExpression	from -> next = NULL		6169693	0		=			
ANR	6169826	PtrMemberAccess	from -> next		6169693	0					
ANR	6169827	Identifier	from		6169693	0					
ANR	6169828	Identifier	next		6169693	1					
ANR	6169829	Identifier	NULL		6169693	1					
ANR	6169830	IfStatement	if ( duplicate )		6169693	4					
ANR	6169831	Condition	duplicate	182:5:4370:4378	6169693	0	True				
ANR	6169832	Identifier	duplicate		6169693	0					
ANR	6169833	ExpressionStatement	_zip_ef_free ( from )	183:5:4386:4404	6169693	1	True				
ANR	6169834	CallExpression	_zip_ef_free ( from )		6169693	0					
ANR	6169835	Callee	_zip_ef_free		6169693	0					
ANR	6169836	Identifier	_zip_ef_free		6169693	0					
ANR	6169837	ArgumentList	from		6169693	1					
ANR	6169838	Argument	from		6169693	0					
ANR	6169839	Identifier	from		6169693	0					
ANR	6169840	ElseStatement	else		6169693	0					
ANR	6169841	ExpressionStatement	tail = tail -> next = from	185:5:4417:4441	6169693	0	True				
ANR	6169842	AssignmentExpression	tail = tail -> next = from		6169693	0		=			
ANR	6169843	Identifier	tail		6169693	0					
ANR	6169844	AssignmentExpression	tail -> next = from		6169693	1		=			
ANR	6169845	PtrMemberAccess	tail -> next		6169693	0					
ANR	6169846	Identifier	tail		6169693	0					
ANR	6169847	Identifier	next		6169693	1					
ANR	6169848	Identifier	from		6169693	1					
ANR	6169849	ReturnStatement	return to ;	188:4:4454:4463	6169693	5	True				
ANR	6169850	Identifier	to		6169693	0					
ANR	6169851	ReturnType	struct zip_extra_field *		6169693	1					
ANR	6169852	Identifier	_zip_ef_merge		6169693	2					
ANR	6169853	ParameterList	"struct zip_extra_field * to , struct zip_extra_field * from"		6169693	3					
ANR	6169854	Parameter	struct zip_extra_field * to	156:14:3817:3842	6169693	0	True				
ANR	6169855	ParameterType	struct zip_extra_field *		6169693	0					
ANR	6169856	Identifier	to		6169693	1					
ANR	6169857	Parameter	struct zip_extra_field * from	156:42:3845:3872	6169693	1	True				
ANR	6169858	ParameterType	struct zip_extra_field *		6169693	0					
ANR	6169859	Identifier	from		6169693	1					
ANR	6169860	CFGEntryNode	ENTRY		6169693		True				
ANR	6169861	CFGExitNode	EXIT		6169693		True				
ANR	6169862	Symbol	tt		6169693						
ANR	6169863	Symbol	tt -> flags		6169693						
ANR	6169864	Symbol	from -> flags		6169693						
ANR	6169865	Symbol	* tail		6169693						
ANR	6169866	Symbol	NULL		6169693						
ANR	6169867	Symbol	from -> size		6169693						
ANR	6169868	Symbol	ZIP_EF_BOTH		6169693						
ANR	6169869	Symbol	* tt		6169693						
ANR	6169870	Symbol	tail		6169693						
ANR	6169871	Symbol	tt -> id		6169693						
ANR	6169872	Symbol	tt -> next		6169693						
ANR	6169873	Symbol	duplicate		6169693						
ANR	6169874	Symbol	from -> id		6169693						
ANR	6169875	Symbol	ef2		6169693						
ANR	6169876	Symbol	memcmp		6169693						
ANR	6169877	Symbol	from -> data		6169693						
ANR	6169878	Symbol	tail -> next		6169693						
ANR	6169879	Symbol	from -> next		6169693						
ANR	6169880	Symbol	from		6169693						
ANR	6169881	Symbol	to		6169693						
ANR	6169882	Symbol	tt -> size		6169693						
ANR	6169883	Symbol	tt -> data		6169693						
ANR	6169884	Symbol	* from		6169693						
ANR	6169885	Function	_zip_ef_new	193:0:4471:4980							
ANR	6169886	FunctionDef	"_zip_ef_new (zip_uint16_t id , zip_uint16_t size , const zip_uint8_t * data , zip_flags_t flags)"		6169885	0					
ANR	6169887	CompoundStatement		195:0:4588:4980	6169885	0					
ANR	6169888	IdentifierDeclStatement	struct zip_extra_field * ef ;	196:4:4594:4620	6169885	0	True				
ANR	6169889	IdentifierDecl	* ef		6169885	0					
ANR	6169890	IdentifierDeclType	struct zip_extra_field *		6169885	0					
ANR	6169891	Identifier	ef		6169885	1					
ANR	6169892	IfStatement	if ( ( ef = ( struct zip_extra_field * ) malloc ( sizeof ( * ef ) ) ) == NULL )		6169885	1					
ANR	6169893	Condition	( ef = ( struct zip_extra_field * ) malloc ( sizeof ( * ef ) ) ) == NULL	198:8:4631:4688	6169885	0	True				
ANR	6169894	EqualityExpression	( ef = ( struct zip_extra_field * ) malloc ( sizeof ( * ef ) ) ) == NULL		6169885	0		==			
ANR	6169895	AssignmentExpression	ef = ( struct zip_extra_field * ) malloc ( sizeof ( * ef ) )		6169885	0		=			
ANR	6169896	Identifier	ef		6169885	0					
ANR	6169897	CastExpression	( struct zip_extra_field * ) malloc ( sizeof ( * ef ) )		6169885	1					
ANR	6169898	CastTarget	struct zip_extra_field *		6169885	0					
ANR	6169899	CallExpression	malloc ( sizeof ( * ef ) )		6169885	1					
ANR	6169900	Callee	malloc		6169885	0					
ANR	6169901	Identifier	malloc		6169885	0					
ANR	6169902	ArgumentList	sizeof ( * ef )		6169885	1					
ANR	6169903	Argument	sizeof ( * ef )		6169885	0					
ANR	6169904	SizeofExpression	sizeof ( * ef )		6169885	0					
ANR	6169905	Sizeof	sizeof		6169885	0					
ANR	6169906	UnaryOperationExpression	* ef		6169885	1					
ANR	6169907	UnaryOperator	*		6169885	0					
ANR	6169908	Identifier	ef		6169885	1					
ANR	6169909	Identifier	NULL		6169885	1					
ANR	6169910	ReturnStatement	return NULL ;	199:1:4692:4703	6169885	1	True				
ANR	6169911	Identifier	NULL		6169885	0					
ANR	6169912	ExpressionStatement	ef -> next = NULL	201:4:4710:4725	6169885	2	True				
ANR	6169913	AssignmentExpression	ef -> next = NULL		6169885	0		=			
ANR	6169914	PtrMemberAccess	ef -> next		6169885	0					
ANR	6169915	Identifier	ef		6169885	0					
ANR	6169916	Identifier	next		6169885	1					
ANR	6169917	Identifier	NULL		6169885	1					
ANR	6169918	ExpressionStatement	ef -> flags = flags	202:4:4731:4748	6169885	3	True				
ANR	6169919	AssignmentExpression	ef -> flags = flags		6169885	0		=			
ANR	6169920	PtrMemberAccess	ef -> flags		6169885	0					
ANR	6169921	Identifier	ef		6169885	0					
ANR	6169922	Identifier	flags		6169885	1					
ANR	6169923	Identifier	flags		6169885	1					
ANR	6169924	ExpressionStatement	ef -> data = NULL	203:1:4751:4766	6169885	4	True				
ANR	6169925	AssignmentExpression	ef -> data = NULL		6169885	0		=			
ANR	6169926	PtrMemberAccess	ef -> data		6169885	0					
ANR	6169927	Identifier	ef		6169885	0					
ANR	6169928	Identifier	data		6169885	1					
ANR	6169929	Identifier	NULL		6169885	1					
ANR	6169930	ExpressionStatement	ef -> id = id	204:4:4772:4783	6169885	5	True				
ANR	6169931	AssignmentExpression	ef -> id = id		6169885	0		=			
ANR	6169932	PtrMemberAccess	ef -> id		6169885	0					
ANR	6169933	Identifier	ef		6169885	0					
ANR	6169934	Identifier	id		6169885	1					
ANR	6169935	Identifier	id		6169885	1					
ANR	6169936	ExpressionStatement	ef -> size = size	205:4:4789:4804	6169885	6	True				
ANR	6169937	AssignmentExpression	ef -> size = size		6169885	0		=			
ANR	6169938	PtrMemberAccess	ef -> size		6169885	0					
ANR	6169939	Identifier	ef		6169885	0					
ANR	6169940	Identifier	size		6169885	1					
ANR	6169941	Identifier	size		6169885	1					
ANR	6169942	IfStatement	if ( size > 0 )		6169885	7					
ANR	6169943	Condition	size > 0	206:8:4814:4821	6169885	0	True				
ANR	6169944	RelationalExpression	size > 0		6169885	0		>			
ANR	6169945	Identifier	size		6169885	0					
ANR	6169946	PrimaryExpression	0		6169885	1					
ANR	6169947	CompoundStatement		13:1:238:268	6169885	1					
ANR	6169948	IdentifierDeclStatement	zip_uint8_t * p = malloc ( size ) ;	207:1:4827:4857	6169885	0	True				
ANR	6169949	IdentifierDecl	* p = malloc ( size )		6169885	0					
ANR	6169950	IdentifierDeclType	zip_uint8_t *		6169885	0					
ANR	6169951	Identifier	p		6169885	1					
ANR	6169952	AssignmentExpression	* p = malloc ( size )		6169885	2		=			
ANR	6169953	Identifier	p		6169885	0					
ANR	6169954	CallExpression	malloc ( size )		6169885	1					
ANR	6169955	Callee	malloc		6169885	0					
ANR	6169956	Identifier	malloc		6169885	0					
ANR	6169957	ArgumentList	size		6169885	1					
ANR	6169958	Argument	size		6169885	0					
ANR	6169959	Identifier	size		6169885	0					
ANR	6169960	IfStatement	if ( p )		6169885	1					
ANR	6169961	Condition	p	208:5:4864:4864	6169885	0	True				
ANR	6169962	Identifier	p		6169885	0					
ANR	6169963	CompoundStatement		14:8:278:278	6169885	1					
ANR	6169964	ExpressionStatement	ef -> data = p	209:2:4871:4883	6169885	0	True				
ANR	6169965	AssignmentExpression	ef -> data = p		6169885	0		=			
ANR	6169966	PtrMemberAccess	ef -> data		6169885	0					
ANR	6169967	Identifier	ef		6169885	0					
ANR	6169968	Identifier	data		6169885	1					
ANR	6169969	Identifier	p		6169885	1					
ANR	6169970	ExpressionStatement	"memcpy ( p , data , size )"	210:2:4888:4910	6169885	1	True				
ANR	6169971	CallExpression	"memcpy ( p , data , size )"		6169885	0					
ANR	6169972	Callee	memcpy		6169885	0					
ANR	6169973	Identifier	memcpy		6169885	0					
ANR	6169974	ArgumentList	p		6169885	1					
ANR	6169975	Argument	p		6169885	0					
ANR	6169976	Identifier	p		6169885	0					
ANR	6169977	Argument	data		6169885	1					
ANR	6169978	Identifier	data		6169885	0					
ANR	6169979	Argument	size		6169885	2					
ANR	6169980	Identifier	size		6169885	0					
ANR	6169981	ElseStatement	else		6169885	0					
ANR	6169982	CompoundStatement		17:8:331:331	6169885	0					
ANR	6169983	ExpressionStatement	free ( ef )	212:5:4927:4935	6169885	0	True				
ANR	6169984	CallExpression	free ( ef )		6169885	0					
ANR	6169985	Callee	free		6169885	0					
ANR	6169986	Identifier	free		6169885	0					
ANR	6169987	ArgumentList	ef		6169885	1					
ANR	6169988	Argument	ef		6169885	0					
ANR	6169989	Identifier	ef		6169885	0					
ANR	6169990	ReturnStatement	return NULL ;	213:5:4942:4953	6169885	1	True				
ANR	6169991	Identifier	NULL		6169885	0					
ANR	6169992	ReturnStatement	return ef ;	217:4:4969:4978	6169885	8	True				
ANR	6169993	Identifier	ef		6169885	0					
ANR	6169994	ReturnType	struct zip_extra_field *		6169885	1					
ANR	6169995	Identifier	_zip_ef_new		6169885	2					
ANR	6169996	ParameterList	"zip_uint16_t id , zip_uint16_t size , const zip_uint8_t * data , zip_flags_t flags"		6169885	3					
ANR	6169997	Parameter	zip_uint16_t id	194:12:4508:4522	6169885	0	True				
ANR	6169998	ParameterType	zip_uint16_t		6169885	0					
ANR	6169999	Identifier	id		6169885	1					
ANR	6170000	Parameter	zip_uint16_t size	194:29:4525:4541	6169885	1	True				
ANR	6170001	ParameterType	zip_uint16_t		6169885	0					
ANR	6170002	Identifier	size		6169885	1					
ANR	6170003	Parameter	const zip_uint8_t * data	194:48:4544:4566	6169885	2	True				
ANR	6170004	ParameterType	const zip_uint8_t *		6169885	0					
ANR	6170005	Identifier	data		6169885	1					
ANR	6170006	Parameter	zip_flags_t flags	194:73:4569:4585	6169885	3	True				
ANR	6170007	ParameterType	zip_flags_t		6169885	0					
ANR	6170008	Identifier	flags		6169885	1					
ANR	6170009	CFGEntryNode	ENTRY		6169885		True				
ANR	6170010	CFGExitNode	EXIT		6169885		True				
ANR	6170011	Symbol	ef -> data		6169885						
ANR	6170012	Symbol	ef		6169885						
ANR	6170013	Symbol	malloc		6169885						
ANR	6170014	Symbol	NULL		6169885						
ANR	6170015	Symbol	data		6169885						
ANR	6170016	Symbol	* ef		6169885						
ANR	6170017	Symbol	flags		6169885						
ANR	6170018	Symbol	ef -> id		6169885						
ANR	6170019	Symbol	ef -> size		6169885						
ANR	6170020	Symbol	p		6169885						
ANR	6170021	Symbol	size		6169885						
ANR	6170022	Symbol	ef -> flags		6169885						
ANR	6170023	Symbol	id		6169885						
ANR	6170024	Symbol	ef -> next		6169885						
ANR	6170025	Function	_zip_ef_parse	222:0:4986:5830							
ANR	6170026	FunctionDef	"_zip_ef_parse (const zip_uint8_t * data , zip_uint16_t len , zip_flags_t flags , struct zip_error * error)"		6170025	0					
ANR	6170027	CompoundStatement		224:0:5112:5830	6170025	0					
ANR	6170028	IdentifierDeclStatement	"struct zip_extra_field * ef , * ef2 , * ef_head ;"	225:4:5118:5160	6170025	0	True				
ANR	6170029	IdentifierDecl	* ef		6170025	0					
ANR	6170030	IdentifierDeclType	struct zip_extra_field *		6170025	0					
ANR	6170031	Identifier	ef		6170025	1					
ANR	6170032	IdentifierDecl	* ef2		6170025	1					
ANR	6170033	IdentifierDeclType	struct zip_extra_field *		6170025	0					
ANR	6170034	Identifier	ef2		6170025	1					
ANR	6170035	IdentifierDecl	* ef_head		6170025	2					
ANR	6170036	IdentifierDeclType	struct zip_extra_field *		6170025	0					
ANR	6170037	Identifier	ef_head		6170025	1					
ANR	6170038	IdentifierDeclStatement	const zip_uint8_t * p ;	226:4:5166:5186	6170025	1	True				
ANR	6170039	IdentifierDecl	* p		6170025	0					
ANR	6170040	IdentifierDeclType	const zip_uint8_t *		6170025	0					
ANR	6170041	Identifier	p		6170025	1					
ANR	6170042	IdentifierDeclStatement	"zip_uint16_t fid , flen ;"	227:4:5192:5214	6170025	2	True				
ANR	6170043	IdentifierDecl	fid		6170025	0					
ANR	6170044	IdentifierDeclType	zip_uint16_t		6170025	0					
ANR	6170045	Identifier	fid		6170025	1					
ANR	6170046	IdentifierDecl	flen		6170025	1					
ANR	6170047	IdentifierDeclType	zip_uint16_t		6170025	0					
ANR	6170048	Identifier	flen		6170025	1					
ANR	6170049	ExpressionStatement	ef_head = NULL	229:4:5221:5235	6170025	3	True				
ANR	6170050	AssignmentExpression	ef_head = NULL		6170025	0		=			
ANR	6170051	Identifier	ef_head		6170025	0					
ANR	6170052	Identifier	NULL		6170025	1					
ANR	6170053	ForStatement	for ( p = data ; p < data + len ; p += flen )		6170025	4					
ANR	6170054	ForInit	p = data ;	230:9:5246:5252	6170025	0	True				
ANR	6170055	AssignmentExpression	p = data		6170025	0		=			
ANR	6170056	Identifier	p		6170025	0					
ANR	6170057	Identifier	data		6170025	1					
ANR	6170058	Condition	p < data + len	230:17:5254:5263	6170025	1	True				
ANR	6170059	RelationalExpression	p < data + len		6170025	0		<			
ANR	6170060	Identifier	p		6170025	0					
ANR	6170061	AdditiveExpression	data + len		6170025	1		+			
ANR	6170062	Identifier	data		6170025	0					
ANR	6170063	Identifier	len		6170025	1					
ANR	6170064	AssignmentExpression	p += flen	230:29:5266:5272	6170025	2	True	+=			
ANR	6170065	Identifier	p		6170025	0					
ANR	6170066	Identifier	flen		6170025	1					
ANR	6170067	CompoundStatement		7:38:162:162	6170025	3					
ANR	6170068	IfStatement	if ( p + 4 > data + len )		6170025	0					
ANR	6170069	Condition	p + 4 > data + len	231:5:5282:5295	6170025	0	True				
ANR	6170070	RelationalExpression	p + 4 > data + len		6170025	0		>			
ANR	6170071	AdditiveExpression	p + 4		6170025	0		+			
ANR	6170072	Identifier	p		6170025	0					
ANR	6170073	PrimaryExpression	4		6170025	1					
ANR	6170074	AdditiveExpression	data + len		6170025	1		+			
ANR	6170075	Identifier	data		6170025	0					
ANR	6170076	Identifier	len		6170025	1					
ANR	6170077	CompoundStatement		8:21:185:185	6170025	1					
ANR	6170078	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_INCONS , 0 )"	232:5:5305:5344	6170025	0	True				
ANR	6170079	CallExpression	"_zip_error_set ( error , ZIP_ER_INCONS , 0 )"		6170025	0					
ANR	6170080	Callee	_zip_error_set		6170025	0					
ANR	6170081	Identifier	_zip_error_set		6170025	0					
ANR	6170082	ArgumentList	error		6170025	1					
ANR	6170083	Argument	error		6170025	0					
ANR	6170084	Identifier	error		6170025	0					
ANR	6170085	Argument	ZIP_ER_INCONS		6170025	1					
ANR	6170086	Identifier	ZIP_ER_INCONS		6170025	0					
ANR	6170087	Argument	0		6170025	2					
ANR	6170088	PrimaryExpression	0		6170025	0					
ANR	6170089	ExpressionStatement	_zip_ef_free ( ef_head )	233:5:5351:5372	6170025	1	True				
ANR	6170090	CallExpression	_zip_ef_free ( ef_head )		6170025	0					
ANR	6170091	Callee	_zip_ef_free		6170025	0					
ANR	6170092	Identifier	_zip_ef_free		6170025	0					
ANR	6170093	ArgumentList	ef_head		6170025	1					
ANR	6170094	Argument	ef_head		6170025	0					
ANR	6170095	Identifier	ef_head		6170025	0					
ANR	6170096	ReturnStatement	return NULL ;	234:5:5379:5390	6170025	2	True				
ANR	6170097	Identifier	NULL		6170025	0					
ANR	6170098	ExpressionStatement	fid = _zip_read2 ( & p )	237:1:5397:5417	6170025	1	True				
ANR	6170099	AssignmentExpression	fid = _zip_read2 ( & p )		6170025	0		=			
ANR	6170100	Identifier	fid		6170025	0					
ANR	6170101	CallExpression	_zip_read2 ( & p )		6170025	1					
ANR	6170102	Callee	_zip_read2		6170025	0					
ANR	6170103	Identifier	_zip_read2		6170025	0					
ANR	6170104	ArgumentList	& p		6170025	1					
ANR	6170105	Argument	& p		6170025	0					
ANR	6170106	UnaryOperationExpression	& p		6170025	0					
ANR	6170107	UnaryOperator	&		6170025	0					
ANR	6170108	Identifier	p		6170025	1					
ANR	6170109	ExpressionStatement	flen = _zip_read2 ( & p )	238:1:5420:5441	6170025	2	True				
ANR	6170110	AssignmentExpression	flen = _zip_read2 ( & p )		6170025	0		=			
ANR	6170111	Identifier	flen		6170025	0					
ANR	6170112	CallExpression	_zip_read2 ( & p )		6170025	1					
ANR	6170113	Callee	_zip_read2		6170025	0					
ANR	6170114	Identifier	_zip_read2		6170025	0					
ANR	6170115	ArgumentList	& p		6170025	1					
ANR	6170116	Argument	& p		6170025	0					
ANR	6170117	UnaryOperationExpression	& p		6170025	0					
ANR	6170118	UnaryOperator	&		6170025	0					
ANR	6170119	Identifier	p		6170025	1					
ANR	6170120	IfStatement	if ( p + flen > data + len )		6170025	3					
ANR	6170121	Condition	p + flen > data + len	240:5:5449:5465	6170025	0	True				
ANR	6170122	RelationalExpression	p + flen > data + len		6170025	0		>			
ANR	6170123	AdditiveExpression	p + flen		6170025	0		+			
ANR	6170124	Identifier	p		6170025	0					
ANR	6170125	Identifier	flen		6170025	1					
ANR	6170126	AdditiveExpression	data + len		6170025	1		+			
ANR	6170127	Identifier	data		6170025	0					
ANR	6170128	Identifier	len		6170025	1					
ANR	6170129	CompoundStatement		17:24:355:355	6170025	1					
ANR	6170130	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_INCONS , 0 )"	241:5:5475:5514	6170025	0	True				
ANR	6170131	CallExpression	"_zip_error_set ( error , ZIP_ER_INCONS , 0 )"		6170025	0					
ANR	6170132	Callee	_zip_error_set		6170025	0					
ANR	6170133	Identifier	_zip_error_set		6170025	0					
ANR	6170134	ArgumentList	error		6170025	1					
ANR	6170135	Argument	error		6170025	0					
ANR	6170136	Identifier	error		6170025	0					
ANR	6170137	Argument	ZIP_ER_INCONS		6170025	1					
ANR	6170138	Identifier	ZIP_ER_INCONS		6170025	0					
ANR	6170139	Argument	0		6170025	2					
ANR	6170140	PrimaryExpression	0		6170025	0					
ANR	6170141	ExpressionStatement	_zip_ef_free ( ef_head )	242:5:5521:5542	6170025	1	True				
ANR	6170142	CallExpression	_zip_ef_free ( ef_head )		6170025	0					
ANR	6170143	Callee	_zip_ef_free		6170025	0					
ANR	6170144	Identifier	_zip_ef_free		6170025	0					
ANR	6170145	ArgumentList	ef_head		6170025	1					
ANR	6170146	Argument	ef_head		6170025	0					
ANR	6170147	Identifier	ef_head		6170025	0					
ANR	6170148	ReturnStatement	return NULL ;	243:5:5549:5560	6170025	2	True				
ANR	6170149	Identifier	NULL		6170025	0					
ANR	6170150	IfStatement	"if ( ( ef2 = _zip_ef_new ( fid , flen , p , flags ) ) == NULL )"		6170025	4					
ANR	6170151	Condition	"( ef2 = _zip_ef_new ( fid , flen , p , flags ) ) == NULL"	246:5:5571:5616	6170025	0	True				
ANR	6170152	EqualityExpression	"( ef2 = _zip_ef_new ( fid , flen , p , flags ) ) == NULL"		6170025	0		==			
ANR	6170153	AssignmentExpression	"ef2 = _zip_ef_new ( fid , flen , p , flags )"		6170025	0		=			
ANR	6170154	Identifier	ef2		6170025	0					
ANR	6170155	CallExpression	"_zip_ef_new ( fid , flen , p , flags )"		6170025	1					
ANR	6170156	Callee	_zip_ef_new		6170025	0					
ANR	6170157	Identifier	_zip_ef_new		6170025	0					
ANR	6170158	ArgumentList	fid		6170025	1					
ANR	6170159	Argument	fid		6170025	0					
ANR	6170160	Identifier	fid		6170025	0					
ANR	6170161	Argument	flen		6170025	1					
ANR	6170162	Identifier	flen		6170025	0					
ANR	6170163	Argument	p		6170025	2					
ANR	6170164	Identifier	p		6170025	0					
ANR	6170165	Argument	flags		6170025	3					
ANR	6170166	Identifier	flags		6170025	0					
ANR	6170167	Identifier	NULL		6170025	1					
ANR	6170168	CompoundStatement		23:53:506:506	6170025	1					
ANR	6170169	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_MEMORY , 0 )"	247:5:5626:5665	6170025	0	True				
ANR	6170170	CallExpression	"_zip_error_set ( error , ZIP_ER_MEMORY , 0 )"		6170025	0					
ANR	6170171	Callee	_zip_error_set		6170025	0					
ANR	6170172	Identifier	_zip_error_set		6170025	0					
ANR	6170173	ArgumentList	error		6170025	1					
ANR	6170174	Argument	error		6170025	0					
ANR	6170175	Identifier	error		6170025	0					
ANR	6170176	Argument	ZIP_ER_MEMORY		6170025	1					
ANR	6170177	Identifier	ZIP_ER_MEMORY		6170025	0					
ANR	6170178	Argument	0		6170025	2					
ANR	6170179	PrimaryExpression	0		6170025	0					
ANR	6170180	ExpressionStatement	_zip_ef_free ( ef_head )	248:5:5672:5693	6170025	1	True				
ANR	6170181	CallExpression	_zip_ef_free ( ef_head )		6170025	0					
ANR	6170182	Callee	_zip_ef_free		6170025	0					
ANR	6170183	Identifier	_zip_ef_free		6170025	0					
ANR	6170184	ArgumentList	ef_head		6170025	1					
ANR	6170185	Argument	ef_head		6170025	0					
ANR	6170186	Identifier	ef_head		6170025	0					
ANR	6170187	ReturnStatement	return NULL ;	249:5:5700:5711	6170025	2	True				
ANR	6170188	Identifier	NULL		6170025	0					
ANR	6170189	IfStatement	if ( ef_head )		6170025	5					
ANR	6170190	Condition	ef_head	252:5:5722:5728	6170025	0	True				
ANR	6170191	Identifier	ef_head		6170025	0					
ANR	6170192	CompoundStatement		29:14:618:618	6170025	1					
ANR	6170193	ExpressionStatement	ef -> next = ef2	253:5:5738:5752	6170025	0	True				
ANR	6170194	AssignmentExpression	ef -> next = ef2		6170025	0		=			
ANR	6170195	PtrMemberAccess	ef -> next		6170025	0					
ANR	6170196	Identifier	ef		6170025	0					
ANR	6170197	Identifier	next		6170025	1					
ANR	6170198	Identifier	ef2		6170025	1					
ANR	6170199	ExpressionStatement	ef = ef2	254:5:5759:5767	6170025	1	True				
ANR	6170200	AssignmentExpression	ef = ef2		6170025	0		=			
ANR	6170201	Identifier	ef		6170025	0					
ANR	6170202	Identifier	ef2		6170025	1					
ANR	6170203	ElseStatement	else		6170025	0					
ANR	6170204	ExpressionStatement	ef_head = ef = ef2	257:5:5783:5801	6170025	0	True				
ANR	6170205	AssignmentExpression	ef_head = ef = ef2		6170025	0		=			
ANR	6170206	Identifier	ef_head		6170025	0					
ANR	6170207	AssignmentExpression	ef = ef2		6170025	1		=			
ANR	6170208	Identifier	ef		6170025	0					
ANR	6170209	Identifier	ef2		6170025	1					
ANR	6170210	ReturnStatement	return ef_head ;	260:4:5814:5828	6170025	5	True				
ANR	6170211	Identifier	ef_head		6170025	0					
ANR	6170212	ReturnType	struct zip_extra_field *		6170025	1					
ANR	6170213	Identifier	_zip_ef_parse		6170025	2					
ANR	6170214	ParameterList	"const zip_uint8_t * data , zip_uint16_t len , zip_flags_t flags , struct zip_error * error"		6170025	3					
ANR	6170215	Parameter	const zip_uint8_t * data	223:14:5025:5047	6170025	0	True				
ANR	6170216	ParameterType	const zip_uint8_t *		6170025	0					
ANR	6170217	Identifier	data		6170025	1					
ANR	6170218	Parameter	zip_uint16_t len	223:39:5050:5065	6170025	1	True				
ANR	6170219	ParameterType	zip_uint16_t		6170025	0					
ANR	6170220	Identifier	len		6170025	1					
ANR	6170221	Parameter	zip_flags_t flags	223:57:5068:5084	6170025	2	True				
ANR	6170222	ParameterType	zip_flags_t		6170025	0					
ANR	6170223	Identifier	flags		6170025	1					
ANR	6170224	Parameter	struct zip_error * error	223:76:5087:5109	6170025	3	True				
ANR	6170225	ParameterType	struct zip_error *		6170025	0					
ANR	6170226	Identifier	error		6170025	1					
ANR	6170227	CFGEntryNode	ENTRY		6170025		True				
ANR	6170228	CFGExitNode	EXIT		6170025		True				
ANR	6170229	Symbol	fid		6170025						
ANR	6170230	Symbol	flen		6170025						
ANR	6170231	Symbol	ef		6170025						
ANR	6170232	Symbol	NULL		6170025						
ANR	6170233	Symbol	data		6170025						
ANR	6170234	Symbol	* ef		6170025						
ANR	6170235	Symbol	flags		6170025						
ANR	6170236	Symbol	error		6170025						
ANR	6170237	Symbol	ef2		6170025						
ANR	6170238	Symbol	p		6170025						
ANR	6170239	Symbol	ef_head		6170025						
ANR	6170240	Symbol	len		6170025						
ANR	6170241	Symbol	& p		6170025						
ANR	6170242	Symbol	_zip_ef_new		6170025						
ANR	6170243	Symbol	ZIP_ER_INCONS		6170025						
ANR	6170244	Symbol	_zip_read2		6170025						
ANR	6170245	Symbol	ZIP_ER_MEMORY		6170025						
ANR	6170246	Symbol	ef -> next		6170025						
ANR	6170247	Function	_zip_ef_remove_internal	265:0:5836:6444							
ANR	6170248	FunctionDef	_zip_ef_remove_internal (struct zip_extra_field * ef)		6170247	0					
ANR	6170249	CompoundStatement		267:0:5913:6444	6170247	0					
ANR	6170250	IdentifierDeclStatement	struct zip_extra_field * ef_head ;	268:4:5919:5950	6170247	0	True				
ANR	6170251	IdentifierDecl	* ef_head		6170247	0					
ANR	6170252	IdentifierDeclType	struct zip_extra_field *		6170247	0					
ANR	6170253	Identifier	ef_head		6170247	1					
ANR	6170254	IdentifierDeclStatement	"struct zip_extra_field * prev , * next ;"	269:4:5956:5991	6170247	1	True				
ANR	6170255	IdentifierDecl	* prev		6170247	0					
ANR	6170256	IdentifierDeclType	struct zip_extra_field *		6170247	0					
ANR	6170257	Identifier	prev		6170247	1					
ANR	6170258	IdentifierDecl	* next		6170247	1					
ANR	6170259	IdentifierDeclType	struct zip_extra_field *		6170247	0					
ANR	6170260	Identifier	next		6170247	1					
ANR	6170261	ExpressionStatement	ef_head = ef	271:4:6002:6014	6170247	2	True				
ANR	6170262	AssignmentExpression	ef_head = ef		6170247	0		=			
ANR	6170263	Identifier	ef_head		6170247	0					
ANR	6170264	Identifier	ef		6170247	1					
ANR	6170265	ExpressionStatement	prev = NULL	272:4:6020:6031	6170247	3	True				
ANR	6170266	AssignmentExpression	prev = NULL		6170247	0		=			
ANR	6170267	Identifier	prev		6170247	0					
ANR	6170268	Identifier	NULL		6170247	1					
ANR	6170269	WhileStatement	while ( ef )		6170247	4					
ANR	6170270	Condition	ef	274:11:6049:6050	6170247	0	True				
ANR	6170271	Identifier	ef		6170247	0					
ANR	6170272	CompoundStatement		8:15:139:139	6170247	1					
ANR	6170273	IfStatement	if ( ZIP_EF_IS_INTERNAL ( ef -> id ) )		6170247	0					
ANR	6170274	Condition	ZIP_EF_IS_INTERNAL ( ef -> id )	275:12:6067:6092	6170247	0	True				
ANR	6170275	CallExpression	ZIP_EF_IS_INTERNAL ( ef -> id )		6170247	0					
ANR	6170276	Callee	ZIP_EF_IS_INTERNAL		6170247	0					
ANR	6170277	Identifier	ZIP_EF_IS_INTERNAL		6170247	0					
ANR	6170278	ArgumentList	ef -> id		6170247	1					
ANR	6170279	Argument	ef -> id		6170247	0					
ANR	6170280	PtrMemberAccess	ef -> id		6170247	0					
ANR	6170281	Identifier	ef		6170247	0					
ANR	6170282	Identifier	id		6170247	1					
ANR	6170283	CompoundStatement		9:40:181:181	6170247	1					
ANR	6170284	ExpressionStatement	next = ef -> next	276:12:6109:6124	6170247	0	True				
ANR	6170285	AssignmentExpression	next = ef -> next		6170247	0		=			
ANR	6170286	Identifier	next		6170247	0					
ANR	6170287	PtrMemberAccess	ef -> next		6170247	1					
ANR	6170288	Identifier	ef		6170247	0					
ANR	6170289	Identifier	next		6170247	1					
ANR	6170290	IfStatement	if ( ef_head == ef )		6170247	1					
ANR	6170291	Condition	ef_head == ef	277:16:6142:6154	6170247	0	True				
ANR	6170292	EqualityExpression	ef_head == ef		6170247	0		==			
ANR	6170293	Identifier	ef_head		6170247	0					
ANR	6170294	Identifier	ef		6170247	1					
ANR	6170295	ExpressionStatement	ef_head = next	278:16:6173:6187	6170247	1	True				
ANR	6170296	AssignmentExpression	ef_head = next		6170247	0		=			
ANR	6170297	Identifier	ef_head		6170247	0					
ANR	6170298	Identifier	next		6170247	1					
ANR	6170299	ExpressionStatement	ef -> next = NULL	279:12:6201:6216	6170247	2	True				
ANR	6170300	AssignmentExpression	ef -> next = NULL		6170247	0		=			
ANR	6170301	PtrMemberAccess	ef -> next		6170247	0					
ANR	6170302	Identifier	ef		6170247	0					
ANR	6170303	Identifier	next		6170247	1					
ANR	6170304	Identifier	NULL		6170247	1					
ANR	6170305	ExpressionStatement	_zip_ef_free ( ef )	280:12:6230:6246	6170247	3	True				
ANR	6170306	CallExpression	_zip_ef_free ( ef )		6170247	0					
ANR	6170307	Callee	_zip_ef_free		6170247	0					
ANR	6170308	Identifier	_zip_ef_free		6170247	0					
ANR	6170309	ArgumentList	ef		6170247	1					
ANR	6170310	Argument	ef		6170247	0					
ANR	6170311	Identifier	ef		6170247	0					
ANR	6170312	IfStatement	if ( prev )		6170247	4					
ANR	6170313	Condition	prev	281:16:6264:6267	6170247	0	True				
ANR	6170314	Identifier	prev		6170247	0					
ANR	6170315	ExpressionStatement	prev -> next = next	282:16:6286:6303	6170247	1	True				
ANR	6170316	AssignmentExpression	prev -> next = next		6170247	0		=			
ANR	6170317	PtrMemberAccess	prev -> next		6170247	0					
ANR	6170318	Identifier	prev		6170247	0					
ANR	6170319	Identifier	next		6170247	1					
ANR	6170320	Identifier	next		6170247	1					
ANR	6170321	ExpressionStatement	ef = next	283:12:6317:6326	6170247	5	True				
ANR	6170322	AssignmentExpression	ef = next		6170247	0		=			
ANR	6170323	Identifier	ef		6170247	0					
ANR	6170324	Identifier	next		6170247	1					
ANR	6170325	ElseStatement	else		6170247	0					
ANR	6170326	CompoundStatement		19:13:437:437	6170247	0					
ANR	6170327	ExpressionStatement	prev = ef	286:12:6365:6374	6170247	0	True				
ANR	6170328	AssignmentExpression	prev = ef		6170247	0		=			
ANR	6170329	Identifier	prev		6170247	0					
ANR	6170330	Identifier	ef		6170247	1					
ANR	6170331	ExpressionStatement	ef = ef -> next	287:12:6388:6401	6170247	1	True				
ANR	6170332	AssignmentExpression	ef = ef -> next		6170247	0		=			
ANR	6170333	Identifier	ef		6170247	0					
ANR	6170334	PtrMemberAccess	ef -> next		6170247	1					
ANR	6170335	Identifier	ef		6170247	0					
ANR	6170336	Identifier	next		6170247	1					
ANR	6170337	ReturnStatement	return ef_head ;	291:4:6428:6442	6170247	5	True				
ANR	6170338	Identifier	ef_head		6170247	0					
ANR	6170339	ReturnType	struct zip_extra_field *		6170247	1					
ANR	6170340	Identifier	_zip_ef_remove_internal		6170247	2					
ANR	6170341	ParameterList	struct zip_extra_field * ef		6170247	3					
ANR	6170342	Parameter	struct zip_extra_field * ef	266:24:5885:5910	6170247	0	True				
ANR	6170343	ParameterType	struct zip_extra_field *		6170247	0					
ANR	6170344	Identifier	ef		6170247	1					
ANR	6170345	CFGEntryNode	ENTRY		6170247		True				
ANR	6170346	CFGExitNode	EXIT		6170247		True				
ANR	6170347	Symbol	next		6170247						
ANR	6170348	Symbol	prev -> next		6170247						
ANR	6170349	Symbol	ef		6170247						
ANR	6170350	Symbol	ef_head		6170247						
ANR	6170351	Symbol	NULL		6170247						
ANR	6170352	Symbol	* ef		6170247						
ANR	6170353	Symbol	ZIP_EF_IS_INTERNAL		6170247						
ANR	6170354	Symbol	prev		6170247						
ANR	6170355	Symbol	* prev		6170247						
ANR	6170356	Symbol	ef -> next		6170247						
ANR	6170357	Symbol	ef -> id		6170247						
ANR	6170358	Function	_zip_ef_size	295:0:6448:6684							
ANR	6170359	FunctionDef	"_zip_ef_size (const struct zip_extra_field * ef , zip_flags_t flags)"		6170358	0					
ANR	6170360	CompoundStatement		297:0:6527:6684	6170358	0					
ANR	6170361	IdentifierDeclStatement	zip_uint16_t size ;	298:4:6533:6550	6170358	0	True				
ANR	6170362	IdentifierDecl	size		6170358	0					
ANR	6170363	IdentifierDeclType	zip_uint16_t		6170358	0					
ANR	6170364	Identifier	size		6170358	1					
ANR	6170365	ExpressionStatement	size = 0	300:4:6557:6565	6170358	1	True				
ANR	6170366	AssignmentExpression	size = 0		6170358	0		=			
ANR	6170367	Identifier	size		6170358	0					
ANR	6170368	PrimaryExpression	0		6170358	1					
ANR	6170369	ForStatement	for ( ; ef ; ef = ef -> next )		6170358	2					
ANR	6170370	Condition	ef	301:11:6578:6579	6170358	0	True				
ANR	6170371	Identifier	ef		6170358	0					
ANR	6170372	AssignmentExpression	ef = ef -> next	301:15:6582:6592	6170358	1	True	=			
ANR	6170373	Identifier	ef		6170358	0					
ANR	6170374	PtrMemberAccess	ef -> next		6170358	1					
ANR	6170375	Identifier	ef		6170358	0					
ANR	6170376	Identifier	next		6170358	1					
ANR	6170377	CompoundStatement		5:28:67:67	6170358	2					
ANR	6170378	IfStatement	if ( ef -> flags & flags & ZIP_EF_BOTH )		6170358	0					
ANR	6170379	Condition	ef -> flags & flags & ZIP_EF_BOTH	302:5:6602:6632	6170358	0	True				
ANR	6170380	BitAndExpression	ef -> flags & flags & ZIP_EF_BOTH		6170358	0		&			
ANR	6170381	PtrMemberAccess	ef -> flags		6170358	0					
ANR	6170382	Identifier	ef		6170358	0					
ANR	6170383	Identifier	flags		6170358	1					
ANR	6170384	BitAndExpression	flags & ZIP_EF_BOTH		6170358	1		&			
ANR	6170385	Identifier	flags		6170358	0					
ANR	6170386	Identifier	ZIP_EF_BOTH		6170358	1					
ANR	6170387	ExpressionStatement	size += 4 + ef -> size	303:5:6640:6658	6170358	1	True				
ANR	6170388	AssignmentExpression	size += 4 + ef -> size		6170358	0		+=			
ANR	6170389	Identifier	size		6170358	0					
ANR	6170390	AdditiveExpression	4 + ef -> size		6170358	1		+			
ANR	6170391	PrimaryExpression	4		6170358	0					
ANR	6170392	PtrMemberAccess	ef -> size		6170358	1					
ANR	6170393	Identifier	ef		6170358	0					
ANR	6170394	Identifier	size		6170358	1					
ANR	6170395	ReturnStatement	return size ;	306:4:6671:6682	6170358	3	True				
ANR	6170396	Identifier	size		6170358	0					
ANR	6170397	ReturnType	zip_uint16_t		6170358	1					
ANR	6170398	Identifier	_zip_ef_size		6170358	2					
ANR	6170399	ParameterList	"const struct zip_extra_field * ef , zip_flags_t flags"		6170358	3					
ANR	6170400	Parameter	const struct zip_extra_field * ef	296:13:6474:6505	6170358	0	True				
ANR	6170401	ParameterType	const struct zip_extra_field *		6170358	0					
ANR	6170402	Identifier	ef		6170358	1					
ANR	6170403	Parameter	zip_flags_t flags	296:47:6508:6524	6170358	1	True				
ANR	6170404	ParameterType	zip_flags_t		6170358	0					
ANR	6170405	Identifier	flags		6170358	1					
ANR	6170406	CFGEntryNode	ENTRY		6170358		True				
ANR	6170407	CFGExitNode	EXIT		6170358		True				
ANR	6170408	Symbol	ef -> size		6170358						
ANR	6170409	Symbol	ef		6170358						
ANR	6170410	Symbol	size		6170358						
ANR	6170411	Symbol	* ef		6170358						
ANR	6170412	Symbol	ZIP_EF_BOTH		6170358						
ANR	6170413	Symbol	flags		6170358						
ANR	6170414	Symbol	ef -> flags		6170358						
ANR	6170415	Symbol	ef -> next		6170358						
ANR	6170416	Function	_zip_ef_write	311:0:6690:6971							
ANR	6170417	FunctionDef	"_zip_ef_write (const struct zip_extra_field * ef , zip_flags_t flags , FILE * f)"		6170416	0					
ANR	6170418	CompoundStatement		313:0:6771:6971	6170416	0					
ANR	6170419	ForStatement	for ( ; ef ; ef = ef -> next )		6170416	0					
ANR	6170420	Condition	ef	314:11:6784:6785	6170416	0	True				
ANR	6170421	Identifier	ef		6170416	0					
ANR	6170422	AssignmentExpression	ef = ef -> next	314:15:6788:6798	6170416	1	True	=			
ANR	6170423	Identifier	ef		6170416	0					
ANR	6170424	PtrMemberAccess	ef -> next		6170416	1					
ANR	6170425	Identifier	ef		6170416	0					
ANR	6170426	Identifier	next		6170416	1					
ANR	6170427	CompoundStatement		2:28:29:29	6170416	2					
ANR	6170428	IfStatement	if ( ef -> flags & flags & ZIP_EF_BOTH )		6170416	0					
ANR	6170429	Condition	ef -> flags & flags & ZIP_EF_BOTH	315:5:6808:6838	6170416	0	True				
ANR	6170430	BitAndExpression	ef -> flags & flags & ZIP_EF_BOTH		6170416	0		&			
ANR	6170431	PtrMemberAccess	ef -> flags		6170416	0					
ANR	6170432	Identifier	ef		6170416	0					
ANR	6170433	Identifier	flags		6170416	1					
ANR	6170434	BitAndExpression	flags & ZIP_EF_BOTH		6170416	1		&			
ANR	6170435	Identifier	flags		6170416	0					
ANR	6170436	Identifier	ZIP_EF_BOTH		6170416	1					
ANR	6170437	CompoundStatement		3:38:69:69	6170416	1					
ANR	6170438	ExpressionStatement	"_zip_write2 ( ef -> id , f )"	316:5:6848:6870	6170416	0	True				
ANR	6170439	CallExpression	"_zip_write2 ( ef -> id , f )"		6170416	0					
ANR	6170440	Callee	_zip_write2		6170416	0					
ANR	6170441	Identifier	_zip_write2		6170416	0					
ANR	6170442	ArgumentList	ef -> id		6170416	1					
ANR	6170443	Argument	ef -> id		6170416	0					
ANR	6170444	PtrMemberAccess	ef -> id		6170416	0					
ANR	6170445	Identifier	ef		6170416	0					
ANR	6170446	Identifier	id		6170416	1					
ANR	6170447	Argument	f		6170416	1					
ANR	6170448	Identifier	f		6170416	0					
ANR	6170449	ExpressionStatement	"_zip_write2 ( ef -> size , f )"	317:5:6877:6901	6170416	1	True				
ANR	6170450	CallExpression	"_zip_write2 ( ef -> size , f )"		6170416	0					
ANR	6170451	Callee	_zip_write2		6170416	0					
ANR	6170452	Identifier	_zip_write2		6170416	0					
ANR	6170453	ArgumentList	ef -> size		6170416	1					
ANR	6170454	Argument	ef -> size		6170416	0					
ANR	6170455	PtrMemberAccess	ef -> size		6170416	0					
ANR	6170456	Identifier	ef		6170416	0					
ANR	6170457	Identifier	size		6170416	1					
ANR	6170458	Argument	f		6170416	1					
ANR	6170459	Identifier	f		6170416	0					
ANR	6170460	IfStatement	if ( ef -> size > 0 )		6170416	2					
ANR	6170461	Condition	ef -> size > 0	318:9:6912:6923	6170416	0	True				
ANR	6170462	RelationalExpression	ef -> size > 0		6170416	0		>			
ANR	6170463	PtrMemberAccess	ef -> size		6170416	0					
ANR	6170464	Identifier	ef		6170416	0					
ANR	6170465	Identifier	size		6170416	1					
ANR	6170466	PrimaryExpression	0		6170416	1					
ANR	6170467	ExpressionStatement	"fwrite ( ef -> data , ef -> size , 1 , f )"	319:2:6928:6960	6170416	1	True				
ANR	6170468	CallExpression	"fwrite ( ef -> data , ef -> size , 1 , f )"		6170416	0					
ANR	6170469	Callee	fwrite		6170416	0					
ANR	6170470	Identifier	fwrite		6170416	0					
ANR	6170471	ArgumentList	ef -> data		6170416	1					
ANR	6170472	Argument	ef -> data		6170416	0					
ANR	6170473	PtrMemberAccess	ef -> data		6170416	0					
ANR	6170474	Identifier	ef		6170416	0					
ANR	6170475	Identifier	data		6170416	1					
ANR	6170476	Argument	ef -> size		6170416	1					
ANR	6170477	PtrMemberAccess	ef -> size		6170416	0					
ANR	6170478	Identifier	ef		6170416	0					
ANR	6170479	Identifier	size		6170416	1					
ANR	6170480	Argument	1		6170416	2					
ANR	6170481	PrimaryExpression	1		6170416	0					
ANR	6170482	Argument	f		6170416	3					
ANR	6170483	Identifier	f		6170416	0					
ANR	6170484	ReturnType	void		6170416	1					
ANR	6170485	Identifier	_zip_ef_write		6170416	2					
ANR	6170486	ParameterList	"const struct zip_extra_field * ef , zip_flags_t flags , FILE * f"		6170416	3					
ANR	6170487	Parameter	const struct zip_extra_field * ef	312:14:6709:6740	6170416	0	True				
ANR	6170488	ParameterType	const struct zip_extra_field *		6170416	0					
ANR	6170489	Identifier	ef		6170416	1					
ANR	6170490	Parameter	zip_flags_t flags	312:48:6743:6759	6170416	1	True				
ANR	6170491	ParameterType	zip_flags_t		6170416	0					
ANR	6170492	Identifier	flags		6170416	1					
ANR	6170493	Parameter	FILE * f	312:67:6762:6768	6170416	2	True				
ANR	6170494	ParameterType	FILE *		6170416	0					
ANR	6170495	Identifier	f		6170416	1					
ANR	6170496	CFGEntryNode	ENTRY		6170416		True				
ANR	6170497	CFGExitNode	EXIT		6170416		True				
ANR	6170498	Symbol	ef -> size		6170416						
ANR	6170499	Symbol	ef -> data		6170416						
ANR	6170500	Symbol	ef		6170416						
ANR	6170501	Symbol	* ef		6170416						
ANR	6170502	Symbol	ZIP_EF_BOTH		6170416						
ANR	6170503	Symbol	f		6170416						
ANR	6170504	Symbol	flags		6170416						
ANR	6170505	Symbol	ef -> flags		6170416						
ANR	6170506	Symbol	ef -> next		6170416						
ANR	6170507	Symbol	ef -> id		6170416						
ANR	6170508	Function	_zip_read_local_ef	326:0:6977:8440							
ANR	6170509	FunctionDef	"_zip_read_local_ef (struct zip * za , zip_uint64_t idx)"		6170508	0					
ANR	6170510	CompoundStatement		328:0:7034:8440	6170508	0					
ANR	6170511	IdentifierDeclStatement	struct zip_entry * e ;	329:4:7040:7059	6170508	0	True				
ANR	6170512	IdentifierDecl	* e		6170508	0					
ANR	6170513	IdentifierDeclType	struct zip_entry *		6170508	0					
ANR	6170514	Identifier	e		6170508	1					
ANR	6170515	IdentifierDeclStatement	unsigned char b [ 4 ] ;	330:4:7065:7083	6170508	1	True				
ANR	6170516	IdentifierDecl	b [ 4 ]		6170508	0					
ANR	6170517	IdentifierDeclType	unsigned char [ 4 ]		6170508	0					
ANR	6170518	Identifier	b		6170508	1					
ANR	6170519	PrimaryExpression	4		6170508	2					
ANR	6170520	IdentifierDeclStatement	const unsigned char * p ;	331:4:7089:7111	6170508	2	True				
ANR	6170521	IdentifierDecl	* p		6170508	0					
ANR	6170522	IdentifierDeclType	const unsigned char *		6170508	0					
ANR	6170523	Identifier	p		6170508	1					
ANR	6170524	IdentifierDeclStatement	"zip_uint16_t fname_len , ef_len ;"	332:4:7117:7147	6170508	3	True				
ANR	6170525	IdentifierDecl	fname_len		6170508	0					
ANR	6170526	IdentifierDeclType	zip_uint16_t		6170508	0					
ANR	6170527	Identifier	fname_len		6170508	1					
ANR	6170528	IdentifierDecl	ef_len		6170508	1					
ANR	6170529	IdentifierDeclType	zip_uint16_t		6170508	0					
ANR	6170530	Identifier	ef_len		6170508	1					
ANR	6170531	IfStatement	if ( idx >= za -> nentry )		6170508	4					
ANR	6170532	Condition	idx >= za -> nentry	334:8:7158:7174	6170508	0	True				
ANR	6170533	RelationalExpression	idx >= za -> nentry		6170508	0		>=			
ANR	6170534	Identifier	idx		6170508	0					
ANR	6170535	PtrMemberAccess	za -> nentry		6170508	1					
ANR	6170536	Identifier	za		6170508	0					
ANR	6170537	Identifier	nentry		6170508	1					
ANR	6170538	CompoundStatement		7:27:142:142	6170508	1					
ANR	6170539	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_INVAL , 0 )"	335:1:7180:7223	6170508	0	True				
ANR	6170540	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_INVAL , 0 )"		6170508	0					
ANR	6170541	Callee	_zip_error_set		6170508	0					
ANR	6170542	Identifier	_zip_error_set		6170508	0					
ANR	6170543	ArgumentList	& za -> error		6170508	1					
ANR	6170544	Argument	& za -> error		6170508	0					
ANR	6170545	UnaryOperationExpression	& za -> error		6170508	0					
ANR	6170546	UnaryOperator	&		6170508	0					
ANR	6170547	PtrMemberAccess	za -> error		6170508	1					
ANR	6170548	Identifier	za		6170508	0					
ANR	6170549	Identifier	error		6170508	1					
ANR	6170550	Argument	ZIP_ER_INVAL		6170508	1					
ANR	6170551	Identifier	ZIP_ER_INVAL		6170508	0					
ANR	6170552	Argument	0		6170508	2					
ANR	6170553	PrimaryExpression	0		6170508	0					
ANR	6170554	ReturnStatement	return - 1 ;	336:1:7226:7235	6170508	1	True				
ANR	6170555	UnaryOperationExpression	- 1		6170508	0					
ANR	6170556	UnaryOperator	-		6170508	0					
ANR	6170557	PrimaryExpression	1		6170508	1					
ANR	6170558	ExpressionStatement	e = za -> entry + idx	339:4:7248:7265	6170508	5	True				
ANR	6170559	AssignmentExpression	e = za -> entry + idx		6170508	0		=			
ANR	6170560	Identifier	e		6170508	0					
ANR	6170561	AdditiveExpression	za -> entry + idx		6170508	1		+			
ANR	6170562	PtrMemberAccess	za -> entry		6170508	0					
ANR	6170563	Identifier	za		6170508	0					
ANR	6170564	Identifier	entry		6170508	1					
ANR	6170565	Identifier	idx		6170508	1					
ANR	6170566	IfStatement	if ( e -> orig == NULL || e -> orig -> local_extra_fields_read )		6170508	6					
ANR	6170567	Condition	e -> orig == NULL || e -> orig -> local_extra_fields_read	341:8:7276:7326	6170508	0	True				
ANR	6170568	OrExpression	e -> orig == NULL || e -> orig -> local_extra_fields_read		6170508	0		||			
ANR	6170569	EqualityExpression	e -> orig == NULL		6170508	0		==			
ANR	6170570	PtrMemberAccess	e -> orig		6170508	0					
ANR	6170571	Identifier	e		6170508	0					
ANR	6170572	Identifier	orig		6170508	1					
ANR	6170573	Identifier	NULL		6170508	1					
ANR	6170574	PtrMemberAccess	e -> orig -> local_extra_fields_read		6170508	1					
ANR	6170575	PtrMemberAccess	e -> orig		6170508	0					
ANR	6170576	Identifier	e		6170508	0					
ANR	6170577	Identifier	orig		6170508	1					
ANR	6170578	Identifier	local_extra_fields_read		6170508	1					
ANR	6170579	ReturnStatement	return 0 ;	342:1:7330:7338	6170508	1	True				
ANR	6170580	PrimaryExpression	0		6170508	0					
ANR	6170581	IfStatement	"if ( fseeko ( za -> zp , ( off_t ) ( e -> orig -> offset + 26 ) , SEEK_SET ) < 0 )"		6170508	7					
ANR	6170582	Condition	"fseeko ( za -> zp , ( off_t ) ( e -> orig -> offset + 26 ) , SEEK_SET ) < 0"	345:8:7350:7408	6170508	0	True				
ANR	6170583	RelationalExpression	"fseeko ( za -> zp , ( off_t ) ( e -> orig -> offset + 26 ) , SEEK_SET ) < 0"		6170508	0		<			
ANR	6170584	CallExpression	"fseeko ( za -> zp , ( off_t ) ( e -> orig -> offset + 26 ) , SEEK_SET )"		6170508	0					
ANR	6170585	Callee	fseeko		6170508	0					
ANR	6170586	Identifier	fseeko		6170508	0					
ANR	6170587	ArgumentList	za -> zp		6170508	1					
ANR	6170588	Argument	za -> zp		6170508	0					
ANR	6170589	PtrMemberAccess	za -> zp		6170508	0					
ANR	6170590	Identifier	za		6170508	0					
ANR	6170591	Identifier	zp		6170508	1					
ANR	6170592	Argument	( off_t ) ( e -> orig -> offset + 26 )		6170508	1					
ANR	6170593	CastExpression	( off_t ) ( e -> orig -> offset + 26 )		6170508	0					
ANR	6170594	CastTarget	off_t		6170508	0					
ANR	6170595	AdditiveExpression	e -> orig -> offset + 26		6170508	1		+			
ANR	6170596	PtrMemberAccess	e -> orig -> offset		6170508	0					
ANR	6170597	PtrMemberAccess	e -> orig		6170508	0					
ANR	6170598	Identifier	e		6170508	0					
ANR	6170599	Identifier	orig		6170508	1					
ANR	6170600	Identifier	offset		6170508	1					
ANR	6170601	PrimaryExpression	26		6170508	1					
ANR	6170602	Argument	SEEK_SET		6170508	2					
ANR	6170603	Identifier	SEEK_SET		6170508	0					
ANR	6170604	PrimaryExpression	0		6170508	1					
ANR	6170605	CompoundStatement		18:69:376:376	6170508	1					
ANR	6170606	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_SEEK , errno )"	346:1:7414:7460	6170508	0	True				
ANR	6170607	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_SEEK , errno )"		6170508	0					
ANR	6170608	Callee	_zip_error_set		6170508	0					
ANR	6170609	Identifier	_zip_error_set		6170508	0					
ANR	6170610	ArgumentList	& za -> error		6170508	1					
ANR	6170611	Argument	& za -> error		6170508	0					
ANR	6170612	UnaryOperationExpression	& za -> error		6170508	0					
ANR	6170613	UnaryOperator	&		6170508	0					
ANR	6170614	PtrMemberAccess	za -> error		6170508	1					
ANR	6170615	Identifier	za		6170508	0					
ANR	6170616	Identifier	error		6170508	1					
ANR	6170617	Argument	ZIP_ER_SEEK		6170508	1					
ANR	6170618	Identifier	ZIP_ER_SEEK		6170508	0					
ANR	6170619	Argument	errno		6170508	2					
ANR	6170620	Identifier	errno		6170508	0					
ANR	6170621	ReturnStatement	return - 1 ;	347:1:7463:7472	6170508	1	True				
ANR	6170622	UnaryOperationExpression	- 1		6170508	0					
ANR	6170623	UnaryOperator	-		6170508	0					
ANR	6170624	PrimaryExpression	1		6170508	1					
ANR	6170625	IfStatement	"if ( fread ( b , sizeof ( b ) , 1 , za -> zp ) != 1 )"		6170508	8					
ANR	6170626	Condition	"fread ( b , sizeof ( b ) , 1 , za -> zp ) != 1"	350:8:7489:7523	6170508	0	True				
ANR	6170627	EqualityExpression	"fread ( b , sizeof ( b ) , 1 , za -> zp ) != 1"		6170508	0		!=			
ANR	6170628	CallExpression	"fread ( b , sizeof ( b ) , 1 , za -> zp )"		6170508	0					
ANR	6170629	Callee	fread		6170508	0					
ANR	6170630	Identifier	fread		6170508	0					
ANR	6170631	ArgumentList	b		6170508	1					
ANR	6170632	Argument	b		6170508	0					
ANR	6170633	Identifier	b		6170508	0					
ANR	6170634	Argument	sizeof ( b )		6170508	1					
ANR	6170635	SizeofExpression	sizeof ( b )		6170508	0					
ANR	6170636	Sizeof	sizeof		6170508	0					
ANR	6170637	SizeofOperand	b		6170508	1					
ANR	6170638	Argument	1		6170508	2					
ANR	6170639	PrimaryExpression	1		6170508	0					
ANR	6170640	Argument	za -> zp		6170508	3					
ANR	6170641	PtrMemberAccess	za -> zp		6170508	0					
ANR	6170642	Identifier	za		6170508	0					
ANR	6170643	Identifier	zp		6170508	1					
ANR	6170644	PrimaryExpression	1		6170508	1					
ANR	6170645	CompoundStatement		23:45:491:491	6170508	1					
ANR	6170646	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_READ , errno )"	351:1:7529:7575	6170508	0	True				
ANR	6170647	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_READ , errno )"		6170508	0					
ANR	6170648	Callee	_zip_error_set		6170508	0					
ANR	6170649	Identifier	_zip_error_set		6170508	0					
ANR	6170650	ArgumentList	& za -> error		6170508	1					
ANR	6170651	Argument	& za -> error		6170508	0					
ANR	6170652	UnaryOperationExpression	& za -> error		6170508	0					
ANR	6170653	UnaryOperator	&		6170508	0					
ANR	6170654	PtrMemberAccess	za -> error		6170508	1					
ANR	6170655	Identifier	za		6170508	0					
ANR	6170656	Identifier	error		6170508	1					
ANR	6170657	Argument	ZIP_ER_READ		6170508	1					
ANR	6170658	Identifier	ZIP_ER_READ		6170508	0					
ANR	6170659	Argument	errno		6170508	2					
ANR	6170660	Identifier	errno		6170508	0					
ANR	6170661	ReturnStatement	return - 1 ;	352:1:7578:7587	6170508	1	True				
ANR	6170662	UnaryOperationExpression	- 1		6170508	0					
ANR	6170663	UnaryOperator	-		6170508	0					
ANR	6170664	PrimaryExpression	1		6170508	1					
ANR	6170665	ExpressionStatement	p = b	355:4:7600:7605	6170508	9	True				
ANR	6170666	AssignmentExpression	p = b		6170508	0		=			
ANR	6170667	Identifier	p		6170508	0					
ANR	6170668	Identifier	b		6170508	1					
ANR	6170669	ExpressionStatement	fname_len = _zip_read2 ( & p )	356:4:7611:7637	6170508	10	True				
ANR	6170670	AssignmentExpression	fname_len = _zip_read2 ( & p )		6170508	0		=			
ANR	6170671	Identifier	fname_len		6170508	0					
ANR	6170672	CallExpression	_zip_read2 ( & p )		6170508	1					
ANR	6170673	Callee	_zip_read2		6170508	0					
ANR	6170674	Identifier	_zip_read2		6170508	0					
ANR	6170675	ArgumentList	& p		6170508	1					
ANR	6170676	Argument	& p		6170508	0					
ANR	6170677	UnaryOperationExpression	& p		6170508	0					
ANR	6170678	UnaryOperator	&		6170508	0					
ANR	6170679	Identifier	p		6170508	1					
ANR	6170680	ExpressionStatement	ef_len = _zip_read2 ( & p )	357:4:7643:7666	6170508	11	True				
ANR	6170681	AssignmentExpression	ef_len = _zip_read2 ( & p )		6170508	0		=			
ANR	6170682	Identifier	ef_len		6170508	0					
ANR	6170683	CallExpression	_zip_read2 ( & p )		6170508	1					
ANR	6170684	Callee	_zip_read2		6170508	0					
ANR	6170685	Identifier	_zip_read2		6170508	0					
ANR	6170686	ArgumentList	& p		6170508	1					
ANR	6170687	Argument	& p		6170508	0					
ANR	6170688	UnaryOperationExpression	& p		6170508	0					
ANR	6170689	UnaryOperator	&		6170508	0					
ANR	6170690	Identifier	p		6170508	1					
ANR	6170691	IfStatement	if ( ef_len > 0 )		6170508	12					
ANR	6170692	Condition	ef_len > 0	359:8:7677:7686	6170508	0	True				
ANR	6170693	RelationalExpression	ef_len > 0		6170508	0		>			
ANR	6170694	Identifier	ef_len		6170508	0					
ANR	6170695	PrimaryExpression	0		6170508	1					
ANR	6170696	CompoundStatement		34:1:686:705	6170508	1					
ANR	6170697	IdentifierDeclStatement	struct zip_extra_field * ef ;	360:1:7692:7718	6170508	0	True				
ANR	6170698	IdentifierDecl	* ef		6170508	0					
ANR	6170699	IdentifierDeclType	struct zip_extra_field *		6170508	0					
ANR	6170700	Identifier	ef		6170508	1					
ANR	6170701	IdentifierDeclStatement	zip_uint8_t * ef_raw ;	361:1:7721:7740	6170508	1	True				
ANR	6170702	IdentifierDecl	* ef_raw		6170508	0					
ANR	6170703	IdentifierDeclType	zip_uint8_t *		6170508	0					
ANR	6170704	Identifier	ef_raw		6170508	1					
ANR	6170705	IfStatement	"if ( fseek ( za -> zp , fname_len , SEEK_CUR ) < 0 )"		6170508	2					
ANR	6170706	Condition	"fseek ( za -> zp , fname_len , SEEK_CUR ) < 0"	363:5:7748:7785	6170508	0	True				
ANR	6170707	RelationalExpression	"fseek ( za -> zp , fname_len , SEEK_CUR ) < 0"		6170508	0		<			
ANR	6170708	CallExpression	"fseek ( za -> zp , fname_len , SEEK_CUR )"		6170508	0					
ANR	6170709	Callee	fseek		6170508	0					
ANR	6170710	Identifier	fseek		6170508	0					
ANR	6170711	ArgumentList	za -> zp		6170508	1					
ANR	6170712	Argument	za -> zp		6170508	0					
ANR	6170713	PtrMemberAccess	za -> zp		6170508	0					
ANR	6170714	Identifier	za		6170508	0					
ANR	6170715	Identifier	zp		6170508	1					
ANR	6170716	Argument	fname_len		6170508	1					
ANR	6170717	Identifier	fname_len		6170508	0					
ANR	6170718	Argument	SEEK_CUR		6170508	2					
ANR	6170719	Identifier	SEEK_CUR		6170508	0					
ANR	6170720	PrimaryExpression	0		6170508	1					
ANR	6170721	CompoundStatement		36:45:753:753	6170508	1					
ANR	6170722	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_SEEK , errno )"	364:5:7795:7841	6170508	0	True				
ANR	6170723	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_SEEK , errno )"		6170508	0					
ANR	6170724	Callee	_zip_error_set		6170508	0					
ANR	6170725	Identifier	_zip_error_set		6170508	0					
ANR	6170726	ArgumentList	& za -> error		6170508	1					
ANR	6170727	Argument	& za -> error		6170508	0					
ANR	6170728	UnaryOperationExpression	& za -> error		6170508	0					
ANR	6170729	UnaryOperator	&		6170508	0					
ANR	6170730	PtrMemberAccess	za -> error		6170508	1					
ANR	6170731	Identifier	za		6170508	0					
ANR	6170732	Identifier	error		6170508	1					
ANR	6170733	Argument	ZIP_ER_SEEK		6170508	1					
ANR	6170734	Identifier	ZIP_ER_SEEK		6170508	0					
ANR	6170735	Argument	errno		6170508	2					
ANR	6170736	Identifier	errno		6170508	0					
ANR	6170737	ReturnStatement	return - 1 ;	365:5:7848:7857	6170508	1	True				
ANR	6170738	UnaryOperationExpression	- 1		6170508	0					
ANR	6170739	UnaryOperator	-		6170508	0					
ANR	6170740	PrimaryExpression	1		6170508	1					
ANR	6170741	ExpressionStatement	"ef_raw = _zip_read_data ( NULL , za -> zp , ef_len , 0 , & za -> error )"	368:1:7864:7924	6170508	3	True				
ANR	6170742	AssignmentExpression	"ef_raw = _zip_read_data ( NULL , za -> zp , ef_len , 0 , & za -> error )"		6170508	0		=			
ANR	6170743	Identifier	ef_raw		6170508	0					
ANR	6170744	CallExpression	"_zip_read_data ( NULL , za -> zp , ef_len , 0 , & za -> error )"		6170508	1					
ANR	6170745	Callee	_zip_read_data		6170508	0					
ANR	6170746	Identifier	_zip_read_data		6170508	0					
ANR	6170747	ArgumentList	NULL		6170508	1					
ANR	6170748	Argument	NULL		6170508	0					
ANR	6170749	Identifier	NULL		6170508	0					
ANR	6170750	Argument	za -> zp		6170508	1					
ANR	6170751	PtrMemberAccess	za -> zp		6170508	0					
ANR	6170752	Identifier	za		6170508	0					
ANR	6170753	Identifier	zp		6170508	1					
ANR	6170754	Argument	ef_len		6170508	2					
ANR	6170755	Identifier	ef_len		6170508	0					
ANR	6170756	Argument	0		6170508	3					
ANR	6170757	PrimaryExpression	0		6170508	0					
ANR	6170758	Argument	& za -> error		6170508	4					
ANR	6170759	UnaryOperationExpression	& za -> error		6170508	0					
ANR	6170760	UnaryOperator	&		6170508	0					
ANR	6170761	PtrMemberAccess	za -> error		6170508	1					
ANR	6170762	Identifier	za		6170508	0					
ANR	6170763	Identifier	error		6170508	1					
ANR	6170764	IfStatement	if ( ef_raw == NULL )		6170508	4					
ANR	6170765	Condition	ef_raw == NULL	370:5:7932:7945	6170508	0	True				
ANR	6170766	EqualityExpression	ef_raw == NULL		6170508	0		==			
ANR	6170767	Identifier	ef_raw		6170508	0					
ANR	6170768	Identifier	NULL		6170508	1					
ANR	6170769	ReturnStatement	return - 1 ;	371:5:7953:7962	6170508	1	True				
ANR	6170770	UnaryOperationExpression	- 1		6170508	0					
ANR	6170771	UnaryOperator	-		6170508	0					
ANR	6170772	PrimaryExpression	1		6170508	1					
ANR	6170773	IfStatement	"if ( ( ef = _zip_ef_parse ( ef_raw , ef_len , ZIP_EF_LOCAL , & za -> error ) ) == NULL )"		6170508	5					
ANR	6170774	Condition	"( ef = _zip_ef_parse ( ef_raw , ef_len , ZIP_EF_LOCAL , & za -> error ) ) == NULL"	373:5:7970:8037	6170508	0	True				
ANR	6170775	EqualityExpression	"( ef = _zip_ef_parse ( ef_raw , ef_len , ZIP_EF_LOCAL , & za -> error ) ) == NULL"		6170508	0		==			
ANR	6170776	AssignmentExpression	"ef = _zip_ef_parse ( ef_raw , ef_len , ZIP_EF_LOCAL , & za -> error )"		6170508	0		=			
ANR	6170777	Identifier	ef		6170508	0					
ANR	6170778	CallExpression	"_zip_ef_parse ( ef_raw , ef_len , ZIP_EF_LOCAL , & za -> error )"		6170508	1					
ANR	6170779	Callee	_zip_ef_parse		6170508	0					
ANR	6170780	Identifier	_zip_ef_parse		6170508	0					
ANR	6170781	ArgumentList	ef_raw		6170508	1					
ANR	6170782	Argument	ef_raw		6170508	0					
ANR	6170783	Identifier	ef_raw		6170508	0					
ANR	6170784	Argument	ef_len		6170508	1					
ANR	6170785	Identifier	ef_len		6170508	0					
ANR	6170786	Argument	ZIP_EF_LOCAL		6170508	2					
ANR	6170787	Identifier	ZIP_EF_LOCAL		6170508	0					
ANR	6170788	Argument	& za -> error		6170508	3					
ANR	6170789	UnaryOperationExpression	& za -> error		6170508	0					
ANR	6170790	UnaryOperator	&		6170508	0					
ANR	6170791	PtrMemberAccess	za -> error		6170508	1					
ANR	6170792	Identifier	za		6170508	0					
ANR	6170793	Identifier	error		6170508	1					
ANR	6170794	Identifier	NULL		6170508	1					
ANR	6170795	CompoundStatement		46:75:1005:1005	6170508	1					
ANR	6170796	ExpressionStatement	free ( ef_raw )	374:5:8047:8059	6170508	0	True				
ANR	6170797	CallExpression	free ( ef_raw )		6170508	0					
ANR	6170798	Callee	free		6170508	0					
ANR	6170799	Identifier	free		6170508	0					
ANR	6170800	ArgumentList	ef_raw		6170508	1					
ANR	6170801	Argument	ef_raw		6170508	0					
ANR	6170802	Identifier	ef_raw		6170508	0					
ANR	6170803	ReturnStatement	return - 1 ;	375:5:8066:8075	6170508	1	True				
ANR	6170804	UnaryOperationExpression	- 1		6170508	0					
ANR	6170805	UnaryOperator	-		6170508	0					
ANR	6170806	PrimaryExpression	1		6170508	1					
ANR	6170807	ExpressionStatement	free ( ef_raw )	377:1:8081:8093	6170508	6	True				
ANR	6170808	CallExpression	free ( ef_raw )		6170508	0					
ANR	6170809	Callee	free		6170508	0					
ANR	6170810	Identifier	free		6170508	0					
ANR	6170811	ArgumentList	ef_raw		6170508	1					
ANR	6170812	Argument	ef_raw		6170508	0					
ANR	6170813	Identifier	ef_raw		6170508	0					
ANR	6170814	ExpressionStatement	ef = _zip_ef_remove_internal ( ef )	379:8:8105:8137	6170508	7	True				
ANR	6170815	AssignmentExpression	ef = _zip_ef_remove_internal ( ef )		6170508	0		=			
ANR	6170816	Identifier	ef		6170508	0					
ANR	6170817	CallExpression	_zip_ef_remove_internal ( ef )		6170508	1					
ANR	6170818	Callee	_zip_ef_remove_internal		6170508	0					
ANR	6170819	Identifier	_zip_ef_remove_internal		6170508	0					
ANR	6170820	ArgumentList	ef		6170508	1					
ANR	6170821	Argument	ef		6170508	0					
ANR	6170822	Identifier	ef		6170508	0					
ANR	6170823	ExpressionStatement	"e -> orig -> extra_fields = _zip_ef_merge ( e -> orig -> extra_fields , ef )"	380:1:8140:8204	6170508	8	True				
ANR	6170824	AssignmentExpression	"e -> orig -> extra_fields = _zip_ef_merge ( e -> orig -> extra_fields , ef )"		6170508	0		=			
ANR	6170825	PtrMemberAccess	e -> orig -> extra_fields		6170508	0					
ANR	6170826	PtrMemberAccess	e -> orig		6170508	0					
ANR	6170827	Identifier	e		6170508	0					
ANR	6170828	Identifier	orig		6170508	1					
ANR	6170829	Identifier	extra_fields		6170508	1					
ANR	6170830	CallExpression	"_zip_ef_merge ( e -> orig -> extra_fields , ef )"		6170508	1					
ANR	6170831	Callee	_zip_ef_merge		6170508	0					
ANR	6170832	Identifier	_zip_ef_merge		6170508	0					
ANR	6170833	ArgumentList	e -> orig -> extra_fields		6170508	1					
ANR	6170834	Argument	e -> orig -> extra_fields		6170508	0					
ANR	6170835	PtrMemberAccess	e -> orig -> extra_fields		6170508	0					
ANR	6170836	PtrMemberAccess	e -> orig		6170508	0					
ANR	6170837	Identifier	e		6170508	0					
ANR	6170838	Identifier	orig		6170508	1					
ANR	6170839	Identifier	extra_fields		6170508	1					
ANR	6170840	Argument	ef		6170508	1					
ANR	6170841	Identifier	ef		6170508	0					
ANR	6170842	ExpressionStatement	e -> orig -> local_extra_fields_read = 1	383:4:8217:8253	6170508	13	True				
ANR	6170843	AssignmentExpression	e -> orig -> local_extra_fields_read = 1		6170508	0		=			
ANR	6170844	PtrMemberAccess	e -> orig -> local_extra_fields_read		6170508	0					
ANR	6170845	PtrMemberAccess	e -> orig		6170508	0					
ANR	6170846	Identifier	e		6170508	0					
ANR	6170847	Identifier	orig		6170508	1					
ANR	6170848	Identifier	local_extra_fields_read		6170508	1					
ANR	6170849	PrimaryExpression	1		6170508	1					
ANR	6170850	IfStatement	if ( e -> changes && e -> changes -> local_extra_fields_read == 0 )		6170508	14					
ANR	6170851	Condition	e -> changes && e -> changes -> local_extra_fields_read == 0	385:8:8268:8321	6170508	0	True				
ANR	6170852	AndExpression	e -> changes && e -> changes -> local_extra_fields_read == 0		6170508	0		&&			
ANR	6170853	PtrMemberAccess	e -> changes		6170508	0					
ANR	6170854	Identifier	e		6170508	0					
ANR	6170855	Identifier	changes		6170508	1					
ANR	6170856	EqualityExpression	e -> changes -> local_extra_fields_read == 0		6170508	1		==			
ANR	6170857	PtrMemberAccess	e -> changes -> local_extra_fields_read		6170508	0					
ANR	6170858	PtrMemberAccess	e -> changes		6170508	0					
ANR	6170859	Identifier	e		6170508	0					
ANR	6170860	Identifier	changes		6170508	1					
ANR	6170861	Identifier	local_extra_fields_read		6170508	1					
ANR	6170862	PrimaryExpression	0		6170508	1					
ANR	6170863	CompoundStatement		58:64:1289:1289	6170508	1					
ANR	6170864	ExpressionStatement	e -> changes -> extra_fields = e -> orig -> extra_fields	386:1:8327:8375	6170508	0	True				
ANR	6170865	AssignmentExpression	e -> changes -> extra_fields = e -> orig -> extra_fields		6170508	0		=			
ANR	6170866	PtrMemberAccess	e -> changes -> extra_fields		6170508	0					
ANR	6170867	PtrMemberAccess	e -> changes		6170508	0					
ANR	6170868	Identifier	e		6170508	0					
ANR	6170869	Identifier	changes		6170508	1					
ANR	6170870	Identifier	extra_fields		6170508	1					
ANR	6170871	PtrMemberAccess	e -> orig -> extra_fields		6170508	1					
ANR	6170872	PtrMemberAccess	e -> orig		6170508	0					
ANR	6170873	Identifier	e		6170508	0					
ANR	6170874	Identifier	orig		6170508	1					
ANR	6170875	Identifier	extra_fields		6170508	1					
ANR	6170876	ExpressionStatement	e -> changes -> local_extra_fields_read = 1	387:1:8378:8417	6170508	1	True				
ANR	6170877	AssignmentExpression	e -> changes -> local_extra_fields_read = 1		6170508	0		=			
ANR	6170878	PtrMemberAccess	e -> changes -> local_extra_fields_read		6170508	0					
ANR	6170879	PtrMemberAccess	e -> changes		6170508	0					
ANR	6170880	Identifier	e		6170508	0					
ANR	6170881	Identifier	changes		6170508	1					
ANR	6170882	Identifier	local_extra_fields_read		6170508	1					
ANR	6170883	PrimaryExpression	1		6170508	1					
ANR	6170884	ReturnStatement	return 0 ;	390:4:8430:8438	6170508	15	True				
ANR	6170885	PrimaryExpression	0		6170508	0					
ANR	6170886	ReturnType	int		6170508	1					
ANR	6170887	Identifier	_zip_read_local_ef		6170508	2					
ANR	6170888	ParameterList	"struct zip * za , zip_uint64_t idx"		6170508	3					
ANR	6170889	Parameter	struct zip * za	327:19:7000:7013	6170508	0	True				
ANR	6170890	ParameterType	struct zip *		6170508	0					
ANR	6170891	Identifier	za		6170508	1					
ANR	6170892	Parameter	zip_uint64_t idx	327:35:7016:7031	6170508	1	True				
ANR	6170893	ParameterType	zip_uint64_t		6170508	0					
ANR	6170894	Identifier	idx		6170508	1					
ANR	6170895	CFGEntryNode	ENTRY		6170508		True				
ANR	6170896	CFGExitNode	EXIT		6170508		True				
ANR	6170897	Symbol	fseeko		6170508						
ANR	6170898	Symbol	SEEK_CUR		6170508						
ANR	6170899	Symbol	& za -> error		6170508						
ANR	6170900	Symbol	za -> entry		6170508						
ANR	6170901	Symbol	* e -> orig		6170508						
ANR	6170902	Symbol	ZIP_ER_READ		6170508						
ANR	6170903	Symbol	fseek		6170508						
ANR	6170904	Symbol	* za		6170508						
ANR	6170905	Symbol	ZIP_ER_INVAL		6170508						
ANR	6170906	Symbol	_zip_read_data		6170508						
ANR	6170907	Symbol	ef_len		6170508						
ANR	6170908	Symbol	za -> nentry		6170508						
ANR	6170909	Symbol	SEEK_SET		6170508						
ANR	6170910	Symbol	ef		6170508						
ANR	6170911	Symbol	b		6170508						
ANR	6170912	Symbol	errno		6170508						
ANR	6170913	Symbol	NULL		6170508						
ANR	6170914	Symbol	_zip_ef_remove_internal		6170508						
ANR	6170915	Symbol	e -> orig -> offset		6170508						
ANR	6170916	Symbol	e		6170508						
ANR	6170917	Symbol	* * e		6170508						
ANR	6170918	Symbol	e -> orig -> extra_fields		6170508						
ANR	6170919	Symbol	e -> changes -> local_extra_fields_read		6170508						
ANR	6170920	Symbol	za		6170508						
ANR	6170921	Symbol	ef_raw		6170508						
ANR	6170922	Symbol	ZIP_ER_SEEK		6170508						
ANR	6170923	Symbol	e -> orig -> local_extra_fields_read		6170508						
ANR	6170924	Symbol	_zip_ef_merge		6170508						
ANR	6170925	Symbol	fread		6170508						
ANR	6170926	Symbol	* e		6170508						
ANR	6170927	Symbol	p		6170508						
ANR	6170928	Symbol	za -> zp		6170508						
ANR	6170929	Symbol	_zip_ef_parse		6170508						
ANR	6170930	Symbol	ZIP_EF_LOCAL		6170508						
ANR	6170931	Symbol	e -> changes -> extra_fields		6170508						
ANR	6170932	Symbol	e -> orig		6170508						
ANR	6170933	Symbol	& p		6170508						
ANR	6170934	Symbol	e -> changes		6170508						
ANR	6170935	Symbol	* e -> changes		6170508						
ANR	6170936	Symbol	fname_len		6170508						
ANR	6170937	Symbol	_zip_read2		6170508						
ANR	6170938	Symbol	idx		6170508						
