command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6266891	File	data/converged/CVE-2019-16718~_radare2/strpool.c								
ANR	6266892	Function	r_strpool_new	5:0:69:391							
ANR	6266893	FunctionDef	r_strpool_new (int sz)		6266892	0					
ANR	6266894	CompoundStatement		5:39:108:391	6266892	0					
ANR	6266895	IdentifierDeclStatement	RStrpool * p = R_NEW ( RStrpool ) ;	6:1:111:141	6266892	0	True				
ANR	6266896	IdentifierDecl	* p = R_NEW ( RStrpool )		6266892	0					
ANR	6266897	IdentifierDeclType	RStrpool *		6266892	0					
ANR	6266898	Identifier	p		6266892	1					
ANR	6266899	AssignmentExpression	* p = R_NEW ( RStrpool )		6266892	2		=			
ANR	6266900	Identifier	p		6266892	0					
ANR	6266901	CallExpression	R_NEW ( RStrpool )		6266892	1					
ANR	6266902	Callee	R_NEW		6266892	0					
ANR	6266903	Identifier	R_NEW		6266892	0					
ANR	6266904	ArgumentList	RStrpool		6266892	1					
ANR	6266905	Argument	RStrpool		6266892	0					
ANR	6266906	Identifier	RStrpool		6266892	0					
ANR	6266907	IfStatement	if ( ! p )		6266892	1					
ANR	6266908	Condition	! p	7:5:148:149	6266892	0	True				
ANR	6266909	UnaryOperationExpression	! p		6266892	0					
ANR	6266910	UnaryOperator	!		6266892	0					
ANR	6266911	Identifier	p		6266892	1					
ANR	6266912	CompoundStatement		3:9:43:43	6266892	1					
ANR	6266913	ExpressionStatement	"eprintf ( ""Malloc failed!\\n"" )"	8:2:156:184	6266892	0	True				
ANR	6266914	CallExpression	"eprintf ( ""Malloc failed!\\n"" )"		6266892	0					
ANR	6266915	Callee	eprintf		6266892	0					
ANR	6266916	Identifier	eprintf		6266892	0					
ANR	6266917	ArgumentList	"""Malloc failed!\\n"""		6266892	1					
ANR	6266918	Argument	"""Malloc failed!\\n"""		6266892	0					
ANR	6266919	PrimaryExpression	"""Malloc failed!\\n"""		6266892	0					
ANR	6266920	ReturnStatement	return NULL ;	9:2:188:199	6266892	1	True				
ANR	6266921	Identifier	NULL		6266892	0					
ANR	6266922	IfStatement	if ( sz < 1 )		6266892	2					
ANR	6266923	Condition	sz < 1	11:5:209:214	6266892	0	True				
ANR	6266924	RelationalExpression	sz < 1		6266892	0		<			
ANR	6266925	Identifier	sz		6266892	0					
ANR	6266926	PrimaryExpression	1		6266892	1					
ANR	6266927	CompoundStatement		7:13:108:108	6266892	1					
ANR	6266928	ExpressionStatement	sz = 1024	12:2:221:230	6266892	0	True				
ANR	6266929	AssignmentExpression	sz = 1024		6266892	0		=			
ANR	6266930	Identifier	sz		6266892	0					
ANR	6266931	PrimaryExpression	1024		6266892	1					
ANR	6266932	ExpressionStatement	p -> str = malloc ( sz )	14:1:236:256	6266892	3	True				
ANR	6266933	AssignmentExpression	p -> str = malloc ( sz )		6266892	0		=			
ANR	6266934	PtrMemberAccess	p -> str		6266892	0					
ANR	6266935	Identifier	p		6266892	0					
ANR	6266936	Identifier	str		6266892	1					
ANR	6266937	CallExpression	malloc ( sz )		6266892	1					
ANR	6266938	Callee	malloc		6266892	0					
ANR	6266939	Identifier	malloc		6266892	0					
ANR	6266940	ArgumentList	sz		6266892	1					
ANR	6266941	Argument	sz		6266892	0					
ANR	6266942	Identifier	sz		6266892	0					
ANR	6266943	IfStatement	if ( ! p -> str )		6266892	4					
ANR	6266944	Condition	! p -> str	15:5:263:269	6266892	0	True				
ANR	6266945	UnaryOperationExpression	! p -> str		6266892	0					
ANR	6266946	UnaryOperator	!		6266892	0					
ANR	6266947	PtrMemberAccess	p -> str		6266892	1					
ANR	6266948	Identifier	p		6266892	0					
ANR	6266949	Identifier	str		6266892	1					
ANR	6266950	CompoundStatement		11:14:163:163	6266892	1					
ANR	6266951	ExpressionStatement	"eprintf ( ""Malloc failed!\\n"" )"	16:2:276:304	6266892	0	True				
ANR	6266952	CallExpression	"eprintf ( ""Malloc failed!\\n"" )"		6266892	0					
ANR	6266953	Callee	eprintf		6266892	0					
ANR	6266954	Identifier	eprintf		6266892	0					
ANR	6266955	ArgumentList	"""Malloc failed!\\n"""		6266892	1					
ANR	6266956	Argument	"""Malloc failed!\\n"""		6266892	0					
ANR	6266957	PrimaryExpression	"""Malloc failed!\\n"""		6266892	0					
ANR	6266958	ExpressionStatement	free ( p )	17:2:308:316	6266892	1	True				
ANR	6266959	CallExpression	free ( p )		6266892	0					
ANR	6266960	Callee	free		6266892	0					
ANR	6266961	Identifier	free		6266892	0					
ANR	6266962	ArgumentList	p		6266892	1					
ANR	6266963	Argument	p		6266892	0					
ANR	6266964	Identifier	p		6266892	0					
ANR	6266965	ReturnStatement	return NULL ;	18:2:320:331	6266892	2	True				
ANR	6266966	Identifier	NULL		6266892	0					
ANR	6266967	ExpressionStatement	p -> size = sz	20:1:337:349	6266892	5	True				
ANR	6266968	AssignmentExpression	p -> size = sz		6266892	0		=			
ANR	6266969	PtrMemberAccess	p -> size		6266892	0					
ANR	6266970	Identifier	p		6266892	0					
ANR	6266971	Identifier	size		6266892	1					
ANR	6266972	Identifier	sz		6266892	1					
ANR	6266973	ExpressionStatement	p -> len = 0	21:1:352:362	6266892	6	True				
ANR	6266974	AssignmentExpression	p -> len = 0		6266892	0		=			
ANR	6266975	PtrMemberAccess	p -> len		6266892	0					
ANR	6266976	Identifier	p		6266892	0					
ANR	6266977	Identifier	len		6266892	1					
ANR	6266978	PrimaryExpression	0		6266892	1					
ANR	6266979	ExpressionStatement	p -> str [ 0 ] = 0	22:1:365:378	6266892	7	True				
ANR	6266980	AssignmentExpression	p -> str [ 0 ] = 0		6266892	0		=			
ANR	6266981	ArrayIndexing	p -> str [ 0 ]		6266892	0					
ANR	6266982	PtrMemberAccess	p -> str		6266892	0					
ANR	6266983	Identifier	p		6266892	0					
ANR	6266984	Identifier	str		6266892	1					
ANR	6266985	PrimaryExpression	0		6266892	1					
ANR	6266986	PrimaryExpression	0		6266892	1					
ANR	6266987	ReturnStatement	return p ;	23:1:381:389	6266892	8	True				
ANR	6266988	Identifier	p		6266892	0					
ANR	6266989	ReturnType	R_API RStrpool *		6266892	1					
ANR	6266990	Identifier	r_strpool_new		6266892	2					
ANR	6266991	ParameterList	int sz		6266892	3					
ANR	6266992	Parameter	int sz	5:31:100:105	6266892	0	True				
ANR	6266993	ParameterType	int		6266892	0					
ANR	6266994	Identifier	sz		6266892	1					
ANR	6266995	CFGEntryNode	ENTRY		6266892		True				
ANR	6266996	CFGExitNode	EXIT		6266892		True				
ANR	6266997	Symbol	p		6266892						
ANR	6266998	Symbol	malloc		6266892						
ANR	6266999	Symbol	* p -> str		6266892						
ANR	6267000	Symbol	NULL		6266892						
ANR	6267001	Symbol	p -> size		6266892						
ANR	6267002	Symbol	sz		6266892						
ANR	6267003	Symbol	p -> len		6266892						
ANR	6267004	Symbol	RStrpool		6266892						
ANR	6267005	Symbol	* p		6266892						
ANR	6267006	Symbol	* * p		6266892						
ANR	6267007	Symbol	R_NEW		6266892						
ANR	6267008	Symbol	p -> str		6266892						
ANR	6267009	Function	r_strpool_empty	26:0:394:499							
ANR	6267010	FunctionDef	r_strpool_empty (RStrpool * p)		6267009	0					
ANR	6267011	CompoundStatement		26:42:436:499	6267009	0					
ANR	6267012	ExpressionStatement	p -> len = 0	27:1:439:449	6267009	0	True				
ANR	6267013	AssignmentExpression	p -> len = 0		6267009	0		=			
ANR	6267014	PtrMemberAccess	p -> len		6267009	0					
ANR	6267015	Identifier	p		6267009	0					
ANR	6267016	Identifier	len		6267009	1					
ANR	6267017	PrimaryExpression	0		6267009	1					
ANR	6267018	ExpressionStatement	p -> str [ 0 ] = 0	28:1:452:465	6267009	1	True				
ANR	6267019	AssignmentExpression	p -> str [ 0 ] = 0		6267009	0		=			
ANR	6267020	ArrayIndexing	p -> str [ 0 ]		6267009	0					
ANR	6267021	PtrMemberAccess	p -> str		6267009	0					
ANR	6267022	Identifier	p		6267009	0					
ANR	6267023	Identifier	str		6267009	1					
ANR	6267024	PrimaryExpression	0		6267009	1					
ANR	6267025	PrimaryExpression	0		6267009	1					
ANR	6267026	ExpressionStatement	p -> str [ 1 ] = 0	29:1:468:481	6267009	2	True				
ANR	6267027	AssignmentExpression	p -> str [ 1 ] = 0		6267009	0		=			
ANR	6267028	ArrayIndexing	p -> str [ 1 ]		6267009	0					
ANR	6267029	PtrMemberAccess	p -> str		6267009	0					
ANR	6267030	Identifier	p		6267009	0					
ANR	6267031	Identifier	str		6267009	1					
ANR	6267032	PrimaryExpression	1		6267009	1					
ANR	6267033	PrimaryExpression	0		6267009	1					
ANR	6267034	ReturnStatement	return p -> str ;	30:1:484:497	6267009	3	True				
ANR	6267035	PtrMemberAccess	p -> str		6267009	0					
ANR	6267036	Identifier	p		6267009	0					
ANR	6267037	Identifier	str		6267009	1					
ANR	6267038	ReturnType	R_API char *		6267009	1					
ANR	6267039	Identifier	r_strpool_empty		6267009	2					
ANR	6267040	ParameterList	RStrpool * p		6267009	3					
ANR	6267041	Parameter	RStrpool * p	26:29:423:433	6267009	0	True				
ANR	6267042	ParameterType	RStrpool *		6267009	0					
ANR	6267043	Identifier	p		6267009	1					
ANR	6267044	CFGEntryNode	ENTRY		6267009		True				
ANR	6267045	CFGExitNode	EXIT		6267009		True				
ANR	6267046	Symbol	p		6267009						
ANR	6267047	Symbol	* p -> str		6267009						
ANR	6267048	Symbol	p -> len		6267009						
ANR	6267049	Symbol	* p		6267009						
ANR	6267050	Symbol	* * p		6267009						
ANR	6267051	Symbol	p -> str		6267009						
ANR	6267052	Function	r_strpool_alloc	33:0:502:1022							
ANR	6267053	FunctionDef	"r_strpool_alloc (RStrpool * p , int l)"		6267052	0					
ANR	6267054	CompoundStatement		33:49:551:1022	6267052	0					
ANR	6267055	IdentifierDeclStatement	char * ret = p -> str + p -> len ;	34:1:554:581	6267052	0	True				
ANR	6267056	IdentifierDecl	* ret = p -> str + p -> len		6267052	0					
ANR	6267057	IdentifierDeclType	char *		6267052	0					
ANR	6267058	Identifier	ret		6267052	1					
ANR	6267059	AssignmentExpression	* ret = p -> str + p -> len		6267052	2		=			
ANR	6267060	Identifier	ret		6267052	0					
ANR	6267061	AdditiveExpression	p -> str + p -> len		6267052	1		+			
ANR	6267062	PtrMemberAccess	p -> str		6267052	0					
ANR	6267063	Identifier	p		6267052	0					
ANR	6267064	Identifier	str		6267052	1					
ANR	6267065	PtrMemberAccess	p -> len		6267052	1					
ANR	6267066	Identifier	p		6267052	0					
ANR	6267067	Identifier	len		6267052	1					
ANR	6267068	IfStatement	if ( ( p -> len + l ) >= p -> size )		6267052	1					
ANR	6267069	Condition	( p -> len + l ) >= p -> size	35:5:588:610	6267052	0	True				
ANR	6267070	RelationalExpression	( p -> len + l ) >= p -> size		6267052	0		>=			
ANR	6267071	AdditiveExpression	p -> len + l		6267052	0		+			
ANR	6267072	PtrMemberAccess	p -> len		6267052	0					
ANR	6267073	Identifier	p		6267052	0					
ANR	6267074	Identifier	len		6267052	1					
ANR	6267075	Identifier	l		6267052	1					
ANR	6267076	PtrMemberAccess	p -> size		6267052	1					
ANR	6267077	Identifier	p		6267052	0					
ANR	6267078	Identifier	size		6267052	1					
ANR	6267079	CompoundStatement		4:2:65:85	6267052	1					
ANR	6267080	IdentifierDeclStatement	ut64 osize = p -> size ;	36:2:617:637	6267052	0	True				
ANR	6267081	IdentifierDecl	osize = p -> size		6267052	0					
ANR	6267082	IdentifierDeclType	ut64		6267052	0					
ANR	6267083	Identifier	osize		6267052	1					
ANR	6267084	AssignmentExpression	osize = p -> size		6267052	2		=			
ANR	6267085	Identifier	osize		6267052	0					
ANR	6267086	PtrMemberAccess	p -> size		6267052	1					
ANR	6267087	Identifier	p		6267052	0					
ANR	6267088	Identifier	size		6267052	1					
ANR	6267089	IfStatement	if ( l >= R_STRPOOL_INC )		6267052	1					
ANR	6267090	Condition	l >= R_STRPOOL_INC	37:6:645:662	6267052	0	True				
ANR	6267091	RelationalExpression	l >= R_STRPOOL_INC		6267052	0		>=			
ANR	6267092	Identifier	l		6267052	0					
ANR	6267093	Identifier	R_STRPOOL_INC		6267052	1					
ANR	6267094	CompoundStatement		5:26:113:113	6267052	1					
ANR	6267095	ExpressionStatement	p -> size += l + R_STRPOOL_INC	38:3:670:698	6267052	0	True				
ANR	6267096	AssignmentExpression	p -> size += l + R_STRPOOL_INC		6267052	0		+=			
ANR	6267097	PtrMemberAccess	p -> size		6267052	0					
ANR	6267098	Identifier	p		6267052	0					
ANR	6267099	Identifier	size		6267052	1					
ANR	6267100	AdditiveExpression	l + R_STRPOOL_INC		6267052	1		+			
ANR	6267101	Identifier	l		6267052	0					
ANR	6267102	Identifier	R_STRPOOL_INC		6267052	1					
ANR	6267103	ElseStatement	else		6267052	0					
ANR	6267104	CompoundStatement		7:9:157:157	6267052	0					
ANR	6267105	ExpressionStatement	p -> size += R_STRPOOL_INC	40:3:714:738	6267052	0	True				
ANR	6267106	AssignmentExpression	p -> size += R_STRPOOL_INC		6267052	0		+=			
ANR	6267107	PtrMemberAccess	p -> size		6267052	0					
ANR	6267108	Identifier	p		6267052	0					
ANR	6267109	Identifier	size		6267052	1					
ANR	6267110	Identifier	R_STRPOOL_INC		6267052	1					
ANR	6267111	IfStatement	if ( p -> size < osize )		6267052	2					
ANR	6267112	Condition	p -> size < osize	42:6:750:764	6267052	0	True				
ANR	6267113	RelationalExpression	p -> size < osize		6267052	0		<			
ANR	6267114	PtrMemberAccess	p -> size		6267052	0					
ANR	6267115	Identifier	p		6267052	0					
ANR	6267116	Identifier	size		6267052	1					
ANR	6267117	Identifier	osize		6267052	1					
ANR	6267118	CompoundStatement		10:23:215:215	6267052	1					
ANR	6267119	ExpressionStatement	"eprintf ( ""Underflow!\\n"" )"	43:3:772:796	6267052	0	True				
ANR	6267120	CallExpression	"eprintf ( ""Underflow!\\n"" )"		6267052	0					
ANR	6267121	Callee	eprintf		6267052	0					
ANR	6267122	Identifier	eprintf		6267052	0					
ANR	6267123	ArgumentList	"""Underflow!\\n"""		6267052	1					
ANR	6267124	Argument	"""Underflow!\\n"""		6267052	0					
ANR	6267125	PrimaryExpression	"""Underflow!\\n"""		6267052	0					
ANR	6267126	ExpressionStatement	p -> size = osize	44:3:801:816	6267052	1	True				
ANR	6267127	AssignmentExpression	p -> size = osize		6267052	0		=			
ANR	6267128	PtrMemberAccess	p -> size		6267052	0					
ANR	6267129	Identifier	p		6267052	0					
ANR	6267130	Identifier	size		6267052	1					
ANR	6267131	Identifier	osize		6267052	1					
ANR	6267132	ReturnStatement	return NULL ;	45:3:821:832	6267052	2	True				
ANR	6267133	Identifier	NULL		6267052	0					
ANR	6267134	ExpressionStatement	"ret = realloc ( p -> str , p -> size )"	47:2:840:871	6267052	3	True				
ANR	6267135	AssignmentExpression	"ret = realloc ( p -> str , p -> size )"		6267052	0		=			
ANR	6267136	Identifier	ret		6267052	0					
ANR	6267137	CallExpression	"realloc ( p -> str , p -> size )"		6267052	1					
ANR	6267138	Callee	realloc		6267052	0					
ANR	6267139	Identifier	realloc		6267052	0					
ANR	6267140	ArgumentList	p -> str		6267052	1					
ANR	6267141	Argument	p -> str		6267052	0					
ANR	6267142	PtrMemberAccess	p -> str		6267052	0					
ANR	6267143	Identifier	p		6267052	0					
ANR	6267144	Identifier	str		6267052	1					
ANR	6267145	Argument	p -> size		6267052	1					
ANR	6267146	PtrMemberAccess	p -> size		6267052	0					
ANR	6267147	Identifier	p		6267052	0					
ANR	6267148	Identifier	size		6267052	1					
ANR	6267149	IfStatement	if ( ! ret )		6267052	4					
ANR	6267150	Condition	! ret	48:6:879:882	6267052	0	True				
ANR	6267151	UnaryOperationExpression	! ret		6267052	0					
ANR	6267152	UnaryOperator	!		6267052	0					
ANR	6267153	Identifier	ret		6267052	1					
ANR	6267154	CompoundStatement		16:12:333:333	6267052	1					
ANR	6267155	ExpressionStatement	"eprintf ( ""Realloc failed!\\n"" )"	49:3:890:919	6267052	0	True				
ANR	6267156	CallExpression	"eprintf ( ""Realloc failed!\\n"" )"		6267052	0					
ANR	6267157	Callee	eprintf		6267052	0					
ANR	6267158	Identifier	eprintf		6267052	0					
ANR	6267159	ArgumentList	"""Realloc failed!\\n"""		6267052	1					
ANR	6267160	Argument	"""Realloc failed!\\n"""		6267052	0					
ANR	6267161	PrimaryExpression	"""Realloc failed!\\n"""		6267052	0					
ANR	6267162	ExpressionStatement	free ( p -> str )	50:3:924:937	6267052	1	True				
ANR	6267163	CallExpression	free ( p -> str )		6267052	0					
ANR	6267164	Callee	free		6267052	0					
ANR	6267165	Identifier	free		6267052	0					
ANR	6267166	ArgumentList	p -> str		6267052	1					
ANR	6267167	Argument	p -> str		6267052	0					
ANR	6267168	PtrMemberAccess	p -> str		6267052	0					
ANR	6267169	Identifier	p		6267052	0					
ANR	6267170	Identifier	str		6267052	1					
ANR	6267171	ReturnStatement	return NULL ;	51:3:942:953	6267052	2	True				
ANR	6267172	Identifier	NULL		6267052	0					
ANR	6267173	ExpressionStatement	p -> str = ret	53:2:961:973	6267052	5	True				
ANR	6267174	AssignmentExpression	p -> str = ret		6267052	0		=			
ANR	6267175	PtrMemberAccess	p -> str		6267052	0					
ANR	6267176	Identifier	p		6267052	0					
ANR	6267177	Identifier	str		6267052	1					
ANR	6267178	Identifier	ret		6267052	1					
ANR	6267179	ExpressionStatement	ret += p -> len	54:2:977:990	6267052	6	True				
ANR	6267180	AssignmentExpression	ret += p -> len		6267052	0		+=			
ANR	6267181	Identifier	ret		6267052	0					
ANR	6267182	PtrMemberAccess	p -> len		6267052	1					
ANR	6267183	Identifier	p		6267052	0					
ANR	6267184	Identifier	len		6267052	1					
ANR	6267185	ExpressionStatement	p -> len += l	56:1:996:1007	6267052	2	True				
ANR	6267186	AssignmentExpression	p -> len += l		6267052	0		+=			
ANR	6267187	PtrMemberAccess	p -> len		6267052	0					
ANR	6267188	Identifier	p		6267052	0					
ANR	6267189	Identifier	len		6267052	1					
ANR	6267190	Identifier	l		6267052	1					
ANR	6267191	ReturnStatement	return ret ;	57:1:1010:1020	6267052	3	True				
ANR	6267192	Identifier	ret		6267052	0					
ANR	6267193	ReturnType	R_API char *		6267052	1					
ANR	6267194	Identifier	r_strpool_alloc		6267052	2					
ANR	6267195	ParameterList	"RStrpool * p , int l"		6267052	3					
ANR	6267196	Parameter	RStrpool * p	33:29:531:541	6267052	0	True				
ANR	6267197	ParameterType	RStrpool *		6267052	0					
ANR	6267198	Identifier	p		6267052	1					
ANR	6267199	Parameter	int l	33:42:544:548	6267052	1	True				
ANR	6267200	ParameterType	int		6267052	0					
ANR	6267201	Identifier	l		6267052	1					
ANR	6267202	CFGEntryNode	ENTRY		6267052		True				
ANR	6267203	CFGExitNode	EXIT		6267052		True				
ANR	6267204	Symbol	p		6267052						
ANR	6267205	Symbol	ret		6267052						
ANR	6267206	Symbol	osize		6267052						
ANR	6267207	Symbol	p -> size		6267052						
ANR	6267208	Symbol	NULL		6267052						
ANR	6267209	Symbol	p -> len		6267052						
ANR	6267210	Symbol	* p		6267052						
ANR	6267211	Symbol	realloc		6267052						
ANR	6267212	Symbol	l		6267052						
ANR	6267213	Symbol	R_STRPOOL_INC		6267052						
ANR	6267214	Symbol	p -> str		6267052						
ANR	6267215	Function	r_strpool_memcat	60:0:1025:1214							
ANR	6267216	FunctionDef	"r_strpool_memcat (RStrpool * p , const char * s , int len)"		6267215	0					
ANR	6267217	CompoundStatement		60:64:1089:1214	6267215	0					
ANR	6267218	IdentifierDeclStatement	"char * ptr = r_strpool_alloc ( p , len ) ;"	61:1:1092:1128	6267215	0	True				
ANR	6267219	IdentifierDecl	"* ptr = r_strpool_alloc ( p , len )"		6267215	0					
ANR	6267220	IdentifierDeclType	char *		6267215	0					
ANR	6267221	Identifier	ptr		6267215	1					
ANR	6267222	AssignmentExpression	"* ptr = r_strpool_alloc ( p , len )"		6267215	2		=			
ANR	6267223	Identifier	ptr		6267215	0					
ANR	6267224	CallExpression	"r_strpool_alloc ( p , len )"		6267215	1					
ANR	6267225	Callee	r_strpool_alloc		6267215	0					
ANR	6267226	Identifier	r_strpool_alloc		6267215	0					
ANR	6267227	ArgumentList	p		6267215	1					
ANR	6267228	Argument	p		6267215	0					
ANR	6267229	Identifier	p		6267215	0					
ANR	6267230	Argument	len		6267215	1					
ANR	6267231	Identifier	len		6267215	0					
ANR	6267232	IfStatement	if ( ! ptr )		6267215	1					
ANR	6267233	Condition	! ptr	62:5:1135:1138	6267215	0	True				
ANR	6267234	UnaryOperationExpression	! ptr		6267215	0					
ANR	6267235	UnaryOperator	!		6267215	0					
ANR	6267236	Identifier	ptr		6267215	1					
ANR	6267237	CompoundStatement		3:11:51:51	6267215	1					
ANR	6267238	ReturnStatement	return - 1 ;	63:2:1145:1154	6267215	0	True				
ANR	6267239	UnaryOperationExpression	- 1		6267215	0					
ANR	6267240	UnaryOperator	-		6267215	0					
ANR	6267241	PrimaryExpression	1		6267215	1					
ANR	6267242	ExpressionStatement	"memcpy ( ptr , s , len )"	65:1:1160:1180	6267215	2	True				
ANR	6267243	CallExpression	"memcpy ( ptr , s , len )"		6267215	0					
ANR	6267244	Callee	memcpy		6267215	0					
ANR	6267245	Identifier	memcpy		6267215	0					
ANR	6267246	ArgumentList	ptr		6267215	1					
ANR	6267247	Argument	ptr		6267215	0					
ANR	6267248	Identifier	ptr		6267215	0					
ANR	6267249	Argument	s		6267215	1					
ANR	6267250	Identifier	s		6267215	0					
ANR	6267251	Argument	len		6267215	2					
ANR	6267252	Identifier	len		6267215	0					
ANR	6267253	ReturnStatement	return ( size_t ) ( ptr - p -> str ) ;	66:1:1183:1212	6267215	3	True				
ANR	6267254	CastExpression	( size_t ) ( ptr - p -> str )		6267215	0					
ANR	6267255	CastTarget	size_t		6267215	0					
ANR	6267256	AdditiveExpression	ptr - p -> str		6267215	1		-			
ANR	6267257	Identifier	ptr		6267215	0					
ANR	6267258	PtrMemberAccess	p -> str		6267215	1					
ANR	6267259	Identifier	p		6267215	0					
ANR	6267260	Identifier	str		6267215	1					
ANR	6267261	ReturnType	R_API int		6267215	1					
ANR	6267262	Identifier	r_strpool_memcat		6267215	2					
ANR	6267263	ParameterList	"RStrpool * p , const char * s , int len"		6267215	3					
ANR	6267264	Parameter	RStrpool * p	60:27:1052:1062	6267215	0	True				
ANR	6267265	ParameterType	RStrpool *		6267215	0					
ANR	6267266	Identifier	p		6267215	1					
ANR	6267267	Parameter	const char * s	60:40:1065:1077	6267215	1	True				
ANR	6267268	ParameterType	const char *		6267215	0					
ANR	6267269	Identifier	s		6267215	1					
ANR	6267270	Parameter	int len	60:55:1080:1086	6267215	2	True				
ANR	6267271	ParameterType	int		6267215	0					
ANR	6267272	Identifier	len		6267215	1					
ANR	6267273	CFGEntryNode	ENTRY		6267215		True				
ANR	6267274	CFGExitNode	EXIT		6267215		True				
ANR	6267275	Symbol	p		6267215						
ANR	6267276	Symbol	s		6267215						
ANR	6267277	Symbol	len		6267215						
ANR	6267278	Symbol	r_strpool_alloc		6267215						
ANR	6267279	Symbol	* p		6267215						
ANR	6267280	Symbol	p -> str		6267215						
ANR	6267281	Symbol	ptr		6267215						
ANR	6267282	Function	r_strpool_append	69:0:1217:1335							
ANR	6267283	FunctionDef	"r_strpool_append (RStrpool * p , const char * s)"		6267282	0					
ANR	6267284	CompoundStatement		69:55:1272:1335	6267282	0					
ANR	6267285	IdentifierDeclStatement	int l = strlen ( s ) + 1 ;	70:1:1275:1297	6267282	0	True				
ANR	6267286	IdentifierDecl	l = strlen ( s ) + 1		6267282	0					
ANR	6267287	IdentifierDeclType	int		6267282	0					
ANR	6267288	Identifier	l		6267282	1					
ANR	6267289	AssignmentExpression	l = strlen ( s ) + 1		6267282	2		=			
ANR	6267290	Identifier	l		6267282	0					
ANR	6267291	AdditiveExpression	strlen ( s ) + 1		6267282	1		+			
ANR	6267292	CallExpression	strlen ( s )		6267282	0					
ANR	6267293	Callee	strlen		6267282	0					
ANR	6267294	Identifier	strlen		6267282	0					
ANR	6267295	ArgumentList	s		6267282	1					
ANR	6267296	Argument	s		6267282	0					
ANR	6267297	Identifier	s		6267282	0					
ANR	6267298	PrimaryExpression	1		6267282	1					
ANR	6267299	ReturnStatement	"return r_strpool_memcat ( p , s , l ) ;"	71:1:1300:1333	6267282	1	True				
ANR	6267300	CallExpression	"r_strpool_memcat ( p , s , l )"		6267282	0					
ANR	6267301	Callee	r_strpool_memcat		6267282	0					
ANR	6267302	Identifier	r_strpool_memcat		6267282	0					
ANR	6267303	ArgumentList	p		6267282	1					
ANR	6267304	Argument	p		6267282	0					
ANR	6267305	Identifier	p		6267282	0					
ANR	6267306	Argument	s		6267282	1					
ANR	6267307	Identifier	s		6267282	0					
ANR	6267308	Argument	l		6267282	2					
ANR	6267309	Identifier	l		6267282	0					
ANR	6267310	ReturnType	R_API int		6267282	1					
ANR	6267311	Identifier	r_strpool_append		6267282	2					
ANR	6267312	ParameterList	"RStrpool * p , const char * s"		6267282	3					
ANR	6267313	Parameter	RStrpool * p	69:27:1244:1254	6267282	0	True				
ANR	6267314	ParameterType	RStrpool *		6267282	0					
ANR	6267315	Identifier	p		6267282	1					
ANR	6267316	Parameter	const char * s	69:40:1257:1269	6267282	1	True				
ANR	6267317	ParameterType	const char *		6267282	0					
ANR	6267318	Identifier	s		6267282	1					
ANR	6267319	CFGEntryNode	ENTRY		6267282		True				
ANR	6267320	CFGExitNode	EXIT		6267282		True				
ANR	6267321	Symbol	p		6267282						
ANR	6267322	Symbol	strlen		6267282						
ANR	6267323	Symbol	r_strpool_memcat		6267282						
ANR	6267324	Symbol	s		6267282						
ANR	6267325	Symbol	l		6267282						
ANR	6267326	Function	r_strpool_ansi_chop	74:0:1338:1496							
ANR	6267327	FunctionDef	"r_strpool_ansi_chop (RStrpool * p , int n)"		6267326	0					
ANR	6267328	CompoundStatement		74:49:1387:1496	6267326	0					
ANR	6267329	IdentifierDeclStatement	"int i = r_str_ansi_trim ( p -> str , p -> len , n ) ;"	76:1:1427:1470	6267326	0	True				
ANR	6267330	IdentifierDecl	"i = r_str_ansi_trim ( p -> str , p -> len , n )"		6267326	0					
ANR	6267331	IdentifierDeclType	int		6267326	0					
ANR	6267332	Identifier	i		6267326	1					
ANR	6267333	AssignmentExpression	"i = r_str_ansi_trim ( p -> str , p -> len , n )"		6267326	2		=			
ANR	6267334	Identifier	i		6267326	0					
ANR	6267335	CallExpression	"r_str_ansi_trim ( p -> str , p -> len , n )"		6267326	1					
ANR	6267336	Callee	r_str_ansi_trim		6267326	0					
ANR	6267337	Identifier	r_str_ansi_trim		6267326	0					
ANR	6267338	ArgumentList	p -> str		6267326	1					
ANR	6267339	Argument	p -> str		6267326	0					
ANR	6267340	PtrMemberAccess	p -> str		6267326	0					
ANR	6267341	Identifier	p		6267326	0					
ANR	6267342	Identifier	str		6267326	1					
ANR	6267343	Argument	p -> len		6267326	1					
ANR	6267344	PtrMemberAccess	p -> len		6267326	0					
ANR	6267345	Identifier	p		6267326	0					
ANR	6267346	Identifier	len		6267326	1					
ANR	6267347	Argument	n		6267326	2					
ANR	6267348	Identifier	n		6267326	0					
ANR	6267349	ExpressionStatement	p -> len = i	77:1:1473:1483	6267326	1	True				
ANR	6267350	AssignmentExpression	p -> len = i		6267326	0		=			
ANR	6267351	PtrMemberAccess	p -> len		6267326	0					
ANR	6267352	Identifier	p		6267326	0					
ANR	6267353	Identifier	len		6267326	1					
ANR	6267354	Identifier	i		6267326	1					
ANR	6267355	ReturnStatement	return i ;	78:1:1486:1494	6267326	2	True				
ANR	6267356	Identifier	i		6267326	0					
ANR	6267357	ReturnType	R_API int		6267326	1					
ANR	6267358	Identifier	r_strpool_ansi_chop		6267326	2					
ANR	6267359	ParameterList	"RStrpool * p , int n"		6267326	3					
ANR	6267360	Parameter	RStrpool * p	74:30:1368:1378	6267326	0	True				
ANR	6267361	ParameterType	RStrpool *		6267326	0					
ANR	6267362	Identifier	p		6267326	1					
ANR	6267363	Parameter	int n	74:43:1381:1385	6267326	1	True				
ANR	6267364	ParameterType	int		6267326	0					
ANR	6267365	Identifier	n		6267326	1					
ANR	6267366	CFGEntryNode	ENTRY		6267326		True				
ANR	6267367	CFGExitNode	EXIT		6267326		True				
ANR	6267368	Symbol	p		6267326						
ANR	6267369	Symbol	r_str_ansi_trim		6267326						
ANR	6267370	Symbol	p -> len		6267326						
ANR	6267371	Symbol	i		6267326						
ANR	6267372	Symbol	* p		6267326						
ANR	6267373	Symbol	p -> str		6267326						
ANR	6267374	Symbol	n		6267326						
ANR	6267375	Function	r_strpool_free	81:0:1499:1568							
ANR	6267376	FunctionDef	r_strpool_free (RStrpool * p)		6267375	0					
ANR	6267377	CompoundStatement		81:40:1539:1568	6267375	0					
ANR	6267378	ExpressionStatement	free ( p -> str )	82:1:1542:1555	6267375	0	True				
ANR	6267379	CallExpression	free ( p -> str )		6267375	0					
ANR	6267380	Callee	free		6267375	0					
ANR	6267381	Identifier	free		6267375	0					
ANR	6267382	ArgumentList	p -> str		6267375	1					
ANR	6267383	Argument	p -> str		6267375	0					
ANR	6267384	PtrMemberAccess	p -> str		6267375	0					
ANR	6267385	Identifier	p		6267375	0					
ANR	6267386	Identifier	str		6267375	1					
ANR	6267387	ExpressionStatement	free ( p )	83:1:1558:1566	6267375	1	True				
ANR	6267388	CallExpression	free ( p )		6267375	0					
ANR	6267389	Callee	free		6267375	0					
ANR	6267390	Identifier	free		6267375	0					
ANR	6267391	ArgumentList	p		6267375	1					
ANR	6267392	Argument	p		6267375	0					
ANR	6267393	Identifier	p		6267375	0					
ANR	6267394	ReturnType	R_API void		6267375	1					
ANR	6267395	Identifier	r_strpool_free		6267375	2					
ANR	6267396	ParameterList	RStrpool * p		6267375	3					
ANR	6267397	Parameter	RStrpool * p	81:27:1526:1536	6267375	0	True				
ANR	6267398	ParameterType	RStrpool *		6267375	0					
ANR	6267399	Identifier	p		6267375	1					
ANR	6267400	CFGEntryNode	ENTRY		6267375		True				
ANR	6267401	CFGExitNode	EXIT		6267375		True				
ANR	6267402	Symbol	p		6267375						
ANR	6267403	Symbol	* p		6267375						
ANR	6267404	Symbol	p -> str		6267375						
ANR	6267405	Function	r_strpool_fit	86:0:1571:1823							
ANR	6267406	FunctionDef	r_strpool_fit (RStrpool * p)		6267405	0					
ANR	6267407	CompoundStatement		86:37:1608:1823	6267405	0					
ANR	6267408	IdentifierDeclStatement	char * s ;	87:1:1611:1618	6267405	0	True				
ANR	6267409	IdentifierDecl	* s		6267405	0					
ANR	6267410	IdentifierDeclType	char *		6267405	0					
ANR	6267411	Identifier	s		6267405	1					
ANR	6267412	IfStatement	if ( p -> len == p -> size )		6267405	1					
ANR	6267413	Condition	p -> len == p -> size	88:5:1625:1641	6267405	0	True				
ANR	6267414	EqualityExpression	p -> len == p -> size		6267405	0		==			
ANR	6267415	PtrMemberAccess	p -> len		6267405	0					
ANR	6267416	Identifier	p		6267405	0					
ANR	6267417	Identifier	len		6267405	1					
ANR	6267418	PtrMemberAccess	p -> size		6267405	1					
ANR	6267419	Identifier	p		6267405	0					
ANR	6267420	Identifier	size		6267405	1					
ANR	6267421	CompoundStatement		3:24:35:35	6267405	1					
ANR	6267422	ReturnStatement	return false ;	89:2:1648:1660	6267405	0	True				
ANR	6267423	Identifier	false		6267405	0					
ANR	6267424	ExpressionStatement	"s = realloc ( p -> str , p -> len )"	91:1:1666:1694	6267405	2	True				
ANR	6267425	AssignmentExpression	"s = realloc ( p -> str , p -> len )"		6267405	0		=			
ANR	6267426	Identifier	s		6267405	0					
ANR	6267427	CallExpression	"realloc ( p -> str , p -> len )"		6267405	1					
ANR	6267428	Callee	realloc		6267405	0					
ANR	6267429	Identifier	realloc		6267405	0					
ANR	6267430	ArgumentList	p -> str		6267405	1					
ANR	6267431	Argument	p -> str		6267405	0					
ANR	6267432	PtrMemberAccess	p -> str		6267405	0					
ANR	6267433	Identifier	p		6267405	0					
ANR	6267434	Identifier	str		6267405	1					
ANR	6267435	Argument	p -> len		6267405	1					
ANR	6267436	PtrMemberAccess	p -> len		6267405	0					
ANR	6267437	Identifier	p		6267405	0					
ANR	6267438	Identifier	len		6267405	1					
ANR	6267439	IfStatement	if ( ! s )		6267405	3					
ANR	6267440	Condition	! s	92:5:1701:1702	6267405	0	True				
ANR	6267441	UnaryOperationExpression	! s		6267405	0					
ANR	6267442	UnaryOperator	!		6267405	0					
ANR	6267443	Identifier	s		6267405	1					
ANR	6267444	CompoundStatement		8:1:97:97	6267405	1					
ANR	6267445	ExpressionStatement	"eprintf ( ""Realloc failed!\\n"" )"	94:2:1710:1739	6267405	0	True				
ANR	6267446	CallExpression	"eprintf ( ""Realloc failed!\\n"" )"		6267405	0					
ANR	6267447	Callee	eprintf		6267405	0					
ANR	6267448	Identifier	eprintf		6267405	0					
ANR	6267449	ArgumentList	"""Realloc failed!\\n"""		6267405	1					
ANR	6267450	Argument	"""Realloc failed!\\n"""		6267405	0					
ANR	6267451	PrimaryExpression	"""Realloc failed!\\n"""		6267405	0					
ANR	6267452	ExpressionStatement	free ( p -> str )	95:2:1743:1756	6267405	1	True				
ANR	6267453	CallExpression	free ( p -> str )		6267405	0					
ANR	6267454	Callee	free		6267405	0					
ANR	6267455	Identifier	free		6267405	0					
ANR	6267456	ArgumentList	p -> str		6267405	1					
ANR	6267457	Argument	p -> str		6267405	0					
ANR	6267458	PtrMemberAccess	p -> str		6267405	0					
ANR	6267459	Identifier	p		6267405	0					
ANR	6267460	Identifier	str		6267405	1					
ANR	6267461	ReturnStatement	return false ;	96:2:1760:1772	6267405	2	True				
ANR	6267462	Identifier	false		6267405	0					
ANR	6267463	ExpressionStatement	p -> str = s	98:1:1778:1788	6267405	4	True				
ANR	6267464	AssignmentExpression	p -> str = s		6267405	0		=			
ANR	6267465	PtrMemberAccess	p -> str		6267405	0					
ANR	6267466	Identifier	p		6267405	0					
ANR	6267467	Identifier	str		6267405	1					
ANR	6267468	Identifier	s		6267405	1					
ANR	6267469	ExpressionStatement	p -> size = p -> len	99:1:1791:1807	6267405	5	True				
ANR	6267470	AssignmentExpression	p -> size = p -> len		6267405	0		=			
ANR	6267471	PtrMemberAccess	p -> size		6267405	0					
ANR	6267472	Identifier	p		6267405	0					
ANR	6267473	Identifier	size		6267405	1					
ANR	6267474	PtrMemberAccess	p -> len		6267405	1					
ANR	6267475	Identifier	p		6267405	0					
ANR	6267476	Identifier	len		6267405	1					
ANR	6267477	ReturnStatement	return true ;	100:1:1810:1821	6267405	6	True				
ANR	6267478	Identifier	true		6267405	0					
ANR	6267479	ReturnType	R_API int		6267405	1					
ANR	6267480	Identifier	r_strpool_fit		6267405	2					
ANR	6267481	ParameterList	RStrpool * p		6267405	3					
ANR	6267482	Parameter	RStrpool * p	86:24:1595:1605	6267405	0	True				
ANR	6267483	ParameterType	RStrpool *		6267405	0					
ANR	6267484	Identifier	p		6267405	1					
ANR	6267485	CFGEntryNode	ENTRY		6267405		True				
ANR	6267486	CFGExitNode	EXIT		6267405		True				
ANR	6267487	Symbol	p		6267405						
ANR	6267488	Symbol	s		6267405						
ANR	6267489	Symbol	p -> size		6267405						
ANR	6267490	Symbol	p -> len		6267405						
ANR	6267491	Symbol	false		6267405						
ANR	6267492	Symbol	true		6267405						
ANR	6267493	Symbol	* p		6267405						
ANR	6267494	Symbol	realloc		6267405						
ANR	6267495	Symbol	p -> str		6267405						
ANR	6267496	Function	r_strpool_get	103:0:1826:1974							
ANR	6267497	FunctionDef	"r_strpool_get (RStrpool * p , int index)"		6267496	0					
ANR	6267498	CompoundStatement		103:50:1876:1974	6267496	0					
ANR	6267499	IfStatement	if ( ! p || ! p -> str || index < 0 || index >= p -> len )		6267496	0					
ANR	6267500	Condition	! p || ! p -> str || index < 0 || index >= p -> len	104:5:1883:1927	6267496	0	True				
ANR	6267501	OrExpression	! p || ! p -> str || index < 0 || index >= p -> len		6267496	0		||			
ANR	6267502	UnaryOperationExpression	! p		6267496	0					
ANR	6267503	UnaryOperator	!		6267496	0					
ANR	6267504	Identifier	p		6267496	1					
ANR	6267505	OrExpression	! p -> str || index < 0 || index >= p -> len		6267496	1		||			
ANR	6267506	UnaryOperationExpression	! p -> str		6267496	0					
ANR	6267507	UnaryOperator	!		6267496	0					
ANR	6267508	PtrMemberAccess	p -> str		6267496	1					
ANR	6267509	Identifier	p		6267496	0					
ANR	6267510	Identifier	str		6267496	1					
ANR	6267511	OrExpression	index < 0 || index >= p -> len		6267496	1		||			
ANR	6267512	RelationalExpression	index < 0		6267496	0		<			
ANR	6267513	Identifier	index		6267496	0					
ANR	6267514	PrimaryExpression	0		6267496	1					
ANR	6267515	RelationalExpression	index >= p -> len		6267496	1		>=			
ANR	6267516	Identifier	index		6267496	0					
ANR	6267517	PtrMemberAccess	p -> len		6267496	1					
ANR	6267518	Identifier	p		6267496	0					
ANR	6267519	Identifier	len		6267496	1					
ANR	6267520	CompoundStatement		2:52:53:53	6267496	1					
ANR	6267521	ReturnStatement	return NULL ;	105:2:1934:1945	6267496	0	True				
ANR	6267522	Identifier	NULL		6267496	0					
ANR	6267523	ReturnStatement	return p -> str + index ;	107:1:1951:1972	6267496	1	True				
ANR	6267524	AdditiveExpression	p -> str + index		6267496	0		+			
ANR	6267525	PtrMemberAccess	p -> str		6267496	0					
ANR	6267526	Identifier	p		6267496	0					
ANR	6267527	Identifier	str		6267496	1					
ANR	6267528	Identifier	index		6267496	1					
ANR	6267529	ReturnType	R_API char *		6267496	1					
ANR	6267530	Identifier	r_strpool_get		6267496	2					
ANR	6267531	ParameterList	"RStrpool * p , int index"		6267496	3					
ANR	6267532	Parameter	RStrpool * p	103:26:1852:1862	6267496	0	True				
ANR	6267533	ParameterType	RStrpool *		6267496	0					
ANR	6267534	Identifier	p		6267496	1					
ANR	6267535	Parameter	int index	103:39:1865:1873	6267496	1	True				
ANR	6267536	ParameterType	int		6267496	0					
ANR	6267537	Identifier	index		6267496	1					
ANR	6267538	CFGEntryNode	ENTRY		6267496		True				
ANR	6267539	CFGExitNode	EXIT		6267496		True				
ANR	6267540	Symbol	p		6267496						
ANR	6267541	Symbol	NULL		6267496						
ANR	6267542	Symbol	p -> len		6267496						
ANR	6267543	Symbol	index		6267496						
ANR	6267544	Symbol	* p		6267496						
ANR	6267545	Symbol	p -> str		6267496						
ANR	6267546	Function	r_strpool_get_i	110:0:1977:2224							
ANR	6267547	FunctionDef	"r_strpool_get_i (RStrpool * p , int index)"		6267546	0					
ANR	6267548	CompoundStatement		110:52:2029:2224	6267546	0					
ANR	6267549	IdentifierDeclStatement	"int i , n = 0 ;"	111:1:2032:2044	6267546	0	True				
ANR	6267550	IdentifierDecl	i		6267546	0					
ANR	6267551	IdentifierDeclType	int		6267546	0					
ANR	6267552	Identifier	i		6267546	1					
ANR	6267553	IdentifierDecl	n = 0		6267546	1					
ANR	6267554	IdentifierDeclType	int		6267546	0					
ANR	6267555	Identifier	n		6267546	1					
ANR	6267556	AssignmentExpression	n = 0		6267546	2		=			
ANR	6267557	Identifier	n		6267546	0					
ANR	6267558	PrimaryExpression	0		6267546	1					
ANR	6267559	IfStatement	if ( index < 0 || index >= p -> len )		6267546	1					
ANR	6267560	Condition	index < 0 || index >= p -> len	112:5:2051:2078	6267546	0	True				
ANR	6267561	OrExpression	index < 0 || index >= p -> len		6267546	0		||			
ANR	6267562	RelationalExpression	index < 0		6267546	0		<			
ANR	6267563	Identifier	index		6267546	0					
ANR	6267564	PrimaryExpression	0		6267546	1					
ANR	6267565	RelationalExpression	index >= p -> len		6267546	1		>=			
ANR	6267566	Identifier	index		6267546	0					
ANR	6267567	PtrMemberAccess	p -> len		6267546	1					
ANR	6267568	Identifier	p		6267546	0					
ANR	6267569	Identifier	len		6267546	1					
ANR	6267570	CompoundStatement		3:35:51:51	6267546	1					
ANR	6267571	ReturnStatement	return NULL ;	113:2:2085:2096	6267546	0	True				
ANR	6267572	Identifier	NULL		6267546	0					
ANR	6267573	ForStatement	for ( i = 0 ; i < index ; i ++ )		6267546	2					
ANR	6267574	ForInit	i = 0 ;	115:6:2107:2112	6267546	0	True				
ANR	6267575	AssignmentExpression	i = 0		6267546	0		=			
ANR	6267576	Identifier	i		6267546	0					
ANR	6267577	PrimaryExpression	0		6267546	1					
ANR	6267578	Condition	i < index	115:13:2114:2122	6267546	1	True				
ANR	6267579	RelationalExpression	i < index		6267546	0		<			
ANR	6267580	Identifier	i		6267546	0					
ANR	6267581	Identifier	index		6267546	1					
ANR	6267582	PostIncDecOperationExpression	i ++	115:24:2125:2127	6267546	2	True				
ANR	6267583	Identifier	i		6267546	0					
ANR	6267584	IncDec	++		6267546	1					
ANR	6267585	CompoundStatement		7:2:104:135	6267546	3					
ANR	6267586	IdentifierDeclStatement	"char * s = r_strpool_next ( p , n ) ;"	116:2:2134:2165	6267546	0	True				
ANR	6267587	IdentifierDecl	"* s = r_strpool_next ( p , n )"		6267546	0					
ANR	6267588	IdentifierDeclType	char *		6267546	0					
ANR	6267589	Identifier	s		6267546	1					
ANR	6267590	AssignmentExpression	"* s = r_strpool_next ( p , n )"		6267546	2		=			
ANR	6267591	Identifier	s		6267546	0					
ANR	6267592	CallExpression	"r_strpool_next ( p , n )"		6267546	1					
ANR	6267593	Callee	r_strpool_next		6267546	0					
ANR	6267594	Identifier	r_strpool_next		6267546	0					
ANR	6267595	ArgumentList	p		6267546	1					
ANR	6267596	Argument	p		6267546	0					
ANR	6267597	Identifier	p		6267546	0					
ANR	6267598	Argument	n		6267546	1					
ANR	6267599	Identifier	n		6267546	0					
ANR	6267600	ExpressionStatement	"n = r_strpool_get_index ( p , s )"	117:2:2169:2199	6267546	1	True				
ANR	6267601	AssignmentExpression	"n = r_strpool_get_index ( p , s )"		6267546	0		=			
ANR	6267602	Identifier	n		6267546	0					
ANR	6267603	CallExpression	"r_strpool_get_index ( p , s )"		6267546	1					
ANR	6267604	Callee	r_strpool_get_index		6267546	0					
ANR	6267605	Identifier	r_strpool_get_index		6267546	0					
ANR	6267606	ArgumentList	p		6267546	1					
ANR	6267607	Argument	p		6267546	0					
ANR	6267608	Identifier	p		6267546	0					
ANR	6267609	Argument	s		6267546	1					
ANR	6267610	Identifier	s		6267546	0					
ANR	6267611	ReturnStatement	return p -> str + n ;	119:1:2205:2222	6267546	3	True				
ANR	6267612	AdditiveExpression	p -> str + n		6267546	0		+			
ANR	6267613	PtrMemberAccess	p -> str		6267546	0					
ANR	6267614	Identifier	p		6267546	0					
ANR	6267615	Identifier	str		6267546	1					
ANR	6267616	Identifier	n		6267546	1					
ANR	6267617	ReturnType	R_API char *		6267546	1					
ANR	6267618	Identifier	r_strpool_get_i		6267546	2					
ANR	6267619	ParameterList	"RStrpool * p , int index"		6267546	3					
ANR	6267620	Parameter	RStrpool * p	110:28:2005:2015	6267546	0	True				
ANR	6267621	ParameterType	RStrpool *		6267546	0					
ANR	6267622	Identifier	p		6267546	1					
ANR	6267623	Parameter	int index	110:41:2018:2026	6267546	1	True				
ANR	6267624	ParameterType	int		6267546	0					
ANR	6267625	Identifier	index		6267546	1					
ANR	6267626	CFGEntryNode	ENTRY		6267546		True				
ANR	6267627	CFGExitNode	EXIT		6267546		True				
ANR	6267628	Symbol	p		6267546						
ANR	6267629	Symbol	NULL		6267546						
ANR	6267630	Symbol	s		6267546						
ANR	6267631	Symbol	r_strpool_next		6267546						
ANR	6267632	Symbol	p -> len		6267546						
ANR	6267633	Symbol	index		6267546						
ANR	6267634	Symbol	i		6267546						
ANR	6267635	Symbol	r_strpool_get_index		6267546						
ANR	6267636	Symbol	* p		6267546						
ANR	6267637	Symbol	p -> str		6267546						
ANR	6267638	Symbol	n		6267546						
ANR	6267639	Function	r_strpool_get_index	122:0:2227:2349							
ANR	6267640	FunctionDef	"r_strpool_get_index (RStrpool * p , const char * s)"		6267639	0					
ANR	6267641	CompoundStatement		122:58:2285:2349	6267639	0					
ANR	6267642	IdentifierDeclStatement	int ret = ( size_t ) ( s - p -> str ) ;	123:1:2288:2318	6267639	0	True				
ANR	6267643	IdentifierDecl	ret = ( size_t ) ( s - p -> str )		6267639	0					
ANR	6267644	IdentifierDeclType	int		6267639	0					
ANR	6267645	Identifier	ret		6267639	1					
ANR	6267646	AssignmentExpression	ret = ( size_t ) ( s - p -> str )		6267639	2		=			
ANR	6267647	Identifier	ret		6267639	0					
ANR	6267648	CastExpression	( size_t ) ( s - p -> str )		6267639	1					
ANR	6267649	CastTarget	size_t		6267639	0					
ANR	6267650	AdditiveExpression	s - p -> str		6267639	1		-			
ANR	6267651	Identifier	s		6267639	0					
ANR	6267652	PtrMemberAccess	p -> str		6267639	1					
ANR	6267653	Identifier	p		6267639	0					
ANR	6267654	Identifier	str		6267639	1					
ANR	6267655	ReturnStatement	return ( ret > 0 ) ? ret : 0 ;	124:1:2321:2347	6267639	1	True				
ANR	6267656	ConditionalExpression	( ret > 0 ) ? ret : 0		6267639	0					
ANR	6267657	Condition	ret > 0		6267639	0					
ANR	6267658	RelationalExpression	ret > 0		6267639	0		>			
ANR	6267659	Identifier	ret		6267639	0					
ANR	6267660	PrimaryExpression	0		6267639	1					
ANR	6267661	Identifier	ret		6267639	1					
ANR	6267662	PrimaryExpression	0		6267639	2					
ANR	6267663	ReturnType	R_API int		6267639	1					
ANR	6267664	Identifier	r_strpool_get_index		6267639	2					
ANR	6267665	ParameterList	"RStrpool * p , const char * s"		6267639	3					
ANR	6267666	Parameter	RStrpool * p	122:30:2257:2267	6267639	0	True				
ANR	6267667	ParameterType	RStrpool *		6267639	0					
ANR	6267668	Identifier	p		6267639	1					
ANR	6267669	Parameter	const char * s	122:43:2270:2282	6267639	1	True				
ANR	6267670	ParameterType	const char *		6267639	0					
ANR	6267671	Identifier	s		6267639	1					
ANR	6267672	CFGEntryNode	ENTRY		6267639		True				
ANR	6267673	CFGExitNode	EXIT		6267639		True				
ANR	6267674	Symbol	p		6267639						
ANR	6267675	Symbol	ret		6267639						
ANR	6267676	Symbol	s		6267639						
ANR	6267677	Symbol	* p		6267639						
ANR	6267678	Symbol	p -> str		6267639						
ANR	6267679	Function	r_strpool_next	127:0:2352:2605							
ANR	6267680	FunctionDef	"r_strpool_next (RStrpool * p , int index)"		6267679	0					
ANR	6267681	CompoundStatement		127:51:2403:2605	6267679	0					
ANR	6267682	IdentifierDeclStatement	"char * ptr = r_strpool_get ( p , index ) ;"	128:1:2406:2442	6267679	0	True				
ANR	6267683	IdentifierDecl	"* ptr = r_strpool_get ( p , index )"		6267679	0					
ANR	6267684	IdentifierDeclType	char *		6267679	0					
ANR	6267685	Identifier	ptr		6267679	1					
ANR	6267686	AssignmentExpression	"* ptr = r_strpool_get ( p , index )"		6267679	2		=			
ANR	6267687	Identifier	ptr		6267679	0					
ANR	6267688	CallExpression	"r_strpool_get ( p , index )"		6267679	1					
ANR	6267689	Callee	r_strpool_get		6267679	0					
ANR	6267690	Identifier	r_strpool_get		6267679	0					
ANR	6267691	ArgumentList	p		6267679	1					
ANR	6267692	Argument	p		6267679	0					
ANR	6267693	Identifier	p		6267679	0					
ANR	6267694	Argument	index		6267679	1					
ANR	6267695	Identifier	index		6267679	0					
ANR	6267696	IfStatement	if ( ptr )		6267679	1					
ANR	6267697	Condition	ptr	129:5:2449:2451	6267679	0	True				
ANR	6267698	Identifier	ptr		6267679	0					
ANR	6267699	CompoundStatement		4:2:54:86	6267679	1					
ANR	6267700	IdentifierDeclStatement	char * q = ptr + strlen ( ptr ) + 1 ;	130:2:2458:2490	6267679	0	True				
ANR	6267701	IdentifierDecl	* q = ptr + strlen ( ptr ) + 1		6267679	0					
ANR	6267702	IdentifierDeclType	char *		6267679	0					
ANR	6267703	Identifier	q		6267679	1					
ANR	6267704	AssignmentExpression	* q = ptr + strlen ( ptr ) + 1		6267679	2		=			
ANR	6267705	Identifier	q		6267679	0					
ANR	6267706	AdditiveExpression	ptr + strlen ( ptr ) + 1		6267679	1		+			
ANR	6267707	Identifier	ptr		6267679	0					
ANR	6267708	AdditiveExpression	strlen ( ptr ) + 1		6267679	1		+			
ANR	6267709	CallExpression	strlen ( ptr )		6267679	0					
ANR	6267710	Callee	strlen		6267679	0					
ANR	6267711	Identifier	strlen		6267679	0					
ANR	6267712	ArgumentList	ptr		6267679	1					
ANR	6267713	Argument	ptr		6267679	0					
ANR	6267714	Identifier	ptr		6267679	0					
ANR	6267715	PrimaryExpression	1		6267679	1					
ANR	6267716	IfStatement	if ( q >= ( p -> str + p -> len ) )		6267679	1					
ANR	6267717	Condition	q >= ( p -> str + p -> len )	131:6:2498:2519	6267679	0	True				
ANR	6267718	RelationalExpression	q >= ( p -> str + p -> len )		6267679	0		>=			
ANR	6267719	Identifier	q		6267679	0					
ANR	6267720	AdditiveExpression	p -> str + p -> len		6267679	1		+			
ANR	6267721	PtrMemberAccess	p -> str		6267679	0					
ANR	6267722	Identifier	p		6267679	0					
ANR	6267723	Identifier	str		6267679	1					
ANR	6267724	PtrMemberAccess	p -> len		6267679	1					
ANR	6267725	Identifier	p		6267679	0					
ANR	6267726	Identifier	len		6267679	1					
ANR	6267727	CompoundStatement		5:30:118:118	6267679	1					
ANR	6267728	ReturnStatement	return NULL ;	132:3:2527:2538	6267679	0	True				
ANR	6267729	Identifier	NULL		6267679	0					
ANR	6267730	ExpressionStatement	ptr = q	134:2:2546:2553	6267679	2	True				
ANR	6267731	AssignmentExpression	ptr = q		6267679	0		=			
ANR	6267732	Identifier	ptr		6267679	0					
ANR	6267733	Identifier	q		6267679	1					
ANR	6267734	IfStatement	if ( ! * ptr )		6267679	3					
ANR	6267735	Condition	! * ptr	135:6:2561:2565	6267679	0	True				
ANR	6267736	UnaryOperationExpression	! * ptr		6267679	0					
ANR	6267737	UnaryOperator	!		6267679	0					
ANR	6267738	UnaryOperationExpression	* ptr		6267679	1					
ANR	6267739	UnaryOperator	*		6267679	0					
ANR	6267740	Identifier	ptr		6267679	1					
ANR	6267741	CompoundStatement		9:13:164:164	6267679	1					
ANR	6267742	ExpressionStatement	ptr = NULL	136:3:2573:2583	6267679	0	True				
ANR	6267743	AssignmentExpression	ptr = NULL		6267679	0		=			
ANR	6267744	Identifier	ptr		6267679	0					
ANR	6267745	Identifier	NULL		6267679	1					
ANR	6267746	ReturnStatement	return ptr ;	139:1:2593:2603	6267679	2	True				
ANR	6267747	Identifier	ptr		6267679	0					
ANR	6267748	ReturnType	R_API char *		6267679	1					
ANR	6267749	Identifier	r_strpool_next		6267679	2					
ANR	6267750	ParameterList	"RStrpool * p , int index"		6267679	3					
ANR	6267751	Parameter	RStrpool * p	127:27:2379:2389	6267679	0	True				
ANR	6267752	ParameterType	RStrpool *		6267679	0					
ANR	6267753	Identifier	p		6267679	1					
ANR	6267754	Parameter	int index	127:40:2392:2400	6267679	1	True				
ANR	6267755	ParameterType	int		6267679	0					
ANR	6267756	Identifier	index		6267679	1					
ANR	6267757	CFGEntryNode	ENTRY		6267679		True				
ANR	6267758	CFGExitNode	EXIT		6267679		True				
ANR	6267759	Symbol	p		6267679						
ANR	6267760	Symbol	strlen		6267679						
ANR	6267761	Symbol	q		6267679						
ANR	6267762	Symbol	NULL		6267679						
ANR	6267763	Symbol	r_strpool_get		6267679						
ANR	6267764	Symbol	p -> len		6267679						
ANR	6267765	Symbol	* ptr		6267679						
ANR	6267766	Symbol	index		6267679						
ANR	6267767	Symbol	* p		6267679						
ANR	6267768	Symbol	p -> str		6267679						
ANR	6267769	Symbol	ptr		6267679						
ANR	6267770	Function	r_strpool_slice	142:0:2608:2963							
ANR	6267771	FunctionDef	"r_strpool_slice (RStrpool * p , int index)"		6267770	0					
ANR	6267772	CompoundStatement		142:53:2661:2963	6267770	0					
ANR	6267773	IdentifierDeclStatement	"int idx , len ;"	143:1:2664:2676	6267770	0	True				
ANR	6267774	IdentifierDecl	idx		6267770	0					
ANR	6267775	IdentifierDeclType	int		6267770	0					
ANR	6267776	Identifier	idx		6267770	1					
ANR	6267777	IdentifierDecl	len		6267770	1					
ANR	6267778	IdentifierDeclType	int		6267770	0					
ANR	6267779	Identifier	len		6267770	1					
ANR	6267780	IdentifierDeclStatement	"char * o , * x = r_strpool_get_i ( p , index + 1 ) ;"	144:1:2679:2723	6267770	1	True				
ANR	6267781	IdentifierDecl	* o		6267770	0					
ANR	6267782	IdentifierDeclType	char *		6267770	0					
ANR	6267783	Identifier	o		6267770	1					
ANR	6267784	IdentifierDecl	"* x = r_strpool_get_i ( p , index + 1 )"		6267770	1					
ANR	6267785	IdentifierDeclType	char *		6267770	0					
ANR	6267786	Identifier	x		6267770	1					
ANR	6267787	AssignmentExpression	"* x = r_strpool_get_i ( p , index + 1 )"		6267770	2		=			
ANR	6267788	Identifier	x		6267770	0					
ANR	6267789	CallExpression	"r_strpool_get_i ( p , index + 1 )"		6267770	1					
ANR	6267790	Callee	r_strpool_get_i		6267770	0					
ANR	6267791	Identifier	r_strpool_get_i		6267770	0					
ANR	6267792	ArgumentList	p		6267770	1					
ANR	6267793	Argument	p		6267770	0					
ANR	6267794	Identifier	p		6267770	0					
ANR	6267795	Argument	index + 1		6267770	1					
ANR	6267796	AdditiveExpression	index + 1		6267770	0		+			
ANR	6267797	Identifier	index		6267770	0					
ANR	6267798	PrimaryExpression	1		6267770	1					
ANR	6267799	IfStatement	if ( ! x || ! * x )		6267770	2					
ANR	6267800	Condition	! x || ! * x	145:5:2730:2738	6267770	0	True				
ANR	6267801	OrExpression	! x || ! * x		6267770	0		||			
ANR	6267802	UnaryOperationExpression	! x		6267770	0					
ANR	6267803	UnaryOperator	!		6267770	0					
ANR	6267804	Identifier	x		6267770	1					
ANR	6267805	UnaryOperationExpression	! * x		6267770	1					
ANR	6267806	UnaryOperator	!		6267770	0					
ANR	6267807	UnaryOperationExpression	* x		6267770	1					
ANR	6267808	UnaryOperator	*		6267770	0					
ANR	6267809	Identifier	x		6267770	1					
ANR	6267810	CompoundStatement		4:16:79:79	6267770	1					
ANR	6267811	ReturnStatement	return NULL ;	146:2:2745:2756	6267770	0	True				
ANR	6267812	Identifier	NULL		6267770	0					
ANR	6267813	ExpressionStatement	idx = ( size_t ) ( x - p -> str )	148:1:2762:2788	6267770	3	True				
ANR	6267814	AssignmentExpression	idx = ( size_t ) ( x - p -> str )		6267770	0		=			
ANR	6267815	Identifier	idx		6267770	0					
ANR	6267816	CastExpression	( size_t ) ( x - p -> str )		6267770	1					
ANR	6267817	CastTarget	size_t		6267770	0					
ANR	6267818	AdditiveExpression	x - p -> str		6267770	1		-			
ANR	6267819	Identifier	x		6267770	0					
ANR	6267820	PtrMemberAccess	p -> str		6267770	1					
ANR	6267821	Identifier	p		6267770	0					
ANR	6267822	Identifier	str		6267770	1					
ANR	6267823	ExpressionStatement	len = p -> len - idx	149:1:2791:2809	6267770	4	True				
ANR	6267824	AssignmentExpression	len = p -> len - idx		6267770	0		=			
ANR	6267825	Identifier	len		6267770	0					
ANR	6267826	AdditiveExpression	p -> len - idx		6267770	1		-			
ANR	6267827	PtrMemberAccess	p -> len		6267770	0					
ANR	6267828	Identifier	p		6267770	0					
ANR	6267829	Identifier	len		6267770	1					
ANR	6267830	Identifier	idx		6267770	1					
ANR	6267831	ExpressionStatement	o = malloc ( len + 128 )	150:1:2812:2834	6267770	5	True				
ANR	6267832	AssignmentExpression	o = malloc ( len + 128 )		6267770	0		=			
ANR	6267833	Identifier	o		6267770	0					
ANR	6267834	CallExpression	malloc ( len + 128 )		6267770	1					
ANR	6267835	Callee	malloc		6267770	0					
ANR	6267836	Identifier	malloc		6267770	0					
ANR	6267837	ArgumentList	len + 128		6267770	1					
ANR	6267838	Argument	len + 128		6267770	0					
ANR	6267839	AdditiveExpression	len + 128		6267770	0		+			
ANR	6267840	Identifier	len		6267770	0					
ANR	6267841	PrimaryExpression	128		6267770	1					
ANR	6267842	IfStatement	if ( ! o )		6267770	6					
ANR	6267843	Condition	! o	151:5:2841:2842	6267770	0	True				
ANR	6267844	UnaryOperationExpression	! o		6267770	0					
ANR	6267845	UnaryOperator	!		6267770	0					
ANR	6267846	Identifier	o		6267770	1					
ANR	6267847	CompoundStatement		10:9:183:183	6267770	1					
ANR	6267848	ReturnStatement	return NULL ;	152:2:2849:2860	6267770	0	True				
ANR	6267849	Identifier	NULL		6267770	0					
ANR	6267850	ExpressionStatement	"memcpy ( o , x , len )"	154:1:2866:2884	6267770	7	True				
ANR	6267851	CallExpression	"memcpy ( o , x , len )"		6267770	0					
ANR	6267852	Callee	memcpy		6267770	0					
ANR	6267853	Identifier	memcpy		6267770	0					
ANR	6267854	ArgumentList	o		6267770	1					
ANR	6267855	Argument	o		6267770	0					
ANR	6267856	Identifier	o		6267770	0					
ANR	6267857	Argument	x		6267770	1					
ANR	6267858	Identifier	x		6267770	0					
ANR	6267859	Argument	len		6267770	2					
ANR	6267860	Identifier	len		6267770	0					
ANR	6267861	ExpressionStatement	free ( p -> str )	155:1:2887:2900	6267770	8	True				
ANR	6267862	CallExpression	free ( p -> str )		6267770	0					
ANR	6267863	Callee	free		6267770	0					
ANR	6267864	Identifier	free		6267770	0					
ANR	6267865	ArgumentList	p -> str		6267770	1					
ANR	6267866	Argument	p -> str		6267770	0					
ANR	6267867	PtrMemberAccess	p -> str		6267770	0					
ANR	6267868	Identifier	p		6267770	0					
ANR	6267869	Identifier	str		6267770	1					
ANR	6267870	ExpressionStatement	p -> str = o	156:1:2903:2913	6267770	9	True				
ANR	6267871	AssignmentExpression	p -> str = o		6267770	0		=			
ANR	6267872	PtrMemberAccess	p -> str		6267770	0					
ANR	6267873	Identifier	p		6267770	0					
ANR	6267874	Identifier	str		6267770	1					
ANR	6267875	Identifier	o		6267770	1					
ANR	6267876	ExpressionStatement	p -> size = len + 128	157:1:2916:2935	6267770	10	True				
ANR	6267877	AssignmentExpression	p -> size = len + 128		6267770	0		=			
ANR	6267878	PtrMemberAccess	p -> size		6267770	0					
ANR	6267879	Identifier	p		6267770	0					
ANR	6267880	Identifier	size		6267770	1					
ANR	6267881	AdditiveExpression	len + 128		6267770	1		+			
ANR	6267882	Identifier	len		6267770	0					
ANR	6267883	PrimaryExpression	128		6267770	1					
ANR	6267884	ExpressionStatement	p -> len = len	158:1:2938:2950	6267770	11	True				
ANR	6267885	AssignmentExpression	p -> len = len		6267770	0		=			
ANR	6267886	PtrMemberAccess	p -> len		6267770	0					
ANR	6267887	Identifier	p		6267770	0					
ANR	6267888	Identifier	len		6267770	1					
ANR	6267889	Identifier	len		6267770	1					
ANR	6267890	ReturnStatement	return o ;	159:1:2953:2961	6267770	12	True				
ANR	6267891	Identifier	o		6267770	0					
ANR	6267892	ReturnType	R_API char *		6267770	1					
ANR	6267893	Identifier	r_strpool_slice		6267770	2					
ANR	6267894	ParameterList	"RStrpool * p , int index"		6267770	3					
ANR	6267895	Parameter	RStrpool * p	142:29:2637:2647	6267770	0	True				
ANR	6267896	ParameterType	RStrpool *		6267770	0					
ANR	6267897	Identifier	p		6267770	1					
ANR	6267898	Parameter	int index	142:42:2650:2658	6267770	1	True				
ANR	6267899	ParameterType	int		6267770	0					
ANR	6267900	Identifier	index		6267770	1					
ANR	6267901	CFGEntryNode	ENTRY		6267770		True				
ANR	6267902	CFGExitNode	EXIT		6267770		True				
ANR	6267903	Symbol	malloc		6267770						
ANR	6267904	Symbol	* x		6267770						
ANR	6267905	Symbol	NULL		6267770						
ANR	6267906	Symbol	index		6267770						
ANR	6267907	Symbol	o		6267770						
ANR	6267908	Symbol	p		6267770						
ANR	6267909	Symbol	p -> size		6267770						
ANR	6267910	Symbol	len		6267770						
ANR	6267911	Symbol	x		6267770						
ANR	6267912	Symbol	p -> len		6267770						
ANR	6267913	Symbol	* p		6267770						
ANR	6267914	Symbol	idx		6267770						
ANR	6267915	Symbol	p -> str		6267770						
ANR	6267916	Symbol	r_strpool_get_i		6267770						
ANR	6267917	Function	main	163:0:2975:3230							
ANR	6267918	FunctionDef	main ()		6267917	0					
ANR	6267919	CompoundStatement		163:11:2986:3230	6267917	0					
ANR	6267920	IdentifierDeclStatement	RStrpool * p = r_strpool_new ( 1024 ) ;	164:1:2989:3023	6267917	0	True				
ANR	6267921	IdentifierDecl	* p = r_strpool_new ( 1024 )		6267917	0					
ANR	6267922	IdentifierDeclType	RStrpool *		6267917	0					
ANR	6267923	Identifier	p		6267917	1					
ANR	6267924	AssignmentExpression	* p = r_strpool_new ( 1024 )		6267917	2		=			
ANR	6267925	Identifier	p		6267917	0					
ANR	6267926	CallExpression	r_strpool_new ( 1024 )		6267917	1					
ANR	6267927	Callee	r_strpool_new		6267917	0					
ANR	6267928	Identifier	r_strpool_new		6267917	0					
ANR	6267929	ArgumentList	1024		6267917	1					
ANR	6267930	Argument	1024		6267917	0					
ANR	6267931	PrimaryExpression	1024		6267917	0					
ANR	6267932	ExpressionStatement	"printf ( ""%d\\n"" , r_strpool_append ( p , ""Hello World"" ) )"	165:1:3026:3078	6267917	1	True				
ANR	6267933	CallExpression	"printf ( ""%d\\n"" , r_strpool_append ( p , ""Hello World"" ) )"		6267917	0					
ANR	6267934	Callee	printf		6267917	0					
ANR	6267935	Identifier	printf		6267917	0					
ANR	6267936	ArgumentList	"""%d\\n"""		6267917	1					
ANR	6267937	Argument	"""%d\\n"""		6267917	0					
ANR	6267938	PrimaryExpression	"""%d\\n"""		6267917	0					
ANR	6267939	Argument	"r_strpool_append ( p , ""Hello World"" )"		6267917	1					
ANR	6267940	CallExpression	"r_strpool_append ( p , ""Hello World"" )"		6267917	0					
ANR	6267941	Callee	r_strpool_append		6267917	0					
ANR	6267942	Identifier	r_strpool_append		6267917	0					
ANR	6267943	ArgumentList	p		6267917	1					
ANR	6267944	Argument	p		6267917	0					
ANR	6267945	Identifier	p		6267917	0					
ANR	6267946	Argument	"""Hello World"""		6267917	1					
ANR	6267947	PrimaryExpression	"""Hello World"""		6267917	0					
ANR	6267948	ExpressionStatement	"printf ( ""%d\\n"" , r_strpool_append ( p , ""Patata Barata"" ) )"	166:1:3081:3135	6267917	2	True				
ANR	6267949	CallExpression	"printf ( ""%d\\n"" , r_strpool_append ( p , ""Patata Barata"" ) )"		6267917	0					
ANR	6267950	Callee	printf		6267917	0					
ANR	6267951	Identifier	printf		6267917	0					
ANR	6267952	ArgumentList	"""%d\\n"""		6267917	1					
ANR	6267953	Argument	"""%d\\n"""		6267917	0					
ANR	6267954	PrimaryExpression	"""%d\\n"""		6267917	0					
ANR	6267955	Argument	"r_strpool_append ( p , ""Patata Barata"" )"		6267917	1					
ANR	6267956	CallExpression	"r_strpool_append ( p , ""Patata Barata"" )"		6267917	0					
ANR	6267957	Callee	r_strpool_append		6267917	0					
ANR	6267958	Identifier	r_strpool_append		6267917	0					
ANR	6267959	ArgumentList	p		6267917	1					
ANR	6267960	Argument	p		6267917	0					
ANR	6267961	Identifier	p		6267917	0					
ANR	6267962	Argument	"""Patata Barata"""		6267917	1					
ANR	6267963	PrimaryExpression	"""Patata Barata"""		6267917	0					
ANR	6267964	ExpressionStatement	"printf ( ""%s\\n"" , r_strpool_get ( p , 12 ) )"	167:1:3138:3176	6267917	3	True				
ANR	6267965	CallExpression	"printf ( ""%s\\n"" , r_strpool_get ( p , 12 ) )"		6267917	0					
ANR	6267966	Callee	printf		6267917	0					
ANR	6267967	Identifier	printf		6267917	0					
ANR	6267968	ArgumentList	"""%s\\n"""		6267917	1					
ANR	6267969	Argument	"""%s\\n"""		6267917	0					
ANR	6267970	PrimaryExpression	"""%s\\n"""		6267917	0					
ANR	6267971	Argument	"r_strpool_get ( p , 12 )"		6267917	1					
ANR	6267972	CallExpression	"r_strpool_get ( p , 12 )"		6267917	0					
ANR	6267973	Callee	r_strpool_get		6267917	0					
ANR	6267974	Identifier	r_strpool_get		6267917	0					
ANR	6267975	ArgumentList	p		6267917	1					
ANR	6267976	Argument	p		6267917	0					
ANR	6267977	Identifier	p		6267917	0					
ANR	6267978	Argument	12		6267917	1					
ANR	6267979	PrimaryExpression	12		6267917	0					
ANR	6267980	ExpressionStatement	r_strpool_fit ( p )	168:1:3179:3196	6267917	4	True				
ANR	6267981	CallExpression	r_strpool_fit ( p )		6267917	0					
ANR	6267982	Callee	r_strpool_fit		6267917	0					
ANR	6267983	Identifier	r_strpool_fit		6267917	0					
ANR	6267984	ArgumentList	p		6267917	1					
ANR	6267985	Argument	p		6267917	0					
ANR	6267986	Identifier	p		6267917	0					
ANR	6267987	ExpressionStatement	r_strpool_free ( p )	169:1:3199:3217	6267917	5	True				
ANR	6267988	CallExpression	r_strpool_free ( p )		6267917	0					
ANR	6267989	Callee	r_strpool_free		6267917	0					
ANR	6267990	Identifier	r_strpool_free		6267917	0					
ANR	6267991	ArgumentList	p		6267917	1					
ANR	6267992	Argument	p		6267917	0					
ANR	6267993	Identifier	p		6267917	0					
ANR	6267994	ReturnStatement	return 0 ;	170:1:3220:3228	6267917	6	True				
ANR	6267995	PrimaryExpression	0		6267917	0					
ANR	6267996	ReturnType	int		6267917	1					
ANR	6267997	Identifier	main		6267917	2					
ANR	6267998	ParameterList			6267917	3					
ANR	6267999	CFGEntryNode	ENTRY		6267917		True				
ANR	6268000	CFGExitNode	EXIT		6267917		True				
ANR	6268001	Symbol	p		6267917						
ANR	6268002	Symbol	r_strpool_new		6267917						
ANR	6268003	Symbol	r_strpool_get		6267917						
ANR	6268004	Symbol	r_strpool_append		6267917						
