command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1168058	File	data/converged/CVE-2019-16718~_radare2/cris-dis.c								
ANR	1168059	ClassDef	cris_disass_family	72:0:2531:2613							
ANR	1168060	ClassDef	cris_disasm_data	76:0:2672:2975							
ANR	1168061	DeclStmt									
ANR	1168062	Decl							bfd_boolean	bfd_boolean	trace_case
ANR	1168063	DeclStmt									
ANR	1168064	Decl							enum cris_disass_family	enum cris_disass_family	distype
ANR	1168065	DeclStmt									
ANR	1168066	Decl							long	long	case_offset
ANR	1168067	DeclStmt									
ANR	1168068	Decl							long	long	case_offset_counter
ANR	1168069	DeclStmt									
ANR	1168070	Decl							long	long	no_of_case_offsets
ANR	1168071	DeclStmt									
ANR	1168072	Decl							long	long	last_immediate
ANR	1168073	DeclStmt									
ANR	1168074	Decl							int	"int ( const char * , unsigned , unsigned , struct cris_disasm_data * )"	cris_constraint
ANR	1168075	Function	cris_parse_disassembler_options	105:0:3483:3978							
ANR	1168076	FunctionDef	"cris_parse_disassembler_options (disassemble_info * info , enum cris_disass_family distype)"		1168075	0					
ANR	1168077	CompoundStatement		108:0:3590:3978	1168075	0					
ANR	1168078	IdentifierDeclStatement	struct cris_disasm_data * disdata = ( struct cris_disasm_data * ) info -> private_data ;	109:2:3594:3675	1168075	0	True				
ANR	1168079	IdentifierDecl	* disdata = ( struct cris_disasm_data * ) info -> private_data		1168075	0					
ANR	1168080	IdentifierDeclType	struct cris_disasm_data *		1168075	0					
ANR	1168081	Identifier	disdata		1168075	1					
ANR	1168082	AssignmentExpression	* disdata = ( struct cris_disasm_data * ) info -> private_data		1168075	2		=			
ANR	1168083	Identifier	disdata		1168075	0					
ANR	1168084	CastExpression	( struct cris_disasm_data * ) info -> private_data		1168075	1					
ANR	1168085	CastTarget	struct cris_disasm_data *		1168075	0					
ANR	1168086	PtrMemberAccess	info -> private_data		1168075	1					
ANR	1168087	Identifier	info		1168075	0					
ANR	1168088	Identifier	private_data		1168075	1					
ANR	1168089	IfStatement	if ( ! disdata )		1168075	1					
ANR	1168090	Condition	! disdata	110:6:3683:3690	1168075	0	True				
ANR	1168091	UnaryOperationExpression	! disdata		1168075	0					
ANR	1168092	UnaryOperator	!		1168075	0					
ANR	1168093	Identifier	disdata		1168075	1					
ANR	1168094	CompoundStatement		3:16:102:102	1168075	1					
ANR	1168095	ReturnStatement	return FALSE ;	111:3:3698:3710	1168075	0	True				
ANR	1168096	Identifier	FALSE		1168075	0					
ANR	1168097	ExpressionStatement	"info -> private_data = calloc ( 1 , sizeof ( struct cris_disasm_data ) )"	114:2:3719:3784	1168075	2	True				
ANR	1168098	AssignmentExpression	"info -> private_data = calloc ( 1 , sizeof ( struct cris_disasm_data ) )"		1168075	0		=			
ANR	1168099	PtrMemberAccess	info -> private_data		1168075	0					
ANR	1168100	Identifier	info		1168075	0					
ANR	1168101	Identifier	private_data		1168075	1					
ANR	1168102	CallExpression	"calloc ( 1 , sizeof ( struct cris_disasm_data ) )"		1168075	1					
ANR	1168103	Callee	calloc		1168075	0					
ANR	1168104	Identifier	calloc		1168075	0					
ANR	1168105	ArgumentList	1		1168075	1					
ANR	1168106	Argument	1		1168075	0					
ANR	1168107	PrimaryExpression	1		1168075	0					
ANR	1168108	Argument	sizeof ( struct cris_disasm_data )		1168075	1					
ANR	1168109	SizeofExpression	sizeof ( struct cris_disasm_data )		1168075	0					
ANR	1168110	Sizeof	sizeof		1168075	0					
ANR	1168111	SizeofOperand	struct cris_disasm_data		1168075	1					
ANR	1168112	ExpressionStatement	"disdata -> trace_case = ( ! info -> disassembler_options || ( strcmp ( info -> disassembler_options , ""nocase"" ) != 0 ) )"	117:2:3812:3930	1168075	3	True				
ANR	1168113	AssignmentExpression	"disdata -> trace_case = ( ! info -> disassembler_options || ( strcmp ( info -> disassembler_options , ""nocase"" ) != 0 ) )"		1168075	0		=			
ANR	1168114	PtrMemberAccess	disdata -> trace_case		1168075	0					
ANR	1168115	Identifier	disdata		1168075	0					
ANR	1168116	Identifier	trace_case		1168075	1					
ANR	1168117	OrExpression	"! info -> disassembler_options || ( strcmp ( info -> disassembler_options , ""nocase"" ) != 0 )"		1168075	1		||			
ANR	1168118	UnaryOperationExpression	! info -> disassembler_options		1168075	0					
ANR	1168119	UnaryOperator	!		1168075	0					
ANR	1168120	PtrMemberAccess	info -> disassembler_options		1168075	1					
ANR	1168121	Identifier	info		1168075	0					
ANR	1168122	Identifier	disassembler_options		1168075	1					
ANR	1168123	EqualityExpression	"strcmp ( info -> disassembler_options , ""nocase"" ) != 0"		1168075	1		!=			
ANR	1168124	CallExpression	"strcmp ( info -> disassembler_options , ""nocase"" )"		1168075	0					
ANR	1168125	Callee	strcmp		1168075	0					
ANR	1168126	Identifier	strcmp		1168075	0					
ANR	1168127	ArgumentList	info -> disassembler_options		1168075	1					
ANR	1168128	Argument	info -> disassembler_options		1168075	0					
ANR	1168129	PtrMemberAccess	info -> disassembler_options		1168075	0					
ANR	1168130	Identifier	info		1168075	0					
ANR	1168131	Identifier	disassembler_options		1168075	1					
ANR	1168132	Argument	"""nocase"""		1168075	1					
ANR	1168133	PrimaryExpression	"""nocase"""		1168075	0					
ANR	1168134	PrimaryExpression	0		1168075	1					
ANR	1168135	ExpressionStatement	disdata -> distype = distype	121:2:3935:3961	1168075	4	True				
ANR	1168136	AssignmentExpression	disdata -> distype = distype		1168075	0		=			
ANR	1168137	PtrMemberAccess	disdata -> distype		1168075	0					
ANR	1168138	Identifier	disdata		1168075	0					
ANR	1168139	Identifier	distype		1168075	1					
ANR	1168140	Identifier	distype		1168075	1					
ANR	1168141	ReturnStatement	return TRUE ;	122:2:3965:3976	1168075	5	True				
ANR	1168142	Identifier	TRUE		1168075	0					
ANR	1168143	ReturnType	bfd_boolean		1168075	1					
ANR	1168144	Identifier	cris_parse_disassembler_options		1168075	2					
ANR	1168145	ParameterList	"disassemble_info * info , enum cris_disass_family distype"		1168075	3					
ANR	1168146	Parameter	disassemble_info * info	106:33:3528:3549	1168075	0	True				
ANR	1168147	ParameterType	disassemble_info *		1168075	0					
ANR	1168148	Identifier	info		1168075	1					
ANR	1168149	Parameter	enum cris_disass_family distype	107:5:3557:3587	1168075	1	True				
ANR	1168150	ParameterType	enum cris_disass_family		1168075	0					
ANR	1168151	Identifier	distype		1168075	1					
ANR	1168152	CFGEntryNode	ENTRY		1168075		True				
ANR	1168153	CFGExitNode	EXIT		1168075		True				
ANR	1168154	Symbol	strcmp		1168075						
ANR	1168155	Symbol	info -> disassembler_options		1168075						
ANR	1168156	Symbol	info -> private_data		1168075						
ANR	1168157	Symbol	disdata		1168075						
ANR	1168158	Symbol	TRUE		1168075						
ANR	1168159	Symbol	disdata -> trace_case		1168075						
ANR	1168160	Symbol	calloc		1168075						
ANR	1168161	Symbol	distype		1168075						
ANR	1168162	Symbol	FALSE		1168075						
ANR	1168163	Symbol	disdata -> distype		1168075						
ANR	1168164	Symbol	* info		1168075						
ANR	1168165	Symbol	* disdata		1168075						
ANR	1168166	Symbol	info		1168075						
ANR	1168167	Function	spec_reg_info	125:0:3981:4800							
ANR	1168168	FunctionDef	"spec_reg_info (unsigned int sreg , enum cris_disass_family distype)"		1168167	0					
ANR	1168169	CompoundStatement		127:0:4084:4800	1168167	0					
ANR	1168170	IdentifierDeclStatement	int i ;	128:2:4088:4093	1168167	0	True				
ANR	1168171	IdentifierDecl	i		1168167	0					
ANR	1168172	IdentifierDeclType	int		1168167	0					
ANR	1168173	Identifier	i		1168167	1					
ANR	1168174	ForStatement	for ( i = 0 ; cris_spec_regs [ i ] . name != NULL ; i ++ )		1168167	1					
ANR	1168175	ForInit	i = 0 ;	130:7:4103:4108	1168167	0	True				
ANR	1168176	AssignmentExpression	i = 0		1168167	0		=			
ANR	1168177	Identifier	i		1168167	0					
ANR	1168178	PrimaryExpression	0		1168167	1					
ANR	1168179	Condition	cris_spec_regs [ i ] . name != NULL	130:14:4110:4139	1168167	1	True				
ANR	1168180	EqualityExpression	cris_spec_regs [ i ] . name != NULL		1168167	0		!=			
ANR	1168181	MemberAccess	cris_spec_regs [ i ] . name		1168167	0					
ANR	1168182	ArrayIndexing	cris_spec_regs [ i ]		1168167	0					
ANR	1168183	Identifier	cris_spec_regs		1168167	0					
ANR	1168184	Identifier	i		1168167	1					
ANR	1168185	Identifier	name		1168167	1					
ANR	1168186	Identifier	NULL		1168167	1					
ANR	1168187	PostIncDecOperationExpression	i ++	130:46:4142:4144	1168167	2	True				
ANR	1168188	Identifier	i		1168167	0					
ANR	1168189	IncDec	++		1168167	1					
ANR	1168190	CompoundStatement		5:4:66:66	1168167	3					
ANR	1168191	IfStatement	if ( cris_spec_regs [ i ] . number == sreg )		1168167	0					
ANR	1168192	Condition	cris_spec_regs [ i ] . number == sreg	132:10:4163:4194	1168167	0	True				
ANR	1168193	EqualityExpression	cris_spec_regs [ i ] . number == sreg		1168167	0		==			
ANR	1168194	MemberAccess	cris_spec_regs [ i ] . number		1168167	0					
ANR	1168195	ArrayIndexing	cris_spec_regs [ i ]		1168167	0					
ANR	1168196	Identifier	cris_spec_regs		1168167	0					
ANR	1168197	Identifier	i		1168167	1					
ANR	1168198	Identifier	number		1168167	1					
ANR	1168199	Identifier	sreg		1168167	1					
ANR	1168200	CompoundStatement		7:1:113:113	1168167	1					
ANR	1168201	IfStatement	if ( distype == cris_dis_v32 )		1168167	0					
ANR	1168202	Condition	distype == cris_dis_v32	134:11:4211:4233	1168167	0	True				
ANR	1168203	EqualityExpression	distype == cris_dis_v32		1168167	0		==			
ANR	1168204	Identifier	distype		1168167	0					
ANR	1168205	Identifier	cris_dis_v32		1168167	1					
ANR	1168206	CompoundStatement		8:36:151:151	1168167	1					
ANR	1168207	SwitchStatement	switch ( cris_spec_regs [ i ] . applicable_version )		1168167	0					
ANR	1168208	Condition	cris_spec_regs [ i ] . applicable_version	135:16:4254:4289	1168167	0	True				
ANR	1168209	MemberAccess	cris_spec_regs [ i ] . applicable_version		1168167	0					
ANR	1168210	ArrayIndexing	cris_spec_regs [ i ]		1168167	0					
ANR	1168211	Identifier	cris_spec_regs		1168167	0					
ANR	1168212	Identifier	i		1168167	1					
ANR	1168213	Identifier	applicable_version		1168167	1					
ANR	1168214	CompoundStatement		9:54:207:207	1168167	1					
ANR	1168215	Label	case cris_ver_warning :	136:8:4302:4323	1168167	0	True				
ANR	1168216	Identifier	cris_ver_warning		1168167	0					
ANR	1168217	Label	case cris_ver_version_all :	137:8:4333:4358	1168167	1	True				
ANR	1168218	Identifier	cris_ver_version_all		1168167	0					
ANR	1168219	Label	case cris_ver_v3p :	138:8:4368:4385	1168167	2	True				
ANR	1168220	Identifier	cris_ver_v3p		1168167	0					
ANR	1168221	Label	case cris_ver_v8p :	139:8:4395:4412	1168167	3	True				
ANR	1168222	Identifier	cris_ver_v8p		1168167	0					
ANR	1168223	Label	case cris_ver_v10p :	140:8:4422:4440	1168167	4	True				
ANR	1168224	Identifier	cris_ver_v10p		1168167	0					
ANR	1168225	Label	case cris_ver_v32p :	141:8:4450:4468	1168167	5	True				
ANR	1168226	Identifier	cris_ver_v32p		1168167	0					
ANR	1168227	IfStatement	if ( ! cris_spec_regs [ i ] . warning )		1168167	6					
ANR	1168228	Condition	! cris_spec_regs [ i ] . warning	143:13:4550:4575	1168167	0	True				
ANR	1168229	UnaryOperationExpression	! cris_spec_regs [ i ] . warning		1168167	0					
ANR	1168230	UnaryOperator	!		1168167	0					
ANR	1168231	MemberAccess	cris_spec_regs [ i ] . warning		1168167	1					
ANR	1168232	ArrayIndexing	cris_spec_regs [ i ]		1168167	0					
ANR	1168233	Identifier	cris_spec_regs		1168167	0					
ANR	1168234	Identifier	i		1168167	1					
ANR	1168235	Identifier	warning		1168167	1					
ANR	1168236	CompoundStatement		17:41:493:493	1168167	1					
ANR	1168237	ReturnStatement	return & cris_spec_regs [ i ] ;	144:10:4590:4615	1168167	0	True				
ANR	1168238	UnaryOperationExpression	& cris_spec_regs [ i ]		1168167	0					
ANR	1168239	UnaryOperator	&		1168167	0					
ANR	1168240	ArrayIndexing	cris_spec_regs [ i ]		1168167	1					
ANR	1168241	Identifier	cris_spec_regs		1168167	0					
ANR	1168242	Identifier	i		1168167	1					
ANR	1168243	Label	default :	146:8:4636:4643	1168167	7	True				
ANR	1168244	Identifier	default		1168167	0					
ANR	1168245	ExpressionStatement		146:16:4644:4644	1168167	8	True				
ANR	1168246	ElseStatement	else		1168167	0					
ANR	1168247	IfStatement	if ( cris_spec_regs [ i ] . applicable_version != cris_ver_v32p )		1168167	0					
ANR	1168248	Condition	cris_spec_regs [ i ] . applicable_version != cris_ver_v32p	148:18:4674:4726	1168167	0	True				
ANR	1168249	EqualityExpression	cris_spec_regs [ i ] . applicable_version != cris_ver_v32p		1168167	0		!=			
ANR	1168250	MemberAccess	cris_spec_regs [ i ] . applicable_version		1168167	0					
ANR	1168251	ArrayIndexing	cris_spec_regs [ i ]		1168167	0					
ANR	1168252	Identifier	cris_spec_regs		1168167	0					
ANR	1168253	Identifier	i		1168167	1					
ANR	1168254	Identifier	applicable_version		1168167	1					
ANR	1168255	Identifier	cris_ver_v32p		1168167	1					
ANR	1168256	CompoundStatement		22:73:644:644	1168167	1					
ANR	1168257	ReturnStatement	return & cris_spec_regs [ i ] ;	149:8:4739:4764	1168167	0	True				
ANR	1168258	UnaryOperationExpression	& cris_spec_regs [ i ]		1168167	0					
ANR	1168259	UnaryOperator	&		1168167	0					
ANR	1168260	ArrayIndexing	cris_spec_regs [ i ]		1168167	1					
ANR	1168261	Identifier	cris_spec_regs		1168167	0					
ANR	1168262	Identifier	i		1168167	1					
ANR	1168263	ReturnStatement	return NULL ;	154:2:4787:4798	1168167	2	True				
ANR	1168264	Identifier	NULL		1168167	0					
ANR	1168265	ReturnType	static const struct cris_spec_reg *		1168167	1					
ANR	1168266	Identifier	spec_reg_info		1168167	2					
ANR	1168267	ParameterList	"unsigned int sreg , enum cris_disass_family distype"		1168167	3					
ANR	1168268	Parameter	unsigned int sreg	126:15:4032:4048	1168167	0	True				
ANR	1168269	ParameterType	unsigned int		1168167	0					
ANR	1168270	Identifier	sreg		1168167	1					
ANR	1168271	Parameter	enum cris_disass_family distype	126:34:4051:4081	1168167	1	True				
ANR	1168272	ParameterType	enum cris_disass_family		1168167	0					
ANR	1168273	Identifier	distype		1168167	1					
ANR	1168274	CFGEntryNode	ENTRY		1168167		True				
ANR	1168275	CFGExitNode	EXIT		1168167		True				
ANR	1168276	Symbol	cris_spec_regs [ i ] . number		1168167						
ANR	1168277	Symbol	NULL		1168167						
ANR	1168278	Symbol	cris_spec_regs [ i ] . name		1168167						
ANR	1168279	Symbol	cris_spec_regs [ i ] . applicable_version		1168167						
ANR	1168280	Symbol	i		1168167						
ANR	1168281	Symbol	cris_dis_v32		1168167						
ANR	1168282	Symbol	cris_ver_v32p		1168167						
ANR	1168283	Symbol	distype		1168167						
ANR	1168284	Symbol	cris_spec_regs		1168167						
ANR	1168285	Symbol	* i		1168167						
ANR	1168286	Symbol	sreg		1168167						
ANR	1168287	Symbol	cris_spec_regs [ i ] . warning		1168167						
ANR	1168288	Symbol	* cris_spec_regs		1168167						
ANR	1168289	Function	number_of_bits	159:0:4854:4990							
ANR	1168290	FunctionDef	number_of_bits (unsigned int val)		1168289	0					
ANR	1168291	CompoundStatement		161:0:4899:4990	1168289	0					
ANR	1168292	IdentifierDeclStatement	int bits ;	162:2:4903:4911	1168289	0	True				
ANR	1168293	IdentifierDecl	bits		1168289	0					
ANR	1168294	IdentifierDeclType	int		1168289	0					
ANR	1168295	Identifier	bits		1168289	1					
ANR	1168296	ForStatement	for ( bits = 0 ; val != 0 ; val &= val - 1 )		1168289	1					
ANR	1168297	ForInit	bits = 0 ;	164:7:4921:4929	1168289	0	True				
ANR	1168298	AssignmentExpression	bits = 0		1168289	0		=			
ANR	1168299	Identifier	bits		1168289	0					
ANR	1168300	PrimaryExpression	0		1168289	1					
ANR	1168301	Condition	val != 0	164:17:4931:4938	1168289	1	True				
ANR	1168302	EqualityExpression	val != 0		1168289	0		!=			
ANR	1168303	Identifier	val		1168289	0					
ANR	1168304	PrimaryExpression	0		1168289	1					
ANR	1168305	AssignmentExpression	val &= val - 1	164:27:4941:4954	1168289	2	True	&=			
ANR	1168306	Identifier	val		1168289	0					
ANR	1168307	AdditiveExpression	val - 1		1168289	1		-			
ANR	1168308	Identifier	val		1168289	0					
ANR	1168309	PrimaryExpression	1		1168289	1					
ANR	1168310	CompoundStatement		4:43:57:57	1168289	3					
ANR	1168311	ExpressionStatement	bits ++	165:3:4962:4968	1168289	0	True				
ANR	1168312	PostIncDecOperationExpression	bits ++		1168289	0					
ANR	1168313	Identifier	bits		1168289	0					
ANR	1168314	IncDec	++		1168289	1					
ANR	1168315	ReturnStatement	return bits ;	168:2:4977:4988	1168289	2	True				
ANR	1168316	Identifier	bits		1168289	0					
ANR	1168317	ReturnType	static int		1168289	1					
ANR	1168318	Identifier	number_of_bits		1168289	2					
ANR	1168319	ParameterList	unsigned int val		1168289	3					
ANR	1168320	Parameter	unsigned int val	160:16:4881:4896	1168289	0	True				
ANR	1168321	ParameterType	unsigned int		1168289	0					
ANR	1168322	Identifier	val		1168289	1					
ANR	1168323	CFGEntryNode	ENTRY		1168289		True				
ANR	1168324	CFGExitNode	EXIT		1168289		True				
ANR	1168325	Symbol	val		1168289						
ANR	1168326	Symbol	bits		1168289						
ANR	1168327	Function	get_opcode_entry	173:0:5035:10950							
ANR	1168328	FunctionDef	"get_opcode_entry (unsigned int insn , unsigned int prefix_insn , struct cris_disasm_data * disdata)"		1168327	0					
ANR	1168329	CompoundStatement		177:0:5174:10950	1168327	0					
ANR	1168330	Statement	static	180:2:5321:5326	1168327	0	True				
ANR	1168331	IdentifierDeclStatement	const struct cris_opcode * * opc_table = NULL ;	180:9:5328:5371	1168327	1	True				
ANR	1168332	IdentifierDecl	* * opc_table = NULL		1168327	0					
ANR	1168333	IdentifierDeclType	const struct cris_opcode * *		1168327	0					
ANR	1168334	Identifier	opc_table		1168327	1					
ANR	1168335	AssignmentExpression	* * opc_table = NULL		1168327	2		=			
ANR	1168336	Identifier	NULL		1168327	0					
ANR	1168337	Identifier	NULL		1168327	1					
ANR	1168338	IdentifierDeclStatement	const struct cris_opcode * max_matchedp = NULL ;	182:2:5376:5421	1168327	2	True				
ANR	1168339	IdentifierDecl	* max_matchedp = NULL		1168327	0					
ANR	1168340	IdentifierDeclType	const struct cris_opcode *		1168327	0					
ANR	1168341	Identifier	max_matchedp		1168327	1					
ANR	1168342	AssignmentExpression	* max_matchedp = NULL		1168327	2		=			
ANR	1168343	Identifier	NULL		1168327	0					
ANR	1168344	Identifier	NULL		1168327	1					
ANR	1168345	IdentifierDeclStatement	const struct cris_opcode * * prefix_opc_table = NULL ;	183:2:5425:5475	1168327	3	True				
ANR	1168346	IdentifierDecl	* * prefix_opc_table = NULL		1168327	0					
ANR	1168347	IdentifierDeclType	const struct cris_opcode * *		1168327	0					
ANR	1168348	Identifier	prefix_opc_table		1168327	1					
ANR	1168349	AssignmentExpression	* * prefix_opc_table = NULL		1168327	2		=			
ANR	1168350	Identifier	NULL		1168327	0					
ANR	1168351	Identifier	NULL		1168327	1					
ANR	1168352	Statement	static	186:2:5558:5563	1168327	4	True				
ANR	1168353	IdentifierDeclStatement	const struct cris_opcode * * dip_prefixes = NULL ;	186:9:5565:5611	1168327	5	True				
ANR	1168354	IdentifierDecl	* * dip_prefixes = NULL		1168327	0					
ANR	1168355	IdentifierDeclType	const struct cris_opcode * *		1168327	0					
ANR	1168356	Identifier	dip_prefixes		1168327	1					
ANR	1168357	AssignmentExpression	* * dip_prefixes = NULL		1168327	2		=			
ANR	1168358	Identifier	NULL		1168327	0					
ANR	1168359	Identifier	NULL		1168327	1					
ANR	1168360	Statement	static	187:2:5615:5620	1168327	6	True				
ANR	1168361	IdentifierDeclStatement	const struct cris_opcode * * bdapq_m1_prefixes = NULL ;	187:9:5622:5673	1168327	7	True				
ANR	1168362	IdentifierDecl	* * bdapq_m1_prefixes = NULL		1168327	0					
ANR	1168363	IdentifierDeclType	const struct cris_opcode * *		1168327	0					
ANR	1168364	Identifier	bdapq_m1_prefixes		1168327	1					
ANR	1168365	AssignmentExpression	* * bdapq_m1_prefixes = NULL		1168327	2		=			
ANR	1168366	Identifier	NULL		1168327	0					
ANR	1168367	Identifier	NULL		1168327	1					
ANR	1168368	Statement	static	188:2:5677:5682	1168327	8	True				
ANR	1168369	IdentifierDeclStatement	const struct cris_opcode * * bdapq_m2_prefixes = NULL ;	188:9:5684:5735	1168327	9	True				
ANR	1168370	IdentifierDecl	* * bdapq_m2_prefixes = NULL		1168327	0					
ANR	1168371	IdentifierDeclType	const struct cris_opcode * *		1168327	0					
ANR	1168372	Identifier	bdapq_m2_prefixes		1168327	1					
ANR	1168373	AssignmentExpression	* * bdapq_m2_prefixes = NULL		1168327	2		=			
ANR	1168374	Identifier	NULL		1168327	0					
ANR	1168375	Identifier	NULL		1168327	1					
ANR	1168376	Statement	static	189:2:5739:5744	1168327	10	True				
ANR	1168377	IdentifierDeclStatement	const struct cris_opcode * * bdapq_m4_prefixes = NULL ;	189:9:5746:5797	1168327	11	True				
ANR	1168378	IdentifierDecl	* * bdapq_m4_prefixes = NULL		1168327	0					
ANR	1168379	IdentifierDeclType	const struct cris_opcode * *		1168327	0					
ANR	1168380	Identifier	bdapq_m4_prefixes		1168327	1					
ANR	1168381	AssignmentExpression	* * bdapq_m4_prefixes = NULL		1168327	2		=			
ANR	1168382	Identifier	NULL		1168327	0					
ANR	1168383	Identifier	NULL		1168327	1					
ANR	1168384	Statement	static	190:2:5801:5806	1168327	12	True				
ANR	1168385	IdentifierDeclStatement	const struct cris_opcode * * rest_prefixes = NULL ;	190:9:5808:5855	1168327	13	True				
ANR	1168386	IdentifierDecl	* * rest_prefixes = NULL		1168327	0					
ANR	1168387	IdentifierDeclType	const struct cris_opcode * *		1168327	0					
ANR	1168388	Identifier	rest_prefixes		1168327	1					
ANR	1168389	AssignmentExpression	* * rest_prefixes = NULL		1168327	2		=			
ANR	1168390	Identifier	NULL		1168327	0					
ANR	1168391	Identifier	NULL		1168327	1					
ANR	1168392	IfStatement	if ( ! opc_table )		1168327	14					
ANR	1168393	Condition	! opc_table	193:6:5910:5919	1168327	0	True				
ANR	1168394	UnaryOperationExpression	! opc_table		1168327	0					
ANR	1168395	UnaryOperator	!		1168327	0					
ANR	1168396	Identifier	opc_table		1168327	1					
ANR	1168397	CompoundStatement		18:4:751:751	1168327	1					
ANR	1168398	ExpressionStatement	"opc_table = calloc ( 65536 , sizeof ( opc_table [ 0 ] ) )"	195:6:5934:5983	1168327	0	True				
ANR	1168399	AssignmentExpression	"opc_table = calloc ( 65536 , sizeof ( opc_table [ 0 ] ) )"		1168327	0		=			
ANR	1168400	Identifier	opc_table		1168327	0					
ANR	1168401	CallExpression	"calloc ( 65536 , sizeof ( opc_table [ 0 ] ) )"		1168327	1					
ANR	1168402	Callee	calloc		1168327	0					
ANR	1168403	Identifier	calloc		1168327	0					
ANR	1168404	ArgumentList	65536		1168327	1					
ANR	1168405	Argument	65536		1168327	0					
ANR	1168406	PrimaryExpression	65536		1168327	0					
ANR	1168407	Argument	sizeof ( opc_table [ 0 ] )		1168327	1					
ANR	1168408	SizeofExpression	sizeof ( opc_table [ 0 ] )		1168327	0					
ANR	1168409	Sizeof	sizeof		1168327	0					
ANR	1168410	ArrayIndexing	opc_table [ 0 ]		1168327	1					
ANR	1168411	Identifier	opc_table		1168327	0					
ANR	1168412	PrimaryExpression	0		1168327	1					
ANR	1168413	IfStatement	if ( ! opc_table )		1168327	1					
ANR	1168414	Condition	! opc_table	196:10:5995:6004	1168327	0	True				
ANR	1168415	UnaryOperationExpression	! opc_table		1168327	0					
ANR	1168416	UnaryOperator	!		1168327	0					
ANR	1168417	Identifier	opc_table		1168327	1					
ANR	1168418	CompoundStatement		20:22:832:832	1168327	1					
ANR	1168419	ReturnStatement	return NULL ;	197:7:6016:6027	1168327	0	True				
ANR	1168420	Identifier	NULL		1168327	0					
ANR	1168421	ExpressionStatement	"dip_prefixes = calloc ( 65536 , sizeof ( dip_prefixes [ 0 ] ) )"	200:6:6044:6100	1168327	2	True				
ANR	1168422	AssignmentExpression	"dip_prefixes = calloc ( 65536 , sizeof ( dip_prefixes [ 0 ] ) )"		1168327	0		=			
ANR	1168423	Identifier	dip_prefixes		1168327	0					
ANR	1168424	CallExpression	"calloc ( 65536 , sizeof ( dip_prefixes [ 0 ] ) )"		1168327	1					
ANR	1168425	Callee	calloc		1168327	0					
ANR	1168426	Identifier	calloc		1168327	0					
ANR	1168427	ArgumentList	65536		1168327	1					
ANR	1168428	Argument	65536		1168327	0					
ANR	1168429	PrimaryExpression	65536		1168327	0					
ANR	1168430	Argument	sizeof ( dip_prefixes [ 0 ] )		1168327	1					
ANR	1168431	SizeofExpression	sizeof ( dip_prefixes [ 0 ] )		1168327	0					
ANR	1168432	Sizeof	sizeof		1168327	0					
ANR	1168433	ArrayIndexing	dip_prefixes [ 0 ]		1168327	1					
ANR	1168434	Identifier	dip_prefixes		1168327	0					
ANR	1168435	PrimaryExpression	0		1168327	1					
ANR	1168436	IfStatement	if ( ! dip_prefixes )		1168327	3					
ANR	1168437	Condition	! dip_prefixes	202:10:6112:6124	1168327	0	True				
ANR	1168438	UnaryOperationExpression	! dip_prefixes		1168327	0					
ANR	1168439	UnaryOperator	!		1168327	0					
ANR	1168440	Identifier	dip_prefixes		1168327	1					
ANR	1168441	CompoundStatement		26:25:952:952	1168327	1					
ANR	1168442	ReturnStatement	return NULL ;	203:7:6136:6147	1168327	0	True				
ANR	1168443	Identifier	NULL		1168327	0					
ANR	1168444	ExpressionStatement	"bdapq_m1_prefixes = calloc ( 65536 , sizeof ( bdapq_m1_prefixes [ 0 ] ) )"	206:6:6164:6230	1168327	4	True				
ANR	1168445	AssignmentExpression	"bdapq_m1_prefixes = calloc ( 65536 , sizeof ( bdapq_m1_prefixes [ 0 ] ) )"		1168327	0		=			
ANR	1168446	Identifier	bdapq_m1_prefixes		1168327	0					
ANR	1168447	CallExpression	"calloc ( 65536 , sizeof ( bdapq_m1_prefixes [ 0 ] ) )"		1168327	1					
ANR	1168448	Callee	calloc		1168327	0					
ANR	1168449	Identifier	calloc		1168327	0					
ANR	1168450	ArgumentList	65536		1168327	1					
ANR	1168451	Argument	65536		1168327	0					
ANR	1168452	PrimaryExpression	65536		1168327	0					
ANR	1168453	Argument	sizeof ( bdapq_m1_prefixes [ 0 ] )		1168327	1					
ANR	1168454	SizeofExpression	sizeof ( bdapq_m1_prefixes [ 0 ] )		1168327	0					
ANR	1168455	Sizeof	sizeof		1168327	0					
ANR	1168456	ArrayIndexing	bdapq_m1_prefixes [ 0 ]		1168327	1					
ANR	1168457	Identifier	bdapq_m1_prefixes		1168327	0					
ANR	1168458	PrimaryExpression	0		1168327	1					
ANR	1168459	IfStatement	if ( ! bdapq_m1_prefixes )		1168327	5					
ANR	1168460	Condition	! bdapq_m1_prefixes	208:10:6242:6259	1168327	0	True				
ANR	1168461	UnaryOperationExpression	! bdapq_m1_prefixes		1168327	0					
ANR	1168462	UnaryOperator	!		1168327	0					
ANR	1168463	Identifier	bdapq_m1_prefixes		1168327	1					
ANR	1168464	CompoundStatement		32:30:1087:1087	1168327	1					
ANR	1168465	ReturnStatement	return NULL ;	209:7:6271:6282	1168327	0	True				
ANR	1168466	Identifier	NULL		1168327	0					
ANR	1168467	ExpressionStatement	"bdapq_m2_prefixes = calloc ( 65536 , sizeof ( bdapq_m2_prefixes [ 0 ] ) )"	212:6:6299:6365	1168327	6	True				
ANR	1168468	AssignmentExpression	"bdapq_m2_prefixes = calloc ( 65536 , sizeof ( bdapq_m2_prefixes [ 0 ] ) )"		1168327	0		=			
ANR	1168469	Identifier	bdapq_m2_prefixes		1168327	0					
ANR	1168470	CallExpression	"calloc ( 65536 , sizeof ( bdapq_m2_prefixes [ 0 ] ) )"		1168327	1					
ANR	1168471	Callee	calloc		1168327	0					
ANR	1168472	Identifier	calloc		1168327	0					
ANR	1168473	ArgumentList	65536		1168327	1					
ANR	1168474	Argument	65536		1168327	0					
ANR	1168475	PrimaryExpression	65536		1168327	0					
ANR	1168476	Argument	sizeof ( bdapq_m2_prefixes [ 0 ] )		1168327	1					
ANR	1168477	SizeofExpression	sizeof ( bdapq_m2_prefixes [ 0 ] )		1168327	0					
ANR	1168478	Sizeof	sizeof		1168327	0					
ANR	1168479	ArrayIndexing	bdapq_m2_prefixes [ 0 ]		1168327	1					
ANR	1168480	Identifier	bdapq_m2_prefixes		1168327	0					
ANR	1168481	PrimaryExpression	0		1168327	1					
ANR	1168482	IfStatement	if ( ! bdapq_m2_prefixes )		1168327	7					
ANR	1168483	Condition	! bdapq_m2_prefixes	214:10:6377:6394	1168327	0	True				
ANR	1168484	UnaryOperationExpression	! bdapq_m2_prefixes		1168327	0					
ANR	1168485	UnaryOperator	!		1168327	0					
ANR	1168486	Identifier	bdapq_m2_prefixes		1168327	1					
ANR	1168487	CompoundStatement		38:30:1222:1222	1168327	1					
ANR	1168488	ReturnStatement	return NULL ;	215:7:6406:6417	1168327	0	True				
ANR	1168489	Identifier	NULL		1168327	0					
ANR	1168490	ExpressionStatement	"bdapq_m4_prefixes = calloc ( 65536 , sizeof ( bdapq_m4_prefixes [ 0 ] ) )"	218:6:6434:6500	1168327	8	True				
ANR	1168491	AssignmentExpression	"bdapq_m4_prefixes = calloc ( 65536 , sizeof ( bdapq_m4_prefixes [ 0 ] ) )"		1168327	0		=			
ANR	1168492	Identifier	bdapq_m4_prefixes		1168327	0					
ANR	1168493	CallExpression	"calloc ( 65536 , sizeof ( bdapq_m4_prefixes [ 0 ] ) )"		1168327	1					
ANR	1168494	Callee	calloc		1168327	0					
ANR	1168495	Identifier	calloc		1168327	0					
ANR	1168496	ArgumentList	65536		1168327	1					
ANR	1168497	Argument	65536		1168327	0					
ANR	1168498	PrimaryExpression	65536		1168327	0					
ANR	1168499	Argument	sizeof ( bdapq_m4_prefixes [ 0 ] )		1168327	1					
ANR	1168500	SizeofExpression	sizeof ( bdapq_m4_prefixes [ 0 ] )		1168327	0					
ANR	1168501	Sizeof	sizeof		1168327	0					
ANR	1168502	ArrayIndexing	bdapq_m4_prefixes [ 0 ]		1168327	1					
ANR	1168503	Identifier	bdapq_m4_prefixes		1168327	0					
ANR	1168504	PrimaryExpression	0		1168327	1					
ANR	1168505	IfStatement	if ( ! bdapq_m4_prefixes )		1168327	9					
ANR	1168506	Condition	! bdapq_m4_prefixes	220:10:6512:6529	1168327	0	True				
ANR	1168507	UnaryOperationExpression	! bdapq_m4_prefixes		1168327	0					
ANR	1168508	UnaryOperator	!		1168327	0					
ANR	1168509	Identifier	bdapq_m4_prefixes		1168327	1					
ANR	1168510	CompoundStatement		44:30:1357:1357	1168327	1					
ANR	1168511	ReturnStatement	return NULL ;	221:7:6541:6552	1168327	0	True				
ANR	1168512	Identifier	NULL		1168327	0					
ANR	1168513	ExpressionStatement	"rest_prefixes = calloc ( 65536 , sizeof ( rest_prefixes [ 0 ] ) )"	224:6:6569:6627	1168327	10	True				
ANR	1168514	AssignmentExpression	"rest_prefixes = calloc ( 65536 , sizeof ( rest_prefixes [ 0 ] ) )"		1168327	0		=			
ANR	1168515	Identifier	rest_prefixes		1168327	0					
ANR	1168516	CallExpression	"calloc ( 65536 , sizeof ( rest_prefixes [ 0 ] ) )"		1168327	1					
ANR	1168517	Callee	calloc		1168327	0					
ANR	1168518	Identifier	calloc		1168327	0					
ANR	1168519	ArgumentList	65536		1168327	1					
ANR	1168520	Argument	65536		1168327	0					
ANR	1168521	PrimaryExpression	65536		1168327	0					
ANR	1168522	Argument	sizeof ( rest_prefixes [ 0 ] )		1168327	1					
ANR	1168523	SizeofExpression	sizeof ( rest_prefixes [ 0 ] )		1168327	0					
ANR	1168524	Sizeof	sizeof		1168327	0					
ANR	1168525	ArrayIndexing	rest_prefixes [ 0 ]		1168327	1					
ANR	1168526	Identifier	rest_prefixes		1168327	0					
ANR	1168527	PrimaryExpression	0		1168327	1					
ANR	1168528	IfStatement	if ( ! rest_prefixes )		1168327	11					
ANR	1168529	Condition	! rest_prefixes	226:10:6639:6652	1168327	0	True				
ANR	1168530	UnaryOperationExpression	! rest_prefixes		1168327	0					
ANR	1168531	UnaryOperator	!		1168327	0					
ANR	1168532	Identifier	rest_prefixes		1168327	1					
ANR	1168533	CompoundStatement		50:26:1480:1480	1168327	1					
ANR	1168534	ReturnStatement	return NULL ;	227:7:6664:6675	1168327	0	True				
ANR	1168535	Identifier	NULL		1168327	0					
ANR	1168536	IfStatement	if ( prefix_insn != NO_CRIS_PREFIX )		1168327	15					
ANR	1168537	Condition	prefix_insn != NO_CRIS_PREFIX	237:6:7057:7085	1168327	0	True				
ANR	1168538	EqualityExpression	prefix_insn != NO_CRIS_PREFIX		1168327	0		!=			
ANR	1168539	Identifier	prefix_insn		1168327	0					
ANR	1168540	Identifier	NO_CRIS_PREFIX		1168327	1					
ANR	1168541	CompoundStatement		63:6:1925:2086	1168327	1					
ANR	1168542	IdentifierDeclStatement	"const struct cris_opcode * popcodep = ( opc_table [ prefix_insn ] != NULL ? opc_table [ prefix_insn ] : get_opcode_entry ( prefix_insn , NO_CRIS_PREFIX , disdata ) ) ;"	239:6:7100:7261	1168327	0	True				
ANR	1168543	IdentifierDecl	"* popcodep = ( opc_table [ prefix_insn ] != NULL ? opc_table [ prefix_insn ] : get_opcode_entry ( prefix_insn , NO_CRIS_PREFIX , disdata ) )"		1168327	0					
ANR	1168544	IdentifierDeclType	const struct cris_opcode *		1168327	0					
ANR	1168545	Identifier	popcodep		1168327	1					
ANR	1168546	AssignmentExpression	"* popcodep = ( opc_table [ prefix_insn ] != NULL ? opc_table [ prefix_insn ] : get_opcode_entry ( prefix_insn , NO_CRIS_PREFIX , disdata ) )"		1168327	2		=			
ANR	1168547	Identifier	popcodep		1168327	0					
ANR	1168548	ConditionalExpression	"opc_table [ prefix_insn ] != NULL ? opc_table [ prefix_insn ] : get_opcode_entry ( prefix_insn , NO_CRIS_PREFIX , disdata )"		1168327	1					
ANR	1168549	Condition	opc_table [ prefix_insn ] != NULL		1168327	0					
ANR	1168550	EqualityExpression	opc_table [ prefix_insn ] != NULL		1168327	0		!=			
ANR	1168551	ArrayIndexing	opc_table [ prefix_insn ]		1168327	0					
ANR	1168552	Identifier	opc_table		1168327	0					
ANR	1168553	Identifier	prefix_insn		1168327	1					
ANR	1168554	Identifier	NULL		1168327	1					
ANR	1168555	ArrayIndexing	opc_table [ prefix_insn ]		1168327	1					
ANR	1168556	Identifier	opc_table		1168327	0					
ANR	1168557	Identifier	prefix_insn		1168327	1					
ANR	1168558	CallExpression	"get_opcode_entry ( prefix_insn , NO_CRIS_PREFIX , disdata )"		1168327	2					
ANR	1168559	Callee	get_opcode_entry		1168327	0					
ANR	1168560	Identifier	get_opcode_entry		1168327	0					
ANR	1168561	ArgumentList	prefix_insn		1168327	1					
ANR	1168562	Argument	prefix_insn		1168327	0					
ANR	1168563	Identifier	prefix_insn		1168327	0					
ANR	1168564	Argument	NO_CRIS_PREFIX		1168327	1					
ANR	1168565	Identifier	NO_CRIS_PREFIX		1168327	0					
ANR	1168566	Argument	disdata		1168327	2					
ANR	1168567	Identifier	disdata		1168327	0					
ANR	1168568	IfStatement	if ( ! popcodep )		1168327	1					
ANR	1168569	Condition	! popcodep	244:10:7274:7282	1168327	0	True				
ANR	1168570	UnaryOperationExpression	! popcodep		1168327	0					
ANR	1168571	UnaryOperator	!		1168327	0					
ANR	1168572	Identifier	popcodep		1168327	1					
ANR	1168573	CompoundStatement		68:21:2110:2110	1168327	1					
ANR	1168574	ReturnStatement	return NULL ;	245:7:7294:7305	1168327	0	True				
ANR	1168575	Identifier	NULL		1168327	0					
ANR	1168576	IfStatement	if ( popcodep -> match == BDAP_QUICK_OPCODE )		1168327	2					
ANR	1168577	Condition	popcodep -> match == BDAP_QUICK_OPCODE	248:10:7326:7361	1168327	0	True				
ANR	1168578	EqualityExpression	popcodep -> match == BDAP_QUICK_OPCODE		1168327	0		==			
ANR	1168579	PtrMemberAccess	popcodep -> match		1168327	0					
ANR	1168580	Identifier	popcodep		1168327	0					
ANR	1168581	Identifier	match		1168327	1					
ANR	1168582	Identifier	BDAP_QUICK_OPCODE		1168327	1					
ANR	1168583	CompoundStatement		76:3:2308:2340	1168327	1					
ANR	1168584	IdentifierDeclStatement	int offset = ( prefix_insn & 255 ) ;	252:3:7483:7515	1168327	0	True				
ANR	1168585	IdentifierDecl	offset = ( prefix_insn & 255 )		1168327	0					
ANR	1168586	IdentifierDeclType	int		1168327	0					
ANR	1168587	Identifier	offset		1168327	1					
ANR	1168588	AssignmentExpression	offset = ( prefix_insn & 255 )		1168327	2		=			
ANR	1168589	Identifier	offset		1168327	0					
ANR	1168590	BitAndExpression	prefix_insn & 255		1168327	1		&			
ANR	1168591	Identifier	prefix_insn		1168327	0					
ANR	1168592	PrimaryExpression	255		1168327	1					
ANR	1168593	IfStatement	if ( offset > 127 )		1168327	1					
ANR	1168594	Condition	offset > 127	254:7:7525:7536	1168327	0	True				
ANR	1168595	RelationalExpression	offset > 127		1168327	0		>			
ANR	1168596	Identifier	offset		1168327	0					
ANR	1168597	PrimaryExpression	127		1168327	1					
ANR	1168598	CompoundStatement		78:21:2364:2364	1168327	1					
ANR	1168599	ExpressionStatement	offset -= 256	255:4:7545:7558	1168327	0	True				
ANR	1168600	AssignmentExpression	offset -= 256		1168327	0		-=			
ANR	1168601	Identifier	offset		1168327	0					
ANR	1168602	PrimaryExpression	256		1168327	1					
ANR	1168603	SwitchStatement	switch ( offset )		1168327	2					
ANR	1168604	Condition	offset	258:11:7577:7582	1168327	0	True				
ANR	1168605	Identifier	offset		1168327	0					
ANR	1168606	CompoundStatement		83:5:2415:2415	1168327	1					
ANR	1168607	Statement	case	260:5:7597:7600	1168327	0	True				
ANR	1168608	Statement	-	260:10:7602:7602	1168327	1	True				
ANR	1168609	Label	4 :	260:11:7603:7604	1168327	2	True				
ANR	1168610	ExpressionStatement	prefix_opc_table = bdapq_m4_prefixes	261:7:7613:7649	1168327	3	True				
ANR	1168611	AssignmentExpression	prefix_opc_table = bdapq_m4_prefixes		1168327	0		=			
ANR	1168612	Identifier	prefix_opc_table		1168327	0					
ANR	1168613	Identifier	bdapq_m4_prefixes		1168327	1					
ANR	1168614	BreakStatement	break ;	262:7:7658:7663	1168327	4	True				
ANR	1168615	Statement	case	264:5:7671:7674	1168327	5	True				
ANR	1168616	Statement	-	264:10:7676:7676	1168327	6	True				
ANR	1168617	Label	2 :	264:11:7677:7678	1168327	7	True				
ANR	1168618	ExpressionStatement	prefix_opc_table = bdapq_m2_prefixes	265:7:7687:7723	1168327	8	True				
ANR	1168619	AssignmentExpression	prefix_opc_table = bdapq_m2_prefixes		1168327	0		=			
ANR	1168620	Identifier	prefix_opc_table		1168327	0					
ANR	1168621	Identifier	bdapq_m2_prefixes		1168327	1					
ANR	1168622	BreakStatement	break ;	266:7:7732:7737	1168327	9	True				
ANR	1168623	Statement	case	268:5:7745:7748	1168327	10	True				
ANR	1168624	Statement	-	268:10:7750:7750	1168327	11	True				
ANR	1168625	Label	1 :	268:11:7751:7752	1168327	12	True				
ANR	1168626	ExpressionStatement	prefix_opc_table = bdapq_m1_prefixes	269:7:7761:7797	1168327	13	True				
ANR	1168627	AssignmentExpression	prefix_opc_table = bdapq_m1_prefixes		1168327	0		=			
ANR	1168628	Identifier	prefix_opc_table		1168327	0					
ANR	1168629	Identifier	bdapq_m1_prefixes		1168327	1					
ANR	1168630	BreakStatement	break ;	270:7:7806:7811	1168327	14	True				
ANR	1168631	Label	default :	272:5:7819:7826	1168327	15	True				
ANR	1168632	Identifier	default		1168327	0					
ANR	1168633	ExpressionStatement	prefix_opc_table = rest_prefixes	273:7:7835:7867	1168327	16	True				
ANR	1168634	AssignmentExpression	prefix_opc_table = rest_prefixes		1168327	0		=			
ANR	1168635	Identifier	prefix_opc_table		1168327	0					
ANR	1168636	Identifier	rest_prefixes		1168327	1					
ANR	1168637	BreakStatement	break ;	274:7:7876:7881	1168327	17	True				
ANR	1168638	ElseStatement	else		1168327	0					
ANR	1168639	IfStatement	if ( popcodep -> match == DIP_OPCODE )		1168327	0					
ANR	1168640	Condition	popcodep -> match == DIP_OPCODE	276:17:7907:7935	1168327	0	True				
ANR	1168641	EqualityExpression	popcodep -> match == DIP_OPCODE		1168327	0		==			
ANR	1168642	PtrMemberAccess	popcodep -> match		1168327	0					
ANR	1168643	Identifier	popcodep		1168327	0					
ANR	1168644	Identifier	match		1168327	1					
ANR	1168645	Identifier	DIP_OPCODE		1168327	1					
ANR	1168646	CompoundStatement		100:48:2763:2763	1168327	1					
ANR	1168647	ExpressionStatement	prefix_opc_table = dip_prefixes	279:7:8052:8083	1168327	0	True				
ANR	1168648	AssignmentExpression	prefix_opc_table = dip_prefixes		1168327	0		=			
ANR	1168649	Identifier	prefix_opc_table		1168327	0					
ANR	1168650	Identifier	dip_prefixes		1168327	1					
ANR	1168651	ElseStatement	else		1168327	0					
ANR	1168652	CompoundStatement		104:13:2923:2923	1168327	0					
ANR	1168653	ExpressionStatement	prefix_opc_table = rest_prefixes	281:7:8107:8139	1168327	0	True				
ANR	1168654	AssignmentExpression	prefix_opc_table = rest_prefixes		1168327	0		=			
ANR	1168655	Identifier	prefix_opc_table		1168327	0					
ANR	1168656	Identifier	rest_prefixes		1168327	1					
ANR	1168657	IfStatement	if ( prefix_insn != NO_CRIS_PREFIX && prefix_opc_table [ insn ] != NULL )		1168327	16					
ANR	1168658	Condition	prefix_insn != NO_CRIS_PREFIX && prefix_opc_table [ insn ] != NULL	285:8:8164:8226	1168327	0	True				
ANR	1168659	AndExpression	prefix_insn != NO_CRIS_PREFIX && prefix_opc_table [ insn ] != NULL		1168327	0		&&			
ANR	1168660	EqualityExpression	prefix_insn != NO_CRIS_PREFIX		1168327	0		!=			
ANR	1168661	Identifier	prefix_insn		1168327	0					
ANR	1168662	Identifier	NO_CRIS_PREFIX		1168327	1					
ANR	1168663	EqualityExpression	prefix_opc_table [ insn ] != NULL		1168327	1		!=			
ANR	1168664	ArrayIndexing	prefix_opc_table [ insn ]		1168327	0					
ANR	1168665	Identifier	prefix_opc_table		1168327	0					
ANR	1168666	Identifier	insn		1168327	1					
ANR	1168667	Identifier	NULL		1168327	1					
ANR	1168668	CompoundStatement		109:73:3054:3054	1168327	1					
ANR	1168669	ExpressionStatement	max_matchedp = prefix_opc_table [ insn ]	286:5:8236:8273	1168327	0	True				
ANR	1168670	AssignmentExpression	max_matchedp = prefix_opc_table [ insn ]		1168327	0		=			
ANR	1168671	Identifier	max_matchedp		1168327	0					
ANR	1168672	ArrayIndexing	prefix_opc_table [ insn ]		1168327	1					
ANR	1168673	Identifier	prefix_opc_table		1168327	0					
ANR	1168674	Identifier	insn		1168327	1					
ANR	1168675	ElseStatement	else		1168327	0					
ANR	1168676	IfStatement	if ( prefix_insn == NO_CRIS_PREFIX && opc_table [ insn ] != NULL )		1168327	0					
ANR	1168677	Condition	prefix_insn == NO_CRIS_PREFIX && opc_table [ insn ] != NULL	287:15:8290:8345	1168327	0	True				
ANR	1168678	AndExpression	prefix_insn == NO_CRIS_PREFIX && opc_table [ insn ] != NULL		1168327	0		&&			
ANR	1168679	EqualityExpression	prefix_insn == NO_CRIS_PREFIX		1168327	0		==			
ANR	1168680	Identifier	prefix_insn		1168327	0					
ANR	1168681	Identifier	NO_CRIS_PREFIX		1168327	1					
ANR	1168682	EqualityExpression	opc_table [ insn ] != NULL		1168327	1		!=			
ANR	1168683	ArrayIndexing	opc_table [ insn ]		1168327	0					
ANR	1168684	Identifier	opc_table		1168327	0					
ANR	1168685	Identifier	insn		1168327	1					
ANR	1168686	Identifier	NULL		1168327	1					
ANR	1168687	CompoundStatement		111:73:3173:3173	1168327	1					
ANR	1168688	ExpressionStatement	max_matchedp = opc_table [ insn ]	288:5:8355:8385	1168327	0	True				
ANR	1168689	AssignmentExpression	max_matchedp = opc_table [ insn ]		1168327	0		=			
ANR	1168690	Identifier	max_matchedp		1168327	0					
ANR	1168691	ArrayIndexing	opc_table [ insn ]		1168327	1					
ANR	1168692	Identifier	opc_table		1168327	0					
ANR	1168693	Identifier	insn		1168327	1					
ANR	1168694	ElseStatement	else		1168327	0					
ANR	1168695	CompoundStatement		115:5:3270:3297	1168327	0					
ANR	1168696	IdentifierDeclStatement	const struct cris_opcode * opcodep ;	290:5:8405:8438	1168327	0	True				
ANR	1168697	IdentifierDecl	* opcodep		1168327	0					
ANR	1168698	IdentifierDeclType	const struct cris_opcode *		1168327	0					
ANR	1168699	Identifier	opcodep		1168327	1					
ANR	1168700	IdentifierDeclStatement	int max_level_of_match = - 1 ;	291:5:8445:8472	1168327	1	True				
ANR	1168701	IdentifierDecl	max_level_of_match = - 1		1168327	0					
ANR	1168702	IdentifierDeclType	int		1168327	0					
ANR	1168703	Identifier	max_level_of_match		1168327	1					
ANR	1168704	AssignmentExpression	max_level_of_match = - 1		1168327	2		=			
ANR	1168705	Identifier	max_level_of_match		1168327	0					
ANR	1168706	UnaryOperationExpression	- 1		1168327	1					
ANR	1168707	UnaryOperator	-		1168327	0					
ANR	1168708	PrimaryExpression	1		1168327	1					
ANR	1168709	ForStatement	for ( opcodep = cris_opcodes ; opcodep -> name != NULL ; opcodep ++ )		1168327	2					
ANR	1168710	ForInit	opcodep = cris_opcodes ;	293:10:8485:8507	1168327	0	True				
ANR	1168711	AssignmentExpression	opcodep = cris_opcodes		1168327	0		=			
ANR	1168712	Identifier	opcodep		1168327	0					
ANR	1168713	Identifier	cris_opcodes		1168327	1					
ANR	1168714	Condition	opcodep -> name != NULL	294:6:8515:8535	1168327	1	True				
ANR	1168715	EqualityExpression	opcodep -> name != NULL		1168327	0		!=			
ANR	1168716	PtrMemberAccess	opcodep -> name		1168327	0					
ANR	1168717	Identifier	opcodep		1168327	0					
ANR	1168718	Identifier	name		1168327	1					
ANR	1168719	Identifier	NULL		1168327	1					
ANR	1168720	PostIncDecOperationExpression	opcodep ++	295:6:8544:8552	1168327	2	True				
ANR	1168721	Identifier	opcodep		1168327	0					
ANR	1168722	IncDec	++		1168327	1					
ANR	1168723	CompoundStatement		120:6:3388:3406	1168327	3					
ANR	1168724	IdentifierDeclStatement	int level_of_match ;	296:6:8563:8581	1168327	0	True				
ANR	1168725	IdentifierDecl	level_of_match		1168327	0					
ANR	1168726	IdentifierDeclType	int		1168327	0					
ANR	1168727	Identifier	level_of_match		1168327	1					
ANR	1168728	IfStatement	if ( disdata -> distype == cris_dis_v32 )		1168327	1					
ANR	1168729	Condition	disdata -> distype == cris_dis_v32	298:10:8594:8625	1168327	0	True				
ANR	1168730	EqualityExpression	disdata -> distype == cris_dis_v32		1168327	0		==			
ANR	1168731	PtrMemberAccess	disdata -> distype		1168327	0					
ANR	1168732	Identifier	disdata		1168327	0					
ANR	1168733	Identifier	distype		1168327	1					
ANR	1168734	Identifier	cris_dis_v32		1168327	1					
ANR	1168735	CompoundStatement		122:44:3453:3453	1168327	1					
ANR	1168736	SwitchStatement	switch ( opcodep -> applicable_version )		1168327	0					
ANR	1168737	Condition	opcodep -> applicable_version	299:15:8645:8671	1168327	0	True				
ANR	1168738	PtrMemberAccess	opcodep -> applicable_version		1168327	0					
ANR	1168739	Identifier	opcodep		1168327	0					
ANR	1168740	Identifier	applicable_version		1168327	1					
ANR	1168741	CompoundStatement		123:44:3499:3499	1168327	1					
ANR	1168742	Label	case cris_ver_version_all :	300:7:8683:8708	1168327	0	True				
ANR	1168743	Identifier	cris_ver_version_all		1168327	0					
ANR	1168744	BreakStatement	break ;	301:8:8718:8723	1168327	1	True				
ANR	1168745	Label	case cris_ver_v0_3 :	303:7:8733:8751	1168327	2	True				
ANR	1168746	Identifier	cris_ver_v0_3		1168327	0					
ANR	1168747	Label	case cris_ver_v0_10 :	304:7:8760:8779	1168327	3	True				
ANR	1168748	Identifier	cris_ver_v0_10		1168327	0					
ANR	1168749	Label	case cris_ver_v3_10 :	305:7:8788:8807	1168327	4	True				
ANR	1168750	Identifier	cris_ver_v3_10		1168327	0					
ANR	1168751	Label	case cris_ver_sim_v0_10 :	306:7:8816:8839	1168327	5	True				
ANR	1168752	Identifier	cris_ver_sim_v0_10		1168327	0					
ANR	1168753	Label	case cris_ver_v8_10 :	307:7:8848:8867	1168327	6	True				
ANR	1168754	Identifier	cris_ver_v8_10		1168327	0					
ANR	1168755	Label	case cris_ver_v10 :	308:7:8876:8893	1168327	7	True				
ANR	1168756	Identifier	cris_ver_v10		1168327	0					
ANR	1168757	Label	case cris_ver_warning :	309:7:8902:8923	1168327	8	True				
ANR	1168758	Identifier	cris_ver_warning		1168327	0					
ANR	1168759	ContinueStatement	continue ;	310:8:8933:8941	1168327	9	True				
ANR	1168760	Label	case cris_ver_v3p :	312:7:8951:8968	1168327	10	True				
ANR	1168761	Identifier	cris_ver_v3p		1168327	0					
ANR	1168762	Label	case cris_ver_v8p :	313:7:8977:8994	1168327	11	True				
ANR	1168763	Identifier	cris_ver_v8p		1168327	0					
ANR	1168764	Label	case cris_ver_v10p :	314:7:9003:9021	1168327	12	True				
ANR	1168765	Identifier	cris_ver_v10p		1168327	0					
ANR	1168766	Label	case cris_ver_v32p :	315:7:9030:9048	1168327	13	True				
ANR	1168767	Identifier	cris_ver_v32p		1168327	0					
ANR	1168768	BreakStatement	break ;	316:8:9058:9063	1168327	14	True				
ANR	1168769	Label	case cris_ver_v8 :	318:7:9073:9089	1168327	15	True				
ANR	1168770	Identifier	cris_ver_v8		1168327	0					
ANR	1168771	ExpressionStatement	abort ( )	319:8:9099:9107	1168327	16	True				
ANR	1168772	CallExpression	abort ( )		1168327	0					
ANR	1168773	Callee	abort		1168327	0					
ANR	1168774	Identifier	abort		1168327	0					
ANR	1168775	ArgumentList			1168327	1					
ANR	1168776	Label	default :	320:7:9116:9123	1168327	17	True				
ANR	1168777	Identifier	default		1168327	0					
ANR	1168778	ExpressionStatement	abort ( )	321:8:9133:9141	1168327	18	True				
ANR	1168779	CallExpression	abort ( )		1168327	0					
ANR	1168780	Callee	abort		1168327	0					
ANR	1168781	Identifier	abort		1168327	0					
ANR	1168782	ArgumentList			1168327	1					
ANR	1168783	ElseStatement	else		1168327	0					
ANR	1168784	CompoundStatement		147:13:3990:3990	1168327	0					
ANR	1168785	SwitchStatement	switch ( opcodep -> applicable_version )		1168327	0					
ANR	1168786	Condition	opcodep -> applicable_version	324:15:9182:9208	1168327	0	True				
ANR	1168787	PtrMemberAccess	opcodep -> applicable_version		1168327	0					
ANR	1168788	Identifier	opcodep		1168327	0					
ANR	1168789	Identifier	applicable_version		1168327	1					
ANR	1168790	CompoundStatement		148:44:4036:4036	1168327	1					
ANR	1168791	Label	case cris_ver_version_all :	325:7:9220:9245	1168327	0	True				
ANR	1168792	Identifier	cris_ver_version_all		1168327	0					
ANR	1168793	Label	case cris_ver_v0_3 :	326:7:9254:9272	1168327	1	True				
ANR	1168794	Identifier	cris_ver_v0_3		1168327	0					
ANR	1168795	Label	case cris_ver_v3p :	327:7:9281:9298	1168327	2	True				
ANR	1168796	Identifier	cris_ver_v3p		1168327	0					
ANR	1168797	Label	case cris_ver_v0_10 :	328:7:9307:9326	1168327	3	True				
ANR	1168798	Identifier	cris_ver_v0_10		1168327	0					
ANR	1168799	Label	case cris_ver_v8p :	329:7:9335:9352	1168327	4	True				
ANR	1168800	Identifier	cris_ver_v8p		1168327	0					
ANR	1168801	Label	case cris_ver_v8_10 :	330:7:9361:9380	1168327	5	True				
ANR	1168802	Identifier	cris_ver_v8_10		1168327	0					
ANR	1168803	Label	case cris_ver_v10 :	331:7:9389:9406	1168327	6	True				
ANR	1168804	Identifier	cris_ver_v10		1168327	0					
ANR	1168805	Label	case cris_ver_sim_v0_10 :	332:7:9415:9438	1168327	7	True				
ANR	1168806	Identifier	cris_ver_sim_v0_10		1168327	0					
ANR	1168807	Label	case cris_ver_v10p :	333:7:9447:9465	1168327	8	True				
ANR	1168808	Identifier	cris_ver_v10p		1168327	0					
ANR	1168809	Label	case cris_ver_warning :	334:7:9474:9495	1168327	9	True				
ANR	1168810	Identifier	cris_ver_warning		1168327	0					
ANR	1168811	BreakStatement	break ;	335:8:9505:9510	1168327	10	True				
ANR	1168812	Label	case cris_ver_v32p :	337:7:9520:9538	1168327	11	True				
ANR	1168813	Identifier	cris_ver_v32p		1168327	0					
ANR	1168814	ContinueStatement	continue ;	338:8:9548:9556	1168327	12	True				
ANR	1168815	Label	case cris_ver_v8 :	340:7:9566:9582	1168327	13	True				
ANR	1168816	Identifier	cris_ver_v8		1168327	0					
ANR	1168817	ExpressionStatement	abort ( )	341:8:9592:9600	1168327	14	True				
ANR	1168818	CallExpression	abort ( )		1168327	0					
ANR	1168819	Callee	abort		1168327	0					
ANR	1168820	Identifier	abort		1168327	0					
ANR	1168821	ArgumentList			1168327	1					
ANR	1168822	Label	default :	342:7:9609:9616	1168327	15	True				
ANR	1168823	Identifier	default		1168327	0					
ANR	1168824	ExpressionStatement	abort ( )	343:8:9626:9634	1168327	16	True				
ANR	1168825	CallExpression	abort ( )		1168327	0					
ANR	1168826	Callee	abort		1168327	0					
ANR	1168827	Identifier	abort		1168327	0					
ANR	1168828	ArgumentList			1168327	1					
ANR	1168829	IfStatement	"if ( ( opcodep -> match & insn ) == opcodep -> match && ( opcodep -> lose & insn ) == 0 && ( ( level_of_match = cris_constraint ( opcodep -> args , insn , prefix_insn , disdata ) ) >= 0 ) && ( ( level_of_match += 2 * number_of_bits ( opcodep -> match | opcodep -> lose ) ) > max_level_of_match ) )"		1168327	2					
ANR	1168830	Condition	"( opcodep -> match & insn ) == opcodep -> match && ( opcodep -> lose & insn ) == 0 && ( ( level_of_match = cris_constraint ( opcodep -> args , insn , prefix_insn , disdata ) ) >= 0 ) && ( ( level_of_match += 2 * number_of_bits ( opcodep -> match | opcodep -> lose ) ) > max_level_of_match )"	353:10:9988:10246	1168327	0	True				
ANR	1168831	AndExpression	"( opcodep -> match & insn ) == opcodep -> match && ( opcodep -> lose & insn ) == 0 && ( ( level_of_match = cris_constraint ( opcodep -> args , insn , prefix_insn , disdata ) ) >= 0 ) && ( ( level_of_match += 2 * number_of_bits ( opcodep -> match | opcodep -> lose ) ) > max_level_of_match )"		1168327	0		&&			
ANR	1168832	EqualityExpression	( opcodep -> match & insn ) == opcodep -> match		1168327	0		==			
ANR	1168833	BitAndExpression	opcodep -> match & insn		1168327	0		&			
ANR	1168834	PtrMemberAccess	opcodep -> match		1168327	0					
ANR	1168835	Identifier	opcodep		1168327	0					
ANR	1168836	Identifier	match		1168327	1					
ANR	1168837	Identifier	insn		1168327	1					
ANR	1168838	PtrMemberAccess	opcodep -> match		1168327	1					
ANR	1168839	Identifier	opcodep		1168327	0					
ANR	1168840	Identifier	match		1168327	1					
ANR	1168841	AndExpression	"( opcodep -> lose & insn ) == 0 && ( ( level_of_match = cris_constraint ( opcodep -> args , insn , prefix_insn , disdata ) ) >= 0 ) && ( ( level_of_match += 2 * number_of_bits ( opcodep -> match | opcodep -> lose ) ) > max_level_of_match )"		1168327	1		&&			
ANR	1168842	EqualityExpression	( opcodep -> lose & insn ) == 0		1168327	0		==			
ANR	1168843	BitAndExpression	opcodep -> lose & insn		1168327	0		&			
ANR	1168844	PtrMemberAccess	opcodep -> lose		1168327	0					
ANR	1168845	Identifier	opcodep		1168327	0					
ANR	1168846	Identifier	lose		1168327	1					
ANR	1168847	Identifier	insn		1168327	1					
ANR	1168848	PrimaryExpression	0		1168327	1					
ANR	1168849	AndExpression	"( ( level_of_match = cris_constraint ( opcodep -> args , insn , prefix_insn , disdata ) ) >= 0 ) && ( ( level_of_match += 2 * number_of_bits ( opcodep -> match | opcodep -> lose ) ) > max_level_of_match )"		1168327	1		&&			
ANR	1168850	RelationalExpression	"( level_of_match = cris_constraint ( opcodep -> args , insn , prefix_insn , disdata ) ) >= 0"		1168327	0		>=			
ANR	1168851	AssignmentExpression	"level_of_match = cris_constraint ( opcodep -> args , insn , prefix_insn , disdata )"		1168327	0		=			
ANR	1168852	Identifier	level_of_match		1168327	0					
ANR	1168853	CallExpression	"cris_constraint ( opcodep -> args , insn , prefix_insn , disdata )"		1168327	1					
ANR	1168854	Callee	cris_constraint		1168327	0					
ANR	1168855	Identifier	cris_constraint		1168327	0					
ANR	1168856	ArgumentList	opcodep -> args		1168327	1					
ANR	1168857	Argument	opcodep -> args		1168327	0					
ANR	1168858	PtrMemberAccess	opcodep -> args		1168327	0					
ANR	1168859	Identifier	opcodep		1168327	0					
ANR	1168860	Identifier	args		1168327	1					
ANR	1168861	Argument	insn		1168327	1					
ANR	1168862	Identifier	insn		1168327	0					
ANR	1168863	Argument	prefix_insn		1168327	2					
ANR	1168864	Identifier	prefix_insn		1168327	0					
ANR	1168865	Argument	disdata		1168327	3					
ANR	1168866	Identifier	disdata		1168327	0					
ANR	1168867	PrimaryExpression	0		1168327	1					
ANR	1168868	RelationalExpression	( level_of_match += 2 * number_of_bits ( opcodep -> match | opcodep -> lose ) ) > max_level_of_match		1168327	1		>			
ANR	1168869	AssignmentExpression	level_of_match += 2 * number_of_bits ( opcodep -> match | opcodep -> lose )		1168327	0		+=			
ANR	1168870	Identifier	level_of_match		1168327	0					
ANR	1168871	MultiplicativeExpression	2 * number_of_bits ( opcodep -> match | opcodep -> lose )		1168327	1		*			
ANR	1168872	PrimaryExpression	2		1168327	0					
ANR	1168873	CallExpression	number_of_bits ( opcodep -> match | opcodep -> lose )		1168327	1					
ANR	1168874	Callee	number_of_bits		1168327	0					
ANR	1168875	Identifier	number_of_bits		1168327	0					
ANR	1168876	ArgumentList	opcodep -> match | opcodep -> lose		1168327	1					
ANR	1168877	Argument	opcodep -> match | opcodep -> lose		1168327	0					
ANR	1168878	InclusiveOrExpression	opcodep -> match | opcodep -> lose		1168327	0		|			
ANR	1168879	PtrMemberAccess	opcodep -> match		1168327	0					
ANR	1168880	Identifier	opcodep		1168327	0					
ANR	1168881	Identifier	match		1168327	1					
ANR	1168882	PtrMemberAccess	opcodep -> lose		1168327	1					
ANR	1168883	Identifier	opcodep		1168327	0					
ANR	1168884	Identifier	lose		1168327	1					
ANR	1168885	Identifier	max_level_of_match		1168327	1					
ANR	1168886	CompoundStatement		177:271:5074:5074	1168327	1					
ANR	1168887	ExpressionStatement	max_matchedp = opcodep	354:7:10258:10280	1168327	0	True				
ANR	1168888	AssignmentExpression	max_matchedp = opcodep		1168327	0		=			
ANR	1168889	Identifier	max_matchedp		1168327	0					
ANR	1168890	Identifier	opcodep		1168327	1					
ANR	1168891	ExpressionStatement	max_level_of_match = level_of_match	355:7:10289:10324	1168327	1	True				
ANR	1168892	AssignmentExpression	max_level_of_match = level_of_match		1168327	0		=			
ANR	1168893	Identifier	max_level_of_match		1168327	0					
ANR	1168894	Identifier	level_of_match		1168327	1					
ANR	1168895	IfStatement	if ( level_of_match >= 2 * 16 )		1168327	2					
ANR	1168896	Condition	level_of_match >= 2 * 16	359:11:10411:10434	1168327	0	True				
ANR	1168897	RelationalExpression	level_of_match >= 2 * 16		1168327	0		>=			
ANR	1168898	Identifier	level_of_match		1168327	0					
ANR	1168899	MultiplicativeExpression	2 * 16		1168327	1		*			
ANR	1168900	PrimaryExpression	2		1168327	0					
ANR	1168901	PrimaryExpression	16		1168327	1					
ANR	1168902	CompoundStatement		183:37:5262:5262	1168327	1					
ANR	1168903	BreakStatement	break ;	360:8:10447:10452	1168327	0	True				
ANR	1168904	IfStatement	if ( prefix_insn == NO_CRIS_PREFIX )		1168327	3					
ANR	1168905	Condition	prefix_insn == NO_CRIS_PREFIX	371:6:10795:10823	1168327	0	True				
ANR	1168906	EqualityExpression	prefix_insn == NO_CRIS_PREFIX		1168327	0		==			
ANR	1168907	Identifier	prefix_insn		1168327	0					
ANR	1168908	Identifier	NO_CRIS_PREFIX		1168327	1					
ANR	1168909	CompoundStatement		195:37:5651:5651	1168327	1					
ANR	1168910	ExpressionStatement	opc_table [ insn ] = max_matchedp	372:3:10831:10861	1168327	0	True				
ANR	1168911	AssignmentExpression	opc_table [ insn ] = max_matchedp		1168327	0		=			
ANR	1168912	ArrayIndexing	opc_table [ insn ]		1168327	0					
ANR	1168913	Identifier	opc_table		1168327	0					
ANR	1168914	Identifier	insn		1168327	1					
ANR	1168915	Identifier	max_matchedp		1168327	1					
ANR	1168916	ElseStatement	else		1168327	0					
ANR	1168917	CompoundStatement		197:9:5697:5697	1168327	0					
ANR	1168918	ExpressionStatement	prefix_opc_table [ insn ] = max_matchedp	374:3:10877:10914	1168327	0	True				
ANR	1168919	AssignmentExpression	prefix_opc_table [ insn ] = max_matchedp		1168327	0		=			
ANR	1168920	ArrayIndexing	prefix_opc_table [ insn ]		1168327	0					
ANR	1168921	Identifier	prefix_opc_table		1168327	0					
ANR	1168922	Identifier	insn		1168327	1					
ANR	1168923	Identifier	max_matchedp		1168327	1					
ANR	1168924	ReturnStatement	return max_matchedp ;	378:2:10929:10948	1168327	17	True				
ANR	1168925	Identifier	max_matchedp		1168327	0					
ANR	1168926	ReturnType	static const struct cris_opcode *		1168327	1					
ANR	1168927	Identifier	get_opcode_entry		1168327	2					
ANR	1168928	ParameterList	"unsigned int insn , unsigned int prefix_insn , struct cris_disasm_data * disdata"		1168327	3					
ANR	1168929	Parameter	unsigned int insn	174:18:5087:5103	1168327	0	True				
ANR	1168930	ParameterType	unsigned int		1168327	0					
ANR	1168931	Identifier	insn		1168327	1					
ANR	1168932	Parameter	unsigned int prefix_insn	175:4:5110:5133	1168327	1	True				
ANR	1168933	ParameterType	unsigned int		1168327	0					
ANR	1168934	Identifier	prefix_insn		1168327	1					
ANR	1168935	Parameter	struct cris_disasm_data * disdata	176:4:5140:5171	1168327	2	True				
ANR	1168936	ParameterType	struct cris_disasm_data *		1168327	0					
ANR	1168937	Identifier	disdata		1168327	1					
ANR	1168938	CFGEntryNode	ENTRY		1168327		True				
ANR	1168939	CFGExitNode	EXIT		1168327		True				
ANR	1168940	Symbol	* bdapq_m1_prefixes		1168327						
ANR	1168941	Symbol	rest_prefixes		1168327						
ANR	1168942	Symbol	* bdapq_m4_prefixes		1168327						
ANR	1168943	Symbol	bdapq_m2_prefixes		1168327						
ANR	1168944	Symbol	* dip_prefixes		1168327						
ANR	1168945	Symbol	max_matchedp		1168327						
ANR	1168946	Symbol	calloc		1168327						
ANR	1168947	Symbol	DIP_OPCODE		1168327						
ANR	1168948	Symbol	level_of_match		1168327						
ANR	1168949	Symbol	opc_table		1168327						
ANR	1168950	Symbol	number_of_bits		1168327						
ANR	1168951	Symbol	* opcodep		1168327						
ANR	1168952	Symbol	opcodep -> match		1168327						
ANR	1168953	Symbol	NO_CRIS_PREFIX		1168327						
ANR	1168954	Symbol	popcodep -> match		1168327						
ANR	1168955	Symbol	opcodep -> args		1168327						
ANR	1168956	Symbol	prefix_insn		1168327						
ANR	1168957	Symbol	* rest_prefixes		1168327						
ANR	1168958	Symbol	* prefix_insn		1168327						
ANR	1168959	Symbol	opcodep -> lose		1168327						
ANR	1168960	Symbol	max_level_of_match		1168327						
ANR	1168961	Symbol	dip_prefixes		1168327						
ANR	1168962	Symbol	* popcodep		1168327						
ANR	1168963	Symbol	opcodep -> name		1168327						
ANR	1168964	Symbol	NULL		1168327						
ANR	1168965	Symbol	* opc_table		1168327						
ANR	1168966	Symbol	offset		1168327						
ANR	1168967	Symbol	BDAP_QUICK_OPCODE		1168327						
ANR	1168968	Symbol	opcodep -> applicable_version		1168327						
ANR	1168969	Symbol	disdata		1168327						
ANR	1168970	Symbol	* prefix_opc_table		1168327						
ANR	1168971	Symbol	bdapq_m1_prefixes		1168327						
ANR	1168972	Symbol	* insn		1168327						
ANR	1168973	Symbol	* bdapq_m2_prefixes		1168327						
ANR	1168974	Symbol	cris_dis_v32		1168327						
ANR	1168975	Symbol	bdapq_m4_prefixes		1168327						
ANR	1168976	Symbol	cris_constraint		1168327						
ANR	1168977	Symbol	popcodep		1168327						
ANR	1168978	Symbol	cris_opcodes		1168327						
ANR	1168979	Symbol	insn		1168327						
ANR	1168980	Symbol	prefix_opc_table		1168327						
ANR	1168981	Symbol	get_opcode_entry		1168327						
ANR	1168982	Symbol	disdata -> distype		1168327						
ANR	1168983	Symbol	opcodep		1168327						
ANR	1168984	Symbol	* disdata		1168327						
ANR	1168985	Function	cris_constraint	385:0:11155:14985							
ANR	1168986	FunctionDef	"cris_constraint (const char * cs , unsigned int insn , unsigned int prefix_insn , struct cris_disasm_data * disdata)"		1168985	0					
ANR	1168987	CompoundStatement		390:0:11287:14985	1168985	0					
ANR	1168988	IdentifierDeclStatement	int retval = 0 ;	391:2:11291:11305	1168985	0	True				
ANR	1168989	IdentifierDecl	retval = 0		1168985	0					
ANR	1168990	IdentifierDeclType	int		1168985	0					
ANR	1168991	Identifier	retval		1168985	1					
ANR	1168992	AssignmentExpression	retval = 0		1168985	2		=			
ANR	1168993	Identifier	retval		1168985	0					
ANR	1168994	PrimaryExpression	0		1168985	1					
ANR	1168995	IdentifierDeclStatement	int tmp ;	392:2:11309:11316	1168985	1	True				
ANR	1168996	IdentifierDecl	tmp		1168985	0					
ANR	1168997	IdentifierDeclType	int		1168985	0					
ANR	1168998	Identifier	tmp		1168985	1					
ANR	1168999	IdentifierDeclStatement	int prefix_ok = 0 ;	393:2:11320:11337	1168985	2	True				
ANR	1169000	IdentifierDecl	prefix_ok = 0		1168985	0					
ANR	1169001	IdentifierDeclType	int		1168985	0					
ANR	1169002	Identifier	prefix_ok		1168985	1					
ANR	1169003	AssignmentExpression	prefix_ok = 0		1168985	2		=			
ANR	1169004	Identifier	prefix_ok		1168985	0					
ANR	1169005	PrimaryExpression	0		1168985	1					
ANR	1169006	IdentifierDeclStatement	const char * s ;	394:2:11341:11354	1168985	3	True				
ANR	1169007	IdentifierDecl	* s		1168985	0					
ANR	1169008	IdentifierDeclType	const char *		1168985	0					
ANR	1169009	Identifier	s		1168985	1					
ANR	1169010	ForStatement	for ( s = cs ; * s ; s ++ )		1168985	4					
ANR	1169011	ForInit	s = cs ;	396:7:11364:11370	1168985	0	True				
ANR	1169012	AssignmentExpression	s = cs		1168985	0		=			
ANR	1169013	Identifier	s		1168985	0					
ANR	1169014	Identifier	cs		1168985	1					
ANR	1169015	Condition	* s	396:15:11372:11373	1168985	1	True				
ANR	1169016	UnaryOperationExpression	* s		1168985	0					
ANR	1169017	UnaryOperator	*		1168985	0					
ANR	1169018	Identifier	s		1168985	1					
ANR	1169019	PostIncDecOperationExpression	s ++	396:19:11376:11378	1168985	2	True				
ANR	1169020	Identifier	s		1168985	0					
ANR	1169021	IncDec	++		1168985	1					
ANR	1169022	CompoundStatement		7:24:93:93	1168985	3					
ANR	1169023	SwitchStatement	switch ( * s )		1168985	0					
ANR	1169024	Condition	* s	397:11:11394:11395	1168985	0	True				
ANR	1169025	UnaryOperationExpression	* s		1168985	0					
ANR	1169026	UnaryOperator	*		1168985	0					
ANR	1169027	Identifier	s		1168985	1					
ANR	1169028	CompoundStatement		8:15:110:110	1168985	1					
ANR	1169029	Label	case '!' :	398:3:11403:11411	1168985	0	True				
ANR	1169030	IfStatement	if ( prefix_insn != NO_CRIS_PREFIX || disdata -> distype != cris_dis_v0_v10 )		1168985	1					
ANR	1169031	Condition	prefix_insn != NO_CRIS_PREFIX || disdata -> distype != cris_dis_v0_v10	401:8:11513:11580	1168985	0	True				
ANR	1169032	OrExpression	prefix_insn != NO_CRIS_PREFIX || disdata -> distype != cris_dis_v0_v10		1168985	0		||			
ANR	1169033	EqualityExpression	prefix_insn != NO_CRIS_PREFIX		1168985	0		!=			
ANR	1169034	Identifier	prefix_insn		1168985	0					
ANR	1169035	Identifier	NO_CRIS_PREFIX		1168985	1					
ANR	1169036	EqualityExpression	disdata -> distype != cris_dis_v0_v10		1168985	1		!=			
ANR	1169037	PtrMemberAccess	disdata -> distype		1168985	0					
ANR	1169038	Identifier	disdata		1168985	0					
ANR	1169039	Identifier	distype		1168985	1					
ANR	1169040	Identifier	cris_dis_v0_v10		1168985	1					
ANR	1169041	CompoundStatement		12:78:295:295	1168985	1					
ANR	1169042	ReturnStatement	return - 1 ;	402:5:11590:11599	1168985	0	True				
ANR	1169043	UnaryOperationExpression	- 1		1168985	0					
ANR	1169044	UnaryOperator	-		1168985	0					
ANR	1169045	PrimaryExpression	1		1168985	1					
ANR	1169046	BreakStatement	break ;	404:4:11611:11616	1168985	2	True				
ANR	1169047	Label	case 'U' :	406:3:11622:11630	1168985	3	True				
ANR	1169048	ReturnStatement	return - 1 ;	408:4:11678:11687	1168985	4	True				
ANR	1169049	UnaryOperationExpression	- 1		1168985	0					
ANR	1169050	UnaryOperator	-		1168985	0					
ANR	1169051	PrimaryExpression	1		1168985	1					
ANR	1169052	Label	case 'M' :	410:3:11693:11701	1168985	5	True				
ANR	1169053	ExpressionStatement	tmp = ( ( insn >> 12 ) & 0xf )	415:4:11970:11996	1168985	6	True				
ANR	1169054	AssignmentExpression	tmp = ( ( insn >> 12 ) & 0xf )		1168985	0		=			
ANR	1169055	Identifier	tmp		1168985	0					
ANR	1169056	BitAndExpression	( insn >> 12 ) & 0xf		1168985	1		&			
ANR	1169057	ShiftExpression	insn >> 12		1168985	0		>>			
ANR	1169058	Identifier	insn		1168985	0					
ANR	1169059	PrimaryExpression	12		1168985	1					
ANR	1169060	PrimaryExpression	0xf		1168985	1					
ANR	1169061	IfStatement	if ( tmp != 0 && tmp != 4 && tmp != 8 )		1168985	7					
ANR	1169062	Condition	tmp != 0 && tmp != 4 && tmp != 8	416:8:12006:12037	1168985	0	True				
ANR	1169063	AndExpression	tmp != 0 && tmp != 4 && tmp != 8		1168985	0		&&			
ANR	1169064	EqualityExpression	tmp != 0		1168985	0		!=			
ANR	1169065	Identifier	tmp		1168985	0					
ANR	1169066	PrimaryExpression	0		1168985	1					
ANR	1169067	AndExpression	tmp != 4 && tmp != 8		1168985	1		&&			
ANR	1169068	EqualityExpression	tmp != 4		1168985	0		!=			
ANR	1169069	Identifier	tmp		1168985	0					
ANR	1169070	PrimaryExpression	4		1168985	1					
ANR	1169071	EqualityExpression	tmp != 8		1168985	1		!=			
ANR	1169072	Identifier	tmp		1168985	0					
ANR	1169073	PrimaryExpression	8		1168985	1					
ANR	1169074	CompoundStatement		27:42:752:752	1168985	1					
ANR	1169075	ReturnStatement	return - 1 ;	417:5:12047:12056	1168985	0	True				
ANR	1169076	UnaryOperationExpression	- 1		1168985	0					
ANR	1169077	UnaryOperator	-		1168985	0					
ANR	1169078	PrimaryExpression	1		1168985	1					
ANR	1169079	BreakStatement	break ;	419:4:12068:12073	1168985	8	True				
ANR	1169080	Label	case 'm' :	421:3:12079:12087	1168985	9	True				
ANR	1169081	IfStatement	if ( ( insn & 0x30 ) == 0x30 )		1168985	10					
ANR	1169082	Condition	( insn & 0x30 ) == 0x30	422:8:12097:12117	1168985	0	True				
ANR	1169083	EqualityExpression	( insn & 0x30 ) == 0x30		1168985	0		==			
ANR	1169084	BitAndExpression	insn & 0x30		1168985	0		&			
ANR	1169085	Identifier	insn		1168985	0					
ANR	1169086	PrimaryExpression	0x30		1168985	1					
ANR	1169087	PrimaryExpression	0x30		1168985	1					
ANR	1169088	CompoundStatement		33:31:832:832	1168985	1					
ANR	1169089	ReturnStatement	return - 1 ;	423:5:12127:12136	1168985	0	True				
ANR	1169090	UnaryOperationExpression	- 1		1168985	0					
ANR	1169091	UnaryOperator	-		1168985	0					
ANR	1169092	PrimaryExpression	1		1168985	1					
ANR	1169093	BreakStatement	break ;	425:4:12148:12153	1168985	11	True				
ANR	1169094	Label	case 'S' :	427:3:12159:12167	1168985	12	True				
ANR	1169095	IfStatement	if ( prefix_insn != NO_CRIS_PREFIX && ( insn & 0x400 ) == 0 )		1168985	13					
ANR	1169096	Condition	prefix_insn != NO_CRIS_PREFIX && ( insn & 0x400 ) == 0	429:8:12226:12277	1168985	0	True				
ANR	1169097	AndExpression	prefix_insn != NO_CRIS_PREFIX && ( insn & 0x400 ) == 0		1168985	0		&&			
ANR	1169098	EqualityExpression	prefix_insn != NO_CRIS_PREFIX		1168985	0		!=			
ANR	1169099	Identifier	prefix_insn		1168985	0					
ANR	1169100	Identifier	NO_CRIS_PREFIX		1168985	1					
ANR	1169101	EqualityExpression	( insn & 0x400 ) == 0		1168985	1		==			
ANR	1169102	BitAndExpression	insn & 0x400		1168985	0		&			
ANR	1169103	Identifier	insn		1168985	0					
ANR	1169104	PrimaryExpression	0x400		1168985	1					
ANR	1169105	PrimaryExpression	0		1168985	1					
ANR	1169106	CompoundStatement		40:62:992:992	1168985	1					
ANR	1169107	ExpressionStatement	prefix_ok = 1	430:5:12287:12300	1168985	0	True				
ANR	1169108	AssignmentExpression	prefix_ok = 1		1168985	0		=			
ANR	1169109	Identifier	prefix_ok		1168985	0					
ANR	1169110	PrimaryExpression	1		1168985	1					
ANR	1169111	BreakStatement	break ;	431:5:12307:12312	1168985	1	True				
ANR	1169112	ElseStatement	else		1168985	0					
ANR	1169113	CompoundStatement		43:11:1037:1037	1168985	0					
ANR	1169114	ReturnStatement	return - 1 ;	433:5:12332:12341	1168985	0	True				
ANR	1169115	UnaryOperationExpression	- 1		1168985	0					
ANR	1169116	UnaryOperator	-		1168985	0					
ANR	1169117	PrimaryExpression	1		1168985	1					
ANR	1169118	Label	case 's' :	436:3:12353:12361	1168985	14	True				
ANR	1169119	Label	case 'y' :	437:3:12366:12374	1168985	15	True				
ANR	1169120	Label	case 'Y' :	438:3:12379:12387	1168985	16	True				
ANR	1169121	IfStatement	if ( prefix_insn != NO_CRIS_PREFIX )		1168985	17					
ANR	1169122	Condition	prefix_insn != NO_CRIS_PREFIX	441:8:12501:12529	1168985	0	True				
ANR	1169123	EqualityExpression	prefix_insn != NO_CRIS_PREFIX		1168985	0		!=			
ANR	1169124	Identifier	prefix_insn		1168985	0					
ANR	1169125	Identifier	NO_CRIS_PREFIX		1168985	1					
ANR	1169126	CompoundStatement		52:39:1244:1244	1168985	1					
ANR	1169127	IfStatement	if ( insn & 0x400 )		1168985	0					
ANR	1169128	Condition	insn & 0x400	442:9:12543:12554	1168985	0	True				
ANR	1169129	BitAndExpression	insn & 0x400		1168985	0		&			
ANR	1169130	Identifier	insn		1168985	0					
ANR	1169131	PrimaryExpression	0x400		1168985	1					
ANR	1169132	CompoundStatement		54:6:1277:1375	1168985	1					
ANR	1169133	IdentifierDeclStatement	"const struct cris_opcode * prefix_opcodep = get_opcode_entry ( prefix_insn , NO_CRIS_PREFIX , disdata ) ;"	443:6:12565:12663	1168985	0	True				
ANR	1169134	IdentifierDecl	"* prefix_opcodep = get_opcode_entry ( prefix_insn , NO_CRIS_PREFIX , disdata )"		1168985	0					
ANR	1169135	IdentifierDeclType	const struct cris_opcode *		1168985	0					
ANR	1169136	Identifier	prefix_opcodep		1168985	1					
ANR	1169137	AssignmentExpression	"* prefix_opcodep = get_opcode_entry ( prefix_insn , NO_CRIS_PREFIX , disdata )"		1168985	2		=			
ANR	1169138	Identifier	prefix_opcodep		1168985	0					
ANR	1169139	CallExpression	"get_opcode_entry ( prefix_insn , NO_CRIS_PREFIX , disdata )"		1168985	1					
ANR	1169140	Callee	get_opcode_entry		1168985	0					
ANR	1169141	Identifier	get_opcode_entry		1168985	0					
ANR	1169142	ArgumentList	prefix_insn		1168985	1					
ANR	1169143	Argument	prefix_insn		1168985	0					
ANR	1169144	Identifier	prefix_insn		1168985	0					
ANR	1169145	Argument	NO_CRIS_PREFIX		1168985	1					
ANR	1169146	Identifier	NO_CRIS_PREFIX		1168985	0					
ANR	1169147	Argument	disdata		1168985	2					
ANR	1169148	Identifier	disdata		1168985	0					
ANR	1169149	IfStatement	if ( prefix_opcodep -> match == DIP_OPCODE )		1168985	1					
ANR	1169150	Condition	prefix_opcodep -> match == DIP_OPCODE	445:10:12676:12710	1168985	0	True				
ANR	1169151	EqualityExpression	prefix_opcodep -> match == DIP_OPCODE		1168985	0		==			
ANR	1169152	PtrMemberAccess	prefix_opcodep -> match		1168985	0					
ANR	1169153	Identifier	prefix_opcodep		1168985	0					
ANR	1169154	Identifier	match		1168985	1					
ANR	1169155	Identifier	DIP_OPCODE		1168985	1					
ANR	1169156	CompoundStatement		56:47:1425:1425	1168985	1					
ANR	1169157	ReturnStatement	return - 1 ;	446:7:12722:12731	1168985	0	True				
ANR	1169158	UnaryOperationExpression	- 1		1168985	0					
ANR	1169159	UnaryOperator	-		1168985	0					
ANR	1169160	PrimaryExpression	1		1168985	1					
ANR	1169161	ExpressionStatement	prefix_ok = 1	450:5:12754:12767	1168985	1	True				
ANR	1169162	AssignmentExpression	prefix_ok = 1		1168985	0		=			
ANR	1169163	Identifier	prefix_ok		1168985	0					
ANR	1169164	PrimaryExpression	1		1168985	1					
ANR	1169165	BreakStatement	break ;	452:4:12779:12784	1168985	18	True				
ANR	1169166	Label	case 'B' :	454:3:12790:12798	1168985	19	True				
ANR	1169167	ExpressionStatement	prefix_ok = 1	456:4:12864:12877	1168985	20	True				
ANR	1169168	AssignmentExpression	prefix_ok = 1		1168985	0		=			
ANR	1169169	Identifier	prefix_ok		1168985	0					
ANR	1169170	PrimaryExpression	1		1168985	1					
ANR	1169171	IfStatement	if ( prefix_insn != NO_CRIS_PREFIX )		1168985	21					
ANR	1169172	Condition	prefix_insn != NO_CRIS_PREFIX	460:8:12995:13023	1168985	0	True				
ANR	1169173	EqualityExpression	prefix_insn != NO_CRIS_PREFIX		1168985	0		!=			
ANR	1169174	Identifier	prefix_insn		1168985	0					
ANR	1169175	Identifier	NO_CRIS_PREFIX		1168985	1					
ANR	1169176	CompoundStatement		73:5:1789:1887	1168985	1					
ANR	1169177	IdentifierDeclStatement	"const struct cris_opcode * prefix_opcodep = get_opcode_entry ( prefix_insn , NO_CRIS_PREFIX , disdata ) ;"	462:5:13077:13175	1168985	0	True				
ANR	1169178	IdentifierDecl	"* prefix_opcodep = get_opcode_entry ( prefix_insn , NO_CRIS_PREFIX , disdata )"		1168985	0					
ANR	1169179	IdentifierDeclType	const struct cris_opcode *		1168985	0					
ANR	1169180	Identifier	prefix_opcodep		1168985	1					
ANR	1169181	AssignmentExpression	"* prefix_opcodep = get_opcode_entry ( prefix_insn , NO_CRIS_PREFIX , disdata )"		1168985	2		=			
ANR	1169182	Identifier	prefix_opcodep		1168985	0					
ANR	1169183	CallExpression	"get_opcode_entry ( prefix_insn , NO_CRIS_PREFIX , disdata )"		1168985	1					
ANR	1169184	Callee	get_opcode_entry		1168985	0					
ANR	1169185	Identifier	get_opcode_entry		1168985	0					
ANR	1169186	ArgumentList	prefix_insn		1168985	1					
ANR	1169187	Argument	prefix_insn		1168985	0					
ANR	1169188	Identifier	prefix_insn		1168985	0					
ANR	1169189	Argument	NO_CRIS_PREFIX		1168985	1					
ANR	1169190	Identifier	NO_CRIS_PREFIX		1168985	0					
ANR	1169191	Argument	disdata		1168985	2					
ANR	1169192	Identifier	disdata		1168985	0					
ANR	1169193	IfStatement	if ( prefix_opcodep -> match == BDAP_QUICK_OPCODE )		1168985	1					
ANR	1169194	Condition	prefix_opcodep -> match == BDAP_QUICK_OPCODE	464:9:13187:13228	1168985	0	True				
ANR	1169195	EqualityExpression	prefix_opcodep -> match == BDAP_QUICK_OPCODE		1168985	0		==			
ANR	1169196	PtrMemberAccess	prefix_opcodep -> match		1168985	0					
ANR	1169197	Identifier	prefix_opcodep		1168985	0					
ANR	1169198	Identifier	match		1168985	1					
ANR	1169199	Identifier	BDAP_QUICK_OPCODE		1168985	1					
ANR	1169200	CompoundStatement		76:6:1951:1985	1168985	1					
ANR	1169201	IdentifierDeclStatement	int pushsize = ( prefix_insn & 255 ) ;	465:6:13239:13273	1168985	0	True				
ANR	1169202	IdentifierDecl	pushsize = ( prefix_insn & 255 )		1168985	0					
ANR	1169203	IdentifierDeclType	int		1168985	0					
ANR	1169204	Identifier	pushsize		1168985	1					
ANR	1169205	AssignmentExpression	pushsize = ( prefix_insn & 255 )		1168985	2		=			
ANR	1169206	Identifier	pushsize		1168985	0					
ANR	1169207	BitAndExpression	prefix_insn & 255		1168985	1		&			
ANR	1169208	Identifier	prefix_insn		1168985	0					
ANR	1169209	PrimaryExpression	255		1168985	1					
ANR	1169210	IfStatement	if ( pushsize > 127 )		1168985	1					
ANR	1169211	Condition	pushsize > 127	467:10:13286:13299	1168985	0	True				
ANR	1169212	RelationalExpression	pushsize > 127		1168985	0		>			
ANR	1169213	Identifier	pushsize		1168985	0					
ANR	1169214	PrimaryExpression	127		1168985	1					
ANR	1169215	CompoundStatement		78:26:2014:2014	1168985	1					
ANR	1169216	ExpressionStatement	pushsize -= 256	468:7:13311:13326	1168985	0	True				
ANR	1169217	AssignmentExpression	pushsize -= 256		1168985	0		-=			
ANR	1169218	Identifier	pushsize		1168985	0					
ANR	1169219	PrimaryExpression	256		1168985	1					
ANR	1169220	IfStatement	if ( s [ 1 ] == 'P' )		1168985	2					
ANR	1169221	Condition	s [ 1 ] == 'P'	471:10:13347:13357	1168985	0	True				
ANR	1169222	EqualityExpression	s [ 1 ] == 'P'		1168985	0		==			
ANR	1169223	ArrayIndexing	s [ 1 ]		1168985	0					
ANR	1169224	Identifier	s		1168985	0					
ANR	1169225	PrimaryExpression	1		1168985	1					
ANR	1169226	PrimaryExpression	'P'		1168985	1					
ANR	1169227	CompoundStatement		84:7:2131:2209	1168985	1					
ANR	1169228	IdentifierDeclStatement	unsigned int spec_reg = ( insn >> 12 ) & 15 ;	472:7:13369:13410	1168985	0	True				
ANR	1169229	IdentifierDecl	spec_reg = ( insn >> 12 ) & 15		1168985	0					
ANR	1169230	IdentifierDeclType	unsigned int		1168985	0					
ANR	1169231	Identifier	spec_reg		1168985	1					
ANR	1169232	AssignmentExpression	spec_reg = ( insn >> 12 ) & 15		1168985	2		=			
ANR	1169233	Identifier	spec_reg		1168985	0					
ANR	1169234	BitAndExpression	( insn >> 12 ) & 15		1168985	1		&			
ANR	1169235	ShiftExpression	insn >> 12		1168985	0		>>			
ANR	1169236	Identifier	insn		1168985	0					
ANR	1169237	PrimaryExpression	12		1168985	1					
ANR	1169238	PrimaryExpression	15		1168985	1					
ANR	1169239	IdentifierDeclStatement	"const struct cris_spec_reg * sregp = spec_reg_info ( spec_reg , disdata -> distype ) ;"	473:7:13419:13497	1168985	1	True				
ANR	1169240	IdentifierDecl	"* sregp = spec_reg_info ( spec_reg , disdata -> distype )"		1168985	0					
ANR	1169241	IdentifierDeclType	const struct cris_spec_reg *		1168985	0					
ANR	1169242	Identifier	sregp		1168985	1					
ANR	1169243	AssignmentExpression	"* sregp = spec_reg_info ( spec_reg , disdata -> distype )"		1168985	2		=			
ANR	1169244	Identifier	sregp		1168985	0					
ANR	1169245	CallExpression	"spec_reg_info ( spec_reg , disdata -> distype )"		1168985	1					
ANR	1169246	Callee	spec_reg_info		1168985	0					
ANR	1169247	Identifier	spec_reg_info		1168985	0					
ANR	1169248	ArgumentList	spec_reg		1168985	1					
ANR	1169249	Argument	spec_reg		1168985	0					
ANR	1169250	Identifier	spec_reg		1168985	0					
ANR	1169251	Argument	disdata -> distype		1168985	1					
ANR	1169252	PtrMemberAccess	disdata -> distype		1168985	0					
ANR	1169253	Identifier	disdata		1168985	0					
ANR	1169254	Identifier	distype		1168985	1					
ANR	1169255	IfStatement	if ( sregp && sregp -> reg_size == ( unsigned int ) - pushsize )		1168985	2					
ANR	1169256	Condition	sregp && sregp -> reg_size == ( unsigned int ) - pushsize	477:11:13613:13663	1168985	0	True				
ANR	1169257	AndExpression	sregp && sregp -> reg_size == ( unsigned int ) - pushsize		1168985	0		&&			
ANR	1169258	Identifier	sregp		1168985	0					
ANR	1169259	EqualityExpression	sregp -> reg_size == ( unsigned int ) - pushsize		1168985	1		==			
ANR	1169260	PtrMemberAccess	sregp -> reg_size		1168985	0					
ANR	1169261	Identifier	sregp		1168985	0					
ANR	1169262	Identifier	reg_size		1168985	1					
ANR	1169263	CastExpression	( unsigned int ) - pushsize		1168985	1					
ANR	1169264	CastTarget	unsigned int		1168985	0					
ANR	1169265	UnaryOperationExpression	- pushsize		1168985	1					
ANR	1169266	UnaryOperator	-		1168985	0					
ANR	1169267	Identifier	pushsize		1168985	1					
ANR	1169268	CompoundStatement		88:64:2378:2378	1168985	1					
ANR	1169269	BreakStatement	break ;	478:8:13676:13681	1168985	0	True				
ANR	1169270	ElseStatement	else		1168985	0					
ANR	1169271	IfStatement	if ( s [ 1 ] == 'R' )		1168985	0					
ANR	1169272	Condition	s [ 1 ] == 'R'	480:17:13709:13719	1168985	0	True				
ANR	1169273	EqualityExpression	s [ 1 ] == 'R'		1168985	0		==			
ANR	1169274	ArrayIndexing	s [ 1 ]		1168985	0					
ANR	1169275	Identifier	s		1168985	0					
ANR	1169276	PrimaryExpression	1		1168985	1					
ANR	1169277	PrimaryExpression	'R'		1168985	1					
ANR	1169278	CompoundStatement		91:30:2434:2434	1168985	1					
ANR	1169279	IfStatement	if ( ( insn & 0x30 ) == 0x20 && pushsize == - 4 )		1168985	0					
ANR	1169280	Condition	( insn & 0x30 ) == 0x20 && pushsize == - 4	481:11:13735:13773	1168985	0	True				
ANR	1169281	AndExpression	( insn & 0x30 ) == 0x20 && pushsize == - 4		1168985	0		&&			
ANR	1169282	EqualityExpression	( insn & 0x30 ) == 0x20		1168985	0		==			
ANR	1169283	BitAndExpression	insn & 0x30		1168985	0		&			
ANR	1169284	Identifier	insn		1168985	0					
ANR	1169285	PrimaryExpression	0x30		1168985	1					
ANR	1169286	PrimaryExpression	0x20		1168985	1					
ANR	1169287	EqualityExpression	pushsize == - 4		1168985	1		==			
ANR	1169288	Identifier	pushsize		1168985	0					
ANR	1169289	UnaryOperationExpression	- 4		1168985	1					
ANR	1169290	UnaryOperator	-		1168985	0					
ANR	1169291	PrimaryExpression	4		1168985	1					
ANR	1169292	CompoundStatement		92:52:2488:2488	1168985	1					
ANR	1169293	BreakStatement	break ;	482:8:13786:13791	1168985	0	True				
ANR	1169294	ReturnStatement	return - 1 ;	489:4:13917:13926	1168985	22	True				
ANR	1169295	UnaryOperationExpression	- 1		1168985	0					
ANR	1169296	UnaryOperator	-		1168985	0					
ANR	1169297	PrimaryExpression	1		1168985	1					
ANR	1169298	Label	case 'D' :	491:3:13932:13940	1168985	23	True				
ANR	1169299	ExpressionStatement	retval = ( ( ( insn >> 12 ) & 15 ) == ( insn & 15 ) )	492:4:13946:13991	1168985	24	True				
ANR	1169300	AssignmentExpression	retval = ( ( ( insn >> 12 ) & 15 ) == ( insn & 15 ) )		1168985	0		=			
ANR	1169301	Identifier	retval		1168985	0					
ANR	1169302	EqualityExpression	( ( insn >> 12 ) & 15 ) == ( insn & 15 )		1168985	1		==			
ANR	1169303	BitAndExpression	( insn >> 12 ) & 15		1168985	0		&			
ANR	1169304	ShiftExpression	insn >> 12		1168985	0		>>			
ANR	1169305	Identifier	insn		1168985	0					
ANR	1169306	PrimaryExpression	12		1168985	1					
ANR	1169307	PrimaryExpression	15		1168985	1					
ANR	1169308	BitAndExpression	insn & 15		1168985	1		&			
ANR	1169309	Identifier	insn		1168985	0					
ANR	1169310	PrimaryExpression	15		1168985	1					
ANR	1169311	IfStatement	if ( ! retval )		1168985	25					
ANR	1169312	Condition	! retval	493:8:14001:14007	1168985	0	True				
ANR	1169313	UnaryOperationExpression	! retval		1168985	0					
ANR	1169314	UnaryOperator	!		1168985	0					
ANR	1169315	Identifier	retval		1168985	1					
ANR	1169316	CompoundStatement		104:17:2722:2722	1168985	1					
ANR	1169317	ReturnStatement	return - 1 ;	494:5:14017:14026	1168985	0	True				
ANR	1169318	UnaryOperationExpression	- 1		1168985	0					
ANR	1169319	UnaryOperator	-		1168985	0					
ANR	1169320	PrimaryExpression	1		1168985	1					
ANR	1169321	ElseStatement	else		1168985	0					
ANR	1169322	CompoundStatement		106:11:2751:2751	1168985	0					
ANR	1169323	ExpressionStatement	retval += 4	496:5:14046:14057	1168985	0	True				
ANR	1169324	AssignmentExpression	retval += 4		1168985	0		+=			
ANR	1169325	Identifier	retval		1168985	0					
ANR	1169326	PrimaryExpression	4		1168985	1					
ANR	1169327	BreakStatement	break ;	498:4:14069:14074	1168985	26	True				
ANR	1169328	Label	case 'P' :	500:3:14080:14088	1168985	27	True				
ANR	1169329	CompoundStatement		112:4:2808:2895	1168985	28					
ANR	1169330	IdentifierDeclStatement	"const struct cris_spec_reg * sregp = spec_reg_info ( ( insn >> 12 ) & 15 , disdata -> distype ) ;"	501:4:14096:14183	1168985	0	True				
ANR	1169331	IdentifierDecl	"* sregp = spec_reg_info ( ( insn >> 12 ) & 15 , disdata -> distype )"		1168985	0					
ANR	1169332	IdentifierDeclType	const struct cris_spec_reg *		1168985	0					
ANR	1169333	Identifier	sregp		1168985	1					
ANR	1169334	AssignmentExpression	"* sregp = spec_reg_info ( ( insn >> 12 ) & 15 , disdata -> distype )"		1168985	2		=			
ANR	1169335	Identifier	sregp		1168985	0					
ANR	1169336	CallExpression	"spec_reg_info ( ( insn >> 12 ) & 15 , disdata -> distype )"		1168985	1					
ANR	1169337	Callee	spec_reg_info		1168985	0					
ANR	1169338	Identifier	spec_reg_info		1168985	0					
ANR	1169339	ArgumentList	( insn >> 12 ) & 15		1168985	1					
ANR	1169340	Argument	( insn >> 12 ) & 15		1168985	0					
ANR	1169341	BitAndExpression	( insn >> 12 ) & 15		1168985	0		&			
ANR	1169342	ShiftExpression	insn >> 12		1168985	0		>>			
ANR	1169343	Identifier	insn		1168985	0					
ANR	1169344	PrimaryExpression	12		1168985	1					
ANR	1169345	PrimaryExpression	15		1168985	1					
ANR	1169346	Argument	disdata -> distype		1168985	1					
ANR	1169347	PtrMemberAccess	disdata -> distype		1168985	0					
ANR	1169348	Identifier	disdata		1168985	0					
ANR	1169349	Identifier	distype		1168985	1					
ANR	1169350	IfStatement	if ( sregp != NULL )		1168985	1					
ANR	1169351	Condition	sregp != NULL	515:8:14799:14811	1168985	0	True				
ANR	1169352	EqualityExpression	sregp != NULL		1168985	0		!=			
ANR	1169353	Identifier	sregp		1168985	0					
ANR	1169354	Identifier	NULL		1168985	1					
ANR	1169355	CompoundStatement		126:23:3526:3526	1168985	1					
ANR	1169356	ExpressionStatement	retval += 3	516:5:14821:14832	1168985	0	True				
ANR	1169357	AssignmentExpression	retval += 3		1168985	0		+=			
ANR	1169358	Identifier	retval		1168985	0					
ANR	1169359	PrimaryExpression	3		1168985	1					
ANR	1169360	BreakStatement	break ;	517:5:14839:14844	1168985	1	True				
ANR	1169361	ElseStatement	else		1168985	0					
ANR	1169362	CompoundStatement		129:11:3569:3569	1168985	0					
ANR	1169363	ReturnStatement	return - 1 ;	519:5:14864:14873	1168985	0	True				
ANR	1169364	UnaryOperationExpression	- 1		1168985	0					
ANR	1169365	UnaryOperator	-		1168985	0					
ANR	1169366	PrimaryExpression	1		1168985	1					
ANR	1169367	IfStatement	if ( prefix_insn != NO_CRIS_PREFIX && ! prefix_ok )		1168985	5					
ANR	1169368	Condition	prefix_insn != NO_CRIS_PREFIX && ! prefix_ok	525:6:14902:14944	1168985	0	True				
ANR	1169369	AndExpression	prefix_insn != NO_CRIS_PREFIX && ! prefix_ok		1168985	0		&&			
ANR	1169370	EqualityExpression	prefix_insn != NO_CRIS_PREFIX		1168985	0		!=			
ANR	1169371	Identifier	prefix_insn		1168985	0					
ANR	1169372	Identifier	NO_CRIS_PREFIX		1168985	1					
ANR	1169373	UnaryOperationExpression	! prefix_ok		1168985	1					
ANR	1169374	UnaryOperator	!		1168985	0					
ANR	1169375	Identifier	prefix_ok		1168985	1					
ANR	1169376	CompoundStatement		136:51:3659:3659	1168985	1					
ANR	1169377	ReturnStatement	return - 1 ;	526:3:14952:14961	1168985	0	True				
ANR	1169378	UnaryOperationExpression	- 1		1168985	0					
ANR	1169379	UnaryOperator	-		1168985	0					
ANR	1169380	PrimaryExpression	1		1168985	1					
ANR	1169381	ReturnStatement	return retval ;	529:2:14970:14983	1168985	6	True				
ANR	1169382	Identifier	retval		1168985	0					
ANR	1169383	ReturnType	static int		1168985	1					
ANR	1169384	Identifier	cris_constraint		1168985	2					
ANR	1169385	ParameterList	"const char * cs , unsigned int insn , unsigned int prefix_insn , struct cris_disasm_data * disdata"		1168985	3					
ANR	1169386	Parameter	const char * cs	386:17:11183:11196	1168985	0	True				
ANR	1169387	ParameterType	const char *		1168985	0					
ANR	1169388	Identifier	cs		1168985	1					
ANR	1169389	Parameter	unsigned int insn	387:3:11202:11218	1168985	1	True				
ANR	1169390	ParameterType	unsigned int		1168985	0					
ANR	1169391	Identifier	insn		1168985	1					
ANR	1169392	Parameter	unsigned int prefix_insn	388:3:11224:11247	1168985	2	True				
ANR	1169393	ParameterType	unsigned int		1168985	0					
ANR	1169394	Identifier	prefix_insn		1168985	1					
ANR	1169395	Parameter	struct cris_disasm_data * disdata	389:3:11253:11284	1168985	3	True				
ANR	1169396	ParameterType	struct cris_disasm_data *		1168985	0					
ANR	1169397	Identifier	disdata		1168985	1					
ANR	1169398	CFGEntryNode	ENTRY		1168985		True				
ANR	1169399	CFGExitNode	EXIT		1168985		True				
ANR	1169400	Symbol	prefix_opcodep -> match		1168985						
ANR	1169401	Symbol	prefix_opcodep		1168985						
ANR	1169402	Symbol	sregp		1168985						
ANR	1169403	Symbol	cris_dis_v0_v10		1168985						
ANR	1169404	Symbol	spec_reg		1168985						
ANR	1169405	Symbol	DIP_OPCODE		1168985						
ANR	1169406	Symbol	tmp		1168985						
ANR	1169407	Symbol	NO_CRIS_PREFIX		1168985						
ANR	1169408	Symbol	prefix_insn		1168985						
ANR	1169409	Symbol	spec_reg_info		1168985						
ANR	1169410	Symbol	NULL		1168985						
ANR	1169411	Symbol	* prefix_opcodep		1168985						
ANR	1169412	Symbol	BDAP_QUICK_OPCODE		1168985						
ANR	1169413	Symbol	disdata		1168985						
ANR	1169414	Symbol	retval		1168985						
ANR	1169415	Symbol	cs		1168985						
ANR	1169416	Symbol	prefix_ok		1168985						
ANR	1169417	Symbol	insn		1168985						
ANR	1169418	Symbol	pushsize		1168985						
ANR	1169419	Symbol	s		1168985						
ANR	1169420	Symbol	* sregp		1168985						
ANR	1169421	Symbol	get_opcode_entry		1168985						
ANR	1169422	Symbol	disdata -> distype		1168985						
ANR	1169423	Symbol	sregp -> reg_size		1168985						
ANR	1169424	Symbol	* s		1168985						
ANR	1169425	Symbol	* disdata		1168985						
ANR	1169426	Function	format_hex	534:0:15053:15426							
ANR	1169427	FunctionDef	"format_hex (unsigned long number , char * outbuffer , struct cris_disasm_data * disdata)"		1169426	0					
ANR	1169428	CompoundStatement		538:0:15162:15426	1169426	0					
ANR	1169429	ExpressionStatement	number &= 0xffffffff	540:2:15219:15239	1169426	0	True				
ANR	1169430	AssignmentExpression	number &= 0xffffffff		1169426	0		&=			
ANR	1169431	Identifier	number		1169426	0					
ANR	1169432	PrimaryExpression	0xffffffff		1169426	1					
ANR	1169433	ExpressionStatement	"sprintf ( outbuffer , ""0x%lx"" , number )"	542:2:15244:15280	1169426	1	True				
ANR	1169434	CallExpression	"sprintf ( outbuffer , ""0x%lx"" , number )"		1169426	0					
ANR	1169435	Callee	sprintf		1169426	0					
ANR	1169436	Identifier	sprintf		1169426	0					
ANR	1169437	ArgumentList	outbuffer		1169426	1					
ANR	1169438	Argument	outbuffer		1169426	0					
ANR	1169439	Identifier	outbuffer		1169426	0					
ANR	1169440	Argument	"""0x%lx"""		1169426	1					
ANR	1169441	PrimaryExpression	"""0x%lx"""		1169426	0					
ANR	1169442	Argument	number		1169426	2					
ANR	1169443	Identifier	number		1169426	0					
ANR	1169444	IfStatement	if ( TRACE_CASE )		1169426	2					
ANR	1169445	Condition	TRACE_CASE	545:6:15338:15347	1169426	0	True				
ANR	1169446	Identifier	TRACE_CASE		1169426	0					
ANR	1169447	CompoundStatement		8:18:187:187	1169426	1					
ANR	1169448	ExpressionStatement	last_immediate = number	546:3:15355:15378	1169426	0	True				
ANR	1169449	AssignmentExpression	last_immediate = number		1169426	0		=			
ANR	1169450	Identifier	last_immediate		1169426	0					
ANR	1169451	Identifier	number		1169426	1					
ANR	1169452	ReturnStatement	return outbuffer + strlen ( outbuffer ) ;	549:2:15387:15424	1169426	3	True				
ANR	1169453	AdditiveExpression	outbuffer + strlen ( outbuffer )		1169426	0		+			
ANR	1169454	Identifier	outbuffer		1169426	0					
ANR	1169455	CallExpression	strlen ( outbuffer )		1169426	1					
ANR	1169456	Callee	strlen		1169426	0					
ANR	1169457	Identifier	strlen		1169426	0					
ANR	1169458	ArgumentList	outbuffer		1169426	1					
ANR	1169459	Argument	outbuffer		1169426	0					
ANR	1169460	Identifier	outbuffer		1169426	0					
ANR	1169461	ReturnType	static char *		1169426	1					
ANR	1169462	Identifier	format_hex		1169426	2					
ANR	1169463	ParameterList	"unsigned long number , char * outbuffer , struct cris_disasm_data * disdata"		1169426	3					
ANR	1169464	Parameter	unsigned long number	535:12:15079:15098	1169426	0	True				
ANR	1169465	ParameterType	unsigned long		1169426	0					
ANR	1169466	Identifier	number		1169426	1					
ANR	1169467	Parameter	char * outbuffer	536:5:15106:15120	1169426	1	True				
ANR	1169468	ParameterType	char *		1169426	0					
ANR	1169469	Identifier	outbuffer		1169426	1					
ANR	1169470	Parameter	struct cris_disasm_data * disdata	537:5:15128:15159	1169426	2	True				
ANR	1169471	ParameterType	struct cris_disasm_data *		1169426	0					
ANR	1169472	Identifier	disdata		1169426	1					
ANR	1169473	CFGEntryNode	ENTRY		1169426		True				
ANR	1169474	CFGExitNode	EXIT		1169426		True				
ANR	1169475	Symbol	number		1169426						
ANR	1169476	Symbol	TRACE_CASE		1169426						
ANR	1169477	Symbol	strlen		1169426						
ANR	1169478	Symbol	last_immediate		1169426						
ANR	1169479	Symbol	disdata		1169426						
ANR	1169480	Symbol	outbuffer		1169426						
ANR	1169481	Function	format_dec	556:0:15584:15780							
ANR	1169482	FunctionDef	"format_dec (long number , char * outbuffer , int signedp)"		1169481	0					
ANR	1169483	CompoundStatement		558:0:15653:15780	1169481	0					
ANR	1169484	ExpressionStatement	last_immediate = number	559:2:15657:15680	1169481	0	True				
ANR	1169485	AssignmentExpression	last_immediate = number		1169481	0		=			
ANR	1169486	Identifier	last_immediate		1169481	0					
ANR	1169487	Identifier	number		1169481	1					
ANR	1169488	ExpressionStatement	"sprintf ( outbuffer , signedp ? ""%ld"" : ""%lu"" , number )"	560:2:15684:15736	1169481	1	True				
ANR	1169489	CallExpression	"sprintf ( outbuffer , signedp ? ""%ld"" : ""%lu"" , number )"		1169481	0					
ANR	1169490	Callee	sprintf		1169481	0					
ANR	1169491	Identifier	sprintf		1169481	0					
ANR	1169492	ArgumentList	outbuffer		1169481	1					
ANR	1169493	Argument	outbuffer		1169481	0					
ANR	1169494	Identifier	outbuffer		1169481	0					
ANR	1169495	Argument	"signedp ? ""%ld"" : ""%lu"""		1169481	1					
ANR	1169496	ConditionalExpression	"signedp ? ""%ld"" : ""%lu"""		1169481	0					
ANR	1169497	Condition	signedp		1169481	0					
ANR	1169498	Identifier	signedp		1169481	0					
ANR	1169499	PrimaryExpression	"""%ld"""		1169481	1					
ANR	1169500	PrimaryExpression	"""%lu"""		1169481	2					
ANR	1169501	Argument	number		1169481	2					
ANR	1169502	Identifier	number		1169481	0					
ANR	1169503	ReturnStatement	return outbuffer + strlen ( outbuffer ) ;	562:2:15741:15778	1169481	2	True				
ANR	1169504	AdditiveExpression	outbuffer + strlen ( outbuffer )		1169481	0		+			
ANR	1169505	Identifier	outbuffer		1169481	0					
ANR	1169506	CallExpression	strlen ( outbuffer )		1169481	1					
ANR	1169507	Callee	strlen		1169481	0					
ANR	1169508	Identifier	strlen		1169481	0					
ANR	1169509	ArgumentList	outbuffer		1169481	1					
ANR	1169510	Argument	outbuffer		1169481	0					
ANR	1169511	Identifier	outbuffer		1169481	0					
ANR	1169512	ReturnType	static char *		1169481	1					
ANR	1169513	Identifier	format_dec		1169481	2					
ANR	1169514	ParameterList	"long number , char * outbuffer , int signedp"		1169481	3					
ANR	1169515	Parameter	long number	557:12:15610:15620	1169481	0	True				
ANR	1169516	ParameterType	long		1169481	0					
ANR	1169517	Identifier	number		1169481	1					
ANR	1169518	Parameter	char * outbuffer	557:25:15623:15637	1169481	1	True				
ANR	1169519	ParameterType	char *		1169481	0					
ANR	1169520	Identifier	outbuffer		1169481	1					
ANR	1169521	Parameter	int signedp	557:42:15640:15650	1169481	2	True				
ANR	1169522	ParameterType	int		1169481	0					
ANR	1169523	Identifier	signedp		1169481	1					
ANR	1169524	CFGEntryNode	ENTRY		1169481		True				
ANR	1169525	CFGExitNode	EXIT		1169481		True				
ANR	1169526	Symbol	number		1169481						
ANR	1169527	Symbol	strlen		1169481						
ANR	1169528	Symbol	last_immediate		1169481						
ANR	1169529	Symbol	outbuffer		1169481						
ANR	1169530	Symbol	signedp		1169481						
ANR	1169531	Function	format_reg	567:0:15853:16538							
ANR	1169532	FunctionDef	"format_reg (struct cris_disasm_data * disdata , int regno , char * outbuffer_start , bfd_boolean with_reg_prefix)"		1169531	0					
ANR	1169533	CompoundStatement		572:0:15991:16538	1169531	0					
ANR	1169534	IdentifierDeclStatement	char * outbuffer = outbuffer_start ;	573:2:15995:16028	1169531	0	True				
ANR	1169535	IdentifierDecl	* outbuffer = outbuffer_start		1169531	0					
ANR	1169536	IdentifierDeclType	char *		1169531	0					
ANR	1169537	Identifier	outbuffer		1169531	1					
ANR	1169538	AssignmentExpression	* outbuffer = outbuffer_start		1169531	2		=			
ANR	1169539	Identifier	outbuffer_start		1169531	0					
ANR	1169540	Identifier	outbuffer_start		1169531	1					
ANR	1169541	IfStatement	if ( with_reg_prefix )		1169531	1					
ANR	1169542	Condition	with_reg_prefix	575:6:16037:16051	1169531	0	True				
ANR	1169543	Identifier	with_reg_prefix		1169531	0					
ANR	1169544	CompoundStatement		4:23:62:62	1169531	1					
ANR	1169545	ExpressionStatement	* outbuffer ++ = REGISTER_PREFIX_CHAR	576:3:16059:16094	1169531	0	True				
ANR	1169546	AssignmentExpression	* outbuffer ++ = REGISTER_PREFIX_CHAR		1169531	0		=			
ANR	1169547	UnaryOperationExpression	* outbuffer ++		1169531	0					
ANR	1169548	UnaryOperator	*		1169531	0					
ANR	1169549	PostIncDecOperationExpression	outbuffer ++		1169531	1					
ANR	1169550	Identifier	outbuffer		1169531	0					
ANR	1169551	IncDec	++		1169531	1					
ANR	1169552	Identifier	REGISTER_PREFIX_CHAR		1169531	1					
ANR	1169553	SwitchStatement	switch ( regno )		1169531	2					
ANR	1169554	Condition	regno	579:10:16111:16115	1169531	0	True				
ANR	1169555	Identifier	regno		1169531	0					
ANR	1169556	CompoundStatement		9:4:130:130	1169531	1					
ANR	1169557	Label	case 15 :	581:4:16128:16135	1169531	0	True				
ANR	1169558	IfStatement	if ( disdata -> distype == cris_dis_v32 )		1169531	1					
ANR	1169559	Condition	disdata -> distype == cris_dis_v32	583:10:16212:16243	1169531	0	True				
ANR	1169560	EqualityExpression	disdata -> distype == cris_dis_v32		1169531	0		==			
ANR	1169561	PtrMemberAccess	disdata -> distype		1169531	0					
ANR	1169562	Identifier	disdata		1169531	0					
ANR	1169563	Identifier	distype		1169531	1					
ANR	1169564	Identifier	cris_dis_v32		1169531	1					
ANR	1169565	CompoundStatement		12:44:254:254	1169531	1					
ANR	1169566	ExpressionStatement	"strcpy ( outbuffer , ""acr"" )"	584:7:16255:16280	1169531	0	True				
ANR	1169567	CallExpression	"strcpy ( outbuffer , ""acr"" )"		1169531	0					
ANR	1169568	Callee	strcpy		1169531	0					
ANR	1169569	Identifier	strcpy		1169531	0					
ANR	1169570	ArgumentList	outbuffer		1169531	1					
ANR	1169571	Argument	outbuffer		1169531	0					
ANR	1169572	Identifier	outbuffer		1169531	0					
ANR	1169573	Argument	"""acr"""		1169531	1					
ANR	1169574	PrimaryExpression	"""acr"""		1169531	0					
ANR	1169575	ElseStatement	else		1169531	0					
ANR	1169576	CompoundStatement		14:13:303:303	1169531	0					
ANR	1169577	ExpressionStatement	"strcpy ( outbuffer , ""pc"" )"	586:7:16304:16328	1169531	0	True				
ANR	1169578	CallExpression	"strcpy ( outbuffer , ""pc"" )"		1169531	0					
ANR	1169579	Callee	strcpy		1169531	0					
ANR	1169580	Identifier	strcpy		1169531	0					
ANR	1169581	ArgumentList	outbuffer		1169531	1					
ANR	1169582	Argument	outbuffer		1169531	0					
ANR	1169583	Identifier	outbuffer		1169531	0					
ANR	1169584	Argument	"""pc"""		1169531	1					
ANR	1169585	PrimaryExpression	"""pc"""		1169531	0					
ANR	1169586	BreakStatement	break ;	588:6:16344:16349	1169531	2	True				
ANR	1169587	Label	case 14 :	590:4:16356:16363	1169531	3	True				
ANR	1169588	ExpressionStatement	"strcpy ( outbuffer , ""sp"" )"	591:6:16371:16395	1169531	4	True				
ANR	1169589	CallExpression	"strcpy ( outbuffer , ""sp"" )"		1169531	0					
ANR	1169590	Callee	strcpy		1169531	0					
ANR	1169591	Identifier	strcpy		1169531	0					
ANR	1169592	ArgumentList	outbuffer		1169531	1					
ANR	1169593	Argument	outbuffer		1169531	0					
ANR	1169594	Identifier	outbuffer		1169531	0					
ANR	1169595	Argument	"""sp"""		1169531	1					
ANR	1169596	PrimaryExpression	"""sp"""		1169531	0					
ANR	1169597	BreakStatement	break ;	592:6:16403:16408	1169531	5	True				
ANR	1169598	Label	default :	594:4:16415:16422	1169531	6	True				
ANR	1169599	Identifier	default		1169531	0					
ANR	1169600	ExpressionStatement	"sprintf ( outbuffer , ""r%d"" , regno )"	595:6:16430:16463	1169531	7	True				
ANR	1169601	CallExpression	"sprintf ( outbuffer , ""r%d"" , regno )"		1169531	0					
ANR	1169602	Callee	sprintf		1169531	0					
ANR	1169603	Identifier	sprintf		1169531	0					
ANR	1169604	ArgumentList	outbuffer		1169531	1					
ANR	1169605	Argument	outbuffer		1169531	0					
ANR	1169606	Identifier	outbuffer		1169531	0					
ANR	1169607	Argument	"""r%d"""		1169531	1					
ANR	1169608	PrimaryExpression	"""r%d"""		1169531	0					
ANR	1169609	Argument	regno		1169531	2					
ANR	1169610	Identifier	regno		1169531	0					
ANR	1169611	BreakStatement	break ;	596:6:16471:16476	1169531	8	True				
ANR	1169612	ReturnStatement	return outbuffer_start + strlen ( outbuffer_start ) ;	599:2:16487:16536	1169531	3	True				
ANR	1169613	AdditiveExpression	outbuffer_start + strlen ( outbuffer_start )		1169531	0		+			
ANR	1169614	Identifier	outbuffer_start		1169531	0					
ANR	1169615	CallExpression	strlen ( outbuffer_start )		1169531	1					
ANR	1169616	Callee	strlen		1169531	0					
ANR	1169617	Identifier	strlen		1169531	0					
ANR	1169618	ArgumentList	outbuffer_start		1169531	1					
ANR	1169619	Argument	outbuffer_start		1169531	0					
ANR	1169620	Identifier	outbuffer_start		1169531	0					
ANR	1169621	ReturnType	static char *		1169531	1					
ANR	1169622	Identifier	format_reg		1169531	2					
ANR	1169623	ParameterList	"struct cris_disasm_data * disdata , int regno , char * outbuffer_start , bfd_boolean with_reg_prefix"		1169531	3					
ANR	1169624	Parameter	struct cris_disasm_data * disdata	568:12:15879:15910	1169531	0	True				
ANR	1169625	ParameterType	struct cris_disasm_data *		1169531	0					
ANR	1169626	Identifier	disdata		1169531	1					
ANR	1169627	Parameter	int regno	569:5:15918:15926	1169531	1	True				
ANR	1169628	ParameterType	int		1169531	0					
ANR	1169629	Identifier	regno		1169531	1					
ANR	1169630	Parameter	char * outbuffer_start	570:5:15934:15954	1169531	2	True				
ANR	1169631	ParameterType	char *		1169531	0					
ANR	1169632	Identifier	outbuffer_start		1169531	1					
ANR	1169633	Parameter	bfd_boolean with_reg_prefix	571:5:15962:15988	1169531	3	True				
ANR	1169634	ParameterType	bfd_boolean		1169531	0					
ANR	1169635	Identifier	with_reg_prefix		1169531	1					
ANR	1169636	CFGEntryNode	ENTRY		1169531		True				
ANR	1169637	CFGExitNode	EXIT		1169531		True				
ANR	1169638	Symbol	regno		1169531						
ANR	1169639	Symbol	outbuffer_start		1169531						
ANR	1169640	Symbol	strlen		1169531						
ANR	1169641	Symbol	with_reg_prefix		1169531						
ANR	1169642	Symbol	disdata		1169531						
ANR	1169643	Symbol	* outbuffer ++		1169531						
ANR	1169644	Symbol	outbuffer		1169531						
ANR	1169645	Symbol	cris_dis_v32		1169531						
ANR	1169646	Symbol	disdata -> distype		1169531						
ANR	1169647	Symbol	REGISTER_PREFIX_CHAR		1169531						
ANR	1169648	Symbol	* disdata		1169531						
ANR	1169649	Function	format_sup_reg	604:0:16603:17260							
ANR	1169650	FunctionDef	"format_sup_reg (unsigned int regno , char * outbuffer_start , bfd_boolean with_reg_prefix)"		1169649	0					
ANR	1169651	CompoundStatement		608:0:16709:17260	1169649	0					
ANR	1169652	IdentifierDeclStatement	char * outbuffer = outbuffer_start ;	609:2:16713:16746	1169649	0	True				
ANR	1169653	IdentifierDecl	* outbuffer = outbuffer_start		1169649	0					
ANR	1169654	IdentifierDeclType	char *		1169649	0					
ANR	1169655	Identifier	outbuffer		1169649	1					
ANR	1169656	AssignmentExpression	* outbuffer = outbuffer_start		1169649	2		=			
ANR	1169657	Identifier	outbuffer_start		1169649	0					
ANR	1169658	Identifier	outbuffer_start		1169649	1					
ANR	1169659	IdentifierDeclStatement	int i ;	610:2:16750:16755	1169649	1	True				
ANR	1169660	IdentifierDecl	i		1169649	0					
ANR	1169661	IdentifierDeclType	int		1169649	0					
ANR	1169662	Identifier	i		1169649	1					
ANR	1169663	IfStatement	if ( with_reg_prefix )		1169649	2					
ANR	1169664	Condition	with_reg_prefix	612:6:16764:16778	1169649	0	True				
ANR	1169665	Identifier	with_reg_prefix		1169649	0					
ANR	1169666	CompoundStatement		5:23:71:71	1169649	1					
ANR	1169667	ExpressionStatement	* outbuffer ++ = REGISTER_PREFIX_CHAR	613:3:16786:16821	1169649	0	True				
ANR	1169668	AssignmentExpression	* outbuffer ++ = REGISTER_PREFIX_CHAR		1169649	0		=			
ANR	1169669	UnaryOperationExpression	* outbuffer ++		1169649	0					
ANR	1169670	UnaryOperator	*		1169649	0					
ANR	1169671	PostIncDecOperationExpression	outbuffer ++		1169649	1					
ANR	1169672	Identifier	outbuffer		1169649	0					
ANR	1169673	IncDec	++		1169649	1					
ANR	1169674	Identifier	REGISTER_PREFIX_CHAR		1169649	1					
ANR	1169675	ForStatement	for ( i = 0 ; cris_support_regs [ i ] . name != NULL ; i ++ )		1169649	3					
ANR	1169676	ForInit	i = 0 ;	616:7:16835:16840	1169649	0	True				
ANR	1169677	AssignmentExpression	i = 0		1169649	0		=			
ANR	1169678	Identifier	i		1169649	0					
ANR	1169679	PrimaryExpression	0		1169649	1					
ANR	1169680	Condition	cris_support_regs [ i ] . name != NULL	616:14:16842:16874	1169649	1	True				
ANR	1169681	EqualityExpression	cris_support_regs [ i ] . name != NULL		1169649	0		!=			
ANR	1169682	MemberAccess	cris_support_regs [ i ] . name		1169649	0					
ANR	1169683	ArrayIndexing	cris_support_regs [ i ]		1169649	0					
ANR	1169684	Identifier	cris_support_regs		1169649	0					
ANR	1169685	Identifier	i		1169649	1					
ANR	1169686	Identifier	name		1169649	1					
ANR	1169687	Identifier	NULL		1169649	1					
ANR	1169688	PostIncDecOperationExpression	i ++	616:49:16877:16879	1169649	2	True				
ANR	1169689	Identifier	i		1169649	0					
ANR	1169690	IncDec	++		1169649	1					
ANR	1169691	CompoundStatement		9:54:172:172	1169649	3					
ANR	1169692	IfStatement	if ( cris_support_regs [ i ] . number == regno )		1169649	0					
ANR	1169693	Condition	cris_support_regs [ i ] . number == regno	617:7:16891:16926	1169649	0	True				
ANR	1169694	EqualityExpression	cris_support_regs [ i ] . number == regno		1169649	0		==			
ANR	1169695	MemberAccess	cris_support_regs [ i ] . number		1169649	0					
ANR	1169696	ArrayIndexing	cris_support_regs [ i ]		1169649	0					
ANR	1169697	Identifier	cris_support_regs		1169649	0					
ANR	1169698	Identifier	i		1169649	1					
ANR	1169699	Identifier	number		1169649	1					
ANR	1169700	Identifier	regno		1169649	1					
ANR	1169701	CompoundStatement		10:45:219:219	1169649	1					
ANR	1169702	ExpressionStatement	"sprintf ( outbuffer , ""%s"" , cris_support_regs [ i ] . name )"	618:4:16935:16987	1169649	0	True				
ANR	1169703	CallExpression	"sprintf ( outbuffer , ""%s"" , cris_support_regs [ i ] . name )"		1169649	0					
ANR	1169704	Callee	sprintf		1169649	0					
ANR	1169705	Identifier	sprintf		1169649	0					
ANR	1169706	ArgumentList	outbuffer		1169649	1					
ANR	1169707	Argument	outbuffer		1169649	0					
ANR	1169708	Identifier	outbuffer		1169649	0					
ANR	1169709	Argument	"""%s"""		1169649	1					
ANR	1169710	PrimaryExpression	"""%s"""		1169649	0					
ANR	1169711	Argument	cris_support_regs [ i ] . name		1169649	2					
ANR	1169712	MemberAccess	cris_support_regs [ i ] . name		1169649	0					
ANR	1169713	ArrayIndexing	cris_support_regs [ i ]		1169649	0					
ANR	1169714	Identifier	cris_support_regs		1169649	0					
ANR	1169715	Identifier	i		1169649	1					
ANR	1169716	Identifier	name		1169649	1					
ANR	1169717	ReturnStatement	return outbuffer_start + strlen ( outbuffer_start ) ;	619:4:16993:17042	1169649	1	True				
ANR	1169718	AdditiveExpression	outbuffer_start + strlen ( outbuffer_start )		1169649	0		+			
ANR	1169719	Identifier	outbuffer_start		1169649	0					
ANR	1169720	CallExpression	strlen ( outbuffer_start )		1169649	1					
ANR	1169721	Callee	strlen		1169649	0					
ANR	1169722	Identifier	strlen		1169649	0					
ANR	1169723	ArgumentList	outbuffer_start		1169649	1					
ANR	1169724	Argument	outbuffer_start		1169649	0					
ANR	1169725	Identifier	outbuffer_start		1169649	0					
ANR	1169726	ExpressionStatement	"sprintf ( outbuffer , ""format_sup_reg-BUG"" )"	625:2:17164:17205	1169649	4	True				
ANR	1169727	CallExpression	"sprintf ( outbuffer , ""format_sup_reg-BUG"" )"		1169649	0					
ANR	1169728	Callee	sprintf		1169649	0					
ANR	1169729	Identifier	sprintf		1169649	0					
ANR	1169730	ArgumentList	outbuffer		1169649	1					
ANR	1169731	Argument	outbuffer		1169649	0					
ANR	1169732	Identifier	outbuffer		1169649	0					
ANR	1169733	Argument	"""format_sup_reg-BUG"""		1169649	1					
ANR	1169734	PrimaryExpression	"""format_sup_reg-BUG"""		1169649	0					
ANR	1169735	ReturnStatement	return outbuffer_start + strlen ( outbuffer_start ) ;	626:2:17209:17258	1169649	5	True				
ANR	1169736	AdditiveExpression	outbuffer_start + strlen ( outbuffer_start )		1169649	0		+			
ANR	1169737	Identifier	outbuffer_start		1169649	0					
ANR	1169738	CallExpression	strlen ( outbuffer_start )		1169649	1					
ANR	1169739	Callee	strlen		1169649	0					
ANR	1169740	Identifier	strlen		1169649	0					
ANR	1169741	ArgumentList	outbuffer_start		1169649	1					
ANR	1169742	Argument	outbuffer_start		1169649	0					
ANR	1169743	Identifier	outbuffer_start		1169649	0					
ANR	1169744	ReturnType	static char *		1169649	1					
ANR	1169745	Identifier	format_sup_reg		1169649	2					
ANR	1169746	ParameterList	"unsigned int regno , char * outbuffer_start , bfd_boolean with_reg_prefix"		1169649	3					
ANR	1169747	Parameter	unsigned int regno	605:16:16633:16650	1169649	0	True				
ANR	1169748	ParameterType	unsigned int		1169649	0					
ANR	1169749	Identifier	regno		1169649	1					
ANR	1169750	Parameter	char * outbuffer_start	606:2:16655:16675	1169649	1	True				
ANR	1169751	ParameterType	char *		1169649	0					
ANR	1169752	Identifier	outbuffer_start		1169649	1					
ANR	1169753	Parameter	bfd_boolean with_reg_prefix	607:2:16680:16706	1169649	2	True				
ANR	1169754	ParameterType	bfd_boolean		1169649	0					
ANR	1169755	Identifier	with_reg_prefix		1169649	1					
ANR	1169756	CFGEntryNode	ENTRY		1169649		True				
ANR	1169757	CFGExitNode	EXIT		1169649		True				
ANR	1169758	Symbol	regno		1169649						
ANR	1169759	Symbol	outbuffer_start		1169649						
ANR	1169760	Symbol	cris_support_regs		1169649						
ANR	1169761	Symbol	NULL		1169649						
ANR	1169762	Symbol	with_reg_prefix		1169649						
ANR	1169763	Symbol	i		1169649						
ANR	1169764	Symbol	* outbuffer ++		1169649						
ANR	1169765	Symbol	cris_support_regs [ i ] . name		1169649						
ANR	1169766	Symbol	outbuffer		1169649						
ANR	1169767	Symbol	REGISTER_PREFIX_CHAR		1169649						
ANR	1169768	Symbol	cris_support_regs [ i ] . number		1169649						
ANR	1169769	Symbol	strlen		1169649						
ANR	1169770	Symbol	* i		1169649						
ANR	1169771	Symbol	* cris_support_regs		1169649						
ANR	1169772	Function	bytes_to_skip	631:0:17308:18679							
ANR	1169773	FunctionDef	"bytes_to_skip (unsigned int insn , const struct cris_opcode * matchedp , enum cris_disass_family distype , const struct cris_opcode * prefix_matchedp)"		1169772	0					
ANR	1169774	CompoundStatement		636:0:17494:18679	1169772	0					
ANR	1169775	IdentifierDeclStatement	unsigned to_skip = 2 ;	638:2:17554:17574	1169772	0	True				
ANR	1169776	IdentifierDecl	to_skip = 2		1169772	0					
ANR	1169777	IdentifierDeclType	unsigned		1169772	0					
ANR	1169778	Identifier	to_skip		1169772	1					
ANR	1169779	AssignmentExpression	to_skip = 2		1169772	2		=			
ANR	1169780	Identifier	to_skip		1169772	0					
ANR	1169781	PrimaryExpression	2		1169772	1					
ANR	1169782	Statement	const	639:2:17578:17582	1169772	1	True				
ANR	1169783	Statement	char	639:8:17584:17587	1169772	2	True				
ANR	1169784	Statement	*	639:13:17589:17589	1169772	3	True				
ANR	1169785	Statement	template	639:14:17590:17597	1169772	4	True				
ANR	1169786	Statement	=	639:23:17599:17599	1169772	5	True				
ANR	1169787	ExpressionStatement	matchedp -> args	639:25:17601:17615	1169772	6	True				
ANR	1169788	PtrMemberAccess	matchedp -> args		1169772	0					
ANR	1169789	Identifier	matchedp		1169772	0					
ANR	1169790	Identifier	args		1169772	1					
ANR	1169791	IdentifierDeclStatement	const char * s ;	640:2:17619:17632	1169772	7	True				
ANR	1169792	IdentifierDecl	* s		1169772	0					
ANR	1169793	IdentifierDeclType	const char *		1169772	0					
ANR	1169794	Identifier	s		1169772	1					
ANR	1169795	Statement	for	642:2:17637:17639	1169772	8	True				
ANR	1169796	Statement	(	642:6:17641:17641	1169772	9	True				
ANR	1169797	Statement	s	642:7:17642:17642	1169772	10	True				
ANR	1169798	Statement	=	642:9:17644:17644	1169772	11	True				
ANR	1169799	Statement	template	642:11:17646:17653	1169772	12	True				
ANR	1169800	ExpressionStatement		642:19:17654:17654	1169772	13	True				
ANR	1169801	ExpressionStatement	* s	642:21:17656:17658	1169772	14	True				
ANR	1169802	UnaryOperationExpression	* s		1169772	0					
ANR	1169803	UnaryOperator	*		1169772	0					
ANR	1169804	Identifier	s		1169772	1					
ANR	1169805	Statement	s	642:25:17660:17660	1169772	15	True				
ANR	1169806	Statement	++	642:26:17661:17662	1169772	16	True				
ANR	1169807	Statement	)	642:28:17663:17663	1169772	17	True				
ANR	1169808	CompoundStatement		7:30:170:170	1169772	18					
ANR	1169809	IfStatement	if ( ( * s == 's' || * s == 'N' || * s == 'Y' ) && ( insn & 0x400 ) && ( insn & 15 ) == 15 && ! prefix_matchedp )		1169772	0					
ANR	1169810	Condition	( * s == 's' || * s == 'N' || * s == 'Y' ) && ( insn & 0x400 ) && ( insn & 15 ) == 15 && ! prefix_matchedp	643:7:17674:17769	1169772	0	True				
ANR	1169811	AndExpression	( * s == 's' || * s == 'N' || * s == 'Y' ) && ( insn & 0x400 ) && ( insn & 15 ) == 15 && ! prefix_matchedp		1169772	0		&&			
ANR	1169812	OrExpression	* s == 's' || * s == 'N' || * s == 'Y'		1169772	0		||			
ANR	1169813	EqualityExpression	* s == 's'		1169772	0		==			
ANR	1169814	UnaryOperationExpression	* s		1169772	0					
ANR	1169815	UnaryOperator	*		1169772	0					
ANR	1169816	Identifier	s		1169772	1					
ANR	1169817	PrimaryExpression	's'		1169772	1					
ANR	1169818	OrExpression	* s == 'N' || * s == 'Y'		1169772	1		||			
ANR	1169819	EqualityExpression	* s == 'N'		1169772	0		==			
ANR	1169820	UnaryOperationExpression	* s		1169772	0					
ANR	1169821	UnaryOperator	*		1169772	0					
ANR	1169822	Identifier	s		1169772	1					
ANR	1169823	PrimaryExpression	'N'		1169772	1					
ANR	1169824	EqualityExpression	* s == 'Y'		1169772	1		==			
ANR	1169825	UnaryOperationExpression	* s		1169772	0					
ANR	1169826	UnaryOperator	*		1169772	0					
ANR	1169827	Identifier	s		1169772	1					
ANR	1169828	PrimaryExpression	'Y'		1169772	1					
ANR	1169829	AndExpression	( insn & 0x400 ) && ( insn & 15 ) == 15 && ! prefix_matchedp		1169772	1		&&			
ANR	1169830	BitAndExpression	insn & 0x400		1169772	0		&			
ANR	1169831	Identifier	insn		1169772	0					
ANR	1169832	PrimaryExpression	0x400		1169772	1					
ANR	1169833	AndExpression	( insn & 15 ) == 15 && ! prefix_matchedp		1169772	1		&&			
ANR	1169834	EqualityExpression	( insn & 15 ) == 15		1169772	0		==			
ANR	1169835	BitAndExpression	insn & 15		1169772	0		&			
ANR	1169836	Identifier	insn		1169772	0					
ANR	1169837	PrimaryExpression	15		1169772	1					
ANR	1169838	PrimaryExpression	15		1169772	1					
ANR	1169839	UnaryOperationExpression	! prefix_matchedp		1169772	1					
ANR	1169840	UnaryOperator	!		1169772	0					
ANR	1169841	Identifier	prefix_matchedp		1169772	1					
ANR	1169842	CompoundStatement		8:105:277:277	1169772	1					
ANR	1169843	Statement	int	646:4:17859:17861	1169772	0	True				
ANR	1169844	Statement	mode_size	646:8:17863:17871	1169772	1	True				
ANR	1169845	Statement	=	646:18:17873:17873	1169772	2	True				
ANR	1169846	Statement	1	646:20:17875:17875	1169772	3	True				
ANR	1169847	Statement	<<	646:22:17877:17878	1169772	4	True				
ANR	1169848	Statement	(	646:25:17880:17880	1169772	5	True				
ANR	1169849	Statement	(	646:26:17881:17881	1169772	6	True				
ANR	1169850	Statement	insn	646:27:17882:17885	1169772	7	True				
ANR	1169851	Statement	>>	646:32:17887:17888	1169772	8	True				
ANR	1169852	Statement	4	646:35:17890:17890	1169772	9	True				
ANR	1169853	Statement	)	646:36:17891:17891	1169772	10	True				
ANR	1169854	Statement	&	646:38:17893:17893	1169772	11	True				
ANR	1169855	Statement	(	646:40:17895:17895	1169772	12	True				
ANR	1169856	Statement	*	646:41:17896:17896	1169772	13	True				
ANR	1169857	Statement	template	646:42:17897:17904	1169772	14	True				
ANR	1169858	Statement	==	646:51:17906:17907	1169772	15	True				
ANR	1169859	Statement	'z'	646:54:17909:17911	1169772	16	True				
ANR	1169860	Statement	?	646:58:17913:17913	1169772	17	True				
ANR	1169861	Label	1 :	646:60:17915:17917	1169772	18	True				
ANR	1169862	Statement	3	646:64:17919:17919	1169772	19	True				
ANR	1169863	Statement	)	646:65:17920:17920	1169772	20	True				
ANR	1169864	Statement	)	646:66:17921:17921	1169772	21	True				
ANR	1169865	ExpressionStatement		646:67:17922:17922	1169772	22	True				
ANR	1169866	IfStatement	if ( matchedp -> imm_oprnd_size == SIZE_FIX_32 )		1169772	23					
ANR	1169867	Condition	matchedp -> imm_oprnd_size == SIZE_FIX_32	648:8:17933:17971	1169772	0	True				
ANR	1169868	EqualityExpression	matchedp -> imm_oprnd_size == SIZE_FIX_32		1169772	0		==			
ANR	1169869	PtrMemberAccess	matchedp -> imm_oprnd_size		1169772	0					
ANR	1169870	Identifier	matchedp		1169772	0					
ANR	1169871	Identifier	imm_oprnd_size		1169772	1					
ANR	1169872	Identifier	SIZE_FIX_32		1169772	1					
ANR	1169873	CompoundStatement		13:49:479:479	1169772	1					
ANR	1169874	ExpressionStatement	to_skip += 4	649:5:17981:17993	1169772	0	True				
ANR	1169875	AssignmentExpression	to_skip += 4		1169772	0		+=			
ANR	1169876	Identifier	to_skip		1169772	0					
ANR	1169877	PrimaryExpression	4		1169772	1					
ANR	1169878	ElseStatement	else		1169772	0					
ANR	1169879	IfStatement	if ( matchedp -> imm_oprnd_size == SIZE_SPEC_REG )		1169772	0					
ANR	1169880	Condition	matchedp -> imm_oprnd_size == SIZE_SPEC_REG	650:15:18010:18050	1169772	0	True				
ANR	1169881	EqualityExpression	matchedp -> imm_oprnd_size == SIZE_SPEC_REG		1169772	0		==			
ANR	1169882	PtrMemberAccess	matchedp -> imm_oprnd_size		1169772	0					
ANR	1169883	Identifier	matchedp		1169772	0					
ANR	1169884	Identifier	imm_oprnd_size		1169772	1					
ANR	1169885	Identifier	SIZE_SPEC_REG		1169772	1					
ANR	1169886	CompoundStatement		16:5:565:643	1169772	1					
ANR	1169887	IdentifierDeclStatement	"const struct cris_spec_reg * sregp = spec_reg_info ( ( insn >> 12 ) & 15 , distype ) ;"	651:5:18060:18138	1169772	0	True				
ANR	1169888	IdentifierDecl	"* sregp = spec_reg_info ( ( insn >> 12 ) & 15 , distype )"		1169772	0					
ANR	1169889	IdentifierDeclType	const struct cris_spec_reg *		1169772	0					
ANR	1169890	Identifier	sregp		1169772	1					
ANR	1169891	AssignmentExpression	"* sregp = spec_reg_info ( ( insn >> 12 ) & 15 , distype )"		1169772	2		=			
ANR	1169892	Identifier	sregp		1169772	0					
ANR	1169893	CallExpression	"spec_reg_info ( ( insn >> 12 ) & 15 , distype )"		1169772	1					
ANR	1169894	Callee	spec_reg_info		1169772	0					
ANR	1169895	Identifier	spec_reg_info		1169772	0					
ANR	1169896	ArgumentList	( insn >> 12 ) & 15		1169772	1					
ANR	1169897	Argument	( insn >> 12 ) & 15		1169772	0					
ANR	1169898	BitAndExpression	( insn >> 12 ) & 15		1169772	0		&			
ANR	1169899	ShiftExpression	insn >> 12		1169772	0		>>			
ANR	1169900	Identifier	insn		1169772	0					
ANR	1169901	PrimaryExpression	12		1169772	1					
ANR	1169902	PrimaryExpression	15		1169772	1					
ANR	1169903	Argument	distype		1169772	1					
ANR	1169904	Identifier	distype		1169772	0					
ANR	1169905	IfStatement	if ( ! sregp )		1169772	1					
ANR	1169906	Condition	! sregp	655:9:18234:18239	1169772	0	True				
ANR	1169907	UnaryOperationExpression	! sregp		1169772	0					
ANR	1169908	UnaryOperator	!		1169772	0					
ANR	1169909	Identifier	sregp		1169772	1					
ANR	1169910	CompoundStatement		20:17:747:747	1169772	1					
ANR	1169911	ReturnStatement	return 2 ;	656:6:18250:18258	1169772	0	True				
ANR	1169912	PrimaryExpression	2		1169772	0					
ANR	1169913	ExpressionStatement	to_skip += distype == cris_dis_v32 ? 4 : ( sregp -> reg_size + 1 ) & ~1	662:5:18429:18502	1169772	2	True				
ANR	1169914	AssignmentExpression	to_skip += distype == cris_dis_v32 ? 4 : ( sregp -> reg_size + 1 ) & ~1		1169772	0		+=			
ANR	1169915	Identifier	to_skip		1169772	0					
ANR	1169916	ConditionalExpression	distype == cris_dis_v32 ? 4 : ( sregp -> reg_size + 1 ) & ~1		1169772	1					
ANR	1169917	Condition	distype == cris_dis_v32		1169772	0					
ANR	1169918	EqualityExpression	distype == cris_dis_v32		1169772	0		==			
ANR	1169919	Identifier	distype		1169772	0					
ANR	1169920	Identifier	cris_dis_v32		1169772	1					
ANR	1169921	PrimaryExpression	4		1169772	1					
ANR	1169922	BitAndExpression	( sregp -> reg_size + 1 ) & ~1		1169772	2		&			
ANR	1169923	AdditiveExpression	sregp -> reg_size + 1		1169772	0		+			
ANR	1169924	PtrMemberAccess	sregp -> reg_size		1169772	0					
ANR	1169925	Identifier	sregp		1169772	0					
ANR	1169926	Identifier	reg_size		1169772	1					
ANR	1169927	PrimaryExpression	1		1169772	1					
ANR	1169928	Identifier	~1		1169772	1					
ANR	1169929	ElseStatement	else		1169772	0					
ANR	1169930	CompoundStatement		29:11:1020:1020	1169772	0					
ANR	1169931	ExpressionStatement	to_skip += ( mode_size + 1 ) & ~1	665:5:18522:18553	1169772	0	True				
ANR	1169932	AssignmentExpression	to_skip += ( mode_size + 1 ) & ~1		1169772	0		+=			
ANR	1169933	Identifier	to_skip		1169772	0					
ANR	1169934	BitAndExpression	( mode_size + 1 ) & ~1		1169772	1		&			
ANR	1169935	AdditiveExpression	mode_size + 1		1169772	0		+			
ANR	1169936	Identifier	mode_size		1169772	0					
ANR	1169937	PrimaryExpression	1		1169772	1					
ANR	1169938	Identifier	~1		1169772	1					
ANR	1169939	ElseStatement	else		1169772	0					
ANR	1169940	IfStatement	if ( * s == 'n' )		1169772	0					
ANR	1169941	Condition	* s == 'n'	667:14:18575:18583	1169772	0	True				
ANR	1169942	EqualityExpression	* s == 'n'		1169772	0		==			
ANR	1169943	UnaryOperationExpression	* s		1169772	0					
ANR	1169944	UnaryOperator	*		1169772	0					
ANR	1169945	Identifier	s		1169772	1					
ANR	1169946	PrimaryExpression	'n'		1169772	1					
ANR	1169947	CompoundStatement		32:25:1091:1091	1169772	1					
ANR	1169948	ExpressionStatement	to_skip += 4	668:4:18592:18604	1169772	0	True				
ANR	1169949	AssignmentExpression	to_skip += 4		1169772	0		+=			
ANR	1169950	Identifier	to_skip		1169772	0					
ANR	1169951	PrimaryExpression	4		1169772	1					
ANR	1169952	ElseStatement	else		1169772	0					
ANR	1169953	IfStatement	if ( * s == 'b' )		1169772	0					
ANR	1169954	Condition	* s == 'b'	669:14:18620:18628	1169772	0	True				
ANR	1169955	EqualityExpression	* s == 'b'		1169772	0		==			
ANR	1169956	UnaryOperationExpression	* s		1169772	0					
ANR	1169957	UnaryOperator	*		1169772	0					
ANR	1169958	Identifier	s		1169772	1					
ANR	1169959	PrimaryExpression	'b'		1169772	1					
ANR	1169960	CompoundStatement		34:25:1136:1136	1169772	1					
ANR	1169961	ExpressionStatement	to_skip += 2	670:4:18637:18649	1169772	0	True				
ANR	1169962	AssignmentExpression	to_skip += 2		1169772	0		+=			
ANR	1169963	Identifier	to_skip		1169772	0					
ANR	1169964	PrimaryExpression	2		1169772	1					
ANR	1169965	ReturnStatement	return to_skip ;	674:2:18663:18677	1169772	19	True				
ANR	1169966	Identifier	to_skip		1169772	0					
ANR	1169967	ReturnType	static unsigned		1169772	1					
ANR	1169968	Identifier	bytes_to_skip		1169772	2					
ANR	1169969	ParameterList	"unsigned int insn , const struct cris_opcode * matchedp , enum cris_disass_family distype , const struct cris_opcode * prefix_matchedp"		1169772	3					
ANR	1169970	Parameter	unsigned int insn	632:15:17339:17355	1169772	0	True				
ANR	1169971	ParameterType	unsigned int		1169772	0					
ANR	1169972	Identifier	insn		1169772	1					
ANR	1169973	Parameter	const struct cris_opcode * matchedp	633:8:17366:17399	1169772	1	True				
ANR	1169974	ParameterType	const struct cris_opcode *		1169772	0					
ANR	1169975	Identifier	matchedp		1169772	1					
ANR	1169976	Parameter	enum cris_disass_family distype	634:8:17410:17440	1169772	2	True				
ANR	1169977	ParameterType	enum cris_disass_family		1169772	0					
ANR	1169978	Identifier	distype		1169772	1					
ANR	1169979	Parameter	const struct cris_opcode * prefix_matchedp	635:8:17451:17491	1169772	3	True				
ANR	1169980	ParameterType	const struct cris_opcode *		1169772	0					
ANR	1169981	Identifier	prefix_matchedp		1169772	1					
ANR	1169982	CFGEntryNode	ENTRY		1169772		True				
ANR	1169983	CFGExitNode	EXIT		1169772		True				
ANR	1169984	Symbol	mode_size		1169772						
ANR	1169985	Symbol	sregp		1169772						
ANR	1169986	Symbol	SIZE_SPEC_REG		1169772						
ANR	1169987	Symbol	cris_dis_v32		1169772						
ANR	1169988	Symbol	to_skip		1169772						
ANR	1169989	Symbol	distype		1169772						
ANR	1169990	Symbol	SIZE_FIX_32		1169772						
ANR	1169991	Symbol	* matchedp		1169772						
ANR	1169992	Symbol	insn		1169772						
ANR	1169993	Symbol	s		1169772						
ANR	1169994	Symbol	* sregp		1169772						
ANR	1169995	Symbol	~1		1169772						
ANR	1169996	Symbol	prefix_matchedp		1169772						
ANR	1169997	Symbol	spec_reg_info		1169772						
ANR	1169998	Symbol	sregp -> reg_size		1169772						
ANR	1169999	Symbol	* s		1169772						
ANR	1170000	Symbol	matchedp		1169772						
ANR	1170001	Symbol	matchedp -> imm_oprnd_size		1169772						
ANR	1170002	Function	print_flags	679:0:18718:19386							
ANR	1170003	FunctionDef	"print_flags (struct cris_disasm_data * disdata , unsigned int insn , char * cp)"		1170002	0					
ANR	1170004	CompoundStatement		681:0:18808:19386	1170002	0					
ANR	1170005	Statement	static	687:2:19029:19034	1170002	0	True				
ANR	1170006	IdentifierDeclStatement	"const char v8_fnames [ ] = ""cvznxibm"" ;"	687:9:19036:19071	1170002	1	True				
ANR	1170007	IdentifierDecl	"v8_fnames [ ] = ""cvznxibm"""		1170002	0					
ANR	1170008	IdentifierDeclType	const char [ ]		1170002	0					
ANR	1170009	Identifier	v8_fnames		1170002	1					
ANR	1170010	AssignmentExpression	"v8_fnames [ ] = ""cvznxibm"""		1170002	2		=			
ANR	1170011	Identifier	v8_fnames		1170002	0					
ANR	1170012	PrimaryExpression	"""cvznxibm"""		1170002	1					
ANR	1170013	Statement	static	688:2:19075:19080	1170002	2	True				
ANR	1170014	IdentifierDeclStatement	"const char v32_fnames [ ] = ""cvznxiup"" ;"	688:9:19082:19118	1170002	3	True				
ANR	1170015	IdentifierDecl	"v32_fnames [ ] = ""cvznxiup"""		1170002	0					
ANR	1170016	IdentifierDeclType	const char [ ]		1170002	0					
ANR	1170017	Identifier	v32_fnames		1170002	1					
ANR	1170018	AssignmentExpression	"v32_fnames [ ] = ""cvznxiup"""		1170002	2		=			
ANR	1170019	Identifier	v32_fnames		1170002	0					
ANR	1170020	PrimaryExpression	"""cvznxiup"""		1170002	1					
ANR	1170021	IdentifierDeclStatement	const char * fnames = disdata -> distype == cris_dis_v32 ? v32_fnames : v8_fnames ;	689:2:19122:19204	1170002	4	True				
ANR	1170022	IdentifierDecl	* fnames = disdata -> distype == cris_dis_v32 ? v32_fnames : v8_fnames		1170002	0					
ANR	1170023	IdentifierDeclType	const char *		1170002	0					
ANR	1170024	Identifier	fnames		1170002	1					
ANR	1170025	AssignmentExpression	* fnames = disdata -> distype == cris_dis_v32 ? v32_fnames : v8_fnames		1170002	2		=			
ANR	1170026	Identifier	fnames		1170002	0					
ANR	1170027	ConditionalExpression	disdata -> distype == cris_dis_v32 ? v32_fnames : v8_fnames		1170002	1					
ANR	1170028	Condition	disdata -> distype == cris_dis_v32		1170002	0					
ANR	1170029	EqualityExpression	disdata -> distype == cris_dis_v32		1170002	0		==			
ANR	1170030	PtrMemberAccess	disdata -> distype		1170002	0					
ANR	1170031	Identifier	disdata		1170002	0					
ANR	1170032	Identifier	distype		1170002	1					
ANR	1170033	Identifier	cris_dis_v32		1170002	1					
ANR	1170034	Identifier	v32_fnames		1170002	1					
ANR	1170035	Identifier	v8_fnames		1170002	2					
ANR	1170036	IdentifierDeclStatement	unsigned char flagbits = ( ( ( insn >> 8 ) & 0xf0 ) | ( insn & 15 ) ) ;	692:2:19209:19270	1170002	5	True				
ANR	1170037	IdentifierDecl	flagbits = ( ( ( insn >> 8 ) & 0xf0 ) | ( insn & 15 ) )		1170002	0					
ANR	1170038	IdentifierDeclType	unsigned char		1170002	0					
ANR	1170039	Identifier	flagbits		1170002	1					
ANR	1170040	AssignmentExpression	flagbits = ( ( ( insn >> 8 ) & 0xf0 ) | ( insn & 15 ) )		1170002	2		=			
ANR	1170041	Identifier	flagbits		1170002	0					
ANR	1170042	InclusiveOrExpression	( ( insn >> 8 ) & 0xf0 ) | ( insn & 15 )		1170002	1		|			
ANR	1170043	BitAndExpression	( insn >> 8 ) & 0xf0		1170002	0		&			
ANR	1170044	ShiftExpression	insn >> 8		1170002	0		>>			
ANR	1170045	Identifier	insn		1170002	0					
ANR	1170046	PrimaryExpression	8		1170002	1					
ANR	1170047	PrimaryExpression	0xf0		1170002	1					
ANR	1170048	BitAndExpression	insn & 15		1170002	1		&			
ANR	1170049	Identifier	insn		1170002	0					
ANR	1170050	PrimaryExpression	15		1170002	1					
ANR	1170051	IdentifierDeclStatement	int i ;	693:2:19274:19279	1170002	6	True				
ANR	1170052	IdentifierDecl	i		1170002	0					
ANR	1170053	IdentifierDeclType	int		1170002	0					
ANR	1170054	Identifier	i		1170002	1					
ANR	1170055	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		1170002	7					
ANR	1170056	ForInit	i = 0 ;	695:7:19289:19294	1170002	0	True				
ANR	1170057	AssignmentExpression	i = 0		1170002	0		=			
ANR	1170058	Identifier	i		1170002	0					
ANR	1170059	PrimaryExpression	0		1170002	1					
ANR	1170060	Condition	i < 8	695:14:19296:19300	1170002	1	True				
ANR	1170061	RelationalExpression	i < 8		1170002	0		<			
ANR	1170062	Identifier	i		1170002	0					
ANR	1170063	PrimaryExpression	8		1170002	1					
ANR	1170064	PostIncDecOperationExpression	i ++	695:21:19303:19305	1170002	2	True				
ANR	1170065	Identifier	i		1170002	0					
ANR	1170066	IncDec	++		1170002	1					
ANR	1170067	CompoundStatement		15:26:499:499	1170002	3					
ANR	1170068	IfStatement	if ( flagbits & ( 1 << i ) )		1170002	0					
ANR	1170069	Condition	flagbits & ( 1 << i )	696:7:19317:19335	1170002	0	True				
ANR	1170070	BitAndExpression	flagbits & ( 1 << i )		1170002	0		&			
ANR	1170071	Identifier	flagbits		1170002	0					
ANR	1170072	ShiftExpression	1 << i		1170002	1		<<			
ANR	1170073	PrimaryExpression	1		1170002	0					
ANR	1170074	Identifier	i		1170002	1					
ANR	1170075	CompoundStatement		16:28:529:529	1170002	1					
ANR	1170076	ExpressionStatement	* cp ++ = fnames [ i ]	697:4:19344:19361	1170002	0	True				
ANR	1170077	AssignmentExpression	* cp ++ = fnames [ i ]		1170002	0		=			
ANR	1170078	UnaryOperationExpression	* cp ++		1170002	0					
ANR	1170079	UnaryOperator	*		1170002	0					
ANR	1170080	PostIncDecOperationExpression	cp ++		1170002	1					
ANR	1170081	Identifier	cp		1170002	0					
ANR	1170082	IncDec	++		1170002	1					
ANR	1170083	ArrayIndexing	fnames [ i ]		1170002	1					
ANR	1170084	Identifier	fnames		1170002	0					
ANR	1170085	Identifier	i		1170002	1					
ANR	1170086	ReturnStatement	return cp ;	701:2:19375:19384	1170002	8	True				
ANR	1170087	Identifier	cp		1170002	0					
ANR	1170088	ReturnType	static char *		1170002	1					
ANR	1170089	Identifier	print_flags		1170002	2					
ANR	1170090	ParameterList	"struct cris_disasm_data * disdata , unsigned int insn , char * cp"		1170002	3					
ANR	1170091	Parameter	struct cris_disasm_data * disdata	680:13:18745:18776	1170002	0	True				
ANR	1170092	ParameterType	struct cris_disasm_data *		1170002	0					
ANR	1170093	Identifier	disdata		1170002	1					
ANR	1170094	Parameter	unsigned int insn	680:47:18779:18795	1170002	1	True				
ANR	1170095	ParameterType	unsigned int		1170002	0					
ANR	1170096	Identifier	insn		1170002	1					
ANR	1170097	Parameter	char * cp	680:66:18798:18805	1170002	2	True				
ANR	1170098	ParameterType	char *		1170002	0					
ANR	1170099	Identifier	cp		1170002	1					
ANR	1170100	CFGEntryNode	ENTRY		1170002		True				
ANR	1170101	CFGExitNode	EXIT		1170002		True				
ANR	1170102	Symbol	disdata		1170002						
ANR	1170103	Symbol	fnames		1170002						
ANR	1170104	Symbol	i		1170002						
ANR	1170105	Symbol	cris_dis_v32		1170002						
ANR	1170106	Symbol	flagbits		1170002						
ANR	1170107	Symbol	cp		1170002						
ANR	1170108	Symbol	insn		1170002						
ANR	1170109	Symbol	* i		1170002						
ANR	1170110	Symbol	v8_fnames		1170002						
ANR	1170111	Symbol	disdata -> distype		1170002						
ANR	1170112	Symbol	* cp ++		1170002						
ANR	1170113	Symbol	* fnames		1170002						
ANR	1170114	Symbol	v32_fnames		1170002						
ANR	1170115	Symbol	* disdata		1170002						
ANR	1170116	Function	print_with_operands	708:0:19581:36166							
ANR	1170117	FunctionDef	"print_with_operands (const struct cris_opcode * opcodep , unsigned int insn , unsigned char * buffer , bfd_vma addr , disassemble_info * info , const struct cris_opcode * prefix_opcodep , unsigned int prefix_insn , unsigned char * prefix_buffer , bfd_boolean with_reg_prefix)"		1170116	0					
ANR	1170118	CompoundStatement		721:0:20045:36166	1170116	0					
ANR	1170119	IdentifierDeclStatement	"char temp [ sizeof ( "".d [$r13=$r12-2147483648],$r10"" ) * 2 ] ;"	724:2:20151:20207	1170116	0	True				
ANR	1170120	IdentifierDecl	"temp [ sizeof ( "".d [$r13=$r12-2147483648],$r10"" ) * 2 ]"		1170116	0					
ANR	1170121	IdentifierDeclType	"char [ sizeof ( "".d [$r13=$r12-2147483648],$r10"" ) * 2 ]"		1170116	0					
ANR	1170122	Identifier	temp		1170116	1					
ANR	1170123	MultiplicativeExpression	"sizeof ( "".d [$r13=$r12-2147483648],$r10"" ) * 2"		1170116	2		*			
ANR	1170124	SizeofExpression	"sizeof ( "".d [$r13=$r12-2147483648],$r10"" )"		1170116	0					
ANR	1170125	Sizeof	sizeof		1170116	0					
ANR	1170126	PrimaryExpression	""".d [$r13=$r12-2147483648],$r10"""		1170116	1					
ANR	1170127	PrimaryExpression	2		1170116	1					
ANR	1170128	IdentifierDeclStatement	char * tp = temp ;	725:2:20211:20226	1170116	1	True				
ANR	1170129	IdentifierDecl	* tp = temp		1170116	0					
ANR	1170130	IdentifierDeclType	char *		1170116	0					
ANR	1170131	Identifier	tp		1170116	1					
ANR	1170132	AssignmentExpression	* tp = temp		1170116	2		=			
ANR	1170133	Identifier	temp		1170116	0					
ANR	1170134	Identifier	temp		1170116	1					
ANR	1170135	Statement	static	726:2:20230:20235	1170116	2	True				
ANR	1170136	IdentifierDeclStatement	"const char mode_char [ ] = ""bwd?"" ;"	726:9:20237:20268	1170116	3	True				
ANR	1170137	IdentifierDecl	"mode_char [ ] = ""bwd?"""		1170116	0					
ANR	1170138	IdentifierDeclType	const char [ ]		1170116	0					
ANR	1170139	Identifier	mode_char		1170116	1					
ANR	1170140	AssignmentExpression	"mode_char [ ] = ""bwd?"""		1170116	2		=			
ANR	1170141	Identifier	mode_char		1170116	0					
ANR	1170142	PrimaryExpression	"""bwd?"""		1170116	1					
ANR	1170143	IdentifierDeclStatement	const char * s ;	727:2:20272:20285	1170116	4	True				
ANR	1170144	IdentifierDecl	* s		1170116	0					
ANR	1170145	IdentifierDeclType	const char *		1170116	0					
ANR	1170146	Identifier	s		1170116	1					
ANR	1170147	IdentifierDeclStatement	const char * cs ;	728:2:20289:20303	1170116	5	True				
ANR	1170148	IdentifierDecl	* cs		1170116	0					
ANR	1170149	IdentifierDeclType	const char *		1170116	0					
ANR	1170150	Identifier	cs		1170116	1					
ANR	1170151	IdentifierDeclStatement	struct cris_disasm_data * disdata = ( struct cris_disasm_data * ) info -> private_data ;	729:2:20307:20392	1170116	6	True				
ANR	1170152	IdentifierDecl	* disdata = ( struct cris_disasm_data * ) info -> private_data		1170116	0					
ANR	1170153	IdentifierDeclType	struct cris_disasm_data *		1170116	0					
ANR	1170154	Identifier	disdata		1170116	1					
ANR	1170155	AssignmentExpression	* disdata = ( struct cris_disasm_data * ) info -> private_data		1170116	2		=			
ANR	1170156	Identifier	disdata		1170116	0					
ANR	1170157	CastExpression	( struct cris_disasm_data * ) info -> private_data		1170116	1					
ANR	1170158	CastTarget	struct cris_disasm_data *		1170116	0					
ANR	1170159	PtrMemberAccess	info -> private_data		1170116	1					
ANR	1170160	Identifier	info		1170116	0					
ANR	1170161	Identifier	private_data		1170116	1					
ANR	1170162	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , opcodep -> name )"	733:2:20444:20501	1170116	7	True				
ANR	1170163	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , opcodep -> name )"		1170116	0					
ANR	1170164	Callee	* info -> fprintf_func		1170116	0					
ANR	1170165	UnaryOperationExpression	* info -> fprintf_func		1170116	0					
ANR	1170166	UnaryOperator	*		1170116	0					
ANR	1170167	PtrMemberAccess	info -> fprintf_func		1170116	1					
ANR	1170168	Identifier	info		1170116	0					
ANR	1170169	Identifier	fprintf_func		1170116	1					
ANR	1170170	ArgumentList	info -> stream		1170116	1					
ANR	1170171	Argument	info -> stream		1170116	0					
ANR	1170172	PtrMemberAccess	info -> stream		1170116	0					
ANR	1170173	Identifier	info		1170116	0					
ANR	1170174	Identifier	stream		1170116	1					
ANR	1170175	Argument	"""%s"""		1170116	1					
ANR	1170176	PrimaryExpression	"""%s"""		1170116	0					
ANR	1170177	Argument	opcodep -> name		1170116	2					
ANR	1170178	PtrMemberAccess	opcodep -> name		1170116	0					
ANR	1170179	Identifier	opcodep		1170116	0					
ANR	1170180	Identifier	name		1170116	1					
ANR	1170181	ExpressionStatement	cs = opcodep -> args	735:2:20506:20524	1170116	8	True				
ANR	1170182	AssignmentExpression	cs = opcodep -> args		1170116	0		=			
ANR	1170183	Identifier	cs		1170116	0					
ANR	1170184	PtrMemberAccess	opcodep -> args		1170116	1					
ANR	1170185	Identifier	opcodep		1170116	0					
ANR	1170186	Identifier	args		1170116	1					
ANR	1170187	ExpressionStatement	s = cs	736:2:20528:20534	1170116	9	True				
ANR	1170188	AssignmentExpression	s = cs		1170116	0		=			
ANR	1170189	Identifier	s		1170116	0					
ANR	1170190	Identifier	cs		1170116	1					
ANR	1170191	IfStatement	if ( * s == 'p' )		1170116	10					
ANR	1170192	Condition	* s == 'p'	739:6:20581:20589	1170116	0	True				
ANR	1170193	EqualityExpression	* s == 'p'		1170116	0		==			
ANR	1170194	UnaryOperationExpression	* s		1170116	0					
ANR	1170195	UnaryOperator	*		1170116	0					
ANR	1170196	Identifier	s		1170116	1					
ANR	1170197	PrimaryExpression	'p'		1170116	1					
ANR	1170198	CompoundStatement		19:17:546:546	1170116	1					
ANR	1170199	ExpressionStatement	s ++	740:3:20597:20600	1170116	0	True				
ANR	1170200	PostIncDecOperationExpression	s ++		1170116	0					
ANR	1170201	Identifier	s		1170116	0					
ANR	1170202	IncDec	++		1170116	1					
ANR	1170203	IfStatement	if ( * s == 'm' || * s == 'M' || * s == 'z' )		1170116	11					
ANR	1170204	Condition	* s == 'm' || * s == 'M' || * s == 'z'	743:6:20613:20647	1170116	0	True				
ANR	1170205	OrExpression	* s == 'm' || * s == 'M' || * s == 'z'		1170116	0		||			
ANR	1170206	EqualityExpression	* s == 'm'		1170116	0		==			
ANR	1170207	UnaryOperationExpression	* s		1170116	0					
ANR	1170208	UnaryOperator	*		1170116	0					
ANR	1170209	Identifier	s		1170116	1					
ANR	1170210	PrimaryExpression	'm'		1170116	1					
ANR	1170211	OrExpression	* s == 'M' || * s == 'z'		1170116	1		||			
ANR	1170212	EqualityExpression	* s == 'M'		1170116	0		==			
ANR	1170213	UnaryOperationExpression	* s		1170116	0					
ANR	1170214	UnaryOperator	*		1170116	0					
ANR	1170215	Identifier	s		1170116	1					
ANR	1170216	PrimaryExpression	'M'		1170116	1					
ANR	1170217	EqualityExpression	* s == 'z'		1170116	1		==			
ANR	1170218	UnaryOperationExpression	* s		1170116	0					
ANR	1170219	UnaryOperator	*		1170116	0					
ANR	1170220	Identifier	s		1170116	1					
ANR	1170221	PrimaryExpression	'z'		1170116	1					
ANR	1170222	CompoundStatement		24:4:608:608	1170116	1					
ANR	1170223	ExpressionStatement	* tp ++ = '.'	745:6:20662:20673	1170116	0	True				
ANR	1170224	AssignmentExpression	* tp ++ = '.'		1170116	0		=			
ANR	1170225	UnaryOperationExpression	* tp ++		1170116	0					
ANR	1170226	UnaryOperator	*		1170116	0					
ANR	1170227	PostIncDecOperationExpression	tp ++		1170116	1					
ANR	1170228	Identifier	tp		1170116	0					
ANR	1170229	IncDec	++		1170116	1					
ANR	1170230	PrimaryExpression	'.'		1170116	1					
ANR	1170231	ExpressionStatement	* tp ++ = * s == 'M' ? ( insn & 0x8000 ? 'd' : insn & 0x4000 ? 'w' : 'b' ) : mode_char [ ( insn >> 4 ) & ( * s == 'z' ? 1 : 3 ) ]	748:6:20716:20838	1170116	1	True				
ANR	1170232	AssignmentExpression	* tp ++ = * s == 'M' ? ( insn & 0x8000 ? 'd' : insn & 0x4000 ? 'w' : 'b' ) : mode_char [ ( insn >> 4 ) & ( * s == 'z' ? 1 : 3 ) ]		1170116	0		=			
ANR	1170233	UnaryOperationExpression	* tp ++		1170116	0					
ANR	1170234	UnaryOperator	*		1170116	0					
ANR	1170235	PostIncDecOperationExpression	tp ++		1170116	1					
ANR	1170236	Identifier	tp		1170116	0					
ANR	1170237	IncDec	++		1170116	1					
ANR	1170238	ConditionalExpression	* s == 'M' ? ( insn & 0x8000 ? 'd' : insn & 0x4000 ? 'w' : 'b' ) : mode_char [ ( insn >> 4 ) & ( * s == 'z' ? 1 : 3 ) ]		1170116	1					
ANR	1170239	Condition	* s == 'M'		1170116	0					
ANR	1170240	EqualityExpression	* s == 'M'		1170116	0		==			
ANR	1170241	UnaryOperationExpression	* s		1170116	0					
ANR	1170242	UnaryOperator	*		1170116	0					
ANR	1170243	Identifier	s		1170116	1					
ANR	1170244	PrimaryExpression	'M'		1170116	1					
ANR	1170245	ConditionalExpression	insn & 0x8000 ? 'd' : insn & 0x4000 ? 'w' : 'b'		1170116	1					
ANR	1170246	Condition	insn & 0x8000		1170116	0					
ANR	1170247	BitAndExpression	insn & 0x8000		1170116	0		&			
ANR	1170248	Identifier	insn		1170116	0					
ANR	1170249	PrimaryExpression	0x8000		1170116	1					
ANR	1170250	PrimaryExpression	'd'		1170116	1					
ANR	1170251	ConditionalExpression	insn & 0x4000 ? 'w' : 'b'		1170116	2					
ANR	1170252	Condition	insn & 0x4000		1170116	0					
ANR	1170253	BitAndExpression	insn & 0x4000		1170116	0		&			
ANR	1170254	Identifier	insn		1170116	0					
ANR	1170255	PrimaryExpression	0x4000		1170116	1					
ANR	1170256	PrimaryExpression	'w'		1170116	1					
ANR	1170257	PrimaryExpression	'b'		1170116	2					
ANR	1170258	ArrayIndexing	mode_char [ ( insn >> 4 ) & ( * s == 'z' ? 1 : 3 ) ]		1170116	2					
ANR	1170259	Identifier	mode_char		1170116	0					
ANR	1170260	BitAndExpression	( insn >> 4 ) & ( * s == 'z' ? 1 : 3 )		1170116	1		&			
ANR	1170261	ShiftExpression	insn >> 4		1170116	0		>>			
ANR	1170262	Identifier	insn		1170116	0					
ANR	1170263	PrimaryExpression	4		1170116	1					
ANR	1170264	ConditionalExpression	* s == 'z' ? 1 : 3		1170116	1					
ANR	1170265	Condition	* s == 'z'		1170116	0					
ANR	1170266	EqualityExpression	* s == 'z'		1170116	0		==			
ANR	1170267	UnaryOperationExpression	* s		1170116	0					
ANR	1170268	UnaryOperator	*		1170116	0					
ANR	1170269	Identifier	s		1170116	1					
ANR	1170270	PrimaryExpression	'z'		1170116	1					
ANR	1170271	PrimaryExpression	1		1170116	1					
ANR	1170272	PrimaryExpression	3		1170116	2					
ANR	1170273	ExpressionStatement	s += 2	754:6:20914:20920	1170116	2	True				
ANR	1170274	AssignmentExpression	s += 2		1170116	0		+=			
ANR	1170275	Identifier	s		1170116	0					
ANR	1170276	PrimaryExpression	2		1170116	1					
ANR	1170277	IfStatement	if ( opcodep -> match != ( BRANCH_PC_LOW + BRANCH_INCR_HIGH * 256 ) )		1170116	12					
ANR	1170278	Condition	opcodep -> match != ( BRANCH_PC_LOW + BRANCH_INCR_HIGH * 256 )	759:8:21057:21114	1170116	0	True				
ANR	1170279	EqualityExpression	opcodep -> match != ( BRANCH_PC_LOW + BRANCH_INCR_HIGH * 256 )		1170116	0		!=			
ANR	1170280	PtrMemberAccess	opcodep -> match		1170116	0					
ANR	1170281	Identifier	opcodep		1170116	0					
ANR	1170282	Identifier	match		1170116	1					
ANR	1170283	AdditiveExpression	BRANCH_PC_LOW + BRANCH_INCR_HIGH * 256		1170116	1		+			
ANR	1170284	Identifier	BRANCH_PC_LOW		1170116	0					
ANR	1170285	MultiplicativeExpression	BRANCH_INCR_HIGH * 256		1170116	1		*			
ANR	1170286	Identifier	BRANCH_INCR_HIGH		1170116	0					
ANR	1170287	PrimaryExpression	256		1170116	1					
ANR	1170288	CompoundStatement		39:68:1071:1071	1170116	1					
ANR	1170289	ExpressionStatement	* tp ++ = ' '	760:5:21124:21135	1170116	0	True				
ANR	1170290	AssignmentExpression	* tp ++ = ' '		1170116	0		=			
ANR	1170291	UnaryOperationExpression	* tp ++		1170116	0					
ANR	1170292	UnaryOperator	*		1170116	0					
ANR	1170293	PostIncDecOperationExpression	tp ++		1170116	1					
ANR	1170294	Identifier	tp		1170116	0					
ANR	1170295	IncDec	++		1170116	1					
ANR	1170296	PrimaryExpression	' '		1170116	1					
ANR	1170297	IfStatement	if ( opcodep -> name [ 0 ] == 'j' )		1170116	13					
ANR	1170298	Condition	opcodep -> name [ 0 ] == 'j'	765:8:21246:21268	1170116	0	True				
ANR	1170299	EqualityExpression	opcodep -> name [ 0 ] == 'j'		1170116	0		==			
ANR	1170300	ArrayIndexing	opcodep -> name [ 0 ]		1170116	0					
ANR	1170301	PtrMemberAccess	opcodep -> name		1170116	0					
ANR	1170302	Identifier	opcodep		1170116	0					
ANR	1170303	Identifier	name		1170116	1					
ANR	1170304	PrimaryExpression	0		1170116	1					
ANR	1170305	PrimaryExpression	'j'		1170116	1					
ANR	1170306	CompoundStatement		45:33:1225:1225	1170116	1					
ANR	1170307	IfStatement	"if ( CONST_STRNEQ ( opcodep -> name , ""jsr"" ) )"		1170116	0					
ANR	1170308	Condition	"CONST_STRNEQ ( opcodep -> name , ""jsr"" )"	766:9:21282:21316	1170116	0	True				
ANR	1170309	CallExpression	"CONST_STRNEQ ( opcodep -> name , ""jsr"" )"		1170116	0					
ANR	1170310	Callee	CONST_STRNEQ		1170116	0					
ANR	1170311	Identifier	CONST_STRNEQ		1170116	0					
ANR	1170312	ArgumentList	opcodep -> name		1170116	1					
ANR	1170313	Argument	opcodep -> name		1170116	0					
ANR	1170314	PtrMemberAccess	opcodep -> name		1170116	0					
ANR	1170315	Identifier	opcodep		1170116	0					
ANR	1170316	Identifier	name		1170116	1					
ANR	1170317	Argument	"""jsr"""		1170116	1					
ANR	1170318	PrimaryExpression	"""jsr"""		1170116	0					
ANR	1170319	CompoundStatement		46:46:1273:1273	1170116	1					
ANR	1170320	ExpressionStatement	info -> insn_type = dis_jsr	768:6:21362:21387	1170116	0	True				
ANR	1170321	AssignmentExpression	info -> insn_type = dis_jsr		1170116	0		=			
ANR	1170322	PtrMemberAccess	info -> insn_type		1170116	0					
ANR	1170323	Identifier	info		1170116	0					
ANR	1170324	Identifier	insn_type		1170116	1					
ANR	1170325	Identifier	dis_jsr		1170116	1					
ANR	1170326	ElseStatement	else		1170116	0					
ANR	1170327	CompoundStatement		49:12:1355:1355	1170116	0					
ANR	1170328	ExpressionStatement	info -> insn_type = dis_branch	771:6:21471:21499	1170116	0	True				
ANR	1170329	AssignmentExpression	info -> insn_type = dis_branch		1170116	0		=			
ANR	1170330	PtrMemberAccess	info -> insn_type		1170116	0					
ANR	1170331	Identifier	info		1170116	0					
ANR	1170332	Identifier	insn_type		1170116	1					
ANR	1170333	Identifier	dis_branch		1170116	1					
ANR	1170334	ExpressionStatement	info -> branch_delay_insns = opcodep -> delayed	776:2:21568:21611	1170116	14	True				
ANR	1170335	AssignmentExpression	info -> branch_delay_insns = opcodep -> delayed		1170116	0		=			
ANR	1170336	PtrMemberAccess	info -> branch_delay_insns		1170116	0					
ANR	1170337	Identifier	info		1170116	0					
ANR	1170338	Identifier	branch_delay_insns		1170116	1					
ANR	1170339	PtrMemberAccess	opcodep -> delayed		1170116	1					
ANR	1170340	Identifier	opcodep		1170116	0					
ANR	1170341	Identifier	delayed		1170116	1					
ANR	1170342	ForStatement	for ( ; * s ; s ++ )		1170116	15					
ANR	1170343	Condition	* s	779:9:21649:21650	1170116	0	True				
ANR	1170344	UnaryOperationExpression	* s		1170116	0					
ANR	1170345	UnaryOperator	*		1170116	0					
ANR	1170346	Identifier	s		1170116	1					
ANR	1170347	PostIncDecOperationExpression	s ++	779:13:21653:21655	1170116	1	True				
ANR	1170348	Identifier	s		1170116	0					
ANR	1170349	IncDec	++		1170116	1					
ANR	1170350	CompoundStatement		60:4:1616:1616	1170116	2					
ANR	1170351	SwitchStatement	switch ( * s )		1170116	0					
ANR	1170352	Condition	* s	781:12:21676:21677	1170116	0	True				
ANR	1170353	UnaryOperationExpression	* s		1170116	0					
ANR	1170354	UnaryOperator	*		1170116	0					
ANR	1170355	Identifier	s		1170116	1					
ANR	1170356	CompoundStatement		62:6:1640:1640	1170116	1					
ANR	1170357	Label	case 'T' :	783:6:21694:21702	1170116	0	True				
ANR	1170358	ExpressionStatement	"tp = format_sup_reg ( ( insn >> 12 ) & 15 , tp , with_reg_prefix )"	784:1:21705:21765	1170116	1	True				
ANR	1170359	AssignmentExpression	"tp = format_sup_reg ( ( insn >> 12 ) & 15 , tp , with_reg_prefix )"		1170116	0		=			
ANR	1170360	Identifier	tp		1170116	0					
ANR	1170361	CallExpression	"format_sup_reg ( ( insn >> 12 ) & 15 , tp , with_reg_prefix )"		1170116	1					
ANR	1170362	Callee	format_sup_reg		1170116	0					
ANR	1170363	Identifier	format_sup_reg		1170116	0					
ANR	1170364	ArgumentList	( insn >> 12 ) & 15		1170116	1					
ANR	1170365	Argument	( insn >> 12 ) & 15		1170116	0					
ANR	1170366	BitAndExpression	( insn >> 12 ) & 15		1170116	0		&			
ANR	1170367	ShiftExpression	insn >> 12		1170116	0		>>			
ANR	1170368	Identifier	insn		1170116	0					
ANR	1170369	PrimaryExpression	12		1170116	1					
ANR	1170370	PrimaryExpression	15		1170116	1					
ANR	1170371	Argument	tp		1170116	1					
ANR	1170372	Identifier	tp		1170116	0					
ANR	1170373	Argument	with_reg_prefix		1170116	2					
ANR	1170374	Identifier	with_reg_prefix		1170116	0					
ANR	1170375	BreakStatement	break ;	785:1:21768:21773	1170116	2	True				
ANR	1170376	Label	case 'A' :	787:6:21782:21790	1170116	3	True				
ANR	1170377	IfStatement	if ( with_reg_prefix )		1170116	4					
ANR	1170378	Condition	with_reg_prefix	788:11:21803:21817	1170116	0	True				
ANR	1170379	Identifier	with_reg_prefix		1170116	0					
ANR	1170380	CompoundStatement		68:28:1774:1774	1170116	1					
ANR	1170381	ExpressionStatement	* tp ++ = REGISTER_PREFIX_CHAR	789:8:21830:21858	1170116	0	True				
ANR	1170382	AssignmentExpression	* tp ++ = REGISTER_PREFIX_CHAR		1170116	0		=			
ANR	1170383	UnaryOperationExpression	* tp ++		1170116	0					
ANR	1170384	UnaryOperator	*		1170116	0					
ANR	1170385	PostIncDecOperationExpression	tp ++		1170116	1					
ANR	1170386	Identifier	tp		1170116	0					
ANR	1170387	IncDec	++		1170116	1					
ANR	1170388	Identifier	REGISTER_PREFIX_CHAR		1170116	1					
ANR	1170389	ExpressionStatement	* tp ++ = 'a'	791:7:21876:21887	1170116	5	True				
ANR	1170390	AssignmentExpression	* tp ++ = 'a'		1170116	0		=			
ANR	1170391	UnaryOperationExpression	* tp ++		1170116	0					
ANR	1170392	UnaryOperator	*		1170116	0					
ANR	1170393	PostIncDecOperationExpression	tp ++		1170116	1					
ANR	1170394	Identifier	tp		1170116	0					
ANR	1170395	IncDec	++		1170116	1					
ANR	1170396	PrimaryExpression	'a'		1170116	1					
ANR	1170397	ExpressionStatement	* tp ++ = 'c'	792:7:21896:21907	1170116	6	True				
ANR	1170398	AssignmentExpression	* tp ++ = 'c'		1170116	0		=			
ANR	1170399	UnaryOperationExpression	* tp ++		1170116	0					
ANR	1170400	UnaryOperator	*		1170116	0					
ANR	1170401	PostIncDecOperationExpression	tp ++		1170116	1					
ANR	1170402	Identifier	tp		1170116	0					
ANR	1170403	IncDec	++		1170116	1					
ANR	1170404	PrimaryExpression	'c'		1170116	1					
ANR	1170405	ExpressionStatement	* tp ++ = 'r'	793:7:21916:21927	1170116	7	True				
ANR	1170406	AssignmentExpression	* tp ++ = 'r'		1170116	0		=			
ANR	1170407	UnaryOperationExpression	* tp ++		1170116	0					
ANR	1170408	UnaryOperator	*		1170116	0					
ANR	1170409	PostIncDecOperationExpression	tp ++		1170116	1					
ANR	1170410	Identifier	tp		1170116	0					
ANR	1170411	IncDec	++		1170116	1					
ANR	1170412	PrimaryExpression	'r'		1170116	1					
ANR	1170413	BreakStatement	break ;	794:7:21936:21941	1170116	8	True				
ANR	1170414	Label	case '[' :	796:6:21951:21959	1170116	9	True				
ANR	1170415	Label	case ']' :	797:6:21967:21975	1170116	10	True				
ANR	1170416	Label	"case ',' :"	798:6:21983:21991	1170116	11	True				
ANR	1170417	ExpressionStatement	* tp ++ = * s	799:1:21994:22004	1170116	12	True				
ANR	1170418	AssignmentExpression	* tp ++ = * s		1170116	0		=			
ANR	1170419	UnaryOperationExpression	* tp ++		1170116	0					
ANR	1170420	UnaryOperator	*		1170116	0					
ANR	1170421	PostIncDecOperationExpression	tp ++		1170116	1					
ANR	1170422	Identifier	tp		1170116	0					
ANR	1170423	IncDec	++		1170116	1					
ANR	1170424	UnaryOperationExpression	* s		1170116	1					
ANR	1170425	UnaryOperator	*		1170116	0					
ANR	1170426	Identifier	s		1170116	1					
ANR	1170427	ExpressionStatement	* tp ++ = ' '	800:1:22007:22018	1170116	13	True				
ANR	1170428	AssignmentExpression	* tp ++ = ' '		1170116	0		=			
ANR	1170429	UnaryOperationExpression	* tp ++		1170116	0					
ANR	1170430	UnaryOperator	*		1170116	0					
ANR	1170431	PostIncDecOperationExpression	tp ++		1170116	1					
ANR	1170432	Identifier	tp		1170116	0					
ANR	1170433	IncDec	++		1170116	1					
ANR	1170434	PrimaryExpression	' '		1170116	1					
ANR	1170435	BreakStatement	break ;	801:1:22021:22026	1170116	14	True				
ANR	1170436	Label	case '!' :	803:6:22035:22043	1170116	15	True				
ANR	1170437	BreakStatement	break ;	807:1:22200:22205	1170116	16	True				
ANR	1170438	Label	case 'd' :	809:6:22214:22222	1170116	17	True				
ANR	1170439	BreakStatement	break ;	812:1:22309:22314	1170116	18	True				
ANR	1170440	Label	case 'B' :	814:6:22323:22331	1170116	19	True				
ANR	1170441	ExpressionStatement	prefix_opcodep = NULL	818:1:22500:22521	1170116	20	True				
ANR	1170442	AssignmentExpression	prefix_opcodep = NULL		1170116	0		=			
ANR	1170443	Identifier	prefix_opcodep		1170116	0					
ANR	1170444	Identifier	NULL		1170116	1					
ANR	1170445	BreakStatement	break ;	819:1:22524:22529	1170116	21	True				
ANR	1170446	Label	case 'D' :	821:6:22538:22546	1170116	22	True				
ANR	1170447	Label	case 'r' :	822:6:22554:22562	1170116	23	True				
ANR	1170448	ExpressionStatement	"tp = format_reg ( disdata , insn & 15 , tp , with_reg_prefix )"	823:2:22566:22623	1170116	24	True				
ANR	1170449	AssignmentExpression	"tp = format_reg ( disdata , insn & 15 , tp , with_reg_prefix )"		1170116	0		=			
ANR	1170450	Identifier	tp		1170116	0					
ANR	1170451	CallExpression	"format_reg ( disdata , insn & 15 , tp , with_reg_prefix )"		1170116	1					
ANR	1170452	Callee	format_reg		1170116	0					
ANR	1170453	Identifier	format_reg		1170116	0					
ANR	1170454	ArgumentList	disdata		1170116	1					
ANR	1170455	Argument	disdata		1170116	0					
ANR	1170456	Identifier	disdata		1170116	0					
ANR	1170457	Argument	insn & 15		1170116	1					
ANR	1170458	BitAndExpression	insn & 15		1170116	0		&			
ANR	1170459	Identifier	insn		1170116	0					
ANR	1170460	PrimaryExpression	15		1170116	1					
ANR	1170461	Argument	tp		1170116	2					
ANR	1170462	Identifier	tp		1170116	0					
ANR	1170463	Argument	with_reg_prefix		1170116	3					
ANR	1170464	Identifier	with_reg_prefix		1170116	0					
ANR	1170465	BreakStatement	break ;	824:2:22627:22632	1170116	25	True				
ANR	1170466	Label	case 'R' :	825:6:22640:22648	1170116	26	True				
ANR	1170467	ExpressionStatement	"tp = format_reg ( disdata , ( insn >> 12 ) & 15 , tp , with_reg_prefix )"	826:2:22652:22717	1170116	27	True				
ANR	1170468	AssignmentExpression	"tp = format_reg ( disdata , ( insn >> 12 ) & 15 , tp , with_reg_prefix )"		1170116	0		=			
ANR	1170469	Identifier	tp		1170116	0					
ANR	1170470	CallExpression	"format_reg ( disdata , ( insn >> 12 ) & 15 , tp , with_reg_prefix )"		1170116	1					
ANR	1170471	Callee	format_reg		1170116	0					
ANR	1170472	Identifier	format_reg		1170116	0					
ANR	1170473	ArgumentList	disdata		1170116	1					
ANR	1170474	Argument	disdata		1170116	0					
ANR	1170475	Identifier	disdata		1170116	0					
ANR	1170476	Argument	( insn >> 12 ) & 15		1170116	1					
ANR	1170477	BitAndExpression	( insn >> 12 ) & 15		1170116	0		&			
ANR	1170478	ShiftExpression	insn >> 12		1170116	0		>>			
ANR	1170479	Identifier	insn		1170116	0					
ANR	1170480	PrimaryExpression	12		1170116	1					
ANR	1170481	PrimaryExpression	15		1170116	1					
ANR	1170482	Argument	tp		1170116	2					
ANR	1170483	Identifier	tp		1170116	0					
ANR	1170484	Argument	with_reg_prefix		1170116	3					
ANR	1170485	Identifier	with_reg_prefix		1170116	0					
ANR	1170486	BreakStatement	break ;	827:2:22721:22726	1170116	28	True				
ANR	1170487	Label	case 'n' :	829:6:22735:22743	1170116	29	True				
ANR	1170488	CompoundStatement		112:3:2764:2885	1170116	30					
ANR	1170489	IdentifierDeclStatement	unsigned long long number = ( buffer [ 2 ] + buffer [ 3 ] * 256 + buffer [ 4 ] * 65536 + buffer [ 5 ] * 0x1000000 + addr ) ;	832:3:22810:22931	1170116	0	True				
ANR	1170490	IdentifierDecl	number = ( buffer [ 2 ] + buffer [ 3 ] * 256 + buffer [ 4 ] * 65536 + buffer [ 5 ] * 0x1000000 + addr )		1170116	0					
ANR	1170491	IdentifierDeclType	unsigned long long		1170116	0					
ANR	1170492	Identifier	number		1170116	1					
ANR	1170493	AssignmentExpression	number = ( buffer [ 2 ] + buffer [ 3 ] * 256 + buffer [ 4 ] * 65536 + buffer [ 5 ] * 0x1000000 + addr )		1170116	2		=			
ANR	1170494	Identifier	number		1170116	0					
ANR	1170495	AdditiveExpression	buffer [ 2 ] + buffer [ 3 ] * 256 + buffer [ 4 ] * 65536 + buffer [ 5 ] * 0x1000000 + addr		1170116	1		+			
ANR	1170496	ArrayIndexing	buffer [ 2 ]		1170116	0					
ANR	1170497	Identifier	buffer		1170116	0					
ANR	1170498	PrimaryExpression	2		1170116	1					
ANR	1170499	AdditiveExpression	buffer [ 3 ] * 256 + buffer [ 4 ] * 65536 + buffer [ 5 ] * 0x1000000 + addr		1170116	1		+			
ANR	1170500	MultiplicativeExpression	buffer [ 3 ] * 256		1170116	0		*			
ANR	1170501	ArrayIndexing	buffer [ 3 ]		1170116	0					
ANR	1170502	Identifier	buffer		1170116	0					
ANR	1170503	PrimaryExpression	3		1170116	1					
ANR	1170504	PrimaryExpression	256		1170116	1					
ANR	1170505	AdditiveExpression	buffer [ 4 ] * 65536 + buffer [ 5 ] * 0x1000000 + addr		1170116	1		+			
ANR	1170506	MultiplicativeExpression	buffer [ 4 ] * 65536		1170116	0		*			
ANR	1170507	ArrayIndexing	buffer [ 4 ]		1170116	0					
ANR	1170508	Identifier	buffer		1170116	0					
ANR	1170509	PrimaryExpression	4		1170116	1					
ANR	1170510	PrimaryExpression	65536		1170116	1					
ANR	1170511	AdditiveExpression	buffer [ 5 ] * 0x1000000 + addr		1170116	1		+			
ANR	1170512	MultiplicativeExpression	buffer [ 5 ] * 0x1000000		1170116	0		*			
ANR	1170513	ArrayIndexing	buffer [ 5 ]		1170116	0					
ANR	1170514	Identifier	buffer		1170116	0					
ANR	1170515	PrimaryExpression	5		1170116	1					
ANR	1170516	PrimaryExpression	0x1000000		1170116	1					
ANR	1170517	Identifier	addr		1170116	1					
ANR	1170518	ExpressionStatement	* tp = 0	837:3:22995:23002	1170116	1	True				
ANR	1170519	AssignmentExpression	* tp = 0		1170116	0		=			
ANR	1170520	UnaryOperationExpression	* tp		1170116	0					
ANR	1170521	UnaryOperator	*		1170116	0					
ANR	1170522	Identifier	tp		1170116	1					
ANR	1170523	PrimaryExpression	0		1170116	1					
ANR	1170524	IfStatement	if ( temp [ 0 ] )		1170116	2					
ANR	1170525	Condition	temp [ 0 ]	838:7:23011:23017	1170116	0	True				
ANR	1170526	ArrayIndexing	temp [ 0 ]		1170116	0					
ANR	1170527	Identifier	temp		1170116	0					
ANR	1170528	PrimaryExpression	0		1170116	1					
ANR	1170529	CompoundStatement		118:16:2974:2974	1170116	1					
ANR	1170530	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , temp )"	839:4:23026:23074	1170116	0	True				
ANR	1170531	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , temp )"		1170116	0					
ANR	1170532	Callee	* info -> fprintf_func		1170116	0					
ANR	1170533	UnaryOperationExpression	* info -> fprintf_func		1170116	0					
ANR	1170534	UnaryOperator	*		1170116	0					
ANR	1170535	PtrMemberAccess	info -> fprintf_func		1170116	1					
ANR	1170536	Identifier	info		1170116	0					
ANR	1170537	Identifier	fprintf_func		1170116	1					
ANR	1170538	ArgumentList	info -> stream		1170116	1					
ANR	1170539	Argument	info -> stream		1170116	0					
ANR	1170540	PtrMemberAccess	info -> stream		1170116	0					
ANR	1170541	Identifier	info		1170116	0					
ANR	1170542	Identifier	stream		1170116	1					
ANR	1170543	Argument	"""%s"""		1170116	1					
ANR	1170544	PrimaryExpression	"""%s"""		1170116	0					
ANR	1170545	Argument	temp		1170116	2					
ANR	1170546	Identifier	temp		1170116	0					
ANR	1170547	ExpressionStatement	tp = temp	841:3:23084:23093	1170116	3	True				
ANR	1170548	AssignmentExpression	tp = temp		1170116	0		=			
ANR	1170549	Identifier	tp		1170116	0					
ANR	1170550	Identifier	temp		1170116	1					
ANR	1170551	ExpressionStatement	"( * info -> print_address_func ) ( ( bfd_vma ) number , info )"	843:3:23099:23151	1170116	4	True				
ANR	1170552	CallExpression	"( * info -> print_address_func ) ( ( bfd_vma ) number , info )"		1170116	0					
ANR	1170553	Callee	* info -> print_address_func		1170116	0					
ANR	1170554	UnaryOperationExpression	* info -> print_address_func		1170116	0					
ANR	1170555	UnaryOperator	*		1170116	0					
ANR	1170556	PtrMemberAccess	info -> print_address_func		1170116	1					
ANR	1170557	Identifier	info		1170116	0					
ANR	1170558	Identifier	print_address_func		1170116	1					
ANR	1170559	ArgumentList	( bfd_vma ) number		1170116	1					
ANR	1170560	Argument	( bfd_vma ) number		1170116	0					
ANR	1170561	CastExpression	( bfd_vma ) number		1170116	0					
ANR	1170562	CastTarget	bfd_vma		1170116	0					
ANR	1170563	Identifier	number		1170116	1					
ANR	1170564	Argument	info		1170116	1					
ANR	1170565	Identifier	info		1170116	0					
ANR	1170566	BreakStatement	break ;	845:1:23157:23162	1170116	31	True				
ANR	1170567	Label	case 'u' :	847:6:23171:23179	1170116	32	True				
ANR	1170568	CompoundStatement		130:3:3207:3258	1170116	33					
ANR	1170569	IdentifierDeclStatement	unsigned long number = ( buffer [ 0 ] & 0xf ) * 2 + addr ;	850:3:23253:23304	1170116	0	True				
ANR	1170570	IdentifierDecl	number = ( buffer [ 0 ] & 0xf ) * 2 + addr		1170116	0					
ANR	1170571	IdentifierDeclType	unsigned long		1170116	0					
ANR	1170572	Identifier	number		1170116	1					
ANR	1170573	AssignmentExpression	number = ( buffer [ 0 ] & 0xf ) * 2 + addr		1170116	2		=			
ANR	1170574	Identifier	number		1170116	0					
ANR	1170575	AdditiveExpression	( buffer [ 0 ] & 0xf ) * 2 + addr		1170116	1		+			
ANR	1170576	MultiplicativeExpression	( buffer [ 0 ] & 0xf ) * 2		1170116	0		*			
ANR	1170577	BitAndExpression	buffer [ 0 ] & 0xf		1170116	0		&			
ANR	1170578	ArrayIndexing	buffer [ 0 ]		1170116	0					
ANR	1170579	Identifier	buffer		1170116	0					
ANR	1170580	PrimaryExpression	0		1170116	1					
ANR	1170581	PrimaryExpression	0xf		1170116	1					
ANR	1170582	PrimaryExpression	2		1170116	1					
ANR	1170583	Identifier	addr		1170116	1					
ANR	1170584	ExpressionStatement	* tp = 0	853:3:23368:23375	1170116	1	True				
ANR	1170585	AssignmentExpression	* tp = 0		1170116	0		=			
ANR	1170586	UnaryOperationExpression	* tp		1170116	0					
ANR	1170587	UnaryOperator	*		1170116	0					
ANR	1170588	Identifier	tp		1170116	1					
ANR	1170589	PrimaryExpression	0		1170116	1					
ANR	1170590	IfStatement	if ( temp [ 0 ] )		1170116	2					
ANR	1170591	Condition	temp [ 0 ]	854:7:23384:23390	1170116	0	True				
ANR	1170592	ArrayIndexing	temp [ 0 ]		1170116	0					
ANR	1170593	Identifier	temp		1170116	0					
ANR	1170594	PrimaryExpression	0		1170116	1					
ANR	1170595	CompoundStatement		134:16:3347:3347	1170116	1					
ANR	1170596	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , temp )"	855:4:23399:23447	1170116	0	True				
ANR	1170597	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , temp )"		1170116	0					
ANR	1170598	Callee	* info -> fprintf_func		1170116	0					
ANR	1170599	UnaryOperationExpression	* info -> fprintf_func		1170116	0					
ANR	1170600	UnaryOperator	*		1170116	0					
ANR	1170601	PtrMemberAccess	info -> fprintf_func		1170116	1					
ANR	1170602	Identifier	info		1170116	0					
ANR	1170603	Identifier	fprintf_func		1170116	1					
ANR	1170604	ArgumentList	info -> stream		1170116	1					
ANR	1170605	Argument	info -> stream		1170116	0					
ANR	1170606	PtrMemberAccess	info -> stream		1170116	0					
ANR	1170607	Identifier	info		1170116	0					
ANR	1170608	Identifier	stream		1170116	1					
ANR	1170609	Argument	"""%s"""		1170116	1					
ANR	1170610	PrimaryExpression	"""%s"""		1170116	0					
ANR	1170611	Argument	temp		1170116	2					
ANR	1170612	Identifier	temp		1170116	0					
ANR	1170613	ExpressionStatement	tp = temp	857:3:23457:23466	1170116	3	True				
ANR	1170614	AssignmentExpression	tp = temp		1170116	0		=			
ANR	1170615	Identifier	tp		1170116	0					
ANR	1170616	Identifier	temp		1170116	1					
ANR	1170617	ExpressionStatement	"( * info -> print_address_func ) ( ( bfd_vma ) number , info )"	859:3:23472:23524	1170116	4	True				
ANR	1170618	CallExpression	"( * info -> print_address_func ) ( ( bfd_vma ) number , info )"		1170116	0					
ANR	1170619	Callee	* info -> print_address_func		1170116	0					
ANR	1170620	UnaryOperationExpression	* info -> print_address_func		1170116	0					
ANR	1170621	UnaryOperator	*		1170116	0					
ANR	1170622	PtrMemberAccess	info -> print_address_func		1170116	1					
ANR	1170623	Identifier	info		1170116	0					
ANR	1170624	Identifier	print_address_func		1170116	1					
ANR	1170625	ArgumentList	( bfd_vma ) number		1170116	1					
ANR	1170626	Argument	( bfd_vma ) number		1170116	0					
ANR	1170627	CastExpression	( bfd_vma ) number		1170116	0					
ANR	1170628	CastTarget	bfd_vma		1170116	0					
ANR	1170629	Identifier	number		1170116	1					
ANR	1170630	Argument	info		1170116	1					
ANR	1170631	Identifier	info		1170116	0					
ANR	1170632	BreakStatement	break ;	861:1:23530:23535	1170116	34	True				
ANR	1170633	Label	case 'N' :	863:6:23544:23552	1170116	35	True				
ANR	1170634	Label	case 'y' :	864:6:23560:23568	1170116	36	True				
ANR	1170635	Label	case 'Y' :	865:6:23576:23584	1170116	37	True				
ANR	1170636	Label	case 'S' :	866:6:23592:23600	1170116	38	True				
ANR	1170637	Label	case 's' :	867:6:23608:23616	1170116	39	True				
ANR	1170638	IfStatement	if ( ( insn & 0x400 ) && ( insn & 15 ) == 15 && ! prefix_opcodep )		1170116	40					
ANR	1170639	Condition	( insn & 0x400 ) && ( insn & 15 ) == 15 && ! prefix_opcodep	869:5:23660:23713	1170116	0	True				
ANR	1170640	AndExpression	( insn & 0x400 ) && ( insn & 15 ) == 15 && ! prefix_opcodep		1170116	0		&&			
ANR	1170641	BitAndExpression	insn & 0x400		1170116	0		&			
ANR	1170642	Identifier	insn		1170116	0					
ANR	1170643	PrimaryExpression	0x400		1170116	1					
ANR	1170644	AndExpression	( insn & 15 ) == 15 && ! prefix_opcodep		1170116	1		&&			
ANR	1170645	EqualityExpression	( insn & 15 ) == 15		1170116	0		==			
ANR	1170646	BitAndExpression	insn & 15		1170116	0		&			
ANR	1170647	Identifier	insn		1170116	0					
ANR	1170648	PrimaryExpression	15		1170116	1					
ANR	1170649	PrimaryExpression	15		1170116	1					
ANR	1170650	UnaryOperationExpression	! prefix_opcodep		1170116	1					
ANR	1170651	UnaryOperator	!		1170116	0					
ANR	1170652	Identifier	prefix_opcodep		1170116	1					
ANR	1170653	CompoundStatement		157:5:3934:3944	1170116	1					
ANR	1170654	IdentifierDeclStatement	long number ;	873:5:23861:23872	1170116	0	True				
ANR	1170655	IdentifierDecl	number		1170116	0					
ANR	1170656	IdentifierDeclType	long		1170116	0					
ANR	1170657	Identifier	number		1170116	1					
ANR	1170658	IdentifierDeclStatement	int signedp = ( ( * cs == 'z' && ( insn & 0x20 ) ) || opcodep -> match == BDAP_QUICK_OPCODE ) ;	874:5:23879:23973	1170116	1	True				
ANR	1170659	IdentifierDecl	signedp = ( ( * cs == 'z' && ( insn & 0x20 ) ) || opcodep -> match == BDAP_QUICK_OPCODE )		1170116	0					
ANR	1170660	IdentifierDeclType	int		1170116	0					
ANR	1170661	Identifier	signedp		1170116	1					
ANR	1170662	AssignmentExpression	signedp = ( ( * cs == 'z' && ( insn & 0x20 ) ) || opcodep -> match == BDAP_QUICK_OPCODE )		1170116	2		=			
ANR	1170663	Identifier	signedp		1170116	0					
ANR	1170664	OrExpression	( * cs == 'z' && ( insn & 0x20 ) ) || opcodep -> match == BDAP_QUICK_OPCODE		1170116	1		||			
ANR	1170665	AndExpression	* cs == 'z' && ( insn & 0x20 )		1170116	0		&&			
ANR	1170666	EqualityExpression	* cs == 'z'		1170116	0		==			
ANR	1170667	UnaryOperationExpression	* cs		1170116	0					
ANR	1170668	UnaryOperator	*		1170116	0					
ANR	1170669	Identifier	cs		1170116	1					
ANR	1170670	PrimaryExpression	'z'		1170116	1					
ANR	1170671	BitAndExpression	insn & 0x20		1170116	1		&			
ANR	1170672	Identifier	insn		1170116	0					
ANR	1170673	PrimaryExpression	0x20		1170116	1					
ANR	1170674	EqualityExpression	opcodep -> match == BDAP_QUICK_OPCODE		1170116	1		==			
ANR	1170675	PtrMemberAccess	opcodep -> match		1170116	0					
ANR	1170676	Identifier	opcodep		1170116	0					
ANR	1170677	Identifier	match		1170116	1					
ANR	1170678	Identifier	BDAP_QUICK_OPCODE		1170116	1					
ANR	1170679	IdentifierDeclStatement	int nbytes ;	877:5:23980:23990	1170116	2	True				
ANR	1170680	IdentifierDecl	nbytes		1170116	0					
ANR	1170681	IdentifierDeclType	int		1170116	0					
ANR	1170682	Identifier	nbytes		1170116	1					
ANR	1170683	IfStatement	if ( opcodep -> imm_oprnd_size == SIZE_FIX_32 )		1170116	3					
ANR	1170684	Condition	opcodep -> imm_oprnd_size == SIZE_FIX_32	879:9:24002:24039	1170116	0	True				
ANR	1170685	EqualityExpression	opcodep -> imm_oprnd_size == SIZE_FIX_32		1170116	0		==			
ANR	1170686	PtrMemberAccess	opcodep -> imm_oprnd_size		1170116	0					
ANR	1170687	Identifier	opcodep		1170116	0					
ANR	1170688	Identifier	imm_oprnd_size		1170116	1					
ANR	1170689	Identifier	SIZE_FIX_32		1170116	1					
ANR	1170690	CompoundStatement		159:49:3996:3996	1170116	1					
ANR	1170691	ExpressionStatement	nbytes = 4	880:6:24050:24060	1170116	0	True				
ANR	1170692	AssignmentExpression	nbytes = 4		1170116	0		=			
ANR	1170693	Identifier	nbytes		1170116	0					
ANR	1170694	PrimaryExpression	4		1170116	1					
ANR	1170695	ElseStatement	else		1170116	0					
ANR	1170696	IfStatement	if ( opcodep -> imm_oprnd_size == SIZE_SPEC_REG )		1170116	0					
ANR	1170697	Condition	opcodep -> imm_oprnd_size == SIZE_SPEC_REG	881:16:24078:24117	1170116	0	True				
ANR	1170698	EqualityExpression	opcodep -> imm_oprnd_size == SIZE_SPEC_REG		1170116	0		==			
ANR	1170699	PtrMemberAccess	opcodep -> imm_oprnd_size		1170116	0					
ANR	1170700	Identifier	opcodep		1170116	0					
ANR	1170701	Identifier	imm_oprnd_size		1170116	1					
ANR	1170702	Identifier	SIZE_SPEC_REG		1170116	1					
ANR	1170703	CompoundStatement		162:6:4082:4169	1170116	1					
ANR	1170704	IdentifierDeclStatement	"const struct cris_spec_reg * sregp = spec_reg_info ( ( insn >> 12 ) & 15 , disdata -> distype ) ;"	882:6:24128:24215	1170116	0	True				
ANR	1170705	IdentifierDecl	"* sregp = spec_reg_info ( ( insn >> 12 ) & 15 , disdata -> distype )"		1170116	0					
ANR	1170706	IdentifierDeclType	const struct cris_spec_reg *		1170116	0					
ANR	1170707	Identifier	sregp		1170116	1					
ANR	1170708	AssignmentExpression	"* sregp = spec_reg_info ( ( insn >> 12 ) & 15 , disdata -> distype )"		1170116	2		=			
ANR	1170709	Identifier	sregp		1170116	0					
ANR	1170710	CallExpression	"spec_reg_info ( ( insn >> 12 ) & 15 , disdata -> distype )"		1170116	1					
ANR	1170711	Callee	spec_reg_info		1170116	0					
ANR	1170712	Identifier	spec_reg_info		1170116	0					
ANR	1170713	ArgumentList	( insn >> 12 ) & 15		1170116	1					
ANR	1170714	Argument	( insn >> 12 ) & 15		1170116	0					
ANR	1170715	BitAndExpression	( insn >> 12 ) & 15		1170116	0		&			
ANR	1170716	ShiftExpression	insn >> 12		1170116	0		>>			
ANR	1170717	Identifier	insn		1170116	0					
ANR	1170718	PrimaryExpression	12		1170116	1					
ANR	1170719	PrimaryExpression	15		1170116	1					
ANR	1170720	Argument	disdata -> distype		1170116	1					
ANR	1170721	PtrMemberAccess	disdata -> distype		1170116	0					
ANR	1170722	Identifier	disdata		1170116	0					
ANR	1170723	Identifier	distype		1170116	1					
ANR	1170724	IfStatement	if ( ! sregp )		1170116	1					
ANR	1170725	Condition	! sregp	887:10:24364:24369	1170116	0	True				
ANR	1170726	UnaryOperationExpression	! sregp		1170116	0					
ANR	1170727	UnaryOperator	!		1170116	0					
ANR	1170728	Identifier	sregp		1170116	1					
ANR	1170729	CompoundStatement		167:18:4326:4326	1170116	1					
ANR	1170730	ExpressionStatement	nbytes = 42	889:7:24420:24431	1170116	0	True				
ANR	1170731	AssignmentExpression	nbytes = 42		1170116	0		=			
ANR	1170732	Identifier	nbytes		1170116	0					
ANR	1170733	PrimaryExpression	42		1170116	1					
ANR	1170734	ElseStatement	else		1170116	0					
ANR	1170735	CompoundStatement		170:13:4400:4400	1170116	0					
ANR	1170736	ExpressionStatement	nbytes = disdata -> distype == cris_dis_v32 ? 4 : ( sregp -> reg_size + 1 ) & ~1	894:7:24596:24690	1170116	0	True				
ANR	1170737	AssignmentExpression	nbytes = disdata -> distype == cris_dis_v32 ? 4 : ( sregp -> reg_size + 1 ) & ~1		1170116	0		=			
ANR	1170738	Identifier	nbytes		1170116	0					
ANR	1170739	ConditionalExpression	disdata -> distype == cris_dis_v32 ? 4 : ( sregp -> reg_size + 1 ) & ~1		1170116	1					
ANR	1170740	Condition	disdata -> distype == cris_dis_v32		1170116	0					
ANR	1170741	EqualityExpression	disdata -> distype == cris_dis_v32		1170116	0		==			
ANR	1170742	PtrMemberAccess	disdata -> distype		1170116	0					
ANR	1170743	Identifier	disdata		1170116	0					
ANR	1170744	Identifier	distype		1170116	1					
ANR	1170745	Identifier	cris_dis_v32		1170116	1					
ANR	1170746	PrimaryExpression	4		1170116	1					
ANR	1170747	BitAndExpression	( sregp -> reg_size + 1 ) & ~1		1170116	2		&			
ANR	1170748	AdditiveExpression	sregp -> reg_size + 1		1170116	0		+			
ANR	1170749	PtrMemberAccess	sregp -> reg_size		1170116	0					
ANR	1170750	Identifier	sregp		1170116	0					
ANR	1170751	Identifier	reg_size		1170116	1					
ANR	1170752	PrimaryExpression	1		1170116	1					
ANR	1170753	Identifier	~1		1170116	1					
ANR	1170754	ElseStatement	else		1170116	0					
ANR	1170755	CompoundStatement		181:2:4684:4741	1170116	0					
ANR	1170756	IdentifierDeclStatement	int mode_size = 1 << ( ( insn >> 4 ) & ( * cs == 'z' ? 1 : 3 ) ) ;	901:2:24730:24787	1170116	0	True				
ANR	1170757	IdentifierDecl	mode_size = 1 << ( ( insn >> 4 ) & ( * cs == 'z' ? 1 : 3 ) )		1170116	0					
ANR	1170758	IdentifierDeclType	int		1170116	0					
ANR	1170759	Identifier	mode_size		1170116	1					
ANR	1170760	AssignmentExpression	mode_size = 1 << ( ( insn >> 4 ) & ( * cs == 'z' ? 1 : 3 ) )		1170116	2		=			
ANR	1170761	Identifier	mode_size		1170116	0					
ANR	1170762	ShiftExpression	1 << ( ( insn >> 4 ) & ( * cs == 'z' ? 1 : 3 ) )		1170116	1		<<			
ANR	1170763	PrimaryExpression	1		1170116	0					
ANR	1170764	BitAndExpression	( insn >> 4 ) & ( * cs == 'z' ? 1 : 3 )		1170116	1		&			
ANR	1170765	ShiftExpression	insn >> 4		1170116	0		>>			
ANR	1170766	Identifier	insn		1170116	0					
ANR	1170767	PrimaryExpression	4		1170116	1					
ANR	1170768	ConditionalExpression	* cs == 'z' ? 1 : 3		1170116	1					
ANR	1170769	Condition	* cs == 'z'		1170116	0					
ANR	1170770	EqualityExpression	* cs == 'z'		1170116	0		==			
ANR	1170771	UnaryOperationExpression	* cs		1170116	0					
ANR	1170772	UnaryOperator	*		1170116	0					
ANR	1170773	Identifier	cs		1170116	1					
ANR	1170774	PrimaryExpression	'z'		1170116	1					
ANR	1170775	PrimaryExpression	1		1170116	1					
ANR	1170776	PrimaryExpression	3		1170116	2					
ANR	1170777	IfStatement	if ( mode_size == 1 )		1170116	1					
ANR	1170778	Condition	mode_size == 1	903:6:24796:24809	1170116	0	True				
ANR	1170779	EqualityExpression	mode_size == 1		1170116	0		==			
ANR	1170780	Identifier	mode_size		1170116	0					
ANR	1170781	PrimaryExpression	1		1170116	1					
ANR	1170782	CompoundStatement		183:22:4766:4766	1170116	1					
ANR	1170783	ExpressionStatement	nbytes = 2	904:3:24817:24827	1170116	0	True				
ANR	1170784	AssignmentExpression	nbytes = 2		1170116	0		=			
ANR	1170785	Identifier	nbytes		1170116	0					
ANR	1170786	PrimaryExpression	2		1170116	1					
ANR	1170787	ElseStatement	else		1170116	0					
ANR	1170788	CompoundStatement		185:9:4792:4792	1170116	0					
ANR	1170789	ExpressionStatement	nbytes = mode_size	906:3:24843:24861	1170116	0	True				
ANR	1170790	AssignmentExpression	nbytes = mode_size		1170116	0		=			
ANR	1170791	Identifier	nbytes		1170116	0					
ANR	1170792	Identifier	mode_size		1170116	1					
ANR	1170793	SwitchStatement	switch ( nbytes )		1170116	4					
ANR	1170794	Condition	nbytes	910:13:24890:24895	1170116	0	True				
ANR	1170795	Identifier	nbytes		1170116	0					
ANR	1170796	CompoundStatement		191:7:4859:4859	1170116	1					
ANR	1170797	Label	case 1 :	912:7:24914:24920	1170116	0	True				
ANR	1170798	ExpressionStatement	number = buffer [ 2 ]	913:2:24924:24942	1170116	1	True				
ANR	1170799	AssignmentExpression	number = buffer [ 2 ]		1170116	0		=			
ANR	1170800	Identifier	number		1170116	0					
ANR	1170801	ArrayIndexing	buffer [ 2 ]		1170116	1					
ANR	1170802	Identifier	buffer		1170116	0					
ANR	1170803	PrimaryExpression	2		1170116	1					
ANR	1170804	IfStatement	if ( signedp && number > 127 )		1170116	2					
ANR	1170805	Condition	signedp && number > 127	914:6:24950:24972	1170116	0	True				
ANR	1170806	AndExpression	signedp && number > 127		1170116	0		&&			
ANR	1170807	Identifier	signedp		1170116	0					
ANR	1170808	RelationalExpression	number > 127		1170116	1		>			
ANR	1170809	Identifier	number		1170116	0					
ANR	1170810	PrimaryExpression	127		1170116	1					
ANR	1170811	CompoundStatement		194:31:4929:4929	1170116	1					
ANR	1170812	ExpressionStatement	number -= 256	915:3:24980:24993	1170116	0	True				
ANR	1170813	AssignmentExpression	number -= 256		1170116	0		-=			
ANR	1170814	Identifier	number		1170116	0					
ANR	1170815	PrimaryExpression	256		1170116	1					
ANR	1170816	BreakStatement	break ;	917:2:25001:25006	1170116	3	True				
ANR	1170817	Label	case 2 :	919:7:25016:25022	1170116	4	True				
ANR	1170818	ExpressionStatement	number = buffer [ 2 ] + buffer [ 3 ] * 256	920:2:25026:25062	1170116	5	True				
ANR	1170819	AssignmentExpression	number = buffer [ 2 ] + buffer [ 3 ] * 256		1170116	0		=			
ANR	1170820	Identifier	number		1170116	0					
ANR	1170821	AdditiveExpression	buffer [ 2 ] + buffer [ 3 ] * 256		1170116	1		+			
ANR	1170822	ArrayIndexing	buffer [ 2 ]		1170116	0					
ANR	1170823	Identifier	buffer		1170116	0					
ANR	1170824	PrimaryExpression	2		1170116	1					
ANR	1170825	MultiplicativeExpression	buffer [ 3 ] * 256		1170116	1		*			
ANR	1170826	ArrayIndexing	buffer [ 3 ]		1170116	0					
ANR	1170827	Identifier	buffer		1170116	0					
ANR	1170828	PrimaryExpression	3		1170116	1					
ANR	1170829	PrimaryExpression	256		1170116	1					
ANR	1170830	IfStatement	if ( signedp && number > 32767 )		1170116	6					
ANR	1170831	Condition	signedp && number > 32767	921:6:25070:25094	1170116	0	True				
ANR	1170832	AndExpression	signedp && number > 32767		1170116	0		&&			
ANR	1170833	Identifier	signedp		1170116	0					
ANR	1170834	RelationalExpression	number > 32767		1170116	1		>			
ANR	1170835	Identifier	number		1170116	0					
ANR	1170836	PrimaryExpression	32767		1170116	1					
ANR	1170837	CompoundStatement		201:33:5051:5051	1170116	1					
ANR	1170838	ExpressionStatement	number -= 65536	922:3:25102:25117	1170116	0	True				
ANR	1170839	AssignmentExpression	number -= 65536		1170116	0		-=			
ANR	1170840	Identifier	number		1170116	0					
ANR	1170841	PrimaryExpression	65536		1170116	1					
ANR	1170842	BreakStatement	break ;	924:2:25125:25130	1170116	7	True				
ANR	1170843	Label	case 4 :	926:7:25140:25146	1170116	8	True				
ANR	1170844	ExpressionStatement	number = buffer [ 2 ] + buffer [ 3 ] * 256 + buffer [ 4 ] * 65536 + buffer [ 5 ] * 0x1000000	927:2:25150:25238	1170116	9	True				
ANR	1170845	AssignmentExpression	number = buffer [ 2 ] + buffer [ 3 ] * 256 + buffer [ 4 ] * 65536 + buffer [ 5 ] * 0x1000000		1170116	0		=			
ANR	1170846	Identifier	number		1170116	0					
ANR	1170847	AdditiveExpression	buffer [ 2 ] + buffer [ 3 ] * 256 + buffer [ 4 ] * 65536 + buffer [ 5 ] * 0x1000000		1170116	1		+			
ANR	1170848	ArrayIndexing	buffer [ 2 ]		1170116	0					
ANR	1170849	Identifier	buffer		1170116	0					
ANR	1170850	PrimaryExpression	2		1170116	1					
ANR	1170851	AdditiveExpression	buffer [ 3 ] * 256 + buffer [ 4 ] * 65536 + buffer [ 5 ] * 0x1000000		1170116	1		+			
ANR	1170852	MultiplicativeExpression	buffer [ 3 ] * 256		1170116	0		*			
ANR	1170853	ArrayIndexing	buffer [ 3 ]		1170116	0					
ANR	1170854	Identifier	buffer		1170116	0					
ANR	1170855	PrimaryExpression	3		1170116	1					
ANR	1170856	PrimaryExpression	256		1170116	1					
ANR	1170857	AdditiveExpression	buffer [ 4 ] * 65536 + buffer [ 5 ] * 0x1000000		1170116	1		+			
ANR	1170858	MultiplicativeExpression	buffer [ 4 ] * 65536		1170116	0		*			
ANR	1170859	ArrayIndexing	buffer [ 4 ]		1170116	0					
ANR	1170860	Identifier	buffer		1170116	0					
ANR	1170861	PrimaryExpression	4		1170116	1					
ANR	1170862	PrimaryExpression	65536		1170116	1					
ANR	1170863	MultiplicativeExpression	buffer [ 5 ] * 0x1000000		1170116	1		*			
ANR	1170864	ArrayIndexing	buffer [ 5 ]		1170116	0					
ANR	1170865	Identifier	buffer		1170116	0					
ANR	1170866	PrimaryExpression	5		1170116	1					
ANR	1170867	PrimaryExpression	0x1000000		1170116	1					
ANR	1170868	BreakStatement	break ;	930:2:25242:25247	1170116	10	True				
ANR	1170869	Label	default :	932:7:25257:25264	1170116	11	True				
ANR	1170870	Identifier	default		1170116	0					
ANR	1170871	ExpressionStatement	"strcpy ( tp , ""bug"" )"	933:2:25268:25286	1170116	12	True				
ANR	1170872	CallExpression	"strcpy ( tp , ""bug"" )"		1170116	0					
ANR	1170873	Callee	strcpy		1170116	0					
ANR	1170874	Identifier	strcpy		1170116	0					
ANR	1170875	ArgumentList	tp		1170116	1					
ANR	1170876	Argument	tp		1170116	0					
ANR	1170877	Identifier	tp		1170116	0					
ANR	1170878	Argument	"""bug"""		1170116	1					
ANR	1170879	PrimaryExpression	"""bug"""		1170116	0					
ANR	1170880	ExpressionStatement	tp += 3	934:2:25290:25297	1170116	13	True				
ANR	1170881	AssignmentExpression	tp += 3		1170116	0		+=			
ANR	1170882	Identifier	tp		1170116	0					
ANR	1170883	PrimaryExpression	3		1170116	1					
ANR	1170884	ExpressionStatement	number = 42	935:2:25301:25312	1170116	14	True				
ANR	1170885	AssignmentExpression	number = 42		1170116	0		=			
ANR	1170886	Identifier	number		1170116	0					
ANR	1170887	PrimaryExpression	42		1170116	1					
ANR	1170888	IfStatement	if ( ( * cs == 'z' && ( insn & 0x20 ) ) || ( opcodep -> match == BDAP_QUICK_OPCODE && ( nbytes <= 2 || buffer [ 1 + nbytes ] == 0 ) ) )		1170116	5					
ANR	1170889	Condition	( * cs == 'z' && ( insn & 0x20 ) ) || ( opcodep -> match == BDAP_QUICK_OPCODE && ( nbytes <= 2 || buffer [ 1 + nbytes ] == 0 ) )	938:11:25335:25448	1170116	0	True				
ANR	1170890	OrExpression	( * cs == 'z' && ( insn & 0x20 ) ) || ( opcodep -> match == BDAP_QUICK_OPCODE && ( nbytes <= 2 || buffer [ 1 + nbytes ] == 0 ) )		1170116	0		||			
ANR	1170891	AndExpression	* cs == 'z' && ( insn & 0x20 )		1170116	0		&&			
ANR	1170892	EqualityExpression	* cs == 'z'		1170116	0		==			
ANR	1170893	UnaryOperationExpression	* cs		1170116	0					
ANR	1170894	UnaryOperator	*		1170116	0					
ANR	1170895	Identifier	cs		1170116	1					
ANR	1170896	PrimaryExpression	'z'		1170116	1					
ANR	1170897	BitAndExpression	insn & 0x20		1170116	1		&			
ANR	1170898	Identifier	insn		1170116	0					
ANR	1170899	PrimaryExpression	0x20		1170116	1					
ANR	1170900	AndExpression	opcodep -> match == BDAP_QUICK_OPCODE && ( nbytes <= 2 || buffer [ 1 + nbytes ] == 0 )		1170116	1		&&			
ANR	1170901	EqualityExpression	opcodep -> match == BDAP_QUICK_OPCODE		1170116	0		==			
ANR	1170902	PtrMemberAccess	opcodep -> match		1170116	0					
ANR	1170903	Identifier	opcodep		1170116	0					
ANR	1170904	Identifier	match		1170116	1					
ANR	1170905	Identifier	BDAP_QUICK_OPCODE		1170116	1					
ANR	1170906	OrExpression	nbytes <= 2 || buffer [ 1 + nbytes ] == 0		1170116	1		||			
ANR	1170907	RelationalExpression	nbytes <= 2		1170116	0		<=			
ANR	1170908	Identifier	nbytes		1170116	0					
ANR	1170909	PrimaryExpression	2		1170116	1					
ANR	1170910	EqualityExpression	buffer [ 1 + nbytes ] == 0		1170116	1		==			
ANR	1170911	ArrayIndexing	buffer [ 1 + nbytes ]		1170116	0					
ANR	1170912	Identifier	buffer		1170116	0					
ANR	1170913	AdditiveExpression	1 + nbytes		1170116	1		+			
ANR	1170914	PrimaryExpression	1		1170116	0					
ANR	1170915	Identifier	nbytes		1170116	1					
ANR	1170916	PrimaryExpression	0		1170116	1					
ANR	1170917	CompoundStatement		218:127:5405:5405	1170116	1					
ANR	1170918	ExpressionStatement	"tp = format_dec ( number , tp , signedp )"	939:8:25461:25498	1170116	0	True				
ANR	1170919	AssignmentExpression	"tp = format_dec ( number , tp , signedp )"		1170116	0		=			
ANR	1170920	Identifier	tp		1170116	0					
ANR	1170921	CallExpression	"format_dec ( number , tp , signedp )"		1170116	1					
ANR	1170922	Callee	format_dec		1170116	0					
ANR	1170923	Identifier	format_dec		1170116	0					
ANR	1170924	ArgumentList	number		1170116	1					
ANR	1170925	Argument	number		1170116	0					
ANR	1170926	Identifier	number		1170116	0					
ANR	1170927	Argument	tp		1170116	1					
ANR	1170928	Identifier	tp		1170116	0					
ANR	1170929	Argument	signedp		1170116	2					
ANR	1170930	Identifier	signedp		1170116	0					
ANR	1170931	ElseStatement	else		1170116	0					
ANR	1170932	CompoundStatement		221:8:5478:5523	1170116	0					
ANR	1170933	IdentifierDeclStatement	unsigned int highbyte = ( number >> 24 ) & 0xff ;	941:8:25524:25569	1170116	0	True				
ANR	1170934	IdentifierDecl	highbyte = ( number >> 24 ) & 0xff		1170116	0					
ANR	1170935	IdentifierDeclType	unsigned int		1170116	0					
ANR	1170936	Identifier	highbyte		1170116	1					
ANR	1170937	AssignmentExpression	highbyte = ( number >> 24 ) & 0xff		1170116	2		=			
ANR	1170938	Identifier	highbyte		1170116	0					
ANR	1170939	BitAndExpression	( number >> 24 ) & 0xff		1170116	1		&			
ANR	1170940	ShiftExpression	number >> 24		1170116	0		>>			
ANR	1170941	Identifier	number		1170116	0					
ANR	1170942	PrimaryExpression	24		1170116	1					
ANR	1170943	PrimaryExpression	0xff		1170116	1					
ANR	1170944	IfStatement	if ( nbytes == 4 && ( highbyte == ( ( addr >> 24 ) & 0xff ) || ( highbyte != 0 && highbyte != 0xff ) || info -> insn_type == dis_branch || info -> insn_type == dis_jsr ) )		1170116	1					
ANR	1170945	Condition	nbytes == 4 && ( highbyte == ( ( addr >> 24 ) & 0xff ) || ( highbyte != 0 && highbyte != 0xff ) || info -> insn_type == dis_branch || info -> insn_type == dis_jsr )	948:12:25871:26022	1170116	0	True				
ANR	1170946	AndExpression	nbytes == 4 && ( highbyte == ( ( addr >> 24 ) & 0xff ) || ( highbyte != 0 && highbyte != 0xff ) || info -> insn_type == dis_branch || info -> insn_type == dis_jsr )		1170116	0		&&			
ANR	1170947	EqualityExpression	nbytes == 4		1170116	0		==			
ANR	1170948	Identifier	nbytes		1170116	0					
ANR	1170949	PrimaryExpression	4		1170116	1					
ANR	1170950	OrExpression	highbyte == ( ( addr >> 24 ) & 0xff ) || ( highbyte != 0 && highbyte != 0xff ) || info -> insn_type == dis_branch || info -> insn_type == dis_jsr		1170116	1		||			
ANR	1170951	EqualityExpression	highbyte == ( ( addr >> 24 ) & 0xff )		1170116	0		==			
ANR	1170952	Identifier	highbyte		1170116	0					
ANR	1170953	BitAndExpression	( addr >> 24 ) & 0xff		1170116	1		&			
ANR	1170954	ShiftExpression	addr >> 24		1170116	0		>>			
ANR	1170955	Identifier	addr		1170116	0					
ANR	1170956	PrimaryExpression	24		1170116	1					
ANR	1170957	PrimaryExpression	0xff		1170116	1					
ANR	1170958	OrExpression	( highbyte != 0 && highbyte != 0xff ) || info -> insn_type == dis_branch || info -> insn_type == dis_jsr		1170116	1		||			
ANR	1170959	AndExpression	highbyte != 0 && highbyte != 0xff		1170116	0		&&			
ANR	1170960	EqualityExpression	highbyte != 0		1170116	0		!=			
ANR	1170961	Identifier	highbyte		1170116	0					
ANR	1170962	PrimaryExpression	0		1170116	1					
ANR	1170963	EqualityExpression	highbyte != 0xff		1170116	1		!=			
ANR	1170964	Identifier	highbyte		1170116	0					
ANR	1170965	PrimaryExpression	0xff		1170116	1					
ANR	1170966	OrExpression	info -> insn_type == dis_branch || info -> insn_type == dis_jsr		1170116	1		||			
ANR	1170967	EqualityExpression	info -> insn_type == dis_branch		1170116	0		==			
ANR	1170968	PtrMemberAccess	info -> insn_type		1170116	0					
ANR	1170969	Identifier	info		1170116	0					
ANR	1170970	Identifier	insn_type		1170116	1					
ANR	1170971	Identifier	dis_branch		1170116	1					
ANR	1170972	EqualityExpression	info -> insn_type == dis_jsr		1170116	1		==			
ANR	1170973	PtrMemberAccess	info -> insn_type		1170116	0					
ANR	1170974	Identifier	info		1170116	0					
ANR	1170975	Identifier	insn_type		1170116	1					
ANR	1170976	Identifier	dis_jsr		1170116	1					
ANR	1170977	CompoundStatement		228:166:5979:5979	1170116	1					
ANR	1170978	ExpressionStatement	* tp = 0	950:9:26100:26107	1170116	0	True				
ANR	1170979	AssignmentExpression	* tp = 0		1170116	0		=			
ANR	1170980	UnaryOperationExpression	* tp		1170116	0					
ANR	1170981	UnaryOperator	*		1170116	0					
ANR	1170982	Identifier	tp		1170116	1					
ANR	1170983	PrimaryExpression	0		1170116	1					
ANR	1170984	ExpressionStatement	tp = temp	951:9:26118:26127	1170116	1	True				
ANR	1170985	AssignmentExpression	tp = temp		1170116	0		=			
ANR	1170986	Identifier	tp		1170116	0					
ANR	1170987	Identifier	temp		1170116	1					
ANR	1170988	IfStatement	if ( temp [ 0 ] )		1170116	2					
ANR	1170989	Condition	temp [ 0 ]	952:13:26142:26148	1170116	0	True				
ANR	1170990	ArrayIndexing	temp [ 0 ]		1170116	0					
ANR	1170991	Identifier	temp		1170116	0					
ANR	1170992	PrimaryExpression	0		1170116	1					
ANR	1170993	CompoundStatement		232:22:6105:6105	1170116	1					
ANR	1170994	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , temp )"	953:10:26163:26211	1170116	0	True				
ANR	1170995	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , temp )"		1170116	0					
ANR	1170996	Callee	* info -> fprintf_func		1170116	0					
ANR	1170997	UnaryOperationExpression	* info -> fprintf_func		1170116	0					
ANR	1170998	UnaryOperator	*		1170116	0					
ANR	1170999	PtrMemberAccess	info -> fprintf_func		1170116	1					
ANR	1171000	Identifier	info		1170116	0					
ANR	1171001	Identifier	fprintf_func		1170116	1					
ANR	1171002	ArgumentList	info -> stream		1170116	1					
ANR	1171003	Argument	info -> stream		1170116	0					
ANR	1171004	PtrMemberAccess	info -> stream		1170116	0					
ANR	1171005	Identifier	info		1170116	0					
ANR	1171006	Identifier	stream		1170116	1					
ANR	1171007	Argument	"""%s"""		1170116	1					
ANR	1171008	PrimaryExpression	"""%s"""		1170116	0					
ANR	1171009	Argument	temp		1170116	2					
ANR	1171010	Identifier	temp		1170116	0					
ANR	1171011	ExpressionStatement	"( * info -> print_address_func ) ( ( bfd_vma ) number , info )"	956:9:26234:26285	1170116	3	True				
ANR	1171012	CallExpression	"( * info -> print_address_func ) ( ( bfd_vma ) number , info )"		1170116	0					
ANR	1171013	Callee	* info -> print_address_func		1170116	0					
ANR	1171014	UnaryOperationExpression	* info -> print_address_func		1170116	0					
ANR	1171015	UnaryOperator	*		1170116	0					
ANR	1171016	PtrMemberAccess	info -> print_address_func		1170116	1					
ANR	1171017	Identifier	info		1170116	0					
ANR	1171018	Identifier	print_address_func		1170116	1					
ANR	1171019	ArgumentList	( bfd_vma ) number		1170116	1					
ANR	1171020	Argument	( bfd_vma ) number		1170116	0					
ANR	1171021	CastExpression	( bfd_vma ) number		1170116	0					
ANR	1171022	CastTarget	bfd_vma		1170116	0					
ANR	1171023	Identifier	number		1170116	1					
ANR	1171024	Argument	info		1170116	1					
ANR	1171025	Identifier	info		1170116	0					
ANR	1171026	ExpressionStatement	info -> target = number	958:9:26297:26318	1170116	4	True				
ANR	1171027	AssignmentExpression	info -> target = number		1170116	0		=			
ANR	1171028	PtrMemberAccess	info -> target		1170116	0					
ANR	1171029	Identifier	info		1170116	0					
ANR	1171030	Identifier	target		1170116	1					
ANR	1171031	Identifier	number		1170116	1					
ANR	1171032	ElseStatement	else		1170116	0					
ANR	1171033	CompoundStatement		239:15:6289:6289	1170116	0					
ANR	1171034	ExpressionStatement	"tp = format_hex ( number , tp , disdata )"	960:9:26346:26383	1170116	0	True				
ANR	1171035	AssignmentExpression	"tp = format_hex ( number , tp , disdata )"		1170116	0		=			
ANR	1171036	Identifier	tp		1170116	0					
ANR	1171037	CallExpression	"format_hex ( number , tp , disdata )"		1170116	1					
ANR	1171038	Callee	format_hex		1170116	0					
ANR	1171039	Identifier	format_hex		1170116	0					
ANR	1171040	ArgumentList	number		1170116	1					
ANR	1171041	Argument	number		1170116	0					
ANR	1171042	Identifier	number		1170116	0					
ANR	1171043	Argument	tp		1170116	1					
ANR	1171044	Identifier	tp		1170116	0					
ANR	1171045	Argument	disdata		1170116	2					
ANR	1171046	Identifier	disdata		1170116	0					
ANR	1171047	ElseStatement	else		1170116	0					
ANR	1171048	CompoundStatement		245:3:6372:6372	1170116	0					
ANR	1171049	IfStatement	if ( info -> insn_type != dis_nonbranch )		1170116	0					
ANR	1171050	Condition	info -> insn_type != dis_nonbranch	968:9:26526:26557	1170116	0	True				
ANR	1171051	EqualityExpression	info -> insn_type != dis_nonbranch		1170116	0		!=			
ANR	1171052	PtrMemberAccess	info -> insn_type		1170116	0					
ANR	1171053	Identifier	info		1170116	0					
ANR	1171054	Identifier	insn_type		1170116	1					
ANR	1171055	Identifier	dis_nonbranch		1170116	1					
ANR	1171056	CompoundStatement		253:2:6608:6616	1170116	1					
ANR	1171057	IdentifierDeclStatement	int mode_size = 1 << ( ( insn >> 4 ) & ( opcodep -> args [ 0 ] == 'z' ? 1 : 3 ) ) ;	970:2:26571:26650	1170116	0	True				
ANR	1171058	IdentifierDecl	mode_size = 1 << ( ( insn >> 4 ) & ( opcodep -> args [ 0 ] == 'z' ? 1 : 3 ) )		1170116	0					
ANR	1171059	IdentifierDeclType	int		1170116	0					
ANR	1171060	Identifier	mode_size		1170116	1					
ANR	1171061	AssignmentExpression	mode_size = 1 << ( ( insn >> 4 ) & ( opcodep -> args [ 0 ] == 'z' ? 1 : 3 ) )		1170116	2		=			
ANR	1171062	Identifier	mode_size		1170116	0					
ANR	1171063	ShiftExpression	1 << ( ( insn >> 4 ) & ( opcodep -> args [ 0 ] == 'z' ? 1 : 3 ) )		1170116	1		<<			
ANR	1171064	PrimaryExpression	1		1170116	0					
ANR	1171065	BitAndExpression	( insn >> 4 ) & ( opcodep -> args [ 0 ] == 'z' ? 1 : 3 )		1170116	1		&			
ANR	1171066	ShiftExpression	insn >> 4		1170116	0		>>			
ANR	1171067	Identifier	insn		1170116	0					
ANR	1171068	PrimaryExpression	4		1170116	1					
ANR	1171069	ConditionalExpression	opcodep -> args [ 0 ] == 'z' ? 1 : 3		1170116	1					
ANR	1171070	Condition	opcodep -> args [ 0 ] == 'z'		1170116	0					
ANR	1171071	EqualityExpression	opcodep -> args [ 0 ] == 'z'		1170116	0		==			
ANR	1171072	ArrayIndexing	opcodep -> args [ 0 ]		1170116	0					
ANR	1171073	PtrMemberAccess	opcodep -> args		1170116	0					
ANR	1171074	Identifier	opcodep		1170116	0					
ANR	1171075	Identifier	args		1170116	1					
ANR	1171076	PrimaryExpression	0		1170116	1					
ANR	1171077	PrimaryExpression	'z'		1170116	1					
ANR	1171078	PrimaryExpression	1		1170116	1					
ANR	1171079	PrimaryExpression	3		1170116	2					
ANR	1171080	IdentifierDeclStatement	int size ;	973:2:26654:26662	1170116	1	True				
ANR	1171081	IdentifierDecl	size		1170116	0					
ANR	1171082	IdentifierDeclType	int		1170116	0					
ANR	1171083	Identifier	size		1170116	1					
ANR	1171084	ExpressionStatement	info -> insn_type = dis_dref	974:2:26666:26692	1170116	2	True				
ANR	1171085	AssignmentExpression	info -> insn_type = dis_dref		1170116	0		=			
ANR	1171086	PtrMemberAccess	info -> insn_type		1170116	0					
ANR	1171087	Identifier	info		1170116	0					
ANR	1171088	Identifier	insn_type		1170116	1					
ANR	1171089	Identifier	dis_dref		1170116	1					
ANR	1171090	ExpressionStatement	info -> flags |= CRIS_DIS_FLAG_MEMREF	975:2:26696:26731	1170116	3	True				
ANR	1171091	AssignmentExpression	info -> flags |= CRIS_DIS_FLAG_MEMREF		1170116	0		|=			
ANR	1171092	PtrMemberAccess	info -> flags		1170116	0					
ANR	1171093	Identifier	info		1170116	0					
ANR	1171094	Identifier	flags		1170116	1					
ANR	1171095	Identifier	CRIS_DIS_FLAG_MEMREF		1170116	1					
ANR	1171096	IfStatement	if ( opcodep -> imm_oprnd_size == SIZE_FIX_32 )		1170116	4					
ANR	1171097	Condition	opcodep -> imm_oprnd_size == SIZE_FIX_32	977:6:26740:26777	1170116	0	True				
ANR	1171098	EqualityExpression	opcodep -> imm_oprnd_size == SIZE_FIX_32		1170116	0		==			
ANR	1171099	PtrMemberAccess	opcodep -> imm_oprnd_size		1170116	0					
ANR	1171100	Identifier	opcodep		1170116	0					
ANR	1171101	Identifier	imm_oprnd_size		1170116	1					
ANR	1171102	Identifier	SIZE_FIX_32		1170116	1					
ANR	1171103	CompoundStatement		257:46:6734:6734	1170116	1					
ANR	1171104	ExpressionStatement	size = 4	978:3:26785:26793	1170116	0	True				
ANR	1171105	AssignmentExpression	size = 4		1170116	0		=			
ANR	1171106	Identifier	size		1170116	0					
ANR	1171107	PrimaryExpression	4		1170116	1					
ANR	1171108	ElseStatement	else		1170116	0					
ANR	1171109	IfStatement	if ( opcodep -> imm_oprnd_size == SIZE_SPEC_REG )		1170116	0					
ANR	1171110	Condition	opcodep -> imm_oprnd_size == SIZE_SPEC_REG	979:13:26808:26847	1170116	0	True				
ANR	1171111	EqualityExpression	opcodep -> imm_oprnd_size == SIZE_SPEC_REG		1170116	0		==			
ANR	1171112	PtrMemberAccess	opcodep -> imm_oprnd_size		1170116	0					
ANR	1171113	Identifier	opcodep		1170116	0					
ANR	1171114	Identifier	imm_oprnd_size		1170116	1					
ANR	1171115	Identifier	SIZE_SPEC_REG		1170116	1					
ANR	1171116	CompoundStatement		260:3:6809:6896	1170116	1					
ANR	1171117	IdentifierDeclStatement	"const struct cris_spec_reg * sregp = spec_reg_info ( ( insn >> 12 ) & 15 , disdata -> distype ) ;"	980:3:26855:26942	1170116	0	True				
ANR	1171118	IdentifierDecl	"* sregp = spec_reg_info ( ( insn >> 12 ) & 15 , disdata -> distype )"		1170116	0					
ANR	1171119	IdentifierDeclType	const struct cris_spec_reg *		1170116	0					
ANR	1171120	Identifier	sregp		1170116	1					
ANR	1171121	AssignmentExpression	"* sregp = spec_reg_info ( ( insn >> 12 ) & 15 , disdata -> distype )"		1170116	2		=			
ANR	1171122	Identifier	sregp		1170116	0					
ANR	1171123	CallExpression	"spec_reg_info ( ( insn >> 12 ) & 15 , disdata -> distype )"		1170116	1					
ANR	1171124	Callee	spec_reg_info		1170116	0					
ANR	1171125	Identifier	spec_reg_info		1170116	0					
ANR	1171126	ArgumentList	( insn >> 12 ) & 15		1170116	1					
ANR	1171127	Argument	( insn >> 12 ) & 15		1170116	0					
ANR	1171128	BitAndExpression	( insn >> 12 ) & 15		1170116	0		&			
ANR	1171129	ShiftExpression	insn >> 12		1170116	0		>>			
ANR	1171130	Identifier	insn		1170116	0					
ANR	1171131	PrimaryExpression	12		1170116	1					
ANR	1171132	PrimaryExpression	15		1170116	1					
ANR	1171133	Argument	disdata -> distype		1170116	1					
ANR	1171134	PtrMemberAccess	disdata -> distype		1170116	0					
ANR	1171135	Identifier	disdata		1170116	0					
ANR	1171136	Identifier	distype		1170116	1					
ANR	1171137	IfStatement	if ( ! sregp )		1170116	1					
ANR	1171138	Condition	! sregp	984:7:27035:27040	1170116	0	True				
ANR	1171139	UnaryOperationExpression	! sregp		1170116	0					
ANR	1171140	UnaryOperator	!		1170116	0					
ANR	1171141	Identifier	sregp		1170116	1					
ANR	1171142	CompoundStatement		264:15:6997:6997	1170116	1					
ANR	1171143	ExpressionStatement	size = 4	985:4:27049:27057	1170116	0	True				
ANR	1171144	AssignmentExpression	size = 4		1170116	0		=			
ANR	1171145	Identifier	size		1170116	0					
ANR	1171146	PrimaryExpression	4		1170116	1					
ANR	1171147	ElseStatement	else		1170116	0					
ANR	1171148	CompoundStatement		266:10:7023:7023	1170116	0					
ANR	1171149	ExpressionStatement	size = sregp -> reg_size	987:4:27075:27097	1170116	0	True				
ANR	1171150	AssignmentExpression	size = sregp -> reg_size		1170116	0		=			
ANR	1171151	Identifier	size		1170116	0					
ANR	1171152	PtrMemberAccess	sregp -> reg_size		1170116	1					
ANR	1171153	Identifier	sregp		1170116	0					
ANR	1171154	Identifier	reg_size		1170116	1					
ANR	1171155	ElseStatement	else		1170116	0					
ANR	1171156	CompoundStatement		269:9:7067:7067	1170116	0					
ANR	1171157	ExpressionStatement	size = mode_size	990:3:27118:27134	1170116	0	True				
ANR	1171158	AssignmentExpression	size = mode_size		1170116	0		=			
ANR	1171159	Identifier	size		1170116	0					
ANR	1171160	Identifier	mode_size		1170116	1					
ANR	1171161	ExpressionStatement	info -> data_size = size	993:2:27143:27165	1170116	5	True				
ANR	1171162	AssignmentExpression	info -> data_size = size		1170116	0		=			
ANR	1171163	PtrMemberAccess	info -> data_size		1170116	0					
ANR	1171164	Identifier	info		1170116	0					
ANR	1171165	Identifier	data_size		1170116	1					
ANR	1171166	Identifier	size		1170116	1					
ANR	1171167	ExpressionStatement	* tp ++ = '['	996:5:27182:27193	1170116	1	True				
ANR	1171168	AssignmentExpression	* tp ++ = '['		1170116	0		=			
ANR	1171169	UnaryOperationExpression	* tp ++		1170116	0					
ANR	1171170	UnaryOperator	*		1170116	0					
ANR	1171171	PostIncDecOperationExpression	tp ++		1170116	1					
ANR	1171172	Identifier	tp		1170116	0					
ANR	1171173	IncDec	++		1170116	1					
ANR	1171174	PrimaryExpression	'['		1170116	1					
ANR	1171175	IfStatement	if ( prefix_opcodep && ( ( insn & 0x400 ) == 0 || prefix_opcodep -> match != DIP_OPCODE ) )		1170116	2					
ANR	1171176	Condition	prefix_opcodep && ( ( insn & 0x400 ) == 0 || prefix_opcodep -> match != DIP_OPCODE )	998:9:27205:27383	1170116	0	True				
ANR	1171177	AndExpression	prefix_opcodep && ( ( insn & 0x400 ) == 0 || prefix_opcodep -> match != DIP_OPCODE )		1170116	0		&&			
ANR	1171178	Identifier	prefix_opcodep		1170116	0					
ANR	1171179	OrExpression	( insn & 0x400 ) == 0 || prefix_opcodep -> match != DIP_OPCODE		1170116	1		||			
ANR	1171180	EqualityExpression	( insn & 0x400 ) == 0		1170116	0		==			
ANR	1171181	BitAndExpression	insn & 0x400		1170116	0		&			
ANR	1171182	Identifier	insn		1170116	0					
ANR	1171183	PrimaryExpression	0x400		1170116	1					
ANR	1171184	PrimaryExpression	0		1170116	1					
ANR	1171185	EqualityExpression	prefix_opcodep -> match != DIP_OPCODE		1170116	1		!=			
ANR	1171186	PtrMemberAccess	prefix_opcodep -> match		1170116	0					
ANR	1171187	Identifier	prefix_opcodep		1170116	0					
ANR	1171188	Identifier	match		1170116	1					
ANR	1171189	Identifier	DIP_OPCODE		1170116	1					
ANR	1171190	CompoundStatement		283:7:7347:7347	1170116	1					
ANR	1171191	IfStatement	if ( insn & 0x400 )		1170116	0					
ANR	1171192	Condition	insn & 0x400	1004:6:27401:27412	1170116	0	True				
ANR	1171193	BitAndExpression	insn & 0x400		1170116	0		&			
ANR	1171194	Identifier	insn		1170116	0					
ANR	1171195	PrimaryExpression	0x400		1170116	1					
ANR	1171196	CompoundStatement		285:4:7373:7373	1170116	1					
ANR	1171197	ExpressionStatement	"tp = format_reg ( disdata , insn & 15 , tp , with_reg_prefix )"	1006:6:27427:27484	1170116	0	True				
ANR	1171198	AssignmentExpression	"tp = format_reg ( disdata , insn & 15 , tp , with_reg_prefix )"		1170116	0		=			
ANR	1171199	Identifier	tp		1170116	0					
ANR	1171200	CallExpression	"format_reg ( disdata , insn & 15 , tp , with_reg_prefix )"		1170116	1					
ANR	1171201	Callee	format_reg		1170116	0					
ANR	1171202	Identifier	format_reg		1170116	0					
ANR	1171203	ArgumentList	disdata		1170116	1					
ANR	1171204	Argument	disdata		1170116	0					
ANR	1171205	Identifier	disdata		1170116	0					
ANR	1171206	Argument	insn & 15		1170116	1					
ANR	1171207	BitAndExpression	insn & 15		1170116	0		&			
ANR	1171208	Identifier	insn		1170116	0					
ANR	1171209	PrimaryExpression	15		1170116	1					
ANR	1171210	Argument	tp		1170116	2					
ANR	1171211	Identifier	tp		1170116	0					
ANR	1171212	Argument	with_reg_prefix		1170116	3					
ANR	1171213	Identifier	with_reg_prefix		1170116	0					
ANR	1171214	ExpressionStatement	* tp ++ = '='	1007:6:27492:27503	1170116	1	True				
ANR	1171215	AssignmentExpression	* tp ++ = '='		1170116	0		=			
ANR	1171216	UnaryOperationExpression	* tp ++		1170116	0					
ANR	1171217	UnaryOperator	*		1170116	0					
ANR	1171218	PostIncDecOperationExpression	tp ++		1170116	1					
ANR	1171219	Identifier	tp		1170116	0					
ANR	1171220	IncDec	++		1170116	1					
ANR	1171221	PrimaryExpression	'='		1170116	1					
ANR	1171222	SwitchStatement	switch ( prefix_opcodep -> match )		1170116	1					
ANR	1171223	Condition	prefix_opcodep -> match	1013:10:27619:27639	1170116	0	True				
ANR	1171224	PtrMemberAccess	prefix_opcodep -> match		1170116	0					
ANR	1171225	Identifier	prefix_opcodep		1170116	0					
ANR	1171226	Identifier	match		1170116	1					
ANR	1171227	CompoundStatement		294:4:7600:7600	1170116	1					
ANR	1171228	Label	case DIP_OPCODE :	1015:4:27652:27667	1170116	0	True				
ANR	1171229	Identifier	DIP_OPCODE		1170116	0					
ANR	1171230	IfStatement	if ( ( prefix_insn & 0x400 ) && ( prefix_insn & 15 ) == 15 )		1170116	1					
ANR	1171231	Condition	( prefix_insn & 0x400 ) && ( prefix_insn & 15 ) == 15	1017:10:27717:27765	1170116	0	True				
ANR	1171232	AndExpression	( prefix_insn & 0x400 ) && ( prefix_insn & 15 ) == 15		1170116	0		&&			
ANR	1171233	BitAndExpression	prefix_insn & 0x400		1170116	0		&			
ANR	1171234	Identifier	prefix_insn		1170116	0					
ANR	1171235	PrimaryExpression	0x400		1170116	1					
ANR	1171236	EqualityExpression	( prefix_insn & 15 ) == 15		1170116	1		==			
ANR	1171237	BitAndExpression	prefix_insn & 15		1170116	0		&			
ANR	1171238	Identifier	prefix_insn		1170116	0					
ANR	1171239	PrimaryExpression	15		1170116	1					
ANR	1171240	PrimaryExpression	15		1170116	1					
ANR	1171241	CompoundStatement		301:3:7813:7950	1170116	1					
ANR	1171242	IdentifierDeclStatement	unsigned long number = prefix_buffer [ 2 ] + prefix_buffer [ 3 ] * 256 + prefix_buffer [ 4 ] * 65536 + prefix_buffer [ 5 ] * 0x1000000 ;	1021:3:27859:27996	1170116	0	True				
ANR	1171243	IdentifierDecl	number = prefix_buffer [ 2 ] + prefix_buffer [ 3 ] * 256 + prefix_buffer [ 4 ] * 65536 + prefix_buffer [ 5 ] * 0x1000000		1170116	0					
ANR	1171244	IdentifierDeclType	unsigned long		1170116	0					
ANR	1171245	Identifier	number		1170116	1					
ANR	1171246	AssignmentExpression	number = prefix_buffer [ 2 ] + prefix_buffer [ 3 ] * 256 + prefix_buffer [ 4 ] * 65536 + prefix_buffer [ 5 ] * 0x1000000		1170116	2		=			
ANR	1171247	Identifier	number		1170116	0					
ANR	1171248	AdditiveExpression	prefix_buffer [ 2 ] + prefix_buffer [ 3 ] * 256 + prefix_buffer [ 4 ] * 65536 + prefix_buffer [ 5 ] * 0x1000000		1170116	1		+			
ANR	1171249	ArrayIndexing	prefix_buffer [ 2 ]		1170116	0					
ANR	1171250	Identifier	prefix_buffer		1170116	0					
ANR	1171251	PrimaryExpression	2		1170116	1					
ANR	1171252	AdditiveExpression	prefix_buffer [ 3 ] * 256 + prefix_buffer [ 4 ] * 65536 + prefix_buffer [ 5 ] * 0x1000000		1170116	1		+			
ANR	1171253	MultiplicativeExpression	prefix_buffer [ 3 ] * 256		1170116	0		*			
ANR	1171254	ArrayIndexing	prefix_buffer [ 3 ]		1170116	0					
ANR	1171255	Identifier	prefix_buffer		1170116	0					
ANR	1171256	PrimaryExpression	3		1170116	1					
ANR	1171257	PrimaryExpression	256		1170116	1					
ANR	1171258	AdditiveExpression	prefix_buffer [ 4 ] * 65536 + prefix_buffer [ 5 ] * 0x1000000		1170116	1		+			
ANR	1171259	MultiplicativeExpression	prefix_buffer [ 4 ] * 65536		1170116	0		*			
ANR	1171260	ArrayIndexing	prefix_buffer [ 4 ]		1170116	0					
ANR	1171261	Identifier	prefix_buffer		1170116	0					
ANR	1171262	PrimaryExpression	4		1170116	1					
ANR	1171263	PrimaryExpression	65536		1170116	1					
ANR	1171264	MultiplicativeExpression	prefix_buffer [ 5 ] * 0x1000000		1170116	1		*			
ANR	1171265	ArrayIndexing	prefix_buffer [ 5 ]		1170116	0					
ANR	1171266	Identifier	prefix_buffer		1170116	0					
ANR	1171267	PrimaryExpression	5		1170116	1					
ANR	1171268	PrimaryExpression	0x1000000		1170116	1					
ANR	1171269	ExpressionStatement	info -> target = ( bfd_vma ) number	1026:3:28002:28033	1170116	1	True				
ANR	1171270	AssignmentExpression	info -> target = ( bfd_vma ) number		1170116	0		=			
ANR	1171271	PtrMemberAccess	info -> target		1170116	0					
ANR	1171272	Identifier	info		1170116	0					
ANR	1171273	Identifier	target		1170116	1					
ANR	1171274	CastExpression	( bfd_vma ) number		1170116	1					
ANR	1171275	CastTarget	bfd_vma		1170116	0					
ANR	1171276	Identifier	number		1170116	1					
ANR	1171277	ExpressionStatement	* tp = 0	1030:3:28102:28109	1170116	2	True				
ANR	1171278	AssignmentExpression	* tp = 0		1170116	0		=			
ANR	1171279	UnaryOperationExpression	* tp		1170116	0					
ANR	1171280	UnaryOperator	*		1170116	0					
ANR	1171281	Identifier	tp		1170116	1					
ANR	1171282	PrimaryExpression	0		1170116	1					
ANR	1171283	ExpressionStatement	tp = temp	1031:3:28114:28123	1170116	3	True				
ANR	1171284	AssignmentExpression	tp = temp		1170116	0		=			
ANR	1171285	Identifier	tp		1170116	0					
ANR	1171286	Identifier	temp		1170116	1					
ANR	1171287	IfStatement	if ( temp [ 0 ] )		1170116	4					
ANR	1171288	Condition	temp [ 0 ]	1032:7:28132:28138	1170116	0	True				
ANR	1171289	ArrayIndexing	temp [ 0 ]		1170116	0					
ANR	1171290	Identifier	temp		1170116	0					
ANR	1171291	PrimaryExpression	0		1170116	1					
ANR	1171292	CompoundStatement		312:16:8095:8095	1170116	1					
ANR	1171293	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , temp )"	1033:4:28147:28195	1170116	0	True				
ANR	1171294	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , temp )"		1170116	0					
ANR	1171295	Callee	* info -> fprintf_func		1170116	0					
ANR	1171296	UnaryOperationExpression	* info -> fprintf_func		1170116	0					
ANR	1171297	UnaryOperator	*		1170116	0					
ANR	1171298	PtrMemberAccess	info -> fprintf_func		1170116	1					
ANR	1171299	Identifier	info		1170116	0					
ANR	1171300	Identifier	fprintf_func		1170116	1					
ANR	1171301	ArgumentList	info -> stream		1170116	1					
ANR	1171302	Argument	info -> stream		1170116	0					
ANR	1171303	PtrMemberAccess	info -> stream		1170116	0					
ANR	1171304	Identifier	info		1170116	0					
ANR	1171305	Identifier	stream		1170116	1					
ANR	1171306	Argument	"""%s"""		1170116	1					
ANR	1171307	PrimaryExpression	"""%s"""		1170116	0					
ANR	1171308	Argument	temp		1170116	2					
ANR	1171309	Identifier	temp		1170116	0					
ANR	1171310	ExpressionStatement	"( * info -> print_address_func ) ( ( bfd_vma ) number , info )"	1036:3:28206:28258	1170116	5	True				
ANR	1171311	CallExpression	"( * info -> print_address_func ) ( ( bfd_vma ) number , info )"		1170116	0					
ANR	1171312	Callee	* info -> print_address_func		1170116	0					
ANR	1171313	UnaryOperationExpression	* info -> print_address_func		1170116	0					
ANR	1171314	UnaryOperator	*		1170116	0					
ANR	1171315	PtrMemberAccess	info -> print_address_func		1170116	1					
ANR	1171316	Identifier	info		1170116	0					
ANR	1171317	Identifier	print_address_func		1170116	1					
ANR	1171318	ArgumentList	( bfd_vma ) number		1170116	1					
ANR	1171319	Argument	( bfd_vma ) number		1170116	0					
ANR	1171320	CastExpression	( bfd_vma ) number		1170116	0					
ANR	1171321	CastTarget	bfd_vma		1170116	0					
ANR	1171322	Identifier	number		1170116	1					
ANR	1171323	Argument	info		1170116	1					
ANR	1171324	Identifier	info		1170116	0					
ANR	1171325	ElseStatement	else		1170116	0					
ANR	1171326	CompoundStatement		319:8:8243:8243	1170116	0					
ANR	1171327	ExpressionStatement	info -> flags |= ( CRIS_DIS_FLAG_MEM_TARGET2_IS_REG | CRIS_DIS_FLAG_MEM_TARGET2_MEM )	1042:3:28384:28479	1170116	0	True				
ANR	1171328	AssignmentExpression	info -> flags |= ( CRIS_DIS_FLAG_MEM_TARGET2_IS_REG | CRIS_DIS_FLAG_MEM_TARGET2_MEM )		1170116	0		|=			
ANR	1171329	PtrMemberAccess	info -> flags		1170116	0					
ANR	1171330	Identifier	info		1170116	0					
ANR	1171331	Identifier	flags		1170116	1					
ANR	1171332	InclusiveOrExpression	CRIS_DIS_FLAG_MEM_TARGET2_IS_REG | CRIS_DIS_FLAG_MEM_TARGET2_MEM		1170116	1		|			
ANR	1171333	Identifier	CRIS_DIS_FLAG_MEM_TARGET2_IS_REG		1170116	0					
ANR	1171334	Identifier	CRIS_DIS_FLAG_MEM_TARGET2_MEM		1170116	1					
ANR	1171335	ExpressionStatement	info -> target2 = prefix_insn & 15	1046:3:28485:28517	1170116	1	True				
ANR	1171336	AssignmentExpression	info -> target2 = prefix_insn & 15		1170116	0		=			
ANR	1171337	PtrMemberAccess	info -> target2		1170116	0					
ANR	1171338	Identifier	info		1170116	0					
ANR	1171339	Identifier	target2		1170116	1					
ANR	1171340	BitAndExpression	prefix_insn & 15		1170116	1		&			
ANR	1171341	Identifier	prefix_insn		1170116	0					
ANR	1171342	PrimaryExpression	15		1170116	1					
ANR	1171343	ExpressionStatement	* tp ++ = '['	1048:3:28523:28534	1170116	2	True				
ANR	1171344	AssignmentExpression	* tp ++ = '['		1170116	0		=			
ANR	1171345	UnaryOperationExpression	* tp ++		1170116	0					
ANR	1171346	UnaryOperator	*		1170116	0					
ANR	1171347	PostIncDecOperationExpression	tp ++		1170116	1					
ANR	1171348	Identifier	tp		1170116	0					
ANR	1171349	IncDec	++		1170116	1					
ANR	1171350	PrimaryExpression	'['		1170116	1					
ANR	1171351	ExpressionStatement	"tp = format_reg ( disdata , prefix_insn & 15 , tp , with_reg_prefix )"	1049:3:28539:28609	1170116	3	True				
ANR	1171352	AssignmentExpression	"tp = format_reg ( disdata , prefix_insn & 15 , tp , with_reg_prefix )"		1170116	0		=			
ANR	1171353	Identifier	tp		1170116	0					
ANR	1171354	CallExpression	"format_reg ( disdata , prefix_insn & 15 , tp , with_reg_prefix )"		1170116	1					
ANR	1171355	Callee	format_reg		1170116	0					
ANR	1171356	Identifier	format_reg		1170116	0					
ANR	1171357	ArgumentList	disdata		1170116	1					
ANR	1171358	Argument	disdata		1170116	0					
ANR	1171359	Identifier	disdata		1170116	0					
ANR	1171360	Argument	prefix_insn & 15		1170116	1					
ANR	1171361	BitAndExpression	prefix_insn & 15		1170116	0		&			
ANR	1171362	Identifier	prefix_insn		1170116	0					
ANR	1171363	PrimaryExpression	15		1170116	1					
ANR	1171364	Argument	tp		1170116	2					
ANR	1171365	Identifier	tp		1170116	0					
ANR	1171366	Argument	with_reg_prefix		1170116	3					
ANR	1171367	Identifier	with_reg_prefix		1170116	0					
ANR	1171368	IfStatement	if ( prefix_insn & 0x400 )		1170116	4					
ANR	1171369	Condition	prefix_insn & 0x400	1051:7:28618:28636	1170116	0	True				
ANR	1171370	BitAndExpression	prefix_insn & 0x400		1170116	0		&			
ANR	1171371	Identifier	prefix_insn		1170116	0					
ANR	1171372	PrimaryExpression	0x400		1170116	1					
ANR	1171373	CompoundStatement		331:28:8593:8593	1170116	1					
ANR	1171374	ExpressionStatement	* tp ++ = '+'	1052:4:28645:28656	1170116	0	True				
ANR	1171375	AssignmentExpression	* tp ++ = '+'		1170116	0		=			
ANR	1171376	UnaryOperationExpression	* tp ++		1170116	0					
ANR	1171377	UnaryOperator	*		1170116	0					
ANR	1171378	PostIncDecOperationExpression	tp ++		1170116	1					
ANR	1171379	Identifier	tp		1170116	0					
ANR	1171380	IncDec	++		1170116	1					
ANR	1171381	PrimaryExpression	'+'		1170116	1					
ANR	1171382	ExpressionStatement	* tp ++ = ']'	1054:3:28666:28677	1170116	5	True				
ANR	1171383	AssignmentExpression	* tp ++ = ']'		1170116	0		=			
ANR	1171384	UnaryOperationExpression	* tp ++		1170116	0					
ANR	1171385	UnaryOperator	*		1170116	0					
ANR	1171386	PostIncDecOperationExpression	tp ++		1170116	1					
ANR	1171387	Identifier	tp		1170116	0					
ANR	1171388	IncDec	++		1170116	1					
ANR	1171389	PrimaryExpression	']'		1170116	1					
ANR	1171390	BreakStatement	break ;	1056:6:28695:28700	1170116	2	True				
ANR	1171391	Label	case BDAP_QUICK_OPCODE :	1058:4:28707:28729	1170116	3	True				
ANR	1171392	Identifier	BDAP_QUICK_OPCODE		1170116	0					
ANR	1171393	CompoundStatement		340:8:8701:8711	1170116	4					
ANR	1171394	IdentifierDeclStatement	int number ;	1060:8:28747:28757	1170116	0	True				
ANR	1171395	IdentifierDecl	number		1170116	0					
ANR	1171396	IdentifierDeclType	int		1170116	0					
ANR	1171397	Identifier	number		1170116	1					
ANR	1171398	ExpressionStatement	number = prefix_buffer [ 0 ]	1062:8:28768:28793	1170116	1	True				
ANR	1171399	AssignmentExpression	number = prefix_buffer [ 0 ]		1170116	0		=			
ANR	1171400	Identifier	number		1170116	0					
ANR	1171401	ArrayIndexing	prefix_buffer [ 0 ]		1170116	1					
ANR	1171402	Identifier	prefix_buffer		1170116	0					
ANR	1171403	PrimaryExpression	0		1170116	1					
ANR	1171404	IfStatement	if ( number > 127 )		1170116	2					
ANR	1171405	Condition	number > 127	1063:12:28807:28818	1170116	0	True				
ANR	1171406	RelationalExpression	number > 127		1170116	0		>			
ANR	1171407	Identifier	number		1170116	0					
ANR	1171408	PrimaryExpression	127		1170116	1					
ANR	1171409	CompoundStatement		343:26:8775:8775	1170116	1					
ANR	1171410	ExpressionStatement	number -= 256	1064:9:28832:28845	1170116	0	True				
ANR	1171411	AssignmentExpression	number -= 256		1170116	0		-=			
ANR	1171412	Identifier	number		1170116	0					
ANR	1171413	PrimaryExpression	256		1170116	1					
ANR	1171414	ExpressionStatement	"tp = format_reg ( disdata , ( prefix_insn >> 12 ) & 15 , tp , with_reg_prefix )"	1068:8:28925:29008	1170116	3	True				
ANR	1171415	AssignmentExpression	"tp = format_reg ( disdata , ( prefix_insn >> 12 ) & 15 , tp , with_reg_prefix )"		1170116	0		=			
ANR	1171416	Identifier	tp		1170116	0					
ANR	1171417	CallExpression	"format_reg ( disdata , ( prefix_insn >> 12 ) & 15 , tp , with_reg_prefix )"		1170116	1					
ANR	1171418	Callee	format_reg		1170116	0					
ANR	1171419	Identifier	format_reg		1170116	0					
ANR	1171420	ArgumentList	disdata		1170116	1					
ANR	1171421	Argument	disdata		1170116	0					
ANR	1171422	Identifier	disdata		1170116	0					
ANR	1171423	Argument	( prefix_insn >> 12 ) & 15		1170116	1					
ANR	1171424	BitAndExpression	( prefix_insn >> 12 ) & 15		1170116	0		&			
ANR	1171425	ShiftExpression	prefix_insn >> 12		1170116	0		>>			
ANR	1171426	Identifier	prefix_insn		1170116	0					
ANR	1171427	PrimaryExpression	12		1170116	1					
ANR	1171428	PrimaryExpression	15		1170116	1					
ANR	1171429	Argument	tp		1170116	2					
ANR	1171430	Identifier	tp		1170116	0					
ANR	1171431	Argument	with_reg_prefix		1170116	3					
ANR	1171432	Identifier	with_reg_prefix		1170116	0					
ANR	1171433	IfStatement	if ( number >= 0 )		1170116	4					
ANR	1171434	Condition	number >= 0	1070:12:29022:29032	1170116	0	True				
ANR	1171435	RelationalExpression	number >= 0		1170116	0		>=			
ANR	1171436	Identifier	number		1170116	0					
ANR	1171437	PrimaryExpression	0		1170116	1					
ANR	1171438	CompoundStatement		350:25:8989:8989	1170116	1					
ANR	1171439	ExpressionStatement	* tp ++ = '+'	1071:9:29046:29057	1170116	0	True				
ANR	1171440	AssignmentExpression	* tp ++ = '+'		1170116	0		=			
ANR	1171441	UnaryOperationExpression	* tp ++		1170116	0					
ANR	1171442	UnaryOperator	*		1170116	0					
ANR	1171443	PostIncDecOperationExpression	tp ++		1170116	1					
ANR	1171444	Identifier	tp		1170116	0					
ANR	1171445	IncDec	++		1170116	1					
ANR	1171446	PrimaryExpression	'+'		1170116	1					
ANR	1171447	ExpressionStatement	"tp = format_dec ( number , tp , 1 )"	1073:8:29077:29108	1170116	5	True				
ANR	1171448	AssignmentExpression	"tp = format_dec ( number , tp , 1 )"		1170116	0		=			
ANR	1171449	Identifier	tp		1170116	0					
ANR	1171450	CallExpression	"format_dec ( number , tp , 1 )"		1170116	1					
ANR	1171451	Callee	format_dec		1170116	0					
ANR	1171452	Identifier	format_dec		1170116	0					
ANR	1171453	ArgumentList	number		1170116	1					
ANR	1171454	Argument	number		1170116	0					
ANR	1171455	Identifier	number		1170116	0					
ANR	1171456	Argument	tp		1170116	1					
ANR	1171457	Identifier	tp		1170116	0					
ANR	1171458	Argument	1		1170116	2					
ANR	1171459	PrimaryExpression	1		1170116	0					
ANR	1171460	ExpressionStatement	info -> flags |= CRIS_DIS_FLAG_MEM_TARGET_IS_REG	1075:8:29119:29165	1170116	6	True				
ANR	1171461	AssignmentExpression	info -> flags |= CRIS_DIS_FLAG_MEM_TARGET_IS_REG		1170116	0		|=			
ANR	1171462	PtrMemberAccess	info -> flags		1170116	0					
ANR	1171463	Identifier	info		1170116	0					
ANR	1171464	Identifier	flags		1170116	1					
ANR	1171465	Identifier	CRIS_DIS_FLAG_MEM_TARGET_IS_REG		1170116	1					
ANR	1171466	ExpressionStatement	info -> target = ( prefix_insn >> 12 ) & 15	1076:8:29175:29214	1170116	7	True				
ANR	1171467	AssignmentExpression	info -> target = ( prefix_insn >> 12 ) & 15		1170116	0		=			
ANR	1171468	PtrMemberAccess	info -> target		1170116	0					
ANR	1171469	Identifier	info		1170116	0					
ANR	1171470	Identifier	target		1170116	1					
ANR	1171471	BitAndExpression	( prefix_insn >> 12 ) & 15		1170116	1		&			
ANR	1171472	ShiftExpression	prefix_insn >> 12		1170116	0		>>			
ANR	1171473	Identifier	prefix_insn		1170116	0					
ANR	1171474	PrimaryExpression	12		1170116	1					
ANR	1171475	PrimaryExpression	15		1170116	1					
ANR	1171476	ExpressionStatement	info -> target2 = ( bfd_vma ) number	1077:8:29224:29256	1170116	8	True				
ANR	1171477	AssignmentExpression	info -> target2 = ( bfd_vma ) number		1170116	0		=			
ANR	1171478	PtrMemberAccess	info -> target2		1170116	0					
ANR	1171479	Identifier	info		1170116	0					
ANR	1171480	Identifier	target2		1170116	1					
ANR	1171481	CastExpression	( bfd_vma ) number		1170116	1					
ANR	1171482	CastTarget	bfd_vma		1170116	0					
ANR	1171483	Identifier	number		1170116	1					
ANR	1171484	BreakStatement	break ;	1078:8:29266:29271	1170116	9	True				
ANR	1171485	Label	case BIAP_OPCODE :	1081:4:29286:29302	1170116	5	True				
ANR	1171486	Identifier	BIAP_OPCODE		1170116	0					
ANR	1171487	ExpressionStatement	"tp = format_reg ( disdata , prefix_insn & 15 , tp , with_reg_prefix )"	1083:6:29339:29412	1170116	6	True				
ANR	1171488	AssignmentExpression	"tp = format_reg ( disdata , prefix_insn & 15 , tp , with_reg_prefix )"		1170116	0		=			
ANR	1171489	Identifier	tp		1170116	0					
ANR	1171490	CallExpression	"format_reg ( disdata , prefix_insn & 15 , tp , with_reg_prefix )"		1170116	1					
ANR	1171491	Callee	format_reg		1170116	0					
ANR	1171492	Identifier	format_reg		1170116	0					
ANR	1171493	ArgumentList	disdata		1170116	1					
ANR	1171494	Argument	disdata		1170116	0					
ANR	1171495	Identifier	disdata		1170116	0					
ANR	1171496	Argument	prefix_insn & 15		1170116	1					
ANR	1171497	BitAndExpression	prefix_insn & 15		1170116	0		&			
ANR	1171498	Identifier	prefix_insn		1170116	0					
ANR	1171499	PrimaryExpression	15		1170116	1					
ANR	1171500	Argument	tp		1170116	2					
ANR	1171501	Identifier	tp		1170116	0					
ANR	1171502	Argument	with_reg_prefix		1170116	3					
ANR	1171503	Identifier	with_reg_prefix		1170116	0					
ANR	1171504	ExpressionStatement	* tp ++ = '+'	1085:6:29420:29431	1170116	7	True				
ANR	1171505	AssignmentExpression	* tp ++ = '+'		1170116	0		=			
ANR	1171506	UnaryOperationExpression	* tp ++		1170116	0					
ANR	1171507	UnaryOperator	*		1170116	0					
ANR	1171508	PostIncDecOperationExpression	tp ++		1170116	1					
ANR	1171509	Identifier	tp		1170116	0					
ANR	1171510	IncDec	++		1170116	1					
ANR	1171511	PrimaryExpression	'+'		1170116	1					
ANR	1171512	ExpressionStatement	"tp = format_reg ( disdata , ( prefix_insn >> 12 ) & 15 , tp , with_reg_prefix )"	1086:6:29439:29520	1170116	8	True				
ANR	1171513	AssignmentExpression	"tp = format_reg ( disdata , ( prefix_insn >> 12 ) & 15 , tp , with_reg_prefix )"		1170116	0		=			
ANR	1171514	Identifier	tp		1170116	0					
ANR	1171515	CallExpression	"format_reg ( disdata , ( prefix_insn >> 12 ) & 15 , tp , with_reg_prefix )"		1170116	1					
ANR	1171516	Callee	format_reg		1170116	0					
ANR	1171517	Identifier	format_reg		1170116	0					
ANR	1171518	ArgumentList	disdata		1170116	1					
ANR	1171519	Argument	disdata		1170116	0					
ANR	1171520	Identifier	disdata		1170116	0					
ANR	1171521	Argument	( prefix_insn >> 12 ) & 15		1170116	1					
ANR	1171522	BitAndExpression	( prefix_insn >> 12 ) & 15		1170116	0		&			
ANR	1171523	ShiftExpression	prefix_insn >> 12		1170116	0		>>			
ANR	1171524	Identifier	prefix_insn		1170116	0					
ANR	1171525	PrimaryExpression	12		1170116	1					
ANR	1171526	PrimaryExpression	15		1170116	1					
ANR	1171527	Argument	tp		1170116	2					
ANR	1171528	Identifier	tp		1170116	0					
ANR	1171529	Argument	with_reg_prefix		1170116	3					
ANR	1171530	Identifier	with_reg_prefix		1170116	0					
ANR	1171531	ExpressionStatement	* tp ++ = '.'	1088:6:29528:29539	1170116	9	True				
ANR	1171532	AssignmentExpression	* tp ++ = '.'		1170116	0		=			
ANR	1171533	UnaryOperationExpression	* tp ++		1170116	0					
ANR	1171534	UnaryOperator	*		1170116	0					
ANR	1171535	PostIncDecOperationExpression	tp ++		1170116	1					
ANR	1171536	Identifier	tp		1170116	0					
ANR	1171537	IncDec	++		1170116	1					
ANR	1171538	PrimaryExpression	'.'		1170116	1					
ANR	1171539	ExpressionStatement	* tp ++ = mode_char [ ( prefix_insn >> 4 ) & 3 ]	1089:6:29547:29588	1170116	10	True				
ANR	1171540	AssignmentExpression	* tp ++ = mode_char [ ( prefix_insn >> 4 ) & 3 ]		1170116	0		=			
ANR	1171541	UnaryOperationExpression	* tp ++		1170116	0					
ANR	1171542	UnaryOperator	*		1170116	0					
ANR	1171543	PostIncDecOperationExpression	tp ++		1170116	1					
ANR	1171544	Identifier	tp		1170116	0					
ANR	1171545	IncDec	++		1170116	1					
ANR	1171546	ArrayIndexing	mode_char [ ( prefix_insn >> 4 ) & 3 ]		1170116	1					
ANR	1171547	Identifier	mode_char		1170116	0					
ANR	1171548	BitAndExpression	( prefix_insn >> 4 ) & 3		1170116	1		&			
ANR	1171549	ShiftExpression	prefix_insn >> 4		1170116	0		>>			
ANR	1171550	Identifier	prefix_insn		1170116	0					
ANR	1171551	PrimaryExpression	4		1170116	1					
ANR	1171552	PrimaryExpression	3		1170116	1					
ANR	1171553	ExpressionStatement	info -> flags |= ( CRIS_DIS_FLAG_MEM_TARGET2_IS_REG | CRIS_DIS_FLAG_MEM_TARGET_IS_REG | ( ( prefix_insn & 0x8000 ) ? CRIS_DIS_FLAG_MEM_TARGET2_MULT4 : ( ( prefix_insn & 0x8000 ) ? CRIS_DIS_FLAG_MEM_TARGET2_MULT2 : 0 ) ) )	1091:6:29597:29845	1170116	11	True				
ANR	1171554	AssignmentExpression	info -> flags |= ( CRIS_DIS_FLAG_MEM_TARGET2_IS_REG | CRIS_DIS_FLAG_MEM_TARGET_IS_REG | ( ( prefix_insn & 0x8000 ) ? CRIS_DIS_FLAG_MEM_TARGET2_MULT4 : ( ( prefix_insn & 0x8000 ) ? CRIS_DIS_FLAG_MEM_TARGET2_MULT2 : 0 ) ) )		1170116	0		|=			
ANR	1171555	PtrMemberAccess	info -> flags		1170116	0					
ANR	1171556	Identifier	info		1170116	0					
ANR	1171557	Identifier	flags		1170116	1					
ANR	1171558	InclusiveOrExpression	CRIS_DIS_FLAG_MEM_TARGET2_IS_REG | CRIS_DIS_FLAG_MEM_TARGET_IS_REG | ( ( prefix_insn & 0x8000 ) ? CRIS_DIS_FLAG_MEM_TARGET2_MULT4 : ( ( prefix_insn & 0x8000 ) ? CRIS_DIS_FLAG_MEM_TARGET2_MULT2 : 0 ) )		1170116	1		|			
ANR	1171559	Identifier	CRIS_DIS_FLAG_MEM_TARGET2_IS_REG		1170116	0					
ANR	1171560	InclusiveOrExpression	CRIS_DIS_FLAG_MEM_TARGET_IS_REG | ( ( prefix_insn & 0x8000 ) ? CRIS_DIS_FLAG_MEM_TARGET2_MULT4 : ( ( prefix_insn & 0x8000 ) ? CRIS_DIS_FLAG_MEM_TARGET2_MULT2 : 0 ) )		1170116	1		|			
ANR	1171561	Identifier	CRIS_DIS_FLAG_MEM_TARGET_IS_REG		1170116	0					
ANR	1171562	ConditionalExpression	( prefix_insn & 0x8000 ) ? CRIS_DIS_FLAG_MEM_TARGET2_MULT4 : ( ( prefix_insn & 0x8000 ) ? CRIS_DIS_FLAG_MEM_TARGET2_MULT2 : 0 )		1170116	1					
ANR	1171563	Condition	prefix_insn & 0x8000		1170116	0					
ANR	1171564	BitAndExpression	prefix_insn & 0x8000		1170116	0		&			
ANR	1171565	Identifier	prefix_insn		1170116	0					
ANR	1171566	PrimaryExpression	0x8000		1170116	1					
ANR	1171567	Identifier	CRIS_DIS_FLAG_MEM_TARGET2_MULT4		1170116	1					
ANR	1171568	ConditionalExpression	( prefix_insn & 0x8000 ) ? CRIS_DIS_FLAG_MEM_TARGET2_MULT2 : 0		1170116	2					
ANR	1171569	Condition	prefix_insn & 0x8000		1170116	0					
ANR	1171570	BitAndExpression	prefix_insn & 0x8000		1170116	0		&			
ANR	1171571	Identifier	prefix_insn		1170116	0					
ANR	1171572	PrimaryExpression	0x8000		1170116	1					
ANR	1171573	Identifier	CRIS_DIS_FLAG_MEM_TARGET2_MULT2		1170116	1					
ANR	1171574	PrimaryExpression	0		1170116	2					
ANR	1171575	IfStatement	if ( insn == 0xf83f && ( prefix_insn & ~0xf000 ) == 0x55f )		1170116	12					
ANR	1171576	Condition	insn == 0xf83f && ( prefix_insn & ~0xf000 ) == 0x55f	1101:10:29923:29972	1170116	0	True				
ANR	1171577	AndExpression	insn == 0xf83f && ( prefix_insn & ~0xf000 ) == 0x55f		1170116	0		&&			
ANR	1171578	EqualityExpression	insn == 0xf83f		1170116	0		==			
ANR	1171579	Identifier	insn		1170116	0					
ANR	1171580	PrimaryExpression	0xf83f		1170116	1					
ANR	1171581	EqualityExpression	( prefix_insn & ~0xf000 ) == 0x55f		1170116	1		==			
ANR	1171582	BitAndExpression	prefix_insn & ~0xf000		1170116	0		&			
ANR	1171583	Identifier	prefix_insn		1170116	0					
ANR	1171584	Identifier	~0xf000		1170116	1					
ANR	1171585	PrimaryExpression	0x55f		1170116	1					
ANR	1171586	CompoundStatement		381:62:9929:9929	1170116	1					
ANR	1171587	ExpressionStatement	case_offset_counter = no_of_case_offsets	1103:7:30039:30079	1170116	0	True				
ANR	1171588	AssignmentExpression	case_offset_counter = no_of_case_offsets		1170116	0		=			
ANR	1171589	Identifier	case_offset_counter		1170116	0					
ANR	1171590	Identifier	no_of_case_offsets		1170116	1					
ANR	1171591	BreakStatement	break ;	1105:6:30095:30100	1170116	13	True				
ANR	1171592	Label	case BDAP_INDIR_OPCODE :	1107:4:30107:30129	1170116	14	True				
ANR	1171593	Identifier	BDAP_INDIR_OPCODE		1170116	0					
ANR	1171594	ExpressionStatement	"tp = format_reg ( disdata , ( prefix_insn >> 12 ) & 15 , tp , with_reg_prefix )"	1110:6:30212:30293	1170116	15	True				
ANR	1171595	AssignmentExpression	"tp = format_reg ( disdata , ( prefix_insn >> 12 ) & 15 , tp , with_reg_prefix )"		1170116	0		=			
ANR	1171596	Identifier	tp		1170116	0					
ANR	1171597	CallExpression	"format_reg ( disdata , ( prefix_insn >> 12 ) & 15 , tp , with_reg_prefix )"		1170116	1					
ANR	1171598	Callee	format_reg		1170116	0					
ANR	1171599	Identifier	format_reg		1170116	0					
ANR	1171600	ArgumentList	disdata		1170116	1					
ANR	1171601	Argument	disdata		1170116	0					
ANR	1171602	Identifier	disdata		1170116	0					
ANR	1171603	Argument	( prefix_insn >> 12 ) & 15		1170116	1					
ANR	1171604	BitAndExpression	( prefix_insn >> 12 ) & 15		1170116	0		&			
ANR	1171605	ShiftExpression	prefix_insn >> 12		1170116	0		>>			
ANR	1171606	Identifier	prefix_insn		1170116	0					
ANR	1171607	PrimaryExpression	12		1170116	1					
ANR	1171608	PrimaryExpression	15		1170116	1					
ANR	1171609	Argument	tp		1170116	2					
ANR	1171610	Identifier	tp		1170116	0					
ANR	1171611	Argument	with_reg_prefix		1170116	3					
ANR	1171612	Identifier	with_reg_prefix		1170116	0					
ANR	1171613	IfStatement	if ( ( prefix_insn & 0x400 ) && ( prefix_insn & 15 ) == 15 )		1170116	16					
ANR	1171614	Condition	( prefix_insn & 0x400 ) && ( prefix_insn & 15 ) == 15	1113:10:30306:30354	1170116	0	True				
ANR	1171615	AndExpression	( prefix_insn & 0x400 ) && ( prefix_insn & 15 ) == 15		1170116	0		&&			
ANR	1171616	BitAndExpression	prefix_insn & 0x400		1170116	0		&			
ANR	1171617	Identifier	prefix_insn		1170116	0					
ANR	1171618	PrimaryExpression	0x400		1170116	1					
ANR	1171619	EqualityExpression	( prefix_insn & 15 ) == 15		1170116	1		==			
ANR	1171620	BitAndExpression	prefix_insn & 15		1170116	0		&			
ANR	1171621	Identifier	prefix_insn		1170116	0					
ANR	1171622	PrimaryExpression	15		1170116	1					
ANR	1171623	PrimaryExpression	15		1170116	1					
ANR	1171624	CompoundStatement		399:3:10404:10449	1170116	1					
ANR	1171625	IdentifierDeclStatement	long number ;	1115:3:30370:30381	1170116	0	True				
ANR	1171626	IdentifierDecl	number		1170116	0					
ANR	1171627	IdentifierDeclType	long		1170116	0					
ANR	1171628	Identifier	number		1170116	1					
ANR	1171629	IdentifierDeclStatement	unsigned int nbytes ;	1116:3:30386:30405	1170116	1	True				
ANR	1171630	IdentifierDecl	nbytes		1170116	0					
ANR	1171631	IdentifierDeclType	unsigned int		1170116	0					
ANR	1171632	Identifier	nbytes		1170116	1					
ANR	1171633	IdentifierDeclStatement	int mode_size = 1 << ( ( prefix_insn >> 4 ) & 3 ) ;	1119:3:30450:30495	1170116	2	True				
ANR	1171634	IdentifierDecl	mode_size = 1 << ( ( prefix_insn >> 4 ) & 3 )		1170116	0					
ANR	1171635	IdentifierDeclType	int		1170116	0					
ANR	1171636	Identifier	mode_size		1170116	1					
ANR	1171637	AssignmentExpression	mode_size = 1 << ( ( prefix_insn >> 4 ) & 3 )		1170116	2		=			
ANR	1171638	Identifier	mode_size		1170116	0					
ANR	1171639	ShiftExpression	1 << ( ( prefix_insn >> 4 ) & 3 )		1170116	1		<<			
ANR	1171640	PrimaryExpression	1		1170116	0					
ANR	1171641	BitAndExpression	( prefix_insn >> 4 ) & 3		1170116	1		&			
ANR	1171642	ShiftExpression	prefix_insn >> 4		1170116	0		>>			
ANR	1171643	Identifier	prefix_insn		1170116	0					
ANR	1171644	PrimaryExpression	4		1170116	1					
ANR	1171645	PrimaryExpression	3		1170116	1					
ANR	1171646	IfStatement	if ( mode_size == 1 )		1170116	3					
ANR	1171647	Condition	mode_size == 1	1121:7:30505:30518	1170116	0	True				
ANR	1171648	EqualityExpression	mode_size == 1		1170116	0		==			
ANR	1171649	Identifier	mode_size		1170116	0					
ANR	1171650	PrimaryExpression	1		1170116	1					
ANR	1171651	CompoundStatement		401:23:10475:10475	1170116	1					
ANR	1171652	ExpressionStatement	nbytes = 2	1122:4:30527:30537	1170116	0	True				
ANR	1171653	AssignmentExpression	nbytes = 2		1170116	0		=			
ANR	1171654	Identifier	nbytes		1170116	0					
ANR	1171655	PrimaryExpression	2		1170116	1					
ANR	1171656	ElseStatement	else		1170116	0					
ANR	1171657	CompoundStatement		403:10:10503:10503	1170116	0					
ANR	1171658	ExpressionStatement	nbytes = mode_size	1124:4:30555:30573	1170116	0	True				
ANR	1171659	AssignmentExpression	nbytes = mode_size		1170116	0		=			
ANR	1171660	Identifier	nbytes		1170116	0					
ANR	1171661	Identifier	mode_size		1170116	1					
ANR	1171662	SwitchStatement	switch ( nbytes )		1170116	4					
ANR	1171663	Condition	nbytes	1127:11:30592:30597	1170116	0	True				
ANR	1171664	Identifier	nbytes		1170116	0					
ANR	1171665	CompoundStatement		408:5:10559:10559	1170116	1					
ANR	1171666	Label	case 1 :	1129:5:30612:30618	1170116	0	True				
ANR	1171667	ExpressionStatement	number = prefix_buffer [ 2 ]	1130:7:30627:30652	1170116	1	True				
ANR	1171668	AssignmentExpression	number = prefix_buffer [ 2 ]		1170116	0		=			
ANR	1171669	Identifier	number		1170116	0					
ANR	1171670	ArrayIndexing	prefix_buffer [ 2 ]		1170116	1					
ANR	1171671	Identifier	prefix_buffer		1170116	0					
ANR	1171672	PrimaryExpression	2		1170116	1					
ANR	1171673	IfStatement	if ( number > 127 )		1170116	2					
ANR	1171674	Condition	number > 127	1131:11:30665:30676	1170116	0	True				
ANR	1171675	RelationalExpression	number > 127		1170116	0		>			
ANR	1171676	Identifier	number		1170116	0					
ANR	1171677	PrimaryExpression	127		1170116	1					
ANR	1171678	CompoundStatement		411:25:10633:10633	1170116	1					
ANR	1171679	ExpressionStatement	number -= 256	1132:8:30689:30702	1170116	0	True				
ANR	1171680	AssignmentExpression	number -= 256		1170116	0		-=			
ANR	1171681	Identifier	number		1170116	0					
ANR	1171682	PrimaryExpression	256		1170116	1					
ANR	1171683	BreakStatement	break ;	1134:7:30720:30725	1170116	3	True				
ANR	1171684	Label	case 2 :	1136:5:30733:30739	1170116	4	True				
ANR	1171685	ExpressionStatement	number = prefix_buffer [ 2 ] + prefix_buffer [ 3 ] * 256	1137:7:30748:30798	1170116	5	True				
ANR	1171686	AssignmentExpression	number = prefix_buffer [ 2 ] + prefix_buffer [ 3 ] * 256		1170116	0		=			
ANR	1171687	Identifier	number		1170116	0					
ANR	1171688	AdditiveExpression	prefix_buffer [ 2 ] + prefix_buffer [ 3 ] * 256		1170116	1		+			
ANR	1171689	ArrayIndexing	prefix_buffer [ 2 ]		1170116	0					
ANR	1171690	Identifier	prefix_buffer		1170116	0					
ANR	1171691	PrimaryExpression	2		1170116	1					
ANR	1171692	MultiplicativeExpression	prefix_buffer [ 3 ] * 256		1170116	1		*			
ANR	1171693	ArrayIndexing	prefix_buffer [ 3 ]		1170116	0					
ANR	1171694	Identifier	prefix_buffer		1170116	0					
ANR	1171695	PrimaryExpression	3		1170116	1					
ANR	1171696	PrimaryExpression	256		1170116	1					
ANR	1171697	IfStatement	if ( number > 32767 )		1170116	6					
ANR	1171698	Condition	number > 32767	1138:11:30811:30824	1170116	0	True				
ANR	1171699	RelationalExpression	number > 32767		1170116	0		>			
ANR	1171700	Identifier	number		1170116	0					
ANR	1171701	PrimaryExpression	32767		1170116	1					
ANR	1171702	CompoundStatement		418:27:10781:10781	1170116	1					
ANR	1171703	ExpressionStatement	number -= 65536	1139:8:30837:30852	1170116	0	True				
ANR	1171704	AssignmentExpression	number -= 65536		1170116	0		-=			
ANR	1171705	Identifier	number		1170116	0					
ANR	1171706	PrimaryExpression	65536		1170116	1					
ANR	1171707	BreakStatement	break ;	1141:7:30870:30875	1170116	7	True				
ANR	1171708	Label	case 4 :	1143:5:30883:30889	1170116	8	True				
ANR	1171709	ExpressionStatement	number = prefix_buffer [ 2 ] + prefix_buffer [ 3 ] * 256 + prefix_buffer [ 4 ] * 65536 + prefix_buffer [ 5 ] * 0x1000000	1144:7:30898:31033	1170116	9	True				
ANR	1171710	AssignmentExpression	number = prefix_buffer [ 2 ] + prefix_buffer [ 3 ] * 256 + prefix_buffer [ 4 ] * 65536 + prefix_buffer [ 5 ] * 0x1000000		1170116	0		=			
ANR	1171711	Identifier	number		1170116	0					
ANR	1171712	AdditiveExpression	prefix_buffer [ 2 ] + prefix_buffer [ 3 ] * 256 + prefix_buffer [ 4 ] * 65536 + prefix_buffer [ 5 ] * 0x1000000		1170116	1		+			
ANR	1171713	ArrayIndexing	prefix_buffer [ 2 ]		1170116	0					
ANR	1171714	Identifier	prefix_buffer		1170116	0					
ANR	1171715	PrimaryExpression	2		1170116	1					
ANR	1171716	AdditiveExpression	prefix_buffer [ 3 ] * 256 + prefix_buffer [ 4 ] * 65536 + prefix_buffer [ 5 ] * 0x1000000		1170116	1		+			
ANR	1171717	MultiplicativeExpression	prefix_buffer [ 3 ] * 256		1170116	0		*			
ANR	1171718	ArrayIndexing	prefix_buffer [ 3 ]		1170116	0					
ANR	1171719	Identifier	prefix_buffer		1170116	0					
ANR	1171720	PrimaryExpression	3		1170116	1					
ANR	1171721	PrimaryExpression	256		1170116	1					
ANR	1171722	AdditiveExpression	prefix_buffer [ 4 ] * 65536 + prefix_buffer [ 5 ] * 0x1000000		1170116	1		+			
ANR	1171723	MultiplicativeExpression	prefix_buffer [ 4 ] * 65536		1170116	0		*			
ANR	1171724	ArrayIndexing	prefix_buffer [ 4 ]		1170116	0					
ANR	1171725	Identifier	prefix_buffer		1170116	0					
ANR	1171726	PrimaryExpression	4		1170116	1					
ANR	1171727	PrimaryExpression	65536		1170116	1					
ANR	1171728	MultiplicativeExpression	prefix_buffer [ 5 ] * 0x1000000		1170116	1		*			
ANR	1171729	ArrayIndexing	prefix_buffer [ 5 ]		1170116	0					
ANR	1171730	Identifier	prefix_buffer		1170116	0					
ANR	1171731	PrimaryExpression	5		1170116	1					
ANR	1171732	PrimaryExpression	0x1000000		1170116	1					
ANR	1171733	BreakStatement	break ;	1148:7:31042:31047	1170116	10	True				
ANR	1171734	Label	default :	1150:5:31055:31062	1170116	11	True				
ANR	1171735	Identifier	default		1170116	0					
ANR	1171736	ExpressionStatement	"strcpy ( tp , ""bug"" )"	1151:7:31071:31089	1170116	12	True				
ANR	1171737	CallExpression	"strcpy ( tp , ""bug"" )"		1170116	0					
ANR	1171738	Callee	strcpy		1170116	0					
ANR	1171739	Identifier	strcpy		1170116	0					
ANR	1171740	ArgumentList	tp		1170116	1					
ANR	1171741	Argument	tp		1170116	0					
ANR	1171742	Identifier	tp		1170116	0					
ANR	1171743	Argument	"""bug"""		1170116	1					
ANR	1171744	PrimaryExpression	"""bug"""		1170116	0					
ANR	1171745	ExpressionStatement	tp += 3	1152:7:31098:31105	1170116	13	True				
ANR	1171746	AssignmentExpression	tp += 3		1170116	0		+=			
ANR	1171747	Identifier	tp		1170116	0					
ANR	1171748	PrimaryExpression	3		1170116	1					
ANR	1171749	ExpressionStatement	number = 42	1153:7:31114:31125	1170116	14	True				
ANR	1171750	AssignmentExpression	number = 42		1170116	0		=			
ANR	1171751	Identifier	number		1170116	0					
ANR	1171752	PrimaryExpression	42		1170116	1					
ANR	1171753	ExpressionStatement	info -> flags |= CRIS_DIS_FLAG_MEM_TARGET_IS_REG	1156:3:31138:31184	1170116	5	True				
ANR	1171754	AssignmentExpression	info -> flags |= CRIS_DIS_FLAG_MEM_TARGET_IS_REG		1170116	0		|=			
ANR	1171755	PtrMemberAccess	info -> flags		1170116	0					
ANR	1171756	Identifier	info		1170116	0					
ANR	1171757	Identifier	flags		1170116	1					
ANR	1171758	Identifier	CRIS_DIS_FLAG_MEM_TARGET_IS_REG		1170116	1					
ANR	1171759	ExpressionStatement	info -> target2 = ( bfd_vma ) number	1157:3:31189:31221	1170116	6	True				
ANR	1171760	AssignmentExpression	info -> target2 = ( bfd_vma ) number		1170116	0		=			
ANR	1171761	PtrMemberAccess	info -> target2		1170116	0					
ANR	1171762	Identifier	info		1170116	0					
ANR	1171763	Identifier	target2		1170116	1					
ANR	1171764	CastExpression	( bfd_vma ) number		1170116	1					
ANR	1171765	CastTarget	bfd_vma		1170116	0					
ANR	1171766	Identifier	number		1170116	1					
ANR	1171767	IfStatement	if ( nbytes == 4 )		1170116	7					
ANR	1171768	Condition	nbytes == 4	1161:7:31298:31308	1170116	0	True				
ANR	1171769	EqualityExpression	nbytes == 4		1170116	0		==			
ANR	1171770	Identifier	nbytes		1170116	0					
ANR	1171771	PrimaryExpression	4		1170116	1					
ANR	1171772	CompoundStatement		442:5:11270:11270	1170116	1					
ANR	1171773	ExpressionStatement	* tp ++ = '+'	1165:7:31397:31408	1170116	0	True				
ANR	1171774	AssignmentExpression	* tp ++ = '+'		1170116	0		=			
ANR	1171775	UnaryOperationExpression	* tp ++		1170116	0					
ANR	1171776	UnaryOperator	*		1170116	0					
ANR	1171777	PostIncDecOperationExpression	tp ++		1170116	1					
ANR	1171778	Identifier	tp		1170116	0					
ANR	1171779	IncDec	++		1170116	1					
ANR	1171780	PrimaryExpression	'+'		1170116	1					
ANR	1171781	ExpressionStatement	* tp = 0	1166:7:31417:31424	1170116	1	True				
ANR	1171782	AssignmentExpression	* tp = 0		1170116	0		=			
ANR	1171783	UnaryOperationExpression	* tp		1170116	0					
ANR	1171784	UnaryOperator	*		1170116	0					
ANR	1171785	Identifier	tp		1170116	1					
ANR	1171786	PrimaryExpression	0		1170116	1					
ANR	1171787	ExpressionStatement	tp = temp	1167:7:31433:31442	1170116	2	True				
ANR	1171788	AssignmentExpression	tp = temp		1170116	0		=			
ANR	1171789	Identifier	tp		1170116	0					
ANR	1171790	Identifier	temp		1170116	1					
ANR	1171791	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , temp )"	1168:7:31451:31499	1170116	3	True				
ANR	1171792	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , temp )"		1170116	0					
ANR	1171793	Callee	* info -> fprintf_func		1170116	0					
ANR	1171794	UnaryOperationExpression	* info -> fprintf_func		1170116	0					
ANR	1171795	UnaryOperator	*		1170116	0					
ANR	1171796	PtrMemberAccess	info -> fprintf_func		1170116	1					
ANR	1171797	Identifier	info		1170116	0					
ANR	1171798	Identifier	fprintf_func		1170116	1					
ANR	1171799	ArgumentList	info -> stream		1170116	1					
ANR	1171800	Argument	info -> stream		1170116	0					
ANR	1171801	PtrMemberAccess	info -> stream		1170116	0					
ANR	1171802	Identifier	info		1170116	0					
ANR	1171803	Identifier	stream		1170116	1					
ANR	1171804	Argument	"""%s"""		1170116	1					
ANR	1171805	PrimaryExpression	"""%s"""		1170116	0					
ANR	1171806	Argument	temp		1170116	2					
ANR	1171807	Identifier	temp		1170116	0					
ANR	1171808	ExpressionStatement	"( * info -> print_address_func ) ( ( bfd_vma ) number , info )"	1170:7:31509:31561	1170116	4	True				
ANR	1171809	CallExpression	"( * info -> print_address_func ) ( ( bfd_vma ) number , info )"		1170116	0					
ANR	1171810	Callee	* info -> print_address_func		1170116	0					
ANR	1171811	UnaryOperationExpression	* info -> print_address_func		1170116	0					
ANR	1171812	UnaryOperator	*		1170116	0					
ANR	1171813	PtrMemberAccess	info -> print_address_func		1170116	1					
ANR	1171814	Identifier	info		1170116	0					
ANR	1171815	Identifier	print_address_func		1170116	1					
ANR	1171816	ArgumentList	( bfd_vma ) number		1170116	1					
ANR	1171817	Argument	( bfd_vma ) number		1170116	0					
ANR	1171818	CastExpression	( bfd_vma ) number		1170116	0					
ANR	1171819	CastTarget	bfd_vma		1170116	0					
ANR	1171820	Identifier	number		1170116	1					
ANR	1171821	Argument	info		1170116	1					
ANR	1171822	Identifier	info		1170116	0					
ANR	1171823	ElseStatement	else		1170116	0					
ANR	1171824	CompoundStatement		453:5:11537:11537	1170116	0					
ANR	1171825	IfStatement	if ( number >= 0 )		1170116	0					
ANR	1171826	Condition	number >= 0	1174:10:31595:31605	1170116	0	True				
ANR	1171827	RelationalExpression	number >= 0		1170116	0		>=			
ANR	1171828	Identifier	number		1170116	0					
ANR	1171829	PrimaryExpression	0		1170116	1					
ANR	1171830	CompoundStatement		454:23:11562:11562	1170116	1					
ANR	1171831	ExpressionStatement	* tp ++ = '+'	1175:7:31617:31628	1170116	0	True				
ANR	1171832	AssignmentExpression	* tp ++ = '+'		1170116	0		=			
ANR	1171833	UnaryOperationExpression	* tp ++		1170116	0					
ANR	1171834	UnaryOperator	*		1170116	0					
ANR	1171835	PostIncDecOperationExpression	tp ++		1170116	1					
ANR	1171836	Identifier	tp		1170116	0					
ANR	1171837	IncDec	++		1170116	1					
ANR	1171838	PrimaryExpression	'+'		1170116	1					
ANR	1171839	ExpressionStatement	"tp = format_dec ( number , tp , 1 )"	1177:6:31644:31675	1170116	1	True				
ANR	1171840	AssignmentExpression	"tp = format_dec ( number , tp , 1 )"		1170116	0		=			
ANR	1171841	Identifier	tp		1170116	0					
ANR	1171842	CallExpression	"format_dec ( number , tp , 1 )"		1170116	1					
ANR	1171843	Callee	format_dec		1170116	0					
ANR	1171844	Identifier	format_dec		1170116	0					
ANR	1171845	ArgumentList	number		1170116	1					
ANR	1171846	Argument	number		1170116	0					
ANR	1171847	Identifier	number		1170116	0					
ANR	1171848	Argument	tp		1170116	1					
ANR	1171849	Identifier	tp		1170116	0					
ANR	1171850	Argument	1		1170116	2					
ANR	1171851	PrimaryExpression	1		1170116	0					
ANR	1171852	ElseStatement	else		1170116	0					
ANR	1171853	CompoundStatement		461:8:11667:11667	1170116	0					
ANR	1171854	ExpressionStatement	* tp ++ = '+'	1183:3:31760:31771	1170116	0	True				
ANR	1171855	AssignmentExpression	* tp ++ = '+'		1170116	0		=			
ANR	1171856	UnaryOperationExpression	* tp ++		1170116	0					
ANR	1171857	UnaryOperator	*		1170116	0					
ANR	1171858	PostIncDecOperationExpression	tp ++		1170116	1					
ANR	1171859	Identifier	tp		1170116	0					
ANR	1171860	IncDec	++		1170116	1					
ANR	1171861	PrimaryExpression	'+'		1170116	1					
ANR	1171862	ExpressionStatement	* tp ++ = '['	1184:3:31776:31787	1170116	1	True				
ANR	1171863	AssignmentExpression	* tp ++ = '['		1170116	0		=			
ANR	1171864	UnaryOperationExpression	* tp ++		1170116	0					
ANR	1171865	UnaryOperator	*		1170116	0					
ANR	1171866	PostIncDecOperationExpression	tp ++		1170116	1					
ANR	1171867	Identifier	tp		1170116	0					
ANR	1171868	IncDec	++		1170116	1					
ANR	1171869	PrimaryExpression	'['		1170116	1					
ANR	1171870	ExpressionStatement	"tp = format_reg ( disdata , prefix_insn & 15 , tp , with_reg_prefix )"	1185:3:31792:31862	1170116	2	True				
ANR	1171871	AssignmentExpression	"tp = format_reg ( disdata , prefix_insn & 15 , tp , with_reg_prefix )"		1170116	0		=			
ANR	1171872	Identifier	tp		1170116	0					
ANR	1171873	CallExpression	"format_reg ( disdata , prefix_insn & 15 , tp , with_reg_prefix )"		1170116	1					
ANR	1171874	Callee	format_reg		1170116	0					
ANR	1171875	Identifier	format_reg		1170116	0					
ANR	1171876	ArgumentList	disdata		1170116	1					
ANR	1171877	Argument	disdata		1170116	0					
ANR	1171878	Identifier	disdata		1170116	0					
ANR	1171879	Argument	prefix_insn & 15		1170116	1					
ANR	1171880	BitAndExpression	prefix_insn & 15		1170116	0		&			
ANR	1171881	Identifier	prefix_insn		1170116	0					
ANR	1171882	PrimaryExpression	15		1170116	1					
ANR	1171883	Argument	tp		1170116	2					
ANR	1171884	Identifier	tp		1170116	0					
ANR	1171885	Argument	with_reg_prefix		1170116	3					
ANR	1171886	Identifier	with_reg_prefix		1170116	0					
ANR	1171887	IfStatement	if ( prefix_insn & 0x400 )		1170116	3					
ANR	1171888	Condition	prefix_insn & 0x400	1187:7:31871:31889	1170116	0	True				
ANR	1171889	BitAndExpression	prefix_insn & 0x400		1170116	0		&			
ANR	1171890	Identifier	prefix_insn		1170116	0					
ANR	1171891	PrimaryExpression	0x400		1170116	1					
ANR	1171892	CompoundStatement		467:28:11846:11846	1170116	1					
ANR	1171893	ExpressionStatement	* tp ++ = '+'	1188:4:31898:31909	1170116	0	True				
ANR	1171894	AssignmentExpression	* tp ++ = '+'		1170116	0		=			
ANR	1171895	UnaryOperationExpression	* tp ++		1170116	0					
ANR	1171896	UnaryOperator	*		1170116	0					
ANR	1171897	PostIncDecOperationExpression	tp ++		1170116	1					
ANR	1171898	Identifier	tp		1170116	0					
ANR	1171899	IncDec	++		1170116	1					
ANR	1171900	PrimaryExpression	'+'		1170116	1					
ANR	1171901	ExpressionStatement	* tp ++ = ']'	1190:3:31919:31930	1170116	4	True				
ANR	1171902	AssignmentExpression	* tp ++ = ']'		1170116	0		=			
ANR	1171903	UnaryOperationExpression	* tp ++		1170116	0					
ANR	1171904	UnaryOperator	*		1170116	0					
ANR	1171905	PostIncDecOperationExpression	tp ++		1170116	1					
ANR	1171906	Identifier	tp		1170116	0					
ANR	1171907	IncDec	++		1170116	1					
ANR	1171908	PrimaryExpression	']'		1170116	1					
ANR	1171909	ExpressionStatement	* tp ++ = '.'	1191:3:31935:31946	1170116	5	True				
ANR	1171910	AssignmentExpression	* tp ++ = '.'		1170116	0		=			
ANR	1171911	UnaryOperationExpression	* tp ++		1170116	0					
ANR	1171912	UnaryOperator	*		1170116	0					
ANR	1171913	PostIncDecOperationExpression	tp ++		1170116	1					
ANR	1171914	Identifier	tp		1170116	0					
ANR	1171915	IncDec	++		1170116	1					
ANR	1171916	PrimaryExpression	'.'		1170116	1					
ANR	1171917	ExpressionStatement	* tp ++ = mode_char [ ( prefix_insn >> 4 ) & 3 ]	1192:3:31951:31992	1170116	6	True				
ANR	1171918	AssignmentExpression	* tp ++ = mode_char [ ( prefix_insn >> 4 ) & 3 ]		1170116	0		=			
ANR	1171919	UnaryOperationExpression	* tp ++		1170116	0					
ANR	1171920	UnaryOperator	*		1170116	0					
ANR	1171921	PostIncDecOperationExpression	tp ++		1170116	1					
ANR	1171922	Identifier	tp		1170116	0					
ANR	1171923	IncDec	++		1170116	1					
ANR	1171924	ArrayIndexing	mode_char [ ( prefix_insn >> 4 ) & 3 ]		1170116	1					
ANR	1171925	Identifier	mode_char		1170116	0					
ANR	1171926	BitAndExpression	( prefix_insn >> 4 ) & 3		1170116	1		&			
ANR	1171927	ShiftExpression	prefix_insn >> 4		1170116	0		>>			
ANR	1171928	Identifier	prefix_insn		1170116	0					
ANR	1171929	PrimaryExpression	4		1170116	1					
ANR	1171930	PrimaryExpression	3		1170116	1					
ANR	1171931	ExpressionStatement	info -> flags |= ( CRIS_DIS_FLAG_MEM_TARGET2_IS_REG | CRIS_DIS_FLAG_MEM_TARGET2_MEM | CRIS_DIS_FLAG_MEM_TARGET_IS_REG | ( ( ( prefix_insn >> 4 ) == 2 ) ? 0 : ( ( ( prefix_insn >> 4 ) & 3 ) == 1 ? CRIS_DIS_FLAG_MEM_TARGET2_MEM_WORD : CRIS_DIS_FLAG_MEM_TARGET2_MEM_BYTE ) ) )	1194:3:31998:32314	1170116	7	True				
ANR	1171932	AssignmentExpression	info -> flags |= ( CRIS_DIS_FLAG_MEM_TARGET2_IS_REG | CRIS_DIS_FLAG_MEM_TARGET2_MEM | CRIS_DIS_FLAG_MEM_TARGET_IS_REG | ( ( ( prefix_insn >> 4 ) == 2 ) ? 0 : ( ( ( prefix_insn >> 4 ) & 3 ) == 1 ? CRIS_DIS_FLAG_MEM_TARGET2_MEM_WORD : CRIS_DIS_FLAG_MEM_TARGET2_MEM_BYTE ) ) )		1170116	0		|=			
ANR	1171933	PtrMemberAccess	info -> flags		1170116	0					
ANR	1171934	Identifier	info		1170116	0					
ANR	1171935	Identifier	flags		1170116	1					
ANR	1171936	InclusiveOrExpression	CRIS_DIS_FLAG_MEM_TARGET2_IS_REG | CRIS_DIS_FLAG_MEM_TARGET2_MEM | CRIS_DIS_FLAG_MEM_TARGET_IS_REG | ( ( ( prefix_insn >> 4 ) == 2 ) ? 0 : ( ( ( prefix_insn >> 4 ) & 3 ) == 1 ? CRIS_DIS_FLAG_MEM_TARGET2_MEM_WORD : CRIS_DIS_FLAG_MEM_TARGET2_MEM_BYTE ) )		1170116	1		|			
ANR	1171937	Identifier	CRIS_DIS_FLAG_MEM_TARGET2_IS_REG		1170116	0					
ANR	1171938	InclusiveOrExpression	CRIS_DIS_FLAG_MEM_TARGET2_MEM | CRIS_DIS_FLAG_MEM_TARGET_IS_REG | ( ( ( prefix_insn >> 4 ) == 2 ) ? 0 : ( ( ( prefix_insn >> 4 ) & 3 ) == 1 ? CRIS_DIS_FLAG_MEM_TARGET2_MEM_WORD : CRIS_DIS_FLAG_MEM_TARGET2_MEM_BYTE ) )		1170116	1		|			
ANR	1171939	Identifier	CRIS_DIS_FLAG_MEM_TARGET2_MEM		1170116	0					
ANR	1171940	InclusiveOrExpression	CRIS_DIS_FLAG_MEM_TARGET_IS_REG | ( ( ( prefix_insn >> 4 ) == 2 ) ? 0 : ( ( ( prefix_insn >> 4 ) & 3 ) == 1 ? CRIS_DIS_FLAG_MEM_TARGET2_MEM_WORD : CRIS_DIS_FLAG_MEM_TARGET2_MEM_BYTE ) )		1170116	1		|			
ANR	1171941	Identifier	CRIS_DIS_FLAG_MEM_TARGET_IS_REG		1170116	0					
ANR	1171942	ConditionalExpression	( ( prefix_insn >> 4 ) == 2 ) ? 0 : ( ( ( prefix_insn >> 4 ) & 3 ) == 1 ? CRIS_DIS_FLAG_MEM_TARGET2_MEM_WORD : CRIS_DIS_FLAG_MEM_TARGET2_MEM_BYTE )		1170116	1					
ANR	1171943	Condition	( prefix_insn >> 4 ) == 2		1170116	0					
ANR	1171944	EqualityExpression	( prefix_insn >> 4 ) == 2		1170116	0		==			
ANR	1171945	ShiftExpression	prefix_insn >> 4		1170116	0		>>			
ANR	1171946	Identifier	prefix_insn		1170116	0					
ANR	1171947	PrimaryExpression	4		1170116	1					
ANR	1171948	PrimaryExpression	2		1170116	1					
ANR	1171949	PrimaryExpression	0		1170116	1					
ANR	1171950	ConditionalExpression	( ( prefix_insn >> 4 ) & 3 ) == 1 ? CRIS_DIS_FLAG_MEM_TARGET2_MEM_WORD : CRIS_DIS_FLAG_MEM_TARGET2_MEM_BYTE		1170116	2					
ANR	1171951	Condition	( ( prefix_insn >> 4 ) & 3 ) == 1		1170116	0					
ANR	1171952	EqualityExpression	( ( prefix_insn >> 4 ) & 3 ) == 1		1170116	0		==			
ANR	1171953	BitAndExpression	( prefix_insn >> 4 ) & 3		1170116	0		&			
ANR	1171954	ShiftExpression	prefix_insn >> 4		1170116	0		>>			
ANR	1171955	Identifier	prefix_insn		1170116	0					
ANR	1171956	PrimaryExpression	4		1170116	1					
ANR	1171957	PrimaryExpression	3		1170116	1					
ANR	1171958	PrimaryExpression	1		1170116	1					
ANR	1171959	Identifier	CRIS_DIS_FLAG_MEM_TARGET2_MEM_WORD		1170116	1					
ANR	1171960	Identifier	CRIS_DIS_FLAG_MEM_TARGET2_MEM_BYTE		1170116	2					
ANR	1171961	BreakStatement	break ;	1205:6:32332:32337	1170116	17	True				
ANR	1171962	Label	default :	1207:4:32344:32351	1170116	18	True				
ANR	1171963	Identifier	default		1170116	0					
ANR	1171964	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""?prefix-bug"" )"	1208:6:32359:32410	1170116	19	True				
ANR	1171965	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""?prefix-bug"" )"		1170116	0					
ANR	1171966	Callee	* info -> fprintf_func		1170116	0					
ANR	1171967	UnaryOperationExpression	* info -> fprintf_func		1170116	0					
ANR	1171968	UnaryOperator	*		1170116	0					
ANR	1171969	PtrMemberAccess	info -> fprintf_func		1170116	1					
ANR	1171970	Identifier	info		1170116	0					
ANR	1171971	Identifier	fprintf_func		1170116	1					
ANR	1171972	ArgumentList	info -> stream		1170116	1					
ANR	1171973	Argument	info -> stream		1170116	0					
ANR	1171974	PtrMemberAccess	info -> stream		1170116	0					
ANR	1171975	Identifier	info		1170116	0					
ANR	1171976	Identifier	stream		1170116	1					
ANR	1171977	Argument	"""?prefix-bug"""		1170116	1					
ANR	1171978	PrimaryExpression	"""?prefix-bug"""		1170116	0					
ANR	1171979	ExpressionStatement	prefix_opcodep = NULL	1212:2:32473:32494	1170116	2	True				
ANR	1171980	AssignmentExpression	prefix_opcodep = NULL		1170116	0		=			
ANR	1171981	Identifier	prefix_opcodep		1170116	0					
ANR	1171982	Identifier	NULL		1170116	1					
ANR	1171983	ElseStatement	else		1170116	0					
ANR	1171984	CompoundStatement		495:7:12476:12476	1170116	0					
ANR	1171985	ExpressionStatement	"tp = format_reg ( disdata , insn & 15 , tp , with_reg_prefix )"	1216:2:32526:32583	1170116	0	True				
ANR	1171986	AssignmentExpression	"tp = format_reg ( disdata , insn & 15 , tp , with_reg_prefix )"		1170116	0		=			
ANR	1171987	Identifier	tp		1170116	0					
ANR	1171988	CallExpression	"format_reg ( disdata , insn & 15 , tp , with_reg_prefix )"		1170116	1					
ANR	1171989	Callee	format_reg		1170116	0					
ANR	1171990	Identifier	format_reg		1170116	0					
ANR	1171991	ArgumentList	disdata		1170116	1					
ANR	1171992	Argument	disdata		1170116	0					
ANR	1171993	Identifier	disdata		1170116	0					
ANR	1171994	Argument	insn & 15		1170116	1					
ANR	1171995	BitAndExpression	insn & 15		1170116	0		&			
ANR	1171996	Identifier	insn		1170116	0					
ANR	1171997	PrimaryExpression	15		1170116	1					
ANR	1171998	Argument	tp		1170116	2					
ANR	1171999	Identifier	tp		1170116	0					
ANR	1172000	Argument	with_reg_prefix		1170116	3					
ANR	1172001	Identifier	with_reg_prefix		1170116	0					
ANR	1172002	ExpressionStatement	info -> flags |= CRIS_DIS_FLAG_MEM_TARGET_IS_REG	1218:2:32588:32634	1170116	1	True				
ANR	1172003	AssignmentExpression	info -> flags |= CRIS_DIS_FLAG_MEM_TARGET_IS_REG		1170116	0		|=			
ANR	1172004	PtrMemberAccess	info -> flags		1170116	0					
ANR	1172005	Identifier	info		1170116	0					
ANR	1172006	Identifier	flags		1170116	1					
ANR	1172007	Identifier	CRIS_DIS_FLAG_MEM_TARGET_IS_REG		1170116	1					
ANR	1172008	ExpressionStatement	info -> target = insn & 15	1219:2:32638:32662	1170116	2	True				
ANR	1172009	AssignmentExpression	info -> target = insn & 15		1170116	0		=			
ANR	1172010	PtrMemberAccess	info -> target		1170116	0					
ANR	1172011	Identifier	info		1170116	0					
ANR	1172012	Identifier	target		1170116	1					
ANR	1172013	BitAndExpression	insn & 15		1170116	1		&			
ANR	1172014	Identifier	insn		1170116	0					
ANR	1172015	PrimaryExpression	15		1170116	1					
ANR	1172016	IfStatement	if ( insn & 0x400 )		1170116	3					
ANR	1172017	Condition	insn & 0x400	1221:6:32671:32682	1170116	0	True				
ANR	1172018	BitAndExpression	insn & 0x400		1170116	0		&			
ANR	1172019	Identifier	insn		1170116	0					
ANR	1172020	PrimaryExpression	0x400		1170116	1					
ANR	1172021	CompoundStatement		501:20:12639:12639	1170116	1					
ANR	1172022	ExpressionStatement	* tp ++ = '+'	1222:3:32690:32701	1170116	0	True				
ANR	1172023	AssignmentExpression	* tp ++ = '+'		1170116	0		=			
ANR	1172024	UnaryOperationExpression	* tp ++		1170116	0					
ANR	1172025	UnaryOperator	*		1170116	0					
ANR	1172026	PostIncDecOperationExpression	tp ++		1170116	1					
ANR	1172027	Identifier	tp		1170116	0					
ANR	1172028	IncDec	++		1170116	1					
ANR	1172029	PrimaryExpression	'+'		1170116	1					
ANR	1172030	ExpressionStatement	* tp ++ = ']'	1225:5:32721:32732	1170116	3	True				
ANR	1172031	AssignmentExpression	* tp ++ = ']'		1170116	0		=			
ANR	1172032	UnaryOperationExpression	* tp ++		1170116	0					
ANR	1172033	UnaryOperator	*		1170116	0					
ANR	1172034	PostIncDecOperationExpression	tp ++		1170116	1					
ANR	1172035	Identifier	tp		1170116	0					
ANR	1172036	IncDec	++		1170116	1					
ANR	1172037	PrimaryExpression	']'		1170116	1					
ANR	1172038	BreakStatement	break ;	1227:1:32740:32745	1170116	41	True				
ANR	1172039	Label	case 'x' :	1229:6:32754:32762	1170116	42	True				
ANR	1172040	ExpressionStatement	"tp = format_reg ( disdata , ( insn >> 12 ) & 15 , tp , with_reg_prefix )"	1230:1:32765:32830	1170116	43	True				
ANR	1172041	AssignmentExpression	"tp = format_reg ( disdata , ( insn >> 12 ) & 15 , tp , with_reg_prefix )"		1170116	0		=			
ANR	1172042	Identifier	tp		1170116	0					
ANR	1172043	CallExpression	"format_reg ( disdata , ( insn >> 12 ) & 15 , tp , with_reg_prefix )"		1170116	1					
ANR	1172044	Callee	format_reg		1170116	0					
ANR	1172045	Identifier	format_reg		1170116	0					
ANR	1172046	ArgumentList	disdata		1170116	1					
ANR	1172047	Argument	disdata		1170116	0					
ANR	1172048	Identifier	disdata		1170116	0					
ANR	1172049	Argument	( insn >> 12 ) & 15		1170116	1					
ANR	1172050	BitAndExpression	( insn >> 12 ) & 15		1170116	0		&			
ANR	1172051	ShiftExpression	insn >> 12		1170116	0		>>			
ANR	1172052	Identifier	insn		1170116	0					
ANR	1172053	PrimaryExpression	12		1170116	1					
ANR	1172054	PrimaryExpression	15		1170116	1					
ANR	1172055	Argument	tp		1170116	2					
ANR	1172056	Identifier	tp		1170116	0					
ANR	1172057	Argument	with_reg_prefix		1170116	3					
ANR	1172058	Identifier	with_reg_prefix		1170116	0					
ANR	1172059	ExpressionStatement	* tp ++ = '.'	1231:1:32833:32844	1170116	44	True				
ANR	1172060	AssignmentExpression	* tp ++ = '.'		1170116	0		=			
ANR	1172061	UnaryOperationExpression	* tp ++		1170116	0					
ANR	1172062	UnaryOperator	*		1170116	0					
ANR	1172063	PostIncDecOperationExpression	tp ++		1170116	1					
ANR	1172064	Identifier	tp		1170116	0					
ANR	1172065	IncDec	++		1170116	1					
ANR	1172066	PrimaryExpression	'.'		1170116	1					
ANR	1172067	ExpressionStatement	* tp ++ = mode_char [ ( insn >> 4 ) & 3 ]	1232:1:32847:32881	1170116	45	True				
ANR	1172068	AssignmentExpression	* tp ++ = mode_char [ ( insn >> 4 ) & 3 ]		1170116	0		=			
ANR	1172069	UnaryOperationExpression	* tp ++		1170116	0					
ANR	1172070	UnaryOperator	*		1170116	0					
ANR	1172071	PostIncDecOperationExpression	tp ++		1170116	1					
ANR	1172072	Identifier	tp		1170116	0					
ANR	1172073	IncDec	++		1170116	1					
ANR	1172074	ArrayIndexing	mode_char [ ( insn >> 4 ) & 3 ]		1170116	1					
ANR	1172075	Identifier	mode_char		1170116	0					
ANR	1172076	BitAndExpression	( insn >> 4 ) & 3		1170116	1		&			
ANR	1172077	ShiftExpression	insn >> 4		1170116	0		>>			
ANR	1172078	Identifier	insn		1170116	0					
ANR	1172079	PrimaryExpression	4		1170116	1					
ANR	1172080	PrimaryExpression	3		1170116	1					
ANR	1172081	BreakStatement	break ;	1233:1:32884:32889	1170116	46	True				
ANR	1172082	Label	case 'I' :	1235:6:32898:32906	1170116	47	True				
ANR	1172083	ExpressionStatement	"tp = format_dec ( insn & 63 , tp , 0 )"	1236:1:32909:32943	1170116	48	True				
ANR	1172084	AssignmentExpression	"tp = format_dec ( insn & 63 , tp , 0 )"		1170116	0		=			
ANR	1172085	Identifier	tp		1170116	0					
ANR	1172086	CallExpression	"format_dec ( insn & 63 , tp , 0 )"		1170116	1					
ANR	1172087	Callee	format_dec		1170116	0					
ANR	1172088	Identifier	format_dec		1170116	0					
ANR	1172089	ArgumentList	insn & 63		1170116	1					
ANR	1172090	Argument	insn & 63		1170116	0					
ANR	1172091	BitAndExpression	insn & 63		1170116	0		&			
ANR	1172092	Identifier	insn		1170116	0					
ANR	1172093	PrimaryExpression	63		1170116	1					
ANR	1172094	Argument	tp		1170116	1					
ANR	1172095	Identifier	tp		1170116	0					
ANR	1172096	Argument	0		1170116	2					
ANR	1172097	PrimaryExpression	0		1170116	0					
ANR	1172098	BreakStatement	break ;	1237:1:32946:32951	1170116	49	True				
ANR	1172099	Label	case 'b' :	1239:6:32960:32968	1170116	50	True				
ANR	1172100	CompoundStatement		521:3:12930:12969	1170116	51					
ANR	1172101	IdentifierDeclStatement	int where = buffer [ 2 ] + buffer [ 3 ] * 256 ;	1241:3:32976:33015	1170116	0	True				
ANR	1172102	IdentifierDecl	where = buffer [ 2 ] + buffer [ 3 ] * 256		1170116	0					
ANR	1172103	IdentifierDeclType	int		1170116	0					
ANR	1172104	Identifier	where		1170116	1					
ANR	1172105	AssignmentExpression	where = buffer [ 2 ] + buffer [ 3 ] * 256		1170116	2		=			
ANR	1172106	Identifier	where		1170116	0					
ANR	1172107	AdditiveExpression	buffer [ 2 ] + buffer [ 3 ] * 256		1170116	1		+			
ANR	1172108	ArrayIndexing	buffer [ 2 ]		1170116	0					
ANR	1172109	Identifier	buffer		1170116	0					
ANR	1172110	PrimaryExpression	2		1170116	1					
ANR	1172111	MultiplicativeExpression	buffer [ 3 ] * 256		1170116	1		*			
ANR	1172112	ArrayIndexing	buffer [ 3 ]		1170116	0					
ANR	1172113	Identifier	buffer		1170116	0					
ANR	1172114	PrimaryExpression	3		1170116	1					
ANR	1172115	PrimaryExpression	256		1170116	1					
ANR	1172116	IfStatement	if ( where > 32767 )		1170116	1					
ANR	1172117	Condition	where > 32767	1243:7:33025:33037	1170116	0	True				
ANR	1172118	RelationalExpression	where > 32767		1170116	0		>			
ANR	1172119	Identifier	where		1170116	0					
ANR	1172120	PrimaryExpression	32767		1170116	1					
ANR	1172121	CompoundStatement		523:22:12994:12994	1170116	1					
ANR	1172122	ExpressionStatement	where -= 65536	1244:4:33046:33060	1170116	0	True				
ANR	1172123	AssignmentExpression	where -= 65536		1170116	0		-=			
ANR	1172124	Identifier	where		1170116	0					
ANR	1172125	PrimaryExpression	65536		1170116	1					
ANR	1172126	ExpressionStatement	where += addr + ( ( disdata -> distype == cris_dis_v32 ) ? 0 : 4 )	1247:3:33071:33131	1170116	2	True				
ANR	1172127	AssignmentExpression	where += addr + ( ( disdata -> distype == cris_dis_v32 ) ? 0 : 4 )		1170116	0		+=			
ANR	1172128	Identifier	where		1170116	0					
ANR	1172129	AdditiveExpression	addr + ( ( disdata -> distype == cris_dis_v32 ) ? 0 : 4 )		1170116	1		+			
ANR	1172130	Identifier	addr		1170116	0					
ANR	1172131	ConditionalExpression	( disdata -> distype == cris_dis_v32 ) ? 0 : 4		1170116	1					
ANR	1172132	Condition	disdata -> distype == cris_dis_v32		1170116	0					
ANR	1172133	EqualityExpression	disdata -> distype == cris_dis_v32		1170116	0		==			
ANR	1172134	PtrMemberAccess	disdata -> distype		1170116	0					
ANR	1172135	Identifier	disdata		1170116	0					
ANR	1172136	Identifier	distype		1170116	1					
ANR	1172137	Identifier	cris_dis_v32		1170116	1					
ANR	1172138	PrimaryExpression	0		1170116	1					
ANR	1172139	PrimaryExpression	4		1170116	2					
ANR	1172140	IfStatement	if ( insn == BA_PC_INCR_OPCODE )		1170116	3					
ANR	1172141	Condition	insn == BA_PC_INCR_OPCODE	1249:7:33141:33165	1170116	0	True				
ANR	1172142	EqualityExpression	insn == BA_PC_INCR_OPCODE		1170116	0		==			
ANR	1172143	Identifier	insn		1170116	0					
ANR	1172144	Identifier	BA_PC_INCR_OPCODE		1170116	1					
ANR	1172145	CompoundStatement		529:34:13122:13122	1170116	1					
ANR	1172146	ExpressionStatement	info -> insn_type = dis_branch	1250:4:33174:33202	1170116	0	True				
ANR	1172147	AssignmentExpression	info -> insn_type = dis_branch		1170116	0		=			
ANR	1172148	PtrMemberAccess	info -> insn_type		1170116	0					
ANR	1172149	Identifier	info		1170116	0					
ANR	1172150	Identifier	insn_type		1170116	1					
ANR	1172151	Identifier	dis_branch		1170116	1					
ANR	1172152	ElseStatement	else		1170116	0					
ANR	1172153	CompoundStatement		531:10:13168:13168	1170116	0					
ANR	1172154	ExpressionStatement	info -> insn_type = dis_condbranch	1252:4:33220:33252	1170116	0	True				
ANR	1172155	AssignmentExpression	info -> insn_type = dis_condbranch		1170116	0		=			
ANR	1172156	PtrMemberAccess	info -> insn_type		1170116	0					
ANR	1172157	Identifier	info		1170116	0					
ANR	1172158	Identifier	insn_type		1170116	1					
ANR	1172159	Identifier	dis_condbranch		1170116	1					
ANR	1172160	ExpressionStatement	info -> target = ( bfd_vma ) where	1255:3:33263:33293	1170116	4	True				
ANR	1172161	AssignmentExpression	info -> target = ( bfd_vma ) where		1170116	0		=			
ANR	1172162	PtrMemberAccess	info -> target		1170116	0					
ANR	1172163	Identifier	info		1170116	0					
ANR	1172164	Identifier	target		1170116	1					
ANR	1172165	CastExpression	( bfd_vma ) where		1170116	1					
ANR	1172166	CastTarget	bfd_vma		1170116	0					
ANR	1172167	Identifier	where		1170116	1					
ANR	1172168	ExpressionStatement	* tp = 0	1257:3:33299:33306	1170116	5	True				
ANR	1172169	AssignmentExpression	* tp = 0		1170116	0		=			
ANR	1172170	UnaryOperationExpression	* tp		1170116	0					
ANR	1172171	UnaryOperator	*		1170116	0					
ANR	1172172	Identifier	tp		1170116	1					
ANR	1172173	PrimaryExpression	0		1170116	1					
ANR	1172174	ExpressionStatement	tp = temp	1258:3:33311:33320	1170116	6	True				
ANR	1172175	AssignmentExpression	tp = temp		1170116	0		=			
ANR	1172176	Identifier	tp		1170116	0					
ANR	1172177	Identifier	temp		1170116	1					
ANR	1172178	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s%s "" , temp , cris_cc_strings [ insn >> 12 ] )"	1259:3:33325:33410	1170116	7	True				
ANR	1172179	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s%s "" , temp , cris_cc_strings [ insn >> 12 ] )"		1170116	0					
ANR	1172180	Callee	* info -> fprintf_func		1170116	0					
ANR	1172181	UnaryOperationExpression	* info -> fprintf_func		1170116	0					
ANR	1172182	UnaryOperator	*		1170116	0					
ANR	1172183	PtrMemberAccess	info -> fprintf_func		1170116	1					
ANR	1172184	Identifier	info		1170116	0					
ANR	1172185	Identifier	fprintf_func		1170116	1					
ANR	1172186	ArgumentList	info -> stream		1170116	1					
ANR	1172187	Argument	info -> stream		1170116	0					
ANR	1172188	PtrMemberAccess	info -> stream		1170116	0					
ANR	1172189	Identifier	info		1170116	0					
ANR	1172190	Identifier	stream		1170116	1					
ANR	1172191	Argument	"""%s%s """		1170116	1					
ANR	1172192	PrimaryExpression	"""%s%s """		1170116	0					
ANR	1172193	Argument	temp		1170116	2					
ANR	1172194	Identifier	temp		1170116	0					
ANR	1172195	Argument	cris_cc_strings [ insn >> 12 ]		1170116	3					
ANR	1172196	ArrayIndexing	cris_cc_strings [ insn >> 12 ]		1170116	0					
ANR	1172197	Identifier	cris_cc_strings		1170116	0					
ANR	1172198	ShiftExpression	insn >> 12		1170116	1		>>			
ANR	1172199	Identifier	insn		1170116	0					
ANR	1172200	PrimaryExpression	12		1170116	1					
ANR	1172201	ExpressionStatement	"( * info -> print_address_func ) ( ( bfd_vma ) where , info )"	1262:3:33416:33467	1170116	8	True				
ANR	1172202	CallExpression	"( * info -> print_address_func ) ( ( bfd_vma ) where , info )"		1170116	0					
ANR	1172203	Callee	* info -> print_address_func		1170116	0					
ANR	1172204	UnaryOperationExpression	* info -> print_address_func		1170116	0					
ANR	1172205	UnaryOperator	*		1170116	0					
ANR	1172206	PtrMemberAccess	info -> print_address_func		1170116	1					
ANR	1172207	Identifier	info		1170116	0					
ANR	1172208	Identifier	print_address_func		1170116	1					
ANR	1172209	ArgumentList	( bfd_vma ) where		1170116	1					
ANR	1172210	Argument	( bfd_vma ) where		1170116	0					
ANR	1172211	CastExpression	( bfd_vma ) where		1170116	0					
ANR	1172212	CastTarget	bfd_vma		1170116	0					
ANR	1172213	Identifier	where		1170116	1					
ANR	1172214	Argument	info		1170116	1					
ANR	1172215	Identifier	info		1170116	0					
ANR	1172216	BreakStatement	break ;	1264:6:33478:33483	1170116	52	True				
ANR	1172217	Label	case 'c' :	1266:4:33490:33498	1170116	53	True				
ANR	1172218	ExpressionStatement	"tp = format_dec ( insn & 31 , tp , 0 )"	1267:6:33506:33540	1170116	54	True				
ANR	1172219	AssignmentExpression	"tp = format_dec ( insn & 31 , tp , 0 )"		1170116	0		=			
ANR	1172220	Identifier	tp		1170116	0					
ANR	1172221	CallExpression	"format_dec ( insn & 31 , tp , 0 )"		1170116	1					
ANR	1172222	Callee	format_dec		1170116	0					
ANR	1172223	Identifier	format_dec		1170116	0					
ANR	1172224	ArgumentList	insn & 31		1170116	1					
ANR	1172225	Argument	insn & 31		1170116	0					
ANR	1172226	BitAndExpression	insn & 31		1170116	0		&			
ANR	1172227	Identifier	insn		1170116	0					
ANR	1172228	PrimaryExpression	31		1170116	1					
ANR	1172229	Argument	tp		1170116	1					
ANR	1172230	Identifier	tp		1170116	0					
ANR	1172231	Argument	0		1170116	2					
ANR	1172232	PrimaryExpression	0		1170116	0					
ANR	1172233	BreakStatement	break ;	1268:6:33548:33553	1170116	55	True				
ANR	1172234	Label	case 'C' :	1270:4:33560:33568	1170116	56	True				
ANR	1172235	ExpressionStatement	"tp = format_dec ( insn & 15 , tp , 0 )"	1271:6:33576:33610	1170116	57	True				
ANR	1172236	AssignmentExpression	"tp = format_dec ( insn & 15 , tp , 0 )"		1170116	0		=			
ANR	1172237	Identifier	tp		1170116	0					
ANR	1172238	CallExpression	"format_dec ( insn & 15 , tp , 0 )"		1170116	1					
ANR	1172239	Callee	format_dec		1170116	0					
ANR	1172240	Identifier	format_dec		1170116	0					
ANR	1172241	ArgumentList	insn & 15		1170116	1					
ANR	1172242	Argument	insn & 15		1170116	0					
ANR	1172243	BitAndExpression	insn & 15		1170116	0		&			
ANR	1172244	Identifier	insn		1170116	0					
ANR	1172245	PrimaryExpression	15		1170116	1					
ANR	1172246	Argument	tp		1170116	1					
ANR	1172247	Identifier	tp		1170116	0					
ANR	1172248	Argument	0		1170116	2					
ANR	1172249	PrimaryExpression	0		1170116	0					
ANR	1172250	BreakStatement	break ;	1272:6:33618:33623	1170116	58	True				
ANR	1172251	Label	case 'o' :	1274:4:33630:33638	1170116	59	True				
ANR	1172252	CompoundStatement		557:1:13631:13645	1170116	60					
ANR	1172253	IdentifierDeclStatement	long offset = insn & 0xfe ;	1276:1:33649:33674	1170116	0	True				
ANR	1172254	IdentifierDecl	offset = insn & 0xfe		1170116	0					
ANR	1172255	IdentifierDeclType	long		1170116	0					
ANR	1172256	Identifier	offset		1170116	1					
ANR	1172257	AssignmentExpression	offset = insn & 0xfe		1170116	2		=			
ANR	1172258	Identifier	offset		1170116	0					
ANR	1172259	BitAndExpression	insn & 0xfe		1170116	1		&			
ANR	1172260	Identifier	insn		1170116	0					
ANR	1172261	PrimaryExpression	0xfe		1170116	1					
ANR	1172262	IdentifierDeclStatement	bfd_vma target ;	1277:1:33677:33691	1170116	1	True				
ANR	1172263	IdentifierDecl	target		1170116	0					
ANR	1172264	IdentifierDeclType	bfd_vma		1170116	0					
ANR	1172265	Identifier	target		1170116	1					
ANR	1172266	IfStatement	if ( insn & 1 )		1170116	2					
ANR	1172267	Condition	insn & 1	1279:5:33699:33706	1170116	0	True				
ANR	1172268	BitAndExpression	insn & 1		1170116	0		&			
ANR	1172269	Identifier	insn		1170116	0					
ANR	1172270	PrimaryExpression	1		1170116	1					
ANR	1172271	CompoundStatement		559:15:13663:13663	1170116	1					
ANR	1172272	ExpressionStatement	offset |= ~0xff	1280:2:33713:33728	1170116	0	True				
ANR	1172273	AssignmentExpression	offset |= ~0xff		1170116	0		|=			
ANR	1172274	Identifier	offset		1170116	0					
ANR	1172275	Identifier	~0xff		1170116	1					
ANR	1172276	IfStatement	if ( opcodep -> match == BA_QUICK_OPCODE )		1170116	3					
ANR	1172277	Condition	opcodep -> match == BA_QUICK_OPCODE	1283:5:33739:33771	1170116	0	True				
ANR	1172278	EqualityExpression	opcodep -> match == BA_QUICK_OPCODE		1170116	0		==			
ANR	1172279	PtrMemberAccess	opcodep -> match		1170116	0					
ANR	1172280	Identifier	opcodep		1170116	0					
ANR	1172281	Identifier	match		1170116	1					
ANR	1172282	Identifier	BA_QUICK_OPCODE		1170116	1					
ANR	1172283	CompoundStatement		563:40:13728:13728	1170116	1					
ANR	1172284	ExpressionStatement	info -> insn_type = dis_branch	1284:2:33778:33806	1170116	0	True				
ANR	1172285	AssignmentExpression	info -> insn_type = dis_branch		1170116	0		=			
ANR	1172286	PtrMemberAccess	info -> insn_type		1170116	0					
ANR	1172287	Identifier	info		1170116	0					
ANR	1172288	Identifier	insn_type		1170116	1					
ANR	1172289	Identifier	dis_branch		1170116	1					
ANR	1172290	ElseStatement	else		1170116	0					
ANR	1172291	CompoundStatement		565:8:13770:13770	1170116	0					
ANR	1172292	ExpressionStatement	info -> insn_type = dis_condbranch	1286:2:33820:33852	1170116	0	True				
ANR	1172293	AssignmentExpression	info -> insn_type = dis_condbranch		1170116	0		=			
ANR	1172294	PtrMemberAccess	info -> insn_type		1170116	0					
ANR	1172295	Identifier	info		1170116	0					
ANR	1172296	Identifier	insn_type		1170116	1					
ANR	1172297	Identifier	dis_condbranch		1170116	1					
ANR	1172298	ExpressionStatement	target = addr + ( ( disdata -> distype == cris_dis_v32 ) ? 0 : 2 ) + offset	1289:1:33859:33928	1170116	4	True				
ANR	1172299	AssignmentExpression	target = addr + ( ( disdata -> distype == cris_dis_v32 ) ? 0 : 2 ) + offset		1170116	0		=			
ANR	1172300	Identifier	target		1170116	0					
ANR	1172301	AdditiveExpression	addr + ( ( disdata -> distype == cris_dis_v32 ) ? 0 : 2 ) + offset		1170116	1		+			
ANR	1172302	Identifier	addr		1170116	0					
ANR	1172303	AdditiveExpression	( ( disdata -> distype == cris_dis_v32 ) ? 0 : 2 ) + offset		1170116	1		+			
ANR	1172304	ConditionalExpression	( disdata -> distype == cris_dis_v32 ) ? 0 : 2		1170116	0					
ANR	1172305	Condition	disdata -> distype == cris_dis_v32		1170116	0					
ANR	1172306	EqualityExpression	disdata -> distype == cris_dis_v32		1170116	0		==			
ANR	1172307	PtrMemberAccess	disdata -> distype		1170116	0					
ANR	1172308	Identifier	disdata		1170116	0					
ANR	1172309	Identifier	distype		1170116	1					
ANR	1172310	Identifier	cris_dis_v32		1170116	1					
ANR	1172311	PrimaryExpression	0		1170116	1					
ANR	1172312	PrimaryExpression	2		1170116	2					
ANR	1172313	Identifier	offset		1170116	1					
ANR	1172314	ExpressionStatement	info -> target = target	1290:1:33931:33952	1170116	5	True				
ANR	1172315	AssignmentExpression	info -> target = target		1170116	0		=			
ANR	1172316	PtrMemberAccess	info -> target		1170116	0					
ANR	1172317	Identifier	info		1170116	0					
ANR	1172318	Identifier	target		1170116	1					
ANR	1172319	Identifier	target		1170116	1					
ANR	1172320	ExpressionStatement	* tp = 0	1291:1:33955:33962	1170116	6	True				
ANR	1172321	AssignmentExpression	* tp = 0		1170116	0		=			
ANR	1172322	UnaryOperationExpression	* tp		1170116	0					
ANR	1172323	UnaryOperator	*		1170116	0					
ANR	1172324	Identifier	tp		1170116	1					
ANR	1172325	PrimaryExpression	0		1170116	1					
ANR	1172326	ExpressionStatement	tp = temp	1292:1:33965:33974	1170116	7	True				
ANR	1172327	AssignmentExpression	tp = temp		1170116	0		=			
ANR	1172328	Identifier	tp		1170116	0					
ANR	1172329	Identifier	temp		1170116	1					
ANR	1172330	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , temp )"	1293:1:33977:34025	1170116	8	True				
ANR	1172331	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , temp )"		1170116	0					
ANR	1172332	Callee	* info -> fprintf_func		1170116	0					
ANR	1172333	UnaryOperationExpression	* info -> fprintf_func		1170116	0					
ANR	1172334	UnaryOperator	*		1170116	0					
ANR	1172335	PtrMemberAccess	info -> fprintf_func		1170116	1					
ANR	1172336	Identifier	info		1170116	0					
ANR	1172337	Identifier	fprintf_func		1170116	1					
ANR	1172338	ArgumentList	info -> stream		1170116	1					
ANR	1172339	Argument	info -> stream		1170116	0					
ANR	1172340	PtrMemberAccess	info -> stream		1170116	0					
ANR	1172341	Identifier	info		1170116	0					
ANR	1172342	Identifier	stream		1170116	1					
ANR	1172343	Argument	"""%s"""		1170116	1					
ANR	1172344	PrimaryExpression	"""%s"""		1170116	0					
ANR	1172345	Argument	temp		1170116	2					
ANR	1172346	Identifier	temp		1170116	0					
ANR	1172347	ExpressionStatement	"( * info -> print_address_func ) ( target , info )"	1294:1:34028:34070	1170116	9	True				
ANR	1172348	CallExpression	"( * info -> print_address_func ) ( target , info )"		1170116	0					
ANR	1172349	Callee	* info -> print_address_func		1170116	0					
ANR	1172350	UnaryOperationExpression	* info -> print_address_func		1170116	0					
ANR	1172351	UnaryOperator	*		1170116	0					
ANR	1172352	PtrMemberAccess	info -> print_address_func		1170116	1					
ANR	1172353	Identifier	info		1170116	0					
ANR	1172354	Identifier	print_address_func		1170116	1					
ANR	1172355	ArgumentList	target		1170116	1					
ANR	1172356	Argument	target		1170116	0					
ANR	1172357	Identifier	target		1170116	0					
ANR	1172358	Argument	info		1170116	1					
ANR	1172359	Identifier	info		1170116	0					
ANR	1172360	BreakStatement	break ;	1296:6:34086:34091	1170116	61	True				
ANR	1172361	Label	case 'Q' :	1298:4:34098:34106	1170116	62	True				
ANR	1172362	Label	case 'O' :	1299:4:34112:34120	1170116	63	True				
ANR	1172363	CompoundStatement		581:1:14085:14108	1170116	64					
ANR	1172364	IdentifierDeclStatement	long number = buffer [ 0 ] ;	1301:1:34131:34154	1170116	0	True				
ANR	1172365	IdentifierDecl	number = buffer [ 0 ]		1170116	0					
ANR	1172366	IdentifierDeclType	long		1170116	0					
ANR	1172367	Identifier	number		1170116	1					
ANR	1172368	AssignmentExpression	number = buffer [ 0 ]		1170116	2		=			
ANR	1172369	Identifier	number		1170116	0					
ANR	1172370	ArrayIndexing	buffer [ 0 ]		1170116	1					
ANR	1172371	Identifier	buffer		1170116	0					
ANR	1172372	PrimaryExpression	0		1170116	1					
ANR	1172373	IfStatement	if ( number > 127 )		1170116	1					
ANR	1172374	Condition	number > 127	1303:5:34162:34173	1170116	0	True				
ANR	1172375	RelationalExpression	number > 127		1170116	0		>			
ANR	1172376	Identifier	number		1170116	0					
ANR	1172377	PrimaryExpression	127		1170116	1					
ANR	1172378	CompoundStatement		583:19:14130:14130	1170116	1					
ANR	1172379	ExpressionStatement	number = number - 256	1304:2:34180:34201	1170116	0	True				
ANR	1172380	AssignmentExpression	number = number - 256		1170116	0		=			
ANR	1172381	Identifier	number		1170116	0					
ANR	1172382	AdditiveExpression	number - 256		1170116	1		-			
ANR	1172383	Identifier	number		1170116	0					
ANR	1172384	PrimaryExpression	256		1170116	1					
ANR	1172385	ExpressionStatement	"tp = format_dec ( number , tp , 1 )"	1307:1:34208:34239	1170116	2	True				
ANR	1172386	AssignmentExpression	"tp = format_dec ( number , tp , 1 )"		1170116	0		=			
ANR	1172387	Identifier	tp		1170116	0					
ANR	1172388	CallExpression	"format_dec ( number , tp , 1 )"		1170116	1					
ANR	1172389	Callee	format_dec		1170116	0					
ANR	1172390	Identifier	format_dec		1170116	0					
ANR	1172391	ArgumentList	number		1170116	1					
ANR	1172392	Argument	number		1170116	0					
ANR	1172393	Identifier	number		1170116	0					
ANR	1172394	Argument	tp		1170116	1					
ANR	1172395	Identifier	tp		1170116	0					
ANR	1172396	Argument	1		1170116	2					
ANR	1172397	PrimaryExpression	1		1170116	0					
ANR	1172398	ExpressionStatement	"* tp ++ = ','"	1308:1:34242:34253	1170116	3	True				
ANR	1172399	AssignmentExpression	"* tp ++ = ','"		1170116	0		=			
ANR	1172400	UnaryOperationExpression	* tp ++		1170116	0					
ANR	1172401	UnaryOperator	*		1170116	0					
ANR	1172402	PostIncDecOperationExpression	tp ++		1170116	1					
ANR	1172403	Identifier	tp		1170116	0					
ANR	1172404	IncDec	++		1170116	1					
ANR	1172405	PrimaryExpression	"','"		1170116	1					
ANR	1172406	ExpressionStatement	"tp = format_reg ( disdata , ( insn >> 12 ) & 15 , tp , with_reg_prefix )"	1309:1:34256:34321	1170116	4	True				
ANR	1172407	AssignmentExpression	"tp = format_reg ( disdata , ( insn >> 12 ) & 15 , tp , with_reg_prefix )"		1170116	0		=			
ANR	1172408	Identifier	tp		1170116	0					
ANR	1172409	CallExpression	"format_reg ( disdata , ( insn >> 12 ) & 15 , tp , with_reg_prefix )"		1170116	1					
ANR	1172410	Callee	format_reg		1170116	0					
ANR	1172411	Identifier	format_reg		1170116	0					
ANR	1172412	ArgumentList	disdata		1170116	1					
ANR	1172413	Argument	disdata		1170116	0					
ANR	1172414	Identifier	disdata		1170116	0					
ANR	1172415	Argument	( insn >> 12 ) & 15		1170116	1					
ANR	1172416	BitAndExpression	( insn >> 12 ) & 15		1170116	0		&			
ANR	1172417	ShiftExpression	insn >> 12		1170116	0		>>			
ANR	1172418	Identifier	insn		1170116	0					
ANR	1172419	PrimaryExpression	12		1170116	1					
ANR	1172420	PrimaryExpression	15		1170116	1					
ANR	1172421	Argument	tp		1170116	2					
ANR	1172422	Identifier	tp		1170116	0					
ANR	1172423	Argument	with_reg_prefix		1170116	3					
ANR	1172424	Identifier	with_reg_prefix		1170116	0					
ANR	1172425	BreakStatement	break ;	1311:6:34337:34342	1170116	65	True				
ANR	1172426	Label	case 'f' :	1313:4:34349:34357	1170116	66	True				
ANR	1172427	ExpressionStatement	"tp = print_flags ( disdata , insn , tp )"	1314:6:34365:34401	1170116	67	True				
ANR	1172428	AssignmentExpression	"tp = print_flags ( disdata , insn , tp )"		1170116	0		=			
ANR	1172429	Identifier	tp		1170116	0					
ANR	1172430	CallExpression	"print_flags ( disdata , insn , tp )"		1170116	1					
ANR	1172431	Callee	print_flags		1170116	0					
ANR	1172432	Identifier	print_flags		1170116	0					
ANR	1172433	ArgumentList	disdata		1170116	1					
ANR	1172434	Argument	disdata		1170116	0					
ANR	1172435	Identifier	disdata		1170116	0					
ANR	1172436	Argument	insn		1170116	1					
ANR	1172437	Identifier	insn		1170116	0					
ANR	1172438	Argument	tp		1170116	2					
ANR	1172439	Identifier	tp		1170116	0					
ANR	1172440	BreakStatement	break ;	1315:6:34409:34414	1170116	68	True				
ANR	1172441	Label	case 'i' :	1317:4:34421:34429	1170116	69	True				
ANR	1172442	ExpressionStatement	"tp = format_dec ( ( insn & 32 ) ? ( insn & 31 ) | ~31L : insn & 31 , tp , 1 )"	1318:6:34437:34506	1170116	70	True				
ANR	1172443	AssignmentExpression	"tp = format_dec ( ( insn & 32 ) ? ( insn & 31 ) | ~31L : insn & 31 , tp , 1 )"		1170116	0		=			
ANR	1172444	Identifier	tp		1170116	0					
ANR	1172445	CallExpression	"format_dec ( ( insn & 32 ) ? ( insn & 31 ) | ~31L : insn & 31 , tp , 1 )"		1170116	1					
ANR	1172446	Callee	format_dec		1170116	0					
ANR	1172447	Identifier	format_dec		1170116	0					
ANR	1172448	ArgumentList	( insn & 32 ) ? ( insn & 31 ) | ~31L : insn & 31		1170116	1					
ANR	1172449	Argument	( insn & 32 ) ? ( insn & 31 ) | ~31L : insn & 31		1170116	0					
ANR	1172450	ConditionalExpression	( insn & 32 ) ? ( insn & 31 ) | ~31L : insn & 31		1170116	0					
ANR	1172451	Condition	insn & 32		1170116	0					
ANR	1172452	BitAndExpression	insn & 32		1170116	0		&			
ANR	1172453	Identifier	insn		1170116	0					
ANR	1172454	PrimaryExpression	32		1170116	1					
ANR	1172455	InclusiveOrExpression	( insn & 31 ) | ~31L		1170116	1		|			
ANR	1172456	BitAndExpression	insn & 31		1170116	0		&			
ANR	1172457	Identifier	insn		1170116	0					
ANR	1172458	PrimaryExpression	31		1170116	1					
ANR	1172459	Identifier	~31L		1170116	1					
ANR	1172460	BitAndExpression	insn & 31		1170116	2		&			
ANR	1172461	Identifier	insn		1170116	0					
ANR	1172462	PrimaryExpression	31		1170116	1					
ANR	1172463	Argument	tp		1170116	1					
ANR	1172464	Identifier	tp		1170116	0					
ANR	1172465	Argument	1		1170116	2					
ANR	1172466	PrimaryExpression	1		1170116	0					
ANR	1172467	BreakStatement	break ;	1319:6:34514:34519	1170116	71	True				
ANR	1172468	Label	case 'P' :	1321:4:34526:34534	1170116	72	True				
ANR	1172469	CompoundStatement		603:1:14499:14589	1170116	73					
ANR	1172470	IdentifierDeclStatement	"const struct cris_spec_reg * sregp = spec_reg_info ( ( insn >> 12 ) & 15 , disdata -> distype ) ;"	1323:1:34545:34635	1170116	0	True				
ANR	1172471	IdentifierDecl	"* sregp = spec_reg_info ( ( insn >> 12 ) & 15 , disdata -> distype )"		1170116	0					
ANR	1172472	IdentifierDeclType	const struct cris_spec_reg *		1170116	0					
ANR	1172473	Identifier	sregp		1170116	1					
ANR	1172474	AssignmentExpression	"* sregp = spec_reg_info ( ( insn >> 12 ) & 15 , disdata -> distype )"		1170116	2		=			
ANR	1172475	Identifier	sregp		1170116	0					
ANR	1172476	CallExpression	"spec_reg_info ( ( insn >> 12 ) & 15 , disdata -> distype )"		1170116	1					
ANR	1172477	Callee	spec_reg_info		1170116	0					
ANR	1172478	Identifier	spec_reg_info		1170116	0					
ANR	1172479	ArgumentList	( insn >> 12 ) & 15		1170116	1					
ANR	1172480	Argument	( insn >> 12 ) & 15		1170116	0					
ANR	1172481	BitAndExpression	( insn >> 12 ) & 15		1170116	0		&			
ANR	1172482	ShiftExpression	insn >> 12		1170116	0		>>			
ANR	1172483	Identifier	insn		1170116	0					
ANR	1172484	PrimaryExpression	12		1170116	1					
ANR	1172485	PrimaryExpression	15		1170116	1					
ANR	1172486	Argument	disdata -> distype		1170116	1					
ANR	1172487	PtrMemberAccess	disdata -> distype		1170116	0					
ANR	1172488	Identifier	disdata		1170116	0					
ANR	1172489	Identifier	distype		1170116	1					
ANR	1172490	IfStatement	if ( sregp )		1170116	1					
ANR	1172491	Condition	sregp	1326:4:34642:34646	1170116	0	True				
ANR	1172492	Identifier	sregp		1170116	0					
ANR	1172493	CompoundStatement		606:11:14603:14603	1170116	1					
ANR	1172494	IfStatement	if ( ! sregp -> name )		1170116	0					
ANR	1172495	Condition	! sregp -> name	1327:5:34656:34667	1170116	0	True				
ANR	1172496	UnaryOperationExpression	! sregp -> name		1170116	0					
ANR	1172497	UnaryOperator	!		1170116	0					
ANR	1172498	PtrMemberAccess	sregp -> name		1170116	1					
ANR	1172499	Identifier	sregp		1170116	0					
ANR	1172500	Identifier	name		1170116	1					
ANR	1172501	CompoundStatement		607:19:14624:14624	1170116	1					
ANR	1172502	ExpressionStatement	* tp ++ = '?'	1329:2:34731:34742	1170116	0	True				
ANR	1172503	AssignmentExpression	* tp ++ = '?'		1170116	0		=			
ANR	1172504	UnaryOperationExpression	* tp ++		1170116	0					
ANR	1172505	UnaryOperator	*		1170116	0					
ANR	1172506	PostIncDecOperationExpression	tp ++		1170116	1					
ANR	1172507	Identifier	tp		1170116	0					
ANR	1172508	IncDec	++		1170116	1					
ANR	1172509	PrimaryExpression	'?'		1170116	1					
ANR	1172510	ElseStatement	else		1170116	0					
ANR	1172511	CompoundStatement		610:8:14706:14706	1170116	0					
ANR	1172512	IfStatement	if ( with_reg_prefix )		1170116	0					
ANR	1172513	Condition	with_reg_prefix	1331:6:34760:34774	1170116	0	True				
ANR	1172514	Identifier	with_reg_prefix		1170116	0					
ANR	1172515	CompoundStatement		611:23:14731:14731	1170116	1					
ANR	1172516	ExpressionStatement	* tp ++ = REGISTER_PREFIX_CHAR	1332:3:34782:34810	1170116	0	True				
ANR	1172517	AssignmentExpression	* tp ++ = REGISTER_PREFIX_CHAR		1170116	0		=			
ANR	1172518	UnaryOperationExpression	* tp ++		1170116	0					
ANR	1172519	UnaryOperator	*		1170116	0					
ANR	1172520	PostIncDecOperationExpression	tp ++		1170116	1					
ANR	1172521	Identifier	tp		1170116	0					
ANR	1172522	IncDec	++		1170116	1					
ANR	1172523	Identifier	REGISTER_PREFIX_CHAR		1170116	1					
ANR	1172524	ExpressionStatement	"strcpy ( tp , sregp -> name )"	1334:2:34818:34842	1170116	1	True				
ANR	1172525	CallExpression	"strcpy ( tp , sregp -> name )"		1170116	0					
ANR	1172526	Callee	strcpy		1170116	0					
ANR	1172527	Identifier	strcpy		1170116	0					
ANR	1172528	ArgumentList	tp		1170116	1					
ANR	1172529	Argument	tp		1170116	0					
ANR	1172530	Identifier	tp		1170116	0					
ANR	1172531	Argument	sregp -> name		1170116	1					
ANR	1172532	PtrMemberAccess	sregp -> name		1170116	0					
ANR	1172533	Identifier	sregp		1170116	0					
ANR	1172534	Identifier	name		1170116	1					
ANR	1172535	ExpressionStatement	tp += strlen ( tp )	1335:2:34846:34863	1170116	2	True				
ANR	1172536	AssignmentExpression	tp += strlen ( tp )		1170116	0		+=			
ANR	1172537	Identifier	tp		1170116	0					
ANR	1172538	CallExpression	strlen ( tp )		1170116	1					
ANR	1172539	Callee	strlen		1170116	0					
ANR	1172540	Identifier	strlen		1170116	0					
ANR	1172541	ArgumentList	tp		1170116	1					
ANR	1172542	Argument	tp		1170116	0					
ANR	1172543	Identifier	tp		1170116	0					
ANR	1172544	BreakStatement	break ;	1339:6:34886:34891	1170116	74	True				
ANR	1172545	Label	default :	1341:4:34898:34905	1170116	75	True				
ANR	1172546	Identifier	default		1170116	0					
ANR	1172547	ExpressionStatement	"strcpy ( tp , ""???"" )"	1342:6:34913:34931	1170116	76	True				
ANR	1172548	CallExpression	"strcpy ( tp , ""???"" )"		1170116	0					
ANR	1172549	Callee	strcpy		1170116	0					
ANR	1172550	Identifier	strcpy		1170116	0					
ANR	1172551	ArgumentList	tp		1170116	1					
ANR	1172552	Argument	tp		1170116	0					
ANR	1172553	Identifier	tp		1170116	0					
ANR	1172554	Argument	"""???"""		1170116	1					
ANR	1172555	PrimaryExpression	"""???"""		1170116	0					
ANR	1172556	ExpressionStatement	tp += 3	1343:6:34939:34946	1170116	77	True				
ANR	1172557	AssignmentExpression	tp += 3		1170116	0		+=			
ANR	1172558	Identifier	tp		1170116	0					
ANR	1172559	PrimaryExpression	3		1170116	1					
ANR	1172560	ExpressionStatement	* tp = 0	1347:2:34961:34968	1170116	16	True				
ANR	1172561	AssignmentExpression	* tp = 0		1170116	0		=			
ANR	1172562	UnaryOperationExpression	* tp		1170116	0					
ANR	1172563	UnaryOperator	*		1170116	0					
ANR	1172564	Identifier	tp		1170116	1					
ANR	1172565	PrimaryExpression	0		1170116	1					
ANR	1172566	IfStatement	if ( prefix_opcodep )		1170116	17					
ANR	1172567	Condition	prefix_opcodep	1349:6:34977:34990	1170116	0	True				
ANR	1172568	Identifier	prefix_opcodep		1170116	0					
ANR	1172569	CompoundStatement		629:22:14947:14947	1170116	1					
ANR	1172570	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , "" (OOPS unused prefix \\""%s: %s\\"")"" , prefix_opcodep -> name , prefix_opcodep -> args )"	1350:3:34998:35118	1170116	0	True				
ANR	1172571	CallExpression	"( * info -> fprintf_func ) ( info -> stream , "" (OOPS unused prefix \\""%s: %s\\"")"" , prefix_opcodep -> name , prefix_opcodep -> args )"		1170116	0					
ANR	1172572	Callee	* info -> fprintf_func		1170116	0					
ANR	1172573	UnaryOperationExpression	* info -> fprintf_func		1170116	0					
ANR	1172574	UnaryOperator	*		1170116	0					
ANR	1172575	PtrMemberAccess	info -> fprintf_func		1170116	1					
ANR	1172576	Identifier	info		1170116	0					
ANR	1172577	Identifier	fprintf_func		1170116	1					
ANR	1172578	ArgumentList	info -> stream		1170116	1					
ANR	1172579	Argument	info -> stream		1170116	0					
ANR	1172580	PtrMemberAccess	info -> stream		1170116	0					
ANR	1172581	Identifier	info		1170116	0					
ANR	1172582	Identifier	stream		1170116	1					
ANR	1172583	Argument	""" (OOPS unused prefix \\""%s: %s\\"")"""		1170116	1					
ANR	1172584	PrimaryExpression	""" (OOPS unused prefix \\""%s: %s\\"")"""		1170116	0					
ANR	1172585	Argument	prefix_opcodep -> name		1170116	2					
ANR	1172586	PtrMemberAccess	prefix_opcodep -> name		1170116	0					
ANR	1172587	Identifier	prefix_opcodep		1170116	0					
ANR	1172588	Identifier	name		1170116	1					
ANR	1172589	Argument	prefix_opcodep -> args		1170116	3					
ANR	1172590	PtrMemberAccess	prefix_opcodep -> args		1170116	0					
ANR	1172591	Identifier	prefix_opcodep		1170116	0					
ANR	1172592	Identifier	args		1170116	1					
ANR	1172593	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , temp )"	1354:2:35127:35175	1170116	18	True				
ANR	1172594	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , temp )"		1170116	0					
ANR	1172595	Callee	* info -> fprintf_func		1170116	0					
ANR	1172596	UnaryOperationExpression	* info -> fprintf_func		1170116	0					
ANR	1172597	UnaryOperator	*		1170116	0					
ANR	1172598	PtrMemberAccess	info -> fprintf_func		1170116	1					
ANR	1172599	Identifier	info		1170116	0					
ANR	1172600	Identifier	fprintf_func		1170116	1					
ANR	1172601	ArgumentList	info -> stream		1170116	1					
ANR	1172602	Argument	info -> stream		1170116	0					
ANR	1172603	PtrMemberAccess	info -> stream		1170116	0					
ANR	1172604	Identifier	info		1170116	0					
ANR	1172605	Identifier	stream		1170116	1					
ANR	1172606	Argument	"""%s"""		1170116	1					
ANR	1172607	PrimaryExpression	"""%s"""		1170116	0					
ANR	1172608	Argument	temp		1170116	2					
ANR	1172609	Identifier	temp		1170116	0					
ANR	1172610	IfStatement	if ( TRACE_CASE && case_offset_counter == 0 )		1170116	19					
ANR	1172611	Condition	TRACE_CASE && case_offset_counter == 0	1359:6:35394:35431	1170116	0	True				
ANR	1172612	AndExpression	TRACE_CASE && case_offset_counter == 0		1170116	0		&&			
ANR	1172613	Identifier	TRACE_CASE		1170116	0					
ANR	1172614	EqualityExpression	case_offset_counter == 0		1170116	1		==			
ANR	1172615	Identifier	case_offset_counter		1170116	0					
ANR	1172616	PrimaryExpression	0		1170116	1					
ANR	1172617	CompoundStatement		640:4:15392:15392	1170116	1					
ANR	1172618	IfStatement	"if ( CONST_STRNEQ ( opcodep -> name , ""sub"" ) )"		1170116	0					
ANR	1172619	Condition	"CONST_STRNEQ ( opcodep -> name , ""sub"" )"	1361:7:35447:35481	1170116	0	True				
ANR	1172620	CallExpression	"CONST_STRNEQ ( opcodep -> name , ""sub"" )"		1170116	0					
ANR	1172621	Callee	CONST_STRNEQ		1170116	0					
ANR	1172622	Identifier	CONST_STRNEQ		1170116	0					
ANR	1172623	ArgumentList	opcodep -> name		1170116	1					
ANR	1172624	Argument	opcodep -> name		1170116	0					
ANR	1172625	PtrMemberAccess	opcodep -> name		1170116	0					
ANR	1172626	Identifier	opcodep		1170116	0					
ANR	1172627	Identifier	name		1170116	1					
ANR	1172628	Argument	"""sub"""		1170116	1					
ANR	1172629	PrimaryExpression	"""sub"""		1170116	0					
ANR	1172630	CompoundStatement		641:44:15438:15438	1170116	1					
ANR	1172631	ExpressionStatement	case_offset = last_immediate	1362:4:35490:35518	1170116	0	True				
ANR	1172632	AssignmentExpression	case_offset = last_immediate		1170116	0		=			
ANR	1172633	Identifier	case_offset		1170116	0					
ANR	1172634	Identifier	last_immediate		1170116	1					
ANR	1172635	ElseStatement	else		1170116	0					
ANR	1172636	IfStatement	"if ( CONST_STRNEQ ( opcodep -> name , ""add"" ) )"		1170116	0					
ANR	1172637	Condition	"CONST_STRNEQ ( opcodep -> name , ""add"" )"	1365:14:35608:35642	1170116	0	True				
ANR	1172638	CallExpression	"CONST_STRNEQ ( opcodep -> name , ""add"" )"		1170116	0					
ANR	1172639	Callee	CONST_STRNEQ		1170116	0					
ANR	1172640	Identifier	CONST_STRNEQ		1170116	0					
ANR	1172641	ArgumentList	opcodep -> name		1170116	1					
ANR	1172642	Argument	opcodep -> name		1170116	0					
ANR	1172643	PtrMemberAccess	opcodep -> name		1170116	0					
ANR	1172644	Identifier	opcodep		1170116	0					
ANR	1172645	Identifier	name		1170116	1					
ANR	1172646	Argument	"""add"""		1170116	1					
ANR	1172647	PrimaryExpression	"""add"""		1170116	0					
ANR	1172648	CompoundStatement		645:51:15599:15599	1170116	1					
ANR	1172649	ExpressionStatement	case_offset = - last_immediate	1367:4:35712:35741	1170116	0	True				
ANR	1172650	AssignmentExpression	case_offset = - last_immediate		1170116	0		=			
ANR	1172651	Identifier	case_offset		1170116	0					
ANR	1172652	UnaryOperationExpression	- last_immediate		1170116	1					
ANR	1172653	UnaryOperator	-		1170116	0					
ANR	1172654	Identifier	last_immediate		1170116	1					
ANR	1172655	ElseStatement	else		1170116	0					
ANR	1172656	IfStatement	"if ( CONST_STRNEQ ( opcodep -> name , ""bound"" ) )"		1170116	0					
ANR	1172657	Condition	"CONST_STRNEQ ( opcodep -> name , ""bound"" )"	1370:14:35816:35852	1170116	0	True				
ANR	1172658	CallExpression	"CONST_STRNEQ ( opcodep -> name , ""bound"" )"		1170116	0					
ANR	1172659	Callee	CONST_STRNEQ		1170116	0					
ANR	1172660	Identifier	CONST_STRNEQ		1170116	0					
ANR	1172661	ArgumentList	opcodep -> name		1170116	1					
ANR	1172662	Argument	opcodep -> name		1170116	0					
ANR	1172663	PtrMemberAccess	opcodep -> name		1170116	0					
ANR	1172664	Identifier	opcodep		1170116	0					
ANR	1172665	Identifier	name		1170116	1					
ANR	1172666	Argument	"""bound"""		1170116	1					
ANR	1172667	PrimaryExpression	"""bound"""		1170116	0					
ANR	1172668	CompoundStatement		650:53:15809:15809	1170116	1					
ANR	1172669	ExpressionStatement	no_of_case_offsets = last_immediate + 1	1371:4:35861:35900	1170116	0	True				
ANR	1172670	AssignmentExpression	no_of_case_offsets = last_immediate + 1		1170116	0		=			
ANR	1172671	Identifier	no_of_case_offsets		1170116	0					
ANR	1172672	AdditiveExpression	last_immediate + 1		1170116	1		+			
ANR	1172673	Identifier	last_immediate		1170116	0					
ANR	1172674	PrimaryExpression	1		1170116	1					
ANR	1172675	ElseStatement	else		1170116	0					
ANR	1172676	IfStatement	if ( info -> insn_type == dis_jsr || info -> insn_type == dis_branch || info -> insn_type == dis_condbranch )		1170116	0					
ANR	1172677	Condition	info -> insn_type == dis_jsr || info -> insn_type == dis_branch || info -> insn_type == dis_condbranch	1375:14:36034:36129	1170116	0	True				
ANR	1172678	OrExpression	info -> insn_type == dis_jsr || info -> insn_type == dis_branch || info -> insn_type == dis_condbranch		1170116	0		||			
ANR	1172679	EqualityExpression	info -> insn_type == dis_jsr		1170116	0		==			
ANR	1172680	PtrMemberAccess	info -> insn_type		1170116	0					
ANR	1172681	Identifier	info		1170116	0					
ANR	1172682	Identifier	insn_type		1170116	1					
ANR	1172683	Identifier	dis_jsr		1170116	1					
ANR	1172684	OrExpression	info -> insn_type == dis_branch || info -> insn_type == dis_condbranch		1170116	1		||			
ANR	1172685	EqualityExpression	info -> insn_type == dis_branch		1170116	0		==			
ANR	1172686	PtrMemberAccess	info -> insn_type		1170116	0					
ANR	1172687	Identifier	info		1170116	0					
ANR	1172688	Identifier	insn_type		1170116	1					
ANR	1172689	Identifier	dis_branch		1170116	1					
ANR	1172690	EqualityExpression	info -> insn_type == dis_condbranch		1170116	1		==			
ANR	1172691	PtrMemberAccess	info -> insn_type		1170116	0					
ANR	1172692	Identifier	info		1170116	0					
ANR	1172693	Identifier	insn_type		1170116	1					
ANR	1172694	Identifier	dis_condbranch		1170116	1					
ANR	1172695	CompoundStatement		655:112:16086:16086	1170116	1					
ANR	1172696	ExpressionStatement	case_offset = 0	1376:4:36138:36153	1170116	0	True				
ANR	1172697	AssignmentExpression	case_offset = 0		1170116	0		=			
ANR	1172698	Identifier	case_offset		1170116	0					
ANR	1172699	PrimaryExpression	0		1170116	1					
ANR	1172700	ReturnType	static void		1170116	1					
ANR	1172701	Identifier	print_with_operands		1170116	2					
ANR	1172702	ParameterList	"const struct cris_opcode * opcodep , unsigned int insn , unsigned char * buffer , bfd_vma addr , disassemble_info * info , const struct cris_opcode * prefix_opcodep , unsigned int prefix_insn , unsigned char * prefix_buffer , bfd_boolean with_reg_prefix"		1170116	3					
ANR	1172703	Parameter	const struct cris_opcode * opcodep	709:21:19614:19646	1170116	0	True				
ANR	1172704	ParameterType	const struct cris_opcode *		1170116	0					
ANR	1172705	Identifier	opcodep		1170116	1					
ANR	1172706	Parameter	unsigned int insn	710:7:19656:19672	1170116	1	True				
ANR	1172707	ParameterType	unsigned int		1170116	0					
ANR	1172708	Identifier	insn		1170116	1					
ANR	1172709	Parameter	unsigned char * buffer	711:7:19682:19702	1170116	2	True				
ANR	1172710	ParameterType	unsigned char *		1170116	0					
ANR	1172711	Identifier	buffer		1170116	1					
ANR	1172712	Parameter	bfd_vma addr	712:7:19712:19723	1170116	3	True				
ANR	1172713	ParameterType	bfd_vma		1170116	0					
ANR	1172714	Identifier	addr		1170116	1					
ANR	1172715	Parameter	disassemble_info * info	713:7:19733:19754	1170116	4	True				
ANR	1172716	ParameterType	disassemble_info *		1170116	0					
ANR	1172717	Identifier	info		1170116	1					
ANR	1172718	Parameter	const struct cris_opcode * prefix_opcodep	717:7:19897:19936	1170116	5	True				
ANR	1172719	ParameterType	const struct cris_opcode *		1170116	0					
ANR	1172720	Identifier	prefix_opcodep		1170116	1					
ANR	1172721	Parameter	unsigned int prefix_insn	718:7:19946:19969	1170116	6	True				
ANR	1172722	ParameterType	unsigned int		1170116	0					
ANR	1172723	Identifier	prefix_insn		1170116	1					
ANR	1172724	Parameter	unsigned char * prefix_buffer	719:7:19979:20006	1170116	7	True				
ANR	1172725	ParameterType	unsigned char *		1170116	0					
ANR	1172726	Identifier	prefix_buffer		1170116	1					
ANR	1172727	Parameter	bfd_boolean with_reg_prefix	720:7:20016:20042	1170116	8	True				
ANR	1172728	ParameterType	bfd_boolean		1170116	0					
ANR	1172729	Identifier	with_reg_prefix		1170116	1					
ANR	1172730	CFGEntryNode	ENTRY		1170116		True				
ANR	1172731	CFGExitNode	EXIT		1170116		True				
ANR	1172732	Symbol	case_offset		1170116						
ANR	1172733	Symbol	mode_char		1170116						
ANR	1172734	Symbol	with_reg_prefix		1170116						
ANR	1172735	Symbol	CRIS_DIS_FLAG_MEM_TARGET2_MULT2		1170116						
ANR	1172736	Symbol	info -> target2		1170116						
ANR	1172737	Symbol	BRANCH_PC_LOW		1170116						
ANR	1172738	Symbol	info -> fprintf_func		1170116						
ANR	1172739	Symbol	SIZE_FIX_32		1170116						
ANR	1172740	Symbol	number		1170116						
ANR	1172741	Symbol	CRIS_DIS_FLAG_MEM_TARGET2_MEM		1170116						
ANR	1172742	Symbol	* opcodep		1170116						
ANR	1172743	Symbol	CONST_STRNEQ		1170116						
ANR	1172744	Symbol	* prefix_insn		1170116						
ANR	1172745	Symbol	format_reg		1170116						
ANR	1172746	Symbol	* tp		1170116						
ANR	1172747	Symbol	opcodep -> name		1170116						
ANR	1172748	Symbol	SIZE_SPEC_REG		1170116						
ANR	1172749	Symbol	cris_dis_v32		1170116						
ANR	1172750	Symbol	* opcodep -> args		1170116						
ANR	1172751	Symbol	no_of_case_offsets		1170116						
ANR	1172752	Symbol	* sregp		1170116						
ANR	1172753	Symbol	size		1170116						
ANR	1172754	Symbol	* cs		1170116						
ANR	1172755	Symbol	highbyte		1170116						
ANR	1172756	Symbol	disdata -> distype		1170116						
ANR	1172757	Symbol	opcodep -> delayed		1170116						
ANR	1172758	Symbol	BA_QUICK_OPCODE		1170116						
ANR	1172759	Symbol	CRIS_DIS_FLAG_MEM_TARGET2_IS_REG		1170116						
ANR	1172760	Symbol	info -> branch_delay_insns		1170116						
ANR	1172761	Symbol	~31L		1170116						
ANR	1172762	Symbol	info -> stream		1170116						
ANR	1172763	Symbol	~0xf000		1170116						
ANR	1172764	Symbol	opcodep -> match		1170116						
ANR	1172765	Symbol	* * s		1170116						
ANR	1172766	Symbol	where		1170116						
ANR	1172767	Symbol	prefix_buffer		1170116						
ANR	1172768	Symbol	BA_PC_INCR_OPCODE		1170116						
ANR	1172769	Symbol	* buffer		1170116						
ANR	1172770	Symbol	mode_size		1170116						
ANR	1172771	Symbol	BDAP_QUICK_OPCODE		1170116						
ANR	1172772	Symbol	info -> private_data		1170116						
ANR	1172773	Symbol	prefix_opcodep -> args		1170116						
ANR	1172774	Symbol	cs		1170116						
ANR	1172775	Symbol	insn		1170116						
ANR	1172776	Symbol	s		1170116						
ANR	1172777	Symbol	~1		1170116						
ANR	1172778	Symbol	* nbytes		1170116						
ANR	1172779	Symbol	CRIS_DIS_FLAG_MEM_TARGET_IS_REG		1170116						
ANR	1172780	Symbol	opcodep		1170116						
ANR	1172781	Symbol	* info		1170116						
ANR	1172782	Symbol	dis_branch		1170116						
ANR	1172783	Symbol	sregp -> reg_size		1170116						
ANR	1172784	Symbol	tp		1170116						
ANR	1172785	Symbol	CRIS_DIS_FLAG_MEMREF		1170116						
ANR	1172786	Symbol	~0xff		1170116						
ANR	1172787	Symbol	TRACE_CASE		1170116						
ANR	1172788	Symbol	format_hex		1170116						
ANR	1172789	Symbol	prefix_opcodep -> match		1170116						
ANR	1172790	Symbol	cris_cc_strings		1170116						
ANR	1172791	Symbol	dis_jsr		1170116						
ANR	1172792	Symbol	info -> data_size		1170116						
ANR	1172793	Symbol	BRANCH_INCR_HIGH		1170116						
ANR	1172794	Symbol	REGISTER_PREFIX_CHAR		1170116						
ANR	1172795	Symbol	DIP_OPCODE		1170116						
ANR	1172796	Symbol	dis_nonbranch		1170116						
ANR	1172797	Symbol	strlen		1170116						
ANR	1172798	Symbol	CRIS_DIS_FLAG_MEM_TARGET2_MEM_WORD		1170116						
ANR	1172799	Symbol	CRIS_DIS_FLAG_MEM_TARGET2_MEM_BYTE		1170116						
ANR	1172800	Symbol	spec_reg_info		1170116						
ANR	1172801	Symbol	* prefix_buffer		1170116						
ANR	1172802	Symbol	buffer		1170116						
ANR	1172803	Symbol	info		1170116						
ANR	1172804	Symbol	format_sup_reg		1170116						
ANR	1172805	Symbol	print_flags		1170116						
ANR	1172806	Symbol	last_immediate		1170116						
ANR	1172807	Symbol	NULL		1170116						
ANR	1172808	Symbol	offset		1170116						
ANR	1172809	Symbol	* prefix_opcodep		1170116						
ANR	1172810	Symbol	disdata		1170116						
ANR	1172811	Symbol	signedp		1170116						
ANR	1172812	Symbol	* temp		1170116						
ANR	1172813	Symbol	* cris_cc_strings		1170116						
ANR	1172814	Symbol	* disdata		1170116						
ANR	1172815	Symbol	prefix_opcodep		1170116						
ANR	1172816	Symbol	sregp		1170116						
ANR	1172817	Symbol	case_offset_counter		1170116						
ANR	1172818	Symbol	dis_dref		1170116						
ANR	1172819	Symbol	info -> flags		1170116						
ANR	1172820	Symbol	info -> target		1170116						
ANR	1172821	Symbol	opcodep -> args		1170116						
ANR	1172822	Symbol	prefix_insn		1170116						
ANR	1172823	Symbol	* mode_char		1170116						
ANR	1172824	Symbol	info -> print_address_func		1170116						
ANR	1172825	Symbol	sregp -> name		1170116						
ANR	1172826	Symbol	* * opcodep		1170116						
ANR	1172827	Symbol	addr		1170116						
ANR	1172828	Symbol	info -> insn_type		1170116						
ANR	1172829	Symbol	prefix_opcodep -> name		1170116						
ANR	1172830	Symbol	temp		1170116						
ANR	1172831	Symbol	* insn		1170116						
ANR	1172832	Symbol	format_dec		1170116						
ANR	1172833	Symbol	dis_condbranch		1170116						
ANR	1172834	Symbol	nbytes		1170116						
ANR	1172835	Symbol	target		1170116						
ANR	1172836	Symbol	* tp ++		1170116						
ANR	1172837	Symbol	CRIS_DIS_FLAG_MEM_TARGET2_MULT4		1170116						
ANR	1172838	Symbol	opcodep -> imm_oprnd_size		1170116						
ANR	1172839	Symbol	* s		1170116						
ANR	1172840	Symbol	* opcodep -> name		1170116						
ANR	1172841	Function	print_insn_cris_generic	1386:0:36339:42003							
ANR	1172842	FunctionDef	"print_insn_cris_generic (bfd_vma memaddr , disassemble_info * info , bfd_boolean with_reg_prefix)"		1172841	0					
ANR	1172843	CompoundStatement		1390:0:36446:42003	1172841	0					
ANR	1172844	IdentifierDeclStatement	int nbytes ;	1391:2:36450:36460	1172841	0	True				
ANR	1172845	IdentifierDecl	nbytes		1172841	0					
ANR	1172846	IdentifierDeclType	int		1172841	0					
ANR	1172847	Identifier	nbytes		1172841	1					
ANR	1172848	IdentifierDeclStatement	unsigned int insn ;	1392:2:36464:36481	1172841	1	True				
ANR	1172849	IdentifierDecl	insn		1172841	0					
ANR	1172850	IdentifierDeclType	unsigned int		1172841	0					
ANR	1172851	Identifier	insn		1172841	1					
ANR	1172852	IdentifierDeclStatement	const struct cris_opcode * matchedp ;	1393:2:36485:36519	1172841	2	True				
ANR	1172853	IdentifierDecl	* matchedp		1172841	0					
ANR	1172854	IdentifierDeclType	const struct cris_opcode *		1172841	0					
ANR	1172855	Identifier	matchedp		1172841	1					
ANR	1172856	IdentifierDeclStatement	int advance = 0 ;	1394:2:36523:36538	1172841	3	True				
ANR	1172857	IdentifierDecl	advance = 0		1172841	0					
ANR	1172858	IdentifierDeclType	int		1172841	0					
ANR	1172859	Identifier	advance		1172841	1					
ANR	1172860	AssignmentExpression	advance = 0		1172841	2		=			
ANR	1172861	Identifier	advance		1172841	0					
ANR	1172862	PrimaryExpression	0		1172841	1					
ANR	1172863	IdentifierDeclStatement	struct cris_disasm_data * disdata = ( struct cris_disasm_data * ) info -> private_data ;	1395:2:36542:36627	1172841	4	True				
ANR	1172864	IdentifierDecl	* disdata = ( struct cris_disasm_data * ) info -> private_data		1172841	0					
ANR	1172865	IdentifierDeclType	struct cris_disasm_data *		1172841	0					
ANR	1172866	Identifier	disdata		1172841	1					
ANR	1172867	AssignmentExpression	* disdata = ( struct cris_disasm_data * ) info -> private_data		1172841	2		=			
ANR	1172868	Identifier	disdata		1172841	0					
ANR	1172869	CastExpression	( struct cris_disasm_data * ) info -> private_data		1172841	1					
ANR	1172870	CastTarget	struct cris_disasm_data *		1172841	0					
ANR	1172871	PtrMemberAccess	info -> private_data		1172841	1					
ANR	1172872	Identifier	info		1172841	0					
ANR	1172873	Identifier	private_data		1172841	1					
ANR	1172874	IdentifierDeclStatement	unsigned char buffer [ MAX_BYTES_PER_CRIS_INSN ] ;	1400:2:36758:36803	1172841	5	True				
ANR	1172875	IdentifierDecl	buffer [ MAX_BYTES_PER_CRIS_INSN ]		1172841	0					
ANR	1172876	IdentifierDeclType	unsigned char [ MAX_BYTES_PER_CRIS_INSN ]		1172841	0					
ANR	1172877	Identifier	buffer		1172841	1					
ANR	1172878	Identifier	MAX_BYTES_PER_CRIS_INSN		1172841	2					
ANR	1172879	IdentifierDeclStatement	unsigned char * bufp ;	1401:2:36807:36826	1172841	6	True				
ANR	1172880	IdentifierDecl	* bufp		1172841	0					
ANR	1172881	IdentifierDeclType	unsigned char *		1172841	0					
ANR	1172882	Identifier	bufp		1172841	1					
ANR	1172883	IdentifierDeclStatement	int status = 0 ;	1402:2:36830:36844	1172841	7	True				
ANR	1172884	IdentifierDecl	status = 0		1172841	0					
ANR	1172885	IdentifierDeclType	int		1172841	0					
ANR	1172886	Identifier	status		1172841	1					
ANR	1172887	AssignmentExpression	status = 0		1172841	2		=			
ANR	1172888	Identifier	status		1172841	0					
ANR	1172889	PrimaryExpression	0		1172841	1					
ANR	1172890	IdentifierDeclStatement	bfd_vma addr ;	1403:2:36848:36860	1172841	8	True				
ANR	1172891	IdentifierDecl	addr		1172841	0					
ANR	1172892	IdentifierDeclType	bfd_vma		1172841	0					
ANR	1172893	Identifier	addr		1172841	1					
ANR	1172894	ForStatement	for ( nbytes = MAX_BYTES_PER_CRIS_INSN ; nbytes > 0 ; nbytes -= 2 )		1172841	9					
ANR	1172895	ForInit	nbytes = MAX_BYTES_PER_CRIS_INSN ;	1412:7:37163:37195	1172841	0	True				
ANR	1172896	AssignmentExpression	nbytes = MAX_BYTES_PER_CRIS_INSN		1172841	0		=			
ANR	1172897	Identifier	nbytes		1172841	0					
ANR	1172898	Identifier	MAX_BYTES_PER_CRIS_INSN		1172841	1					
ANR	1172899	Condition	nbytes > 0	1412:41:37197:37206	1172841	1	True				
ANR	1172900	RelationalExpression	nbytes > 0		1172841	0		>			
ANR	1172901	Identifier	nbytes		1172841	0					
ANR	1172902	PrimaryExpression	0		1172841	1					
ANR	1172903	AssignmentExpression	nbytes -= 2	1412:53:37209:37219	1172841	2	True	-=			
ANR	1172904	Identifier	nbytes		1172841	0					
ANR	1172905	PrimaryExpression	2		1172841	1					
ANR	1172906	CompoundStatement		24:4:779:779	1172841	3					
ANR	1172907	ExpressionStatement	"status = ( * info -> read_memory_func ) ( memaddr , buffer , nbytes , info )"	1414:6:37234:37300	1172841	0	True				
ANR	1172908	AssignmentExpression	"status = ( * info -> read_memory_func ) ( memaddr , buffer , nbytes , info )"		1172841	0		=			
ANR	1172909	Identifier	status		1172841	0					
ANR	1172910	CallExpression	"( * info -> read_memory_func ) ( memaddr , buffer , nbytes , info )"		1172841	1					
ANR	1172911	Callee	* info -> read_memory_func		1172841	0					
ANR	1172912	UnaryOperationExpression	* info -> read_memory_func		1172841	0					
ANR	1172913	UnaryOperator	*		1172841	0					
ANR	1172914	PtrMemberAccess	info -> read_memory_func		1172841	1					
ANR	1172915	Identifier	info		1172841	0					
ANR	1172916	Identifier	read_memory_func		1172841	1					
ANR	1172917	ArgumentList	memaddr		1172841	1					
ANR	1172918	Argument	memaddr		1172841	0					
ANR	1172919	Identifier	memaddr		1172841	0					
ANR	1172920	Argument	buffer		1172841	1					
ANR	1172921	Identifier	buffer		1172841	0					
ANR	1172922	Argument	nbytes		1172841	2					
ANR	1172923	Identifier	nbytes		1172841	0					
ANR	1172924	Argument	info		1172841	3					
ANR	1172925	Identifier	info		1172841	0					
ANR	1172926	IfStatement	if ( status == 0 )		1172841	1					
ANR	1172927	Condition	status == 0	1415:10:37312:37322	1172841	0	True				
ANR	1172928	EqualityExpression	status == 0		1172841	0		==			
ANR	1172929	Identifier	status		1172841	0					
ANR	1172930	PrimaryExpression	0		1172841	1					
ANR	1172931	CompoundStatement		26:23:878:878	1172841	1					
ANR	1172932	BreakStatement	break ;	1416:7:37334:37339	1172841	0	True				
ANR	1172933	IfStatement	if ( nbytes != MAX_BYTES_PER_CRIS_INSN )		1172841	10					
ANR	1172934	Condition	nbytes != MAX_BYTES_PER_CRIS_INSN	1422:8:37497:37529	1172841	0	True				
ANR	1172935	EqualityExpression	nbytes != MAX_BYTES_PER_CRIS_INSN		1172841	0		!=			
ANR	1172936	Identifier	nbytes		1172841	0					
ANR	1172937	Identifier	MAX_BYTES_PER_CRIS_INSN		1172841	1					
ANR	1172938	CompoundStatement		33:43:1085:1085	1172841	1					
ANR	1172939	ExpressionStatement	"memset ( buffer + nbytes , 0 , MAX_BYTES_PER_CRIS_INSN - nbytes )"	1423:5:37539:37600	1172841	0	True				
ANR	1172940	CallExpression	"memset ( buffer + nbytes , 0 , MAX_BYTES_PER_CRIS_INSN - nbytes )"		1172841	0					
ANR	1172941	Callee	memset		1172841	0					
ANR	1172942	Identifier	memset		1172841	0					
ANR	1172943	ArgumentList	buffer + nbytes		1172841	1					
ANR	1172944	Argument	buffer + nbytes		1172841	0					
ANR	1172945	AdditiveExpression	buffer + nbytes		1172841	0		+			
ANR	1172946	Identifier	buffer		1172841	0					
ANR	1172947	Identifier	nbytes		1172841	1					
ANR	1172948	Argument	0		1172841	1					
ANR	1172949	PrimaryExpression	0		1172841	0					
ANR	1172950	Argument	MAX_BYTES_PER_CRIS_INSN - nbytes		1172841	2					
ANR	1172951	AdditiveExpression	MAX_BYTES_PER_CRIS_INSN - nbytes		1172841	0		-			
ANR	1172952	Identifier	MAX_BYTES_PER_CRIS_INSN		1172841	0					
ANR	1172953	Identifier	nbytes		1172841	1					
ANR	1172954	ExpressionStatement	addr = memaddr	1426:4:37613:37627	1172841	11	True				
ANR	1172955	AssignmentExpression	addr = memaddr		1172841	0		=			
ANR	1172956	Identifier	addr		1172841	0					
ANR	1172957	Identifier	memaddr		1172841	1					
ANR	1172958	ExpressionStatement	bufp = buffer	1427:4:37633:37646	1172841	12	True				
ANR	1172959	AssignmentExpression	bufp = buffer		1172841	0		=			
ANR	1172960	Identifier	bufp		1172841	0					
ANR	1172961	Identifier	buffer		1172841	1					
ANR	1172962	ExpressionStatement	info -> insn_info_valid = 1	1430:4:37701:37726	1172841	13	True				
ANR	1172963	AssignmentExpression	info -> insn_info_valid = 1		1172841	0		=			
ANR	1172964	PtrMemberAccess	info -> insn_info_valid		1172841	0					
ANR	1172965	Identifier	info		1172841	0					
ANR	1172966	Identifier	insn_info_valid		1172841	1					
ANR	1172967	PrimaryExpression	1		1172841	1					
ANR	1172968	ExpressionStatement	info -> branch_delay_insns = 0	1431:4:37732:37760	1172841	14	True				
ANR	1172969	AssignmentExpression	info -> branch_delay_insns = 0		1172841	0		=			
ANR	1172970	PtrMemberAccess	info -> branch_delay_insns		1172841	0					
ANR	1172971	Identifier	info		1172841	0					
ANR	1172972	Identifier	branch_delay_insns		1172841	1					
ANR	1172973	PrimaryExpression	0		1172841	1					
ANR	1172974	ExpressionStatement	info -> data_size = 0	1432:4:37766:37785	1172841	15	True				
ANR	1172975	AssignmentExpression	info -> data_size = 0		1172841	0		=			
ANR	1172976	PtrMemberAccess	info -> data_size		1172841	0					
ANR	1172977	Identifier	info		1172841	0					
ANR	1172978	Identifier	data_size		1172841	1					
ANR	1172979	PrimaryExpression	0		1172841	1					
ANR	1172980	ExpressionStatement	info -> insn_type = dis_nonbranch	1433:4:37791:37822	1172841	16	True				
ANR	1172981	AssignmentExpression	info -> insn_type = dis_nonbranch		1172841	0		=			
ANR	1172982	PtrMemberAccess	info -> insn_type		1172841	0					
ANR	1172983	Identifier	info		1172841	0					
ANR	1172984	Identifier	insn_type		1172841	1					
ANR	1172985	Identifier	dis_nonbranch		1172841	1					
ANR	1172986	ExpressionStatement	info -> flags = 0	1434:4:37828:37843	1172841	17	True				
ANR	1172987	AssignmentExpression	info -> flags = 0		1172841	0		=			
ANR	1172988	PtrMemberAccess	info -> flags		1172841	0					
ANR	1172989	Identifier	info		1172841	0					
ANR	1172990	Identifier	flags		1172841	1					
ANR	1172991	PrimaryExpression	0		1172841	1					
ANR	1172992	ExpressionStatement	info -> target = 0	1435:4:37849:37865	1172841	18	True				
ANR	1172993	AssignmentExpression	info -> target = 0		1172841	0		=			
ANR	1172994	PtrMemberAccess	info -> target		1172841	0					
ANR	1172995	Identifier	info		1172841	0					
ANR	1172996	Identifier	target		1172841	1					
ANR	1172997	PrimaryExpression	0		1172841	1					
ANR	1172998	ExpressionStatement	info -> target2 = 0	1436:4:37871:37888	1172841	19	True				
ANR	1172999	AssignmentExpression	info -> target2 = 0		1172841	0		=			
ANR	1173000	PtrMemberAccess	info -> target2		1172841	0					
ANR	1173001	Identifier	info		1172841	0					
ANR	1173002	Identifier	target2		1172841	1					
ANR	1173003	PrimaryExpression	0		1172841	1					
ANR	1173004	IfStatement	if ( nbytes != 0 )		1172841	20					
ANR	1173005	Condition	nbytes != 0	1439:8:37946:37956	1172841	0	True				
ANR	1173006	EqualityExpression	nbytes != 0		1172841	0		!=			
ANR	1173007	Identifier	nbytes		1172841	0					
ANR	1173008	PrimaryExpression	0		1172841	1					
ANR	1173009	CompoundStatement		50:21:1512:1512	1172841	1					
ANR	1173010	ExpressionStatement	matchedp = NULL	1440:5:37966:37981	1172841	0	True				
ANR	1173011	AssignmentExpression	matchedp = NULL		1172841	0		=			
ANR	1173012	Identifier	matchedp		1172841	0					
ANR	1173013	Identifier	NULL		1172841	1					
ANR	1173014	ExpressionStatement	insn = bufp [ 0 ] + bufp [ 1 ] * 256	1442:5:37989:38019	1172841	1	True				
ANR	1173015	AssignmentExpression	insn = bufp [ 0 ] + bufp [ 1 ] * 256		1172841	0		=			
ANR	1173016	Identifier	insn		1172841	0					
ANR	1173017	AdditiveExpression	bufp [ 0 ] + bufp [ 1 ] * 256		1172841	1		+			
ANR	1173018	ArrayIndexing	bufp [ 0 ]		1172841	0					
ANR	1173019	Identifier	bufp		1172841	0					
ANR	1173020	PrimaryExpression	0		1172841	1					
ANR	1173021	MultiplicativeExpression	bufp [ 1 ] * 256		1172841	1		*			
ANR	1173022	ArrayIndexing	bufp [ 1 ]		1172841	0					
ANR	1173023	Identifier	bufp		1172841	0					
ANR	1173024	PrimaryExpression	1		1172841	1					
ANR	1173025	PrimaryExpression	256		1172841	1					
ANR	1173026	IfStatement	if ( TRACE_CASE && case_offset_counter != 0 )		1172841	2					
ANR	1173027	Condition	TRACE_CASE && case_offset_counter != 0	1445:9:38100:38137	1172841	0	True				
ANR	1173028	AndExpression	TRACE_CASE && case_offset_counter != 0		1172841	0		&&			
ANR	1173029	Identifier	TRACE_CASE		1172841	0					
ANR	1173030	EqualityExpression	case_offset_counter != 0		1172841	1		!=			
ANR	1173031	Identifier	case_offset_counter		1172841	0					
ANR	1173032	PrimaryExpression	0		1172841	1					
ANR	1173033	CompoundStatement		56:49:1693:1693	1172841	1					
ANR	1173034	ExpressionStatement	info -> insn_type = dis_noninsn	1446:6:38148:38177	1172841	0	True				
ANR	1173035	AssignmentExpression	info -> insn_type = dis_noninsn		1172841	0		=			
ANR	1173036	PtrMemberAccess	info -> insn_type		1172841	0					
ANR	1173037	Identifier	info		1172841	0					
ANR	1173038	Identifier	insn_type		1172841	1					
ANR	1173039	Identifier	dis_noninsn		1172841	1					
ANR	1173040	ExpressionStatement	advance += 2	1447:6:38185:38197	1172841	1	True				
ANR	1173041	AssignmentExpression	advance += 2		1172841	0		+=			
ANR	1173042	Identifier	advance		1172841	0					
ANR	1173043	PrimaryExpression	2		1172841	1					
ANR	1173044	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""case %ld%s: -> "" , case_offset + no_of_case_offsets - case_offset_counter , case_offset_counter == 1 ? ""/default"" : """" )"	1450:6:38268:38437	1172841	2	True				
ANR	1173045	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""case %ld%s: -> "" , case_offset + no_of_case_offsets - case_offset_counter , case_offset_counter == 1 ? ""/default"" : """" )"		1172841	0					
ANR	1173046	Callee	* info -> fprintf_func		1172841	0					
ANR	1173047	UnaryOperationExpression	* info -> fprintf_func		1172841	0					
ANR	1173048	UnaryOperator	*		1172841	0					
ANR	1173049	PtrMemberAccess	info -> fprintf_func		1172841	1					
ANR	1173050	Identifier	info		1172841	0					
ANR	1173051	Identifier	fprintf_func		1172841	1					
ANR	1173052	ArgumentList	info -> stream		1172841	1					
ANR	1173053	Argument	info -> stream		1172841	0					
ANR	1173054	PtrMemberAccess	info -> stream		1172841	0					
ANR	1173055	Identifier	info		1172841	0					
ANR	1173056	Identifier	stream		1172841	1					
ANR	1173057	Argument	"""case %ld%s: -> """		1172841	1					
ANR	1173058	PrimaryExpression	"""case %ld%s: -> """		1172841	0					
ANR	1173059	Argument	case_offset + no_of_case_offsets - case_offset_counter		1172841	2					
ANR	1173060	AdditiveExpression	case_offset + no_of_case_offsets - case_offset_counter		1172841	0		+			
ANR	1173061	Identifier	case_offset		1172841	0					
ANR	1173062	AdditiveExpression	no_of_case_offsets - case_offset_counter		1172841	1		-			
ANR	1173063	Identifier	no_of_case_offsets		1172841	0					
ANR	1173064	Identifier	case_offset_counter		1172841	1					
ANR	1173065	Argument	"case_offset_counter == 1 ? ""/default"" : """""		1172841	3					
ANR	1173066	ConditionalExpression	"case_offset_counter == 1 ? ""/default"" : """""		1172841	0					
ANR	1173067	Condition	case_offset_counter == 1		1172841	0					
ANR	1173068	EqualityExpression	case_offset_counter == 1		1172841	0		==			
ANR	1173069	Identifier	case_offset_counter		1172841	0					
ANR	1173070	PrimaryExpression	1		1172841	1					
ANR	1173071	PrimaryExpression	"""/default"""		1172841	1					
ANR	1173072	PrimaryExpression	""""""		1172841	2					
ANR	1173073	ExpressionStatement	"( * info -> print_address_func ) ( ( bfd_vma ) ( ( short ) ( insn ) + ( long ) ( addr - ( no_of_case_offsets - case_offset_counter ) * 2 ) ) , info )"	1454:6:38446:38571	1172841	3	True				
ANR	1173074	CallExpression	"( * info -> print_address_func ) ( ( bfd_vma ) ( ( short ) ( insn ) + ( long ) ( addr - ( no_of_case_offsets - case_offset_counter ) * 2 ) ) , info )"		1172841	0					
ANR	1173075	Callee	* info -> print_address_func		1172841	0					
ANR	1173076	UnaryOperationExpression	* info -> print_address_func		1172841	0					
ANR	1173077	UnaryOperator	*		1172841	0					
ANR	1173078	PtrMemberAccess	info -> print_address_func		1172841	1					
ANR	1173079	Identifier	info		1172841	0					
ANR	1173080	Identifier	print_address_func		1172841	1					
ANR	1173081	ArgumentList	( bfd_vma ) ( ( short ) ( insn ) + ( long ) ( addr - ( no_of_case_offsets - case_offset_counter ) * 2 ) )		1172841	1					
ANR	1173082	Argument	( bfd_vma ) ( ( short ) ( insn ) + ( long ) ( addr - ( no_of_case_offsets - case_offset_counter ) * 2 ) )		1172841	0					
ANR	1173083	CastExpression	( bfd_vma ) ( ( short ) ( insn ) + ( long ) ( addr - ( no_of_case_offsets - case_offset_counter ) * 2 ) )		1172841	0					
ANR	1173084	CastTarget	bfd_vma		1172841	0					
ANR	1173085	CastExpression	( short ) ( insn ) + ( long ) ( addr - ( no_of_case_offsets - case_offset_counter ) * 2 )		1172841	1					
ANR	1173086	CastTarget	short		1172841	0					
ANR	1173087	CastExpression	( insn ) + ( long ) ( addr - ( no_of_case_offsets - case_offset_counter ) * 2 )		1172841	1					
ANR	1173088	CastTarget	insn		1172841	0					
ANR	1173089	UnaryOperationExpression	+ ( long ) ( addr - ( no_of_case_offsets - case_offset_counter ) * 2 )		1172841	1					
ANR	1173090	UnaryOperator	+		1172841	0					
ANR	1173091	CastExpression	( long ) ( addr - ( no_of_case_offsets - case_offset_counter ) * 2 )		1172841	1					
ANR	1173092	CastTarget	long		1172841	0					
ANR	1173093	AdditiveExpression	addr - ( no_of_case_offsets - case_offset_counter ) * 2		1172841	1		-			
ANR	1173094	Identifier	addr		1172841	0					
ANR	1173095	MultiplicativeExpression	( no_of_case_offsets - case_offset_counter ) * 2		1172841	1		*			
ANR	1173096	AdditiveExpression	no_of_case_offsets - case_offset_counter		1172841	0		-			
ANR	1173097	Identifier	no_of_case_offsets		1172841	0					
ANR	1173098	Identifier	case_offset_counter		1172841	1					
ANR	1173099	PrimaryExpression	2		1172841	1					
ANR	1173100	Argument	info		1172841	1					
ANR	1173101	Identifier	info		1172841	0					
ANR	1173102	ExpressionStatement	case_offset_counter --	1455:6:38579:38600	1172841	4	True				
ANR	1173103	PostIncDecOperationExpression	case_offset_counter --		1172841	0					
ANR	1173104	Identifier	case_offset_counter		1172841	0					
ANR	1173105	IncDec	--		1172841	1					
ANR	1173106	IfStatement	if ( case_offset_counter == 0 )		1172841	5					
ANR	1173107	Condition	case_offset_counter == 0	1459:10:38696:38719	1172841	0	True				
ANR	1173108	EqualityExpression	case_offset_counter == 0		1172841	0		==			
ANR	1173109	Identifier	case_offset_counter		1172841	0					
ANR	1173110	PrimaryExpression	0		1172841	1					
ANR	1173111	CompoundStatement		70:36:2275:2275	1172841	1					
ANR	1173112	ExpressionStatement	case_offset = 0	1460:7:38731:38746	1172841	0	True				
ANR	1173113	AssignmentExpression	case_offset = 0		1172841	0		=			
ANR	1173114	Identifier	case_offset		1172841	0					
ANR	1173115	PrimaryExpression	0		1172841	1					
ANR	1173116	ElseStatement	else		1172841	0					
ANR	1173117	IfStatement	if ( insn == 0 )		1172841	0					
ANR	1173118	Condition	insn == 0	1462:16:38772:38780	1172841	0	True				
ANR	1173119	EqualityExpression	insn == 0		1172841	0		==			
ANR	1173120	Identifier	insn		1172841	0					
ANR	1173121	PrimaryExpression	0		1172841	1					
ANR	1173122	CompoundStatement		73:27:2336:2336	1172841	1					
ANR	1173123	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , disdata -> distype == cris_dis_v32 ? ""bcc ."" : ""bcc .+2"" )"	1467:6:39025:39140	1172841	0	True				
ANR	1173124	CallExpression	"( * info -> fprintf_func ) ( info -> stream , disdata -> distype == cris_dis_v32 ? ""bcc ."" : ""bcc .+2"" )"		1172841	0					
ANR	1173125	Callee	* info -> fprintf_func		1172841	0					
ANR	1173126	UnaryOperationExpression	* info -> fprintf_func		1172841	0					
ANR	1173127	UnaryOperator	*		1172841	0					
ANR	1173128	PtrMemberAccess	info -> fprintf_func		1172841	1					
ANR	1173129	Identifier	info		1172841	0					
ANR	1173130	Identifier	fprintf_func		1172841	1					
ANR	1173131	ArgumentList	info -> stream		1172841	1					
ANR	1173132	Argument	info -> stream		1172841	0					
ANR	1173133	PtrMemberAccess	info -> stream		1172841	0					
ANR	1173134	Identifier	info		1172841	0					
ANR	1173135	Identifier	stream		1172841	1					
ANR	1173136	Argument	"disdata -> distype == cris_dis_v32 ? ""bcc ."" : ""bcc .+2"""		1172841	1					
ANR	1173137	ConditionalExpression	"disdata -> distype == cris_dis_v32 ? ""bcc ."" : ""bcc .+2"""		1172841	0					
ANR	1173138	Condition	disdata -> distype == cris_dis_v32		1172841	0					
ANR	1173139	EqualityExpression	disdata -> distype == cris_dis_v32		1172841	0		==			
ANR	1173140	PtrMemberAccess	disdata -> distype		1172841	0					
ANR	1173141	Identifier	disdata		1172841	0					
ANR	1173142	Identifier	distype		1172841	1					
ANR	1173143	Identifier	cris_dis_v32		1172841	1					
ANR	1173144	PrimaryExpression	"""bcc ."""		1172841	1					
ANR	1173145	PrimaryExpression	"""bcc .+2"""		1172841	2					
ANR	1173146	ExpressionStatement	info -> insn_type = dis_noninsn	1471:6:39148:39177	1172841	1	True				
ANR	1173147	AssignmentExpression	info -> insn_type = dis_noninsn		1172841	0		=			
ANR	1173148	PtrMemberAccess	info -> insn_type		1172841	0					
ANR	1173149	Identifier	info		1172841	0					
ANR	1173150	Identifier	insn_type		1172841	1					
ANR	1173151	Identifier	dis_noninsn		1172841	1					
ANR	1173152	ExpressionStatement	advance += 2	1472:6:39185:39197	1172841	2	True				
ANR	1173153	AssignmentExpression	advance += 2		1172841	0		+=			
ANR	1173154	Identifier	advance		1172841	0					
ANR	1173155	PrimaryExpression	2		1172841	1					
ANR	1173156	ElseStatement	else		1172841	0					
ANR	1173157	CompoundStatement		88:6:2909:2928	1172841	0					
ANR	1173158	IdentifierDeclStatement	const struct cris_opcode * prefix_opcodep = NULL ;	1474:6:39219:39266	1172841	0	True				
ANR	1173159	IdentifierDecl	* prefix_opcodep = NULL		1172841	0					
ANR	1173160	IdentifierDeclType	const struct cris_opcode *		1172841	0					
ANR	1173161	Identifier	prefix_opcodep		1172841	1					
ANR	1173162	AssignmentExpression	* prefix_opcodep = NULL		1172841	2		=			
ANR	1173163	Identifier	NULL		1172841	0					
ANR	1173164	Identifier	NULL		1172841	1					
ANR	1173165	IdentifierDeclStatement	unsigned char * prefix_buffer = bufp ;	1475:6:39274:39309	1172841	1	True				
ANR	1173166	IdentifierDecl	* prefix_buffer = bufp		1172841	0					
ANR	1173167	IdentifierDeclType	unsigned char *		1172841	0					
ANR	1173168	Identifier	prefix_buffer		1172841	1					
ANR	1173169	AssignmentExpression	* prefix_buffer = bufp		1172841	2		=			
ANR	1173170	Identifier	bufp		1172841	0					
ANR	1173171	Identifier	bufp		1172841	1					
ANR	1173172	IdentifierDeclStatement	unsigned int prefix_insn = insn ;	1476:6:39317:39348	1172841	2	True				
ANR	1173173	IdentifierDecl	prefix_insn = insn		1172841	0					
ANR	1173174	IdentifierDeclType	unsigned int		1172841	0					
ANR	1173175	Identifier	prefix_insn		1172841	1					
ANR	1173176	AssignmentExpression	prefix_insn = insn		1172841	2		=			
ANR	1173177	Identifier	insn		1172841	0					
ANR	1173178	Identifier	insn		1172841	1					
ANR	1173179	IdentifierDeclStatement	int prefix_size = 0 ;	1477:6:39356:39375	1172841	3	True				
ANR	1173180	IdentifierDecl	prefix_size = 0		1172841	0					
ANR	1173181	IdentifierDeclType	int		1172841	0					
ANR	1173182	Identifier	prefix_size		1172841	1					
ANR	1173183	AssignmentExpression	prefix_size = 0		1172841	2		=			
ANR	1173184	Identifier	prefix_size		1172841	0					
ANR	1173185	PrimaryExpression	0		1172841	1					
ANR	1173186	ExpressionStatement	"matchedp = get_opcode_entry ( insn , NO_CRIS_PREFIX , disdata )"	1479:6:39384:39443	1172841	4	True				
ANR	1173187	AssignmentExpression	"matchedp = get_opcode_entry ( insn , NO_CRIS_PREFIX , disdata )"		1172841	0		=			
ANR	1173188	Identifier	matchedp		1172841	0					
ANR	1173189	CallExpression	"get_opcode_entry ( insn , NO_CRIS_PREFIX , disdata )"		1172841	1					
ANR	1173190	Callee	get_opcode_entry		1172841	0					
ANR	1173191	Identifier	get_opcode_entry		1172841	0					
ANR	1173192	ArgumentList	insn		1172841	1					
ANR	1173193	Argument	insn		1172841	0					
ANR	1173194	Identifier	insn		1172841	0					
ANR	1173195	Argument	NO_CRIS_PREFIX		1172841	1					
ANR	1173196	Identifier	NO_CRIS_PREFIX		1172841	0					
ANR	1173197	Argument	disdata		1172841	2					
ANR	1173198	Identifier	disdata		1172841	0					
ANR	1173199	IfStatement	if ( matchedp != NULL && PARSE_PREFIX && matchedp -> args [ 0 ] == 'p' )		1172841	5					
ANR	1173200	Condition	matchedp != NULL && PARSE_PREFIX && matchedp -> args [ 0 ] == 'p'	1483:10:39564:39623	1172841	0	True				
ANR	1173201	AndExpression	matchedp != NULL && PARSE_PREFIX && matchedp -> args [ 0 ] == 'p'		1172841	0		&&			
ANR	1173202	EqualityExpression	matchedp != NULL		1172841	0		!=			
ANR	1173203	Identifier	matchedp		1172841	0					
ANR	1173204	Identifier	NULL		1172841	1					
ANR	1173205	AndExpression	PARSE_PREFIX && matchedp -> args [ 0 ] == 'p'		1172841	1		&&			
ANR	1173206	Identifier	PARSE_PREFIX		1172841	0					
ANR	1173207	EqualityExpression	matchedp -> args [ 0 ] == 'p'		1172841	1		==			
ANR	1173208	ArrayIndexing	matchedp -> args [ 0 ]		1172841	0					
ANR	1173209	PtrMemberAccess	matchedp -> args		1172841	0					
ANR	1173210	Identifier	matchedp		1172841	0					
ANR	1173211	Identifier	args		1172841	1					
ANR	1173212	PrimaryExpression	0		1172841	1					
ANR	1173213	PrimaryExpression	'p'		1172841	1					
ANR	1173214	CompoundStatement		94:72:3179:3179	1172841	1					
ANR	1173215	ExpressionStatement	"prefix_size = bytes_to_skip ( prefix_insn , matchedp , disdata -> distype , NULL )"	1486:7:39721:39804	1172841	0	True				
ANR	1173216	AssignmentExpression	"prefix_size = bytes_to_skip ( prefix_insn , matchedp , disdata -> distype , NULL )"		1172841	0		=			
ANR	1173217	Identifier	prefix_size		1172841	0					
ANR	1173218	CallExpression	"bytes_to_skip ( prefix_insn , matchedp , disdata -> distype , NULL )"		1172841	1					
ANR	1173219	Callee	bytes_to_skip		1172841	0					
ANR	1173220	Identifier	bytes_to_skip		1172841	0					
ANR	1173221	ArgumentList	prefix_insn		1172841	1					
ANR	1173222	Argument	prefix_insn		1172841	0					
ANR	1173223	Identifier	prefix_insn		1172841	0					
ANR	1173224	Argument	matchedp		1172841	1					
ANR	1173225	Identifier	matchedp		1172841	0					
ANR	1173226	Argument	disdata -> distype		1172841	2					
ANR	1173227	PtrMemberAccess	disdata -> distype		1172841	0					
ANR	1173228	Identifier	disdata		1172841	0					
ANR	1173229	Identifier	distype		1172841	1					
ANR	1173230	Argument	NULL		1172841	3					
ANR	1173231	Identifier	NULL		1172841	0					
ANR	1173232	ExpressionStatement	prefix_opcodep = matchedp	1488:7:39813:39838	1172841	1	True				
ANR	1173233	AssignmentExpression	prefix_opcodep = matchedp		1172841	0		=			
ANR	1173234	Identifier	prefix_opcodep		1172841	0					
ANR	1173235	Identifier	matchedp		1172841	1					
ANR	1173236	ExpressionStatement	insn = bufp [ prefix_size ] + bufp [ prefix_size + 1 ] * 256	1490:7:39848:39902	1172841	2	True				
ANR	1173237	AssignmentExpression	insn = bufp [ prefix_size ] + bufp [ prefix_size + 1 ] * 256		1172841	0		=			
ANR	1173238	Identifier	insn		1172841	0					
ANR	1173239	AdditiveExpression	bufp [ prefix_size ] + bufp [ prefix_size + 1 ] * 256		1172841	1		+			
ANR	1173240	ArrayIndexing	bufp [ prefix_size ]		1172841	0					
ANR	1173241	Identifier	bufp		1172841	0					
ANR	1173242	Identifier	prefix_size		1172841	1					
ANR	1173243	MultiplicativeExpression	bufp [ prefix_size + 1 ] * 256		1172841	1		*			
ANR	1173244	ArrayIndexing	bufp [ prefix_size + 1 ]		1172841	0					
ANR	1173245	Identifier	bufp		1172841	0					
ANR	1173246	AdditiveExpression	prefix_size + 1		1172841	1		+			
ANR	1173247	Identifier	prefix_size		1172841	0					
ANR	1173248	PrimaryExpression	1		1172841	1					
ANR	1173249	PrimaryExpression	256		1172841	1					
ANR	1173250	ExpressionStatement	"matchedp = get_opcode_entry ( insn , prefix_insn , disdata )"	1491:7:39911:39967	1172841	3	True				
ANR	1173251	AssignmentExpression	"matchedp = get_opcode_entry ( insn , prefix_insn , disdata )"		1172841	0		=			
ANR	1173252	Identifier	matchedp		1172841	0					
ANR	1173253	CallExpression	"get_opcode_entry ( insn , prefix_insn , disdata )"		1172841	1					
ANR	1173254	Callee	get_opcode_entry		1172841	0					
ANR	1173255	Identifier	get_opcode_entry		1172841	0					
ANR	1173256	ArgumentList	insn		1172841	1					
ANR	1173257	Argument	insn		1172841	0					
ANR	1173258	Identifier	insn		1172841	0					
ANR	1173259	Argument	prefix_insn		1172841	1					
ANR	1173260	Identifier	prefix_insn		1172841	0					
ANR	1173261	Argument	disdata		1172841	2					
ANR	1173262	Identifier	disdata		1172841	0					
ANR	1173263	IfStatement	if ( matchedp != NULL )		1172841	4					
ANR	1173264	Condition	matchedp != NULL	1493:11:39981:39996	1172841	0	True				
ANR	1173265	EqualityExpression	matchedp != NULL		1172841	0		!=			
ANR	1173266	Identifier	matchedp		1172841	0					
ANR	1173267	Identifier	NULL		1172841	1					
ANR	1173268	CompoundStatement		104:29:3552:3552	1172841	1					
ANR	1173269	ExpressionStatement	addr += prefix_size	1494:8:40009:40028	1172841	0	True				
ANR	1173270	AssignmentExpression	addr += prefix_size		1172841	0		+=			
ANR	1173271	Identifier	addr		1172841	0					
ANR	1173272	Identifier	prefix_size		1172841	1					
ANR	1173273	ExpressionStatement	bufp += prefix_size	1495:8:40038:40057	1172841	1	True				
ANR	1173274	AssignmentExpression	bufp += prefix_size		1172841	0		+=			
ANR	1173275	Identifier	bufp		1172841	0					
ANR	1173276	Identifier	prefix_size		1172841	1					
ANR	1173277	ExpressionStatement	advance += prefix_size	1496:8:40067:40089	1172841	2	True				
ANR	1173278	AssignmentExpression	advance += prefix_size		1172841	0		+=			
ANR	1173279	Identifier	advance		1172841	0					
ANR	1173280	Identifier	prefix_size		1172841	1					
ANR	1173281	ElseStatement	else		1172841	0					
ANR	1173282	CompoundStatement		108:14:3658:3658	1172841	0					
ANR	1173283	ExpressionStatement	matchedp = prefix_opcodep	1501:8:40276:40301	1172841	0	True				
ANR	1173284	AssignmentExpression	matchedp = prefix_opcodep		1172841	0		=			
ANR	1173285	Identifier	matchedp		1172841	0					
ANR	1173286	Identifier	prefix_opcodep		1172841	1					
ANR	1173287	ExpressionStatement	insn = prefix_insn	1502:8:40311:40329	1172841	1	True				
ANR	1173288	AssignmentExpression	insn = prefix_insn		1172841	0		=			
ANR	1173289	Identifier	insn		1172841	0					
ANR	1173290	Identifier	prefix_insn		1172841	1					
ANR	1173291	ExpressionStatement	prefix_opcodep = NULL	1503:8:40339:40360	1172841	2	True				
ANR	1173292	AssignmentExpression	prefix_opcodep = NULL		1172841	0		=			
ANR	1173293	Identifier	prefix_opcodep		1172841	0					
ANR	1173294	Identifier	NULL		1172841	1					
ANR	1173295	IfStatement	if ( ! matchedp )		1172841	6					
ANR	1173296	Condition	! matchedp	1507:10:40390:40398	1172841	0	True				
ANR	1173297	UnaryOperationExpression	! matchedp		1172841	0					
ANR	1173298	UnaryOperator	!		1172841	0					
ANR	1173299	Identifier	matchedp		1172841	1					
ANR	1173300	CompoundStatement		118:21:3954:3954	1172841	1					
ANR	1173301	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""??0x%x"" , insn )"	1508:7:40410:40462	1172841	0	True				
ANR	1173302	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""??0x%x"" , insn )"		1172841	0					
ANR	1173303	Callee	* info -> fprintf_func		1172841	0					
ANR	1173304	UnaryOperationExpression	* info -> fprintf_func		1172841	0					
ANR	1173305	UnaryOperator	*		1172841	0					
ANR	1173306	PtrMemberAccess	info -> fprintf_func		1172841	1					
ANR	1173307	Identifier	info		1172841	0					
ANR	1173308	Identifier	fprintf_func		1172841	1					
ANR	1173309	ArgumentList	info -> stream		1172841	1					
ANR	1173310	Argument	info -> stream		1172841	0					
ANR	1173311	PtrMemberAccess	info -> stream		1172841	0					
ANR	1173312	Identifier	info		1172841	0					
ANR	1173313	Identifier	stream		1172841	1					
ANR	1173314	Argument	"""??0x%x"""		1172841	1					
ANR	1173315	PrimaryExpression	"""??0x%x"""		1172841	0					
ANR	1173316	Argument	insn		1172841	2					
ANR	1173317	Identifier	insn		1172841	0					
ANR	1173318	ExpressionStatement	advance += 2	1509:7:40471:40483	1172841	1	True				
ANR	1173319	AssignmentExpression	advance += 2		1172841	0		+=			
ANR	1173320	Identifier	advance		1172841	0					
ANR	1173321	PrimaryExpression	2		1172841	1					
ANR	1173322	ExpressionStatement	info -> insn_type = dis_noninsn	1511:7:40493:40522	1172841	2	True				
ANR	1173323	AssignmentExpression	info -> insn_type = dis_noninsn		1172841	0		=			
ANR	1173324	PtrMemberAccess	info -> insn_type		1172841	0					
ANR	1173325	Identifier	info		1172841	0					
ANR	1173326	Identifier	insn_type		1172841	1					
ANR	1173327	Identifier	dis_noninsn		1172841	1					
ANR	1173328	ElseStatement	else		1172841	0					
ANR	1173329	CompoundStatement		123:13:4090:4090	1172841	0					
ANR	1173330	ExpressionStatement	"advance += bytes_to_skip ( insn , matchedp , disdata -> distype , prefix_opcodep )"	1513:7:40546:40629	1172841	0	True				
ANR	1173331	AssignmentExpression	"advance += bytes_to_skip ( insn , matchedp , disdata -> distype , prefix_opcodep )"		1172841	0		+=			
ANR	1173332	Identifier	advance		1172841	0					
ANR	1173333	CallExpression	"bytes_to_skip ( insn , matchedp , disdata -> distype , prefix_opcodep )"		1172841	1					
ANR	1173334	Callee	bytes_to_skip		1172841	0					
ANR	1173335	Identifier	bytes_to_skip		1172841	0					
ANR	1173336	ArgumentList	insn		1172841	1					
ANR	1173337	Argument	insn		1172841	0					
ANR	1173338	Identifier	insn		1172841	0					
ANR	1173339	Argument	matchedp		1172841	1					
ANR	1173340	Identifier	matchedp		1172841	0					
ANR	1173341	Argument	disdata -> distype		1172841	2					
ANR	1173342	PtrMemberAccess	disdata -> distype		1172841	0					
ANR	1173343	Identifier	disdata		1172841	0					
ANR	1173344	Identifier	distype		1172841	1					
ANR	1173345	Argument	prefix_opcodep		1172841	3					
ANR	1173346	Identifier	prefix_opcodep		1172841	0					
ANR	1173347	ExpressionStatement	"print_with_operands ( matchedp , insn , bufp , addr , info , prefix_opcodep , prefix_insn , prefix_buffer , with_reg_prefix )"	1518:7:40730:40861	1172841	1	True				
ANR	1173348	CallExpression	"print_with_operands ( matchedp , insn , bufp , addr , info , prefix_opcodep , prefix_insn , prefix_buffer , with_reg_prefix )"		1172841	0					
ANR	1173349	Callee	print_with_operands		1172841	0					
ANR	1173350	Identifier	print_with_operands		1172841	0					
ANR	1173351	ArgumentList	matchedp		1172841	1					
ANR	1173352	Argument	matchedp		1172841	0					
ANR	1173353	Identifier	matchedp		1172841	0					
ANR	1173354	Argument	insn		1172841	1					
ANR	1173355	Identifier	insn		1172841	0					
ANR	1173356	Argument	bufp		1172841	2					
ANR	1173357	Identifier	bufp		1172841	0					
ANR	1173358	Argument	addr		1172841	3					
ANR	1173359	Identifier	addr		1172841	0					
ANR	1173360	Argument	info		1172841	4					
ANR	1173361	Identifier	info		1172841	0					
ANR	1173362	Argument	prefix_opcodep		1172841	5					
ANR	1173363	Identifier	prefix_opcodep		1172841	0					
ANR	1173364	Argument	prefix_insn		1172841	6					
ANR	1173365	Identifier	prefix_insn		1172841	0					
ANR	1173366	Argument	prefix_buffer		1172841	7					
ANR	1173367	Identifier	prefix_buffer		1172841	0					
ANR	1173368	Argument	with_reg_prefix		1172841	8					
ANR	1173369	Identifier	with_reg_prefix		1172841	0					
ANR	1173370	ElseStatement	else		1172841	0					
ANR	1173371	CompoundStatement		134:11:4442:4442	1172841	0					
ANR	1173372	ExpressionStatement	info -> insn_type = dis_noninsn	1524:5:40896:40925	1172841	0	True				
ANR	1173373	AssignmentExpression	info -> insn_type = dis_noninsn		1172841	0		=			
ANR	1173374	PtrMemberAccess	info -> insn_type		1172841	0					
ANR	1173375	Identifier	info		1172841	0					
ANR	1173376	Identifier	insn_type		1172841	1					
ANR	1173377	Identifier	dis_noninsn		1172841	1					
ANR	1173378	IfStatement	if ( status != 0 && ( nbytes == 0 || advance > nbytes ) )		1172841	21					
ANR	1173379	Condition	status != 0 && ( nbytes == 0 || advance > nbytes )	1530:8:41145:41192	1172841	0	True				
ANR	1173380	AndExpression	status != 0 && ( nbytes == 0 || advance > nbytes )		1172841	0		&&			
ANR	1173381	EqualityExpression	status != 0		1172841	0		!=			
ANR	1173382	Identifier	status		1172841	0					
ANR	1173383	PrimaryExpression	0		1172841	1					
ANR	1173384	OrExpression	nbytes == 0 || advance > nbytes		1172841	1		||			
ANR	1173385	EqualityExpression	nbytes == 0		1172841	0		==			
ANR	1173386	Identifier	nbytes		1172841	0					
ANR	1173387	PrimaryExpression	0		1172841	1					
ANR	1173388	RelationalExpression	advance > nbytes		1172841	1		>			
ANR	1173389	Identifier	advance		1172841	0					
ANR	1173390	Identifier	nbytes		1172841	1					
ANR	1173391	CompoundStatement		141:58:4748:4748	1172841	1					
ANR	1173392	ExpressionStatement	"( * info -> memory_error_func ) ( status , memaddr , info )"	1531:5:41202:41252	1172841	0	True				
ANR	1173393	CallExpression	"( * info -> memory_error_func ) ( status , memaddr , info )"		1172841	0					
ANR	1173394	Callee	* info -> memory_error_func		1172841	0					
ANR	1173395	UnaryOperationExpression	* info -> memory_error_func		1172841	0					
ANR	1173396	UnaryOperator	*		1172841	0					
ANR	1173397	PtrMemberAccess	info -> memory_error_func		1172841	1					
ANR	1173398	Identifier	info		1172841	0					
ANR	1173399	Identifier	memory_error_func		1172841	1					
ANR	1173400	ArgumentList	status		1172841	1					
ANR	1173401	Argument	status		1172841	0					
ANR	1173402	Identifier	status		1172841	0					
ANR	1173403	Argument	memaddr		1172841	1					
ANR	1173404	Identifier	memaddr		1172841	0					
ANR	1173405	Argument	info		1172841	2					
ANR	1173406	Identifier	info		1172841	0					
ANR	1173407	ReturnStatement	return - 1 ;	1532:5:41259:41268	1172841	1	True				
ANR	1173408	UnaryOperationExpression	- 1		1172841	0					
ANR	1173409	UnaryOperator	-		1172841	0					
ANR	1173410	PrimaryExpression	1		1172841	1					
ANR	1173411	ExpressionStatement	info -> bytes_per_line = MAX_BYTES_PER_CRIS_INSN	1536:2:41341:41387	1172841	22	True				
ANR	1173412	AssignmentExpression	info -> bytes_per_line = MAX_BYTES_PER_CRIS_INSN		1172841	0		=			
ANR	1173413	PtrMemberAccess	info -> bytes_per_line		1172841	0					
ANR	1173414	Identifier	info		1172841	0					
ANR	1173415	Identifier	bytes_per_line		1172841	1					
ANR	1173416	Identifier	MAX_BYTES_PER_CRIS_INSN		1172841	1					
ANR	1173417	ExpressionStatement	info -> bytes_per_chunk = 2	1542:2:41641:41666	1172841	23	True				
ANR	1173418	AssignmentExpression	info -> bytes_per_chunk = 2		1172841	0		=			
ANR	1173419	PtrMemberAccess	info -> bytes_per_chunk		1172841	0					
ANR	1173420	Identifier	info		1172841	0					
ANR	1173421	Identifier	bytes_per_chunk		1172841	1					
ANR	1173422	PrimaryExpression	2		1172841	1					
ANR	1173423	ExpressionStatement	info -> display_endian = BFD_ENDIAN_BIG	1549:2:41945:41982	1172841	24	True				
ANR	1173424	AssignmentExpression	info -> display_endian = BFD_ENDIAN_BIG		1172841	0		=			
ANR	1173425	PtrMemberAccess	info -> display_endian		1172841	0					
ANR	1173426	Identifier	info		1172841	0					
ANR	1173427	Identifier	display_endian		1172841	1					
ANR	1173428	Identifier	BFD_ENDIAN_BIG		1172841	1					
ANR	1173429	ReturnStatement	return advance ;	1551:2:41987:42001	1172841	25	True				
ANR	1173430	Identifier	advance		1172841	0					
ANR	1173431	ReturnType	int		1172841	1					
ANR	1173432	Identifier	print_insn_cris_generic		1172841	2					
ANR	1173433	ParameterList	"bfd_vma memaddr , disassemble_info * info , bfd_boolean with_reg_prefix"		1172841	3					
ANR	1173434	Parameter	bfd_vma memaddr	1387:25:36368:36382	1172841	0	True				
ANR	1173435	ParameterType	bfd_vma		1172841	0					
ANR	1173436	Identifier	memaddr		1172841	1					
ANR	1173437	Parameter	disassemble_info * info	1388:4:36389:36410	1172841	1	True				
ANR	1173438	ParameterType	disassemble_info *		1172841	0					
ANR	1173439	Identifier	info		1172841	1					
ANR	1173440	Parameter	bfd_boolean with_reg_prefix	1389:4:36417:36443	1172841	2	True				
ANR	1173441	ParameterType	bfd_boolean		1172841	0					
ANR	1173442	Identifier	with_reg_prefix		1172841	1					
ANR	1173443	CFGEntryNode	ENTRY		1172841		True				
ANR	1173444	CFGExitNode	EXIT		1172841		True				
ANR	1173445	Symbol	TRACE_CASE		1172841						
ANR	1173446	Symbol	case_offset		1172841						
ANR	1173447	Symbol	dis_noninsn		1172841						
ANR	1173448	Symbol	with_reg_prefix		1172841						
ANR	1173449	Symbol	info -> target2		1172841						
ANR	1173450	Symbol	info -> data_size		1172841						
ANR	1173451	Symbol	info -> fprintf_func		1172841						
ANR	1173452	Symbol	advance		1172841						
ANR	1173453	Symbol	* bufp		1172841						
ANR	1173454	Symbol	info -> bytes_per_line		1172841						
ANR	1173455	Symbol	prefix_size		1172841						
ANR	1173456	Symbol	dis_nonbranch		1172841						
ANR	1173457	Symbol	buffer		1172841						
ANR	1173458	Symbol	MAX_BYTES_PER_CRIS_INSN		1172841						
ANR	1173459	Symbol	info		1172841						
ANR	1173460	Symbol	NULL		1172841						
ANR	1173461	Symbol	disdata		1172841						
ANR	1173462	Symbol	cris_dis_v32		1172841						
ANR	1173463	Symbol	PARSE_PREFIX		1172841						
ANR	1173464	Symbol	no_of_case_offsets		1172841						
ANR	1173465	Symbol	* * matchedp		1172841						
ANR	1173466	Symbol	info -> bytes_per_chunk		1172841						
ANR	1173467	Symbol	info -> read_memory_func		1172841						
ANR	1173468	Symbol	get_opcode_entry		1172841						
ANR	1173469	Symbol	* matchedp -> args		1172841						
ANR	1173470	Symbol	disdata -> distype		1172841						
ANR	1173471	Symbol	* disdata		1172841						
ANR	1173472	Symbol	status		1172841						
ANR	1173473	Symbol	info -> insn_info_valid		1172841						
ANR	1173474	Symbol	* * info		1172841						
ANR	1173475	Symbol	prefix_opcodep		1172841						
ANR	1173476	Symbol	case_offset_counter		1172841						
ANR	1173477	Symbol	memaddr		1172841						
ANR	1173478	Symbol	info -> branch_delay_insns		1172841						
ANR	1173479	Symbol	* prefix_size		1172841						
ANR	1173480	Symbol	info -> stream		1172841						
ANR	1173481	Symbol	* matchedp		1172841						
ANR	1173482	Symbol	info -> flags		1172841						
ANR	1173483	Symbol	matchedp -> args		1172841						
ANR	1173484	Symbol	info -> target		1172841						
ANR	1173485	Symbol	BFD_ENDIAN_BIG		1172841						
ANR	1173486	Symbol	NO_CRIS_PREFIX		1172841						
ANR	1173487	Symbol	info -> print_address_func		1172841						
ANR	1173488	Symbol	prefix_insn		1172841						
ANR	1173489	Symbol	bytes_to_skip		1172841						
ANR	1173490	Symbol	prefix_buffer		1172841						
ANR	1173491	Symbol	addr		1172841						
ANR	1173492	Symbol	info -> insn_type		1172841						
ANR	1173493	Symbol	* info -> read_memory_func		1172841						
ANR	1173494	Symbol	info -> private_data		1172841						
ANR	1173495	Symbol	info -> memory_error_func		1172841						
ANR	1173496	Symbol	nbytes		1172841						
ANR	1173497	Symbol	insn		1172841						
ANR	1173498	Symbol	bufp		1172841						
ANR	1173499	Symbol	info -> display_endian		1172841						
ANR	1173500	Symbol	* info		1172841						
ANR	1173501	Symbol	matchedp		1172841						
ANR	1173502	Function	print_insn_cris_with_register_prefix	1556:0:42077:42323							
ANR	1173503	FunctionDef	"print_insn_cris_with_register_prefix (bfd_vma vma , disassemble_info * info)"		1173502	0					
ANR	1173504	CompoundStatement		1559:0:42166:42323	1173502	0					
ANR	1173505	IfStatement	"if ( ! info -> private_data && ! cris_parse_disassembler_options ( info , cris_dis_v0_v10 ) )"		1173502	0					
ANR	1173506	Condition	"! info -> private_data && ! cris_parse_disassembler_options ( info , cris_dis_v0_v10 )"	1560:5:42173:42251	1173502	0	True				
ANR	1173507	AndExpression	"! info -> private_data && ! cris_parse_disassembler_options ( info , cris_dis_v0_v10 )"		1173502	0		&&			
ANR	1173508	UnaryOperationExpression	! info -> private_data		1173502	0					
ANR	1173509	UnaryOperator	!		1173502	0					
ANR	1173510	PtrMemberAccess	info -> private_data		1173502	1					
ANR	1173511	Identifier	info		1173502	0					
ANR	1173512	Identifier	private_data		1173502	1					
ANR	1173513	UnaryOperationExpression	"! cris_parse_disassembler_options ( info , cris_dis_v0_v10 )"		1173502	1					
ANR	1173514	UnaryOperator	!		1173502	0					
ANR	1173515	CallExpression	"cris_parse_disassembler_options ( info , cris_dis_v0_v10 )"		1173502	1					
ANR	1173516	Callee	cris_parse_disassembler_options		1173502	0					
ANR	1173517	Identifier	cris_parse_disassembler_options		1173502	0					
ANR	1173518	ArgumentList	info		1173502	1					
ANR	1173519	Argument	info		1173502	0					
ANR	1173520	Identifier	info		1173502	0					
ANR	1173521	Argument	cris_dis_v0_v10		1173502	1					
ANR	1173522	Identifier	cris_dis_v0_v10		1173502	0					
ANR	1173523	CompoundStatement		2:86:87:87	1173502	1					
ANR	1173524	ReturnStatement	return - 1 ;	1561:2:42258:42267	1173502	0	True				
ANR	1173525	UnaryOperationExpression	- 1		1173502	0					
ANR	1173526	UnaryOperator	-		1173502	0					
ANR	1173527	PrimaryExpression	1		1173502	1					
ANR	1173528	ReturnStatement	"return print_insn_cris_generic ( vma , info , TRUE ) ;"	1563:1:42273:42321	1173502	1	True				
ANR	1173529	CallExpression	"print_insn_cris_generic ( vma , info , TRUE )"		1173502	0					
ANR	1173530	Callee	print_insn_cris_generic		1173502	0					
ANR	1173531	Identifier	print_insn_cris_generic		1173502	0					
ANR	1173532	ArgumentList	vma		1173502	1					
ANR	1173533	Argument	vma		1173502	0					
ANR	1173534	Identifier	vma		1173502	0					
ANR	1173535	Argument	info		1173502	1					
ANR	1173536	Identifier	info		1173502	0					
ANR	1173537	Argument	TRUE		1173502	2					
ANR	1173538	Identifier	TRUE		1173502	0					
ANR	1173539	ReturnType	int		1173502	1					
ANR	1173540	Identifier	print_insn_cris_with_register_prefix		1173502	2					
ANR	1173541	ParameterList	"bfd_vma vma , disassemble_info * info"		1173502	3					
ANR	1173542	Parameter	bfd_vma vma	1557:38:42119:42129	1173502	0	True				
ANR	1173543	ParameterType	bfd_vma		1173502	0					
ANR	1173544	Identifier	vma		1173502	1					
ANR	1173545	Parameter	disassemble_info * info	1558:10:42142:42163	1173502	1	True				
ANR	1173546	ParameterType	disassemble_info *		1173502	0					
ANR	1173547	Identifier	info		1173502	1					
ANR	1173548	CFGEntryNode	ENTRY		1173502		True				
ANR	1173549	CFGExitNode	EXIT		1173502		True				
ANR	1173550	Symbol	cris_parse_disassembler_options		1173502						
ANR	1173551	Symbol	info -> private_data		1173502						
ANR	1173552	Symbol	TRUE		1173502						
ANR	1173553	Symbol	cris_dis_v0_v10		1173502						
ANR	1173554	Symbol	print_insn_cris_generic		1173502						
ANR	1173555	Symbol	vma		1173502						
ANR	1173556	Symbol	* info		1173502						
ANR	1173557	Symbol	info		1173502						
ANR	1173558	Function	print_insn_crisv32_with_register_prefix	1568:0:42393:42635							
ANR	1173559	FunctionDef	"print_insn_crisv32_with_register_prefix (bfd_vma vma , disassemble_info * info)"		1173558	0					
ANR	1173560	CompoundStatement		1571:0:42481:42635	1173558	0					
ANR	1173561	IfStatement	"if ( ! info -> private_data && ! cris_parse_disassembler_options ( info , cris_dis_v32 ) )"		1173558	0					
ANR	1173562	Condition	"! info -> private_data && ! cris_parse_disassembler_options ( info , cris_dis_v32 )"	1572:5:42488:42563	1173558	0	True				
ANR	1173563	AndExpression	"! info -> private_data && ! cris_parse_disassembler_options ( info , cris_dis_v32 )"		1173558	0		&&			
ANR	1173564	UnaryOperationExpression	! info -> private_data		1173558	0					
ANR	1173565	UnaryOperator	!		1173558	0					
ANR	1173566	PtrMemberAccess	info -> private_data		1173558	1					
ANR	1173567	Identifier	info		1173558	0					
ANR	1173568	Identifier	private_data		1173558	1					
ANR	1173569	UnaryOperationExpression	"! cris_parse_disassembler_options ( info , cris_dis_v32 )"		1173558	1					
ANR	1173570	UnaryOperator	!		1173558	0					
ANR	1173571	CallExpression	"cris_parse_disassembler_options ( info , cris_dis_v32 )"		1173558	1					
ANR	1173572	Callee	cris_parse_disassembler_options		1173558	0					
ANR	1173573	Identifier	cris_parse_disassembler_options		1173558	0					
ANR	1173574	ArgumentList	info		1173558	1					
ANR	1173575	Argument	info		1173558	0					
ANR	1173576	Identifier	info		1173558	0					
ANR	1173577	Argument	cris_dis_v32		1173558	1					
ANR	1173578	Identifier	cris_dis_v32		1173558	0					
ANR	1173579	CompoundStatement		2:83:84:84	1173558	1					
ANR	1173580	ReturnStatement	return - 1 ;	1573:2:42570:42579	1173558	0	True				
ANR	1173581	UnaryOperationExpression	- 1		1173558	0					
ANR	1173582	UnaryOperator	-		1173558	0					
ANR	1173583	PrimaryExpression	1		1173558	1					
ANR	1173584	ReturnStatement	"return print_insn_cris_generic ( vma , info , TRUE ) ;"	1575:1:42585:42633	1173558	1	True				
ANR	1173585	CallExpression	"print_insn_cris_generic ( vma , info , TRUE )"		1173558	0					
ANR	1173586	Callee	print_insn_cris_generic		1173558	0					
ANR	1173587	Identifier	print_insn_cris_generic		1173558	0					
ANR	1173588	ArgumentList	vma		1173558	1					
ANR	1173589	Argument	vma		1173558	0					
ANR	1173590	Identifier	vma		1173558	0					
ANR	1173591	Argument	info		1173558	1					
ANR	1173592	Identifier	info		1173558	0					
ANR	1173593	Argument	TRUE		1173558	2					
ANR	1173594	Identifier	TRUE		1173558	0					
ANR	1173595	ReturnType	int		1173558	1					
ANR	1173596	Identifier	print_insn_crisv32_with_register_prefix		1173558	2					
ANR	1173597	ParameterList	"bfd_vma vma , disassemble_info * info"		1173558	3					
ANR	1173598	Parameter	bfd_vma vma	1569:41:42438:42448	1173558	0	True				
ANR	1173599	ParameterType	bfd_vma		1173558	0					
ANR	1173600	Identifier	vma		1173558	1					
ANR	1173601	Parameter	disassemble_info * info	1570:6:42457:42478	1173558	1	True				
ANR	1173602	ParameterType	disassemble_info *		1173558	0					
ANR	1173603	Identifier	info		1173558	1					
ANR	1173604	CFGEntryNode	ENTRY		1173558		True				
ANR	1173605	CFGExitNode	EXIT		1173558		True				
ANR	1173606	Symbol	cris_parse_disassembler_options		1173558						
ANR	1173607	Symbol	info -> private_data		1173558						
ANR	1173608	Symbol	TRUE		1173558						
ANR	1173609	Symbol	cris_dis_v32		1173558						
ANR	1173610	Symbol	print_insn_cris_generic		1173558						
ANR	1173611	Symbol	vma		1173558						
ANR	1173612	Symbol	* info		1173558						
ANR	1173613	Symbol	info		1173558						
ANR	1173614	Function	print_insn_crisv10_v32_with_register_prefix	1581:0:42724:42985							
ANR	1173615	FunctionDef	"print_insn_crisv10_v32_with_register_prefix (bfd_vma vma , disassemble_info * info)"		1173614	0					
ANR	1173616	CompoundStatement		1584:0:42820:42985	1173614	0					
ANR	1173617	IfStatement	"if ( ! info -> private_data && ! cris_parse_disassembler_options ( info , cris_dis_common_v10_v32 ) )"		1173614	0					
ANR	1173618	Condition	"! info -> private_data && ! cris_parse_disassembler_options ( info , cris_dis_common_v10_v32 )"	1585:5:42827:42913	1173614	0	True				
ANR	1173619	AndExpression	"! info -> private_data && ! cris_parse_disassembler_options ( info , cris_dis_common_v10_v32 )"		1173614	0		&&			
ANR	1173620	UnaryOperationExpression	! info -> private_data		1173614	0					
ANR	1173621	UnaryOperator	!		1173614	0					
ANR	1173622	PtrMemberAccess	info -> private_data		1173614	1					
ANR	1173623	Identifier	info		1173614	0					
ANR	1173624	Identifier	private_data		1173614	1					
ANR	1173625	UnaryOperationExpression	"! cris_parse_disassembler_options ( info , cris_dis_common_v10_v32 )"		1173614	1					
ANR	1173626	UnaryOperator	!		1173614	0					
ANR	1173627	CallExpression	"cris_parse_disassembler_options ( info , cris_dis_common_v10_v32 )"		1173614	1					
ANR	1173628	Callee	cris_parse_disassembler_options		1173614	0					
ANR	1173629	Identifier	cris_parse_disassembler_options		1173614	0					
ANR	1173630	ArgumentList	info		1173614	1					
ANR	1173631	Argument	info		1173614	0					
ANR	1173632	Identifier	info		1173614	0					
ANR	1173633	Argument	cris_dis_common_v10_v32		1173614	1					
ANR	1173634	Identifier	cris_dis_common_v10_v32		1173614	0					
ANR	1173635	CompoundStatement		2:94:95:95	1173614	1					
ANR	1173636	ReturnStatement	return - 1 ;	1586:2:42920:42929	1173614	0	True				
ANR	1173637	UnaryOperationExpression	- 1		1173614	0					
ANR	1173638	UnaryOperator	-		1173614	0					
ANR	1173639	PrimaryExpression	1		1173614	1					
ANR	1173640	ReturnStatement	"return print_insn_cris_generic ( vma , info , TRUE ) ;"	1588:1:42935:42983	1173614	1	True				
ANR	1173641	CallExpression	"print_insn_cris_generic ( vma , info , TRUE )"		1173614	0					
ANR	1173642	Callee	print_insn_cris_generic		1173614	0					
ANR	1173643	Identifier	print_insn_cris_generic		1173614	0					
ANR	1173644	ArgumentList	vma		1173614	1					
ANR	1173645	Argument	vma		1173614	0					
ANR	1173646	Identifier	vma		1173614	0					
ANR	1173647	Argument	info		1173614	1					
ANR	1173648	Identifier	info		1173614	0					
ANR	1173649	Argument	TRUE		1173614	2					
ANR	1173650	Identifier	TRUE		1173614	0					
ANR	1173651	ReturnType	int		1173614	1					
ANR	1173652	Identifier	print_insn_crisv10_v32_with_register_prefix		1173614	2					
ANR	1173653	ParameterList	"bfd_vma vma , disassemble_info * info"		1173614	3					
ANR	1173654	Parameter	bfd_vma vma	1582:45:42773:42783	1173614	0	True				
ANR	1173655	ParameterType	bfd_vma		1173614	0					
ANR	1173656	Identifier	vma		1173614	1					
ANR	1173657	Parameter	disassemble_info * info	1583:10:42796:42817	1173614	1	True				
ANR	1173658	ParameterType	disassemble_info *		1173614	0					
ANR	1173659	Identifier	info		1173614	1					
ANR	1173660	CFGEntryNode	ENTRY		1173614		True				
ANR	1173661	CFGExitNode	EXIT		1173614		True				
ANR	1173662	Symbol	cris_parse_disassembler_options		1173614						
ANR	1173663	Symbol	info -> private_data		1173614						
ANR	1173664	Symbol	cris_dis_common_v10_v32		1173614						
ANR	1173665	Symbol	TRUE		1173614						
ANR	1173666	Symbol	print_insn_cris_generic		1173614						
ANR	1173667	Symbol	vma		1173614						
ANR	1173668	Symbol	* info		1173614						
ANR	1173669	Symbol	info		1173614						
ANR	1173670	Function	print_insn_cris_without_register_prefix	1593:0:43055:43301							
ANR	1173671	FunctionDef	"print_insn_cris_without_register_prefix (bfd_vma vma , disassemble_info * info)"		1173670	0					
ANR	1173672	CompoundStatement		1596:0:43143:43301	1173670	0					
ANR	1173673	IfStatement	"if ( ! info -> private_data && ! cris_parse_disassembler_options ( info , cris_dis_v0_v10 ) )"		1173670	0					
ANR	1173674	Condition	"! info -> private_data && ! cris_parse_disassembler_options ( info , cris_dis_v0_v10 )"	1597:5:43150:43228	1173670	0	True				
ANR	1173675	AndExpression	"! info -> private_data && ! cris_parse_disassembler_options ( info , cris_dis_v0_v10 )"		1173670	0		&&			
ANR	1173676	UnaryOperationExpression	! info -> private_data		1173670	0					
ANR	1173677	UnaryOperator	!		1173670	0					
ANR	1173678	PtrMemberAccess	info -> private_data		1173670	1					
ANR	1173679	Identifier	info		1173670	0					
ANR	1173680	Identifier	private_data		1173670	1					
ANR	1173681	UnaryOperationExpression	"! cris_parse_disassembler_options ( info , cris_dis_v0_v10 )"		1173670	1					
ANR	1173682	UnaryOperator	!		1173670	0					
ANR	1173683	CallExpression	"cris_parse_disassembler_options ( info , cris_dis_v0_v10 )"		1173670	1					
ANR	1173684	Callee	cris_parse_disassembler_options		1173670	0					
ANR	1173685	Identifier	cris_parse_disassembler_options		1173670	0					
ANR	1173686	ArgumentList	info		1173670	1					
ANR	1173687	Argument	info		1173670	0					
ANR	1173688	Identifier	info		1173670	0					
ANR	1173689	Argument	cris_dis_v0_v10		1173670	1					
ANR	1173690	Identifier	cris_dis_v0_v10		1173670	0					
ANR	1173691	CompoundStatement		2:86:87:87	1173670	1					
ANR	1173692	ReturnStatement	return - 1 ;	1598:2:43235:43244	1173670	0	True				
ANR	1173693	UnaryOperationExpression	- 1		1173670	0					
ANR	1173694	UnaryOperator	-		1173670	0					
ANR	1173695	PrimaryExpression	1		1173670	1					
ANR	1173696	ReturnStatement	"return print_insn_cris_generic ( vma , info , FALSE ) ;"	1600:1:43250:43299	1173670	1	True				
ANR	1173697	CallExpression	"print_insn_cris_generic ( vma , info , FALSE )"		1173670	0					
ANR	1173698	Callee	print_insn_cris_generic		1173670	0					
ANR	1173699	Identifier	print_insn_cris_generic		1173670	0					
ANR	1173700	ArgumentList	vma		1173670	1					
ANR	1173701	Argument	vma		1173670	0					
ANR	1173702	Identifier	vma		1173670	0					
ANR	1173703	Argument	info		1173670	1					
ANR	1173704	Identifier	info		1173670	0					
ANR	1173705	Argument	FALSE		1173670	2					
ANR	1173706	Identifier	FALSE		1173670	0					
ANR	1173707	ReturnType	int		1173670	1					
ANR	1173708	Identifier	print_insn_cris_without_register_prefix		1173670	2					
ANR	1173709	ParameterList	"bfd_vma vma , disassemble_info * info"		1173670	3					
ANR	1173710	Parameter	bfd_vma vma	1594:41:43100:43110	1173670	0	True				
ANR	1173711	ParameterType	bfd_vma		1173670	0					
ANR	1173712	Identifier	vma		1173670	1					
ANR	1173713	Parameter	disassemble_info * info	1595:6:43119:43140	1173670	1	True				
ANR	1173714	ParameterType	disassemble_info *		1173670	0					
ANR	1173715	Identifier	info		1173670	1					
ANR	1173716	CFGEntryNode	ENTRY		1173670		True				
ANR	1173717	CFGExitNode	EXIT		1173670		True				
ANR	1173718	Symbol	cris_parse_disassembler_options		1173670						
ANR	1173719	Symbol	info -> private_data		1173670						
ANR	1173720	Symbol	cris_dis_v0_v10		1173670						
ANR	1173721	Symbol	print_insn_cris_generic		1173670						
ANR	1173722	Symbol	FALSE		1173670						
ANR	1173723	Symbol	vma		1173670						
ANR	1173724	Symbol	* info		1173670						
ANR	1173725	Symbol	info		1173670						
ANR	1173726	Function	print_insn_crisv32_without_register_prefix	1605:0:43367:43616							
ANR	1173727	FunctionDef	"print_insn_crisv32_without_register_prefix (bfd_vma vma , disassemble_info * info)"		1173726	0					
ANR	1173728	CompoundStatement		1608:0:43461:43616	1173726	0					
ANR	1173729	IfStatement	"if ( ! info -> private_data && ! cris_parse_disassembler_options ( info , cris_dis_v32 ) )"		1173726	0					
ANR	1173730	Condition	"! info -> private_data && ! cris_parse_disassembler_options ( info , cris_dis_v32 )"	1609:5:43468:43543	1173726	0	True				
ANR	1173731	AndExpression	"! info -> private_data && ! cris_parse_disassembler_options ( info , cris_dis_v32 )"		1173726	0		&&			
ANR	1173732	UnaryOperationExpression	! info -> private_data		1173726	0					
ANR	1173733	UnaryOperator	!		1173726	0					
ANR	1173734	PtrMemberAccess	info -> private_data		1173726	1					
ANR	1173735	Identifier	info		1173726	0					
ANR	1173736	Identifier	private_data		1173726	1					
ANR	1173737	UnaryOperationExpression	"! cris_parse_disassembler_options ( info , cris_dis_v32 )"		1173726	1					
ANR	1173738	UnaryOperator	!		1173726	0					
ANR	1173739	CallExpression	"cris_parse_disassembler_options ( info , cris_dis_v32 )"		1173726	1					
ANR	1173740	Callee	cris_parse_disassembler_options		1173726	0					
ANR	1173741	Identifier	cris_parse_disassembler_options		1173726	0					
ANR	1173742	ArgumentList	info		1173726	1					
ANR	1173743	Argument	info		1173726	0					
ANR	1173744	Identifier	info		1173726	0					
ANR	1173745	Argument	cris_dis_v32		1173726	1					
ANR	1173746	Identifier	cris_dis_v32		1173726	0					
ANR	1173747	CompoundStatement		2:83:84:84	1173726	1					
ANR	1173748	ReturnStatement	return - 1 ;	1610:2:43550:43559	1173726	0	True				
ANR	1173749	UnaryOperationExpression	- 1		1173726	0					
ANR	1173750	UnaryOperator	-		1173726	0					
ANR	1173751	PrimaryExpression	1		1173726	1					
ANR	1173752	ReturnStatement	"return print_insn_cris_generic ( vma , info , FALSE ) ;"	1612:1:43565:43614	1173726	1	True				
ANR	1173753	CallExpression	"print_insn_cris_generic ( vma , info , FALSE )"		1173726	0					
ANR	1173754	Callee	print_insn_cris_generic		1173726	0					
ANR	1173755	Identifier	print_insn_cris_generic		1173726	0					
ANR	1173756	ArgumentList	vma		1173726	1					
ANR	1173757	Argument	vma		1173726	0					
ANR	1173758	Identifier	vma		1173726	0					
ANR	1173759	Argument	info		1173726	1					
ANR	1173760	Identifier	info		1173726	0					
ANR	1173761	Argument	FALSE		1173726	2					
ANR	1173762	Identifier	FALSE		1173726	0					
ANR	1173763	ReturnType	int		1173726	1					
ANR	1173764	Identifier	print_insn_crisv32_without_register_prefix		1173726	2					
ANR	1173765	ParameterList	"bfd_vma vma , disassemble_info * info"		1173726	3					
ANR	1173766	Parameter	bfd_vma vma	1606:44:43415:43425	1173726	0	True				
ANR	1173767	ParameterType	bfd_vma		1173726	0					
ANR	1173768	Identifier	vma		1173726	1					
ANR	1173769	Parameter	disassemble_info * info	1607:9:43437:43458	1173726	1	True				
ANR	1173770	ParameterType	disassemble_info *		1173726	0					
ANR	1173771	Identifier	info		1173726	1					
ANR	1173772	CFGEntryNode	ENTRY		1173726		True				
ANR	1173773	CFGExitNode	EXIT		1173726		True				
ANR	1173774	Symbol	cris_parse_disassembler_options		1173726						
ANR	1173775	Symbol	info -> private_data		1173726						
ANR	1173776	Symbol	cris_dis_v32		1173726						
ANR	1173777	Symbol	FALSE		1173726						
ANR	1173778	Symbol	print_insn_cris_generic		1173726						
ANR	1173779	Symbol	vma		1173726						
ANR	1173780	Symbol	* info		1173726						
ANR	1173781	Symbol	info		1173726						
ANR	1173782	Function	print_insn_crisv10_v32_without_register_prefix	1618:0:43701:43962							
ANR	1173783	FunctionDef	"print_insn_crisv10_v32_without_register_prefix (bfd_vma vma , disassemble_info * info)"		1173782	0					
ANR	1173784	CompoundStatement		1621:0:43796:43962	1173782	0					
ANR	1173785	IfStatement	"if ( ! info -> private_data && ! cris_parse_disassembler_options ( info , cris_dis_common_v10_v32 ) )"		1173782	0					
ANR	1173786	Condition	"! info -> private_data && ! cris_parse_disassembler_options ( info , cris_dis_common_v10_v32 )"	1622:5:43803:43889	1173782	0	True				
ANR	1173787	AndExpression	"! info -> private_data && ! cris_parse_disassembler_options ( info , cris_dis_common_v10_v32 )"		1173782	0		&&			
ANR	1173788	UnaryOperationExpression	! info -> private_data		1173782	0					
ANR	1173789	UnaryOperator	!		1173782	0					
ANR	1173790	PtrMemberAccess	info -> private_data		1173782	1					
ANR	1173791	Identifier	info		1173782	0					
ANR	1173792	Identifier	private_data		1173782	1					
ANR	1173793	UnaryOperationExpression	"! cris_parse_disassembler_options ( info , cris_dis_common_v10_v32 )"		1173782	1					
ANR	1173794	UnaryOperator	!		1173782	0					
ANR	1173795	CallExpression	"cris_parse_disassembler_options ( info , cris_dis_common_v10_v32 )"		1173782	1					
ANR	1173796	Callee	cris_parse_disassembler_options		1173782	0					
ANR	1173797	Identifier	cris_parse_disassembler_options		1173782	0					
ANR	1173798	ArgumentList	info		1173782	1					
ANR	1173799	Argument	info		1173782	0					
ANR	1173800	Identifier	info		1173782	0					
ANR	1173801	Argument	cris_dis_common_v10_v32		1173782	1					
ANR	1173802	Identifier	cris_dis_common_v10_v32		1173782	0					
ANR	1173803	CompoundStatement		2:94:95:95	1173782	1					
ANR	1173804	ReturnStatement	return - 1 ;	1623:2:43896:43905	1173782	0	True				
ANR	1173805	UnaryOperationExpression	- 1		1173782	0					
ANR	1173806	UnaryOperator	-		1173782	0					
ANR	1173807	PrimaryExpression	1		1173782	1					
ANR	1173808	ReturnStatement	"return print_insn_cris_generic ( vma , info , FALSE ) ;"	1625:1:43911:43960	1173782	1	True				
ANR	1173809	CallExpression	"print_insn_cris_generic ( vma , info , FALSE )"		1173782	0					
ANR	1173810	Callee	print_insn_cris_generic		1173782	0					
ANR	1173811	Identifier	print_insn_cris_generic		1173782	0					
ANR	1173812	ArgumentList	vma		1173782	1					
ANR	1173813	Argument	vma		1173782	0					
ANR	1173814	Identifier	vma		1173782	0					
ANR	1173815	Argument	info		1173782	1					
ANR	1173816	Identifier	info		1173782	0					
ANR	1173817	Argument	FALSE		1173782	2					
ANR	1173818	Identifier	FALSE		1173782	0					
ANR	1173819	ReturnType	int		1173782	1					
ANR	1173820	Identifier	print_insn_crisv10_v32_without_register_prefix		1173782	2					
ANR	1173821	ParameterList	"bfd_vma vma , disassemble_info * info"		1173782	3					
ANR	1173822	Parameter	bfd_vma vma	1619:48:43753:43763	1173782	0	True				
ANR	1173823	ParameterType	bfd_vma		1173782	0					
ANR	1173824	Identifier	vma		1173782	1					
ANR	1173825	Parameter	disassemble_info * info	1620:6:43772:43793	1173782	1	True				
ANR	1173826	ParameterType	disassemble_info *		1173782	0					
ANR	1173827	Identifier	info		1173782	1					
ANR	1173828	CFGEntryNode	ENTRY		1173782		True				
ANR	1173829	CFGExitNode	EXIT		1173782		True				
ANR	1173830	Symbol	cris_parse_disassembler_options		1173782						
ANR	1173831	Symbol	info -> private_data		1173782						
ANR	1173832	Symbol	cris_dis_common_v10_v32		1173782						
ANR	1173833	Symbol	FALSE		1173782						
ANR	1173834	Symbol	print_insn_cris_generic		1173782						
ANR	1173835	Symbol	vma		1173782						
ANR	1173836	Symbol	* info		1173782						
ANR	1173837	Symbol	info		1173782						
ANR	1173838	Function	cris_get_disassembler	1634:0:44215:45387							
ANR	1173839	FunctionDef	cris_get_disassembler (bfd * abfd)		1173838	0					
ANR	1173840	CompoundStatement		1636:0:44268:45387	1173838	0					
ANR	1173841	IdentifierDeclStatement	const int mode = 0 ;	1638:0:44292:44310	1173838	0	True				
ANR	1173842	IdentifierDecl	mode = 0		1173838	0					
ANR	1173843	IdentifierDeclType	const int		1173838	0					
ANR	1173844	Identifier	mode		1173838	1					
ANR	1173845	AssignmentExpression	mode = 0		1173838	2		=			
ANR	1173846	Identifier	mode		1173838	0					
ANR	1173847	PrimaryExpression	0		1173838	1					
ANR	1173848	IfStatement	if ( ! abfd )		1173838	1					
ANR	1173849	Condition	! abfd	1642:4:44547:44551	1173838	0	True				
ANR	1173850	UnaryOperationExpression	! abfd		1173838	0					
ANR	1173851	UnaryOperator	!		1173838	0					
ANR	1173852	Identifier	abfd		1173838	1					
ANR	1173853	CompoundStatement		7:11:285:285	1173838	1					
ANR	1173854	ReturnStatement	return print_insn_cris_with_register_prefix ;	1643:1:44557:44600	1173838	0	True				
ANR	1173855	Identifier	print_insn_cris_with_register_prefix		1173838	0					
ANR	1173856	IfStatement	if ( bfd_get_symbol_leading_char ( abfd ) == 0 )		1173838	2					
ANR	1173857	Condition	bfd_get_symbol_leading_char ( abfd ) == 0	1646:4:44609:44647	1173838	0	True				
ANR	1173858	EqualityExpression	bfd_get_symbol_leading_char ( abfd ) == 0		1173838	0		==			
ANR	1173859	CallExpression	bfd_get_symbol_leading_char ( abfd )		1173838	0					
ANR	1173860	Callee	bfd_get_symbol_leading_char		1173838	0					
ANR	1173861	Identifier	bfd_get_symbol_leading_char		1173838	0					
ANR	1173862	ArgumentList	abfd		1173838	1					
ANR	1173863	Argument	abfd		1173838	0					
ANR	1173864	Identifier	abfd		1173838	0					
ANR	1173865	PrimaryExpression	0		1173838	1					
ANR	1173866	CompoundStatement		11:45:381:381	1173838	1					
ANR	1173867	SwitchStatement	switch ( mode )		1173838	0					
ANR	1173868	Condition	mode	1647:9:44661:44664	1173838	0	True				
ANR	1173869	Identifier	mode		1173838	0					
ANR	1173870	CompoundStatement		12:15:398:398	1173838	1					
ANR	1173871	Label	case 0 :	1648:1:44670:44676	1173838	0	True				
ANR	1173872	ReturnStatement	return print_insn_crisv32_with_register_prefix ;	1649:2:44687:44733	1173838	1	True				
ANR	1173873	Identifier	print_insn_crisv32_with_register_prefix		1173838	0					
ANR	1173874	Label	case 1 :	1650:1:44736:44742	1173838	2	True				
ANR	1173875	ReturnStatement	return print_insn_crisv10_v32_with_register_prefix ;	1651:2:44757:44807	1173838	3	True				
ANR	1173876	Identifier	print_insn_crisv10_v32_with_register_prefix		1173838	0					
ANR	1173877	Label	default :	1652:1:44810:44817	1173838	4	True				
ANR	1173878	Identifier	default		1173838	0					
ANR	1173879	ReturnStatement	return print_insn_cris_with_register_prefix ;	1656:2:44938:44981	1173838	5	True				
ANR	1173880	Identifier	print_insn_cris_with_register_prefix		1173838	0					
ANR	1173881	SwitchStatement	switch ( mode )		1173838	3					
ANR	1173882	Condition	mode	1660:8:45001:45004	1173838	0	True				
ANR	1173883	Identifier	mode		1173838	0					
ANR	1173884	CompoundStatement		25:14:738:738	1173838	1					
ANR	1173885	Label	case 0 :	1661:0:45009:45015	1173838	0	True				
ANR	1173886	ReturnStatement	return print_insn_crisv32_without_register_prefix ;	1663:4:45078:45127	1173838	1	True				
ANR	1173887	Identifier	print_insn_crisv32_without_register_prefix		1173838	0					
ANR	1173888	Label	case 1 :	1664:0:45129:45135	1173838	2	True				
ANR	1173889	ReturnStatement	return print_insn_crisv10_v32_without_register_prefix ;	1666:4:45206:45259	1173838	3	True				
ANR	1173890	Identifier	print_insn_crisv10_v32_without_register_prefix		1173838	0					
ANR	1173891	Label	default :	1667:0:45261:45268	1173838	4	True				
ANR	1173892	Identifier	default		1173838	0					
ANR	1173893	ReturnStatement	return print_insn_cris_without_register_prefix ;	1668:2:45272:45318	1173838	5	True				
ANR	1173894	Identifier	print_insn_cris_without_register_prefix		1173838	0					
ANR	1173895	ReturnType	disassembler_ftype		1173838	1					
ANR	1173896	Identifier	cris_get_disassembler		1173838	2					
ANR	1173897	ParameterList	bfd * abfd		1173838	3					
ANR	1173898	Parameter	bfd * abfd	1635:23:44257:44265	1173838	0	True				
ANR	1173899	ParameterType	bfd *		1173838	0					
ANR	1173900	Identifier	abfd		1173838	1					
ANR	1173901	CFGEntryNode	ENTRY		1173838		True				
ANR	1173902	CFGExitNode	EXIT		1173838		True				
ANR	1173903	Symbol	mode		1173838						
ANR	1173904	Symbol	print_insn_cris_with_register_prefix		1173838						
ANR	1173905	Symbol	abfd		1173838						
ANR	1173906	Symbol	print_insn_crisv10_v32_with_register_prefix		1173838						
ANR	1173907	Symbol	print_insn_crisv10_v32_without_register_prefix		1173838						
ANR	1173908	Symbol	print_insn_cris_without_register_prefix		1173838						
ANR	1173909	Symbol	bfd_get_symbol_leading_char		1173838						
ANR	1173910	Symbol	print_insn_crisv32_without_register_prefix		1173838						
ANR	1173911	Symbol	print_insn_crisv32_with_register_prefix		1173838						
