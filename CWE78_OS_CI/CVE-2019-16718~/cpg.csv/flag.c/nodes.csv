command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1484755	File	data/converged/CVE-2019-16718~_radare2/flag.c								
ANR	1484756	DeclStmt									
ANR	1484757	Decl							include < stdio . h >	include < stdio . h > ( r_flag )	R_LIB_VERSION
ANR	1484758	Function	str_callback	14:0:388:696							
ANR	1484759	FunctionDef	"str_callback (RNum * user , ut64 off , int * ok)"		1484758	0					
ANR	1484760	CompoundStatement		14:63:451:696	1484758	0					
ANR	1484761	IdentifierDeclStatement	RFlag * f = ( RFlag * ) user ;	15:1:454:477	1484758	0	True				
ANR	1484762	IdentifierDecl	* f = ( RFlag * ) user		1484758	0					
ANR	1484763	IdentifierDeclType	RFlag *		1484758	0					
ANR	1484764	Identifier	f		1484758	1					
ANR	1484765	AssignmentExpression	* f = ( RFlag * ) user		1484758	2		=			
ANR	1484766	Identifier	f		1484758	0					
ANR	1484767	CastExpression	( RFlag * ) user		1484758	1					
ANR	1484768	CastTarget	RFlag *		1484758	0					
ANR	1484769	Identifier	user		1484758	1					
ANR	1484770	IfStatement	if ( ok )		1484758	1					
ANR	1484771	Condition	ok	16:5:484:485	1484758	0	True				
ANR	1484772	Identifier	ok		1484758	0					
ANR	1484773	CompoundStatement		3:9:36:36	1484758	1					
ANR	1484774	ExpressionStatement	* ok = 0	17:2:492:499	1484758	0	True				
ANR	1484775	AssignmentExpression	* ok = 0		1484758	0		=			
ANR	1484776	UnaryOperationExpression	* ok		1484758	0					
ANR	1484777	UnaryOperator	*		1484758	0					
ANR	1484778	Identifier	ok		1484758	1					
ANR	1484779	PrimaryExpression	0		1484758	1					
ANR	1484780	IfStatement	if ( f )		1484758	2					
ANR	1484781	Condition	f	19:5:509:509	1484758	0	True				
ANR	1484782	Identifier	f		1484758	0					
ANR	1484783	CompoundStatement		8:2:112:151	1484758	1					
ANR	1484784	IdentifierDeclStatement	"const RList * list = r_flag_get_list ( f , off ) ;"	20:2:516:560	1484758	0	True				
ANR	1484785	IdentifierDecl	"* list = r_flag_get_list ( f , off )"		1484758	0					
ANR	1484786	IdentifierDeclType	const RList *		1484758	0					
ANR	1484787	Identifier	list		1484758	1					
ANR	1484788	AssignmentExpression	"* list = r_flag_get_list ( f , off )"		1484758	2		=			
ANR	1484789	Identifier	list		1484758	0					
ANR	1484790	CallExpression	"r_flag_get_list ( f , off )"		1484758	1					
ANR	1484791	Callee	r_flag_get_list		1484758	0					
ANR	1484792	Identifier	r_flag_get_list		1484758	0					
ANR	1484793	ArgumentList	f		1484758	1					
ANR	1484794	Argument	f		1484758	0					
ANR	1484795	Identifier	f		1484758	0					
ANR	1484796	Argument	off		1484758	1					
ANR	1484797	Identifier	off		1484758	0					
ANR	1484798	IdentifierDeclStatement	RFlagItem * item = r_list_get_top ( list ) ;	21:2:564:603	1484758	1	True				
ANR	1484799	IdentifierDecl	* item = r_list_get_top ( list )		1484758	0					
ANR	1484800	IdentifierDeclType	RFlagItem *		1484758	0					
ANR	1484801	Identifier	item		1484758	1					
ANR	1484802	AssignmentExpression	* item = r_list_get_top ( list )		1484758	2		=			
ANR	1484803	Identifier	item		1484758	0					
ANR	1484804	CallExpression	r_list_get_top ( list )		1484758	1					
ANR	1484805	Callee	r_list_get_top		1484758	0					
ANR	1484806	Identifier	r_list_get_top		1484758	0					
ANR	1484807	ArgumentList	list		1484758	1					
ANR	1484808	Argument	list		1484758	0					
ANR	1484809	Identifier	list		1484758	0					
ANR	1484810	IfStatement	if ( item )		1484758	2					
ANR	1484811	Condition	item	22:6:611:614	1484758	0	True				
ANR	1484812	Identifier	item		1484758	0					
ANR	1484813	CompoundStatement		9:12:165:165	1484758	1					
ANR	1484814	IfStatement	if ( ok )		1484758	0					
ANR	1484815	Condition	ok	23:7:626:627	1484758	0	True				
ANR	1484816	Identifier	ok		1484758	0					
ANR	1484817	CompoundStatement		10:11:178:178	1484758	1					
ANR	1484818	ExpressionStatement	* ok = true	24:4:636:646	1484758	0	True				
ANR	1484819	AssignmentExpression	* ok = true		1484758	0		=			
ANR	1484820	UnaryOperationExpression	* ok		1484758	0					
ANR	1484821	UnaryOperator	*		1484758	0					
ANR	1484822	Identifier	ok		1484758	1					
ANR	1484823	Identifier	true		1484758	1					
ANR	1484824	ReturnStatement	return item -> name ;	26:3:656:673	1484758	1	True				
ANR	1484825	PtrMemberAccess	item -> name		1484758	0					
ANR	1484826	Identifier	item		1484758	0					
ANR	1484827	Identifier	name		1484758	1					
ANR	1484828	ReturnStatement	return NULL ;	29:1:683:694	1484758	3	True				
ANR	1484829	Identifier	NULL		1484758	0					
ANR	1484830	ReturnType	static const char *		1484758	1					
ANR	1484831	Identifier	str_callback		1484758	2					
ANR	1484832	ParameterList	"RNum * user , ut64 off , int * ok"		1484758	3					
ANR	1484833	Parameter	RNum * user	14:32:420:429	1484758	0	True				
ANR	1484834	ParameterType	RNum *		1484758	0					
ANR	1484835	Identifier	user		1484758	1					
ANR	1484836	Parameter	ut64 off	14:44:432:439	1484758	1	True				
ANR	1484837	ParameterType	ut64		1484758	0					
ANR	1484838	Identifier	off		1484758	1					
ANR	1484839	Parameter	int * ok	14:54:442:448	1484758	2	True				
ANR	1484840	ParameterType	int *		1484758	0					
ANR	1484841	Identifier	ok		1484758	1					
ANR	1484842	CFGEntryNode	ENTRY		1484758		True				
ANR	1484843	CFGExitNode	EXIT		1484758		True				
ANR	1484844	Symbol	* ok		1484758						
ANR	1484845	Symbol	item		1484758						
ANR	1484846	Symbol	NULL		1484758						
ANR	1484847	Symbol	r_list_get_top		1484758						
ANR	1484848	Symbol	f		1484758						
ANR	1484849	Symbol	list		1484758						
ANR	1484850	Symbol	off		1484758						
ANR	1484851	Symbol	* item		1484758						
ANR	1484852	Symbol	item -> name		1484758						
ANR	1484853	Symbol	true		1484758						
ANR	1484854	Symbol	ok		1484758						
ANR	1484855	Symbol	user		1484758						
ANR	1484856	Symbol	r_flag_get_list		1484758						
ANR	1484857	Function	flag_skiplist_free	32:0:699:834							
ANR	1484858	FunctionDef	flag_skiplist_free (void * data)		1484857	0					
ANR	1484859	CompoundStatement		32:43:742:834	1484857	0					
ANR	1484860	IdentifierDeclStatement	RFlagsAtOffset * item = ( RFlagsAtOffset * ) data ;	33:1:745:790	1484857	0	True				
ANR	1484861	IdentifierDecl	* item = ( RFlagsAtOffset * ) data		1484857	0					
ANR	1484862	IdentifierDeclType	RFlagsAtOffset *		1484857	0					
ANR	1484863	Identifier	item		1484857	1					
ANR	1484864	AssignmentExpression	* item = ( RFlagsAtOffset * ) data		1484857	2		=			
ANR	1484865	Identifier	item		1484857	0					
ANR	1484866	CastExpression	( RFlagsAtOffset * ) data		1484857	1					
ANR	1484867	CastTarget	RFlagsAtOffset *		1484857	0					
ANR	1484868	Identifier	data		1484857	1					
ANR	1484869	ExpressionStatement	r_list_free ( item -> flags )	34:1:793:818	1484857	1	True				
ANR	1484870	CallExpression	r_list_free ( item -> flags )		1484857	0					
ANR	1484871	Callee	r_list_free		1484857	0					
ANR	1484872	Identifier	r_list_free		1484857	0					
ANR	1484873	ArgumentList	item -> flags		1484857	1					
ANR	1484874	Argument	item -> flags		1484857	0					
ANR	1484875	PtrMemberAccess	item -> flags		1484857	0					
ANR	1484876	Identifier	item		1484857	0					
ANR	1484877	Identifier	flags		1484857	1					
ANR	1484878	ExpressionStatement	free ( data )	35:1:821:832	1484857	2	True				
ANR	1484879	CallExpression	free ( data )		1484857	0					
ANR	1484880	Callee	free		1484857	0					
ANR	1484881	Identifier	free		1484857	0					
ANR	1484882	ArgumentList	data		1484857	1					
ANR	1484883	Argument	data		1484857	0					
ANR	1484884	Identifier	data		1484857	0					
ANR	1484885	ReturnType	static void		1484857	1					
ANR	1484886	Identifier	flag_skiplist_free		1484857	2					
ANR	1484887	ParameterList	void * data		1484857	3					
ANR	1484888	Parameter	void * data	32:31:730:739	1484857	0	True				
ANR	1484889	ParameterType	void *		1484857	0					
ANR	1484890	Identifier	data		1484857	1					
ANR	1484891	CFGEntryNode	ENTRY		1484857		True				
ANR	1484892	CFGExitNode	EXIT		1484857		True				
ANR	1484893	Symbol	item		1484857						
ANR	1484894	Symbol	data		1484857						
ANR	1484895	Symbol	* item		1484857						
ANR	1484896	Symbol	item -> flags		1484857						
ANR	1484897	Function	flag_skiplist_cmp	38:0:837:1048							
ANR	1484898	FunctionDef	"flag_skiplist_cmp (const void * va , const void * vb)"		1484897	0					
ANR	1484899	CompoundStatement		38:61:898:1048	1484897	0					
ANR	1484900	IdentifierDeclStatement	"const RFlagsAtOffset * a = ( RFlagsAtOffset * ) va , * b = ( RFlagsAtOffset * ) vb ;"	39:1:901:974	1484897	0	True				
ANR	1484901	IdentifierDecl	* a = ( RFlagsAtOffset * ) va		1484897	0					
ANR	1484902	IdentifierDeclType	const RFlagsAtOffset *		1484897	0					
ANR	1484903	Identifier	a		1484897	1					
ANR	1484904	AssignmentExpression	* a = ( RFlagsAtOffset * ) va		1484897	2		=			
ANR	1484905	Identifier	a		1484897	0					
ANR	1484906	CastExpression	( RFlagsAtOffset * ) va		1484897	1					
ANR	1484907	CastTarget	RFlagsAtOffset *		1484897	0					
ANR	1484908	Identifier	va		1484897	1					
ANR	1484909	IdentifierDecl	* b = ( RFlagsAtOffset * ) vb		1484897	1					
ANR	1484910	IdentifierDeclType	const RFlagsAtOffset *		1484897	0					
ANR	1484911	Identifier	b		1484897	1					
ANR	1484912	AssignmentExpression	* b = ( RFlagsAtOffset * ) vb		1484897	2		=			
ANR	1484913	Identifier	b		1484897	0					
ANR	1484914	CastExpression	( RFlagsAtOffset * ) vb		1484897	1					
ANR	1484915	CastTarget	RFlagsAtOffset *		1484897	0					
ANR	1484916	Identifier	vb		1484897	1					
ANR	1484917	IfStatement	if ( a -> off == b -> off )		1484897	1					
ANR	1484918	Condition	a -> off == b -> off	40:5:981:996	1484897	0	True				
ANR	1484919	EqualityExpression	a -> off == b -> off		1484897	0		==			
ANR	1484920	PtrMemberAccess	a -> off		1484897	0					
ANR	1484921	Identifier	a		1484897	0					
ANR	1484922	Identifier	off		1484897	1					
ANR	1484923	PtrMemberAccess	b -> off		1484897	1					
ANR	1484924	Identifier	b		1484897	0					
ANR	1484925	Identifier	off		1484897	1					
ANR	1484926	CompoundStatement		3:23:100:100	1484897	1					
ANR	1484927	ReturnStatement	return 0 ;	41:2:1003:1011	1484897	0	True				
ANR	1484928	PrimaryExpression	0		1484897	0					
ANR	1484929	ReturnStatement	return a -> off < b -> off ? - 1 : 1 ;	43:1:1017:1046	1484897	2	True				
ANR	1484930	ConditionalExpression	a -> off < b -> off ? - 1 : 1		1484897	0					
ANR	1484931	Condition	a -> off < b -> off		1484897	0					
ANR	1484932	RelationalExpression	a -> off < b -> off		1484897	0		<			
ANR	1484933	PtrMemberAccess	a -> off		1484897	0					
ANR	1484934	Identifier	a		1484897	0					
ANR	1484935	Identifier	off		1484897	1					
ANR	1484936	PtrMemberAccess	b -> off		1484897	1					
ANR	1484937	Identifier	b		1484897	0					
ANR	1484938	Identifier	off		1484897	1					
ANR	1484939	UnaryOperationExpression	- 1		1484897	1					
ANR	1484940	UnaryOperator	-		1484897	0					
ANR	1484941	PrimaryExpression	1		1484897	1					
ANR	1484942	PrimaryExpression	1		1484897	2					
ANR	1484943	ReturnType	static int		1484897	1					
ANR	1484944	Identifier	flag_skiplist_cmp		1484897	2					
ANR	1484945	ParameterList	"const void * va , const void * vb"		1484897	3					
ANR	1484946	Parameter	const void * va	38:29:866:879	1484897	0	True				
ANR	1484947	ParameterType	const void *		1484897	0					
ANR	1484948	Identifier	va		1484897	1					
ANR	1484949	Parameter	const void * vb	38:45:882:895	1484897	1	True				
ANR	1484950	ParameterType	const void *		1484897	0					
ANR	1484951	Identifier	vb		1484897	1					
ANR	1484952	CFGEntryNode	ENTRY		1484897		True				
ANR	1484953	CFGExitNode	EXIT		1484897		True				
ANR	1484954	Symbol	b -> off		1484897						
ANR	1484955	Symbol	a		1484897						
ANR	1484956	Symbol	b		1484897						
ANR	1484957	Symbol	a -> off		1484897						
ANR	1484958	Symbol	va		1484897						
ANR	1484959	Symbol	* a		1484897						
ANR	1484960	Symbol	vb		1484897						
ANR	1484961	Symbol	* b		1484897						
ANR	1484962	Function	num_callback	46:0:1051:1420							
ANR	1484963	FunctionDef	"num_callback (RNum * user , const char * name , int * ok)"		1484962	0					
ANR	1484964	CompoundStatement		46:64:1115:1420	1484962	0					
ANR	1484965	IdentifierDeclStatement	RFlag * f = ( RFlag * ) user ;	47:1:1118:1142	1484962	0	True				
ANR	1484966	IdentifierDecl	* f = ( RFlag * ) user		1484962	0					
ANR	1484967	IdentifierDeclType	RFlag *		1484962	0					
ANR	1484968	Identifier	f		1484962	1					
ANR	1484969	AssignmentExpression	* f = ( RFlag * ) user		1484962	2		=			
ANR	1484970	Identifier	f		1484962	0					
ANR	1484971	CastExpression	( RFlag * ) user		1484962	1					
ANR	1484972	CastTarget	RFlag *		1484962	0					
ANR	1484973	Identifier	user		1484962	1					
ANR	1484974	IdentifierDeclStatement	RFlagItem * item ;	48:1:1145:1160	1484962	1	True				
ANR	1484975	IdentifierDecl	* item		1484962	0					
ANR	1484976	IdentifierDeclType	RFlagItem *		1484962	0					
ANR	1484977	Identifier	item		1484962	1					
ANR	1484978	IfStatement	if ( ok )		1484962	2					
ANR	1484979	Condition	ok	49:5:1167:1168	1484962	0	True				
ANR	1484980	Identifier	ok		1484962	0					
ANR	1484981	CompoundStatement		4:9:55:55	1484962	1					
ANR	1484982	ExpressionStatement	* ok = 0	50:2:1175:1182	1484962	0	True				
ANR	1484983	AssignmentExpression	* ok = 0		1484962	0		=			
ANR	1484984	UnaryOperationExpression	* ok		1484962	0					
ANR	1484985	UnaryOperator	*		1484962	0					
ANR	1484986	Identifier	ok		1484962	1					
ANR	1484987	PrimaryExpression	0		1484962	1					
ANR	1484988	ExpressionStatement	"item = ht_pp_find ( f -> ht_name , name , NULL )"	52:1:1188:1230	1484962	3	True				
ANR	1484989	AssignmentExpression	"item = ht_pp_find ( f -> ht_name , name , NULL )"		1484962	0		=			
ANR	1484990	Identifier	item		1484962	0					
ANR	1484991	CallExpression	"ht_pp_find ( f -> ht_name , name , NULL )"		1484962	1					
ANR	1484992	Callee	ht_pp_find		1484962	0					
ANR	1484993	Identifier	ht_pp_find		1484962	0					
ANR	1484994	ArgumentList	f -> ht_name		1484962	1					
ANR	1484995	Argument	f -> ht_name		1484962	0					
ANR	1484996	PtrMemberAccess	f -> ht_name		1484962	0					
ANR	1484997	Identifier	f		1484962	0					
ANR	1484998	Identifier	ht_name		1484962	1					
ANR	1484999	Argument	name		1484962	1					
ANR	1485000	Identifier	name		1484962	0					
ANR	1485001	Argument	NULL		1484962	2					
ANR	1485002	Identifier	NULL		1484962	0					
ANR	1485003	IfStatement	if ( item )		1484962	4					
ANR	1485004	Condition	item	53:5:1237:1240	1484962	0	True				
ANR	1485005	Identifier	item		1484962	0					
ANR	1485006	CompoundStatement		8:11:127:127	1484962	1					
ANR	1485007	IfStatement	if ( item -> alias )		1484962	0					
ANR	1485008	Condition	item -> alias	55:6:1319:1329	1484962	0	True				
ANR	1485009	PtrMemberAccess	item -> alias		1484962	0					
ANR	1485010	Identifier	item		1484962	0					
ANR	1485011	Identifier	alias		1484962	1					
ANR	1485012	CompoundStatement		10:19:216:216	1484962	1					
ANR	1485013	Statement	return	56:3:1337:1342	1484962	0	True				
ANR	1485014	Statement	0L	56:10:1344:1345	1484962	1	True				
ANR	1485015	ExpressionStatement	L	56:12:1346:1347	1484962	2	True				
ANR	1485016	Identifier	L		1484962	0					
ANR	1485017	IfStatement	if ( ok )		1484962	1					
ANR	1485018	Condition	ok	58:6:1359:1360	1484962	0	True				
ANR	1485019	Identifier	ok		1484962	0					
ANR	1485020	CompoundStatement		13:10:247:247	1484962	1					
ANR	1485021	ExpressionStatement	* ok = 1	59:3:1368:1375	1484962	0	True				
ANR	1485022	AssignmentExpression	* ok = 1		1484962	0		=			
ANR	1485023	UnaryOperationExpression	* ok		1484962	0					
ANR	1485024	UnaryOperator	*		1484962	0					
ANR	1485025	Identifier	ok		1484962	1					
ANR	1485026	PrimaryExpression	1		1484962	1					
ANR	1485027	ReturnStatement	return item -> offset ;	61:2:1383:1402	1484962	2	True				
ANR	1485028	PtrMemberAccess	item -> offset		1484962	0					
ANR	1485029	Identifier	item		1484962	0					
ANR	1485030	Identifier	offset		1484962	1					
ANR	1485031	Statement	return	63:1:1408:1413	1484962	5	True				
ANR	1485032	Statement	0L	63:8:1415:1416	1484962	6	True				
ANR	1485033	ExpressionStatement	L	63:10:1417:1418	1484962	7	True				
ANR	1485034	Identifier	L		1484962	0					
ANR	1485035	ReturnType	static ut64		1484962	1					
ANR	1485036	Identifier	num_callback		1484962	2					
ANR	1485037	ParameterList	"RNum * user , const char * name , int * ok"		1484962	3					
ANR	1485038	Parameter	RNum * user	46:25:1076:1085	1484962	0	True				
ANR	1485039	ParameterType	RNum *		1484962	0					
ANR	1485040	Identifier	user		1484962	1					
ANR	1485041	Parameter	const char * name	46:37:1088:1103	1484962	1	True				
ANR	1485042	ParameterType	const char *		1484962	0					
ANR	1485043	Identifier	name		1484962	1					
ANR	1485044	Parameter	int * ok	46:55:1106:1112	1484962	2	True				
ANR	1485045	ParameterType	int *		1484962	0					
ANR	1485046	Identifier	ok		1484962	1					
ANR	1485047	CFGEntryNode	ENTRY		1484962		True				
ANR	1485048	CFGExitNode	EXIT		1484962		True				
ANR	1485049	Symbol	* ok		1484962						
ANR	1485050	Symbol	f -> ht_name		1484962						
ANR	1485051	Symbol	item		1484962						
ANR	1485052	Symbol	NULL		1484962						
ANR	1485053	Symbol	f		1484962						
ANR	1485054	Symbol	item -> alias		1484962						
ANR	1485055	Symbol	ht_pp_find		1484962						
ANR	1485056	Symbol	* f		1484962						
ANR	1485057	Symbol	* item		1484962						
ANR	1485058	Symbol	name		1484962						
ANR	1485059	Symbol	ok		1484962						
ANR	1485060	Symbol	user		1484962						
ANR	1485061	Symbol	item -> offset		1484962						
ANR	1485062	Function	free_item_realname	66:0:1423:1538							
ANR	1485063	FunctionDef	free_item_realname (RFlagItem * item)		1485062	0					
ANR	1485064	CompoundStatement		66:48:1471:1538	1485062	0					
ANR	1485065	IfStatement	if ( item -> name != item -> realname )		1485062	0					
ANR	1485066	Condition	item -> name != item -> realname	67:5:1478:1505	1485062	0	True				
ANR	1485067	EqualityExpression	item -> name != item -> realname		1485062	0		!=			
ANR	1485068	PtrMemberAccess	item -> name		1485062	0					
ANR	1485069	Identifier	item		1485062	0					
ANR	1485070	Identifier	name		1485062	1					
ANR	1485071	PtrMemberAccess	item -> realname		1485062	1					
ANR	1485072	Identifier	item		1485062	0					
ANR	1485073	Identifier	realname		1485062	1					
ANR	1485074	CompoundStatement		2:35:36:36	1485062	1					
ANR	1485075	ExpressionStatement	free ( item -> realname )	68:2:1512:1533	1485062	0	True				
ANR	1485076	CallExpression	free ( item -> realname )		1485062	0					
ANR	1485077	Callee	free		1485062	0					
ANR	1485078	Identifier	free		1485062	0					
ANR	1485079	ArgumentList	item -> realname		1485062	1					
ANR	1485080	Argument	item -> realname		1485062	0					
ANR	1485081	PtrMemberAccess	item -> realname		1485062	0					
ANR	1485082	Identifier	item		1485062	0					
ANR	1485083	Identifier	realname		1485062	1					
ANR	1485084	ReturnType	static void		1485062	1					
ANR	1485085	Identifier	free_item_realname		1485062	2					
ANR	1485086	ParameterList	RFlagItem * item		1485062	3					
ANR	1485087	Parameter	RFlagItem * item	66:31:1454:1468	1485062	0	True				
ANR	1485088	ParameterType	RFlagItem *		1485062	0					
ANR	1485089	Identifier	item		1485062	1					
ANR	1485090	CFGEntryNode	ENTRY		1485062		True				
ANR	1485091	CFGExitNode	EXIT		1485062		True				
ANR	1485092	Symbol	item		1485062						
ANR	1485093	Symbol	item -> name		1485062						
ANR	1485094	Symbol	* item		1485062						
ANR	1485095	Symbol	item -> realname		1485062						
ANR	1485096	Function	free_item_name	72:0:1541:1648							
ANR	1485097	FunctionDef	free_item_name (RFlagItem * item)		1485096	0					
ANR	1485098	CompoundStatement		72:44:1585:1648	1485096	0					
ANR	1485099	IfStatement	if ( item -> name != item -> realname )		1485096	0					
ANR	1485100	Condition	item -> name != item -> realname	73:5:1592:1619	1485096	0	True				
ANR	1485101	EqualityExpression	item -> name != item -> realname		1485096	0		!=			
ANR	1485102	PtrMemberAccess	item -> name		1485096	0					
ANR	1485103	Identifier	item		1485096	0					
ANR	1485104	Identifier	name		1485096	1					
ANR	1485105	PtrMemberAccess	item -> realname		1485096	1					
ANR	1485106	Identifier	item		1485096	0					
ANR	1485107	Identifier	realname		1485096	1					
ANR	1485108	CompoundStatement		2:35:36:36	1485096	1					
ANR	1485109	ExpressionStatement	free ( item -> name )	74:2:1626:1643	1485096	0	True				
ANR	1485110	CallExpression	free ( item -> name )		1485096	0					
ANR	1485111	Callee	free		1485096	0					
ANR	1485112	Identifier	free		1485096	0					
ANR	1485113	ArgumentList	item -> name		1485096	1					
ANR	1485114	Argument	item -> name		1485096	0					
ANR	1485115	PtrMemberAccess	item -> name		1485096	0					
ANR	1485116	Identifier	item		1485096	0					
ANR	1485117	Identifier	name		1485096	1					
ANR	1485118	ReturnType	static void		1485096	1					
ANR	1485119	Identifier	free_item_name		1485096	2					
ANR	1485120	ParameterList	RFlagItem * item		1485096	3					
ANR	1485121	Parameter	RFlagItem * item	72:27:1568:1582	1485096	0	True				
ANR	1485122	ParameterType	RFlagItem *		1485096	0					
ANR	1485123	Identifier	item		1485096	1					
ANR	1485124	CFGEntryNode	ENTRY		1485096		True				
ANR	1485125	CFGExitNode	EXIT		1485096		True				
ANR	1485126	Symbol	item		1485096						
ANR	1485127	Symbol	item -> name		1485096						
ANR	1485128	Symbol	* item		1485096						
ANR	1485129	Symbol	item -> realname		1485096						
ANR	1485130	Function	r_flag_get_nearest_list	82:0:1795:2093							
ANR	1485131	FunctionDef	"r_flag_get_nearest_list (RFlag * f , ut64 off , int dir)"		1485130	0					
ANR	1485132	CompoundStatement		82:76:1871:2093	1485130	0					
ANR	1485133	Statement	RFlagsAtOffset	83:1:1874:1887	1485130	0	True				
ANR	1485134	Statement	key	83:16:1889:1891	1485130	1	True				
ANR	1485135	Statement	=	83:20:1893:1893	1485130	2	True				
ANR	1485136	CompoundStatement		2:22:23:23	1485130	3					
ANR	1485137	Statement	.	83:24:1897:1897	1485130	0	True				
ANR	1485138	Statement	off	83:25:1898:1900	1485130	1	True				
ANR	1485139	Statement	=	83:29:1902:1902	1485130	2	True				
ANR	1485140	Statement	off	83:31:1904:1906	1485130	3	True				
ANR	1485141	ExpressionStatement		83:36:1909:1909	1485130	4	True				
ANR	1485142	IdentifierDeclStatement	"RFlagsAtOffset * flags = ( dir >= 0 ) ? r_skiplist_get_geq ( f -> by_off , & key ) : r_skiplist_get_leq ( f -> by_off , & key ) ;"	84:1:1912:2028	1485130	5	True				
ANR	1485143	IdentifierDecl	"* flags = ( dir >= 0 ) ? r_skiplist_get_geq ( f -> by_off , & key ) : r_skiplist_get_leq ( f -> by_off , & key )"		1485130	0					
ANR	1485144	IdentifierDeclType	RFlagsAtOffset *		1485130	0					
ANR	1485145	Identifier	flags		1485130	1					
ANR	1485146	AssignmentExpression	"* flags = ( dir >= 0 ) ? r_skiplist_get_geq ( f -> by_off , & key ) : r_skiplist_get_leq ( f -> by_off , & key )"		1485130	2		=			
ANR	1485147	Identifier	flags		1485130	0					
ANR	1485148	ConditionalExpression	"( dir >= 0 ) ? r_skiplist_get_geq ( f -> by_off , & key ) : r_skiplist_get_leq ( f -> by_off , & key )"		1485130	1					
ANR	1485149	Condition	dir >= 0		1485130	0					
ANR	1485150	RelationalExpression	dir >= 0		1485130	0		>=			
ANR	1485151	Identifier	dir		1485130	0					
ANR	1485152	PrimaryExpression	0		1485130	1					
ANR	1485153	CallExpression	"r_skiplist_get_geq ( f -> by_off , & key )"		1485130	1					
ANR	1485154	Callee	r_skiplist_get_geq		1485130	0					
ANR	1485155	Identifier	r_skiplist_get_geq		1485130	0					
ANR	1485156	ArgumentList	f -> by_off		1485130	1					
ANR	1485157	Argument	f -> by_off		1485130	0					
ANR	1485158	PtrMemberAccess	f -> by_off		1485130	0					
ANR	1485159	Identifier	f		1485130	0					
ANR	1485160	Identifier	by_off		1485130	1					
ANR	1485161	Argument	& key		1485130	1					
ANR	1485162	UnaryOperationExpression	& key		1485130	0					
ANR	1485163	UnaryOperator	&		1485130	0					
ANR	1485164	Identifier	key		1485130	1					
ANR	1485165	CallExpression	"r_skiplist_get_leq ( f -> by_off , & key )"		1485130	2					
ANR	1485166	Callee	r_skiplist_get_leq		1485130	0					
ANR	1485167	Identifier	r_skiplist_get_leq		1485130	0					
ANR	1485168	ArgumentList	f -> by_off		1485130	1					
ANR	1485169	Argument	f -> by_off		1485130	0					
ANR	1485170	PtrMemberAccess	f -> by_off		1485130	0					
ANR	1485171	Identifier	f		1485130	0					
ANR	1485172	Identifier	by_off		1485130	1					
ANR	1485173	Argument	& key		1485130	1					
ANR	1485174	UnaryOperationExpression	& key		1485130	0					
ANR	1485175	UnaryOperator	&		1485130	0					
ANR	1485176	Identifier	key		1485130	1					
ANR	1485177	ReturnStatement	return ( dir == 0 && flags && flags -> off != off ) ? NULL : flags ;	87:1:2031:2091	1485130	6	True				
ANR	1485178	ConditionalExpression	( dir == 0 && flags && flags -> off != off ) ? NULL : flags		1485130	0					
ANR	1485179	Condition	dir == 0 && flags && flags -> off != off		1485130	0					
ANR	1485180	AndExpression	dir == 0 && flags && flags -> off != off		1485130	0		&&			
ANR	1485181	EqualityExpression	dir == 0		1485130	0		==			
ANR	1485182	Identifier	dir		1485130	0					
ANR	1485183	PrimaryExpression	0		1485130	1					
ANR	1485184	AndExpression	flags && flags -> off != off		1485130	1		&&			
ANR	1485185	Identifier	flags		1485130	0					
ANR	1485186	EqualityExpression	flags -> off != off		1485130	1		!=			
ANR	1485187	PtrMemberAccess	flags -> off		1485130	0					
ANR	1485188	Identifier	flags		1485130	0					
ANR	1485189	Identifier	off		1485130	1					
ANR	1485190	Identifier	off		1485130	1					
ANR	1485191	Identifier	NULL		1485130	1					
ANR	1485192	Identifier	flags		1485130	2					
ANR	1485193	ReturnType	static RFlagsAtOffset *		1485130	1					
ANR	1485194	Identifier	r_flag_get_nearest_list		1485130	2					
ANR	1485195	ParameterList	"RFlag * f , ut64 off , int dir"		1485130	3					
ANR	1485196	Parameter	RFlag * f	82:47:1842:1849	1485130	0	True				
ANR	1485197	ParameterType	RFlag *		1485130	0					
ANR	1485198	Identifier	f		1485130	1					
ANR	1485199	Parameter	ut64 off	82:57:1852:1859	1485130	1	True				
ANR	1485200	ParameterType	ut64		1485130	0					
ANR	1485201	Identifier	off		1485130	1					
ANR	1485202	Parameter	int dir	82:67:1862:1868	1485130	2	True				
ANR	1485203	ParameterType	int		1485130	0					
ANR	1485204	Identifier	dir		1485130	1					
ANR	1485205	CFGEntryNode	ENTRY		1485130		True				
ANR	1485206	CFGExitNode	EXIT		1485130		True				
ANR	1485207	Symbol	* f		1485130						
ANR	1485208	Symbol	* flags		1485130						
ANR	1485209	Symbol	& key		1485130						
ANR	1485210	Symbol	NULL		1485130						
ANR	1485211	Symbol	r_skiplist_get_geq		1485130						
ANR	1485212	Symbol	f		1485130						
ANR	1485213	Symbol	flags		1485130						
ANR	1485214	Symbol	f -> by_off		1485130						
ANR	1485215	Symbol	r_skiplist_get_leq		1485130						
ANR	1485216	Symbol	flags -> off		1485130						
ANR	1485217	Symbol	dir		1485130						
ANR	1485218	Symbol	off		1485130						
ANR	1485219	Function	remove_offsetmap	90:0:2096:2398							
ANR	1485220	FunctionDef	"remove_offsetmap (RFlag * f , RFlagItem * item)"		1485219	0					
ANR	1485221	CompoundStatement		90:56:2152:2398	1485219	0					
ANR	1485222	ExpressionStatement	r_return_if_fail ( f && item )	91:1:2155:2183	1485219	0	True				
ANR	1485223	CallExpression	r_return_if_fail ( f && item )		1485219	0					
ANR	1485224	Callee	r_return_if_fail		1485219	0					
ANR	1485225	Identifier	r_return_if_fail		1485219	0					
ANR	1485226	ArgumentList	f && item		1485219	1					
ANR	1485227	Argument	f && item		1485219	0					
ANR	1485228	AndExpression	f && item		1485219	0		&&			
ANR	1485229	Identifier	f		1485219	0					
ANR	1485230	Identifier	item		1485219	1					
ANR	1485231	IdentifierDeclStatement	"RFlagsAtOffset * flags = r_flag_get_nearest_list ( f , item -> offset , 0 ) ;"	92:1:2186:2254	1485219	1	True				
ANR	1485232	IdentifierDecl	"* flags = r_flag_get_nearest_list ( f , item -> offset , 0 )"		1485219	0					
ANR	1485233	IdentifierDeclType	RFlagsAtOffset *		1485219	0					
ANR	1485234	Identifier	flags		1485219	1					
ANR	1485235	AssignmentExpression	"* flags = r_flag_get_nearest_list ( f , item -> offset , 0 )"		1485219	2		=			
ANR	1485236	Identifier	flags		1485219	0					
ANR	1485237	CallExpression	"r_flag_get_nearest_list ( f , item -> offset , 0 )"		1485219	1					
ANR	1485238	Callee	r_flag_get_nearest_list		1485219	0					
ANR	1485239	Identifier	r_flag_get_nearest_list		1485219	0					
ANR	1485240	ArgumentList	f		1485219	1					
ANR	1485241	Argument	f		1485219	0					
ANR	1485242	Identifier	f		1485219	0					
ANR	1485243	Argument	item -> offset		1485219	1					
ANR	1485244	PtrMemberAccess	item -> offset		1485219	0					
ANR	1485245	Identifier	item		1485219	0					
ANR	1485246	Identifier	offset		1485219	1					
ANR	1485247	Argument	0		1485219	2					
ANR	1485248	PrimaryExpression	0		1485219	0					
ANR	1485249	IfStatement	if ( flags )		1485219	2					
ANR	1485250	Condition	flags	93:5:2261:2265	1485219	0	True				
ANR	1485251	Identifier	flags		1485219	0					
ANR	1485252	CompoundStatement		4:12:115:115	1485219	1					
ANR	1485253	ExpressionStatement	"r_list_delete_data ( flags -> flags , item )"	94:2:2272:2311	1485219	0	True				
ANR	1485254	CallExpression	"r_list_delete_data ( flags -> flags , item )"		1485219	0					
ANR	1485255	Callee	r_list_delete_data		1485219	0					
ANR	1485256	Identifier	r_list_delete_data		1485219	0					
ANR	1485257	ArgumentList	flags -> flags		1485219	1					
ANR	1485258	Argument	flags -> flags		1485219	0					
ANR	1485259	PtrMemberAccess	flags -> flags		1485219	0					
ANR	1485260	Identifier	flags		1485219	0					
ANR	1485261	Identifier	flags		1485219	1					
ANR	1485262	Argument	item		1485219	1					
ANR	1485263	Identifier	item		1485219	0					
ANR	1485264	IfStatement	if ( r_list_empty ( flags -> flags ) )		1485219	1					
ANR	1485265	Condition	r_list_empty ( flags -> flags )	95:6:2319:2345	1485219	0	True				
ANR	1485266	CallExpression	r_list_empty ( flags -> flags )		1485219	0					
ANR	1485267	Callee	r_list_empty		1485219	0					
ANR	1485268	Identifier	r_list_empty		1485219	0					
ANR	1485269	ArgumentList	flags -> flags		1485219	1					
ANR	1485270	Argument	flags -> flags		1485219	0					
ANR	1485271	PtrMemberAccess	flags -> flags		1485219	0					
ANR	1485272	Identifier	flags		1485219	0					
ANR	1485273	Identifier	flags		1485219	1					
ANR	1485274	CompoundStatement		6:35:195:195	1485219	1					
ANR	1485275	ExpressionStatement	"r_skiplist_delete ( f -> by_off , flags )"	96:3:2353:2389	1485219	0	True				
ANR	1485276	CallExpression	"r_skiplist_delete ( f -> by_off , flags )"		1485219	0					
ANR	1485277	Callee	r_skiplist_delete		1485219	0					
ANR	1485278	Identifier	r_skiplist_delete		1485219	0					
ANR	1485279	ArgumentList	f -> by_off		1485219	1					
ANR	1485280	Argument	f -> by_off		1485219	0					
ANR	1485281	PtrMemberAccess	f -> by_off		1485219	0					
ANR	1485282	Identifier	f		1485219	0					
ANR	1485283	Identifier	by_off		1485219	1					
ANR	1485284	Argument	flags		1485219	1					
ANR	1485285	Identifier	flags		1485219	0					
ANR	1485286	ReturnType	static void		1485219	1					
ANR	1485287	Identifier	remove_offsetmap		1485219	2					
ANR	1485288	ParameterList	"RFlag * f , RFlagItem * item"		1485219	3					
ANR	1485289	Parameter	RFlag * f	90:29:2125:2132	1485219	0	True				
ANR	1485290	ParameterType	RFlag *		1485219	0					
ANR	1485291	Identifier	f		1485219	1					
ANR	1485292	Parameter	RFlagItem * item	90:39:2135:2149	1485219	1	True				
ANR	1485293	ParameterType	RFlagItem *		1485219	0					
ANR	1485294	Identifier	item		1485219	1					
ANR	1485295	CFGEntryNode	ENTRY		1485219		True				
ANR	1485296	CFGExitNode	EXIT		1485219		True				
ANR	1485297	Symbol	* f		1485219						
ANR	1485298	Symbol	* flags		1485219						
ANR	1485299	Symbol	item		1485219						
ANR	1485300	Symbol	f		1485219						
ANR	1485301	Symbol	r_flag_get_nearest_list		1485219						
ANR	1485302	Symbol	* item		1485219						
ANR	1485303	Symbol	flags -> flags		1485219						
ANR	1485304	Symbol	flags		1485219						
ANR	1485305	Symbol	r_list_empty		1485219						
ANR	1485306	Symbol	f -> by_off		1485219						
ANR	1485307	Symbol	item -> offset		1485219						
ANR	1485308	Function	flags_at_offset	101:0:2401:2822							
ANR	1485309	FunctionDef	"flags_at_offset (RFlag * f , ut64 off)"		1485308	0					
ANR	1485310	CompoundStatement		101:59:2460:2822	1485308	0					
ANR	1485311	IdentifierDeclStatement	"RFlagsAtOffset * res = r_flag_get_nearest_list ( f , off , 0 ) ;"	102:1:2463:2520	1485308	0	True				
ANR	1485312	IdentifierDecl	"* res = r_flag_get_nearest_list ( f , off , 0 )"		1485308	0					
ANR	1485313	IdentifierDeclType	RFlagsAtOffset *		1485308	0					
ANR	1485314	Identifier	res		1485308	1					
ANR	1485315	AssignmentExpression	"* res = r_flag_get_nearest_list ( f , off , 0 )"		1485308	2		=			
ANR	1485316	Identifier	res		1485308	0					
ANR	1485317	CallExpression	"r_flag_get_nearest_list ( f , off , 0 )"		1485308	1					
ANR	1485318	Callee	r_flag_get_nearest_list		1485308	0					
ANR	1485319	Identifier	r_flag_get_nearest_list		1485308	0					
ANR	1485320	ArgumentList	f		1485308	1					
ANR	1485321	Argument	f		1485308	0					
ANR	1485322	Identifier	f		1485308	0					
ANR	1485323	Argument	off		1485308	1					
ANR	1485324	Identifier	off		1485308	0					
ANR	1485325	Argument	0		1485308	2					
ANR	1485326	PrimaryExpression	0		1485308	0					
ANR	1485327	IfStatement	if ( res )		1485308	1					
ANR	1485328	Condition	res	103:5:2527:2529	1485308	0	True				
ANR	1485329	Identifier	res		1485308	0					
ANR	1485330	CompoundStatement		3:10:71:71	1485308	1					
ANR	1485331	ReturnStatement	return res ;	104:2:2536:2546	1485308	0	True				
ANR	1485332	Identifier	res		1485308	0					
ANR	1485333	ExpressionStatement	res = R_NEW ( RFlagsAtOffset )	108:1:2611:2639	1485308	2	True				
ANR	1485334	AssignmentExpression	res = R_NEW ( RFlagsAtOffset )		1485308	0		=			
ANR	1485335	Identifier	res		1485308	0					
ANR	1485336	CallExpression	R_NEW ( RFlagsAtOffset )		1485308	1					
ANR	1485337	Callee	R_NEW		1485308	0					
ANR	1485338	Identifier	R_NEW		1485308	0					
ANR	1485339	ArgumentList	RFlagsAtOffset		1485308	1					
ANR	1485340	Argument	RFlagsAtOffset		1485308	0					
ANR	1485341	Identifier	RFlagsAtOffset		1485308	0					
ANR	1485342	IfStatement	if ( ! res )		1485308	3					
ANR	1485343	Condition	! res	109:5:2646:2649	1485308	0	True				
ANR	1485344	UnaryOperationExpression	! res		1485308	0					
ANR	1485345	UnaryOperator	!		1485308	0					
ANR	1485346	Identifier	res		1485308	1					
ANR	1485347	CompoundStatement		9:11:191:191	1485308	1					
ANR	1485348	ReturnStatement	return NULL ;	110:2:2656:2667	1485308	0	True				
ANR	1485349	Identifier	NULL		1485308	0					
ANR	1485350	ExpressionStatement	res -> flags = r_list_new ( )	113:1:2674:2700	1485308	4	True				
ANR	1485351	AssignmentExpression	res -> flags = r_list_new ( )		1485308	0		=			
ANR	1485352	PtrMemberAccess	res -> flags		1485308	0					
ANR	1485353	Identifier	res		1485308	0					
ANR	1485354	Identifier	flags		1485308	1					
ANR	1485355	CallExpression	r_list_new ( )		1485308	1					
ANR	1485356	Callee	r_list_new		1485308	0					
ANR	1485357	Identifier	r_list_new		1485308	0					
ANR	1485358	ArgumentList			1485308	1					
ANR	1485359	IfStatement	if ( ! res -> flags )		1485308	5					
ANR	1485360	Condition	! res -> flags	114:5:2707:2717	1485308	0	True				
ANR	1485361	UnaryOperationExpression	! res -> flags		1485308	0					
ANR	1485362	UnaryOperator	!		1485308	0					
ANR	1485363	PtrMemberAccess	res -> flags		1485308	1					
ANR	1485364	Identifier	res		1485308	0					
ANR	1485365	Identifier	flags		1485308	1					
ANR	1485366	CompoundStatement		14:18:259:259	1485308	1					
ANR	1485367	ExpressionStatement	free ( res )	115:2:2724:2734	1485308	0	True				
ANR	1485368	CallExpression	free ( res )		1485308	0					
ANR	1485369	Callee	free		1485308	0					
ANR	1485370	Identifier	free		1485308	0					
ANR	1485371	ArgumentList	res		1485308	1					
ANR	1485372	Argument	res		1485308	0					
ANR	1485373	Identifier	res		1485308	0					
ANR	1485374	ReturnStatement	return NULL ;	116:2:2738:2749	1485308	1	True				
ANR	1485375	Identifier	NULL		1485308	0					
ANR	1485376	ExpressionStatement	res -> off = off	119:1:2756:2770	1485308	6	True				
ANR	1485377	AssignmentExpression	res -> off = off		1485308	0		=			
ANR	1485378	PtrMemberAccess	res -> off		1485308	0					
ANR	1485379	Identifier	res		1485308	0					
ANR	1485380	Identifier	off		1485308	1					
ANR	1485381	Identifier	off		1485308	1					
ANR	1485382	ExpressionStatement	"r_skiplist_insert ( f -> by_off , res )"	120:1:2773:2807	1485308	7	True				
ANR	1485383	CallExpression	"r_skiplist_insert ( f -> by_off , res )"		1485308	0					
ANR	1485384	Callee	r_skiplist_insert		1485308	0					
ANR	1485385	Identifier	r_skiplist_insert		1485308	0					
ANR	1485386	ArgumentList	f -> by_off		1485308	1					
ANR	1485387	Argument	f -> by_off		1485308	0					
ANR	1485388	PtrMemberAccess	f -> by_off		1485308	0					
ANR	1485389	Identifier	f		1485308	0					
ANR	1485390	Identifier	by_off		1485308	1					
ANR	1485391	Argument	res		1485308	1					
ANR	1485392	Identifier	res		1485308	0					
ANR	1485393	ReturnStatement	return res ;	121:1:2810:2820	1485308	8	True				
ANR	1485394	Identifier	res		1485308	0					
ANR	1485395	ReturnType	static RFlagsAtOffset *		1485308	1					
ANR	1485396	Identifier	flags_at_offset		1485308	2					
ANR	1485397	ParameterList	"RFlag * f , ut64 off"		1485308	3					
ANR	1485398	Parameter	RFlag * f	101:39:2440:2447	1485308	0	True				
ANR	1485399	ParameterType	RFlag *		1485308	0					
ANR	1485400	Identifier	f		1485308	1					
ANR	1485401	Parameter	ut64 off	101:49:2450:2457	1485308	1	True				
ANR	1485402	ParameterType	ut64		1485308	0					
ANR	1485403	Identifier	off		1485308	1					
ANR	1485404	CFGEntryNode	ENTRY		1485308		True				
ANR	1485405	CFGExitNode	EXIT		1485308		True				
ANR	1485406	Symbol	res		1485308						
ANR	1485407	Symbol	NULL		1485308						
ANR	1485408	Symbol	f		1485308						
ANR	1485409	Symbol	RFlagsAtOffset		1485308						
ANR	1485410	Symbol	res -> off		1485308						
ANR	1485411	Symbol	* res		1485308						
ANR	1485412	Symbol	f -> by_off		1485308						
ANR	1485413	Symbol	off		1485308						
ANR	1485414	Symbol	* f		1485308						
ANR	1485415	Symbol	r_flag_get_nearest_list		1485308						
ANR	1485416	Symbol	R_NEW		1485308						
ANR	1485417	Symbol	res -> flags		1485308						
ANR	1485418	Symbol	r_list_new		1485308						
ANR	1485419	Function	filter_item_name	124:0:2825:2992							
ANR	1485420	FunctionDef	filter_item_name (const char * name)		1485419	0					
ANR	1485421	CompoundStatement		124:48:2873:2992	1485419	0					
ANR	1485422	IdentifierDeclStatement	char * res = strdup ( name ) ;	125:1:2876:2901	1485419	0	True				
ANR	1485423	IdentifierDecl	* res = strdup ( name )		1485419	0					
ANR	1485424	IdentifierDeclType	char *		1485419	0					
ANR	1485425	Identifier	res		1485419	1					
ANR	1485426	AssignmentExpression	* res = strdup ( name )		1485419	2		=			
ANR	1485427	Identifier	res		1485419	0					
ANR	1485428	CallExpression	strdup ( name )		1485419	1					
ANR	1485429	Callee	strdup		1485419	0					
ANR	1485430	Identifier	strdup		1485419	0					
ANR	1485431	ArgumentList	name		1485419	1					
ANR	1485432	Argument	name		1485419	0					
ANR	1485433	Identifier	name		1485419	0					
ANR	1485434	IfStatement	if ( ! res )		1485419	1					
ANR	1485435	Condition	! res	126:5:2908:2911	1485419	0	True				
ANR	1485436	UnaryOperationExpression	! res		1485419	0					
ANR	1485437	UnaryOperator	!		1485419	0					
ANR	1485438	Identifier	res		1485419	1					
ANR	1485439	CompoundStatement		3:11:40:40	1485419	1					
ANR	1485440	ReturnStatement	return NULL ;	127:2:2918:2929	1485419	0	True				
ANR	1485441	Identifier	NULL		1485419	0					
ANR	1485442	ExpressionStatement	r_str_trim ( res )	130:1:2936:2952	1485419	2	True				
ANR	1485443	CallExpression	r_str_trim ( res )		1485419	0					
ANR	1485444	Callee	r_str_trim		1485419	0					
ANR	1485445	Identifier	r_str_trim		1485419	0					
ANR	1485446	ArgumentList	res		1485419	1					
ANR	1485447	Argument	res		1485419	0					
ANR	1485448	Identifier	res		1485419	0					
ANR	1485449	ExpressionStatement	"r_name_filter ( res , 0 )"	131:1:2955:2977	1485419	3	True				
ANR	1485450	CallExpression	"r_name_filter ( res , 0 )"		1485419	0					
ANR	1485451	Callee	r_name_filter		1485419	0					
ANR	1485452	Identifier	r_name_filter		1485419	0					
ANR	1485453	ArgumentList	res		1485419	1					
ANR	1485454	Argument	res		1485419	0					
ANR	1485455	Identifier	res		1485419	0					
ANR	1485456	Argument	0		1485419	1					
ANR	1485457	PrimaryExpression	0		1485419	0					
ANR	1485458	ReturnStatement	return res ;	132:1:2980:2990	1485419	4	True				
ANR	1485459	Identifier	res		1485419	0					
ANR	1485460	ReturnType	static char *		1485419	1					
ANR	1485461	Identifier	filter_item_name		1485419	2					
ANR	1485462	ParameterList	const char * name		1485419	3					
ANR	1485463	Parameter	const char * name	124:30:2855:2870	1485419	0	True				
ANR	1485464	ParameterType	const char *		1485419	0					
ANR	1485465	Identifier	name		1485419	1					
ANR	1485466	CFGEntryNode	ENTRY		1485419		True				
ANR	1485467	CFGExitNode	EXIT		1485419		True				
ANR	1485468	Symbol	res		1485419						
ANR	1485469	Symbol	NULL		1485419						
ANR	1485470	Symbol	name		1485419						
ANR	1485471	Symbol	strdup		1485419						
ANR	1485472	Function	set_name	135:0:2995:3149							
ANR	1485473	FunctionDef	"set_name (RFlagItem * item , char * name)"		1485472	0					
ANR	1485474	CompoundStatement		135:50:3045:3149	1485472	0					
ANR	1485475	ExpressionStatement	free_item_name ( item )	136:1:3048:3069	1485472	0	True				
ANR	1485476	CallExpression	free_item_name ( item )		1485472	0					
ANR	1485477	Callee	free_item_name		1485472	0					
ANR	1485478	Identifier	free_item_name		1485472	0					
ANR	1485479	ArgumentList	item		1485472	1					
ANR	1485480	Argument	item		1485472	0					
ANR	1485481	Identifier	item		1485472	0					
ANR	1485482	ExpressionStatement	item -> name = name	137:1:3072:3089	1485472	1	True				
ANR	1485483	AssignmentExpression	item -> name = name		1485472	0		=			
ANR	1485484	PtrMemberAccess	item -> name		1485472	0					
ANR	1485485	Identifier	item		1485472	0					
ANR	1485486	Identifier	name		1485472	1					
ANR	1485487	Identifier	name		1485472	1					
ANR	1485488	ExpressionStatement	free_item_realname ( item )	138:1:3092:3117	1485472	2	True				
ANR	1485489	CallExpression	free_item_realname ( item )		1485472	0					
ANR	1485490	Callee	free_item_realname		1485472	0					
ANR	1485491	Identifier	free_item_realname		1485472	0					
ANR	1485492	ArgumentList	item		1485472	1					
ANR	1485493	Argument	item		1485472	0					
ANR	1485494	Identifier	item		1485472	0					
ANR	1485495	ExpressionStatement	item -> realname = item -> name	139:1:3120:3147	1485472	3	True				
ANR	1485496	AssignmentExpression	item -> realname = item -> name		1485472	0		=			
ANR	1485497	PtrMemberAccess	item -> realname		1485472	0					
ANR	1485498	Identifier	item		1485472	0					
ANR	1485499	Identifier	realname		1485472	1					
ANR	1485500	PtrMemberAccess	item -> name		1485472	1					
ANR	1485501	Identifier	item		1485472	0					
ANR	1485502	Identifier	name		1485472	1					
ANR	1485503	ReturnType	static void		1485472	1					
ANR	1485504	Identifier	set_name		1485472	2					
ANR	1485505	ParameterList	"RFlagItem * item , char * name"		1485472	3					
ANR	1485506	Parameter	RFlagItem * item	135:21:3016:3030	1485472	0	True				
ANR	1485507	ParameterType	RFlagItem *		1485472	0					
ANR	1485508	Identifier	item		1485472	1					
ANR	1485509	Parameter	char * name	135:38:3033:3042	1485472	1	True				
ANR	1485510	ParameterType	char *		1485472	0					
ANR	1485511	Identifier	name		1485472	1					
ANR	1485512	CFGEntryNode	ENTRY		1485472		True				
ANR	1485513	CFGExitNode	EXIT		1485472		True				
ANR	1485514	Symbol	item		1485472						
ANR	1485515	Symbol	item -> name		1485472						
ANR	1485516	Symbol	* item		1485472						
ANR	1485517	Symbol	name		1485472						
ANR	1485518	Symbol	item -> realname		1485472						
ANR	1485519	Function	update_flag_item_offset	142:0:3152:3562							
ANR	1485520	FunctionDef	"update_flag_item_offset (RFlag * f , RFlagItem * item , ut64 newoff , bool is_new , bool force)"		1485519	0					
ANR	1485521	CompoundStatement		142:101:3253:3562	1485519	0					
ANR	1485522	IfStatement	if ( item -> offset != newoff || force )		1485519	0					
ANR	1485523	Condition	item -> offset != newoff || force	143:5:3260:3290	1485519	0	True				
ANR	1485524	OrExpression	item -> offset != newoff || force		1485519	0		||			
ANR	1485525	EqualityExpression	item -> offset != newoff		1485519	0		!=			
ANR	1485526	PtrMemberAccess	item -> offset		1485519	0					
ANR	1485527	Identifier	item		1485519	0					
ANR	1485528	Identifier	offset		1485519	1					
ANR	1485529	Identifier	newoff		1485519	1					
ANR	1485530	Identifier	force		1485519	1					
ANR	1485531	CompoundStatement		8:2:121:180	1485519	1					
ANR	1485532	IfStatement	if ( ! is_new )		1485519	0					
ANR	1485533	Condition	! is_new	144:6:3301:3307	1485519	0	True				
ANR	1485534	UnaryOperationExpression	! is_new		1485519	0					
ANR	1485535	UnaryOperator	!		1485519	0					
ANR	1485536	Identifier	is_new		1485519	1					
ANR	1485537	CompoundStatement		3:15:56:56	1485519	1					
ANR	1485538	ExpressionStatement	"remove_offsetmap ( f , item )"	145:3:3315:3341	1485519	0	True				
ANR	1485539	CallExpression	"remove_offsetmap ( f , item )"		1485519	0					
ANR	1485540	Callee	remove_offsetmap		1485519	0					
ANR	1485541	Identifier	remove_offsetmap		1485519	0					
ANR	1485542	ArgumentList	f		1485519	1					
ANR	1485543	Argument	f		1485519	0					
ANR	1485544	Identifier	f		1485519	0					
ANR	1485545	Argument	item		1485519	1					
ANR	1485546	Identifier	item		1485519	0					
ANR	1485547	ExpressionStatement	item -> offset = newoff	147:2:3349:3370	1485519	1	True				
ANR	1485548	AssignmentExpression	item -> offset = newoff		1485519	0		=			
ANR	1485549	PtrMemberAccess	item -> offset		1485519	0					
ANR	1485550	Identifier	item		1485519	0					
ANR	1485551	Identifier	offset		1485519	1					
ANR	1485552	Identifier	newoff		1485519	1					
ANR	1485553	IdentifierDeclStatement	"RFlagsAtOffset * flagsAtOffset = flags_at_offset ( f , newoff ) ;"	149:2:3375:3434	1485519	2	True				
ANR	1485554	IdentifierDecl	"* flagsAtOffset = flags_at_offset ( f , newoff )"		1485519	0					
ANR	1485555	IdentifierDeclType	RFlagsAtOffset *		1485519	0					
ANR	1485556	Identifier	flagsAtOffset		1485519	1					
ANR	1485557	AssignmentExpression	"* flagsAtOffset = flags_at_offset ( f , newoff )"		1485519	2		=			
ANR	1485558	Identifier	flagsAtOffset		1485519	0					
ANR	1485559	CallExpression	"flags_at_offset ( f , newoff )"		1485519	1					
ANR	1485560	Callee	flags_at_offset		1485519	0					
ANR	1485561	Identifier	flags_at_offset		1485519	0					
ANR	1485562	ArgumentList	f		1485519	1					
ANR	1485563	Argument	f		1485519	0					
ANR	1485564	Identifier	f		1485519	0					
ANR	1485565	Argument	newoff		1485519	1					
ANR	1485566	Identifier	newoff		1485519	0					
ANR	1485567	IfStatement	if ( ! flagsAtOffset )		1485519	3					
ANR	1485568	Condition	! flagsAtOffset	150:6:3442:3455	1485519	0	True				
ANR	1485569	UnaryOperationExpression	! flagsAtOffset		1485519	0					
ANR	1485570	UnaryOperator	!		1485519	0					
ANR	1485571	Identifier	flagsAtOffset		1485519	1					
ANR	1485572	CompoundStatement		9:22:204:204	1485519	1					
ANR	1485573	ReturnStatement	return false ;	151:3:3463:3475	1485519	0	True				
ANR	1485574	Identifier	false		1485519	0					
ANR	1485575	ExpressionStatement	"r_list_append ( flagsAtOffset -> flags , item )"	154:2:3484:3526	1485519	4	True				
ANR	1485576	CallExpression	"r_list_append ( flagsAtOffset -> flags , item )"		1485519	0					
ANR	1485577	Callee	r_list_append		1485519	0					
ANR	1485578	Identifier	r_list_append		1485519	0					
ANR	1485579	ArgumentList	flagsAtOffset -> flags		1485519	1					
ANR	1485580	Argument	flagsAtOffset -> flags		1485519	0					
ANR	1485581	PtrMemberAccess	flagsAtOffset -> flags		1485519	0					
ANR	1485582	Identifier	flagsAtOffset		1485519	0					
ANR	1485583	Identifier	flags		1485519	1					
ANR	1485584	Argument	item		1485519	1					
ANR	1485585	Identifier	item		1485519	0					
ANR	1485586	ReturnStatement	return true ;	155:2:3530:3541	1485519	5	True				
ANR	1485587	Identifier	true		1485519	0					
ANR	1485588	ReturnStatement	return false ;	158:1:3548:3560	1485519	1	True				
ANR	1485589	Identifier	false		1485519	0					
ANR	1485590	ReturnType	static bool		1485519	1					
ANR	1485591	Identifier	update_flag_item_offset		1485519	2					
ANR	1485592	ParameterList	"RFlag * f , RFlagItem * item , ut64 newoff , bool is_new , bool force"		1485519	3					
ANR	1485593	Parameter	RFlag * f	142:36:3188:3195	1485519	0	True				
ANR	1485594	ParameterType	RFlag *		1485519	0					
ANR	1485595	Identifier	f		1485519	1					
ANR	1485596	Parameter	RFlagItem * item	142:46:3198:3212	1485519	1	True				
ANR	1485597	ParameterType	RFlagItem *		1485519	0					
ANR	1485598	Identifier	item		1485519	1					
ANR	1485599	Parameter	ut64 newoff	142:63:3215:3225	1485519	2	True				
ANR	1485600	ParameterType	ut64		1485519	0					
ANR	1485601	Identifier	newoff		1485519	1					
ANR	1485602	Parameter	bool is_new	142:76:3228:3238	1485519	3	True				
ANR	1485603	ParameterType	bool		1485519	0					
ANR	1485604	Identifier	is_new		1485519	1					
ANR	1485605	Parameter	bool force	142:89:3241:3250	1485519	4	True				
ANR	1485606	ParameterType	bool		1485519	0					
ANR	1485607	Identifier	force		1485519	1					
ANR	1485608	CFGEntryNode	ENTRY		1485519		True				
ANR	1485609	CFGExitNode	EXIT		1485519		True				
ANR	1485610	Symbol	item		1485519						
ANR	1485611	Symbol	is_new		1485519						
ANR	1485612	Symbol	f		1485519						
ANR	1485613	Symbol	false		1485519						
ANR	1485614	Symbol	flags_at_offset		1485519						
ANR	1485615	Symbol	flagsAtOffset -> flags		1485519						
ANR	1485616	Symbol	newoff		1485519						
ANR	1485617	Symbol	* item		1485519						
ANR	1485618	Symbol	true		1485519						
ANR	1485619	Symbol	flagsAtOffset		1485519						
ANR	1485620	Symbol	force		1485519						
ANR	1485621	Symbol	* flagsAtOffset		1485519						
ANR	1485622	Symbol	item -> offset		1485519						
ANR	1485623	Function	update_flag_item_name	161:0:3565:4107							
ANR	1485624	FunctionDef	"update_flag_item_name (RFlag * f , RFlagItem * item , const char * newname , bool force)"		1485623	0					
ANR	1485625	CompoundStatement		161:94:3659:4107	1485623	0					
ANR	1485626	IfStatement	if ( ! f || ! item || ! newname )		1485623	0					
ANR	1485627	Condition	! f || ! item || ! newname	162:5:3666:3688	1485623	0	True				
ANR	1485628	OrExpression	! f || ! item || ! newname		1485623	0		||			
ANR	1485629	UnaryOperationExpression	! f		1485623	0					
ANR	1485630	UnaryOperator	!		1485623	0					
ANR	1485631	Identifier	f		1485623	1					
ANR	1485632	OrExpression	! item || ! newname		1485623	1		||			
ANR	1485633	UnaryOperationExpression	! item		1485623	0					
ANR	1485634	UnaryOperator	!		1485623	0					
ANR	1485635	Identifier	item		1485623	1					
ANR	1485636	UnaryOperationExpression	! newname		1485623	1					
ANR	1485637	UnaryOperator	!		1485623	0					
ANR	1485638	Identifier	newname		1485623	1					
ANR	1485639	CompoundStatement		2:30:31:31	1485623	1					
ANR	1485640	ReturnStatement	return false ;	163:2:3695:3707	1485623	0	True				
ANR	1485641	Identifier	false		1485623	0					
ANR	1485642	IfStatement	"if ( ! force && ( item -> name == newname || ( item -> name && ! strcmp ( item -> name , newname ) ) ) )"		1485623	1					
ANR	1485643	Condition	"! force && ( item -> name == newname || ( item -> name && ! strcmp ( item -> name , newname ) ) )"	165:5:3717:3798	1485623	0	True				
ANR	1485644	AndExpression	"! force && ( item -> name == newname || ( item -> name && ! strcmp ( item -> name , newname ) ) )"		1485623	0		&&			
ANR	1485645	UnaryOperationExpression	! force		1485623	0					
ANR	1485646	UnaryOperator	!		1485623	0					
ANR	1485647	Identifier	force		1485623	1					
ANR	1485648	OrExpression	"item -> name == newname || ( item -> name && ! strcmp ( item -> name , newname ) )"		1485623	1		||			
ANR	1485649	EqualityExpression	item -> name == newname		1485623	0		==			
ANR	1485650	PtrMemberAccess	item -> name		1485623	0					
ANR	1485651	Identifier	item		1485623	0					
ANR	1485652	Identifier	name		1485623	1					
ANR	1485653	Identifier	newname		1485623	1					
ANR	1485654	AndExpression	"item -> name && ! strcmp ( item -> name , newname )"		1485623	1		&&			
ANR	1485655	PtrMemberAccess	item -> name		1485623	0					
ANR	1485656	Identifier	item		1485623	0					
ANR	1485657	Identifier	name		1485623	1					
ANR	1485658	UnaryOperationExpression	"! strcmp ( item -> name , newname )"		1485623	1					
ANR	1485659	UnaryOperator	!		1485623	0					
ANR	1485660	CallExpression	"strcmp ( item -> name , newname )"		1485623	1					
ANR	1485661	Callee	strcmp		1485623	0					
ANR	1485662	Identifier	strcmp		1485623	0					
ANR	1485663	ArgumentList	item -> name		1485623	1					
ANR	1485664	Argument	item -> name		1485623	0					
ANR	1485665	PtrMemberAccess	item -> name		1485623	0					
ANR	1485666	Identifier	item		1485623	0					
ANR	1485667	Identifier	name		1485623	1					
ANR	1485668	Argument	newname		1485623	1					
ANR	1485669	Identifier	newname		1485623	0					
ANR	1485670	CompoundStatement		5:89:141:141	1485623	1					
ANR	1485671	ReturnStatement	return false ;	166:2:3805:3817	1485623	0	True				
ANR	1485672	Identifier	false		1485623	0					
ANR	1485673	IdentifierDeclStatement	char * fname = filter_item_name ( newname ) ;	168:1:3823:3863	1485623	2	True				
ANR	1485674	IdentifierDecl	* fname = filter_item_name ( newname )		1485623	0					
ANR	1485675	IdentifierDeclType	char *		1485623	0					
ANR	1485676	Identifier	fname		1485623	1					
ANR	1485677	AssignmentExpression	* fname = filter_item_name ( newname )		1485623	2		=			
ANR	1485678	Identifier	fname		1485623	0					
ANR	1485679	CallExpression	filter_item_name ( newname )		1485623	1					
ANR	1485680	Callee	filter_item_name		1485623	0					
ANR	1485681	Identifier	filter_item_name		1485623	0					
ANR	1485682	ArgumentList	newname		1485623	1					
ANR	1485683	Argument	newname		1485623	0					
ANR	1485684	Identifier	newname		1485623	0					
ANR	1485685	IfStatement	if ( ! fname )		1485623	3					
ANR	1485686	Condition	! fname	169:5:3870:3875	1485623	0	True				
ANR	1485687	UnaryOperationExpression	! fname		1485623	0					
ANR	1485688	UnaryOperator	!		1485623	0					
ANR	1485689	Identifier	fname		1485623	1					
ANR	1485690	CompoundStatement		9:13:218:218	1485623	1					
ANR	1485691	ReturnStatement	return false ;	170:2:3882:3894	1485623	0	True				
ANR	1485692	Identifier	false		1485623	0					
ANR	1485693	IdentifierDeclStatement	"bool res = ( item -> name ) ? ht_pp_update_key ( f -> ht_name , item -> name , fname ) : ht_pp_insert ( f -> ht_name , fname , item ) ;"	172:1:3900:4019	1485623	4	True				
ANR	1485694	IdentifierDecl	"res = ( item -> name ) ? ht_pp_update_key ( f -> ht_name , item -> name , fname ) : ht_pp_insert ( f -> ht_name , fname , item )"		1485623	0					
ANR	1485695	IdentifierDeclType	bool		1485623	0					
ANR	1485696	Identifier	res		1485623	1					
ANR	1485697	AssignmentExpression	"res = ( item -> name ) ? ht_pp_update_key ( f -> ht_name , item -> name , fname ) : ht_pp_insert ( f -> ht_name , fname , item )"		1485623	2		=			
ANR	1485698	Identifier	res		1485623	0					
ANR	1485699	ConditionalExpression	"( item -> name ) ? ht_pp_update_key ( f -> ht_name , item -> name , fname ) : ht_pp_insert ( f -> ht_name , fname , item )"		1485623	1					
ANR	1485700	Condition	item -> name		1485623	0					
ANR	1485701	PtrMemberAccess	item -> name		1485623	0					
ANR	1485702	Identifier	item		1485623	0					
ANR	1485703	Identifier	name		1485623	1					
ANR	1485704	CallExpression	"ht_pp_update_key ( f -> ht_name , item -> name , fname )"		1485623	1					
ANR	1485705	Callee	ht_pp_update_key		1485623	0					
ANR	1485706	Identifier	ht_pp_update_key		1485623	0					
ANR	1485707	ArgumentList	f -> ht_name		1485623	1					
ANR	1485708	Argument	f -> ht_name		1485623	0					
ANR	1485709	PtrMemberAccess	f -> ht_name		1485623	0					
ANR	1485710	Identifier	f		1485623	0					
ANR	1485711	Identifier	ht_name		1485623	1					
ANR	1485712	Argument	item -> name		1485623	1					
ANR	1485713	PtrMemberAccess	item -> name		1485623	0					
ANR	1485714	Identifier	item		1485623	0					
ANR	1485715	Identifier	name		1485623	1					
ANR	1485716	Argument	fname		1485623	2					
ANR	1485717	Identifier	fname		1485623	0					
ANR	1485718	CallExpression	"ht_pp_insert ( f -> ht_name , fname , item )"		1485623	2					
ANR	1485719	Callee	ht_pp_insert		1485623	0					
ANR	1485720	Identifier	ht_pp_insert		1485623	0					
ANR	1485721	ArgumentList	f -> ht_name		1485623	1					
ANR	1485722	Argument	f -> ht_name		1485623	0					
ANR	1485723	PtrMemberAccess	f -> ht_name		1485623	0					
ANR	1485724	Identifier	f		1485623	0					
ANR	1485725	Identifier	ht_name		1485623	1					
ANR	1485726	Argument	fname		1485623	1					
ANR	1485727	Identifier	fname		1485623	0					
ANR	1485728	Argument	item		1485623	2					
ANR	1485729	Identifier	item		1485623	0					
ANR	1485730	IfStatement	if ( res )		1485623	5					
ANR	1485731	Condition	res	175:5:4026:4028	1485623	0	True				
ANR	1485732	Identifier	res		1485623	0					
ANR	1485733	CompoundStatement		15:10:371:371	1485623	1					
ANR	1485734	ExpressionStatement	"set_name ( item , fname )"	176:2:4035:4057	1485623	0	True				
ANR	1485735	CallExpression	"set_name ( item , fname )"		1485623	0					
ANR	1485736	Callee	set_name		1485623	0					
ANR	1485737	Identifier	set_name		1485623	0					
ANR	1485738	ArgumentList	item		1485623	1					
ANR	1485739	Argument	item		1485623	0					
ANR	1485740	Identifier	item		1485623	0					
ANR	1485741	Argument	fname		1485623	1					
ANR	1485742	Identifier	fname		1485623	0					
ANR	1485743	ReturnStatement	return true ;	177:2:4061:4072	1485623	1	True				
ANR	1485744	Identifier	true		1485623	0					
ANR	1485745	ExpressionStatement	free ( fname )	179:1:4078:4090	1485623	6	True				
ANR	1485746	CallExpression	free ( fname )		1485623	0					
ANR	1485747	Callee	free		1485623	0					
ANR	1485748	Identifier	free		1485623	0					
ANR	1485749	ArgumentList	fname		1485623	1					
ANR	1485750	Argument	fname		1485623	0					
ANR	1485751	Identifier	fname		1485623	0					
ANR	1485752	ReturnStatement	return false ;	180:1:4093:4105	1485623	7	True				
ANR	1485753	Identifier	false		1485623	0					
ANR	1485754	ReturnType	static bool		1485623	1					
ANR	1485755	Identifier	update_flag_item_name		1485623	2					
ANR	1485756	ParameterList	"RFlag * f , RFlagItem * item , const char * newname , bool force"		1485623	3					
ANR	1485757	Parameter	RFlag * f	161:34:3599:3606	1485623	0	True				
ANR	1485758	ParameterType	RFlag *		1485623	0					
ANR	1485759	Identifier	f		1485623	1					
ANR	1485760	Parameter	RFlagItem * item	161:44:3609:3623	1485623	1	True				
ANR	1485761	ParameterType	RFlagItem *		1485623	0					
ANR	1485762	Identifier	item		1485623	1					
ANR	1485763	Parameter	const char * newname	161:61:3626:3644	1485623	2	True				
ANR	1485764	ParameterType	const char *		1485623	0					
ANR	1485765	Identifier	newname		1485623	1					
ANR	1485766	Parameter	bool force	161:82:3647:3656	1485623	3	True				
ANR	1485767	ParameterType	bool		1485623	0					
ANR	1485768	Identifier	force		1485623	1					
ANR	1485769	CFGEntryNode	ENTRY		1485623		True				
ANR	1485770	CFGExitNode	EXIT		1485623		True				
ANR	1485771	Symbol	strcmp		1485623						
ANR	1485772	Symbol	fname		1485623						
ANR	1485773	Symbol	f -> ht_name		1485623						
ANR	1485774	Symbol	res		1485623						
ANR	1485775	Symbol	item		1485623						
ANR	1485776	Symbol	f		1485623						
ANR	1485777	Symbol	ht_pp_insert		1485623						
ANR	1485778	Symbol	false		1485623						
ANR	1485779	Symbol	filter_item_name		1485623						
ANR	1485780	Symbol	newname		1485623						
ANR	1485781	Symbol	* f		1485623						
ANR	1485782	Symbol	ht_pp_update_key		1485623						
ANR	1485783	Symbol	* item		1485623						
ANR	1485784	Symbol	item -> name		1485623						
ANR	1485785	Symbol	true		1485623						
ANR	1485786	Symbol	force		1485623						
ANR	1485787	Function	ht_free_flag	183:0:4110:4197							
ANR	1485788	FunctionDef	ht_free_flag (HtPPKv * kv)		1485787	0					
ANR	1485789	CompoundStatement		183:37:4147:4197	1485787	0					
ANR	1485790	ExpressionStatement	free ( kv -> key )	184:1:4150:4164	1485787	0	True				
ANR	1485791	CallExpression	free ( kv -> key )		1485787	0					
ANR	1485792	Callee	free		1485787	0					
ANR	1485793	Identifier	free		1485787	0					
ANR	1485794	ArgumentList	kv -> key		1485787	1					
ANR	1485795	Argument	kv -> key		1485787	0					
ANR	1485796	PtrMemberAccess	kv -> key		1485787	0					
ANR	1485797	Identifier	kv		1485787	0					
ANR	1485798	Identifier	key		1485787	1					
ANR	1485799	ExpressionStatement	r_flag_item_free ( kv -> value )	185:1:4167:4195	1485787	1	True				
ANR	1485800	CallExpression	r_flag_item_free ( kv -> value )		1485787	0					
ANR	1485801	Callee	r_flag_item_free		1485787	0					
ANR	1485802	Identifier	r_flag_item_free		1485787	0					
ANR	1485803	ArgumentList	kv -> value		1485787	1					
ANR	1485804	Argument	kv -> value		1485787	0					
ANR	1485805	PtrMemberAccess	kv -> value		1485787	0					
ANR	1485806	Identifier	kv		1485787	0					
ANR	1485807	Identifier	value		1485787	1					
ANR	1485808	ReturnType	static void		1485787	1					
ANR	1485809	Identifier	ht_free_flag		1485787	2					
ANR	1485810	ParameterList	HtPPKv * kv		1485787	3					
ANR	1485811	Parameter	HtPPKv * kv	183:25:4135:4144	1485787	0	True				
ANR	1485812	ParameterType	HtPPKv *		1485787	0					
ANR	1485813	Identifier	kv		1485787	1					
ANR	1485814	CFGEntryNode	ENTRY		1485787		True				
ANR	1485815	CFGExitNode	EXIT		1485787		True				
ANR	1485816	Symbol	* kv		1485787						
ANR	1485817	Symbol	kv -> key		1485787						
ANR	1485818	Symbol	kv -> value		1485787						
ANR	1485819	Symbol	kv		1485787						
ANR	1485820	Function	count_flags	188:0:4200:4307							
ANR	1485821	FunctionDef	"count_flags (RFlagItem * fi , void * user)"		1485820	0					
ANR	1485822	CompoundStatement		188:51:4251:4307	1485820	0					
ANR	1485823	IdentifierDeclStatement	int * count = ( int * ) user ;	189:1:4254:4278	1485820	0	True				
ANR	1485824	IdentifierDecl	* count = ( int * ) user		1485820	0					
ANR	1485825	IdentifierDeclType	int *		1485820	0					
ANR	1485826	Identifier	count		1485820	1					
ANR	1485827	AssignmentExpression	* count = ( int * ) user		1485820	2		=			
ANR	1485828	Identifier	count		1485820	0					
ANR	1485829	CastExpression	( int * ) user		1485820	1					
ANR	1485830	CastTarget	int *		1485820	0					
ANR	1485831	Identifier	user		1485820	1					
ANR	1485832	ExpressionStatement	( * count ) ++	190:1:4281:4291	1485820	1	True				
ANR	1485833	PostIncDecOperationExpression	( * count ) ++		1485820	0					
ANR	1485834	UnaryOperationExpression	* count		1485820	0					
ANR	1485835	UnaryOperator	*		1485820	0					
ANR	1485836	Identifier	count		1485820	1					
ANR	1485837	IncDec	++		1485820	1					
ANR	1485838	ReturnStatement	return true ;	191:1:4294:4305	1485820	2	True				
ANR	1485839	Identifier	true		1485820	0					
ANR	1485840	ReturnType	static bool		1485820	1					
ANR	1485841	Identifier	count_flags		1485820	2					
ANR	1485842	ParameterList	"RFlagItem * fi , void * user"		1485820	3					
ANR	1485843	Parameter	RFlagItem * fi	188:24:4224:4236	1485820	0	True				
ANR	1485844	ParameterType	RFlagItem *		1485820	0					
ANR	1485845	Identifier	fi		1485820	1					
ANR	1485846	Parameter	void * user	188:39:4239:4248	1485820	1	True				
ANR	1485847	ParameterType	void *		1485820	0					
ANR	1485848	Identifier	user		1485820	1					
ANR	1485849	CFGEntryNode	ENTRY		1485820		True				
ANR	1485850	CFGExitNode	EXIT		1485820		True				
ANR	1485851	Symbol	* count		1485820						
ANR	1485852	Symbol	fi		1485820						
ANR	1485853	Symbol	count		1485820						
ANR	1485854	Symbol	true		1485820						
ANR	1485855	Symbol	user		1485820						
ANR	1485856	Function	unset_flags_space	194:0:4310:4402							
ANR	1485857	FunctionDef	"unset_flags_space (RFlagItem * fi , void * user)"		1485856	0					
ANR	1485858	CompoundStatement		194:57:4367:4402	1485856	0					
ANR	1485859	ExpressionStatement	fi -> space = NULL	195:1:4370:4386	1485856	0	True				
ANR	1485860	AssignmentExpression	fi -> space = NULL		1485856	0		=			
ANR	1485861	PtrMemberAccess	fi -> space		1485856	0					
ANR	1485862	Identifier	fi		1485856	0					
ANR	1485863	Identifier	space		1485856	1					
ANR	1485864	Identifier	NULL		1485856	1					
ANR	1485865	ReturnStatement	return true ;	196:1:4389:4400	1485856	1	True				
ANR	1485866	Identifier	true		1485856	0					
ANR	1485867	ReturnType	static bool		1485856	1					
ANR	1485868	Identifier	unset_flags_space		1485856	2					
ANR	1485869	ParameterList	"RFlagItem * fi , void * user"		1485856	3					
ANR	1485870	Parameter	RFlagItem * fi	194:30:4340:4352	1485856	0	True				
ANR	1485871	ParameterType	RFlagItem *		1485856	0					
ANR	1485872	Identifier	fi		1485856	1					
ANR	1485873	Parameter	void * user	194:45:4355:4364	1485856	1	True				
ANR	1485874	ParameterType	void *		1485856	0					
ANR	1485875	Identifier	user		1485856	1					
ANR	1485876	CFGEntryNode	ENTRY		1485856		True				
ANR	1485877	CFGExitNode	EXIT		1485856		True				
ANR	1485878	Symbol	fi		1485856						
ANR	1485879	Symbol	fi -> space		1485856						
ANR	1485880	Symbol	NULL		1485856						
ANR	1485881	Symbol	true		1485856						
ANR	1485882	Symbol	* fi		1485856						
ANR	1485883	Symbol	user		1485856						
ANR	1485884	Function	count_flags_in_space	199:0:4405:4683							
ANR	1485885	FunctionDef	"count_flags_in_space (REvent * ev , int type , void * user , void * data)"		1485884	0					
ANR	1485886	CompoundStatement		199:79:4484:4683	1485884	0					
ANR	1485887	IdentifierDeclStatement	RSpaces * sp = ( RSpaces * ) ev -> user ;	200:1:4487:4520	1485884	0	True				
ANR	1485888	IdentifierDecl	* sp = ( RSpaces * ) ev -> user		1485884	0					
ANR	1485889	IdentifierDeclType	RSpaces *		1485884	0					
ANR	1485890	Identifier	sp		1485884	1					
ANR	1485891	AssignmentExpression	* sp = ( RSpaces * ) ev -> user		1485884	2		=			
ANR	1485892	Identifier	sp		1485884	0					
ANR	1485893	CastExpression	( RSpaces * ) ev -> user		1485884	1					
ANR	1485894	CastTarget	RSpaces *		1485884	0					
ANR	1485895	PtrMemberAccess	ev -> user		1485884	1					
ANR	1485896	Identifier	ev		1485884	0					
ANR	1485897	Identifier	user		1485884	1					
ANR	1485898	IdentifierDeclStatement	"RFlag * f = container_of ( sp , RFlag , spaces ) ;"	201:1:4523:4566	1485884	1	True				
ANR	1485899	IdentifierDecl	"* f = container_of ( sp , RFlag , spaces )"		1485884	0					
ANR	1485900	IdentifierDeclType	RFlag *		1485884	0					
ANR	1485901	Identifier	f		1485884	1					
ANR	1485902	AssignmentExpression	"* f = container_of ( sp , RFlag , spaces )"		1485884	2		=			
ANR	1485903	Identifier	f		1485884	0					
ANR	1485904	CallExpression	"container_of ( sp , RFlag , spaces )"		1485884	1					
ANR	1485905	Callee	container_of		1485884	0					
ANR	1485906	Identifier	container_of		1485884	0					
ANR	1485907	ArgumentList	sp		1485884	1					
ANR	1485908	Argument	sp		1485884	0					
ANR	1485909	Identifier	sp		1485884	0					
ANR	1485910	Argument	RFlag		1485884	1					
ANR	1485911	Identifier	RFlag		1485884	0					
ANR	1485912	Argument	spaces		1485884	2					
ANR	1485913	Identifier	spaces		1485884	0					
ANR	1485914	IdentifierDeclStatement	RSpaceEvent * spe = ( RSpaceEvent * ) data ;	202:1:4569:4607	1485884	2	True				
ANR	1485915	IdentifierDecl	* spe = ( RSpaceEvent * ) data		1485884	0					
ANR	1485916	IdentifierDeclType	RSpaceEvent *		1485884	0					
ANR	1485917	Identifier	spe		1485884	1					
ANR	1485918	AssignmentExpression	* spe = ( RSpaceEvent * ) data		1485884	2		=			
ANR	1485919	Identifier	spe		1485884	0					
ANR	1485920	CastExpression	( RSpaceEvent * ) data		1485884	1					
ANR	1485921	CastTarget	RSpaceEvent *		1485884	0					
ANR	1485922	Identifier	data		1485884	1					
ANR	1485923	ExpressionStatement	"r_flag_foreach_space ( f , spe -> data . count . space , count_flags , & spe -> res )"	203:1:4610:4681	1485884	3	True				
ANR	1485924	CallExpression	"r_flag_foreach_space ( f , spe -> data . count . space , count_flags , & spe -> res )"		1485884	0					
ANR	1485925	Callee	r_flag_foreach_space		1485884	0					
ANR	1485926	Identifier	r_flag_foreach_space		1485884	0					
ANR	1485927	ArgumentList	f		1485884	1					
ANR	1485928	Argument	f		1485884	0					
ANR	1485929	Identifier	f		1485884	0					
ANR	1485930	Argument	spe -> data . count . space		1485884	1					
ANR	1485931	MemberAccess	spe -> data . count . space		1485884	0					
ANR	1485932	MemberAccess	spe -> data . count		1485884	0					
ANR	1485933	PtrMemberAccess	spe -> data		1485884	0					
ANR	1485934	Identifier	spe		1485884	0					
ANR	1485935	Identifier	data		1485884	1					
ANR	1485936	Identifier	count		1485884	1					
ANR	1485937	Identifier	space		1485884	1					
ANR	1485938	Argument	count_flags		1485884	2					
ANR	1485939	Identifier	count_flags		1485884	0					
ANR	1485940	Argument	& spe -> res		1485884	3					
ANR	1485941	UnaryOperationExpression	& spe -> res		1485884	0					
ANR	1485942	UnaryOperator	&		1485884	0					
ANR	1485943	PtrMemberAccess	spe -> res		1485884	1					
ANR	1485944	Identifier	spe		1485884	0					
ANR	1485945	Identifier	res		1485884	1					
ANR	1485946	ReturnType	static void		1485884	1					
ANR	1485947	Identifier	count_flags_in_space		1485884	2					
ANR	1485948	ParameterList	"REvent * ev , int type , void * user , void * data"		1485884	3					
ANR	1485949	Parameter	REvent * ev	199:33:4438:4447	1485884	0	True				
ANR	1485950	ParameterType	REvent *		1485884	0					
ANR	1485951	Identifier	ev		1485884	1					
ANR	1485952	Parameter	int type	199:45:4450:4457	1485884	1	True				
ANR	1485953	ParameterType	int		1485884	0					
ANR	1485954	Identifier	type		1485884	1					
ANR	1485955	Parameter	void * user	199:55:4460:4469	1485884	2	True				
ANR	1485956	ParameterType	void *		1485884	0					
ANR	1485957	Identifier	user		1485884	1					
ANR	1485958	Parameter	void * data	199:67:4472:4481	1485884	3	True				
ANR	1485959	ParameterType	void *		1485884	0					
ANR	1485960	Identifier	data		1485884	1					
ANR	1485961	CFGEntryNode	ENTRY		1485884		True				
ANR	1485962	CFGExitNode	EXIT		1485884		True				
ANR	1485963	Symbol	ev -> user		1485884						
ANR	1485964	Symbol	data		1485884						
ANR	1485965	Symbol	f		1485884						
ANR	1485966	Symbol	& spe -> res		1485884						
ANR	1485967	Symbol	count_flags		1485884						
ANR	1485968	Symbol	spe		1485884						
ANR	1485969	Symbol	type		1485884						
ANR	1485970	Symbol	spe -> data . count		1485884						
ANR	1485971	Symbol	ev		1485884						
ANR	1485972	Symbol	container_of		1485884						
ANR	1485973	Symbol	* spe		1485884						
ANR	1485974	Symbol	* ev		1485884						
ANR	1485975	Symbol	spaces		1485884						
ANR	1485976	Symbol	spe -> data		1485884						
ANR	1485977	Symbol	spe -> data . count . space		1485884						
ANR	1485978	Symbol	RFlag		1485884						
ANR	1485979	Symbol	user		1485884						
ANR	1485980	Symbol	sp		1485884						
ANR	1485981	Function	unset_flagspace	206:0:4686:4972							
ANR	1485982	FunctionDef	"unset_flagspace (REvent * ev , int type , void * user , void * data)"		1485981	0					
ANR	1485983	CompoundStatement		206:74:4760:4972	1485981	0					
ANR	1485984	IdentifierDeclStatement	RSpaces * sp = ( RSpaces * ) ev -> user ;	207:1:4763:4796	1485981	0	True				
ANR	1485985	IdentifierDecl	* sp = ( RSpaces * ) ev -> user		1485981	0					
ANR	1485986	IdentifierDeclType	RSpaces *		1485981	0					
ANR	1485987	Identifier	sp		1485981	1					
ANR	1485988	AssignmentExpression	* sp = ( RSpaces * ) ev -> user		1485981	2		=			
ANR	1485989	Identifier	sp		1485981	0					
ANR	1485990	CastExpression	( RSpaces * ) ev -> user		1485981	1					
ANR	1485991	CastTarget	RSpaces *		1485981	0					
ANR	1485992	PtrMemberAccess	ev -> user		1485981	1					
ANR	1485993	Identifier	ev		1485981	0					
ANR	1485994	Identifier	user		1485981	1					
ANR	1485995	IdentifierDeclStatement	"RFlag * f = container_of ( sp , RFlag , spaces ) ;"	208:1:4799:4842	1485981	1	True				
ANR	1485996	IdentifierDecl	"* f = container_of ( sp , RFlag , spaces )"		1485981	0					
ANR	1485997	IdentifierDeclType	RFlag *		1485981	0					
ANR	1485998	Identifier	f		1485981	1					
ANR	1485999	AssignmentExpression	"* f = container_of ( sp , RFlag , spaces )"		1485981	2		=			
ANR	1486000	Identifier	f		1485981	0					
ANR	1486001	CallExpression	"container_of ( sp , RFlag , spaces )"		1485981	1					
ANR	1486002	Callee	container_of		1485981	0					
ANR	1486003	Identifier	container_of		1485981	0					
ANR	1486004	ArgumentList	sp		1485981	1					
ANR	1486005	Argument	sp		1485981	0					
ANR	1486006	Identifier	sp		1485981	0					
ANR	1486007	Argument	RFlag		1485981	1					
ANR	1486008	Identifier	RFlag		1485981	0					
ANR	1486009	Argument	spaces		1485981	2					
ANR	1486010	Identifier	spaces		1485981	0					
ANR	1486011	IdentifierDeclStatement	const RSpaceEvent * spe = ( const RSpaceEvent * ) data ;	209:1:4845:4895	1485981	2	True				
ANR	1486012	IdentifierDecl	* spe = ( const RSpaceEvent * ) data		1485981	0					
ANR	1486013	IdentifierDeclType	const RSpaceEvent *		1485981	0					
ANR	1486014	Identifier	spe		1485981	1					
ANR	1486015	AssignmentExpression	* spe = ( const RSpaceEvent * ) data		1485981	2		=			
ANR	1486016	Identifier	spe		1485981	0					
ANR	1486017	CastExpression	( const RSpaceEvent * ) data		1485981	1					
ANR	1486018	CastTarget	const RSpaceEvent *		1485981	0					
ANR	1486019	Identifier	data		1485981	1					
ANR	1486020	ExpressionStatement	"r_flag_foreach_space ( f , spe -> data . unset . space , unset_flags_space , NULL )"	210:1:4898:4970	1485981	3	True				
ANR	1486021	CallExpression	"r_flag_foreach_space ( f , spe -> data . unset . space , unset_flags_space , NULL )"		1485981	0					
ANR	1486022	Callee	r_flag_foreach_space		1485981	0					
ANR	1486023	Identifier	r_flag_foreach_space		1485981	0					
ANR	1486024	ArgumentList	f		1485981	1					
ANR	1486025	Argument	f		1485981	0					
ANR	1486026	Identifier	f		1485981	0					
ANR	1486027	Argument	spe -> data . unset . space		1485981	1					
ANR	1486028	MemberAccess	spe -> data . unset . space		1485981	0					
ANR	1486029	MemberAccess	spe -> data . unset		1485981	0					
ANR	1486030	PtrMemberAccess	spe -> data		1485981	0					
ANR	1486031	Identifier	spe		1485981	0					
ANR	1486032	Identifier	data		1485981	1					
ANR	1486033	Identifier	unset		1485981	1					
ANR	1486034	Identifier	space		1485981	1					
ANR	1486035	Argument	unset_flags_space		1485981	2					
ANR	1486036	Identifier	unset_flags_space		1485981	0					
ANR	1486037	Argument	NULL		1485981	3					
ANR	1486038	Identifier	NULL		1485981	0					
ANR	1486039	ReturnType	static void		1485981	1					
ANR	1486040	Identifier	unset_flagspace		1485981	2					
ANR	1486041	ParameterList	"REvent * ev , int type , void * user , void * data"		1485981	3					
ANR	1486042	Parameter	REvent * ev	206:28:4714:4723	1485981	0	True				
ANR	1486043	ParameterType	REvent *		1485981	0					
ANR	1486044	Identifier	ev		1485981	1					
ANR	1486045	Parameter	int type	206:40:4726:4733	1485981	1	True				
ANR	1486046	ParameterType	int		1485981	0					
ANR	1486047	Identifier	type		1485981	1					
ANR	1486048	Parameter	void * user	206:50:4736:4745	1485981	2	True				
ANR	1486049	ParameterType	void *		1485981	0					
ANR	1486050	Identifier	user		1485981	1					
ANR	1486051	Parameter	void * data	206:62:4748:4757	1485981	3	True				
ANR	1486052	ParameterType	void *		1485981	0					
ANR	1486053	Identifier	data		1485981	1					
ANR	1486054	CFGEntryNode	ENTRY		1485981		True				
ANR	1486055	CFGExitNode	EXIT		1485981		True				
ANR	1486056	Symbol	ev -> user		1485981						
ANR	1486057	Symbol	NULL		1485981						
ANR	1486058	Symbol	data		1485981						
ANR	1486059	Symbol	f		1485981						
ANR	1486060	Symbol	spe		1485981						
ANR	1486061	Symbol	type		1485981						
ANR	1486062	Symbol	ev		1485981						
ANR	1486063	Symbol	container_of		1485981						
ANR	1486064	Symbol	* spe		1485981						
ANR	1486065	Symbol	spe -> data . unset		1485981						
ANR	1486066	Symbol	* ev		1485981						
ANR	1486067	Symbol	spaces		1485981						
ANR	1486068	Symbol	spe -> data		1485981						
ANR	1486069	Symbol	unset_flags_space		1485981						
ANR	1486070	Symbol	RFlag		1485981						
ANR	1486071	Symbol	spe -> data . unset . space		1485981						
ANR	1486072	Symbol	user		1485981						
ANR	1486073	Symbol	sp		1485981						
ANR	1486074	Function	new_spaces	213:0:4975:5204							
ANR	1486075	FunctionDef	new_spaces (RFlag * f)		1486074	0					
ANR	1486076	CompoundStatement		213:33:5008:5204	1486074	0					
ANR	1486077	ExpressionStatement	"r_spaces_init ( & f -> spaces , ""fs"" )"	214:1:5011:5043	1486074	0	True				
ANR	1486078	CallExpression	"r_spaces_init ( & f -> spaces , ""fs"" )"		1486074	0					
ANR	1486079	Callee	r_spaces_init		1486074	0					
ANR	1486080	Identifier	r_spaces_init		1486074	0					
ANR	1486081	ArgumentList	& f -> spaces		1486074	1					
ANR	1486082	Argument	& f -> spaces		1486074	0					
ANR	1486083	UnaryOperationExpression	& f -> spaces		1486074	0					
ANR	1486084	UnaryOperator	&		1486074	0					
ANR	1486085	PtrMemberAccess	f -> spaces		1486074	1					
ANR	1486086	Identifier	f		1486074	0					
ANR	1486087	Identifier	spaces		1486074	1					
ANR	1486088	Argument	"""fs"""		1486074	1					
ANR	1486089	PrimaryExpression	"""fs"""		1486074	0					
ANR	1486090	ExpressionStatement	"r_event_hook ( f -> spaces . event , R_SPACE_EVENT_COUNT , count_flags_in_space , NULL )"	215:1:5046:5125	1486074	1	True				
ANR	1486091	CallExpression	"r_event_hook ( f -> spaces . event , R_SPACE_EVENT_COUNT , count_flags_in_space , NULL )"		1486074	0					
ANR	1486092	Callee	r_event_hook		1486074	0					
ANR	1486093	Identifier	r_event_hook		1486074	0					
ANR	1486094	ArgumentList	f -> spaces . event		1486074	1					
ANR	1486095	Argument	f -> spaces . event		1486074	0					
ANR	1486096	MemberAccess	f -> spaces . event		1486074	0					
ANR	1486097	PtrMemberAccess	f -> spaces		1486074	0					
ANR	1486098	Identifier	f		1486074	0					
ANR	1486099	Identifier	spaces		1486074	1					
ANR	1486100	Identifier	event		1486074	1					
ANR	1486101	Argument	R_SPACE_EVENT_COUNT		1486074	1					
ANR	1486102	Identifier	R_SPACE_EVENT_COUNT		1486074	0					
ANR	1486103	Argument	count_flags_in_space		1486074	2					
ANR	1486104	Identifier	count_flags_in_space		1486074	0					
ANR	1486105	Argument	NULL		1486074	3					
ANR	1486106	Identifier	NULL		1486074	0					
ANR	1486107	ExpressionStatement	"r_event_hook ( f -> spaces . event , R_SPACE_EVENT_UNSET , unset_flagspace , NULL )"	216:1:5128:5202	1486074	2	True				
ANR	1486108	CallExpression	"r_event_hook ( f -> spaces . event , R_SPACE_EVENT_UNSET , unset_flagspace , NULL )"		1486074	0					
ANR	1486109	Callee	r_event_hook		1486074	0					
ANR	1486110	Identifier	r_event_hook		1486074	0					
ANR	1486111	ArgumentList	f -> spaces . event		1486074	1					
ANR	1486112	Argument	f -> spaces . event		1486074	0					
ANR	1486113	MemberAccess	f -> spaces . event		1486074	0					
ANR	1486114	PtrMemberAccess	f -> spaces		1486074	0					
ANR	1486115	Identifier	f		1486074	0					
ANR	1486116	Identifier	spaces		1486074	1					
ANR	1486117	Identifier	event		1486074	1					
ANR	1486118	Argument	R_SPACE_EVENT_UNSET		1486074	1					
ANR	1486119	Identifier	R_SPACE_EVENT_UNSET		1486074	0					
ANR	1486120	Argument	unset_flagspace		1486074	2					
ANR	1486121	Identifier	unset_flagspace		1486074	0					
ANR	1486122	Argument	NULL		1486074	3					
ANR	1486123	Identifier	NULL		1486074	0					
ANR	1486124	ReturnType	static void		1486074	1					
ANR	1486125	Identifier	new_spaces		1486074	2					
ANR	1486126	ParameterList	RFlag * f		1486074	3					
ANR	1486127	Parameter	RFlag * f	213:23:4998:5005	1486074	0	True				
ANR	1486128	ParameterType	RFlag *		1486074	0					
ANR	1486129	Identifier	f		1486074	1					
ANR	1486130	CFGEntryNode	ENTRY		1486074		True				
ANR	1486131	CFGExitNode	EXIT		1486074		True				
ANR	1486132	Symbol	* f		1486074						
ANR	1486133	Symbol	unset_flagspace		1486074						
ANR	1486134	Symbol	NULL		1486074						
ANR	1486135	Symbol	f -> spaces . event		1486074						
ANR	1486136	Symbol	f		1486074						
ANR	1486137	Symbol	f -> spaces		1486074						
ANR	1486138	Symbol	& f -> spaces		1486074						
ANR	1486139	Symbol	count_flags_in_space		1486074						
ANR	1486140	Symbol	R_SPACE_EVENT_UNSET		1486074						
ANR	1486141	Symbol	R_SPACE_EVENT_COUNT		1486074						
ANR	1486142	Function	r_flag_new	219:0:5207:5790							
ANR	1486143	FunctionDef	r_flag_new ()		1486142	0					
ANR	1486144	CompoundStatement		219:26:5233:5790	1486142	0					
ANR	1486145	IdentifierDeclStatement	RFlag * f = R_NEW0 ( RFlag ) ;	220:1:5236:5261	1486142	0	True				
ANR	1486146	IdentifierDecl	* f = R_NEW0 ( RFlag )		1486142	0					
ANR	1486147	IdentifierDeclType	RFlag *		1486142	0					
ANR	1486148	Identifier	f		1486142	1					
ANR	1486149	AssignmentExpression	* f = R_NEW0 ( RFlag )		1486142	2		=			
ANR	1486150	Identifier	f		1486142	0					
ANR	1486151	CallExpression	R_NEW0 ( RFlag )		1486142	1					
ANR	1486152	Callee	R_NEW0		1486142	0					
ANR	1486153	Identifier	R_NEW0		1486142	0					
ANR	1486154	ArgumentList	RFlag		1486142	1					
ANR	1486155	Argument	RFlag		1486142	0					
ANR	1486156	Identifier	RFlag		1486142	0					
ANR	1486157	IfStatement	if ( ! f )		1486142	1					
ANR	1486158	Condition	! f	221:5:5268:5269	1486142	0	True				
ANR	1486159	UnaryOperationExpression	! f		1486142	0					
ANR	1486160	UnaryOperator	!		1486142	0					
ANR	1486161	Identifier	f		1486142	1					
ANR	1486162	CompoundStatement		3:9:38:38	1486142	1					
ANR	1486163	ReturnStatement	return NULL ;	222:2:5276:5287	1486142	0	True				
ANR	1486164	Identifier	NULL		1486142	0					
ANR	1486165	ExpressionStatement	"f -> num = r_num_new ( & num_callback , & str_callback , f )"	224:1:5293:5345	1486142	2	True				
ANR	1486166	AssignmentExpression	"f -> num = r_num_new ( & num_callback , & str_callback , f )"		1486142	0		=			
ANR	1486167	PtrMemberAccess	f -> num		1486142	0					
ANR	1486168	Identifier	f		1486142	0					
ANR	1486169	Identifier	num		1486142	1					
ANR	1486170	CallExpression	"r_num_new ( & num_callback , & str_callback , f )"		1486142	1					
ANR	1486171	Callee	r_num_new		1486142	0					
ANR	1486172	Identifier	r_num_new		1486142	0					
ANR	1486173	ArgumentList	& num_callback		1486142	1					
ANR	1486174	Argument	& num_callback		1486142	0					
ANR	1486175	UnaryOperationExpression	& num_callback		1486142	0					
ANR	1486176	UnaryOperator	&		1486142	0					
ANR	1486177	Identifier	num_callback		1486142	1					
ANR	1486178	Argument	& str_callback		1486142	1					
ANR	1486179	UnaryOperationExpression	& str_callback		1486142	0					
ANR	1486180	UnaryOperator	&		1486142	0					
ANR	1486181	Identifier	str_callback		1486142	1					
ANR	1486182	Argument	f		1486142	2					
ANR	1486183	Identifier	f		1486142	0					
ANR	1486184	IfStatement	if ( ! f -> num )		1486142	3					
ANR	1486185	Condition	! f -> num	225:5:5352:5358	1486142	0	True				
ANR	1486186	UnaryOperationExpression	! f -> num		1486142	0					
ANR	1486187	UnaryOperator	!		1486142	0					
ANR	1486188	PtrMemberAccess	f -> num		1486142	1					
ANR	1486189	Identifier	f		1486142	0					
ANR	1486190	Identifier	num		1486142	1					
ANR	1486191	CompoundStatement		7:14:127:127	1486142	1					
ANR	1486192	ExpressionStatement	r_flag_free ( f )	226:2:5365:5380	1486142	0	True				
ANR	1486193	CallExpression	r_flag_free ( f )		1486142	0					
ANR	1486194	Callee	r_flag_free		1486142	0					
ANR	1486195	Identifier	r_flag_free		1486142	0					
ANR	1486196	ArgumentList	f		1486142	1					
ANR	1486197	Argument	f		1486142	0					
ANR	1486198	Identifier	f		1486142	0					
ANR	1486199	ReturnStatement	return NULL ;	227:2:5384:5395	1486142	1	True				
ANR	1486200	Identifier	NULL		1486142	0					
ANR	1486201	ExpressionStatement	f -> base = 0	229:1:5401:5412	1486142	4	True				
ANR	1486202	AssignmentExpression	f -> base = 0		1486142	0		=			
ANR	1486203	PtrMemberAccess	f -> base		1486142	0					
ANR	1486204	Identifier	f		1486142	0					
ANR	1486205	Identifier	base		1486142	1					
ANR	1486206	PrimaryExpression	0		1486142	1					
ANR	1486207	ExpressionStatement	f -> cb_printf = ( PrintfCallback ) printf	230:1:5415:5452	1486142	5	True				
ANR	1486208	AssignmentExpression	f -> cb_printf = ( PrintfCallback ) printf		1486142	0		=			
ANR	1486209	PtrMemberAccess	f -> cb_printf		1486142	0					
ANR	1486210	Identifier	f		1486142	0					
ANR	1486211	Identifier	cb_printf		1486142	1					
ANR	1486212	CastExpression	( PrintfCallback ) printf		1486142	1					
ANR	1486213	CastTarget	PrintfCallback		1486142	0					
ANR	1486214	Identifier	printf		1486142	1					
ANR	1486215	ExpressionStatement	f -> zones = sdb_new0 ( )	232:1:5479:5501	1486142	6	True				
ANR	1486216	AssignmentExpression	f -> zones = sdb_new0 ( )		1486142	0		=			
ANR	1486217	PtrMemberAccess	f -> zones		1486142	0					
ANR	1486218	Identifier	f		1486142	0					
ANR	1486219	Identifier	zones		1486142	1					
ANR	1486220	CallExpression	sdb_new0 ( )		1486142	1					
ANR	1486221	Callee	sdb_new0		1486142	0					
ANR	1486222	Identifier	sdb_new0		1486142	0					
ANR	1486223	ArgumentList			1486142	1					
ANR	1486224	ExpressionStatement	f -> tags = sdb_new0 ( )	236:1:5535:5556	1486142	7	True				
ANR	1486225	AssignmentExpression	f -> tags = sdb_new0 ( )		1486142	0		=			
ANR	1486226	PtrMemberAccess	f -> tags		1486142	0					
ANR	1486227	Identifier	f		1486142	0					
ANR	1486228	Identifier	tags		1486142	1					
ANR	1486229	CallExpression	sdb_new0 ( )		1486142	1					
ANR	1486230	Callee	sdb_new0		1486142	0					
ANR	1486231	Identifier	sdb_new0		1486142	0					
ANR	1486232	ArgumentList			1486142	1					
ANR	1486233	ExpressionStatement	"f -> ht_name = ht_pp_new ( NULL , ht_free_flag , NULL )"	237:1:5559:5608	1486142	8	True				
ANR	1486234	AssignmentExpression	"f -> ht_name = ht_pp_new ( NULL , ht_free_flag , NULL )"		1486142	0		=			
ANR	1486235	PtrMemberAccess	f -> ht_name		1486142	0					
ANR	1486236	Identifier	f		1486142	0					
ANR	1486237	Identifier	ht_name		1486142	1					
ANR	1486238	CallExpression	"ht_pp_new ( NULL , ht_free_flag , NULL )"		1486142	1					
ANR	1486239	Callee	ht_pp_new		1486142	0					
ANR	1486240	Identifier	ht_pp_new		1486142	0					
ANR	1486241	ArgumentList	NULL		1486142	1					
ANR	1486242	Argument	NULL		1486142	0					
ANR	1486243	Identifier	NULL		1486142	0					
ANR	1486244	Argument	ht_free_flag		1486142	1					
ANR	1486245	Identifier	ht_free_flag		1486142	0					
ANR	1486246	Argument	NULL		1486142	2					
ANR	1486247	Identifier	NULL		1486142	0					
ANR	1486248	ExpressionStatement	"f -> by_off = r_skiplist_new ( flag_skiplist_free , flag_skiplist_cmp )"	238:1:5611:5677	1486142	9	True				
ANR	1486249	AssignmentExpression	"f -> by_off = r_skiplist_new ( flag_skiplist_free , flag_skiplist_cmp )"		1486142	0		=			
ANR	1486250	PtrMemberAccess	f -> by_off		1486142	0					
ANR	1486251	Identifier	f		1486142	0					
ANR	1486252	Identifier	by_off		1486142	1					
ANR	1486253	CallExpression	"r_skiplist_new ( flag_skiplist_free , flag_skiplist_cmp )"		1486142	1					
ANR	1486254	Callee	r_skiplist_new		1486142	0					
ANR	1486255	Identifier	r_skiplist_new		1486142	0					
ANR	1486256	ArgumentList	flag_skiplist_free		1486142	1					
ANR	1486257	Argument	flag_skiplist_free		1486142	0					
ANR	1486258	Identifier	flag_skiplist_free		1486142	0					
ANR	1486259	Argument	flag_skiplist_cmp		1486142	1					
ANR	1486260	Identifier	flag_skiplist_cmp		1486142	0					
ANR	1486261	ExpressionStatement	sdb_free ( f -> zones )	240:1:5704:5723	1486142	10	True				
ANR	1486262	CallExpression	sdb_free ( f -> zones )		1486142	0					
ANR	1486263	Callee	sdb_free		1486142	0					
ANR	1486264	Identifier	sdb_free		1486142	0					
ANR	1486265	ArgumentList	f -> zones		1486142	1					
ANR	1486266	Argument	f -> zones		1486142	0					
ANR	1486267	PtrMemberAccess	f -> zones		1486142	0					
ANR	1486268	Identifier	f		1486142	0					
ANR	1486269	Identifier	zones		1486142	1					
ANR	1486270	ExpressionStatement	new_spaces ( f )	244:1:5764:5777	1486142	11	True				
ANR	1486271	CallExpression	new_spaces ( f )		1486142	0					
ANR	1486272	Callee	new_spaces		1486142	0					
ANR	1486273	Identifier	new_spaces		1486142	0					
ANR	1486274	ArgumentList	f		1486142	1					
ANR	1486275	Argument	f		1486142	0					
ANR	1486276	Identifier	f		1486142	0					
ANR	1486277	ReturnStatement	return f ;	245:1:5780:5788	1486142	12	True				
ANR	1486278	Identifier	f		1486142	0					
ANR	1486279	ReturnType	R_API RFlag *		1486142	1					
ANR	1486280	Identifier	r_flag_new		1486142	2					
ANR	1486281	ParameterList			1486142	3					
ANR	1486282	CFGEntryNode	ENTRY		1486142		True				
ANR	1486283	CFGExitNode	EXIT		1486142		True				
ANR	1486284	Symbol	sdb_new0		1486142						
ANR	1486285	Symbol	f -> ht_name		1486142						
ANR	1486286	Symbol	NULL		1486142						
ANR	1486287	Symbol	f		1486142						
ANR	1486288	Symbol	flag_skiplist_free		1486142						
ANR	1486289	Symbol	f -> tags		1486142						
ANR	1486290	Symbol	f -> by_off		1486142						
ANR	1486291	Symbol	printf		1486142						
ANR	1486292	Symbol	ht_pp_new		1486142						
ANR	1486293	Symbol	r_num_new		1486142						
ANR	1486294	Symbol	* f		1486142						
ANR	1486295	Symbol	R_NEW0		1486142						
ANR	1486296	Symbol	f -> num		1486142						
ANR	1486297	Symbol	flag_skiplist_cmp		1486142						
ANR	1486298	Symbol	& num_callback		1486142						
ANR	1486299	Symbol	f -> base		1486142						
ANR	1486300	Symbol	RFlag		1486142						
ANR	1486301	Symbol	r_skiplist_new		1486142						
ANR	1486302	Symbol	f -> zones		1486142						
ANR	1486303	Symbol	ht_free_flag		1486142						
ANR	1486304	Symbol	& str_callback		1486142						
ANR	1486305	Symbol	f -> cb_printf		1486142						
ANR	1486306	Function	r_flag_item_clone	248:0:5793:6253							
ANR	1486307	FunctionDef	r_flag_item_clone (RFlagItem * item)		1486306	0					
ANR	1486308	CompoundStatement		248:52:5845:6253	1486306	0					
ANR	1486309	ExpressionStatement	"r_return_val_if_fail ( item , NULL )"	249:1:5848:5881	1486306	0	True				
ANR	1486310	CallExpression	"r_return_val_if_fail ( item , NULL )"		1486306	0					
ANR	1486311	Callee	r_return_val_if_fail		1486306	0					
ANR	1486312	Identifier	r_return_val_if_fail		1486306	0					
ANR	1486313	ArgumentList	item		1486306	1					
ANR	1486314	Argument	item		1486306	0					
ANR	1486315	Identifier	item		1486306	0					
ANR	1486316	Argument	NULL		1486306	1					
ANR	1486317	Identifier	NULL		1486306	0					
ANR	1486318	IdentifierDeclStatement	RFlagItem * n = R_NEW0 ( RFlagItem ) ;	251:1:5885:5918	1486306	1	True				
ANR	1486319	IdentifierDecl	* n = R_NEW0 ( RFlagItem )		1486306	0					
ANR	1486320	IdentifierDeclType	RFlagItem *		1486306	0					
ANR	1486321	Identifier	n		1486306	1					
ANR	1486322	AssignmentExpression	* n = R_NEW0 ( RFlagItem )		1486306	2		=			
ANR	1486323	Identifier	n		1486306	0					
ANR	1486324	CallExpression	R_NEW0 ( RFlagItem )		1486306	1					
ANR	1486325	Callee	R_NEW0		1486306	0					
ANR	1486326	Identifier	R_NEW0		1486306	0					
ANR	1486327	ArgumentList	RFlagItem		1486306	1					
ANR	1486328	Argument	RFlagItem		1486306	0					
ANR	1486329	Identifier	RFlagItem		1486306	0					
ANR	1486330	IfStatement	if ( ! n )		1486306	2					
ANR	1486331	Condition	! n	252:5:5925:5926	1486306	0	True				
ANR	1486332	UnaryOperationExpression	! n		1486306	0					
ANR	1486333	UnaryOperator	!		1486306	0					
ANR	1486334	Identifier	n		1486306	1					
ANR	1486335	CompoundStatement		5:9:83:83	1486306	1					
ANR	1486336	ReturnStatement	return NULL ;	253:2:5933:5944	1486306	0	True				
ANR	1486337	Identifier	NULL		1486306	0					
ANR	1486338	ExpressionStatement	n -> color = STRDUP_OR_NULL ( item -> color )	255:1:5950:5989	1486306	3	True				
ANR	1486339	AssignmentExpression	n -> color = STRDUP_OR_NULL ( item -> color )		1486306	0		=			
ANR	1486340	PtrMemberAccess	n -> color		1486306	0					
ANR	1486341	Identifier	n		1486306	0					
ANR	1486342	Identifier	color		1486306	1					
ANR	1486343	CallExpression	STRDUP_OR_NULL ( item -> color )		1486306	1					
ANR	1486344	Callee	STRDUP_OR_NULL		1486306	0					
ANR	1486345	Identifier	STRDUP_OR_NULL		1486306	0					
ANR	1486346	ArgumentList	item -> color		1486306	1					
ANR	1486347	Argument	item -> color		1486306	0					
ANR	1486348	PtrMemberAccess	item -> color		1486306	0					
ANR	1486349	Identifier	item		1486306	0					
ANR	1486350	Identifier	color		1486306	1					
ANR	1486351	ExpressionStatement	n -> comment = STRDUP_OR_NULL ( item -> comment )	256:1:5992:6035	1486306	4	True				
ANR	1486352	AssignmentExpression	n -> comment = STRDUP_OR_NULL ( item -> comment )		1486306	0		=			
ANR	1486353	PtrMemberAccess	n -> comment		1486306	0					
ANR	1486354	Identifier	n		1486306	0					
ANR	1486355	Identifier	comment		1486306	1					
ANR	1486356	CallExpression	STRDUP_OR_NULL ( item -> comment )		1486306	1					
ANR	1486357	Callee	STRDUP_OR_NULL		1486306	0					
ANR	1486358	Identifier	STRDUP_OR_NULL		1486306	0					
ANR	1486359	ArgumentList	item -> comment		1486306	1					
ANR	1486360	Argument	item -> comment		1486306	0					
ANR	1486361	PtrMemberAccess	item -> comment		1486306	0					
ANR	1486362	Identifier	item		1486306	0					
ANR	1486363	Identifier	comment		1486306	1					
ANR	1486364	ExpressionStatement	n -> alias = STRDUP_OR_NULL ( item -> alias )	257:1:6038:6077	1486306	5	True				
ANR	1486365	AssignmentExpression	n -> alias = STRDUP_OR_NULL ( item -> alias )		1486306	0		=			
ANR	1486366	PtrMemberAccess	n -> alias		1486306	0					
ANR	1486367	Identifier	n		1486306	0					
ANR	1486368	Identifier	alias		1486306	1					
ANR	1486369	CallExpression	STRDUP_OR_NULL ( item -> alias )		1486306	1					
ANR	1486370	Callee	STRDUP_OR_NULL		1486306	0					
ANR	1486371	Identifier	STRDUP_OR_NULL		1486306	0					
ANR	1486372	ArgumentList	item -> alias		1486306	1					
ANR	1486373	Argument	item -> alias		1486306	0					
ANR	1486374	PtrMemberAccess	item -> alias		1486306	0					
ANR	1486375	Identifier	item		1486306	0					
ANR	1486376	Identifier	alias		1486306	1					
ANR	1486377	ExpressionStatement	n -> name = STRDUP_OR_NULL ( item -> name )	258:1:6080:6117	1486306	6	True				
ANR	1486378	AssignmentExpression	n -> name = STRDUP_OR_NULL ( item -> name )		1486306	0		=			
ANR	1486379	PtrMemberAccess	n -> name		1486306	0					
ANR	1486380	Identifier	n		1486306	0					
ANR	1486381	Identifier	name		1486306	1					
ANR	1486382	CallExpression	STRDUP_OR_NULL ( item -> name )		1486306	1					
ANR	1486383	Callee	STRDUP_OR_NULL		1486306	0					
ANR	1486384	Identifier	STRDUP_OR_NULL		1486306	0					
ANR	1486385	ArgumentList	item -> name		1486306	1					
ANR	1486386	Argument	item -> name		1486306	0					
ANR	1486387	PtrMemberAccess	item -> name		1486306	0					
ANR	1486388	Identifier	item		1486306	0					
ANR	1486389	Identifier	name		1486306	1					
ANR	1486390	ExpressionStatement	n -> realname = STRDUP_OR_NULL ( item -> realname )	259:1:6120:6165	1486306	7	True				
ANR	1486391	AssignmentExpression	n -> realname = STRDUP_OR_NULL ( item -> realname )		1486306	0		=			
ANR	1486392	PtrMemberAccess	n -> realname		1486306	0					
ANR	1486393	Identifier	n		1486306	0					
ANR	1486394	Identifier	realname		1486306	1					
ANR	1486395	CallExpression	STRDUP_OR_NULL ( item -> realname )		1486306	1					
ANR	1486396	Callee	STRDUP_OR_NULL		1486306	0					
ANR	1486397	Identifier	STRDUP_OR_NULL		1486306	0					
ANR	1486398	ArgumentList	item -> realname		1486306	1					
ANR	1486399	Argument	item -> realname		1486306	0					
ANR	1486400	PtrMemberAccess	item -> realname		1486306	0					
ANR	1486401	Identifier	item		1486306	0					
ANR	1486402	Identifier	realname		1486306	1					
ANR	1486403	ExpressionStatement	n -> offset = item -> offset	260:1:6168:6192	1486306	8	True				
ANR	1486404	AssignmentExpression	n -> offset = item -> offset		1486306	0		=			
ANR	1486405	PtrMemberAccess	n -> offset		1486306	0					
ANR	1486406	Identifier	n		1486306	0					
ANR	1486407	Identifier	offset		1486306	1					
ANR	1486408	PtrMemberAccess	item -> offset		1486306	1					
ANR	1486409	Identifier	item		1486306	0					
ANR	1486410	Identifier	offset		1486306	1					
ANR	1486411	ExpressionStatement	n -> size = item -> size	261:1:6195:6215	1486306	9	True				
ANR	1486412	AssignmentExpression	n -> size = item -> size		1486306	0		=			
ANR	1486413	PtrMemberAccess	n -> size		1486306	0					
ANR	1486414	Identifier	n		1486306	0					
ANR	1486415	Identifier	size		1486306	1					
ANR	1486416	PtrMemberAccess	item -> size		1486306	1					
ANR	1486417	Identifier	item		1486306	0					
ANR	1486418	Identifier	size		1486306	1					
ANR	1486419	ExpressionStatement	n -> space = item -> space	262:1:6218:6240	1486306	10	True				
ANR	1486420	AssignmentExpression	n -> space = item -> space		1486306	0		=			
ANR	1486421	PtrMemberAccess	n -> space		1486306	0					
ANR	1486422	Identifier	n		1486306	0					
ANR	1486423	Identifier	space		1486306	1					
ANR	1486424	PtrMemberAccess	item -> space		1486306	1					
ANR	1486425	Identifier	item		1486306	0					
ANR	1486426	Identifier	space		1486306	1					
ANR	1486427	ReturnStatement	return n ;	263:1:6243:6251	1486306	11	True				
ANR	1486428	Identifier	n		1486306	0					
ANR	1486429	ReturnType	R_API RFlagItem *		1486306	1					
ANR	1486430	Identifier	r_flag_item_clone		1486306	2					
ANR	1486431	ParameterList	RFlagItem * item		1486306	3					
ANR	1486432	Parameter	RFlagItem * item	248:35:5828:5842	1486306	0	True				
ANR	1486433	ParameterType	RFlagItem *		1486306	0					
ANR	1486434	Identifier	item		1486306	1					
ANR	1486435	CFGEntryNode	ENTRY		1486306		True				
ANR	1486436	CFGExitNode	EXIT		1486306		True				
ANR	1486437	Symbol	n -> name		1486306						
ANR	1486438	Symbol	item -> space		1486306						
ANR	1486439	Symbol	item		1486306						
ANR	1486440	Symbol	RFlagItem		1486306						
ANR	1486441	Symbol	item -> color		1486306						
ANR	1486442	Symbol	NULL		1486306						
ANR	1486443	Symbol	STRDUP_OR_NULL		1486306						
ANR	1486444	Symbol	item -> alias		1486306						
ANR	1486445	Symbol	n -> alias		1486306						
ANR	1486446	Symbol	item -> comment		1486306						
ANR	1486447	Symbol	n		1486306						
ANR	1486448	Symbol	n -> comment		1486306						
ANR	1486449	Symbol	R_NEW0		1486306						
ANR	1486450	Symbol	n -> offset		1486306						
ANR	1486451	Symbol	n -> color		1486306						
ANR	1486452	Symbol	n -> realname		1486306						
ANR	1486453	Symbol	n -> size		1486306						
ANR	1486454	Symbol	* item		1486306						
ANR	1486455	Symbol	item -> name		1486306						
ANR	1486456	Symbol	* n		1486306						
ANR	1486457	Symbol	item -> realname		1486306						
ANR	1486458	Symbol	item -> size		1486306						
ANR	1486459	Symbol	n -> space		1486306						
ANR	1486460	Symbol	item -> offset		1486306						
ANR	1486461	Function	r_flag_item_free	266:0:6256:6522							
ANR	1486462	FunctionDef	r_flag_item_free (RFlagItem * item)		1486461	0					
ANR	1486463	CompoundStatement		266:45:6301:6522	1486461	0					
ANR	1486464	IfStatement	if ( ! item )		1486461	0					
ANR	1486465	Condition	! item	267:5:6308:6312	1486461	0	True				
ANR	1486466	UnaryOperationExpression	! item		1486461	0					
ANR	1486467	UnaryOperator	!		1486461	0					
ANR	1486468	Identifier	item		1486461	1					
ANR	1486469	CompoundStatement		2:12:13:13	1486461	1					
ANR	1486470	ReturnStatement	return ;	268:2:6319:6325	1486461	0	True				
ANR	1486471	ExpressionStatement	free ( item -> color )	270:1:6331:6349	1486461	1	True				
ANR	1486472	CallExpression	free ( item -> color )		1486461	0					
ANR	1486473	Callee	free		1486461	0					
ANR	1486474	Identifier	free		1486461	0					
ANR	1486475	ArgumentList	item -> color		1486461	1					
ANR	1486476	Argument	item -> color		1486461	0					
ANR	1486477	PtrMemberAccess	item -> color		1486461	0					
ANR	1486478	Identifier	item		1486461	0					
ANR	1486479	Identifier	color		1486461	1					
ANR	1486480	ExpressionStatement	free ( item -> comment )	271:1:6352:6372	1486461	2	True				
ANR	1486481	CallExpression	free ( item -> comment )		1486461	0					
ANR	1486482	Callee	free		1486461	0					
ANR	1486483	Identifier	free		1486461	0					
ANR	1486484	ArgumentList	item -> comment		1486461	1					
ANR	1486485	Argument	item -> comment		1486461	0					
ANR	1486486	PtrMemberAccess	item -> comment		1486461	0					
ANR	1486487	Identifier	item		1486461	0					
ANR	1486488	Identifier	comment		1486461	1					
ANR	1486489	ExpressionStatement	free ( item -> alias )	272:1:6375:6393	1486461	3	True				
ANR	1486490	CallExpression	free ( item -> alias )		1486461	0					
ANR	1486491	Callee	free		1486461	0					
ANR	1486492	Identifier	free		1486461	0					
ANR	1486493	ArgumentList	item -> alias		1486461	1					
ANR	1486494	Argument	item -> alias		1486461	0					
ANR	1486495	PtrMemberAccess	item -> alias		1486461	0					
ANR	1486496	Identifier	item		1486461	0					
ANR	1486497	Identifier	alias		1486461	1					
ANR	1486498	ExpressionStatement	free_item_name ( item )	274:1:6461:6482	1486461	4	True				
ANR	1486499	CallExpression	free_item_name ( item )		1486461	0					
ANR	1486500	Callee	free_item_name		1486461	0					
ANR	1486501	Identifier	free_item_name		1486461	0					
ANR	1486502	ArgumentList	item		1486461	1					
ANR	1486503	Argument	item		1486461	0					
ANR	1486504	Identifier	item		1486461	0					
ANR	1486505	ExpressionStatement	free ( item -> realname )	275:1:6485:6506	1486461	5	True				
ANR	1486506	CallExpression	free ( item -> realname )		1486461	0					
ANR	1486507	Callee	free		1486461	0					
ANR	1486508	Identifier	free		1486461	0					
ANR	1486509	ArgumentList	item -> realname		1486461	1					
ANR	1486510	Argument	item -> realname		1486461	0					
ANR	1486511	PtrMemberAccess	item -> realname		1486461	0					
ANR	1486512	Identifier	item		1486461	0					
ANR	1486513	Identifier	realname		1486461	1					
ANR	1486514	ExpressionStatement	free ( item )	276:1:6509:6520	1486461	6	True				
ANR	1486515	CallExpression	free ( item )		1486461	0					
ANR	1486516	Callee	free		1486461	0					
ANR	1486517	Identifier	free		1486461	0					
ANR	1486518	ArgumentList	item		1486461	1					
ANR	1486519	Argument	item		1486461	0					
ANR	1486520	Identifier	item		1486461	0					
ANR	1486521	ReturnType	R_API void		1486461	1					
ANR	1486522	Identifier	r_flag_item_free		1486461	2					
ANR	1486523	ParameterList	RFlagItem * item		1486461	3					
ANR	1486524	Parameter	RFlagItem * item	266:28:6284:6298	1486461	0	True				
ANR	1486525	ParameterType	RFlagItem *		1486461	0					
ANR	1486526	Identifier	item		1486461	1					
ANR	1486527	CFGEntryNode	ENTRY		1486461		True				
ANR	1486528	CFGExitNode	EXIT		1486461		True				
ANR	1486529	Symbol	item		1486461						
ANR	1486530	Symbol	item -> color		1486461						
ANR	1486531	Symbol	* item		1486461						
ANR	1486532	Symbol	item -> alias		1486461						
ANR	1486533	Symbol	item -> realname		1486461						
ANR	1486534	Symbol	item -> comment		1486461						
ANR	1486535	Function	r_flag_free	279:0:6525:6748							
ANR	1486536	FunctionDef	r_flag_free (RFlag * f)		1486535	0					
ANR	1486537	CompoundStatement		279:35:6560:6748	1486535	0					
ANR	1486538	ExpressionStatement	"r_return_val_if_fail ( f , NULL )"	280:1:6563:6593	1486535	0	True				
ANR	1486539	CallExpression	"r_return_val_if_fail ( f , NULL )"		1486535	0					
ANR	1486540	Callee	r_return_val_if_fail		1486535	0					
ANR	1486541	Identifier	r_return_val_if_fail		1486535	0					
ANR	1486542	ArgumentList	f		1486535	1					
ANR	1486543	Argument	f		1486535	0					
ANR	1486544	Identifier	f		1486535	0					
ANR	1486545	Argument	NULL		1486535	1					
ANR	1486546	Identifier	NULL		1486535	0					
ANR	1486547	ExpressionStatement	r_skiplist_free ( f -> by_off )	281:1:6596:6623	1486535	1	True				
ANR	1486548	CallExpression	r_skiplist_free ( f -> by_off )		1486535	0					
ANR	1486549	Callee	r_skiplist_free		1486535	0					
ANR	1486550	Identifier	r_skiplist_free		1486535	0					
ANR	1486551	ArgumentList	f -> by_off		1486535	1					
ANR	1486552	Argument	f -> by_off		1486535	0					
ANR	1486553	PtrMemberAccess	f -> by_off		1486535	0					
ANR	1486554	Identifier	f		1486535	0					
ANR	1486555	Identifier	by_off		1486535	1					
ANR	1486556	ExpressionStatement	ht_pp_free ( f -> ht_name )	282:1:6626:6649	1486535	2	True				
ANR	1486557	CallExpression	ht_pp_free ( f -> ht_name )		1486535	0					
ANR	1486558	Callee	ht_pp_free		1486535	0					
ANR	1486559	Identifier	ht_pp_free		1486535	0					
ANR	1486560	ArgumentList	f -> ht_name		1486535	1					
ANR	1486561	Argument	f -> ht_name		1486535	0					
ANR	1486562	PtrMemberAccess	f -> ht_name		1486535	0					
ANR	1486563	Identifier	f		1486535	0					
ANR	1486564	Identifier	ht_name		1486535	1					
ANR	1486565	ExpressionStatement	sdb_free ( f -> tags )	283:1:6652:6670	1486535	3	True				
ANR	1486566	CallExpression	sdb_free ( f -> tags )		1486535	0					
ANR	1486567	Callee	sdb_free		1486535	0					
ANR	1486568	Identifier	sdb_free		1486535	0					
ANR	1486569	ArgumentList	f -> tags		1486535	1					
ANR	1486570	Argument	f -> tags		1486535	0					
ANR	1486571	PtrMemberAccess	f -> tags		1486535	0					
ANR	1486572	Identifier	f		1486535	0					
ANR	1486573	Identifier	tags		1486535	1					
ANR	1486574	ExpressionStatement	r_spaces_fini ( & f -> spaces )	284:1:6673:6699	1486535	4	True				
ANR	1486575	CallExpression	r_spaces_fini ( & f -> spaces )		1486535	0					
ANR	1486576	Callee	r_spaces_fini		1486535	0					
ANR	1486577	Identifier	r_spaces_fini		1486535	0					
ANR	1486578	ArgumentList	& f -> spaces		1486535	1					
ANR	1486579	Argument	& f -> spaces		1486535	0					
ANR	1486580	UnaryOperationExpression	& f -> spaces		1486535	0					
ANR	1486581	UnaryOperator	&		1486535	0					
ANR	1486582	PtrMemberAccess	f -> spaces		1486535	1					
ANR	1486583	Identifier	f		1486535	0					
ANR	1486584	Identifier	spaces		1486535	1					
ANR	1486585	ExpressionStatement	r_num_free ( f -> num )	285:1:6702:6721	1486535	5	True				
ANR	1486586	CallExpression	r_num_free ( f -> num )		1486535	0					
ANR	1486587	Callee	r_num_free		1486535	0					
ANR	1486588	Identifier	r_num_free		1486535	0					
ANR	1486589	ArgumentList	f -> num		1486535	1					
ANR	1486590	Argument	f -> num		1486535	0					
ANR	1486591	PtrMemberAccess	f -> num		1486535	0					
ANR	1486592	Identifier	f		1486535	0					
ANR	1486593	Identifier	num		1486535	1					
ANR	1486594	ExpressionStatement	free ( f )	286:1:6724:6732	1486535	6	True				
ANR	1486595	CallExpression	free ( f )		1486535	0					
ANR	1486596	Callee	free		1486535	0					
ANR	1486597	Identifier	free		1486535	0					
ANR	1486598	ArgumentList	f		1486535	1					
ANR	1486599	Argument	f		1486535	0					
ANR	1486600	Identifier	f		1486535	0					
ANR	1486601	ReturnStatement	return NULL ;	287:1:6735:6746	1486535	7	True				
ANR	1486602	Identifier	NULL		1486535	0					
ANR	1486603	ReturnType	R_API RFlag *		1486535	1					
ANR	1486604	Identifier	r_flag_free		1486535	2					
ANR	1486605	ParameterList	RFlag * f		1486535	3					
ANR	1486606	Parameter	RFlag * f	279:25:6550:6557	1486535	0	True				
ANR	1486607	ParameterType	RFlag *		1486535	0					
ANR	1486608	Identifier	f		1486535	1					
ANR	1486609	CFGEntryNode	ENTRY		1486535		True				
ANR	1486610	CFGExitNode	EXIT		1486535		True				
ANR	1486611	Symbol	* f		1486535						
ANR	1486612	Symbol	f -> ht_name		1486535						
ANR	1486613	Symbol	f -> num		1486535						
ANR	1486614	Symbol	NULL		1486535						
ANR	1486615	Symbol	f		1486535						
ANR	1486616	Symbol	f -> tags		1486535						
ANR	1486617	Symbol	& f -> spaces		1486535						
ANR	1486618	Symbol	f -> by_off		1486535						
ANR	1486619	Function	print_flag_name	290:0:6751:6889							
ANR	1486620	FunctionDef	"print_flag_name (RFlagItem * fi , void * user)"		1486619	0					
ANR	1486621	CompoundStatement		290:55:6806:6889	1486619	0					
ANR	1486622	IdentifierDeclStatement	RFlag * flag = ( RFlag * ) user ;	291:1:6809:6836	1486619	0	True				
ANR	1486623	IdentifierDecl	* flag = ( RFlag * ) user		1486619	0					
ANR	1486624	IdentifierDeclType	RFlag *		1486619	0					
ANR	1486625	Identifier	flag		1486619	1					
ANR	1486626	AssignmentExpression	* flag = ( RFlag * ) user		1486619	2		=			
ANR	1486627	Identifier	flag		1486619	0					
ANR	1486628	CastExpression	( RFlag * ) user		1486619	1					
ANR	1486629	CastTarget	RFlag *		1486619	0					
ANR	1486630	Identifier	user		1486619	1					
ANR	1486631	ExpressionStatement	"flag -> cb_printf ( ""%s\\n"" , fi -> name )"	292:1:6839:6873	1486619	1	True				
ANR	1486632	CallExpression	"flag -> cb_printf ( ""%s\\n"" , fi -> name )"		1486619	0					
ANR	1486633	Callee	flag -> cb_printf		1486619	0					
ANR	1486634	PtrMemberAccess	flag -> cb_printf		1486619	0					
ANR	1486635	Identifier	flag		1486619	0					
ANR	1486636	Identifier	cb_printf		1486619	1					
ANR	1486637	ArgumentList	"""%s\\n"""		1486619	1					
ANR	1486638	Argument	"""%s\\n"""		1486619	0					
ANR	1486639	PrimaryExpression	"""%s\\n"""		1486619	0					
ANR	1486640	Argument	fi -> name		1486619	1					
ANR	1486641	PtrMemberAccess	fi -> name		1486619	0					
ANR	1486642	Identifier	fi		1486619	0					
ANR	1486643	Identifier	name		1486619	1					
ANR	1486644	ReturnStatement	return true ;	293:1:6876:6887	1486619	2	True				
ANR	1486645	Identifier	true		1486619	0					
ANR	1486646	ReturnType	static bool		1486619	1					
ANR	1486647	Identifier	print_flag_name		1486619	2					
ANR	1486648	ParameterList	"RFlagItem * fi , void * user"		1486619	3					
ANR	1486649	Parameter	RFlagItem * fi	290:28:6779:6791	1486619	0	True				
ANR	1486650	ParameterType	RFlagItem *		1486619	0					
ANR	1486651	Identifier	fi		1486619	1					
ANR	1486652	Parameter	void * user	290:43:6794:6803	1486619	1	True				
ANR	1486653	ParameterType	void *		1486619	0					
ANR	1486654	Identifier	user		1486619	1					
ANR	1486655	CFGEntryNode	ENTRY		1486619		True				
ANR	1486656	CFGExitNode	EXIT		1486619		True				
ANR	1486657	Symbol	fi		1486619						
ANR	1486658	Symbol	flag		1486619						
ANR	1486659	Symbol	fi -> name		1486619						
ANR	1486660	Symbol	true		1486619						
ANR	1486661	Symbol	* fi		1486619						
ANR	1486662	Symbol	user		1486619						
ANR	1486663	ClassDef	print_flag_t	296:0:6892:7027							
ANR	1486664	DeclStmt									
ANR	1486665	Decl							RFlag	RFlag *	f
ANR	1486666	DeclStmt									
ANR	1486667	Decl							PJ	PJ *	pj
ANR	1486668	DeclStmt									
ANR	1486669	Decl							bool	bool	in_range
ANR	1486670	DeclStmt									
ANR	1486671	Decl							ut64	ut64	range_from
ANR	1486672	DeclStmt									
ANR	1486673	Decl							ut64	ut64	range_to
ANR	1486674	DeclStmt									
ANR	1486675	Decl							RSpace	RSpace *	fs
ANR	1486676	DeclStmt									
ANR	1486677	Decl							bool	bool	real
ANR	1486678	DeclStmt									
ANR	1486679	Decl							const char	const char *	pfx
ANR	1486680	Function	print_flag_json	307:0:7031:7574							
ANR	1486681	FunctionDef	"print_flag_json (RFlagItem * flag , void * user)"		1486680	0					
ANR	1486682	CompoundStatement		307:57:7088:7574	1486680	0					
ANR	1486683	IdentifierDeclStatement	struct print_flag_t * u = ( struct print_flag_t * ) user ;	308:1:7091:7143	1486680	0	True				
ANR	1486684	IdentifierDecl	* u = ( struct print_flag_t * ) user		1486680	0					
ANR	1486685	IdentifierDeclType	struct print_flag_t *		1486680	0					
ANR	1486686	Identifier	u		1486680	1					
ANR	1486687	AssignmentExpression	* u = ( struct print_flag_t * ) user		1486680	2		=			
ANR	1486688	Identifier	u		1486680	0					
ANR	1486689	CastExpression	( struct print_flag_t * ) user		1486680	1					
ANR	1486690	CastTarget	struct print_flag_t *		1486680	0					
ANR	1486691	Identifier	user		1486680	1					
ANR	1486692	IfStatement	if ( u -> in_range && ( flag -> offset < u -> range_from || flag -> offset >= u -> range_to ) )		1486680	1					
ANR	1486693	Condition	u -> in_range && ( flag -> offset < u -> range_from || flag -> offset >= u -> range_to )	309:5:7150:7225	1486680	0	True				
ANR	1486694	AndExpression	u -> in_range && ( flag -> offset < u -> range_from || flag -> offset >= u -> range_to )		1486680	0		&&			
ANR	1486695	PtrMemberAccess	u -> in_range		1486680	0					
ANR	1486696	Identifier	u		1486680	0					
ANR	1486697	Identifier	in_range		1486680	1					
ANR	1486698	OrExpression	flag -> offset < u -> range_from || flag -> offset >= u -> range_to		1486680	1		||			
ANR	1486699	RelationalExpression	flag -> offset < u -> range_from		1486680	0		<			
ANR	1486700	PtrMemberAccess	flag -> offset		1486680	0					
ANR	1486701	Identifier	flag		1486680	0					
ANR	1486702	Identifier	offset		1486680	1					
ANR	1486703	PtrMemberAccess	u -> range_from		1486680	1					
ANR	1486704	Identifier	u		1486680	0					
ANR	1486705	Identifier	range_from		1486680	1					
ANR	1486706	RelationalExpression	flag -> offset >= u -> range_to		1486680	1		>=			
ANR	1486707	PtrMemberAccess	flag -> offset		1486680	0					
ANR	1486708	Identifier	flag		1486680	0					
ANR	1486709	Identifier	offset		1486680	1					
ANR	1486710	PtrMemberAccess	u -> range_to		1486680	1					
ANR	1486711	Identifier	u		1486680	0					
ANR	1486712	Identifier	range_to		1486680	1					
ANR	1486713	CompoundStatement		3:83:139:139	1486680	1					
ANR	1486714	ReturnStatement	return true ;	310:2:7232:7243	1486680	0	True				
ANR	1486715	Identifier	true		1486680	0					
ANR	1486716	ExpressionStatement	pj_o ( u -> pj )	312:1:7249:7261	1486680	2	True				
ANR	1486717	CallExpression	pj_o ( u -> pj )		1486680	0					
ANR	1486718	Callee	pj_o		1486680	0					
ANR	1486719	Identifier	pj_o		1486680	0					
ANR	1486720	ArgumentList	u -> pj		1486680	1					
ANR	1486721	Argument	u -> pj		1486680	0					
ANR	1486722	PtrMemberAccess	u -> pj		1486680	0					
ANR	1486723	Identifier	u		1486680	0					
ANR	1486724	Identifier	pj		1486680	1					
ANR	1486725	ExpressionStatement	"pj_ks ( u -> pj , ""name"" , u -> real ? flag -> realname : flag -> name )"	313:1:7264:7324	1486680	3	True				
ANR	1486726	CallExpression	"pj_ks ( u -> pj , ""name"" , u -> real ? flag -> realname : flag -> name )"		1486680	0					
ANR	1486727	Callee	pj_ks		1486680	0					
ANR	1486728	Identifier	pj_ks		1486680	0					
ANR	1486729	ArgumentList	u -> pj		1486680	1					
ANR	1486730	Argument	u -> pj		1486680	0					
ANR	1486731	PtrMemberAccess	u -> pj		1486680	0					
ANR	1486732	Identifier	u		1486680	0					
ANR	1486733	Identifier	pj		1486680	1					
ANR	1486734	Argument	"""name"""		1486680	1					
ANR	1486735	PrimaryExpression	"""name"""		1486680	0					
ANR	1486736	Argument	u -> real ? flag -> realname : flag -> name		1486680	2					
ANR	1486737	ConditionalExpression	u -> real ? flag -> realname : flag -> name		1486680	0					
ANR	1486738	Condition	u -> real		1486680	0					
ANR	1486739	PtrMemberAccess	u -> real		1486680	0					
ANR	1486740	Identifier	u		1486680	0					
ANR	1486741	Identifier	real		1486680	1					
ANR	1486742	PtrMemberAccess	flag -> realname		1486680	1					
ANR	1486743	Identifier	flag		1486680	0					
ANR	1486744	Identifier	realname		1486680	1					
ANR	1486745	PtrMemberAccess	flag -> name		1486680	2					
ANR	1486746	Identifier	flag		1486680	0					
ANR	1486747	Identifier	name		1486680	1					
ANR	1486748	ExpressionStatement	"pj_ki ( u -> pj , ""size"" , flag -> size )"	314:1:7327:7360	1486680	4	True				
ANR	1486749	CallExpression	"pj_ki ( u -> pj , ""size"" , flag -> size )"		1486680	0					
ANR	1486750	Callee	pj_ki		1486680	0					
ANR	1486751	Identifier	pj_ki		1486680	0					
ANR	1486752	ArgumentList	u -> pj		1486680	1					
ANR	1486753	Argument	u -> pj		1486680	0					
ANR	1486754	PtrMemberAccess	u -> pj		1486680	0					
ANR	1486755	Identifier	u		1486680	0					
ANR	1486756	Identifier	pj		1486680	1					
ANR	1486757	Argument	"""size"""		1486680	1					
ANR	1486758	PrimaryExpression	"""size"""		1486680	0					
ANR	1486759	Argument	flag -> size		1486680	2					
ANR	1486760	PtrMemberAccess	flag -> size		1486680	0					
ANR	1486761	Identifier	flag		1486680	0					
ANR	1486762	Identifier	size		1486680	1					
ANR	1486763	IfStatement	if ( flag -> alias )		1486680	5					
ANR	1486764	Condition	flag -> alias	315:5:7367:7377	1486680	0	True				
ANR	1486765	PtrMemberAccess	flag -> alias		1486680	0					
ANR	1486766	Identifier	flag		1486680	0					
ANR	1486767	Identifier	alias		1486680	1					
ANR	1486768	CompoundStatement		9:18:291:291	1486680	1					
ANR	1486769	ExpressionStatement	"pj_ks ( u -> pj , ""alias"" , flag -> alias )"	316:2:7384:7419	1486680	0	True				
ANR	1486770	CallExpression	"pj_ks ( u -> pj , ""alias"" , flag -> alias )"		1486680	0					
ANR	1486771	Callee	pj_ks		1486680	0					
ANR	1486772	Identifier	pj_ks		1486680	0					
ANR	1486773	ArgumentList	u -> pj		1486680	1					
ANR	1486774	Argument	u -> pj		1486680	0					
ANR	1486775	PtrMemberAccess	u -> pj		1486680	0					
ANR	1486776	Identifier	u		1486680	0					
ANR	1486777	Identifier	pj		1486680	1					
ANR	1486778	Argument	"""alias"""		1486680	1					
ANR	1486779	PrimaryExpression	"""alias"""		1486680	0					
ANR	1486780	Argument	flag -> alias		1486680	2					
ANR	1486781	PtrMemberAccess	flag -> alias		1486680	0					
ANR	1486782	Identifier	flag		1486680	0					
ANR	1486783	Identifier	alias		1486680	1					
ANR	1486784	ElseStatement	else		1486680	0					
ANR	1486785	CompoundStatement		11:8:340:340	1486680	0					
ANR	1486786	ExpressionStatement	"pj_kn ( u -> pj , ""offset"" , flag -> offset )"	318:2:7433:7470	1486680	0	True				
ANR	1486787	CallExpression	"pj_kn ( u -> pj , ""offset"" , flag -> offset )"		1486680	0					
ANR	1486788	Callee	pj_kn		1486680	0					
ANR	1486789	Identifier	pj_kn		1486680	0					
ANR	1486790	ArgumentList	u -> pj		1486680	1					
ANR	1486791	Argument	u -> pj		1486680	0					
ANR	1486792	PtrMemberAccess	u -> pj		1486680	0					
ANR	1486793	Identifier	u		1486680	0					
ANR	1486794	Identifier	pj		1486680	1					
ANR	1486795	Argument	"""offset"""		1486680	1					
ANR	1486796	PrimaryExpression	"""offset"""		1486680	0					
ANR	1486797	Argument	flag -> offset		1486680	2					
ANR	1486798	PtrMemberAccess	flag -> offset		1486680	0					
ANR	1486799	Identifier	flag		1486680	0					
ANR	1486800	Identifier	offset		1486680	1					
ANR	1486801	IfStatement	if ( flag -> comment )		1486680	6					
ANR	1486802	Condition	flag -> comment	320:5:7480:7492	1486680	0	True				
ANR	1486803	PtrMemberAccess	flag -> comment		1486680	0					
ANR	1486804	Identifier	flag		1486680	0					
ANR	1486805	Identifier	comment		1486680	1					
ANR	1486806	CompoundStatement		14:20:406:406	1486680	1					
ANR	1486807	ExpressionStatement	"pj_ks ( u -> pj , ""comment"" , flag -> comment )"	321:2:7499:7538	1486680	0	True				
ANR	1486808	CallExpression	"pj_ks ( u -> pj , ""comment"" , flag -> comment )"		1486680	0					
ANR	1486809	Callee	pj_ks		1486680	0					
ANR	1486810	Identifier	pj_ks		1486680	0					
ANR	1486811	ArgumentList	u -> pj		1486680	1					
ANR	1486812	Argument	u -> pj		1486680	0					
ANR	1486813	PtrMemberAccess	u -> pj		1486680	0					
ANR	1486814	Identifier	u		1486680	0					
ANR	1486815	Identifier	pj		1486680	1					
ANR	1486816	Argument	"""comment"""		1486680	1					
ANR	1486817	PrimaryExpression	"""comment"""		1486680	0					
ANR	1486818	Argument	flag -> comment		1486680	2					
ANR	1486819	PtrMemberAccess	flag -> comment		1486680	0					
ANR	1486820	Identifier	flag		1486680	0					
ANR	1486821	Identifier	comment		1486680	1					
ANR	1486822	ExpressionStatement	pj_end ( u -> pj )	323:1:7544:7558	1486680	7	True				
ANR	1486823	CallExpression	pj_end ( u -> pj )		1486680	0					
ANR	1486824	Callee	pj_end		1486680	0					
ANR	1486825	Identifier	pj_end		1486680	0					
ANR	1486826	ArgumentList	u -> pj		1486680	1					
ANR	1486827	Argument	u -> pj		1486680	0					
ANR	1486828	PtrMemberAccess	u -> pj		1486680	0					
ANR	1486829	Identifier	u		1486680	0					
ANR	1486830	Identifier	pj		1486680	1					
ANR	1486831	ReturnStatement	return true ;	324:1:7561:7572	1486680	8	True				
ANR	1486832	Identifier	true		1486680	0					
ANR	1486833	ReturnType	static bool		1486680	1					
ANR	1486834	Identifier	print_flag_json		1486680	2					
ANR	1486835	ParameterList	"RFlagItem * flag , void * user"		1486680	3					
ANR	1486836	Parameter	RFlagItem * flag	307:28:7059:7073	1486680	0	True				
ANR	1486837	ParameterType	RFlagItem *		1486680	0					
ANR	1486838	Identifier	flag		1486680	1					
ANR	1486839	Parameter	void * user	307:45:7076:7085	1486680	1	True				
ANR	1486840	ParameterType	void *		1486680	0					
ANR	1486841	Identifier	user		1486680	1					
ANR	1486842	CFGEntryNode	ENTRY		1486680		True				
ANR	1486843	CFGExitNode	EXIT		1486680		True				
ANR	1486844	Symbol	flag		1486680						
ANR	1486845	Symbol	flag -> name		1486680						
ANR	1486846	Symbol	u -> real		1486680						
ANR	1486847	Symbol	flag -> alias		1486680						
ANR	1486848	Symbol	u -> range_to		1486680						
ANR	1486849	Symbol	flag -> realname		1486680						
ANR	1486850	Symbol	u -> pj		1486680						
ANR	1486851	Symbol	u		1486680						
ANR	1486852	Symbol	true		1486680						
ANR	1486853	Symbol	flag -> offset		1486680						
ANR	1486854	Symbol	* flag		1486680						
ANR	1486855	Symbol	user		1486680						
ANR	1486856	Symbol	u -> in_range		1486680						
ANR	1486857	Symbol	flag -> comment		1486680						
ANR	1486858	Symbol	u -> range_from		1486680						
ANR	1486859	Symbol	* u		1486680						
ANR	1486860	Symbol	flag -> size		1486680						
ANR	1486861	Function	print_flag_rad	327:0:7577:8637							
ANR	1486862	FunctionDef	"print_flag_rad (RFlagItem * flag , void * user)"		1486861	0					
ANR	1486863	CompoundStatement		327:56:7633:8637	1486861	0					
ANR	1486864	IdentifierDeclStatement	struct print_flag_t * u = ( struct print_flag_t * ) user ;	328:1:7636:7688	1486861	0	True				
ANR	1486865	IdentifierDecl	* u = ( struct print_flag_t * ) user		1486861	0					
ANR	1486866	IdentifierDeclType	struct print_flag_t *		1486861	0					
ANR	1486867	Identifier	u		1486861	1					
ANR	1486868	AssignmentExpression	* u = ( struct print_flag_t * ) user		1486861	2		=			
ANR	1486869	Identifier	u		1486861	0					
ANR	1486870	CastExpression	( struct print_flag_t * ) user		1486861	1					
ANR	1486871	CastTarget	struct print_flag_t *		1486861	0					
ANR	1486872	Identifier	user		1486861	1					
ANR	1486873	IdentifierDeclStatement	"char * comment_b64 = NULL , * tmp = NULL ;"	329:1:7691:7728	1486861	1	True				
ANR	1486874	IdentifierDecl	* comment_b64 = NULL		1486861	0					
ANR	1486875	IdentifierDeclType	char *		1486861	0					
ANR	1486876	Identifier	comment_b64		1486861	1					
ANR	1486877	AssignmentExpression	* comment_b64 = NULL		1486861	2		=			
ANR	1486878	Identifier	NULL		1486861	0					
ANR	1486879	Identifier	NULL		1486861	1					
ANR	1486880	IdentifierDecl	* tmp = NULL		1486861	1					
ANR	1486881	IdentifierDeclType	char *		1486861	0					
ANR	1486882	Identifier	tmp		1486861	1					
ANR	1486883	AssignmentExpression	* tmp = NULL		1486861	2		=			
ANR	1486884	Identifier	NULL		1486861	0					
ANR	1486885	Identifier	NULL		1486861	1					
ANR	1486886	IfStatement	if ( u -> in_range && ( flag -> offset < u -> range_from || flag -> offset >= u -> range_to ) )		1486861	2					
ANR	1486887	Condition	u -> in_range && ( flag -> offset < u -> range_from || flag -> offset >= u -> range_to )	330:5:7735:7810	1486861	0	True				
ANR	1486888	AndExpression	u -> in_range && ( flag -> offset < u -> range_from || flag -> offset >= u -> range_to )		1486861	0		&&			
ANR	1486889	PtrMemberAccess	u -> in_range		1486861	0					
ANR	1486890	Identifier	u		1486861	0					
ANR	1486891	Identifier	in_range		1486861	1					
ANR	1486892	OrExpression	flag -> offset < u -> range_from || flag -> offset >= u -> range_to		1486861	1		||			
ANR	1486893	RelationalExpression	flag -> offset < u -> range_from		1486861	0		<			
ANR	1486894	PtrMemberAccess	flag -> offset		1486861	0					
ANR	1486895	Identifier	flag		1486861	0					
ANR	1486896	Identifier	offset		1486861	1					
ANR	1486897	PtrMemberAccess	u -> range_from		1486861	1					
ANR	1486898	Identifier	u		1486861	0					
ANR	1486899	Identifier	range_from		1486861	1					
ANR	1486900	RelationalExpression	flag -> offset >= u -> range_to		1486861	1		>=			
ANR	1486901	PtrMemberAccess	flag -> offset		1486861	0					
ANR	1486902	Identifier	flag		1486861	0					
ANR	1486903	Identifier	offset		1486861	1					
ANR	1486904	PtrMemberAccess	u -> range_to		1486861	1					
ANR	1486905	Identifier	u		1486861	0					
ANR	1486906	Identifier	range_to		1486861	1					
ANR	1486907	CompoundStatement		4:83:179:179	1486861	1					
ANR	1486908	ReturnStatement	return true ;	331:2:7817:7828	1486861	0	True				
ANR	1486909	Identifier	true		1486861	0					
ANR	1486910	IfStatement	if ( ! u -> fs || flag -> space != u -> fs )		1486861	3					
ANR	1486911	Condition	! u -> fs || flag -> space != u -> fs	333:5:7838:7867	1486861	0	True				
ANR	1486912	OrExpression	! u -> fs || flag -> space != u -> fs		1486861	0		||			
ANR	1486913	UnaryOperationExpression	! u -> fs		1486861	0					
ANR	1486914	UnaryOperator	!		1486861	0					
ANR	1486915	PtrMemberAccess	u -> fs		1486861	1					
ANR	1486916	Identifier	u		1486861	0					
ANR	1486917	Identifier	fs		1486861	1					
ANR	1486918	EqualityExpression	flag -> space != u -> fs		1486861	1		!=			
ANR	1486919	PtrMemberAccess	flag -> space		1486861	0					
ANR	1486920	Identifier	flag		1486861	0					
ANR	1486921	Identifier	space		1486861	1					
ANR	1486922	PtrMemberAccess	u -> fs		1486861	1					
ANR	1486923	Identifier	u		1486861	0					
ANR	1486924	Identifier	fs		1486861	1					
ANR	1486925	CompoundStatement		7:37:236:236	1486861	1					
ANR	1486926	ExpressionStatement	u -> fs = flag -> space	334:2:7874:7893	1486861	0	True				
ANR	1486927	AssignmentExpression	u -> fs = flag -> space		1486861	0		=			
ANR	1486928	PtrMemberAccess	u -> fs		1486861	0					
ANR	1486929	Identifier	u		1486861	0					
ANR	1486930	Identifier	fs		1486861	1					
ANR	1486931	PtrMemberAccess	flag -> space		1486861	1					
ANR	1486932	Identifier	flag		1486861	0					
ANR	1486933	Identifier	space		1486861	1					
ANR	1486934	ExpressionStatement	"u -> f -> cb_printf ( ""fs %s\\n"" , u -> fs ? u -> fs -> name : ""*"" )"	335:2:7897:7949	1486861	1	True				
ANR	1486935	CallExpression	"u -> f -> cb_printf ( ""fs %s\\n"" , u -> fs ? u -> fs -> name : ""*"" )"		1486861	0					
ANR	1486936	Callee	u -> f -> cb_printf		1486861	0					
ANR	1486937	PtrMemberAccess	u -> f -> cb_printf		1486861	0					
ANR	1486938	PtrMemberAccess	u -> f		1486861	0					
ANR	1486939	Identifier	u		1486861	0					
ANR	1486940	Identifier	f		1486861	1					
ANR	1486941	Identifier	cb_printf		1486861	1					
ANR	1486942	ArgumentList	"""fs %s\\n"""		1486861	1					
ANR	1486943	Argument	"""fs %s\\n"""		1486861	0					
ANR	1486944	PrimaryExpression	"""fs %s\\n"""		1486861	0					
ANR	1486945	Argument	"u -> fs ? u -> fs -> name : ""*"""		1486861	1					
ANR	1486946	ConditionalExpression	"u -> fs ? u -> fs -> name : ""*"""		1486861	0					
ANR	1486947	Condition	u -> fs		1486861	0					
ANR	1486948	PtrMemberAccess	u -> fs		1486861	0					
ANR	1486949	Identifier	u		1486861	0					
ANR	1486950	Identifier	fs		1486861	1					
ANR	1486951	PtrMemberAccess	u -> fs -> name		1486861	1					
ANR	1486952	PtrMemberAccess	u -> fs		1486861	0					
ANR	1486953	Identifier	u		1486861	0					
ANR	1486954	Identifier	fs		1486861	1					
ANR	1486955	Identifier	name		1486861	1					
ANR	1486956	PrimaryExpression	"""*"""		1486861	2					
ANR	1486957	IfStatement	if ( flag -> comment && * flag -> comment )		1486861	4					
ANR	1486958	Condition	flag -> comment && * flag -> comment	337:5:7959:7989	1486861	0	True				
ANR	1486959	AndExpression	flag -> comment && * flag -> comment		1486861	0		&&			
ANR	1486960	PtrMemberAccess	flag -> comment		1486861	0					
ANR	1486961	Identifier	flag		1486861	0					
ANR	1486962	Identifier	comment		1486861	1					
ANR	1486963	UnaryOperationExpression	* flag -> comment		1486861	1					
ANR	1486964	UnaryOperator	*		1486861	0					
ANR	1486965	PtrMemberAccess	flag -> comment		1486861	1					
ANR	1486966	Identifier	flag		1486861	0					
ANR	1486967	Identifier	comment		1486861	1					
ANR	1486968	CompoundStatement		11:38:358:358	1486861	1					
ANR	1486969	ExpressionStatement	"comment_b64 = r_base64_encode_dyn ( flag -> comment , - 1 )"	338:2:7996:8049	1486861	0	True				
ANR	1486970	AssignmentExpression	"comment_b64 = r_base64_encode_dyn ( flag -> comment , - 1 )"		1486861	0		=			
ANR	1486971	Identifier	comment_b64		1486861	0					
ANR	1486972	CallExpression	"r_base64_encode_dyn ( flag -> comment , - 1 )"		1486861	1					
ANR	1486973	Callee	r_base64_encode_dyn		1486861	0					
ANR	1486974	Identifier	r_base64_encode_dyn		1486861	0					
ANR	1486975	ArgumentList	flag -> comment		1486861	1					
ANR	1486976	Argument	flag -> comment		1486861	0					
ANR	1486977	PtrMemberAccess	flag -> comment		1486861	0					
ANR	1486978	Identifier	flag		1486861	0					
ANR	1486979	Identifier	comment		1486861	1					
ANR	1486980	Argument	- 1		1486861	1					
ANR	1486981	UnaryOperationExpression	- 1		1486861	0					
ANR	1486982	UnaryOperator	-		1486861	0					
ANR	1486983	PrimaryExpression	1		1486861	1					
ANR	1486984	IfStatement	if ( comment_b64 )		1486861	1					
ANR	1486985	Condition	comment_b64	340:6:8103:8113	1486861	0	True				
ANR	1486986	Identifier	comment_b64		1486861	0					
ANR	1486987	CompoundStatement		14:19:482:482	1486861	1					
ANR	1486988	ExpressionStatement	"tmp = r_str_newf ( ""base64:%s"" , comment_b64 )"	341:3:8121:8164	1486861	0	True				
ANR	1486989	AssignmentExpression	"tmp = r_str_newf ( ""base64:%s"" , comment_b64 )"		1486861	0		=			
ANR	1486990	Identifier	tmp		1486861	0					
ANR	1486991	CallExpression	"r_str_newf ( ""base64:%s"" , comment_b64 )"		1486861	1					
ANR	1486992	Callee	r_str_newf		1486861	0					
ANR	1486993	Identifier	r_str_newf		1486861	0					
ANR	1486994	ArgumentList	"""base64:%s"""		1486861	1					
ANR	1486995	Argument	"""base64:%s"""		1486861	0					
ANR	1486996	PrimaryExpression	"""base64:%s"""		1486861	0					
ANR	1486997	Argument	comment_b64		1486861	1					
ANR	1486998	Identifier	comment_b64		1486861	0					
ANR	1486999	ExpressionStatement	free ( comment_b64 )	342:3:8169:8187	1486861	1	True				
ANR	1487000	CallExpression	free ( comment_b64 )		1486861	0					
ANR	1487001	Callee	free		1486861	0					
ANR	1487002	Identifier	free		1486861	0					
ANR	1487003	ArgumentList	comment_b64		1486861	1					
ANR	1487004	Argument	comment_b64		1486861	0					
ANR	1487005	Identifier	comment_b64		1486861	0					
ANR	1487006	ExpressionStatement	comment_b64 = tmp	343:3:8192:8209	1486861	2	True				
ANR	1487007	AssignmentExpression	comment_b64 = tmp		1486861	0		=			
ANR	1487008	Identifier	comment_b64		1486861	0					
ANR	1487009	Identifier	tmp		1486861	1					
ANR	1487010	IfStatement	if ( flag -> alias )		1486861	5					
ANR	1487011	Condition	flag -> alias	346:5:8223:8233	1486861	0	True				
ANR	1487012	PtrMemberAccess	flag -> alias		1486861	0					
ANR	1487013	Identifier	flag		1486861	0					
ANR	1487014	Identifier	alias		1486861	1					
ANR	1487015	CompoundStatement		20:18:602:602	1486861	1					
ANR	1487016	ExpressionStatement	"u -> f -> cb_printf ( ""fa %s %s\\n"" , flag -> name , flag -> alias )"	347:2:8240:8295	1486861	0	True				
ANR	1487017	CallExpression	"u -> f -> cb_printf ( ""fa %s %s\\n"" , flag -> name , flag -> alias )"		1486861	0					
ANR	1487018	Callee	u -> f -> cb_printf		1486861	0					
ANR	1487019	PtrMemberAccess	u -> f -> cb_printf		1486861	0					
ANR	1487020	PtrMemberAccess	u -> f		1486861	0					
ANR	1487021	Identifier	u		1486861	0					
ANR	1487022	Identifier	f		1486861	1					
ANR	1487023	Identifier	cb_printf		1486861	1					
ANR	1487024	ArgumentList	"""fa %s %s\\n"""		1486861	1					
ANR	1487025	Argument	"""fa %s %s\\n"""		1486861	0					
ANR	1487026	PrimaryExpression	"""fa %s %s\\n"""		1486861	0					
ANR	1487027	Argument	flag -> name		1486861	1					
ANR	1487028	PtrMemberAccess	flag -> name		1486861	0					
ANR	1487029	Identifier	flag		1486861	0					
ANR	1487030	Identifier	name		1486861	1					
ANR	1487031	Argument	flag -> alias		1486861	2					
ANR	1487032	PtrMemberAccess	flag -> alias		1486861	0					
ANR	1487033	Identifier	flag		1486861	0					
ANR	1487034	Identifier	alias		1486861	1					
ANR	1487035	IfStatement	if ( comment_b64 )		1486861	1					
ANR	1487036	Condition	comment_b64	348:6:8303:8313	1486861	0	True				
ANR	1487037	Identifier	comment_b64		1486861	0					
ANR	1487038	CompoundStatement		22:19:682:682	1486861	1					
ANR	1487039	ExpressionStatement	"u -> f -> cb_printf ( ""\\""fC %s %s\\""\\n"" , flag -> name , comment_b64 ? comment_b64 : """" )"	349:3:8321:8401	1486861	0	True				
ANR	1487040	CallExpression	"u -> f -> cb_printf ( ""\\""fC %s %s\\""\\n"" , flag -> name , comment_b64 ? comment_b64 : """" )"		1486861	0					
ANR	1487041	Callee	u -> f -> cb_printf		1486861	0					
ANR	1487042	PtrMemberAccess	u -> f -> cb_printf		1486861	0					
ANR	1487043	PtrMemberAccess	u -> f		1486861	0					
ANR	1487044	Identifier	u		1486861	0					
ANR	1487045	Identifier	f		1486861	1					
ANR	1487046	Identifier	cb_printf		1486861	1					
ANR	1487047	ArgumentList	"""\\""fC %s %s\\""\\n"""		1486861	1					
ANR	1487048	Argument	"""\\""fC %s %s\\""\\n"""		1486861	0					
ANR	1487049	PrimaryExpression	"""\\""fC %s %s\\""\\n"""		1486861	0					
ANR	1487050	Argument	flag -> name		1486861	1					
ANR	1487051	PtrMemberAccess	flag -> name		1486861	0					
ANR	1487052	Identifier	flag		1486861	0					
ANR	1487053	Identifier	name		1486861	1					
ANR	1487054	Argument	"comment_b64 ? comment_b64 : """""		1486861	2					
ANR	1487055	ConditionalExpression	"comment_b64 ? comment_b64 : """""		1486861	0					
ANR	1487056	Condition	comment_b64		1486861	0					
ANR	1487057	Identifier	comment_b64		1486861	0					
ANR	1487058	Identifier	comment_b64		1486861	1					
ANR	1487059	PrimaryExpression	""""""		1486861	2					
ANR	1487060	ElseStatement	else		1486861	0					
ANR	1487061	CompoundStatement		26:8:781:781	1486861	0					
ANR	1487062	Statement	u	353:2:8419:8419	1486861	0	True				
ANR	1487063	Statement	->	353:3:8420:8421	1486861	1	True				
ANR	1487064	Statement	f	353:5:8422:8422	1486861	2	True				
ANR	1487065	Statement	->	353:6:8423:8424	1486861	3	True				
ANR	1487066	Statement	cb_printf	353:8:8425:8433	1486861	4	True				
ANR	1487067	Statement	(	353:18:8435:8435	1486861	5	True				
ANR	1487068	Statement	"""f %s %"""	353:19:8436:8443	1486861	6	True				
ANR	1487069	Statement	PFMT64d	353:28:8445:8451	1486861	7	True				
ANR	1487070	Statement	""" 0x%08"""	353:36:8453:8460	1486861	8	True				
ANR	1487071	Statement	PFMT64x	353:45:8462:8468	1486861	9	True				
ANR	1487072	Statement	"""%s%s %s\\n"""	353:53:8470:8480	1486861	10	True				
ANR	1487073	Statement	","	353:64:8481:8481	1486861	11	True				
ANR	1487074	Statement	flag	354:3:8486:8489	1486861	12	True				
ANR	1487075	Statement	->	354:7:8490:8491	1486861	13	True				
ANR	1487076	Statement	name	354:9:8492:8495	1486861	14	True				
ANR	1487077	Statement	","	354:13:8496:8496	1486861	15	True				
ANR	1487078	Statement	flag	354:15:8498:8501	1486861	16	True				
ANR	1487079	Statement	->	354:19:8502:8503	1486861	17	True				
ANR	1487080	Statement	size	354:21:8504:8507	1486861	18	True				
ANR	1487081	Statement	","	354:25:8508:8508	1486861	19	True				
ANR	1487082	Statement	flag	354:27:8510:8513	1486861	20	True				
ANR	1487083	Statement	->	354:31:8514:8515	1486861	21	True				
ANR	1487084	Statement	offset	354:33:8516:8521	1486861	22	True				
ANR	1487085	Statement	","	354:39:8522:8522	1486861	23	True				
ANR	1487086	Statement	u	355:3:8527:8527	1486861	24	True				
ANR	1487087	Statement	->	355:4:8528:8529	1486861	25	True				
ANR	1487088	Statement	pfx	355:6:8530:8532	1486861	26	True				
ANR	1487089	Statement	?	355:9:8533:8533	1486861	27	True				
ANR	1487090	Statement	"""+"""	355:11:8535:8537	1486861	28	True				
ANR	1487091	Statement	:	355:14:8538:8538	1486861	29	True				
ANR	1487092	Statement	""""""	355:16:8540:8541	1486861	30	True				
ANR	1487093	Statement	","	355:18:8542:8542	1486861	31	True				
ANR	1487094	Statement	u	355:20:8544:8544	1486861	32	True				
ANR	1487095	Statement	->	355:21:8545:8546	1486861	33	True				
ANR	1487096	Statement	pfx	355:23:8547:8549	1486861	34	True				
ANR	1487097	Statement	?	355:26:8550:8550	1486861	35	True				
ANR	1487098	Statement	u	355:28:8552:8552	1486861	36	True				
ANR	1487099	Statement	->	355:29:8553:8554	1486861	37	True				
ANR	1487100	Label	pfx :	355:31:8555:8558	1486861	38	True				
ANR	1487101	Identifier	pfx		1486861	0					
ANR	1487102	Statement	""""""	355:36:8560:8561	1486861	39	True				
ANR	1487103	Statement	","	355:38:8562:8562	1486861	40	True				
ANR	1487104	Statement	comment_b64	356:3:8567:8577	1486861	41	True				
ANR	1487105	Statement	?	356:14:8578:8578	1486861	42	True				
ANR	1487106	Label	comment_b64 :	356:16:8580:8591	1486861	43	True				
ANR	1487107	Identifier	comment_b64		1486861	0					
ANR	1487108	Statement	""""""	356:29:8593:8594	1486861	44	True				
ANR	1487109	Statement	)	356:31:8595:8595	1486861	45	True				
ANR	1487110	ExpressionStatement		356:32:8596:8596	1486861	46	True				
ANR	1487111	ExpressionStatement	free ( comment_b64 )	359:1:8603:8621	1486861	6	True				
ANR	1487112	CallExpression	free ( comment_b64 )		1486861	0					
ANR	1487113	Callee	free		1486861	0					
ANR	1487114	Identifier	free		1486861	0					
ANR	1487115	ArgumentList	comment_b64		1486861	1					
ANR	1487116	Argument	comment_b64		1486861	0					
ANR	1487117	Identifier	comment_b64		1486861	0					
ANR	1487118	ReturnStatement	return true ;	360:1:8624:8635	1486861	7	True				
ANR	1487119	Identifier	true		1486861	0					
ANR	1487120	ReturnType	static bool		1486861	1					
ANR	1487121	Identifier	print_flag_rad		1486861	2					
ANR	1487122	ParameterList	"RFlagItem * flag , void * user"		1486861	3					
ANR	1487123	Parameter	RFlagItem * flag	327:27:7604:7618	1486861	0	True				
ANR	1487124	ParameterType	RFlagItem *		1486861	0					
ANR	1487125	Identifier	flag		1486861	1					
ANR	1487126	Parameter	void * user	327:44:7621:7630	1486861	1	True				
ANR	1487127	ParameterType	void *		1486861	0					
ANR	1487128	Identifier	user		1486861	1					
ANR	1487129	CFGEntryNode	ENTRY		1486861		True				
ANR	1487130	CFGExitNode	EXIT		1486861		True				
ANR	1487131	Symbol	flag		1486861						
ANR	1487132	Symbol	r_str_newf		1486861						
ANR	1487133	Symbol	* * flag		1486861						
ANR	1487134	Symbol	u -> range_to		1486861						
ANR	1487135	Symbol	r_base64_encode_dyn		1486861						
ANR	1487136	Symbol	tmp		1486861						
ANR	1487137	Symbol	* * u		1486861						
ANR	1487138	Symbol	flag -> offset		1486861						
ANR	1487139	Symbol	u -> fs		1486861						
ANR	1487140	Symbol	flag -> comment		1486861						
ANR	1487141	Symbol	NULL		1486861						
ANR	1487142	Symbol	comment_b64		1486861						
ANR	1487143	Symbol	flag -> name		1486861						
ANR	1487144	Symbol	flag -> space		1486861						
ANR	1487145	Symbol	u -> fs -> name		1486861						
ANR	1487146	Symbol	* u -> fs		1486861						
ANR	1487147	Symbol	flag -> alias		1486861						
ANR	1487148	Symbol	u		1486861						
ANR	1487149	Symbol	true		1486861						
ANR	1487150	Symbol	* flag -> comment		1486861						
ANR	1487151	Symbol	* flag		1486861						
ANR	1487152	Symbol	user		1486861						
ANR	1487153	Symbol	u -> in_range		1486861						
ANR	1487154	Symbol	u -> f		1486861						
ANR	1487155	Symbol	* u		1486861						
ANR	1487156	Symbol	u -> range_from		1486861						
ANR	1487157	Function	print_flag_orig_name	363:0:8640:9211							
ANR	1487158	FunctionDef	"print_flag_orig_name (RFlagItem * flag , void * user)"		1487157	0					
ANR	1487159	CompoundStatement		363:62:8702:9211	1487157	0					
ANR	1487160	IdentifierDeclStatement	struct print_flag_t * u = ( struct print_flag_t * ) user ;	364:1:8705:8757	1487157	0	True				
ANR	1487161	IdentifierDecl	* u = ( struct print_flag_t * ) user		1487157	0					
ANR	1487162	IdentifierDeclType	struct print_flag_t *		1487157	0					
ANR	1487163	Identifier	u		1487157	1					
ANR	1487164	AssignmentExpression	* u = ( struct print_flag_t * ) user		1487157	2		=			
ANR	1487165	Identifier	u		1487157	0					
ANR	1487166	CastExpression	( struct print_flag_t * ) user		1487157	1					
ANR	1487167	CastTarget	struct print_flag_t *		1487157	0					
ANR	1487168	Identifier	user		1487157	1					
ANR	1487169	IfStatement	if ( u -> in_range && ( flag -> offset < u -> range_from || flag -> offset >= u -> range_to ) )		1487157	1					
ANR	1487170	Condition	u -> in_range && ( flag -> offset < u -> range_from || flag -> offset >= u -> range_to )	365:5:8764:8839	1487157	0	True				
ANR	1487171	AndExpression	u -> in_range && ( flag -> offset < u -> range_from || flag -> offset >= u -> range_to )		1487157	0		&&			
ANR	1487172	PtrMemberAccess	u -> in_range		1487157	0					
ANR	1487173	Identifier	u		1487157	0					
ANR	1487174	Identifier	in_range		1487157	1					
ANR	1487175	OrExpression	flag -> offset < u -> range_from || flag -> offset >= u -> range_to		1487157	1		||			
ANR	1487176	RelationalExpression	flag -> offset < u -> range_from		1487157	0		<			
ANR	1487177	PtrMemberAccess	flag -> offset		1487157	0					
ANR	1487178	Identifier	flag		1487157	0					
ANR	1487179	Identifier	offset		1487157	1					
ANR	1487180	PtrMemberAccess	u -> range_from		1487157	1					
ANR	1487181	Identifier	u		1487157	0					
ANR	1487182	Identifier	range_from		1487157	1					
ANR	1487183	RelationalExpression	flag -> offset >= u -> range_to		1487157	1		>=			
ANR	1487184	PtrMemberAccess	flag -> offset		1487157	0					
ANR	1487185	Identifier	flag		1487157	0					
ANR	1487186	Identifier	offset		1487157	1					
ANR	1487187	PtrMemberAccess	u -> range_to		1487157	1					
ANR	1487188	Identifier	u		1487157	0					
ANR	1487189	Identifier	range_to		1487157	1					
ANR	1487190	CompoundStatement		3:83:139:139	1487157	1					
ANR	1487191	ReturnStatement	return true ;	366:2:8846:8857	1487157	0	True				
ANR	1487192	Identifier	true		1487157	0					
ANR	1487193	IfStatement	if ( flag -> alias )		1487157	2					
ANR	1487194	Condition	flag -> alias	368:5:8867:8877	1487157	0	True				
ANR	1487195	PtrMemberAccess	flag -> alias		1487157	0					
ANR	1487196	Identifier	flag		1487157	0					
ANR	1487197	Identifier	alias		1487157	1					
ANR	1487198	CompoundStatement		7:2:181:232	1487157	1					
ANR	1487199	IdentifierDeclStatement	const char * n = u -> real ? flag -> realname : flag -> name ;	369:2:8884:8935	1487157	0	True				
ANR	1487200	IdentifierDecl	* n = u -> real ? flag -> realname : flag -> name		1487157	0					
ANR	1487201	IdentifierDeclType	const char *		1487157	0					
ANR	1487202	Identifier	n		1487157	1					
ANR	1487203	AssignmentExpression	* n = u -> real ? flag -> realname : flag -> name		1487157	2		=			
ANR	1487204	Identifier	n		1487157	0					
ANR	1487205	ConditionalExpression	u -> real ? flag -> realname : flag -> name		1487157	1					
ANR	1487206	Condition	u -> real		1487157	0					
ANR	1487207	PtrMemberAccess	u -> real		1487157	0					
ANR	1487208	Identifier	u		1487157	0					
ANR	1487209	Identifier	real		1487157	1					
ANR	1487210	PtrMemberAccess	flag -> realname		1487157	1					
ANR	1487211	Identifier	flag		1487157	0					
ANR	1487212	Identifier	realname		1487157	1					
ANR	1487213	PtrMemberAccess	flag -> name		1487157	2					
ANR	1487214	Identifier	flag		1487157	0					
ANR	1487215	Identifier	name		1487157	1					
ANR	1487216	Statement	u	370:2:8939:8939	1487157	1	True				
ANR	1487217	Statement	->	370:3:8940:8941	1487157	2	True				
ANR	1487218	Statement	f	370:5:8942:8942	1487157	3	True				
ANR	1487219	Statement	->	370:6:8943:8944	1487157	4	True				
ANR	1487220	Statement	cb_printf	370:8:8945:8953	1487157	5	True				
ANR	1487221	Statement	(	370:18:8955:8955	1487157	6	True				
ANR	1487222	Statement	"""%s %"""	370:19:8956:8961	1487157	7	True				
ANR	1487223	Statement	PFMT64d	370:25:8962:8968	1487157	8	True				
ANR	1487224	Statement	""" %s\\n"""	370:32:8969:8975	1487157	9	True				
ANR	1487225	Statement	","	370:39:8976:8976	1487157	10	True				
ANR	1487226	Statement	flag	370:41:8978:8981	1487157	11	True				
ANR	1487227	Statement	->	370:45:8982:8983	1487157	12	True				
ANR	1487228	Statement	alias	370:47:8984:8988	1487157	13	True				
ANR	1487229	Statement	","	370:52:8989:8989	1487157	14	True				
ANR	1487230	Statement	flag	370:54:8991:8994	1487157	15	True				
ANR	1487231	Statement	->	370:58:8995:8996	1487157	16	True				
ANR	1487232	Statement	size	370:60:8997:9000	1487157	17	True				
ANR	1487233	Statement	","	370:64:9001:9001	1487157	18	True				
ANR	1487234	Statement	n	370:66:9003:9003	1487157	19	True				
ANR	1487235	Statement	)	370:67:9004:9004	1487157	20	True				
ANR	1487236	ExpressionStatement		370:68:9005:9005	1487157	21	True				
ANR	1487237	ElseStatement	else		1487157	0					
ANR	1487238	CompoundStatement		10:2:316:402	1487157	0					
ANR	1487239	IdentifierDeclStatement	const char * n = u -> real ? flag -> realname : ( u -> f -> realnames ? flag -> realname : flag -> name ) ;	372:2:9019:9105	1487157	0	True				
ANR	1487240	IdentifierDecl	* n = u -> real ? flag -> realname : ( u -> f -> realnames ? flag -> realname : flag -> name )		1487157	0					
ANR	1487241	IdentifierDeclType	const char *		1487157	0					
ANR	1487242	Identifier	n		1487157	1					
ANR	1487243	AssignmentExpression	* n = u -> real ? flag -> realname : ( u -> f -> realnames ? flag -> realname : flag -> name )		1487157	2		=			
ANR	1487244	Identifier	n		1487157	0					
ANR	1487245	ConditionalExpression	u -> real ? flag -> realname : ( u -> f -> realnames ? flag -> realname : flag -> name )		1487157	1					
ANR	1487246	Condition	u -> real		1487157	0					
ANR	1487247	PtrMemberAccess	u -> real		1487157	0					
ANR	1487248	Identifier	u		1487157	0					
ANR	1487249	Identifier	real		1487157	1					
ANR	1487250	PtrMemberAccess	flag -> realname		1487157	1					
ANR	1487251	Identifier	flag		1487157	0					
ANR	1487252	Identifier	realname		1487157	1					
ANR	1487253	ConditionalExpression	u -> f -> realnames ? flag -> realname : flag -> name		1487157	2					
ANR	1487254	Condition	u -> f -> realnames		1487157	0					
ANR	1487255	PtrMemberAccess	u -> f -> realnames		1487157	0					
ANR	1487256	PtrMemberAccess	u -> f		1487157	0					
ANR	1487257	Identifier	u		1487157	0					
ANR	1487258	Identifier	f		1487157	1					
ANR	1487259	Identifier	realnames		1487157	1					
ANR	1487260	PtrMemberAccess	flag -> realname		1487157	1					
ANR	1487261	Identifier	flag		1487157	0					
ANR	1487262	Identifier	realname		1487157	1					
ANR	1487263	PtrMemberAccess	flag -> name		1487157	2					
ANR	1487264	Identifier	flag		1487157	0					
ANR	1487265	Identifier	name		1487157	1					
ANR	1487266	Statement	u	373:2:9109:9109	1487157	1	True				
ANR	1487267	Statement	->	373:3:9110:9111	1487157	2	True				
ANR	1487268	Statement	f	373:5:9112:9112	1487157	3	True				
ANR	1487269	Statement	->	373:6:9113:9114	1487157	4	True				
ANR	1487270	Statement	cb_printf	373:8:9115:9123	1487157	5	True				
ANR	1487271	Statement	(	373:18:9125:9125	1487157	6	True				
ANR	1487272	Statement	"""0x%08"""	373:19:9126:9132	1487157	7	True				
ANR	1487273	Statement	PFMT64x	373:27:9134:9140	1487157	8	True				
ANR	1487274	Statement	""" %"""	373:35:9142:9145	1487157	9	True				
ANR	1487275	Statement	PFMT64d	373:40:9147:9153	1487157	10	True				
ANR	1487276	Statement	""" %s\\n"""	373:48:9155:9161	1487157	11	True				
ANR	1487277	Statement	","	373:55:9162:9162	1487157	12	True				
ANR	1487278	Statement	flag	373:57:9164:9167	1487157	13	True				
ANR	1487279	Statement	->	373:61:9168:9169	1487157	14	True				
ANR	1487280	Statement	offset	373:63:9170:9175	1487157	15	True				
ANR	1487281	Statement	","	373:69:9176:9176	1487157	16	True				
ANR	1487282	Statement	flag	373:71:9178:9181	1487157	17	True				
ANR	1487283	Statement	->	373:75:9182:9183	1487157	18	True				
ANR	1487284	Statement	size	373:77:9184:9187	1487157	19	True				
ANR	1487285	Statement	","	373:81:9188:9188	1487157	20	True				
ANR	1487286	Statement	n	373:83:9190:9190	1487157	21	True				
ANR	1487287	Statement	)	373:84:9191:9191	1487157	22	True				
ANR	1487288	ExpressionStatement		373:85:9192:9192	1487157	23	True				
ANR	1487289	ReturnStatement	return true ;	375:1:9198:9209	1487157	3	True				
ANR	1487290	Identifier	true		1487157	0					
ANR	1487291	ReturnType	static bool		1487157	1					
ANR	1487292	Identifier	print_flag_orig_name		1487157	2					
ANR	1487293	ParameterList	"RFlagItem * flag , void * user"		1487157	3					
ANR	1487294	Parameter	RFlagItem * flag	363:33:8673:8687	1487157	0	True				
ANR	1487295	ParameterType	RFlagItem *		1487157	0					
ANR	1487296	Identifier	flag		1487157	1					
ANR	1487297	Parameter	void * user	363:50:8690:8699	1487157	1	True				
ANR	1487298	ParameterType	void *		1487157	0					
ANR	1487299	Identifier	user		1487157	1					
ANR	1487300	CFGEntryNode	ENTRY		1487157		True				
ANR	1487301	CFGExitNode	EXIT		1487157		True				
ANR	1487302	Symbol	* u -> f		1487157						
ANR	1487303	Symbol	flag		1487157						
ANR	1487304	Symbol	flag -> name		1487157						
ANR	1487305	Symbol	u -> real		1487157						
ANR	1487306	Symbol	n		1487157						
ANR	1487307	Symbol	u -> f -> realnames		1487157						
ANR	1487308	Symbol	flag -> alias		1487157						
ANR	1487309	Symbol	u -> range_to		1487157						
ANR	1487310	Symbol	flag -> realname		1487157						
ANR	1487311	Symbol	u		1487157						
ANR	1487312	Symbol	* * u		1487157						
ANR	1487313	Symbol	true		1487157						
ANR	1487314	Symbol	flag -> offset		1487157						
ANR	1487315	Symbol	* flag		1487157						
ANR	1487316	Symbol	user		1487157						
ANR	1487317	Symbol	u -> in_range		1487157						
ANR	1487318	Symbol	u -> f		1487157						
ANR	1487319	Symbol	u -> range_from		1487157						
ANR	1487320	Symbol	* u		1487157						
ANR	1487321	Function	r_flag_list	379:0:9289:11265							
ANR	1487322	FunctionDef	"r_flag_list (RFlag * f , int rad , const char * pfx)"		1487321	0					
ANR	1487323	CompoundStatement		379:59:9348:11265	1487321	0					
ANR	1487324	ExpressionStatement	r_return_if_fail ( f )	380:1:9351:9371	1487321	0	True				
ANR	1487325	CallExpression	r_return_if_fail ( f )		1487321	0					
ANR	1487326	Callee	r_return_if_fail		1487321	0					
ANR	1487327	Identifier	r_return_if_fail		1487321	0					
ANR	1487328	ArgumentList	f		1487321	1					
ANR	1487329	Argument	f		1487321	0					
ANR	1487330	Identifier	f		1487321	0					
ANR	1487331	IdentifierDeclStatement	bool in_range = false ;	381:1:9374:9395	1487321	1	True				
ANR	1487332	IdentifierDecl	in_range = false		1487321	0					
ANR	1487333	IdentifierDeclType	bool		1487321	0					
ANR	1487334	Identifier	in_range		1487321	1					
ANR	1487335	AssignmentExpression	in_range = false		1487321	2		=			
ANR	1487336	Identifier	false		1487321	0					
ANR	1487337	Identifier	false		1487321	1					
ANR	1487338	IdentifierDeclStatement	ut64 range_from = UT64_MAX ;	382:1:9398:9424	1487321	2	True				
ANR	1487339	IdentifierDecl	range_from = UT64_MAX		1487321	0					
ANR	1487340	IdentifierDeclType	ut64		1487321	0					
ANR	1487341	Identifier	range_from		1487321	1					
ANR	1487342	AssignmentExpression	range_from = UT64_MAX		1487321	2		=			
ANR	1487343	Identifier	UT64_MAX		1487321	0					
ANR	1487344	Identifier	UT64_MAX		1487321	1					
ANR	1487345	IdentifierDeclStatement	ut64 range_to = UT64_MAX ;	383:1:9427:9451	1487321	3	True				
ANR	1487346	IdentifierDecl	range_to = UT64_MAX		1487321	0					
ANR	1487347	IdentifierDeclType	ut64		1487321	0					
ANR	1487348	Identifier	range_to		1487321	1					
ANR	1487349	AssignmentExpression	range_to = UT64_MAX		1487321	2		=			
ANR	1487350	Identifier	UT64_MAX		1487321	0					
ANR	1487351	Identifier	UT64_MAX		1487321	1					
ANR	1487352	IfStatement	if ( rad == 'i' )		1487321	4					
ANR	1487353	Condition	rad == 'i'	384:5:9458:9467	1487321	0	True				
ANR	1487354	EqualityExpression	rad == 'i'		1487321	0		==			
ANR	1487355	Identifier	rad		1487321	0					
ANR	1487356	PrimaryExpression	'i'		1487321	1					
ANR	1487357	CompoundStatement		7:2:125:158	1487321	1					
ANR	1487358	IdentifierDeclStatement	"char * sp , * arg = strdup ( pfx + 1 ) ;"	385:2:9474:9507	1487321	0	True				
ANR	1487359	IdentifierDecl	* sp		1487321	0					
ANR	1487360	IdentifierDeclType	char *		1487321	0					
ANR	1487361	Identifier	sp		1487321	1					
ANR	1487362	IdentifierDecl	* arg = strdup ( pfx + 1 )		1487321	1					
ANR	1487363	IdentifierDeclType	char *		1487321	0					
ANR	1487364	Identifier	arg		1487321	1					
ANR	1487365	AssignmentExpression	* arg = strdup ( pfx + 1 )		1487321	2		=			
ANR	1487366	Identifier	arg		1487321	0					
ANR	1487367	CallExpression	strdup ( pfx + 1 )		1487321	1					
ANR	1487368	Callee	strdup		1487321	0					
ANR	1487369	Identifier	strdup		1487321	0					
ANR	1487370	ArgumentList	pfx + 1		1487321	1					
ANR	1487371	Argument	pfx + 1		1487321	0					
ANR	1487372	AdditiveExpression	pfx + 1		1487321	0		+			
ANR	1487373	Identifier	pfx		1487321	0					
ANR	1487374	PrimaryExpression	1		1487321	1					
ANR	1487375	ExpressionStatement	"sp = strchr ( arg , ' ' )"	386:2:9511:9534	1487321	1	True				
ANR	1487376	AssignmentExpression	"sp = strchr ( arg , ' ' )"		1487321	0		=			
ANR	1487377	Identifier	sp		1487321	0					
ANR	1487378	CallExpression	"strchr ( arg , ' ' )"		1487321	1					
ANR	1487379	Callee	strchr		1487321	0					
ANR	1487380	Identifier	strchr		1487321	0					
ANR	1487381	ArgumentList	arg		1487321	1					
ANR	1487382	Argument	arg		1487321	0					
ANR	1487383	Identifier	arg		1487321	0					
ANR	1487384	Argument	' '		1487321	1					
ANR	1487385	PrimaryExpression	' '		1487321	0					
ANR	1487386	IfStatement	if ( sp )		1487321	2					
ANR	1487387	Condition	sp	387:6:9542:9543	1487321	0	True				
ANR	1487388	Identifier	sp		1487321	0					
ANR	1487389	CompoundStatement		9:10:197:197	1487321	1					
ANR	1487390	ExpressionStatement	* sp ++ = 0	388:3:9551:9560	1487321	0	True				
ANR	1487391	AssignmentExpression	* sp ++ = 0		1487321	0		=			
ANR	1487392	UnaryOperationExpression	* sp ++		1487321	0					
ANR	1487393	UnaryOperator	*		1487321	0					
ANR	1487394	PostIncDecOperationExpression	sp ++		1487321	1					
ANR	1487395	Identifier	sp		1487321	0					
ANR	1487396	IncDec	++		1487321	1					
ANR	1487397	PrimaryExpression	0		1487321	1					
ANR	1487398	ExpressionStatement	"range_from = r_num_math ( f -> num , arg )"	389:3:9565:9602	1487321	1	True				
ANR	1487399	AssignmentExpression	"range_from = r_num_math ( f -> num , arg )"		1487321	0		=			
ANR	1487400	Identifier	range_from		1487321	0					
ANR	1487401	CallExpression	"r_num_math ( f -> num , arg )"		1487321	1					
ANR	1487402	Callee	r_num_math		1487321	0					
ANR	1487403	Identifier	r_num_math		1487321	0					
ANR	1487404	ArgumentList	f -> num		1487321	1					
ANR	1487405	Argument	f -> num		1487321	0					
ANR	1487406	PtrMemberAccess	f -> num		1487321	0					
ANR	1487407	Identifier	f		1487321	0					
ANR	1487408	Identifier	num		1487321	1					
ANR	1487409	Argument	arg		1487321	1					
ANR	1487410	Identifier	arg		1487321	0					
ANR	1487411	ExpressionStatement	"range_to = r_num_math ( f -> num , sp )"	390:3:9607:9641	1487321	2	True				
ANR	1487412	AssignmentExpression	"range_to = r_num_math ( f -> num , sp )"		1487321	0		=			
ANR	1487413	Identifier	range_to		1487321	0					
ANR	1487414	CallExpression	"r_num_math ( f -> num , sp )"		1487321	1					
ANR	1487415	Callee	r_num_math		1487321	0					
ANR	1487416	Identifier	r_num_math		1487321	0					
ANR	1487417	ArgumentList	f -> num		1487321	1					
ANR	1487418	Argument	f -> num		1487321	0					
ANR	1487419	PtrMemberAccess	f -> num		1487321	0					
ANR	1487420	Identifier	f		1487321	0					
ANR	1487421	Identifier	num		1487321	1					
ANR	1487422	Argument	sp		1487321	1					
ANR	1487423	Identifier	sp		1487321	0					
ANR	1487424	ElseStatement	else		1487321	0					
ANR	1487425	CompoundStatement		14:3:308:330	1487321	0					
ANR	1487426	IdentifierDeclStatement	const int bsize = 4096 ;	392:3:9657:9679	1487321	0	True				
ANR	1487427	IdentifierDecl	bsize = 4096		1487321	0					
ANR	1487428	IdentifierDeclType	const int		1487321	0					
ANR	1487429	Identifier	bsize		1487321	1					
ANR	1487430	AssignmentExpression	bsize = 4096		1487321	2		=			
ANR	1487431	Identifier	bsize		1487321	0					
ANR	1487432	PrimaryExpression	4096		1487321	1					
ANR	1487433	ExpressionStatement	"range_from = r_num_math ( f -> num , arg )"	393:3:9684:9721	1487321	1	True				
ANR	1487434	AssignmentExpression	"range_from = r_num_math ( f -> num , arg )"		1487321	0		=			
ANR	1487435	Identifier	range_from		1487321	0					
ANR	1487436	CallExpression	"r_num_math ( f -> num , arg )"		1487321	1					
ANR	1487437	Callee	r_num_math		1487321	0					
ANR	1487438	Identifier	r_num_math		1487321	0					
ANR	1487439	ArgumentList	f -> num		1487321	1					
ANR	1487440	Argument	f -> num		1487321	0					
ANR	1487441	PtrMemberAccess	f -> num		1487321	0					
ANR	1487442	Identifier	f		1487321	0					
ANR	1487443	Identifier	num		1487321	1					
ANR	1487444	Argument	arg		1487321	1					
ANR	1487445	Identifier	arg		1487321	0					
ANR	1487446	ExpressionStatement	range_to = range_from + bsize	394:3:9726:9755	1487321	2	True				
ANR	1487447	AssignmentExpression	range_to = range_from + bsize		1487321	0		=			
ANR	1487448	Identifier	range_to		1487321	0					
ANR	1487449	AdditiveExpression	range_from + bsize		1487321	1		+			
ANR	1487450	Identifier	range_from		1487321	0					
ANR	1487451	Identifier	bsize		1487321	1					
ANR	1487452	ExpressionStatement	in_range = true	396:2:9763:9778	1487321	3	True				
ANR	1487453	AssignmentExpression	in_range = true		1487321	0		=			
ANR	1487454	Identifier	in_range		1487321	0					
ANR	1487455	Identifier	true		1487321	1					
ANR	1487456	ExpressionStatement	free ( arg )	397:2:9782:9792	1487321	4	True				
ANR	1487457	CallExpression	free ( arg )		1487321	0					
ANR	1487458	Callee	free		1487321	0					
ANR	1487459	Identifier	free		1487321	0					
ANR	1487460	ArgumentList	arg		1487321	1					
ANR	1487461	Argument	arg		1487321	0					
ANR	1487462	Identifier	arg		1487321	0					
ANR	1487463	ExpressionStatement	rad = pfx [ 0 ]	398:2:9796:9808	1487321	5	True				
ANR	1487464	AssignmentExpression	rad = pfx [ 0 ]		1487321	0		=			
ANR	1487465	Identifier	rad		1487321	0					
ANR	1487466	ArrayIndexing	pfx [ 0 ]		1487321	1					
ANR	1487467	Identifier	pfx		1487321	0					
ANR	1487468	PrimaryExpression	0		1487321	1					
ANR	1487469	ExpressionStatement	pfx = NULL	399:2:9812:9822	1487321	6	True				
ANR	1487470	AssignmentExpression	pfx = NULL		1487321	0		=			
ANR	1487471	Identifier	pfx		1487321	0					
ANR	1487472	Identifier	NULL		1487321	1					
ANR	1487473	IfStatement	if ( pfx && ! * pfx )		1487321	5					
ANR	1487474	Condition	pfx && ! * pfx	402:5:9833:9844	1487321	0	True				
ANR	1487475	AndExpression	pfx && ! * pfx		1487321	0		&&			
ANR	1487476	Identifier	pfx		1487321	0					
ANR	1487477	UnaryOperationExpression	! * pfx		1487321	1					
ANR	1487478	UnaryOperator	!		1487321	0					
ANR	1487479	UnaryOperationExpression	* pfx		1487321	1					
ANR	1487480	UnaryOperator	*		1487321	0					
ANR	1487481	Identifier	pfx		1487321	1					
ANR	1487482	CompoundStatement		24:19:498:498	1487321	1					
ANR	1487483	ExpressionStatement	pfx = NULL	403:2:9851:9861	1487321	0	True				
ANR	1487484	AssignmentExpression	pfx = NULL		1487321	0		=			
ANR	1487485	Identifier	pfx		1487321	0					
ANR	1487486	Identifier	NULL		1487321	1					
ANR	1487487	SwitchStatement	switch ( rad )		1487321	6					
ANR	1487488	Condition	rad	406:9:9876:9878	1487321	0	True				
ANR	1487489	Identifier	rad		1487321	0					
ANR	1487490	CompoundStatement		28:14:532:532	1487321	1					
ANR	1487491	Label	case 'q' :	407:1:9884:9892	1487321	0	True				
ANR	1487492	ExpressionStatement	"r_flag_foreach_space ( f , r_flag_space_cur ( f ) , print_flag_name , f )"	408:2:9896:9962	1487321	1	True				
ANR	1487493	CallExpression	"r_flag_foreach_space ( f , r_flag_space_cur ( f ) , print_flag_name , f )"		1487321	0					
ANR	1487494	Callee	r_flag_foreach_space		1487321	0					
ANR	1487495	Identifier	r_flag_foreach_space		1487321	0					
ANR	1487496	ArgumentList	f		1487321	1					
ANR	1487497	Argument	f		1487321	0					
ANR	1487498	Identifier	f		1487321	0					
ANR	1487499	Argument	r_flag_space_cur ( f )		1487321	1					
ANR	1487500	CallExpression	r_flag_space_cur ( f )		1487321	0					
ANR	1487501	Callee	r_flag_space_cur		1487321	0					
ANR	1487502	Identifier	r_flag_space_cur		1487321	0					
ANR	1487503	ArgumentList	f		1487321	1					
ANR	1487504	Argument	f		1487321	0					
ANR	1487505	Identifier	f		1487321	0					
ANR	1487506	Argument	print_flag_name		1487321	2					
ANR	1487507	Identifier	print_flag_name		1487321	0					
ANR	1487508	Argument	f		1487321	3					
ANR	1487509	Identifier	f		1487321	0					
ANR	1487510	BreakStatement	break ;	409:2:9966:9971	1487321	2	True				
ANR	1487511	Label	case 'j' :	410:1:9974:9982	1487321	3	True				
ANR	1487512	CompoundStatement		33:2:639:657	1487321	4					
ANR	1487513	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	411:2:9988:10006	1487321	0	True				
ANR	1487514	IdentifierDecl	* pj = pj_new ( )		1487321	0					
ANR	1487515	IdentifierDeclType	PJ *		1487321	0					
ANR	1487516	Identifier	pj		1487321	1					
ANR	1487517	AssignmentExpression	* pj = pj_new ( )		1487321	2		=			
ANR	1487518	Identifier	pj		1487321	0					
ANR	1487519	CallExpression	pj_new ( )		1487321	1					
ANR	1487520	Callee	pj_new		1487321	0					
ANR	1487521	Identifier	pj_new		1487321	0					
ANR	1487522	ArgumentList			1487321	1					
ANR	1487523	Statement	struct	412:2:10010:10015	1487321	1	True				
ANR	1487524	Statement	print_flag_t	412:9:10017:10028	1487321	2	True				
ANR	1487525	Statement	u	412:22:10030:10030	1487321	3	True				
ANR	1487526	Statement	=	412:24:10032:10032	1487321	4	True				
ANR	1487527	CompoundStatement		34:26:685:685	1487321	5					
ANR	1487528	Statement	.	413:3:10039:10039	1487321	0	True				
ANR	1487529	Statement	f	413:4:10040:10040	1487321	1	True				
ANR	1487530	Statement	=	413:6:10042:10042	1487321	2	True				
ANR	1487531	Statement	f	413:8:10044:10044	1487321	3	True				
ANR	1487532	Statement	","	413:9:10045:10045	1487321	4	True				
ANR	1487533	Statement	.	414:3:10050:10050	1487321	5	True				
ANR	1487534	Statement	pj	414:4:10051:10052	1487321	6	True				
ANR	1487535	Statement	=	414:7:10054:10054	1487321	7	True				
ANR	1487536	Statement	pj	414:9:10056:10057	1487321	8	True				
ANR	1487537	Statement	","	414:11:10058:10058	1487321	9	True				
ANR	1487538	Statement	.	415:3:10063:10063	1487321	10	True				
ANR	1487539	Statement	in_range	415:4:10064:10071	1487321	11	True				
ANR	1487540	Statement	=	415:13:10073:10073	1487321	12	True				
ANR	1487541	Statement	in_range	415:15:10075:10082	1487321	13	True				
ANR	1487542	Statement	","	415:23:10083:10083	1487321	14	True				
ANR	1487543	Statement	.	416:3:10088:10088	1487321	15	True				
ANR	1487544	Statement	range_from	416:4:10089:10098	1487321	16	True				
ANR	1487545	Statement	=	416:15:10100:10100	1487321	17	True				
ANR	1487546	Statement	range_from	416:17:10102:10111	1487321	18	True				
ANR	1487547	Statement	","	416:27:10112:10112	1487321	19	True				
ANR	1487548	Statement	.	417:3:10117:10117	1487321	20	True				
ANR	1487549	Statement	range_to	417:4:10118:10125	1487321	21	True				
ANR	1487550	Statement	=	417:13:10127:10127	1487321	22	True				
ANR	1487551	Statement	range_to	417:15:10129:10136	1487321	23	True				
ANR	1487552	Statement	","	417:23:10137:10137	1487321	24	True				
ANR	1487553	Statement	.	418:3:10142:10142	1487321	25	True				
ANR	1487554	Statement	real	418:4:10143:10146	1487321	26	True				
ANR	1487555	Statement	=	418:9:10148:10148	1487321	27	True				
ANR	1487556	Statement	false	418:11:10150:10154	1487321	28	True				
ANR	1487557	ExpressionStatement		419:3:10159:10159	1487321	6	True				
ANR	1487558	ExpressionStatement	pj_a ( pj )	420:2:10163:10172	1487321	7	True				
ANR	1487559	CallExpression	pj_a ( pj )		1487321	0					
ANR	1487560	Callee	pj_a		1487321	0					
ANR	1487561	Identifier	pj_a		1487321	0					
ANR	1487562	ArgumentList	pj		1487321	1					
ANR	1487563	Argument	pj		1487321	0					
ANR	1487564	Identifier	pj		1487321	0					
ANR	1487565	ExpressionStatement	"r_flag_foreach_space ( f , r_flag_space_cur ( f ) , print_flag_json , & u )"	421:2:10176:10243	1487321	8	True				
ANR	1487566	CallExpression	"r_flag_foreach_space ( f , r_flag_space_cur ( f ) , print_flag_json , & u )"		1487321	0					
ANR	1487567	Callee	r_flag_foreach_space		1487321	0					
ANR	1487568	Identifier	r_flag_foreach_space		1487321	0					
ANR	1487569	ArgumentList	f		1487321	1					
ANR	1487570	Argument	f		1487321	0					
ANR	1487571	Identifier	f		1487321	0					
ANR	1487572	Argument	r_flag_space_cur ( f )		1487321	1					
ANR	1487573	CallExpression	r_flag_space_cur ( f )		1487321	0					
ANR	1487574	Callee	r_flag_space_cur		1487321	0					
ANR	1487575	Identifier	r_flag_space_cur		1487321	0					
ANR	1487576	ArgumentList	f		1487321	1					
ANR	1487577	Argument	f		1487321	0					
ANR	1487578	Identifier	f		1487321	0					
ANR	1487579	Argument	print_flag_json		1487321	2					
ANR	1487580	Identifier	print_flag_json		1487321	0					
ANR	1487581	Argument	& u		1487321	3					
ANR	1487582	UnaryOperationExpression	& u		1487321	0					
ANR	1487583	UnaryOperator	&		1487321	0					
ANR	1487584	Identifier	u		1487321	1					
ANR	1487585	ExpressionStatement	pj_end ( pj )	422:2:10247:10258	1487321	9	True				
ANR	1487586	CallExpression	pj_end ( pj )		1487321	0					
ANR	1487587	Callee	pj_end		1487321	0					
ANR	1487588	Identifier	pj_end		1487321	0					
ANR	1487589	ArgumentList	pj		1487321	1					
ANR	1487590	Argument	pj		1487321	0					
ANR	1487591	Identifier	pj		1487321	0					
ANR	1487592	ExpressionStatement	"f -> cb_printf ( ""%s\\n"" , pj_string ( pj ) )"	423:2:10262:10299	1487321	10	True				
ANR	1487593	CallExpression	"f -> cb_printf ( ""%s\\n"" , pj_string ( pj ) )"		1487321	0					
ANR	1487594	Callee	f -> cb_printf		1487321	0					
ANR	1487595	PtrMemberAccess	f -> cb_printf		1487321	0					
ANR	1487596	Identifier	f		1487321	0					
ANR	1487597	Identifier	cb_printf		1487321	1					
ANR	1487598	ArgumentList	"""%s\\n"""		1487321	1					
ANR	1487599	Argument	"""%s\\n"""		1487321	0					
ANR	1487600	PrimaryExpression	"""%s\\n"""		1487321	0					
ANR	1487601	Argument	pj_string ( pj )		1487321	1					
ANR	1487602	CallExpression	pj_string ( pj )		1487321	0					
ANR	1487603	Callee	pj_string		1487321	0					
ANR	1487604	Identifier	pj_string		1487321	0					
ANR	1487605	ArgumentList	pj		1487321	1					
ANR	1487606	Argument	pj		1487321	0					
ANR	1487607	Identifier	pj		1487321	0					
ANR	1487608	ExpressionStatement	pj_free ( pj )	424:2:10303:10315	1487321	11	True				
ANR	1487609	CallExpression	pj_free ( pj )		1487321	0					
ANR	1487610	Callee	pj_free		1487321	0					
ANR	1487611	Identifier	pj_free		1487321	0					
ANR	1487612	ArgumentList	pj		1487321	1					
ANR	1487613	Argument	pj		1487321	0					
ANR	1487614	Identifier	pj		1487321	0					
ANR	1487615	BreakStatement	break ;	425:2:10319:10324	1487321	12	True				
ANR	1487616	Label	case 1 :	427:1:10330:10336	1487321	5	True				
ANR	1487617	Label	case '*' :	428:1:10339:10347	1487321	6	True				
ANR	1487618	CompoundStatement		50:11:1000:1000	1487321	7					
ANR	1487619	Statement	struct	429:2:10353:10358	1487321	0	True				
ANR	1487620	Statement	print_flag_t	429:9:10360:10371	1487321	1	True				
ANR	1487621	Statement	u	429:22:10373:10373	1487321	2	True				
ANR	1487622	Statement	=	429:24:10375:10375	1487321	3	True				
ANR	1487623	CompoundStatement		51:26:1028:1028	1487321	4					
ANR	1487624	Statement	.	430:3:10382:10382	1487321	0	True				
ANR	1487625	Statement	f	430:4:10383:10383	1487321	1	True				
ANR	1487626	Statement	=	430:6:10385:10385	1487321	2	True				
ANR	1487627	Statement	f	430:8:10387:10387	1487321	3	True				
ANR	1487628	Statement	","	430:9:10388:10388	1487321	4	True				
ANR	1487629	Statement	.	431:3:10393:10393	1487321	5	True				
ANR	1487630	Statement	in_range	431:4:10394:10401	1487321	6	True				
ANR	1487631	Statement	=	431:13:10403:10403	1487321	7	True				
ANR	1487632	Statement	in_range	431:15:10405:10412	1487321	8	True				
ANR	1487633	Statement	","	431:23:10413:10413	1487321	9	True				
ANR	1487634	Statement	.	432:3:10418:10418	1487321	10	True				
ANR	1487635	Statement	range_from	432:4:10419:10428	1487321	11	True				
ANR	1487636	Statement	=	432:15:10430:10430	1487321	12	True				
ANR	1487637	Statement	range_from	432:17:10432:10441	1487321	13	True				
ANR	1487638	Statement	","	432:27:10442:10442	1487321	14	True				
ANR	1487639	Statement	.	433:3:10447:10447	1487321	15	True				
ANR	1487640	Statement	range_to	433:4:10448:10455	1487321	16	True				
ANR	1487641	Statement	=	433:13:10457:10457	1487321	17	True				
ANR	1487642	Statement	range_to	433:15:10459:10466	1487321	18	True				
ANR	1487643	Statement	","	433:23:10467:10467	1487321	19	True				
ANR	1487644	Statement	.	434:3:10472:10472	1487321	20	True				
ANR	1487645	Statement	fs	434:4:10473:10474	1487321	21	True				
ANR	1487646	Statement	=	434:7:10476:10476	1487321	22	True				
ANR	1487647	Statement	NULL	434:9:10478:10481	1487321	23	True				
ANR	1487648	Statement	","	434:13:10482:10482	1487321	24	True				
ANR	1487649	Statement	.	435:3:10487:10487	1487321	25	True				
ANR	1487650	Statement	pfx	435:4:10488:10490	1487321	26	True				
ANR	1487651	Statement	=	435:8:10492:10492	1487321	27	True				
ANR	1487652	Statement	pfx	435:10:10494:10496	1487321	28	True				
ANR	1487653	ExpressionStatement		436:3:10501:10501	1487321	5	True				
ANR	1487654	ExpressionStatement	"r_flag_foreach_space ( f , r_flag_space_cur ( f ) , print_flag_rad , & u )"	437:2:10505:10571	1487321	6	True				
ANR	1487655	CallExpression	"r_flag_foreach_space ( f , r_flag_space_cur ( f ) , print_flag_rad , & u )"		1487321	0					
ANR	1487656	Callee	r_flag_foreach_space		1487321	0					
ANR	1487657	Identifier	r_flag_foreach_space		1487321	0					
ANR	1487658	ArgumentList	f		1487321	1					
ANR	1487659	Argument	f		1487321	0					
ANR	1487660	Identifier	f		1487321	0					
ANR	1487661	Argument	r_flag_space_cur ( f )		1487321	1					
ANR	1487662	CallExpression	r_flag_space_cur ( f )		1487321	0					
ANR	1487663	Callee	r_flag_space_cur		1487321	0					
ANR	1487664	Identifier	r_flag_space_cur		1487321	0					
ANR	1487665	ArgumentList	f		1487321	1					
ANR	1487666	Argument	f		1487321	0					
ANR	1487667	Identifier	f		1487321	0					
ANR	1487668	Argument	print_flag_rad		1487321	2					
ANR	1487669	Identifier	print_flag_rad		1487321	0					
ANR	1487670	Argument	& u		1487321	3					
ANR	1487671	UnaryOperationExpression	& u		1487321	0					
ANR	1487672	UnaryOperator	&		1487321	0					
ANR	1487673	Identifier	u		1487321	1					
ANR	1487674	BreakStatement	break ;	438:2:10575:10580	1487321	7	True				
ANR	1487675	Label	default :	440:1:10586:10593	1487321	8	True				
ANR	1487676	Identifier	default		1487321	0					
ANR	1487677	Label	case 'n' :	441:1:10596:10604	1487321	9	True				
ANR	1487678	CompoundStatement		63:11:1257:1257	1487321	10					
ANR	1487679	IfStatement	if ( ! pfx || pfx [ 0 ] != 'j' )		1487321	0					
ANR	1487680	Condition	! pfx || pfx [ 0 ] != 'j'	442:6:10614:10634	1487321	0	True				
ANR	1487681	OrExpression	! pfx || pfx [ 0 ] != 'j'		1487321	0		||			
ANR	1487682	UnaryOperationExpression	! pfx		1487321	0					
ANR	1487683	UnaryOperator	!		1487321	0					
ANR	1487684	Identifier	pfx		1487321	1					
ANR	1487685	EqualityExpression	pfx [ 0 ] != 'j'		1487321	1		!=			
ANR	1487686	ArrayIndexing	pfx [ 0 ]		1487321	0					
ANR	1487687	Identifier	pfx		1487321	0					
ANR	1487688	PrimaryExpression	0		1487321	1					
ANR	1487689	PrimaryExpression	'j'		1487321	1					
ANR	1487690	CompoundStatement		64:29:1288:1288	1487321	1					
ANR	1487691	Statement	struct	443:3:10663:10668	1487321	0	True				
ANR	1487692	Statement	print_flag_t	443:10:10670:10681	1487321	1	True				
ANR	1487693	Statement	u	443:23:10683:10683	1487321	2	True				
ANR	1487694	Statement	=	443:25:10685:10685	1487321	3	True				
ANR	1487695	CompoundStatement		65:27:1338:1338	1487321	4					
ANR	1487696	Statement	.	444:4:10693:10693	1487321	0	True				
ANR	1487697	Statement	f	444:5:10694:10694	1487321	1	True				
ANR	1487698	Statement	=	444:7:10696:10696	1487321	2	True				
ANR	1487699	Statement	f	444:9:10698:10698	1487321	3	True				
ANR	1487700	Statement	","	444:10:10699:10699	1487321	4	True				
ANR	1487701	Statement	.	445:4:10705:10705	1487321	5	True				
ANR	1487702	Statement	in_range	445:5:10706:10713	1487321	6	True				
ANR	1487703	Statement	=	445:14:10715:10715	1487321	7	True				
ANR	1487704	Statement	in_range	445:16:10717:10724	1487321	8	True				
ANR	1487705	Statement	","	445:24:10725:10725	1487321	9	True				
ANR	1487706	Statement	.	446:4:10731:10731	1487321	10	True				
ANR	1487707	Statement	range_from	446:5:10732:10741	1487321	11	True				
ANR	1487708	Statement	=	446:16:10743:10743	1487321	12	True				
ANR	1487709	Statement	range_from	446:18:10745:10754	1487321	13	True				
ANR	1487710	Statement	","	446:28:10755:10755	1487321	14	True				
ANR	1487711	Statement	.	447:4:10761:10761	1487321	15	True				
ANR	1487712	Statement	range_to	447:5:10762:10769	1487321	16	True				
ANR	1487713	Statement	=	447:14:10771:10771	1487321	17	True				
ANR	1487714	Statement	range_to	447:16:10773:10780	1487321	18	True				
ANR	1487715	Statement	","	447:24:10781:10781	1487321	19	True				
ANR	1487716	Statement	.	448:4:10787:10787	1487321	20	True				
ANR	1487717	Statement	real	448:5:10788:10791	1487321	21	True				
ANR	1487718	Statement	=	448:10:10793:10793	1487321	22	True				
ANR	1487719	Statement	(	448:12:10795:10795	1487321	23	True				
ANR	1487720	Statement	rad	448:13:10796:10798	1487321	24	True				
ANR	1487721	Statement	==	448:17:10800:10801	1487321	25	True				
ANR	1487722	Statement	'n'	448:20:10803:10805	1487321	26	True				
ANR	1487723	Statement	)	448:23:10806:10806	1487321	27	True				
ANR	1487724	ExpressionStatement		449:4:10812:10812	1487321	5	True				
ANR	1487725	ExpressionStatement	"r_flag_foreach_space ( f , r_flag_space_cur ( f ) , print_flag_orig_name , & u )"	450:3:10817:10889	1487321	6	True				
ANR	1487726	CallExpression	"r_flag_foreach_space ( f , r_flag_space_cur ( f ) , print_flag_orig_name , & u )"		1487321	0					
ANR	1487727	Callee	r_flag_foreach_space		1487321	0					
ANR	1487728	Identifier	r_flag_foreach_space		1487321	0					
ANR	1487729	ArgumentList	f		1487321	1					
ANR	1487730	Argument	f		1487321	0					
ANR	1487731	Identifier	f		1487321	0					
ANR	1487732	Argument	r_flag_space_cur ( f )		1487321	1					
ANR	1487733	CallExpression	r_flag_space_cur ( f )		1487321	0					
ANR	1487734	Callee	r_flag_space_cur		1487321	0					
ANR	1487735	Identifier	r_flag_space_cur		1487321	0					
ANR	1487736	ArgumentList	f		1487321	1					
ANR	1487737	Argument	f		1487321	0					
ANR	1487738	Identifier	f		1487321	0					
ANR	1487739	Argument	print_flag_orig_name		1487321	2					
ANR	1487740	Identifier	print_flag_orig_name		1487321	0					
ANR	1487741	Argument	& u		1487321	3					
ANR	1487742	UnaryOperationExpression	& u		1487321	0					
ANR	1487743	UnaryOperator	&		1487321	0					
ANR	1487744	Identifier	u		1487321	1					
ANR	1487745	ElseStatement	else		1487321	0					
ANR	1487746	CompoundStatement		74:3:1556:1574	1487321	0					
ANR	1487747	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	452:3:10905:10923	1487321	0	True				
ANR	1487748	IdentifierDecl	* pj = pj_new ( )		1487321	0					
ANR	1487749	IdentifierDeclType	PJ *		1487321	0					
ANR	1487750	Identifier	pj		1487321	1					
ANR	1487751	AssignmentExpression	* pj = pj_new ( )		1487321	2		=			
ANR	1487752	Identifier	pj		1487321	0					
ANR	1487753	CallExpression	pj_new ( )		1487321	1					
ANR	1487754	Callee	pj_new		1487321	0					
ANR	1487755	Identifier	pj_new		1487321	0					
ANR	1487756	ArgumentList			1487321	1					
ANR	1487757	Statement	struct	453:3:10928:10933	1487321	1	True				
ANR	1487758	Statement	print_flag_t	453:10:10935:10946	1487321	2	True				
ANR	1487759	Statement	u	453:23:10948:10948	1487321	3	True				
ANR	1487760	Statement	=	453:25:10950:10950	1487321	4	True				
ANR	1487761	CompoundStatement		75:27:1603:1603	1487321	5					
ANR	1487762	Statement	.	454:4:10958:10958	1487321	0	True				
ANR	1487763	Statement	f	454:5:10959:10959	1487321	1	True				
ANR	1487764	Statement	=	454:7:10961:10961	1487321	2	True				
ANR	1487765	Statement	f	454:9:10963:10963	1487321	3	True				
ANR	1487766	Statement	","	454:10:10964:10964	1487321	4	True				
ANR	1487767	Statement	.	455:4:10970:10970	1487321	5	True				
ANR	1487768	Statement	pj	455:5:10971:10972	1487321	6	True				
ANR	1487769	Statement	=	455:8:10974:10974	1487321	7	True				
ANR	1487770	Statement	pj	455:10:10976:10977	1487321	8	True				
ANR	1487771	Statement	","	455:12:10978:10978	1487321	9	True				
ANR	1487772	Statement	.	456:4:10984:10984	1487321	10	True				
ANR	1487773	Statement	in_range	456:5:10985:10992	1487321	11	True				
ANR	1487774	Statement	=	456:14:10994:10994	1487321	12	True				
ANR	1487775	Statement	in_range	456:16:10996:11003	1487321	13	True				
ANR	1487776	Statement	","	456:24:11004:11004	1487321	14	True				
ANR	1487777	Statement	.	457:4:11010:11010	1487321	15	True				
ANR	1487778	Statement	range_from	457:5:11011:11020	1487321	16	True				
ANR	1487779	Statement	=	457:16:11022:11022	1487321	17	True				
ANR	1487780	Statement	range_from	457:18:11024:11033	1487321	18	True				
ANR	1487781	Statement	","	457:28:11034:11034	1487321	19	True				
ANR	1487782	Statement	.	458:4:11040:11040	1487321	20	True				
ANR	1487783	Statement	range_to	458:5:11041:11048	1487321	21	True				
ANR	1487784	Statement	=	458:14:11050:11050	1487321	22	True				
ANR	1487785	Statement	range_to	458:16:11052:11059	1487321	23	True				
ANR	1487786	Statement	","	458:24:11060:11060	1487321	24	True				
ANR	1487787	Statement	.	459:4:11066:11066	1487321	25	True				
ANR	1487788	Statement	real	459:5:11067:11070	1487321	26	True				
ANR	1487789	Statement	=	459:10:11072:11072	1487321	27	True				
ANR	1487790	Statement	true	459:12:11074:11077	1487321	28	True				
ANR	1487791	ExpressionStatement		460:4:11083:11083	1487321	6	True				
ANR	1487792	ExpressionStatement	pj_a ( pj )	461:3:11088:11097	1487321	7	True				
ANR	1487793	CallExpression	pj_a ( pj )		1487321	0					
ANR	1487794	Callee	pj_a		1487321	0					
ANR	1487795	Identifier	pj_a		1487321	0					
ANR	1487796	ArgumentList	pj		1487321	1					
ANR	1487797	Argument	pj		1487321	0					
ANR	1487798	Identifier	pj		1487321	0					
ANR	1487799	ExpressionStatement	"r_flag_foreach_space ( f , r_flag_space_cur ( f ) , print_flag_json , & u )"	462:3:11102:11169	1487321	8	True				
ANR	1487800	CallExpression	"r_flag_foreach_space ( f , r_flag_space_cur ( f ) , print_flag_json , & u )"		1487321	0					
ANR	1487801	Callee	r_flag_foreach_space		1487321	0					
ANR	1487802	Identifier	r_flag_foreach_space		1487321	0					
ANR	1487803	ArgumentList	f		1487321	1					
ANR	1487804	Argument	f		1487321	0					
ANR	1487805	Identifier	f		1487321	0					
ANR	1487806	Argument	r_flag_space_cur ( f )		1487321	1					
ANR	1487807	CallExpression	r_flag_space_cur ( f )		1487321	0					
ANR	1487808	Callee	r_flag_space_cur		1487321	0					
ANR	1487809	Identifier	r_flag_space_cur		1487321	0					
ANR	1487810	ArgumentList	f		1487321	1					
ANR	1487811	Argument	f		1487321	0					
ANR	1487812	Identifier	f		1487321	0					
ANR	1487813	Argument	print_flag_json		1487321	2					
ANR	1487814	Identifier	print_flag_json		1487321	0					
ANR	1487815	Argument	& u		1487321	3					
ANR	1487816	UnaryOperationExpression	& u		1487321	0					
ANR	1487817	UnaryOperator	&		1487321	0					
ANR	1487818	Identifier	u		1487321	1					
ANR	1487819	ExpressionStatement	pj_end ( pj )	463:3:11174:11185	1487321	9	True				
ANR	1487820	CallExpression	pj_end ( pj )		1487321	0					
ANR	1487821	Callee	pj_end		1487321	0					
ANR	1487822	Identifier	pj_end		1487321	0					
ANR	1487823	ArgumentList	pj		1487321	1					
ANR	1487824	Argument	pj		1487321	0					
ANR	1487825	Identifier	pj		1487321	0					
ANR	1487826	ExpressionStatement	"f -> cb_printf ( ""%s\\n"" , pj_string ( pj ) )"	464:3:11190:11227	1487321	10	True				
ANR	1487827	CallExpression	"f -> cb_printf ( ""%s\\n"" , pj_string ( pj ) )"		1487321	0					
ANR	1487828	Callee	f -> cb_printf		1487321	0					
ANR	1487829	PtrMemberAccess	f -> cb_printf		1487321	0					
ANR	1487830	Identifier	f		1487321	0					
ANR	1487831	Identifier	cb_printf		1487321	1					
ANR	1487832	ArgumentList	"""%s\\n"""		1487321	1					
ANR	1487833	Argument	"""%s\\n"""		1487321	0					
ANR	1487834	PrimaryExpression	"""%s\\n"""		1487321	0					
ANR	1487835	Argument	pj_string ( pj )		1487321	1					
ANR	1487836	CallExpression	pj_string ( pj )		1487321	0					
ANR	1487837	Callee	pj_string		1487321	0					
ANR	1487838	Identifier	pj_string		1487321	0					
ANR	1487839	ArgumentList	pj		1487321	1					
ANR	1487840	Argument	pj		1487321	0					
ANR	1487841	Identifier	pj		1487321	0					
ANR	1487842	ExpressionStatement	pj_free ( pj )	465:3:11232:11244	1487321	11	True				
ANR	1487843	CallExpression	pj_free ( pj )		1487321	0					
ANR	1487844	Callee	pj_free		1487321	0					
ANR	1487845	Identifier	pj_free		1487321	0					
ANR	1487846	ArgumentList	pj		1487321	1					
ANR	1487847	Argument	pj		1487321	0					
ANR	1487848	Identifier	pj		1487321	0					
ANR	1487849	BreakStatement	break ;	467:2:11252:11257	1487321	1	True				
ANR	1487850	ReturnType	R_API void		1487321	1					
ANR	1487851	Identifier	r_flag_list		1487321	2					
ANR	1487852	ParameterList	"RFlag * f , int rad , const char * pfx"		1487321	3					
ANR	1487853	Parameter	RFlag * f	379:23:9312:9319	1487321	0	True				
ANR	1487854	ParameterType	RFlag *		1487321	0					
ANR	1487855	Identifier	f		1487321	1					
ANR	1487856	Parameter	int rad	379:33:9322:9328	1487321	1	True				
ANR	1487857	ParameterType	int		1487321	0					
ANR	1487858	Identifier	rad		1487321	1					
ANR	1487859	Parameter	const char * pfx	379:42:9331:9345	1487321	2	True				
ANR	1487860	ParameterType	const char *		1487321	0					
ANR	1487861	Identifier	pfx		1487321	1					
ANR	1487862	CFGEntryNode	ENTRY		1487321		True				
ANR	1487863	CFGExitNode	EXIT		1487321		True				
ANR	1487864	Symbol	pfx		1487321						
ANR	1487865	Symbol	pj_string		1487321						
ANR	1487866	Symbol	strchr		1487321						
ANR	1487867	Symbol	print_flag_name		1487321						
ANR	1487868	Symbol	r_num_math		1487321						
ANR	1487869	Symbol	f -> num		1487321						
ANR	1487870	Symbol	rad		1487321						
ANR	1487871	Symbol	arg		1487321						
ANR	1487872	Symbol	print_flag_orig_name		1487321						
ANR	1487873	Symbol	UT64_MAX		1487321						
ANR	1487874	Symbol	sp		1487321						
ANR	1487875	Symbol	NULL		1487321						
ANR	1487876	Symbol	range_from		1487321						
ANR	1487877	Symbol	* sp ++		1487321						
ANR	1487878	Symbol	r_flag_space_cur		1487321						
ANR	1487879	Symbol	f		1487321						
ANR	1487880	Symbol	false		1487321						
ANR	1487881	Symbol	* pfx		1487321						
ANR	1487882	Symbol	range_to		1487321						
ANR	1487883	Symbol	print_flag_json		1487321						
ANR	1487884	Symbol	* f		1487321						
ANR	1487885	Symbol	print_flag_rad		1487321						
ANR	1487886	Symbol	true		1487321						
ANR	1487887	Symbol	bsize		1487321						
ANR	1487888	Symbol	in_range		1487321						
ANR	1487889	Symbol	pj		1487321						
ANR	1487890	Symbol	pj_new		1487321						
ANR	1487891	Symbol	strdup		1487321						
ANR	1487892	Symbol	& u		1487321						
ANR	1487893	Function	evalFlag	472:0:11268:11453							
ANR	1487894	FunctionDef	"evalFlag (RFlag * f , RFlagItem * item)"		1487893	0					
ANR	1487895	CompoundStatement		472:54:11322:11453	1487893	0					
ANR	1487896	ExpressionStatement	"r_return_val_if_fail ( f && item , NULL )"	473:1:11325:11363	1487893	0	True				
ANR	1487897	CallExpression	"r_return_val_if_fail ( f && item , NULL )"		1487893	0					
ANR	1487898	Callee	r_return_val_if_fail		1487893	0					
ANR	1487899	Identifier	r_return_val_if_fail		1487893	0					
ANR	1487900	ArgumentList	f && item		1487893	1					
ANR	1487901	Argument	f && item		1487893	0					
ANR	1487902	AndExpression	f && item		1487893	0		&&			
ANR	1487903	Identifier	f		1487893	0					
ANR	1487904	Identifier	item		1487893	1					
ANR	1487905	Argument	NULL		1487893	1					
ANR	1487906	Identifier	NULL		1487893	0					
ANR	1487907	IfStatement	if ( item -> alias )		1487893	1					
ANR	1487908	Condition	item -> alias	474:5:11370:11380	1487893	0	True				
ANR	1487909	PtrMemberAccess	item -> alias		1487893	0					
ANR	1487910	Identifier	item		1487893	0					
ANR	1487911	Identifier	alias		1487893	1					
ANR	1487912	CompoundStatement		3:18:60:60	1487893	1					
ANR	1487913	ExpressionStatement	"item -> offset = r_num_math ( f -> num , item -> alias )"	475:2:11387:11434	1487893	0	True				
ANR	1487914	AssignmentExpression	"item -> offset = r_num_math ( f -> num , item -> alias )"		1487893	0		=			
ANR	1487915	PtrMemberAccess	item -> offset		1487893	0					
ANR	1487916	Identifier	item		1487893	0					
ANR	1487917	Identifier	offset		1487893	1					
ANR	1487918	CallExpression	"r_num_math ( f -> num , item -> alias )"		1487893	1					
ANR	1487919	Callee	r_num_math		1487893	0					
ANR	1487920	Identifier	r_num_math		1487893	0					
ANR	1487921	ArgumentList	f -> num		1487893	1					
ANR	1487922	Argument	f -> num		1487893	0					
ANR	1487923	PtrMemberAccess	f -> num		1487893	0					
ANR	1487924	Identifier	f		1487893	0					
ANR	1487925	Identifier	num		1487893	1					
ANR	1487926	Argument	item -> alias		1487893	1					
ANR	1487927	PtrMemberAccess	item -> alias		1487893	0					
ANR	1487928	Identifier	item		1487893	0					
ANR	1487929	Identifier	alias		1487893	1					
ANR	1487930	ReturnStatement	return item ;	477:1:11440:11451	1487893	2	True				
ANR	1487931	Identifier	item		1487893	0					
ANR	1487932	ReturnType	static RFlagItem *		1487893	1					
ANR	1487933	Identifier	evalFlag		1487893	2					
ANR	1487934	ParameterList	"RFlag * f , RFlagItem * item"		1487893	3					
ANR	1487935	Parameter	RFlag * f	472:27:11295:11302	1487893	0	True				
ANR	1487936	ParameterType	RFlag *		1487893	0					
ANR	1487937	Identifier	f		1487893	1					
ANR	1487938	Parameter	RFlagItem * item	472:37:11305:11319	1487893	1	True				
ANR	1487939	ParameterType	RFlagItem *		1487893	0					
ANR	1487940	Identifier	item		1487893	1					
ANR	1487941	CFGEntryNode	ENTRY		1487893		True				
ANR	1487942	CFGExitNode	EXIT		1487893		True				
ANR	1487943	Symbol	* f		1487893						
ANR	1487944	Symbol	item		1487893						
ANR	1487945	Symbol	f -> num		1487893						
ANR	1487946	Symbol	NULL		1487893						
ANR	1487947	Symbol	f		1487893						
ANR	1487948	Symbol	* item		1487893						
ANR	1487949	Symbol	item -> alias		1487893						
ANR	1487950	Symbol	r_num_math		1487893						
ANR	1487951	Symbol	item -> offset		1487893						
ANR	1487952	Function	r_flag_exist_at	482:0:11567:11963							
ANR	1487953	FunctionDef	"r_flag_exist_at (RFlag * f , const char * flag_prefix , ut16 fp_size , ut64 off)"		1487952	0					
ANR	1487954	CompoundStatement		482:86:11653:11963	1487952	0					
ANR	1487955	ExpressionStatement	"r_return_val_if_fail ( f && flag_prefix , NULL )"	483:1:11656:11701	1487952	0	True				
ANR	1487956	CallExpression	"r_return_val_if_fail ( f && flag_prefix , NULL )"		1487952	0					
ANR	1487957	Callee	r_return_val_if_fail		1487952	0					
ANR	1487958	Identifier	r_return_val_if_fail		1487952	0					
ANR	1487959	ArgumentList	f && flag_prefix		1487952	1					
ANR	1487960	Argument	f && flag_prefix		1487952	0					
ANR	1487961	AndExpression	f && flag_prefix		1487952	0		&&			
ANR	1487962	Identifier	f		1487952	0					
ANR	1487963	Identifier	flag_prefix		1487952	1					
ANR	1487964	Argument	NULL		1487952	1					
ANR	1487965	Identifier	NULL		1487952	0					
ANR	1487966	IdentifierDeclStatement	RListIter * iter = NULL ;	484:1:11704:11726	1487952	1	True				
ANR	1487967	IdentifierDecl	* iter = NULL		1487952	0					
ANR	1487968	IdentifierDeclType	RListIter *		1487952	0					
ANR	1487969	Identifier	iter		1487952	1					
ANR	1487970	AssignmentExpression	* iter = NULL		1487952	2		=			
ANR	1487971	Identifier	NULL		1487952	0					
ANR	1487972	Identifier	NULL		1487952	1					
ANR	1487973	IdentifierDeclStatement	RFlagItem * item = NULL ;	485:1:11729:11751	1487952	2	True				
ANR	1487974	IdentifierDecl	* item = NULL		1487952	0					
ANR	1487975	IdentifierDeclType	RFlagItem *		1487952	0					
ANR	1487976	Identifier	item		1487952	1					
ANR	1487977	AssignmentExpression	* item = NULL		1487952	2		=			
ANR	1487978	Identifier	NULL		1487952	0					
ANR	1487979	Identifier	NULL		1487952	1					
ANR	1487980	IdentifierDeclStatement	"const RList * list = r_flag_get_list ( f , off ) ;"	486:1:11754:11798	1487952	3	True				
ANR	1487981	IdentifierDecl	"* list = r_flag_get_list ( f , off )"		1487952	0					
ANR	1487982	IdentifierDeclType	const RList *		1487952	0					
ANR	1487983	Identifier	list		1487952	1					
ANR	1487984	AssignmentExpression	"* list = r_flag_get_list ( f , off )"		1487952	2		=			
ANR	1487985	Identifier	list		1487952	0					
ANR	1487986	CallExpression	"r_flag_get_list ( f , off )"		1487952	1					
ANR	1487987	Callee	r_flag_get_list		1487952	0					
ANR	1487988	Identifier	r_flag_get_list		1487952	0					
ANR	1487989	ArgumentList	f		1487952	1					
ANR	1487990	Argument	f		1487952	0					
ANR	1487991	Identifier	f		1487952	0					
ANR	1487992	Argument	off		1487952	1					
ANR	1487993	Identifier	off		1487952	0					
ANR	1487994	IfStatement	if ( list )		1487952	4					
ANR	1487995	Condition	list	487:5:11805:11808	1487952	0	True				
ANR	1487996	Identifier	list		1487952	0					
ANR	1487997	CompoundStatement		6:11:157:157	1487952	1					
ANR	1487998	Statement	r_list_foreach	488:2:11815:11828	1487952	0	True				
ANR	1487999	Statement	(	488:17:11830:11830	1487952	1	True				
ANR	1488000	Statement	list	488:18:11831:11834	1487952	2	True				
ANR	1488001	Statement	","	488:22:11835:11835	1487952	3	True				
ANR	1488002	Statement	iter	488:24:11837:11840	1487952	4	True				
ANR	1488003	Statement	","	488:28:11841:11841	1487952	5	True				
ANR	1488004	Statement	item	488:30:11843:11846	1487952	6	True				
ANR	1488005	Statement	)	488:34:11847:11847	1487952	7	True				
ANR	1488006	CompoundStatement		7:36:195:195	1487952	8					
ANR	1488007	IfStatement	"if ( item -> name && ! strncmp ( item -> name , flag_prefix , fp_size ) )"		1487952	0					
ANR	1488008	Condition	"item -> name && ! strncmp ( item -> name , flag_prefix , fp_size )"	489:7:11858:11914	1487952	0	True				
ANR	1488009	AndExpression	"item -> name && ! strncmp ( item -> name , flag_prefix , fp_size )"		1487952	0		&&			
ANR	1488010	PtrMemberAccess	item -> name		1487952	0					
ANR	1488011	Identifier	item		1487952	0					
ANR	1488012	Identifier	name		1487952	1					
ANR	1488013	UnaryOperationExpression	"! strncmp ( item -> name , flag_prefix , fp_size )"		1487952	1					
ANR	1488014	UnaryOperator	!		1487952	0					
ANR	1488015	CallExpression	"strncmp ( item -> name , flag_prefix , fp_size )"		1487952	1					
ANR	1488016	Callee	strncmp		1487952	0					
ANR	1488017	Identifier	strncmp		1487952	0					
ANR	1488018	ArgumentList	item -> name		1487952	1					
ANR	1488019	Argument	item -> name		1487952	0					
ANR	1488020	PtrMemberAccess	item -> name		1487952	0					
ANR	1488021	Identifier	item		1487952	0					
ANR	1488022	Identifier	name		1487952	1					
ANR	1488023	Argument	flag_prefix		1487952	1					
ANR	1488024	Identifier	flag_prefix		1487952	0					
ANR	1488025	Argument	fp_size		1487952	2					
ANR	1488026	Identifier	fp_size		1487952	0					
ANR	1488027	CompoundStatement		8:66:263:263	1487952	1					
ANR	1488028	ReturnStatement	return true ;	490:4:11923:11934	1487952	0	True				
ANR	1488029	Identifier	true		1487952	0					
ANR	1488030	ReturnStatement	return false ;	494:1:11949:11961	1487952	5	True				
ANR	1488031	Identifier	false		1487952	0					
ANR	1488032	ReturnType	R_API bool		1487952	1					
ANR	1488033	Identifier	r_flag_exist_at		1487952	2					
ANR	1488034	ParameterList	"RFlag * f , const char * flag_prefix , ut16 fp_size , ut64 off"		1487952	3					
ANR	1488035	Parameter	RFlag * f	482:27:11594:11601	1487952	0	True				
ANR	1488036	ParameterType	RFlag *		1487952	0					
ANR	1488037	Identifier	f		1487952	1					
ANR	1488038	Parameter	const char * flag_prefix	482:37:11604:11626	1487952	1	True				
ANR	1488039	ParameterType	const char *		1487952	0					
ANR	1488040	Identifier	flag_prefix		1487952	1					
ANR	1488041	Parameter	ut16 fp_size	482:62:11629:11640	1487952	2	True				
ANR	1488042	ParameterType	ut16		1487952	0					
ANR	1488043	Identifier	fp_size		1487952	1					
ANR	1488044	Parameter	ut64 off	482:76:11643:11650	1487952	3	True				
ANR	1488045	ParameterType	ut64		1487952	0					
ANR	1488046	Identifier	off		1487952	1					
ANR	1488047	CFGEntryNode	ENTRY		1487952		True				
ANR	1488048	CFGExitNode	EXIT		1487952		True				
ANR	1488049	Symbol	item		1487952						
ANR	1488050	Symbol	flag_prefix		1487952						
ANR	1488051	Symbol	NULL		1487952						
ANR	1488052	Symbol	f		1487952						
ANR	1488053	Symbol	false		1487952						
ANR	1488054	Symbol	iter		1487952						
ANR	1488055	Symbol	list		1487952						
ANR	1488056	Symbol	off		1487952						
ANR	1488057	Symbol	strncmp		1487952						
ANR	1488058	Symbol	* item		1487952						
ANR	1488059	Symbol	item -> name		1487952						
ANR	1488060	Symbol	true		1487952						
ANR	1488061	Symbol	fp_size		1487952						
ANR	1488062	Symbol	r_flag_get_list		1487952						
ANR	1488063	Function	r_flag_get	499:0:12074:12252							
ANR	1488064	FunctionDef	"r_flag_get (RFlag * f , const char * name)"		1488063	0					
ANR	1488065	CompoundStatement		499:56:12130:12252	1488063	0					
ANR	1488066	ExpressionStatement	"r_return_val_if_fail ( f , NULL )"	500:1:12133:12163	1488063	0	True				
ANR	1488067	CallExpression	"r_return_val_if_fail ( f , NULL )"		1488063	0					
ANR	1488068	Callee	r_return_val_if_fail		1488063	0					
ANR	1488069	Identifier	r_return_val_if_fail		1488063	0					
ANR	1488070	ArgumentList	f		1488063	1					
ANR	1488071	Argument	f		1488063	0					
ANR	1488072	Identifier	f		1488063	0					
ANR	1488073	Argument	NULL		1488063	1					
ANR	1488074	Identifier	NULL		1488063	0					
ANR	1488075	IdentifierDeclStatement	"RFlagItem * r = ht_pp_find ( f -> ht_name , name , NULL ) ;"	501:1:12166:12216	1488063	1	True				
ANR	1488076	IdentifierDecl	"* r = ht_pp_find ( f -> ht_name , name , NULL )"		1488063	0					
ANR	1488077	IdentifierDeclType	RFlagItem *		1488063	0					
ANR	1488078	Identifier	r		1488063	1					
ANR	1488079	AssignmentExpression	"* r = ht_pp_find ( f -> ht_name , name , NULL )"		1488063	2		=			
ANR	1488080	Identifier	r		1488063	0					
ANR	1488081	CallExpression	"ht_pp_find ( f -> ht_name , name , NULL )"		1488063	1					
ANR	1488082	Callee	ht_pp_find		1488063	0					
ANR	1488083	Identifier	ht_pp_find		1488063	0					
ANR	1488084	ArgumentList	f -> ht_name		1488063	1					
ANR	1488085	Argument	f -> ht_name		1488063	0					
ANR	1488086	PtrMemberAccess	f -> ht_name		1488063	0					
ANR	1488087	Identifier	f		1488063	0					
ANR	1488088	Identifier	ht_name		1488063	1					
ANR	1488089	Argument	name		1488063	1					
ANR	1488090	Identifier	name		1488063	0					
ANR	1488091	Argument	NULL		1488063	2					
ANR	1488092	Identifier	NULL		1488063	0					
ANR	1488093	ReturnStatement	"return r ? evalFlag ( f , r ) : NULL ;"	502:1:12219:12250	1488063	2	True				
ANR	1488094	ConditionalExpression	"r ? evalFlag ( f , r ) : NULL"		1488063	0					
ANR	1488095	Condition	r		1488063	0					
ANR	1488096	Identifier	r		1488063	0					
ANR	1488097	CallExpression	"evalFlag ( f , r )"		1488063	1					
ANR	1488098	Callee	evalFlag		1488063	0					
ANR	1488099	Identifier	evalFlag		1488063	0					
ANR	1488100	ArgumentList	f		1488063	1					
ANR	1488101	Argument	f		1488063	0					
ANR	1488102	Identifier	f		1488063	0					
ANR	1488103	Argument	r		1488063	1					
ANR	1488104	Identifier	r		1488063	0					
ANR	1488105	Identifier	NULL		1488063	2					
ANR	1488106	ReturnType	R_API RFlagItem *		1488063	1					
ANR	1488107	Identifier	r_flag_get		1488063	2					
ANR	1488108	ParameterList	"RFlag * f , const char * name"		1488063	3					
ANR	1488109	Parameter	RFlag * f	499:28:12102:12109	1488063	0	True				
ANR	1488110	ParameterType	RFlag *		1488063	0					
ANR	1488111	Identifier	f		1488063	1					
ANR	1488112	Parameter	const char * name	499:38:12112:12127	1488063	1	True				
ANR	1488113	ParameterType	const char *		1488063	0					
ANR	1488114	Identifier	name		1488063	1					
ANR	1488115	CFGEntryNode	ENTRY		1488063		True				
ANR	1488116	CFGExitNode	EXIT		1488063		True				
ANR	1488117	Symbol	* f		1488063						
ANR	1488118	Symbol	f -> ht_name		1488063						
ANR	1488119	Symbol	r		1488063						
ANR	1488120	Symbol	NULL		1488063						
ANR	1488121	Symbol	f		1488063						
ANR	1488122	Symbol	evalFlag		1488063						
ANR	1488123	Symbol	name		1488063						
ANR	1488124	Symbol	ht_pp_find		1488063						
ANR	1488125	Function	r_flag_get_i	506:0:12341:12530							
ANR	1488126	FunctionDef	"r_flag_get_i (RFlag * f , ut64 off)"		1488125	0					
ANR	1488127	CompoundStatement		506:50:12391:12530	1488125	0					
ANR	1488128	ExpressionStatement	"r_return_val_if_fail ( f , NULL )"	507:1:12394:12424	1488125	0	True				
ANR	1488129	CallExpression	"r_return_val_if_fail ( f , NULL )"		1488125	0					
ANR	1488130	Callee	r_return_val_if_fail		1488125	0					
ANR	1488131	Identifier	r_return_val_if_fail		1488125	0					
ANR	1488132	ArgumentList	f		1488125	1					
ANR	1488133	Argument	f		1488125	0					
ANR	1488134	Identifier	f		1488125	0					
ANR	1488135	Argument	NULL		1488125	1					
ANR	1488136	Identifier	NULL		1488125	0					
ANR	1488137	IdentifierDeclStatement	"const RList * list = r_flag_get_list ( f , off ) ;"	508:1:12427:12471	1488125	1	True				
ANR	1488138	IdentifierDecl	"* list = r_flag_get_list ( f , off )"		1488125	0					
ANR	1488139	IdentifierDeclType	const RList *		1488125	0					
ANR	1488140	Identifier	list		1488125	1					
ANR	1488141	AssignmentExpression	"* list = r_flag_get_list ( f , off )"		1488125	2		=			
ANR	1488142	Identifier	list		1488125	0					
ANR	1488143	CallExpression	"r_flag_get_list ( f , off )"		1488125	1					
ANR	1488144	Callee	r_flag_get_list		1488125	0					
ANR	1488145	Identifier	r_flag_get_list		1488125	0					
ANR	1488146	ArgumentList	f		1488125	1					
ANR	1488147	Argument	f		1488125	0					
ANR	1488148	Identifier	f		1488125	0					
ANR	1488149	Argument	off		1488125	1					
ANR	1488150	Identifier	off		1488125	0					
ANR	1488151	ReturnStatement	"return list ? evalFlag ( f , r_list_get_top ( list ) ) : NULL ;"	509:1:12474:12528	1488125	2	True				
ANR	1488152	ConditionalExpression	"list ? evalFlag ( f , r_list_get_top ( list ) ) : NULL"		1488125	0					
ANR	1488153	Condition	list		1488125	0					
ANR	1488154	Identifier	list		1488125	0					
ANR	1488155	CallExpression	"evalFlag ( f , r_list_get_top ( list ) )"		1488125	1					
ANR	1488156	Callee	evalFlag		1488125	0					
ANR	1488157	Identifier	evalFlag		1488125	0					
ANR	1488158	ArgumentList	f		1488125	1					
ANR	1488159	Argument	f		1488125	0					
ANR	1488160	Identifier	f		1488125	0					
ANR	1488161	Argument	r_list_get_top ( list )		1488125	1					
ANR	1488162	CallExpression	r_list_get_top ( list )		1488125	0					
ANR	1488163	Callee	r_list_get_top		1488125	0					
ANR	1488164	Identifier	r_list_get_top		1488125	0					
ANR	1488165	ArgumentList	list		1488125	1					
ANR	1488166	Argument	list		1488125	0					
ANR	1488167	Identifier	list		1488125	0					
ANR	1488168	Identifier	NULL		1488125	2					
ANR	1488169	ReturnType	R_API RFlagItem *		1488125	1					
ANR	1488170	Identifier	r_flag_get_i		1488125	2					
ANR	1488171	ParameterList	"RFlag * f , ut64 off"		1488125	3					
ANR	1488172	Parameter	RFlag * f	506:30:12371:12378	1488125	0	True				
ANR	1488173	ParameterType	RFlag *		1488125	0					
ANR	1488174	Identifier	f		1488125	1					
ANR	1488175	Parameter	ut64 off	506:40:12381:12388	1488125	1	True				
ANR	1488176	ParameterType	ut64		1488125	0					
ANR	1488177	Identifier	off		1488125	1					
ANR	1488178	CFGEntryNode	ENTRY		1488125		True				
ANR	1488179	CFGExitNode	EXIT		1488125		True				
ANR	1488180	Symbol	NULL		1488125						
ANR	1488181	Symbol	r_list_get_top		1488125						
ANR	1488182	Symbol	f		1488125						
ANR	1488183	Symbol	evalFlag		1488125						
ANR	1488184	Symbol	list		1488125						
ANR	1488185	Symbol	r_flag_get_list		1488125						
ANR	1488186	Symbol	off		1488125						
ANR	1488187	Function	r_flag_get_by_spaces	515:0:12701:14196							
ANR	1488188	FunctionDef	"r_flag_get_by_spaces (RFlag * f , ut64 off)"		1488187	0					
ANR	1488189	CompoundStatement		515:63:12764:14196	1488187	0					
ANR	1488190	ExpressionStatement	"r_return_val_if_fail ( f , NULL )"	516:1:12767:12797	1488187	0	True				
ANR	1488191	CallExpression	"r_return_val_if_fail ( f , NULL )"		1488187	0					
ANR	1488192	Callee	r_return_val_if_fail		1488187	0					
ANR	1488193	Identifier	r_return_val_if_fail		1488187	0					
ANR	1488194	ArgumentList	f		1488187	1					
ANR	1488195	Argument	f		1488187	0					
ANR	1488196	Identifier	f		1488187	0					
ANR	1488197	Argument	NULL		1488187	1					
ANR	1488198	Identifier	NULL		1488187	0					
ANR	1488199	IdentifierDeclStatement	"const RList * list = r_flag_get_list ( f , off ) ;"	518:1:12801:12845	1488187	1	True				
ANR	1488200	IdentifierDecl	"* list = r_flag_get_list ( f , off )"		1488187	0					
ANR	1488201	IdentifierDeclType	const RList *		1488187	0					
ANR	1488202	Identifier	list		1488187	1					
ANR	1488203	AssignmentExpression	"* list = r_flag_get_list ( f , off )"		1488187	2		=			
ANR	1488204	Identifier	list		1488187	0					
ANR	1488205	CallExpression	"r_flag_get_list ( f , off )"		1488187	1					
ANR	1488206	Callee	r_flag_get_list		1488187	0					
ANR	1488207	Identifier	r_flag_get_list		1488187	0					
ANR	1488208	ArgumentList	f		1488187	1					
ANR	1488209	Argument	f		1488187	0					
ANR	1488210	Identifier	f		1488187	0					
ANR	1488211	Argument	off		1488187	1					
ANR	1488212	Identifier	off		1488187	0					
ANR	1488213	IdentifierDeclStatement	RFlagItem * ret = NULL ;	519:1:12848:12869	1488187	2	True				
ANR	1488214	IdentifierDecl	* ret = NULL		1488187	0					
ANR	1488215	IdentifierDeclType	RFlagItem *		1488187	0					
ANR	1488216	Identifier	ret		1488187	1					
ANR	1488217	AssignmentExpression	* ret = NULL		1488187	2		=			
ANR	1488218	Identifier	NULL		1488187	0					
ANR	1488219	Identifier	NULL		1488187	1					
ANR	1488220	IdentifierDeclStatement	const char * spacename ;	520:1:12872:12893	1488187	3	True				
ANR	1488221	IdentifierDecl	* spacename		1488187	0					
ANR	1488222	IdentifierDeclType	const char *		1488187	0					
ANR	1488223	Identifier	spacename		1488187	1					
ANR	1488224	IdentifierDeclStatement	RSpace * * spaces ;	521:1:12896:12911	1488187	4	True				
ANR	1488225	IdentifierDecl	* * spaces		1488187	0					
ANR	1488226	IdentifierDeclType	RSpace * *		1488187	0					
ANR	1488227	Identifier	spaces		1488187	1					
ANR	1488228	IdentifierDeclStatement	RListIter * iter ;	522:1:12914:12929	1488187	5	True				
ANR	1488229	IdentifierDecl	* iter		1488187	0					
ANR	1488230	IdentifierDeclType	RListIter *		1488187	0					
ANR	1488231	Identifier	iter		1488187	1					
ANR	1488232	IdentifierDeclStatement	RFlagItem * flg ;	523:1:12932:12946	1488187	6	True				
ANR	1488233	IdentifierDecl	* flg		1488187	0					
ANR	1488234	IdentifierDeclType	RFlagItem *		1488187	0					
ANR	1488235	Identifier	flg		1488187	1					
ANR	1488236	IdentifierDeclStatement	"va_list ap , aq ;"	524:1:12949:12963	1488187	7	True				
ANR	1488237	IdentifierDecl	ap		1488187	0					
ANR	1488238	IdentifierDeclType	va_list		1488187	0					
ANR	1488239	Identifier	ap		1488187	1					
ANR	1488240	IdentifierDecl	aq		1488187	1					
ANR	1488241	IdentifierDeclType	va_list		1488187	0					
ANR	1488242	Identifier	aq		1488187	1					
ANR	1488243	IdentifierDeclStatement	"size_t n_spaces = 0 , i ;"	525:1:12966:12988	1488187	8	True				
ANR	1488244	IdentifierDecl	n_spaces = 0		1488187	0					
ANR	1488245	IdentifierDeclType	size_t		1488187	0					
ANR	1488246	Identifier	n_spaces		1488187	1					
ANR	1488247	AssignmentExpression	n_spaces = 0		1488187	2		=			
ANR	1488248	Identifier	n_spaces		1488187	0					
ANR	1488249	PrimaryExpression	0		1488187	1					
ANR	1488250	IdentifierDecl	i		1488187	1					
ANR	1488251	IdentifierDeclType	size_t		1488187	0					
ANR	1488252	Identifier	i		1488187	1					
ANR	1488253	ExpressionStatement	"va_start ( ap , off )"	527:1:12992:13010	1488187	9	True				
ANR	1488254	CallExpression	"va_start ( ap , off )"		1488187	0					
ANR	1488255	Callee	va_start		1488187	0					
ANR	1488256	Identifier	va_start		1488187	0					
ANR	1488257	ArgumentList	ap		1488187	1					
ANR	1488258	Argument	ap		1488187	0					
ANR	1488259	Identifier	ap		1488187	0					
ANR	1488260	Argument	off		1488187	1					
ANR	1488261	Identifier	off		1488187	0					
ANR	1488262	IfStatement	if ( r_list_empty ( list ) )		1488187	10					
ANR	1488263	Condition	r_list_empty ( list )	529:5:13056:13074	1488187	0	True				
ANR	1488264	CallExpression	r_list_empty ( list )		1488187	0					
ANR	1488265	Callee	r_list_empty		1488187	0					
ANR	1488266	Identifier	r_list_empty		1488187	0					
ANR	1488267	ArgumentList	list		1488187	1					
ANR	1488268	Argument	list		1488187	0					
ANR	1488269	Identifier	list		1488187	0					
ANR	1488270	CompoundStatement		15:26:312:312	1488187	1					
ANR	1488271	GotoStatement	goto beach ;	530:2:13081:13091	1488187	0	True				
ANR	1488272	Identifier	beach		1488187	0					
ANR	1488273	IfStatement	if ( r_list_length ( list ) == 1 )		1488187	11					
ANR	1488274	Condition	r_list_length ( list ) == 1	532:5:13101:13125	1488187	0	True				
ANR	1488275	EqualityExpression	r_list_length ( list ) == 1		1488187	0		==			
ANR	1488276	CallExpression	r_list_length ( list )		1488187	0					
ANR	1488277	Callee	r_list_length		1488187	0					
ANR	1488278	Identifier	r_list_length		1488187	0					
ANR	1488279	ArgumentList	list		1488187	1					
ANR	1488280	Argument	list		1488187	0					
ANR	1488281	Identifier	list		1488187	0					
ANR	1488282	PrimaryExpression	1		1488187	1					
ANR	1488283	CompoundStatement		18:32:363:363	1488187	1					
ANR	1488284	ExpressionStatement	ret = r_list_get_top ( list )	533:2:13132:13159	1488187	0	True				
ANR	1488285	AssignmentExpression	ret = r_list_get_top ( list )		1488187	0		=			
ANR	1488286	Identifier	ret		1488187	0					
ANR	1488287	CallExpression	r_list_get_top ( list )		1488187	1					
ANR	1488288	Callee	r_list_get_top		1488187	0					
ANR	1488289	Identifier	r_list_get_top		1488187	0					
ANR	1488290	ArgumentList	list		1488187	1					
ANR	1488291	Argument	list		1488187	0					
ANR	1488292	Identifier	list		1488187	0					
ANR	1488293	GotoStatement	goto beach ;	534:2:13163:13173	1488187	1	True				
ANR	1488294	Identifier	beach		1488187	0					
ANR	1488295	ExpressionStatement	"va_copy ( aq , ap )"	538:1:13210:13226	1488187	12	True				
ANR	1488296	CallExpression	"va_copy ( aq , ap )"		1488187	0					
ANR	1488297	Callee	va_copy		1488187	0					
ANR	1488298	Identifier	va_copy		1488187	0					
ANR	1488299	ArgumentList	aq		1488187	1					
ANR	1488300	Argument	aq		1488187	0					
ANR	1488301	Identifier	aq		1488187	0					
ANR	1488302	Argument	ap		1488187	1					
ANR	1488303	Identifier	ap		1488187	0					
ANR	1488304	Statement	spacename	539:1:13229:13237	1488187	13	True				
ANR	1488305	Statement	=	539:11:13239:13239	1488187	14	True				
ANR	1488306	Statement	va_arg	539:13:13241:13246	1488187	15	True				
ANR	1488307	Statement	(	539:20:13248:13248	1488187	16	True				
ANR	1488308	Statement	aq	539:21:13249:13250	1488187	17	True				
ANR	1488309	Statement	","	539:23:13251:13251	1488187	18	True				
ANR	1488310	Statement	const	539:25:13253:13257	1488187	19	True				
ANR	1488311	Statement	char	539:31:13259:13262	1488187	20	True				
ANR	1488312	Statement	*	539:36:13264:13264	1488187	21	True				
ANR	1488313	Statement	)	539:37:13265:13265	1488187	22	True				
ANR	1488314	ExpressionStatement		539:38:13266:13266	1488187	23	True				
ANR	1488315	WhileStatement	while ( spacename )		1488187	24					
ANR	1488316	Condition	spacename	540:8:13276:13284	1488187	0	True				
ANR	1488317	Identifier	spacename		1488187	0					
ANR	1488318	CompoundStatement		26:19:522:522	1488187	1					
ANR	1488319	ExpressionStatement	n_spaces ++	541:2:13291:13301	1488187	0	True				
ANR	1488320	PostIncDecOperationExpression	n_spaces ++		1488187	0					
ANR	1488321	Identifier	n_spaces		1488187	0					
ANR	1488322	IncDec	++		1488187	1					
ANR	1488323	Statement	spacename	542:2:13305:13313	1488187	1	True				
ANR	1488324	Statement	=	542:12:13315:13315	1488187	2	True				
ANR	1488325	Statement	va_arg	542:14:13317:13322	1488187	3	True				
ANR	1488326	Statement	(	542:21:13324:13324	1488187	4	True				
ANR	1488327	Statement	aq	542:22:13325:13326	1488187	5	True				
ANR	1488328	Statement	","	542:24:13327:13327	1488187	6	True				
ANR	1488329	Statement	const	542:26:13329:13333	1488187	7	True				
ANR	1488330	Statement	char	542:32:13335:13338	1488187	8	True				
ANR	1488331	Statement	*	542:37:13340:13340	1488187	9	True				
ANR	1488332	Statement	)	542:38:13341:13341	1488187	10	True				
ANR	1488333	ExpressionStatement		542:39:13342:13342	1488187	11	True				
ANR	1488334	ExpressionStatement	va_end ( aq )	544:1:13348:13359	1488187	25	True				
ANR	1488335	CallExpression	va_end ( aq )		1488187	0					
ANR	1488336	Callee	va_end		1488187	0					
ANR	1488337	Identifier	va_end		1488187	0					
ANR	1488338	ArgumentList	aq		1488187	1					
ANR	1488339	Argument	aq		1488187	0					
ANR	1488340	Identifier	aq		1488187	0					
ANR	1488341	ExpressionStatement	i = 0	547:1:13394:13399	1488187	26	True				
ANR	1488342	AssignmentExpression	i = 0		1488187	0		=			
ANR	1488343	Identifier	i		1488187	0					
ANR	1488344	PrimaryExpression	0		1488187	1					
ANR	1488345	Statement	spaces	548:1:13402:13407	1488187	27	True				
ANR	1488346	Statement	=	548:8:13409:13409	1488187	28	True				
ANR	1488347	Statement	R_NEWS	548:10:13411:13416	1488187	29	True				
ANR	1488348	Statement	(	548:17:13418:13418	1488187	30	True				
ANR	1488349	Statement	RSpace	548:18:13419:13424	1488187	31	True				
ANR	1488350	Statement	*	548:25:13426:13426	1488187	32	True				
ANR	1488351	Statement	","	548:26:13427:13427	1488187	33	True				
ANR	1488352	Statement	n_spaces	548:28:13429:13436	1488187	34	True				
ANR	1488353	Statement	)	548:36:13437:13437	1488187	35	True				
ANR	1488354	ExpressionStatement		548:37:13438:13438	1488187	36	True				
ANR	1488355	Statement	spacename	549:1:13441:13449	1488187	37	True				
ANR	1488356	Statement	=	549:11:13451:13451	1488187	38	True				
ANR	1488357	Statement	va_arg	549:13:13453:13458	1488187	39	True				
ANR	1488358	Statement	(	549:20:13460:13460	1488187	40	True				
ANR	1488359	Statement	ap	549:21:13461:13462	1488187	41	True				
ANR	1488360	Statement	","	549:23:13463:13463	1488187	42	True				
ANR	1488361	Statement	const	549:25:13465:13469	1488187	43	True				
ANR	1488362	Statement	char	549:31:13471:13474	1488187	44	True				
ANR	1488363	Statement	*	549:36:13476:13476	1488187	45	True				
ANR	1488364	Statement	)	549:37:13477:13477	1488187	46	True				
ANR	1488365	ExpressionStatement		549:38:13478:13478	1488187	47	True				
ANR	1488366	WhileStatement	while ( spacename )		1488187	48					
ANR	1488367	Condition	spacename	550:8:13488:13496	1488187	0	True				
ANR	1488368	Identifier	spacename		1488187	0					
ANR	1488369	CompoundStatement		37:2:738:785	1488187	1					
ANR	1488370	IdentifierDeclStatement	"RSpace * space = r_flag_space_get ( f , spacename ) ;"	551:2:13503:13550	1488187	0	True				
ANR	1488371	IdentifierDecl	"* space = r_flag_space_get ( f , spacename )"		1488187	0					
ANR	1488372	IdentifierDeclType	RSpace *		1488187	0					
ANR	1488373	Identifier	space		1488187	1					
ANR	1488374	AssignmentExpression	"* space = r_flag_space_get ( f , spacename )"		1488187	2		=			
ANR	1488375	Identifier	space		1488187	0					
ANR	1488376	CallExpression	"r_flag_space_get ( f , spacename )"		1488187	1					
ANR	1488377	Callee	r_flag_space_get		1488187	0					
ANR	1488378	Identifier	r_flag_space_get		1488187	0					
ANR	1488379	ArgumentList	f		1488187	1					
ANR	1488380	Argument	f		1488187	0					
ANR	1488381	Identifier	f		1488187	0					
ANR	1488382	Argument	spacename		1488187	1					
ANR	1488383	Identifier	spacename		1488187	0					
ANR	1488384	IfStatement	if ( space )		1488187	1					
ANR	1488385	Condition	space	552:6:13558:13562	1488187	0	True				
ANR	1488386	Identifier	space		1488187	0					
ANR	1488387	CompoundStatement		38:13:800:800	1488187	1					
ANR	1488388	ExpressionStatement	spaces [ i ++ ] = space	553:3:13570:13589	1488187	0	True				
ANR	1488389	AssignmentExpression	spaces [ i ++ ] = space		1488187	0		=			
ANR	1488390	ArrayIndexing	spaces [ i ++ ]		1488187	0					
ANR	1488391	Identifier	spaces		1488187	0					
ANR	1488392	PostIncDecOperationExpression	i ++		1488187	1					
ANR	1488393	Identifier	i		1488187	0					
ANR	1488394	IncDec	++		1488187	1					
ANR	1488395	Identifier	space		1488187	1					
ANR	1488396	Statement	spacename	555:2:13597:13605	1488187	2	True				
ANR	1488397	Statement	=	555:12:13607:13607	1488187	3	True				
ANR	1488398	Statement	va_arg	555:14:13609:13614	1488187	4	True				
ANR	1488399	Statement	(	555:21:13616:13616	1488187	5	True				
ANR	1488400	Statement	ap	555:22:13617:13618	1488187	6	True				
ANR	1488401	Statement	","	555:24:13619:13619	1488187	7	True				
ANR	1488402	Statement	const	555:26:13621:13625	1488187	8	True				
ANR	1488403	Statement	char	555:32:13627:13630	1488187	9	True				
ANR	1488404	Statement	*	555:37:13632:13632	1488187	10	True				
ANR	1488405	Statement	)	555:38:13633:13633	1488187	11	True				
ANR	1488406	ExpressionStatement		555:39:13634:13634	1488187	12	True				
ANR	1488407	ExpressionStatement	n_spaces = i	557:1:13640:13652	1488187	49	True				
ANR	1488408	AssignmentExpression	n_spaces = i		1488187	0		=			
ANR	1488409	Identifier	n_spaces		1488187	0					
ANR	1488410	Identifier	i		1488187	1					
ANR	1488411	IdentifierDeclStatement	ut64 min_space_i = n_spaces + 1 ;	559:1:13656:13687	1488187	50	True				
ANR	1488412	IdentifierDecl	min_space_i = n_spaces + 1		1488187	0					
ANR	1488413	IdentifierDeclType	ut64		1488187	0					
ANR	1488414	Identifier	min_space_i		1488187	1					
ANR	1488415	AssignmentExpression	min_space_i = n_spaces + 1		1488187	2		=			
ANR	1488416	Identifier	min_space_i		1488187	0					
ANR	1488417	AdditiveExpression	n_spaces + 1		1488187	1		+			
ANR	1488418	Identifier	n_spaces		1488187	0					
ANR	1488419	PrimaryExpression	1		1488187	1					
ANR	1488420	Statement	r_list_foreach	560:1:13690:13703	1488187	51	True				
ANR	1488421	Statement	(	560:16:13705:13705	1488187	52	True				
ANR	1488422	Statement	list	560:17:13706:13709	1488187	53	True				
ANR	1488423	Statement	","	560:21:13710:13710	1488187	54	True				
ANR	1488424	Statement	iter	560:23:13712:13715	1488187	55	True				
ANR	1488425	Statement	","	560:27:13716:13716	1488187	56	True				
ANR	1488426	Statement	flg	560:29:13718:13720	1488187	57	True				
ANR	1488427	Statement	)	560:32:13721:13721	1488187	58	True				
ANR	1488428	CompoundStatement		46:34:958:958	1488187	59					
ANR	1488429	ForStatement	for ( i = 0 ; i < n_spaces ; ++ i )		1488187	0					
ANR	1488430	ForInit	i = 0 ;	563:7:13829:13834	1488187	0	True				
ANR	1488431	AssignmentExpression	i = 0		1488187	0		=			
ANR	1488432	Identifier	i		1488187	0					
ANR	1488433	PrimaryExpression	0		1488187	1					
ANR	1488434	Condition	i < n_spaces	563:14:13836:13847	1488187	1	True				
ANR	1488435	RelationalExpression	i < n_spaces		1488187	0		<			
ANR	1488436	Identifier	i		1488187	0					
ANR	1488437	Identifier	n_spaces		1488187	1					
ANR	1488438	UnaryExpression	++ i	563:28:13850:13852	1488187	2	True				
ANR	1488439	IncDec	++		1488187	0					
ANR	1488440	Identifier	i		1488187	1					
ANR	1488441	CompoundStatement		49:33:1090:1090	1488187	3					
ANR	1488442	IfStatement	if ( flg -> space == spaces [ i ] )		1488187	0					
ANR	1488443	Condition	flg -> space == spaces [ i ]	564:7:13864:13886	1488187	0	True				
ANR	1488444	EqualityExpression	flg -> space == spaces [ i ]		1488187	0		==			
ANR	1488445	PtrMemberAccess	flg -> space		1488187	0					
ANR	1488446	Identifier	flg		1488187	0					
ANR	1488447	Identifier	space		1488187	1					
ANR	1488448	ArrayIndexing	spaces [ i ]		1488187	1					
ANR	1488449	Identifier	spaces		1488187	0					
ANR	1488450	Identifier	i		1488187	1					
ANR	1488451	CompoundStatement		50:32:1124:1124	1488187	1					
ANR	1488452	BreakStatement	break ;	565:4:13895:13900	1488187	0	True				
ANR	1488453	IfStatement	if ( i >= min_space_i )		1488187	1					
ANR	1488454	Condition	i >= min_space_i	567:7:13914:13929	1488187	0	True				
ANR	1488455	RelationalExpression	i >= min_space_i		1488187	0		>=			
ANR	1488456	Identifier	i		1488187	0					
ANR	1488457	Identifier	min_space_i		1488187	1					
ANR	1488458	CompoundStatement		53:25:1167:1167	1488187	1					
ANR	1488459	BreakStatement	break ;	568:4:13938:13943	1488187	0	True				
ANR	1488460	IfStatement	if ( i < min_space_i )		1488187	1					
ANR	1488461	Condition	i < min_space_i	572:6:13961:13975	1488187	0	True				
ANR	1488462	RelationalExpression	i < min_space_i		1488187	0		<			
ANR	1488463	Identifier	i		1488187	0					
ANR	1488464	Identifier	min_space_i		1488187	1					
ANR	1488465	CompoundStatement		58:23:1213:1213	1488187	1					
ANR	1488466	ExpressionStatement	min_space_i = i	573:3:13983:13998	1488187	0	True				
ANR	1488467	AssignmentExpression	min_space_i = i		1488187	0		=			
ANR	1488468	Identifier	min_space_i		1488187	0					
ANR	1488469	Identifier	i		1488187	1					
ANR	1488470	ExpressionStatement	ret = flg	574:3:14003:14012	1488187	1	True				
ANR	1488471	AssignmentExpression	ret = flg		1488187	0		=			
ANR	1488472	Identifier	ret		1488187	0					
ANR	1488473	Identifier	flg		1488187	1					
ANR	1488474	IfStatement	if ( ! min_space_i )		1488187	2					
ANR	1488475	Condition	! min_space_i	576:6:14024:14035	1488187	0	True				
ANR	1488476	UnaryOperationExpression	! min_space_i		1488187	0					
ANR	1488477	UnaryOperator	!		1488187	0					
ANR	1488478	Identifier	min_space_i		1488187	1					
ANR	1488479	CompoundStatement		62:20:1273:1273	1488187	1					
ANR	1488480	BreakStatement	break ;	578:3:14107:14112	1488187	0	True				
ANR	1488481	ExpressionStatement	free ( spaces )	581:1:14122:14135	1488187	60	True				
ANR	1488482	CallExpression	free ( spaces )		1488187	0					
ANR	1488483	Callee	free		1488187	0					
ANR	1488484	Identifier	free		1488187	0					
ANR	1488485	ArgumentList	spaces		1488187	1					
ANR	1488486	Argument	spaces		1488187	0					
ANR	1488487	Identifier	spaces		1488187	0					
ANR	1488488	Label	beach :	582:0:14137:14142	1488187	61	True				
ANR	1488489	Identifier	beach		1488187	0					
ANR	1488490	ExpressionStatement	va_end ( ap )	583:1:14145:14156	1488187	62	True				
ANR	1488491	CallExpression	va_end ( ap )		1488187	0					
ANR	1488492	Callee	va_end		1488187	0					
ANR	1488493	Identifier	va_end		1488187	0					
ANR	1488494	ArgumentList	ap		1488187	1					
ANR	1488495	Argument	ap		1488187	0					
ANR	1488496	Identifier	ap		1488187	0					
ANR	1488497	ReturnStatement	"return ret ? evalFlag ( f , ret ) : NULL ;"	584:1:14159:14194	1488187	63	True				
ANR	1488498	ConditionalExpression	"ret ? evalFlag ( f , ret ) : NULL"		1488187	0					
ANR	1488499	Condition	ret		1488187	0					
ANR	1488500	Identifier	ret		1488187	0					
ANR	1488501	CallExpression	"evalFlag ( f , ret )"		1488187	1					
ANR	1488502	Callee	evalFlag		1488187	0					
ANR	1488503	Identifier	evalFlag		1488187	0					
ANR	1488504	ArgumentList	f		1488187	1					
ANR	1488505	Argument	f		1488187	0					
ANR	1488506	Identifier	f		1488187	0					
ANR	1488507	Argument	ret		1488187	1					
ANR	1488508	Identifier	ret		1488187	0					
ANR	1488509	Identifier	NULL		1488187	2					
ANR	1488510	ReturnType	R_API RFlagItem *		1488187	1					
ANR	1488511	Identifier	r_flag_get_by_spaces		1488187	2					
ANR	1488512	ParameterList	"RFlag * f , ut64 off"		1488187	3					
ANR	1488513	Parameter	RFlag * f	515:38:12739:12746	1488187	0	True				
ANR	1488514	ParameterType	RFlag *		1488187	0					
ANR	1488515	Identifier	f		1488187	1					
ANR	1488516	Parameter	ut64 off	515:48:12749:12756	1488187	1	True				
ANR	1488517	ParameterType	ut64		1488187	0					
ANR	1488518	Identifier	off		1488187	1					
ANR	1488519	CFGEntryNode	ENTRY		1488187		True				
ANR	1488520	CFGExitNode	EXIT		1488187		True				
ANR	1488521	CFGErrorNode	ERROR		1488187		True				
ANR	1488522	Symbol	r_list_get_top		1488187						
ANR	1488523	Symbol	min_space_i		1488187						
ANR	1488524	Symbol	space		1488187						
ANR	1488525	Symbol	n_spaces		1488187						
ANR	1488526	Symbol	r_flag_get_list		1488187						
ANR	1488527	Symbol	ret		1488187						
ANR	1488528	Symbol	flg		1488187						
ANR	1488529	Symbol	spacename		1488187						
ANR	1488530	Symbol	NULL		1488187						
ANR	1488531	Symbol	f		1488187						
ANR	1488532	Symbol	evalFlag		1488187						
ANR	1488533	Symbol	iter		1488187						
ANR	1488534	Symbol	i		1488187						
ANR	1488535	Symbol	list		1488187						
ANR	1488536	Symbol	off		1488187						
ANR	1488537	Symbol	* spaces		1488187						
ANR	1488538	Symbol	flg -> space		1488187						
ANR	1488539	Symbol	ap		1488187						
ANR	1488540	Symbol	aq		1488187						
ANR	1488541	Symbol	r_flag_space_get		1488187						
ANR	1488542	Symbol	* i		1488187						
ANR	1488543	Symbol	* flg		1488187						
ANR	1488544	Symbol	spaces		1488187						
ANR	1488545	Symbol	r_list_empty		1488187						
ANR	1488546	Symbol	r_list_length		1488187						
ANR	1488547	Function	isFunctionFlag	587:0:14199:14400							
ANR	1488548	FunctionDef	isFunctionFlag (const char * n)		1488547	0					
ANR	1488549	CompoundStatement		587:42:14241:14400	1488547	0					
ANR	1488550	ReturnStatement	"return ( ! strncmp ( n , ""sym.func."" , 9 ) || ! strncmp ( n , ""method."" , 7 ) || ! strncmp ( n , ""sym."" , 4 ) || ! strncmp ( n , ""func."" , 5 ) || ! strncmp ( n , ""fcn.0"" , 5 ) ) ;"	588:1:14244:14398	1488547	0	True				
ANR	1488551	OrExpression	"! strncmp ( n , ""sym.func."" , 9 ) || ! strncmp ( n , ""method."" , 7 ) || ! strncmp ( n , ""sym."" , 4 ) || ! strncmp ( n , ""func."" , 5 ) || ! strncmp ( n , ""fcn.0"" , 5 )"		1488547	0		||			
ANR	1488552	UnaryOperationExpression	"! strncmp ( n , ""sym.func."" , 9 )"		1488547	0					
ANR	1488553	UnaryOperator	!		1488547	0					
ANR	1488554	CallExpression	"strncmp ( n , ""sym.func."" , 9 )"		1488547	1					
ANR	1488555	Callee	strncmp		1488547	0					
ANR	1488556	Identifier	strncmp		1488547	0					
ANR	1488557	ArgumentList	n		1488547	1					
ANR	1488558	Argument	n		1488547	0					
ANR	1488559	Identifier	n		1488547	0					
ANR	1488560	Argument	"""sym.func."""		1488547	1					
ANR	1488561	PrimaryExpression	"""sym.func."""		1488547	0					
ANR	1488562	Argument	9		1488547	2					
ANR	1488563	PrimaryExpression	9		1488547	0					
ANR	1488564	OrExpression	"! strncmp ( n , ""method."" , 7 ) || ! strncmp ( n , ""sym."" , 4 ) || ! strncmp ( n , ""func."" , 5 ) || ! strncmp ( n , ""fcn.0"" , 5 )"		1488547	1		||			
ANR	1488565	UnaryOperationExpression	"! strncmp ( n , ""method."" , 7 )"		1488547	0					
ANR	1488566	UnaryOperator	!		1488547	0					
ANR	1488567	CallExpression	"strncmp ( n , ""method."" , 7 )"		1488547	1					
ANR	1488568	Callee	strncmp		1488547	0					
ANR	1488569	Identifier	strncmp		1488547	0					
ANR	1488570	ArgumentList	n		1488547	1					
ANR	1488571	Argument	n		1488547	0					
ANR	1488572	Identifier	n		1488547	0					
ANR	1488573	Argument	"""method."""		1488547	1					
ANR	1488574	PrimaryExpression	"""method."""		1488547	0					
ANR	1488575	Argument	7		1488547	2					
ANR	1488576	PrimaryExpression	7		1488547	0					
ANR	1488577	OrExpression	"! strncmp ( n , ""sym."" , 4 ) || ! strncmp ( n , ""func."" , 5 ) || ! strncmp ( n , ""fcn.0"" , 5 )"		1488547	1		||			
ANR	1488578	UnaryOperationExpression	"! strncmp ( n , ""sym."" , 4 )"		1488547	0					
ANR	1488579	UnaryOperator	!		1488547	0					
ANR	1488580	CallExpression	"strncmp ( n , ""sym."" , 4 )"		1488547	1					
ANR	1488581	Callee	strncmp		1488547	0					
ANR	1488582	Identifier	strncmp		1488547	0					
ANR	1488583	ArgumentList	n		1488547	1					
ANR	1488584	Argument	n		1488547	0					
ANR	1488585	Identifier	n		1488547	0					
ANR	1488586	Argument	"""sym."""		1488547	1					
ANR	1488587	PrimaryExpression	"""sym."""		1488547	0					
ANR	1488588	Argument	4		1488547	2					
ANR	1488589	PrimaryExpression	4		1488547	0					
ANR	1488590	OrExpression	"! strncmp ( n , ""func."" , 5 ) || ! strncmp ( n , ""fcn.0"" , 5 )"		1488547	1		||			
ANR	1488591	UnaryOperationExpression	"! strncmp ( n , ""func."" , 5 )"		1488547	0					
ANR	1488592	UnaryOperator	!		1488547	0					
ANR	1488593	CallExpression	"strncmp ( n , ""func."" , 5 )"		1488547	1					
ANR	1488594	Callee	strncmp		1488547	0					
ANR	1488595	Identifier	strncmp		1488547	0					
ANR	1488596	ArgumentList	n		1488547	1					
ANR	1488597	Argument	n		1488547	0					
ANR	1488598	Identifier	n		1488547	0					
ANR	1488599	Argument	"""func."""		1488547	1					
ANR	1488600	PrimaryExpression	"""func."""		1488547	0					
ANR	1488601	Argument	5		1488547	2					
ANR	1488602	PrimaryExpression	5		1488547	0					
ANR	1488603	UnaryOperationExpression	"! strncmp ( n , ""fcn.0"" , 5 )"		1488547	1					
ANR	1488604	UnaryOperator	!		1488547	0					
ANR	1488605	CallExpression	"strncmp ( n , ""fcn.0"" , 5 )"		1488547	1					
ANR	1488606	Callee	strncmp		1488547	0					
ANR	1488607	Identifier	strncmp		1488547	0					
ANR	1488608	ArgumentList	n		1488547	1					
ANR	1488609	Argument	n		1488547	0					
ANR	1488610	Identifier	n		1488547	0					
ANR	1488611	Argument	"""fcn.0"""		1488547	1					
ANR	1488612	PrimaryExpression	"""fcn.0"""		1488547	0					
ANR	1488613	Argument	5		1488547	2					
ANR	1488614	PrimaryExpression	5		1488547	0					
ANR	1488615	ReturnType	static bool		1488547	1					
ANR	1488616	Identifier	isFunctionFlag		1488547	2					
ANR	1488617	ParameterList	const char * n		1488547	3					
ANR	1488618	Parameter	const char * n	587:27:14226:14238	1488547	0	True				
ANR	1488619	ParameterType	const char *		1488547	0					
ANR	1488620	Identifier	n		1488547	1					
ANR	1488621	CFGEntryNode	ENTRY		1488547		True				
ANR	1488622	CFGExitNode	EXIT		1488547		True				
ANR	1488623	Symbol	strncmp		1488547						
ANR	1488624	Symbol	n		1488547						
ANR	1488625	Function	r_flag_get_at	597:0:14524:15530							
ANR	1488626	FunctionDef	"r_flag_get_at (RFlag * f , ut64 off , bool closest)"		1488625	0					
ANR	1488627	CompoundStatement		597:65:14589:15530	1488625	0					
ANR	1488628	ExpressionStatement	"r_return_val_if_fail ( f , NULL )"	598:1:14592:14622	1488625	0	True				
ANR	1488629	CallExpression	"r_return_val_if_fail ( f , NULL )"		1488625	0					
ANR	1488630	Callee	r_return_val_if_fail		1488625	0					
ANR	1488631	Identifier	r_return_val_if_fail		1488625	0					
ANR	1488632	ArgumentList	f		1488625	1					
ANR	1488633	Argument	f		1488625	0					
ANR	1488634	Identifier	f		1488625	0					
ANR	1488635	Argument	NULL		1488625	1					
ANR	1488636	Identifier	NULL		1488625	0					
ANR	1488637	IdentifierDeclStatement	"RFlagItem * item , * nice = NULL ;"	600:1:14626:14655	1488625	1	True				
ANR	1488638	IdentifierDecl	* item		1488625	0					
ANR	1488639	IdentifierDeclType	RFlagItem *		1488625	0					
ANR	1488640	Identifier	item		1488625	1					
ANR	1488641	IdentifierDecl	* nice = NULL		1488625	1					
ANR	1488642	IdentifierDeclType	RFlagItem *		1488625	0					
ANR	1488643	Identifier	nice		1488625	1					
ANR	1488644	AssignmentExpression	* nice = NULL		1488625	2		=			
ANR	1488645	Identifier	NULL		1488625	0					
ANR	1488646	Identifier	NULL		1488625	1					
ANR	1488647	IdentifierDeclStatement	RListIter * iter ;	601:1:14658:14673	1488625	2	True				
ANR	1488648	IdentifierDecl	* iter		1488625	0					
ANR	1488649	IdentifierDeclType	RListIter *		1488625	0					
ANR	1488650	Identifier	iter		1488625	1					
ANR	1488651	IdentifierDeclStatement	"const RFlagsAtOffset * flags_at = r_flag_get_nearest_list ( f , off , - 1 ) ;"	602:1:14676:14745	1488625	3	True				
ANR	1488652	IdentifierDecl	"* flags_at = r_flag_get_nearest_list ( f , off , - 1 )"		1488625	0					
ANR	1488653	IdentifierDeclType	const RFlagsAtOffset *		1488625	0					
ANR	1488654	Identifier	flags_at		1488625	1					
ANR	1488655	AssignmentExpression	"* flags_at = r_flag_get_nearest_list ( f , off , - 1 )"		1488625	2		=			
ANR	1488656	Identifier	flags_at		1488625	0					
ANR	1488657	CallExpression	"r_flag_get_nearest_list ( f , off , - 1 )"		1488625	1					
ANR	1488658	Callee	r_flag_get_nearest_list		1488625	0					
ANR	1488659	Identifier	r_flag_get_nearest_list		1488625	0					
ANR	1488660	ArgumentList	f		1488625	1					
ANR	1488661	Argument	f		1488625	0					
ANR	1488662	Identifier	f		1488625	0					
ANR	1488663	Argument	off		1488625	1					
ANR	1488664	Identifier	off		1488625	0					
ANR	1488665	Argument	- 1		1488625	2					
ANR	1488666	UnaryOperationExpression	- 1		1488625	0					
ANR	1488667	UnaryOperator	-		1488625	0					
ANR	1488668	PrimaryExpression	1		1488625	1					
ANR	1488669	IfStatement	if ( ! flags_at )		1488625	4					
ANR	1488670	Condition	! flags_at	603:5:14752:14760	1488625	0	True				
ANR	1488671	UnaryOperationExpression	! flags_at		1488625	0					
ANR	1488672	UnaryOperator	!		1488625	0					
ANR	1488673	Identifier	flags_at		1488625	1					
ANR	1488674	CompoundStatement		7:16:173:173	1488625	1					
ANR	1488675	ReturnStatement	return NULL ;	604:2:14767:14778	1488625	0	True				
ANR	1488676	Identifier	NULL		1488625	0					
ANR	1488677	IfStatement	if ( flags_at -> off == off )		1488625	5					
ANR	1488678	Condition	flags_at -> off == off	606:5:14788:14807	1488625	0	True				
ANR	1488679	EqualityExpression	flags_at -> off == off		1488625	0		==			
ANR	1488680	PtrMemberAccess	flags_at -> off		1488625	0					
ANR	1488681	Identifier	flags_at		1488625	0					
ANR	1488682	Identifier	off		1488625	1					
ANR	1488683	Identifier	off		1488625	1					
ANR	1488684	CompoundStatement		10:27:220:220	1488625	1					
ANR	1488685	Statement	r_list_foreach	607:2:14814:14827	1488625	0	True				
ANR	1488686	Statement	(	607:17:14829:14829	1488625	1	True				
ANR	1488687	Statement	flags_at	607:18:14830:14837	1488625	2	True				
ANR	1488688	Statement	->	607:26:14838:14839	1488625	3	True				
ANR	1488689	Statement	flags	607:28:14840:14844	1488625	4	True				
ANR	1488690	Statement	","	607:33:14845:14845	1488625	5	True				
ANR	1488691	Statement	iter	607:35:14847:14850	1488625	6	True				
ANR	1488692	Statement	","	607:39:14851:14851	1488625	7	True				
ANR	1488693	Statement	item	607:41:14853:14856	1488625	8	True				
ANR	1488694	Statement	)	607:45:14857:14857	1488625	9	True				
ANR	1488695	CompoundStatement		11:47:269:269	1488625	10					
ANR	1488696	IfStatement	"if ( IS_FI_NOTIN_SPACE ( f , item ) )"		1488625	0					
ANR	1488697	Condition	"IS_FI_NOTIN_SPACE ( f , item )"	608:7:14868:14894	1488625	0	True				
ANR	1488698	CallExpression	"IS_FI_NOTIN_SPACE ( f , item )"		1488625	0					
ANR	1488699	Callee	IS_FI_NOTIN_SPACE		1488625	0					
ANR	1488700	Identifier	IS_FI_NOTIN_SPACE		1488625	0					
ANR	1488701	ArgumentList	f		1488625	1					
ANR	1488702	Argument	f		1488625	0					
ANR	1488703	Identifier	f		1488625	0					
ANR	1488704	Argument	item		1488625	1					
ANR	1488705	Identifier	item		1488625	0					
ANR	1488706	CompoundStatement		12:36:307:307	1488625	1					
ANR	1488707	ContinueStatement	continue ;	609:4:14903:14911	1488625	0	True				
ANR	1488708	IfStatement	if ( nice )		1488625	1					
ANR	1488709	Condition	nice	611:7:14925:14928	1488625	0	True				
ANR	1488710	Identifier	nice		1488625	0					
ANR	1488711	CompoundStatement		15:13:341:341	1488625	1					
ANR	1488712	IfStatement	if ( isFunctionFlag ( nice -> name ) )		1488625	0					
ANR	1488713	Condition	isFunctionFlag ( nice -> name )	612:8:14941:14967	1488625	0	True				
ANR	1488714	CallExpression	isFunctionFlag ( nice -> name )		1488625	0					
ANR	1488715	Callee	isFunctionFlag		1488625	0					
ANR	1488716	Identifier	isFunctionFlag		1488625	0					
ANR	1488717	ArgumentList	nice -> name		1488625	1					
ANR	1488718	Argument	nice -> name		1488625	0					
ANR	1488719	PtrMemberAccess	nice -> name		1488625	0					
ANR	1488720	Identifier	nice		1488625	0					
ANR	1488721	Identifier	name		1488625	1					
ANR	1488722	CompoundStatement		16:37:380:380	1488625	1					
ANR	1488723	ExpressionStatement	nice = item	613:5:14977:14988	1488625	0	True				
ANR	1488724	AssignmentExpression	nice = item		1488625	0		=			
ANR	1488725	Identifier	nice		1488625	0					
ANR	1488726	Identifier	item		1488625	1					
ANR	1488727	ElseStatement	else		1488625	0					
ANR	1488728	CompoundStatement		19:10:416:416	1488625	0					
ANR	1488729	ExpressionStatement	nice = item	616:4:15012:15023	1488625	0	True				
ANR	1488730	AssignmentExpression	nice = item		1488625	0		=			
ANR	1488731	Identifier	nice		1488625	0					
ANR	1488732	Identifier	item		1488625	1					
ANR	1488733	ReturnStatement	return nice ;	619:2:15036:15047	1488625	11	True				
ANR	1488734	Identifier	nice		1488625	0					
ANR	1488735	IfStatement	if ( ! closest )		1488625	6					
ANR	1488736	Condition	! closest	622:5:15058:15065	1488625	0	True				
ANR	1488737	UnaryOperationExpression	! closest		1488625	0					
ANR	1488738	UnaryOperator	!		1488625	0					
ANR	1488739	Identifier	closest		1488625	1					
ANR	1488740	CompoundStatement		26:15:478:478	1488625	1					
ANR	1488741	ReturnStatement	return NULL ;	623:2:15072:15083	1488625	0	True				
ANR	1488742	Identifier	NULL		1488625	0					
ANR	1488743	WhileStatement	while ( ! nice && flags_at )		1488625	7					
ANR	1488744	Condition	! nice && flags_at	625:8:15096:15112	1488625	0	True				
ANR	1488745	AndExpression	! nice && flags_at		1488625	0		&&			
ANR	1488746	UnaryOperationExpression	! nice		1488625	0					
ANR	1488747	UnaryOperator	!		1488625	0					
ANR	1488748	Identifier	nice		1488625	1					
ANR	1488749	Identifier	flags_at		1488625	1					
ANR	1488750	CompoundStatement		29:27:525:525	1488625	1					
ANR	1488751	Statement	r_list_foreach	626:2:15119:15132	1488625	0	True				
ANR	1488752	Statement	(	626:17:15134:15134	1488625	1	True				
ANR	1488753	Statement	flags_at	626:18:15135:15142	1488625	2	True				
ANR	1488754	Statement	->	626:26:15143:15144	1488625	3	True				
ANR	1488755	Statement	flags	626:28:15145:15149	1488625	4	True				
ANR	1488756	Statement	","	626:33:15150:15150	1488625	5	True				
ANR	1488757	Statement	iter	626:35:15152:15155	1488625	6	True				
ANR	1488758	Statement	","	626:39:15156:15156	1488625	7	True				
ANR	1488759	Statement	item	626:41:15158:15161	1488625	8	True				
ANR	1488760	Statement	)	626:45:15162:15162	1488625	9	True				
ANR	1488761	CompoundStatement		30:47:574:574	1488625	10					
ANR	1488762	IfStatement	"if ( IS_FI_NOTIN_SPACE ( f , item ) )"		1488625	0					
ANR	1488763	Condition	"IS_FI_NOTIN_SPACE ( f , item )"	627:7:15173:15199	1488625	0	True				
ANR	1488764	CallExpression	"IS_FI_NOTIN_SPACE ( f , item )"		1488625	0					
ANR	1488765	Callee	IS_FI_NOTIN_SPACE		1488625	0					
ANR	1488766	Identifier	IS_FI_NOTIN_SPACE		1488625	0					
ANR	1488767	ArgumentList	f		1488625	1					
ANR	1488768	Argument	f		1488625	0					
ANR	1488769	Identifier	f		1488625	0					
ANR	1488770	Argument	item		1488625	1					
ANR	1488771	Identifier	item		1488625	0					
ANR	1488772	CompoundStatement		31:36:612:612	1488625	1					
ANR	1488773	ContinueStatement	continue ;	628:4:15208:15216	1488625	0	True				
ANR	1488774	IfStatement	if ( item -> offset == off )		1488625	1					
ANR	1488775	Condition	item -> offset == off	630:7:15230:15248	1488625	0	True				
ANR	1488776	EqualityExpression	item -> offset == off		1488625	0		==			
ANR	1488777	PtrMemberAccess	item -> offset		1488625	0					
ANR	1488778	Identifier	item		1488625	0					
ANR	1488779	Identifier	offset		1488625	1					
ANR	1488780	Identifier	off		1488625	1					
ANR	1488781	CompoundStatement		34:28:661:661	1488625	1					
ANR	1488782	ExpressionStatement	"eprintf ( ""XXX Should never happend\\n"" )"	631:4:15257:15295	1488625	0	True				
ANR	1488783	CallExpression	"eprintf ( ""XXX Should never happend\\n"" )"		1488625	0					
ANR	1488784	Callee	eprintf		1488625	0					
ANR	1488785	Identifier	eprintf		1488625	0					
ANR	1488786	ArgumentList	"""XXX Should never happend\\n"""		1488625	1					
ANR	1488787	Argument	"""XXX Should never happend\\n"""		1488625	0					
ANR	1488788	PrimaryExpression	"""XXX Should never happend\\n"""		1488625	0					
ANR	1488789	ReturnStatement	"return evalFlag ( f , item ) ;"	632:4:15301:15326	1488625	1	True				
ANR	1488790	CallExpression	"evalFlag ( f , item )"		1488625	0					
ANR	1488791	Callee	evalFlag		1488625	0					
ANR	1488792	Identifier	evalFlag		1488625	0					
ANR	1488793	ArgumentList	f		1488625	1					
ANR	1488794	Argument	f		1488625	0					
ANR	1488795	Identifier	f		1488625	0					
ANR	1488796	Argument	item		1488625	1					
ANR	1488797	Identifier	item		1488625	0					
ANR	1488798	ExpressionStatement	nice = item	634:3:15336:15347	1488625	2	True				
ANR	1488799	AssignmentExpression	nice = item		1488625	0		=			
ANR	1488800	Identifier	nice		1488625	0					
ANR	1488801	Identifier	item		1488625	1					
ANR	1488802	BreakStatement	break ;	635:3:15352:15357	1488625	3	True				
ANR	1488803	IfStatement	if ( flags_at -> off )		1488625	11					
ANR	1488804	Condition	flags_at -> off	637:6:15369:15381	1488625	0	True				
ANR	1488805	PtrMemberAccess	flags_at -> off		1488625	0					
ANR	1488806	Identifier	flags_at		1488625	0					
ANR	1488807	Identifier	off		1488625	1					
ANR	1488808	CompoundStatement		41:21:794:794	1488625	1					
ANR	1488809	ExpressionStatement	"flags_at = r_flag_get_nearest_list ( f , flags_at -> off - 1 , - 1 )"	638:3:15389:15450	1488625	0	True				
ANR	1488810	AssignmentExpression	"flags_at = r_flag_get_nearest_list ( f , flags_at -> off - 1 , - 1 )"		1488625	0		=			
ANR	1488811	Identifier	flags_at		1488625	0					
ANR	1488812	CallExpression	"r_flag_get_nearest_list ( f , flags_at -> off - 1 , - 1 )"		1488625	1					
ANR	1488813	Callee	r_flag_get_nearest_list		1488625	0					
ANR	1488814	Identifier	r_flag_get_nearest_list		1488625	0					
ANR	1488815	ArgumentList	f		1488625	1					
ANR	1488816	Argument	f		1488625	0					
ANR	1488817	Identifier	f		1488625	0					
ANR	1488818	Argument	flags_at -> off - 1		1488625	1					
ANR	1488819	AdditiveExpression	flags_at -> off - 1		1488625	0		-			
ANR	1488820	PtrMemberAccess	flags_at -> off		1488625	0					
ANR	1488821	Identifier	flags_at		1488625	0					
ANR	1488822	Identifier	off		1488625	1					
ANR	1488823	PrimaryExpression	1		1488625	1					
ANR	1488824	Argument	- 1		1488625	2					
ANR	1488825	UnaryOperationExpression	- 1		1488625	0					
ANR	1488826	UnaryOperator	-		1488625	0					
ANR	1488827	PrimaryExpression	1		1488625	1					
ANR	1488828	ElseStatement	else		1488625	0					
ANR	1488829	CompoundStatement		43:9:871:871	1488625	0					
ANR	1488830	ExpressionStatement	flags_at = NULL	640:3:15466:15481	1488625	0	True				
ANR	1488831	AssignmentExpression	flags_at = NULL		1488625	0		=			
ANR	1488832	Identifier	flags_at		1488625	0					
ANR	1488833	Identifier	NULL		1488625	1					
ANR	1488834	ReturnStatement	"return nice ? evalFlag ( f , nice ) : NULL ;"	643:1:15491:15528	1488625	8	True				
ANR	1488835	ConditionalExpression	"nice ? evalFlag ( f , nice ) : NULL"		1488625	0					
ANR	1488836	Condition	nice		1488625	0					
ANR	1488837	Identifier	nice		1488625	0					
ANR	1488838	CallExpression	"evalFlag ( f , nice )"		1488625	1					
ANR	1488839	Callee	evalFlag		1488625	0					
ANR	1488840	Identifier	evalFlag		1488625	0					
ANR	1488841	ArgumentList	f		1488625	1					
ANR	1488842	Argument	f		1488625	0					
ANR	1488843	Identifier	f		1488625	0					
ANR	1488844	Argument	nice		1488625	1					
ANR	1488845	Identifier	nice		1488625	0					
ANR	1488846	Identifier	NULL		1488625	2					
ANR	1488847	ReturnType	R_API RFlagItem *		1488625	1					
ANR	1488848	Identifier	r_flag_get_at		1488625	2					
ANR	1488849	ParameterList	"RFlag * f , ut64 off , bool closest"		1488625	3					
ANR	1488850	Parameter	RFlag * f	597:31:14555:14562	1488625	0	True				
ANR	1488851	ParameterType	RFlag *		1488625	0					
ANR	1488852	Identifier	f		1488625	1					
ANR	1488853	Parameter	ut64 off	597:41:14565:14572	1488625	1	True				
ANR	1488854	ParameterType	ut64		1488625	0					
ANR	1488855	Identifier	off		1488625	1					
ANR	1488856	Parameter	bool closest	597:51:14575:14586	1488625	2	True				
ANR	1488857	ParameterType	bool		1488625	0					
ANR	1488858	Identifier	closest		1488625	1					
ANR	1488859	CFGEntryNode	ENTRY		1488625		True				
ANR	1488860	CFGExitNode	EXIT		1488625		True				
ANR	1488861	CFGErrorNode	ERROR		1488625		True				
ANR	1488862	Symbol	item		1488625						
ANR	1488863	Symbol	NULL		1488625						
ANR	1488864	Symbol	f		1488625						
ANR	1488865	Symbol	evalFlag		1488625						
ANR	1488866	Symbol	iter		1488625						
ANR	1488867	Symbol	IS_FI_NOTIN_SPACE		1488625						
ANR	1488868	Symbol	flags_at		1488625						
ANR	1488869	Symbol	isFunctionFlag		1488625						
ANR	1488870	Symbol	off		1488625						
ANR	1488871	Symbol	nice		1488625						
ANR	1488872	Symbol	flags_at -> off		1488625						
ANR	1488873	Symbol	* nice		1488625						
ANR	1488874	Symbol	r_flag_get_nearest_list		1488625						
ANR	1488875	Symbol	* item		1488625						
ANR	1488876	Symbol	* flags_at		1488625						
ANR	1488877	Symbol	nice -> name		1488625						
ANR	1488878	Symbol	closest		1488625						
ANR	1488879	Symbol	item -> offset		1488625						
ANR	1488880	Function	append_to_list	646:0:15533:15658							
ANR	1488881	FunctionDef	"append_to_list (RFlagItem * fi , void * user)"		1488880	0					
ANR	1488882	CompoundStatement		646:54:15587:15658	1488880	0					
ANR	1488883	IdentifierDeclStatement	RList * ret = ( RList * ) user ;	647:1:15590:15616	1488880	0	True				
ANR	1488884	IdentifierDecl	* ret = ( RList * ) user		1488880	0					
ANR	1488885	IdentifierDeclType	RList *		1488880	0					
ANR	1488886	Identifier	ret		1488880	1					
ANR	1488887	AssignmentExpression	* ret = ( RList * ) user		1488880	2		=			
ANR	1488888	Identifier	ret		1488880	0					
ANR	1488889	CastExpression	( RList * ) user		1488880	1					
ANR	1488890	CastTarget	RList *		1488880	0					
ANR	1488891	Identifier	user		1488880	1					
ANR	1488892	ExpressionStatement	"r_list_append ( ret , fi )"	648:1:15619:15642	1488880	1	True				
ANR	1488893	CallExpression	"r_list_append ( ret , fi )"		1488880	0					
ANR	1488894	Callee	r_list_append		1488880	0					
ANR	1488895	Identifier	r_list_append		1488880	0					
ANR	1488896	ArgumentList	ret		1488880	1					
ANR	1488897	Argument	ret		1488880	0					
ANR	1488898	Identifier	ret		1488880	0					
ANR	1488899	Argument	fi		1488880	1					
ANR	1488900	Identifier	fi		1488880	0					
ANR	1488901	ReturnStatement	return true ;	649:1:15645:15656	1488880	2	True				
ANR	1488902	Identifier	true		1488880	0					
ANR	1488903	ReturnType	static bool		1488880	1					
ANR	1488904	Identifier	append_to_list		1488880	2					
ANR	1488905	ParameterList	"RFlagItem * fi , void * user"		1488880	3					
ANR	1488906	Parameter	RFlagItem * fi	646:27:15560:15572	1488880	0	True				
ANR	1488907	ParameterType	RFlagItem *		1488880	0					
ANR	1488908	Identifier	fi		1488880	1					
ANR	1488909	Parameter	void * user	646:42:15575:15584	1488880	1	True				
ANR	1488910	ParameterType	void *		1488880	0					
ANR	1488911	Identifier	user		1488880	1					
ANR	1488912	CFGEntryNode	ENTRY		1488880		True				
ANR	1488913	CFGExitNode	EXIT		1488880		True				
ANR	1488914	Symbol	ret		1488880						
ANR	1488915	Symbol	fi		1488880						
ANR	1488916	Symbol	true		1488880						
ANR	1488917	Symbol	user		1488880						
ANR	1488918	Function	r_flag_all_list	652:0:15661:15897							
ANR	1488919	FunctionDef	"r_flag_all_list (RFlag * f , bool by_space)"		1488918	0					
ANR	1488920	CompoundStatement		652:54:15715:15897	1488918	0					
ANR	1488921	IdentifierDeclStatement	RList * ret = r_list_new ( ) ;	653:1:15718:15744	1488918	0	True				
ANR	1488922	IdentifierDecl	* ret = r_list_new ( )		1488918	0					
ANR	1488923	IdentifierDeclType	RList *		1488918	0					
ANR	1488924	Identifier	ret		1488918	1					
ANR	1488925	AssignmentExpression	* ret = r_list_new ( )		1488918	2		=			
ANR	1488926	Identifier	ret		1488918	0					
ANR	1488927	CallExpression	r_list_new ( )		1488918	1					
ANR	1488928	Callee	r_list_new		1488918	0					
ANR	1488929	Identifier	r_list_new		1488918	0					
ANR	1488930	ArgumentList			1488918	1					
ANR	1488931	IfStatement	if ( ! ret )		1488918	1					
ANR	1488932	Condition	! ret	654:5:15751:15754	1488918	0	True				
ANR	1488933	UnaryOperationExpression	! ret		1488918	0					
ANR	1488934	UnaryOperator	!		1488918	0					
ANR	1488935	Identifier	ret		1488918	1					
ANR	1488936	CompoundStatement		3:11:41:41	1488918	1					
ANR	1488937	ReturnStatement	return NULL ;	655:2:15761:15772	1488918	0	True				
ANR	1488938	Identifier	NULL		1488918	0					
ANR	1488939	IdentifierDeclStatement	RSpace * cur = by_space ? r_flag_space_cur ( f ) : NULL ;	658:1:15779:15829	1488918	2	True				
ANR	1488940	IdentifierDecl	* cur = by_space ? r_flag_space_cur ( f ) : NULL		1488918	0					
ANR	1488941	IdentifierDeclType	RSpace *		1488918	0					
ANR	1488942	Identifier	cur		1488918	1					
ANR	1488943	AssignmentExpression	* cur = by_space ? r_flag_space_cur ( f ) : NULL		1488918	2		=			
ANR	1488944	Identifier	cur		1488918	0					
ANR	1488945	ConditionalExpression	by_space ? r_flag_space_cur ( f ) : NULL		1488918	1					
ANR	1488946	Condition	by_space		1488918	0					
ANR	1488947	Identifier	by_space		1488918	0					
ANR	1488948	CallExpression	r_flag_space_cur ( f )		1488918	1					
ANR	1488949	Callee	r_flag_space_cur		1488918	0					
ANR	1488950	Identifier	r_flag_space_cur		1488918	0					
ANR	1488951	ArgumentList	f		1488918	1					
ANR	1488952	Argument	f		1488918	0					
ANR	1488953	Identifier	f		1488918	0					
ANR	1488954	Identifier	NULL		1488918	2					
ANR	1488955	ExpressionStatement	"r_flag_foreach_space ( f , cur , append_to_list , ret )"	659:1:15832:15882	1488918	3	True				
ANR	1488956	CallExpression	"r_flag_foreach_space ( f , cur , append_to_list , ret )"		1488918	0					
ANR	1488957	Callee	r_flag_foreach_space		1488918	0					
ANR	1488958	Identifier	r_flag_foreach_space		1488918	0					
ANR	1488959	ArgumentList	f		1488918	1					
ANR	1488960	Argument	f		1488918	0					
ANR	1488961	Identifier	f		1488918	0					
ANR	1488962	Argument	cur		1488918	1					
ANR	1488963	Identifier	cur		1488918	0					
ANR	1488964	Argument	append_to_list		1488918	2					
ANR	1488965	Identifier	append_to_list		1488918	0					
ANR	1488966	Argument	ret		1488918	3					
ANR	1488967	Identifier	ret		1488918	0					
ANR	1488968	ReturnStatement	return ret ;	660:1:15885:15895	1488918	4	True				
ANR	1488969	Identifier	ret		1488918	0					
ANR	1488970	ReturnType	R_API RList *		1488918	1					
ANR	1488971	Identifier	r_flag_all_list		1488918	2					
ANR	1488972	ParameterList	"RFlag * f , bool by_space"		1488918	3					
ANR	1488973	Parameter	RFlag * f	652:29:15690:15697	1488918	0	True				
ANR	1488974	ParameterType	RFlag *		1488918	0					
ANR	1488975	Identifier	f		1488918	1					
ANR	1488976	Parameter	bool by_space	652:39:15700:15712	1488918	1	True				
ANR	1488977	ParameterType	bool		1488918	0					
ANR	1488978	Identifier	by_space		1488918	1					
ANR	1488979	CFGEntryNode	ENTRY		1488918		True				
ANR	1488980	CFGExitNode	EXIT		1488918		True				
ANR	1488981	Symbol	ret		1488918						
ANR	1488982	Symbol	cur		1488918						
ANR	1488983	Symbol	NULL		1488918						
ANR	1488984	Symbol	by_space		1488918						
ANR	1488985	Symbol	r_flag_space_cur		1488918						
ANR	1488986	Symbol	f		1488918						
ANR	1488987	Symbol	r_list_new		1488918						
ANR	1488988	Symbol	append_to_list		1488918						
ANR	1488989	Function	r_flag_get_list	664:6:15982:16152							
ANR	1488990	FunctionDef	"r_flag_get_list (RFlag * f , ut64 off)"		1488989	0					
ANR	1488991	CompoundStatement		664:72:16048:16152	1488989	0					
ANR	1488992	IdentifierDeclStatement	"const RFlagsAtOffset * item = r_flag_get_nearest_list ( f , off , 0 ) ;"	665:1:16051:16115	1488989	0	True				
ANR	1488993	IdentifierDecl	"* item = r_flag_get_nearest_list ( f , off , 0 )"		1488989	0					
ANR	1488994	IdentifierDeclType	const RFlagsAtOffset *		1488989	0					
ANR	1488995	Identifier	item		1488989	1					
ANR	1488996	AssignmentExpression	"* item = r_flag_get_nearest_list ( f , off , 0 )"		1488989	2		=			
ANR	1488997	Identifier	item		1488989	0					
ANR	1488998	CallExpression	"r_flag_get_nearest_list ( f , off , 0 )"		1488989	1					
ANR	1488999	Callee	r_flag_get_nearest_list		1488989	0					
ANR	1489000	Identifier	r_flag_get_nearest_list		1488989	0					
ANR	1489001	ArgumentList	f		1488989	1					
ANR	1489002	Argument	f		1488989	0					
ANR	1489003	Identifier	f		1488989	0					
ANR	1489004	Argument	off		1488989	1					
ANR	1489005	Identifier	off		1488989	0					
ANR	1489006	Argument	0		1488989	2					
ANR	1489007	PrimaryExpression	0		1488989	0					
ANR	1489008	ReturnStatement	return item ? item -> flags : NULL ;	666:1:16118:16150	1488989	1	True				
ANR	1489009	ConditionalExpression	item ? item -> flags : NULL		1488989	0					
ANR	1489010	Condition	item		1488989	0					
ANR	1489011	Identifier	item		1488989	0					
ANR	1489012	PtrMemberAccess	item -> flags		1488989	1					
ANR	1489013	Identifier	item		1488989	0					
ANR	1489014	Identifier	flags		1488989	1					
ANR	1489015	Identifier	NULL		1488989	2					
ANR	1489016	ReturnType	const RList *		1488989	1					
ANR	1489017	Identifier	r_flag_get_list		1488989	2					
ANR	1489018	ParameterList	"RFlag * f , ut64 off"		1488989	3					
ANR	1489019	Parameter	RFlag * f	664:52:16028:16035	1488989	0	True				
ANR	1489020	ParameterType	RFlag *		1488989	0					
ANR	1489021	Identifier	f		1488989	1					
ANR	1489022	Parameter	ut64 off	664:62:16038:16045	1488989	1	True				
ANR	1489023	ParameterType	ut64		1488989	0					
ANR	1489024	Identifier	off		1488989	1					
ANR	1489025	CFGEntryNode	ENTRY		1488989		True				
ANR	1489026	CFGExitNode	EXIT		1488989		True				
ANR	1489027	Symbol	item		1488989						
ANR	1489028	Symbol	NULL		1488989						
ANR	1489029	Symbol	f		1488989						
ANR	1489030	Symbol	r_flag_get_nearest_list		1488989						
ANR	1489031	Symbol	* item		1488989						
ANR	1489032	Symbol	item -> flags		1488989						
ANR	1489033	Symbol	off		1488989						
ANR	1489034	Function	r_flag_get_liststr	669:0:16155:16424							
ANR	1489035	FunctionDef	"r_flag_get_liststr (RFlag * f , ut64 off)"		1489034	0					
ANR	1489036	CompoundStatement		669:51:16206:16424	1489034	0					
ANR	1489037	IdentifierDeclStatement	RFlagItem * fi ;	670:1:16209:16222	1489034	0	True				
ANR	1489038	IdentifierDecl	* fi		1489034	0					
ANR	1489039	IdentifierDeclType	RFlagItem *		1489034	0					
ANR	1489040	Identifier	fi		1489034	1					
ANR	1489041	IdentifierDeclStatement	RListIter * iter ;	671:1:16225:16240	1489034	1	True				
ANR	1489042	IdentifierDecl	* iter		1489034	0					
ANR	1489043	IdentifierDeclType	RListIter *		1489034	0					
ANR	1489044	Identifier	iter		1489034	1					
ANR	1489045	IdentifierDeclStatement	"const RList * list = r_flag_get_list ( f , off ) ;"	672:1:16243:16287	1489034	2	True				
ANR	1489046	IdentifierDecl	"* list = r_flag_get_list ( f , off )"		1489034	0					
ANR	1489047	IdentifierDeclType	const RList *		1489034	0					
ANR	1489048	Identifier	list		1489034	1					
ANR	1489049	AssignmentExpression	"* list = r_flag_get_list ( f , off )"		1489034	2		=			
ANR	1489050	Identifier	list		1489034	0					
ANR	1489051	CallExpression	"r_flag_get_list ( f , off )"		1489034	1					
ANR	1489052	Callee	r_flag_get_list		1489034	0					
ANR	1489053	Identifier	r_flag_get_list		1489034	0					
ANR	1489054	ArgumentList	f		1489034	1					
ANR	1489055	Argument	f		1489034	0					
ANR	1489056	Identifier	f		1489034	0					
ANR	1489057	Argument	off		1489034	1					
ANR	1489058	Identifier	off		1489034	0					
ANR	1489059	IdentifierDeclStatement	char * p = NULL ;	673:1:16290:16304	1489034	3	True				
ANR	1489060	IdentifierDecl	* p = NULL		1489034	0					
ANR	1489061	IdentifierDeclType	char *		1489034	0					
ANR	1489062	Identifier	p		1489034	1					
ANR	1489063	AssignmentExpression	* p = NULL		1489034	2		=			
ANR	1489064	Identifier	NULL		1489034	0					
ANR	1489065	Identifier	NULL		1489034	1					
ANR	1489066	Statement	r_list_foreach	674:1:16307:16320	1489034	4	True				
ANR	1489067	Statement	(	674:16:16322:16322	1489034	5	True				
ANR	1489068	Statement	list	674:17:16323:16326	1489034	6	True				
ANR	1489069	Statement	","	674:21:16327:16327	1489034	7	True				
ANR	1489070	Statement	iter	674:23:16329:16332	1489034	8	True				
ANR	1489071	Statement	","	674:27:16333:16333	1489034	9	True				
ANR	1489072	Statement	fi	674:29:16335:16336	1489034	10	True				
ANR	1489073	Statement	)	674:31:16337:16337	1489034	11	True				
ANR	1489074	CompoundStatement		6:33:132:132	1489034	12					
ANR	1489075	ExpressionStatement	"p = r_str_appendf ( p , ""%s%s"" , fi -> realname , iter -> n ? "","" : "":"" )"	675:2:16343:16408	1489034	0	True				
ANR	1489076	AssignmentExpression	"p = r_str_appendf ( p , ""%s%s"" , fi -> realname , iter -> n ? "","" : "":"" )"		1489034	0		=			
ANR	1489077	Identifier	p		1489034	0					
ANR	1489078	CallExpression	"r_str_appendf ( p , ""%s%s"" , fi -> realname , iter -> n ? "","" : "":"" )"		1489034	1					
ANR	1489079	Callee	r_str_appendf		1489034	0					
ANR	1489080	Identifier	r_str_appendf		1489034	0					
ANR	1489081	ArgumentList	p		1489034	1					
ANR	1489082	Argument	p		1489034	0					
ANR	1489083	Identifier	p		1489034	0					
ANR	1489084	Argument	"""%s%s"""		1489034	1					
ANR	1489085	PrimaryExpression	"""%s%s"""		1489034	0					
ANR	1489086	Argument	fi -> realname		1489034	2					
ANR	1489087	PtrMemberAccess	fi -> realname		1489034	0					
ANR	1489088	Identifier	fi		1489034	0					
ANR	1489089	Identifier	realname		1489034	1					
ANR	1489090	Argument	"iter -> n ? "","" : "":"""		1489034	3					
ANR	1489091	ConditionalExpression	"iter -> n ? "","" : "":"""		1489034	0					
ANR	1489092	Condition	iter -> n		1489034	0					
ANR	1489093	PtrMemberAccess	iter -> n		1489034	0					
ANR	1489094	Identifier	iter		1489034	0					
ANR	1489095	Identifier	n		1489034	1					
ANR	1489096	PrimaryExpression	""","""		1489034	1					
ANR	1489097	PrimaryExpression	""":"""		1489034	2					
ANR	1489098	ReturnStatement	return p ;	678:1:16414:16422	1489034	13	True				
ANR	1489099	Identifier	p		1489034	0					
ANR	1489100	ReturnType	R_API char *		1489034	1					
ANR	1489101	Identifier	r_flag_get_liststr		1489034	2					
ANR	1489102	ParameterList	"RFlag * f , ut64 off"		1489034	3					
ANR	1489103	Parameter	RFlag * f	669:31:16186:16193	1489034	0	True				
ANR	1489104	ParameterType	RFlag *		1489034	0					
ANR	1489105	Identifier	f		1489034	1					
ANR	1489106	Parameter	ut64 off	669:41:16196:16203	1489034	1	True				
ANR	1489107	ParameterType	ut64		1489034	0					
ANR	1489108	Identifier	off		1489034	1					
ANR	1489109	CFGEntryNode	ENTRY		1489034		True				
ANR	1489110	CFGExitNode	EXIT		1489034		True				
ANR	1489111	Symbol	fi		1489034						
ANR	1489112	Symbol	NULL		1489034						
ANR	1489113	Symbol	f		1489034						
ANR	1489114	Symbol	iter		1489034						
ANR	1489115	Symbol	* fi		1489034						
ANR	1489116	Symbol	list		1489034						
ANR	1489117	Symbol	off		1489034						
ANR	1489118	Symbol	p		1489034						
ANR	1489119	Symbol	* iter		1489034						
ANR	1489120	Symbol	iter -> n		1489034						
ANR	1489121	Symbol	r_str_appendf		1489034						
ANR	1489122	Symbol	fi -> realname		1489034						
ANR	1489123	Symbol	r_flag_get_list		1489034						
ANR	1489124	Function	r_flag_set_next	683:0:16578:17154							
ANR	1489125	FunctionDef	"r_flag_set_next (RFlag * f , const char * name , ut64 off , ut32 size)"		1489124	0					
ANR	1489126	CompoundStatement		683:82:16660:17154	1489124	0					
ANR	1489127	ExpressionStatement	"r_return_val_if_fail ( f && name , NULL )"	684:1:16663:16701	1489124	0	True				
ANR	1489128	CallExpression	"r_return_val_if_fail ( f && name , NULL )"		1489124	0					
ANR	1489129	Callee	r_return_val_if_fail		1489124	0					
ANR	1489130	Identifier	r_return_val_if_fail		1489124	0					
ANR	1489131	ArgumentList	f && name		1489124	1					
ANR	1489132	Argument	f && name		1489124	0					
ANR	1489133	AndExpression	f && name		1489124	0		&&			
ANR	1489134	Identifier	f		1489124	0					
ANR	1489135	Identifier	name		1489124	1					
ANR	1489136	Argument	NULL		1489124	1					
ANR	1489137	Identifier	NULL		1489124	0					
ANR	1489138	IfStatement	"if ( ! r_flag_get ( f , name ) )"		1489124	1					
ANR	1489139	Condition	"! r_flag_get ( f , name )"	685:5:16708:16728	1489124	0	True				
ANR	1489140	UnaryOperationExpression	"! r_flag_get ( f , name )"		1489124	0					
ANR	1489141	UnaryOperator	!		1489124	0					
ANR	1489142	CallExpression	"r_flag_get ( f , name )"		1489124	1					
ANR	1489143	Callee	r_flag_get		1489124	0					
ANR	1489144	Identifier	r_flag_get		1489124	0					
ANR	1489145	ArgumentList	f		1489124	1					
ANR	1489146	Argument	f		1489124	0					
ANR	1489147	Identifier	f		1489124	0					
ANR	1489148	Argument	name		1489124	1					
ANR	1489149	Identifier	name		1489124	0					
ANR	1489150	CompoundStatement		3:28:70:70	1489124	1					
ANR	1489151	ReturnStatement	"return r_flag_set ( f , name , off , size ) ;"	686:2:16735:16773	1489124	0	True				
ANR	1489152	CallExpression	"r_flag_set ( f , name , off , size )"		1489124	0					
ANR	1489153	Callee	r_flag_set		1489124	0					
ANR	1489154	Identifier	r_flag_set		1489124	0					
ANR	1489155	ArgumentList	f		1489124	1					
ANR	1489156	Argument	f		1489124	0					
ANR	1489157	Identifier	f		1489124	0					
ANR	1489158	Argument	name		1489124	1					
ANR	1489159	Identifier	name		1489124	0					
ANR	1489160	Argument	off		1489124	2					
ANR	1489161	Identifier	off		1489124	0					
ANR	1489162	Argument	size		1489124	3					
ANR	1489163	Identifier	size		1489124	0					
ANR	1489164	IdentifierDeclStatement	"int i , newNameSize = strlen ( name ) ;"	688:1:16779:16813	1489124	2	True				
ANR	1489165	IdentifierDecl	i		1489124	0					
ANR	1489166	IdentifierDeclType	int		1489124	0					
ANR	1489167	Identifier	i		1489124	1					
ANR	1489168	IdentifierDecl	newNameSize = strlen ( name )		1489124	1					
ANR	1489169	IdentifierDeclType	int		1489124	0					
ANR	1489170	Identifier	newNameSize		1489124	1					
ANR	1489171	AssignmentExpression	newNameSize = strlen ( name )		1489124	2		=			
ANR	1489172	Identifier	newNameSize		1489124	0					
ANR	1489173	CallExpression	strlen ( name )		1489124	1					
ANR	1489174	Callee	strlen		1489124	0					
ANR	1489175	Identifier	strlen		1489124	0					
ANR	1489176	ArgumentList	name		1489124	1					
ANR	1489177	Argument	name		1489124	0					
ANR	1489178	Identifier	name		1489124	0					
ANR	1489179	IdentifierDeclStatement	char * newName = malloc ( newNameSize + 16 ) ;	689:1:16816:16857	1489124	3	True				
ANR	1489180	IdentifierDecl	* newName = malloc ( newNameSize + 16 )		1489124	0					
ANR	1489181	IdentifierDeclType	char *		1489124	0					
ANR	1489182	Identifier	newName		1489124	1					
ANR	1489183	AssignmentExpression	* newName = malloc ( newNameSize + 16 )		1489124	2		=			
ANR	1489184	Identifier	newName		1489124	0					
ANR	1489185	CallExpression	malloc ( newNameSize + 16 )		1489124	1					
ANR	1489186	Callee	malloc		1489124	0					
ANR	1489187	Identifier	malloc		1489124	0					
ANR	1489188	ArgumentList	newNameSize + 16		1489124	1					
ANR	1489189	Argument	newNameSize + 16		1489124	0					
ANR	1489190	AdditiveExpression	newNameSize + 16		1489124	0		+			
ANR	1489191	Identifier	newNameSize		1489124	0					
ANR	1489192	PrimaryExpression	16		1489124	1					
ANR	1489193	IfStatement	if ( ! newName )		1489124	4					
ANR	1489194	Condition	! newName	690:5:16864:16871	1489124	0	True				
ANR	1489195	UnaryOperationExpression	! newName		1489124	0					
ANR	1489196	UnaryOperator	!		1489124	0					
ANR	1489197	Identifier	newName		1489124	1					
ANR	1489198	CompoundStatement		8:15:213:213	1489124	1					
ANR	1489199	ReturnStatement	return NULL ;	691:2:16878:16889	1489124	0	True				
ANR	1489200	Identifier	NULL		1489124	0					
ANR	1489201	ExpressionStatement	"strcpy ( newName , name )"	693:1:16895:16917	1489124	5	True				
ANR	1489202	CallExpression	"strcpy ( newName , name )"		1489124	0					
ANR	1489203	Callee	strcpy		1489124	0					
ANR	1489204	Identifier	strcpy		1489124	0					
ANR	1489205	ArgumentList	newName		1489124	1					
ANR	1489206	Argument	newName		1489124	0					
ANR	1489207	Identifier	newName		1489124	0					
ANR	1489208	Argument	name		1489124	1					
ANR	1489209	Identifier	name		1489124	0					
ANR	1489210	ForStatement	for ( i = 0 ; ; i ++ )		1489124	6					
ANR	1489211	ForInit	i = 0 ;	694:6:16925:16930	1489124	0	True				
ANR	1489212	AssignmentExpression	i = 0		1489124	0		=			
ANR	1489213	Identifier	i		1489124	0					
ANR	1489214	PrimaryExpression	0		1489124	1					
ANR	1489215	PostIncDecOperationExpression	i ++	694:15:16934:16936	1489124	1	True				
ANR	1489216	Identifier	i		1489124	0					
ANR	1489217	IncDec	++		1489124	1					
ANR	1489218	CompoundStatement		12:20:278:278	1489124	2					
ANR	1489219	ExpressionStatement	"snprintf ( newName + newNameSize , 15 , "".%d"" , i )"	695:2:16943:16989	1489124	0	True				
ANR	1489220	CallExpression	"snprintf ( newName + newNameSize , 15 , "".%d"" , i )"		1489124	0					
ANR	1489221	Callee	snprintf		1489124	0					
ANR	1489222	Identifier	snprintf		1489124	0					
ANR	1489223	ArgumentList	newName + newNameSize		1489124	1					
ANR	1489224	Argument	newName + newNameSize		1489124	0					
ANR	1489225	AdditiveExpression	newName + newNameSize		1489124	0		+			
ANR	1489226	Identifier	newName		1489124	0					
ANR	1489227	Identifier	newNameSize		1489124	1					
ANR	1489228	Argument	15		1489124	1					
ANR	1489229	PrimaryExpression	15		1489124	0					
ANR	1489230	Argument	""".%d"""		1489124	2					
ANR	1489231	PrimaryExpression	""".%d"""		1489124	0					
ANR	1489232	Argument	i		1489124	3					
ANR	1489233	Identifier	i		1489124	0					
ANR	1489234	IfStatement	"if ( ! r_flag_get ( f , newName ) )"		1489124	1					
ANR	1489235	Condition	"! r_flag_get ( f , newName )"	696:6:16997:17020	1489124	0	True				
ANR	1489236	UnaryOperationExpression	"! r_flag_get ( f , newName )"		1489124	0					
ANR	1489237	UnaryOperator	!		1489124	0					
ANR	1489238	CallExpression	"r_flag_get ( f , newName )"		1489124	1					
ANR	1489239	Callee	r_flag_get		1489124	0					
ANR	1489240	Identifier	r_flag_get		1489124	0					
ANR	1489241	ArgumentList	f		1489124	1					
ANR	1489242	Argument	f		1489124	0					
ANR	1489243	Identifier	f		1489124	0					
ANR	1489244	Argument	newName		1489124	1					
ANR	1489245	Identifier	newName		1489124	0					
ANR	1489246	CompoundStatement		15:3:367:417	1489124	1					
ANR	1489247	IdentifierDeclStatement	"RFlagItem * fi = r_flag_set ( f , newName , off , size ) ;"	697:3:17028:17078	1489124	0	True				
ANR	1489248	IdentifierDecl	"* fi = r_flag_set ( f , newName , off , size )"		1489124	0					
ANR	1489249	IdentifierDeclType	RFlagItem *		1489124	0					
ANR	1489250	Identifier	fi		1489124	1					
ANR	1489251	AssignmentExpression	"* fi = r_flag_set ( f , newName , off , size )"		1489124	2		=			
ANR	1489252	Identifier	fi		1489124	0					
ANR	1489253	CallExpression	"r_flag_set ( f , newName , off , size )"		1489124	1					
ANR	1489254	Callee	r_flag_set		1489124	0					
ANR	1489255	Identifier	r_flag_set		1489124	0					
ANR	1489256	ArgumentList	f		1489124	1					
ANR	1489257	Argument	f		1489124	0					
ANR	1489258	Identifier	f		1489124	0					
ANR	1489259	Argument	newName		1489124	1					
ANR	1489260	Identifier	newName		1489124	0					
ANR	1489261	Argument	off		1489124	2					
ANR	1489262	Identifier	off		1489124	0					
ANR	1489263	Argument	size		1489124	3					
ANR	1489264	Identifier	size		1489124	0					
ANR	1489265	IfStatement	if ( fi )		1489124	1					
ANR	1489266	Condition	fi	698:7:17087:17088	1489124	0	True				
ANR	1489267	Identifier	fi		1489124	0					
ANR	1489268	CompoundStatement		16:11:430:430	1489124	1					
ANR	1489269	ExpressionStatement	free ( newName )	699:4:17097:17111	1489124	0	True				
ANR	1489270	CallExpression	free ( newName )		1489124	0					
ANR	1489271	Callee	free		1489124	0					
ANR	1489272	Identifier	free		1489124	0					
ANR	1489273	ArgumentList	newName		1489124	1					
ANR	1489274	Argument	newName		1489124	0					
ANR	1489275	Identifier	newName		1489124	0					
ANR	1489276	ReturnStatement	return fi ;	700:4:17117:17126	1489124	1	True				
ANR	1489277	Identifier	fi		1489124	0					
ANR	1489278	ReturnStatement	return NULL ;	704:1:17141:17152	1489124	7	True				
ANR	1489279	Identifier	NULL		1489124	0					
ANR	1489280	ReturnType	R_API RFlagItem *		1489124	1					
ANR	1489281	Identifier	r_flag_set_next		1489124	2					
ANR	1489282	ParameterList	"RFlag * f , const char * name , ut64 off , ut32 size"		1489124	3					
ANR	1489283	Parameter	RFlag * f	683:33:16611:16618	1489124	0	True				
ANR	1489284	ParameterType	RFlag *		1489124	0					
ANR	1489285	Identifier	f		1489124	1					
ANR	1489286	Parameter	const char * name	683:43:16621:16636	1489124	1	True				
ANR	1489287	ParameterType	const char *		1489124	0					
ANR	1489288	Identifier	name		1489124	1					
ANR	1489289	Parameter	ut64 off	683:61:16639:16646	1489124	2	True				
ANR	1489290	ParameterType	ut64		1489124	0					
ANR	1489291	Identifier	off		1489124	1					
ANR	1489292	Parameter	ut32 size	683:71:16649:16657	1489124	3	True				
ANR	1489293	ParameterType	ut32		1489124	0					
ANR	1489294	Identifier	size		1489124	1					
ANR	1489295	CFGEntryNode	ENTRY		1489124		True				
ANR	1489296	CFGExitNode	EXIT		1489124		True				
ANR	1489297	InfiniteForNode	true		1489124		True				
ANR	1489298	Symbol	r_flag_get		1489124						
ANR	1489299	Symbol	malloc		1489124						
ANR	1489300	Symbol	NULL		1489124						
ANR	1489301	Symbol	fi		1489124						
ANR	1489302	Symbol	f		1489124						
ANR	1489303	Symbol	i		1489124						
ANR	1489304	Symbol	r_flag_set		1489124						
ANR	1489305	Symbol	off		1489124						
ANR	1489306	Symbol	newNameSize		1489124						
ANR	1489307	Symbol	strlen		1489124						
ANR	1489308	Symbol	newName		1489124						
ANR	1489309	Symbol	size		1489124						
ANR	1489310	Symbol	name		1489124						
ANR	1489311	Function	r_flag_set	710:0:17358:18053							
ANR	1489312	FunctionDef	"r_flag_set (RFlag * f , const char * name , ut64 off , ut32 size)"		1489311	0					
ANR	1489313	CompoundStatement		710:77:17435:18053	1489311	0					
ANR	1489314	ExpressionStatement	"r_return_val_if_fail ( f && name && * name , NULL )"	711:1:17438:17485	1489311	0	True				
ANR	1489315	CallExpression	"r_return_val_if_fail ( f && name && * name , NULL )"		1489311	0					
ANR	1489316	Callee	r_return_val_if_fail		1489311	0					
ANR	1489317	Identifier	r_return_val_if_fail		1489311	0					
ANR	1489318	ArgumentList	f && name && * name		1489311	1					
ANR	1489319	Argument	f && name && * name		1489311	0					
ANR	1489320	AndExpression	f && name && * name		1489311	0		&&			
ANR	1489321	Identifier	f		1489311	0					
ANR	1489322	AndExpression	name && * name		1489311	1		&&			
ANR	1489323	Identifier	name		1489311	0					
ANR	1489324	UnaryOperationExpression	* name		1489311	1					
ANR	1489325	UnaryOperator	*		1489311	0					
ANR	1489326	Identifier	name		1489311	1					
ANR	1489327	Argument	NULL		1489311	1					
ANR	1489328	Identifier	NULL		1489311	0					
ANR	1489329	IdentifierDeclStatement	bool is_new = false ;	713:1:17489:17508	1489311	1	True				
ANR	1489330	IdentifierDecl	is_new = false		1489311	0					
ANR	1489331	IdentifierDeclType	bool		1489311	0					
ANR	1489332	Identifier	is_new		1489311	1					
ANR	1489333	AssignmentExpression	is_new = false		1489311	2		=			
ANR	1489334	Identifier	false		1489311	0					
ANR	1489335	Identifier	false		1489311	1					
ANR	1489336	IdentifierDeclStatement	char * itemname = filter_item_name ( name ) ;	714:1:17511:17551	1489311	2	True				
ANR	1489337	IdentifierDecl	* itemname = filter_item_name ( name )		1489311	0					
ANR	1489338	IdentifierDeclType	char *		1489311	0					
ANR	1489339	Identifier	itemname		1489311	1					
ANR	1489340	AssignmentExpression	* itemname = filter_item_name ( name )		1489311	2		=			
ANR	1489341	Identifier	itemname		1489311	0					
ANR	1489342	CallExpression	filter_item_name ( name )		1489311	1					
ANR	1489343	Callee	filter_item_name		1489311	0					
ANR	1489344	Identifier	filter_item_name		1489311	0					
ANR	1489345	ArgumentList	name		1489311	1					
ANR	1489346	Argument	name		1489311	0					
ANR	1489347	Identifier	name		1489311	0					
ANR	1489348	IfStatement	if ( ! itemname )		1489311	3					
ANR	1489349	Condition	! itemname	715:5:17558:17566	1489311	0	True				
ANR	1489350	UnaryOperationExpression	! itemname		1489311	0					
ANR	1489351	UnaryOperator	!		1489311	0					
ANR	1489352	Identifier	itemname		1489311	1					
ANR	1489353	CompoundStatement		6:16:133:133	1489311	1					
ANR	1489354	ReturnStatement	return NULL ;	716:2:17573:17584	1489311	0	True				
ANR	1489355	Identifier	NULL		1489311	0					
ANR	1489356	IdentifierDeclStatement	"RFlagItem * item = r_flag_get ( f , itemname ) ;"	719:1:17591:17633	1489311	4	True				
ANR	1489357	IdentifierDecl	"* item = r_flag_get ( f , itemname )"		1489311	0					
ANR	1489358	IdentifierDeclType	RFlagItem *		1489311	0					
ANR	1489359	Identifier	item		1489311	1					
ANR	1489360	AssignmentExpression	"* item = r_flag_get ( f , itemname )"		1489311	2		=			
ANR	1489361	Identifier	item		1489311	0					
ANR	1489362	CallExpression	"r_flag_get ( f , itemname )"		1489311	1					
ANR	1489363	Callee	r_flag_get		1489311	0					
ANR	1489364	Identifier	r_flag_get		1489311	0					
ANR	1489365	ArgumentList	f		1489311	1					
ANR	1489366	Argument	f		1489311	0					
ANR	1489367	Identifier	f		1489311	0					
ANR	1489368	Argument	itemname		1489311	1					
ANR	1489369	Identifier	itemname		1489311	0					
ANR	1489370	ExpressionStatement	free ( itemname )	720:1:17636:17651	1489311	5	True				
ANR	1489371	CallExpression	free ( itemname )		1489311	0					
ANR	1489372	Callee	free		1489311	0					
ANR	1489373	Identifier	free		1489311	0					
ANR	1489374	ArgumentList	itemname		1489311	1					
ANR	1489375	Argument	itemname		1489311	0					
ANR	1489376	Identifier	itemname		1489311	0					
ANR	1489377	IfStatement	if ( item && item -> offset == off )		1489311	6					
ANR	1489378	Condition	item && item -> offset == off	721:5:17658:17684	1489311	0	True				
ANR	1489379	AndExpression	item && item -> offset == off		1489311	0		&&			
ANR	1489380	Identifier	item		1489311	0					
ANR	1489381	EqualityExpression	item -> offset == off		1489311	1		==			
ANR	1489382	PtrMemberAccess	item -> offset		1489311	0					
ANR	1489383	Identifier	item		1489311	0					
ANR	1489384	Identifier	offset		1489311	1					
ANR	1489385	Identifier	off		1489311	1					
ANR	1489386	CompoundStatement		12:34:251:251	1489311	1					
ANR	1489387	ExpressionStatement	item -> size = size	722:2:17691:17708	1489311	0	True				
ANR	1489388	AssignmentExpression	item -> size = size		1489311	0		=			
ANR	1489389	PtrMemberAccess	item -> size		1489311	0					
ANR	1489390	Identifier	item		1489311	0					
ANR	1489391	Identifier	size		1489311	1					
ANR	1489392	Identifier	size		1489311	1					
ANR	1489393	ReturnStatement	return item ;	723:2:17712:17723	1489311	1	True				
ANR	1489394	Identifier	item		1489311	0					
ANR	1489395	IfStatement	if ( ! item )		1489311	7					
ANR	1489396	Condition	! item	726:5:17734:17738	1489311	0	True				
ANR	1489397	UnaryOperationExpression	! item		1489311	0					
ANR	1489398	UnaryOperator	!		1489311	0					
ANR	1489399	Identifier	item		1489311	1					
ANR	1489400	CompoundStatement		17:12:305:305	1489311	1					
ANR	1489401	ExpressionStatement	item = R_NEW0 ( RFlagItem )	727:2:17745:17770	1489311	0	True				
ANR	1489402	AssignmentExpression	item = R_NEW0 ( RFlagItem )		1489311	0		=			
ANR	1489403	Identifier	item		1489311	0					
ANR	1489404	CallExpression	R_NEW0 ( RFlagItem )		1489311	1					
ANR	1489405	Callee	R_NEW0		1489311	0					
ANR	1489406	Identifier	R_NEW0		1489311	0					
ANR	1489407	ArgumentList	RFlagItem		1489311	1					
ANR	1489408	Argument	RFlagItem		1489311	0					
ANR	1489409	Identifier	RFlagItem		1489311	0					
ANR	1489410	IfStatement	if ( ! item )		1489311	1					
ANR	1489411	Condition	! item	728:6:17778:17782	1489311	0	True				
ANR	1489412	UnaryOperationExpression	! item		1489311	0					
ANR	1489413	UnaryOperator	!		1489311	0					
ANR	1489414	Identifier	item		1489311	1					
ANR	1489415	CompoundStatement		19:13:349:349	1489311	1					
ANR	1489416	GotoStatement	goto err ;	729:3:17790:17798	1489311	0	True				
ANR	1489417	Identifier	err		1489311	0					
ANR	1489418	ExpressionStatement	is_new = true	731:2:17806:17819	1489311	2	True				
ANR	1489419	AssignmentExpression	is_new = true		1489311	0		=			
ANR	1489420	Identifier	is_new		1489311	0					
ANR	1489421	Identifier	true		1489311	1					
ANR	1489422	ExpressionStatement	item -> space = r_flag_space_cur ( f )	734:1:17826:17860	1489311	8	True				
ANR	1489423	AssignmentExpression	item -> space = r_flag_space_cur ( f )		1489311	0		=			
ANR	1489424	PtrMemberAccess	item -> space		1489311	0					
ANR	1489425	Identifier	item		1489311	0					
ANR	1489426	Identifier	space		1489311	1					
ANR	1489427	CallExpression	r_flag_space_cur ( f )		1489311	1					
ANR	1489428	Callee	r_flag_space_cur		1489311	0					
ANR	1489429	Identifier	r_flag_space_cur		1489311	0					
ANR	1489430	ArgumentList	f		1489311	1					
ANR	1489431	Argument	f		1489311	0					
ANR	1489432	Identifier	f		1489311	0					
ANR	1489433	ExpressionStatement	item -> size = size	735:1:17863:17880	1489311	9	True				
ANR	1489434	AssignmentExpression	item -> size = size		1489311	0		=			
ANR	1489435	PtrMemberAccess	item -> size		1489311	0					
ANR	1489436	Identifier	item		1489311	0					
ANR	1489437	Identifier	size		1489311	1					
ANR	1489438	Identifier	size		1489311	1					
ANR	1489439	ExpressionStatement	"update_flag_item_offset ( f , item , off + f -> base , is_new , true )"	737:1:17884:17946	1489311	10	True				
ANR	1489440	CallExpression	"update_flag_item_offset ( f , item , off + f -> base , is_new , true )"		1489311	0					
ANR	1489441	Callee	update_flag_item_offset		1489311	0					
ANR	1489442	Identifier	update_flag_item_offset		1489311	0					
ANR	1489443	ArgumentList	f		1489311	1					
ANR	1489444	Argument	f		1489311	0					
ANR	1489445	Identifier	f		1489311	0					
ANR	1489446	Argument	item		1489311	1					
ANR	1489447	Identifier	item		1489311	0					
ANR	1489448	Argument	off + f -> base		1489311	2					
ANR	1489449	AdditiveExpression	off + f -> base		1489311	0		+			
ANR	1489450	Identifier	off		1489311	0					
ANR	1489451	PtrMemberAccess	f -> base		1489311	1					
ANR	1489452	Identifier	f		1489311	0					
ANR	1489453	Identifier	base		1489311	1					
ANR	1489454	Argument	is_new		1489311	3					
ANR	1489455	Identifier	is_new		1489311	0					
ANR	1489456	Argument	true		1489311	4					
ANR	1489457	Identifier	true		1489311	0					
ANR	1489458	ExpressionStatement	"update_flag_item_name ( f , item , name , true )"	738:1:17949:17992	1489311	11	True				
ANR	1489459	CallExpression	"update_flag_item_name ( f , item , name , true )"		1489311	0					
ANR	1489460	Callee	update_flag_item_name		1489311	0					
ANR	1489461	Identifier	update_flag_item_name		1489311	0					
ANR	1489462	ArgumentList	f		1489311	1					
ANR	1489463	Argument	f		1489311	0					
ANR	1489464	Identifier	f		1489311	0					
ANR	1489465	Argument	item		1489311	1					
ANR	1489466	Identifier	item		1489311	0					
ANR	1489467	Argument	name		1489311	2					
ANR	1489468	Identifier	name		1489311	0					
ANR	1489469	Argument	true		1489311	3					
ANR	1489470	Identifier	true		1489311	0					
ANR	1489471	ReturnStatement	return item ;	739:1:17995:18006	1489311	12	True				
ANR	1489472	Identifier	item		1489311	0					
ANR	1489473	Label	err :	740:0:18008:18011	1489311	13	True				
ANR	1489474	Identifier	err		1489311	0					
ANR	1489475	ExpressionStatement	r_flag_item_free ( item )	741:1:18014:18037	1489311	14	True				
ANR	1489476	CallExpression	r_flag_item_free ( item )		1489311	0					
ANR	1489477	Callee	r_flag_item_free		1489311	0					
ANR	1489478	Identifier	r_flag_item_free		1489311	0					
ANR	1489479	ArgumentList	item		1489311	1					
ANR	1489480	Argument	item		1489311	0					
ANR	1489481	Identifier	item		1489311	0					
ANR	1489482	ReturnStatement	return NULL ;	742:1:18040:18051	1489311	15	True				
ANR	1489483	Identifier	NULL		1489311	0					
ANR	1489484	ReturnType	R_API RFlagItem *		1489311	1					
ANR	1489485	Identifier	r_flag_set		1489311	2					
ANR	1489486	ParameterList	"RFlag * f , const char * name , ut64 off , ut32 size"		1489311	3					
ANR	1489487	Parameter	RFlag * f	710:28:17386:17393	1489311	0	True				
ANR	1489488	ParameterType	RFlag *		1489311	0					
ANR	1489489	Identifier	f		1489311	1					
ANR	1489490	Parameter	const char * name	710:38:17396:17411	1489311	1	True				
ANR	1489491	ParameterType	const char *		1489311	0					
ANR	1489492	Identifier	name		1489311	1					
ANR	1489493	Parameter	ut64 off	710:56:17414:17421	1489311	2	True				
ANR	1489494	ParameterType	ut64		1489311	0					
ANR	1489495	Identifier	off		1489311	1					
ANR	1489496	Parameter	ut32 size	710:66:17424:17432	1489311	3	True				
ANR	1489497	ParameterType	ut32		1489311	0					
ANR	1489498	Identifier	size		1489311	1					
ANR	1489499	CFGEntryNode	ENTRY		1489311		True				
ANR	1489500	CFGExitNode	EXIT		1489311		True				
ANR	1489501	Symbol	* name		1489311						
ANR	1489502	Symbol	r_flag_get		1489311						
ANR	1489503	Symbol	item -> space		1489311						
ANR	1489504	Symbol	item		1489311						
ANR	1489505	Symbol	RFlagItem		1489311						
ANR	1489506	Symbol	NULL		1489311						
ANR	1489507	Symbol	is_new		1489311						
ANR	1489508	Symbol	itemname		1489311						
ANR	1489509	Symbol	r_flag_space_cur		1489311						
ANR	1489510	Symbol	f		1489311						
ANR	1489511	Symbol	false		1489311						
ANR	1489512	Symbol	filter_item_name		1489311						
ANR	1489513	Symbol	off		1489311						
ANR	1489514	Symbol	* f		1489311						
ANR	1489515	Symbol	R_NEW0		1489311						
ANR	1489516	Symbol	size		1489311						
ANR	1489517	Symbol	* item		1489311						
ANR	1489518	Symbol	name		1489311						
ANR	1489519	Symbol	true		1489311						
ANR	1489520	Symbol	f -> base		1489311						
ANR	1489521	Symbol	item -> size		1489311						
ANR	1489522	Symbol	item -> offset		1489311						
ANR	1489523	Function	r_flag_item_set_alias	746:0:18106:18284							
ANR	1489524	FunctionDef	"r_flag_item_set_alias (RFlagItem * item , const char * alias)"		1489523	0					
ANR	1489525	CompoundStatement		746:69:18175:18284	1489523	0					
ANR	1489526	ExpressionStatement	r_return_if_fail ( item )	747:1:18178:18201	1489523	0	True				
ANR	1489527	CallExpression	r_return_if_fail ( item )		1489523	0					
ANR	1489528	Callee	r_return_if_fail		1489523	0					
ANR	1489529	Identifier	r_return_if_fail		1489523	0					
ANR	1489530	ArgumentList	item		1489523	1					
ANR	1489531	Argument	item		1489523	0					
ANR	1489532	Identifier	item		1489523	0					
ANR	1489533	ExpressionStatement	free ( item -> alias )	748:1:18204:18222	1489523	1	True				
ANR	1489534	CallExpression	free ( item -> alias )		1489523	0					
ANR	1489535	Callee	free		1489523	0					
ANR	1489536	Identifier	free		1489523	0					
ANR	1489537	ArgumentList	item -> alias		1489523	1					
ANR	1489538	Argument	item -> alias		1489523	0					
ANR	1489539	PtrMemberAccess	item -> alias		1489523	0					
ANR	1489540	Identifier	item		1489523	0					
ANR	1489541	Identifier	alias		1489523	1					
ANR	1489542	ExpressionStatement	item -> alias = R_STR_ISEMPTY ( alias ) ? NULL : strdup ( alias )	749:1:18225:18282	1489523	2	True				
ANR	1489543	AssignmentExpression	item -> alias = R_STR_ISEMPTY ( alias ) ? NULL : strdup ( alias )		1489523	0		=			
ANR	1489544	PtrMemberAccess	item -> alias		1489523	0					
ANR	1489545	Identifier	item		1489523	0					
ANR	1489546	Identifier	alias		1489523	1					
ANR	1489547	ConditionalExpression	R_STR_ISEMPTY ( alias ) ? NULL : strdup ( alias )		1489523	1					
ANR	1489548	Condition	R_STR_ISEMPTY ( alias )		1489523	0					
ANR	1489549	CallExpression	R_STR_ISEMPTY ( alias )		1489523	0					
ANR	1489550	Callee	R_STR_ISEMPTY		1489523	0					
ANR	1489551	Identifier	R_STR_ISEMPTY		1489523	0					
ANR	1489552	ArgumentList	alias		1489523	1					
ANR	1489553	Argument	alias		1489523	0					
ANR	1489554	Identifier	alias		1489523	0					
ANR	1489555	Identifier	NULL		1489523	1					
ANR	1489556	CallExpression	strdup ( alias )		1489523	2					
ANR	1489557	Callee	strdup		1489523	0					
ANR	1489558	Identifier	strdup		1489523	0					
ANR	1489559	ArgumentList	alias		1489523	1					
ANR	1489560	Argument	alias		1489523	0					
ANR	1489561	Identifier	alias		1489523	0					
ANR	1489562	ReturnType	R_API void		1489523	1					
ANR	1489563	Identifier	r_flag_item_set_alias		1489523	2					
ANR	1489564	ParameterList	"RFlagItem * item , const char * alias"		1489523	3					
ANR	1489565	Parameter	RFlagItem * item	746:33:18139:18153	1489523	0	True				
ANR	1489566	ParameterType	RFlagItem *		1489523	0					
ANR	1489567	Identifier	item		1489523	1					
ANR	1489568	Parameter	const char * alias	746:50:18156:18172	1489523	1	True				
ANR	1489569	ParameterType	const char *		1489523	0					
ANR	1489570	Identifier	alias		1489523	1					
ANR	1489571	CFGEntryNode	ENTRY		1489523		True				
ANR	1489572	CFGExitNode	EXIT		1489523		True				
ANR	1489573	Symbol	R_STR_ISEMPTY		1489523						
ANR	1489574	Symbol	item		1489523						
ANR	1489575	Symbol	NULL		1489523						
ANR	1489576	Symbol	* item		1489523						
ANR	1489577	Symbol	item -> alias		1489523						
ANR	1489578	Symbol	alias		1489523						
ANR	1489579	Symbol	strdup		1489523						
ANR	1489580	Function	r_flag_item_set_comment	753:0:18339:18529							
ANR	1489581	FunctionDef	"r_flag_item_set_comment (RFlagItem * item , const char * comment)"		1489580	0					
ANR	1489582	CompoundStatement		753:73:18412:18529	1489580	0					
ANR	1489583	ExpressionStatement	r_return_if_fail ( item )	754:1:18415:18438	1489580	0	True				
ANR	1489584	CallExpression	r_return_if_fail ( item )		1489580	0					
ANR	1489585	Callee	r_return_if_fail		1489580	0					
ANR	1489586	Identifier	r_return_if_fail		1489580	0					
ANR	1489587	ArgumentList	item		1489580	1					
ANR	1489588	Argument	item		1489580	0					
ANR	1489589	Identifier	item		1489580	0					
ANR	1489590	ExpressionStatement	free ( item -> comment )	755:1:18441:18461	1489580	1	True				
ANR	1489591	CallExpression	free ( item -> comment )		1489580	0					
ANR	1489592	Callee	free		1489580	0					
ANR	1489593	Identifier	free		1489580	0					
ANR	1489594	ArgumentList	item -> comment		1489580	1					
ANR	1489595	Argument	item -> comment		1489580	0					
ANR	1489596	PtrMemberAccess	item -> comment		1489580	0					
ANR	1489597	Identifier	item		1489580	0					
ANR	1489598	Identifier	comment		1489580	1					
ANR	1489599	ExpressionStatement	item -> comment = R_STR_ISEMPTY ( comment ) ? NULL : strdup ( comment )	756:1:18464:18527	1489580	2	True				
ANR	1489600	AssignmentExpression	item -> comment = R_STR_ISEMPTY ( comment ) ? NULL : strdup ( comment )		1489580	0		=			
ANR	1489601	PtrMemberAccess	item -> comment		1489580	0					
ANR	1489602	Identifier	item		1489580	0					
ANR	1489603	Identifier	comment		1489580	1					
ANR	1489604	ConditionalExpression	R_STR_ISEMPTY ( comment ) ? NULL : strdup ( comment )		1489580	1					
ANR	1489605	Condition	R_STR_ISEMPTY ( comment )		1489580	0					
ANR	1489606	CallExpression	R_STR_ISEMPTY ( comment )		1489580	0					
ANR	1489607	Callee	R_STR_ISEMPTY		1489580	0					
ANR	1489608	Identifier	R_STR_ISEMPTY		1489580	0					
ANR	1489609	ArgumentList	comment		1489580	1					
ANR	1489610	Argument	comment		1489580	0					
ANR	1489611	Identifier	comment		1489580	0					
ANR	1489612	Identifier	NULL		1489580	1					
ANR	1489613	CallExpression	strdup ( comment )		1489580	2					
ANR	1489614	Callee	strdup		1489580	0					
ANR	1489615	Identifier	strdup		1489580	0					
ANR	1489616	ArgumentList	comment		1489580	1					
ANR	1489617	Argument	comment		1489580	0					
ANR	1489618	Identifier	comment		1489580	0					
ANR	1489619	ReturnType	R_API void		1489580	1					
ANR	1489620	Identifier	r_flag_item_set_comment		1489580	2					
ANR	1489621	ParameterList	"RFlagItem * item , const char * comment"		1489580	3					
ANR	1489622	Parameter	RFlagItem * item	753:35:18374:18388	1489580	0	True				
ANR	1489623	ParameterType	RFlagItem *		1489580	0					
ANR	1489624	Identifier	item		1489580	1					
ANR	1489625	Parameter	const char * comment	753:52:18391:18409	1489580	1	True				
ANR	1489626	ParameterType	const char *		1489580	0					
ANR	1489627	Identifier	comment		1489580	1					
ANR	1489628	CFGEntryNode	ENTRY		1489580		True				
ANR	1489629	CFGExitNode	EXIT		1489580		True				
ANR	1489630	Symbol	R_STR_ISEMPTY		1489580						
ANR	1489631	Symbol	item		1489580						
ANR	1489632	Symbol	NULL		1489580						
ANR	1489633	Symbol	* item		1489580						
ANR	1489634	Symbol	comment		1489580						
ANR	1489635	Symbol	strdup		1489580						
ANR	1489636	Symbol	item -> comment		1489580						
ANR	1489637	Function	r_flag_item_set_realname	760:0:18585:18785							
ANR	1489638	FunctionDef	"r_flag_item_set_realname (RFlagItem * item , const char * realname)"		1489637	0					
ANR	1489639	CompoundStatement		760:75:18660:18785	1489637	0					
ANR	1489640	ExpressionStatement	r_return_if_fail ( item )	761:1:18663:18686	1489637	0	True				
ANR	1489641	CallExpression	r_return_if_fail ( item )		1489637	0					
ANR	1489642	Callee	r_return_if_fail		1489637	0					
ANR	1489643	Identifier	r_return_if_fail		1489637	0					
ANR	1489644	ArgumentList	item		1489637	1					
ANR	1489645	Argument	item		1489637	0					
ANR	1489646	Identifier	item		1489637	0					
ANR	1489647	ExpressionStatement	free_item_realname ( item )	762:1:18689:18714	1489637	1	True				
ANR	1489648	CallExpression	free_item_realname ( item )		1489637	0					
ANR	1489649	Callee	free_item_realname		1489637	0					
ANR	1489650	Identifier	free_item_realname		1489637	0					
ANR	1489651	ArgumentList	item		1489637	1					
ANR	1489652	Argument	item		1489637	0					
ANR	1489653	Identifier	item		1489637	0					
ANR	1489654	ExpressionStatement	item -> realname = R_STR_ISEMPTY ( realname ) ? NULL : strdup ( realname )	763:1:18717:18783	1489637	2	True				
ANR	1489655	AssignmentExpression	item -> realname = R_STR_ISEMPTY ( realname ) ? NULL : strdup ( realname )		1489637	0		=			
ANR	1489656	PtrMemberAccess	item -> realname		1489637	0					
ANR	1489657	Identifier	item		1489637	0					
ANR	1489658	Identifier	realname		1489637	1					
ANR	1489659	ConditionalExpression	R_STR_ISEMPTY ( realname ) ? NULL : strdup ( realname )		1489637	1					
ANR	1489660	Condition	R_STR_ISEMPTY ( realname )		1489637	0					
ANR	1489661	CallExpression	R_STR_ISEMPTY ( realname )		1489637	0					
ANR	1489662	Callee	R_STR_ISEMPTY		1489637	0					
ANR	1489663	Identifier	R_STR_ISEMPTY		1489637	0					
ANR	1489664	ArgumentList	realname		1489637	1					
ANR	1489665	Argument	realname		1489637	0					
ANR	1489666	Identifier	realname		1489637	0					
ANR	1489667	Identifier	NULL		1489637	1					
ANR	1489668	CallExpression	strdup ( realname )		1489637	2					
ANR	1489669	Callee	strdup		1489637	0					
ANR	1489670	Identifier	strdup		1489637	0					
ANR	1489671	ArgumentList	realname		1489637	1					
ANR	1489672	Argument	realname		1489637	0					
ANR	1489673	Identifier	realname		1489637	0					
ANR	1489674	ReturnType	R_API void		1489637	1					
ANR	1489675	Identifier	r_flag_item_set_realname		1489637	2					
ANR	1489676	ParameterList	"RFlagItem * item , const char * realname"		1489637	3					
ANR	1489677	Parameter	RFlagItem * item	760:36:18621:18635	1489637	0	True				
ANR	1489678	ParameterType	RFlagItem *		1489637	0					
ANR	1489679	Identifier	item		1489637	1					
ANR	1489680	Parameter	const char * realname	760:53:18638:18657	1489637	1	True				
ANR	1489681	ParameterType	const char *		1489637	0					
ANR	1489682	Identifier	realname		1489637	1					
ANR	1489683	CFGEntryNode	ENTRY		1489637		True				
ANR	1489684	CFGExitNode	EXIT		1489637		True				
ANR	1489685	Symbol	R_STR_ISEMPTY		1489637						
ANR	1489686	Symbol	item		1489637						
ANR	1489687	Symbol	NULL		1489637						
ANR	1489688	Symbol	* item		1489637						
ANR	1489689	Symbol	item -> realname		1489637						
ANR	1489690	Symbol	strdup		1489637						
ANR	1489691	Symbol	realname		1489637						
ANR	1489692	Function	r_flag_rename	768:0:18918:19102							
ANR	1489693	FunctionDef	"r_flag_rename (RFlag * f , RFlagItem * item , const char * name)"		1489692	0					
ANR	1489694	CompoundStatement		768:69:18987:19102	1489692	0					
ANR	1489695	ExpressionStatement	"r_return_val_if_fail ( f && item && name && * name , false )"	769:1:18990:19046	1489692	0	True				
ANR	1489696	CallExpression	"r_return_val_if_fail ( f && item && name && * name , false )"		1489692	0					
ANR	1489697	Callee	r_return_val_if_fail		1489692	0					
ANR	1489698	Identifier	r_return_val_if_fail		1489692	0					
ANR	1489699	ArgumentList	f && item && name && * name		1489692	1					
ANR	1489700	Argument	f && item && name && * name		1489692	0					
ANR	1489701	AndExpression	f && item && name && * name		1489692	0		&&			
ANR	1489702	Identifier	f		1489692	0					
ANR	1489703	AndExpression	item && name && * name		1489692	1		&&			
ANR	1489704	Identifier	item		1489692	0					
ANR	1489705	AndExpression	name && * name		1489692	1		&&			
ANR	1489706	Identifier	name		1489692	0					
ANR	1489707	UnaryOperationExpression	* name		1489692	1					
ANR	1489708	UnaryOperator	*		1489692	0					
ANR	1489709	Identifier	name		1489692	1					
ANR	1489710	Argument	false		1489692	1					
ANR	1489711	Identifier	false		1489692	0					
ANR	1489712	ReturnStatement	"return update_flag_item_name ( f , item , name , false ) ;"	770:1:19049:19100	1489692	1	True				
ANR	1489713	CallExpression	"update_flag_item_name ( f , item , name , false )"		1489692	0					
ANR	1489714	Callee	update_flag_item_name		1489692	0					
ANR	1489715	Identifier	update_flag_item_name		1489692	0					
ANR	1489716	ArgumentList	f		1489692	1					
ANR	1489717	Argument	f		1489692	0					
ANR	1489718	Identifier	f		1489692	0					
ANR	1489719	Argument	item		1489692	1					
ANR	1489720	Identifier	item		1489692	0					
ANR	1489721	Argument	name		1489692	2					
ANR	1489722	Identifier	name		1489692	0					
ANR	1489723	Argument	false		1489692	3					
ANR	1489724	Identifier	false		1489692	0					
ANR	1489725	ReturnType	R_API int		1489692	1					
ANR	1489726	Identifier	r_flag_rename		1489692	2					
ANR	1489727	ParameterList	"RFlag * f , RFlagItem * item , const char * name"		1489692	3					
ANR	1489728	Parameter	RFlag * f	768:24:18942:18949	1489692	0	True				
ANR	1489729	ParameterType	RFlag *		1489692	0					
ANR	1489730	Identifier	f		1489692	1					
ANR	1489731	Parameter	RFlagItem * item	768:34:18952:18966	1489692	1	True				
ANR	1489732	ParameterType	RFlagItem *		1489692	0					
ANR	1489733	Identifier	item		1489692	1					
ANR	1489734	Parameter	const char * name	768:51:18969:18984	1489692	2	True				
ANR	1489735	ParameterType	const char *		1489692	0					
ANR	1489736	Identifier	name		1489692	1					
ANR	1489737	CFGEntryNode	ENTRY		1489692		True				
ANR	1489738	CFGExitNode	EXIT		1489692		True				
ANR	1489739	Symbol	* name		1489692						
ANR	1489740	Symbol	item		1489692						
ANR	1489741	Symbol	f		1489692						
ANR	1489742	Symbol	name		1489692						
ANR	1489743	Symbol	false		1489692						
ANR	1489744	Symbol	update_flag_item_name		1489692						
ANR	1489745	Function	r_flag_unset	777:0:19237:19415							
ANR	1489746	FunctionDef	"r_flag_unset (RFlag * f , RFlagItem * item)"		1489745	0					
ANR	1489747	CompoundStatement		777:51:19288:19415	1489745	0					
ANR	1489748	ExpressionStatement	"r_return_val_if_fail ( f && item , false )"	778:1:19291:19330	1489745	0	True				
ANR	1489749	CallExpression	"r_return_val_if_fail ( f && item , false )"		1489745	0					
ANR	1489750	Callee	r_return_val_if_fail		1489745	0					
ANR	1489751	Identifier	r_return_val_if_fail		1489745	0					
ANR	1489752	ArgumentList	f && item		1489745	1					
ANR	1489753	Argument	f && item		1489745	0					
ANR	1489754	AndExpression	f && item		1489745	0		&&			
ANR	1489755	Identifier	f		1489745	0					
ANR	1489756	Identifier	item		1489745	1					
ANR	1489757	Argument	false		1489745	1					
ANR	1489758	Identifier	false		1489745	0					
ANR	1489759	ExpressionStatement	"remove_offsetmap ( f , item )"	779:1:19333:19359	1489745	1	True				
ANR	1489760	CallExpression	"remove_offsetmap ( f , item )"		1489745	0					
ANR	1489761	Callee	remove_offsetmap		1489745	0					
ANR	1489762	Identifier	remove_offsetmap		1489745	0					
ANR	1489763	ArgumentList	f		1489745	1					
ANR	1489764	Argument	f		1489745	0					
ANR	1489765	Identifier	f		1489745	0					
ANR	1489766	Argument	item		1489745	1					
ANR	1489767	Identifier	item		1489745	0					
ANR	1489768	ExpressionStatement	"ht_pp_delete ( f -> ht_name , item -> name )"	780:1:19362:19399	1489745	2	True				
ANR	1489769	CallExpression	"ht_pp_delete ( f -> ht_name , item -> name )"		1489745	0					
ANR	1489770	Callee	ht_pp_delete		1489745	0					
ANR	1489771	Identifier	ht_pp_delete		1489745	0					
ANR	1489772	ArgumentList	f -> ht_name		1489745	1					
ANR	1489773	Argument	f -> ht_name		1489745	0					
ANR	1489774	PtrMemberAccess	f -> ht_name		1489745	0					
ANR	1489775	Identifier	f		1489745	0					
ANR	1489776	Identifier	ht_name		1489745	1					
ANR	1489777	Argument	item -> name		1489745	1					
ANR	1489778	PtrMemberAccess	item -> name		1489745	0					
ANR	1489779	Identifier	item		1489745	0					
ANR	1489780	Identifier	name		1489745	1					
ANR	1489781	ReturnStatement	return true ;	781:1:19402:19413	1489745	3	True				
ANR	1489782	Identifier	true		1489745	0					
ANR	1489783	ReturnType	R_API bool		1489745	1					
ANR	1489784	Identifier	r_flag_unset		1489745	2					
ANR	1489785	ParameterList	"RFlag * f , RFlagItem * item"		1489745	3					
ANR	1489786	Parameter	RFlag * f	777:24:19261:19268	1489745	0	True				
ANR	1489787	ParameterType	RFlag *		1489745	0					
ANR	1489788	Identifier	f		1489745	1					
ANR	1489789	Parameter	RFlagItem * item	777:34:19271:19285	1489745	1	True				
ANR	1489790	ParameterType	RFlagItem *		1489745	0					
ANR	1489791	Identifier	item		1489745	1					
ANR	1489792	CFGEntryNode	ENTRY		1489745		True				
ANR	1489793	CFGExitNode	EXIT		1489745		True				
ANR	1489794	Symbol	* f		1489745						
ANR	1489795	Symbol	f -> ht_name		1489745						
ANR	1489796	Symbol	item		1489745						
ANR	1489797	Symbol	f		1489745						
ANR	1489798	Symbol	item -> name		1489745						
ANR	1489799	Symbol	* item		1489745						
ANR	1489800	Symbol	false		1489745						
ANR	1489801	Symbol	true		1489745						
ANR	1489802	Function	r_flag_unset_off	786:0:19538:19736							
ANR	1489803	FunctionDef	"r_flag_unset_off (RFlag * f , ut64 off)"		1489802	0					
ANR	1489804	CompoundStatement		786:48:19586:19736	1489802	0					
ANR	1489805	ExpressionStatement	"r_return_val_if_fail ( f , false )"	787:1:19589:19620	1489802	0	True				
ANR	1489806	CallExpression	"r_return_val_if_fail ( f , false )"		1489802	0					
ANR	1489807	Callee	r_return_val_if_fail		1489802	0					
ANR	1489808	Identifier	r_return_val_if_fail		1489802	0					
ANR	1489809	ArgumentList	f		1489802	1					
ANR	1489810	Argument	f		1489802	0					
ANR	1489811	Identifier	f		1489802	0					
ANR	1489812	Argument	false		1489802	1					
ANR	1489813	Identifier	false		1489802	0					
ANR	1489814	IdentifierDeclStatement	"RFlagItem * item = r_flag_get_i ( f , off ) ;"	788:1:19623:19662	1489802	1	True				
ANR	1489815	IdentifierDecl	"* item = r_flag_get_i ( f , off )"		1489802	0					
ANR	1489816	IdentifierDeclType	RFlagItem *		1489802	0					
ANR	1489817	Identifier	item		1489802	1					
ANR	1489818	AssignmentExpression	"* item = r_flag_get_i ( f , off )"		1489802	2		=			
ANR	1489819	Identifier	item		1489802	0					
ANR	1489820	CallExpression	"r_flag_get_i ( f , off )"		1489802	1					
ANR	1489821	Callee	r_flag_get_i		1489802	0					
ANR	1489822	Identifier	r_flag_get_i		1489802	0					
ANR	1489823	ArgumentList	f		1489802	1					
ANR	1489824	Argument	f		1489802	0					
ANR	1489825	Identifier	f		1489802	0					
ANR	1489826	Argument	off		1489802	1					
ANR	1489827	Identifier	off		1489802	0					
ANR	1489828	IfStatement	"if ( item && r_flag_unset ( f , item ) )"		1489802	2					
ANR	1489829	Condition	"item && r_flag_unset ( f , item )"	789:5:19669:19698	1489802	0	True				
ANR	1489830	AndExpression	"item && r_flag_unset ( f , item )"		1489802	0		&&			
ANR	1489831	Identifier	item		1489802	0					
ANR	1489832	CallExpression	"r_flag_unset ( f , item )"		1489802	1					
ANR	1489833	Callee	r_flag_unset		1489802	0					
ANR	1489834	Identifier	r_flag_unset		1489802	0					
ANR	1489835	ArgumentList	f		1489802	1					
ANR	1489836	Argument	f		1489802	0					
ANR	1489837	Identifier	f		1489802	0					
ANR	1489838	Argument	item		1489802	1					
ANR	1489839	Identifier	item		1489802	0					
ANR	1489840	CompoundStatement		4:37:114:114	1489802	1					
ANR	1489841	ReturnStatement	return true ;	790:2:19705:19716	1489802	0	True				
ANR	1489842	Identifier	true		1489802	0					
ANR	1489843	ReturnStatement	return false ;	792:1:19722:19734	1489802	3	True				
ANR	1489844	Identifier	false		1489802	0					
ANR	1489845	ReturnType	R_API bool		1489802	1					
ANR	1489846	Identifier	r_flag_unset_off		1489802	2					
ANR	1489847	ParameterList	"RFlag * f , ut64 off"		1489802	3					
ANR	1489848	Parameter	RFlag * f	786:28:19566:19573	1489802	0	True				
ANR	1489849	ParameterType	RFlag *		1489802	0					
ANR	1489850	Identifier	f		1489802	1					
ANR	1489851	Parameter	ut64 off	786:38:19576:19583	1489802	1	True				
ANR	1489852	ParameterType	ut64		1489802	0					
ANR	1489853	Identifier	off		1489802	1					
ANR	1489854	CFGEntryNode	ENTRY		1489802		True				
ANR	1489855	CFGExitNode	EXIT		1489802		True				
ANR	1489856	Symbol	item		1489802						
ANR	1489857	Symbol	r_flag_unset		1489802						
ANR	1489858	Symbol	f		1489802						
ANR	1489859	Symbol	false		1489802						
ANR	1489860	Symbol	true		1489802						
ANR	1489861	Symbol	r_flag_get_i		1489802						
ANR	1489862	Symbol	off		1489802						
ANR	1489863	ClassDef	unset_foreach_t	795:0:19739:19783							
ANR	1489864	DeclStmt									
ANR	1489865	Decl							RFlag	RFlag *	f
ANR	1489866	DeclStmt									
ANR	1489867	Decl							int	int	n
ANR	1489868	Function	unset_foreach	800:0:19787:20007							
ANR	1489869	FunctionDef	"unset_foreach (RFlagItem * fi , void * user)"		1489868	0					
ANR	1489870	CompoundStatement		800:53:19840:20007	1489868	0					
ANR	1489871	IdentifierDeclStatement	struct unset_foreach_t * u = ( struct unset_foreach_t * ) user ;	801:1:19843:19901	1489868	0	True				
ANR	1489872	IdentifierDecl	* u = ( struct unset_foreach_t * ) user		1489868	0					
ANR	1489873	IdentifierDeclType	struct unset_foreach_t *		1489868	0					
ANR	1489874	Identifier	u		1489868	1					
ANR	1489875	AssignmentExpression	* u = ( struct unset_foreach_t * ) user		1489868	2		=			
ANR	1489876	Identifier	u		1489868	0					
ANR	1489877	CastExpression	( struct unset_foreach_t * ) user		1489868	1					
ANR	1489878	CastTarget	struct unset_foreach_t *		1489868	0					
ANR	1489879	Identifier	user		1489868	1					
ANR	1489880	IfStatement	"if ( IS_FI_NOTIN_SPACE ( u -> f , fi ) )"		1489868	1					
ANR	1489881	Condition	"IS_FI_NOTIN_SPACE ( u -> f , fi )"	802:5:19908:19935	1489868	0	True				
ANR	1489882	CallExpression	"IS_FI_NOTIN_SPACE ( u -> f , fi )"		1489868	0					
ANR	1489883	Callee	IS_FI_NOTIN_SPACE		1489868	0					
ANR	1489884	Identifier	IS_FI_NOTIN_SPACE		1489868	0					
ANR	1489885	ArgumentList	u -> f		1489868	1					
ANR	1489886	Argument	u -> f		1489868	0					
ANR	1489887	PtrMemberAccess	u -> f		1489868	0					
ANR	1489888	Identifier	u		1489868	0					
ANR	1489889	Identifier	f		1489868	1					
ANR	1489890	Argument	fi		1489868	1					
ANR	1489891	Identifier	fi		1489868	0					
ANR	1489892	CompoundStatement		3:35:97:97	1489868	1					
ANR	1489893	ReturnStatement	return true ;	803:2:19942:19953	1489868	0	True				
ANR	1489894	Identifier	true		1489868	0					
ANR	1489895	ExpressionStatement	"r_flag_unset ( u -> f , fi )"	805:1:19959:19982	1489868	2	True				
ANR	1489896	CallExpression	"r_flag_unset ( u -> f , fi )"		1489868	0					
ANR	1489897	Callee	r_flag_unset		1489868	0					
ANR	1489898	Identifier	r_flag_unset		1489868	0					
ANR	1489899	ArgumentList	u -> f		1489868	1					
ANR	1489900	Argument	u -> f		1489868	0					
ANR	1489901	PtrMemberAccess	u -> f		1489868	0					
ANR	1489902	Identifier	u		1489868	0					
ANR	1489903	Identifier	f		1489868	1					
ANR	1489904	Argument	fi		1489868	1					
ANR	1489905	Identifier	fi		1489868	0					
ANR	1489906	ExpressionStatement	u -> n ++	806:1:19985:19991	1489868	3	True				
ANR	1489907	PostIncDecOperationExpression	u -> n ++		1489868	0					
ANR	1489908	PtrMemberAccess	u -> n		1489868	0					
ANR	1489909	Identifier	u		1489868	0					
ANR	1489910	Identifier	n		1489868	1					
ANR	1489911	IncDec	++		1489868	1					
ANR	1489912	ReturnStatement	return true ;	807:1:19994:20005	1489868	4	True				
ANR	1489913	Identifier	true		1489868	0					
ANR	1489914	ReturnType	static bool		1489868	1					
ANR	1489915	Identifier	unset_foreach		1489868	2					
ANR	1489916	ParameterList	"RFlagItem * fi , void * user"		1489868	3					
ANR	1489917	Parameter	RFlagItem * fi	800:26:19813:19825	1489868	0	True				
ANR	1489918	ParameterType	RFlagItem *		1489868	0					
ANR	1489919	Identifier	fi		1489868	1					
ANR	1489920	Parameter	void * user	800:41:19828:19837	1489868	1	True				
ANR	1489921	ParameterType	void *		1489868	0					
ANR	1489922	Identifier	user		1489868	1					
ANR	1489923	CFGEntryNode	ENTRY		1489868		True				
ANR	1489924	CFGExitNode	EXIT		1489868		True				
ANR	1489925	Symbol	fi		1489868						
ANR	1489926	Symbol	u		1489868						
ANR	1489927	Symbol	u -> n		1489868						
ANR	1489928	Symbol	true		1489868						
ANR	1489929	Symbol	IS_FI_NOTIN_SPACE		1489868						
ANR	1489930	Symbol	user		1489868						
ANR	1489931	Symbol	u -> f		1489868						
ANR	1489932	Symbol	* u		1489868						
ANR	1489933	Function	r_flag_unset_glob	813:0:20195:20397							
ANR	1489934	FunctionDef	"r_flag_unset_glob (RFlag * f , const char * glob)"		1489933	0					
ANR	1489935	CompoundStatement		813:56:20251:20397	1489933	0					
ANR	1489936	ExpressionStatement	"r_return_val_if_fail ( f , - 1 )"	814:1:20254:20282	1489933	0	True				
ANR	1489937	CallExpression	"r_return_val_if_fail ( f , - 1 )"		1489933	0					
ANR	1489938	Callee	r_return_val_if_fail		1489933	0					
ANR	1489939	Identifier	r_return_val_if_fail		1489933	0					
ANR	1489940	ArgumentList	f		1489933	1					
ANR	1489941	Argument	f		1489933	0					
ANR	1489942	Identifier	f		1489933	0					
ANR	1489943	Argument	- 1		1489933	1					
ANR	1489944	UnaryOperationExpression	- 1		1489933	0					
ANR	1489945	UnaryOperator	-		1489933	0					
ANR	1489946	PrimaryExpression	1		1489933	1					
ANR	1489947	Statement	struct	816:1:20286:20291	1489933	1	True				
ANR	1489948	Statement	unset_foreach_t	816:8:20293:20307	1489933	2	True				
ANR	1489949	Statement	u	816:24:20309:20309	1489933	3	True				
ANR	1489950	Statement	=	816:26:20311:20311	1489933	4	True				
ANR	1489951	CompoundStatement		4:28:61:61	1489933	5					
ANR	1489952	Statement	.	816:30:20315:20315	1489933	0	True				
ANR	1489953	Statement	f	816:31:20316:20316	1489933	1	True				
ANR	1489954	Statement	=	816:33:20318:20318	1489933	2	True				
ANR	1489955	Statement	f	816:35:20320:20320	1489933	3	True				
ANR	1489956	Statement	","	816:36:20321:20321	1489933	4	True				
ANR	1489957	Statement	.	816:38:20323:20323	1489933	5	True				
ANR	1489958	Statement	n	816:39:20324:20324	1489933	6	True				
ANR	1489959	Statement	=	816:41:20326:20326	1489933	7	True				
ANR	1489960	Statement	0	816:43:20328:20328	1489933	8	True				
ANR	1489961	ExpressionStatement		816:46:20331:20331	1489933	6	True				
ANR	1489962	ExpressionStatement	"r_flag_foreach_glob ( f , glob , unset_foreach , & u )"	817:1:20334:20382	1489933	7	True				
ANR	1489963	CallExpression	"r_flag_foreach_glob ( f , glob , unset_foreach , & u )"		1489933	0					
ANR	1489964	Callee	r_flag_foreach_glob		1489933	0					
ANR	1489965	Identifier	r_flag_foreach_glob		1489933	0					
ANR	1489966	ArgumentList	f		1489933	1					
ANR	1489967	Argument	f		1489933	0					
ANR	1489968	Identifier	f		1489933	0					
ANR	1489969	Argument	glob		1489933	1					
ANR	1489970	Identifier	glob		1489933	0					
ANR	1489971	Argument	unset_foreach		1489933	2					
ANR	1489972	Identifier	unset_foreach		1489933	0					
ANR	1489973	Argument	& u		1489933	3					
ANR	1489974	UnaryOperationExpression	& u		1489933	0					
ANR	1489975	UnaryOperator	&		1489933	0					
ANR	1489976	Identifier	u		1489933	1					
ANR	1489977	ReturnStatement	return u . n ;	818:1:20385:20395	1489933	8	True				
ANR	1489978	MemberAccess	u . n		1489933	0					
ANR	1489979	Identifier	u		1489933	0					
ANR	1489980	Identifier	n		1489933	1					
ANR	1489981	ReturnType	R_API int		1489933	1					
ANR	1489982	Identifier	r_flag_unset_glob		1489933	2					
ANR	1489983	ParameterList	"RFlag * f , const char * glob"		1489933	3					
ANR	1489984	Parameter	RFlag * f	813:28:20223:20230	1489933	0	True				
ANR	1489985	ParameterType	RFlag *		1489933	0					
ANR	1489986	Identifier	f		1489933	1					
ANR	1489987	Parameter	const char * glob	813:38:20233:20248	1489933	1	True				
ANR	1489988	ParameterType	const char *		1489933	0					
ANR	1489989	Identifier	glob		1489933	1					
ANR	1489990	CFGEntryNode	ENTRY		1489933		True				
ANR	1489991	CFGExitNode	EXIT		1489933		True				
ANR	1489992	Symbol	u		1489933						
ANR	1489993	Symbol	f		1489933						
ANR	1489994	Symbol	glob		1489933						
ANR	1489995	Symbol	& u		1489933						
ANR	1489996	Symbol	unset_foreach		1489933						
ANR	1489997	Symbol	u . n		1489933						
ANR	1489998	Function	r_flag_unset_name	823:0:20512:20701							
ANR	1489999	FunctionDef	"r_flag_unset_name (RFlag * f , const char * name)"		1489998	0					
ANR	1490000	CompoundStatement		823:57:20569:20701	1489998	0					
ANR	1490001	ExpressionStatement	"r_return_val_if_fail ( f , false )"	824:1:20572:20603	1489998	0	True				
ANR	1490002	CallExpression	"r_return_val_if_fail ( f , false )"		1489998	0					
ANR	1490003	Callee	r_return_val_if_fail		1489998	0					
ANR	1490004	Identifier	r_return_val_if_fail		1489998	0					
ANR	1490005	ArgumentList	f		1489998	1					
ANR	1490006	Argument	f		1489998	0					
ANR	1490007	Identifier	f		1489998	0					
ANR	1490008	Argument	false		1489998	1					
ANR	1490009	Identifier	false		1489998	0					
ANR	1490010	IdentifierDeclStatement	"RFlagItem * item = ht_pp_find ( f -> ht_name , name , NULL ) ;"	825:1:20606:20659	1489998	1	True				
ANR	1490011	IdentifierDecl	"* item = ht_pp_find ( f -> ht_name , name , NULL )"		1489998	0					
ANR	1490012	IdentifierDeclType	RFlagItem *		1489998	0					
ANR	1490013	Identifier	item		1489998	1					
ANR	1490014	AssignmentExpression	"* item = ht_pp_find ( f -> ht_name , name , NULL )"		1489998	2		=			
ANR	1490015	Identifier	item		1489998	0					
ANR	1490016	CallExpression	"ht_pp_find ( f -> ht_name , name , NULL )"		1489998	1					
ANR	1490017	Callee	ht_pp_find		1489998	0					
ANR	1490018	Identifier	ht_pp_find		1489998	0					
ANR	1490019	ArgumentList	f -> ht_name		1489998	1					
ANR	1490020	Argument	f -> ht_name		1489998	0					
ANR	1490021	PtrMemberAccess	f -> ht_name		1489998	0					
ANR	1490022	Identifier	f		1489998	0					
ANR	1490023	Identifier	ht_name		1489998	1					
ANR	1490024	Argument	name		1489998	1					
ANR	1490025	Identifier	name		1489998	0					
ANR	1490026	Argument	NULL		1489998	2					
ANR	1490027	Identifier	NULL		1489998	0					
ANR	1490028	ReturnStatement	"return item && r_flag_unset ( f , item ) ;"	826:1:20662:20699	1489998	2	True				
ANR	1490029	AndExpression	"item && r_flag_unset ( f , item )"		1489998	0		&&			
ANR	1490030	Identifier	item		1489998	0					
ANR	1490031	CallExpression	"r_flag_unset ( f , item )"		1489998	1					
ANR	1490032	Callee	r_flag_unset		1489998	0					
ANR	1490033	Identifier	r_flag_unset		1489998	0					
ANR	1490034	ArgumentList	f		1489998	1					
ANR	1490035	Argument	f		1489998	0					
ANR	1490036	Identifier	f		1489998	0					
ANR	1490037	Argument	item		1489998	1					
ANR	1490038	Identifier	item		1489998	0					
ANR	1490039	ReturnType	R_API bool		1489998	1					
ANR	1490040	Identifier	r_flag_unset_name		1489998	2					
ANR	1490041	ParameterList	"RFlag * f , const char * name"		1489998	3					
ANR	1490042	Parameter	RFlag * f	823:29:20541:20548	1489998	0	True				
ANR	1490043	ParameterType	RFlag *		1489998	0					
ANR	1490044	Identifier	f		1489998	1					
ANR	1490045	Parameter	const char * name	823:39:20551:20566	1489998	1	True				
ANR	1490046	ParameterType	const char *		1489998	0					
ANR	1490047	Identifier	name		1489998	1					
ANR	1490048	CFGEntryNode	ENTRY		1489998		True				
ANR	1490049	CFGExitNode	EXIT		1489998		True				
ANR	1490050	Symbol	* f		1489998						
ANR	1490051	Symbol	f -> ht_name		1489998						
ANR	1490052	Symbol	item		1489998						
ANR	1490053	Symbol	NULL		1489998						
ANR	1490054	Symbol	r_flag_unset		1489998						
ANR	1490055	Symbol	f		1489998						
ANR	1490056	Symbol	name		1489998						
ANR	1490057	Symbol	false		1489998						
ANR	1490058	Symbol	ht_pp_find		1489998						
ANR	1490059	Function	r_flag_unset_all	830:0:20746:20964							
ANR	1490060	FunctionDef	r_flag_unset_all (RFlag * f)		1490059	0					
ANR	1490061	CompoundStatement		830:38:20784:20964	1490059	0					
ANR	1490062	ExpressionStatement	r_return_if_fail ( f )	831:1:20787:20807	1490059	0	True				
ANR	1490063	CallExpression	r_return_if_fail ( f )		1490059	0					
ANR	1490064	Callee	r_return_if_fail		1490059	0					
ANR	1490065	Identifier	r_return_if_fail		1490059	0					
ANR	1490066	ArgumentList	f		1490059	1					
ANR	1490067	Argument	f		1490059	0					
ANR	1490068	Identifier	f		1490059	0					
ANR	1490069	ExpressionStatement	ht_pp_free ( f -> ht_name )	832:1:20810:20833	1490059	1	True				
ANR	1490070	CallExpression	ht_pp_free ( f -> ht_name )		1490059	0					
ANR	1490071	Callee	ht_pp_free		1490059	0					
ANR	1490072	Identifier	ht_pp_free		1490059	0					
ANR	1490073	ArgumentList	f -> ht_name		1490059	1					
ANR	1490074	Argument	f -> ht_name		1490059	0					
ANR	1490075	PtrMemberAccess	f -> ht_name		1490059	0					
ANR	1490076	Identifier	f		1490059	0					
ANR	1490077	Identifier	ht_name		1490059	1					
ANR	1490078	ExpressionStatement	"f -> ht_name = ht_pp_new ( NULL , ht_free_flag , NULL )"	833:1:20836:20885	1490059	2	True				
ANR	1490079	AssignmentExpression	"f -> ht_name = ht_pp_new ( NULL , ht_free_flag , NULL )"		1490059	0		=			
ANR	1490080	PtrMemberAccess	f -> ht_name		1490059	0					
ANR	1490081	Identifier	f		1490059	0					
ANR	1490082	Identifier	ht_name		1490059	1					
ANR	1490083	CallExpression	"ht_pp_new ( NULL , ht_free_flag , NULL )"		1490059	1					
ANR	1490084	Callee	ht_pp_new		1490059	0					
ANR	1490085	Identifier	ht_pp_new		1490059	0					
ANR	1490086	ArgumentList	NULL		1490059	1					
ANR	1490087	Argument	NULL		1490059	0					
ANR	1490088	Identifier	NULL		1490059	0					
ANR	1490089	Argument	ht_free_flag		1490059	1					
ANR	1490090	Identifier	ht_free_flag		1490059	0					
ANR	1490091	Argument	NULL		1490059	2					
ANR	1490092	Identifier	NULL		1490059	0					
ANR	1490093	ExpressionStatement	r_skiplist_purge ( f -> by_off )	834:1:20888:20916	1490059	3	True				
ANR	1490094	CallExpression	r_skiplist_purge ( f -> by_off )		1490059	0					
ANR	1490095	Callee	r_skiplist_purge		1490059	0					
ANR	1490096	Identifier	r_skiplist_purge		1490059	0					
ANR	1490097	ArgumentList	f -> by_off		1490059	1					
ANR	1490098	Argument	f -> by_off		1490059	0					
ANR	1490099	PtrMemberAccess	f -> by_off		1490059	0					
ANR	1490100	Identifier	f		1490059	0					
ANR	1490101	Identifier	by_off		1490059	1					
ANR	1490102	ExpressionStatement	r_spaces_fini ( & f -> spaces )	835:1:20919:20945	1490059	4	True				
ANR	1490103	CallExpression	r_spaces_fini ( & f -> spaces )		1490059	0					
ANR	1490104	Callee	r_spaces_fini		1490059	0					
ANR	1490105	Identifier	r_spaces_fini		1490059	0					
ANR	1490106	ArgumentList	& f -> spaces		1490059	1					
ANR	1490107	Argument	& f -> spaces		1490059	0					
ANR	1490108	UnaryOperationExpression	& f -> spaces		1490059	0					
ANR	1490109	UnaryOperator	&		1490059	0					
ANR	1490110	PtrMemberAccess	f -> spaces		1490059	1					
ANR	1490111	Identifier	f		1490059	0					
ANR	1490112	Identifier	spaces		1490059	1					
ANR	1490113	ExpressionStatement	new_spaces ( f )	836:1:20948:20962	1490059	5	True				
ANR	1490114	CallExpression	new_spaces ( f )		1490059	0					
ANR	1490115	Callee	new_spaces		1490059	0					
ANR	1490116	Identifier	new_spaces		1490059	0					
ANR	1490117	ArgumentList	f		1490059	1					
ANR	1490118	Argument	f		1490059	0					
ANR	1490119	Identifier	f		1490059	0					
ANR	1490120	ReturnType	R_API void		1490059	1					
ANR	1490121	Identifier	r_flag_unset_all		1490059	2					
ANR	1490122	ParameterList	RFlag * f		1490059	3					
ANR	1490123	Parameter	RFlag * f	830:28:20774:20781	1490059	0	True				
ANR	1490124	ParameterType	RFlag *		1490059	0					
ANR	1490125	Identifier	f		1490059	1					
ANR	1490126	CFGEntryNode	ENTRY		1490059		True				
ANR	1490127	CFGExitNode	EXIT		1490059		True				
ANR	1490128	Symbol	* f		1490059						
ANR	1490129	Symbol	f -> ht_name		1490059						
ANR	1490130	Symbol	NULL		1490059						
ANR	1490131	Symbol	f		1490059						
ANR	1490132	Symbol	& f -> spaces		1490059						
ANR	1490133	Symbol	f -> by_off		1490059						
ANR	1490134	Symbol	ht_free_flag		1490059						
ANR	1490135	Symbol	ht_pp_new		1490059						
ANR	1490136	ClassDef	flag_relocate_t	839:0:20967:21064							
ANR	1490137	DeclStmt									
ANR	1490138	Decl							RFlag	RFlag *	f
ANR	1490139	DeclStmt									
ANR	1490140	Decl							ut64	ut64	off
ANR	1490141	DeclStmt									
ANR	1490142	Decl							ut64	ut64	off_mask
ANR	1490143	DeclStmt									
ANR	1490144	Decl							ut64	ut64	neg_mask
ANR	1490145	DeclStmt									
ANR	1490146	Decl							ut64	ut64	to
ANR	1490147	DeclStmt									
ANR	1490148	Decl							int	int	n
ANR	1490149	Function	flag_relocate_foreach	848:0:21068:21462							
ANR	1490150	FunctionDef	"flag_relocate_foreach (RFlagItem * fi , void * user)"		1490149	0					
ANR	1490151	CompoundStatement		848:61:21129:21462	1490149	0					
ANR	1490152	IdentifierDeclStatement	struct flag_relocate_t * u = ( struct flag_relocate_t * ) user ;	849:1:21132:21190	1490149	0	True				
ANR	1490153	IdentifierDecl	* u = ( struct flag_relocate_t * ) user		1490149	0					
ANR	1490154	IdentifierDeclType	struct flag_relocate_t *		1490149	0					
ANR	1490155	Identifier	u		1490149	1					
ANR	1490156	AssignmentExpression	* u = ( struct flag_relocate_t * ) user		1490149	2		=			
ANR	1490157	Identifier	u		1490149	0					
ANR	1490158	CastExpression	( struct flag_relocate_t * ) user		1490149	1					
ANR	1490159	CastTarget	struct flag_relocate_t *		1490149	0					
ANR	1490160	Identifier	user		1490149	1					
ANR	1490161	IdentifierDeclStatement	ut64 fn = fi -> offset & u -> neg_mask ;	850:1:21193:21227	1490149	1	True				
ANR	1490162	IdentifierDecl	fn = fi -> offset & u -> neg_mask		1490149	0					
ANR	1490163	IdentifierDeclType	ut64		1490149	0					
ANR	1490164	Identifier	fn		1490149	1					
ANR	1490165	AssignmentExpression	fn = fi -> offset & u -> neg_mask		1490149	2		=			
ANR	1490166	Identifier	fn		1490149	0					
ANR	1490167	BitAndExpression	fi -> offset & u -> neg_mask		1490149	1		&			
ANR	1490168	PtrMemberAccess	fi -> offset		1490149	0					
ANR	1490169	Identifier	fi		1490149	0					
ANR	1490170	Identifier	offset		1490149	1					
ANR	1490171	PtrMemberAccess	u -> neg_mask		1490149	1					
ANR	1490172	Identifier	u		1490149	0					
ANR	1490173	Identifier	neg_mask		1490149	1					
ANR	1490174	IdentifierDeclStatement	ut64 on = u -> off & u -> neg_mask ;	851:1:21230:21260	1490149	2	True				
ANR	1490175	IdentifierDecl	on = u -> off & u -> neg_mask		1490149	0					
ANR	1490176	IdentifierDeclType	ut64		1490149	0					
ANR	1490177	Identifier	on		1490149	1					
ANR	1490178	AssignmentExpression	on = u -> off & u -> neg_mask		1490149	2		=			
ANR	1490179	Identifier	on		1490149	0					
ANR	1490180	BitAndExpression	u -> off & u -> neg_mask		1490149	1		&			
ANR	1490181	PtrMemberAccess	u -> off		1490149	0					
ANR	1490182	Identifier	u		1490149	0					
ANR	1490183	Identifier	off		1490149	1					
ANR	1490184	PtrMemberAccess	u -> neg_mask		1490149	1					
ANR	1490185	Identifier	u		1490149	0					
ANR	1490186	Identifier	neg_mask		1490149	1					
ANR	1490187	IfStatement	if ( fn == on )		1490149	3					
ANR	1490188	Condition	fn == on	852:5:21267:21274	1490149	0	True				
ANR	1490189	EqualityExpression	fn == on		1490149	0		==			
ANR	1490190	Identifier	fn		1490149	0					
ANR	1490191	Identifier	on		1490149	1					
ANR	1490192	CompoundStatement		7:2:189:218	1490149	1					
ANR	1490193	IdentifierDeclStatement	ut64 fm = fi -> offset & u -> off_mask ;	853:2:21281:21315	1490149	0	True				
ANR	1490194	IdentifierDecl	fm = fi -> offset & u -> off_mask		1490149	0					
ANR	1490195	IdentifierDeclType	ut64		1490149	0					
ANR	1490196	Identifier	fm		1490149	1					
ANR	1490197	AssignmentExpression	fm = fi -> offset & u -> off_mask		1490149	2		=			
ANR	1490198	Identifier	fm		1490149	0					
ANR	1490199	BitAndExpression	fi -> offset & u -> off_mask		1490149	1		&			
ANR	1490200	PtrMemberAccess	fi -> offset		1490149	0					
ANR	1490201	Identifier	fi		1490149	0					
ANR	1490202	Identifier	offset		1490149	1					
ANR	1490203	PtrMemberAccess	u -> off_mask		1490149	1					
ANR	1490204	Identifier	u		1490149	0					
ANR	1490205	Identifier	off_mask		1490149	1					
ANR	1490206	IdentifierDeclStatement	ut64 om = u -> to & u -> off_mask ;	854:2:21319:21348	1490149	1	True				
ANR	1490207	IdentifierDecl	om = u -> to & u -> off_mask		1490149	0					
ANR	1490208	IdentifierDeclType	ut64		1490149	0					
ANR	1490209	Identifier	om		1490149	1					
ANR	1490210	AssignmentExpression	om = u -> to & u -> off_mask		1490149	2		=			
ANR	1490211	Identifier	om		1490149	0					
ANR	1490212	BitAndExpression	u -> to & u -> off_mask		1490149	1		&			
ANR	1490213	PtrMemberAccess	u -> to		1490149	0					
ANR	1490214	Identifier	u		1490149	0					
ANR	1490215	Identifier	to		1490149	1					
ANR	1490216	PtrMemberAccess	u -> off_mask		1490149	1					
ANR	1490217	Identifier	u		1490149	0					
ANR	1490218	Identifier	off_mask		1490149	1					
ANR	1490219	ExpressionStatement	"update_flag_item_offset ( u -> f , fi , ( u -> to & u -> neg_mask ) + fm + om , false , false )"	855:2:21352:21433	1490149	2	True				
ANR	1490220	CallExpression	"update_flag_item_offset ( u -> f , fi , ( u -> to & u -> neg_mask ) + fm + om , false , false )"		1490149	0					
ANR	1490221	Callee	update_flag_item_offset		1490149	0					
ANR	1490222	Identifier	update_flag_item_offset		1490149	0					
ANR	1490223	ArgumentList	u -> f		1490149	1					
ANR	1490224	Argument	u -> f		1490149	0					
ANR	1490225	PtrMemberAccess	u -> f		1490149	0					
ANR	1490226	Identifier	u		1490149	0					
ANR	1490227	Identifier	f		1490149	1					
ANR	1490228	Argument	fi		1490149	1					
ANR	1490229	Identifier	fi		1490149	0					
ANR	1490230	Argument	( u -> to & u -> neg_mask ) + fm + om		1490149	2					
ANR	1490231	AdditiveExpression	( u -> to & u -> neg_mask ) + fm + om		1490149	0		+			
ANR	1490232	BitAndExpression	u -> to & u -> neg_mask		1490149	0		&			
ANR	1490233	PtrMemberAccess	u -> to		1490149	0					
ANR	1490234	Identifier	u		1490149	0					
ANR	1490235	Identifier	to		1490149	1					
ANR	1490236	PtrMemberAccess	u -> neg_mask		1490149	1					
ANR	1490237	Identifier	u		1490149	0					
ANR	1490238	Identifier	neg_mask		1490149	1					
ANR	1490239	AdditiveExpression	fm + om		1490149	1		+			
ANR	1490240	Identifier	fm		1490149	0					
ANR	1490241	Identifier	om		1490149	1					
ANR	1490242	Argument	false		1490149	3					
ANR	1490243	Identifier	false		1490149	0					
ANR	1490244	Argument	false		1490149	4					
ANR	1490245	Identifier	false		1490149	0					
ANR	1490246	ExpressionStatement	u -> n ++	856:2:21437:21443	1490149	3	True				
ANR	1490247	PostIncDecOperationExpression	u -> n ++		1490149	0					
ANR	1490248	PtrMemberAccess	u -> n		1490149	0					
ANR	1490249	Identifier	u		1490149	0					
ANR	1490250	Identifier	n		1490149	1					
ANR	1490251	IncDec	++		1490149	1					
ANR	1490252	ReturnStatement	return true ;	858:1:21449:21460	1490149	4	True				
ANR	1490253	Identifier	true		1490149	0					
ANR	1490254	ReturnType	static bool		1490149	1					
ANR	1490255	Identifier	flag_relocate_foreach		1490149	2					
ANR	1490256	ParameterList	"RFlagItem * fi , void * user"		1490149	3					
ANR	1490257	Parameter	RFlagItem * fi	848:34:21102:21114	1490149	0	True				
ANR	1490258	ParameterType	RFlagItem *		1490149	0					
ANR	1490259	Identifier	fi		1490149	1					
ANR	1490260	Parameter	void * user	848:49:21117:21126	1490149	1	True				
ANR	1490261	ParameterType	void *		1490149	0					
ANR	1490262	Identifier	user		1490149	1					
ANR	1490263	CFGEntryNode	ENTRY		1490149		True				
ANR	1490264	CFGExitNode	EXIT		1490149		True				
ANR	1490265	Symbol	fi		1490149						
ANR	1490266	Symbol	fm		1490149						
ANR	1490267	Symbol	fn		1490149						
ANR	1490268	Symbol	false		1490149						
ANR	1490269	Symbol	* fi		1490149						
ANR	1490270	Symbol	u		1490149						
ANR	1490271	Symbol	u -> to		1490149						
ANR	1490272	Symbol	u -> n		1490149						
ANR	1490273	Symbol	u -> neg_mask		1490149						
ANR	1490274	Symbol	fi -> offset		1490149						
ANR	1490275	Symbol	true		1490149						
ANR	1490276	Symbol	u -> off_mask		1490149						
ANR	1490277	Symbol	user		1490149						
ANR	1490278	Symbol	u -> f		1490149						
ANR	1490279	Symbol	om		1490149						
ANR	1490280	Symbol	* u		1490149						
ANR	1490281	Symbol	on		1490149						
ANR	1490282	Symbol	u -> off		1490149						
ANR	1490283	Function	r_flag_relocate	861:0:21465:21760							
ANR	1490284	FunctionDef	"r_flag_relocate (RFlag * f , ut64 off , ut64 off_mask , ut64 to)"		1490283	0					
ANR	1490285	CompoundStatement		861:70:21535:21760	1490283	0					
ANR	1490286	ExpressionStatement	"r_return_val_if_fail ( f , - 1 )"	862:1:21538:21566	1490283	0	True				
ANR	1490287	CallExpression	"r_return_val_if_fail ( f , - 1 )"		1490283	0					
ANR	1490288	Callee	r_return_val_if_fail		1490283	0					
ANR	1490289	Identifier	r_return_val_if_fail		1490283	0					
ANR	1490290	ArgumentList	f		1490283	1					
ANR	1490291	Argument	f		1490283	0					
ANR	1490292	Identifier	f		1490283	0					
ANR	1490293	Argument	- 1		1490283	1					
ANR	1490294	UnaryOperationExpression	- 1		1490283	0					
ANR	1490295	UnaryOperator	-		1490283	0					
ANR	1490296	PrimaryExpression	1		1490283	1					
ANR	1490297	Statement	struct	863:1:21569:21574	1490283	1	True				
ANR	1490298	Statement	flag_relocate_t	863:8:21576:21590	1490283	2	True				
ANR	1490299	Statement	u	863:24:21592:21592	1490283	3	True				
ANR	1490300	Statement	=	863:26:21594:21594	1490283	4	True				
ANR	1490301	CompoundStatement		3:28:60:60	1490283	5					
ANR	1490302	Statement	.	864:2:21600:21600	1490283	0	True				
ANR	1490303	Statement	f	864:3:21601:21601	1490283	1	True				
ANR	1490304	Statement	=	864:5:21603:21603	1490283	2	True				
ANR	1490305	Statement	f	864:7:21605:21605	1490283	3	True				
ANR	1490306	Statement	","	864:8:21606:21606	1490283	4	True				
ANR	1490307	Statement	.	865:2:21610:21610	1490283	5	True				
ANR	1490308	Statement	off	865:3:21611:21613	1490283	6	True				
ANR	1490309	Statement	=	865:7:21615:21615	1490283	7	True				
ANR	1490310	Statement	off	865:9:21617:21619	1490283	8	True				
ANR	1490311	Statement	","	865:12:21620:21620	1490283	9	True				
ANR	1490312	Statement	.	866:2:21624:21624	1490283	10	True				
ANR	1490313	Statement	off_mask	866:3:21625:21632	1490283	11	True				
ANR	1490314	Statement	=	866:12:21634:21634	1490283	12	True				
ANR	1490315	Statement	off_mask	866:14:21636:21643	1490283	13	True				
ANR	1490316	Statement	","	866:22:21644:21644	1490283	14	True				
ANR	1490317	Statement	.	867:2:21648:21648	1490283	15	True				
ANR	1490318	Statement	neg_mask	867:3:21649:21656	1490283	16	True				
ANR	1490319	Statement	=	867:12:21658:21658	1490283	17	True				
ANR	1490320	Statement	~	867:14:21660:21660	1490283	18	True				
ANR	1490321	Statement	(	867:15:21661:21661	1490283	19	True				
ANR	1490322	Statement	off_mask	867:16:21662:21669	1490283	20	True				
ANR	1490323	Statement	)	867:24:21670:21670	1490283	21	True				
ANR	1490324	Statement	","	867:25:21671:21671	1490283	22	True				
ANR	1490325	Statement	.	868:2:21675:21675	1490283	23	True				
ANR	1490326	Statement	to	868:3:21676:21677	1490283	24	True				
ANR	1490327	Statement	=	868:6:21679:21679	1490283	25	True				
ANR	1490328	Statement	to	868:8:21681:21682	1490283	26	True				
ANR	1490329	Statement	","	868:10:21683:21683	1490283	27	True				
ANR	1490330	Statement	.	869:2:21687:21687	1490283	28	True				
ANR	1490331	Statement	n	869:3:21688:21688	1490283	29	True				
ANR	1490332	Statement	=	869:5:21690:21690	1490283	30	True				
ANR	1490333	Statement	0	869:7:21692:21692	1490283	31	True				
ANR	1490334	ExpressionStatement		870:2:21696:21696	1490283	6	True				
ANR	1490335	ExpressionStatement	"r_flag_foreach ( f , flag_relocate_foreach , & u )"	872:1:21700:21745	1490283	7	True				
ANR	1490336	CallExpression	"r_flag_foreach ( f , flag_relocate_foreach , & u )"		1490283	0					
ANR	1490337	Callee	r_flag_foreach		1490283	0					
ANR	1490338	Identifier	r_flag_foreach		1490283	0					
ANR	1490339	ArgumentList	f		1490283	1					
ANR	1490340	Argument	f		1490283	0					
ANR	1490341	Identifier	f		1490283	0					
ANR	1490342	Argument	flag_relocate_foreach		1490283	1					
ANR	1490343	Identifier	flag_relocate_foreach		1490283	0					
ANR	1490344	Argument	& u		1490283	2					
ANR	1490345	UnaryOperationExpression	& u		1490283	0					
ANR	1490346	UnaryOperator	&		1490283	0					
ANR	1490347	Identifier	u		1490283	1					
ANR	1490348	ReturnStatement	return u . n ;	873:1:21748:21758	1490283	8	True				
ANR	1490349	MemberAccess	u . n		1490283	0					
ANR	1490350	Identifier	u		1490283	0					
ANR	1490351	Identifier	n		1490283	1					
ANR	1490352	ReturnType	R_API int		1490283	1					
ANR	1490353	Identifier	r_flag_relocate		1490283	2					
ANR	1490354	ParameterList	"RFlag * f , ut64 off , ut64 off_mask , ut64 to"		1490283	3					
ANR	1490355	Parameter	RFlag * f	861:26:21491:21498	1490283	0	True				
ANR	1490356	ParameterType	RFlag *		1490283	0					
ANR	1490357	Identifier	f		1490283	1					
ANR	1490358	Parameter	ut64 off	861:36:21501:21508	1490283	1	True				
ANR	1490359	ParameterType	ut64		1490283	0					
ANR	1490360	Identifier	off		1490283	1					
ANR	1490361	Parameter	ut64 off_mask	861:46:21511:21523	1490283	2	True				
ANR	1490362	ParameterType	ut64		1490283	0					
ANR	1490363	Identifier	off_mask		1490283	1					
ANR	1490364	Parameter	ut64 to	861:61:21526:21532	1490283	3	True				
ANR	1490365	ParameterType	ut64		1490283	0					
ANR	1490366	Identifier	to		1490283	1					
ANR	1490367	CFGEntryNode	ENTRY		1490283		True				
ANR	1490368	CFGExitNode	EXIT		1490283		True				
ANR	1490369	Symbol	flag_relocate_foreach		1490283						
ANR	1490370	Symbol	u		1490283						
ANR	1490371	Symbol	f		1490283						
ANR	1490372	Symbol	off_mask		1490283						
ANR	1490373	Symbol	to		1490283						
ANR	1490374	Symbol	& u		1490283						
ANR	1490375	Symbol	off		1490283						
ANR	1490376	Symbol	u . n		1490283						
ANR	1490377	Function	r_flag_move	876:0:21763:21983							
ANR	1490378	FunctionDef	"r_flag_move (RFlag * f , ut64 at , ut64 to)"		1490377	0					
ANR	1490379	CompoundStatement		876:51:21814:21983	1490377	0					
ANR	1490380	ExpressionStatement	"r_return_val_if_fail ( f , false )"	877:1:21817:21848	1490377	0	True				
ANR	1490381	CallExpression	"r_return_val_if_fail ( f , false )"		1490377	0					
ANR	1490382	Callee	r_return_val_if_fail		1490377	0					
ANR	1490383	Identifier	r_return_val_if_fail		1490377	0					
ANR	1490384	ArgumentList	f		1490377	1					
ANR	1490385	Argument	f		1490377	0					
ANR	1490386	Identifier	f		1490377	0					
ANR	1490387	Argument	false		1490377	1					
ANR	1490388	Identifier	false		1490377	0					
ANR	1490389	IdentifierDeclStatement	"RFlagItem * item = r_flag_get_i ( f , at ) ;"	878:1:21851:21889	1490377	1	True				
ANR	1490390	IdentifierDecl	"* item = r_flag_get_i ( f , at )"		1490377	0					
ANR	1490391	IdentifierDeclType	RFlagItem *		1490377	0					
ANR	1490392	Identifier	item		1490377	1					
ANR	1490393	AssignmentExpression	"* item = r_flag_get_i ( f , at )"		1490377	2		=			
ANR	1490394	Identifier	item		1490377	0					
ANR	1490395	CallExpression	"r_flag_get_i ( f , at )"		1490377	1					
ANR	1490396	Callee	r_flag_get_i		1490377	0					
ANR	1490397	Identifier	r_flag_get_i		1490377	0					
ANR	1490398	ArgumentList	f		1490377	1					
ANR	1490399	Argument	f		1490377	0					
ANR	1490400	Identifier	f		1490377	0					
ANR	1490401	Argument	at		1490377	1					
ANR	1490402	Identifier	at		1490377	0					
ANR	1490403	IfStatement	if ( item )		1490377	2					
ANR	1490404	Condition	item	879:5:21896:21899	1490377	0	True				
ANR	1490405	Identifier	item		1490377	0					
ANR	1490406	CompoundStatement		4:11:87:87	1490377	1					
ANR	1490407	ExpressionStatement	"r_flag_set ( f , item -> name , to , item -> size )"	880:2:21906:21948	1490377	0	True				
ANR	1490408	CallExpression	"r_flag_set ( f , item -> name , to , item -> size )"		1490377	0					
ANR	1490409	Callee	r_flag_set		1490377	0					
ANR	1490410	Identifier	r_flag_set		1490377	0					
ANR	1490411	ArgumentList	f		1490377	1					
ANR	1490412	Argument	f		1490377	0					
ANR	1490413	Identifier	f		1490377	0					
ANR	1490414	Argument	item -> name		1490377	1					
ANR	1490415	PtrMemberAccess	item -> name		1490377	0					
ANR	1490416	Identifier	item		1490377	0					
ANR	1490417	Identifier	name		1490377	1					
ANR	1490418	Argument	to		1490377	2					
ANR	1490419	Identifier	to		1490377	0					
ANR	1490420	Argument	item -> size		1490377	3					
ANR	1490421	PtrMemberAccess	item -> size		1490377	0					
ANR	1490422	Identifier	item		1490377	0					
ANR	1490423	Identifier	size		1490377	1					
ANR	1490424	ReturnStatement	return true ;	881:2:21952:21963	1490377	1	True				
ANR	1490425	Identifier	true		1490377	0					
ANR	1490426	ReturnStatement	return false ;	883:1:21969:21981	1490377	3	True				
ANR	1490427	Identifier	false		1490377	0					
ANR	1490428	ReturnType	R_API bool		1490377	1					
ANR	1490429	Identifier	r_flag_move		1490377	2					
ANR	1490430	ParameterList	"RFlag * f , ut64 at , ut64 to"		1490377	3					
ANR	1490431	Parameter	RFlag * f	876:23:21786:21793	1490377	0	True				
ANR	1490432	ParameterType	RFlag *		1490377	0					
ANR	1490433	Identifier	f		1490377	1					
ANR	1490434	Parameter	ut64 at	876:33:21796:21802	1490377	1	True				
ANR	1490435	ParameterType	ut64		1490377	0					
ANR	1490436	Identifier	at		1490377	1					
ANR	1490437	Parameter	ut64 to	876:42:21805:21811	1490377	2	True				
ANR	1490438	ParameterType	ut64		1490377	0					
ANR	1490439	Identifier	to		1490377	1					
ANR	1490440	CFGEntryNode	ENTRY		1490377		True				
ANR	1490441	CFGExitNode	EXIT		1490377		True				
ANR	1490442	Symbol	item		1490377						
ANR	1490443	Symbol	at		1490377						
ANR	1490444	Symbol	f		1490377						
ANR	1490445	Symbol	* item		1490377						
ANR	1490446	Symbol	item -> name		1490377						
ANR	1490447	Symbol	false		1490377						
ANR	1490448	Symbol	true		1490377						
ANR	1490449	Symbol	to		1490377						
ANR	1490450	Symbol	r_flag_get_i		1490377						
ANR	1490451	Symbol	item -> size		1490377						
ANR	1490452	Function	r_flag_color	886:6:21992:22223							
ANR	1490453	FunctionDef	"r_flag_color (RFlag * f , RFlagItem * it , const char * color)"		1490452	0					
ANR	1490454	CompoundStatement		886:75:22061:22223	1490452	0					
ANR	1490455	ExpressionStatement	"r_return_val_if_fail ( f && it , NULL )"	887:1:22064:22100	1490452	0	True				
ANR	1490456	CallExpression	"r_return_val_if_fail ( f && it , NULL )"		1490452	0					
ANR	1490457	Callee	r_return_val_if_fail		1490452	0					
ANR	1490458	Identifier	r_return_val_if_fail		1490452	0					
ANR	1490459	ArgumentList	f && it		1490452	1					
ANR	1490460	Argument	f && it		1490452	0					
ANR	1490461	AndExpression	f && it		1490452	0		&&			
ANR	1490462	Identifier	f		1490452	0					
ANR	1490463	Identifier	it		1490452	1					
ANR	1490464	Argument	NULL		1490452	1					
ANR	1490465	Identifier	NULL		1490452	0					
ANR	1490466	IfStatement	if ( ! color )		1490452	1					
ANR	1490467	Condition	! color	888:5:22107:22112	1490452	0	True				
ANR	1490468	UnaryOperationExpression	! color		1490452	0					
ANR	1490469	UnaryOperator	!		1490452	0					
ANR	1490470	Identifier	color		1490452	1					
ANR	1490471	CompoundStatement		3:13:53:53	1490452	1					
ANR	1490472	ReturnStatement	return it -> color ;	889:2:22119:22135	1490452	0	True				
ANR	1490473	PtrMemberAccess	it -> color		1490452	0					
ANR	1490474	Identifier	it		1490452	0					
ANR	1490475	Identifier	color		1490452	1					
ANR	1490476	ExpressionStatement	free ( it -> color )	891:1:22141:22157	1490452	2	True				
ANR	1490477	CallExpression	free ( it -> color )		1490452	0					
ANR	1490478	Callee	free		1490452	0					
ANR	1490479	Identifier	free		1490452	0					
ANR	1490480	ArgumentList	it -> color		1490452	1					
ANR	1490481	Argument	it -> color		1490452	0					
ANR	1490482	PtrMemberAccess	it -> color		1490452	0					
ANR	1490483	Identifier	it		1490452	0					
ANR	1490484	Identifier	color		1490452	1					
ANR	1490485	ExpressionStatement	it -> color = * color ? strdup ( color ) : NULL	892:1:22160:22202	1490452	3	True				
ANR	1490486	AssignmentExpression	it -> color = * color ? strdup ( color ) : NULL		1490452	0		=			
ANR	1490487	PtrMemberAccess	it -> color		1490452	0					
ANR	1490488	Identifier	it		1490452	0					
ANR	1490489	Identifier	color		1490452	1					
ANR	1490490	ConditionalExpression	* color ? strdup ( color ) : NULL		1490452	1					
ANR	1490491	Condition	* color		1490452	0					
ANR	1490492	UnaryOperationExpression	* color		1490452	0					
ANR	1490493	UnaryOperator	*		1490452	0					
ANR	1490494	Identifier	color		1490452	1					
ANR	1490495	CallExpression	strdup ( color )		1490452	1					
ANR	1490496	Callee	strdup		1490452	0					
ANR	1490497	Identifier	strdup		1490452	0					
ANR	1490498	ArgumentList	color		1490452	1					
ANR	1490499	Argument	color		1490452	0					
ANR	1490500	Identifier	color		1490452	0					
ANR	1490501	Identifier	NULL		1490452	2					
ANR	1490502	ReturnStatement	return it -> color ;	893:1:22205:22221	1490452	4	True				
ANR	1490503	PtrMemberAccess	it -> color		1490452	0					
ANR	1490504	Identifier	it		1490452	0					
ANR	1490505	Identifier	color		1490452	1					
ANR	1490506	ReturnType	const char *		1490452	1					
ANR	1490507	Identifier	r_flag_color		1490452	2					
ANR	1490508	ParameterList	"RFlag * f , RFlagItem * it , const char * color"		1490452	3					
ANR	1490509	Parameter	RFlag * f	886:31:22017:22024	1490452	0	True				
ANR	1490510	ParameterType	RFlag *		1490452	0					
ANR	1490511	Identifier	f		1490452	1					
ANR	1490512	Parameter	RFlagItem * it	886:41:22027:22039	1490452	1	True				
ANR	1490513	ParameterType	RFlagItem *		1490452	0					
ANR	1490514	Identifier	it		1490452	1					
ANR	1490515	Parameter	const char * color	886:56:22042:22058	1490452	2	True				
ANR	1490516	ParameterType	const char *		1490452	0					
ANR	1490517	Identifier	color		1490452	1					
ANR	1490518	CFGEntryNode	ENTRY		1490452		True				
ANR	1490519	CFGExitNode	EXIT		1490452		True				
ANR	1490520	Symbol	* it		1490452						
ANR	1490521	Symbol	it -> color		1490452						
ANR	1490522	Symbol	NULL		1490452						
ANR	1490523	Symbol	color		1490452						
ANR	1490524	Symbol	f		1490452						
ANR	1490525	Symbol	* color		1490452						
ANR	1490526	Symbol	it		1490452						
ANR	1490527	Symbol	strdup		1490452						
ANR	1490528	Function	r_flag_bind	897:0:22234:22630							
ANR	1490529	FunctionDef	"r_flag_bind (RFlag * f , RFlagBind * fb)"		1490528	0					
ANR	1490530	CompoundStatement		897:48:22282:22630	1490528	0					
ANR	1490531	ExpressionStatement	r_return_if_fail ( f && fb )	898:1:22285:22311	1490528	0	True				
ANR	1490532	CallExpression	r_return_if_fail ( f && fb )		1490528	0					
ANR	1490533	Callee	r_return_if_fail		1490528	0					
ANR	1490534	Identifier	r_return_if_fail		1490528	0					
ANR	1490535	ArgumentList	f && fb		1490528	1					
ANR	1490536	Argument	f && fb		1490528	0					
ANR	1490537	AndExpression	f && fb		1490528	0		&&			
ANR	1490538	Identifier	f		1490528	0					
ANR	1490539	Identifier	fb		1490528	1					
ANR	1490540	ExpressionStatement	fb -> f = f	899:1:22314:22323	1490528	1	True				
ANR	1490541	AssignmentExpression	fb -> f = f		1490528	0		=			
ANR	1490542	PtrMemberAccess	fb -> f		1490528	0					
ANR	1490543	Identifier	fb		1490528	0					
ANR	1490544	Identifier	f		1490528	1					
ANR	1490545	Identifier	f		1490528	1					
ANR	1490546	ExpressionStatement	fb -> exist_at = r_flag_exist_at	900:1:22326:22356	1490528	2	True				
ANR	1490547	AssignmentExpression	fb -> exist_at = r_flag_exist_at		1490528	0		=			
ANR	1490548	PtrMemberAccess	fb -> exist_at		1490528	0					
ANR	1490549	Identifier	fb		1490528	0					
ANR	1490550	Identifier	exist_at		1490528	1					
ANR	1490551	Identifier	r_flag_exist_at		1490528	1					
ANR	1490552	ExpressionStatement	fb -> get = r_flag_get	901:1:22359:22379	1490528	3	True				
ANR	1490553	AssignmentExpression	fb -> get = r_flag_get		1490528	0		=			
ANR	1490554	PtrMemberAccess	fb -> get		1490528	0					
ANR	1490555	Identifier	fb		1490528	0					
ANR	1490556	Identifier	get		1490528	1					
ANR	1490557	Identifier	r_flag_get		1490528	1					
ANR	1490558	ExpressionStatement	fb -> get_at = r_flag_get_at	902:1:22382:22408	1490528	4	True				
ANR	1490559	AssignmentExpression	fb -> get_at = r_flag_get_at		1490528	0		=			
ANR	1490560	PtrMemberAccess	fb -> get_at		1490528	0					
ANR	1490561	Identifier	fb		1490528	0					
ANR	1490562	Identifier	get_at		1490528	1					
ANR	1490563	Identifier	r_flag_get_at		1490528	1					
ANR	1490564	ExpressionStatement	fb -> set = r_flag_set	903:1:22411:22431	1490528	5	True				
ANR	1490565	AssignmentExpression	fb -> set = r_flag_set		1490528	0		=			
ANR	1490566	PtrMemberAccess	fb -> set		1490528	0					
ANR	1490567	Identifier	fb		1490528	0					
ANR	1490568	Identifier	set		1490528	1					
ANR	1490569	Identifier	r_flag_set		1490528	1					
ANR	1490570	ExpressionStatement	fb -> unset = r_flag_unset	904:1:22434:22458	1490528	6	True				
ANR	1490571	AssignmentExpression	fb -> unset = r_flag_unset		1490528	0		=			
ANR	1490572	PtrMemberAccess	fb -> unset		1490528	0					
ANR	1490573	Identifier	fb		1490528	0					
ANR	1490574	Identifier	unset		1490528	1					
ANR	1490575	Identifier	r_flag_unset		1490528	1					
ANR	1490576	ExpressionStatement	fb -> unset_name = r_flag_unset_name	905:1:22461:22495	1490528	7	True				
ANR	1490577	AssignmentExpression	fb -> unset_name = r_flag_unset_name		1490528	0		=			
ANR	1490578	PtrMemberAccess	fb -> unset_name		1490528	0					
ANR	1490579	Identifier	fb		1490528	0					
ANR	1490580	Identifier	unset_name		1490528	1					
ANR	1490581	Identifier	r_flag_unset_name		1490528	1					
ANR	1490582	ExpressionStatement	fb -> unset_off = r_flag_unset_off	906:1:22498:22530	1490528	8	True				
ANR	1490583	AssignmentExpression	fb -> unset_off = r_flag_unset_off		1490528	0		=			
ANR	1490584	PtrMemberAccess	fb -> unset_off		1490528	0					
ANR	1490585	Identifier	fb		1490528	0					
ANR	1490586	Identifier	unset_off		1490528	1					
ANR	1490587	Identifier	r_flag_unset_off		1490528	1					
ANR	1490588	ExpressionStatement	fb -> set_fs = r_flag_space_set	907:1:22533:22562	1490528	9	True				
ANR	1490589	AssignmentExpression	fb -> set_fs = r_flag_space_set		1490528	0		=			
ANR	1490590	PtrMemberAccess	fb -> set_fs		1490528	0					
ANR	1490591	Identifier	fb		1490528	0					
ANR	1490592	Identifier	set_fs		1490528	1					
ANR	1490593	Identifier	r_flag_space_set		1490528	1					
ANR	1490594	ExpressionStatement	fb -> push_fs = r_flag_space_push	908:1:22565:22596	1490528	10	True				
ANR	1490595	AssignmentExpression	fb -> push_fs = r_flag_space_push		1490528	0		=			
ANR	1490596	PtrMemberAccess	fb -> push_fs		1490528	0					
ANR	1490597	Identifier	fb		1490528	0					
ANR	1490598	Identifier	push_fs		1490528	1					
ANR	1490599	Identifier	r_flag_space_push		1490528	1					
ANR	1490600	ExpressionStatement	fb -> pop_fs = r_flag_space_pop	909:1:22599:22628	1490528	11	True				
ANR	1490601	AssignmentExpression	fb -> pop_fs = r_flag_space_pop		1490528	0		=			
ANR	1490602	PtrMemberAccess	fb -> pop_fs		1490528	0					
ANR	1490603	Identifier	fb		1490528	0					
ANR	1490604	Identifier	pop_fs		1490528	1					
ANR	1490605	Identifier	r_flag_space_pop		1490528	1					
ANR	1490606	ReturnType	R_API void		1490528	1					
ANR	1490607	Identifier	r_flag_bind		1490528	2					
ANR	1490608	ParameterList	"RFlag * f , RFlagBind * fb"		1490528	3					
ANR	1490609	Parameter	RFlag * f	897:23:22257:22264	1490528	0	True				
ANR	1490610	ParameterType	RFlag *		1490528	0					
ANR	1490611	Identifier	f		1490528	1					
ANR	1490612	Parameter	RFlagBind * fb	897:33:22267:22279	1490528	1	True				
ANR	1490613	ParameterType	RFlagBind *		1490528	0					
ANR	1490614	Identifier	fb		1490528	1					
ANR	1490615	CFGEntryNode	ENTRY		1490528		True				
ANR	1490616	CFGExitNode	EXIT		1490528		True				
ANR	1490617	Symbol	r_flag_get		1490528						
ANR	1490618	Symbol	* fb		1490528						
ANR	1490619	Symbol	fb -> get_at		1490528						
ANR	1490620	Symbol	f		1490528						
ANR	1490621	Symbol	fb -> exist_at		1490528						
ANR	1490622	Symbol	r_flag_space_set		1490528						
ANR	1490623	Symbol	fb -> set_fs		1490528						
ANR	1490624	Symbol	fb -> get		1490528						
ANR	1490625	Symbol	r_flag_space_push		1490528						
ANR	1490626	Symbol	r_flag_unset_off		1490528						
ANR	1490627	Symbol	r_flag_set		1490528						
ANR	1490628	Symbol	fb -> pop_fs		1490528						
ANR	1490629	Symbol	r_flag_unset_name		1490528						
ANR	1490630	Symbol	r_flag_unset		1490528						
ANR	1490631	Symbol	fb -> unset_off		1490528						
ANR	1490632	Symbol	fb -> push_fs		1490528						
ANR	1490633	Symbol	fb -> f		1490528						
ANR	1490634	Symbol	fb -> set		1490528						
ANR	1490635	Symbol	r_flag_space_pop		1490528						
ANR	1490636	Symbol	fb		1490528						
ANR	1490637	Symbol	fb -> unset_name		1490528						
ANR	1490638	Symbol	r_flag_exist_at		1490528						
ANR	1490639	Symbol	r_flag_get_at		1490528						
ANR	1490640	Symbol	fb -> unset		1490528						
ANR	1490641	Function	flag_count_foreach	912:0:22633:22747							
ANR	1490642	FunctionDef	"flag_count_foreach (RFlagItem * fi , void * user)"		1490641	0					
ANR	1490643	CompoundStatement		912:58:22691:22747	1490641	0					
ANR	1490644	IdentifierDeclStatement	int * count = ( int * ) user ;	913:1:22694:22718	1490641	0	True				
ANR	1490645	IdentifierDecl	* count = ( int * ) user		1490641	0					
ANR	1490646	IdentifierDeclType	int *		1490641	0					
ANR	1490647	Identifier	count		1490641	1					
ANR	1490648	AssignmentExpression	* count = ( int * ) user		1490641	2		=			
ANR	1490649	Identifier	count		1490641	0					
ANR	1490650	CastExpression	( int * ) user		1490641	1					
ANR	1490651	CastTarget	int *		1490641	0					
ANR	1490652	Identifier	user		1490641	1					
ANR	1490653	ExpressionStatement	( * count ) ++	914:1:22721:22731	1490641	1	True				
ANR	1490654	PostIncDecOperationExpression	( * count ) ++		1490641	0					
ANR	1490655	UnaryOperationExpression	* count		1490641	0					
ANR	1490656	UnaryOperator	*		1490641	0					
ANR	1490657	Identifier	count		1490641	1					
ANR	1490658	IncDec	++		1490641	1					
ANR	1490659	ReturnStatement	return true ;	915:1:22734:22745	1490641	2	True				
ANR	1490660	Identifier	true		1490641	0					
ANR	1490661	ReturnType	static bool		1490641	1					
ANR	1490662	Identifier	flag_count_foreach		1490641	2					
ANR	1490663	ParameterList	"RFlagItem * fi , void * user"		1490641	3					
ANR	1490664	Parameter	RFlagItem * fi	912:31:22664:22676	1490641	0	True				
ANR	1490665	ParameterType	RFlagItem *		1490641	0					
ANR	1490666	Identifier	fi		1490641	1					
ANR	1490667	Parameter	void * user	912:46:22679:22688	1490641	1	True				
ANR	1490668	ParameterType	void *		1490641	0					
ANR	1490669	Identifier	user		1490641	1					
ANR	1490670	CFGEntryNode	ENTRY		1490641		True				
ANR	1490671	CFGExitNode	EXIT		1490641		True				
ANR	1490672	Symbol	* count		1490641						
ANR	1490673	Symbol	fi		1490641						
ANR	1490674	Symbol	count		1490641						
ANR	1490675	Symbol	true		1490641						
ANR	1490676	Symbol	user		1490641						
ANR	1490677	Function	r_flag_count	918:0:22750:22925							
ANR	1490678	FunctionDef	"r_flag_count (RFlag * f , const char * glob)"		1490677	0					
ANR	1490679	CompoundStatement		918:51:22801:22925	1490677	0					
ANR	1490680	IdentifierDeclStatement	int count = 0 ;	919:1:22804:22817	1490677	0	True				
ANR	1490681	IdentifierDecl	count = 0		1490677	0					
ANR	1490682	IdentifierDeclType	int		1490677	0					
ANR	1490683	Identifier	count		1490677	1					
ANR	1490684	AssignmentExpression	count = 0		1490677	2		=			
ANR	1490685	Identifier	count		1490677	0					
ANR	1490686	PrimaryExpression	0		1490677	1					
ANR	1490687	ExpressionStatement	"r_return_val_if_fail ( f , - 1 )"	920:1:22820:22848	1490677	1	True				
ANR	1490688	CallExpression	"r_return_val_if_fail ( f , - 1 )"		1490677	0					
ANR	1490689	Callee	r_return_val_if_fail		1490677	0					
ANR	1490690	Identifier	r_return_val_if_fail		1490677	0					
ANR	1490691	ArgumentList	f		1490677	1					
ANR	1490692	Argument	f		1490677	0					
ANR	1490693	Identifier	f		1490677	0					
ANR	1490694	Argument	- 1		1490677	1					
ANR	1490695	UnaryOperationExpression	- 1		1490677	0					
ANR	1490696	UnaryOperator	-		1490677	0					
ANR	1490697	PrimaryExpression	1		1490677	1					
ANR	1490698	ExpressionStatement	"r_flag_foreach_glob ( f , glob , flag_count_foreach , & count )"	921:1:22851:22908	1490677	2	True				
ANR	1490699	CallExpression	"r_flag_foreach_glob ( f , glob , flag_count_foreach , & count )"		1490677	0					
ANR	1490700	Callee	r_flag_foreach_glob		1490677	0					
ANR	1490701	Identifier	r_flag_foreach_glob		1490677	0					
ANR	1490702	ArgumentList	f		1490677	1					
ANR	1490703	Argument	f		1490677	0					
ANR	1490704	Identifier	f		1490677	0					
ANR	1490705	Argument	glob		1490677	1					
ANR	1490706	Identifier	glob		1490677	0					
ANR	1490707	Argument	flag_count_foreach		1490677	2					
ANR	1490708	Identifier	flag_count_foreach		1490677	0					
ANR	1490709	Argument	& count		1490677	3					
ANR	1490710	UnaryOperationExpression	& count		1490677	0					
ANR	1490711	UnaryOperator	&		1490677	0					
ANR	1490712	Identifier	count		1490677	1					
ANR	1490713	ReturnStatement	return count ;	922:1:22911:22923	1490677	3	True				
ANR	1490714	Identifier	count		1490677	0					
ANR	1490715	ReturnType	R_API int		1490677	1					
ANR	1490716	Identifier	r_flag_count		1490677	2					
ANR	1490717	ParameterList	"RFlag * f , const char * glob"		1490677	3					
ANR	1490718	Parameter	RFlag * f	918:23:22773:22780	1490677	0	True				
ANR	1490719	ParameterType	RFlag *		1490677	0					
ANR	1490720	Identifier	f		1490677	1					
ANR	1490721	Parameter	const char * glob	918:33:22783:22798	1490677	1	True				
ANR	1490722	ParameterType	const char *		1490677	0					
ANR	1490723	Identifier	glob		1490677	1					
ANR	1490724	CFGEntryNode	ENTRY		1490677		True				
ANR	1490725	CFGExitNode	EXIT		1490677		True				
ANR	1490726	Symbol	f		1490677						
ANR	1490727	Symbol	glob		1490677						
ANR	1490728	Symbol	count		1490677						
ANR	1490729	Symbol	& count		1490677						
ANR	1490730	Symbol	flag_count_foreach		1490677						
ANR	1490731	DeclStmt									
ANR	1490732	Decl							RSkipListNode	RSkipListNode *	it
ANR	1490733	Decl							RSkipListNode	RSkipListNode *	tmp
ANR	1490734	DeclStmt									
ANR	1490735	Decl							RFlagsAtOffset	RFlagsAtOffset *	flags_at
ANR	1490736	DeclStmt									
ANR	1490737	Decl							RListIter	RListIter *	it2
ANR	1490738	Decl							RListIter	RListIter *	tmp2
ANR	1490739	DeclStmt									
ANR	1490740	Decl							RFlagItem	RFlagItem *	fi
ANR	1490741	Function	r_flag_foreach	940:0:23274:23362							
ANR	1490742	FunctionDef	"r_flag_foreach (RFlag * f , RFlagItemCb cb , void * user)"		1490741	0					
ANR	1490743	CompoundStatement		940:64:23338:23362	1490741	0					
ANR	1490744	ExpressionStatement	FOREACH_BODY ( true )	941:1:23341:23360	1490741	0	True				
ANR	1490745	CallExpression	FOREACH_BODY ( true )		1490741	0					
ANR	1490746	Callee	FOREACH_BODY		1490741	0					
ANR	1490747	Identifier	FOREACH_BODY		1490741	0					
ANR	1490748	ArgumentList	true		1490741	1					
ANR	1490749	Argument	true		1490741	0					
ANR	1490750	Identifier	true		1490741	0					
ANR	1490751	ReturnType	R_API void		1490741	1					
ANR	1490752	Identifier	r_flag_foreach		1490741	2					
ANR	1490753	ParameterList	"RFlag * f , RFlagItemCb cb , void * user"		1490741	3					
ANR	1490754	Parameter	RFlag * f	940:26:23300:23307	1490741	0	True				
ANR	1490755	ParameterType	RFlag *		1490741	0					
ANR	1490756	Identifier	f		1490741	1					
ANR	1490757	Parameter	RFlagItemCb cb	940:36:23310:23323	1490741	1	True				
ANR	1490758	ParameterType	RFlagItemCb		1490741	0					
ANR	1490759	Identifier	cb		1490741	1					
ANR	1490760	Parameter	void * user	940:52:23326:23335	1490741	2	True				
ANR	1490761	ParameterType	void *		1490741	0					
ANR	1490762	Identifier	user		1490741	1					
ANR	1490763	CFGEntryNode	ENTRY		1490741		True				
ANR	1490764	CFGExitNode	EXIT		1490741		True				
ANR	1490765	Symbol	f		1490741						
ANR	1490766	Symbol	true		1490741						
ANR	1490767	Symbol	user		1490741						
ANR	1490768	Symbol	cb		1490741						
ANR	1490769	Function	r_flag_foreach_prefix	944:0:23365:23566							
ANR	1490770	FunctionDef	"r_flag_foreach_prefix (RFlag * f , const char * pfx , int pfx_len , RFlagItemCb cb , void * user)"		1490769	0					
ANR	1490771	CompoundStatement		944:101:23466:23566	1490769	0					
ANR	1490772	ExpressionStatement	pfx_len = pfx_len < 0 ? strlen ( pfx ) : pfx_len	945:1:23469:23513	1490769	0	True				
ANR	1490773	AssignmentExpression	pfx_len = pfx_len < 0 ? strlen ( pfx ) : pfx_len		1490769	0		=			
ANR	1490774	Identifier	pfx_len		1490769	0					
ANR	1490775	ConditionalExpression	pfx_len < 0 ? strlen ( pfx ) : pfx_len		1490769	1					
ANR	1490776	Condition	pfx_len < 0		1490769	0					
ANR	1490777	RelationalExpression	pfx_len < 0		1490769	0		<			
ANR	1490778	Identifier	pfx_len		1490769	0					
ANR	1490779	PrimaryExpression	0		1490769	1					
ANR	1490780	CallExpression	strlen ( pfx )		1490769	1					
ANR	1490781	Callee	strlen		1490769	0					
ANR	1490782	Identifier	strlen		1490769	0					
ANR	1490783	ArgumentList	pfx		1490769	1					
ANR	1490784	Argument	pfx		1490769	0					
ANR	1490785	Identifier	pfx		1490769	0					
ANR	1490786	Identifier	pfx_len		1490769	2					
ANR	1490787	ExpressionStatement	"FOREACH_BODY ( ! strncmp ( fi -> name , pfx , pfx_len ) )"	946:1:23516:23564	1490769	1	True				
ANR	1490788	CallExpression	"FOREACH_BODY ( ! strncmp ( fi -> name , pfx , pfx_len ) )"		1490769	0					
ANR	1490789	Callee	FOREACH_BODY		1490769	0					
ANR	1490790	Identifier	FOREACH_BODY		1490769	0					
ANR	1490791	ArgumentList	"! strncmp ( fi -> name , pfx , pfx_len )"		1490769	1					
ANR	1490792	Argument	"! strncmp ( fi -> name , pfx , pfx_len )"		1490769	0					
ANR	1490793	UnaryOperationExpression	"! strncmp ( fi -> name , pfx , pfx_len )"		1490769	0					
ANR	1490794	UnaryOperator	!		1490769	0					
ANR	1490795	CallExpression	"strncmp ( fi -> name , pfx , pfx_len )"		1490769	1					
ANR	1490796	Callee	strncmp		1490769	0					
ANR	1490797	Identifier	strncmp		1490769	0					
ANR	1490798	ArgumentList	fi -> name		1490769	1					
ANR	1490799	Argument	fi -> name		1490769	0					
ANR	1490800	PtrMemberAccess	fi -> name		1490769	0					
ANR	1490801	Identifier	fi		1490769	0					
ANR	1490802	Identifier	name		1490769	1					
ANR	1490803	Argument	pfx		1490769	1					
ANR	1490804	Identifier	pfx		1490769	0					
ANR	1490805	Argument	pfx_len		1490769	2					
ANR	1490806	Identifier	pfx_len		1490769	0					
ANR	1490807	ReturnType	R_API void		1490769	1					
ANR	1490808	Identifier	r_flag_foreach_prefix		1490769	2					
ANR	1490809	ParameterList	"RFlag * f , const char * pfx , int pfx_len , RFlagItemCb cb , void * user"		1490769	3					
ANR	1490810	Parameter	RFlag * f	944:33:23398:23405	1490769	0	True				
ANR	1490811	ParameterType	RFlag *		1490769	0					
ANR	1490812	Identifier	f		1490769	1					
ANR	1490813	Parameter	const char * pfx	944:43:23408:23422	1490769	1	True				
ANR	1490814	ParameterType	const char *		1490769	0					
ANR	1490815	Identifier	pfx		1490769	1					
ANR	1490816	Parameter	int pfx_len	944:60:23425:23435	1490769	2	True				
ANR	1490817	ParameterType	int		1490769	0					
ANR	1490818	Identifier	pfx_len		1490769	1					
ANR	1490819	Parameter	RFlagItemCb cb	944:73:23438:23451	1490769	3	True				
ANR	1490820	ParameterType	RFlagItemCb		1490769	0					
ANR	1490821	Identifier	cb		1490769	1					
ANR	1490822	Parameter	void * user	944:89:23454:23463	1490769	4	True				
ANR	1490823	ParameterType	void *		1490769	0					
ANR	1490824	Identifier	user		1490769	1					
ANR	1490825	CFGEntryNode	ENTRY		1490769		True				
ANR	1490826	CFGExitNode	EXIT		1490769		True				
ANR	1490827	Symbol	strlen		1490769						
ANR	1490828	Symbol	strncmp		1490769						
ANR	1490829	Symbol	pfx		1490769						
ANR	1490830	Symbol	fi		1490769						
ANR	1490831	Symbol	f		1490769						
ANR	1490832	Symbol	pfx_len		1490769						
ANR	1490833	Symbol	fi -> name		1490769						
ANR	1490834	Symbol	* fi		1490769						
ANR	1490835	Symbol	user		1490769						
ANR	1490836	Symbol	cb		1490769						
ANR	1490837	Function	r_flag_foreach_range	949:0:23569:23716							
ANR	1490838	FunctionDef	"r_flag_foreach_range (RFlag * f , ut64 from , ut64 to , RFlagItemCb cb , void * user)"		1490837	0					
ANR	1490839	CompoundStatement		949:90:23659:23716	1490837	0					
ANR	1490840	ExpressionStatement	FOREACH_BODY ( fi -> offset >= from && fi -> offset < to )	950:1:23662:23714	1490837	0	True				
ANR	1490841	CallExpression	FOREACH_BODY ( fi -> offset >= from && fi -> offset < to )		1490837	0					
ANR	1490842	Callee	FOREACH_BODY		1490837	0					
ANR	1490843	Identifier	FOREACH_BODY		1490837	0					
ANR	1490844	ArgumentList	fi -> offset >= from && fi -> offset < to		1490837	1					
ANR	1490845	Argument	fi -> offset >= from && fi -> offset < to		1490837	0					
ANR	1490846	AndExpression	fi -> offset >= from && fi -> offset < to		1490837	0		&&			
ANR	1490847	RelationalExpression	fi -> offset >= from		1490837	0		>=			
ANR	1490848	PtrMemberAccess	fi -> offset		1490837	0					
ANR	1490849	Identifier	fi		1490837	0					
ANR	1490850	Identifier	offset		1490837	1					
ANR	1490851	Identifier	from		1490837	1					
ANR	1490852	RelationalExpression	fi -> offset < to		1490837	1		<			
ANR	1490853	PtrMemberAccess	fi -> offset		1490837	0					
ANR	1490854	Identifier	fi		1490837	0					
ANR	1490855	Identifier	offset		1490837	1					
ANR	1490856	Identifier	to		1490837	1					
ANR	1490857	ReturnType	R_API void		1490837	1					
ANR	1490858	Identifier	r_flag_foreach_range		1490837	2					
ANR	1490859	ParameterList	"RFlag * f , ut64 from , ut64 to , RFlagItemCb cb , void * user"		1490837	3					
ANR	1490860	Parameter	RFlag * f	949:32:23601:23608	1490837	0	True				
ANR	1490861	ParameterType	RFlag *		1490837	0					
ANR	1490862	Identifier	f		1490837	1					
ANR	1490863	Parameter	ut64 from	949:42:23611:23619	1490837	1	True				
ANR	1490864	ParameterType	ut64		1490837	0					
ANR	1490865	Identifier	from		1490837	1					
ANR	1490866	Parameter	ut64 to	949:53:23622:23628	1490837	2	True				
ANR	1490867	ParameterType	ut64		1490837	0					
ANR	1490868	Identifier	to		1490837	1					
ANR	1490869	Parameter	RFlagItemCb cb	949:62:23631:23644	1490837	3	True				
ANR	1490870	ParameterType	RFlagItemCb		1490837	0					
ANR	1490871	Identifier	cb		1490837	1					
ANR	1490872	Parameter	void * user	949:78:23647:23656	1490837	4	True				
ANR	1490873	ParameterType	void *		1490837	0					
ANR	1490874	Identifier	user		1490837	1					
ANR	1490875	CFGEntryNode	ENTRY		1490837		True				
ANR	1490876	CFGExitNode	EXIT		1490837		True				
ANR	1490877	Symbol	fi		1490837						
ANR	1490878	Symbol	f		1490837						
ANR	1490879	Symbol	fi -> offset		1490837						
ANR	1490880	Symbol	from		1490837						
ANR	1490881	Symbol	* fi		1490837						
ANR	1490882	Symbol	to		1490837						
ANR	1490883	Symbol	user		1490837						
ANR	1490884	Symbol	cb		1490837						
ANR	1490885	Function	r_flag_foreach_glob	953:0:23719:23862							
ANR	1490886	FunctionDef	"r_flag_foreach_glob (RFlag * f , const char * glob , RFlagItemCb cb , void * user)"		1490885	0					
ANR	1490887	CompoundStatement		953:87:23806:23862	1490885	0					
ANR	1490888	ExpressionStatement	"FOREACH_BODY ( ! glob || r_str_glob ( fi -> name , glob ) )"	954:1:23809:23860	1490885	0	True				
ANR	1490889	CallExpression	"FOREACH_BODY ( ! glob || r_str_glob ( fi -> name , glob ) )"		1490885	0					
ANR	1490890	Callee	FOREACH_BODY		1490885	0					
ANR	1490891	Identifier	FOREACH_BODY		1490885	0					
ANR	1490892	ArgumentList	"! glob || r_str_glob ( fi -> name , glob )"		1490885	1					
ANR	1490893	Argument	"! glob || r_str_glob ( fi -> name , glob )"		1490885	0					
ANR	1490894	OrExpression	"! glob || r_str_glob ( fi -> name , glob )"		1490885	0		||			
ANR	1490895	UnaryOperationExpression	! glob		1490885	0					
ANR	1490896	UnaryOperator	!		1490885	0					
ANR	1490897	Identifier	glob		1490885	1					
ANR	1490898	CallExpression	"r_str_glob ( fi -> name , glob )"		1490885	1					
ANR	1490899	Callee	r_str_glob		1490885	0					
ANR	1490900	Identifier	r_str_glob		1490885	0					
ANR	1490901	ArgumentList	fi -> name		1490885	1					
ANR	1490902	Argument	fi -> name		1490885	0					
ANR	1490903	PtrMemberAccess	fi -> name		1490885	0					
ANR	1490904	Identifier	fi		1490885	0					
ANR	1490905	Identifier	name		1490885	1					
ANR	1490906	Argument	glob		1490885	1					
ANR	1490907	Identifier	glob		1490885	0					
ANR	1490908	ReturnType	R_API void		1490885	1					
ANR	1490909	Identifier	r_flag_foreach_glob		1490885	2					
ANR	1490910	ParameterList	"RFlag * f , const char * glob , RFlagItemCb cb , void * user"		1490885	3					
ANR	1490911	Parameter	RFlag * f	953:31:23750:23757	1490885	0	True				
ANR	1490912	ParameterType	RFlag *		1490885	0					
ANR	1490913	Identifier	f		1490885	1					
ANR	1490914	Parameter	const char * glob	953:41:23760:23775	1490885	1	True				
ANR	1490915	ParameterType	const char *		1490885	0					
ANR	1490916	Identifier	glob		1490885	1					
ANR	1490917	Parameter	RFlagItemCb cb	953:59:23778:23791	1490885	2	True				
ANR	1490918	ParameterType	RFlagItemCb		1490885	0					
ANR	1490919	Identifier	cb		1490885	1					
ANR	1490920	Parameter	void * user	953:75:23794:23803	1490885	3	True				
ANR	1490921	ParameterType	void *		1490885	0					
ANR	1490922	Identifier	user		1490885	1					
ANR	1490923	CFGEntryNode	ENTRY		1490885		True				
ANR	1490924	CFGExitNode	EXIT		1490885		True				
ANR	1490925	Symbol	fi		1490885						
ANR	1490926	Symbol	r_str_glob		1490885						
ANR	1490927	Symbol	f		1490885						
ANR	1490928	Symbol	glob		1490885						
ANR	1490929	Symbol	fi -> name		1490885						
ANR	1490930	Symbol	* fi		1490885						
ANR	1490931	Symbol	user		1490885						
ANR	1490932	Symbol	cb		1490885						
ANR	1490933	Function	r_flag_foreach_space_glob	957:0:23865:24074							
ANR	1490934	FunctionDef	"r_flag_foreach_space_glob (RFlag * f , const char * glob , const RSpace * space , RFlagItemCb cb , void * user)"		1490933	0					
ANR	1490935	CompoundStatement		957:114:23979:24074	1490933	0					
ANR	1490936	ExpressionStatement	"FOREACH_BODY ( IS_FI_IN_SPACE ( fi , space ) && ( ! glob || r_str_glob ( fi -> name , glob ) ) )"	958:8:23989:24072	1490933	0	True				
ANR	1490937	CallExpression	"FOREACH_BODY ( IS_FI_IN_SPACE ( fi , space ) && ( ! glob || r_str_glob ( fi -> name , glob ) ) )"		1490933	0					
ANR	1490938	Callee	FOREACH_BODY		1490933	0					
ANR	1490939	Identifier	FOREACH_BODY		1490933	0					
ANR	1490940	ArgumentList	"IS_FI_IN_SPACE ( fi , space ) && ( ! glob || r_str_glob ( fi -> name , glob ) )"		1490933	1					
ANR	1490941	Argument	"IS_FI_IN_SPACE ( fi , space ) && ( ! glob || r_str_glob ( fi -> name , glob ) )"		1490933	0					
ANR	1490942	AndExpression	"IS_FI_IN_SPACE ( fi , space ) && ( ! glob || r_str_glob ( fi -> name , glob ) )"		1490933	0		&&			
ANR	1490943	CallExpression	"IS_FI_IN_SPACE ( fi , space )"		1490933	0					
ANR	1490944	Callee	IS_FI_IN_SPACE		1490933	0					
ANR	1490945	Identifier	IS_FI_IN_SPACE		1490933	0					
ANR	1490946	ArgumentList	fi		1490933	1					
ANR	1490947	Argument	fi		1490933	0					
ANR	1490948	Identifier	fi		1490933	0					
ANR	1490949	Argument	space		1490933	1					
ANR	1490950	Identifier	space		1490933	0					
ANR	1490951	OrExpression	"! glob || r_str_glob ( fi -> name , glob )"		1490933	1		||			
ANR	1490952	UnaryOperationExpression	! glob		1490933	0					
ANR	1490953	UnaryOperator	!		1490933	0					
ANR	1490954	Identifier	glob		1490933	1					
ANR	1490955	CallExpression	"r_str_glob ( fi -> name , glob )"		1490933	1					
ANR	1490956	Callee	r_str_glob		1490933	0					
ANR	1490957	Identifier	r_str_glob		1490933	0					
ANR	1490958	ArgumentList	fi -> name		1490933	1					
ANR	1490959	Argument	fi -> name		1490933	0					
ANR	1490960	PtrMemberAccess	fi -> name		1490933	0					
ANR	1490961	Identifier	fi		1490933	0					
ANR	1490962	Identifier	name		1490933	1					
ANR	1490963	Argument	glob		1490933	1					
ANR	1490964	Identifier	glob		1490933	0					
ANR	1490965	ReturnType	R_API void		1490933	1					
ANR	1490966	Identifier	r_flag_foreach_space_glob		1490933	2					
ANR	1490967	ParameterList	"RFlag * f , const char * glob , const RSpace * space , RFlagItemCb cb , void * user"		1490933	3					
ANR	1490968	Parameter	RFlag * f	957:37:23902:23909	1490933	0	True				
ANR	1490969	ParameterType	RFlag *		1490933	0					
ANR	1490970	Identifier	f		1490933	1					
ANR	1490971	Parameter	const char * glob	957:47:23912:23927	1490933	1	True				
ANR	1490972	ParameterType	const char *		1490933	0					
ANR	1490973	Identifier	glob		1490933	1					
ANR	1490974	Parameter	const RSpace * space	957:65:23930:23948	1490933	2	True				
ANR	1490975	ParameterType	const RSpace *		1490933	0					
ANR	1490976	Identifier	space		1490933	1					
ANR	1490977	Parameter	RFlagItemCb cb	957:86:23951:23964	1490933	3	True				
ANR	1490978	ParameterType	RFlagItemCb		1490933	0					
ANR	1490979	Identifier	cb		1490933	1					
ANR	1490980	Parameter	void * user	957:102:23967:23976	1490933	4	True				
ANR	1490981	ParameterType	void *		1490933	0					
ANR	1490982	Identifier	user		1490933	1					
ANR	1490983	CFGEntryNode	ENTRY		1490933		True				
ANR	1490984	CFGExitNode	EXIT		1490933		True				
ANR	1490985	Symbol	fi		1490933						
ANR	1490986	Symbol	r_str_glob		1490933						
ANR	1490987	Symbol	f		1490933						
ANR	1490988	Symbol	IS_FI_IN_SPACE		1490933						
ANR	1490989	Symbol	glob		1490933						
ANR	1490990	Symbol	fi -> name		1490933						
ANR	1490991	Symbol	* fi		1490933						
ANR	1490992	Symbol	user		1490933						
ANR	1490993	Symbol	space		1490933						
ANR	1490994	Symbol	cb		1490933						
ANR	1490995	Function	r_flag_foreach_space	961:0:24077:24214							
ANR	1490996	FunctionDef	"r_flag_foreach_space (RFlag * f , const RSpace * space , RFlagItemCb cb , void * user)"		1490995	0					
ANR	1490997	CompoundStatement		961:91:24168:24214	1490995	0					
ANR	1490998	ExpressionStatement	"FOREACH_BODY ( IS_FI_IN_SPACE ( fi , space ) )"	962:1:24171:24212	1490995	0	True				
ANR	1490999	CallExpression	"FOREACH_BODY ( IS_FI_IN_SPACE ( fi , space ) )"		1490995	0					
ANR	1491000	Callee	FOREACH_BODY		1490995	0					
ANR	1491001	Identifier	FOREACH_BODY		1490995	0					
ANR	1491002	ArgumentList	"IS_FI_IN_SPACE ( fi , space )"		1490995	1					
ANR	1491003	Argument	"IS_FI_IN_SPACE ( fi , space )"		1490995	0					
ANR	1491004	CallExpression	"IS_FI_IN_SPACE ( fi , space )"		1490995	0					
ANR	1491005	Callee	IS_FI_IN_SPACE		1490995	0					
ANR	1491006	Identifier	IS_FI_IN_SPACE		1490995	0					
ANR	1491007	ArgumentList	fi		1490995	1					
ANR	1491008	Argument	fi		1490995	0					
ANR	1491009	Identifier	fi		1490995	0					
ANR	1491010	Argument	space		1490995	1					
ANR	1491011	Identifier	space		1490995	0					
ANR	1491012	ReturnType	R_API void		1490995	1					
ANR	1491013	Identifier	r_flag_foreach_space		1490995	2					
ANR	1491014	ParameterList	"RFlag * f , const RSpace * space , RFlagItemCb cb , void * user"		1490995	3					
ANR	1491015	Parameter	RFlag * f	961:32:24109:24116	1490995	0	True				
ANR	1491016	ParameterType	RFlag *		1490995	0					
ANR	1491017	Identifier	f		1490995	1					
ANR	1491018	Parameter	const RSpace * space	961:42:24119:24137	1490995	1	True				
ANR	1491019	ParameterType	const RSpace *		1490995	0					
ANR	1491020	Identifier	space		1490995	1					
ANR	1491021	Parameter	RFlagItemCb cb	961:63:24140:24153	1490995	2	True				
ANR	1491022	ParameterType	RFlagItemCb		1490995	0					
ANR	1491023	Identifier	cb		1490995	1					
ANR	1491024	Parameter	void * user	961:79:24156:24165	1490995	3	True				
ANR	1491025	ParameterType	void *		1490995	0					
ANR	1491026	Identifier	user		1490995	1					
ANR	1491027	CFGEntryNode	ENTRY		1490995		True				
ANR	1491028	CFGExitNode	EXIT		1490995		True				
ANR	1491029	Symbol	fi		1490995						
ANR	1491030	Symbol	f		1490995						
ANR	1491031	Symbol	IS_FI_IN_SPACE		1490995						
ANR	1491032	Symbol	user		1490995						
ANR	1491033	Symbol	space		1490995						
ANR	1491034	Symbol	cb		1490995						
