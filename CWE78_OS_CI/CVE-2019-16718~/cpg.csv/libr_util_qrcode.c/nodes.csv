command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5186436	File	data/converged/CVE-2019-16718~_radare2/libr_util_qrcode.c								
ANR	5186437	DeclStmt									
ANR	5186438	Decl							int	"int ( const char * text , bool * isNumeric , bool * isAlphanumeric , int * textBits )"	getTextProperties
ANR	5186439	DeclStmt									
ANR	5186440	Decl							int	"int ( int minVersion , int maxVersion , enum qrcodegen_Ecc ecl , int dataLen , int dataBitLen , int ver1To9LenBits , int ver10To26LenBits , int ver27To40LenBits )"	fitVersionToData
ANR	5186441	DeclStmt									
ANR	5186442	Decl							void	"void ( ut8 dataAndQrcode [ ] , int bitLen , ut8 tempBuffer [ ] , int version , enum qrcodegen_Ecc ecl , enum qrcodegen_Mask mask , bool boostEcl )"	encodeQrCodeTail
ANR	5186443	DeclStmt									
ANR	5186444	Decl							void	"void ( unsigned int val , int numBits , ut8 buffer [ ] , int * bitLen )"	appendBitsToBuffer
ANR	5186445	DeclStmt									
ANR	5186446	Decl							void	"void ( ut8 data [ ] , int version , enum qrcodegen_Ecc ecl , ut8 result [ ] )"	appendErrorCorrection
ANR	5186447	DeclStmt									
ANR	5186448	Decl							int	"int ( int version , enum qrcodegen_Ecc ecl )"	getNumDataCodewords
ANR	5186449	DeclStmt									
ANR	5186450	Decl							int	int ( int version )	getNumRawDataModules
ANR	5186451	DeclStmt									
ANR	5186452	Decl							void	"void ( int degree , ut8 result [ ] )"	calcReedSolomonGenerator
ANR	5186453	DeclStmt									
ANR	5186454	Decl							void	"void ( const ut8 data [ ] , int dataLen , const ut8 generator [ ] , int degree , ut8 result [ ] )"	calcReedSolomonRemainder
ANR	5186455	DeclStmt									
ANR	5186456	Decl							ut8	"ut8 ( ut8 x , ut8 y )"	finiteFieldMultiply
ANR	5186457	DeclStmt									
ANR	5186458	Decl							void	"void ( int version , ut8 qrcode [ ] )"	initializeFunctionModules
ANR	5186459	DeclStmt									
ANR	5186460	Decl							void	"void ( ut8 qrcode [ ] , int version )"	drawWhiteFunctionModules
ANR	5186461	DeclStmt									
ANR	5186462	Decl							void	"void ( enum qrcodegen_Ecc ecl , enum qrcodegen_Mask mask , ut8 qrcode [ ] )"	drawFormatBits
ANR	5186463	DeclStmt									
ANR	5186464	Decl							int	"int ( int version , ut8 result [ 7 ] )"	getAlignmentPatternPositions
ANR	5186465	DeclStmt									
ANR	5186466	Decl							void	"void ( int left , int top , int width , int height , ut8 qrcode [ ] )"	fillRectangle
ANR	5186467	DeclStmt									
ANR	5186468	Decl							bool	"bool ( const ut8 data [ ] , int dataLen , ut8 qrcode [ ] )"	drawCodewords
ANR	5186469	DeclStmt									
ANR	5186470	Decl							bool	"bool ( const ut8 functionModules [ ] , ut8 qrcode [ ] , enum qrcodegen_Mask mask )"	applyMask
ANR	5186471	DeclStmt									
ANR	5186472	Decl							long	long ( const ut8 qrcode [ ] )	getPenaltyScore
ANR	5186473	DeclStmt									
ANR	5186474	Decl							bool	"bool ( const ut8 qrcode [ ] , int x , int y )"	getModule
ANR	5186475	DeclStmt									
ANR	5186476	Decl							bool	"bool ( ut8 qrcode [ ] , int x , int y , bool isBlack )"	setModule
ANR	5186477	DeclStmt									
ANR	5186478	Decl							void	"void ( ut8 qrcode [ ] , int x , int y , bool isBlack )"	setModuleBounded
ANR	5186479	DeclStmt									
ANR	5186480	Decl							int	int ( const uint8_t qrcode [ ] )	qrcodegen_getSize
ANR	5186481	DeclStmt									
ANR	5186482	Decl							bool	"bool ( const uint8_t qrcode [ ] , int x , int y )"	qrcodegen_getModule
ANR	5186483	DeclStmt									
ANR	5186484	Decl							const char	const char *	ALPHANUMERIC_CHARSET
ANR	5186485	DeclStmt									
ANR	5186486	Decl							const int	const int	PENALTY_N1
ANR	5186487	DeclStmt									
ANR	5186488	Decl							const int	const int	PENALTY_N2
ANR	5186489	DeclStmt									
ANR	5186490	Decl							const int	const int	PENALTY_N3
ANR	5186491	DeclStmt									
ANR	5186492	Decl							const int	const int	PENALTY_N4
ANR	5186493	Function	r_qrcode_text	132:0:7621:10520							
ANR	5186494	FunctionDef	"r_qrcode_text (const char * text , ut8 tempBuffer [ ] , ut8 qrcode [ ] , enum qrcodegen_Ecc ecl , int minVersion , int maxVersion , enum qrcodegen_Mask mask , bool boostEcl)"		5186493	0					
ANR	5186495	CompoundStatement		132:172:7793:10520	5186493	0					
ANR	5186496	IfStatement	if ( ! text || ! tempBuffer || ! qrcode )		5186493	0					
ANR	5186497	Condition	! text || ! tempBuffer || ! qrcode	133:5:7800:7830	5186493	0	True				
ANR	5186498	OrExpression	! text || ! tempBuffer || ! qrcode		5186493	0		||			
ANR	5186499	UnaryOperationExpression	! text		5186493	0					
ANR	5186500	UnaryOperator	!		5186493	0					
ANR	5186501	Identifier	text		5186493	1					
ANR	5186502	OrExpression	! tempBuffer || ! qrcode		5186493	1		||			
ANR	5186503	UnaryOperationExpression	! tempBuffer		5186493	0					
ANR	5186504	UnaryOperator	!		5186493	0					
ANR	5186505	Identifier	tempBuffer		5186493	1					
ANR	5186506	UnaryOperationExpression	! qrcode		5186493	1					
ANR	5186507	UnaryOperator	!		5186493	0					
ANR	5186508	Identifier	qrcode		5186493	1					
ANR	5186509	CompoundStatement		2:38:39:39	5186493	1					
ANR	5186510	ReturnStatement	return false ;	134:2:7837:7849	5186493	0	True				
ANR	5186511	Identifier	false		5186493	0					
ANR	5186512	IfStatement	if ( minVersion < qrcodegen_VERSION_MIN || minVersion > qrcodegen_VERSION_MAX )		5186493	1					
ANR	5186513	Condition	minVersion < qrcodegen_VERSION_MIN || minVersion > qrcodegen_VERSION_MAX	136:5:7859:7930	5186493	0	True				
ANR	5186514	OrExpression	minVersion < qrcodegen_VERSION_MIN || minVersion > qrcodegen_VERSION_MAX		5186493	0		||			
ANR	5186515	RelationalExpression	minVersion < qrcodegen_VERSION_MIN		5186493	0		<			
ANR	5186516	Identifier	minVersion		5186493	0					
ANR	5186517	Identifier	qrcodegen_VERSION_MIN		5186493	1					
ANR	5186518	RelationalExpression	minVersion > qrcodegen_VERSION_MAX		5186493	1		>			
ANR	5186519	Identifier	minVersion		5186493	0					
ANR	5186520	Identifier	qrcodegen_VERSION_MAX		5186493	1					
ANR	5186521	CompoundStatement		5:79:139:139	5186493	1					
ANR	5186522	ReturnStatement	return false ;	137:2:7937:7949	5186493	0	True				
ANR	5186523	Identifier	false		5186493	0					
ANR	5186524	IfStatement	if ( maxVersion < qrcodegen_VERSION_MIN || maxVersion > qrcodegen_VERSION_MAX )		5186493	2					
ANR	5186525	Condition	maxVersion < qrcodegen_VERSION_MIN || maxVersion > qrcodegen_VERSION_MAX	139:5:7959:8030	5186493	0	True				
ANR	5186526	OrExpression	maxVersion < qrcodegen_VERSION_MIN || maxVersion > qrcodegen_VERSION_MAX		5186493	0		||			
ANR	5186527	RelationalExpression	maxVersion < qrcodegen_VERSION_MIN		5186493	0		<			
ANR	5186528	Identifier	maxVersion		5186493	0					
ANR	5186529	Identifier	qrcodegen_VERSION_MIN		5186493	1					
ANR	5186530	RelationalExpression	maxVersion > qrcodegen_VERSION_MAX		5186493	1		>			
ANR	5186531	Identifier	maxVersion		5186493	0					
ANR	5186532	Identifier	qrcodegen_VERSION_MAX		5186493	1					
ANR	5186533	CompoundStatement		8:79:239:239	5186493	1					
ANR	5186534	ReturnStatement	return false ;	140:2:8037:8049	5186493	0	True				
ANR	5186535	Identifier	false		5186493	0					
ANR	5186536	IfStatement	if ( ecl < qrcodegen_Ecc_LOW || ecl > qrcodegen_Ecc_HIGH )		5186493	3					
ANR	5186537	Condition	ecl < qrcodegen_Ecc_LOW || ecl > qrcodegen_Ecc_HIGH	142:5:8059:8109	5186493	0	True				
ANR	5186538	OrExpression	ecl < qrcodegen_Ecc_LOW || ecl > qrcodegen_Ecc_HIGH		5186493	0		||			
ANR	5186539	RelationalExpression	ecl < qrcodegen_Ecc_LOW		5186493	0		<			
ANR	5186540	Identifier	ecl		5186493	0					
ANR	5186541	Identifier	qrcodegen_Ecc_LOW		5186493	1					
ANR	5186542	RelationalExpression	ecl > qrcodegen_Ecc_HIGH		5186493	1		>			
ANR	5186543	Identifier	ecl		5186493	0					
ANR	5186544	Identifier	qrcodegen_Ecc_HIGH		5186493	1					
ANR	5186545	CompoundStatement		11:58:318:318	5186493	1					
ANR	5186546	ReturnStatement	return false ;	143:2:8116:8128	5186493	0	True				
ANR	5186547	Identifier	false		5186493	0					
ANR	5186548	IfStatement	if ( mask < - 1 || mask > 7 )		5186493	4					
ANR	5186549	Condition	mask < - 1 || mask > 7	145:5:8138:8158	5186493	0	True				
ANR	5186550	OrExpression	mask < - 1 || mask > 7		5186493	0		||			
ANR	5186551	RelationalExpression	mask < - 1		5186493	0		<			
ANR	5186552	Identifier	mask		5186493	0					
ANR	5186553	UnaryOperationExpression	- 1		5186493	1					
ANR	5186554	UnaryOperator	-		5186493	0					
ANR	5186555	PrimaryExpression	1		5186493	1					
ANR	5186556	RelationalExpression	mask > 7		5186493	1		>			
ANR	5186557	Identifier	mask		5186493	0					
ANR	5186558	PrimaryExpression	7		5186493	1					
ANR	5186559	CompoundStatement		14:28:367:367	5186493	1					
ANR	5186560	ReturnStatement	return false ;	146:2:8165:8177	5186493	0	True				
ANR	5186561	Identifier	false		5186493	0					
ANR	5186562	ExpressionStatement	qrcode [ 0 ] = 0	150:1:8225:8238	5186493	5	True				
ANR	5186563	AssignmentExpression	qrcode [ 0 ] = 0		5186493	0		=			
ANR	5186564	ArrayIndexing	qrcode [ 0 ]		5186493	0					
ANR	5186565	Identifier	qrcode		5186493	0					
ANR	5186566	PrimaryExpression	0		5186493	1					
ANR	5186567	PrimaryExpression	0		5186493	1					
ANR	5186568	IdentifierDeclStatement	"bool isNumeric , isAlphanumeric ;"	153:1:8266:8296	5186493	6	True				
ANR	5186569	IdentifierDecl	isNumeric		5186493	0					
ANR	5186570	IdentifierDeclType	bool		5186493	0					
ANR	5186571	Identifier	isNumeric		5186493	1					
ANR	5186572	IdentifierDecl	isAlphanumeric		5186493	1					
ANR	5186573	IdentifierDeclType	bool		5186493	0					
ANR	5186574	Identifier	isAlphanumeric		5186493	1					
ANR	5186575	IdentifierDeclStatement	int textBits ;	154:1:8299:8311	5186493	7	True				
ANR	5186576	IdentifierDecl	textBits		5186493	0					
ANR	5186577	IdentifierDeclType	int		5186493	0					
ANR	5186578	Identifier	textBits		5186493	1					
ANR	5186579	IdentifierDeclStatement	"int textLen = getTextProperties ( text , & isNumeric , & isAlphanumeric , & textBits ) ;"	155:1:8314:8392	5186493	8	True				
ANR	5186580	IdentifierDecl	"textLen = getTextProperties ( text , & isNumeric , & isAlphanumeric , & textBits )"		5186493	0					
ANR	5186581	IdentifierDeclType	int		5186493	0					
ANR	5186582	Identifier	textLen		5186493	1					
ANR	5186583	AssignmentExpression	"textLen = getTextProperties ( text , & isNumeric , & isAlphanumeric , & textBits )"		5186493	2		=			
ANR	5186584	Identifier	textLen		5186493	0					
ANR	5186585	CallExpression	"getTextProperties ( text , & isNumeric , & isAlphanumeric , & textBits )"		5186493	1					
ANR	5186586	Callee	getTextProperties		5186493	0					
ANR	5186587	Identifier	getTextProperties		5186493	0					
ANR	5186588	ArgumentList	text		5186493	1					
ANR	5186589	Argument	text		5186493	0					
ANR	5186590	Identifier	text		5186493	0					
ANR	5186591	Argument	& isNumeric		5186493	1					
ANR	5186592	UnaryOperationExpression	& isNumeric		5186493	0					
ANR	5186593	UnaryOperator	&		5186493	0					
ANR	5186594	Identifier	isNumeric		5186493	1					
ANR	5186595	Argument	& isAlphanumeric		5186493	2					
ANR	5186596	UnaryOperationExpression	& isAlphanumeric		5186493	0					
ANR	5186597	UnaryOperator	&		5186493	0					
ANR	5186598	Identifier	isAlphanumeric		5186493	1					
ANR	5186599	Argument	& textBits		5186493	3					
ANR	5186600	UnaryOperationExpression	& textBits		5186493	0					
ANR	5186601	UnaryOperator	&		5186493	0					
ANR	5186602	Identifier	textBits		5186493	1					
ANR	5186603	IfStatement	if ( textLen < 0 )		5186493	9					
ANR	5186604	Condition	textLen < 0	156:5:8399:8409	5186493	0	True				
ANR	5186605	RelationalExpression	textLen < 0		5186493	0		<			
ANR	5186606	Identifier	textLen		5186493	0					
ANR	5186607	PrimaryExpression	0		5186493	1					
ANR	5186608	CompoundStatement		25:18:618:618	5186493	1					
ANR	5186609	ReturnStatement	return false ;	157:2:8416:8428	5186493	0	True				
ANR	5186610	Identifier	false		5186493	0					
ANR	5186611	IfStatement	if ( ! isAlphanumeric )		5186493	10					
ANR	5186612	Condition	! isAlphanumeric	160:5:8439:8453	5186493	0	True				
ANR	5186613	UnaryOperationExpression	! isAlphanumeric		5186493	0					
ANR	5186614	UnaryOperator	!		5186493	0					
ANR	5186615	Identifier	isAlphanumeric		5186493	1					
ANR	5186616	CompoundStatement		33:2:783:788	5186493	1					
ANR	5186617	IfStatement	if ( textLen > qrcodegen_BUFFER_LEN_FOR_VERSION ( maxVersion ) )		5186493	0					
ANR	5186618	Condition	textLen > qrcodegen_BUFFER_LEN_FOR_VERSION ( maxVersion )	161:6:8495:8549	5186493	0	True				
ANR	5186619	RelationalExpression	textLen > qrcodegen_BUFFER_LEN_FOR_VERSION ( maxVersion )		5186493	0		>			
ANR	5186620	Identifier	textLen		5186493	0					
ANR	5186621	CallExpression	qrcodegen_BUFFER_LEN_FOR_VERSION ( maxVersion )		5186493	1					
ANR	5186622	Callee	qrcodegen_BUFFER_LEN_FOR_VERSION		5186493	0					
ANR	5186623	Identifier	qrcodegen_BUFFER_LEN_FOR_VERSION		5186493	0					
ANR	5186624	ArgumentList	maxVersion		5186493	1					
ANR	5186625	Argument	maxVersion		5186493	0					
ANR	5186626	Identifier	maxVersion		5186493	0					
ANR	5186627	CompoundStatement		30:63:758:758	5186493	1					
ANR	5186628	ReturnStatement	return false ;	162:3:8557:8569	5186493	0	True				
ANR	5186629	Identifier	false		5186493	0					
ANR	5186630	IdentifierDeclStatement	int i ;	164:2:8577:8582	5186493	1	True				
ANR	5186631	IdentifierDecl	i		5186493	0					
ANR	5186632	IdentifierDeclType	int		5186493	0					
ANR	5186633	Identifier	i		5186493	1					
ANR	5186634	ForStatement	for ( i = 0 ; i < textLen ; i ++ )		5186493	2					
ANR	5186635	ForInit	i = 0 ;	165:7:8591:8596	5186493	0	True				
ANR	5186636	AssignmentExpression	i = 0		5186493	0		=			
ANR	5186637	Identifier	i		5186493	0					
ANR	5186638	PrimaryExpression	0		5186493	1					
ANR	5186639	Condition	i < textLen	165:14:8598:8608	5186493	1	True				
ANR	5186640	RelationalExpression	i < textLen		5186493	0		<			
ANR	5186641	Identifier	i		5186493	0					
ANR	5186642	Identifier	textLen		5186493	1					
ANR	5186643	PostIncDecOperationExpression	i ++	165:27:8611:8613	5186493	2	True				
ANR	5186644	Identifier	i		5186493	0					
ANR	5186645	IncDec	++		5186493	1					
ANR	5186646	CompoundStatement		34:32:822:822	5186493	3					
ANR	5186647	ExpressionStatement	tempBuffer [ i ] = ( ut8 ) text [ i ]	166:3:8621:8650	5186493	0	True				
ANR	5186648	AssignmentExpression	tempBuffer [ i ] = ( ut8 ) text [ i ]		5186493	0		=			
ANR	5186649	ArrayIndexing	tempBuffer [ i ]		5186493	0					
ANR	5186650	Identifier	tempBuffer		5186493	0					
ANR	5186651	Identifier	i		5186493	1					
ANR	5186652	CastExpression	( ut8 ) text [ i ]		5186493	1					
ANR	5186653	CastTarget	ut8		5186493	0					
ANR	5186654	ArrayIndexing	text [ i ]		5186493	1					
ANR	5186655	Identifier	text		5186493	0					
ANR	5186656	Identifier	i		5186493	1					
ANR	5186657	ReturnStatement	"return r_qrcode_bin ( tempBuffer , ( size_t ) textLen , qrcode , ecl , minVersion , maxVersion , mask , boostEcl ) ;"	168:2:8658:8761	5186493	3	True				
ANR	5186658	CallExpression	"r_qrcode_bin ( tempBuffer , ( size_t ) textLen , qrcode , ecl , minVersion , maxVersion , mask , boostEcl )"		5186493	0					
ANR	5186659	Callee	r_qrcode_bin		5186493	0					
ANR	5186660	Identifier	r_qrcode_bin		5186493	0					
ANR	5186661	ArgumentList	tempBuffer		5186493	1					
ANR	5186662	Argument	tempBuffer		5186493	0					
ANR	5186663	Identifier	tempBuffer		5186493	0					
ANR	5186664	Argument	( size_t ) textLen		5186493	1					
ANR	5186665	CastExpression	( size_t ) textLen		5186493	0					
ANR	5186666	CastTarget	size_t		5186493	0					
ANR	5186667	Identifier	textLen		5186493	1					
ANR	5186668	Argument	qrcode		5186493	2					
ANR	5186669	Identifier	qrcode		5186493	0					
ANR	5186670	Argument	ecl		5186493	3					
ANR	5186671	Identifier	ecl		5186493	0					
ANR	5186672	Argument	minVersion		5186493	4					
ANR	5186673	Identifier	minVersion		5186493	0					
ANR	5186674	Argument	maxVersion		5186493	5					
ANR	5186675	Identifier	maxVersion		5186493	0					
ANR	5186676	Argument	mask		5186493	6					
ANR	5186677	Identifier	mask		5186493	0					
ANR	5186678	Argument	boostEcl		5186493	7					
ANR	5186679	Identifier	boostEcl		5186493	0					
ANR	5186680	IdentifierDeclStatement	"int version = fitVersionToData ( minVersion , maxVersion , ecl , textLen , ( int ) textBits , ( isNumeric ? 10 : 9 ) , ( isNumeric ? 12 : 11 ) , ( isNumeric ? 14 : 13 ) ) ;"	171:1:8768:8917	5186493	11	True				
ANR	5186681	IdentifierDecl	"version = fitVersionToData ( minVersion , maxVersion , ecl , textLen , ( int ) textBits , ( isNumeric ? 10 : 9 ) , ( isNumeric ? 12 : 11 ) , ( isNumeric ? 14 : 13 ) )"		5186493	0					
ANR	5186682	IdentifierDeclType	int		5186493	0					
ANR	5186683	Identifier	version		5186493	1					
ANR	5186684	AssignmentExpression	"version = fitVersionToData ( minVersion , maxVersion , ecl , textLen , ( int ) textBits , ( isNumeric ? 10 : 9 ) , ( isNumeric ? 12 : 11 ) , ( isNumeric ? 14 : 13 ) )"		5186493	2		=			
ANR	5186685	Identifier	version		5186493	0					
ANR	5186686	CallExpression	"fitVersionToData ( minVersion , maxVersion , ecl , textLen , ( int ) textBits , ( isNumeric ? 10 : 9 ) , ( isNumeric ? 12 : 11 ) , ( isNumeric ? 14 : 13 ) )"		5186493	1					
ANR	5186687	Callee	fitVersionToData		5186493	0					
ANR	5186688	Identifier	fitVersionToData		5186493	0					
ANR	5186689	ArgumentList	minVersion		5186493	1					
ANR	5186690	Argument	minVersion		5186493	0					
ANR	5186691	Identifier	minVersion		5186493	0					
ANR	5186692	Argument	maxVersion		5186493	1					
ANR	5186693	Identifier	maxVersion		5186493	0					
ANR	5186694	Argument	ecl		5186493	2					
ANR	5186695	Identifier	ecl		5186493	0					
ANR	5186696	Argument	textLen		5186493	3					
ANR	5186697	Identifier	textLen		5186493	0					
ANR	5186698	Argument	( int ) textBits		5186493	4					
ANR	5186699	CastExpression	( int ) textBits		5186493	0					
ANR	5186700	CastTarget	int		5186493	0					
ANR	5186701	Identifier	textBits		5186493	1					
ANR	5186702	Argument	isNumeric ? 10 : 9		5186493	5					
ANR	5186703	ConditionalExpression	isNumeric ? 10 : 9		5186493	0					
ANR	5186704	Condition	isNumeric		5186493	0					
ANR	5186705	Identifier	isNumeric		5186493	0					
ANR	5186706	PrimaryExpression	10		5186493	1					
ANR	5186707	PrimaryExpression	9		5186493	2					
ANR	5186708	Argument	isNumeric ? 12 : 11		5186493	6					
ANR	5186709	ConditionalExpression	isNumeric ? 12 : 11		5186493	0					
ANR	5186710	Condition	isNumeric		5186493	0					
ANR	5186711	Identifier	isNumeric		5186493	0					
ANR	5186712	PrimaryExpression	12		5186493	1					
ANR	5186713	PrimaryExpression	11		5186493	2					
ANR	5186714	Argument	isNumeric ? 14 : 13		5186493	7					
ANR	5186715	ConditionalExpression	isNumeric ? 14 : 13		5186493	0					
ANR	5186716	Condition	isNumeric		5186493	0					
ANR	5186717	Identifier	isNumeric		5186493	0					
ANR	5186718	PrimaryExpression	14		5186493	1					
ANR	5186719	PrimaryExpression	13		5186493	2					
ANR	5186720	IfStatement	if ( version == 0 )		5186493	12					
ANR	5186721	Condition	version == 0	173:5:8924:8935	5186493	0	True				
ANR	5186722	EqualityExpression	version == 0		5186493	0		==			
ANR	5186723	Identifier	version		5186493	0					
ANR	5186724	PrimaryExpression	0		5186493	1					
ANR	5186725	CompoundStatement		42:19:1144:1144	5186493	1					
ANR	5186726	ReturnStatement	return false ;	174:2:8942:8954	5186493	0	True				
ANR	5186727	Identifier	false		5186493	0					
ANR	5186728	ExpressionStatement	"memset ( qrcode , 0 , qrcodegen_BUFFER_LEN_FOR_VERSION ( version ) * sizeof ( qrcode [ 0 ] ) )"	176:1:8960:9042	5186493	13	True				
ANR	5186729	CallExpression	"memset ( qrcode , 0 , qrcodegen_BUFFER_LEN_FOR_VERSION ( version ) * sizeof ( qrcode [ 0 ] ) )"		5186493	0					
ANR	5186730	Callee	memset		5186493	0					
ANR	5186731	Identifier	memset		5186493	0					
ANR	5186732	ArgumentList	qrcode		5186493	1					
ANR	5186733	Argument	qrcode		5186493	0					
ANR	5186734	Identifier	qrcode		5186493	0					
ANR	5186735	Argument	0		5186493	1					
ANR	5186736	PrimaryExpression	0		5186493	0					
ANR	5186737	Argument	qrcodegen_BUFFER_LEN_FOR_VERSION ( version ) * sizeof ( qrcode [ 0 ] )		5186493	2					
ANR	5186738	MultiplicativeExpression	qrcodegen_BUFFER_LEN_FOR_VERSION ( version ) * sizeof ( qrcode [ 0 ] )		5186493	0		*			
ANR	5186739	CallExpression	qrcodegen_BUFFER_LEN_FOR_VERSION ( version )		5186493	0					
ANR	5186740	Callee	qrcodegen_BUFFER_LEN_FOR_VERSION		5186493	0					
ANR	5186741	Identifier	qrcodegen_BUFFER_LEN_FOR_VERSION		5186493	0					
ANR	5186742	ArgumentList	version		5186493	1					
ANR	5186743	Argument	version		5186493	0					
ANR	5186744	Identifier	version		5186493	0					
ANR	5186745	SizeofExpression	sizeof ( qrcode [ 0 ] )		5186493	1					
ANR	5186746	Sizeof	sizeof		5186493	0					
ANR	5186747	ArrayIndexing	qrcode [ 0 ]		5186493	1					
ANR	5186748	Identifier	qrcode		5186493	0					
ANR	5186749	PrimaryExpression	0		5186493	1					
ANR	5186750	IdentifierDeclStatement	int bitLen = 0 ;	177:1:9045:9059	5186493	14	True				
ANR	5186751	IdentifierDecl	bitLen = 0		5186493	0					
ANR	5186752	IdentifierDeclType	int		5186493	0					
ANR	5186753	Identifier	bitLen		5186493	1					
ANR	5186754	AssignmentExpression	bitLen = 0		5186493	2		=			
ANR	5186755	Identifier	bitLen		5186493	0					
ANR	5186756	PrimaryExpression	0		5186493	1					
ANR	5186757	IfStatement	if ( isNumeric && textLen > 0 )		5186493	15					
ANR	5186758	Condition	isNumeric && textLen > 0	180:5:9107:9130	5186493	0	True				
ANR	5186759	AndExpression	isNumeric && textLen > 0		5186493	0		&&			
ANR	5186760	Identifier	isNumeric		5186493	0					
ANR	5186761	RelationalExpression	textLen > 0		5186493	1		>			
ANR	5186762	Identifier	textLen		5186493	0					
ANR	5186763	PrimaryExpression	0		5186493	1					
ANR	5186764	CompoundStatement		55:2:1570:1583	5186493	1					
ANR	5186765	ExpressionStatement	"appendBitsToBuffer ( 1 , 4 , qrcode , & bitLen )"	181:2:9137:9179	5186493	0	True				
ANR	5186766	CallExpression	"appendBitsToBuffer ( 1 , 4 , qrcode , & bitLen )"		5186493	0					
ANR	5186767	Callee	appendBitsToBuffer		5186493	0					
ANR	5186768	Identifier	appendBitsToBuffer		5186493	0					
ANR	5186769	ArgumentList	1		5186493	1					
ANR	5186770	Argument	1		5186493	0					
ANR	5186771	PrimaryExpression	1		5186493	0					
ANR	5186772	Argument	4		5186493	1					
ANR	5186773	PrimaryExpression	4		5186493	0					
ANR	5186774	Argument	qrcode		5186493	2					
ANR	5186775	Identifier	qrcode		5186493	0					
ANR	5186776	Argument	& bitLen		5186493	3					
ANR	5186777	UnaryOperationExpression	& bitLen		5186493	0					
ANR	5186778	UnaryOperator	&		5186493	0					
ANR	5186779	Identifier	bitLen		5186493	1					
ANR	5186780	IdentifierDeclStatement	int lengthBits = version <= 9 ? 10 : ( version <= 26 ? 12 : 14 ) ;	182:2:9183:9241	5186493	1	True				
ANR	5186781	IdentifierDecl	lengthBits = version <= 9 ? 10 : ( version <= 26 ? 12 : 14 )		5186493	0					
ANR	5186782	IdentifierDeclType	int		5186493	0					
ANR	5186783	Identifier	lengthBits		5186493	1					
ANR	5186784	AssignmentExpression	lengthBits = version <= 9 ? 10 : ( version <= 26 ? 12 : 14 )		5186493	2		=			
ANR	5186785	Identifier	lengthBits		5186493	0					
ANR	5186786	ConditionalExpression	version <= 9 ? 10 : ( version <= 26 ? 12 : 14 )		5186493	1					
ANR	5186787	Condition	version <= 9		5186493	0					
ANR	5186788	RelationalExpression	version <= 9		5186493	0		<=			
ANR	5186789	Identifier	version		5186493	0					
ANR	5186790	PrimaryExpression	9		5186493	1					
ANR	5186791	PrimaryExpression	10		5186493	1					
ANR	5186792	ConditionalExpression	version <= 26 ? 12 : 14		5186493	2					
ANR	5186793	Condition	version <= 26		5186493	0					
ANR	5186794	RelationalExpression	version <= 26		5186493	0		<=			
ANR	5186795	Identifier	version		5186493	0					
ANR	5186796	PrimaryExpression	26		5186493	1					
ANR	5186797	PrimaryExpression	12		5186493	1					
ANR	5186798	PrimaryExpression	14		5186493	2					
ANR	5186799	ExpressionStatement	"appendBitsToBuffer ( ( unsigned int ) textLen , lengthBits , qrcode , & bitLen )"	183:2:9245:9317	5186493	2	True				
ANR	5186800	CallExpression	"appendBitsToBuffer ( ( unsigned int ) textLen , lengthBits , qrcode , & bitLen )"		5186493	0					
ANR	5186801	Callee	appendBitsToBuffer		5186493	0					
ANR	5186802	Identifier	appendBitsToBuffer		5186493	0					
ANR	5186803	ArgumentList	( unsigned int ) textLen		5186493	1					
ANR	5186804	Argument	( unsigned int ) textLen		5186493	0					
ANR	5186805	CastExpression	( unsigned int ) textLen		5186493	0					
ANR	5186806	CastTarget	unsigned int		5186493	0					
ANR	5186807	Identifier	textLen		5186493	1					
ANR	5186808	Argument	lengthBits		5186493	1					
ANR	5186809	Identifier	lengthBits		5186493	0					
ANR	5186810	Argument	qrcode		5186493	2					
ANR	5186811	Identifier	qrcode		5186493	0					
ANR	5186812	Argument	& bitLen		5186493	3					
ANR	5186813	UnaryOperationExpression	& bitLen		5186493	0					
ANR	5186814	UnaryOperator	&		5186493	0					
ANR	5186815	Identifier	bitLen		5186493	1					
ANR	5186816	IdentifierDeclStatement	int accumData = 0 ;	184:2:9321:9338	5186493	3	True				
ANR	5186817	IdentifierDecl	accumData = 0		5186493	0					
ANR	5186818	IdentifierDeclType	int		5186493	0					
ANR	5186819	Identifier	accumData		5186493	1					
ANR	5186820	AssignmentExpression	accumData = 0		5186493	2		=			
ANR	5186821	Identifier	accumData		5186493	0					
ANR	5186822	PrimaryExpression	0		5186493	1					
ANR	5186823	IdentifierDeclStatement	int accumCount = 0 ;	185:2:9342:9360	5186493	4	True				
ANR	5186824	IdentifierDecl	accumCount = 0		5186493	0					
ANR	5186825	IdentifierDeclType	int		5186493	0					
ANR	5186826	Identifier	accumCount		5186493	1					
ANR	5186827	AssignmentExpression	accumCount = 0		5186493	2		=			
ANR	5186828	Identifier	accumCount		5186493	0					
ANR	5186829	PrimaryExpression	0		5186493	1					
ANR	5186830	IdentifierDeclStatement	const char * p ;	186:2:9364:9377	5186493	5	True				
ANR	5186831	IdentifierDecl	* p		5186493	0					
ANR	5186832	IdentifierDeclType	const char *		5186493	0					
ANR	5186833	Identifier	p		5186493	1					
ANR	5186834	ForStatement	for ( p = text ; * p != '\\0' ; p ++ )		5186493	6					
ANR	5186835	ForInit	p = text ;	187:7:9386:9394	5186493	0	True				
ANR	5186836	AssignmentExpression	p = text		5186493	0		=			
ANR	5186837	Identifier	p		5186493	0					
ANR	5186838	Identifier	text		5186493	1					
ANR	5186839	Condition	* p != '\\0'	187:17:9396:9405	5186493	1	True				
ANR	5186840	EqualityExpression	* p != '\\0'		5186493	0		!=			
ANR	5186841	UnaryOperationExpression	* p		5186493	0					
ANR	5186842	UnaryOperator	*		5186493	0					
ANR	5186843	Identifier	p		5186493	1					
ANR	5186844	PrimaryExpression	'\\0'		5186493	1					
ANR	5186845	PostIncDecOperationExpression	p ++	187:29:9408:9410	5186493	2	True				
ANR	5186846	Identifier	p		5186493	0					
ANR	5186847	IncDec	++		5186493	1					
ANR	5186848	CompoundStatement		56:34:1619:1619	5186493	3					
ANR	5186849	ExpressionStatement	accumData = accumData * 10 + ( * p - '0' )	188:3:9418:9457	5186493	0	True				
ANR	5186850	AssignmentExpression	accumData = accumData * 10 + ( * p - '0' )		5186493	0		=			
ANR	5186851	Identifier	accumData		5186493	0					
ANR	5186852	AdditiveExpression	accumData * 10 + ( * p - '0' )		5186493	1		+			
ANR	5186853	MultiplicativeExpression	accumData * 10		5186493	0		*			
ANR	5186854	Identifier	accumData		5186493	0					
ANR	5186855	PrimaryExpression	10		5186493	1					
ANR	5186856	AdditiveExpression	* p - '0'		5186493	1		-			
ANR	5186857	UnaryOperationExpression	* p		5186493	0					
ANR	5186858	UnaryOperator	*		5186493	0					
ANR	5186859	Identifier	p		5186493	1					
ANR	5186860	PrimaryExpression	'0'		5186493	1					
ANR	5186861	ExpressionStatement	accumCount ++	189:3:9462:9474	5186493	1	True				
ANR	5186862	PostIncDecOperationExpression	accumCount ++		5186493	0					
ANR	5186863	Identifier	accumCount		5186493	0					
ANR	5186864	IncDec	++		5186493	1					
ANR	5186865	IfStatement	if ( accumCount == 3 )		5186493	2					
ANR	5186866	Condition	accumCount == 3	190:7:9483:9497	5186493	0	True				
ANR	5186867	EqualityExpression	accumCount == 3		5186493	0		==			
ANR	5186868	Identifier	accumCount		5186493	0					
ANR	5186869	PrimaryExpression	3		5186493	1					
ANR	5186870	CompoundStatement		59:24:1706:1706	5186493	1					
ANR	5186871	ExpressionStatement	"appendBitsToBuffer ( accumData , 10 , qrcode , & bitLen )"	191:4:9506:9557	5186493	0	True				
ANR	5186872	CallExpression	"appendBitsToBuffer ( accumData , 10 , qrcode , & bitLen )"		5186493	0					
ANR	5186873	Callee	appendBitsToBuffer		5186493	0					
ANR	5186874	Identifier	appendBitsToBuffer		5186493	0					
ANR	5186875	ArgumentList	accumData		5186493	1					
ANR	5186876	Argument	accumData		5186493	0					
ANR	5186877	Identifier	accumData		5186493	0					
ANR	5186878	Argument	10		5186493	1					
ANR	5186879	PrimaryExpression	10		5186493	0					
ANR	5186880	Argument	qrcode		5186493	2					
ANR	5186881	Identifier	qrcode		5186493	0					
ANR	5186882	Argument	& bitLen		5186493	3					
ANR	5186883	UnaryOperationExpression	& bitLen		5186493	0					
ANR	5186884	UnaryOperator	&		5186493	0					
ANR	5186885	Identifier	bitLen		5186493	1					
ANR	5186886	ExpressionStatement	accumData = 0	192:4:9563:9576	5186493	1	True				
ANR	5186887	AssignmentExpression	accumData = 0		5186493	0		=			
ANR	5186888	Identifier	accumData		5186493	0					
ANR	5186889	PrimaryExpression	0		5186493	1					
ANR	5186890	ExpressionStatement	accumCount = 0	193:4:9582:9596	5186493	2	True				
ANR	5186891	AssignmentExpression	accumCount = 0		5186493	0		=			
ANR	5186892	Identifier	accumCount		5186493	0					
ANR	5186893	PrimaryExpression	0		5186493	1					
ANR	5186894	IfStatement	if ( accumCount > 0 )		5186493	7					
ANR	5186895	Condition	accumCount > 0	196:6:9613:9626	5186493	0	True				
ANR	5186896	RelationalExpression	accumCount > 0		5186493	0		>			
ANR	5186897	Identifier	accumCount		5186493	0					
ANR	5186898	PrimaryExpression	0		5186493	1					
ANR	5186899	CompoundStatement		65:22:1835:1835	5186493	1					
ANR	5186900	ExpressionStatement	"appendBitsToBuffer ( accumData , accumCount * 3 + 1 , qrcode , & bitLen )"	197:3:9661:9728	5186493	0	True				
ANR	5186901	CallExpression	"appendBitsToBuffer ( accumData , accumCount * 3 + 1 , qrcode , & bitLen )"		5186493	0					
ANR	5186902	Callee	appendBitsToBuffer		5186493	0					
ANR	5186903	Identifier	appendBitsToBuffer		5186493	0					
ANR	5186904	ArgumentList	accumData		5186493	1					
ANR	5186905	Argument	accumData		5186493	0					
ANR	5186906	Identifier	accumData		5186493	0					
ANR	5186907	Argument	accumCount * 3 + 1		5186493	1					
ANR	5186908	AdditiveExpression	accumCount * 3 + 1		5186493	0		+			
ANR	5186909	MultiplicativeExpression	accumCount * 3		5186493	0		*			
ANR	5186910	Identifier	accumCount		5186493	0					
ANR	5186911	PrimaryExpression	3		5186493	1					
ANR	5186912	PrimaryExpression	1		5186493	1					
ANR	5186913	Argument	qrcode		5186493	2					
ANR	5186914	Identifier	qrcode		5186493	0					
ANR	5186915	Argument	& bitLen		5186493	3					
ANR	5186916	UnaryOperationExpression	& bitLen		5186493	0					
ANR	5186917	UnaryOperator	&		5186493	0					
ANR	5186918	Identifier	bitLen		5186493	1					
ANR	5186919	ElseStatement	else		5186493	0					
ANR	5186920	IfStatement	if ( isAlphanumeric && textLen > 0 )		5186493	0					
ANR	5186921	Condition	isAlphanumeric && textLen > 0	200:12:9747:9775	5186493	0	True				
ANR	5186922	AndExpression	isAlphanumeric && textLen > 0		5186493	0		&&			
ANR	5186923	Identifier	isAlphanumeric		5186493	0					
ANR	5186924	RelationalExpression	textLen > 0		5186493	1		>			
ANR	5186925	Identifier	textLen		5186493	0					
ANR	5186926	PrimaryExpression	0		5186493	1					
ANR	5186927	CompoundStatement		75:2:2214:2227	5186493	1					
ANR	5186928	ExpressionStatement	"appendBitsToBuffer ( 2 , 4 , qrcode , & bitLen )"	201:2:9782:9824	5186493	0	True				
ANR	5186929	CallExpression	"appendBitsToBuffer ( 2 , 4 , qrcode , & bitLen )"		5186493	0					
ANR	5186930	Callee	appendBitsToBuffer		5186493	0					
ANR	5186931	Identifier	appendBitsToBuffer		5186493	0					
ANR	5186932	ArgumentList	2		5186493	1					
ANR	5186933	Argument	2		5186493	0					
ANR	5186934	PrimaryExpression	2		5186493	0					
ANR	5186935	Argument	4		5186493	1					
ANR	5186936	PrimaryExpression	4		5186493	0					
ANR	5186937	Argument	qrcode		5186493	2					
ANR	5186938	Identifier	qrcode		5186493	0					
ANR	5186939	Argument	& bitLen		5186493	3					
ANR	5186940	UnaryOperationExpression	& bitLen		5186493	0					
ANR	5186941	UnaryOperator	&		5186493	0					
ANR	5186942	Identifier	bitLen		5186493	1					
ANR	5186943	IdentifierDeclStatement	int lengthBits = version <= 9 ? 9 : ( version <= 26 ? 11 : 13 ) ;	202:2:9828:9885	5186493	1	True				
ANR	5186944	IdentifierDecl	lengthBits = version <= 9 ? 9 : ( version <= 26 ? 11 : 13 )		5186493	0					
ANR	5186945	IdentifierDeclType	int		5186493	0					
ANR	5186946	Identifier	lengthBits		5186493	1					
ANR	5186947	AssignmentExpression	lengthBits = version <= 9 ? 9 : ( version <= 26 ? 11 : 13 )		5186493	2		=			
ANR	5186948	Identifier	lengthBits		5186493	0					
ANR	5186949	ConditionalExpression	version <= 9 ? 9 : ( version <= 26 ? 11 : 13 )		5186493	1					
ANR	5186950	Condition	version <= 9		5186493	0					
ANR	5186951	RelationalExpression	version <= 9		5186493	0		<=			
ANR	5186952	Identifier	version		5186493	0					
ANR	5186953	PrimaryExpression	9		5186493	1					
ANR	5186954	PrimaryExpression	9		5186493	1					
ANR	5186955	ConditionalExpression	version <= 26 ? 11 : 13		5186493	2					
ANR	5186956	Condition	version <= 26		5186493	0					
ANR	5186957	RelationalExpression	version <= 26		5186493	0		<=			
ANR	5186958	Identifier	version		5186493	0					
ANR	5186959	PrimaryExpression	26		5186493	1					
ANR	5186960	PrimaryExpression	11		5186493	1					
ANR	5186961	PrimaryExpression	13		5186493	2					
ANR	5186962	ExpressionStatement	"appendBitsToBuffer ( ( unsigned int ) textLen , lengthBits , qrcode , & bitLen )"	203:2:9889:9961	5186493	2	True				
ANR	5186963	CallExpression	"appendBitsToBuffer ( ( unsigned int ) textLen , lengthBits , qrcode , & bitLen )"		5186493	0					
ANR	5186964	Callee	appendBitsToBuffer		5186493	0					
ANR	5186965	Identifier	appendBitsToBuffer		5186493	0					
ANR	5186966	ArgumentList	( unsigned int ) textLen		5186493	1					
ANR	5186967	Argument	( unsigned int ) textLen		5186493	0					
ANR	5186968	CastExpression	( unsigned int ) textLen		5186493	0					
ANR	5186969	CastTarget	unsigned int		5186493	0					
ANR	5186970	Identifier	textLen		5186493	1					
ANR	5186971	Argument	lengthBits		5186493	1					
ANR	5186972	Identifier	lengthBits		5186493	0					
ANR	5186973	Argument	qrcode		5186493	2					
ANR	5186974	Identifier	qrcode		5186493	0					
ANR	5186975	Argument	& bitLen		5186493	3					
ANR	5186976	UnaryOperationExpression	& bitLen		5186493	0					
ANR	5186977	UnaryOperator	&		5186493	0					
ANR	5186978	Identifier	bitLen		5186493	1					
ANR	5186979	IdentifierDeclStatement	int accumData = 0 ;	204:2:9965:9982	5186493	3	True				
ANR	5186980	IdentifierDecl	accumData = 0		5186493	0					
ANR	5186981	IdentifierDeclType	int		5186493	0					
ANR	5186982	Identifier	accumData		5186493	1					
ANR	5186983	AssignmentExpression	accumData = 0		5186493	2		=			
ANR	5186984	Identifier	accumData		5186493	0					
ANR	5186985	PrimaryExpression	0		5186493	1					
ANR	5186986	IdentifierDeclStatement	int accumCount = 0 ;	205:2:9986:10004	5186493	4	True				
ANR	5186987	IdentifierDecl	accumCount = 0		5186493	0					
ANR	5186988	IdentifierDeclType	int		5186493	0					
ANR	5186989	Identifier	accumCount		5186493	1					
ANR	5186990	AssignmentExpression	accumCount = 0		5186493	2		=			
ANR	5186991	Identifier	accumCount		5186493	0					
ANR	5186992	PrimaryExpression	0		5186493	1					
ANR	5186993	IdentifierDeclStatement	const char * p ;	206:2:10008:10021	5186493	5	True				
ANR	5186994	IdentifierDecl	* p		5186493	0					
ANR	5186995	IdentifierDeclType	const char *		5186493	0					
ANR	5186996	Identifier	p		5186493	1					
ANR	5186997	ForStatement	for ( p = text ; * p != '\\0' ; p ++ )		5186493	6					
ANR	5186998	ForInit	p = text ;	207:7:10030:10038	5186493	0	True				
ANR	5186999	AssignmentExpression	p = text		5186493	0		=			
ANR	5187000	Identifier	p		5186493	0					
ANR	5187001	Identifier	text		5186493	1					
ANR	5187002	Condition	* p != '\\0'	207:17:10040:10049	5186493	1	True				
ANR	5187003	EqualityExpression	* p != '\\0'		5186493	0		!=			
ANR	5187004	UnaryOperationExpression	* p		5186493	0					
ANR	5187005	UnaryOperator	*		5186493	0					
ANR	5187006	Identifier	p		5186493	1					
ANR	5187007	PrimaryExpression	'\\0'		5186493	1					
ANR	5187008	PostIncDecOperationExpression	p ++	207:29:10052:10054	5186493	2	True				
ANR	5187009	Identifier	p		5186493	0					
ANR	5187010	IncDec	++		5186493	1					
ANR	5187011	CompoundStatement		76:34:2263:2263	5186493	3					
ANR	5187012	ExpressionStatement	"accumData = accumData * 45 + ( strchr ( ALPHANUMERIC_CHARSET , * p ) - ALPHANUMERIC_CHARSET )"	208:3:10062:10149	5186493	0	True				
ANR	5187013	AssignmentExpression	"accumData = accumData * 45 + ( strchr ( ALPHANUMERIC_CHARSET , * p ) - ALPHANUMERIC_CHARSET )"		5186493	0		=			
ANR	5187014	Identifier	accumData		5186493	0					
ANR	5187015	AdditiveExpression	"accumData * 45 + ( strchr ( ALPHANUMERIC_CHARSET , * p ) - ALPHANUMERIC_CHARSET )"		5186493	1		+			
ANR	5187016	MultiplicativeExpression	accumData * 45		5186493	0		*			
ANR	5187017	Identifier	accumData		5186493	0					
ANR	5187018	PrimaryExpression	45		5186493	1					
ANR	5187019	AdditiveExpression	"strchr ( ALPHANUMERIC_CHARSET , * p ) - ALPHANUMERIC_CHARSET"		5186493	1		-			
ANR	5187020	CallExpression	"strchr ( ALPHANUMERIC_CHARSET , * p )"		5186493	0					
ANR	5187021	Callee	strchr		5186493	0					
ANR	5187022	Identifier	strchr		5186493	0					
ANR	5187023	ArgumentList	ALPHANUMERIC_CHARSET		5186493	1					
ANR	5187024	Argument	ALPHANUMERIC_CHARSET		5186493	0					
ANR	5187025	Identifier	ALPHANUMERIC_CHARSET		5186493	0					
ANR	5187026	Argument	* p		5186493	1					
ANR	5187027	UnaryOperationExpression	* p		5186493	0					
ANR	5187028	UnaryOperator	*		5186493	0					
ANR	5187029	Identifier	p		5186493	1					
ANR	5187030	Identifier	ALPHANUMERIC_CHARSET		5186493	1					
ANR	5187031	ExpressionStatement	accumCount ++	209:3:10154:10166	5186493	1	True				
ANR	5187032	PostIncDecOperationExpression	accumCount ++		5186493	0					
ANR	5187033	Identifier	accumCount		5186493	0					
ANR	5187034	IncDec	++		5186493	1					
ANR	5187035	IfStatement	if ( accumCount == 2 )		5186493	2					
ANR	5187036	Condition	accumCount == 2	210:7:10175:10189	5186493	0	True				
ANR	5187037	EqualityExpression	accumCount == 2		5186493	0		==			
ANR	5187038	Identifier	accumCount		5186493	0					
ANR	5187039	PrimaryExpression	2		5186493	1					
ANR	5187040	CompoundStatement		79:24:2398:2398	5186493	1					
ANR	5187041	ExpressionStatement	"appendBitsToBuffer ( accumData , 11 , qrcode , & bitLen )"	211:4:10198:10249	5186493	0	True				
ANR	5187042	CallExpression	"appendBitsToBuffer ( accumData , 11 , qrcode , & bitLen )"		5186493	0					
ANR	5187043	Callee	appendBitsToBuffer		5186493	0					
ANR	5187044	Identifier	appendBitsToBuffer		5186493	0					
ANR	5187045	ArgumentList	accumData		5186493	1					
ANR	5187046	Argument	accumData		5186493	0					
ANR	5187047	Identifier	accumData		5186493	0					
ANR	5187048	Argument	11		5186493	1					
ANR	5187049	PrimaryExpression	11		5186493	0					
ANR	5187050	Argument	qrcode		5186493	2					
ANR	5187051	Identifier	qrcode		5186493	0					
ANR	5187052	Argument	& bitLen		5186493	3					
ANR	5187053	UnaryOperationExpression	& bitLen		5186493	0					
ANR	5187054	UnaryOperator	&		5186493	0					
ANR	5187055	Identifier	bitLen		5186493	1					
ANR	5187056	ExpressionStatement	accumData = 0	212:4:10255:10268	5186493	1	True				
ANR	5187057	AssignmentExpression	accumData = 0		5186493	0		=			
ANR	5187058	Identifier	accumData		5186493	0					
ANR	5187059	PrimaryExpression	0		5186493	1					
ANR	5187060	ExpressionStatement	accumCount = 0	213:4:10274:10288	5186493	2	True				
ANR	5187061	AssignmentExpression	accumCount = 0		5186493	0		=			
ANR	5187062	Identifier	accumCount		5186493	0					
ANR	5187063	PrimaryExpression	0		5186493	1					
ANR	5187064	IfStatement	if ( accumCount > 0 )		5186493	7					
ANR	5187065	Condition	accumCount > 0	216:6:10305:10318	5186493	0	True				
ANR	5187066	RelationalExpression	accumCount > 0		5186493	0		>			
ANR	5187067	Identifier	accumCount		5186493	0					
ANR	5187068	PrimaryExpression	0		5186493	1					
ANR	5187069	CompoundStatement		85:22:2527:2527	5186493	1					
ANR	5187070	ExpressionStatement	"appendBitsToBuffer ( accumData , 6 , qrcode , & bitLen )"	217:3:10351:10401	5186493	0	True				
ANR	5187071	CallExpression	"appendBitsToBuffer ( accumData , 6 , qrcode , & bitLen )"		5186493	0					
ANR	5187072	Callee	appendBitsToBuffer		5186493	0					
ANR	5187073	Identifier	appendBitsToBuffer		5186493	0					
ANR	5187074	ArgumentList	accumData		5186493	1					
ANR	5187075	Argument	accumData		5186493	0					
ANR	5187076	Identifier	accumData		5186493	0					
ANR	5187077	Argument	6		5186493	1					
ANR	5187078	PrimaryExpression	6		5186493	0					
ANR	5187079	Argument	qrcode		5186493	2					
ANR	5187080	Identifier	qrcode		5186493	0					
ANR	5187081	Argument	& bitLen		5186493	3					
ANR	5187082	UnaryOperationExpression	& bitLen		5186493	0					
ANR	5187083	UnaryOperator	&		5186493	0					
ANR	5187084	Identifier	bitLen		5186493	1					
ANR	5187085	ExpressionStatement	"encodeQrCodeTail ( qrcode , bitLen , tempBuffer , version , ecl , mask , boostEcl )"	222:1:10429:10504	5186493	16	True				
ANR	5187086	CallExpression	"encodeQrCodeTail ( qrcode , bitLen , tempBuffer , version , ecl , mask , boostEcl )"		5186493	0					
ANR	5187087	Callee	encodeQrCodeTail		5186493	0					
ANR	5187088	Identifier	encodeQrCodeTail		5186493	0					
ANR	5187089	ArgumentList	qrcode		5186493	1					
ANR	5187090	Argument	qrcode		5186493	0					
ANR	5187091	Identifier	qrcode		5186493	0					
ANR	5187092	Argument	bitLen		5186493	1					
ANR	5187093	Identifier	bitLen		5186493	0					
ANR	5187094	Argument	tempBuffer		5186493	2					
ANR	5187095	Identifier	tempBuffer		5186493	0					
ANR	5187096	Argument	version		5186493	3					
ANR	5187097	Identifier	version		5186493	0					
ANR	5187098	Argument	ecl		5186493	4					
ANR	5187099	Identifier	ecl		5186493	0					
ANR	5187100	Argument	mask		5186493	5					
ANR	5187101	Identifier	mask		5186493	0					
ANR	5187102	Argument	boostEcl		5186493	6					
ANR	5187103	Identifier	boostEcl		5186493	0					
ANR	5187104	ReturnStatement	return true ;	223:1:10507:10518	5186493	17	True				
ANR	5187105	Identifier	true		5186493	0					
ANR	5187106	ReturnType	R_API bool		5186493	1					
ANR	5187107	Identifier	r_qrcode_text		5186493	2					
ANR	5187108	ParameterList	"const char * text , ut8 tempBuffer [ ] , ut8 qrcode [ ] , enum qrcodegen_Ecc ecl , int minVersion , int maxVersion , enum qrcodegen_Mask mask , bool boostEcl"		5186493	3					
ANR	5187109	Parameter	const char * text	132:25:7646:7661	5186493	0	True				
ANR	5187110	ParameterType	const char *		5186493	0					
ANR	5187111	Identifier	text		5186493	1					
ANR	5187112	Parameter	ut8 tempBuffer [ ]	132:43:7664:7679	5186493	1	True				
ANR	5187113	ParameterType	ut8 [ ]		5186493	0					
ANR	5187114	Identifier	tempBuffer		5186493	1					
ANR	5187115	Parameter	ut8 qrcode [ ]	132:61:7682:7693	5186493	2	True				
ANR	5187116	ParameterType	ut8 [ ]		5186493	0					
ANR	5187117	Identifier	qrcode		5186493	1					
ANR	5187118	Parameter	enum qrcodegen_Ecc ecl	132:75:7696:7717	5186493	3	True				
ANR	5187119	ParameterType	enum qrcodegen_Ecc		5186493	0					
ANR	5187120	Identifier	ecl		5186493	1					
ANR	5187121	Parameter	int minVersion	132:99:7720:7733	5186493	4	True				
ANR	5187122	ParameterType	int		5186493	0					
ANR	5187123	Identifier	minVersion		5186493	1					
ANR	5187124	Parameter	int maxVersion	132:115:7736:7749	5186493	5	True				
ANR	5187125	ParameterType	int		5186493	0					
ANR	5187126	Identifier	maxVersion		5186493	1					
ANR	5187127	Parameter	enum qrcodegen_Mask mask	132:131:7752:7775	5186493	6	True				
ANR	5187128	ParameterType	enum qrcodegen_Mask		5186493	0					
ANR	5187129	Identifier	mask		5186493	1					
ANR	5187130	Parameter	bool boostEcl	132:157:7778:7790	5186493	7	True				
ANR	5187131	ParameterType	bool		5186493	0					
ANR	5187132	Identifier	boostEcl		5186493	1					
ANR	5187133	CFGEntryNode	ENTRY		5186493		True				
ANR	5187134	CFGExitNode	EXIT		5186493		True				
ANR	5187135	Symbol	qrcodegen_Ecc_HIGH		5186493						
ANR	5187136	Symbol	ALPHANUMERIC_CHARSET		5186493						
ANR	5187137	Symbol	* qrcode		5186493						
ANR	5187138	Symbol	qrcode		5186493						
ANR	5187139	Symbol	* text		5186493						
ANR	5187140	Symbol	strchr		5186493						
ANR	5187141	Symbol	accumCount		5186493						
ANR	5187142	Symbol	qrcodegen_BUFFER_LEN_FOR_VERSION		5186493						
ANR	5187143	Symbol	ecl		5186493						
ANR	5187144	Symbol	boostEcl		5186493						
ANR	5187145	Symbol	tempBuffer		5186493						
ANR	5187146	Symbol	textLen		5186493						
ANR	5187147	Symbol	qrcodegen_Ecc_LOW		5186493						
ANR	5187148	Symbol	isAlphanumeric		5186493						
ANR	5187149	Symbol	& textBits		5186493						
ANR	5187150	Symbol	text		5186493						
ANR	5187151	Symbol	qrcodegen_VERSION_MAX		5186493						
ANR	5187152	Symbol	mask		5186493						
ANR	5187153	Symbol	& isNumeric		5186493						
ANR	5187154	Symbol	minVersion		5186493						
ANR	5187155	Symbol	r_qrcode_bin		5186493						
ANR	5187156	Symbol	lengthBits		5186493						
ANR	5187157	Symbol	false		5186493						
ANR	5187158	Symbol	i		5186493						
ANR	5187159	Symbol	version		5186493						
ANR	5187160	Symbol	fitVersionToData		5186493						
ANR	5187161	Symbol	& bitLen		5186493						
ANR	5187162	Symbol	bitLen		5186493						
ANR	5187163	Symbol	p		5186493						
ANR	5187164	Symbol	& isAlphanumeric		5186493						
ANR	5187165	Symbol	accumData		5186493						
ANR	5187166	Symbol	qrcodegen_VERSION_MIN		5186493						
ANR	5187167	Symbol	* i		5186493						
ANR	5187168	Symbol	isNumeric		5186493						
ANR	5187169	Symbol	textBits		5186493						
ANR	5187170	Symbol	* tempBuffer		5186493						
ANR	5187171	Symbol	getTextProperties		5186493						
ANR	5187172	Symbol	true		5186493						
ANR	5187173	Symbol	maxVersion		5186493						
ANR	5187174	Symbol	* p		5186493						
ANR	5187175	Function	r_qrcode_bin	228:0:10587:11950							
ANR	5187176	FunctionDef	"r_qrcode_bin (ut8 * dataAndTemp , int dataLen , ut8 * qrcode , enum qrcodegen_Ecc ecl , int minVersion , int maxVersion , enum qrcodegen_Mask mask , bool boostEcl)"		5187175	0					
ANR	5187177	CompoundStatement		229:100:10755:11950	5187175	0					
ANR	5187178	IfStatement	if ( ! dataAndTemp || ! qrcode || dataLen < 1 )		5187175	0					
ANR	5187179	Condition	! dataAndTemp || ! qrcode || dataLen < 1	230:5:10762:10799	5187175	0	True				
ANR	5187180	OrExpression	! dataAndTemp || ! qrcode || dataLen < 1		5187175	0		||			
ANR	5187181	UnaryOperationExpression	! dataAndTemp		5187175	0					
ANR	5187182	UnaryOperator	!		5187175	0					
ANR	5187183	Identifier	dataAndTemp		5187175	1					
ANR	5187184	OrExpression	! qrcode || dataLen < 1		5187175	1		||			
ANR	5187185	UnaryOperationExpression	! qrcode		5187175	0					
ANR	5187186	UnaryOperator	!		5187175	0					
ANR	5187187	Identifier	qrcode		5187175	1					
ANR	5187188	RelationalExpression	dataLen < 1		5187175	1		<			
ANR	5187189	Identifier	dataLen		5187175	0					
ANR	5187190	PrimaryExpression	1		5187175	1					
ANR	5187191	CompoundStatement		2:45:46:46	5187175	1					
ANR	5187192	ReturnStatement	return false ;	231:2:10806:10818	5187175	0	True				
ANR	5187193	Identifier	false		5187175	0					
ANR	5187194	IfStatement	if ( minVersion < qrcodegen_VERSION_MIN || minVersion > qrcodegen_VERSION_MAX )		5187175	1					
ANR	5187195	Condition	minVersion < qrcodegen_VERSION_MIN || minVersion > qrcodegen_VERSION_MAX	233:5:10828:10899	5187175	0	True				
ANR	5187196	OrExpression	minVersion < qrcodegen_VERSION_MIN || minVersion > qrcodegen_VERSION_MAX		5187175	0		||			
ANR	5187197	RelationalExpression	minVersion < qrcodegen_VERSION_MIN		5187175	0		<			
ANR	5187198	Identifier	minVersion		5187175	0					
ANR	5187199	Identifier	qrcodegen_VERSION_MIN		5187175	1					
ANR	5187200	RelationalExpression	minVersion > qrcodegen_VERSION_MAX		5187175	1		>			
ANR	5187201	Identifier	minVersion		5187175	0					
ANR	5187202	Identifier	qrcodegen_VERSION_MAX		5187175	1					
ANR	5187203	CompoundStatement		5:79:146:146	5187175	1					
ANR	5187204	ReturnStatement	return false ;	234:2:10906:10918	5187175	0	True				
ANR	5187205	Identifier	false		5187175	0					
ANR	5187206	IfStatement	if ( maxVersion < qrcodegen_VERSION_MIN || maxVersion > qrcodegen_VERSION_MAX )		5187175	2					
ANR	5187207	Condition	maxVersion < qrcodegen_VERSION_MIN || maxVersion > qrcodegen_VERSION_MAX	236:5:10928:10999	5187175	0	True				
ANR	5187208	OrExpression	maxVersion < qrcodegen_VERSION_MIN || maxVersion > qrcodegen_VERSION_MAX		5187175	0		||			
ANR	5187209	RelationalExpression	maxVersion < qrcodegen_VERSION_MIN		5187175	0		<			
ANR	5187210	Identifier	maxVersion		5187175	0					
ANR	5187211	Identifier	qrcodegen_VERSION_MIN		5187175	1					
ANR	5187212	RelationalExpression	maxVersion > qrcodegen_VERSION_MAX		5187175	1		>			
ANR	5187213	Identifier	maxVersion		5187175	0					
ANR	5187214	Identifier	qrcodegen_VERSION_MAX		5187175	1					
ANR	5187215	CompoundStatement		8:79:246:246	5187175	1					
ANR	5187216	ReturnStatement	return false ;	237:2:11006:11018	5187175	0	True				
ANR	5187217	Identifier	false		5187175	0					
ANR	5187218	IfStatement	if ( ecl < qrcodegen_Ecc_LOW || ecl > qrcodegen_Ecc_HIGH )		5187175	3					
ANR	5187219	Condition	ecl < qrcodegen_Ecc_LOW || ecl > qrcodegen_Ecc_HIGH	239:5:11028:11078	5187175	0	True				
ANR	5187220	OrExpression	ecl < qrcodegen_Ecc_LOW || ecl > qrcodegen_Ecc_HIGH		5187175	0		||			
ANR	5187221	RelationalExpression	ecl < qrcodegen_Ecc_LOW		5187175	0		<			
ANR	5187222	Identifier	ecl		5187175	0					
ANR	5187223	Identifier	qrcodegen_Ecc_LOW		5187175	1					
ANR	5187224	RelationalExpression	ecl > qrcodegen_Ecc_HIGH		5187175	1		>			
ANR	5187225	Identifier	ecl		5187175	0					
ANR	5187226	Identifier	qrcodegen_Ecc_HIGH		5187175	1					
ANR	5187227	CompoundStatement		11:58:325:325	5187175	1					
ANR	5187228	ReturnStatement	return false ;	240:2:11085:11097	5187175	0	True				
ANR	5187229	Identifier	false		5187175	0					
ANR	5187230	IfStatement	if ( mask < - 1 || mask > 7 )		5187175	4					
ANR	5187231	Condition	mask < - 1 || mask > 7	242:5:11107:11127	5187175	0	True				
ANR	5187232	OrExpression	mask < - 1 || mask > 7		5187175	0		||			
ANR	5187233	RelationalExpression	mask < - 1		5187175	0		<			
ANR	5187234	Identifier	mask		5187175	0					
ANR	5187235	UnaryOperationExpression	- 1		5187175	1					
ANR	5187236	UnaryOperator	-		5187175	0					
ANR	5187237	PrimaryExpression	1		5187175	1					
ANR	5187238	RelationalExpression	mask > 7		5187175	1		>			
ANR	5187239	Identifier	mask		5187175	0					
ANR	5187240	PrimaryExpression	7		5187175	1					
ANR	5187241	CompoundStatement		14:28:374:374	5187175	1					
ANR	5187242	ReturnStatement	return false ;	243:2:11134:11146	5187175	0	True				
ANR	5187243	Identifier	false		5187175	0					
ANR	5187244	ExpressionStatement	qrcode [ 0 ] = 0	247:1:11194:11207	5187175	5	True				
ANR	5187245	AssignmentExpression	qrcode [ 0 ] = 0		5187175	0		=			
ANR	5187246	ArrayIndexing	qrcode [ 0 ]		5187175	0					
ANR	5187247	Identifier	qrcode		5187175	0					
ANR	5187248	PrimaryExpression	0		5187175	1					
ANR	5187249	PrimaryExpression	0		5187175	1					
ANR	5187250	IfStatement	if ( dataLen > INT16_MAX / 8 )		5187175	6					
ANR	5187251	Condition	dataLen > INT16_MAX / 8	250:5:11249:11271	5187175	0	True				
ANR	5187252	RelationalExpression	dataLen > INT16_MAX / 8		5187175	0		>			
ANR	5187253	Identifier	dataLen		5187175	0					
ANR	5187254	MultiplicativeExpression	INT16_MAX / 8		5187175	1		/			
ANR	5187255	Identifier	INT16_MAX		5187175	0					
ANR	5187256	PrimaryExpression	8		5187175	1					
ANR	5187257	CompoundStatement		22:30:518:518	5187175	1					
ANR	5187258	ReturnStatement	return false ;	251:2:11278:11290	5187175	0	True				
ANR	5187259	Identifier	false		5187175	0					
ANR	5187260	IdentifierDeclStatement	"int version = fitVersionToData ( minVersion , maxVersion , ecl , ( int ) dataLen , ( int ) dataLen * 8 , 8 , 16 , 16 ) ;"	254:1:11336:11441	5187175	7	True				
ANR	5187261	IdentifierDecl	"version = fitVersionToData ( minVersion , maxVersion , ecl , ( int ) dataLen , ( int ) dataLen * 8 , 8 , 16 , 16 )"		5187175	0					
ANR	5187262	IdentifierDeclType	int		5187175	0					
ANR	5187263	Identifier	version		5187175	1					
ANR	5187264	AssignmentExpression	"version = fitVersionToData ( minVersion , maxVersion , ecl , ( int ) dataLen , ( int ) dataLen * 8 , 8 , 16 , 16 )"		5187175	2		=			
ANR	5187265	Identifier	version		5187175	0					
ANR	5187266	CallExpression	"fitVersionToData ( minVersion , maxVersion , ecl , ( int ) dataLen , ( int ) dataLen * 8 , 8 , 16 , 16 )"		5187175	1					
ANR	5187267	Callee	fitVersionToData		5187175	0					
ANR	5187268	Identifier	fitVersionToData		5187175	0					
ANR	5187269	ArgumentList	minVersion		5187175	1					
ANR	5187270	Argument	minVersion		5187175	0					
ANR	5187271	Identifier	minVersion		5187175	0					
ANR	5187272	Argument	maxVersion		5187175	1					
ANR	5187273	Identifier	maxVersion		5187175	0					
ANR	5187274	Argument	ecl		5187175	2					
ANR	5187275	Identifier	ecl		5187175	0					
ANR	5187276	Argument	( int ) dataLen		5187175	3					
ANR	5187277	CastExpression	( int ) dataLen		5187175	0					
ANR	5187278	CastTarget	int		5187175	0					
ANR	5187279	Identifier	dataLen		5187175	1					
ANR	5187280	Argument	( int ) dataLen * 8		5187175	4					
ANR	5187281	MultiplicativeExpression	( int ) dataLen * 8		5187175	0		*			
ANR	5187282	CastExpression	( int ) dataLen		5187175	0					
ANR	5187283	CastTarget	int		5187175	0					
ANR	5187284	Identifier	dataLen		5187175	1					
ANR	5187285	PrimaryExpression	8		5187175	1					
ANR	5187286	Argument	8		5187175	5					
ANR	5187287	PrimaryExpression	8		5187175	0					
ANR	5187288	Argument	16		5187175	6					
ANR	5187289	PrimaryExpression	16		5187175	0					
ANR	5187290	Argument	16		5187175	7					
ANR	5187291	PrimaryExpression	16		5187175	0					
ANR	5187292	IfStatement	if ( version == 0 )		5187175	8					
ANR	5187293	Condition	version == 0	255:5:11448:11459	5187175	0	True				
ANR	5187294	EqualityExpression	version == 0		5187175	0		==			
ANR	5187295	Identifier	version		5187175	0					
ANR	5187296	PrimaryExpression	0		5187175	1					
ANR	5187297	CompoundStatement		27:19:706:706	5187175	1					
ANR	5187298	ReturnStatement	return false ;	256:2:11466:11478	5187175	0	True				
ANR	5187299	Identifier	false		5187175	0					
ANR	5187300	ExpressionStatement	"memset ( qrcode , 0 , qrcodegen_BUFFER_LEN_FOR_VERSION ( version ) * sizeof ( qrcode [ 0 ] ) )"	260:1:11519:11601	5187175	9	True				
ANR	5187301	CallExpression	"memset ( qrcode , 0 , qrcodegen_BUFFER_LEN_FOR_VERSION ( version ) * sizeof ( qrcode [ 0 ] ) )"		5187175	0					
ANR	5187302	Callee	memset		5187175	0					
ANR	5187303	Identifier	memset		5187175	0					
ANR	5187304	ArgumentList	qrcode		5187175	1					
ANR	5187305	Argument	qrcode		5187175	0					
ANR	5187306	Identifier	qrcode		5187175	0					
ANR	5187307	Argument	0		5187175	1					
ANR	5187308	PrimaryExpression	0		5187175	0					
ANR	5187309	Argument	qrcodegen_BUFFER_LEN_FOR_VERSION ( version ) * sizeof ( qrcode [ 0 ] )		5187175	2					
ANR	5187310	MultiplicativeExpression	qrcodegen_BUFFER_LEN_FOR_VERSION ( version ) * sizeof ( qrcode [ 0 ] )		5187175	0		*			
ANR	5187311	CallExpression	qrcodegen_BUFFER_LEN_FOR_VERSION ( version )		5187175	0					
ANR	5187312	Callee	qrcodegen_BUFFER_LEN_FOR_VERSION		5187175	0					
ANR	5187313	Identifier	qrcodegen_BUFFER_LEN_FOR_VERSION		5187175	0					
ANR	5187314	ArgumentList	version		5187175	1					
ANR	5187315	Argument	version		5187175	0					
ANR	5187316	Identifier	version		5187175	0					
ANR	5187317	SizeofExpression	sizeof ( qrcode [ 0 ] )		5187175	1					
ANR	5187318	Sizeof	sizeof		5187175	0					
ANR	5187319	ArrayIndexing	qrcode [ 0 ]		5187175	1					
ANR	5187320	Identifier	qrcode		5187175	0					
ANR	5187321	PrimaryExpression	0		5187175	1					
ANR	5187322	IdentifierDeclStatement	int bitLen = 0 ;	261:1:11604:11618	5187175	10	True				
ANR	5187323	IdentifierDecl	bitLen = 0		5187175	0					
ANR	5187324	IdentifierDeclType	int		5187175	0					
ANR	5187325	Identifier	bitLen		5187175	1					
ANR	5187326	AssignmentExpression	bitLen = 0		5187175	2		=			
ANR	5187327	Identifier	bitLen		5187175	0					
ANR	5187328	PrimaryExpression	0		5187175	1					
ANR	5187329	ExpressionStatement	"appendBitsToBuffer ( 4 , 4 , qrcode , & bitLen )"	262:1:11621:11663	5187175	11	True				
ANR	5187330	CallExpression	"appendBitsToBuffer ( 4 , 4 , qrcode , & bitLen )"		5187175	0					
ANR	5187331	Callee	appendBitsToBuffer		5187175	0					
ANR	5187332	Identifier	appendBitsToBuffer		5187175	0					
ANR	5187333	ArgumentList	4		5187175	1					
ANR	5187334	Argument	4		5187175	0					
ANR	5187335	PrimaryExpression	4		5187175	0					
ANR	5187336	Argument	4		5187175	1					
ANR	5187337	PrimaryExpression	4		5187175	0					
ANR	5187338	Argument	qrcode		5187175	2					
ANR	5187339	Identifier	qrcode		5187175	0					
ANR	5187340	Argument	& bitLen		5187175	3					
ANR	5187341	UnaryOperationExpression	& bitLen		5187175	0					
ANR	5187342	UnaryOperator	&		5187175	0					
ANR	5187343	Identifier	bitLen		5187175	1					
ANR	5187344	ExpressionStatement	"appendBitsToBuffer ( ( unsigned int ) dataLen , ( version <= 9 ? 8 : 16 ) , qrcode , & bitLen )"	263:1:11666:11749	5187175	12	True				
ANR	5187345	CallExpression	"appendBitsToBuffer ( ( unsigned int ) dataLen , ( version <= 9 ? 8 : 16 ) , qrcode , & bitLen )"		5187175	0					
ANR	5187346	Callee	appendBitsToBuffer		5187175	0					
ANR	5187347	Identifier	appendBitsToBuffer		5187175	0					
ANR	5187348	ArgumentList	( unsigned int ) dataLen		5187175	1					
ANR	5187349	Argument	( unsigned int ) dataLen		5187175	0					
ANR	5187350	CastExpression	( unsigned int ) dataLen		5187175	0					
ANR	5187351	CastTarget	unsigned int		5187175	0					
ANR	5187352	Identifier	dataLen		5187175	1					
ANR	5187353	Argument	version <= 9 ? 8 : 16		5187175	1					
ANR	5187354	ConditionalExpression	version <= 9 ? 8 : 16		5187175	0					
ANR	5187355	Condition	version <= 9		5187175	0					
ANR	5187356	RelationalExpression	version <= 9		5187175	0		<=			
ANR	5187357	Identifier	version		5187175	0					
ANR	5187358	PrimaryExpression	9		5187175	1					
ANR	5187359	PrimaryExpression	8		5187175	1					
ANR	5187360	PrimaryExpression	16		5187175	2					
ANR	5187361	Argument	qrcode		5187175	2					
ANR	5187362	Identifier	qrcode		5187175	0					
ANR	5187363	Argument	& bitLen		5187175	3					
ANR	5187364	UnaryOperationExpression	& bitLen		5187175	0					
ANR	5187365	UnaryOperator	&		5187175	0					
ANR	5187366	Identifier	bitLen		5187175	1					
ANR	5187367	IdentifierDeclStatement	size_t i ;	264:1:11752:11760	5187175	13	True				
ANR	5187368	IdentifierDecl	i		5187175	0					
ANR	5187369	IdentifierDeclType	size_t		5187175	0					
ANR	5187370	Identifier	i		5187175	1					
ANR	5187371	ForStatement	for ( i = 0 ; i < dataLen ; i ++ )		5187175	14					
ANR	5187372	ForInit	i = 0 ;	265:6:11768:11773	5187175	0	True				
ANR	5187373	AssignmentExpression	i = 0		5187175	0		=			
ANR	5187374	Identifier	i		5187175	0					
ANR	5187375	PrimaryExpression	0		5187175	1					
ANR	5187376	Condition	i < dataLen	265:13:11775:11785	5187175	1	True				
ANR	5187377	RelationalExpression	i < dataLen		5187175	0		<			
ANR	5187378	Identifier	i		5187175	0					
ANR	5187379	Identifier	dataLen		5187175	1					
ANR	5187380	PostIncDecOperationExpression	i ++	265:26:11788:11790	5187175	2	True				
ANR	5187381	Identifier	i		5187175	0					
ANR	5187382	IncDec	++		5187175	1					
ANR	5187383	CompoundStatement		37:31:1037:1037	5187175	3					
ANR	5187384	ExpressionStatement	"appendBitsToBuffer ( dataAndTemp [ i ] , 8 , qrcode , & bitLen )"	266:2:11797:11852	5187175	0	True				
ANR	5187385	CallExpression	"appendBitsToBuffer ( dataAndTemp [ i ] , 8 , qrcode , & bitLen )"		5187175	0					
ANR	5187386	Callee	appendBitsToBuffer		5187175	0					
ANR	5187387	Identifier	appendBitsToBuffer		5187175	0					
ANR	5187388	ArgumentList	dataAndTemp [ i ]		5187175	1					
ANR	5187389	Argument	dataAndTemp [ i ]		5187175	0					
ANR	5187390	ArrayIndexing	dataAndTemp [ i ]		5187175	0					
ANR	5187391	Identifier	dataAndTemp		5187175	0					
ANR	5187392	Identifier	i		5187175	1					
ANR	5187393	Argument	8		5187175	1					
ANR	5187394	PrimaryExpression	8		5187175	0					
ANR	5187395	Argument	qrcode		5187175	2					
ANR	5187396	Identifier	qrcode		5187175	0					
ANR	5187397	Argument	& bitLen		5187175	3					
ANR	5187398	UnaryOperationExpression	& bitLen		5187175	0					
ANR	5187399	UnaryOperator	&		5187175	0					
ANR	5187400	Identifier	bitLen		5187175	1					
ANR	5187401	ExpressionStatement	"encodeQrCodeTail ( qrcode , bitLen , dataAndTemp , version , ecl , mask , boostEcl )"	268:1:11858:11934	5187175	15	True				
ANR	5187402	CallExpression	"encodeQrCodeTail ( qrcode , bitLen , dataAndTemp , version , ecl , mask , boostEcl )"		5187175	0					
ANR	5187403	Callee	encodeQrCodeTail		5187175	0					
ANR	5187404	Identifier	encodeQrCodeTail		5187175	0					
ANR	5187405	ArgumentList	qrcode		5187175	1					
ANR	5187406	Argument	qrcode		5187175	0					
ANR	5187407	Identifier	qrcode		5187175	0					
ANR	5187408	Argument	bitLen		5187175	1					
ANR	5187409	Identifier	bitLen		5187175	0					
ANR	5187410	Argument	dataAndTemp		5187175	2					
ANR	5187411	Identifier	dataAndTemp		5187175	0					
ANR	5187412	Argument	version		5187175	3					
ANR	5187413	Identifier	version		5187175	0					
ANR	5187414	Argument	ecl		5187175	4					
ANR	5187415	Identifier	ecl		5187175	0					
ANR	5187416	Argument	mask		5187175	5					
ANR	5187417	Identifier	mask		5187175	0					
ANR	5187418	Argument	boostEcl		5187175	6					
ANR	5187419	Identifier	boostEcl		5187175	0					
ANR	5187420	ReturnStatement	return true ;	269:1:11937:11948	5187175	16	True				
ANR	5187421	Identifier	true		5187175	0					
ANR	5187422	ReturnType	R_API bool		5187175	1					
ANR	5187423	Identifier	r_qrcode_bin		5187175	2					
ANR	5187424	ParameterList	"ut8 * dataAndTemp , int dataLen , ut8 * qrcode , enum qrcodegen_Ecc ecl , int minVersion , int maxVersion , enum qrcodegen_Mask mask , bool boostEcl"		5187175	3					
ANR	5187425	Parameter	ut8 * dataAndTemp	228:24:10611:10626	5187175	0	True				
ANR	5187426	ParameterType	ut8 *		5187175	0					
ANR	5187427	Identifier	dataAndTemp		5187175	1					
ANR	5187428	Parameter	int dataLen	228:42:10629:10639	5187175	1	True				
ANR	5187429	ParameterType	int		5187175	0					
ANR	5187430	Identifier	dataLen		5187175	1					
ANR	5187431	Parameter	ut8 * qrcode	228:55:10642:10652	5187175	2	True				
ANR	5187432	ParameterType	ut8 *		5187175	0					
ANR	5187433	Identifier	qrcode		5187175	1					
ANR	5187434	Parameter	enum qrcodegen_Ecc ecl	229:3:10658:10679	5187175	3	True				
ANR	5187435	ParameterType	enum qrcodegen_Ecc		5187175	0					
ANR	5187436	Identifier	ecl		5187175	1					
ANR	5187437	Parameter	int minVersion	229:27:10682:10695	5187175	4	True				
ANR	5187438	ParameterType	int		5187175	0					
ANR	5187439	Identifier	minVersion		5187175	1					
ANR	5187440	Parameter	int maxVersion	229:43:10698:10711	5187175	5	True				
ANR	5187441	ParameterType	int		5187175	0					
ANR	5187442	Identifier	maxVersion		5187175	1					
ANR	5187443	Parameter	enum qrcodegen_Mask mask	229:59:10714:10737	5187175	6	True				
ANR	5187444	ParameterType	enum qrcodegen_Mask		5187175	0					
ANR	5187445	Identifier	mask		5187175	1					
ANR	5187446	Parameter	bool boostEcl	229:85:10740:10752	5187175	7	True				
ANR	5187447	ParameterType	bool		5187175	0					
ANR	5187448	Identifier	boostEcl		5187175	1					
ANR	5187449	CFGEntryNode	ENTRY		5187175		True				
ANR	5187450	CFGExitNode	EXIT		5187175		True				
ANR	5187451	Symbol	qrcodegen_Ecc_HIGH		5187175						
ANR	5187452	Symbol	minVersion		5187175						
ANR	5187453	Symbol	* qrcode		5187175						
ANR	5187454	Symbol	qrcode		5187175						
ANR	5187455	Symbol	false		5187175						
ANR	5187456	Symbol	i		5187175						
ANR	5187457	Symbol	qrcodegen_BUFFER_LEN_FOR_VERSION		5187175						
ANR	5187458	Symbol	version		5187175						
ANR	5187459	Symbol	fitVersionToData		5187175						
ANR	5187460	Symbol	dataLen		5187175						
ANR	5187461	Symbol	& bitLen		5187175						
ANR	5187462	Symbol	ecl		5187175						
ANR	5187463	Symbol	* dataAndTemp		5187175						
ANR	5187464	Symbol	dataAndTemp		5187175						
ANR	5187465	Symbol	boostEcl		5187175						
ANR	5187466	Symbol	bitLen		5187175						
ANR	5187467	Symbol	qrcodegen_VERSION_MIN		5187175						
ANR	5187468	Symbol	* i		5187175						
ANR	5187469	Symbol	INT16_MAX		5187175						
ANR	5187470	Symbol	qrcodegen_Ecc_LOW		5187175						
ANR	5187471	Symbol	true		5187175						
ANR	5187472	Symbol	maxVersion		5187175						
ANR	5187473	Symbol	qrcodegen_VERSION_MAX		5187175						
ANR	5187474	Symbol	mask		5187175						
ANR	5187475	Function	getTextProperties	277:0:12312:13056							
ANR	5187476	FunctionDef	"getTextProperties (const char * text , bool * isNumeric , bool * isAlphanumeric , int * textBits)"		5187475	0					
ANR	5187477	CompoundStatement		277:101:12413:13056	5187475	0					
ANR	5187478	IdentifierDeclStatement	int textLen = 0 ;	278:1:12416:12431	5187475	0	True				
ANR	5187479	IdentifierDecl	textLen = 0		5187475	0					
ANR	5187480	IdentifierDeclType	int		5187475	0					
ANR	5187481	Identifier	textLen		5187475	1					
ANR	5187482	AssignmentExpression	textLen = 0		5187475	2		=			
ANR	5187483	Identifier	textLen		5187475	0					
ANR	5187484	PrimaryExpression	0		5187475	1					
ANR	5187485	ExpressionStatement	* isNumeric = true	279:1:12434:12451	5187475	1	True				
ANR	5187486	AssignmentExpression	* isNumeric = true		5187475	0		=			
ANR	5187487	UnaryOperationExpression	* isNumeric		5187475	0					
ANR	5187488	UnaryOperator	*		5187475	0					
ANR	5187489	Identifier	isNumeric		5187475	1					
ANR	5187490	Identifier	true		5187475	1					
ANR	5187491	ExpressionStatement	* isAlphanumeric = true	280:1:12454:12476	5187475	2	True				
ANR	5187492	AssignmentExpression	* isAlphanumeric = true		5187475	0		=			
ANR	5187493	UnaryOperationExpression	* isAlphanumeric		5187475	0					
ANR	5187494	UnaryOperator	*		5187475	0					
ANR	5187495	Identifier	isAlphanumeric		5187475	1					
ANR	5187496	Identifier	true		5187475	1					
ANR	5187497	IdentifierDeclStatement	const char * p ;	281:1:12479:12492	5187475	3	True				
ANR	5187498	IdentifierDecl	* p		5187475	0					
ANR	5187499	IdentifierDeclType	const char *		5187475	0					
ANR	5187500	Identifier	p		5187475	1					
ANR	5187501	ForStatement	"for ( p = text ; * p != '\\0' ; p ++ , textLen ++ )"		5187475	4					
ANR	5187502	ForInit	p = text ;	282:6:12500:12508	5187475	0	True				
ANR	5187503	AssignmentExpression	p = text		5187475	0		=			
ANR	5187504	Identifier	p		5187475	0					
ANR	5187505	Identifier	text		5187475	1					
ANR	5187506	Condition	* p != '\\0'	282:16:12510:12519	5187475	1	True				
ANR	5187507	EqualityExpression	* p != '\\0'		5187475	0		!=			
ANR	5187508	UnaryOperationExpression	* p		5187475	0					
ANR	5187509	UnaryOperator	*		5187475	0					
ANR	5187510	Identifier	p		5187475	1					
ANR	5187511	PrimaryExpression	'\\0'		5187475	1					
ANR	5187512	Expression	"p ++ , textLen ++"	282:28:12522:12535	5187475	2	True				
ANR	5187513	PostIncDecOperationExpression	p ++		5187475	0					
ANR	5187514	Identifier	p		5187475	0					
ANR	5187515	IncDec	++		5187475	1					
ANR	5187516	PostIncDecOperationExpression	textLen ++		5187475	1					
ANR	5187517	Identifier	textLen		5187475	0					
ANR	5187518	IncDec	++		5187475	1					
ANR	5187519	CompoundStatement		10:2:200:211	5187475	3					
ANR	5187520	IfStatement	if ( textLen >= INT16_MAX )		5187475	0					
ANR	5187521	Condition	textLen >= INT16_MAX	283:6:12570:12589	5187475	0	True				
ANR	5187522	RelationalExpression	textLen >= INT16_MAX		5187475	0		>=			
ANR	5187523	Identifier	textLen		5187475	0					
ANR	5187524	Identifier	INT16_MAX		5187475	1					
ANR	5187525	CompoundStatement		7:28:178:178	5187475	1					
ANR	5187526	ReturnStatement	return - 1 ;	284:3:12597:12606	5187475	0	True				
ANR	5187527	UnaryOperationExpression	- 1		5187475	0					
ANR	5187528	UnaryOperator	-		5187475	0					
ANR	5187529	PrimaryExpression	1		5187475	1					
ANR	5187530	IdentifierDeclStatement	char c = * p ;	286:2:12614:12625	5187475	1	True				
ANR	5187531	IdentifierDecl	c = * p		5187475	0					
ANR	5187532	IdentifierDeclType	char		5187475	0					
ANR	5187533	Identifier	c		5187475	1					
ANR	5187534	AssignmentExpression	c = * p		5187475	2		=			
ANR	5187535	Identifier	c		5187475	0					
ANR	5187536	UnaryOperationExpression	* p		5187475	1					
ANR	5187537	UnaryOperator	*		5187475	0					
ANR	5187538	Identifier	p		5187475	1					
ANR	5187539	IfStatement	if ( c < '0' || c > '9' )		5187475	2					
ANR	5187540	Condition	c < '0' || c > '9'	287:6:12633:12650	5187475	0	True				
ANR	5187541	OrExpression	c < '0' || c > '9'		5187475	0		||			
ANR	5187542	RelationalExpression	c < '0'		5187475	0		<			
ANR	5187543	Identifier	c		5187475	0					
ANR	5187544	PrimaryExpression	'0'		5187475	1					
ANR	5187545	RelationalExpression	c > '9'		5187475	1		>			
ANR	5187546	Identifier	c		5187475	0					
ANR	5187547	PrimaryExpression	'9'		5187475	1					
ANR	5187548	CompoundStatement		11:26:239:239	5187475	1					
ANR	5187549	ExpressionStatement	* isNumeric = false	288:3:12658:12676	5187475	0	True				
ANR	5187550	AssignmentExpression	* isNumeric = false		5187475	0		=			
ANR	5187551	UnaryOperationExpression	* isNumeric		5187475	0					
ANR	5187552	UnaryOperator	*		5187475	0					
ANR	5187553	Identifier	isNumeric		5187475	1					
ANR	5187554	Identifier	false		5187475	1					
ANR	5187555	ExpressionStatement	"* isAlphanumeric &= strchr ( ALPHANUMERIC_CHARSET , c ) != NULL"	289:3:12681:12740	5187475	1	True				
ANR	5187556	AssignmentExpression	"* isAlphanumeric &= strchr ( ALPHANUMERIC_CHARSET , c ) != NULL"		5187475	0		&=			
ANR	5187557	UnaryOperationExpression	* isAlphanumeric		5187475	0					
ANR	5187558	UnaryOperator	*		5187475	0					
ANR	5187559	Identifier	isAlphanumeric		5187475	1					
ANR	5187560	EqualityExpression	"strchr ( ALPHANUMERIC_CHARSET , c ) != NULL"		5187475	1		!=			
ANR	5187561	CallExpression	"strchr ( ALPHANUMERIC_CHARSET , c )"		5187475	0					
ANR	5187562	Callee	strchr		5187475	0					
ANR	5187563	Identifier	strchr		5187475	0					
ANR	5187564	ArgumentList	ALPHANUMERIC_CHARSET		5187475	1					
ANR	5187565	Argument	ALPHANUMERIC_CHARSET		5187475	0					
ANR	5187566	Identifier	ALPHANUMERIC_CHARSET		5187475	0					
ANR	5187567	Argument	c		5187475	1					
ANR	5187568	Identifier	c		5187475	0					
ANR	5187569	Identifier	NULL		5187475	1					
ANR	5187570	IdentifierDeclStatement	long tempBits ;	293:1:12751:12764	5187475	5	True				
ANR	5187571	IdentifierDecl	tempBits		5187475	0					
ANR	5187572	IdentifierDeclType	long		5187475	0					
ANR	5187573	Identifier	tempBits		5187475	1					
ANR	5187574	IfStatement	if ( * isNumeric )		5187475	6					
ANR	5187575	Condition	* isNumeric	294:5:12771:12780	5187475	0	True				
ANR	5187576	UnaryOperationExpression	* isNumeric		5187475	0					
ANR	5187577	UnaryOperator	*		5187475	0					
ANR	5187578	Identifier	isNumeric		5187475	1					
ANR	5187579	CompoundStatement		18:17:369:369	5187475	1					
ANR	5187580	ExpressionStatement	tempBits = textLen * 3L + ( textLen + 2L ) / 3	295:2:12787:12831	5187475	0	True				
ANR	5187581	AssignmentExpression	tempBits = textLen * 3L + ( textLen + 2L ) / 3		5187475	0		=			
ANR	5187582	Identifier	tempBits		5187475	0					
ANR	5187583	AdditiveExpression	textLen * 3L + ( textLen + 2L ) / 3		5187475	1		+			
ANR	5187584	MultiplicativeExpression	textLen * 3L		5187475	0		*			
ANR	5187585	Identifier	textLen		5187475	0					
ANR	5187586	PrimaryExpression	3L		5187475	1					
ANR	5187587	MultiplicativeExpression	( textLen + 2L ) / 3		5187475	1		/			
ANR	5187588	AdditiveExpression	textLen + 2L		5187475	0		+			
ANR	5187589	Identifier	textLen		5187475	0					
ANR	5187590	PrimaryExpression	2L		5187475	1					
ANR	5187591	PrimaryExpression	3		5187475	1					
ANR	5187592	ElseStatement	else		5187475	0					
ANR	5187593	IfStatement	if ( * isAlphanumeric )		5187475	0					
ANR	5187594	Condition	* isAlphanumeric	296:12:12845:12859	5187475	0	True				
ANR	5187595	UnaryOperationExpression	* isAlphanumeric		5187475	0					
ANR	5187596	UnaryOperator	*		5187475	0					
ANR	5187597	Identifier	isAlphanumeric		5187475	1					
ANR	5187598	CompoundStatement		20:29:448:448	5187475	1					
ANR	5187599	ExpressionStatement	tempBits = textLen * 5L + ( textLen + 1L ) / 2	297:2:12866:12910	5187475	0	True				
ANR	5187600	AssignmentExpression	tempBits = textLen * 5L + ( textLen + 1L ) / 2		5187475	0		=			
ANR	5187601	Identifier	tempBits		5187475	0					
ANR	5187602	AdditiveExpression	textLen * 5L + ( textLen + 1L ) / 2		5187475	1		+			
ANR	5187603	MultiplicativeExpression	textLen * 5L		5187475	0		*			
ANR	5187604	Identifier	textLen		5187475	0					
ANR	5187605	PrimaryExpression	5L		5187475	1					
ANR	5187606	MultiplicativeExpression	( textLen + 1L ) / 2		5187475	1		/			
ANR	5187607	AdditiveExpression	textLen + 1L		5187475	0		+			
ANR	5187608	Identifier	textLen		5187475	0					
ANR	5187609	PrimaryExpression	1L		5187475	1					
ANR	5187610	PrimaryExpression	2		5187475	1					
ANR	5187611	ElseStatement	else		5187475	0					
ANR	5187612	CompoundStatement		22:8:506:506	5187475	0					
ANR	5187613	ExpressionStatement	tempBits = textLen * 8L	299:2:12938:12961	5187475	0	True				
ANR	5187614	AssignmentExpression	tempBits = textLen * 8L		5187475	0		=			
ANR	5187615	Identifier	tempBits		5187475	0					
ANR	5187616	MultiplicativeExpression	textLen * 8L		5187475	1		*			
ANR	5187617	Identifier	textLen		5187475	0					
ANR	5187618	PrimaryExpression	8L		5187475	1					
ANR	5187619	IfStatement	if ( tempBits > INT_MAX )		5187475	7					
ANR	5187620	Condition	tempBits > INT_MAX	302:5:12972:12989	5187475	0	True				
ANR	5187621	RelationalExpression	tempBits > INT_MAX		5187475	0		>			
ANR	5187622	Identifier	tempBits		5187475	0					
ANR	5187623	Identifier	INT_MAX		5187475	1					
ANR	5187624	CompoundStatement		26:25:578:578	5187475	1					
ANR	5187625	ReturnStatement	return - 1 ;	303:2:12996:13005	5187475	0	True				
ANR	5187626	UnaryOperationExpression	- 1		5187475	0					
ANR	5187627	UnaryOperator	-		5187475	0					
ANR	5187628	PrimaryExpression	1		5187475	1					
ANR	5187629	ExpressionStatement	* textBits = ( int ) tempBits	305:1:13011:13037	5187475	8	True				
ANR	5187630	AssignmentExpression	* textBits = ( int ) tempBits		5187475	0		=			
ANR	5187631	UnaryOperationExpression	* textBits		5187475	0					
ANR	5187632	UnaryOperator	*		5187475	0					
ANR	5187633	Identifier	textBits		5187475	1					
ANR	5187634	CastExpression	( int ) tempBits		5187475	1					
ANR	5187635	CastTarget	int		5187475	0					
ANR	5187636	Identifier	tempBits		5187475	1					
ANR	5187637	ReturnStatement	return textLen ;	306:1:13040:13054	5187475	9	True				
ANR	5187638	Identifier	textLen		5187475	0					
ANR	5187639	ReturnType	static int		5187475	1					
ANR	5187640	Identifier	getTextProperties		5187475	2					
ANR	5187641	ParameterList	"const char * text , bool * isNumeric , bool * isAlphanumeric , int * textBits"		5187475	3					
ANR	5187642	Parameter	const char * text	277:29:12341:12356	5187475	0	True				
ANR	5187643	ParameterType	const char *		5187475	0					
ANR	5187644	Identifier	text		5187475	1					
ANR	5187645	Parameter	bool * isNumeric	277:47:12359:12373	5187475	1	True				
ANR	5187646	ParameterType	bool *		5187475	0					
ANR	5187647	Identifier	isNumeric		5187475	1					
ANR	5187648	Parameter	bool * isAlphanumeric	277:64:12376:12395	5187475	2	True				
ANR	5187649	ParameterType	bool *		5187475	0					
ANR	5187650	Identifier	isAlphanumeric		5187475	1					
ANR	5187651	Parameter	int * textBits	277:86:12398:12410	5187475	3	True				
ANR	5187652	ParameterType	int *		5187475	0					
ANR	5187653	Identifier	textBits		5187475	1					
ANR	5187654	CFGEntryNode	ENTRY		5187475		True				
ANR	5187655	CFGExitNode	EXIT		5187475		True				
ANR	5187656	Symbol	c		5187475						
ANR	5187657	Symbol	NULL		5187475						
ANR	5187658	Symbol	ALPHANUMERIC_CHARSET		5187475						
ANR	5187659	Symbol	* isNumeric		5187475						
ANR	5187660	Symbol	* isAlphanumeric		5187475						
ANR	5187661	Symbol	false		5187475						
ANR	5187662	Symbol	strchr		5187475						
ANR	5187663	Symbol	p		5187475						
ANR	5187664	Symbol	INT16_MAX		5187475						
ANR	5187665	Symbol	textLen		5187475						
ANR	5187666	Symbol	isNumeric		5187475						
ANR	5187667	Symbol	textBits		5187475						
ANR	5187668	Symbol	* textBits		5187475						
ANR	5187669	Symbol	isAlphanumeric		5187475						
ANR	5187670	Symbol	true		5187475						
ANR	5187671	Symbol	INT_MAX		5187475						
ANR	5187672	Symbol	* p		5187475						
ANR	5187673	Symbol	text		5187475						
ANR	5187674	Symbol	tempBits		5187475						
ANR	5187675	Function	fitVersionToData	311:0:13206:14603							
ANR	5187676	FunctionDef	"fitVersionToData (int minVersion , int maxVersion , enum qrcodegen_Ecc ecl , int dataLen , int dataBitLen , int ver1To9LenBits , int ver10To26LenBits , int ver27To40LenBits)"		5187675	0					
ANR	5187677	CompoundStatement		312:100:13390:14603	5187675	0					
ANR	5187678	IfStatement	if ( qrcodegen_VERSION_MIN <= minVersion && minVersion <= maxVersion && maxVersion <= qrcodegen_VERSION_MAX )		5187675	0					
ANR	5187679	Condition	qrcodegen_VERSION_MIN <= minVersion && minVersion <= maxVersion && maxVersion <= qrcodegen_VERSION_MAX	314:5:13398:13499	5187675	0	True				
ANR	5187680	AndExpression	qrcodegen_VERSION_MIN <= minVersion && minVersion <= maxVersion && maxVersion <= qrcodegen_VERSION_MAX		5187675	0		&&			
ANR	5187681	RelationalExpression	qrcodegen_VERSION_MIN <= minVersion		5187675	0		<=			
ANR	5187682	Identifier	qrcodegen_VERSION_MIN		5187675	0					
ANR	5187683	Identifier	minVersion		5187675	1					
ANR	5187684	AndExpression	minVersion <= maxVersion && maxVersion <= qrcodegen_VERSION_MAX		5187675	1		&&			
ANR	5187685	RelationalExpression	minVersion <= maxVersion		5187675	0		<=			
ANR	5187686	Identifier	minVersion		5187675	0					
ANR	5187687	Identifier	maxVersion		5187675	1					
ANR	5187688	RelationalExpression	maxVersion <= qrcodegen_VERSION_MAX		5187675	1		<=			
ANR	5187689	Identifier	maxVersion		5187675	0					
ANR	5187690	Identifier	qrcodegen_VERSION_MAX		5187675	1					
ANR	5187691	CompoundStatement		20:2:503:514	5187675	1					
ANR	5187692	IfStatement	if ( ( int ) ecl < 0 || ( int ) ecl > 3 )		5187675	0					
ANR	5187693	Condition	( int ) ecl < 0 || ( int ) ecl > 3	315:6:13510:13539	5187675	0	True				
ANR	5187694	OrExpression	( int ) ecl < 0 || ( int ) ecl > 3		5187675	0		||			
ANR	5187695	RelationalExpression	( int ) ecl < 0		5187675	0		<			
ANR	5187696	CastExpression	( int ) ecl		5187675	0					
ANR	5187697	CastTarget	int		5187675	0					
ANR	5187698	Identifier	ecl		5187675	1					
ANR	5187699	PrimaryExpression	0		5187675	1					
ANR	5187700	RelationalExpression	( int ) ecl > 3		5187675	1		>			
ANR	5187701	CastExpression	( int ) ecl		5187675	0					
ANR	5187702	CastTarget	int		5187675	0					
ANR	5187703	Identifier	ecl		5187675	1					
ANR	5187704	PrimaryExpression	3		5187675	1					
ANR	5187705	CompoundStatement		4:38:151:151	5187675	1					
ANR	5187706	ReturnStatement	return 0 ;	316:3:13547:13555	5187675	0	True				
ANR	5187707	PrimaryExpression	0		5187675	0					
ANR	5187708	IfStatement	if ( dataLen < 0 || dataBitLen < 0 )		5187675	1					
ANR	5187709	Condition	dataLen < 0 || dataBitLen < 0	318:6:13567:13595	5187675	0	True				
ANR	5187710	OrExpression	dataLen < 0 || dataBitLen < 0		5187675	0		||			
ANR	5187711	RelationalExpression	dataLen < 0		5187675	0		<			
ANR	5187712	Identifier	dataLen		5187675	0					
ANR	5187713	PrimaryExpression	0		5187675	1					
ANR	5187714	RelationalExpression	dataBitLen < 0		5187675	1		<			
ANR	5187715	Identifier	dataBitLen		5187675	0					
ANR	5187716	PrimaryExpression	0		5187675	1					
ANR	5187717	CompoundStatement		7:37:207:207	5187675	1					
ANR	5187718	ReturnStatement	return 0 ;	319:3:13603:13611	5187675	0	True				
ANR	5187719	PrimaryExpression	0		5187675	0					
ANR	5187720	IfStatement	if ( ver1To9LenBits < 1 || ver1To9LenBits > 16 )		5187675	2					
ANR	5187721	Condition	ver1To9LenBits < 1 || ver1To9LenBits > 16	321:6:13623:13663	5187675	0	True				
ANR	5187722	OrExpression	ver1To9LenBits < 1 || ver1To9LenBits > 16		5187675	0		||			
ANR	5187723	RelationalExpression	ver1To9LenBits < 1		5187675	0		<			
ANR	5187724	Identifier	ver1To9LenBits		5187675	0					
ANR	5187725	PrimaryExpression	1		5187675	1					
ANR	5187726	RelationalExpression	ver1To9LenBits > 16		5187675	1		>			
ANR	5187727	Identifier	ver1To9LenBits		5187675	0					
ANR	5187728	PrimaryExpression	16		5187675	1					
ANR	5187729	CompoundStatement		10:49:275:275	5187675	1					
ANR	5187730	ReturnStatement	return 0 ;	323:3:13734:13742	5187675	0	True				
ANR	5187731	PrimaryExpression	0		5187675	0					
ANR	5187732	IfStatement	if ( ver10To26LenBits < 1 || ver10To26LenBits > 16 )		5187675	3					
ANR	5187733	Condition	ver10To26LenBits < 1 || ver10To26LenBits > 16	325:6:13754:13798	5187675	0	True				
ANR	5187734	OrExpression	ver10To26LenBits < 1 || ver10To26LenBits > 16		5187675	0		||			
ANR	5187735	RelationalExpression	ver10To26LenBits < 1		5187675	0		<			
ANR	5187736	Identifier	ver10To26LenBits		5187675	0					
ANR	5187737	PrimaryExpression	1		5187675	1					
ANR	5187738	RelationalExpression	ver10To26LenBits > 16		5187675	1		>			
ANR	5187739	Identifier	ver10To26LenBits		5187675	0					
ANR	5187740	PrimaryExpression	16		5187675	1					
ANR	5187741	CompoundStatement		14:53:410:410	5187675	1					
ANR	5187742	ReturnStatement	return 0 ;	326:3:13806:13814	5187675	0	True				
ANR	5187743	PrimaryExpression	0		5187675	0					
ANR	5187744	IfStatement	if ( ver27To40LenBits < 1 || ver27To40LenBits > 16 )		5187675	4					
ANR	5187745	Condition	ver27To40LenBits < 1 || ver27To40LenBits > 16	328:6:13826:13870	5187675	0	True				
ANR	5187746	OrExpression	ver27To40LenBits < 1 || ver27To40LenBits > 16		5187675	0		||			
ANR	5187747	RelationalExpression	ver27To40LenBits < 1		5187675	0		<			
ANR	5187748	Identifier	ver27To40LenBits		5187675	0					
ANR	5187749	PrimaryExpression	1		5187675	1					
ANR	5187750	RelationalExpression	ver27To40LenBits > 16		5187675	1		>			
ANR	5187751	Identifier	ver27To40LenBits		5187675	0					
ANR	5187752	PrimaryExpression	16		5187675	1					
ANR	5187753	CompoundStatement		17:53:482:482	5187675	1					
ANR	5187754	ReturnStatement	return 0 ;	329:3:13878:13886	5187675	0	True				
ANR	5187755	PrimaryExpression	0		5187675	0					
ANR	5187756	IdentifierDeclStatement	int version ;	331:2:13894:13905	5187675	5	True				
ANR	5187757	IdentifierDecl	version		5187675	0					
ANR	5187758	IdentifierDeclType	int		5187675	0					
ANR	5187759	Identifier	version		5187675	1					
ANR	5187760	ForStatement	for ( version = minVersion ; ; version ++ )		5187675	6					
ANR	5187761	ForInit	version = minVersion ;	332:7:13914:13934	5187675	0	True				
ANR	5187762	AssignmentExpression	version = minVersion		5187675	0		=			
ANR	5187763	Identifier	version		5187675	0					
ANR	5187764	Identifier	minVersion		5187675	1					
ANR	5187765	PostIncDecOperationExpression	version ++	332:30:13937:13945	5187675	1	True				
ANR	5187766	Identifier	version		5187675	0					
ANR	5187767	IncDec	++		5187675	1					
ANR	5187768	CompoundStatement		22:3:562:576	5187675	2					
ANR	5187769	IdentifierDeclStatement	int lengthBits ;	333:3:13953:13967	5187675	0	True				
ANR	5187770	IdentifierDecl	lengthBits		5187675	0					
ANR	5187771	IdentifierDeclType	int		5187675	0					
ANR	5187772	Identifier	lengthBits		5187675	1					
ANR	5187773	IfStatement	if ( version <= 9 )		5187675	1					
ANR	5187774	Condition	version <= 9	334:7:13976:13987	5187675	0	True				
ANR	5187775	RelationalExpression	version <= 9		5187675	0		<=			
ANR	5187776	Identifier	version		5187675	0					
ANR	5187777	PrimaryExpression	9		5187675	1					
ANR	5187778	CompoundStatement		23:21:599:599	5187675	1					
ANR	5187779	ExpressionStatement	lengthBits = ver1To9LenBits	335:4:13996:14023	5187675	0	True				
ANR	5187780	AssignmentExpression	lengthBits = ver1To9LenBits		5187675	0		=			
ANR	5187781	Identifier	lengthBits		5187675	0					
ANR	5187782	Identifier	ver1To9LenBits		5187675	1					
ANR	5187783	ElseStatement	else		5187675	0					
ANR	5187784	IfStatement	if ( version <= 26 )		5187675	0					
ANR	5187785	Condition	version <= 26	336:14:14039:14051	5187675	0	True				
ANR	5187786	RelationalExpression	version <= 26		5187675	0		<=			
ANR	5187787	Identifier	version		5187675	0					
ANR	5187788	PrimaryExpression	26		5187675	1					
ANR	5187789	CompoundStatement		25:29:663:663	5187675	1					
ANR	5187790	ExpressionStatement	lengthBits = ver10To26LenBits	337:4:14060:14089	5187675	0	True				
ANR	5187791	AssignmentExpression	lengthBits = ver10To26LenBits		5187675	0		=			
ANR	5187792	Identifier	lengthBits		5187675	0					
ANR	5187793	Identifier	ver10To26LenBits		5187675	1					
ANR	5187794	ElseStatement	else		5187675	0					
ANR	5187795	CompoundStatement		27:10:710:710	5187675	0					
ANR	5187796	ExpressionStatement	lengthBits = ver27To40LenBits	339:4:14107:14136	5187675	0	True				
ANR	5187797	AssignmentExpression	lengthBits = ver27To40LenBits		5187675	0		=			
ANR	5187798	Identifier	lengthBits		5187675	0					
ANR	5187799	Identifier	ver27To40LenBits		5187675	1					
ANR	5187800	IfStatement	if ( dataLen < ( 1L << lengthBits ) )		5187675	2					
ANR	5187801	Condition	dataLen < ( 1L << lengthBits )	341:7:14150:14177	5187675	0	True				
ANR	5187802	RelationalExpression	dataLen < ( 1L << lengthBits )		5187675	0		<			
ANR	5187803	Identifier	dataLen		5187675	0					
ANR	5187804	ShiftExpression	1L << lengthBits		5187675	1		<<			
ANR	5187805	PrimaryExpression	1L		5187675	0					
ANR	5187806	Identifier	lengthBits		5187675	1					
ANR	5187807	CompoundStatement		32:4:895:922	5187675	1					
ANR	5187808	IdentifierDeclStatement	"int dataCapacityBits = getNumDataCodewords ( version , ecl ) * 8 ;"	342:4:14186:14247	5187675	0	True				
ANR	5187809	IdentifierDecl	"dataCapacityBits = getNumDataCodewords ( version , ecl ) * 8"		5187675	0					
ANR	5187810	IdentifierDeclType	int		5187675	0					
ANR	5187811	Identifier	dataCapacityBits		5187675	1					
ANR	5187812	AssignmentExpression	"dataCapacityBits = getNumDataCodewords ( version , ecl ) * 8"		5187675	2		=			
ANR	5187813	Identifier	dataCapacityBits		5187675	0					
ANR	5187814	MultiplicativeExpression	"getNumDataCodewords ( version , ecl ) * 8"		5187675	1		*			
ANR	5187815	CallExpression	"getNumDataCodewords ( version , ecl )"		5187675	0					
ANR	5187816	Callee	getNumDataCodewords		5187675	0					
ANR	5187817	Identifier	getNumDataCodewords		5187675	0					
ANR	5187818	ArgumentList	version		5187675	1					
ANR	5187819	Argument	version		5187675	0					
ANR	5187820	Identifier	version		5187675	0					
ANR	5187821	Argument	ecl		5187675	1					
ANR	5187822	Identifier	ecl		5187675	0					
ANR	5187823	PrimaryExpression	8		5187675	1					
ANR	5187824	IdentifierDeclStatement	int header = 4 + lengthBits ;	343:4:14286:14313	5187675	1	True				
ANR	5187825	IdentifierDecl	header = 4 + lengthBits		5187675	0					
ANR	5187826	IdentifierDeclType	int		5187675	0					
ANR	5187827	Identifier	header		5187675	1					
ANR	5187828	AssignmentExpression	header = 4 + lengthBits		5187675	2		=			
ANR	5187829	Identifier	header		5187675	0					
ANR	5187830	AdditiveExpression	4 + lengthBits		5187675	1		+			
ANR	5187831	PrimaryExpression	4		5187675	0					
ANR	5187832	Identifier	lengthBits		5187675	1					
ANR	5187833	IfStatement	if ( dataBitLen <= INT_MAX - header && header + dataBitLen <= dataCapacityBits )		5187675	2					
ANR	5187834	Condition	dataBitLen <= INT_MAX - header && header + dataBitLen <= dataCapacityBits	344:8:14323:14395	5187675	0	True				
ANR	5187835	AndExpression	dataBitLen <= INT_MAX - header && header + dataBitLen <= dataCapacityBits		5187675	0		&&			
ANR	5187836	RelationalExpression	dataBitLen <= INT_MAX - header		5187675	0		<=			
ANR	5187837	Identifier	dataBitLen		5187675	0					
ANR	5187838	AdditiveExpression	INT_MAX - header		5187675	1		-			
ANR	5187839	Identifier	INT_MAX		5187675	0					
ANR	5187840	Identifier	header		5187675	1					
ANR	5187841	RelationalExpression	header + dataBitLen <= dataCapacityBits		5187675	1		<=			
ANR	5187842	AdditiveExpression	header + dataBitLen		5187675	0		+			
ANR	5187843	Identifier	header		5187675	0					
ANR	5187844	Identifier	dataBitLen		5187675	1					
ANR	5187845	Identifier	dataCapacityBits		5187675	1					
ANR	5187846	CompoundStatement		33:83:1007:1007	5187675	1					
ANR	5187847	ReturnStatement	return version ;	345:5:14405:14419	5187675	0	True				
ANR	5187848	Identifier	version		5187675	0					
ANR	5187849	IfStatement	if ( version >= maxVersion )		5187675	3					
ANR	5187850	Condition	version >= maxVersion	348:7:14486:14506	5187675	0	True				
ANR	5187851	RelationalExpression	version >= maxVersion		5187675	0		>=			
ANR	5187852	Identifier	version		5187675	0					
ANR	5187853	Identifier	maxVersion		5187675	1					
ANR	5187854	CompoundStatement		37:30:1118:1118	5187675	1					
ANR	5187855	BreakStatement	break ;	349:4:14573:14578	5187675	0	True				
ANR	5187856	ReturnStatement	return 0 ;	353:1:14593:14601	5187675	1	True				
ANR	5187857	PrimaryExpression	0		5187675	0					
ANR	5187858	ReturnType	static int		5187675	1					
ANR	5187859	Identifier	fitVersionToData		5187675	2					
ANR	5187860	ParameterList	"int minVersion , int maxVersion , enum qrcodegen_Ecc ecl , int dataLen , int dataBitLen , int ver1To9LenBits , int ver10To26LenBits , int ver27To40LenBits"		5187675	3					
ANR	5187861	Parameter	int minVersion	311:28:13234:13247	5187675	0	True				
ANR	5187862	ParameterType	int		5187675	0					
ANR	5187863	Identifier	minVersion		5187675	1					
ANR	5187864	Parameter	int maxVersion	311:44:13250:13263	5187675	1	True				
ANR	5187865	ParameterType	int		5187675	0					
ANR	5187866	Identifier	maxVersion		5187675	1					
ANR	5187867	Parameter	enum qrcodegen_Ecc ecl	311:60:13266:13287	5187675	2	True				
ANR	5187868	ParameterType	enum qrcodegen_Ecc		5187675	0					
ANR	5187869	Identifier	ecl		5187675	1					
ANR	5187870	Parameter	int dataLen	312:7:13297:13307	5187675	3	True				
ANR	5187871	ParameterType	int		5187675	0					
ANR	5187872	Identifier	dataLen		5187675	1					
ANR	5187873	Parameter	int dataBitLen	312:20:13310:13323	5187675	4	True				
ANR	5187874	ParameterType	int		5187675	0					
ANR	5187875	Identifier	dataBitLen		5187675	1					
ANR	5187876	Parameter	int ver1To9LenBits	312:36:13326:13343	5187675	5	True				
ANR	5187877	ParameterType	int		5187675	0					
ANR	5187878	Identifier	ver1To9LenBits		5187675	1					
ANR	5187879	Parameter	int ver10To26LenBits	312:56:13346:13365	5187675	6	True				
ANR	5187880	ParameterType	int		5187675	0					
ANR	5187881	Identifier	ver10To26LenBits		5187675	1					
ANR	5187882	Parameter	int ver27To40LenBits	312:78:13368:13387	5187675	7	True				
ANR	5187883	ParameterType	int		5187675	0					
ANR	5187884	Identifier	ver27To40LenBits		5187675	1					
ANR	5187885	CFGEntryNode	ENTRY		5187675		True				
ANR	5187886	CFGExitNode	EXIT		5187675		True				
ANR	5187887	InfiniteForNode	true		5187675		True				
ANR	5187888	Symbol	getNumDataCodewords		5187675						
ANR	5187889	Symbol	minVersion		5187675						
ANR	5187890	Symbol	lengthBits		5187675						
ANR	5187891	Symbol	ver27To40LenBits		5187675						
ANR	5187892	Symbol	version		5187675						
ANR	5187893	Symbol	dataLen		5187675						
ANR	5187894	Symbol	ver10To26LenBits		5187675						
ANR	5187895	Symbol	ecl		5187675						
ANR	5187896	Symbol	dataBitLen		5187675						
ANR	5187897	Symbol	qrcodegen_VERSION_MIN		5187675						
ANR	5187898	Symbol	INT_MAX		5187675						
ANR	5187899	Symbol	maxVersion		5187675						
ANR	5187900	Symbol	header		5187675						
ANR	5187901	Symbol	ver1To9LenBits		5187675						
ANR	5187902	Symbol	qrcodegen_VERSION_MAX		5187675						
ANR	5187903	Symbol	dataCapacityBits		5187675						
ANR	5187904	Function	encodeQrCodeTail	362:0:15142:17230							
ANR	5187905	FunctionDef	"encodeQrCodeTail (ut8 dataAndQrcode [ ] , int bitLen , ut8 tempBuffer [ ] , int version , enum qrcodegen_Ecc ecl , enum qrcodegen_Mask mask , bool boostEcl)"		5187904	0					
ANR	5187906	CompoundStatement		362:158:15300:17230	5187904	0					
ANR	5187907	IfStatement	if ( boostEcl )		5187904	0					
ANR	5187908	Condition	boostEcl	364:5:15308:15315	5187904	0	True				
ANR	5187909	Identifier	boostEcl		5187904	0					
ANR	5187910	CompoundStatement		3:15:17:17	5187904	1					
ANR	5187911	IfStatement	"if ( bitLen <= getNumDataCodewords ( version , qrcodegen_Ecc_MEDIUM ) * 8 )"		5187904	0					
ANR	5187912	Condition	"bitLen <= getNumDataCodewords ( version , qrcodegen_Ecc_MEDIUM ) * 8"	365:6:15326:15392	5187904	0	True				
ANR	5187913	RelationalExpression	"bitLen <= getNumDataCodewords ( version , qrcodegen_Ecc_MEDIUM ) * 8"		5187904	0		<=			
ANR	5187914	Identifier	bitLen		5187904	0					
ANR	5187915	MultiplicativeExpression	"getNumDataCodewords ( version , qrcodegen_Ecc_MEDIUM ) * 8"		5187904	1		*			
ANR	5187916	CallExpression	"getNumDataCodewords ( version , qrcodegen_Ecc_MEDIUM )"		5187904	0					
ANR	5187917	Callee	getNumDataCodewords		5187904	0					
ANR	5187918	Identifier	getNumDataCodewords		5187904	0					
ANR	5187919	ArgumentList	version		5187904	1					
ANR	5187920	Argument	version		5187904	0					
ANR	5187921	Identifier	version		5187904	0					
ANR	5187922	Argument	qrcodegen_Ecc_MEDIUM		5187904	1					
ANR	5187923	Identifier	qrcodegen_Ecc_MEDIUM		5187904	0					
ANR	5187924	PrimaryExpression	8		5187904	1					
ANR	5187925	CompoundStatement		4:75:94:94	5187904	1					
ANR	5187926	ExpressionStatement	ecl = qrcodegen_Ecc_MEDIUM	366:3:15400:15426	5187904	0	True				
ANR	5187927	AssignmentExpression	ecl = qrcodegen_Ecc_MEDIUM		5187904	0		=			
ANR	5187928	Identifier	ecl		5187904	0					
ANR	5187929	Identifier	qrcodegen_Ecc_MEDIUM		5187904	1					
ANR	5187930	IfStatement	"if ( bitLen <= getNumDataCodewords ( version , qrcodegen_Ecc_QUARTILE ) * 8 )"		5187904	1					
ANR	5187931	Condition	"bitLen <= getNumDataCodewords ( version , qrcodegen_Ecc_QUARTILE ) * 8"	368:6:15438:15504	5187904	0	True				
ANR	5187932	RelationalExpression	"bitLen <= getNumDataCodewords ( version , qrcodegen_Ecc_QUARTILE ) * 8"		5187904	0		<=			
ANR	5187933	Identifier	bitLen		5187904	0					
ANR	5187934	MultiplicativeExpression	"getNumDataCodewords ( version , qrcodegen_Ecc_QUARTILE ) * 8"		5187904	1		*			
ANR	5187935	CallExpression	"getNumDataCodewords ( version , qrcodegen_Ecc_QUARTILE )"		5187904	0					
ANR	5187936	Callee	getNumDataCodewords		5187904	0					
ANR	5187937	Identifier	getNumDataCodewords		5187904	0					
ANR	5187938	ArgumentList	version		5187904	1					
ANR	5187939	Argument	version		5187904	0					
ANR	5187940	Identifier	version		5187904	0					
ANR	5187941	Argument	qrcodegen_Ecc_QUARTILE		5187904	1					
ANR	5187942	Identifier	qrcodegen_Ecc_QUARTILE		5187904	0					
ANR	5187943	PrimaryExpression	8		5187904	1					
ANR	5187944	CompoundStatement		7:75:206:206	5187904	1					
ANR	5187945	ExpressionStatement	ecl = qrcodegen_Ecc_QUARTILE	369:3:15512:15540	5187904	0	True				
ANR	5187946	AssignmentExpression	ecl = qrcodegen_Ecc_QUARTILE		5187904	0		=			
ANR	5187947	Identifier	ecl		5187904	0					
ANR	5187948	Identifier	qrcodegen_Ecc_QUARTILE		5187904	1					
ANR	5187949	IfStatement	"if ( bitLen <= getNumDataCodewords ( version , qrcodegen_Ecc_HIGH ) * 8 )"		5187904	2					
ANR	5187950	Condition	"bitLen <= getNumDataCodewords ( version , qrcodegen_Ecc_HIGH ) * 8"	371:6:15552:15618	5187904	0	True				
ANR	5187951	RelationalExpression	"bitLen <= getNumDataCodewords ( version , qrcodegen_Ecc_HIGH ) * 8"		5187904	0		<=			
ANR	5187952	Identifier	bitLen		5187904	0					
ANR	5187953	MultiplicativeExpression	"getNumDataCodewords ( version , qrcodegen_Ecc_HIGH ) * 8"		5187904	1		*			
ANR	5187954	CallExpression	"getNumDataCodewords ( version , qrcodegen_Ecc_HIGH )"		5187904	0					
ANR	5187955	Callee	getNumDataCodewords		5187904	0					
ANR	5187956	Identifier	getNumDataCodewords		5187904	0					
ANR	5187957	ArgumentList	version		5187904	1					
ANR	5187958	Argument	version		5187904	0					
ANR	5187959	Identifier	version		5187904	0					
ANR	5187960	Argument	qrcodegen_Ecc_HIGH		5187904	1					
ANR	5187961	Identifier	qrcodegen_Ecc_HIGH		5187904	0					
ANR	5187962	PrimaryExpression	8		5187904	1					
ANR	5187963	CompoundStatement		10:75:320:320	5187904	1					
ANR	5187964	ExpressionStatement	ecl = qrcodegen_Ecc_HIGH	372:3:15626:15650	5187904	0	True				
ANR	5187965	AssignmentExpression	ecl = qrcodegen_Ecc_HIGH		5187904	0		=			
ANR	5187966	Identifier	ecl		5187904	0					
ANR	5187967	Identifier	qrcodegen_Ecc_HIGH		5187904	1					
ANR	5187968	IdentifierDeclStatement	"int dataCapacityBits = getNumDataCodewords ( version , ecl ) * 8 ;"	375:1:15660:15721	5187904	1	True				
ANR	5187969	IdentifierDecl	"dataCapacityBits = getNumDataCodewords ( version , ecl ) * 8"		5187904	0					
ANR	5187970	IdentifierDeclType	int		5187904	0					
ANR	5187971	Identifier	dataCapacityBits		5187904	1					
ANR	5187972	AssignmentExpression	"dataCapacityBits = getNumDataCodewords ( version , ecl ) * 8"		5187904	2		=			
ANR	5187973	Identifier	dataCapacityBits		5187904	0					
ANR	5187974	MultiplicativeExpression	"getNumDataCodewords ( version , ecl ) * 8"		5187904	1		*			
ANR	5187975	CallExpression	"getNumDataCodewords ( version , ecl )"		5187904	0					
ANR	5187976	Callee	getNumDataCodewords		5187904	0					
ANR	5187977	Identifier	getNumDataCodewords		5187904	0					
ANR	5187978	ArgumentList	version		5187904	1					
ANR	5187979	Argument	version		5187904	0					
ANR	5187980	Identifier	version		5187904	0					
ANR	5187981	Argument	ecl		5187904	1					
ANR	5187982	Identifier	ecl		5187904	0					
ANR	5187983	PrimaryExpression	8		5187904	1					
ANR	5187984	IdentifierDeclStatement	int terminatorBits = dataCapacityBits - bitLen ;	378:1:15771:15817	5187904	2	True				
ANR	5187985	IdentifierDecl	terminatorBits = dataCapacityBits - bitLen		5187904	0					
ANR	5187986	IdentifierDeclType	int		5187904	0					
ANR	5187987	Identifier	terminatorBits		5187904	1					
ANR	5187988	AssignmentExpression	terminatorBits = dataCapacityBits - bitLen		5187904	2		=			
ANR	5187989	Identifier	terminatorBits		5187904	0					
ANR	5187990	AdditiveExpression	dataCapacityBits - bitLen		5187904	1		-			
ANR	5187991	Identifier	dataCapacityBits		5187904	0					
ANR	5187992	Identifier	bitLen		5187904	1					
ANR	5187993	IfStatement	if ( terminatorBits > 4 )		5187904	3					
ANR	5187994	Condition	terminatorBits > 4	379:5:15824:15841	5187904	0	True				
ANR	5187995	RelationalExpression	terminatorBits > 4		5187904	0		>			
ANR	5187996	Identifier	terminatorBits		5187904	0					
ANR	5187997	PrimaryExpression	4		5187904	1					
ANR	5187998	CompoundStatement		18:25:543:543	5187904	1					
ANR	5187999	ExpressionStatement	terminatorBits = 4	380:2:15848:15866	5187904	0	True				
ANR	5188000	AssignmentExpression	terminatorBits = 4		5187904	0		=			
ANR	5188001	Identifier	terminatorBits		5187904	0					
ANR	5188002	PrimaryExpression	4		5187904	1					
ANR	5188003	ExpressionStatement	"appendBitsToBuffer ( 0 , terminatorBits , dataAndQrcode , & bitLen )"	382:1:15872:15934	5187904	4	True				
ANR	5188004	CallExpression	"appendBitsToBuffer ( 0 , terminatorBits , dataAndQrcode , & bitLen )"		5187904	0					
ANR	5188005	Callee	appendBitsToBuffer		5187904	0					
ANR	5188006	Identifier	appendBitsToBuffer		5187904	0					
ANR	5188007	ArgumentList	0		5187904	1					
ANR	5188008	Argument	0		5187904	0					
ANR	5188009	PrimaryExpression	0		5187904	0					
ANR	5188010	Argument	terminatorBits		5187904	1					
ANR	5188011	Identifier	terminatorBits		5187904	0					
ANR	5188012	Argument	dataAndQrcode		5187904	2					
ANR	5188013	Identifier	dataAndQrcode		5187904	0					
ANR	5188014	Argument	& bitLen		5187904	3					
ANR	5188015	UnaryOperationExpression	& bitLen		5187904	0					
ANR	5188016	UnaryOperator	&		5187904	0					
ANR	5188017	Identifier	bitLen		5187904	1					
ANR	5188018	ExpressionStatement	"appendBitsToBuffer ( 0 , ( 8 - bitLen % 8 ) % 8 , dataAndQrcode , & bitLen )"	383:1:15937:16005	5187904	5	True				
ANR	5188019	CallExpression	"appendBitsToBuffer ( 0 , ( 8 - bitLen % 8 ) % 8 , dataAndQrcode , & bitLen )"		5187904	0					
ANR	5188020	Callee	appendBitsToBuffer		5187904	0					
ANR	5188021	Identifier	appendBitsToBuffer		5187904	0					
ANR	5188022	ArgumentList	0		5187904	1					
ANR	5188023	Argument	0		5187904	0					
ANR	5188024	PrimaryExpression	0		5187904	0					
ANR	5188025	Argument	( 8 - bitLen % 8 ) % 8		5187904	1					
ANR	5188026	MultiplicativeExpression	( 8 - bitLen % 8 ) % 8		5187904	0		%			
ANR	5188027	AdditiveExpression	8 - bitLen % 8		5187904	0		-			
ANR	5188028	PrimaryExpression	8		5187904	0					
ANR	5188029	MultiplicativeExpression	bitLen % 8		5187904	1		%			
ANR	5188030	Identifier	bitLen		5187904	0					
ANR	5188031	PrimaryExpression	8		5187904	1					
ANR	5188032	PrimaryExpression	8		5187904	1					
ANR	5188033	Argument	dataAndQrcode		5187904	2					
ANR	5188034	Identifier	dataAndQrcode		5187904	0					
ANR	5188035	Argument	& bitLen		5187904	3					
ANR	5188036	UnaryOperationExpression	& bitLen		5187904	0					
ANR	5188037	UnaryOperator	&		5187904	0					
ANR	5188038	Identifier	bitLen		5187904	1					
ANR	5188039	IdentifierDeclStatement	ut8 padByte ;	384:1:16008:16019	5187904	6	True				
ANR	5188040	IdentifierDecl	padByte		5187904	0					
ANR	5188041	IdentifierDeclType	ut8		5187904	0					
ANR	5188042	Identifier	padByte		5187904	1					
ANR	5188043	ForStatement	for ( padByte = 0xEC ; bitLen < dataCapacityBits ; padByte ^= 0xEC ^ 0x11 )		5187904	7					
ANR	5188044	ForInit	padByte = 0xEC ;	385:6:16027:16041	5187904	0	True				
ANR	5188045	AssignmentExpression	padByte = 0xEC		5187904	0		=			
ANR	5188046	Identifier	padByte		5187904	0					
ANR	5188047	PrimaryExpression	0xEC		5187904	1					
ANR	5188048	Condition	bitLen < dataCapacityBits	385:22:16043:16067	5187904	1	True				
ANR	5188049	RelationalExpression	bitLen < dataCapacityBits		5187904	0		<			
ANR	5188050	Identifier	bitLen		5187904	0					
ANR	5188051	Identifier	dataCapacityBits		5187904	1					
ANR	5188052	AssignmentExpression	padByte ^= 0xEC ^ 0x11	385:49:16070:16091	5187904	2	True	^=			
ANR	5188053	Identifier	padByte		5187904	0					
ANR	5188054	ExclusiveOrExpression	0xEC ^ 0x11		5187904	1		^			
ANR	5188055	PrimaryExpression	0xEC		5187904	0					
ANR	5188056	PrimaryExpression	0x11		5187904	1					
ANR	5188057	CompoundStatement		24:73:793:793	5187904	3					
ANR	5188058	ExpressionStatement	"appendBitsToBuffer ( padByte , 8 , dataAndQrcode , & bitLen )"	386:2:16098:16153	5187904	0	True				
ANR	5188059	CallExpression	"appendBitsToBuffer ( padByte , 8 , dataAndQrcode , & bitLen )"		5187904	0					
ANR	5188060	Callee	appendBitsToBuffer		5187904	0					
ANR	5188061	Identifier	appendBitsToBuffer		5187904	0					
ANR	5188062	ArgumentList	padByte		5187904	1					
ANR	5188063	Argument	padByte		5187904	0					
ANR	5188064	Identifier	padByte		5187904	0					
ANR	5188065	Argument	8		5187904	1					
ANR	5188066	PrimaryExpression	8		5187904	0					
ANR	5188067	Argument	dataAndQrcode		5187904	2					
ANR	5188068	Identifier	dataAndQrcode		5187904	0					
ANR	5188069	Argument	& bitLen		5187904	3					
ANR	5188070	UnaryOperationExpression	& bitLen		5187904	0					
ANR	5188071	UnaryOperator	&		5187904	0					
ANR	5188072	Identifier	bitLen		5187904	1					
ANR	5188073	IfStatement	if ( bitLen % 8 )		5187904	8					
ANR	5188074	Condition	bitLen % 8	388:5:16163:16172	5187904	0	True				
ANR	5188075	MultiplicativeExpression	bitLen % 8		5187904	0		%			
ANR	5188076	Identifier	bitLen		5187904	0					
ANR	5188077	PrimaryExpression	8		5187904	1					
ANR	5188078	CompoundStatement		27:17:874:874	5187904	1					
ANR	5188079	ReturnStatement	return ;	389:2:16179:16185	5187904	0	True				
ANR	5188080	ExpressionStatement	"appendErrorCorrection ( dataAndQrcode , version , ecl , tempBuffer )"	393:1:16236:16299	5187904	9	True				
ANR	5188081	CallExpression	"appendErrorCorrection ( dataAndQrcode , version , ecl , tempBuffer )"		5187904	0					
ANR	5188082	Callee	appendErrorCorrection		5187904	0					
ANR	5188083	Identifier	appendErrorCorrection		5187904	0					
ANR	5188084	ArgumentList	dataAndQrcode		5187904	1					
ANR	5188085	Argument	dataAndQrcode		5187904	0					
ANR	5188086	Identifier	dataAndQrcode		5187904	0					
ANR	5188087	Argument	version		5187904	1					
ANR	5188088	Identifier	version		5187904	0					
ANR	5188089	Argument	ecl		5187904	2					
ANR	5188090	Identifier	ecl		5187904	0					
ANR	5188091	Argument	tempBuffer		5187904	3					
ANR	5188092	Identifier	tempBuffer		5187904	0					
ANR	5188093	ExpressionStatement	"initializeFunctionModules ( version , dataAndQrcode )"	394:1:16302:16352	5187904	10	True				
ANR	5188094	CallExpression	"initializeFunctionModules ( version , dataAndQrcode )"		5187904	0					
ANR	5188095	Callee	initializeFunctionModules		5187904	0					
ANR	5188096	Identifier	initializeFunctionModules		5187904	0					
ANR	5188097	ArgumentList	version		5187904	1					
ANR	5188098	Argument	version		5187904	0					
ANR	5188099	Identifier	version		5187904	0					
ANR	5188100	Argument	dataAndQrcode		5187904	1					
ANR	5188101	Identifier	dataAndQrcode		5187904	0					
ANR	5188102	IfStatement	"if ( ! drawCodewords ( tempBuffer , getNumRawDataModules ( version ) / 8 , dataAndQrcode ) )"		5187904	11					
ANR	5188103	Condition	"! drawCodewords ( tempBuffer , getNumRawDataModules ( version ) / 8 , dataAndQrcode )"	395:5:16359:16436	5187904	0	True				
ANR	5188104	UnaryOperationExpression	"! drawCodewords ( tempBuffer , getNumRawDataModules ( version ) / 8 , dataAndQrcode )"		5187904	0					
ANR	5188105	UnaryOperator	!		5187904	0					
ANR	5188106	CallExpression	"drawCodewords ( tempBuffer , getNumRawDataModules ( version ) / 8 , dataAndQrcode )"		5187904	1					
ANR	5188107	Callee	drawCodewords		5187904	0					
ANR	5188108	Identifier	drawCodewords		5187904	0					
ANR	5188109	ArgumentList	tempBuffer		5187904	1					
ANR	5188110	Argument	tempBuffer		5187904	0					
ANR	5188111	Identifier	tempBuffer		5187904	0					
ANR	5188112	Argument	getNumRawDataModules ( version ) / 8		5187904	1					
ANR	5188113	MultiplicativeExpression	getNumRawDataModules ( version ) / 8		5187904	0		/			
ANR	5188114	CallExpression	getNumRawDataModules ( version )		5187904	0					
ANR	5188115	Callee	getNumRawDataModules		5187904	0					
ANR	5188116	Identifier	getNumRawDataModules		5187904	0					
ANR	5188117	ArgumentList	version		5187904	1					
ANR	5188118	Argument	version		5187904	0					
ANR	5188119	Identifier	version		5187904	0					
ANR	5188120	PrimaryExpression	8		5187904	1					
ANR	5188121	Argument	dataAndQrcode		5187904	2					
ANR	5188122	Identifier	dataAndQrcode		5187904	0					
ANR	5188123	CompoundStatement		34:85:1138:1138	5187904	1					
ANR	5188124	ReturnStatement	return ;	396:2:16443:16449	5187904	0	True				
ANR	5188125	ExpressionStatement	"drawWhiteFunctionModules ( dataAndQrcode , version )"	398:1:16455:16504	5187904	12	True				
ANR	5188126	CallExpression	"drawWhiteFunctionModules ( dataAndQrcode , version )"		5187904	0					
ANR	5188127	Callee	drawWhiteFunctionModules		5187904	0					
ANR	5188128	Identifier	drawWhiteFunctionModules		5187904	0					
ANR	5188129	ArgumentList	dataAndQrcode		5187904	1					
ANR	5188130	Argument	dataAndQrcode		5187904	0					
ANR	5188131	Identifier	dataAndQrcode		5187904	0					
ANR	5188132	Argument	version		5187904	1					
ANR	5188133	Identifier	version		5187904	0					
ANR	5188134	ExpressionStatement	"initializeFunctionModules ( version , tempBuffer )"	399:1:16507:16554	5187904	13	True				
ANR	5188135	CallExpression	"initializeFunctionModules ( version , tempBuffer )"		5187904	0					
ANR	5188136	Callee	initializeFunctionModules		5187904	0					
ANR	5188137	Identifier	initializeFunctionModules		5187904	0					
ANR	5188138	ArgumentList	version		5187904	1					
ANR	5188139	Argument	version		5187904	0					
ANR	5188140	Identifier	version		5187904	0					
ANR	5188141	Argument	tempBuffer		5187904	1					
ANR	5188142	Identifier	tempBuffer		5187904	0					
ANR	5188143	IfStatement	if ( mask == qrcodegen_Mask_AUTO )		5187904	14					
ANR	5188144	Condition	mask == qrcodegen_Mask_AUTO	402:5:16581:16607	5187904	0	True				
ANR	5188145	EqualityExpression	mask == qrcodegen_Mask_AUTO		5187904	0		==			
ANR	5188146	Identifier	mask		5187904	0					
ANR	5188147	Identifier	qrcodegen_Mask_AUTO		5187904	1					
ANR	5188148	CompoundStatement		43:2:1377:1382	5187904	1					
ANR	5188149	IdentifierDeclStatement	long minPenalty = LONG_MAX ;	403:2:16648:16674	5187904	0	True				
ANR	5188150	IdentifierDecl	minPenalty = LONG_MAX		5187904	0					
ANR	5188151	IdentifierDeclType	long		5187904	0					
ANR	5188152	Identifier	minPenalty		5187904	1					
ANR	5188153	AssignmentExpression	minPenalty = LONG_MAX		5187904	2		=			
ANR	5188154	Identifier	LONG_MAX		5187904	0					
ANR	5188155	Identifier	LONG_MAX		5187904	1					
ANR	5188156	IdentifierDeclStatement	int i ;	404:2:16678:16683	5187904	1	True				
ANR	5188157	IdentifierDecl	i		5187904	0					
ANR	5188158	IdentifierDeclType	int		5187904	0					
ANR	5188159	Identifier	i		5187904	1					
ANR	5188160	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		5187904	2					
ANR	5188161	ForInit	i = 0 ;	405:7:16692:16697	5187904	0	True				
ANR	5188162	AssignmentExpression	i = 0		5187904	0		=			
ANR	5188163	Identifier	i		5187904	0					
ANR	5188164	PrimaryExpression	0		5187904	1					
ANR	5188165	Condition	i < 8	405:14:16699:16703	5187904	1	True				
ANR	5188166	RelationalExpression	i < 8		5187904	0		<			
ANR	5188167	Identifier	i		5187904	0					
ANR	5188168	PrimaryExpression	8		5187904	1					
ANR	5188169	PostIncDecOperationExpression	i ++	405:21:16706:16708	5187904	2	True				
ANR	5188170	Identifier	i		5187904	0					
ANR	5188171	IncDec	++		5187904	1					
ANR	5188172	CompoundStatement		47:3:1547:1593	5187904	3					
ANR	5188173	ExpressionStatement	"drawFormatBits ( ecl , ( enum qrcodegen_Mask ) i , dataAndQrcode )"	406:3:16716:16776	5187904	0	True				
ANR	5188174	CallExpression	"drawFormatBits ( ecl , ( enum qrcodegen_Mask ) i , dataAndQrcode )"		5187904	0					
ANR	5188175	Callee	drawFormatBits		5187904	0					
ANR	5188176	Identifier	drawFormatBits		5187904	0					
ANR	5188177	ArgumentList	ecl		5187904	1					
ANR	5188178	Argument	ecl		5187904	0					
ANR	5188179	Identifier	ecl		5187904	0					
ANR	5188180	Argument	( enum qrcodegen_Mask ) i		5187904	1					
ANR	5188181	CastExpression	( enum qrcodegen_Mask ) i		5187904	0					
ANR	5188182	CastTarget	enum qrcodegen_Mask		5187904	0					
ANR	5188183	Identifier	i		5187904	1					
ANR	5188184	Argument	dataAndQrcode		5187904	2					
ANR	5188185	Identifier	dataAndQrcode		5187904	0					
ANR	5188186	ExpressionStatement	"applyMask ( tempBuffer , dataAndQrcode , ( enum qrcodegen_Mask ) i )"	407:3:16781:16843	5187904	1	True				
ANR	5188187	CallExpression	"applyMask ( tempBuffer , dataAndQrcode , ( enum qrcodegen_Mask ) i )"		5187904	0					
ANR	5188188	Callee	applyMask		5187904	0					
ANR	5188189	Identifier	applyMask		5187904	0					
ANR	5188190	ArgumentList	tempBuffer		5187904	1					
ANR	5188191	Argument	tempBuffer		5187904	0					
ANR	5188192	Identifier	tempBuffer		5187904	0					
ANR	5188193	Argument	dataAndQrcode		5187904	1					
ANR	5188194	Identifier	dataAndQrcode		5187904	0					
ANR	5188195	Argument	( enum qrcodegen_Mask ) i		5187904	2					
ANR	5188196	CastExpression	( enum qrcodegen_Mask ) i		5187904	0					
ANR	5188197	CastTarget	enum qrcodegen_Mask		5187904	0					
ANR	5188198	Identifier	i		5187904	1					
ANR	5188199	IdentifierDeclStatement	long penalty = getPenaltyScore ( dataAndQrcode ) ;	408:3:16848:16894	5187904	2	True				
ANR	5188200	IdentifierDecl	penalty = getPenaltyScore ( dataAndQrcode )		5187904	0					
ANR	5188201	IdentifierDeclType	long		5187904	0					
ANR	5188202	Identifier	penalty		5187904	1					
ANR	5188203	AssignmentExpression	penalty = getPenaltyScore ( dataAndQrcode )		5187904	2		=			
ANR	5188204	Identifier	penalty		5187904	0					
ANR	5188205	CallExpression	getPenaltyScore ( dataAndQrcode )		5187904	1					
ANR	5188206	Callee	getPenaltyScore		5187904	0					
ANR	5188207	Identifier	getPenaltyScore		5187904	0					
ANR	5188208	ArgumentList	dataAndQrcode		5187904	1					
ANR	5188209	Argument	dataAndQrcode		5187904	0					
ANR	5188210	Identifier	dataAndQrcode		5187904	0					
ANR	5188211	IfStatement	if ( penalty < minPenalty )		5187904	3					
ANR	5188212	Condition	penalty < minPenalty	409:7:16903:16922	5187904	0	True				
ANR	5188213	RelationalExpression	penalty < minPenalty		5187904	0		<			
ANR	5188214	Identifier	penalty		5187904	0					
ANR	5188215	Identifier	minPenalty		5187904	1					
ANR	5188216	CompoundStatement		48:29:1624:1624	5187904	1					
ANR	5188217	ExpressionStatement	mask = ( enum qrcodegen_Mask ) i	410:4:16931:16961	5187904	0	True				
ANR	5188218	AssignmentExpression	mask = ( enum qrcodegen_Mask ) i		5187904	0		=			
ANR	5188219	Identifier	mask		5187904	0					
ANR	5188220	CastExpression	( enum qrcodegen_Mask ) i		5187904	1					
ANR	5188221	CastTarget	enum qrcodegen_Mask		5187904	0					
ANR	5188222	Identifier	i		5187904	1					
ANR	5188223	ExpressionStatement	minPenalty = penalty	411:4:16967:16987	5187904	1	True				
ANR	5188224	AssignmentExpression	minPenalty = penalty		5187904	0		=			
ANR	5188225	Identifier	minPenalty		5187904	0					
ANR	5188226	Identifier	penalty		5187904	1					
ANR	5188227	ExpressionStatement	"applyMask ( tempBuffer , dataAndQrcode , ( enum qrcodegen_Mask ) i )"	413:3:16997:17059	5187904	4	True				
ANR	5188228	CallExpression	"applyMask ( tempBuffer , dataAndQrcode , ( enum qrcodegen_Mask ) i )"		5187904	0					
ANR	5188229	Callee	applyMask		5187904	0					
ANR	5188230	Identifier	applyMask		5187904	0					
ANR	5188231	ArgumentList	tempBuffer		5187904	1					
ANR	5188232	Argument	tempBuffer		5187904	0					
ANR	5188233	Identifier	tempBuffer		5187904	0					
ANR	5188234	Argument	dataAndQrcode		5187904	1					
ANR	5188235	Identifier	dataAndQrcode		5187904	0					
ANR	5188236	Argument	( enum qrcodegen_Mask ) i		5187904	2					
ANR	5188237	CastExpression	( enum qrcodegen_Mask ) i		5187904	0					
ANR	5188238	CastTarget	enum qrcodegen_Mask		5187904	0					
ANR	5188239	Identifier	i		5187904	1					
ANR	5188240	IfStatement	if ( mask < 0 || mask > 7 )		5187904	15					
ANR	5188241	Condition	mask < 0 || mask > 7	416:5:17103:17122	5187904	0	True				
ANR	5188242	OrExpression	mask < 0 || mask > 7		5187904	0		||			
ANR	5188243	RelationalExpression	mask < 0		5187904	0		<			
ANR	5188244	Identifier	mask		5187904	0					
ANR	5188245	PrimaryExpression	0		5187904	1					
ANR	5188246	RelationalExpression	mask > 7		5187904	1		>			
ANR	5188247	Identifier	mask		5187904	0					
ANR	5188248	PrimaryExpression	7		5187904	1					
ANR	5188249	CompoundStatement		55:27:1824:1824	5187904	1					
ANR	5188250	ReturnStatement	return ;	417:2:17129:17135	5187904	0	True				
ANR	5188251	ExpressionStatement	"drawFormatBits ( ecl , mask , dataAndQrcode )"	419:1:17141:17182	5187904	16	True				
ANR	5188252	CallExpression	"drawFormatBits ( ecl , mask , dataAndQrcode )"		5187904	0					
ANR	5188253	Callee	drawFormatBits		5187904	0					
ANR	5188254	Identifier	drawFormatBits		5187904	0					
ANR	5188255	ArgumentList	ecl		5187904	1					
ANR	5188256	Argument	ecl		5187904	0					
ANR	5188257	Identifier	ecl		5187904	0					
ANR	5188258	Argument	mask		5187904	1					
ANR	5188259	Identifier	mask		5187904	0					
ANR	5188260	Argument	dataAndQrcode		5187904	2					
ANR	5188261	Identifier	dataAndQrcode		5187904	0					
ANR	5188262	ExpressionStatement	"applyMask ( tempBuffer , dataAndQrcode , mask )"	420:1:17185:17228	5187904	17	True				
ANR	5188263	CallExpression	"applyMask ( tempBuffer , dataAndQrcode , mask )"		5187904	0					
ANR	5188264	Callee	applyMask		5187904	0					
ANR	5188265	Identifier	applyMask		5187904	0					
ANR	5188266	ArgumentList	tempBuffer		5187904	1					
ANR	5188267	Argument	tempBuffer		5187904	0					
ANR	5188268	Identifier	tempBuffer		5187904	0					
ANR	5188269	Argument	dataAndQrcode		5187904	1					
ANR	5188270	Identifier	dataAndQrcode		5187904	0					
ANR	5188271	Argument	mask		5187904	2					
ANR	5188272	Identifier	mask		5187904	0					
ANR	5188273	ReturnType	static void		5187904	1					
ANR	5188274	Identifier	encodeQrCodeTail		5187904	2					
ANR	5188275	ParameterList	"ut8 dataAndQrcode [ ] , int bitLen , ut8 tempBuffer [ ] , int version , enum qrcodegen_Ecc ecl , enum qrcodegen_Mask mask , bool boostEcl"		5187904	3					
ANR	5188276	Parameter	ut8 dataAndQrcode [ ]	362:29:15171:15189	5187904	0	True				
ANR	5188277	ParameterType	ut8 [ ]		5187904	0					
ANR	5188278	Identifier	dataAndQrcode		5187904	1					
ANR	5188279	Parameter	int bitLen	362:50:15192:15201	5187904	1	True				
ANR	5188280	ParameterType	int		5187904	0					
ANR	5188281	Identifier	bitLen		5187904	1					
ANR	5188282	Parameter	ut8 tempBuffer [ ]	362:62:15204:15219	5187904	2	True				
ANR	5188283	ParameterType	ut8 [ ]		5187904	0					
ANR	5188284	Identifier	tempBuffer		5187904	1					
ANR	5188285	Parameter	int version	362:80:15222:15232	5187904	3	True				
ANR	5188286	ParameterType	int		5187904	0					
ANR	5188287	Identifier	version		5187904	1					
ANR	5188288	Parameter	enum qrcodegen_Ecc ecl	362:93:15235:15256	5187904	4	True				
ANR	5188289	ParameterType	enum qrcodegen_Ecc		5187904	0					
ANR	5188290	Identifier	ecl		5187904	1					
ANR	5188291	Parameter	enum qrcodegen_Mask mask	362:117:15259:15282	5187904	5	True				
ANR	5188292	ParameterType	enum qrcodegen_Mask		5187904	0					
ANR	5188293	Identifier	mask		5187904	1					
ANR	5188294	Parameter	bool boostEcl	362:143:15285:15297	5187904	6	True				
ANR	5188295	ParameterType	bool		5187904	0					
ANR	5188296	Identifier	boostEcl		5187904	1					
ANR	5188297	CFGEntryNode	ENTRY		5187904		True				
ANR	5188298	CFGExitNode	EXIT		5187904		True				
ANR	5188299	Symbol	getNumDataCodewords		5187904						
ANR	5188300	Symbol	qrcodegen_Ecc_HIGH		5187904						
ANR	5188301	Symbol	terminatorBits		5187904						
ANR	5188302	Symbol	penalty		5187904						
ANR	5188303	Symbol	minPenalty		5187904						
ANR	5188304	Symbol	qrcodegen_Ecc_MEDIUM		5187904						
ANR	5188305	Symbol	i		5187904						
ANR	5188306	Symbol	dataAndQrcode		5187904						
ANR	5188307	Symbol	qrcodegen_Mask_AUTO		5187904						
ANR	5188308	Symbol	version		5187904						
ANR	5188309	Symbol	& bitLen		5187904						
ANR	5188310	Symbol	ecl		5187904						
ANR	5188311	Symbol	bitLen		5187904						
ANR	5188312	Symbol	boostEcl		5187904						
ANR	5188313	Symbol	getNumRawDataModules		5187904						
ANR	5188314	Symbol	getPenaltyScore		5187904						
ANR	5188315	Symbol	drawCodewords		5187904						
ANR	5188316	Symbol	qrcodegen_Ecc_QUARTILE		5187904						
ANR	5188317	Symbol	tempBuffer		5187904						
ANR	5188318	Symbol	LONG_MAX		5187904						
ANR	5188319	Symbol	padByte		5187904						
ANR	5188320	Symbol	mask		5187904						
ANR	5188321	Symbol	dataCapacityBits		5187904						
ANR	5188322	Function	appendBitsToBuffer	425:0:17335:17645							
ANR	5188323	FunctionDef	"appendBitsToBuffer (unsigned int val , int numBits , ut8 buffer [ ] , int * bitLen)"		5188322	0					
ANR	5188324	CompoundStatement		425:89:17424:17645	5188322	0					
ANR	5188325	IfStatement	if ( numBits < 0 || numBits > 16 || ( ( unsigned long ) val >> numBits ) != 0 )		5188322	0					
ANR	5188326	Condition	numBits < 0 || numBits > 16 || ( ( unsigned long ) val >> numBits ) != 0	426:5:17431:17498	5188322	0	True				
ANR	5188327	OrExpression	numBits < 0 || numBits > 16 || ( ( unsigned long ) val >> numBits ) != 0		5188322	0		||			
ANR	5188328	RelationalExpression	numBits < 0		5188322	0		<			
ANR	5188329	Identifier	numBits		5188322	0					
ANR	5188330	PrimaryExpression	0		5188322	1					
ANR	5188331	OrExpression	numBits > 16 || ( ( unsigned long ) val >> numBits ) != 0		5188322	1		||			
ANR	5188332	RelationalExpression	numBits > 16		5188322	0		>			
ANR	5188333	Identifier	numBits		5188322	0					
ANR	5188334	PrimaryExpression	16		5188322	1					
ANR	5188335	EqualityExpression	( ( unsigned long ) val >> numBits ) != 0		5188322	1		!=			
ANR	5188336	ShiftExpression	( unsigned long ) val >> numBits		5188322	0		>>			
ANR	5188337	CastExpression	( unsigned long ) val		5188322	0					
ANR	5188338	CastTarget	unsigned long		5188322	0					
ANR	5188339	Identifier	val		5188322	1					
ANR	5188340	Identifier	numBits		5188322	1					
ANR	5188341	PrimaryExpression	0		5188322	1					
ANR	5188342	CompoundStatement		2:75:76:76	5188322	1					
ANR	5188343	ReturnStatement	return ;	427:2:17505:17511	5188322	0	True				
ANR	5188344	IdentifierDeclStatement	int i ;	429:1:17517:17522	5188322	1	True				
ANR	5188345	IdentifierDecl	i		5188322	0					
ANR	5188346	IdentifierDeclType	int		5188322	0					
ANR	5188347	Identifier	i		5188322	1					
ANR	5188348	ForStatement	"for ( i = numBits - 1 ; i >= 0 ; i -- , ( * bitLen ) ++ )"		5188322	2					
ANR	5188349	ForInit	i = numBits - 1 ;	430:6:17530:17545	5188322	0	True				
ANR	5188350	AssignmentExpression	i = numBits - 1		5188322	0		=			
ANR	5188351	Identifier	i		5188322	0					
ANR	5188352	AdditiveExpression	numBits - 1		5188322	1		-			
ANR	5188353	Identifier	numBits		5188322	0					
ANR	5188354	PrimaryExpression	1		5188322	1					
ANR	5188355	Condition	i >= 0	430:23:17547:17552	5188322	1	True				
ANR	5188356	RelationalExpression	i >= 0		5188322	0		>=			
ANR	5188357	Identifier	i		5188322	0					
ANR	5188358	PrimaryExpression	0		5188322	1					
ANR	5188359	Expression	"i -- , ( * bitLen ) ++"	430:31:17555:17570	5188322	2	True				
ANR	5188360	PostIncDecOperationExpression	i --		5188322	0					
ANR	5188361	Identifier	i		5188322	0					
ANR	5188362	IncDec	--		5188322	1					
ANR	5188363	PostIncDecOperationExpression	( * bitLen ) ++		5188322	1					
ANR	5188364	UnaryOperationExpression	* bitLen		5188322	0					
ANR	5188365	UnaryOperator	*		5188322	0					
ANR	5188366	Identifier	bitLen		5188322	1					
ANR	5188367	IncDec	++		5188322	1					
ANR	5188368	CompoundStatement		6:49:148:148	5188322	3					
ANR	5188369	ExpressionStatement	buffer [ * bitLen >> 3 ] |= ( ( val >> i ) & 1 ) << ( 7 - ( * bitLen & 7 ) )	431:2:17577:17640	5188322	0	True				
ANR	5188370	AssignmentExpression	buffer [ * bitLen >> 3 ] |= ( ( val >> i ) & 1 ) << ( 7 - ( * bitLen & 7 ) )		5188322	0		|=			
ANR	5188371	ArrayIndexing	buffer [ * bitLen >> 3 ]		5188322	0					
ANR	5188372	Identifier	buffer		5188322	0					
ANR	5188373	ShiftExpression	* bitLen >> 3		5188322	1		>>			
ANR	5188374	UnaryOperationExpression	* bitLen		5188322	0					
ANR	5188375	UnaryOperator	*		5188322	0					
ANR	5188376	Identifier	bitLen		5188322	1					
ANR	5188377	PrimaryExpression	3		5188322	1					
ANR	5188378	ShiftExpression	( ( val >> i ) & 1 ) << ( 7 - ( * bitLen & 7 ) )		5188322	1		<<			
ANR	5188379	BitAndExpression	( val >> i ) & 1		5188322	0		&			
ANR	5188380	ShiftExpression	val >> i		5188322	0		>>			
ANR	5188381	Identifier	val		5188322	0					
ANR	5188382	Identifier	i		5188322	1					
ANR	5188383	PrimaryExpression	1		5188322	1					
ANR	5188384	AdditiveExpression	7 - ( * bitLen & 7 )		5188322	1		-			
ANR	5188385	PrimaryExpression	7		5188322	0					
ANR	5188386	BitAndExpression	* bitLen & 7		5188322	1		&			
ANR	5188387	UnaryOperationExpression	* bitLen		5188322	0					
ANR	5188388	UnaryOperator	*		5188322	0					
ANR	5188389	Identifier	bitLen		5188322	1					
ANR	5188390	PrimaryExpression	7		5188322	1					
ANR	5188391	ReturnType	static void		5188322	1					
ANR	5188392	Identifier	appendBitsToBuffer		5188322	2					
ANR	5188393	ParameterList	"unsigned int val , int numBits , ut8 buffer [ ] , int * bitLen"		5188322	3					
ANR	5188394	Parameter	unsigned int val	425:31:17366:17381	5188322	0	True				
ANR	5188395	ParameterType	unsigned int		5188322	0					
ANR	5188396	Identifier	val		5188322	1					
ANR	5188397	Parameter	int numBits	425:49:17384:17394	5188322	1	True				
ANR	5188398	ParameterType	int		5188322	0					
ANR	5188399	Identifier	numBits		5188322	1					
ANR	5188400	Parameter	ut8 buffer [ ]	425:62:17397:17408	5188322	2	True				
ANR	5188401	ParameterType	ut8 [ ]		5188322	0					
ANR	5188402	Identifier	buffer		5188322	1					
ANR	5188403	Parameter	int * bitLen	425:76:17411:17421	5188322	3	True				
ANR	5188404	ParameterType	int *		5188322	0					
ANR	5188405	Identifier	bitLen		5188322	1					
ANR	5188406	CFGEntryNode	ENTRY		5188322		True				
ANR	5188407	CFGExitNode	EXIT		5188322		True				
ANR	5188408	Symbol	val		5188322						
ANR	5188409	Symbol	bitLen		5188322						
ANR	5188410	Symbol	* buffer		5188322						
ANR	5188411	Symbol	numBits		5188322						
ANR	5188412	Symbol	i		5188322						
ANR	5188413	Symbol	buffer		5188322						
ANR	5188414	Symbol	* bitLen		5188322						
ANR	5188415	Symbol	* * bitLen		5188322						
ANR	5188416	Function	appendErrorCorrection	443:0:18099:19779							
ANR	5188417	FunctionDef	"appendErrorCorrection (ut8 data [ ] , int version , enum qrcodegen_Ecc ecl , ut8 result [ ])"		5188416	0					
ANR	5188418	CompoundStatement		443:97:18196:19779	5188416	0					
ANR	5188419	IfStatement	if ( ( int ) ecl < qrcodegen_Ecc_LOW || ( int ) ecl > qrcodegen_Ecc_HIGH || version < qrcodegen_VERSION_MIN || version > qrcodegen_VERSION_MAX )		5188416	0					
ANR	5188420	Condition	( int ) ecl < qrcodegen_Ecc_LOW || ( int ) ecl > qrcodegen_Ecc_HIGH || version < qrcodegen_VERSION_MIN || version > qrcodegen_VERSION_MAX	445:5:18235:18367	5188416	0	True				
ANR	5188421	OrExpression	( int ) ecl < qrcodegen_Ecc_LOW || ( int ) ecl > qrcodegen_Ecc_HIGH || version < qrcodegen_VERSION_MIN || version > qrcodegen_VERSION_MAX		5188416	0		||			
ANR	5188422	RelationalExpression	( int ) ecl < qrcodegen_Ecc_LOW		5188416	0		<			
ANR	5188423	CastExpression	( int ) ecl		5188416	0					
ANR	5188424	CastTarget	int		5188416	0					
ANR	5188425	Identifier	ecl		5188416	1					
ANR	5188426	Identifier	qrcodegen_Ecc_LOW		5188416	1					
ANR	5188427	OrExpression	( int ) ecl > qrcodegen_Ecc_HIGH || version < qrcodegen_VERSION_MIN || version > qrcodegen_VERSION_MAX		5188416	1		||			
ANR	5188428	RelationalExpression	( int ) ecl > qrcodegen_Ecc_HIGH		5188416	0		>			
ANR	5188429	CastExpression	( int ) ecl		5188416	0					
ANR	5188430	CastTarget	int		5188416	0					
ANR	5188431	Identifier	ecl		5188416	1					
ANR	5188432	Identifier	qrcodegen_Ecc_HIGH		5188416	1					
ANR	5188433	OrExpression	version < qrcodegen_VERSION_MIN || version > qrcodegen_VERSION_MAX		5188416	1		||			
ANR	5188434	RelationalExpression	version < qrcodegen_VERSION_MIN		5188416	0		<			
ANR	5188435	Identifier	version		5188416	0					
ANR	5188436	Identifier	qrcodegen_VERSION_MIN		5188416	1					
ANR	5188437	RelationalExpression	version > qrcodegen_VERSION_MAX		5188416	1		>			
ANR	5188438	Identifier	version		5188416	0					
ANR	5188439	Identifier	qrcodegen_VERSION_MAX		5188416	1					
ANR	5188440	CompoundStatement		3:140:173:173	5188416	1					
ANR	5188441	ReturnStatement	return ;	446:2:18374:18380	5188416	0	True				
ANR	5188442	IdentifierDeclStatement	int numBlocks = NUM_ERROR_CORRECTION_BLOCKS [ ( int ) ecl ] [ version ] ;	448:1:18386:18449	5188416	1	True				
ANR	5188443	IdentifierDecl	numBlocks = NUM_ERROR_CORRECTION_BLOCKS [ ( int ) ecl ] [ version ]		5188416	0					
ANR	5188444	IdentifierDeclType	int		5188416	0					
ANR	5188445	Identifier	numBlocks		5188416	1					
ANR	5188446	AssignmentExpression	numBlocks = NUM_ERROR_CORRECTION_BLOCKS [ ( int ) ecl ] [ version ]		5188416	2		=			
ANR	5188447	Identifier	numBlocks		5188416	0					
ANR	5188448	ArrayIndexing	NUM_ERROR_CORRECTION_BLOCKS [ ( int ) ecl ] [ version ]		5188416	1					
ANR	5188449	ArrayIndexing	NUM_ERROR_CORRECTION_BLOCKS [ ( int ) ecl ]		5188416	0					
ANR	5188450	Identifier	NUM_ERROR_CORRECTION_BLOCKS		5188416	0					
ANR	5188451	CastExpression	( int ) ecl		5188416	1					
ANR	5188452	CastTarget	int		5188416	0					
ANR	5188453	Identifier	ecl		5188416	1					
ANR	5188454	Identifier	version		5188416	1					
ANR	5188455	IdentifierDeclStatement	int blockEccLen = ECC_CODEWORDS_PER_BLOCK [ ( int ) ecl ] [ version ] ;	449:1:18452:18513	5188416	2	True				
ANR	5188456	IdentifierDecl	blockEccLen = ECC_CODEWORDS_PER_BLOCK [ ( int ) ecl ] [ version ]		5188416	0					
ANR	5188457	IdentifierDeclType	int		5188416	0					
ANR	5188458	Identifier	blockEccLen		5188416	1					
ANR	5188459	AssignmentExpression	blockEccLen = ECC_CODEWORDS_PER_BLOCK [ ( int ) ecl ] [ version ]		5188416	2		=			
ANR	5188460	Identifier	blockEccLen		5188416	0					
ANR	5188461	ArrayIndexing	ECC_CODEWORDS_PER_BLOCK [ ( int ) ecl ] [ version ]		5188416	1					
ANR	5188462	ArrayIndexing	ECC_CODEWORDS_PER_BLOCK [ ( int ) ecl ]		5188416	0					
ANR	5188463	Identifier	ECC_CODEWORDS_PER_BLOCK		5188416	0					
ANR	5188464	CastExpression	( int ) ecl		5188416	1					
ANR	5188465	CastTarget	int		5188416	0					
ANR	5188466	Identifier	ecl		5188416	1					
ANR	5188467	Identifier	version		5188416	1					
ANR	5188468	IdentifierDeclStatement	int rawCodewords = getNumRawDataModules ( version ) / 8 ;	450:1:18516:18569	5188416	3	True				
ANR	5188469	IdentifierDecl	rawCodewords = getNumRawDataModules ( version ) / 8		5188416	0					
ANR	5188470	IdentifierDeclType	int		5188416	0					
ANR	5188471	Identifier	rawCodewords		5188416	1					
ANR	5188472	AssignmentExpression	rawCodewords = getNumRawDataModules ( version ) / 8		5188416	2		=			
ANR	5188473	Identifier	rawCodewords		5188416	0					
ANR	5188474	MultiplicativeExpression	getNumRawDataModules ( version ) / 8		5188416	1		/			
ANR	5188475	CallExpression	getNumRawDataModules ( version )		5188416	0					
ANR	5188476	Callee	getNumRawDataModules		5188416	0					
ANR	5188477	Identifier	getNumRawDataModules		5188416	0					
ANR	5188478	ArgumentList	version		5188416	1					
ANR	5188479	Argument	version		5188416	0					
ANR	5188480	Identifier	version		5188416	0					
ANR	5188481	PrimaryExpression	8		5188416	1					
ANR	5188482	IdentifierDeclStatement	int dataLen = rawCodewords - blockEccLen * numBlocks ;	451:1:18572:18624	5188416	4	True				
ANR	5188483	IdentifierDecl	dataLen = rawCodewords - blockEccLen * numBlocks		5188416	0					
ANR	5188484	IdentifierDeclType	int		5188416	0					
ANR	5188485	Identifier	dataLen		5188416	1					
ANR	5188486	AssignmentExpression	dataLen = rawCodewords - blockEccLen * numBlocks		5188416	2		=			
ANR	5188487	Identifier	dataLen		5188416	0					
ANR	5188488	AdditiveExpression	rawCodewords - blockEccLen * numBlocks		5188416	1		-			
ANR	5188489	Identifier	rawCodewords		5188416	0					
ANR	5188490	MultiplicativeExpression	blockEccLen * numBlocks		5188416	1		*			
ANR	5188491	Identifier	blockEccLen		5188416	0					
ANR	5188492	Identifier	numBlocks		5188416	1					
ANR	5188493	IdentifierDeclStatement	int numShortBlocks = numBlocks - rawCodewords % numBlocks ;	452:1:18627:18684	5188416	5	True				
ANR	5188494	IdentifierDecl	numShortBlocks = numBlocks - rawCodewords % numBlocks		5188416	0					
ANR	5188495	IdentifierDeclType	int		5188416	0					
ANR	5188496	Identifier	numShortBlocks		5188416	1					
ANR	5188497	AssignmentExpression	numShortBlocks = numBlocks - rawCodewords % numBlocks		5188416	2		=			
ANR	5188498	Identifier	numShortBlocks		5188416	0					
ANR	5188499	AdditiveExpression	numBlocks - rawCodewords % numBlocks		5188416	1		-			
ANR	5188500	Identifier	numBlocks		5188416	0					
ANR	5188501	MultiplicativeExpression	rawCodewords % numBlocks		5188416	1		%			
ANR	5188502	Identifier	rawCodewords		5188416	0					
ANR	5188503	Identifier	numBlocks		5188416	1					
ANR	5188504	IdentifierDeclStatement	int shortBlockDataLen = rawCodewords / numBlocks - blockEccLen ;	453:1:18687:18749	5188416	6	True				
ANR	5188505	IdentifierDecl	shortBlockDataLen = rawCodewords / numBlocks - blockEccLen		5188416	0					
ANR	5188506	IdentifierDeclType	int		5188416	0					
ANR	5188507	Identifier	shortBlockDataLen		5188416	1					
ANR	5188508	AssignmentExpression	shortBlockDataLen = rawCodewords / numBlocks - blockEccLen		5188416	2		=			
ANR	5188509	Identifier	shortBlockDataLen		5188416	0					
ANR	5188510	AdditiveExpression	rawCodewords / numBlocks - blockEccLen		5188416	1		-			
ANR	5188511	MultiplicativeExpression	rawCodewords / numBlocks		5188416	0		/			
ANR	5188512	Identifier	rawCodewords		5188416	0					
ANR	5188513	Identifier	numBlocks		5188416	1					
ANR	5188514	Identifier	blockEccLen		5188416	1					
ANR	5188515	IdentifierDeclStatement	ut8 generator [ 30 ] ;	456:1:18810:18827	5188416	7	True				
ANR	5188516	IdentifierDecl	generator [ 30 ]		5188416	0					
ANR	5188517	IdentifierDeclType	ut8 [ 30 ]		5188416	0					
ANR	5188518	Identifier	generator		5188416	1					
ANR	5188519	PrimaryExpression	30		5188416	2					
ANR	5188520	ExpressionStatement	"calcReedSolomonGenerator ( blockEccLen , generator )"	457:1:18830:18879	5188416	8	True				
ANR	5188521	CallExpression	"calcReedSolomonGenerator ( blockEccLen , generator )"		5188416	0					
ANR	5188522	Callee	calcReedSolomonGenerator		5188416	0					
ANR	5188523	Identifier	calcReedSolomonGenerator		5188416	0					
ANR	5188524	ArgumentList	blockEccLen		5188416	1					
ANR	5188525	Argument	blockEccLen		5188416	0					
ANR	5188526	Identifier	blockEccLen		5188416	0					
ANR	5188527	Argument	generator		5188416	1					
ANR	5188528	Identifier	generator		5188416	0					
ANR	5188529	IdentifierDeclStatement	"int i , j , k , l ;"	458:1:18882:18896	5188416	9	True				
ANR	5188530	IdentifierDecl	i		5188416	0					
ANR	5188531	IdentifierDeclType	int		5188416	0					
ANR	5188532	Identifier	i		5188416	1					
ANR	5188533	IdentifierDecl	j		5188416	1					
ANR	5188534	IdentifierDeclType	int		5188416	0					
ANR	5188535	Identifier	j		5188416	1					
ANR	5188536	IdentifierDecl	k		5188416	2					
ANR	5188537	IdentifierDeclType	int		5188416	0					
ANR	5188538	Identifier	k		5188416	1					
ANR	5188539	IdentifierDecl	l		5188416	3					
ANR	5188540	IdentifierDeclType	int		5188416	0					
ANR	5188541	Identifier	l		5188416	1					
ANR	5188542	ForStatement	"for ( i = 0 , j = dataLen , k = 0 ; i < numBlocks ; i ++ )"		5188416	10					
ANR	5188543	ForInit	"i = 0 , j = dataLen , k = 0 ;"	459:6:18904:18929	5188416	0	True				
ANR	5188544	Expression	"i = 0 , j = dataLen , k = 0"		5188416	0					
ANR	5188545	AssignmentExpression	i = 0		5188416	0		=			
ANR	5188546	Identifier	i		5188416	0					
ANR	5188547	PrimaryExpression	0		5188416	1					
ANR	5188548	Expression	"j = dataLen , k = 0"		5188416	1					
ANR	5188549	AssignmentExpression	j = dataLen		5188416	0		=			
ANR	5188550	Identifier	j		5188416	0					
ANR	5188551	Identifier	dataLen		5188416	1					
ANR	5188552	AssignmentExpression	k = 0		5188416	1		=			
ANR	5188553	Identifier	k		5188416	0					
ANR	5188554	PrimaryExpression	0		5188416	1					
ANR	5188555	Condition	i < numBlocks	459:33:18931:18943	5188416	1	True				
ANR	5188556	RelationalExpression	i < numBlocks		5188416	0		<			
ANR	5188557	Identifier	i		5188416	0					
ANR	5188558	Identifier	numBlocks		5188416	1					
ANR	5188559	PostIncDecOperationExpression	i ++	459:48:18946:18948	5188416	2	True				
ANR	5188560	Identifier	i		5188416	0					
ANR	5188561	IncDec	++		5188416	1					
ANR	5188562	CompoundStatement		18:2:758:790	5188416	3					
ANR	5188563	IdentifierDeclStatement	int blockLen = shortBlockDataLen ;	460:2:18955:18987	5188416	0	True				
ANR	5188564	IdentifierDecl	blockLen = shortBlockDataLen		5188416	0					
ANR	5188565	IdentifierDeclType	int		5188416	0					
ANR	5188566	Identifier	blockLen		5188416	1					
ANR	5188567	AssignmentExpression	blockLen = shortBlockDataLen		5188416	2		=			
ANR	5188568	Identifier	shortBlockDataLen		5188416	0					
ANR	5188569	Identifier	shortBlockDataLen		5188416	1					
ANR	5188570	IfStatement	if ( i >= numShortBlocks )		5188416	1					
ANR	5188571	Condition	i >= numShortBlocks	461:6:18995:19013	5188416	0	True				
ANR	5188572	RelationalExpression	i >= numShortBlocks		5188416	0		>=			
ANR	5188573	Identifier	i		5188416	0					
ANR	5188574	Identifier	numShortBlocks		5188416	1					
ANR	5188575	CompoundStatement		19:27:819:819	5188416	1					
ANR	5188576	ExpressionStatement	blockLen ++	462:3:19021:19031	5188416	0	True				
ANR	5188577	PostIncDecOperationExpression	blockLen ++		5188416	0					
ANR	5188578	Identifier	blockLen		5188416	0					
ANR	5188579	IncDec	++		5188416	1					
ANR	5188580	ExpressionStatement	"calcReedSolomonRemainder ( & data [ k ] , blockLen , generator , blockEccLen , & data [ j ] )"	464:2:19039:19118	5188416	2	True				
ANR	5188581	CallExpression	"calcReedSolomonRemainder ( & data [ k ] , blockLen , generator , blockEccLen , & data [ j ] )"		5188416	0					
ANR	5188582	Callee	calcReedSolomonRemainder		5188416	0					
ANR	5188583	Identifier	calcReedSolomonRemainder		5188416	0					
ANR	5188584	ArgumentList	& data [ k ]		5188416	1					
ANR	5188585	Argument	& data [ k ]		5188416	0					
ANR	5188586	UnaryOperationExpression	& data [ k ]		5188416	0					
ANR	5188587	UnaryOperator	&		5188416	0					
ANR	5188588	ArrayIndexing	data [ k ]		5188416	1					
ANR	5188589	Identifier	data		5188416	0					
ANR	5188590	Identifier	k		5188416	1					
ANR	5188591	Argument	blockLen		5188416	1					
ANR	5188592	Identifier	blockLen		5188416	0					
ANR	5188593	Argument	generator		5188416	2					
ANR	5188594	Identifier	generator		5188416	0					
ANR	5188595	Argument	blockEccLen		5188416	3					
ANR	5188596	Identifier	blockEccLen		5188416	0					
ANR	5188597	Argument	& data [ j ]		5188416	4					
ANR	5188598	UnaryOperationExpression	& data [ j ]		5188416	0					
ANR	5188599	UnaryOperator	&		5188416	0					
ANR	5188600	ArrayIndexing	data [ j ]		5188416	1					
ANR	5188601	Identifier	data		5188416	0					
ANR	5188602	Identifier	j		5188416	1					
ANR	5188603	ExpressionStatement	j += blockEccLen	465:2:19122:19138	5188416	3	True				
ANR	5188604	AssignmentExpression	j += blockEccLen		5188416	0		+=			
ANR	5188605	Identifier	j		5188416	0					
ANR	5188606	Identifier	blockEccLen		5188416	1					
ANR	5188607	ExpressionStatement	k += blockLen	466:2:19142:19155	5188416	4	True				
ANR	5188608	AssignmentExpression	k += blockLen		5188416	0		+=			
ANR	5188609	Identifier	k		5188416	0					
ANR	5188610	Identifier	blockLen		5188416	1					
ANR	5188611	ForStatement	"for ( i = 0 , k = 0 ; i < numBlocks ; i ++ )"		5188416	11					
ANR	5188612	ForInit	"i = 0 , k = 0 ;"	470:6:19250:19262	5188416	0	True				
ANR	5188613	Expression	"i = 0 , k = 0"		5188416	0					
ANR	5188614	AssignmentExpression	i = 0		5188416	0		=			
ANR	5188615	Identifier	i		5188416	0					
ANR	5188616	PrimaryExpression	0		5188416	1					
ANR	5188617	AssignmentExpression	k = 0		5188416	1		=			
ANR	5188618	Identifier	k		5188416	0					
ANR	5188619	PrimaryExpression	0		5188416	1					
ANR	5188620	Condition	i < numBlocks	470:20:19264:19276	5188416	1	True				
ANR	5188621	RelationalExpression	i < numBlocks		5188416	0		<			
ANR	5188622	Identifier	i		5188416	0					
ANR	5188623	Identifier	numBlocks		5188416	1					
ANR	5188624	PostIncDecOperationExpression	i ++	470:35:19279:19281	5188416	2	True				
ANR	5188625	Identifier	i		5188416	0					
ANR	5188626	IncDec	++		5188416	1					
ANR	5188627	CompoundStatement		28:40:1087:1087	5188416	3					
ANR	5188628	ForStatement	"for ( j = 0 , l = i ; j < shortBlockDataLen ; j ++ , k ++ , l += numBlocks )"		5188416	0					
ANR	5188629	ForInit	"j = 0 , l = i ;"	471:7:19293:19305	5188416	0	True				
ANR	5188630	Expression	"j = 0 , l = i"		5188416	0					
ANR	5188631	AssignmentExpression	j = 0		5188416	0		=			
ANR	5188632	Identifier	j		5188416	0					
ANR	5188633	PrimaryExpression	0		5188416	1					
ANR	5188634	AssignmentExpression	l = i		5188416	1		=			
ANR	5188635	Identifier	l		5188416	0					
ANR	5188636	Identifier	i		5188416	1					
ANR	5188637	Condition	j < shortBlockDataLen	471:21:19307:19327	5188416	1	True				
ANR	5188638	RelationalExpression	j < shortBlockDataLen		5188416	0		<			
ANR	5188639	Identifier	j		5188416	0					
ANR	5188640	Identifier	shortBlockDataLen		5188416	1					
ANR	5188641	Expression	"j ++ , k ++ , l += numBlocks"	471:44:19330:19353	5188416	2	True				
ANR	5188642	PostIncDecOperationExpression	j ++		5188416	0					
ANR	5188643	Identifier	j		5188416	0					
ANR	5188644	IncDec	++		5188416	1					
ANR	5188645	Expression	"k ++ , l += numBlocks"		5188416	1					
ANR	5188646	PostIncDecOperationExpression	k ++		5188416	0					
ANR	5188647	Identifier	k		5188416	0					
ANR	5188648	IncDec	++		5188416	1					
ANR	5188649	AssignmentExpression	l += numBlocks		5188416	1		+=			
ANR	5188650	Identifier	l		5188416	0					
ANR	5188651	Identifier	numBlocks		5188416	1					
ANR	5188652	CompoundStatement		29:70:1159:1159	5188416	3					
ANR	5188653	ExpressionStatement	result [ l ] = data [ k ]	472:3:19361:19380	5188416	0	True				
ANR	5188654	AssignmentExpression	result [ l ] = data [ k ]		5188416	0		=			
ANR	5188655	ArrayIndexing	result [ l ]		5188416	0					
ANR	5188656	Identifier	result		5188416	0					
ANR	5188657	Identifier	l		5188416	1					
ANR	5188658	ArrayIndexing	data [ k ]		5188416	1					
ANR	5188659	Identifier	data		5188416	0					
ANR	5188660	Identifier	k		5188416	1					
ANR	5188661	IfStatement	if ( i >= numShortBlocks )		5188416	1					
ANR	5188662	Condition	i >= numShortBlocks	474:6:19392:19410	5188416	0	True				
ANR	5188663	RelationalExpression	i >= numShortBlocks		5188416	0		>=			
ANR	5188664	Identifier	i		5188416	0					
ANR	5188665	Identifier	numShortBlocks		5188416	1					
ANR	5188666	CompoundStatement		32:27:1216:1216	5188416	1					
ANR	5188667	ExpressionStatement	k ++	475:3:19418:19421	5188416	0	True				
ANR	5188668	PostIncDecOperationExpression	k ++		5188416	0					
ANR	5188669	Identifier	k		5188416	0					
ANR	5188670	IncDec	++		5188416	1					
ANR	5188671	ForStatement	"for ( i = numShortBlocks , k = ( numShortBlocks + 1 ) * shortBlockDataLen , l = numBlocks * shortBlockDataLen ; i < numBlocks ; i ++ , k += shortBlockDataLen + 1 , l ++ )"		5188416	12					
ANR	5188672	ForInit	"i = numShortBlocks , k = ( numShortBlocks + 1 ) * shortBlockDataLen , l = numBlocks * shortBlockDataLen ;"	478:6:19436:19535	5188416	0	True				
ANR	5188673	Expression	"i = numShortBlocks , k = ( numShortBlocks + 1 ) * shortBlockDataLen , l = numBlocks * shortBlockDataLen"		5188416	0					
ANR	5188674	AssignmentExpression	i = numShortBlocks		5188416	0		=			
ANR	5188675	Identifier	i		5188416	0					
ANR	5188676	Identifier	numShortBlocks		5188416	1					
ANR	5188677	Expression	"k = ( numShortBlocks + 1 ) * shortBlockDataLen , l = numBlocks * shortBlockDataLen"		5188416	1					
ANR	5188678	AssignmentExpression	k = ( numShortBlocks + 1 ) * shortBlockDataLen		5188416	0		=			
ANR	5188679	Identifier	k		5188416	0					
ANR	5188680	MultiplicativeExpression	( numShortBlocks + 1 ) * shortBlockDataLen		5188416	1		*			
ANR	5188681	AdditiveExpression	numShortBlocks + 1		5188416	0		+			
ANR	5188682	Identifier	numShortBlocks		5188416	0					
ANR	5188683	PrimaryExpression	1		5188416	1					
ANR	5188684	Identifier	shortBlockDataLen		5188416	1					
ANR	5188685	AssignmentExpression	l = numBlocks * shortBlockDataLen		5188416	1		=			
ANR	5188686	Identifier	l		5188416	0					
ANR	5188687	MultiplicativeExpression	numBlocks * shortBlockDataLen		5188416	1		*			
ANR	5188688	Identifier	numBlocks		5188416	0					
ANR	5188689	Identifier	shortBlockDataLen		5188416	1					
ANR	5188690	Condition	i < numBlocks	479:6:19543:19555	5188416	1	True				
ANR	5188691	RelationalExpression	i < numBlocks		5188416	0		<			
ANR	5188692	Identifier	i		5188416	0					
ANR	5188693	Identifier	numBlocks		5188416	1					
ANR	5188694	Expression	"i ++ , k += shortBlockDataLen + 1 , l ++"	479:21:19558:19593	5188416	2	True				
ANR	5188695	PostIncDecOperationExpression	i ++		5188416	0					
ANR	5188696	Identifier	i		5188416	0					
ANR	5188697	IncDec	++		5188416	1					
ANR	5188698	Expression	"k += shortBlockDataLen + 1 , l ++"		5188416	1					
ANR	5188699	AssignmentExpression	k += shortBlockDataLen + 1		5188416	0		+=			
ANR	5188700	Identifier	k		5188416	0					
ANR	5188701	AdditiveExpression	shortBlockDataLen + 1		5188416	1		+			
ANR	5188702	Identifier	shortBlockDataLen		5188416	0					
ANR	5188703	PrimaryExpression	1		5188416	1					
ANR	5188704	PostIncDecOperationExpression	l ++		5188416	1					
ANR	5188705	Identifier	l		5188416	0					
ANR	5188706	IncDec	++		5188416	1					
ANR	5188707	CompoundStatement		37:59:1399:1399	5188416	3					
ANR	5188708	ExpressionStatement	result [ l ] = data [ k ]	480:2:19600:19619	5188416	0	True				
ANR	5188709	AssignmentExpression	result [ l ] = data [ k ]		5188416	0		=			
ANR	5188710	ArrayIndexing	result [ l ]		5188416	0					
ANR	5188711	Identifier	result		5188416	0					
ANR	5188712	Identifier	l		5188416	1					
ANR	5188713	ArrayIndexing	data [ k ]		5188416	1					
ANR	5188714	Identifier	data		5188416	0					
ANR	5188715	Identifier	k		5188416	1					
ANR	5188716	ForStatement	"for ( i = 0 , k = dataLen ; i < numBlocks ; i ++ )"		5188416	13					
ANR	5188717	ForInit	"i = 0 , k = dataLen ;"	482:6:19630:19648	5188416	0	True				
ANR	5188718	Expression	"i = 0 , k = dataLen"		5188416	0					
ANR	5188719	AssignmentExpression	i = 0		5188416	0		=			
ANR	5188720	Identifier	i		5188416	0					
ANR	5188721	PrimaryExpression	0		5188416	1					
ANR	5188722	AssignmentExpression	k = dataLen		5188416	1		=			
ANR	5188723	Identifier	k		5188416	0					
ANR	5188724	Identifier	dataLen		5188416	1					
ANR	5188725	Condition	i < numBlocks	482:26:19650:19662	5188416	1	True				
ANR	5188726	RelationalExpression	i < numBlocks		5188416	0		<			
ANR	5188727	Identifier	i		5188416	0					
ANR	5188728	Identifier	numBlocks		5188416	1					
ANR	5188729	PostIncDecOperationExpression	i ++	482:41:19665:19667	5188416	2	True				
ANR	5188730	Identifier	i		5188416	0					
ANR	5188731	IncDec	++		5188416	1					
ANR	5188732	CompoundStatement		40:46:1473:1473	5188416	3					
ANR	5188733	ForStatement	"for ( j = 0 , l = dataLen + i ; j < blockEccLen ; j ++ , k ++ , l += numBlocks )"		5188416	0					
ANR	5188734	ForInit	"j = 0 , l = dataLen + i ;"	483:7:19679:19701	5188416	0	True				
ANR	5188735	Expression	"j = 0 , l = dataLen + i"		5188416	0					
ANR	5188736	AssignmentExpression	j = 0		5188416	0		=			
ANR	5188737	Identifier	j		5188416	0					
ANR	5188738	PrimaryExpression	0		5188416	1					
ANR	5188739	AssignmentExpression	l = dataLen + i		5188416	1		=			
ANR	5188740	Identifier	l		5188416	0					
ANR	5188741	AdditiveExpression	dataLen + i		5188416	1		+			
ANR	5188742	Identifier	dataLen		5188416	0					
ANR	5188743	Identifier	i		5188416	1					
ANR	5188744	Condition	j < blockEccLen	483:31:19703:19717	5188416	1	True				
ANR	5188745	RelationalExpression	j < blockEccLen		5188416	0		<			
ANR	5188746	Identifier	j		5188416	0					
ANR	5188747	Identifier	blockEccLen		5188416	1					
ANR	5188748	Expression	"j ++ , k ++ , l += numBlocks"	483:48:19720:19743	5188416	2	True				
ANR	5188749	PostIncDecOperationExpression	j ++		5188416	0					
ANR	5188750	Identifier	j		5188416	0					
ANR	5188751	IncDec	++		5188416	1					
ANR	5188752	Expression	"k ++ , l += numBlocks"		5188416	1					
ANR	5188753	PostIncDecOperationExpression	k ++		5188416	0					
ANR	5188754	Identifier	k		5188416	0					
ANR	5188755	IncDec	++		5188416	1					
ANR	5188756	AssignmentExpression	l += numBlocks		5188416	1		+=			
ANR	5188757	Identifier	l		5188416	0					
ANR	5188758	Identifier	numBlocks		5188416	1					
ANR	5188759	CompoundStatement		41:74:1549:1549	5188416	3					
ANR	5188760	ExpressionStatement	result [ l ] = data [ k ]	484:3:19751:19770	5188416	0	True				
ANR	5188761	AssignmentExpression	result [ l ] = data [ k ]		5188416	0		=			
ANR	5188762	ArrayIndexing	result [ l ]		5188416	0					
ANR	5188763	Identifier	result		5188416	0					
ANR	5188764	Identifier	l		5188416	1					
ANR	5188765	ArrayIndexing	data [ k ]		5188416	1					
ANR	5188766	Identifier	data		5188416	0					
ANR	5188767	Identifier	k		5188416	1					
ANR	5188768	ReturnType	static void		5188416	1					
ANR	5188769	Identifier	appendErrorCorrection		5188416	2					
ANR	5188770	ParameterList	"ut8 data [ ] , int version , enum qrcodegen_Ecc ecl , ut8 result [ ]"		5188416	3					
ANR	5188771	Parameter	ut8 data [ ]	443:34:18133:18142	5188416	0	True				
ANR	5188772	ParameterType	ut8 [ ]		5188416	0					
ANR	5188773	Identifier	data		5188416	1					
ANR	5188774	Parameter	int version	443:46:18145:18155	5188416	1	True				
ANR	5188775	ParameterType	int		5188416	0					
ANR	5188776	Identifier	version		5188416	1					
ANR	5188777	Parameter	enum qrcodegen_Ecc ecl	443:59:18158:18179	5188416	2	True				
ANR	5188778	ParameterType	enum qrcodegen_Ecc		5188416	0					
ANR	5188779	Identifier	ecl		5188416	1					
ANR	5188780	Parameter	ut8 result [ ]	443:83:18182:18193	5188416	3	True				
ANR	5188781	ParameterType	ut8 [ ]		5188416	0					
ANR	5188782	Identifier	result		5188416	1					
ANR	5188783	CFGEntryNode	ENTRY		5188416		True				
ANR	5188784	CFGExitNode	EXIT		5188416		True				
ANR	5188785	Symbol	qrcodegen_Ecc_HIGH		5188416						
ANR	5188786	Symbol	data		5188416						
ANR	5188787	Symbol	* ecl		5188416						
ANR	5188788	Symbol	ECC_CODEWORDS_PER_BLOCK		5188416						
ANR	5188789	Symbol	generator		5188416						
ANR	5188790	Symbol	dataLen		5188416						
ANR	5188791	Symbol	ecl		5188416						
ANR	5188792	Symbol	result		5188416						
ANR	5188793	Symbol	NUM_ERROR_CORRECTION_BLOCKS		5188416						
ANR	5188794	Symbol	shortBlockDataLen		5188416						
ANR	5188795	Symbol	* result		5188416						
ANR	5188796	Symbol	qrcodegen_Ecc_LOW		5188416						
ANR	5188797	Symbol	qrcodegen_VERSION_MAX		5188416						
ANR	5188798	Symbol	blockEccLen		5188416						
ANR	5188799	Symbol	* NUM_ERROR_CORRECTION_BLOCKS		5188416						
ANR	5188800	Symbol	* * ecl		5188416						
ANR	5188801	Symbol	numShortBlocks		5188416						
ANR	5188802	Symbol	rawCodewords		5188416						
ANR	5188803	Symbol	i		5188416						
ANR	5188804	Symbol	j		5188416						
ANR	5188805	Symbol	blockLen		5188416						
ANR	5188806	Symbol	k		5188416						
ANR	5188807	Symbol	* * NUM_ERROR_CORRECTION_BLOCKS		5188416						
ANR	5188808	Symbol	l		5188416						
ANR	5188809	Symbol	version		5188416						
ANR	5188810	Symbol	getNumRawDataModules		5188416						
ANR	5188811	Symbol	numBlocks		5188416						
ANR	5188812	Symbol	qrcodegen_VERSION_MIN		5188416						
ANR	5188813	Symbol	* k		5188416						
ANR	5188814	Symbol	* version		5188416						
ANR	5188815	Symbol	* l		5188416						
ANR	5188816	Symbol	* ECC_CODEWORDS_PER_BLOCK		5188416						
ANR	5188817	Symbol	* data		5188416						
ANR	5188818	Symbol	* * ECC_CODEWORDS_PER_BLOCK		5188416						
ANR	5188819	Function	getNumDataCodewords	492:0:19967:20288							
ANR	5188820	FunctionDef	"getNumDataCodewords (int version , enum qrcodegen_Ecc ecl)"		5188819	0					
ANR	5188821	CompoundStatement		492:68:20035:20288	5188819	0					
ANR	5188822	IdentifierDeclStatement	"int v = version , e = ( int ) ecl ;"	493:1:20038:20068	5188819	0	True				
ANR	5188823	IdentifierDecl	v = version		5188819	0					
ANR	5188824	IdentifierDeclType	int		5188819	0					
ANR	5188825	Identifier	v		5188819	1					
ANR	5188826	AssignmentExpression	v = version		5188819	2		=			
ANR	5188827	Identifier	version		5188819	0					
ANR	5188828	Identifier	version		5188819	1					
ANR	5188829	IdentifierDecl	e = ( int ) ecl		5188819	1					
ANR	5188830	IdentifierDeclType	int		5188819	0					
ANR	5188831	Identifier	e		5188819	1					
ANR	5188832	AssignmentExpression	e = ( int ) ecl		5188819	2		=			
ANR	5188833	Identifier	e		5188819	0					
ANR	5188834	CastExpression	( int ) ecl		5188819	1					
ANR	5188835	CastTarget	int		5188819	0					
ANR	5188836	Identifier	ecl		5188819	1					
ANR	5188837	ReturnStatement	return getNumRawDataModules ( v ) / 8 - ECC_CODEWORDS_PER_BLOCK [ e ] [ v ] * NUM_ERROR_CORRECTION_BLOCKS [ e ] [ v ] ;	495:1:20183:20286	5188819	1	True				
ANR	5188838	AdditiveExpression	getNumRawDataModules ( v ) / 8 - ECC_CODEWORDS_PER_BLOCK [ e ] [ v ] * NUM_ERROR_CORRECTION_BLOCKS [ e ] [ v ]		5188819	0		-			
ANR	5188839	MultiplicativeExpression	getNumRawDataModules ( v ) / 8		5188819	0		/			
ANR	5188840	CallExpression	getNumRawDataModules ( v )		5188819	0					
ANR	5188841	Callee	getNumRawDataModules		5188819	0					
ANR	5188842	Identifier	getNumRawDataModules		5188819	0					
ANR	5188843	ArgumentList	v		5188819	1					
ANR	5188844	Argument	v		5188819	0					
ANR	5188845	Identifier	v		5188819	0					
ANR	5188846	PrimaryExpression	8		5188819	1					
ANR	5188847	MultiplicativeExpression	ECC_CODEWORDS_PER_BLOCK [ e ] [ v ] * NUM_ERROR_CORRECTION_BLOCKS [ e ] [ v ]		5188819	1		*			
ANR	5188848	ArrayIndexing	ECC_CODEWORDS_PER_BLOCK [ e ] [ v ]		5188819	0					
ANR	5188849	ArrayIndexing	ECC_CODEWORDS_PER_BLOCK [ e ]		5188819	0					
ANR	5188850	Identifier	ECC_CODEWORDS_PER_BLOCK		5188819	0					
ANR	5188851	Identifier	e		5188819	1					
ANR	5188852	Identifier	v		5188819	1					
ANR	5188853	ArrayIndexing	NUM_ERROR_CORRECTION_BLOCKS [ e ] [ v ]		5188819	1					
ANR	5188854	ArrayIndexing	NUM_ERROR_CORRECTION_BLOCKS [ e ]		5188819	0					
ANR	5188855	Identifier	NUM_ERROR_CORRECTION_BLOCKS		5188819	0					
ANR	5188856	Identifier	e		5188819	1					
ANR	5188857	Identifier	v		5188819	1					
ANR	5188858	ReturnType	static int		5188819	1					
ANR	5188859	Identifier	getNumDataCodewords		5188819	2					
ANR	5188860	ParameterList	"int version , enum qrcodegen_Ecc ecl"		5188819	3					
ANR	5188861	Parameter	int version	492:31:19998:20008	5188819	0	True				
ANR	5188862	ParameterType	int		5188819	0					
ANR	5188863	Identifier	version		5188819	1					
ANR	5188864	Parameter	enum qrcodegen_Ecc ecl	492:44:20011:20032	5188819	1	True				
ANR	5188865	ParameterType	enum qrcodegen_Ecc		5188819	0					
ANR	5188866	Identifier	ecl		5188819	1					
ANR	5188867	CFGEntryNode	ENTRY		5188819		True				
ANR	5188868	CFGExitNode	EXIT		5188819		True				
ANR	5188869	Symbol	* NUM_ERROR_CORRECTION_BLOCKS		5188819						
ANR	5188870	Symbol	* v		5188819						
ANR	5188871	Symbol	e		5188819						
ANR	5188872	Symbol	* * e		5188819						
ANR	5188873	Symbol	ECC_CODEWORDS_PER_BLOCK		5188819						
ANR	5188874	Symbol	* * NUM_ERROR_CORRECTION_BLOCKS		5188819						
ANR	5188875	Symbol	version		5188819						
ANR	5188876	Symbol	ecl		5188819						
ANR	5188877	Symbol	* e		5188819						
ANR	5188878	Symbol	getNumRawDataModules		5188819						
ANR	5188879	Symbol	NUM_ERROR_CORRECTION_BLOCKS		5188819						
ANR	5188880	Symbol	v		5188819						
ANR	5188881	Symbol	* ECC_CODEWORDS_PER_BLOCK		5188819						
ANR	5188882	Symbol	* * ECC_CODEWORDS_PER_BLOCK		5188819						
ANR	5188883	Function	getNumRawDataModules	502:0:20596:20987							
ANR	5188884	FunctionDef	getNumRawDataModules (int version)		5188883	0					
ANR	5188885	CompoundStatement		502:45:20641:20987	5188883	0					
ANR	5188886	IfStatement	if ( version < qrcodegen_VERSION_MIN || version > qrcodegen_VERSION_MAX )		5188883	0					
ANR	5188887	Condition	version < qrcodegen_VERSION_MIN || version > qrcodegen_VERSION_MAX	503:5:20648:20713	5188883	0	True				
ANR	5188888	OrExpression	version < qrcodegen_VERSION_MIN || version > qrcodegen_VERSION_MAX		5188883	0		||			
ANR	5188889	RelationalExpression	version < qrcodegen_VERSION_MIN		5188883	0		<			
ANR	5188890	Identifier	version		5188883	0					
ANR	5188891	Identifier	qrcodegen_VERSION_MIN		5188883	1					
ANR	5188892	RelationalExpression	version > qrcodegen_VERSION_MAX		5188883	1		>			
ANR	5188893	Identifier	version		5188883	0					
ANR	5188894	Identifier	qrcodegen_VERSION_MAX		5188883	1					
ANR	5188895	CompoundStatement		2:73:74:74	5188883	1					
ANR	5188896	ReturnStatement	return 0 ;	504:2:20720:20728	5188883	0	True				
ANR	5188897	PrimaryExpression	0		5188883	0					
ANR	5188898	IdentifierDeclStatement	int result = ( 16 * version + 128 ) * version + 64 ;	506:1:20734:20782	5188883	1	True				
ANR	5188899	IdentifierDecl	result = ( 16 * version + 128 ) * version + 64		5188883	0					
ANR	5188900	IdentifierDeclType	int		5188883	0					
ANR	5188901	Identifier	result		5188883	1					
ANR	5188902	AssignmentExpression	result = ( 16 * version + 128 ) * version + 64		5188883	2		=			
ANR	5188903	Identifier	result		5188883	0					
ANR	5188904	AdditiveExpression	( 16 * version + 128 ) * version + 64		5188883	1		+			
ANR	5188905	MultiplicativeExpression	( 16 * version + 128 ) * version		5188883	0		*			
ANR	5188906	AdditiveExpression	16 * version + 128		5188883	0		+			
ANR	5188907	MultiplicativeExpression	16 * version		5188883	0		*			
ANR	5188908	PrimaryExpression	16		5188883	0					
ANR	5188909	Identifier	version		5188883	1					
ANR	5188910	PrimaryExpression	128		5188883	1					
ANR	5188911	Identifier	version		5188883	1					
ANR	5188912	PrimaryExpression	64		5188883	1					
ANR	5188913	IfStatement	if ( version >= 2 )		5188883	2					
ANR	5188914	Condition	version >= 2	507:5:20789:20800	5188883	0	True				
ANR	5188915	RelationalExpression	version >= 2		5188883	0		>=			
ANR	5188916	Identifier	version		5188883	0					
ANR	5188917	PrimaryExpression	2		5188883	1					
ANR	5188918	CompoundStatement		7:2:165:195	5188883	1					
ANR	5188919	IdentifierDeclStatement	int numAlign = version / 7 + 2 ;	508:2:20807:20837	5188883	0	True				
ANR	5188920	IdentifierDecl	numAlign = version / 7 + 2		5188883	0					
ANR	5188921	IdentifierDeclType	int		5188883	0					
ANR	5188922	Identifier	numAlign		5188883	1					
ANR	5188923	AssignmentExpression	numAlign = version / 7 + 2		5188883	2		=			
ANR	5188924	Identifier	numAlign		5188883	0					
ANR	5188925	AdditiveExpression	version / 7 + 2		5188883	1		+			
ANR	5188926	MultiplicativeExpression	version / 7		5188883	0		/			
ANR	5188927	Identifier	version		5188883	0					
ANR	5188928	PrimaryExpression	7		5188883	1					
ANR	5188929	PrimaryExpression	2		5188883	1					
ANR	5188930	ExpressionStatement	result -= ( 25 * numAlign - 10 ) * numAlign - 55	509:2:20841:20887	5188883	1	True				
ANR	5188931	AssignmentExpression	result -= ( 25 * numAlign - 10 ) * numAlign - 55		5188883	0		-=			
ANR	5188932	Identifier	result		5188883	0					
ANR	5188933	AdditiveExpression	( 25 * numAlign - 10 ) * numAlign - 55		5188883	1		-			
ANR	5188934	MultiplicativeExpression	( 25 * numAlign - 10 ) * numAlign		5188883	0		*			
ANR	5188935	AdditiveExpression	25 * numAlign - 10		5188883	0		-			
ANR	5188936	MultiplicativeExpression	25 * numAlign		5188883	0		*			
ANR	5188937	PrimaryExpression	25		5188883	0					
ANR	5188938	Identifier	numAlign		5188883	1					
ANR	5188939	PrimaryExpression	10		5188883	1					
ANR	5188940	Identifier	numAlign		5188883	1					
ANR	5188941	PrimaryExpression	55		5188883	1					
ANR	5188942	IfStatement	if ( version >= 7 )		5188883	2					
ANR	5188943	Condition	version >= 7	510:6:20895:20906	5188883	0	True				
ANR	5188944	RelationalExpression	version >= 7		5188883	0		>=			
ANR	5188945	Identifier	version		5188883	0					
ANR	5188946	PrimaryExpression	7		5188883	1					
ANR	5188947	CompoundStatement		9:20:267:267	5188883	1					
ANR	5188948	ExpressionStatement	result -= 18 * 2	511:3:20914:20930	5188883	0	True				
ANR	5188949	AssignmentExpression	result -= 18 * 2		5188883	0		-=			
ANR	5188950	Identifier	result		5188883	0					
ANR	5188951	MultiplicativeExpression	18 * 2		5188883	1		*			
ANR	5188952	PrimaryExpression	18		5188883	0					
ANR	5188953	PrimaryExpression	2		5188883	1					
ANR	5188954	ReturnStatement	return result ;	514:1:20972:20985	5188883	3	True				
ANR	5188955	Identifier	result		5188883	0					
ANR	5188956	ReturnType	static int		5188883	1					
ANR	5188957	Identifier	getNumRawDataModules		5188883	2					
ANR	5188958	ParameterList	int version		5188883	3					
ANR	5188959	Parameter	int version	502:32:20628:20638	5188883	0	True				
ANR	5188960	ParameterType	int		5188883	0					
ANR	5188961	Identifier	version		5188883	1					
ANR	5188962	CFGEntryNode	ENTRY		5188883		True				
ANR	5188963	CFGExitNode	EXIT		5188883		True				
ANR	5188964	Symbol	result		5188883						
ANR	5188965	Symbol	qrcodegen_VERSION_MIN		5188883						
ANR	5188966	Symbol	version		5188883						
ANR	5188967	Symbol	qrcodegen_VERSION_MAX		5188883						
ANR	5188968	Symbol	numAlign		5188883						
ANR	5188969	Function	calcReedSolomonGenerator	520:0:21146:21945							
ANR	5188970	FunctionDef	"calcReedSolomonGenerator (int degree , ut8 result [ ])"		5188969	0					
ANR	5188971	CompoundStatement		520:63:21209:21945	5188969	0					
ANR	5188972	IfStatement	if ( degree < 1 || degree > 31 )		5188969	0					
ANR	5188973	Condition	degree < 1 || degree > 31	522:5:21248:21272	5188969	0	True				
ANR	5188974	OrExpression	degree < 1 || degree > 31		5188969	0		||			
ANR	5188975	RelationalExpression	degree < 1		5188969	0		<			
ANR	5188976	Identifier	degree		5188969	0					
ANR	5188977	PrimaryExpression	1		5188969	1					
ANR	5188978	RelationalExpression	degree > 31		5188969	1		>			
ANR	5188979	Identifier	degree		5188969	0					
ANR	5188980	PrimaryExpression	31		5188969	1					
ANR	5188981	CompoundStatement		3:32:65:65	5188969	1					
ANR	5188982	ReturnStatement	return ;	523:2:21279:21285	5188969	0	True				
ANR	5188983	ExpressionStatement	"memset ( result , 0 , degree * sizeof ( result [ 0 ] ) )"	525:1:21291:21337	5188969	1	True				
ANR	5188984	CallExpression	"memset ( result , 0 , degree * sizeof ( result [ 0 ] ) )"		5188969	0					
ANR	5188985	Callee	memset		5188969	0					
ANR	5188986	Identifier	memset		5188969	0					
ANR	5188987	ArgumentList	result		5188969	1					
ANR	5188988	Argument	result		5188969	0					
ANR	5188989	Identifier	result		5188969	0					
ANR	5188990	Argument	0		5188969	1					
ANR	5188991	PrimaryExpression	0		5188969	0					
ANR	5188992	Argument	degree * sizeof ( result [ 0 ] )		5188969	2					
ANR	5188993	MultiplicativeExpression	degree * sizeof ( result [ 0 ] )		5188969	0		*			
ANR	5188994	Identifier	degree		5188969	0					
ANR	5188995	SizeofExpression	sizeof ( result [ 0 ] )		5188969	1					
ANR	5188996	Sizeof	sizeof		5188969	0					
ANR	5188997	ArrayIndexing	result [ 0 ]		5188969	1					
ANR	5188998	Identifier	result		5188969	0					
ANR	5188999	PrimaryExpression	0		5188969	1					
ANR	5189000	ExpressionStatement	result [ degree - 1 ] = 1	526:1:21340:21362	5188969	2	True				
ANR	5189001	AssignmentExpression	result [ degree - 1 ] = 1		5188969	0		=			
ANR	5189002	ArrayIndexing	result [ degree - 1 ]		5188969	0					
ANR	5189003	Identifier	result		5188969	0					
ANR	5189004	AdditiveExpression	degree - 1		5188969	1		-			
ANR	5189005	Identifier	degree		5188969	0					
ANR	5189006	PrimaryExpression	1		5188969	1					
ANR	5189007	PrimaryExpression	1		5188969	1					
ANR	5189008	IdentifierDeclStatement	"int i , j ;"	531:1:21642:21650	5188969	3	True				
ANR	5189009	IdentifierDecl	i		5188969	0					
ANR	5189010	IdentifierDeclType	int		5188969	0					
ANR	5189011	Identifier	i		5188969	1					
ANR	5189012	IdentifierDecl	j		5188969	1					
ANR	5189013	IdentifierDeclType	int		5188969	0					
ANR	5189014	Identifier	j		5188969	1					
ANR	5189015	IdentifierDeclStatement	ut8 root = 1 ;	532:1:21653:21665	5188969	4	True				
ANR	5189016	IdentifierDecl	root = 1		5188969	0					
ANR	5189017	IdentifierDeclType	ut8		5188969	0					
ANR	5189018	Identifier	root		5188969	1					
ANR	5189019	AssignmentExpression	root = 1		5188969	2		=			
ANR	5189020	Identifier	root		5188969	0					
ANR	5189021	PrimaryExpression	1		5188969	1					
ANR	5189022	ForStatement	for ( i = 0 ; i < degree ; i ++ )		5188969	5					
ANR	5189023	ForInit	i = 0 ;	533:6:21673:21678	5188969	0	True				
ANR	5189024	AssignmentExpression	i = 0		5188969	0		=			
ANR	5189025	Identifier	i		5188969	0					
ANR	5189026	PrimaryExpression	0		5188969	1					
ANR	5189027	Condition	i < degree	533:13:21680:21689	5188969	1	True				
ANR	5189028	RelationalExpression	i < degree		5188969	0		<			
ANR	5189029	Identifier	i		5188969	0					
ANR	5189030	Identifier	degree		5188969	1					
ANR	5189031	PostIncDecOperationExpression	i ++	533:25:21692:21694	5188969	2	True				
ANR	5189032	Identifier	i		5188969	0					
ANR	5189033	IncDec	++		5188969	1					
ANR	5189034	CompoundStatement		14:30:487:487	5188969	3					
ANR	5189035	ForStatement	for ( j = 0 ; j < degree ; j ++ )		5188969	0					
ANR	5189036	ForInit	j = 0 ;	535:7:21753:21758	5188969	0	True				
ANR	5189037	AssignmentExpression	j = 0		5188969	0		=			
ANR	5189038	Identifier	j		5188969	0					
ANR	5189039	PrimaryExpression	0		5188969	1					
ANR	5189040	Condition	j < degree	535:14:21760:21769	5188969	1	True				
ANR	5189041	RelationalExpression	j < degree		5188969	0		<			
ANR	5189042	Identifier	j		5188969	0					
ANR	5189043	Identifier	degree		5188969	1					
ANR	5189044	PostIncDecOperationExpression	j ++	535:26:21772:21774	5188969	2	True				
ANR	5189045	Identifier	j		5188969	0					
ANR	5189046	IncDec	++		5188969	1					
ANR	5189047	CompoundStatement		16:31:567:567	5188969	3					
ANR	5189048	ExpressionStatement	"result [ j ] = finiteFieldMultiply ( result [ j ] , root )"	536:3:21782:21831	5188969	0	True				
ANR	5189049	AssignmentExpression	"result [ j ] = finiteFieldMultiply ( result [ j ] , root )"		5188969	0		=			
ANR	5189050	ArrayIndexing	result [ j ]		5188969	0					
ANR	5189051	Identifier	result		5188969	0					
ANR	5189052	Identifier	j		5188969	1					
ANR	5189053	CallExpression	"finiteFieldMultiply ( result [ j ] , root )"		5188969	1					
ANR	5189054	Callee	finiteFieldMultiply		5188969	0					
ANR	5189055	Identifier	finiteFieldMultiply		5188969	0					
ANR	5189056	ArgumentList	result [ j ]		5188969	1					
ANR	5189057	Argument	result [ j ]		5188969	0					
ANR	5189058	ArrayIndexing	result [ j ]		5188969	0					
ANR	5189059	Identifier	result		5188969	0					
ANR	5189060	Identifier	j		5188969	1					
ANR	5189061	Argument	root		5188969	1					
ANR	5189062	Identifier	root		5188969	0					
ANR	5189063	IfStatement	if ( j + 1 < degree )		5188969	1					
ANR	5189064	Condition	j + 1 < degree	537:7:21840:21853	5188969	0	True				
ANR	5189065	RelationalExpression	j + 1 < degree		5188969	0		<			
ANR	5189066	AdditiveExpression	j + 1		5188969	0		+			
ANR	5189067	Identifier	j		5188969	0					
ANR	5189068	PrimaryExpression	1		5188969	1					
ANR	5189069	Identifier	degree		5188969	1					
ANR	5189070	CompoundStatement		18:23:646:646	5188969	1					
ANR	5189071	ExpressionStatement	result [ j ] ^= result [ j + 1 ]	538:4:21862:21888	5188969	0	True				
ANR	5189072	AssignmentExpression	result [ j ] ^= result [ j + 1 ]		5188969	0		^=			
ANR	5189073	ArrayIndexing	result [ j ]		5188969	0					
ANR	5189074	Identifier	result		5188969	0					
ANR	5189075	Identifier	j		5188969	1					
ANR	5189076	ArrayIndexing	result [ j + 1 ]		5188969	1					
ANR	5189077	Identifier	result		5188969	0					
ANR	5189078	AdditiveExpression	j + 1		5188969	1		+			
ANR	5189079	Identifier	j		5188969	0					
ANR	5189080	PrimaryExpression	1		5188969	1					
ANR	5189081	ExpressionStatement	"root = finiteFieldMultiply ( root , 0x02 )"	541:2:21901:21940	5188969	1	True				
ANR	5189082	AssignmentExpression	"root = finiteFieldMultiply ( root , 0x02 )"		5188969	0		=			
ANR	5189083	Identifier	root		5188969	0					
ANR	5189084	CallExpression	"finiteFieldMultiply ( root , 0x02 )"		5188969	1					
ANR	5189085	Callee	finiteFieldMultiply		5188969	0					
ANR	5189086	Identifier	finiteFieldMultiply		5188969	0					
ANR	5189087	ArgumentList	root		5188969	1					
ANR	5189088	Argument	root		5188969	0					
ANR	5189089	Identifier	root		5188969	0					
ANR	5189090	Argument	0x02		5188969	1					
ANR	5189091	PrimaryExpression	0x02		5188969	0					
ANR	5189092	ReturnType	static void		5188969	1					
ANR	5189093	Identifier	calcReedSolomonGenerator		5188969	2					
ANR	5189094	ParameterList	"int degree , ut8 result [ ]"		5188969	3					
ANR	5189095	Parameter	int degree	520:37:21183:21192	5188969	0	True				
ANR	5189096	ParameterType	int		5188969	0					
ANR	5189097	Identifier	degree		5188969	1					
ANR	5189098	Parameter	ut8 result [ ]	520:49:21195:21206	5188969	1	True				
ANR	5189099	ParameterType	ut8 [ ]		5188969	0					
ANR	5189100	Identifier	result		5188969	1					
ANR	5189101	CFGEntryNode	ENTRY		5188969		True				
ANR	5189102	CFGExitNode	EXIT		5188969		True				
ANR	5189103	Symbol	result		5188969						
ANR	5189104	Symbol	finiteFieldMultiply		5188969						
ANR	5189105	Symbol	* j		5188969						
ANR	5189106	Symbol	* result		5188969						
ANR	5189107	Symbol	root		5188969						
ANR	5189108	Symbol	degree		5188969						
ANR	5189109	Symbol	i		5188969						
ANR	5189110	Symbol	j		5188969						
ANR	5189111	Symbol	* degree		5188969						
ANR	5189112	Function	calcReedSolomonRemainder	548:0:22191:22714							
ANR	5189113	FunctionDef	"calcReedSolomonRemainder (const ut8 data [ ] , int dataLen , const ut8 generator [ ] , int degree , ut8 result [ ])"		5189112	0					
ANR	5189114	CompoundStatement		548:117:22308:22714	5189112	0					
ANR	5189115	IfStatement	if ( degree < 1 || degree > 31 )		5189112	0					
ANR	5189116	Condition	degree < 1 || degree > 31	550:5:22347:22371	5189112	0	True				
ANR	5189117	OrExpression	degree < 1 || degree > 31		5189112	0		||			
ANR	5189118	RelationalExpression	degree < 1		5189112	0		<			
ANR	5189119	Identifier	degree		5189112	0					
ANR	5189120	PrimaryExpression	1		5189112	1					
ANR	5189121	RelationalExpression	degree > 31		5189112	1		>			
ANR	5189122	Identifier	degree		5189112	0					
ANR	5189123	PrimaryExpression	31		5189112	1					
ANR	5189124	CompoundStatement		3:32:65:65	5189112	1					
ANR	5189125	ReturnStatement	return ;	551:2:22378:22384	5189112	0	True				
ANR	5189126	ExpressionStatement	"memset ( result , 0 , degree * sizeof ( result [ 0 ] ) )"	553:1:22390:22436	5189112	1	True				
ANR	5189127	CallExpression	"memset ( result , 0 , degree * sizeof ( result [ 0 ] ) )"		5189112	0					
ANR	5189128	Callee	memset		5189112	0					
ANR	5189129	Identifier	memset		5189112	0					
ANR	5189130	ArgumentList	result		5189112	1					
ANR	5189131	Argument	result		5189112	0					
ANR	5189132	Identifier	result		5189112	0					
ANR	5189133	Argument	0		5189112	1					
ANR	5189134	PrimaryExpression	0		5189112	0					
ANR	5189135	Argument	degree * sizeof ( result [ 0 ] )		5189112	2					
ANR	5189136	MultiplicativeExpression	degree * sizeof ( result [ 0 ] )		5189112	0		*			
ANR	5189137	Identifier	degree		5189112	0					
ANR	5189138	SizeofExpression	sizeof ( result [ 0 ] )		5189112	1					
ANR	5189139	Sizeof	sizeof		5189112	0					
ANR	5189140	ArrayIndexing	result [ 0 ]		5189112	1					
ANR	5189141	Identifier	result		5189112	0					
ANR	5189142	PrimaryExpression	0		5189112	1					
ANR	5189143	IdentifierDeclStatement	"int i , j ;"	554:1:22439:22447	5189112	2	True				
ANR	5189144	IdentifierDecl	i		5189112	0					
ANR	5189145	IdentifierDeclType	int		5189112	0					
ANR	5189146	Identifier	i		5189112	1					
ANR	5189147	IdentifierDecl	j		5189112	1					
ANR	5189148	IdentifierDeclType	int		5189112	0					
ANR	5189149	Identifier	j		5189112	1					
ANR	5189150	ForStatement	for ( i = 0 ; i < dataLen ; i ++ )		5189112	3					
ANR	5189151	ForInit	i = 0 ;	555:6:22455:22460	5189112	0	True				
ANR	5189152	AssignmentExpression	i = 0		5189112	0		=			
ANR	5189153	Identifier	i		5189112	0					
ANR	5189154	PrimaryExpression	0		5189112	1					
ANR	5189155	Condition	i < dataLen	555:13:22462:22472	5189112	1	True				
ANR	5189156	RelationalExpression	i < dataLen		5189112	0		<			
ANR	5189157	Identifier	i		5189112	0					
ANR	5189158	Identifier	dataLen		5189112	1					
ANR	5189159	PostIncDecOperationExpression	i ++	555:26:22475:22477	5189112	2	True				
ANR	5189160	Identifier	i		5189112	0					
ANR	5189161	IncDec	++		5189112	1					
ANR	5189162	CompoundStatement		9:2:175:207	5189112	3					
ANR	5189163	IdentifierDeclStatement	ut8 factor = data [ i ] ^ result [ 0 ] ;	556:2:22484:22516	5189112	0	True				
ANR	5189164	IdentifierDecl	factor = data [ i ] ^ result [ 0 ]		5189112	0					
ANR	5189165	IdentifierDeclType	ut8		5189112	0					
ANR	5189166	Identifier	factor		5189112	1					
ANR	5189167	AssignmentExpression	factor = data [ i ] ^ result [ 0 ]		5189112	2		=			
ANR	5189168	Identifier	factor		5189112	0					
ANR	5189169	ExclusiveOrExpression	data [ i ] ^ result [ 0 ]		5189112	1		^			
ANR	5189170	ArrayIndexing	data [ i ]		5189112	0					
ANR	5189171	Identifier	data		5189112	0					
ANR	5189172	Identifier	i		5189112	1					
ANR	5189173	ArrayIndexing	result [ 0 ]		5189112	1					
ANR	5189174	Identifier	result		5189112	0					
ANR	5189175	PrimaryExpression	0		5189112	1					
ANR	5189176	ExpressionStatement	"memmove ( & result [ 0 ] , & result [ 1 ] , ( degree - 1 ) * sizeof ( result [ 0 ] ) )"	557:2:22520:22586	5189112	1	True				
ANR	5189177	CallExpression	"memmove ( & result [ 0 ] , & result [ 1 ] , ( degree - 1 ) * sizeof ( result [ 0 ] ) )"		5189112	0					
ANR	5189178	Callee	memmove		5189112	0					
ANR	5189179	Identifier	memmove		5189112	0					
ANR	5189180	ArgumentList	& result [ 0 ]		5189112	1					
ANR	5189181	Argument	& result [ 0 ]		5189112	0					
ANR	5189182	UnaryOperationExpression	& result [ 0 ]		5189112	0					
ANR	5189183	UnaryOperator	&		5189112	0					
ANR	5189184	ArrayIndexing	result [ 0 ]		5189112	1					
ANR	5189185	Identifier	result		5189112	0					
ANR	5189186	PrimaryExpression	0		5189112	1					
ANR	5189187	Argument	& result [ 1 ]		5189112	1					
ANR	5189188	UnaryOperationExpression	& result [ 1 ]		5189112	0					
ANR	5189189	UnaryOperator	&		5189112	0					
ANR	5189190	ArrayIndexing	result [ 1 ]		5189112	1					
ANR	5189191	Identifier	result		5189112	0					
ANR	5189192	PrimaryExpression	1		5189112	1					
ANR	5189193	Argument	( degree - 1 ) * sizeof ( result [ 0 ] )		5189112	2					
ANR	5189194	MultiplicativeExpression	( degree - 1 ) * sizeof ( result [ 0 ] )		5189112	0		*			
ANR	5189195	AdditiveExpression	degree - 1		5189112	0		-			
ANR	5189196	Identifier	degree		5189112	0					
ANR	5189197	PrimaryExpression	1		5189112	1					
ANR	5189198	SizeofExpression	sizeof ( result [ 0 ] )		5189112	1					
ANR	5189199	Sizeof	sizeof		5189112	0					
ANR	5189200	ArrayIndexing	result [ 0 ]		5189112	1					
ANR	5189201	Identifier	result		5189112	0					
ANR	5189202	PrimaryExpression	0		5189112	1					
ANR	5189203	ExpressionStatement	result [ degree - 1 ] = 0	558:2:22590:22612	5189112	2	True				
ANR	5189204	AssignmentExpression	result [ degree - 1 ] = 0		5189112	0		=			
ANR	5189205	ArrayIndexing	result [ degree - 1 ]		5189112	0					
ANR	5189206	Identifier	result		5189112	0					
ANR	5189207	AdditiveExpression	degree - 1		5189112	1		-			
ANR	5189208	Identifier	degree		5189112	0					
ANR	5189209	PrimaryExpression	1		5189112	1					
ANR	5189210	PrimaryExpression	0		5189112	1					
ANR	5189211	ForStatement	for ( j = 0 ; j < degree ; j ++ )		5189112	3					
ANR	5189212	ForInit	j = 0 ;	559:7:22621:22626	5189112	0	True				
ANR	5189213	AssignmentExpression	j = 0		5189112	0		=			
ANR	5189214	Identifier	j		5189112	0					
ANR	5189215	PrimaryExpression	0		5189112	1					
ANR	5189216	Condition	j < degree	559:14:22628:22637	5189112	1	True				
ANR	5189217	RelationalExpression	j < degree		5189112	0		<			
ANR	5189218	Identifier	j		5189112	0					
ANR	5189219	Identifier	degree		5189112	1					
ANR	5189220	PostIncDecOperationExpression	j ++	559:26:22640:22642	5189112	2	True				
ANR	5189221	Identifier	j		5189112	0					
ANR	5189222	IncDec	++		5189112	1					
ANR	5189223	CompoundStatement		12:31:336:336	5189112	3					
ANR	5189224	ExpressionStatement	"result [ j ] ^= finiteFieldMultiply ( generator [ j ] , factor )"	560:3:22650:22705	5189112	0	True				
ANR	5189225	AssignmentExpression	"result [ j ] ^= finiteFieldMultiply ( generator [ j ] , factor )"		5189112	0		^=			
ANR	5189226	ArrayIndexing	result [ j ]		5189112	0					
ANR	5189227	Identifier	result		5189112	0					
ANR	5189228	Identifier	j		5189112	1					
ANR	5189229	CallExpression	"finiteFieldMultiply ( generator [ j ] , factor )"		5189112	1					
ANR	5189230	Callee	finiteFieldMultiply		5189112	0					
ANR	5189231	Identifier	finiteFieldMultiply		5189112	0					
ANR	5189232	ArgumentList	generator [ j ]		5189112	1					
ANR	5189233	Argument	generator [ j ]		5189112	0					
ANR	5189234	ArrayIndexing	generator [ j ]		5189112	0					
ANR	5189235	Identifier	generator		5189112	0					
ANR	5189236	Identifier	j		5189112	1					
ANR	5189237	Argument	factor		5189112	1					
ANR	5189238	Identifier	factor		5189112	0					
ANR	5189239	ReturnType	static void		5189112	1					
ANR	5189240	Identifier	calcReedSolomonRemainder		5189112	2					
ANR	5189241	ParameterList	"const ut8 data [ ] , int dataLen , const ut8 generator [ ] , int degree , ut8 result [ ]"		5189112	3					
ANR	5189242	Parameter	const ut8 data [ ]	548:37:22228:22243	5189112	0	True				
ANR	5189243	ParameterType	const ut8 [ ]		5189112	0					
ANR	5189244	Identifier	data		5189112	1					
ANR	5189245	Parameter	int dataLen	548:55:22246:22256	5189112	1	True				
ANR	5189246	ParameterType	int		5189112	0					
ANR	5189247	Identifier	dataLen		5189112	1					
ANR	5189248	Parameter	const ut8 generator [ ]	548:68:22259:22279	5189112	2	True				
ANR	5189249	ParameterType	const ut8 [ ]		5189112	0					
ANR	5189250	Identifier	generator		5189112	1					
ANR	5189251	Parameter	int degree	548:91:22282:22291	5189112	3	True				
ANR	5189252	ParameterType	int		5189112	0					
ANR	5189253	Identifier	degree		5189112	1					
ANR	5189254	Parameter	ut8 result [ ]	548:103:22294:22305	5189112	4	True				
ANR	5189255	ParameterType	ut8 [ ]		5189112	0					
ANR	5189256	Identifier	result		5189112	1					
ANR	5189257	CFGEntryNode	ENTRY		5189112		True				
ANR	5189258	CFGExitNode	EXIT		5189112		True				
ANR	5189259	Symbol	finiteFieldMultiply		5189112						
ANR	5189260	Symbol	data		5189112						
ANR	5189261	Symbol	degree		5189112						
ANR	5189262	Symbol	generator		5189112						
ANR	5189263	Symbol	i		5189112						
ANR	5189264	Symbol	j		5189112						
ANR	5189265	Symbol	dataLen		5189112						
ANR	5189266	Symbol	result		5189112						
ANR	5189267	Symbol	* i		5189112						
ANR	5189268	Symbol	* generator		5189112						
ANR	5189269	Symbol	* j		5189112						
ANR	5189270	Symbol	* result		5189112						
ANR	5189271	Symbol	factor		5189112						
ANR	5189272	Symbol	* data		5189112						
ANR	5189273	Symbol	* degree		5189112						
ANR	5189274	Function	finiteFieldMultiply	568:0:22873:23081							
ANR	5189275	FunctionDef	"finiteFieldMultiply (ut8 x , ut8 y)"		5189274	0					
ANR	5189276	CompoundStatement		568:45:22918:23081	5189274	0					
ANR	5189277	IdentifierDeclStatement	ut8 z = 0 ;	570:1:22956:22965	5189274	0	True				
ANR	5189278	IdentifierDecl	z = 0		5189274	0					
ANR	5189279	IdentifierDeclType	ut8		5189274	0					
ANR	5189280	Identifier	z		5189274	1					
ANR	5189281	AssignmentExpression	z = 0		5189274	2		=			
ANR	5189282	Identifier	z		5189274	0					
ANR	5189283	PrimaryExpression	0		5189274	1					
ANR	5189284	IdentifierDeclStatement	int i ;	571:1:22968:22973	5189274	1	True				
ANR	5189285	IdentifierDecl	i		5189274	0					
ANR	5189286	IdentifierDeclType	int		5189274	0					
ANR	5189287	Identifier	i		5189274	1					
ANR	5189288	ForStatement	for ( i = 7 ; i >= 0 ; i -- )		5189274	2					
ANR	5189289	ForInit	i = 7 ;	572:6:22981:22986	5189274	0	True				
ANR	5189290	AssignmentExpression	i = 7		5189274	0		=			
ANR	5189291	Identifier	i		5189274	0					
ANR	5189292	PrimaryExpression	7		5189274	1					
ANR	5189293	Condition	i >= 0	572:13:22988:22993	5189274	1	True				
ANR	5189294	RelationalExpression	i >= 0		5189274	0		>=			
ANR	5189295	Identifier	i		5189274	0					
ANR	5189296	PrimaryExpression	0		5189274	1					
ANR	5189297	PostIncDecOperationExpression	i --	572:21:22996:22998	5189274	2	True				
ANR	5189298	Identifier	i		5189274	0					
ANR	5189299	IncDec	--		5189274	1					
ANR	5189300	CompoundStatement		5:26:82:82	5189274	3					
ANR	5189301	ExpressionStatement	z = ( z << 1 ) ^ ( ( z >> 7 ) * 0x11D )	573:2:23005:23038	5189274	0	True				
ANR	5189302	AssignmentExpression	z = ( z << 1 ) ^ ( ( z >> 7 ) * 0x11D )		5189274	0		=			
ANR	5189303	Identifier	z		5189274	0					
ANR	5189304	ExclusiveOrExpression	( z << 1 ) ^ ( ( z >> 7 ) * 0x11D )		5189274	1		^			
ANR	5189305	ShiftExpression	z << 1		5189274	0		<<			
ANR	5189306	Identifier	z		5189274	0					
ANR	5189307	PrimaryExpression	1		5189274	1					
ANR	5189308	MultiplicativeExpression	( z >> 7 ) * 0x11D		5189274	1		*			
ANR	5189309	ShiftExpression	z >> 7		5189274	0		>>			
ANR	5189310	Identifier	z		5189274	0					
ANR	5189311	PrimaryExpression	7		5189274	1					
ANR	5189312	PrimaryExpression	0x11D		5189274	1					
ANR	5189313	ExpressionStatement	z ^= ( ( y >> i ) & 1 ) * x	574:2:23042:23065	5189274	1	True				
ANR	5189314	AssignmentExpression	z ^= ( ( y >> i ) & 1 ) * x		5189274	0		^=			
ANR	5189315	Identifier	z		5189274	0					
ANR	5189316	MultiplicativeExpression	( ( y >> i ) & 1 ) * x		5189274	1		*			
ANR	5189317	BitAndExpression	( y >> i ) & 1		5189274	0		&			
ANR	5189318	ShiftExpression	y >> i		5189274	0		>>			
ANR	5189319	Identifier	y		5189274	0					
ANR	5189320	Identifier	i		5189274	1					
ANR	5189321	PrimaryExpression	1		5189274	1					
ANR	5189322	Identifier	x		5189274	1					
ANR	5189323	ReturnStatement	return z ;	576:1:23071:23079	5189274	3	True				
ANR	5189324	Identifier	z		5189274	0					
ANR	5189325	ReturnType	static ut8		5189274	1					
ANR	5189326	Identifier	finiteFieldMultiply		5189274	2					
ANR	5189327	ParameterList	"ut8 x , ut8 y"		5189274	3					
ANR	5189328	Parameter	ut8 x	568:31:22904:22908	5189274	0	True				
ANR	5189329	ParameterType	ut8		5189274	0					
ANR	5189330	Identifier	x		5189274	1					
ANR	5189331	Parameter	ut8 y	568:38:22911:22915	5189274	1	True				
ANR	5189332	ParameterType	ut8		5189274	0					
ANR	5189333	Identifier	y		5189274	1					
ANR	5189334	CFGEntryNode	ENTRY		5189274		True				
ANR	5189335	CFGExitNode	EXIT		5189274		True				
ANR	5189336	Symbol	x		5189274						
ANR	5189337	Symbol	y		5189274						
ANR	5189338	Symbol	i		5189274						
ANR	5189339	Symbol	z		5189274						
ANR	5189340	Function	initializeFunctionModules	583:0:23252:24402							
ANR	5189341	FunctionDef	"initializeFunctionModules (int version , ut8 qrcode [ ])"		5189340	0					
ANR	5189342	CompoundStatement		583:65:23317:24402	5189340	0					
ANR	5189343	IdentifierDeclStatement	int qrsize = version * 4 + 17 ;	585:1:23343:23372	5189340	0	True				
ANR	5189344	IdentifierDecl	qrsize = version * 4 + 17		5189340	0					
ANR	5189345	IdentifierDeclType	int		5189340	0					
ANR	5189346	Identifier	qrsize		5189340	1					
ANR	5189347	AssignmentExpression	qrsize = version * 4 + 17		5189340	2		=			
ANR	5189348	Identifier	qrsize		5189340	0					
ANR	5189349	AdditiveExpression	version * 4 + 17		5189340	1		+			
ANR	5189350	MultiplicativeExpression	version * 4		5189340	0		*			
ANR	5189351	Identifier	version		5189340	0					
ANR	5189352	PrimaryExpression	4		5189340	1					
ANR	5189353	PrimaryExpression	17		5189340	1					
ANR	5189354	ExpressionStatement	"memset ( qrcode , 0 , ( ( qrsize * qrsize + 7 ) / 8 + 1 ) * sizeof ( qrcode [ 0 ] ) )"	586:1:23375:23446	5189340	1	True				
ANR	5189355	CallExpression	"memset ( qrcode , 0 , ( ( qrsize * qrsize + 7 ) / 8 + 1 ) * sizeof ( qrcode [ 0 ] ) )"		5189340	0					
ANR	5189356	Callee	memset		5189340	0					
ANR	5189357	Identifier	memset		5189340	0					
ANR	5189358	ArgumentList	qrcode		5189340	1					
ANR	5189359	Argument	qrcode		5189340	0					
ANR	5189360	Identifier	qrcode		5189340	0					
ANR	5189361	Argument	0		5189340	1					
ANR	5189362	PrimaryExpression	0		5189340	0					
ANR	5189363	Argument	( ( qrsize * qrsize + 7 ) / 8 + 1 ) * sizeof ( qrcode [ 0 ] )		5189340	2					
ANR	5189364	MultiplicativeExpression	( ( qrsize * qrsize + 7 ) / 8 + 1 ) * sizeof ( qrcode [ 0 ] )		5189340	0		*			
ANR	5189365	AdditiveExpression	( qrsize * qrsize + 7 ) / 8 + 1		5189340	0		+			
ANR	5189366	MultiplicativeExpression	( qrsize * qrsize + 7 ) / 8		5189340	0		/			
ANR	5189367	AdditiveExpression	qrsize * qrsize + 7		5189340	0		+			
ANR	5189368	MultiplicativeExpression	qrsize * qrsize		5189340	0		*			
ANR	5189369	Identifier	qrsize		5189340	0					
ANR	5189370	Identifier	qrsize		5189340	1					
ANR	5189371	PrimaryExpression	7		5189340	1					
ANR	5189372	PrimaryExpression	8		5189340	1					
ANR	5189373	PrimaryExpression	1		5189340	1					
ANR	5189374	SizeofExpression	sizeof ( qrcode [ 0 ] )		5189340	1					
ANR	5189375	Sizeof	sizeof		5189340	0					
ANR	5189376	ArrayIndexing	qrcode [ 0 ]		5189340	1					
ANR	5189377	Identifier	qrcode		5189340	0					
ANR	5189378	PrimaryExpression	0		5189340	1					
ANR	5189379	ExpressionStatement	qrcode [ 0 ] = ( ut8 ) qrsize	587:1:23449:23473	5189340	2	True				
ANR	5189380	AssignmentExpression	qrcode [ 0 ] = ( ut8 ) qrsize		5189340	0		=			
ANR	5189381	ArrayIndexing	qrcode [ 0 ]		5189340	0					
ANR	5189382	Identifier	qrcode		5189340	0					
ANR	5189383	PrimaryExpression	0		5189340	1					
ANR	5189384	CastExpression	( ut8 ) qrsize		5189340	1					
ANR	5189385	CastTarget	ut8		5189340	0					
ANR	5189386	Identifier	qrsize		5189340	1					
ANR	5189387	ExpressionStatement	"fillRectangle ( 6 , 0 , 1 , qrsize , qrcode )"	590:1:23526:23565	5189340	3	True				
ANR	5189388	CallExpression	"fillRectangle ( 6 , 0 , 1 , qrsize , qrcode )"		5189340	0					
ANR	5189389	Callee	fillRectangle		5189340	0					
ANR	5189390	Identifier	fillRectangle		5189340	0					
ANR	5189391	ArgumentList	6		5189340	1					
ANR	5189392	Argument	6		5189340	0					
ANR	5189393	PrimaryExpression	6		5189340	0					
ANR	5189394	Argument	0		5189340	1					
ANR	5189395	PrimaryExpression	0		5189340	0					
ANR	5189396	Argument	1		5189340	2					
ANR	5189397	PrimaryExpression	1		5189340	0					
ANR	5189398	Argument	qrsize		5189340	3					
ANR	5189399	Identifier	qrsize		5189340	0					
ANR	5189400	Argument	qrcode		5189340	4					
ANR	5189401	Identifier	qrcode		5189340	0					
ANR	5189402	ExpressionStatement	"fillRectangle ( 0 , 6 , qrsize , 1 , qrcode )"	591:1:23568:23607	5189340	4	True				
ANR	5189403	CallExpression	"fillRectangle ( 0 , 6 , qrsize , 1 , qrcode )"		5189340	0					
ANR	5189404	Callee	fillRectangle		5189340	0					
ANR	5189405	Identifier	fillRectangle		5189340	0					
ANR	5189406	ArgumentList	0		5189340	1					
ANR	5189407	Argument	0		5189340	0					
ANR	5189408	PrimaryExpression	0		5189340	0					
ANR	5189409	Argument	6		5189340	1					
ANR	5189410	PrimaryExpression	6		5189340	0					
ANR	5189411	Argument	qrsize		5189340	2					
ANR	5189412	Identifier	qrsize		5189340	0					
ANR	5189413	Argument	1		5189340	3					
ANR	5189414	PrimaryExpression	1		5189340	0					
ANR	5189415	Argument	qrcode		5189340	4					
ANR	5189416	Identifier	qrcode		5189340	0					
ANR	5189417	ExpressionStatement	"fillRectangle ( 0 , 0 , 9 , 9 , qrcode )"	594:1:23688:23722	5189340	5	True				
ANR	5189418	CallExpression	"fillRectangle ( 0 , 0 , 9 , 9 , qrcode )"		5189340	0					
ANR	5189419	Callee	fillRectangle		5189340	0					
ANR	5189420	Identifier	fillRectangle		5189340	0					
ANR	5189421	ArgumentList	0		5189340	1					
ANR	5189422	Argument	0		5189340	0					
ANR	5189423	PrimaryExpression	0		5189340	0					
ANR	5189424	Argument	0		5189340	1					
ANR	5189425	PrimaryExpression	0		5189340	0					
ANR	5189426	Argument	9		5189340	2					
ANR	5189427	PrimaryExpression	9		5189340	0					
ANR	5189428	Argument	9		5189340	3					
ANR	5189429	PrimaryExpression	9		5189340	0					
ANR	5189430	Argument	qrcode		5189340	4					
ANR	5189431	Identifier	qrcode		5189340	0					
ANR	5189432	ExpressionStatement	"fillRectangle ( qrsize - 8 , 0 , 8 , 9 , qrcode )"	595:1:23725:23768	5189340	6	True				
ANR	5189433	CallExpression	"fillRectangle ( qrsize - 8 , 0 , 8 , 9 , qrcode )"		5189340	0					
ANR	5189434	Callee	fillRectangle		5189340	0					
ANR	5189435	Identifier	fillRectangle		5189340	0					
ANR	5189436	ArgumentList	qrsize - 8		5189340	1					
ANR	5189437	Argument	qrsize - 8		5189340	0					
ANR	5189438	AdditiveExpression	qrsize - 8		5189340	0		-			
ANR	5189439	Identifier	qrsize		5189340	0					
ANR	5189440	PrimaryExpression	8		5189340	1					
ANR	5189441	Argument	0		5189340	1					
ANR	5189442	PrimaryExpression	0		5189340	0					
ANR	5189443	Argument	8		5189340	2					
ANR	5189444	PrimaryExpression	8		5189340	0					
ANR	5189445	Argument	9		5189340	3					
ANR	5189446	PrimaryExpression	9		5189340	0					
ANR	5189447	Argument	qrcode		5189340	4					
ANR	5189448	Identifier	qrcode		5189340	0					
ANR	5189449	ExpressionStatement	"fillRectangle ( 0 , qrsize - 8 , 9 , 8 , qrcode )"	596:1:23771:23814	5189340	7	True				
ANR	5189450	CallExpression	"fillRectangle ( 0 , qrsize - 8 , 9 , 8 , qrcode )"		5189340	0					
ANR	5189451	Callee	fillRectangle		5189340	0					
ANR	5189452	Identifier	fillRectangle		5189340	0					
ANR	5189453	ArgumentList	0		5189340	1					
ANR	5189454	Argument	0		5189340	0					
ANR	5189455	PrimaryExpression	0		5189340	0					
ANR	5189456	Argument	qrsize - 8		5189340	1					
ANR	5189457	AdditiveExpression	qrsize - 8		5189340	0		-			
ANR	5189458	Identifier	qrsize		5189340	0					
ANR	5189459	PrimaryExpression	8		5189340	1					
ANR	5189460	Argument	9		5189340	2					
ANR	5189461	PrimaryExpression	9		5189340	0					
ANR	5189462	Argument	8		5189340	3					
ANR	5189463	PrimaryExpression	8		5189340	0					
ANR	5189464	Argument	qrcode		5189340	4					
ANR	5189465	Identifier	qrcode		5189340	0					
ANR	5189466	IdentifierDeclStatement	ut8 alignPatPos [ 7 ] = { 0 } ;	599:1:23855:23884	5189340	8	True				
ANR	5189467	IdentifierDecl	alignPatPos [ 7 ] = { 0 }		5189340	0					
ANR	5189468	IdentifierDeclType	ut8 [ 7 ]		5189340	0					
ANR	5189469	Identifier	alignPatPos		5189340	1					
ANR	5189470	PrimaryExpression	7		5189340	2					
ANR	5189471	AssignmentExpression	alignPatPos [ 7 ] = { 0 }		5189340	3		=			
ANR	5189472	Identifier	alignPatPos		5189340	0					
ANR	5189473	InitializerList	0		5189340	1					
ANR	5189474	PrimaryExpression	0		5189340	0					
ANR	5189475	IdentifierDeclStatement	"int i , j , numAlign = getAlignmentPatternPositions ( version , alignPatPos ) ;"	602:1:23887:23959	5189340	9	True				
ANR	5189476	IdentifierDecl	i		5189340	0					
ANR	5189477	IdentifierDeclType	int		5189340	0					
ANR	5189478	Identifier	i		5189340	1					
ANR	5189479	IdentifierDecl	j		5189340	1					
ANR	5189480	IdentifierDeclType	int		5189340	0					
ANR	5189481	Identifier	j		5189340	1					
ANR	5189482	IdentifierDecl	"numAlign = getAlignmentPatternPositions ( version , alignPatPos )"		5189340	2					
ANR	5189483	IdentifierDeclType	int		5189340	0					
ANR	5189484	Identifier	numAlign		5189340	1					
ANR	5189485	AssignmentExpression	"numAlign = getAlignmentPatternPositions ( version , alignPatPos )"		5189340	2		=			
ANR	5189486	Identifier	numAlign		5189340	0					
ANR	5189487	CallExpression	"getAlignmentPatternPositions ( version , alignPatPos )"		5189340	1					
ANR	5189488	Callee	getAlignmentPatternPositions		5189340	0					
ANR	5189489	Identifier	getAlignmentPatternPositions		5189340	0					
ANR	5189490	ArgumentList	version		5189340	1					
ANR	5189491	Argument	version		5189340	0					
ANR	5189492	Identifier	version		5189340	0					
ANR	5189493	Argument	alignPatPos		5189340	1					
ANR	5189494	Identifier	alignPatPos		5189340	0					
ANR	5189495	ForStatement	for ( i = 0 ; i < numAlign ; i ++ )		5189340	10					
ANR	5189496	ForInit	i = 0 ;	603:6:23967:23972	5189340	0	True				
ANR	5189497	AssignmentExpression	i = 0		5189340	0		=			
ANR	5189498	Identifier	i		5189340	0					
ANR	5189499	PrimaryExpression	0		5189340	1					
ANR	5189500	Condition	i < numAlign	603:13:23974:23985	5189340	1	True				
ANR	5189501	RelationalExpression	i < numAlign		5189340	0		<			
ANR	5189502	Identifier	i		5189340	0					
ANR	5189503	Identifier	numAlign		5189340	1					
ANR	5189504	PostIncDecOperationExpression	i ++	603:27:23988:23990	5189340	2	True				
ANR	5189505	Identifier	i		5189340	0					
ANR	5189506	IncDec	++		5189340	1					
ANR	5189507	CompoundStatement		21:32:675:675	5189340	3					
ANR	5189508	ForStatement	for ( j = 0 ; j < numAlign ; j ++ )		5189340	0					
ANR	5189509	ForInit	j = 0 ;	604:7:24002:24007	5189340	0	True				
ANR	5189510	AssignmentExpression	j = 0		5189340	0		=			
ANR	5189511	Identifier	j		5189340	0					
ANR	5189512	PrimaryExpression	0		5189340	1					
ANR	5189513	Condition	j < numAlign	604:14:24009:24020	5189340	1	True				
ANR	5189514	RelationalExpression	j < numAlign		5189340	0		<			
ANR	5189515	Identifier	j		5189340	0					
ANR	5189516	Identifier	numAlign		5189340	1					
ANR	5189517	PostIncDecOperationExpression	j ++	604:28:24023:24025	5189340	2	True				
ANR	5189518	Identifier	j		5189340	0					
ANR	5189519	IncDec	++		5189340	1					
ANR	5189520	CompoundStatement		22:33:710:710	5189340	3					
ANR	5189521	IfStatement	if ( ( i == 0 && j == 0 ) || ( i == 0 && j == numAlign - 1 ) || ( i == numAlign - 1 && j == 0 ) )		5189340	0					
ANR	5189522	Condition	( i == 0 && j == 0 ) || ( i == 0 && j == numAlign - 1 ) || ( i == numAlign - 1 && j == 0 )	605:7:24037:24120	5189340	0	True				
ANR	5189523	OrExpression	( i == 0 && j == 0 ) || ( i == 0 && j == numAlign - 1 ) || ( i == numAlign - 1 && j == 0 )		5189340	0		||			
ANR	5189524	AndExpression	i == 0 && j == 0		5189340	0		&&			
ANR	5189525	EqualityExpression	i == 0		5189340	0		==			
ANR	5189526	Identifier	i		5189340	0					
ANR	5189527	PrimaryExpression	0		5189340	1					
ANR	5189528	EqualityExpression	j == 0		5189340	1		==			
ANR	5189529	Identifier	j		5189340	0					
ANR	5189530	PrimaryExpression	0		5189340	1					
ANR	5189531	OrExpression	( i == 0 && j == numAlign - 1 ) || ( i == numAlign - 1 && j == 0 )		5189340	1		||			
ANR	5189532	AndExpression	i == 0 && j == numAlign - 1		5189340	0		&&			
ANR	5189533	EqualityExpression	i == 0		5189340	0		==			
ANR	5189534	Identifier	i		5189340	0					
ANR	5189535	PrimaryExpression	0		5189340	1					
ANR	5189536	EqualityExpression	j == numAlign - 1		5189340	1		==			
ANR	5189537	Identifier	j		5189340	0					
ANR	5189538	AdditiveExpression	numAlign - 1		5189340	1		-			
ANR	5189539	Identifier	numAlign		5189340	0					
ANR	5189540	PrimaryExpression	1		5189340	1					
ANR	5189541	AndExpression	i == numAlign - 1 && j == 0		5189340	1		&&			
ANR	5189542	EqualityExpression	i == numAlign - 1		5189340	0		==			
ANR	5189543	Identifier	i		5189340	0					
ANR	5189544	AdditiveExpression	numAlign - 1		5189340	1		-			
ANR	5189545	Identifier	numAlign		5189340	0					
ANR	5189546	PrimaryExpression	1		5189340	1					
ANR	5189547	EqualityExpression	j == 0		5189340	1		==			
ANR	5189548	Identifier	j		5189340	0					
ANR	5189549	PrimaryExpression	0		5189340	1					
ANR	5189550	CompoundStatement		23:93:805:805	5189340	1					
ANR	5189551	ContinueStatement	continue ;	606:4:24129:24137	5189340	0	True				
ANR	5189552	ExpressionStatement	"fillRectangle ( alignPatPos [ i ] - 2 , alignPatPos [ j ] - 2 , 5 , 5 , qrcode )"	608:3:24180:24248	5189340	1	True				
ANR	5189553	CallExpression	"fillRectangle ( alignPatPos [ i ] - 2 , alignPatPos [ j ] - 2 , 5 , 5 , qrcode )"		5189340	0					
ANR	5189554	Callee	fillRectangle		5189340	0					
ANR	5189555	Identifier	fillRectangle		5189340	0					
ANR	5189556	ArgumentList	alignPatPos [ i ] - 2		5189340	1					
ANR	5189557	Argument	alignPatPos [ i ] - 2		5189340	0					
ANR	5189558	AdditiveExpression	alignPatPos [ i ] - 2		5189340	0		-			
ANR	5189559	ArrayIndexing	alignPatPos [ i ]		5189340	0					
ANR	5189560	Identifier	alignPatPos		5189340	0					
ANR	5189561	Identifier	i		5189340	1					
ANR	5189562	PrimaryExpression	2		5189340	1					
ANR	5189563	Argument	alignPatPos [ j ] - 2		5189340	1					
ANR	5189564	AdditiveExpression	alignPatPos [ j ] - 2		5189340	0		-			
ANR	5189565	ArrayIndexing	alignPatPos [ j ]		5189340	0					
ANR	5189566	Identifier	alignPatPos		5189340	0					
ANR	5189567	Identifier	j		5189340	1					
ANR	5189568	PrimaryExpression	2		5189340	1					
ANR	5189569	Argument	5		5189340	2					
ANR	5189570	PrimaryExpression	5		5189340	0					
ANR	5189571	Argument	5		5189340	3					
ANR	5189572	PrimaryExpression	5		5189340	0					
ANR	5189573	Argument	qrcode		5189340	4					
ANR	5189574	Identifier	qrcode		5189340	0					
ANR	5189575	IfStatement	if ( version >= 7 )		5189340	11					
ANR	5189576	Condition	version >= 7	613:5:24287:24298	5189340	0	True				
ANR	5189577	RelationalExpression	version >= 7		5189340	0		>=			
ANR	5189578	Identifier	version		5189340	0					
ANR	5189579	PrimaryExpression	7		5189340	1					
ANR	5189580	CompoundStatement		31:19:983:983	5189340	1					
ANR	5189581	ExpressionStatement	"fillRectangle ( qrsize - 11 , 0 , 3 , 6 , qrcode )"	614:2:24305:24349	5189340	0	True				
ANR	5189582	CallExpression	"fillRectangle ( qrsize - 11 , 0 , 3 , 6 , qrcode )"		5189340	0					
ANR	5189583	Callee	fillRectangle		5189340	0					
ANR	5189584	Identifier	fillRectangle		5189340	0					
ANR	5189585	ArgumentList	qrsize - 11		5189340	1					
ANR	5189586	Argument	qrsize - 11		5189340	0					
ANR	5189587	AdditiveExpression	qrsize - 11		5189340	0		-			
ANR	5189588	Identifier	qrsize		5189340	0					
ANR	5189589	PrimaryExpression	11		5189340	1					
ANR	5189590	Argument	0		5189340	1					
ANR	5189591	PrimaryExpression	0		5189340	0					
ANR	5189592	Argument	3		5189340	2					
ANR	5189593	PrimaryExpression	3		5189340	0					
ANR	5189594	Argument	6		5189340	3					
ANR	5189595	PrimaryExpression	6		5189340	0					
ANR	5189596	Argument	qrcode		5189340	4					
ANR	5189597	Identifier	qrcode		5189340	0					
ANR	5189598	ExpressionStatement	"fillRectangle ( 0 , qrsize - 11 , 6 , 3 , qrcode )"	615:2:24353:24397	5189340	1	True				
ANR	5189599	CallExpression	"fillRectangle ( 0 , qrsize - 11 , 6 , 3 , qrcode )"		5189340	0					
ANR	5189600	Callee	fillRectangle		5189340	0					
ANR	5189601	Identifier	fillRectangle		5189340	0					
ANR	5189602	ArgumentList	0		5189340	1					
ANR	5189603	Argument	0		5189340	0					
ANR	5189604	PrimaryExpression	0		5189340	0					
ANR	5189605	Argument	qrsize - 11		5189340	1					
ANR	5189606	AdditiveExpression	qrsize - 11		5189340	0		-			
ANR	5189607	Identifier	qrsize		5189340	0					
ANR	5189608	PrimaryExpression	11		5189340	1					
ANR	5189609	Argument	6		5189340	2					
ANR	5189610	PrimaryExpression	6		5189340	0					
ANR	5189611	Argument	3		5189340	3					
ANR	5189612	PrimaryExpression	3		5189340	0					
ANR	5189613	Argument	qrcode		5189340	4					
ANR	5189614	Identifier	qrcode		5189340	0					
ANR	5189615	ReturnType	static void		5189340	1					
ANR	5189616	Identifier	initializeFunctionModules		5189340	2					
ANR	5189617	ParameterList	"int version , ut8 qrcode [ ]"		5189340	3					
ANR	5189618	Parameter	int version	583:38:23290:23300	5189340	0	True				
ANR	5189619	ParameterType	int		5189340	0					
ANR	5189620	Identifier	version		5189340	1					
ANR	5189621	Parameter	ut8 qrcode [ ]	583:51:23303:23314	5189340	1	True				
ANR	5189622	ParameterType	ut8 [ ]		5189340	0					
ANR	5189623	Identifier	qrcode		5189340	1					
ANR	5189624	CFGEntryNode	ENTRY		5189340		True				
ANR	5189625	CFGExitNode	EXIT		5189340		True				
ANR	5189626	Symbol	* i		5189340						
ANR	5189627	Symbol	* j		5189340						
ANR	5189628	Symbol	* qrcode		5189340						
ANR	5189629	Symbol	qrcode		5189340						
ANR	5189630	Symbol	i		5189340						
ANR	5189631	Symbol	alignPatPos		5189340						
ANR	5189632	Symbol	j		5189340						
ANR	5189633	Symbol	version		5189340						
ANR	5189634	Symbol	qrsize		5189340						
ANR	5189635	Symbol	numAlign		5189340						
ANR	5189636	Symbol	getAlignmentPatternPositions		5189340						
ANR	5189637	Symbol	* alignPatPos		5189340						
ANR	5189638	Function	drawWhiteFunctionModules	623:0:24737:26546							
ANR	5189639	FunctionDef	"drawWhiteFunctionModules (ut8 qrcode [ ] , int version)"		5189638	0					
ANR	5189640	CompoundStatement		623:64:24801:26546	5189638	0					
ANR	5189641	IdentifierDeclStatement	"int i , j , k , l , qrsize = qrcodegen_getSize ( qrcode ) ;"	625:1:24853:24904	5189638	0	True				
ANR	5189642	IdentifierDecl	i		5189638	0					
ANR	5189643	IdentifierDeclType	int		5189638	0					
ANR	5189644	Identifier	i		5189638	1					
ANR	5189645	IdentifierDecl	j		5189638	1					
ANR	5189646	IdentifierDeclType	int		5189638	0					
ANR	5189647	Identifier	j		5189638	1					
ANR	5189648	IdentifierDecl	k		5189638	2					
ANR	5189649	IdentifierDeclType	int		5189638	0					
ANR	5189650	Identifier	k		5189638	1					
ANR	5189651	IdentifierDecl	l		5189638	3					
ANR	5189652	IdentifierDeclType	int		5189638	0					
ANR	5189653	Identifier	l		5189638	1					
ANR	5189654	IdentifierDecl	qrsize = qrcodegen_getSize ( qrcode )		5189638	4					
ANR	5189655	IdentifierDeclType	int		5189638	0					
ANR	5189656	Identifier	qrsize		5189638	1					
ANR	5189657	AssignmentExpression	qrsize = qrcodegen_getSize ( qrcode )		5189638	2		=			
ANR	5189658	Identifier	qrsize		5189638	0					
ANR	5189659	CallExpression	qrcodegen_getSize ( qrcode )		5189638	1					
ANR	5189660	Callee	qrcodegen_getSize		5189638	0					
ANR	5189661	Identifier	qrcodegen_getSize		5189638	0					
ANR	5189662	ArgumentList	qrcode		5189638	1					
ANR	5189663	Argument	qrcode		5189638	0					
ANR	5189664	Identifier	qrcode		5189638	0					
ANR	5189665	ForStatement	for ( i = 7 ; i < qrsize - 7 ; i += 2 )		5189638	1					
ANR	5189666	ForInit	i = 7 ;	626:6:24912:24917	5189638	0	True				
ANR	5189667	AssignmentExpression	i = 7		5189638	0		=			
ANR	5189668	Identifier	i		5189638	0					
ANR	5189669	PrimaryExpression	7		5189638	1					
ANR	5189670	Condition	i < qrsize - 7	626:13:24919:24932	5189638	1	True				
ANR	5189671	RelationalExpression	i < qrsize - 7		5189638	0		<			
ANR	5189672	Identifier	i		5189638	0					
ANR	5189673	AdditiveExpression	qrsize - 7		5189638	1		-			
ANR	5189674	Identifier	qrsize		5189638	0					
ANR	5189675	PrimaryExpression	7		5189638	1					
ANR	5189676	AssignmentExpression	i += 2	626:29:24935:24940	5189638	2	True	+=			
ANR	5189677	Identifier	i		5189638	0					
ANR	5189678	PrimaryExpression	2		5189638	1					
ANR	5189679	CompoundStatement		4:37:141:141	5189638	3					
ANR	5189680	ExpressionStatement	"setModule ( qrcode , 6 , i , false )"	627:2:24947:24978	5189638	0	True				
ANR	5189681	CallExpression	"setModule ( qrcode , 6 , i , false )"		5189638	0					
ANR	5189682	Callee	setModule		5189638	0					
ANR	5189683	Identifier	setModule		5189638	0					
ANR	5189684	ArgumentList	qrcode		5189638	1					
ANR	5189685	Argument	qrcode		5189638	0					
ANR	5189686	Identifier	qrcode		5189638	0					
ANR	5189687	Argument	6		5189638	1					
ANR	5189688	PrimaryExpression	6		5189638	0					
ANR	5189689	Argument	i		5189638	2					
ANR	5189690	Identifier	i		5189638	0					
ANR	5189691	Argument	false		5189638	3					
ANR	5189692	Identifier	false		5189638	0					
ANR	5189693	ExpressionStatement	"setModule ( qrcode , i , 6 , false )"	628:2:24982:25013	5189638	1	True				
ANR	5189694	CallExpression	"setModule ( qrcode , i , 6 , false )"		5189638	0					
ANR	5189695	Callee	setModule		5189638	0					
ANR	5189696	Identifier	setModule		5189638	0					
ANR	5189697	ArgumentList	qrcode		5189638	1					
ANR	5189698	Argument	qrcode		5189638	0					
ANR	5189699	Identifier	qrcode		5189638	0					
ANR	5189700	Argument	i		5189638	1					
ANR	5189701	Identifier	i		5189638	0					
ANR	5189702	Argument	6		5189638	2					
ANR	5189703	PrimaryExpression	6		5189638	0					
ANR	5189704	Argument	false		5189638	3					
ANR	5189705	Identifier	false		5189638	0					
ANR	5189706	ForStatement	for ( i = - 4 ; i <= 4 ; i ++ )		5189638	2					
ANR	5189707	ForInit	i = - 4 ;	632:6:25118:25124	5189638	0	True				
ANR	5189708	AssignmentExpression	i = - 4		5189638	0		=			
ANR	5189709	Identifier	i		5189638	0					
ANR	5189710	UnaryOperationExpression	- 4		5189638	1					
ANR	5189711	UnaryOperator	-		5189638	0					
ANR	5189712	PrimaryExpression	4		5189638	1					
ANR	5189713	Condition	i <= 4	632:14:25126:25131	5189638	1	True				
ANR	5189714	RelationalExpression	i <= 4		5189638	0		<=			
ANR	5189715	Identifier	i		5189638	0					
ANR	5189716	PrimaryExpression	4		5189638	1					
ANR	5189717	PostIncDecOperationExpression	i ++	632:22:25134:25136	5189638	2	True				
ANR	5189718	Identifier	i		5189638	0					
ANR	5189719	IncDec	++		5189638	1					
ANR	5189720	CompoundStatement		10:27:337:337	5189638	3					
ANR	5189721	ForStatement	for ( j = - 4 ; j <= 4 ; j ++ )		5189638	0					
ANR	5189722	ForInit	j = - 4 ;	633:7:25148:25154	5189638	0	True				
ANR	5189723	AssignmentExpression	j = - 4		5189638	0		=			
ANR	5189724	Identifier	j		5189638	0					
ANR	5189725	UnaryOperationExpression	- 4		5189638	1					
ANR	5189726	UnaryOperator	-		5189638	0					
ANR	5189727	PrimaryExpression	4		5189638	1					
ANR	5189728	Condition	j <= 4	633:15:25156:25161	5189638	1	True				
ANR	5189729	RelationalExpression	j <= 4		5189638	0		<=			
ANR	5189730	Identifier	j		5189638	0					
ANR	5189731	PrimaryExpression	4		5189638	1					
ANR	5189732	PostIncDecOperationExpression	j ++	633:23:25164:25166	5189638	2	True				
ANR	5189733	Identifier	j		5189638	0					
ANR	5189734	IncDec	++		5189638	1					
ANR	5189735	CompoundStatement		12:3:372:390	5189638	3					
ANR	5189736	IdentifierDeclStatement	int dist = abs ( i ) ;	634:3:25174:25192	5189638	0	True				
ANR	5189737	IdentifierDecl	dist = abs ( i )		5189638	0					
ANR	5189738	IdentifierDeclType	int		5189638	0					
ANR	5189739	Identifier	dist		5189638	1					
ANR	5189740	AssignmentExpression	dist = abs ( i )		5189638	2		=			
ANR	5189741	Identifier	dist		5189638	0					
ANR	5189742	CallExpression	abs ( i )		5189638	1					
ANR	5189743	Callee	abs		5189638	0					
ANR	5189744	Identifier	abs		5189638	0					
ANR	5189745	ArgumentList	i		5189638	1					
ANR	5189746	Argument	i		5189638	0					
ANR	5189747	Identifier	i		5189638	0					
ANR	5189748	IfStatement	if ( abs ( j ) > dist )		5189638	1					
ANR	5189749	Condition	abs ( j ) > dist	635:7:25201:25214	5189638	0	True				
ANR	5189750	RelationalExpression	abs ( j ) > dist		5189638	0		>			
ANR	5189751	CallExpression	abs ( j )		5189638	0					
ANR	5189752	Callee	abs		5189638	0					
ANR	5189753	Identifier	abs		5189638	0					
ANR	5189754	ArgumentList	j		5189638	1					
ANR	5189755	Argument	j		5189638	0					
ANR	5189756	Identifier	j		5189638	0					
ANR	5189757	Identifier	dist		5189638	1					
ANR	5189758	CompoundStatement		13:23:415:415	5189638	1					
ANR	5189759	ExpressionStatement	dist = abs ( j )	636:4:25223:25237	5189638	0	True				
ANR	5189760	AssignmentExpression	dist = abs ( j )		5189638	0		=			
ANR	5189761	Identifier	dist		5189638	0					
ANR	5189762	CallExpression	abs ( j )		5189638	1					
ANR	5189763	Callee	abs		5189638	0					
ANR	5189764	Identifier	abs		5189638	0					
ANR	5189765	ArgumentList	j		5189638	1					
ANR	5189766	Argument	j		5189638	0					
ANR	5189767	Identifier	j		5189638	0					
ANR	5189768	IfStatement	if ( dist == 2 || dist == 4 )		5189638	2					
ANR	5189769	Condition	dist == 2 || dist == 4	638:7:25251:25272	5189638	0	True				
ANR	5189770	OrExpression	dist == 2 || dist == 4		5189638	0		||			
ANR	5189771	EqualityExpression	dist == 2		5189638	0		==			
ANR	5189772	Identifier	dist		5189638	0					
ANR	5189773	PrimaryExpression	2		5189638	1					
ANR	5189774	EqualityExpression	dist == 4		5189638	1		==			
ANR	5189775	Identifier	dist		5189638	0					
ANR	5189776	PrimaryExpression	4		5189638	1					
ANR	5189777	CompoundStatement		16:31:473:473	5189638	1					
ANR	5189778	ExpressionStatement	"setModuleBounded ( qrcode , 3 + j , 3 + i , false )"	639:4:25281:25327	5189638	0	True				
ANR	5189779	CallExpression	"setModuleBounded ( qrcode , 3 + j , 3 + i , false )"		5189638	0					
ANR	5189780	Callee	setModuleBounded		5189638	0					
ANR	5189781	Identifier	setModuleBounded		5189638	0					
ANR	5189782	ArgumentList	qrcode		5189638	1					
ANR	5189783	Argument	qrcode		5189638	0					
ANR	5189784	Identifier	qrcode		5189638	0					
ANR	5189785	Argument	3 + j		5189638	1					
ANR	5189786	AdditiveExpression	3 + j		5189638	0		+			
ANR	5189787	PrimaryExpression	3		5189638	0					
ANR	5189788	Identifier	j		5189638	1					
ANR	5189789	Argument	3 + i		5189638	2					
ANR	5189790	AdditiveExpression	3 + i		5189638	0		+			
ANR	5189791	PrimaryExpression	3		5189638	0					
ANR	5189792	Identifier	i		5189638	1					
ANR	5189793	Argument	false		5189638	3					
ANR	5189794	Identifier	false		5189638	0					
ANR	5189795	ExpressionStatement	"setModuleBounded ( qrcode , qrsize - 4 + j , 3 + i , false )"	640:4:25333:25388	5189638	1	True				
ANR	5189796	CallExpression	"setModuleBounded ( qrcode , qrsize - 4 + j , 3 + i , false )"		5189638	0					
ANR	5189797	Callee	setModuleBounded		5189638	0					
ANR	5189798	Identifier	setModuleBounded		5189638	0					
ANR	5189799	ArgumentList	qrcode		5189638	1					
ANR	5189800	Argument	qrcode		5189638	0					
ANR	5189801	Identifier	qrcode		5189638	0					
ANR	5189802	Argument	qrsize - 4 + j		5189638	1					
ANR	5189803	AdditiveExpression	qrsize - 4 + j		5189638	0		-			
ANR	5189804	Identifier	qrsize		5189638	0					
ANR	5189805	AdditiveExpression	4 + j		5189638	1		+			
ANR	5189806	PrimaryExpression	4		5189638	0					
ANR	5189807	Identifier	j		5189638	1					
ANR	5189808	Argument	3 + i		5189638	2					
ANR	5189809	AdditiveExpression	3 + i		5189638	0		+			
ANR	5189810	PrimaryExpression	3		5189638	0					
ANR	5189811	Identifier	i		5189638	1					
ANR	5189812	Argument	false		5189638	3					
ANR	5189813	Identifier	false		5189638	0					
ANR	5189814	ExpressionStatement	"setModuleBounded ( qrcode , 3 + j , qrsize - 4 + i , false )"	641:4:25394:25449	5189638	2	True				
ANR	5189815	CallExpression	"setModuleBounded ( qrcode , 3 + j , qrsize - 4 + i , false )"		5189638	0					
ANR	5189816	Callee	setModuleBounded		5189638	0					
ANR	5189817	Identifier	setModuleBounded		5189638	0					
ANR	5189818	ArgumentList	qrcode		5189638	1					
ANR	5189819	Argument	qrcode		5189638	0					
ANR	5189820	Identifier	qrcode		5189638	0					
ANR	5189821	Argument	3 + j		5189638	1					
ANR	5189822	AdditiveExpression	3 + j		5189638	0		+			
ANR	5189823	PrimaryExpression	3		5189638	0					
ANR	5189824	Identifier	j		5189638	1					
ANR	5189825	Argument	qrsize - 4 + i		5189638	2					
ANR	5189826	AdditiveExpression	qrsize - 4 + i		5189638	0		-			
ANR	5189827	Identifier	qrsize		5189638	0					
ANR	5189828	AdditiveExpression	4 + i		5189638	1		+			
ANR	5189829	PrimaryExpression	4		5189638	0					
ANR	5189830	Identifier	i		5189638	1					
ANR	5189831	Argument	false		5189638	3					
ANR	5189832	Identifier	false		5189638	0					
ANR	5189833	IdentifierDeclStatement	ut8 alignPatPos [ 7 ] = { 0 } ;	647:1:25502:25531	5189638	3	True				
ANR	5189834	IdentifierDecl	alignPatPos [ 7 ] = { 0 }		5189638	0					
ANR	5189835	IdentifierDeclType	ut8 [ 7 ]		5189638	0					
ANR	5189836	Identifier	alignPatPos		5189638	1					
ANR	5189837	PrimaryExpression	7		5189638	2					
ANR	5189838	AssignmentExpression	alignPatPos [ 7 ] = { 0 }		5189638	3		=			
ANR	5189839	Identifier	alignPatPos		5189638	0					
ANR	5189840	InitializerList	0		5189638	1					
ANR	5189841	PrimaryExpression	0		5189638	0					
ANR	5189842	IdentifierDeclStatement	"int numAlign = getAlignmentPatternPositions ( version , alignPatPos ) ;"	650:1:25534:25600	5189638	4	True				
ANR	5189843	IdentifierDecl	"numAlign = getAlignmentPatternPositions ( version , alignPatPos )"		5189638	0					
ANR	5189844	IdentifierDeclType	int		5189638	0					
ANR	5189845	Identifier	numAlign		5189638	1					
ANR	5189846	AssignmentExpression	"numAlign = getAlignmentPatternPositions ( version , alignPatPos )"		5189638	2		=			
ANR	5189847	Identifier	numAlign		5189638	0					
ANR	5189848	CallExpression	"getAlignmentPatternPositions ( version , alignPatPos )"		5189638	1					
ANR	5189849	Callee	getAlignmentPatternPositions		5189638	0					
ANR	5189850	Identifier	getAlignmentPatternPositions		5189638	0					
ANR	5189851	ArgumentList	version		5189638	1					
ANR	5189852	Argument	version		5189638	0					
ANR	5189853	Identifier	version		5189638	0					
ANR	5189854	Argument	alignPatPos		5189638	1					
ANR	5189855	Identifier	alignPatPos		5189638	0					
ANR	5189856	ForStatement	for ( i = 0 ; i < numAlign ; i ++ )		5189638	5					
ANR	5189857	ForInit	i = 0 ;	651:6:25608:25613	5189638	0	True				
ANR	5189858	AssignmentExpression	i = 0		5189638	0		=			
ANR	5189859	Identifier	i		5189638	0					
ANR	5189860	PrimaryExpression	0		5189638	1					
ANR	5189861	Condition	i < numAlign	651:13:25615:25626	5189638	1	True				
ANR	5189862	RelationalExpression	i < numAlign		5189638	0		<			
ANR	5189863	Identifier	i		5189638	0					
ANR	5189864	Identifier	numAlign		5189638	1					
ANR	5189865	PostIncDecOperationExpression	i ++	651:27:25629:25631	5189638	2	True				
ANR	5189866	Identifier	i		5189638	0					
ANR	5189867	IncDec	++		5189638	1					
ANR	5189868	CompoundStatement		29:32:832:832	5189638	3					
ANR	5189869	ForStatement	for ( j = 0 ; j < numAlign ; j ++ )		5189638	0					
ANR	5189870	ForInit	j = 0 ;	652:7:25643:25648	5189638	0	True				
ANR	5189871	AssignmentExpression	j = 0		5189638	0		=			
ANR	5189872	Identifier	j		5189638	0					
ANR	5189873	PrimaryExpression	0		5189638	1					
ANR	5189874	Condition	j < numAlign	652:14:25650:25661	5189638	1	True				
ANR	5189875	RelationalExpression	j < numAlign		5189638	0		<			
ANR	5189876	Identifier	j		5189638	0					
ANR	5189877	Identifier	numAlign		5189638	1					
ANR	5189878	PostIncDecOperationExpression	j ++	652:28:25664:25666	5189638	2	True				
ANR	5189879	Identifier	j		5189638	0					
ANR	5189880	IncDec	++		5189638	1					
ANR	5189881	CompoundStatement		30:33:867:867	5189638	3					
ANR	5189882	IfStatement	if ( ( i == 0 && j == 0 ) || ( i == 0 && j == numAlign - 1 ) || ( i == numAlign - 1 && j == 0 ) )		5189638	0					
ANR	5189883	Condition	( i == 0 && j == 0 ) || ( i == 0 && j == numAlign - 1 ) || ( i == numAlign - 1 && j == 0 )	653:7:25678:25761	5189638	0	True				
ANR	5189884	OrExpression	( i == 0 && j == 0 ) || ( i == 0 && j == numAlign - 1 ) || ( i == numAlign - 1 && j == 0 )		5189638	0		||			
ANR	5189885	AndExpression	i == 0 && j == 0		5189638	0		&&			
ANR	5189886	EqualityExpression	i == 0		5189638	0		==			
ANR	5189887	Identifier	i		5189638	0					
ANR	5189888	PrimaryExpression	0		5189638	1					
ANR	5189889	EqualityExpression	j == 0		5189638	1		==			
ANR	5189890	Identifier	j		5189638	0					
ANR	5189891	PrimaryExpression	0		5189638	1					
ANR	5189892	OrExpression	( i == 0 && j == numAlign - 1 ) || ( i == numAlign - 1 && j == 0 )		5189638	1		||			
ANR	5189893	AndExpression	i == 0 && j == numAlign - 1		5189638	0		&&			
ANR	5189894	EqualityExpression	i == 0		5189638	0		==			
ANR	5189895	Identifier	i		5189638	0					
ANR	5189896	PrimaryExpression	0		5189638	1					
ANR	5189897	EqualityExpression	j == numAlign - 1		5189638	1		==			
ANR	5189898	Identifier	j		5189638	0					
ANR	5189899	AdditiveExpression	numAlign - 1		5189638	1		-			
ANR	5189900	Identifier	numAlign		5189638	0					
ANR	5189901	PrimaryExpression	1		5189638	1					
ANR	5189902	AndExpression	i == numAlign - 1 && j == 0		5189638	1		&&			
ANR	5189903	EqualityExpression	i == numAlign - 1		5189638	0		==			
ANR	5189904	Identifier	i		5189638	0					
ANR	5189905	AdditiveExpression	numAlign - 1		5189638	1		-			
ANR	5189906	Identifier	numAlign		5189638	0					
ANR	5189907	PrimaryExpression	1		5189638	1					
ANR	5189908	EqualityExpression	j == 0		5189638	1		==			
ANR	5189909	Identifier	j		5189638	0					
ANR	5189910	PrimaryExpression	0		5189638	1					
ANR	5189911	CompoundStatement		31:93:962:962	5189638	1					
ANR	5189912	ContinueStatement	continue ;	654:4:25770:25778	5189638	0	True				
ANR	5189913	ForStatement	for ( k = - 1 ; k <= 1 ; k ++ )		5189638	1					
ANR	5189914	ForInit	k = - 1 ;	656:8:25826:25832	5189638	0	True				
ANR	5189915	AssignmentExpression	k = - 1		5189638	0		=			
ANR	5189916	Identifier	k		5189638	0					
ANR	5189917	UnaryOperationExpression	- 1		5189638	1					
ANR	5189918	UnaryOperator	-		5189638	0					
ANR	5189919	PrimaryExpression	1		5189638	1					
ANR	5189920	Condition	k <= 1	656:16:25834:25839	5189638	1	True				
ANR	5189921	RelationalExpression	k <= 1		5189638	0		<=			
ANR	5189922	Identifier	k		5189638	0					
ANR	5189923	PrimaryExpression	1		5189638	1					
ANR	5189924	PostIncDecOperationExpression	k ++	656:24:25842:25844	5189638	2	True				
ANR	5189925	Identifier	k		5189638	0					
ANR	5189926	IncDec	++		5189638	1					
ANR	5189927	CompoundStatement		34:29:1045:1045	5189638	3					
ANR	5189928	ForStatement	for ( l = - 1 ; l <= 1 ; l ++ )		5189638	0					
ANR	5189929	ForInit	l = - 1 ;	657:9:25858:25864	5189638	0	True				
ANR	5189930	AssignmentExpression	l = - 1		5189638	0		=			
ANR	5189931	Identifier	l		5189638	0					
ANR	5189932	UnaryOperationExpression	- 1		5189638	1					
ANR	5189933	UnaryOperator	-		5189638	0					
ANR	5189934	PrimaryExpression	1		5189638	1					
ANR	5189935	Condition	l <= 1	657:17:25866:25871	5189638	1	True				
ANR	5189936	RelationalExpression	l <= 1		5189638	0		<=			
ANR	5189937	Identifier	l		5189638	0					
ANR	5189938	PrimaryExpression	1		5189638	1					
ANR	5189939	PostIncDecOperationExpression	l ++	657:25:25874:25876	5189638	2	True				
ANR	5189940	Identifier	l		5189638	0					
ANR	5189941	IncDec	++		5189638	1					
ANR	5189942	CompoundStatement		35:30:1077:1077	5189638	3					
ANR	5189943	ExpressionStatement	"setModule ( qrcode , alignPatPos [ i ] + l , alignPatPos [ j ] + k , k == 0 && l == 0 )"	658:5:25886:25962	5189638	0	True				
ANR	5189944	CallExpression	"setModule ( qrcode , alignPatPos [ i ] + l , alignPatPos [ j ] + k , k == 0 && l == 0 )"		5189638	0					
ANR	5189945	Callee	setModule		5189638	0					
ANR	5189946	Identifier	setModule		5189638	0					
ANR	5189947	ArgumentList	qrcode		5189638	1					
ANR	5189948	Argument	qrcode		5189638	0					
ANR	5189949	Identifier	qrcode		5189638	0					
ANR	5189950	Argument	alignPatPos [ i ] + l		5189638	1					
ANR	5189951	AdditiveExpression	alignPatPos [ i ] + l		5189638	0		+			
ANR	5189952	ArrayIndexing	alignPatPos [ i ]		5189638	0					
ANR	5189953	Identifier	alignPatPos		5189638	0					
ANR	5189954	Identifier	i		5189638	1					
ANR	5189955	Identifier	l		5189638	1					
ANR	5189956	Argument	alignPatPos [ j ] + k		5189638	2					
ANR	5189957	AdditiveExpression	alignPatPos [ j ] + k		5189638	0		+			
ANR	5189958	ArrayIndexing	alignPatPos [ j ]		5189638	0					
ANR	5189959	Identifier	alignPatPos		5189638	0					
ANR	5189960	Identifier	j		5189638	1					
ANR	5189961	Identifier	k		5189638	1					
ANR	5189962	Argument	k == 0 && l == 0		5189638	3					
ANR	5189963	AndExpression	k == 0 && l == 0		5189638	0		&&			
ANR	5189964	EqualityExpression	k == 0		5189638	0		==			
ANR	5189965	Identifier	k		5189638	0					
ANR	5189966	PrimaryExpression	0		5189638	1					
ANR	5189967	EqualityExpression	l == 0		5189638	1		==			
ANR	5189968	Identifier	l		5189638	0					
ANR	5189969	PrimaryExpression	0		5189638	1					
ANR	5189970	IfStatement	if ( version >= 7 )		5189638	6					
ANR	5189971	Condition	version >= 7	665:5:26012:26023	5189638	0	True				
ANR	5189972	RelationalExpression	version >= 7		5189638	0		>=			
ANR	5189973	Identifier	version		5189638	0					
ANR	5189974	PrimaryExpression	7		5189638	1					
ANR	5189975	CompoundStatement		49:2:1427:1467	5189638	1					
ANR	5189976	IdentifierDeclStatement	"int i , j , rem = version ;"	667:2:26081:26104	5189638	0	True				
ANR	5189977	IdentifierDecl	i		5189638	0					
ANR	5189978	IdentifierDeclType	int		5189638	0					
ANR	5189979	Identifier	i		5189638	1					
ANR	5189980	IdentifierDecl	j		5189638	1					
ANR	5189981	IdentifierDeclType	int		5189638	0					
ANR	5189982	Identifier	j		5189638	1					
ANR	5189983	IdentifierDecl	rem = version		5189638	2					
ANR	5189984	IdentifierDeclType	int		5189638	0					
ANR	5189985	Identifier	rem		5189638	1					
ANR	5189986	AssignmentExpression	rem = version		5189638	2		=			
ANR	5189987	Identifier	version		5189638	0					
ANR	5189988	Identifier	version		5189638	1					
ANR	5189989	ForStatement	for ( i = 0 ; i < 12 ; i ++ )		5189638	1					
ANR	5189990	ForInit	i = 0 ;	668:7:26155:26160	5189638	0	True				
ANR	5189991	AssignmentExpression	i = 0		5189638	0		=			
ANR	5189992	Identifier	i		5189638	0					
ANR	5189993	PrimaryExpression	0		5189638	1					
ANR	5189994	Condition	i < 12	668:14:26162:26167	5189638	1	True				
ANR	5189995	RelationalExpression	i < 12		5189638	0		<			
ANR	5189996	Identifier	i		5189638	0					
ANR	5189997	PrimaryExpression	12		5189638	1					
ANR	5189998	PostIncDecOperationExpression	i ++	668:22:26170:26172	5189638	2	True				
ANR	5189999	Identifier	i		5189638	0					
ANR	5190000	IncDec	++		5189638	1					
ANR	5190001	CompoundStatement		46:27:1373:1373	5189638	3					
ANR	5190002	ExpressionStatement	rem = ( rem << 1 ) ^ ( ( rem >> 11 ) * 0x1F25 )	669:3:26180:26221	5189638	0	True				
ANR	5190003	AssignmentExpression	rem = ( rem << 1 ) ^ ( ( rem >> 11 ) * 0x1F25 )		5189638	0		=			
ANR	5190004	Identifier	rem		5189638	0					
ANR	5190005	ExclusiveOrExpression	( rem << 1 ) ^ ( ( rem >> 11 ) * 0x1F25 )		5189638	1		^			
ANR	5190006	ShiftExpression	rem << 1		5189638	0		<<			
ANR	5190007	Identifier	rem		5189638	0					
ANR	5190008	PrimaryExpression	1		5189638	1					
ANR	5190009	MultiplicativeExpression	( rem >> 11 ) * 0x1F25		5189638	1		*			
ANR	5190010	ShiftExpression	rem >> 11		5189638	0		>>			
ANR	5190011	Identifier	rem		5189638	0					
ANR	5190012	PrimaryExpression	11		5189638	1					
ANR	5190013	PrimaryExpression	0x1F25		5189638	1					
ANR	5190014	IdentifierDeclStatement	ut32 data = ( ( ut32 ) version << 12 ) | rem ;	671:2:26229:26269	5189638	2	True				
ANR	5190015	IdentifierDecl	data = ( ( ut32 ) version << 12 ) | rem		5189638	0					
ANR	5190016	IdentifierDeclType	ut32		5189638	0					
ANR	5190017	Identifier	data		5189638	1					
ANR	5190018	AssignmentExpression	data = ( ( ut32 ) version << 12 ) | rem		5189638	2		=			
ANR	5190019	Identifier	data		5189638	0					
ANR	5190020	InclusiveOrExpression	( ( ut32 ) version << 12 ) | rem		5189638	1		|			
ANR	5190021	ShiftExpression	( ut32 ) version << 12		5189638	0		<<			
ANR	5190022	CastExpression	( ut32 ) version		5189638	0					
ANR	5190023	CastTarget	ut32		5189638	0					
ANR	5190024	Identifier	version		5189638	1					
ANR	5190025	PrimaryExpression	12		5189638	1					
ANR	5190026	Identifier	rem		5189638	1					
ANR	5190027	IfStatement	if ( data >> 18 )		5189638	3					
ANR	5190028	Condition	data >> 18	672:6:26287:26296	5189638	0	True				
ANR	5190029	ShiftExpression	data >> 18		5189638	0		>>			
ANR	5190030	Identifier	data		5189638	0					
ANR	5190031	PrimaryExpression	18		5189638	1					
ANR	5190032	CompoundStatement		50:18:1497:1497	5189638	1					
ANR	5190033	ReturnStatement	return ;	673:3:26304:26310	5189638	0	True				
ANR	5190034	ForStatement	for ( i = 0 ; i < 6 ; i ++ )		5189638	4					
ANR	5190035	ForInit	i = 0 ;	677:7:26345:26350	5189638	0	True				
ANR	5190036	AssignmentExpression	i = 0		5189638	0		=			
ANR	5190037	Identifier	i		5189638	0					
ANR	5190038	PrimaryExpression	0		5189638	1					
ANR	5190039	Condition	i < 6	677:14:26352:26356	5189638	1	True				
ANR	5190040	RelationalExpression	i < 6		5189638	0		<			
ANR	5190041	Identifier	i		5189638	0					
ANR	5190042	PrimaryExpression	6		5189638	1					
ANR	5190043	PostIncDecOperationExpression	i ++	677:21:26359:26361	5189638	2	True				
ANR	5190044	Identifier	i		5189638	0					
ANR	5190045	IncDec	++		5189638	1					
ANR	5190046	CompoundStatement		55:26:1562:1562	5189638	3					
ANR	5190047	ForStatement	for ( j = 0 ; j < 3 ; j ++ )		5189638	0					
ANR	5190048	ForInit	j = 0 ;	678:8:26374:26379	5189638	0	True				
ANR	5190049	AssignmentExpression	j = 0		5189638	0		=			
ANR	5190050	Identifier	j		5189638	0					
ANR	5190051	PrimaryExpression	0		5189638	1					
ANR	5190052	Condition	j < 3	678:15:26381:26385	5189638	1	True				
ANR	5190053	RelationalExpression	j < 3		5189638	0		<			
ANR	5190054	Identifier	j		5189638	0					
ANR	5190055	PrimaryExpression	3		5189638	1					
ANR	5190056	PostIncDecOperationExpression	j ++	678:22:26388:26390	5189638	2	True				
ANR	5190057	Identifier	j		5189638	0					
ANR	5190058	IncDec	++		5189638	1					
ANR	5190059	CompoundStatement		57:4:1597:1620	5189638	3					
ANR	5190060	IdentifierDeclStatement	int k = qrsize - 11 + j ;	679:4:26399:26422	5189638	0	True				
ANR	5190061	IdentifierDecl	k = qrsize - 11 + j		5189638	0					
ANR	5190062	IdentifierDeclType	int		5189638	0					
ANR	5190063	Identifier	k		5189638	1					
ANR	5190064	AssignmentExpression	k = qrsize - 11 + j		5189638	2		=			
ANR	5190065	Identifier	k		5189638	0					
ANR	5190066	AdditiveExpression	qrsize - 11 + j		5189638	1		-			
ANR	5190067	Identifier	qrsize		5189638	0					
ANR	5190068	AdditiveExpression	11 + j		5189638	1		+			
ANR	5190069	PrimaryExpression	11		5189638	0					
ANR	5190070	Identifier	j		5189638	1					
ANR	5190071	ExpressionStatement	"setModule ( qrcode , k , i , ( data & 1 ) != 0 )"	680:4:26428:26469	5189638	1	True				
ANR	5190072	CallExpression	"setModule ( qrcode , k , i , ( data & 1 ) != 0 )"		5189638	0					
ANR	5190073	Callee	setModule		5189638	0					
ANR	5190074	Identifier	setModule		5189638	0					
ANR	5190075	ArgumentList	qrcode		5189638	1					
ANR	5190076	Argument	qrcode		5189638	0					
ANR	5190077	Identifier	qrcode		5189638	0					
ANR	5190078	Argument	k		5189638	1					
ANR	5190079	Identifier	k		5189638	0					
ANR	5190080	Argument	i		5189638	2					
ANR	5190081	Identifier	i		5189638	0					
ANR	5190082	Argument	( data & 1 ) != 0		5189638	3					
ANR	5190083	EqualityExpression	( data & 1 ) != 0		5189638	0		!=			
ANR	5190084	BitAndExpression	data & 1		5189638	0		&			
ANR	5190085	Identifier	data		5189638	0					
ANR	5190086	PrimaryExpression	1		5189638	1					
ANR	5190087	PrimaryExpression	0		5189638	1					
ANR	5190088	ExpressionStatement	"setModule ( qrcode , i , k , ( data & 1 ) != 0 )"	681:4:26475:26516	5189638	2	True				
ANR	5190089	CallExpression	"setModule ( qrcode , i , k , ( data & 1 ) != 0 )"		5189638	0					
ANR	5190090	Callee	setModule		5189638	0					
ANR	5190091	Identifier	setModule		5189638	0					
ANR	5190092	ArgumentList	qrcode		5189638	1					
ANR	5190093	Argument	qrcode		5189638	0					
ANR	5190094	Identifier	qrcode		5189638	0					
ANR	5190095	Argument	i		5189638	1					
ANR	5190096	Identifier	i		5189638	0					
ANR	5190097	Argument	k		5189638	2					
ANR	5190098	Identifier	k		5189638	0					
ANR	5190099	Argument	( data & 1 ) != 0		5189638	3					
ANR	5190100	EqualityExpression	( data & 1 ) != 0		5189638	0		!=			
ANR	5190101	BitAndExpression	data & 1		5189638	0		&			
ANR	5190102	Identifier	data		5189638	0					
ANR	5190103	PrimaryExpression	1		5189638	1					
ANR	5190104	PrimaryExpression	0		5189638	1					
ANR	5190105	ExpressionStatement	data >>= 1	682:4:26522:26532	5189638	3	True				
ANR	5190106	AssignmentExpression	data >>= 1		5189638	0		>>=			
ANR	5190107	Identifier	data		5189638	0					
ANR	5190108	PrimaryExpression	1		5189638	1					
ANR	5190109	ReturnType	static void		5189638	1					
ANR	5190110	Identifier	drawWhiteFunctionModules		5189638	2					
ANR	5190111	ParameterList	"ut8 qrcode [ ] , int version"		5189638	3					
ANR	5190112	Parameter	ut8 qrcode [ ]	623:37:24774:24785	5189638	0	True				
ANR	5190113	ParameterType	ut8 [ ]		5189638	0					
ANR	5190114	Identifier	qrcode		5189638	1					
ANR	5190115	Parameter	int version	623:51:24788:24798	5189638	1	True				
ANR	5190116	ParameterType	int		5189638	0					
ANR	5190117	Identifier	version		5189638	1					
ANR	5190118	CFGEntryNode	ENTRY		5189638		True				
ANR	5190119	CFGExitNode	EXIT		5189638		True				
ANR	5190120	Symbol	data		5189638						
ANR	5190121	Symbol	qrcode		5189638						
ANR	5190122	Symbol	false		5189638						
ANR	5190123	Symbol	qrcodegen_getSize		5189638						
ANR	5190124	Symbol	i		5189638						
ANR	5190125	Symbol	dist		5189638						
ANR	5190126	Symbol	j		5189638						
ANR	5190127	Symbol	k		5189638						
ANR	5190128	Symbol	l		5189638						
ANR	5190129	Symbol	version		5189638						
ANR	5190130	Symbol	qrsize		5189638						
ANR	5190131	Symbol	getAlignmentPatternPositions		5189638						
ANR	5190132	Symbol	abs		5189638						
ANR	5190133	Symbol	* i		5189638						
ANR	5190134	Symbol	* j		5189638						
ANR	5190135	Symbol	alignPatPos		5189638						
ANR	5190136	Symbol	rem		5189638						
ANR	5190137	Symbol	numAlign		5189638						
ANR	5190138	Symbol	* alignPatPos		5189638						
ANR	5190139	Function	drawFormatBits	692:0:26800:28118							
ANR	5190140	FunctionDef	"drawFormatBits (enum qrcodegen_Ecc ecl , enum qrcodegen_Mask mask , ut8 qrcode [ ])"		5190139	0					
ANR	5190141	CompoundStatement		692:91:26891:28118	5190139	0					
ANR	5190142	IfStatement	if ( mask < 0 || mask > 7 )		5190139	0					
ANR	5190143	Condition	mask < 0 || mask > 7	694:5:26948:26967	5190139	0	True				
ANR	5190144	OrExpression	mask < 0 || mask > 7		5190139	0		||			
ANR	5190145	RelationalExpression	mask < 0		5190139	0		<			
ANR	5190146	Identifier	mask		5190139	0					
ANR	5190147	PrimaryExpression	0		5190139	1					
ANR	5190148	RelationalExpression	mask > 7		5190139	1		>			
ANR	5190149	Identifier	mask		5190139	0					
ANR	5190150	PrimaryExpression	7		5190139	1					
ANR	5190151	CompoundStatement		3:27:78:78	5190139	1					
ANR	5190152	ReturnStatement	return ;	695:2:26974:26980	5190139	0	True				
ANR	5190153	IdentifierDeclStatement	int data ;	697:1:26986:26994	5190139	1	True				
ANR	5190154	IdentifierDecl	data		5190139	0					
ANR	5190155	IdentifierDeclType	int		5190139	0					
ANR	5190156	Identifier	data		5190139	1					
ANR	5190157	SwitchStatement	switch ( ecl )		5190139	2					
ANR	5190158	Condition	ecl	698:9:27005:27007	5190139	0	True				
ANR	5190159	Identifier	ecl		5190139	0					
ANR	5190160	CompoundStatement		7:14:118:118	5190139	1					
ANR	5190161	Label	case qrcodegen_Ecc_LOW :	699:1:27013:27035	5190139	0	True				
ANR	5190162	Identifier	qrcodegen_Ecc_LOW		5190139	0					
ANR	5190163	ExpressionStatement	data = 1	699:26:27038:27046	5190139	1	True				
ANR	5190164	AssignmentExpression	data = 1		5190139	0		=			
ANR	5190165	Identifier	data		5190139	0					
ANR	5190166	PrimaryExpression	1		5190139	1					
ANR	5190167	BreakStatement	break ;	699:37:27049:27054	5190139	2	True				
ANR	5190168	Label	case qrcodegen_Ecc_MEDIUM :	700:1:27057:27082	5190139	3	True				
ANR	5190169	Identifier	qrcodegen_Ecc_MEDIUM		5190139	0					
ANR	5190170	ExpressionStatement	data = 0	700:29:27085:27093	5190139	4	True				
ANR	5190171	AssignmentExpression	data = 0		5190139	0		=			
ANR	5190172	Identifier	data		5190139	0					
ANR	5190173	PrimaryExpression	0		5190139	1					
ANR	5190174	BreakStatement	break ;	700:40:27096:27101	5190139	5	True				
ANR	5190175	Label	case qrcodegen_Ecc_QUARTILE :	701:1:27104:27131	5190139	6	True				
ANR	5190176	Identifier	qrcodegen_Ecc_QUARTILE		5190139	0					
ANR	5190177	ExpressionStatement	data = 3	701:31:27134:27142	5190139	7	True				
ANR	5190178	AssignmentExpression	data = 3		5190139	0		=			
ANR	5190179	Identifier	data		5190139	0					
ANR	5190180	PrimaryExpression	3		5190139	1					
ANR	5190181	BreakStatement	break ;	701:42:27145:27150	5190139	8	True				
ANR	5190182	Label	case qrcodegen_Ecc_HIGH :	702:1:27153:27176	5190139	9	True				
ANR	5190183	Identifier	qrcodegen_Ecc_HIGH		5190139	0					
ANR	5190184	ExpressionStatement	data = 2	702:27:27179:27187	5190139	10	True				
ANR	5190185	AssignmentExpression	data = 2		5190139	0		=			
ANR	5190186	Identifier	data		5190139	0					
ANR	5190187	PrimaryExpression	2		5190139	1					
ANR	5190188	BreakStatement	break ;	702:38:27190:27195	5190139	11	True				
ANR	5190189	Label	default :	703:1:27198:27205	5190139	12	True				
ANR	5190190	Identifier	default		5190139	0					
ANR	5190191	ReturnStatement	return ;	703:10:27207:27213	5190139	13	True				
ANR	5190192	ExpressionStatement	data = data << 3 | ( int ) mask	705:1:27219:27248	5190139	3	True				
ANR	5190193	AssignmentExpression	data = data << 3 | ( int ) mask		5190139	0		=			
ANR	5190194	Identifier	data		5190139	0					
ANR	5190195	InclusiveOrExpression	data << 3 | ( int ) mask		5190139	1		|			
ANR	5190196	ShiftExpression	data << 3		5190139	0		<<			
ANR	5190197	Identifier	data		5190139	0					
ANR	5190198	PrimaryExpression	3		5190139	1					
ANR	5190199	CastExpression	( int ) mask		5190139	1					
ANR	5190200	CastTarget	int		5190139	0					
ANR	5190201	Identifier	mask		5190139	1					
ANR	5190202	IdentifierDeclStatement	"int i , rem = data ;"	706:1:27296:27313	5190139	4	True				
ANR	5190203	IdentifierDecl	i		5190139	0					
ANR	5190204	IdentifierDeclType	int		5190139	0					
ANR	5190205	Identifier	i		5190139	1					
ANR	5190206	IdentifierDecl	rem = data		5190139	1					
ANR	5190207	IdentifierDeclType	int		5190139	0					
ANR	5190208	Identifier	rem		5190139	1					
ANR	5190209	AssignmentExpression	rem = data		5190139	2		=			
ANR	5190210	Identifier	data		5190139	0					
ANR	5190211	Identifier	data		5190139	1					
ANR	5190212	ForStatement	for ( i = 0 ; i < 10 ; i ++ )		5190139	5					
ANR	5190213	ForInit	i = 0 ;	707:6:27321:27326	5190139	0	True				
ANR	5190214	AssignmentExpression	i = 0		5190139	0		=			
ANR	5190215	Identifier	i		5190139	0					
ANR	5190216	PrimaryExpression	0		5190139	1					
ANR	5190217	Condition	i < 10	707:13:27328:27333	5190139	1	True				
ANR	5190218	RelationalExpression	i < 10		5190139	0		<			
ANR	5190219	Identifier	i		5190139	0					
ANR	5190220	PrimaryExpression	10		5190139	1					
ANR	5190221	PostIncDecOperationExpression	i ++	707:21:27336:27338	5190139	2	True				
ANR	5190222	Identifier	i		5190139	0					
ANR	5190223	IncDec	++		5190139	1					
ANR	5190224	CompoundStatement		16:26:449:449	5190139	3					
ANR	5190225	ExpressionStatement	rem = ( rem << 1 ) ^ ( ( rem >> 9 ) * 0x537 )	708:2:27345:27384	5190139	0	True				
ANR	5190226	AssignmentExpression	rem = ( rem << 1 ) ^ ( ( rem >> 9 ) * 0x537 )		5190139	0		=			
ANR	5190227	Identifier	rem		5190139	0					
ANR	5190228	ExclusiveOrExpression	( rem << 1 ) ^ ( ( rem >> 9 ) * 0x537 )		5190139	1		^			
ANR	5190229	ShiftExpression	rem << 1		5190139	0		<<			
ANR	5190230	Identifier	rem		5190139	0					
ANR	5190231	PrimaryExpression	1		5190139	1					
ANR	5190232	MultiplicativeExpression	( rem >> 9 ) * 0x537		5190139	1		*			
ANR	5190233	ShiftExpression	rem >> 9		5190139	0		>>			
ANR	5190234	Identifier	rem		5190139	0					
ANR	5190235	PrimaryExpression	9		5190139	1					
ANR	5190236	PrimaryExpression	0x537		5190139	1					
ANR	5190237	ExpressionStatement	data = data << 10 | rem	710:1:27390:27413	5190139	6	True				
ANR	5190238	AssignmentExpression	data = data << 10 | rem		5190139	0		=			
ANR	5190239	Identifier	data		5190139	0					
ANR	5190240	InclusiveOrExpression	data << 10 | rem		5190139	1		|			
ANR	5190241	ShiftExpression	data << 10		5190139	0		<<			
ANR	5190242	Identifier	data		5190139	0					
ANR	5190243	PrimaryExpression	10		5190139	1					
ANR	5190244	Identifier	rem		5190139	1					
ANR	5190245	ExpressionStatement	data ^= 0x5412	711:1:27416:27430	5190139	7	True				
ANR	5190246	AssignmentExpression	data ^= 0x5412		5190139	0		^=			
ANR	5190247	Identifier	data		5190139	0					
ANR	5190248	PrimaryExpression	0x5412		5190139	1					
ANR	5190249	IfStatement	if ( data >> 15 )		5190139	8					
ANR	5190250	Condition	data >> 15	712:5:27447:27456	5190139	0	True				
ANR	5190251	ShiftExpression	data >> 15		5190139	0		>>			
ANR	5190252	Identifier	data		5190139	0					
ANR	5190253	PrimaryExpression	15		5190139	1					
ANR	5190254	CompoundStatement		21:17:567:567	5190139	1					
ANR	5190255	ReturnStatement	return ;	713:2:27463:27469	5190139	0	True				
ANR	5190256	ForStatement	for ( i = 0 ; i <= 5 ; i ++ )		5190139	9					
ANR	5190257	ForInit	i = 0 ;	717:6:27501:27506	5190139	0	True				
ANR	5190258	AssignmentExpression	i = 0		5190139	0		=			
ANR	5190259	Identifier	i		5190139	0					
ANR	5190260	PrimaryExpression	0		5190139	1					
ANR	5190261	Condition	i <= 5	717:13:27508:27513	5190139	1	True				
ANR	5190262	RelationalExpression	i <= 5		5190139	0		<=			
ANR	5190263	Identifier	i		5190139	0					
ANR	5190264	PrimaryExpression	5		5190139	1					
ANR	5190265	PostIncDecOperationExpression	i ++	717:21:27516:27518	5190139	2	True				
ANR	5190266	Identifier	i		5190139	0					
ANR	5190267	IncDec	++		5190139	1					
ANR	5190268	CompoundStatement		26:26:629:629	5190139	3					
ANR	5190269	ExpressionStatement	"setModule ( qrcode , 8 , i , ( ( data >> i ) & 1 ) != 0 )"	718:2:27525:27573	5190139	0	True				
ANR	5190270	CallExpression	"setModule ( qrcode , 8 , i , ( ( data >> i ) & 1 ) != 0 )"		5190139	0					
ANR	5190271	Callee	setModule		5190139	0					
ANR	5190272	Identifier	setModule		5190139	0					
ANR	5190273	ArgumentList	qrcode		5190139	1					
ANR	5190274	Argument	qrcode		5190139	0					
ANR	5190275	Identifier	qrcode		5190139	0					
ANR	5190276	Argument	8		5190139	1					
ANR	5190277	PrimaryExpression	8		5190139	0					
ANR	5190278	Argument	i		5190139	2					
ANR	5190279	Identifier	i		5190139	0					
ANR	5190280	Argument	( ( data >> i ) & 1 ) != 0		5190139	3					
ANR	5190281	EqualityExpression	( ( data >> i ) & 1 ) != 0		5190139	0		!=			
ANR	5190282	BitAndExpression	( data >> i ) & 1		5190139	0		&			
ANR	5190283	ShiftExpression	data >> i		5190139	0		>>			
ANR	5190284	Identifier	data		5190139	0					
ANR	5190285	Identifier	i		5190139	1					
ANR	5190286	PrimaryExpression	1		5190139	1					
ANR	5190287	PrimaryExpression	0		5190139	1					
ANR	5190288	ExpressionStatement	"setModule ( qrcode , 8 , 7 , ( ( data >> 6 ) & 1 ) != 0 )"	720:1:27579:27627	5190139	10	True				
ANR	5190289	CallExpression	"setModule ( qrcode , 8 , 7 , ( ( data >> 6 ) & 1 ) != 0 )"		5190139	0					
ANR	5190290	Callee	setModule		5190139	0					
ANR	5190291	Identifier	setModule		5190139	0					
ANR	5190292	ArgumentList	qrcode		5190139	1					
ANR	5190293	Argument	qrcode		5190139	0					
ANR	5190294	Identifier	qrcode		5190139	0					
ANR	5190295	Argument	8		5190139	1					
ANR	5190296	PrimaryExpression	8		5190139	0					
ANR	5190297	Argument	7		5190139	2					
ANR	5190298	PrimaryExpression	7		5190139	0					
ANR	5190299	Argument	( ( data >> 6 ) & 1 ) != 0		5190139	3					
ANR	5190300	EqualityExpression	( ( data >> 6 ) & 1 ) != 0		5190139	0		!=			
ANR	5190301	BitAndExpression	( data >> 6 ) & 1		5190139	0		&			
ANR	5190302	ShiftExpression	data >> 6		5190139	0		>>			
ANR	5190303	Identifier	data		5190139	0					
ANR	5190304	PrimaryExpression	6		5190139	1					
ANR	5190305	PrimaryExpression	1		5190139	1					
ANR	5190306	PrimaryExpression	0		5190139	1					
ANR	5190307	ExpressionStatement	"setModule ( qrcode , 8 , 8 , ( ( data >> 7 ) & 1 ) != 0 )"	721:1:27630:27678	5190139	11	True				
ANR	5190308	CallExpression	"setModule ( qrcode , 8 , 8 , ( ( data >> 7 ) & 1 ) != 0 )"		5190139	0					
ANR	5190309	Callee	setModule		5190139	0					
ANR	5190310	Identifier	setModule		5190139	0					
ANR	5190311	ArgumentList	qrcode		5190139	1					
ANR	5190312	Argument	qrcode		5190139	0					
ANR	5190313	Identifier	qrcode		5190139	0					
ANR	5190314	Argument	8		5190139	1					
ANR	5190315	PrimaryExpression	8		5190139	0					
ANR	5190316	Argument	8		5190139	2					
ANR	5190317	PrimaryExpression	8		5190139	0					
ANR	5190318	Argument	( ( data >> 7 ) & 1 ) != 0		5190139	3					
ANR	5190319	EqualityExpression	( ( data >> 7 ) & 1 ) != 0		5190139	0		!=			
ANR	5190320	BitAndExpression	( data >> 7 ) & 1		5190139	0		&			
ANR	5190321	ShiftExpression	data >> 7		5190139	0		>>			
ANR	5190322	Identifier	data		5190139	0					
ANR	5190323	PrimaryExpression	7		5190139	1					
ANR	5190324	PrimaryExpression	1		5190139	1					
ANR	5190325	PrimaryExpression	0		5190139	1					
ANR	5190326	ExpressionStatement	"setModule ( qrcode , 7 , 8 , ( ( data >> 8 ) & 1 ) != 0 )"	722:1:27681:27729	5190139	12	True				
ANR	5190327	CallExpression	"setModule ( qrcode , 7 , 8 , ( ( data >> 8 ) & 1 ) != 0 )"		5190139	0					
ANR	5190328	Callee	setModule		5190139	0					
ANR	5190329	Identifier	setModule		5190139	0					
ANR	5190330	ArgumentList	qrcode		5190139	1					
ANR	5190331	Argument	qrcode		5190139	0					
ANR	5190332	Identifier	qrcode		5190139	0					
ANR	5190333	Argument	7		5190139	1					
ANR	5190334	PrimaryExpression	7		5190139	0					
ANR	5190335	Argument	8		5190139	2					
ANR	5190336	PrimaryExpression	8		5190139	0					
ANR	5190337	Argument	( ( data >> 8 ) & 1 ) != 0		5190139	3					
ANR	5190338	EqualityExpression	( ( data >> 8 ) & 1 ) != 0		5190139	0		!=			
ANR	5190339	BitAndExpression	( data >> 8 ) & 1		5190139	0		&			
ANR	5190340	ShiftExpression	data >> 8		5190139	0		>>			
ANR	5190341	Identifier	data		5190139	0					
ANR	5190342	PrimaryExpression	8		5190139	1					
ANR	5190343	PrimaryExpression	1		5190139	1					
ANR	5190344	PrimaryExpression	0		5190139	1					
ANR	5190345	ForStatement	for ( i = 9 ; i < 15 ; i ++ )		5190139	13					
ANR	5190346	ForInit	i = 9 ;	723:6:27737:27742	5190139	0	True				
ANR	5190347	AssignmentExpression	i = 9		5190139	0		=			
ANR	5190348	Identifier	i		5190139	0					
ANR	5190349	PrimaryExpression	9		5190139	1					
ANR	5190350	Condition	i < 15	723:13:27744:27749	5190139	1	True				
ANR	5190351	RelationalExpression	i < 15		5190139	0		<			
ANR	5190352	Identifier	i		5190139	0					
ANR	5190353	PrimaryExpression	15		5190139	1					
ANR	5190354	PostIncDecOperationExpression	i ++	723:21:27752:27754	5190139	2	True				
ANR	5190355	Identifier	i		5190139	0					
ANR	5190356	IncDec	++		5190139	1					
ANR	5190357	CompoundStatement		32:26:865:865	5190139	3					
ANR	5190358	ExpressionStatement	"setModule ( qrcode , 14 - i , 8 , ( ( data >> i ) & 1 ) != 0 )"	724:2:27761:27814	5190139	0	True				
ANR	5190359	CallExpression	"setModule ( qrcode , 14 - i , 8 , ( ( data >> i ) & 1 ) != 0 )"		5190139	0					
ANR	5190360	Callee	setModule		5190139	0					
ANR	5190361	Identifier	setModule		5190139	0					
ANR	5190362	ArgumentList	qrcode		5190139	1					
ANR	5190363	Argument	qrcode		5190139	0					
ANR	5190364	Identifier	qrcode		5190139	0					
ANR	5190365	Argument	14 - i		5190139	1					
ANR	5190366	AdditiveExpression	14 - i		5190139	0		-			
ANR	5190367	PrimaryExpression	14		5190139	0					
ANR	5190368	Identifier	i		5190139	1					
ANR	5190369	Argument	8		5190139	2					
ANR	5190370	PrimaryExpression	8		5190139	0					
ANR	5190371	Argument	( ( data >> i ) & 1 ) != 0		5190139	3					
ANR	5190372	EqualityExpression	( ( data >> i ) & 1 ) != 0		5190139	0		!=			
ANR	5190373	BitAndExpression	( data >> i ) & 1		5190139	0		&			
ANR	5190374	ShiftExpression	data >> i		5190139	0		>>			
ANR	5190375	Identifier	data		5190139	0					
ANR	5190376	Identifier	i		5190139	1					
ANR	5190377	PrimaryExpression	1		5190139	1					
ANR	5190378	PrimaryExpression	0		5190139	1					
ANR	5190379	IdentifierDeclStatement	int qrsize = qrcodegen_getSize ( qrcode ) ;	728:1:27842:27881	5190139	14	True				
ANR	5190380	IdentifierDecl	qrsize = qrcodegen_getSize ( qrcode )		5190139	0					
ANR	5190381	IdentifierDeclType	int		5190139	0					
ANR	5190382	Identifier	qrsize		5190139	1					
ANR	5190383	AssignmentExpression	qrsize = qrcodegen_getSize ( qrcode )		5190139	2		=			
ANR	5190384	Identifier	qrsize		5190139	0					
ANR	5190385	CallExpression	qrcodegen_getSize ( qrcode )		5190139	1					
ANR	5190386	Callee	qrcodegen_getSize		5190139	0					
ANR	5190387	Identifier	qrcodegen_getSize		5190139	0					
ANR	5190388	ArgumentList	qrcode		5190139	1					
ANR	5190389	Argument	qrcode		5190139	0					
ANR	5190390	Identifier	qrcode		5190139	0					
ANR	5190391	ForStatement	for ( i = 0 ; i <= 7 ; i ++ )		5190139	15					
ANR	5190392	ForInit	i = 0 ;	729:6:27889:27894	5190139	0	True				
ANR	5190393	AssignmentExpression	i = 0		5190139	0		=			
ANR	5190394	Identifier	i		5190139	0					
ANR	5190395	PrimaryExpression	0		5190139	1					
ANR	5190396	Condition	i <= 7	729:13:27896:27901	5190139	1	True				
ANR	5190397	RelationalExpression	i <= 7		5190139	0		<=			
ANR	5190398	Identifier	i		5190139	0					
ANR	5190399	PrimaryExpression	7		5190139	1					
ANR	5190400	PostIncDecOperationExpression	i ++	729:21:27904:27906	5190139	2	True				
ANR	5190401	Identifier	i		5190139	0					
ANR	5190402	IncDec	++		5190139	1					
ANR	5190403	CompoundStatement		38:26:1017:1017	5190139	3					
ANR	5190404	ExpressionStatement	"setModule ( qrcode , qrsize - 1 - i , 8 , ( ( data >> i ) & 1 ) != 0 )"	730:2:27913:27974	5190139	0	True				
ANR	5190405	CallExpression	"setModule ( qrcode , qrsize - 1 - i , 8 , ( ( data >> i ) & 1 ) != 0 )"		5190139	0					
ANR	5190406	Callee	setModule		5190139	0					
ANR	5190407	Identifier	setModule		5190139	0					
ANR	5190408	ArgumentList	qrcode		5190139	1					
ANR	5190409	Argument	qrcode		5190139	0					
ANR	5190410	Identifier	qrcode		5190139	0					
ANR	5190411	Argument	qrsize - 1 - i		5190139	1					
ANR	5190412	AdditiveExpression	qrsize - 1 - i		5190139	0		-			
ANR	5190413	Identifier	qrsize		5190139	0					
ANR	5190414	AdditiveExpression	1 - i		5190139	1		-			
ANR	5190415	PrimaryExpression	1		5190139	0					
ANR	5190416	Identifier	i		5190139	1					
ANR	5190417	Argument	8		5190139	2					
ANR	5190418	PrimaryExpression	8		5190139	0					
ANR	5190419	Argument	( ( data >> i ) & 1 ) != 0		5190139	3					
ANR	5190420	EqualityExpression	( ( data >> i ) & 1 ) != 0		5190139	0		!=			
ANR	5190421	BitAndExpression	( data >> i ) & 1		5190139	0		&			
ANR	5190422	ShiftExpression	data >> i		5190139	0		>>			
ANR	5190423	Identifier	data		5190139	0					
ANR	5190424	Identifier	i		5190139	1					
ANR	5190425	PrimaryExpression	1		5190139	1					
ANR	5190426	PrimaryExpression	0		5190139	1					
ANR	5190427	ForStatement	for ( i = 8 ; i < 15 ; i ++ )		5190139	16					
ANR	5190428	ForInit	i = 8 ;	732:6:27985:27990	5190139	0	True				
ANR	5190429	AssignmentExpression	i = 8		5190139	0		=			
ANR	5190430	Identifier	i		5190139	0					
ANR	5190431	PrimaryExpression	8		5190139	1					
ANR	5190432	Condition	i < 15	732:13:27992:27997	5190139	1	True				
ANR	5190433	RelationalExpression	i < 15		5190139	0		<			
ANR	5190434	Identifier	i		5190139	0					
ANR	5190435	PrimaryExpression	15		5190139	1					
ANR	5190436	PostIncDecOperationExpression	i ++	732:21:28000:28002	5190139	2	True				
ANR	5190437	Identifier	i		5190139	0					
ANR	5190438	IncDec	++		5190139	1					
ANR	5190439	CompoundStatement		41:26:1113:1113	5190139	3					
ANR	5190440	ExpressionStatement	"setModule ( qrcode , 8 , qrsize - 15 + i , ( ( data >> i ) & 1 ) != 0 )"	733:2:28009:28071	5190139	0	True				
ANR	5190441	CallExpression	"setModule ( qrcode , 8 , qrsize - 15 + i , ( ( data >> i ) & 1 ) != 0 )"		5190139	0					
ANR	5190442	Callee	setModule		5190139	0					
ANR	5190443	Identifier	setModule		5190139	0					
ANR	5190444	ArgumentList	qrcode		5190139	1					
ANR	5190445	Argument	qrcode		5190139	0					
ANR	5190446	Identifier	qrcode		5190139	0					
ANR	5190447	Argument	8		5190139	1					
ANR	5190448	PrimaryExpression	8		5190139	0					
ANR	5190449	Argument	qrsize - 15 + i		5190139	2					
ANR	5190450	AdditiveExpression	qrsize - 15 + i		5190139	0		-			
ANR	5190451	Identifier	qrsize		5190139	0					
ANR	5190452	AdditiveExpression	15 + i		5190139	1		+			
ANR	5190453	PrimaryExpression	15		5190139	0					
ANR	5190454	Identifier	i		5190139	1					
ANR	5190455	Argument	( ( data >> i ) & 1 ) != 0		5190139	3					
ANR	5190456	EqualityExpression	( ( data >> i ) & 1 ) != 0		5190139	0		!=			
ANR	5190457	BitAndExpression	( data >> i ) & 1		5190139	0		&			
ANR	5190458	ShiftExpression	data >> i		5190139	0		>>			
ANR	5190459	Identifier	data		5190139	0					
ANR	5190460	Identifier	i		5190139	1					
ANR	5190461	PrimaryExpression	1		5190139	1					
ANR	5190462	PrimaryExpression	0		5190139	1					
ANR	5190463	ExpressionStatement	"setModule ( qrcode , 8 , qrsize - 8 , true )"	735:1:28077:28116	5190139	17	True				
ANR	5190464	CallExpression	"setModule ( qrcode , 8 , qrsize - 8 , true )"		5190139	0					
ANR	5190465	Callee	setModule		5190139	0					
ANR	5190466	Identifier	setModule		5190139	0					
ANR	5190467	ArgumentList	qrcode		5190139	1					
ANR	5190468	Argument	qrcode		5190139	0					
ANR	5190469	Identifier	qrcode		5190139	0					
ANR	5190470	Argument	8		5190139	1					
ANR	5190471	PrimaryExpression	8		5190139	0					
ANR	5190472	Argument	qrsize - 8		5190139	2					
ANR	5190473	AdditiveExpression	qrsize - 8		5190139	0		-			
ANR	5190474	Identifier	qrsize		5190139	0					
ANR	5190475	PrimaryExpression	8		5190139	1					
ANR	5190476	Argument	true		5190139	3					
ANR	5190477	Identifier	true		5190139	0					
ANR	5190478	ReturnType	static void		5190139	1					
ANR	5190479	Identifier	drawFormatBits		5190139	2					
ANR	5190480	ParameterList	"enum qrcodegen_Ecc ecl , enum qrcodegen_Mask mask , ut8 qrcode [ ]"		5190139	3					
ANR	5190481	Parameter	enum qrcodegen_Ecc ecl	692:27:26827:26848	5190139	0	True				
ANR	5190482	ParameterType	enum qrcodegen_Ecc		5190139	0					
ANR	5190483	Identifier	ecl		5190139	1					
ANR	5190484	Parameter	enum qrcodegen_Mask mask	692:51:26851:26874	5190139	1	True				
ANR	5190485	ParameterType	enum qrcodegen_Mask		5190139	0					
ANR	5190486	Identifier	mask		5190139	1					
ANR	5190487	Parameter	ut8 qrcode [ ]	692:77:26877:26888	5190139	2	True				
ANR	5190488	ParameterType	ut8 [ ]		5190139	0					
ANR	5190489	Identifier	qrcode		5190139	1					
ANR	5190490	CFGEntryNode	ENTRY		5190139		True				
ANR	5190491	CFGExitNode	EXIT		5190139		True				
ANR	5190492	Symbol	data		5190139						
ANR	5190493	Symbol	qrcode		5190139						
ANR	5190494	Symbol	true		5190139						
ANR	5190495	Symbol	i		5190139						
ANR	5190496	Symbol	qrcodegen_getSize		5190139						
ANR	5190497	Symbol	rem		5190139						
ANR	5190498	Symbol	qrsize		5190139						
ANR	5190499	Symbol	ecl		5190139						
ANR	5190500	Symbol	mask		5190139						
ANR	5190501	Function	getAlignmentPatternPositions	741:0:28307:28813							
ANR	5190502	FunctionDef	"getAlignmentPatternPositions (int version , ut8 result [ 7 ])"		5190501	0					
ANR	5190503	CompoundStatement		741:68:28375:28813	5190501	0					
ANR	5190504	IfStatement	if ( version == 1 )		5190501	0					
ANR	5190505	Condition	version == 1	742:5:28382:28393	5190501	0	True				
ANR	5190506	EqualityExpression	version == 1		5190501	0		==			
ANR	5190507	Identifier	version		5190501	0					
ANR	5190508	PrimaryExpression	1		5190501	1					
ANR	5190509	CompoundStatement		2:19:20:20	5190501	1					
ANR	5190510	ReturnStatement	return 0 ;	743:2:28400:28408	5190501	0	True				
ANR	5190511	PrimaryExpression	0		5190501	0					
ANR	5190512	IdentifierDeclStatement	int qrsize = version * 4 + 17 ;	745:1:28414:28443	5190501	1	True				
ANR	5190513	IdentifierDecl	qrsize = version * 4 + 17		5190501	0					
ANR	5190514	IdentifierDeclType	int		5190501	0					
ANR	5190515	Identifier	qrsize		5190501	1					
ANR	5190516	AssignmentExpression	qrsize = version * 4 + 17		5190501	2		=			
ANR	5190517	Identifier	qrsize		5190501	0					
ANR	5190518	AdditiveExpression	version * 4 + 17		5190501	1		+			
ANR	5190519	MultiplicativeExpression	version * 4		5190501	0		*			
ANR	5190520	Identifier	version		5190501	0					
ANR	5190521	PrimaryExpression	4		5190501	1					
ANR	5190522	PrimaryExpression	17		5190501	1					
ANR	5190523	IdentifierDeclStatement	int numAlign = version / 7 + 2 ;	746:1:28446:28476	5190501	2	True				
ANR	5190524	IdentifierDecl	numAlign = version / 7 + 2		5190501	0					
ANR	5190525	IdentifierDeclType	int		5190501	0					
ANR	5190526	Identifier	numAlign		5190501	1					
ANR	5190527	AssignmentExpression	numAlign = version / 7 + 2		5190501	2		=			
ANR	5190528	Identifier	numAlign		5190501	0					
ANR	5190529	AdditiveExpression	version / 7 + 2		5190501	1		+			
ANR	5190530	MultiplicativeExpression	version / 7		5190501	0		/			
ANR	5190531	Identifier	version		5190501	0					
ANR	5190532	PrimaryExpression	7		5190501	1					
ANR	5190533	PrimaryExpression	2		5190501	1					
ANR	5190534	IdentifierDeclStatement	"int i , step ;"	747:1:28479:28490	5190501	3	True				
ANR	5190535	IdentifierDecl	i		5190501	0					
ANR	5190536	IdentifierDeclType	int		5190501	0					
ANR	5190537	Identifier	i		5190501	1					
ANR	5190538	IdentifierDecl	step		5190501	1					
ANR	5190539	IdentifierDeclType	int		5190501	0					
ANR	5190540	Identifier	step		5190501	1					
ANR	5190541	IfStatement	if ( version != 32 )		5190501	4					
ANR	5190542	Condition	version != 32	748:5:28497:28509	5190501	0	True				
ANR	5190543	EqualityExpression	version != 32		5190501	0		!=			
ANR	5190544	Identifier	version		5190501	0					
ANR	5190545	PrimaryExpression	32		5190501	1					
ANR	5190546	CompoundStatement		8:20:136:136	5190501	1					
ANR	5190547	ExpressionStatement	step = ( version * 4 + numAlign * 2 + 1 ) / ( 2 * numAlign - 2 ) * 2	749:2:28516:28580	5190501	0	True				
ANR	5190548	AssignmentExpression	step = ( version * 4 + numAlign * 2 + 1 ) / ( 2 * numAlign - 2 ) * 2		5190501	0		=			
ANR	5190549	Identifier	step		5190501	0					
ANR	5190550	MultiplicativeExpression	( version * 4 + numAlign * 2 + 1 ) / ( 2 * numAlign - 2 ) * 2		5190501	1		/			
ANR	5190551	AdditiveExpression	version * 4 + numAlign * 2 + 1		5190501	0		+			
ANR	5190552	MultiplicativeExpression	version * 4		5190501	0		*			
ANR	5190553	Identifier	version		5190501	0					
ANR	5190554	PrimaryExpression	4		5190501	1					
ANR	5190555	AdditiveExpression	numAlign * 2 + 1		5190501	1		+			
ANR	5190556	MultiplicativeExpression	numAlign * 2		5190501	0		*			
ANR	5190557	Identifier	numAlign		5190501	0					
ANR	5190558	PrimaryExpression	2		5190501	1					
ANR	5190559	PrimaryExpression	1		5190501	1					
ANR	5190560	MultiplicativeExpression	( 2 * numAlign - 2 ) * 2		5190501	1		*			
ANR	5190561	AdditiveExpression	2 * numAlign - 2		5190501	0		-			
ANR	5190562	MultiplicativeExpression	2 * numAlign		5190501	0		*			
ANR	5190563	PrimaryExpression	2		5190501	0					
ANR	5190564	Identifier	numAlign		5190501	1					
ANR	5190565	PrimaryExpression	2		5190501	1					
ANR	5190566	PrimaryExpression	2		5190501	1					
ANR	5190567	ElseStatement	else		5190501	0					
ANR	5190568	CompoundStatement		10:8:260:260	5190501	0					
ANR	5190569	ExpressionStatement	step = 26	751:2:28663:28672	5190501	0	True				
ANR	5190570	AssignmentExpression	step = 26		5190501	0		=			
ANR	5190571	Identifier	step		5190501	0					
ANR	5190572	PrimaryExpression	26		5190501	1					
ANR	5190573	IdentifierDeclStatement	int pos ;	753:1:28678:28685	5190501	5	True				
ANR	5190574	IdentifierDecl	pos		5190501	0					
ANR	5190575	IdentifierDeclType	int		5190501	0					
ANR	5190576	Identifier	pos		5190501	1					
ANR	5190577	ForStatement	"for ( i = numAlign - 1 , pos = qrsize - 7 ; i >= 1 ; i -- , pos -= step )"		5190501	6					
ANR	5190578	ForInit	"i = numAlign - 1 , pos = qrsize - 7 ;"	754:6:28693:28727	5190501	0	True				
ANR	5190579	Expression	"i = numAlign - 1 , pos = qrsize - 7"		5190501	0					
ANR	5190580	AssignmentExpression	i = numAlign - 1		5190501	0		=			
ANR	5190581	Identifier	i		5190501	0					
ANR	5190582	AdditiveExpression	numAlign - 1		5190501	1		-			
ANR	5190583	Identifier	numAlign		5190501	0					
ANR	5190584	PrimaryExpression	1		5190501	1					
ANR	5190585	AssignmentExpression	pos = qrsize - 7		5190501	1		=			
ANR	5190586	Identifier	pos		5190501	0					
ANR	5190587	AdditiveExpression	qrsize - 7		5190501	1		-			
ANR	5190588	Identifier	qrsize		5190501	0					
ANR	5190589	PrimaryExpression	7		5190501	1					
ANR	5190590	Condition	i >= 1	754:42:28729:28734	5190501	1	True				
ANR	5190591	RelationalExpression	i >= 1		5190501	0		>=			
ANR	5190592	Identifier	i		5190501	0					
ANR	5190593	PrimaryExpression	1		5190501	1					
ANR	5190594	Expression	"i -- , pos -= step"	754:50:28737:28752	5190501	2	True				
ANR	5190595	PostIncDecOperationExpression	i --		5190501	0					
ANR	5190596	Identifier	i		5190501	0					
ANR	5190597	IncDec	--		5190501	1					
ANR	5190598	AssignmentExpression	pos -= step		5190501	1		-=			
ANR	5190599	Identifier	pos		5190501	0					
ANR	5190600	Identifier	step		5190501	1					
ANR	5190601	CompoundStatement		14:68:379:379	5190501	3					
ANR	5190602	ExpressionStatement	result [ i ] = pos	755:2:28759:28774	5190501	0	True				
ANR	5190603	AssignmentExpression	result [ i ] = pos		5190501	0		=			
ANR	5190604	ArrayIndexing	result [ i ]		5190501	0					
ANR	5190605	Identifier	result		5190501	0					
ANR	5190606	Identifier	i		5190501	1					
ANR	5190607	Identifier	pos		5190501	1					
ANR	5190608	ExpressionStatement	result [ 0 ] = 6	757:1:28780:28793	5190501	7	True				
ANR	5190609	AssignmentExpression	result [ 0 ] = 6		5190501	0		=			
ANR	5190610	ArrayIndexing	result [ 0 ]		5190501	0					
ANR	5190611	Identifier	result		5190501	0					
ANR	5190612	PrimaryExpression	0		5190501	1					
ANR	5190613	PrimaryExpression	6		5190501	1					
ANR	5190614	ReturnStatement	return numAlign ;	758:1:28796:28811	5190501	8	True				
ANR	5190615	Identifier	numAlign		5190501	0					
ANR	5190616	ReturnType	static int		5190501	1					
ANR	5190617	Identifier	getAlignmentPatternPositions		5190501	2					
ANR	5190618	ParameterList	"int version , ut8 result [ 7 ]"		5190501	3					
ANR	5190619	Parameter	int version	741:40:28347:28357	5190501	0	True				
ANR	5190620	ParameterType	int		5190501	0					
ANR	5190621	Identifier	version		5190501	1					
ANR	5190622	Parameter	ut8 result [ 7 ]	741:53:28360:28372	5190501	1	True				
ANR	5190623	ParameterType	ut8 [ 7 ]		5190501	0					
ANR	5190624	Identifier	result		5190501	1					
ANR	5190625	CFGEntryNode	ENTRY		5190501		True				
ANR	5190626	CFGExitNode	EXIT		5190501		True				
ANR	5190627	Symbol	result		5190501						
ANR	5190628	Symbol	* i		5190501						
ANR	5190629	Symbol	pos		5190501						
ANR	5190630	Symbol	* result		5190501						
ANR	5190631	Symbol	i		5190501						
ANR	5190632	Symbol	step		5190501						
ANR	5190633	Symbol	version		5190501						
ANR	5190634	Symbol	qrsize		5190501						
ANR	5190635	Symbol	numAlign		5190501						
ANR	5190636	Function	fillRectangle	762:0:28904:29128							
ANR	5190637	FunctionDef	"fillRectangle (int left , int top , int width , int height , ut8 qrcode [ ])"		5190636	0					
ANR	5190638	CompoundStatement		762:82:28986:29128	5190636	0					
ANR	5190639	IdentifierDeclStatement	"int dx , dy ;"	763:1:28989:28999	5190636	0	True				
ANR	5190640	IdentifierDecl	dx		5190636	0					
ANR	5190641	IdentifierDeclType	int		5190636	0					
ANR	5190642	Identifier	dx		5190636	1					
ANR	5190643	IdentifierDecl	dy		5190636	1					
ANR	5190644	IdentifierDeclType	int		5190636	0					
ANR	5190645	Identifier	dy		5190636	1					
ANR	5190646	ForStatement	for ( dy = 0 ; dy < height ; dy ++ )		5190636	1					
ANR	5190647	ForInit	dy = 0 ;	764:6:29007:29013	5190636	0	True				
ANR	5190648	AssignmentExpression	dy = 0		5190636	0		=			
ANR	5190649	Identifier	dy		5190636	0					
ANR	5190650	PrimaryExpression	0		5190636	1					
ANR	5190651	Condition	dy < height	764:14:29015:29025	5190636	1	True				
ANR	5190652	RelationalExpression	dy < height		5190636	0		<			
ANR	5190653	Identifier	dy		5190636	0					
ANR	5190654	Identifier	height		5190636	1					
ANR	5190655	PostIncDecOperationExpression	dy ++	764:27:29028:29031	5190636	2	True				
ANR	5190656	Identifier	dy		5190636	0					
ANR	5190657	IncDec	++		5190636	1					
ANR	5190658	CompoundStatement		3:33:47:47	5190636	3					
ANR	5190659	ForStatement	for ( dx = 0 ; dx < width ; dx ++ )		5190636	0					
ANR	5190660	ForInit	dx = 0 ;	765:7:29043:29049	5190636	0	True				
ANR	5190661	AssignmentExpression	dx = 0		5190636	0		=			
ANR	5190662	Identifier	dx		5190636	0					
ANR	5190663	PrimaryExpression	0		5190636	1					
ANR	5190664	Condition	dx < width	765:15:29051:29060	5190636	1	True				
ANR	5190665	RelationalExpression	dx < width		5190636	0		<			
ANR	5190666	Identifier	dx		5190636	0					
ANR	5190667	Identifier	width		5190636	1					
ANR	5190668	PostIncDecOperationExpression	dx ++	765:27:29063:29066	5190636	2	True				
ANR	5190669	Identifier	dx		5190636	0					
ANR	5190670	IncDec	++		5190636	1					
ANR	5190671	CompoundStatement		4:33:82:82	5190636	3					
ANR	5190672	ExpressionStatement	"setModule ( qrcode , left + dx , top + dy , true )"	766:3:29074:29119	5190636	0	True				
ANR	5190673	CallExpression	"setModule ( qrcode , left + dx , top + dy , true )"		5190636	0					
ANR	5190674	Callee	setModule		5190636	0					
ANR	5190675	Identifier	setModule		5190636	0					
ANR	5190676	ArgumentList	qrcode		5190636	1					
ANR	5190677	Argument	qrcode		5190636	0					
ANR	5190678	Identifier	qrcode		5190636	0					
ANR	5190679	Argument	left + dx		5190636	1					
ANR	5190680	AdditiveExpression	left + dx		5190636	0		+			
ANR	5190681	Identifier	left		5190636	0					
ANR	5190682	Identifier	dx		5190636	1					
ANR	5190683	Argument	top + dy		5190636	2					
ANR	5190684	AdditiveExpression	top + dy		5190636	0		+			
ANR	5190685	Identifier	top		5190636	0					
ANR	5190686	Identifier	dy		5190636	1					
ANR	5190687	Argument	true		5190636	3					
ANR	5190688	Identifier	true		5190636	0					
ANR	5190689	ReturnType	static void		5190636	1					
ANR	5190690	Identifier	fillRectangle		5190636	2					
ANR	5190691	ParameterList	"int left , int top , int width , int height , ut8 qrcode [ ]"		5190636	3					
ANR	5190692	Parameter	int left	762:26:28930:28937	5190636	0	True				
ANR	5190693	ParameterType	int		5190636	0					
ANR	5190694	Identifier	left		5190636	1					
ANR	5190695	Parameter	int top	762:36:28940:28946	5190636	1	True				
ANR	5190696	ParameterType	int		5190636	0					
ANR	5190697	Identifier	top		5190636	1					
ANR	5190698	Parameter	int width	762:45:28949:28957	5190636	2	True				
ANR	5190699	ParameterType	int		5190636	0					
ANR	5190700	Identifier	width		5190636	1					
ANR	5190701	Parameter	int height	762:56:28960:28969	5190636	3	True				
ANR	5190702	ParameterType	int		5190636	0					
ANR	5190703	Identifier	height		5190636	1					
ANR	5190704	Parameter	ut8 qrcode [ ]	762:68:28972:28983	5190636	4	True				
ANR	5190705	ParameterType	ut8 [ ]		5190636	0					
ANR	5190706	Identifier	qrcode		5190636	1					
ANR	5190707	CFGEntryNode	ENTRY		5190636		True				
ANR	5190708	CFGExitNode	EXIT		5190636		True				
ANR	5190709	Symbol	top		5190636						
ANR	5190710	Symbol	dx		5190636						
ANR	5190711	Symbol	left		5190636						
ANR	5190712	Symbol	dy		5190636						
ANR	5190713	Symbol	qrcode		5190636						
ANR	5190714	Symbol	width		5190636						
ANR	5190715	Symbol	true		5190636						
ANR	5190716	Symbol	height		5190636						
ANR	5190717	Function	drawCodewords	775:0:29402:30328							
ANR	5190718	FunctionDef	"drawCodewords (const ut8 data [ ] , int dataLen , ut8 qrcode [ ])"		5190717	0					
ANR	5190719	CompoundStatement		775:71:29473:30328	5190717	0					
ANR	5190720	IdentifierDeclStatement	int qrsize = qrcodegen_getSize ( qrcode ) ;	776:1:29476:29515	5190717	0	True				
ANR	5190721	IdentifierDecl	qrsize = qrcodegen_getSize ( qrcode )		5190717	0					
ANR	5190722	IdentifierDeclType	int		5190717	0					
ANR	5190723	Identifier	qrsize		5190717	1					
ANR	5190724	AssignmentExpression	qrsize = qrcodegen_getSize ( qrcode )		5190717	2		=			
ANR	5190725	Identifier	qrsize		5190717	0					
ANR	5190726	CallExpression	qrcodegen_getSize ( qrcode )		5190717	1					
ANR	5190727	Callee	qrcodegen_getSize		5190717	0					
ANR	5190728	Identifier	qrcodegen_getSize		5190717	0					
ANR	5190729	ArgumentList	qrcode		5190717	1					
ANR	5190730	Argument	qrcode		5190717	0					
ANR	5190731	Identifier	qrcode		5190717	0					
ANR	5190732	IdentifierDeclStatement	"int right , vert , j , i = 0 ;"	777:1:29518:29543	5190717	1	True				
ANR	5190733	IdentifierDecl	right		5190717	0					
ANR	5190734	IdentifierDeclType	int		5190717	0					
ANR	5190735	Identifier	right		5190717	1					
ANR	5190736	IdentifierDecl	vert		5190717	1					
ANR	5190737	IdentifierDeclType	int		5190717	0					
ANR	5190738	Identifier	vert		5190717	1					
ANR	5190739	IdentifierDecl	j		5190717	2					
ANR	5190740	IdentifierDeclType	int		5190717	0					
ANR	5190741	Identifier	j		5190717	1					
ANR	5190742	IdentifierDecl	i = 0		5190717	3					
ANR	5190743	IdentifierDeclType	int		5190717	0					
ANR	5190744	Identifier	i		5190717	1					
ANR	5190745	AssignmentExpression	i = 0		5190717	2		=			
ANR	5190746	Identifier	i		5190717	0					
ANR	5190747	PrimaryExpression	0		5190717	1					
ANR	5190748	ForStatement	for ( right = qrsize - 1 ; right >= 1 ; right -= 2 )		5190717	2					
ANR	5190749	ForInit	right = qrsize - 1 ;	779:6:29607:29625	5190717	0	True				
ANR	5190750	AssignmentExpression	right = qrsize - 1		5190717	0		=			
ANR	5190751	Identifier	right		5190717	0					
ANR	5190752	AdditiveExpression	qrsize - 1		5190717	1		-			
ANR	5190753	Identifier	qrsize		5190717	0					
ANR	5190754	PrimaryExpression	1		5190717	1					
ANR	5190755	Condition	right >= 1	779:26:29627:29636	5190717	1	True				
ANR	5190756	RelationalExpression	right >= 1		5190717	0		>=			
ANR	5190757	Identifier	right		5190717	0					
ANR	5190758	PrimaryExpression	1		5190717	1					
ANR	5190759	AssignmentExpression	right -= 2	779:38:29639:29648	5190717	2	True	-=			
ANR	5190760	Identifier	right		5190717	0					
ANR	5190761	PrimaryExpression	2		5190717	1					
ANR	5190762	CompoundStatement		5:50:177:177	5190717	3					
ANR	5190763	IfStatement	if ( right == 6 )		5190717	0					
ANR	5190764	Condition	right == 6	780:6:29704:29713	5190717	0	True				
ANR	5190765	EqualityExpression	right == 6		5190717	0		==			
ANR	5190766	Identifier	right		5190717	0					
ANR	5190767	PrimaryExpression	6		5190717	1					
ANR	5190768	CompoundStatement		6:18:242:242	5190717	1					
ANR	5190769	ExpressionStatement	right = 5	781:3:29721:29730	5190717	0	True				
ANR	5190770	AssignmentExpression	right = 5		5190717	0		=			
ANR	5190771	Identifier	right		5190717	0					
ANR	5190772	PrimaryExpression	5		5190717	1					
ANR	5190773	ForStatement	for ( vert = 0 ; vert < qrsize ; vert ++ )		5190717	1					
ANR	5190774	ForInit	vert = 0 ;	783:7:29743:29751	5190717	0	True				
ANR	5190775	AssignmentExpression	vert = 0		5190717	0		=			
ANR	5190776	Identifier	vert		5190717	0					
ANR	5190777	PrimaryExpression	0		5190717	1					
ANR	5190778	Condition	vert < qrsize	783:17:29753:29765	5190717	1	True				
ANR	5190779	RelationalExpression	vert < qrsize		5190717	0		<			
ANR	5190780	Identifier	vert		5190717	0					
ANR	5190781	Identifier	qrsize		5190717	1					
ANR	5190782	PostIncDecOperationExpression	vert ++	783:32:29768:29773	5190717	2	True				
ANR	5190783	Identifier	vert		5190717	0					
ANR	5190784	IncDec	++		5190717	1					
ANR	5190785	CompoundStatement		9:40:302:302	5190717	3					
ANR	5190786	ForStatement	for ( j = 0 ; j < 2 ; j ++ )		5190717	0					
ANR	5190787	ForInit	j = 0 ;	784:8:29806:29811	5190717	0	True				
ANR	5190788	AssignmentExpression	j = 0		5190717	0		=			
ANR	5190789	Identifier	j		5190717	0					
ANR	5190790	PrimaryExpression	0		5190717	1					
ANR	5190791	Condition	j < 2	784:15:29813:29817	5190717	1	True				
ANR	5190792	RelationalExpression	j < 2		5190717	0		<			
ANR	5190793	Identifier	j		5190717	0					
ANR	5190794	PrimaryExpression	2		5190717	1					
ANR	5190795	PostIncDecOperationExpression	j ++	784:22:29820:29822	5190717	2	True				
ANR	5190796	Identifier	j		5190717	0					
ANR	5190797	IncDec	++		5190717	1					
ANR	5190798	CompoundStatement		13:4:445:484	5190717	3					
ANR	5190799	IdentifierDeclStatement	int x = right - j ;	785:4:29831:29848	5190717	0	True				
ANR	5190800	IdentifierDecl	x = right - j		5190717	0					
ANR	5190801	IdentifierDeclType	int		5190717	0					
ANR	5190802	Identifier	x		5190717	1					
ANR	5190803	AssignmentExpression	x = right - j		5190717	2		=			
ANR	5190804	Identifier	x		5190717	0					
ANR	5190805	AdditiveExpression	right - j		5190717	1		-			
ANR	5190806	Identifier	right		5190717	0					
ANR	5190807	Identifier	j		5190717	1					
ANR	5190808	IdentifierDeclStatement	bool upward = ( ( right + 1 ) & 2 ) == 0 ;	786:4:29877:29913	5190717	1	True				
ANR	5190809	IdentifierDecl	upward = ( ( right + 1 ) & 2 ) == 0		5190717	0					
ANR	5190810	IdentifierDeclType	bool		5190717	0					
ANR	5190811	Identifier	upward		5190717	1					
ANR	5190812	AssignmentExpression	upward = ( ( right + 1 ) & 2 ) == 0		5190717	2		=			
ANR	5190813	Identifier	upward		5190717	0					
ANR	5190814	EqualityExpression	( ( right + 1 ) & 2 ) == 0		5190717	1		==			
ANR	5190815	BitAndExpression	( right + 1 ) & 2		5190717	0		&			
ANR	5190816	AdditiveExpression	right + 1		5190717	0		+			
ANR	5190817	Identifier	right		5190717	0					
ANR	5190818	PrimaryExpression	1		5190717	1					
ANR	5190819	PrimaryExpression	2		5190717	1					
ANR	5190820	PrimaryExpression	0		5190717	1					
ANR	5190821	IdentifierDeclStatement	int y = upward ? qrsize - 1 - vert : vert ;	787:4:29919:29958	5190717	2	True				
ANR	5190822	IdentifierDecl	y = upward ? qrsize - 1 - vert : vert		5190717	0					
ANR	5190823	IdentifierDeclType	int		5190717	0					
ANR	5190824	Identifier	y		5190717	1					
ANR	5190825	AssignmentExpression	y = upward ? qrsize - 1 - vert : vert		5190717	2		=			
ANR	5190826	Identifier	y		5190717	0					
ANR	5190827	ConditionalExpression	upward ? qrsize - 1 - vert : vert		5190717	1					
ANR	5190828	Condition	upward		5190717	0					
ANR	5190829	Identifier	upward		5190717	0					
ANR	5190830	AdditiveExpression	qrsize - 1 - vert		5190717	1		-			
ANR	5190831	Identifier	qrsize		5190717	0					
ANR	5190832	AdditiveExpression	1 - vert		5190717	1		-			
ANR	5190833	PrimaryExpression	1		5190717	0					
ANR	5190834	Identifier	vert		5190717	1					
ANR	5190835	Identifier	vert		5190717	2					
ANR	5190836	IfStatement	"if ( ! getModule ( qrcode , x , y ) && i < dataLen * 8 )"		5190717	3					
ANR	5190837	Condition	"! getModule ( qrcode , x , y ) && i < dataLen * 8"	788:8:29991:30034	5190717	0	True				
ANR	5190838	AndExpression	"! getModule ( qrcode , x , y ) && i < dataLen * 8"		5190717	0		&&			
ANR	5190839	UnaryOperationExpression	"! getModule ( qrcode , x , y )"		5190717	0					
ANR	5190840	UnaryOperator	!		5190717	0					
ANR	5190841	CallExpression	"getModule ( qrcode , x , y )"		5190717	1					
ANR	5190842	Callee	getModule		5190717	0					
ANR	5190843	Identifier	getModule		5190717	0					
ANR	5190844	ArgumentList	qrcode		5190717	1					
ANR	5190845	Argument	qrcode		5190717	0					
ANR	5190846	Identifier	qrcode		5190717	0					
ANR	5190847	Argument	x		5190717	1					
ANR	5190848	Identifier	x		5190717	0					
ANR	5190849	Argument	y		5190717	2					
ANR	5190850	Identifier	y		5190717	0					
ANR	5190851	RelationalExpression	i < dataLen * 8		5190717	1		<			
ANR	5190852	Identifier	i		5190717	0					
ANR	5190853	MultiplicativeExpression	dataLen * 8		5190717	1		*			
ANR	5190854	Identifier	dataLen		5190717	0					
ANR	5190855	PrimaryExpression	8		5190717	1					
ANR	5190856	CompoundStatement		15:5:570:625	5190717	1					
ANR	5190857	IdentifierDeclStatement	bool black = ( ( data [ i >> 3 ] >> ( 7 - ( i & 7 ) ) ) & 1 ) != 0 ;	789:5:30044:30099	5190717	0	True				
ANR	5190858	IdentifierDecl	black = ( ( data [ i >> 3 ] >> ( 7 - ( i & 7 ) ) ) & 1 ) != 0		5190717	0					
ANR	5190859	IdentifierDeclType	bool		5190717	0					
ANR	5190860	Identifier	black		5190717	1					
ANR	5190861	AssignmentExpression	black = ( ( data [ i >> 3 ] >> ( 7 - ( i & 7 ) ) ) & 1 ) != 0		5190717	2		=			
ANR	5190862	Identifier	black		5190717	0					
ANR	5190863	EqualityExpression	( ( data [ i >> 3 ] >> ( 7 - ( i & 7 ) ) ) & 1 ) != 0		5190717	1		!=			
ANR	5190864	BitAndExpression	( data [ i >> 3 ] >> ( 7 - ( i & 7 ) ) ) & 1		5190717	0		&			
ANR	5190865	ShiftExpression	data [ i >> 3 ] >> ( 7 - ( i & 7 ) )		5190717	0		>>			
ANR	5190866	ArrayIndexing	data [ i >> 3 ]		5190717	0					
ANR	5190867	Identifier	data		5190717	0					
ANR	5190868	ShiftExpression	i >> 3		5190717	1		>>			
ANR	5190869	Identifier	i		5190717	0					
ANR	5190870	PrimaryExpression	3		5190717	1					
ANR	5190871	AdditiveExpression	7 - ( i & 7 )		5190717	1		-			
ANR	5190872	PrimaryExpression	7		5190717	0					
ANR	5190873	BitAndExpression	i & 7		5190717	1		&			
ANR	5190874	Identifier	i		5190717	0					
ANR	5190875	PrimaryExpression	7		5190717	1					
ANR	5190876	PrimaryExpression	1		5190717	1					
ANR	5190877	PrimaryExpression	0		5190717	1					
ANR	5190878	ExpressionStatement	"setModule ( qrcode , x , y , black )"	790:5:30106:30137	5190717	1	True				
ANR	5190879	CallExpression	"setModule ( qrcode , x , y , black )"		5190717	0					
ANR	5190880	Callee	setModule		5190717	0					
ANR	5190881	Identifier	setModule		5190717	0					
ANR	5190882	ArgumentList	qrcode		5190717	1					
ANR	5190883	Argument	qrcode		5190717	0					
ANR	5190884	Identifier	qrcode		5190717	0					
ANR	5190885	Argument	x		5190717	1					
ANR	5190886	Identifier	x		5190717	0					
ANR	5190887	Argument	y		5190717	2					
ANR	5190888	Identifier	y		5190717	0					
ANR	5190889	Argument	black		5190717	3					
ANR	5190890	Identifier	black		5190717	0					
ANR	5190891	ExpressionStatement	i ++	791:5:30144:30147	5190717	2	True				
ANR	5190892	PostIncDecOperationExpression	i ++		5190717	0					
ANR	5190893	Identifier	i		5190717	0					
ANR	5190894	IncDec	++		5190717	1					
ANR	5190895	ReturnStatement	return i == dataLen * 8 ;	798:1:30303:30326	5190717	3	True				
ANR	5190896	EqualityExpression	i == dataLen * 8		5190717	0		==			
ANR	5190897	Identifier	i		5190717	0					
ANR	5190898	MultiplicativeExpression	dataLen * 8		5190717	1		*			
ANR	5190899	Identifier	dataLen		5190717	0					
ANR	5190900	PrimaryExpression	8		5190717	1					
ANR	5190901	ReturnType	static bool		5190717	1					
ANR	5190902	Identifier	drawCodewords		5190717	2					
ANR	5190903	ParameterList	"const ut8 data [ ] , int dataLen , ut8 qrcode [ ]"		5190717	3					
ANR	5190904	Parameter	const ut8 data [ ]	775:26:29428:29443	5190717	0	True				
ANR	5190905	ParameterType	const ut8 [ ]		5190717	0					
ANR	5190906	Identifier	data		5190717	1					
ANR	5190907	Parameter	int dataLen	775:44:29446:29456	5190717	1	True				
ANR	5190908	ParameterType	int		5190717	0					
ANR	5190909	Identifier	dataLen		5190717	1					
ANR	5190910	Parameter	ut8 qrcode [ ]	775:57:29459:29470	5190717	2	True				
ANR	5190911	ParameterType	ut8 [ ]		5190717	0					
ANR	5190912	Identifier	qrcode		5190717	1					
ANR	5190913	CFGEntryNode	ENTRY		5190717		True				
ANR	5190914	CFGExitNode	EXIT		5190717		True				
ANR	5190915	Symbol	getModule		5190717						
ANR	5190916	Symbol	data		5190717						
ANR	5190917	Symbol	qrcode		5190717						
ANR	5190918	Symbol	vert		5190717						
ANR	5190919	Symbol	black		5190717						
ANR	5190920	Symbol	qrcodegen_getSize		5190717						
ANR	5190921	Symbol	i		5190717						
ANR	5190922	Symbol	j		5190717						
ANR	5190923	Symbol	right		5190717						
ANR	5190924	Symbol	qrsize		5190717						
ANR	5190925	Symbol	dataLen		5190717						
ANR	5190926	Symbol	* i		5190717						
ANR	5190927	Symbol	x		5190717						
ANR	5190928	Symbol	y		5190717						
ANR	5190929	Symbol	* data		5190717						
ANR	5190930	Symbol	upward		5190717						
ANR	5190931	Function	applyMask	806:0:30713:31614							
ANR	5190932	FunctionDef	"applyMask (const ut8 functionModules [ ] , ut8 qrcode [ ] , enum qrcodegen_Mask mask)"		5190931	0					
ANR	5190933	CompoundStatement		806:91:30804:31614	5190931	0					
ANR	5190934	IfStatement	if ( mask < 0 || mask > 7 )		5190931	0					
ANR	5190935	Condition	mask < 0 || mask > 7	807:5:30811:30830	5190931	0	True				
ANR	5190936	OrExpression	mask < 0 || mask > 7		5190931	0		||			
ANR	5190937	RelationalExpression	mask < 0		5190931	0		<			
ANR	5190938	Identifier	mask		5190931	0					
ANR	5190939	PrimaryExpression	0		5190931	1					
ANR	5190940	RelationalExpression	mask > 7		5190931	1		>			
ANR	5190941	Identifier	mask		5190931	0					
ANR	5190942	PrimaryExpression	7		5190931	1					
ANR	5190943	CompoundStatement		2:27:28:28	5190931	1					
ANR	5190944	ReturnStatement	return false ;	808:2:30837:30849	5190931	0	True				
ANR	5190945	Identifier	false		5190931	0					
ANR	5190946	IdentifierDeclStatement	"int x , y , qrsize = qrcodegen_getSize ( qrcode ) ;"	810:1:30855:30900	5190931	1	True				
ANR	5190947	IdentifierDecl	x		5190931	0					
ANR	5190948	IdentifierDeclType	int		5190931	0					
ANR	5190949	Identifier	x		5190931	1					
ANR	5190950	IdentifierDecl	y		5190931	1					
ANR	5190951	IdentifierDeclType	int		5190931	0					
ANR	5190952	Identifier	y		5190931	1					
ANR	5190953	IdentifierDecl	qrsize = qrcodegen_getSize ( qrcode )		5190931	2					
ANR	5190954	IdentifierDeclType	int		5190931	0					
ANR	5190955	Identifier	qrsize		5190931	1					
ANR	5190956	AssignmentExpression	qrsize = qrcodegen_getSize ( qrcode )		5190931	2		=			
ANR	5190957	Identifier	qrsize		5190931	0					
ANR	5190958	CallExpression	qrcodegen_getSize ( qrcode )		5190931	1					
ANR	5190959	Callee	qrcodegen_getSize		5190931	0					
ANR	5190960	Identifier	qrcodegen_getSize		5190931	0					
ANR	5190961	ArgumentList	qrcode		5190931	1					
ANR	5190962	Argument	qrcode		5190931	0					
ANR	5190963	Identifier	qrcode		5190931	0					
ANR	5190964	ForStatement	for ( y = 0 ; y < qrsize ; y ++ )		5190931	2					
ANR	5190965	ForInit	y = 0 ;	811:6:30908:30913	5190931	0	True				
ANR	5190966	AssignmentExpression	y = 0		5190931	0		=			
ANR	5190967	Identifier	y		5190931	0					
ANR	5190968	PrimaryExpression	0		5190931	1					
ANR	5190969	Condition	y < qrsize	811:13:30915:30924	5190931	1	True				
ANR	5190970	RelationalExpression	y < qrsize		5190931	0		<			
ANR	5190971	Identifier	y		5190931	0					
ANR	5190972	Identifier	qrsize		5190931	1					
ANR	5190973	PostIncDecOperationExpression	y ++	811:25:30927:30929	5190931	2	True				
ANR	5190974	Identifier	y		5190931	0					
ANR	5190975	IncDec	++		5190931	1					
ANR	5190976	CompoundStatement		6:30:127:127	5190931	3					
ANR	5190977	ForStatement	for ( x = 0 ; x < qrsize ; x ++ )		5190931	0					
ANR	5190978	ForInit	x = 0 ;	812:7:30941:30946	5190931	0	True				
ANR	5190979	AssignmentExpression	x = 0		5190931	0		=			
ANR	5190980	Identifier	x		5190931	0					
ANR	5190981	PrimaryExpression	0		5190931	1					
ANR	5190982	Condition	x < qrsize	812:14:30948:30957	5190931	1	True				
ANR	5190983	RelationalExpression	x < qrsize		5190931	0		<			
ANR	5190984	Identifier	x		5190931	0					
ANR	5190985	Identifier	qrsize		5190931	1					
ANR	5190986	PostIncDecOperationExpression	x ++	812:26:30960:30962	5190931	2	True				
ANR	5190987	Identifier	x		5190931	0					
ANR	5190988	IncDec	++		5190931	1					
ANR	5190989	CompoundStatement		23:3:708:743	5190931	3					
ANR	5190990	IfStatement	"if ( getModule ( functionModules , x , y ) )"		5190931	0					
ANR	5190991	Condition	"getModule ( functionModules , x , y )"	813:7:30974:31006	5190931	0	True				
ANR	5190992	CallExpression	"getModule ( functionModules , x , y )"		5190931	0					
ANR	5190993	Callee	getModule		5190931	0					
ANR	5190994	Identifier	getModule		5190931	0					
ANR	5190995	ArgumentList	functionModules		5190931	1					
ANR	5190996	Argument	functionModules		5190931	0					
ANR	5190997	Identifier	functionModules		5190931	0					
ANR	5190998	Argument	x		5190931	1					
ANR	5190999	Identifier	x		5190931	0					
ANR	5191000	Argument	y		5190931	2					
ANR	5191001	Identifier	y		5190931	0					
ANR	5191002	CompoundStatement		8:42:204:204	5190931	1					
ANR	5191003	ContinueStatement	continue ;	814:4:31015:31023	5190931	0	True				
ANR	5191004	IdentifierDeclStatement	bool invert ;	816:3:31033:31044	5190931	1	True				
ANR	5191005	IdentifierDecl	invert		5190931	0					
ANR	5191006	IdentifierDeclType	bool		5190931	0					
ANR	5191007	Identifier	invert		5190931	1					
ANR	5191008	SwitchStatement	switch ( ( int ) mask )		5190931	2					
ANR	5191009	Condition	( int ) mask	817:11:31057:31066	5190931	0	True				
ANR	5191010	CastExpression	( int ) mask		5190931	0					
ANR	5191011	CastTarget	int		5190931	0					
ANR	5191012	Identifier	mask		5190931	1					
ANR	5191013	CompoundStatement		12:23:264:264	5190931	1					
ANR	5191014	Label	case 0 :	818:3:31074:31080	5190931	0	True				
ANR	5191015	ExpressionStatement	invert = ( x + y ) % 2 == 0	818:12:31083:31108	5190931	1	True				
ANR	5191016	AssignmentExpression	invert = ( x + y ) % 2 == 0		5190931	0		=			
ANR	5191017	Identifier	invert		5190931	0					
ANR	5191018	EqualityExpression	( x + y ) % 2 == 0		5190931	1		==			
ANR	5191019	MultiplicativeExpression	( x + y ) % 2		5190931	0		%			
ANR	5191020	AdditiveExpression	x + y		5190931	0		+			
ANR	5191021	Identifier	x		5190931	0					
ANR	5191022	Identifier	y		5190931	1					
ANR	5191023	PrimaryExpression	2		5190931	1					
ANR	5191024	PrimaryExpression	0		5190931	1					
ANR	5191025	BreakStatement	break ;	818:39:31110:31115	5190931	2	True				
ANR	5191026	Label	case 1 :	819:3:31120:31126	5190931	3	True				
ANR	5191027	ExpressionStatement	invert = y % 2 == 0	819:12:31129:31148	5190931	4	True				
ANR	5191028	AssignmentExpression	invert = y % 2 == 0		5190931	0		=			
ANR	5191029	Identifier	invert		5190931	0					
ANR	5191030	EqualityExpression	y % 2 == 0		5190931	1		==			
ANR	5191031	MultiplicativeExpression	y % 2		5190931	0		%			
ANR	5191032	Identifier	y		5190931	0					
ANR	5191033	PrimaryExpression	2		5190931	1					
ANR	5191034	PrimaryExpression	0		5190931	1					
ANR	5191035	BreakStatement	break ;	819:33:31150:31155	5190931	5	True				
ANR	5191036	Label	case 2 :	820:3:31160:31166	5190931	6	True				
ANR	5191037	ExpressionStatement	invert = x % 3 == 0	820:12:31169:31188	5190931	7	True				
ANR	5191038	AssignmentExpression	invert = x % 3 == 0		5190931	0		=			
ANR	5191039	Identifier	invert		5190931	0					
ANR	5191040	EqualityExpression	x % 3 == 0		5190931	1		==			
ANR	5191041	MultiplicativeExpression	x % 3		5190931	0		%			
ANR	5191042	Identifier	x		5190931	0					
ANR	5191043	PrimaryExpression	3		5190931	1					
ANR	5191044	PrimaryExpression	0		5190931	1					
ANR	5191045	BreakStatement	break ;	820:33:31190:31195	5190931	8	True				
ANR	5191046	Label	case 3 :	821:3:31200:31206	5190931	9	True				
ANR	5191047	ExpressionStatement	invert = ( x + y ) % 3 == 0	821:12:31209:31234	5190931	10	True				
ANR	5191048	AssignmentExpression	invert = ( x + y ) % 3 == 0		5190931	0		=			
ANR	5191049	Identifier	invert		5190931	0					
ANR	5191050	EqualityExpression	( x + y ) % 3 == 0		5190931	1		==			
ANR	5191051	MultiplicativeExpression	( x + y ) % 3		5190931	0		%			
ANR	5191052	AdditiveExpression	x + y		5190931	0		+			
ANR	5191053	Identifier	x		5190931	0					
ANR	5191054	Identifier	y		5190931	1					
ANR	5191055	PrimaryExpression	3		5190931	1					
ANR	5191056	PrimaryExpression	0		5190931	1					
ANR	5191057	BreakStatement	break ;	821:39:31236:31241	5190931	11	True				
ANR	5191058	Label	case 4 :	822:3:31246:31252	5190931	12	True				
ANR	5191059	ExpressionStatement	invert = ( x / 3 + y / 2 ) % 2 == 0	822:12:31255:31288	5190931	13	True				
ANR	5191060	AssignmentExpression	invert = ( x / 3 + y / 2 ) % 2 == 0		5190931	0		=			
ANR	5191061	Identifier	invert		5190931	0					
ANR	5191062	EqualityExpression	( x / 3 + y / 2 ) % 2 == 0		5190931	1		==			
ANR	5191063	MultiplicativeExpression	( x / 3 + y / 2 ) % 2		5190931	0		%			
ANR	5191064	AdditiveExpression	x / 3 + y / 2		5190931	0		+			
ANR	5191065	MultiplicativeExpression	x / 3		5190931	0		/			
ANR	5191066	Identifier	x		5190931	0					
ANR	5191067	PrimaryExpression	3		5190931	1					
ANR	5191068	MultiplicativeExpression	y / 2		5190931	1		/			
ANR	5191069	Identifier	y		5190931	0					
ANR	5191070	PrimaryExpression	2		5190931	1					
ANR	5191071	PrimaryExpression	2		5190931	1					
ANR	5191072	PrimaryExpression	0		5190931	1					
ANR	5191073	BreakStatement	break ;	822:47:31290:31295	5190931	14	True				
ANR	5191074	Label	case 5 :	823:3:31300:31306	5190931	15	True				
ANR	5191075	ExpressionStatement	invert = x * y % 2 + x * y % 3 == 0	823:12:31309:31344	5190931	16	True				
ANR	5191076	AssignmentExpression	invert = x * y % 2 + x * y % 3 == 0		5190931	0		=			
ANR	5191077	Identifier	invert		5190931	0					
ANR	5191078	EqualityExpression	x * y % 2 + x * y % 3 == 0		5190931	1		==			
ANR	5191079	AdditiveExpression	x * y % 2 + x * y % 3		5190931	0		+			
ANR	5191080	MultiplicativeExpression	x * y % 2		5190931	0		*			
ANR	5191081	Identifier	x		5190931	0					
ANR	5191082	MultiplicativeExpression	y % 2		5190931	1		%			
ANR	5191083	Identifier	y		5190931	0					
ANR	5191084	PrimaryExpression	2		5190931	1					
ANR	5191085	MultiplicativeExpression	x * y % 3		5190931	1		*			
ANR	5191086	Identifier	x		5190931	0					
ANR	5191087	MultiplicativeExpression	y % 3		5190931	1		%			
ANR	5191088	Identifier	y		5190931	0					
ANR	5191089	PrimaryExpression	3		5190931	1					
ANR	5191090	PrimaryExpression	0		5190931	1					
ANR	5191091	BreakStatement	break ;	823:49:31346:31351	5190931	17	True				
ANR	5191092	Label	case 6 :	824:3:31356:31362	5190931	18	True				
ANR	5191093	ExpressionStatement	invert = ( x * y % 2 + x * y % 3 ) % 2 == 0	824:12:31365:31406	5190931	19	True				
ANR	5191094	AssignmentExpression	invert = ( x * y % 2 + x * y % 3 ) % 2 == 0		5190931	0		=			
ANR	5191095	Identifier	invert		5190931	0					
ANR	5191096	EqualityExpression	( x * y % 2 + x * y % 3 ) % 2 == 0		5190931	1		==			
ANR	5191097	MultiplicativeExpression	( x * y % 2 + x * y % 3 ) % 2		5190931	0		%			
ANR	5191098	AdditiveExpression	x * y % 2 + x * y % 3		5190931	0		+			
ANR	5191099	MultiplicativeExpression	x * y % 2		5190931	0		*			
ANR	5191100	Identifier	x		5190931	0					
ANR	5191101	MultiplicativeExpression	y % 2		5190931	1		%			
ANR	5191102	Identifier	y		5190931	0					
ANR	5191103	PrimaryExpression	2		5190931	1					
ANR	5191104	MultiplicativeExpression	x * y % 3		5190931	1		*			
ANR	5191105	Identifier	x		5190931	0					
ANR	5191106	MultiplicativeExpression	y % 3		5190931	1		%			
ANR	5191107	Identifier	y		5190931	0					
ANR	5191108	PrimaryExpression	3		5190931	1					
ANR	5191109	PrimaryExpression	2		5190931	1					
ANR	5191110	PrimaryExpression	0		5190931	1					
ANR	5191111	BreakStatement	break ;	824:55:31408:31413	5190931	20	True				
ANR	5191112	Label	case 7 :	825:3:31418:31424	5190931	21	True				
ANR	5191113	ExpressionStatement	invert = ( ( x + y ) % 2 + x * y % 3 ) % 2 == 0	825:12:31427:31470	5190931	22	True				
ANR	5191114	AssignmentExpression	invert = ( ( x + y ) % 2 + x * y % 3 ) % 2 == 0		5190931	0		=			
ANR	5191115	Identifier	invert		5190931	0					
ANR	5191116	EqualityExpression	( ( x + y ) % 2 + x * y % 3 ) % 2 == 0		5190931	1		==			
ANR	5191117	MultiplicativeExpression	( ( x + y ) % 2 + x * y % 3 ) % 2		5190931	0		%			
ANR	5191118	AdditiveExpression	( x + y ) % 2 + x * y % 3		5190931	0		+			
ANR	5191119	MultiplicativeExpression	( x + y ) % 2		5190931	0		%			
ANR	5191120	AdditiveExpression	x + y		5190931	0		+			
ANR	5191121	Identifier	x		5190931	0					
ANR	5191122	Identifier	y		5190931	1					
ANR	5191123	PrimaryExpression	2		5190931	1					
ANR	5191124	MultiplicativeExpression	x * y % 3		5190931	1		*			
ANR	5191125	Identifier	x		5190931	0					
ANR	5191126	MultiplicativeExpression	y % 3		5190931	1		%			
ANR	5191127	Identifier	y		5190931	0					
ANR	5191128	PrimaryExpression	3		5190931	1					
ANR	5191129	PrimaryExpression	2		5190931	1					
ANR	5191130	PrimaryExpression	0		5190931	1					
ANR	5191131	BreakStatement	break ;	825:57:31472:31477	5190931	23	True				
ANR	5191132	Label	default :	826:3:31482:31489	5190931	24	True				
ANR	5191133	Identifier	default		5190931	0					
ANR	5191134	ReturnStatement	return false ;	826:12:31491:31503	5190931	25	True				
ANR	5191135	Identifier	false		5190931	0					
ANR	5191136	IdentifierDeclStatement	"bool val = getModule ( qrcode , x , y ) ;"	828:3:31513:31548	5190931	3	True				
ANR	5191137	IdentifierDecl	"val = getModule ( qrcode , x , y )"		5190931	0					
ANR	5191138	IdentifierDeclType	bool		5190931	0					
ANR	5191139	Identifier	val		5190931	1					
ANR	5191140	AssignmentExpression	"val = getModule ( qrcode , x , y )"		5190931	2		=			
ANR	5191141	Identifier	val		5190931	0					
ANR	5191142	CallExpression	"getModule ( qrcode , x , y )"		5190931	1					
ANR	5191143	Callee	getModule		5190931	0					
ANR	5191144	Identifier	getModule		5190931	0					
ANR	5191145	ArgumentList	qrcode		5190931	1					
ANR	5191146	Argument	qrcode		5190931	0					
ANR	5191147	Identifier	qrcode		5190931	0					
ANR	5191148	Argument	x		5190931	1					
ANR	5191149	Identifier	x		5190931	0					
ANR	5191150	Argument	y		5190931	2					
ANR	5191151	Identifier	y		5190931	0					
ANR	5191152	ExpressionStatement	"setModule ( qrcode , x , y , val ^ invert )"	829:3:31553:31591	5190931	4	True				
ANR	5191153	CallExpression	"setModule ( qrcode , x , y , val ^ invert )"		5190931	0					
ANR	5191154	Callee	setModule		5190931	0					
ANR	5191155	Identifier	setModule		5190931	0					
ANR	5191156	ArgumentList	qrcode		5190931	1					
ANR	5191157	Argument	qrcode		5190931	0					
ANR	5191158	Identifier	qrcode		5190931	0					
ANR	5191159	Argument	x		5190931	1					
ANR	5191160	Identifier	x		5190931	0					
ANR	5191161	Argument	y		5190931	2					
ANR	5191162	Identifier	y		5190931	0					
ANR	5191163	Argument	val ^ invert		5190931	3					
ANR	5191164	ExclusiveOrExpression	val ^ invert		5190931	0		^			
ANR	5191165	Identifier	val		5190931	0					
ANR	5191166	Identifier	invert		5190931	1					
ANR	5191167	ReturnStatement	return true ;	832:1:31601:31612	5190931	3	True				
ANR	5191168	Identifier	true		5190931	0					
ANR	5191169	ReturnType	static bool		5190931	1					
ANR	5191170	Identifier	applyMask		5190931	2					
ANR	5191171	ParameterList	"const ut8 functionModules [ ] , ut8 qrcode [ ] , enum qrcodegen_Mask mask"		5190931	3					
ANR	5191172	Parameter	const ut8 functionModules [ ]	806:22:30735:30761	5190931	0	True				
ANR	5191173	ParameterType	const ut8 [ ]		5190931	0					
ANR	5191174	Identifier	functionModules		5190931	1					
ANR	5191175	Parameter	ut8 qrcode [ ]	806:51:30764:30775	5190931	1	True				
ANR	5191176	ParameterType	ut8 [ ]		5190931	0					
ANR	5191177	Identifier	qrcode		5190931	1					
ANR	5191178	Parameter	enum qrcodegen_Mask mask	806:65:30778:30801	5190931	2	True				
ANR	5191179	ParameterType	enum qrcodegen_Mask		5190931	0					
ANR	5191180	Identifier	mask		5190931	1					
ANR	5191181	CFGEntryNode	ENTRY		5190931		True				
ANR	5191182	CFGExitNode	EXIT		5190931		True				
ANR	5191183	Symbol	getModule		5190931						
ANR	5191184	Symbol	val		5190931						
ANR	5191185	Symbol	invert		5190931						
ANR	5191186	Symbol	qrcode		5190931						
ANR	5191187	Symbol	functionModules		5190931						
ANR	5191188	Symbol	false		5190931						
ANR	5191189	Symbol	x		5190931						
ANR	5191190	Symbol	true		5190931						
ANR	5191191	Symbol	qrcodegen_getSize		5190931						
ANR	5191192	Symbol	y		5190931						
ANR	5191193	Symbol	qrsize		5190931						
ANR	5191194	Symbol	mask		5190931						
ANR	5191195	Function	getPenaltyScore	838:0:31827:34074							
ANR	5191196	FunctionDef	getPenaltyScore (const ut8 qrcode [ ])		5191195	0					
ANR	5191197	CompoundStatement		838:48:31875:34074	5191195	0					
ANR	5191198	IdentifierDeclStatement	"int x , y , k , qrsize = qrcodegen_getSize ( qrcode ) ;"	839:1:31878:31926	5191195	0	True				
ANR	5191199	IdentifierDecl	x		5191195	0					
ANR	5191200	IdentifierDeclType	int		5191195	0					
ANR	5191201	Identifier	x		5191195	1					
ANR	5191202	IdentifierDecl	y		5191195	1					
ANR	5191203	IdentifierDeclType	int		5191195	0					
ANR	5191204	Identifier	y		5191195	1					
ANR	5191205	IdentifierDecl	k		5191195	2					
ANR	5191206	IdentifierDeclType	int		5191195	0					
ANR	5191207	Identifier	k		5191195	1					
ANR	5191208	IdentifierDecl	qrsize = qrcodegen_getSize ( qrcode )		5191195	3					
ANR	5191209	IdentifierDeclType	int		5191195	0					
ANR	5191210	Identifier	qrsize		5191195	1					
ANR	5191211	AssignmentExpression	qrsize = qrcodegen_getSize ( qrcode )		5191195	2		=			
ANR	5191212	Identifier	qrsize		5191195	0					
ANR	5191213	CallExpression	qrcodegen_getSize ( qrcode )		5191195	1					
ANR	5191214	Callee	qrcodegen_getSize		5191195	0					
ANR	5191215	Identifier	qrcodegen_getSize		5191195	0					
ANR	5191216	ArgumentList	qrcode		5191195	1					
ANR	5191217	Argument	qrcode		5191195	0					
ANR	5191218	Identifier	qrcode		5191195	0					
ANR	5191219	IdentifierDeclStatement	long result = 0 ;	840:1:31929:31944	5191195	1	True				
ANR	5191220	IdentifierDecl	result = 0		5191195	0					
ANR	5191221	IdentifierDeclType	long		5191195	0					
ANR	5191222	Identifier	result		5191195	1					
ANR	5191223	AssignmentExpression	result = 0		5191195	2		=			
ANR	5191224	Identifier	result		5191195	0					
ANR	5191225	PrimaryExpression	0		5191195	1					
ANR	5191226	ForStatement	for ( y = 0 ; y < qrsize ; y ++ )		5191195	2					
ANR	5191227	ForInit	y = 0 ;	843:6:31999:32004	5191195	0	True				
ANR	5191228	AssignmentExpression	y = 0		5191195	0		=			
ANR	5191229	Identifier	y		5191195	0					
ANR	5191230	PrimaryExpression	0		5191195	1					
ANR	5191231	Condition	y < qrsize	843:13:32006:32015	5191195	1	True				
ANR	5191232	RelationalExpression	y < qrsize		5191195	0		<			
ANR	5191233	Identifier	y		5191195	0					
ANR	5191234	Identifier	qrsize		5191195	1					
ANR	5191235	PostIncDecOperationExpression	y ++	843:25:32018:32020	5191195	2	True				
ANR	5191236	Identifier	y		5191195	0					
ANR	5191237	IncDec	++		5191195	1					
ANR	5191238	CompoundStatement		8:2:166:178	5191195	3					
ANR	5191239	IdentifierDeclStatement	bool colorX ;	844:2:32027:32038	5191195	0	True				
ANR	5191240	IdentifierDecl	colorX		5191195	0					
ANR	5191241	IdentifierDeclType	bool		5191195	0					
ANR	5191242	Identifier	colorX		5191195	1					
ANR	5191243	IdentifierDeclStatement	int runX = 0 ;	845:2:32042:32054	5191195	1	True				
ANR	5191244	IdentifierDecl	runX = 0		5191195	0					
ANR	5191245	IdentifierDeclType	int		5191195	0					
ANR	5191246	Identifier	runX		5191195	1					
ANR	5191247	AssignmentExpression	runX = 0		5191195	2		=			
ANR	5191248	Identifier	runX		5191195	0					
ANR	5191249	PrimaryExpression	0		5191195	1					
ANR	5191250	ForStatement	for ( x = 0 ; x < qrsize ; x ++ )		5191195	2					
ANR	5191251	ForInit	x = 0 ;	846:7:32063:32068	5191195	0	True				
ANR	5191252	AssignmentExpression	x = 0		5191195	0		=			
ANR	5191253	Identifier	x		5191195	0					
ANR	5191254	PrimaryExpression	0		5191195	1					
ANR	5191255	Condition	x < qrsize	846:14:32070:32079	5191195	1	True				
ANR	5191256	RelationalExpression	x < qrsize		5191195	0		<			
ANR	5191257	Identifier	x		5191195	0					
ANR	5191258	Identifier	qrsize		5191195	1					
ANR	5191259	PostIncDecOperationExpression	x ++	846:26:32082:32084	5191195	2	True				
ANR	5191260	Identifier	x		5191195	0					
ANR	5191261	IncDec	++		5191195	1					
ANR	5191262	CompoundStatement		9:31:211:211	5191195	3					
ANR	5191263	IfStatement	"if ( x == 0 || getModule ( qrcode , x , y ) != colorX )"		5191195	0					
ANR	5191264	Condition	"x == 0 || getModule ( qrcode , x , y ) != colorX"	847:7:32096:32139	5191195	0	True				
ANR	5191265	OrExpression	"x == 0 || getModule ( qrcode , x , y ) != colorX"		5191195	0		||			
ANR	5191266	EqualityExpression	x == 0		5191195	0		==			
ANR	5191267	Identifier	x		5191195	0					
ANR	5191268	PrimaryExpression	0		5191195	1					
ANR	5191269	EqualityExpression	"getModule ( qrcode , x , y ) != colorX"		5191195	1		!=			
ANR	5191270	CallExpression	"getModule ( qrcode , x , y )"		5191195	0					
ANR	5191271	Callee	getModule		5191195	0					
ANR	5191272	Identifier	getModule		5191195	0					
ANR	5191273	ArgumentList	qrcode		5191195	1					
ANR	5191274	Argument	qrcode		5191195	0					
ANR	5191275	Identifier	qrcode		5191195	0					
ANR	5191276	Argument	x		5191195	1					
ANR	5191277	Identifier	x		5191195	0					
ANR	5191278	Argument	y		5191195	2					
ANR	5191279	Identifier	y		5191195	0					
ANR	5191280	Identifier	colorX		5191195	1					
ANR	5191281	CompoundStatement		10:53:266:266	5191195	1					
ANR	5191282	ExpressionStatement	"colorX = getModule ( qrcode , x , y )"	848:4:32148:32181	5191195	0	True				
ANR	5191283	AssignmentExpression	"colorX = getModule ( qrcode , x , y )"		5191195	0		=			
ANR	5191284	Identifier	colorX		5191195	0					
ANR	5191285	CallExpression	"getModule ( qrcode , x , y )"		5191195	1					
ANR	5191286	Callee	getModule		5191195	0					
ANR	5191287	Identifier	getModule		5191195	0					
ANR	5191288	ArgumentList	qrcode		5191195	1					
ANR	5191289	Argument	qrcode		5191195	0					
ANR	5191290	Identifier	qrcode		5191195	0					
ANR	5191291	Argument	x		5191195	1					
ANR	5191292	Identifier	x		5191195	0					
ANR	5191293	Argument	y		5191195	2					
ANR	5191294	Identifier	y		5191195	0					
ANR	5191295	ExpressionStatement	runX = 1	849:4:32187:32195	5191195	1	True				
ANR	5191296	AssignmentExpression	runX = 1		5191195	0		=			
ANR	5191297	Identifier	runX		5191195	0					
ANR	5191298	PrimaryExpression	1		5191195	1					
ANR	5191299	ElseStatement	else		5191195	0					
ANR	5191300	CompoundStatement		13:10:331:331	5191195	0					
ANR	5191301	ExpressionStatement	runX ++	851:4:32213:32219	5191195	0	True				
ANR	5191302	PostIncDecOperationExpression	runX ++		5191195	0					
ANR	5191303	Identifier	runX		5191195	0					
ANR	5191304	IncDec	++		5191195	1					
ANR	5191305	IfStatement	if ( runX == 5 )		5191195	1					
ANR	5191306	Condition	runX == 5	852:8:32229:32237	5191195	0	True				
ANR	5191307	EqualityExpression	runX == 5		5191195	0		==			
ANR	5191308	Identifier	runX		5191195	0					
ANR	5191309	PrimaryExpression	5		5191195	1					
ANR	5191310	CompoundStatement		15:19:364:364	5191195	1					
ANR	5191311	ExpressionStatement	result += PENALTY_N1	853:5:32247:32267	5191195	0	True				
ANR	5191312	AssignmentExpression	result += PENALTY_N1		5191195	0		+=			
ANR	5191313	Identifier	result		5191195	0					
ANR	5191314	Identifier	PENALTY_N1		5191195	1					
ANR	5191315	ElseStatement	else		5191195	0					
ANR	5191316	IfStatement	if ( runX > 5 )		5191195	0					
ANR	5191317	Condition	runX > 5	854:15:32284:32291	5191195	0	True				
ANR	5191318	RelationalExpression	runX > 5		5191195	0		>			
ANR	5191319	Identifier	runX		5191195	0					
ANR	5191320	PrimaryExpression	5		5191195	1					
ANR	5191321	CompoundStatement		17:25:418:418	5191195	1					
ANR	5191322	ExpressionStatement	result ++	855:5:32301:32309	5191195	0	True				
ANR	5191323	PostIncDecOperationExpression	result ++		5191195	0					
ANR	5191324	Identifier	result		5191195	0					
ANR	5191325	IncDec	++		5191195	1					
ANR	5191326	ForStatement	for ( x = 0 ; x < qrsize ; x ++ )		5191195	3					
ANR	5191327	ForInit	x = 0 ;	861:6:32384:32389	5191195	0	True				
ANR	5191328	AssignmentExpression	x = 0		5191195	0		=			
ANR	5191329	Identifier	x		5191195	0					
ANR	5191330	PrimaryExpression	0		5191195	1					
ANR	5191331	Condition	x < qrsize	861:13:32391:32400	5191195	1	True				
ANR	5191332	RelationalExpression	x < qrsize		5191195	0		<			
ANR	5191333	Identifier	x		5191195	0					
ANR	5191334	Identifier	qrsize		5191195	1					
ANR	5191335	PostIncDecOperationExpression	x ++	861:25:32403:32405	5191195	2	True				
ANR	5191336	Identifier	x		5191195	0					
ANR	5191337	IncDec	++		5191195	1					
ANR	5191338	CompoundStatement		26:2:551:563	5191195	3					
ANR	5191339	IdentifierDeclStatement	bool colorY ;	862:2:32412:32423	5191195	0	True				
ANR	5191340	IdentifierDecl	colorY		5191195	0					
ANR	5191341	IdentifierDeclType	bool		5191195	0					
ANR	5191342	Identifier	colorY		5191195	1					
ANR	5191343	IdentifierDeclStatement	int runY = 0 ;	863:2:32427:32439	5191195	1	True				
ANR	5191344	IdentifierDecl	runY = 0		5191195	0					
ANR	5191345	IdentifierDeclType	int		5191195	0					
ANR	5191346	Identifier	runY		5191195	1					
ANR	5191347	AssignmentExpression	runY = 0		5191195	2		=			
ANR	5191348	Identifier	runY		5191195	0					
ANR	5191349	PrimaryExpression	0		5191195	1					
ANR	5191350	ForStatement	for ( y = 0 ; y < qrsize ; y ++ )		5191195	2					
ANR	5191351	ForInit	y = 0 ;	864:7:32448:32453	5191195	0	True				
ANR	5191352	AssignmentExpression	y = 0		5191195	0		=			
ANR	5191353	Identifier	y		5191195	0					
ANR	5191354	PrimaryExpression	0		5191195	1					
ANR	5191355	Condition	y < qrsize	864:14:32455:32464	5191195	1	True				
ANR	5191356	RelationalExpression	y < qrsize		5191195	0		<			
ANR	5191357	Identifier	y		5191195	0					
ANR	5191358	Identifier	qrsize		5191195	1					
ANR	5191359	PostIncDecOperationExpression	y ++	864:26:32467:32469	5191195	2	True				
ANR	5191360	Identifier	y		5191195	0					
ANR	5191361	IncDec	++		5191195	1					
ANR	5191362	CompoundStatement		27:31:596:596	5191195	3					
ANR	5191363	IfStatement	"if ( y == 0 || getModule ( qrcode , x , y ) != colorY )"		5191195	0					
ANR	5191364	Condition	"y == 0 || getModule ( qrcode , x , y ) != colorY"	865:7:32481:32524	5191195	0	True				
ANR	5191365	OrExpression	"y == 0 || getModule ( qrcode , x , y ) != colorY"		5191195	0		||			
ANR	5191366	EqualityExpression	y == 0		5191195	0		==			
ANR	5191367	Identifier	y		5191195	0					
ANR	5191368	PrimaryExpression	0		5191195	1					
ANR	5191369	EqualityExpression	"getModule ( qrcode , x , y ) != colorY"		5191195	1		!=			
ANR	5191370	CallExpression	"getModule ( qrcode , x , y )"		5191195	0					
ANR	5191371	Callee	getModule		5191195	0					
ANR	5191372	Identifier	getModule		5191195	0					
ANR	5191373	ArgumentList	qrcode		5191195	1					
ANR	5191374	Argument	qrcode		5191195	0					
ANR	5191375	Identifier	qrcode		5191195	0					
ANR	5191376	Argument	x		5191195	1					
ANR	5191377	Identifier	x		5191195	0					
ANR	5191378	Argument	y		5191195	2					
ANR	5191379	Identifier	y		5191195	0					
ANR	5191380	Identifier	colorY		5191195	1					
ANR	5191381	CompoundStatement		28:53:651:651	5191195	1					
ANR	5191382	ExpressionStatement	"colorY = getModule ( qrcode , x , y )"	866:4:32533:32566	5191195	0	True				
ANR	5191383	AssignmentExpression	"colorY = getModule ( qrcode , x , y )"		5191195	0		=			
ANR	5191384	Identifier	colorY		5191195	0					
ANR	5191385	CallExpression	"getModule ( qrcode , x , y )"		5191195	1					
ANR	5191386	Callee	getModule		5191195	0					
ANR	5191387	Identifier	getModule		5191195	0					
ANR	5191388	ArgumentList	qrcode		5191195	1					
ANR	5191389	Argument	qrcode		5191195	0					
ANR	5191390	Identifier	qrcode		5191195	0					
ANR	5191391	Argument	x		5191195	1					
ANR	5191392	Identifier	x		5191195	0					
ANR	5191393	Argument	y		5191195	2					
ANR	5191394	Identifier	y		5191195	0					
ANR	5191395	ExpressionStatement	runY = 1	867:4:32572:32580	5191195	1	True				
ANR	5191396	AssignmentExpression	runY = 1		5191195	0		=			
ANR	5191397	Identifier	runY		5191195	0					
ANR	5191398	PrimaryExpression	1		5191195	1					
ANR	5191399	ElseStatement	else		5191195	0					
ANR	5191400	CompoundStatement		31:10:716:716	5191195	0					
ANR	5191401	ExpressionStatement	runY ++	869:4:32598:32604	5191195	0	True				
ANR	5191402	PostIncDecOperationExpression	runY ++		5191195	0					
ANR	5191403	Identifier	runY		5191195	0					
ANR	5191404	IncDec	++		5191195	1					
ANR	5191405	IfStatement	if ( runY == 5 )		5191195	1					
ANR	5191406	Condition	runY == 5	870:8:32614:32622	5191195	0	True				
ANR	5191407	EqualityExpression	runY == 5		5191195	0		==			
ANR	5191408	Identifier	runY		5191195	0					
ANR	5191409	PrimaryExpression	5		5191195	1					
ANR	5191410	CompoundStatement		33:19:749:749	5191195	1					
ANR	5191411	ExpressionStatement	result += PENALTY_N1	871:5:32632:32652	5191195	0	True				
ANR	5191412	AssignmentExpression	result += PENALTY_N1		5191195	0		+=			
ANR	5191413	Identifier	result		5191195	0					
ANR	5191414	Identifier	PENALTY_N1		5191195	1					
ANR	5191415	ElseStatement	else		5191195	0					
ANR	5191416	IfStatement	if ( runY > 5 )		5191195	0					
ANR	5191417	Condition	runY > 5	872:15:32669:32676	5191195	0	True				
ANR	5191418	RelationalExpression	runY > 5		5191195	0		>			
ANR	5191419	Identifier	runY		5191195	0					
ANR	5191420	PrimaryExpression	5		5191195	1					
ANR	5191421	CompoundStatement		35:25:803:803	5191195	1					
ANR	5191422	ExpressionStatement	result ++	873:5:32686:32694	5191195	0	True				
ANR	5191423	PostIncDecOperationExpression	result ++		5191195	0					
ANR	5191424	Identifier	result		5191195	0					
ANR	5191425	IncDec	++		5191195	1					
ANR	5191426	ForStatement	for ( y = 0 ; y < qrsize - 1 ; y ++ )		5191195	4					
ANR	5191427	ForInit	y = 0 ;	880:6:32765:32770	5191195	0	True				
ANR	5191428	AssignmentExpression	y = 0		5191195	0		=			
ANR	5191429	Identifier	y		5191195	0					
ANR	5191430	PrimaryExpression	0		5191195	1					
ANR	5191431	Condition	y < qrsize - 1	880:13:32772:32785	5191195	1	True				
ANR	5191432	RelationalExpression	y < qrsize - 1		5191195	0		<			
ANR	5191433	Identifier	y		5191195	0					
ANR	5191434	AdditiveExpression	qrsize - 1		5191195	1		-			
ANR	5191435	Identifier	qrsize		5191195	0					
ANR	5191436	PrimaryExpression	1		5191195	1					
ANR	5191437	PostIncDecOperationExpression	y ++	880:29:32788:32790	5191195	2	True				
ANR	5191438	Identifier	y		5191195	0					
ANR	5191439	IncDec	++		5191195	1					
ANR	5191440	CompoundStatement		43:34:917:917	5191195	3					
ANR	5191441	ForStatement	for ( x = 0 ; x < qrsize - 1 ; x ++ )		5191195	0					
ANR	5191442	ForInit	x = 0 ;	881:7:32802:32807	5191195	0	True				
ANR	5191443	AssignmentExpression	x = 0		5191195	0		=			
ANR	5191444	Identifier	x		5191195	0					
ANR	5191445	PrimaryExpression	0		5191195	1					
ANR	5191446	Condition	x < qrsize - 1	881:14:32809:32822	5191195	1	True				
ANR	5191447	RelationalExpression	x < qrsize - 1		5191195	0		<			
ANR	5191448	Identifier	x		5191195	0					
ANR	5191449	AdditiveExpression	qrsize - 1		5191195	1		-			
ANR	5191450	Identifier	qrsize		5191195	0					
ANR	5191451	PrimaryExpression	1		5191195	1					
ANR	5191452	PostIncDecOperationExpression	x ++	881:30:32825:32827	5191195	2	True				
ANR	5191453	Identifier	x		5191195	0					
ANR	5191454	IncDec	++		5191195	1					
ANR	5191455	CompoundStatement		45:3:959:996	5191195	3					
ANR	5191456	IdentifierDeclStatement	"bool color = getModule ( qrcode , x , y ) ;"	882:3:32835:32872	5191195	0	True				
ANR	5191457	IdentifierDecl	"color = getModule ( qrcode , x , y )"		5191195	0					
ANR	5191458	IdentifierDeclType	bool		5191195	0					
ANR	5191459	Identifier	color		5191195	1					
ANR	5191460	AssignmentExpression	"color = getModule ( qrcode , x , y )"		5191195	2		=			
ANR	5191461	Identifier	color		5191195	0					
ANR	5191462	CallExpression	"getModule ( qrcode , x , y )"		5191195	1					
ANR	5191463	Callee	getModule		5191195	0					
ANR	5191464	Identifier	getModule		5191195	0					
ANR	5191465	ArgumentList	qrcode		5191195	1					
ANR	5191466	Argument	qrcode		5191195	0					
ANR	5191467	Identifier	qrcode		5191195	0					
ANR	5191468	Argument	x		5191195	1					
ANR	5191469	Identifier	x		5191195	0					
ANR	5191470	Argument	y		5191195	2					
ANR	5191471	Identifier	y		5191195	0					
ANR	5191472	IfStatement	"if ( color == getModule ( qrcode , x + 1 , y ) && color == getModule ( qrcode , x , y + 1 ) && color == getModule ( qrcode , x + 1 , y + 1 ) )"		5191195	1					
ANR	5191473	Condition	"color == getModule ( qrcode , x + 1 , y ) && color == getModule ( qrcode , x , y + 1 ) && color == getModule ( qrcode , x + 1 , y + 1 )"	883:7:32881:33017	5191195	0	True				
ANR	5191474	AndExpression	"color == getModule ( qrcode , x + 1 , y ) && color == getModule ( qrcode , x , y + 1 ) && color == getModule ( qrcode , x + 1 , y + 1 )"		5191195	0		&&			
ANR	5191475	EqualityExpression	"color == getModule ( qrcode , x + 1 , y )"		5191195	0		==			
ANR	5191476	Identifier	color		5191195	0					
ANR	5191477	CallExpression	"getModule ( qrcode , x + 1 , y )"		5191195	1					
ANR	5191478	Callee	getModule		5191195	0					
ANR	5191479	Identifier	getModule		5191195	0					
ANR	5191480	ArgumentList	qrcode		5191195	1					
ANR	5191481	Argument	qrcode		5191195	0					
ANR	5191482	Identifier	qrcode		5191195	0					
ANR	5191483	Argument	x + 1		5191195	1					
ANR	5191484	AdditiveExpression	x + 1		5191195	0		+			
ANR	5191485	Identifier	x		5191195	0					
ANR	5191486	PrimaryExpression	1		5191195	1					
ANR	5191487	Argument	y		5191195	2					
ANR	5191488	Identifier	y		5191195	0					
ANR	5191489	AndExpression	"color == getModule ( qrcode , x , y + 1 ) && color == getModule ( qrcode , x + 1 , y + 1 )"		5191195	1		&&			
ANR	5191490	EqualityExpression	"color == getModule ( qrcode , x , y + 1 )"		5191195	0		==			
ANR	5191491	Identifier	color		5191195	0					
ANR	5191492	CallExpression	"getModule ( qrcode , x , y + 1 )"		5191195	1					
ANR	5191493	Callee	getModule		5191195	0					
ANR	5191494	Identifier	getModule		5191195	0					
ANR	5191495	ArgumentList	qrcode		5191195	1					
ANR	5191496	Argument	qrcode		5191195	0					
ANR	5191497	Identifier	qrcode		5191195	0					
ANR	5191498	Argument	x		5191195	1					
ANR	5191499	Identifier	x		5191195	0					
ANR	5191500	Argument	y + 1		5191195	2					
ANR	5191501	AdditiveExpression	y + 1		5191195	0		+			
ANR	5191502	Identifier	y		5191195	0					
ANR	5191503	PrimaryExpression	1		5191195	1					
ANR	5191504	EqualityExpression	"color == getModule ( qrcode , x + 1 , y + 1 )"		5191195	1		==			
ANR	5191505	Identifier	color		5191195	0					
ANR	5191506	CallExpression	"getModule ( qrcode , x + 1 , y + 1 )"		5191195	1					
ANR	5191507	Callee	getModule		5191195	0					
ANR	5191508	Identifier	getModule		5191195	0					
ANR	5191509	ArgumentList	qrcode		5191195	1					
ANR	5191510	Argument	qrcode		5191195	0					
ANR	5191511	Identifier	qrcode		5191195	0					
ANR	5191512	Argument	x + 1		5191195	1					
ANR	5191513	AdditiveExpression	x + 1		5191195	0		+			
ANR	5191514	Identifier	x		5191195	0					
ANR	5191515	PrimaryExpression	1		5191195	1					
ANR	5191516	Argument	y + 1		5191195	2					
ANR	5191517	AdditiveExpression	y + 1		5191195	0		+			
ANR	5191518	Identifier	y		5191195	0					
ANR	5191519	PrimaryExpression	1		5191195	1					
ANR	5191520	CompoundStatement		48:50:1144:1144	5191195	1					
ANR	5191521	ExpressionStatement	result += PENALTY_N2	886:4:33026:33046	5191195	0	True				
ANR	5191522	AssignmentExpression	result += PENALTY_N2		5191195	0		+=			
ANR	5191523	Identifier	result		5191195	0					
ANR	5191524	Identifier	PENALTY_N2		5191195	1					
ANR	5191525	ForStatement	for ( y = 0 ; y < qrsize ; y ++ )		5191195	5					
ANR	5191526	ForInit	y = 0 ;	892:6:33099:33104	5191195	0	True				
ANR	5191527	AssignmentExpression	y = 0		5191195	0		=			
ANR	5191528	Identifier	y		5191195	0					
ANR	5191529	PrimaryExpression	0		5191195	1					
ANR	5191530	Condition	y < qrsize	892:13:33106:33115	5191195	1	True				
ANR	5191531	RelationalExpression	y < qrsize		5191195	0		<			
ANR	5191532	Identifier	y		5191195	0					
ANR	5191533	Identifier	qrsize		5191195	1					
ANR	5191534	PostIncDecOperationExpression	y ++	892:25:33118:33120	5191195	2	True				
ANR	5191535	Identifier	y		5191195	0					
ANR	5191536	IncDec	++		5191195	1					
ANR	5191537	CompoundStatement		56:2:1251:1263	5191195	3					
ANR	5191538	IdentifierDeclStatement	int bits = 0 ;	893:2:33127:33139	5191195	0	True				
ANR	5191539	IdentifierDecl	bits = 0		5191195	0					
ANR	5191540	IdentifierDeclType	int		5191195	0					
ANR	5191541	Identifier	bits		5191195	1					
ANR	5191542	AssignmentExpression	bits = 0		5191195	2		=			
ANR	5191543	Identifier	bits		5191195	0					
ANR	5191544	PrimaryExpression	0		5191195	1					
ANR	5191545	ForStatement	for ( x = 0 ; x < qrsize ; x ++ )		5191195	1					
ANR	5191546	ForInit	x = 0 ;	894:7:33148:33153	5191195	0	True				
ANR	5191547	AssignmentExpression	x = 0		5191195	0		=			
ANR	5191548	Identifier	x		5191195	0					
ANR	5191549	PrimaryExpression	0		5191195	1					
ANR	5191550	Condition	x < qrsize	894:14:33155:33164	5191195	1	True				
ANR	5191551	RelationalExpression	x < qrsize		5191195	0		<			
ANR	5191552	Identifier	x		5191195	0					
ANR	5191553	Identifier	qrsize		5191195	1					
ANR	5191554	PostIncDecOperationExpression	x ++	894:26:33167:33169	5191195	2	True				
ANR	5191555	Identifier	x		5191195	0					
ANR	5191556	IncDec	++		5191195	1					
ANR	5191557	CompoundStatement		57:31:1296:1296	5191195	3					
ANR	5191558	ExpressionStatement	"bits = ( ( bits << 1 ) & 0x7FF ) | ( getModule ( qrcode , x , y ) ? 1 : 0 )"	895:3:33177:33240	5191195	0	True				
ANR	5191559	AssignmentExpression	"bits = ( ( bits << 1 ) & 0x7FF ) | ( getModule ( qrcode , x , y ) ? 1 : 0 )"		5191195	0		=			
ANR	5191560	Identifier	bits		5191195	0					
ANR	5191561	InclusiveOrExpression	"( ( bits << 1 ) & 0x7FF ) | ( getModule ( qrcode , x , y ) ? 1 : 0 )"		5191195	1		|			
ANR	5191562	BitAndExpression	( bits << 1 ) & 0x7FF		5191195	0		&			
ANR	5191563	ShiftExpression	bits << 1		5191195	0		<<			
ANR	5191564	Identifier	bits		5191195	0					
ANR	5191565	PrimaryExpression	1		5191195	1					
ANR	5191566	PrimaryExpression	0x7FF		5191195	1					
ANR	5191567	ConditionalExpression	"getModule ( qrcode , x , y ) ? 1 : 0"		5191195	1					
ANR	5191568	Condition	"getModule ( qrcode , x , y )"		5191195	0					
ANR	5191569	CallExpression	"getModule ( qrcode , x , y )"		5191195	0					
ANR	5191570	Callee	getModule		5191195	0					
ANR	5191571	Identifier	getModule		5191195	0					
ANR	5191572	ArgumentList	qrcode		5191195	1					
ANR	5191573	Argument	qrcode		5191195	0					
ANR	5191574	Identifier	qrcode		5191195	0					
ANR	5191575	Argument	x		5191195	1					
ANR	5191576	Identifier	x		5191195	0					
ANR	5191577	Argument	y		5191195	2					
ANR	5191578	Identifier	y		5191195	0					
ANR	5191579	PrimaryExpression	1		5191195	1					
ANR	5191580	PrimaryExpression	0		5191195	2					
ANR	5191581	IfStatement	if ( x >= 10 && ( bits == 0x05D || bits == 0x5D0 ) )		5191195	1					
ANR	5191582	Condition	x >= 10 && ( bits == 0x05D || bits == 0x5D0 )	896:7:33249:33291	5191195	0	True				
ANR	5191583	AndExpression	x >= 10 && ( bits == 0x05D || bits == 0x5D0 )		5191195	0		&&			
ANR	5191584	RelationalExpression	x >= 10		5191195	0		>=			
ANR	5191585	Identifier	x		5191195	0					
ANR	5191586	PrimaryExpression	10		5191195	1					
ANR	5191587	OrExpression	bits == 0x05D || bits == 0x5D0		5191195	1		||			
ANR	5191588	EqualityExpression	bits == 0x05D		5191195	0		==			
ANR	5191589	Identifier	bits		5191195	0					
ANR	5191590	PrimaryExpression	0x05D		5191195	1					
ANR	5191591	EqualityExpression	bits == 0x5D0		5191195	1		==			
ANR	5191592	Identifier	bits		5191195	0					
ANR	5191593	PrimaryExpression	0x5D0		5191195	1					
ANR	5191594	CompoundStatement		59:52:1418:1418	5191195	1					
ANR	5191595	ExpressionStatement	result += PENALTY_N3	897:4:33329:33349	5191195	0	True				
ANR	5191596	AssignmentExpression	result += PENALTY_N3		5191195	0		+=			
ANR	5191597	Identifier	result		5191195	0					
ANR	5191598	Identifier	PENALTY_N3		5191195	1					
ANR	5191599	ForStatement	for ( x = 0 ; x < qrsize ; x ++ )		5191195	6					
ANR	5191600	ForInit	x = 0 ;	902:6:33404:33409	5191195	0	True				
ANR	5191601	AssignmentExpression	x = 0		5191195	0		=			
ANR	5191602	Identifier	x		5191195	0					
ANR	5191603	PrimaryExpression	0		5191195	1					
ANR	5191604	Condition	x < qrsize	902:13:33411:33420	5191195	1	True				
ANR	5191605	RelationalExpression	x < qrsize		5191195	0		<			
ANR	5191606	Identifier	x		5191195	0					
ANR	5191607	Identifier	qrsize		5191195	1					
ANR	5191608	PostIncDecOperationExpression	x ++	902:25:33423:33425	5191195	2	True				
ANR	5191609	Identifier	x		5191195	0					
ANR	5191610	IncDec	++		5191195	1					
ANR	5191611	CompoundStatement		66:2:1556:1568	5191195	3					
ANR	5191612	IdentifierDeclStatement	int bits = 0 ;	903:2:33432:33444	5191195	0	True				
ANR	5191613	IdentifierDecl	bits = 0		5191195	0					
ANR	5191614	IdentifierDeclType	int		5191195	0					
ANR	5191615	Identifier	bits		5191195	1					
ANR	5191616	AssignmentExpression	bits = 0		5191195	2		=			
ANR	5191617	Identifier	bits		5191195	0					
ANR	5191618	PrimaryExpression	0		5191195	1					
ANR	5191619	ForStatement	for ( y = 0 ; y < qrsize ; y ++ )		5191195	1					
ANR	5191620	ForInit	y = 0 ;	904:7:33453:33458	5191195	0	True				
ANR	5191621	AssignmentExpression	y = 0		5191195	0		=			
ANR	5191622	Identifier	y		5191195	0					
ANR	5191623	PrimaryExpression	0		5191195	1					
ANR	5191624	Condition	y < qrsize	904:14:33460:33469	5191195	1	True				
ANR	5191625	RelationalExpression	y < qrsize		5191195	0		<			
ANR	5191626	Identifier	y		5191195	0					
ANR	5191627	Identifier	qrsize		5191195	1					
ANR	5191628	PostIncDecOperationExpression	y ++	904:26:33472:33474	5191195	2	True				
ANR	5191629	Identifier	y		5191195	0					
ANR	5191630	IncDec	++		5191195	1					
ANR	5191631	CompoundStatement		67:31:1601:1601	5191195	3					
ANR	5191632	ExpressionStatement	"bits = ( ( bits << 1 ) & 0x7FF ) | ( getModule ( qrcode , x , y ) ? 1 : 0 )"	905:3:33482:33545	5191195	0	True				
ANR	5191633	AssignmentExpression	"bits = ( ( bits << 1 ) & 0x7FF ) | ( getModule ( qrcode , x , y ) ? 1 : 0 )"		5191195	0		=			
ANR	5191634	Identifier	bits		5191195	0					
ANR	5191635	InclusiveOrExpression	"( ( bits << 1 ) & 0x7FF ) | ( getModule ( qrcode , x , y ) ? 1 : 0 )"		5191195	1		|			
ANR	5191636	BitAndExpression	( bits << 1 ) & 0x7FF		5191195	0		&			
ANR	5191637	ShiftExpression	bits << 1		5191195	0		<<			
ANR	5191638	Identifier	bits		5191195	0					
ANR	5191639	PrimaryExpression	1		5191195	1					
ANR	5191640	PrimaryExpression	0x7FF		5191195	1					
ANR	5191641	ConditionalExpression	"getModule ( qrcode , x , y ) ? 1 : 0"		5191195	1					
ANR	5191642	Condition	"getModule ( qrcode , x , y )"		5191195	0					
ANR	5191643	CallExpression	"getModule ( qrcode , x , y )"		5191195	0					
ANR	5191644	Callee	getModule		5191195	0					
ANR	5191645	Identifier	getModule		5191195	0					
ANR	5191646	ArgumentList	qrcode		5191195	1					
ANR	5191647	Argument	qrcode		5191195	0					
ANR	5191648	Identifier	qrcode		5191195	0					
ANR	5191649	Argument	x		5191195	1					
ANR	5191650	Identifier	x		5191195	0					
ANR	5191651	Argument	y		5191195	2					
ANR	5191652	Identifier	y		5191195	0					
ANR	5191653	PrimaryExpression	1		5191195	1					
ANR	5191654	PrimaryExpression	0		5191195	2					
ANR	5191655	IfStatement	if ( y >= 10 && ( bits == 0x05D || bits == 0x5D0 ) )		5191195	1					
ANR	5191656	Condition	y >= 10 && ( bits == 0x05D || bits == 0x5D0 )	906:7:33554:33596	5191195	0	True				
ANR	5191657	AndExpression	y >= 10 && ( bits == 0x05D || bits == 0x5D0 )		5191195	0		&&			
ANR	5191658	RelationalExpression	y >= 10		5191195	0		>=			
ANR	5191659	Identifier	y		5191195	0					
ANR	5191660	PrimaryExpression	10		5191195	1					
ANR	5191661	OrExpression	bits == 0x05D || bits == 0x5D0		5191195	1		||			
ANR	5191662	EqualityExpression	bits == 0x05D		5191195	0		==			
ANR	5191663	Identifier	bits		5191195	0					
ANR	5191664	PrimaryExpression	0x05D		5191195	1					
ANR	5191665	EqualityExpression	bits == 0x5D0		5191195	1		==			
ANR	5191666	Identifier	bits		5191195	0					
ANR	5191667	PrimaryExpression	0x5D0		5191195	1					
ANR	5191668	CompoundStatement		69:52:1723:1723	5191195	1					
ANR	5191669	ExpressionStatement	result += PENALTY_N3	907:4:33634:33654	5191195	0	True				
ANR	5191670	AssignmentExpression	result += PENALTY_N3		5191195	0		+=			
ANR	5191671	Identifier	result		5191195	0					
ANR	5191672	Identifier	PENALTY_N3		5191195	1					
ANR	5191673	IdentifierDeclStatement	int black = 0 ;	913:1:33709:33722	5191195	7	True				
ANR	5191674	IdentifierDecl	black = 0		5191195	0					
ANR	5191675	IdentifierDeclType	int		5191195	0					
ANR	5191676	Identifier	black		5191195	1					
ANR	5191677	AssignmentExpression	black = 0		5191195	2		=			
ANR	5191678	Identifier	black		5191195	0					
ANR	5191679	PrimaryExpression	0		5191195	1					
ANR	5191680	ForStatement	for ( y = 0 ; y < qrsize ; y ++ )		5191195	8					
ANR	5191681	ForInit	y = 0 ;	914:6:33730:33735	5191195	0	True				
ANR	5191682	AssignmentExpression	y = 0		5191195	0		=			
ANR	5191683	Identifier	y		5191195	0					
ANR	5191684	PrimaryExpression	0		5191195	1					
ANR	5191685	Condition	y < qrsize	914:13:33737:33746	5191195	1	True				
ANR	5191686	RelationalExpression	y < qrsize		5191195	0		<			
ANR	5191687	Identifier	y		5191195	0					
ANR	5191688	Identifier	qrsize		5191195	1					
ANR	5191689	PostIncDecOperationExpression	y ++	914:25:33749:33751	5191195	2	True				
ANR	5191690	Identifier	y		5191195	0					
ANR	5191691	IncDec	++		5191195	1					
ANR	5191692	CompoundStatement		77:30:1878:1878	5191195	3					
ANR	5191693	ForStatement	for ( x = 0 ; x < qrsize ; x ++ )		5191195	0					
ANR	5191694	ForInit	x = 0 ;	915:7:33763:33768	5191195	0	True				
ANR	5191695	AssignmentExpression	x = 0		5191195	0		=			
ANR	5191696	Identifier	x		5191195	0					
ANR	5191697	PrimaryExpression	0		5191195	1					
ANR	5191698	Condition	x < qrsize	915:14:33770:33779	5191195	1	True				
ANR	5191699	RelationalExpression	x < qrsize		5191195	0		<			
ANR	5191700	Identifier	x		5191195	0					
ANR	5191701	Identifier	qrsize		5191195	1					
ANR	5191702	PostIncDecOperationExpression	x ++	915:26:33782:33784	5191195	2	True				
ANR	5191703	Identifier	x		5191195	0					
ANR	5191704	IncDec	++		5191195	1					
ANR	5191705	CompoundStatement		78:31:1911:1911	5191195	3					
ANR	5191706	IfStatement	"if ( getModule ( qrcode , x , y ) )"		5191195	0					
ANR	5191707	Condition	"getModule ( qrcode , x , y )"	916:7:33796:33819	5191195	0	True				
ANR	5191708	CallExpression	"getModule ( qrcode , x , y )"		5191195	0					
ANR	5191709	Callee	getModule		5191195	0					
ANR	5191710	Identifier	getModule		5191195	0					
ANR	5191711	ArgumentList	qrcode		5191195	1					
ANR	5191712	Argument	qrcode		5191195	0					
ANR	5191713	Identifier	qrcode		5191195	0					
ANR	5191714	Argument	x		5191195	1					
ANR	5191715	Identifier	x		5191195	0					
ANR	5191716	Argument	y		5191195	2					
ANR	5191717	Identifier	y		5191195	0					
ANR	5191718	CompoundStatement		79:33:1946:1946	5191195	1					
ANR	5191719	ExpressionStatement	black ++	917:4:33828:33835	5191195	0	True				
ANR	5191720	PostIncDecOperationExpression	black ++		5191195	0					
ANR	5191721	Identifier	black		5191195	0					
ANR	5191722	IncDec	++		5191195	1					
ANR	5191723	IdentifierDeclStatement	int total = qrsize * qrsize ;	921:1:33850:33877	5191195	9	True				
ANR	5191724	IdentifierDecl	total = qrsize * qrsize		5191195	0					
ANR	5191725	IdentifierDeclType	int		5191195	0					
ANR	5191726	Identifier	total		5191195	1					
ANR	5191727	AssignmentExpression	total = qrsize * qrsize		5191195	2		=			
ANR	5191728	Identifier	total		5191195	0					
ANR	5191729	MultiplicativeExpression	qrsize * qrsize		5191195	1		*			
ANR	5191730	Identifier	qrsize		5191195	0					
ANR	5191731	Identifier	qrsize		5191195	1					
ANR	5191732	ForStatement	for ( k = 0 ; black * 20L < ( 9L - k ) * total || black * 20L > ( 11L + k ) * total ; k ++ )		5191195	10					
ANR	5191733	ForInit	k = 0 ;	923:6:33950:33955	5191195	0	True				
ANR	5191734	AssignmentExpression	k = 0		5191195	0		=			
ANR	5191735	Identifier	k		5191195	0					
ANR	5191736	PrimaryExpression	0		5191195	1					
ANR	5191737	Condition	black * 20L < ( 9L - k ) * total || black * 20L > ( 11L + k ) * total	923:13:33957:34021	5191195	1	True				
ANR	5191738	OrExpression	black * 20L < ( 9L - k ) * total || black * 20L > ( 11L + k ) * total		5191195	0		||			
ANR	5191739	RelationalExpression	black * 20L < ( 9L - k ) * total		5191195	0		<			
ANR	5191740	MultiplicativeExpression	black * 20L		5191195	0		*			
ANR	5191741	Identifier	black		5191195	0					
ANR	5191742	PrimaryExpression	20L		5191195	1					
ANR	5191743	MultiplicativeExpression	( 9L - k ) * total		5191195	1		*			
ANR	5191744	AdditiveExpression	9L - k		5191195	0		-			
ANR	5191745	PrimaryExpression	9L		5191195	0					
ANR	5191746	Identifier	k		5191195	1					
ANR	5191747	Identifier	total		5191195	1					
ANR	5191748	RelationalExpression	black * 20L > ( 11L + k ) * total		5191195	1		>			
ANR	5191749	MultiplicativeExpression	black * 20L		5191195	0		*			
ANR	5191750	Identifier	black		5191195	0					
ANR	5191751	PrimaryExpression	20L		5191195	1					
ANR	5191752	MultiplicativeExpression	( 11L + k ) * total		5191195	1		*			
ANR	5191753	AdditiveExpression	11L + k		5191195	0		+			
ANR	5191754	PrimaryExpression	11L		5191195	0					
ANR	5191755	Identifier	k		5191195	1					
ANR	5191756	Identifier	total		5191195	1					
ANR	5191757	PostIncDecOperationExpression	k ++	923:80:34024:34026	5191195	2	True				
ANR	5191758	Identifier	k		5191195	0					
ANR	5191759	IncDec	++		5191195	1					
ANR	5191760	CompoundStatement		86:85:2153:2153	5191195	3					
ANR	5191761	ExpressionStatement	result += PENALTY_N4	924:2:34033:34053	5191195	0	True				
ANR	5191762	AssignmentExpression	result += PENALTY_N4		5191195	0		+=			
ANR	5191763	Identifier	result		5191195	0					
ANR	5191764	Identifier	PENALTY_N4		5191195	1					
ANR	5191765	ReturnStatement	return result ;	926:1:34059:34072	5191195	11	True				
ANR	5191766	Identifier	result		5191195	0					
ANR	5191767	ReturnType	static long		5191195	1					
ANR	5191768	Identifier	getPenaltyScore		5191195	2					
ANR	5191769	ParameterList	const ut8 qrcode [ ]		5191195	3					
ANR	5191770	Parameter	const ut8 qrcode [ ]	838:28:31855:31872	5191195	0	True				
ANR	5191771	ParameterType	const ut8 [ ]		5191195	0					
ANR	5191772	Identifier	qrcode		5191195	1					
ANR	5191773	CFGEntryNode	ENTRY		5191195		True				
ANR	5191774	CFGExitNode	EXIT		5191195		True				
ANR	5191775	Symbol	getModule		5191195						
ANR	5191776	Symbol	color		5191195						
ANR	5191777	Symbol	qrcode		5191195						
ANR	5191778	Symbol	colorY		5191195						
ANR	5191779	Symbol	bits		5191195						
ANR	5191780	Symbol	black		5191195						
ANR	5191781	Symbol	qrcodegen_getSize		5191195						
ANR	5191782	Symbol	k		5191195						
ANR	5191783	Symbol	colorX		5191195						
ANR	5191784	Symbol	qrsize		5191195						
ANR	5191785	Symbol	result		5191195						
ANR	5191786	Symbol	total		5191195						
ANR	5191787	Symbol	PENALTY_N4		5191195						
ANR	5191788	Symbol	PENALTY_N3		5191195						
ANR	5191789	Symbol	PENALTY_N2		5191195						
ANR	5191790	Symbol	PENALTY_N1		5191195						
ANR	5191791	Symbol	x		5191195						
ANR	5191792	Symbol	runX		5191195						
ANR	5191793	Symbol	y		5191195						
ANR	5191794	Symbol	runY		5191195						
ANR	5191795	Function	qrcodegen_getSize	933:0:34182:34416							
ANR	5191796	FunctionDef	qrcodegen_getSize (const ut8 * qrcode)		5191795	0					
ANR	5191797	CompoundStatement		933:48:34230:34416	5191795	0					
ANR	5191798	IfStatement	if ( ! qrcode )		5191795	0					
ANR	5191799	Condition	! qrcode	934:5:34237:34243	5191795	0	True				
ANR	5191800	UnaryOperationExpression	! qrcode		5191795	0					
ANR	5191801	UnaryOperator	!		5191795	0					
ANR	5191802	Identifier	qrcode		5191795	1					
ANR	5191803	CompoundStatement		2:14:15:15	5191795	1					
ANR	5191804	ReturnStatement	return 0 ;	935:2:34250:34258	5191795	0	True				
ANR	5191805	PrimaryExpression	0		5191795	0					
ANR	5191806	IdentifierDeclStatement	int result = qrcode [ 0 ] ;	937:1:34264:34286	5191795	1	True				
ANR	5191807	IdentifierDecl	result = qrcode [ 0 ]		5191795	0					
ANR	5191808	IdentifierDeclType	int		5191795	0					
ANR	5191809	Identifier	result		5191795	1					
ANR	5191810	AssignmentExpression	result = qrcode [ 0 ]		5191795	2		=			
ANR	5191811	Identifier	result		5191795	0					
ANR	5191812	ArrayIndexing	qrcode [ 0 ]		5191795	1					
ANR	5191813	Identifier	qrcode		5191795	0					
ANR	5191814	PrimaryExpression	0		5191795	1					
ANR	5191815	IfStatement	if ( ( qrcodegen_VERSION_MIN * 4 + 17 ) <= result && result <= ( qrcodegen_VERSION_MAX * 4 + 17 ) )		5191795	2					
ANR	5191816	Condition	( qrcodegen_VERSION_MIN * 4 + 17 ) <= result && result <= ( qrcodegen_VERSION_MAX * 4 + 17 )	938:5:34293:34380	5191795	0	True				
ANR	5191817	AndExpression	( qrcodegen_VERSION_MIN * 4 + 17 ) <= result && result <= ( qrcodegen_VERSION_MAX * 4 + 17 )		5191795	0		&&			
ANR	5191818	RelationalExpression	( qrcodegen_VERSION_MIN * 4 + 17 ) <= result		5191795	0		<=			
ANR	5191819	AdditiveExpression	qrcodegen_VERSION_MIN * 4 + 17		5191795	0		+			
ANR	5191820	MultiplicativeExpression	qrcodegen_VERSION_MIN * 4		5191795	0		*			
ANR	5191821	Identifier	qrcodegen_VERSION_MIN		5191795	0					
ANR	5191822	PrimaryExpression	4		5191795	1					
ANR	5191823	PrimaryExpression	17		5191795	1					
ANR	5191824	Identifier	result		5191795	1					
ANR	5191825	RelationalExpression	result <= ( qrcodegen_VERSION_MAX * 4 + 17 )		5191795	1		<=			
ANR	5191826	Identifier	result		5191795	0					
ANR	5191827	AdditiveExpression	qrcodegen_VERSION_MAX * 4 + 17		5191795	1		+			
ANR	5191828	MultiplicativeExpression	qrcodegen_VERSION_MAX * 4		5191795	0		*			
ANR	5191829	Identifier	qrcodegen_VERSION_MAX		5191795	0					
ANR	5191830	PrimaryExpression	4		5191795	1					
ANR	5191831	PrimaryExpression	17		5191795	1					
ANR	5191832	CompoundStatement		6:95:152:152	5191795	1					
ANR	5191833	ReturnStatement	return result ;	939:2:34387:34400	5191795	0	True				
ANR	5191834	Identifier	result		5191795	0					
ANR	5191835	ReturnStatement	return 0 ;	941:1:34406:34414	5191795	3	True				
ANR	5191836	PrimaryExpression	0		5191795	0					
ANR	5191837	ReturnType	static int		5191795	1					
ANR	5191838	Identifier	qrcodegen_getSize		5191795	2					
ANR	5191839	ParameterList	const ut8 * qrcode		5191795	3					
ANR	5191840	Parameter	const ut8 * qrcode	933:29:34211:34227	5191795	0	True				
ANR	5191841	ParameterType	const ut8 *		5191795	0					
ANR	5191842	Identifier	qrcode		5191795	1					
ANR	5191843	CFGEntryNode	ENTRY		5191795		True				
ANR	5191844	CFGExitNode	EXIT		5191795		True				
ANR	5191845	Symbol	result		5191795						
ANR	5191846	Symbol	qrcodegen_VERSION_MIN		5191795						
ANR	5191847	Symbol	* qrcode		5191795						
ANR	5191848	Symbol	qrcode		5191795						
ANR	5191849	Symbol	qrcodegen_VERSION_MAX		5191795						
ANR	5191850	Function	qrcodegen_getModule	946:0:34483:34695							
ANR	5191851	FunctionDef	"qrcodegen_getModule (const ut8 qrcode [ ] , int x , int y)"		5191850	0					
ANR	5191852	CompoundStatement		946:66:34549:34695	5191850	0					
ANR	5191853	IfStatement	if ( ! qrcode )		5191850	0					
ANR	5191854	Condition	! qrcode	947:5:34556:34562	5191850	0	True				
ANR	5191855	UnaryOperationExpression	! qrcode		5191850	0					
ANR	5191856	UnaryOperator	!		5191850	0					
ANR	5191857	Identifier	qrcode		5191850	1					
ANR	5191858	CompoundStatement		2:14:15:15	5191850	1					
ANR	5191859	ReturnStatement	return false ;	948:2:34569:34581	5191850	0	True				
ANR	5191860	Identifier	false		5191850	0					
ANR	5191861	IdentifierDeclStatement	int qrsize = qrcode [ 0 ] ;	950:1:34587:34609	5191850	1	True				
ANR	5191862	IdentifierDecl	qrsize = qrcode [ 0 ]		5191850	0					
ANR	5191863	IdentifierDeclType	int		5191850	0					
ANR	5191864	Identifier	qrsize		5191850	1					
ANR	5191865	AssignmentExpression	qrsize = qrcode [ 0 ]		5191850	2		=			
ANR	5191866	Identifier	qrsize		5191850	0					
ANR	5191867	ArrayIndexing	qrcode [ 0 ]		5191850	1					
ANR	5191868	Identifier	qrcode		5191850	0					
ANR	5191869	PrimaryExpression	0		5191850	1					
ANR	5191870	ReturnStatement	"return ( 0 <= x && x < qrsize && 0 <= y && y < qrsize ) && getModule ( qrcode , x , y ) ;"	951:1:34612:34693	5191850	2	True				
ANR	5191871	AndExpression	"( 0 <= x && x < qrsize && 0 <= y && y < qrsize ) && getModule ( qrcode , x , y )"		5191850	0		&&			
ANR	5191872	AndExpression	0 <= x && x < qrsize && 0 <= y && y < qrsize		5191850	0		&&			
ANR	5191873	RelationalExpression	0 <= x		5191850	0		<=			
ANR	5191874	PrimaryExpression	0		5191850	0					
ANR	5191875	Identifier	x		5191850	1					
ANR	5191876	AndExpression	x < qrsize && 0 <= y && y < qrsize		5191850	1		&&			
ANR	5191877	RelationalExpression	x < qrsize		5191850	0		<			
ANR	5191878	Identifier	x		5191850	0					
ANR	5191879	Identifier	qrsize		5191850	1					
ANR	5191880	AndExpression	0 <= y && y < qrsize		5191850	1		&&			
ANR	5191881	RelationalExpression	0 <= y		5191850	0		<=			
ANR	5191882	PrimaryExpression	0		5191850	0					
ANR	5191883	Identifier	y		5191850	1					
ANR	5191884	RelationalExpression	y < qrsize		5191850	1		<			
ANR	5191885	Identifier	y		5191850	0					
ANR	5191886	Identifier	qrsize		5191850	1					
ANR	5191887	CallExpression	"getModule ( qrcode , x , y )"		5191850	1					
ANR	5191888	Callee	getModule		5191850	0					
ANR	5191889	Identifier	getModule		5191850	0					
ANR	5191890	ArgumentList	qrcode		5191850	1					
ANR	5191891	Argument	qrcode		5191850	0					
ANR	5191892	Identifier	qrcode		5191850	0					
ANR	5191893	Argument	x		5191850	1					
ANR	5191894	Identifier	x		5191850	0					
ANR	5191895	Argument	y		5191850	2					
ANR	5191896	Identifier	y		5191850	0					
ANR	5191897	ReturnType	static bool		5191850	1					
ANR	5191898	Identifier	qrcodegen_getModule		5191850	2					
ANR	5191899	ParameterList	"const ut8 qrcode [ ] , int x , int y"		5191850	3					
ANR	5191900	Parameter	const ut8 qrcode [ ]	946:32:34515:34532	5191850	0	True				
ANR	5191901	ParameterType	const ut8 [ ]		5191850	0					
ANR	5191902	Identifier	qrcode		5191850	1					
ANR	5191903	Parameter	int x	946:52:34535:34539	5191850	1	True				
ANR	5191904	ParameterType	int		5191850	0					
ANR	5191905	Identifier	x		5191850	1					
ANR	5191906	Parameter	int y	946:59:34542:34546	5191850	2	True				
ANR	5191907	ParameterType	int		5191850	0					
ANR	5191908	Identifier	y		5191850	1					
ANR	5191909	CFGEntryNode	ENTRY		5191850		True				
ANR	5191910	CFGExitNode	EXIT		5191850		True				
ANR	5191911	Symbol	getModule		5191850						
ANR	5191912	Symbol	* qrcode		5191850						
ANR	5191913	Symbol	qrcode		5191850						
ANR	5191914	Symbol	x		5191850						
ANR	5191915	Symbol	false		5191850						
ANR	5191916	Symbol	y		5191850						
ANR	5191917	Symbol	qrsize		5191850						
ANR	5191918	Function	getModule	956:0:34769:35103							
ANR	5191919	FunctionDef	"getModule (const ut8 qrcode [ ] , int x , int y)"		5191918	0					
ANR	5191920	CompoundStatement		956:56:34825:35103	5191918	0					
ANR	5191921	IdentifierDeclStatement	int qrsize = qrcode [ 0 ] ;	957:1:34828:34850	5191918	0	True				
ANR	5191922	IdentifierDecl	qrsize = qrcode [ 0 ]		5191918	0					
ANR	5191923	IdentifierDeclType	int		5191918	0					
ANR	5191924	Identifier	qrsize		5191918	1					
ANR	5191925	AssignmentExpression	qrsize = qrcode [ 0 ]		5191918	2		=			
ANR	5191926	Identifier	qrsize		5191918	0					
ANR	5191927	ArrayIndexing	qrcode [ 0 ]		5191918	1					
ANR	5191928	Identifier	qrcode		5191918	0					
ANR	5191929	PrimaryExpression	0		5191918	1					
ANR	5191930	IfStatement	if ( 21 <= qrsize && qrsize <= 177 && 0 <= x && x < qrsize && 0 <= y && y < qrsize )		5191918	1					
ANR	5191931	Condition	21 <= qrsize && qrsize <= 177 && 0 <= x && x < qrsize && 0 <= y && y < qrsize	958:5:34857:34933	5191918	0	True				
ANR	5191932	AndExpression	21 <= qrsize && qrsize <= 177 && 0 <= x && x < qrsize && 0 <= y && y < qrsize		5191918	0		&&			
ANR	5191933	RelationalExpression	21 <= qrsize		5191918	0		<=			
ANR	5191934	PrimaryExpression	21		5191918	0					
ANR	5191935	Identifier	qrsize		5191918	1					
ANR	5191936	AndExpression	qrsize <= 177 && 0 <= x && x < qrsize && 0 <= y && y < qrsize		5191918	1		&&			
ANR	5191937	RelationalExpression	qrsize <= 177		5191918	0		<=			
ANR	5191938	Identifier	qrsize		5191918	0					
ANR	5191939	PrimaryExpression	177		5191918	1					
ANR	5191940	AndExpression	0 <= x && x < qrsize && 0 <= y && y < qrsize		5191918	1		&&			
ANR	5191941	RelationalExpression	0 <= x		5191918	0		<=			
ANR	5191942	PrimaryExpression	0		5191918	0					
ANR	5191943	Identifier	x		5191918	1					
ANR	5191944	AndExpression	x < qrsize && 0 <= y && y < qrsize		5191918	1		&&			
ANR	5191945	RelationalExpression	x < qrsize		5191918	0		<			
ANR	5191946	Identifier	x		5191918	0					
ANR	5191947	Identifier	qrsize		5191918	1					
ANR	5191948	AndExpression	0 <= y && y < qrsize		5191918	1		&&			
ANR	5191949	RelationalExpression	0 <= y		5191918	0		<=			
ANR	5191950	PrimaryExpression	0		5191918	0					
ANR	5191951	Identifier	y		5191918	1					
ANR	5191952	RelationalExpression	y < qrsize		5191918	1		<			
ANR	5191953	Identifier	y		5191918	0					
ANR	5191954	Identifier	qrsize		5191918	1					
ANR	5191955	CompoundStatement		6:2:172:204	5191918	1					
ANR	5191956	IdentifierDeclStatement	int index = y * qrsize + x ;	959:2:34940:34966	5191918	0	True				
ANR	5191957	IdentifierDecl	index = y * qrsize + x		5191918	0					
ANR	5191958	IdentifierDeclType	int		5191918	0					
ANR	5191959	Identifier	index		5191918	1					
ANR	5191960	AssignmentExpression	index = y * qrsize + x		5191918	2		=			
ANR	5191961	Identifier	index		5191918	0					
ANR	5191962	AdditiveExpression	y * qrsize + x		5191918	1		+			
ANR	5191963	MultiplicativeExpression	y * qrsize		5191918	0		*			
ANR	5191964	Identifier	y		5191918	0					
ANR	5191965	Identifier	qrsize		5191918	1					
ANR	5191966	Identifier	x		5191918	1					
ANR	5191967	IdentifierDeclStatement	int bitIndex = index & 7 ;	960:2:34970:34994	5191918	1	True				
ANR	5191968	IdentifierDecl	bitIndex = index & 7		5191918	0					
ANR	5191969	IdentifierDeclType	int		5191918	0					
ANR	5191970	Identifier	bitIndex		5191918	1					
ANR	5191971	AssignmentExpression	bitIndex = index & 7		5191918	2		=			
ANR	5191972	Identifier	bitIndex		5191918	0					
ANR	5191973	BitAndExpression	index & 7		5191918	1		&			
ANR	5191974	Identifier	index		5191918	0					
ANR	5191975	PrimaryExpression	7		5191918	1					
ANR	5191976	IdentifierDeclStatement	int byteIndex = ( index >> 3 ) + 1 ;	961:2:34998:35030	5191918	2	True				
ANR	5191977	IdentifierDecl	byteIndex = ( index >> 3 ) + 1		5191918	0					
ANR	5191978	IdentifierDeclType	int		5191918	0					
ANR	5191979	Identifier	byteIndex		5191918	1					
ANR	5191980	AssignmentExpression	byteIndex = ( index >> 3 ) + 1		5191918	2		=			
ANR	5191981	Identifier	byteIndex		5191918	0					
ANR	5191982	AdditiveExpression	( index >> 3 ) + 1		5191918	1		+			
ANR	5191983	ShiftExpression	index >> 3		5191918	0		>>			
ANR	5191984	Identifier	index		5191918	0					
ANR	5191985	PrimaryExpression	3		5191918	1					
ANR	5191986	PrimaryExpression	1		5191918	1					
ANR	5191987	ReturnStatement	return ( ( qrcode [ byteIndex ] >> bitIndex ) & 1 ) != 0 ;	962:2:35034:35083	5191918	3	True				
ANR	5191988	EqualityExpression	( ( qrcode [ byteIndex ] >> bitIndex ) & 1 ) != 0		5191918	0		!=			
ANR	5191989	BitAndExpression	( qrcode [ byteIndex ] >> bitIndex ) & 1		5191918	0		&			
ANR	5191990	ShiftExpression	qrcode [ byteIndex ] >> bitIndex		5191918	0		>>			
ANR	5191991	ArrayIndexing	qrcode [ byteIndex ]		5191918	0					
ANR	5191992	Identifier	qrcode		5191918	0					
ANR	5191993	Identifier	byteIndex		5191918	1					
ANR	5191994	Identifier	bitIndex		5191918	1					
ANR	5191995	PrimaryExpression	1		5191918	1					
ANR	5191996	PrimaryExpression	0		5191918	1					
ANR	5191997	ReturnStatement	return false ;	964:1:35089:35101	5191918	2	True				
ANR	5191998	Identifier	false		5191918	0					
ANR	5191999	ReturnType	static bool		5191918	1					
ANR	5192000	Identifier	getModule		5191918	2					
ANR	5192001	ParameterList	"const ut8 qrcode [ ] , int x , int y"		5191918	3					
ANR	5192002	Parameter	const ut8 qrcode [ ]	956:22:34791:34808	5191918	0	True				
ANR	5192003	ParameterType	const ut8 [ ]		5191918	0					
ANR	5192004	Identifier	qrcode		5191918	1					
ANR	5192005	Parameter	int x	956:42:34811:34815	5191918	1	True				
ANR	5192006	ParameterType	int		5191918	0					
ANR	5192007	Identifier	x		5191918	1					
ANR	5192008	Parameter	int y	956:49:34818:34822	5191918	2	True				
ANR	5192009	ParameterType	int		5191918	0					
ANR	5192010	Identifier	y		5191918	1					
ANR	5192011	CFGEntryNode	ENTRY		5191918		True				
ANR	5192012	CFGExitNode	EXIT		5191918		True				
ANR	5192013	Symbol	* qrcode		5191918						
ANR	5192014	Symbol	qrcode		5191918						
ANR	5192015	Symbol	x		5191918						
ANR	5192016	Symbol	false		5191918						
ANR	5192017	Symbol	y		5191918						
ANR	5192018	Symbol	index		5191918						
ANR	5192019	Symbol	* byteIndex		5191918						
ANR	5192020	Symbol	qrsize		5191918						
ANR	5192021	Symbol	bitIndex		5191918						
ANR	5192022	Symbol	byteIndex		5191918						
ANR	5192023	Function	setModule	969:0:35177:35600							
ANR	5192024	FunctionDef	"setModule (ut8 qrcode [ ] , int x , int y , bool isBlack)"		5192023	0					
ANR	5192025	CompoundStatement		969:64:35241:35600	5192023	0					
ANR	5192026	IdentifierDeclStatement	int qrsize = qrcode [ 0 ] ;	970:1:35244:35266	5192023	0	True				
ANR	5192027	IdentifierDecl	qrsize = qrcode [ 0 ]		5192023	0					
ANR	5192028	IdentifierDeclType	int		5192023	0					
ANR	5192029	Identifier	qrsize		5192023	1					
ANR	5192030	AssignmentExpression	qrsize = qrcode [ 0 ]		5192023	2		=			
ANR	5192031	Identifier	qrsize		5192023	0					
ANR	5192032	ArrayIndexing	qrcode [ 0 ]		5192023	1					
ANR	5192033	Identifier	qrcode		5192023	0					
ANR	5192034	PrimaryExpression	0		5192023	1					
ANR	5192035	IfStatement	if ( 21 <= qrsize && qrsize <= 177 && 0 <= x && x < qrsize && 0 <= y && y < qrsize )		5192023	1					
ANR	5192036	Condition	21 <= qrsize && qrsize <= 177 && 0 <= x && x < qrsize && 0 <= y && y < qrsize	971:5:35273:35349	5192023	0	True				
ANR	5192037	AndExpression	21 <= qrsize && qrsize <= 177 && 0 <= x && x < qrsize && 0 <= y && y < qrsize		5192023	0		&&			
ANR	5192038	RelationalExpression	21 <= qrsize		5192023	0		<=			
ANR	5192039	PrimaryExpression	21		5192023	0					
ANR	5192040	Identifier	qrsize		5192023	1					
ANR	5192041	AndExpression	qrsize <= 177 && 0 <= x && x < qrsize && 0 <= y && y < qrsize		5192023	1		&&			
ANR	5192042	RelationalExpression	qrsize <= 177		5192023	0		<=			
ANR	5192043	Identifier	qrsize		5192023	0					
ANR	5192044	PrimaryExpression	177		5192023	1					
ANR	5192045	AndExpression	0 <= x && x < qrsize && 0 <= y && y < qrsize		5192023	1		&&			
ANR	5192046	RelationalExpression	0 <= x		5192023	0		<=			
ANR	5192047	PrimaryExpression	0		5192023	0					
ANR	5192048	Identifier	x		5192023	1					
ANR	5192049	AndExpression	x < qrsize && 0 <= y && y < qrsize		5192023	1		&&			
ANR	5192050	RelationalExpression	x < qrsize		5192023	0		<			
ANR	5192051	Identifier	x		5192023	0					
ANR	5192052	Identifier	qrsize		5192023	1					
ANR	5192053	AndExpression	0 <= y && y < qrsize		5192023	1		&&			
ANR	5192054	RelationalExpression	0 <= y		5192023	0		<=			
ANR	5192055	PrimaryExpression	0		5192023	0					
ANR	5192056	Identifier	y		5192023	1					
ANR	5192057	RelationalExpression	y < qrsize		5192023	1		<			
ANR	5192058	Identifier	y		5192023	0					
ANR	5192059	Identifier	qrsize		5192023	1					
ANR	5192060	CompoundStatement		6:2:172:204	5192023	1					
ANR	5192061	IdentifierDeclStatement	int index = y * qrsize + x ;	972:2:35356:35382	5192023	0	True				
ANR	5192062	IdentifierDecl	index = y * qrsize + x		5192023	0					
ANR	5192063	IdentifierDeclType	int		5192023	0					
ANR	5192064	Identifier	index		5192023	1					
ANR	5192065	AssignmentExpression	index = y * qrsize + x		5192023	2		=			
ANR	5192066	Identifier	index		5192023	0					
ANR	5192067	AdditiveExpression	y * qrsize + x		5192023	1		+			
ANR	5192068	MultiplicativeExpression	y * qrsize		5192023	0		*			
ANR	5192069	Identifier	y		5192023	0					
ANR	5192070	Identifier	qrsize		5192023	1					
ANR	5192071	Identifier	x		5192023	1					
ANR	5192072	IdentifierDeclStatement	int bitIndex = index & 7 ;	973:2:35386:35410	5192023	1	True				
ANR	5192073	IdentifierDecl	bitIndex = index & 7		5192023	0					
ANR	5192074	IdentifierDeclType	int		5192023	0					
ANR	5192075	Identifier	bitIndex		5192023	1					
ANR	5192076	AssignmentExpression	bitIndex = index & 7		5192023	2		=			
ANR	5192077	Identifier	bitIndex		5192023	0					
ANR	5192078	BitAndExpression	index & 7		5192023	1		&			
ANR	5192079	Identifier	index		5192023	0					
ANR	5192080	PrimaryExpression	7		5192023	1					
ANR	5192081	IdentifierDeclStatement	int byteIndex = ( index >> 3 ) + 1 ;	974:2:35414:35446	5192023	2	True				
ANR	5192082	IdentifierDecl	byteIndex = ( index >> 3 ) + 1		5192023	0					
ANR	5192083	IdentifierDeclType	int		5192023	0					
ANR	5192084	Identifier	byteIndex		5192023	1					
ANR	5192085	AssignmentExpression	byteIndex = ( index >> 3 ) + 1		5192023	2		=			
ANR	5192086	Identifier	byteIndex		5192023	0					
ANR	5192087	AdditiveExpression	( index >> 3 ) + 1		5192023	1		+			
ANR	5192088	ShiftExpression	index >> 3		5192023	0		>>			
ANR	5192089	Identifier	index		5192023	0					
ANR	5192090	PrimaryExpression	3		5192023	1					
ANR	5192091	PrimaryExpression	1		5192023	1					
ANR	5192092	IfStatement	if ( isBlack )		5192023	3					
ANR	5192093	Condition	isBlack	975:6:35454:35460	5192023	0	True				
ANR	5192094	Identifier	isBlack		5192023	0					
ANR	5192095	CompoundStatement		7:15:221:221	5192023	1					
ANR	5192096	ExpressionStatement	qrcode [ byteIndex ] |= 1 << bitIndex	976:3:35468:35502	5192023	0	True				
ANR	5192097	AssignmentExpression	qrcode [ byteIndex ] |= 1 << bitIndex		5192023	0		|=			
ANR	5192098	ArrayIndexing	qrcode [ byteIndex ]		5192023	0					
ANR	5192099	Identifier	qrcode		5192023	0					
ANR	5192100	Identifier	byteIndex		5192023	1					
ANR	5192101	ShiftExpression	1 << bitIndex		5192023	1		<<			
ANR	5192102	PrimaryExpression	1		5192023	0					
ANR	5192103	Identifier	bitIndex		5192023	1					
ANR	5192104	ElseStatement	else		5192023	0					
ANR	5192105	CompoundStatement		9:9:271:271	5192023	0					
ANR	5192106	ExpressionStatement	qrcode [ byteIndex ] &= ( 1 << bitIndex ) ^ 0xFF	978:3:35518:35561	5192023	0	True				
ANR	5192107	AssignmentExpression	qrcode [ byteIndex ] &= ( 1 << bitIndex ) ^ 0xFF		5192023	0		&=			
ANR	5192108	ArrayIndexing	qrcode [ byteIndex ]		5192023	0					
ANR	5192109	Identifier	qrcode		5192023	0					
ANR	5192110	Identifier	byteIndex		5192023	1					
ANR	5192111	ExclusiveOrExpression	( 1 << bitIndex ) ^ 0xFF		5192023	1		^			
ANR	5192112	ShiftExpression	1 << bitIndex		5192023	0		<<			
ANR	5192113	PrimaryExpression	1		5192023	0					
ANR	5192114	Identifier	bitIndex		5192023	1					
ANR	5192115	PrimaryExpression	0xFF		5192023	1					
ANR	5192116	ReturnStatement	return true ;	980:2:35569:35580	5192023	4	True				
ANR	5192117	Identifier	true		5192023	0					
ANR	5192118	ReturnStatement	return false ;	982:1:35586:35598	5192023	2	True				
ANR	5192119	Identifier	false		5192023	0					
ANR	5192120	ReturnType	static bool		5192023	1					
ANR	5192121	Identifier	setModule		5192023	2					
ANR	5192122	ParameterList	"ut8 qrcode [ ] , int x , int y , bool isBlack"		5192023	3					
ANR	5192123	Parameter	ut8 qrcode [ ]	969:22:35199:35210	5192023	0	True				
ANR	5192124	ParameterType	ut8 [ ]		5192023	0					
ANR	5192125	Identifier	qrcode		5192023	1					
ANR	5192126	Parameter	int x	969:36:35213:35217	5192023	1	True				
ANR	5192127	ParameterType	int		5192023	0					
ANR	5192128	Identifier	x		5192023	1					
ANR	5192129	Parameter	int y	969:43:35220:35224	5192023	2	True				
ANR	5192130	ParameterType	int		5192023	0					
ANR	5192131	Identifier	y		5192023	1					
ANR	5192132	Parameter	bool isBlack	969:50:35227:35238	5192023	3	True				
ANR	5192133	ParameterType	bool		5192023	0					
ANR	5192134	Identifier	isBlack		5192023	1					
ANR	5192135	CFGEntryNode	ENTRY		5192023		True				
ANR	5192136	CFGExitNode	EXIT		5192023		True				
ANR	5192137	Symbol	isBlack		5192023						
ANR	5192138	Symbol	* qrcode		5192023						
ANR	5192139	Symbol	qrcode		5192023						
ANR	5192140	Symbol	x		5192023						
ANR	5192141	Symbol	true		5192023						
ANR	5192142	Symbol	false		5192023						
ANR	5192143	Symbol	y		5192023						
ANR	5192144	Symbol	index		5192023						
ANR	5192145	Symbol	* byteIndex		5192023						
ANR	5192146	Symbol	qrsize		5192023						
ANR	5192147	Symbol	bitIndex		5192023						
ANR	5192148	Symbol	byteIndex		5192023						
ANR	5192149	Function	setModuleBounded	987:0:35681:35872							
ANR	5192150	FunctionDef	"setModuleBounded (ut8 qrcode [ ] , int x , int y , bool isBlack)"		5192149	0					
ANR	5192151	CompoundStatement		987:71:35752:35872	5192149	0					
ANR	5192152	IdentifierDeclStatement	int qrsize = qrcode [ 0 ] ;	988:1:35755:35777	5192149	0	True				
ANR	5192153	IdentifierDecl	qrsize = qrcode [ 0 ]		5192149	0					
ANR	5192154	IdentifierDeclType	int		5192149	0					
ANR	5192155	Identifier	qrsize		5192149	1					
ANR	5192156	AssignmentExpression	qrsize = qrcode [ 0 ]		5192149	2		=			
ANR	5192157	Identifier	qrsize		5192149	0					
ANR	5192158	ArrayIndexing	qrcode [ 0 ]		5192149	1					
ANR	5192159	Identifier	qrcode		5192149	0					
ANR	5192160	PrimaryExpression	0		5192149	1					
ANR	5192161	IfStatement	if ( 0 <= x && x < qrsize && 0 <= y && y < qrsize )		5192149	1					
ANR	5192162	Condition	0 <= x && x < qrsize && 0 <= y && y < qrsize	989:5:35784:35827	5192149	0	True				
ANR	5192163	AndExpression	0 <= x && x < qrsize && 0 <= y && y < qrsize		5192149	0		&&			
ANR	5192164	RelationalExpression	0 <= x		5192149	0		<=			
ANR	5192165	PrimaryExpression	0		5192149	0					
ANR	5192166	Identifier	x		5192149	1					
ANR	5192167	AndExpression	x < qrsize && 0 <= y && y < qrsize		5192149	1		&&			
ANR	5192168	RelationalExpression	x < qrsize		5192149	0		<			
ANR	5192169	Identifier	x		5192149	0					
ANR	5192170	Identifier	qrsize		5192149	1					
ANR	5192171	AndExpression	0 <= y && y < qrsize		5192149	1		&&			
ANR	5192172	RelationalExpression	0 <= y		5192149	0		<=			
ANR	5192173	PrimaryExpression	0		5192149	0					
ANR	5192174	Identifier	y		5192149	1					
ANR	5192175	RelationalExpression	y < qrsize		5192149	1		<			
ANR	5192176	Identifier	y		5192149	0					
ANR	5192177	Identifier	qrsize		5192149	1					
ANR	5192178	CompoundStatement		3:51:77:77	5192149	1					
ANR	5192179	ExpressionStatement	"setModule ( qrcode , x , y , isBlack )"	990:2:35834:35867	5192149	0	True				
ANR	5192180	CallExpression	"setModule ( qrcode , x , y , isBlack )"		5192149	0					
ANR	5192181	Callee	setModule		5192149	0					
ANR	5192182	Identifier	setModule		5192149	0					
ANR	5192183	ArgumentList	qrcode		5192149	1					
ANR	5192184	Argument	qrcode		5192149	0					
ANR	5192185	Identifier	qrcode		5192149	0					
ANR	5192186	Argument	x		5192149	1					
ANR	5192187	Identifier	x		5192149	0					
ANR	5192188	Argument	y		5192149	2					
ANR	5192189	Identifier	y		5192149	0					
ANR	5192190	Argument	isBlack		5192149	3					
ANR	5192191	Identifier	isBlack		5192149	0					
ANR	5192192	ReturnType	static void		5192149	1					
ANR	5192193	Identifier	setModuleBounded		5192149	2					
ANR	5192194	ParameterList	"ut8 qrcode [ ] , int x , int y , bool isBlack"		5192149	3					
ANR	5192195	Parameter	ut8 qrcode [ ]	987:29:35710:35721	5192149	0	True				
ANR	5192196	ParameterType	ut8 [ ]		5192149	0					
ANR	5192197	Identifier	qrcode		5192149	1					
ANR	5192198	Parameter	int x	987:43:35724:35728	5192149	1	True				
ANR	5192199	ParameterType	int		5192149	0					
ANR	5192200	Identifier	x		5192149	1					
ANR	5192201	Parameter	int y	987:50:35731:35735	5192149	2	True				
ANR	5192202	ParameterType	int		5192149	0					
ANR	5192203	Identifier	y		5192149	1					
ANR	5192204	Parameter	bool isBlack	987:57:35738:35749	5192149	3	True				
ANR	5192205	ParameterType	bool		5192149	0					
ANR	5192206	Identifier	isBlack		5192149	1					
ANR	5192207	CFGEntryNode	ENTRY		5192149		True				
ANR	5192208	CFGExitNode	EXIT		5192149		True				
ANR	5192209	Symbol	isBlack		5192149						
ANR	5192210	Symbol	* qrcode		5192149						
ANR	5192211	Symbol	qrcode		5192149						
ANR	5192212	Symbol	x		5192149						
ANR	5192213	Symbol	y		5192149						
ANR	5192214	Symbol	qrsize		5192149						
ANR	5192215	Function	r_qrcode_gen	1001:0:36133:37790							
ANR	5192216	FunctionDef	"r_qrcode_gen (const ut8 * text , int len , bool utf8 , bool inverted)"		5192215	0					
ANR	5192217	CompoundStatement		1001:77:36210:37790	5192215	0					
ANR	5192218	IdentifierDeclStatement	uint8_t qrcode [ qrcodegen_BUFFER_LEN_MAX ] = { 0 } ;	1002:1:36213:36264	5192215	0	True				
ANR	5192219	IdentifierDecl	qrcode [ qrcodegen_BUFFER_LEN_MAX ] = { 0 }		5192215	0					
ANR	5192220	IdentifierDeclType	uint8_t [ qrcodegen_BUFFER_LEN_MAX ]		5192215	0					
ANR	5192221	Identifier	qrcode		5192215	1					
ANR	5192222	Identifier	qrcodegen_BUFFER_LEN_MAX		5192215	2					
ANR	5192223	AssignmentExpression	qrcode [ qrcodegen_BUFFER_LEN_MAX ] = { 0 }		5192215	3		=			
ANR	5192224	Identifier	qrcodegen_BUFFER_LEN_MAX		5192215	0					
ANR	5192225	InitializerList	0		5192215	1					
ANR	5192226	PrimaryExpression	0		5192215	0					
ANR	5192227	IdentifierDeclStatement	enum qrcodegen_Ecc errCorLvl = qrcodegen_Ecc_HIGH ;	1005:1:36267:36316	5192215	1	True				
ANR	5192228	IdentifierDecl	errCorLvl = qrcodegen_Ecc_HIGH		5192215	0					
ANR	5192229	IdentifierDeclType	enum qrcodegen_Ecc		5192215	0					
ANR	5192230	Identifier	errCorLvl		5192215	1					
ANR	5192231	AssignmentExpression	errCorLvl = qrcodegen_Ecc_HIGH		5192215	2		=			
ANR	5192232	Identifier	qrcodegen_Ecc_HIGH		5192215	0					
ANR	5192233	Identifier	qrcodegen_Ecc_HIGH		5192215	1					
ANR	5192234	IfStatement	if ( len < 0 )		5192215	2					
ANR	5192235	Condition	len < 0	1006:5:36349:36355	5192215	0	True				
ANR	5192236	RelationalExpression	len < 0		5192215	0		<			
ANR	5192237	Identifier	len		5192215	0					
ANR	5192238	PrimaryExpression	0		5192215	1					
ANR	5192239	CompoundStatement		6:14:147:147	5192215	1					
ANR	5192240	ReturnStatement	return NULL ;	1007:2:36362:36373	5192215	0	True				
ANR	5192241	Identifier	NULL		5192215	0					
ANR	5192242	IdentifierDeclStatement	"ut8 * buf = calloc ( ( 128 + len ) , 32 ) ;"	1010:1:36417:36452	5192215	3	True				
ANR	5192243	IdentifierDecl	"* buf = calloc ( ( 128 + len ) , 32 )"		5192215	0					
ANR	5192244	IdentifierDeclType	ut8 *		5192215	0					
ANR	5192245	Identifier	buf		5192215	1					
ANR	5192246	AssignmentExpression	"* buf = calloc ( ( 128 + len ) , 32 )"		5192215	2		=			
ANR	5192247	Identifier	buf		5192215	0					
ANR	5192248	CallExpression	"calloc ( ( 128 + len ) , 32 )"		5192215	1					
ANR	5192249	Callee	calloc		5192215	0					
ANR	5192250	Identifier	calloc		5192215	0					
ANR	5192251	ArgumentList	128 + len		5192215	1					
ANR	5192252	Argument	128 + len		5192215	0					
ANR	5192253	AdditiveExpression	128 + len		5192215	0		+			
ANR	5192254	PrimaryExpression	128		5192215	0					
ANR	5192255	Identifier	len		5192215	1					
ANR	5192256	Argument	32		5192215	1					
ANR	5192257	PrimaryExpression	32		5192215	0					
ANR	5192258	ExpressionStatement	"memcpy ( buf , text , len )"	1011:1:36455:36478	5192215	4	True				
ANR	5192259	CallExpression	"memcpy ( buf , text , len )"		5192215	0					
ANR	5192260	Callee	memcpy		5192215	0					
ANR	5192261	Identifier	memcpy		5192215	0					
ANR	5192262	ArgumentList	buf		5192215	1					
ANR	5192263	Argument	buf		5192215	0					
ANR	5192264	Identifier	buf		5192215	0					
ANR	5192265	Argument	text		5192215	1					
ANR	5192266	Identifier	text		5192215	0					
ANR	5192267	Argument	len		5192215	2					
ANR	5192268	Identifier	len		5192215	0					
ANR	5192269	IdentifierDeclStatement	"bool ok = r_qrcode_bin ( buf , len , qrcode , errCorLvl , qrcodegen_VERSION_MIN , qrcodegen_VERSION_MAX , qrcodegen_Mask_AUTO , true ) ;"	1012:1:36481:36610	5192215	5	True				
ANR	5192270	IdentifierDecl	"ok = r_qrcode_bin ( buf , len , qrcode , errCorLvl , qrcodegen_VERSION_MIN , qrcodegen_VERSION_MAX , qrcodegen_Mask_AUTO , true )"		5192215	0					
ANR	5192271	IdentifierDeclType	bool		5192215	0					
ANR	5192272	Identifier	ok		5192215	1					
ANR	5192273	AssignmentExpression	"ok = r_qrcode_bin ( buf , len , qrcode , errCorLvl , qrcodegen_VERSION_MIN , qrcodegen_VERSION_MAX , qrcodegen_Mask_AUTO , true )"		5192215	2		=			
ANR	5192274	Identifier	ok		5192215	0					
ANR	5192275	CallExpression	"r_qrcode_bin ( buf , len , qrcode , errCorLvl , qrcodegen_VERSION_MIN , qrcodegen_VERSION_MAX , qrcodegen_Mask_AUTO , true )"		5192215	1					
ANR	5192276	Callee	r_qrcode_bin		5192215	0					
ANR	5192277	Identifier	r_qrcode_bin		5192215	0					
ANR	5192278	ArgumentList	buf		5192215	1					
ANR	5192279	Argument	buf		5192215	0					
ANR	5192280	Identifier	buf		5192215	0					
ANR	5192281	Argument	len		5192215	1					
ANR	5192282	Identifier	len		5192215	0					
ANR	5192283	Argument	qrcode		5192215	2					
ANR	5192284	Identifier	qrcode		5192215	0					
ANR	5192285	Argument	errCorLvl		5192215	3					
ANR	5192286	Identifier	errCorLvl		5192215	0					
ANR	5192287	Argument	qrcodegen_VERSION_MIN		5192215	4					
ANR	5192288	Identifier	qrcodegen_VERSION_MIN		5192215	0					
ANR	5192289	Argument	qrcodegen_VERSION_MAX		5192215	5					
ANR	5192290	Identifier	qrcodegen_VERSION_MAX		5192215	0					
ANR	5192291	Argument	qrcodegen_Mask_AUTO		5192215	6					
ANR	5192292	Identifier	qrcodegen_Mask_AUTO		5192215	0					
ANR	5192293	Argument	true		5192215	7					
ANR	5192294	Identifier	true		5192215	0					
ANR	5192295	IfStatement	if ( ! ok )		5192215	6					
ANR	5192296	Condition	! ok	1015:5:36617:36619	5192215	0	True				
ANR	5192297	UnaryOperationExpression	! ok		5192215	0					
ANR	5192298	UnaryOperator	!		5192215	0					
ANR	5192299	Identifier	ok		5192215	1					
ANR	5192300	CompoundStatement		15:10:411:411	5192215	1					
ANR	5192301	ExpressionStatement	free ( buf )	1016:2:36626:36636	5192215	0	True				
ANR	5192302	CallExpression	free ( buf )		5192215	0					
ANR	5192303	Callee	free		5192215	0					
ANR	5192304	Identifier	free		5192215	0					
ANR	5192305	ArgumentList	buf		5192215	1					
ANR	5192306	Argument	buf		5192215	0					
ANR	5192307	Identifier	buf		5192215	0					
ANR	5192308	ReturnStatement	return NULL ;	1017:2:36640:36651	5192215	1	True				
ANR	5192309	Identifier	NULL		5192215	0					
ANR	5192310	IdentifierDeclStatement	int size = qrcodegen_getSize ( qrcode ) ;	1020:1:36658:36695	5192215	7	True				
ANR	5192311	IdentifierDecl	size = qrcodegen_getSize ( qrcode )		5192215	0					
ANR	5192312	IdentifierDeclType	int		5192215	0					
ANR	5192313	Identifier	size		5192215	1					
ANR	5192314	AssignmentExpression	size = qrcodegen_getSize ( qrcode )		5192215	2		=			
ANR	5192315	Identifier	size		5192215	0					
ANR	5192316	CallExpression	qrcodegen_getSize ( qrcode )		5192215	1					
ANR	5192317	Callee	qrcodegen_getSize		5192215	0					
ANR	5192318	Identifier	qrcodegen_getSize		5192215	0					
ANR	5192319	ArgumentList	qrcode		5192215	1					
ANR	5192320	Argument	qrcode		5192215	0					
ANR	5192321	Identifier	qrcode		5192215	0					
ANR	5192322	IfStatement	if ( size < 1 )		5192215	8					
ANR	5192323	Condition	size < 1	1021:5:36702:36709	5192215	0	True				
ANR	5192324	RelationalExpression	size < 1		5192215	0		<			
ANR	5192325	Identifier	size		5192215	0					
ANR	5192326	PrimaryExpression	1		5192215	1					
ANR	5192327	CompoundStatement		21:15:501:501	5192215	1					
ANR	5192328	ExpressionStatement	free ( buf )	1022:2:36716:36726	5192215	0	True				
ANR	5192329	CallExpression	free ( buf )		5192215	0					
ANR	5192330	Callee	free		5192215	0					
ANR	5192331	Identifier	free		5192215	0					
ANR	5192332	ArgumentList	buf		5192215	1					
ANR	5192333	Argument	buf		5192215	0					
ANR	5192334	Identifier	buf		5192215	0					
ANR	5192335	ReturnStatement	return NULL ;	1023:2:36730:36741	5192215	1	True				
ANR	5192336	Identifier	NULL		5192215	0					
ANR	5192337	IdentifierDeclStatement	int border = 1 ;	1025:1:36747:36761	5192215	9	True				
ANR	5192338	IdentifierDecl	border = 1		5192215	0					
ANR	5192339	IdentifierDeclType	int		5192215	0					
ANR	5192340	Identifier	border		5192215	1					
ANR	5192341	AssignmentExpression	border = 1		5192215	2		=			
ANR	5192342	Identifier	border		5192215	0					
ANR	5192343	PrimaryExpression	1		5192215	1					
ANR	5192344	IdentifierDeclStatement	int total = ( size + 1024 ) * 128 ;	1026:1:36764:36795	5192215	10	True				
ANR	5192345	IdentifierDecl	total = ( size + 1024 ) * 128		5192215	0					
ANR	5192346	IdentifierDeclType	int		5192215	0					
ANR	5192347	Identifier	total		5192215	1					
ANR	5192348	AssignmentExpression	total = ( size + 1024 ) * 128		5192215	2		=			
ANR	5192349	Identifier	total		5192215	0					
ANR	5192350	MultiplicativeExpression	( size + 1024 ) * 128		5192215	1		*			
ANR	5192351	AdditiveExpression	size + 1024		5192215	0		+			
ANR	5192352	Identifier	size		5192215	0					
ANR	5192353	PrimaryExpression	1024		5192215	1					
ANR	5192354	PrimaryExpression	128		5192215	1					
ANR	5192355	IdentifierDeclStatement	"char * res = calloc ( total , 32 ) ;"	1027:1:36798:36828	5192215	11	True				
ANR	5192356	IdentifierDecl	"* res = calloc ( total , 32 )"		5192215	0					
ANR	5192357	IdentifierDeclType	char *		5192215	0					
ANR	5192358	Identifier	res		5192215	1					
ANR	5192359	AssignmentExpression	"* res = calloc ( total , 32 )"		5192215	2		=			
ANR	5192360	Identifier	res		5192215	0					
ANR	5192361	CallExpression	"calloc ( total , 32 )"		5192215	1					
ANR	5192362	Callee	calloc		5192215	0					
ANR	5192363	Identifier	calloc		5192215	0					
ANR	5192364	ArgumentList	total		5192215	1					
ANR	5192365	Argument	total		5192215	0					
ANR	5192366	Identifier	total		5192215	0					
ANR	5192367	Argument	32		5192215	1					
ANR	5192368	PrimaryExpression	32		5192215	0					
ANR	5192369	IfStatement	if ( ! res )		5192215	12					
ANR	5192370	Condition	! res	1028:5:36835:36838	5192215	0	True				
ANR	5192371	UnaryOperationExpression	! res		5192215	0					
ANR	5192372	UnaryOperator	!		5192215	0					
ANR	5192373	Identifier	res		5192215	1					
ANR	5192374	CompoundStatement		28:11:630:630	5192215	1					
ANR	5192375	ExpressionStatement	free ( buf )	1029:2:36845:36855	5192215	0	True				
ANR	5192376	CallExpression	free ( buf )		5192215	0					
ANR	5192377	Callee	free		5192215	0					
ANR	5192378	Identifier	free		5192215	0					
ANR	5192379	ArgumentList	buf		5192215	1					
ANR	5192380	Argument	buf		5192215	0					
ANR	5192381	Identifier	buf		5192215	0					
ANR	5192382	ReturnStatement	return NULL ;	1030:2:36859:36870	5192215	1	True				
ANR	5192383	Identifier	NULL		5192215	0					
ANR	5192384	IdentifierDeclStatement	char * p = res ;	1032:1:36876:36889	5192215	13	True				
ANR	5192385	IdentifierDecl	* p = res		5192215	0					
ANR	5192386	IdentifierDeclType	char *		5192215	0					
ANR	5192387	Identifier	p		5192215	1					
ANR	5192388	AssignmentExpression	* p = res		5192215	2		=			
ANR	5192389	Identifier	res		5192215	0					
ANR	5192390	Identifier	res		5192215	1					
ANR	5192391	IdentifierDeclStatement	"int x , y ;"	1033:1:36892:36900	5192215	14	True				
ANR	5192392	IdentifierDecl	x		5192215	0					
ANR	5192393	IdentifierDeclType	int		5192215	0					
ANR	5192394	Identifier	x		5192215	1					
ANR	5192395	IdentifierDecl	y		5192215	1					
ANR	5192396	IdentifierDeclType	int		5192215	0					
ANR	5192397	Identifier	y		5192215	1					
ANR	5192398	IfStatement	if ( utf8 )		5192215	15					
ANR	5192399	Condition	utf8	1034:5:36907:36910	5192215	0	True				
ANR	5192400	Identifier	utf8		5192215	0					
ANR	5192401	CompoundStatement		34:11:702:702	5192215	1					
ANR	5192402	ForStatement	for ( y = - border ; y < size + border ; y += 2 )		5192215	0					
ANR	5192403	ForInit	y = - border ;	1035:7:36922:36933	5192215	0	True				
ANR	5192404	AssignmentExpression	y = - border		5192215	0		=			
ANR	5192405	Identifier	y		5192215	0					
ANR	5192406	UnaryOperationExpression	- border		5192215	1					
ANR	5192407	UnaryOperator	-		5192215	0					
ANR	5192408	Identifier	border		5192215	1					
ANR	5192409	Condition	y < size + border	1035:20:36935:36951	5192215	1	True				
ANR	5192410	RelationalExpression	y < size + border		5192215	0		<			
ANR	5192411	Identifier	y		5192215	0					
ANR	5192412	AdditiveExpression	size + border		5192215	1		+			
ANR	5192413	Identifier	size		5192215	0					
ANR	5192414	Identifier	border		5192215	1					
ANR	5192415	AssignmentExpression	y += 2	1035:39:36954:36959	5192215	2	True	+=			
ANR	5192416	Identifier	y		5192215	0					
ANR	5192417	PrimaryExpression	2		5192215	1					
ANR	5192418	CompoundStatement		35:47:751:751	5192215	3					
ANR	5192419	ForStatement	for ( x = - border ; x < size + border ; x += 2 )		5192215	0					
ANR	5192420	ForInit	x = - border ;	1036:8:36972:36983	5192215	0	True				
ANR	5192421	AssignmentExpression	x = - border		5192215	0		=			
ANR	5192422	Identifier	x		5192215	0					
ANR	5192423	UnaryOperationExpression	- border		5192215	1					
ANR	5192424	UnaryOperator	-		5192215	0					
ANR	5192425	Identifier	border		5192215	1					
ANR	5192426	Condition	x < size + border	1036:21:36985:37001	5192215	1	True				
ANR	5192427	RelationalExpression	x < size + border		5192215	0		<			
ANR	5192428	Identifier	x		5192215	0					
ANR	5192429	AdditiveExpression	size + border		5192215	1		+			
ANR	5192430	Identifier	size		5192215	0					
ANR	5192431	Identifier	border		5192215	1					
ANR	5192432	AssignmentExpression	x += 2	1036:40:37004:37009	5192215	2	True	+=			
ANR	5192433	Identifier	x		5192215	0					
ANR	5192434	PrimaryExpression	2		5192215	1					
ANR	5192435	CompoundStatement		41:4:1029:1123	5192215	3					
ANR	5192436	IdentifierDeclStatement	"int bmp = qrcodegen_getModule ( qrcode , x , y ) ;"	1037:4:37018:37062	5192215	0	True				
ANR	5192437	IdentifierDecl	"bmp = qrcodegen_getModule ( qrcode , x , y )"		5192215	0					
ANR	5192438	IdentifierDeclType	int		5192215	0					
ANR	5192439	Identifier	bmp		5192215	1					
ANR	5192440	AssignmentExpression	"bmp = qrcodegen_getModule ( qrcode , x , y )"		5192215	2		=			
ANR	5192441	Identifier	bmp		5192215	0					
ANR	5192442	CallExpression	"qrcodegen_getModule ( qrcode , x , y )"		5192215	1					
ANR	5192443	Callee	qrcodegen_getModule		5192215	0					
ANR	5192444	Identifier	qrcodegen_getModule		5192215	0					
ANR	5192445	ArgumentList	qrcode		5192215	1					
ANR	5192446	Argument	qrcode		5192215	0					
ANR	5192447	Identifier	qrcode		5192215	0					
ANR	5192448	Argument	x		5192215	1					
ANR	5192449	Identifier	x		5192215	0					
ANR	5192450	Argument	y		5192215	2					
ANR	5192451	Identifier	y		5192215	0					
ANR	5192452	ExpressionStatement	"bmp |= qrcodegen_getModule ( qrcode , x + 1 , y ) << 1"	1038:4:37068:37118	5192215	1	True				
ANR	5192453	AssignmentExpression	"bmp |= qrcodegen_getModule ( qrcode , x + 1 , y ) << 1"		5192215	0		|=			
ANR	5192454	Identifier	bmp		5192215	0					
ANR	5192455	ShiftExpression	"qrcodegen_getModule ( qrcode , x + 1 , y ) << 1"		5192215	1		<<			
ANR	5192456	CallExpression	"qrcodegen_getModule ( qrcode , x + 1 , y )"		5192215	0					
ANR	5192457	Callee	qrcodegen_getModule		5192215	0					
ANR	5192458	Identifier	qrcodegen_getModule		5192215	0					
ANR	5192459	ArgumentList	qrcode		5192215	1					
ANR	5192460	Argument	qrcode		5192215	0					
ANR	5192461	Identifier	qrcode		5192215	0					
ANR	5192462	Argument	x + 1		5192215	1					
ANR	5192463	AdditiveExpression	x + 1		5192215	0		+			
ANR	5192464	Identifier	x		5192215	0					
ANR	5192465	PrimaryExpression	1		5192215	1					
ANR	5192466	Argument	y		5192215	2					
ANR	5192467	Identifier	y		5192215	0					
ANR	5192468	PrimaryExpression	1		5192215	1					
ANR	5192469	ExpressionStatement	"bmp |= qrcodegen_getModule ( qrcode , x , y + 1 ) << 2"	1039:4:37124:37174	5192215	2	True				
ANR	5192470	AssignmentExpression	"bmp |= qrcodegen_getModule ( qrcode , x , y + 1 ) << 2"		5192215	0		|=			
ANR	5192471	Identifier	bmp		5192215	0					
ANR	5192472	ShiftExpression	"qrcodegen_getModule ( qrcode , x , y + 1 ) << 2"		5192215	1		<<			
ANR	5192473	CallExpression	"qrcodegen_getModule ( qrcode , x , y + 1 )"		5192215	0					
ANR	5192474	Callee	qrcodegen_getModule		5192215	0					
ANR	5192475	Identifier	qrcodegen_getModule		5192215	0					
ANR	5192476	ArgumentList	qrcode		5192215	1					
ANR	5192477	Argument	qrcode		5192215	0					
ANR	5192478	Identifier	qrcode		5192215	0					
ANR	5192479	Argument	x		5192215	1					
ANR	5192480	Identifier	x		5192215	0					
ANR	5192481	Argument	y + 1		5192215	2					
ANR	5192482	AdditiveExpression	y + 1		5192215	0		+			
ANR	5192483	Identifier	y		5192215	0					
ANR	5192484	PrimaryExpression	1		5192215	1					
ANR	5192485	PrimaryExpression	2		5192215	1					
ANR	5192486	ExpressionStatement	"bmp |= qrcodegen_getModule ( qrcode , x + 1 , y + 1 ) << 3"	1040:4:37180:37234	5192215	3	True				
ANR	5192487	AssignmentExpression	"bmp |= qrcodegen_getModule ( qrcode , x + 1 , y + 1 ) << 3"		5192215	0		|=			
ANR	5192488	Identifier	bmp		5192215	0					
ANR	5192489	ShiftExpression	"qrcodegen_getModule ( qrcode , x + 1 , y + 1 ) << 3"		5192215	1		<<			
ANR	5192490	CallExpression	"qrcodegen_getModule ( qrcode , x + 1 , y + 1 )"		5192215	0					
ANR	5192491	Callee	qrcodegen_getModule		5192215	0					
ANR	5192492	Identifier	qrcodegen_getModule		5192215	0					
ANR	5192493	ArgumentList	qrcode		5192215	1					
ANR	5192494	Argument	qrcode		5192215	0					
ANR	5192495	Identifier	qrcode		5192215	0					
ANR	5192496	Argument	x + 1		5192215	1					
ANR	5192497	AdditiveExpression	x + 1		5192215	0		+			
ANR	5192498	Identifier	x		5192215	0					
ANR	5192499	PrimaryExpression	1		5192215	1					
ANR	5192500	Argument	y + 1		5192215	2					
ANR	5192501	AdditiveExpression	y + 1		5192215	0		+			
ANR	5192502	Identifier	y		5192215	0					
ANR	5192503	PrimaryExpression	1		5192215	1					
ANR	5192504	PrimaryExpression	3		5192215	1					
ANR	5192505	IdentifierDeclStatement	const char * pixel = qrcode_utf8_expansions [ inverted ? 15 - bmp : bmp ] ;	1041:4:37240:37334	5192215	4	True				
ANR	5192506	IdentifierDecl	* pixel = qrcode_utf8_expansions [ inverted ? 15 - bmp : bmp ]		5192215	0					
ANR	5192507	IdentifierDeclType	const char *		5192215	0					
ANR	5192508	Identifier	pixel		5192215	1					
ANR	5192509	AssignmentExpression	* pixel = qrcode_utf8_expansions [ inverted ? 15 - bmp : bmp ]		5192215	2		=			
ANR	5192510	Identifier	pixel		5192215	0					
ANR	5192511	ArrayIndexing	qrcode_utf8_expansions [ inverted ? 15 - bmp : bmp ]		5192215	1					
ANR	5192512	Identifier	qrcode_utf8_expansions		5192215	0					
ANR	5192513	ConditionalExpression	inverted ? 15 - bmp : bmp		5192215	1					
ANR	5192514	Condition	inverted		5192215	0					
ANR	5192515	Identifier	inverted		5192215	0					
ANR	5192516	AdditiveExpression	15 - bmp		5192215	1		-			
ANR	5192517	PrimaryExpression	15		5192215	0					
ANR	5192518	Identifier	bmp		5192215	1					
ANR	5192519	Identifier	bmp		5192215	2					
ANR	5192520	ExpressionStatement	"memcpy ( p , pixel , strlen ( pixel ) )"	1046:4:37340:37373	5192215	5	True				
ANR	5192521	CallExpression	"memcpy ( p , pixel , strlen ( pixel ) )"		5192215	0					
ANR	5192522	Callee	memcpy		5192215	0					
ANR	5192523	Identifier	memcpy		5192215	0					
ANR	5192524	ArgumentList	p		5192215	1					
ANR	5192525	Argument	p		5192215	0					
ANR	5192526	Identifier	p		5192215	0					
ANR	5192527	Argument	pixel		5192215	1					
ANR	5192528	Identifier	pixel		5192215	0					
ANR	5192529	Argument	strlen ( pixel )		5192215	2					
ANR	5192530	CallExpression	strlen ( pixel )		5192215	0					
ANR	5192531	Callee	strlen		5192215	0					
ANR	5192532	Identifier	strlen		5192215	0					
ANR	5192533	ArgumentList	pixel		5192215	1					
ANR	5192534	Argument	pixel		5192215	0					
ANR	5192535	Identifier	pixel		5192215	0					
ANR	5192536	ExpressionStatement	p += strlen ( pixel )	1047:4:37379:37398	5192215	6	True				
ANR	5192537	AssignmentExpression	p += strlen ( pixel )		5192215	0		+=			
ANR	5192538	Identifier	p		5192215	0					
ANR	5192539	CallExpression	strlen ( pixel )		5192215	1					
ANR	5192540	Callee	strlen		5192215	0					
ANR	5192541	Identifier	strlen		5192215	0					
ANR	5192542	ArgumentList	pixel		5192215	1					
ANR	5192543	Argument	pixel		5192215	0					
ANR	5192544	Identifier	pixel		5192215	0					
ANR	5192545	ExpressionStatement	* p ++ = '\\n'	1049:3:37408:37419	5192215	1	True				
ANR	5192546	AssignmentExpression	* p ++ = '\\n'		5192215	0		=			
ANR	5192547	UnaryOperationExpression	* p ++		5192215	0					
ANR	5192548	UnaryOperator	*		5192215	0					
ANR	5192549	PostIncDecOperationExpression	p ++		5192215	1					
ANR	5192550	Identifier	p		5192215	0					
ANR	5192551	IncDec	++		5192215	1					
ANR	5192552	PrimaryExpression	'\\n'		5192215	1					
ANR	5192553	ElseStatement	else		5192215	0					
ANR	5192554	CompoundStatement		51:8:1222:1222	5192215	0					
ANR	5192555	ForStatement	for ( y = - border ; y < size + border ; y ++ )		5192215	0					
ANR	5192556	ForInit	y = - border ;	1052:7:37442:37453	5192215	0	True				
ANR	5192557	AssignmentExpression	y = - border		5192215	0		=			
ANR	5192558	Identifier	y		5192215	0					
ANR	5192559	UnaryOperationExpression	- border		5192215	1					
ANR	5192560	UnaryOperator	-		5192215	0					
ANR	5192561	Identifier	border		5192215	1					
ANR	5192562	Condition	y < size + border	1052:20:37455:37471	5192215	1	True				
ANR	5192563	RelationalExpression	y < size + border		5192215	0		<			
ANR	5192564	Identifier	y		5192215	0					
ANR	5192565	AdditiveExpression	size + border		5192215	1		+			
ANR	5192566	Identifier	size		5192215	0					
ANR	5192567	Identifier	border		5192215	1					
ANR	5192568	PostIncDecOperationExpression	y ++	1052:39:37474:37476	5192215	2	True				
ANR	5192569	Identifier	y		5192215	0					
ANR	5192570	IncDec	++		5192215	1					
ANR	5192571	CompoundStatement		52:44:1268:1268	5192215	3					
ANR	5192572	ForStatement	for ( x = - border ; x < size + border ; x ++ )		5192215	0					
ANR	5192573	ForInit	x = - border ;	1053:8:37489:37500	5192215	0	True				
ANR	5192574	AssignmentExpression	x = - border		5192215	0		=			
ANR	5192575	Identifier	x		5192215	0					
ANR	5192576	UnaryOperationExpression	- border		5192215	1					
ANR	5192577	UnaryOperator	-		5192215	0					
ANR	5192578	Identifier	border		5192215	1					
ANR	5192579	Condition	x < size + border	1053:21:37502:37518	5192215	1	True				
ANR	5192580	RelationalExpression	x < size + border		5192215	0		<			
ANR	5192581	Identifier	x		5192215	0					
ANR	5192582	AdditiveExpression	size + border		5192215	1		+			
ANR	5192583	Identifier	size		5192215	0					
ANR	5192584	Identifier	border		5192215	1					
ANR	5192585	PostIncDecOperationExpression	x ++	1053:40:37521:37523	5192215	2	True				
ANR	5192586	Identifier	x		5192215	0					
ANR	5192587	IncDec	++		5192215	1					
ANR	5192588	CompoundStatement		55:4:1373:1424	5192215	3					
ANR	5192589	IdentifierDeclStatement	"bool fill = qrcodegen_getModule ( qrcode , x , y ) ;"	1054:4:37532:37578	5192215	0	True				
ANR	5192590	IdentifierDecl	"fill = qrcodegen_getModule ( qrcode , x , y )"		5192215	0					
ANR	5192591	IdentifierDeclType	bool		5192215	0					
ANR	5192592	Identifier	fill		5192215	1					
ANR	5192593	AssignmentExpression	"fill = qrcodegen_getModule ( qrcode , x , y )"		5192215	2		=			
ANR	5192594	Identifier	fill		5192215	0					
ANR	5192595	CallExpression	"qrcodegen_getModule ( qrcode , x , y )"		5192215	1					
ANR	5192596	Callee	qrcodegen_getModule		5192215	0					
ANR	5192597	Identifier	qrcodegen_getModule		5192215	0					
ANR	5192598	ArgumentList	qrcode		5192215	1					
ANR	5192599	Argument	qrcode		5192215	0					
ANR	5192600	Identifier	qrcode		5192215	0					
ANR	5192601	Argument	x		5192215	1					
ANR	5192602	Identifier	x		5192215	0					
ANR	5192603	Argument	y		5192215	2					
ANR	5192604	Identifier	y		5192215	0					
ANR	5192605	IdentifierDeclStatement	"const char * pixel = ( fill ^ inverted ) ? ""##"" : ""  "" ;"	1055:4:37584:37635	5192215	1	True				
ANR	5192606	IdentifierDecl	"* pixel = ( fill ^ inverted ) ? ""##"" : ""  """		5192215	0					
ANR	5192607	IdentifierDeclType	const char *		5192215	0					
ANR	5192608	Identifier	pixel		5192215	1					
ANR	5192609	AssignmentExpression	"* pixel = ( fill ^ inverted ) ? ""##"" : ""  """		5192215	2		=			
ANR	5192610	Identifier	pixel		5192215	0					
ANR	5192611	ConditionalExpression	"( fill ^ inverted ) ? ""##"" : ""  """		5192215	1					
ANR	5192612	Condition	fill ^ inverted		5192215	0					
ANR	5192613	ExclusiveOrExpression	fill ^ inverted		5192215	0		^			
ANR	5192614	Identifier	fill		5192215	0					
ANR	5192615	Identifier	inverted		5192215	1					
ANR	5192616	PrimaryExpression	"""##"""		5192215	1					
ANR	5192617	PrimaryExpression	"""  """		5192215	2					
ANR	5192618	ExpressionStatement	"memcpy ( p , pixel , strlen ( pixel ) )"	1056:4:37641:37674	5192215	2	True				
ANR	5192619	CallExpression	"memcpy ( p , pixel , strlen ( pixel ) )"		5192215	0					
ANR	5192620	Callee	memcpy		5192215	0					
ANR	5192621	Identifier	memcpy		5192215	0					
ANR	5192622	ArgumentList	p		5192215	1					
ANR	5192623	Argument	p		5192215	0					
ANR	5192624	Identifier	p		5192215	0					
ANR	5192625	Argument	pixel		5192215	1					
ANR	5192626	Identifier	pixel		5192215	0					
ANR	5192627	Argument	strlen ( pixel )		5192215	2					
ANR	5192628	CallExpression	strlen ( pixel )		5192215	0					
ANR	5192629	Callee	strlen		5192215	0					
ANR	5192630	Identifier	strlen		5192215	0					
ANR	5192631	ArgumentList	pixel		5192215	1					
ANR	5192632	Argument	pixel		5192215	0					
ANR	5192633	Identifier	pixel		5192215	0					
ANR	5192634	ExpressionStatement	p += strlen ( pixel )	1057:4:37680:37699	5192215	3	True				
ANR	5192635	AssignmentExpression	p += strlen ( pixel )		5192215	0		+=			
ANR	5192636	Identifier	p		5192215	0					
ANR	5192637	CallExpression	strlen ( pixel )		5192215	1					
ANR	5192638	Callee	strlen		5192215	0					
ANR	5192639	Identifier	strlen		5192215	0					
ANR	5192640	ArgumentList	pixel		5192215	1					
ANR	5192641	Argument	pixel		5192215	0					
ANR	5192642	Identifier	pixel		5192215	0					
ANR	5192643	ExpressionStatement	* p ++ = '\\n'	1059:3:37709:37720	5192215	1	True				
ANR	5192644	AssignmentExpression	* p ++ = '\\n'		5192215	0		=			
ANR	5192645	UnaryOperationExpression	* p ++		5192215	0					
ANR	5192646	UnaryOperator	*		5192215	0					
ANR	5192647	PostIncDecOperationExpression	p ++		5192215	1					
ANR	5192648	Identifier	p		5192215	0					
ANR	5192649	IncDec	++		5192215	1					
ANR	5192650	PrimaryExpression	'\\n'		5192215	1					
ANR	5192651	IfStatement	if ( p > res )		5192215	16					
ANR	5192652	Condition	p > res	1062:5:37734:37740	5192215	0	True				
ANR	5192653	RelationalExpression	p > res		5192215	0		>			
ANR	5192654	Identifier	p		5192215	0					
ANR	5192655	Identifier	res		5192215	1					
ANR	5192656	CompoundStatement		62:14:1532:1532	5192215	1					
ANR	5192657	ExpressionStatement	p --	1063:2:37747:37750	5192215	0	True				
ANR	5192658	PostIncDecOperationExpression	p --		5192215	0					
ANR	5192659	Identifier	p		5192215	0					
ANR	5192660	IncDec	--		5192215	1					
ANR	5192661	ExpressionStatement	* p = 0	1065:1:37756:37762	5192215	17	True				
ANR	5192662	AssignmentExpression	* p = 0		5192215	0		=			
ANR	5192663	UnaryOperationExpression	* p		5192215	0					
ANR	5192664	UnaryOperator	*		5192215	0					
ANR	5192665	Identifier	p		5192215	1					
ANR	5192666	PrimaryExpression	0		5192215	1					
ANR	5192667	ExpressionStatement	free ( buf )	1066:1:37765:37775	5192215	18	True				
ANR	5192668	CallExpression	free ( buf )		5192215	0					
ANR	5192669	Callee	free		5192215	0					
ANR	5192670	Identifier	free		5192215	0					
ANR	5192671	ArgumentList	buf		5192215	1					
ANR	5192672	Argument	buf		5192215	0					
ANR	5192673	Identifier	buf		5192215	0					
ANR	5192674	ReturnStatement	return res ;	1067:1:37778:37788	5192215	19	True				
ANR	5192675	Identifier	res		5192215	0					
ANR	5192676	ReturnType	R_API char *		5192215	1					
ANR	5192677	Identifier	r_qrcode_gen		5192215	2					
ANR	5192678	ParameterList	"const ut8 * text , int len , bool utf8 , bool inverted"		5192215	3					
ANR	5192679	Parameter	const ut8 * text	1001:25:36158:36172	5192215	0	True				
ANR	5192680	ParameterType	const ut8 *		5192215	0					
ANR	5192681	Identifier	text		5192215	1					
ANR	5192682	Parameter	int len	1001:42:36175:36181	5192215	1	True				
ANR	5192683	ParameterType	int		5192215	0					
ANR	5192684	Identifier	len		5192215	1					
ANR	5192685	Parameter	bool utf8	1001:51:36184:36192	5192215	2	True				
ANR	5192686	ParameterType	bool		5192215	0					
ANR	5192687	Identifier	utf8		5192215	1					
ANR	5192688	Parameter	bool inverted	1001:62:36195:36207	5192215	3	True				
ANR	5192689	ParameterType	bool		5192215	0					
ANR	5192690	Identifier	inverted		5192215	1					
ANR	5192691	CFGEntryNode	ENTRY		5192215		True				
ANR	5192692	CFGExitNode	EXIT		5192215		True				
ANR	5192693	Symbol	qrcodegen_Ecc_HIGH		5192215						
ANR	5192694	Symbol	bmp		5192215						
ANR	5192695	Symbol	qrcode		5192215						
ANR	5192696	Symbol	utf8		5192215						
ANR	5192697	Symbol	qrcodegen_getSize		5192215						
ANR	5192698	Symbol	calloc		5192215						
ANR	5192699	Symbol	qrcode_utf8_expansions		5192215						
ANR	5192700	Symbol	* bmp		5192215						
ANR	5192701	Symbol	strlen		5192215						
ANR	5192702	Symbol	total		5192215						
ANR	5192703	Symbol	len		5192215						
ANR	5192704	Symbol	* qrcode_utf8_expansions		5192215						
ANR	5192705	Symbol	text		5192215						
ANR	5192706	Symbol	inverted		5192215						
ANR	5192707	Symbol	ok		5192215						
ANR	5192708	Symbol	qrcodegen_VERSION_MAX		5192215						
ANR	5192709	Symbol	pixel		5192215						
ANR	5192710	Symbol	border		5192215						
ANR	5192711	Symbol	res		5192215						
ANR	5192712	Symbol	NULL		5192215						
ANR	5192713	Symbol	r_qrcode_bin		5192215						
ANR	5192714	Symbol	* p ++		5192215						
ANR	5192715	Symbol	* inverted		5192215						
ANR	5192716	Symbol	qrcodegen_BUFFER_LEN_MAX		5192215						
ANR	5192717	Symbol	qrcodegen_Mask_AUTO		5192215						
ANR	5192718	Symbol	fill		5192215						
ANR	5192719	Symbol	qrcodegen_getModule		5192215						
ANR	5192720	Symbol	p		5192215						
ANR	5192721	Symbol	buf		5192215						
ANR	5192722	Symbol	errCorLvl		5192215						
ANR	5192723	Symbol	qrcodegen_VERSION_MIN		5192215						
ANR	5192724	Symbol	size		5192215						
ANR	5192725	Symbol	true		5192215						
ANR	5192726	Symbol	x		5192215						
ANR	5192727	Symbol	y		5192215						
ANR	5192728	Symbol	* p		5192215						
