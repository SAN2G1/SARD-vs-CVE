command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	611123	File	data/converged/CVE-2019-16718~_radare2/blaze.c								
ANR	611124	ClassDef	bb_type	5:8:88:157							
ANR	611125	DeclStmt									
ANR	611126	Decl							bb_type	bb_type	bb_type_t
ANR	611127	ClassDef	bb	14:8:168:290							
ANR	611128	DeclStmt									
ANR	611129	Decl							ut64	ut64	start
ANR	611130	DeclStmt									
ANR	611131	Decl							ut64	ut64	end
ANR	611132	DeclStmt									
ANR	611133	Decl							ut64	ut64	jump
ANR	611134	DeclStmt									
ANR	611135	Decl							ut64	ut64	fail
ANR	611136	DeclStmt									
ANR	611137	Decl							int	int	score
ANR	611138	DeclStmt									
ANR	611139	Decl							int	int	called
ANR	611140	DeclStmt									
ANR	611141	Decl							int	int	reached
ANR	611142	DeclStmt									
ANR	611143	Decl							bb_type_t	bb_type_t	type
ANR	611144	DeclStmt									
ANR	611145	Decl							bb	bb	bb_t
ANR	611146	ClassDef	fcn	25:8:301:383							
ANR	611147	DeclStmt									
ANR	611148	Decl							ut64	ut64	addr
ANR	611149	DeclStmt									
ANR	611150	Decl							ut64	ut64	size
ANR	611151	DeclStmt									
ANR	611152	Decl							RList	RList *	bbs
ANR	611153	DeclStmt									
ANR	611154	Decl							st64	st64	score
ANR	611155	DeclStmt									
ANR	611156	Decl							ut64	ut64	ends
ANR	611157	DeclStmt									
ANR	611158	Decl							fcn	fcn	fcn_t
ANR	611159	Function	__isdata	33:0:386:1075							
ANR	611160	FunctionDef	"__isdata (RCore * core , ut64 addr)"		611159	0					
ANR	611161	CompoundStatement		33:44:430:1075	611159	0					
ANR	611162	IfStatement	"if ( ! r_io_is_valid_offset ( core -> io , addr , false ) )"		611159	0					
ANR	611163	Condition	"! r_io_is_valid_offset ( core -> io , addr , false )"	34:5:437:481	611159	0	True				
ANR	611164	UnaryOperationExpression	"! r_io_is_valid_offset ( core -> io , addr , false )"		611159	0					
ANR	611165	UnaryOperator	!		611159	0					
ANR	611166	CallExpression	"r_io_is_valid_offset ( core -> io , addr , false )"		611159	1					
ANR	611167	Callee	r_io_is_valid_offset		611159	0					
ANR	611168	Identifier	r_io_is_valid_offset		611159	0					
ANR	611169	ArgumentList	core -> io		611159	1					
ANR	611170	Argument	core -> io		611159	0					
ANR	611171	PtrMemberAccess	core -> io		611159	0					
ANR	611172	Identifier	core		611159	0					
ANR	611173	Identifier	io		611159	1					
ANR	611174	Argument	addr		611159	1					
ANR	611175	Identifier	addr		611159	0					
ANR	611176	Argument	false		611159	2					
ANR	611177	Identifier	false		611159	0					
ANR	611178	CompoundStatement		2:52:53:53	611159	1					
ANR	611179	ReturnStatement	return 4 ;	36:2:564:572	611159	0	True				
ANR	611180	PrimaryExpression	4		611159	0					
ANR	611181	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_at ( core -> anal , addr , R_ANAL_FCN_TYPE_NULL ) ;"	38:1:578:657	611159	1	True				
ANR	611182	IdentifierDecl	"* fcn = r_anal_get_fcn_at ( core -> anal , addr , R_ANAL_FCN_TYPE_NULL )"		611159	0					
ANR	611183	IdentifierDeclType	RAnalFunction *		611159	0					
ANR	611184	Identifier	fcn		611159	1					
ANR	611185	AssignmentExpression	"* fcn = r_anal_get_fcn_at ( core -> anal , addr , R_ANAL_FCN_TYPE_NULL )"		611159	2		=			
ANR	611186	Identifier	fcn		611159	0					
ANR	611187	CallExpression	"r_anal_get_fcn_at ( core -> anal , addr , R_ANAL_FCN_TYPE_NULL )"		611159	1					
ANR	611188	Callee	r_anal_get_fcn_at		611159	0					
ANR	611189	Identifier	r_anal_get_fcn_at		611159	0					
ANR	611190	ArgumentList	core -> anal		611159	1					
ANR	611191	Argument	core -> anal		611159	0					
ANR	611192	PtrMemberAccess	core -> anal		611159	0					
ANR	611193	Identifier	core		611159	0					
ANR	611194	Identifier	anal		611159	1					
ANR	611195	Argument	addr		611159	1					
ANR	611196	Identifier	addr		611159	0					
ANR	611197	Argument	R_ANAL_FCN_TYPE_NULL		611159	2					
ANR	611198	Identifier	R_ANAL_FCN_TYPE_NULL		611159	0					
ANR	611199	IfStatement	if ( fcn )		611159	2					
ANR	611200	Condition	fcn	39:5:664:666	611159	0	True				
ANR	611201	Identifier	fcn		611159	0					
ANR	611202	CompoundStatement		7:10:238:238	611159	1					
ANR	611203	ReturnStatement	return r_anal_fcn_size ( fcn ) ;	40:2:673:701	611159	0	True				
ANR	611204	CallExpression	r_anal_fcn_size ( fcn )		611159	0					
ANR	611205	Callee	r_anal_fcn_size		611159	0					
ANR	611206	Identifier	r_anal_fcn_size		611159	0					
ANR	611207	ArgumentList	fcn		611159	1					
ANR	611208	Argument	fcn		611159	0					
ANR	611209	Identifier	fcn		611159	0					
ANR	611210	IdentifierDeclStatement	"RList * list = r_meta_find_list_in ( core -> anal , addr , - 1 , 4 ) ;"	42:1:707:766	611159	3	True				
ANR	611211	IdentifierDecl	"* list = r_meta_find_list_in ( core -> anal , addr , - 1 , 4 )"		611159	0					
ANR	611212	IdentifierDeclType	RList *		611159	0					
ANR	611213	Identifier	list		611159	1					
ANR	611214	AssignmentExpression	"* list = r_meta_find_list_in ( core -> anal , addr , - 1 , 4 )"		611159	2		=			
ANR	611215	Identifier	list		611159	0					
ANR	611216	CallExpression	"r_meta_find_list_in ( core -> anal , addr , - 1 , 4 )"		611159	1					
ANR	611217	Callee	r_meta_find_list_in		611159	0					
ANR	611218	Identifier	r_meta_find_list_in		611159	0					
ANR	611219	ArgumentList	core -> anal		611159	1					
ANR	611220	Argument	core -> anal		611159	0					
ANR	611221	PtrMemberAccess	core -> anal		611159	0					
ANR	611222	Identifier	core		611159	0					
ANR	611223	Identifier	anal		611159	1					
ANR	611224	Argument	addr		611159	1					
ANR	611225	Identifier	addr		611159	0					
ANR	611226	Argument	- 1		611159	2					
ANR	611227	UnaryOperationExpression	- 1		611159	0					
ANR	611228	UnaryOperator	-		611159	0					
ANR	611229	PrimaryExpression	1		611159	1					
ANR	611230	Argument	4		611159	3					
ANR	611231	PrimaryExpression	4		611159	0					
ANR	611232	IdentifierDeclStatement	RListIter * iter ;	43:1:769:784	611159	4	True				
ANR	611233	IdentifierDecl	* iter		611159	0					
ANR	611234	IdentifierDeclType	RListIter *		611159	0					
ANR	611235	Identifier	iter		611159	1					
ANR	611236	IdentifierDeclStatement	RAnalMetaItem * meta ;	44:1:787:806	611159	5	True				
ANR	611237	IdentifierDecl	* meta		611159	0					
ANR	611238	IdentifierDeclType	RAnalMetaItem *		611159	0					
ANR	611239	Identifier	meta		611159	1					
ANR	611240	IdentifierDeclStatement	int result = 0 ;	45:1:809:823	611159	6	True				
ANR	611241	IdentifierDecl	result = 0		611159	0					
ANR	611242	IdentifierDeclType	int		611159	0					
ANR	611243	Identifier	result		611159	1					
ANR	611244	AssignmentExpression	result = 0		611159	2		=			
ANR	611245	Identifier	result		611159	0					
ANR	611246	PrimaryExpression	0		611159	1					
ANR	611247	Statement	r_list_foreach	46:1:826:839	611159	7	True				
ANR	611248	Statement	(	46:16:841:841	611159	8	True				
ANR	611249	Statement	list	46:17:842:845	611159	9	True				
ANR	611250	Statement	","	46:21:846:846	611159	10	True				
ANR	611251	Statement	iter	46:23:848:851	611159	11	True				
ANR	611252	Statement	","	46:27:852:852	611159	12	True				
ANR	611253	Statement	meta	46:29:854:857	611159	13	True				
ANR	611254	Statement	)	46:33:858:858	611159	14	True				
ANR	611255	CompoundStatement		14:35:429:429	611159	15					
ANR	611256	SwitchStatement	switch ( meta -> type )		611159	0					
ANR	611257	Condition	meta -> type	47:10:872:881	611159	0	True				
ANR	611258	PtrMemberAccess	meta -> type		611159	0					
ANR	611259	Identifier	meta		611159	0					
ANR	611260	Identifier	type		611159	1					
ANR	611261	CompoundStatement		15:22:453:453	611159	1					
ANR	611262	Label	case R_META_TYPE_DATA :	48:2:888:909	611159	0	True				
ANR	611263	Identifier	R_META_TYPE_DATA		611159	0					
ANR	611264	Label	case R_META_TYPE_STRING :	49:2:913:936	611159	1	True				
ANR	611265	Identifier	R_META_TYPE_STRING		611159	0					
ANR	611266	Label	case R_META_TYPE_FORMAT :	50:2:940:963	611159	2	True				
ANR	611267	Identifier	R_META_TYPE_FORMAT		611159	0					
ANR	611268	ExpressionStatement	result = meta -> size - ( addr - meta -> from )	51:3:968:1009	611159	3	True				
ANR	611269	AssignmentExpression	result = meta -> size - ( addr - meta -> from )		611159	0		=			
ANR	611270	Identifier	result		611159	0					
ANR	611271	AdditiveExpression	meta -> size - ( addr - meta -> from )		611159	1		-			
ANR	611272	PtrMemberAccess	meta -> size		611159	0					
ANR	611273	Identifier	meta		611159	0					
ANR	611274	Identifier	size		611159	1					
ANR	611275	AdditiveExpression	addr - meta -> from		611159	1		-			
ANR	611276	Identifier	addr		611159	0					
ANR	611277	PtrMemberAccess	meta -> from		611159	1					
ANR	611278	Identifier	meta		611159	0					
ANR	611279	Identifier	from		611159	1					
ANR	611280	GotoStatement	goto exit ;	52:3:1014:1023	611159	4	True				
ANR	611281	Identifier	exit		611159	0					
ANR	611282	Label	exit :	55:0:1032:1036	611159	16	True				
ANR	611283	Identifier	exit		611159	0					
ANR	611284	ExpressionStatement	r_list_free ( list )	56:1:1039:1057	611159	17	True				
ANR	611285	CallExpression	r_list_free ( list )		611159	0					
ANR	611286	Callee	r_list_free		611159	0					
ANR	611287	Identifier	r_list_free		611159	0					
ANR	611288	ArgumentList	list		611159	1					
ANR	611289	Argument	list		611159	0					
ANR	611290	Identifier	list		611159	0					
ANR	611291	ReturnStatement	return result ;	57:1:1060:1073	611159	18	True				
ANR	611292	Identifier	result		611159	0					
ANR	611293	ReturnType	static int		611159	1					
ANR	611294	Identifier	__isdata		611159	2					
ANR	611295	ParameterList	"RCore * core , ut64 addr"		611159	3					
ANR	611296	Parameter	RCore * core	33:20:406:416	611159	0	True				
ANR	611297	ParameterType	RCore *		611159	0					
ANR	611298	Identifier	core		611159	1					
ANR	611299	Parameter	ut64 addr	33:33:419:427	611159	1	True				
ANR	611300	ParameterType	ut64		611159	0					
ANR	611301	Identifier	addr		611159	1					
ANR	611302	CFGEntryNode	ENTRY		611159		True				
ANR	611303	CFGExitNode	EXIT		611159		True				
ANR	611304	Symbol	r_anal_get_fcn_at		611159						
ANR	611305	Symbol	r_io_is_valid_offset		611159						
ANR	611306	Symbol	R_ANAL_FCN_TYPE_NULL		611159						
ANR	611307	Symbol	meta -> size		611159						
ANR	611308	Symbol	r_anal_fcn_size		611159						
ANR	611309	Symbol	* core		611159						
ANR	611310	Symbol	false		611159						
ANR	611311	Symbol	iter		611159						
ANR	611312	Symbol	list		611159						
ANR	611313	Symbol	core -> anal		611159						
ANR	611314	Symbol	meta -> from		611159						
ANR	611315	Symbol	fcn		611159						
ANR	611316	Symbol	result		611159						
ANR	611317	Symbol	core		611159						
ANR	611318	Symbol	r_meta_find_list_in		611159						
ANR	611319	Symbol	core -> io		611159						
ANR	611320	Symbol	meta		611159						
ANR	611321	Symbol	meta -> type		611159						
ANR	611322	Symbol	* meta		611159						
ANR	611323	Symbol	addr		611159						
ANR	611324	Function	fcnAddBB	60:0:1078:1459							
ANR	611325	FunctionDef	"fcnAddBB (fcn_t * fcn , bb_t * block)"		611324	0					
ANR	611326	CompoundStatement		60:47:1125:1459	611324	0					
ANR	611327	IfStatement	if ( ! fcn )		611324	0					
ANR	611328	Condition	! fcn	61:5:1132:1135	611324	0	True				
ANR	611329	UnaryOperationExpression	! fcn		611324	0					
ANR	611330	UnaryOperator	!		611324	0					
ANR	611331	Identifier	fcn		611324	1					
ANR	611332	CompoundStatement		2:11:12:12	611324	1					
ANR	611333	ExpressionStatement	"eprintf ( ""No function given to add a basic block\\n"" )"	62:2:1142:1194	611324	0	True				
ANR	611334	CallExpression	"eprintf ( ""No function given to add a basic block\\n"" )"		611324	0					
ANR	611335	Callee	eprintf		611324	0					
ANR	611336	Identifier	eprintf		611324	0					
ANR	611337	ArgumentList	"""No function given to add a basic block\\n"""		611324	1					
ANR	611338	Argument	"""No function given to add a basic block\\n"""		611324	0					
ANR	611339	PrimaryExpression	"""No function given to add a basic block\\n"""		611324	0					
ANR	611340	ReturnStatement	return false ;	63:2:1198:1210	611324	1	True				
ANR	611341	Identifier	false		611324	0					
ANR	611342	ExpressionStatement	fcn -> score += block -> score	65:1:1216:1242	611324	1	True				
ANR	611343	AssignmentExpression	fcn -> score += block -> score		611324	0		+=			
ANR	611344	PtrMemberAccess	fcn -> score		611324	0					
ANR	611345	Identifier	fcn		611324	0					
ANR	611346	Identifier	score		611324	1					
ANR	611347	PtrMemberAccess	block -> score		611324	1					
ANR	611348	Identifier	block		611324	0					
ANR	611349	Identifier	score		611324	1					
ANR	611350	ExpressionStatement	fcn -> size += block -> end - block -> start	66:1:1245:1283	611324	2	True				
ANR	611351	AssignmentExpression	fcn -> size += block -> end - block -> start		611324	0		+=			
ANR	611352	PtrMemberAccess	fcn -> size		611324	0					
ANR	611353	Identifier	fcn		611324	0					
ANR	611354	Identifier	size		611324	1					
ANR	611355	AdditiveExpression	block -> end - block -> start		611324	1		-			
ANR	611356	PtrMemberAccess	block -> end		611324	0					
ANR	611357	Identifier	block		611324	0					
ANR	611358	Identifier	end		611324	1					
ANR	611359	PtrMemberAccess	block -> start		611324	1					
ANR	611360	Identifier	block		611324	0					
ANR	611361	Identifier	start		611324	1					
ANR	611362	IfStatement	if ( block -> type == END )		611324	3					
ANR	611363	Condition	block -> type == END	67:5:1290:1307	611324	0	True				
ANR	611364	EqualityExpression	block -> type == END		611324	0		==			
ANR	611365	PtrMemberAccess	block -> type		611324	0					
ANR	611366	Identifier	block		611324	0					
ANR	611367	Identifier	type		611324	1					
ANR	611368	Identifier	END		611324	1					
ANR	611369	CompoundStatement		8:25:184:184	611324	1					
ANR	611370	ExpressionStatement	fcn -> ends ++	68:2:1314:1325	611324	0	True				
ANR	611371	PostIncDecOperationExpression	fcn -> ends ++		611324	0					
ANR	611372	PtrMemberAccess	fcn -> ends		611324	0					
ANR	611373	Identifier	fcn		611324	0					
ANR	611374	Identifier	ends		611324	1					
ANR	611375	IncDec	++		611324	1					
ANR	611376	IfStatement	if ( ! fcn -> bbs )		611324	4					
ANR	611377	Condition	! fcn -> bbs	70:5:1335:1343	611324	0	True				
ANR	611378	UnaryOperationExpression	! fcn -> bbs		611324	0					
ANR	611379	UnaryOperator	!		611324	0					
ANR	611380	PtrMemberAccess	fcn -> bbs		611324	1					
ANR	611381	Identifier	fcn		611324	0					
ANR	611382	Identifier	bbs		611324	1					
ANR	611383	CompoundStatement		11:16:220:220	611324	1					
ANR	611384	ExpressionStatement	"eprintf ( ""Block list not initialized\\n"" )"	71:2:1350:1390	611324	0	True				
ANR	611385	CallExpression	"eprintf ( ""Block list not initialized\\n"" )"		611324	0					
ANR	611386	Callee	eprintf		611324	0					
ANR	611387	Identifier	eprintf		611324	0					
ANR	611388	ArgumentList	"""Block list not initialized\\n"""		611324	1					
ANR	611389	Argument	"""Block list not initialized\\n"""		611324	0					
ANR	611390	PrimaryExpression	"""Block list not initialized\\n"""		611324	0					
ANR	611391	ReturnStatement	return false ;	72:2:1394:1406	611324	1	True				
ANR	611392	Identifier	false		611324	0					
ANR	611393	ExpressionStatement	"r_list_append ( fcn -> bbs , block )"	74:1:1412:1443	611324	5	True				
ANR	611394	CallExpression	"r_list_append ( fcn -> bbs , block )"		611324	0					
ANR	611395	Callee	r_list_append		611324	0					
ANR	611396	Identifier	r_list_append		611324	0					
ANR	611397	ArgumentList	fcn -> bbs		611324	1					
ANR	611398	Argument	fcn -> bbs		611324	0					
ANR	611399	PtrMemberAccess	fcn -> bbs		611324	0					
ANR	611400	Identifier	fcn		611324	0					
ANR	611401	Identifier	bbs		611324	1					
ANR	611402	Argument	block		611324	1					
ANR	611403	Identifier	block		611324	0					
ANR	611404	ReturnStatement	return true ;	75:1:1446:1457	611324	6	True				
ANR	611405	Identifier	true		611324	0					
ANR	611406	ReturnType	static bool		611324	1					
ANR	611407	Identifier	fcnAddBB		611324	2					
ANR	611408	ParameterList	"fcn_t * fcn , bb_t * block"		611324	3					
ANR	611409	Parameter	fcn_t * fcn	60:22:1100:1109	611324	0	True				
ANR	611410	ParameterType	fcn_t *		611324	0					
ANR	611411	Identifier	fcn		611324	1					
ANR	611412	Parameter	bb_t * block	60:34:1112:1122	611324	1	True				
ANR	611413	ParameterType	bb_t *		611324	0					
ANR	611414	Identifier	block		611324	1					
ANR	611415	CFGEntryNode	ENTRY		611324		True				
ANR	611416	CFGExitNode	EXIT		611324		True				
ANR	611417	Symbol	* fcn		611324						
ANR	611418	Symbol	block -> start		611324						
ANR	611419	Symbol	false		611324						
ANR	611420	Symbol	block -> end		611324						
ANR	611421	Symbol	block -> score		611324						
ANR	611422	Symbol	* block		611324						
ANR	611423	Symbol	fcn		611324						
ANR	611424	Symbol	fcn -> size		611324						
ANR	611425	Symbol	fcn -> ends		611324						
ANR	611426	Symbol	fcn -> bbs		611324						
ANR	611427	Symbol	true		611324						
ANR	611428	Symbol	fcn -> score		611324						
ANR	611429	Symbol	block		611324						
ANR	611430	Symbol	END		611324						
ANR	611431	Symbol	block -> type		611324						
ANR	611432	Function	fcnNew	78:0:1462:1766							
ANR	611433	FunctionDef	fcnNew (bb_t * block)		611432	0					
ANR	611434	CompoundStatement		78:35:1497:1766	611432	0					
ANR	611435	IdentifierDeclStatement	fcn_t * fcn = R_NEW0 ( fcn_t ) ;	79:1:1500:1527	611432	0	True				
ANR	611436	IdentifierDecl	* fcn = R_NEW0 ( fcn_t )		611432	0					
ANR	611437	IdentifierDeclType	fcn_t *		611432	0					
ANR	611438	Identifier	fcn		611432	1					
ANR	611439	AssignmentExpression	* fcn = R_NEW0 ( fcn_t )		611432	2		=			
ANR	611440	Identifier	fcn		611432	0					
ANR	611441	CallExpression	R_NEW0 ( fcn_t )		611432	1					
ANR	611442	Callee	R_NEW0		611432	0					
ANR	611443	Identifier	R_NEW0		611432	0					
ANR	611444	ArgumentList	fcn_t		611432	1					
ANR	611445	Argument	fcn_t		611432	0					
ANR	611446	Identifier	fcn_t		611432	0					
ANR	611447	IfStatement	if ( ! fcn )		611432	1					
ANR	611448	Condition	! fcn	80:5:1534:1537	611432	0	True				
ANR	611449	UnaryOperationExpression	! fcn		611432	0					
ANR	611450	UnaryOperator	!		611432	0					
ANR	611451	Identifier	fcn		611432	1					
ANR	611452	CompoundStatement		3:11:42:42	611432	1					
ANR	611453	ExpressionStatement	"eprintf ( ""Failed to allocate memory for function\\n"" )"	81:2:1544:1596	611432	0	True				
ANR	611454	CallExpression	"eprintf ( ""Failed to allocate memory for function\\n"" )"		611432	0					
ANR	611455	Callee	eprintf		611432	0					
ANR	611456	Identifier	eprintf		611432	0					
ANR	611457	ArgumentList	"""Failed to allocate memory for function\\n"""		611432	1					
ANR	611458	Argument	"""Failed to allocate memory for function\\n"""		611432	0					
ANR	611459	PrimaryExpression	"""Failed to allocate memory for function\\n"""		611432	0					
ANR	611460	ReturnStatement	return NULL ;	82:2:1600:1611	611432	1	True				
ANR	611461	Identifier	NULL		611432	0					
ANR	611462	ExpressionStatement	fcn -> addr = block -> start	84:1:1617:1641	611432	2	True				
ANR	611463	AssignmentExpression	fcn -> addr = block -> start		611432	0		=			
ANR	611464	PtrMemberAccess	fcn -> addr		611432	0					
ANR	611465	Identifier	fcn		611432	0					
ANR	611466	Identifier	addr		611432	1					
ANR	611467	PtrMemberAccess	block -> start		611432	1					
ANR	611468	Identifier	block		611432	0					
ANR	611469	Identifier	start		611432	1					
ANR	611470	ExpressionStatement	fcn -> bbs = r_list_new ( )	85:1:1644:1668	611432	3	True				
ANR	611471	AssignmentExpression	fcn -> bbs = r_list_new ( )		611432	0		=			
ANR	611472	PtrMemberAccess	fcn -> bbs		611432	0					
ANR	611473	Identifier	fcn		611432	0					
ANR	611474	Identifier	bbs		611432	1					
ANR	611475	CallExpression	r_list_new ( )		611432	1					
ANR	611476	Callee	r_list_new		611432	0					
ANR	611477	Identifier	r_list_new		611432	0					
ANR	611478	ArgumentList			611432	1					
ANR	611479	IfStatement	"if ( ! fcnAddBB ( fcn , block ) )"		611432	4					
ANR	611480	Condition	"! fcnAddBB ( fcn , block )"	86:5:1675:1696	611432	0	True				
ANR	611481	UnaryOperationExpression	"! fcnAddBB ( fcn , block )"		611432	0					
ANR	611482	UnaryOperator	!		611432	0					
ANR	611483	CallExpression	"fcnAddBB ( fcn , block )"		611432	1					
ANR	611484	Callee	fcnAddBB		611432	0					
ANR	611485	Identifier	fcnAddBB		611432	0					
ANR	611486	ArgumentList	fcn		611432	1					
ANR	611487	Argument	fcn		611432	0					
ANR	611488	Identifier	fcn		611432	0					
ANR	611489	Argument	block		611432	1					
ANR	611490	Identifier	block		611432	0					
ANR	611491	CompoundStatement		9:29:201:201	611432	1					
ANR	611492	ExpressionStatement	"eprintf ( ""Failed to add block to function\\n"" )"	87:2:1703:1748	611432	0	True				
ANR	611493	CallExpression	"eprintf ( ""Failed to add block to function\\n"" )"		611432	0					
ANR	611494	Callee	eprintf		611432	0					
ANR	611495	Identifier	eprintf		611432	0					
ANR	611496	ArgumentList	"""Failed to add block to function\\n"""		611432	1					
ANR	611497	Argument	"""Failed to add block to function\\n"""		611432	0					
ANR	611498	PrimaryExpression	"""Failed to add block to function\\n"""		611432	0					
ANR	611499	ReturnStatement	return fcn ;	89:1:1754:1764	611432	5	True				
ANR	611500	Identifier	fcn		611432	0					
ANR	611501	ReturnType	static fcn_t *		611432	1					
ANR	611502	Identifier	fcnNew		611432	2					
ANR	611503	ParameterList	bb_t * block		611432	3					
ANR	611504	Parameter	bb_t * block	78:22:1484:1494	611432	0	True				
ANR	611505	ParameterType	bb_t *		611432	0					
ANR	611506	Identifier	block		611432	1					
ANR	611507	CFGEntryNode	ENTRY		611432		True				
ANR	611508	CFGExitNode	EXIT		611432		True				
ANR	611509	Symbol	fcn		611432						
ANR	611510	Symbol	R_NEW0		611432						
ANR	611511	Symbol	NULL		611432						
ANR	611512	Symbol	block -> start		611432						
ANR	611513	Symbol	* fcn		611432						
ANR	611514	Symbol	fcn -> bbs		611432						
ANR	611515	Symbol	fcnAddBB		611432						
ANR	611516	Symbol	fcn -> addr		611432						
ANR	611517	Symbol	block		611432						
ANR	611518	Symbol	fcn_t		611432						
ANR	611519	Symbol	* block		611432						
ANR	611520	Symbol	r_list_new		611432						
ANR	611521	Function	fcnFree	92:0:1769:1842							
ANR	611522	FunctionDef	fcnFree (fcn_t * fcn)		611521	0					
ANR	611523	CompoundStatement		92:33:1802:1842	611521	0					
ANR	611524	ExpressionStatement	r_list_free ( fcn -> bbs )	93:1:1805:1827	611521	0	True				
ANR	611525	CallExpression	r_list_free ( fcn -> bbs )		611521	0					
ANR	611526	Callee	r_list_free		611521	0					
ANR	611527	Identifier	r_list_free		611521	0					
ANR	611528	ArgumentList	fcn -> bbs		611521	1					
ANR	611529	Argument	fcn -> bbs		611521	0					
ANR	611530	PtrMemberAccess	fcn -> bbs		611521	0					
ANR	611531	Identifier	fcn		611521	0					
ANR	611532	Identifier	bbs		611521	1					
ANR	611533	ExpressionStatement	free ( fcn )	94:1:1830:1840	611521	1	True				
ANR	611534	CallExpression	free ( fcn )		611521	0					
ANR	611535	Callee	free		611521	0					
ANR	611536	Identifier	free		611521	0					
ANR	611537	ArgumentList	fcn		611521	1					
ANR	611538	Argument	fcn		611521	0					
ANR	611539	Identifier	fcn		611521	0					
ANR	611540	ReturnType	static void		611521	1					
ANR	611541	Identifier	fcnFree		611521	2					
ANR	611542	ParameterList	fcn_t * fcn		611521	3					
ANR	611543	Parameter	fcn_t * fcn	92:21:1790:1799	611521	0	True				
ANR	611544	ParameterType	fcn_t *		611521	0					
ANR	611545	Identifier	fcn		611521	1					
ANR	611546	CFGEntryNode	ENTRY		611521		True				
ANR	611547	CFGExitNode	EXIT		611521		True				
ANR	611548	Symbol	fcn		611521						
ANR	611549	Symbol	* fcn		611521						
ANR	611550	Symbol	fcn -> bbs		611521						
ANR	611551	Function	bbCMP	97:0:1845:1958							
ANR	611552	FunctionDef	"bbCMP (void * _a , void * _b)"		611551	0					
ANR	611553	CompoundStatement		97:38:1883:1958	611551	0					
ANR	611554	IdentifierDeclStatement	bb_t * a = ( bb_t * ) _a ;	98:1:1886:1905	611551	0	True				
ANR	611555	IdentifierDecl	* a = ( bb_t * ) _a		611551	0					
ANR	611556	IdentifierDeclType	bb_t *		611551	0					
ANR	611557	Identifier	a		611551	1					
ANR	611558	AssignmentExpression	* a = ( bb_t * ) _a		611551	2		=			
ANR	611559	Identifier	a		611551	0					
ANR	611560	CastExpression	( bb_t * ) _a		611551	1					
ANR	611561	CastTarget	bb_t *		611551	0					
ANR	611562	Identifier	_a		611551	1					
ANR	611563	IdentifierDeclStatement	bb_t * b = ( bb_t * ) _b ;	99:1:1908:1927	611551	1	True				
ANR	611564	IdentifierDecl	* b = ( bb_t * ) _b		611551	0					
ANR	611565	IdentifierDeclType	bb_t *		611551	0					
ANR	611566	Identifier	b		611551	1					
ANR	611567	AssignmentExpression	* b = ( bb_t * ) _b		611551	2		=			
ANR	611568	Identifier	b		611551	0					
ANR	611569	CastExpression	( bb_t * ) _b		611551	1					
ANR	611570	CastTarget	bb_t *		611551	0					
ANR	611571	Identifier	_b		611551	1					
ANR	611572	ReturnStatement	return b -> start - a -> start ;	100:1:1930:1956	611551	2	True				
ANR	611573	AdditiveExpression	b -> start - a -> start		611551	0		-			
ANR	611574	PtrMemberAccess	b -> start		611551	0					
ANR	611575	Identifier	b		611551	0					
ANR	611576	Identifier	start		611551	1					
ANR	611577	PtrMemberAccess	a -> start		611551	1					
ANR	611578	Identifier	a		611551	0					
ANR	611579	Identifier	start		611551	1					
ANR	611580	ReturnType	static int		611551	1					
ANR	611581	Identifier	bbCMP		611551	2					
ANR	611582	ParameterList	"void * _a , void * _b"		611551	3					
ANR	611583	Parameter	void * _a	97:18:1863:1870	611551	0	True				
ANR	611584	ParameterType	void *		611551	0					
ANR	611585	Identifier	_a		611551	1					
ANR	611586	Parameter	void * _b	97:28:1873:1880	611551	1	True				
ANR	611587	ParameterType	void *		611551	0					
ANR	611588	Identifier	_b		611551	1					
ANR	611589	CFGEntryNode	ENTRY		611551		True				
ANR	611590	CFGExitNode	EXIT		611551		True				
ANR	611591	Symbol	a		611551						
ANR	611592	Symbol	_a		611551						
ANR	611593	Symbol	b		611551						
ANR	611594	Symbol	_b		611551						
ANR	611595	Symbol	b -> start		611551						
ANR	611596	Symbol	* a		611551						
ANR	611597	Symbol	a -> start		611551						
ANR	611598	Symbol	* b		611551						
ANR	611599	Function	initBB	103:0:1961:2267							
ANR	611600	FunctionDef	"initBB (bb_t * bb , ut64 start , ut64 end , ut64 jump , ut64 fail , bb_type_t type , int score , int reached , int called)"		611599	0					
ANR	611601	CompoundStatement		103:126:2087:2267	611599	0					
ANR	611602	IfStatement	if ( bb )		611599	0					
ANR	611603	Condition	bb	104:5:2094:2095	611599	0	True				
ANR	611604	Identifier	bb		611599	0					
ANR	611605	CompoundStatement		2:9:10:10	611599	1					
ANR	611606	ExpressionStatement	bb -> start = start	105:2:2102:2119	611599	0	True				
ANR	611607	AssignmentExpression	bb -> start = start		611599	0		=			
ANR	611608	PtrMemberAccess	bb -> start		611599	0					
ANR	611609	Identifier	bb		611599	0					
ANR	611610	Identifier	start		611599	1					
ANR	611611	Identifier	start		611599	1					
ANR	611612	ExpressionStatement	bb -> end = end	106:2:2123:2136	611599	1	True				
ANR	611613	AssignmentExpression	bb -> end = end		611599	0		=			
ANR	611614	PtrMemberAccess	bb -> end		611599	0					
ANR	611615	Identifier	bb		611599	0					
ANR	611616	Identifier	end		611599	1					
ANR	611617	Identifier	end		611599	1					
ANR	611618	ExpressionStatement	bb -> jump = jump	107:2:2140:2155	611599	2	True				
ANR	611619	AssignmentExpression	bb -> jump = jump		611599	0		=			
ANR	611620	PtrMemberAccess	bb -> jump		611599	0					
ANR	611621	Identifier	bb		611599	0					
ANR	611622	Identifier	jump		611599	1					
ANR	611623	Identifier	jump		611599	1					
ANR	611624	ExpressionStatement	bb -> fail = fail	108:2:2159:2174	611599	3	True				
ANR	611625	AssignmentExpression	bb -> fail = fail		611599	0		=			
ANR	611626	PtrMemberAccess	bb -> fail		611599	0					
ANR	611627	Identifier	bb		611599	0					
ANR	611628	Identifier	fail		611599	1					
ANR	611629	Identifier	fail		611599	1					
ANR	611630	ExpressionStatement	bb -> type = type	109:2:2178:2193	611599	4	True				
ANR	611631	AssignmentExpression	bb -> type = type		611599	0		=			
ANR	611632	PtrMemberAccess	bb -> type		611599	0					
ANR	611633	Identifier	bb		611599	0					
ANR	611634	Identifier	type		611599	1					
ANR	611635	Identifier	type		611599	1					
ANR	611636	ExpressionStatement	bb -> score = score	110:2:2197:2214	611599	5	True				
ANR	611637	AssignmentExpression	bb -> score = score		611599	0		=			
ANR	611638	PtrMemberAccess	bb -> score		611599	0					
ANR	611639	Identifier	bb		611599	0					
ANR	611640	Identifier	score		611599	1					
ANR	611641	Identifier	score		611599	1					
ANR	611642	ExpressionStatement	bb -> reached = reached	111:2:2218:2239	611599	6	True				
ANR	611643	AssignmentExpression	bb -> reached = reached		611599	0		=			
ANR	611644	PtrMemberAccess	bb -> reached		611599	0					
ANR	611645	Identifier	bb		611599	0					
ANR	611646	Identifier	reached		611599	1					
ANR	611647	Identifier	reached		611599	1					
ANR	611648	ExpressionStatement	bb -> called = called	112:2:2243:2262	611599	7	True				
ANR	611649	AssignmentExpression	bb -> called = called		611599	0		=			
ANR	611650	PtrMemberAccess	bb -> called		611599	0					
ANR	611651	Identifier	bb		611599	0					
ANR	611652	Identifier	called		611599	1					
ANR	611653	Identifier	called		611599	1					
ANR	611654	ReturnType	static void		611599	1					
ANR	611655	Identifier	initBB		611599	2					
ANR	611656	ParameterList	"bb_t * bb , ut64 start , ut64 end , ut64 jump , ut64 fail , bb_type_t type , int score , int reached , int called"		611599	3					
ANR	611657	Parameter	bb_t * bb	103:20:1981:1988	611599	0	True				
ANR	611658	ParameterType	bb_t *		611599	0					
ANR	611659	Identifier	bb		611599	1					
ANR	611660	Parameter	ut64 start	103:30:1991:2000	611599	1	True				
ANR	611661	ParameterType	ut64		611599	0					
ANR	611662	Identifier	start		611599	1					
ANR	611663	Parameter	ut64 end	103:42:2003:2010	611599	2	True				
ANR	611664	ParameterType	ut64		611599	0					
ANR	611665	Identifier	end		611599	1					
ANR	611666	Parameter	ut64 jump	103:52:2013:2021	611599	3	True				
ANR	611667	ParameterType	ut64		611599	0					
ANR	611668	Identifier	jump		611599	1					
ANR	611669	Parameter	ut64 fail	103:63:2024:2032	611599	4	True				
ANR	611670	ParameterType	ut64		611599	0					
ANR	611671	Identifier	fail		611599	1					
ANR	611672	Parameter	bb_type_t type	103:74:2035:2048	611599	5	True				
ANR	611673	ParameterType	bb_type_t		611599	0					
ANR	611674	Identifier	type		611599	1					
ANR	611675	Parameter	int score	103:90:2051:2059	611599	6	True				
ANR	611676	ParameterType	int		611599	0					
ANR	611677	Identifier	score		611599	1					
ANR	611678	Parameter	int reached	103:101:2062:2072	611599	7	True				
ANR	611679	ParameterType	int		611599	0					
ANR	611680	Identifier	reached		611599	1					
ANR	611681	Parameter	int called	103:114:2075:2084	611599	8	True				
ANR	611682	ParameterType	int		611599	0					
ANR	611683	Identifier	called		611599	1					
ANR	611684	CFGEntryNode	ENTRY		611599		True				
ANR	611685	CFGExitNode	EXIT		611599		True				
ANR	611686	Symbol	bb		611599						
ANR	611687	Symbol	bb -> fail		611599						
ANR	611688	Symbol	bb -> called		611599						
ANR	611689	Symbol	called		611599						
ANR	611690	Symbol	* bb		611599						
ANR	611691	Symbol	bb -> reached		611599						
ANR	611692	Symbol	bb -> start		611599						
ANR	611693	Symbol	start		611599						
ANR	611694	Symbol	type		611599						
ANR	611695	Symbol	bb -> score		611599						
ANR	611696	Symbol	fail		611599						
ANR	611697	Symbol	score		611599						
ANR	611698	Symbol	bb -> jump		611599						
ANR	611699	Symbol	reached		611599						
ANR	611700	Symbol	end		611599						
ANR	611701	Symbol	bb -> type		611599						
ANR	611702	Symbol	bb -> end		611599						
ANR	611703	Symbol	jump		611599						
ANR	611704	Function	addBB	116:0:2270:3299							
ANR	611705	FunctionDef	"addBB (RList * block_list , ut64 start , ut64 end , ut64 jump , ut64 fail , bb_type_t type , int score)"		611704	0					
ANR	611706	CompoundStatement		116:108:2378:3299	611704	0					
ANR	611707	IdentifierDeclStatement	bb_t * bb = ( bb_t * ) R_NEW0 ( bb_t ) ;	117:1:2381:2413	611704	0	True				
ANR	611708	IdentifierDecl	* bb = ( bb_t * ) R_NEW0 ( bb_t )		611704	0					
ANR	611709	IdentifierDeclType	bb_t *		611704	0					
ANR	611710	Identifier	bb		611704	1					
ANR	611711	AssignmentExpression	* bb = ( bb_t * ) R_NEW0 ( bb_t )		611704	2		=			
ANR	611712	Identifier	bb		611704	0					
ANR	611713	CastExpression	( bb_t * ) R_NEW0 ( bb_t )		611704	1					
ANR	611714	CastTarget	bb_t *		611704	0					
ANR	611715	CallExpression	R_NEW0 ( bb_t )		611704	1					
ANR	611716	Callee	R_NEW0		611704	0					
ANR	611717	Identifier	R_NEW0		611704	0					
ANR	611718	ArgumentList	bb_t		611704	1					
ANR	611719	Argument	bb_t		611704	0					
ANR	611720	Identifier	bb_t		611704	0					
ANR	611721	IfStatement	if ( ! bb )		611704	1					
ANR	611722	Condition	! bb	118:5:2420:2422	611704	0	True				
ANR	611723	UnaryOperationExpression	! bb		611704	0					
ANR	611724	UnaryOperator	!		611704	0					
ANR	611725	Identifier	bb		611704	1					
ANR	611726	CompoundStatement		3:10:46:46	611704	1					
ANR	611727	ExpressionStatement	"eprintf ( ""Failed to calloc mem for new basic block!\\n"" )"	119:2:2429:2484	611704	0	True				
ANR	611728	CallExpression	"eprintf ( ""Failed to calloc mem for new basic block!\\n"" )"		611704	0					
ANR	611729	Callee	eprintf		611704	0					
ANR	611730	Identifier	eprintf		611704	0					
ANR	611731	ArgumentList	"""Failed to calloc mem for new basic block!\\n"""		611704	1					
ANR	611732	Argument	"""Failed to calloc mem for new basic block!\\n"""		611704	0					
ANR	611733	PrimaryExpression	"""Failed to calloc mem for new basic block!\\n"""		611704	0					
ANR	611734	ReturnStatement	return false ;	120:2:2488:2500	611704	1	True				
ANR	611735	Identifier	false		611704	0					
ANR	611736	ExpressionStatement	"initBB ( bb , start , end , jump , fail , type , score , 0 , 0 )"	122:1:2506:2560	611704	2	True				
ANR	611737	CallExpression	"initBB ( bb , start , end , jump , fail , type , score , 0 , 0 )"		611704	0					
ANR	611738	Callee	initBB		611704	0					
ANR	611739	Identifier	initBB		611704	0					
ANR	611740	ArgumentList	bb		611704	1					
ANR	611741	Argument	bb		611704	0					
ANR	611742	Identifier	bb		611704	0					
ANR	611743	Argument	start		611704	1					
ANR	611744	Identifier	start		611704	0					
ANR	611745	Argument	end		611704	2					
ANR	611746	Identifier	end		611704	0					
ANR	611747	Argument	jump		611704	3					
ANR	611748	Identifier	jump		611704	0					
ANR	611749	Argument	fail		611704	4					
ANR	611750	Identifier	fail		611704	0					
ANR	611751	Argument	type		611704	5					
ANR	611752	Identifier	type		611704	0					
ANR	611753	Argument	score		611704	6					
ANR	611754	Identifier	score		611704	0					
ANR	611755	Argument	0		611704	7					
ANR	611756	PrimaryExpression	0		611704	0					
ANR	611757	Argument	0		611704	8					
ANR	611758	PrimaryExpression	0		611704	0					
ANR	611759	IfStatement	if ( jump < UT64_MAX )		611704	3					
ANR	611760	Condition	jump < UT64_MAX	123:5:2567:2581	611704	0	True				
ANR	611761	RelationalExpression	jump < UT64_MAX		611704	0		<			
ANR	611762	Identifier	jump		611704	0					
ANR	611763	Identifier	UT64_MAX		611704	1					
ANR	611764	CompoundStatement		9:2:209:246	611704	1					
ANR	611765	IdentifierDeclStatement	bb_t * jump_bb = ( bb_t * ) R_NEW0 ( bb_t ) ;	124:2:2588:2625	611704	0	True				
ANR	611766	IdentifierDecl	* jump_bb = ( bb_t * ) R_NEW0 ( bb_t )		611704	0					
ANR	611767	IdentifierDeclType	bb_t *		611704	0					
ANR	611768	Identifier	jump_bb		611704	1					
ANR	611769	AssignmentExpression	* jump_bb = ( bb_t * ) R_NEW0 ( bb_t )		611704	2		=			
ANR	611770	Identifier	jump_bb		611704	0					
ANR	611771	CastExpression	( bb_t * ) R_NEW0 ( bb_t )		611704	1					
ANR	611772	CastTarget	bb_t *		611704	0					
ANR	611773	CallExpression	R_NEW0 ( bb_t )		611704	1					
ANR	611774	Callee	R_NEW0		611704	0					
ANR	611775	Identifier	R_NEW0		611704	0					
ANR	611776	ArgumentList	bb_t		611704	1					
ANR	611777	Argument	bb_t		611704	0					
ANR	611778	Identifier	bb_t		611704	0					
ANR	611779	IfStatement	if ( ! jump_bb )		611704	1					
ANR	611780	Condition	! jump_bb	125:6:2633:2640	611704	0	True				
ANR	611781	UnaryOperationExpression	! jump_bb		611704	0					
ANR	611782	UnaryOperator	!		611704	0					
ANR	611783	Identifier	jump_bb		611704	1					
ANR	611784	CompoundStatement		10:16:264:264	611704	1					
ANR	611785	ExpressionStatement	"eprintf ( ""Failed to allocate memory for jump block\\n"" )"	126:3:2648:2702	611704	0	True				
ANR	611786	CallExpression	"eprintf ( ""Failed to allocate memory for jump block\\n"" )"		611704	0					
ANR	611787	Callee	eprintf		611704	0					
ANR	611788	Identifier	eprintf		611704	0					
ANR	611789	ArgumentList	"""Failed to allocate memory for jump block\\n"""		611704	1					
ANR	611790	Argument	"""Failed to allocate memory for jump block\\n"""		611704	0					
ANR	611791	PrimaryExpression	"""Failed to allocate memory for jump block\\n"""		611704	0					
ANR	611792	ExpressionStatement	free ( bb )	127:3:2707:2716	611704	1	True				
ANR	611793	CallExpression	free ( bb )		611704	0					
ANR	611794	Callee	free		611704	0					
ANR	611795	Identifier	free		611704	0					
ANR	611796	ArgumentList	bb		611704	1					
ANR	611797	Argument	bb		611704	0					
ANR	611798	Identifier	bb		611704	0					
ANR	611799	ReturnStatement	return false ;	128:3:2721:2733	611704	2	True				
ANR	611800	Identifier	false		611704	0					
ANR	611801	IfStatement	if ( type == CALL )		611704	2					
ANR	611802	Condition	type == CALL	130:6:2745:2756	611704	0	True				
ANR	611803	EqualityExpression	type == CALL		611704	0		==			
ANR	611804	Identifier	type		611704	0					
ANR	611805	Identifier	CALL		611704	1					
ANR	611806	CompoundStatement		15:20:380:380	611704	1					
ANR	611807	ExpressionStatement	"initBB ( jump_bb , jump , UT64_MAX , UT64_MAX , UT64_MAX , CALL , 0 , 1 , 1 )"	131:3:2764:2831	611704	0	True				
ANR	611808	CallExpression	"initBB ( jump_bb , jump , UT64_MAX , UT64_MAX , UT64_MAX , CALL , 0 , 1 , 1 )"		611704	0					
ANR	611809	Callee	initBB		611704	0					
ANR	611810	Identifier	initBB		611704	0					
ANR	611811	ArgumentList	jump_bb		611704	1					
ANR	611812	Argument	jump_bb		611704	0					
ANR	611813	Identifier	jump_bb		611704	0					
ANR	611814	Argument	jump		611704	1					
ANR	611815	Identifier	jump		611704	0					
ANR	611816	Argument	UT64_MAX		611704	2					
ANR	611817	Identifier	UT64_MAX		611704	0					
ANR	611818	Argument	UT64_MAX		611704	3					
ANR	611819	Identifier	UT64_MAX		611704	0					
ANR	611820	Argument	UT64_MAX		611704	4					
ANR	611821	Identifier	UT64_MAX		611704	0					
ANR	611822	Argument	CALL		611704	5					
ANR	611823	Identifier	CALL		611704	0					
ANR	611824	Argument	0		611704	6					
ANR	611825	PrimaryExpression	0		611704	0					
ANR	611826	Argument	1		611704	7					
ANR	611827	PrimaryExpression	1		611704	0					
ANR	611828	Argument	1		611704	8					
ANR	611829	PrimaryExpression	1		611704	0					
ANR	611830	ElseStatement	else		611704	0					
ANR	611831	CompoundStatement		17:9:463:463	611704	0					
ANR	611832	ExpressionStatement	"initBB ( jump_bb , jump , UT64_MAX , UT64_MAX , UT64_MAX , JUMP , 0 , 1 , 0 )"	133:3:2847:2914	611704	0	True				
ANR	611833	CallExpression	"initBB ( jump_bb , jump , UT64_MAX , UT64_MAX , UT64_MAX , JUMP , 0 , 1 , 0 )"		611704	0					
ANR	611834	Callee	initBB		611704	0					
ANR	611835	Identifier	initBB		611704	0					
ANR	611836	ArgumentList	jump_bb		611704	1					
ANR	611837	Argument	jump_bb		611704	0					
ANR	611838	Identifier	jump_bb		611704	0					
ANR	611839	Argument	jump		611704	1					
ANR	611840	Identifier	jump		611704	0					
ANR	611841	Argument	UT64_MAX		611704	2					
ANR	611842	Identifier	UT64_MAX		611704	0					
ANR	611843	Argument	UT64_MAX		611704	3					
ANR	611844	Identifier	UT64_MAX		611704	0					
ANR	611845	Argument	UT64_MAX		611704	4					
ANR	611846	Identifier	UT64_MAX		611704	0					
ANR	611847	Argument	JUMP		611704	5					
ANR	611848	Identifier	JUMP		611704	0					
ANR	611849	Argument	0		611704	6					
ANR	611850	PrimaryExpression	0		611704	0					
ANR	611851	Argument	1		611704	7					
ANR	611852	PrimaryExpression	1		611704	0					
ANR	611853	Argument	0		611704	8					
ANR	611854	PrimaryExpression	0		611704	0					
ANR	611855	ExpressionStatement	"r_list_append ( block_list , jump_bb )"	135:2:2922:2957	611704	3	True				
ANR	611856	CallExpression	"r_list_append ( block_list , jump_bb )"		611704	0					
ANR	611857	Callee	r_list_append		611704	0					
ANR	611858	Identifier	r_list_append		611704	0					
ANR	611859	ArgumentList	block_list		611704	1					
ANR	611860	Argument	block_list		611704	0					
ANR	611861	Identifier	block_list		611704	0					
ANR	611862	Argument	jump_bb		611704	1					
ANR	611863	Identifier	jump_bb		611704	0					
ANR	611864	IfStatement	if ( fail < UT64_MAX )		611704	4					
ANR	611865	Condition	fail < UT64_MAX	137:5:2967:2981	611704	0	True				
ANR	611866	RelationalExpression	fail < UT64_MAX		611704	0		<			
ANR	611867	Identifier	fail		611704	0					
ANR	611868	Identifier	UT64_MAX		611704	1					
ANR	611869	CompoundStatement		23:2:609:646	611704	1					
ANR	611870	IdentifierDeclStatement	bb_t * fail_bb = ( bb_t * ) R_NEW0 ( bb_t ) ;	138:2:2988:3025	611704	0	True				
ANR	611871	IdentifierDecl	* fail_bb = ( bb_t * ) R_NEW0 ( bb_t )		611704	0					
ANR	611872	IdentifierDeclType	bb_t *		611704	0					
ANR	611873	Identifier	fail_bb		611704	1					
ANR	611874	AssignmentExpression	* fail_bb = ( bb_t * ) R_NEW0 ( bb_t )		611704	2		=			
ANR	611875	Identifier	fail_bb		611704	0					
ANR	611876	CastExpression	( bb_t * ) R_NEW0 ( bb_t )		611704	1					
ANR	611877	CastTarget	bb_t *		611704	0					
ANR	611878	CallExpression	R_NEW0 ( bb_t )		611704	1					
ANR	611879	Callee	R_NEW0		611704	0					
ANR	611880	Identifier	R_NEW0		611704	0					
ANR	611881	ArgumentList	bb_t		611704	1					
ANR	611882	Argument	bb_t		611704	0					
ANR	611883	Identifier	bb_t		611704	0					
ANR	611884	IfStatement	if ( ! fail_bb )		611704	1					
ANR	611885	Condition	! fail_bb	139:6:3033:3040	611704	0	True				
ANR	611886	UnaryOperationExpression	! fail_bb		611704	0					
ANR	611887	UnaryOperator	!		611704	0					
ANR	611888	Identifier	fail_bb		611704	1					
ANR	611889	CompoundStatement		24:16:664:664	611704	1					
ANR	611890	ExpressionStatement	"eprintf ( ""Failed to allocate memory for fail block\\n"" )"	140:3:3048:3102	611704	0	True				
ANR	611891	CallExpression	"eprintf ( ""Failed to allocate memory for fail block\\n"" )"		611704	0					
ANR	611892	Callee	eprintf		611704	0					
ANR	611893	Identifier	eprintf		611704	0					
ANR	611894	ArgumentList	"""Failed to allocate memory for fail block\\n"""		611704	1					
ANR	611895	Argument	"""Failed to allocate memory for fail block\\n"""		611704	0					
ANR	611896	PrimaryExpression	"""Failed to allocate memory for fail block\\n"""		611704	0					
ANR	611897	ExpressionStatement	free ( bb )	141:3:3107:3116	611704	1	True				
ANR	611898	CallExpression	free ( bb )		611704	0					
ANR	611899	Callee	free		611704	0					
ANR	611900	Identifier	free		611704	0					
ANR	611901	ArgumentList	bb		611704	1					
ANR	611902	Argument	bb		611704	0					
ANR	611903	Identifier	bb		611704	0					
ANR	611904	ReturnStatement	return false ;	142:3:3121:3133	611704	2	True				
ANR	611905	Identifier	false		611704	0					
ANR	611906	ExpressionStatement	"initBB ( fail_bb , fail , UT64_MAX , UT64_MAX , UT64_MAX , FAIL , 0 , 1 , 0 )"	144:2:3141:3208	611704	2	True				
ANR	611907	CallExpression	"initBB ( fail_bb , fail , UT64_MAX , UT64_MAX , UT64_MAX , FAIL , 0 , 1 , 0 )"		611704	0					
ANR	611908	Callee	initBB		611704	0					
ANR	611909	Identifier	initBB		611704	0					
ANR	611910	ArgumentList	fail_bb		611704	1					
ANR	611911	Argument	fail_bb		611704	0					
ANR	611912	Identifier	fail_bb		611704	0					
ANR	611913	Argument	fail		611704	1					
ANR	611914	Identifier	fail		611704	0					
ANR	611915	Argument	UT64_MAX		611704	2					
ANR	611916	Identifier	UT64_MAX		611704	0					
ANR	611917	Argument	UT64_MAX		611704	3					
ANR	611918	Identifier	UT64_MAX		611704	0					
ANR	611919	Argument	UT64_MAX		611704	4					
ANR	611920	Identifier	UT64_MAX		611704	0					
ANR	611921	Argument	FAIL		611704	5					
ANR	611922	Identifier	FAIL		611704	0					
ANR	611923	Argument	0		611704	6					
ANR	611924	PrimaryExpression	0		611704	0					
ANR	611925	Argument	1		611704	7					
ANR	611926	PrimaryExpression	1		611704	0					
ANR	611927	Argument	0		611704	8					
ANR	611928	PrimaryExpression	0		611704	0					
ANR	611929	ExpressionStatement	"r_list_append ( block_list , fail_bb )"	145:2:3212:3247	611704	3	True				
ANR	611930	CallExpression	"r_list_append ( block_list , fail_bb )"		611704	0					
ANR	611931	Callee	r_list_append		611704	0					
ANR	611932	Identifier	r_list_append		611704	0					
ANR	611933	ArgumentList	block_list		611704	1					
ANR	611934	Argument	block_list		611704	0					
ANR	611935	Identifier	block_list		611704	0					
ANR	611936	Argument	fail_bb		611704	1					
ANR	611937	Identifier	fail_bb		611704	0					
ANR	611938	ExpressionStatement	"r_list_append ( block_list , bb )"	147:1:3253:3283	611704	5	True				
ANR	611939	CallExpression	"r_list_append ( block_list , bb )"		611704	0					
ANR	611940	Callee	r_list_append		611704	0					
ANR	611941	Identifier	r_list_append		611704	0					
ANR	611942	ArgumentList	block_list		611704	1					
ANR	611943	Argument	block_list		611704	0					
ANR	611944	Identifier	block_list		611704	0					
ANR	611945	Argument	bb		611704	1					
ANR	611946	Identifier	bb		611704	0					
ANR	611947	ReturnStatement	return true ;	148:1:3286:3297	611704	6	True				
ANR	611948	Identifier	true		611704	0					
ANR	611949	ReturnType	static bool		611704	1					
ANR	611950	Identifier	addBB		611704	2					
ANR	611951	ParameterList	"RList * block_list , ut64 start , ut64 end , ut64 jump , ut64 fail , bb_type_t type , int score"		611704	3					
ANR	611952	Parameter	RList * block_list	116:18:2288:2304	611704	0	True				
ANR	611953	ParameterType	RList *		611704	0					
ANR	611954	Identifier	block_list		611704	1					
ANR	611955	Parameter	ut64 start	116:37:2307:2316	611704	1	True				
ANR	611956	ParameterType	ut64		611704	0					
ANR	611957	Identifier	start		611704	1					
ANR	611958	Parameter	ut64 end	116:49:2319:2326	611704	2	True				
ANR	611959	ParameterType	ut64		611704	0					
ANR	611960	Identifier	end		611704	1					
ANR	611961	Parameter	ut64 jump	116:59:2329:2337	611704	3	True				
ANR	611962	ParameterType	ut64		611704	0					
ANR	611963	Identifier	jump		611704	1					
ANR	611964	Parameter	ut64 fail	116:70:2340:2348	611704	4	True				
ANR	611965	ParameterType	ut64		611704	0					
ANR	611966	Identifier	fail		611704	1					
ANR	611967	Parameter	bb_type_t type	116:81:2351:2364	611704	5	True				
ANR	611968	ParameterType	bb_type_t		611704	0					
ANR	611969	Identifier	type		611704	1					
ANR	611970	Parameter	int score	116:97:2367:2375	611704	6	True				
ANR	611971	ParameterType	int		611704	0					
ANR	611972	Identifier	score		611704	1					
ANR	611973	CFGEntryNode	ENTRY		611704		True				
ANR	611974	CFGExitNode	EXIT		611704		True				
ANR	611975	Symbol	bb		611704						
ANR	611976	Symbol	CALL		611704						
ANR	611977	Symbol	start		611704						
ANR	611978	Symbol	false		611704						
ANR	611979	Symbol	type		611704						
ANR	611980	Symbol	JUMP		611704						
ANR	611981	Symbol	fail		611704						
ANR	611982	Symbol	score		611704						
ANR	611983	Symbol	R_NEW0		611704						
ANR	611984	Symbol	true		611704						
ANR	611985	Symbol	end		611704						
ANR	611986	Symbol	fail_bb		611704						
ANR	611987	Symbol	block_list		611704						
ANR	611988	Symbol	bb_t		611704						
ANR	611989	Symbol	UT64_MAX		611704						
ANR	611990	Symbol	jump_bb		611704						
ANR	611991	Symbol	FAIL		611704						
ANR	611992	Symbol	jump		611704						
ANR	611993	Function	dump_block	151:0:3302:3488							
ANR	611994	FunctionDef	dump_block (bb_t * block)		611993	0					
ANR	611995	CompoundStatement		151:29:3331:3488	611993	0					
ANR	611996	Statement	eprintf	152:1:3334:3340	611993	0	True				
ANR	611997	Statement	(	152:9:3342:3342	611993	1	True				
ANR	611998	Statement	"""s: 0x%"""	152:10:3343:3350	611993	2	True				
ANR	611999	Statement	PFMT64x	152:18:3351:3357	611993	3	True				
ANR	612000	Statement	""" e: 0x%"""	152:25:3358:3366	611993	4	True				
ANR	612001	Statement	PFMT64x	152:34:3367:3373	611993	5	True				
ANR	612002	Statement	""" j: 0x%"""	152:41:3374:3382	611993	6	True				
ANR	612003	Statement	PFMT64x	152:50:3383:3389	611993	7	True				
ANR	612004	Statement	""" f: 0x%"""	152:57:3390:3398	611993	8	True				
ANR	612005	Statement	PFMT64x	152:66:3399:3405	611993	9	True				
ANR	612006	Statement	""" t: %d\\n"""	152:73:3406:3415	611993	10	True				
ANR	612007	Statement	","	153:3:3420:3420	611993	11	True				
ANR	612008	Statement	block	153:5:3422:3426	611993	12	True				
ANR	612009	Statement	->	153:10:3427:3428	611993	13	True				
ANR	612010	Statement	start	153:12:3429:3433	611993	14	True				
ANR	612011	Statement	","	153:17:3434:3434	611993	15	True				
ANR	612012	Statement	block	153:19:3436:3440	611993	16	True				
ANR	612013	Statement	->	153:24:3441:3442	611993	17	True				
ANR	612014	Statement	end	153:26:3443:3445	611993	18	True				
ANR	612015	Statement	","	153:29:3446:3446	611993	19	True				
ANR	612016	Statement	block	153:31:3448:3452	611993	20	True				
ANR	612017	Statement	->	153:36:3453:3454	611993	21	True				
ANR	612018	Statement	jump	153:38:3455:3458	611993	22	True				
ANR	612019	Statement	","	153:42:3459:3459	611993	23	True				
ANR	612020	Statement	block	153:44:3461:3465	611993	24	True				
ANR	612021	Statement	->	153:49:3466:3467	611993	25	True				
ANR	612022	Statement	fail	153:51:3468:3471	611993	26	True				
ANR	612023	Statement	","	153:55:3472:3472	611993	27	True				
ANR	612024	Statement	block	153:57:3474:3478	611993	28	True				
ANR	612025	Statement	->	153:62:3479:3480	611993	29	True				
ANR	612026	Statement	type	153:64:3481:3484	611993	30	True				
ANR	612027	Statement	)	153:68:3485:3485	611993	31	True				
ANR	612028	ExpressionStatement		153:69:3486:3486	611993	32	True				
ANR	612029	ReturnType	void		611993	1					
ANR	612030	Identifier	dump_block		611993	2					
ANR	612031	ParameterList	bb_t * block		611993	3					
ANR	612032	Parameter	bb_t * block	151:16:3318:3328	611993	0	True				
ANR	612033	ParameterType	bb_t *		611993	0					
ANR	612034	Identifier	block		611993	1					
ANR	612035	CFGEntryNode	ENTRY		611993		True				
ANR	612036	CFGExitNode	EXIT		611993		True				
ANR	612037	Symbol	block		611993						
ANR	612038	Function	dump_blocks	156:0:3491:3625							
ANR	612039	FunctionDef	dump_blocks (RList * list)		612038	0					
ANR	612040	CompoundStatement		156:31:3522:3625	612038	0					
ANR	612041	IdentifierDeclStatement	RListIter * iter ;	157:1:3525:3540	612038	0	True				
ANR	612042	IdentifierDecl	* iter		612038	0					
ANR	612043	IdentifierDeclType	RListIter *		612038	0					
ANR	612044	Identifier	iter		612038	1					
ANR	612045	IdentifierDeclStatement	bb_t * block = NULL ;	158:1:3543:3561	612038	1	True				
ANR	612046	IdentifierDecl	* block = NULL		612038	0					
ANR	612047	IdentifierDeclType	bb_t *		612038	0					
ANR	612048	Identifier	block		612038	1					
ANR	612049	AssignmentExpression	* block = NULL		612038	2		=			
ANR	612050	Identifier	NULL		612038	0					
ANR	612051	Identifier	NULL		612038	1					
ANR	612052	Statement	r_list_foreach	159:1:3564:3577	612038	2	True				
ANR	612053	Statement	(	159:16:3579:3579	612038	3	True				
ANR	612054	Statement	list	159:17:3580:3583	612038	4	True				
ANR	612055	Statement	","	159:21:3584:3584	612038	5	True				
ANR	612056	Statement	iter	159:23:3586:3589	612038	6	True				
ANR	612057	Statement	","	159:27:3590:3590	612038	7	True				
ANR	612058	Statement	block	159:29:3592:3596	612038	8	True				
ANR	612059	Statement	)	159:34:3597:3597	612038	9	True				
ANR	612060	CompoundStatement		4:36:76:76	612038	10					
ANR	612061	ExpressionStatement	dump_block ( block )	160:2:3603:3620	612038	0	True				
ANR	612062	CallExpression	dump_block ( block )		612038	0					
ANR	612063	Callee	dump_block		612038	0					
ANR	612064	Identifier	dump_block		612038	0					
ANR	612065	ArgumentList	block		612038	1					
ANR	612066	Argument	block		612038	0					
ANR	612067	Identifier	block		612038	0					
ANR	612068	ReturnType	void		612038	1					
ANR	612069	Identifier	dump_blocks		612038	2					
ANR	612070	ParameterList	RList * list		612038	3					
ANR	612071	Parameter	RList * list	156:18:3509:3519	612038	0	True				
ANR	612072	ParameterType	RList *		612038	0					
ANR	612073	Identifier	list		612038	1					
ANR	612074	CFGEntryNode	ENTRY		612038		True				
ANR	612075	CFGExitNode	EXIT		612038		True				
ANR	612076	Symbol	NULL		612038						
ANR	612077	Symbol	iter		612038						
ANR	612078	Symbol	block		612038						
ANR	612079	Symbol	list		612038						
ANR	612080	Function	checkFunction	164:0:3628:3748							
ANR	612081	FunctionDef	checkFunction (fcn_t * fcn)		612080	0					
ANR	612082	CompoundStatement		164:38:3666:3748	612080	0					
ANR	612083	IfStatement	if ( fcn && fcn -> ends > 0 && fcn -> size > 0 )		612080	0					
ANR	612084	Condition	fcn && fcn -> ends > 0 && fcn -> size > 0	165:5:3673:3709	612080	0	True				
ANR	612085	AndExpression	fcn && fcn -> ends > 0 && fcn -> size > 0		612080	0		&&			
ANR	612086	Identifier	fcn		612080	0					
ANR	612087	AndExpression	fcn -> ends > 0 && fcn -> size > 0		612080	1		&&			
ANR	612088	RelationalExpression	fcn -> ends > 0		612080	0		>			
ANR	612089	PtrMemberAccess	fcn -> ends		612080	0					
ANR	612090	Identifier	fcn		612080	0					
ANR	612091	Identifier	ends		612080	1					
ANR	612092	PrimaryExpression	0		612080	1					
ANR	612093	RelationalExpression	fcn -> size > 0		612080	1		>			
ANR	612094	PtrMemberAccess	fcn -> size		612080	0					
ANR	612095	Identifier	fcn		612080	0					
ANR	612096	Identifier	size		612080	1					
ANR	612097	PrimaryExpression	0		612080	1					
ANR	612098	CompoundStatement		2:44:45:45	612080	1					
ANR	612099	ReturnStatement	return true ;	166:2:3716:3727	612080	0	True				
ANR	612100	Identifier	true		612080	0					
ANR	612101	ReturnStatement	return false ;	169:1:3734:3746	612080	1	True				
ANR	612102	Identifier	false		612080	0					
ANR	612103	ReturnType	static bool		612080	1					
ANR	612104	Identifier	checkFunction		612080	2					
ANR	612105	ParameterList	fcn_t * fcn		612080	3					
ANR	612106	Parameter	fcn_t * fcn	164:26:3654:3663	612080	0	True				
ANR	612107	ParameterType	fcn_t *		612080	0					
ANR	612108	Identifier	fcn		612080	1					
ANR	612109	CFGEntryNode	ENTRY		612080		True				
ANR	612110	CFGExitNode	EXIT		612080		True				
ANR	612111	Symbol	fcn		612080						
ANR	612112	Symbol	fcn -> size		612080						
ANR	612113	Symbol	fcn -> ends		612080						
ANR	612114	Symbol	* fcn		612080						
ANR	612115	Symbol	true		612080						
ANR	612116	Symbol	false		612080						
ANR	612117	Function	printFunctionCommands	172:0:3751:4435							
ANR	612118	FunctionDef	"printFunctionCommands (RCore * core , fcn_t * fcn , const char * name)"		612117	0					
ANR	612119	CompoundStatement		172:77:3828:4435	612117	0					
ANR	612120	IfStatement	if ( ! fcn )		612117	0					
ANR	612121	Condition	! fcn	173:5:3835:3838	612117	0	True				
ANR	612122	UnaryOperationExpression	! fcn		612117	0					
ANR	612123	UnaryOperator	!		612117	0					
ANR	612124	Identifier	fcn		612117	1					
ANR	612125	CompoundStatement		2:11:12:12	612117	1					
ANR	612126	ExpressionStatement	"eprintf ( ""No function given to print\\n"" )"	174:2:3845:3885	612117	0	True				
ANR	612127	CallExpression	"eprintf ( ""No function given to print\\n"" )"		612117	0					
ANR	612128	Callee	eprintf		612117	0					
ANR	612129	Identifier	eprintf		612117	0					
ANR	612130	ArgumentList	"""No function given to print\\n"""		612117	1					
ANR	612131	Argument	"""No function given to print\\n"""		612117	0					
ANR	612132	PrimaryExpression	"""No function given to print\\n"""		612117	0					
ANR	612133	ReturnStatement	return ;	175:2:3889:3895	612117	1	True				
ANR	612134	IdentifierDeclStatement	RListIter * fcn_iter ;	178:1:3902:3921	612117	1	True				
ANR	612135	IdentifierDecl	* fcn_iter		612117	0					
ANR	612136	IdentifierDeclType	RListIter *		612117	0					
ANR	612137	Identifier	fcn_iter		612117	1					
ANR	612138	IdentifierDeclStatement	bb_t * cur = NULL ;	179:1:3924:3940	612117	2	True				
ANR	612139	IdentifierDecl	* cur = NULL		612117	0					
ANR	612140	IdentifierDeclType	bb_t *		612117	0					
ANR	612141	Identifier	cur		612117	1					
ANR	612142	AssignmentExpression	* cur = NULL		612117	2		=			
ANR	612143	Identifier	NULL		612117	0					
ANR	612144	Identifier	NULL		612117	1					
ANR	612145	IdentifierDeclStatement	"const char * pfx = r_config_get ( core -> config , ""anal.fcnprefix"" ) ;"	180:1:3943:4006	612117	3	True				
ANR	612146	IdentifierDecl	"* pfx = r_config_get ( core -> config , ""anal.fcnprefix"" )"		612117	0					
ANR	612147	IdentifierDeclType	const char *		612117	0					
ANR	612148	Identifier	pfx		612117	1					
ANR	612149	AssignmentExpression	"* pfx = r_config_get ( core -> config , ""anal.fcnprefix"" )"		612117	2		=			
ANR	612150	Identifier	pfx		612117	0					
ANR	612151	CallExpression	"r_config_get ( core -> config , ""anal.fcnprefix"" )"		612117	1					
ANR	612152	Callee	r_config_get		612117	0					
ANR	612153	Identifier	r_config_get		612117	0					
ANR	612154	ArgumentList	core -> config		612117	1					
ANR	612155	Argument	core -> config		612117	0					
ANR	612156	PtrMemberAccess	core -> config		612117	0					
ANR	612157	Identifier	core		612117	0					
ANR	612158	Identifier	config		612117	1					
ANR	612159	Argument	"""anal.fcnprefix"""		612117	1					
ANR	612160	PrimaryExpression	"""anal.fcnprefix"""		612117	0					
ANR	612161	IfStatement	if ( ! pfx )		612117	4					
ANR	612162	Condition	! pfx	181:5:4013:4016	612117	0	True				
ANR	612163	UnaryOperationExpression	! pfx		612117	0					
ANR	612164	UnaryOperator	!		612117	0					
ANR	612165	Identifier	pfx		612117	1					
ANR	612166	CompoundStatement		10:11:190:190	612117	1					
ANR	612167	ExpressionStatement	"pfx = ""fcn"""	182:2:4023:4034	612117	0	True				
ANR	612168	AssignmentExpression	"pfx = ""fcn"""		612117	0		=			
ANR	612169	Identifier	pfx		612117	0					
ANR	612170	PrimaryExpression	"""fcn"""		612117	1					
ANR	612171	Statement	char	185:1:4041:4044	612117	5	True				
ANR	612172	Statement	*	185:6:4046:4046	612117	6	True				
ANR	612173	Statement	_name	185:7:4047:4051	612117	7	True				
ANR	612174	Statement	=	185:13:4053:4053	612117	8	True				
ANR	612175	Statement	name	185:15:4055:4058	612117	9	True				
ANR	612176	Statement	?	185:19:4059:4059	612117	10	True				
ANR	612177	Statement	(	185:21:4061:4061	612117	11	True				
ANR	612178	Statement	char	185:22:4062:4065	612117	12	True				
ANR	612179	Statement	*	185:27:4067:4067	612117	13	True				
ANR	612180	Statement	)	185:28:4068:4068	612117	14	True				
ANR	612181	Label	name :	185:30:4070:4074	612117	15	True				
ANR	612182	Identifier	name		612117	0					
ANR	612183	Statement	r_str_newf	185:36:4076:4085	612117	16	True				
ANR	612184	Statement	(	185:47:4087:4087	612117	17	True				
ANR	612185	Statement	"""%s.%"""	185:48:4088:4093	612117	18	True				
ANR	612186	Statement	PFMT64x	185:55:4095:4101	612117	19	True				
ANR	612187	Statement	","	185:62:4102:4102	612117	20	True				
ANR	612188	Statement	pfx	185:64:4104:4106	612117	21	True				
ANR	612189	Statement	","	185:67:4107:4107	612117	22	True				
ANR	612190	Statement	fcn	185:69:4109:4111	612117	23	True				
ANR	612191	Statement	->	185:72:4112:4113	612117	24	True				
ANR	612192	Statement	addr	185:74:4114:4117	612117	25	True				
ANR	612193	Statement	)	185:78:4118:4118	612117	26	True				
ANR	612194	ExpressionStatement		185:79:4119:4119	612117	27	True				
ANR	612195	Statement	r_cons_printf	186:1:4122:4134	612117	28	True				
ANR	612196	Statement	(	186:15:4136:4136	612117	29	True				
ANR	612197	Statement	"""af+ 0x%08"""	186:16:4137:4147	612117	30	True				
ANR	612198	Statement	PFMT64x	186:28:4149:4155	612117	31	True				
ANR	612199	Statement	""" %s\\n"""	186:36:4157:4163	612117	32	True				
ANR	612200	Statement	","	186:43:4164:4164	612117	33	True				
ANR	612201	Statement	fcn	186:45:4166:4168	612117	34	True				
ANR	612202	Statement	->	186:48:4169:4170	612117	35	True				
ANR	612203	Statement	addr	186:50:4171:4174	612117	36	True				
ANR	612204	Statement	","	186:54:4175:4175	612117	37	True				
ANR	612205	Statement	_name	186:56:4177:4181	612117	38	True				
ANR	612206	Statement	)	186:61:4182:4182	612117	39	True				
ANR	612207	ExpressionStatement		186:62:4183:4183	612117	40	True				
ANR	612208	IfStatement	if ( ! name )		612117	41					
ANR	612209	Condition	! name	187:5:4190:4194	612117	0	True				
ANR	612210	UnaryOperationExpression	! name		612117	0					
ANR	612211	UnaryOperator	!		612117	0					
ANR	612212	Identifier	name		612117	1					
ANR	612213	CompoundStatement		16:12:368:368	612117	1					
ANR	612214	ExpressionStatement	free ( _name )	188:2:4201:4213	612117	0	True				
ANR	612215	CallExpression	free ( _name )		612117	0					
ANR	612216	Callee	free		612117	0					
ANR	612217	Identifier	free		612117	0					
ANR	612218	ArgumentList	_name		612117	1					
ANR	612219	Argument	_name		612117	0					
ANR	612220	Identifier	_name		612117	0					
ANR	612221	Statement	r_list_foreach	191:1:4220:4233	612117	42	True				
ANR	612222	Statement	(	191:16:4235:4235	612117	43	True				
ANR	612223	Statement	fcn	191:17:4236:4238	612117	44	True				
ANR	612224	Statement	->	191:20:4239:4240	612117	45	True				
ANR	612225	Statement	bbs	191:22:4241:4243	612117	46	True				
ANR	612226	Statement	","	191:25:4244:4244	612117	47	True				
ANR	612227	Statement	fcn_iter	191:27:4246:4253	612117	48	True				
ANR	612228	Statement	","	191:35:4254:4254	612117	49	True				
ANR	612229	Statement	cur	191:37:4256:4258	612117	50	True				
ANR	612230	Statement	)	191:40:4259:4259	612117	51	True				
ANR	612231	CompoundStatement		20:42:432:432	612117	52					
ANR	612232	Statement	r_cons_printf	192:2:4265:4277	612117	0	True				
ANR	612233	Statement	(	192:16:4279:4279	612117	1	True				
ANR	612234	Statement	"""afb+ 0x%08"""	192:17:4280:4291	612117	2	True				
ANR	612235	Statement	PFMT64x	192:30:4293:4299	612117	3	True				
ANR	612236	Statement	""" 0x%08"""	192:38:4301:4308	612117	4	True				
ANR	612237	Statement	PFMT64x	192:47:4310:4316	612117	5	True				
ANR	612238	Statement	""" %llu 0x%08"""	192:55:4318:4330	612117	6	True				
ANR	612239	Statement	PFMT64x	192:68:4331:4337	612117	7	True				
ANR	612240	Statement	""" 0x%08"""	192:75:4338:4345	612117	8	True				
ANR	612241	Statement	PFMT64x	192:83:4346:4352	612117	9	True				
ANR	612242	Statement	"""\\n"""	192:90:4353:4356	612117	10	True				
ANR	612243	Statement	","	193:3:4361:4361	612117	11	True				
ANR	612244	Statement	fcn	193:5:4363:4365	612117	12	True				
ANR	612245	Statement	->	193:8:4366:4367	612117	13	True				
ANR	612246	Statement	addr	193:10:4368:4371	612117	14	True				
ANR	612247	Statement	","	193:14:4372:4372	612117	15	True				
ANR	612248	Statement	cur	193:16:4374:4376	612117	16	True				
ANR	612249	Statement	->	193:19:4377:4378	612117	17	True				
ANR	612250	Statement	start	193:21:4379:4383	612117	18	True				
ANR	612251	Statement	","	193:26:4384:4384	612117	19	True				
ANR	612252	Statement	cur	193:28:4386:4388	612117	20	True				
ANR	612253	Statement	->	193:31:4389:4390	612117	21	True				
ANR	612254	Statement	end	193:33:4391:4393	612117	22	True				
ANR	612255	Statement	-	193:37:4395:4395	612117	23	True				
ANR	612256	Statement	cur	193:39:4397:4399	612117	24	True				
ANR	612257	Statement	->	193:42:4400:4401	612117	25	True				
ANR	612258	Statement	start	193:44:4402:4406	612117	26	True				
ANR	612259	Statement	","	193:49:4407:4407	612117	27	True				
ANR	612260	Statement	cur	193:51:4409:4411	612117	28	True				
ANR	612261	Statement	->	193:54:4412:4413	612117	29	True				
ANR	612262	Statement	jump	193:56:4414:4417	612117	30	True				
ANR	612263	Statement	","	193:60:4418:4418	612117	31	True				
ANR	612264	Statement	cur	193:62:4420:4422	612117	32	True				
ANR	612265	Statement	->	193:65:4423:4424	612117	33	True				
ANR	612266	Statement	fail	193:67:4425:4428	612117	34	True				
ANR	612267	Statement	)	193:71:4429:4429	612117	35	True				
ANR	612268	ExpressionStatement		193:72:4430:4430	612117	36	True				
ANR	612269	ReturnType	static void		612117	1					
ANR	612270	Identifier	printFunctionCommands		612117	2					
ANR	612271	ParameterList	"RCore * core , fcn_t * fcn , const char * name"		612117	3					
ANR	612272	Parameter	RCore * core	172:34:3785:3795	612117	0	True				
ANR	612273	ParameterType	RCore *		612117	0					
ANR	612274	Identifier	core		612117	1					
ANR	612275	Parameter	fcn_t * fcn	172:47:3798:3807	612117	1	True				
ANR	612276	ParameterType	fcn_t *		612117	0					
ANR	612277	Identifier	fcn		612117	1					
ANR	612278	Parameter	const char * name	172:59:3810:3825	612117	2	True				
ANR	612279	ParameterType	const char *		612117	0					
ANR	612280	Identifier	name		612117	1					
ANR	612281	CFGEntryNode	ENTRY		612117		True				
ANR	612282	CFGExitNode	EXIT		612117		True				
ANR	612283	Symbol	fcn		612117						
ANR	612284	Symbol	core -> config		612117						
ANR	612285	Symbol	core		612117						
ANR	612286	Symbol	cur		612117						
ANR	612287	Symbol	NULL		612117						
ANR	612288	Symbol	pfx		612117						
ANR	612289	Symbol	fcn_iter		612117						
ANR	612290	Symbol	_name		612117						
ANR	612291	Symbol	name		612117						
ANR	612292	Symbol	* core		612117						
ANR	612293	Symbol	r_config_get		612117						
ANR	612294	Function	createFunction	197:0:4438:5455							
ANR	612295	FunctionDef	"createFunction (RCore * core , fcn_t * fcn , const char * name)"		612294	0					
ANR	612296	CompoundStatement		197:70:4508:5455	612294	0					
ANR	612297	IfStatement	if ( ! fcn )		612294	0					
ANR	612298	Condition	! fcn	198:5:4515:4518	612294	0	True				
ANR	612299	UnaryOperationExpression	! fcn		612294	0					
ANR	612300	UnaryOperator	!		612294	0					
ANR	612301	Identifier	fcn		612294	1					
ANR	612302	CompoundStatement		2:11:12:12	612294	1					
ANR	612303	ExpressionStatement	"eprintf ( ""No function given to create\\n"" )"	199:2:4525:4566	612294	0	True				
ANR	612304	CallExpression	"eprintf ( ""No function given to create\\n"" )"		612294	0					
ANR	612305	Callee	eprintf		612294	0					
ANR	612306	Identifier	eprintf		612294	0					
ANR	612307	ArgumentList	"""No function given to create\\n"""		612294	1					
ANR	612308	Argument	"""No function given to create\\n"""		612294	0					
ANR	612309	PrimaryExpression	"""No function given to create\\n"""		612294	0					
ANR	612310	ReturnStatement	return ;	200:2:4570:4576	612294	1	True				
ANR	612311	IdentifierDeclStatement	RListIter * fcn_iter ;	203:1:4583:4602	612294	1	True				
ANR	612312	IdentifierDecl	* fcn_iter		612294	0					
ANR	612313	IdentifierDeclType	RListIter *		612294	0					
ANR	612314	Identifier	fcn_iter		612294	1					
ANR	612315	IdentifierDeclStatement	bb_t * cur = NULL ;	204:1:4605:4621	612294	2	True				
ANR	612316	IdentifierDecl	* cur = NULL		612294	0					
ANR	612317	IdentifierDeclType	bb_t *		612294	0					
ANR	612318	Identifier	cur		612294	1					
ANR	612319	AssignmentExpression	* cur = NULL		612294	2		=			
ANR	612320	Identifier	NULL		612294	0					
ANR	612321	Identifier	NULL		612294	1					
ANR	612322	IdentifierDeclStatement	"const char * pfx = r_config_get ( core -> config , ""anal.fcnprefix"" ) ;"	205:1:4624:4687	612294	3	True				
ANR	612323	IdentifierDecl	"* pfx = r_config_get ( core -> config , ""anal.fcnprefix"" )"		612294	0					
ANR	612324	IdentifierDeclType	const char *		612294	0					
ANR	612325	Identifier	pfx		612294	1					
ANR	612326	AssignmentExpression	"* pfx = r_config_get ( core -> config , ""anal.fcnprefix"" )"		612294	2		=			
ANR	612327	Identifier	pfx		612294	0					
ANR	612328	CallExpression	"r_config_get ( core -> config , ""anal.fcnprefix"" )"		612294	1					
ANR	612329	Callee	r_config_get		612294	0					
ANR	612330	Identifier	r_config_get		612294	0					
ANR	612331	ArgumentList	core -> config		612294	1					
ANR	612332	Argument	core -> config		612294	0					
ANR	612333	PtrMemberAccess	core -> config		612294	0					
ANR	612334	Identifier	core		612294	0					
ANR	612335	Identifier	config		612294	1					
ANR	612336	Argument	"""anal.fcnprefix"""		612294	1					
ANR	612337	PrimaryExpression	"""anal.fcnprefix"""		612294	0					
ANR	612338	IfStatement	if ( ! pfx )		612294	4					
ANR	612339	Condition	! pfx	206:5:4694:4697	612294	0	True				
ANR	612340	UnaryOperationExpression	! pfx		612294	0					
ANR	612341	UnaryOperator	!		612294	0					
ANR	612342	Identifier	pfx		612294	1					
ANR	612343	CompoundStatement		10:11:191:191	612294	1					
ANR	612344	ExpressionStatement	"pfx = ""fcn"""	207:2:4704:4715	612294	0	True				
ANR	612345	AssignmentExpression	"pfx = ""fcn"""		612294	0		=			
ANR	612346	Identifier	pfx		612294	0					
ANR	612347	PrimaryExpression	"""fcn"""		612294	1					
ANR	612348	IdentifierDeclStatement	RAnalFunction * f = r_anal_fcn_new ( ) ;	210:1:4722:4758	612294	5	True				
ANR	612349	IdentifierDecl	* f = r_anal_fcn_new ( )		612294	0					
ANR	612350	IdentifierDeclType	RAnalFunction *		612294	0					
ANR	612351	Identifier	f		612294	1					
ANR	612352	AssignmentExpression	* f = r_anal_fcn_new ( )		612294	2		=			
ANR	612353	Identifier	f		612294	0					
ANR	612354	CallExpression	r_anal_fcn_new ( )		612294	1					
ANR	612355	Callee	r_anal_fcn_new		612294	0					
ANR	612356	Identifier	r_anal_fcn_new		612294	0					
ANR	612357	ArgumentList			612294	1					
ANR	612358	IfStatement	if ( ! f )		612294	6					
ANR	612359	Condition	! f	211:5:4765:4766	612294	0	True				
ANR	612360	UnaryOperationExpression	! f		612294	0					
ANR	612361	UnaryOperator	!		612294	0					
ANR	612362	Identifier	f		612294	1					
ANR	612363	CompoundStatement		15:9:260:260	612294	1					
ANR	612364	ExpressionStatement	"eprintf ( ""Failed to create new function\\n"" )"	212:2:4773:4816	612294	0	True				
ANR	612365	CallExpression	"eprintf ( ""Failed to create new function\\n"" )"		612294	0					
ANR	612366	Callee	eprintf		612294	0					
ANR	612367	Identifier	eprintf		612294	0					
ANR	612368	ArgumentList	"""Failed to create new function\\n"""		612294	1					
ANR	612369	Argument	"""Failed to create new function\\n"""		612294	0					
ANR	612370	PrimaryExpression	"""Failed to create new function\\n"""		612294	0					
ANR	612371	ReturnStatement	return ;	213:2:4820:4826	612294	1	True				
ANR	612372	Statement	f	216:1:4833:4833	612294	7	True				
ANR	612373	Statement	->	216:2:4834:4835	612294	8	True				
ANR	612374	Statement	name	216:4:4836:4839	612294	9	True				
ANR	612375	Statement	=	216:9:4841:4841	612294	10	True				
ANR	612376	Statement	name	216:11:4843:4846	612294	11	True				
ANR	612377	Statement	?	216:15:4847:4847	612294	12	True				
ANR	612378	Statement	strdup	216:17:4849:4854	612294	13	True				
ANR	612379	Statement	(	216:24:4856:4856	612294	14	True				
ANR	612380	Statement	name	216:25:4857:4860	612294	15	True				
ANR	612381	Statement	)	216:29:4861:4861	612294	16	True				
ANR	612382	Statement	:	216:30:4862:4862	612294	17	True				
ANR	612383	Statement	r_str_newf	216:32:4864:4873	612294	18	True				
ANR	612384	Statement	(	216:43:4875:4875	612294	19	True				
ANR	612385	Statement	"""%s.%"""	216:44:4876:4881	612294	20	True				
ANR	612386	Statement	PFMT64x	216:51:4883:4889	612294	21	True				
ANR	612387	Statement	","	216:58:4890:4890	612294	22	True				
ANR	612388	Statement	pfx	216:60:4892:4894	612294	23	True				
ANR	612389	Statement	","	216:63:4895:4895	612294	24	True				
ANR	612390	Statement	fcn	216:65:4897:4899	612294	25	True				
ANR	612391	Statement	->	216:68:4900:4901	612294	26	True				
ANR	612392	Statement	addr	216:70:4902:4905	612294	27	True				
ANR	612393	Statement	)	216:74:4906:4906	612294	28	True				
ANR	612394	ExpressionStatement		216:75:4907:4907	612294	29	True				
ANR	612395	ExpressionStatement	f -> addr = fcn -> addr	217:1:4910:4929	612294	30	True				
ANR	612396	AssignmentExpression	f -> addr = fcn -> addr		612294	0		=			
ANR	612397	PtrMemberAccess	f -> addr		612294	0					
ANR	612398	Identifier	f		612294	0					
ANR	612399	Identifier	addr		612294	1					
ANR	612400	PtrMemberAccess	fcn -> addr		612294	1					
ANR	612401	Identifier	fcn		612294	0					
ANR	612402	Identifier	addr		612294	1					
ANR	612403	ExpressionStatement	f -> bits = core -> anal -> bits	218:1:4932:4958	612294	31	True				
ANR	612404	AssignmentExpression	f -> bits = core -> anal -> bits		612294	0		=			
ANR	612405	PtrMemberAccess	f -> bits		612294	0					
ANR	612406	Identifier	f		612294	0					
ANR	612407	Identifier	bits		612294	1					
ANR	612408	PtrMemberAccess	core -> anal -> bits		612294	1					
ANR	612409	PtrMemberAccess	core -> anal		612294	0					
ANR	612410	Identifier	core		612294	0					
ANR	612411	Identifier	anal		612294	1					
ANR	612412	Identifier	bits		612294	1					
ANR	612413	ExpressionStatement	f -> cc = r_str_const ( r_anal_cc_default ( core -> anal ) )	219:1:4961:5013	612294	32	True				
ANR	612414	AssignmentExpression	f -> cc = r_str_const ( r_anal_cc_default ( core -> anal ) )		612294	0		=			
ANR	612415	PtrMemberAccess	f -> cc		612294	0					
ANR	612416	Identifier	f		612294	0					
ANR	612417	Identifier	cc		612294	1					
ANR	612418	CallExpression	r_str_const ( r_anal_cc_default ( core -> anal ) )		612294	1					
ANR	612419	Callee	r_str_const		612294	0					
ANR	612420	Identifier	r_str_const		612294	0					
ANR	612421	ArgumentList	r_anal_cc_default ( core -> anal )		612294	1					
ANR	612422	Argument	r_anal_cc_default ( core -> anal )		612294	0					
ANR	612423	CallExpression	r_anal_cc_default ( core -> anal )		612294	0					
ANR	612424	Callee	r_anal_cc_default		612294	0					
ANR	612425	Identifier	r_anal_cc_default		612294	0					
ANR	612426	ArgumentList	core -> anal		612294	1					
ANR	612427	Argument	core -> anal		612294	0					
ANR	612428	PtrMemberAccess	core -> anal		612294	0					
ANR	612429	Identifier	core		612294	0					
ANR	612430	Identifier	anal		612294	1					
ANR	612431	ExpressionStatement	"r_anal_fcn_set_size ( NULL , f , fcn -> size )"	220:1:5016:5056	612294	33	True				
ANR	612432	CallExpression	"r_anal_fcn_set_size ( NULL , f , fcn -> size )"		612294	0					
ANR	612433	Callee	r_anal_fcn_set_size		612294	0					
ANR	612434	Identifier	r_anal_fcn_set_size		612294	0					
ANR	612435	ArgumentList	NULL		612294	1					
ANR	612436	Argument	NULL		612294	0					
ANR	612437	Identifier	NULL		612294	0					
ANR	612438	Argument	f		612294	1					
ANR	612439	Identifier	f		612294	0					
ANR	612440	Argument	fcn -> size		612294	2					
ANR	612441	PtrMemberAccess	fcn -> size		612294	0					
ANR	612442	Identifier	fcn		612294	0					
ANR	612443	Identifier	size		612294	1					
ANR	612444	ExpressionStatement	f -> type = R_ANAL_FCN_TYPE_FCN	221:1:5059:5088	612294	34	True				
ANR	612445	AssignmentExpression	f -> type = R_ANAL_FCN_TYPE_FCN		612294	0		=			
ANR	612446	PtrMemberAccess	f -> type		612294	0					
ANR	612447	Identifier	f		612294	0					
ANR	612448	Identifier	type		612294	1					
ANR	612449	Identifier	R_ANAL_FCN_TYPE_FCN		612294	1					
ANR	612450	Statement	r_list_foreach	223:1:5092:5105	612294	35	True				
ANR	612451	Statement	(	223:16:5107:5107	612294	36	True				
ANR	612452	Statement	fcn	223:17:5108:5110	612294	37	True				
ANR	612453	Statement	->	223:20:5111:5112	612294	38	True				
ANR	612454	Statement	bbs	223:22:5113:5115	612294	39	True				
ANR	612455	Statement	","	223:25:5116:5116	612294	40	True				
ANR	612456	Statement	fcn_iter	223:27:5118:5125	612294	41	True				
ANR	612457	Statement	","	223:35:5126:5126	612294	42	True				
ANR	612458	Statement	cur	223:37:5128:5130	612294	43	True				
ANR	612459	Statement	)	223:40:5131:5131	612294	44	True				
ANR	612460	CompoundStatement		27:42:624:624	612294	45					
ANR	612461	IfStatement	"if ( __isdata ( core , cur -> start ) )"		612294	0					
ANR	612462	Condition	"__isdata ( core , cur -> start )"	224:6:5141:5167	612294	0	True				
ANR	612463	CallExpression	"__isdata ( core , cur -> start )"		612294	0					
ANR	612464	Callee	__isdata		612294	0					
ANR	612465	Identifier	__isdata		612294	0					
ANR	612466	ArgumentList	core		612294	1					
ANR	612467	Argument	core		612294	0					
ANR	612468	Identifier	core		612294	0					
ANR	612469	Argument	cur -> start		612294	1					
ANR	612470	PtrMemberAccess	cur -> start		612294	0					
ANR	612471	Identifier	cur		612294	0					
ANR	612472	Identifier	start		612294	1					
ANR	612473	CompoundStatement		28:35:661:661	612294	1					
ANR	612474	ContinueStatement	continue ;	225:3:5175:5183	612294	0	True				
ANR	612475	ExpressionStatement	"r_anal_fcn_add_bb ( core -> anal , f , cur -> start , ( cur -> end - cur -> start ) , cur -> jump , cur -> fail , 0 , NULL )"	227:2:5191:5292	612294	1	True				
ANR	612476	CallExpression	"r_anal_fcn_add_bb ( core -> anal , f , cur -> start , ( cur -> end - cur -> start ) , cur -> jump , cur -> fail , 0 , NULL )"		612294	0					
ANR	612477	Callee	r_anal_fcn_add_bb		612294	0					
ANR	612478	Identifier	r_anal_fcn_add_bb		612294	0					
ANR	612479	ArgumentList	core -> anal		612294	1					
ANR	612480	Argument	core -> anal		612294	0					
ANR	612481	PtrMemberAccess	core -> anal		612294	0					
ANR	612482	Identifier	core		612294	0					
ANR	612483	Identifier	anal		612294	1					
ANR	612484	Argument	f		612294	1					
ANR	612485	Identifier	f		612294	0					
ANR	612486	Argument	cur -> start		612294	2					
ANR	612487	PtrMemberAccess	cur -> start		612294	0					
ANR	612488	Identifier	cur		612294	0					
ANR	612489	Identifier	start		612294	1					
ANR	612490	Argument	cur -> end - cur -> start		612294	3					
ANR	612491	AdditiveExpression	cur -> end - cur -> start		612294	0		-			
ANR	612492	PtrMemberAccess	cur -> end		612294	0					
ANR	612493	Identifier	cur		612294	0					
ANR	612494	Identifier	end		612294	1					
ANR	612495	PtrMemberAccess	cur -> start		612294	1					
ANR	612496	Identifier	cur		612294	0					
ANR	612497	Identifier	start		612294	1					
ANR	612498	Argument	cur -> jump		612294	4					
ANR	612499	PtrMemberAccess	cur -> jump		612294	0					
ANR	612500	Identifier	cur		612294	0					
ANR	612501	Identifier	jump		612294	1					
ANR	612502	Argument	cur -> fail		612294	5					
ANR	612503	PtrMemberAccess	cur -> fail		612294	0					
ANR	612504	Identifier	cur		612294	0					
ANR	612505	Identifier	fail		612294	1					
ANR	612506	Argument	0		612294	6					
ANR	612507	PrimaryExpression	0		612294	0					
ANR	612508	Argument	NULL		612294	7					
ANR	612509	Identifier	NULL		612294	0					
ANR	612510	IfStatement	"if ( ! r_anal_fcn_insert ( core -> anal , f ) )"		612294	46					
ANR	612511	Condition	"! r_anal_fcn_insert ( core -> anal , f )"	229:5:5302:5335	612294	0	True				
ANR	612512	UnaryOperationExpression	"! r_anal_fcn_insert ( core -> anal , f )"		612294	0					
ANR	612513	UnaryOperator	!		612294	0					
ANR	612514	CallExpression	"r_anal_fcn_insert ( core -> anal , f )"		612294	1					
ANR	612515	Callee	r_anal_fcn_insert		612294	0					
ANR	612516	Identifier	r_anal_fcn_insert		612294	0					
ANR	612517	ArgumentList	core -> anal		612294	1					
ANR	612518	Argument	core -> anal		612294	0					
ANR	612519	PtrMemberAccess	core -> anal		612294	0					
ANR	612520	Identifier	core		612294	0					
ANR	612521	Identifier	anal		612294	1					
ANR	612522	Argument	f		612294	1					
ANR	612523	Identifier	f		612294	0					
ANR	612524	CompoundStatement		33:41:829:829	612294	1					
ANR	612525	ExpressionStatement	r_anal_fcn_free ( f )	231:2:5388:5407	612294	0	True				
ANR	612526	CallExpression	r_anal_fcn_free ( f )		612294	0					
ANR	612527	Callee	r_anal_fcn_free		612294	0					
ANR	612528	Identifier	r_anal_fcn_free		612294	0					
ANR	612529	ArgumentList	f		612294	1					
ANR	612530	Argument	f		612294	0					
ANR	612531	Identifier	f		612294	0					
ANR	612532	ReturnStatement	return ;	233:2:5444:5450	612294	1	True				
ANR	612533	ReturnType	static void		612294	1					
ANR	612534	Identifier	createFunction		612294	2					
ANR	612535	ParameterList	"RCore * core , fcn_t * fcn , const char * name"		612294	3					
ANR	612536	Parameter	RCore * core	197:27:4465:4475	612294	0	True				
ANR	612537	ParameterType	RCore *		612294	0					
ANR	612538	Identifier	core		612294	1					
ANR	612539	Parameter	fcn_t * fcn	197:40:4478:4487	612294	1	True				
ANR	612540	ParameterType	fcn_t *		612294	0					
ANR	612541	Identifier	fcn		612294	1					
ANR	612542	Parameter	const char * name	197:52:4490:4505	612294	2	True				
ANR	612543	ParameterType	const char *		612294	0					
ANR	612544	Identifier	name		612294	1					
ANR	612545	CFGEntryNode	ENTRY		612294		True				
ANR	612546	CFGExitNode	EXIT		612294		True				
ANR	612547	CFGErrorNode	ERROR		612294		True				
ANR	612548	Symbol	cur		612294						
ANR	612549	Symbol	pfx		612294						
ANR	612550	Symbol	* fcn		612294						
ANR	612551	Symbol	f -> bits		612294						
ANR	612552	Symbol	R_ANAL_FCN_TYPE_FCN		612294						
ANR	612553	Symbol	cur -> jump		612294						
ANR	612554	Symbol	* core		612294						
ANR	612555	Symbol	r_config_get		612294						
ANR	612556	Symbol	core -> anal		612294						
ANR	612557	Symbol	fcn		612294						
ANR	612558	Symbol	fcn -> size		612294						
ANR	612559	Symbol	* cur		612294						
ANR	612560	Symbol	cur -> fail		612294						
ANR	612561	Symbol	r_anal_fcn_new		612294						
ANR	612562	Symbol	f -> cc		612294						
ANR	612563	Symbol	f -> addr		612294						
ANR	612564	Symbol	__isdata		612294						
ANR	612565	Symbol	* * core		612294						
ANR	612566	Symbol	core -> config		612294						
ANR	612567	Symbol	r_str_const		612294						
ANR	612568	Symbol	core -> anal -> bits		612294						
ANR	612569	Symbol	NULL		612294						
ANR	612570	Symbol	fcn_iter		612294						
ANR	612571	Symbol	cur -> start		612294						
ANR	612572	Symbol	f		612294						
ANR	612573	Symbol	r_anal_fcn_insert		612294						
ANR	612574	Symbol	f -> type		612294						
ANR	612575	Symbol	* f		612294						
ANR	612576	Symbol	r_anal_cc_default		612294						
ANR	612577	Symbol	core		612294						
ANR	612578	Symbol	cur -> end		612294						
ANR	612579	Symbol	* core -> anal		612294						
ANR	612580	Symbol	name		612294						
ANR	612581	Symbol	fcn -> addr		612294						
ANR	612582	Function	core_anal_bbs	238:0:5511:12978							
ANR	612583	FunctionDef	"core_anal_bbs (RCore * core , const char * input)"		612582	0					
ANR	612584	CompoundStatement		238:57:5568:12978	612582	0					
ANR	612585	IfStatement	"if ( ! r_io_is_valid_offset ( core -> io , core -> offset , false ) )"		612582	0					
ANR	612586	Condition	"! r_io_is_valid_offset ( core -> io , core -> offset , false )"	239:5:5575:5627	612582	0	True				
ANR	612587	UnaryOperationExpression	"! r_io_is_valid_offset ( core -> io , core -> offset , false )"		612582	0					
ANR	612588	UnaryOperator	!		612582	0					
ANR	612589	CallExpression	"r_io_is_valid_offset ( core -> io , core -> offset , false )"		612582	1					
ANR	612590	Callee	r_io_is_valid_offset		612582	0					
ANR	612591	Identifier	r_io_is_valid_offset		612582	0					
ANR	612592	ArgumentList	core -> io		612582	1					
ANR	612593	Argument	core -> io		612582	0					
ANR	612594	PtrMemberAccess	core -> io		612582	0					
ANR	612595	Identifier	core		612582	0					
ANR	612596	Identifier	io		612582	1					
ANR	612597	Argument	core -> offset		612582	1					
ANR	612598	PtrMemberAccess	core -> offset		612582	0					
ANR	612599	Identifier	core		612582	0					
ANR	612600	Identifier	offset		612582	1					
ANR	612601	Argument	false		612582	2					
ANR	612602	Identifier	false		612582	0					
ANR	612603	CompoundStatement		2:60:61:61	612582	1					
ANR	612604	ExpressionStatement	"eprintf ( ""No valid offset given to analyze\\n"" )"	240:2:5634:5680	612582	0	True				
ANR	612605	CallExpression	"eprintf ( ""No valid offset given to analyze\\n"" )"		612582	0					
ANR	612606	Callee	eprintf		612582	0					
ANR	612607	Identifier	eprintf		612582	0					
ANR	612608	ArgumentList	"""No valid offset given to analyze\\n"""		612582	1					
ANR	612609	Argument	"""No valid offset given to analyze\\n"""		612582	0					
ANR	612610	PrimaryExpression	"""No valid offset given to analyze\\n"""		612582	0					
ANR	612611	ReturnStatement	return false ;	241:2:5684:5696	612582	1	True				
ANR	612612	Identifier	false		612582	0					
ANR	612613	IdentifierDeclStatement	Sdb * sdb = NULL ;	244:1:5703:5718	612582	1	True				
ANR	612614	IdentifierDecl	* sdb = NULL		612582	0					
ANR	612615	IdentifierDeclType	Sdb *		612582	0					
ANR	612616	Identifier	sdb		612582	1					
ANR	612617	AssignmentExpression	* sdb = NULL		612582	2		=			
ANR	612618	Identifier	NULL		612582	0					
ANR	612619	Identifier	NULL		612582	1					
ANR	612620	IdentifierDeclStatement	ut64 cur = 0 ;	245:1:5721:5733	612582	2	True				
ANR	612621	IdentifierDecl	cur = 0		612582	0					
ANR	612622	IdentifierDeclType	ut64		612582	0					
ANR	612623	Identifier	cur		612582	1					
ANR	612624	AssignmentExpression	cur = 0		612582	2		=			
ANR	612625	Identifier	cur		612582	0					
ANR	612626	PrimaryExpression	0		612582	1					
ANR	612627	IdentifierDeclStatement	ut64 start = core -> offset ;	246:1:5736:5761	612582	3	True				
ANR	612628	IdentifierDecl	start = core -> offset		612582	0					
ANR	612629	IdentifierDeclType	ut64		612582	0					
ANR	612630	Identifier	start		612582	1					
ANR	612631	AssignmentExpression	start = core -> offset		612582	2		=			
ANR	612632	Identifier	start		612582	0					
ANR	612633	PtrMemberAccess	core -> offset		612582	1					
ANR	612634	Identifier	core		612582	0					
ANR	612635	Identifier	offset		612582	1					
ANR	612636	IdentifierDeclStatement	"ut64 size = input [ 0 ] ? r_num_math ( core -> num , input + 1 ) : core -> blocksize ;"	247:1:5764:5838	612582	4	True				
ANR	612637	IdentifierDecl	"size = input [ 0 ] ? r_num_math ( core -> num , input + 1 ) : core -> blocksize"		612582	0					
ANR	612638	IdentifierDeclType	ut64		612582	0					
ANR	612639	Identifier	size		612582	1					
ANR	612640	AssignmentExpression	"size = input [ 0 ] ? r_num_math ( core -> num , input + 1 ) : core -> blocksize"		612582	2		=			
ANR	612641	Identifier	size		612582	0					
ANR	612642	ConditionalExpression	"input [ 0 ] ? r_num_math ( core -> num , input + 1 ) : core -> blocksize"		612582	1					
ANR	612643	Condition	input [ 0 ]		612582	0					
ANR	612644	ArrayIndexing	input [ 0 ]		612582	0					
ANR	612645	Identifier	input		612582	0					
ANR	612646	PrimaryExpression	0		612582	1					
ANR	612647	CallExpression	"r_num_math ( core -> num , input + 1 )"		612582	1					
ANR	612648	Callee	r_num_math		612582	0					
ANR	612649	Identifier	r_num_math		612582	0					
ANR	612650	ArgumentList	core -> num		612582	1					
ANR	612651	Argument	core -> num		612582	0					
ANR	612652	PtrMemberAccess	core -> num		612582	0					
ANR	612653	Identifier	core		612582	0					
ANR	612654	Identifier	num		612582	1					
ANR	612655	Argument	input + 1		612582	1					
ANR	612656	AdditiveExpression	input + 1		612582	0		+			
ANR	612657	Identifier	input		612582	0					
ANR	612658	PrimaryExpression	1		612582	1					
ANR	612659	PtrMemberAccess	core -> blocksize		612582	2					
ANR	612660	Identifier	core		612582	0					
ANR	612661	Identifier	blocksize		612582	1					
ANR	612662	IdentifierDeclStatement	ut64 b_start = start ;	248:1:5841:5861	612582	5	True				
ANR	612663	IdentifierDecl	b_start = start		612582	0					
ANR	612664	IdentifierDeclType	ut64		612582	0					
ANR	612665	Identifier	b_start		612582	1					
ANR	612666	AssignmentExpression	b_start = start		612582	2		=			
ANR	612667	Identifier	start		612582	0					
ANR	612668	Identifier	start		612582	1					
ANR	612669	IdentifierDeclStatement	RAnalOp * op ;	249:1:5864:5875	612582	6	True				
ANR	612670	IdentifierDecl	* op		612582	0					
ANR	612671	IdentifierDeclType	RAnalOp *		612582	0					
ANR	612672	Identifier	op		612582	1					
ANR	612673	IdentifierDeclStatement	RListIter * iter ;	250:1:5878:5893	612582	7	True				
ANR	612674	IdentifierDecl	* iter		612582	0					
ANR	612675	IdentifierDeclType	RListIter *		612582	0					
ANR	612676	Identifier	iter		612582	1					
ANR	612677	IdentifierDeclStatement	int block_score = 0 ;	251:1:5896:5915	612582	8	True				
ANR	612678	IdentifierDecl	block_score = 0		612582	0					
ANR	612679	IdentifierDeclType	int		612582	0					
ANR	612680	Identifier	block_score		612582	1					
ANR	612681	AssignmentExpression	block_score = 0		612582	2		=			
ANR	612682	Identifier	block_score		612582	0					
ANR	612683	PrimaryExpression	0		612582	1					
ANR	612684	IdentifierDeclStatement	RList * block_list ;	252:1:5918:5935	612582	9	True				
ANR	612685	IdentifierDecl	* block_list		612582	0					
ANR	612686	IdentifierDeclType	RList *		612582	0					
ANR	612687	Identifier	block_list		612582	1					
ANR	612688	IdentifierDeclStatement	bb_t * block = NULL ;	253:1:5938:5956	612582	10	True				
ANR	612689	IdentifierDecl	* block = NULL		612582	0					
ANR	612690	IdentifierDeclType	bb_t *		612582	0					
ANR	612691	Identifier	block		612582	1					
ANR	612692	AssignmentExpression	* block = NULL		612582	2		=			
ANR	612693	Identifier	NULL		612582	0					
ANR	612694	Identifier	NULL		612582	1					
ANR	612695	IdentifierDeclStatement	int invalid_instruction_barrier = - 20000 ;	254:1:5959:5999	612582	11	True				
ANR	612696	IdentifierDecl	invalid_instruction_barrier = - 20000		612582	0					
ANR	612697	IdentifierDeclType	int		612582	0					
ANR	612698	Identifier	invalid_instruction_barrier		612582	1					
ANR	612699	AssignmentExpression	invalid_instruction_barrier = - 20000		612582	2		=			
ANR	612700	Identifier	invalid_instruction_barrier		612582	0					
ANR	612701	UnaryOperationExpression	- 20000		612582	1					
ANR	612702	UnaryOperator	-		612582	0					
ANR	612703	PrimaryExpression	20000		612582	1					
ANR	612704	IdentifierDeclStatement	"bool debug = r_config_get_i ( core -> config , ""cfg.debug"" ) ;"	255:1:6002:6057	612582	12	True				
ANR	612705	IdentifierDecl	"debug = r_config_get_i ( core -> config , ""cfg.debug"" )"		612582	0					
ANR	612706	IdentifierDeclType	bool		612582	0					
ANR	612707	Identifier	debug		612582	1					
ANR	612708	AssignmentExpression	"debug = r_config_get_i ( core -> config , ""cfg.debug"" )"		612582	2		=			
ANR	612709	Identifier	debug		612582	0					
ANR	612710	CallExpression	"r_config_get_i ( core -> config , ""cfg.debug"" )"		612582	1					
ANR	612711	Callee	r_config_get_i		612582	0					
ANR	612712	Identifier	r_config_get_i		612582	0					
ANR	612713	ArgumentList	core -> config		612582	1					
ANR	612714	Argument	core -> config		612582	0					
ANR	612715	PtrMemberAccess	core -> config		612582	0					
ANR	612716	Identifier	core		612582	0					
ANR	612717	Identifier	config		612582	1					
ANR	612718	Argument	"""cfg.debug"""		612582	1					
ANR	612719	PrimaryExpression	"""cfg.debug"""		612582	0					
ANR	612720	IdentifierDeclStatement	"bool nopskip = r_config_get_i ( core -> config , ""anal.nopskip"" ) ;"	256:1:6060:6120	612582	13	True				
ANR	612721	IdentifierDecl	"nopskip = r_config_get_i ( core -> config , ""anal.nopskip"" )"		612582	0					
ANR	612722	IdentifierDeclType	bool		612582	0					
ANR	612723	Identifier	nopskip		612582	1					
ANR	612724	AssignmentExpression	"nopskip = r_config_get_i ( core -> config , ""anal.nopskip"" )"		612582	2		=			
ANR	612725	Identifier	nopskip		612582	0					
ANR	612726	CallExpression	"r_config_get_i ( core -> config , ""anal.nopskip"" )"		612582	1					
ANR	612727	Callee	r_config_get_i		612582	0					
ANR	612728	Identifier	r_config_get_i		612582	0					
ANR	612729	ArgumentList	core -> config		612582	1					
ANR	612730	Argument	core -> config		612582	0					
ANR	612731	PtrMemberAccess	core -> config		612582	0					
ANR	612732	Identifier	core		612582	0					
ANR	612733	Identifier	config		612582	1					
ANR	612734	Argument	"""anal.nopskip"""		612582	1					
ANR	612735	PrimaryExpression	"""anal.nopskip"""		612582	0					
ANR	612736	ExpressionStatement	block_list = r_list_new ( )	258:1:6124:6150	612582	14	True				
ANR	612737	AssignmentExpression	block_list = r_list_new ( )		612582	0		=			
ANR	612738	Identifier	block_list		612582	0					
ANR	612739	CallExpression	r_list_new ( )		612582	1					
ANR	612740	Callee	r_list_new		612582	0					
ANR	612741	Identifier	r_list_new		612582	0					
ANR	612742	ArgumentList			612582	1					
ANR	612743	IfStatement	if ( ! block_list )		612582	15					
ANR	612744	Condition	! block_list	259:5:6157:6167	612582	0	True				
ANR	612745	UnaryOperationExpression	! block_list		612582	0					
ANR	612746	UnaryOperator	!		612582	0					
ANR	612747	Identifier	block_list		612582	1					
ANR	612748	CompoundStatement		22:18:601:601	612582	1					
ANR	612749	ExpressionStatement	"eprintf ( ""Failed to create block_list\\n"" )"	260:2:6174:6215	612582	0	True				
ANR	612750	CallExpression	"eprintf ( ""Failed to create block_list\\n"" )"		612582	0					
ANR	612751	Callee	eprintf		612582	0					
ANR	612752	Identifier	eprintf		612582	0					
ANR	612753	ArgumentList	"""Failed to create block_list\\n"""		612582	1					
ANR	612754	Argument	"""Failed to create block_list\\n"""		612582	0					
ANR	612755	PrimaryExpression	"""Failed to create block_list\\n"""		612582	0					
ANR	612756	IfStatement	if ( debug )		612582	16					
ANR	612757	Condition	debug	263:5:6226:6230	612582	0	True				
ANR	612758	Identifier	debug		612582	0					
ANR	612759	CompoundStatement		26:12:664:664	612582	1					
ANR	612760	Statement	eprintf	264:2:6237:6243	612582	0	True				
ANR	612761	Statement	(	264:10:6245:6245	612582	1	True				
ANR	612762	Statement	"""Analyzing [0x%08"""	264:11:6246:6263	612582	2	True				
ANR	612763	Statement	PFMT64x	264:29:6264:6270	612582	3	True				
ANR	612764	Statement	"""-0x%08"""	264:36:6271:6278	612582	4	True				
ANR	612765	Statement	PFMT64x	264:44:6279:6285	612582	5	True				
ANR	612766	Statement	"""]\\n"""	264:51:6286:6290	612582	6	True				
ANR	612767	Statement	","	264:56:6291:6291	612582	7	True				
ANR	612768	Statement	start	264:58:6293:6297	612582	8	True				
ANR	612769	Statement	","	264:63:6298:6298	612582	9	True				
ANR	612770	Statement	start	264:65:6300:6304	612582	10	True				
ANR	612771	Statement	+	264:71:6306:6306	612582	11	True				
ANR	612772	Statement	size	264:73:6308:6311	612582	12	True				
ANR	612773	Statement	)	264:77:6312:6312	612582	13	True				
ANR	612774	ExpressionStatement		264:78:6313:6313	612582	14	True				
ANR	612775	ExpressionStatement	"eprintf ( ""Creating basic blocks\\b"" )"	265:2:6317:6352	612582	15	True				
ANR	612776	CallExpression	"eprintf ( ""Creating basic blocks\\b"" )"		612582	0					
ANR	612777	Callee	eprintf		612582	0					
ANR	612778	Identifier	eprintf		612582	0					
ANR	612779	ArgumentList	"""Creating basic blocks\\b"""		612582	1					
ANR	612780	Argument	"""Creating basic blocks\\b"""		612582	0					
ANR	612781	PrimaryExpression	"""Creating basic blocks\\b"""		612582	0					
ANR	612782	IdentifierDeclStatement	ut64 base = cur ;	267:1:6358:6373	612582	17	True				
ANR	612783	IdentifierDecl	base = cur		612582	0					
ANR	612784	IdentifierDeclType	ut64		612582	0					
ANR	612785	Identifier	base		612582	1					
ANR	612786	AssignmentExpression	base = cur		612582	2		=			
ANR	612787	Identifier	cur		612582	0					
ANR	612788	Identifier	cur		612582	1					
ANR	612789	WhileStatement	while ( cur >= base && cur < size )		612582	18					
ANR	612790	Condition	cur >= base && cur < size	268:8:6383:6407	612582	0	True				
ANR	612791	AndExpression	cur >= base && cur < size		612582	0		&&			
ANR	612792	RelationalExpression	cur >= base		612582	0		>=			
ANR	612793	Identifier	cur		612582	0					
ANR	612794	Identifier	base		612582	1					
ANR	612795	RelationalExpression	cur < size		612582	1		<			
ANR	612796	Identifier	cur		612582	0					
ANR	612797	Identifier	size		612582	1					
ANR	612798	CompoundStatement		44:2:1106:1138	612582	1					
ANR	612799	IfStatement	if ( r_cons_is_breaked ( ) )		612582	0					
ANR	612800	Condition	r_cons_is_breaked ( )	269:6:6418:6437	612582	0	True				
ANR	612801	CallExpression	r_cons_is_breaked ( )		612582	0					
ANR	612802	Callee	r_cons_is_breaked		612582	0					
ANR	612803	Identifier	r_cons_is_breaked		612582	0					
ANR	612804	ArgumentList			612582	1					
ANR	612805	CompoundStatement		32:28:871:871	612582	1					
ANR	612806	BreakStatement	break ;	270:3:6445:6450	612582	0	True				
ANR	612807	IfStatement	if ( block_score < invalid_instruction_barrier )		612582	1					
ANR	612808	Condition	block_score < invalid_instruction_barrier	273:6:6527:6567	612582	0	True				
ANR	612809	RelationalExpression	block_score < invalid_instruction_barrier		612582	0		<			
ANR	612810	Identifier	block_score		612582	0					
ANR	612811	Identifier	invalid_instruction_barrier		612582	1					
ANR	612812	CompoundStatement		36:49:1001:1001	612582	1					
ANR	612813	BreakStatement	break ;	274:3:6575:6580	612582	0	True				
ANR	612814	IdentifierDeclStatement	ut64 dst = start + cur ;	276:2:6588:6610	612582	2	True				
ANR	612815	IdentifierDecl	dst = start + cur		612582	0					
ANR	612816	IdentifierDeclType	ut64		612582	0					
ANR	612817	Identifier	dst		612582	1					
ANR	612818	AssignmentExpression	dst = start + cur		612582	2		=			
ANR	612819	Identifier	dst		612582	0					
ANR	612820	AdditiveExpression	start + cur		612582	1		+			
ANR	612821	Identifier	start		612582	0					
ANR	612822	Identifier	cur		612582	1					
ANR	612823	IfStatement	if ( dst < start )		612582	3					
ANR	612824	Condition	dst < start	277:6:6618:6628	612582	0	True				
ANR	612825	RelationalExpression	dst < start		612582	0		<			
ANR	612826	Identifier	dst		612582	0					
ANR	612827	Identifier	start		612582	1					
ANR	612828	CompoundStatement		40:19:1062:1062	612582	1					
ANR	612829	BreakStatement	break ;	279:3:6662:6667	612582	0	True				
ANR	612830	IdentifierDeclStatement	"int dsize = __isdata ( core , dst ) ;"	281:2:6675:6707	612582	4	True				
ANR	612831	IdentifierDecl	"dsize = __isdata ( core , dst )"		612582	0					
ANR	612832	IdentifierDeclType	int		612582	0					
ANR	612833	Identifier	dsize		612582	1					
ANR	612834	AssignmentExpression	"dsize = __isdata ( core , dst )"		612582	2		=			
ANR	612835	Identifier	dsize		612582	0					
ANR	612836	CallExpression	"__isdata ( core , dst )"		612582	1					
ANR	612837	Callee	__isdata		612582	0					
ANR	612838	Identifier	__isdata		612582	0					
ANR	612839	ArgumentList	core		612582	1					
ANR	612840	Argument	core		612582	0					
ANR	612841	Identifier	core		612582	0					
ANR	612842	Argument	dst		612582	1					
ANR	612843	Identifier	dst		612582	0					
ANR	612844	IfStatement	if ( dsize > 0 )		612582	5					
ANR	612845	Condition	dsize > 0	282:6:6715:6723	612582	0	True				
ANR	612846	RelationalExpression	dsize > 0		612582	0		>			
ANR	612847	Identifier	dsize		612582	0					
ANR	612848	PrimaryExpression	0		612582	1					
ANR	612849	CompoundStatement		45:17:1157:1157	612582	1					
ANR	612850	ExpressionStatement	cur += dsize	283:3:6731:6743	612582	0	True				
ANR	612851	AssignmentExpression	cur += dsize		612582	0		+=			
ANR	612852	Identifier	cur		612582	0					
ANR	612853	Identifier	dsize		612582	1					
ANR	612854	ContinueStatement	continue ;	284:3:6748:6756	612582	1	True				
ANR	612855	ExpressionStatement	"op = r_core_anal_op ( core , dst , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM )"	286:2:6764:6841	612582	6	True				
ANR	612856	AssignmentExpression	"op = r_core_anal_op ( core , dst , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM )"		612582	0		=			
ANR	612857	Identifier	op		612582	0					
ANR	612858	CallExpression	"r_core_anal_op ( core , dst , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM )"		612582	1					
ANR	612859	Callee	r_core_anal_op		612582	0					
ANR	612860	Identifier	r_core_anal_op		612582	0					
ANR	612861	ArgumentList	core		612582	1					
ANR	612862	Argument	core		612582	0					
ANR	612863	Identifier	core		612582	0					
ANR	612864	Argument	dst		612582	1					
ANR	612865	Identifier	dst		612582	0					
ANR	612866	Argument	R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM		612582	2					
ANR	612867	InclusiveOrExpression	R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM		612582	0		|			
ANR	612868	Identifier	R_ANAL_OP_MASK_BASIC		612582	0					
ANR	612869	Identifier	R_ANAL_OP_MASK_DISASM		612582	1					
ANR	612870	IfStatement	if ( ! op || ! op -> mnemonic )		612582	7					
ANR	612871	Condition	! op || ! op -> mnemonic	288:6:6850:6869	612582	0	True				
ANR	612872	OrExpression	! op || ! op -> mnemonic		612582	0		||			
ANR	612873	UnaryOperationExpression	! op		612582	0					
ANR	612874	UnaryOperator	!		612582	0					
ANR	612875	Identifier	op		612582	1					
ANR	612876	UnaryOperationExpression	! op -> mnemonic		612582	1					
ANR	612877	UnaryOperator	!		612582	0					
ANR	612878	PtrMemberAccess	op -> mnemonic		612582	1					
ANR	612879	Identifier	op		612582	0					
ANR	612880	Identifier	mnemonic		612582	1					
ANR	612881	CompoundStatement		51:28:1303:1303	612582	1					
ANR	612882	ExpressionStatement	block_score -= 10	289:3:6877:6894	612582	0	True				
ANR	612883	AssignmentExpression	block_score -= 10		612582	0		-=			
ANR	612884	Identifier	block_score		612582	0					
ANR	612885	PrimaryExpression	10		612582	1					
ANR	612886	ExpressionStatement	cur ++	290:3:6899:6904	612582	1	True				
ANR	612887	PostIncDecOperationExpression	cur ++		612582	0					
ANR	612888	Identifier	cur		612582	0					
ANR	612889	IncDec	++		612582	1					
ANR	612890	ContinueStatement	continue ;	291:3:6909:6917	612582	2	True				
ANR	612891	IfStatement	if ( op -> mnemonic [ 0 ] == '?' )		612582	8					
ANR	612892	Condition	op -> mnemonic [ 0 ] == '?'	294:6:6930:6951	612582	0	True				
ANR	612893	EqualityExpression	op -> mnemonic [ 0 ] == '?'		612582	0		==			
ANR	612894	ArrayIndexing	op -> mnemonic [ 0 ]		612582	0					
ANR	612895	PtrMemberAccess	op -> mnemonic		612582	0					
ANR	612896	Identifier	op		612582	0					
ANR	612897	Identifier	mnemonic		612582	1					
ANR	612898	PrimaryExpression	0		612582	1					
ANR	612899	PrimaryExpression	'?'		612582	1					
ANR	612900	CompoundStatement		57:30:1385:1385	612582	1					
ANR	612901	Statement	eprintf	295:3:6959:6965	612582	0	True				
ANR	612902	Statement	(	295:11:6967:6967	612582	1	True				
ANR	612903	Statement	"""? Bad op at: 0x%08"""	295:12:6968:6987	612582	2	True				
ANR	612904	Statement	PFMT64x	295:32:6988:6994	612582	3	True				
ANR	612905	Statement	"""\\n"""	295:39:6995:6998	612582	4	True				
ANR	612906	Statement	","	295:43:6999:6999	612582	5	True				
ANR	612907	Statement	cur	295:45:7001:7003	612582	6	True				
ANR	612908	Statement	+	295:49:7005:7005	612582	7	True				
ANR	612909	Statement	start	295:51:7007:7011	612582	8	True				
ANR	612910	Statement	)	295:56:7012:7012	612582	9	True				
ANR	612911	ExpressionStatement		295:57:7013:7013	612582	10	True				
ANR	612912	Statement	eprintf	296:3:7018:7024	612582	11	True				
ANR	612913	Statement	(	296:11:7026:7026	612582	12	True				
ANR	612914	Statement	"""Cannot analyze opcode at 0x%"""	296:12:7027:7056	612582	13	True				
ANR	612915	Statement	PFMT64x	296:42:7057:7063	612582	14	True				
ANR	612916	Statement	"""\\n"""	296:49:7064:7067	612582	15	True				
ANR	612917	Statement	","	296:53:7068:7068	612582	16	True				
ANR	612918	Statement	start	296:55:7070:7074	612582	17	True				
ANR	612919	Statement	+	296:61:7076:7076	612582	18	True				
ANR	612920	Statement	cur	296:63:7078:7080	612582	19	True				
ANR	612921	Statement	)	296:66:7081:7081	612582	20	True				
ANR	612922	ExpressionStatement		296:67:7082:7082	612582	21	True				
ANR	612923	ExpressionStatement	block_score -= 10	297:3:7087:7104	612582	22	True				
ANR	612924	AssignmentExpression	block_score -= 10		612582	0		-=			
ANR	612925	Identifier	block_score		612582	0					
ANR	612926	PrimaryExpression	10		612582	1					
ANR	612927	ExpressionStatement	cur ++	298:3:7109:7114	612582	23	True				
ANR	612928	PostIncDecOperationExpression	cur ++		612582	0					
ANR	612929	Identifier	cur		612582	0					
ANR	612930	IncDec	++		612582	1					
ANR	612931	ContinueStatement	continue ;	299:3:7119:7127	612582	24	True				
ANR	612932	SwitchStatement	switch ( op -> type )		612582	9					
ANR	612933	Condition	op -> type	301:10:7143:7150	612582	0	True				
ANR	612934	PtrMemberAccess	op -> type		612582	0					
ANR	612935	Identifier	op		612582	0					
ANR	612936	Identifier	type		612582	1					
ANR	612937	CompoundStatement		64:20:1584:1584	612582	1					
ANR	612938	Label	case R_ANAL_OP_TYPE_NOP :	302:2:7157:7180	612582	0	True				
ANR	612939	Identifier	R_ANAL_OP_TYPE_NOP		612582	0					
ANR	612940	IfStatement	if ( nopskip && b_start == start + cur )		612582	1					
ANR	612941	Condition	nopskip && b_start == start + cur	303:8:7190:7222	612582	0	True				
ANR	612942	AndExpression	nopskip && b_start == start + cur		612582	0		&&			
ANR	612943	Identifier	nopskip		612582	0					
ANR	612944	EqualityExpression	b_start == start + cur		612582	1		==			
ANR	612945	Identifier	b_start		612582	0					
ANR	612946	AdditiveExpression	start + cur		612582	1		+			
ANR	612947	Identifier	start		612582	0					
ANR	612948	Identifier	cur		612582	1					
ANR	612949	CompoundStatement		66:43:1656:1656	612582	1					
ANR	612950	ExpressionStatement	b_start = start + cur + op -> size	304:5:7232:7264	612582	0	True				
ANR	612951	AssignmentExpression	b_start = start + cur + op -> size		612582	0		=			
ANR	612952	Identifier	b_start		612582	0					
ANR	612953	AdditiveExpression	start + cur + op -> size		612582	1		+			
ANR	612954	Identifier	start		612582	0					
ANR	612955	AdditiveExpression	cur + op -> size		612582	1		+			
ANR	612956	Identifier	cur		612582	0					
ANR	612957	PtrMemberAccess	op -> size		612582	1					
ANR	612958	Identifier	op		612582	0					
ANR	612959	Identifier	size		612582	1					
ANR	612960	BreakStatement	break ;	306:3:7275:7280	612582	2	True				
ANR	612961	Label	case R_ANAL_OP_TYPE_CALL :	307:2:7284:7308	612582	3	True				
ANR	612962	Identifier	R_ANAL_OP_TYPE_CALL		612582	0					
ANR	612963	IfStatement	"if ( r_anal_noreturn_at ( core -> anal , op -> jump ) )"		612582	4					
ANR	612964	Condition	"r_anal_noreturn_at ( core -> anal , op -> jump )"	308:7:7317:7357	612582	0	True				
ANR	612965	CallExpression	"r_anal_noreturn_at ( core -> anal , op -> jump )"		612582	0					
ANR	612966	Callee	r_anal_noreturn_at		612582	0					
ANR	612967	Identifier	r_anal_noreturn_at		612582	0					
ANR	612968	ArgumentList	core -> anal		612582	1					
ANR	612969	Argument	core -> anal		612582	0					
ANR	612970	PtrMemberAccess	core -> anal		612582	0					
ANR	612971	Identifier	core		612582	0					
ANR	612972	Identifier	anal		612582	1					
ANR	612973	Argument	op -> jump		612582	1					
ANR	612974	PtrMemberAccess	op -> jump		612582	0					
ANR	612975	Identifier	op		612582	0					
ANR	612976	Identifier	jump		612582	1					
ANR	612977	CompoundStatement		71:50:1791:1791	612582	1					
ANR	612978	ExpressionStatement	"addBB ( block_list , b_start , start + cur + op -> size , UT64_MAX , UT64_MAX , END , block_score )"	309:4:7366:7455	612582	0	True				
ANR	612979	CallExpression	"addBB ( block_list , b_start , start + cur + op -> size , UT64_MAX , UT64_MAX , END , block_score )"		612582	0					
ANR	612980	Callee	addBB		612582	0					
ANR	612981	Identifier	addBB		612582	0					
ANR	612982	ArgumentList	block_list		612582	1					
ANR	612983	Argument	block_list		612582	0					
ANR	612984	Identifier	block_list		612582	0					
ANR	612985	Argument	b_start		612582	1					
ANR	612986	Identifier	b_start		612582	0					
ANR	612987	Argument	start + cur + op -> size		612582	2					
ANR	612988	AdditiveExpression	start + cur + op -> size		612582	0		+			
ANR	612989	Identifier	start		612582	0					
ANR	612990	AdditiveExpression	cur + op -> size		612582	1		+			
ANR	612991	Identifier	cur		612582	0					
ANR	612992	PtrMemberAccess	op -> size		612582	1					
ANR	612993	Identifier	op		612582	0					
ANR	612994	Identifier	size		612582	1					
ANR	612995	Argument	UT64_MAX		612582	3					
ANR	612996	Identifier	UT64_MAX		612582	0					
ANR	612997	Argument	UT64_MAX		612582	4					
ANR	612998	Identifier	UT64_MAX		612582	0					
ANR	612999	Argument	END		612582	5					
ANR	613000	Identifier	END		612582	0					
ANR	613001	Argument	block_score		612582	6					
ANR	613002	Identifier	block_score		612582	0					
ANR	613003	ExpressionStatement	b_start = start + cur + op -> size	310:4:7461:7493	612582	1	True				
ANR	613004	AssignmentExpression	b_start = start + cur + op -> size		612582	0		=			
ANR	613005	Identifier	b_start		612582	0					
ANR	613006	AdditiveExpression	start + cur + op -> size		612582	1		+			
ANR	613007	Identifier	start		612582	0					
ANR	613008	AdditiveExpression	cur + op -> size		612582	1		+			
ANR	613009	Identifier	cur		612582	0					
ANR	613010	PtrMemberAccess	op -> size		612582	1					
ANR	613011	Identifier	op		612582	0					
ANR	613012	Identifier	size		612582	1					
ANR	613013	ExpressionStatement	block_score = 0	311:4:7499:7514	612582	2	True				
ANR	613014	AssignmentExpression	block_score = 0		612582	0		=			
ANR	613015	Identifier	block_score		612582	0					
ANR	613016	PrimaryExpression	0		612582	1					
ANR	613017	ElseStatement	else		612582	0					
ANR	613018	CompoundStatement		75:10:1957:1957	612582	0					
ANR	613019	ExpressionStatement	"addBB ( block_list , op -> jump , UT64_MAX , UT64_MAX , UT64_MAX , CALL , block_score )"	313:4:7532:7609	612582	0	True				
ANR	613020	CallExpression	"addBB ( block_list , op -> jump , UT64_MAX , UT64_MAX , UT64_MAX , CALL , block_score )"		612582	0					
ANR	613021	Callee	addBB		612582	0					
ANR	613022	Identifier	addBB		612582	0					
ANR	613023	ArgumentList	block_list		612582	1					
ANR	613024	Argument	block_list		612582	0					
ANR	613025	Identifier	block_list		612582	0					
ANR	613026	Argument	op -> jump		612582	1					
ANR	613027	PtrMemberAccess	op -> jump		612582	0					
ANR	613028	Identifier	op		612582	0					
ANR	613029	Identifier	jump		612582	1					
ANR	613030	Argument	UT64_MAX		612582	2					
ANR	613031	Identifier	UT64_MAX		612582	0					
ANR	613032	Argument	UT64_MAX		612582	3					
ANR	613033	Identifier	UT64_MAX		612582	0					
ANR	613034	Argument	UT64_MAX		612582	4					
ANR	613035	Identifier	UT64_MAX		612582	0					
ANR	613036	Argument	CALL		612582	5					
ANR	613037	Identifier	CALL		612582	0					
ANR	613038	Argument	block_score		612582	6					
ANR	613039	Identifier	block_score		612582	0					
ANR	613040	BreakStatement	break ;	315:3:7619:7624	612582	5	True				
ANR	613041	Label	case R_ANAL_OP_TYPE_JMP :	316:2:7628:7651	612582	6	True				
ANR	613042	Identifier	R_ANAL_OP_TYPE_JMP		612582	0					
ANR	613043	ExpressionStatement	"addBB ( block_list , b_start , start + cur + op -> size , op -> jump , UT64_MAX , END , block_score )"	317:3:7656:7745	612582	7	True				
ANR	613044	CallExpression	"addBB ( block_list , b_start , start + cur + op -> size , op -> jump , UT64_MAX , END , block_score )"		612582	0					
ANR	613045	Callee	addBB		612582	0					
ANR	613046	Identifier	addBB		612582	0					
ANR	613047	ArgumentList	block_list		612582	1					
ANR	613048	Argument	block_list		612582	0					
ANR	613049	Identifier	block_list		612582	0					
ANR	613050	Argument	b_start		612582	1					
ANR	613051	Identifier	b_start		612582	0					
ANR	613052	Argument	start + cur + op -> size		612582	2					
ANR	613053	AdditiveExpression	start + cur + op -> size		612582	0		+			
ANR	613054	Identifier	start		612582	0					
ANR	613055	AdditiveExpression	cur + op -> size		612582	1		+			
ANR	613056	Identifier	cur		612582	0					
ANR	613057	PtrMemberAccess	op -> size		612582	1					
ANR	613058	Identifier	op		612582	0					
ANR	613059	Identifier	size		612582	1					
ANR	613060	Argument	op -> jump		612582	3					
ANR	613061	PtrMemberAccess	op -> jump		612582	0					
ANR	613062	Identifier	op		612582	0					
ANR	613063	Identifier	jump		612582	1					
ANR	613064	Argument	UT64_MAX		612582	4					
ANR	613065	Identifier	UT64_MAX		612582	0					
ANR	613066	Argument	END		612582	5					
ANR	613067	Identifier	END		612582	0					
ANR	613068	Argument	block_score		612582	6					
ANR	613069	Identifier	block_score		612582	0					
ANR	613070	ExpressionStatement	b_start = start + cur + op -> size	318:3:7750:7782	612582	8	True				
ANR	613071	AssignmentExpression	b_start = start + cur + op -> size		612582	0		=			
ANR	613072	Identifier	b_start		612582	0					
ANR	613073	AdditiveExpression	start + cur + op -> size		612582	1		+			
ANR	613074	Identifier	start		612582	0					
ANR	613075	AdditiveExpression	cur + op -> size		612582	1		+			
ANR	613076	Identifier	cur		612582	0					
ANR	613077	PtrMemberAccess	op -> size		612582	1					
ANR	613078	Identifier	op		612582	0					
ANR	613079	Identifier	size		612582	1					
ANR	613080	ExpressionStatement	block_score = 0	319:3:7787:7802	612582	9	True				
ANR	613081	AssignmentExpression	block_score = 0		612582	0		=			
ANR	613082	Identifier	block_score		612582	0					
ANR	613083	PrimaryExpression	0		612582	1					
ANR	613084	BreakStatement	break ;	320:3:7807:7812	612582	10	True				
ANR	613085	Label	case R_ANAL_OP_TYPE_TRAP :	321:2:7816:7840	612582	11	True				
ANR	613086	Identifier	R_ANAL_OP_TYPE_TRAP		612582	0					
ANR	613087	IfStatement	if ( b_start < start + cur )		612582	12					
ANR	613088	Condition	b_start < start + cur	323:7:7887:7907	612582	0	True				
ANR	613089	RelationalExpression	b_start < start + cur		612582	0		<			
ANR	613090	Identifier	b_start		612582	0					
ANR	613091	AdditiveExpression	start + cur		612582	1		+			
ANR	613092	Identifier	start		612582	0					
ANR	613093	Identifier	cur		612582	1					
ANR	613094	CompoundStatement		86:30:2341:2341	612582	1					
ANR	613095	ExpressionStatement	"addBB ( block_list , b_start , start + cur , UT64_MAX , UT64_MAX , NORMAL , block_score )"	324:4:7916:7997	612582	0	True				
ANR	613096	CallExpression	"addBB ( block_list , b_start , start + cur , UT64_MAX , UT64_MAX , NORMAL , block_score )"		612582	0					
ANR	613097	Callee	addBB		612582	0					
ANR	613098	Identifier	addBB		612582	0					
ANR	613099	ArgumentList	block_list		612582	1					
ANR	613100	Argument	block_list		612582	0					
ANR	613101	Identifier	block_list		612582	0					
ANR	613102	Argument	b_start		612582	1					
ANR	613103	Identifier	b_start		612582	0					
ANR	613104	Argument	start + cur		612582	2					
ANR	613105	AdditiveExpression	start + cur		612582	0		+			
ANR	613106	Identifier	start		612582	0					
ANR	613107	Identifier	cur		612582	1					
ANR	613108	Argument	UT64_MAX		612582	3					
ANR	613109	Identifier	UT64_MAX		612582	0					
ANR	613110	Argument	UT64_MAX		612582	4					
ANR	613111	Identifier	UT64_MAX		612582	0					
ANR	613112	Argument	NORMAL		612582	5					
ANR	613113	Identifier	NORMAL		612582	0					
ANR	613114	Argument	block_score		612582	6					
ANR	613115	Identifier	block_score		612582	0					
ANR	613116	ExpressionStatement	b_start = start + cur + op -> size	326:3:8007:8039	612582	13	True				
ANR	613117	AssignmentExpression	b_start = start + cur + op -> size		612582	0		=			
ANR	613118	Identifier	b_start		612582	0					
ANR	613119	AdditiveExpression	start + cur + op -> size		612582	1		+			
ANR	613120	Identifier	start		612582	0					
ANR	613121	AdditiveExpression	cur + op -> size		612582	1		+			
ANR	613122	Identifier	cur		612582	0					
ANR	613123	PtrMemberAccess	op -> size		612582	1					
ANR	613124	Identifier	op		612582	0					
ANR	613125	Identifier	size		612582	1					
ANR	613126	ExpressionStatement	block_score = 0	327:3:8044:8059	612582	14	True				
ANR	613127	AssignmentExpression	block_score = 0		612582	0		=			
ANR	613128	Identifier	block_score		612582	0					
ANR	613129	PrimaryExpression	0		612582	1					
ANR	613130	BreakStatement	break ;	328:3:8064:8069	612582	15	True				
ANR	613131	Label	case R_ANAL_OP_TYPE_RET :	329:2:8073:8096	612582	16	True				
ANR	613132	Identifier	R_ANAL_OP_TYPE_RET		612582	0					
ANR	613133	ExpressionStatement	"addBB ( block_list , b_start , start + cur + op -> size , UT64_MAX , UT64_MAX , END , block_score )"	330:3:8101:8190	612582	17	True				
ANR	613134	CallExpression	"addBB ( block_list , b_start , start + cur + op -> size , UT64_MAX , UT64_MAX , END , block_score )"		612582	0					
ANR	613135	Callee	addBB		612582	0					
ANR	613136	Identifier	addBB		612582	0					
ANR	613137	ArgumentList	block_list		612582	1					
ANR	613138	Argument	block_list		612582	0					
ANR	613139	Identifier	block_list		612582	0					
ANR	613140	Argument	b_start		612582	1					
ANR	613141	Identifier	b_start		612582	0					
ANR	613142	Argument	start + cur + op -> size		612582	2					
ANR	613143	AdditiveExpression	start + cur + op -> size		612582	0		+			
ANR	613144	Identifier	start		612582	0					
ANR	613145	AdditiveExpression	cur + op -> size		612582	1		+			
ANR	613146	Identifier	cur		612582	0					
ANR	613147	PtrMemberAccess	op -> size		612582	1					
ANR	613148	Identifier	op		612582	0					
ANR	613149	Identifier	size		612582	1					
ANR	613150	Argument	UT64_MAX		612582	3					
ANR	613151	Identifier	UT64_MAX		612582	0					
ANR	613152	Argument	UT64_MAX		612582	4					
ANR	613153	Identifier	UT64_MAX		612582	0					
ANR	613154	Argument	END		612582	5					
ANR	613155	Identifier	END		612582	0					
ANR	613156	Argument	block_score		612582	6					
ANR	613157	Identifier	block_score		612582	0					
ANR	613158	ExpressionStatement	b_start = start + cur + op -> size	331:3:8195:8227	612582	18	True				
ANR	613159	AssignmentExpression	b_start = start + cur + op -> size		612582	0		=			
ANR	613160	Identifier	b_start		612582	0					
ANR	613161	AdditiveExpression	start + cur + op -> size		612582	1		+			
ANR	613162	Identifier	start		612582	0					
ANR	613163	AdditiveExpression	cur + op -> size		612582	1		+			
ANR	613164	Identifier	cur		612582	0					
ANR	613165	PtrMemberAccess	op -> size		612582	1					
ANR	613166	Identifier	op		612582	0					
ANR	613167	Identifier	size		612582	1					
ANR	613168	ExpressionStatement	block_score = 0	332:3:8232:8247	612582	19	True				
ANR	613169	AssignmentExpression	block_score = 0		612582	0		=			
ANR	613170	Identifier	block_score		612582	0					
ANR	613171	PrimaryExpression	0		612582	1					
ANR	613172	BreakStatement	break ;	333:3:8252:8257	612582	20	True				
ANR	613173	Label	case R_ANAL_OP_TYPE_CJMP :	334:2:8261:8285	612582	21	True				
ANR	613174	Identifier	R_ANAL_OP_TYPE_CJMP		612582	0					
ANR	613175	ExpressionStatement	"addBB ( block_list , b_start , start + cur + op -> size , op -> jump , start + cur + op -> size , NORMAL , block_score )"	335:3:8290:8396	612582	22	True				
ANR	613176	CallExpression	"addBB ( block_list , b_start , start + cur + op -> size , op -> jump , start + cur + op -> size , NORMAL , block_score )"		612582	0					
ANR	613177	Callee	addBB		612582	0					
ANR	613178	Identifier	addBB		612582	0					
ANR	613179	ArgumentList	block_list		612582	1					
ANR	613180	Argument	block_list		612582	0					
ANR	613181	Identifier	block_list		612582	0					
ANR	613182	Argument	b_start		612582	1					
ANR	613183	Identifier	b_start		612582	0					
ANR	613184	Argument	start + cur + op -> size		612582	2					
ANR	613185	AdditiveExpression	start + cur + op -> size		612582	0		+			
ANR	613186	Identifier	start		612582	0					
ANR	613187	AdditiveExpression	cur + op -> size		612582	1		+			
ANR	613188	Identifier	cur		612582	0					
ANR	613189	PtrMemberAccess	op -> size		612582	1					
ANR	613190	Identifier	op		612582	0					
ANR	613191	Identifier	size		612582	1					
ANR	613192	Argument	op -> jump		612582	3					
ANR	613193	PtrMemberAccess	op -> jump		612582	0					
ANR	613194	Identifier	op		612582	0					
ANR	613195	Identifier	jump		612582	1					
ANR	613196	Argument	start + cur + op -> size		612582	4					
ANR	613197	AdditiveExpression	start + cur + op -> size		612582	0		+			
ANR	613198	Identifier	start		612582	0					
ANR	613199	AdditiveExpression	cur + op -> size		612582	1		+			
ANR	613200	Identifier	cur		612582	0					
ANR	613201	PtrMemberAccess	op -> size		612582	1					
ANR	613202	Identifier	op		612582	0					
ANR	613203	Identifier	size		612582	1					
ANR	613204	Argument	NORMAL		612582	5					
ANR	613205	Identifier	NORMAL		612582	0					
ANR	613206	Argument	block_score		612582	6					
ANR	613207	Identifier	block_score		612582	0					
ANR	613208	ExpressionStatement	b_start = start + cur + op -> size	336:3:8401:8433	612582	23	True				
ANR	613209	AssignmentExpression	b_start = start + cur + op -> size		612582	0		=			
ANR	613210	Identifier	b_start		612582	0					
ANR	613211	AdditiveExpression	start + cur + op -> size		612582	1		+			
ANR	613212	Identifier	start		612582	0					
ANR	613213	AdditiveExpression	cur + op -> size		612582	1		+			
ANR	613214	Identifier	cur		612582	0					
ANR	613215	PtrMemberAccess	op -> size		612582	1					
ANR	613216	Identifier	op		612582	0					
ANR	613217	Identifier	size		612582	1					
ANR	613218	ExpressionStatement	block_score = 0	337:3:8438:8453	612582	24	True				
ANR	613219	AssignmentExpression	block_score = 0		612582	0		=			
ANR	613220	Identifier	block_score		612582	0					
ANR	613221	PrimaryExpression	0		612582	1					
ANR	613222	BreakStatement	break ;	338:3:8458:8463	612582	25	True				
ANR	613223	Label	case R_ANAL_OP_TYPE_UNK :	339:2:8467:8490	612582	26	True				
ANR	613224	Identifier	R_ANAL_OP_TYPE_UNK		612582	0					
ANR	613225	Label	case R_ANAL_OP_TYPE_ILL :	340:2:8494:8517	612582	27	True				
ANR	613226	Identifier	R_ANAL_OP_TYPE_ILL		612582	0					
ANR	613227	ExpressionStatement	block_score -= 10	341:3:8522:8539	612582	28	True				
ANR	613228	AssignmentExpression	block_score -= 10		612582	0		-=			
ANR	613229	Identifier	block_score		612582	0					
ANR	613230	PrimaryExpression	10		612582	1					
ANR	613231	BreakStatement	break ;	342:3:8544:8549	612582	29	True				
ANR	613232	Label	default :	343:2:8553:8560	612582	30	True				
ANR	613233	Identifier	default		612582	0					
ANR	613234	BreakStatement	break ;	344:3:8565:8570	612582	31	True				
ANR	613235	ExpressionStatement	cur += op -> size	346:2:8578:8593	612582	10	True				
ANR	613236	AssignmentExpression	cur += op -> size		612582	0		+=			
ANR	613237	Identifier	cur		612582	0					
ANR	613238	PtrMemberAccess	op -> size		612582	1					
ANR	613239	Identifier	op		612582	0					
ANR	613240	Identifier	size		612582	1					
ANR	613241	ExpressionStatement	r_anal_op_free ( op )	347:2:8597:8616	612582	11	True				
ANR	613242	CallExpression	r_anal_op_free ( op )		612582	0					
ANR	613243	Callee	r_anal_op_free		612582	0					
ANR	613244	Identifier	r_anal_op_free		612582	0					
ANR	613245	ArgumentList	op		612582	1					
ANR	613246	Argument	op		612582	0					
ANR	613247	Identifier	op		612582	0					
ANR	613248	ExpressionStatement	op = NULL	348:2:8620:8629	612582	12	True				
ANR	613249	AssignmentExpression	op = NULL		612582	0		=			
ANR	613250	Identifier	op		612582	0					
ANR	613251	Identifier	NULL		612582	1					
ANR	613252	IfStatement	if ( debug )		612582	19					
ANR	613253	Condition	debug	351:5:8640:8644	612582	0	True				
ANR	613254	Identifier	debug		612582	0					
ANR	613255	CompoundStatement		114:12:3078:3078	612582	1					
ANR	613256	ExpressionStatement	"eprintf ( ""Found %d basic blocks\\n"" , block_list -> length )"	352:2:8651:8706	612582	0	True				
ANR	613257	CallExpression	"eprintf ( ""Found %d basic blocks\\n"" , block_list -> length )"		612582	0					
ANR	613258	Callee	eprintf		612582	0					
ANR	613259	Identifier	eprintf		612582	0					
ANR	613260	ArgumentList	"""Found %d basic blocks\\n"""		612582	1					
ANR	613261	Argument	"""Found %d basic blocks\\n"""		612582	0					
ANR	613262	PrimaryExpression	"""Found %d basic blocks\\n"""		612582	0					
ANR	613263	Argument	block_list -> length		612582	1					
ANR	613264	PtrMemberAccess	block_list -> length		612582	0					
ANR	613265	Identifier	block_list		612582	0					
ANR	613266	Identifier	length		612582	1					
ANR	613267	IdentifierDeclStatement	RList * result = r_list_newf ( free ) ;	355:1:8713:8747	612582	20	True				
ANR	613268	IdentifierDecl	* result = r_list_newf ( free )		612582	0					
ANR	613269	IdentifierDeclType	RList *		612582	0					
ANR	613270	Identifier	result		612582	1					
ANR	613271	AssignmentExpression	* result = r_list_newf ( free )		612582	2		=			
ANR	613272	Identifier	result		612582	0					
ANR	613273	CallExpression	r_list_newf ( free )		612582	1					
ANR	613274	Callee	r_list_newf		612582	0					
ANR	613275	Identifier	r_list_newf		612582	0					
ANR	613276	ArgumentList	free		612582	1					
ANR	613277	Argument	free		612582	0					
ANR	613278	Identifier	free		612582	0					
ANR	613279	IfStatement	if ( ! result )		612582	21					
ANR	613280	Condition	! result	356:5:8754:8760	612582	0	True				
ANR	613281	UnaryOperationExpression	! result		612582	0					
ANR	613282	UnaryOperator	!		612582	0					
ANR	613283	Identifier	result		612582	1					
ANR	613284	CompoundStatement		119:14:3194:3194	612582	1					
ANR	613285	ExpressionStatement	r_list_free ( block_list )	357:2:8767:8791	612582	0	True				
ANR	613286	CallExpression	r_list_free ( block_list )		612582	0					
ANR	613287	Callee	r_list_free		612582	0					
ANR	613288	Identifier	r_list_free		612582	0					
ANR	613289	ArgumentList	block_list		612582	1					
ANR	613290	Argument	block_list		612582	0					
ANR	613291	Identifier	block_list		612582	0					
ANR	613292	ExpressionStatement	"eprintf ( ""Failed to create resulting list\\n"" )"	358:2:8795:8840	612582	1	True				
ANR	613293	CallExpression	"eprintf ( ""Failed to create resulting list\\n"" )"		612582	0					
ANR	613294	Callee	eprintf		612582	0					
ANR	613295	Identifier	eprintf		612582	0					
ANR	613296	ArgumentList	"""Failed to create resulting list\\n"""		612582	1					
ANR	613297	Argument	"""Failed to create resulting list\\n"""		612582	0					
ANR	613298	PrimaryExpression	"""Failed to create resulting list\\n"""		612582	0					
ANR	613299	ReturnStatement	return false ;	359:2:8844:8856	612582	2	True				
ANR	613300	Identifier	false		612582	0					
ANR	613301	ExpressionStatement	sdb = sdb_new0 ( )	362:1:8863:8880	612582	22	True				
ANR	613302	AssignmentExpression	sdb = sdb_new0 ( )		612582	0		=			
ANR	613303	Identifier	sdb		612582	0					
ANR	613304	CallExpression	sdb_new0 ( )		612582	1					
ANR	613305	Callee	sdb_new0		612582	0					
ANR	613306	Identifier	sdb_new0		612582	0					
ANR	613307	ArgumentList			612582	1					
ANR	613308	IfStatement	if ( ! sdb )		612582	23					
ANR	613309	Condition	! sdb	363:5:8887:8890	612582	0	True				
ANR	613310	UnaryOperationExpression	! sdb		612582	0					
ANR	613311	UnaryOperator	!		612582	0					
ANR	613312	Identifier	sdb		612582	1					
ANR	613313	CompoundStatement		126:11:3324:3324	612582	1					
ANR	613314	ExpressionStatement	"eprintf ( ""Failed to initialize sdb db\\n"" )"	364:2:8897:8938	612582	0	True				
ANR	613315	CallExpression	"eprintf ( ""Failed to initialize sdb db\\n"" )"		612582	0					
ANR	613316	Callee	eprintf		612582	0					
ANR	613317	Identifier	eprintf		612582	0					
ANR	613318	ArgumentList	"""Failed to initialize sdb db\\n"""		612582	1					
ANR	613319	Argument	"""Failed to initialize sdb db\\n"""		612582	0					
ANR	613320	PrimaryExpression	"""Failed to initialize sdb db\\n"""		612582	0					
ANR	613321	ExpressionStatement	r_list_free ( block_list )	365:2:8942:8966	612582	1	True				
ANR	613322	CallExpression	r_list_free ( block_list )		612582	0					
ANR	613323	Callee	r_list_free		612582	0					
ANR	613324	Identifier	r_list_free		612582	0					
ANR	613325	ArgumentList	block_list		612582	1					
ANR	613326	Argument	block_list		612582	0					
ANR	613327	Identifier	block_list		612582	0					
ANR	613328	ExpressionStatement	r_list_free ( result )	366:2:8970:8990	612582	2	True				
ANR	613329	CallExpression	r_list_free ( result )		612582	0					
ANR	613330	Callee	r_list_free		612582	0					
ANR	613331	Identifier	r_list_free		612582	0					
ANR	613332	ArgumentList	result		612582	1					
ANR	613333	Argument	result		612582	0					
ANR	613334	Identifier	result		612582	0					
ANR	613335	ReturnStatement	return false ;	367:2:8994:9006	612582	3	True				
ANR	613336	Identifier	false		612582	0					
ANR	613337	ExpressionStatement	"r_list_sort ( block_list , ( RListComparator ) bbCMP )"	370:1:9013:9061	612582	24	True				
ANR	613338	CallExpression	"r_list_sort ( block_list , ( RListComparator ) bbCMP )"		612582	0					
ANR	613339	Callee	r_list_sort		612582	0					
ANR	613340	Identifier	r_list_sort		612582	0					
ANR	613341	ArgumentList	block_list		612582	1					
ANR	613342	Argument	block_list		612582	0					
ANR	613343	Identifier	block_list		612582	0					
ANR	613344	Argument	( RListComparator ) bbCMP		612582	1					
ANR	613345	CastExpression	( RListComparator ) bbCMP		612582	0					
ANR	613346	CastTarget	RListComparator		612582	0					
ANR	613347	Identifier	bbCMP		612582	1					
ANR	613348	IfStatement	if ( debug )		612582	25					
ANR	613349	Condition	debug	372:5:9069:9073	612582	0	True				
ANR	613350	Identifier	debug		612582	0					
ANR	613351	CompoundStatement		135:12:3507:3507	612582	1					
ANR	613352	ExpressionStatement	"eprintf ( ""Sorting all blocks done\\n"" )"	373:2:9080:9117	612582	0	True				
ANR	613353	CallExpression	"eprintf ( ""Sorting all blocks done\\n"" )"		612582	0					
ANR	613354	Callee	eprintf		612582	0					
ANR	613355	Identifier	eprintf		612582	0					
ANR	613356	ArgumentList	"""Sorting all blocks done\\n"""		612582	1					
ANR	613357	Argument	"""Sorting all blocks done\\n"""		612582	0					
ANR	613358	PrimaryExpression	"""Sorting all blocks done\\n"""		612582	0					
ANR	613359	ExpressionStatement	"eprintf ( ""Creating the complete graph\\n"" )"	374:2:9121:9162	612582	1	True				
ANR	613360	CallExpression	"eprintf ( ""Creating the complete graph\\n"" )"		612582	0					
ANR	613361	Callee	eprintf		612582	0					
ANR	613362	Identifier	eprintf		612582	0					
ANR	613363	ArgumentList	"""Creating the complete graph\\n"""		612582	1					
ANR	613364	Argument	"""Creating the complete graph\\n"""		612582	0					
ANR	613365	PrimaryExpression	"""Creating the complete graph\\n"""		612582	0					
ANR	613366	WhileStatement	while ( block_list -> length > 0 )		612582	26					
ANR	613367	Condition	block_list -> length > 0	377:8:9176:9197	612582	0	True				
ANR	613368	RelationalExpression	block_list -> length > 0		612582	0		>			
ANR	613369	PtrMemberAccess	block_list -> length		612582	0					
ANR	613370	Identifier	block_list		612582	0					
ANR	613371	Identifier	length		612582	1					
ANR	613372	PrimaryExpression	0		612582	1					
ANR	613373	CompoundStatement		140:32:3631:3631	612582	1					
ANR	613374	ExpressionStatement	block = r_list_pop ( block_list )	378:2:9204:9235	612582	0	True				
ANR	613375	AssignmentExpression	block = r_list_pop ( block_list )		612582	0		=			
ANR	613376	Identifier	block		612582	0					
ANR	613377	CallExpression	r_list_pop ( block_list )		612582	1					
ANR	613378	Callee	r_list_pop		612582	0					
ANR	613379	Identifier	r_list_pop		612582	0					
ANR	613380	ArgumentList	block_list		612582	1					
ANR	613381	Argument	block_list		612582	0					
ANR	613382	Identifier	block_list		612582	0					
ANR	613383	IfStatement	if ( ! block )		612582	1					
ANR	613384	Condition	! block	379:6:9243:9248	612582	0	True				
ANR	613385	UnaryOperationExpression	! block		612582	0					
ANR	613386	UnaryOperator	!		612582	0					
ANR	613387	Identifier	block		612582	1					
ANR	613388	CompoundStatement		142:14:3682:3682	612582	1					
ANR	613389	ExpressionStatement	"eprintf ( ""Failed to get next block from list\\n"" )"	380:3:9256:9304	612582	0	True				
ANR	613390	CallExpression	"eprintf ( ""Failed to get next block from list\\n"" )"		612582	0					
ANR	613391	Callee	eprintf		612582	0					
ANR	613392	Identifier	eprintf		612582	0					
ANR	613393	ArgumentList	"""Failed to get next block from list\\n"""		612582	1					
ANR	613394	Argument	"""Failed to get next block from list\\n"""		612582	0					
ANR	613395	PrimaryExpression	"""Failed to get next block from list\\n"""		612582	0					
ANR	613396	ContinueStatement	continue ;	381:3:9309:9317	612582	1	True				
ANR	613397	IfStatement	if ( r_cons_is_breaked ( ) )		612582	2					
ANR	613398	Condition	r_cons_is_breaked ( )	383:6:9329:9348	612582	0	True				
ANR	613399	CallExpression	r_cons_is_breaked ( )		612582	0					
ANR	613400	Callee	r_cons_is_breaked		612582	0					
ANR	613401	Identifier	r_cons_is_breaked		612582	0					
ANR	613402	ArgumentList			612582	1					
ANR	613403	CompoundStatement		146:28:3782:3782	612582	1					
ANR	613404	BreakStatement	break ;	384:3:9356:9361	612582	0	True				
ANR	613405	IfStatement	if ( block_list -> length > 0 )		612582	3					
ANR	613406	Condition	block_list -> length > 0	387:6:9374:9395	612582	0	True				
ANR	613407	RelationalExpression	block_list -> length > 0		612582	0		>			
ANR	613408	PtrMemberAccess	block_list -> length		612582	0					
ANR	613409	Identifier	block_list		612582	0					
ANR	613410	Identifier	length		612582	1					
ANR	613411	PrimaryExpression	0		612582	1					
ANR	613412	CompoundStatement		151:3:3834:3900	612582	1					
ANR	613413	IdentifierDeclStatement	bb_t * next_block = ( bb_t * ) r_list_iter_get_data ( block_list -> tail ) ;	388:3:9403:9469	612582	0	True				
ANR	613414	IdentifierDecl	* next_block = ( bb_t * ) r_list_iter_get_data ( block_list -> tail )		612582	0					
ANR	613415	IdentifierDeclType	bb_t *		612582	0					
ANR	613416	Identifier	next_block		612582	1					
ANR	613417	AssignmentExpression	* next_block = ( bb_t * ) r_list_iter_get_data ( block_list -> tail )		612582	2		=			
ANR	613418	Identifier	next_block		612582	0					
ANR	613419	CastExpression	( bb_t * ) r_list_iter_get_data ( block_list -> tail )		612582	1					
ANR	613420	CastTarget	bb_t *		612582	0					
ANR	613421	CallExpression	r_list_iter_get_data ( block_list -> tail )		612582	1					
ANR	613422	Callee	r_list_iter_get_data		612582	0					
ANR	613423	Identifier	r_list_iter_get_data		612582	0					
ANR	613424	ArgumentList	block_list -> tail		612582	1					
ANR	613425	Argument	block_list -> tail		612582	0					
ANR	613426	PtrMemberAccess	block_list -> tail		612582	0					
ANR	613427	Identifier	block_list		612582	0					
ANR	613428	Identifier	tail		612582	1					
ANR	613429	IfStatement	if ( ! next_block )		612582	1					
ANR	613430	Condition	! next_block	389:7:9478:9488	612582	0	True				
ANR	613431	UnaryOperationExpression	! next_block		612582	0					
ANR	613432	UnaryOperator	!		612582	0					
ANR	613433	Identifier	next_block		612582	1					
ANR	613434	CompoundStatement		152:20:3922:3922	612582	1					
ANR	613435	ExpressionStatement	"eprintf ( ""No next block to compare with!\\n"" )"	390:4:9497:9541	612582	0	True				
ANR	613436	CallExpression	"eprintf ( ""No next block to compare with!\\n"" )"		612582	0					
ANR	613437	Callee	eprintf		612582	0					
ANR	613438	Identifier	eprintf		612582	0					
ANR	613439	ArgumentList	"""No next block to compare with!\\n"""		612582	1					
ANR	613440	Argument	"""No next block to compare with!\\n"""		612582	0					
ANR	613441	PrimaryExpression	"""No next block to compare with!\\n"""		612582	0					
ANR	613442	IfStatement	if ( block -> start == next_block -> start && block -> end == UT64_MAX )		612582	2					
ANR	613443	Condition	block -> start == next_block -> start && block -> end == UT64_MAX	394:7:9598:9656	612582	0	True				
ANR	613444	AndExpression	block -> start == next_block -> start && block -> end == UT64_MAX		612582	0		&&			
ANR	613445	EqualityExpression	block -> start == next_block -> start		612582	0		==			
ANR	613446	PtrMemberAccess	block -> start		612582	0					
ANR	613447	Identifier	block		612582	0					
ANR	613448	Identifier	start		612582	1					
ANR	613449	PtrMemberAccess	next_block -> start		612582	1					
ANR	613450	Identifier	next_block		612582	0					
ANR	613451	Identifier	start		612582	1					
ANR	613452	EqualityExpression	block -> end == UT64_MAX		612582	1		==			
ANR	613453	PtrMemberAccess	block -> end		612582	0					
ANR	613454	Identifier	block		612582	0					
ANR	613455	Identifier	end		612582	1					
ANR	613456	Identifier	UT64_MAX		612582	1					
ANR	613457	CompoundStatement		157:68:4090:4090	612582	1					
ANR	613458	IfStatement	if ( block -> type != CALL && next_block -> type != CALL )		612582	0					
ANR	613459	Condition	block -> type != CALL && next_block -> type != CALL	395:8:9669:9715	612582	0	True				
ANR	613460	AndExpression	block -> type != CALL && next_block -> type != CALL		612582	0		&&			
ANR	613461	EqualityExpression	block -> type != CALL		612582	0		!=			
ANR	613462	PtrMemberAccess	block -> type		612582	0					
ANR	613463	Identifier	block		612582	0					
ANR	613464	Identifier	type		612582	1					
ANR	613465	Identifier	CALL		612582	1					
ANR	613466	EqualityExpression	next_block -> type != CALL		612582	1		!=			
ANR	613467	PtrMemberAccess	next_block -> type		612582	0					
ANR	613468	Identifier	next_block		612582	0					
ANR	613469	Identifier	type		612582	1					
ANR	613470	Identifier	CALL		612582	1					
ANR	613471	CompoundStatement		158:57:4149:4149	612582	1					
ANR	613472	ExpressionStatement	next_block -> reached = block -> reached + 1	396:5:9725:9765	612582	0	True				
ANR	613473	AssignmentExpression	next_block -> reached = block -> reached + 1		612582	0		=			
ANR	613474	PtrMemberAccess	next_block -> reached		612582	0					
ANR	613475	Identifier	next_block		612582	0					
ANR	613476	Identifier	reached		612582	1					
ANR	613477	AdditiveExpression	block -> reached + 1		612582	1		+			
ANR	613478	PtrMemberAccess	block -> reached		612582	0					
ANR	613479	Identifier	block		612582	0					
ANR	613480	Identifier	reached		612582	1					
ANR	613481	PrimaryExpression	1		612582	1					
ANR	613482	ExpressionStatement	free ( block )	398:4:9777:9789	612582	1	True				
ANR	613483	CallExpression	free ( block )		612582	0					
ANR	613484	Callee	free		612582	0					
ANR	613485	Identifier	free		612582	0					
ANR	613486	ArgumentList	block		612582	1					
ANR	613487	Argument	block		612582	0					
ANR	613488	Identifier	block		612582	0					
ANR	613489	ContinueStatement	continue ;	399:4:9795:9803	612582	2	True				
ANR	613490	IfStatement	if ( block -> start == next_block -> start && next_block -> end == UT64_MAX )		612582	3					
ANR	613491	Condition	block -> start == next_block -> start && next_block -> end == UT64_MAX	404:7:9954:10017	612582	0	True				
ANR	613492	AndExpression	block -> start == next_block -> start && next_block -> end == UT64_MAX		612582	0		&&			
ANR	613493	EqualityExpression	block -> start == next_block -> start		612582	0		==			
ANR	613494	PtrMemberAccess	block -> start		612582	0					
ANR	613495	Identifier	block		612582	0					
ANR	613496	Identifier	start		612582	1					
ANR	613497	PtrMemberAccess	next_block -> start		612582	1					
ANR	613498	Identifier	next_block		612582	0					
ANR	613499	Identifier	start		612582	1					
ANR	613500	EqualityExpression	next_block -> end == UT64_MAX		612582	1		==			
ANR	613501	PtrMemberAccess	next_block -> end		612582	0					
ANR	613502	Identifier	next_block		612582	0					
ANR	613503	Identifier	end		612582	1					
ANR	613504	Identifier	UT64_MAX		612582	1					
ANR	613505	CompoundStatement		167:73:4451:4451	612582	1					
ANR	613506	IfStatement	if ( next_block -> type != CALL )		612582	0					
ANR	613507	Condition	next_block -> type != CALL	405:8:10030:10053	612582	0	True				
ANR	613508	EqualityExpression	next_block -> type != CALL		612582	0		!=			
ANR	613509	PtrMemberAccess	next_block -> type		612582	0					
ANR	613510	Identifier	next_block		612582	0					
ANR	613511	Identifier	type		612582	1					
ANR	613512	Identifier	CALL		612582	1					
ANR	613513	CompoundStatement		168:35:4488:4488	612582	1					
ANR	613514	ExpressionStatement	block -> reached += 1	406:5:10064:10083	612582	0	True				
ANR	613515	AssignmentExpression	block -> reached += 1		612582	0		+=			
ANR	613516	PtrMemberAccess	block -> reached		612582	0					
ANR	613517	Identifier	block		612582	0					
ANR	613518	Identifier	reached		612582	1					
ANR	613519	PrimaryExpression	1		612582	1					
ANR	613520	ExpressionStatement	* next_block = * block	408:4:10095:10115	612582	1	True				
ANR	613521	AssignmentExpression	* next_block = * block		612582	0		=			
ANR	613522	UnaryOperationExpression	* next_block		612582	0					
ANR	613523	UnaryOperator	*		612582	0					
ANR	613524	Identifier	next_block		612582	1					
ANR	613525	UnaryOperationExpression	* block		612582	1					
ANR	613526	UnaryOperator	*		612582	0					
ANR	613527	Identifier	block		612582	1					
ANR	613528	ExpressionStatement	free ( block )	409:4:10121:10133	612582	2	True				
ANR	613529	CallExpression	free ( block )		612582	0					
ANR	613530	Callee	free		612582	0					
ANR	613531	Identifier	free		612582	0					
ANR	613532	ArgumentList	block		612582	1					
ANR	613533	Argument	block		612582	0					
ANR	613534	Identifier	block		612582	0					
ANR	613535	ContinueStatement	continue ;	410:4:10139:10147	612582	3	True				
ANR	613536	IfStatement	if ( block -> end < UT64_MAX && next_block -> start < block -> end && next_block -> start > block -> start )		612582	4					
ANR	613537	Condition	block -> end < UT64_MAX && next_block -> start < block -> end && next_block -> start > block -> start	413:7:10162:10252	612582	0	True				
ANR	613538	AndExpression	block -> end < UT64_MAX && next_block -> start < block -> end && next_block -> start > block -> start		612582	0		&&			
ANR	613539	RelationalExpression	block -> end < UT64_MAX		612582	0		<			
ANR	613540	PtrMemberAccess	block -> end		612582	0					
ANR	613541	Identifier	block		612582	0					
ANR	613542	Identifier	end		612582	1					
ANR	613543	Identifier	UT64_MAX		612582	1					
ANR	613544	AndExpression	next_block -> start < block -> end && next_block -> start > block -> start		612582	1		&&			
ANR	613545	RelationalExpression	next_block -> start < block -> end		612582	0		<			
ANR	613546	PtrMemberAccess	next_block -> start		612582	0					
ANR	613547	Identifier	next_block		612582	0					
ANR	613548	Identifier	start		612582	1					
ANR	613549	PtrMemberAccess	block -> end		612582	1					
ANR	613550	Identifier	block		612582	0					
ANR	613551	Identifier	end		612582	1					
ANR	613552	RelationalExpression	next_block -> start > block -> start		612582	1		>			
ANR	613553	PtrMemberAccess	next_block -> start		612582	0					
ANR	613554	Identifier	next_block		612582	0					
ANR	613555	Identifier	start		612582	1					
ANR	613556	PtrMemberAccess	block -> start		612582	1					
ANR	613557	Identifier	block		612582	0					
ANR	613558	Identifier	start		612582	1					
ANR	613559	CompoundStatement		176:100:4686:4686	612582	1					
ANR	613560	IfStatement	if ( next_block -> jump == UT64_MAX )		612582	0					
ANR	613561	Condition	next_block -> jump == UT64_MAX	414:8:10265:10292	612582	0	True				
ANR	613562	EqualityExpression	next_block -> jump == UT64_MAX		612582	0		==			
ANR	613563	PtrMemberAccess	next_block -> jump		612582	0					
ANR	613564	Identifier	next_block		612582	0					
ANR	613565	Identifier	jump		612582	1					
ANR	613566	Identifier	UT64_MAX		612582	1					
ANR	613567	CompoundStatement		177:38:4726:4726	612582	1					
ANR	613568	ExpressionStatement	next_block -> jump = block -> jump	415:5:10302:10332	612582	0	True				
ANR	613569	AssignmentExpression	next_block -> jump = block -> jump		612582	0		=			
ANR	613570	PtrMemberAccess	next_block -> jump		612582	0					
ANR	613571	Identifier	next_block		612582	0					
ANR	613572	Identifier	jump		612582	1					
ANR	613573	PtrMemberAccess	block -> jump		612582	1					
ANR	613574	Identifier	block		612582	0					
ANR	613575	Identifier	jump		612582	1					
ANR	613576	IfStatement	if ( next_block -> fail == UT64_MAX )		612582	1					
ANR	613577	Condition	next_block -> fail == UT64_MAX	418:8:10349:10376	612582	0	True				
ANR	613578	EqualityExpression	next_block -> fail == UT64_MAX		612582	0		==			
ANR	613579	PtrMemberAccess	next_block -> fail		612582	0					
ANR	613580	Identifier	next_block		612582	0					
ANR	613581	Identifier	fail		612582	1					
ANR	613582	Identifier	UT64_MAX		612582	1					
ANR	613583	CompoundStatement		181:38:4810:4810	612582	1					
ANR	613584	ExpressionStatement	next_block -> fail = block -> fail	419:5:10386:10416	612582	0	True				
ANR	613585	AssignmentExpression	next_block -> fail = block -> fail		612582	0		=			
ANR	613586	PtrMemberAccess	next_block -> fail		612582	0					
ANR	613587	Identifier	next_block		612582	0					
ANR	613588	Identifier	fail		612582	1					
ANR	613589	PtrMemberAccess	block -> fail		612582	1					
ANR	613590	Identifier	block		612582	0					
ANR	613591	Identifier	fail		612582	1					
ANR	613592	ExpressionStatement	next_block -> end = block -> end	422:4:10429:10457	612582	2	True				
ANR	613593	AssignmentExpression	next_block -> end = block -> end		612582	0		=			
ANR	613594	PtrMemberAccess	next_block -> end		612582	0					
ANR	613595	Identifier	next_block		612582	0					
ANR	613596	Identifier	end		612582	1					
ANR	613597	PtrMemberAccess	block -> end		612582	1					
ANR	613598	Identifier	block		612582	0					
ANR	613599	Identifier	end		612582	1					
ANR	613600	ExpressionStatement	block -> end = next_block -> start	423:4:10463:10493	612582	3	True				
ANR	613601	AssignmentExpression	block -> end = next_block -> start		612582	0		=			
ANR	613602	PtrMemberAccess	block -> end		612582	0					
ANR	613603	Identifier	block		612582	0					
ANR	613604	Identifier	end		612582	1					
ANR	613605	PtrMemberAccess	next_block -> start		612582	1					
ANR	613606	Identifier	next_block		612582	0					
ANR	613607	Identifier	start		612582	1					
ANR	613608	ExpressionStatement	block -> jump = next_block -> start	424:4:10499:10530	612582	4	True				
ANR	613609	AssignmentExpression	block -> jump = next_block -> start		612582	0		=			
ANR	613610	PtrMemberAccess	block -> jump		612582	0					
ANR	613611	Identifier	block		612582	0					
ANR	613612	Identifier	jump		612582	1					
ANR	613613	PtrMemberAccess	next_block -> start		612582	1					
ANR	613614	Identifier	next_block		612582	0					
ANR	613615	Identifier	start		612582	1					
ANR	613616	ExpressionStatement	block -> fail = UT64_MAX	425:4:10536:10558	612582	5	True				
ANR	613617	AssignmentExpression	block -> fail = UT64_MAX		612582	0		=			
ANR	613618	PtrMemberAccess	block -> fail		612582	0					
ANR	613619	Identifier	block		612582	0					
ANR	613620	Identifier	fail		612582	1					
ANR	613621	Identifier	UT64_MAX		612582	1					
ANR	613622	ExpressionStatement	next_block -> type = block -> type	426:4:10564:10594	612582	6	True				
ANR	613623	AssignmentExpression	next_block -> type = block -> type		612582	0		=			
ANR	613624	PtrMemberAccess	next_block -> type		612582	0					
ANR	613625	Identifier	next_block		612582	0					
ANR	613626	Identifier	type		612582	1					
ANR	613627	PtrMemberAccess	block -> type		612582	1					
ANR	613628	Identifier	block		612582	0					
ANR	613629	Identifier	type		612582	1					
ANR	613630	IfStatement	if ( next_block -> type != CALL )		612582	7					
ANR	613631	Condition	next_block -> type != CALL	427:8:10604:10627	612582	0	True				
ANR	613632	EqualityExpression	next_block -> type != CALL		612582	0		!=			
ANR	613633	PtrMemberAccess	next_block -> type		612582	0					
ANR	613634	Identifier	next_block		612582	0					
ANR	613635	Identifier	type		612582	1					
ANR	613636	Identifier	CALL		612582	1					
ANR	613637	CompoundStatement		190:35:5062:5062	612582	1					
ANR	613638	ExpressionStatement	next_block -> reached += 1	428:5:10638:10662	612582	0	True				
ANR	613639	AssignmentExpression	next_block -> reached += 1		612582	0		+=			
ANR	613640	PtrMemberAccess	next_block -> reached		612582	0					
ANR	613641	Identifier	next_block		612582	0					
ANR	613642	Identifier	reached		612582	1					
ANR	613643	PrimaryExpression	1		612582	1					
ANR	613644	Statement	sdb_ptr_set	433:2:10682:10692	612582	4	True				
ANR	613645	Statement	(	433:14:10694:10694	612582	5	True				
ANR	613646	Statement	sdb	433:15:10695:10697	612582	6	True				
ANR	613647	Statement	","	433:18:10698:10698	612582	7	True				
ANR	613648	Statement	sdb_fmt	433:20:10700:10706	612582	8	True				
ANR	613649	Statement	(	433:28:10708:10708	612582	9	True				
ANR	613650	Statement	"""bb.0x%08"""	433:29:10709:10718	612582	10	True				
ANR	613651	Statement	PFMT64x	433:39:10719:10725	612582	11	True				
ANR	613652	Statement	","	433:46:10726:10726	612582	12	True				
ANR	613653	Statement	block	433:48:10728:10732	612582	13	True				
ANR	613654	Statement	->	433:53:10733:10734	612582	14	True				
ANR	613655	Statement	start	433:55:10735:10739	612582	15	True				
ANR	613656	Statement	)	433:60:10740:10740	612582	16	True				
ANR	613657	Statement	","	433:61:10741:10741	612582	17	True				
ANR	613658	Statement	block	433:63:10743:10747	612582	18	True				
ANR	613659	Statement	","	433:68:10748:10748	612582	19	True				
ANR	613660	Statement	0	433:70:10750:10750	612582	20	True				
ANR	613661	Statement	)	433:71:10751:10751	612582	21	True				
ANR	613662	ExpressionStatement		433:72:10752:10752	612582	22	True				
ANR	613663	ExpressionStatement	"r_list_append ( result , block )"	434:2:10756:10785	612582	23	True				
ANR	613664	CallExpression	"r_list_append ( result , block )"		612582	0					
ANR	613665	Callee	r_list_append		612582	0					
ANR	613666	Identifier	r_list_append		612582	0					
ANR	613667	ArgumentList	result		612582	1					
ANR	613668	Argument	result		612582	0					
ANR	613669	Identifier	result		612582	0					
ANR	613670	Argument	block		612582	1					
ANR	613671	Identifier	block		612582	0					
ANR	613672	IfStatement	if ( debug )		612582	27					
ANR	613673	Condition	debug	440:5:10909:10913	612582	0	True				
ANR	613674	Identifier	debug		612582	0					
ANR	613675	CompoundStatement		203:12:5347:5347	612582	1					
ANR	613676	ExpressionStatement	"eprintf ( ""Trying to create functions\\n"" )"	441:2:10920:10960	612582	0	True				
ANR	613677	CallExpression	"eprintf ( ""Trying to create functions\\n"" )"		612582	0					
ANR	613678	Callee	eprintf		612582	0					
ANR	613679	Identifier	eprintf		612582	0					
ANR	613680	ArgumentList	"""Trying to create functions\\n"""		612582	1					
ANR	613681	Argument	"""Trying to create functions\\n"""		612582	0					
ANR	613682	PrimaryExpression	"""Trying to create functions\\n"""		612582	0					
ANR	613683	Statement	r_list_foreach	444:1:10967:10980	612582	28	True				
ANR	613684	Statement	(	444:16:10982:10982	612582	29	True				
ANR	613685	Statement	result	444:17:10983:10988	612582	30	True				
ANR	613686	Statement	","	444:23:10989:10989	612582	31	True				
ANR	613687	Statement	iter	444:25:10991:10994	612582	32	True				
ANR	613688	Statement	","	444:29:10995:10995	612582	33	True				
ANR	613689	Statement	block	444:31:10997:11001	612582	34	True				
ANR	613690	Statement	)	444:36:11002:11002	612582	35	True				
ANR	613691	CompoundStatement		207:38:5435:5435	612582	36					
ANR	613692	IfStatement	if ( r_cons_is_breaked ( ) )		612582	0					
ANR	613693	Condition	r_cons_is_breaked ( )	445:6:11012:11031	612582	0	True				
ANR	613694	CallExpression	r_cons_is_breaked ( )		612582	0					
ANR	613695	Callee	r_cons_is_breaked		612582	0					
ANR	613696	Identifier	r_cons_is_breaked		612582	0					
ANR	613697	ArgumentList			612582	1					
ANR	613698	CompoundStatement		208:28:5465:5465	612582	1					
ANR	613699	BreakStatement	break ;	446:3:11039:11044	612582	0	True				
ANR	613700	IfStatement	if ( block && ( block -> reached == 0 || block -> called >= 1 ) )		612582	1					
ANR	613701	Condition	block && ( block -> reached == 0 || block -> called >= 1 )	448:6:11056:11107	612582	0	True				
ANR	613702	AndExpression	block && ( block -> reached == 0 || block -> called >= 1 )		612582	0		&&			
ANR	613703	Identifier	block		612582	0					
ANR	613704	OrExpression	block -> reached == 0 || block -> called >= 1		612582	1		||			
ANR	613705	EqualityExpression	block -> reached == 0		612582	0		==			
ANR	613706	PtrMemberAccess	block -> reached		612582	0					
ANR	613707	Identifier	block		612582	0					
ANR	613708	Identifier	reached		612582	1					
ANR	613709	PrimaryExpression	0		612582	1					
ANR	613710	RelationalExpression	block -> called >= 1		612582	1		>=			
ANR	613711	PtrMemberAccess	block -> called		612582	0					
ANR	613712	Identifier	block		612582	0					
ANR	613713	Identifier	called		612582	1					
ANR	613714	PrimaryExpression	1		612582	1					
ANR	613715	CompoundStatement		216:3:5673:5689	612582	1					
ANR	613716	IdentifierDeclStatement	fcn_t * current_function = fcnNew ( block ) ;	449:3:11115:11155	612582	0	True				
ANR	613717	IdentifierDecl	* current_function = fcnNew ( block )		612582	0					
ANR	613718	IdentifierDeclType	fcn_t *		612582	0					
ANR	613719	Identifier	current_function		612582	1					
ANR	613720	AssignmentExpression	* current_function = fcnNew ( block )		612582	2		=			
ANR	613721	Identifier	current_function		612582	0					
ANR	613722	CallExpression	fcnNew ( block )		612582	1					
ANR	613723	Callee	fcnNew		612582	0					
ANR	613724	Identifier	fcnNew		612582	0					
ANR	613725	ArgumentList	block		612582	1					
ANR	613726	Argument	block		612582	0					
ANR	613727	Identifier	block		612582	0					
ANR	613728	IdentifierDeclStatement	RStack * stack = r_stack_new ( 100 ) ;	450:3:11160:11193	612582	1	True				
ANR	613729	IdentifierDecl	* stack = r_stack_new ( 100 )		612582	0					
ANR	613730	IdentifierDeclType	RStack *		612582	0					
ANR	613731	Identifier	stack		612582	1					
ANR	613732	AssignmentExpression	* stack = r_stack_new ( 100 )		612582	2		=			
ANR	613733	Identifier	stack		612582	0					
ANR	613734	CallExpression	r_stack_new ( 100 )		612582	1					
ANR	613735	Callee	r_stack_new		612582	0					
ANR	613736	Identifier	r_stack_new		612582	0					
ANR	613737	ArgumentList	100		612582	1					
ANR	613738	Argument	100		612582	0					
ANR	613739	PrimaryExpression	100		612582	0					
ANR	613740	IdentifierDeclStatement	bb_t * jump = NULL ;	451:3:11198:11215	612582	2	True				
ANR	613741	IdentifierDecl	* jump = NULL		612582	0					
ANR	613742	IdentifierDeclType	bb_t *		612582	0					
ANR	613743	Identifier	jump		612582	1					
ANR	613744	AssignmentExpression	* jump = NULL		612582	2		=			
ANR	613745	Identifier	NULL		612582	0					
ANR	613746	Identifier	NULL		612582	1					
ANR	613747	IdentifierDeclStatement	bb_t * fail = NULL ;	452:3:11220:11237	612582	3	True				
ANR	613748	IdentifierDecl	* fail = NULL		612582	0					
ANR	613749	IdentifierDeclType	bb_t *		612582	0					
ANR	613750	Identifier	fail		612582	1					
ANR	613751	AssignmentExpression	* fail = NULL		612582	2		=			
ANR	613752	Identifier	NULL		612582	0					
ANR	613753	Identifier	NULL		612582	1					
ANR	613754	IdentifierDeclStatement	bb_t * cur = NULL ;	453:3:11242:11258	612582	4	True				
ANR	613755	IdentifierDecl	* cur = NULL		612582	0					
ANR	613756	IdentifierDeclType	bb_t *		612582	0					
ANR	613757	Identifier	cur		612582	1					
ANR	613758	AssignmentExpression	* cur = NULL		612582	2		=			
ANR	613759	Identifier	NULL		612582	0					
ANR	613760	Identifier	NULL		612582	1					
ANR	613761	IfStatement	"if ( ! r_stack_push ( stack , ( void * ) block ) )"		612582	5					
ANR	613762	Condition	"! r_stack_push ( stack , ( void * ) block )"	455:7:11268:11302	612582	0	True				
ANR	613763	UnaryOperationExpression	"! r_stack_push ( stack , ( void * ) block )"		612582	0					
ANR	613764	UnaryOperator	!		612582	0					
ANR	613765	CallExpression	"r_stack_push ( stack , ( void * ) block )"		612582	1					
ANR	613766	Callee	r_stack_push		612582	0					
ANR	613767	Identifier	r_stack_push		612582	0					
ANR	613768	ArgumentList	stack		612582	1					
ANR	613769	Argument	stack		612582	0					
ANR	613770	Identifier	stack		612582	0					
ANR	613771	Argument	( void * ) block		612582	1					
ANR	613772	CastExpression	( void * ) block		612582	0					
ANR	613773	CastTarget	void *		612582	0					
ANR	613774	Identifier	block		612582	1					
ANR	613775	CompoundStatement		218:44:5736:5736	612582	1					
ANR	613776	ExpressionStatement	"eprintf ( ""Failed to push initial block\\n"" )"	456:4:11311:11353	612582	0	True				
ANR	613777	CallExpression	"eprintf ( ""Failed to push initial block\\n"" )"		612582	0					
ANR	613778	Callee	eprintf		612582	0					
ANR	613779	Identifier	eprintf		612582	0					
ANR	613780	ArgumentList	"""Failed to push initial block\\n"""		612582	1					
ANR	613781	Argument	"""Failed to push initial block\\n"""		612582	0					
ANR	613782	PrimaryExpression	"""Failed to push initial block\\n"""		612582	0					
ANR	613783	WhileStatement	while ( ! r_stack_is_empty ( stack ) )		612582	6					
ANR	613784	Condition	! r_stack_is_empty ( stack )	459:10:11371:11395	612582	0	True				
ANR	613785	UnaryOperationExpression	! r_stack_is_empty ( stack )		612582	0					
ANR	613786	UnaryOperator	!		612582	0					
ANR	613787	CallExpression	r_stack_is_empty ( stack )		612582	1					
ANR	613788	Callee	r_stack_is_empty		612582	0					
ANR	613789	Identifier	r_stack_is_empty		612582	0					
ANR	613790	ArgumentList	stack		612582	1					
ANR	613791	Argument	stack		612582	0					
ANR	613792	Identifier	stack		612582	0					
ANR	613793	CompoundStatement		222:37:5829:5829	612582	1					
ANR	613794	ExpressionStatement	cur = ( bb_t * ) r_stack_pop ( stack )	460:4:11404:11437	612582	0	True				
ANR	613795	AssignmentExpression	cur = ( bb_t * ) r_stack_pop ( stack )		612582	0		=			
ANR	613796	Identifier	cur		612582	0					
ANR	613797	CastExpression	( bb_t * ) r_stack_pop ( stack )		612582	1					
ANR	613798	CastTarget	bb_t *		612582	0					
ANR	613799	CallExpression	r_stack_pop ( stack )		612582	1					
ANR	613800	Callee	r_stack_pop		612582	0					
ANR	613801	Identifier	r_stack_pop		612582	0					
ANR	613802	ArgumentList	stack		612582	1					
ANR	613803	Argument	stack		612582	0					
ANR	613804	Identifier	stack		612582	0					
ANR	613805	IfStatement	if ( ! cur )		612582	1					
ANR	613806	Condition	! cur	461:8:11447:11450	612582	0	True				
ANR	613807	UnaryOperationExpression	! cur		612582	0					
ANR	613808	UnaryOperator	!		612582	0					
ANR	613809	Identifier	cur		612582	1					
ANR	613810	CompoundStatement		224:14:5884:5884	612582	1					
ANR	613811	ContinueStatement	continue ;	462:5:11460:11468	612582	0	True				
ANR	613812	ExpressionStatement	"sdb_num_set ( sdb , Fhandled ( cur -> start ) , 1 , 0 )"	464:4:11480:11525	612582	2	True				
ANR	613813	CallExpression	"sdb_num_set ( sdb , Fhandled ( cur -> start ) , 1 , 0 )"		612582	0					
ANR	613814	Callee	sdb_num_set		612582	0					
ANR	613815	Identifier	sdb_num_set		612582	0					
ANR	613816	ArgumentList	sdb		612582	1					
ANR	613817	Argument	sdb		612582	0					
ANR	613818	Identifier	sdb		612582	0					
ANR	613819	Argument	Fhandled ( cur -> start )		612582	1					
ANR	613820	CallExpression	Fhandled ( cur -> start )		612582	0					
ANR	613821	Callee	Fhandled		612582	0					
ANR	613822	Identifier	Fhandled		612582	0					
ANR	613823	ArgumentList	cur -> start		612582	1					
ANR	613824	Argument	cur -> start		612582	0					
ANR	613825	PtrMemberAccess	cur -> start		612582	0					
ANR	613826	Identifier	cur		612582	0					
ANR	613827	Identifier	start		612582	1					
ANR	613828	Argument	1		612582	2					
ANR	613829	PrimaryExpression	1		612582	0					
ANR	613830	Argument	0		612582	3					
ANR	613831	PrimaryExpression	0		612582	0					
ANR	613832	IfStatement	if ( cur -> score < 0 )		612582	3					
ANR	613833	Condition	cur -> score < 0	465:8:11535:11548	612582	0	True				
ANR	613834	RelationalExpression	cur -> score < 0		612582	0		<			
ANR	613835	PtrMemberAccess	cur -> score		612582	0					
ANR	613836	Identifier	cur		612582	0					
ANR	613837	Identifier	score		612582	1					
ANR	613838	PrimaryExpression	0		612582	1					
ANR	613839	CompoundStatement		228:24:5982:5982	612582	1					
ANR	613840	ExpressionStatement	fcnFree ( current_function )	466:5:11558:11584	612582	0	True				
ANR	613841	CallExpression	fcnFree ( current_function )		612582	0					
ANR	613842	Callee	fcnFree		612582	0					
ANR	613843	Identifier	fcnFree		612582	0					
ANR	613844	ArgumentList	current_function		612582	1					
ANR	613845	Argument	current_function		612582	0					
ANR	613846	Identifier	current_function		612582	0					
ANR	613847	ExpressionStatement	current_function = NULL	467:5:11591:11614	612582	1	True				
ANR	613848	AssignmentExpression	current_function = NULL		612582	0		=			
ANR	613849	Identifier	current_function		612582	0					
ANR	613850	Identifier	NULL		612582	1					
ANR	613851	BreakStatement	break ;	468:5:11621:11626	612582	2	True				
ANR	613852	IfStatement	if ( ( st64 ) ( cur -> end - cur -> start ) < 0 )		612582	4					
ANR	613853	Condition	( st64 ) ( cur -> end - cur -> start ) < 0	471:8:11675:11707	612582	0	True				
ANR	613854	RelationalExpression	( st64 ) ( cur -> end - cur -> start ) < 0		612582	0		<			
ANR	613855	CastExpression	( st64 ) ( cur -> end - cur -> start )		612582	0					
ANR	613856	CastTarget	st64		612582	0					
ANR	613857	AdditiveExpression	cur -> end - cur -> start		612582	1		-			
ANR	613858	PtrMemberAccess	cur -> end		612582	0					
ANR	613859	Identifier	cur		612582	0					
ANR	613860	Identifier	end		612582	1					
ANR	613861	PtrMemberAccess	cur -> start		612582	1					
ANR	613862	Identifier	cur		612582	0					
ANR	613863	Identifier	start		612582	1					
ANR	613864	PrimaryExpression	0		612582	1					
ANR	613865	CompoundStatement		234:43:6141:6141	612582	1					
ANR	613866	BreakStatement	break ;	472:5:11717:11722	612582	0	True				
ANR	613867	ExpressionStatement	"fcnAddBB ( current_function , cur )"	475:4:11735:11767	612582	5	True				
ANR	613868	CallExpression	"fcnAddBB ( current_function , cur )"		612582	0					
ANR	613869	Callee	fcnAddBB		612582	0					
ANR	613870	Identifier	fcnAddBB		612582	0					
ANR	613871	ArgumentList	current_function		612582	1					
ANR	613872	Argument	current_function		612582	0					
ANR	613873	Identifier	current_function		612582	0					
ANR	613874	Argument	cur		612582	1					
ANR	613875	Identifier	cur		612582	0					
ANR	613876	IfStatement	"if ( cur -> jump < UT64_MAX && ! sdb_num_get ( sdb , Fhandled ( cur -> jump ) , NULL ) )"		612582	6					
ANR	613877	Condition	"cur -> jump < UT64_MAX && ! sdb_num_get ( sdb , Fhandled ( cur -> jump ) , NULL )"	477:8:11778:11846	612582	0	True				
ANR	613878	AndExpression	"cur -> jump < UT64_MAX && ! sdb_num_get ( sdb , Fhandled ( cur -> jump ) , NULL )"		612582	0		&&			
ANR	613879	RelationalExpression	cur -> jump < UT64_MAX		612582	0		<			
ANR	613880	PtrMemberAccess	cur -> jump		612582	0					
ANR	613881	Identifier	cur		612582	0					
ANR	613882	Identifier	jump		612582	1					
ANR	613883	Identifier	UT64_MAX		612582	1					
ANR	613884	UnaryOperationExpression	"! sdb_num_get ( sdb , Fhandled ( cur -> jump ) , NULL )"		612582	1					
ANR	613885	UnaryOperator	!		612582	0					
ANR	613886	CallExpression	"sdb_num_get ( sdb , Fhandled ( cur -> jump ) , NULL )"		612582	1					
ANR	613887	Callee	sdb_num_get		612582	0					
ANR	613888	Identifier	sdb_num_get		612582	0					
ANR	613889	ArgumentList	sdb		612582	1					
ANR	613890	Argument	sdb		612582	0					
ANR	613891	Identifier	sdb		612582	0					
ANR	613892	Argument	Fhandled ( cur -> jump )		612582	1					
ANR	613893	CallExpression	Fhandled ( cur -> jump )		612582	0					
ANR	613894	Callee	Fhandled		612582	0					
ANR	613895	Identifier	Fhandled		612582	0					
ANR	613896	ArgumentList	cur -> jump		612582	1					
ANR	613897	Argument	cur -> jump		612582	0					
ANR	613898	PtrMemberAccess	cur -> jump		612582	0					
ANR	613899	Identifier	cur		612582	0					
ANR	613900	Identifier	jump		612582	1					
ANR	613901	Argument	NULL		612582	2					
ANR	613902	Identifier	NULL		612582	0					
ANR	613903	CompoundStatement		240:79:6280:6280	612582	1					
ANR	613904	Statement	jump	478:5:11856:11859	612582	0	True				
ANR	613905	Statement	=	478:10:11861:11861	612582	1	True				
ANR	613906	Statement	sdb_ptr_get	478:12:11863:11873	612582	2	True				
ANR	613907	Statement	(	478:24:11875:11875	612582	3	True				
ANR	613908	Statement	sdb	478:25:11876:11878	612582	4	True				
ANR	613909	Statement	","	478:28:11879:11879	612582	5	True				
ANR	613910	Statement	sdb_fmt	478:30:11881:11887	612582	6	True				
ANR	613911	Statement	(	478:38:11889:11889	612582	7	True				
ANR	613912	Statement	"""bb.0x%08"""	478:39:11890:11899	612582	8	True				
ANR	613913	Statement	PFMT64x	478:49:11900:11906	612582	9	True				
ANR	613914	Statement	","	478:56:11907:11907	612582	10	True				
ANR	613915	Statement	cur	478:58:11909:11911	612582	11	True				
ANR	613916	Statement	->	478:61:11912:11913	612582	12	True				
ANR	613917	Statement	jump	478:63:11914:11917	612582	13	True				
ANR	613918	Statement	)	478:67:11918:11918	612582	14	True				
ANR	613919	Statement	","	478:68:11919:11919	612582	15	True				
ANR	613920	Statement	NULL	478:70:11921:11924	612582	16	True				
ANR	613921	Statement	)	478:74:11925:11925	612582	17	True				
ANR	613922	ExpressionStatement		478:75:11926:11926	612582	18	True				
ANR	613923	IfStatement	if ( ! jump )		612582	19					
ANR	613924	Condition	! jump	479:9:11937:11941	612582	0	True				
ANR	613925	UnaryOperationExpression	! jump		612582	0					
ANR	613926	UnaryOperator	!		612582	0					
ANR	613927	Identifier	jump		612582	1					
ANR	613928	CompoundStatement		242:16:6375:6375	612582	1					
ANR	613929	Statement	eprintf	480:6:11952:11958	612582	0	True				
ANR	613930	Statement	(	480:14:11960:11960	612582	1	True				
ANR	613931	Statement	"""Failed to get jump block at 0x%"""	480:15:11961:11993	612582	2	True				
ANR	613932	Statement	PFMT64x	480:48:11994:12000	612582	3	True				
ANR	613933	Statement	"""\\n"""	480:55:12001:12004	612582	4	True				
ANR	613934	Statement	","	480:59:12005:12005	612582	5	True				
ANR	613935	Statement	cur	480:61:12007:12009	612582	6	True				
ANR	613936	Statement	->	480:64:12010:12011	612582	7	True				
ANR	613937	Statement	jump	480:66:12012:12015	612582	8	True				
ANR	613938	Statement	)	480:70:12016:12016	612582	9	True				
ANR	613939	ExpressionStatement		480:71:12017:12017	612582	10	True				
ANR	613940	ContinueStatement	continue ;	481:6:12025:12033	612582	11	True				
ANR	613941	IfStatement	"if ( ! r_stack_push ( stack , ( void * ) jump ) )"		612582	20					
ANR	613942	Condition	"! r_stack_push ( stack , ( void * ) jump )"	483:9:12051:12084	612582	0	True				
ANR	613943	UnaryOperationExpression	"! r_stack_push ( stack , ( void * ) jump )"		612582	0					
ANR	613944	UnaryOperator	!		612582	0					
ANR	613945	CallExpression	"r_stack_push ( stack , ( void * ) jump )"		612582	1					
ANR	613946	Callee	r_stack_push		612582	0					
ANR	613947	Identifier	r_stack_push		612582	0					
ANR	613948	ArgumentList	stack		612582	1					
ANR	613949	Argument	stack		612582	0					
ANR	613950	Identifier	stack		612582	0					
ANR	613951	Argument	( void * ) jump		612582	1					
ANR	613952	CastExpression	( void * ) jump		612582	0					
ANR	613953	CastTarget	void *		612582	0					
ANR	613954	Identifier	jump		612582	1					
ANR	613955	CompoundStatement		246:45:6518:6518	612582	1					
ANR	613956	ExpressionStatement	"eprintf ( ""Failed to push jump block to stack\\n"" )"	484:6:12095:12143	612582	0	True				
ANR	613957	CallExpression	"eprintf ( ""Failed to push jump block to stack\\n"" )"		612582	0					
ANR	613958	Callee	eprintf		612582	0					
ANR	613959	Identifier	eprintf		612582	0					
ANR	613960	ArgumentList	"""Failed to push jump block to stack\\n"""		612582	1					
ANR	613961	Argument	"""Failed to push jump block to stack\\n"""		612582	0					
ANR	613962	PrimaryExpression	"""Failed to push jump block to stack\\n"""		612582	0					
ANR	613963	IfStatement	"if ( cur -> fail < UT64_MAX && ! sdb_num_get ( sdb , Fhandled ( cur -> fail ) , NULL ) )"		612582	7					
ANR	613964	Condition	"cur -> fail < UT64_MAX && ! sdb_num_get ( sdb , Fhandled ( cur -> fail ) , NULL )"	488:8:12167:12235	612582	0	True				
ANR	613965	AndExpression	"cur -> fail < UT64_MAX && ! sdb_num_get ( sdb , Fhandled ( cur -> fail ) , NULL )"		612582	0		&&			
ANR	613966	RelationalExpression	cur -> fail < UT64_MAX		612582	0		<			
ANR	613967	PtrMemberAccess	cur -> fail		612582	0					
ANR	613968	Identifier	cur		612582	0					
ANR	613969	Identifier	fail		612582	1					
ANR	613970	Identifier	UT64_MAX		612582	1					
ANR	613971	UnaryOperationExpression	"! sdb_num_get ( sdb , Fhandled ( cur -> fail ) , NULL )"		612582	1					
ANR	613972	UnaryOperator	!		612582	0					
ANR	613973	CallExpression	"sdb_num_get ( sdb , Fhandled ( cur -> fail ) , NULL )"		612582	1					
ANR	613974	Callee	sdb_num_get		612582	0					
ANR	613975	Identifier	sdb_num_get		612582	0					
ANR	613976	ArgumentList	sdb		612582	1					
ANR	613977	Argument	sdb		612582	0					
ANR	613978	Identifier	sdb		612582	0					
ANR	613979	Argument	Fhandled ( cur -> fail )		612582	1					
ANR	613980	CallExpression	Fhandled ( cur -> fail )		612582	0					
ANR	613981	Callee	Fhandled		612582	0					
ANR	613982	Identifier	Fhandled		612582	0					
ANR	613983	ArgumentList	cur -> fail		612582	1					
ANR	613984	Argument	cur -> fail		612582	0					
ANR	613985	PtrMemberAccess	cur -> fail		612582	0					
ANR	613986	Identifier	cur		612582	0					
ANR	613987	Identifier	fail		612582	1					
ANR	613988	Argument	NULL		612582	2					
ANR	613989	Identifier	NULL		612582	0					
ANR	613990	CompoundStatement		251:79:6669:6669	612582	1					
ANR	613991	Statement	fail	489:5:12245:12248	612582	0	True				
ANR	613992	Statement	=	489:10:12250:12250	612582	1	True				
ANR	613993	Statement	sdb_ptr_get	489:12:12252:12262	612582	2	True				
ANR	613994	Statement	(	489:24:12264:12264	612582	3	True				
ANR	613995	Statement	sdb	489:25:12265:12267	612582	4	True				
ANR	613996	Statement	","	489:28:12268:12268	612582	5	True				
ANR	613997	Statement	sdb_fmt	489:30:12270:12276	612582	6	True				
ANR	613998	Statement	(	489:38:12278:12278	612582	7	True				
ANR	613999	Statement	"""bb.0x%08"""	489:39:12279:12288	612582	8	True				
ANR	614000	Statement	PFMT64x	489:50:12290:12296	612582	9	True				
ANR	614001	Statement	","	489:57:12297:12297	612582	10	True				
ANR	614002	Statement	cur	489:59:12299:12301	612582	11	True				
ANR	614003	Statement	->	489:62:12302:12303	612582	12	True				
ANR	614004	Statement	fail	489:64:12304:12307	612582	13	True				
ANR	614005	Statement	)	489:68:12308:12308	612582	14	True				
ANR	614006	Statement	","	489:69:12309:12309	612582	15	True				
ANR	614007	Statement	NULL	489:71:12311:12314	612582	16	True				
ANR	614008	Statement	)	489:75:12315:12315	612582	17	True				
ANR	614009	ExpressionStatement		489:76:12316:12316	612582	18	True				
ANR	614010	IfStatement	if ( ! fail )		612582	19					
ANR	614011	Condition	! fail	490:9:12327:12331	612582	0	True				
ANR	614012	UnaryOperationExpression	! fail		612582	0					
ANR	614013	UnaryOperator	!		612582	0					
ANR	614014	Identifier	fail		612582	1					
ANR	614015	CompoundStatement		253:16:6765:6765	612582	1					
ANR	614016	Statement	eprintf	491:6:12342:12348	612582	0	True				
ANR	614017	Statement	(	491:14:12350:12350	612582	1	True				
ANR	614018	Statement	"""Failed to get fail block at 0x%"""	491:15:12351:12383	612582	2	True				
ANR	614019	Statement	PFMT64x	491:48:12384:12390	612582	3	True				
ANR	614020	Statement	"""\\n"""	491:55:12391:12394	612582	4	True				
ANR	614021	Statement	","	491:59:12395:12395	612582	5	True				
ANR	614022	Statement	cur	491:61:12397:12399	612582	6	True				
ANR	614023	Statement	->	491:64:12400:12401	612582	7	True				
ANR	614024	Statement	fail	491:66:12402:12405	612582	8	True				
ANR	614025	Statement	)	491:70:12406:12406	612582	9	True				
ANR	614026	ExpressionStatement		491:71:12407:12407	612582	10	True				
ANR	614027	ContinueStatement	continue ;	492:6:12415:12423	612582	11	True				
ANR	614028	IfStatement	"if ( ! r_stack_push ( stack , ( void * ) fail ) )"		612582	20					
ANR	614029	Condition	"! r_stack_push ( stack , ( void * ) fail )"	494:9:12441:12474	612582	0	True				
ANR	614030	UnaryOperationExpression	"! r_stack_push ( stack , ( void * ) fail )"		612582	0					
ANR	614031	UnaryOperator	!		612582	0					
ANR	614032	CallExpression	"r_stack_push ( stack , ( void * ) fail )"		612582	1					
ANR	614033	Callee	r_stack_push		612582	0					
ANR	614034	Identifier	r_stack_push		612582	0					
ANR	614035	ArgumentList	stack		612582	1					
ANR	614036	Argument	stack		612582	0					
ANR	614037	Identifier	stack		612582	0					
ANR	614038	Argument	( void * ) fail		612582	1					
ANR	614039	CastExpression	( void * ) fail		612582	0					
ANR	614040	CastTarget	void *		612582	0					
ANR	614041	Identifier	fail		612582	1					
ANR	614042	CompoundStatement		257:45:6908:6908	612582	1					
ANR	614043	ExpressionStatement	"eprintf ( ""Failed to push jump block to stack\\n"" )"	495:6:12485:12533	612582	0	True				
ANR	614044	CallExpression	"eprintf ( ""Failed to push jump block to stack\\n"" )"		612582	0					
ANR	614045	Callee	eprintf		612582	0					
ANR	614046	Identifier	eprintf		612582	0					
ANR	614047	ArgumentList	"""Failed to push jump block to stack\\n"""		612582	1					
ANR	614048	Argument	"""Failed to push jump block to stack\\n"""		612582	0					
ANR	614049	PrimaryExpression	"""Failed to push jump block to stack\\n"""		612582	0					
ANR	614050	IfStatement	if ( current_function )		612582	7					
ANR	614051	Condition	current_function	501:7:12594:12609	612582	0	True				
ANR	614052	Identifier	current_function		612582	0					
ANR	614053	CompoundStatement		264:25:7043:7043	612582	1					
ANR	614054	IfStatement	if ( checkFunction ( current_function ) )		612582	0					
ANR	614055	Condition	checkFunction ( current_function )	502:8:12622:12653	612582	0	True				
ANR	614056	CallExpression	checkFunction ( current_function )		612582	0					
ANR	614057	Callee	checkFunction		612582	0					
ANR	614058	Identifier	checkFunction		612582	0					
ANR	614059	ArgumentList	current_function		612582	1					
ANR	614060	Argument	current_function		612582	0					
ANR	614061	Identifier	current_function		612582	0					
ANR	614062	CompoundStatement		265:42:7087:7087	612582	1					
ANR	614063	IfStatement	if ( input [ 0 ] == '*' )		612582	0					
ANR	614064	Condition	input [ 0 ] == '*'	503:9:12667:12681	612582	0	True				
ANR	614065	EqualityExpression	input [ 0 ] == '*'		612582	0		==			
ANR	614066	ArrayIndexing	input [ 0 ]		612582	0					
ANR	614067	Identifier	input		612582	0					
ANR	614068	PrimaryExpression	0		612582	1					
ANR	614069	PrimaryExpression	'*'		612582	1					
ANR	614070	CompoundStatement		266:26:7115:7115	612582	1					
ANR	614071	ExpressionStatement	"printFunctionCommands ( core , current_function , NULL )"	504:6:12692:12744	612582	0	True				
ANR	614072	CallExpression	"printFunctionCommands ( core , current_function , NULL )"		612582	0					
ANR	614073	Callee	printFunctionCommands		612582	0					
ANR	614074	Identifier	printFunctionCommands		612582	0					
ANR	614075	ArgumentList	core		612582	1					
ANR	614076	Argument	core		612582	0					
ANR	614077	Identifier	core		612582	0					
ANR	614078	Argument	current_function		612582	1					
ANR	614079	Identifier	current_function		612582	0					
ANR	614080	Argument	NULL		612582	2					
ANR	614081	Identifier	NULL		612582	0					
ANR	614082	ElseStatement	else		612582	0					
ANR	614083	CompoundStatement		268:12:7189:7189	612582	0					
ANR	614084	ExpressionStatement	"createFunction ( core , current_function , NULL )"	506:6:12766:12811	612582	0	True				
ANR	614085	CallExpression	"createFunction ( core , current_function , NULL )"		612582	0					
ANR	614086	Callee	createFunction		612582	0					
ANR	614087	Identifier	createFunction		612582	0					
ANR	614088	ArgumentList	core		612582	1					
ANR	614089	Argument	core		612582	0					
ANR	614090	Identifier	core		612582	0					
ANR	614091	Argument	current_function		612582	1					
ANR	614092	Identifier	current_function		612582	0					
ANR	614093	Argument	NULL		612582	2					
ANR	614094	Identifier	NULL		612582	0					
ANR	614095	ExpressionStatement	fcnFree ( current_function )	509:4:12830:12856	612582	1	True				
ANR	614096	CallExpression	fcnFree ( current_function )		612582	0					
ANR	614097	Callee	fcnFree		612582	0					
ANR	614098	Identifier	fcnFree		612582	0					
ANR	614099	ArgumentList	current_function		612582	1					
ANR	614100	Argument	current_function		612582	0					
ANR	614101	Identifier	current_function		612582	0					
ANR	614102	ExpressionStatement	r_stack_free ( stack )	512:3:12867:12887	612582	8	True				
ANR	614103	CallExpression	r_stack_free ( stack )		612582	0					
ANR	614104	Callee	r_stack_free		612582	0					
ANR	614105	Identifier	r_stack_free		612582	0					
ANR	614106	ArgumentList	stack		612582	1					
ANR	614107	Argument	stack		612582	0					
ANR	614108	Identifier	stack		612582	0					
ANR	614109	ExpressionStatement	sdb_free ( sdb )	516:1:12898:12912	612582	37	True				
ANR	614110	CallExpression	sdb_free ( sdb )		612582	0					
ANR	614111	Callee	sdb_free		612582	0					
ANR	614112	Identifier	sdb_free		612582	0					
ANR	614113	ArgumentList	sdb		612582	1					
ANR	614114	Argument	sdb		612582	0					
ANR	614115	Identifier	sdb		612582	0					
ANR	614116	ExpressionStatement	r_list_free ( result )	517:1:12915:12935	612582	38	True				
ANR	614117	CallExpression	r_list_free ( result )		612582	0					
ANR	614118	Callee	r_list_free		612582	0					
ANR	614119	Identifier	r_list_free		612582	0					
ANR	614120	ArgumentList	result		612582	1					
ANR	614121	Argument	result		612582	0					
ANR	614122	Identifier	result		612582	0					
ANR	614123	ExpressionStatement	r_list_free ( block_list )	518:1:12938:12962	612582	39	True				
ANR	614124	CallExpression	r_list_free ( block_list )		612582	0					
ANR	614125	Callee	r_list_free		612582	0					
ANR	614126	Identifier	r_list_free		612582	0					
ANR	614127	ArgumentList	block_list		612582	1					
ANR	614128	Argument	block_list		612582	0					
ANR	614129	Identifier	block_list		612582	0					
ANR	614130	ReturnStatement	return true ;	519:1:12965:12976	612582	40	True				
ANR	614131	Identifier	true		612582	0					
ANR	614132	ReturnType	R_API bool		612582	1					
ANR	614133	Identifier	core_anal_bbs		612582	2					
ANR	614134	ParameterList	"RCore * core , const char * input"		612582	3					
ANR	614135	Parameter	RCore * core	238:25:5536:5546	612582	0	True				
ANR	614136	ParameterType	RCore *		612582	0					
ANR	614137	Identifier	core		612582	1					
ANR	614138	Parameter	const char * input	238:38:5549:5565	612582	1	True				
ANR	614139	ParameterType	const char *		612582	0					
ANR	614140	Identifier	input		612582	1					
ANR	614141	CFGEntryNode	ENTRY		612582		True				
ANR	614142	CFGExitNode	EXIT		612582		True				
ANR	614143	CFGErrorNode	ERROR		612582		True				
ANR	614144	Symbol	stack		612582						
ANR	614145	Symbol	* op		612582						
ANR	614146	Symbol	block -> start		612582						
ANR	614147	Symbol	r_stack_push		612582						
ANR	614148	Symbol	op -> mnemonic		612582						
ANR	614149	Symbol	cur -> jump		612582						
ANR	614150	Symbol	* input		612582						
ANR	614151	Symbol	core -> offset		612582						
ANR	614152	Symbol	r_core_anal_op		612582						
ANR	614153	Symbol	b_start		612582						
ANR	614154	Symbol	next_block -> reached		612582						
ANR	614155	Symbol	r_list_pop		612582						
ANR	614156	Symbol	block -> jump		612582						
ANR	614157	Symbol	* cur		612582						
ANR	614158	Symbol	cur -> fail		612582						
ANR	614159	Symbol	r_stack_pop		612582						
ANR	614160	Symbol	block		612582						
ANR	614161	Symbol	__isdata		612582						
ANR	614162	Symbol	core -> num		612582						
ANR	614163	Symbol	next_block -> type		612582						
ANR	614164	Symbol	block -> type		612582						
ANR	614165	Symbol	jump		612582						
ANR	614166	Symbol	core -> blocksize		612582						
ANR	614167	Symbol	* block_list		612582						
ANR	614168	Symbol	next_block -> fail		612582						
ANR	614169	Symbol	r_io_is_valid_offset		612582						
ANR	614170	Symbol	NULL		612582						
ANR	614171	Symbol	r_list_newf		612582						
ANR	614172	Symbol	op -> type		612582						
ANR	614173	Symbol	iter		612582						
ANR	614174	Symbol	* next_block		612582						
ANR	614175	Symbol	block -> end		612582						
ANR	614176	Symbol	next_block -> jump		612582						
ANR	614177	Symbol	r_anal_noreturn_at		612582						
ANR	614178	Symbol	sdb		612582						
ANR	614179	Symbol	core		612582						
ANR	614180	Symbol	input		612582						
ANR	614181	Symbol	fail		612582						
ANR	614182	Symbol	cur -> end		612582						
ANR	614183	Symbol	cur -> score		612582						
ANR	614184	Symbol	size		612582						
ANR	614185	Symbol	R_ANAL_OP_MASK_DISASM		612582						
ANR	614186	Symbol	r_config_get_i		612582						
ANR	614187	Symbol	block -> fail		612582						
ANR	614188	Symbol	true		612582						
ANR	614189	Symbol	invalid_instruction_barrier		612582						
ANR	614190	Symbol	END		612582						
ANR	614191	Symbol	block_list		612582						
ANR	614192	Symbol	* op -> mnemonic		612582						
ANR	614193	Symbol	fcnNew		612582						
ANR	614194	Symbol	checkFunction		612582						
ANR	614195	Symbol	cur		612582						
ANR	614196	Symbol	CALL		612582						
ANR	614197	Symbol	block_score		612582						
ANR	614198	Symbol	dst		612582						
ANR	614199	Symbol	r_stack_new		612582						
ANR	614200	Symbol	* core		612582						
ANR	614201	Symbol	block -> reached		612582						
ANR	614202	Symbol	R_ANAL_OP_MASK_BASIC		612582						
ANR	614203	Symbol	core -> anal		612582						
ANR	614204	Symbol	r_num_math		612582						
ANR	614205	Symbol	* * op		612582						
ANR	614206	Symbol	result		612582						
ANR	614207	Symbol	block -> called		612582						
ANR	614208	Symbol	r_cons_is_breaked		612582						
ANR	614209	Symbol	dsize		612582						
ANR	614210	Symbol	core -> io		612582						
ANR	614211	Symbol	r_list_iter_get_data		612582						
ANR	614212	Symbol	op -> jump		612582						
ANR	614213	Symbol	block_list -> length		612582						
ANR	614214	Symbol	UT64_MAX		612582						
ANR	614215	Symbol	free		612582						
ANR	614216	Symbol	next_block -> end		612582						
ANR	614217	Symbol	r_stack_is_empty		612582						
ANR	614218	Symbol	block_list -> tail		612582						
ANR	614219	Symbol	core -> config		612582						
ANR	614220	Symbol	sdb_num_get		612582						
ANR	614221	Symbol	op		612582						
ANR	614222	Symbol	sdb_new0		612582						
ANR	614223	Symbol	debug		612582						
ANR	614224	Symbol	next_block		612582						
ANR	614225	Symbol	cur -> start		612582						
ANR	614226	Symbol	false		612582						
ANR	614227	Symbol	start		612582						
ANR	614228	Symbol	Fhandled		612582						
ANR	614229	Symbol	* block		612582						
ANR	614230	Symbol	bbCMP		612582						
ANR	614231	Symbol	nopskip		612582						
ANR	614232	Symbol	op -> size		612582						
ANR	614233	Symbol	current_function		612582						
ANR	614234	Symbol	NORMAL		612582						
ANR	614235	Symbol	next_block -> start		612582						
ANR	614236	Symbol	r_list_new		612582						
ANR	614237	Symbol	base		612582						
ANR	614238	Function	core_anal_bbs_range	522:0:12981:20923							
ANR	614239	FunctionDef	"core_anal_bbs_range (RCore * core , const char * input)"		614238	0					
ANR	614240	CompoundStatement		522:64:13045:20923	614238	0					
ANR	614241	IfStatement	"if ( ! r_io_is_valid_offset ( core -> io , core -> offset , false ) )"		614238	0					
ANR	614242	Condition	"! r_io_is_valid_offset ( core -> io , core -> offset , false )"	523:5:13052:13104	614238	0	True				
ANR	614243	UnaryOperationExpression	"! r_io_is_valid_offset ( core -> io , core -> offset , false )"		614238	0					
ANR	614244	UnaryOperator	!		614238	0					
ANR	614245	CallExpression	"r_io_is_valid_offset ( core -> io , core -> offset , false )"		614238	1					
ANR	614246	Callee	r_io_is_valid_offset		614238	0					
ANR	614247	Identifier	r_io_is_valid_offset		614238	0					
ANR	614248	ArgumentList	core -> io		614238	1					
ANR	614249	Argument	core -> io		614238	0					
ANR	614250	PtrMemberAccess	core -> io		614238	0					
ANR	614251	Identifier	core		614238	0					
ANR	614252	Identifier	io		614238	1					
ANR	614253	Argument	core -> offset		614238	1					
ANR	614254	PtrMemberAccess	core -> offset		614238	0					
ANR	614255	Identifier	core		614238	0					
ANR	614256	Identifier	offset		614238	1					
ANR	614257	Argument	false		614238	2					
ANR	614258	Identifier	false		614238	0					
ANR	614259	CompoundStatement		2:60:61:61	614238	1					
ANR	614260	ExpressionStatement	"eprintf ( ""No valid offset given to analyze\\n"" )"	524:2:13111:13157	614238	0	True				
ANR	614261	CallExpression	"eprintf ( ""No valid offset given to analyze\\n"" )"		614238	0					
ANR	614262	Callee	eprintf		614238	0					
ANR	614263	Identifier	eprintf		614238	0					
ANR	614264	ArgumentList	"""No valid offset given to analyze\\n"""		614238	1					
ANR	614265	Argument	"""No valid offset given to analyze\\n"""		614238	0					
ANR	614266	PrimaryExpression	"""No valid offset given to analyze\\n"""		614238	0					
ANR	614267	ReturnStatement	return false ;	525:2:13161:13173	614238	1	True				
ANR	614268	Identifier	false		614238	0					
ANR	614269	IdentifierDeclStatement	Sdb * sdb = NULL ;	528:1:13180:13195	614238	1	True				
ANR	614270	IdentifierDecl	* sdb = NULL		614238	0					
ANR	614271	IdentifierDeclType	Sdb *		614238	0					
ANR	614272	Identifier	sdb		614238	1					
ANR	614273	AssignmentExpression	* sdb = NULL		614238	2		=			
ANR	614274	Identifier	NULL		614238	0					
ANR	614275	Identifier	NULL		614238	1					
ANR	614276	IdentifierDeclStatement	ut64 cur = 0 ;	529:1:13198:13210	614238	2	True				
ANR	614277	IdentifierDecl	cur = 0		614238	0					
ANR	614278	IdentifierDeclType	ut64		614238	0					
ANR	614279	Identifier	cur		614238	1					
ANR	614280	AssignmentExpression	cur = 0		614238	2		=			
ANR	614281	Identifier	cur		614238	0					
ANR	614282	PrimaryExpression	0		614238	1					
ANR	614283	IdentifierDeclStatement	ut64 start = core -> offset ;	530:1:13213:13238	614238	3	True				
ANR	614284	IdentifierDecl	start = core -> offset		614238	0					
ANR	614285	IdentifierDeclType	ut64		614238	0					
ANR	614286	Identifier	start		614238	1					
ANR	614287	AssignmentExpression	start = core -> offset		614238	2		=			
ANR	614288	Identifier	start		614238	0					
ANR	614289	PtrMemberAccess	core -> offset		614238	1					
ANR	614290	Identifier	core		614238	0					
ANR	614291	Identifier	offset		614238	1					
ANR	614292	IdentifierDeclStatement	"ut64 size = input [ 0 ] ? r_num_math ( core -> num , input + 1 ) : core -> blocksize ;"	531:1:13241:13315	614238	4	True				
ANR	614293	IdentifierDecl	"size = input [ 0 ] ? r_num_math ( core -> num , input + 1 ) : core -> blocksize"		614238	0					
ANR	614294	IdentifierDeclType	ut64		614238	0					
ANR	614295	Identifier	size		614238	1					
ANR	614296	AssignmentExpression	"size = input [ 0 ] ? r_num_math ( core -> num , input + 1 ) : core -> blocksize"		614238	2		=			
ANR	614297	Identifier	size		614238	0					
ANR	614298	ConditionalExpression	"input [ 0 ] ? r_num_math ( core -> num , input + 1 ) : core -> blocksize"		614238	1					
ANR	614299	Condition	input [ 0 ]		614238	0					
ANR	614300	ArrayIndexing	input [ 0 ]		614238	0					
ANR	614301	Identifier	input		614238	0					
ANR	614302	PrimaryExpression	0		614238	1					
ANR	614303	CallExpression	"r_num_math ( core -> num , input + 1 )"		614238	1					
ANR	614304	Callee	r_num_math		614238	0					
ANR	614305	Identifier	r_num_math		614238	0					
ANR	614306	ArgumentList	core -> num		614238	1					
ANR	614307	Argument	core -> num		614238	0					
ANR	614308	PtrMemberAccess	core -> num		614238	0					
ANR	614309	Identifier	core		614238	0					
ANR	614310	Identifier	num		614238	1					
ANR	614311	Argument	input + 1		614238	1					
ANR	614312	AdditiveExpression	input + 1		614238	0		+			
ANR	614313	Identifier	input		614238	0					
ANR	614314	PrimaryExpression	1		614238	1					
ANR	614315	PtrMemberAccess	core -> blocksize		614238	2					
ANR	614316	Identifier	core		614238	0					
ANR	614317	Identifier	blocksize		614238	1					
ANR	614318	IdentifierDeclStatement	ut64 b_start = start ;	532:1:13318:13338	614238	5	True				
ANR	614319	IdentifierDecl	b_start = start		614238	0					
ANR	614320	IdentifierDeclType	ut64		614238	0					
ANR	614321	Identifier	b_start		614238	1					
ANR	614322	AssignmentExpression	b_start = start		614238	2		=			
ANR	614323	Identifier	start		614238	0					
ANR	614324	Identifier	start		614238	1					
ANR	614325	IdentifierDeclStatement	RAnalOp * op ;	533:1:13341:13352	614238	6	True				
ANR	614326	IdentifierDecl	* op		614238	0					
ANR	614327	IdentifierDeclType	RAnalOp *		614238	0					
ANR	614328	Identifier	op		614238	1					
ANR	614329	IdentifierDeclStatement	RListIter * iter ;	534:1:13355:13370	614238	7	True				
ANR	614330	IdentifierDecl	* iter		614238	0					
ANR	614331	IdentifierDeclType	RListIter *		614238	0					
ANR	614332	Identifier	iter		614238	1					
ANR	614333	IdentifierDeclStatement	int block_score = 0 ;	535:1:13373:13392	614238	8	True				
ANR	614334	IdentifierDecl	block_score = 0		614238	0					
ANR	614335	IdentifierDeclType	int		614238	0					
ANR	614336	Identifier	block_score		614238	1					
ANR	614337	AssignmentExpression	block_score = 0		614238	2		=			
ANR	614338	Identifier	block_score		614238	0					
ANR	614339	PrimaryExpression	0		614238	1					
ANR	614340	IdentifierDeclStatement	RList * block_list ;	536:1:13395:13412	614238	9	True				
ANR	614341	IdentifierDecl	* block_list		614238	0					
ANR	614342	IdentifierDeclType	RList *		614238	0					
ANR	614343	Identifier	block_list		614238	1					
ANR	614344	IdentifierDeclStatement	bb_t * block = NULL ;	537:1:13415:13433	614238	10	True				
ANR	614345	IdentifierDecl	* block = NULL		614238	0					
ANR	614346	IdentifierDeclType	bb_t *		614238	0					
ANR	614347	Identifier	block		614238	1					
ANR	614348	AssignmentExpression	* block = NULL		614238	2		=			
ANR	614349	Identifier	NULL		614238	0					
ANR	614350	Identifier	NULL		614238	1					
ANR	614351	IdentifierDeclStatement	int invalid_instruction_barrier = - 20000 ;	538:1:13436:13476	614238	11	True				
ANR	614352	IdentifierDecl	invalid_instruction_barrier = - 20000		614238	0					
ANR	614353	IdentifierDeclType	int		614238	0					
ANR	614354	Identifier	invalid_instruction_barrier		614238	1					
ANR	614355	AssignmentExpression	invalid_instruction_barrier = - 20000		614238	2		=			
ANR	614356	Identifier	invalid_instruction_barrier		614238	0					
ANR	614357	UnaryOperationExpression	- 20000		614238	1					
ANR	614358	UnaryOperator	-		614238	0					
ANR	614359	PrimaryExpression	20000		614238	1					
ANR	614360	IdentifierDeclStatement	"bool debug = r_config_get_i ( core -> config , ""cfg.debug"" ) ;"	539:1:13479:13534	614238	12	True				
ANR	614361	IdentifierDecl	"debug = r_config_get_i ( core -> config , ""cfg.debug"" )"		614238	0					
ANR	614362	IdentifierDeclType	bool		614238	0					
ANR	614363	Identifier	debug		614238	1					
ANR	614364	AssignmentExpression	"debug = r_config_get_i ( core -> config , ""cfg.debug"" )"		614238	2		=			
ANR	614365	Identifier	debug		614238	0					
ANR	614366	CallExpression	"r_config_get_i ( core -> config , ""cfg.debug"" )"		614238	1					
ANR	614367	Callee	r_config_get_i		614238	0					
ANR	614368	Identifier	r_config_get_i		614238	0					
ANR	614369	ArgumentList	core -> config		614238	1					
ANR	614370	Argument	core -> config		614238	0					
ANR	614371	PtrMemberAccess	core -> config		614238	0					
ANR	614372	Identifier	core		614238	0					
ANR	614373	Identifier	config		614238	1					
ANR	614374	Argument	"""cfg.debug"""		614238	1					
ANR	614375	PrimaryExpression	"""cfg.debug"""		614238	0					
ANR	614376	IdentifierDeclStatement	ut64 lista [ 1024 ] = { 0 } ;	540:1:13537:13561	614238	13	True				
ANR	614377	IdentifierDecl	lista [ 1024 ] = { 0 }		614238	0					
ANR	614378	IdentifierDeclType	ut64 [ 1024 ]		614238	0					
ANR	614379	Identifier	lista		614238	1					
ANR	614380	PrimaryExpression	1024		614238	2					
ANR	614381	AssignmentExpression	lista [ 1024 ] = { 0 }		614238	3		=			
ANR	614382	Identifier	lista		614238	0					
ANR	614383	InitializerList	0		614238	1					
ANR	614384	PrimaryExpression	0		614238	0					
ANR	614385	IdentifierDeclStatement	int idx = 0 ;	541:1:13564:13575	614238	14	True				
ANR	614386	IdentifierDecl	idx = 0		614238	0					
ANR	614387	IdentifierDeclType	int		614238	0					
ANR	614388	Identifier	idx		614238	1					
ANR	614389	AssignmentExpression	idx = 0		614238	2		=			
ANR	614390	Identifier	idx		614238	0					
ANR	614391	PrimaryExpression	0		614238	1					
ANR	614392	IdentifierDeclStatement	int x ;	542:1:13578:13583	614238	15	True				
ANR	614393	IdentifierDecl	x		614238	0					
ANR	614394	IdentifierDeclType	int		614238	0					
ANR	614395	Identifier	x		614238	1					
ANR	614396	ExpressionStatement	block_list = r_list_new ( )	544:1:13587:13613	614238	16	True				
ANR	614397	AssignmentExpression	block_list = r_list_new ( )		614238	0		=			
ANR	614398	Identifier	block_list		614238	0					
ANR	614399	CallExpression	r_list_new ( )		614238	1					
ANR	614400	Callee	r_list_new		614238	0					
ANR	614401	Identifier	r_list_new		614238	0					
ANR	614402	ArgumentList			614238	1					
ANR	614403	IfStatement	if ( ! block_list )		614238	17					
ANR	614404	Condition	! block_list	545:5:13620:13630	614238	0	True				
ANR	614405	UnaryOperationExpression	! block_list		614238	0					
ANR	614406	UnaryOperator	!		614238	0					
ANR	614407	Identifier	block_list		614238	1					
ANR	614408	CompoundStatement		24:18:587:587	614238	1					
ANR	614409	ExpressionStatement	"eprintf ( ""Failed to create block_list\\n"" )"	546:2:13637:13678	614238	0	True				
ANR	614410	CallExpression	"eprintf ( ""Failed to create block_list\\n"" )"		614238	0					
ANR	614411	Callee	eprintf		614238	0					
ANR	614412	Identifier	eprintf		614238	0					
ANR	614413	ArgumentList	"""Failed to create block_list\\n"""		614238	1					
ANR	614414	Argument	"""Failed to create block_list\\n"""		614238	0					
ANR	614415	PrimaryExpression	"""Failed to create block_list\\n"""		614238	0					
ANR	614416	IfStatement	if ( debug )		614238	18					
ANR	614417	Condition	debug	548:5:13688:13692	614238	0	True				
ANR	614418	Identifier	debug		614238	0					
ANR	614419	CompoundStatement		27:12:649:649	614238	1					
ANR	614420	Statement	eprintf	549:2:13699:13705	614238	0	True				
ANR	614421	Statement	(	549:10:13707:13707	614238	1	True				
ANR	614422	Statement	"""Analyzing [0x%08"""	549:11:13708:13725	614238	2	True				
ANR	614423	Statement	PFMT64x	549:29:13726:13732	614238	3	True				
ANR	614424	Statement	"""-0x%08"""	549:36:13733:13740	614238	4	True				
ANR	614425	Statement	PFMT64x	549:44:13741:13747	614238	5	True				
ANR	614426	Statement	"""]\\n"""	549:51:13748:13752	614238	6	True				
ANR	614427	Statement	","	549:56:13753:13753	614238	7	True				
ANR	614428	Statement	start	549:58:13755:13759	614238	8	True				
ANR	614429	Statement	","	549:63:13760:13760	614238	9	True				
ANR	614430	Statement	start	549:65:13762:13766	614238	10	True				
ANR	614431	Statement	+	549:71:13768:13768	614238	11	True				
ANR	614432	Statement	size	549:73:13770:13773	614238	12	True				
ANR	614433	Statement	)	549:77:13774:13774	614238	13	True				
ANR	614434	ExpressionStatement		549:78:13775:13775	614238	14	True				
ANR	614435	ExpressionStatement	"eprintf ( ""Creating basic blocks\\b"" )"	550:2:13779:13814	614238	15	True				
ANR	614436	CallExpression	"eprintf ( ""Creating basic blocks\\b"" )"		614238	0					
ANR	614437	Callee	eprintf		614238	0					
ANR	614438	Identifier	eprintf		614238	0					
ANR	614439	ArgumentList	"""Creating basic blocks\\b"""		614238	1					
ANR	614440	Argument	"""Creating basic blocks\\b"""		614238	0					
ANR	614441	PrimaryExpression	"""Creating basic blocks\\b"""		614238	0					
ANR	614442	ExpressionStatement	lista [ idx ++ ] = b_start	552:1:13820:13842	614238	19	True				
ANR	614443	AssignmentExpression	lista [ idx ++ ] = b_start		614238	0		=			
ANR	614444	ArrayIndexing	lista [ idx ++ ]		614238	0					
ANR	614445	Identifier	lista		614238	0					
ANR	614446	PostIncDecOperationExpression	idx ++		614238	1					
ANR	614447	Identifier	idx		614238	0					
ANR	614448	IncDec	++		614238	1					
ANR	614449	Identifier	b_start		614238	1					
ANR	614450	ForStatement	for ( x = 0 ; x < 1024 ; x ++ )		614238	20					
ANR	614451	ForInit	x = 0 ;	553:6:13850:13855	614238	0	True				
ANR	614452	AssignmentExpression	x = 0		614238	0		=			
ANR	614453	Identifier	x		614238	0					
ANR	614454	PrimaryExpression	0		614238	1					
ANR	614455	Condition	x < 1024	553:13:13857:13864	614238	1	True				
ANR	614456	RelationalExpression	x < 1024		614238	0		<			
ANR	614457	Identifier	x		614238	0					
ANR	614458	PrimaryExpression	1024		614238	1					
ANR	614459	PostIncDecOperationExpression	x ++	553:23:13867:13869	614238	2	True				
ANR	614460	Identifier	x		614238	0					
ANR	614461	IncDec	++		614238	1					
ANR	614462	CompoundStatement		32:28:826:826	614238	3					
ANR	614463	IfStatement	if ( lista [ x ] != 0 )		614238	0					
ANR	614464	Condition	lista [ x ] != 0	554:6:13880:13892	614238	0	True				
ANR	614465	EqualityExpression	lista [ x ] != 0		614238	0		!=			
ANR	614466	ArrayIndexing	lista [ x ]		614238	0					
ANR	614467	Identifier	lista		614238	0					
ANR	614468	Identifier	x		614238	1					
ANR	614469	PrimaryExpression	0		614238	1					
ANR	614470	CompoundStatement		33:21:849:849	614238	1					
ANR	614471	ExpressionStatement	cur = 0	555:3:13900:13906	614238	0	True				
ANR	614472	AssignmentExpression	cur = 0		614238	0		=			
ANR	614473	Identifier	cur		614238	0					
ANR	614474	PrimaryExpression	0		614238	1					
ANR	614475	ExpressionStatement	b_start = lista [ x ]	556:3:13911:13929	614238	1	True				
ANR	614476	AssignmentExpression	b_start = lista [ x ]		614238	0		=			
ANR	614477	Identifier	b_start		614238	0					
ANR	614478	ArrayIndexing	lista [ x ]		614238	1					
ANR	614479	Identifier	lista		614238	0					
ANR	614480	Identifier	x		614238	1					
ANR	614481	ExpressionStatement	lista [ x ] = 0	557:3:13934:13946	614238	2	True				
ANR	614482	AssignmentExpression	lista [ x ] = 0		614238	0		=			
ANR	614483	ArrayIndexing	lista [ x ]		614238	0					
ANR	614484	Identifier	lista		614238	0					
ANR	614485	Identifier	x		614238	1					
ANR	614486	PrimaryExpression	0		614238	1					
ANR	614487	WhileStatement	while ( cur < size )		614238	3					
ANR	614488	Condition	cur < size	558:10:13958:13967	614238	0	True				
ANR	614489	RelationalExpression	cur < size		614238	0		<			
ANR	614490	Identifier	cur		614238	0					
ANR	614491	Identifier	size		614238	1					
ANR	614492	CompoundStatement		46:4:1119:1138	614238	1					
ANR	614493	IfStatement	if ( r_cons_is_breaked ( ) )		614238	0					
ANR	614494	Condition	r_cons_is_breaked ( )	559:8:13980:13999	614238	0	True				
ANR	614495	CallExpression	r_cons_is_breaked ( )		614238	0					
ANR	614496	Callee	r_cons_is_breaked		614238	0					
ANR	614497	Identifier	r_cons_is_breaked		614238	0					
ANR	614498	ArgumentList			614238	1					
ANR	614499	CompoundStatement		38:30:956:956	614238	1					
ANR	614500	BreakStatement	break ;	560:5:14009:14014	614238	0	True				
ANR	614501	IfStatement	if ( block_score < invalid_instruction_barrier )		614238	1					
ANR	614502	Condition	block_score < invalid_instruction_barrier	563:8:14097:14137	614238	0	True				
ANR	614503	RelationalExpression	block_score < invalid_instruction_barrier		614238	0		<			
ANR	614504	Identifier	block_score		614238	0					
ANR	614505	Identifier	invalid_instruction_barrier		614238	1					
ANR	614506	CompoundStatement		42:51:1094:1094	614238	1					
ANR	614507	BreakStatement	break ;	564:5:14147:14152	614238	0	True				
ANR	614508	IdentifierDeclStatement	bool bFound = false ;	567:4:14165:14184	614238	2	True				
ANR	614509	IdentifierDecl	bFound = false		614238	0					
ANR	614510	IdentifierDeclType	bool		614238	0					
ANR	614511	Identifier	bFound		614238	1					
ANR	614512	AssignmentExpression	bFound = false		614238	2		=			
ANR	614513	Identifier	false		614238	0					
ANR	614514	Identifier	false		614238	1					
ANR	614515	Statement	r_list_foreach	569:4:14264:14277	614238	3	True				
ANR	614516	Statement	(	569:19:14279:14279	614238	4	True				
ANR	614517	Statement	block_list	569:20:14280:14289	614238	5	True				
ANR	614518	Statement	","	569:30:14290:14290	614238	6	True				
ANR	614519	Statement	iter	569:32:14292:14295	614238	7	True				
ANR	614520	Statement	","	569:36:14296:14296	614238	8	True				
ANR	614521	Statement	block	569:38:14298:14302	614238	9	True				
ANR	614522	Statement	)	569:43:14303:14303	614238	10	True				
ANR	614523	CompoundStatement		48:45:1259:1259	614238	11					
ANR	614524	IfStatement	if ( ( block -> type == END || block -> type == NORMAL ) && b_start + cur == block -> start )		614238	0					
ANR	614525	Condition	( block -> type == END || block -> type == NORMAL ) && b_start + cur == block -> start	570:10:14317:14394	614238	0	True				
ANR	614526	AndExpression	( block -> type == END || block -> type == NORMAL ) && b_start + cur == block -> start		614238	0		&&			
ANR	614527	OrExpression	block -> type == END || block -> type == NORMAL		614238	0		||			
ANR	614528	EqualityExpression	block -> type == END		614238	0		==			
ANR	614529	PtrMemberAccess	block -> type		614238	0					
ANR	614530	Identifier	block		614238	0					
ANR	614531	Identifier	type		614238	1					
ANR	614532	Identifier	END		614238	1					
ANR	614533	EqualityExpression	block -> type == NORMAL		614238	1		==			
ANR	614534	PtrMemberAccess	block -> type		614238	0					
ANR	614535	Identifier	block		614238	0					
ANR	614536	Identifier	type		614238	1					
ANR	614537	Identifier	NORMAL		614238	1					
ANR	614538	EqualityExpression	b_start + cur == block -> start		614238	1		==			
ANR	614539	AdditiveExpression	b_start + cur		614238	0		+			
ANR	614540	Identifier	b_start		614238	0					
ANR	614541	Identifier	cur		614238	1					
ANR	614542	PtrMemberAccess	block -> start		614238	1					
ANR	614543	Identifier	block		614238	0					
ANR	614544	Identifier	start		614238	1					
ANR	614545	CompoundStatement		49:91:1352:1352	614238	1					
ANR	614546	ExpressionStatement	bFound = true	571:6:14406:14419	614238	0	True				
ANR	614547	AssignmentExpression	bFound = true		614238	0		=			
ANR	614548	Identifier	bFound		614238	0					
ANR	614549	Identifier	true		614238	1					
ANR	614550	BreakStatement	break ;	572:6:14427:14432	614238	1	True				
ANR	614551	IfStatement	if ( ! bFound )		614238	12					
ANR	614552	Condition	! bFound	576:8:14456:14462	614238	0	True				
ANR	614553	UnaryOperationExpression	! bFound		614238	0					
ANR	614554	UnaryOperator	!		614238	0					
ANR	614555	Identifier	bFound		614238	1					
ANR	614556	CompoundStatement		55:17:1419:1419	614238	1					
ANR	614557	ExpressionStatement	"op = r_core_anal_op ( core , b_start + cur , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM )"	577:5:14472:14559	614238	0	True				
ANR	614558	AssignmentExpression	"op = r_core_anal_op ( core , b_start + cur , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM )"		614238	0		=			
ANR	614559	Identifier	op		614238	0					
ANR	614560	CallExpression	"r_core_anal_op ( core , b_start + cur , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM )"		614238	1					
ANR	614561	Callee	r_core_anal_op		614238	0					
ANR	614562	Identifier	r_core_anal_op		614238	0					
ANR	614563	ArgumentList	core		614238	1					
ANR	614564	Argument	core		614238	0					
ANR	614565	Identifier	core		614238	0					
ANR	614566	Argument	b_start + cur		614238	1					
ANR	614567	AdditiveExpression	b_start + cur		614238	0		+			
ANR	614568	Identifier	b_start		614238	0					
ANR	614569	Identifier	cur		614238	1					
ANR	614570	Argument	R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM		614238	2					
ANR	614571	InclusiveOrExpression	R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM		614238	0		|			
ANR	614572	Identifier	R_ANAL_OP_MASK_BASIC		614238	0					
ANR	614573	Identifier	R_ANAL_OP_MASK_DISASM		614238	1					
ANR	614574	IfStatement	if ( ! op || ! op -> mnemonic )		614238	1					
ANR	614575	Condition	! op || ! op -> mnemonic	579:9:14571:14590	614238	0	True				
ANR	614576	OrExpression	! op || ! op -> mnemonic		614238	0		||			
ANR	614577	UnaryOperationExpression	! op		614238	0					
ANR	614578	UnaryOperator	!		614238	0					
ANR	614579	Identifier	op		614238	1					
ANR	614580	UnaryOperationExpression	! op -> mnemonic		614238	1					
ANR	614581	UnaryOperator	!		614238	0					
ANR	614582	PtrMemberAccess	op -> mnemonic		614238	1					
ANR	614583	Identifier	op		614238	0					
ANR	614584	Identifier	mnemonic		614238	1					
ANR	614585	CompoundStatement		58:31:1547:1547	614238	1					
ANR	614586	ExpressionStatement	block_score -= 10	580:6:14601:14618	614238	0	True				
ANR	614587	AssignmentExpression	block_score -= 10		614238	0		-=			
ANR	614588	Identifier	block_score		614238	0					
ANR	614589	PrimaryExpression	10		614238	1					
ANR	614590	ExpressionStatement	cur ++	581:6:14626:14631	614238	1	True				
ANR	614591	PostIncDecOperationExpression	cur ++		614238	0					
ANR	614592	Identifier	cur		614238	0					
ANR	614593	IncDec	++		614238	1					
ANR	614594	ContinueStatement	continue ;	582:6:14639:14647	614238	2	True				
ANR	614595	IfStatement	if ( op -> mnemonic [ 0 ] == '?' )		614238	2					
ANR	614596	Condition	op -> mnemonic [ 0 ] == '?'	585:9:14666:14687	614238	0	True				
ANR	614597	EqualityExpression	op -> mnemonic [ 0 ] == '?'		614238	0		==			
ANR	614598	ArrayIndexing	op -> mnemonic [ 0 ]		614238	0					
ANR	614599	PtrMemberAccess	op -> mnemonic		614238	0					
ANR	614600	Identifier	op		614238	0					
ANR	614601	Identifier	mnemonic		614238	1					
ANR	614602	PrimaryExpression	0		614238	1					
ANR	614603	PrimaryExpression	'?'		614238	1					
ANR	614604	CompoundStatement		64:33:1644:1644	614238	1					
ANR	614605	Statement	eprintf	586:6:14698:14704	614238	0	True				
ANR	614606	Statement	(	586:14:14706:14706	614238	1	True				
ANR	614607	Statement	"""? Bad op at: 0x%08"""	586:15:14707:14726	614238	2	True				
ANR	614608	Statement	PFMT64x	586:35:14727:14733	614238	3	True				
ANR	614609	Statement	"""\\n"""	586:42:14734:14737	614238	4	True				
ANR	614610	Statement	","	586:46:14738:14738	614238	5	True				
ANR	614611	Statement	cur	586:48:14740:14742	614238	6	True				
ANR	614612	Statement	+	586:52:14744:14744	614238	7	True				
ANR	614613	Statement	b_start	586:54:14746:14752	614238	8	True				
ANR	614614	Statement	)	586:61:14753:14753	614238	9	True				
ANR	614615	ExpressionStatement		586:62:14754:14754	614238	10	True				
ANR	614616	Statement	eprintf	587:6:14762:14768	614238	11	True				
ANR	614617	Statement	(	587:14:14770:14770	614238	12	True				
ANR	614618	Statement	"""Cannot analyze opcode at %"""	587:15:14771:14798	614238	13	True				
ANR	614619	Statement	PFMT64x	587:43:14799:14805	614238	14	True				
ANR	614620	Statement	"""\\n"""	587:50:14806:14809	614238	15	True				
ANR	614621	Statement	","	587:54:14810:14810	614238	16	True				
ANR	614622	Statement	b_start	587:56:14812:14818	614238	17	True				
ANR	614623	Statement	+	587:64:14820:14820	614238	18	True				
ANR	614624	Statement	cur	587:66:14822:14824	614238	19	True				
ANR	614625	Statement	)	587:69:14825:14825	614238	20	True				
ANR	614626	ExpressionStatement		587:70:14826:14826	614238	21	True				
ANR	614627	ExpressionStatement	block_score -= 10	588:6:14834:14851	614238	22	True				
ANR	614628	AssignmentExpression	block_score -= 10		614238	0		-=			
ANR	614629	Identifier	block_score		614238	0					
ANR	614630	PrimaryExpression	10		614238	1					
ANR	614631	ExpressionStatement	cur ++	589:6:14859:14864	614238	23	True				
ANR	614632	PostIncDecOperationExpression	cur ++		614238	0					
ANR	614633	Identifier	cur		614238	0					
ANR	614634	IncDec	++		614238	1					
ANR	614635	ContinueStatement	continue ;	590:6:14872:14880	614238	24	True				
ANR	614636	SwitchStatement	switch ( op -> type )		614238	3					
ANR	614637	Condition	op -> type	593:13:14971:14978	614238	0	True				
ANR	614638	PtrMemberAccess	op -> type		614238	0					
ANR	614639	Identifier	op		614238	0					
ANR	614640	Identifier	type		614238	1					
ANR	614641	CompoundStatement		72:23:1935:1935	614238	1					
ANR	614642	Label	case R_ANAL_OP_TYPE_RET :	594:5:14988:15011	614238	0	True				
ANR	614643	Identifier	R_ANAL_OP_TYPE_RET		614238	0					
ANR	614644	ExpressionStatement	"addBB ( block_list , b_start , b_start + cur + op -> size , UT64_MAX , UT64_MAX , END , block_score )"	595:6:15019:15110	614238	1	True				
ANR	614645	CallExpression	"addBB ( block_list , b_start , b_start + cur + op -> size , UT64_MAX , UT64_MAX , END , block_score )"		614238	0					
ANR	614646	Callee	addBB		614238	0					
ANR	614647	Identifier	addBB		614238	0					
ANR	614648	ArgumentList	block_list		614238	1					
ANR	614649	Argument	block_list		614238	0					
ANR	614650	Identifier	block_list		614238	0					
ANR	614651	Argument	b_start		614238	1					
ANR	614652	Identifier	b_start		614238	0					
ANR	614653	Argument	b_start + cur + op -> size		614238	2					
ANR	614654	AdditiveExpression	b_start + cur + op -> size		614238	0		+			
ANR	614655	Identifier	b_start		614238	0					
ANR	614656	AdditiveExpression	cur + op -> size		614238	1		+			
ANR	614657	Identifier	cur		614238	0					
ANR	614658	PtrMemberAccess	op -> size		614238	1					
ANR	614659	Identifier	op		614238	0					
ANR	614660	Identifier	size		614238	1					
ANR	614661	Argument	UT64_MAX		614238	3					
ANR	614662	Identifier	UT64_MAX		614238	0					
ANR	614663	Argument	UT64_MAX		614238	4					
ANR	614664	Identifier	UT64_MAX		614238	0					
ANR	614665	Argument	END		614238	5					
ANR	614666	Identifier	END		614238	0					
ANR	614667	Argument	block_score		614238	6					
ANR	614668	Identifier	block_score		614238	0					
ANR	614669	ExpressionStatement	cur = size	596:6:15118:15128	614238	2	True				
ANR	614670	AssignmentExpression	cur = size		614238	0		=			
ANR	614671	Identifier	cur		614238	0					
ANR	614672	Identifier	size		614238	1					
ANR	614673	BreakStatement	break ;	597:6:15136:15141	614238	3	True				
ANR	614674	Label	case R_ANAL_OP_TYPE_UJMP :	598:5:15148:15172	614238	4	True				
ANR	614675	Identifier	R_ANAL_OP_TYPE_UJMP		614238	0					
ANR	614676	Label	case R_ANAL_OP_TYPE_IRJMP :	599:5:15179:15204	614238	5	True				
ANR	614677	Identifier	R_ANAL_OP_TYPE_IRJMP		614238	0					
ANR	614678	ExpressionStatement	"addBB ( block_list , b_start , b_start + cur + op -> size , op -> jump , UT64_MAX , END , block_score )"	600:6:15212:15303	614238	6	True				
ANR	614679	CallExpression	"addBB ( block_list , b_start , b_start + cur + op -> size , op -> jump , UT64_MAX , END , block_score )"		614238	0					
ANR	614680	Callee	addBB		614238	0					
ANR	614681	Identifier	addBB		614238	0					
ANR	614682	ArgumentList	block_list		614238	1					
ANR	614683	Argument	block_list		614238	0					
ANR	614684	Identifier	block_list		614238	0					
ANR	614685	Argument	b_start		614238	1					
ANR	614686	Identifier	b_start		614238	0					
ANR	614687	Argument	b_start + cur + op -> size		614238	2					
ANR	614688	AdditiveExpression	b_start + cur + op -> size		614238	0		+			
ANR	614689	Identifier	b_start		614238	0					
ANR	614690	AdditiveExpression	cur + op -> size		614238	1		+			
ANR	614691	Identifier	cur		614238	0					
ANR	614692	PtrMemberAccess	op -> size		614238	1					
ANR	614693	Identifier	op		614238	0					
ANR	614694	Identifier	size		614238	1					
ANR	614695	Argument	op -> jump		614238	3					
ANR	614696	PtrMemberAccess	op -> jump		614238	0					
ANR	614697	Identifier	op		614238	0					
ANR	614698	Identifier	jump		614238	1					
ANR	614699	Argument	UT64_MAX		614238	4					
ANR	614700	Identifier	UT64_MAX		614238	0					
ANR	614701	Argument	END		614238	5					
ANR	614702	Identifier	END		614238	0					
ANR	614703	Argument	block_score		614238	6					
ANR	614704	Identifier	block_score		614238	0					
ANR	614705	ExpressionStatement	cur = size	601:6:15311:15321	614238	7	True				
ANR	614706	AssignmentExpression	cur = size		614238	0		=			
ANR	614707	Identifier	cur		614238	0					
ANR	614708	Identifier	size		614238	1					
ANR	614709	BreakStatement	break ;	602:6:15329:15334	614238	8	True				
ANR	614710	Label	case R_ANAL_OP_TYPE_JMP :	603:5:15341:15364	614238	9	True				
ANR	614711	Identifier	R_ANAL_OP_TYPE_JMP		614238	0					
ANR	614712	ExpressionStatement	"addBB ( block_list , b_start , b_start + cur + op -> size , op -> jump , UT64_MAX , END , block_score )"	604:6:15372:15463	614238	10	True				
ANR	614713	CallExpression	"addBB ( block_list , b_start , b_start + cur + op -> size , op -> jump , UT64_MAX , END , block_score )"		614238	0					
ANR	614714	Callee	addBB		614238	0					
ANR	614715	Identifier	addBB		614238	0					
ANR	614716	ArgumentList	block_list		614238	1					
ANR	614717	Argument	block_list		614238	0					
ANR	614718	Identifier	block_list		614238	0					
ANR	614719	Argument	b_start		614238	1					
ANR	614720	Identifier	b_start		614238	0					
ANR	614721	Argument	b_start + cur + op -> size		614238	2					
ANR	614722	AdditiveExpression	b_start + cur + op -> size		614238	0		+			
ANR	614723	Identifier	b_start		614238	0					
ANR	614724	AdditiveExpression	cur + op -> size		614238	1		+			
ANR	614725	Identifier	cur		614238	0					
ANR	614726	PtrMemberAccess	op -> size		614238	1					
ANR	614727	Identifier	op		614238	0					
ANR	614728	Identifier	size		614238	1					
ANR	614729	Argument	op -> jump		614238	3					
ANR	614730	PtrMemberAccess	op -> jump		614238	0					
ANR	614731	Identifier	op		614238	0					
ANR	614732	Identifier	jump		614238	1					
ANR	614733	Argument	UT64_MAX		614238	4					
ANR	614734	Identifier	UT64_MAX		614238	0					
ANR	614735	Argument	END		614238	5					
ANR	614736	Identifier	END		614238	0					
ANR	614737	Argument	block_score		614238	6					
ANR	614738	Identifier	block_score		614238	0					
ANR	614739	ExpressionStatement	b_start = op -> jump	605:6:15471:15489	614238	11	True				
ANR	614740	AssignmentExpression	b_start = op -> jump		614238	0		=			
ANR	614741	Identifier	b_start		614238	0					
ANR	614742	PtrMemberAccess	op -> jump		614238	1					
ANR	614743	Identifier	op		614238	0					
ANR	614744	Identifier	jump		614238	1					
ANR	614745	ExpressionStatement	cur = 0	606:6:15497:15504	614238	12	True				
ANR	614746	AssignmentExpression	cur = 0		614238	0		=			
ANR	614747	Identifier	cur		614238	0					
ANR	614748	PrimaryExpression	0		614238	1					
ANR	614749	ExpressionStatement	block_score = 0	607:6:15512:15527	614238	13	True				
ANR	614750	AssignmentExpression	block_score = 0		614238	0		=			
ANR	614751	Identifier	block_score		614238	0					
ANR	614752	PrimaryExpression	0		614238	1					
ANR	614753	BreakStatement	break ;	608:6:15535:15540	614238	14	True				
ANR	614754	Label	case R_ANAL_OP_TYPE_CJMP :	609:5:15547:15571	614238	15	True				
ANR	614755	Identifier	R_ANAL_OP_TYPE_CJMP		614238	0					
ANR	614756	ExpressionStatement	"addBB ( block_list , b_start , b_start + cur + op -> size , op -> jump , b_start + cur + op -> size , NORMAL , block_score )"	611:6:15675:15785	614238	16	True				
ANR	614757	CallExpression	"addBB ( block_list , b_start , b_start + cur + op -> size , op -> jump , b_start + cur + op -> size , NORMAL , block_score )"		614238	0					
ANR	614758	Callee	addBB		614238	0					
ANR	614759	Identifier	addBB		614238	0					
ANR	614760	ArgumentList	block_list		614238	1					
ANR	614761	Argument	block_list		614238	0					
ANR	614762	Identifier	block_list		614238	0					
ANR	614763	Argument	b_start		614238	1					
ANR	614764	Identifier	b_start		614238	0					
ANR	614765	Argument	b_start + cur + op -> size		614238	2					
ANR	614766	AdditiveExpression	b_start + cur + op -> size		614238	0		+			
ANR	614767	Identifier	b_start		614238	0					
ANR	614768	AdditiveExpression	cur + op -> size		614238	1		+			
ANR	614769	Identifier	cur		614238	0					
ANR	614770	PtrMemberAccess	op -> size		614238	1					
ANR	614771	Identifier	op		614238	0					
ANR	614772	Identifier	size		614238	1					
ANR	614773	Argument	op -> jump		614238	3					
ANR	614774	PtrMemberAccess	op -> jump		614238	0					
ANR	614775	Identifier	op		614238	0					
ANR	614776	Identifier	jump		614238	1					
ANR	614777	Argument	b_start + cur + op -> size		614238	4					
ANR	614778	AdditiveExpression	b_start + cur + op -> size		614238	0		+			
ANR	614779	Identifier	b_start		614238	0					
ANR	614780	AdditiveExpression	cur + op -> size		614238	1		+			
ANR	614781	Identifier	cur		614238	0					
ANR	614782	PtrMemberAccess	op -> size		614238	1					
ANR	614783	Identifier	op		614238	0					
ANR	614784	Identifier	size		614238	1					
ANR	614785	Argument	NORMAL		614238	5					
ANR	614786	Identifier	NORMAL		614238	0					
ANR	614787	Argument	block_score		614238	6					
ANR	614788	Identifier	block_score		614238	0					
ANR	614789	ExpressionStatement	b_start = b_start + cur + op -> size	612:6:15793:15827	614238	17	True				
ANR	614790	AssignmentExpression	b_start = b_start + cur + op -> size		614238	0		=			
ANR	614791	Identifier	b_start		614238	0					
ANR	614792	AdditiveExpression	b_start + cur + op -> size		614238	1		+			
ANR	614793	Identifier	b_start		614238	0					
ANR	614794	AdditiveExpression	cur + op -> size		614238	1		+			
ANR	614795	Identifier	cur		614238	0					
ANR	614796	PtrMemberAccess	op -> size		614238	1					
ANR	614797	Identifier	op		614238	0					
ANR	614798	Identifier	size		614238	1					
ANR	614799	ExpressionStatement	cur = 0	613:6:15835:15842	614238	18	True				
ANR	614800	AssignmentExpression	cur = 0		614238	0		=			
ANR	614801	Identifier	cur		614238	0					
ANR	614802	PrimaryExpression	0		614238	1					
ANR	614803	IfStatement	if ( idx < 1024 )		614238	19					
ANR	614804	Condition	idx < 1024	614:10:15854:15863	614238	0	True				
ANR	614805	RelationalExpression	idx < 1024		614238	0		<			
ANR	614806	Identifier	idx		614238	0					
ANR	614807	PrimaryExpression	1024		614238	1					
ANR	614808	CompoundStatement		93:22:2820:2820	614238	1					
ANR	614809	ExpressionStatement	lista [ idx ++ ] = op -> jump	615:7:15875:15898	614238	0	True				
ANR	614810	AssignmentExpression	lista [ idx ++ ] = op -> jump		614238	0		=			
ANR	614811	ArrayIndexing	lista [ idx ++ ]		614238	0					
ANR	614812	Identifier	lista		614238	0					
ANR	614813	PostIncDecOperationExpression	idx ++		614238	1					
ANR	614814	Identifier	idx		614238	0					
ANR	614815	IncDec	++		614238	1					
ANR	614816	PtrMemberAccess	op -> jump		614238	1					
ANR	614817	Identifier	op		614238	0					
ANR	614818	Identifier	jump		614238	1					
ANR	614819	ExpressionStatement	block_score = 0	617:6:15914:15929	614238	20	True				
ANR	614820	AssignmentExpression	block_score = 0		614238	0		=			
ANR	614821	Identifier	block_score		614238	0					
ANR	614822	PrimaryExpression	0		614238	1					
ANR	614823	BreakStatement	break ;	618:6:15937:15942	614238	21	True				
ANR	614824	Label	case R_ANAL_OP_TYPE_TRAP :	619:5:15949:15973	614238	22	True				
ANR	614825	Identifier	R_ANAL_OP_TYPE_TRAP		614238	0					
ANR	614826	Label	case R_ANAL_OP_TYPE_UNK :	620:5:15980:16003	614238	23	True				
ANR	614827	Identifier	R_ANAL_OP_TYPE_UNK		614238	0					
ANR	614828	Label	case R_ANAL_OP_TYPE_ILL :	621:5:16010:16033	614238	24	True				
ANR	614829	Identifier	R_ANAL_OP_TYPE_ILL		614238	0					
ANR	614830	ExpressionStatement	block_score -= 10	622:6:16041:16058	614238	25	True				
ANR	614831	AssignmentExpression	block_score -= 10		614238	0		-=			
ANR	614832	Identifier	block_score		614238	0					
ANR	614833	PrimaryExpression	10		614238	1					
ANR	614834	ExpressionStatement	cur += op -> size	623:6:16066:16081	614238	26	True				
ANR	614835	AssignmentExpression	cur += op -> size		614238	0		+=			
ANR	614836	Identifier	cur		614238	0					
ANR	614837	PtrMemberAccess	op -> size		614238	1					
ANR	614838	Identifier	op		614238	0					
ANR	614839	Identifier	size		614238	1					
ANR	614840	BreakStatement	break ;	624:6:16089:16094	614238	27	True				
ANR	614841	Label	default :	625:5:16101:16108	614238	28	True				
ANR	614842	Identifier	default		614238	0					
ANR	614843	ExpressionStatement	cur += op -> size	626:6:16116:16131	614238	29	True				
ANR	614844	AssignmentExpression	cur += op -> size		614238	0		+=			
ANR	614845	Identifier	cur		614238	0					
ANR	614846	PtrMemberAccess	op -> size		614238	1					
ANR	614847	Identifier	op		614238	0					
ANR	614848	Identifier	size		614238	1					
ANR	614849	BreakStatement	break ;	627:6:16139:16144	614238	30	True				
ANR	614850	ExpressionStatement	r_anal_op_free ( op )	629:5:16158:16177	614238	4	True				
ANR	614851	CallExpression	r_anal_op_free ( op )		614238	0					
ANR	614852	Callee	r_anal_op_free		614238	0					
ANR	614853	Identifier	r_anal_op_free		614238	0					
ANR	614854	ArgumentList	op		614238	1					
ANR	614855	Argument	op		614238	0					
ANR	614856	Identifier	op		614238	0					
ANR	614857	ExpressionStatement	op = NULL	630:5:16184:16193	614238	5	True				
ANR	614858	AssignmentExpression	op = NULL		614238	0		=			
ANR	614859	Identifier	op		614238	0					
ANR	614860	Identifier	NULL		614238	1					
ANR	614861	ElseStatement	else		614238	0					
ANR	614862	CompoundStatement		111:9:3164:3164	614238	0					
ANR	614863	BreakStatement	break ;	634:5:16301:16306	614238	0	True				
ANR	614864	IfStatement	if ( debug )		614238	21					
ANR	614865	Condition	debug	639:5:16331:16335	614238	0	True				
ANR	614866	Identifier	debug		614238	0					
ANR	614867	CompoundStatement		118:12:3292:3292	614238	1					
ANR	614868	ExpressionStatement	"eprintf ( ""Found %d basic blocks\\n"" , block_list -> length )"	640:2:16342:16397	614238	0	True				
ANR	614869	CallExpression	"eprintf ( ""Found %d basic blocks\\n"" , block_list -> length )"		614238	0					
ANR	614870	Callee	eprintf		614238	0					
ANR	614871	Identifier	eprintf		614238	0					
ANR	614872	ArgumentList	"""Found %d basic blocks\\n"""		614238	1					
ANR	614873	Argument	"""Found %d basic blocks\\n"""		614238	0					
ANR	614874	PrimaryExpression	"""Found %d basic blocks\\n"""		614238	0					
ANR	614875	Argument	block_list -> length		614238	1					
ANR	614876	PtrMemberAccess	block_list -> length		614238	0					
ANR	614877	Identifier	block_list		614238	0					
ANR	614878	Identifier	length		614238	1					
ANR	614879	IdentifierDeclStatement	RList * result = r_list_newf ( free ) ;	643:1:16404:16438	614238	22	True				
ANR	614880	IdentifierDecl	* result = r_list_newf ( free )		614238	0					
ANR	614881	IdentifierDeclType	RList *		614238	0					
ANR	614882	Identifier	result		614238	1					
ANR	614883	AssignmentExpression	* result = r_list_newf ( free )		614238	2		=			
ANR	614884	Identifier	result		614238	0					
ANR	614885	CallExpression	r_list_newf ( free )		614238	1					
ANR	614886	Callee	r_list_newf		614238	0					
ANR	614887	Identifier	r_list_newf		614238	0					
ANR	614888	ArgumentList	free		614238	1					
ANR	614889	Argument	free		614238	0					
ANR	614890	Identifier	free		614238	0					
ANR	614891	IfStatement	if ( ! result )		614238	23					
ANR	614892	Condition	! result	644:5:16445:16451	614238	0	True				
ANR	614893	UnaryOperationExpression	! result		614238	0					
ANR	614894	UnaryOperator	!		614238	0					
ANR	614895	Identifier	result		614238	1					
ANR	614896	CompoundStatement		123:14:3408:3408	614238	1					
ANR	614897	ExpressionStatement	r_list_free ( block_list )	645:2:16458:16482	614238	0	True				
ANR	614898	CallExpression	r_list_free ( block_list )		614238	0					
ANR	614899	Callee	r_list_free		614238	0					
ANR	614900	Identifier	r_list_free		614238	0					
ANR	614901	ArgumentList	block_list		614238	1					
ANR	614902	Argument	block_list		614238	0					
ANR	614903	Identifier	block_list		614238	0					
ANR	614904	ExpressionStatement	"eprintf ( ""Failed to create resulting list\\n"" )"	646:2:16486:16531	614238	1	True				
ANR	614905	CallExpression	"eprintf ( ""Failed to create resulting list\\n"" )"		614238	0					
ANR	614906	Callee	eprintf		614238	0					
ANR	614907	Identifier	eprintf		614238	0					
ANR	614908	ArgumentList	"""Failed to create resulting list\\n"""		614238	1					
ANR	614909	Argument	"""Failed to create resulting list\\n"""		614238	0					
ANR	614910	PrimaryExpression	"""Failed to create resulting list\\n"""		614238	0					
ANR	614911	ReturnStatement	return false ;	647:2:16535:16547	614238	2	True				
ANR	614912	Identifier	false		614238	0					
ANR	614913	ExpressionStatement	sdb = sdb_new0 ( )	650:1:16554:16571	614238	24	True				
ANR	614914	AssignmentExpression	sdb = sdb_new0 ( )		614238	0		=			
ANR	614915	Identifier	sdb		614238	0					
ANR	614916	CallExpression	sdb_new0 ( )		614238	1					
ANR	614917	Callee	sdb_new0		614238	0					
ANR	614918	Identifier	sdb_new0		614238	0					
ANR	614919	ArgumentList			614238	1					
ANR	614920	IfStatement	if ( ! sdb )		614238	25					
ANR	614921	Condition	! sdb	651:5:16578:16581	614238	0	True				
ANR	614922	UnaryOperationExpression	! sdb		614238	0					
ANR	614923	UnaryOperator	!		614238	0					
ANR	614924	Identifier	sdb		614238	1					
ANR	614925	CompoundStatement		130:11:3538:3538	614238	1					
ANR	614926	ExpressionStatement	"eprintf ( ""Failed to initialize sdb db\\n"" )"	652:2:16588:16629	614238	0	True				
ANR	614927	CallExpression	"eprintf ( ""Failed to initialize sdb db\\n"" )"		614238	0					
ANR	614928	Callee	eprintf		614238	0					
ANR	614929	Identifier	eprintf		614238	0					
ANR	614930	ArgumentList	"""Failed to initialize sdb db\\n"""		614238	1					
ANR	614931	Argument	"""Failed to initialize sdb db\\n"""		614238	0					
ANR	614932	PrimaryExpression	"""Failed to initialize sdb db\\n"""		614238	0					
ANR	614933	ExpressionStatement	r_list_free ( block_list )	653:2:16633:16657	614238	1	True				
ANR	614934	CallExpression	r_list_free ( block_list )		614238	0					
ANR	614935	Callee	r_list_free		614238	0					
ANR	614936	Identifier	r_list_free		614238	0					
ANR	614937	ArgumentList	block_list		614238	1					
ANR	614938	Argument	block_list		614238	0					
ANR	614939	Identifier	block_list		614238	0					
ANR	614940	ExpressionStatement	r_list_free ( result )	654:2:16661:16681	614238	2	True				
ANR	614941	CallExpression	r_list_free ( result )		614238	0					
ANR	614942	Callee	r_list_free		614238	0					
ANR	614943	Identifier	r_list_free		614238	0					
ANR	614944	ArgumentList	result		614238	1					
ANR	614945	Argument	result		614238	0					
ANR	614946	Identifier	result		614238	0					
ANR	614947	ReturnStatement	return false ;	655:2:16685:16697	614238	3	True				
ANR	614948	Identifier	false		614238	0					
ANR	614949	ExpressionStatement	"r_list_sort ( block_list , ( RListComparator ) bbCMP )"	658:1:16704:16752	614238	26	True				
ANR	614950	CallExpression	"r_list_sort ( block_list , ( RListComparator ) bbCMP )"		614238	0					
ANR	614951	Callee	r_list_sort		614238	0					
ANR	614952	Identifier	r_list_sort		614238	0					
ANR	614953	ArgumentList	block_list		614238	1					
ANR	614954	Argument	block_list		614238	0					
ANR	614955	Identifier	block_list		614238	0					
ANR	614956	Argument	( RListComparator ) bbCMP		614238	1					
ANR	614957	CastExpression	( RListComparator ) bbCMP		614238	0					
ANR	614958	CastTarget	RListComparator		614238	0					
ANR	614959	Identifier	bbCMP		614238	1					
ANR	614960	IfStatement	if ( debug )		614238	27					
ANR	614961	Condition	debug	660:5:16760:16764	614238	0	True				
ANR	614962	Identifier	debug		614238	0					
ANR	614963	CompoundStatement		139:12:3721:3721	614238	1					
ANR	614964	ExpressionStatement	"eprintf ( ""Sorting all blocks done\\n"" )"	661:2:16771:16808	614238	0	True				
ANR	614965	CallExpression	"eprintf ( ""Sorting all blocks done\\n"" )"		614238	0					
ANR	614966	Callee	eprintf		614238	0					
ANR	614967	Identifier	eprintf		614238	0					
ANR	614968	ArgumentList	"""Sorting all blocks done\\n"""		614238	1					
ANR	614969	Argument	"""Sorting all blocks done\\n"""		614238	0					
ANR	614970	PrimaryExpression	"""Sorting all blocks done\\n"""		614238	0					
ANR	614971	ExpressionStatement	"eprintf ( ""Creating the complete graph\\n"" )"	662:2:16812:16853	614238	1	True				
ANR	614972	CallExpression	"eprintf ( ""Creating the complete graph\\n"" )"		614238	0					
ANR	614973	Callee	eprintf		614238	0					
ANR	614974	Identifier	eprintf		614238	0					
ANR	614975	ArgumentList	"""Creating the complete graph\\n"""		614238	1					
ANR	614976	Argument	"""Creating the complete graph\\n"""		614238	0					
ANR	614977	PrimaryExpression	"""Creating the complete graph\\n"""		614238	0					
ANR	614978	WhileStatement	while ( block_list -> length > 0 )		614238	28					
ANR	614979	Condition	block_list -> length > 0	665:8:16867:16888	614238	0	True				
ANR	614980	RelationalExpression	block_list -> length > 0		614238	0		>			
ANR	614981	PtrMemberAccess	block_list -> length		614238	0					
ANR	614982	Identifier	block_list		614238	0					
ANR	614983	Identifier	length		614238	1					
ANR	614984	PrimaryExpression	0		614238	1					
ANR	614985	CompoundStatement		144:32:3845:3845	614238	1					
ANR	614986	ExpressionStatement	block = r_list_pop ( block_list )	666:2:16895:16926	614238	0	True				
ANR	614987	AssignmentExpression	block = r_list_pop ( block_list )		614238	0		=			
ANR	614988	Identifier	block		614238	0					
ANR	614989	CallExpression	r_list_pop ( block_list )		614238	1					
ANR	614990	Callee	r_list_pop		614238	0					
ANR	614991	Identifier	r_list_pop		614238	0					
ANR	614992	ArgumentList	block_list		614238	1					
ANR	614993	Argument	block_list		614238	0					
ANR	614994	Identifier	block_list		614238	0					
ANR	614995	IfStatement	if ( ! block )		614238	1					
ANR	614996	Condition	! block	667:6:16934:16939	614238	0	True				
ANR	614997	UnaryOperationExpression	! block		614238	0					
ANR	614998	UnaryOperator	!		614238	0					
ANR	614999	Identifier	block		614238	1					
ANR	615000	CompoundStatement		146:14:3896:3896	614238	1					
ANR	615001	ExpressionStatement	"eprintf ( ""Failed to get next block from list\\n"" )"	668:3:16947:16995	614238	0	True				
ANR	615002	CallExpression	"eprintf ( ""Failed to get next block from list\\n"" )"		614238	0					
ANR	615003	Callee	eprintf		614238	0					
ANR	615004	Identifier	eprintf		614238	0					
ANR	615005	ArgumentList	"""Failed to get next block from list\\n"""		614238	1					
ANR	615006	Argument	"""Failed to get next block from list\\n"""		614238	0					
ANR	615007	PrimaryExpression	"""Failed to get next block from list\\n"""		614238	0					
ANR	615008	ContinueStatement	continue ;	669:3:17000:17008	614238	1	True				
ANR	615009	IfStatement	if ( r_cons_is_breaked ( ) )		614238	2					
ANR	615010	Condition	r_cons_is_breaked ( )	671:6:17020:17039	614238	0	True				
ANR	615011	CallExpression	r_cons_is_breaked ( )		614238	0					
ANR	615012	Callee	r_cons_is_breaked		614238	0					
ANR	615013	Identifier	r_cons_is_breaked		614238	0					
ANR	615014	ArgumentList			614238	1					
ANR	615015	CompoundStatement		150:28:3996:3996	614238	1					
ANR	615016	BreakStatement	break ;	672:3:17047:17052	614238	0	True				
ANR	615017	IfStatement	if ( block_list -> length > 0 )		614238	3					
ANR	615018	Condition	block_list -> length > 0	675:6:17065:17086	614238	0	True				
ANR	615019	RelationalExpression	block_list -> length > 0		614238	0		>			
ANR	615020	PtrMemberAccess	block_list -> length		614238	0					
ANR	615021	Identifier	block_list		614238	0					
ANR	615022	Identifier	length		614238	1					
ANR	615023	PrimaryExpression	0		614238	1					
ANR	615024	CompoundStatement		155:3:4048:4113	614238	1					
ANR	615025	IdentifierDeclStatement	bb_t * next_block = ( bb_t * ) r_list_iter_get_data ( block_list -> tail ) ;	676:3:17094:17159	614238	0	True				
ANR	615026	IdentifierDecl	* next_block = ( bb_t * ) r_list_iter_get_data ( block_list -> tail )		614238	0					
ANR	615027	IdentifierDeclType	bb_t *		614238	0					
ANR	615028	Identifier	next_block		614238	1					
ANR	615029	AssignmentExpression	* next_block = ( bb_t * ) r_list_iter_get_data ( block_list -> tail )		614238	2		=			
ANR	615030	Identifier	next_block		614238	0					
ANR	615031	CastExpression	( bb_t * ) r_list_iter_get_data ( block_list -> tail )		614238	1					
ANR	615032	CastTarget	bb_t *		614238	0					
ANR	615033	CallExpression	r_list_iter_get_data ( block_list -> tail )		614238	1					
ANR	615034	Callee	r_list_iter_get_data		614238	0					
ANR	615035	Identifier	r_list_iter_get_data		614238	0					
ANR	615036	ArgumentList	block_list -> tail		614238	1					
ANR	615037	Argument	block_list -> tail		614238	0					
ANR	615038	PtrMemberAccess	block_list -> tail		614238	0					
ANR	615039	Identifier	block_list		614238	0					
ANR	615040	Identifier	tail		614238	1					
ANR	615041	IfStatement	if ( ! next_block )		614238	1					
ANR	615042	Condition	! next_block	677:7:17168:17178	614238	0	True				
ANR	615043	UnaryOperationExpression	! next_block		614238	0					
ANR	615044	UnaryOperator	!		614238	0					
ANR	615045	Identifier	next_block		614238	1					
ANR	615046	CompoundStatement		156:20:4135:4135	614238	1					
ANR	615047	ExpressionStatement	"eprintf ( ""No next block to compare with!\\n"" )"	678:4:17187:17231	614238	0	True				
ANR	615048	CallExpression	"eprintf ( ""No next block to compare with!\\n"" )"		614238	0					
ANR	615049	Callee	eprintf		614238	0					
ANR	615050	Identifier	eprintf		614238	0					
ANR	615051	ArgumentList	"""No next block to compare with!\\n"""		614238	1					
ANR	615052	Argument	"""No next block to compare with!\\n"""		614238	0					
ANR	615053	PrimaryExpression	"""No next block to compare with!\\n"""		614238	0					
ANR	615054	IfStatement	if ( block -> start == next_block -> start && block -> end == UT64_MAX )		614238	2					
ANR	615055	Condition	block -> start == next_block -> start && block -> end == UT64_MAX	682:7:17288:17346	614238	0	True				
ANR	615056	AndExpression	block -> start == next_block -> start && block -> end == UT64_MAX		614238	0		&&			
ANR	615057	EqualityExpression	block -> start == next_block -> start		614238	0		==			
ANR	615058	PtrMemberAccess	block -> start		614238	0					
ANR	615059	Identifier	block		614238	0					
ANR	615060	Identifier	start		614238	1					
ANR	615061	PtrMemberAccess	next_block -> start		614238	1					
ANR	615062	Identifier	next_block		614238	0					
ANR	615063	Identifier	start		614238	1					
ANR	615064	EqualityExpression	block -> end == UT64_MAX		614238	1		==			
ANR	615065	PtrMemberAccess	block -> end		614238	0					
ANR	615066	Identifier	block		614238	0					
ANR	615067	Identifier	end		614238	1					
ANR	615068	Identifier	UT64_MAX		614238	1					
ANR	615069	CompoundStatement		161:68:4303:4303	614238	1					
ANR	615070	IfStatement	if ( block -> type != CALL && next_block -> type != CALL )		614238	0					
ANR	615071	Condition	block -> type != CALL && next_block -> type != CALL	683:8:17359:17405	614238	0	True				
ANR	615072	AndExpression	block -> type != CALL && next_block -> type != CALL		614238	0		&&			
ANR	615073	EqualityExpression	block -> type != CALL		614238	0		!=			
ANR	615074	PtrMemberAccess	block -> type		614238	0					
ANR	615075	Identifier	block		614238	0					
ANR	615076	Identifier	type		614238	1					
ANR	615077	Identifier	CALL		614238	1					
ANR	615078	EqualityExpression	next_block -> type != CALL		614238	1		!=			
ANR	615079	PtrMemberAccess	next_block -> type		614238	0					
ANR	615080	Identifier	next_block		614238	0					
ANR	615081	Identifier	type		614238	1					
ANR	615082	Identifier	CALL		614238	1					
ANR	615083	CompoundStatement		162:57:4362:4362	614238	1					
ANR	615084	ExpressionStatement	next_block -> reached = block -> reached + 1	684:5:17415:17455	614238	0	True				
ANR	615085	AssignmentExpression	next_block -> reached = block -> reached + 1		614238	0		=			
ANR	615086	PtrMemberAccess	next_block -> reached		614238	0					
ANR	615087	Identifier	next_block		614238	0					
ANR	615088	Identifier	reached		614238	1					
ANR	615089	AdditiveExpression	block -> reached + 1		614238	1		+			
ANR	615090	PtrMemberAccess	block -> reached		614238	0					
ANR	615091	Identifier	block		614238	0					
ANR	615092	Identifier	reached		614238	1					
ANR	615093	PrimaryExpression	1		614238	1					
ANR	615094	ExpressionStatement	free ( block )	686:4:17467:17479	614238	1	True				
ANR	615095	CallExpression	free ( block )		614238	0					
ANR	615096	Callee	free		614238	0					
ANR	615097	Identifier	free		614238	0					
ANR	615098	ArgumentList	block		614238	1					
ANR	615099	Argument	block		614238	0					
ANR	615100	Identifier	block		614238	0					
ANR	615101	ContinueStatement	continue ;	687:4:17485:17493	614238	2	True				
ANR	615102	IfStatement	if ( block -> start == next_block -> start && next_block -> end == UT64_MAX )		614238	3					
ANR	615103	Condition	block -> start == next_block -> start && next_block -> end == UT64_MAX	692:7:17644:17707	614238	0	True				
ANR	615104	AndExpression	block -> start == next_block -> start && next_block -> end == UT64_MAX		614238	0		&&			
ANR	615105	EqualityExpression	block -> start == next_block -> start		614238	0		==			
ANR	615106	PtrMemberAccess	block -> start		614238	0					
ANR	615107	Identifier	block		614238	0					
ANR	615108	Identifier	start		614238	1					
ANR	615109	PtrMemberAccess	next_block -> start		614238	1					
ANR	615110	Identifier	next_block		614238	0					
ANR	615111	Identifier	start		614238	1					
ANR	615112	EqualityExpression	next_block -> end == UT64_MAX		614238	1		==			
ANR	615113	PtrMemberAccess	next_block -> end		614238	0					
ANR	615114	Identifier	next_block		614238	0					
ANR	615115	Identifier	end		614238	1					
ANR	615116	Identifier	UT64_MAX		614238	1					
ANR	615117	CompoundStatement		171:73:4664:4664	614238	1					
ANR	615118	IfStatement	if ( next_block -> type != CALL )		614238	0					
ANR	615119	Condition	next_block -> type != CALL	693:8:17720:17743	614238	0	True				
ANR	615120	EqualityExpression	next_block -> type != CALL		614238	0		!=			
ANR	615121	PtrMemberAccess	next_block -> type		614238	0					
ANR	615122	Identifier	next_block		614238	0					
ANR	615123	Identifier	type		614238	1					
ANR	615124	Identifier	CALL		614238	1					
ANR	615125	CompoundStatement		172:34:4700:4700	614238	1					
ANR	615126	ExpressionStatement	block -> reached += 1	694:5:17753:17772	614238	0	True				
ANR	615127	AssignmentExpression	block -> reached += 1		614238	0		+=			
ANR	615128	PtrMemberAccess	block -> reached		614238	0					
ANR	615129	Identifier	block		614238	0					
ANR	615130	Identifier	reached		614238	1					
ANR	615131	PrimaryExpression	1		614238	1					
ANR	615132	ExpressionStatement	* next_block = * block	696:4:17784:17804	614238	1	True				
ANR	615133	AssignmentExpression	* next_block = * block		614238	0		=			
ANR	615134	UnaryOperationExpression	* next_block		614238	0					
ANR	615135	UnaryOperator	*		614238	0					
ANR	615136	Identifier	next_block		614238	1					
ANR	615137	UnaryOperationExpression	* block		614238	1					
ANR	615138	UnaryOperator	*		614238	0					
ANR	615139	Identifier	block		614238	1					
ANR	615140	ExpressionStatement	free ( block )	697:4:17810:17822	614238	2	True				
ANR	615141	CallExpression	free ( block )		614238	0					
ANR	615142	Callee	free		614238	0					
ANR	615143	Identifier	free		614238	0					
ANR	615144	ArgumentList	block		614238	1					
ANR	615145	Argument	block		614238	0					
ANR	615146	Identifier	block		614238	0					
ANR	615147	ContinueStatement	continue ;	698:4:17828:17836	614238	3	True				
ANR	615148	IfStatement	if ( block -> end < UT64_MAX && next_block -> start < block -> end && next_block -> start > block -> start )		614238	4					
ANR	615149	Condition	block -> end < UT64_MAX && next_block -> start < block -> end && next_block -> start > block -> start	701:7:17851:17941	614238	0	True				
ANR	615150	AndExpression	block -> end < UT64_MAX && next_block -> start < block -> end && next_block -> start > block -> start		614238	0		&&			
ANR	615151	RelationalExpression	block -> end < UT64_MAX		614238	0		<			
ANR	615152	PtrMemberAccess	block -> end		614238	0					
ANR	615153	Identifier	block		614238	0					
ANR	615154	Identifier	end		614238	1					
ANR	615155	Identifier	UT64_MAX		614238	1					
ANR	615156	AndExpression	next_block -> start < block -> end && next_block -> start > block -> start		614238	1		&&			
ANR	615157	RelationalExpression	next_block -> start < block -> end		614238	0		<			
ANR	615158	PtrMemberAccess	next_block -> start		614238	0					
ANR	615159	Identifier	next_block		614238	0					
ANR	615160	Identifier	start		614238	1					
ANR	615161	PtrMemberAccess	block -> end		614238	1					
ANR	615162	Identifier	block		614238	0					
ANR	615163	Identifier	end		614238	1					
ANR	615164	RelationalExpression	next_block -> start > block -> start		614238	1		>			
ANR	615165	PtrMemberAccess	next_block -> start		614238	0					
ANR	615166	Identifier	next_block		614238	0					
ANR	615167	Identifier	start		614238	1					
ANR	615168	PtrMemberAccess	block -> start		614238	1					
ANR	615169	Identifier	block		614238	0					
ANR	615170	Identifier	start		614238	1					
ANR	615171	CompoundStatement		180:100:4898:4898	614238	1					
ANR	615172	IfStatement	if ( next_block -> jump == UT64_MAX )		614238	0					
ANR	615173	Condition	next_block -> jump == UT64_MAX	702:8:17954:17981	614238	0	True				
ANR	615174	EqualityExpression	next_block -> jump == UT64_MAX		614238	0		==			
ANR	615175	PtrMemberAccess	next_block -> jump		614238	0					
ANR	615176	Identifier	next_block		614238	0					
ANR	615177	Identifier	jump		614238	1					
ANR	615178	Identifier	UT64_MAX		614238	1					
ANR	615179	CompoundStatement		181:38:4938:4938	614238	1					
ANR	615180	ExpressionStatement	next_block -> jump = block -> jump	703:5:17991:18021	614238	0	True				
ANR	615181	AssignmentExpression	next_block -> jump = block -> jump		614238	0		=			
ANR	615182	PtrMemberAccess	next_block -> jump		614238	0					
ANR	615183	Identifier	next_block		614238	0					
ANR	615184	Identifier	jump		614238	1					
ANR	615185	PtrMemberAccess	block -> jump		614238	1					
ANR	615186	Identifier	block		614238	0					
ANR	615187	Identifier	jump		614238	1					
ANR	615188	IfStatement	if ( next_block -> fail == UT64_MAX )		614238	1					
ANR	615189	Condition	next_block -> fail == UT64_MAX	706:8:18038:18065	614238	0	True				
ANR	615190	EqualityExpression	next_block -> fail == UT64_MAX		614238	0		==			
ANR	615191	PtrMemberAccess	next_block -> fail		614238	0					
ANR	615192	Identifier	next_block		614238	0					
ANR	615193	Identifier	fail		614238	1					
ANR	615194	Identifier	UT64_MAX		614238	1					
ANR	615195	CompoundStatement		185:38:5022:5022	614238	1					
ANR	615196	ExpressionStatement	next_block -> fail = block -> fail	707:5:18075:18105	614238	0	True				
ANR	615197	AssignmentExpression	next_block -> fail = block -> fail		614238	0		=			
ANR	615198	PtrMemberAccess	next_block -> fail		614238	0					
ANR	615199	Identifier	next_block		614238	0					
ANR	615200	Identifier	fail		614238	1					
ANR	615201	PtrMemberAccess	block -> fail		614238	1					
ANR	615202	Identifier	block		614238	0					
ANR	615203	Identifier	fail		614238	1					
ANR	615204	ExpressionStatement	next_block -> end = block -> end	710:4:18118:18146	614238	2	True				
ANR	615205	AssignmentExpression	next_block -> end = block -> end		614238	0		=			
ANR	615206	PtrMemberAccess	next_block -> end		614238	0					
ANR	615207	Identifier	next_block		614238	0					
ANR	615208	Identifier	end		614238	1					
ANR	615209	PtrMemberAccess	block -> end		614238	1					
ANR	615210	Identifier	block		614238	0					
ANR	615211	Identifier	end		614238	1					
ANR	615212	ExpressionStatement	block -> end = next_block -> start	711:4:18152:18182	614238	3	True				
ANR	615213	AssignmentExpression	block -> end = next_block -> start		614238	0		=			
ANR	615214	PtrMemberAccess	block -> end		614238	0					
ANR	615215	Identifier	block		614238	0					
ANR	615216	Identifier	end		614238	1					
ANR	615217	PtrMemberAccess	next_block -> start		614238	1					
ANR	615218	Identifier	next_block		614238	0					
ANR	615219	Identifier	start		614238	1					
ANR	615220	ExpressionStatement	block -> jump = next_block -> start	712:4:18188:18219	614238	4	True				
ANR	615221	AssignmentExpression	block -> jump = next_block -> start		614238	0		=			
ANR	615222	PtrMemberAccess	block -> jump		614238	0					
ANR	615223	Identifier	block		614238	0					
ANR	615224	Identifier	jump		614238	1					
ANR	615225	PtrMemberAccess	next_block -> start		614238	1					
ANR	615226	Identifier	next_block		614238	0					
ANR	615227	Identifier	start		614238	1					
ANR	615228	ExpressionStatement	block -> fail = UT64_MAX	713:4:18225:18247	614238	5	True				
ANR	615229	AssignmentExpression	block -> fail = UT64_MAX		614238	0		=			
ANR	615230	PtrMemberAccess	block -> fail		614238	0					
ANR	615231	Identifier	block		614238	0					
ANR	615232	Identifier	fail		614238	1					
ANR	615233	Identifier	UT64_MAX		614238	1					
ANR	615234	ExpressionStatement	next_block -> type = block -> type	714:4:18253:18283	614238	6	True				
ANR	615235	AssignmentExpression	next_block -> type = block -> type		614238	0		=			
ANR	615236	PtrMemberAccess	next_block -> type		614238	0					
ANR	615237	Identifier	next_block		614238	0					
ANR	615238	Identifier	type		614238	1					
ANR	615239	PtrMemberAccess	block -> type		614238	1					
ANR	615240	Identifier	block		614238	0					
ANR	615241	Identifier	type		614238	1					
ANR	615242	IfStatement	if ( next_block -> type != CALL )		614238	7					
ANR	615243	Condition	next_block -> type != CALL	715:8:18293:18316	614238	0	True				
ANR	615244	EqualityExpression	next_block -> type != CALL		614238	0		!=			
ANR	615245	PtrMemberAccess	next_block -> type		614238	0					
ANR	615246	Identifier	next_block		614238	0					
ANR	615247	Identifier	type		614238	1					
ANR	615248	Identifier	CALL		614238	1					
ANR	615249	CompoundStatement		194:34:5273:5273	614238	1					
ANR	615250	ExpressionStatement	next_block -> reached += 1	716:5:18326:18350	614238	0	True				
ANR	615251	AssignmentExpression	next_block -> reached += 1		614238	0		+=			
ANR	615252	PtrMemberAccess	next_block -> reached		614238	0					
ANR	615253	Identifier	next_block		614238	0					
ANR	615254	Identifier	reached		614238	1					
ANR	615255	PrimaryExpression	1		614238	1					
ANR	615256	Statement	sdb_ptr_set	721:2:18370:18380	614238	4	True				
ANR	615257	Statement	(	721:14:18382:18382	614238	5	True				
ANR	615258	Statement	sdb	721:15:18383:18385	614238	6	True				
ANR	615259	Statement	","	721:18:18386:18386	614238	7	True				
ANR	615260	Statement	sdb_fmt	721:20:18388:18394	614238	8	True				
ANR	615261	Statement	(	721:28:18396:18396	614238	9	True				
ANR	615262	Statement	"""bb.0x%08"""	721:29:18397:18406	614238	10	True				
ANR	615263	Statement	PFMT64x	721:39:18407:18413	614238	11	True				
ANR	615264	Statement	","	721:46:18414:18414	614238	12	True				
ANR	615265	Statement	block	721:48:18416:18420	614238	13	True				
ANR	615266	Statement	->	721:53:18421:18422	614238	14	True				
ANR	615267	Statement	start	721:55:18423:18427	614238	15	True				
ANR	615268	Statement	)	721:60:18428:18428	614238	16	True				
ANR	615269	Statement	","	721:61:18429:18429	614238	17	True				
ANR	615270	Statement	block	721:63:18431:18435	614238	18	True				
ANR	615271	Statement	","	721:68:18436:18436	614238	19	True				
ANR	615272	Statement	0	721:70:18438:18438	614238	20	True				
ANR	615273	Statement	)	721:71:18439:18439	614238	21	True				
ANR	615274	ExpressionStatement		721:72:18440:18440	614238	22	True				
ANR	615275	ExpressionStatement	"r_list_append ( result , block )"	722:2:18444:18473	614238	23	True				
ANR	615276	CallExpression	"r_list_append ( result , block )"		614238	0					
ANR	615277	Callee	r_list_append		614238	0					
ANR	615278	Identifier	r_list_append		614238	0					
ANR	615279	ArgumentList	result		614238	1					
ANR	615280	Argument	result		614238	0					
ANR	615281	Identifier	result		614238	0					
ANR	615282	Argument	block		614238	1					
ANR	615283	Identifier	block		614238	0					
ANR	615284	IfStatement	if ( debug )		614238	29					
ANR	615285	Condition	debug	728:5:18603:18607	614238	0	True				
ANR	615286	Identifier	debug		614238	0					
ANR	615287	CompoundStatement		207:12:5564:5564	614238	1					
ANR	615288	ExpressionStatement	"eprintf ( ""Trying to create functions\\n"" )"	729:2:18614:18654	614238	0	True				
ANR	615289	CallExpression	"eprintf ( ""Trying to create functions\\n"" )"		614238	0					
ANR	615290	Callee	eprintf		614238	0					
ANR	615291	Identifier	eprintf		614238	0					
ANR	615292	ArgumentList	"""Trying to create functions\\n"""		614238	1					
ANR	615293	Argument	"""Trying to create functions\\n"""		614238	0					
ANR	615294	PrimaryExpression	"""Trying to create functions\\n"""		614238	0					
ANR	615295	Statement	r_list_foreach	732:1:18661:18674	614238	30	True				
ANR	615296	Statement	(	732:16:18676:18676	614238	31	True				
ANR	615297	Statement	result	732:17:18677:18682	614238	32	True				
ANR	615298	Statement	","	732:23:18683:18683	614238	33	True				
ANR	615299	Statement	iter	732:25:18685:18688	614238	34	True				
ANR	615300	Statement	","	732:29:18689:18689	614238	35	True				
ANR	615301	Statement	block	732:31:18691:18695	614238	36	True				
ANR	615302	Statement	)	732:36:18696:18696	614238	37	True				
ANR	615303	CompoundStatement		211:38:5652:5652	614238	38					
ANR	615304	IfStatement	if ( r_cons_is_breaked ( ) )		614238	0					
ANR	615305	Condition	r_cons_is_breaked ( )	733:6:18706:18725	614238	0	True				
ANR	615306	CallExpression	r_cons_is_breaked ( )		614238	0					
ANR	615307	Callee	r_cons_is_breaked		614238	0					
ANR	615308	Identifier	r_cons_is_breaked		614238	0					
ANR	615309	ArgumentList			614238	1					
ANR	615310	CompoundStatement		212:28:5682:5682	614238	1					
ANR	615311	BreakStatement	break ;	734:3:18733:18738	614238	0	True				
ANR	615312	IfStatement	if ( block && ( block -> reached == 0 ) )		614238	1					
ANR	615313	Condition	block && ( block -> reached == 0 )	736:6:18750:18779	614238	0	True				
ANR	615314	AndExpression	block && ( block -> reached == 0 )		614238	0		&&			
ANR	615315	Identifier	block		614238	0					
ANR	615316	EqualityExpression	block -> reached == 0		614238	1		==			
ANR	615317	PtrMemberAccess	block -> reached		614238	0					
ANR	615318	Identifier	block		614238	0					
ANR	615319	Identifier	reached		614238	1					
ANR	615320	PrimaryExpression	0		614238	1					
ANR	615321	CompoundStatement		220:3:5868:5884	614238	1					
ANR	615322	IdentifierDeclStatement	fcn_t * current_function = fcnNew ( block ) ;	737:3:18787:18827	614238	0	True				
ANR	615323	IdentifierDecl	* current_function = fcnNew ( block )		614238	0					
ANR	615324	IdentifierDeclType	fcn_t *		614238	0					
ANR	615325	Identifier	current_function		614238	1					
ANR	615326	AssignmentExpression	* current_function = fcnNew ( block )		614238	2		=			
ANR	615327	Identifier	current_function		614238	0					
ANR	615328	CallExpression	fcnNew ( block )		614238	1					
ANR	615329	Callee	fcnNew		614238	0					
ANR	615330	Identifier	fcnNew		614238	0					
ANR	615331	ArgumentList	block		614238	1					
ANR	615332	Argument	block		614238	0					
ANR	615333	Identifier	block		614238	0					
ANR	615334	IdentifierDeclStatement	RStack * stack = r_stack_new ( 100 ) ;	738:3:18832:18865	614238	1	True				
ANR	615335	IdentifierDecl	* stack = r_stack_new ( 100 )		614238	0					
ANR	615336	IdentifierDeclType	RStack *		614238	0					
ANR	615337	Identifier	stack		614238	1					
ANR	615338	AssignmentExpression	* stack = r_stack_new ( 100 )		614238	2		=			
ANR	615339	Identifier	stack		614238	0					
ANR	615340	CallExpression	r_stack_new ( 100 )		614238	1					
ANR	615341	Callee	r_stack_new		614238	0					
ANR	615342	Identifier	r_stack_new		614238	0					
ANR	615343	ArgumentList	100		614238	1					
ANR	615344	Argument	100		614238	0					
ANR	615345	PrimaryExpression	100		614238	0					
ANR	615346	IdentifierDeclStatement	bb_t * jump = NULL ;	739:3:18870:18887	614238	2	True				
ANR	615347	IdentifierDecl	* jump = NULL		614238	0					
ANR	615348	IdentifierDeclType	bb_t *		614238	0					
ANR	615349	Identifier	jump		614238	1					
ANR	615350	AssignmentExpression	* jump = NULL		614238	2		=			
ANR	615351	Identifier	NULL		614238	0					
ANR	615352	Identifier	NULL		614238	1					
ANR	615353	IdentifierDeclStatement	bb_t * fail = NULL ;	740:3:18892:18909	614238	3	True				
ANR	615354	IdentifierDecl	* fail = NULL		614238	0					
ANR	615355	IdentifierDeclType	bb_t *		614238	0					
ANR	615356	Identifier	fail		614238	1					
ANR	615357	AssignmentExpression	* fail = NULL		614238	2		=			
ANR	615358	Identifier	NULL		614238	0					
ANR	615359	Identifier	NULL		614238	1					
ANR	615360	IdentifierDeclStatement	bb_t * cur = NULL ;	741:3:18914:18930	614238	4	True				
ANR	615361	IdentifierDecl	* cur = NULL		614238	0					
ANR	615362	IdentifierDeclType	bb_t *		614238	0					
ANR	615363	Identifier	cur		614238	1					
ANR	615364	AssignmentExpression	* cur = NULL		614238	2		=			
ANR	615365	Identifier	NULL		614238	0					
ANR	615366	Identifier	NULL		614238	1					
ANR	615367	IfStatement	"if ( ! r_stack_push ( stack , ( void * ) block ) )"		614238	5					
ANR	615368	Condition	"! r_stack_push ( stack , ( void * ) block )"	743:7:18940:18974	614238	0	True				
ANR	615369	UnaryOperationExpression	"! r_stack_push ( stack , ( void * ) block )"		614238	0					
ANR	615370	UnaryOperator	!		614238	0					
ANR	615371	CallExpression	"r_stack_push ( stack , ( void * ) block )"		614238	1					
ANR	615372	Callee	r_stack_push		614238	0					
ANR	615373	Identifier	r_stack_push		614238	0					
ANR	615374	ArgumentList	stack		614238	1					
ANR	615375	Argument	stack		614238	0					
ANR	615376	Identifier	stack		614238	0					
ANR	615377	Argument	( void * ) block		614238	1					
ANR	615378	CastExpression	( void * ) block		614238	0					
ANR	615379	CastTarget	void *		614238	0					
ANR	615380	Identifier	block		614238	1					
ANR	615381	CompoundStatement		222:44:5931:5931	614238	1					
ANR	615382	ExpressionStatement	"eprintf ( ""Failed to push initial block\\n"" )"	744:4:18983:19025	614238	0	True				
ANR	615383	CallExpression	"eprintf ( ""Failed to push initial block\\n"" )"		614238	0					
ANR	615384	Callee	eprintf		614238	0					
ANR	615385	Identifier	eprintf		614238	0					
ANR	615386	ArgumentList	"""Failed to push initial block\\n"""		614238	1					
ANR	615387	Argument	"""Failed to push initial block\\n"""		614238	0					
ANR	615388	PrimaryExpression	"""Failed to push initial block\\n"""		614238	0					
ANR	615389	WhileStatement	while ( ! r_stack_is_empty ( stack ) )		614238	6					
ANR	615390	Condition	! r_stack_is_empty ( stack )	747:10:19043:19067	614238	0	True				
ANR	615391	UnaryOperationExpression	! r_stack_is_empty ( stack )		614238	0					
ANR	615392	UnaryOperator	!		614238	0					
ANR	615393	CallExpression	r_stack_is_empty ( stack )		614238	1					
ANR	615394	Callee	r_stack_is_empty		614238	0					
ANR	615395	Identifier	r_stack_is_empty		614238	0					
ANR	615396	ArgumentList	stack		614238	1					
ANR	615397	Argument	stack		614238	0					
ANR	615398	Identifier	stack		614238	0					
ANR	615399	CompoundStatement		226:37:6024:6024	614238	1					
ANR	615400	ExpressionStatement	cur = ( bb_t * ) r_stack_pop ( stack )	748:4:19076:19108	614238	0	True				
ANR	615401	AssignmentExpression	cur = ( bb_t * ) r_stack_pop ( stack )		614238	0		=			
ANR	615402	Identifier	cur		614238	0					
ANR	615403	CastExpression	( bb_t * ) r_stack_pop ( stack )		614238	1					
ANR	615404	CastTarget	bb_t *		614238	0					
ANR	615405	CallExpression	r_stack_pop ( stack )		614238	1					
ANR	615406	Callee	r_stack_pop		614238	0					
ANR	615407	Identifier	r_stack_pop		614238	0					
ANR	615408	ArgumentList	stack		614238	1					
ANR	615409	Argument	stack		614238	0					
ANR	615410	Identifier	stack		614238	0					
ANR	615411	IfStatement	if ( ! cur )		614238	1					
ANR	615412	Condition	! cur	749:8:19118:19121	614238	0	True				
ANR	615413	UnaryOperationExpression	! cur		614238	0					
ANR	615414	UnaryOperator	!		614238	0					
ANR	615415	Identifier	cur		614238	1					
ANR	615416	CompoundStatement		228:14:6078:6078	614238	1					
ANR	615417	ContinueStatement	continue ;	750:5:19131:19139	614238	0	True				
ANR	615418	ExpressionStatement	"sdb_num_set ( sdb , Fhandled ( cur -> start ) , 1 , 0 )"	752:4:19151:19197	614238	2	True				
ANR	615419	CallExpression	"sdb_num_set ( sdb , Fhandled ( cur -> start ) , 1 , 0 )"		614238	0					
ANR	615420	Callee	sdb_num_set		614238	0					
ANR	615421	Identifier	sdb_num_set		614238	0					
ANR	615422	ArgumentList	sdb		614238	1					
ANR	615423	Argument	sdb		614238	0					
ANR	615424	Identifier	sdb		614238	0					
ANR	615425	Argument	Fhandled ( cur -> start )		614238	1					
ANR	615426	CallExpression	Fhandled ( cur -> start )		614238	0					
ANR	615427	Callee	Fhandled		614238	0					
ANR	615428	Identifier	Fhandled		614238	0					
ANR	615429	ArgumentList	cur -> start		614238	1					
ANR	615430	Argument	cur -> start		614238	0					
ANR	615431	PtrMemberAccess	cur -> start		614238	0					
ANR	615432	Identifier	cur		614238	0					
ANR	615433	Identifier	start		614238	1					
ANR	615434	Argument	1		614238	2					
ANR	615435	PrimaryExpression	1		614238	0					
ANR	615436	Argument	0		614238	3					
ANR	615437	PrimaryExpression	0		614238	0					
ANR	615438	IfStatement	if ( cur -> score < 0 )		614238	3					
ANR	615439	Condition	cur -> score < 0	753:8:19207:19220	614238	0	True				
ANR	615440	RelationalExpression	cur -> score < 0		614238	0		<			
ANR	615441	PtrMemberAccess	cur -> score		614238	0					
ANR	615442	Identifier	cur		614238	0					
ANR	615443	Identifier	score		614238	1					
ANR	615444	PrimaryExpression	0		614238	1					
ANR	615445	CompoundStatement		232:24:6177:6177	614238	1					
ANR	615446	ExpressionStatement	fcnFree ( current_function )	754:5:19230:19256	614238	0	True				
ANR	615447	CallExpression	fcnFree ( current_function )		614238	0					
ANR	615448	Callee	fcnFree		614238	0					
ANR	615449	Identifier	fcnFree		614238	0					
ANR	615450	ArgumentList	current_function		614238	1					
ANR	615451	Argument	current_function		614238	0					
ANR	615452	Identifier	current_function		614238	0					
ANR	615453	ExpressionStatement	current_function = NULL	755:5:19263:19286	614238	1	True				
ANR	615454	AssignmentExpression	current_function = NULL		614238	0		=			
ANR	615455	Identifier	current_function		614238	0					
ANR	615456	Identifier	NULL		614238	1					
ANR	615457	BreakStatement	break ;	756:5:19293:19298	614238	2	True				
ANR	615458	IfStatement	if ( ( st64 ) ( cur -> end - cur -> start ) < 0 )		614238	4					
ANR	615459	Condition	( st64 ) ( cur -> end - cur -> start ) < 0	759:8:19347:19379	614238	0	True				
ANR	615460	RelationalExpression	( st64 ) ( cur -> end - cur -> start ) < 0		614238	0		<			
ANR	615461	CastExpression	( st64 ) ( cur -> end - cur -> start )		614238	0					
ANR	615462	CastTarget	st64		614238	0					
ANR	615463	AdditiveExpression	cur -> end - cur -> start		614238	1		-			
ANR	615464	PtrMemberAccess	cur -> end		614238	0					
ANR	615465	Identifier	cur		614238	0					
ANR	615466	Identifier	end		614238	1					
ANR	615467	PtrMemberAccess	cur -> start		614238	1					
ANR	615468	Identifier	cur		614238	0					
ANR	615469	Identifier	start		614238	1					
ANR	615470	PrimaryExpression	0		614238	1					
ANR	615471	CompoundStatement		238:43:6336:6336	614238	1					
ANR	615472	BreakStatement	break ;	760:5:19389:19394	614238	0	True				
ANR	615473	ExpressionStatement	"fcnAddBB ( current_function , cur )"	763:4:19407:19439	614238	5	True				
ANR	615474	CallExpression	"fcnAddBB ( current_function , cur )"		614238	0					
ANR	615475	Callee	fcnAddBB		614238	0					
ANR	615476	Identifier	fcnAddBB		614238	0					
ANR	615477	ArgumentList	current_function		614238	1					
ANR	615478	Argument	current_function		614238	0					
ANR	615479	Identifier	current_function		614238	0					
ANR	615480	Argument	cur		614238	1					
ANR	615481	Identifier	cur		614238	0					
ANR	615482	IfStatement	"if ( cur -> jump < UT64_MAX && ! sdb_num_get ( sdb , Fhandled ( cur -> jump ) , NULL ) )"		614238	6					
ANR	615483	Condition	"cur -> jump < UT64_MAX && ! sdb_num_get ( sdb , Fhandled ( cur -> jump ) , NULL )"	765:8:19450:19519	614238	0	True				
ANR	615484	AndExpression	"cur -> jump < UT64_MAX && ! sdb_num_get ( sdb , Fhandled ( cur -> jump ) , NULL )"		614238	0		&&			
ANR	615485	RelationalExpression	cur -> jump < UT64_MAX		614238	0		<			
ANR	615486	PtrMemberAccess	cur -> jump		614238	0					
ANR	615487	Identifier	cur		614238	0					
ANR	615488	Identifier	jump		614238	1					
ANR	615489	Identifier	UT64_MAX		614238	1					
ANR	615490	UnaryOperationExpression	"! sdb_num_get ( sdb , Fhandled ( cur -> jump ) , NULL )"		614238	1					
ANR	615491	UnaryOperator	!		614238	0					
ANR	615492	CallExpression	"sdb_num_get ( sdb , Fhandled ( cur -> jump ) , NULL )"		614238	1					
ANR	615493	Callee	sdb_num_get		614238	0					
ANR	615494	Identifier	sdb_num_get		614238	0					
ANR	615495	ArgumentList	sdb		614238	1					
ANR	615496	Argument	sdb		614238	0					
ANR	615497	Identifier	sdb		614238	0					
ANR	615498	Argument	Fhandled ( cur -> jump )		614238	1					
ANR	615499	CallExpression	Fhandled ( cur -> jump )		614238	0					
ANR	615500	Callee	Fhandled		614238	0					
ANR	615501	Identifier	Fhandled		614238	0					
ANR	615502	ArgumentList	cur -> jump		614238	1					
ANR	615503	Argument	cur -> jump		614238	0					
ANR	615504	PtrMemberAccess	cur -> jump		614238	0					
ANR	615505	Identifier	cur		614238	0					
ANR	615506	Identifier	jump		614238	1					
ANR	615507	Argument	NULL		614238	2					
ANR	615508	Identifier	NULL		614238	0					
ANR	615509	CompoundStatement		244:80:6476:6476	614238	1					
ANR	615510	Statement	jump	766:5:19529:19532	614238	0	True				
ANR	615511	Statement	=	766:10:19534:19534	614238	1	True				
ANR	615512	Statement	sdb_ptr_get	766:12:19536:19546	614238	2	True				
ANR	615513	Statement	(	766:24:19548:19548	614238	3	True				
ANR	615514	Statement	sdb	766:25:19549:19551	614238	4	True				
ANR	615515	Statement	","	766:28:19552:19552	614238	5	True				
ANR	615516	Statement	sdb_fmt	766:30:19554:19560	614238	6	True				
ANR	615517	Statement	(	766:38:19562:19562	614238	7	True				
ANR	615518	Statement	"""bb.0x%08"""	766:39:19563:19572	614238	8	True				
ANR	615519	Statement	PFMT64x	766:49:19573:19579	614238	9	True				
ANR	615520	Statement	","	766:56:19580:19580	614238	10	True				
ANR	615521	Statement	cur	766:58:19582:19584	614238	11	True				
ANR	615522	Statement	->	766:61:19585:19586	614238	12	True				
ANR	615523	Statement	jump	766:63:19587:19590	614238	13	True				
ANR	615524	Statement	)	766:67:19591:19591	614238	14	True				
ANR	615525	Statement	","	766:68:19592:19592	614238	15	True				
ANR	615526	Statement	NULL	766:70:19594:19597	614238	16	True				
ANR	615527	Statement	)	766:74:19598:19598	614238	17	True				
ANR	615528	ExpressionStatement		766:75:19599:19599	614238	18	True				
ANR	615529	IfStatement	if ( ! jump )		614238	19					
ANR	615530	Condition	! jump	767:9:19610:19614	614238	0	True				
ANR	615531	UnaryOperationExpression	! jump		614238	0					
ANR	615532	UnaryOperator	!		614238	0					
ANR	615533	Identifier	jump		614238	1					
ANR	615534	CompoundStatement		246:16:6571:6571	614238	1					
ANR	615535	Statement	eprintf	768:6:19625:19631	614238	0	True				
ANR	615536	Statement	(	768:14:19633:19633	614238	1	True				
ANR	615537	Statement	"""Failed to get jump block at 0x%"""	768:15:19634:19666	614238	2	True				
ANR	615538	Statement	PFMT64x	768:48:19667:19673	614238	3	True				
ANR	615539	Statement	"""\\n"""	768:55:19674:19677	614238	4	True				
ANR	615540	Statement	","	768:59:19678:19678	614238	5	True				
ANR	615541	Statement	cur	768:61:19680:19682	614238	6	True				
ANR	615542	Statement	->	768:64:19683:19684	614238	7	True				
ANR	615543	Statement	jump	768:66:19685:19688	614238	8	True				
ANR	615544	Statement	)	768:70:19689:19689	614238	9	True				
ANR	615545	ExpressionStatement		768:71:19690:19690	614238	10	True				
ANR	615546	ContinueStatement	continue ;	769:6:19698:19706	614238	11	True				
ANR	615547	IfStatement	"if ( ! r_stack_push ( stack , ( void * ) jump ) )"		614238	20					
ANR	615548	Condition	"! r_stack_push ( stack , ( void * ) jump )"	771:9:19724:19757	614238	0	True				
ANR	615549	UnaryOperationExpression	"! r_stack_push ( stack , ( void * ) jump )"		614238	0					
ANR	615550	UnaryOperator	!		614238	0					
ANR	615551	CallExpression	"r_stack_push ( stack , ( void * ) jump )"		614238	1					
ANR	615552	Callee	r_stack_push		614238	0					
ANR	615553	Identifier	r_stack_push		614238	0					
ANR	615554	ArgumentList	stack		614238	1					
ANR	615555	Argument	stack		614238	0					
ANR	615556	Identifier	stack		614238	0					
ANR	615557	Argument	( void * ) jump		614238	1					
ANR	615558	CastExpression	( void * ) jump		614238	0					
ANR	615559	CastTarget	void *		614238	0					
ANR	615560	Identifier	jump		614238	1					
ANR	615561	CompoundStatement		250:45:6714:6714	614238	1					
ANR	615562	ExpressionStatement	"eprintf ( ""Failed to push jump block to stack\\n"" )"	772:6:19768:19816	614238	0	True				
ANR	615563	CallExpression	"eprintf ( ""Failed to push jump block to stack\\n"" )"		614238	0					
ANR	615564	Callee	eprintf		614238	0					
ANR	615565	Identifier	eprintf		614238	0					
ANR	615566	ArgumentList	"""Failed to push jump block to stack\\n"""		614238	1					
ANR	615567	Argument	"""Failed to push jump block to stack\\n"""		614238	0					
ANR	615568	PrimaryExpression	"""Failed to push jump block to stack\\n"""		614238	0					
ANR	615569	IfStatement	"if ( cur -> fail < UT64_MAX && ! sdb_num_get ( sdb , Fhandled ( cur -> fail ) , NULL ) )"		614238	7					
ANR	615570	Condition	"cur -> fail < UT64_MAX && ! sdb_num_get ( sdb , Fhandled ( cur -> fail ) , NULL )"	776:8:19840:19909	614238	0	True				
ANR	615571	AndExpression	"cur -> fail < UT64_MAX && ! sdb_num_get ( sdb , Fhandled ( cur -> fail ) , NULL )"		614238	0		&&			
ANR	615572	RelationalExpression	cur -> fail < UT64_MAX		614238	0		<			
ANR	615573	PtrMemberAccess	cur -> fail		614238	0					
ANR	615574	Identifier	cur		614238	0					
ANR	615575	Identifier	fail		614238	1					
ANR	615576	Identifier	UT64_MAX		614238	1					
ANR	615577	UnaryOperationExpression	"! sdb_num_get ( sdb , Fhandled ( cur -> fail ) , NULL )"		614238	1					
ANR	615578	UnaryOperator	!		614238	0					
ANR	615579	CallExpression	"sdb_num_get ( sdb , Fhandled ( cur -> fail ) , NULL )"		614238	1					
ANR	615580	Callee	sdb_num_get		614238	0					
ANR	615581	Identifier	sdb_num_get		614238	0					
ANR	615582	ArgumentList	sdb		614238	1					
ANR	615583	Argument	sdb		614238	0					
ANR	615584	Identifier	sdb		614238	0					
ANR	615585	Argument	Fhandled ( cur -> fail )		614238	1					
ANR	615586	CallExpression	Fhandled ( cur -> fail )		614238	0					
ANR	615587	Callee	Fhandled		614238	0					
ANR	615588	Identifier	Fhandled		614238	0					
ANR	615589	ArgumentList	cur -> fail		614238	1					
ANR	615590	Argument	cur -> fail		614238	0					
ANR	615591	PtrMemberAccess	cur -> fail		614238	0					
ANR	615592	Identifier	cur		614238	0					
ANR	615593	Identifier	fail		614238	1					
ANR	615594	Argument	NULL		614238	2					
ANR	615595	Identifier	NULL		614238	0					
ANR	615596	CompoundStatement		255:80:6866:6866	614238	1					
ANR	615597	Statement	fail	777:5:19919:19922	614238	0	True				
ANR	615598	Statement	=	777:10:19924:19924	614238	1	True				
ANR	615599	Statement	sdb_ptr_get	777:12:19926:19936	614238	2	True				
ANR	615600	Statement	(	777:24:19938:19938	614238	3	True				
ANR	615601	Statement	sdb	777:25:19939:19941	614238	4	True				
ANR	615602	Statement	","	777:28:19942:19942	614238	5	True				
ANR	615603	Statement	sdb_fmt	777:30:19944:19950	614238	6	True				
ANR	615604	Statement	(	777:38:19952:19952	614238	7	True				
ANR	615605	Statement	"""bb.0x%08"""	777:39:19953:19962	614238	8	True				
ANR	615606	Statement	PFMT64x	777:50:19964:19970	614238	9	True				
ANR	615607	Statement	","	777:57:19971:19971	614238	10	True				
ANR	615608	Statement	cur	777:59:19973:19975	614238	11	True				
ANR	615609	Statement	->	777:62:19976:19977	614238	12	True				
ANR	615610	Statement	fail	777:64:19978:19981	614238	13	True				
ANR	615611	Statement	)	777:68:19982:19982	614238	14	True				
ANR	615612	Statement	","	777:69:19983:19983	614238	15	True				
ANR	615613	Statement	NULL	777:71:19985:19988	614238	16	True				
ANR	615614	Statement	)	777:75:19989:19989	614238	17	True				
ANR	615615	ExpressionStatement		777:76:19990:19990	614238	18	True				
ANR	615616	IfStatement	if ( ! fail )		614238	19					
ANR	615617	Condition	! fail	778:9:20001:20005	614238	0	True				
ANR	615618	UnaryOperationExpression	! fail		614238	0					
ANR	615619	UnaryOperator	!		614238	0					
ANR	615620	Identifier	fail		614238	1					
ANR	615621	CompoundStatement		257:16:6962:6962	614238	1					
ANR	615622	Statement	eprintf	779:6:20016:20022	614238	0	True				
ANR	615623	Statement	(	779:14:20024:20024	614238	1	True				
ANR	615624	Statement	"""Failed to get fail block at 0x%"""	779:15:20025:20057	614238	2	True				
ANR	615625	Statement	PFMT64x	779:48:20058:20064	614238	3	True				
ANR	615626	Statement	"""\\n"""	779:55:20065:20068	614238	4	True				
ANR	615627	Statement	","	779:59:20069:20069	614238	5	True				
ANR	615628	Statement	cur	779:61:20071:20073	614238	6	True				
ANR	615629	Statement	->	779:64:20074:20075	614238	7	True				
ANR	615630	Statement	fail	779:66:20076:20079	614238	8	True				
ANR	615631	Statement	)	779:70:20080:20080	614238	9	True				
ANR	615632	ExpressionStatement		779:71:20081:20081	614238	10	True				
ANR	615633	ContinueStatement	continue ;	780:6:20089:20097	614238	11	True				
ANR	615634	IfStatement	"if ( ! r_stack_push ( stack , ( void * ) fail ) )"		614238	20					
ANR	615635	Condition	"! r_stack_push ( stack , ( void * ) fail )"	782:9:20115:20148	614238	0	True				
ANR	615636	UnaryOperationExpression	"! r_stack_push ( stack , ( void * ) fail )"		614238	0					
ANR	615637	UnaryOperator	!		614238	0					
ANR	615638	CallExpression	"r_stack_push ( stack , ( void * ) fail )"		614238	1					
ANR	615639	Callee	r_stack_push		614238	0					
ANR	615640	Identifier	r_stack_push		614238	0					
ANR	615641	ArgumentList	stack		614238	1					
ANR	615642	Argument	stack		614238	0					
ANR	615643	Identifier	stack		614238	0					
ANR	615644	Argument	( void * ) fail		614238	1					
ANR	615645	CastExpression	( void * ) fail		614238	0					
ANR	615646	CastTarget	void *		614238	0					
ANR	615647	Identifier	fail		614238	1					
ANR	615648	CompoundStatement		261:45:7105:7105	614238	1					
ANR	615649	ExpressionStatement	"eprintf ( ""Failed to push jump block to stack\\n"" )"	783:6:20159:20207	614238	0	True				
ANR	615650	CallExpression	"eprintf ( ""Failed to push jump block to stack\\n"" )"		614238	0					
ANR	615651	Callee	eprintf		614238	0					
ANR	615652	Identifier	eprintf		614238	0					
ANR	615653	ArgumentList	"""Failed to push jump block to stack\\n"""		614238	1					
ANR	615654	Argument	"""Failed to push jump block to stack\\n"""		614238	0					
ANR	615655	PrimaryExpression	"""Failed to push jump block to stack\\n"""		614238	0					
ANR	615656	IfStatement	if ( current_function )		614238	7					
ANR	615657	Condition	current_function	789:7:20268:20283	614238	0	True				
ANR	615658	Identifier	current_function		614238	0					
ANR	615659	CompoundStatement		268:25:7240:7240	614238	1					
ANR	615660	IfStatement	if ( current_function -> addr == start )		614238	0					
ANR	615661	Condition	current_function -> addr == start	791:8:20362:20392	614238	0	True				
ANR	615662	EqualityExpression	current_function -> addr == start		614238	0		==			
ANR	615663	PtrMemberAccess	current_function -> addr		614238	0					
ANR	615664	Identifier	current_function		614238	0					
ANR	615665	Identifier	addr		614238	1					
ANR	615666	Identifier	start		614238	1					
ANR	615667	CompoundStatement		270:41:7349:7349	614238	1					
ANR	615668	ExpressionStatement	current_function -> size = size	793:5:20435:20464	614238	0	True				
ANR	615669	AssignmentExpression	current_function -> size = size		614238	0		=			
ANR	615670	PtrMemberAccess	current_function -> size		614238	0					
ANR	615671	Identifier	current_function		614238	0					
ANR	615672	Identifier	size		614238	1					
ANR	615673	Identifier	size		614238	1					
ANR	615674	IfStatement	if ( checkFunction ( current_function ) )		614238	1					
ANR	615675	Condition	checkFunction ( current_function )	794:9:20475:20506	614238	0	True				
ANR	615676	CallExpression	checkFunction ( current_function )		614238	0					
ANR	615677	Callee	checkFunction		614238	0					
ANR	615678	Identifier	checkFunction		614238	0					
ANR	615679	ArgumentList	current_function		614238	1					
ANR	615680	Argument	current_function		614238	0					
ANR	615681	Identifier	current_function		614238	0					
ANR	615682	CompoundStatement		273:43:7463:7463	614238	1					
ANR	615683	IfStatement	if ( input [ 0 ] == '*' )		614238	0					
ANR	615684	Condition	input [ 0 ] == '*'	795:10:20521:20535	614238	0	True				
ANR	615685	EqualityExpression	input [ 0 ] == '*'		614238	0		==			
ANR	615686	ArrayIndexing	input [ 0 ]		614238	0					
ANR	615687	Identifier	input		614238	0					
ANR	615688	PrimaryExpression	0		614238	1					
ANR	615689	PrimaryExpression	'*'		614238	1					
ANR	615690	CompoundStatement		274:27:7492:7492	614238	1					
ANR	615691	ExpressionStatement	"printFunctionCommands ( core , current_function , NULL )"	796:7:20547:20599	614238	0	True				
ANR	615692	CallExpression	"printFunctionCommands ( core , current_function , NULL )"		614238	0					
ANR	615693	Callee	printFunctionCommands		614238	0					
ANR	615694	Identifier	printFunctionCommands		614238	0					
ANR	615695	ArgumentList	core		614238	1					
ANR	615696	Argument	core		614238	0					
ANR	615697	Identifier	core		614238	0					
ANR	615698	Argument	current_function		614238	1					
ANR	615699	Identifier	current_function		614238	0					
ANR	615700	Argument	NULL		614238	2					
ANR	615701	Identifier	NULL		614238	0					
ANR	615702	ElseStatement	else		614238	0					
ANR	615703	CompoundStatement		277:11:7574:7574	614238	0					
ANR	615704	ExpressionStatement	"createFunction ( core , current_function , NULL )"	799:7:20629:20674	614238	0	True				
ANR	615705	CallExpression	"createFunction ( core , current_function , NULL )"		614238	0					
ANR	615706	Callee	createFunction		614238	0					
ANR	615707	Identifier	createFunction		614238	0					
ANR	615708	ArgumentList	core		614238	1					
ANR	615709	Argument	core		614238	0					
ANR	615710	Identifier	core		614238	0					
ANR	615711	Argument	current_function		614238	1					
ANR	615712	Identifier	current_function		614238	0					
ANR	615713	Argument	NULL		614238	2					
ANR	615714	Identifier	NULL		614238	0					
ANR	615715	ExpressionStatement	fcnFree ( current_function )	801:6:20690:20716	614238	1	True				
ANR	615716	CallExpression	fcnFree ( current_function )		614238	0					
ANR	615717	Callee	fcnFree		614238	0					
ANR	615718	Identifier	fcnFree		614238	0					
ANR	615719	ArgumentList	current_function		614238	1					
ANR	615720	Argument	current_function		614238	0					
ANR	615721	Identifier	current_function		614238	0					
ANR	615722	ExpressionStatement	r_stack_free ( stack )	802:6:20724:20744	614238	2	True				
ANR	615723	CallExpression	r_stack_free ( stack )		614238	0					
ANR	615724	Callee	r_stack_free		614238	0					
ANR	615725	Identifier	r_stack_free		614238	0					
ANR	615726	ArgumentList	stack		614238	1					
ANR	615727	Argument	stack		614238	0					
ANR	615728	Identifier	stack		614238	0					
ANR	615729	BreakStatement	break ;	803:6:20752:20757	614238	3	True				
ANR	615730	ExpressionStatement	fcnFree ( current_function )	806:4:20776:20802	614238	1	True				
ANR	615731	CallExpression	fcnFree ( current_function )		614238	0					
ANR	615732	Callee	fcnFree		614238	0					
ANR	615733	Identifier	fcnFree		614238	0					
ANR	615734	ArgumentList	current_function		614238	1					
ANR	615735	Argument	current_function		614238	0					
ANR	615736	Identifier	current_function		614238	0					
ANR	615737	ExpressionStatement	r_stack_free ( stack )	808:3:20812:20832	614238	8	True				
ANR	615738	CallExpression	r_stack_free ( stack )		614238	0					
ANR	615739	Callee	r_stack_free		614238	0					
ANR	615740	Identifier	r_stack_free		614238	0					
ANR	615741	ArgumentList	stack		614238	1					
ANR	615742	Argument	stack		614238	0					
ANR	615743	Identifier	stack		614238	0					
ANR	615744	ExpressionStatement	sdb_free ( sdb )	812:1:20843:20857	614238	39	True				
ANR	615745	CallExpression	sdb_free ( sdb )		614238	0					
ANR	615746	Callee	sdb_free		614238	0					
ANR	615747	Identifier	sdb_free		614238	0					
ANR	615748	ArgumentList	sdb		614238	1					
ANR	615749	Argument	sdb		614238	0					
ANR	615750	Identifier	sdb		614238	0					
ANR	615751	ExpressionStatement	r_list_free ( result )	813:1:20860:20880	614238	40	True				
ANR	615752	CallExpression	r_list_free ( result )		614238	0					
ANR	615753	Callee	r_list_free		614238	0					
ANR	615754	Identifier	r_list_free		614238	0					
ANR	615755	ArgumentList	result		614238	1					
ANR	615756	Argument	result		614238	0					
ANR	615757	Identifier	result		614238	0					
ANR	615758	ExpressionStatement	r_list_free ( block_list )	814:1:20883:20907	614238	41	True				
ANR	615759	CallExpression	r_list_free ( block_list )		614238	0					
ANR	615760	Callee	r_list_free		614238	0					
ANR	615761	Identifier	r_list_free		614238	0					
ANR	615762	ArgumentList	block_list		614238	1					
ANR	615763	Argument	block_list		614238	0					
ANR	615764	Identifier	block_list		614238	0					
ANR	615765	ReturnStatement	return true ;	815:1:20910:20921	614238	42	True				
ANR	615766	Identifier	true		614238	0					
ANR	615767	ReturnType	R_API bool		614238	1					
ANR	615768	Identifier	core_anal_bbs_range		614238	2					
ANR	615769	ParameterList	"RCore * core , const char * input"		614238	3					
ANR	615770	Parameter	RCore * core	522:32:13013:13023	614238	0	True				
ANR	615771	ParameterType	RCore *		614238	0					
ANR	615772	Identifier	core		614238	1					
ANR	615773	Parameter	const char * input	522:45:13026:13042	614238	1	True				
ANR	615774	ParameterType	const char *		614238	0					
ANR	615775	Identifier	input		614238	1					
ANR	615776	CFGEntryNode	ENTRY		614238		True				
ANR	615777	CFGExitNode	EXIT		614238		True				
ANR	615778	CFGErrorNode	ERROR		614238		True				
ANR	615779	Symbol	* x		614238						
ANR	615780	Symbol	stack		614238						
ANR	615781	Symbol	block -> start		614238						
ANR	615782	Symbol	* op		614238						
ANR	615783	Symbol	r_stack_push		614238						
ANR	615784	Symbol	op -> mnemonic		614238						
ANR	615785	Symbol	cur -> jump		614238						
ANR	615786	Symbol	* input		614238						
ANR	615787	Symbol	core -> offset		614238						
ANR	615788	Symbol	* lista		614238						
ANR	615789	Symbol	bFound		614238						
ANR	615790	Symbol	r_core_anal_op		614238						
ANR	615791	Symbol	b_start		614238						
ANR	615792	Symbol	next_block -> reached		614238						
ANR	615793	Symbol	r_list_pop		614238						
ANR	615794	Symbol	block -> jump		614238						
ANR	615795	Symbol	* cur		614238						
ANR	615796	Symbol	cur -> fail		614238						
ANR	615797	Symbol	r_stack_pop		614238						
ANR	615798	Symbol	block		614238						
ANR	615799	Symbol	core -> num		614238						
ANR	615800	Symbol	next_block -> type		614238						
ANR	615801	Symbol	block -> type		614238						
ANR	615802	Symbol	jump		614238						
ANR	615803	Symbol	core -> blocksize		614238						
ANR	615804	Symbol	lista		614238						
ANR	615805	Symbol	* block_list		614238						
ANR	615806	Symbol	next_block -> fail		614238						
ANR	615807	Symbol	r_io_is_valid_offset		614238						
ANR	615808	Symbol	NULL		614238						
ANR	615809	Symbol	r_list_newf		614238						
ANR	615810	Symbol	op -> type		614238						
ANR	615811	Symbol	iter		614238						
ANR	615812	Symbol	* next_block		614238						
ANR	615813	Symbol	block -> end		614238						
ANR	615814	Symbol	next_block -> jump		614238						
ANR	615815	Symbol	sdb		614238						
ANR	615816	Symbol	core		614238						
ANR	615817	Symbol	input		614238						
ANR	615818	Symbol	fail		614238						
ANR	615819	Symbol	cur -> end		614238						
ANR	615820	Symbol	cur -> score		614238						
ANR	615821	Symbol	size		614238						
ANR	615822	Symbol	R_ANAL_OP_MASK_DISASM		614238						
ANR	615823	Symbol	r_config_get_i		614238						
ANR	615824	Symbol	true		614238						
ANR	615825	Symbol	block -> fail		614238						
ANR	615826	Symbol	invalid_instruction_barrier		614238						
ANR	615827	Symbol	END		614238						
ANR	615828	Symbol	block_list		614238						
ANR	615829	Symbol	* op -> mnemonic		614238						
ANR	615830	Symbol	fcnNew		614238						
ANR	615831	Symbol	idx		614238						
ANR	615832	Symbol	checkFunction		614238						
ANR	615833	Symbol	current_function -> size		614238						
ANR	615834	Symbol	cur		614238						
ANR	615835	Symbol	CALL		614238						
ANR	615836	Symbol	block_score		614238						
ANR	615837	Symbol	r_stack_new		614238						
ANR	615838	Symbol	* core		614238						
ANR	615839	Symbol	block -> reached		614238						
ANR	615840	Symbol	R_ANAL_OP_MASK_BASIC		614238						
ANR	615841	Symbol	r_num_math		614238						
ANR	615842	Symbol	* * op		614238						
ANR	615843	Symbol	result		614238						
ANR	615844	Symbol	r_cons_is_breaked		614238						
ANR	615845	Symbol	core -> io		614238						
ANR	615846	Symbol	current_function -> addr		614238						
ANR	615847	Symbol	r_list_iter_get_data		614238						
ANR	615848	Symbol	op -> jump		614238						
ANR	615849	Symbol	block_list -> length		614238						
ANR	615850	Symbol	* current_function		614238						
ANR	615851	Symbol	UT64_MAX		614238						
ANR	615852	Symbol	free		614238						
ANR	615853	Symbol	next_block -> end		614238						
ANR	615854	Symbol	r_stack_is_empty		614238						
ANR	615855	Symbol	block_list -> tail		614238						
ANR	615856	Symbol	core -> config		614238						
ANR	615857	Symbol	sdb_num_get		614238						
ANR	615858	Symbol	op		614238						
ANR	615859	Symbol	sdb_new0		614238						
ANR	615860	Symbol	debug		614238						
ANR	615861	Symbol	next_block		614238						
ANR	615862	Symbol	cur -> start		614238						
ANR	615863	Symbol	false		614238						
ANR	615864	Symbol	start		614238						
ANR	615865	Symbol	Fhandled		614238						
ANR	615866	Symbol	* block		614238						
ANR	615867	Symbol	bbCMP		614238						
ANR	615868	Symbol	x		614238						
ANR	615869	Symbol	op -> size		614238						
ANR	615870	Symbol	current_function		614238						
ANR	615871	Symbol	NORMAL		614238						
ANR	615872	Symbol	next_block -> start		614238						
ANR	615873	Symbol	r_list_new		614238						
