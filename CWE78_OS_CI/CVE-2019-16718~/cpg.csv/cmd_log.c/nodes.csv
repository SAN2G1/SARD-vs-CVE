command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	937927	File	data/converged/CVE-2019-16718~_radare2/cmd_log.c								
ANR	937928	DeclStmt									
ANR	937929	Decl							const char	const char * [ ]	help_msg_L
ANR	937930	DeclStmt									
ANR	937931	Decl							const char	const char * [ ]	help_msg_T
ANR	937932	Function	cmd_log_init	47:0:1626:1734							
ANR	937933	FunctionDef	cmd_log_init (RCore * core)		937932	0					
ANR	937934	CompoundStatement		47:38:1664:1734	937932	0					
ANR	937935	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , L )"	48:1:1667:1698	937932	0	True				
ANR	937936	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , L )"		937932	0					
ANR	937937	Callee	DEFINE_CMD_DESCRIPTOR		937932	0					
ANR	937938	Identifier	DEFINE_CMD_DESCRIPTOR		937932	0					
ANR	937939	ArgumentList	core		937932	1					
ANR	937940	Argument	core		937932	0					
ANR	937941	Identifier	core		937932	0					
ANR	937942	Argument	L		937932	1					
ANR	937943	Identifier	L		937932	0					
ANR	937944	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , T )"	49:1:1701:1732	937932	1	True				
ANR	937945	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , T )"		937932	0					
ANR	937946	Callee	DEFINE_CMD_DESCRIPTOR		937932	0					
ANR	937947	Identifier	DEFINE_CMD_DESCRIPTOR		937932	0					
ANR	937948	ArgumentList	core		937932	1					
ANR	937949	Argument	core		937932	0					
ANR	937950	Identifier	core		937932	0					
ANR	937951	Argument	T		937932	1					
ANR	937952	Identifier	T		937932	0					
ANR	937953	ReturnType	static void		937932	1					
ANR	937954	Identifier	cmd_log_init		937932	2					
ANR	937955	ParameterList	RCore * core		937932	3					
ANR	937956	Parameter	RCore * core	47:25:1651:1661	937932	0	True				
ANR	937957	ParameterType	RCore *		937932	0					
ANR	937958	Identifier	core		937932	1					
ANR	937959	CFGEntryNode	ENTRY		937932		True				
ANR	937960	CFGExitNode	EXIT		937932		True				
ANR	937961	Symbol	core		937932						
ANR	937962	Symbol	T		937932						
ANR	937963	Symbol	L		937932						
ANR	937964	Function	screenlock	52:0:1737:2890							
ANR	937965	FunctionDef	screenlock (RCore * core)		937964	0					
ANR	937966	CompoundStatement		52:36:1773:2890	937964	0					
ANR	937967	Statement	char	54:1:1833:1836	937964	0	True				
ANR	937968	Statement	*	54:6:1838:1838	937964	1	True				
ANR	937969	Statement	pass	54:7:1839:1842	937964	2	True				
ANR	937970	Statement	=	54:12:1844:1844	937964	3	True				
ANR	937971	Statement	r_cons_password	54:14:1846:1860	937964	4	True				
ANR	937972	Statement	(	54:30:1862:1862	937964	5	True				
ANR	937973	Statement	Color_INVERT	54:31:1863:1874	937964	6	True				
ANR	937974	Statement	"""Enter new password:"""	54:44:1876:1896	937964	7	True				
ANR	937975	Statement	Color_INVERT_RESET	54:65:1897:1914	937964	8	True				
ANR	937976	Statement	)	54:83:1915:1915	937964	9	True				
ANR	937977	ExpressionStatement		54:84:1916:1916	937964	10	True				
ANR	937978	IfStatement	if ( ! pass || ! * pass )		937964	11					
ANR	937979	Condition	! pass || ! * pass	55:5:1923:1937	937964	0	True				
ANR	937980	OrExpression	! pass || ! * pass		937964	0		||			
ANR	937981	UnaryOperationExpression	! pass		937964	0					
ANR	937982	UnaryOperator	!		937964	0					
ANR	937983	Identifier	pass		937964	1					
ANR	937984	UnaryOperationExpression	! * pass		937964	1					
ANR	937985	UnaryOperator	!		937964	0					
ANR	937986	UnaryOperationExpression	* pass		937964	1					
ANR	937987	UnaryOperator	*		937964	0					
ANR	937988	Identifier	pass		937964	1					
ANR	937989	CompoundStatement		4:22:166:166	937964	1					
ANR	937990	ReturnStatement	return ;	56:2:1944:1950	937964	0	True				
ANR	937991	Statement	char	58:1:1956:1959	937964	12	True				
ANR	937992	Statement	*	58:6:1961:1961	937964	13	True				
ANR	937993	Statement	again	58:7:1962:1966	937964	14	True				
ANR	937994	Statement	=	58:13:1968:1968	937964	15	True				
ANR	937995	Statement	r_cons_password	58:15:1970:1984	937964	16	True				
ANR	937996	Statement	(	58:31:1986:1986	937964	17	True				
ANR	937997	Statement	Color_INVERT	58:32:1987:1998	937964	18	True				
ANR	937998	Statement	"""Type it again:"""	58:45:2000:2015	937964	19	True				
ANR	937999	Statement	Color_INVERT_RESET	58:61:2016:2033	937964	20	True				
ANR	938000	Statement	)	58:79:2034:2034	937964	21	True				
ANR	938001	ExpressionStatement		58:80:2035:2035	937964	22	True				
ANR	938002	IfStatement	if ( ! again || ! * again )		937964	23					
ANR	938003	Condition	! again || ! * again	59:5:2042:2058	937964	0	True				
ANR	938004	OrExpression	! again || ! * again		937964	0		||			
ANR	938005	UnaryOperationExpression	! again		937964	0					
ANR	938006	UnaryOperator	!		937964	0					
ANR	938007	Identifier	again		937964	1					
ANR	938008	UnaryOperationExpression	! * again		937964	1					
ANR	938009	UnaryOperator	!		937964	0					
ANR	938010	UnaryOperationExpression	* again		937964	1					
ANR	938011	UnaryOperator	*		937964	0					
ANR	938012	Identifier	again		937964	1					
ANR	938013	CompoundStatement		8:24:287:287	937964	1					
ANR	938014	ReturnStatement	return ;	60:2:2065:2071	937964	0	True				
ANR	938015	IfStatement	"if ( strcmp ( pass , again ) )"		937964	24					
ANR	938016	Condition	"strcmp ( pass , again )"	62:5:2081:2100	937964	0	True				
ANR	938017	CallExpression	"strcmp ( pass , again )"		937964	0					
ANR	938018	Callee	strcmp		937964	0					
ANR	938019	Identifier	strcmp		937964	0					
ANR	938020	ArgumentList	pass		937964	1					
ANR	938021	Argument	pass		937964	0					
ANR	938022	Identifier	pass		937964	0					
ANR	938023	Argument	again		937964	1					
ANR	938024	Identifier	again		937964	0					
ANR	938025	CompoundStatement		11:27:329:329	937964	1					
ANR	938026	ExpressionStatement	"eprintf ( ""Password mismatch!\\n"" )"	63:2:2107:2139	937964	0	True				
ANR	938027	CallExpression	"eprintf ( ""Password mismatch!\\n"" )"		937964	0					
ANR	938028	Callee	eprintf		937964	0					
ANR	938029	Identifier	eprintf		937964	0					
ANR	938030	ArgumentList	"""Password mismatch!\\n"""		937964	1					
ANR	938031	Argument	"""Password mismatch!\\n"""		937964	0					
ANR	938032	PrimaryExpression	"""Password mismatch!\\n"""		937964	0					
ANR	938033	ReturnStatement	return ;	64:2:2143:2149	937964	1	True				
ANR	938034	IdentifierDeclStatement	bool running = true ;	66:1:2155:2174	937964	25	True				
ANR	938035	IdentifierDecl	running = true		937964	0					
ANR	938036	IdentifierDeclType	bool		937964	0					
ANR	938037	Identifier	running		937964	1					
ANR	938038	AssignmentExpression	running = true		937964	2		=			
ANR	938039	Identifier	true		937964	0					
ANR	938040	Identifier	true		937964	1					
ANR	938041	ExpressionStatement	r_cons_clear_buffer ( )	67:1:2177:2199	937964	26	True				
ANR	938042	CallExpression	r_cons_clear_buffer ( )		937964	0					
ANR	938043	Callee	r_cons_clear_buffer		937964	0					
ANR	938044	Identifier	r_cons_clear_buffer		937964	0					
ANR	938045	ArgumentList			937964	1					
ANR	938046	IdentifierDeclStatement	ut64 begin = r_sys_now ( ) ;	68:1:2202:2227	937964	27	True				
ANR	938047	IdentifierDecl	begin = r_sys_now ( )		937964	0					
ANR	938048	IdentifierDeclType	ut64		937964	0					
ANR	938049	Identifier	begin		937964	1					
ANR	938050	AssignmentExpression	begin = r_sys_now ( )		937964	2		=			
ANR	938051	Identifier	begin		937964	0					
ANR	938052	CallExpression	r_sys_now ( )		937964	1					
ANR	938053	Callee	r_sys_now		937964	0					
ANR	938054	Identifier	r_sys_now		937964	0					
ANR	938055	ArgumentList			937964	1					
ANR	938056	IdentifierDeclStatement	ut64 last = UT64_MAX ;	69:1:2230:2250	937964	28	True				
ANR	938057	IdentifierDecl	last = UT64_MAX		937964	0					
ANR	938058	IdentifierDeclType	ut64		937964	0					
ANR	938059	Identifier	last		937964	1					
ANR	938060	AssignmentExpression	last = UT64_MAX		937964	2		=			
ANR	938061	Identifier	UT64_MAX		937964	0					
ANR	938062	Identifier	UT64_MAX		937964	1					
ANR	938063	IdentifierDeclStatement	ut64 tries = 0 ;	70:1:2253:2267	937964	29	True				
ANR	938064	IdentifierDecl	tries = 0		937964	0					
ANR	938065	IdentifierDeclType	ut64		937964	0					
ANR	938066	Identifier	tries		937964	1					
ANR	938067	AssignmentExpression	tries = 0		937964	2		=			
ANR	938068	Identifier	tries		937964	0					
ANR	938069	PrimaryExpression	0		937964	1					
ANR	938070	DoStatement	do		937964	30					
ANR	938071	CompoundStatement		38:2:974:1001	937964	0					
ANR	938072	ExpressionStatement	r_cons_clear00 ( )	72:2:2277:2294	937964	0	True				
ANR	938073	CallExpression	r_cons_clear00 ( )		937964	0					
ANR	938074	Callee	r_cons_clear00		937964	0					
ANR	938075	Identifier	r_cons_clear00		937964	0					
ANR	938076	ArgumentList			937964	1					
ANR	938077	ExpressionStatement	"r_cons_printf ( ""Retries: %d\\n"" , tries )"	73:2:2298:2336	937964	1	True				
ANR	938078	CallExpression	"r_cons_printf ( ""Retries: %d\\n"" , tries )"		937964	0					
ANR	938079	Callee	r_cons_printf		937964	0					
ANR	938080	Identifier	r_cons_printf		937964	0					
ANR	938081	ArgumentList	"""Retries: %d\\n"""		937964	1					
ANR	938082	Argument	"""Retries: %d\\n"""		937964	0					
ANR	938083	PrimaryExpression	"""Retries: %d\\n"""		937964	0					
ANR	938084	Argument	tries		937964	1					
ANR	938085	Identifier	tries		937964	0					
ANR	938086	ExpressionStatement	"r_cons_printf ( ""Locked ts: %s\\n"" , r_time_to_string ( begin ) )"	74:2:2340:2399	937964	2	True				
ANR	938087	CallExpression	"r_cons_printf ( ""Locked ts: %s\\n"" , r_time_to_string ( begin ) )"		937964	0					
ANR	938088	Callee	r_cons_printf		937964	0					
ANR	938089	Identifier	r_cons_printf		937964	0					
ANR	938090	ArgumentList	"""Locked ts: %s\\n"""		937964	1					
ANR	938091	Argument	"""Locked ts: %s\\n"""		937964	0					
ANR	938092	PrimaryExpression	"""Locked ts: %s\\n"""		937964	0					
ANR	938093	Argument	r_time_to_string ( begin )		937964	1					
ANR	938094	CallExpression	r_time_to_string ( begin )		937964	0					
ANR	938095	Callee	r_time_to_string		937964	0					
ANR	938096	Identifier	r_time_to_string		937964	0					
ANR	938097	ArgumentList	begin		937964	1					
ANR	938098	Argument	begin		937964	0					
ANR	938099	Identifier	begin		937964	0					
ANR	938100	IfStatement	if ( last != UT64_MAX )		937964	3					
ANR	938101	Condition	last != UT64_MAX	75:6:2407:2422	937964	0	True				
ANR	938102	EqualityExpression	last != UT64_MAX		937964	0		!=			
ANR	938103	Identifier	last		937964	0					
ANR	938104	Identifier	UT64_MAX		937964	1					
ANR	938105	CompoundStatement		24:24:651:651	937964	1					
ANR	938106	ExpressionStatement	"r_cons_printf ( ""Last try: %s\\n"" , r_time_to_string ( last ) )"	76:3:2430:2487	937964	0	True				
ANR	938107	CallExpression	"r_cons_printf ( ""Last try: %s\\n"" , r_time_to_string ( last ) )"		937964	0					
ANR	938108	Callee	r_cons_printf		937964	0					
ANR	938109	Identifier	r_cons_printf		937964	0					
ANR	938110	ArgumentList	"""Last try: %s\\n"""		937964	1					
ANR	938111	Argument	"""Last try: %s\\n"""		937964	0					
ANR	938112	PrimaryExpression	"""Last try: %s\\n"""		937964	0					
ANR	938113	Argument	r_time_to_string ( last )		937964	1					
ANR	938114	CallExpression	r_time_to_string ( last )		937964	0					
ANR	938115	Callee	r_time_to_string		937964	0					
ANR	938116	Identifier	r_time_to_string		937964	0					
ANR	938117	ArgumentList	last		937964	1					
ANR	938118	Argument	last		937964	0					
ANR	938119	Identifier	last		937964	0					
ANR	938120	ExpressionStatement	r_cons_newline ( )	78:2:2495:2512	937964	4	True				
ANR	938121	CallExpression	r_cons_newline ( )		937964	0					
ANR	938122	Callee	r_cons_newline		937964	0					
ANR	938123	Identifier	r_cons_newline		937964	0					
ANR	938124	ArgumentList			937964	1					
ANR	938125	ExpressionStatement	r_cons_flush ( )	79:2:2516:2531	937964	5	True				
ANR	938126	CallExpression	r_cons_flush ( )		937964	0					
ANR	938127	Callee	r_cons_flush		937964	0					
ANR	938128	Identifier	r_cons_flush		937964	0					
ANR	938129	ArgumentList			937964	1					
ANR	938130	IdentifierDeclStatement	"char * msg = r_cons_password ( ""radare2 password: "" ) ;"	80:2:2535:2585	937964	6	True				
ANR	938131	IdentifierDecl	"* msg = r_cons_password ( ""radare2 password: "" )"		937964	0					
ANR	938132	IdentifierDeclType	char *		937964	0					
ANR	938133	Identifier	msg		937964	1					
ANR	938134	AssignmentExpression	"* msg = r_cons_password ( ""radare2 password: "" )"		937964	2		=			
ANR	938135	Identifier	msg		937964	0					
ANR	938136	CallExpression	"r_cons_password ( ""radare2 password: "" )"		937964	1					
ANR	938137	Callee	r_cons_password		937964	0					
ANR	938138	Identifier	r_cons_password		937964	0					
ANR	938139	ArgumentList	"""radare2 password: """		937964	1					
ANR	938140	Argument	"""radare2 password: """		937964	0					
ANR	938141	PrimaryExpression	"""radare2 password: """		937964	0					
ANR	938142	IfStatement	"if ( msg && ! strcmp ( msg , pass ) )"		937964	7					
ANR	938143	Condition	"msg && ! strcmp ( msg , pass )"	81:6:2593:2618	937964	0	True				
ANR	938144	AndExpression	"msg && ! strcmp ( msg , pass )"		937964	0		&&			
ANR	938145	Identifier	msg		937964	0					
ANR	938146	UnaryOperationExpression	"! strcmp ( msg , pass )"		937964	1					
ANR	938147	UnaryOperator	!		937964	0					
ANR	938148	CallExpression	"strcmp ( msg , pass )"		937964	1					
ANR	938149	Callee	strcmp		937964	0					
ANR	938150	Identifier	strcmp		937964	0					
ANR	938151	ArgumentList	msg		937964	1					
ANR	938152	Argument	msg		937964	0					
ANR	938153	Identifier	msg		937964	0					
ANR	938154	Argument	pass		937964	1					
ANR	938155	Identifier	pass		937964	0					
ANR	938156	CompoundStatement		30:34:847:847	937964	1					
ANR	938157	ExpressionStatement	running = false	82:3:2626:2641	937964	0	True				
ANR	938158	AssignmentExpression	running = false		937964	0		=			
ANR	938159	Identifier	running		937964	0					
ANR	938160	Identifier	false		937964	1					
ANR	938161	ElseStatement	else		937964	0					
ANR	938162	CompoundStatement		32:9:878:878	937964	0					
ANR	938163	ExpressionStatement	"eprintf ( ""\\nInvalid password.\\n"" )"	84:3:2657:2690	937964	0	True				
ANR	938164	CallExpression	"eprintf ( ""\\nInvalid password.\\n"" )"		937964	0					
ANR	938165	Callee	eprintf		937964	0					
ANR	938166	Identifier	eprintf		937964	0					
ANR	938167	ArgumentList	"""\\nInvalid password.\\n"""		937964	1					
ANR	938168	Argument	"""\\nInvalid password.\\n"""		937964	0					
ANR	938169	PrimaryExpression	"""\\nInvalid password.\\n"""		937964	0					
ANR	938170	ExpressionStatement	last = r_sys_now ( )	85:3:2695:2714	937964	1	True				
ANR	938171	AssignmentExpression	last = r_sys_now ( )		937964	0		=			
ANR	938172	Identifier	last		937964	0					
ANR	938173	CallExpression	r_sys_now ( )		937964	1					
ANR	938174	Callee	r_sys_now		937964	0					
ANR	938175	Identifier	r_sys_now		937964	0					
ANR	938176	ArgumentList			937964	1					
ANR	938177	ExpressionStatement	tries ++	86:3:2719:2726	937964	2	True				
ANR	938178	PostIncDecOperationExpression	tries ++		937964	0					
ANR	938179	Identifier	tries		937964	0					
ANR	938180	IncDec	++		937964	1					
ANR	938181	ExpressionStatement	free ( msg )	88:2:2734:2744	937964	8	True				
ANR	938182	CallExpression	free ( msg )		937964	0					
ANR	938183	Callee	free		937964	0					
ANR	938184	Identifier	free		937964	0					
ANR	938185	ArgumentList	msg		937964	1					
ANR	938186	Argument	msg		937964	0					
ANR	938187	Identifier	msg		937964	0					
ANR	938188	IdentifierDeclStatement	int n = r_num_rand ( 10 ) + 1 ;	89:2:2748:2775	937964	9	True				
ANR	938189	IdentifierDecl	n = r_num_rand ( 10 ) + 1		937964	0					
ANR	938190	IdentifierDeclType	int		937964	0					
ANR	938191	Identifier	n		937964	1					
ANR	938192	AssignmentExpression	n = r_num_rand ( 10 ) + 1		937964	2		=			
ANR	938193	Identifier	n		937964	0					
ANR	938194	AdditiveExpression	r_num_rand ( 10 ) + 1		937964	1		+			
ANR	938195	CallExpression	r_num_rand ( 10 )		937964	0					
ANR	938196	Callee	r_num_rand		937964	0					
ANR	938197	Identifier	r_num_rand		937964	0					
ANR	938198	ArgumentList	10		937964	1					
ANR	938199	Argument	10		937964	0					
ANR	938200	PrimaryExpression	10		937964	0					
ANR	938201	PrimaryExpression	1		937964	1					
ANR	938202	ExpressionStatement	r_sys_usleep ( n * 100000 )	90:2:2779:2804	937964	10	True				
ANR	938203	CallExpression	r_sys_usleep ( n * 100000 )		937964	0					
ANR	938204	Callee	r_sys_usleep		937964	0					
ANR	938205	Identifier	r_sys_usleep		937964	0					
ANR	938206	ArgumentList	n * 100000		937964	1					
ANR	938207	Argument	n * 100000		937964	0					
ANR	938208	MultiplicativeExpression	n * 100000		937964	0		*			
ANR	938209	Identifier	n		937964	0					
ANR	938210	PrimaryExpression	100000		937964	1					
ANR	938211	Condition	running	91:10:2816:2822	937964	1	True				
ANR	938212	Identifier	running		937964	0					
ANR	938213	ExpressionStatement	r_cons_set_cup ( true )	92:1:2827:2848	937964	31	True				
ANR	938214	CallExpression	r_cons_set_cup ( true )		937964	0					
ANR	938215	Callee	r_cons_set_cup		937964	0					
ANR	938216	Identifier	r_cons_set_cup		937964	0					
ANR	938217	ArgumentList	true		937964	1					
ANR	938218	Argument	true		937964	0					
ANR	938219	Identifier	true		937964	0					
ANR	938220	ExpressionStatement	free ( pass )	93:1:2851:2862	937964	32	True				
ANR	938221	CallExpression	free ( pass )		937964	0					
ANR	938222	Callee	free		937964	0					
ANR	938223	Identifier	free		937964	0					
ANR	938224	ArgumentList	pass		937964	1					
ANR	938225	Argument	pass		937964	0					
ANR	938226	Identifier	pass		937964	0					
ANR	938227	ExpressionStatement	"eprintf ( ""Unlocked!\\n"" )"	94:1:2865:2888	937964	33	True				
ANR	938228	CallExpression	"eprintf ( ""Unlocked!\\n"" )"		937964	0					
ANR	938229	Callee	eprintf		937964	0					
ANR	938230	Identifier	eprintf		937964	0					
ANR	938231	ArgumentList	"""Unlocked!\\n"""		937964	1					
ANR	938232	Argument	"""Unlocked!\\n"""		937964	0					
ANR	938233	PrimaryExpression	"""Unlocked!\\n"""		937964	0					
ANR	938234	ReturnType	static void		937964	1					
ANR	938235	Identifier	screenlock		937964	2					
ANR	938236	ParameterList	RCore * core		937964	3					
ANR	938237	Parameter	RCore * core	52:23:1760:1770	937964	0	True				
ANR	938238	ParameterType	RCore *		937964	0					
ANR	938239	Identifier	core		937964	1					
ANR	938240	CFGEntryNode	ENTRY		937964		True				
ANR	938241	CFGExitNode	EXIT		937964		True				
ANR	938242	Symbol	strcmp		937964						
ANR	938243	Symbol	msg		937964						
ANR	938244	Symbol	tries		937964						
ANR	938245	Symbol	last		937964						
ANR	938246	Symbol	pass		937964						
ANR	938247	Symbol	* pass		937964						
ANR	938248	Symbol	r_sys_now		937964						
ANR	938249	Symbol	again		937964						
ANR	938250	Symbol	false		937964						
ANR	938251	Symbol	* again		937964						
ANR	938252	Symbol	n		937964						
ANR	938253	Symbol	r_num_rand		937964						
ANR	938254	Symbol	running		937964						
ANR	938255	Symbol	core		937964						
ANR	938256	Symbol	r_time_to_string		937964						
ANR	938257	Symbol	true		937964						
ANR	938258	Symbol	r_cons_password		937964						
ANR	938259	Symbol	UT64_MAX		937964						
ANR	938260	Symbol	begin		937964						
ANR	938261	Function	textlog_chat	97:0:2893:4426							
ANR	938262	FunctionDef	textlog_chat (RCore * core)		938261	0					
ANR	938263	CompoundStatement		97:37:2930:4426	938261	0					
ANR	938264	IdentifierDeclStatement	char prompt [ 64 ] ;	98:1:2933:2948	938261	0	True				
ANR	938265	IdentifierDecl	prompt [ 64 ]		938261	0					
ANR	938266	IdentifierDeclType	char [ 64 ]		938261	0					
ANR	938267	Identifier	prompt		938261	1					
ANR	938268	PrimaryExpression	64		938261	2					
ANR	938269	IdentifierDeclStatement	char buf [ 1024 ] ;	99:1:2951:2965	938261	1	True				
ANR	938270	IdentifierDecl	buf [ 1024 ]		938261	0					
ANR	938271	IdentifierDeclType	char [ 1024 ]		938261	0					
ANR	938272	Identifier	buf		938261	1					
ANR	938273	PrimaryExpression	1024		938261	2					
ANR	938274	IdentifierDeclStatement	int lastmsg = 0 ;	100:1:2968:2983	938261	2	True				
ANR	938275	IdentifierDecl	lastmsg = 0		938261	0					
ANR	938276	IdentifierDeclType	int		938261	0					
ANR	938277	Identifier	lastmsg		938261	1					
ANR	938278	AssignmentExpression	lastmsg = 0		938261	2		=			
ANR	938279	Identifier	lastmsg		938261	0					
ANR	938280	PrimaryExpression	0		938261	1					
ANR	938281	IdentifierDeclStatement	"const char * me = r_config_get ( core -> config , ""cfg.user"" ) ;"	101:1:2986:3042	938261	3	True				
ANR	938282	IdentifierDecl	"* me = r_config_get ( core -> config , ""cfg.user"" )"		938261	0					
ANR	938283	IdentifierDeclType	const char *		938261	0					
ANR	938284	Identifier	me		938261	1					
ANR	938285	AssignmentExpression	"* me = r_config_get ( core -> config , ""cfg.user"" )"		938261	2		=			
ANR	938286	Identifier	me		938261	0					
ANR	938287	CallExpression	"r_config_get ( core -> config , ""cfg.user"" )"		938261	1					
ANR	938288	Callee	r_config_get		938261	0					
ANR	938289	Identifier	r_config_get		938261	0					
ANR	938290	ArgumentList	core -> config		938261	1					
ANR	938291	Argument	core -> config		938261	0					
ANR	938292	PtrMemberAccess	core -> config		938261	0					
ANR	938293	Identifier	core		938261	0					
ANR	938294	Identifier	config		938261	1					
ANR	938295	Argument	"""cfg.user"""		938261	1					
ANR	938296	PrimaryExpression	"""cfg.user"""		938261	0					
ANR	938297	IdentifierDeclStatement	char msg [ 2048 ] ;	102:1:3045:3059	938261	4	True				
ANR	938298	IdentifierDecl	msg [ 2048 ]		938261	0					
ANR	938299	IdentifierDeclType	char [ 2048 ]		938261	0					
ANR	938300	Identifier	msg		938261	1					
ANR	938301	PrimaryExpression	2048		938261	2					
ANR	938302	ExpressionStatement	"eprintf ( ""Type '/help' for commands:\\n"" )"	104:1:3063:3103	938261	5	True				
ANR	938303	CallExpression	"eprintf ( ""Type '/help' for commands:\\n"" )"		938261	0					
ANR	938304	Callee	eprintf		938261	0					
ANR	938305	Identifier	eprintf		938261	0					
ANR	938306	ArgumentList	"""Type '/help' for commands:\\n"""		938261	1					
ANR	938307	Argument	"""Type '/help' for commands:\\n"""		938261	0					
ANR	938308	PrimaryExpression	"""Type '/help' for commands:\\n"""		938261	0					
ANR	938309	ExpressionStatement	"snprintf ( prompt , sizeof ( prompt ) - 1 , ""[%s]> "" , me )"	105:1:3106:3158	938261	6	True				
ANR	938310	CallExpression	"snprintf ( prompt , sizeof ( prompt ) - 1 , ""[%s]> "" , me )"		938261	0					
ANR	938311	Callee	snprintf		938261	0					
ANR	938312	Identifier	snprintf		938261	0					
ANR	938313	ArgumentList	prompt		938261	1					
ANR	938314	Argument	prompt		938261	0					
ANR	938315	Identifier	prompt		938261	0					
ANR	938316	Argument	sizeof ( prompt ) - 1		938261	1					
ANR	938317	AdditiveExpression	sizeof ( prompt ) - 1		938261	0		-			
ANR	938318	SizeofExpression	sizeof ( prompt )		938261	0					
ANR	938319	Sizeof	sizeof		938261	0					
ANR	938320	SizeofOperand	prompt		938261	1					
ANR	938321	PrimaryExpression	1		938261	1					
ANR	938322	Argument	"""[%s]> """		938261	2					
ANR	938323	PrimaryExpression	"""[%s]> """		938261	0					
ANR	938324	Argument	me		938261	3					
ANR	938325	Identifier	me		938261	0					
ANR	938326	ExpressionStatement	r_line_set_prompt ( prompt )	106:1:3161:3187	938261	7	True				
ANR	938327	CallExpression	r_line_set_prompt ( prompt )		938261	0					
ANR	938328	Callee	r_line_set_prompt		938261	0					
ANR	938329	Identifier	r_line_set_prompt		938261	0					
ANR	938330	ArgumentList	prompt		938261	1					
ANR	938331	Argument	prompt		938261	0					
ANR	938332	Identifier	prompt		938261	0					
ANR	938333	ForStatement	for ( ; ; )		938261	8					
ANR	938334	CompoundStatement		11:10:268:268	938261	0					
ANR	938335	ExpressionStatement	"r_core_log_list ( core , lastmsg , 0 , 0 )"	108:2:3203:3240	938261	0	True				
ANR	938336	CallExpression	"r_core_log_list ( core , lastmsg , 0 , 0 )"		938261	0					
ANR	938337	Callee	r_core_log_list		938261	0					
ANR	938338	Identifier	r_core_log_list		938261	0					
ANR	938339	ArgumentList	core		938261	1					
ANR	938340	Argument	core		938261	0					
ANR	938341	Identifier	core		938261	0					
ANR	938342	Argument	lastmsg		938261	1					
ANR	938343	Identifier	lastmsg		938261	0					
ANR	938344	Argument	0		938261	2					
ANR	938345	PrimaryExpression	0		938261	0					
ANR	938346	Argument	0		938261	3					
ANR	938347	PrimaryExpression	0		938261	0					
ANR	938348	ExpressionStatement	lastmsg = core -> log -> last	109:2:3244:3269	938261	1	True				
ANR	938349	AssignmentExpression	lastmsg = core -> log -> last		938261	0		=			
ANR	938350	Identifier	lastmsg		938261	0					
ANR	938351	PtrMemberAccess	core -> log -> last		938261	1					
ANR	938352	PtrMemberAccess	core -> log		938261	0					
ANR	938353	Identifier	core		938261	0					
ANR	938354	Identifier	log		938261	1					
ANR	938355	Identifier	last		938261	1					
ANR	938356	IfStatement	"if ( r_cons_fgets ( buf , sizeof ( buf ) - 1 , 0 , NULL ) < 0 )"		938261	2					
ANR	938357	Condition	"r_cons_fgets ( buf , sizeof ( buf ) - 1 , 0 , NULL ) < 0"	110:6:3277:3325	938261	0	True				
ANR	938358	RelationalExpression	"r_cons_fgets ( buf , sizeof ( buf ) - 1 , 0 , NULL ) < 0"		938261	0		<			
ANR	938359	CallExpression	"r_cons_fgets ( buf , sizeof ( buf ) - 1 , 0 , NULL )"		938261	0					
ANR	938360	Callee	r_cons_fgets		938261	0					
ANR	938361	Identifier	r_cons_fgets		938261	0					
ANR	938362	ArgumentList	buf		938261	1					
ANR	938363	Argument	buf		938261	0					
ANR	938364	Identifier	buf		938261	0					
ANR	938365	Argument	sizeof ( buf ) - 1		938261	1					
ANR	938366	AdditiveExpression	sizeof ( buf ) - 1		938261	0		-			
ANR	938367	SizeofExpression	sizeof ( buf )		938261	0					
ANR	938368	Sizeof	sizeof		938261	0					
ANR	938369	SizeofOperand	buf		938261	1					
ANR	938370	PrimaryExpression	1		938261	1					
ANR	938371	Argument	0		938261	2					
ANR	938372	PrimaryExpression	0		938261	0					
ANR	938373	Argument	NULL		938261	3					
ANR	938374	Identifier	NULL		938261	0					
ANR	938375	PrimaryExpression	0		938261	1					
ANR	938376	CompoundStatement		14:57:397:397	938261	1					
ANR	938377	ReturnStatement	return 1 ;	111:3:3333:3341	938261	0	True				
ANR	938378	PrimaryExpression	1		938261	0					
ANR	938379	IfStatement	if ( ! * buf )		938261	3					
ANR	938380	Condition	! * buf	113:6:3353:3357	938261	0	True				
ANR	938381	UnaryOperationExpression	! * buf		938261	0					
ANR	938382	UnaryOperator	!		938261	0					
ANR	938383	UnaryOperationExpression	* buf		938261	1					
ANR	938384	UnaryOperator	*		938261	0					
ANR	938385	Identifier	buf		938261	1					
ANR	938386	CompoundStatement		17:13:429:429	938261	1					
ANR	938387	ContinueStatement	continue ;	114:3:3365:3373	938261	0	True				
ANR	938388	IfStatement	"if ( ! strcmp ( buf , ""/help"" ) )"		938261	4					
ANR	938389	Condition	"! strcmp ( buf , ""/help"" )"	116:6:3385:3406	938261	0	True				
ANR	938390	UnaryOperationExpression	"! strcmp ( buf , ""/help"" )"		938261	0					
ANR	938391	UnaryOperator	!		938261	0					
ANR	938392	CallExpression	"strcmp ( buf , ""/help"" )"		938261	1					
ANR	938393	Callee	strcmp		938261	0					
ANR	938394	Identifier	strcmp		938261	0					
ANR	938395	ArgumentList	buf		938261	1					
ANR	938396	Argument	buf		938261	0					
ANR	938397	Identifier	buf		938261	0					
ANR	938398	Argument	"""/help"""		938261	1					
ANR	938399	PrimaryExpression	"""/help"""		938261	0					
ANR	938400	CompoundStatement		20:30:478:478	938261	1					
ANR	938401	ExpressionStatement	"eprintf ( ""/quit           quit the chat (same as ^D)\\n"" )"	117:3:3414:3470	938261	0	True				
ANR	938402	CallExpression	"eprintf ( ""/quit           quit the chat (same as ^D)\\n"" )"		938261	0					
ANR	938403	Callee	eprintf		938261	0					
ANR	938404	Identifier	eprintf		938261	0					
ANR	938405	ArgumentList	"""/quit           quit the chat (same as ^D)\\n"""		938261	1					
ANR	938406	Argument	"""/quit           quit the chat (same as ^D)\\n"""		938261	0					
ANR	938407	PrimaryExpression	"""/quit           quit the chat (same as ^D)\\n"""		938261	0					
ANR	938408	ExpressionStatement	"eprintf ( ""/name <nick>    set cfg.user name\\n"" )"	118:3:3475:3522	938261	1	True				
ANR	938409	CallExpression	"eprintf ( ""/name <nick>    set cfg.user name\\n"" )"		938261	0					
ANR	938410	Callee	eprintf		938261	0					
ANR	938411	Identifier	eprintf		938261	0					
ANR	938412	ArgumentList	"""/name <nick>    set cfg.user name\\n"""		938261	1					
ANR	938413	Argument	"""/name <nick>    set cfg.user name\\n"""		938261	0					
ANR	938414	PrimaryExpression	"""/name <nick>    set cfg.user name\\n"""		938261	0					
ANR	938415	ExpressionStatement	"eprintf ( ""/log            show full log\\n"" )"	119:3:3527:3570	938261	2	True				
ANR	938416	CallExpression	"eprintf ( ""/log            show full log\\n"" )"		938261	0					
ANR	938417	Callee	eprintf		938261	0					
ANR	938418	Identifier	eprintf		938261	0					
ANR	938419	ArgumentList	"""/log            show full log\\n"""		938261	1					
ANR	938420	Argument	"""/log            show full log\\n"""		938261	0					
ANR	938421	PrimaryExpression	"""/log            show full log\\n"""		938261	0					
ANR	938422	ExpressionStatement	"eprintf ( ""/clear          clear text log messages\\n"" )"	120:3:3575:3628	938261	3	True				
ANR	938423	CallExpression	"eprintf ( ""/clear          clear text log messages\\n"" )"		938261	0					
ANR	938424	Callee	eprintf		938261	0					
ANR	938425	Identifier	eprintf		938261	0					
ANR	938426	ArgumentList	"""/clear          clear text log messages\\n"""		938261	1					
ANR	938427	Argument	"""/clear          clear text log messages\\n"""		938261	0					
ANR	938428	PrimaryExpression	"""/clear          clear text log messages\\n"""		938261	0					
ANR	938429	ElseStatement	else		938261	0					
ANR	938430	IfStatement	"if ( ! strncmp ( buf , ""/name "" , 6 ) )"		938261	0					
ANR	938431	Condition	"! strncmp ( buf , ""/name "" , 6 )"	121:13:3643:3669	938261	0	True				
ANR	938432	UnaryOperationExpression	"! strncmp ( buf , ""/name "" , 6 )"		938261	0					
ANR	938433	UnaryOperator	!		938261	0					
ANR	938434	CallExpression	"strncmp ( buf , ""/name "" , 6 )"		938261	1					
ANR	938435	Callee	strncmp		938261	0					
ANR	938436	Identifier	strncmp		938261	0					
ANR	938437	ArgumentList	buf		938261	1					
ANR	938438	Argument	buf		938261	0					
ANR	938439	Identifier	buf		938261	0					
ANR	938440	Argument	"""/name """		938261	1					
ANR	938441	PrimaryExpression	"""/name """		938261	0					
ANR	938442	Argument	6		938261	2					
ANR	938443	PrimaryExpression	6		938261	0					
ANR	938444	CompoundStatement		25:42:741:741	938261	1					
ANR	938445	ExpressionStatement	"snprintf ( msg , sizeof ( msg ) - 1 , ""* '%s' is now known as '%s'"" , me , buf + 6 )"	122:3:3677:3753	938261	0	True				
ANR	938446	CallExpression	"snprintf ( msg , sizeof ( msg ) - 1 , ""* '%s' is now known as '%s'"" , me , buf + 6 )"		938261	0					
ANR	938447	Callee	snprintf		938261	0					
ANR	938448	Identifier	snprintf		938261	0					
ANR	938449	ArgumentList	msg		938261	1					
ANR	938450	Argument	msg		938261	0					
ANR	938451	Identifier	msg		938261	0					
ANR	938452	Argument	sizeof ( msg ) - 1		938261	1					
ANR	938453	AdditiveExpression	sizeof ( msg ) - 1		938261	0		-			
ANR	938454	SizeofExpression	sizeof ( msg )		938261	0					
ANR	938455	Sizeof	sizeof		938261	0					
ANR	938456	SizeofOperand	msg		938261	1					
ANR	938457	PrimaryExpression	1		938261	1					
ANR	938458	Argument	"""* '%s' is now known as '%s'"""		938261	2					
ANR	938459	PrimaryExpression	"""* '%s' is now known as '%s'"""		938261	0					
ANR	938460	Argument	me		938261	3					
ANR	938461	Identifier	me		938261	0					
ANR	938462	Argument	buf + 6		938261	4					
ANR	938463	AdditiveExpression	buf + 6		938261	0		+			
ANR	938464	Identifier	buf		938261	0					
ANR	938465	PrimaryExpression	6		938261	1					
ANR	938466	ExpressionStatement	"r_core_log_add ( core , msg )"	123:3:3758:3784	938261	1	True				
ANR	938467	CallExpression	"r_core_log_add ( core , msg )"		938261	0					
ANR	938468	Callee	r_core_log_add		938261	0					
ANR	938469	Identifier	r_core_log_add		938261	0					
ANR	938470	ArgumentList	core		938261	1					
ANR	938471	Argument	core		938261	0					
ANR	938472	Identifier	core		938261	0					
ANR	938473	Argument	msg		938261	1					
ANR	938474	Identifier	msg		938261	0					
ANR	938475	ExpressionStatement	"r_config_set ( core -> config , ""cfg.user"" , buf + 6 )"	124:3:3789:3837	938261	2	True				
ANR	938476	CallExpression	"r_config_set ( core -> config , ""cfg.user"" , buf + 6 )"		938261	0					
ANR	938477	Callee	r_config_set		938261	0					
ANR	938478	Identifier	r_config_set		938261	0					
ANR	938479	ArgumentList	core -> config		938261	1					
ANR	938480	Argument	core -> config		938261	0					
ANR	938481	PtrMemberAccess	core -> config		938261	0					
ANR	938482	Identifier	core		938261	0					
ANR	938483	Identifier	config		938261	1					
ANR	938484	Argument	"""cfg.user"""		938261	1					
ANR	938485	PrimaryExpression	"""cfg.user"""		938261	0					
ANR	938486	Argument	buf + 6		938261	2					
ANR	938487	AdditiveExpression	buf + 6		938261	0		+			
ANR	938488	Identifier	buf		938261	0					
ANR	938489	PrimaryExpression	6		938261	1					
ANR	938490	ExpressionStatement	"me = r_config_get ( core -> config , ""cfg.user"" )"	125:3:3842:3886	938261	3	True				
ANR	938491	AssignmentExpression	"me = r_config_get ( core -> config , ""cfg.user"" )"		938261	0		=			
ANR	938492	Identifier	me		938261	0					
ANR	938493	CallExpression	"r_config_get ( core -> config , ""cfg.user"" )"		938261	1					
ANR	938494	Callee	r_config_get		938261	0					
ANR	938495	Identifier	r_config_get		938261	0					
ANR	938496	ArgumentList	core -> config		938261	1					
ANR	938497	Argument	core -> config		938261	0					
ANR	938498	PtrMemberAccess	core -> config		938261	0					
ANR	938499	Identifier	core		938261	0					
ANR	938500	Identifier	config		938261	1					
ANR	938501	Argument	"""cfg.user"""		938261	1					
ANR	938502	PrimaryExpression	"""cfg.user"""		938261	0					
ANR	938503	ExpressionStatement	"snprintf ( prompt , sizeof ( prompt ) - 1 , ""[%s]> "" , me )"	126:3:3891:3943	938261	4	True				
ANR	938504	CallExpression	"snprintf ( prompt , sizeof ( prompt ) - 1 , ""[%s]> "" , me )"		938261	0					
ANR	938505	Callee	snprintf		938261	0					
ANR	938506	Identifier	snprintf		938261	0					
ANR	938507	ArgumentList	prompt		938261	1					
ANR	938508	Argument	prompt		938261	0					
ANR	938509	Identifier	prompt		938261	0					
ANR	938510	Argument	sizeof ( prompt ) - 1		938261	1					
ANR	938511	AdditiveExpression	sizeof ( prompt ) - 1		938261	0		-			
ANR	938512	SizeofExpression	sizeof ( prompt )		938261	0					
ANR	938513	Sizeof	sizeof		938261	0					
ANR	938514	SizeofOperand	prompt		938261	1					
ANR	938515	PrimaryExpression	1		938261	1					
ANR	938516	Argument	"""[%s]> """		938261	2					
ANR	938517	PrimaryExpression	"""[%s]> """		938261	0					
ANR	938518	Argument	me		938261	3					
ANR	938519	Identifier	me		938261	0					
ANR	938520	ExpressionStatement	r_line_set_prompt ( prompt )	127:3:3948:3974	938261	5	True				
ANR	938521	CallExpression	r_line_set_prompt ( prompt )		938261	0					
ANR	938522	Callee	r_line_set_prompt		938261	0					
ANR	938523	Identifier	r_line_set_prompt		938261	0					
ANR	938524	ArgumentList	prompt		938261	1					
ANR	938525	Argument	prompt		938261	0					
ANR	938526	Identifier	prompt		938261	0					
ANR	938527	ReturnStatement	return 0 ;	128:3:3979:3987	938261	6	True				
ANR	938528	PrimaryExpression	0		938261	0					
ANR	938529	ElseStatement	else		938261	0					
ANR	938530	IfStatement	"if ( ! strcmp ( buf , ""/log"" ) )"		938261	0					
ANR	938531	Condition	"! strcmp ( buf , ""/log"" )"	129:13:4002:4022	938261	0	True				
ANR	938532	UnaryOperationExpression	"! strcmp ( buf , ""/log"" )"		938261	0					
ANR	938533	UnaryOperator	!		938261	0					
ANR	938534	CallExpression	"strcmp ( buf , ""/log"" )"		938261	1					
ANR	938535	Callee	strcmp		938261	0					
ANR	938536	Identifier	strcmp		938261	0					
ANR	938537	ArgumentList	buf		938261	1					
ANR	938538	Argument	buf		938261	0					
ANR	938539	Identifier	buf		938261	0					
ANR	938540	Argument	"""/log"""		938261	1					
ANR	938541	PrimaryExpression	"""/log"""		938261	0					
ANR	938542	CompoundStatement		33:36:1094:1094	938261	1					
ANR	938543	ExpressionStatement	"r_core_log_list ( core , 0 , 0 , 0 )"	130:3:4030:4061	938261	0	True				
ANR	938544	CallExpression	"r_core_log_list ( core , 0 , 0 , 0 )"		938261	0					
ANR	938545	Callee	r_core_log_list		938261	0					
ANR	938546	Identifier	r_core_log_list		938261	0					
ANR	938547	ArgumentList	core		938261	1					
ANR	938548	Argument	core		938261	0					
ANR	938549	Identifier	core		938261	0					
ANR	938550	Argument	0		938261	1					
ANR	938551	PrimaryExpression	0		938261	0					
ANR	938552	Argument	0		938261	2					
ANR	938553	PrimaryExpression	0		938261	0					
ANR	938554	Argument	0		938261	3					
ANR	938555	PrimaryExpression	0		938261	0					
ANR	938556	ReturnStatement	return 0 ;	131:3:4066:4074	938261	1	True				
ANR	938557	PrimaryExpression	0		938261	0					
ANR	938558	ElseStatement	else		938261	0					
ANR	938559	IfStatement	"if ( ! strcmp ( buf , ""/clear"" ) )"		938261	0					
ANR	938560	Condition	"! strcmp ( buf , ""/clear"" )"	132:13:4089:4111	938261	0	True				
ANR	938561	UnaryOperationExpression	"! strcmp ( buf , ""/clear"" )"		938261	0					
ANR	938562	UnaryOperator	!		938261	0					
ANR	938563	CallExpression	"strcmp ( buf , ""/clear"" )"		938261	1					
ANR	938564	Callee	strcmp		938261	0					
ANR	938565	Identifier	strcmp		938261	0					
ANR	938566	ArgumentList	buf		938261	1					
ANR	938567	Argument	buf		938261	0					
ANR	938568	Identifier	buf		938261	0					
ANR	938569	Argument	"""/clear"""		938261	1					
ANR	938570	PrimaryExpression	"""/clear"""		938261	0					
ANR	938571	CompoundStatement		36:38:1183:1183	938261	1					
ANR	938572	ExpressionStatement	"r_core_cmd0 ( core , ""T-"" )"	134:3:4151:4175	938261	0	True				
ANR	938573	CallExpression	"r_core_cmd0 ( core , ""T-"" )"		938261	0					
ANR	938574	Callee	r_core_cmd0		938261	0					
ANR	938575	Identifier	r_core_cmd0		938261	0					
ANR	938576	ArgumentList	core		938261	1					
ANR	938577	Argument	core		938261	0					
ANR	938578	Identifier	core		938261	0					
ANR	938579	Argument	"""T-"""		938261	1					
ANR	938580	PrimaryExpression	"""T-"""		938261	0					
ANR	938581	ReturnStatement	return 0 ;	135:3:4180:4188	938261	1	True				
ANR	938582	PrimaryExpression	0		938261	0					
ANR	938583	ElseStatement	else		938261	0					
ANR	938584	IfStatement	"if ( ! strcmp ( buf , ""/quit"" ) )"		938261	0					
ANR	938585	Condition	"! strcmp ( buf , ""/quit"" )"	136:13:4203:4224	938261	0	True				
ANR	938586	UnaryOperationExpression	"! strcmp ( buf , ""/quit"" )"		938261	0					
ANR	938587	UnaryOperator	!		938261	0					
ANR	938588	CallExpression	"strcmp ( buf , ""/quit"" )"		938261	1					
ANR	938589	Callee	strcmp		938261	0					
ANR	938590	Identifier	strcmp		938261	0					
ANR	938591	ArgumentList	buf		938261	1					
ANR	938592	Argument	buf		938261	0					
ANR	938593	Identifier	buf		938261	0					
ANR	938594	Argument	"""/quit"""		938261	1					
ANR	938595	PrimaryExpression	"""/quit"""		938261	0					
ANR	938596	CompoundStatement		40:37:1296:1296	938261	1					
ANR	938597	ReturnStatement	return 0 ;	137:3:4232:4240	938261	0	True				
ANR	938598	PrimaryExpression	0		938261	0					
ANR	938599	ElseStatement	else		938261	0					
ANR	938600	IfStatement	if ( * buf == '/' )		938261	0					
ANR	938601	Condition	* buf == '/'	138:13:4255:4265	938261	0	True				
ANR	938602	EqualityExpression	* buf == '/'		938261	0		==			
ANR	938603	UnaryOperationExpression	* buf		938261	0					
ANR	938604	UnaryOperator	*		938261	0					
ANR	938605	Identifier	buf		938261	1					
ANR	938606	PrimaryExpression	'/'		938261	1					
ANR	938607	CompoundStatement		42:26:1337:1337	938261	1					
ANR	938608	ExpressionStatement	"eprintf ( ""Unknown command: %s\\n"" , buf )"	139:3:4273:4311	938261	0	True				
ANR	938609	CallExpression	"eprintf ( ""Unknown command: %s\\n"" , buf )"		938261	0					
ANR	938610	Callee	eprintf		938261	0					
ANR	938611	Identifier	eprintf		938261	0					
ANR	938612	ArgumentList	"""Unknown command: %s\\n"""		938261	1					
ANR	938613	Argument	"""Unknown command: %s\\n"""		938261	0					
ANR	938614	PrimaryExpression	"""Unknown command: %s\\n"""		938261	0					
ANR	938615	Argument	buf		938261	1					
ANR	938616	Identifier	buf		938261	0					
ANR	938617	ElseStatement	else		938261	0					
ANR	938618	CompoundStatement		44:9:1391:1391	938261	0					
ANR	938619	ExpressionStatement	"snprintf ( msg , sizeof ( msg ) , ""[%s] %s"" , me , buf )"	141:3:4327:4375	938261	0	True				
ANR	938620	CallExpression	"snprintf ( msg , sizeof ( msg ) , ""[%s] %s"" , me , buf )"		938261	0					
ANR	938621	Callee	snprintf		938261	0					
ANR	938622	Identifier	snprintf		938261	0					
ANR	938623	ArgumentList	msg		938261	1					
ANR	938624	Argument	msg		938261	0					
ANR	938625	Identifier	msg		938261	0					
ANR	938626	Argument	sizeof ( msg )		938261	1					
ANR	938627	SizeofExpression	sizeof ( msg )		938261	0					
ANR	938628	Sizeof	sizeof		938261	0					
ANR	938629	SizeofOperand	msg		938261	1					
ANR	938630	Argument	"""[%s] %s"""		938261	2					
ANR	938631	PrimaryExpression	"""[%s] %s"""		938261	0					
ANR	938632	Argument	me		938261	3					
ANR	938633	Identifier	me		938261	0					
ANR	938634	Argument	buf		938261	4					
ANR	938635	Identifier	buf		938261	0					
ANR	938636	ExpressionStatement	"r_core_log_add ( core , msg )"	142:3:4380:4406	938261	1	True				
ANR	938637	CallExpression	"r_core_log_add ( core , msg )"		938261	0					
ANR	938638	Callee	r_core_log_add		938261	0					
ANR	938639	Identifier	r_core_log_add		938261	0					
ANR	938640	ArgumentList	core		938261	1					
ANR	938641	Argument	core		938261	0					
ANR	938642	Identifier	core		938261	0					
ANR	938643	Argument	msg		938261	1					
ANR	938644	Identifier	msg		938261	0					
ANR	938645	ReturnStatement	return 1 ;	145:1:4416:4424	938261	9	True				
ANR	938646	PrimaryExpression	1		938261	0					
ANR	938647	ReturnType	static int		938261	1					
ANR	938648	Identifier	textlog_chat		938261	2					
ANR	938649	ParameterList	RCore * core		938261	3					
ANR	938650	Parameter	RCore * core	97:24:2917:2927	938261	0	True				
ANR	938651	ParameterType	RCore *		938261	0					
ANR	938652	Identifier	core		938261	1					
ANR	938653	CFGEntryNode	ENTRY		938261		True				
ANR	938654	CFGExitNode	EXIT		938261		True				
ANR	938655	InfiniteForNode	true		938261		True				
ANR	938656	Symbol	core -> config		938261						
ANR	938657	Symbol	msg		938261						
ANR	938658	Symbol	strcmp		938261						
ANR	938659	Symbol	* buf		938261						
ANR	938660	Symbol	NULL		938261						
ANR	938661	Symbol	r_cons_fgets		938261						
ANR	938662	Symbol	* core		938261						
ANR	938663	Symbol	r_config_get		938261						
ANR	938664	Symbol	core		938261						
ANR	938665	Symbol	strncmp		938261						
ANR	938666	Symbol	buf		938261						
ANR	938667	Symbol	core -> log		938261						
ANR	938668	Symbol	core -> log -> last		938261						
ANR	938669	Symbol	me		938261						
ANR	938670	Symbol	* core -> log		938261						
ANR	938671	Symbol	lastmsg		938261						
ANR	938672	Symbol	prompt		938261						
ANR	938673	Symbol	* * core		938261						
ANR	938674	Function	getIndexFromLogString	148:0:4429:4724							
ANR	938675	FunctionDef	getIndexFromLogString (const char * s)		938674	0					
ANR	938676	CompoundStatement		148:48:4477:4724	938674	0					
ANR	938677	IdentifierDeclStatement	int len = strlen ( s ) ;	149:1:4480:4500	938674	0	True				
ANR	938678	IdentifierDecl	len = strlen ( s )		938674	0					
ANR	938679	IdentifierDeclType	int		938674	0					
ANR	938680	Identifier	len		938674	1					
ANR	938681	AssignmentExpression	len = strlen ( s )		938674	2		=			
ANR	938682	Identifier	len		938674	0					
ANR	938683	CallExpression	strlen ( s )		938674	1					
ANR	938684	Callee	strlen		938674	0					
ANR	938685	Identifier	strlen		938674	0					
ANR	938686	ArgumentList	s		938674	1					
ANR	938687	Argument	s		938674	0					
ANR	938688	Identifier	s		938674	0					
ANR	938689	IdentifierDeclStatement	const char * m = s + len ;	150:1:4503:4526	938674	1	True				
ANR	938690	IdentifierDecl	* m = s + len		938674	0					
ANR	938691	IdentifierDeclType	const char *		938674	0					
ANR	938692	Identifier	m		938674	1					
ANR	938693	AssignmentExpression	* m = s + len		938674	2		=			
ANR	938694	Identifier	m		938674	0					
ANR	938695	AdditiveExpression	s + len		938674	1		+			
ANR	938696	Identifier	s		938674	0					
ANR	938697	Identifier	len		938674	1					
ANR	938698	IdentifierDeclStatement	int nlctr = 2 ;	151:1:4529:4542	938674	2	True				
ANR	938699	IdentifierDecl	nlctr = 2		938674	0					
ANR	938700	IdentifierDeclType	int		938674	0					
ANR	938701	Identifier	nlctr		938674	1					
ANR	938702	AssignmentExpression	nlctr = 2		938674	2		=			
ANR	938703	Identifier	nlctr		938674	0					
ANR	938704	PrimaryExpression	2		938674	1					
ANR	938705	IdentifierDeclStatement	const char * nl = NULL ;	152:1:4545:4566	938674	3	True				
ANR	938706	IdentifierDecl	* nl = NULL		938674	0					
ANR	938707	IdentifierDeclType	const char *		938674	0					
ANR	938708	Identifier	nl		938674	1					
ANR	938709	AssignmentExpression	* nl = NULL		938674	2		=			
ANR	938710	Identifier	NULL		938674	0					
ANR	938711	Identifier	NULL		938674	1					
ANR	938712	WhileStatement	while ( m > s )		938674	4					
ANR	938713	Condition	m > s	153:8:4576:4580	938674	0	True				
ANR	938714	RelationalExpression	m > s		938674	0		>			
ANR	938715	Identifier	m		938674	0					
ANR	938716	Identifier	s		938674	1					
ANR	938717	CompoundStatement		6:15:105:105	938674	1					
ANR	938718	IfStatement	if ( * m == '\\n' )		938674	0					
ANR	938719	Condition	* m == '\\n'	154:6:4591:4600	938674	0	True				
ANR	938720	EqualityExpression	* m == '\\n'		938674	0		==			
ANR	938721	UnaryOperationExpression	* m		938674	0					
ANR	938722	UnaryOperator	*		938674	0					
ANR	938723	Identifier	m		938674	1					
ANR	938724	PrimaryExpression	'\\n'		938674	1					
ANR	938725	CompoundStatement		7:18:125:125	938674	1					
ANR	938726	ExpressionStatement	nl = m	155:3:4608:4614	938674	0	True				
ANR	938727	AssignmentExpression	nl = m		938674	0		=			
ANR	938728	Identifier	nl		938674	0					
ANR	938729	Identifier	m		938674	1					
ANR	938730	IfStatement	if ( -- nlctr < 1 )		938674	1					
ANR	938731	Condition	-- nlctr < 1	156:7:4623:4633	938674	0	True				
ANR	938732	RelationalExpression	-- nlctr < 1		938674	0		<			
ANR	938733	UnaryExpression	-- nlctr		938674	0					
ANR	938734	IncDec	--		938674	0					
ANR	938735	Identifier	nlctr		938674	1					
ANR	938736	PrimaryExpression	1		938674	1					
ANR	938737	CompoundStatement		9:20:158:158	938674	1					
ANR	938738	ReturnStatement	return atoi ( m + 1 ) ;	157:4:4642:4661	938674	0	True				
ANR	938739	CallExpression	atoi ( m + 1 )		938674	0					
ANR	938740	Callee	atoi		938674	0					
ANR	938741	Identifier	atoi		938674	0					
ANR	938742	ArgumentList	m + 1		938674	1					
ANR	938743	Argument	m + 1		938674	0					
ANR	938744	AdditiveExpression	m + 1		938674	0		+			
ANR	938745	Identifier	m		938674	0					
ANR	938746	PrimaryExpression	1		938674	1					
ANR	938747	ExpressionStatement	m --	160:2:4674:4677	938674	1	True				
ANR	938748	PostIncDecOperationExpression	m --		938674	0					
ANR	938749	Identifier	m		938674	0					
ANR	938750	IncDec	--		938674	1					
ANR	938751	ReturnStatement	return atoi ( nl ? nl + 1 : s ) ;	162:2:4684:4710	938674	5	True				
ANR	938752	CallExpression	atoi ( nl ? nl + 1 : s )		938674	0					
ANR	938753	Callee	atoi		938674	0					
ANR	938754	Identifier	atoi		938674	0					
ANR	938755	ArgumentList	nl ? nl + 1 : s		938674	1					
ANR	938756	Argument	nl ? nl + 1 : s		938674	0					
ANR	938757	ConditionalExpression	nl ? nl + 1 : s		938674	0					
ANR	938758	Condition	nl		938674	0					
ANR	938759	Identifier	nl		938674	0					
ANR	938760	AdditiveExpression	nl + 1		938674	1		+			
ANR	938761	Identifier	nl		938674	0					
ANR	938762	PrimaryExpression	1		938674	1					
ANR	938763	Identifier	s		938674	2					
ANR	938764	ReturnStatement	return - 1 ;	163:1:4713:4722	938674	6	True				
ANR	938765	UnaryOperationExpression	- 1		938674	0					
ANR	938766	UnaryOperator	-		938674	0					
ANR	938767	PrimaryExpression	1		938674	1					
ANR	938768	ReturnType	static int		938674	1					
ANR	938769	Identifier	getIndexFromLogString		938674	2					
ANR	938770	ParameterList	const char * s		938674	3					
ANR	938771	Parameter	const char * s	148:33:4462:4474	938674	0	True				
ANR	938772	ParameterType	const char *		938674	0					
ANR	938773	Identifier	s		938674	1					
ANR	938774	CFGEntryNode	ENTRY		938674		True				
ANR	938775	CFGExitNode	EXIT		938674		True				
ANR	938776	Symbol	atoi		938674						
ANR	938777	Symbol	strlen		938674						
ANR	938778	Symbol	s		938674						
ANR	938779	Symbol	nlctr		938674						
ANR	938780	Symbol	NULL		938674						
ANR	938781	Symbol	len		938674						
ANR	938782	Symbol	* m		938674						
ANR	938783	Symbol	m		938674						
ANR	938784	Symbol	nl		938674						
ANR	938785	Function	expr2cmd	166:0:4727:5331							
ANR	938786	FunctionDef	"expr2cmd (RCoreLog * log , const char * line)"		938785	0					
ANR	938787	CompoundStatement		166:56:4783:5331	938785	0					
ANR	938788	IfStatement	if ( ! line || ! * line )		938785	0					
ANR	938789	Condition	! line || ! * line	167:5:4790:4804	938785	0	True				
ANR	938790	OrExpression	! line || ! * line		938785	0		||			
ANR	938791	UnaryOperationExpression	! line		938785	0					
ANR	938792	UnaryOperator	!		938785	0					
ANR	938793	Identifier	line		938785	1					
ANR	938794	UnaryOperationExpression	! * line		938785	1					
ANR	938795	UnaryOperator	!		938785	0					
ANR	938796	UnaryOperationExpression	* line		938785	1					
ANR	938797	UnaryOperator	*		938785	0					
ANR	938798	Identifier	line		938785	1					
ANR	938799	CompoundStatement		2:22:23:23	938785	1					
ANR	938800	ReturnStatement	return NULL ;	168:2:4811:4822	938785	0	True				
ANR	938801	Identifier	NULL		938785	0					
ANR	938802	ExpressionStatement	line ++	170:1:4828:4834	938785	1	True				
ANR	938803	PostIncDecOperationExpression	line ++		938785	0					
ANR	938804	Identifier	line		938785	0					
ANR	938805	IncDec	++		938785	1					
ANR	938806	IfStatement	"if ( ! strncmp ( line , ""add-comment"" , 11 ) )"		938785	2					
ANR	938807	Condition	"! strncmp ( line , ""add-comment"" , 11 )"	171:5:4841:4874	938785	0	True				
ANR	938808	UnaryOperationExpression	"! strncmp ( line , ""add-comment"" , 11 )"		938785	0					
ANR	938809	UnaryOperator	!		938785	0					
ANR	938810	CallExpression	"strncmp ( line , ""add-comment"" , 11 )"		938785	1					
ANR	938811	Callee	strncmp		938785	0					
ANR	938812	Identifier	strncmp		938785	0					
ANR	938813	ArgumentList	line		938785	1					
ANR	938814	Argument	line		938785	0					
ANR	938815	Identifier	line		938785	0					
ANR	938816	Argument	"""add-comment"""		938785	1					
ANR	938817	PrimaryExpression	"""add-comment"""		938785	0					
ANR	938818	Argument	11		938785	2					
ANR	938819	PrimaryExpression	11		938785	0					
ANR	938820	CompoundStatement		6:41:93:93	938785	1					
ANR	938821	ExpressionStatement	line += 11	172:2:4881:4891	938785	0	True				
ANR	938822	AssignmentExpression	line += 11		938785	0		+=			
ANR	938823	Identifier	line		938785	0					
ANR	938824	PrimaryExpression	11		938785	1					
ANR	938825	IfStatement	if ( * line == ' ' )		938785	1					
ANR	938826	Condition	* line == ' '	173:6:4899:4910	938785	0	True				
ANR	938827	EqualityExpression	* line == ' '		938785	0		==			
ANR	938828	UnaryOperationExpression	* line		938785	0					
ANR	938829	UnaryOperator	*		938785	0					
ANR	938830	Identifier	line		938785	1					
ANR	938831	PrimaryExpression	' '		938785	1					
ANR	938832	CompoundStatement		9:3:134:167	938785	1					
ANR	938833	IdentifierDeclStatement	"char * sp = strchr ( line + 1 , ' ' ) ;"	174:3:4918:4951	938785	0	True				
ANR	938834	IdentifierDecl	"* sp = strchr ( line + 1 , ' ' )"		938785	0					
ANR	938835	IdentifierDeclType	char *		938785	0					
ANR	938836	Identifier	sp		938785	1					
ANR	938837	AssignmentExpression	"* sp = strchr ( line + 1 , ' ' )"		938785	2		=			
ANR	938838	Identifier	sp		938785	0					
ANR	938839	CallExpression	"strchr ( line + 1 , ' ' )"		938785	1					
ANR	938840	Callee	strchr		938785	0					
ANR	938841	Identifier	strchr		938785	0					
ANR	938842	ArgumentList	line + 1		938785	1					
ANR	938843	Argument	line + 1		938785	0					
ANR	938844	AdditiveExpression	line + 1		938785	0		+			
ANR	938845	Identifier	line		938785	0					
ANR	938846	PrimaryExpression	1		938785	1					
ANR	938847	Argument	' '		938785	1					
ANR	938848	PrimaryExpression	' '		938785	0					
ANR	938849	IfStatement	if ( sp )		938785	1					
ANR	938850	Condition	sp	175:7:4960:4961	938785	0	True				
ANR	938851	Identifier	sp		938785	0					
ANR	938852	CompoundStatement		12:4:210:244	938785	1					
ANR	938853	IdentifierDeclStatement	char * msg = sp + 1 ;	176:4:4970:4988	938785	0	True				
ANR	938854	IdentifierDecl	* msg = sp + 1		938785	0					
ANR	938855	IdentifierDeclType	char *		938785	0					
ANR	938856	Identifier	msg		938785	1					
ANR	938857	AssignmentExpression	* msg = sp + 1		938785	2		=			
ANR	938858	Identifier	msg		938785	0					
ANR	938859	AdditiveExpression	sp + 1		938785	1		+			
ANR	938860	Identifier	sp		938785	0					
ANR	938861	PrimaryExpression	1		938785	1					
ANR	938862	IdentifierDeclStatement	"ut64 addr = r_num_get ( NULL , line ) ;"	177:4:4994:5028	938785	1	True				
ANR	938863	IdentifierDecl	"addr = r_num_get ( NULL , line )"		938785	0					
ANR	938864	IdentifierDeclType	ut64		938785	0					
ANR	938865	Identifier	addr		938785	1					
ANR	938866	AssignmentExpression	"addr = r_num_get ( NULL , line )"		938785	2		=			
ANR	938867	Identifier	addr		938785	0					
ANR	938868	CallExpression	"r_num_get ( NULL , line )"		938785	1					
ANR	938869	Callee	r_num_get		938785	0					
ANR	938870	Identifier	r_num_get		938785	0					
ANR	938871	ArgumentList	NULL		938785	1					
ANR	938872	Argument	NULL		938785	0					
ANR	938873	Identifier	NULL		938785	0					
ANR	938874	Argument	line		938785	1					
ANR	938875	Identifier	line		938785	0					
ANR	938876	Statement	return	178:4:5034:5039	938785	2	True				
ANR	938877	Statement	r_str_newf	178:11:5041:5050	938785	3	True				
ANR	938878	Statement	(	178:22:5052:5052	938785	4	True				
ANR	938879	Statement	"""CCu base64:%s @ 0x%"""	178:23:5053:5073	938785	5	True				
ANR	938880	Statement	PFMT64x	178:44:5074:5080	938785	6	True				
ANR	938881	Statement	"""\\n"""	178:51:5081:5084	938785	7	True				
ANR	938882	Statement	","	178:55:5085:5085	938785	8	True				
ANR	938883	Statement	msg	178:57:5087:5089	938785	9	True				
ANR	938884	Statement	","	178:60:5090:5090	938785	10	True				
ANR	938885	Statement	addr	178:62:5092:5095	938785	11	True				
ANR	938886	Statement	)	178:66:5096:5096	938785	12	True				
ANR	938887	ExpressionStatement		178:67:5097:5097	938785	13	True				
ANR	938888	ExpressionStatement	"eprintf ( ""add-comment parsing error\\n"" )"	181:2:5110:5149	938785	2	True				
ANR	938889	CallExpression	"eprintf ( ""add-comment parsing error\\n"" )"		938785	0					
ANR	938890	Callee	eprintf		938785	0					
ANR	938891	Identifier	eprintf		938785	0					
ANR	938892	ArgumentList	"""add-comment parsing error\\n"""		938785	1					
ANR	938893	Argument	"""add-comment parsing error\\n"""		938785	0					
ANR	938894	PrimaryExpression	"""add-comment parsing error\\n"""		938785	0					
ANR	938895	IfStatement	"if ( ! strncmp ( line , ""del-comment"" , 11 ) )"		938785	3					
ANR	938896	Condition	"! strncmp ( line , ""del-comment"" , 11 )"	183:5:5159:5192	938785	0	True				
ANR	938897	UnaryOperationExpression	"! strncmp ( line , ""del-comment"" , 11 )"		938785	0					
ANR	938898	UnaryOperator	!		938785	0					
ANR	938899	CallExpression	"strncmp ( line , ""del-comment"" , 11 )"		938785	1					
ANR	938900	Callee	strncmp		938785	0					
ANR	938901	Identifier	strncmp		938785	0					
ANR	938902	ArgumentList	line		938785	1					
ANR	938903	Argument	line		938785	0					
ANR	938904	Identifier	line		938785	0					
ANR	938905	Argument	"""del-comment"""		938785	1					
ANR	938906	PrimaryExpression	"""del-comment"""		938785	0					
ANR	938907	Argument	11		938785	2					
ANR	938908	PrimaryExpression	11		938785	0					
ANR	938909	CompoundStatement		18:41:411:411	938785	1					
ANR	938910	IfStatement	if ( line [ 11 ] == ' ' )		938785	0					
ANR	938911	Condition	line [ 11 ] == ' '	184:6:5203:5217	938785	0	True				
ANR	938912	EqualityExpression	line [ 11 ] == ' '		938785	0		==			
ANR	938913	ArrayIndexing	line [ 11 ]		938785	0					
ANR	938914	Identifier	line		938785	0					
ANR	938915	PrimaryExpression	11		938785	1					
ANR	938916	PrimaryExpression	' '		938785	1					
ANR	938917	CompoundStatement		19:23:436:436	938785	1					
ANR	938918	ReturnStatement	"return r_str_newf ( ""CC-%s\\n"" , line + 12 ) ;"	185:3:5225:5265	938785	0	True				
ANR	938919	CallExpression	"r_str_newf ( ""CC-%s\\n"" , line + 12 )"		938785	0					
ANR	938920	Callee	r_str_newf		938785	0					
ANR	938921	Identifier	r_str_newf		938785	0					
ANR	938922	ArgumentList	"""CC-%s\\n"""		938785	1					
ANR	938923	Argument	"""CC-%s\\n"""		938785	0					
ANR	938924	PrimaryExpression	"""CC-%s\\n"""		938785	0					
ANR	938925	Argument	line + 12		938785	1					
ANR	938926	AdditiveExpression	line + 12		938785	0		+			
ANR	938927	Identifier	line		938785	0					
ANR	938928	PrimaryExpression	12		938785	1					
ANR	938929	ExpressionStatement	"eprintf ( ""add-comment parsing error\\n"" )"	187:2:5273:5312	938785	1	True				
ANR	938930	CallExpression	"eprintf ( ""add-comment parsing error\\n"" )"		938785	0					
ANR	938931	Callee	eprintf		938785	0					
ANR	938932	Identifier	eprintf		938785	0					
ANR	938933	ArgumentList	"""add-comment parsing error\\n"""		938785	1					
ANR	938934	Argument	"""add-comment parsing error\\n"""		938785	0					
ANR	938935	PrimaryExpression	"""add-comment parsing error\\n"""		938785	0					
ANR	938936	ReturnStatement	return NULL ;	189:1:5318:5329	938785	4	True				
ANR	938937	Identifier	NULL		938785	0					
ANR	938938	ReturnType	static char *		938785	1					
ANR	938939	Identifier	expr2cmd		938785	2					
ANR	938940	ParameterList	"RCoreLog * log , const char * line"		938785	3					
ANR	938941	Parameter	RCoreLog * log	166:23:4750:4762	938785	0	True				
ANR	938942	ParameterType	RCoreLog *		938785	0					
ANR	938943	Identifier	log		938785	1					
ANR	938944	Parameter	const char * line	166:38:4765:4780	938785	1	True				
ANR	938945	ParameterType	const char *		938785	0					
ANR	938946	Identifier	line		938785	1					
ANR	938947	CFGEntryNode	ENTRY		938785		True				
ANR	938948	CFGExitNode	EXIT		938785		True				
ANR	938949	Symbol	msg		938785						
ANR	938950	Symbol	strncmp		938785						
ANR	938951	Symbol	NULL		938785						
ANR	938952	Symbol	log		938785						
ANR	938953	Symbol	line		938785						
ANR	938954	Symbol	strchr		938785						
ANR	938955	Symbol	r_num_get		938785						
ANR	938956	Symbol	* line		938785						
ANR	938957	Symbol	r_str_newf		938785						
ANR	938958	Symbol	addr		938785						
ANR	938959	Symbol	sp		938785						
ANR	938960	Function	log_callback_r2	192:0:5334:5577							
ANR	938961	FunctionDef	"log_callback_r2 (RCore * core , int count , const char * line)"		938960	0					
ANR	938962	CompoundStatement		192:70:5404:5577	938960	0					
ANR	938963	IfStatement	if ( * line == ':' )		938960	0					
ANR	938964	Condition	* line == ':'	193:5:5411:5422	938960	0	True				
ANR	938965	EqualityExpression	* line == ':'		938960	0		==			
ANR	938966	UnaryOperationExpression	* line		938960	0					
ANR	938967	UnaryOperator	*		938960	0					
ANR	938968	Identifier	line		938960	1					
ANR	938969	PrimaryExpression	':'		938960	1					
ANR	938970	CompoundStatement		3:2:24:62	938960	1					
ANR	938971	IdentifierDeclStatement	"char * cmd = expr2cmd ( core -> log , line ) ;"	194:2:5429:5467	938960	0	True				
ANR	938972	IdentifierDecl	"* cmd = expr2cmd ( core -> log , line )"		938960	0					
ANR	938973	IdentifierDeclType	char *		938960	0					
ANR	938974	Identifier	cmd		938960	1					
ANR	938975	AssignmentExpression	"* cmd = expr2cmd ( core -> log , line )"		938960	2		=			
ANR	938976	Identifier	cmd		938960	0					
ANR	938977	CallExpression	"expr2cmd ( core -> log , line )"		938960	1					
ANR	938978	Callee	expr2cmd		938960	0					
ANR	938979	Identifier	expr2cmd		938960	0					
ANR	938980	ArgumentList	core -> log		938960	1					
ANR	938981	Argument	core -> log		938960	0					
ANR	938982	PtrMemberAccess	core -> log		938960	0					
ANR	938983	Identifier	core		938960	0					
ANR	938984	Identifier	log		938960	1					
ANR	938985	Argument	line		938960	1					
ANR	938986	Identifier	line		938960	0					
ANR	938987	IfStatement	if ( cmd )		938960	1					
ANR	938988	Condition	cmd	195:6:5475:5477	938960	0	True				
ANR	938989	Identifier	cmd		938960	0					
ANR	938990	CompoundStatement		4:11:75:75	938960	1					
ANR	938991	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , cmd )"	196:3:5485:5512	938960	0	True				
ANR	938992	CallExpression	"r_cons_printf ( ""%s\\n"" , cmd )"		938960	0					
ANR	938993	Callee	r_cons_printf		938960	0					
ANR	938994	Identifier	r_cons_printf		938960	0					
ANR	938995	ArgumentList	"""%s\\n"""		938960	1					
ANR	938996	Argument	"""%s\\n"""		938960	0					
ANR	938997	PrimaryExpression	"""%s\\n"""		938960	0					
ANR	938998	Argument	cmd		938960	1					
ANR	938999	Identifier	cmd		938960	0					
ANR	939000	ExpressionStatement	"r_core_cmd ( core , cmd , 0 )"	197:3:5517:5542	938960	1	True				
ANR	939001	CallExpression	"r_core_cmd ( core , cmd , 0 )"		938960	0					
ANR	939002	Callee	r_core_cmd		938960	0					
ANR	939003	Identifier	r_core_cmd		938960	0					
ANR	939004	ArgumentList	core		938960	1					
ANR	939005	Argument	core		938960	0					
ANR	939006	Identifier	core		938960	0					
ANR	939007	Argument	cmd		938960	1					
ANR	939008	Identifier	cmd		938960	0					
ANR	939009	Argument	0		938960	2					
ANR	939010	PrimaryExpression	0		938960	0					
ANR	939011	ExpressionStatement	free ( cmd )	198:3:5547:5557	938960	2	True				
ANR	939012	CallExpression	free ( cmd )		938960	0					
ANR	939013	Callee	free		938960	0					
ANR	939014	Identifier	free		938960	0					
ANR	939015	ArgumentList	cmd		938960	1					
ANR	939016	Argument	cmd		938960	0					
ANR	939017	Identifier	cmd		938960	0					
ANR	939018	ReturnStatement	return 0 ;	201:1:5567:5575	938960	1	True				
ANR	939019	PrimaryExpression	0		938960	0					
ANR	939020	ReturnType	static int		938960	1					
ANR	939021	Identifier	log_callback_r2		938960	2					
ANR	939022	ParameterList	"RCore * core , int count , const char * line"		938960	3					
ANR	939023	Parameter	RCore * core	192:28:5362:5372	938960	0	True				
ANR	939024	ParameterType	RCore *		938960	0					
ANR	939025	Identifier	core		938960	1					
ANR	939026	Parameter	int count	192:41:5375:5383	938960	1	True				
ANR	939027	ParameterType	int		938960	0					
ANR	939028	Identifier	count		938960	1					
ANR	939029	Parameter	const char * line	192:52:5386:5401	938960	2	True				
ANR	939030	ParameterType	const char *		938960	0					
ANR	939031	Identifier	line		938960	1					
ANR	939032	CFGEntryNode	ENTRY		938960		True				
ANR	939033	CFGExitNode	EXIT		938960		True				
ANR	939034	Symbol	core		938960						
ANR	939035	Symbol	expr2cmd		938960						
ANR	939036	Symbol	core -> log		938960						
ANR	939037	Symbol	line		938960						
ANR	939038	Symbol	count		938960						
ANR	939039	Symbol	* core		938960						
ANR	939040	Symbol	* line		938960						
ANR	939041	Symbol	cmd		938960						
ANR	939042	Function	log_callback_all	204:0:5580:5704							
ANR	939043	FunctionDef	"log_callback_all (RCore * log , int count , const char * line)"		939042	0					
ANR	939044	CompoundStatement		204:70:5650:5704	939042	0					
ANR	939045	ExpressionStatement	"r_cons_printf ( ""%d %s\\n"" , count , line )"	205:1:5653:5691	939042	0	True				
ANR	939046	CallExpression	"r_cons_printf ( ""%d %s\\n"" , count , line )"		939042	0					
ANR	939047	Callee	r_cons_printf		939042	0					
ANR	939048	Identifier	r_cons_printf		939042	0					
ANR	939049	ArgumentList	"""%d %s\\n"""		939042	1					
ANR	939050	Argument	"""%d %s\\n"""		939042	0					
ANR	939051	PrimaryExpression	"""%d %s\\n"""		939042	0					
ANR	939052	Argument	count		939042	1					
ANR	939053	Identifier	count		939042	0					
ANR	939054	Argument	line		939042	2					
ANR	939055	Identifier	line		939042	0					
ANR	939056	ReturnStatement	return 0 ;	206:1:5694:5702	939042	1	True				
ANR	939057	PrimaryExpression	0		939042	0					
ANR	939058	ReturnType	static int		939042	1					
ANR	939059	Identifier	log_callback_all		939042	2					
ANR	939060	ParameterList	"RCore * log , int count , const char * line"		939042	3					
ANR	939061	Parameter	RCore * log	204:29:5609:5618	939042	0	True				
ANR	939062	ParameterType	RCore *		939042	0					
ANR	939063	Identifier	log		939042	1					
ANR	939064	Parameter	int count	204:41:5621:5629	939042	1	True				
ANR	939065	ParameterType	int		939042	0					
ANR	939066	Identifier	count		939042	1					
ANR	939067	Parameter	const char * line	204:52:5632:5647	939042	2	True				
ANR	939068	ParameterType	const char *		939042	0					
ANR	939069	Identifier	line		939042	1					
ANR	939070	CFGEntryNode	ENTRY		939042		True				
ANR	939071	CFGExitNode	EXIT		939042		True				
ANR	939072	Symbol	log		939042						
ANR	939073	Symbol	line		939042						
ANR	939074	Symbol	count		939042						
ANR	939075	Function	cmd_log	209:0:5707:8186							
ANR	939076	FunctionDef	"cmd_log (void * data , const char * input)"		939075	0					
ANR	939077	CompoundStatement		209:50:5757:8186	939075	0					
ANR	939078	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	210:1:5760:5788	939075	0	True				
ANR	939079	IdentifierDecl	* core = ( RCore * ) data		939075	0					
ANR	939080	IdentifierDeclType	RCore *		939075	0					
ANR	939081	Identifier	core		939075	1					
ANR	939082	AssignmentExpression	* core = ( RCore * ) data		939075	2		=			
ANR	939083	Identifier	core		939075	0					
ANR	939084	CastExpression	( RCore * ) data		939075	1					
ANR	939085	CastTarget	RCore *		939075	0					
ANR	939086	Identifier	data		939075	1					
ANR	939087	IdentifierDeclStatement	"const char * arg , * input2 ;"	211:1:5791:5815	939075	1	True				
ANR	939088	IdentifierDecl	* arg		939075	0					
ANR	939089	IdentifierDeclType	const char *		939075	0					
ANR	939090	Identifier	arg		939075	1					
ANR	939091	IdentifierDecl	* input2		939075	1					
ANR	939092	IdentifierDeclType	const char *		939075	0					
ANR	939093	Identifier	input2		939075	1					
ANR	939094	IdentifierDeclStatement	"int n , n2 ;"	212:1:5818:5827	939075	2	True				
ANR	939095	IdentifierDecl	n		939075	0					
ANR	939096	IdentifierDeclType	int		939075	0					
ANR	939097	Identifier	n		939075	1					
ANR	939098	IdentifierDecl	n2		939075	1					
ANR	939099	IdentifierDeclType	int		939075	0					
ANR	939100	Identifier	n2		939075	1					
ANR	939101	IfStatement	if ( ! input )		939075	3					
ANR	939102	Condition	! input	214:5:5835:5840	939075	0	True				
ANR	939103	UnaryOperationExpression	! input		939075	0					
ANR	939104	UnaryOperator	!		939075	0					
ANR	939105	Identifier	input		939075	1					
ANR	939106	CompoundStatement		6:13:85:85	939075	1					
ANR	939107	ReturnStatement	return 1 ;	215:2:5847:5855	939075	0	True				
ANR	939108	PrimaryExpression	1		939075	0					
ANR	939109	ExpressionStatement	"input2 = ( input && * input ) ? input + 1 : """""	218:1:5862:5903	939075	4	True				
ANR	939110	AssignmentExpression	"input2 = ( input && * input ) ? input + 1 : """""		939075	0		=			
ANR	939111	Identifier	input2		939075	0					
ANR	939112	ConditionalExpression	"( input && * input ) ? input + 1 : """""		939075	1					
ANR	939113	Condition	input && * input		939075	0					
ANR	939114	AndExpression	input && * input		939075	0		&&			
ANR	939115	Identifier	input		939075	0					
ANR	939116	UnaryOperationExpression	* input		939075	1					
ANR	939117	UnaryOperator	*		939075	0					
ANR	939118	Identifier	input		939075	1					
ANR	939119	AdditiveExpression	input + 1		939075	1		+			
ANR	939120	Identifier	input		939075	0					
ANR	939121	PrimaryExpression	1		939075	1					
ANR	939122	PrimaryExpression	""""""		939075	2					
ANR	939123	ExpressionStatement	"arg = strchr ( input2 , ' ' )"	219:1:5906:5932	939075	5	True				
ANR	939124	AssignmentExpression	"arg = strchr ( input2 , ' ' )"		939075	0		=			
ANR	939125	Identifier	arg		939075	0					
ANR	939126	CallExpression	"strchr ( input2 , ' ' )"		939075	1					
ANR	939127	Callee	strchr		939075	0					
ANR	939128	Identifier	strchr		939075	0					
ANR	939129	ArgumentList	input2		939075	1					
ANR	939130	Argument	input2		939075	0					
ANR	939131	Identifier	input2		939075	0					
ANR	939132	Argument	' '		939075	1					
ANR	939133	PrimaryExpression	' '		939075	0					
ANR	939134	ExpressionStatement	n = atoi ( input2 )	220:1:5935:5952	939075	6	True				
ANR	939135	AssignmentExpression	n = atoi ( input2 )		939075	0		=			
ANR	939136	Identifier	n		939075	0					
ANR	939137	CallExpression	atoi ( input2 )		939075	1					
ANR	939138	Callee	atoi		939075	0					
ANR	939139	Identifier	atoi		939075	0					
ANR	939140	ArgumentList	input2		939075	1					
ANR	939141	Argument	input2		939075	0					
ANR	939142	Identifier	input2		939075	0					
ANR	939143	ExpressionStatement	n2 = arg ? atoi ( arg + 1 ) : 0	221:1:5955:5982	939075	7	True				
ANR	939144	AssignmentExpression	n2 = arg ? atoi ( arg + 1 ) : 0		939075	0		=			
ANR	939145	Identifier	n2		939075	0					
ANR	939146	ConditionalExpression	arg ? atoi ( arg + 1 ) : 0		939075	1					
ANR	939147	Condition	arg		939075	0					
ANR	939148	Identifier	arg		939075	0					
ANR	939149	CallExpression	atoi ( arg + 1 )		939075	1					
ANR	939150	Callee	atoi		939075	0					
ANR	939151	Identifier	atoi		939075	0					
ANR	939152	ArgumentList	arg + 1		939075	1					
ANR	939153	Argument	arg + 1		939075	0					
ANR	939154	AdditiveExpression	arg + 1		939075	0		+			
ANR	939155	Identifier	arg		939075	0					
ANR	939156	PrimaryExpression	1		939075	1					
ANR	939157	PrimaryExpression	0		939075	2					
ANR	939158	SwitchStatement	switch ( * input )		939075	8					
ANR	939159	Condition	* input	223:9:5994:5999	939075	0	True				
ANR	939160	UnaryOperationExpression	* input		939075	0					
ANR	939161	UnaryOperator	*		939075	0					
ANR	939162	Identifier	input		939075	1					
ANR	939163	CompoundStatement		15:17:244:244	939075	1					
ANR	939164	Label	case 'e' :	224:1:6005:6013	939075	0	True				
ANR	939165	CompoundStatement		18:3:284:313	939075	1					
ANR	939166	IdentifierDeclStatement	"char * p = strchr ( input , ' ' ) ;"	226:3:6042:6071	939075	0	True				
ANR	939167	IdentifierDecl	"* p = strchr ( input , ' ' )"		939075	0					
ANR	939168	IdentifierDeclType	char *		939075	0					
ANR	939169	Identifier	p		939075	1					
ANR	939170	AssignmentExpression	"* p = strchr ( input , ' ' )"		939075	2		=			
ANR	939171	Identifier	p		939075	0					
ANR	939172	CallExpression	"strchr ( input , ' ' )"		939075	1					
ANR	939173	Callee	strchr		939075	0					
ANR	939174	Identifier	strchr		939075	0					
ANR	939175	ArgumentList	input		939075	1					
ANR	939176	Argument	input		939075	0					
ANR	939177	Identifier	input		939075	0					
ANR	939178	Argument	' '		939075	1					
ANR	939179	PrimaryExpression	' '		939075	0					
ANR	939180	IfStatement	if ( p )		939075	1					
ANR	939181	Condition	p	227:7:6080:6080	939075	0	True				
ANR	939182	Identifier	p		939075	0					
ANR	939183	CompoundStatement		20:4:331:367	939075	1					
ANR	939184	IdentifierDeclStatement	"char * b = r_file_slurp ( p + 1 , NULL ) ;"	228:4:6089:6125	939075	0	True				
ANR	939185	IdentifierDecl	"* b = r_file_slurp ( p + 1 , NULL )"		939075	0					
ANR	939186	IdentifierDeclType	char *		939075	0					
ANR	939187	Identifier	b		939075	1					
ANR	939188	AssignmentExpression	"* b = r_file_slurp ( p + 1 , NULL )"		939075	2		=			
ANR	939189	Identifier	b		939075	0					
ANR	939190	CallExpression	"r_file_slurp ( p + 1 , NULL )"		939075	1					
ANR	939191	Callee	r_file_slurp		939075	0					
ANR	939192	Identifier	r_file_slurp		939075	0					
ANR	939193	ArgumentList	p + 1		939075	1					
ANR	939194	Argument	p + 1		939075	0					
ANR	939195	AdditiveExpression	p + 1		939075	0		+			
ANR	939196	Identifier	p		939075	0					
ANR	939197	PrimaryExpression	1		939075	1					
ANR	939198	Argument	NULL		939075	1					
ANR	939199	Identifier	NULL		939075	0					
ANR	939200	IfStatement	if ( b )		939075	1					
ANR	939201	Condition	b	229:8:6135:6135	939075	0	True				
ANR	939202	Identifier	b		939075	0					
ANR	939203	CompoundStatement		21:11:380:380	939075	1					
ANR	939204	ExpressionStatement	"r_cons_less_str ( b , NULL )"	230:5:6145:6170	939075	0	True				
ANR	939205	CallExpression	"r_cons_less_str ( b , NULL )"		939075	0					
ANR	939206	Callee	r_cons_less_str		939075	0					
ANR	939207	Identifier	r_cons_less_str		939075	0					
ANR	939208	ArgumentList	b		939075	1					
ANR	939209	Argument	b		939075	0					
ANR	939210	Identifier	b		939075	0					
ANR	939211	Argument	NULL		939075	1					
ANR	939212	Identifier	NULL		939075	0					
ANR	939213	ExpressionStatement	free ( b )	231:5:6177:6185	939075	1	True				
ANR	939214	CallExpression	free ( b )		939075	0					
ANR	939215	Callee	free		939075	0					
ANR	939216	Identifier	free		939075	0					
ANR	939217	ArgumentList	b		939075	1					
ANR	939218	Argument	b		939075	0					
ANR	939219	Identifier	b		939075	0					
ANR	939220	ElseStatement	else		939075	0					
ANR	939221	CompoundStatement		24:11:440:440	939075	0					
ANR	939222	ExpressionStatement	"eprintf ( ""File not found\\n"" )"	233:5:6205:6233	939075	0	True				
ANR	939223	CallExpression	"eprintf ( ""File not found\\n"" )"		939075	0					
ANR	939224	Callee	eprintf		939075	0					
ANR	939225	Identifier	eprintf		939075	0					
ANR	939226	ArgumentList	"""File not found\\n"""		939075	1					
ANR	939227	Argument	"""File not found\\n"""		939075	0					
ANR	939228	PrimaryExpression	"""File not found\\n"""		939075	0					
ANR	939229	ElseStatement	else		939075	0					
ANR	939230	CompoundStatement		27:10:493:493	939075	0					
ANR	939231	ExpressionStatement	"eprintf ( ""Usage: less [filename]\\n"" )"	236:4:6257:6293	939075	0	True				
ANR	939232	CallExpression	"eprintf ( ""Usage: less [filename]\\n"" )"		939075	0					
ANR	939233	Callee	eprintf		939075	0					
ANR	939234	Identifier	eprintf		939075	0					
ANR	939235	ArgumentList	"""Usage: less [filename]\\n"""		939075	1					
ANR	939236	Argument	"""Usage: less [filename]\\n"""		939075	0					
ANR	939237	PrimaryExpression	"""Usage: less [filename]\\n"""		939075	0					
ANR	939238	BreakStatement	break ;	239:2:6306:6311	939075	2	True				
ANR	939239	Label	case 'l' :	240:1:6314:6322	939075	3	True				
ANR	939240	ExpressionStatement	"r_cons_printf ( ""%d\\n"" , core -> log -> last - 1 )"	241:2:6334:6377	939075	4	True				
ANR	939241	CallExpression	"r_cons_printf ( ""%d\\n"" , core -> log -> last - 1 )"		939075	0					
ANR	939242	Callee	r_cons_printf		939075	0					
ANR	939243	Identifier	r_cons_printf		939075	0					
ANR	939244	ArgumentList	"""%d\\n"""		939075	1					
ANR	939245	Argument	"""%d\\n"""		939075	0					
ANR	939246	PrimaryExpression	"""%d\\n"""		939075	0					
ANR	939247	Argument	core -> log -> last - 1		939075	1					
ANR	939248	AdditiveExpression	core -> log -> last - 1		939075	0		-			
ANR	939249	PtrMemberAccess	core -> log -> last		939075	0					
ANR	939250	PtrMemberAccess	core -> log		939075	0					
ANR	939251	Identifier	core		939075	0					
ANR	939252	Identifier	log		939075	1					
ANR	939253	Identifier	last		939075	1					
ANR	939254	PrimaryExpression	1		939075	1					
ANR	939255	BreakStatement	break ;	242:2:6381:6386	939075	5	True				
ANR	939256	Label	case '-' :	243:1:6389:6397	939075	6	True				
ANR	939257	ExpressionStatement	"r_core_log_del ( core , n )"	244:2:6410:6434	939075	7	True				
ANR	939258	CallExpression	"r_core_log_del ( core , n )"		939075	0					
ANR	939259	Callee	r_core_log_del		939075	0					
ANR	939260	Identifier	r_core_log_del		939075	0					
ANR	939261	ArgumentList	core		939075	1					
ANR	939262	Argument	core		939075	0					
ANR	939263	Identifier	core		939075	0					
ANR	939264	Argument	n		939075	1					
ANR	939265	Identifier	n		939075	0					
ANR	939266	BreakStatement	break ;	245:2:6438:6443	939075	8	True				
ANR	939267	Label	case '?' :	246:1:6446:6454	939075	9	True				
ANR	939268	ExpressionStatement	"r_core_cmd_help ( core , help_msg_T )"	247:2:6466:6500	939075	10	True				
ANR	939269	CallExpression	"r_core_cmd_help ( core , help_msg_T )"		939075	0					
ANR	939270	Callee	r_core_cmd_help		939075	0					
ANR	939271	Identifier	r_core_cmd_help		939075	0					
ANR	939272	ArgumentList	core		939075	1					
ANR	939273	Argument	core		939075	0					
ANR	939274	Identifier	core		939075	0					
ANR	939275	Argument	help_msg_T		939075	1					
ANR	939276	Identifier	help_msg_T		939075	0					
ANR	939277	BreakStatement	break ;	248:2:6504:6509	939075	11	True				
ANR	939278	Label	case 'T' :	249:1:6512:6520	939075	12	True				
ANR	939279	IfStatement	if ( r_cons_is_interactive ( ) )		939075	13					
ANR	939280	Condition	r_cons_is_interactive ( )	250:6:6548:6571	939075	0	True				
ANR	939281	CallExpression	r_cons_is_interactive ( )		939075	0					
ANR	939282	Callee	r_cons_is_interactive		939075	0					
ANR	939283	Identifier	r_cons_is_interactive		939075	0					
ANR	939284	ArgumentList			939075	1					
ANR	939285	CompoundStatement		42:32:816:816	939075	1					
ANR	939286	ExpressionStatement	textlog_chat ( core )	251:3:6579:6598	939075	0	True				
ANR	939287	CallExpression	textlog_chat ( core )		939075	0					
ANR	939288	Callee	textlog_chat		939075	0					
ANR	939289	Identifier	textlog_chat		939075	0					
ANR	939290	ArgumentList	core		939075	1					
ANR	939291	Argument	core		939075	0					
ANR	939292	Identifier	core		939075	0					
ANR	939293	ElseStatement	else		939075	0					
ANR	939294	CompoundStatement		44:9:851:851	939075	0					
ANR	939295	ExpressionStatement	"eprintf ( ""Only available when the screen is interactive\\n"" )"	253:3:6614:6673	939075	0	True				
ANR	939296	CallExpression	"eprintf ( ""Only available when the screen is interactive\\n"" )"		939075	0					
ANR	939297	Callee	eprintf		939075	0					
ANR	939298	Identifier	eprintf		939075	0					
ANR	939299	ArgumentList	"""Only available when the screen is interactive\\n"""		939075	1					
ANR	939300	Argument	"""Only available when the screen is interactive\\n"""		939075	0					
ANR	939301	PrimaryExpression	"""Only available when the screen is interactive\\n"""		939075	0					
ANR	939302	BreakStatement	break ;	255:2:6681:6686	939075	14	True				
ANR	939303	Label	case '=' :	256:1:6689:6697	939075	15	True				
ANR	939304	IfStatement	if ( input [ 1 ] == '&' )		939075	16					
ANR	939305	Condition	input [ 1 ] == '&'	257:6:6713:6727	939075	0	True				
ANR	939306	EqualityExpression	input [ 1 ] == '&'		939075	0		==			
ANR	939307	ArrayIndexing	input [ 1 ]		939075	0					
ANR	939308	Identifier	input		939075	0					
ANR	939309	PrimaryExpression	1		939075	1					
ANR	939310	PrimaryExpression	'&'		939075	1					
ANR	939311	CompoundStatement		49:23:972:972	939075	1					
ANR	939312	IfStatement	if ( input [ 2 ] == '&' )		939075	0					
ANR	939313	Condition	input [ 2 ] == '&'	258:7:6749:6763	939075	0	True				
ANR	939314	EqualityExpression	input [ 2 ] == '&'		939075	0		==			
ANR	939315	ArrayIndexing	input [ 2 ]		939075	0					
ANR	939316	Identifier	input		939075	0					
ANR	939317	PrimaryExpression	2		939075	1					
ANR	939318	PrimaryExpression	'&'		939075	1					
ANR	939319	CompoundStatement		50:24:1008:1008	939075	1					
ANR	939320	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	259:4:6782:6812	939075	0	True				
ANR	939321	CallExpression	"r_cons_break_push ( NULL , NULL )"		939075	0					
ANR	939322	Callee	r_cons_break_push		939075	0					
ANR	939323	Identifier	r_cons_break_push		939075	0					
ANR	939324	ArgumentList	NULL		939075	1					
ANR	939325	Argument	NULL		939075	0					
ANR	939326	Identifier	NULL		939075	0					
ANR	939327	Argument	NULL		939075	1					
ANR	939328	Identifier	NULL		939075	0					
ANR	939329	WhileStatement	while ( ! r_cons_is_breaked ( ) )		939075	1					
ANR	939330	Condition	! r_cons_is_breaked ( )	260:11:6825:6845	939075	0	True				
ANR	939331	UnaryOperationExpression	! r_cons_is_breaked ( )		939075	0					
ANR	939332	UnaryOperator	!		939075	0					
ANR	939333	CallExpression	r_cons_is_breaked ( )		939075	1					
ANR	939334	Callee	r_cons_is_breaked		939075	0					
ANR	939335	Identifier	r_cons_is_breaked		939075	0					
ANR	939336	ArgumentList			939075	1					
ANR	939337	CompoundStatement		54:5:1128:1160	939075	1					
ANR	939338	ExpressionStatement	"r_core_cmd0 ( core , ""T="" )"	261:5:6855:6879	939075	0	True				
ANR	939339	CallExpression	"r_core_cmd0 ( core , ""T="" )"		939075	0					
ANR	939340	Callee	r_core_cmd0		939075	0					
ANR	939341	Identifier	r_core_cmd0		939075	0					
ANR	939342	ArgumentList	core		939075	1					
ANR	939343	Argument	core		939075	0					
ANR	939344	Identifier	core		939075	0					
ANR	939345	Argument	"""T="""		939075	1					
ANR	939346	PrimaryExpression	"""T="""		939075	0					
ANR	939347	IdentifierDeclStatement	void * bed = r_cons_sleep_begin ( ) ;	262:5:6886:6918	939075	1	True				
ANR	939348	IdentifierDecl	* bed = r_cons_sleep_begin ( )		939075	0					
ANR	939349	IdentifierDeclType	void *		939075	0					
ANR	939350	Identifier	bed		939075	1					
ANR	939351	AssignmentExpression	* bed = r_cons_sleep_begin ( )		939075	2		=			
ANR	939352	Identifier	bed		939075	0					
ANR	939353	CallExpression	r_cons_sleep_begin ( )		939075	1					
ANR	939354	Callee	r_cons_sleep_begin		939075	0					
ANR	939355	Identifier	r_cons_sleep_begin		939075	0					
ANR	939356	ArgumentList			939075	1					
ANR	939357	ExpressionStatement	r_sys_sleep ( 1 )	263:5:6925:6940	939075	2	True				
ANR	939358	CallExpression	r_sys_sleep ( 1 )		939075	0					
ANR	939359	Callee	r_sys_sleep		939075	0					
ANR	939360	Identifier	r_sys_sleep		939075	0					
ANR	939361	ArgumentList	1		939075	1					
ANR	939362	Argument	1		939075	0					
ANR	939363	PrimaryExpression	1		939075	0					
ANR	939364	ExpressionStatement	r_cons_sleep_end ( bed )	264:5:6947:6969	939075	3	True				
ANR	939365	CallExpression	r_cons_sleep_end ( bed )		939075	0					
ANR	939366	Callee	r_cons_sleep_end		939075	0					
ANR	939367	Identifier	r_cons_sleep_end		939075	0					
ANR	939368	ArgumentList	bed		939075	1					
ANR	939369	Argument	bed		939075	0					
ANR	939370	Identifier	bed		939075	0					
ANR	939371	ExpressionStatement	r_cons_break_pop ( )	266:4:6981:7000	939075	2	True				
ANR	939372	CallExpression	r_cons_break_pop ( )		939075	0					
ANR	939373	Callee	r_cons_break_pop		939075	0					
ANR	939374	Identifier	r_cons_break_pop		939075	0					
ANR	939375	ArgumentList			939075	1					
ANR	939376	ElseStatement	else		939075	0					
ANR	939377	CompoundStatement		62:4:1395:1461	939075	0					
ANR	939378	ExpressionStatement	"eprintf ( ""Background thread syncing with http.sync started.\\n"" )"	269:4:7084:7147	939075	0	True				
ANR	939379	CallExpression	"eprintf ( ""Background thread syncing with http.sync started.\\n"" )"		939075	0					
ANR	939380	Callee	eprintf		939075	0					
ANR	939381	Identifier	eprintf		939075	0					
ANR	939382	ArgumentList	"""Background thread syncing with http.sync started.\\n"""		939075	1					
ANR	939383	Argument	"""Background thread syncing with http.sync started.\\n"""		939075	0					
ANR	939384	PrimaryExpression	"""Background thread syncing with http.sync started.\\n"""		939075	0					
ANR	939385	IdentifierDeclStatement	"RCoreTask * task = r_core_task_new ( core , true , ""T=&&"" , NULL , core ) ;"	270:4:7153:7219	939075	1	True				
ANR	939386	IdentifierDecl	"* task = r_core_task_new ( core , true , ""T=&&"" , NULL , core )"		939075	0					
ANR	939387	IdentifierDeclType	RCoreTask *		939075	0					
ANR	939388	Identifier	task		939075	1					
ANR	939389	AssignmentExpression	"* task = r_core_task_new ( core , true , ""T=&&"" , NULL , core )"		939075	2		=			
ANR	939390	Identifier	task		939075	0					
ANR	939391	CallExpression	"r_core_task_new ( core , true , ""T=&&"" , NULL , core )"		939075	1					
ANR	939392	Callee	r_core_task_new		939075	0					
ANR	939393	Identifier	r_core_task_new		939075	0					
ANR	939394	ArgumentList	core		939075	1					
ANR	939395	Argument	core		939075	0					
ANR	939396	Identifier	core		939075	0					
ANR	939397	Argument	true		939075	1					
ANR	939398	Identifier	true		939075	0					
ANR	939399	Argument	"""T=&&"""		939075	2					
ANR	939400	PrimaryExpression	"""T=&&"""		939075	0					
ANR	939401	Argument	NULL		939075	3					
ANR	939402	Identifier	NULL		939075	0					
ANR	939403	Argument	core		939075	4					
ANR	939404	Identifier	core		939075	0					
ANR	939405	ExpressionStatement	"r_core_task_enqueue ( core , task )"	271:4:7225:7257	939075	2	True				
ANR	939406	CallExpression	"r_core_task_enqueue ( core , task )"		939075	0					
ANR	939407	Callee	r_core_task_enqueue		939075	0					
ANR	939408	Identifier	r_core_task_enqueue		939075	0					
ANR	939409	ArgumentList	core		939075	1					
ANR	939410	Argument	core		939075	0					
ANR	939411	Identifier	core		939075	0					
ANR	939412	Argument	task		939075	1					
ANR	939413	Identifier	task		939075	0					
ANR	939414	ElseStatement	else		939075	0					
ANR	939415	CompoundStatement		65:9:1515:1515	939075	0					
ANR	939416	IfStatement	if ( atoi ( input + 1 ) > 0 || ( input [ 1 ] == '0' ) )		939075	0					
ANR	939417	Condition	atoi ( input + 1 ) > 0 || ( input [ 1 ] == '0' )	274:7:7282:7322	939075	0	True				
ANR	939418	OrExpression	atoi ( input + 1 ) > 0 || ( input [ 1 ] == '0' )		939075	0		||			
ANR	939419	RelationalExpression	atoi ( input + 1 ) > 0		939075	0		>			
ANR	939420	CallExpression	atoi ( input + 1 )		939075	0					
ANR	939421	Callee	atoi		939075	0					
ANR	939422	Identifier	atoi		939075	0					
ANR	939423	ArgumentList	input + 1		939075	1					
ANR	939424	Argument	input + 1		939075	0					
ANR	939425	AdditiveExpression	input + 1		939075	0		+			
ANR	939426	Identifier	input		939075	0					
ANR	939427	PrimaryExpression	1		939075	1					
ANR	939428	PrimaryExpression	0		939075	1					
ANR	939429	EqualityExpression	input [ 1 ] == '0'		939075	1		==			
ANR	939430	ArrayIndexing	input [ 1 ]		939075	0					
ANR	939431	Identifier	input		939075	0					
ANR	939432	PrimaryExpression	1		939075	1					
ANR	939433	PrimaryExpression	'0'		939075	1					
ANR	939434	CompoundStatement		66:50:1567:1567	939075	1					
ANR	939435	ExpressionStatement	core -> sync_index = 0	275:4:7331:7351	939075	0	True				
ANR	939436	AssignmentExpression	core -> sync_index = 0		939075	0		=			
ANR	939437	PtrMemberAccess	core -> sync_index		939075	0					
ANR	939438	Identifier	core		939075	0					
ANR	939439	Identifier	sync_index		939075	1					
ANR	939440	PrimaryExpression	0		939075	1					
ANR	939441	ElseStatement	else		939075	0					
ANR	939442	CompoundStatement		71:4:1707:1758	939075	0					
ANR	939443	IdentifierDeclStatement	RCoreLogCallback log_callback = ( input [ 1 ] == '*' ) ? log_callback_all : log_callback_r2 ;	277:4:7369:7459	939075	0	True				
ANR	939444	IdentifierDecl	log_callback = ( input [ 1 ] == '*' ) ? log_callback_all : log_callback_r2		939075	0					
ANR	939445	IdentifierDeclType	RCoreLogCallback		939075	0					
ANR	939446	Identifier	log_callback		939075	1					
ANR	939447	AssignmentExpression	log_callback = ( input [ 1 ] == '*' ) ? log_callback_all : log_callback_r2		939075	2		=			
ANR	939448	Identifier	log_callback		939075	0					
ANR	939449	ConditionalExpression	( input [ 1 ] == '*' ) ? log_callback_all : log_callback_r2		939075	1					
ANR	939450	Condition	input [ 1 ] == '*'		939075	0					
ANR	939451	EqualityExpression	input [ 1 ] == '*'		939075	0		==			
ANR	939452	ArrayIndexing	input [ 1 ]		939075	0					
ANR	939453	Identifier	input		939075	0					
ANR	939454	PrimaryExpression	1		939075	1					
ANR	939455	PrimaryExpression	'*'		939075	1					
ANR	939456	Identifier	log_callback_all		939075	1					
ANR	939457	Identifier	log_callback_r2		939075	2					
ANR	939458	IdentifierDeclStatement	"char * res = r_core_log_get ( core , core -> sync_index ) ;"	279:4:7465:7516	939075	1	True				
ANR	939459	IdentifierDecl	"* res = r_core_log_get ( core , core -> sync_index )"		939075	0					
ANR	939460	IdentifierDeclType	char *		939075	0					
ANR	939461	Identifier	res		939075	1					
ANR	939462	AssignmentExpression	"* res = r_core_log_get ( core , core -> sync_index )"		939075	2		=			
ANR	939463	Identifier	res		939075	0					
ANR	939464	CallExpression	"r_core_log_get ( core , core -> sync_index )"		939075	1					
ANR	939465	Callee	r_core_log_get		939075	0					
ANR	939466	Identifier	r_core_log_get		939075	0					
ANR	939467	ArgumentList	core		939075	1					
ANR	939468	Argument	core		939075	0					
ANR	939469	Identifier	core		939075	0					
ANR	939470	Argument	core -> sync_index		939075	1					
ANR	939471	PtrMemberAccess	core -> sync_index		939075	0					
ANR	939472	Identifier	core		939075	0					
ANR	939473	Identifier	sync_index		939075	1					
ANR	939474	IfStatement	if ( res )		939075	2					
ANR	939475	Condition	res	280:8:7526:7528	939075	0	True				
ANR	939476	Identifier	res		939075	0					
ANR	939477	CompoundStatement		73:5:1780:1817	939075	1					
ANR	939478	IdentifierDeclStatement	int idx = getIndexFromLogString ( res ) ;	281:5:7538:7575	939075	0	True				
ANR	939479	IdentifierDecl	idx = getIndexFromLogString ( res )		939075	0					
ANR	939480	IdentifierDeclType	int		939075	0					
ANR	939481	Identifier	idx		939075	1					
ANR	939482	AssignmentExpression	idx = getIndexFromLogString ( res )		939075	2		=			
ANR	939483	Identifier	idx		939075	0					
ANR	939484	CallExpression	getIndexFromLogString ( res )		939075	1					
ANR	939485	Callee	getIndexFromLogString		939075	0					
ANR	939486	Identifier	getIndexFromLogString		939075	0					
ANR	939487	ArgumentList	res		939075	1					
ANR	939488	Argument	res		939075	0					
ANR	939489	Identifier	res		939075	0					
ANR	939490	IfStatement	if ( idx != - 1 )		939075	1					
ANR	939491	Condition	idx != - 1	282:9:7586:7594	939075	0	True				
ANR	939492	EqualityExpression	idx != - 1		939075	0		!=			
ANR	939493	Identifier	idx		939075	0					
ANR	939494	UnaryOperationExpression	- 1		939075	1					
ANR	939495	UnaryOperator	-		939075	0					
ANR	939496	PrimaryExpression	1		939075	1					
ANR	939497	CompoundStatement		74:20:1839:1839	939075	1					
ANR	939498	ExpressionStatement	core -> sync_index = idx + 1	283:6:7605:7631	939075	0	True				
ANR	939499	AssignmentExpression	core -> sync_index = idx + 1		939075	0		=			
ANR	939500	PtrMemberAccess	core -> sync_index		939075	0					
ANR	939501	Identifier	core		939075	0					
ANR	939502	Identifier	sync_index		939075	1					
ANR	939503	AdditiveExpression	idx + 1		939075	1		+			
ANR	939504	Identifier	idx		939075	0					
ANR	939505	PrimaryExpression	1		939075	1					
ANR	939506	ExpressionStatement	"r_core_log_run ( core , res , log_callback )"	285:5:7645:7685	939075	2	True				
ANR	939507	CallExpression	"r_core_log_run ( core , res , log_callback )"		939075	0					
ANR	939508	Callee	r_core_log_run		939075	0					
ANR	939509	Identifier	r_core_log_run		939075	0					
ANR	939510	ArgumentList	core		939075	1					
ANR	939511	Argument	core		939075	0					
ANR	939512	Identifier	core		939075	0					
ANR	939513	Argument	res		939075	1					
ANR	939514	Identifier	res		939075	0					
ANR	939515	Argument	log_callback		939075	2					
ANR	939516	Identifier	log_callback		939075	0					
ANR	939517	ExpressionStatement	free ( res )	286:5:7692:7702	939075	3	True				
ANR	939518	CallExpression	free ( res )		939075	0					
ANR	939519	Callee	free		939075	0					
ANR	939520	Identifier	free		939075	0					
ANR	939521	ArgumentList	res		939075	1					
ANR	939522	Argument	res		939075	0					
ANR	939523	Identifier	res		939075	0					
ANR	939524	ElseStatement	else		939075	0					
ANR	939525	CompoundStatement		79:11:1957:1957	939075	0					
ANR	939526	ExpressionStatement	"r_cons_printf ( ""Please check e http.sync\\n"" )"	288:5:7722:7766	939075	0	True				
ANR	939527	CallExpression	"r_cons_printf ( ""Please check e http.sync\\n"" )"		939075	0					
ANR	939528	Callee	r_cons_printf		939075	0					
ANR	939529	Identifier	r_cons_printf		939075	0					
ANR	939530	ArgumentList	"""Please check e http.sync\\n"""		939075	1					
ANR	939531	Argument	"""Please check e http.sync\\n"""		939075	0					
ANR	939532	PrimaryExpression	"""Please check e http.sync\\n"""		939075	0					
ANR	939533	BreakStatement	break ;	292:2:7785:7790	939075	17	True				
ANR	939534	Label	case ' ' :	293:1:7793:7801	939075	18	True				
ANR	939535	IfStatement	if ( n > 0 || * input == '0' )		939075	19					
ANR	939536	Condition	n > 0 || * input == '0'	294:6:7817:7838	939075	0	True				
ANR	939537	OrExpression	n > 0 || * input == '0'		939075	0		||			
ANR	939538	RelationalExpression	n > 0		939075	0		>			
ANR	939539	Identifier	n		939075	0					
ANR	939540	PrimaryExpression	0		939075	1					
ANR	939541	EqualityExpression	* input == '0'		939075	1		==			
ANR	939542	UnaryOperationExpression	* input		939075	0					
ANR	939543	UnaryOperator	*		939075	0					
ANR	939544	Identifier	input		939075	1					
ANR	939545	PrimaryExpression	'0'		939075	1					
ANR	939546	CompoundStatement		86:30:2083:2083	939075	1					
ANR	939547	ExpressionStatement	"r_core_log_list ( core , n , n2 , * input )"	295:3:7846:7883	939075	0	True				
ANR	939548	CallExpression	"r_core_log_list ( core , n , n2 , * input )"		939075	0					
ANR	939549	Callee	r_core_log_list		939075	0					
ANR	939550	Identifier	r_core_log_list		939075	0					
ANR	939551	ArgumentList	core		939075	1					
ANR	939552	Argument	core		939075	0					
ANR	939553	Identifier	core		939075	0					
ANR	939554	Argument	n		939075	1					
ANR	939555	Identifier	n		939075	0					
ANR	939556	Argument	n2		939075	2					
ANR	939557	Identifier	n2		939075	0					
ANR	939558	Argument	* input		939075	3					
ANR	939559	UnaryOperationExpression	* input		939075	0					
ANR	939560	UnaryOperator	*		939075	0					
ANR	939561	Identifier	input		939075	1					
ANR	939562	ElseStatement	else		939075	0					
ANR	939563	CompoundStatement		88:9:2136:2136	939075	0					
ANR	939564	ExpressionStatement	"r_core_log_add ( core , input + 1 )"	297:3:7899:7931	939075	0	True				
ANR	939565	CallExpression	"r_core_log_add ( core , input + 1 )"		939075	0					
ANR	939566	Callee	r_core_log_add		939075	0					
ANR	939567	Identifier	r_core_log_add		939075	0					
ANR	939568	ArgumentList	core		939075	1					
ANR	939569	Argument	core		939075	0					
ANR	939570	Identifier	core		939075	0					
ANR	939571	Argument	input + 1		939075	1					
ANR	939572	AdditiveExpression	input + 1		939075	0		+			
ANR	939573	Identifier	input		939075	0					
ANR	939574	PrimaryExpression	1		939075	1					
ANR	939575	BreakStatement	break ;	299:2:7939:7944	939075	20	True				
ANR	939576	Label	case 'm' :	300:1:7947:7955	939075	21	True				
ANR	939577	IfStatement	if ( n > 0 )		939075	22					
ANR	939578	Condition	n > 0	301:6:7971:7975	939075	0	True				
ANR	939579	RelationalExpression	n > 0		939075	0		>			
ANR	939580	Identifier	n		939075	0					
ANR	939581	PrimaryExpression	0		939075	1					
ANR	939582	CompoundStatement		93:13:2220:2220	939075	1					
ANR	939583	ExpressionStatement	"r_core_log_list ( core , n , 1 , 't' )"	302:3:7983:8016	939075	0	True				
ANR	939584	CallExpression	"r_core_log_list ( core , n , 1 , 't' )"		939075	0					
ANR	939585	Callee	r_core_log_list		939075	0					
ANR	939586	Identifier	r_core_log_list		939075	0					
ANR	939587	ArgumentList	core		939075	1					
ANR	939588	Argument	core		939075	0					
ANR	939589	Identifier	core		939075	0					
ANR	939590	Argument	n		939075	1					
ANR	939591	Identifier	n		939075	0					
ANR	939592	Argument	1		939075	2					
ANR	939593	PrimaryExpression	1		939075	0					
ANR	939594	Argument	't'		939075	3					
ANR	939595	PrimaryExpression	't'		939075	0					
ANR	939596	ElseStatement	else		939075	0					
ANR	939597	CompoundStatement		95:9:2269:2269	939075	0					
ANR	939598	ExpressionStatement	"r_core_log_list ( core , n , 0 , 't' )"	304:3:8032:8065	939075	0	True				
ANR	939599	CallExpression	"r_core_log_list ( core , n , 0 , 't' )"		939075	0					
ANR	939600	Callee	r_core_log_list		939075	0					
ANR	939601	Identifier	r_core_log_list		939075	0					
ANR	939602	ArgumentList	core		939075	1					
ANR	939603	Argument	core		939075	0					
ANR	939604	Identifier	core		939075	0					
ANR	939605	Argument	n		939075	1					
ANR	939606	Identifier	n		939075	0					
ANR	939607	Argument	0		939075	2					
ANR	939608	PrimaryExpression	0		939075	0					
ANR	939609	Argument	't'		939075	3					
ANR	939610	PrimaryExpression	't'		939075	0					
ANR	939611	BreakStatement	break ;	306:2:8073:8078	939075	23	True				
ANR	939612	Label	case 'j' :	307:1:8081:8089	939075	24	True				
ANR	939613	Label	case '*' :	308:1:8100:8108	939075	25	True				
ANR	939614	Label	case '\\0' :	309:1:8111:8120	939075	26	True				
ANR	939615	ExpressionStatement	"r_core_log_list ( core , n , n2 , * input )"	310:2:8124:8161	939075	27	True				
ANR	939616	CallExpression	"r_core_log_list ( core , n , n2 , * input )"		939075	0					
ANR	939617	Callee	r_core_log_list		939075	0					
ANR	939618	Identifier	r_core_log_list		939075	0					
ANR	939619	ArgumentList	core		939075	1					
ANR	939620	Argument	core		939075	0					
ANR	939621	Identifier	core		939075	0					
ANR	939622	Argument	n		939075	1					
ANR	939623	Identifier	n		939075	0					
ANR	939624	Argument	n2		939075	2					
ANR	939625	Identifier	n2		939075	0					
ANR	939626	Argument	* input		939075	3					
ANR	939627	UnaryOperationExpression	* input		939075	0					
ANR	939628	UnaryOperator	*		939075	0					
ANR	939629	Identifier	input		939075	1					
ANR	939630	BreakStatement	break ;	311:2:8165:8170	939075	28	True				
ANR	939631	ReturnStatement	return 0 ;	313:1:8176:8184	939075	9	True				
ANR	939632	PrimaryExpression	0		939075	0					
ANR	939633	ReturnType	static int		939075	1					
ANR	939634	Identifier	cmd_log		939075	2					
ANR	939635	ParameterList	"void * data , const char * input"		939075	3					
ANR	939636	Parameter	void * data	209:19:5726:5735	939075	0	True				
ANR	939637	ParameterType	void *		939075	0					
ANR	939638	Identifier	data		939075	1					
ANR	939639	Parameter	const char * input	209:31:5738:5754	939075	1	True				
ANR	939640	ParameterType	const char *		939075	0					
ANR	939641	Identifier	input		939075	1					
ANR	939642	CFGEntryNode	ENTRY		939075		True				
ANR	939643	CFGExitNode	EXIT		939075		True				
ANR	939644	Symbol	bed		939075						
ANR	939645	Symbol	data		939075						
ANR	939646	Symbol	n2		939075						
ANR	939647	Symbol	input2		939075						
ANR	939648	Symbol	r_core_task_new		939075						
ANR	939649	Symbol	* input		939075						
ANR	939650	Symbol	* core		939075						
ANR	939651	Symbol	strchr		939075						
ANR	939652	Symbol	r_core_log_get		939075						
ANR	939653	Symbol	core -> sync_index		939075						
ANR	939654	Symbol	core -> log		939075						
ANR	939655	Symbol	r_cons_is_breaked		939075						
ANR	939656	Symbol	arg		939075						
ANR	939657	Symbol	core -> log -> last		939075						
ANR	939658	Symbol	* core -> log		939075						
ANR	939659	Symbol	* * core		939075						
ANR	939660	Symbol	atoi		939075						
ANR	939661	Symbol	res		939075						
ANR	939662	Symbol	r_file_slurp		939075						
ANR	939663	Symbol	b		939075						
ANR	939664	Symbol	r_cons_is_interactive		939075						
ANR	939665	Symbol	NULL		939075						
ANR	939666	Symbol	log_callback		939075						
ANR	939667	Symbol	n		939075						
ANR	939668	Symbol	log_callback_all		939075						
ANR	939669	Symbol	p		939075						
ANR	939670	Symbol	log_callback_r2		939075						
ANR	939671	Symbol	getIndexFromLogString		939075						
ANR	939672	Symbol	input		939075						
ANR	939673	Symbol	core		939075						
ANR	939674	Symbol	task		939075						
ANR	939675	Symbol	help_msg_T		939075						
ANR	939676	Symbol	true		939075						
ANR	939677	Symbol	r_cons_sleep_begin		939075						
ANR	939678	Symbol	idx		939075						
ANR	939679	Function	cmd_plugins	316:0:8189:9876							
ANR	939680	FunctionDef	"cmd_plugins (void * data , const char * input)"		939679	0					
ANR	939681	CompoundStatement		316:54:8243:9876	939679	0					
ANR	939682	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	317:1:8246:8274	939679	0	True				
ANR	939683	IdentifierDecl	* core = ( RCore * ) data		939679	0					
ANR	939684	IdentifierDeclType	RCore *		939679	0					
ANR	939685	Identifier	core		939679	1					
ANR	939686	AssignmentExpression	* core = ( RCore * ) data		939679	2		=			
ANR	939687	Identifier	core		939679	0					
ANR	939688	CastExpression	( RCore * ) data		939679	1					
ANR	939689	CastTarget	RCore *		939679	0					
ANR	939690	Identifier	data		939679	1					
ANR	939691	SwitchStatement	switch ( input [ 0 ] )		939679	1					
ANR	939692	Condition	input [ 0 ]	318:9:8285:8292	939679	0	True				
ANR	939693	ArrayIndexing	input [ 0 ]		939679	0					
ANR	939694	Identifier	input		939679	0					
ANR	939695	PrimaryExpression	0		939679	1					
ANR	939696	CompoundStatement		3:19:51:51	939679	1					
ANR	939697	Label	case 0 :	319:1:8298:8304	939679	0	True				
ANR	939698	ExpressionStatement	"r_core_cmd_help ( core , help_msg_L )"	320:2:8308:8342	939679	1	True				
ANR	939699	CallExpression	"r_core_cmd_help ( core , help_msg_L )"		939679	0					
ANR	939700	Callee	r_core_cmd_help		939679	0					
ANR	939701	Identifier	r_core_cmd_help		939679	0					
ANR	939702	ArgumentList	core		939679	1					
ANR	939703	Argument	core		939679	0					
ANR	939704	Identifier	core		939679	0					
ANR	939705	Argument	help_msg_L		939679	1					
ANR	939706	Identifier	help_msg_L		939679	0					
ANR	939707	BreakStatement	break ;	322:2:8384:8389	939679	2	True				
ANR	939708	Label	case '-' :	323:1:8392:8400	939679	3	True				
ANR	939709	ExpressionStatement	"r_lib_close ( core -> lib , r_str_trim_ro ( input + 1 ) )"	324:2:8404:8454	939679	4	True				
ANR	939710	CallExpression	"r_lib_close ( core -> lib , r_str_trim_ro ( input + 1 ) )"		939679	0					
ANR	939711	Callee	r_lib_close		939679	0					
ANR	939712	Identifier	r_lib_close		939679	0					
ANR	939713	ArgumentList	core -> lib		939679	1					
ANR	939714	Argument	core -> lib		939679	0					
ANR	939715	PtrMemberAccess	core -> lib		939679	0					
ANR	939716	Identifier	core		939679	0					
ANR	939717	Identifier	lib		939679	1					
ANR	939718	Argument	r_str_trim_ro ( input + 1 )		939679	1					
ANR	939719	CallExpression	r_str_trim_ro ( input + 1 )		939679	0					
ANR	939720	Callee	r_str_trim_ro		939679	0					
ANR	939721	Identifier	r_str_trim_ro		939679	0					
ANR	939722	ArgumentList	input + 1		939679	1					
ANR	939723	Argument	input + 1		939679	0					
ANR	939724	AdditiveExpression	input + 1		939679	0		+			
ANR	939725	Identifier	input		939679	0					
ANR	939726	PrimaryExpression	1		939679	1					
ANR	939727	BreakStatement	break ;	325:2:8458:8463	939679	5	True				
ANR	939728	Label	case ' ' :	326:1:8466:8474	939679	6	True				
ANR	939729	ExpressionStatement	"r_lib_open ( core -> lib , r_str_trim_ro ( input + 1 ) )"	327:2:8478:8527	939679	7	True				
ANR	939730	CallExpression	"r_lib_open ( core -> lib , r_str_trim_ro ( input + 1 ) )"		939679	0					
ANR	939731	Callee	r_lib_open		939679	0					
ANR	939732	Identifier	r_lib_open		939679	0					
ANR	939733	ArgumentList	core -> lib		939679	1					
ANR	939734	Argument	core -> lib		939679	0					
ANR	939735	PtrMemberAccess	core -> lib		939679	0					
ANR	939736	Identifier	core		939679	0					
ANR	939737	Identifier	lib		939679	1					
ANR	939738	Argument	r_str_trim_ro ( input + 1 )		939679	1					
ANR	939739	CallExpression	r_str_trim_ro ( input + 1 )		939679	0					
ANR	939740	Callee	r_str_trim_ro		939679	0					
ANR	939741	Identifier	r_str_trim_ro		939679	0					
ANR	939742	ArgumentList	input + 1		939679	1					
ANR	939743	Argument	input + 1		939679	0					
ANR	939744	AdditiveExpression	input + 1		939679	0		+			
ANR	939745	Identifier	input		939679	0					
ANR	939746	PrimaryExpression	1		939679	1					
ANR	939747	BreakStatement	break ;	328:2:8531:8536	939679	8	True				
ANR	939748	Label	case '?' :	329:1:8539:8547	939679	9	True				
ANR	939749	ExpressionStatement	"r_core_cmd_help ( core , help_msg_L )"	330:2:8551:8585	939679	10	True				
ANR	939750	CallExpression	"r_core_cmd_help ( core , help_msg_L )"		939679	0					
ANR	939751	Callee	r_core_cmd_help		939679	0					
ANR	939752	Identifier	r_core_cmd_help		939679	0					
ANR	939753	ArgumentList	core		939679	1					
ANR	939754	Argument	core		939679	0					
ANR	939755	Identifier	core		939679	0					
ANR	939756	Argument	help_msg_L		939679	1					
ANR	939757	Identifier	help_msg_L		939679	0					
ANR	939758	BreakStatement	break ;	331:2:8589:8594	939679	11	True				
ANR	939759	Label	case 'm' :	332:1:8597:8605	939679	12	True				
ANR	939760	ExpressionStatement	"r_core_cmdf ( core , ""mL%s"" , input + 1 )"	333:2:8617:8654	939679	13	True				
ANR	939761	CallExpression	"r_core_cmdf ( core , ""mL%s"" , input + 1 )"		939679	0					
ANR	939762	Callee	r_core_cmdf		939679	0					
ANR	939763	Identifier	r_core_cmdf		939679	0					
ANR	939764	ArgumentList	core		939679	1					
ANR	939765	Argument	core		939679	0					
ANR	939766	Identifier	core		939679	0					
ANR	939767	Argument	"""mL%s"""		939679	1					
ANR	939768	PrimaryExpression	"""mL%s"""		939679	0					
ANR	939769	Argument	input + 1		939679	2					
ANR	939770	AdditiveExpression	input + 1		939679	0		+			
ANR	939771	Identifier	input		939679	0					
ANR	939772	PrimaryExpression	1		939679	1					
ANR	939773	BreakStatement	break ;	334:2:8658:8663	939679	14	True				
ANR	939774	Label	case 'd' :	335:1:8666:8674	939679	15	True				
ANR	939775	ExpressionStatement	"r_core_cmdf ( core , ""dL%s"" , input + 1 )"	336:2:8686:8723	939679	16	True				
ANR	939776	CallExpression	"r_core_cmdf ( core , ""dL%s"" , input + 1 )"		939679	0					
ANR	939777	Callee	r_core_cmdf		939679	0					
ANR	939778	Identifier	r_core_cmdf		939679	0					
ANR	939779	ArgumentList	core		939679	1					
ANR	939780	Argument	core		939679	0					
ANR	939781	Identifier	core		939679	0					
ANR	939782	Argument	"""dL%s"""		939679	1					
ANR	939783	PrimaryExpression	"""dL%s"""		939679	0					
ANR	939784	Argument	input + 1		939679	2					
ANR	939785	AdditiveExpression	input + 1		939679	0		+			
ANR	939786	Identifier	input		939679	0					
ANR	939787	PrimaryExpression	1		939679	1					
ANR	939788	BreakStatement	break ;	337:2:8727:8732	939679	17	True				
ANR	939789	Label	case 'h' :	338:1:8735:8743	939679	18	True				
ANR	939790	ExpressionStatement	"r_core_cmd0 ( core , ""ph"" )"	339:2:8755:8779	939679	19	True				
ANR	939791	CallExpression	"r_core_cmd0 ( core , ""ph"" )"		939679	0					
ANR	939792	Callee	r_core_cmd0		939679	0					
ANR	939793	Identifier	r_core_cmd0		939679	0					
ANR	939794	ArgumentList	core		939679	1					
ANR	939795	Argument	core		939679	0					
ANR	939796	Identifier	core		939679	0					
ANR	939797	Argument	"""ph"""		939679	1					
ANR	939798	PrimaryExpression	"""ph"""		939679	0					
ANR	939799	BreakStatement	break ;	340:2:8813:8818	939679	20	True				
ANR	939800	Label	case 'a' :	341:1:8821:8829	939679	21	True				
ANR	939801	ExpressionStatement	"r_core_cmd0 ( core , ""e asm.arch=??"" )"	342:2:8841:8876	939679	22	True				
ANR	939802	CallExpression	"r_core_cmd0 ( core , ""e asm.arch=??"" )"		939679	0					
ANR	939803	Callee	r_core_cmd0		939679	0					
ANR	939804	Identifier	r_core_cmd0		939679	0					
ANR	939805	ArgumentList	core		939679	1					
ANR	939806	Argument	core		939679	0					
ANR	939807	Identifier	core		939679	0					
ANR	939808	Argument	"""e asm.arch=??"""		939679	1					
ANR	939809	PrimaryExpression	"""e asm.arch=??"""		939679	0					
ANR	939810	BreakStatement	break ;	343:2:8880:8885	939679	23	True				
ANR	939811	Label	case 'D' :	344:1:8888:8896	939679	24	True				
ANR	939812	IfStatement	if ( input [ 1 ] == ' ' )		939679	25					
ANR	939813	Condition	input [ 1 ] == ' '	345:6:8912:8926	939679	0	True				
ANR	939814	EqualityExpression	input [ 1 ] == ' '		939679	0		==			
ANR	939815	ArrayIndexing	input [ 1 ]		939679	0					
ANR	939816	Identifier	input		939679	0					
ANR	939817	PrimaryExpression	1		939679	1					
ANR	939818	PrimaryExpression	' '		939679	1					
ANR	939819	CompoundStatement		30:23:685:685	939679	1					
ANR	939820	ExpressionStatement	"r_core_cmdf ( core , ""e cmd.pdc=%s"" , r_str_trim_ro ( input + 2 ) )"	346:3:8934:8995	939679	0	True				
ANR	939821	CallExpression	"r_core_cmdf ( core , ""e cmd.pdc=%s"" , r_str_trim_ro ( input + 2 ) )"		939679	0					
ANR	939822	Callee	r_core_cmdf		939679	0					
ANR	939823	Identifier	r_core_cmdf		939679	0					
ANR	939824	ArgumentList	core		939679	1					
ANR	939825	Argument	core		939679	0					
ANR	939826	Identifier	core		939679	0					
ANR	939827	Argument	"""e cmd.pdc=%s"""		939679	1					
ANR	939828	PrimaryExpression	"""e cmd.pdc=%s"""		939679	0					
ANR	939829	Argument	r_str_trim_ro ( input + 2 )		939679	2					
ANR	939830	CallExpression	r_str_trim_ro ( input + 2 )		939679	0					
ANR	939831	Callee	r_str_trim_ro		939679	0					
ANR	939832	Identifier	r_str_trim_ro		939679	0					
ANR	939833	ArgumentList	input + 2		939679	1					
ANR	939834	Argument	input + 2		939679	0					
ANR	939835	AdditiveExpression	input + 2		939679	0		+			
ANR	939836	Identifier	input		939679	0					
ANR	939837	PrimaryExpression	2		939679	1					
ANR	939838	ElseStatement	else		939679	0					
ANR	939839	CompoundStatement		32:9:762:762	939679	0					
ANR	939840	ExpressionStatement	"r_core_cmd0 ( core , ""e cmd.pdc=?"" )"	348:3:9011:9044	939679	0	True				
ANR	939841	CallExpression	"r_core_cmd0 ( core , ""e cmd.pdc=?"" )"		939679	0					
ANR	939842	Callee	r_core_cmd0		939679	0					
ANR	939843	Identifier	r_core_cmd0		939679	0					
ANR	939844	ArgumentList	core		939679	1					
ANR	939845	Argument	core		939679	0					
ANR	939846	Identifier	core		939679	0					
ANR	939847	Argument	"""e cmd.pdc=?"""		939679	1					
ANR	939848	PrimaryExpression	"""e cmd.pdc=?"""		939679	0					
ANR	939849	BreakStatement	break ;	350:2:9052:9057	939679	26	True				
ANR	939850	Label	case 'l' :	351:1:9060:9068	939679	27	True				
ANR	939851	ExpressionStatement	"r_core_cmd0 ( core , ""#!"" )"	352:2:9080:9104	939679	28	True				
ANR	939852	CallExpression	"r_core_cmd0 ( core , ""#!"" )"		939679	0					
ANR	939853	Callee	r_core_cmd0		939679	0					
ANR	939854	Identifier	r_core_cmd0		939679	0					
ANR	939855	ArgumentList	core		939679	1					
ANR	939856	Argument	core		939679	0					
ANR	939857	Identifier	core		939679	0					
ANR	939858	Argument	"""#!"""		939679	1					
ANR	939859	PrimaryExpression	"""#!"""		939679	0					
ANR	939860	BreakStatement	break ;	353:2:9108:9113	939679	29	True				
ANR	939861	Label	case 'L' :	354:1:9116:9124	939679	30	True				
ANR	939862	ExpressionStatement	screenlock ( core )	355:2:9136:9153	939679	31	True				
ANR	939863	CallExpression	screenlock ( core )		939679	0					
ANR	939864	Callee	screenlock		939679	0					
ANR	939865	Identifier	screenlock		939679	0					
ANR	939866	ArgumentList	core		939679	1					
ANR	939867	Argument	core		939679	0					
ANR	939868	Identifier	core		939679	0					
ANR	939869	BreakStatement	break ;	356:2:9157:9162	939679	32	True				
ANR	939870	Label	case 'o' :	357:1:9165:9173	939679	33	True				
ANR	939871	Label	case 'i' :	358:1:9184:9192	939679	34	True				
ANR	939872	ExpressionStatement	"r_core_cmdf ( core , ""%cL"" , input [ 0 ] )"	359:2:9204:9239	939679	35	True				
ANR	939873	CallExpression	"r_core_cmdf ( core , ""%cL"" , input [ 0 ] )"		939679	0					
ANR	939874	Callee	r_core_cmdf		939679	0					
ANR	939875	Identifier	r_core_cmdf		939679	0					
ANR	939876	ArgumentList	core		939679	1					
ANR	939877	Argument	core		939679	0					
ANR	939878	Identifier	core		939679	0					
ANR	939879	Argument	"""%cL"""		939679	1					
ANR	939880	PrimaryExpression	"""%cL"""		939679	0					
ANR	939881	Argument	input [ 0 ]		939679	2					
ANR	939882	ArrayIndexing	input [ 0 ]		939679	0					
ANR	939883	Identifier	input		939679	0					
ANR	939884	PrimaryExpression	0		939679	1					
ANR	939885	BreakStatement	break ;	360:2:9243:9248	939679	36	True				
ANR	939886	Label	case 'c' :	361:1:9251:9259	939679	37	True				
ANR	939887	CompoundStatement		48:2:1048:1063	939679	38					
ANR	939888	IdentifierDeclStatement	RListIter * iter ;	362:2:9273:9288	939679	0	True				
ANR	939889	IdentifierDecl	* iter		939679	0					
ANR	939890	IdentifierDeclType	RListIter *		939679	0					
ANR	939891	Identifier	iter		939679	1					
ANR	939892	IdentifierDeclStatement	RCorePlugin * cp ;	363:2:9292:9307	939679	1	True				
ANR	939893	IdentifierDecl	* cp		939679	0					
ANR	939894	IdentifierDeclType	RCorePlugin *		939679	0					
ANR	939895	Identifier	cp		939679	1					
ANR	939896	SwitchStatement	switch ( input [ 1 ] )		939679	2					
ANR	939897	Condition	input [ 1 ]	364:10:9319:9326	939679	0	True				
ANR	939898	ArrayIndexing	input [ 1 ]		939679	0					
ANR	939899	Identifier	input		939679	0					
ANR	939900	PrimaryExpression	1		939679	1					
ANR	939901	CompoundStatement		49:20:1085:1085	939679	1					
ANR	939902	Label	case 'j' :	365:2:9333:9341	939679	0	True				
ANR	939903	CompoundStatement		52:3:1128:1156	939679	1					
ANR	939904	ExpressionStatement	"r_cons_printf ( ""["" )"	366:3:9348:9367	939679	0	True				
ANR	939905	CallExpression	"r_cons_printf ( ""["" )"		939679	0					
ANR	939906	Callee	r_cons_printf		939679	0					
ANR	939907	Identifier	r_cons_printf		939679	0					
ANR	939908	ArgumentList	"""["""		939679	1					
ANR	939909	Argument	"""["""		939679	0					
ANR	939910	PrimaryExpression	"""["""		939679	0					
ANR	939911	IdentifierDeclStatement	bool is_first_element = true ;	367:3:9372:9400	939679	1	True				
ANR	939912	IdentifierDecl	is_first_element = true		939679	0					
ANR	939913	IdentifierDeclType	bool		939679	0					
ANR	939914	Identifier	is_first_element		939679	1					
ANR	939915	AssignmentExpression	is_first_element = true		939679	2		=			
ANR	939916	Identifier	true		939679	0					
ANR	939917	Identifier	true		939679	1					
ANR	939918	Statement	r_list_foreach	368:3:9405:9418	939679	2	True				
ANR	939919	Statement	(	368:18:9420:9420	939679	3	True				
ANR	939920	Statement	core	368:19:9421:9424	939679	4	True				
ANR	939921	Statement	->	368:23:9425:9426	939679	5	True				
ANR	939922	Statement	rcmd	368:25:9427:9430	939679	6	True				
ANR	939923	Statement	->	368:29:9431:9432	939679	7	True				
ANR	939924	Statement	plist	368:31:9433:9437	939679	8	True				
ANR	939925	Statement	","	368:36:9438:9438	939679	9	True				
ANR	939926	Statement	iter	368:38:9440:9443	939679	10	True				
ANR	939927	Statement	","	368:42:9444:9444	939679	11	True				
ANR	939928	Statement	cp	368:44:9446:9447	939679	12	True				
ANR	939929	Statement	)	368:46:9448:9448	939679	13	True				
ANR	939930	CompoundStatement		53:48:1206:1206	939679	14					
ANR	939931	ExpressionStatement	"r_cons_printf ( ""%s{\\""Name\\"":\\""%s\\"",\\""Description\\"":\\""%s\\""}"" , is_first_element ? """" : "","" , cp -> name , cp -> desc )"	369:4:9456:9569	939679	0	True				
ANR	939932	CallExpression	"r_cons_printf ( ""%s{\\""Name\\"":\\""%s\\"",\\""Description\\"":\\""%s\\""}"" , is_first_element ? """" : "","" , cp -> name , cp -> desc )"		939679	0					
ANR	939933	Callee	r_cons_printf		939679	0					
ANR	939934	Identifier	r_cons_printf		939679	0					
ANR	939935	ArgumentList	"""%s{\\""Name\\"":\\""%s\\"",\\""Description\\"":\\""%s\\""}"""		939679	1					
ANR	939936	Argument	"""%s{\\""Name\\"":\\""%s\\"",\\""Description\\"":\\""%s\\""}"""		939679	0					
ANR	939937	PrimaryExpression	"""%s{\\""Name\\"":\\""%s\\"",\\""Description\\"":\\""%s\\""}"""		939679	0					
ANR	939938	Argument	"is_first_element ? """" : "","""		939679	1					
ANR	939939	ConditionalExpression	"is_first_element ? """" : "","""		939679	0					
ANR	939940	Condition	is_first_element		939679	0					
ANR	939941	Identifier	is_first_element		939679	0					
ANR	939942	PrimaryExpression	""""""		939679	1					
ANR	939943	PrimaryExpression	""","""		939679	2					
ANR	939944	Argument	cp -> name		939679	2					
ANR	939945	PtrMemberAccess	cp -> name		939679	0					
ANR	939946	Identifier	cp		939679	0					
ANR	939947	Identifier	name		939679	1					
ANR	939948	Argument	cp -> desc		939679	3					
ANR	939949	PtrMemberAccess	cp -> desc		939679	0					
ANR	939950	Identifier	cp		939679	0					
ANR	939951	Identifier	desc		939679	1					
ANR	939952	ExpressionStatement	is_first_element = false	371:4:9575:9599	939679	1	True				
ANR	939953	AssignmentExpression	is_first_element = false		939679	0		=			
ANR	939954	Identifier	is_first_element		939679	0					
ANR	939955	Identifier	false		939679	1					
ANR	939956	ExpressionStatement	"r_cons_printf ( ""]\\n"" )"	373:3:9609:9630	939679	15	True				
ANR	939957	CallExpression	"r_cons_printf ( ""]\\n"" )"		939679	0					
ANR	939958	Callee	r_cons_printf		939679	0					
ANR	939959	Identifier	r_cons_printf		939679	0					
ANR	939960	ArgumentList	"""]\\n"""		939679	1					
ANR	939961	Argument	"""]\\n"""		939679	0					
ANR	939962	PrimaryExpression	"""]\\n"""		939679	0					
ANR	939963	BreakStatement	break ;	374:3:9635:9640	939679	16	True				
ANR	939964	Label	case 0 :	376:2:9649:9655	939679	2	True				
ANR	939965	ExpressionStatement	r_lib_list ( core -> lib )	377:3:9660:9682	939679	3	True				
ANR	939966	CallExpression	r_lib_list ( core -> lib )		939679	0					
ANR	939967	Callee	r_lib_list		939679	0					
ANR	939968	Identifier	r_lib_list		939679	0					
ANR	939969	ArgumentList	core -> lib		939679	1					
ANR	939970	Argument	core -> lib		939679	0					
ANR	939971	PtrMemberAccess	core -> lib		939679	0					
ANR	939972	Identifier	core		939679	0					
ANR	939973	Identifier	lib		939679	1					
ANR	939974	Statement	r_list_foreach	378:3:9687:9700	939679	4	True				
ANR	939975	Statement	(	378:18:9702:9702	939679	5	True				
ANR	939976	Statement	core	378:19:9703:9706	939679	6	True				
ANR	939977	Statement	->	378:23:9707:9708	939679	7	True				
ANR	939978	Statement	rcmd	378:25:9709:9712	939679	8	True				
ANR	939979	Statement	->	378:29:9713:9714	939679	9	True				
ANR	939980	Statement	plist	378:31:9715:9719	939679	10	True				
ANR	939981	Statement	","	378:36:9720:9720	939679	11	True				
ANR	939982	Statement	iter	378:38:9722:9725	939679	12	True				
ANR	939983	Statement	","	378:42:9726:9726	939679	13	True				
ANR	939984	Statement	cp	378:44:9728:9729	939679	14	True				
ANR	939985	Statement	)	378:46:9730:9730	939679	15	True				
ANR	939986	CompoundStatement		63:48:1488:1488	939679	16					
ANR	939987	ExpressionStatement	"r_cons_printf ( ""%s: %s\\n"" , cp -> name , cp -> desc )"	379:4:9738:9784	939679	0	True				
ANR	939988	CallExpression	"r_cons_printf ( ""%s: %s\\n"" , cp -> name , cp -> desc )"		939679	0					
ANR	939989	Callee	r_cons_printf		939679	0					
ANR	939990	Identifier	r_cons_printf		939679	0					
ANR	939991	ArgumentList	"""%s: %s\\n"""		939679	1					
ANR	939992	Argument	"""%s: %s\\n"""		939679	0					
ANR	939993	PrimaryExpression	"""%s: %s\\n"""		939679	0					
ANR	939994	Argument	cp -> name		939679	1					
ANR	939995	PtrMemberAccess	cp -> name		939679	0					
ANR	939996	Identifier	cp		939679	0					
ANR	939997	Identifier	name		939679	1					
ANR	939998	Argument	cp -> desc		939679	2					
ANR	939999	PtrMemberAccess	cp -> desc		939679	0					
ANR	940000	Identifier	cp		939679	0					
ANR	940001	Identifier	desc		939679	1					
ANR	940002	BreakStatement	break ;	381:3:9794:9799	939679	17	True				
ANR	940003	Label	default :	382:2:9803:9810	939679	18	True				
ANR	940004	Identifier	default		939679	0					
ANR	940005	ExpressionStatement	"eprintf ( ""oops\\n"" )"	383:3:9815:9833	939679	19	True				
ANR	940006	CallExpression	"eprintf ( ""oops\\n"" )"		939679	0					
ANR	940007	Callee	eprintf		939679	0					
ANR	940008	Identifier	eprintf		939679	0					
ANR	940009	ArgumentList	"""oops\\n"""		939679	1					
ANR	940010	Argument	"""oops\\n"""		939679	0					
ANR	940011	PrimaryExpression	"""oops\\n"""		939679	0					
ANR	940012	BreakStatement	break ;	384:3:9838:9843	939679	20	True				
ANR	940013	BreakStatement	break ;	387:2:9855:9860	939679	39	True				
ANR	940014	ReturnStatement	return 0 ;	389:1:9866:9874	939679	2	True				
ANR	940015	PrimaryExpression	0		939679	0					
ANR	940016	ReturnType	static int		939679	1					
ANR	940017	Identifier	cmd_plugins		939679	2					
ANR	940018	ParameterList	"void * data , const char * input"		939679	3					
ANR	940019	Parameter	void * data	316:23:8212:8221	939679	0	True				
ANR	940020	ParameterType	void *		939679	0					
ANR	940021	Identifier	data		939679	1					
ANR	940022	Parameter	const char * input	316:35:8224:8240	939679	1	True				
ANR	940023	ParameterType	const char *		939679	0					
ANR	940024	Identifier	input		939679	1					
ANR	940025	CFGEntryNode	ENTRY		939679		True				
ANR	940026	CFGExitNode	EXIT		939679		True				
ANR	940027	Symbol	data		939679						
ANR	940028	Symbol	* input		939679						
ANR	940029	Symbol	* core		939679						
ANR	940030	Symbol	false		939679						
ANR	940031	Symbol	iter		939679						
ANR	940032	Symbol	cp		939679						
ANR	940033	Symbol	help_msg_L		939679						
ANR	940034	Symbol	* cp		939679						
ANR	940035	Symbol	input		939679						
ANR	940036	Symbol	core		939679						
ANR	940037	Symbol	core -> lib		939679						
ANR	940038	Symbol	is_first_element		939679						
ANR	940039	Symbol	r_str_trim_ro		939679						
ANR	940040	Symbol	true		939679						
ANR	940041	Symbol	cp -> desc		939679						
ANR	940042	Symbol	cp -> name		939679						
