command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6537784	File	data/converged/CVE-2019-16718~_radare2/xnu_threads.c								
ANR	6537785	Function	xnu_thread_free	10:0:177:537							
ANR	6537786	FunctionDef	xnu_thread_free (xnu_thread_t * thread)		6537785	0					
ANR	6537787	CompoundStatement		10:51:228:537	6537785	0					
ANR	6537788	IdentifierDeclStatement	kern_return_t kr ;	11:1:231:247	6537785	0	True				
ANR	6537789	IdentifierDecl	kr		6537785	0					
ANR	6537790	IdentifierDeclType	kern_return_t		6537785	0					
ANR	6537791	Identifier	kr		6537785	1					
ANR	6537792	IfStatement	if ( ! thread )		6537785	1					
ANR	6537793	Condition	! thread	12:5:254:260	6537785	0	True				
ANR	6537794	UnaryOperationExpression	! thread		6537785	0					
ANR	6537795	UnaryOperator	!		6537785	0					
ANR	6537796	Identifier	thread		6537785	1					
ANR	6537797	CompoundStatement		3:14:34:34	6537785	1					
ANR	6537798	ReturnStatement	return ;	13:2:267:273	6537785	0	True				
ANR	6537799	ExpressionStatement	free ( thread -> name )	15:1:279:298	6537785	2	True				
ANR	6537800	CallExpression	free ( thread -> name )		6537785	0					
ANR	6537801	Callee	free		6537785	0					
ANR	6537802	Identifier	free		6537785	0					
ANR	6537803	ArgumentList	thread -> name		6537785	1					
ANR	6537804	Argument	thread -> name		6537785	0					
ANR	6537805	PtrMemberAccess	thread -> name		6537785	0					
ANR	6537806	Identifier	thread		6537785	0					
ANR	6537807	Identifier	name		6537785	1					
ANR	6537808	ExpressionStatement	"kr = mach_port_deallocate ( mach_task_self ( ) , thread -> port )"	18:1:380:439	6537785	3	True				
ANR	6537809	AssignmentExpression	"kr = mach_port_deallocate ( mach_task_self ( ) , thread -> port )"		6537785	0		=			
ANR	6537810	Identifier	kr		6537785	0					
ANR	6537811	CallExpression	"mach_port_deallocate ( mach_task_self ( ) , thread -> port )"		6537785	1					
ANR	6537812	Callee	mach_port_deallocate		6537785	0					
ANR	6537813	Identifier	mach_port_deallocate		6537785	0					
ANR	6537814	ArgumentList	mach_task_self ( )		6537785	1					
ANR	6537815	Argument	mach_task_self ( )		6537785	0					
ANR	6537816	CallExpression	mach_task_self ( )		6537785	0					
ANR	6537817	Callee	mach_task_self		6537785	0					
ANR	6537818	Identifier	mach_task_self		6537785	0					
ANR	6537819	ArgumentList			6537785	1					
ANR	6537820	Argument	thread -> port		6537785	1					
ANR	6537821	PtrMemberAccess	thread -> port		6537785	0					
ANR	6537822	Identifier	thread		6537785	0					
ANR	6537823	Identifier	port		6537785	1					
ANR	6537824	IfStatement	if ( kr != KERN_SUCCESS )		6537785	4					
ANR	6537825	Condition	kr != KERN_SUCCESS	19:5:446:463	6537785	0	True				
ANR	6537826	EqualityExpression	kr != KERN_SUCCESS		6537785	0		!=			
ANR	6537827	Identifier	kr		6537785	0					
ANR	6537828	Identifier	KERN_SUCCESS		6537785	1					
ANR	6537829	CompoundStatement		10:25:237:237	6537785	1					
ANR	6537830	ExpressionStatement	"eprintf ( ""failed to deallocate thread port\\n"" )"	20:2:470:516	6537785	0	True				
ANR	6537831	CallExpression	"eprintf ( ""failed to deallocate thread port\\n"" )"		6537785	0					
ANR	6537832	Callee	eprintf		6537785	0					
ANR	6537833	Identifier	eprintf		6537785	0					
ANR	6537834	ArgumentList	"""failed to deallocate thread port\\n"""		6537785	1					
ANR	6537835	Argument	"""failed to deallocate thread port\\n"""		6537785	0					
ANR	6537836	PrimaryExpression	"""failed to deallocate thread port\\n"""		6537785	0					
ANR	6537837	ExpressionStatement	free ( thread )	22:1:522:535	6537785	5	True				
ANR	6537838	CallExpression	free ( thread )		6537785	0					
ANR	6537839	Callee	free		6537785	0					
ANR	6537840	Identifier	free		6537785	0					
ANR	6537841	ArgumentList	thread		6537785	1					
ANR	6537842	Argument	thread		6537785	0					
ANR	6537843	Identifier	thread		6537785	0					
ANR	6537844	ReturnType	static void		6537785	1					
ANR	6537845	Identifier	xnu_thread_free		6537785	2					
ANR	6537846	ParameterList	xnu_thread_t * thread		6537785	3					
ANR	6537847	Parameter	xnu_thread_t * thread	10:29:206:225	6537785	0	True				
ANR	6537848	ParameterType	xnu_thread_t *		6537785	0					
ANR	6537849	Identifier	thread		6537785	1					
ANR	6537850	CFGEntryNode	ENTRY		6537785		True				
ANR	6537851	CFGExitNode	EXIT		6537785		True				
ANR	6537852	Symbol	thread -> name		6537785						
ANR	6537853	Symbol	kr		6537785						
ANR	6537854	Symbol	mach_task_self		6537785						
ANR	6537855	Symbol	* thread		6537785						
ANR	6537856	Symbol	KERN_SUCCESS		6537785						
ANR	6537857	Symbol	thread		6537785						
ANR	6537858	Symbol	thread -> port		6537785						
ANR	6537859	Symbol	mach_port_deallocate		6537785						
ANR	6537860	Function	xnu_thread_get_drx	26:0:607:2065							
ANR	6537861	FunctionDef	"xnu_thread_get_drx (RDebug * dbg , xnu_thread_t * thread)"		6537860	0					
ANR	6537862	CompoundStatement		26:67:674:2065	6537860	0					
ANR	6537863	ExpressionStatement	"r_return_val_if_fail ( dbg && thread , false )"	27:1:677:720	6537860	0	True				
ANR	6537864	CallExpression	"r_return_val_if_fail ( dbg && thread , false )"		6537860	0					
ANR	6537865	Callee	r_return_val_if_fail		6537860	0					
ANR	6537866	Identifier	r_return_val_if_fail		6537860	0					
ANR	6537867	ArgumentList	dbg && thread		6537860	1					
ANR	6537868	Argument	dbg && thread		6537860	0					
ANR	6537869	AndExpression	dbg && thread		6537860	0		&&			
ANR	6537870	Identifier	dbg		6537860	0					
ANR	6537871	Identifier	thread		6537860	1					
ANR	6537872	Argument	false		6537860	1					
ANR	6537873	Identifier	false		6537860	0					
ANR	6537874	IdentifierDeclStatement	kern_return_t rc ;	28:1:723:739	6537860	1	True				
ANR	6537875	IdentifierDecl	rc		6537860	0					
ANR	6537876	IdentifierDeclType	kern_return_t		6537860	0					
ANR	6537877	Identifier	rc		6537860	1					
ANR	6537878	ExpressionStatement	thread -> flavor = x86_DEBUG_STATE	30:1:769:801	6537860	2	True				
ANR	6537879	AssignmentExpression	thread -> flavor = x86_DEBUG_STATE		6537860	0		=			
ANR	6537880	PtrMemberAccess	thread -> flavor		6537860	0					
ANR	6537881	Identifier	thread		6537860	0					
ANR	6537882	Identifier	flavor		6537860	1					
ANR	6537883	Identifier	x86_DEBUG_STATE		6537860	1					
ANR	6537884	ExpressionStatement	thread -> count = x86_DEBUG_STATE_COUNT	31:1:804:841	6537860	3	True				
ANR	6537885	AssignmentExpression	thread -> count = x86_DEBUG_STATE_COUNT		6537860	0		=			
ANR	6537886	PtrMemberAccess	thread -> count		6537860	0					
ANR	6537887	Identifier	thread		6537860	0					
ANR	6537888	Identifier	count		6537860	1					
ANR	6537889	Identifier	x86_DEBUG_STATE_COUNT		6537860	1					
ANR	6537890	ExpressionStatement	thread -> state_size = ( dbg -> bits == R_SYS_BITS_64 ) ? sizeof ( x86_debug_state64_t ) : sizeof ( x86_debug_state32_t )	32:1:844:959	6537860	4	True				
ANR	6537891	AssignmentExpression	thread -> state_size = ( dbg -> bits == R_SYS_BITS_64 ) ? sizeof ( x86_debug_state64_t ) : sizeof ( x86_debug_state32_t )		6537860	0		=			
ANR	6537892	PtrMemberAccess	thread -> state_size		6537860	0					
ANR	6537893	Identifier	thread		6537860	0					
ANR	6537894	Identifier	state_size		6537860	1					
ANR	6537895	ConditionalExpression	( dbg -> bits == R_SYS_BITS_64 ) ? sizeof ( x86_debug_state64_t ) : sizeof ( x86_debug_state32_t )		6537860	1					
ANR	6537896	Condition	dbg -> bits == R_SYS_BITS_64		6537860	0					
ANR	6537897	EqualityExpression	dbg -> bits == R_SYS_BITS_64		6537860	0		==			
ANR	6537898	PtrMemberAccess	dbg -> bits		6537860	0					
ANR	6537899	Identifier	dbg		6537860	0					
ANR	6537900	Identifier	bits		6537860	1					
ANR	6537901	Identifier	R_SYS_BITS_64		6537860	1					
ANR	6537902	SizeofExpression	sizeof ( x86_debug_state64_t )		6537860	1					
ANR	6537903	Sizeof	sizeof		6537860	0					
ANR	6537904	SizeofOperand	x86_debug_state64_t		6537860	1					
ANR	6537905	SizeofExpression	sizeof ( x86_debug_state32_t )		6537860	2					
ANR	6537906	Sizeof	sizeof		6537860	0					
ANR	6537907	SizeofOperand	x86_debug_state32_t		6537860	1					
ANR	6537908	ExpressionStatement	thread -> state = & thread -> drx . uds	35:1:962:994	6537860	5	True				
ANR	6537909	AssignmentExpression	thread -> state = & thread -> drx . uds		6537860	0		=			
ANR	6537910	PtrMemberAccess	thread -> state		6537860	0					
ANR	6537911	Identifier	thread		6537860	0					
ANR	6537912	Identifier	state		6537860	1					
ANR	6537913	UnaryOperationExpression	& thread -> drx . uds		6537860	1					
ANR	6537914	UnaryOperator	&		6537860	0					
ANR	6537915	MemberAccess	thread -> drx . uds		6537860	1					
ANR	6537916	PtrMemberAccess	thread -> drx		6537860	0					
ANR	6537917	Identifier	thread		6537860	0					
ANR	6537918	Identifier	drx		6537860	1					
ANR	6537919	Identifier	uds		6537860	1					
ANR	6537920	ExpressionStatement	"rc = thread_get_state ( thread -> port , thread -> flavor , ( thread_state_t ) & thread -> drx , & thread -> count )"	36:1:997:1103	6537860	6	True				
ANR	6537921	AssignmentExpression	"rc = thread_get_state ( thread -> port , thread -> flavor , ( thread_state_t ) & thread -> drx , & thread -> count )"		6537860	0		=			
ANR	6537922	Identifier	rc		6537860	0					
ANR	6537923	CallExpression	"thread_get_state ( thread -> port , thread -> flavor , ( thread_state_t ) & thread -> drx , & thread -> count )"		6537860	1					
ANR	6537924	Callee	thread_get_state		6537860	0					
ANR	6537925	Identifier	thread_get_state		6537860	0					
ANR	6537926	ArgumentList	thread -> port		6537860	1					
ANR	6537927	Argument	thread -> port		6537860	0					
ANR	6537928	PtrMemberAccess	thread -> port		6537860	0					
ANR	6537929	Identifier	thread		6537860	0					
ANR	6537930	Identifier	port		6537860	1					
ANR	6537931	Argument	thread -> flavor		6537860	1					
ANR	6537932	PtrMemberAccess	thread -> flavor		6537860	0					
ANR	6537933	Identifier	thread		6537860	0					
ANR	6537934	Identifier	flavor		6537860	1					
ANR	6537935	Argument	( thread_state_t ) & thread -> drx		6537860	2					
ANR	6537936	CastExpression	( thread_state_t ) & thread -> drx		6537860	0					
ANR	6537937	CastTarget	thread_state_t		6537860	0					
ANR	6537938	UnaryOperationExpression	& thread -> drx		6537860	1					
ANR	6537939	UnaryOperator	&		6537860	0					
ANR	6537940	PtrMemberAccess	thread -> drx		6537860	1					
ANR	6537941	Identifier	thread		6537860	0					
ANR	6537942	Identifier	drx		6537860	1					
ANR	6537943	Argument	& thread -> count		6537860	3					
ANR	6537944	UnaryOperationExpression	& thread -> count		6537860	0					
ANR	6537945	UnaryOperator	&		6537860	0					
ANR	6537946	PtrMemberAccess	thread -> count		6537860	1					
ANR	6537947	Identifier	thread		6537860	0					
ANR	6537948	Identifier	count		6537860	1					
ANR	6537949	IfStatement	if ( rc != KERN_SUCCESS )		6537860	7					
ANR	6537950	Condition	rc != KERN_SUCCESS	62:5:1964:1981	6537860	0	True				
ANR	6537951	EqualityExpression	rc != KERN_SUCCESS		6537860	0		!=			
ANR	6537952	Identifier	rc		6537860	0					
ANR	6537953	Identifier	KERN_SUCCESS		6537860	1					
ANR	6537954	CompoundStatement		37:25:1309:1309	6537860	1					
ANR	6537955	ExpressionStatement	perror ( __FUNCTION__ )	63:2:1988:2009	6537860	0	True				
ANR	6537956	CallExpression	perror ( __FUNCTION__ )		6537860	0					
ANR	6537957	Callee	perror		6537860	0					
ANR	6537958	Identifier	perror		6537860	0					
ANR	6537959	ArgumentList	__FUNCTION__		6537860	1					
ANR	6537960	Argument	__FUNCTION__		6537860	0					
ANR	6537961	Identifier	__FUNCTION__		6537860	0					
ANR	6537962	ExpressionStatement	thread -> count = 0	64:2:2013:2030	6537860	1	True				
ANR	6537963	AssignmentExpression	thread -> count = 0		6537860	0		=			
ANR	6537964	PtrMemberAccess	thread -> count		6537860	0					
ANR	6537965	Identifier	thread		6537860	0					
ANR	6537966	Identifier	count		6537860	1					
ANR	6537967	PrimaryExpression	0		6537860	1					
ANR	6537968	ReturnStatement	return false ;	65:2:2034:2046	6537860	2	True				
ANR	6537969	Identifier	false		6537860	0					
ANR	6537970	ReturnStatement	return true ;	67:1:2052:2063	6537860	8	True				
ANR	6537971	Identifier	true		6537860	0					
ANR	6537972	ReturnType	static bool		6537860	1					
ANR	6537973	Identifier	xnu_thread_get_drx		6537860	2					
ANR	6537974	ParameterList	"RDebug * dbg , xnu_thread_t * thread"		6537860	3					
ANR	6537975	Parameter	RDebug * dbg	26:32:639:649	6537860	0	True				
ANR	6537976	ParameterType	RDebug *		6537860	0					
ANR	6537977	Identifier	dbg		6537860	1					
ANR	6537978	Parameter	xnu_thread_t * thread	26:45:652:671	6537860	1	True				
ANR	6537979	ParameterType	xnu_thread_t *		6537860	0					
ANR	6537980	Identifier	thread		6537860	1					
ANR	6537981	CFGEntryNode	ENTRY		6537860		True				
ANR	6537982	CFGExitNode	EXIT		6537860		True				
ANR	6537983	Symbol	thread -> state		6537860						
ANR	6537984	Symbol	thread -> count		6537860						
ANR	6537985	Symbol	& thread -> drx . uds		6537860						
ANR	6537986	Symbol	& thread -> drx		6537860						
ANR	6537987	Symbol	thread_get_state		6537860						
ANR	6537988	Symbol	thread -> state_size		6537860						
ANR	6537989	Symbol	dbg		6537860						
ANR	6537990	Symbol	false		6537860						
ANR	6537991	Symbol	dbg -> bits		6537860						
ANR	6537992	Symbol	thread		6537860						
ANR	6537993	Symbol	x86_DEBUG_STATE		6537860						
ANR	6537994	Symbol	* dbg		6537860						
ANR	6537995	Symbol	__FUNCTION__		6537860						
ANR	6537996	Symbol	rc		6537860						
ANR	6537997	Symbol	true		6537860						
ANR	6537998	Symbol	* thread		6537860						
ANR	6537999	Symbol	KERN_SUCCESS		6537860						
ANR	6538000	Symbol	x86_DEBUG_STATE_COUNT		6537860						
ANR	6538001	Symbol	thread -> drx		6537860						
ANR	6538002	Symbol	thread -> port		6537860						
ANR	6538003	Symbol	& thread -> count		6537860						
ANR	6538004	Symbol	thread -> flavor		6537860						
ANR	6538005	Symbol	R_SYS_BITS_64		6537860						
ANR	6538006	Function	xnu_thread_set_drx	70:0:2068:3877							
ANR	6538007	FunctionDef	"xnu_thread_set_drx (RDebug * dbg , xnu_thread_t * thread)"		6538006	0					
ANR	6538008	CompoundStatement		70:67:2135:3877	6538006	0					
ANR	6538009	ExpressionStatement	"r_return_val_if_fail ( dbg && thread , false )"	71:1:2138:2181	6538006	0	True				
ANR	6538010	CallExpression	"r_return_val_if_fail ( dbg && thread , false )"		6538006	0					
ANR	6538011	Callee	r_return_val_if_fail		6538006	0					
ANR	6538012	Identifier	r_return_val_if_fail		6538006	0					
ANR	6538013	ArgumentList	dbg && thread		6538006	1					
ANR	6538014	Argument	dbg && thread		6538006	0					
ANR	6538015	AndExpression	dbg && thread		6538006	0		&&			
ANR	6538016	Identifier	dbg		6538006	0					
ANR	6538017	Identifier	thread		6538006	1					
ANR	6538018	Argument	false		6538006	1					
ANR	6538019	Identifier	false		6538006	0					
ANR	6538020	IdentifierDeclStatement	kern_return_t rc ;	72:1:2184:2200	6538006	1	True				
ANR	6538021	IdentifierDecl	rc		6538006	0					
ANR	6538022	IdentifierDeclType	kern_return_t		6538006	0					
ANR	6538023	Identifier	rc		6538006	1					
ANR	6538024	IdentifierDeclStatement	x86_debug_state_t * regs = & thread -> drx ;	74:1:2230:2268	6538006	2	True				
ANR	6538025	IdentifierDecl	* regs = & thread -> drx		6538006	0					
ANR	6538026	IdentifierDeclType	x86_debug_state_t *		6538006	0					
ANR	6538027	Identifier	regs		6538006	1					
ANR	6538028	AssignmentExpression	* regs = & thread -> drx		6538006	2		=			
ANR	6538029	Identifier	regs		6538006	0					
ANR	6538030	UnaryOperationExpression	& thread -> drx		6538006	1					
ANR	6538031	UnaryOperator	&		6538006	0					
ANR	6538032	PtrMemberAccess	thread -> drx		6538006	1					
ANR	6538033	Identifier	thread		6538006	0					
ANR	6538034	Identifier	drx		6538006	1					
ANR	6538035	IfStatement	if ( ! regs )		6538006	3					
ANR	6538036	Condition	! regs	75:5:2275:2279	6538006	0	True				
ANR	6538037	UnaryOperationExpression	! regs		6538006	0					
ANR	6538038	UnaryOperator	!		6538006	0					
ANR	6538039	Identifier	regs		6538006	1					
ANR	6538040	CompoundStatement		6:12:146:146	6538006	1					
ANR	6538041	ReturnStatement	return false ;	76:2:2286:2298	6538006	0	True				
ANR	6538042	Identifier	false		6538006	0					
ANR	6538043	ExpressionStatement	thread -> flavor = x86_DEBUG_STATE	78:1:2304:2336	6538006	4	True				
ANR	6538044	AssignmentExpression	thread -> flavor = x86_DEBUG_STATE		6538006	0		=			
ANR	6538045	PtrMemberAccess	thread -> flavor		6538006	0					
ANR	6538046	Identifier	thread		6538006	0					
ANR	6538047	Identifier	flavor		6538006	1					
ANR	6538048	Identifier	x86_DEBUG_STATE		6538006	1					
ANR	6538049	ExpressionStatement	thread -> count = x86_DEBUG_STATE_COUNT	79:1:2339:2376	6538006	5	True				
ANR	6538050	AssignmentExpression	thread -> count = x86_DEBUG_STATE_COUNT		6538006	0		=			
ANR	6538051	PtrMemberAccess	thread -> count		6538006	0					
ANR	6538052	Identifier	thread		6538006	0					
ANR	6538053	Identifier	count		6538006	1					
ANR	6538054	Identifier	x86_DEBUG_STATE_COUNT		6538006	1					
ANR	6538055	IfStatement	if ( dbg -> bits == R_SYS_BITS_64 )		6538006	6					
ANR	6538056	Condition	dbg -> bits == R_SYS_BITS_64	80:5:2383:2408	6538006	0	True				
ANR	6538057	EqualityExpression	dbg -> bits == R_SYS_BITS_64		6538006	0		==			
ANR	6538058	PtrMemberAccess	dbg -> bits		6538006	0					
ANR	6538059	Identifier	dbg		6538006	0					
ANR	6538060	Identifier	bits		6538006	1					
ANR	6538061	Identifier	R_SYS_BITS_64		6538006	1					
ANR	6538062	CompoundStatement		11:33:275:275	6538006	1					
ANR	6538063	ExpressionStatement	regs -> dsh . flavor = x86_DEBUG_STATE64	81:2:2415:2451	6538006	0	True				
ANR	6538064	AssignmentExpression	regs -> dsh . flavor = x86_DEBUG_STATE64		6538006	0		=			
ANR	6538065	MemberAccess	regs -> dsh . flavor		6538006	0					
ANR	6538066	PtrMemberAccess	regs -> dsh		6538006	0					
ANR	6538067	Identifier	regs		6538006	0					
ANR	6538068	Identifier	dsh		6538006	1					
ANR	6538069	Identifier	flavor		6538006	1					
ANR	6538070	Identifier	x86_DEBUG_STATE64		6538006	1					
ANR	6538071	ExpressionStatement	regs -> dsh . count = x86_DEBUG_STATE64_COUNT	82:2:2455:2497	6538006	1	True				
ANR	6538072	AssignmentExpression	regs -> dsh . count = x86_DEBUG_STATE64_COUNT		6538006	0		=			
ANR	6538073	MemberAccess	regs -> dsh . count		6538006	0					
ANR	6538074	PtrMemberAccess	regs -> dsh		6538006	0					
ANR	6538075	Identifier	regs		6538006	0					
ANR	6538076	Identifier	dsh		6538006	1					
ANR	6538077	Identifier	count		6538006	1					
ANR	6538078	Identifier	x86_DEBUG_STATE64_COUNT		6538006	1					
ANR	6538079	ElseStatement	else		6538006	0					
ANR	6538080	CompoundStatement		14:8:371:371	6538006	0					
ANR	6538081	ExpressionStatement	regs -> dsh . flavor = x86_DEBUG_STATE32	84:2:2511:2547	6538006	0	True				
ANR	6538082	AssignmentExpression	regs -> dsh . flavor = x86_DEBUG_STATE32		6538006	0		=			
ANR	6538083	MemberAccess	regs -> dsh . flavor		6538006	0					
ANR	6538084	PtrMemberAccess	regs -> dsh		6538006	0					
ANR	6538085	Identifier	regs		6538006	0					
ANR	6538086	Identifier	dsh		6538006	1					
ANR	6538087	Identifier	flavor		6538006	1					
ANR	6538088	Identifier	x86_DEBUG_STATE32		6538006	1					
ANR	6538089	ExpressionStatement	regs -> dsh . count = x86_DEBUG_STATE32_COUNT	85:2:2551:2593	6538006	1	True				
ANR	6538090	AssignmentExpression	regs -> dsh . count = x86_DEBUG_STATE32_COUNT		6538006	0		=			
ANR	6538091	MemberAccess	regs -> dsh . count		6538006	0					
ANR	6538092	PtrMemberAccess	regs -> dsh		6538006	0					
ANR	6538093	Identifier	regs		6538006	0					
ANR	6538094	Identifier	dsh		6538006	1					
ANR	6538095	Identifier	count		6538006	1					
ANR	6538096	Identifier	x86_DEBUG_STATE32_COUNT		6538006	1					
ANR	6538097	ExpressionStatement	"rc = thread_set_state ( thread -> port , thread -> flavor , ( thread_state_t ) regs , thread -> count )"	87:1:2599:2698	6538006	7	True				
ANR	6538098	AssignmentExpression	"rc = thread_set_state ( thread -> port , thread -> flavor , ( thread_state_t ) regs , thread -> count )"		6538006	0		=			
ANR	6538099	Identifier	rc		6538006	0					
ANR	6538100	CallExpression	"thread_set_state ( thread -> port , thread -> flavor , ( thread_state_t ) regs , thread -> count )"		6538006	1					
ANR	6538101	Callee	thread_set_state		6538006	0					
ANR	6538102	Identifier	thread_set_state		6538006	0					
ANR	6538103	ArgumentList	thread -> port		6538006	1					
ANR	6538104	Argument	thread -> port		6538006	0					
ANR	6538105	PtrMemberAccess	thread -> port		6538006	0					
ANR	6538106	Identifier	thread		6538006	0					
ANR	6538107	Identifier	port		6538006	1					
ANR	6538108	Argument	thread -> flavor		6538006	1					
ANR	6538109	PtrMemberAccess	thread -> flavor		6538006	0					
ANR	6538110	Identifier	thread		6538006	0					
ANR	6538111	Identifier	flavor		6538006	1					
ANR	6538112	Argument	( thread_state_t ) regs		6538006	2					
ANR	6538113	CastExpression	( thread_state_t ) regs		6538006	0					
ANR	6538114	CastTarget	thread_state_t		6538006	0					
ANR	6538115	Identifier	regs		6538006	1					
ANR	6538116	Argument	thread -> count		6538006	3					
ANR	6538117	PtrMemberAccess	thread -> count		6538006	0					
ANR	6538118	Identifier	thread		6538006	0					
ANR	6538119	Identifier	count		6538006	1					
ANR	6538120	IfStatement	if ( rc != KERN_SUCCESS )		6538006	8					
ANR	6538121	Condition	rc != KERN_SUCCESS	122:5:3776:3793	6538006	0	True				
ANR	6538122	EqualityExpression	rc != KERN_SUCCESS		6538006	0		!=			
ANR	6538123	Identifier	rc		6538006	0					
ANR	6538124	Identifier	KERN_SUCCESS		6538006	1					
ANR	6538125	CompoundStatement		53:25:1660:1660	6538006	1					
ANR	6538126	ExpressionStatement	perror ( __FUNCTION__ )	123:2:3800:3821	6538006	0	True				
ANR	6538127	CallExpression	perror ( __FUNCTION__ )		6538006	0					
ANR	6538128	Callee	perror		6538006	0					
ANR	6538129	Identifier	perror		6538006	0					
ANR	6538130	ArgumentList	__FUNCTION__		6538006	1					
ANR	6538131	Argument	__FUNCTION__		6538006	0					
ANR	6538132	Identifier	__FUNCTION__		6538006	0					
ANR	6538133	ExpressionStatement	thread -> count = 0	124:2:3825:3842	6538006	1	True				
ANR	6538134	AssignmentExpression	thread -> count = 0		6538006	0		=			
ANR	6538135	PtrMemberAccess	thread -> count		6538006	0					
ANR	6538136	Identifier	thread		6538006	0					
ANR	6538137	Identifier	count		6538006	1					
ANR	6538138	PrimaryExpression	0		6538006	1					
ANR	6538139	ReturnStatement	return false ;	125:2:3846:3858	6538006	2	True				
ANR	6538140	Identifier	false		6538006	0					
ANR	6538141	ReturnStatement	return true ;	127:1:3864:3875	6538006	9	True				
ANR	6538142	Identifier	true		6538006	0					
ANR	6538143	ReturnType	static bool		6538006	1					
ANR	6538144	Identifier	xnu_thread_set_drx		6538006	2					
ANR	6538145	ParameterList	"RDebug * dbg , xnu_thread_t * thread"		6538006	3					
ANR	6538146	Parameter	RDebug * dbg	70:32:2100:2110	6538006	0	True				
ANR	6538147	ParameterType	RDebug *		6538006	0					
ANR	6538148	Identifier	dbg		6538006	1					
ANR	6538149	Parameter	xnu_thread_t * thread	70:45:2113:2132	6538006	1	True				
ANR	6538150	ParameterType	xnu_thread_t *		6538006	0					
ANR	6538151	Identifier	thread		6538006	1					
ANR	6538152	CFGEntryNode	ENTRY		6538006		True				
ANR	6538153	CFGExitNode	EXIT		6538006		True				
ANR	6538154	Symbol	& thread -> drx		6538006						
ANR	6538155	Symbol	thread -> count		6538006						
ANR	6538156	Symbol	regs -> dsh . flavor		6538006						
ANR	6538157	Symbol	dbg -> bits		6538006						
ANR	6538158	Symbol	x86_DEBUG_STATE		6538006						
ANR	6538159	Symbol	x86_DEBUG_STATE32		6538006						
ANR	6538160	Symbol	* thread		6538006						
ANR	6538161	Symbol	thread_set_state		6538006						
ANR	6538162	Symbol	KERN_SUCCESS		6538006						
ANR	6538163	Symbol	x86_DEBUG_STATE_COUNT		6538006						
ANR	6538164	Symbol	x86_DEBUG_STATE32_COUNT		6538006						
ANR	6538165	Symbol	thread -> flavor		6538006						
ANR	6538166	Symbol	R_SYS_BITS_64		6538006						
ANR	6538167	Symbol	regs -> dsh . count		6538006						
ANR	6538168	Symbol	regs -> dsh		6538006						
ANR	6538169	Symbol	dbg		6538006						
ANR	6538170	Symbol	false		6538006						
ANR	6538171	Symbol	regs		6538006						
ANR	6538172	Symbol	x86_DEBUG_STATE64_COUNT		6538006						
ANR	6538173	Symbol	thread		6538006						
ANR	6538174	Symbol	* dbg		6538006						
ANR	6538175	Symbol	__FUNCTION__		6538006						
ANR	6538176	Symbol	rc		6538006						
ANR	6538177	Symbol	x86_DEBUG_STATE64		6538006						
ANR	6538178	Symbol	* regs		6538006						
ANR	6538179	Symbol	true		6538006						
ANR	6538180	Symbol	thread -> port		6538006						
ANR	6538181	Function	xnu_thread_set_gpr	130:0:3880:5507							
ANR	6538182	FunctionDef	"xnu_thread_set_gpr (RDebug * dbg , xnu_thread_t * thread)"		6538181	0					
ANR	6538183	CompoundStatement		130:67:3947:5507	6538181	0					
ANR	6538184	ExpressionStatement	"r_return_val_if_fail ( dbg && thread , false )"	131:1:3950:3993	6538181	0	True				
ANR	6538185	CallExpression	"r_return_val_if_fail ( dbg && thread , false )"		6538181	0					
ANR	6538186	Callee	r_return_val_if_fail		6538181	0					
ANR	6538187	Identifier	r_return_val_if_fail		6538181	0					
ANR	6538188	ArgumentList	dbg && thread		6538181	1					
ANR	6538189	Argument	dbg && thread		6538181	0					
ANR	6538190	AndExpression	dbg && thread		6538181	0		&&			
ANR	6538191	Identifier	dbg		6538181	0					
ANR	6538192	Identifier	thread		6538181	1					
ANR	6538193	Argument	false		6538181	1					
ANR	6538194	Identifier	false		6538181	0					
ANR	6538195	IdentifierDeclStatement	kern_return_t rc ;	132:1:3996:4012	6538181	1	True				
ANR	6538196	IdentifierDecl	rc		6538181	0					
ANR	6538197	IdentifierDeclType	kern_return_t		6538181	0					
ANR	6538198	Identifier	rc		6538181	1					
ANR	6538199	IdentifierDeclStatement	R_REG_T * regs = ( R_REG_T * ) & thread -> gpr ;	133:1:4015:4054	6538181	2	True				
ANR	6538200	IdentifierDecl	* regs = ( R_REG_T * ) & thread -> gpr		6538181	0					
ANR	6538201	IdentifierDeclType	R_REG_T *		6538181	0					
ANR	6538202	Identifier	regs		6538181	1					
ANR	6538203	AssignmentExpression	* regs = ( R_REG_T * ) & thread -> gpr		6538181	2		=			
ANR	6538204	Identifier	regs		6538181	0					
ANR	6538205	CastExpression	( R_REG_T * ) & thread -> gpr		6538181	1					
ANR	6538206	CastTarget	R_REG_T *		6538181	0					
ANR	6538207	UnaryOperationExpression	& thread -> gpr		6538181	1					
ANR	6538208	UnaryOperator	&		6538181	0					
ANR	6538209	PtrMemberAccess	thread -> gpr		6538181	1					
ANR	6538210	Identifier	thread		6538181	0					
ANR	6538211	Identifier	gpr		6538181	1					
ANR	6538212	IfStatement	if ( ! regs )		6538181	3					
ANR	6538213	Condition	! regs	134:5:4061:4065	6538181	0	True				
ANR	6538214	UnaryOperationExpression	! regs		6538181	0					
ANR	6538215	UnaryOperator	!		6538181	0					
ANR	6538216	Identifier	regs		6538181	1					
ANR	6538217	CompoundStatement		5:12:120:120	6538181	1					
ANR	6538218	ReturnStatement	return false ;	135:2:4072:4084	6538181	0	True				
ANR	6538219	Identifier	false		6538181	0					
ANR	6538220	ExpressionStatement	thread -> state = & regs -> uts	140:1:4200:4226	6538181	4	True				
ANR	6538221	AssignmentExpression	thread -> state = & regs -> uts		6538181	0		=			
ANR	6538222	PtrMemberAccess	thread -> state		6538181	0					
ANR	6538223	Identifier	thread		6538181	0					
ANR	6538224	Identifier	state		6538181	1					
ANR	6538225	UnaryOperationExpression	& regs -> uts		6538181	1					
ANR	6538226	UnaryOperator	&		6538181	0					
ANR	6538227	PtrMemberAccess	regs -> uts		6538181	1					
ANR	6538228	Identifier	regs		6538181	0					
ANR	6538229	Identifier	uts		6538181	1					
ANR	6538230	ExpressionStatement	thread -> flavor = x86_THREAD_STATE	142:1:4254:4287	6538181	5	True				
ANR	6538231	AssignmentExpression	thread -> flavor = x86_THREAD_STATE		6538181	0		=			
ANR	6538232	PtrMemberAccess	thread -> flavor		6538181	0					
ANR	6538233	Identifier	thread		6538181	0					
ANR	6538234	Identifier	flavor		6538181	1					
ANR	6538235	Identifier	x86_THREAD_STATE		6538181	1					
ANR	6538236	ExpressionStatement	thread -> count = x86_THREAD_STATE_COUNT	143:1:4290:4328	6538181	6	True				
ANR	6538237	AssignmentExpression	thread -> count = x86_THREAD_STATE_COUNT		6538181	0		=			
ANR	6538238	PtrMemberAccess	thread -> count		6538181	0					
ANR	6538239	Identifier	thread		6538181	0					
ANR	6538240	Identifier	count		6538181	1					
ANR	6538241	Identifier	x86_THREAD_STATE_COUNT		6538181	1					
ANR	6538242	IfStatement	if ( dbg -> bits == R_SYS_BITS_64 )		6538181	7					
ANR	6538243	Condition	dbg -> bits == R_SYS_BITS_64	144:5:4335:4360	6538181	0	True				
ANR	6538244	EqualityExpression	dbg -> bits == R_SYS_BITS_64		6538181	0		==			
ANR	6538245	PtrMemberAccess	dbg -> bits		6538181	0					
ANR	6538246	Identifier	dbg		6538181	0					
ANR	6538247	Identifier	bits		6538181	1					
ANR	6538248	Identifier	R_SYS_BITS_64		6538181	1					
ANR	6538249	CompoundStatement		15:33:415:415	6538181	1					
ANR	6538250	ExpressionStatement	regs -> tsh . flavor = x86_THREAD_STATE64	145:2:4367:4404	6538181	0	True				
ANR	6538251	AssignmentExpression	regs -> tsh . flavor = x86_THREAD_STATE64		6538181	0		=			
ANR	6538252	MemberAccess	regs -> tsh . flavor		6538181	0					
ANR	6538253	PtrMemberAccess	regs -> tsh		6538181	0					
ANR	6538254	Identifier	regs		6538181	0					
ANR	6538255	Identifier	tsh		6538181	1					
ANR	6538256	Identifier	flavor		6538181	1					
ANR	6538257	Identifier	x86_THREAD_STATE64		6538181	1					
ANR	6538258	ExpressionStatement	regs -> tsh . count = x86_THREAD_STATE64_COUNT	146:2:4408:4451	6538181	1	True				
ANR	6538259	AssignmentExpression	regs -> tsh . count = x86_THREAD_STATE64_COUNT		6538181	0		=			
ANR	6538260	MemberAccess	regs -> tsh . count		6538181	0					
ANR	6538261	PtrMemberAccess	regs -> tsh		6538181	0					
ANR	6538262	Identifier	regs		6538181	0					
ANR	6538263	Identifier	tsh		6538181	1					
ANR	6538264	Identifier	count		6538181	1					
ANR	6538265	Identifier	x86_THREAD_STATE64_COUNT		6538181	1					
ANR	6538266	ElseStatement	else		6538181	0					
ANR	6538267	CompoundStatement		18:8:513:513	6538181	0					
ANR	6538268	ExpressionStatement	regs -> tsh . flavor = x86_THREAD_STATE32	148:2:4465:4502	6538181	0	True				
ANR	6538269	AssignmentExpression	regs -> tsh . flavor = x86_THREAD_STATE32		6538181	0		=			
ANR	6538270	MemberAccess	regs -> tsh . flavor		6538181	0					
ANR	6538271	PtrMemberAccess	regs -> tsh		6538181	0					
ANR	6538272	Identifier	regs		6538181	0					
ANR	6538273	Identifier	tsh		6538181	1					
ANR	6538274	Identifier	flavor		6538181	1					
ANR	6538275	Identifier	x86_THREAD_STATE32		6538181	1					
ANR	6538276	ExpressionStatement	regs -> tsh . count = x86_THREAD_STATE32_COUNT	149:2:4506:4549	6538181	1	True				
ANR	6538277	AssignmentExpression	regs -> tsh . count = x86_THREAD_STATE32_COUNT		6538181	0		=			
ANR	6538278	MemberAccess	regs -> tsh . count		6538181	0					
ANR	6538279	PtrMemberAccess	regs -> tsh		6538181	0					
ANR	6538280	Identifier	regs		6538181	0					
ANR	6538281	Identifier	tsh		6538181	1					
ANR	6538282	Identifier	count		6538181	1					
ANR	6538283	Identifier	x86_THREAD_STATE32_COUNT		6538181	1					
ANR	6538284	ExpressionStatement	"rc = thread_set_state ( thread -> port , thread -> flavor , ( thread_state_t ) regs , thread -> count )"	174:1:5300:5399	6538181	8	True				
ANR	6538285	AssignmentExpression	"rc = thread_set_state ( thread -> port , thread -> flavor , ( thread_state_t ) regs , thread -> count )"		6538181	0		=			
ANR	6538286	Identifier	rc		6538181	0					
ANR	6538287	CallExpression	"thread_set_state ( thread -> port , thread -> flavor , ( thread_state_t ) regs , thread -> count )"		6538181	1					
ANR	6538288	Callee	thread_set_state		6538181	0					
ANR	6538289	Identifier	thread_set_state		6538181	0					
ANR	6538290	ArgumentList	thread -> port		6538181	1					
ANR	6538291	Argument	thread -> port		6538181	0					
ANR	6538292	PtrMemberAccess	thread -> port		6538181	0					
ANR	6538293	Identifier	thread		6538181	0					
ANR	6538294	Identifier	port		6538181	1					
ANR	6538295	Argument	thread -> flavor		6538181	1					
ANR	6538296	PtrMemberAccess	thread -> flavor		6538181	0					
ANR	6538297	Identifier	thread		6538181	0					
ANR	6538298	Identifier	flavor		6538181	1					
ANR	6538299	Argument	( thread_state_t ) regs		6538181	2					
ANR	6538300	CastExpression	( thread_state_t ) regs		6538181	0					
ANR	6538301	CastTarget	thread_state_t		6538181	0					
ANR	6538302	Identifier	regs		6538181	1					
ANR	6538303	Argument	thread -> count		6538181	3					
ANR	6538304	PtrMemberAccess	thread -> count		6538181	0					
ANR	6538305	Identifier	thread		6538181	0					
ANR	6538306	Identifier	count		6538181	1					
ANR	6538307	IfStatement	if ( rc != KERN_SUCCESS )		6538181	9					
ANR	6538308	Condition	rc != KERN_SUCCESS	176:5:5406:5423	6538181	0	True				
ANR	6538309	EqualityExpression	rc != KERN_SUCCESS		6538181	0		!=			
ANR	6538310	Identifier	rc		6538181	0					
ANR	6538311	Identifier	KERN_SUCCESS		6538181	1					
ANR	6538312	CompoundStatement		47:25:1478:1478	6538181	1					
ANR	6538313	ExpressionStatement	perror ( __FUNCTION__ )	177:2:5430:5451	6538181	0	True				
ANR	6538314	CallExpression	perror ( __FUNCTION__ )		6538181	0					
ANR	6538315	Callee	perror		6538181	0					
ANR	6538316	Identifier	perror		6538181	0					
ANR	6538317	ArgumentList	__FUNCTION__		6538181	1					
ANR	6538318	Argument	__FUNCTION__		6538181	0					
ANR	6538319	Identifier	__FUNCTION__		6538181	0					
ANR	6538320	ExpressionStatement	thread -> count = 0	178:2:5455:5472	6538181	1	True				
ANR	6538321	AssignmentExpression	thread -> count = 0		6538181	0		=			
ANR	6538322	PtrMemberAccess	thread -> count		6538181	0					
ANR	6538323	Identifier	thread		6538181	0					
ANR	6538324	Identifier	count		6538181	1					
ANR	6538325	PrimaryExpression	0		6538181	1					
ANR	6538326	ReturnStatement	return false ;	179:2:5476:5488	6538181	2	True				
ANR	6538327	Identifier	false		6538181	0					
ANR	6538328	ReturnStatement	return true ;	181:1:5494:5505	6538181	10	True				
ANR	6538329	Identifier	true		6538181	0					
ANR	6538330	ReturnType	static bool		6538181	1					
ANR	6538331	Identifier	xnu_thread_set_gpr		6538181	2					
ANR	6538332	ParameterList	"RDebug * dbg , xnu_thread_t * thread"		6538181	3					
ANR	6538333	Parameter	RDebug * dbg	130:32:3912:3922	6538181	0	True				
ANR	6538334	ParameterType	RDebug *		6538181	0					
ANR	6538335	Identifier	dbg		6538181	1					
ANR	6538336	Parameter	xnu_thread_t * thread	130:45:3925:3944	6538181	1	True				
ANR	6538337	ParameterType	xnu_thread_t *		6538181	0					
ANR	6538338	Identifier	thread		6538181	1					
ANR	6538339	CFGEntryNode	ENTRY		6538181		True				
ANR	6538340	CFGExitNode	EXIT		6538181		True				
ANR	6538341	Symbol	thread -> count		6538181						
ANR	6538342	Symbol	& thread -> gpr		6538181						
ANR	6538343	Symbol	x86_THREAD_STATE32		6538181						
ANR	6538344	Symbol	dbg -> bits		6538181						
ANR	6538345	Symbol	& regs -> uts		6538181						
ANR	6538346	Symbol	* thread		6538181						
ANR	6538347	Symbol	thread_set_state		6538181						
ANR	6538348	Symbol	x86_THREAD_STATE_COUNT		6538181						
ANR	6538349	Symbol	KERN_SUCCESS		6538181						
ANR	6538350	Symbol	thread -> flavor		6538181						
ANR	6538351	Symbol	R_SYS_BITS_64		6538181						
ANR	6538352	Symbol	x86_THREAD_STATE64_COUNT		6538181						
ANR	6538353	Symbol	thread -> state		6538181						
ANR	6538354	Symbol	x86_THREAD_STATE		6538181						
ANR	6538355	Symbol	regs -> tsh . count		6538181						
ANR	6538356	Symbol	x86_THREAD_STATE64		6538181						
ANR	6538357	Symbol	dbg		6538181						
ANR	6538358	Symbol	false		6538181						
ANR	6538359	Symbol	x86_THREAD_STATE32_COUNT		6538181						
ANR	6538360	Symbol	regs		6538181						
ANR	6538361	Symbol	thread		6538181						
ANR	6538362	Symbol	* dbg		6538181						
ANR	6538363	Symbol	__FUNCTION__		6538181						
ANR	6538364	Symbol	regs -> tsh . flavor		6538181						
ANR	6538365	Symbol	rc		6538181						
ANR	6538366	Symbol	* regs		6538181						
ANR	6538367	Symbol	regs -> tsh		6538181						
ANR	6538368	Symbol	true		6538181						
ANR	6538369	Symbol	thread -> port		6538181						
ANR	6538370	Function	xnu_thread_get_gpr	184:0:5510:6847							
ANR	6538371	FunctionDef	"xnu_thread_get_gpr (RDebug * dbg , xnu_thread_t * thread)"		6538370	0					
ANR	6538372	CompoundStatement		184:67:5577:6847	6538370	0					
ANR	6538373	ExpressionStatement	"r_return_val_if_fail ( dbg && thread , false )"	185:1:5580:5623	6538370	0	True				
ANR	6538374	CallExpression	"r_return_val_if_fail ( dbg && thread , false )"		6538370	0					
ANR	6538375	Callee	r_return_val_if_fail		6538370	0					
ANR	6538376	Identifier	r_return_val_if_fail		6538370	0					
ANR	6538377	ArgumentList	dbg && thread		6538370	1					
ANR	6538378	Argument	dbg && thread		6538370	0					
ANR	6538379	AndExpression	dbg && thread		6538370	0		&&			
ANR	6538380	Identifier	dbg		6538370	0					
ANR	6538381	Identifier	thread		6538370	1					
ANR	6538382	Argument	false		6538370	1					
ANR	6538383	Identifier	false		6538370	0					
ANR	6538384	IdentifierDeclStatement	R_REG_T * regs = & thread -> gpr ;	186:1:5626:5654	6538370	1	True				
ANR	6538385	IdentifierDecl	* regs = & thread -> gpr		6538370	0					
ANR	6538386	IdentifierDeclType	R_REG_T *		6538370	0					
ANR	6538387	Identifier	regs		6538370	1					
ANR	6538388	AssignmentExpression	* regs = & thread -> gpr		6538370	2		=			
ANR	6538389	Identifier	regs		6538370	0					
ANR	6538390	UnaryOperationExpression	& thread -> gpr		6538370	1					
ANR	6538391	UnaryOperator	&		6538370	0					
ANR	6538392	PtrMemberAccess	thread -> gpr		6538370	1					
ANR	6538393	Identifier	thread		6538370	0					
ANR	6538394	Identifier	gpr		6538370	1					
ANR	6538395	IfStatement	if ( ! regs )		6538370	2					
ANR	6538396	Condition	! regs	187:5:5661:5665	6538370	0	True				
ANR	6538397	UnaryOperationExpression	! regs		6538370	0					
ANR	6538398	UnaryOperator	!		6538370	0					
ANR	6538399	Identifier	regs		6538370	1					
ANR	6538400	CompoundStatement		4:12:90:90	6538370	1					
ANR	6538401	ReturnStatement	return false ;	188:2:5672:5684	6538370	0	True				
ANR	6538402	Identifier	false		6538370	0					
ANR	6538403	IdentifierDeclStatement	kern_return_t rc ;	190:1:5690:5706	6538370	3	True				
ANR	6538404	IdentifierDecl	rc		6538370	0					
ANR	6538405	IdentifierDeclType	kern_return_t		6538370	0					
ANR	6538406	Identifier	rc		6538370	1					
ANR	6538407	ExpressionStatement	thread -> state = regs	192:1:5725:5745	6538370	4	True				
ANR	6538408	AssignmentExpression	thread -> state = regs		6538370	0		=			
ANR	6538409	PtrMemberAccess	thread -> state		6538370	0					
ANR	6538410	Identifier	thread		6538370	0					
ANR	6538411	Identifier	state		6538370	1					
ANR	6538412	Identifier	regs		6538370	1					
ANR	6538413	ExpressionStatement	"rc = thread_get_state ( thread -> port , thread -> flavor , ( thread_state_t ) regs , & thread -> count )"	218:1:6639:6739	6538370	5	True				
ANR	6538414	AssignmentExpression	"rc = thread_get_state ( thread -> port , thread -> flavor , ( thread_state_t ) regs , & thread -> count )"		6538370	0		=			
ANR	6538415	Identifier	rc		6538370	0					
ANR	6538416	CallExpression	"thread_get_state ( thread -> port , thread -> flavor , ( thread_state_t ) regs , & thread -> count )"		6538370	1					
ANR	6538417	Callee	thread_get_state		6538370	0					
ANR	6538418	Identifier	thread_get_state		6538370	0					
ANR	6538419	ArgumentList	thread -> port		6538370	1					
ANR	6538420	Argument	thread -> port		6538370	0					
ANR	6538421	PtrMemberAccess	thread -> port		6538370	0					
ANR	6538422	Identifier	thread		6538370	0					
ANR	6538423	Identifier	port		6538370	1					
ANR	6538424	Argument	thread -> flavor		6538370	1					
ANR	6538425	PtrMemberAccess	thread -> flavor		6538370	0					
ANR	6538426	Identifier	thread		6538370	0					
ANR	6538427	Identifier	flavor		6538370	1					
ANR	6538428	Argument	( thread_state_t ) regs		6538370	2					
ANR	6538429	CastExpression	( thread_state_t ) regs		6538370	0					
ANR	6538430	CastTarget	thread_state_t		6538370	0					
ANR	6538431	Identifier	regs		6538370	1					
ANR	6538432	Argument	& thread -> count		6538370	3					
ANR	6538433	UnaryOperationExpression	& thread -> count		6538370	0					
ANR	6538434	UnaryOperator	&		6538370	0					
ANR	6538435	PtrMemberAccess	thread -> count		6538370	1					
ANR	6538436	Identifier	thread		6538370	0					
ANR	6538437	Identifier	count		6538370	1					
ANR	6538438	IfStatement	if ( rc != KERN_SUCCESS )		6538370	6					
ANR	6538439	Condition	rc != KERN_SUCCESS	220:5:6746:6763	6538370	0	True				
ANR	6538440	EqualityExpression	rc != KERN_SUCCESS		6538370	0		!=			
ANR	6538441	Identifier	rc		6538370	0					
ANR	6538442	Identifier	KERN_SUCCESS		6538370	1					
ANR	6538443	CompoundStatement		37:25:1188:1188	6538370	1					
ANR	6538444	ExpressionStatement	perror ( __FUNCTION__ )	221:2:6770:6791	6538370	0	True				
ANR	6538445	CallExpression	perror ( __FUNCTION__ )		6538370	0					
ANR	6538446	Callee	perror		6538370	0					
ANR	6538447	Identifier	perror		6538370	0					
ANR	6538448	ArgumentList	__FUNCTION__		6538370	1					
ANR	6538449	Argument	__FUNCTION__		6538370	0					
ANR	6538450	Identifier	__FUNCTION__		6538370	0					
ANR	6538451	ExpressionStatement	thread -> count = 0	222:2:6795:6812	6538370	1	True				
ANR	6538452	AssignmentExpression	thread -> count = 0		6538370	0		=			
ANR	6538453	PtrMemberAccess	thread -> count		6538370	0					
ANR	6538454	Identifier	thread		6538370	0					
ANR	6538455	Identifier	count		6538370	1					
ANR	6538456	PrimaryExpression	0		6538370	1					
ANR	6538457	ReturnStatement	return false ;	223:2:6816:6828	6538370	2	True				
ANR	6538458	Identifier	false		6538370	0					
ANR	6538459	ReturnStatement	return true ;	225:1:6834:6845	6538370	7	True				
ANR	6538460	Identifier	true		6538370	0					
ANR	6538461	ReturnType	static bool		6538370	1					
ANR	6538462	Identifier	xnu_thread_get_gpr		6538370	2					
ANR	6538463	ParameterList	"RDebug * dbg , xnu_thread_t * thread"		6538370	3					
ANR	6538464	Parameter	RDebug * dbg	184:32:5542:5552	6538370	0	True				
ANR	6538465	ParameterType	RDebug *		6538370	0					
ANR	6538466	Identifier	dbg		6538370	1					
ANR	6538467	Parameter	xnu_thread_t * thread	184:45:5555:5574	6538370	1	True				
ANR	6538468	ParameterType	xnu_thread_t *		6538370	0					
ANR	6538469	Identifier	thread		6538370	1					
ANR	6538470	CFGEntryNode	ENTRY		6538370		True				
ANR	6538471	CFGExitNode	EXIT		6538370		True				
ANR	6538472	Symbol	thread -> state		6538370						
ANR	6538473	Symbol	thread -> count		6538370						
ANR	6538474	Symbol	& thread -> gpr		6538370						
ANR	6538475	Symbol	thread_get_state		6538370						
ANR	6538476	Symbol	dbg		6538370						
ANR	6538477	Symbol	false		6538370						
ANR	6538478	Symbol	regs		6538370						
ANR	6538479	Symbol	thread		6538370						
ANR	6538480	Symbol	__FUNCTION__		6538370						
ANR	6538481	Symbol	rc		6538370						
ANR	6538482	Symbol	true		6538370						
ANR	6538483	Symbol	* thread		6538370						
ANR	6538484	Symbol	KERN_SUCCESS		6538370						
ANR	6538485	Symbol	thread -> port		6538370						
ANR	6538486	Symbol	& thread -> count		6538370						
ANR	6538487	Symbol	thread -> flavor		6538370						
ANR	6538488	Function	xnu_fill_info_thread	228:0:6850:8024							
ANR	6538489	FunctionDef	"xnu_fill_info_thread (RDebug * dbg , xnu_thread_t * thread)"		6538488	0					
ANR	6538490	CompoundStatement		228:69:6919:8024	6538488	0					
ANR	6538491	ExpressionStatement	"thread -> name = strdup ( ""unknown"" )"	230:1:6938:6971	6538488	0	True				
ANR	6538492	AssignmentExpression	"thread -> name = strdup ( ""unknown"" )"		6538488	0		=			
ANR	6538493	PtrMemberAccess	thread -> name		6538488	0					
ANR	6538494	Identifier	thread		6538488	0					
ANR	6538495	Identifier	name		6538488	1					
ANR	6538496	CallExpression	"strdup ( ""unknown"" )"		6538488	1					
ANR	6538497	Callee	strdup		6538488	0					
ANR	6538498	Identifier	strdup		6538488	0					
ANR	6538499	ArgumentList	"""unknown"""		6538488	1					
ANR	6538500	Argument	"""unknown"""		6538488	0					
ANR	6538501	PrimaryExpression	"""unknown"""		6538488	0					
ANR	6538502	ReturnStatement	return false ;	231:1:6974:6986	6538488	1	True				
ANR	6538503	Identifier	false		6538488	0					
ANR	6538504	ReturnStatement	return true ;	264:1:8011:8022	6538488	2	True				
ANR	6538505	Identifier	true		6538488	0					
ANR	6538506	ReturnType	static bool		6538488	1					
ANR	6538507	Identifier	xnu_fill_info_thread		6538488	2					
ANR	6538508	ParameterList	"RDebug * dbg , xnu_thread_t * thread"		6538488	3					
ANR	6538509	Parameter	RDebug * dbg	228:34:6884:6894	6538488	0	True				
ANR	6538510	ParameterType	RDebug *		6538488	0					
ANR	6538511	Identifier	dbg		6538488	1					
ANR	6538512	Parameter	xnu_thread_t * thread	228:47:6897:6916	6538488	1	True				
ANR	6538513	ParameterType	xnu_thread_t *		6538488	0					
ANR	6538514	Identifier	thread		6538488	1					
ANR	6538515	CFGEntryNode	ENTRY		6538488		True				
ANR	6538516	CFGExitNode	EXIT		6538488		True				
ANR	6538517	Symbol	thread -> name		6538488						
ANR	6538518	Symbol	dbg		6538488						
ANR	6538519	Symbol	false		6538488						
ANR	6538520	Symbol	true		6538488						
ANR	6538521	Symbol	* thread		6538488						
ANR	6538522	Symbol	thread		6538488						
ANR	6538523	Symbol	strdup		6538488						
ANR	6538524	Function	xnu_get_thread_with_info	267:0:8027:8330							
ANR	6538525	FunctionDef	"xnu_get_thread_with_info (RDebug * dbg , thread_t port)"		6538524	0					
ANR	6538526	CompoundStatement		267:75:8102:8330	6538524	0					
ANR	6538527	IdentifierDeclStatement	xnu_thread_t * thread = R_NEW0 ( xnu_thread_t ) ;	268:1:8105:8149	6538524	0	True				
ANR	6538528	IdentifierDecl	* thread = R_NEW0 ( xnu_thread_t )		6538524	0					
ANR	6538529	IdentifierDeclType	xnu_thread_t *		6538524	0					
ANR	6538530	Identifier	thread		6538524	1					
ANR	6538531	AssignmentExpression	* thread = R_NEW0 ( xnu_thread_t )		6538524	2		=			
ANR	6538532	Identifier	thread		6538524	0					
ANR	6538533	CallExpression	R_NEW0 ( xnu_thread_t )		6538524	1					
ANR	6538534	Callee	R_NEW0		6538524	0					
ANR	6538535	Identifier	R_NEW0		6538524	0					
ANR	6538536	ArgumentList	xnu_thread_t		6538524	1					
ANR	6538537	Argument	xnu_thread_t		6538524	0					
ANR	6538538	Identifier	xnu_thread_t		6538524	0					
ANR	6538539	IfStatement	if ( ! thread )		6538524	1					
ANR	6538540	Condition	! thread	269:5:8156:8162	6538524	0	True				
ANR	6538541	UnaryOperationExpression	! thread		6538524	0					
ANR	6538542	UnaryOperator	!		6538524	0					
ANR	6538543	Identifier	thread		6538524	1					
ANR	6538544	CompoundStatement		3:14:62:62	6538524	1					
ANR	6538545	ReturnStatement	return NULL ;	270:2:8169:8180	6538524	0	True				
ANR	6538546	Identifier	NULL		6538524	0					
ANR	6538547	ExpressionStatement	thread -> port = port	272:1:8186:8205	6538524	2	True				
ANR	6538548	AssignmentExpression	thread -> port = port		6538524	0		=			
ANR	6538549	PtrMemberAccess	thread -> port		6538524	0					
ANR	6538550	Identifier	thread		6538524	0					
ANR	6538551	Identifier	port		6538524	1					
ANR	6538552	Identifier	port		6538524	1					
ANR	6538553	IfStatement	"if ( ! xnu_fill_info_thread ( dbg , thread ) )"		6538524	3					
ANR	6538554	Condition	"! xnu_fill_info_thread ( dbg , thread )"	273:5:8212:8246	6538524	0	True				
ANR	6538555	UnaryOperationExpression	"! xnu_fill_info_thread ( dbg , thread )"		6538524	0					
ANR	6538556	UnaryOperator	!		6538524	0					
ANR	6538557	CallExpression	"xnu_fill_info_thread ( dbg , thread )"		6538524	1					
ANR	6538558	Callee	xnu_fill_info_thread		6538524	0					
ANR	6538559	Identifier	xnu_fill_info_thread		6538524	0					
ANR	6538560	ArgumentList	dbg		6538524	1					
ANR	6538561	Argument	dbg		6538524	0					
ANR	6538562	Identifier	dbg		6538524	0					
ANR	6538563	Argument	thread		6538524	1					
ANR	6538564	Identifier	thread		6538524	0					
ANR	6538565	CompoundStatement		7:42:146:146	6538524	1					
ANR	6538566	ExpressionStatement	free ( thread -> name )	274:2:8253:8272	6538524	0	True				
ANR	6538567	CallExpression	free ( thread -> name )		6538524	0					
ANR	6538568	Callee	free		6538524	0					
ANR	6538569	Identifier	free		6538524	0					
ANR	6538570	ArgumentList	thread -> name		6538524	1					
ANR	6538571	Argument	thread -> name		6538524	0					
ANR	6538572	PtrMemberAccess	thread -> name		6538524	0					
ANR	6538573	Identifier	thread		6538524	0					
ANR	6538574	Identifier	name		6538524	1					
ANR	6538575	ExpressionStatement	"thread -> name = strdup ( ""unknown"" )"	275:2:8276:8309	6538524	1	True				
ANR	6538576	AssignmentExpression	"thread -> name = strdup ( ""unknown"" )"		6538524	0		=			
ANR	6538577	PtrMemberAccess	thread -> name		6538524	0					
ANR	6538578	Identifier	thread		6538524	0					
ANR	6538579	Identifier	name		6538524	1					
ANR	6538580	CallExpression	"strdup ( ""unknown"" )"		6538524	1					
ANR	6538581	Callee	strdup		6538524	0					
ANR	6538582	Identifier	strdup		6538524	0					
ANR	6538583	ArgumentList	"""unknown"""		6538524	1					
ANR	6538584	Argument	"""unknown"""		6538524	0					
ANR	6538585	PrimaryExpression	"""unknown"""		6538524	0					
ANR	6538586	ReturnStatement	return thread ;	277:1:8315:8328	6538524	4	True				
ANR	6538587	Identifier	thread		6538524	0					
ANR	6538588	ReturnType	static xnu_thread_t *		6538524	1					
ANR	6538589	Identifier	xnu_get_thread_with_info		6538524	2					
ANR	6538590	ParameterList	"RDebug * dbg , thread_t port"		6538524	3					
ANR	6538591	Parameter	RDebug * dbg	267:47:8074:8084	6538524	0	True				
ANR	6538592	ParameterType	RDebug *		6538524	0					
ANR	6538593	Identifier	dbg		6538524	1					
ANR	6538594	Parameter	thread_t port	267:60:8087:8099	6538524	1	True				
ANR	6538595	ParameterType	thread_t		6538524	0					
ANR	6538596	Identifier	port		6538524	1					
ANR	6538597	CFGEntryNode	ENTRY		6538524		True				
ANR	6538598	CFGExitNode	EXIT		6538524		True				
ANR	6538599	Symbol	R_NEW0		6538524						
ANR	6538600	Symbol	xnu_fill_info_thread		6538524						
ANR	6538601	Symbol	NULL		6538524						
ANR	6538602	Symbol	thread -> name		6538524						
ANR	6538603	Symbol	port		6538524						
ANR	6538604	Symbol	dbg		6538524						
ANR	6538605	Symbol	* thread		6538524						
ANR	6538606	Symbol	xnu_thread_t		6538524						
ANR	6538607	Symbol	thread		6538524						
ANR	6538608	Symbol	thread -> port		6538524						
ANR	6538609	Symbol	strdup		6538524						
ANR	6538610	Function	xnu_update_thread_info	280:0:8333:8526							
ANR	6538611	FunctionDef	"xnu_update_thread_info (RDebug * dbg , xnu_thread_t * thread)"		6538610	0					
ANR	6538612	CompoundStatement		280:70:8403:8526	6538610	0					
ANR	6538613	IfStatement	"if ( ! xnu_fill_info_thread ( dbg , thread ) )"		6538610	0					
ANR	6538614	Condition	"! xnu_fill_info_thread ( dbg , thread )"	281:5:8410:8444	6538610	0	True				
ANR	6538615	UnaryOperationExpression	"! xnu_fill_info_thread ( dbg , thread )"		6538610	0					
ANR	6538616	UnaryOperator	!		6538610	0					
ANR	6538617	CallExpression	"xnu_fill_info_thread ( dbg , thread )"		6538610	1					
ANR	6538618	Callee	xnu_fill_info_thread		6538610	0					
ANR	6538619	Identifier	xnu_fill_info_thread		6538610	0					
ANR	6538620	ArgumentList	dbg		6538610	1					
ANR	6538621	Argument	dbg		6538610	0					
ANR	6538622	Identifier	dbg		6538610	0					
ANR	6538623	Argument	thread		6538610	1					
ANR	6538624	Identifier	thread		6538610	0					
ANR	6538625	CompoundStatement		2:42:43:43	6538610	1					
ANR	6538626	ExpressionStatement	free ( thread -> name )	282:2:8451:8470	6538610	0	True				
ANR	6538627	CallExpression	free ( thread -> name )		6538610	0					
ANR	6538628	Callee	free		6538610	0					
ANR	6538629	Identifier	free		6538610	0					
ANR	6538630	ArgumentList	thread -> name		6538610	1					
ANR	6538631	Argument	thread -> name		6538610	0					
ANR	6538632	PtrMemberAccess	thread -> name		6538610	0					
ANR	6538633	Identifier	thread		6538610	0					
ANR	6538634	Identifier	name		6538610	1					
ANR	6538635	ExpressionStatement	"thread -> name = strdup ( ""unknown"" )"	283:2:8474:8507	6538610	1	True				
ANR	6538636	AssignmentExpression	"thread -> name = strdup ( ""unknown"" )"		6538610	0		=			
ANR	6538637	PtrMemberAccess	thread -> name		6538610	0					
ANR	6538638	Identifier	thread		6538610	0					
ANR	6538639	Identifier	name		6538610	1					
ANR	6538640	CallExpression	"strdup ( ""unknown"" )"		6538610	1					
ANR	6538641	Callee	strdup		6538610	0					
ANR	6538642	Identifier	strdup		6538610	0					
ANR	6538643	ArgumentList	"""unknown"""		6538610	1					
ANR	6538644	Argument	"""unknown"""		6538610	0					
ANR	6538645	PrimaryExpression	"""unknown"""		6538610	0					
ANR	6538646	ReturnStatement	return true ;	285:1:8513:8524	6538610	1	True				
ANR	6538647	Identifier	true		6538610	0					
ANR	6538648	ReturnType	static int		6538610	1					
ANR	6538649	Identifier	xnu_update_thread_info		6538610	2					
ANR	6538650	ParameterList	"RDebug * dbg , xnu_thread_t * thread"		6538610	3					
ANR	6538651	Parameter	RDebug * dbg	280:35:8368:8378	6538610	0	True				
ANR	6538652	ParameterType	RDebug *		6538610	0					
ANR	6538653	Identifier	dbg		6538610	1					
ANR	6538654	Parameter	xnu_thread_t * thread	280:48:8381:8400	6538610	1	True				
ANR	6538655	ParameterType	xnu_thread_t *		6538610	0					
ANR	6538656	Identifier	thread		6538610	1					
ANR	6538657	CFGEntryNode	ENTRY		6538610		True				
ANR	6538658	CFGExitNode	EXIT		6538610		True				
ANR	6538659	Symbol	xnu_fill_info_thread		6538610						
ANR	6538660	Symbol	thread -> name		6538610						
ANR	6538661	Symbol	dbg		6538610						
ANR	6538662	Symbol	true		6538610						
ANR	6538663	Symbol	* thread		6538610						
ANR	6538664	Symbol	thread		6538610						
ANR	6538665	Symbol	strdup		6538610						
ANR	6538666	Function	thread_find	288:0:8529:8637							
ANR	6538667	FunctionDef	"thread_find (thread_t * port , xnu_thread_t * a)"		6538666	0					
ANR	6538668	CompoundStatement		288:57:8586:8637	6538666	0					
ANR	6538669	ReturnStatement	return ( a && port && ( a -> port == * port ) ) ? 0 : 1 ;	289:1:8589:8635	6538666	0	True				
ANR	6538670	ConditionalExpression	( a && port && ( a -> port == * port ) ) ? 0 : 1		6538666	0					
ANR	6538671	Condition	a && port && ( a -> port == * port )		6538666	0					
ANR	6538672	AndExpression	a && port && ( a -> port == * port )		6538666	0		&&			
ANR	6538673	Identifier	a		6538666	0					
ANR	6538674	AndExpression	port && ( a -> port == * port )		6538666	1		&&			
ANR	6538675	Identifier	port		6538666	0					
ANR	6538676	EqualityExpression	a -> port == * port		6538666	1		==			
ANR	6538677	PtrMemberAccess	a -> port		6538666	0					
ANR	6538678	Identifier	a		6538666	0					
ANR	6538679	Identifier	port		6538666	1					
ANR	6538680	UnaryOperationExpression	* port		6538666	1					
ANR	6538681	UnaryOperator	*		6538666	0					
ANR	6538682	Identifier	port		6538666	1					
ANR	6538683	PrimaryExpression	0		6538666	1					
ANR	6538684	PrimaryExpression	1		6538666	2					
ANR	6538685	ReturnType	static int		6538666	1					
ANR	6538686	Identifier	thread_find		6538666	2					
ANR	6538687	ParameterList	"thread_t * port , xnu_thread_t * a"		6538666	3					
ANR	6538688	Parameter	thread_t * port	288:24:8553:8566	6538666	0	True				
ANR	6538689	ParameterType	thread_t *		6538666	0					
ANR	6538690	Identifier	port		6538666	1					
ANR	6538691	Parameter	xnu_thread_t * a	288:40:8569:8583	6538666	1	True				
ANR	6538692	ParameterType	xnu_thread_t *		6538666	0					
ANR	6538693	Identifier	a		6538666	1					
ANR	6538694	CFGEntryNode	ENTRY		6538666		True				
ANR	6538695	CFGExitNode	EXIT		6538666		True				
ANR	6538696	Symbol	a		6538666						
ANR	6538697	Symbol	a -> port		6538666						
ANR	6538698	Symbol	* port		6538666						
ANR	6538699	Symbol	port		6538666						
ANR	6538700	Symbol	* a		6538666						
ANR	6538701	Function	xnu_update_thread_list	292:0:8640:11156							
ANR	6538702	FunctionDef	xnu_update_thread_list (RDebug * dbg)		6538701	0					
ANR	6538703	CompoundStatement		292:48:8688:11156	6538701	0					
ANR	6538704	IdentifierDeclStatement	thread_array_t thread_list = NULL ;	293:1:8691:8724	6538701	0	True				
ANR	6538705	IdentifierDecl	thread_list = NULL		6538701	0					
ANR	6538706	IdentifierDeclType	thread_array_t		6538701	0					
ANR	6538707	Identifier	thread_list		6538701	1					
ANR	6538708	AssignmentExpression	thread_list = NULL		6538701	2		=			
ANR	6538709	Identifier	NULL		6538701	0					
ANR	6538710	Identifier	NULL		6538701	1					
ANR	6538711	IdentifierDeclStatement	unsigned int thread_count = 0 ;	294:1:8727:8757	6538701	1	True				
ANR	6538712	IdentifierDecl	thread_count = 0		6538701	0					
ANR	6538713	IdentifierDeclType	unsigned int		6538701	0					
ANR	6538714	Identifier	thread_count		6538701	1					
ANR	6538715	AssignmentExpression	thread_count = 0		6538701	2		=			
ANR	6538716	Identifier	thread_count		6538701	0					
ANR	6538717	PrimaryExpression	0		6538701	1					
ANR	6538718	IdentifierDeclStatement	xnu_thread_t * thread ;	295:1:8760:8780	6538701	2	True				
ANR	6538719	IdentifierDecl	* thread		6538701	0					
ANR	6538720	IdentifierDeclType	xnu_thread_t *		6538701	0					
ANR	6538721	Identifier	thread		6538701	1					
ANR	6538722	IdentifierDeclStatement	kern_return_t kr ;	296:1:8783:8799	6538701	3	True				
ANR	6538723	IdentifierDecl	kr		6538701	0					
ANR	6538724	IdentifierDeclType	kern_return_t		6538701	0					
ANR	6538725	Identifier	kr		6538701	1					
ANR	6538726	IdentifierDeclStatement	task_t task ;	297:1:8802:8813	6538701	4	True				
ANR	6538727	IdentifierDecl	task		6538701	0					
ANR	6538728	IdentifierDeclType	task_t		6538701	0					
ANR	6538729	Identifier	task		6538701	1					
ANR	6538730	IdentifierDeclStatement	int i ;	298:1:8816:8821	6538701	5	True				
ANR	6538731	IdentifierDecl	i		6538701	0					
ANR	6538732	IdentifierDeclType	int		6538701	0					
ANR	6538733	Identifier	i		6538701	1					
ANR	6538734	IfStatement	if ( ! dbg -> threads )		6538701	6					
ANR	6538735	Condition	! dbg -> threads	300:5:8829:8841	6538701	0	True				
ANR	6538736	UnaryOperationExpression	! dbg -> threads		6538701	0					
ANR	6538737	UnaryOperator	!		6538701	0					
ANR	6538738	PtrMemberAccess	dbg -> threads		6538701	1					
ANR	6538739	Identifier	dbg		6538701	0					
ANR	6538740	Identifier	threads		6538701	1					
ANR	6538741	CompoundStatement		9:20:155:155	6538701	1					
ANR	6538742	ExpressionStatement	dbg -> threads = r_list_newf ( ( RListFree ) & xnu_thread_free )	301:2:8848:8904	6538701	0	True				
ANR	6538743	AssignmentExpression	dbg -> threads = r_list_newf ( ( RListFree ) & xnu_thread_free )		6538701	0		=			
ANR	6538744	PtrMemberAccess	dbg -> threads		6538701	0					
ANR	6538745	Identifier	dbg		6538701	0					
ANR	6538746	Identifier	threads		6538701	1					
ANR	6538747	CallExpression	r_list_newf ( ( RListFree ) & xnu_thread_free )		6538701	1					
ANR	6538748	Callee	r_list_newf		6538701	0					
ANR	6538749	Identifier	r_list_newf		6538701	0					
ANR	6538750	ArgumentList	( RListFree ) & xnu_thread_free		6538701	1					
ANR	6538751	Argument	( RListFree ) & xnu_thread_free		6538701	0					
ANR	6538752	CastExpression	( RListFree ) & xnu_thread_free		6538701	0					
ANR	6538753	CastTarget	RListFree		6538701	0					
ANR	6538754	UnaryOperationExpression	& xnu_thread_free		6538701	1					
ANR	6538755	UnaryOperator	&		6538701	0					
ANR	6538756	Identifier	xnu_thread_free		6538701	1					
ANR	6538757	IfStatement	if ( ! dbg -> threads )		6538701	1					
ANR	6538758	Condition	! dbg -> threads	302:6:8912:8924	6538701	0	True				
ANR	6538759	UnaryOperationExpression	! dbg -> threads		6538701	0					
ANR	6538760	UnaryOperator	!		6538701	0					
ANR	6538761	PtrMemberAccess	dbg -> threads		6538701	1					
ANR	6538762	Identifier	dbg		6538701	0					
ANR	6538763	Identifier	threads		6538701	1					
ANR	6538764	CompoundStatement		11:21:238:238	6538701	1					
ANR	6538765	ReturnStatement	return false ;	303:3:8932:8944	6538701	0	True				
ANR	6538766	Identifier	false		6538701	0					
ANR	6538767	ExpressionStatement	task = pid_to_task ( dbg -> pid )	308:1:9034:9063	6538701	7	True				
ANR	6538768	AssignmentExpression	task = pid_to_task ( dbg -> pid )		6538701	0		=			
ANR	6538769	Identifier	task		6538701	0					
ANR	6538770	CallExpression	pid_to_task ( dbg -> pid )		6538701	1					
ANR	6538771	Callee	pid_to_task		6538701	0					
ANR	6538772	Identifier	pid_to_task		6538701	0					
ANR	6538773	ArgumentList	dbg -> pid		6538701	1					
ANR	6538774	Argument	dbg -> pid		6538701	0					
ANR	6538775	PtrMemberAccess	dbg -> pid		6538701	0					
ANR	6538776	Identifier	dbg		6538701	0					
ANR	6538777	Identifier	pid		6538701	1					
ANR	6538778	IfStatement	if ( ! task )		6538701	8					
ANR	6538779	Condition	! task	309:5:9070:9074	6538701	0	True				
ANR	6538780	UnaryOperationExpression	! task		6538701	0					
ANR	6538781	UnaryOperator	!		6538701	0					
ANR	6538782	Identifier	task		6538701	1					
ANR	6538783	CompoundStatement		18:12:388:388	6538701	1					
ANR	6538784	ReturnStatement	return false ;	310:2:9081:9093	6538701	0	True				
ANR	6538785	Identifier	false		6538701	0					
ANR	6538786	ExpressionStatement	"kr = task_threads ( task , & thread_list , & thread_count )"	312:1:9099:9152	6538701	9	True				
ANR	6538787	AssignmentExpression	"kr = task_threads ( task , & thread_list , & thread_count )"		6538701	0		=			
ANR	6538788	Identifier	kr		6538701	0					
ANR	6538789	CallExpression	"task_threads ( task , & thread_list , & thread_count )"		6538701	1					
ANR	6538790	Callee	task_threads		6538701	0					
ANR	6538791	Identifier	task_threads		6538701	0					
ANR	6538792	ArgumentList	task		6538701	1					
ANR	6538793	Argument	task		6538701	0					
ANR	6538794	Identifier	task		6538701	0					
ANR	6538795	Argument	& thread_list		6538701	1					
ANR	6538796	UnaryOperationExpression	& thread_list		6538701	0					
ANR	6538797	UnaryOperator	&		6538701	0					
ANR	6538798	Identifier	thread_list		6538701	1					
ANR	6538799	Argument	& thread_count		6538701	2					
ANR	6538800	UnaryOperationExpression	& thread_count		6538701	0					
ANR	6538801	UnaryOperator	&		6538701	0					
ANR	6538802	Identifier	thread_count		6538701	1					
ANR	6538803	IfStatement	if ( kr != KERN_SUCCESS )		6538701	10					
ANR	6538804	Condition	kr != KERN_SUCCESS	313:5:9159:9176	6538701	0	True				
ANR	6538805	EqualityExpression	kr != KERN_SUCCESS		6538701	0		!=			
ANR	6538806	Identifier	kr		6538701	0					
ANR	6538807	Identifier	KERN_SUCCESS		6538701	1					
ANR	6538808	CompoundStatement		22:25:490:490	6538701	1					
ANR	6538809	ExpressionStatement	"eprintf ( ""Failed to get list of task's threads\\n"" )"	316:2:9303:9353	6538701	0	True				
ANR	6538810	CallExpression	"eprintf ( ""Failed to get list of task's threads\\n"" )"		6538701	0					
ANR	6538811	Callee	eprintf		6538701	0					
ANR	6538812	Identifier	eprintf		6538701	0					
ANR	6538813	ArgumentList	"""Failed to get list of task's threads\\n"""		6538701	1					
ANR	6538814	Argument	"""Failed to get list of task's threads\\n"""		6538701	0					
ANR	6538815	PrimaryExpression	"""Failed to get list of task's threads\\n"""		6538701	0					
ANR	6538816	ReturnStatement	return false ;	317:2:9357:9369	6538701	1	True				
ANR	6538817	Identifier	false		6538701	0					
ANR	6538818	IfStatement	if ( r_list_empty ( dbg -> threads ) )		6538701	11					
ANR	6538819	Condition	r_list_empty ( dbg -> threads )	319:5:9379:9405	6538701	0	True				
ANR	6538820	CallExpression	r_list_empty ( dbg -> threads )		6538701	0					
ANR	6538821	Callee	r_list_empty		6538701	0					
ANR	6538822	Identifier	r_list_empty		6538701	0					
ANR	6538823	ArgumentList	dbg -> threads		6538701	1					
ANR	6538824	Argument	dbg -> threads		6538701	0					
ANR	6538825	PtrMemberAccess	dbg -> threads		6538701	0					
ANR	6538826	Identifier	dbg		6538701	0					
ANR	6538827	Identifier	threads		6538701	1					
ANR	6538828	CompoundStatement		28:34:719:719	6538701	1					
ANR	6538829	ForStatement	for ( i = 0 ; i < thread_count ; i ++ )		6538701	0					
ANR	6538830	ForInit	i = 0 ;	321:7:9476:9481	6538701	0	True				
ANR	6538831	AssignmentExpression	i = 0		6538701	0		=			
ANR	6538832	Identifier	i		6538701	0					
ANR	6538833	PrimaryExpression	0		6538701	1					
ANR	6538834	Condition	i < thread_count	321:14:9483:9498	6538701	1	True				
ANR	6538835	RelationalExpression	i < thread_count		6538701	0		<			
ANR	6538836	Identifier	i		6538701	0					
ANR	6538837	Identifier	thread_count		6538701	1					
ANR	6538838	PostIncDecOperationExpression	i ++	321:32:9501:9503	6538701	2	True				
ANR	6538839	Identifier	i		6538701	0					
ANR	6538840	IncDec	++		6538701	1					
ANR	6538841	CompoundStatement		30:37:817:817	6538701	3					
ANR	6538842	ExpressionStatement	"thread = xnu_get_thread_with_info ( dbg , thread_list [ i ] )"	322:3:9511:9566	6538701	0	True				
ANR	6538843	AssignmentExpression	"thread = xnu_get_thread_with_info ( dbg , thread_list [ i ] )"		6538701	0		=			
ANR	6538844	Identifier	thread		6538701	0					
ANR	6538845	CallExpression	"xnu_get_thread_with_info ( dbg , thread_list [ i ] )"		6538701	1					
ANR	6538846	Callee	xnu_get_thread_with_info		6538701	0					
ANR	6538847	Identifier	xnu_get_thread_with_info		6538701	0					
ANR	6538848	ArgumentList	dbg		6538701	1					
ANR	6538849	Argument	dbg		6538701	0					
ANR	6538850	Identifier	dbg		6538701	0					
ANR	6538851	Argument	thread_list [ i ]		6538701	1					
ANR	6538852	ArrayIndexing	thread_list [ i ]		6538701	0					
ANR	6538853	Identifier	thread_list		6538701	0					
ANR	6538854	Identifier	i		6538701	1					
ANR	6538855	IfStatement	if ( ! thread )		6538701	1					
ANR	6538856	Condition	! thread	323:7:9575:9581	6538701	0	True				
ANR	6538857	UnaryOperationExpression	! thread		6538701	0					
ANR	6538858	UnaryOperator	!		6538701	0					
ANR	6538859	Identifier	thread		6538701	1					
ANR	6538860	CompoundStatement		32:16:895:895	6538701	1					
ANR	6538861	ExpressionStatement	"eprintf ( ""Failed to fill_thread\\n"" )"	324:4:9590:9625	6538701	0	True				
ANR	6538862	CallExpression	"eprintf ( ""Failed to fill_thread\\n"" )"		6538701	0					
ANR	6538863	Callee	eprintf		6538701	0					
ANR	6538864	Identifier	eprintf		6538701	0					
ANR	6538865	ArgumentList	"""Failed to fill_thread\\n"""		6538701	1					
ANR	6538866	Argument	"""Failed to fill_thread\\n"""		6538701	0					
ANR	6538867	PrimaryExpression	"""Failed to fill_thread\\n"""		6538701	0					
ANR	6538868	ContinueStatement	continue ;	325:4:9631:9639	6538701	1	True				
ANR	6538869	IfStatement	"if ( ! r_list_append ( dbg -> threads , thread ) )"		6538701	2					
ANR	6538870	Condition	"! r_list_append ( dbg -> threads , thread )"	327:7:9653:9689	6538701	0	True				
ANR	6538871	UnaryOperationExpression	"! r_list_append ( dbg -> threads , thread )"		6538701	0					
ANR	6538872	UnaryOperator	!		6538701	0					
ANR	6538873	CallExpression	"r_list_append ( dbg -> threads , thread )"		6538701	1					
ANR	6538874	Callee	r_list_append		6538701	0					
ANR	6538875	Identifier	r_list_append		6538701	0					
ANR	6538876	ArgumentList	dbg -> threads		6538701	1					
ANR	6538877	Argument	dbg -> threads		6538701	0					
ANR	6538878	PtrMemberAccess	dbg -> threads		6538701	0					
ANR	6538879	Identifier	dbg		6538701	0					
ANR	6538880	Identifier	threads		6538701	1					
ANR	6538881	Argument	thread		6538701	1					
ANR	6538882	Identifier	thread		6538701	0					
ANR	6538883	CompoundStatement		36:46:1003:1003	6538701	1					
ANR	6538884	ExpressionStatement	"eprintf ( ""Failed to add thread to list\\n"" )"	328:4:9698:9740	6538701	0	True				
ANR	6538885	CallExpression	"eprintf ( ""Failed to add thread to list\\n"" )"		6538701	0					
ANR	6538886	Callee	eprintf		6538701	0					
ANR	6538887	Identifier	eprintf		6538701	0					
ANR	6538888	ArgumentList	"""Failed to add thread to list\\n"""		6538701	1					
ANR	6538889	Argument	"""Failed to add thread to list\\n"""		6538701	0					
ANR	6538890	PrimaryExpression	"""Failed to add thread to list\\n"""		6538701	0					
ANR	6538891	ExpressionStatement	xnu_thread_free ( thread )	329:4:9746:9770	6538701	1	True				
ANR	6538892	CallExpression	xnu_thread_free ( thread )		6538701	0					
ANR	6538893	Callee	xnu_thread_free		6538701	0					
ANR	6538894	Identifier	xnu_thread_free		6538701	0					
ANR	6538895	ArgumentList	thread		6538701	1					
ANR	6538896	Argument	thread		6538701	0					
ANR	6538897	Identifier	thread		6538701	0					
ANR	6538898	ElseStatement	else		6538701	0					
ANR	6538899	CompoundStatement		42:2:1104:1127	6538701	0					
ANR	6538900	IdentifierDeclStatement	"RListIter * iter , * iter2 ;"	333:2:9793:9816	6538701	0	True				
ANR	6538901	IdentifierDecl	* iter		6538701	0					
ANR	6538902	IdentifierDeclType	RListIter *		6538701	0					
ANR	6538903	Identifier	iter		6538701	1					
ANR	6538904	IdentifierDecl	* iter2		6538701	1					
ANR	6538905	IdentifierDeclType	RListIter *		6538701	0					
ANR	6538906	Identifier	iter2		6538701	1					
ANR	6538907	Statement	r_list_foreach_safe	336:2:9895:9913	6538701	1	True				
ANR	6538908	Statement	(	336:22:9915:9915	6538701	2	True				
ANR	6538909	Statement	dbg	336:23:9916:9918	6538701	3	True				
ANR	6538910	Statement	->	336:26:9919:9920	6538701	4	True				
ANR	6538911	Statement	threads	336:28:9921:9927	6538701	5	True				
ANR	6538912	Statement	","	336:35:9928:9928	6538701	6	True				
ANR	6538913	Statement	iter	336:37:9930:9933	6538701	7	True				
ANR	6538914	Statement	","	336:41:9934:9934	6538701	8	True				
ANR	6538915	Statement	iter2	336:43:9936:9940	6538701	9	True				
ANR	6538916	Statement	","	336:48:9941:9941	6538701	10	True				
ANR	6538917	Statement	thread	336:50:9943:9948	6538701	11	True				
ANR	6538918	Statement	)	336:56:9949:9949	6538701	12	True				
ANR	6538919	CompoundStatement		46:3:1267:1283	6538701	13					
ANR	6538920	IdentifierDeclStatement	bool flag = true ;	337:3:9956:9972	6538701	0	True				
ANR	6538921	IdentifierDecl	flag = true		6538701	0					
ANR	6538922	IdentifierDeclType	bool		6538701	0					
ANR	6538923	Identifier	flag		6538701	1					
ANR	6538924	AssignmentExpression	flag = true		6538701	2		=			
ANR	6538925	Identifier	true		6538701	0					
ANR	6538926	Identifier	true		6538701	1					
ANR	6538927	ForStatement	for ( i = 0 ; i < thread_count ; i ++ )		6538701	1					
ANR	6538928	ForInit	i = 0 ;	339:8:10040:10045	6538701	0	True				
ANR	6538929	AssignmentExpression	i = 0		6538701	0		=			
ANR	6538930	Identifier	i		6538701	0					
ANR	6538931	PrimaryExpression	0		6538701	1					
ANR	6538932	Condition	i < thread_count	339:15:10047:10062	6538701	1	True				
ANR	6538933	RelationalExpression	i < thread_count		6538701	0		<			
ANR	6538934	Identifier	i		6538701	0					
ANR	6538935	Identifier	thread_count		6538701	1					
ANR	6538936	PostIncDecOperationExpression	i ++	339:33:10065:10067	6538701	2	True				
ANR	6538937	Identifier	i		6538701	0					
ANR	6538938	IncDec	++		6538701	1					
ANR	6538939	CompoundStatement		48:38:1381:1381	6538701	3					
ANR	6538940	IfStatement	if ( thread -> port == thread_list [ i ] )		6538701	0					
ANR	6538941	Condition	thread -> port == thread_list [ i ]	340:8:10080:10109	6538701	0	True				
ANR	6538942	EqualityExpression	thread -> port == thread_list [ i ]		6538701	0		==			
ANR	6538943	PtrMemberAccess	thread -> port		6538701	0					
ANR	6538944	Identifier	thread		6538701	0					
ANR	6538945	Identifier	port		6538701	1					
ANR	6538946	ArrayIndexing	thread_list [ i ]		6538701	1					
ANR	6538947	Identifier	thread_list		6538701	0					
ANR	6538948	Identifier	i		6538701	1					
ANR	6538949	CompoundStatement		49:40:1423:1423	6538701	1					
ANR	6538950	ExpressionStatement	flag = false	341:5:10119:10131	6538701	0	True				
ANR	6538951	AssignmentExpression	flag = false		6538701	0		=			
ANR	6538952	Identifier	flag		6538701	0					
ANR	6538953	Identifier	false		6538701	1					
ANR	6538954	BreakStatement	break ;	342:5:10138:10143	6538701	1	True				
ANR	6538955	IfStatement	if ( flag )		6538701	2					
ANR	6538956	Condition	flag	345:7:10163:10166	6538701	0	True				
ANR	6538957	Identifier	flag		6538701	0					
ANR	6538958	CompoundStatement		54:13:1480:1480	6538701	1					
ANR	6538959	ExpressionStatement	"r_list_delete ( dbg -> threads , iter )"	348:4:10236:10270	6538701	0	True				
ANR	6538960	CallExpression	"r_list_delete ( dbg -> threads , iter )"		6538701	0					
ANR	6538961	Callee	r_list_delete		6538701	0					
ANR	6538962	Identifier	r_list_delete		6538701	0					
ANR	6538963	ArgumentList	dbg -> threads		6538701	1					
ANR	6538964	Argument	dbg -> threads		6538701	0					
ANR	6538965	PtrMemberAccess	dbg -> threads		6538701	0					
ANR	6538966	Identifier	dbg		6538701	0					
ANR	6538967	Identifier	threads		6538701	1					
ANR	6538968	Argument	iter		6538701	1					
ANR	6538969	Identifier	iter		6538701	0					
ANR	6538970	ElseStatement	else		6538701	0					
ANR	6538971	CompoundStatement		58:10:1593:1593	6538701	0					
ANR	6538972	ExpressionStatement	"xnu_update_thread_info ( dbg , thread )"	351:4:10321:10357	6538701	0	True				
ANR	6538973	CallExpression	"xnu_update_thread_info ( dbg , thread )"		6538701	0					
ANR	6538974	Callee	xnu_update_thread_info		6538701	0					
ANR	6538975	Identifier	xnu_update_thread_info		6538701	0					
ANR	6538976	ArgumentList	dbg		6538701	1					
ANR	6538977	Argument	dbg		6538701	0					
ANR	6538978	Identifier	dbg		6538701	0					
ANR	6538979	Argument	thread		6538701	1					
ANR	6538980	Identifier	thread		6538701	0					
ANR	6538981	ForStatement	for ( i = 0 ; i < thread_count ; i ++ )		6538701	14					
ANR	6538982	ForInit	i = 0 ;	355:7:10438:10443	6538701	0	True				
ANR	6538983	AssignmentExpression	i = 0		6538701	0		=			
ANR	6538984	Identifier	i		6538701	0					
ANR	6538985	PrimaryExpression	0		6538701	1					
ANR	6538986	Condition	i < thread_count	355:14:10445:10460	6538701	1	True				
ANR	6538987	RelationalExpression	i < thread_count		6538701	0		<			
ANR	6538988	Identifier	i		6538701	0					
ANR	6538989	Identifier	thread_count		6538701	1					
ANR	6538990	PostIncDecOperationExpression	i ++	355:32:10463:10465	6538701	2	True				
ANR	6538991	Identifier	i		6538701	0					
ANR	6538992	IncDec	++		6538701	1					
ANR	6538993	CompoundStatement		65:3:1784:1799	6538701	3					
ANR	6538994	IdentifierDeclStatement	xnu_thread_t * t ;	356:3:10473:10488	6538701	0	True				
ANR	6538995	IdentifierDecl	* t		6538701	0					
ANR	6538996	IdentifierDeclType	xnu_thread_t *		6538701	0					
ANR	6538997	Identifier	t		6538701	1					
ANR	6538998	ExpressionStatement	"iter = r_list_find ( dbg -> threads , & thread_list [ i ] , ( RListComparator ) & thread_find )"	357:3:10493:10583	6538701	1	True				
ANR	6538999	AssignmentExpression	"iter = r_list_find ( dbg -> threads , & thread_list [ i ] , ( RListComparator ) & thread_find )"		6538701	0		=			
ANR	6539000	Identifier	iter		6538701	0					
ANR	6539001	CallExpression	"r_list_find ( dbg -> threads , & thread_list [ i ] , ( RListComparator ) & thread_find )"		6538701	1					
ANR	6539002	Callee	r_list_find		6538701	0					
ANR	6539003	Identifier	r_list_find		6538701	0					
ANR	6539004	ArgumentList	dbg -> threads		6538701	1					
ANR	6539005	Argument	dbg -> threads		6538701	0					
ANR	6539006	PtrMemberAccess	dbg -> threads		6538701	0					
ANR	6539007	Identifier	dbg		6538701	0					
ANR	6539008	Identifier	threads		6538701	1					
ANR	6539009	Argument	& thread_list [ i ]		6538701	1					
ANR	6539010	UnaryOperationExpression	& thread_list [ i ]		6538701	0					
ANR	6539011	UnaryOperator	&		6538701	0					
ANR	6539012	ArrayIndexing	thread_list [ i ]		6538701	1					
ANR	6539013	Identifier	thread_list		6538701	0					
ANR	6539014	Identifier	i		6538701	1					
ANR	6539015	Argument	( RListComparator ) & thread_find		6538701	2					
ANR	6539016	CastExpression	( RListComparator ) & thread_find		6538701	0					
ANR	6539017	CastTarget	RListComparator		6538701	0					
ANR	6539018	UnaryOperationExpression	& thread_find		6538701	1					
ANR	6539019	UnaryOperator	&		6538701	0					
ANR	6539020	Identifier	thread_find		6538701	1					
ANR	6539021	IfStatement	if ( iter )		6538701	2					
ANR	6539022	Condition	iter	360:7:10630:10633	6538701	0	True				
ANR	6539023	Identifier	iter		6538701	0					
ANR	6539024	CompoundStatement		69:13:1947:1947	6538701	1					
ANR	6539025	ExpressionStatement	"kr = mach_port_deallocate ( mach_task_self ( ) , thread_list [ i ] )"	362:4:10684:10755	6538701	0	True				
ANR	6539026	AssignmentExpression	"kr = mach_port_deallocate ( mach_task_self ( ) , thread_list [ i ] )"		6538701	0		=			
ANR	6539027	Identifier	kr		6538701	0					
ANR	6539028	CallExpression	"mach_port_deallocate ( mach_task_self ( ) , thread_list [ i ] )"		6538701	1					
ANR	6539029	Callee	mach_port_deallocate		6538701	0					
ANR	6539030	Identifier	mach_port_deallocate		6538701	0					
ANR	6539031	ArgumentList	mach_task_self ( )		6538701	1					
ANR	6539032	Argument	mach_task_self ( )		6538701	0					
ANR	6539033	CallExpression	mach_task_self ( )		6538701	0					
ANR	6539034	Callee	mach_task_self		6538701	0					
ANR	6539035	Identifier	mach_task_self		6538701	0					
ANR	6539036	ArgumentList			6538701	1					
ANR	6539037	Argument	thread_list [ i ]		6538701	1					
ANR	6539038	ArrayIndexing	thread_list [ i ]		6538701	0					
ANR	6539039	Identifier	thread_list		6538701	0					
ANR	6539040	Identifier	i		6538701	1					
ANR	6539041	IfStatement	if ( kr != KERN_SUCCESS )		6538701	1					
ANR	6539042	Condition	kr != KERN_SUCCESS	364:8:10765:10782	6538701	0	True				
ANR	6539043	EqualityExpression	kr != KERN_SUCCESS		6538701	0		!=			
ANR	6539044	Identifier	kr		6538701	0					
ANR	6539045	Identifier	KERN_SUCCESS		6538701	1					
ANR	6539046	CompoundStatement		73:28:2096:2096	6538701	1					
ANR	6539047	ExpressionStatement	"eprintf ( ""Failed to deallocate port\\n"" )"	365:5:10792:10831	6538701	0	True				
ANR	6539048	CallExpression	"eprintf ( ""Failed to deallocate port\\n"" )"		6538701	0					
ANR	6539049	Callee	eprintf		6538701	0					
ANR	6539050	Identifier	eprintf		6538701	0					
ANR	6539051	ArgumentList	"""Failed to deallocate port\\n"""		6538701	1					
ANR	6539052	Argument	"""Failed to deallocate port\\n"""		6538701	0					
ANR	6539053	PrimaryExpression	"""Failed to deallocate port\\n"""		6538701	0					
ANR	6539054	ContinueStatement	continue ;	367:4:10843:10851	6538701	2	True				
ANR	6539055	ExpressionStatement	"t = xnu_get_thread_with_info ( dbg , thread_list [ i ] )"	370:3:10887:10937	6538701	3	True				
ANR	6539056	AssignmentExpression	"t = xnu_get_thread_with_info ( dbg , thread_list [ i ] )"		6538701	0		=			
ANR	6539057	Identifier	t		6538701	0					
ANR	6539058	CallExpression	"xnu_get_thread_with_info ( dbg , thread_list [ i ] )"		6538701	1					
ANR	6539059	Callee	xnu_get_thread_with_info		6538701	0					
ANR	6539060	Identifier	xnu_get_thread_with_info		6538701	0					
ANR	6539061	ArgumentList	dbg		6538701	1					
ANR	6539062	Argument	dbg		6538701	0					
ANR	6539063	Identifier	dbg		6538701	0					
ANR	6539064	Argument	thread_list [ i ]		6538701	1					
ANR	6539065	ArrayIndexing	thread_list [ i ]		6538701	0					
ANR	6539066	Identifier	thread_list		6538701	0					
ANR	6539067	Identifier	i		6538701	1					
ANR	6539068	ExpressionStatement	"r_list_append ( dbg -> threads , t )"	371:3:10942:10973	6538701	4	True				
ANR	6539069	CallExpression	"r_list_append ( dbg -> threads , t )"		6538701	0					
ANR	6539070	Callee	r_list_append		6538701	0					
ANR	6539071	Identifier	r_list_append		6538701	0					
ANR	6539072	ArgumentList	dbg -> threads		6538701	1					
ANR	6539073	Argument	dbg -> threads		6538701	0					
ANR	6539074	PtrMemberAccess	dbg -> threads		6538701	0					
ANR	6539075	Identifier	dbg		6538701	0					
ANR	6539076	Identifier	threads		6538701	1					
ANR	6539077	Argument	t		6538701	1					
ANR	6539078	Identifier	t		6538701	0					
ANR	6539079	ExpressionStatement	"( void ) vm_deallocate ( mach_task_self ( ) , ( mach_vm_address_t ) thread_list , thread_count * sizeof ( thread_t ) )"	375:1:11032:11140	6538701	12	True				
ANR	6539080	CastExpression	"( void ) vm_deallocate ( mach_task_self ( ) , ( mach_vm_address_t ) thread_list , thread_count * sizeof ( thread_t ) )"		6538701	0					
ANR	6539081	CastTarget	void		6538701	0					
ANR	6539082	CallExpression	"vm_deallocate ( mach_task_self ( ) , ( mach_vm_address_t ) thread_list , thread_count * sizeof ( thread_t ) )"		6538701	1					
ANR	6539083	Callee	vm_deallocate		6538701	0					
ANR	6539084	Identifier	vm_deallocate		6538701	0					
ANR	6539085	ArgumentList	mach_task_self ( )		6538701	1					
ANR	6539086	Argument	mach_task_self ( )		6538701	0					
ANR	6539087	CallExpression	mach_task_self ( )		6538701	0					
ANR	6539088	Callee	mach_task_self		6538701	0					
ANR	6539089	Identifier	mach_task_self		6538701	0					
ANR	6539090	ArgumentList			6538701	1					
ANR	6539091	Argument	( mach_vm_address_t ) thread_list		6538701	1					
ANR	6539092	CastExpression	( mach_vm_address_t ) thread_list		6538701	0					
ANR	6539093	CastTarget	mach_vm_address_t		6538701	0					
ANR	6539094	Identifier	thread_list		6538701	1					
ANR	6539095	Argument	thread_count * sizeof ( thread_t )		6538701	2					
ANR	6539096	MultiplicativeExpression	thread_count * sizeof ( thread_t )		6538701	0		*			
ANR	6539097	Identifier	thread_count		6538701	0					
ANR	6539098	SizeofExpression	sizeof ( thread_t )		6538701	1					
ANR	6539099	Sizeof	sizeof		6538701	0					
ANR	6539100	SizeofOperand	thread_t		6538701	1					
ANR	6539101	ReturnStatement	return true ;	377:1:11143:11154	6538701	13	True				
ANR	6539102	Identifier	true		6538701	0					
ANR	6539103	ReturnType	static int		6538701	1					
ANR	6539104	Identifier	xnu_update_thread_list		6538701	2					
ANR	6539105	ParameterList	RDebug * dbg		6538701	3					
ANR	6539106	Parameter	RDebug * dbg	292:35:8675:8685	6538701	0	True				
ANR	6539107	ParameterType	RDebug *		6538701	0					
ANR	6539108	Identifier	dbg		6538701	1					
ANR	6539109	CFGEntryNode	ENTRY		6538701		True				
ANR	6539110	CFGExitNode	EXIT		6538701		True				
ANR	6539111	Symbol	flag		6538701						
ANR	6539112	Symbol	& thread_list		6538701						
ANR	6539113	Symbol	xnu_get_thread_with_info		6538701						
ANR	6539114	Symbol	* thread		6538701						
ANR	6539115	Symbol	KERN_SUCCESS		6538701						
ANR	6539116	Symbol	task_threads		6538701						
ANR	6539117	Symbol	NULL		6538701						
ANR	6539118	Symbol	r_list_newf		6538701						
ANR	6539119	Symbol	thread_list		6538701						
ANR	6539120	Symbol	kr		6538701						
ANR	6539121	Symbol	iter2		6538701						
ANR	6539122	Symbol	dbg		6538701						
ANR	6539123	Symbol	false		6538701						
ANR	6539124	Symbol	i		6538701						
ANR	6539125	Symbol	iter		6538701						
ANR	6539126	Symbol	thread		6538701						
ANR	6539127	Symbol	mach_port_deallocate		6538701						
ANR	6539128	Symbol	* dbg		6538701						
ANR	6539129	Symbol	dbg -> threads		6538701						
ANR	6539130	Symbol	& thread_find		6538701						
ANR	6539131	Symbol	r_list_find		6538701						
ANR	6539132	Symbol	task		6538701						
ANR	6539133	Symbol	pid_to_task		6538701						
ANR	6539134	Symbol	* i		6538701						
ANR	6539135	Symbol	dbg -> pid		6538701						
ANR	6539136	Symbol	* thread_list		6538701						
ANR	6539137	Symbol	t		6538701						
ANR	6539138	Symbol	r_list_append		6538701						
ANR	6539139	Symbol	true		6538701						
ANR	6539140	Symbol	mach_task_self		6538701						
ANR	6539141	Symbol	& thread_count		6538701						
ANR	6539142	Symbol	r_list_empty		6538701						
ANR	6539143	Symbol	thread_count		6538701						
ANR	6539144	Symbol	thread -> port		6538701						
ANR	6539145	Symbol	& xnu_thread_free		6538701						
