command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4225564	File	data/converged/CVE-2019-16718~_radare2/libr_core_cmd_egg.c								
ANR	4225565	DeclStmt									
ANR	4225566	Decl							const char	const char * [ ]	help_msg_g
ANR	4225567	Function	cmd_egg_init	25:0:817:891							
ANR	4225568	FunctionDef	cmd_egg_init (RCore * core)		4225567	0					
ANR	4225569	CompoundStatement		25:38:855:891	4225567	0					
ANR	4225570	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , g )"	26:1:858:889	4225567	0	True				
ANR	4225571	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , g )"		4225567	0					
ANR	4225572	Callee	DEFINE_CMD_DESCRIPTOR		4225567	0					
ANR	4225573	Identifier	DEFINE_CMD_DESCRIPTOR		4225567	0					
ANR	4225574	ArgumentList	core		4225567	1					
ANR	4225575	Argument	core		4225567	0					
ANR	4225576	Identifier	core		4225567	0					
ANR	4225577	Argument	g		4225567	1					
ANR	4225578	Identifier	g		4225567	0					
ANR	4225579	ReturnType	static void		4225567	1					
ANR	4225580	Identifier	cmd_egg_init		4225567	2					
ANR	4225581	ParameterList	RCore * core		4225567	3					
ANR	4225582	Parameter	RCore * core	25:25:842:852	4225567	0	True				
ANR	4225583	ParameterType	RCore *		4225567	0					
ANR	4225584	Identifier	core		4225567	1					
ANR	4225585	CFGEntryNode	ENTRY		4225567		True				
ANR	4225586	CFGExitNode	EXIT		4225567		True				
ANR	4225587	Symbol	core		4225567						
ANR	4225588	Symbol	g		4225567						
ANR	4225589	Function	cmd_egg_option	29:0:894:1170							
ANR	4225590	FunctionDef	"cmd_egg_option (REgg * egg , const char * key , const char * input)"		4225589	0					
ANR	4225591	CompoundStatement		29:74:968:1170	4225589	0					
ANR	4225592	IfStatement	if ( ! * input )		4225589	0					
ANR	4225593	Condition	! * input	30:5:975:981	4225589	0	True				
ANR	4225594	UnaryOperationExpression	! * input		4225589	0					
ANR	4225595	UnaryOperator	!		4225589	0					
ANR	4225596	UnaryOperationExpression	* input		4225589	1					
ANR	4225597	UnaryOperator	*		4225589	0					
ANR	4225598	Identifier	input		4225589	1					
ANR	4225599	CompoundStatement		2:14:15:15	4225589	1					
ANR	4225600	ReturnStatement	return ;	31:2:988:994	4225589	0	True				
ANR	4225601	IfStatement	if ( input [ 1 ] != ' ' )		4225589	1					
ANR	4225602	Condition	input [ 1 ] != ' '	33:5:1004:1018	4225589	0	True				
ANR	4225603	EqualityExpression	input [ 1 ] != ' '		4225589	0		!=			
ANR	4225604	ArrayIndexing	input [ 1 ]		4225589	0					
ANR	4225605	Identifier	input		4225589	0					
ANR	4225606	PrimaryExpression	1		4225589	1					
ANR	4225607	PrimaryExpression	' '		4225589	1					
ANR	4225608	CompoundStatement		6:2:56:93	4225589	1					
ANR	4225609	IdentifierDeclStatement	"char * a = r_egg_option_get ( egg , key ) ;"	34:2:1025:1062	4225589	0	True				
ANR	4225610	IdentifierDecl	"* a = r_egg_option_get ( egg , key )"		4225589	0					
ANR	4225611	IdentifierDeclType	char *		4225589	0					
ANR	4225612	Identifier	a		4225589	1					
ANR	4225613	AssignmentExpression	"* a = r_egg_option_get ( egg , key )"		4225589	2		=			
ANR	4225614	Identifier	a		4225589	0					
ANR	4225615	CallExpression	"r_egg_option_get ( egg , key )"		4225589	1					
ANR	4225616	Callee	r_egg_option_get		4225589	0					
ANR	4225617	Identifier	r_egg_option_get		4225589	0					
ANR	4225618	ArgumentList	egg		4225589	1					
ANR	4225619	Argument	egg		4225589	0					
ANR	4225620	Identifier	egg		4225589	0					
ANR	4225621	Argument	key		4225589	1					
ANR	4225622	Identifier	key		4225589	0					
ANR	4225623	IfStatement	if ( a )		4225589	1					
ANR	4225624	Condition	a	35:6:1070:1070	4225589	0	True				
ANR	4225625	Identifier	a		4225589	0					
ANR	4225626	CompoundStatement		7:9:104:104	4225589	1					
ANR	4225627	ExpressionStatement	r_cons_println ( a )	36:3:1078:1096	4225589	0	True				
ANR	4225628	CallExpression	r_cons_println ( a )		4225589	0					
ANR	4225629	Callee	r_cons_println		4225589	0					
ANR	4225630	Identifier	r_cons_println		4225589	0					
ANR	4225631	ArgumentList	a		4225589	1					
ANR	4225632	Argument	a		4225589	0					
ANR	4225633	Identifier	a		4225589	0					
ANR	4225634	ExpressionStatement	free ( a )	37:3:1101:1109	4225589	1	True				
ANR	4225635	CallExpression	free ( a )		4225589	0					
ANR	4225636	Callee	free		4225589	0					
ANR	4225637	Identifier	free		4225589	0					
ANR	4225638	ArgumentList	a		4225589	1					
ANR	4225639	Argument	a		4225589	0					
ANR	4225640	Identifier	a		4225589	0					
ANR	4225641	ElseStatement	else		4225589	0					
ANR	4225642	CompoundStatement		11:8:154:154	4225589	0					
ANR	4225643	ExpressionStatement	"r_egg_option_set ( egg , key , input + 2 )"	40:2:1127:1165	4225589	0	True				
ANR	4225644	CallExpression	"r_egg_option_set ( egg , key , input + 2 )"		4225589	0					
ANR	4225645	Callee	r_egg_option_set		4225589	0					
ANR	4225646	Identifier	r_egg_option_set		4225589	0					
ANR	4225647	ArgumentList	egg		4225589	1					
ANR	4225648	Argument	egg		4225589	0					
ANR	4225649	Identifier	egg		4225589	0					
ANR	4225650	Argument	key		4225589	1					
ANR	4225651	Identifier	key		4225589	0					
ANR	4225652	Argument	input + 2		4225589	2					
ANR	4225653	AdditiveExpression	input + 2		4225589	0		+			
ANR	4225654	Identifier	input		4225589	0					
ANR	4225655	PrimaryExpression	2		4225589	1					
ANR	4225656	ReturnType	static void		4225589	1					
ANR	4225657	Identifier	cmd_egg_option		4225589	2					
ANR	4225658	ParameterList	"REgg * egg , const char * key , const char * input"		4225589	3					
ANR	4225659	Parameter	REgg * egg	29:27:921:929	4225589	0	True				
ANR	4225660	ParameterType	REgg *		4225589	0					
ANR	4225661	Identifier	egg		4225589	1					
ANR	4225662	Parameter	const char * key	29:38:932:946	4225589	1	True				
ANR	4225663	ParameterType	const char *		4225589	0					
ANR	4225664	Identifier	key		4225589	1					
ANR	4225665	Parameter	const char * input	29:55:949:965	4225589	2	True				
ANR	4225666	ParameterType	const char *		4225589	0					
ANR	4225667	Identifier	input		4225589	1					
ANR	4225668	CFGEntryNode	ENTRY		4225589		True				
ANR	4225669	CFGExitNode	EXIT		4225589		True				
ANR	4225670	Symbol	input		4225589						
ANR	4225671	Symbol	a		4225589						
ANR	4225672	Symbol	egg		4225589						
ANR	4225673	Symbol	r_egg_option_get		4225589						
ANR	4225674	Symbol	* input		4225589						
ANR	4225675	Symbol	key		4225589						
ANR	4225676	Function	showBuffer	44:0:1173:1395							
ANR	4225677	FunctionDef	showBuffer (RBuffer * b)		4225676	0					
ANR	4225678	CompoundStatement		44:35:1208:1395	4225676	0					
ANR	4225679	IdentifierDeclStatement	int i ;	45:1:1211:1216	4225676	0	True				
ANR	4225680	IdentifierDecl	i		4225676	0					
ANR	4225681	IdentifierDeclType	int		4225676	0					
ANR	4225682	Identifier	i		4225676	1					
ANR	4225683	IfStatement	if ( b && r_buf_size ( b ) > 0 )		4225676	1					
ANR	4225684	Condition	b && r_buf_size ( b ) > 0	46:5:1223:1245	4225676	0	True				
ANR	4225685	AndExpression	b && r_buf_size ( b ) > 0		4225676	0		&&			
ANR	4225686	Identifier	b		4225676	0					
ANR	4225687	RelationalExpression	r_buf_size ( b ) > 0		4225676	1		>			
ANR	4225688	CallExpression	r_buf_size ( b )		4225676	0					
ANR	4225689	Callee	r_buf_size		4225676	0					
ANR	4225690	Identifier	r_buf_size		4225676	0					
ANR	4225691	ArgumentList	b		4225676	1					
ANR	4225692	Argument	b		4225676	0					
ANR	4225693	Identifier	b		4225676	0					
ANR	4225694	PrimaryExpression	0		4225676	1					
ANR	4225695	CompoundStatement		3:30:39:39	4225676	1					
ANR	4225696	ExpressionStatement	"r_buf_seek ( b , 0 , R_BUF_SET )"	47:2:1252:1280	4225676	0	True				
ANR	4225697	CallExpression	"r_buf_seek ( b , 0 , R_BUF_SET )"		4225676	0					
ANR	4225698	Callee	r_buf_seek		4225676	0					
ANR	4225699	Identifier	r_buf_seek		4225676	0					
ANR	4225700	ArgumentList	b		4225676	1					
ANR	4225701	Argument	b		4225676	0					
ANR	4225702	Identifier	b		4225676	0					
ANR	4225703	Argument	0		4225676	1					
ANR	4225704	PrimaryExpression	0		4225676	0					
ANR	4225705	Argument	R_BUF_SET		4225676	2					
ANR	4225706	Identifier	R_BUF_SET		4225676	0					
ANR	4225707	ForStatement	for ( i = 0 ; i < r_buf_size ( b ) ; i ++ )		4225676	1					
ANR	4225708	ForInit	i = 0 ;	48:7:1289:1294	4225676	0	True				
ANR	4225709	AssignmentExpression	i = 0		4225676	0		=			
ANR	4225710	Identifier	i		4225676	0					
ANR	4225711	PrimaryExpression	0		4225676	1					
ANR	4225712	Condition	i < r_buf_size ( b )	48:14:1296:1313	4225676	1	True				
ANR	4225713	RelationalExpression	i < r_buf_size ( b )		4225676	0		<			
ANR	4225714	Identifier	i		4225676	0					
ANR	4225715	CallExpression	r_buf_size ( b )		4225676	1					
ANR	4225716	Callee	r_buf_size		4225676	0					
ANR	4225717	Identifier	r_buf_size		4225676	0					
ANR	4225718	ArgumentList	b		4225676	1					
ANR	4225719	Argument	b		4225676	0					
ANR	4225720	Identifier	b		4225676	0					
ANR	4225721	PostIncDecOperationExpression	i ++	48:34:1316:1318	4225676	2	True				
ANR	4225722	Identifier	i		4225676	0					
ANR	4225723	IncDec	++		4225676	1					
ANR	4225724	CompoundStatement		5:39:112:112	4225676	3					
ANR	4225725	ExpressionStatement	"r_cons_printf ( ""%02x"" , r_buf_read8 ( b ) )"	49:3:1326:1365	4225676	0	True				
ANR	4225726	CallExpression	"r_cons_printf ( ""%02x"" , r_buf_read8 ( b ) )"		4225676	0					
ANR	4225727	Callee	r_cons_printf		4225676	0					
ANR	4225728	Identifier	r_cons_printf		4225676	0					
ANR	4225729	ArgumentList	"""%02x"""		4225676	1					
ANR	4225730	Argument	"""%02x"""		4225676	0					
ANR	4225731	PrimaryExpression	"""%02x"""		4225676	0					
ANR	4225732	Argument	r_buf_read8 ( b )		4225676	1					
ANR	4225733	CallExpression	r_buf_read8 ( b )		4225676	0					
ANR	4225734	Callee	r_buf_read8		4225676	0					
ANR	4225735	Identifier	r_buf_read8		4225676	0					
ANR	4225736	ArgumentList	b		4225676	1					
ANR	4225737	Argument	b		4225676	0					
ANR	4225738	Identifier	b		4225676	0					
ANR	4225739	ExpressionStatement	r_cons_newline ( )	51:2:1373:1390	4225676	2	True				
ANR	4225740	CallExpression	r_cons_newline ( )		4225676	0					
ANR	4225741	Callee	r_cons_newline		4225676	0					
ANR	4225742	Identifier	r_cons_newline		4225676	0					
ANR	4225743	ArgumentList			4225676	1					
ANR	4225744	ReturnType	static void		4225676	1					
ANR	4225745	Identifier	showBuffer		4225676	2					
ANR	4225746	ParameterList	RBuffer * b		4225676	3					
ANR	4225747	Parameter	RBuffer * b	44:23:1196:1205	4225676	0	True				
ANR	4225748	ParameterType	RBuffer *		4225676	0					
ANR	4225749	Identifier	b		4225676	1					
ANR	4225750	CFGEntryNode	ENTRY		4225676		True				
ANR	4225751	CFGExitNode	EXIT		4225676		True				
ANR	4225752	Symbol	R_BUF_SET		4225676						
ANR	4225753	Symbol	b		4225676						
ANR	4225754	Symbol	i		4225676						
ANR	4225755	Symbol	r_buf_read8		4225676						
ANR	4225756	Symbol	r_buf_size		4225676						
ANR	4225757	Function	compileShellcode	56:0:1404:2020							
ANR	4225758	FunctionDef	"compileShellcode (REgg * egg , const char * input)"		4225757	0					
ANR	4225759	CompoundStatement		56:57:1461:2020	4225757	0					
ANR	4225760	IdentifierDeclStatement	int i = 0 ;	57:1:1464:1473	4225757	0	True				
ANR	4225761	IdentifierDecl	i = 0		4225757	0					
ANR	4225762	IdentifierDeclType	int		4225757	0					
ANR	4225763	Identifier	i		4225757	1					
ANR	4225764	AssignmentExpression	i = 0		4225757	2		=			
ANR	4225765	Identifier	i		4225757	0					
ANR	4225766	PrimaryExpression	0		4225757	1					
ANR	4225767	IdentifierDeclStatement	RBuffer * b ;	58:1:1476:1486	4225757	1	True				
ANR	4225768	IdentifierDecl	* b		4225757	0					
ANR	4225769	IdentifierDeclType	RBuffer *		4225757	0					
ANR	4225770	Identifier	b		4225757	1					
ANR	4225771	IfStatement	"if ( ! r_egg_shellcode ( egg , input ) )"		4225757	2					
ANR	4225772	Condition	"! r_egg_shellcode ( egg , input )"	59:5:1493:1521	4225757	0	True				
ANR	4225773	UnaryOperationExpression	"! r_egg_shellcode ( egg , input )"		4225757	0					
ANR	4225774	UnaryOperator	!		4225757	0					
ANR	4225775	CallExpression	"r_egg_shellcode ( egg , input )"		4225757	1					
ANR	4225776	Callee	r_egg_shellcode		4225757	0					
ANR	4225777	Identifier	r_egg_shellcode		4225757	0					
ANR	4225778	ArgumentList	egg		4225757	1					
ANR	4225779	Argument	egg		4225757	0					
ANR	4225780	Identifier	egg		4225757	0					
ANR	4225781	Argument	input		4225757	1					
ANR	4225782	Identifier	input		4225757	0					
ANR	4225783	CompoundStatement		4:36:62:62	4225757	1					
ANR	4225784	ExpressionStatement	"eprintf ( ""Unknown shellcode '%s'\\n"" , input )"	60:2:1528:1571	4225757	0	True				
ANR	4225785	CallExpression	"eprintf ( ""Unknown shellcode '%s'\\n"" , input )"		4225757	0					
ANR	4225786	Callee	eprintf		4225757	0					
ANR	4225787	Identifier	eprintf		4225757	0					
ANR	4225788	ArgumentList	"""Unknown shellcode '%s'\\n"""		4225757	1					
ANR	4225789	Argument	"""Unknown shellcode '%s'\\n"""		4225757	0					
ANR	4225790	PrimaryExpression	"""Unknown shellcode '%s'\\n"""		4225757	0					
ANR	4225791	Argument	input		4225757	1					
ANR	4225792	Identifier	input		4225757	0					
ANR	4225793	ReturnStatement	return 1 ;	61:2:1575:1583	4225757	1	True				
ANR	4225794	PrimaryExpression	1		4225757	0					
ANR	4225795	IfStatement	if ( ! r_egg_assemble ( egg ) )		4225757	3					
ANR	4225796	Condition	! r_egg_assemble ( egg )	63:5:1593:1613	4225757	0	True				
ANR	4225797	UnaryOperationExpression	! r_egg_assemble ( egg )		4225757	0					
ANR	4225798	UnaryOperator	!		4225757	0					
ANR	4225799	CallExpression	r_egg_assemble ( egg )		4225757	1					
ANR	4225800	Callee	r_egg_assemble		4225757	0					
ANR	4225801	Identifier	r_egg_assemble		4225757	0					
ANR	4225802	ArgumentList	egg		4225757	1					
ANR	4225803	Argument	egg		4225757	0					
ANR	4225804	Identifier	egg		4225757	0					
ANR	4225805	CompoundStatement		8:28:154:154	4225757	1					
ANR	4225806	ExpressionStatement	"eprintf ( ""r_egg_assemble : invalid assembly\\n"" )"	64:2:1620:1667	4225757	0	True				
ANR	4225807	CallExpression	"eprintf ( ""r_egg_assemble : invalid assembly\\n"" )"		4225757	0					
ANR	4225808	Callee	eprintf		4225757	0					
ANR	4225809	Identifier	eprintf		4225757	0					
ANR	4225810	ArgumentList	"""r_egg_assemble : invalid assembly\\n"""		4225757	1					
ANR	4225811	Argument	"""r_egg_assemble : invalid assembly\\n"""		4225757	0					
ANR	4225812	PrimaryExpression	"""r_egg_assemble : invalid assembly\\n"""		4225757	0					
ANR	4225813	ExpressionStatement	r_egg_reset ( egg )	65:2:1671:1688	4225757	1	True				
ANR	4225814	CallExpression	r_egg_reset ( egg )		4225757	0					
ANR	4225815	Callee	r_egg_reset		4225757	0					
ANR	4225816	Identifier	r_egg_reset		4225757	0					
ANR	4225817	ArgumentList	egg		4225757	1					
ANR	4225818	Argument	egg		4225757	0					
ANR	4225819	Identifier	egg		4225757	0					
ANR	4225820	ReturnStatement	return 1 ;	66:2:1692:1700	4225757	2	True				
ANR	4225821	PrimaryExpression	1		4225757	0					
ANR	4225822	IfStatement	if ( ! egg -> bin )		4225757	4					
ANR	4225823	Condition	! egg -> bin	68:5:1710:1718	4225757	0	True				
ANR	4225824	UnaryOperationExpression	! egg -> bin		4225757	0					
ANR	4225825	UnaryOperator	!		4225757	0					
ANR	4225826	PtrMemberAccess	egg -> bin		4225757	1					
ANR	4225827	Identifier	egg		4225757	0					
ANR	4225828	Identifier	bin		4225757	1					
ANR	4225829	CompoundStatement		13:16:259:259	4225757	1					
ANR	4225830	ExpressionStatement	egg -> bin = r_buf_new ( )	69:2:1725:1748	4225757	0	True				
ANR	4225831	AssignmentExpression	egg -> bin = r_buf_new ( )		4225757	0		=			
ANR	4225832	PtrMemberAccess	egg -> bin		4225757	0					
ANR	4225833	Identifier	egg		4225757	0					
ANR	4225834	Identifier	bin		4225757	1					
ANR	4225835	CallExpression	r_buf_new ( )		4225757	1					
ANR	4225836	Callee	r_buf_new		4225757	0					
ANR	4225837	Identifier	r_buf_new		4225757	0					
ANR	4225838	ArgumentList			4225757	1					
ANR	4225839	IfStatement	if ( ! ( b = r_egg_get_bin ( egg ) ) )		4225757	5					
ANR	4225840	Condition	! ( b = r_egg_get_bin ( egg ) )	71:5:1758:1783	4225757	0	True				
ANR	4225841	UnaryOperationExpression	! ( b = r_egg_get_bin ( egg ) )		4225757	0					
ANR	4225842	UnaryOperator	!		4225757	0					
ANR	4225843	AssignmentExpression	b = r_egg_get_bin ( egg )		4225757	1		=			
ANR	4225844	Identifier	b		4225757	0					
ANR	4225845	CallExpression	r_egg_get_bin ( egg )		4225757	1					
ANR	4225846	Callee	r_egg_get_bin		4225757	0					
ANR	4225847	Identifier	r_egg_get_bin		4225757	0					
ANR	4225848	ArgumentList	egg		4225757	1					
ANR	4225849	Argument	egg		4225757	0					
ANR	4225850	Identifier	egg		4225757	0					
ANR	4225851	CompoundStatement		16:33:324:324	4225757	1					
ANR	4225852	ExpressionStatement	"eprintf ( ""r_egg_get_bin: invalid egg :(\\n"" )"	72:2:1790:1833	4225757	0	True				
ANR	4225853	CallExpression	"eprintf ( ""r_egg_get_bin: invalid egg :(\\n"" )"		4225757	0					
ANR	4225854	Callee	eprintf		4225757	0					
ANR	4225855	Identifier	eprintf		4225757	0					
ANR	4225856	ArgumentList	"""r_egg_get_bin: invalid egg :(\\n"""		4225757	1					
ANR	4225857	Argument	"""r_egg_get_bin: invalid egg :(\\n"""		4225757	0					
ANR	4225858	PrimaryExpression	"""r_egg_get_bin: invalid egg :(\\n"""		4225757	0					
ANR	4225859	ExpressionStatement	r_egg_reset ( egg )	73:2:1837:1854	4225757	1	True				
ANR	4225860	CallExpression	r_egg_reset ( egg )		4225757	0					
ANR	4225861	Callee	r_egg_reset		4225757	0					
ANR	4225862	Identifier	r_egg_reset		4225757	0					
ANR	4225863	ArgumentList	egg		4225757	1					
ANR	4225864	Argument	egg		4225757	0					
ANR	4225865	Identifier	egg		4225757	0					
ANR	4225866	ReturnStatement	return 1 ;	74:2:1858:1866	4225757	2	True				
ANR	4225867	PrimaryExpression	1		4225757	0					
ANR	4225868	ExpressionStatement	r_egg_finalize ( egg )	76:1:1872:1892	4225757	6	True				
ANR	4225869	CallExpression	r_egg_finalize ( egg )		4225757	0					
ANR	4225870	Callee	r_egg_finalize		4225757	0					
ANR	4225871	Identifier	r_egg_finalize		4225757	0					
ANR	4225872	ArgumentList	egg		4225757	1					
ANR	4225873	Argument	egg		4225757	0					
ANR	4225874	Identifier	egg		4225757	0					
ANR	4225875	ForStatement	for ( i = 0 ; i < b -> length ; i ++ )		4225757	7					
ANR	4225876	ForInit	i = 0 ;	77:6:1900:1905	4225757	0	True				
ANR	4225877	AssignmentExpression	i = 0		4225757	0		=			
ANR	4225878	Identifier	i		4225757	0					
ANR	4225879	PrimaryExpression	0		4225757	1					
ANR	4225880	Condition	i < b -> length	77:13:1907:1919	4225757	1	True				
ANR	4225881	RelationalExpression	i < b -> length		4225757	0		<			
ANR	4225882	Identifier	i		4225757	0					
ANR	4225883	PtrMemberAccess	b -> length		4225757	1					
ANR	4225884	Identifier	b		4225757	0					
ANR	4225885	Identifier	length		4225757	1					
ANR	4225886	PostIncDecOperationExpression	i ++	77:28:1922:1924	4225757	2	True				
ANR	4225887	Identifier	i		4225757	0					
ANR	4225888	IncDec	++		4225757	1					
ANR	4225889	CompoundStatement		22:33:465:465	4225757	3					
ANR	4225890	ExpressionStatement	"r_cons_printf ( ""%02x"" , b -> buf [ i ] )"	78:2:1931:1964	4225757	0	True				
ANR	4225891	CallExpression	"r_cons_printf ( ""%02x"" , b -> buf [ i ] )"		4225757	0					
ANR	4225892	Callee	r_cons_printf		4225757	0					
ANR	4225893	Identifier	r_cons_printf		4225757	0					
ANR	4225894	ArgumentList	"""%02x"""		4225757	1					
ANR	4225895	Argument	"""%02x"""		4225757	0					
ANR	4225896	PrimaryExpression	"""%02x"""		4225757	0					
ANR	4225897	Argument	b -> buf [ i ]		4225757	1					
ANR	4225898	ArrayIndexing	b -> buf [ i ]		4225757	0					
ANR	4225899	PtrMemberAccess	b -> buf		4225757	0					
ANR	4225900	Identifier	b		4225757	0					
ANR	4225901	Identifier	buf		4225757	1					
ANR	4225902	Identifier	i		4225757	1					
ANR	4225903	ExpressionStatement	r_cons_newline ( )	80:1:1970:1987	4225757	8	True				
ANR	4225904	CallExpression	r_cons_newline ( )		4225757	0					
ANR	4225905	Callee	r_cons_newline		4225757	0					
ANR	4225906	Identifier	r_cons_newline		4225757	0					
ANR	4225907	ArgumentList			4225757	1					
ANR	4225908	ExpressionStatement	r_egg_reset ( egg )	81:1:1990:2007	4225757	9	True				
ANR	4225909	CallExpression	r_egg_reset ( egg )		4225757	0					
ANR	4225910	Callee	r_egg_reset		4225757	0					
ANR	4225911	Identifier	r_egg_reset		4225757	0					
ANR	4225912	ArgumentList	egg		4225757	1					
ANR	4225913	Argument	egg		4225757	0					
ANR	4225914	Identifier	egg		4225757	0					
ANR	4225915	ReturnStatement	return 0 ;	82:1:2010:2018	4225757	10	True				
ANR	4225916	PrimaryExpression	0		4225757	0					
ANR	4225917	ReturnType	static int		4225757	1					
ANR	4225918	Identifier	compileShellcode		4225757	2					
ANR	4225919	ParameterList	"REgg * egg , const char * input"		4225757	3					
ANR	4225920	Parameter	REgg * egg	56:28:1432:1440	4225757	0	True				
ANR	4225921	ParameterType	REgg *		4225757	0					
ANR	4225922	Identifier	egg		4225757	1					
ANR	4225923	Parameter	const char * input	56:39:1443:1459	4225757	1	True				
ANR	4225924	ParameterType	const char *		4225757	0					
ANR	4225925	Identifier	input		4225757	1					
ANR	4225926	CFGEntryNode	ENTRY		4225757		True				
ANR	4225927	CFGExitNode	EXIT		4225757		True				
ANR	4225928	Symbol	* b -> buf		4225757						
ANR	4225929	Symbol	b		4225757						
ANR	4225930	Symbol	egg		4225757						
ANR	4225931	Symbol	i		4225757						
ANR	4225932	Symbol	* * b		4225757						
ANR	4225933	Symbol	* b		4225757						
ANR	4225934	Symbol	* egg		4225757						
ANR	4225935	Symbol	input		4225757						
ANR	4225936	Symbol	* i		4225757						
ANR	4225937	Symbol	r_egg_assemble		4225757						
ANR	4225938	Symbol	egg -> bin		4225757						
ANR	4225939	Symbol	b -> length		4225757						
ANR	4225940	Symbol	r_egg_get_bin		4225757						
ANR	4225941	Symbol	r_egg_shellcode		4225757						
ANR	4225942	Symbol	r_buf_new		4225757						
ANR	4225943	Symbol	b -> buf		4225757						
ANR	4225944	Function	cmd_egg_compile	86:0:2030:3038							
ANR	4225945	FunctionDef	cmd_egg_compile (REgg * egg)		4225944	0					
ANR	4225946	CompoundStatement		86:38:2068:3038	4225944	0					
ANR	4225947	IdentifierDeclStatement	RBuffer * b ;	87:1:2071:2081	4225944	0	True				
ANR	4225948	IdentifierDecl	* b		4225944	0					
ANR	4225949	IdentifierDeclType	RBuffer *		4225944	0					
ANR	4225950	Identifier	b		4225944	1					
ANR	4225951	IdentifierDeclStatement	int ret = false ;	88:1:2084:2099	4225944	1	True				
ANR	4225952	IdentifierDecl	ret = false		4225944	0					
ANR	4225953	IdentifierDeclType	int		4225944	0					
ANR	4225954	Identifier	ret		4225944	1					
ANR	4225955	AssignmentExpression	ret = false		4225944	2		=			
ANR	4225956	Identifier	false		4225944	0					
ANR	4225957	Identifier	false		4225944	1					
ANR	4225958	IdentifierDeclStatement	"char * p = r_egg_option_get ( egg , ""egg.shellcode"" ) ;"	89:1:2102:2151	4225944	2	True				
ANR	4225959	IdentifierDecl	"* p = r_egg_option_get ( egg , ""egg.shellcode"" )"		4225944	0					
ANR	4225960	IdentifierDeclType	char *		4225944	0					
ANR	4225961	Identifier	p		4225944	1					
ANR	4225962	AssignmentExpression	"* p = r_egg_option_get ( egg , ""egg.shellcode"" )"		4225944	2		=			
ANR	4225963	Identifier	p		4225944	0					
ANR	4225964	CallExpression	"r_egg_option_get ( egg , ""egg.shellcode"" )"		4225944	1					
ANR	4225965	Callee	r_egg_option_get		4225944	0					
ANR	4225966	Identifier	r_egg_option_get		4225944	0					
ANR	4225967	ArgumentList	egg		4225944	1					
ANR	4225968	Argument	egg		4225944	0					
ANR	4225969	Identifier	egg		4225944	0					
ANR	4225970	Argument	"""egg.shellcode"""		4225944	1					
ANR	4225971	PrimaryExpression	"""egg.shellcode"""		4225944	0					
ANR	4225972	IfStatement	if ( p && * p )		4225944	3					
ANR	4225973	Condition	p && * p	90:5:2158:2164	4225944	0	True				
ANR	4225974	AndExpression	p && * p		4225944	0		&&			
ANR	4225975	Identifier	p		4225944	0					
ANR	4225976	UnaryOperationExpression	* p		4225944	1					
ANR	4225977	UnaryOperator	*		4225944	0					
ANR	4225978	Identifier	p		4225944	1					
ANR	4225979	CompoundStatement		5:14:98:98	4225944	1					
ANR	4225980	IfStatement	"if ( ! r_egg_shellcode ( egg , p ) )"		4225944	0					
ANR	4225981	Condition	"! r_egg_shellcode ( egg , p )"	91:6:2175:2199	4225944	0	True				
ANR	4225982	UnaryOperationExpression	"! r_egg_shellcode ( egg , p )"		4225944	0					
ANR	4225983	UnaryOperator	!		4225944	0					
ANR	4225984	CallExpression	"r_egg_shellcode ( egg , p )"		4225944	1					
ANR	4225985	Callee	r_egg_shellcode		4225944	0					
ANR	4225986	Identifier	r_egg_shellcode		4225944	0					
ANR	4225987	ArgumentList	egg		4225944	1					
ANR	4225988	Argument	egg		4225944	0					
ANR	4225989	Identifier	egg		4225944	0					
ANR	4225990	Argument	p		4225944	1					
ANR	4225991	Identifier	p		4225944	0					
ANR	4225992	CompoundStatement		6:33:133:133	4225944	1					
ANR	4225993	ExpressionStatement	"eprintf ( ""Unknown shellcode '%s'\\n"" , p )"	92:3:2207:2246	4225944	0	True				
ANR	4225994	CallExpression	"eprintf ( ""Unknown shellcode '%s'\\n"" , p )"		4225944	0					
ANR	4225995	Callee	eprintf		4225944	0					
ANR	4225996	Identifier	eprintf		4225944	0					
ANR	4225997	ArgumentList	"""Unknown shellcode '%s'\\n"""		4225944	1					
ANR	4225998	Argument	"""Unknown shellcode '%s'\\n"""		4225944	0					
ANR	4225999	PrimaryExpression	"""Unknown shellcode '%s'\\n"""		4225944	0					
ANR	4226000	Argument	p		4225944	1					
ANR	4226001	Identifier	p		4225944	0					
ANR	4226002	ExpressionStatement	free ( p )	93:3:2251:2259	4225944	1	True				
ANR	4226003	CallExpression	free ( p )		4225944	0					
ANR	4226004	Callee	free		4225944	0					
ANR	4226005	Identifier	free		4225944	0					
ANR	4226006	ArgumentList	p		4225944	1					
ANR	4226007	Argument	p		4225944	0					
ANR	4226008	Identifier	p		4225944	0					
ANR	4226009	ReturnStatement	return false ;	94:3:2264:2276	4225944	2	True				
ANR	4226010	Identifier	false		4225944	0					
ANR	4226011	ExpressionStatement	free ( p )	96:2:2284:2292	4225944	1	True				
ANR	4226012	CallExpression	free ( p )		4225944	0					
ANR	4226013	Callee	free		4225944	0					
ANR	4226014	Identifier	free		4225944	0					
ANR	4226015	ArgumentList	p		4225944	1					
ANR	4226016	Argument	p		4225944	0					
ANR	4226017	Identifier	p		4225944	0					
ANR	4226018	ElseStatement	else		4225944	0					
ANR	4226019	CompoundStatement		12:8:233:233	4225944	0					
ANR	4226020	ExpressionStatement	"eprintf ( ""Setup a shellcode before (gi command)\\n"" )"	98:2:2306:2357	4225944	0	True				
ANR	4226021	CallExpression	"eprintf ( ""Setup a shellcode before (gi command)\\n"" )"		4225944	0					
ANR	4226022	Callee	eprintf		4225944	0					
ANR	4226023	Identifier	eprintf		4225944	0					
ANR	4226024	ArgumentList	"""Setup a shellcode before (gi command)\\n"""		4225944	1					
ANR	4226025	Argument	"""Setup a shellcode before (gi command)\\n"""		4225944	0					
ANR	4226026	PrimaryExpression	"""Setup a shellcode before (gi command)\\n"""		4225944	0					
ANR	4226027	ExpressionStatement	free ( p )	99:2:2361:2369	4225944	1	True				
ANR	4226028	CallExpression	free ( p )		4225944	0					
ANR	4226029	Callee	free		4225944	0					
ANR	4226030	Identifier	free		4225944	0					
ANR	4226031	ArgumentList	p		4225944	1					
ANR	4226032	Argument	p		4225944	0					
ANR	4226033	Identifier	p		4225944	0					
ANR	4226034	ReturnStatement	return false ;	100:2:2373:2385	4225944	2	True				
ANR	4226035	Identifier	false		4225944	0					
ANR	4226036	ExpressionStatement	r_egg_compile ( egg )	103:1:2392:2411	4225944	4	True				
ANR	4226037	CallExpression	r_egg_compile ( egg )		4225944	0					
ANR	4226038	Callee	r_egg_compile		4225944	0					
ANR	4226039	Identifier	r_egg_compile		4225944	0					
ANR	4226040	ArgumentList	egg		4225944	1					
ANR	4226041	Argument	egg		4225944	0					
ANR	4226042	Identifier	egg		4225944	0					
ANR	4226043	IfStatement	if ( ! r_egg_assemble ( egg ) )		4225944	5					
ANR	4226044	Condition	! r_egg_assemble ( egg )	104:5:2418:2438	4225944	0	True				
ANR	4226045	UnaryOperationExpression	! r_egg_assemble ( egg )		4225944	0					
ANR	4226046	UnaryOperator	!		4225944	0					
ANR	4226047	CallExpression	r_egg_assemble ( egg )		4225944	1					
ANR	4226048	Callee	r_egg_assemble		4225944	0					
ANR	4226049	Identifier	r_egg_assemble		4225944	0					
ANR	4226050	ArgumentList	egg		4225944	1					
ANR	4226051	Argument	egg		4225944	0					
ANR	4226052	Identifier	egg		4225944	0					
ANR	4226053	CompoundStatement		19:28:372:372	4225944	1					
ANR	4226054	ExpressionStatement	"eprintf ( ""r_egg_assemble: invalid assembly\\n"" )"	105:2:2445:2491	4225944	0	True				
ANR	4226055	CallExpression	"eprintf ( ""r_egg_assemble: invalid assembly\\n"" )"		4225944	0					
ANR	4226056	Callee	eprintf		4225944	0					
ANR	4226057	Identifier	eprintf		4225944	0					
ANR	4226058	ArgumentList	"""r_egg_assemble: invalid assembly\\n"""		4225944	1					
ANR	4226059	Argument	"""r_egg_assemble: invalid assembly\\n"""		4225944	0					
ANR	4226060	PrimaryExpression	"""r_egg_assemble: invalid assembly\\n"""		4225944	0					
ANR	4226061	ReturnStatement	return false ;	106:2:2495:2507	4225944	1	True				
ANR	4226062	Identifier	false		4225944	0					
ANR	4226063	ExpressionStatement	"p = r_egg_option_get ( egg , ""egg.padding"" )"	108:1:2513:2554	4225944	6	True				
ANR	4226064	AssignmentExpression	"p = r_egg_option_get ( egg , ""egg.padding"" )"		4225944	0		=			
ANR	4226065	Identifier	p		4225944	0					
ANR	4226066	CallExpression	"r_egg_option_get ( egg , ""egg.padding"" )"		4225944	1					
ANR	4226067	Callee	r_egg_option_get		4225944	0					
ANR	4226068	Identifier	r_egg_option_get		4225944	0					
ANR	4226069	ArgumentList	egg		4225944	1					
ANR	4226070	Argument	egg		4225944	0					
ANR	4226071	Identifier	egg		4225944	0					
ANR	4226072	Argument	"""egg.padding"""		4225944	1					
ANR	4226073	PrimaryExpression	"""egg.padding"""		4225944	0					
ANR	4226074	IfStatement	if ( p && * p )		4225944	7					
ANR	4226075	Condition	p && * p	109:5:2561:2567	4225944	0	True				
ANR	4226076	AndExpression	p && * p		4225944	0		&&			
ANR	4226077	Identifier	p		4225944	0					
ANR	4226078	UnaryOperationExpression	* p		4225944	1					
ANR	4226079	UnaryOperator	*		4225944	0					
ANR	4226080	Identifier	p		4225944	1					
ANR	4226081	CompoundStatement		24:14:501:501	4225944	1					
ANR	4226082	ExpressionStatement	"r_egg_padding ( egg , p )"	110:2:2574:2596	4225944	0	True				
ANR	4226083	CallExpression	"r_egg_padding ( egg , p )"		4225944	0					
ANR	4226084	Callee	r_egg_padding		4225944	0					
ANR	4226085	Identifier	r_egg_padding		4225944	0					
ANR	4226086	ArgumentList	egg		4225944	1					
ANR	4226087	Argument	egg		4225944	0					
ANR	4226088	Identifier	egg		4225944	0					
ANR	4226089	Argument	p		4225944	1					
ANR	4226090	Identifier	p		4225944	0					
ANR	4226091	ExpressionStatement	free ( p )	111:2:2600:2608	4225944	1	True				
ANR	4226092	CallExpression	free ( p )		4225944	0					
ANR	4226093	Callee	free		4225944	0					
ANR	4226094	Identifier	free		4225944	0					
ANR	4226095	ArgumentList	p		4225944	1					
ANR	4226096	Argument	p		4225944	0					
ANR	4226097	Identifier	p		4225944	0					
ANR	4226098	ExpressionStatement	"p = r_egg_option_get ( egg , ""egg.encoder"" )"	113:1:2614:2655	4225944	8	True				
ANR	4226099	AssignmentExpression	"p = r_egg_option_get ( egg , ""egg.encoder"" )"		4225944	0		=			
ANR	4226100	Identifier	p		4225944	0					
ANR	4226101	CallExpression	"r_egg_option_get ( egg , ""egg.encoder"" )"		4225944	1					
ANR	4226102	Callee	r_egg_option_get		4225944	0					
ANR	4226103	Identifier	r_egg_option_get		4225944	0					
ANR	4226104	ArgumentList	egg		4225944	1					
ANR	4226105	Argument	egg		4225944	0					
ANR	4226106	Identifier	egg		4225944	0					
ANR	4226107	Argument	"""egg.encoder"""		4225944	1					
ANR	4226108	PrimaryExpression	"""egg.encoder"""		4225944	0					
ANR	4226109	IfStatement	if ( p && * p )		4225944	9					
ANR	4226110	Condition	p && * p	114:5:2662:2668	4225944	0	True				
ANR	4226111	AndExpression	p && * p		4225944	0		&&			
ANR	4226112	Identifier	p		4225944	0					
ANR	4226113	UnaryOperationExpression	* p		4225944	1					
ANR	4226114	UnaryOperator	*		4225944	0					
ANR	4226115	Identifier	p		4225944	1					
ANR	4226116	CompoundStatement		29:14:602:602	4225944	1					
ANR	4226117	ExpressionStatement	"r_egg_encode ( egg , p )"	115:2:2675:2696	4225944	0	True				
ANR	4226118	CallExpression	"r_egg_encode ( egg , p )"		4225944	0					
ANR	4226119	Callee	r_egg_encode		4225944	0					
ANR	4226120	Identifier	r_egg_encode		4225944	0					
ANR	4226121	ArgumentList	egg		4225944	1					
ANR	4226122	Argument	egg		4225944	0					
ANR	4226123	Identifier	egg		4225944	0					
ANR	4226124	Argument	p		4225944	1					
ANR	4226125	Identifier	p		4225944	0					
ANR	4226126	ExpressionStatement	free ( p )	116:2:2700:2708	4225944	1	True				
ANR	4226127	CallExpression	free ( p )		4225944	0					
ANR	4226128	Callee	free		4225944	0					
ANR	4226129	Identifier	free		4225944	0					
ANR	4226130	ArgumentList	p		4225944	1					
ANR	4226131	Argument	p		4225944	0					
ANR	4226132	Identifier	p		4225944	0					
ANR	4226133	IfStatement	if ( ( b = r_egg_get_bin ( egg ) ) )		4225944	10					
ANR	4226134	Condition	b = r_egg_get_bin ( egg )	118:5:2718:2742	4225944	0	True				
ANR	4226135	AssignmentExpression	b = r_egg_get_bin ( egg )		4225944	0		=			
ANR	4226136	Identifier	b		4225944	0					
ANR	4226137	CallExpression	r_egg_get_bin ( egg )		4225944	1					
ANR	4226138	Callee	r_egg_get_bin		4225944	0					
ANR	4226139	Identifier	r_egg_get_bin		4225944	0					
ANR	4226140	ArgumentList	egg		4225944	1					
ANR	4226141	Argument	egg		4225944	0					
ANR	4226142	Identifier	egg		4225944	0					
ANR	4226143	CompoundStatement		33:32:676:676	4225944	1					
ANR	4226144	ExpressionStatement	showBuffer ( b )	119:2:2749:2763	4225944	0	True				
ANR	4226145	CallExpression	showBuffer ( b )		4225944	0					
ANR	4226146	Callee	showBuffer		4225944	0					
ANR	4226147	Identifier	showBuffer		4225944	0					
ANR	4226148	ArgumentList	b		4225944	1					
ANR	4226149	Argument	b		4225944	0					
ANR	4226150	Identifier	b		4225944	0					
ANR	4226151	ExpressionStatement	ret = true	120:2:2767:2777	4225944	1	True				
ANR	4226152	AssignmentExpression	ret = true		4225944	0		=			
ANR	4226153	Identifier	ret		4225944	0					
ANR	4226154	Identifier	true		4225944	1					
ANR	4226155	ExpressionStatement	"r_egg_option_set ( egg , ""egg.shellcode"" , """" )"	124:1:2835:2878	4225944	11	True				
ANR	4226156	CallExpression	"r_egg_option_set ( egg , ""egg.shellcode"" , """" )"		4225944	0					
ANR	4226157	Callee	r_egg_option_set		4225944	0					
ANR	4226158	Identifier	r_egg_option_set		4225944	0					
ANR	4226159	ArgumentList	egg		4225944	1					
ANR	4226160	Argument	egg		4225944	0					
ANR	4226161	Identifier	egg		4225944	0					
ANR	4226162	Argument	"""egg.shellcode"""		4225944	1					
ANR	4226163	PrimaryExpression	"""egg.shellcode"""		4225944	0					
ANR	4226164	Argument	""""""		4225944	2					
ANR	4226165	PrimaryExpression	""""""		4225944	0					
ANR	4226166	ExpressionStatement	"r_egg_option_set ( egg , ""egg.padding"" , """" )"	125:1:2881:2922	4225944	12	True				
ANR	4226167	CallExpression	"r_egg_option_set ( egg , ""egg.padding"" , """" )"		4225944	0					
ANR	4226168	Callee	r_egg_option_set		4225944	0					
ANR	4226169	Identifier	r_egg_option_set		4225944	0					
ANR	4226170	ArgumentList	egg		4225944	1					
ANR	4226171	Argument	egg		4225944	0					
ANR	4226172	Identifier	egg		4225944	0					
ANR	4226173	Argument	"""egg.padding"""		4225944	1					
ANR	4226174	PrimaryExpression	"""egg.padding"""		4225944	0					
ANR	4226175	Argument	""""""		4225944	2					
ANR	4226176	PrimaryExpression	""""""		4225944	0					
ANR	4226177	ExpressionStatement	"r_egg_option_set ( egg , ""egg.encoder"" , """" )"	126:1:2925:2966	4225944	13	True				
ANR	4226178	CallExpression	"r_egg_option_set ( egg , ""egg.encoder"" , """" )"		4225944	0					
ANR	4226179	Callee	r_egg_option_set		4225944	0					
ANR	4226180	Identifier	r_egg_option_set		4225944	0					
ANR	4226181	ArgumentList	egg		4225944	1					
ANR	4226182	Argument	egg		4225944	0					
ANR	4226183	Identifier	egg		4225944	0					
ANR	4226184	Argument	"""egg.encoder"""		4225944	1					
ANR	4226185	PrimaryExpression	"""egg.encoder"""		4225944	0					
ANR	4226186	Argument	""""""		4225944	2					
ANR	4226187	PrimaryExpression	""""""		4225944	0					
ANR	4226188	ExpressionStatement	"r_egg_option_set ( egg , ""key"" , """" )"	127:1:2969:3002	4225944	14	True				
ANR	4226189	CallExpression	"r_egg_option_set ( egg , ""key"" , """" )"		4225944	0					
ANR	4226190	Callee	r_egg_option_set		4225944	0					
ANR	4226191	Identifier	r_egg_option_set		4225944	0					
ANR	4226192	ArgumentList	egg		4225944	1					
ANR	4226193	Argument	egg		4225944	0					
ANR	4226194	Identifier	egg		4225944	0					
ANR	4226195	Argument	"""key"""		4225944	1					
ANR	4226196	PrimaryExpression	"""key"""		4225944	0					
ANR	4226197	Argument	""""""		4225944	2					
ANR	4226198	PrimaryExpression	""""""		4225944	0					
ANR	4226199	ExpressionStatement	r_egg_reset ( egg )	129:1:3006:3023	4225944	15	True				
ANR	4226200	CallExpression	r_egg_reset ( egg )		4225944	0					
ANR	4226201	Callee	r_egg_reset		4225944	0					
ANR	4226202	Identifier	r_egg_reset		4225944	0					
ANR	4226203	ArgumentList	egg		4225944	1					
ANR	4226204	Argument	egg		4225944	0					
ANR	4226205	Identifier	egg		4225944	0					
ANR	4226206	ReturnStatement	return ret ;	130:1:3026:3036	4225944	16	True				
ANR	4226207	Identifier	ret		4225944	0					
ANR	4226208	ReturnType	static int		4225944	1					
ANR	4226209	Identifier	cmd_egg_compile		4225944	2					
ANR	4226210	ParameterList	REgg * egg		4225944	3					
ANR	4226211	Parameter	REgg * egg	86:27:2057:2065	4225944	0	True				
ANR	4226212	ParameterType	REgg *		4225944	0					
ANR	4226213	Identifier	egg		4225944	1					
ANR	4226214	CFGEntryNode	ENTRY		4225944		True				
ANR	4226215	CFGExitNode	EXIT		4225944		True				
ANR	4226216	Symbol	ret		4225944						
ANR	4226217	Symbol	p		4225944						
ANR	4226218	Symbol	b		4225944						
ANR	4226219	Symbol	egg		4225944						
ANR	4226220	Symbol	r_egg_assemble		4225944						
ANR	4226221	Symbol	r_egg_option_get		4225944						
ANR	4226222	Symbol	false		4225944						
ANR	4226223	Symbol	r_egg_get_bin		4225944						
ANR	4226224	Symbol	true		4225944						
ANR	4226225	Symbol	* p		4225944						
ANR	4226226	Symbol	r_egg_shellcode		4225944						
ANR	4226227	Function	cmd_egg	133:0:3041:6722							
ANR	4226228	FunctionDef	"cmd_egg (void * data , const char * input)"		4226227	0					
ANR	4226229	CompoundStatement		133:50:3091:6722	4226227	0					
ANR	4226230	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	134:1:3094:3122	4226227	0	True				
ANR	4226231	IdentifierDecl	* core = ( RCore * ) data		4226227	0					
ANR	4226232	IdentifierDeclType	RCore *		4226227	0					
ANR	4226233	Identifier	core		4226227	1					
ANR	4226234	AssignmentExpression	* core = ( RCore * ) data		4226227	2		=			
ANR	4226235	Identifier	core		4226227	0					
ANR	4226236	CastExpression	( RCore * ) data		4226227	1					
ANR	4226237	CastTarget	RCore *		4226227	0					
ANR	4226238	Identifier	data		4226227	1					
ANR	4226239	IdentifierDeclStatement	REgg * egg = core -> egg ;	135:1:3125:3146	4226227	1	True				
ANR	4226240	IdentifierDecl	* egg = core -> egg		4226227	0					
ANR	4226241	IdentifierDeclType	REgg *		4226227	0					
ANR	4226242	Identifier	egg		4226227	1					
ANR	4226243	AssignmentExpression	* egg = core -> egg		4226227	2		=			
ANR	4226244	Identifier	egg		4226227	0					
ANR	4226245	PtrMemberAccess	core -> egg		4226227	1					
ANR	4226246	Identifier	core		4226227	0					
ANR	4226247	Identifier	egg		4226227	1					
ANR	4226248	IdentifierDeclStatement	"char * oa , * p ;"	136:1:3149:3161	4226227	2	True				
ANR	4226249	IdentifierDecl	* oa		4226227	0					
ANR	4226250	IdentifierDeclType	char *		4226227	0					
ANR	4226251	Identifier	oa		4226227	1					
ANR	4226252	IdentifierDecl	* p		4226227	1					
ANR	4226253	IdentifierDeclType	char *		4226227	0					
ANR	4226254	Identifier	p		4226227	1					
ANR	4226255	ExpressionStatement	"r_egg_setup ( egg , r_config_get ( core -> config , ""asm.arch"" ) , core -> assembler -> bits , 0 , r_config_get ( core -> config , ""asm.os"" ) )"	137:1:3164:3293	4226227	3	True				
ANR	4226256	CallExpression	"r_egg_setup ( egg , r_config_get ( core -> config , ""asm.arch"" ) , core -> assembler -> bits , 0 , r_config_get ( core -> config , ""asm.os"" ) )"		4226227	0					
ANR	4226257	Callee	r_egg_setup		4226227	0					
ANR	4226258	Identifier	r_egg_setup		4226227	0					
ANR	4226259	ArgumentList	egg		4226227	1					
ANR	4226260	Argument	egg		4226227	0					
ANR	4226261	Identifier	egg		4226227	0					
ANR	4226262	Argument	"r_config_get ( core -> config , ""asm.arch"" )"		4226227	1					
ANR	4226263	CallExpression	"r_config_get ( core -> config , ""asm.arch"" )"		4226227	0					
ANR	4226264	Callee	r_config_get		4226227	0					
ANR	4226265	Identifier	r_config_get		4226227	0					
ANR	4226266	ArgumentList	core -> config		4226227	1					
ANR	4226267	Argument	core -> config		4226227	0					
ANR	4226268	PtrMemberAccess	core -> config		4226227	0					
ANR	4226269	Identifier	core		4226227	0					
ANR	4226270	Identifier	config		4226227	1					
ANR	4226271	Argument	"""asm.arch"""		4226227	1					
ANR	4226272	PrimaryExpression	"""asm.arch"""		4226227	0					
ANR	4226273	Argument	core -> assembler -> bits		4226227	2					
ANR	4226274	PtrMemberAccess	core -> assembler -> bits		4226227	0					
ANR	4226275	PtrMemberAccess	core -> assembler		4226227	0					
ANR	4226276	Identifier	core		4226227	0					
ANR	4226277	Identifier	assembler		4226227	1					
ANR	4226278	Identifier	bits		4226227	1					
ANR	4226279	Argument	0		4226227	3					
ANR	4226280	PrimaryExpression	0		4226227	0					
ANR	4226281	Argument	"r_config_get ( core -> config , ""asm.os"" )"		4226227	4					
ANR	4226282	CallExpression	"r_config_get ( core -> config , ""asm.os"" )"		4226227	0					
ANR	4226283	Callee	r_config_get		4226227	0					
ANR	4226284	Identifier	r_config_get		4226227	0					
ANR	4226285	ArgumentList	core -> config		4226227	1					
ANR	4226286	Argument	core -> config		4226227	0					
ANR	4226287	PtrMemberAccess	core -> config		4226227	0					
ANR	4226288	Identifier	core		4226227	0					
ANR	4226289	Identifier	config		4226227	1					
ANR	4226290	Argument	"""asm.os"""		4226227	1					
ANR	4226291	PrimaryExpression	"""asm.os"""		4226227	0					
ANR	4226292	SwitchStatement	switch ( * input )		4226227	4					
ANR	4226293	Condition	* input	141:9:3311:3316	4226227	0	True				
ANR	4226294	UnaryOperationExpression	* input		4226227	0					
ANR	4226295	UnaryOperator	*		4226227	0					
ANR	4226296	Identifier	input		4226227	1					
ANR	4226297	CompoundStatement		9:17:227:227	4226227	1					
ANR	4226298	Label	case 's' :	142:1:3322:3330	4226227	0	True				
ANR	4226299	IfStatement	if ( input [ 1 ] == ' ' )		4226227	1					
ANR	4226300	Condition	input [ 1 ] == ' '	144:6:3400:3414	4226227	0	True				
ANR	4226301	EqualityExpression	input [ 1 ] == ' '		4226227	0		==			
ANR	4226302	ArrayIndexing	input [ 1 ]		4226227	0					
ANR	4226303	Identifier	input		4226227	0					
ANR	4226304	PrimaryExpression	1		4226227	1					
ANR	4226305	PrimaryExpression	' '		4226227	1					
ANR	4226306	CompoundStatement		14:3:354:382	4226227	1					
ANR	4226307	IdentifierDeclStatement	RBuffer * buf = NULL ;	145:3:3422:3441	4226227	0	True				
ANR	4226308	IdentifierDecl	* buf = NULL		4226227	0					
ANR	4226309	IdentifierDeclType	RBuffer *		4226227	0					
ANR	4226310	Identifier	buf		4226227	1					
ANR	4226311	AssignmentExpression	* buf = NULL		4226227	2		=			
ANR	4226312	Identifier	NULL		4226227	0					
ANR	4226313	Identifier	NULL		4226227	1					
ANR	4226314	IdentifierDeclStatement	const char * ooaa = input + 2 ;	146:3:3446:3474	4226227	1	True				
ANR	4226315	IdentifierDecl	* ooaa = input + 2		4226227	0					
ANR	4226316	IdentifierDeclType	const char *		4226227	0					
ANR	4226317	Identifier	ooaa		4226227	1					
ANR	4226318	AssignmentExpression	* ooaa = input + 2		4226227	2		=			
ANR	4226319	Identifier	ooaa		4226227	0					
ANR	4226320	AdditiveExpression	input + 2		4226227	1		+			
ANR	4226321	Identifier	input		4226227	0					
ANR	4226322	PrimaryExpression	2		4226227	1					
ANR	4226323	WhileStatement	while ( IS_WHITESPACE ( * ooaa ) && * ooaa )		4226227	2					
ANR	4226324	Condition	IS_WHITESPACE ( * ooaa ) && * ooaa	147:10:3486:3515	4226227	0	True				
ANR	4226325	AndExpression	IS_WHITESPACE ( * ooaa ) && * ooaa		4226227	0		&&			
ANR	4226326	CallExpression	IS_WHITESPACE ( * ooaa )		4226227	0					
ANR	4226327	Callee	IS_WHITESPACE		4226227	0					
ANR	4226328	Identifier	IS_WHITESPACE		4226227	0					
ANR	4226329	ArgumentList	* ooaa		4226227	1					
ANR	4226330	Argument	* ooaa		4226227	0					
ANR	4226331	UnaryOperationExpression	* ooaa		4226227	0					
ANR	4226332	UnaryOperator	*		4226227	0					
ANR	4226333	Identifier	ooaa		4226227	1					
ANR	4226334	UnaryOperationExpression	* ooaa		4226227	1					
ANR	4226335	UnaryOperator	*		4226227	0					
ANR	4226336	Identifier	ooaa		4226227	1					
ANR	4226337	ExpressionStatement	ooaa ++	147:42:3518:3524	4226227	1	True				
ANR	4226338	PostIncDecOperationExpression	ooaa ++		4226227	0					
ANR	4226339	Identifier	ooaa		4226227	0					
ANR	4226340	IncDec	++		4226227	1					
ANR	4226341	ExpressionStatement	oa = strdup ( ooaa )	148:3:3529:3547	4226227	3	True				
ANR	4226342	AssignmentExpression	oa = strdup ( ooaa )		4226227	0		=			
ANR	4226343	Identifier	oa		4226227	0					
ANR	4226344	CallExpression	strdup ( ooaa )		4226227	1					
ANR	4226345	Callee	strdup		4226227	0					
ANR	4226346	Identifier	strdup		4226227	0					
ANR	4226347	ArgumentList	ooaa		4226227	1					
ANR	4226348	Argument	ooaa		4226227	0					
ANR	4226349	Identifier	ooaa		4226227	0					
ANR	4226350	ExpressionStatement	"p = strchr ( oa + 1 , ' ' )"	149:3:3552:3576	4226227	4	True				
ANR	4226351	AssignmentExpression	"p = strchr ( oa + 1 , ' ' )"		4226227	0		=			
ANR	4226352	Identifier	p		4226227	0					
ANR	4226353	CallExpression	"strchr ( oa + 1 , ' ' )"		4226227	1					
ANR	4226354	Callee	strchr		4226227	0					
ANR	4226355	Identifier	strchr		4226227	0					
ANR	4226356	ArgumentList	oa + 1		4226227	1					
ANR	4226357	Argument	oa + 1		4226227	0					
ANR	4226358	AdditiveExpression	oa + 1		4226227	0		+			
ANR	4226359	Identifier	oa		4226227	0					
ANR	4226360	PrimaryExpression	1		4226227	1					
ANR	4226361	Argument	' '		4226227	1					
ANR	4226362	PrimaryExpression	' '		4226227	0					
ANR	4226363	IfStatement	if ( p )		4226227	5					
ANR	4226364	Condition	p	150:7:3585:3585	4226227	0	True				
ANR	4226365	Identifier	p		4226227	0					
ANR	4226366	CompoundStatement		18:10:496:496	4226227	1					
ANR	4226367	ExpressionStatement	* p = 0	151:4:3594:3600	4226227	0	True				
ANR	4226368	AssignmentExpression	* p = 0		4226227	0		=			
ANR	4226369	UnaryOperationExpression	* p		4226227	0					
ANR	4226370	UnaryOperator	*		4226227	0					
ANR	4226371	Identifier	p		4226227	1					
ANR	4226372	PrimaryExpression	0		4226227	1					
ANR	4226373	ExpressionStatement	"buf = r_core_syscall ( core , oa , p + 1 )"	152:4:3606:3644	4226227	1	True				
ANR	4226374	AssignmentExpression	"buf = r_core_syscall ( core , oa , p + 1 )"		4226227	0		=			
ANR	4226375	Identifier	buf		4226227	0					
ANR	4226376	CallExpression	"r_core_syscall ( core , oa , p + 1 )"		4226227	1					
ANR	4226377	Callee	r_core_syscall		4226227	0					
ANR	4226378	Identifier	r_core_syscall		4226227	0					
ANR	4226379	ArgumentList	core		4226227	1					
ANR	4226380	Argument	core		4226227	0					
ANR	4226381	Identifier	core		4226227	0					
ANR	4226382	Argument	oa		4226227	1					
ANR	4226383	Identifier	oa		4226227	0					
ANR	4226384	Argument	p + 1		4226227	2					
ANR	4226385	AdditiveExpression	p + 1		4226227	0		+			
ANR	4226386	Identifier	p		4226227	0					
ANR	4226387	PrimaryExpression	1		4226227	1					
ANR	4226388	ElseStatement	else		4226227	0					
ANR	4226389	CompoundStatement		21:10:564:564	4226227	0					
ANR	4226390	ExpressionStatement	"buf = r_core_syscall ( core , oa , """" )"	154:4:3662:3697	4226227	0	True				
ANR	4226391	AssignmentExpression	"buf = r_core_syscall ( core , oa , """" )"		4226227	0		=			
ANR	4226392	Identifier	buf		4226227	0					
ANR	4226393	CallExpression	"r_core_syscall ( core , oa , """" )"		4226227	1					
ANR	4226394	Callee	r_core_syscall		4226227	0					
ANR	4226395	Identifier	r_core_syscall		4226227	0					
ANR	4226396	ArgumentList	core		4226227	1					
ANR	4226397	Argument	core		4226227	0					
ANR	4226398	Identifier	core		4226227	0					
ANR	4226399	Argument	oa		4226227	1					
ANR	4226400	Identifier	oa		4226227	0					
ANR	4226401	Argument	""""""		4226227	2					
ANR	4226402	PrimaryExpression	""""""		4226227	0					
ANR	4226403	ExpressionStatement	free ( oa )	156:3:3707:3716	4226227	6	True				
ANR	4226404	CallExpression	free ( oa )		4226227	0					
ANR	4226405	Callee	free		4226227	0					
ANR	4226406	Identifier	free		4226227	0					
ANR	4226407	ArgumentList	oa		4226227	1					
ANR	4226408	Argument	oa		4226227	0					
ANR	4226409	Identifier	oa		4226227	0					
ANR	4226410	IfStatement	if ( buf )		4226227	7					
ANR	4226411	Condition	buf	157:7:3725:3727	4226227	0	True				
ANR	4226412	Identifier	buf		4226227	0					
ANR	4226413	CompoundStatement		25:12:638:638	4226227	1					
ANR	4226414	ExpressionStatement	showBuffer ( buf )	158:4:3736:3752	4226227	0	True				
ANR	4226415	CallExpression	showBuffer ( buf )		4226227	0					
ANR	4226416	Callee	showBuffer		4226227	0					
ANR	4226417	Identifier	showBuffer		4226227	0					
ANR	4226418	ArgumentList	buf		4226227	1					
ANR	4226419	Argument	buf		4226227	0					
ANR	4226420	Identifier	buf		4226227	0					
ANR	4226421	ExpressionStatement	egg -> lang . nsyscalls = 0	160:3:3762:3785	4226227	8	True				
ANR	4226422	AssignmentExpression	egg -> lang . nsyscalls = 0		4226227	0		=			
ANR	4226423	MemberAccess	egg -> lang . nsyscalls		4226227	0					
ANR	4226424	PtrMemberAccess	egg -> lang		4226227	0					
ANR	4226425	Identifier	egg		4226227	0					
ANR	4226426	Identifier	lang		4226227	1					
ANR	4226427	Identifier	nsyscalls		4226227	1					
ANR	4226428	PrimaryExpression	0		4226227	1					
ANR	4226429	ElseStatement	else		4226227	0					
ANR	4226430	CompoundStatement		29:9:704:704	4226227	0					
ANR	4226431	ExpressionStatement	"eprintf ( ""Usage: gs [syscallname] [parameters]\\n"" )"	162:3:3801:3851	4226227	0	True				
ANR	4226432	CallExpression	"eprintf ( ""Usage: gs [syscallname] [parameters]\\n"" )"		4226227	0					
ANR	4226433	Callee	eprintf		4226227	0					
ANR	4226434	Identifier	eprintf		4226227	0					
ANR	4226435	ArgumentList	"""Usage: gs [syscallname] [parameters]\\n"""		4226227	1					
ANR	4226436	Argument	"""Usage: gs [syscallname] [parameters]\\n"""		4226227	0					
ANR	4226437	PrimaryExpression	"""Usage: gs [syscallname] [parameters]\\n"""		4226227	0					
ANR	4226438	BreakStatement	break ;	164:2:3859:3864	4226227	2	True				
ANR	4226439	Label	case ' ' :	165:1:3867:3875	4226227	3	True				
ANR	4226440	IfStatement	if ( input [ 1 ] && input [ 2 ] )		4226227	4					
ANR	4226441	Condition	input [ 1 ] && input [ 2 ]	166:6:3891:3910	4226227	0	True				
ANR	4226442	AndExpression	input [ 1 ] && input [ 2 ]		4226227	0		&&			
ANR	4226443	ArrayIndexing	input [ 1 ]		4226227	0					
ANR	4226444	Identifier	input		4226227	0					
ANR	4226445	PrimaryExpression	1		4226227	1					
ANR	4226446	ArrayIndexing	input [ 2 ]		4226227	1					
ANR	4226447	Identifier	input		4226227	0					
ANR	4226448	PrimaryExpression	2		4226227	1					
ANR	4226449	CompoundStatement		34:28:821:821	4226227	1					
ANR	4226450	ExpressionStatement	"r_egg_load ( egg , input + 2 , 0 )"	167:3:3918:3948	4226227	0	True				
ANR	4226451	CallExpression	"r_egg_load ( egg , input + 2 , 0 )"		4226227	0					
ANR	4226452	Callee	r_egg_load		4226227	0					
ANR	4226453	Identifier	r_egg_load		4226227	0					
ANR	4226454	ArgumentList	egg		4226227	1					
ANR	4226455	Argument	egg		4226227	0					
ANR	4226456	Identifier	egg		4226227	0					
ANR	4226457	Argument	input + 2		4226227	1					
ANR	4226458	AdditiveExpression	input + 2		4226227	0		+			
ANR	4226459	Identifier	input		4226227	0					
ANR	4226460	PrimaryExpression	2		4226227	1					
ANR	4226461	Argument	0		4226227	2					
ANR	4226462	PrimaryExpression	0		4226227	0					
ANR	4226463	IfStatement	if ( ! cmd_egg_compile ( egg ) )		4226227	1					
ANR	4226464	Condition	! cmd_egg_compile ( egg )	168:7:3957:3978	4226227	0	True				
ANR	4226465	UnaryOperationExpression	! cmd_egg_compile ( egg )		4226227	0					
ANR	4226466	UnaryOperator	!		4226227	0					
ANR	4226467	CallExpression	cmd_egg_compile ( egg )		4226227	1					
ANR	4226468	Callee	cmd_egg_compile		4226227	0					
ANR	4226469	Identifier	cmd_egg_compile		4226227	0					
ANR	4226470	ArgumentList	egg		4226227	1					
ANR	4226471	Argument	egg		4226227	0					
ANR	4226472	Identifier	egg		4226227	0					
ANR	4226473	CompoundStatement		36:31:889:889	4226227	1					
ANR	4226474	ExpressionStatement	"eprintf ( ""Cannot compile '%s'\\n"" , input + 2 )"	169:4:3987:4031	4226227	0	True				
ANR	4226475	CallExpression	"eprintf ( ""Cannot compile '%s'\\n"" , input + 2 )"		4226227	0					
ANR	4226476	Callee	eprintf		4226227	0					
ANR	4226477	Identifier	eprintf		4226227	0					
ANR	4226478	ArgumentList	"""Cannot compile '%s'\\n"""		4226227	1					
ANR	4226479	Argument	"""Cannot compile '%s'\\n"""		4226227	0					
ANR	4226480	PrimaryExpression	"""Cannot compile '%s'\\n"""		4226227	0					
ANR	4226481	Argument	input + 2		4226227	1					
ANR	4226482	AdditiveExpression	input + 2		4226227	0		+			
ANR	4226483	Identifier	input		4226227	0					
ANR	4226484	PrimaryExpression	2		4226227	1					
ANR	4226485	ElseStatement	else		4226227	0					
ANR	4226486	CompoundStatement		39:9:955:955	4226227	0					
ANR	4226487	ExpressionStatement	"eprintf ( ""wat\\n"" )"	172:3:4052:4069	4226227	0	True				
ANR	4226488	CallExpression	"eprintf ( ""wat\\n"" )"		4226227	0					
ANR	4226489	Callee	eprintf		4226227	0					
ANR	4226490	Identifier	eprintf		4226227	0					
ANR	4226491	ArgumentList	"""wat\\n"""		4226227	1					
ANR	4226492	Argument	"""wat\\n"""		4226227	0					
ANR	4226493	PrimaryExpression	"""wat\\n"""		4226227	0					
ANR	4226494	BreakStatement	break ;	174:2:4077:4082	4226227	5	True				
ANR	4226495	Label	case '\\0' :	175:1:4085:4094	4226227	6	True				
ANR	4226496	IfStatement	if ( ! cmd_egg_compile ( egg ) )		4226227	7					
ANR	4226497	Condition	! cmd_egg_compile ( egg )	176:6:4109:4130	4226227	0	True				
ANR	4226498	UnaryOperationExpression	! cmd_egg_compile ( egg )		4226227	0					
ANR	4226499	UnaryOperator	!		4226227	0					
ANR	4226500	CallExpression	cmd_egg_compile ( egg )		4226227	1					
ANR	4226501	Callee	cmd_egg_compile		4226227	0					
ANR	4226502	Identifier	cmd_egg_compile		4226227	0					
ANR	4226503	ArgumentList	egg		4226227	1					
ANR	4226504	Argument	egg		4226227	0					
ANR	4226505	Identifier	egg		4226227	0					
ANR	4226506	CompoundStatement		44:30:1041:1041	4226227	1					
ANR	4226507	ExpressionStatement	"eprintf ( ""Cannot compile\\n"" )"	177:3:4138:4166	4226227	0	True				
ANR	4226508	CallExpression	"eprintf ( ""Cannot compile\\n"" )"		4226227	0					
ANR	4226509	Callee	eprintf		4226227	0					
ANR	4226510	Identifier	eprintf		4226227	0					
ANR	4226511	ArgumentList	"""Cannot compile\\n"""		4226227	1					
ANR	4226512	Argument	"""Cannot compile\\n"""		4226227	0					
ANR	4226513	PrimaryExpression	"""Cannot compile\\n"""		4226227	0					
ANR	4226514	BreakStatement	break ;	179:2:4174:4179	4226227	8	True				
ANR	4226515	Label	case 'p' :	180:1:4182:4190	4226227	9	True				
ANR	4226516	IfStatement	if ( input [ 1 ] == ' ' )		4226227	10					
ANR	4226517	Condition	input [ 1 ] == ' '	181:6:4206:4220	4226227	0	True				
ANR	4226518	EqualityExpression	input [ 1 ] == ' '		4226227	0		==			
ANR	4226519	ArrayIndexing	input [ 1 ]		4226227	0					
ANR	4226520	Identifier	input		4226227	0					
ANR	4226521	PrimaryExpression	1		4226227	1					
ANR	4226522	PrimaryExpression	' '		4226227	1					
ANR	4226523	CompoundStatement		49:23:1131:1131	4226227	1					
ANR	4226524	IfStatement	if ( input [ 0 ] && input [ 2 ] )		4226227	0					
ANR	4226525	Condition	input [ 0 ] && input [ 2 ]	182:7:4232:4251	4226227	0	True				
ANR	4226526	AndExpression	input [ 0 ] && input [ 2 ]		4226227	0		&&			
ANR	4226527	ArrayIndexing	input [ 0 ]		4226227	0					
ANR	4226528	Identifier	input		4226227	0					
ANR	4226529	PrimaryExpression	0		4226227	1					
ANR	4226530	ArrayIndexing	input [ 2 ]		4226227	1					
ANR	4226531	Identifier	input		4226227	0					
ANR	4226532	PrimaryExpression	2		4226227	1					
ANR	4226533	CompoundStatement		50:29:1162:1162	4226227	1					
ANR	4226534	ExpressionStatement	"r_egg_option_set ( egg , ""egg.padding"" , input + 2 )"	183:4:4260:4308	4226227	0	True				
ANR	4226535	CallExpression	"r_egg_option_set ( egg , ""egg.padding"" , input + 2 )"		4226227	0					
ANR	4226536	Callee	r_egg_option_set		4226227	0					
ANR	4226537	Identifier	r_egg_option_set		4226227	0					
ANR	4226538	ArgumentList	egg		4226227	1					
ANR	4226539	Argument	egg		4226227	0					
ANR	4226540	Identifier	egg		4226227	0					
ANR	4226541	Argument	"""egg.padding"""		4226227	1					
ANR	4226542	PrimaryExpression	"""egg.padding"""		4226227	0					
ANR	4226543	Argument	input + 2		4226227	2					
ANR	4226544	AdditiveExpression	input + 2		4226227	0		+			
ANR	4226545	Identifier	input		4226227	0					
ANR	4226546	PrimaryExpression	2		4226227	1					
ANR	4226547	ElseStatement	else		4226227	0					
ANR	4226548	CompoundStatement		53:9:1232:1232	4226227	0					
ANR	4226549	ExpressionStatement	"eprintf ( ""Usage: gp [padding]\\n"" )"	186:3:4329:4362	4226227	0	True				
ANR	4226550	CallExpression	"eprintf ( ""Usage: gp [padding]\\n"" )"		4226227	0					
ANR	4226551	Callee	eprintf		4226227	0					
ANR	4226552	Identifier	eprintf		4226227	0					
ANR	4226553	ArgumentList	"""Usage: gp [padding]\\n"""		4226227	1					
ANR	4226554	Argument	"""Usage: gp [padding]\\n"""		4226227	0					
ANR	4226555	PrimaryExpression	"""Usage: gp [padding]\\n"""		4226227	0					
ANR	4226556	BreakStatement	break ;	188:2:4371:4376	4226227	11	True				
ANR	4226557	Label	case 'e' :	189:1:4379:4387	4226227	12	True				
ANR	4226558	IfStatement	if ( input [ 1 ] == ' ' )		4226227	13					
ANR	4226559	Condition	input [ 1 ] == ' '	190:6:4403:4417	4226227	0	True				
ANR	4226560	EqualityExpression	input [ 1 ] == ' '		4226227	0		==			
ANR	4226561	ArrayIndexing	input [ 1 ]		4226227	0					
ANR	4226562	Identifier	input		4226227	0					
ANR	4226563	PrimaryExpression	1		4226227	1					
ANR	4226564	PrimaryExpression	' '		4226227	1					
ANR	4226565	CompoundStatement		59:3:1333:1364	4226227	1					
ANR	4226566	IdentifierDeclStatement	const char * encoder = input + 2 ;	191:3:4425:4456	4226227	0	True				
ANR	4226567	IdentifierDecl	* encoder = input + 2		4226227	0					
ANR	4226568	IdentifierDeclType	const char *		4226227	0					
ANR	4226569	Identifier	encoder		4226227	1					
ANR	4226570	AssignmentExpression	* encoder = input + 2		4226227	2		=			
ANR	4226571	Identifier	encoder		4226227	0					
ANR	4226572	AdditiveExpression	input + 2		4226227	1		+			
ANR	4226573	Identifier	input		4226227	0					
ANR	4226574	PrimaryExpression	2		4226227	1					
ANR	4226575	WhileStatement	while ( IS_WHITESPACE ( * encoder ) && * encoder )		4226227	1					
ANR	4226576	Condition	IS_WHITESPACE ( * encoder ) && * encoder	192:10:4468:4503	4226227	0	True				
ANR	4226577	AndExpression	IS_WHITESPACE ( * encoder ) && * encoder		4226227	0		&&			
ANR	4226578	CallExpression	IS_WHITESPACE ( * encoder )		4226227	0					
ANR	4226579	Callee	IS_WHITESPACE		4226227	0					
ANR	4226580	Identifier	IS_WHITESPACE		4226227	0					
ANR	4226581	ArgumentList	* encoder		4226227	1					
ANR	4226582	Argument	* encoder		4226227	0					
ANR	4226583	UnaryOperationExpression	* encoder		4226227	0					
ANR	4226584	UnaryOperator	*		4226227	0					
ANR	4226585	Identifier	encoder		4226227	1					
ANR	4226586	UnaryOperationExpression	* encoder		4226227	1					
ANR	4226587	UnaryOperator	*		4226227	0					
ANR	4226588	Identifier	encoder		4226227	1					
ANR	4226589	CompoundStatement		60:48:1414:1414	4226227	1					
ANR	4226590	ExpressionStatement	encoder ++	193:4:4512:4521	4226227	0	True				
ANR	4226591	PostIncDecOperationExpression	encoder ++		4226227	0					
ANR	4226592	Identifier	encoder		4226227	0					
ANR	4226593	IncDec	++		4226227	1					
ANR	4226594	ExpressionStatement	oa = strdup ( encoder )	196:3:4532:4553	4226227	2	True				
ANR	4226595	AssignmentExpression	oa = strdup ( encoder )		4226227	0		=			
ANR	4226596	Identifier	oa		4226227	0					
ANR	4226597	CallExpression	strdup ( encoder )		4226227	1					
ANR	4226598	Callee	strdup		4226227	0					
ANR	4226599	Identifier	strdup		4226227	0					
ANR	4226600	ArgumentList	encoder		4226227	1					
ANR	4226601	Argument	encoder		4226227	0					
ANR	4226602	Identifier	encoder		4226227	0					
ANR	4226603	ExpressionStatement	"p = strchr ( oa + 1 , ' ' )"	197:3:4558:4582	4226227	3	True				
ANR	4226604	AssignmentExpression	"p = strchr ( oa + 1 , ' ' )"		4226227	0		=			
ANR	4226605	Identifier	p		4226227	0					
ANR	4226606	CallExpression	"strchr ( oa + 1 , ' ' )"		4226227	1					
ANR	4226607	Callee	strchr		4226227	0					
ANR	4226608	Identifier	strchr		4226227	0					
ANR	4226609	ArgumentList	oa + 1		4226227	1					
ANR	4226610	Argument	oa + 1		4226227	0					
ANR	4226611	AdditiveExpression	oa + 1		4226227	0		+			
ANR	4226612	Identifier	oa		4226227	0					
ANR	4226613	PrimaryExpression	1		4226227	1					
ANR	4226614	Argument	' '		4226227	1					
ANR	4226615	PrimaryExpression	' '		4226227	0					
ANR	4226616	IfStatement	if ( p )		4226227	4					
ANR	4226617	Condition	p	199:7:4592:4592	4226227	0	True				
ANR	4226618	Identifier	p		4226227	0					
ANR	4226619	CompoundStatement		67:10:1503:1503	4226227	1					
ANR	4226620	ExpressionStatement	* p = 0	200:4:4601:4607	4226227	0	True				
ANR	4226621	AssignmentExpression	* p = 0		4226227	0		=			
ANR	4226622	UnaryOperationExpression	* p		4226227	0					
ANR	4226623	UnaryOperator	*		4226227	0					
ANR	4226624	Identifier	p		4226227	1					
ANR	4226625	PrimaryExpression	0		4226227	1					
ANR	4226626	ExpressionStatement	"r_egg_option_set ( egg , ""key"" , p + 1 )"	201:4:4613:4649	4226227	1	True				
ANR	4226627	CallExpression	"r_egg_option_set ( egg , ""key"" , p + 1 )"		4226227	0					
ANR	4226628	Callee	r_egg_option_set		4226227	0					
ANR	4226629	Identifier	r_egg_option_set		4226227	0					
ANR	4226630	ArgumentList	egg		4226227	1					
ANR	4226631	Argument	egg		4226227	0					
ANR	4226632	Identifier	egg		4226227	0					
ANR	4226633	Argument	"""key"""		4226227	1					
ANR	4226634	PrimaryExpression	"""key"""		4226227	0					
ANR	4226635	Argument	p + 1		4226227	2					
ANR	4226636	AdditiveExpression	p + 1		4226227	0		+			
ANR	4226637	Identifier	p		4226227	0					
ANR	4226638	PrimaryExpression	1		4226227	1					
ANR	4226639	ExpressionStatement	"r_egg_option_set ( egg , ""egg.encoder"" , oa )"	202:4:4655:4696	4226227	2	True				
ANR	4226640	CallExpression	"r_egg_option_set ( egg , ""egg.encoder"" , oa )"		4226227	0					
ANR	4226641	Callee	r_egg_option_set		4226227	0					
ANR	4226642	Identifier	r_egg_option_set		4226227	0					
ANR	4226643	ArgumentList	egg		4226227	1					
ANR	4226644	Argument	egg		4226227	0					
ANR	4226645	Identifier	egg		4226227	0					
ANR	4226646	Argument	"""egg.encoder"""		4226227	1					
ANR	4226647	PrimaryExpression	"""egg.encoder"""		4226227	0					
ANR	4226648	Argument	oa		4226227	2					
ANR	4226649	Identifier	oa		4226227	0					
ANR	4226650	ElseStatement	else		4226227	0					
ANR	4226651	CompoundStatement		71:10:1616:1616	4226227	0					
ANR	4226652	ExpressionStatement	"eprintf ( ""Usage: ge [encoder] [key]\\n"" )"	204:4:4714:4753	4226227	0	True				
ANR	4226653	CallExpression	"eprintf ( ""Usage: ge [encoder] [key]\\n"" )"		4226227	0					
ANR	4226654	Callee	eprintf		4226227	0					
ANR	4226655	Identifier	eprintf		4226227	0					
ANR	4226656	ArgumentList	"""Usage: ge [encoder] [key]\\n"""		4226227	1					
ANR	4226657	Argument	"""Usage: ge [encoder] [key]\\n"""		4226227	0					
ANR	4226658	PrimaryExpression	"""Usage: ge [encoder] [key]\\n"""		4226227	0					
ANR	4226659	ExpressionStatement	free ( oa )	206:3:4764:4773	4226227	5	True				
ANR	4226660	CallExpression	free ( oa )		4226227	0					
ANR	4226661	Callee	free		4226227	0					
ANR	4226662	Identifier	free		4226227	0					
ANR	4226663	ArgumentList	oa		4226227	1					
ANR	4226664	Argument	oa		4226227	0					
ANR	4226665	Identifier	oa		4226227	0					
ANR	4226666	ElseStatement	else		4226227	0					
ANR	4226667	CompoundStatement		75:9:1692:1692	4226227	0					
ANR	4226668	ExpressionStatement	"eprintf ( ""Usage: ge [encoder] [key]\\n"" )"	208:3:4789:4828	4226227	0	True				
ANR	4226669	CallExpression	"eprintf ( ""Usage: ge [encoder] [key]\\n"" )"		4226227	0					
ANR	4226670	Callee	eprintf		4226227	0					
ANR	4226671	Identifier	eprintf		4226227	0					
ANR	4226672	ArgumentList	"""Usage: ge [encoder] [key]\\n"""		4226227	1					
ANR	4226673	Argument	"""Usage: ge [encoder] [key]\\n"""		4226227	0					
ANR	4226674	PrimaryExpression	"""Usage: ge [encoder] [key]\\n"""		4226227	0					
ANR	4226675	BreakStatement	break ;	210:2:4836:4841	4226227	14	True				
ANR	4226676	Label	case 'i' :	211:1:4844:4852	4226227	15	True				
ANR	4226677	IfStatement	if ( input [ 1 ] == ' ' )		4226227	16					
ANR	4226678	Condition	input [ 1 ] == ' '	212:6:4869:4883	4226227	0	True				
ANR	4226679	EqualityExpression	input [ 1 ] == ' '		4226227	0		==			
ANR	4226680	ArrayIndexing	input [ 1 ]		4226227	0					
ANR	4226681	Identifier	input		4226227	0					
ANR	4226682	PrimaryExpression	1		4226227	1					
ANR	4226683	PrimaryExpression	' '		4226227	1					
ANR	4226684	CompoundStatement		80:23:1794:1794	4226227	1					
ANR	4226685	IfStatement	if ( input [ 0 ] && input [ 2 ] )		4226227	0					
ANR	4226686	Condition	input [ 0 ] && input [ 2 ]	213:7:4895:4914	4226227	0	True				
ANR	4226687	AndExpression	input [ 0 ] && input [ 2 ]		4226227	0		&&			
ANR	4226688	ArrayIndexing	input [ 0 ]		4226227	0					
ANR	4226689	Identifier	input		4226227	0					
ANR	4226690	PrimaryExpression	0		4226227	1					
ANR	4226691	ArrayIndexing	input [ 2 ]		4226227	1					
ANR	4226692	Identifier	input		4226227	0					
ANR	4226693	PrimaryExpression	2		4226227	1					
ANR	4226694	CompoundStatement		81:29:1825:1825	4226227	1					
ANR	4226695	ExpressionStatement	"r_egg_option_set ( egg , ""egg.shellcode"" , input + 2 )"	214:4:4923:4973	4226227	0	True				
ANR	4226696	CallExpression	"r_egg_option_set ( egg , ""egg.shellcode"" , input + 2 )"		4226227	0					
ANR	4226697	Callee	r_egg_option_set		4226227	0					
ANR	4226698	Identifier	r_egg_option_set		4226227	0					
ANR	4226699	ArgumentList	egg		4226227	1					
ANR	4226700	Argument	egg		4226227	0					
ANR	4226701	Identifier	egg		4226227	0					
ANR	4226702	Argument	"""egg.shellcode"""		4226227	1					
ANR	4226703	PrimaryExpression	"""egg.shellcode"""		4226227	0					
ANR	4226704	Argument	input + 2		4226227	2					
ANR	4226705	AdditiveExpression	input + 2		4226227	0		+			
ANR	4226706	Identifier	input		4226227	0					
ANR	4226707	PrimaryExpression	2		4226227	1					
ANR	4226708	ElseStatement	else		4226227	0					
ANR	4226709	CompoundStatement		83:10:1893:1893	4226227	0					
ANR	4226710	ExpressionStatement	"eprintf ( ""Usage: gi [shellcode-type]\\n"" )"	216:4:4991:5031	4226227	0	True				
ANR	4226711	CallExpression	"eprintf ( ""Usage: gi [shellcode-type]\\n"" )"		4226227	0					
ANR	4226712	Callee	eprintf		4226227	0					
ANR	4226713	Identifier	eprintf		4226227	0					
ANR	4226714	ArgumentList	"""Usage: gi [shellcode-type]\\n"""		4226227	1					
ANR	4226715	Argument	"""Usage: gi [shellcode-type]\\n"""		4226227	0					
ANR	4226716	PrimaryExpression	"""Usage: gi [shellcode-type]\\n"""		4226227	0					
ANR	4226717	ElseStatement	else		4226227	0					
ANR	4226718	CompoundStatement		86:9:1955:1955	4226227	0					
ANR	4226719	ExpressionStatement	"eprintf ( ""Usage: gi [shellcode-type]\\n"" )"	219:3:5052:5092	4226227	0	True				
ANR	4226720	CallExpression	"eprintf ( ""Usage: gi [shellcode-type]\\n"" )"		4226227	0					
ANR	4226721	Callee	eprintf		4226227	0					
ANR	4226722	Identifier	eprintf		4226227	0					
ANR	4226723	ArgumentList	"""Usage: gi [shellcode-type]\\n"""		4226227	1					
ANR	4226724	Argument	"""Usage: gi [shellcode-type]\\n"""		4226227	0					
ANR	4226725	PrimaryExpression	"""Usage: gi [shellcode-type]\\n"""		4226227	0					
ANR	4226726	BreakStatement	break ;	221:2:5100:5105	4226227	17	True				
ANR	4226727	Label	case 'l' :	222:1:5108:5116	4226227	18	True				
ANR	4226728	CompoundStatement		93:2:2058:2071	4226227	19					
ANR	4226729	IdentifierDeclStatement	RListIter * iter ;	224:2:5131:5146	4226227	0	True				
ANR	4226730	IdentifierDecl	* iter		4226227	0					
ANR	4226731	IdentifierDeclType	RListIter *		4226227	0					
ANR	4226732	Identifier	iter		4226227	1					
ANR	4226733	IdentifierDeclStatement	REggPlugin * p ;	225:2:5150:5163	4226227	1	True				
ANR	4226734	IdentifierDecl	* p		4226227	0					
ANR	4226735	IdentifierDeclType	REggPlugin *		4226227	0					
ANR	4226736	Identifier	p		4226227	1					
ANR	4226737	Statement	r_list_foreach	226:2:5167:5180	4226227	2	True				
ANR	4226738	Statement	(	226:17:5182:5182	4226227	3	True				
ANR	4226739	Statement	egg	226:18:5183:5185	4226227	4	True				
ANR	4226740	Statement	->	226:21:5186:5187	4226227	5	True				
ANR	4226741	Statement	plugins	226:23:5188:5194	4226227	6	True				
ANR	4226742	Statement	","	226:30:5195:5195	4226227	7	True				
ANR	4226743	Statement	iter	226:32:5197:5200	4226227	8	True				
ANR	4226744	Statement	","	226:36:5201:5201	4226227	9	True				
ANR	4226745	Statement	p	226:38:5203:5203	4226227	10	True				
ANR	4226746	Statement	)	226:39:5204:5204	4226227	11	True				
ANR	4226747	CompoundStatement		94:41:2114:2114	4226227	12					
ANR	4226748	ExpressionStatement	"r_cons_printf ( ""%s  %6s : %s\\n"" , ( p -> type == R_EGG_PLUGIN_SHELLCODE ) ? ""shc"" : ""enc"" , p -> name , p -> desc )"	227:3:5211:5320	4226227	0	True				
ANR	4226749	CallExpression	"r_cons_printf ( ""%s  %6s : %s\\n"" , ( p -> type == R_EGG_PLUGIN_SHELLCODE ) ? ""shc"" : ""enc"" , p -> name , p -> desc )"		4226227	0					
ANR	4226750	Callee	r_cons_printf		4226227	0					
ANR	4226751	Identifier	r_cons_printf		4226227	0					
ANR	4226752	ArgumentList	"""%s  %6s : %s\\n"""		4226227	1					
ANR	4226753	Argument	"""%s  %6s : %s\\n"""		4226227	0					
ANR	4226754	PrimaryExpression	"""%s  %6s : %s\\n"""		4226227	0					
ANR	4226755	Argument	"( p -> type == R_EGG_PLUGIN_SHELLCODE ) ? ""shc"" : ""enc"""		4226227	1					
ANR	4226756	ConditionalExpression	"( p -> type == R_EGG_PLUGIN_SHELLCODE ) ? ""shc"" : ""enc"""		4226227	0					
ANR	4226757	Condition	p -> type == R_EGG_PLUGIN_SHELLCODE		4226227	0					
ANR	4226758	EqualityExpression	p -> type == R_EGG_PLUGIN_SHELLCODE		4226227	0		==			
ANR	4226759	PtrMemberAccess	p -> type		4226227	0					
ANR	4226760	Identifier	p		4226227	0					
ANR	4226761	Identifier	type		4226227	1					
ANR	4226762	Identifier	R_EGG_PLUGIN_SHELLCODE		4226227	1					
ANR	4226763	PrimaryExpression	"""shc"""		4226227	1					
ANR	4226764	PrimaryExpression	"""enc"""		4226227	2					
ANR	4226765	Argument	p -> name		4226227	2					
ANR	4226766	PtrMemberAccess	p -> name		4226227	0					
ANR	4226767	Identifier	p		4226227	0					
ANR	4226768	Identifier	name		4226227	1					
ANR	4226769	Argument	p -> desc		4226227	3					
ANR	4226770	PtrMemberAccess	p -> desc		4226227	0					
ANR	4226771	Identifier	p		4226227	0					
ANR	4226772	Identifier	desc		4226227	1					
ANR	4226773	BreakStatement	break ;	232:1:5330:5335	4226227	20	True				
ANR	4226774	Label	case 'S' :	233:1:5338:5346	4226227	21	True				
ANR	4226775	CompoundStatement		113:2:2452:2457	4226227	22					
ANR	4226776	Statement	static	235:2:5361:5366	4226227	0	True				
ANR	4226777	IdentifierDeclStatement	"const char * configList [ ] = { ""egg.shellcode"" , ""egg.encoder"" , ""egg.padding"" , ""key"" , ""cmd"" , ""suid"" , NULL } ;"	235:9:5368:5495	4226227	1	True				
ANR	4226778	IdentifierDecl	"* configList [ ] = { ""egg.shellcode"" , ""egg.encoder"" , ""egg.padding"" , ""key"" , ""cmd"" , ""suid"" , NULL }"		4226227	0					
ANR	4226779	IdentifierDeclType	const char * [ ]		4226227	0					
ANR	4226780	Identifier	configList		4226227	1					
ANR	4226781	AssignmentExpression	"* configList [ ] = { ""egg.shellcode"" , ""egg.encoder"" , ""egg.padding"" , ""key"" , ""cmd"" , ""suid"" , NULL }"		4226227	2		=			
ANR	4226782	Identifier	configList		4226227	0					
ANR	4226783	InitializerList	"""egg.shellcode"""		4226227	1					
ANR	4226784	PrimaryExpression	"""egg.shellcode"""		4226227	0					
ANR	4226785	PrimaryExpression	"""egg.encoder"""		4226227	1					
ANR	4226786	PrimaryExpression	"""egg.padding"""		4226227	2					
ANR	4226787	PrimaryExpression	"""key"""		4226227	3					
ANR	4226788	PrimaryExpression	"""cmd"""		4226227	4					
ANR	4226789	PrimaryExpression	"""suid"""		4226227	5					
ANR	4226790	Identifier	NULL		4226227	6					
ANR	4226791	ExpressionStatement	"r_cons_printf ( ""Configuration options\\n"" )"	244:2:5499:5540	4226227	2	True				
ANR	4226792	CallExpression	"r_cons_printf ( ""Configuration options\\n"" )"		4226227	0					
ANR	4226793	Callee	r_cons_printf		4226227	0					
ANR	4226794	Identifier	r_cons_printf		4226227	0					
ANR	4226795	ArgumentList	"""Configuration options\\n"""		4226227	1					
ANR	4226796	Argument	"""Configuration options\\n"""		4226227	0					
ANR	4226797	PrimaryExpression	"""Configuration options\\n"""		4226227	0					
ANR	4226798	IdentifierDeclStatement	int i ;	245:2:5544:5549	4226227	3	True				
ANR	4226799	IdentifierDecl	i		4226227	0					
ANR	4226800	IdentifierDeclType	int		4226227	0					
ANR	4226801	Identifier	i		4226227	1					
ANR	4226802	ForStatement	for ( i = 0 ; configList [ i ] ; i ++ )		4226227	4					
ANR	4226803	ForInit	i = 0 ;	246:7:5558:5563	4226227	0	True				
ANR	4226804	AssignmentExpression	i = 0		4226227	0		=			
ANR	4226805	Identifier	i		4226227	0					
ANR	4226806	PrimaryExpression	0		4226227	1					
ANR	4226807	Condition	configList [ i ]	246:14:5565:5577	4226227	1	True				
ANR	4226808	ArrayIndexing	configList [ i ]		4226227	0					
ANR	4226809	Identifier	configList		4226227	0					
ANR	4226810	Identifier	i		4226227	1					
ANR	4226811	PostIncDecOperationExpression	i ++	246:29:5580:5582	4226227	2	True				
ANR	4226812	Identifier	i		4226227	0					
ANR	4226813	IncDec	++		4226227	1					
ANR	4226814	CompoundStatement		115:3:2498:2527	4226227	3					
ANR	4226815	IdentifierDeclStatement	const char * p = configList [ i ] ;	247:3:5590:5619	4226227	0	True				
ANR	4226816	IdentifierDecl	* p = configList [ i ]		4226227	0					
ANR	4226817	IdentifierDeclType	const char *		4226227	0					
ANR	4226818	Identifier	p		4226227	1					
ANR	4226819	AssignmentExpression	* p = configList [ i ]		4226227	2		=			
ANR	4226820	Identifier	p		4226227	0					
ANR	4226821	ArrayIndexing	configList [ i ]		4226227	1					
ANR	4226822	Identifier	configList		4226227	0					
ANR	4226823	Identifier	i		4226227	1					
ANR	4226824	IfStatement	"if ( r_egg_option_get ( egg , p ) )"		4226227	1					
ANR	4226825	Condition	"r_egg_option_get ( egg , p )"	248:7:5628:5652	4226227	0	True				
ANR	4226826	CallExpression	"r_egg_option_get ( egg , p )"		4226227	0					
ANR	4226827	Callee	r_egg_option_get		4226227	0					
ANR	4226828	Identifier	r_egg_option_get		4226227	0					
ANR	4226829	ArgumentList	egg		4226227	1					
ANR	4226830	Argument	egg		4226227	0					
ANR	4226831	Identifier	egg		4226227	0					
ANR	4226832	Argument	p		4226227	1					
ANR	4226833	Identifier	p		4226227	0					
ANR	4226834	CompoundStatement		116:34:2563:2563	4226227	1					
ANR	4226835	ExpressionStatement	"r_cons_printf ( ""%s : %s\\n"" , p , r_egg_option_get ( egg , p ) )"	249:4:5661:5718	4226227	0	True				
ANR	4226836	CallExpression	"r_cons_printf ( ""%s : %s\\n"" , p , r_egg_option_get ( egg , p ) )"		4226227	0					
ANR	4226837	Callee	r_cons_printf		4226227	0					
ANR	4226838	Identifier	r_cons_printf		4226227	0					
ANR	4226839	ArgumentList	"""%s : %s\\n"""		4226227	1					
ANR	4226840	Argument	"""%s : %s\\n"""		4226227	0					
ANR	4226841	PrimaryExpression	"""%s : %s\\n"""		4226227	0					
ANR	4226842	Argument	p		4226227	1					
ANR	4226843	Identifier	p		4226227	0					
ANR	4226844	Argument	"r_egg_option_get ( egg , p )"		4226227	2					
ANR	4226845	CallExpression	"r_egg_option_get ( egg , p )"		4226227	0					
ANR	4226846	Callee	r_egg_option_get		4226227	0					
ANR	4226847	Identifier	r_egg_option_get		4226227	0					
ANR	4226848	ArgumentList	egg		4226227	1					
ANR	4226849	Argument	egg		4226227	0					
ANR	4226850	Identifier	egg		4226227	0					
ANR	4226851	Argument	p		4226227	1					
ANR	4226852	Identifier	p		4226227	0					
ANR	4226853	ElseStatement	else		4226227	0					
ANR	4226854	CompoundStatement		118:10:2638:2638	4226227	0					
ANR	4226855	ExpressionStatement	"r_cons_printf ( ""%s : %s\\n"" , p , """" )"	251:4:5736:5770	4226227	0	True				
ANR	4226856	CallExpression	"r_cons_printf ( ""%s : %s\\n"" , p , """" )"		4226227	0					
ANR	4226857	Callee	r_cons_printf		4226227	0					
ANR	4226858	Identifier	r_cons_printf		4226227	0					
ANR	4226859	ArgumentList	"""%s : %s\\n"""		4226227	1					
ANR	4226860	Argument	"""%s : %s\\n"""		4226227	0					
ANR	4226861	PrimaryExpression	"""%s : %s\\n"""		4226227	0					
ANR	4226862	Argument	p		4226227	1					
ANR	4226863	Identifier	p		4226227	0					
ANR	4226864	Argument	""""""		4226227	2					
ANR	4226865	PrimaryExpression	""""""		4226227	0					
ANR	4226866	ExpressionStatement	"r_cons_printf ( ""\\nTarget options\\n"" )"	254:2:5783:5819	4226227	5	True				
ANR	4226867	CallExpression	"r_cons_printf ( ""\\nTarget options\\n"" )"		4226227	0					
ANR	4226868	Callee	r_cons_printf		4226227	0					
ANR	4226869	Identifier	r_cons_printf		4226227	0					
ANR	4226870	ArgumentList	"""\\nTarget options\\n"""		4226227	1					
ANR	4226871	Argument	"""\\nTarget options\\n"""		4226227	0					
ANR	4226872	PrimaryExpression	"""\\nTarget options\\n"""		4226227	0					
ANR	4226873	ExpressionStatement	"r_cons_printf ( ""arch : %s\\n"" , core -> anal -> cpu )"	255:2:5823:5869	4226227	6	True				
ANR	4226874	CallExpression	"r_cons_printf ( ""arch : %s\\n"" , core -> anal -> cpu )"		4226227	0					
ANR	4226875	Callee	r_cons_printf		4226227	0					
ANR	4226876	Identifier	r_cons_printf		4226227	0					
ANR	4226877	ArgumentList	"""arch : %s\\n"""		4226227	1					
ANR	4226878	Argument	"""arch : %s\\n"""		4226227	0					
ANR	4226879	PrimaryExpression	"""arch : %s\\n"""		4226227	0					
ANR	4226880	Argument	core -> anal -> cpu		4226227	1					
ANR	4226881	PtrMemberAccess	core -> anal -> cpu		4226227	0					
ANR	4226882	PtrMemberAccess	core -> anal		4226227	0					
ANR	4226883	Identifier	core		4226227	0					
ANR	4226884	Identifier	anal		4226227	1					
ANR	4226885	Identifier	cpu		4226227	1					
ANR	4226886	ExpressionStatement	"r_cons_printf ( ""os   : %s\\n"" , core -> anal -> os )"	256:2:5873:5918	4226227	7	True				
ANR	4226887	CallExpression	"r_cons_printf ( ""os   : %s\\n"" , core -> anal -> os )"		4226227	0					
ANR	4226888	Callee	r_cons_printf		4226227	0					
ANR	4226889	Identifier	r_cons_printf		4226227	0					
ANR	4226890	ArgumentList	"""os   : %s\\n"""		4226227	1					
ANR	4226891	Argument	"""os   : %s\\n"""		4226227	0					
ANR	4226892	PrimaryExpression	"""os   : %s\\n"""		4226227	0					
ANR	4226893	Argument	core -> anal -> os		4226227	1					
ANR	4226894	PtrMemberAccess	core -> anal -> os		4226227	0					
ANR	4226895	PtrMemberAccess	core -> anal		4226227	0					
ANR	4226896	Identifier	core		4226227	0					
ANR	4226897	Identifier	anal		4226227	1					
ANR	4226898	Identifier	os		4226227	1					
ANR	4226899	ExpressionStatement	"r_cons_printf ( ""bits : %d\\n"" , core -> anal -> bits )"	257:2:5922:5969	4226227	8	True				
ANR	4226900	CallExpression	"r_cons_printf ( ""bits : %d\\n"" , core -> anal -> bits )"		4226227	0					
ANR	4226901	Callee	r_cons_printf		4226227	0					
ANR	4226902	Identifier	r_cons_printf		4226227	0					
ANR	4226903	ArgumentList	"""bits : %d\\n"""		4226227	1					
ANR	4226904	Argument	"""bits : %d\\n"""		4226227	0					
ANR	4226905	PrimaryExpression	"""bits : %d\\n"""		4226227	0					
ANR	4226906	Argument	core -> anal -> bits		4226227	1					
ANR	4226907	PtrMemberAccess	core -> anal -> bits		4226227	0					
ANR	4226908	PtrMemberAccess	core -> anal		4226227	0					
ANR	4226909	Identifier	core		4226227	0					
ANR	4226910	Identifier	anal		4226227	1					
ANR	4226911	Identifier	bits		4226227	1					
ANR	4226912	BreakStatement	break ;	259:1:5975:5980	4226227	23	True				
ANR	4226913	Label	case 'r' :	260:1:5983:5991	4226227	24	True				
ANR	4226914	ExpressionStatement	"cmd_egg_option ( egg , ""egg.padding"" , """" )"	261:2:6003:6042	4226227	25	True				
ANR	4226915	CallExpression	"cmd_egg_option ( egg , ""egg.padding"" , """" )"		4226227	0					
ANR	4226916	Callee	cmd_egg_option		4226227	0					
ANR	4226917	Identifier	cmd_egg_option		4226227	0					
ANR	4226918	ArgumentList	egg		4226227	1					
ANR	4226919	Argument	egg		4226227	0					
ANR	4226920	Identifier	egg		4226227	0					
ANR	4226921	Argument	"""egg.padding"""		4226227	1					
ANR	4226922	PrimaryExpression	"""egg.padding"""		4226227	0					
ANR	4226923	Argument	""""""		4226227	2					
ANR	4226924	PrimaryExpression	""""""		4226227	0					
ANR	4226925	ExpressionStatement	"cmd_egg_option ( egg , ""egg.shellcode"" , """" )"	262:2:6046:6087	4226227	26	True				
ANR	4226926	CallExpression	"cmd_egg_option ( egg , ""egg.shellcode"" , """" )"		4226227	0					
ANR	4226927	Callee	cmd_egg_option		4226227	0					
ANR	4226928	Identifier	cmd_egg_option		4226227	0					
ANR	4226929	ArgumentList	egg		4226227	1					
ANR	4226930	Argument	egg		4226227	0					
ANR	4226931	Identifier	egg		4226227	0					
ANR	4226932	Argument	"""egg.shellcode"""		4226227	1					
ANR	4226933	PrimaryExpression	"""egg.shellcode"""		4226227	0					
ANR	4226934	Argument	""""""		4226227	2					
ANR	4226935	PrimaryExpression	""""""		4226227	0					
ANR	4226936	ExpressionStatement	"cmd_egg_option ( egg , ""egg.encoder"" , """" )"	263:2:6091:6130	4226227	27	True				
ANR	4226937	CallExpression	"cmd_egg_option ( egg , ""egg.encoder"" , """" )"		4226227	0					
ANR	4226938	Callee	cmd_egg_option		4226227	0					
ANR	4226939	Identifier	cmd_egg_option		4226227	0					
ANR	4226940	ArgumentList	egg		4226227	1					
ANR	4226941	Argument	egg		4226227	0					
ANR	4226942	Identifier	egg		4226227	0					
ANR	4226943	Argument	"""egg.encoder"""		4226227	1					
ANR	4226944	PrimaryExpression	"""egg.encoder"""		4226227	0					
ANR	4226945	Argument	""""""		4226227	2					
ANR	4226946	PrimaryExpression	""""""		4226227	0					
ANR	4226947	BreakStatement	break ;	264:2:6134:6139	4226227	28	True				
ANR	4226948	Label	case 'c' :	265:1:6142:6150	4226227	29	True				
ANR	4226949	SwitchStatement	switch ( input [ 1 ] )		4226227	30					
ANR	4226950	Condition	input [ 1 ]	267:10:6202:6209	4226227	0	True				
ANR	4226951	ArrayIndexing	input [ 1 ]		4226227	0					
ANR	4226952	Identifier	input		4226227	0					
ANR	4226953	PrimaryExpression	1		4226227	1					
ANR	4226954	CompoundStatement		135:20:3120:3120	4226227	1					
ANR	4226955	Label	case ' ' :	268:2:6216:6224	4226227	0	True				
ANR	4226956	ExpressionStatement	oa = strdup ( input + 2 )	269:3:6229:6252	4226227	1	True				
ANR	4226957	AssignmentExpression	oa = strdup ( input + 2 )		4226227	0		=			
ANR	4226958	Identifier	oa		4226227	0					
ANR	4226959	CallExpression	strdup ( input + 2 )		4226227	1					
ANR	4226960	Callee	strdup		4226227	0					
ANR	4226961	Identifier	strdup		4226227	0					
ANR	4226962	ArgumentList	input + 2		4226227	1					
ANR	4226963	Argument	input + 2		4226227	0					
ANR	4226964	AdditiveExpression	input + 2		4226227	0		+			
ANR	4226965	Identifier	input		4226227	0					
ANR	4226966	PrimaryExpression	2		4226227	1					
ANR	4226967	ExpressionStatement	"p = strchr ( oa , '=' )"	270:3:6257:6277	4226227	2	True				
ANR	4226968	AssignmentExpression	"p = strchr ( oa , '=' )"		4226227	0		=			
ANR	4226969	Identifier	p		4226227	0					
ANR	4226970	CallExpression	"strchr ( oa , '=' )"		4226227	1					
ANR	4226971	Callee	strchr		4226227	0					
ANR	4226972	Identifier	strchr		4226227	0					
ANR	4226973	ArgumentList	oa		4226227	1					
ANR	4226974	Argument	oa		4226227	0					
ANR	4226975	Identifier	oa		4226227	0					
ANR	4226976	Argument	'='		4226227	1					
ANR	4226977	PrimaryExpression	'='		4226227	0					
ANR	4226978	IfStatement	if ( p )		4226227	3					
ANR	4226979	Condition	p	271:7:6286:6286	4226227	0	True				
ANR	4226980	Identifier	p		4226227	0					
ANR	4226981	CompoundStatement		139:10:3197:3197	4226227	1					
ANR	4226982	ExpressionStatement	* p = 0	272:4:6295:6301	4226227	0	True				
ANR	4226983	AssignmentExpression	* p = 0		4226227	0		=			
ANR	4226984	UnaryOperationExpression	* p		4226227	0					
ANR	4226985	UnaryOperator	*		4226227	0					
ANR	4226986	Identifier	p		4226227	1					
ANR	4226987	PrimaryExpression	0		4226227	1					
ANR	4226988	ExpressionStatement	"r_egg_option_set ( egg , oa , p + 1 )"	273:4:6307:6340	4226227	1	True				
ANR	4226989	CallExpression	"r_egg_option_set ( egg , oa , p + 1 )"		4226227	0					
ANR	4226990	Callee	r_egg_option_set		4226227	0					
ANR	4226991	Identifier	r_egg_option_set		4226227	0					
ANR	4226992	ArgumentList	egg		4226227	1					
ANR	4226993	Argument	egg		4226227	0					
ANR	4226994	Identifier	egg		4226227	0					
ANR	4226995	Argument	oa		4226227	1					
ANR	4226996	Identifier	oa		4226227	0					
ANR	4226997	Argument	p + 1		4226227	2					
ANR	4226998	AdditiveExpression	p + 1		4226227	0		+			
ANR	4226999	Identifier	p		4226227	0					
ANR	4227000	PrimaryExpression	1		4226227	1					
ANR	4227001	ElseStatement	else		4226227	0					
ANR	4227002	CompoundStatement		143:4:3266:3302	4226227	0					
ANR	4227003	IdentifierDeclStatement	"char * o = r_egg_option_get ( egg , oa ) ;"	275:4:6358:6394	4226227	0	True				
ANR	4227004	IdentifierDecl	"* o = r_egg_option_get ( egg , oa )"		4226227	0					
ANR	4227005	IdentifierDeclType	char *		4226227	0					
ANR	4227006	Identifier	o		4226227	1					
ANR	4227007	AssignmentExpression	"* o = r_egg_option_get ( egg , oa )"		4226227	2		=			
ANR	4227008	Identifier	o		4226227	0					
ANR	4227009	CallExpression	"r_egg_option_get ( egg , oa )"		4226227	1					
ANR	4227010	Callee	r_egg_option_get		4226227	0					
ANR	4227011	Identifier	r_egg_option_get		4226227	0					
ANR	4227012	ArgumentList	egg		4226227	1					
ANR	4227013	Argument	egg		4226227	0					
ANR	4227014	Identifier	egg		4226227	0					
ANR	4227015	Argument	oa		4226227	1					
ANR	4227016	Identifier	oa		4226227	0					
ANR	4227017	IfStatement	if ( o )		4226227	1					
ANR	4227018	Condition	o	276:8:6404:6404	4226227	0	True				
ANR	4227019	Identifier	o		4226227	0					
ANR	4227020	CompoundStatement		144:11:3315:3315	4226227	1					
ANR	4227021	ExpressionStatement	r_cons_printf ( o )	277:5:6414:6431	4226227	0	True				
ANR	4227022	CallExpression	r_cons_printf ( o )		4226227	0					
ANR	4227023	Callee	r_cons_printf		4226227	0					
ANR	4227024	Identifier	r_cons_printf		4226227	0					
ANR	4227025	ArgumentList	o		4226227	1					
ANR	4227026	Argument	o		4226227	0					
ANR	4227027	Identifier	o		4226227	0					
ANR	4227028	ExpressionStatement	free ( o )	278:5:6438:6446	4226227	1	True				
ANR	4227029	CallExpression	free ( o )		4226227	0					
ANR	4227030	Callee	free		4226227	0					
ANR	4227031	Identifier	free		4226227	0					
ANR	4227032	ArgumentList	o		4226227	1					
ANR	4227033	Argument	o		4226227	0					
ANR	4227034	Identifier	o		4226227	0					
ANR	4227035	ExpressionStatement	free ( oa )	281:3:6462:6471	4226227	4	True				
ANR	4227036	CallExpression	free ( oa )		4226227	0					
ANR	4227037	Callee	free		4226227	0					
ANR	4227038	Identifier	free		4226227	0					
ANR	4227039	ArgumentList	oa		4226227	1					
ANR	4227040	Argument	oa		4226227	0					
ANR	4227041	Identifier	oa		4226227	0					
ANR	4227042	BreakStatement	break ;	282:3:6476:6481	4226227	5	True				
ANR	4227043	Label	case '\\0' :	283:2:6485:6494	4226227	6	True				
ANR	4227044	ExpressionStatement	"eprintf ( ""TODO: list options\\n"" )"	285:3:6535:6567	4226227	7	True				
ANR	4227045	CallExpression	"eprintf ( ""TODO: list options\\n"" )"		4226227	0					
ANR	4227046	Callee	eprintf		4226227	0					
ANR	4227047	Identifier	eprintf		4226227	0					
ANR	4227048	ArgumentList	"""TODO: list options\\n"""		4226227	1					
ANR	4227049	Argument	"""TODO: list options\\n"""		4226227	0					
ANR	4227050	PrimaryExpression	"""TODO: list options\\n"""		4226227	0					
ANR	4227051	BreakStatement	break ;	286:3:6572:6577	4226227	8	True				
ANR	4227052	Label	default :	287:2:6581:6588	4226227	9	True				
ANR	4227053	Identifier	default		4226227	0					
ANR	4227054	ExpressionStatement	"eprintf ( ""Usage: gc [k=v]\\n"" )"	288:3:6593:6622	4226227	10	True				
ANR	4227055	CallExpression	"eprintf ( ""Usage: gc [k=v]\\n"" )"		4226227	0					
ANR	4227056	Callee	eprintf		4226227	0					
ANR	4227057	Identifier	eprintf		4226227	0					
ANR	4227058	ArgumentList	"""Usage: gc [k=v]\\n"""		4226227	1					
ANR	4227059	Argument	"""Usage: gc [k=v]\\n"""		4226227	0					
ANR	4227060	PrimaryExpression	"""Usage: gc [k=v]\\n"""		4226227	0					
ANR	4227061	BreakStatement	break ;	289:3:6627:6632	4226227	11	True				
ANR	4227062	BreakStatement	break ;	291:2:6640:6645	4226227	31	True				
ANR	4227063	Label	case '?' :	292:1:6648:6656	4226227	32	True				
ANR	4227064	ExpressionStatement	"r_core_cmd_help ( core , help_msg_g )"	293:2:6660:6694	4226227	33	True				
ANR	4227065	CallExpression	"r_core_cmd_help ( core , help_msg_g )"		4226227	0					
ANR	4227066	Callee	r_core_cmd_help		4226227	0					
ANR	4227067	Identifier	r_core_cmd_help		4226227	0					
ANR	4227068	ArgumentList	core		4226227	1					
ANR	4227069	Argument	core		4226227	0					
ANR	4227070	Identifier	core		4226227	0					
ANR	4227071	Argument	help_msg_g		4226227	1					
ANR	4227072	Identifier	help_msg_g		4226227	0					
ANR	4227073	BreakStatement	break ;	294:2:6698:6703	4226227	34	True				
ANR	4227074	ReturnStatement	return true ;	296:1:6709:6720	4226227	5	True				
ANR	4227075	Identifier	true		4226227	0					
ANR	4227076	ReturnType	static int		4226227	1					
ANR	4227077	Identifier	cmd_egg		4226227	2					
ANR	4227078	ParameterList	"void * data , const char * input"		4226227	3					
ANR	4227079	Parameter	void * data	133:19:3060:3069	4226227	0	True				
ANR	4227080	ParameterType	void *		4226227	0					
ANR	4227081	Identifier	data		4226227	1					
ANR	4227082	Parameter	const char * input	133:31:3072:3088	4226227	1	True				
ANR	4227083	ParameterType	const char *		4226227	0					
ANR	4227084	Identifier	input		4226227	1					
ANR	4227085	CFGEntryNode	ENTRY		4226227		True				
ANR	4227086	CFGExitNode	EXIT		4226227		True				
ANR	4227087	Symbol	data		4226227						
ANR	4227088	Symbol	egg		4226227						
ANR	4227089	Symbol	* core		4226227						
ANR	4227090	Symbol	r_config_get		4226227						
ANR	4227091	Symbol	core -> assembler -> bits		4226227						
ANR	4227092	Symbol	* input		4226227						
ANR	4227093	Symbol	core -> assembler		4226227						
ANR	4227094	Symbol	strchr		4226227						
ANR	4227095	Symbol	help_msg_g		4226227						
ANR	4227096	Symbol	R_EGG_PLUGIN_SHELLCODE		4226227						
ANR	4227097	Symbol	configList		4226227						
ANR	4227098	Symbol	IS_WHITESPACE		4226227						
ANR	4227099	Symbol	egg -> lang		4226227						
ANR	4227100	Symbol	p -> type		4226227						
ANR	4227101	Symbol	core -> anal		4226227						
ANR	4227102	Symbol	* core -> assembler		4226227						
ANR	4227103	Symbol	* egg		4226227						
ANR	4227104	Symbol	oa		4226227						
ANR	4227105	Symbol	core -> egg		4226227						
ANR	4227106	Symbol	* ooaa		4226227						
ANR	4227107	Symbol	r_core_syscall		4226227						
ANR	4227108	Symbol	* * core		4226227						
ANR	4227109	Symbol	cmd_egg_compile		4226227						
ANR	4227110	Symbol	core -> config		4226227						
ANR	4227111	Symbol	core -> anal -> bits		4226227						
ANR	4227112	Symbol	NULL		4226227						
ANR	4227113	Symbol	r_egg_option_get		4226227						
ANR	4227114	Symbol	iter		4226227						
ANR	4227115	Symbol	i		4226227						
ANR	4227116	Symbol	core -> anal -> os		4226227						
ANR	4227117	Symbol	encoder		4226227						
ANR	4227118	Symbol	core -> anal -> cpu		4226227						
ANR	4227119	Symbol	o		4226227						
ANR	4227120	Symbol	p		4226227						
ANR	4227121	Symbol	input		4226227						
ANR	4227122	Symbol	core		4226227						
ANR	4227123	Symbol	* configList		4226227						
ANR	4227124	Symbol	buf		4226227						
ANR	4227125	Symbol	* i		4226227						
ANR	4227126	Symbol	* core -> anal		4226227						
ANR	4227127	Symbol	ooaa		4226227						
ANR	4227128	Symbol	egg -> lang . nsyscalls		4226227						
ANR	4227129	Symbol	* encoder		4226227						
ANR	4227130	Symbol	true		4226227						
ANR	4227131	Symbol	* p		4226227						
ANR	4227132	Symbol	strdup		4226227						
ANR	4227133	Symbol	p -> name		4226227						
ANR	4227134	Symbol	p -> desc		4226227						
