command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1073489	File	data/converged/CVE-2019-16718~_radare2/cond.c								
ANR	1073490	Function	r_anal_cond_tostring	5:6:80:715							
ANR	1073491	FunctionDef	r_anal_cond_tostring (int cc)		1073490	0					
ANR	1073492	CompoundStatement		5:47:121:715	1073490	0					
ANR	1073493	SwitchStatement	switch ( cc )		1073490	0					
ANR	1073494	Condition	cc	6:9:132:133	1073490	0	True				
ANR	1073495	Identifier	cc		1073490	0					
ANR	1073496	CompoundStatement		2:13:14:14	1073490	1					
ANR	1073497	Label	case R_ANAL_COND_EQ :	7:1:139:158	1073490	0	True				
ANR	1073498	Identifier	R_ANAL_COND_EQ		1073490	0					
ANR	1073499	ReturnStatement	"return ""eq"" ;"	7:22:160:171	1073490	1	True				
ANR	1073500	PrimaryExpression	"""eq"""		1073490	0					
ANR	1073501	Label	case R_ANAL_COND_NV :	8:1:174:193	1073490	2	True				
ANR	1073502	Identifier	R_ANAL_COND_NV		1073490	0					
ANR	1073503	ReturnStatement	"return ""nv"" ;"	8:22:195:206	1073490	3	True				
ANR	1073504	PrimaryExpression	"""nv"""		1073490	0					
ANR	1073505	Label	case R_ANAL_COND_NE :	9:1:209:228	1073490	4	True				
ANR	1073506	Identifier	R_ANAL_COND_NE		1073490	0					
ANR	1073507	ReturnStatement	"return ""ne"" ;"	9:22:230:241	1073490	5	True				
ANR	1073508	PrimaryExpression	"""ne"""		1073490	0					
ANR	1073509	Label	case R_ANAL_COND_HS :	10:1:244:263	1073490	6	True				
ANR	1073510	Identifier	R_ANAL_COND_HS		1073490	0					
ANR	1073511	ReturnStatement	"return ""hs"" ;"	10:22:265:276	1073490	7	True				
ANR	1073512	PrimaryExpression	"""hs"""		1073490	0					
ANR	1073513	Label	case R_ANAL_COND_LO :	11:1:279:298	1073490	8	True				
ANR	1073514	Identifier	R_ANAL_COND_LO		1073490	0					
ANR	1073515	ReturnStatement	"return ""lo"" ;"	11:22:300:311	1073490	9	True				
ANR	1073516	PrimaryExpression	"""lo"""		1073490	0					
ANR	1073517	Label	case R_ANAL_COND_MI :	12:1:314:333	1073490	10	True				
ANR	1073518	Identifier	R_ANAL_COND_MI		1073490	0					
ANR	1073519	ReturnStatement	"return ""mi"" ;"	12:22:335:346	1073490	11	True				
ANR	1073520	PrimaryExpression	"""mi"""		1073490	0					
ANR	1073521	Label	case R_ANAL_COND_PL :	13:1:349:368	1073490	12	True				
ANR	1073522	Identifier	R_ANAL_COND_PL		1073490	0					
ANR	1073523	ReturnStatement	"return ""pl"" ;"	13:22:370:381	1073490	13	True				
ANR	1073524	PrimaryExpression	"""pl"""		1073490	0					
ANR	1073525	Label	case R_ANAL_COND_VS :	14:1:384:403	1073490	14	True				
ANR	1073526	Identifier	R_ANAL_COND_VS		1073490	0					
ANR	1073527	ReturnStatement	"return ""vs"" ;"	14:22:405:416	1073490	15	True				
ANR	1073528	PrimaryExpression	"""vs"""		1073490	0					
ANR	1073529	Label	case R_ANAL_COND_VC :	15:1:419:438	1073490	16	True				
ANR	1073530	Identifier	R_ANAL_COND_VC		1073490	0					
ANR	1073531	ReturnStatement	"return ""vc"" ;"	15:22:440:451	1073490	17	True				
ANR	1073532	PrimaryExpression	"""vc"""		1073490	0					
ANR	1073533	Label	case R_ANAL_COND_HI :	16:1:454:473	1073490	18	True				
ANR	1073534	Identifier	R_ANAL_COND_HI		1073490	0					
ANR	1073535	ReturnStatement	"return ""hi"" ;"	16:22:475:486	1073490	19	True				
ANR	1073536	PrimaryExpression	"""hi"""		1073490	0					
ANR	1073537	Label	case R_ANAL_COND_LS :	17:1:489:508	1073490	20	True				
ANR	1073538	Identifier	R_ANAL_COND_LS		1073490	0					
ANR	1073539	ReturnStatement	"return ""ls"" ;"	17:22:510:521	1073490	21	True				
ANR	1073540	PrimaryExpression	"""ls"""		1073490	0					
ANR	1073541	Label	case R_ANAL_COND_GE :	18:1:524:543	1073490	22	True				
ANR	1073542	Identifier	R_ANAL_COND_GE		1073490	0					
ANR	1073543	ReturnStatement	"return ""ge"" ;"	18:22:545:556	1073490	23	True				
ANR	1073544	PrimaryExpression	"""ge"""		1073490	0					
ANR	1073545	Label	case R_ANAL_COND_LT :	19:1:559:578	1073490	24	True				
ANR	1073546	Identifier	R_ANAL_COND_LT		1073490	0					
ANR	1073547	ReturnStatement	"return ""lt"" ;"	19:22:580:591	1073490	25	True				
ANR	1073548	PrimaryExpression	"""lt"""		1073490	0					
ANR	1073549	Label	case R_ANAL_COND_GT :	20:1:594:613	1073490	26	True				
ANR	1073550	Identifier	R_ANAL_COND_GT		1073490	0					
ANR	1073551	ReturnStatement	"return ""gt"" ;"	20:22:615:626	1073490	27	True				
ANR	1073552	PrimaryExpression	"""gt"""		1073490	0					
ANR	1073553	Label	case R_ANAL_COND_LE :	21:1:629:648	1073490	28	True				
ANR	1073554	Identifier	R_ANAL_COND_LE		1073490	0					
ANR	1073555	ReturnStatement	"return ""le"" ;"	21:22:650:661	1073490	29	True				
ANR	1073556	PrimaryExpression	"""le"""		1073490	0					
ANR	1073557	Label	case R_ANAL_COND_AL :	22:1:664:683	1073490	30	True				
ANR	1073558	Identifier	R_ANAL_COND_AL		1073490	0					
ANR	1073559	ReturnStatement	"return ""al"" ;"	22:22:685:696	1073490	31	True				
ANR	1073560	PrimaryExpression	"""al"""		1073490	0					
ANR	1073561	ReturnStatement	"return ""??"" ;"	24:1:702:713	1073490	1	True				
ANR	1073562	PrimaryExpression	"""??"""		1073490	0					
ANR	1073563	ReturnType	const char *		1073490	1					
ANR	1073564	Identifier	r_anal_cond_tostring		1073490	2					
ANR	1073565	ParameterList	int cc		1073490	3					
ANR	1073566	Parameter	int cc	5:39:113:118	1073490	0	True				
ANR	1073567	ParameterType	int		1073490	0					
ANR	1073568	Identifier	cc		1073490	1					
ANR	1073569	CFGEntryNode	ENTRY		1073490		True				
ANR	1073570	CFGExitNode	EXIT		1073490		True				
ANR	1073571	Symbol	cc		1073490						
ANR	1073572	Function	r_anal_cond_new	27:0:718:783							
ANR	1073573	FunctionDef	r_anal_cond_new ()		1073572	0					
ANR	1073574	CompoundStatement		27:35:753:783	1073572	0					
ANR	1073575	ReturnStatement	return R_NEW0 ( RAnalCond ) ;	28:1:756:781	1073572	0	True				
ANR	1073576	CallExpression	R_NEW0 ( RAnalCond )		1073572	0					
ANR	1073577	Callee	R_NEW0		1073572	0					
ANR	1073578	Identifier	R_NEW0		1073572	0					
ANR	1073579	ArgumentList	RAnalCond		1073572	1					
ANR	1073580	Argument	RAnalCond		1073572	0					
ANR	1073581	Identifier	RAnalCond		1073572	0					
ANR	1073582	ReturnType	R_API RAnalCond *		1073572	1					
ANR	1073583	Identifier	r_anal_cond_new		1073572	2					
ANR	1073584	ParameterList			1073572	3					
ANR	1073585	CFGEntryNode	ENTRY		1073572		True				
ANR	1073586	CFGExitNode	EXIT		1073572		True				
ANR	1073587	Symbol	RAnalCond		1073572						
ANR	1073588	Symbol	R_NEW0		1073572						
ANR	1073589	Function	r_anal_cond_fini	31:0:786:950							
ANR	1073590	FunctionDef	r_anal_cond_fini (RAnalCond * c)		1073589	0					
ANR	1073591	CompoundStatement		31:43:829:950	1073589	0					
ANR	1073592	IfStatement	if ( ! c )		1073589	0					
ANR	1073593	Condition	! c	32:5:836:837	1073589	0	True				
ANR	1073594	UnaryOperationExpression	! c		1073589	0					
ANR	1073595	UnaryOperator	!		1073589	0					
ANR	1073596	Identifier	c		1073589	1					
ANR	1073597	CompoundStatement		2:9:10:10	1073589	1					
ANR	1073598	ReturnStatement	return ;	33:2:844:850	1073589	0	True				
ANR	1073599	ExpressionStatement	r_anal_value_free ( c -> arg [ 0 ] )	35:1:856:885	1073589	1	True				
ANR	1073600	CallExpression	r_anal_value_free ( c -> arg [ 0 ] )		1073589	0					
ANR	1073601	Callee	r_anal_value_free		1073589	0					
ANR	1073602	Identifier	r_anal_value_free		1073589	0					
ANR	1073603	ArgumentList	c -> arg [ 0 ]		1073589	1					
ANR	1073604	Argument	c -> arg [ 0 ]		1073589	0					
ANR	1073605	ArrayIndexing	c -> arg [ 0 ]		1073589	0					
ANR	1073606	PtrMemberAccess	c -> arg		1073589	0					
ANR	1073607	Identifier	c		1073589	0					
ANR	1073608	Identifier	arg		1073589	1					
ANR	1073609	PrimaryExpression	0		1073589	1					
ANR	1073610	ExpressionStatement	r_anal_value_free ( c -> arg [ 1 ] )	36:1:888:917	1073589	2	True				
ANR	1073611	CallExpression	r_anal_value_free ( c -> arg [ 1 ] )		1073589	0					
ANR	1073612	Callee	r_anal_value_free		1073589	0					
ANR	1073613	Identifier	r_anal_value_free		1073589	0					
ANR	1073614	ArgumentList	c -> arg [ 1 ]		1073589	1					
ANR	1073615	Argument	c -> arg [ 1 ]		1073589	0					
ANR	1073616	ArrayIndexing	c -> arg [ 1 ]		1073589	0					
ANR	1073617	PtrMemberAccess	c -> arg		1073589	0					
ANR	1073618	Identifier	c		1073589	0					
ANR	1073619	Identifier	arg		1073589	1					
ANR	1073620	PrimaryExpression	1		1073589	1					
ANR	1073621	ExpressionStatement	c -> arg [ 0 ] = c -> arg [ 1 ] = NULL	37:1:920:948	1073589	3	True				
ANR	1073622	AssignmentExpression	c -> arg [ 0 ] = c -> arg [ 1 ] = NULL		1073589	0		=			
ANR	1073623	ArrayIndexing	c -> arg [ 0 ]		1073589	0					
ANR	1073624	PtrMemberAccess	c -> arg		1073589	0					
ANR	1073625	Identifier	c		1073589	0					
ANR	1073626	Identifier	arg		1073589	1					
ANR	1073627	PrimaryExpression	0		1073589	1					
ANR	1073628	AssignmentExpression	c -> arg [ 1 ] = NULL		1073589	1		=			
ANR	1073629	ArrayIndexing	c -> arg [ 1 ]		1073589	0					
ANR	1073630	PtrMemberAccess	c -> arg		1073589	0					
ANR	1073631	Identifier	c		1073589	0					
ANR	1073632	Identifier	arg		1073589	1					
ANR	1073633	PrimaryExpression	1		1073589	1					
ANR	1073634	Identifier	NULL		1073589	1					
ANR	1073635	ReturnType	R_API void		1073589	1					
ANR	1073636	Identifier	r_anal_cond_fini		1073589	2					
ANR	1073637	ParameterList	RAnalCond * c		1073589	3					
ANR	1073638	Parameter	RAnalCond * c	31:29:815:826	1073589	0	True				
ANR	1073639	ParameterType	RAnalCond *		1073589	0					
ANR	1073640	Identifier	c		1073589	1					
ANR	1073641	CFGEntryNode	ENTRY		1073589		True				
ANR	1073642	CFGExitNode	EXIT		1073589		True				
ANR	1073643	Symbol	c		1073589						
ANR	1073644	Symbol	* c -> arg		1073589						
ANR	1073645	Symbol	NULL		1073589						
ANR	1073646	Symbol	* * c		1073589						
ANR	1073647	Symbol	c -> arg		1073589						
ANR	1073648	Symbol	* c		1073589						
ANR	1073649	Function	r_anal_cond_free	40:0:953:1056							
ANR	1073650	FunctionDef	r_anal_cond_free (RAnalCond * c)		1073649	0					
ANR	1073651	CompoundStatement		40:43:996:1056	1073649	0					
ANR	1073652	IfStatement	if ( ! c )		1073649	0					
ANR	1073653	Condition	! c	41:5:1003:1004	1073649	0	True				
ANR	1073654	UnaryOperationExpression	! c		1073649	0					
ANR	1073655	UnaryOperator	!		1073649	0					
ANR	1073656	Identifier	c		1073649	1					
ANR	1073657	CompoundStatement		2:9:10:10	1073649	1					
ANR	1073658	ReturnStatement	return ;	42:2:1011:1017	1073649	0	True				
ANR	1073659	ExpressionStatement	r_anal_cond_fini ( c )	44:1:1023:1043	1073649	1	True				
ANR	1073660	CallExpression	r_anal_cond_fini ( c )		1073649	0					
ANR	1073661	Callee	r_anal_cond_fini		1073649	0					
ANR	1073662	Identifier	r_anal_cond_fini		1073649	0					
ANR	1073663	ArgumentList	c		1073649	1					
ANR	1073664	Argument	c		1073649	0					
ANR	1073665	Identifier	c		1073649	0					
ANR	1073666	ExpressionStatement	free ( c )	45:1:1046:1054	1073649	2	True				
ANR	1073667	CallExpression	free ( c )		1073649	0					
ANR	1073668	Callee	free		1073649	0					
ANR	1073669	Identifier	free		1073649	0					
ANR	1073670	ArgumentList	c		1073649	1					
ANR	1073671	Argument	c		1073649	0					
ANR	1073672	Identifier	c		1073649	0					
ANR	1073673	ReturnType	R_API void		1073649	1					
ANR	1073674	Identifier	r_anal_cond_free		1073649	2					
ANR	1073675	ParameterList	RAnalCond * c		1073649	3					
ANR	1073676	Parameter	RAnalCond * c	40:29:982:993	1073649	0	True				
ANR	1073677	ParameterType	RAnalCond *		1073649	0					
ANR	1073678	Identifier	c		1073649	1					
ANR	1073679	CFGEntryNode	ENTRY		1073649		True				
ANR	1073680	CFGExitNode	EXIT		1073649		True				
ANR	1073681	Symbol	c		1073649						
ANR	1073682	Function	r_anal_cond_clone	49:0:1067:1235							
ANR	1073683	FunctionDef	r_anal_cond_clone (RAnalCond * cond)		1073682	0					
ANR	1073684	CompoundStatement		49:52:1119:1235	1073682	0					
ANR	1073685	IdentifierDeclStatement	RAnalCond * c = R_NEW ( RAnalCond ) ;	50:1:1122:1154	1073682	0	True				
ANR	1073686	IdentifierDecl	* c = R_NEW ( RAnalCond )		1073682	0					
ANR	1073687	IdentifierDeclType	RAnalCond *		1073682	0					
ANR	1073688	Identifier	c		1073682	1					
ANR	1073689	AssignmentExpression	* c = R_NEW ( RAnalCond )		1073682	2		=			
ANR	1073690	Identifier	c		1073682	0					
ANR	1073691	CallExpression	R_NEW ( RAnalCond )		1073682	1					
ANR	1073692	Callee	R_NEW		1073682	0					
ANR	1073693	Identifier	R_NEW		1073682	0					
ANR	1073694	ArgumentList	RAnalCond		1073682	1					
ANR	1073695	Argument	RAnalCond		1073682	0					
ANR	1073696	Identifier	RAnalCond		1073682	0					
ANR	1073697	IfStatement	if ( ! c )		1073682	1					
ANR	1073698	Condition	! c	51:5:1161:1162	1073682	0	True				
ANR	1073699	UnaryOperationExpression	! c		1073682	0					
ANR	1073700	UnaryOperator	!		1073682	0					
ANR	1073701	Identifier	c		1073682	1					
ANR	1073702	CompoundStatement		3:9:45:45	1073682	1					
ANR	1073703	ReturnStatement	return NULL ;	52:2:1169:1180	1073682	0	True				
ANR	1073704	Identifier	NULL		1073682	0					
ANR	1073705	ExpressionStatement	"memcpy ( c , cond , sizeof ( RAnalCond ) )"	54:1:1186:1222	1073682	2	True				
ANR	1073706	CallExpression	"memcpy ( c , cond , sizeof ( RAnalCond ) )"		1073682	0					
ANR	1073707	Callee	memcpy		1073682	0					
ANR	1073708	Identifier	memcpy		1073682	0					
ANR	1073709	ArgumentList	c		1073682	1					
ANR	1073710	Argument	c		1073682	0					
ANR	1073711	Identifier	c		1073682	0					
ANR	1073712	Argument	cond		1073682	1					
ANR	1073713	Identifier	cond		1073682	0					
ANR	1073714	Argument	sizeof ( RAnalCond )		1073682	2					
ANR	1073715	SizeofExpression	sizeof ( RAnalCond )		1073682	0					
ANR	1073716	Sizeof	sizeof		1073682	0					
ANR	1073717	SizeofOperand	RAnalCond		1073682	1					
ANR	1073718	ReturnStatement	return c ;	55:1:1225:1233	1073682	3	True				
ANR	1073719	Identifier	c		1073682	0					
ANR	1073720	ReturnType	R_API RAnalCond *		1073682	1					
ANR	1073721	Identifier	r_anal_cond_clone		1073682	2					
ANR	1073722	ParameterList	RAnalCond * cond		1073682	3					
ANR	1073723	Parameter	RAnalCond * cond	49:35:1102:1116	1073682	0	True				
ANR	1073724	ParameterType	RAnalCond *		1073682	0					
ANR	1073725	Identifier	cond		1073682	1					
ANR	1073726	CFGEntryNode	ENTRY		1073682		True				
ANR	1073727	CFGExitNode	EXIT		1073682		True				
ANR	1073728	Symbol	RAnalCond		1073682						
ANR	1073729	Symbol	c		1073682						
ANR	1073730	Symbol	NULL		1073682						
ANR	1073731	Symbol	cond		1073682						
ANR	1073732	Symbol	R_NEW		1073682						
ANR	1073733	Function	condstring	58:0:1238:1570							
ANR	1073734	FunctionDef	condstring (RAnalCond * cond)		1073733	0					
ANR	1073735	CompoundStatement		58:54:1292:1570	1073733	0					
ANR	1073736	IdentifierDeclStatement	"const char * condstr_single [ ] = { ""!"" , """" , ""0<"" , ""0<="" , ""0>"" , ""0>="" } ;"	59:1:1295:1363	1073733	0	True				
ANR	1073737	IdentifierDecl	"* condstr_single [ ] = { ""!"" , """" , ""0<"" , ""0<="" , ""0>"" , ""0>="" }"		1073733	0					
ANR	1073738	IdentifierDeclType	const char * [ ]		1073733	0					
ANR	1073739	Identifier	condstr_single		1073733	1					
ANR	1073740	AssignmentExpression	"* condstr_single [ ] = { ""!"" , """" , ""0<"" , ""0<="" , ""0>"" , ""0>="" }"		1073733	2		=			
ANR	1073741	Identifier	condstr_single		1073733	0					
ANR	1073742	InitializerList	"""!"""		1073733	1					
ANR	1073743	PrimaryExpression	"""!"""		1073733	0					
ANR	1073744	PrimaryExpression	""""""		1073733	1					
ANR	1073745	PrimaryExpression	"""0<"""		1073733	2					
ANR	1073746	PrimaryExpression	"""0<="""		1073733	3					
ANR	1073747	PrimaryExpression	"""0>"""		1073733	4					
ANR	1073748	PrimaryExpression	"""0>="""		1073733	5					
ANR	1073749	IdentifierDeclStatement	"const char * condstr [ ] = { ""=="" , ""!="" , "">="" , "">"" , ""<="" , ""<"" } ;"	60:1:1366:1426	1073733	1	True				
ANR	1073750	IdentifierDecl	"* condstr [ ] = { ""=="" , ""!="" , "">="" , "">"" , ""<="" , ""<"" }"		1073733	0					
ANR	1073751	IdentifierDeclType	const char * [ ]		1073733	0					
ANR	1073752	Identifier	condstr		1073733	1					
ANR	1073753	AssignmentExpression	"* condstr [ ] = { ""=="" , ""!="" , "">="" , "">"" , ""<="" , ""<"" }"		1073733	2		=			
ANR	1073754	Identifier	condstr		1073733	0					
ANR	1073755	InitializerList	"""=="""		1073733	1					
ANR	1073756	PrimaryExpression	"""=="""		1073733	0					
ANR	1073757	PrimaryExpression	"""!="""		1073733	1					
ANR	1073758	PrimaryExpression	""">="""		1073733	2					
ANR	1073759	PrimaryExpression	""">"""		1073733	3					
ANR	1073760	PrimaryExpression	"""<="""		1073733	4					
ANR	1073761	PrimaryExpression	"""<"""		1073733	5					
ANR	1073762	IfStatement	if ( cond )		1073733	2					
ANR	1073763	Condition	cond	61:5:1433:1436	1073733	0	True				
ANR	1073764	Identifier	cond		1073733	0					
ANR	1073765	CompoundStatement		4:11:146:146	1073733	1					
ANR	1073766	IfStatement	if ( cond -> arg [ 1 ] )		1073733	0					
ANR	1073767	Condition	cond -> arg [ 1 ]	62:6:1447:1458	1073733	0	True				
ANR	1073768	ArrayIndexing	cond -> arg [ 1 ]		1073733	0					
ANR	1073769	PtrMemberAccess	cond -> arg		1073733	0					
ANR	1073770	Identifier	cond		1073733	0					
ANR	1073771	Identifier	arg		1073733	1					
ANR	1073772	PrimaryExpression	1		1073733	1					
ANR	1073773	CompoundStatement		5:20:168:168	1073733	1					
ANR	1073774	ReturnStatement	return condstr [ cond -> type % 6 ] ;	63:3:1466:1496	1073733	0	True				
ANR	1073775	ArrayIndexing	condstr [ cond -> type % 6 ]		1073733	0					
ANR	1073776	Identifier	condstr		1073733	0					
ANR	1073777	MultiplicativeExpression	cond -> type % 6		1073733	1		%			
ANR	1073778	PtrMemberAccess	cond -> type		1073733	0					
ANR	1073779	Identifier	cond		1073733	0					
ANR	1073780	Identifier	type		1073733	1					
ANR	1073781	PrimaryExpression	6		1073733	1					
ANR	1073782	ElseStatement	else		1073733	0					
ANR	1073783	CompoundStatement		7:9:214:214	1073733	0					
ANR	1073784	ReturnStatement	return condstr_single [ cond -> type % 6 ] ;	65:3:1512:1549	1073733	0	True				
ANR	1073785	ArrayIndexing	condstr_single [ cond -> type % 6 ]		1073733	0					
ANR	1073786	Identifier	condstr_single		1073733	0					
ANR	1073787	MultiplicativeExpression	cond -> type % 6		1073733	1		%			
ANR	1073788	PtrMemberAccess	cond -> type		1073733	0					
ANR	1073789	Identifier	cond		1073733	0					
ANR	1073790	Identifier	type		1073733	1					
ANR	1073791	PrimaryExpression	6		1073733	1					
ANR	1073792	ReturnStatement	"return """" ;"	68:1:1559:1568	1073733	3	True				
ANR	1073793	PrimaryExpression	""""""		1073733	0					
ANR	1073794	ReturnType	static inline const char *		1073733	1					
ANR	1073795	Identifier	condstring		1073733	2					
ANR	1073796	ParameterList	RAnalCond * cond		1073733	3					
ANR	1073797	Parameter	RAnalCond * cond	58:37:1275:1289	1073733	0	True				
ANR	1073798	ParameterType	RAnalCond *		1073733	0					
ANR	1073799	Identifier	cond		1073733	1					
ANR	1073800	CFGEntryNode	ENTRY		1073733		True				
ANR	1073801	CFGExitNode	EXIT		1073733		True				
ANR	1073802	Symbol	cond -> type		1073733						
ANR	1073803	Symbol	cond -> arg		1073733						
ANR	1073804	Symbol	* cond		1073733						
ANR	1073805	Symbol	condstr_single		1073733						
ANR	1073806	Symbol	* condstr		1073733						
ANR	1073807	Symbol	* condstr_single		1073733						
ANR	1073808	Symbol	* cond -> arg		1073733						
ANR	1073809	Symbol	* * cond		1073733						
ANR	1073810	Symbol	cond		1073733						
ANR	1073811	Symbol	condstr		1073733						
ANR	1073812	Symbol	* cond -> type		1073733						
ANR	1073813	Function	r_anal_cond_eval	71:0:1573:2379							
ANR	1073814	FunctionDef	"r_anal_cond_eval (RAnal * anal , RAnalCond * cond)"		1073813	0					
ANR	1073815	CompoundStatement		71:57:1630:2379	1073813	0					
ANR	1073816	IdentifierDeclStatement	"st64 arg0 = ( st64 ) r_anal_value_to_ut64 ( anal , cond -> arg [ 0 ] ) ;"	73:1:1659:1719	1073813	0	True				
ANR	1073817	IdentifierDecl	"arg0 = ( st64 ) r_anal_value_to_ut64 ( anal , cond -> arg [ 0 ] )"		1073813	0					
ANR	1073818	IdentifierDeclType	st64		1073813	0					
ANR	1073819	Identifier	arg0		1073813	1					
ANR	1073820	AssignmentExpression	"arg0 = ( st64 ) r_anal_value_to_ut64 ( anal , cond -> arg [ 0 ] )"		1073813	2		=			
ANR	1073821	Identifier	arg0		1073813	0					
ANR	1073822	CastExpression	"( st64 ) r_anal_value_to_ut64 ( anal , cond -> arg [ 0 ] )"		1073813	1					
ANR	1073823	CastTarget	st64		1073813	0					
ANR	1073824	CallExpression	"r_anal_value_to_ut64 ( anal , cond -> arg [ 0 ] )"		1073813	1					
ANR	1073825	Callee	r_anal_value_to_ut64		1073813	0					
ANR	1073826	Identifier	r_anal_value_to_ut64		1073813	0					
ANR	1073827	ArgumentList	anal		1073813	1					
ANR	1073828	Argument	anal		1073813	0					
ANR	1073829	Identifier	anal		1073813	0					
ANR	1073830	Argument	cond -> arg [ 0 ]		1073813	1					
ANR	1073831	ArrayIndexing	cond -> arg [ 0 ]		1073813	0					
ANR	1073832	PtrMemberAccess	cond -> arg		1073813	0					
ANR	1073833	Identifier	cond		1073813	0					
ANR	1073834	Identifier	arg		1073813	1					
ANR	1073835	PrimaryExpression	0		1073813	1					
ANR	1073836	IfStatement	if ( cond -> arg [ 1 ] )		1073813	1					
ANR	1073837	Condition	cond -> arg [ 1 ]	74:5:1726:1737	1073813	0	True				
ANR	1073838	ArrayIndexing	cond -> arg [ 1 ]		1073813	0					
ANR	1073839	PtrMemberAccess	cond -> arg		1073813	0					
ANR	1073840	Identifier	cond		1073813	0					
ANR	1073841	Identifier	arg		1073813	1					
ANR	1073842	PrimaryExpression	1		1073813	1					
ANR	1073843	CompoundStatement		5:2:113:173	1073813	1					
ANR	1073844	IdentifierDeclStatement	"st64 arg1 = ( st64 ) r_anal_value_to_ut64 ( anal , cond -> arg [ 1 ] ) ;"	75:2:1744:1804	1073813	0	True				
ANR	1073845	IdentifierDecl	"arg1 = ( st64 ) r_anal_value_to_ut64 ( anal , cond -> arg [ 1 ] )"		1073813	0					
ANR	1073846	IdentifierDeclType	st64		1073813	0					
ANR	1073847	Identifier	arg1		1073813	1					
ANR	1073848	AssignmentExpression	"arg1 = ( st64 ) r_anal_value_to_ut64 ( anal , cond -> arg [ 1 ] )"		1073813	2		=			
ANR	1073849	Identifier	arg1		1073813	0					
ANR	1073850	CastExpression	"( st64 ) r_anal_value_to_ut64 ( anal , cond -> arg [ 1 ] )"		1073813	1					
ANR	1073851	CastTarget	st64		1073813	0					
ANR	1073852	CallExpression	"r_anal_value_to_ut64 ( anal , cond -> arg [ 1 ] )"		1073813	1					
ANR	1073853	Callee	r_anal_value_to_ut64		1073813	0					
ANR	1073854	Identifier	r_anal_value_to_ut64		1073813	0					
ANR	1073855	ArgumentList	anal		1073813	1					
ANR	1073856	Argument	anal		1073813	0					
ANR	1073857	Identifier	anal		1073813	0					
ANR	1073858	Argument	cond -> arg [ 1 ]		1073813	1					
ANR	1073859	ArrayIndexing	cond -> arg [ 1 ]		1073813	0					
ANR	1073860	PtrMemberAccess	cond -> arg		1073813	0					
ANR	1073861	Identifier	cond		1073813	0					
ANR	1073862	Identifier	arg		1073813	1					
ANR	1073863	PrimaryExpression	1		1073813	1					
ANR	1073864	SwitchStatement	switch ( cond -> type )		1073813	1					
ANR	1073865	Condition	cond -> type	76:10:1816:1825	1073813	0	True				
ANR	1073866	PtrMemberAccess	cond -> type		1073813	0					
ANR	1073867	Identifier	cond		1073813	0					
ANR	1073868	Identifier	type		1073813	1					
ANR	1073869	CompoundStatement		6:22:197:197	1073813	1					
ANR	1073870	Label	case R_ANAL_COND_EQ :	77:2:1832:1851	1073813	0	True				
ANR	1073871	Identifier	R_ANAL_COND_EQ		1073813	0					
ANR	1073872	ReturnStatement	return arg0 == arg1 ;	77:23:1853:1872	1073813	1	True				
ANR	1073873	EqualityExpression	arg0 == arg1		1073813	0		==			
ANR	1073874	Identifier	arg0		1073813	0					
ANR	1073875	Identifier	arg1		1073813	1					
ANR	1073876	Label	case R_ANAL_COND_NE :	78:2:1876:1895	1073813	2	True				
ANR	1073877	Identifier	R_ANAL_COND_NE		1073813	0					
ANR	1073878	ReturnStatement	return arg0 != arg1 ;	78:23:1897:1916	1073813	3	True				
ANR	1073879	EqualityExpression	arg0 != arg1		1073813	0		!=			
ANR	1073880	Identifier	arg0		1073813	0					
ANR	1073881	Identifier	arg1		1073813	1					
ANR	1073882	Label	case R_ANAL_COND_GE :	79:2:1920:1939	1073813	4	True				
ANR	1073883	Identifier	R_ANAL_COND_GE		1073813	0					
ANR	1073884	ReturnStatement	return arg0 >= arg1 ;	79:23:1941:1960	1073813	5	True				
ANR	1073885	RelationalExpression	arg0 >= arg1		1073813	0		>=			
ANR	1073886	Identifier	arg0		1073813	0					
ANR	1073887	Identifier	arg1		1073813	1					
ANR	1073888	Label	case R_ANAL_COND_GT :	80:2:1964:1983	1073813	6	True				
ANR	1073889	Identifier	R_ANAL_COND_GT		1073813	0					
ANR	1073890	ReturnStatement	return arg0 > arg1 ;	80:23:1985:2003	1073813	7	True				
ANR	1073891	RelationalExpression	arg0 > arg1		1073813	0		>			
ANR	1073892	Identifier	arg0		1073813	0					
ANR	1073893	Identifier	arg1		1073813	1					
ANR	1073894	Label	case R_ANAL_COND_LE :	81:2:2007:2026	1073813	8	True				
ANR	1073895	Identifier	R_ANAL_COND_LE		1073813	0					
ANR	1073896	ReturnStatement	return arg0 <= arg1 ;	81:23:2028:2047	1073813	9	True				
ANR	1073897	RelationalExpression	arg0 <= arg1		1073813	0		<=			
ANR	1073898	Identifier	arg0		1073813	0					
ANR	1073899	Identifier	arg1		1073813	1					
ANR	1073900	Label	case R_ANAL_COND_LT :	82:2:2051:2070	1073813	10	True				
ANR	1073901	Identifier	R_ANAL_COND_LT		1073813	0					
ANR	1073902	ReturnStatement	return arg0 < arg1 ;	82:23:2072:2090	1073813	11	True				
ANR	1073903	RelationalExpression	arg0 < arg1		1073813	0		<			
ANR	1073904	Identifier	arg0		1073813	0					
ANR	1073905	Identifier	arg1		1073813	1					
ANR	1073906	ElseStatement	else		1073813	0					
ANR	1073907	CompoundStatement		14:8:473:473	1073813	0					
ANR	1073908	SwitchStatement	switch ( cond -> type )		1073813	0					
ANR	1073909	Condition	cond -> type	85:10:2116:2125	1073813	0	True				
ANR	1073910	PtrMemberAccess	cond -> type		1073813	0					
ANR	1073911	Identifier	cond		1073813	0					
ANR	1073912	Identifier	type		1073813	1					
ANR	1073913	CompoundStatement		15:22:497:497	1073813	1					
ANR	1073914	Label	case R_ANAL_COND_EQ :	86:2:2132:2151	1073813	0	True				
ANR	1073915	Identifier	R_ANAL_COND_EQ		1073813	0					
ANR	1073916	ReturnStatement	return ! arg0 ;	86:23:2153:2165	1073813	1	True				
ANR	1073917	UnaryOperationExpression	! arg0		1073813	0					
ANR	1073918	UnaryOperator	!		1073813	0					
ANR	1073919	Identifier	arg0		1073813	1					
ANR	1073920	Label	case R_ANAL_COND_NE :	87:2:2169:2188	1073813	2	True				
ANR	1073921	Identifier	R_ANAL_COND_NE		1073813	0					
ANR	1073922	ReturnStatement	return arg0 ;	87:23:2190:2201	1073813	3	True				
ANR	1073923	Identifier	arg0		1073813	0					
ANR	1073924	Label	case R_ANAL_COND_GT :	88:2:2205:2224	1073813	4	True				
ANR	1073925	Identifier	R_ANAL_COND_GT		1073813	0					
ANR	1073926	ReturnStatement	return arg0 > 0 ;	88:23:2226:2239	1073813	5	True				
ANR	1073927	RelationalExpression	arg0 > 0		1073813	0		>			
ANR	1073928	Identifier	arg0		1073813	0					
ANR	1073929	PrimaryExpression	0		1073813	1					
ANR	1073930	Label	case R_ANAL_COND_GE :	89:2:2243:2262	1073813	6	True				
ANR	1073931	Identifier	R_ANAL_COND_GE		1073813	0					
ANR	1073932	ReturnStatement	return arg0 >= 0 ;	89:23:2264:2278	1073813	7	True				
ANR	1073933	RelationalExpression	arg0 >= 0		1073813	0		>=			
ANR	1073934	Identifier	arg0		1073813	0					
ANR	1073935	PrimaryExpression	0		1073813	1					
ANR	1073936	Label	case R_ANAL_COND_LT :	90:2:2282:2301	1073813	8	True				
ANR	1073937	Identifier	R_ANAL_COND_LT		1073813	0					
ANR	1073938	ReturnStatement	return arg0 < 0 ;	90:23:2303:2316	1073813	9	True				
ANR	1073939	RelationalExpression	arg0 < 0		1073813	0		<			
ANR	1073940	Identifier	arg0		1073813	0					
ANR	1073941	PrimaryExpression	0		1073813	1					
ANR	1073942	Label	case R_ANAL_COND_LE :	91:2:2320:2339	1073813	10	True				
ANR	1073943	Identifier	R_ANAL_COND_LE		1073813	0					
ANR	1073944	ReturnStatement	return arg0 <= 0 ;	91:23:2341:2355	1073813	11	True				
ANR	1073945	RelationalExpression	arg0 <= 0		1073813	0		<=			
ANR	1073946	Identifier	arg0		1073813	0					
ANR	1073947	PrimaryExpression	0		1073813	1					
ANR	1073948	ReturnStatement	return false ;	94:1:2365:2377	1073813	2	True				
ANR	1073949	Identifier	false		1073813	0					
ANR	1073950	ReturnType	R_API int		1073813	1					
ANR	1073951	Identifier	r_anal_cond_eval		1073813	2					
ANR	1073952	ParameterList	"RAnal * anal , RAnalCond * cond"		1073813	3					
ANR	1073953	Parameter	RAnal * anal	71:27:1600:1610	1073813	0	True				
ANR	1073954	ParameterType	RAnal *		1073813	0					
ANR	1073955	Identifier	anal		1073813	1					
ANR	1073956	Parameter	RAnalCond * cond	71:40:1613:1627	1073813	1	True				
ANR	1073957	ParameterType	RAnalCond *		1073813	0					
ANR	1073958	Identifier	cond		1073813	1					
ANR	1073959	CFGEntryNode	ENTRY		1073813		True				
ANR	1073960	CFGExitNode	EXIT		1073813		True				
ANR	1073961	Symbol	cond -> type		1073813						
ANR	1073962	Symbol	cond -> arg		1073813						
ANR	1073963	Symbol	anal		1073813						
ANR	1073964	Symbol	* cond		1073813						
ANR	1073965	Symbol	arg1		1073813						
ANR	1073966	Symbol	arg0		1073813						
ANR	1073967	Symbol	false		1073813						
ANR	1073968	Symbol	* cond -> arg		1073813						
ANR	1073969	Symbol	* * cond		1073813						
ANR	1073970	Symbol	r_anal_value_to_ut64		1073813						
ANR	1073971	Symbol	cond		1073813						
ANR	1073972	Function	r_anal_cond_to_string	98:0:2421:3103							
ANR	1073973	FunctionDef	r_anal_cond_to_string (RAnalCond * cond)		1073972	0					
ANR	1073974	CompoundStatement		98:51:2472:3103	1073972	0					
ANR	1073975	IdentifierDeclStatement	"char * val0 , * val1 , * out = NULL ;"	99:1:2475:2505	1073972	0	True				
ANR	1073976	IdentifierDecl	* val0		1073972	0					
ANR	1073977	IdentifierDeclType	char *		1073972	0					
ANR	1073978	Identifier	val0		1073972	1					
ANR	1073979	IdentifierDecl	* val1		1073972	1					
ANR	1073980	IdentifierDeclType	char *		1073972	0					
ANR	1073981	Identifier	val1		1073972	1					
ANR	1073982	IdentifierDecl	* out = NULL		1073972	2					
ANR	1073983	IdentifierDeclType	char *		1073972	0					
ANR	1073984	Identifier	out		1073972	1					
ANR	1073985	AssignmentExpression	* out = NULL		1073972	2		=			
ANR	1073986	Identifier	NULL		1073972	0					
ANR	1073987	Identifier	NULL		1073972	1					
ANR	1073988	IdentifierDeclStatement	const char * cnd ;	100:1:2508:2523	1073972	1	True				
ANR	1073989	IdentifierDecl	* cnd		1073972	0					
ANR	1073990	IdentifierDeclType	const char *		1073972	0					
ANR	1073991	Identifier	cnd		1073972	1					
ANR	1073992	IfStatement	if ( ! cond )		1073972	2					
ANR	1073993	Condition	! cond	101:5:2530:2534	1073972	0	True				
ANR	1073994	UnaryOperationExpression	! cond		1073972	0					
ANR	1073995	UnaryOperator	!		1073972	0					
ANR	1073996	Identifier	cond		1073972	1					
ANR	1073997	CompoundStatement		4:12:64:64	1073972	1					
ANR	1073998	ReturnStatement	return NULL ;	102:2:2541:2552	1073972	0	True				
ANR	1073999	Identifier	NULL		1073972	0					
ANR	1074000	ExpressionStatement	cnd = condstring ( cond )	104:1:2558:2581	1073972	3	True				
ANR	1074001	AssignmentExpression	cnd = condstring ( cond )		1073972	0		=			
ANR	1074002	Identifier	cnd		1073972	0					
ANR	1074003	CallExpression	condstring ( cond )		1073972	1					
ANR	1074004	Callee	condstring		1073972	0					
ANR	1074005	Identifier	condstring		1073972	0					
ANR	1074006	ArgumentList	cond		1073972	1					
ANR	1074007	Argument	cond		1073972	0					
ANR	1074008	Identifier	cond		1073972	0					
ANR	1074009	ExpressionStatement	val0 = r_anal_value_to_string ( cond -> arg [ 0 ] )	105:1:2584:2628	1073972	4	True				
ANR	1074010	AssignmentExpression	val0 = r_anal_value_to_string ( cond -> arg [ 0 ] )		1073972	0		=			
ANR	1074011	Identifier	val0		1073972	0					
ANR	1074012	CallExpression	r_anal_value_to_string ( cond -> arg [ 0 ] )		1073972	1					
ANR	1074013	Callee	r_anal_value_to_string		1073972	0					
ANR	1074014	Identifier	r_anal_value_to_string		1073972	0					
ANR	1074015	ArgumentList	cond -> arg [ 0 ]		1073972	1					
ANR	1074016	Argument	cond -> arg [ 0 ]		1073972	0					
ANR	1074017	ArrayIndexing	cond -> arg [ 0 ]		1073972	0					
ANR	1074018	PtrMemberAccess	cond -> arg		1073972	0					
ANR	1074019	Identifier	cond		1073972	0					
ANR	1074020	Identifier	arg		1073972	1					
ANR	1074021	PrimaryExpression	0		1073972	1					
ANR	1074022	ExpressionStatement	val1 = r_anal_value_to_string ( cond -> arg [ 1 ] )	106:1:2631:2675	1073972	5	True				
ANR	1074023	AssignmentExpression	val1 = r_anal_value_to_string ( cond -> arg [ 1 ] )		1073972	0		=			
ANR	1074024	Identifier	val1		1073972	0					
ANR	1074025	CallExpression	r_anal_value_to_string ( cond -> arg [ 1 ] )		1073972	1					
ANR	1074026	Callee	r_anal_value_to_string		1073972	0					
ANR	1074027	Identifier	r_anal_value_to_string		1073972	0					
ANR	1074028	ArgumentList	cond -> arg [ 1 ]		1073972	1					
ANR	1074029	Argument	cond -> arg [ 1 ]		1073972	0					
ANR	1074030	ArrayIndexing	cond -> arg [ 1 ]		1073972	0					
ANR	1074031	PtrMemberAccess	cond -> arg		1073972	0					
ANR	1074032	Identifier	cond		1073972	0					
ANR	1074033	Identifier	arg		1073972	1					
ANR	1074034	PrimaryExpression	1		1073972	1					
ANR	1074035	IfStatement	if ( val0 )		1073972	6					
ANR	1074036	Condition	val0	107:5:2682:2685	1073972	0	True				
ANR	1074037	Identifier	val0		1073972	0					
ANR	1074038	CompoundStatement		10:11:215:215	1073972	1					
ANR	1074039	IfStatement	if ( R_ANAL_COND_SINGLE ( cond ) )		1073972	0					
ANR	1074040	Condition	R_ANAL_COND_SINGLE ( cond )	108:6:2696:2720	1073972	0	True				
ANR	1074041	CallExpression	R_ANAL_COND_SINGLE ( cond )		1073972	0					
ANR	1074042	Callee	R_ANAL_COND_SINGLE		1073972	0					
ANR	1074043	Identifier	R_ANAL_COND_SINGLE		1073972	0					
ANR	1074044	ArgumentList	cond		1073972	1					
ANR	1074045	Argument	cond		1073972	0					
ANR	1074046	Identifier	cond		1073972	0					
ANR	1074047	CompoundStatement		12:3:255:287	1073972	1					
ANR	1074048	IdentifierDeclStatement	int val0len = strlen ( val0 ) + 10 ;	109:3:2728:2760	1073972	0	True				
ANR	1074049	IdentifierDecl	val0len = strlen ( val0 ) + 10		1073972	0					
ANR	1074050	IdentifierDeclType	int		1073972	0					
ANR	1074051	Identifier	val0len		1073972	1					
ANR	1074052	AssignmentExpression	val0len = strlen ( val0 ) + 10		1073972	2		=			
ANR	1074053	Identifier	val0len		1073972	0					
ANR	1074054	AdditiveExpression	strlen ( val0 ) + 10		1073972	1		+			
ANR	1074055	CallExpression	strlen ( val0 )		1073972	0					
ANR	1074056	Callee	strlen		1073972	0					
ANR	1074057	Identifier	strlen		1073972	0					
ANR	1074058	ArgumentList	val0		1073972	1					
ANR	1074059	Argument	val0		1073972	0					
ANR	1074060	Identifier	val0		1073972	0					
ANR	1074061	PrimaryExpression	10		1073972	1					
ANR	1074062	IfStatement	if ( ( out = malloc ( val0len ) ) )		1073972	1					
ANR	1074063	Condition	out = malloc ( val0len )	110:7:2769:2792	1073972	0	True				
ANR	1074064	AssignmentExpression	out = malloc ( val0len )		1073972	0		=			
ANR	1074065	Identifier	out		1073972	0					
ANR	1074066	CallExpression	malloc ( val0len )		1073972	1					
ANR	1074067	Callee	malloc		1073972	0					
ANR	1074068	Identifier	malloc		1073972	0					
ANR	1074069	ArgumentList	val0len		1073972	1					
ANR	1074070	Argument	val0len		1073972	0					
ANR	1074071	Identifier	val0len		1073972	0					
ANR	1074072	CompoundStatement		13:33:322:322	1073972	1					
ANR	1074073	ExpressionStatement	"snprintf ( out , val0len , ""%s%s"" , cnd , val0 )"	111:4:2801:2843	1073972	0	True				
ANR	1074074	CallExpression	"snprintf ( out , val0len , ""%s%s"" , cnd , val0 )"		1073972	0					
ANR	1074075	Callee	snprintf		1073972	0					
ANR	1074076	Identifier	snprintf		1073972	0					
ANR	1074077	ArgumentList	out		1073972	1					
ANR	1074078	Argument	out		1073972	0					
ANR	1074079	Identifier	out		1073972	0					
ANR	1074080	Argument	val0len		1073972	1					
ANR	1074081	Identifier	val0len		1073972	0					
ANR	1074082	Argument	"""%s%s"""		1073972	2					
ANR	1074083	PrimaryExpression	"""%s%s"""		1073972	0					
ANR	1074084	Argument	cnd		1073972	3					
ANR	1074085	Identifier	cnd		1073972	0					
ANR	1074086	Argument	val0		1073972	4					
ANR	1074087	Identifier	val0		1073972	0					
ANR	1074088	ElseStatement	else		1073972	0					
ANR	1074089	CompoundStatement		16:9:386:386	1073972	0					
ANR	1074090	IfStatement	if ( val1 )		1073972	0					
ANR	1074091	Condition	val1	114:7:2868:2871	1073972	0	True				
ANR	1074092	Identifier	val1		1073972	0					
ANR	1074093	CompoundStatement		18:4:407:455	1073972	1					
ANR	1074094	IdentifierDeclStatement	int val0len = strlen ( val0 ) + strlen ( val1 ) + 10 ;	115:4:2880:2928	1073972	0	True				
ANR	1074095	IdentifierDecl	val0len = strlen ( val0 ) + strlen ( val1 ) + 10		1073972	0					
ANR	1074096	IdentifierDeclType	int		1073972	0					
ANR	1074097	Identifier	val0len		1073972	1					
ANR	1074098	AssignmentExpression	val0len = strlen ( val0 ) + strlen ( val1 ) + 10		1073972	2		=			
ANR	1074099	Identifier	val0len		1073972	0					
ANR	1074100	AdditiveExpression	strlen ( val0 ) + strlen ( val1 ) + 10		1073972	1		+			
ANR	1074101	CallExpression	strlen ( val0 )		1073972	0					
ANR	1074102	Callee	strlen		1073972	0					
ANR	1074103	Identifier	strlen		1073972	0					
ANR	1074104	ArgumentList	val0		1073972	1					
ANR	1074105	Argument	val0		1073972	0					
ANR	1074106	Identifier	val0		1073972	0					
ANR	1074107	AdditiveExpression	strlen ( val1 ) + 10		1073972	1		+			
ANR	1074108	CallExpression	strlen ( val1 )		1073972	0					
ANR	1074109	Callee	strlen		1073972	0					
ANR	1074110	Identifier	strlen		1073972	0					
ANR	1074111	ArgumentList	val1		1073972	1					
ANR	1074112	Argument	val1		1073972	0					
ANR	1074113	Identifier	val1		1073972	0					
ANR	1074114	PrimaryExpression	10		1073972	1					
ANR	1074115	IfStatement	if ( ( out = malloc ( val0len ) ) )		1073972	1					
ANR	1074116	Condition	out = malloc ( val0len )	116:8:2938:2961	1073972	0	True				
ANR	1074117	AssignmentExpression	out = malloc ( val0len )		1073972	0		=			
ANR	1074118	Identifier	out		1073972	0					
ANR	1074119	CallExpression	malloc ( val0len )		1073972	1					
ANR	1074120	Callee	malloc		1073972	0					
ANR	1074121	Identifier	malloc		1073972	0					
ANR	1074122	ArgumentList	val0len		1073972	1					
ANR	1074123	Argument	val0len		1073972	0					
ANR	1074124	Identifier	val0len		1073972	0					
ANR	1074125	CompoundStatement		19:34:491:491	1073972	1					
ANR	1074126	ExpressionStatement	"snprintf ( out , val0len , ""%s %s %s"" , val0 , cnd , val1 )"	117:5:2971:3023	1073972	0	True				
ANR	1074127	CallExpression	"snprintf ( out , val0len , ""%s %s %s"" , val0 , cnd , val1 )"		1073972	0					
ANR	1074128	Callee	snprintf		1073972	0					
ANR	1074129	Identifier	snprintf		1073972	0					
ANR	1074130	ArgumentList	out		1073972	1					
ANR	1074131	Argument	out		1073972	0					
ANR	1074132	Identifier	out		1073972	0					
ANR	1074133	Argument	val0len		1073972	1					
ANR	1074134	Identifier	val0len		1073972	0					
ANR	1074135	Argument	"""%s %s %s"""		1073972	2					
ANR	1074136	PrimaryExpression	"""%s %s %s"""		1073972	0					
ANR	1074137	Argument	val0		1073972	3					
ANR	1074138	Identifier	val0		1073972	0					
ANR	1074139	Argument	cnd		1073972	4					
ANR	1074140	Identifier	cnd		1073972	0					
ANR	1074141	Argument	val1		1073972	5					
ANR	1074142	Identifier	val1		1073972	0					
ANR	1074143	ExpressionStatement	free ( val0 )	122:1:3044:3055	1073972	7	True				
ANR	1074144	CallExpression	free ( val0 )		1073972	0					
ANR	1074145	Callee	free		1073972	0					
ANR	1074146	Identifier	free		1073972	0					
ANR	1074147	ArgumentList	val0		1073972	1					
ANR	1074148	Argument	val0		1073972	0					
ANR	1074149	Identifier	val0		1073972	0					
ANR	1074150	ExpressionStatement	free ( val1 )	123:1:3058:3069	1073972	8	True				
ANR	1074151	CallExpression	free ( val1 )		1073972	0					
ANR	1074152	Callee	free		1073972	0					
ANR	1074153	Identifier	free		1073972	0					
ANR	1074154	ArgumentList	val1		1073972	1					
ANR	1074155	Argument	val1		1073972	0					
ANR	1074156	Identifier	val1		1073972	0					
ANR	1074157	ReturnStatement	"return out ? out : strdup ( ""?"" ) ;"	124:1:3072:3101	1073972	9	True				
ANR	1074158	ConditionalExpression	"out ? out : strdup ( ""?"" )"		1073972	0					
ANR	1074159	Condition	out		1073972	0					
ANR	1074160	Identifier	out		1073972	0					
ANR	1074161	Identifier	out		1073972	1					
ANR	1074162	CallExpression	"strdup ( ""?"" )"		1073972	2					
ANR	1074163	Callee	strdup		1073972	0					
ANR	1074164	Identifier	strdup		1073972	0					
ANR	1074165	ArgumentList	"""?"""		1073972	1					
ANR	1074166	Argument	"""?"""		1073972	0					
ANR	1074167	PrimaryExpression	"""?"""		1073972	0					
ANR	1074168	ReturnType	R_API char *		1073972	1					
ANR	1074169	Identifier	r_anal_cond_to_string		1073972	2					
ANR	1074170	ParameterList	RAnalCond * cond		1073972	3					
ANR	1074171	Parameter	RAnalCond * cond	98:34:2455:2469	1073972	0	True				
ANR	1074172	ParameterType	RAnalCond *		1073972	0					
ANR	1074173	Identifier	cond		1073972	1					
ANR	1074174	CFGEntryNode	ENTRY		1073972		True				
ANR	1074175	CFGExitNode	EXIT		1073972		True				
ANR	1074176	Symbol	malloc		1073972						
ANR	1074177	Symbol	NULL		1073972						
ANR	1074178	Symbol	* cond		1073972						
ANR	1074179	Symbol	val1		1073972						
ANR	1074180	Symbol	val0len		1073972						
ANR	1074181	Symbol	* cond -> arg		1073972						
ANR	1074182	Symbol	condstring		1073972						
ANR	1074183	Symbol	cond		1073972						
ANR	1074184	Symbol	out		1073972						
ANR	1074185	Symbol	strlen		1073972						
ANR	1074186	Symbol	cond -> arg		1073972						
ANR	1074187	Symbol	val0		1073972						
ANR	1074188	Symbol	cnd		1073972						
ANR	1074189	Symbol	R_ANAL_COND_SINGLE		1073972						
ANR	1074190	Symbol	* * cond		1073972						
ANR	1074191	Symbol	strdup		1073972						
ANR	1074192	Symbol	r_anal_value_to_string		1073972						
ANR	1074193	Function	r_anal_cond_new_from_op	127:0:3106:3445							
ANR	1074194	FunctionDef	r_anal_cond_new_from_op (RAnalOp * op)		1074193	0					
ANR	1074195	CompoundStatement		127:54:3160:3445	1074193	0					
ANR	1074196	IdentifierDeclStatement	RAnalCond * cond ;	128:1:3163:3178	1074193	0	True				
ANR	1074197	IdentifierDecl	* cond		1074193	0					
ANR	1074198	IdentifierDeclType	RAnalCond *		1074193	0					
ANR	1074199	Identifier	cond		1074193	1					
ANR	1074200	IfStatement	if ( ! ( cond = r_anal_cond_new ( ) ) )		1074193	1					
ANR	1074201	Condition	! ( cond = r_anal_cond_new ( ) )	129:5:3185:3212	1074193	0	True				
ANR	1074202	UnaryOperationExpression	! ( cond = r_anal_cond_new ( ) )		1074193	0					
ANR	1074203	UnaryOperator	!		1074193	0					
ANR	1074204	AssignmentExpression	cond = r_anal_cond_new ( )		1074193	1		=			
ANR	1074205	Identifier	cond		1074193	0					
ANR	1074206	CallExpression	r_anal_cond_new ( )		1074193	1					
ANR	1074207	Callee	r_anal_cond_new		1074193	0					
ANR	1074208	Identifier	r_anal_cond_new		1074193	0					
ANR	1074209	ArgumentList			1074193	1					
ANR	1074210	CompoundStatement		3:35:54:54	1074193	1					
ANR	1074211	ReturnStatement	return NULL ;	130:2:3219:3230	1074193	0	True				
ANR	1074212	Identifier	NULL		1074193	0					
ANR	1074213	ExpressionStatement	cond -> arg [ 0 ] = op -> src [ 0 ]	134:1:3290:3315	1074193	2	True				
ANR	1074214	AssignmentExpression	cond -> arg [ 0 ] = op -> src [ 0 ]		1074193	0		=			
ANR	1074215	ArrayIndexing	cond -> arg [ 0 ]		1074193	0					
ANR	1074216	PtrMemberAccess	cond -> arg		1074193	0					
ANR	1074217	Identifier	cond		1074193	0					
ANR	1074218	Identifier	arg		1074193	1					
ANR	1074219	PrimaryExpression	0		1074193	1					
ANR	1074220	ArrayIndexing	op -> src [ 0 ]		1074193	1					
ANR	1074221	PtrMemberAccess	op -> src		1074193	0					
ANR	1074222	Identifier	op		1074193	0					
ANR	1074223	Identifier	src		1074193	1					
ANR	1074224	PrimaryExpression	0		1074193	1					
ANR	1074225	ExpressionStatement	op -> src [ 0 ] = NULL	135:1:3318:3335	1074193	3	True				
ANR	1074226	AssignmentExpression	op -> src [ 0 ] = NULL		1074193	0		=			
ANR	1074227	ArrayIndexing	op -> src [ 0 ]		1074193	0					
ANR	1074228	PtrMemberAccess	op -> src		1074193	0					
ANR	1074229	Identifier	op		1074193	0					
ANR	1074230	Identifier	src		1074193	1					
ANR	1074231	PrimaryExpression	0		1074193	1					
ANR	1074232	Identifier	NULL		1074193	1					
ANR	1074233	ExpressionStatement	cond -> arg [ 1 ] = op -> src [ 1 ]	136:1:3338:3363	1074193	4	True				
ANR	1074234	AssignmentExpression	cond -> arg [ 1 ] = op -> src [ 1 ]		1074193	0		=			
ANR	1074235	ArrayIndexing	cond -> arg [ 1 ]		1074193	0					
ANR	1074236	PtrMemberAccess	cond -> arg		1074193	0					
ANR	1074237	Identifier	cond		1074193	0					
ANR	1074238	Identifier	arg		1074193	1					
ANR	1074239	PrimaryExpression	1		1074193	1					
ANR	1074240	ArrayIndexing	op -> src [ 1 ]		1074193	1					
ANR	1074241	PtrMemberAccess	op -> src		1074193	0					
ANR	1074242	Identifier	op		1074193	0					
ANR	1074243	Identifier	src		1074193	1					
ANR	1074244	PrimaryExpression	1		1074193	1					
ANR	1074245	ExpressionStatement	op -> src [ 1 ] = NULL	137:1:3366:3383	1074193	5	True				
ANR	1074246	AssignmentExpression	op -> src [ 1 ] = NULL		1074193	0		=			
ANR	1074247	ArrayIndexing	op -> src [ 1 ]		1074193	0					
ANR	1074248	PtrMemberAccess	op -> src		1074193	0					
ANR	1074249	Identifier	op		1074193	0					
ANR	1074250	Identifier	src		1074193	1					
ANR	1074251	PrimaryExpression	1		1074193	1					
ANR	1074252	Identifier	NULL		1074193	1					
ANR	1074253	ReturnStatement	return cond ;	140:1:3432:3443	1074193	6	True				
ANR	1074254	Identifier	cond		1074193	0					
ANR	1074255	ReturnType	R_API RAnalCond *		1074193	1					
ANR	1074256	Identifier	r_anal_cond_new_from_op		1074193	2					
ANR	1074257	ParameterList	RAnalOp * op		1074193	3					
ANR	1074258	Parameter	RAnalOp * op	127:41:3147:3157	1074193	0	True				
ANR	1074259	ParameterType	RAnalOp *		1074193	0					
ANR	1074260	Identifier	op		1074193	1					
ANR	1074261	CFGEntryNode	ENTRY		1074193		True				
ANR	1074262	CFGExitNode	EXIT		1074193		True				
ANR	1074263	Symbol	* op -> src		1074193						
ANR	1074264	Symbol	op		1074193						
ANR	1074265	Symbol	NULL		1074193						
ANR	1074266	Symbol	cond -> arg		1074193						
ANR	1074267	Symbol	* op		1074193						
ANR	1074268	Symbol	* cond		1074193						
ANR	1074269	Symbol	* cond -> arg		1074193						
ANR	1074270	Symbol	* * cond		1074193						
ANR	1074271	Symbol	cond		1074193						
ANR	1074272	Symbol	r_anal_cond_new		1074193						
ANR	1074273	Symbol	op -> src		1074193						
ANR	1074274	Symbol	* * op		1074193						
ANR	1074275	Function	r_anal_cond_new_from_string	143:0:3448:3598							
ANR	1074276	FunctionDef	r_anal_cond_new_from_string (const char * str)		1074275	0					
ANR	1074277	CompoundStatement		143:62:3510:3598	1074275	0					
ANR	1074278	IdentifierDeclStatement	RAnalCond * cond = R_NEW ( RAnalCond ) ;	144:1:3513:3548	1074275	0	True				
ANR	1074279	IdentifierDecl	* cond = R_NEW ( RAnalCond )		1074275	0					
ANR	1074280	IdentifierDeclType	RAnalCond *		1074275	0					
ANR	1074281	Identifier	cond		1074275	1					
ANR	1074282	AssignmentExpression	* cond = R_NEW ( RAnalCond )		1074275	2		=			
ANR	1074283	Identifier	cond		1074275	0					
ANR	1074284	CallExpression	R_NEW ( RAnalCond )		1074275	1					
ANR	1074285	Callee	R_NEW		1074275	0					
ANR	1074286	Identifier	R_NEW		1074275	0					
ANR	1074287	ArgumentList	RAnalCond		1074275	1					
ANR	1074288	Argument	RAnalCond		1074275	0					
ANR	1074289	Identifier	RAnalCond		1074275	0					
ANR	1074290	ReturnStatement	return cond ;	146:1:3585:3596	1074275	1	True				
ANR	1074291	Identifier	cond		1074275	0					
ANR	1074292	ReturnType	R_API RAnalCond *		1074275	1					
ANR	1074293	Identifier	r_anal_cond_new_from_string		1074275	2					
ANR	1074294	ParameterList	const char * str		1074275	3					
ANR	1074295	Parameter	const char * str	143:45:3493:3507	1074275	0	True				
ANR	1074296	ParameterType	const char *		1074275	0					
ANR	1074297	Identifier	str		1074275	1					
ANR	1074298	CFGEntryNode	ENTRY		1074275		True				
ANR	1074299	CFGExitNode	EXIT		1074275		True				
ANR	1074300	Symbol	str		1074275						
ANR	1074301	Symbol	RAnalCond		1074275						
ANR	1074302	Symbol	cond		1074275						
ANR	1074303	Symbol	R_NEW		1074275						
