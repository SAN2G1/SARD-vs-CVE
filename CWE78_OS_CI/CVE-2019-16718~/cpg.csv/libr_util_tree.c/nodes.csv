command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5258698	File	data/converged/CVE-2019-16718~_radare2/libr_util_tree.c								
ANR	5258699	Function	tree_dfs_node	5:0:75:616							
ANR	5258700	FunctionDef	"tree_dfs_node (RTreeNode * r , RTreeVisitor * vis)"		5258699	0					
ANR	5258701	CompoundStatement		5:60:135:616	5258699	0					
ANR	5258702	IdentifierDeclStatement	RStack * s ;	6:1:138:147	5258699	0	True				
ANR	5258703	IdentifierDecl	* s		5258699	0					
ANR	5258704	IdentifierDeclType	RStack *		5258699	0					
ANR	5258705	Identifier	s		5258699	1					
ANR	5258706	IdentifierDeclStatement	RListIter * it ;	7:1:150:163	5258699	1	True				
ANR	5258707	IdentifierDecl	* it		5258699	0					
ANR	5258708	IdentifierDeclType	RListIter *		5258699	0					
ANR	5258709	Identifier	it		5258699	1					
ANR	5258710	IdentifierDeclStatement	RTreeNode * n ;	8:1:166:178	5258699	2	True				
ANR	5258711	IdentifierDecl	* n		5258699	0					
ANR	5258712	IdentifierDeclType	RTreeNode *		5258699	0					
ANR	5258713	Identifier	n		5258699	1					
ANR	5258714	ExpressionStatement	s = r_stack_new ( 16 )	10:1:182:202	5258699	3	True				
ANR	5258715	AssignmentExpression	s = r_stack_new ( 16 )		5258699	0		=			
ANR	5258716	Identifier	s		5258699	0					
ANR	5258717	CallExpression	r_stack_new ( 16 )		5258699	1					
ANR	5258718	Callee	r_stack_new		5258699	0					
ANR	5258719	Identifier	r_stack_new		5258699	0					
ANR	5258720	ArgumentList	16		5258699	1					
ANR	5258721	Argument	16		5258699	0					
ANR	5258722	PrimaryExpression	16		5258699	0					
ANR	5258723	IfStatement	if ( ! s )		5258699	4					
ANR	5258724	Condition	! s	11:5:209:210	5258699	0	True				
ANR	5258725	UnaryOperationExpression	! s		5258699	0					
ANR	5258726	UnaryOperator	!		5258699	0					
ANR	5258727	Identifier	s		5258699	1					
ANR	5258728	CompoundStatement		7:9:77:77	5258699	1					
ANR	5258729	ReturnStatement	return ;	12:2:217:223	5258699	0	True				
ANR	5258730	ExpressionStatement	"r_stack_push ( s , r )"	14:1:229:248	5258699	5	True				
ANR	5258731	CallExpression	"r_stack_push ( s , r )"		5258699	0					
ANR	5258732	Callee	r_stack_push		5258699	0					
ANR	5258733	Identifier	r_stack_push		5258699	0					
ANR	5258734	ArgumentList	s		5258699	1					
ANR	5258735	Argument	s		5258699	0					
ANR	5258736	Identifier	s		5258699	0					
ANR	5258737	Argument	r		5258699	1					
ANR	5258738	Identifier	r		5258699	0					
ANR	5258739	WhileStatement	while ( ! r_stack_is_empty ( s ) )		5258699	6					
ANR	5258740	Condition	! r_stack_is_empty ( s )	15:8:258:278	5258699	0	True				
ANR	5258741	UnaryOperationExpression	! r_stack_is_empty ( s )		5258699	0					
ANR	5258742	UnaryOperator	!		5258699	0					
ANR	5258743	CallExpression	r_stack_is_empty ( s )		5258699	1					
ANR	5258744	Callee	r_stack_is_empty		5258699	0					
ANR	5258745	Identifier	r_stack_is_empty		5258699	0					
ANR	5258746	ArgumentList	s		5258699	1					
ANR	5258747	Argument	s		5258699	0					
ANR	5258748	Identifier	s		5258699	0					
ANR	5258749	CompoundStatement		12:2:149:193	5258699	1					
ANR	5258750	IdentifierDeclStatement	RTreeNode * el = ( RTreeNode * ) r_stack_pop ( s ) ;	16:2:285:329	5258699	0	True				
ANR	5258751	IdentifierDecl	* el = ( RTreeNode * ) r_stack_pop ( s )		5258699	0					
ANR	5258752	IdentifierDeclType	RTreeNode *		5258699	0					
ANR	5258753	Identifier	el		5258699	1					
ANR	5258754	AssignmentExpression	* el = ( RTreeNode * ) r_stack_pop ( s )		5258699	2		=			
ANR	5258755	Identifier	el		5258699	0					
ANR	5258756	CastExpression	( RTreeNode * ) r_stack_pop ( s )		5258699	1					
ANR	5258757	CastTarget	RTreeNode *		5258699	0					
ANR	5258758	CallExpression	r_stack_pop ( s )		5258699	1					
ANR	5258759	Callee	r_stack_pop		5258699	0					
ANR	5258760	Identifier	r_stack_pop		5258699	0					
ANR	5258761	ArgumentList	s		5258699	1					
ANR	5258762	Argument	s		5258699	0					
ANR	5258763	Identifier	s		5258699	0					
ANR	5258764	IfStatement	if ( vis -> pre_visit )		5258699	1					
ANR	5258765	Condition	vis -> pre_visit	18:6:338:351	5258699	0	True				
ANR	5258766	PtrMemberAccess	vis -> pre_visit		5258699	0					
ANR	5258767	Identifier	vis		5258699	0					
ANR	5258768	Identifier	pre_visit		5258699	1					
ANR	5258769	CompoundStatement		14:22:218:218	5258699	1					
ANR	5258770	ExpressionStatement	"vis -> pre_visit ( el , vis )"	19:3:359:383	5258699	0	True				
ANR	5258771	CallExpression	"vis -> pre_visit ( el , vis )"		5258699	0					
ANR	5258772	Callee	vis -> pre_visit		5258699	0					
ANR	5258773	PtrMemberAccess	vis -> pre_visit		5258699	0					
ANR	5258774	Identifier	vis		5258699	0					
ANR	5258775	Identifier	pre_visit		5258699	1					
ANR	5258776	ArgumentList	el		5258699	1					
ANR	5258777	Argument	el		5258699	0					
ANR	5258778	Identifier	el		5258699	0					
ANR	5258779	Argument	vis		5258699	1					
ANR	5258780	Identifier	vis		5258699	0					
ANR	5258781	Statement	r_list_foreach_prev	22:2:392:410	5258699	2	True				
ANR	5258782	Statement	(	22:22:412:412	5258699	3	True				
ANR	5258783	Statement	el	22:23:413:414	5258699	4	True				
ANR	5258784	Statement	->	22:25:415:416	5258699	5	True				
ANR	5258785	Statement	children	22:27:417:424	5258699	6	True				
ANR	5258786	Statement	","	22:35:425:425	5258699	7	True				
ANR	5258787	Statement	it	22:37:427:428	5258699	8	True				
ANR	5258788	Statement	","	22:39:429:429	5258699	9	True				
ANR	5258789	Statement	n	22:41:431:431	5258699	10	True				
ANR	5258790	Statement	)	22:42:432:432	5258699	11	True				
ANR	5258791	CompoundStatement		18:44:298:298	5258699	12					
ANR	5258792	IfStatement	if ( vis -> discover_child )		5258699	0					
ANR	5258793	Condition	vis -> discover_child	23:7:443:461	5258699	0	True				
ANR	5258794	PtrMemberAccess	vis -> discover_child		5258699	0					
ANR	5258795	Identifier	vis		5258699	0					
ANR	5258796	Identifier	discover_child		5258699	1					
ANR	5258797	CompoundStatement		19:28:328:328	5258699	1					
ANR	5258798	ExpressionStatement	"vis -> discover_child ( n , vis )"	24:4:470:498	5258699	0	True				
ANR	5258799	CallExpression	"vis -> discover_child ( n , vis )"		5258699	0					
ANR	5258800	Callee	vis -> discover_child		5258699	0					
ANR	5258801	PtrMemberAccess	vis -> discover_child		5258699	0					
ANR	5258802	Identifier	vis		5258699	0					
ANR	5258803	Identifier	discover_child		5258699	1					
ANR	5258804	ArgumentList	n		5258699	1					
ANR	5258805	Argument	n		5258699	0					
ANR	5258806	Identifier	n		5258699	0					
ANR	5258807	Argument	vis		5258699	1					
ANR	5258808	Identifier	vis		5258699	0					
ANR	5258809	ExpressionStatement	"r_stack_push ( s , n )"	26:3:508:527	5258699	1	True				
ANR	5258810	CallExpression	"r_stack_push ( s , n )"		5258699	0					
ANR	5258811	Callee	r_stack_push		5258699	0					
ANR	5258812	Identifier	r_stack_push		5258699	0					
ANR	5258813	ArgumentList	s		5258699	1					
ANR	5258814	Argument	s		5258699	0					
ANR	5258815	Identifier	s		5258699	0					
ANR	5258816	Argument	n		5258699	1					
ANR	5258817	Identifier	n		5258699	0					
ANR	5258818	IfStatement	if ( vis -> post_visit )		5258699	13					
ANR	5258819	Condition	vis -> post_visit	29:6:540:554	5258699	0	True				
ANR	5258820	PtrMemberAccess	vis -> post_visit		5258699	0					
ANR	5258821	Identifier	vis		5258699	0					
ANR	5258822	Identifier	post_visit		5258699	1					
ANR	5258823	CompoundStatement		25:23:421:421	5258699	1					
ANR	5258824	ExpressionStatement	"vis -> post_visit ( el , vis )"	30:3:562:587	5258699	0	True				
ANR	5258825	CallExpression	"vis -> post_visit ( el , vis )"		5258699	0					
ANR	5258826	Callee	vis -> post_visit		5258699	0					
ANR	5258827	PtrMemberAccess	vis -> post_visit		5258699	0					
ANR	5258828	Identifier	vis		5258699	0					
ANR	5258829	Identifier	post_visit		5258699	1					
ANR	5258830	ArgumentList	el		5258699	1					
ANR	5258831	Argument	el		5258699	0					
ANR	5258832	Identifier	el		5258699	0					
ANR	5258833	Argument	vis		5258699	1					
ANR	5258834	Identifier	vis		5258699	0					
ANR	5258835	ExpressionStatement	r_stack_free ( s )	34:1:598:614	5258699	7	True				
ANR	5258836	CallExpression	r_stack_free ( s )		5258699	0					
ANR	5258837	Callee	r_stack_free		5258699	0					
ANR	5258838	Identifier	r_stack_free		5258699	0					
ANR	5258839	ArgumentList	s		5258699	1					
ANR	5258840	Argument	s		5258699	0					
ANR	5258841	Identifier	s		5258699	0					
ANR	5258842	ReturnType	static void		5258699	1					
ANR	5258843	Identifier	tree_dfs_node		5258699	2					
ANR	5258844	ParameterList	"RTreeNode * r , RTreeVisitor * vis"		5258699	3					
ANR	5258845	Parameter	RTreeNode * r	5:27:102:113	5258699	0	True				
ANR	5258846	ParameterType	RTreeNode *		5258699	0					
ANR	5258847	Identifier	r		5258699	1					
ANR	5258848	Parameter	RTreeVisitor * vis	5:41:116:132	5258699	1	True				
ANR	5258849	ParameterType	RTreeVisitor *		5258699	0					
ANR	5258850	Identifier	vis		5258699	1					
ANR	5258851	CFGEntryNode	ENTRY		5258699		True				
ANR	5258852	CFGExitNode	EXIT		5258699		True				
ANR	5258853	Symbol	vis		5258699						
ANR	5258854	Symbol	vis -> pre_visit		5258699						
ANR	5258855	Symbol	r_stack_new		5258699						
ANR	5258856	Symbol	el		5258699						
ANR	5258857	Symbol	* vis		5258699						
ANR	5258858	Symbol	it		5258699						
ANR	5258859	Symbol	n		5258699						
ANR	5258860	Symbol	vis -> discover_child		5258699						
ANR	5258861	Symbol	r		5258699						
ANR	5258862	Symbol	s		5258699						
ANR	5258863	Symbol	r_stack_pop		5258699						
ANR	5258864	Symbol	vis -> post_visit		5258699						
ANR	5258865	Symbol	r_stack_is_empty		5258699						
ANR	5258866	Function	r_tree_node_free	37:0:619:744							
ANR	5258867	FunctionDef	r_tree_node_free (RTreeNode * n)		5258866	0					
ANR	5258868	CompoundStatement		37:44:663:744	5258866	0					
ANR	5258869	ExpressionStatement	r_list_free ( n -> children )	38:1:666:691	5258866	0	True				
ANR	5258870	CallExpression	r_list_free ( n -> children )		5258866	0					
ANR	5258871	Callee	r_list_free		5258866	0					
ANR	5258872	Identifier	r_list_free		5258866	0					
ANR	5258873	ArgumentList	n -> children		5258866	1					
ANR	5258874	Argument	n -> children		5258866	0					
ANR	5258875	PtrMemberAccess	n -> children		5258866	0					
ANR	5258876	Identifier	n		5258866	0					
ANR	5258877	Identifier	children		5258866	1					
ANR	5258878	IfStatement	if ( n -> free )		5258866	1					
ANR	5258879	Condition	n -> free	39:5:698:704	5258866	0	True				
ANR	5258880	PtrMemberAccess	n -> free		5258866	0					
ANR	5258881	Identifier	n		5258866	0					
ANR	5258882	Identifier	free		5258866	1					
ANR	5258883	CompoundStatement		3:14:43:43	5258866	1					
ANR	5258884	ExpressionStatement	n -> free ( n -> data )	40:2:711:728	5258866	0	True				
ANR	5258885	CallExpression	n -> free ( n -> data )		5258866	0					
ANR	5258886	Callee	n -> free		5258866	0					
ANR	5258887	PtrMemberAccess	n -> free		5258866	0					
ANR	5258888	Identifier	n		5258866	0					
ANR	5258889	Identifier	free		5258866	1					
ANR	5258890	ArgumentList	n -> data		5258866	1					
ANR	5258891	Argument	n -> data		5258866	0					
ANR	5258892	PtrMemberAccess	n -> data		5258866	0					
ANR	5258893	Identifier	n		5258866	0					
ANR	5258894	Identifier	data		5258866	1					
ANR	5258895	ExpressionStatement	free ( n )	42:1:734:742	5258866	2	True				
ANR	5258896	CallExpression	free ( n )		5258866	0					
ANR	5258897	Callee	free		5258866	0					
ANR	5258898	Identifier	free		5258866	0					
ANR	5258899	ArgumentList	n		5258866	1					
ANR	5258900	Argument	n		5258866	0					
ANR	5258901	Identifier	n		5258866	0					
ANR	5258902	ReturnType	static void		5258866	1					
ANR	5258903	Identifier	r_tree_node_free		5258866	2					
ANR	5258904	ParameterList	RTreeNode * n		5258866	3					
ANR	5258905	Parameter	RTreeNode * n	37:30:649:660	5258866	0	True				
ANR	5258906	ParameterType	RTreeNode *		5258866	0					
ANR	5258907	Identifier	n		5258866	1					
ANR	5258908	CFGEntryNode	ENTRY		5258866		True				
ANR	5258909	CFGExitNode	EXIT		5258866		True				
ANR	5258910	Symbol	n -> data		5258866						
ANR	5258911	Symbol	* n		5258866						
ANR	5258912	Symbol	n -> children		5258866						
ANR	5258913	Symbol	n -> free		5258866						
ANR	5258914	Symbol	n		5258866						
ANR	5258915	Function	node_free	45:0:747:828							
ANR	5258916	FunctionDef	"node_free (RTreeNode * n , RTreeVisitor * vis)"		5258915	0					
ANR	5258917	CompoundStatement		45:56:803:828	5258915	0					
ANR	5258918	ExpressionStatement	r_tree_node_free ( n )	46:1:806:826	5258915	0	True				
ANR	5258919	CallExpression	r_tree_node_free ( n )		5258915	0					
ANR	5258920	Callee	r_tree_node_free		5258915	0					
ANR	5258921	Identifier	r_tree_node_free		5258915	0					
ANR	5258922	ArgumentList	n		5258915	1					
ANR	5258923	Argument	n		5258915	0					
ANR	5258924	Identifier	n		5258915	0					
ANR	5258925	ReturnType	static void		5258915	1					
ANR	5258926	Identifier	node_free		5258915	2					
ANR	5258927	ParameterList	"RTreeNode * n , RTreeVisitor * vis"		5258915	3					
ANR	5258928	Parameter	RTreeNode * n	45:23:770:781	5258915	0	True				
ANR	5258929	ParameterType	RTreeNode *		5258915	0					
ANR	5258930	Identifier	n		5258915	1					
ANR	5258931	Parameter	RTreeVisitor * vis	45:37:784:800	5258915	1	True				
ANR	5258932	ParameterType	RTreeVisitor *		5258915	0					
ANR	5258933	Identifier	vis		5258915	1					
ANR	5258934	CFGEntryNode	ENTRY		5258915		True				
ANR	5258935	CFGExitNode	EXIT		5258915		True				
ANR	5258936	Symbol	vis		5258915						
ANR	5258937	Symbol	n		5258915						
ANR	5258938	Function	free_all_children	49:0:831:971							
ANR	5258939	FunctionDef	free_all_children (RTree * t)		5258938	0					
ANR	5258940	CompoundStatement		49:41:872:971	5258938	0					
ANR	5258941	IdentifierDeclStatement	RTreeVisitor vis = { 0 } ;	50:1:875:899	5258938	0	True				
ANR	5258942	IdentifierDecl	vis = { 0 }		5258938	0					
ANR	5258943	IdentifierDeclType	RTreeVisitor		5258938	0					
ANR	5258944	Identifier	vis		5258938	1					
ANR	5258945	AssignmentExpression	vis = { 0 }		5258938	2		=			
ANR	5258946	Identifier	vis		5258938	0					
ANR	5258947	InitializerList	0		5258938	1					
ANR	5258948	PrimaryExpression	0		5258938	0					
ANR	5258949	ExpressionStatement	vis . post_visit = ( RTreeNodeVisitCb ) node_free	51:1:902:946	5258938	1	True				
ANR	5258950	AssignmentExpression	vis . post_visit = ( RTreeNodeVisitCb ) node_free		5258938	0		=			
ANR	5258951	MemberAccess	vis . post_visit		5258938	0					
ANR	5258952	Identifier	vis		5258938	0					
ANR	5258953	Identifier	post_visit		5258938	1					
ANR	5258954	CastExpression	( RTreeNodeVisitCb ) node_free		5258938	1					
ANR	5258955	CastTarget	RTreeNodeVisitCb		5258938	0					
ANR	5258956	Identifier	node_free		5258938	1					
ANR	5258957	ExpressionStatement	"r_tree_bfs ( t , & vis )"	52:1:949:969	5258938	2	True				
ANR	5258958	CallExpression	"r_tree_bfs ( t , & vis )"		5258938	0					
ANR	5258959	Callee	r_tree_bfs		5258938	0					
ANR	5258960	Identifier	r_tree_bfs		5258938	0					
ANR	5258961	ArgumentList	t		5258938	1					
ANR	5258962	Argument	t		5258938	0					
ANR	5258963	Identifier	t		5258938	0					
ANR	5258964	Argument	& vis		5258938	1					
ANR	5258965	UnaryOperationExpression	& vis		5258938	0					
ANR	5258966	UnaryOperator	&		5258938	0					
ANR	5258967	Identifier	vis		5258938	1					
ANR	5258968	ReturnType	static void		5258938	1					
ANR	5258969	Identifier	free_all_children		5258938	2					
ANR	5258970	ParameterList	RTree * t		5258938	3					
ANR	5258971	Parameter	RTree * t	49:31:862:869	5258938	0	True				
ANR	5258972	ParameterType	RTree *		5258938	0					
ANR	5258973	Identifier	t		5258938	1					
ANR	5258974	CFGEntryNode	ENTRY		5258938		True				
ANR	5258975	CFGExitNode	EXIT		5258938		True				
ANR	5258976	Symbol	vis		5258938						
ANR	5258977	Symbol	& vis		5258938						
ANR	5258978	Symbol	t		5258938						
ANR	5258979	Symbol	node_free		5258938						
ANR	5258980	Symbol	vis . post_visit		5258938						
ANR	5258981	Function	update_depth	55:0:974:1085							
ANR	5258982	FunctionDef	"update_depth (RTreeNode * n , RTreeVisitor * vis)"		5258981	0					
ANR	5258983	CompoundStatement		55:59:1033:1085	5258981	0					
ANR	5258984	ExpressionStatement	n -> depth = n -> parent ? n -> parent -> depth + 1 : 0	56:1:1036:1083	5258981	0	True				
ANR	5258985	AssignmentExpression	n -> depth = n -> parent ? n -> parent -> depth + 1 : 0		5258981	0		=			
ANR	5258986	PtrMemberAccess	n -> depth		5258981	0					
ANR	5258987	Identifier	n		5258981	0					
ANR	5258988	Identifier	depth		5258981	1					
ANR	5258989	ConditionalExpression	n -> parent ? n -> parent -> depth + 1 : 0		5258981	1					
ANR	5258990	Condition	n -> parent		5258981	0					
ANR	5258991	PtrMemberAccess	n -> parent		5258981	0					
ANR	5258992	Identifier	n		5258981	0					
ANR	5258993	Identifier	parent		5258981	1					
ANR	5258994	AdditiveExpression	n -> parent -> depth + 1		5258981	1		+			
ANR	5258995	PtrMemberAccess	n -> parent -> depth		5258981	0					
ANR	5258996	PtrMemberAccess	n -> parent		5258981	0					
ANR	5258997	Identifier	n		5258981	0					
ANR	5258998	Identifier	parent		5258981	1					
ANR	5258999	Identifier	depth		5258981	1					
ANR	5259000	PrimaryExpression	1		5258981	1					
ANR	5259001	PrimaryExpression	0		5258981	2					
ANR	5259002	ReturnType	static void		5258981	1					
ANR	5259003	Identifier	update_depth		5258981	2					
ANR	5259004	ParameterList	"RTreeNode * n , RTreeVisitor * vis"		5258981	3					
ANR	5259005	Parameter	RTreeNode * n	55:26:1000:1011	5258981	0	True				
ANR	5259006	ParameterType	RTreeNode *		5258981	0					
ANR	5259007	Identifier	n		5258981	1					
ANR	5259008	Parameter	RTreeVisitor * vis	55:40:1014:1030	5258981	1	True				
ANR	5259009	ParameterType	RTreeVisitor *		5258981	0					
ANR	5259010	Identifier	vis		5258981	1					
ANR	5259011	CFGEntryNode	ENTRY		5258981		True				
ANR	5259012	CFGExitNode	EXIT		5258981		True				
ANR	5259013	Symbol	vis		5258981						
ANR	5259014	Symbol	n -> parent		5258981						
ANR	5259015	Symbol	n -> parent -> depth		5258981						
ANR	5259016	Symbol	* n		5258981						
ANR	5259017	Symbol	* n -> parent		5258981						
ANR	5259018	Symbol	n -> depth		5258981						
ANR	5259019	Symbol	* * n		5258981						
ANR	5259020	Symbol	n		5258981						
ANR	5259021	Function	node_new	59:0:1088:1277							
ANR	5259022	FunctionDef	"node_new (RTree * t , void * data)"		5259021	0					
ANR	5259023	CompoundStatement		59:50:1138:1277	5259021	0					
ANR	5259024	IdentifierDeclStatement	RTreeNode * n = R_NEW0 ( RTreeNode ) ;	60:1:1141:1174	5259021	0	True				
ANR	5259025	IdentifierDecl	* n = R_NEW0 ( RTreeNode )		5259021	0					
ANR	5259026	IdentifierDeclType	RTreeNode *		5259021	0					
ANR	5259027	Identifier	n		5259021	1					
ANR	5259028	AssignmentExpression	* n = R_NEW0 ( RTreeNode )		5259021	2		=			
ANR	5259029	Identifier	n		5259021	0					
ANR	5259030	CallExpression	R_NEW0 ( RTreeNode )		5259021	1					
ANR	5259031	Callee	R_NEW0		5259021	0					
ANR	5259032	Identifier	R_NEW0		5259021	0					
ANR	5259033	ArgumentList	RTreeNode		5259021	1					
ANR	5259034	Argument	RTreeNode		5259021	0					
ANR	5259035	Identifier	RTreeNode		5259021	0					
ANR	5259036	IfStatement	if ( ! n )		5259021	1					
ANR	5259037	Condition	! n	61:5:1181:1182	5259021	0	True				
ANR	5259038	UnaryOperationExpression	! n		5259021	0					
ANR	5259039	UnaryOperator	!		5259021	0					
ANR	5259040	Identifier	n		5259021	1					
ANR	5259041	CompoundStatement		3:9:46:46	5259021	1					
ANR	5259042	ReturnStatement	return NULL ;	62:2:1189:1200	5259021	0	True				
ANR	5259043	Identifier	NULL		5259021	0					
ANR	5259044	ExpressionStatement	n -> children = r_list_new ( )	64:1:1206:1233	5259021	2	True				
ANR	5259045	AssignmentExpression	n -> children = r_list_new ( )		5259021	0		=			
ANR	5259046	PtrMemberAccess	n -> children		5259021	0					
ANR	5259047	Identifier	n		5259021	0					
ANR	5259048	Identifier	children		5259021	1					
ANR	5259049	CallExpression	r_list_new ( )		5259021	1					
ANR	5259050	Callee	r_list_new		5259021	0					
ANR	5259051	Identifier	r_list_new		5259021	0					
ANR	5259052	ArgumentList			5259021	1					
ANR	5259053	ExpressionStatement	n -> data = data	65:1:1236:1250	5259021	3	True				
ANR	5259054	AssignmentExpression	n -> data = data		5259021	0		=			
ANR	5259055	PtrMemberAccess	n -> data		5259021	0					
ANR	5259056	Identifier	n		5259021	0					
ANR	5259057	Identifier	data		5259021	1					
ANR	5259058	Identifier	data		5259021	1					
ANR	5259059	ExpressionStatement	n -> tree = t	66:1:1253:1264	5259021	4	True				
ANR	5259060	AssignmentExpression	n -> tree = t		5259021	0		=			
ANR	5259061	PtrMemberAccess	n -> tree		5259021	0					
ANR	5259062	Identifier	n		5259021	0					
ANR	5259063	Identifier	tree		5259021	1					
ANR	5259064	Identifier	t		5259021	1					
ANR	5259065	ReturnStatement	return n ;	67:1:1267:1275	5259021	5	True				
ANR	5259066	Identifier	n		5259021	0					
ANR	5259067	ReturnType	static RTreeNode *		5259021	1					
ANR	5259068	Identifier	node_new		5259021	2					
ANR	5259069	ParameterList	"RTree * t , void * data"		5259021	3					
ANR	5259070	Parameter	RTree * t	59:28:1116:1123	5259021	0	True				
ANR	5259071	ParameterType	RTree *		5259021	0					
ANR	5259072	Identifier	t		5259021	1					
ANR	5259073	Parameter	void * data	59:38:1126:1135	5259021	1	True				
ANR	5259074	ParameterType	void *		5259021	0					
ANR	5259075	Identifier	data		5259021	1					
ANR	5259076	CFGEntryNode	ENTRY		5259021		True				
ANR	5259077	CFGExitNode	EXIT		5259021		True				
ANR	5259078	Symbol	RTreeNode		5259021						
ANR	5259079	Symbol	n -> tree		5259021						
ANR	5259080	Symbol	R_NEW0		5259021						
ANR	5259081	Symbol	NULL		5259021						
ANR	5259082	Symbol	n -> data		5259021						
ANR	5259083	Symbol	t		5259021						
ANR	5259084	Symbol	data		5259021						
ANR	5259085	Symbol	* n		5259021						
ANR	5259086	Symbol	n -> children		5259021						
ANR	5259087	Symbol	n		5259021						
ANR	5259088	Symbol	r_list_new		5259021						
ANR	5259089	Function	r_tree_new	70:0:1280:1337							
ANR	5259090	FunctionDef	r_tree_new ()		5259089	0					
ANR	5259091	CompoundStatement		70:31:1311:1337	5259089	0					
ANR	5259092	ReturnStatement	return R_NEW0 ( RTree ) ;	71:1:1314:1335	5259089	0	True				
ANR	5259093	CallExpression	R_NEW0 ( RTree )		5259089	0					
ANR	5259094	Callee	R_NEW0		5259089	0					
ANR	5259095	Identifier	R_NEW0		5259089	0					
ANR	5259096	ArgumentList	RTree		5259089	1					
ANR	5259097	Argument	RTree		5259089	0					
ANR	5259098	Identifier	RTree		5259089	0					
ANR	5259099	ReturnType	R_API RTree *		5259089	1					
ANR	5259100	Identifier	r_tree_new		5259089	2					
ANR	5259101	ParameterList			5259089	3					
ANR	5259102	CFGEntryNode	ENTRY		5259089		True				
ANR	5259103	CFGExitNode	EXIT		5259089		True				
ANR	5259104	Symbol	R_NEW0		5259089						
ANR	5259105	Symbol	RTree		5259089						
ANR	5259106	Function	r_tree_free	74:0:1340:1436							
ANR	5259107	FunctionDef	r_tree_free (RTree * t)		5259106	0					
ANR	5259108	CompoundStatement		74:34:1374:1436	5259106	0					
ANR	5259109	IfStatement	if ( ! t )		5259106	0					
ANR	5259110	Condition	! t	75:5:1381:1382	5259106	0	True				
ANR	5259111	UnaryOperationExpression	! t		5259106	0					
ANR	5259112	UnaryOperator	!		5259106	0					
ANR	5259113	Identifier	t		5259106	1					
ANR	5259114	CompoundStatement		2:9:10:10	5259106	1					
ANR	5259115	ReturnStatement	return ;	76:2:1389:1395	5259106	0	True				
ANR	5259116	ExpressionStatement	free_all_children ( t )	79:1:1402:1423	5259106	1	True				
ANR	5259117	CallExpression	free_all_children ( t )		5259106	0					
ANR	5259118	Callee	free_all_children		5259106	0					
ANR	5259119	Identifier	free_all_children		5259106	0					
ANR	5259120	ArgumentList	t		5259106	1					
ANR	5259121	Argument	t		5259106	0					
ANR	5259122	Identifier	t		5259106	0					
ANR	5259123	ExpressionStatement	free ( t )	80:1:1426:1434	5259106	2	True				
ANR	5259124	CallExpression	free ( t )		5259106	0					
ANR	5259125	Callee	free		5259106	0					
ANR	5259126	Identifier	free		5259106	0					
ANR	5259127	ArgumentList	t		5259106	1					
ANR	5259128	Argument	t		5259106	0					
ANR	5259129	Identifier	t		5259106	0					
ANR	5259130	ReturnType	R_API void		5259106	1					
ANR	5259131	Identifier	r_tree_free		5259106	2					
ANR	5259132	ParameterList	RTree * t		5259106	3					
ANR	5259133	Parameter	RTree * t	74:24:1364:1371	5259106	0	True				
ANR	5259134	ParameterType	RTree *		5259106	0					
ANR	5259135	Identifier	t		5259106	1					
ANR	5259136	CFGEntryNode	ENTRY		5259106		True				
ANR	5259137	CFGExitNode	EXIT		5259106		True				
ANR	5259138	Symbol	t		5259106						
ANR	5259139	Function	r_tree_reset	83:0:1439:1542							
ANR	5259140	FunctionDef	r_tree_reset (RTree * t)		5259139	0					
ANR	5259141	CompoundStatement		83:35:1474:1542	5259139	0					
ANR	5259142	IfStatement	if ( ! t )		5259139	0					
ANR	5259143	Condition	! t	84:5:1481:1482	5259139	0	True				
ANR	5259144	UnaryOperationExpression	! t		5259139	0					
ANR	5259145	UnaryOperator	!		5259139	0					
ANR	5259146	Identifier	t		5259139	1					
ANR	5259147	CompoundStatement		2:9:10:10	5259139	1					
ANR	5259148	ReturnStatement	return ;	85:2:1489:1495	5259139	0	True				
ANR	5259149	ExpressionStatement	free_all_children ( t )	88:1:1502:1523	5259139	1	True				
ANR	5259150	CallExpression	free_all_children ( t )		5259139	0					
ANR	5259151	Callee	free_all_children		5259139	0					
ANR	5259152	Identifier	free_all_children		5259139	0					
ANR	5259153	ArgumentList	t		5259139	1					
ANR	5259154	Argument	t		5259139	0					
ANR	5259155	Identifier	t		5259139	0					
ANR	5259156	ExpressionStatement	t -> root = NULL	89:1:1526:1540	5259139	2	True				
ANR	5259157	AssignmentExpression	t -> root = NULL		5259139	0		=			
ANR	5259158	PtrMemberAccess	t -> root		5259139	0					
ANR	5259159	Identifier	t		5259139	0					
ANR	5259160	Identifier	root		5259139	1					
ANR	5259161	Identifier	NULL		5259139	1					
ANR	5259162	ReturnType	R_API void		5259139	1					
ANR	5259163	Identifier	r_tree_reset		5259139	2					
ANR	5259164	ParameterList	RTree * t		5259139	3					
ANR	5259165	Parameter	RTree * t	83:25:1464:1471	5259139	0	True				
ANR	5259166	ParameterType	RTree *		5259139	0					
ANR	5259167	Identifier	t		5259139	1					
ANR	5259168	CFGEntryNode	ENTRY		5259139		True				
ANR	5259169	CFGExitNode	EXIT		5259139		True				
ANR	5259170	Symbol	t -> root		5259139						
ANR	5259171	Symbol	NULL		5259139						
ANR	5259172	Symbol	t		5259139						
ANR	5259173	Symbol	* t		5259139						
ANR	5259174	Function	r_tree_add_node	97:0:1815:2396							
ANR	5259175	FunctionDef	"r_tree_add_node (RTree * t , RTreeNode * node , void * child_data)"		5259174	0					
ANR	5259176	CompoundStatement		97:79:1894:2396	5259174	0					
ANR	5259177	IdentifierDeclStatement	RTreeNode * child ;	98:1:1897:1913	5259174	0	True				
ANR	5259178	IdentifierDecl	* child		5259174	0					
ANR	5259179	IdentifierDeclType	RTreeNode *		5259174	0					
ANR	5259180	Identifier	child		5259174	1					
ANR	5259181	IdentifierDeclStatement	RTreeVisitor vis = { 0 } ;	99:1:1916:1940	5259174	1	True				
ANR	5259182	IdentifierDecl	vis = { 0 }		5259174	0					
ANR	5259183	IdentifierDeclType	RTreeVisitor		5259174	0					
ANR	5259184	Identifier	vis		5259174	1					
ANR	5259185	AssignmentExpression	vis = { 0 }		5259174	2		=			
ANR	5259186	Identifier	vis		5259174	0					
ANR	5259187	InitializerList	0		5259174	1					
ANR	5259188	PrimaryExpression	0		5259174	0					
ANR	5259189	IfStatement	if ( ! t || ( node && node -> tree != t ) || ( t -> root && ! node ) )		5259174	2					
ANR	5259190	Condition	! t || ( node && node -> tree != t ) || ( t -> root && ! node )	102:5:2015:2067	5259174	0	True				
ANR	5259191	OrExpression	! t || ( node && node -> tree != t ) || ( t -> root && ! node )		5259174	0		||			
ANR	5259192	UnaryOperationExpression	! t		5259174	0					
ANR	5259193	UnaryOperator	!		5259174	0					
ANR	5259194	Identifier	t		5259174	1					
ANR	5259195	OrExpression	( node && node -> tree != t ) || ( t -> root && ! node )		5259174	1		||			
ANR	5259196	AndExpression	node && node -> tree != t		5259174	0		&&			
ANR	5259197	Identifier	node		5259174	0					
ANR	5259198	EqualityExpression	node -> tree != t		5259174	1		!=			
ANR	5259199	PtrMemberAccess	node -> tree		5259174	0					
ANR	5259200	Identifier	node		5259174	0					
ANR	5259201	Identifier	tree		5259174	1					
ANR	5259202	Identifier	t		5259174	1					
ANR	5259203	AndExpression	t -> root && ! node		5259174	1		&&			
ANR	5259204	PtrMemberAccess	t -> root		5259174	0					
ANR	5259205	Identifier	t		5259174	0					
ANR	5259206	Identifier	root		5259174	1					
ANR	5259207	UnaryOperationExpression	! node		5259174	1					
ANR	5259208	UnaryOperator	!		5259174	0					
ANR	5259209	Identifier	node		5259174	1					
ANR	5259210	CompoundStatement		6:60:175:175	5259174	1					
ANR	5259211	ReturnStatement	return NULL ;	103:2:2074:2085	5259174	0	True				
ANR	5259212	Identifier	NULL		5259174	0					
ANR	5259213	ExpressionStatement	"child = node_new ( t , child_data )"	106:1:2092:2124	5259174	3	True				
ANR	5259214	AssignmentExpression	"child = node_new ( t , child_data )"		5259174	0		=			
ANR	5259215	Identifier	child		5259174	0					
ANR	5259216	CallExpression	"node_new ( t , child_data )"		5259174	1					
ANR	5259217	Callee	node_new		5259174	0					
ANR	5259218	Identifier	node_new		5259174	0					
ANR	5259219	ArgumentList	t		5259174	1					
ANR	5259220	Argument	t		5259174	0					
ANR	5259221	Identifier	t		5259174	0					
ANR	5259222	Argument	child_data		5259174	1					
ANR	5259223	Identifier	child_data		5259174	0					
ANR	5259224	IfStatement	if ( ! node && ! t -> root )		5259174	4					
ANR	5259225	Condition	! node && ! t -> root	107:5:2131:2147	5259174	0	True				
ANR	5259226	AndExpression	! node && ! t -> root		5259174	0		&&			
ANR	5259227	UnaryOperationExpression	! node		5259174	0					
ANR	5259228	UnaryOperator	!		5259174	0					
ANR	5259229	Identifier	node		5259174	1					
ANR	5259230	UnaryOperationExpression	! t -> root		5259174	1					
ANR	5259231	UnaryOperator	!		5259174	0					
ANR	5259232	PtrMemberAccess	t -> root		5259174	1					
ANR	5259233	Identifier	t		5259174	0					
ANR	5259234	Identifier	root		5259174	1					
ANR	5259235	CompoundStatement		11:24:255:255	5259174	1					
ANR	5259236	ExpressionStatement	t -> root = child	108:2:2154:2169	5259174	0	True				
ANR	5259237	AssignmentExpression	t -> root = child		5259174	0		=			
ANR	5259238	PtrMemberAccess	t -> root		5259174	0					
ANR	5259239	Identifier	t		5259174	0					
ANR	5259240	Identifier	root		5259174	1					
ANR	5259241	Identifier	child		5259174	1					
ANR	5259242	ElseStatement	else		5259174	0					
ANR	5259243	IfStatement	if ( node )		5259174	0					
ANR	5259244	Condition	node	109:12:2183:2186	5259174	0	True				
ANR	5259245	Identifier	node		5259174	0					
ANR	5259246	CompoundStatement		13:18:294:294	5259174	1					
ANR	5259247	ExpressionStatement	"r_list_append ( node -> children , child )"	110:2:2193:2230	5259174	0	True				
ANR	5259248	CallExpression	"r_list_append ( node -> children , child )"		5259174	0					
ANR	5259249	Callee	r_list_append		5259174	0					
ANR	5259250	Identifier	r_list_append		5259174	0					
ANR	5259251	ArgumentList	node -> children		5259174	1					
ANR	5259252	Argument	node -> children		5259174	0					
ANR	5259253	PtrMemberAccess	node -> children		5259174	0					
ANR	5259254	Identifier	node		5259174	0					
ANR	5259255	Identifier	children		5259174	1					
ANR	5259256	Argument	child		5259174	1					
ANR	5259257	Identifier	child		5259174	0					
ANR	5259258	ExpressionStatement	node -> n_children ++	111:2:2234:2252	5259174	1	True				
ANR	5259259	PostIncDecOperationExpression	node -> n_children ++		5259174	0					
ANR	5259260	PtrMemberAccess	node -> n_children		5259174	0					
ANR	5259261	Identifier	node		5259174	0					
ANR	5259262	Identifier	n_children		5259174	1					
ANR	5259263	IncDec	++		5259174	1					
ANR	5259264	ExpressionStatement	child -> parent = node	113:1:2258:2278	5259174	5	True				
ANR	5259265	AssignmentExpression	child -> parent = node		5259174	0		=			
ANR	5259266	PtrMemberAccess	child -> parent		5259174	0					
ANR	5259267	Identifier	child		5259174	0					
ANR	5259268	Identifier	parent		5259174	1					
ANR	5259269	Identifier	node		5259174	1					
ANR	5259270	ExpressionStatement	vis . pre_visit = ( RTreeNodeVisitCb ) update_depth	116:1:2302:2348	5259174	6	True				
ANR	5259271	AssignmentExpression	vis . pre_visit = ( RTreeNodeVisitCb ) update_depth		5259174	0		=			
ANR	5259272	MemberAccess	vis . pre_visit		5259174	0					
ANR	5259273	Identifier	vis		5259174	0					
ANR	5259274	Identifier	pre_visit		5259174	1					
ANR	5259275	CastExpression	( RTreeNodeVisitCb ) update_depth		5259174	1					
ANR	5259276	CastTarget	RTreeNodeVisitCb		5259174	0					
ANR	5259277	Identifier	update_depth		5259174	1					
ANR	5259278	ExpressionStatement	"tree_dfs_node ( child , & vis )"	117:1:2351:2378	5259174	7	True				
ANR	5259279	CallExpression	"tree_dfs_node ( child , & vis )"		5259174	0					
ANR	5259280	Callee	tree_dfs_node		5259174	0					
ANR	5259281	Identifier	tree_dfs_node		5259174	0					
ANR	5259282	ArgumentList	child		5259174	1					
ANR	5259283	Argument	child		5259174	0					
ANR	5259284	Identifier	child		5259174	0					
ANR	5259285	Argument	& vis		5259174	1					
ANR	5259286	UnaryOperationExpression	& vis		5259174	0					
ANR	5259287	UnaryOperator	&		5259174	0					
ANR	5259288	Identifier	vis		5259174	1					
ANR	5259289	ReturnStatement	return child ;	119:1:2382:2394	5259174	8	True				
ANR	5259290	Identifier	child		5259174	0					
ANR	5259291	ReturnType	R_API RTreeNode *		5259174	1					
ANR	5259292	Identifier	r_tree_add_node		5259174	2					
ANR	5259293	ParameterList	"RTree * t , RTreeNode * node , void * child_data"		5259174	3					
ANR	5259294	Parameter	RTree * t	97:34:1849:1856	5259174	0	True				
ANR	5259295	ParameterType	RTree *		5259174	0					
ANR	5259296	Identifier	t		5259174	1					
ANR	5259297	Parameter	RTreeNode * node	97:44:1859:1873	5259174	1	True				
ANR	5259298	ParameterType	RTreeNode *		5259174	0					
ANR	5259299	Identifier	node		5259174	1					
ANR	5259300	Parameter	void * child_data	97:61:1876:1891	5259174	2	True				
ANR	5259301	ParameterType	void *		5259174	0					
ANR	5259302	Identifier	child_data		5259174	1					
ANR	5259303	CFGEntryNode	ENTRY		5259174		True				
ANR	5259304	CFGExitNode	EXIT		5259174		True				
ANR	5259305	Symbol	t -> root		5259174						
ANR	5259306	Symbol	vis		5259174						
ANR	5259307	Symbol	& vis		5259174						
ANR	5259308	Symbol	* child		5259174						
ANR	5259309	Symbol	NULL		5259174						
ANR	5259310	Symbol	update_depth		5259174						
ANR	5259311	Symbol	node		5259174						
ANR	5259312	Symbol	child_data		5259174						
ANR	5259313	Symbol	t		5259174						
ANR	5259314	Symbol	node_new		5259174						
ANR	5259315	Symbol	vis . pre_visit		5259174						
ANR	5259316	Symbol	* node		5259174						
ANR	5259317	Symbol	node -> n_children		5259174						
ANR	5259318	Symbol	node -> tree		5259174						
ANR	5259319	Symbol	* t		5259174						
ANR	5259320	Symbol	node -> children		5259174						
ANR	5259321	Symbol	child		5259174						
ANR	5259322	Symbol	child -> parent		5259174						
ANR	5259323	Function	r_tree_dfs	122:0:2399:2521							
ANR	5259324	FunctionDef	"r_tree_dfs (RTree * t , RTreeVisitor * vis)"		5259323	0					
ANR	5259325	CompoundStatement		122:52:2451:2521	5259323	0					
ANR	5259326	IfStatement	if ( ! t || ! t -> root )		5259323	0					
ANR	5259327	Condition	! t || ! t -> root	123:5:2458:2471	5259323	0	True				
ANR	5259328	OrExpression	! t || ! t -> root		5259323	0		||			
ANR	5259329	UnaryOperationExpression	! t		5259323	0					
ANR	5259330	UnaryOperator	!		5259323	0					
ANR	5259331	Identifier	t		5259323	1					
ANR	5259332	UnaryOperationExpression	! t -> root		5259323	1					
ANR	5259333	UnaryOperator	!		5259323	0					
ANR	5259334	PtrMemberAccess	t -> root		5259323	1					
ANR	5259335	Identifier	t		5259323	0					
ANR	5259336	Identifier	root		5259323	1					
ANR	5259337	CompoundStatement		2:21:22:22	5259323	1					
ANR	5259338	ReturnStatement	return ;	124:2:2478:2484	5259323	0	True				
ANR	5259339	ExpressionStatement	"tree_dfs_node ( t -> root , vis )"	127:1:2491:2519	5259323	1	True				
ANR	5259340	CallExpression	"tree_dfs_node ( t -> root , vis )"		5259323	0					
ANR	5259341	Callee	tree_dfs_node		5259323	0					
ANR	5259342	Identifier	tree_dfs_node		5259323	0					
ANR	5259343	ArgumentList	t -> root		5259323	1					
ANR	5259344	Argument	t -> root		5259323	0					
ANR	5259345	PtrMemberAccess	t -> root		5259323	0					
ANR	5259346	Identifier	t		5259323	0					
ANR	5259347	Identifier	root		5259323	1					
ANR	5259348	Argument	vis		5259323	1					
ANR	5259349	Identifier	vis		5259323	0					
ANR	5259350	ReturnType	R_API void		5259323	1					
ANR	5259351	Identifier	r_tree_dfs		5259323	2					
ANR	5259352	ParameterList	"RTree * t , RTreeVisitor * vis"		5259323	3					
ANR	5259353	Parameter	RTree * t	122:23:2422:2429	5259323	0	True				
ANR	5259354	ParameterType	RTree *		5259323	0					
ANR	5259355	Identifier	t		5259323	1					
ANR	5259356	Parameter	RTreeVisitor * vis	122:33:2432:2448	5259323	1	True				
ANR	5259357	ParameterType	RTreeVisitor *		5259323	0					
ANR	5259358	Identifier	vis		5259323	1					
ANR	5259359	CFGEntryNode	ENTRY		5259323		True				
ANR	5259360	CFGExitNode	EXIT		5259323		True				
ANR	5259361	Symbol	t -> root		5259323						
ANR	5259362	Symbol	vis		5259323						
ANR	5259363	Symbol	t		5259323						
ANR	5259364	Symbol	* t		5259323						
ANR	5259365	Function	r_tree_bfs	130:0:2524:3175							
ANR	5259366	FunctionDef	"r_tree_bfs (RTree * t , RTreeVisitor * vis)"		5259365	0					
ANR	5259367	CompoundStatement		130:52:2576:3175	5259365	0					
ANR	5259368	IdentifierDeclStatement	RQueue * q ;	131:1:2579:2588	5259365	0	True				
ANR	5259369	IdentifierDecl	* q		5259365	0					
ANR	5259370	IdentifierDeclType	RQueue *		5259365	0					
ANR	5259371	Identifier	q		5259365	1					
ANR	5259372	IfStatement	if ( ! t || ! t -> root )		5259365	1					
ANR	5259373	Condition	! t || ! t -> root	133:5:2596:2609	5259365	0	True				
ANR	5259374	OrExpression	! t || ! t -> root		5259365	0		||			
ANR	5259375	UnaryOperationExpression	! t		5259365	0					
ANR	5259376	UnaryOperator	!		5259365	0					
ANR	5259377	Identifier	t		5259365	1					
ANR	5259378	UnaryOperationExpression	! t -> root		5259365	1					
ANR	5259379	UnaryOperator	!		5259365	0					
ANR	5259380	PtrMemberAccess	t -> root		5259365	1					
ANR	5259381	Identifier	t		5259365	0					
ANR	5259382	Identifier	root		5259365	1					
ANR	5259383	CompoundStatement		4:21:35:35	5259365	1					
ANR	5259384	ReturnStatement	return ;	134:2:2616:2622	5259365	0	True				
ANR	5259385	ExpressionStatement	q = r_queue_new ( 16 )	137:1:2629:2649	5259365	2	True				
ANR	5259386	AssignmentExpression	q = r_queue_new ( 16 )		5259365	0		=			
ANR	5259387	Identifier	q		5259365	0					
ANR	5259388	CallExpression	r_queue_new ( 16 )		5259365	1					
ANR	5259389	Callee	r_queue_new		5259365	0					
ANR	5259390	Identifier	r_queue_new		5259365	0					
ANR	5259391	ArgumentList	16		5259365	1					
ANR	5259392	Argument	16		5259365	0					
ANR	5259393	PrimaryExpression	16		5259365	0					
ANR	5259394	IfStatement	if ( ! q )		5259365	3					
ANR	5259395	Condition	! q	138:5:2656:2657	5259365	0	True				
ANR	5259396	UnaryOperationExpression	! q		5259365	0					
ANR	5259397	UnaryOperator	!		5259365	0					
ANR	5259398	Identifier	q		5259365	1					
ANR	5259399	CompoundStatement		9:9:83:83	5259365	1					
ANR	5259400	ReturnStatement	return ;	139:2:2664:2670	5259365	0	True				
ANR	5259401	ExpressionStatement	"r_queue_enqueue ( q , t -> root )"	141:1:2676:2704	5259365	4	True				
ANR	5259402	CallExpression	"r_queue_enqueue ( q , t -> root )"		5259365	0					
ANR	5259403	Callee	r_queue_enqueue		5259365	0					
ANR	5259404	Identifier	r_queue_enqueue		5259365	0					
ANR	5259405	ArgumentList	q		5259365	1					
ANR	5259406	Argument	q		5259365	0					
ANR	5259407	Identifier	q		5259365	0					
ANR	5259408	Argument	t -> root		5259365	1					
ANR	5259409	PtrMemberAccess	t -> root		5259365	0					
ANR	5259410	Identifier	t		5259365	0					
ANR	5259411	Identifier	root		5259365	1					
ANR	5259412	WhileStatement	while ( ! r_queue_is_empty ( q ) )		5259365	5					
ANR	5259413	Condition	! r_queue_is_empty ( q )	142:8:2714:2734	5259365	0	True				
ANR	5259414	UnaryOperationExpression	! r_queue_is_empty ( q )		5259365	0					
ANR	5259415	UnaryOperator	!		5259365	0					
ANR	5259416	CallExpression	r_queue_is_empty ( q )		5259365	1					
ANR	5259417	Callee	r_queue_is_empty		5259365	0					
ANR	5259418	Identifier	r_queue_is_empty		5259365	0					
ANR	5259419	ArgumentList	q		5259365	1					
ANR	5259420	Argument	q		5259365	0					
ANR	5259421	Identifier	q		5259365	0					
ANR	5259422	CompoundStatement		20:3:288:301	5259365	1					
ANR	5259423	IdentifierDeclStatement	RTreeNode * el = ( RTreeNode * ) r_queue_dequeue ( q ) ;	143:3:2742:2790	5259365	0	True				
ANR	5259424	IdentifierDecl	* el = ( RTreeNode * ) r_queue_dequeue ( q )		5259365	0					
ANR	5259425	IdentifierDeclType	RTreeNode *		5259365	0					
ANR	5259426	Identifier	el		5259365	1					
ANR	5259427	AssignmentExpression	* el = ( RTreeNode * ) r_queue_dequeue ( q )		5259365	2		=			
ANR	5259428	Identifier	el		5259365	0					
ANR	5259429	CastExpression	( RTreeNode * ) r_queue_dequeue ( q )		5259365	1					
ANR	5259430	CastTarget	RTreeNode *		5259365	0					
ANR	5259431	CallExpression	r_queue_dequeue ( q )		5259365	1					
ANR	5259432	Callee	r_queue_dequeue		5259365	0					
ANR	5259433	Identifier	r_queue_dequeue		5259365	0					
ANR	5259434	ArgumentList	q		5259365	1					
ANR	5259435	Argument	q		5259365	0					
ANR	5259436	Identifier	q		5259365	0					
ANR	5259437	IfStatement	if ( ! el )		5259365	1					
ANR	5259438	Condition	! el	144:7:2799:2801	5259365	0	True				
ANR	5259439	UnaryOperationExpression	! el		5259365	0					
ANR	5259440	UnaryOperator	!		5259365	0					
ANR	5259441	Identifier	el		5259365	1					
ANR	5259442	CompoundStatement		15:12:227:227	5259365	1					
ANR	5259443	ExpressionStatement	r_queue_free ( q )	145:4:2810:2826	5259365	0	True				
ANR	5259444	CallExpression	r_queue_free ( q )		5259365	0					
ANR	5259445	Callee	r_queue_free		5259365	0					
ANR	5259446	Identifier	r_queue_free		5259365	0					
ANR	5259447	ArgumentList	q		5259365	1					
ANR	5259448	Argument	q		5259365	0					
ANR	5259449	Identifier	q		5259365	0					
ANR	5259450	ReturnStatement	return ;	146:4:2832:2838	5259365	1	True				
ANR	5259451	IdentifierDeclStatement	RTreeNode * n ;	148:3:2848:2860	5259365	2	True				
ANR	5259452	IdentifierDecl	* n		5259365	0					
ANR	5259453	IdentifierDeclType	RTreeNode *		5259365	0					
ANR	5259454	Identifier	n		5259365	1					
ANR	5259455	IdentifierDeclStatement	RListIter * it ;	149:3:2865:2878	5259365	3	True				
ANR	5259456	IdentifierDecl	* it		5259365	0					
ANR	5259457	IdentifierDeclType	RListIter *		5259365	0					
ANR	5259458	Identifier	it		5259365	1					
ANR	5259459	IfStatement	if ( vis -> pre_visit )		5259365	4					
ANR	5259460	Condition	vis -> pre_visit	151:7:2888:2901	5259365	0	True				
ANR	5259461	PtrMemberAccess	vis -> pre_visit		5259365	0					
ANR	5259462	Identifier	vis		5259365	0					
ANR	5259463	Identifier	pre_visit		5259365	1					
ANR	5259464	CompoundStatement		22:23:327:327	5259365	1					
ANR	5259465	ExpressionStatement	"vis -> pre_visit ( el , vis )"	152:4:2910:2934	5259365	0	True				
ANR	5259466	CallExpression	"vis -> pre_visit ( el , vis )"		5259365	0					
ANR	5259467	Callee	vis -> pre_visit		5259365	0					
ANR	5259468	PtrMemberAccess	vis -> pre_visit		5259365	0					
ANR	5259469	Identifier	vis		5259365	0					
ANR	5259470	Identifier	pre_visit		5259365	1					
ANR	5259471	ArgumentList	el		5259365	1					
ANR	5259472	Argument	el		5259365	0					
ANR	5259473	Identifier	el		5259365	0					
ANR	5259474	Argument	vis		5259365	1					
ANR	5259475	Identifier	vis		5259365	0					
ANR	5259476	Statement	r_list_foreach	155:3:2945:2958	5259365	5	True				
ANR	5259477	Statement	(	155:18:2960:2960	5259365	6	True				
ANR	5259478	Statement	el	155:19:2961:2962	5259365	7	True				
ANR	5259479	Statement	->	155:21:2963:2964	5259365	8	True				
ANR	5259480	Statement	children	155:23:2965:2972	5259365	9	True				
ANR	5259481	Statement	","	155:31:2973:2973	5259365	10	True				
ANR	5259482	Statement	it	155:33:2975:2976	5259365	11	True				
ANR	5259483	Statement	","	155:35:2977:2977	5259365	12	True				
ANR	5259484	Statement	n	155:37:2979:2979	5259365	13	True				
ANR	5259485	Statement	)	155:38:2980:2980	5259365	14	True				
ANR	5259486	CompoundStatement		26:40:405:405	5259365	15					
ANR	5259487	IfStatement	if ( vis -> discover_child )		5259365	0					
ANR	5259488	Condition	vis -> discover_child	156:8:2992:3010	5259365	0	True				
ANR	5259489	PtrMemberAccess	vis -> discover_child		5259365	0					
ANR	5259490	Identifier	vis		5259365	0					
ANR	5259491	Identifier	discover_child		5259365	1					
ANR	5259492	CompoundStatement		27:29:436:436	5259365	1					
ANR	5259493	ExpressionStatement	"vis -> discover_child ( n , vis )"	157:5:3020:3048	5259365	0	True				
ANR	5259494	CallExpression	"vis -> discover_child ( n , vis )"		5259365	0					
ANR	5259495	Callee	vis -> discover_child		5259365	0					
ANR	5259496	PtrMemberAccess	vis -> discover_child		5259365	0					
ANR	5259497	Identifier	vis		5259365	0					
ANR	5259498	Identifier	discover_child		5259365	1					
ANR	5259499	ArgumentList	n		5259365	1					
ANR	5259500	Argument	n		5259365	0					
ANR	5259501	Identifier	n		5259365	0					
ANR	5259502	Argument	vis		5259365	1					
ANR	5259503	Identifier	vis		5259365	0					
ANR	5259504	ExpressionStatement	"r_queue_enqueue ( q , n )"	159:4:3060:3082	5259365	1	True				
ANR	5259505	CallExpression	"r_queue_enqueue ( q , n )"		5259365	0					
ANR	5259506	Callee	r_queue_enqueue		5259365	0					
ANR	5259507	Identifier	r_queue_enqueue		5259365	0					
ANR	5259508	ArgumentList	q		5259365	1					
ANR	5259509	Argument	q		5259365	0					
ANR	5259510	Identifier	q		5259365	0					
ANR	5259511	Argument	n		5259365	1					
ANR	5259512	Identifier	n		5259365	0					
ANR	5259513	IfStatement	if ( vis -> post_visit )		5259365	16					
ANR	5259514	Condition	vis -> post_visit	162:7:3097:3111	5259365	0	True				
ANR	5259515	PtrMemberAccess	vis -> post_visit		5259365	0					
ANR	5259516	Identifier	vis		5259365	0					
ANR	5259517	Identifier	post_visit		5259365	1					
ANR	5259518	CompoundStatement		33:24:537:537	5259365	1					
ANR	5259519	ExpressionStatement	"vis -> post_visit ( el , vis )"	163:4:3120:3145	5259365	0	True				
ANR	5259520	CallExpression	"vis -> post_visit ( el , vis )"		5259365	0					
ANR	5259521	Callee	vis -> post_visit		5259365	0					
ANR	5259522	PtrMemberAccess	vis -> post_visit		5259365	0					
ANR	5259523	Identifier	vis		5259365	0					
ANR	5259524	Identifier	post_visit		5259365	1					
ANR	5259525	ArgumentList	el		5259365	1					
ANR	5259526	Argument	el		5259365	0					
ANR	5259527	Identifier	el		5259365	0					
ANR	5259528	Argument	vis		5259365	1					
ANR	5259529	Identifier	vis		5259365	0					
ANR	5259530	ExpressionStatement	r_queue_free ( q )	167:1:3157:3173	5259365	6	True				
ANR	5259531	CallExpression	r_queue_free ( q )		5259365	0					
ANR	5259532	Callee	r_queue_free		5259365	0					
ANR	5259533	Identifier	r_queue_free		5259365	0					
ANR	5259534	ArgumentList	q		5259365	1					
ANR	5259535	Argument	q		5259365	0					
ANR	5259536	Identifier	q		5259365	0					
ANR	5259537	ReturnType	R_API void		5259365	1					
ANR	5259538	Identifier	r_tree_bfs		5259365	2					
ANR	5259539	ParameterList	"RTree * t , RTreeVisitor * vis"		5259365	3					
ANR	5259540	Parameter	RTree * t	130:23:2547:2554	5259365	0	True				
ANR	5259541	ParameterType	RTree *		5259365	0					
ANR	5259542	Identifier	t		5259365	1					
ANR	5259543	Parameter	RTreeVisitor * vis	130:33:2557:2573	5259365	1	True				
ANR	5259544	ParameterType	RTreeVisitor *		5259365	0					
ANR	5259545	Identifier	vis		5259365	1					
ANR	5259546	CFGEntryNode	ENTRY		5259365		True				
ANR	5259547	CFGExitNode	EXIT		5259365		True				
ANR	5259548	Symbol	t -> root		5259365						
ANR	5259549	Symbol	vis		5259365						
ANR	5259550	Symbol	vis -> pre_visit		5259365						
ANR	5259551	Symbol	el		5259365						
ANR	5259552	Symbol	r_queue_new		5259365						
ANR	5259553	Symbol	* vis		5259365						
ANR	5259554	Symbol	it		5259365						
ANR	5259555	Symbol	r_queue_dequeue		5259365						
ANR	5259556	Symbol	n		5259365						
ANR	5259557	Symbol	q		5259365						
ANR	5259558	Symbol	vis -> discover_child		5259365						
ANR	5259559	Symbol	t		5259365						
ANR	5259560	Symbol	vis -> post_visit		5259365						
ANR	5259561	Symbol	r_queue_is_empty		5259365						
ANR	5259562	Symbol	* t		5259365						
