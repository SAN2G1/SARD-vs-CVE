command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6195510	File	data/converged/CVE-2019-16718~_radare2/shlr_zip_zlib_zutil.c								
ANR	6195511	Function	zlibVersion	27:13:990:1039							
ANR	6195512	FunctionDef	zlibVersion ()		6195511	0					
ANR	6195513	CompoundStatement		28:0:1012:1039	6195511	0					
ANR	6195514	ReturnStatement	return ZLIB_VERSION ;	29:4:1018:1037	6195511	0	True				
ANR	6195515	Identifier	ZLIB_VERSION		6195511	0					
ANR	6195516	ReturnType	ZEXPORT		6195511	1					
ANR	6195517	Identifier	zlibVersion		6195511	2					
ANR	6195518	ParameterList			6195511	3					
ANR	6195519	CFGEntryNode	ENTRY		6195511		True				
ANR	6195520	CFGExitNode	EXIT		6195511		True				
ANR	6195521	Symbol	ZLIB_VERSION		6195511						
ANR	6195522	Function	zlibCompileFlags	32:0:1042:2793							
ANR	6195523	FunctionDef	zlibCompileFlags ()		6195522	0					
ANR	6195524	CompoundStatement		33:0:1075:2793	6195522	0					
ANR	6195525	IdentifierDeclStatement	uLong flags ;	34:4:1081:1092	6195522	0	True				
ANR	6195526	IdentifierDecl	flags		6195522	0					
ANR	6195527	IdentifierDeclType	uLong		6195522	0					
ANR	6195528	Identifier	flags		6195522	1					
ANR	6195529	ExpressionStatement	flags = 0	36:4:1099:1108	6195522	1	True				
ANR	6195530	AssignmentExpression	flags = 0		6195522	0		=			
ANR	6195531	Identifier	flags		6195522	0					
ANR	6195532	PrimaryExpression	0		6195522	1					
ANR	6195533	SwitchStatement	switch ( ( int ) ( sizeof ( uInt ) ) )		6195522	2					
ANR	6195534	Condition	( int ) ( sizeof ( uInt ) )	37:12:1122:1140	6195522	0	True				
ANR	6195535	CastExpression	( int ) ( sizeof ( uInt ) )		6195522	0					
ANR	6195536	CastTarget	int		6195522	0					
ANR	6195537	SizeofExpression	sizeof ( uInt )		6195522	1					
ANR	6195538	Sizeof	sizeof		6195522	0					
ANR	6195539	SizeofOperand	uInt		6195522	1					
ANR	6195540	CompoundStatement		5:33:67:67	6195522	1					
ANR	6195541	Label	case 2 :	38:4:1149:1155	6195522	0	True				
ANR	6195542	BreakStatement	break ;	38:16:1161:1166	6195522	1	True				
ANR	6195543	Label	case 4 :	39:4:1172:1178	6195522	2	True				
ANR	6195544	ExpressionStatement	flags += 1	39:16:1184:1194	6195522	3	True				
ANR	6195545	AssignmentExpression	flags += 1		6195522	0		+=			
ANR	6195546	Identifier	flags		6195522	0					
ANR	6195547	PrimaryExpression	1		6195522	1					
ANR	6195548	BreakStatement	break ;	39:32:1200:1205	6195522	4	True				
ANR	6195549	Label	case 8 :	40:4:1211:1217	6195522	5	True				
ANR	6195550	ExpressionStatement	flags += 2	40:16:1223:1233	6195522	6	True				
ANR	6195551	AssignmentExpression	flags += 2		6195522	0		+=			
ANR	6195552	Identifier	flags		6195522	0					
ANR	6195553	PrimaryExpression	2		6195522	1					
ANR	6195554	BreakStatement	break ;	40:32:1239:1244	6195522	7	True				
ANR	6195555	Label	default :	41:4:1250:1257	6195522	8	True				
ANR	6195556	Identifier	default		6195522	0					
ANR	6195557	ExpressionStatement	flags += 3	41:16:1262:1272	6195522	9	True				
ANR	6195558	AssignmentExpression	flags += 3		6195522	0		+=			
ANR	6195559	Identifier	flags		6195522	0					
ANR	6195560	PrimaryExpression	3		6195522	1					
ANR	6195561	SwitchStatement	switch ( ( int ) ( sizeof ( uLong ) ) )		6195522	3					
ANR	6195562	Condition	( int ) ( sizeof ( uLong ) )	43:12:1292:1311	6195522	0	True				
ANR	6195563	CastExpression	( int ) ( sizeof ( uLong ) )		6195522	0					
ANR	6195564	CastTarget	int		6195522	0					
ANR	6195565	SizeofExpression	sizeof ( uLong )		6195522	1					
ANR	6195566	Sizeof	sizeof		6195522	0					
ANR	6195567	SizeofOperand	uLong		6195522	1					
ANR	6195568	CompoundStatement		11:34:238:238	6195522	1					
ANR	6195569	Label	case 2 :	44:4:1320:1326	6195522	0	True				
ANR	6195570	BreakStatement	break ;	44:16:1332:1337	6195522	1	True				
ANR	6195571	Label	case 4 :	45:4:1343:1349	6195522	2	True				
ANR	6195572	ExpressionStatement	flags += 1 << 2	45:16:1355:1370	6195522	3	True				
ANR	6195573	AssignmentExpression	flags += 1 << 2		6195522	0		+=			
ANR	6195574	Identifier	flags		6195522	0					
ANR	6195575	ShiftExpression	1 << 2		6195522	1		<<			
ANR	6195576	PrimaryExpression	1		6195522	0					
ANR	6195577	PrimaryExpression	2		6195522	1					
ANR	6195578	BreakStatement	break ;	45:40:1379:1384	6195522	4	True				
ANR	6195579	Label	case 8 :	46:4:1390:1396	6195522	5	True				
ANR	6195580	ExpressionStatement	flags += 2 << 2	46:16:1402:1417	6195522	6	True				
ANR	6195581	AssignmentExpression	flags += 2 << 2		6195522	0		+=			
ANR	6195582	Identifier	flags		6195522	0					
ANR	6195583	ShiftExpression	2 << 2		6195522	1		<<			
ANR	6195584	PrimaryExpression	2		6195522	0					
ANR	6195585	PrimaryExpression	2		6195522	1					
ANR	6195586	BreakStatement	break ;	46:40:1426:1431	6195522	7	True				
ANR	6195587	Label	default :	47:4:1437:1444	6195522	8	True				
ANR	6195588	Identifier	default		6195522	0					
ANR	6195589	ExpressionStatement	flags += 3 << 2	47:16:1449:1464	6195522	9	True				
ANR	6195590	AssignmentExpression	flags += 3 << 2		6195522	0		+=			
ANR	6195591	Identifier	flags		6195522	0					
ANR	6195592	ShiftExpression	3 << 2		6195522	1		<<			
ANR	6195593	PrimaryExpression	3		6195522	0					
ANR	6195594	PrimaryExpression	2		6195522	1					
ANR	6195595	SwitchStatement	switch ( ( int ) ( sizeof ( voidpf ) ) )		6195522	4					
ANR	6195596	Condition	( int ) ( sizeof ( voidpf ) )	49:12:1484:1504	6195522	0	True				
ANR	6195597	CastExpression	( int ) ( sizeof ( voidpf ) )		6195522	0					
ANR	6195598	CastTarget	int		6195522	0					
ANR	6195599	SizeofExpression	sizeof ( voidpf )		6195522	1					
ANR	6195600	Sizeof	sizeof		6195522	0					
ANR	6195601	SizeofOperand	voidpf		6195522	1					
ANR	6195602	CompoundStatement		17:35:431:431	6195522	1					
ANR	6195603	Label	case 2 :	50:4:1513:1519	6195522	0	True				
ANR	6195604	BreakStatement	break ;	50:16:1525:1530	6195522	1	True				
ANR	6195605	Label	case 4 :	51:4:1536:1542	6195522	2	True				
ANR	6195606	ExpressionStatement	flags += 1 << 4	51:16:1548:1563	6195522	3	True				
ANR	6195607	AssignmentExpression	flags += 1 << 4		6195522	0		+=			
ANR	6195608	Identifier	flags		6195522	0					
ANR	6195609	ShiftExpression	1 << 4		6195522	1		<<			
ANR	6195610	PrimaryExpression	1		6195522	0					
ANR	6195611	PrimaryExpression	4		6195522	1					
ANR	6195612	BreakStatement	break ;	51:40:1572:1577	6195522	4	True				
ANR	6195613	Label	case 8 :	52:4:1583:1589	6195522	5	True				
ANR	6195614	ExpressionStatement	flags += 2 << 4	52:16:1595:1610	6195522	6	True				
ANR	6195615	AssignmentExpression	flags += 2 << 4		6195522	0		+=			
ANR	6195616	Identifier	flags		6195522	0					
ANR	6195617	ShiftExpression	2 << 4		6195522	1		<<			
ANR	6195618	PrimaryExpression	2		6195522	0					
ANR	6195619	PrimaryExpression	4		6195522	1					
ANR	6195620	BreakStatement	break ;	52:40:1619:1624	6195522	7	True				
ANR	6195621	Label	default :	53:4:1630:1637	6195522	8	True				
ANR	6195622	Identifier	default		6195522	0					
ANR	6195623	ExpressionStatement	flags += 3 << 4	53:16:1642:1657	6195522	9	True				
ANR	6195624	AssignmentExpression	flags += 3 << 4		6195522	0		+=			
ANR	6195625	Identifier	flags		6195522	0					
ANR	6195626	ShiftExpression	3 << 4		6195522	1		<<			
ANR	6195627	PrimaryExpression	3		6195522	0					
ANR	6195628	PrimaryExpression	4		6195522	1					
ANR	6195629	SwitchStatement	switch ( ( int ) ( sizeof ( z_off_t ) ) )		6195522	5					
ANR	6195630	Condition	( int ) ( sizeof ( z_off_t ) )	55:12:1677:1698	6195522	0	True				
ANR	6195631	CastExpression	( int ) ( sizeof ( z_off_t ) )		6195522	0					
ANR	6195632	CastTarget	int		6195522	0					
ANR	6195633	SizeofExpression	sizeof ( z_off_t )		6195522	1					
ANR	6195634	Sizeof	sizeof		6195522	0					
ANR	6195635	SizeofOperand	z_off_t		6195522	1					
ANR	6195636	CompoundStatement		23:36:625:625	6195522	1					
ANR	6195637	Label	case 2 :	56:4:1707:1713	6195522	0	True				
ANR	6195638	BreakStatement	break ;	56:16:1719:1724	6195522	1	True				
ANR	6195639	Label	case 4 :	57:4:1730:1736	6195522	2	True				
ANR	6195640	ExpressionStatement	flags += 1 << 6	57:16:1742:1757	6195522	3	True				
ANR	6195641	AssignmentExpression	flags += 1 << 6		6195522	0		+=			
ANR	6195642	Identifier	flags		6195522	0					
ANR	6195643	ShiftExpression	1 << 6		6195522	1		<<			
ANR	6195644	PrimaryExpression	1		6195522	0					
ANR	6195645	PrimaryExpression	6		6195522	1					
ANR	6195646	BreakStatement	break ;	57:40:1766:1771	6195522	4	True				
ANR	6195647	Label	case 8 :	58:4:1777:1783	6195522	5	True				
ANR	6195648	ExpressionStatement	flags += 2 << 6	58:16:1789:1804	6195522	6	True				
ANR	6195649	AssignmentExpression	flags += 2 << 6		6195522	0		+=			
ANR	6195650	Identifier	flags		6195522	0					
ANR	6195651	ShiftExpression	2 << 6		6195522	1		<<			
ANR	6195652	PrimaryExpression	2		6195522	0					
ANR	6195653	PrimaryExpression	6		6195522	1					
ANR	6195654	BreakStatement	break ;	58:40:1813:1818	6195522	7	True				
ANR	6195655	Label	default :	59:4:1824:1831	6195522	8	True				
ANR	6195656	Identifier	default		6195522	0					
ANR	6195657	ExpressionStatement	flags += 3 << 6	59:16:1836:1851	6195522	9	True				
ANR	6195658	AssignmentExpression	flags += 3 << 6		6195522	0		+=			
ANR	6195659	Identifier	flags		6195522	0					
ANR	6195660	ShiftExpression	3 << 6		6195522	1		<<			
ANR	6195661	PrimaryExpression	3		6195522	0					
ANR	6195662	PrimaryExpression	6		6195522	1					
ANR	6195663	ExpressionStatement	flags += 1 << 8	62:4:1881:1896	6195522	6	True				
ANR	6195664	AssignmentExpression	flags += 1 << 8		6195522	0		+=			
ANR	6195665	Identifier	flags		6195522	0					
ANR	6195666	ShiftExpression	1 << 8		6195522	1		<<			
ANR	6195667	PrimaryExpression	1		6195522	0					
ANR	6195668	PrimaryExpression	8		6195522	1					
ANR	6195669	ExpressionStatement	flags += 1 << 9	65:4:1946:1961	6195522	7	True				
ANR	6195670	AssignmentExpression	flags += 1 << 9		6195522	0		+=			
ANR	6195671	Identifier	flags		6195522	0					
ANR	6195672	ShiftExpression	1 << 9		6195522	1		<<			
ANR	6195673	PrimaryExpression	1		6195522	0					
ANR	6195674	PrimaryExpression	9		6195522	1					
ANR	6195675	ExpressionStatement	flags += 1 << 10	68:4:1993:2009	6195522	8	True				
ANR	6195676	AssignmentExpression	flags += 1 << 10		6195522	0		+=			
ANR	6195677	Identifier	flags		6195522	0					
ANR	6195678	ShiftExpression	1 << 10		6195522	1		<<			
ANR	6195679	PrimaryExpression	1		6195522	0					
ANR	6195680	PrimaryExpression	10		6195522	1					
ANR	6195681	ExpressionStatement	flags += 1 << 12	71:4:2040:2056	6195522	9	True				
ANR	6195682	AssignmentExpression	flags += 1 << 12		6195522	0		+=			
ANR	6195683	Identifier	flags		6195522	0					
ANR	6195684	ShiftExpression	1 << 12		6195522	1		<<			
ANR	6195685	PrimaryExpression	1		6195522	0					
ANR	6195686	PrimaryExpression	12		6195522	1					
ANR	6195687	ExpressionStatement	flags += 1 << 13	74:4:2094:2110	6195522	10	True				
ANR	6195688	AssignmentExpression	flags += 1 << 13		6195522	0		+=			
ANR	6195689	Identifier	flags		6195522	0					
ANR	6195690	ShiftExpression	1 << 13		6195522	1		<<			
ANR	6195691	PrimaryExpression	1		6195522	0					
ANR	6195692	PrimaryExpression	13		6195522	1					
ANR	6195693	ExpressionStatement	flags += 1L << 16	77:4:2144:2161	6195522	11	True				
ANR	6195694	AssignmentExpression	flags += 1L << 16		6195522	0		+=			
ANR	6195695	Identifier	flags		6195522	0					
ANR	6195696	ShiftExpression	1L << 16		6195522	1		<<			
ANR	6195697	PrimaryExpression	1L		6195522	0					
ANR	6195698	PrimaryExpression	16		6195522	1					
ANR	6195699	ExpressionStatement	flags += 1L << 17	80:4:2189:2206	6195522	12	True				
ANR	6195700	AssignmentExpression	flags += 1L << 17		6195522	0		+=			
ANR	6195701	Identifier	flags		6195522	0					
ANR	6195702	ShiftExpression	1L << 17		6195522	1		<<			
ANR	6195703	PrimaryExpression	1L		6195522	0					
ANR	6195704	PrimaryExpression	17		6195522	1					
ANR	6195705	ExpressionStatement	flags += 1L << 20	83:4:2247:2264	6195522	13	True				
ANR	6195706	AssignmentExpression	flags += 1L << 20		6195522	0		+=			
ANR	6195707	Identifier	flags		6195522	0					
ANR	6195708	ShiftExpression	1L << 20		6195522	1		<<			
ANR	6195709	PrimaryExpression	1L		6195522	0					
ANR	6195710	PrimaryExpression	20		6195522	1					
ANR	6195711	ExpressionStatement	flags += 1L << 21	86:4:2292:2309	6195522	14	True				
ANR	6195712	AssignmentExpression	flags += 1L << 21		6195522	0		+=			
ANR	6195713	Identifier	flags		6195522	0					
ANR	6195714	ShiftExpression	1L << 21		6195522	1		<<			
ANR	6195715	PrimaryExpression	1L		6195522	0					
ANR	6195716	PrimaryExpression	21		6195522	1					
ANR	6195717	Statement	ifdef	89:3:2367:2371	6195522	15	True				
ANR	6195718	Statement	NO_vsnprintf	89:9:2373:2384	6195522	16	True				
ANR	6195719	ExpressionStatement	flags += 1L << 25	90:4:2390:2407	6195522	17	True				
ANR	6195720	AssignmentExpression	flags += 1L << 25		6195522	0		+=			
ANR	6195721	Identifier	flags		6195522	0					
ANR	6195722	ShiftExpression	1L << 25		6195522	1		<<			
ANR	6195723	PrimaryExpression	1L		6195522	0					
ANR	6195724	PrimaryExpression	25		6195522	1					
ANR	6195725	Statement	ifdef	91:5:2414:2418	6195522	18	True				
ANR	6195726	Statement	HAS_vsprintf_void	91:11:2420:2436	6195522	19	True				
ANR	6195727	ExpressionStatement	flags += 1L << 26	92:4:2442:2459	6195522	20	True				
ANR	6195728	AssignmentExpression	flags += 1L << 26		6195522	0		+=			
ANR	6195729	Identifier	flags		6195522	0					
ANR	6195730	ShiftExpression	1L << 26		6195522	1		<<			
ANR	6195731	PrimaryExpression	1L		6195522	0					
ANR	6195732	PrimaryExpression	26		6195522	1					
ANR	6195733	Statement	endif	93:5:2466:2470	6195522	21	True				
ANR	6195734	ReturnType	uLong ZEXPORT		6195522	1					
ANR	6195735	Identifier	zlibCompileFlags		6195522	2					
ANR	6195736	ParameterList			6195522	3					
ANR	6195737	CFGEntryNode	ENTRY		6195522		True				
ANR	6195738	CFGExitNode	EXIT		6195522		True				
ANR	6195739	Symbol	flags		6195522						
ANR	6195740	DeclStmt									
ANR	6195741	Decl							endif int ZLIB_INTERNAL	endif int ZLIB_INTERNAL	z_verbose
ANR	6195742	DeclStmt									
ANR	6195743	Decl							char	char *	m
ANR	6195744	DeclStmt									
ANR	6195745	Decl							int	int	err
ANR	6195746	DeclStmt									
ANR	6195747	Decl							int	int	errno
ANR	6195748	DeclStmt									
ANR	6195749	Decl							Bytef	Bytef *	dest
ANR	6195750	DeclStmt									
ANR	6195751	Decl							const Bytef	const Bytef *	source
ANR	6195752	DeclStmt									
ANR	6195753	Decl							uInt	uInt	len
ANR	6195754	DeclStmt									
ANR	6195755	Decl							const Bytef	const Bytef *	s1
ANR	6195756	DeclStmt									
ANR	6195757	Decl							const Bytef	const Bytef *	s2
ANR	6195758	DeclStmt									
ANR	6195759	Decl							uInt	uInt	len
ANR	6195760	DeclStmt									
ANR	6195761	Decl							uInt	uInt	j
ANR	6195762	DeclStmt									
ANR	6195763	Decl							Bytef	Bytef *	dest
ANR	6195764	DeclStmt									
ANR	6195765	Decl							uInt	uInt	len
ANR	6195766	DeclStmt									
ANR	6195767	Decl							local int	local int	next_ptr
ANR	6195768	ClassDef	ptr_table_s	204:8:4539:4611							
ANR	6195769	DeclStmt									
ANR	6195770	Decl							voidpf	voidpf	org_ptr
ANR	6195771	DeclStmt									
ANR	6195772	Decl							voidpf	voidpf	new_ptr
ANR	6195773	DeclStmt									
ANR	6195774	Decl							ptr_table_s	ptr_table_s	ptr_table
ANR	6195775	DeclStmt									
ANR	6195776	Decl							local ptr_table	local ptr_table [ MAX_PTR ]	table
ANR	6195777	Function	zcalloc	217:0:4989:5707							
ANR	6195778	FunctionDef	"zcalloc (voidpf opaque , unsigned items , unsigned size)"		6195777	0					
ANR	6195779	CompoundStatement		218:0:5065:5707	6195777	0					
ANR	6195780	IdentifierDeclStatement	voidpf buf ;	219:4:5071:5081	6195777	0	True				
ANR	6195781	IdentifierDecl	buf		6195777	0					
ANR	6195782	IdentifierDeclType	voidpf		6195777	0					
ANR	6195783	Identifier	buf		6195777	1					
ANR	6195784	IdentifierDeclStatement	ulg bsize = ( ulg ) items * size ;	220:4:5087:5114	6195777	1	True				
ANR	6195785	IdentifierDecl	bsize = ( ulg ) items * size		6195777	0					
ANR	6195786	IdentifierDeclType	ulg		6195777	0					
ANR	6195787	Identifier	bsize		6195777	1					
ANR	6195788	AssignmentExpression	bsize = ( ulg ) items * size		6195777	2		=			
ANR	6195789	Identifier	bsize		6195777	0					
ANR	6195790	MultiplicativeExpression	( ulg ) items * size		6195777	1		*			
ANR	6195791	CastExpression	( ulg ) items		6195777	0					
ANR	6195792	CastTarget	ulg		6195777	0					
ANR	6195793	Identifier	items		6195777	1					
ANR	6195794	Identifier	size		6195777	1					
ANR	6195795	ExpressionStatement	( void ) opaque	222:4:5121:5133	6195777	2	True				
ANR	6195796	CastExpression	( void ) opaque		6195777	0					
ANR	6195797	CastTarget	void		6195777	0					
ANR	6195798	Identifier	opaque		6195777	1					
ANR	6195799	IfStatement	if ( bsize < 65520L )		6195777	3					
ANR	6195800	Condition	bsize < 65520L	227:8:5295:5308	6195777	0	True				
ANR	6195801	RelationalExpression	bsize < 65520L		6195777	0		<			
ANR	6195802	Identifier	bsize		6195777	0					
ANR	6195803	PrimaryExpression	65520L		6195777	1					
ANR	6195804	CompoundStatement		10:24:245:245	6195777	1					
ANR	6195805	ExpressionStatement	buf = farmalloc ( bsize )	228:8:5321:5343	6195777	0	True				
ANR	6195806	AssignmentExpression	buf = farmalloc ( bsize )		6195777	0		=			
ANR	6195807	Identifier	buf		6195777	0					
ANR	6195808	CallExpression	farmalloc ( bsize )		6195777	1					
ANR	6195809	Callee	farmalloc		6195777	0					
ANR	6195810	Identifier	farmalloc		6195777	0					
ANR	6195811	ArgumentList	bsize		6195777	1					
ANR	6195812	Argument	bsize		6195777	0					
ANR	6195813	Identifier	bsize		6195777	0					
ANR	6195814	IfStatement	if ( * ( ush * ) & buf != 0 )		6195777	1					
ANR	6195815	Condition	* ( ush * ) & buf != 0	229:12:5357:5372	6195777	0	True				
ANR	6195816	EqualityExpression	* ( ush * ) & buf != 0		6195777	0		!=			
ANR	6195817	UnaryOperationExpression	* ( ush * ) & buf		6195777	0					
ANR	6195818	UnaryOperator	*		6195777	0					
ANR	6195819	CastExpression	( ush * ) & buf		6195777	1					
ANR	6195820	CastTarget	ush *		6195777	0					
ANR	6195821	UnaryOperationExpression	& buf		6195777	1					
ANR	6195822	UnaryOperator	&		6195777	0					
ANR	6195823	Identifier	buf		6195777	1					
ANR	6195824	PrimaryExpression	0		6195777	1					
ANR	6195825	ReturnStatement	return buf ;	229:30:5375:5385	6195777	1	True				
ANR	6195826	Identifier	buf		6195777	0					
ANR	6195827	ElseStatement	else		6195777	0					
ANR	6195828	CompoundStatement		13:11:332:332	6195777	0					
ANR	6195829	ExpressionStatement	buf = farmalloc ( bsize + 16L )	231:8:5408:5436	6195777	0	True				
ANR	6195830	AssignmentExpression	buf = farmalloc ( bsize + 16L )		6195777	0		=			
ANR	6195831	Identifier	buf		6195777	0					
ANR	6195832	CallExpression	farmalloc ( bsize + 16L )		6195777	1					
ANR	6195833	Callee	farmalloc		6195777	0					
ANR	6195834	Identifier	farmalloc		6195777	0					
ANR	6195835	ArgumentList	bsize + 16L		6195777	1					
ANR	6195836	Argument	bsize + 16L		6195777	0					
ANR	6195837	AdditiveExpression	bsize + 16L		6195777	0		+			
ANR	6195838	Identifier	bsize		6195777	0					
ANR	6195839	PrimaryExpression	16L		6195777	1					
ANR	6195840	IfStatement	if ( buf == NULL || next_ptr >= MAX_PTR )		6195777	4					
ANR	6195841	Condition	buf == NULL || next_ptr >= MAX_PTR	233:8:5452:5485	6195777	0	True				
ANR	6195842	OrExpression	buf == NULL || next_ptr >= MAX_PTR		6195777	0		||			
ANR	6195843	EqualityExpression	buf == NULL		6195777	0		==			
ANR	6195844	Identifier	buf		6195777	0					
ANR	6195845	Identifier	NULL		6195777	1					
ANR	6195846	RelationalExpression	next_ptr >= MAX_PTR		6195777	1		>=			
ANR	6195847	Identifier	next_ptr		6195777	0					
ANR	6195848	Identifier	MAX_PTR		6195777	1					
ANR	6195849	ReturnStatement	return NULL ;	233:44:5488:5499	6195777	1	True				
ANR	6195850	Identifier	NULL		6195777	0					
ANR	6195851	ExpressionStatement	table [ next_ptr ] . org_ptr = buf	234:4:5505:5534	6195777	5	True				
ANR	6195852	AssignmentExpression	table [ next_ptr ] . org_ptr = buf		6195777	0		=			
ANR	6195853	MemberAccess	table [ next_ptr ] . org_ptr		6195777	0					
ANR	6195854	ArrayIndexing	table [ next_ptr ]		6195777	0					
ANR	6195855	Identifier	table		6195777	0					
ANR	6195856	Identifier	next_ptr		6195777	1					
ANR	6195857	Identifier	org_ptr		6195777	1					
ANR	6195858	Identifier	buf		6195777	1					
ANR	6195859	ExpressionStatement	* ( ( ush * ) & buf + 1 ) += ( ( ush ) ( ( uch * ) buf - 0 ) + 15 ) >> 4	237:4:5582:5631	6195777	6	True				
ANR	6195860	AssignmentExpression	* ( ( ush * ) & buf + 1 ) += ( ( ush ) ( ( uch * ) buf - 0 ) + 15 ) >> 4		6195777	0		+=			
ANR	6195861	UnaryOperationExpression	* ( ( ush * ) & buf + 1 )		6195777	0					
ANR	6195862	UnaryOperator	*		6195777	0					
ANR	6195863	AdditiveExpression	( ush * ) & buf + 1		6195777	1		+			
ANR	6195864	CastExpression	( ush * ) & buf		6195777	0					
ANR	6195865	CastTarget	ush *		6195777	0					
ANR	6195866	UnaryOperationExpression	& buf		6195777	1					
ANR	6195867	UnaryOperator	&		6195777	0					
ANR	6195868	Identifier	buf		6195777	1					
ANR	6195869	PrimaryExpression	1		6195777	1					
ANR	6195870	ShiftExpression	( ( ush ) ( ( uch * ) buf - 0 ) + 15 ) >> 4		6195777	1		>>			
ANR	6195871	AdditiveExpression	( ush ) ( ( uch * ) buf - 0 ) + 15		6195777	0		+			
ANR	6195872	CastExpression	( ush ) ( ( uch * ) buf - 0 )		6195777	0					
ANR	6195873	CastTarget	ush		6195777	0					
ANR	6195874	AdditiveExpression	( uch * ) buf - 0		6195777	1		-			
ANR	6195875	CastExpression	( uch * ) buf		6195777	0					
ANR	6195876	CastTarget	uch *		6195777	0					
ANR	6195877	Identifier	buf		6195777	1					
ANR	6195878	PrimaryExpression	0		6195777	1					
ANR	6195879	PrimaryExpression	15		6195777	1					
ANR	6195880	PrimaryExpression	4		6195777	1					
ANR	6195881	ExpressionStatement	* ( ush * ) & buf = 0	238:4:5637:5652	6195777	7	True				
ANR	6195882	AssignmentExpression	* ( ush * ) & buf = 0		6195777	0		=			
ANR	6195883	UnaryOperationExpression	* ( ush * ) & buf		6195777	0					
ANR	6195884	UnaryOperator	*		6195777	0					
ANR	6195885	CastExpression	( ush * ) & buf		6195777	1					
ANR	6195886	CastTarget	ush *		6195777	0					
ANR	6195887	UnaryOperationExpression	& buf		6195777	1					
ANR	6195888	UnaryOperator	&		6195777	0					
ANR	6195889	Identifier	buf		6195777	1					
ANR	6195890	PrimaryExpression	0		6195777	1					
ANR	6195891	ExpressionStatement	table [ next_ptr ++ ] . new_ptr = buf	239:4:5658:5689	6195777	8	True				
ANR	6195892	AssignmentExpression	table [ next_ptr ++ ] . new_ptr = buf		6195777	0		=			
ANR	6195893	MemberAccess	table [ next_ptr ++ ] . new_ptr		6195777	0					
ANR	6195894	ArrayIndexing	table [ next_ptr ++ ]		6195777	0					
ANR	6195895	Identifier	table		6195777	0					
ANR	6195896	PostIncDecOperationExpression	next_ptr ++		6195777	1					
ANR	6195897	Identifier	next_ptr		6195777	0					
ANR	6195898	IncDec	++		6195777	1					
ANR	6195899	Identifier	new_ptr		6195777	1					
ANR	6195900	Identifier	buf		6195777	1					
ANR	6195901	ReturnStatement	return buf ;	240:4:5695:5705	6195777	9	True				
ANR	6195902	Identifier	buf		6195777	0					
ANR	6195903	ReturnType	voidpf ZLIB_INTERNAL		6195777	1					
ANR	6195904	Identifier	zcalloc		6195777	2					
ANR	6195905	ParameterList	"voidpf opaque , unsigned items , unsigned size"		6195777	3					
ANR	6195906	Parameter	voidpf opaque	217:30:5019:5031	6195777	0	True				
ANR	6195907	ParameterType	voidpf		6195777	0					
ANR	6195908	Identifier	opaque		6195777	1					
ANR	6195909	Parameter	unsigned items	217:45:5034:5047	6195777	1	True				
ANR	6195910	ParameterType	unsigned		6195777	0					
ANR	6195911	Identifier	items		6195777	1					
ANR	6195912	Parameter	unsigned size	217:61:5050:5062	6195777	2	True				
ANR	6195913	ParameterType	unsigned		6195777	0					
ANR	6195914	Identifier	size		6195777	1					
ANR	6195915	CFGEntryNode	ENTRY		6195777		True				
ANR	6195916	CFGExitNode	EXIT		6195777		True				
ANR	6195917	Symbol	opaque		6195777						
ANR	6195918	Symbol	NULL		6195777						
ANR	6195919	Symbol	next_ptr		6195777						
ANR	6195920	Symbol	* table		6195777						
ANR	6195921	Symbol	* ( ush * ) & buf		6195777						
ANR	6195922	Symbol	buf		6195777						
ANR	6195923	Symbol	* ( ( ush * ) & buf + 1 )		6195777						
ANR	6195924	Symbol	size		6195777						
ANR	6195925	Symbol	bsize		6195777						
ANR	6195926	Symbol	farmalloc		6195777						
ANR	6195927	Symbol	table [ next_ptr ] . org_ptr		6195777						
ANR	6195928	Symbol	MAX_PTR		6195777						
ANR	6195929	Symbol	items		6195777						
ANR	6195930	Symbol	& buf		6195777						
ANR	6195931	Symbol	* next_ptr		6195777						
ANR	6195932	Symbol	table		6195777						
ANR	6195933	Symbol	table [ next_ptr ++ ] . new_ptr		6195777						
ANR	6195934	Function	zcfree	243:0:5710:6204							
ANR	6195935	FunctionDef	"zcfree (voidpf opaque , voidpf ptr)"		6195934	0					
ANR	6195936	CompoundStatement		244:0:5764:6204	6195934	0					
ANR	6195937	IdentifierDeclStatement	int n ;	245:4:5770:5775	6195934	0	True				
ANR	6195938	IdentifierDecl	n		6195934	0					
ANR	6195939	IdentifierDeclType	int		6195934	0					
ANR	6195940	Identifier	n		6195934	1					
ANR	6195941	ExpressionStatement	( void ) opaque	247:4:5782:5794	6195934	1	True				
ANR	6195942	CastExpression	( void ) opaque		6195934	0					
ANR	6195943	CastTarget	void		6195934	0					
ANR	6195944	Identifier	opaque		6195934	1					
ANR	6195945	IfStatement	if ( * ( ush * ) & ptr != 0 )		6195934	2					
ANR	6195946	Condition	* ( ush * ) & ptr != 0	249:8:5805:5820	6195934	0	True				
ANR	6195947	EqualityExpression	* ( ush * ) & ptr != 0		6195934	0		!=			
ANR	6195948	UnaryOperationExpression	* ( ush * ) & ptr		6195934	0					
ANR	6195949	UnaryOperator	*		6195934	0					
ANR	6195950	CastExpression	( ush * ) & ptr		6195934	1					
ANR	6195951	CastTarget	ush *		6195934	0					
ANR	6195952	UnaryOperationExpression	& ptr		6195934	1					
ANR	6195953	UnaryOperator	&		6195934	0					
ANR	6195954	Identifier	ptr		6195934	1					
ANR	6195955	PrimaryExpression	0		6195934	1					
ANR	6195956	CompoundStatement		6:26:58:58	6195934	1					
ANR	6195957	ExpressionStatement	farfree ( ptr )	250:8:5852:5864	6195934	0	True				
ANR	6195958	CallExpression	farfree ( ptr )		6195934	0					
ANR	6195959	Callee	farfree		6195934	0					
ANR	6195960	Identifier	farfree		6195934	0					
ANR	6195961	ArgumentList	ptr		6195934	1					
ANR	6195962	Argument	ptr		6195934	0					
ANR	6195963	Identifier	ptr		6195934	0					
ANR	6195964	ReturnStatement	return ;	251:8:5874:5880	6195934	1	True				
ANR	6195965	ForStatement	for ( n = 0 ; n < next_ptr ; n ++ )		6195934	3					
ANR	6195966	ForInit	n = 0 ;	254:9:5933:5938	6195934	0	True				
ANR	6195967	AssignmentExpression	n = 0		6195934	0		=			
ANR	6195968	Identifier	n		6195934	0					
ANR	6195969	PrimaryExpression	0		6195934	1					
ANR	6195970	Condition	n < next_ptr	254:16:5940:5951	6195934	1	True				
ANR	6195971	RelationalExpression	n < next_ptr		6195934	0		<			
ANR	6195972	Identifier	n		6195934	0					
ANR	6195973	Identifier	next_ptr		6195934	1					
ANR	6195974	PostIncDecOperationExpression	n ++	254:30:5954:5956	6195934	2	True				
ANR	6195975	Identifier	n		6195934	0					
ANR	6195976	IncDec	++		6195934	1					
ANR	6195977	CompoundStatement		11:35:194:194	6195934	3					
ANR	6195978	IfStatement	if ( ptr != table [ n ] . new_ptr )		6195934	0					
ANR	6195979	Condition	ptr != table [ n ] . new_ptr	255:12:5973:5995	6195934	0	True				
ANR	6195980	EqualityExpression	ptr != table [ n ] . new_ptr		6195934	0		!=			
ANR	6195981	Identifier	ptr		6195934	0					
ANR	6195982	MemberAccess	table [ n ] . new_ptr		6195934	1					
ANR	6195983	ArrayIndexing	table [ n ]		6195934	0					
ANR	6195984	Identifier	table		6195934	0					
ANR	6195985	Identifier	n		6195934	1					
ANR	6195986	Identifier	new_ptr		6195934	1					
ANR	6195987	ContinueStatement	continue ;	255:37:5998:6006	6195934	1	True				
ANR	6195988	ExpressionStatement	farfree ( table [ n ] . org_ptr )	257:8:6017:6042	6195934	1	True				
ANR	6195989	CallExpression	farfree ( table [ n ] . org_ptr )		6195934	0					
ANR	6195990	Callee	farfree		6195934	0					
ANR	6195991	Identifier	farfree		6195934	0					
ANR	6195992	ArgumentList	table [ n ] . org_ptr		6195934	1					
ANR	6195993	Argument	table [ n ] . org_ptr		6195934	0					
ANR	6195994	MemberAccess	table [ n ] . org_ptr		6195934	0					
ANR	6195995	ArrayIndexing	table [ n ]		6195934	0					
ANR	6195996	Identifier	table		6195934	0					
ANR	6195997	Identifier	n		6195934	1					
ANR	6195998	Identifier	org_ptr		6195934	1					
ANR	6195999	WhileStatement	while ( ++ n < next_ptr )		6195934	2					
ANR	6196000	Condition	++ n < next_ptr	258:15:6059:6072	6195934	0	True				
ANR	6196001	RelationalExpression	++ n < next_ptr		6195934	0		<			
ANR	6196002	UnaryExpression	++ n		6195934	0					
ANR	6196003	IncDec	++		6195934	0					
ANR	6196004	Identifier	n		6195934	1					
ANR	6196005	Identifier	next_ptr		6195934	1					
ANR	6196006	CompoundStatement		15:31:310:310	6195934	1					
ANR	6196007	ExpressionStatement	table [ n - 1 ] = table [ n ]	259:12:6089:6110	6195934	0	True				
ANR	6196008	AssignmentExpression	table [ n - 1 ] = table [ n ]		6195934	0		=			
ANR	6196009	ArrayIndexing	table [ n - 1 ]		6195934	0					
ANR	6196010	Identifier	table		6195934	0					
ANR	6196011	AdditiveExpression	n - 1		6195934	1		-			
ANR	6196012	Identifier	n		6195934	0					
ANR	6196013	PrimaryExpression	1		6195934	1					
ANR	6196014	ArrayIndexing	table [ n ]		6195934	1					
ANR	6196015	Identifier	table		6195934	0					
ANR	6196016	Identifier	n		6195934	1					
ANR	6196017	ExpressionStatement	next_ptr --	261:8:6130:6140	6195934	3	True				
ANR	6196018	PostIncDecOperationExpression	next_ptr --		6195934	0					
ANR	6196019	Identifier	next_ptr		6195934	0					
ANR	6196020	IncDec	--		6195934	1					
ANR	6196021	ReturnStatement	return ;	262:8:6150:6156	6195934	4	True				
ANR	6196022	ExpressionStatement	"Assert ( 0 , ""zcfree: ptr not found"" )"	264:4:6168:6202	6195934	4	True				
ANR	6196023	CallExpression	"Assert ( 0 , ""zcfree: ptr not found"" )"		6195934	0					
ANR	6196024	Callee	Assert		6195934	0					
ANR	6196025	Identifier	Assert		6195934	0					
ANR	6196026	ArgumentList	0		6195934	1					
ANR	6196027	Argument	0		6195934	0					
ANR	6196028	PrimaryExpression	0		6195934	0					
ANR	6196029	Argument	"""zcfree: ptr not found"""		6195934	1					
ANR	6196030	PrimaryExpression	"""zcfree: ptr not found"""		6195934	0					
ANR	6196031	ReturnType	void ZLIB_INTERNAL		6195934	1					
ANR	6196032	Identifier	zcfree		6195934	2					
ANR	6196033	ParameterList	"voidpf opaque , voidpf ptr"		6195934	3					
ANR	6196034	Parameter	voidpf opaque	243:27:5737:5749	6195934	0	True				
ANR	6196035	ParameterType	voidpf		6195934	0					
ANR	6196036	Identifier	opaque		6195934	1					
ANR	6196037	Parameter	voidpf ptr	243:42:5752:5761	6195934	1	True				
ANR	6196038	ParameterType	voidpf		6195934	0					
ANR	6196039	Identifier	ptr		6195934	1					
ANR	6196040	CFGEntryNode	ENTRY		6195934		True				
ANR	6196041	CFGExitNode	EXIT		6195934		True				
ANR	6196042	Symbol	opaque		6195934						
ANR	6196043	Symbol	& ptr		6195934						
ANR	6196044	Symbol	table [ n ] . new_ptr		6195934						
ANR	6196045	Symbol	* ( ush * ) & ptr		6195934						
ANR	6196046	Symbol	* n		6195934						
ANR	6196047	Symbol	next_ptr		6195934						
ANR	6196048	Symbol	* table		6195934						
ANR	6196049	Symbol	table [ n ] . org_ptr		6195934						
ANR	6196050	Symbol	n		6195934						
ANR	6196051	Symbol	table		6195934						
ANR	6196052	Symbol	ptr		6195934						
ANR	6196053	Function	zcalloc	280:0:6407:6534							
ANR	6196054	FunctionDef	"zcalloc (voidpf opaque , uInt items , uInt size)"		6196053	0					
ANR	6196055	CompoundStatement		281:0:6475:6534	6196053	0					
ANR	6196056	ExpressionStatement	( void ) opaque	282:4:6481:6493	6196053	0	True				
ANR	6196057	CastExpression	( void ) opaque		6196053	0					
ANR	6196058	CastTarget	void		6196053	0					
ANR	6196059	Identifier	opaque		6196053	1					
ANR	6196060	ReturnStatement	"return _halloc ( ( long ) items , size ) ;"	283:4:6499:6532	6196053	1	True				
ANR	6196061	CallExpression	"_halloc ( ( long ) items , size )"		6196053	0					
ANR	6196062	Callee	_halloc		6196053	0					
ANR	6196063	Identifier	_halloc		6196053	0					
ANR	6196064	ArgumentList	( long ) items		6196053	1					
ANR	6196065	Argument	( long ) items		6196053	0					
ANR	6196066	CastExpression	( long ) items		6196053	0					
ANR	6196067	CastTarget	long		6196053	0					
ANR	6196068	Identifier	items		6196053	1					
ANR	6196069	Argument	size		6196053	1					
ANR	6196070	Identifier	size		6196053	0					
ANR	6196071	ReturnType	voidpf ZLIB_INTERNAL		6196053	1					
ANR	6196072	Identifier	zcalloc		6196053	2					
ANR	6196073	ParameterList	"voidpf opaque , uInt items , uInt size"		6196053	3					
ANR	6196074	Parameter	voidpf opaque	280:30:6437:6449	6196053	0	True				
ANR	6196075	ParameterType	voidpf		6196053	0					
ANR	6196076	Identifier	opaque		6196053	1					
ANR	6196077	Parameter	uInt items	280:45:6452:6461	6196053	1	True				
ANR	6196078	ParameterType	uInt		6196053	0					
ANR	6196079	Identifier	items		6196053	1					
ANR	6196080	Parameter	uInt size	280:57:6464:6472	6196053	2	True				
ANR	6196081	ParameterType	uInt		6196053	0					
ANR	6196082	Identifier	size		6196053	1					
ANR	6196083	CFGEntryNode	ENTRY		6196053		True				
ANR	6196084	CFGExitNode	EXIT		6196053		True				
ANR	6196085	Symbol	opaque		6196053						
ANR	6196086	Symbol	size		6196053						
ANR	6196087	Symbol	items		6196053						
ANR	6196088	Symbol	_halloc		6196053						
ANR	6196089	Function	zcfree	286:0:6537:6628							
ANR	6196090	FunctionDef	"zcfree (voidpf opaque , voidpf ptr)"		6196089	0					
ANR	6196091	CompoundStatement		287:0:6591:6628	6196089	0					
ANR	6196092	ExpressionStatement	( void ) opaque	288:4:6597:6609	6196089	0	True				
ANR	6196093	CastExpression	( void ) opaque		6196089	0					
ANR	6196094	CastTarget	void		6196089	0					
ANR	6196095	Identifier	opaque		6196089	1					
ANR	6196096	ExpressionStatement	_hfree ( ptr )	289:4:6615:6626	6196089	1	True				
ANR	6196097	CallExpression	_hfree ( ptr )		6196089	0					
ANR	6196098	Callee	_hfree		6196089	0					
ANR	6196099	Identifier	_hfree		6196089	0					
ANR	6196100	ArgumentList	ptr		6196089	1					
ANR	6196101	Argument	ptr		6196089	0					
ANR	6196102	Identifier	ptr		6196089	0					
ANR	6196103	ReturnType	void ZLIB_INTERNAL		6196089	1					
ANR	6196104	Identifier	zcfree		6196089	2					
ANR	6196105	ParameterList	"voidpf opaque , voidpf ptr"		6196089	3					
ANR	6196106	Parameter	voidpf opaque	286:27:6564:6576	6196089	0	True				
ANR	6196107	ParameterType	voidpf		6196089	0					
ANR	6196108	Identifier	opaque		6196089	1					
ANR	6196109	Parameter	voidpf ptr	286:42:6579:6588	6196089	1	True				
ANR	6196110	ParameterType	voidpf		6196089	0					
ANR	6196111	Identifier	ptr		6196089	1					
ANR	6196112	CFGEntryNode	ENTRY		6196089		True				
ANR	6196113	CFGExitNode	EXIT		6196089		True				
ANR	6196114	Symbol	opaque		6196089						
ANR	6196115	Symbol	ptr		6196089						
ANR	6196116	DeclStmt									
ANR	6196117	Decl							voidpf	voidpf	opaque
ANR	6196118	DeclStmt									
ANR	6196119	Decl							unsigned	unsigned	items
ANR	6196120	DeclStmt									
ANR	6196121	Decl							unsigned	unsigned	size
ANR	6196122	DeclStmt									
ANR	6196123	Decl							voidpf	voidpf	opaque
ANR	6196124	DeclStmt									
ANR	6196125	Decl							voidpf	voidpf	ptr
