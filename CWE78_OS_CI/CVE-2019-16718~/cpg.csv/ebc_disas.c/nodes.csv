command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1293123	File	data/converged/CVE-2019-16718~_radare2/ebc_disas.c								
ANR	1293124	DeclStmt									
ANR	1293125	Decl							int	int	len_chk_snprintf_
ANR	1293126	DeclStmt									
ANR	1293127	Decl							const char	const char * [ ]	instr_names
ANR	1293128	DeclStmt									
ANR	1293129	Decl							const char	const char * [ ]	dedic_regs
ANR	1293130	DeclStmt									
ANR	1293131	Decl							"int ( * ) ( const ut8 * , ebc_command_t * cmd )"	"int ( * ) ( const ut8 * , ebc_command_t * cmd )"	decode
ANR	1293132	ClassDef	ebc_index	88:8:1124:1294							
ANR	1293133	ClassDef	<unnamed>	89:1:1144:1195							
ANR	1293134	DeclStmt									
ANR	1293135	Decl									type
ANR	1293136	ClassDef	<unnamed>	90:1:1198:1247							
ANR	1293137	DeclStmt									
ANR	1293138	Decl									sign
ANR	1293139	DeclStmt									
ANR	1293140	Decl							ut8	ut8	a_width
ANR	1293141	DeclStmt									
ANR	1293142	Decl							ut32	ut32	c
ANR	1293143	DeclStmt									
ANR	1293144	Decl							ut32	ut32	n
ANR	1293145	DeclStmt									
ANR	1293146	Decl							ebc_index	ebc_index	ebc_index_t
ANR	1293147	Function	decode_index16	96:0:1297:1673							
ANR	1293148	FunctionDef	"decode_index16 (const ut8 * data , ebc_index_t * index)"		1293147	0					
ANR	1293149	CompoundStatement		96:63:1360:1673	1293147	0					
ANR	1293150	IdentifierDeclStatement	ut16 tmp = * ( ut16 * ) data ;	97:1:1363:1386	1293147	0	True				
ANR	1293151	IdentifierDecl	tmp = * ( ut16 * ) data		1293147	0					
ANR	1293152	IdentifierDeclType	ut16		1293147	0					
ANR	1293153	Identifier	tmp		1293147	1					
ANR	1293154	AssignmentExpression	tmp = * ( ut16 * ) data		1293147	2		=			
ANR	1293155	Identifier	tmp		1293147	0					
ANR	1293156	UnaryOperationExpression	* ( ut16 * ) data		1293147	1					
ANR	1293157	UnaryOperator	*		1293147	0					
ANR	1293158	CastExpression	( ut16 * ) data		1293147	1					
ANR	1293159	CastTarget	ut16 *		1293147	0					
ANR	1293160	Identifier	data		1293147	1					
ANR	1293161	ExpressionStatement	index -> type = EBC_INDEX16	98:1:1389:1414	1293147	1	True				
ANR	1293162	AssignmentExpression	index -> type = EBC_INDEX16		1293147	0		=			
ANR	1293163	PtrMemberAccess	index -> type		1293147	0					
ANR	1293164	Identifier	index		1293147	0					
ANR	1293165	Identifier	type		1293147	1					
ANR	1293166	Identifier	EBC_INDEX16		1293147	1					
ANR	1293167	ExpressionStatement	index -> sign = tmp & 0x8000 ? EBC_INDEX_PLUS : EBC_INDEX_MINUS	99:1:1417:1478	1293147	2	True				
ANR	1293168	AssignmentExpression	index -> sign = tmp & 0x8000 ? EBC_INDEX_PLUS : EBC_INDEX_MINUS		1293147	0		=			
ANR	1293169	PtrMemberAccess	index -> sign		1293147	0					
ANR	1293170	Identifier	index		1293147	0					
ANR	1293171	Identifier	sign		1293147	1					
ANR	1293172	ConditionalExpression	tmp & 0x8000 ? EBC_INDEX_PLUS : EBC_INDEX_MINUS		1293147	1					
ANR	1293173	Condition	tmp & 0x8000		1293147	0					
ANR	1293174	BitAndExpression	tmp & 0x8000		1293147	0		&			
ANR	1293175	Identifier	tmp		1293147	0					
ANR	1293176	PrimaryExpression	0x8000		1293147	1					
ANR	1293177	Identifier	EBC_INDEX_PLUS		1293147	1					
ANR	1293178	Identifier	EBC_INDEX_MINUS		1293147	2					
ANR	1293179	ExpressionStatement	index -> a_width = ( ( tmp >> 12 ) & EBC_N_BIT_MASK ( 2 ) ) * 2	100:1:1481:1535	1293147	3	True				
ANR	1293180	AssignmentExpression	index -> a_width = ( ( tmp >> 12 ) & EBC_N_BIT_MASK ( 2 ) ) * 2		1293147	0		=			
ANR	1293181	PtrMemberAccess	index -> a_width		1293147	0					
ANR	1293182	Identifier	index		1293147	0					
ANR	1293183	Identifier	a_width		1293147	1					
ANR	1293184	MultiplicativeExpression	( ( tmp >> 12 ) & EBC_N_BIT_MASK ( 2 ) ) * 2		1293147	1		*			
ANR	1293185	BitAndExpression	( tmp >> 12 ) & EBC_N_BIT_MASK ( 2 )		1293147	0		&			
ANR	1293186	ShiftExpression	tmp >> 12		1293147	0		>>			
ANR	1293187	Identifier	tmp		1293147	0					
ANR	1293188	PrimaryExpression	12		1293147	1					
ANR	1293189	CallExpression	EBC_N_BIT_MASK ( 2 )		1293147	1					
ANR	1293190	Callee	EBC_N_BIT_MASK		1293147	0					
ANR	1293191	Identifier	EBC_N_BIT_MASK		1293147	0					
ANR	1293192	ArgumentList	2		1293147	1					
ANR	1293193	Argument	2		1293147	0					
ANR	1293194	PrimaryExpression	2		1293147	0					
ANR	1293195	PrimaryExpression	2		1293147	1					
ANR	1293196	ExpressionStatement	index -> n = tmp & EBC_N_BIT_MASK ( index -> a_width )	101:1:1538:1585	1293147	4	True				
ANR	1293197	AssignmentExpression	index -> n = tmp & EBC_N_BIT_MASK ( index -> a_width )		1293147	0		=			
ANR	1293198	PtrMemberAccess	index -> n		1293147	0					
ANR	1293199	Identifier	index		1293147	0					
ANR	1293200	Identifier	n		1293147	1					
ANR	1293201	BitAndExpression	tmp & EBC_N_BIT_MASK ( index -> a_width )		1293147	1		&			
ANR	1293202	Identifier	tmp		1293147	0					
ANR	1293203	CallExpression	EBC_N_BIT_MASK ( index -> a_width )		1293147	1					
ANR	1293204	Callee	EBC_N_BIT_MASK		1293147	0					
ANR	1293205	Identifier	EBC_N_BIT_MASK		1293147	0					
ANR	1293206	ArgumentList	index -> a_width		1293147	1					
ANR	1293207	Argument	index -> a_width		1293147	0					
ANR	1293208	PtrMemberAccess	index -> a_width		1293147	0					
ANR	1293209	Identifier	index		1293147	0					
ANR	1293210	Identifier	a_width		1293147	1					
ANR	1293211	ExpressionStatement	index -> c = ( tmp >> index -> a_width ) & EBC_N_BIT_MASK ( 12 - index -> a_width )	102:1:1588:1660	1293147	5	True				
ANR	1293212	AssignmentExpression	index -> c = ( tmp >> index -> a_width ) & EBC_N_BIT_MASK ( 12 - index -> a_width )		1293147	0		=			
ANR	1293213	PtrMemberAccess	index -> c		1293147	0					
ANR	1293214	Identifier	index		1293147	0					
ANR	1293215	Identifier	c		1293147	1					
ANR	1293216	BitAndExpression	( tmp >> index -> a_width ) & EBC_N_BIT_MASK ( 12 - index -> a_width )		1293147	1		&			
ANR	1293217	ShiftExpression	tmp >> index -> a_width		1293147	0		>>			
ANR	1293218	Identifier	tmp		1293147	0					
ANR	1293219	PtrMemberAccess	index -> a_width		1293147	1					
ANR	1293220	Identifier	index		1293147	0					
ANR	1293221	Identifier	a_width		1293147	1					
ANR	1293222	CallExpression	EBC_N_BIT_MASK ( 12 - index -> a_width )		1293147	1					
ANR	1293223	Callee	EBC_N_BIT_MASK		1293147	0					
ANR	1293224	Identifier	EBC_N_BIT_MASK		1293147	0					
ANR	1293225	ArgumentList	12 - index -> a_width		1293147	1					
ANR	1293226	Argument	12 - index -> a_width		1293147	0					
ANR	1293227	AdditiveExpression	12 - index -> a_width		1293147	0		-			
ANR	1293228	PrimaryExpression	12		1293147	0					
ANR	1293229	PtrMemberAccess	index -> a_width		1293147	1					
ANR	1293230	Identifier	index		1293147	0					
ANR	1293231	Identifier	a_width		1293147	1					
ANR	1293232	ReturnStatement	return 0 ;	103:1:1663:1671	1293147	6	True				
ANR	1293233	PrimaryExpression	0		1293147	0					
ANR	1293234	ReturnType	static int		1293147	1					
ANR	1293235	Identifier	decode_index16		1293147	2					
ANR	1293236	ParameterList	"const ut8 * data , ebc_index_t * index"		1293147	3					
ANR	1293237	Parameter	const ut8 * data	96:26:1323:1337	1293147	0	True				
ANR	1293238	ParameterType	const ut8 *		1293147	0					
ANR	1293239	Identifier	data		1293147	1					
ANR	1293240	Parameter	ebc_index_t * index	96:43:1340:1357	1293147	1	True				
ANR	1293241	ParameterType	ebc_index_t *		1293147	0					
ANR	1293242	Identifier	index		1293147	1					
ANR	1293243	CFGEntryNode	ENTRY		1293147		True				
ANR	1293244	CFGExitNode	EXIT		1293147		True				
ANR	1293245	Symbol	index -> type		1293147						
ANR	1293246	Symbol	index -> n		1293147						
ANR	1293247	Symbol	index -> a_width		1293147						
ANR	1293248	Symbol	data		1293147						
ANR	1293249	Symbol	* index		1293147						
ANR	1293250	Symbol	index -> sign		1293147						
ANR	1293251	Symbol	index		1293147						
ANR	1293252	Symbol	index -> c		1293147						
ANR	1293253	Symbol	EBC_N_BIT_MASK		1293147						
ANR	1293254	Symbol	EBC_INDEX_MINUS		1293147						
ANR	1293255	Symbol	* ( ut16 * ) data		1293147						
ANR	1293256	Symbol	EBC_INDEX16		1293147						
ANR	1293257	Symbol	tmp		1293147						
ANR	1293258	Symbol	* data		1293147						
ANR	1293259	Symbol	EBC_INDEX_PLUS		1293147						
ANR	1293260	Function	decode_index32	106:0:1676:2061							
ANR	1293261	FunctionDef	"decode_index32 (const ut8 * data , ebc_index_t * index)"		1293260	0					
ANR	1293262	CompoundStatement		106:63:1739:2061	1293260	0					
ANR	1293263	IdentifierDeclStatement	ut32 tmp = * ( ut32 * ) data ;	107:1:1742:1765	1293260	0	True				
ANR	1293264	IdentifierDecl	tmp = * ( ut32 * ) data		1293260	0					
ANR	1293265	IdentifierDeclType	ut32		1293260	0					
ANR	1293266	Identifier	tmp		1293260	1					
ANR	1293267	AssignmentExpression	tmp = * ( ut32 * ) data		1293260	2		=			
ANR	1293268	Identifier	tmp		1293260	0					
ANR	1293269	UnaryOperationExpression	* ( ut32 * ) data		1293260	1					
ANR	1293270	UnaryOperator	*		1293260	0					
ANR	1293271	CastExpression	( ut32 * ) data		1293260	1					
ANR	1293272	CastTarget	ut32 *		1293260	0					
ANR	1293273	Identifier	data		1293260	1					
ANR	1293274	ExpressionStatement	index -> type = EBC_INDEX32	108:1:1768:1793	1293260	1	True				
ANR	1293275	AssignmentExpression	index -> type = EBC_INDEX32		1293260	0		=			
ANR	1293276	PtrMemberAccess	index -> type		1293260	0					
ANR	1293277	Identifier	index		1293260	0					
ANR	1293278	Identifier	type		1293260	1					
ANR	1293279	Identifier	EBC_INDEX32		1293260	1					
ANR	1293280	ExpressionStatement	index -> sign = tmp & EBC_NTH_BIT ( 31 ) ? EBC_INDEX_PLUS : EBC_INDEX_MINUS	109:1:1796:1866	1293260	2	True				
ANR	1293281	AssignmentExpression	index -> sign = tmp & EBC_NTH_BIT ( 31 ) ? EBC_INDEX_PLUS : EBC_INDEX_MINUS		1293260	0		=			
ANR	1293282	PtrMemberAccess	index -> sign		1293260	0					
ANR	1293283	Identifier	index		1293260	0					
ANR	1293284	Identifier	sign		1293260	1					
ANR	1293285	ConditionalExpression	tmp & EBC_NTH_BIT ( 31 ) ? EBC_INDEX_PLUS : EBC_INDEX_MINUS		1293260	1					
ANR	1293286	Condition	tmp & EBC_NTH_BIT ( 31 )		1293260	0					
ANR	1293287	BitAndExpression	tmp & EBC_NTH_BIT ( 31 )		1293260	0		&			
ANR	1293288	Identifier	tmp		1293260	0					
ANR	1293289	CallExpression	EBC_NTH_BIT ( 31 )		1293260	1					
ANR	1293290	Callee	EBC_NTH_BIT		1293260	0					
ANR	1293291	Identifier	EBC_NTH_BIT		1293260	0					
ANR	1293292	ArgumentList	31		1293260	1					
ANR	1293293	Argument	31		1293260	0					
ANR	1293294	PrimaryExpression	31		1293260	0					
ANR	1293295	Identifier	EBC_INDEX_PLUS		1293260	1					
ANR	1293296	Identifier	EBC_INDEX_MINUS		1293260	2					
ANR	1293297	ExpressionStatement	index -> a_width = ( ( tmp >> 28 ) & EBC_N_BIT_MASK ( 2 ) ) * 4	110:1:1869:1923	1293260	3	True				
ANR	1293298	AssignmentExpression	index -> a_width = ( ( tmp >> 28 ) & EBC_N_BIT_MASK ( 2 ) ) * 4		1293260	0		=			
ANR	1293299	PtrMemberAccess	index -> a_width		1293260	0					
ANR	1293300	Identifier	index		1293260	0					
ANR	1293301	Identifier	a_width		1293260	1					
ANR	1293302	MultiplicativeExpression	( ( tmp >> 28 ) & EBC_N_BIT_MASK ( 2 ) ) * 4		1293260	1		*			
ANR	1293303	BitAndExpression	( tmp >> 28 ) & EBC_N_BIT_MASK ( 2 )		1293260	0		&			
ANR	1293304	ShiftExpression	tmp >> 28		1293260	0		>>			
ANR	1293305	Identifier	tmp		1293260	0					
ANR	1293306	PrimaryExpression	28		1293260	1					
ANR	1293307	CallExpression	EBC_N_BIT_MASK ( 2 )		1293260	1					
ANR	1293308	Callee	EBC_N_BIT_MASK		1293260	0					
ANR	1293309	Identifier	EBC_N_BIT_MASK		1293260	0					
ANR	1293310	ArgumentList	2		1293260	1					
ANR	1293311	Argument	2		1293260	0					
ANR	1293312	PrimaryExpression	2		1293260	0					
ANR	1293313	PrimaryExpression	4		1293260	1					
ANR	1293314	ExpressionStatement	index -> n = tmp & EBC_N_BIT_MASK ( index -> a_width )	111:1:1926:1973	1293260	4	True				
ANR	1293315	AssignmentExpression	index -> n = tmp & EBC_N_BIT_MASK ( index -> a_width )		1293260	0		=			
ANR	1293316	PtrMemberAccess	index -> n		1293260	0					
ANR	1293317	Identifier	index		1293260	0					
ANR	1293318	Identifier	n		1293260	1					
ANR	1293319	BitAndExpression	tmp & EBC_N_BIT_MASK ( index -> a_width )		1293260	1		&			
ANR	1293320	Identifier	tmp		1293260	0					
ANR	1293321	CallExpression	EBC_N_BIT_MASK ( index -> a_width )		1293260	1					
ANR	1293322	Callee	EBC_N_BIT_MASK		1293260	0					
ANR	1293323	Identifier	EBC_N_BIT_MASK		1293260	0					
ANR	1293324	ArgumentList	index -> a_width		1293260	1					
ANR	1293325	Argument	index -> a_width		1293260	0					
ANR	1293326	PtrMemberAccess	index -> a_width		1293260	0					
ANR	1293327	Identifier	index		1293260	0					
ANR	1293328	Identifier	a_width		1293260	1					
ANR	1293329	ExpressionStatement	index -> c = ( tmp >> index -> a_width ) & EBC_N_BIT_MASK ( 28 - index -> a_width )	112:1:1976:2048	1293260	5	True				
ANR	1293330	AssignmentExpression	index -> c = ( tmp >> index -> a_width ) & EBC_N_BIT_MASK ( 28 - index -> a_width )		1293260	0		=			
ANR	1293331	PtrMemberAccess	index -> c		1293260	0					
ANR	1293332	Identifier	index		1293260	0					
ANR	1293333	Identifier	c		1293260	1					
ANR	1293334	BitAndExpression	( tmp >> index -> a_width ) & EBC_N_BIT_MASK ( 28 - index -> a_width )		1293260	1		&			
ANR	1293335	ShiftExpression	tmp >> index -> a_width		1293260	0		>>			
ANR	1293336	Identifier	tmp		1293260	0					
ANR	1293337	PtrMemberAccess	index -> a_width		1293260	1					
ANR	1293338	Identifier	index		1293260	0					
ANR	1293339	Identifier	a_width		1293260	1					
ANR	1293340	CallExpression	EBC_N_BIT_MASK ( 28 - index -> a_width )		1293260	1					
ANR	1293341	Callee	EBC_N_BIT_MASK		1293260	0					
ANR	1293342	Identifier	EBC_N_BIT_MASK		1293260	0					
ANR	1293343	ArgumentList	28 - index -> a_width		1293260	1					
ANR	1293344	Argument	28 - index -> a_width		1293260	0					
ANR	1293345	AdditiveExpression	28 - index -> a_width		1293260	0		-			
ANR	1293346	PrimaryExpression	28		1293260	0					
ANR	1293347	PtrMemberAccess	index -> a_width		1293260	1					
ANR	1293348	Identifier	index		1293260	0					
ANR	1293349	Identifier	a_width		1293260	1					
ANR	1293350	ReturnStatement	return 0 ;	113:1:2051:2059	1293260	6	True				
ANR	1293351	PrimaryExpression	0		1293260	0					
ANR	1293352	ReturnType	static int		1293260	1					
ANR	1293353	Identifier	decode_index32		1293260	2					
ANR	1293354	ParameterList	"const ut8 * data , ebc_index_t * index"		1293260	3					
ANR	1293355	Parameter	const ut8 * data	106:26:1702:1716	1293260	0	True				
ANR	1293356	ParameterType	const ut8 *		1293260	0					
ANR	1293357	Identifier	data		1293260	1					
ANR	1293358	Parameter	ebc_index_t * index	106:43:1719:1736	1293260	1	True				
ANR	1293359	ParameterType	ebc_index_t *		1293260	0					
ANR	1293360	Identifier	index		1293260	1					
ANR	1293361	CFGEntryNode	ENTRY		1293260		True				
ANR	1293362	CFGExitNode	EXIT		1293260		True				
ANR	1293363	Symbol	index -> type		1293260						
ANR	1293364	Symbol	index -> n		1293260						
ANR	1293365	Symbol	index -> a_width		1293260						
ANR	1293366	Symbol	data		1293260						
ANR	1293367	Symbol	* index		1293260						
ANR	1293368	Symbol	index -> sign		1293260						
ANR	1293369	Symbol	index		1293260						
ANR	1293370	Symbol	index -> c		1293260						
ANR	1293371	Symbol	EBC_INDEX32		1293260						
ANR	1293372	Symbol	EBC_N_BIT_MASK		1293260						
ANR	1293373	Symbol	EBC_INDEX_MINUS		1293260						
ANR	1293374	Symbol	tmp		1293260						
ANR	1293375	Symbol	* ( ut32 * ) data		1293260						
ANR	1293376	Symbol	EBC_NTH_BIT		1293260						
ANR	1293377	Symbol	* data		1293260						
ANR	1293378	Symbol	EBC_INDEX_PLUS		1293260						
ANR	1293379	Function	decode_index64	116:0:2064:2448							
ANR	1293380	FunctionDef	"decode_index64 (const ut8 * data , ebc_index_t * index)"		1293379	0					
ANR	1293381	CompoundStatement		116:63:2127:2448	1293379	0					
ANR	1293382	IdentifierDeclStatement	ut64 tmp = * ( ut64 * ) data ;	117:1:2130:2153	1293379	0	True				
ANR	1293383	IdentifierDecl	tmp = * ( ut64 * ) data		1293379	0					
ANR	1293384	IdentifierDeclType	ut64		1293379	0					
ANR	1293385	Identifier	tmp		1293379	1					
ANR	1293386	AssignmentExpression	tmp = * ( ut64 * ) data		1293379	2		=			
ANR	1293387	Identifier	tmp		1293379	0					
ANR	1293388	UnaryOperationExpression	* ( ut64 * ) data		1293379	1					
ANR	1293389	UnaryOperator	*		1293379	0					
ANR	1293390	CastExpression	( ut64 * ) data		1293379	1					
ANR	1293391	CastTarget	ut64 *		1293379	0					
ANR	1293392	Identifier	data		1293379	1					
ANR	1293393	ExpressionStatement	index -> type = EBC_INDEX64	118:1:2156:2181	1293379	1	True				
ANR	1293394	AssignmentExpression	index -> type = EBC_INDEX64		1293379	0		=			
ANR	1293395	PtrMemberAccess	index -> type		1293379	0					
ANR	1293396	Identifier	index		1293379	0					
ANR	1293397	Identifier	type		1293379	1					
ANR	1293398	Identifier	EBC_INDEX64		1293379	1					
ANR	1293399	ExpressionStatement	index -> sign = tmp & EBC_NTH_BIT ( 63 ) ? EBC_INDEX_PLUS : EBC_INDEX_MINUS	119:1:2184:2254	1293379	2	True				
ANR	1293400	AssignmentExpression	index -> sign = tmp & EBC_NTH_BIT ( 63 ) ? EBC_INDEX_PLUS : EBC_INDEX_MINUS		1293379	0		=			
ANR	1293401	PtrMemberAccess	index -> sign		1293379	0					
ANR	1293402	Identifier	index		1293379	0					
ANR	1293403	Identifier	sign		1293379	1					
ANR	1293404	ConditionalExpression	tmp & EBC_NTH_BIT ( 63 ) ? EBC_INDEX_PLUS : EBC_INDEX_MINUS		1293379	1					
ANR	1293405	Condition	tmp & EBC_NTH_BIT ( 63 )		1293379	0					
ANR	1293406	BitAndExpression	tmp & EBC_NTH_BIT ( 63 )		1293379	0		&			
ANR	1293407	Identifier	tmp		1293379	0					
ANR	1293408	CallExpression	EBC_NTH_BIT ( 63 )		1293379	1					
ANR	1293409	Callee	EBC_NTH_BIT		1293379	0					
ANR	1293410	Identifier	EBC_NTH_BIT		1293379	0					
ANR	1293411	ArgumentList	63		1293379	1					
ANR	1293412	Argument	63		1293379	0					
ANR	1293413	PrimaryExpression	63		1293379	0					
ANR	1293414	Identifier	EBC_INDEX_PLUS		1293379	1					
ANR	1293415	Identifier	EBC_INDEX_MINUS		1293379	2					
ANR	1293416	ExpressionStatement	index -> a_width = ( ( tmp >> 60 ) & EBC_N_BIT_MASK ( 2 ) ) * 8	120:1:2257:2311	1293379	3	True				
ANR	1293417	AssignmentExpression	index -> a_width = ( ( tmp >> 60 ) & EBC_N_BIT_MASK ( 2 ) ) * 8		1293379	0		=			
ANR	1293418	PtrMemberAccess	index -> a_width		1293379	0					
ANR	1293419	Identifier	index		1293379	0					
ANR	1293420	Identifier	a_width		1293379	1					
ANR	1293421	MultiplicativeExpression	( ( tmp >> 60 ) & EBC_N_BIT_MASK ( 2 ) ) * 8		1293379	1		*			
ANR	1293422	BitAndExpression	( tmp >> 60 ) & EBC_N_BIT_MASK ( 2 )		1293379	0		&			
ANR	1293423	ShiftExpression	tmp >> 60		1293379	0		>>			
ANR	1293424	Identifier	tmp		1293379	0					
ANR	1293425	PrimaryExpression	60		1293379	1					
ANR	1293426	CallExpression	EBC_N_BIT_MASK ( 2 )		1293379	1					
ANR	1293427	Callee	EBC_N_BIT_MASK		1293379	0					
ANR	1293428	Identifier	EBC_N_BIT_MASK		1293379	0					
ANR	1293429	ArgumentList	2		1293379	1					
ANR	1293430	Argument	2		1293379	0					
ANR	1293431	PrimaryExpression	2		1293379	0					
ANR	1293432	PrimaryExpression	8		1293379	1					
ANR	1293433	ExpressionStatement	index -> n = tmp & EBC_N_BIT_MASK ( index -> a_width )	121:1:2314:2361	1293379	4	True				
ANR	1293434	AssignmentExpression	index -> n = tmp & EBC_N_BIT_MASK ( index -> a_width )		1293379	0		=			
ANR	1293435	PtrMemberAccess	index -> n		1293379	0					
ANR	1293436	Identifier	index		1293379	0					
ANR	1293437	Identifier	n		1293379	1					
ANR	1293438	BitAndExpression	tmp & EBC_N_BIT_MASK ( index -> a_width )		1293379	1		&			
ANR	1293439	Identifier	tmp		1293379	0					
ANR	1293440	CallExpression	EBC_N_BIT_MASK ( index -> a_width )		1293379	1					
ANR	1293441	Callee	EBC_N_BIT_MASK		1293379	0					
ANR	1293442	Identifier	EBC_N_BIT_MASK		1293379	0					
ANR	1293443	ArgumentList	index -> a_width		1293379	1					
ANR	1293444	Argument	index -> a_width		1293379	0					
ANR	1293445	PtrMemberAccess	index -> a_width		1293379	0					
ANR	1293446	Identifier	index		1293379	0					
ANR	1293447	Identifier	a_width		1293379	1					
ANR	1293448	ExpressionStatement	index -> c = ( tmp >> index -> a_width ) & EBC_N_BIT_MASK ( 60 - index -> a_width )	122:1:2364:2435	1293379	5	True				
ANR	1293449	AssignmentExpression	index -> c = ( tmp >> index -> a_width ) & EBC_N_BIT_MASK ( 60 - index -> a_width )		1293379	0		=			
ANR	1293450	PtrMemberAccess	index -> c		1293379	0					
ANR	1293451	Identifier	index		1293379	0					
ANR	1293452	Identifier	c		1293379	1					
ANR	1293453	BitAndExpression	( tmp >> index -> a_width ) & EBC_N_BIT_MASK ( 60 - index -> a_width )		1293379	1		&			
ANR	1293454	ShiftExpression	tmp >> index -> a_width		1293379	0		>>			
ANR	1293455	Identifier	tmp		1293379	0					
ANR	1293456	PtrMemberAccess	index -> a_width		1293379	1					
ANR	1293457	Identifier	index		1293379	0					
ANR	1293458	Identifier	a_width		1293379	1					
ANR	1293459	CallExpression	EBC_N_BIT_MASK ( 60 - index -> a_width )		1293379	1					
ANR	1293460	Callee	EBC_N_BIT_MASK		1293379	0					
ANR	1293461	Identifier	EBC_N_BIT_MASK		1293379	0					
ANR	1293462	ArgumentList	60 - index -> a_width		1293379	1					
ANR	1293463	Argument	60 - index -> a_width		1293379	0					
ANR	1293464	AdditiveExpression	60 - index -> a_width		1293379	0		-			
ANR	1293465	PrimaryExpression	60		1293379	0					
ANR	1293466	PtrMemberAccess	index -> a_width		1293379	1					
ANR	1293467	Identifier	index		1293379	0					
ANR	1293468	Identifier	a_width		1293379	1					
ANR	1293469	ReturnStatement	return 0 ;	123:1:2438:2446	1293379	6	True				
ANR	1293470	PrimaryExpression	0		1293379	0					
ANR	1293471	ReturnType	static int		1293379	1					
ANR	1293472	Identifier	decode_index64		1293379	2					
ANR	1293473	ParameterList	"const ut8 * data , ebc_index_t * index"		1293379	3					
ANR	1293474	Parameter	const ut8 * data	116:26:2090:2104	1293379	0	True				
ANR	1293475	ParameterType	const ut8 *		1293379	0					
ANR	1293476	Identifier	data		1293379	1					
ANR	1293477	Parameter	ebc_index_t * index	116:43:2107:2124	1293379	1	True				
ANR	1293478	ParameterType	ebc_index_t *		1293379	0					
ANR	1293479	Identifier	index		1293379	1					
ANR	1293480	CFGEntryNode	ENTRY		1293379		True				
ANR	1293481	CFGExitNode	EXIT		1293379		True				
ANR	1293482	Symbol	index -> type		1293379						
ANR	1293483	Symbol	index -> n		1293379						
ANR	1293484	Symbol	index -> a_width		1293379						
ANR	1293485	Symbol	data		1293379						
ANR	1293486	Symbol	* index		1293379						
ANR	1293487	Symbol	index -> sign		1293379						
ANR	1293488	Symbol	index		1293379						
ANR	1293489	Symbol	index -> c		1293379						
ANR	1293490	Symbol	EBC_N_BIT_MASK		1293379						
ANR	1293491	Symbol	EBC_INDEX_MINUS		1293379						
ANR	1293492	Symbol	tmp		1293379						
ANR	1293493	Symbol	* ( ut64 * ) data		1293379						
ANR	1293494	Symbol	EBC_INDEX64		1293379						
ANR	1293495	Symbol	EBC_NTH_BIT		1293379						
ANR	1293496	Symbol	* data		1293379						
ANR	1293497	Symbol	EBC_INDEX_PLUS		1293379						
ANR	1293498	Function	decode_break	126:0:2451:2660							
ANR	1293499	FunctionDef	"decode_break (const ut8 * bytes , ebc_command_t * cmd)"		1293498	0					
ANR	1293500	CompoundStatement		126:62:2513:2660	1293498	0					
ANR	1293501	ExpressionStatement	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s"" , instr_names [ EBC_BREAK ] )"	127:1:2516:2584	1293498	0	True				
ANR	1293502	CallExpression	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s"" , instr_names [ EBC_BREAK ] )"		1293498	0					
ANR	1293503	Callee	snprintf		1293498	0					
ANR	1293504	Identifier	snprintf		1293498	0					
ANR	1293505	ArgumentList	cmd -> instr		1293498	1					
ANR	1293506	Argument	cmd -> instr		1293498	0					
ANR	1293507	PtrMemberAccess	cmd -> instr		1293498	0					
ANR	1293508	Identifier	cmd		1293498	0					
ANR	1293509	Identifier	instr		1293498	1					
ANR	1293510	Argument	EBC_INSTR_MAXLEN		1293498	1					
ANR	1293511	Identifier	EBC_INSTR_MAXLEN		1293498	0					
ANR	1293512	Argument	"""%s"""		1293498	2					
ANR	1293513	PrimaryExpression	"""%s"""		1293498	0					
ANR	1293514	Argument	instr_names [ EBC_BREAK ]		1293498	3					
ANR	1293515	ArrayIndexing	instr_names [ EBC_BREAK ]		1293498	0					
ANR	1293516	Identifier	instr_names		1293498	0					
ANR	1293517	Identifier	EBC_BREAK		1293498	1					
ANR	1293518	ExpressionStatement	"snprintf ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""%d"" , bytes [ 1 ] )"	128:1:2587:2647	1293498	1	True				
ANR	1293519	CallExpression	"snprintf ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""%d"" , bytes [ 1 ] )"		1293498	0					
ANR	1293520	Callee	snprintf		1293498	0					
ANR	1293521	Identifier	snprintf		1293498	0					
ANR	1293522	ArgumentList	cmd -> operands		1293498	1					
ANR	1293523	Argument	cmd -> operands		1293498	0					
ANR	1293524	PtrMemberAccess	cmd -> operands		1293498	0					
ANR	1293525	Identifier	cmd		1293498	0					
ANR	1293526	Identifier	operands		1293498	1					
ANR	1293527	Argument	EBC_OPERANDS_MAXLEN		1293498	1					
ANR	1293528	Identifier	EBC_OPERANDS_MAXLEN		1293498	0					
ANR	1293529	Argument	"""%d"""		1293498	2					
ANR	1293530	PrimaryExpression	"""%d"""		1293498	0					
ANR	1293531	Argument	bytes [ 1 ]		1293498	3					
ANR	1293532	ArrayIndexing	bytes [ 1 ]		1293498	0					
ANR	1293533	Identifier	bytes		1293498	0					
ANR	1293534	PrimaryExpression	1		1293498	1					
ANR	1293535	ReturnStatement	return 2 ;	129:1:2650:2658	1293498	2	True				
ANR	1293536	PrimaryExpression	2		1293498	0					
ANR	1293537	ReturnType	static int		1293498	1					
ANR	1293538	Identifier	decode_break		1293498	2					
ANR	1293539	ParameterList	"const ut8 * bytes , ebc_command_t * cmd"		1293498	3					
ANR	1293540	Parameter	const ut8 * bytes	126:24:2475:2490	1293498	0	True				
ANR	1293541	ParameterType	const ut8 *		1293498	0					
ANR	1293542	Identifier	bytes		1293498	1					
ANR	1293543	Parameter	ebc_command_t * cmd	126:42:2493:2510	1293498	1	True				
ANR	1293544	ParameterType	ebc_command_t *		1293498	0					
ANR	1293545	Identifier	cmd		1293498	1					
ANR	1293546	CFGEntryNode	ENTRY		1293498		True				
ANR	1293547	CFGExitNode	EXIT		1293498		True				
ANR	1293548	Symbol	EBC_BREAK		1293498						
ANR	1293549	Symbol	cmd -> operands		1293498						
ANR	1293550	Symbol	EBC_OPERANDS_MAXLEN		1293498						
ANR	1293551	Symbol	instr_names		1293498						
ANR	1293552	Symbol	bytes		1293498						
ANR	1293553	Symbol	EBC_INSTR_MAXLEN		1293498						
ANR	1293554	Symbol	* EBC_BREAK		1293498						
ANR	1293555	Symbol	cmd		1293498						
ANR	1293556	Symbol	* cmd		1293498						
ANR	1293557	Symbol	* instr_names		1293498						
ANR	1293558	Symbol	* bytes		1293498						
ANR	1293559	Symbol	cmd -> instr		1293498						
ANR	1293560	Function	decode_jmp	133:0:2740:3891							
ANR	1293561	FunctionDef	"decode_jmp (const ut8 * bytes , ebc_command_t * cmd)"		1293560	0					
ANR	1293562	CompoundStatement		133:60:2800:3891	1293560	0					
ANR	1293563	IdentifierDeclStatement	int ret ;	134:1:2803:2810	1293560	0	True				
ANR	1293564	IdentifierDecl	ret		1293560	0					
ANR	1293565	IdentifierDeclType	int		1293560	0					
ANR	1293566	Identifier	ret		1293560	1					
ANR	1293567	IdentifierDeclStatement	int bits = 32 ;	135:1:2813:2826	1293560	1	True				
ANR	1293568	IdentifierDecl	bits = 32		1293560	0					
ANR	1293569	IdentifierDeclType	int		1293560	0					
ANR	1293570	Identifier	bits		1293560	1					
ANR	1293571	AssignmentExpression	bits = 32		1293560	2		=			
ANR	1293572	Identifier	bits		1293560	0					
ANR	1293573	PrimaryExpression	32		1293560	1					
ANR	1293574	IdentifierDeclStatement	char op1 [ 32 ] = { 0 } ;	136:1:2829:2847	1293560	2	True				
ANR	1293575	IdentifierDecl	op1 [ 32 ] = { 0 }		1293560	0					
ANR	1293576	IdentifierDeclType	char [ 32 ]		1293560	0					
ANR	1293577	Identifier	op1		1293560	1					
ANR	1293578	PrimaryExpression	32		1293560	2					
ANR	1293579	AssignmentExpression	op1 [ 32 ] = { 0 }		1293560	3		=			
ANR	1293580	Identifier	op1		1293560	0					
ANR	1293581	InitializerList	0		1293560	1					
ANR	1293582	PrimaryExpression	0		1293560	0					
ANR	1293583	IdentifierDeclStatement	int32_t immed32 ;	137:1:2850:2865	1293560	3	True				
ANR	1293584	IdentifierDecl	immed32		1293560	0					
ANR	1293585	IdentifierDeclType	int32_t		1293560	0					
ANR	1293586	Identifier	immed32		1293560	1					
ANR	1293587	IdentifierDeclStatement	ebc_index_t idx32 ;	138:1:2868:2885	1293560	4	True				
ANR	1293588	IdentifierDecl	idx32		1293560	0					
ANR	1293589	IdentifierDeclType	ebc_index_t		1293560	0					
ANR	1293590	Identifier	idx32		1293560	1					
ANR	1293591	IdentifierDeclStatement	char sign ;	139:1:2888:2897	1293560	5	True				
ANR	1293592	IdentifierDecl	sign		1293560	0					
ANR	1293593	IdentifierDeclType	char		1293560	0					
ANR	1293594	Identifier	sign		1293560	1					
ANR	1293595	IdentifierDeclStatement	unsigned long immed ;	140:1:2900:2919	1293560	6	True				
ANR	1293596	IdentifierDecl	immed		1293560	0					
ANR	1293597	IdentifierDeclType	unsigned long		1293560	0					
ANR	1293598	Identifier	immed		1293560	1					
ANR	1293599	ExpressionStatement	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s%d%s"" , instr_names [ EBC_JMP ] , bits , TEST_BIT ( bytes [ 1 ] , 7 ) ? TEST_BIT ( bytes [ 1 ] , 6 ) ? ""cs"" : ""cc"" : """" )"	142:1:2923:3068	1293560	7	True				
ANR	1293600	CallExpression	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s%d%s"" , instr_names [ EBC_JMP ] , bits , TEST_BIT ( bytes [ 1 ] , 7 ) ? TEST_BIT ( bytes [ 1 ] , 6 ) ? ""cs"" : ""cc"" : """" )"		1293560	0					
ANR	1293601	Callee	snprintf		1293560	0					
ANR	1293602	Identifier	snprintf		1293560	0					
ANR	1293603	ArgumentList	cmd -> instr		1293560	1					
ANR	1293604	Argument	cmd -> instr		1293560	0					
ANR	1293605	PtrMemberAccess	cmd -> instr		1293560	0					
ANR	1293606	Identifier	cmd		1293560	0					
ANR	1293607	Identifier	instr		1293560	1					
ANR	1293608	Argument	EBC_INSTR_MAXLEN		1293560	1					
ANR	1293609	Identifier	EBC_INSTR_MAXLEN		1293560	0					
ANR	1293610	Argument	"""%s%d%s"""		1293560	2					
ANR	1293611	PrimaryExpression	"""%s%d%s"""		1293560	0					
ANR	1293612	Argument	instr_names [ EBC_JMP ]		1293560	3					
ANR	1293613	ArrayIndexing	instr_names [ EBC_JMP ]		1293560	0					
ANR	1293614	Identifier	instr_names		1293560	0					
ANR	1293615	Identifier	EBC_JMP		1293560	1					
ANR	1293616	Argument	bits		1293560	4					
ANR	1293617	Identifier	bits		1293560	0					
ANR	1293618	Argument	"TEST_BIT ( bytes [ 1 ] , 7 ) ? TEST_BIT ( bytes [ 1 ] , 6 ) ? ""cs"" : ""cc"" : """""		1293560	5					
ANR	1293619	ConditionalExpression	"TEST_BIT ( bytes [ 1 ] , 7 ) ? TEST_BIT ( bytes [ 1 ] , 6 ) ? ""cs"" : ""cc"" : """""		1293560	0					
ANR	1293620	Condition	"TEST_BIT ( bytes [ 1 ] , 7 )"		1293560	0					
ANR	1293621	CallExpression	"TEST_BIT ( bytes [ 1 ] , 7 )"		1293560	0					
ANR	1293622	Callee	TEST_BIT		1293560	0					
ANR	1293623	Identifier	TEST_BIT		1293560	0					
ANR	1293624	ArgumentList	bytes [ 1 ]		1293560	1					
ANR	1293625	Argument	bytes [ 1 ]		1293560	0					
ANR	1293626	ArrayIndexing	bytes [ 1 ]		1293560	0					
ANR	1293627	Identifier	bytes		1293560	0					
ANR	1293628	PrimaryExpression	1		1293560	1					
ANR	1293629	Argument	7		1293560	1					
ANR	1293630	PrimaryExpression	7		1293560	0					
ANR	1293631	ConditionalExpression	"TEST_BIT ( bytes [ 1 ] , 6 ) ? ""cs"" : ""cc"""		1293560	1					
ANR	1293632	Condition	"TEST_BIT ( bytes [ 1 ] , 6 )"		1293560	0					
ANR	1293633	CallExpression	"TEST_BIT ( bytes [ 1 ] , 6 )"		1293560	0					
ANR	1293634	Callee	TEST_BIT		1293560	0					
ANR	1293635	Identifier	TEST_BIT		1293560	0					
ANR	1293636	ArgumentList	bytes [ 1 ]		1293560	1					
ANR	1293637	Argument	bytes [ 1 ]		1293560	0					
ANR	1293638	ArrayIndexing	bytes [ 1 ]		1293560	0					
ANR	1293639	Identifier	bytes		1293560	0					
ANR	1293640	PrimaryExpression	1		1293560	1					
ANR	1293641	Argument	6		1293560	1					
ANR	1293642	PrimaryExpression	6		1293560	0					
ANR	1293643	PrimaryExpression	"""cs"""		1293560	1					
ANR	1293644	PrimaryExpression	"""cc"""		1293560	2					
ANR	1293645	PrimaryExpression	""""""		1293560	2					
ANR	1293646	IfStatement	"if ( TEST_BIT ( bytes [ 0 ] , 6 ) )"		1293560	8					
ANR	1293647	Condition	"TEST_BIT ( bytes [ 0 ] , 6 )"	145:5:3076:3096	1293560	0	True				
ANR	1293648	CallExpression	"TEST_BIT ( bytes [ 0 ] , 6 )"		1293560	0					
ANR	1293649	Callee	TEST_BIT		1293560	0					
ANR	1293650	Identifier	TEST_BIT		1293560	0					
ANR	1293651	ArgumentList	bytes [ 0 ]		1293560	1					
ANR	1293652	Argument	bytes [ 0 ]		1293560	0					
ANR	1293653	ArrayIndexing	bytes [ 0 ]		1293560	0					
ANR	1293654	Identifier	bytes		1293560	0					
ANR	1293655	PrimaryExpression	0		1293560	1					
ANR	1293656	Argument	6		1293560	1					
ANR	1293657	PrimaryExpression	6		1293560	0					
ANR	1293658	CompoundStatement		13:27:297:297	1293560	1					
ANR	1293659	ExpressionStatement	immed = * ( ut64 * ) ( bytes + 2 )	146:2:3102:3129	1293560	0	True				
ANR	1293660	AssignmentExpression	immed = * ( ut64 * ) ( bytes + 2 )		1293560	0		=			
ANR	1293661	Identifier	immed		1293560	0					
ANR	1293662	UnaryOperationExpression	* ( ut64 * ) ( bytes + 2 )		1293560	1					
ANR	1293663	UnaryOperator	*		1293560	0					
ANR	1293664	CastExpression	( ut64 * ) ( bytes + 2 )		1293560	1					
ANR	1293665	CastTarget	ut64 *		1293560	0					
ANR	1293666	AdditiveExpression	bytes + 2		1293560	1		+			
ANR	1293667	Identifier	bytes		1293560	0					
ANR	1293668	PrimaryExpression	2		1293560	1					
ANR	1293669	ExpressionStatement	bits = 64	147:2:3133:3142	1293560	1	True				
ANR	1293670	AssignmentExpression	bits = 64		1293560	0		=			
ANR	1293671	Identifier	bits		1293560	0					
ANR	1293672	PrimaryExpression	64		1293560	1					
ANR	1293673	ExpressionStatement	ret = 10	148:2:3146:3154	1293560	2	True				
ANR	1293674	AssignmentExpression	ret = 10		1293560	0		=			
ANR	1293675	Identifier	ret		1293560	0					
ANR	1293676	PrimaryExpression	10		1293560	1					
ANR	1293677	ExpressionStatement	"snprintf ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""0x%lx"" , immed )"	149:2:3158:3218	1293560	3	True				
ANR	1293678	CallExpression	"snprintf ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""0x%lx"" , immed )"		1293560	0					
ANR	1293679	Callee	snprintf		1293560	0					
ANR	1293680	Identifier	snprintf		1293560	0					
ANR	1293681	ArgumentList	cmd -> operands		1293560	1					
ANR	1293682	Argument	cmd -> operands		1293560	0					
ANR	1293683	PtrMemberAccess	cmd -> operands		1293560	0					
ANR	1293684	Identifier	cmd		1293560	0					
ANR	1293685	Identifier	operands		1293560	1					
ANR	1293686	Argument	EBC_OPERANDS_MAXLEN		1293560	1					
ANR	1293687	Identifier	EBC_OPERANDS_MAXLEN		1293560	0					
ANR	1293688	Argument	"""0x%lx"""		1293560	2					
ANR	1293689	PrimaryExpression	"""0x%lx"""		1293560	0					
ANR	1293690	Argument	immed		1293560	3					
ANR	1293691	Identifier	immed		1293560	0					
ANR	1293692	ElseStatement	else		1293560	0					
ANR	1293693	CompoundStatement		18:8:427:427	1293560	0					
ANR	1293694	IfStatement	if ( ( bytes [ 1 ] & 0x7 ) != 0 )		1293560	0					
ANR	1293695	Condition	( bytes [ 1 ] & 0x7 ) != 0	151:6:3236:3256	1293560	0	True				
ANR	1293696	EqualityExpression	( bytes [ 1 ] & 0x7 ) != 0		1293560	0		!=			
ANR	1293697	BitAndExpression	bytes [ 1 ] & 0x7		1293560	0		&			
ANR	1293698	ArrayIndexing	bytes [ 1 ]		1293560	0					
ANR	1293699	Identifier	bytes		1293560	0					
ANR	1293700	PrimaryExpression	1		1293560	1					
ANR	1293701	PrimaryExpression	0x7		1293560	1					
ANR	1293702	PrimaryExpression	0		1293560	1					
ANR	1293703	CompoundStatement		19:29:458:458	1293560	1					
ANR	1293704	CompoundStatement		20:3:463:463	1293560	0					
ANR	1293705	ExpressionStatement	"snprintf ( op1 , sizeof ( op1 ) , ""%sr%u "" , TEST_BIT ( bytes [ 1 ] , 3 ) ? ""@"" : """" , bytes [ 1 ] & 0x7 )"	153:4:3270:3364	1293560	0	True				
ANR	1293706	CallExpression	"snprintf ( op1 , sizeof ( op1 ) , ""%sr%u "" , TEST_BIT ( bytes [ 1 ] , 3 ) ? ""@"" : """" , bytes [ 1 ] & 0x7 )"		1293560	0					
ANR	1293707	Callee	snprintf		1293560	0					
ANR	1293708	Identifier	snprintf		1293560	0					
ANR	1293709	ArgumentList	op1		1293560	1					
ANR	1293710	Argument	op1		1293560	0					
ANR	1293711	Identifier	op1		1293560	0					
ANR	1293712	Argument	sizeof ( op1 )		1293560	1					
ANR	1293713	SizeofExpression	sizeof ( op1 )		1293560	0					
ANR	1293714	Sizeof	sizeof		1293560	0					
ANR	1293715	SizeofOperand	op1		1293560	1					
ANR	1293716	Argument	"""%sr%u """		1293560	2					
ANR	1293717	PrimaryExpression	"""%sr%u """		1293560	0					
ANR	1293718	Argument	"TEST_BIT ( bytes [ 1 ] , 3 ) ? ""@"" : """""		1293560	3					
ANR	1293719	ConditionalExpression	"TEST_BIT ( bytes [ 1 ] , 3 ) ? ""@"" : """""		1293560	0					
ANR	1293720	Condition	"TEST_BIT ( bytes [ 1 ] , 3 )"		1293560	0					
ANR	1293721	CallExpression	"TEST_BIT ( bytes [ 1 ] , 3 )"		1293560	0					
ANR	1293722	Callee	TEST_BIT		1293560	0					
ANR	1293723	Identifier	TEST_BIT		1293560	0					
ANR	1293724	ArgumentList	bytes [ 1 ]		1293560	1					
ANR	1293725	Argument	bytes [ 1 ]		1293560	0					
ANR	1293726	ArrayIndexing	bytes [ 1 ]		1293560	0					
ANR	1293727	Identifier	bytes		1293560	0					
ANR	1293728	PrimaryExpression	1		1293560	1					
ANR	1293729	Argument	3		1293560	1					
ANR	1293730	PrimaryExpression	3		1293560	0					
ANR	1293731	PrimaryExpression	"""@"""		1293560	1					
ANR	1293732	PrimaryExpression	""""""		1293560	2					
ANR	1293733	Argument	bytes [ 1 ] & 0x7		1293560	4					
ANR	1293734	BitAndExpression	bytes [ 1 ] & 0x7		1293560	0		&			
ANR	1293735	ArrayIndexing	bytes [ 1 ]		1293560	0					
ANR	1293736	Identifier	bytes		1293560	0					
ANR	1293737	PrimaryExpression	1		1293560	1					
ANR	1293738	PrimaryExpression	0x7		1293560	1					
ANR	1293739	IfStatement	"if ( TEST_BIT ( bytes [ 0 ] , 7 ) )"		1293560	1					
ANR	1293740	Condition	"TEST_BIT ( bytes [ 0 ] , 7 )"	157:6:3381:3402	1293560	0	True				
ANR	1293741	CallExpression	"TEST_BIT ( bytes [ 0 ] , 7 )"		1293560	0					
ANR	1293742	Callee	TEST_BIT		1293560	0					
ANR	1293743	Identifier	TEST_BIT		1293560	0					
ANR	1293744	ArgumentList	bytes [ 0 ]		1293560	1					
ANR	1293745	Argument	bytes [ 0 ]		1293560	0					
ANR	1293746	ArrayIndexing	bytes [ 0 ]		1293560	0					
ANR	1293747	Identifier	bytes		1293560	0					
ANR	1293748	PrimaryExpression	0		1293560	1					
ANR	1293749	Argument	7		1293560	1					
ANR	1293750	PrimaryExpression	7		1293560	0					
ANR	1293751	CompoundStatement		25:30:604:604	1293560	1					
ANR	1293752	IfStatement	"if ( TEST_BIT ( bytes [ 1 ] , 3 ) )"		1293560	0					
ANR	1293753	Condition	"TEST_BIT ( bytes [ 1 ] , 3 )"	158:7:3414:3435	1293560	0	True				
ANR	1293754	CallExpression	"TEST_BIT ( bytes [ 1 ] , 3 )"		1293560	0					
ANR	1293755	Callee	TEST_BIT		1293560	0					
ANR	1293756	Identifier	TEST_BIT		1293560	0					
ANR	1293757	ArgumentList	bytes [ 1 ]		1293560	1					
ANR	1293758	Argument	bytes [ 1 ]		1293560	0					
ANR	1293759	ArrayIndexing	bytes [ 1 ]		1293560	0					
ANR	1293760	Identifier	bytes		1293560	0					
ANR	1293761	PrimaryExpression	1		1293560	1					
ANR	1293762	Argument	3		1293560	1					
ANR	1293763	PrimaryExpression	3		1293560	0					
ANR	1293764	CompoundStatement		26:31:637:637	1293560	1					
ANR	1293765	ExpressionStatement	"decode_index32 ( bytes + 2 , & idx32 )"	159:4:3444:3478	1293560	0	True				
ANR	1293766	CallExpression	"decode_index32 ( bytes + 2 , & idx32 )"		1293560	0					
ANR	1293767	Callee	decode_index32		1293560	0					
ANR	1293768	Identifier	decode_index32		1293560	0					
ANR	1293769	ArgumentList	bytes + 2		1293560	1					
ANR	1293770	Argument	bytes + 2		1293560	0					
ANR	1293771	AdditiveExpression	bytes + 2		1293560	0		+			
ANR	1293772	Identifier	bytes		1293560	0					
ANR	1293773	PrimaryExpression	2		1293560	1					
ANR	1293774	Argument	& idx32		1293560	1					
ANR	1293775	UnaryOperationExpression	& idx32		1293560	0					
ANR	1293776	UnaryOperator	&		1293560	0					
ANR	1293777	Identifier	idx32		1293560	1					
ANR	1293778	ExpressionStatement	sign = idx32 . sign ? '+' : '-'	160:4:3484:3513	1293560	1	True				
ANR	1293779	AssignmentExpression	sign = idx32 . sign ? '+' : '-'		1293560	0		=			
ANR	1293780	Identifier	sign		1293560	0					
ANR	1293781	ConditionalExpression	idx32 . sign ? '+' : '-'		1293560	1					
ANR	1293782	Condition	idx32 . sign		1293560	0					
ANR	1293783	MemberAccess	idx32 . sign		1293560	0					
ANR	1293784	Identifier	idx32		1293560	0					
ANR	1293785	Identifier	sign		1293560	1					
ANR	1293786	PrimaryExpression	'+'		1293560	1					
ANR	1293787	PrimaryExpression	'-'		1293560	2					
ANR	1293788	ExpressionStatement	"CHK_SNPRINTF ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""%s(%c%u, %c%u)"" , op1 , sign , idx32 . n , sign , idx32 . c )"	162:4:3520:3632	1293560	2	True				
ANR	1293789	CallExpression	"CHK_SNPRINTF ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""%s(%c%u, %c%u)"" , op1 , sign , idx32 . n , sign , idx32 . c )"		1293560	0					
ANR	1293790	Callee	CHK_SNPRINTF		1293560	0					
ANR	1293791	Identifier	CHK_SNPRINTF		1293560	0					
ANR	1293792	ArgumentList	cmd -> operands		1293560	1					
ANR	1293793	Argument	cmd -> operands		1293560	0					
ANR	1293794	PtrMemberAccess	cmd -> operands		1293560	0					
ANR	1293795	Identifier	cmd		1293560	0					
ANR	1293796	Identifier	operands		1293560	1					
ANR	1293797	Argument	EBC_OPERANDS_MAXLEN		1293560	1					
ANR	1293798	Identifier	EBC_OPERANDS_MAXLEN		1293560	0					
ANR	1293799	Argument	"""%s(%c%u, %c%u)"""		1293560	2					
ANR	1293800	PrimaryExpression	"""%s(%c%u, %c%u)"""		1293560	0					
ANR	1293801	Argument	op1		1293560	3					
ANR	1293802	Identifier	op1		1293560	0					
ANR	1293803	Argument	sign		1293560	4					
ANR	1293804	Identifier	sign		1293560	0					
ANR	1293805	Argument	idx32 . n		1293560	5					
ANR	1293806	MemberAccess	idx32 . n		1293560	0					
ANR	1293807	Identifier	idx32		1293560	0					
ANR	1293808	Identifier	n		1293560	1					
ANR	1293809	Argument	sign		1293560	6					
ANR	1293810	Identifier	sign		1293560	0					
ANR	1293811	Argument	idx32 . c		1293560	7					
ANR	1293812	MemberAccess	idx32 . c		1293560	0					
ANR	1293813	Identifier	idx32		1293560	0					
ANR	1293814	Identifier	c		1293560	1					
ANR	1293815	ElseStatement	else		1293560	0					
ANR	1293816	CompoundStatement		33:10:843:843	1293560	0					
ANR	1293817	ExpressionStatement	immed32 = * ( int32_t * ) ( bytes + 2 )	166:4:3650:3683	1293560	0	True				
ANR	1293818	AssignmentExpression	immed32 = * ( int32_t * ) ( bytes + 2 )		1293560	0		=			
ANR	1293819	Identifier	immed32		1293560	0					
ANR	1293820	UnaryOperationExpression	* ( int32_t * ) ( bytes + 2 )		1293560	1					
ANR	1293821	UnaryOperator	*		1293560	0					
ANR	1293822	CastExpression	( int32_t * ) ( bytes + 2 )		1293560	1					
ANR	1293823	CastTarget	int32_t *		1293560	0					
ANR	1293824	AdditiveExpression	bytes + 2		1293560	1		+			
ANR	1293825	Identifier	bytes		1293560	0					
ANR	1293826	PrimaryExpression	2		1293560	1					
ANR	1293827	ExpressionStatement	"CHK_SNPRINTF ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""%s0x%x"" , op1 , immed32 )"	167:4:3689:3767	1293560	1	True				
ANR	1293828	CallExpression	"CHK_SNPRINTF ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""%s0x%x"" , op1 , immed32 )"		1293560	0					
ANR	1293829	Callee	CHK_SNPRINTF		1293560	0					
ANR	1293830	Identifier	CHK_SNPRINTF		1293560	0					
ANR	1293831	ArgumentList	cmd -> operands		1293560	1					
ANR	1293832	Argument	cmd -> operands		1293560	0					
ANR	1293833	PtrMemberAccess	cmd -> operands		1293560	0					
ANR	1293834	Identifier	cmd		1293560	0					
ANR	1293835	Identifier	operands		1293560	1					
ANR	1293836	Argument	EBC_OPERANDS_MAXLEN		1293560	1					
ANR	1293837	Identifier	EBC_OPERANDS_MAXLEN		1293560	0					
ANR	1293838	Argument	"""%s0x%x"""		1293560	2					
ANR	1293839	PrimaryExpression	"""%s0x%x"""		1293560	0					
ANR	1293840	Argument	op1		1293560	3					
ANR	1293841	Identifier	op1		1293560	0					
ANR	1293842	Argument	immed32		1293560	4					
ANR	1293843	Identifier	immed32		1293560	0					
ANR	1293844	ExpressionStatement	ret = 6	170:3:3777:3784	1293560	1	True				
ANR	1293845	AssignmentExpression	ret = 6		1293560	0		=			
ANR	1293846	Identifier	ret		1293560	0					
ANR	1293847	PrimaryExpression	6		1293560	1					
ANR	1293848	ElseStatement	else		1293560	0					
ANR	1293849	CompoundStatement		39:9:994:994	1293560	0					
ANR	1293850	ExpressionStatement	"snprintf ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""%s"" , op1 )"	172:3:3800:3856	1293560	0	True				
ANR	1293851	CallExpression	"snprintf ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""%s"" , op1 )"		1293560	0					
ANR	1293852	Callee	snprintf		1293560	0					
ANR	1293853	Identifier	snprintf		1293560	0					
ANR	1293854	ArgumentList	cmd -> operands		1293560	1					
ANR	1293855	Argument	cmd -> operands		1293560	0					
ANR	1293856	PtrMemberAccess	cmd -> operands		1293560	0					
ANR	1293857	Identifier	cmd		1293560	0					
ANR	1293858	Identifier	operands		1293560	1					
ANR	1293859	Argument	EBC_OPERANDS_MAXLEN		1293560	1					
ANR	1293860	Identifier	EBC_OPERANDS_MAXLEN		1293560	0					
ANR	1293861	Argument	"""%s"""		1293560	2					
ANR	1293862	PrimaryExpression	"""%s"""		1293560	0					
ANR	1293863	Argument	op1		1293560	3					
ANR	1293864	Identifier	op1		1293560	0					
ANR	1293865	ExpressionStatement	ret = 2	173:3:3861:3868	1293560	1	True				
ANR	1293866	AssignmentExpression	ret = 2		1293560	0		=			
ANR	1293867	Identifier	ret		1293560	0					
ANR	1293868	PrimaryExpression	2		1293560	1					
ANR	1293869	ReturnStatement	return ret ;	177:1:3879:3889	1293560	9	True				
ANR	1293870	Identifier	ret		1293560	0					
ANR	1293871	ReturnType	static int		1293560	1					
ANR	1293872	Identifier	decode_jmp		1293560	2					
ANR	1293873	ParameterList	"const ut8 * bytes , ebc_command_t * cmd"		1293560	3					
ANR	1293874	Parameter	const ut8 * bytes	133:22:2762:2777	1293560	0	True				
ANR	1293875	ParameterType	const ut8 *		1293560	0					
ANR	1293876	Identifier	bytes		1293560	1					
ANR	1293877	Parameter	ebc_command_t * cmd	133:40:2780:2797	1293560	1	True				
ANR	1293878	ParameterType	ebc_command_t *		1293560	0					
ANR	1293879	Identifier	cmd		1293560	1					
ANR	1293880	CFGEntryNode	ENTRY		1293560		True				
ANR	1293881	CFGExitNode	EXIT		1293560		True				
ANR	1293882	Symbol	EBC_OPERANDS_MAXLEN		1293560						
ANR	1293883	Symbol	EBC_INSTR_MAXLEN		1293560						
ANR	1293884	Symbol	sign		1293560						
ANR	1293885	Symbol	idx32 . sign		1293560						
ANR	1293886	Symbol	* instr_names		1293560						
ANR	1293887	Symbol	* bytes		1293560						
ANR	1293888	Symbol	immed		1293560						
ANR	1293889	Symbol	cmd -> operands		1293560						
ANR	1293890	Symbol	* EBC_JMP		1293560						
ANR	1293891	Symbol	* ( ut64 * ) ( bytes + 2 )		1293560						
ANR	1293892	Symbol	immed32		1293560						
ANR	1293893	Symbol	* cmd		1293560						
ANR	1293894	Symbol	& idx32		1293560						
ANR	1293895	Symbol	cmd -> instr		1293560						
ANR	1293896	Symbol	TEST_BIT		1293560						
ANR	1293897	Symbol	* ( int32_t * ) ( bytes + 2 )		1293560						
ANR	1293898	Symbol	ret		1293560						
ANR	1293899	Symbol	idx32 . c		1293560						
ANR	1293900	Symbol	bits		1293560						
ANR	1293901	Symbol	idx32		1293560						
ANR	1293902	Symbol	op1		1293560						
ANR	1293903	Symbol	idx32 . n		1293560						
ANR	1293904	Symbol	instr_names		1293560						
ANR	1293905	Symbol	bytes		1293560						
ANR	1293906	Symbol	cmd		1293560						
ANR	1293907	Symbol	EBC_JMP		1293560						
ANR	1293908	Function	decode_jmp8	180:0:3894:4277							
ANR	1293909	FunctionDef	"decode_jmp8 (const ut8 * bytes , ebc_command_t * cmd)"		1293908	0					
ANR	1293910	CompoundStatement		180:61:3955:4277	1293908	0					
ANR	1293911	IdentifierDeclStatement	char suff [ 3 ] = { 0 } ;	181:1:3958:3976	1293908	0	True				
ANR	1293912	IdentifierDecl	suff [ 3 ] = { 0 }		1293908	0					
ANR	1293913	IdentifierDeclType	char [ 3 ]		1293908	0					
ANR	1293914	Identifier	suff		1293908	1					
ANR	1293915	PrimaryExpression	3		1293908	2					
ANR	1293916	AssignmentExpression	suff [ 3 ] = { 0 }		1293908	3		=			
ANR	1293917	Identifier	suff		1293908	0					
ANR	1293918	InitializerList	0		1293908	1					
ANR	1293919	PrimaryExpression	0		1293908	0					
ANR	1293920	IfStatement	"if ( TEST_BIT ( bytes [ 0 ] , 7 ) )"		1293908	1					
ANR	1293921	Condition	"TEST_BIT ( bytes [ 0 ] , 7 )"	182:5:3983:4004	1293908	0	True				
ANR	1293922	CallExpression	"TEST_BIT ( bytes [ 0 ] , 7 )"		1293908	0					
ANR	1293923	Callee	TEST_BIT		1293908	0					
ANR	1293924	Identifier	TEST_BIT		1293908	0					
ANR	1293925	ArgumentList	bytes [ 0 ]		1293908	1					
ANR	1293926	Argument	bytes [ 0 ]		1293908	0					
ANR	1293927	ArrayIndexing	bytes [ 0 ]		1293908	0					
ANR	1293928	Identifier	bytes		1293908	0					
ANR	1293929	PrimaryExpression	0		1293908	1					
ANR	1293930	Argument	7		1293908	1					
ANR	1293931	PrimaryExpression	7		1293908	0					
ANR	1293932	CompoundStatement		4:2:55:108	1293908	1					
ANR	1293933	IdentifierDeclStatement	"const char * str = ( TEST_BIT ( bytes [ 0 ] , 6 ) ) ? ""cs"" : ""cc"" ;"	183:2:4011:4064	1293908	0	True				
ANR	1293934	IdentifierDecl	"* str = ( TEST_BIT ( bytes [ 0 ] , 6 ) ) ? ""cs"" : ""cc"""		1293908	0					
ANR	1293935	IdentifierDeclType	const char *		1293908	0					
ANR	1293936	Identifier	str		1293908	1					
ANR	1293937	AssignmentExpression	"* str = ( TEST_BIT ( bytes [ 0 ] , 6 ) ) ? ""cs"" : ""cc"""		1293908	2		=			
ANR	1293938	Identifier	str		1293908	0					
ANR	1293939	ConditionalExpression	"( TEST_BIT ( bytes [ 0 ] , 6 ) ) ? ""cs"" : ""cc"""		1293908	1					
ANR	1293940	Condition	"TEST_BIT ( bytes [ 0 ] , 6 )"		1293908	0					
ANR	1293941	CallExpression	"TEST_BIT ( bytes [ 0 ] , 6 )"		1293908	0					
ANR	1293942	Callee	TEST_BIT		1293908	0					
ANR	1293943	Identifier	TEST_BIT		1293908	0					
ANR	1293944	ArgumentList	bytes [ 0 ]		1293908	1					
ANR	1293945	Argument	bytes [ 0 ]		1293908	0					
ANR	1293946	ArrayIndexing	bytes [ 0 ]		1293908	0					
ANR	1293947	Identifier	bytes		1293908	0					
ANR	1293948	PrimaryExpression	0		1293908	1					
ANR	1293949	Argument	6		1293908	1					
ANR	1293950	PrimaryExpression	6		1293908	0					
ANR	1293951	PrimaryExpression	"""cs"""		1293908	1					
ANR	1293952	PrimaryExpression	"""cc"""		1293908	2					
ANR	1293953	ExpressionStatement	"snprintf ( suff , 3 , ""%s"" , str )"	184:2:4068:4097	1293908	1	True				
ANR	1293954	CallExpression	"snprintf ( suff , 3 , ""%s"" , str )"		1293908	0					
ANR	1293955	Callee	snprintf		1293908	0					
ANR	1293956	Identifier	snprintf		1293908	0					
ANR	1293957	ArgumentList	suff		1293908	1					
ANR	1293958	Argument	suff		1293908	0					
ANR	1293959	Identifier	suff		1293908	0					
ANR	1293960	Argument	3		1293908	1					
ANR	1293961	PrimaryExpression	3		1293908	0					
ANR	1293962	Argument	"""%s"""		1293908	2					
ANR	1293963	PrimaryExpression	"""%s"""		1293908	0					
ANR	1293964	Argument	str		1293908	3					
ANR	1293965	Identifier	str		1293908	0					
ANR	1293966	ExpressionStatement	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s%s"" , instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ] , suff )"	186:1:4103:4199	1293908	2	True				
ANR	1293967	CallExpression	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s%s"" , instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ] , suff )"		1293908	0					
ANR	1293968	Callee	snprintf		1293908	0					
ANR	1293969	Identifier	snprintf		1293908	0					
ANR	1293970	ArgumentList	cmd -> instr		1293908	1					
ANR	1293971	Argument	cmd -> instr		1293908	0					
ANR	1293972	PtrMemberAccess	cmd -> instr		1293908	0					
ANR	1293973	Identifier	cmd		1293908	0					
ANR	1293974	Identifier	instr		1293908	1					
ANR	1293975	Argument	EBC_INSTR_MAXLEN		1293908	1					
ANR	1293976	Identifier	EBC_INSTR_MAXLEN		1293908	0					
ANR	1293977	Argument	"""%s%s"""		1293908	2					
ANR	1293978	PrimaryExpression	"""%s%s"""		1293908	0					
ANR	1293979	Argument	instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ]		1293908	3					
ANR	1293980	ArrayIndexing	instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ]		1293908	0					
ANR	1293981	Identifier	instr_names		1293908	0					
ANR	1293982	BitAndExpression	bytes [ 0 ] & EBC_OPCODE_MASK		1293908	1		&			
ANR	1293983	ArrayIndexing	bytes [ 0 ]		1293908	0					
ANR	1293984	Identifier	bytes		1293908	0					
ANR	1293985	PrimaryExpression	0		1293908	1					
ANR	1293986	Identifier	EBC_OPCODE_MASK		1293908	1					
ANR	1293987	Argument	suff		1293908	4					
ANR	1293988	Identifier	suff		1293908	0					
ANR	1293989	ExpressionStatement	"snprintf ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""0x%x"" , bytes [ 1 ] )"	188:1:4202:4264	1293908	3	True				
ANR	1293990	CallExpression	"snprintf ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""0x%x"" , bytes [ 1 ] )"		1293908	0					
ANR	1293991	Callee	snprintf		1293908	0					
ANR	1293992	Identifier	snprintf		1293908	0					
ANR	1293993	ArgumentList	cmd -> operands		1293908	1					
ANR	1293994	Argument	cmd -> operands		1293908	0					
ANR	1293995	PtrMemberAccess	cmd -> operands		1293908	0					
ANR	1293996	Identifier	cmd		1293908	0					
ANR	1293997	Identifier	operands		1293908	1					
ANR	1293998	Argument	EBC_OPERANDS_MAXLEN		1293908	1					
ANR	1293999	Identifier	EBC_OPERANDS_MAXLEN		1293908	0					
ANR	1294000	Argument	"""0x%x"""		1293908	2					
ANR	1294001	PrimaryExpression	"""0x%x"""		1293908	0					
ANR	1294002	Argument	bytes [ 1 ]		1293908	3					
ANR	1294003	ArrayIndexing	bytes [ 1 ]		1293908	0					
ANR	1294004	Identifier	bytes		1293908	0					
ANR	1294005	PrimaryExpression	1		1293908	1					
ANR	1294006	ReturnStatement	return 2 ;	189:1:4267:4275	1293908	4	True				
ANR	1294007	PrimaryExpression	2		1293908	0					
ANR	1294008	ReturnType	static int		1293908	1					
ANR	1294009	Identifier	decode_jmp8		1293908	2					
ANR	1294010	ParameterList	"const ut8 * bytes , ebc_command_t * cmd"		1293908	3					
ANR	1294011	Parameter	const ut8 * bytes	180:23:3917:3932	1293908	0	True				
ANR	1294012	ParameterType	const ut8 *		1293908	0					
ANR	1294013	Identifier	bytes		1293908	1					
ANR	1294014	Parameter	ebc_command_t * cmd	180:41:3935:3952	1293908	1	True				
ANR	1294015	ParameterType	ebc_command_t *		1293908	0					
ANR	1294016	Identifier	cmd		1293908	1					
ANR	1294017	CFGEntryNode	ENTRY		1293908		True				
ANR	1294018	CFGExitNode	EXIT		1293908		True				
ANR	1294019	Symbol	* * bytes		1293908						
ANR	1294020	Symbol	EBC_OPERANDS_MAXLEN		1293908						
ANR	1294021	Symbol	EBC_INSTR_MAXLEN		1293908						
ANR	1294022	Symbol	* bytes		1293908						
ANR	1294023	Symbol	* instr_names		1293908						
ANR	1294024	Symbol	str		1293908						
ANR	1294025	Symbol	cmd -> operands		1293908						
ANR	1294026	Symbol	suff		1293908						
ANR	1294027	Symbol	instr_names		1293908						
ANR	1294028	Symbol	bytes		1293908						
ANR	1294029	Symbol	* EBC_OPCODE_MASK		1293908						
ANR	1294030	Symbol	cmd		1293908						
ANR	1294031	Symbol	* cmd		1293908						
ANR	1294032	Symbol	cmd -> instr		1293908						
ANR	1294033	Symbol	EBC_OPCODE_MASK		1293908						
ANR	1294034	Symbol	TEST_BIT		1293908						
ANR	1294035	Function	decode_call	192:0:4280:5600							
ANR	1294036	FunctionDef	"decode_call (const ut8 * bytes , ebc_command_t * cmd)"		1294035	0					
ANR	1294037	CompoundStatement		192:61:4341:5600	1294035	0					
ANR	1294038	IdentifierDeclStatement	int ret ;	193:1:4344:4351	1294035	0	True				
ANR	1294039	IdentifierDecl	ret		1294035	0					
ANR	1294040	IdentifierDeclType	int		1294035	0					
ANR	1294041	Identifier	ret		1294035	1					
ANR	1294042	IdentifierDeclStatement	short bits = 32 ;	194:1:4354:4369	1294035	1	True				
ANR	1294043	IdentifierDecl	bits = 32		1294035	0					
ANR	1294044	IdentifierDeclType	short		1294035	0					
ANR	1294045	Identifier	bits		1294035	1					
ANR	1294046	AssignmentExpression	bits = 32		1294035	2		=			
ANR	1294047	Identifier	bits		1294035	0					
ANR	1294048	PrimaryExpression	32		1294035	1					
ANR	1294049	IdentifierDeclStatement	ut8 op1 = bytes [ 1 ] & 0x7 ;	195:1:4372:4396	1294035	2	True				
ANR	1294050	IdentifierDecl	op1 = bytes [ 1 ] & 0x7		1294035	0					
ANR	1294051	IdentifierDeclType	ut8		1294035	0					
ANR	1294052	Identifier	op1		1294035	1					
ANR	1294053	AssignmentExpression	op1 = bytes [ 1 ] & 0x7		1294035	2		=			
ANR	1294054	Identifier	op1		1294035	0					
ANR	1294055	BitAndExpression	bytes [ 1 ] & 0x7		1294035	1		&			
ANR	1294056	ArrayIndexing	bytes [ 1 ]		1294035	0					
ANR	1294057	Identifier	bytes		1294035	0					
ANR	1294058	PrimaryExpression	1		1294035	1					
ANR	1294059	PrimaryExpression	0x7		1294035	1					
ANR	1294060	IdentifierDeclStatement	ut32 i1 ;	196:1:4399:4406	1294035	3	True				
ANR	1294061	IdentifierDecl	i1		1294035	0					
ANR	1294062	IdentifierDeclType	ut32		1294035	0					
ANR	1294063	Identifier	i1		1294035	1					
ANR	1294064	IdentifierDeclStatement	unsigned long i2 ;	197:1:4409:4425	1294035	4	True				
ANR	1294065	IdentifierDecl	i2		1294035	0					
ANR	1294066	IdentifierDeclType	unsigned long		1294035	0					
ANR	1294067	Identifier	i2		1294035	1					
ANR	1294068	IdentifierDeclStatement	ebc_index_t idx32 ;	198:1:4428:4445	1294035	5	True				
ANR	1294069	IdentifierDecl	idx32		1294035	0					
ANR	1294070	IdentifierDeclType	ebc_index_t		1294035	0					
ANR	1294071	Identifier	idx32		1294035	1					
ANR	1294072	IdentifierDeclStatement	char sign ;	199:1:4448:4457	1294035	6	True				
ANR	1294073	IdentifierDecl	sign		1294035	0					
ANR	1294074	IdentifierDeclType	char		1294035	0					
ANR	1294075	Identifier	sign		1294035	1					
ANR	1294076	IfStatement	"if ( ! TEST_BIT ( bytes [ 0 ] , 6 ) )"		1294035	7					
ANR	1294077	Condition	"! TEST_BIT ( bytes [ 0 ] , 6 )"	201:5:4465:4487	1294035	0	True				
ANR	1294078	UnaryOperationExpression	"! TEST_BIT ( bytes [ 0 ] , 6 )"		1294035	0					
ANR	1294079	UnaryOperator	!		1294035	0					
ANR	1294080	CallExpression	"TEST_BIT ( bytes [ 0 ] , 6 )"		1294035	1					
ANR	1294081	Callee	TEST_BIT		1294035	0					
ANR	1294082	Identifier	TEST_BIT		1294035	0					
ANR	1294083	ArgumentList	bytes [ 0 ]		1294035	1					
ANR	1294084	Argument	bytes [ 0 ]		1294035	0					
ANR	1294085	ArrayIndexing	bytes [ 0 ]		1294035	0					
ANR	1294086	Identifier	bytes		1294035	0					
ANR	1294087	PrimaryExpression	0		1294035	1					
ANR	1294088	Argument	6		1294035	1					
ANR	1294089	PrimaryExpression	6		1294035	0					
ANR	1294090	CompoundStatement		10:30:148:148	1294035	1					
ANR	1294091	ExpressionStatement	bits = 32	203:2:4505:4514	1294035	0	True				
ANR	1294092	AssignmentExpression	bits = 32		1294035	0		=			
ANR	1294093	Identifier	bits		1294035	0					
ANR	1294094	PrimaryExpression	32		1294035	1					
ANR	1294095	ExpressionStatement	ret = 2	204:2:4518:4525	1294035	1	True				
ANR	1294096	AssignmentExpression	ret = 2		1294035	0		=			
ANR	1294097	Identifier	ret		1294035	0					
ANR	1294098	PrimaryExpression	2		1294035	1					
ANR	1294099	IfStatement	"if ( TEST_BIT ( bytes [ 1 ] , 3 ) )"		1294035	2					
ANR	1294100	Condition	"TEST_BIT ( bytes [ 1 ] , 3 )"	205:6:4533:4554	1294035	0	True				
ANR	1294101	CallExpression	"TEST_BIT ( bytes [ 1 ] , 3 )"		1294035	0					
ANR	1294102	Callee	TEST_BIT		1294035	0					
ANR	1294103	Identifier	TEST_BIT		1294035	0					
ANR	1294104	ArgumentList	bytes [ 1 ]		1294035	1					
ANR	1294105	Argument	bytes [ 1 ]		1294035	0					
ANR	1294106	ArrayIndexing	bytes [ 1 ]		1294035	0					
ANR	1294107	Identifier	bytes		1294035	0					
ANR	1294108	PrimaryExpression	1		1294035	1					
ANR	1294109	Argument	3		1294035	1					
ANR	1294110	PrimaryExpression	3		1294035	0					
ANR	1294111	CompoundStatement		14:30:215:215	1294035	1					
ANR	1294112	IfStatement	"if ( TEST_BIT ( bytes [ 0 ] , 7 ) )"		1294035	0					
ANR	1294113	Condition	"TEST_BIT ( bytes [ 0 ] , 7 )"	207:7:4590:4611	1294035	0	True				
ANR	1294114	CallExpression	"TEST_BIT ( bytes [ 0 ] , 7 )"		1294035	0					
ANR	1294115	Callee	TEST_BIT		1294035	0					
ANR	1294116	Identifier	TEST_BIT		1294035	0					
ANR	1294117	ArgumentList	bytes [ 0 ]		1294035	1					
ANR	1294118	Argument	bytes [ 0 ]		1294035	0					
ANR	1294119	ArrayIndexing	bytes [ 0 ]		1294035	0					
ANR	1294120	Identifier	bytes		1294035	0					
ANR	1294121	PrimaryExpression	0		1294035	1					
ANR	1294122	Argument	7		1294035	1					
ANR	1294123	PrimaryExpression	7		1294035	0					
ANR	1294124	CompoundStatement		16:31:272:272	1294035	1					
ANR	1294125	ExpressionStatement	"decode_index32 ( bytes + 2 , & idx32 )"	209:4:4653:4687	1294035	0	True				
ANR	1294126	CallExpression	"decode_index32 ( bytes + 2 , & idx32 )"		1294035	0					
ANR	1294127	Callee	decode_index32		1294035	0					
ANR	1294128	Identifier	decode_index32		1294035	0					
ANR	1294129	ArgumentList	bytes + 2		1294035	1					
ANR	1294130	Argument	bytes + 2		1294035	0					
ANR	1294131	AdditiveExpression	bytes + 2		1294035	0		+			
ANR	1294132	Identifier	bytes		1294035	0					
ANR	1294133	PrimaryExpression	2		1294035	1					
ANR	1294134	Argument	& idx32		1294035	1					
ANR	1294135	UnaryOperationExpression	& idx32		1294035	0					
ANR	1294136	UnaryOperator	&		1294035	0					
ANR	1294137	Identifier	idx32		1294035	1					
ANR	1294138	ExpressionStatement	sign = idx32 . sign ? '+' : '-'	210:4:4693:4722	1294035	1	True				
ANR	1294139	AssignmentExpression	sign = idx32 . sign ? '+' : '-'		1294035	0		=			
ANR	1294140	Identifier	sign		1294035	0					
ANR	1294141	ConditionalExpression	idx32 . sign ? '+' : '-'		1294035	1					
ANR	1294142	Condition	idx32 . sign		1294035	0					
ANR	1294143	MemberAccess	idx32 . sign		1294035	0					
ANR	1294144	Identifier	idx32		1294035	0					
ANR	1294145	Identifier	sign		1294035	1					
ANR	1294146	PrimaryExpression	'+'		1294035	1					
ANR	1294147	PrimaryExpression	'-'		1294035	2					
ANR	1294148	ExpressionStatement	"CHK_SNPRINTF ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""@r%d(%c%u, %c%u)"" , op1 , sign , idx32 . n , sign , idx32 . c )"	212:4:4729:4843	1294035	2	True				
ANR	1294149	CallExpression	"CHK_SNPRINTF ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""@r%d(%c%u, %c%u)"" , op1 , sign , idx32 . n , sign , idx32 . c )"		1294035	0					
ANR	1294150	Callee	CHK_SNPRINTF		1294035	0					
ANR	1294151	Identifier	CHK_SNPRINTF		1294035	0					
ANR	1294152	ArgumentList	cmd -> operands		1294035	1					
ANR	1294153	Argument	cmd -> operands		1294035	0					
ANR	1294154	PtrMemberAccess	cmd -> operands		1294035	0					
ANR	1294155	Identifier	cmd		1294035	0					
ANR	1294156	Identifier	operands		1294035	1					
ANR	1294157	Argument	EBC_OPERANDS_MAXLEN		1294035	1					
ANR	1294158	Identifier	EBC_OPERANDS_MAXLEN		1294035	0					
ANR	1294159	Argument	"""@r%d(%c%u, %c%u)"""		1294035	2					
ANR	1294160	PrimaryExpression	"""@r%d(%c%u, %c%u)"""		1294035	0					
ANR	1294161	Argument	op1		1294035	3					
ANR	1294162	Identifier	op1		1294035	0					
ANR	1294163	Argument	sign		1294035	4					
ANR	1294164	Identifier	sign		1294035	0					
ANR	1294165	Argument	idx32 . n		1294035	5					
ANR	1294166	MemberAccess	idx32 . n		1294035	0					
ANR	1294167	Identifier	idx32		1294035	0					
ANR	1294168	Identifier	n		1294035	1					
ANR	1294169	Argument	sign		1294035	6					
ANR	1294170	Identifier	sign		1294035	0					
ANR	1294171	Argument	idx32 . c		1294035	7					
ANR	1294172	MemberAccess	idx32 . c		1294035	0					
ANR	1294173	Identifier	idx32		1294035	0					
ANR	1294174	Identifier	c		1294035	1					
ANR	1294175	ExpressionStatement	ret = 6	215:4:4849:4856	1294035	3	True				
ANR	1294176	AssignmentExpression	ret = 6		1294035	0		=			
ANR	1294177	Identifier	ret		1294035	0					
ANR	1294178	PrimaryExpression	6		1294035	1					
ANR	1294179	ElseStatement	else		1294035	0					
ANR	1294180	CompoundStatement		25:10:526:526	1294035	0					
ANR	1294181	ExpressionStatement	"snprintf ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""@r%d"" , op1 )"	217:4:4874:4937	1294035	0	True				
ANR	1294182	CallExpression	"snprintf ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""@r%d"" , op1 )"		1294035	0					
ANR	1294183	Callee	snprintf		1294035	0					
ANR	1294184	Identifier	snprintf		1294035	0					
ANR	1294185	ArgumentList	cmd -> operands		1294035	1					
ANR	1294186	Argument	cmd -> operands		1294035	0					
ANR	1294187	PtrMemberAccess	cmd -> operands		1294035	0					
ANR	1294188	Identifier	cmd		1294035	0					
ANR	1294189	Identifier	operands		1294035	1					
ANR	1294190	Argument	EBC_OPERANDS_MAXLEN		1294035	1					
ANR	1294191	Identifier	EBC_OPERANDS_MAXLEN		1294035	0					
ANR	1294192	Argument	"""@r%d"""		1294035	2					
ANR	1294193	PrimaryExpression	"""@r%d"""		1294035	0					
ANR	1294194	Argument	op1		1294035	3					
ANR	1294195	Identifier	op1		1294035	0					
ANR	1294196	ElseStatement	else		1294035	0					
ANR	1294197	CompoundStatement		29:9:611:611	1294035	0					
ANR	1294198	IfStatement	"if ( TEST_BIT ( bytes [ 0 ] , 7 ) )"		1294035	0					
ANR	1294199	Condition	"TEST_BIT ( bytes [ 0 ] , 7 )"	222:7:4984:5005	1294035	0	True				
ANR	1294200	CallExpression	"TEST_BIT ( bytes [ 0 ] , 7 )"		1294035	0					
ANR	1294201	Callee	TEST_BIT		1294035	0					
ANR	1294202	Identifier	TEST_BIT		1294035	0					
ANR	1294203	ArgumentList	bytes [ 0 ]		1294035	1					
ANR	1294204	Argument	bytes [ 0 ]		1294035	0					
ANR	1294205	ArrayIndexing	bytes [ 0 ]		1294035	0					
ANR	1294206	Identifier	bytes		1294035	0					
ANR	1294207	PrimaryExpression	0		1294035	1					
ANR	1294208	Argument	7		1294035	1					
ANR	1294209	PrimaryExpression	7		1294035	0					
ANR	1294210	CompoundStatement		31:31:666:666	1294035	1					
ANR	1294211	ExpressionStatement	i1 = * ( ut32 * ) ( bytes + 2 )	224:4:5044:5069	1294035	0	True				
ANR	1294212	AssignmentExpression	i1 = * ( ut32 * ) ( bytes + 2 )		1294035	0		=			
ANR	1294213	Identifier	i1		1294035	0					
ANR	1294214	UnaryOperationExpression	* ( ut32 * ) ( bytes + 2 )		1294035	1					
ANR	1294215	UnaryOperator	*		1294035	0					
ANR	1294216	CastExpression	( ut32 * ) ( bytes + 2 )		1294035	1					
ANR	1294217	CastTarget	ut32 *		1294035	0					
ANR	1294218	AdditiveExpression	bytes + 2		1294035	1		+			
ANR	1294219	Identifier	bytes		1294035	0					
ANR	1294220	PrimaryExpression	2		1294035	1					
ANR	1294221	ExpressionStatement	"CHK_SNPRINTF ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""r%d(0x%x)"" , op1 , i1 )"	225:4:5075:5151	1294035	1	True				
ANR	1294222	CallExpression	"CHK_SNPRINTF ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""r%d(0x%x)"" , op1 , i1 )"		1294035	0					
ANR	1294223	Callee	CHK_SNPRINTF		1294035	0					
ANR	1294224	Identifier	CHK_SNPRINTF		1294035	0					
ANR	1294225	ArgumentList	cmd -> operands		1294035	1					
ANR	1294226	Argument	cmd -> operands		1294035	0					
ANR	1294227	PtrMemberAccess	cmd -> operands		1294035	0					
ANR	1294228	Identifier	cmd		1294035	0					
ANR	1294229	Identifier	operands		1294035	1					
ANR	1294230	Argument	EBC_OPERANDS_MAXLEN		1294035	1					
ANR	1294231	Identifier	EBC_OPERANDS_MAXLEN		1294035	0					
ANR	1294232	Argument	"""r%d(0x%x)"""		1294035	2					
ANR	1294233	PrimaryExpression	"""r%d(0x%x)"""		1294035	0					
ANR	1294234	Argument	op1		1294035	3					
ANR	1294235	Identifier	op1		1294035	0					
ANR	1294236	Argument	i1		1294035	4					
ANR	1294237	Identifier	i1		1294035	0					
ANR	1294238	ExpressionStatement	ret = 6	227:4:5157:5164	1294035	2	True				
ANR	1294239	AssignmentExpression	ret = 6		1294035	0		=			
ANR	1294240	Identifier	ret		1294035	0					
ANR	1294241	PrimaryExpression	6		1294035	1					
ANR	1294242	ElseStatement	else		1294035	0					
ANR	1294243	CompoundStatement		37:10:834:834	1294035	0					
ANR	1294244	ExpressionStatement	"CHK_SNPRINTF ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""r%d"" , op1 )"	230:4:5215:5281	1294035	0	True				
ANR	1294245	CallExpression	"CHK_SNPRINTF ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""r%d"" , op1 )"		1294035	0					
ANR	1294246	Callee	CHK_SNPRINTF		1294035	0					
ANR	1294247	Identifier	CHK_SNPRINTF		1294035	0					
ANR	1294248	ArgumentList	cmd -> operands		1294035	1					
ANR	1294249	Argument	cmd -> operands		1294035	0					
ANR	1294250	PtrMemberAccess	cmd -> operands		1294035	0					
ANR	1294251	Identifier	cmd		1294035	0					
ANR	1294252	Identifier	operands		1294035	1					
ANR	1294253	Argument	EBC_OPERANDS_MAXLEN		1294035	1					
ANR	1294254	Identifier	EBC_OPERANDS_MAXLEN		1294035	0					
ANR	1294255	Argument	"""r%d"""		1294035	2					
ANR	1294256	PrimaryExpression	"""r%d"""		1294035	0					
ANR	1294257	Argument	op1		1294035	3					
ANR	1294258	Identifier	op1		1294035	0					
ANR	1294259	ElseStatement	else		1294035	0					
ANR	1294260	CompoundStatement		43:8:958:958	1294035	0					
ANR	1294261	ExpressionStatement	bits = 64	235:2:5304:5313	1294035	0	True				
ANR	1294262	AssignmentExpression	bits = 64		1294035	0		=			
ANR	1294263	Identifier	bits		1294035	0					
ANR	1294264	PrimaryExpression	64		1294035	1					
ANR	1294265	ExpressionStatement	ret = 10	236:2:5317:5325	1294035	1	True				
ANR	1294266	AssignmentExpression	ret = 10		1294035	0		=			
ANR	1294267	Identifier	ret		1294035	0					
ANR	1294268	PrimaryExpression	10		1294035	1					
ANR	1294269	ExpressionStatement	i2 = * ( ut64 * ) & bytes [ 2 ]	237:2:5329:5352	1294035	2	True				
ANR	1294270	AssignmentExpression	i2 = * ( ut64 * ) & bytes [ 2 ]		1294035	0		=			
ANR	1294271	Identifier	i2		1294035	0					
ANR	1294272	UnaryOperationExpression	* ( ut64 * ) & bytes [ 2 ]		1294035	1					
ANR	1294273	UnaryOperator	*		1294035	0					
ANR	1294274	CastExpression	( ut64 * ) & bytes [ 2 ]		1294035	1					
ANR	1294275	CastTarget	ut64 *		1294035	0					
ANR	1294276	UnaryOperationExpression	& bytes [ 2 ]		1294035	1					
ANR	1294277	UnaryOperator	&		1294035	0					
ANR	1294278	ArrayIndexing	bytes [ 2 ]		1294035	1					
ANR	1294279	Identifier	bytes		1294035	0					
ANR	1294280	PrimaryExpression	2		1294035	1					
ANR	1294281	ExpressionStatement	"CHK_SNPRINTF ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""0x%lx"" , i2 )"	238:2:5356:5418	1294035	3	True				
ANR	1294282	CallExpression	"CHK_SNPRINTF ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""0x%lx"" , i2 )"		1294035	0					
ANR	1294283	Callee	CHK_SNPRINTF		1294035	0					
ANR	1294284	Identifier	CHK_SNPRINTF		1294035	0					
ANR	1294285	ArgumentList	cmd -> operands		1294035	1					
ANR	1294286	Argument	cmd -> operands		1294035	0					
ANR	1294287	PtrMemberAccess	cmd -> operands		1294035	0					
ANR	1294288	Identifier	cmd		1294035	0					
ANR	1294289	Identifier	operands		1294035	1					
ANR	1294290	Argument	EBC_OPERANDS_MAXLEN		1294035	1					
ANR	1294291	Identifier	EBC_OPERANDS_MAXLEN		1294035	0					
ANR	1294292	Argument	"""0x%lx"""		1294035	2					
ANR	1294293	PrimaryExpression	"""0x%lx"""		1294035	0					
ANR	1294294	Argument	i2		1294035	3					
ANR	1294295	Identifier	i2		1294035	0					
ANR	1294296	ExpressionStatement	"CHK_SNPRINTF ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s%d%s%s"" , instr_names [ EBC_CALL ] , bits , TEST_BIT ( bytes [ 1 ] , 5 ) ? ""ex"" : """" , TEST_BIT ( bytes [ 1 ] , 4 ) ? """" : ""a"" )"	240:1:5424:5585	1294035	8	True				
ANR	1294297	CallExpression	"CHK_SNPRINTF ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s%d%s%s"" , instr_names [ EBC_CALL ] , bits , TEST_BIT ( bytes [ 1 ] , 5 ) ? ""ex"" : """" , TEST_BIT ( bytes [ 1 ] , 4 ) ? """" : ""a"" )"		1294035	0					
ANR	1294298	Callee	CHK_SNPRINTF		1294035	0					
ANR	1294299	Identifier	CHK_SNPRINTF		1294035	0					
ANR	1294300	ArgumentList	cmd -> instr		1294035	1					
ANR	1294301	Argument	cmd -> instr		1294035	0					
ANR	1294302	PtrMemberAccess	cmd -> instr		1294035	0					
ANR	1294303	Identifier	cmd		1294035	0					
ANR	1294304	Identifier	instr		1294035	1					
ANR	1294305	Argument	EBC_INSTR_MAXLEN		1294035	1					
ANR	1294306	Identifier	EBC_INSTR_MAXLEN		1294035	0					
ANR	1294307	Argument	"""%s%d%s%s"""		1294035	2					
ANR	1294308	PrimaryExpression	"""%s%d%s%s"""		1294035	0					
ANR	1294309	Argument	instr_names [ EBC_CALL ]		1294035	3					
ANR	1294310	ArrayIndexing	instr_names [ EBC_CALL ]		1294035	0					
ANR	1294311	Identifier	instr_names		1294035	0					
ANR	1294312	Identifier	EBC_CALL		1294035	1					
ANR	1294313	Argument	bits		1294035	4					
ANR	1294314	Identifier	bits		1294035	0					
ANR	1294315	Argument	"TEST_BIT ( bytes [ 1 ] , 5 ) ? ""ex"" : """""		1294035	5					
ANR	1294316	ConditionalExpression	"TEST_BIT ( bytes [ 1 ] , 5 ) ? ""ex"" : """""		1294035	0					
ANR	1294317	Condition	"TEST_BIT ( bytes [ 1 ] , 5 )"		1294035	0					
ANR	1294318	CallExpression	"TEST_BIT ( bytes [ 1 ] , 5 )"		1294035	0					
ANR	1294319	Callee	TEST_BIT		1294035	0					
ANR	1294320	Identifier	TEST_BIT		1294035	0					
ANR	1294321	ArgumentList	bytes [ 1 ]		1294035	1					
ANR	1294322	Argument	bytes [ 1 ]		1294035	0					
ANR	1294323	ArrayIndexing	bytes [ 1 ]		1294035	0					
ANR	1294324	Identifier	bytes		1294035	0					
ANR	1294325	PrimaryExpression	1		1294035	1					
ANR	1294326	Argument	5		1294035	1					
ANR	1294327	PrimaryExpression	5		1294035	0					
ANR	1294328	PrimaryExpression	"""ex"""		1294035	1					
ANR	1294329	PrimaryExpression	""""""		1294035	2					
ANR	1294330	Argument	"TEST_BIT ( bytes [ 1 ] , 4 ) ? """" : ""a"""		1294035	6					
ANR	1294331	ConditionalExpression	"TEST_BIT ( bytes [ 1 ] , 4 ) ? """" : ""a"""		1294035	0					
ANR	1294332	Condition	"TEST_BIT ( bytes [ 1 ] , 4 )"		1294035	0					
ANR	1294333	CallExpression	"TEST_BIT ( bytes [ 1 ] , 4 )"		1294035	0					
ANR	1294334	Callee	TEST_BIT		1294035	0					
ANR	1294335	Identifier	TEST_BIT		1294035	0					
ANR	1294336	ArgumentList	bytes [ 1 ]		1294035	1					
ANR	1294337	Argument	bytes [ 1 ]		1294035	0					
ANR	1294338	ArrayIndexing	bytes [ 1 ]		1294035	0					
ANR	1294339	Identifier	bytes		1294035	0					
ANR	1294340	PrimaryExpression	1		1294035	1					
ANR	1294341	Argument	4		1294035	1					
ANR	1294342	PrimaryExpression	4		1294035	0					
ANR	1294343	PrimaryExpression	""""""		1294035	1					
ANR	1294344	PrimaryExpression	"""a"""		1294035	2					
ANR	1294345	ReturnStatement	return ret ;	244:1:5588:5598	1294035	9	True				
ANR	1294346	Identifier	ret		1294035	0					
ANR	1294347	ReturnType	static int		1294035	1					
ANR	1294348	Identifier	decode_call		1294035	2					
ANR	1294349	ParameterList	"const ut8 * bytes , ebc_command_t * cmd"		1294035	3					
ANR	1294350	Parameter	const ut8 * bytes	192:23:4303:4318	1294035	0	True				
ANR	1294351	ParameterType	const ut8 *		1294035	0					
ANR	1294352	Identifier	bytes		1294035	1					
ANR	1294353	Parameter	ebc_command_t * cmd	192:41:4321:4338	1294035	1	True				
ANR	1294354	ParameterType	ebc_command_t *		1294035	0					
ANR	1294355	Identifier	cmd		1294035	1					
ANR	1294356	CFGEntryNode	ENTRY		1294035		True				
ANR	1294357	CFGExitNode	EXIT		1294035		True				
ANR	1294358	Symbol	EBC_OPERANDS_MAXLEN		1294035						
ANR	1294359	Symbol	EBC_INSTR_MAXLEN		1294035						
ANR	1294360	Symbol	sign		1294035						
ANR	1294361	Symbol	idx32 . sign		1294035						
ANR	1294362	Symbol	* bytes		1294035						
ANR	1294363	Symbol	* instr_names		1294035						
ANR	1294364	Symbol	EBC_CALL		1294035						
ANR	1294365	Symbol	cmd -> operands		1294035						
ANR	1294366	Symbol	* cmd		1294035						
ANR	1294367	Symbol	& idx32		1294035						
ANR	1294368	Symbol	cmd -> instr		1294035						
ANR	1294369	Symbol	TEST_BIT		1294035						
ANR	1294370	Symbol	ret		1294035						
ANR	1294371	Symbol	idx32 . c		1294035						
ANR	1294372	Symbol	* ( ut64 * ) & bytes [ 2 ]		1294035						
ANR	1294373	Symbol	bits		1294035						
ANR	1294374	Symbol	i1		1294035						
ANR	1294375	Symbol	i2		1294035						
ANR	1294376	Symbol	idx32		1294035						
ANR	1294377	Symbol	op1		1294035						
ANR	1294378	Symbol	idx32 . n		1294035						
ANR	1294379	Symbol	instr_names		1294035						
ANR	1294380	Symbol	bytes		1294035						
ANR	1294381	Symbol	* EBC_CALL		1294035						
ANR	1294382	Symbol	cmd		1294035						
ANR	1294383	Symbol	* ( ut32 * ) ( bytes + 2 )		1294035						
ANR	1294384	Function	decode_ret	247:0:5603:5787							
ANR	1294385	FunctionDef	"decode_ret (const ut8 * bytes , ebc_command_t * cmd)"		1294384	0					
ANR	1294386	CompoundStatement		247:60:5663:5787	1294384	0					
ANR	1294387	IdentifierDeclStatement	int ret = 2 ;	248:1:5666:5677	1294384	0	True				
ANR	1294388	IdentifierDecl	ret = 2		1294384	0					
ANR	1294389	IdentifierDeclType	int		1294384	0					
ANR	1294390	Identifier	ret		1294384	1					
ANR	1294391	AssignmentExpression	ret = 2		1294384	2		=			
ANR	1294392	Identifier	ret		1294384	0					
ANR	1294393	PrimaryExpression	2		1294384	1					
ANR	1294394	ExpressionStatement	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s"" , instr_names [ EBC_RET ] )"	249:1:5680:5746	1294384	1	True				
ANR	1294395	CallExpression	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s"" , instr_names [ EBC_RET ] )"		1294384	0					
ANR	1294396	Callee	snprintf		1294384	0					
ANR	1294397	Identifier	snprintf		1294384	0					
ANR	1294398	ArgumentList	cmd -> instr		1294384	1					
ANR	1294399	Argument	cmd -> instr		1294384	0					
ANR	1294400	PtrMemberAccess	cmd -> instr		1294384	0					
ANR	1294401	Identifier	cmd		1294384	0					
ANR	1294402	Identifier	instr		1294384	1					
ANR	1294403	Argument	EBC_INSTR_MAXLEN		1294384	1					
ANR	1294404	Identifier	EBC_INSTR_MAXLEN		1294384	0					
ANR	1294405	Argument	"""%s"""		1294384	2					
ANR	1294406	PrimaryExpression	"""%s"""		1294384	0					
ANR	1294407	Argument	instr_names [ EBC_RET ]		1294384	3					
ANR	1294408	ArrayIndexing	instr_names [ EBC_RET ]		1294384	0					
ANR	1294409	Identifier	instr_names		1294384	0					
ANR	1294410	Identifier	EBC_RET		1294384	1					
ANR	1294411	ExpressionStatement	cmd -> operands [ 0 ] = '\\0'	250:1:5749:5772	1294384	2	True				
ANR	1294412	AssignmentExpression	cmd -> operands [ 0 ] = '\\0'		1294384	0		=			
ANR	1294413	ArrayIndexing	cmd -> operands [ 0 ]		1294384	0					
ANR	1294414	PtrMemberAccess	cmd -> operands		1294384	0					
ANR	1294415	Identifier	cmd		1294384	0					
ANR	1294416	Identifier	operands		1294384	1					
ANR	1294417	PrimaryExpression	0		1294384	1					
ANR	1294418	PrimaryExpression	'\\0'		1294384	1					
ANR	1294419	ReturnStatement	return ret ;	251:1:5775:5785	1294384	3	True				
ANR	1294420	Identifier	ret		1294384	0					
ANR	1294421	ReturnType	static int		1294384	1					
ANR	1294422	Identifier	decode_ret		1294384	2					
ANR	1294423	ParameterList	"const ut8 * bytes , ebc_command_t * cmd"		1294384	3					
ANR	1294424	Parameter	const ut8 * bytes	247:22:5625:5640	1294384	0	True				
ANR	1294425	ParameterType	const ut8 *		1294384	0					
ANR	1294426	Identifier	bytes		1294384	1					
ANR	1294427	Parameter	ebc_command_t * cmd	247:40:5643:5660	1294384	1	True				
ANR	1294428	ParameterType	ebc_command_t *		1294384	0					
ANR	1294429	Identifier	cmd		1294384	1					
ANR	1294430	CFGEntryNode	ENTRY		1294384		True				
ANR	1294431	CFGExitNode	EXIT		1294384		True				
ANR	1294432	Symbol	ret		1294384						
ANR	1294433	Symbol	EBC_RET		1294384						
ANR	1294434	Symbol	* cmd -> operands		1294384						
ANR	1294435	Symbol	EBC_INSTR_MAXLEN		1294384						
ANR	1294436	Symbol	* instr_names		1294384						
ANR	1294437	Symbol	* * cmd		1294384						
ANR	1294438	Symbol	cmd -> operands		1294384						
ANR	1294439	Symbol	instr_names		1294384						
ANR	1294440	Symbol	bytes		1294384						
ANR	1294441	Symbol	* EBC_RET		1294384						
ANR	1294442	Symbol	cmd		1294384						
ANR	1294443	Symbol	* cmd		1294384						
ANR	1294444	Symbol	cmd -> instr		1294384						
ANR	1294445	Function	decode_cmp	254:0:5790:6490							
ANR	1294446	FunctionDef	"decode_cmp (const ut8 * bytes , ebc_command_t * cmd)"		1294445	0					
ANR	1294447	CompoundStatement		254:60:5850:6490	1294445	0					
ANR	1294448	IdentifierDeclStatement	int ret = 2 ;	255:1:5853:5864	1294445	0	True				
ANR	1294449	IdentifierDecl	ret = 2		1294445	0					
ANR	1294450	IdentifierDeclType	int		1294445	0					
ANR	1294451	Identifier	ret		1294445	1					
ANR	1294452	AssignmentExpression	ret = 2		1294445	2		=			
ANR	1294453	Identifier	ret		1294445	0					
ANR	1294454	PrimaryExpression	2		1294445	1					
ANR	1294455	IdentifierDeclStatement	"int op1 , op2 ;"	256:1:5867:5879	1294445	1	True				
ANR	1294456	IdentifierDecl	op1		1294445	0					
ANR	1294457	IdentifierDeclType	int		1294445	0					
ANR	1294458	Identifier	op1		1294445	1					
ANR	1294459	IdentifierDecl	op2		1294445	1					
ANR	1294460	IdentifierDeclType	int		1294445	0					
ANR	1294461	Identifier	op2		1294445	1					
ANR	1294462	IdentifierDeclStatement	char sign ;	257:1:5882:5891	1294445	2	True				
ANR	1294463	IdentifierDecl	sign		1294445	0					
ANR	1294464	IdentifierDeclType	char		1294445	0					
ANR	1294465	Identifier	sign		1294445	1					
ANR	1294466	IdentifierDeclStatement	ut16 immed ;	258:1:5894:5904	1294445	3	True				
ANR	1294467	IdentifierDecl	immed		1294445	0					
ANR	1294468	IdentifierDeclType	ut16		1294445	0					
ANR	1294469	Identifier	immed		1294445	1					
ANR	1294470	IdentifierDeclStatement	ebc_index_t idx ;	259:1:5907:5922	1294445	4	True				
ANR	1294471	IdentifierDecl	idx		1294445	0					
ANR	1294472	IdentifierDeclType	ebc_index_t		1294445	0					
ANR	1294473	Identifier	idx		1294445	1					
ANR	1294474	ExpressionStatement	op1 = bytes [ 1 ] & 0x07	261:1:5926:5947	1294445	5	True				
ANR	1294475	AssignmentExpression	op1 = bytes [ 1 ] & 0x07		1294445	0		=			
ANR	1294476	Identifier	op1		1294445	0					
ANR	1294477	BitAndExpression	bytes [ 1 ] & 0x07		1294445	1		&			
ANR	1294478	ArrayIndexing	bytes [ 1 ]		1294445	0					
ANR	1294479	Identifier	bytes		1294445	0					
ANR	1294480	PrimaryExpression	1		1294445	1					
ANR	1294481	PrimaryExpression	0x07		1294445	1					
ANR	1294482	ExpressionStatement	op2 = ( bytes [ 1 ] >> 4 ) & 0x07	262:1:5950:5978	1294445	6	True				
ANR	1294483	AssignmentExpression	op2 = ( bytes [ 1 ] >> 4 ) & 0x07		1294445	0		=			
ANR	1294484	Identifier	op2		1294445	0					
ANR	1294485	BitAndExpression	( bytes [ 1 ] >> 4 ) & 0x07		1294445	1		&			
ANR	1294486	ShiftExpression	bytes [ 1 ] >> 4		1294445	0		>>			
ANR	1294487	ArrayIndexing	bytes [ 1 ]		1294445	0					
ANR	1294488	Identifier	bytes		1294445	0					
ANR	1294489	PrimaryExpression	1		1294445	1					
ANR	1294490	PrimaryExpression	4		1294445	1					
ANR	1294491	PrimaryExpression	0x07		1294445	1					
ANR	1294492	IfStatement	"if ( TEST_BIT ( bytes [ 0 ] , 7 ) )"		1294445	7					
ANR	1294493	Condition	"TEST_BIT ( bytes [ 0 ] , 7 )"	264:5:5986:6007	1294445	0	True				
ANR	1294494	CallExpression	"TEST_BIT ( bytes [ 0 ] , 7 )"		1294445	0					
ANR	1294495	Callee	TEST_BIT		1294445	0					
ANR	1294496	Identifier	TEST_BIT		1294445	0					
ANR	1294497	ArgumentList	bytes [ 0 ]		1294445	1					
ANR	1294498	Argument	bytes [ 0 ]		1294445	0					
ANR	1294499	ArrayIndexing	bytes [ 0 ]		1294445	0					
ANR	1294500	Identifier	bytes		1294445	0					
ANR	1294501	PrimaryExpression	0		1294445	1					
ANR	1294502	Argument	7		1294445	1					
ANR	1294503	PrimaryExpression	7		1294445	0					
ANR	1294504	CompoundStatement		11:29:159:159	1294445	1					
ANR	1294505	ExpressionStatement	ret += 2	265:2:6014:6022	1294445	0	True				
ANR	1294506	AssignmentExpression	ret += 2		1294445	0		+=			
ANR	1294507	Identifier	ret		1294445	0					
ANR	1294508	PrimaryExpression	2		1294445	1					
ANR	1294509	IfStatement	"if ( TEST_BIT ( bytes [ 1 ] , 7 ) )"		1294445	1					
ANR	1294510	Condition	"TEST_BIT ( bytes [ 1 ] , 7 )"	266:6:6030:6051	1294445	0	True				
ANR	1294511	CallExpression	"TEST_BIT ( bytes [ 1 ] , 7 )"		1294445	0					
ANR	1294512	Callee	TEST_BIT		1294445	0					
ANR	1294513	Identifier	TEST_BIT		1294445	0					
ANR	1294514	ArgumentList	bytes [ 1 ]		1294445	1					
ANR	1294515	Argument	bytes [ 1 ]		1294445	0					
ANR	1294516	ArrayIndexing	bytes [ 1 ]		1294445	0					
ANR	1294517	Identifier	bytes		1294445	0					
ANR	1294518	PrimaryExpression	1		1294445	1					
ANR	1294519	Argument	7		1294445	1					
ANR	1294520	PrimaryExpression	7		1294445	0					
ANR	1294521	CompoundStatement		13:30:203:203	1294445	1					
ANR	1294522	ExpressionStatement	"decode_index16 ( bytes + 2 , & idx )"	267:3:6059:6091	1294445	0	True				
ANR	1294523	CallExpression	"decode_index16 ( bytes + 2 , & idx )"		1294445	0					
ANR	1294524	Callee	decode_index16		1294445	0					
ANR	1294525	Identifier	decode_index16		1294445	0					
ANR	1294526	ArgumentList	bytes + 2		1294445	1					
ANR	1294527	Argument	bytes + 2		1294445	0					
ANR	1294528	AdditiveExpression	bytes + 2		1294445	0		+			
ANR	1294529	Identifier	bytes		1294445	0					
ANR	1294530	PrimaryExpression	2		1294445	1					
ANR	1294531	Argument	& idx		1294445	1					
ANR	1294532	UnaryOperationExpression	& idx		1294445	0					
ANR	1294533	UnaryOperator	&		1294445	0					
ANR	1294534	Identifier	idx		1294445	1					
ANR	1294535	ExpressionStatement	sign = idx . sign ? '+' : '-'	268:3:6096:6123	1294445	1	True				
ANR	1294536	AssignmentExpression	sign = idx . sign ? '+' : '-'		1294445	0		=			
ANR	1294537	Identifier	sign		1294445	0					
ANR	1294538	ConditionalExpression	idx . sign ? '+' : '-'		1294445	1					
ANR	1294539	Condition	idx . sign		1294445	0					
ANR	1294540	MemberAccess	idx . sign		1294445	0					
ANR	1294541	Identifier	idx		1294445	0					
ANR	1294542	Identifier	sign		1294445	1					
ANR	1294543	PrimaryExpression	'+'		1294445	1					
ANR	1294544	PrimaryExpression	'-'		1294445	2					
ANR	1294545	ExpressionStatement	"CHK_SNPRINTF ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""r%d, @r%d (%c%d, %c%d)"" , op1 , op2 , sign , idx . n , sign , idx . c )"	269:3:6128:6247	1294445	2	True				
ANR	1294546	CallExpression	"CHK_SNPRINTF ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""r%d, @r%d (%c%d, %c%d)"" , op1 , op2 , sign , idx . n , sign , idx . c )"		1294445	0					
ANR	1294547	Callee	CHK_SNPRINTF		1294445	0					
ANR	1294548	Identifier	CHK_SNPRINTF		1294445	0					
ANR	1294549	ArgumentList	cmd -> operands		1294445	1					
ANR	1294550	Argument	cmd -> operands		1294445	0					
ANR	1294551	PtrMemberAccess	cmd -> operands		1294445	0					
ANR	1294552	Identifier	cmd		1294445	0					
ANR	1294553	Identifier	operands		1294445	1					
ANR	1294554	Argument	EBC_OPERANDS_MAXLEN		1294445	1					
ANR	1294555	Identifier	EBC_OPERANDS_MAXLEN		1294445	0					
ANR	1294556	Argument	"""r%d, @r%d (%c%d, %c%d)"""		1294445	2					
ANR	1294557	PrimaryExpression	"""r%d, @r%d (%c%d, %c%d)"""		1294445	0					
ANR	1294558	Argument	op1		1294445	3					
ANR	1294559	Identifier	op1		1294445	0					
ANR	1294560	Argument	op2		1294445	4					
ANR	1294561	Identifier	op2		1294445	0					
ANR	1294562	Argument	sign		1294445	5					
ANR	1294563	Identifier	sign		1294445	0					
ANR	1294564	Argument	idx . n		1294445	6					
ANR	1294565	MemberAccess	idx . n		1294445	0					
ANR	1294566	Identifier	idx		1294445	0					
ANR	1294567	Identifier	n		1294445	1					
ANR	1294568	Argument	sign		1294445	7					
ANR	1294569	Identifier	sign		1294445	0					
ANR	1294570	Argument	idx . c		1294445	8					
ANR	1294571	MemberAccess	idx . c		1294445	0					
ANR	1294572	Identifier	idx		1294445	0					
ANR	1294573	Identifier	c		1294445	1					
ANR	1294574	ElseStatement	else		1294445	0					
ANR	1294575	CompoundStatement		19:9:407:407	1294445	0					
ANR	1294576	ExpressionStatement	immed = * ( ut16 * ) & bytes [ 2 ]	273:3:6263:6289	1294445	0	True				
ANR	1294577	AssignmentExpression	immed = * ( ut16 * ) & bytes [ 2 ]		1294445	0		=			
ANR	1294578	Identifier	immed		1294445	0					
ANR	1294579	UnaryOperationExpression	* ( ut16 * ) & bytes [ 2 ]		1294445	1					
ANR	1294580	UnaryOperator	*		1294445	0					
ANR	1294581	CastExpression	( ut16 * ) & bytes [ 2 ]		1294445	1					
ANR	1294582	CastTarget	ut16 *		1294445	0					
ANR	1294583	UnaryOperationExpression	& bytes [ 2 ]		1294445	1					
ANR	1294584	UnaryOperator	&		1294445	0					
ANR	1294585	ArrayIndexing	bytes [ 2 ]		1294445	1					
ANR	1294586	Identifier	bytes		1294445	0					
ANR	1294587	PrimaryExpression	2		1294445	1					
ANR	1294588	ExpressionStatement	"CHK_SNPRINTF ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""r%d, r%d %d"" , op1 , op2 , immed )"	274:3:6294:6379	1294445	1	True				
ANR	1294589	CallExpression	"CHK_SNPRINTF ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""r%d, r%d %d"" , op1 , op2 , immed )"		1294445	0					
ANR	1294590	Callee	CHK_SNPRINTF		1294445	0					
ANR	1294591	Identifier	CHK_SNPRINTF		1294445	0					
ANR	1294592	ArgumentList	cmd -> operands		1294445	1					
ANR	1294593	Argument	cmd -> operands		1294445	0					
ANR	1294594	PtrMemberAccess	cmd -> operands		1294445	0					
ANR	1294595	Identifier	cmd		1294445	0					
ANR	1294596	Identifier	operands		1294445	1					
ANR	1294597	Argument	EBC_OPERANDS_MAXLEN		1294445	1					
ANR	1294598	Identifier	EBC_OPERANDS_MAXLEN		1294445	0					
ANR	1294599	Argument	"""r%d, r%d %d"""		1294445	2					
ANR	1294600	PrimaryExpression	"""r%d, r%d %d"""		1294445	0					
ANR	1294601	Argument	op1		1294445	3					
ANR	1294602	Identifier	op1		1294445	0					
ANR	1294603	Argument	op2		1294445	4					
ANR	1294604	Identifier	op2		1294445	0					
ANR	1294605	Argument	immed		1294445	5					
ANR	1294606	Identifier	immed		1294445	0					
ANR	1294607	ElseStatement	else		1294445	0					
ANR	1294608	CompoundStatement		24:8:542:542	1294445	0					
ANR	1294609	ExpressionStatement	"CHK_SNPRINTF ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""r%d, r%d"" , op1 , op2 )"	278:2:6397:6471	1294445	0	True				
ANR	1294610	CallExpression	"CHK_SNPRINTF ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""r%d, r%d"" , op1 , op2 )"		1294445	0					
ANR	1294611	Callee	CHK_SNPRINTF		1294445	0					
ANR	1294612	Identifier	CHK_SNPRINTF		1294445	0					
ANR	1294613	ArgumentList	cmd -> operands		1294445	1					
ANR	1294614	Argument	cmd -> operands		1294445	0					
ANR	1294615	PtrMemberAccess	cmd -> operands		1294445	0					
ANR	1294616	Identifier	cmd		1294445	0					
ANR	1294617	Identifier	operands		1294445	1					
ANR	1294618	Argument	EBC_OPERANDS_MAXLEN		1294445	1					
ANR	1294619	Identifier	EBC_OPERANDS_MAXLEN		1294445	0					
ANR	1294620	Argument	"""r%d, r%d"""		1294445	2					
ANR	1294621	PrimaryExpression	"""r%d, r%d"""		1294445	0					
ANR	1294622	Argument	op1		1294445	3					
ANR	1294623	Identifier	op1		1294445	0					
ANR	1294624	Argument	op2		1294445	4					
ANR	1294625	Identifier	op2		1294445	0					
ANR	1294626	ReturnStatement	return ret ;	282:1:6478:6488	1294445	8	True				
ANR	1294627	Identifier	ret		1294445	0					
ANR	1294628	ReturnType	static int		1294445	1					
ANR	1294629	Identifier	decode_cmp		1294445	2					
ANR	1294630	ParameterList	"const ut8 * bytes , ebc_command_t * cmd"		1294445	3					
ANR	1294631	Parameter	const ut8 * bytes	254:22:5812:5827	1294445	0	True				
ANR	1294632	ParameterType	const ut8 *		1294445	0					
ANR	1294633	Identifier	bytes		1294445	1					
ANR	1294634	Parameter	ebc_command_t * cmd	254:40:5830:5847	1294445	1	True				
ANR	1294635	ParameterType	ebc_command_t *		1294445	0					
ANR	1294636	Identifier	cmd		1294445	1					
ANR	1294637	CFGEntryNode	ENTRY		1294445		True				
ANR	1294638	CFGExitNode	EXIT		1294445		True				
ANR	1294639	Symbol	ret		1294445						
ANR	1294640	Symbol	EBC_OPERANDS_MAXLEN		1294445						
ANR	1294641	Symbol	& idx		1294445						
ANR	1294642	Symbol	idx . n		1294445						
ANR	1294643	Symbol	sign		1294445						
ANR	1294644	Symbol	* bytes		1294445						
ANR	1294645	Symbol	* ( ut16 * ) & bytes [ 2 ]		1294445						
ANR	1294646	Symbol	op2		1294445						
ANR	1294647	Symbol	op1		1294445						
ANR	1294648	Symbol	immed		1294445						
ANR	1294649	Symbol	cmd -> operands		1294445						
ANR	1294650	Symbol	idx . c		1294445						
ANR	1294651	Symbol	idx . sign		1294445						
ANR	1294652	Symbol	bytes		1294445						
ANR	1294653	Symbol	cmd		1294445						
ANR	1294654	Symbol	* cmd		1294445						
ANR	1294655	Symbol	idx		1294445						
ANR	1294656	Symbol	TEST_BIT		1294445						
ANR	1294657	Function	decode_cmpeq	285:0:6493:6724							
ANR	1294658	FunctionDef	"decode_cmpeq (const ut8 * bytes , ebc_command_t * cmd)"		1294657	0					
ANR	1294659	CompoundStatement		285:62:6555:6724	1294657	0					
ANR	1294660	IdentifierDeclStatement	"unsigned bits = TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32 ;"	286:1:6558:6604	1294657	0	True				
ANR	1294661	IdentifierDecl	"bits = TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32"		1294657	0					
ANR	1294662	IdentifierDeclType	unsigned		1294657	0					
ANR	1294663	Identifier	bits		1294657	1					
ANR	1294664	AssignmentExpression	"bits = TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32"		1294657	2		=			
ANR	1294665	Identifier	bits		1294657	0					
ANR	1294666	ConditionalExpression	"TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32"		1294657	1					
ANR	1294667	Condition	"TEST_BIT ( bytes [ 0 ] , 6 )"		1294657	0					
ANR	1294668	CallExpression	"TEST_BIT ( bytes [ 0 ] , 6 )"		1294657	0					
ANR	1294669	Callee	TEST_BIT		1294657	0					
ANR	1294670	Identifier	TEST_BIT		1294657	0					
ANR	1294671	ArgumentList	bytes [ 0 ]		1294657	1					
ANR	1294672	Argument	bytes [ 0 ]		1294657	0					
ANR	1294673	ArrayIndexing	bytes [ 0 ]		1294657	0					
ANR	1294674	Identifier	bytes		1294657	0					
ANR	1294675	PrimaryExpression	0		1294657	1					
ANR	1294676	Argument	6		1294657	1					
ANR	1294677	PrimaryExpression	6		1294657	0					
ANR	1294678	PrimaryExpression	64		1294657	1					
ANR	1294679	PrimaryExpression	32		1294657	2					
ANR	1294680	ExpressionStatement	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s%deq"" , instr_names [ EBC_CMPLTE ] , bits )"	287:1:6607:6690	1294657	1	True				
ANR	1294681	CallExpression	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s%deq"" , instr_names [ EBC_CMPLTE ] , bits )"		1294657	0					
ANR	1294682	Callee	snprintf		1294657	0					
ANR	1294683	Identifier	snprintf		1294657	0					
ANR	1294684	ArgumentList	cmd -> instr		1294657	1					
ANR	1294685	Argument	cmd -> instr		1294657	0					
ANR	1294686	PtrMemberAccess	cmd -> instr		1294657	0					
ANR	1294687	Identifier	cmd		1294657	0					
ANR	1294688	Identifier	instr		1294657	1					
ANR	1294689	Argument	EBC_INSTR_MAXLEN		1294657	1					
ANR	1294690	Identifier	EBC_INSTR_MAXLEN		1294657	0					
ANR	1294691	Argument	"""%s%deq"""		1294657	2					
ANR	1294692	PrimaryExpression	"""%s%deq"""		1294657	0					
ANR	1294693	Argument	instr_names [ EBC_CMPLTE ]		1294657	3					
ANR	1294694	ArrayIndexing	instr_names [ EBC_CMPLTE ]		1294657	0					
ANR	1294695	Identifier	instr_names		1294657	0					
ANR	1294696	Identifier	EBC_CMPLTE		1294657	1					
ANR	1294697	Argument	bits		1294657	4					
ANR	1294698	Identifier	bits		1294657	0					
ANR	1294699	ReturnStatement	"return decode_cmp ( bytes , cmd ) ;"	289:1:6693:6722	1294657	2	True				
ANR	1294700	CallExpression	"decode_cmp ( bytes , cmd )"		1294657	0					
ANR	1294701	Callee	decode_cmp		1294657	0					
ANR	1294702	Identifier	decode_cmp		1294657	0					
ANR	1294703	ArgumentList	bytes		1294657	1					
ANR	1294704	Argument	bytes		1294657	0					
ANR	1294705	Identifier	bytes		1294657	0					
ANR	1294706	Argument	cmd		1294657	1					
ANR	1294707	Identifier	cmd		1294657	0					
ANR	1294708	ReturnType	static int		1294657	1					
ANR	1294709	Identifier	decode_cmpeq		1294657	2					
ANR	1294710	ParameterList	"const ut8 * bytes , ebc_command_t * cmd"		1294657	3					
ANR	1294711	Parameter	const ut8 * bytes	285:24:6517:6532	1294657	0	True				
ANR	1294712	ParameterType	const ut8 *		1294657	0					
ANR	1294713	Identifier	bytes		1294657	1					
ANR	1294714	Parameter	ebc_command_t * cmd	285:42:6535:6552	1294657	1	True				
ANR	1294715	ParameterType	ebc_command_t *		1294657	0					
ANR	1294716	Identifier	cmd		1294657	1					
ANR	1294717	CFGEntryNode	ENTRY		1294657		True				
ANR	1294718	CFGExitNode	EXIT		1294657		True				
ANR	1294719	Symbol	* EBC_CMPLTE		1294657						
ANR	1294720	Symbol	EBC_INSTR_MAXLEN		1294657						
ANR	1294721	Symbol	bits		1294657						
ANR	1294722	Symbol	* bytes		1294657						
ANR	1294723	Symbol	* instr_names		1294657						
ANR	1294724	Symbol	decode_cmp		1294657						
ANR	1294725	Symbol	instr_names		1294657						
ANR	1294726	Symbol	bytes		1294657						
ANR	1294727	Symbol	EBC_CMPLTE		1294657						
ANR	1294728	Symbol	cmd		1294657						
ANR	1294729	Symbol	* cmd		1294657						
ANR	1294730	Symbol	cmd -> instr		1294657						
ANR	1294731	Symbol	TEST_BIT		1294657						
ANR	1294732	Function	decode_cmplte	292:0:6727:6960							
ANR	1294733	FunctionDef	"decode_cmplte (const ut8 * bytes , ebc_command_t * cmd)"		1294732	0					
ANR	1294734	CompoundStatement		292:63:6790:6960	1294732	0					
ANR	1294735	IdentifierDeclStatement	"unsigned bits = TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32 ;"	293:1:6793:6839	1294732	0	True				
ANR	1294736	IdentifierDecl	"bits = TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32"		1294732	0					
ANR	1294737	IdentifierDeclType	unsigned		1294732	0					
ANR	1294738	Identifier	bits		1294732	1					
ANR	1294739	AssignmentExpression	"bits = TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32"		1294732	2		=			
ANR	1294740	Identifier	bits		1294732	0					
ANR	1294741	ConditionalExpression	"TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32"		1294732	1					
ANR	1294742	Condition	"TEST_BIT ( bytes [ 0 ] , 6 )"		1294732	0					
ANR	1294743	CallExpression	"TEST_BIT ( bytes [ 0 ] , 6 )"		1294732	0					
ANR	1294744	Callee	TEST_BIT		1294732	0					
ANR	1294745	Identifier	TEST_BIT		1294732	0					
ANR	1294746	ArgumentList	bytes [ 0 ]		1294732	1					
ANR	1294747	Argument	bytes [ 0 ]		1294732	0					
ANR	1294748	ArrayIndexing	bytes [ 0 ]		1294732	0					
ANR	1294749	Identifier	bytes		1294732	0					
ANR	1294750	PrimaryExpression	0		1294732	1					
ANR	1294751	Argument	6		1294732	1					
ANR	1294752	PrimaryExpression	6		1294732	0					
ANR	1294753	PrimaryExpression	64		1294732	1					
ANR	1294754	PrimaryExpression	32		1294732	2					
ANR	1294755	ExpressionStatement	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s%dlte"" , instr_names [ EBC_CMPLTE ] , bits )"	294:1:6842:6926	1294732	1	True				
ANR	1294756	CallExpression	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s%dlte"" , instr_names [ EBC_CMPLTE ] , bits )"		1294732	0					
ANR	1294757	Callee	snprintf		1294732	0					
ANR	1294758	Identifier	snprintf		1294732	0					
ANR	1294759	ArgumentList	cmd -> instr		1294732	1					
ANR	1294760	Argument	cmd -> instr		1294732	0					
ANR	1294761	PtrMemberAccess	cmd -> instr		1294732	0					
ANR	1294762	Identifier	cmd		1294732	0					
ANR	1294763	Identifier	instr		1294732	1					
ANR	1294764	Argument	EBC_INSTR_MAXLEN		1294732	1					
ANR	1294765	Identifier	EBC_INSTR_MAXLEN		1294732	0					
ANR	1294766	Argument	"""%s%dlte"""		1294732	2					
ANR	1294767	PrimaryExpression	"""%s%dlte"""		1294732	0					
ANR	1294768	Argument	instr_names [ EBC_CMPLTE ]		1294732	3					
ANR	1294769	ArrayIndexing	instr_names [ EBC_CMPLTE ]		1294732	0					
ANR	1294770	Identifier	instr_names		1294732	0					
ANR	1294771	Identifier	EBC_CMPLTE		1294732	1					
ANR	1294772	Argument	bits		1294732	4					
ANR	1294773	Identifier	bits		1294732	0					
ANR	1294774	ReturnStatement	"return decode_cmp ( bytes , cmd ) ;"	296:1:6929:6958	1294732	2	True				
ANR	1294775	CallExpression	"decode_cmp ( bytes , cmd )"		1294732	0					
ANR	1294776	Callee	decode_cmp		1294732	0					
ANR	1294777	Identifier	decode_cmp		1294732	0					
ANR	1294778	ArgumentList	bytes		1294732	1					
ANR	1294779	Argument	bytes		1294732	0					
ANR	1294780	Identifier	bytes		1294732	0					
ANR	1294781	Argument	cmd		1294732	1					
ANR	1294782	Identifier	cmd		1294732	0					
ANR	1294783	ReturnType	static int		1294732	1					
ANR	1294784	Identifier	decode_cmplte		1294732	2					
ANR	1294785	ParameterList	"const ut8 * bytes , ebc_command_t * cmd"		1294732	3					
ANR	1294786	Parameter	const ut8 * bytes	292:25:6752:6767	1294732	0	True				
ANR	1294787	ParameterType	const ut8 *		1294732	0					
ANR	1294788	Identifier	bytes		1294732	1					
ANR	1294789	Parameter	ebc_command_t * cmd	292:43:6770:6787	1294732	1	True				
ANR	1294790	ParameterType	ebc_command_t *		1294732	0					
ANR	1294791	Identifier	cmd		1294732	1					
ANR	1294792	CFGEntryNode	ENTRY		1294732		True				
ANR	1294793	CFGExitNode	EXIT		1294732		True				
ANR	1294794	Symbol	* EBC_CMPLTE		1294732						
ANR	1294795	Symbol	EBC_INSTR_MAXLEN		1294732						
ANR	1294796	Symbol	bits		1294732						
ANR	1294797	Symbol	* bytes		1294732						
ANR	1294798	Symbol	* instr_names		1294732						
ANR	1294799	Symbol	decode_cmp		1294732						
ANR	1294800	Symbol	instr_names		1294732						
ANR	1294801	Symbol	bytes		1294732						
ANR	1294802	Symbol	EBC_CMPLTE		1294732						
ANR	1294803	Symbol	cmd		1294732						
ANR	1294804	Symbol	* cmd		1294732						
ANR	1294805	Symbol	cmd -> instr		1294732						
ANR	1294806	Symbol	TEST_BIT		1294732						
ANR	1294807	Function	decode_cmpgte	299:0:6963:7196							
ANR	1294808	FunctionDef	"decode_cmpgte (const ut8 * bytes , ebc_command_t * cmd)"		1294807	0					
ANR	1294809	CompoundStatement		299:63:7026:7196	1294807	0					
ANR	1294810	IdentifierDeclStatement	"unsigned bits = TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32 ;"	300:1:7029:7075	1294807	0	True				
ANR	1294811	IdentifierDecl	"bits = TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32"		1294807	0					
ANR	1294812	IdentifierDeclType	unsigned		1294807	0					
ANR	1294813	Identifier	bits		1294807	1					
ANR	1294814	AssignmentExpression	"bits = TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32"		1294807	2		=			
ANR	1294815	Identifier	bits		1294807	0					
ANR	1294816	ConditionalExpression	"TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32"		1294807	1					
ANR	1294817	Condition	"TEST_BIT ( bytes [ 0 ] , 6 )"		1294807	0					
ANR	1294818	CallExpression	"TEST_BIT ( bytes [ 0 ] , 6 )"		1294807	0					
ANR	1294819	Callee	TEST_BIT		1294807	0					
ANR	1294820	Identifier	TEST_BIT		1294807	0					
ANR	1294821	ArgumentList	bytes [ 0 ]		1294807	1					
ANR	1294822	Argument	bytes [ 0 ]		1294807	0					
ANR	1294823	ArrayIndexing	bytes [ 0 ]		1294807	0					
ANR	1294824	Identifier	bytes		1294807	0					
ANR	1294825	PrimaryExpression	0		1294807	1					
ANR	1294826	Argument	6		1294807	1					
ANR	1294827	PrimaryExpression	6		1294807	0					
ANR	1294828	PrimaryExpression	64		1294807	1					
ANR	1294829	PrimaryExpression	32		1294807	2					
ANR	1294830	ExpressionStatement	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s%dgte"" , instr_names [ EBC_CMPGTE ] , bits )"	301:1:7078:7162	1294807	1	True				
ANR	1294831	CallExpression	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s%dgte"" , instr_names [ EBC_CMPGTE ] , bits )"		1294807	0					
ANR	1294832	Callee	snprintf		1294807	0					
ANR	1294833	Identifier	snprintf		1294807	0					
ANR	1294834	ArgumentList	cmd -> instr		1294807	1					
ANR	1294835	Argument	cmd -> instr		1294807	0					
ANR	1294836	PtrMemberAccess	cmd -> instr		1294807	0					
ANR	1294837	Identifier	cmd		1294807	0					
ANR	1294838	Identifier	instr		1294807	1					
ANR	1294839	Argument	EBC_INSTR_MAXLEN		1294807	1					
ANR	1294840	Identifier	EBC_INSTR_MAXLEN		1294807	0					
ANR	1294841	Argument	"""%s%dgte"""		1294807	2					
ANR	1294842	PrimaryExpression	"""%s%dgte"""		1294807	0					
ANR	1294843	Argument	instr_names [ EBC_CMPGTE ]		1294807	3					
ANR	1294844	ArrayIndexing	instr_names [ EBC_CMPGTE ]		1294807	0					
ANR	1294845	Identifier	instr_names		1294807	0					
ANR	1294846	Identifier	EBC_CMPGTE		1294807	1					
ANR	1294847	Argument	bits		1294807	4					
ANR	1294848	Identifier	bits		1294807	0					
ANR	1294849	ReturnStatement	"return decode_cmp ( bytes , cmd ) ;"	303:1:7165:7194	1294807	2	True				
ANR	1294850	CallExpression	"decode_cmp ( bytes , cmd )"		1294807	0					
ANR	1294851	Callee	decode_cmp		1294807	0					
ANR	1294852	Identifier	decode_cmp		1294807	0					
ANR	1294853	ArgumentList	bytes		1294807	1					
ANR	1294854	Argument	bytes		1294807	0					
ANR	1294855	Identifier	bytes		1294807	0					
ANR	1294856	Argument	cmd		1294807	1					
ANR	1294857	Identifier	cmd		1294807	0					
ANR	1294858	ReturnType	static int		1294807	1					
ANR	1294859	Identifier	decode_cmpgte		1294807	2					
ANR	1294860	ParameterList	"const ut8 * bytes , ebc_command_t * cmd"		1294807	3					
ANR	1294861	Parameter	const ut8 * bytes	299:25:6988:7003	1294807	0	True				
ANR	1294862	ParameterType	const ut8 *		1294807	0					
ANR	1294863	Identifier	bytes		1294807	1					
ANR	1294864	Parameter	ebc_command_t * cmd	299:43:7006:7023	1294807	1	True				
ANR	1294865	ParameterType	ebc_command_t *		1294807	0					
ANR	1294866	Identifier	cmd		1294807	1					
ANR	1294867	CFGEntryNode	ENTRY		1294807		True				
ANR	1294868	CFGExitNode	EXIT		1294807		True				
ANR	1294869	Symbol	* EBC_CMPGTE		1294807						
ANR	1294870	Symbol	EBC_INSTR_MAXLEN		1294807						
ANR	1294871	Symbol	bits		1294807						
ANR	1294872	Symbol	* bytes		1294807						
ANR	1294873	Symbol	* instr_names		1294807						
ANR	1294874	Symbol	EBC_CMPGTE		1294807						
ANR	1294875	Symbol	decode_cmp		1294807						
ANR	1294876	Symbol	instr_names		1294807						
ANR	1294877	Symbol	bytes		1294807						
ANR	1294878	Symbol	cmd		1294807						
ANR	1294879	Symbol	* cmd		1294807						
ANR	1294880	Symbol	cmd -> instr		1294807						
ANR	1294881	Symbol	TEST_BIT		1294807						
ANR	1294882	Function	decode_cmpulte	306:0:7199:7435							
ANR	1294883	FunctionDef	"decode_cmpulte (const ut8 * bytes , ebc_command_t * cmd)"		1294882	0					
ANR	1294884	CompoundStatement		306:64:7263:7435	1294882	0					
ANR	1294885	IdentifierDeclStatement	"unsigned bits = TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32 ;"	307:1:7266:7312	1294882	0	True				
ANR	1294886	IdentifierDecl	"bits = TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32"		1294882	0					
ANR	1294887	IdentifierDeclType	unsigned		1294882	0					
ANR	1294888	Identifier	bits		1294882	1					
ANR	1294889	AssignmentExpression	"bits = TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32"		1294882	2		=			
ANR	1294890	Identifier	bits		1294882	0					
ANR	1294891	ConditionalExpression	"TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32"		1294882	1					
ANR	1294892	Condition	"TEST_BIT ( bytes [ 0 ] , 6 )"		1294882	0					
ANR	1294893	CallExpression	"TEST_BIT ( bytes [ 0 ] , 6 )"		1294882	0					
ANR	1294894	Callee	TEST_BIT		1294882	0					
ANR	1294895	Identifier	TEST_BIT		1294882	0					
ANR	1294896	ArgumentList	bytes [ 0 ]		1294882	1					
ANR	1294897	Argument	bytes [ 0 ]		1294882	0					
ANR	1294898	ArrayIndexing	bytes [ 0 ]		1294882	0					
ANR	1294899	Identifier	bytes		1294882	0					
ANR	1294900	PrimaryExpression	0		1294882	1					
ANR	1294901	Argument	6		1294882	1					
ANR	1294902	PrimaryExpression	6		1294882	0					
ANR	1294903	PrimaryExpression	64		1294882	1					
ANR	1294904	PrimaryExpression	32		1294882	2					
ANR	1294905	ExpressionStatement	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s%dulte"" , instr_names [ EBC_CMPULTE ] , bits )"	308:1:7315:7401	1294882	1	True				
ANR	1294906	CallExpression	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s%dulte"" , instr_names [ EBC_CMPULTE ] , bits )"		1294882	0					
ANR	1294907	Callee	snprintf		1294882	0					
ANR	1294908	Identifier	snprintf		1294882	0					
ANR	1294909	ArgumentList	cmd -> instr		1294882	1					
ANR	1294910	Argument	cmd -> instr		1294882	0					
ANR	1294911	PtrMemberAccess	cmd -> instr		1294882	0					
ANR	1294912	Identifier	cmd		1294882	0					
ANR	1294913	Identifier	instr		1294882	1					
ANR	1294914	Argument	EBC_INSTR_MAXLEN		1294882	1					
ANR	1294915	Identifier	EBC_INSTR_MAXLEN		1294882	0					
ANR	1294916	Argument	"""%s%dulte"""		1294882	2					
ANR	1294917	PrimaryExpression	"""%s%dulte"""		1294882	0					
ANR	1294918	Argument	instr_names [ EBC_CMPULTE ]		1294882	3					
ANR	1294919	ArrayIndexing	instr_names [ EBC_CMPULTE ]		1294882	0					
ANR	1294920	Identifier	instr_names		1294882	0					
ANR	1294921	Identifier	EBC_CMPULTE		1294882	1					
ANR	1294922	Argument	bits		1294882	4					
ANR	1294923	Identifier	bits		1294882	0					
ANR	1294924	ReturnStatement	"return decode_cmp ( bytes , cmd ) ;"	310:1:7404:7433	1294882	2	True				
ANR	1294925	CallExpression	"decode_cmp ( bytes , cmd )"		1294882	0					
ANR	1294926	Callee	decode_cmp		1294882	0					
ANR	1294927	Identifier	decode_cmp		1294882	0					
ANR	1294928	ArgumentList	bytes		1294882	1					
ANR	1294929	Argument	bytes		1294882	0					
ANR	1294930	Identifier	bytes		1294882	0					
ANR	1294931	Argument	cmd		1294882	1					
ANR	1294932	Identifier	cmd		1294882	0					
ANR	1294933	ReturnType	static int		1294882	1					
ANR	1294934	Identifier	decode_cmpulte		1294882	2					
ANR	1294935	ParameterList	"const ut8 * bytes , ebc_command_t * cmd"		1294882	3					
ANR	1294936	Parameter	const ut8 * bytes	306:26:7225:7240	1294882	0	True				
ANR	1294937	ParameterType	const ut8 *		1294882	0					
ANR	1294938	Identifier	bytes		1294882	1					
ANR	1294939	Parameter	ebc_command_t * cmd	306:44:7243:7260	1294882	1	True				
ANR	1294940	ParameterType	ebc_command_t *		1294882	0					
ANR	1294941	Identifier	cmd		1294882	1					
ANR	1294942	CFGEntryNode	ENTRY		1294882		True				
ANR	1294943	CFGExitNode	EXIT		1294882		True				
ANR	1294944	Symbol	EBC_INSTR_MAXLEN		1294882						
ANR	1294945	Symbol	bits		1294882						
ANR	1294946	Symbol	* EBC_CMPULTE		1294882						
ANR	1294947	Symbol	* bytes		1294882						
ANR	1294948	Symbol	* instr_names		1294882						
ANR	1294949	Symbol	decode_cmp		1294882						
ANR	1294950	Symbol	EBC_CMPULTE		1294882						
ANR	1294951	Symbol	instr_names		1294882						
ANR	1294952	Symbol	bytes		1294882						
ANR	1294953	Symbol	cmd		1294882						
ANR	1294954	Symbol	* cmd		1294882						
ANR	1294955	Symbol	cmd -> instr		1294882						
ANR	1294956	Symbol	TEST_BIT		1294882						
ANR	1294957	Function	decode_cmpugte	313:0:7438:7674							
ANR	1294958	FunctionDef	"decode_cmpugte (const ut8 * bytes , ebc_command_t * cmd)"		1294957	0					
ANR	1294959	CompoundStatement		313:64:7502:7674	1294957	0					
ANR	1294960	IdentifierDeclStatement	"unsigned bits = TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32 ;"	314:1:7505:7551	1294957	0	True				
ANR	1294961	IdentifierDecl	"bits = TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32"		1294957	0					
ANR	1294962	IdentifierDeclType	unsigned		1294957	0					
ANR	1294963	Identifier	bits		1294957	1					
ANR	1294964	AssignmentExpression	"bits = TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32"		1294957	2		=			
ANR	1294965	Identifier	bits		1294957	0					
ANR	1294966	ConditionalExpression	"TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32"		1294957	1					
ANR	1294967	Condition	"TEST_BIT ( bytes [ 0 ] , 6 )"		1294957	0					
ANR	1294968	CallExpression	"TEST_BIT ( bytes [ 0 ] , 6 )"		1294957	0					
ANR	1294969	Callee	TEST_BIT		1294957	0					
ANR	1294970	Identifier	TEST_BIT		1294957	0					
ANR	1294971	ArgumentList	bytes [ 0 ]		1294957	1					
ANR	1294972	Argument	bytes [ 0 ]		1294957	0					
ANR	1294973	ArrayIndexing	bytes [ 0 ]		1294957	0					
ANR	1294974	Identifier	bytes		1294957	0					
ANR	1294975	PrimaryExpression	0		1294957	1					
ANR	1294976	Argument	6		1294957	1					
ANR	1294977	PrimaryExpression	6		1294957	0					
ANR	1294978	PrimaryExpression	64		1294957	1					
ANR	1294979	PrimaryExpression	32		1294957	2					
ANR	1294980	ExpressionStatement	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s%dugte"" , instr_names [ EBC_CMPUGTE ] , bits )"	315:1:7554:7640	1294957	1	True				
ANR	1294981	CallExpression	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s%dugte"" , instr_names [ EBC_CMPUGTE ] , bits )"		1294957	0					
ANR	1294982	Callee	snprintf		1294957	0					
ANR	1294983	Identifier	snprintf		1294957	0					
ANR	1294984	ArgumentList	cmd -> instr		1294957	1					
ANR	1294985	Argument	cmd -> instr		1294957	0					
ANR	1294986	PtrMemberAccess	cmd -> instr		1294957	0					
ANR	1294987	Identifier	cmd		1294957	0					
ANR	1294988	Identifier	instr		1294957	1					
ANR	1294989	Argument	EBC_INSTR_MAXLEN		1294957	1					
ANR	1294990	Identifier	EBC_INSTR_MAXLEN		1294957	0					
ANR	1294991	Argument	"""%s%dugte"""		1294957	2					
ANR	1294992	PrimaryExpression	"""%s%dugte"""		1294957	0					
ANR	1294993	Argument	instr_names [ EBC_CMPUGTE ]		1294957	3					
ANR	1294994	ArrayIndexing	instr_names [ EBC_CMPUGTE ]		1294957	0					
ANR	1294995	Identifier	instr_names		1294957	0					
ANR	1294996	Identifier	EBC_CMPUGTE		1294957	1					
ANR	1294997	Argument	bits		1294957	4					
ANR	1294998	Identifier	bits		1294957	0					
ANR	1294999	ReturnStatement	"return decode_cmp ( bytes , cmd ) ;"	317:1:7643:7672	1294957	2	True				
ANR	1295000	CallExpression	"decode_cmp ( bytes , cmd )"		1294957	0					
ANR	1295001	Callee	decode_cmp		1294957	0					
ANR	1295002	Identifier	decode_cmp		1294957	0					
ANR	1295003	ArgumentList	bytes		1294957	1					
ANR	1295004	Argument	bytes		1294957	0					
ANR	1295005	Identifier	bytes		1294957	0					
ANR	1295006	Argument	cmd		1294957	1					
ANR	1295007	Identifier	cmd		1294957	0					
ANR	1295008	ReturnType	static int		1294957	1					
ANR	1295009	Identifier	decode_cmpugte		1294957	2					
ANR	1295010	ParameterList	"const ut8 * bytes , ebc_command_t * cmd"		1294957	3					
ANR	1295011	Parameter	const ut8 * bytes	313:26:7464:7479	1294957	0	True				
ANR	1295012	ParameterType	const ut8 *		1294957	0					
ANR	1295013	Identifier	bytes		1294957	1					
ANR	1295014	Parameter	ebc_command_t * cmd	313:44:7482:7499	1294957	1	True				
ANR	1295015	ParameterType	ebc_command_t *		1294957	0					
ANR	1295016	Identifier	cmd		1294957	1					
ANR	1295017	CFGEntryNode	ENTRY		1294957		True				
ANR	1295018	CFGExitNode	EXIT		1294957		True				
ANR	1295019	Symbol	EBC_INSTR_MAXLEN		1294957						
ANR	1295020	Symbol	bits		1294957						
ANR	1295021	Symbol	* bytes		1294957						
ANR	1295022	Symbol	* instr_names		1294957						
ANR	1295023	Symbol	decode_cmp		1294957						
ANR	1295024	Symbol	* EBC_CMPUGTE		1294957						
ANR	1295025	Symbol	EBC_CMPUGTE		1294957						
ANR	1295026	Symbol	instr_names		1294957						
ANR	1295027	Symbol	bytes		1294957						
ANR	1295028	Symbol	cmd		1294957						
ANR	1295029	Symbol	* cmd		1294957						
ANR	1295030	Symbol	cmd -> instr		1294957						
ANR	1295031	Symbol	TEST_BIT		1294957						
ANR	1295032	Function	decode_not	320:0:7677:8523							
ANR	1295033	FunctionDef	"decode_not (const ut8 * bytes , ebc_command_t * cmd)"		1295032	0					
ANR	1295034	CompoundStatement		320:60:7737:8523	1295032	0					
ANR	1295035	IdentifierDeclStatement	int ret = 2 ;	321:1:7740:7751	1295032	0	True				
ANR	1295036	IdentifierDecl	ret = 2		1295032	0					
ANR	1295037	IdentifierDeclType	int		1295032	0					
ANR	1295038	Identifier	ret		1295032	1					
ANR	1295039	AssignmentExpression	ret = 2		1295032	2		=			
ANR	1295040	Identifier	ret		1295032	0					
ANR	1295041	PrimaryExpression	2		1295032	1					
ANR	1295042	IdentifierDeclStatement	"unsigned bits = TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32 ;"	322:1:7754:7800	1295032	1	True				
ANR	1295043	IdentifierDecl	"bits = TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32"		1295032	0					
ANR	1295044	IdentifierDeclType	unsigned		1295032	0					
ANR	1295045	Identifier	bits		1295032	1					
ANR	1295046	AssignmentExpression	"bits = TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32"		1295032	2		=			
ANR	1295047	Identifier	bits		1295032	0					
ANR	1295048	ConditionalExpression	"TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32"		1295032	1					
ANR	1295049	Condition	"TEST_BIT ( bytes [ 0 ] , 6 )"		1295032	0					
ANR	1295050	CallExpression	"TEST_BIT ( bytes [ 0 ] , 6 )"		1295032	0					
ANR	1295051	Callee	TEST_BIT		1295032	0					
ANR	1295052	Identifier	TEST_BIT		1295032	0					
ANR	1295053	ArgumentList	bytes [ 0 ]		1295032	1					
ANR	1295054	Argument	bytes [ 0 ]		1295032	0					
ANR	1295055	ArrayIndexing	bytes [ 0 ]		1295032	0					
ANR	1295056	Identifier	bytes		1295032	0					
ANR	1295057	PrimaryExpression	0		1295032	1					
ANR	1295058	Argument	6		1295032	1					
ANR	1295059	PrimaryExpression	6		1295032	0					
ANR	1295060	PrimaryExpression	64		1295032	1					
ANR	1295061	PrimaryExpression	32		1295032	2					
ANR	1295062	IdentifierDeclStatement	"unsigned op1 , op2 ;"	323:1:7803:7820	1295032	2	True				
ANR	1295063	IdentifierDecl	op1		1295032	0					
ANR	1295064	IdentifierDeclType	unsigned		1295032	0					
ANR	1295065	Identifier	op1		1295032	1					
ANR	1295066	IdentifierDecl	op2		1295032	1					
ANR	1295067	IdentifierDeclType	unsigned		1295032	0					
ANR	1295068	Identifier	op2		1295032	1					
ANR	1295069	IdentifierDeclStatement	char index [ 32 ] = { 0 } ;	324:1:7823:7843	1295032	3	True				
ANR	1295070	IdentifierDecl	index [ 32 ] = { 0 }		1295032	0					
ANR	1295071	IdentifierDeclType	char [ 32 ]		1295032	0					
ANR	1295072	Identifier	index		1295032	1					
ANR	1295073	PrimaryExpression	32		1295032	2					
ANR	1295074	AssignmentExpression	index [ 32 ] = { 0 }		1295032	3		=			
ANR	1295075	Identifier	index		1295032	0					
ANR	1295076	InitializerList	0		1295032	1					
ANR	1295077	PrimaryExpression	0		1295032	0					
ANR	1295078	IdentifierDeclStatement	ut16 immed ;	325:1:7846:7856	1295032	4	True				
ANR	1295079	IdentifierDecl	immed		1295032	0					
ANR	1295080	IdentifierDeclType	ut16		1295032	0					
ANR	1295081	Identifier	immed		1295032	1					
ANR	1295082	ExpressionStatement	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s%u"" , instr_names [ EBC_NOT ] , bits )"	327:1:7860:7937	1295032	5	True				
ANR	1295083	CallExpression	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s%u"" , instr_names [ EBC_NOT ] , bits )"		1295032	0					
ANR	1295084	Callee	snprintf		1295032	0					
ANR	1295085	Identifier	snprintf		1295032	0					
ANR	1295086	ArgumentList	cmd -> instr		1295032	1					
ANR	1295087	Argument	cmd -> instr		1295032	0					
ANR	1295088	PtrMemberAccess	cmd -> instr		1295032	0					
ANR	1295089	Identifier	cmd		1295032	0					
ANR	1295090	Identifier	instr		1295032	1					
ANR	1295091	Argument	EBC_INSTR_MAXLEN		1295032	1					
ANR	1295092	Identifier	EBC_INSTR_MAXLEN		1295032	0					
ANR	1295093	Argument	"""%s%u"""		1295032	2					
ANR	1295094	PrimaryExpression	"""%s%u"""		1295032	0					
ANR	1295095	Argument	instr_names [ EBC_NOT ]		1295032	3					
ANR	1295096	ArrayIndexing	instr_names [ EBC_NOT ]		1295032	0					
ANR	1295097	Identifier	instr_names		1295032	0					
ANR	1295098	Identifier	EBC_NOT		1295032	1					
ANR	1295099	Argument	bits		1295032	4					
ANR	1295100	Identifier	bits		1295032	0					
ANR	1295101	ExpressionStatement	op1 = bytes [ 1 ] & 0x07	330:1:7941:7962	1295032	6	True				
ANR	1295102	AssignmentExpression	op1 = bytes [ 1 ] & 0x07		1295032	0		=			
ANR	1295103	Identifier	op1		1295032	0					
ANR	1295104	BitAndExpression	bytes [ 1 ] & 0x07		1295032	1		&			
ANR	1295105	ArrayIndexing	bytes [ 1 ]		1295032	0					
ANR	1295106	Identifier	bytes		1295032	0					
ANR	1295107	PrimaryExpression	1		1295032	1					
ANR	1295108	PrimaryExpression	0x07		1295032	1					
ANR	1295109	ExpressionStatement	op2 = ( bytes [ 1 ] >> 4 ) & 0x07	331:1:7965:7993	1295032	7	True				
ANR	1295110	AssignmentExpression	op2 = ( bytes [ 1 ] >> 4 ) & 0x07		1295032	0		=			
ANR	1295111	Identifier	op2		1295032	0					
ANR	1295112	BitAndExpression	( bytes [ 1 ] >> 4 ) & 0x07		1295032	1		&			
ANR	1295113	ShiftExpression	bytes [ 1 ] >> 4		1295032	0		>>			
ANR	1295114	ArrayIndexing	bytes [ 1 ]		1295032	0					
ANR	1295115	Identifier	bytes		1295032	0					
ANR	1295116	PrimaryExpression	1		1295032	1					
ANR	1295117	PrimaryExpression	4		1295032	1					
ANR	1295118	PrimaryExpression	0x07		1295032	1					
ANR	1295119	IfStatement	"if ( TEST_BIT ( bytes [ 0 ] , 7 ) )"		1295032	8					
ANR	1295120	Condition	"TEST_BIT ( bytes [ 0 ] , 7 )"	333:5:8001:8021	1295032	0	True				
ANR	1295121	CallExpression	"TEST_BIT ( bytes [ 0 ] , 7 )"		1295032	0					
ANR	1295122	Callee	TEST_BIT		1295032	0					
ANR	1295123	Identifier	TEST_BIT		1295032	0					
ANR	1295124	ArgumentList	bytes [ 0 ]		1295032	1					
ANR	1295125	Argument	bytes [ 0 ]		1295032	0					
ANR	1295126	ArrayIndexing	bytes [ 0 ]		1295032	0					
ANR	1295127	Identifier	bytes		1295032	0					
ANR	1295128	PrimaryExpression	0		1295032	1					
ANR	1295129	Argument	7		1295032	1					
ANR	1295130	PrimaryExpression	7		1295032	0					
ANR	1295131	CompoundStatement		14:28:286:286	1295032	1					
ANR	1295132	ExpressionStatement	ret = 4	335:2:8056:8063	1295032	0	True				
ANR	1295133	AssignmentExpression	ret = 4		1295032	0		=			
ANR	1295134	Identifier	ret		1295032	0					
ANR	1295135	PrimaryExpression	4		1295032	1					
ANR	1295136	IfStatement	"if ( TEST_BIT ( bytes [ 1 ] , 7 ) )"		1295032	1					
ANR	1295137	Condition	"TEST_BIT ( bytes [ 1 ] , 7 )"	336:6:8071:8091	1295032	0	True				
ANR	1295138	CallExpression	"TEST_BIT ( bytes [ 1 ] , 7 )"		1295032	0					
ANR	1295139	Callee	TEST_BIT		1295032	0					
ANR	1295140	Identifier	TEST_BIT		1295032	0					
ANR	1295141	ArgumentList	bytes [ 1 ]		1295032	1					
ANR	1295142	Argument	bytes [ 1 ]		1295032	0					
ANR	1295143	ArrayIndexing	bytes [ 1 ]		1295032	0					
ANR	1295144	Identifier	bytes		1295032	0					
ANR	1295145	PrimaryExpression	1		1295032	1					
ANR	1295146	Argument	7		1295032	1					
ANR	1295147	PrimaryExpression	7		1295032	0					
ANR	1295148	CompoundStatement		18:3:361:376	1295032	1					
ANR	1295149	IdentifierDeclStatement	ebc_index_t idx ;	337:3:8099:8114	1295032	0	True				
ANR	1295150	IdentifierDecl	idx		1295032	0					
ANR	1295151	IdentifierDeclType	ebc_index_t		1295032	0					
ANR	1295152	Identifier	idx		1295032	1					
ANR	1295153	ExpressionStatement	"decode_index16 ( bytes + 2 , & idx )"	338:3:8119:8150	1295032	1	True				
ANR	1295154	CallExpression	"decode_index16 ( bytes + 2 , & idx )"		1295032	0					
ANR	1295155	Callee	decode_index16		1295032	0					
ANR	1295156	Identifier	decode_index16		1295032	0					
ANR	1295157	ArgumentList	bytes + 2		1295032	1					
ANR	1295158	Argument	bytes + 2		1295032	0					
ANR	1295159	AdditiveExpression	bytes + 2		1295032	0		+			
ANR	1295160	Identifier	bytes		1295032	0					
ANR	1295161	PrimaryExpression	2		1295032	1					
ANR	1295162	Argument	& idx		1295032	1					
ANR	1295163	UnaryOperationExpression	& idx		1295032	0					
ANR	1295164	UnaryOperator	&		1295032	0					
ANR	1295165	Identifier	idx		1295032	1					
ANR	1295166	ExpressionStatement	"snprintf ( index , 32 , "" (%c%d, %c%d)"" , idx . sign ? '+' : '-' , idx . n , idx . sign ? '+' : '-' , idx . c )"	339:3:8155:8259	1295032	2	True				
ANR	1295167	CallExpression	"snprintf ( index , 32 , "" (%c%d, %c%d)"" , idx . sign ? '+' : '-' , idx . n , idx . sign ? '+' : '-' , idx . c )"		1295032	0					
ANR	1295168	Callee	snprintf		1295032	0					
ANR	1295169	Identifier	snprintf		1295032	0					
ANR	1295170	ArgumentList	index		1295032	1					
ANR	1295171	Argument	index		1295032	0					
ANR	1295172	Identifier	index		1295032	0					
ANR	1295173	Argument	32		1295032	1					
ANR	1295174	PrimaryExpression	32		1295032	0					
ANR	1295175	Argument	""" (%c%d, %c%d)"""		1295032	2					
ANR	1295176	PrimaryExpression	""" (%c%d, %c%d)"""		1295032	0					
ANR	1295177	Argument	idx . sign ? '+' : '-'		1295032	3					
ANR	1295178	ConditionalExpression	idx . sign ? '+' : '-'		1295032	0					
ANR	1295179	Condition	idx . sign		1295032	0					
ANR	1295180	MemberAccess	idx . sign		1295032	0					
ANR	1295181	Identifier	idx		1295032	0					
ANR	1295182	Identifier	sign		1295032	1					
ANR	1295183	PrimaryExpression	'+'		1295032	1					
ANR	1295184	PrimaryExpression	'-'		1295032	2					
ANR	1295185	Argument	idx . n		1295032	4					
ANR	1295186	MemberAccess	idx . n		1295032	0					
ANR	1295187	Identifier	idx		1295032	0					
ANR	1295188	Identifier	n		1295032	1					
ANR	1295189	Argument	idx . sign ? '+' : '-'		1295032	5					
ANR	1295190	ConditionalExpression	idx . sign ? '+' : '-'		1295032	0					
ANR	1295191	Condition	idx . sign		1295032	0					
ANR	1295192	MemberAccess	idx . sign		1295032	0					
ANR	1295193	Identifier	idx		1295032	0					
ANR	1295194	Identifier	sign		1295032	1					
ANR	1295195	PrimaryExpression	'+'		1295032	1					
ANR	1295196	PrimaryExpression	'-'		1295032	2					
ANR	1295197	Argument	idx . c		1295032	6					
ANR	1295198	MemberAccess	idx . c		1295032	0					
ANR	1295199	Identifier	idx		1295032	0					
ANR	1295200	Identifier	c		1295032	1					
ANR	1295201	ElseStatement	else		1295032	0					
ANR	1295202	CompoundStatement		23:9:532:532	1295032	0					
ANR	1295203	ExpressionStatement	immed = * ( ut16 * ) & bytes [ 2 ]	343:3:8275:8300	1295032	0	True				
ANR	1295204	AssignmentExpression	immed = * ( ut16 * ) & bytes [ 2 ]		1295032	0		=			
ANR	1295205	Identifier	immed		1295032	0					
ANR	1295206	UnaryOperationExpression	* ( ut16 * ) & bytes [ 2 ]		1295032	1					
ANR	1295207	UnaryOperator	*		1295032	0					
ANR	1295208	CastExpression	( ut16 * ) & bytes [ 2 ]		1295032	1					
ANR	1295209	CastTarget	ut16 *		1295032	0					
ANR	1295210	UnaryOperationExpression	& bytes [ 2 ]		1295032	1					
ANR	1295211	UnaryOperator	&		1295032	0					
ANR	1295212	ArrayIndexing	bytes [ 2 ]		1295032	1					
ANR	1295213	Identifier	bytes		1295032	0					
ANR	1295214	PrimaryExpression	2		1295032	1					
ANR	1295215	ExpressionStatement	"snprintf ( index , 32 , ""(%u)"" , immed )"	344:3:8305:8339	1295032	1	True				
ANR	1295216	CallExpression	"snprintf ( index , 32 , ""(%u)"" , immed )"		1295032	0					
ANR	1295217	Callee	snprintf		1295032	0					
ANR	1295218	Identifier	snprintf		1295032	0					
ANR	1295219	ArgumentList	index		1295032	1					
ANR	1295220	Argument	index		1295032	0					
ANR	1295221	Identifier	index		1295032	0					
ANR	1295222	Argument	32		1295032	1					
ANR	1295223	PrimaryExpression	32		1295032	0					
ANR	1295224	Argument	"""(%u)"""		1295032	2					
ANR	1295225	PrimaryExpression	"""(%u)"""		1295032	0					
ANR	1295226	Argument	immed		1295032	3					
ANR	1295227	Identifier	immed		1295032	0					
ANR	1295228	ExpressionStatement	"CHK_SNPRINTF ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""%sr%d, %sr%d%s"" , TEST_BIT ( bytes [ 1 ] , 3 ) ? ""@"" : """" , op1 , TEST_BIT ( bytes [ 1 ] , 7 ) ? ""@"" : """" , op2 , index )"	348:1:8350:8508	1295032	9	True				
ANR	1295229	CallExpression	"CHK_SNPRINTF ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""%sr%d, %sr%d%s"" , TEST_BIT ( bytes [ 1 ] , 3 ) ? ""@"" : """" , op1 , TEST_BIT ( bytes [ 1 ] , 7 ) ? ""@"" : """" , op2 , index )"		1295032	0					
ANR	1295230	Callee	CHK_SNPRINTF		1295032	0					
ANR	1295231	Identifier	CHK_SNPRINTF		1295032	0					
ANR	1295232	ArgumentList	cmd -> operands		1295032	1					
ANR	1295233	Argument	cmd -> operands		1295032	0					
ANR	1295234	PtrMemberAccess	cmd -> operands		1295032	0					
ANR	1295235	Identifier	cmd		1295032	0					
ANR	1295236	Identifier	operands		1295032	1					
ANR	1295237	Argument	EBC_OPERANDS_MAXLEN		1295032	1					
ANR	1295238	Identifier	EBC_OPERANDS_MAXLEN		1295032	0					
ANR	1295239	Argument	"""%sr%d, %sr%d%s"""		1295032	2					
ANR	1295240	PrimaryExpression	"""%sr%d, %sr%d%s"""		1295032	0					
ANR	1295241	Argument	"TEST_BIT ( bytes [ 1 ] , 3 ) ? ""@"" : """""		1295032	3					
ANR	1295242	ConditionalExpression	"TEST_BIT ( bytes [ 1 ] , 3 ) ? ""@"" : """""		1295032	0					
ANR	1295243	Condition	"TEST_BIT ( bytes [ 1 ] , 3 )"		1295032	0					
ANR	1295244	CallExpression	"TEST_BIT ( bytes [ 1 ] , 3 )"		1295032	0					
ANR	1295245	Callee	TEST_BIT		1295032	0					
ANR	1295246	Identifier	TEST_BIT		1295032	0					
ANR	1295247	ArgumentList	bytes [ 1 ]		1295032	1					
ANR	1295248	Argument	bytes [ 1 ]		1295032	0					
ANR	1295249	ArrayIndexing	bytes [ 1 ]		1295032	0					
ANR	1295250	Identifier	bytes		1295032	0					
ANR	1295251	PrimaryExpression	1		1295032	1					
ANR	1295252	Argument	3		1295032	1					
ANR	1295253	PrimaryExpression	3		1295032	0					
ANR	1295254	PrimaryExpression	"""@"""		1295032	1					
ANR	1295255	PrimaryExpression	""""""		1295032	2					
ANR	1295256	Argument	op1		1295032	4					
ANR	1295257	Identifier	op1		1295032	0					
ANR	1295258	Argument	"TEST_BIT ( bytes [ 1 ] , 7 ) ? ""@"" : """""		1295032	5					
ANR	1295259	ConditionalExpression	"TEST_BIT ( bytes [ 1 ] , 7 ) ? ""@"" : """""		1295032	0					
ANR	1295260	Condition	"TEST_BIT ( bytes [ 1 ] , 7 )"		1295032	0					
ANR	1295261	CallExpression	"TEST_BIT ( bytes [ 1 ] , 7 )"		1295032	0					
ANR	1295262	Callee	TEST_BIT		1295032	0					
ANR	1295263	Identifier	TEST_BIT		1295032	0					
ANR	1295264	ArgumentList	bytes [ 1 ]		1295032	1					
ANR	1295265	Argument	bytes [ 1 ]		1295032	0					
ANR	1295266	ArrayIndexing	bytes [ 1 ]		1295032	0					
ANR	1295267	Identifier	bytes		1295032	0					
ANR	1295268	PrimaryExpression	1		1295032	1					
ANR	1295269	Argument	7		1295032	1					
ANR	1295270	PrimaryExpression	7		1295032	0					
ANR	1295271	PrimaryExpression	"""@"""		1295032	1					
ANR	1295272	PrimaryExpression	""""""		1295032	2					
ANR	1295273	Argument	op2		1295032	6					
ANR	1295274	Identifier	op2		1295032	0					
ANR	1295275	Argument	index		1295032	7					
ANR	1295276	Identifier	index		1295032	0					
ANR	1295277	ReturnStatement	return ret ;	351:1:8511:8521	1295032	10	True				
ANR	1295278	Identifier	ret		1295032	0					
ANR	1295279	ReturnType	static int		1295032	1					
ANR	1295280	Identifier	decode_not		1295032	2					
ANR	1295281	ParameterList	"const ut8 * bytes , ebc_command_t * cmd"		1295032	3					
ANR	1295282	Parameter	const ut8 * bytes	320:22:7699:7714	1295032	0	True				
ANR	1295283	ParameterType	const ut8 *		1295032	0					
ANR	1295284	Identifier	bytes		1295032	1					
ANR	1295285	Parameter	ebc_command_t * cmd	320:40:7717:7734	1295032	1	True				
ANR	1295286	ParameterType	ebc_command_t *		1295032	0					
ANR	1295287	Identifier	cmd		1295032	1					
ANR	1295288	CFGEntryNode	ENTRY		1295032		True				
ANR	1295289	CFGExitNode	EXIT		1295032		True				
ANR	1295290	Symbol	EBC_OPERANDS_MAXLEN		1295032						
ANR	1295291	Symbol	EBC_INSTR_MAXLEN		1295032						
ANR	1295292	Symbol	* bytes		1295032						
ANR	1295293	Symbol	* instr_names		1295032						
ANR	1295294	Symbol	immed		1295032						
ANR	1295295	Symbol	cmd -> operands		1295032						
ANR	1295296	Symbol	idx . sign		1295032						
ANR	1295297	Symbol	* cmd		1295032						
ANR	1295298	Symbol	cmd -> instr		1295032						
ANR	1295299	Symbol	TEST_BIT		1295032						
ANR	1295300	Symbol	ret		1295032						
ANR	1295301	Symbol	& idx		1295032						
ANR	1295302	Symbol	idx . n		1295032						
ANR	1295303	Symbol	bits		1295032						
ANR	1295304	Symbol	index		1295032						
ANR	1295305	Symbol	* ( ut16 * ) & bytes [ 2 ]		1295032						
ANR	1295306	Symbol	* EBC_NOT		1295032						
ANR	1295307	Symbol	op2		1295032						
ANR	1295308	Symbol	EBC_NOT		1295032						
ANR	1295309	Symbol	op1		1295032						
ANR	1295310	Symbol	idx . c		1295032						
ANR	1295311	Symbol	instr_names		1295032						
ANR	1295312	Symbol	bytes		1295032						
ANR	1295313	Symbol	cmd		1295032						
ANR	1295314	Symbol	idx		1295032						
ANR	1295315	Function	decode_neg	354:0:8526:8680							
ANR	1295316	FunctionDef	"decode_neg (const ut8 * bytes , ebc_command_t * cmd)"		1295315	0					
ANR	1295317	CompoundStatement		354:60:8586:8680	1295315	0					
ANR	1295318	IdentifierDeclStatement	"int ret = decode_not ( bytes , cmd ) ;"	355:1:8589:8621	1295315	0	True				
ANR	1295319	IdentifierDecl	"ret = decode_not ( bytes , cmd )"		1295315	0					
ANR	1295320	IdentifierDeclType	int		1295315	0					
ANR	1295321	Identifier	ret		1295315	1					
ANR	1295322	AssignmentExpression	"ret = decode_not ( bytes , cmd )"		1295315	2		=			
ANR	1295323	Identifier	ret		1295315	0					
ANR	1295324	CallExpression	"decode_not ( bytes , cmd )"		1295315	1					
ANR	1295325	Callee	decode_not		1295315	0					
ANR	1295326	Identifier	decode_not		1295315	0					
ANR	1295327	ArgumentList	bytes		1295315	1					
ANR	1295328	Argument	bytes		1295315	0					
ANR	1295329	Identifier	bytes		1295315	0					
ANR	1295330	Argument	cmd		1295315	1					
ANR	1295331	Identifier	cmd		1295315	0					
ANR	1295332	ExpressionStatement	cmd -> instr [ 1 ] = 'e'	356:1:8624:8643	1295315	1	True				
ANR	1295333	AssignmentExpression	cmd -> instr [ 1 ] = 'e'		1295315	0		=			
ANR	1295334	ArrayIndexing	cmd -> instr [ 1 ]		1295315	0					
ANR	1295335	PtrMemberAccess	cmd -> instr		1295315	0					
ANR	1295336	Identifier	cmd		1295315	0					
ANR	1295337	Identifier	instr		1295315	1					
ANR	1295338	PrimaryExpression	1		1295315	1					
ANR	1295339	PrimaryExpression	'e'		1295315	1					
ANR	1295340	ExpressionStatement	cmd -> instr [ 2 ] = 'g'	357:1:8646:8665	1295315	2	True				
ANR	1295341	AssignmentExpression	cmd -> instr [ 2 ] = 'g'		1295315	0		=			
ANR	1295342	ArrayIndexing	cmd -> instr [ 2 ]		1295315	0					
ANR	1295343	PtrMemberAccess	cmd -> instr		1295315	0					
ANR	1295344	Identifier	cmd		1295315	0					
ANR	1295345	Identifier	instr		1295315	1					
ANR	1295346	PrimaryExpression	2		1295315	1					
ANR	1295347	PrimaryExpression	'g'		1295315	1					
ANR	1295348	ReturnStatement	return ret ;	358:1:8668:8678	1295315	3	True				
ANR	1295349	Identifier	ret		1295315	0					
ANR	1295350	ReturnType	static int		1295315	1					
ANR	1295351	Identifier	decode_neg		1295315	2					
ANR	1295352	ParameterList	"const ut8 * bytes , ebc_command_t * cmd"		1295315	3					
ANR	1295353	Parameter	const ut8 * bytes	354:22:8548:8563	1295315	0	True				
ANR	1295354	ParameterType	const ut8 *		1295315	0					
ANR	1295355	Identifier	bytes		1295315	1					
ANR	1295356	Parameter	ebc_command_t * cmd	354:40:8566:8583	1295315	1	True				
ANR	1295357	ParameterType	ebc_command_t *		1295315	0					
ANR	1295358	Identifier	cmd		1295315	1					
ANR	1295359	CFGEntryNode	ENTRY		1295315		True				
ANR	1295360	CFGExitNode	EXIT		1295315		True				
ANR	1295361	Symbol	ret		1295315						
ANR	1295362	Symbol	bytes		1295315						
ANR	1295363	Symbol	decode_not		1295315						
ANR	1295364	Symbol	cmd		1295315						
ANR	1295365	Symbol	* cmd -> instr		1295315						
ANR	1295366	Symbol	* cmd		1295315						
ANR	1295367	Symbol	cmd -> instr		1295315						
ANR	1295368	Symbol	* * cmd		1295315						
ANR	1295369	Function	decode_add	361:0:8683:9535							
ANR	1295370	FunctionDef	"decode_add (const ut8 * bytes , ebc_command_t * cmd)"		1295369	0					
ANR	1295371	CompoundStatement		361:60:8743:9535	1295369	0					
ANR	1295372	IdentifierDeclStatement	char sign ;	362:1:8746:8755	1295369	0	True				
ANR	1295373	IdentifierDecl	sign		1295369	0					
ANR	1295374	IdentifierDeclType	char		1295369	0					
ANR	1295375	Identifier	sign		1295369	1					
ANR	1295376	IdentifierDeclStatement	int ret = 2 ;	363:1:8758:8769	1295369	1	True				
ANR	1295377	IdentifierDecl	ret = 2		1295369	0					
ANR	1295378	IdentifierDeclType	int		1295369	0					
ANR	1295379	Identifier	ret		1295369	1					
ANR	1295380	AssignmentExpression	ret = 2		1295369	2		=			
ANR	1295381	Identifier	ret		1295369	0					
ANR	1295382	PrimaryExpression	2		1295369	1					
ANR	1295383	IdentifierDeclStatement	"unsigned bits = TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32 ;"	364:1:8772:8818	1295369	2	True				
ANR	1295384	IdentifierDecl	"bits = TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32"		1295369	0					
ANR	1295385	IdentifierDeclType	unsigned		1295369	0					
ANR	1295386	Identifier	bits		1295369	1					
ANR	1295387	AssignmentExpression	"bits = TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32"		1295369	2		=			
ANR	1295388	Identifier	bits		1295369	0					
ANR	1295389	ConditionalExpression	"TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32"		1295369	1					
ANR	1295390	Condition	"TEST_BIT ( bytes [ 0 ] , 6 )"		1295369	0					
ANR	1295391	CallExpression	"TEST_BIT ( bytes [ 0 ] , 6 )"		1295369	0					
ANR	1295392	Callee	TEST_BIT		1295369	0					
ANR	1295393	Identifier	TEST_BIT		1295369	0					
ANR	1295394	ArgumentList	bytes [ 0 ]		1295369	1					
ANR	1295395	Argument	bytes [ 0 ]		1295369	0					
ANR	1295396	ArrayIndexing	bytes [ 0 ]		1295369	0					
ANR	1295397	Identifier	bytes		1295369	0					
ANR	1295398	PrimaryExpression	0		1295369	1					
ANR	1295399	Argument	6		1295369	1					
ANR	1295400	PrimaryExpression	6		1295369	0					
ANR	1295401	PrimaryExpression	64		1295369	1					
ANR	1295402	PrimaryExpression	32		1295369	2					
ANR	1295403	IdentifierDeclStatement	"unsigned op1 , op2 ;"	365:1:8821:8838	1295369	3	True				
ANR	1295404	IdentifierDecl	op1		1295369	0					
ANR	1295405	IdentifierDeclType	unsigned		1295369	0					
ANR	1295406	Identifier	op1		1295369	1					
ANR	1295407	IdentifierDecl	op2		1295369	1					
ANR	1295408	IdentifierDeclType	unsigned		1295369	0					
ANR	1295409	Identifier	op2		1295369	1					
ANR	1295410	IdentifierDeclStatement	char index [ 32 ] = { 0 } ;	366:1:8841:8861	1295369	4	True				
ANR	1295411	IdentifierDecl	index [ 32 ] = { 0 }		1295369	0					
ANR	1295412	IdentifierDeclType	char [ 32 ]		1295369	0					
ANR	1295413	Identifier	index		1295369	1					
ANR	1295414	PrimaryExpression	32		1295369	2					
ANR	1295415	AssignmentExpression	index [ 32 ] = { 0 }		1295369	3		=			
ANR	1295416	Identifier	index		1295369	0					
ANR	1295417	InitializerList	0		1295369	1					
ANR	1295418	PrimaryExpression	0		1295369	0					
ANR	1295419	IdentifierDeclStatement	ut16 immed ;	367:1:8864:8874	1295369	5	True				
ANR	1295420	IdentifierDecl	immed		1295369	0					
ANR	1295421	IdentifierDeclType	ut16		1295369	0					
ANR	1295422	Identifier	immed		1295369	1					
ANR	1295423	ExpressionStatement	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s%u"" , instr_names [ EBC_ADD ] , bits )"	369:1:8878:8956	1295369	6	True				
ANR	1295424	CallExpression	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s%u"" , instr_names [ EBC_ADD ] , bits )"		1295369	0					
ANR	1295425	Callee	snprintf		1295369	0					
ANR	1295426	Identifier	snprintf		1295369	0					
ANR	1295427	ArgumentList	cmd -> instr		1295369	1					
ANR	1295428	Argument	cmd -> instr		1295369	0					
ANR	1295429	PtrMemberAccess	cmd -> instr		1295369	0					
ANR	1295430	Identifier	cmd		1295369	0					
ANR	1295431	Identifier	instr		1295369	1					
ANR	1295432	Argument	EBC_INSTR_MAXLEN		1295369	1					
ANR	1295433	Identifier	EBC_INSTR_MAXLEN		1295369	0					
ANR	1295434	Argument	"""%s%u"""		1295369	2					
ANR	1295435	PrimaryExpression	"""%s%u"""		1295369	0					
ANR	1295436	Argument	instr_names [ EBC_ADD ]		1295369	3					
ANR	1295437	ArrayIndexing	instr_names [ EBC_ADD ]		1295369	0					
ANR	1295438	Identifier	instr_names		1295369	0					
ANR	1295439	Identifier	EBC_ADD		1295369	1					
ANR	1295440	Argument	bits		1295369	4					
ANR	1295441	Identifier	bits		1295369	0					
ANR	1295442	ExpressionStatement	op1 = bytes [ 1 ] & 0x07	372:1:8960:8981	1295369	7	True				
ANR	1295443	AssignmentExpression	op1 = bytes [ 1 ] & 0x07		1295369	0		=			
ANR	1295444	Identifier	op1		1295369	0					
ANR	1295445	BitAndExpression	bytes [ 1 ] & 0x07		1295369	1		&			
ANR	1295446	ArrayIndexing	bytes [ 1 ]		1295369	0					
ANR	1295447	Identifier	bytes		1295369	0					
ANR	1295448	PrimaryExpression	1		1295369	1					
ANR	1295449	PrimaryExpression	0x07		1295369	1					
ANR	1295450	ExpressionStatement	op2 = ( bytes [ 1 ] >> 4 ) & 0x07	373:1:8984:9012	1295369	8	True				
ANR	1295451	AssignmentExpression	op2 = ( bytes [ 1 ] >> 4 ) & 0x07		1295369	0		=			
ANR	1295452	Identifier	op2		1295369	0					
ANR	1295453	BitAndExpression	( bytes [ 1 ] >> 4 ) & 0x07		1295369	1		&			
ANR	1295454	ShiftExpression	bytes [ 1 ] >> 4		1295369	0		>>			
ANR	1295455	ArrayIndexing	bytes [ 1 ]		1295369	0					
ANR	1295456	Identifier	bytes		1295369	0					
ANR	1295457	PrimaryExpression	1		1295369	1					
ANR	1295458	PrimaryExpression	4		1295369	1					
ANR	1295459	PrimaryExpression	0x07		1295369	1					
ANR	1295460	IfStatement	"if ( TEST_BIT ( bytes [ 0 ] , 7 ) )"		1295369	9					
ANR	1295461	Condition	"TEST_BIT ( bytes [ 0 ] , 7 )"	375:5:9020:9041	1295369	0	True				
ANR	1295462	CallExpression	"TEST_BIT ( bytes [ 0 ] , 7 )"		1295369	0					
ANR	1295463	Callee	TEST_BIT		1295369	0					
ANR	1295464	Identifier	TEST_BIT		1295369	0					
ANR	1295465	ArgumentList	bytes [ 0 ]		1295369	1					
ANR	1295466	Argument	bytes [ 0 ]		1295369	0					
ANR	1295467	ArrayIndexing	bytes [ 0 ]		1295369	0					
ANR	1295468	Identifier	bytes		1295369	0					
ANR	1295469	PrimaryExpression	0		1295369	1					
ANR	1295470	Argument	7		1295369	1					
ANR	1295471	PrimaryExpression	7		1295369	0					
ANR	1295472	CompoundStatement		15:29:300:300	1295369	1					
ANR	1295473	ExpressionStatement	ret = 4	376:2:9048:9055	1295369	0	True				
ANR	1295474	AssignmentExpression	ret = 4		1295369	0		=			
ANR	1295475	Identifier	ret		1295369	0					
ANR	1295476	PrimaryExpression	4		1295369	1					
ANR	1295477	IfStatement	"if ( TEST_BIT ( bytes [ 1 ] , 7 ) )"		1295369	1					
ANR	1295478	Condition	"TEST_BIT ( bytes [ 1 ] , 7 )"	377:6:9063:9084	1295369	0	True				
ANR	1295479	CallExpression	"TEST_BIT ( bytes [ 1 ] , 7 )"		1295369	0					
ANR	1295480	Callee	TEST_BIT		1295369	0					
ANR	1295481	Identifier	TEST_BIT		1295369	0					
ANR	1295482	ArgumentList	bytes [ 1 ]		1295369	1					
ANR	1295483	Argument	bytes [ 1 ]		1295369	0					
ANR	1295484	ArrayIndexing	bytes [ 1 ]		1295369	0					
ANR	1295485	Identifier	bytes		1295369	0					
ANR	1295486	PrimaryExpression	1		1295369	1					
ANR	1295487	Argument	7		1295369	1					
ANR	1295488	PrimaryExpression	7		1295369	0					
ANR	1295489	CompoundStatement		18:3:348:363	1295369	1					
ANR	1295490	IdentifierDeclStatement	ebc_index_t idx ;	378:3:9092:9107	1295369	0	True				
ANR	1295491	IdentifierDecl	idx		1295369	0					
ANR	1295492	IdentifierDeclType	ebc_index_t		1295369	0					
ANR	1295493	Identifier	idx		1295369	1					
ANR	1295494	ExpressionStatement	"decode_index16 ( bytes + 2 , & idx )"	379:3:9112:9143	1295369	1	True				
ANR	1295495	CallExpression	"decode_index16 ( bytes + 2 , & idx )"		1295369	0					
ANR	1295496	Callee	decode_index16		1295369	0					
ANR	1295497	Identifier	decode_index16		1295369	0					
ANR	1295498	ArgumentList	bytes + 2		1295369	1					
ANR	1295499	Argument	bytes + 2		1295369	0					
ANR	1295500	AdditiveExpression	bytes + 2		1295369	0		+			
ANR	1295501	Identifier	bytes		1295369	0					
ANR	1295502	PrimaryExpression	2		1295369	1					
ANR	1295503	Argument	& idx		1295369	1					
ANR	1295504	UnaryOperationExpression	& idx		1295369	0					
ANR	1295505	UnaryOperator	&		1295369	0					
ANR	1295506	Identifier	idx		1295369	1					
ANR	1295507	ExpressionStatement	sign = idx . sign ? '+' : '-'	380:3:9148:9175	1295369	2	True				
ANR	1295508	AssignmentExpression	sign = idx . sign ? '+' : '-'		1295369	0		=			
ANR	1295509	Identifier	sign		1295369	0					
ANR	1295510	ConditionalExpression	idx . sign ? '+' : '-'		1295369	1					
ANR	1295511	Condition	idx . sign		1295369	0					
ANR	1295512	MemberAccess	idx . sign		1295369	0					
ANR	1295513	Identifier	idx		1295369	0					
ANR	1295514	Identifier	sign		1295369	1					
ANR	1295515	PrimaryExpression	'+'		1295369	1					
ANR	1295516	PrimaryExpression	'-'		1295369	2					
ANR	1295517	ExpressionStatement	"snprintf ( index , sizeof ( index ) , "" (%c%d, %c%d)"" , sign , idx . n , sign , idx . c )"	381:3:9180:9258	1295369	3	True				
ANR	1295518	CallExpression	"snprintf ( index , sizeof ( index ) , "" (%c%d, %c%d)"" , sign , idx . n , sign , idx . c )"		1295369	0					
ANR	1295519	Callee	snprintf		1295369	0					
ANR	1295520	Identifier	snprintf		1295369	0					
ANR	1295521	ArgumentList	index		1295369	1					
ANR	1295522	Argument	index		1295369	0					
ANR	1295523	Identifier	index		1295369	0					
ANR	1295524	Argument	sizeof ( index )		1295369	1					
ANR	1295525	SizeofExpression	sizeof ( index )		1295369	0					
ANR	1295526	Sizeof	sizeof		1295369	0					
ANR	1295527	SizeofOperand	index		1295369	1					
ANR	1295528	Argument	""" (%c%d, %c%d)"""		1295369	2					
ANR	1295529	PrimaryExpression	""" (%c%d, %c%d)"""		1295369	0					
ANR	1295530	Argument	sign		1295369	3					
ANR	1295531	Identifier	sign		1295369	0					
ANR	1295532	Argument	idx . n		1295369	4					
ANR	1295533	MemberAccess	idx . n		1295369	0					
ANR	1295534	Identifier	idx		1295369	0					
ANR	1295535	Identifier	n		1295369	1					
ANR	1295536	Argument	sign		1295369	5					
ANR	1295537	Identifier	sign		1295369	0					
ANR	1295538	Argument	idx . c		1295369	6					
ANR	1295539	MemberAccess	idx . c		1295369	0					
ANR	1295540	Identifier	idx		1295369	0					
ANR	1295541	Identifier	c		1295369	1					
ANR	1295542	ElseStatement	else		1295369	0					
ANR	1295543	CompoundStatement		23:9:525:525	1295369	0					
ANR	1295544	ExpressionStatement	immed = * ( ut16 * ) & bytes [ 2 ]	384:3:9274:9299	1295369	0	True				
ANR	1295545	AssignmentExpression	immed = * ( ut16 * ) & bytes [ 2 ]		1295369	0		=			
ANR	1295546	Identifier	immed		1295369	0					
ANR	1295547	UnaryOperationExpression	* ( ut16 * ) & bytes [ 2 ]		1295369	1					
ANR	1295548	UnaryOperator	*		1295369	0					
ANR	1295549	CastExpression	( ut16 * ) & bytes [ 2 ]		1295369	1					
ANR	1295550	CastTarget	ut16 *		1295369	0					
ANR	1295551	UnaryOperationExpression	& bytes [ 2 ]		1295369	1					
ANR	1295552	UnaryOperator	&		1295369	0					
ANR	1295553	ArrayIndexing	bytes [ 2 ]		1295369	1					
ANR	1295554	Identifier	bytes		1295369	0					
ANR	1295555	PrimaryExpression	2		1295369	1					
ANR	1295556	ExpressionStatement	"snprintf ( index , sizeof ( index ) , ""(%u)"" , immed )"	385:3:9304:9351	1295369	1	True				
ANR	1295557	CallExpression	"snprintf ( index , sizeof ( index ) , ""(%u)"" , immed )"		1295369	0					
ANR	1295558	Callee	snprintf		1295369	0					
ANR	1295559	Identifier	snprintf		1295369	0					
ANR	1295560	ArgumentList	index		1295369	1					
ANR	1295561	Argument	index		1295369	0					
ANR	1295562	Identifier	index		1295369	0					
ANR	1295563	Argument	sizeof ( index )		1295369	1					
ANR	1295564	SizeofExpression	sizeof ( index )		1295369	0					
ANR	1295565	Sizeof	sizeof		1295369	0					
ANR	1295566	SizeofOperand	index		1295369	1					
ANR	1295567	Argument	"""(%u)"""		1295369	2					
ANR	1295568	PrimaryExpression	"""(%u)"""		1295369	0					
ANR	1295569	Argument	immed		1295369	3					
ANR	1295570	Identifier	immed		1295369	0					
ANR	1295571	ExpressionStatement	"CHK_SNPRINTF ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""%sr%d, %sr%d%s"" , TEST_BIT ( bytes [ 1 ] , 3 ) ? ""@"" : """" , op1 , TEST_BIT ( bytes [ 1 ] , 7 ) ? ""@"" : """" , op2 , index )"	389:1:9362:9520	1295369	10	True				
ANR	1295572	CallExpression	"CHK_SNPRINTF ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""%sr%d, %sr%d%s"" , TEST_BIT ( bytes [ 1 ] , 3 ) ? ""@"" : """" , op1 , TEST_BIT ( bytes [ 1 ] , 7 ) ? ""@"" : """" , op2 , index )"		1295369	0					
ANR	1295573	Callee	CHK_SNPRINTF		1295369	0					
ANR	1295574	Identifier	CHK_SNPRINTF		1295369	0					
ANR	1295575	ArgumentList	cmd -> operands		1295369	1					
ANR	1295576	Argument	cmd -> operands		1295369	0					
ANR	1295577	PtrMemberAccess	cmd -> operands		1295369	0					
ANR	1295578	Identifier	cmd		1295369	0					
ANR	1295579	Identifier	operands		1295369	1					
ANR	1295580	Argument	EBC_OPERANDS_MAXLEN		1295369	1					
ANR	1295581	Identifier	EBC_OPERANDS_MAXLEN		1295369	0					
ANR	1295582	Argument	"""%sr%d, %sr%d%s"""		1295369	2					
ANR	1295583	PrimaryExpression	"""%sr%d, %sr%d%s"""		1295369	0					
ANR	1295584	Argument	"TEST_BIT ( bytes [ 1 ] , 3 ) ? ""@"" : """""		1295369	3					
ANR	1295585	ConditionalExpression	"TEST_BIT ( bytes [ 1 ] , 3 ) ? ""@"" : """""		1295369	0					
ANR	1295586	Condition	"TEST_BIT ( bytes [ 1 ] , 3 )"		1295369	0					
ANR	1295587	CallExpression	"TEST_BIT ( bytes [ 1 ] , 3 )"		1295369	0					
ANR	1295588	Callee	TEST_BIT		1295369	0					
ANR	1295589	Identifier	TEST_BIT		1295369	0					
ANR	1295590	ArgumentList	bytes [ 1 ]		1295369	1					
ANR	1295591	Argument	bytes [ 1 ]		1295369	0					
ANR	1295592	ArrayIndexing	bytes [ 1 ]		1295369	0					
ANR	1295593	Identifier	bytes		1295369	0					
ANR	1295594	PrimaryExpression	1		1295369	1					
ANR	1295595	Argument	3		1295369	1					
ANR	1295596	PrimaryExpression	3		1295369	0					
ANR	1295597	PrimaryExpression	"""@"""		1295369	1					
ANR	1295598	PrimaryExpression	""""""		1295369	2					
ANR	1295599	Argument	op1		1295369	4					
ANR	1295600	Identifier	op1		1295369	0					
ANR	1295601	Argument	"TEST_BIT ( bytes [ 1 ] , 7 ) ? ""@"" : """""		1295369	5					
ANR	1295602	ConditionalExpression	"TEST_BIT ( bytes [ 1 ] , 7 ) ? ""@"" : """""		1295369	0					
ANR	1295603	Condition	"TEST_BIT ( bytes [ 1 ] , 7 )"		1295369	0					
ANR	1295604	CallExpression	"TEST_BIT ( bytes [ 1 ] , 7 )"		1295369	0					
ANR	1295605	Callee	TEST_BIT		1295369	0					
ANR	1295606	Identifier	TEST_BIT		1295369	0					
ANR	1295607	ArgumentList	bytes [ 1 ]		1295369	1					
ANR	1295608	Argument	bytes [ 1 ]		1295369	0					
ANR	1295609	ArrayIndexing	bytes [ 1 ]		1295369	0					
ANR	1295610	Identifier	bytes		1295369	0					
ANR	1295611	PrimaryExpression	1		1295369	1					
ANR	1295612	Argument	7		1295369	1					
ANR	1295613	PrimaryExpression	7		1295369	0					
ANR	1295614	PrimaryExpression	"""@"""		1295369	1					
ANR	1295615	PrimaryExpression	""""""		1295369	2					
ANR	1295616	Argument	op2		1295369	6					
ANR	1295617	Identifier	op2		1295369	0					
ANR	1295618	Argument	index		1295369	7					
ANR	1295619	Identifier	index		1295369	0					
ANR	1295620	ReturnStatement	return ret ;	392:1:9523:9533	1295369	11	True				
ANR	1295621	Identifier	ret		1295369	0					
ANR	1295622	ReturnType	static int		1295369	1					
ANR	1295623	Identifier	decode_add		1295369	2					
ANR	1295624	ParameterList	"const ut8 * bytes , ebc_command_t * cmd"		1295369	3					
ANR	1295625	Parameter	const ut8 * bytes	361:22:8705:8720	1295369	0	True				
ANR	1295626	ParameterType	const ut8 *		1295369	0					
ANR	1295627	Identifier	bytes		1295369	1					
ANR	1295628	Parameter	ebc_command_t * cmd	361:40:8723:8740	1295369	1	True				
ANR	1295629	ParameterType	ebc_command_t *		1295369	0					
ANR	1295630	Identifier	cmd		1295369	1					
ANR	1295631	CFGEntryNode	ENTRY		1295369		True				
ANR	1295632	CFGExitNode	EXIT		1295369		True				
ANR	1295633	Symbol	EBC_ADD		1295369						
ANR	1295634	Symbol	EBC_OPERANDS_MAXLEN		1295369						
ANR	1295635	Symbol	EBC_INSTR_MAXLEN		1295369						
ANR	1295636	Symbol	sign		1295369						
ANR	1295637	Symbol	* bytes		1295369						
ANR	1295638	Symbol	* instr_names		1295369						
ANR	1295639	Symbol	immed		1295369						
ANR	1295640	Symbol	cmd -> operands		1295369						
ANR	1295641	Symbol	idx . sign		1295369						
ANR	1295642	Symbol	* cmd		1295369						
ANR	1295643	Symbol	cmd -> instr		1295369						
ANR	1295644	Symbol	TEST_BIT		1295369						
ANR	1295645	Symbol	ret		1295369						
ANR	1295646	Symbol	& idx		1295369						
ANR	1295647	Symbol	idx . n		1295369						
ANR	1295648	Symbol	bits		1295369						
ANR	1295649	Symbol	index		1295369						
ANR	1295650	Symbol	* ( ut16 * ) & bytes [ 2 ]		1295369						
ANR	1295651	Symbol	op2		1295369						
ANR	1295652	Symbol	op1		1295369						
ANR	1295653	Symbol	idx . c		1295369						
ANR	1295654	Symbol	instr_names		1295369						
ANR	1295655	Symbol	bytes		1295369						
ANR	1295656	Symbol	cmd		1295369						
ANR	1295657	Symbol	* EBC_ADD		1295369						
ANR	1295658	Symbol	idx		1295369						
ANR	1295659	Function	decode_sub	395:0:9538:9777							
ANR	1295660	FunctionDef	"decode_sub (const ut8 * bytes , ebc_command_t * cmd)"		1295659	0					
ANR	1295661	CompoundStatement		395:60:9598:9777	1295659	0					
ANR	1295662	IdentifierDeclStatement	"int ret = decode_add ( bytes , cmd ) ;"	396:1:9601:9633	1295659	0	True				
ANR	1295663	IdentifierDecl	"ret = decode_add ( bytes , cmd )"		1295659	0					
ANR	1295664	IdentifierDeclType	int		1295659	0					
ANR	1295665	Identifier	ret		1295659	1					
ANR	1295666	AssignmentExpression	"ret = decode_add ( bytes , cmd )"		1295659	2		=			
ANR	1295667	Identifier	ret		1295659	0					
ANR	1295668	CallExpression	"decode_add ( bytes , cmd )"		1295659	1					
ANR	1295669	Callee	decode_add		1295659	0					
ANR	1295670	Identifier	decode_add		1295659	0					
ANR	1295671	ArgumentList	bytes		1295659	1					
ANR	1295672	Argument	bytes		1295659	0					
ANR	1295673	Identifier	bytes		1295659	0					
ANR	1295674	Argument	cmd		1295659	1					
ANR	1295675	Identifier	cmd		1295659	0					
ANR	1295676	IdentifierDeclStatement	"unsigned bits = TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32 ;"	397:1:9636:9682	1295659	1	True				
ANR	1295677	IdentifierDecl	"bits = TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32"		1295659	0					
ANR	1295678	IdentifierDeclType	unsigned		1295659	0					
ANR	1295679	Identifier	bits		1295659	1					
ANR	1295680	AssignmentExpression	"bits = TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32"		1295659	2		=			
ANR	1295681	Identifier	bits		1295659	0					
ANR	1295682	ConditionalExpression	"TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32"		1295659	1					
ANR	1295683	Condition	"TEST_BIT ( bytes [ 0 ] , 6 )"		1295659	0					
ANR	1295684	CallExpression	"TEST_BIT ( bytes [ 0 ] , 6 )"		1295659	0					
ANR	1295685	Callee	TEST_BIT		1295659	0					
ANR	1295686	Identifier	TEST_BIT		1295659	0					
ANR	1295687	ArgumentList	bytes [ 0 ]		1295659	1					
ANR	1295688	Argument	bytes [ 0 ]		1295659	0					
ANR	1295689	ArrayIndexing	bytes [ 0 ]		1295659	0					
ANR	1295690	Identifier	bytes		1295659	0					
ANR	1295691	PrimaryExpression	0		1295659	1					
ANR	1295692	Argument	6		1295659	1					
ANR	1295693	PrimaryExpression	6		1295659	0					
ANR	1295694	PrimaryExpression	64		1295659	1					
ANR	1295695	PrimaryExpression	32		1295659	2					
ANR	1295696	ExpressionStatement	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s%u"" , instr_names [ EBC_SUB ] , bits )"	398:1:9685:9762	1295659	2	True				
ANR	1295697	CallExpression	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s%u"" , instr_names [ EBC_SUB ] , bits )"		1295659	0					
ANR	1295698	Callee	snprintf		1295659	0					
ANR	1295699	Identifier	snprintf		1295659	0					
ANR	1295700	ArgumentList	cmd -> instr		1295659	1					
ANR	1295701	Argument	cmd -> instr		1295659	0					
ANR	1295702	PtrMemberAccess	cmd -> instr		1295659	0					
ANR	1295703	Identifier	cmd		1295659	0					
ANR	1295704	Identifier	instr		1295659	1					
ANR	1295705	Argument	EBC_INSTR_MAXLEN		1295659	1					
ANR	1295706	Identifier	EBC_INSTR_MAXLEN		1295659	0					
ANR	1295707	Argument	"""%s%u"""		1295659	2					
ANR	1295708	PrimaryExpression	"""%s%u"""		1295659	0					
ANR	1295709	Argument	instr_names [ EBC_SUB ]		1295659	3					
ANR	1295710	ArrayIndexing	instr_names [ EBC_SUB ]		1295659	0					
ANR	1295711	Identifier	instr_names		1295659	0					
ANR	1295712	Identifier	EBC_SUB		1295659	1					
ANR	1295713	Argument	bits		1295659	4					
ANR	1295714	Identifier	bits		1295659	0					
ANR	1295715	ReturnStatement	return ret ;	400:1:9765:9775	1295659	3	True				
ANR	1295716	Identifier	ret		1295659	0					
ANR	1295717	ReturnType	static int		1295659	1					
ANR	1295718	Identifier	decode_sub		1295659	2					
ANR	1295719	ParameterList	"const ut8 * bytes , ebc_command_t * cmd"		1295659	3					
ANR	1295720	Parameter	const ut8 * bytes	395:22:9560:9575	1295659	0	True				
ANR	1295721	ParameterType	const ut8 *		1295659	0					
ANR	1295722	Identifier	bytes		1295659	1					
ANR	1295723	Parameter	ebc_command_t * cmd	395:40:9578:9595	1295659	1	True				
ANR	1295724	ParameterType	ebc_command_t *		1295659	0					
ANR	1295725	Identifier	cmd		1295659	1					
ANR	1295726	CFGEntryNode	ENTRY		1295659		True				
ANR	1295727	CFGExitNode	EXIT		1295659		True				
ANR	1295728	Symbol	ret		1295659						
ANR	1295729	Symbol	EBC_INSTR_MAXLEN		1295659						
ANR	1295730	Symbol	decode_add		1295659						
ANR	1295731	Symbol	bits		1295659						
ANR	1295732	Symbol	* bytes		1295659						
ANR	1295733	Symbol	* instr_names		1295659						
ANR	1295734	Symbol	EBC_SUB		1295659						
ANR	1295735	Symbol	instr_names		1295659						
ANR	1295736	Symbol	bytes		1295659						
ANR	1295737	Symbol	cmd		1295659						
ANR	1295738	Symbol	* cmd		1295659						
ANR	1295739	Symbol	* EBC_SUB		1295659						
ANR	1295740	Symbol	cmd -> instr		1295659						
ANR	1295741	Symbol	TEST_BIT		1295659						
ANR	1295742	Function	decode_mul	403:0:9780:10020							
ANR	1295743	FunctionDef	"decode_mul (const ut8 * bytes , ebc_command_t * cmd)"		1295742	0					
ANR	1295744	CompoundStatement		403:60:9840:10020	1295742	0					
ANR	1295745	IdentifierDeclStatement	"int ret = decode_add ( bytes , cmd ) ;"	404:1:9843:9875	1295742	0	True				
ANR	1295746	IdentifierDecl	"ret = decode_add ( bytes , cmd )"		1295742	0					
ANR	1295747	IdentifierDeclType	int		1295742	0					
ANR	1295748	Identifier	ret		1295742	1					
ANR	1295749	AssignmentExpression	"ret = decode_add ( bytes , cmd )"		1295742	2		=			
ANR	1295750	Identifier	ret		1295742	0					
ANR	1295751	CallExpression	"decode_add ( bytes , cmd )"		1295742	1					
ANR	1295752	Callee	decode_add		1295742	0					
ANR	1295753	Identifier	decode_add		1295742	0					
ANR	1295754	ArgumentList	bytes		1295742	1					
ANR	1295755	Argument	bytes		1295742	0					
ANR	1295756	Identifier	bytes		1295742	0					
ANR	1295757	Argument	cmd		1295742	1					
ANR	1295758	Identifier	cmd		1295742	0					
ANR	1295759	IdentifierDeclStatement	"unsigned bits = TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32 ;"	405:1:9878:9924	1295742	1	True				
ANR	1295760	IdentifierDecl	"bits = TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32"		1295742	0					
ANR	1295761	IdentifierDeclType	unsigned		1295742	0					
ANR	1295762	Identifier	bits		1295742	1					
ANR	1295763	AssignmentExpression	"bits = TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32"		1295742	2		=			
ANR	1295764	Identifier	bits		1295742	0					
ANR	1295765	ConditionalExpression	"TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32"		1295742	1					
ANR	1295766	Condition	"TEST_BIT ( bytes [ 0 ] , 6 )"		1295742	0					
ANR	1295767	CallExpression	"TEST_BIT ( bytes [ 0 ] , 6 )"		1295742	0					
ANR	1295768	Callee	TEST_BIT		1295742	0					
ANR	1295769	Identifier	TEST_BIT		1295742	0					
ANR	1295770	ArgumentList	bytes [ 0 ]		1295742	1					
ANR	1295771	Argument	bytes [ 0 ]		1295742	0					
ANR	1295772	ArrayIndexing	bytes [ 0 ]		1295742	0					
ANR	1295773	Identifier	bytes		1295742	0					
ANR	1295774	PrimaryExpression	0		1295742	1					
ANR	1295775	Argument	6		1295742	1					
ANR	1295776	PrimaryExpression	6		1295742	0					
ANR	1295777	PrimaryExpression	64		1295742	1					
ANR	1295778	PrimaryExpression	32		1295742	2					
ANR	1295779	ExpressionStatement	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s%u"" , instr_names [ EBC_MUL ] , bits )"	406:1:9927:10005	1295742	2	True				
ANR	1295780	CallExpression	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s%u"" , instr_names [ EBC_MUL ] , bits )"		1295742	0					
ANR	1295781	Callee	snprintf		1295742	0					
ANR	1295782	Identifier	snprintf		1295742	0					
ANR	1295783	ArgumentList	cmd -> instr		1295742	1					
ANR	1295784	Argument	cmd -> instr		1295742	0					
ANR	1295785	PtrMemberAccess	cmd -> instr		1295742	0					
ANR	1295786	Identifier	cmd		1295742	0					
ANR	1295787	Identifier	instr		1295742	1					
ANR	1295788	Argument	EBC_INSTR_MAXLEN		1295742	1					
ANR	1295789	Identifier	EBC_INSTR_MAXLEN		1295742	0					
ANR	1295790	Argument	"""%s%u"""		1295742	2					
ANR	1295791	PrimaryExpression	"""%s%u"""		1295742	0					
ANR	1295792	Argument	instr_names [ EBC_MUL ]		1295742	3					
ANR	1295793	ArrayIndexing	instr_names [ EBC_MUL ]		1295742	0					
ANR	1295794	Identifier	instr_names		1295742	0					
ANR	1295795	Identifier	EBC_MUL		1295742	1					
ANR	1295796	Argument	bits		1295742	4					
ANR	1295797	Identifier	bits		1295742	0					
ANR	1295798	ReturnStatement	return ret ;	408:1:10008:10018	1295742	3	True				
ANR	1295799	Identifier	ret		1295742	0					
ANR	1295800	ReturnType	static int		1295742	1					
ANR	1295801	Identifier	decode_mul		1295742	2					
ANR	1295802	ParameterList	"const ut8 * bytes , ebc_command_t * cmd"		1295742	3					
ANR	1295803	Parameter	const ut8 * bytes	403:22:9802:9817	1295742	0	True				
ANR	1295804	ParameterType	const ut8 *		1295742	0					
ANR	1295805	Identifier	bytes		1295742	1					
ANR	1295806	Parameter	ebc_command_t * cmd	403:40:9820:9837	1295742	1	True				
ANR	1295807	ParameterType	ebc_command_t *		1295742	0					
ANR	1295808	Identifier	cmd		1295742	1					
ANR	1295809	CFGEntryNode	ENTRY		1295742		True				
ANR	1295810	CFGExitNode	EXIT		1295742		True				
ANR	1295811	Symbol	ret		1295742						
ANR	1295812	Symbol	EBC_MUL		1295742						
ANR	1295813	Symbol	EBC_INSTR_MAXLEN		1295742						
ANR	1295814	Symbol	decode_add		1295742						
ANR	1295815	Symbol	bits		1295742						
ANR	1295816	Symbol	* bytes		1295742						
ANR	1295817	Symbol	* instr_names		1295742						
ANR	1295818	Symbol	instr_names		1295742						
ANR	1295819	Symbol	bytes		1295742						
ANR	1295820	Symbol	cmd		1295742						
ANR	1295821	Symbol	* cmd		1295742						
ANR	1295822	Symbol	cmd -> instr		1295742						
ANR	1295823	Symbol	TEST_BIT		1295742						
ANR	1295824	Symbol	* EBC_MUL		1295742						
ANR	1295825	Function	decode_mulu	411:0:10023:10266							
ANR	1295826	FunctionDef	"decode_mulu (const ut8 * bytes , ebc_command_t * cmd)"		1295825	0					
ANR	1295827	CompoundStatement		411:61:10084:10266	1295825	0					
ANR	1295828	IdentifierDeclStatement	"int ret = decode_add ( bytes , cmd ) ;"	412:1:10087:10119	1295825	0	True				
ANR	1295829	IdentifierDecl	"ret = decode_add ( bytes , cmd )"		1295825	0					
ANR	1295830	IdentifierDeclType	int		1295825	0					
ANR	1295831	Identifier	ret		1295825	1					
ANR	1295832	AssignmentExpression	"ret = decode_add ( bytes , cmd )"		1295825	2		=			
ANR	1295833	Identifier	ret		1295825	0					
ANR	1295834	CallExpression	"decode_add ( bytes , cmd )"		1295825	1					
ANR	1295835	Callee	decode_add		1295825	0					
ANR	1295836	Identifier	decode_add		1295825	0					
ANR	1295837	ArgumentList	bytes		1295825	1					
ANR	1295838	Argument	bytes		1295825	0					
ANR	1295839	Identifier	bytes		1295825	0					
ANR	1295840	Argument	cmd		1295825	1					
ANR	1295841	Identifier	cmd		1295825	0					
ANR	1295842	IdentifierDeclStatement	"unsigned bits = TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32 ;"	413:1:10122:10168	1295825	1	True				
ANR	1295843	IdentifierDecl	"bits = TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32"		1295825	0					
ANR	1295844	IdentifierDeclType	unsigned		1295825	0					
ANR	1295845	Identifier	bits		1295825	1					
ANR	1295846	AssignmentExpression	"bits = TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32"		1295825	2		=			
ANR	1295847	Identifier	bits		1295825	0					
ANR	1295848	ConditionalExpression	"TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32"		1295825	1					
ANR	1295849	Condition	"TEST_BIT ( bytes [ 0 ] , 6 )"		1295825	0					
ANR	1295850	CallExpression	"TEST_BIT ( bytes [ 0 ] , 6 )"		1295825	0					
ANR	1295851	Callee	TEST_BIT		1295825	0					
ANR	1295852	Identifier	TEST_BIT		1295825	0					
ANR	1295853	ArgumentList	bytes [ 0 ]		1295825	1					
ANR	1295854	Argument	bytes [ 0 ]		1295825	0					
ANR	1295855	ArrayIndexing	bytes [ 0 ]		1295825	0					
ANR	1295856	Identifier	bytes		1295825	0					
ANR	1295857	PrimaryExpression	0		1295825	1					
ANR	1295858	Argument	6		1295825	1					
ANR	1295859	PrimaryExpression	6		1295825	0					
ANR	1295860	PrimaryExpression	64		1295825	1					
ANR	1295861	PrimaryExpression	32		1295825	2					
ANR	1295862	ExpressionStatement	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s%u"" , instr_names [ EBC_MULU ] , bits )"	415:1:10172:10251	1295825	2	True				
ANR	1295863	CallExpression	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s%u"" , instr_names [ EBC_MULU ] , bits )"		1295825	0					
ANR	1295864	Callee	snprintf		1295825	0					
ANR	1295865	Identifier	snprintf		1295825	0					
ANR	1295866	ArgumentList	cmd -> instr		1295825	1					
ANR	1295867	Argument	cmd -> instr		1295825	0					
ANR	1295868	PtrMemberAccess	cmd -> instr		1295825	0					
ANR	1295869	Identifier	cmd		1295825	0					
ANR	1295870	Identifier	instr		1295825	1					
ANR	1295871	Argument	EBC_INSTR_MAXLEN		1295825	1					
ANR	1295872	Identifier	EBC_INSTR_MAXLEN		1295825	0					
ANR	1295873	Argument	"""%s%u"""		1295825	2					
ANR	1295874	PrimaryExpression	"""%s%u"""		1295825	0					
ANR	1295875	Argument	instr_names [ EBC_MULU ]		1295825	3					
ANR	1295876	ArrayIndexing	instr_names [ EBC_MULU ]		1295825	0					
ANR	1295877	Identifier	instr_names		1295825	0					
ANR	1295878	Identifier	EBC_MULU		1295825	1					
ANR	1295879	Argument	bits		1295825	4					
ANR	1295880	Identifier	bits		1295825	0					
ANR	1295881	ReturnStatement	return ret ;	417:1:10254:10264	1295825	3	True				
ANR	1295882	Identifier	ret		1295825	0					
ANR	1295883	ReturnType	static int		1295825	1					
ANR	1295884	Identifier	decode_mulu		1295825	2					
ANR	1295885	ParameterList	"const ut8 * bytes , ebc_command_t * cmd"		1295825	3					
ANR	1295886	Parameter	const ut8 * bytes	411:23:10046:10061	1295825	0	True				
ANR	1295887	ParameterType	const ut8 *		1295825	0					
ANR	1295888	Identifier	bytes		1295825	1					
ANR	1295889	Parameter	ebc_command_t * cmd	411:41:10064:10081	1295825	1	True				
ANR	1295890	ParameterType	ebc_command_t *		1295825	0					
ANR	1295891	Identifier	cmd		1295825	1					
ANR	1295892	CFGEntryNode	ENTRY		1295825		True				
ANR	1295893	CFGExitNode	EXIT		1295825		True				
ANR	1295894	Symbol	ret		1295825						
ANR	1295895	Symbol	EBC_INSTR_MAXLEN		1295825						
ANR	1295896	Symbol	decode_add		1295825						
ANR	1295897	Symbol	bits		1295825						
ANR	1295898	Symbol	EBC_MULU		1295825						
ANR	1295899	Symbol	* bytes		1295825						
ANR	1295900	Symbol	* instr_names		1295825						
ANR	1295901	Symbol	instr_names		1295825						
ANR	1295902	Symbol	bytes		1295825						
ANR	1295903	Symbol	* EBC_MULU		1295825						
ANR	1295904	Symbol	cmd		1295825						
ANR	1295905	Symbol	* cmd		1295825						
ANR	1295906	Symbol	cmd -> instr		1295825						
ANR	1295907	Symbol	TEST_BIT		1295825						
ANR	1295908	Function	decode_div	420:0:10269:10508							
ANR	1295909	FunctionDef	"decode_div (const ut8 * bytes , ebc_command_t * cmd)"		1295908	0					
ANR	1295910	CompoundStatement		420:60:10329:10508	1295908	0					
ANR	1295911	IdentifierDeclStatement	"int ret = decode_add ( bytes , cmd ) ;"	421:1:10332:10364	1295908	0	True				
ANR	1295912	IdentifierDecl	"ret = decode_add ( bytes , cmd )"		1295908	0					
ANR	1295913	IdentifierDeclType	int		1295908	0					
ANR	1295914	Identifier	ret		1295908	1					
ANR	1295915	AssignmentExpression	"ret = decode_add ( bytes , cmd )"		1295908	2		=			
ANR	1295916	Identifier	ret		1295908	0					
ANR	1295917	CallExpression	"decode_add ( bytes , cmd )"		1295908	1					
ANR	1295918	Callee	decode_add		1295908	0					
ANR	1295919	Identifier	decode_add		1295908	0					
ANR	1295920	ArgumentList	bytes		1295908	1					
ANR	1295921	Argument	bytes		1295908	0					
ANR	1295922	Identifier	bytes		1295908	0					
ANR	1295923	Argument	cmd		1295908	1					
ANR	1295924	Identifier	cmd		1295908	0					
ANR	1295925	IdentifierDeclStatement	"unsigned bits = TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32 ;"	422:1:10367:10413	1295908	1	True				
ANR	1295926	IdentifierDecl	"bits = TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32"		1295908	0					
ANR	1295927	IdentifierDeclType	unsigned		1295908	0					
ANR	1295928	Identifier	bits		1295908	1					
ANR	1295929	AssignmentExpression	"bits = TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32"		1295908	2		=			
ANR	1295930	Identifier	bits		1295908	0					
ANR	1295931	ConditionalExpression	"TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32"		1295908	1					
ANR	1295932	Condition	"TEST_BIT ( bytes [ 0 ] , 6 )"		1295908	0					
ANR	1295933	CallExpression	"TEST_BIT ( bytes [ 0 ] , 6 )"		1295908	0					
ANR	1295934	Callee	TEST_BIT		1295908	0					
ANR	1295935	Identifier	TEST_BIT		1295908	0					
ANR	1295936	ArgumentList	bytes [ 0 ]		1295908	1					
ANR	1295937	Argument	bytes [ 0 ]		1295908	0					
ANR	1295938	ArrayIndexing	bytes [ 0 ]		1295908	0					
ANR	1295939	Identifier	bytes		1295908	0					
ANR	1295940	PrimaryExpression	0		1295908	1					
ANR	1295941	Argument	6		1295908	1					
ANR	1295942	PrimaryExpression	6		1295908	0					
ANR	1295943	PrimaryExpression	64		1295908	1					
ANR	1295944	PrimaryExpression	32		1295908	2					
ANR	1295945	ExpressionStatement	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s%u"" , instr_names [ EBC_DIV ] , bits )"	423:1:10416:10493	1295908	2	True				
ANR	1295946	CallExpression	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s%u"" , instr_names [ EBC_DIV ] , bits )"		1295908	0					
ANR	1295947	Callee	snprintf		1295908	0					
ANR	1295948	Identifier	snprintf		1295908	0					
ANR	1295949	ArgumentList	cmd -> instr		1295908	1					
ANR	1295950	Argument	cmd -> instr		1295908	0					
ANR	1295951	PtrMemberAccess	cmd -> instr		1295908	0					
ANR	1295952	Identifier	cmd		1295908	0					
ANR	1295953	Identifier	instr		1295908	1					
ANR	1295954	Argument	EBC_INSTR_MAXLEN		1295908	1					
ANR	1295955	Identifier	EBC_INSTR_MAXLEN		1295908	0					
ANR	1295956	Argument	"""%s%u"""		1295908	2					
ANR	1295957	PrimaryExpression	"""%s%u"""		1295908	0					
ANR	1295958	Argument	instr_names [ EBC_DIV ]		1295908	3					
ANR	1295959	ArrayIndexing	instr_names [ EBC_DIV ]		1295908	0					
ANR	1295960	Identifier	instr_names		1295908	0					
ANR	1295961	Identifier	EBC_DIV		1295908	1					
ANR	1295962	Argument	bits		1295908	4					
ANR	1295963	Identifier	bits		1295908	0					
ANR	1295964	ReturnStatement	return ret ;	425:1:10496:10506	1295908	3	True				
ANR	1295965	Identifier	ret		1295908	0					
ANR	1295966	ReturnType	static int		1295908	1					
ANR	1295967	Identifier	decode_div		1295908	2					
ANR	1295968	ParameterList	"const ut8 * bytes , ebc_command_t * cmd"		1295908	3					
ANR	1295969	Parameter	const ut8 * bytes	420:22:10291:10306	1295908	0	True				
ANR	1295970	ParameterType	const ut8 *		1295908	0					
ANR	1295971	Identifier	bytes		1295908	1					
ANR	1295972	Parameter	ebc_command_t * cmd	420:40:10309:10326	1295908	1	True				
ANR	1295973	ParameterType	ebc_command_t *		1295908	0					
ANR	1295974	Identifier	cmd		1295908	1					
ANR	1295975	CFGEntryNode	ENTRY		1295908		True				
ANR	1295976	CFGExitNode	EXIT		1295908		True				
ANR	1295977	Symbol	ret		1295908						
ANR	1295978	Symbol	EBC_INSTR_MAXLEN		1295908						
ANR	1295979	Symbol	decode_add		1295908						
ANR	1295980	Symbol	bits		1295908						
ANR	1295981	Symbol	* EBC_DIV		1295908						
ANR	1295982	Symbol	* bytes		1295908						
ANR	1295983	Symbol	* instr_names		1295908						
ANR	1295984	Symbol	EBC_DIV		1295908						
ANR	1295985	Symbol	instr_names		1295908						
ANR	1295986	Symbol	bytes		1295908						
ANR	1295987	Symbol	cmd		1295908						
ANR	1295988	Symbol	* cmd		1295908						
ANR	1295989	Symbol	cmd -> instr		1295908						
ANR	1295990	Symbol	TEST_BIT		1295908						
ANR	1295991	Function	decode_divu	428:0:10511:10753							
ANR	1295992	FunctionDef	"decode_divu (const ut8 * bytes , ebc_command_t * cmd)"		1295991	0					
ANR	1295993	CompoundStatement		428:61:10572:10753	1295991	0					
ANR	1295994	IdentifierDeclStatement	"int ret = decode_add ( bytes , cmd ) ;"	429:1:10575:10607	1295991	0	True				
ANR	1295995	IdentifierDecl	"ret = decode_add ( bytes , cmd )"		1295991	0					
ANR	1295996	IdentifierDeclType	int		1295991	0					
ANR	1295997	Identifier	ret		1295991	1					
ANR	1295998	AssignmentExpression	"ret = decode_add ( bytes , cmd )"		1295991	2		=			
ANR	1295999	Identifier	ret		1295991	0					
ANR	1296000	CallExpression	"decode_add ( bytes , cmd )"		1295991	1					
ANR	1296001	Callee	decode_add		1295991	0					
ANR	1296002	Identifier	decode_add		1295991	0					
ANR	1296003	ArgumentList	bytes		1295991	1					
ANR	1296004	Argument	bytes		1295991	0					
ANR	1296005	Identifier	bytes		1295991	0					
ANR	1296006	Argument	cmd		1295991	1					
ANR	1296007	Identifier	cmd		1295991	0					
ANR	1296008	IdentifierDeclStatement	"unsigned bits = TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32 ;"	430:1:10610:10656	1295991	1	True				
ANR	1296009	IdentifierDecl	"bits = TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32"		1295991	0					
ANR	1296010	IdentifierDeclType	unsigned		1295991	0					
ANR	1296011	Identifier	bits		1295991	1					
ANR	1296012	AssignmentExpression	"bits = TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32"		1295991	2		=			
ANR	1296013	Identifier	bits		1295991	0					
ANR	1296014	ConditionalExpression	"TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32"		1295991	1					
ANR	1296015	Condition	"TEST_BIT ( bytes [ 0 ] , 6 )"		1295991	0					
ANR	1296016	CallExpression	"TEST_BIT ( bytes [ 0 ] , 6 )"		1295991	0					
ANR	1296017	Callee	TEST_BIT		1295991	0					
ANR	1296018	Identifier	TEST_BIT		1295991	0					
ANR	1296019	ArgumentList	bytes [ 0 ]		1295991	1					
ANR	1296020	Argument	bytes [ 0 ]		1295991	0					
ANR	1296021	ArrayIndexing	bytes [ 0 ]		1295991	0					
ANR	1296022	Identifier	bytes		1295991	0					
ANR	1296023	PrimaryExpression	0		1295991	1					
ANR	1296024	Argument	6		1295991	1					
ANR	1296025	PrimaryExpression	6		1295991	0					
ANR	1296026	PrimaryExpression	64		1295991	1					
ANR	1296027	PrimaryExpression	32		1295991	2					
ANR	1296028	ExpressionStatement	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s%u"" , instr_names [ EBC_DIVU ] , bits )"	431:1:10659:10738	1295991	2	True				
ANR	1296029	CallExpression	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s%u"" , instr_names [ EBC_DIVU ] , bits )"		1295991	0					
ANR	1296030	Callee	snprintf		1295991	0					
ANR	1296031	Identifier	snprintf		1295991	0					
ANR	1296032	ArgumentList	cmd -> instr		1295991	1					
ANR	1296033	Argument	cmd -> instr		1295991	0					
ANR	1296034	PtrMemberAccess	cmd -> instr		1295991	0					
ANR	1296035	Identifier	cmd		1295991	0					
ANR	1296036	Identifier	instr		1295991	1					
ANR	1296037	Argument	EBC_INSTR_MAXLEN		1295991	1					
ANR	1296038	Identifier	EBC_INSTR_MAXLEN		1295991	0					
ANR	1296039	Argument	"""%s%u"""		1295991	2					
ANR	1296040	PrimaryExpression	"""%s%u"""		1295991	0					
ANR	1296041	Argument	instr_names [ EBC_DIVU ]		1295991	3					
ANR	1296042	ArrayIndexing	instr_names [ EBC_DIVU ]		1295991	0					
ANR	1296043	Identifier	instr_names		1295991	0					
ANR	1296044	Identifier	EBC_DIVU		1295991	1					
ANR	1296045	Argument	bits		1295991	4					
ANR	1296046	Identifier	bits		1295991	0					
ANR	1296047	ReturnStatement	return ret ;	433:1:10741:10751	1295991	3	True				
ANR	1296048	Identifier	ret		1295991	0					
ANR	1296049	ReturnType	static int		1295991	1					
ANR	1296050	Identifier	decode_divu		1295991	2					
ANR	1296051	ParameterList	"const ut8 * bytes , ebc_command_t * cmd"		1295991	3					
ANR	1296052	Parameter	const ut8 * bytes	428:23:10534:10549	1295991	0	True				
ANR	1296053	ParameterType	const ut8 *		1295991	0					
ANR	1296054	Identifier	bytes		1295991	1					
ANR	1296055	Parameter	ebc_command_t * cmd	428:41:10552:10569	1295991	1	True				
ANR	1296056	ParameterType	ebc_command_t *		1295991	0					
ANR	1296057	Identifier	cmd		1295991	1					
ANR	1296058	CFGEntryNode	ENTRY		1295991		True				
ANR	1296059	CFGExitNode	EXIT		1295991		True				
ANR	1296060	Symbol	ret		1295991						
ANR	1296061	Symbol	* EBC_DIVU		1295991						
ANR	1296062	Symbol	EBC_DIVU		1295991						
ANR	1296063	Symbol	EBC_INSTR_MAXLEN		1295991						
ANR	1296064	Symbol	decode_add		1295991						
ANR	1296065	Symbol	bits		1295991						
ANR	1296066	Symbol	* bytes		1295991						
ANR	1296067	Symbol	* instr_names		1295991						
ANR	1296068	Symbol	instr_names		1295991						
ANR	1296069	Symbol	bytes		1295991						
ANR	1296070	Symbol	cmd		1295991						
ANR	1296071	Symbol	* cmd		1295991						
ANR	1296072	Symbol	cmd -> instr		1295991						
ANR	1296073	Symbol	TEST_BIT		1295991						
ANR	1296074	Function	decode_arith	436:0:10756:11017							
ANR	1296075	FunctionDef	"decode_arith (const ut8 * bytes , ebc_command_t * cmd)"		1296074	0					
ANR	1296076	CompoundStatement		436:62:10818:11017	1296074	0					
ANR	1296077	IdentifierDeclStatement	"int ret = decode_add ( bytes , cmd ) ;"	437:1:10821:10853	1296074	0	True				
ANR	1296078	IdentifierDecl	"ret = decode_add ( bytes , cmd )"		1296074	0					
ANR	1296079	IdentifierDeclType	int		1296074	0					
ANR	1296080	Identifier	ret		1296074	1					
ANR	1296081	AssignmentExpression	"ret = decode_add ( bytes , cmd )"		1296074	2		=			
ANR	1296082	Identifier	ret		1296074	0					
ANR	1296083	CallExpression	"decode_add ( bytes , cmd )"		1296074	1					
ANR	1296084	Callee	decode_add		1296074	0					
ANR	1296085	Identifier	decode_add		1296074	0					
ANR	1296086	ArgumentList	bytes		1296074	1					
ANR	1296087	Argument	bytes		1296074	0					
ANR	1296088	Identifier	bytes		1296074	0					
ANR	1296089	Argument	cmd		1296074	1					
ANR	1296090	Identifier	cmd		1296074	0					
ANR	1296091	IdentifierDeclStatement	"unsigned bits = TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32 ;"	438:1:10856:10902	1296074	1	True				
ANR	1296092	IdentifierDecl	"bits = TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32"		1296074	0					
ANR	1296093	IdentifierDeclType	unsigned		1296074	0					
ANR	1296094	Identifier	bits		1296074	1					
ANR	1296095	AssignmentExpression	"bits = TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32"		1296074	2		=			
ANR	1296096	Identifier	bits		1296074	0					
ANR	1296097	ConditionalExpression	"TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32"		1296074	1					
ANR	1296098	Condition	"TEST_BIT ( bytes [ 0 ] , 6 )"		1296074	0					
ANR	1296099	CallExpression	"TEST_BIT ( bytes [ 0 ] , 6 )"		1296074	0					
ANR	1296100	Callee	TEST_BIT		1296074	0					
ANR	1296101	Identifier	TEST_BIT		1296074	0					
ANR	1296102	ArgumentList	bytes [ 0 ]		1296074	1					
ANR	1296103	Argument	bytes [ 0 ]		1296074	0					
ANR	1296104	ArrayIndexing	bytes [ 0 ]		1296074	0					
ANR	1296105	Identifier	bytes		1296074	0					
ANR	1296106	PrimaryExpression	0		1296074	1					
ANR	1296107	Argument	6		1296074	1					
ANR	1296108	PrimaryExpression	6		1296074	0					
ANR	1296109	PrimaryExpression	64		1296074	1					
ANR	1296110	PrimaryExpression	32		1296074	2					
ANR	1296111	ExpressionStatement	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s%u"" , instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ] , bits )"	439:1:10905:11002	1296074	2	True				
ANR	1296112	CallExpression	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s%u"" , instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ] , bits )"		1296074	0					
ANR	1296113	Callee	snprintf		1296074	0					
ANR	1296114	Identifier	snprintf		1296074	0					
ANR	1296115	ArgumentList	cmd -> instr		1296074	1					
ANR	1296116	Argument	cmd -> instr		1296074	0					
ANR	1296117	PtrMemberAccess	cmd -> instr		1296074	0					
ANR	1296118	Identifier	cmd		1296074	0					
ANR	1296119	Identifier	instr		1296074	1					
ANR	1296120	Argument	EBC_INSTR_MAXLEN		1296074	1					
ANR	1296121	Identifier	EBC_INSTR_MAXLEN		1296074	0					
ANR	1296122	Argument	"""%s%u"""		1296074	2					
ANR	1296123	PrimaryExpression	"""%s%u"""		1296074	0					
ANR	1296124	Argument	instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ]		1296074	3					
ANR	1296125	ArrayIndexing	instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ]		1296074	0					
ANR	1296126	Identifier	instr_names		1296074	0					
ANR	1296127	BitAndExpression	bytes [ 0 ] & EBC_OPCODE_MASK		1296074	1		&			
ANR	1296128	ArrayIndexing	bytes [ 0 ]		1296074	0					
ANR	1296129	Identifier	bytes		1296074	0					
ANR	1296130	PrimaryExpression	0		1296074	1					
ANR	1296131	Identifier	EBC_OPCODE_MASK		1296074	1					
ANR	1296132	Argument	bits		1296074	4					
ANR	1296133	Identifier	bits		1296074	0					
ANR	1296134	ReturnStatement	return ret ;	441:1:11005:11015	1296074	3	True				
ANR	1296135	Identifier	ret		1296074	0					
ANR	1296136	ReturnType	static int		1296074	1					
ANR	1296137	Identifier	decode_arith		1296074	2					
ANR	1296138	ParameterList	"const ut8 * bytes , ebc_command_t * cmd"		1296074	3					
ANR	1296139	Parameter	const ut8 * bytes	436:24:10780:10795	1296074	0	True				
ANR	1296140	ParameterType	const ut8 *		1296074	0					
ANR	1296141	Identifier	bytes		1296074	1					
ANR	1296142	Parameter	ebc_command_t * cmd	436:42:10798:10815	1296074	1	True				
ANR	1296143	ParameterType	ebc_command_t *		1296074	0					
ANR	1296144	Identifier	cmd		1296074	1					
ANR	1296145	CFGEntryNode	ENTRY		1296074		True				
ANR	1296146	CFGExitNode	EXIT		1296074		True				
ANR	1296147	Symbol	ret		1296074						
ANR	1296148	Symbol	* * bytes		1296074						
ANR	1296149	Symbol	EBC_INSTR_MAXLEN		1296074						
ANR	1296150	Symbol	decode_add		1296074						
ANR	1296151	Symbol	bits		1296074						
ANR	1296152	Symbol	* bytes		1296074						
ANR	1296153	Symbol	* instr_names		1296074						
ANR	1296154	Symbol	instr_names		1296074						
ANR	1296155	Symbol	bytes		1296074						
ANR	1296156	Symbol	* EBC_OPCODE_MASK		1296074						
ANR	1296157	Symbol	cmd		1296074						
ANR	1296158	Symbol	* cmd		1296074						
ANR	1296159	Symbol	cmd -> instr		1296074						
ANR	1296160	Symbol	EBC_OPCODE_MASK		1296074						
ANR	1296161	Symbol	TEST_BIT		1296074						
ANR	1296162	Function	decode_mov_args	444:0:11020:12855							
ANR	1296163	FunctionDef	"decode_mov_args (const ut8 * bytes , ebc_command_t * cmd)"		1296162	0					
ANR	1296164	CompoundStatement		444:65:11085:12855	1296162	0					
ANR	1296165	IdentifierDeclStatement	int ret = 2 ;	445:1:11088:11099	1296162	0	True				
ANR	1296166	IdentifierDecl	ret = 2		1296162	0					
ANR	1296167	IdentifierDeclType	int		1296162	0					
ANR	1296168	Identifier	ret		1296162	1					
ANR	1296169	AssignmentExpression	ret = 2		1296162	2		=			
ANR	1296170	Identifier	ret		1296162	0					
ANR	1296171	PrimaryExpression	2		1296162	1					
ANR	1296172	IdentifierDeclStatement	"unsigned op1 , op2 ;"	446:1:11102:11119	1296162	1	True				
ANR	1296173	IdentifierDecl	op1		1296162	0					
ANR	1296174	IdentifierDeclType	unsigned		1296162	0					
ANR	1296175	Identifier	op1		1296162	1					
ANR	1296176	IdentifierDecl	op2		1296162	1					
ANR	1296177	IdentifierDeclType	unsigned		1296162	0					
ANR	1296178	Identifier	op2		1296162	1					
ANR	1296179	IdentifierDeclStatement	"char op1c [ 32 ] , op2c [ 32 ] ;"	447:1:11122:11145	1296162	2	True				
ANR	1296180	IdentifierDecl	op1c [ 32 ]		1296162	0					
ANR	1296181	IdentifierDeclType	char [ 32 ]		1296162	0					
ANR	1296182	Identifier	op1c		1296162	1					
ANR	1296183	PrimaryExpression	32		1296162	2					
ANR	1296184	IdentifierDecl	op2c [ 32 ]		1296162	1					
ANR	1296185	IdentifierDeclType	char [ 32 ]		1296162	0					
ANR	1296186	Identifier	op2c		1296162	1					
ANR	1296187	PrimaryExpression	32		1296162	2					
ANR	1296188	IdentifierDeclStatement	"char ind1 [ 32 ] = { 0 } , ind2 [ 32 ] = { 0 } ;"	448:1:11148:11183	1296162	3	True				
ANR	1296189	IdentifierDecl	ind1 [ 32 ] = { 0 }		1296162	0					
ANR	1296190	IdentifierDeclType	char [ 32 ]		1296162	0					
ANR	1296191	Identifier	ind1		1296162	1					
ANR	1296192	PrimaryExpression	32		1296162	2					
ANR	1296193	AssignmentExpression	ind1 [ 32 ] = { 0 }		1296162	3		=			
ANR	1296194	Identifier	ind1		1296162	0					
ANR	1296195	InitializerList	0		1296162	1					
ANR	1296196	PrimaryExpression	0		1296162	0					
ANR	1296197	IdentifierDecl	ind2 [ 32 ] = { 0 }		1296162	1					
ANR	1296198	IdentifierDeclType	char [ 32 ]		1296162	0					
ANR	1296199	Identifier	ind2		1296162	1					
ANR	1296200	PrimaryExpression	32		1296162	2					
ANR	1296201	AssignmentExpression	ind2 [ 32 ] = { 0 }		1296162	3		=			
ANR	1296202	Identifier	ind2		1296162	0					
ANR	1296203	InitializerList	0		1296162	1					
ANR	1296204	PrimaryExpression	0		1296162	0					
ANR	1296205	IdentifierDeclStatement	ebc_index_t idx ;	449:1:11186:11201	1296162	4	True				
ANR	1296206	IdentifierDecl	idx		1296162	0					
ANR	1296207	IdentifierDeclType	ebc_index_t		1296162	0					
ANR	1296208	Identifier	idx		1296162	1					
ANR	1296209	IdentifierDeclStatement	char sign ;	450:1:11204:11213	1296162	5	True				
ANR	1296210	IdentifierDecl	sign		1296162	0					
ANR	1296211	IdentifierDeclType	char		1296162	0					
ANR	1296212	Identifier	sign		1296162	1					
ANR	1296213	ExpressionStatement	op1 = bytes [ 1 ] & 0x07	452:1:11217:11238	1296162	6	True				
ANR	1296214	AssignmentExpression	op1 = bytes [ 1 ] & 0x07		1296162	0		=			
ANR	1296215	Identifier	op1		1296162	0					
ANR	1296216	BitAndExpression	bytes [ 1 ] & 0x07		1296162	1		&			
ANR	1296217	ArrayIndexing	bytes [ 1 ]		1296162	0					
ANR	1296218	Identifier	bytes		1296162	0					
ANR	1296219	PrimaryExpression	1		1296162	1					
ANR	1296220	PrimaryExpression	0x07		1296162	1					
ANR	1296221	ExpressionStatement	op2 = ( bytes [ 1 ] >> 4 ) & 0x07	453:1:11241:11269	1296162	7	True				
ANR	1296222	AssignmentExpression	op2 = ( bytes [ 1 ] >> 4 ) & 0x07		1296162	0		=			
ANR	1296223	Identifier	op2		1296162	0					
ANR	1296224	BitAndExpression	( bytes [ 1 ] >> 4 ) & 0x07		1296162	1		&			
ANR	1296225	ShiftExpression	bytes [ 1 ] >> 4		1296162	0		>>			
ANR	1296226	ArrayIndexing	bytes [ 1 ]		1296162	0					
ANR	1296227	Identifier	bytes		1296162	0					
ANR	1296228	PrimaryExpression	1		1296162	1					
ANR	1296229	PrimaryExpression	4		1296162	1					
ANR	1296230	PrimaryExpression	0x07		1296162	1					
ANR	1296231	ExpressionStatement	"snprintf ( op1c , 32 , ""%sr%u"" , TEST_BIT ( bytes [ 1 ] , 3 ) ? ""@"" : """" , op1 )"	455:1:11273:11339	1296162	8	True				
ANR	1296232	CallExpression	"snprintf ( op1c , 32 , ""%sr%u"" , TEST_BIT ( bytes [ 1 ] , 3 ) ? ""@"" : """" , op1 )"		1296162	0					
ANR	1296233	Callee	snprintf		1296162	0					
ANR	1296234	Identifier	snprintf		1296162	0					
ANR	1296235	ArgumentList	op1c		1296162	1					
ANR	1296236	Argument	op1c		1296162	0					
ANR	1296237	Identifier	op1c		1296162	0					
ANR	1296238	Argument	32		1296162	1					
ANR	1296239	PrimaryExpression	32		1296162	0					
ANR	1296240	Argument	"""%sr%u"""		1296162	2					
ANR	1296241	PrimaryExpression	"""%sr%u"""		1296162	0					
ANR	1296242	Argument	"TEST_BIT ( bytes [ 1 ] , 3 ) ? ""@"" : """""		1296162	3					
ANR	1296243	ConditionalExpression	"TEST_BIT ( bytes [ 1 ] , 3 ) ? ""@"" : """""		1296162	0					
ANR	1296244	Condition	"TEST_BIT ( bytes [ 1 ] , 3 )"		1296162	0					
ANR	1296245	CallExpression	"TEST_BIT ( bytes [ 1 ] , 3 )"		1296162	0					
ANR	1296246	Callee	TEST_BIT		1296162	0					
ANR	1296247	Identifier	TEST_BIT		1296162	0					
ANR	1296248	ArgumentList	bytes [ 1 ]		1296162	1					
ANR	1296249	Argument	bytes [ 1 ]		1296162	0					
ANR	1296250	ArrayIndexing	bytes [ 1 ]		1296162	0					
ANR	1296251	Identifier	bytes		1296162	0					
ANR	1296252	PrimaryExpression	1		1296162	1					
ANR	1296253	Argument	3		1296162	1					
ANR	1296254	PrimaryExpression	3		1296162	0					
ANR	1296255	PrimaryExpression	"""@"""		1296162	1					
ANR	1296256	PrimaryExpression	""""""		1296162	2					
ANR	1296257	Argument	op1		1296162	4					
ANR	1296258	Identifier	op1		1296162	0					
ANR	1296259	ExpressionStatement	"snprintf ( op2c , 32 , ""%sr%u"" , TEST_BIT ( bytes [ 1 ] , 7 ) ? ""@"" : """" , op2 )"	456:1:11342:11408	1296162	9	True				
ANR	1296260	CallExpression	"snprintf ( op2c , 32 , ""%sr%u"" , TEST_BIT ( bytes [ 1 ] , 7 ) ? ""@"" : """" , op2 )"		1296162	0					
ANR	1296261	Callee	snprintf		1296162	0					
ANR	1296262	Identifier	snprintf		1296162	0					
ANR	1296263	ArgumentList	op2c		1296162	1					
ANR	1296264	Argument	op2c		1296162	0					
ANR	1296265	Identifier	op2c		1296162	0					
ANR	1296266	Argument	32		1296162	1					
ANR	1296267	PrimaryExpression	32		1296162	0					
ANR	1296268	Argument	"""%sr%u"""		1296162	2					
ANR	1296269	PrimaryExpression	"""%sr%u"""		1296162	0					
ANR	1296270	Argument	"TEST_BIT ( bytes [ 1 ] , 7 ) ? ""@"" : """""		1296162	3					
ANR	1296271	ConditionalExpression	"TEST_BIT ( bytes [ 1 ] , 7 ) ? ""@"" : """""		1296162	0					
ANR	1296272	Condition	"TEST_BIT ( bytes [ 1 ] , 7 )"		1296162	0					
ANR	1296273	CallExpression	"TEST_BIT ( bytes [ 1 ] , 7 )"		1296162	0					
ANR	1296274	Callee	TEST_BIT		1296162	0					
ANR	1296275	Identifier	TEST_BIT		1296162	0					
ANR	1296276	ArgumentList	bytes [ 1 ]		1296162	1					
ANR	1296277	Argument	bytes [ 1 ]		1296162	0					
ANR	1296278	ArrayIndexing	bytes [ 1 ]		1296162	0					
ANR	1296279	Identifier	bytes		1296162	0					
ANR	1296280	PrimaryExpression	1		1296162	1					
ANR	1296281	Argument	7		1296162	1					
ANR	1296282	PrimaryExpression	7		1296162	0					
ANR	1296283	PrimaryExpression	"""@"""		1296162	1					
ANR	1296284	PrimaryExpression	""""""		1296162	2					
ANR	1296285	Argument	op2		1296162	4					
ANR	1296286	Identifier	op2		1296162	0					
ANR	1296287	SwitchStatement	switch ( bytes [ 0 ] & EBC_OPCODE_MASK )		1296162	10					
ANR	1296288	Condition	bytes [ 0 ] & EBC_OPCODE_MASK	458:9:11420:11445	1296162	0	True				
ANR	1296289	BitAndExpression	bytes [ 0 ] & EBC_OPCODE_MASK		1296162	0		&			
ANR	1296290	ArrayIndexing	bytes [ 0 ]		1296162	0					
ANR	1296291	Identifier	bytes		1296162	0					
ANR	1296292	PrimaryExpression	0		1296162	1					
ANR	1296293	Identifier	EBC_OPCODE_MASK		1296162	1					
ANR	1296294	CompoundStatement		15:37:362:362	1296162	1					
ANR	1296295	Label	case EBC_MOVBW :	459:1:11451:11465	1296162	0	True				
ANR	1296296	Identifier	EBC_MOVBW		1296162	0					
ANR	1296297	Label	case EBC_MOVWW :	460:1:11468:11482	1296162	1	True				
ANR	1296298	Identifier	EBC_MOVWW		1296162	0					
ANR	1296299	Label	case EBC_MOVDW :	461:1:11485:11499	1296162	2	True				
ANR	1296300	Identifier	EBC_MOVDW		1296162	0					
ANR	1296301	Label	case EBC_MOVQW :	462:1:11502:11516	1296162	3	True				
ANR	1296302	Identifier	EBC_MOVQW		1296162	0					
ANR	1296303	IfStatement	"if ( TEST_BIT ( bytes [ 0 ] , 7 ) )"		1296162	4					
ANR	1296304	Condition	"TEST_BIT ( bytes [ 0 ] , 7 )"	463:6:11524:11544	1296162	0	True				
ANR	1296305	CallExpression	"TEST_BIT ( bytes [ 0 ] , 7 )"		1296162	0					
ANR	1296306	Callee	TEST_BIT		1296162	0					
ANR	1296307	Identifier	TEST_BIT		1296162	0					
ANR	1296308	ArgumentList	bytes [ 0 ]		1296162	1					
ANR	1296309	Argument	bytes [ 0 ]		1296162	0					
ANR	1296310	ArrayIndexing	bytes [ 0 ]		1296162	0					
ANR	1296311	Identifier	bytes		1296162	0					
ANR	1296312	PrimaryExpression	0		1296162	1					
ANR	1296313	Argument	7		1296162	1					
ANR	1296314	PrimaryExpression	7		1296162	0					
ANR	1296315	CompoundStatement		20:29:461:461	1296162	1					
ANR	1296316	ExpressionStatement	"decode_index16 ( bytes + ret , & idx )"	464:3:11552:11585	1296162	0	True				
ANR	1296317	CallExpression	"decode_index16 ( bytes + ret , & idx )"		1296162	0					
ANR	1296318	Callee	decode_index16		1296162	0					
ANR	1296319	Identifier	decode_index16		1296162	0					
ANR	1296320	ArgumentList	bytes + ret		1296162	1					
ANR	1296321	Argument	bytes + ret		1296162	0					
ANR	1296322	AdditiveExpression	bytes + ret		1296162	0		+			
ANR	1296323	Identifier	bytes		1296162	0					
ANR	1296324	Identifier	ret		1296162	1					
ANR	1296325	Argument	& idx		1296162	1					
ANR	1296326	UnaryOperationExpression	& idx		1296162	0					
ANR	1296327	UnaryOperator	&		1296162	0					
ANR	1296328	Identifier	idx		1296162	1					
ANR	1296329	ExpressionStatement	sign = idx . sign ? '+' : '-'	465:3:11590:11615	1296162	1	True				
ANR	1296330	AssignmentExpression	sign = idx . sign ? '+' : '-'		1296162	0		=			
ANR	1296331	Identifier	sign		1296162	0					
ANR	1296332	ConditionalExpression	idx . sign ? '+' : '-'		1296162	1					
ANR	1296333	Condition	idx . sign		1296162	0					
ANR	1296334	MemberAccess	idx . sign		1296162	0					
ANR	1296335	Identifier	idx		1296162	0					
ANR	1296336	Identifier	sign		1296162	1					
ANR	1296337	PrimaryExpression	'+'		1296162	1					
ANR	1296338	PrimaryExpression	'-'		1296162	2					
ANR	1296339	ExpressionStatement	"snprintf ( ind1 , 32 , ""(%c%u, %c%u)"" , sign , idx . n , sign , idx . c )"	466:3:11620:11684	1296162	2	True				
ANR	1296340	CallExpression	"snprintf ( ind1 , 32 , ""(%c%u, %c%u)"" , sign , idx . n , sign , idx . c )"		1296162	0					
ANR	1296341	Callee	snprintf		1296162	0					
ANR	1296342	Identifier	snprintf		1296162	0					
ANR	1296343	ArgumentList	ind1		1296162	1					
ANR	1296344	Argument	ind1		1296162	0					
ANR	1296345	Identifier	ind1		1296162	0					
ANR	1296346	Argument	32		1296162	1					
ANR	1296347	PrimaryExpression	32		1296162	0					
ANR	1296348	Argument	"""(%c%u, %c%u)"""		1296162	2					
ANR	1296349	PrimaryExpression	"""(%c%u, %c%u)"""		1296162	0					
ANR	1296350	Argument	sign		1296162	3					
ANR	1296351	Identifier	sign		1296162	0					
ANR	1296352	Argument	idx . n		1296162	4					
ANR	1296353	MemberAccess	idx . n		1296162	0					
ANR	1296354	Identifier	idx		1296162	0					
ANR	1296355	Identifier	n		1296162	1					
ANR	1296356	Argument	sign		1296162	5					
ANR	1296357	Identifier	sign		1296162	0					
ANR	1296358	Argument	idx . c		1296162	6					
ANR	1296359	MemberAccess	idx . c		1296162	0					
ANR	1296360	Identifier	idx		1296162	0					
ANR	1296361	Identifier	c		1296162	1					
ANR	1296362	ExpressionStatement	ret += 2	468:3:11689:11697	1296162	3	True				
ANR	1296363	AssignmentExpression	ret += 2		1296162	0		+=			
ANR	1296364	Identifier	ret		1296162	0					
ANR	1296365	PrimaryExpression	2		1296162	1					
ANR	1296366	IfStatement	"if ( TEST_BIT ( bytes [ 0 ] , 6 ) )"		1296162	5					
ANR	1296367	Condition	"TEST_BIT ( bytes [ 0 ] , 6 )"	470:6:11709:11729	1296162	0	True				
ANR	1296368	CallExpression	"TEST_BIT ( bytes [ 0 ] , 6 )"		1296162	0					
ANR	1296369	Callee	TEST_BIT		1296162	0					
ANR	1296370	Identifier	TEST_BIT		1296162	0					
ANR	1296371	ArgumentList	bytes [ 0 ]		1296162	1					
ANR	1296372	Argument	bytes [ 0 ]		1296162	0					
ANR	1296373	ArrayIndexing	bytes [ 0 ]		1296162	0					
ANR	1296374	Identifier	bytes		1296162	0					
ANR	1296375	PrimaryExpression	0		1296162	1					
ANR	1296376	Argument	6		1296162	1					
ANR	1296377	PrimaryExpression	6		1296162	0					
ANR	1296378	CompoundStatement		27:29:646:646	1296162	1					
ANR	1296379	ExpressionStatement	"decode_index16 ( bytes + ret , & idx )"	471:3:11737:11770	1296162	0	True				
ANR	1296380	CallExpression	"decode_index16 ( bytes + ret , & idx )"		1296162	0					
ANR	1296381	Callee	decode_index16		1296162	0					
ANR	1296382	Identifier	decode_index16		1296162	0					
ANR	1296383	ArgumentList	bytes + ret		1296162	1					
ANR	1296384	Argument	bytes + ret		1296162	0					
ANR	1296385	AdditiveExpression	bytes + ret		1296162	0		+			
ANR	1296386	Identifier	bytes		1296162	0					
ANR	1296387	Identifier	ret		1296162	1					
ANR	1296388	Argument	& idx		1296162	1					
ANR	1296389	UnaryOperationExpression	& idx		1296162	0					
ANR	1296390	UnaryOperator	&		1296162	0					
ANR	1296391	Identifier	idx		1296162	1					
ANR	1296392	ExpressionStatement	sign = idx . sign ? '+' : '-'	472:3:11775:11800	1296162	1	True				
ANR	1296393	AssignmentExpression	sign = idx . sign ? '+' : '-'		1296162	0		=			
ANR	1296394	Identifier	sign		1296162	0					
ANR	1296395	ConditionalExpression	idx . sign ? '+' : '-'		1296162	1					
ANR	1296396	Condition	idx . sign		1296162	0					
ANR	1296397	MemberAccess	idx . sign		1296162	0					
ANR	1296398	Identifier	idx		1296162	0					
ANR	1296399	Identifier	sign		1296162	1					
ANR	1296400	PrimaryExpression	'+'		1296162	1					
ANR	1296401	PrimaryExpression	'-'		1296162	2					
ANR	1296402	ExpressionStatement	"snprintf ( ind2 , 32 , ""(%c%u, %c%u)"" , sign , idx . n , sign , idx . c )"	473:3:11805:11870	1296162	2	True				
ANR	1296403	CallExpression	"snprintf ( ind2 , 32 , ""(%c%u, %c%u)"" , sign , idx . n , sign , idx . c )"		1296162	0					
ANR	1296404	Callee	snprintf		1296162	0					
ANR	1296405	Identifier	snprintf		1296162	0					
ANR	1296406	ArgumentList	ind2		1296162	1					
ANR	1296407	Argument	ind2		1296162	0					
ANR	1296408	Identifier	ind2		1296162	0					
ANR	1296409	Argument	32		1296162	1					
ANR	1296410	PrimaryExpression	32		1296162	0					
ANR	1296411	Argument	"""(%c%u, %c%u)"""		1296162	2					
ANR	1296412	PrimaryExpression	"""(%c%u, %c%u)"""		1296162	0					
ANR	1296413	Argument	sign		1296162	3					
ANR	1296414	Identifier	sign		1296162	0					
ANR	1296415	Argument	idx . n		1296162	4					
ANR	1296416	MemberAccess	idx . n		1296162	0					
ANR	1296417	Identifier	idx		1296162	0					
ANR	1296418	Identifier	n		1296162	1					
ANR	1296419	Argument	sign		1296162	5					
ANR	1296420	Identifier	sign		1296162	0					
ANR	1296421	Argument	idx . c		1296162	6					
ANR	1296422	MemberAccess	idx . c		1296162	0					
ANR	1296423	Identifier	idx		1296162	0					
ANR	1296424	Identifier	c		1296162	1					
ANR	1296425	ExpressionStatement	ret += 2	475:3:11875:11883	1296162	3	True				
ANR	1296426	AssignmentExpression	ret += 2		1296162	0		+=			
ANR	1296427	Identifier	ret		1296162	0					
ANR	1296428	PrimaryExpression	2		1296162	1					
ANR	1296429	BreakStatement	break ;	477:2:11891:11896	1296162	6	True				
ANR	1296430	Label	case EBC_MOVBD :	478:1:11899:11913	1296162	7	True				
ANR	1296431	Identifier	EBC_MOVBD		1296162	0					
ANR	1296432	Label	case EBC_MOVWD :	479:1:11916:11930	1296162	8	True				
ANR	1296433	Identifier	EBC_MOVWD		1296162	0					
ANR	1296434	Label	case EBC_MOVDD :	480:1:11933:11947	1296162	9	True				
ANR	1296435	Identifier	EBC_MOVDD		1296162	0					
ANR	1296436	Label	case EBC_MOVQD :	481:1:11950:11964	1296162	10	True				
ANR	1296437	Identifier	EBC_MOVQD		1296162	0					
ANR	1296438	IfStatement	"if ( TEST_BIT ( bytes [ 0 ] , 7 ) )"		1296162	11					
ANR	1296439	Condition	"TEST_BIT ( bytes [ 0 ] , 7 )"	482:6:11972:11992	1296162	0	True				
ANR	1296440	CallExpression	"TEST_BIT ( bytes [ 0 ] , 7 )"		1296162	0					
ANR	1296441	Callee	TEST_BIT		1296162	0					
ANR	1296442	Identifier	TEST_BIT		1296162	0					
ANR	1296443	ArgumentList	bytes [ 0 ]		1296162	1					
ANR	1296444	Argument	bytes [ 0 ]		1296162	0					
ANR	1296445	ArrayIndexing	bytes [ 0 ]		1296162	0					
ANR	1296446	Identifier	bytes		1296162	0					
ANR	1296447	PrimaryExpression	0		1296162	1					
ANR	1296448	Argument	7		1296162	1					
ANR	1296449	PrimaryExpression	7		1296162	0					
ANR	1296450	CompoundStatement		39:29:909:909	1296162	1					
ANR	1296451	ExpressionStatement	"decode_index32 ( bytes + ret , & idx )"	483:3:12000:12033	1296162	0	True				
ANR	1296452	CallExpression	"decode_index32 ( bytes + ret , & idx )"		1296162	0					
ANR	1296453	Callee	decode_index32		1296162	0					
ANR	1296454	Identifier	decode_index32		1296162	0					
ANR	1296455	ArgumentList	bytes + ret		1296162	1					
ANR	1296456	Argument	bytes + ret		1296162	0					
ANR	1296457	AdditiveExpression	bytes + ret		1296162	0		+			
ANR	1296458	Identifier	bytes		1296162	0					
ANR	1296459	Identifier	ret		1296162	1					
ANR	1296460	Argument	& idx		1296162	1					
ANR	1296461	UnaryOperationExpression	& idx		1296162	0					
ANR	1296462	UnaryOperator	&		1296162	0					
ANR	1296463	Identifier	idx		1296162	1					
ANR	1296464	ExpressionStatement	sign = idx . sign ? '+' : '-'	484:3:12038:12063	1296162	1	True				
ANR	1296465	AssignmentExpression	sign = idx . sign ? '+' : '-'		1296162	0		=			
ANR	1296466	Identifier	sign		1296162	0					
ANR	1296467	ConditionalExpression	idx . sign ? '+' : '-'		1296162	1					
ANR	1296468	Condition	idx . sign		1296162	0					
ANR	1296469	MemberAccess	idx . sign		1296162	0					
ANR	1296470	Identifier	idx		1296162	0					
ANR	1296471	Identifier	sign		1296162	1					
ANR	1296472	PrimaryExpression	'+'		1296162	1					
ANR	1296473	PrimaryExpression	'-'		1296162	2					
ANR	1296474	ExpressionStatement	"snprintf ( ind1 , 32 , ""(%c%u, %c%u)"" , sign , idx . n , sign , idx . c )"	485:3:12068:12133	1296162	2	True				
ANR	1296475	CallExpression	"snprintf ( ind1 , 32 , ""(%c%u, %c%u)"" , sign , idx . n , sign , idx . c )"		1296162	0					
ANR	1296476	Callee	snprintf		1296162	0					
ANR	1296477	Identifier	snprintf		1296162	0					
ANR	1296478	ArgumentList	ind1		1296162	1					
ANR	1296479	Argument	ind1		1296162	0					
ANR	1296480	Identifier	ind1		1296162	0					
ANR	1296481	Argument	32		1296162	1					
ANR	1296482	PrimaryExpression	32		1296162	0					
ANR	1296483	Argument	"""(%c%u, %c%u)"""		1296162	2					
ANR	1296484	PrimaryExpression	"""(%c%u, %c%u)"""		1296162	0					
ANR	1296485	Argument	sign		1296162	3					
ANR	1296486	Identifier	sign		1296162	0					
ANR	1296487	Argument	idx . n		1296162	4					
ANR	1296488	MemberAccess	idx . n		1296162	0					
ANR	1296489	Identifier	idx		1296162	0					
ANR	1296490	Identifier	n		1296162	1					
ANR	1296491	Argument	sign		1296162	5					
ANR	1296492	Identifier	sign		1296162	0					
ANR	1296493	Argument	idx . c		1296162	6					
ANR	1296494	MemberAccess	idx . c		1296162	0					
ANR	1296495	Identifier	idx		1296162	0					
ANR	1296496	Identifier	c		1296162	1					
ANR	1296497	ExpressionStatement	ret += 4	487:3:12138:12146	1296162	3	True				
ANR	1296498	AssignmentExpression	ret += 4		1296162	0		+=			
ANR	1296499	Identifier	ret		1296162	0					
ANR	1296500	PrimaryExpression	4		1296162	1					
ANR	1296501	IfStatement	"if ( TEST_BIT ( bytes [ 0 ] , 6 ) )"		1296162	12					
ANR	1296502	Condition	"TEST_BIT ( bytes [ 0 ] , 6 )"	489:6:12158:12178	1296162	0	True				
ANR	1296503	CallExpression	"TEST_BIT ( bytes [ 0 ] , 6 )"		1296162	0					
ANR	1296504	Callee	TEST_BIT		1296162	0					
ANR	1296505	Identifier	TEST_BIT		1296162	0					
ANR	1296506	ArgumentList	bytes [ 0 ]		1296162	1					
ANR	1296507	Argument	bytes [ 0 ]		1296162	0					
ANR	1296508	ArrayIndexing	bytes [ 0 ]		1296162	0					
ANR	1296509	Identifier	bytes		1296162	0					
ANR	1296510	PrimaryExpression	0		1296162	1					
ANR	1296511	Argument	6		1296162	1					
ANR	1296512	PrimaryExpression	6		1296162	0					
ANR	1296513	CompoundStatement		46:29:1095:1095	1296162	1					
ANR	1296514	ExpressionStatement	"decode_index32 ( bytes + ret , & idx )"	490:3:12186:12219	1296162	0	True				
ANR	1296515	CallExpression	"decode_index32 ( bytes + ret , & idx )"		1296162	0					
ANR	1296516	Callee	decode_index32		1296162	0					
ANR	1296517	Identifier	decode_index32		1296162	0					
ANR	1296518	ArgumentList	bytes + ret		1296162	1					
ANR	1296519	Argument	bytes + ret		1296162	0					
ANR	1296520	AdditiveExpression	bytes + ret		1296162	0		+			
ANR	1296521	Identifier	bytes		1296162	0					
ANR	1296522	Identifier	ret		1296162	1					
ANR	1296523	Argument	& idx		1296162	1					
ANR	1296524	UnaryOperationExpression	& idx		1296162	0					
ANR	1296525	UnaryOperator	&		1296162	0					
ANR	1296526	Identifier	idx		1296162	1					
ANR	1296527	ExpressionStatement	sign = idx . sign ? '+' : '-'	491:3:12224:12249	1296162	1	True				
ANR	1296528	AssignmentExpression	sign = idx . sign ? '+' : '-'		1296162	0		=			
ANR	1296529	Identifier	sign		1296162	0					
ANR	1296530	ConditionalExpression	idx . sign ? '+' : '-'		1296162	1					
ANR	1296531	Condition	idx . sign		1296162	0					
ANR	1296532	MemberAccess	idx . sign		1296162	0					
ANR	1296533	Identifier	idx		1296162	0					
ANR	1296534	Identifier	sign		1296162	1					
ANR	1296535	PrimaryExpression	'+'		1296162	1					
ANR	1296536	PrimaryExpression	'-'		1296162	2					
ANR	1296537	ExpressionStatement	"snprintf ( ind2 , 32 , ""(%c%u, %c%u)"" , sign , idx . n , sign , idx . c )"	492:3:12254:12319	1296162	2	True				
ANR	1296538	CallExpression	"snprintf ( ind2 , 32 , ""(%c%u, %c%u)"" , sign , idx . n , sign , idx . c )"		1296162	0					
ANR	1296539	Callee	snprintf		1296162	0					
ANR	1296540	Identifier	snprintf		1296162	0					
ANR	1296541	ArgumentList	ind2		1296162	1					
ANR	1296542	Argument	ind2		1296162	0					
ANR	1296543	Identifier	ind2		1296162	0					
ANR	1296544	Argument	32		1296162	1					
ANR	1296545	PrimaryExpression	32		1296162	0					
ANR	1296546	Argument	"""(%c%u, %c%u)"""		1296162	2					
ANR	1296547	PrimaryExpression	"""(%c%u, %c%u)"""		1296162	0					
ANR	1296548	Argument	sign		1296162	3					
ANR	1296549	Identifier	sign		1296162	0					
ANR	1296550	Argument	idx . n		1296162	4					
ANR	1296551	MemberAccess	idx . n		1296162	0					
ANR	1296552	Identifier	idx		1296162	0					
ANR	1296553	Identifier	n		1296162	1					
ANR	1296554	Argument	sign		1296162	5					
ANR	1296555	Identifier	sign		1296162	0					
ANR	1296556	Argument	idx . c		1296162	6					
ANR	1296557	MemberAccess	idx . c		1296162	0					
ANR	1296558	Identifier	idx		1296162	0					
ANR	1296559	Identifier	c		1296162	1					
ANR	1296560	ExpressionStatement	ret += 4	494:3:12324:12332	1296162	3	True				
ANR	1296561	AssignmentExpression	ret += 4		1296162	0		+=			
ANR	1296562	Identifier	ret		1296162	0					
ANR	1296563	PrimaryExpression	4		1296162	1					
ANR	1296564	BreakStatement	break ;	496:2:12340:12345	1296162	13	True				
ANR	1296565	Label	case EBC_MOVQQ :	497:1:12348:12362	1296162	14	True				
ANR	1296566	Identifier	EBC_MOVQQ		1296162	0					
ANR	1296567	IfStatement	"if ( TEST_BIT ( bytes [ 0 ] , 7 ) )"		1296162	15					
ANR	1296568	Condition	"TEST_BIT ( bytes [ 0 ] , 7 )"	498:6:12370:12390	1296162	0	True				
ANR	1296569	CallExpression	"TEST_BIT ( bytes [ 0 ] , 7 )"		1296162	0					
ANR	1296570	Callee	TEST_BIT		1296162	0					
ANR	1296571	Identifier	TEST_BIT		1296162	0					
ANR	1296572	ArgumentList	bytes [ 0 ]		1296162	1					
ANR	1296573	Argument	bytes [ 0 ]		1296162	0					
ANR	1296574	ArrayIndexing	bytes [ 0 ]		1296162	0					
ANR	1296575	Identifier	bytes		1296162	0					
ANR	1296576	PrimaryExpression	0		1296162	1					
ANR	1296577	Argument	7		1296162	1					
ANR	1296578	PrimaryExpression	7		1296162	0					
ANR	1296579	CompoundStatement		55:29:1307:1307	1296162	1					
ANR	1296580	ExpressionStatement	"decode_index64 ( bytes + ret , & idx )"	499:3:12398:12431	1296162	0	True				
ANR	1296581	CallExpression	"decode_index64 ( bytes + ret , & idx )"		1296162	0					
ANR	1296582	Callee	decode_index64		1296162	0					
ANR	1296583	Identifier	decode_index64		1296162	0					
ANR	1296584	ArgumentList	bytes + ret		1296162	1					
ANR	1296585	Argument	bytes + ret		1296162	0					
ANR	1296586	AdditiveExpression	bytes + ret		1296162	0		+			
ANR	1296587	Identifier	bytes		1296162	0					
ANR	1296588	Identifier	ret		1296162	1					
ANR	1296589	Argument	& idx		1296162	1					
ANR	1296590	UnaryOperationExpression	& idx		1296162	0					
ANR	1296591	UnaryOperator	&		1296162	0					
ANR	1296592	Identifier	idx		1296162	1					
ANR	1296593	ExpressionStatement	sign = idx . sign ? '+' : '-'	500:3:12436:12461	1296162	1	True				
ANR	1296594	AssignmentExpression	sign = idx . sign ? '+' : '-'		1296162	0		=			
ANR	1296595	Identifier	sign		1296162	0					
ANR	1296596	ConditionalExpression	idx . sign ? '+' : '-'		1296162	1					
ANR	1296597	Condition	idx . sign		1296162	0					
ANR	1296598	MemberAccess	idx . sign		1296162	0					
ANR	1296599	Identifier	idx		1296162	0					
ANR	1296600	Identifier	sign		1296162	1					
ANR	1296601	PrimaryExpression	'+'		1296162	1					
ANR	1296602	PrimaryExpression	'-'		1296162	2					
ANR	1296603	ExpressionStatement	"snprintf ( ind1 , 32 , ""(%c%u, %c%u)"" , sign , idx . n , sign , idx . c )"	501:3:12466:12531	1296162	2	True				
ANR	1296604	CallExpression	"snprintf ( ind1 , 32 , ""(%c%u, %c%u)"" , sign , idx . n , sign , idx . c )"		1296162	0					
ANR	1296605	Callee	snprintf		1296162	0					
ANR	1296606	Identifier	snprintf		1296162	0					
ANR	1296607	ArgumentList	ind1		1296162	1					
ANR	1296608	Argument	ind1		1296162	0					
ANR	1296609	Identifier	ind1		1296162	0					
ANR	1296610	Argument	32		1296162	1					
ANR	1296611	PrimaryExpression	32		1296162	0					
ANR	1296612	Argument	"""(%c%u, %c%u)"""		1296162	2					
ANR	1296613	PrimaryExpression	"""(%c%u, %c%u)"""		1296162	0					
ANR	1296614	Argument	sign		1296162	3					
ANR	1296615	Identifier	sign		1296162	0					
ANR	1296616	Argument	idx . n		1296162	4					
ANR	1296617	MemberAccess	idx . n		1296162	0					
ANR	1296618	Identifier	idx		1296162	0					
ANR	1296619	Identifier	n		1296162	1					
ANR	1296620	Argument	sign		1296162	5					
ANR	1296621	Identifier	sign		1296162	0					
ANR	1296622	Argument	idx . c		1296162	6					
ANR	1296623	MemberAccess	idx . c		1296162	0					
ANR	1296624	Identifier	idx		1296162	0					
ANR	1296625	Identifier	c		1296162	1					
ANR	1296626	ExpressionStatement	ret += 8	503:3:12536:12544	1296162	3	True				
ANR	1296627	AssignmentExpression	ret += 8		1296162	0		+=			
ANR	1296628	Identifier	ret		1296162	0					
ANR	1296629	PrimaryExpression	8		1296162	1					
ANR	1296630	IfStatement	"if ( TEST_BIT ( bytes [ 0 ] , 6 ) )"		1296162	16					
ANR	1296631	Condition	"TEST_BIT ( bytes [ 0 ] , 6 )"	505:6:12556:12576	1296162	0	True				
ANR	1296632	CallExpression	"TEST_BIT ( bytes [ 0 ] , 6 )"		1296162	0					
ANR	1296633	Callee	TEST_BIT		1296162	0					
ANR	1296634	Identifier	TEST_BIT		1296162	0					
ANR	1296635	ArgumentList	bytes [ 0 ]		1296162	1					
ANR	1296636	Argument	bytes [ 0 ]		1296162	0					
ANR	1296637	ArrayIndexing	bytes [ 0 ]		1296162	0					
ANR	1296638	Identifier	bytes		1296162	0					
ANR	1296639	PrimaryExpression	0		1296162	1					
ANR	1296640	Argument	6		1296162	1					
ANR	1296641	PrimaryExpression	6		1296162	0					
ANR	1296642	CompoundStatement		62:29:1493:1493	1296162	1					
ANR	1296643	ExpressionStatement	"decode_index64 ( bytes + ret , & idx )"	506:3:12584:12617	1296162	0	True				
ANR	1296644	CallExpression	"decode_index64 ( bytes + ret , & idx )"		1296162	0					
ANR	1296645	Callee	decode_index64		1296162	0					
ANR	1296646	Identifier	decode_index64		1296162	0					
ANR	1296647	ArgumentList	bytes + ret		1296162	1					
ANR	1296648	Argument	bytes + ret		1296162	0					
ANR	1296649	AdditiveExpression	bytes + ret		1296162	0		+			
ANR	1296650	Identifier	bytes		1296162	0					
ANR	1296651	Identifier	ret		1296162	1					
ANR	1296652	Argument	& idx		1296162	1					
ANR	1296653	UnaryOperationExpression	& idx		1296162	0					
ANR	1296654	UnaryOperator	&		1296162	0					
ANR	1296655	Identifier	idx		1296162	1					
ANR	1296656	ExpressionStatement	sign = idx . sign ? '+' : '-'	507:3:12622:12647	1296162	1	True				
ANR	1296657	AssignmentExpression	sign = idx . sign ? '+' : '-'		1296162	0		=			
ANR	1296658	Identifier	sign		1296162	0					
ANR	1296659	ConditionalExpression	idx . sign ? '+' : '-'		1296162	1					
ANR	1296660	Condition	idx . sign		1296162	0					
ANR	1296661	MemberAccess	idx . sign		1296162	0					
ANR	1296662	Identifier	idx		1296162	0					
ANR	1296663	Identifier	sign		1296162	1					
ANR	1296664	PrimaryExpression	'+'		1296162	1					
ANR	1296665	PrimaryExpression	'-'		1296162	2					
ANR	1296666	ExpressionStatement	"snprintf ( ind1 , 32 , ""(%c%u, %c%u)"" , sign , idx . n , sign , idx . c )"	508:3:12652:12717	1296162	2	True				
ANR	1296667	CallExpression	"snprintf ( ind1 , 32 , ""(%c%u, %c%u)"" , sign , idx . n , sign , idx . c )"		1296162	0					
ANR	1296668	Callee	snprintf		1296162	0					
ANR	1296669	Identifier	snprintf		1296162	0					
ANR	1296670	ArgumentList	ind1		1296162	1					
ANR	1296671	Argument	ind1		1296162	0					
ANR	1296672	Identifier	ind1		1296162	0					
ANR	1296673	Argument	32		1296162	1					
ANR	1296674	PrimaryExpression	32		1296162	0					
ANR	1296675	Argument	"""(%c%u, %c%u)"""		1296162	2					
ANR	1296676	PrimaryExpression	"""(%c%u, %c%u)"""		1296162	0					
ANR	1296677	Argument	sign		1296162	3					
ANR	1296678	Identifier	sign		1296162	0					
ANR	1296679	Argument	idx . n		1296162	4					
ANR	1296680	MemberAccess	idx . n		1296162	0					
ANR	1296681	Identifier	idx		1296162	0					
ANR	1296682	Identifier	n		1296162	1					
ANR	1296683	Argument	sign		1296162	5					
ANR	1296684	Identifier	sign		1296162	0					
ANR	1296685	Argument	idx . c		1296162	6					
ANR	1296686	MemberAccess	idx . c		1296162	0					
ANR	1296687	Identifier	idx		1296162	0					
ANR	1296688	Identifier	c		1296162	1					
ANR	1296689	ExpressionStatement	ret += 8	510:3:12722:12730	1296162	3	True				
ANR	1296690	AssignmentExpression	ret += 8		1296162	0		+=			
ANR	1296691	Identifier	ret		1296162	0					
ANR	1296692	PrimaryExpression	8		1296162	1					
ANR	1296693	BreakStatement	break ;	512:2:12738:12743	1296162	17	True				
ANR	1296694	ExpressionStatement	"CHK_SNPRINTF ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""%s%s, %s%s"" , op1c , ind1 , op2c , ind2 )"	515:1:12750:12839	1296162	11	True				
ANR	1296695	CallExpression	"CHK_SNPRINTF ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""%s%s, %s%s"" , op1c , ind1 , op2c , ind2 )"		1296162	0					
ANR	1296696	Callee	CHK_SNPRINTF		1296162	0					
ANR	1296697	Identifier	CHK_SNPRINTF		1296162	0					
ANR	1296698	ArgumentList	cmd -> operands		1296162	1					
ANR	1296699	Argument	cmd -> operands		1296162	0					
ANR	1296700	PtrMemberAccess	cmd -> operands		1296162	0					
ANR	1296701	Identifier	cmd		1296162	0					
ANR	1296702	Identifier	operands		1296162	1					
ANR	1296703	Argument	EBC_OPERANDS_MAXLEN		1296162	1					
ANR	1296704	Identifier	EBC_OPERANDS_MAXLEN		1296162	0					
ANR	1296705	Argument	"""%s%s, %s%s"""		1296162	2					
ANR	1296706	PrimaryExpression	"""%s%s, %s%s"""		1296162	0					
ANR	1296707	Argument	op1c		1296162	3					
ANR	1296708	Identifier	op1c		1296162	0					
ANR	1296709	Argument	ind1		1296162	4					
ANR	1296710	Identifier	ind1		1296162	0					
ANR	1296711	Argument	op2c		1296162	5					
ANR	1296712	Identifier	op2c		1296162	0					
ANR	1296713	Argument	ind2		1296162	6					
ANR	1296714	Identifier	ind2		1296162	0					
ANR	1296715	ReturnStatement	return ret ;	518:1:12843:12853	1296162	12	True				
ANR	1296716	Identifier	ret		1296162	0					
ANR	1296717	ReturnType	static int		1296162	1					
ANR	1296718	Identifier	decode_mov_args		1296162	2					
ANR	1296719	ParameterList	"const ut8 * bytes , ebc_command_t * cmd"		1296162	3					
ANR	1296720	Parameter	const ut8 * bytes	444:27:11047:11062	1296162	0	True				
ANR	1296721	ParameterType	const ut8 *		1296162	0					
ANR	1296722	Identifier	bytes		1296162	1					
ANR	1296723	Parameter	ebc_command_t * cmd	444:45:11065:11082	1296162	1	True				
ANR	1296724	ParameterType	ebc_command_t *		1296162	0					
ANR	1296725	Identifier	cmd		1296162	1					
ANR	1296726	CFGEntryNode	ENTRY		1296162		True				
ANR	1296727	CFGExitNode	EXIT		1296162		True				
ANR	1296728	Symbol	ret		1296162						
ANR	1296729	Symbol	ind2		1296162						
ANR	1296730	Symbol	ind1		1296162						
ANR	1296731	Symbol	EBC_OPERANDS_MAXLEN		1296162						
ANR	1296732	Symbol	& idx		1296162						
ANR	1296733	Symbol	idx . n		1296162						
ANR	1296734	Symbol	op2c		1296162						
ANR	1296735	Symbol	op1c		1296162						
ANR	1296736	Symbol	sign		1296162						
ANR	1296737	Symbol	* bytes		1296162						
ANR	1296738	Symbol	op2		1296162						
ANR	1296739	Symbol	op1		1296162						
ANR	1296740	Symbol	idx . c		1296162						
ANR	1296741	Symbol	cmd -> operands		1296162						
ANR	1296742	Symbol	idx . sign		1296162						
ANR	1296743	Symbol	bytes		1296162						
ANR	1296744	Symbol	cmd		1296162						
ANR	1296745	Symbol	* cmd		1296162						
ANR	1296746	Symbol	idx		1296162						
ANR	1296747	Symbol	EBC_OPCODE_MASK		1296162						
ANR	1296748	Symbol	TEST_BIT		1296162						
ANR	1296749	Function	decode_mov	521:0:12858:13048							
ANR	1296750	FunctionDef	"decode_mov (const ut8 * bytes , ebc_command_t * cmd)"		1296749	0					
ANR	1296751	CompoundStatement		521:60:12918:13048	1296749	0					
ANR	1296752	ExpressionStatement	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s"" , instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ] )"	522:1:12921:13009	1296749	0	True				
ANR	1296753	CallExpression	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s"" , instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ] )"		1296749	0					
ANR	1296754	Callee	snprintf		1296749	0					
ANR	1296755	Identifier	snprintf		1296749	0					
ANR	1296756	ArgumentList	cmd -> instr		1296749	1					
ANR	1296757	Argument	cmd -> instr		1296749	0					
ANR	1296758	PtrMemberAccess	cmd -> instr		1296749	0					
ANR	1296759	Identifier	cmd		1296749	0					
ANR	1296760	Identifier	instr		1296749	1					
ANR	1296761	Argument	EBC_INSTR_MAXLEN		1296749	1					
ANR	1296762	Identifier	EBC_INSTR_MAXLEN		1296749	0					
ANR	1296763	Argument	"""%s"""		1296749	2					
ANR	1296764	PrimaryExpression	"""%s"""		1296749	0					
ANR	1296765	Argument	instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ]		1296749	3					
ANR	1296766	ArrayIndexing	instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ]		1296749	0					
ANR	1296767	Identifier	instr_names		1296749	0					
ANR	1296768	BitAndExpression	bytes [ 0 ] & EBC_OPCODE_MASK		1296749	1		&			
ANR	1296769	ArrayIndexing	bytes [ 0 ]		1296749	0					
ANR	1296770	Identifier	bytes		1296749	0					
ANR	1296771	PrimaryExpression	0		1296749	1					
ANR	1296772	Identifier	EBC_OPCODE_MASK		1296749	1					
ANR	1296773	ReturnStatement	"return decode_mov_args ( bytes , cmd ) ;"	524:1:13012:13046	1296749	1	True				
ANR	1296774	CallExpression	"decode_mov_args ( bytes , cmd )"		1296749	0					
ANR	1296775	Callee	decode_mov_args		1296749	0					
ANR	1296776	Identifier	decode_mov_args		1296749	0					
ANR	1296777	ArgumentList	bytes		1296749	1					
ANR	1296778	Argument	bytes		1296749	0					
ANR	1296779	Identifier	bytes		1296749	0					
ANR	1296780	Argument	cmd		1296749	1					
ANR	1296781	Identifier	cmd		1296749	0					
ANR	1296782	ReturnType	static int		1296749	1					
ANR	1296783	Identifier	decode_mov		1296749	2					
ANR	1296784	ParameterList	"const ut8 * bytes , ebc_command_t * cmd"		1296749	3					
ANR	1296785	Parameter	const ut8 * bytes	521:22:12880:12895	1296749	0	True				
ANR	1296786	ParameterType	const ut8 *		1296749	0					
ANR	1296787	Identifier	bytes		1296749	1					
ANR	1296788	Parameter	ebc_command_t * cmd	521:40:12898:12915	1296749	1	True				
ANR	1296789	ParameterType	ebc_command_t *		1296749	0					
ANR	1296790	Identifier	cmd		1296749	1					
ANR	1296791	CFGEntryNode	ENTRY		1296749		True				
ANR	1296792	CFGExitNode	EXIT		1296749		True				
ANR	1296793	Symbol	* * bytes		1296749						
ANR	1296794	Symbol	instr_names		1296749						
ANR	1296795	Symbol	bytes		1296749						
ANR	1296796	Symbol	EBC_INSTR_MAXLEN		1296749						
ANR	1296797	Symbol	* EBC_OPCODE_MASK		1296749						
ANR	1296798	Symbol	cmd		1296749						
ANR	1296799	Symbol	* instr_names		1296749						
ANR	1296800	Symbol	* bytes		1296749						
ANR	1296801	Symbol	* cmd		1296749						
ANR	1296802	Symbol	decode_mov_args		1296749						
ANR	1296803	Symbol	EBC_OPCODE_MASK		1296749						
ANR	1296804	Symbol	cmd -> instr		1296749						
ANR	1296805	Function	decode_movsn_args	527:0:13051:14032							
ANR	1296806	FunctionDef	"decode_movsn_args (const ut8 * bytes , ebc_command_t * cmd)"		1296805	0					
ANR	1296807	CompoundStatement		527:67:13118:14032	1296805	0					
ANR	1296808	IdentifierDeclStatement	int ret = 2 ;	528:1:13121:13132	1296805	0	True				
ANR	1296809	IdentifierDecl	ret = 2		1296805	0					
ANR	1296810	IdentifierDeclType	int		1296805	0					
ANR	1296811	Identifier	ret		1296805	1					
ANR	1296812	AssignmentExpression	ret = 2		1296805	2		=			
ANR	1296813	Identifier	ret		1296805	0					
ANR	1296814	PrimaryExpression	2		1296805	1					
ANR	1296815	IdentifierDeclStatement	"unsigned op1 , op2 ;"	529:1:13135:13152	1296805	1	True				
ANR	1296816	IdentifierDecl	op1		1296805	0					
ANR	1296817	IdentifierDeclType	unsigned		1296805	0					
ANR	1296818	Identifier	op1		1296805	1					
ANR	1296819	IdentifierDecl	op2		1296805	1					
ANR	1296820	IdentifierDeclType	unsigned		1296805	0					
ANR	1296821	Identifier	op2		1296805	1					
ANR	1296822	IdentifierDeclStatement	"char op1c [ 32 ] , op2c [ 32 ] , sign ;"	530:1:13155:13184	1296805	2	True				
ANR	1296823	IdentifierDecl	op1c [ 32 ]		1296805	0					
ANR	1296824	IdentifierDeclType	char [ 32 ]		1296805	0					
ANR	1296825	Identifier	op1c		1296805	1					
ANR	1296826	PrimaryExpression	32		1296805	2					
ANR	1296827	IdentifierDecl	op2c [ 32 ]		1296805	1					
ANR	1296828	IdentifierDeclType	char [ 32 ]		1296805	0					
ANR	1296829	Identifier	op2c		1296805	1					
ANR	1296830	PrimaryExpression	32		1296805	2					
ANR	1296831	IdentifierDecl	sign		1296805	2					
ANR	1296832	IdentifierDeclType	char		1296805	0					
ANR	1296833	Identifier	sign		1296805	1					
ANR	1296834	IdentifierDeclStatement	"char ind1 [ 32 ] = { 0 } , ind2 [ 32 ] = { 0 } ;"	531:1:13187:13222	1296805	3	True				
ANR	1296835	IdentifierDecl	ind1 [ 32 ] = { 0 }		1296805	0					
ANR	1296836	IdentifierDeclType	char [ 32 ]		1296805	0					
ANR	1296837	Identifier	ind1		1296805	1					
ANR	1296838	PrimaryExpression	32		1296805	2					
ANR	1296839	AssignmentExpression	ind1 [ 32 ] = { 0 }		1296805	3		=			
ANR	1296840	Identifier	ind1		1296805	0					
ANR	1296841	InitializerList	0		1296805	1					
ANR	1296842	PrimaryExpression	0		1296805	0					
ANR	1296843	IdentifierDecl	ind2 [ 32 ] = { 0 }		1296805	1					
ANR	1296844	IdentifierDeclType	char [ 32 ]		1296805	0					
ANR	1296845	Identifier	ind2		1296805	1					
ANR	1296846	PrimaryExpression	32		1296805	2					
ANR	1296847	AssignmentExpression	ind2 [ 32 ] = { 0 }		1296805	3		=			
ANR	1296848	Identifier	ind2		1296805	0					
ANR	1296849	InitializerList	0		1296805	1					
ANR	1296850	PrimaryExpression	0		1296805	0					
ANR	1296851	ExpressionStatement	op1 = bytes [ 1 ] & 0x07	533:1:13226:13247	1296805	4	True				
ANR	1296852	AssignmentExpression	op1 = bytes [ 1 ] & 0x07		1296805	0		=			
ANR	1296853	Identifier	op1		1296805	0					
ANR	1296854	BitAndExpression	bytes [ 1 ] & 0x07		1296805	1		&			
ANR	1296855	ArrayIndexing	bytes [ 1 ]		1296805	0					
ANR	1296856	Identifier	bytes		1296805	0					
ANR	1296857	PrimaryExpression	1		1296805	1					
ANR	1296858	PrimaryExpression	0x07		1296805	1					
ANR	1296859	ExpressionStatement	op2 = ( bytes [ 1 ] >> 4 ) & 0x07	534:1:13250:13278	1296805	5	True				
ANR	1296860	AssignmentExpression	op2 = ( bytes [ 1 ] >> 4 ) & 0x07		1296805	0		=			
ANR	1296861	Identifier	op2		1296805	0					
ANR	1296862	BitAndExpression	( bytes [ 1 ] >> 4 ) & 0x07		1296805	1		&			
ANR	1296863	ShiftExpression	bytes [ 1 ] >> 4		1296805	0		>>			
ANR	1296864	ArrayIndexing	bytes [ 1 ]		1296805	0					
ANR	1296865	Identifier	bytes		1296805	0					
ANR	1296866	PrimaryExpression	1		1296805	1					
ANR	1296867	PrimaryExpression	4		1296805	1					
ANR	1296868	PrimaryExpression	0x07		1296805	1					
ANR	1296869	ExpressionStatement	"snprintf ( op1c , 32 , ""%sr%u"" , TEST_BIT ( bytes [ 1 ] , 3 ) ? ""@"" : """" , op1 )"	536:1:13282:13348	1296805	6	True				
ANR	1296870	CallExpression	"snprintf ( op1c , 32 , ""%sr%u"" , TEST_BIT ( bytes [ 1 ] , 3 ) ? ""@"" : """" , op1 )"		1296805	0					
ANR	1296871	Callee	snprintf		1296805	0					
ANR	1296872	Identifier	snprintf		1296805	0					
ANR	1296873	ArgumentList	op1c		1296805	1					
ANR	1296874	Argument	op1c		1296805	0					
ANR	1296875	Identifier	op1c		1296805	0					
ANR	1296876	Argument	32		1296805	1					
ANR	1296877	PrimaryExpression	32		1296805	0					
ANR	1296878	Argument	"""%sr%u"""		1296805	2					
ANR	1296879	PrimaryExpression	"""%sr%u"""		1296805	0					
ANR	1296880	Argument	"TEST_BIT ( bytes [ 1 ] , 3 ) ? ""@"" : """""		1296805	3					
ANR	1296881	ConditionalExpression	"TEST_BIT ( bytes [ 1 ] , 3 ) ? ""@"" : """""		1296805	0					
ANR	1296882	Condition	"TEST_BIT ( bytes [ 1 ] , 3 )"		1296805	0					
ANR	1296883	CallExpression	"TEST_BIT ( bytes [ 1 ] , 3 )"		1296805	0					
ANR	1296884	Callee	TEST_BIT		1296805	0					
ANR	1296885	Identifier	TEST_BIT		1296805	0					
ANR	1296886	ArgumentList	bytes [ 1 ]		1296805	1					
ANR	1296887	Argument	bytes [ 1 ]		1296805	0					
ANR	1296888	ArrayIndexing	bytes [ 1 ]		1296805	0					
ANR	1296889	Identifier	bytes		1296805	0					
ANR	1296890	PrimaryExpression	1		1296805	1					
ANR	1296891	Argument	3		1296805	1					
ANR	1296892	PrimaryExpression	3		1296805	0					
ANR	1296893	PrimaryExpression	"""@"""		1296805	1					
ANR	1296894	PrimaryExpression	""""""		1296805	2					
ANR	1296895	Argument	op1		1296805	4					
ANR	1296896	Identifier	op1		1296805	0					
ANR	1296897	ExpressionStatement	"snprintf ( op2c , 32 , ""%sr%u"" , TEST_BIT ( bytes [ 1 ] , 7 ) ? ""@"" : """" , op2 )"	537:1:13351:13417	1296805	7	True				
ANR	1296898	CallExpression	"snprintf ( op2c , 32 , ""%sr%u"" , TEST_BIT ( bytes [ 1 ] , 7 ) ? ""@"" : """" , op2 )"		1296805	0					
ANR	1296899	Callee	snprintf		1296805	0					
ANR	1296900	Identifier	snprintf		1296805	0					
ANR	1296901	ArgumentList	op2c		1296805	1					
ANR	1296902	Argument	op2c		1296805	0					
ANR	1296903	Identifier	op2c		1296805	0					
ANR	1296904	Argument	32		1296805	1					
ANR	1296905	PrimaryExpression	32		1296805	0					
ANR	1296906	Argument	"""%sr%u"""		1296805	2					
ANR	1296907	PrimaryExpression	"""%sr%u"""		1296805	0					
ANR	1296908	Argument	"TEST_BIT ( bytes [ 1 ] , 7 ) ? ""@"" : """""		1296805	3					
ANR	1296909	ConditionalExpression	"TEST_BIT ( bytes [ 1 ] , 7 ) ? ""@"" : """""		1296805	0					
ANR	1296910	Condition	"TEST_BIT ( bytes [ 1 ] , 7 )"		1296805	0					
ANR	1296911	CallExpression	"TEST_BIT ( bytes [ 1 ] , 7 )"		1296805	0					
ANR	1296912	Callee	TEST_BIT		1296805	0					
ANR	1296913	Identifier	TEST_BIT		1296805	0					
ANR	1296914	ArgumentList	bytes [ 1 ]		1296805	1					
ANR	1296915	Argument	bytes [ 1 ]		1296805	0					
ANR	1296916	ArrayIndexing	bytes [ 1 ]		1296805	0					
ANR	1296917	Identifier	bytes		1296805	0					
ANR	1296918	PrimaryExpression	1		1296805	1					
ANR	1296919	Argument	7		1296805	1					
ANR	1296920	PrimaryExpression	7		1296805	0					
ANR	1296921	PrimaryExpression	"""@"""		1296805	1					
ANR	1296922	PrimaryExpression	""""""		1296805	2					
ANR	1296923	Argument	op2		1296805	4					
ANR	1296924	Identifier	op2		1296805	0					
ANR	1296925	SwitchStatement	switch ( bytes [ 0 ] & EBC_OPCODE_MASK )		1296805	8					
ANR	1296926	Condition	bytes [ 0 ] & EBC_OPCODE_MASK	539:9:13429:13454	1296805	0	True				
ANR	1296927	BitAndExpression	bytes [ 0 ] & EBC_OPCODE_MASK		1296805	0		&			
ANR	1296928	ArrayIndexing	bytes [ 0 ]		1296805	0					
ANR	1296929	Identifier	bytes		1296805	0					
ANR	1296930	PrimaryExpression	0		1296805	1					
ANR	1296931	Identifier	EBC_OPCODE_MASK		1296805	1					
ANR	1296932	CompoundStatement		13:37:338:338	1296805	1					
ANR	1296933	Label	case EBC_MOVSNW :	540:1:13460:13475	1296805	0	True				
ANR	1296934	Identifier	EBC_MOVSNW		1296805	0					
ANR	1296935	IfStatement	"if ( TEST_BIT ( bytes [ 0 ] , 7 ) )"		1296805	1					
ANR	1296936	Condition	"TEST_BIT ( bytes [ 0 ] , 7 )"	541:6:13483:13503	1296805	0	True				
ANR	1296937	CallExpression	"TEST_BIT ( bytes [ 0 ] , 7 )"		1296805	0					
ANR	1296938	Callee	TEST_BIT		1296805	0					
ANR	1296939	Identifier	TEST_BIT		1296805	0					
ANR	1296940	ArgumentList	bytes [ 0 ]		1296805	1					
ANR	1296941	Argument	bytes [ 0 ]		1296805	0					
ANR	1296942	ArrayIndexing	bytes [ 0 ]		1296805	0					
ANR	1296943	Identifier	bytes		1296805	0					
ANR	1296944	PrimaryExpression	0		1296805	1					
ANR	1296945	Argument	7		1296805	1					
ANR	1296946	PrimaryExpression	7		1296805	0					
ANR	1296947	CompoundStatement		16:3:392:407	1296805	1					
ANR	1296948	IdentifierDeclStatement	ebc_index_t idx ;	542:3:13511:13526	1296805	0	True				
ANR	1296949	IdentifierDecl	idx		1296805	0					
ANR	1296950	IdentifierDeclType	ebc_index_t		1296805	0					
ANR	1296951	Identifier	idx		1296805	1					
ANR	1296952	ExpressionStatement	ret += 2	543:3:13531:13539	1296805	1	True				
ANR	1296953	AssignmentExpression	ret += 2		1296805	0		+=			
ANR	1296954	Identifier	ret		1296805	0					
ANR	1296955	PrimaryExpression	2		1296805	1					
ANR	1296956	ExpressionStatement	"decode_index16 ( bytes + 2 , & idx )"	544:3:13544:13575	1296805	2	True				
ANR	1296957	CallExpression	"decode_index16 ( bytes + 2 , & idx )"		1296805	0					
ANR	1296958	Callee	decode_index16		1296805	0					
ANR	1296959	Identifier	decode_index16		1296805	0					
ANR	1296960	ArgumentList	bytes + 2		1296805	1					
ANR	1296961	Argument	bytes + 2		1296805	0					
ANR	1296962	AdditiveExpression	bytes + 2		1296805	0		+			
ANR	1296963	Identifier	bytes		1296805	0					
ANR	1296964	PrimaryExpression	2		1296805	1					
ANR	1296965	Argument	& idx		1296805	1					
ANR	1296966	UnaryOperationExpression	& idx		1296805	0					
ANR	1296967	UnaryOperator	&		1296805	0					
ANR	1296968	Identifier	idx		1296805	1					
ANR	1296969	ExpressionStatement	sign = idx . sign ? '+' : '-'	545:3:13580:13605	1296805	3	True				
ANR	1296970	AssignmentExpression	sign = idx . sign ? '+' : '-'		1296805	0		=			
ANR	1296971	Identifier	sign		1296805	0					
ANR	1296972	ConditionalExpression	idx . sign ? '+' : '-'		1296805	1					
ANR	1296973	Condition	idx . sign		1296805	0					
ANR	1296974	MemberAccess	idx . sign		1296805	0					
ANR	1296975	Identifier	idx		1296805	0					
ANR	1296976	Identifier	sign		1296805	1					
ANR	1296977	PrimaryExpression	'+'		1296805	1					
ANR	1296978	PrimaryExpression	'-'		1296805	2					
ANR	1296979	ExpressionStatement	"snprintf ( ind1 , 32 , ""(%c%u, %c%u)"" , sign , idx . n , sign , idx . c )"	546:3:13610:13675	1296805	4	True				
ANR	1296980	CallExpression	"snprintf ( ind1 , 32 , ""(%c%u, %c%u)"" , sign , idx . n , sign , idx . c )"		1296805	0					
ANR	1296981	Callee	snprintf		1296805	0					
ANR	1296982	Identifier	snprintf		1296805	0					
ANR	1296983	ArgumentList	ind1		1296805	1					
ANR	1296984	Argument	ind1		1296805	0					
ANR	1296985	Identifier	ind1		1296805	0					
ANR	1296986	Argument	32		1296805	1					
ANR	1296987	PrimaryExpression	32		1296805	0					
ANR	1296988	Argument	"""(%c%u, %c%u)"""		1296805	2					
ANR	1296989	PrimaryExpression	"""(%c%u, %c%u)"""		1296805	0					
ANR	1296990	Argument	sign		1296805	3					
ANR	1296991	Identifier	sign		1296805	0					
ANR	1296992	Argument	idx . n		1296805	4					
ANR	1296993	MemberAccess	idx . n		1296805	0					
ANR	1296994	Identifier	idx		1296805	0					
ANR	1296995	Identifier	n		1296805	1					
ANR	1296996	Argument	sign		1296805	5					
ANR	1296997	Identifier	sign		1296805	0					
ANR	1296998	Argument	idx . c		1296805	6					
ANR	1296999	MemberAccess	idx . c		1296805	0					
ANR	1297000	Identifier	idx		1296805	0					
ANR	1297001	Identifier	c		1296805	1					
ANR	1297002	IfStatement	"if ( TEST_BIT ( bytes [ 0 ] , 6 ) )"		1296805	2					
ANR	1297003	Condition	"TEST_BIT ( bytes [ 0 ] , 6 )"	549:6:13687:13707	1296805	0	True				
ANR	1297004	CallExpression	"TEST_BIT ( bytes [ 0 ] , 6 )"		1296805	0					
ANR	1297005	Callee	TEST_BIT		1296805	0					
ANR	1297006	Identifier	TEST_BIT		1296805	0					
ANR	1297007	ArgumentList	bytes [ 0 ]		1296805	1					
ANR	1297008	Argument	bytes [ 0 ]		1296805	0					
ANR	1297009	ArrayIndexing	bytes [ 0 ]		1296805	0					
ANR	1297010	Identifier	bytes		1296805	0					
ANR	1297011	PrimaryExpression	0		1296805	1					
ANR	1297012	Argument	6		1296805	1					
ANR	1297013	PrimaryExpression	6		1296805	0					
ANR	1297014	CompoundStatement		24:3:596:611	1296805	1					
ANR	1297015	IdentifierDeclStatement	ebc_index_t idx ;	550:3:13715:13730	1296805	0	True				
ANR	1297016	IdentifierDecl	idx		1296805	0					
ANR	1297017	IdentifierDeclType	ebc_index_t		1296805	0					
ANR	1297018	Identifier	idx		1296805	1					
ANR	1297019	ExpressionStatement	"decode_index16 ( bytes + ret , & idx )"	551:3:13735:13769	1296805	1	True				
ANR	1297020	CallExpression	"decode_index16 ( bytes + ret , & idx )"		1296805	0					
ANR	1297021	Callee	decode_index16		1296805	0					
ANR	1297022	Identifier	decode_index16		1296805	0					
ANR	1297023	ArgumentList	bytes + ret		1296805	1					
ANR	1297024	Argument	bytes + ret		1296805	0					
ANR	1297025	AdditiveExpression	bytes + ret		1296805	0		+			
ANR	1297026	Identifier	bytes		1296805	0					
ANR	1297027	Identifier	ret		1296805	1					
ANR	1297028	Argument	& idx		1296805	1					
ANR	1297029	UnaryOperationExpression	& idx		1296805	0					
ANR	1297030	UnaryOperator	&		1296805	0					
ANR	1297031	Identifier	idx		1296805	1					
ANR	1297032	ExpressionStatement	sign = idx . sign ? '+' : '-'	552:3:13774:13799	1296805	2	True				
ANR	1297033	AssignmentExpression	sign = idx . sign ? '+' : '-'		1296805	0		=			
ANR	1297034	Identifier	sign		1296805	0					
ANR	1297035	ConditionalExpression	idx . sign ? '+' : '-'		1296805	1					
ANR	1297036	Condition	idx . sign		1296805	0					
ANR	1297037	MemberAccess	idx . sign		1296805	0					
ANR	1297038	Identifier	idx		1296805	0					
ANR	1297039	Identifier	sign		1296805	1					
ANR	1297040	PrimaryExpression	'+'		1296805	1					
ANR	1297041	PrimaryExpression	'-'		1296805	2					
ANR	1297042	ExpressionStatement	"snprintf ( ind2 , 32 , ""(%c%u, %c%u)"" , sign , idx . n , sign , idx . c )"	553:3:13804:13869	1296805	3	True				
ANR	1297043	CallExpression	"snprintf ( ind2 , 32 , ""(%c%u, %c%u)"" , sign , idx . n , sign , idx . c )"		1296805	0					
ANR	1297044	Callee	snprintf		1296805	0					
ANR	1297045	Identifier	snprintf		1296805	0					
ANR	1297046	ArgumentList	ind2		1296805	1					
ANR	1297047	Argument	ind2		1296805	0					
ANR	1297048	Identifier	ind2		1296805	0					
ANR	1297049	Argument	32		1296805	1					
ANR	1297050	PrimaryExpression	32		1296805	0					
ANR	1297051	Argument	"""(%c%u, %c%u)"""		1296805	2					
ANR	1297052	PrimaryExpression	"""(%c%u, %c%u)"""		1296805	0					
ANR	1297053	Argument	sign		1296805	3					
ANR	1297054	Identifier	sign		1296805	0					
ANR	1297055	Argument	idx . n		1296805	4					
ANR	1297056	MemberAccess	idx . n		1296805	0					
ANR	1297057	Identifier	idx		1296805	0					
ANR	1297058	Identifier	n		1296805	1					
ANR	1297059	Argument	sign		1296805	5					
ANR	1297060	Identifier	sign		1296805	0					
ANR	1297061	Argument	idx . c		1296805	6					
ANR	1297062	MemberAccess	idx . c		1296805	0					
ANR	1297063	Identifier	idx		1296805	0					
ANR	1297064	Identifier	c		1296805	1					
ANR	1297065	ExpressionStatement	ret += 2	555:3:13874:13882	1296805	4	True				
ANR	1297066	AssignmentExpression	ret += 2		1296805	0		+=			
ANR	1297067	Identifier	ret		1296805	0					
ANR	1297068	PrimaryExpression	2		1296805	1					
ANR	1297069	BreakStatement	break ;	557:2:13890:13895	1296805	3	True				
ANR	1297070	Label	case EBC_MOVSND :	558:1:13898:13913	1296805	4	True				
ANR	1297071	Identifier	EBC_MOVSND		1296805	0					
ANR	1297072	BreakStatement	break ;	559:2:13917:13922	1296805	5	True				
ANR	1297073	ExpressionStatement	"CHK_SNPRINTF ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""%s%s, %s%s"" , op1c , ind1 , op2c , ind2 )"	561:1:13928:14017	1296805	9	True				
ANR	1297074	CallExpression	"CHK_SNPRINTF ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""%s%s, %s%s"" , op1c , ind1 , op2c , ind2 )"		1296805	0					
ANR	1297075	Callee	CHK_SNPRINTF		1296805	0					
ANR	1297076	Identifier	CHK_SNPRINTF		1296805	0					
ANR	1297077	ArgumentList	cmd -> operands		1296805	1					
ANR	1297078	Argument	cmd -> operands		1296805	0					
ANR	1297079	PtrMemberAccess	cmd -> operands		1296805	0					
ANR	1297080	Identifier	cmd		1296805	0					
ANR	1297081	Identifier	operands		1296805	1					
ANR	1297082	Argument	EBC_OPERANDS_MAXLEN		1296805	1					
ANR	1297083	Identifier	EBC_OPERANDS_MAXLEN		1296805	0					
ANR	1297084	Argument	"""%s%s, %s%s"""		1296805	2					
ANR	1297085	PrimaryExpression	"""%s%s, %s%s"""		1296805	0					
ANR	1297086	Argument	op1c		1296805	3					
ANR	1297087	Identifier	op1c		1296805	0					
ANR	1297088	Argument	ind1		1296805	4					
ANR	1297089	Identifier	ind1		1296805	0					
ANR	1297090	Argument	op2c		1296805	5					
ANR	1297091	Identifier	op2c		1296805	0					
ANR	1297092	Argument	ind2		1296805	6					
ANR	1297093	Identifier	ind2		1296805	0					
ANR	1297094	ReturnStatement	return ret ;	563:1:14020:14030	1296805	10	True				
ANR	1297095	Identifier	ret		1296805	0					
ANR	1297096	ReturnType	static int		1296805	1					
ANR	1297097	Identifier	decode_movsn_args		1296805	2					
ANR	1297098	ParameterList	"const ut8 * bytes , ebc_command_t * cmd"		1296805	3					
ANR	1297099	Parameter	const ut8 * bytes	527:29:13080:13095	1296805	0	True				
ANR	1297100	ParameterType	const ut8 *		1296805	0					
ANR	1297101	Identifier	bytes		1296805	1					
ANR	1297102	Parameter	ebc_command_t * cmd	527:47:13098:13115	1296805	1	True				
ANR	1297103	ParameterType	ebc_command_t *		1296805	0					
ANR	1297104	Identifier	cmd		1296805	1					
ANR	1297105	CFGEntryNode	ENTRY		1296805		True				
ANR	1297106	CFGExitNode	EXIT		1296805		True				
ANR	1297107	Symbol	ret		1296805						
ANR	1297108	Symbol	ind2		1296805						
ANR	1297109	Symbol	ind1		1296805						
ANR	1297110	Symbol	EBC_OPERANDS_MAXLEN		1296805						
ANR	1297111	Symbol	& idx		1296805						
ANR	1297112	Symbol	idx . n		1296805						
ANR	1297113	Symbol	op2c		1296805						
ANR	1297114	Symbol	op1c		1296805						
ANR	1297115	Symbol	sign		1296805						
ANR	1297116	Symbol	* bytes		1296805						
ANR	1297117	Symbol	op2		1296805						
ANR	1297118	Symbol	op1		1296805						
ANR	1297119	Symbol	idx . c		1296805						
ANR	1297120	Symbol	cmd -> operands		1296805						
ANR	1297121	Symbol	idx . sign		1296805						
ANR	1297122	Symbol	bytes		1296805						
ANR	1297123	Symbol	cmd		1296805						
ANR	1297124	Symbol	* cmd		1296805						
ANR	1297125	Symbol	idx		1296805						
ANR	1297126	Symbol	EBC_OPCODE_MASK		1296805						
ANR	1297127	Symbol	TEST_BIT		1296805						
ANR	1297128	Function	decode_movsn	566:0:14035:14229							
ANR	1297129	FunctionDef	"decode_movsn (const ut8 * bytes , ebc_command_t * cmd)"		1297128	0					
ANR	1297130	CompoundStatement		566:62:14097:14229	1297128	0					
ANR	1297131	ExpressionStatement	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s"" , instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ] )"	567:1:14100:14188	1297128	0	True				
ANR	1297132	CallExpression	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s"" , instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ] )"		1297128	0					
ANR	1297133	Callee	snprintf		1297128	0					
ANR	1297134	Identifier	snprintf		1297128	0					
ANR	1297135	ArgumentList	cmd -> instr		1297128	1					
ANR	1297136	Argument	cmd -> instr		1297128	0					
ANR	1297137	PtrMemberAccess	cmd -> instr		1297128	0					
ANR	1297138	Identifier	cmd		1297128	0					
ANR	1297139	Identifier	instr		1297128	1					
ANR	1297140	Argument	EBC_INSTR_MAXLEN		1297128	1					
ANR	1297141	Identifier	EBC_INSTR_MAXLEN		1297128	0					
ANR	1297142	Argument	"""%s"""		1297128	2					
ANR	1297143	PrimaryExpression	"""%s"""		1297128	0					
ANR	1297144	Argument	instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ]		1297128	3					
ANR	1297145	ArrayIndexing	instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ]		1297128	0					
ANR	1297146	Identifier	instr_names		1297128	0					
ANR	1297147	BitAndExpression	bytes [ 0 ] & EBC_OPCODE_MASK		1297128	1		&			
ANR	1297148	ArrayIndexing	bytes [ 0 ]		1297128	0					
ANR	1297149	Identifier	bytes		1297128	0					
ANR	1297150	PrimaryExpression	0		1297128	1					
ANR	1297151	Identifier	EBC_OPCODE_MASK		1297128	1					
ANR	1297152	ReturnStatement	"return decode_movsn_args ( bytes , cmd ) ;"	569:1:14191:14227	1297128	1	True				
ANR	1297153	CallExpression	"decode_movsn_args ( bytes , cmd )"		1297128	0					
ANR	1297154	Callee	decode_movsn_args		1297128	0					
ANR	1297155	Identifier	decode_movsn_args		1297128	0					
ANR	1297156	ArgumentList	bytes		1297128	1					
ANR	1297157	Argument	bytes		1297128	0					
ANR	1297158	Identifier	bytes		1297128	0					
ANR	1297159	Argument	cmd		1297128	1					
ANR	1297160	Identifier	cmd		1297128	0					
ANR	1297161	ReturnType	static int		1297128	1					
ANR	1297162	Identifier	decode_movsn		1297128	2					
ANR	1297163	ParameterList	"const ut8 * bytes , ebc_command_t * cmd"		1297128	3					
ANR	1297164	Parameter	const ut8 * bytes	566:24:14059:14074	1297128	0	True				
ANR	1297165	ParameterType	const ut8 *		1297128	0					
ANR	1297166	Identifier	bytes		1297128	1					
ANR	1297167	Parameter	ebc_command_t * cmd	566:42:14077:14094	1297128	1	True				
ANR	1297168	ParameterType	ebc_command_t *		1297128	0					
ANR	1297169	Identifier	cmd		1297128	1					
ANR	1297170	CFGEntryNode	ENTRY		1297128		True				
ANR	1297171	CFGExitNode	EXIT		1297128		True				
ANR	1297172	Symbol	* * bytes		1297128						
ANR	1297173	Symbol	instr_names		1297128						
ANR	1297174	Symbol	bytes		1297128						
ANR	1297175	Symbol	EBC_INSTR_MAXLEN		1297128						
ANR	1297176	Symbol	* EBC_OPCODE_MASK		1297128						
ANR	1297177	Symbol	cmd		1297128						
ANR	1297178	Symbol	* bytes		1297128						
ANR	1297179	Symbol	* instr_names		1297128						
ANR	1297180	Symbol	* cmd		1297128						
ANR	1297181	Symbol	decode_movsn_args		1297128						
ANR	1297182	Symbol	cmd -> instr		1297128						
ANR	1297183	Symbol	EBC_OPCODE_MASK		1297128						
ANR	1297184	Function	decode_loadsp	572:0:14232:14530							
ANR	1297185	FunctionDef	"decode_loadsp (const ut8 * bytes , ebc_command_t * cmd)"		1297184	0					
ANR	1297186	CompoundStatement		572:63:14295:14530	1297184	0					
ANR	1297187	IdentifierDeclStatement	int ret = 2 ;	573:1:14298:14309	1297184	0	True				
ANR	1297188	IdentifierDecl	ret = 2		1297184	0					
ANR	1297189	IdentifierDeclType	int		1297184	0					
ANR	1297190	Identifier	ret		1297184	1					
ANR	1297191	AssignmentExpression	ret = 2		1297184	2		=			
ANR	1297192	Identifier	ret		1297184	0					
ANR	1297193	PrimaryExpression	2		1297184	1					
ANR	1297194	ExpressionStatement	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s"" , instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ] )"	574:1:14312:14400	1297184	1	True				
ANR	1297195	CallExpression	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s"" , instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ] )"		1297184	0					
ANR	1297196	Callee	snprintf		1297184	0					
ANR	1297197	Identifier	snprintf		1297184	0					
ANR	1297198	ArgumentList	cmd -> instr		1297184	1					
ANR	1297199	Argument	cmd -> instr		1297184	0					
ANR	1297200	PtrMemberAccess	cmd -> instr		1297184	0					
ANR	1297201	Identifier	cmd		1297184	0					
ANR	1297202	Identifier	instr		1297184	1					
ANR	1297203	Argument	EBC_INSTR_MAXLEN		1297184	1					
ANR	1297204	Identifier	EBC_INSTR_MAXLEN		1297184	0					
ANR	1297205	Argument	"""%s"""		1297184	2					
ANR	1297206	PrimaryExpression	"""%s"""		1297184	0					
ANR	1297207	Argument	instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ]		1297184	3					
ANR	1297208	ArrayIndexing	instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ]		1297184	0					
ANR	1297209	Identifier	instr_names		1297184	0					
ANR	1297210	BitAndExpression	bytes [ 0 ] & EBC_OPCODE_MASK		1297184	1		&			
ANR	1297211	ArrayIndexing	bytes [ 0 ]		1297184	0					
ANR	1297212	Identifier	bytes		1297184	0					
ANR	1297213	PrimaryExpression	0		1297184	1					
ANR	1297214	Identifier	EBC_OPCODE_MASK		1297184	1					
ANR	1297215	ExpressionStatement	"snprintf ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""%s, r%u"" , dedic_regs [ bytes [ 1 ] & 0x7 ] , ( bytes [ 1 ] >> 4 ) & 0x7 )"	576:1:14403:14515	1297184	2	True				
ANR	1297216	CallExpression	"snprintf ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""%s, r%u"" , dedic_regs [ bytes [ 1 ] & 0x7 ] , ( bytes [ 1 ] >> 4 ) & 0x7 )"		1297184	0					
ANR	1297217	Callee	snprintf		1297184	0					
ANR	1297218	Identifier	snprintf		1297184	0					
ANR	1297219	ArgumentList	cmd -> operands		1297184	1					
ANR	1297220	Argument	cmd -> operands		1297184	0					
ANR	1297221	PtrMemberAccess	cmd -> operands		1297184	0					
ANR	1297222	Identifier	cmd		1297184	0					
ANR	1297223	Identifier	operands		1297184	1					
ANR	1297224	Argument	EBC_OPERANDS_MAXLEN		1297184	1					
ANR	1297225	Identifier	EBC_OPERANDS_MAXLEN		1297184	0					
ANR	1297226	Argument	"""%s, r%u"""		1297184	2					
ANR	1297227	PrimaryExpression	"""%s, r%u"""		1297184	0					
ANR	1297228	Argument	dedic_regs [ bytes [ 1 ] & 0x7 ]		1297184	3					
ANR	1297229	ArrayIndexing	dedic_regs [ bytes [ 1 ] & 0x7 ]		1297184	0					
ANR	1297230	Identifier	dedic_regs		1297184	0					
ANR	1297231	BitAndExpression	bytes [ 1 ] & 0x7		1297184	1		&			
ANR	1297232	ArrayIndexing	bytes [ 1 ]		1297184	0					
ANR	1297233	Identifier	bytes		1297184	0					
ANR	1297234	PrimaryExpression	1		1297184	1					
ANR	1297235	PrimaryExpression	0x7		1297184	1					
ANR	1297236	Argument	( bytes [ 1 ] >> 4 ) & 0x7		1297184	4					
ANR	1297237	BitAndExpression	( bytes [ 1 ] >> 4 ) & 0x7		1297184	0		&			
ANR	1297238	ShiftExpression	bytes [ 1 ] >> 4		1297184	0		>>			
ANR	1297239	ArrayIndexing	bytes [ 1 ]		1297184	0					
ANR	1297240	Identifier	bytes		1297184	0					
ANR	1297241	PrimaryExpression	1		1297184	1					
ANR	1297242	PrimaryExpression	4		1297184	1					
ANR	1297243	PrimaryExpression	0x7		1297184	1					
ANR	1297244	ReturnStatement	return ret ;	579:1:14518:14528	1297184	3	True				
ANR	1297245	Identifier	ret		1297184	0					
ANR	1297246	ReturnType	static int		1297184	1					
ANR	1297247	Identifier	decode_loadsp		1297184	2					
ANR	1297248	ParameterList	"const ut8 * bytes , ebc_command_t * cmd"		1297184	3					
ANR	1297249	Parameter	const ut8 * bytes	572:25:14257:14272	1297184	0	True				
ANR	1297250	ParameterType	const ut8 *		1297184	0					
ANR	1297251	Identifier	bytes		1297184	1					
ANR	1297252	Parameter	ebc_command_t * cmd	572:43:14275:14292	1297184	1	True				
ANR	1297253	ParameterType	ebc_command_t *		1297184	0					
ANR	1297254	Identifier	cmd		1297184	1					
ANR	1297255	CFGEntryNode	ENTRY		1297184		True				
ANR	1297256	CFGExitNode	EXIT		1297184		True				
ANR	1297257	Symbol	ret		1297184						
ANR	1297258	Symbol	* * bytes		1297184						
ANR	1297259	Symbol	EBC_OPERANDS_MAXLEN		1297184						
ANR	1297260	Symbol	EBC_INSTR_MAXLEN		1297184						
ANR	1297261	Symbol	* instr_names		1297184						
ANR	1297262	Symbol	* bytes		1297184						
ANR	1297263	Symbol	dedic_regs		1297184						
ANR	1297264	Symbol	cmd -> operands		1297184						
ANR	1297265	Symbol	instr_names		1297184						
ANR	1297266	Symbol	bytes		1297184						
ANR	1297267	Symbol	* dedic_regs		1297184						
ANR	1297268	Symbol	* EBC_OPCODE_MASK		1297184						
ANR	1297269	Symbol	cmd		1297184						
ANR	1297270	Symbol	* cmd		1297184						
ANR	1297271	Symbol	cmd -> instr		1297184						
ANR	1297272	Symbol	EBC_OPCODE_MASK		1297184						
ANR	1297273	Function	decode_storesp	582:0:14533:14894							
ANR	1297274	FunctionDef	"decode_storesp (const ut8 * bytes , ebc_command_t * cmd)"		1297273	0					
ANR	1297275	CompoundStatement		582:64:14597:14894	1297273	0					
ANR	1297276	IdentifierDeclStatement	int ret = 2 ;	583:1:14600:14611	1297273	0	True				
ANR	1297277	IdentifierDecl	ret = 2		1297273	0					
ANR	1297278	IdentifierDeclType	int		1297273	0					
ANR	1297279	Identifier	ret		1297273	1					
ANR	1297280	AssignmentExpression	ret = 2		1297273	2		=			
ANR	1297281	Identifier	ret		1297273	0					
ANR	1297282	PrimaryExpression	2		1297273	1					
ANR	1297283	IdentifierDeclStatement	unsigned op2 = ( bytes [ 1 ] >> 4 ) & 0x07 ;	584:1:14614:14651	1297273	1	True				
ANR	1297284	IdentifierDecl	op2 = ( bytes [ 1 ] >> 4 ) & 0x07		1297273	0					
ANR	1297285	IdentifierDeclType	unsigned		1297273	0					
ANR	1297286	Identifier	op2		1297273	1					
ANR	1297287	AssignmentExpression	op2 = ( bytes [ 1 ] >> 4 ) & 0x07		1297273	2		=			
ANR	1297288	Identifier	op2		1297273	0					
ANR	1297289	BitAndExpression	( bytes [ 1 ] >> 4 ) & 0x07		1297273	1		&			
ANR	1297290	ShiftExpression	bytes [ 1 ] >> 4		1297273	0		>>			
ANR	1297291	ArrayIndexing	bytes [ 1 ]		1297273	0					
ANR	1297292	Identifier	bytes		1297273	0					
ANR	1297293	PrimaryExpression	1		1297273	1					
ANR	1297294	PrimaryExpression	4		1297273	1					
ANR	1297295	PrimaryExpression	0x07		1297273	1					
ANR	1297296	ExpressionStatement	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s"" , instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ] )"	585:1:14654:14742	1297273	2	True				
ANR	1297297	CallExpression	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s"" , instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ] )"		1297273	0					
ANR	1297298	Callee	snprintf		1297273	0					
ANR	1297299	Identifier	snprintf		1297273	0					
ANR	1297300	ArgumentList	cmd -> instr		1297273	1					
ANR	1297301	Argument	cmd -> instr		1297273	0					
ANR	1297302	PtrMemberAccess	cmd -> instr		1297273	0					
ANR	1297303	Identifier	cmd		1297273	0					
ANR	1297304	Identifier	instr		1297273	1					
ANR	1297305	Argument	EBC_INSTR_MAXLEN		1297273	1					
ANR	1297306	Identifier	EBC_INSTR_MAXLEN		1297273	0					
ANR	1297307	Argument	"""%s"""		1297273	2					
ANR	1297308	PrimaryExpression	"""%s"""		1297273	0					
ANR	1297309	Argument	instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ]		1297273	3					
ANR	1297310	ArrayIndexing	instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ]		1297273	0					
ANR	1297311	Identifier	instr_names		1297273	0					
ANR	1297312	BitAndExpression	bytes [ 0 ] & EBC_OPCODE_MASK		1297273	1		&			
ANR	1297313	ArrayIndexing	bytes [ 0 ]		1297273	0					
ANR	1297314	Identifier	bytes		1297273	0					
ANR	1297315	PrimaryExpression	0		1297273	1					
ANR	1297316	Identifier	EBC_OPCODE_MASK		1297273	1					
ANR	1297317	ExpressionStatement	"CHK_SNPRINTF ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""r%u, %s"" , bytes [ 1 ] & 0x7 , op2 < 2 ? dedic_regs [ op2 ] : ""RESERVED_DEDICATED_REG"" )"	587:1:14745:14879	1297273	3	True				
ANR	1297318	CallExpression	"CHK_SNPRINTF ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""r%u, %s"" , bytes [ 1 ] & 0x7 , op2 < 2 ? dedic_regs [ op2 ] : ""RESERVED_DEDICATED_REG"" )"		1297273	0					
ANR	1297319	Callee	CHK_SNPRINTF		1297273	0					
ANR	1297320	Identifier	CHK_SNPRINTF		1297273	0					
ANR	1297321	ArgumentList	cmd -> operands		1297273	1					
ANR	1297322	Argument	cmd -> operands		1297273	0					
ANR	1297323	PtrMemberAccess	cmd -> operands		1297273	0					
ANR	1297324	Identifier	cmd		1297273	0					
ANR	1297325	Identifier	operands		1297273	1					
ANR	1297326	Argument	EBC_OPERANDS_MAXLEN		1297273	1					
ANR	1297327	Identifier	EBC_OPERANDS_MAXLEN		1297273	0					
ANR	1297328	Argument	"""r%u, %s"""		1297273	2					
ANR	1297329	PrimaryExpression	"""r%u, %s"""		1297273	0					
ANR	1297330	Argument	bytes [ 1 ] & 0x7		1297273	3					
ANR	1297331	BitAndExpression	bytes [ 1 ] & 0x7		1297273	0		&			
ANR	1297332	ArrayIndexing	bytes [ 1 ]		1297273	0					
ANR	1297333	Identifier	bytes		1297273	0					
ANR	1297334	PrimaryExpression	1		1297273	1					
ANR	1297335	PrimaryExpression	0x7		1297273	1					
ANR	1297336	Argument	"op2 < 2 ? dedic_regs [ op2 ] : ""RESERVED_DEDICATED_REG"""		1297273	4					
ANR	1297337	ConditionalExpression	"op2 < 2 ? dedic_regs [ op2 ] : ""RESERVED_DEDICATED_REG"""		1297273	0					
ANR	1297338	Condition	op2 < 2		1297273	0					
ANR	1297339	RelationalExpression	op2 < 2		1297273	0		<			
ANR	1297340	Identifier	op2		1297273	0					
ANR	1297341	PrimaryExpression	2		1297273	1					
ANR	1297342	ArrayIndexing	dedic_regs [ op2 ]		1297273	1					
ANR	1297343	Identifier	dedic_regs		1297273	0					
ANR	1297344	Identifier	op2		1297273	1					
ANR	1297345	PrimaryExpression	"""RESERVED_DEDICATED_REG"""		1297273	2					
ANR	1297346	ReturnStatement	return ret ;	590:1:14882:14892	1297273	4	True				
ANR	1297347	Identifier	ret		1297273	0					
ANR	1297348	ReturnType	static int		1297273	1					
ANR	1297349	Identifier	decode_storesp		1297273	2					
ANR	1297350	ParameterList	"const ut8 * bytes , ebc_command_t * cmd"		1297273	3					
ANR	1297351	Parameter	const ut8 * bytes	582:26:14559:14574	1297273	0	True				
ANR	1297352	ParameterType	const ut8 *		1297273	0					
ANR	1297353	Identifier	bytes		1297273	1					
ANR	1297354	Parameter	ebc_command_t * cmd	582:44:14577:14594	1297273	1	True				
ANR	1297355	ParameterType	ebc_command_t *		1297273	0					
ANR	1297356	Identifier	cmd		1297273	1					
ANR	1297357	CFGEntryNode	ENTRY		1297273		True				
ANR	1297358	CFGExitNode	EXIT		1297273		True				
ANR	1297359	Symbol	ret		1297273						
ANR	1297360	Symbol	* * bytes		1297273						
ANR	1297361	Symbol	EBC_OPERANDS_MAXLEN		1297273						
ANR	1297362	Symbol	EBC_INSTR_MAXLEN		1297273						
ANR	1297363	Symbol	* bytes		1297273						
ANR	1297364	Symbol	* instr_names		1297273						
ANR	1297365	Symbol	op2		1297273						
ANR	1297366	Symbol	dedic_regs		1297273						
ANR	1297367	Symbol	cmd -> operands		1297273						
ANR	1297368	Symbol	instr_names		1297273						
ANR	1297369	Symbol	bytes		1297273						
ANR	1297370	Symbol	* dedic_regs		1297273						
ANR	1297371	Symbol	* EBC_OPCODE_MASK		1297273						
ANR	1297372	Symbol	cmd		1297273						
ANR	1297373	Symbol	* cmd		1297273						
ANR	1297374	Symbol	* op2		1297273						
ANR	1297375	Symbol	EBC_OPCODE_MASK		1297273						
ANR	1297376	Symbol	cmd -> instr		1297273						
ANR	1297377	Function	decode_push_pop	593:0:14897:15769							
ANR	1297378	FunctionDef	"decode_push_pop (const ut8 * bytes , ebc_command_t * cmd)"		1297377	0					
ANR	1297379	CompoundStatement		593:65:14962:15769	1297377	0					
ANR	1297380	IdentifierDeclStatement	int ret = 2 ;	594:1:14965:14976	1297377	0	True				
ANR	1297381	IdentifierDecl	ret = 2		1297377	0					
ANR	1297382	IdentifierDeclType	int		1297377	0					
ANR	1297383	Identifier	ret		1297377	1					
ANR	1297384	AssignmentExpression	ret = 2		1297377	2		=			
ANR	1297385	Identifier	ret		1297377	0					
ANR	1297386	PrimaryExpression	2		1297377	1					
ANR	1297387	IdentifierDeclStatement	unsigned op1 = bytes [ 1 ] & 0x07 ;	595:1:14979:15009	1297377	1	True				
ANR	1297388	IdentifierDecl	op1 = bytes [ 1 ] & 0x07		1297377	0					
ANR	1297389	IdentifierDeclType	unsigned		1297377	0					
ANR	1297390	Identifier	op1		1297377	1					
ANR	1297391	AssignmentExpression	op1 = bytes [ 1 ] & 0x07		1297377	2		=			
ANR	1297392	Identifier	op1		1297377	0					
ANR	1297393	BitAndExpression	bytes [ 1 ] & 0x07		1297377	1		&			
ANR	1297394	ArrayIndexing	bytes [ 1 ]		1297377	0					
ANR	1297395	Identifier	bytes		1297377	0					
ANR	1297396	PrimaryExpression	1		1297377	1					
ANR	1297397	PrimaryExpression	0x07		1297377	1					
ANR	1297398	IdentifierDeclStatement	char op1c [ 32 ] ;	596:1:15012:15025	1297377	2	True				
ANR	1297399	IdentifierDecl	op1c [ 32 ]		1297377	0					
ANR	1297400	IdentifierDeclType	char [ 32 ]		1297377	0					
ANR	1297401	Identifier	op1c		1297377	1					
ANR	1297402	PrimaryExpression	32		1297377	2					
ANR	1297403	ExpressionStatement	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s%u"" , instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ] , TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32 )"	598:1:15029:15156	1297377	3	True				
ANR	1297404	CallExpression	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s%u"" , instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ] , TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32 )"		1297377	0					
ANR	1297405	Callee	snprintf		1297377	0					
ANR	1297406	Identifier	snprintf		1297377	0					
ANR	1297407	ArgumentList	cmd -> instr		1297377	1					
ANR	1297408	Argument	cmd -> instr		1297377	0					
ANR	1297409	PtrMemberAccess	cmd -> instr		1297377	0					
ANR	1297410	Identifier	cmd		1297377	0					
ANR	1297411	Identifier	instr		1297377	1					
ANR	1297412	Argument	EBC_INSTR_MAXLEN		1297377	1					
ANR	1297413	Identifier	EBC_INSTR_MAXLEN		1297377	0					
ANR	1297414	Argument	"""%s%u"""		1297377	2					
ANR	1297415	PrimaryExpression	"""%s%u"""		1297377	0					
ANR	1297416	Argument	instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ]		1297377	3					
ANR	1297417	ArrayIndexing	instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ]		1297377	0					
ANR	1297418	Identifier	instr_names		1297377	0					
ANR	1297419	BitAndExpression	bytes [ 0 ] & EBC_OPCODE_MASK		1297377	1		&			
ANR	1297420	ArrayIndexing	bytes [ 0 ]		1297377	0					
ANR	1297421	Identifier	bytes		1297377	0					
ANR	1297422	PrimaryExpression	0		1297377	1					
ANR	1297423	Identifier	EBC_OPCODE_MASK		1297377	1					
ANR	1297424	Argument	"TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32"		1297377	4					
ANR	1297425	ConditionalExpression	"TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32"		1297377	0					
ANR	1297426	Condition	"TEST_BIT ( bytes [ 0 ] , 6 )"		1297377	0					
ANR	1297427	CallExpression	"TEST_BIT ( bytes [ 0 ] , 6 )"		1297377	0					
ANR	1297428	Callee	TEST_BIT		1297377	0					
ANR	1297429	Identifier	TEST_BIT		1297377	0					
ANR	1297430	ArgumentList	bytes [ 0 ]		1297377	1					
ANR	1297431	Argument	bytes [ 0 ]		1297377	0					
ANR	1297432	ArrayIndexing	bytes [ 0 ]		1297377	0					
ANR	1297433	Identifier	bytes		1297377	0					
ANR	1297434	PrimaryExpression	0		1297377	1					
ANR	1297435	Argument	6		1297377	1					
ANR	1297436	PrimaryExpression	6		1297377	0					
ANR	1297437	PrimaryExpression	64		1297377	1					
ANR	1297438	PrimaryExpression	32		1297377	2					
ANR	1297439	ExpressionStatement	"snprintf ( op1c , sizeof ( op1c ) , ""%sr%d"" , TEST_BIT ( bytes [ 1 ] , 3 ) ? ""@"" : """" , op1 )"	602:1:15160:15240	1297377	4	True				
ANR	1297440	CallExpression	"snprintf ( op1c , sizeof ( op1c ) , ""%sr%d"" , TEST_BIT ( bytes [ 1 ] , 3 ) ? ""@"" : """" , op1 )"		1297377	0					
ANR	1297441	Callee	snprintf		1297377	0					
ANR	1297442	Identifier	snprintf		1297377	0					
ANR	1297443	ArgumentList	op1c		1297377	1					
ANR	1297444	Argument	op1c		1297377	0					
ANR	1297445	Identifier	op1c		1297377	0					
ANR	1297446	Argument	sizeof ( op1c )		1297377	1					
ANR	1297447	SizeofExpression	sizeof ( op1c )		1297377	0					
ANR	1297448	Sizeof	sizeof		1297377	0					
ANR	1297449	SizeofOperand	op1c		1297377	1					
ANR	1297450	Argument	"""%sr%d"""		1297377	2					
ANR	1297451	PrimaryExpression	"""%sr%d"""		1297377	0					
ANR	1297452	Argument	"TEST_BIT ( bytes [ 1 ] , 3 ) ? ""@"" : """""		1297377	3					
ANR	1297453	ConditionalExpression	"TEST_BIT ( bytes [ 1 ] , 3 ) ? ""@"" : """""		1297377	0					
ANR	1297454	Condition	"TEST_BIT ( bytes [ 1 ] , 3 )"		1297377	0					
ANR	1297455	CallExpression	"TEST_BIT ( bytes [ 1 ] , 3 )"		1297377	0					
ANR	1297456	Callee	TEST_BIT		1297377	0					
ANR	1297457	Identifier	TEST_BIT		1297377	0					
ANR	1297458	ArgumentList	bytes [ 1 ]		1297377	1					
ANR	1297459	Argument	bytes [ 1 ]		1297377	0					
ANR	1297460	ArrayIndexing	bytes [ 1 ]		1297377	0					
ANR	1297461	Identifier	bytes		1297377	0					
ANR	1297462	PrimaryExpression	1		1297377	1					
ANR	1297463	Argument	3		1297377	1					
ANR	1297464	PrimaryExpression	3		1297377	0					
ANR	1297465	PrimaryExpression	"""@"""		1297377	1					
ANR	1297466	PrimaryExpression	""""""		1297377	2					
ANR	1297467	Argument	op1		1297377	4					
ANR	1297468	Identifier	op1		1297377	0					
ANR	1297469	IfStatement	"if ( TEST_BIT ( bytes [ 0 ] , 7 ) )"		1297377	5					
ANR	1297470	Condition	"TEST_BIT ( bytes [ 0 ] , 7 )"	605:5:15248:15269	1297377	0	True				
ANR	1297471	CallExpression	"TEST_BIT ( bytes [ 0 ] , 7 )"		1297377	0					
ANR	1297472	Callee	TEST_BIT		1297377	0					
ANR	1297473	Identifier	TEST_BIT		1297377	0					
ANR	1297474	ArgumentList	bytes [ 0 ]		1297377	1					
ANR	1297475	Argument	bytes [ 0 ]		1297377	0					
ANR	1297476	ArrayIndexing	bytes [ 0 ]		1297377	0					
ANR	1297477	Identifier	bytes		1297377	0					
ANR	1297478	PrimaryExpression	0		1297377	1					
ANR	1297479	Argument	7		1297377	1					
ANR	1297480	PrimaryExpression	7		1297377	0					
ANR	1297481	CompoundStatement		13:29:309:309	1297377	1					
ANR	1297482	ExpressionStatement	ret += 2	606:2:15276:15284	1297377	0	True				
ANR	1297483	AssignmentExpression	ret += 2		1297377	0		+=			
ANR	1297484	Identifier	ret		1297377	0					
ANR	1297485	PrimaryExpression	2		1297377	1					
ANR	1297486	IfStatement	"if ( TEST_BIT ( bytes [ 1 ] , 3 ) )"		1297377	1					
ANR	1297487	Condition	"TEST_BIT ( bytes [ 1 ] , 3 )"	607:6:15292:15313	1297377	0	True				
ANR	1297488	CallExpression	"TEST_BIT ( bytes [ 1 ] , 3 )"		1297377	0					
ANR	1297489	Callee	TEST_BIT		1297377	0					
ANR	1297490	Identifier	TEST_BIT		1297377	0					
ANR	1297491	ArgumentList	bytes [ 1 ]		1297377	1					
ANR	1297492	Argument	bytes [ 1 ]		1297377	0					
ANR	1297493	ArrayIndexing	bytes [ 1 ]		1297377	0					
ANR	1297494	Identifier	bytes		1297377	0					
ANR	1297495	PrimaryExpression	1		1297377	1					
ANR	1297496	Argument	3		1297377	1					
ANR	1297497	PrimaryExpression	3		1297377	0					
ANR	1297498	CompoundStatement		17:3:378:387	1297377	1					
ANR	1297499	IdentifierDeclStatement	ebc_index_t idx ;	608:3:15321:15336	1297377	0	True				
ANR	1297500	IdentifierDecl	idx		1297377	0					
ANR	1297501	IdentifierDeclType	ebc_index_t		1297377	0					
ANR	1297502	Identifier	idx		1297377	1					
ANR	1297503	IdentifierDeclStatement	char sign ;	609:3:15341:15350	1297377	1	True				
ANR	1297504	IdentifierDecl	sign		1297377	0					
ANR	1297505	IdentifierDeclType	char		1297377	0					
ANR	1297506	Identifier	sign		1297377	1					
ANR	1297507	ExpressionStatement	"decode_index16 ( bytes + 2 , & idx )"	610:3:15355:15386	1297377	2	True				
ANR	1297508	CallExpression	"decode_index16 ( bytes + 2 , & idx )"		1297377	0					
ANR	1297509	Callee	decode_index16		1297377	0					
ANR	1297510	Identifier	decode_index16		1297377	0					
ANR	1297511	ArgumentList	bytes + 2		1297377	1					
ANR	1297512	Argument	bytes + 2		1297377	0					
ANR	1297513	AdditiveExpression	bytes + 2		1297377	0		+			
ANR	1297514	Identifier	bytes		1297377	0					
ANR	1297515	PrimaryExpression	2		1297377	1					
ANR	1297516	Argument	& idx		1297377	1					
ANR	1297517	UnaryOperationExpression	& idx		1297377	0					
ANR	1297518	UnaryOperator	&		1297377	0					
ANR	1297519	Identifier	idx		1297377	1					
ANR	1297520	ExpressionStatement	sign = idx . sign ? '+' : '-'	612:3:15392:15419	1297377	3	True				
ANR	1297521	AssignmentExpression	sign = idx . sign ? '+' : '-'		1297377	0		=			
ANR	1297522	Identifier	sign		1297377	0					
ANR	1297523	ConditionalExpression	idx . sign ? '+' : '-'		1297377	1					
ANR	1297524	Condition	idx . sign		1297377	0					
ANR	1297525	MemberAccess	idx . sign		1297377	0					
ANR	1297526	Identifier	idx		1297377	0					
ANR	1297527	Identifier	sign		1297377	1					
ANR	1297528	PrimaryExpression	'+'		1297377	1					
ANR	1297529	PrimaryExpression	'-'		1297377	2					
ANR	1297530	ExpressionStatement	"CHK_SNPRINTF ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""%s (%c%d, %c%d)"" , op1c , sign , idx . n , sign , idx . c )"	614:3:15425:15529	1297377	4	True				
ANR	1297531	CallExpression	"CHK_SNPRINTF ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""%s (%c%d, %c%d)"" , op1c , sign , idx . n , sign , idx . c )"		1297377	0					
ANR	1297532	Callee	CHK_SNPRINTF		1297377	0					
ANR	1297533	Identifier	CHK_SNPRINTF		1297377	0					
ANR	1297534	ArgumentList	cmd -> operands		1297377	1					
ANR	1297535	Argument	cmd -> operands		1297377	0					
ANR	1297536	PtrMemberAccess	cmd -> operands		1297377	0					
ANR	1297537	Identifier	cmd		1297377	0					
ANR	1297538	Identifier	operands		1297377	1					
ANR	1297539	Argument	EBC_OPERANDS_MAXLEN		1297377	1					
ANR	1297540	Identifier	EBC_OPERANDS_MAXLEN		1297377	0					
ANR	1297541	Argument	"""%s (%c%d, %c%d)"""		1297377	2					
ANR	1297542	PrimaryExpression	"""%s (%c%d, %c%d)"""		1297377	0					
ANR	1297543	Argument	op1c		1297377	3					
ANR	1297544	Identifier	op1c		1297377	0					
ANR	1297545	Argument	sign		1297377	4					
ANR	1297546	Identifier	sign		1297377	0					
ANR	1297547	Argument	idx . n		1297377	5					
ANR	1297548	MemberAccess	idx . n		1297377	0					
ANR	1297549	Identifier	idx		1297377	0					
ANR	1297550	Identifier	n		1297377	1					
ANR	1297551	Argument	sign		1297377	6					
ANR	1297552	Identifier	sign		1297377	0					
ANR	1297553	Argument	idx . c		1297377	7					
ANR	1297554	MemberAccess	idx . c		1297377	0					
ANR	1297555	Identifier	idx		1297377	0					
ANR	1297556	Identifier	c		1297377	1					
ANR	1297557	ElseStatement	else		1297377	0					
ANR	1297558	CompoundStatement		25:3:582:615	1297377	0					
ANR	1297559	IdentifierDeclStatement	ut16 immed = * ( ut16 * ) ( bytes + 2 ) ;	617:3:15545:15578	1297377	0	True				
ANR	1297560	IdentifierDecl	immed = * ( ut16 * ) ( bytes + 2 )		1297377	0					
ANR	1297561	IdentifierDeclType	ut16		1297377	0					
ANR	1297562	Identifier	immed		1297377	1					
ANR	1297563	AssignmentExpression	immed = * ( ut16 * ) ( bytes + 2 )		1297377	2		=			
ANR	1297564	Identifier	immed		1297377	0					
ANR	1297565	UnaryOperationExpression	* ( ut16 * ) ( bytes + 2 )		1297377	1					
ANR	1297566	UnaryOperator	*		1297377	0					
ANR	1297567	CastExpression	( ut16 * ) ( bytes + 2 )		1297377	1					
ANR	1297568	CastTarget	ut16 *		1297377	0					
ANR	1297569	AdditiveExpression	bytes + 2		1297377	1		+			
ANR	1297570	Identifier	bytes		1297377	0					
ANR	1297571	PrimaryExpression	2		1297377	1					
ANR	1297572	ExpressionStatement	"CHK_SNPRINTF ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""%s %u"" , op1c , immed )"	619:3:15584:15659	1297377	1	True				
ANR	1297573	CallExpression	"CHK_SNPRINTF ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""%s %u"" , op1c , immed )"		1297377	0					
ANR	1297574	Callee	CHK_SNPRINTF		1297377	0					
ANR	1297575	Identifier	CHK_SNPRINTF		1297377	0					
ANR	1297576	ArgumentList	cmd -> operands		1297377	1					
ANR	1297577	Argument	cmd -> operands		1297377	0					
ANR	1297578	PtrMemberAccess	cmd -> operands		1297377	0					
ANR	1297579	Identifier	cmd		1297377	0					
ANR	1297580	Identifier	operands		1297377	1					
ANR	1297581	Argument	EBC_OPERANDS_MAXLEN		1297377	1					
ANR	1297582	Identifier	EBC_OPERANDS_MAXLEN		1297377	0					
ANR	1297583	Argument	"""%s %u"""		1297377	2					
ANR	1297584	PrimaryExpression	"""%s %u"""		1297377	0					
ANR	1297585	Argument	op1c		1297377	3					
ANR	1297586	Identifier	op1c		1297377	0					
ANR	1297587	Argument	immed		1297377	4					
ANR	1297588	Identifier	immed		1297377	0					
ANR	1297589	ElseStatement	else		1297377	0					
ANR	1297590	CompoundStatement		30:11:713:713	1297377	0					
ANR	1297591	ExpressionStatement	"CHK_SNPRINTF ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""%s"" , op1c )"	623:8:15686:15747	1297377	0	True				
ANR	1297592	CallExpression	"CHK_SNPRINTF ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""%s"" , op1c )"		1297377	0					
ANR	1297593	Callee	CHK_SNPRINTF		1297377	0					
ANR	1297594	Identifier	CHK_SNPRINTF		1297377	0					
ANR	1297595	ArgumentList	cmd -> operands		1297377	1					
ANR	1297596	Argument	cmd -> operands		1297377	0					
ANR	1297597	PtrMemberAccess	cmd -> operands		1297377	0					
ANR	1297598	Identifier	cmd		1297377	0					
ANR	1297599	Identifier	operands		1297377	1					
ANR	1297600	Argument	EBC_OPERANDS_MAXLEN		1297377	1					
ANR	1297601	Identifier	EBC_OPERANDS_MAXLEN		1297377	0					
ANR	1297602	Argument	"""%s"""		1297377	2					
ANR	1297603	PrimaryExpression	"""%s"""		1297377	0					
ANR	1297604	Argument	op1c		1297377	3					
ANR	1297605	Identifier	op1c		1297377	0					
ANR	1297606	ReturnStatement	return ret ;	626:1:15757:15767	1297377	6	True				
ANR	1297607	Identifier	ret		1297377	0					
ANR	1297608	ReturnType	static int		1297377	1					
ANR	1297609	Identifier	decode_push_pop		1297377	2					
ANR	1297610	ParameterList	"const ut8 * bytes , ebc_command_t * cmd"		1297377	3					
ANR	1297611	Parameter	const ut8 * bytes	593:27:14924:14939	1297377	0	True				
ANR	1297612	ParameterType	const ut8 *		1297377	0					
ANR	1297613	Identifier	bytes		1297377	1					
ANR	1297614	Parameter	ebc_command_t * cmd	593:45:14942:14959	1297377	1	True				
ANR	1297615	ParameterType	ebc_command_t *		1297377	0					
ANR	1297616	Identifier	cmd		1297377	1					
ANR	1297617	CFGEntryNode	ENTRY		1297377		True				
ANR	1297618	CFGExitNode	EXIT		1297377		True				
ANR	1297619	Symbol	EBC_OPERANDS_MAXLEN		1297377						
ANR	1297620	Symbol	op1c		1297377						
ANR	1297621	Symbol	EBC_INSTR_MAXLEN		1297377						
ANR	1297622	Symbol	sign		1297377						
ANR	1297623	Symbol	* bytes		1297377						
ANR	1297624	Symbol	* instr_names		1297377						
ANR	1297625	Symbol	immed		1297377						
ANR	1297626	Symbol	cmd -> operands		1297377						
ANR	1297627	Symbol	* ( ut16 * ) ( bytes + 2 )		1297377						
ANR	1297628	Symbol	idx . sign		1297377						
ANR	1297629	Symbol	* EBC_OPCODE_MASK		1297377						
ANR	1297630	Symbol	* cmd		1297377						
ANR	1297631	Symbol	cmd -> instr		1297377						
ANR	1297632	Symbol	TEST_BIT		1297377						
ANR	1297633	Symbol	ret		1297377						
ANR	1297634	Symbol	* * bytes		1297377						
ANR	1297635	Symbol	& idx		1297377						
ANR	1297636	Symbol	idx . n		1297377						
ANR	1297637	Symbol	op1		1297377						
ANR	1297638	Symbol	idx . c		1297377						
ANR	1297639	Symbol	instr_names		1297377						
ANR	1297640	Symbol	bytes		1297377						
ANR	1297641	Symbol	cmd		1297377						
ANR	1297642	Symbol	idx		1297377						
ANR	1297643	Symbol	EBC_OPCODE_MASK		1297377						
ANR	1297644	Function	decode_cmpi	629:0:15772:16864							
ANR	1297645	FunctionDef	"decode_cmpi (const ut8 * bytes , ebc_command_t * cmd)"		1297644	0					
ANR	1297646	CompoundStatement		629:61:15833:16864	1297644	0					
ANR	1297647	IdentifierDeclStatement	int ret = 2 ;	630:1:15836:15847	1297644	0	True				
ANR	1297648	IdentifierDecl	ret = 2		1297644	0					
ANR	1297649	IdentifierDeclType	int		1297644	0					
ANR	1297650	Identifier	ret		1297644	1					
ANR	1297651	AssignmentExpression	ret = 2		1297644	2		=			
ANR	1297652	Identifier	ret		1297644	0					
ANR	1297653	PrimaryExpression	2		1297644	1					
ANR	1297654	IdentifierDeclStatement	unsigned op1 = bytes [ 1 ] & 0x07 ;	631:1:15850:15880	1297644	1	True				
ANR	1297655	IdentifierDecl	op1 = bytes [ 1 ] & 0x07		1297644	0					
ANR	1297656	IdentifierDeclType	unsigned		1297644	0					
ANR	1297657	Identifier	op1		1297644	1					
ANR	1297658	AssignmentExpression	op1 = bytes [ 1 ] & 0x07		1297644	2		=			
ANR	1297659	Identifier	op1		1297644	0					
ANR	1297660	BitAndExpression	bytes [ 1 ] & 0x07		1297644	1		&			
ANR	1297661	ArrayIndexing	bytes [ 1 ]		1297644	0					
ANR	1297662	Identifier	bytes		1297644	0					
ANR	1297663	PrimaryExpression	1		1297644	1					
ANR	1297664	PrimaryExpression	0x07		1297644	1					
ANR	1297665	IdentifierDeclStatement	char op1c [ 32 ] ;	632:1:15883:15896	1297644	2	True				
ANR	1297666	IdentifierDecl	op1c [ 32 ]		1297644	0					
ANR	1297667	IdentifierDeclType	char [ 32 ]		1297644	0					
ANR	1297668	Identifier	op1c		1297644	1					
ANR	1297669	PrimaryExpression	32		1297644	2					
ANR	1297670	IdentifierDeclStatement	char indx [ 32 ] = { 0 } ;	633:1:15899:15918	1297644	3	True				
ANR	1297671	IdentifierDecl	indx [ 32 ] = { 0 }		1297644	0					
ANR	1297672	IdentifierDeclType	char [ 32 ]		1297644	0					
ANR	1297673	Identifier	indx		1297644	1					
ANR	1297674	PrimaryExpression	32		1297644	2					
ANR	1297675	AssignmentExpression	indx [ 32 ] = { 0 }		1297644	3		=			
ANR	1297676	Identifier	indx		1297644	0					
ANR	1297677	InitializerList	0		1297644	1					
ANR	1297678	PrimaryExpression	0		1297644	0					
ANR	1297679	IdentifierDeclStatement	char immed [ 32 ] = { 0 } ;	634:1:15921:15941	1297644	4	True				
ANR	1297680	IdentifierDecl	immed [ 32 ] = { 0 }		1297644	0					
ANR	1297681	IdentifierDeclType	char [ 32 ]		1297644	0					
ANR	1297682	Identifier	immed		1297644	1					
ANR	1297683	PrimaryExpression	32		1297644	2					
ANR	1297684	AssignmentExpression	immed [ 32 ] = { 0 }		1297644	3		=			
ANR	1297685	Identifier	immed		1297644	0					
ANR	1297686	InitializerList	0		1297644	1					
ANR	1297687	PrimaryExpression	0		1297644	0					
ANR	1297688	IdentifierDeclStatement	"char * suff [ ] = { ""eq"" , ""lte"" , ""gte"" , ""ulte"" , ""ugte"" } ;"	635:1:15944:15995	1297644	5	True				
ANR	1297689	IdentifierDecl	"* suff [ ] = { ""eq"" , ""lte"" , ""gte"" , ""ulte"" , ""ugte"" }"		1297644	0					
ANR	1297690	IdentifierDeclType	char * [ ]		1297644	0					
ANR	1297691	Identifier	suff		1297644	1					
ANR	1297692	AssignmentExpression	"* suff [ ] = { ""eq"" , ""lte"" , ""gte"" , ""ulte"" , ""ugte"" }"		1297644	2		=			
ANR	1297693	Identifier	suff		1297644	0					
ANR	1297694	InitializerList	"""eq"""		1297644	1					
ANR	1297695	PrimaryExpression	"""eq"""		1297644	0					
ANR	1297696	PrimaryExpression	"""lte"""		1297644	1					
ANR	1297697	PrimaryExpression	"""gte"""		1297644	2					
ANR	1297698	PrimaryExpression	"""ulte"""		1297644	3					
ANR	1297699	PrimaryExpression	"""ugte"""		1297644	4					
ANR	1297700	ExpressionStatement	"snprintf ( op1c , sizeof ( op1c ) - 1 , ""%sr%u"" , TEST_BIT ( bytes [ 1 ] , 3 ) ? ""@"" : """" , op1 )"	637:1:15999:16081	1297644	6	True				
ANR	1297701	CallExpression	"snprintf ( op1c , sizeof ( op1c ) - 1 , ""%sr%u"" , TEST_BIT ( bytes [ 1 ] , 3 ) ? ""@"" : """" , op1 )"		1297644	0					
ANR	1297702	Callee	snprintf		1297644	0					
ANR	1297703	Identifier	snprintf		1297644	0					
ANR	1297704	ArgumentList	op1c		1297644	1					
ANR	1297705	Argument	op1c		1297644	0					
ANR	1297706	Identifier	op1c		1297644	0					
ANR	1297707	Argument	sizeof ( op1c ) - 1		1297644	1					
ANR	1297708	AdditiveExpression	sizeof ( op1c ) - 1		1297644	0		-			
ANR	1297709	SizeofExpression	sizeof ( op1c )		1297644	0					
ANR	1297710	Sizeof	sizeof		1297644	0					
ANR	1297711	SizeofOperand	op1c		1297644	1					
ANR	1297712	PrimaryExpression	1		1297644	1					
ANR	1297713	Argument	"""%sr%u"""		1297644	2					
ANR	1297714	PrimaryExpression	"""%sr%u"""		1297644	0					
ANR	1297715	Argument	"TEST_BIT ( bytes [ 1 ] , 3 ) ? ""@"" : """""		1297644	3					
ANR	1297716	ConditionalExpression	"TEST_BIT ( bytes [ 1 ] , 3 ) ? ""@"" : """""		1297644	0					
ANR	1297717	Condition	"TEST_BIT ( bytes [ 1 ] , 3 )"		1297644	0					
ANR	1297718	CallExpression	"TEST_BIT ( bytes [ 1 ] , 3 )"		1297644	0					
ANR	1297719	Callee	TEST_BIT		1297644	0					
ANR	1297720	Identifier	TEST_BIT		1297644	0					
ANR	1297721	ArgumentList	bytes [ 1 ]		1297644	1					
ANR	1297722	Argument	bytes [ 1 ]		1297644	0					
ANR	1297723	ArrayIndexing	bytes [ 1 ]		1297644	0					
ANR	1297724	Identifier	bytes		1297644	0					
ANR	1297725	PrimaryExpression	1		1297644	1					
ANR	1297726	Argument	3		1297644	1					
ANR	1297727	PrimaryExpression	3		1297644	0					
ANR	1297728	PrimaryExpression	"""@"""		1297644	1					
ANR	1297729	PrimaryExpression	""""""		1297644	2					
ANR	1297730	Argument	op1		1297644	4					
ANR	1297731	Identifier	op1		1297644	0					
ANR	1297732	ExpressionStatement	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s%u%c%s"" , instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ] , TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32 , TEST_BIT ( bytes [ 0 ] , 7 ) ? 'd' : 'w' , suff [ ( bytes [ 0 ] & EBC_OPCODE_MASK ) - EBC_CMPIEQ ] )"	640:1:16085:16310	1297644	7	True				
ANR	1297733	CallExpression	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s%u%c%s"" , instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ] , TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32 , TEST_BIT ( bytes [ 0 ] , 7 ) ? 'd' : 'w' , suff [ ( bytes [ 0 ] & EBC_OPCODE_MASK ) - EBC_CMPIEQ ] )"		1297644	0					
ANR	1297734	Callee	snprintf		1297644	0					
ANR	1297735	Identifier	snprintf		1297644	0					
ANR	1297736	ArgumentList	cmd -> instr		1297644	1					
ANR	1297737	Argument	cmd -> instr		1297644	0					
ANR	1297738	PtrMemberAccess	cmd -> instr		1297644	0					
ANR	1297739	Identifier	cmd		1297644	0					
ANR	1297740	Identifier	instr		1297644	1					
ANR	1297741	Argument	EBC_INSTR_MAXLEN		1297644	1					
ANR	1297742	Identifier	EBC_INSTR_MAXLEN		1297644	0					
ANR	1297743	Argument	"""%s%u%c%s"""		1297644	2					
ANR	1297744	PrimaryExpression	"""%s%u%c%s"""		1297644	0					
ANR	1297745	Argument	instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ]		1297644	3					
ANR	1297746	ArrayIndexing	instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ]		1297644	0					
ANR	1297747	Identifier	instr_names		1297644	0					
ANR	1297748	BitAndExpression	bytes [ 0 ] & EBC_OPCODE_MASK		1297644	1		&			
ANR	1297749	ArrayIndexing	bytes [ 0 ]		1297644	0					
ANR	1297750	Identifier	bytes		1297644	0					
ANR	1297751	PrimaryExpression	0		1297644	1					
ANR	1297752	Identifier	EBC_OPCODE_MASK		1297644	1					
ANR	1297753	Argument	"TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32"		1297644	4					
ANR	1297754	ConditionalExpression	"TEST_BIT ( bytes [ 0 ] , 6 ) ? 64 : 32"		1297644	0					
ANR	1297755	Condition	"TEST_BIT ( bytes [ 0 ] , 6 )"		1297644	0					
ANR	1297756	CallExpression	"TEST_BIT ( bytes [ 0 ] , 6 )"		1297644	0					
ANR	1297757	Callee	TEST_BIT		1297644	0					
ANR	1297758	Identifier	TEST_BIT		1297644	0					
ANR	1297759	ArgumentList	bytes [ 0 ]		1297644	1					
ANR	1297760	Argument	bytes [ 0 ]		1297644	0					
ANR	1297761	ArrayIndexing	bytes [ 0 ]		1297644	0					
ANR	1297762	Identifier	bytes		1297644	0					
ANR	1297763	PrimaryExpression	0		1297644	1					
ANR	1297764	Argument	6		1297644	1					
ANR	1297765	PrimaryExpression	6		1297644	0					
ANR	1297766	PrimaryExpression	64		1297644	1					
ANR	1297767	PrimaryExpression	32		1297644	2					
ANR	1297768	Argument	"TEST_BIT ( bytes [ 0 ] , 7 ) ? 'd' : 'w'"		1297644	5					
ANR	1297769	ConditionalExpression	"TEST_BIT ( bytes [ 0 ] , 7 ) ? 'd' : 'w'"		1297644	0					
ANR	1297770	Condition	"TEST_BIT ( bytes [ 0 ] , 7 )"		1297644	0					
ANR	1297771	CallExpression	"TEST_BIT ( bytes [ 0 ] , 7 )"		1297644	0					
ANR	1297772	Callee	TEST_BIT		1297644	0					
ANR	1297773	Identifier	TEST_BIT		1297644	0					
ANR	1297774	ArgumentList	bytes [ 0 ]		1297644	1					
ANR	1297775	Argument	bytes [ 0 ]		1297644	0					
ANR	1297776	ArrayIndexing	bytes [ 0 ]		1297644	0					
ANR	1297777	Identifier	bytes		1297644	0					
ANR	1297778	PrimaryExpression	0		1297644	1					
ANR	1297779	Argument	7		1297644	1					
ANR	1297780	PrimaryExpression	7		1297644	0					
ANR	1297781	PrimaryExpression	'd'		1297644	1					
ANR	1297782	PrimaryExpression	'w'		1297644	2					
ANR	1297783	Argument	suff [ ( bytes [ 0 ] & EBC_OPCODE_MASK ) - EBC_CMPIEQ ]		1297644	6					
ANR	1297784	ArrayIndexing	suff [ ( bytes [ 0 ] & EBC_OPCODE_MASK ) - EBC_CMPIEQ ]		1297644	0					
ANR	1297785	Identifier	suff		1297644	0					
ANR	1297786	AdditiveExpression	( bytes [ 0 ] & EBC_OPCODE_MASK ) - EBC_CMPIEQ		1297644	1		-			
ANR	1297787	BitAndExpression	bytes [ 0 ] & EBC_OPCODE_MASK		1297644	0		&			
ANR	1297788	ArrayIndexing	bytes [ 0 ]		1297644	0					
ANR	1297789	Identifier	bytes		1297644	0					
ANR	1297790	PrimaryExpression	0		1297644	1					
ANR	1297791	Identifier	EBC_OPCODE_MASK		1297644	1					
ANR	1297792	Identifier	EBC_CMPIEQ		1297644	1					
ANR	1297793	IfStatement	"if ( TEST_BIT ( bytes [ 1 ] , 4 ) )"		1297644	8					
ANR	1297794	Condition	"TEST_BIT ( bytes [ 1 ] , 4 )"	647:5:16318:16339	1297644	0	True				
ANR	1297795	CallExpression	"TEST_BIT ( bytes [ 1 ] , 4 )"		1297644	0					
ANR	1297796	Callee	TEST_BIT		1297644	0					
ANR	1297797	Identifier	TEST_BIT		1297644	0					
ANR	1297798	ArgumentList	bytes [ 1 ]		1297644	1					
ANR	1297799	Argument	bytes [ 1 ]		1297644	0					
ANR	1297800	ArrayIndexing	bytes [ 1 ]		1297644	0					
ANR	1297801	Identifier	bytes		1297644	0					
ANR	1297802	PrimaryExpression	1		1297644	1					
ANR	1297803	Argument	4		1297644	1					
ANR	1297804	PrimaryExpression	4		1297644	0					
ANR	1297805	CompoundStatement		21:2:525:540	1297644	1					
ANR	1297806	IdentifierDeclStatement	char sign ;	648:2:16346:16355	1297644	0	True				
ANR	1297807	IdentifierDecl	sign		1297644	0					
ANR	1297808	IdentifierDeclType	char		1297644	0					
ANR	1297809	Identifier	sign		1297644	1					
ANR	1297810	IdentifierDeclStatement	ebc_index_t idx ;	649:2:16359:16374	1297644	1	True				
ANR	1297811	IdentifierDecl	idx		1297644	0					
ANR	1297812	IdentifierDeclType	ebc_index_t		1297644	0					
ANR	1297813	Identifier	idx		1297644	1					
ANR	1297814	ExpressionStatement	"decode_index16 ( bytes + 2 , & idx )"	651:2:16379:16410	1297644	2	True				
ANR	1297815	CallExpression	"decode_index16 ( bytes + 2 , & idx )"		1297644	0					
ANR	1297816	Callee	decode_index16		1297644	0					
ANR	1297817	Identifier	decode_index16		1297644	0					
ANR	1297818	ArgumentList	bytes + 2		1297644	1					
ANR	1297819	Argument	bytes + 2		1297644	0					
ANR	1297820	AdditiveExpression	bytes + 2		1297644	0		+			
ANR	1297821	Identifier	bytes		1297644	0					
ANR	1297822	PrimaryExpression	2		1297644	1					
ANR	1297823	Argument	& idx		1297644	1					
ANR	1297824	UnaryOperationExpression	& idx		1297644	0					
ANR	1297825	UnaryOperator	&		1297644	0					
ANR	1297826	Identifier	idx		1297644	1					
ANR	1297827	ExpressionStatement	sign = idx . sign ? '+' : '-'	653:2:16415:16442	1297644	3	True				
ANR	1297828	AssignmentExpression	sign = idx . sign ? '+' : '-'		1297644	0		=			
ANR	1297829	Identifier	sign		1297644	0					
ANR	1297830	ConditionalExpression	idx . sign ? '+' : '-'		1297644	1					
ANR	1297831	Condition	idx . sign		1297644	0					
ANR	1297832	MemberAccess	idx . sign		1297644	0					
ANR	1297833	Identifier	idx		1297644	0					
ANR	1297834	Identifier	sign		1297644	1					
ANR	1297835	PrimaryExpression	'+'		1297644	1					
ANR	1297836	PrimaryExpression	'-'		1297644	2					
ANR	1297837	ExpressionStatement	"snprintf ( indx , sizeof ( indx ) , "" (%c%u, %c%u)"" , sign , idx . n , sign , idx . c )"	655:2:16447:16519	1297644	4	True				
ANR	1297838	CallExpression	"snprintf ( indx , sizeof ( indx ) , "" (%c%u, %c%u)"" , sign , idx . n , sign , idx . c )"		1297644	0					
ANR	1297839	Callee	snprintf		1297644	0					
ANR	1297840	Identifier	snprintf		1297644	0					
ANR	1297841	ArgumentList	indx		1297644	1					
ANR	1297842	Argument	indx		1297644	0					
ANR	1297843	Identifier	indx		1297644	0					
ANR	1297844	Argument	sizeof ( indx )		1297644	1					
ANR	1297845	SizeofExpression	sizeof ( indx )		1297644	0					
ANR	1297846	Sizeof	sizeof		1297644	0					
ANR	1297847	SizeofOperand	indx		1297644	1					
ANR	1297848	Argument	""" (%c%u, %c%u)"""		1297644	2					
ANR	1297849	PrimaryExpression	""" (%c%u, %c%u)"""		1297644	0					
ANR	1297850	Argument	sign		1297644	3					
ANR	1297851	Identifier	sign		1297644	0					
ANR	1297852	Argument	idx . n		1297644	4					
ANR	1297853	MemberAccess	idx . n		1297644	0					
ANR	1297854	Identifier	idx		1297644	0					
ANR	1297855	Identifier	n		1297644	1					
ANR	1297856	Argument	sign		1297644	5					
ANR	1297857	Identifier	sign		1297644	0					
ANR	1297858	Argument	idx . c		1297644	6					
ANR	1297859	MemberAccess	idx . c		1297644	0					
ANR	1297860	Identifier	idx		1297644	0					
ANR	1297861	Identifier	c		1297644	1					
ANR	1297862	ExpressionStatement	ret += 2	657:2:16524:16532	1297644	5	True				
ANR	1297863	AssignmentExpression	ret += 2		1297644	0		+=			
ANR	1297864	Identifier	ret		1297644	0					
ANR	1297865	PrimaryExpression	2		1297644	1					
ANR	1297866	IfStatement	"if ( TEST_BIT ( bytes [ 0 ] , 7 ) )"		1297644	9					
ANR	1297867	Condition	"TEST_BIT ( bytes [ 0 ] , 7 )"	660:5:16543:16563	1297644	0	True				
ANR	1297868	CallExpression	"TEST_BIT ( bytes [ 0 ] , 7 )"		1297644	0					
ANR	1297869	Callee	TEST_BIT		1297644	0					
ANR	1297870	Identifier	TEST_BIT		1297644	0					
ANR	1297871	ArgumentList	bytes [ 0 ]		1297644	1					
ANR	1297872	Argument	bytes [ 0 ]		1297644	0					
ANR	1297873	ArrayIndexing	bytes [ 0 ]		1297644	0					
ANR	1297874	Identifier	bytes		1297644	0					
ANR	1297875	PrimaryExpression	0		1297644	1					
ANR	1297876	Argument	7		1297644	1					
ANR	1297877	PrimaryExpression	7		1297644	0					
ANR	1297878	CompoundStatement		33:2:736:767	1297644	1					
ANR	1297879	IdentifierDeclStatement	ut32 im = * ( ut32 * ) ( bytes + ret ) ;	661:2:16570:16601	1297644	0	True				
ANR	1297880	IdentifierDecl	im = * ( ut32 * ) ( bytes + ret )		1297644	0					
ANR	1297881	IdentifierDeclType	ut32		1297644	0					
ANR	1297882	Identifier	im		1297644	1					
ANR	1297883	AssignmentExpression	im = * ( ut32 * ) ( bytes + ret )		1297644	2		=			
ANR	1297884	Identifier	im		1297644	0					
ANR	1297885	UnaryOperationExpression	* ( ut32 * ) ( bytes + ret )		1297644	1					
ANR	1297886	UnaryOperator	*		1297644	0					
ANR	1297887	CastExpression	( ut32 * ) ( bytes + ret )		1297644	1					
ANR	1297888	CastTarget	ut32 *		1297644	0					
ANR	1297889	AdditiveExpression	bytes + ret		1297644	1		+			
ANR	1297890	Identifier	bytes		1297644	0					
ANR	1297891	Identifier	ret		1297644	1					
ANR	1297892	ExpressionStatement	"snprintf ( immed , sizeof ( immed ) , ""%u"" , im )"	662:2:16605:16647	1297644	1	True				
ANR	1297893	CallExpression	"snprintf ( immed , sizeof ( immed ) , ""%u"" , im )"		1297644	0					
ANR	1297894	Callee	snprintf		1297644	0					
ANR	1297895	Identifier	snprintf		1297644	0					
ANR	1297896	ArgumentList	immed		1297644	1					
ANR	1297897	Argument	immed		1297644	0					
ANR	1297898	Identifier	immed		1297644	0					
ANR	1297899	Argument	sizeof ( immed )		1297644	1					
ANR	1297900	SizeofExpression	sizeof ( immed )		1297644	0					
ANR	1297901	Sizeof	sizeof		1297644	0					
ANR	1297902	SizeofOperand	immed		1297644	1					
ANR	1297903	Argument	"""%u"""		1297644	2					
ANR	1297904	PrimaryExpression	"""%u"""		1297644	0					
ANR	1297905	Argument	im		1297644	3					
ANR	1297906	Identifier	im		1297644	0					
ANR	1297907	ExpressionStatement	ret += 4	663:2:16651:16659	1297644	2	True				
ANR	1297908	AssignmentExpression	ret += 4		1297644	0		+=			
ANR	1297909	Identifier	ret		1297644	0					
ANR	1297910	PrimaryExpression	4		1297644	1					
ANR	1297911	ElseStatement	else		1297644	0					
ANR	1297912	CompoundStatement		37:2:839:870	1297644	0					
ANR	1297913	IdentifierDeclStatement	ut16 im = * ( ut16 * ) ( bytes + ret ) ;	665:2:16673:16704	1297644	0	True				
ANR	1297914	IdentifierDecl	im = * ( ut16 * ) ( bytes + ret )		1297644	0					
ANR	1297915	IdentifierDeclType	ut16		1297644	0					
ANR	1297916	Identifier	im		1297644	1					
ANR	1297917	AssignmentExpression	im = * ( ut16 * ) ( bytes + ret )		1297644	2		=			
ANR	1297918	Identifier	im		1297644	0					
ANR	1297919	UnaryOperationExpression	* ( ut16 * ) ( bytes + ret )		1297644	1					
ANR	1297920	UnaryOperator	*		1297644	0					
ANR	1297921	CastExpression	( ut16 * ) ( bytes + ret )		1297644	1					
ANR	1297922	CastTarget	ut16 *		1297644	0					
ANR	1297923	AdditiveExpression	bytes + ret		1297644	1		+			
ANR	1297924	Identifier	bytes		1297644	0					
ANR	1297925	Identifier	ret		1297644	1					
ANR	1297926	ExpressionStatement	"snprintf ( immed , sizeof ( immed ) , ""%u"" , im )"	666:2:16708:16750	1297644	1	True				
ANR	1297927	CallExpression	"snprintf ( immed , sizeof ( immed ) , ""%u"" , im )"		1297644	0					
ANR	1297928	Callee	snprintf		1297644	0					
ANR	1297929	Identifier	snprintf		1297644	0					
ANR	1297930	ArgumentList	immed		1297644	1					
ANR	1297931	Argument	immed		1297644	0					
ANR	1297932	Identifier	immed		1297644	0					
ANR	1297933	Argument	sizeof ( immed )		1297644	1					
ANR	1297934	SizeofExpression	sizeof ( immed )		1297644	0					
ANR	1297935	Sizeof	sizeof		1297644	0					
ANR	1297936	SizeofOperand	immed		1297644	1					
ANR	1297937	Argument	"""%u"""		1297644	2					
ANR	1297938	PrimaryExpression	"""%u"""		1297644	0					
ANR	1297939	Argument	im		1297644	3					
ANR	1297940	Identifier	im		1297644	0					
ANR	1297941	ExpressionStatement	ret += 2	667:2:16754:16762	1297644	2	True				
ANR	1297942	AssignmentExpression	ret += 2		1297644	0		+=			
ANR	1297943	Identifier	ret		1297644	0					
ANR	1297944	PrimaryExpression	2		1297644	1					
ANR	1297945	ExpressionStatement	"CHK_SNPRINTF ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""%s%s, %s"" , op1c , indx , immed )"	670:1:16769:16849	1297644	10	True				
ANR	1297946	CallExpression	"CHK_SNPRINTF ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""%s%s, %s"" , op1c , indx , immed )"		1297644	0					
ANR	1297947	Callee	CHK_SNPRINTF		1297644	0					
ANR	1297948	Identifier	CHK_SNPRINTF		1297644	0					
ANR	1297949	ArgumentList	cmd -> operands		1297644	1					
ANR	1297950	Argument	cmd -> operands		1297644	0					
ANR	1297951	PtrMemberAccess	cmd -> operands		1297644	0					
ANR	1297952	Identifier	cmd		1297644	0					
ANR	1297953	Identifier	operands		1297644	1					
ANR	1297954	Argument	EBC_OPERANDS_MAXLEN		1297644	1					
ANR	1297955	Identifier	EBC_OPERANDS_MAXLEN		1297644	0					
ANR	1297956	Argument	"""%s%s, %s"""		1297644	2					
ANR	1297957	PrimaryExpression	"""%s%s, %s"""		1297644	0					
ANR	1297958	Argument	op1c		1297644	3					
ANR	1297959	Identifier	op1c		1297644	0					
ANR	1297960	Argument	indx		1297644	4					
ANR	1297961	Identifier	indx		1297644	0					
ANR	1297962	Argument	immed		1297644	5					
ANR	1297963	Identifier	immed		1297644	0					
ANR	1297964	ReturnStatement	return ret ;	671:1:16852:16862	1297644	11	True				
ANR	1297965	Identifier	ret		1297644	0					
ANR	1297966	ReturnType	static int		1297644	1					
ANR	1297967	Identifier	decode_cmpi		1297644	2					
ANR	1297968	ParameterList	"const ut8 * bytes , ebc_command_t * cmd"		1297644	3					
ANR	1297969	Parameter	const ut8 * bytes	629:23:15795:15810	1297644	0	True				
ANR	1297970	ParameterType	const ut8 *		1297644	0					
ANR	1297971	Identifier	bytes		1297644	1					
ANR	1297972	Parameter	ebc_command_t * cmd	629:41:15813:15830	1297644	1	True				
ANR	1297973	ParameterType	ebc_command_t *		1297644	0					
ANR	1297974	Identifier	cmd		1297644	1					
ANR	1297975	CFGEntryNode	ENTRY		1297644		True				
ANR	1297976	CFGExitNode	EXIT		1297644		True				
ANR	1297977	Symbol	EBC_OPERANDS_MAXLEN		1297644						
ANR	1297978	Symbol	op1c		1297644						
ANR	1297979	Symbol	EBC_INSTR_MAXLEN		1297644						
ANR	1297980	Symbol	indx		1297644						
ANR	1297981	Symbol	sign		1297644						
ANR	1297982	Symbol	* bytes		1297644						
ANR	1297983	Symbol	* instr_names		1297644						
ANR	1297984	Symbol	* ret		1297644						
ANR	1297985	Symbol	immed		1297644						
ANR	1297986	Symbol	cmd -> operands		1297644						
ANR	1297987	Symbol	suff		1297644						
ANR	1297988	Symbol	idx . sign		1297644						
ANR	1297989	Symbol	* EBC_OPCODE_MASK		1297644						
ANR	1297990	Symbol	* cmd		1297644						
ANR	1297991	Symbol	cmd -> instr		1297644						
ANR	1297992	Symbol	* ( ut16 * ) ( bytes + ret )		1297644						
ANR	1297993	Symbol	TEST_BIT		1297644						
ANR	1297994	Symbol	* EBC_CMPIEQ		1297644						
ANR	1297995	Symbol	ret		1297644						
ANR	1297996	Symbol	* * bytes		1297644						
ANR	1297997	Symbol	& idx		1297644						
ANR	1297998	Symbol	idx . n		1297644						
ANR	1297999	Symbol	im		1297644						
ANR	1298000	Symbol	EBC_CMPIEQ		1297644						
ANR	1298001	Symbol	* ( ut32 * ) ( bytes + ret )		1297644						
ANR	1298002	Symbol	op1		1297644						
ANR	1298003	Symbol	idx . c		1297644						
ANR	1298004	Symbol	instr_names		1297644						
ANR	1298005	Symbol	bytes		1297644						
ANR	1298006	Symbol	cmd		1297644						
ANR	1298007	Symbol	* suff		1297644						
ANR	1298008	Symbol	idx		1297644						
ANR	1298009	Symbol	EBC_OPCODE_MASK		1297644						
ANR	1298010	Function	decode_movn	674:0:16867:18256							
ANR	1298011	FunctionDef	"decode_movn (const ut8 * bytes , ebc_command_t * cmd)"		1298010	0					
ANR	1298012	CompoundStatement		674:61:16928:18256	1298010	0					
ANR	1298013	IdentifierDeclStatement	int ret = 2 ;	675:1:16931:16942	1298010	0	True				
ANR	1298014	IdentifierDecl	ret = 2		1298010	0					
ANR	1298015	IdentifierDeclType	int		1298010	0					
ANR	1298016	Identifier	ret		1298010	1					
ANR	1298017	AssignmentExpression	ret = 2		1298010	2		=			
ANR	1298018	Identifier	ret		1298010	0					
ANR	1298019	PrimaryExpression	2		1298010	1					
ANR	1298020	IdentifierDeclStatement	unsigned op1 = bytes [ 1 ] & 0x07 ;	676:1:16945:16975	1298010	1	True				
ANR	1298021	IdentifierDecl	op1 = bytes [ 1 ] & 0x07		1298010	0					
ANR	1298022	IdentifierDeclType	unsigned		1298010	0					
ANR	1298023	Identifier	op1		1298010	1					
ANR	1298024	AssignmentExpression	op1 = bytes [ 1 ] & 0x07		1298010	2		=			
ANR	1298025	Identifier	op1		1298010	0					
ANR	1298026	BitAndExpression	bytes [ 1 ] & 0x07		1298010	1		&			
ANR	1298027	ArrayIndexing	bytes [ 1 ]		1298010	0					
ANR	1298028	Identifier	bytes		1298010	0					
ANR	1298029	PrimaryExpression	1		1298010	1					
ANR	1298030	PrimaryExpression	0x07		1298010	1					
ANR	1298031	IdentifierDeclStatement	unsigned op2 = ( bytes [ 1 ] >> 4 ) & 0x07 ;	677:1:16978:17015	1298010	2	True				
ANR	1298032	IdentifierDecl	op2 = ( bytes [ 1 ] >> 4 ) & 0x07		1298010	0					
ANR	1298033	IdentifierDeclType	unsigned		1298010	0					
ANR	1298034	Identifier	op2		1298010	1					
ANR	1298035	AssignmentExpression	op2 = ( bytes [ 1 ] >> 4 ) & 0x07		1298010	2		=			
ANR	1298036	Identifier	op2		1298010	0					
ANR	1298037	BitAndExpression	( bytes [ 1 ] >> 4 ) & 0x07		1298010	1		&			
ANR	1298038	ShiftExpression	bytes [ 1 ] >> 4		1298010	0		>>			
ANR	1298039	ArrayIndexing	bytes [ 1 ]		1298010	0					
ANR	1298040	Identifier	bytes		1298010	0					
ANR	1298041	PrimaryExpression	1		1298010	1					
ANR	1298042	PrimaryExpression	4		1298010	1					
ANR	1298043	PrimaryExpression	0x07		1298010	1					
ANR	1298044	IdentifierDeclStatement	"char op1c [ 32 ] , op2c [ 32 ] ;"	678:1:17018:17041	1298010	3	True				
ANR	1298045	IdentifierDecl	op1c [ 32 ]		1298010	0					
ANR	1298046	IdentifierDeclType	char [ 32 ]		1298010	0					
ANR	1298047	Identifier	op1c		1298010	1					
ANR	1298048	PrimaryExpression	32		1298010	2					
ANR	1298049	IdentifierDecl	op2c [ 32 ]		1298010	1					
ANR	1298050	IdentifierDeclType	char [ 32 ]		1298010	0					
ANR	1298051	Identifier	op2c		1298010	1					
ANR	1298052	PrimaryExpression	32		1298010	2					
ANR	1298053	IdentifierDeclStatement	char indx1 [ 32 ] = { 0 } ;	679:1:17044:17064	1298010	4	True				
ANR	1298054	IdentifierDecl	indx1 [ 32 ] = { 0 }		1298010	0					
ANR	1298055	IdentifierDeclType	char [ 32 ]		1298010	0					
ANR	1298056	Identifier	indx1		1298010	1					
ANR	1298057	PrimaryExpression	32		1298010	2					
ANR	1298058	AssignmentExpression	indx1 [ 32 ] = { 0 }		1298010	3		=			
ANR	1298059	Identifier	indx1		1298010	0					
ANR	1298060	InitializerList	0		1298010	1					
ANR	1298061	PrimaryExpression	0		1298010	0					
ANR	1298062	IdentifierDeclStatement	char indx2 [ 32 ] = { 0 } ;	680:1:17067:17087	1298010	5	True				
ANR	1298063	IdentifierDecl	indx2 [ 32 ] = { 0 }		1298010	0					
ANR	1298064	IdentifierDeclType	char [ 32 ]		1298010	0					
ANR	1298065	Identifier	indx2		1298010	1					
ANR	1298066	PrimaryExpression	32		1298010	2					
ANR	1298067	AssignmentExpression	indx2 [ 32 ] = { 0 }		1298010	3		=			
ANR	1298068	Identifier	indx2		1298010	0					
ANR	1298069	InitializerList	0		1298010	1					
ANR	1298070	PrimaryExpression	0		1298010	0					
ANR	1298071	IdentifierDeclStatement	char sign ;	681:1:17090:17099	1298010	6	True				
ANR	1298072	IdentifierDecl	sign		1298010	0					
ANR	1298073	IdentifierDeclType	char		1298010	0					
ANR	1298074	Identifier	sign		1298010	1					
ANR	1298075	IdentifierDeclStatement	ebc_index_t idx ;	682:1:17102:17117	1298010	7	True				
ANR	1298076	IdentifierDecl	idx		1298010	0					
ANR	1298077	IdentifierDeclType	ebc_index_t		1298010	0					
ANR	1298078	Identifier	idx		1298010	1					
ANR	1298079	ExpressionStatement	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s"" , instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ] )"	684:1:17121:17209	1298010	8	True				
ANR	1298080	CallExpression	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s"" , instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ] )"		1298010	0					
ANR	1298081	Callee	snprintf		1298010	0					
ANR	1298082	Identifier	snprintf		1298010	0					
ANR	1298083	ArgumentList	cmd -> instr		1298010	1					
ANR	1298084	Argument	cmd -> instr		1298010	0					
ANR	1298085	PtrMemberAccess	cmd -> instr		1298010	0					
ANR	1298086	Identifier	cmd		1298010	0					
ANR	1298087	Identifier	instr		1298010	1					
ANR	1298088	Argument	EBC_INSTR_MAXLEN		1298010	1					
ANR	1298089	Identifier	EBC_INSTR_MAXLEN		1298010	0					
ANR	1298090	Argument	"""%s"""		1298010	2					
ANR	1298091	PrimaryExpression	"""%s"""		1298010	0					
ANR	1298092	Argument	instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ]		1298010	3					
ANR	1298093	ArrayIndexing	instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ]		1298010	0					
ANR	1298094	Identifier	instr_names		1298010	0					
ANR	1298095	BitAndExpression	bytes [ 0 ] & EBC_OPCODE_MASK		1298010	1		&			
ANR	1298096	ArrayIndexing	bytes [ 0 ]		1298010	0					
ANR	1298097	Identifier	bytes		1298010	0					
ANR	1298098	PrimaryExpression	0		1298010	1					
ANR	1298099	Identifier	EBC_OPCODE_MASK		1298010	1					
ANR	1298100	ExpressionStatement	"snprintf ( op1c , 32 , ""%sr%u"" , TEST_BIT ( bytes [ 1 ] , 3 ) ? ""@"" : """" , op1 )"	687:1:17213:17279	1298010	9	True				
ANR	1298101	CallExpression	"snprintf ( op1c , 32 , ""%sr%u"" , TEST_BIT ( bytes [ 1 ] , 3 ) ? ""@"" : """" , op1 )"		1298010	0					
ANR	1298102	Callee	snprintf		1298010	0					
ANR	1298103	Identifier	snprintf		1298010	0					
ANR	1298104	ArgumentList	op1c		1298010	1					
ANR	1298105	Argument	op1c		1298010	0					
ANR	1298106	Identifier	op1c		1298010	0					
ANR	1298107	Argument	32		1298010	1					
ANR	1298108	PrimaryExpression	32		1298010	0					
ANR	1298109	Argument	"""%sr%u"""		1298010	2					
ANR	1298110	PrimaryExpression	"""%sr%u"""		1298010	0					
ANR	1298111	Argument	"TEST_BIT ( bytes [ 1 ] , 3 ) ? ""@"" : """""		1298010	3					
ANR	1298112	ConditionalExpression	"TEST_BIT ( bytes [ 1 ] , 3 ) ? ""@"" : """""		1298010	0					
ANR	1298113	Condition	"TEST_BIT ( bytes [ 1 ] , 3 )"		1298010	0					
ANR	1298114	CallExpression	"TEST_BIT ( bytes [ 1 ] , 3 )"		1298010	0					
ANR	1298115	Callee	TEST_BIT		1298010	0					
ANR	1298116	Identifier	TEST_BIT		1298010	0					
ANR	1298117	ArgumentList	bytes [ 1 ]		1298010	1					
ANR	1298118	Argument	bytes [ 1 ]		1298010	0					
ANR	1298119	ArrayIndexing	bytes [ 1 ]		1298010	0					
ANR	1298120	Identifier	bytes		1298010	0					
ANR	1298121	PrimaryExpression	1		1298010	1					
ANR	1298122	Argument	3		1298010	1					
ANR	1298123	PrimaryExpression	3		1298010	0					
ANR	1298124	PrimaryExpression	"""@"""		1298010	1					
ANR	1298125	PrimaryExpression	""""""		1298010	2					
ANR	1298126	Argument	op1		1298010	4					
ANR	1298127	Identifier	op1		1298010	0					
ANR	1298128	ExpressionStatement	"snprintf ( op2c , 32 , ""%sr%u"" , TEST_BIT ( bytes [ 1 ] , 7 ) ? ""@"" : """" , op2 )"	688:1:17282:17348	1298010	10	True				
ANR	1298129	CallExpression	"snprintf ( op2c , 32 , ""%sr%u"" , TEST_BIT ( bytes [ 1 ] , 7 ) ? ""@"" : """" , op2 )"		1298010	0					
ANR	1298130	Callee	snprintf		1298010	0					
ANR	1298131	Identifier	snprintf		1298010	0					
ANR	1298132	ArgumentList	op2c		1298010	1					
ANR	1298133	Argument	op2c		1298010	0					
ANR	1298134	Identifier	op2c		1298010	0					
ANR	1298135	Argument	32		1298010	1					
ANR	1298136	PrimaryExpression	32		1298010	0					
ANR	1298137	Argument	"""%sr%u"""		1298010	2					
ANR	1298138	PrimaryExpression	"""%sr%u"""		1298010	0					
ANR	1298139	Argument	"TEST_BIT ( bytes [ 1 ] , 7 ) ? ""@"" : """""		1298010	3					
ANR	1298140	ConditionalExpression	"TEST_BIT ( bytes [ 1 ] , 7 ) ? ""@"" : """""		1298010	0					
ANR	1298141	Condition	"TEST_BIT ( bytes [ 1 ] , 7 )"		1298010	0					
ANR	1298142	CallExpression	"TEST_BIT ( bytes [ 1 ] , 7 )"		1298010	0					
ANR	1298143	Callee	TEST_BIT		1298010	0					
ANR	1298144	Identifier	TEST_BIT		1298010	0					
ANR	1298145	ArgumentList	bytes [ 1 ]		1298010	1					
ANR	1298146	Argument	bytes [ 1 ]		1298010	0					
ANR	1298147	ArrayIndexing	bytes [ 1 ]		1298010	0					
ANR	1298148	Identifier	bytes		1298010	0					
ANR	1298149	PrimaryExpression	1		1298010	1					
ANR	1298150	Argument	7		1298010	1					
ANR	1298151	PrimaryExpression	7		1298010	0					
ANR	1298152	PrimaryExpression	"""@"""		1298010	1					
ANR	1298153	PrimaryExpression	""""""		1298010	2					
ANR	1298154	Argument	op2		1298010	4					
ANR	1298155	Identifier	op2		1298010	0					
ANR	1298156	IfStatement	if ( ( bytes [ 0 ] & EBC_OPCODE_MASK ) == EBC_MOVNW )		1298010	11					
ANR	1298157	Condition	( bytes [ 0 ] & EBC_OPCODE_MASK ) == EBC_MOVNW	690:5:17356:17396	1298010	0	True				
ANR	1298158	EqualityExpression	( bytes [ 0 ] & EBC_OPCODE_MASK ) == EBC_MOVNW		1298010	0		==			
ANR	1298159	BitAndExpression	bytes [ 0 ] & EBC_OPCODE_MASK		1298010	0		&			
ANR	1298160	ArrayIndexing	bytes [ 0 ]		1298010	0					
ANR	1298161	Identifier	bytes		1298010	0					
ANR	1298162	PrimaryExpression	0		1298010	1					
ANR	1298163	Identifier	EBC_OPCODE_MASK		1298010	1					
ANR	1298164	Identifier	EBC_MOVNW		1298010	1					
ANR	1298165	CompoundStatement		17:48:470:470	1298010	1					
ANR	1298166	IfStatement	"if ( TEST_BIT ( bytes [ 0 ] , 7 ) )"		1298010	0					
ANR	1298167	Condition	"TEST_BIT ( bytes [ 0 ] , 7 )"	691:6:17407:17427	1298010	0	True				
ANR	1298168	CallExpression	"TEST_BIT ( bytes [ 0 ] , 7 )"		1298010	0					
ANR	1298169	Callee	TEST_BIT		1298010	0					
ANR	1298170	Identifier	TEST_BIT		1298010	0					
ANR	1298171	ArgumentList	bytes [ 0 ]		1298010	1					
ANR	1298172	Argument	bytes [ 0 ]		1298010	0					
ANR	1298173	ArrayIndexing	bytes [ 0 ]		1298010	0					
ANR	1298174	Identifier	bytes		1298010	0					
ANR	1298175	PrimaryExpression	0		1298010	1					
ANR	1298176	Argument	7		1298010	1					
ANR	1298177	PrimaryExpression	7		1298010	0					
ANR	1298178	CompoundStatement		18:29:501:501	1298010	1					
ANR	1298179	ExpressionStatement	"decode_index16 ( bytes + ret , & idx )"	692:3:17435:17468	1298010	0	True				
ANR	1298180	CallExpression	"decode_index16 ( bytes + ret , & idx )"		1298010	0					
ANR	1298181	Callee	decode_index16		1298010	0					
ANR	1298182	Identifier	decode_index16		1298010	0					
ANR	1298183	ArgumentList	bytes + ret		1298010	1					
ANR	1298184	Argument	bytes + ret		1298010	0					
ANR	1298185	AdditiveExpression	bytes + ret		1298010	0		+			
ANR	1298186	Identifier	bytes		1298010	0					
ANR	1298187	Identifier	ret		1298010	1					
ANR	1298188	Argument	& idx		1298010	1					
ANR	1298189	UnaryOperationExpression	& idx		1298010	0					
ANR	1298190	UnaryOperator	&		1298010	0					
ANR	1298191	Identifier	idx		1298010	1					
ANR	1298192	ExpressionStatement	sign = idx . sign ? '+' : '-'	693:3:17473:17500	1298010	1	True				
ANR	1298193	AssignmentExpression	sign = idx . sign ? '+' : '-'		1298010	0		=			
ANR	1298194	Identifier	sign		1298010	0					
ANR	1298195	ConditionalExpression	idx . sign ? '+' : '-'		1298010	1					
ANR	1298196	Condition	idx . sign		1298010	0					
ANR	1298197	MemberAccess	idx . sign		1298010	0					
ANR	1298198	Identifier	idx		1298010	0					
ANR	1298199	Identifier	sign		1298010	1					
ANR	1298200	PrimaryExpression	'+'		1298010	1					
ANR	1298201	PrimaryExpression	'-'		1298010	2					
ANR	1298202	ExpressionStatement	"snprintf ( indx1 , 32 , ""(%c%u, %c%u)"" , sign , idx . n , sign , idx . c )"	694:3:17505:17566	1298010	2	True				
ANR	1298203	CallExpression	"snprintf ( indx1 , 32 , ""(%c%u, %c%u)"" , sign , idx . n , sign , idx . c )"		1298010	0					
ANR	1298204	Callee	snprintf		1298010	0					
ANR	1298205	Identifier	snprintf		1298010	0					
ANR	1298206	ArgumentList	indx1		1298010	1					
ANR	1298207	Argument	indx1		1298010	0					
ANR	1298208	Identifier	indx1		1298010	0					
ANR	1298209	Argument	32		1298010	1					
ANR	1298210	PrimaryExpression	32		1298010	0					
ANR	1298211	Argument	"""(%c%u, %c%u)"""		1298010	2					
ANR	1298212	PrimaryExpression	"""(%c%u, %c%u)"""		1298010	0					
ANR	1298213	Argument	sign		1298010	3					
ANR	1298214	Identifier	sign		1298010	0					
ANR	1298215	Argument	idx . n		1298010	4					
ANR	1298216	MemberAccess	idx . n		1298010	0					
ANR	1298217	Identifier	idx		1298010	0					
ANR	1298218	Identifier	n		1298010	1					
ANR	1298219	Argument	sign		1298010	5					
ANR	1298220	Identifier	sign		1298010	0					
ANR	1298221	Argument	idx . c		1298010	6					
ANR	1298222	MemberAccess	idx . c		1298010	0					
ANR	1298223	Identifier	idx		1298010	0					
ANR	1298224	Identifier	c		1298010	1					
ANR	1298225	ExpressionStatement	ret += 2	695:3:17571:17579	1298010	3	True				
ANR	1298226	AssignmentExpression	ret += 2		1298010	0		+=			
ANR	1298227	Identifier	ret		1298010	0					
ANR	1298228	PrimaryExpression	2		1298010	1					
ANR	1298229	IfStatement	"if ( TEST_BIT ( bytes [ 0 ] , 6 ) )"		1298010	1					
ANR	1298230	Condition	"TEST_BIT ( bytes [ 0 ] , 6 )"	697:6:17591:17611	1298010	0	True				
ANR	1298231	CallExpression	"TEST_BIT ( bytes [ 0 ] , 6 )"		1298010	0					
ANR	1298232	Callee	TEST_BIT		1298010	0					
ANR	1298233	Identifier	TEST_BIT		1298010	0					
ANR	1298234	ArgumentList	bytes [ 0 ]		1298010	1					
ANR	1298235	Argument	bytes [ 0 ]		1298010	0					
ANR	1298236	ArrayIndexing	bytes [ 0 ]		1298010	0					
ANR	1298237	Identifier	bytes		1298010	0					
ANR	1298238	PrimaryExpression	0		1298010	1					
ANR	1298239	Argument	6		1298010	1					
ANR	1298240	PrimaryExpression	6		1298010	0					
ANR	1298241	CompoundStatement		24:29:685:685	1298010	1					
ANR	1298242	ExpressionStatement	"decode_index16 ( bytes + ret , & idx )"	698:3:17619:17652	1298010	0	True				
ANR	1298243	CallExpression	"decode_index16 ( bytes + ret , & idx )"		1298010	0					
ANR	1298244	Callee	decode_index16		1298010	0					
ANR	1298245	Identifier	decode_index16		1298010	0					
ANR	1298246	ArgumentList	bytes + ret		1298010	1					
ANR	1298247	Argument	bytes + ret		1298010	0					
ANR	1298248	AdditiveExpression	bytes + ret		1298010	0		+			
ANR	1298249	Identifier	bytes		1298010	0					
ANR	1298250	Identifier	ret		1298010	1					
ANR	1298251	Argument	& idx		1298010	1					
ANR	1298252	UnaryOperationExpression	& idx		1298010	0					
ANR	1298253	UnaryOperator	&		1298010	0					
ANR	1298254	Identifier	idx		1298010	1					
ANR	1298255	ExpressionStatement	sign = idx . sign ? '+' : '-'	699:3:17657:17684	1298010	1	True				
ANR	1298256	AssignmentExpression	sign = idx . sign ? '+' : '-'		1298010	0		=			
ANR	1298257	Identifier	sign		1298010	0					
ANR	1298258	ConditionalExpression	idx . sign ? '+' : '-'		1298010	1					
ANR	1298259	Condition	idx . sign		1298010	0					
ANR	1298260	MemberAccess	idx . sign		1298010	0					
ANR	1298261	Identifier	idx		1298010	0					
ANR	1298262	Identifier	sign		1298010	1					
ANR	1298263	PrimaryExpression	'+'		1298010	1					
ANR	1298264	PrimaryExpression	'-'		1298010	2					
ANR	1298265	ExpressionStatement	"snprintf ( indx2 , 32 , ""(%c%u, %c%u)"" , sign , idx . n , sign , idx . c )"	700:3:17689:17750	1298010	2	True				
ANR	1298266	CallExpression	"snprintf ( indx2 , 32 , ""(%c%u, %c%u)"" , sign , idx . n , sign , idx . c )"		1298010	0					
ANR	1298267	Callee	snprintf		1298010	0					
ANR	1298268	Identifier	snprintf		1298010	0					
ANR	1298269	ArgumentList	indx2		1298010	1					
ANR	1298270	Argument	indx2		1298010	0					
ANR	1298271	Identifier	indx2		1298010	0					
ANR	1298272	Argument	32		1298010	1					
ANR	1298273	PrimaryExpression	32		1298010	0					
ANR	1298274	Argument	"""(%c%u, %c%u)"""		1298010	2					
ANR	1298275	PrimaryExpression	"""(%c%u, %c%u)"""		1298010	0					
ANR	1298276	Argument	sign		1298010	3					
ANR	1298277	Identifier	sign		1298010	0					
ANR	1298278	Argument	idx . n		1298010	4					
ANR	1298279	MemberAccess	idx . n		1298010	0					
ANR	1298280	Identifier	idx		1298010	0					
ANR	1298281	Identifier	n		1298010	1					
ANR	1298282	Argument	sign		1298010	5					
ANR	1298283	Identifier	sign		1298010	0					
ANR	1298284	Argument	idx . c		1298010	6					
ANR	1298285	MemberAccess	idx . c		1298010	0					
ANR	1298286	Identifier	idx		1298010	0					
ANR	1298287	Identifier	c		1298010	1					
ANR	1298288	ExpressionStatement	ret += 2	701:3:17755:17763	1298010	3	True				
ANR	1298289	AssignmentExpression	ret += 2		1298010	0		+=			
ANR	1298290	Identifier	ret		1298010	0					
ANR	1298291	PrimaryExpression	2		1298010	1					
ANR	1298292	ElseStatement	else		1298010	0					
ANR	1298293	CompoundStatement		30:8:848:848	1298010	0					
ANR	1298294	IfStatement	"if ( TEST_BIT ( bytes [ 0 ] , 7 ) )"		1298010	0					
ANR	1298295	Condition	"TEST_BIT ( bytes [ 0 ] , 7 )"	704:6:17785:17805	1298010	0	True				
ANR	1298296	CallExpression	"TEST_BIT ( bytes [ 0 ] , 7 )"		1298010	0					
ANR	1298297	Callee	TEST_BIT		1298010	0					
ANR	1298298	Identifier	TEST_BIT		1298010	0					
ANR	1298299	ArgumentList	bytes [ 0 ]		1298010	1					
ANR	1298300	Argument	bytes [ 0 ]		1298010	0					
ANR	1298301	ArrayIndexing	bytes [ 0 ]		1298010	0					
ANR	1298302	Identifier	bytes		1298010	0					
ANR	1298303	PrimaryExpression	0		1298010	1					
ANR	1298304	Argument	7		1298010	1					
ANR	1298305	PrimaryExpression	7		1298010	0					
ANR	1298306	CompoundStatement		31:29:879:879	1298010	1					
ANR	1298307	ExpressionStatement	"decode_index32 ( bytes + ret , & idx )"	705:3:17813:17846	1298010	0	True				
ANR	1298308	CallExpression	"decode_index32 ( bytes + ret , & idx )"		1298010	0					
ANR	1298309	Callee	decode_index32		1298010	0					
ANR	1298310	Identifier	decode_index32		1298010	0					
ANR	1298311	ArgumentList	bytes + ret		1298010	1					
ANR	1298312	Argument	bytes + ret		1298010	0					
ANR	1298313	AdditiveExpression	bytes + ret		1298010	0		+			
ANR	1298314	Identifier	bytes		1298010	0					
ANR	1298315	Identifier	ret		1298010	1					
ANR	1298316	Argument	& idx		1298010	1					
ANR	1298317	UnaryOperationExpression	& idx		1298010	0					
ANR	1298318	UnaryOperator	&		1298010	0					
ANR	1298319	Identifier	idx		1298010	1					
ANR	1298320	ExpressionStatement	sign = idx . sign ? '+' : '-'	706:3:17851:17878	1298010	1	True				
ANR	1298321	AssignmentExpression	sign = idx . sign ? '+' : '-'		1298010	0		=			
ANR	1298322	Identifier	sign		1298010	0					
ANR	1298323	ConditionalExpression	idx . sign ? '+' : '-'		1298010	1					
ANR	1298324	Condition	idx . sign		1298010	0					
ANR	1298325	MemberAccess	idx . sign		1298010	0					
ANR	1298326	Identifier	idx		1298010	0					
ANR	1298327	Identifier	sign		1298010	1					
ANR	1298328	PrimaryExpression	'+'		1298010	1					
ANR	1298329	PrimaryExpression	'-'		1298010	2					
ANR	1298330	ExpressionStatement	"snprintf ( indx1 , 32 , ""(%c%u, %c%u)"" , sign , idx . n , sign , idx . c )"	707:3:17883:17944	1298010	2	True				
ANR	1298331	CallExpression	"snprintf ( indx1 , 32 , ""(%c%u, %c%u)"" , sign , idx . n , sign , idx . c )"		1298010	0					
ANR	1298332	Callee	snprintf		1298010	0					
ANR	1298333	Identifier	snprintf		1298010	0					
ANR	1298334	ArgumentList	indx1		1298010	1					
ANR	1298335	Argument	indx1		1298010	0					
ANR	1298336	Identifier	indx1		1298010	0					
ANR	1298337	Argument	32		1298010	1					
ANR	1298338	PrimaryExpression	32		1298010	0					
ANR	1298339	Argument	"""(%c%u, %c%u)"""		1298010	2					
ANR	1298340	PrimaryExpression	"""(%c%u, %c%u)"""		1298010	0					
ANR	1298341	Argument	sign		1298010	3					
ANR	1298342	Identifier	sign		1298010	0					
ANR	1298343	Argument	idx . n		1298010	4					
ANR	1298344	MemberAccess	idx . n		1298010	0					
ANR	1298345	Identifier	idx		1298010	0					
ANR	1298346	Identifier	n		1298010	1					
ANR	1298347	Argument	sign		1298010	5					
ANR	1298348	Identifier	sign		1298010	0					
ANR	1298349	Argument	idx . c		1298010	6					
ANR	1298350	MemberAccess	idx . c		1298010	0					
ANR	1298351	Identifier	idx		1298010	0					
ANR	1298352	Identifier	c		1298010	1					
ANR	1298353	ExpressionStatement	ret += 4	708:3:17949:17957	1298010	3	True				
ANR	1298354	AssignmentExpression	ret += 4		1298010	0		+=			
ANR	1298355	Identifier	ret		1298010	0					
ANR	1298356	PrimaryExpression	4		1298010	1					
ANR	1298357	IfStatement	"if ( TEST_BIT ( bytes [ 0 ] , 6 ) )"		1298010	1					
ANR	1298358	Condition	"TEST_BIT ( bytes [ 0 ] , 6 )"	710:6:17969:17989	1298010	0	True				
ANR	1298359	CallExpression	"TEST_BIT ( bytes [ 0 ] , 6 )"		1298010	0					
ANR	1298360	Callee	TEST_BIT		1298010	0					
ANR	1298361	Identifier	TEST_BIT		1298010	0					
ANR	1298362	ArgumentList	bytes [ 0 ]		1298010	1					
ANR	1298363	Argument	bytes [ 0 ]		1298010	0					
ANR	1298364	ArrayIndexing	bytes [ 0 ]		1298010	0					
ANR	1298365	Identifier	bytes		1298010	0					
ANR	1298366	PrimaryExpression	0		1298010	1					
ANR	1298367	Argument	6		1298010	1					
ANR	1298368	PrimaryExpression	6		1298010	0					
ANR	1298369	CompoundStatement		37:29:1063:1063	1298010	1					
ANR	1298370	ExpressionStatement	"decode_index32 ( bytes + ret , & idx )"	711:3:17997:18030	1298010	0	True				
ANR	1298371	CallExpression	"decode_index32 ( bytes + ret , & idx )"		1298010	0					
ANR	1298372	Callee	decode_index32		1298010	0					
ANR	1298373	Identifier	decode_index32		1298010	0					
ANR	1298374	ArgumentList	bytes + ret		1298010	1					
ANR	1298375	Argument	bytes + ret		1298010	0					
ANR	1298376	AdditiveExpression	bytes + ret		1298010	0		+			
ANR	1298377	Identifier	bytes		1298010	0					
ANR	1298378	Identifier	ret		1298010	1					
ANR	1298379	Argument	& idx		1298010	1					
ANR	1298380	UnaryOperationExpression	& idx		1298010	0					
ANR	1298381	UnaryOperator	&		1298010	0					
ANR	1298382	Identifier	idx		1298010	1					
ANR	1298383	ExpressionStatement	sign = idx . sign ? '+' : '-'	712:3:18035:18062	1298010	1	True				
ANR	1298384	AssignmentExpression	sign = idx . sign ? '+' : '-'		1298010	0		=			
ANR	1298385	Identifier	sign		1298010	0					
ANR	1298386	ConditionalExpression	idx . sign ? '+' : '-'		1298010	1					
ANR	1298387	Condition	idx . sign		1298010	0					
ANR	1298388	MemberAccess	idx . sign		1298010	0					
ANR	1298389	Identifier	idx		1298010	0					
ANR	1298390	Identifier	sign		1298010	1					
ANR	1298391	PrimaryExpression	'+'		1298010	1					
ANR	1298392	PrimaryExpression	'-'		1298010	2					
ANR	1298393	ExpressionStatement	"snprintf ( indx2 , 32 , ""(%c%u, %c%u)"" , sign , idx . n , sign , idx . c )"	713:3:18067:18128	1298010	2	True				
ANR	1298394	CallExpression	"snprintf ( indx2 , 32 , ""(%c%u, %c%u)"" , sign , idx . n , sign , idx . c )"		1298010	0					
ANR	1298395	Callee	snprintf		1298010	0					
ANR	1298396	Identifier	snprintf		1298010	0					
ANR	1298397	ArgumentList	indx2		1298010	1					
ANR	1298398	Argument	indx2		1298010	0					
ANR	1298399	Identifier	indx2		1298010	0					
ANR	1298400	Argument	32		1298010	1					
ANR	1298401	PrimaryExpression	32		1298010	0					
ANR	1298402	Argument	"""(%c%u, %c%u)"""		1298010	2					
ANR	1298403	PrimaryExpression	"""(%c%u, %c%u)"""		1298010	0					
ANR	1298404	Argument	sign		1298010	3					
ANR	1298405	Identifier	sign		1298010	0					
ANR	1298406	Argument	idx . n		1298010	4					
ANR	1298407	MemberAccess	idx . n		1298010	0					
ANR	1298408	Identifier	idx		1298010	0					
ANR	1298409	Identifier	n		1298010	1					
ANR	1298410	Argument	sign		1298010	5					
ANR	1298411	Identifier	sign		1298010	0					
ANR	1298412	Argument	idx . c		1298010	6					
ANR	1298413	MemberAccess	idx . c		1298010	0					
ANR	1298414	Identifier	idx		1298010	0					
ANR	1298415	Identifier	c		1298010	1					
ANR	1298416	ExpressionStatement	ret += 4	714:3:18133:18141	1298010	3	True				
ANR	1298417	AssignmentExpression	ret += 4		1298010	0		+=			
ANR	1298418	Identifier	ret		1298010	0					
ANR	1298419	PrimaryExpression	4		1298010	1					
ANR	1298420	ExpressionStatement	"CHK_SNPRINTF ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""%s%s, %s%s"" , op1c , indx1 , op2c , indx2 )"	718:1:18152:18241	1298010	12	True				
ANR	1298421	CallExpression	"CHK_SNPRINTF ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""%s%s, %s%s"" , op1c , indx1 , op2c , indx2 )"		1298010	0					
ANR	1298422	Callee	CHK_SNPRINTF		1298010	0					
ANR	1298423	Identifier	CHK_SNPRINTF		1298010	0					
ANR	1298424	ArgumentList	cmd -> operands		1298010	1					
ANR	1298425	Argument	cmd -> operands		1298010	0					
ANR	1298426	PtrMemberAccess	cmd -> operands		1298010	0					
ANR	1298427	Identifier	cmd		1298010	0					
ANR	1298428	Identifier	operands		1298010	1					
ANR	1298429	Argument	EBC_OPERANDS_MAXLEN		1298010	1					
ANR	1298430	Identifier	EBC_OPERANDS_MAXLEN		1298010	0					
ANR	1298431	Argument	"""%s%s, %s%s"""		1298010	2					
ANR	1298432	PrimaryExpression	"""%s%s, %s%s"""		1298010	0					
ANR	1298433	Argument	op1c		1298010	3					
ANR	1298434	Identifier	op1c		1298010	0					
ANR	1298435	Argument	indx1		1298010	4					
ANR	1298436	Identifier	indx1		1298010	0					
ANR	1298437	Argument	op2c		1298010	5					
ANR	1298438	Identifier	op2c		1298010	0					
ANR	1298439	Argument	indx2		1298010	6					
ANR	1298440	Identifier	indx2		1298010	0					
ANR	1298441	ReturnStatement	return ret ;	719:1:18244:18254	1298010	13	True				
ANR	1298442	Identifier	ret		1298010	0					
ANR	1298443	ReturnType	static int		1298010	1					
ANR	1298444	Identifier	decode_movn		1298010	2					
ANR	1298445	ParameterList	"const ut8 * bytes , ebc_command_t * cmd"		1298010	3					
ANR	1298446	Parameter	const ut8 * bytes	674:23:16890:16905	1298010	0	True				
ANR	1298447	ParameterType	const ut8 *		1298010	0					
ANR	1298448	Identifier	bytes		1298010	1					
ANR	1298449	Parameter	ebc_command_t * cmd	674:41:16908:16925	1298010	1	True				
ANR	1298450	ParameterType	ebc_command_t *		1298010	0					
ANR	1298451	Identifier	cmd		1298010	1					
ANR	1298452	CFGEntryNode	ENTRY		1298010		True				
ANR	1298453	CFGExitNode	EXIT		1298010		True				
ANR	1298454	Symbol	EBC_OPERANDS_MAXLEN		1298010						
ANR	1298455	Symbol	op1c		1298010						
ANR	1298456	Symbol	EBC_INSTR_MAXLEN		1298010						
ANR	1298457	Symbol	sign		1298010						
ANR	1298458	Symbol	* bytes		1298010						
ANR	1298459	Symbol	* instr_names		1298010						
ANR	1298460	Symbol	cmd -> operands		1298010						
ANR	1298461	Symbol	idx . sign		1298010						
ANR	1298462	Symbol	* EBC_OPCODE_MASK		1298010						
ANR	1298463	Symbol	* cmd		1298010						
ANR	1298464	Symbol	cmd -> instr		1298010						
ANR	1298465	Symbol	TEST_BIT		1298010						
ANR	1298466	Symbol	ret		1298010						
ANR	1298467	Symbol	* * bytes		1298010						
ANR	1298468	Symbol	indx2		1298010						
ANR	1298469	Symbol	indx1		1298010						
ANR	1298470	Symbol	& idx		1298010						
ANR	1298471	Symbol	idx . n		1298010						
ANR	1298472	Symbol	op2c		1298010						
ANR	1298473	Symbol	op2		1298010						
ANR	1298474	Symbol	op1		1298010						
ANR	1298475	Symbol	idx . c		1298010						
ANR	1298476	Symbol	instr_names		1298010						
ANR	1298477	Symbol	bytes		1298010						
ANR	1298478	Symbol	cmd		1298010						
ANR	1298479	Symbol	EBC_MOVNW		1298010						
ANR	1298480	Symbol	idx		1298010						
ANR	1298481	Symbol	EBC_OPCODE_MASK		1298010						
ANR	1298482	Function	decode_movi	722:0:18259:19531							
ANR	1298483	FunctionDef	"decode_movi (const ut8 * bytes , ebc_command_t * cmd)"		1298482	0					
ANR	1298484	CompoundStatement		722:61:18320:19531	1298482	0					
ANR	1298485	IdentifierDeclStatement	int ret = 2 ;	723:1:18323:18334	1298482	0	True				
ANR	1298486	IdentifierDecl	ret = 2		1298482	0					
ANR	1298487	IdentifierDeclType	int		1298482	0					
ANR	1298488	Identifier	ret		1298482	1					
ANR	1298489	AssignmentExpression	ret = 2		1298482	2		=			
ANR	1298490	Identifier	ret		1298482	0					
ANR	1298491	PrimaryExpression	2		1298482	1					
ANR	1298492	IdentifierDeclStatement	"char p1 = 0 , p2 = 0 ;"	724:1:18337:18356	1298482	1	True				
ANR	1298493	IdentifierDecl	p1 = 0		1298482	0					
ANR	1298494	IdentifierDeclType	char		1298482	0					
ANR	1298495	Identifier	p1		1298482	1					
ANR	1298496	AssignmentExpression	p1 = 0		1298482	2		=			
ANR	1298497	Identifier	p1		1298482	0					
ANR	1298498	PrimaryExpression	0		1298482	1					
ANR	1298499	IdentifierDecl	p2 = 0		1298482	1					
ANR	1298500	IdentifierDeclType	char		1298482	0					
ANR	1298501	Identifier	p2		1298482	1					
ANR	1298502	AssignmentExpression	p2 = 0		1298482	2		=			
ANR	1298503	Identifier	p2		1298482	0					
ANR	1298504	PrimaryExpression	0		1298482	1					
ANR	1298505	IdentifierDeclStatement	char indx [ 32 ] = { 0 } ;	725:1:18359:18378	1298482	2	True				
ANR	1298506	IdentifierDecl	indx [ 32 ] = { 0 }		1298482	0					
ANR	1298507	IdentifierDeclType	char [ 32 ]		1298482	0					
ANR	1298508	Identifier	indx		1298482	1					
ANR	1298509	PrimaryExpression	32		1298482	2					
ANR	1298510	AssignmentExpression	indx [ 32 ] = { 0 }		1298482	3		=			
ANR	1298511	Identifier	indx		1298482	0					
ANR	1298512	InitializerList	0		1298482	1					
ANR	1298513	PrimaryExpression	0		1298482	0					
ANR	1298514	IdentifierDeclStatement	char op1 [ 32 ] ;	726:1:18381:18393	1298482	3	True				
ANR	1298515	IdentifierDecl	op1 [ 32 ]		1298482	0					
ANR	1298516	IdentifierDeclType	char [ 32 ]		1298482	0					
ANR	1298517	Identifier	op1		1298482	1					
ANR	1298518	PrimaryExpression	32		1298482	2					
ANR	1298519	IdentifierDeclStatement	unsigned long immed = 0 ;	727:1:18396:18419	1298482	4	True				
ANR	1298520	IdentifierDecl	immed = 0		1298482	0					
ANR	1298521	IdentifierDeclType	unsigned long		1298482	0					
ANR	1298522	Identifier	immed		1298482	1					
ANR	1298523	AssignmentExpression	immed = 0		1298482	2		=			
ANR	1298524	Identifier	immed		1298482	0					
ANR	1298525	PrimaryExpression	0		1298482	1					
ANR	1298526	SwitchStatement	switch ( bytes [ 0 ] >> 6 )		1298482	5					
ANR	1298527	Condition	bytes [ 0 ] >> 6	729:9:18431:18443	1298482	0	True				
ANR	1298528	ShiftExpression	bytes [ 0 ] >> 6		1298482	0		>>			
ANR	1298529	ArrayIndexing	bytes [ 0 ]		1298482	0					
ANR	1298530	Identifier	bytes		1298482	0					
ANR	1298531	PrimaryExpression	0		1298482	1					
ANR	1298532	PrimaryExpression	6		1298482	1					
ANR	1298533	CompoundStatement		8:24:125:125	1298482	1					
ANR	1298534	Label	case 0 :	730:1:18449:18455	1298482	0	True				
ANR	1298535	ExpressionStatement	ret = - 1	730:9:18457:18465	1298482	1	True				
ANR	1298536	AssignmentExpression	ret = - 1		1298482	0		=			
ANR	1298537	Identifier	ret		1298482	0					
ANR	1298538	UnaryOperationExpression	- 1		1298482	1					
ANR	1298539	UnaryOperator	-		1298482	0					
ANR	1298540	PrimaryExpression	1		1298482	1					
ANR	1298541	BreakStatement	break ;	730:19:18467:18472	1298482	2	True				
ANR	1298542	Label	case 1 :	731:1:18475:18481	1298482	3	True				
ANR	1298543	ExpressionStatement	p2 = 'w'	731:9:18483:18491	1298482	4	True				
ANR	1298544	AssignmentExpression	p2 = 'w'		1298482	0		=			
ANR	1298545	Identifier	p2		1298482	0					
ANR	1298546	PrimaryExpression	'w'		1298482	1					
ANR	1298547	BreakStatement	break ;	731:19:18493:18498	1298482	5	True				
ANR	1298548	Label	case 2 :	732:1:18501:18507	1298482	6	True				
ANR	1298549	ExpressionStatement	p2 = 'd'	732:9:18509:18517	1298482	7	True				
ANR	1298550	AssignmentExpression	p2 = 'd'		1298482	0		=			
ANR	1298551	Identifier	p2		1298482	0					
ANR	1298552	PrimaryExpression	'd'		1298482	1					
ANR	1298553	BreakStatement	break ;	732:19:18519:18524	1298482	8	True				
ANR	1298554	Label	case 3 :	733:1:18527:18533	1298482	9	True				
ANR	1298555	ExpressionStatement	p2 = 'q'	733:9:18535:18543	1298482	10	True				
ANR	1298556	AssignmentExpression	p2 = 'q'		1298482	0		=			
ANR	1298557	Identifier	p2		1298482	0					
ANR	1298558	PrimaryExpression	'q'		1298482	1					
ANR	1298559	BreakStatement	break ;	733:19:18545:18550	1298482	11	True				
ANR	1298560	IfStatement	if ( ret < 0 )		1298482	6					
ANR	1298561	Condition	ret < 0	736:5:18561:18567	1298482	0	True				
ANR	1298562	RelationalExpression	ret < 0		1298482	0		<			
ANR	1298563	Identifier	ret		1298482	0					
ANR	1298564	PrimaryExpression	0		1298482	1					
ANR	1298565	CompoundStatement		15:14:249:249	1298482	1					
ANR	1298566	ReturnStatement	return ret ;	737:2:18574:18584	1298482	0	True				
ANR	1298567	Identifier	ret		1298482	0					
ANR	1298568	SwitchStatement	switch ( ( bytes [ 1 ] >> 4 ) & 0x3 )		1298482	7					
ANR	1298569	Condition	( bytes [ 1 ] >> 4 ) & 0x3	740:9:18599:18619	1298482	0	True				
ANR	1298570	BitAndExpression	( bytes [ 1 ] >> 4 ) & 0x3		1298482	0		&			
ANR	1298571	ShiftExpression	bytes [ 1 ] >> 4		1298482	0		>>			
ANR	1298572	ArrayIndexing	bytes [ 1 ]		1298482	0					
ANR	1298573	Identifier	bytes		1298482	0					
ANR	1298574	PrimaryExpression	1		1298482	1					
ANR	1298575	PrimaryExpression	4		1298482	1					
ANR	1298576	PrimaryExpression	0x3		1298482	1					
ANR	1298577	CompoundStatement		19:32:301:301	1298482	1					
ANR	1298578	Label	case 0 :	741:1:18625:18631	1298482	0	True				
ANR	1298579	ExpressionStatement	p1 = 'b'	741:9:18633:18641	1298482	1	True				
ANR	1298580	AssignmentExpression	p1 = 'b'		1298482	0		=			
ANR	1298581	Identifier	p1		1298482	0					
ANR	1298582	PrimaryExpression	'b'		1298482	1					
ANR	1298583	BreakStatement	break ;	741:19:18643:18648	1298482	2	True				
ANR	1298584	Label	case 1 :	742:1:18651:18657	1298482	3	True				
ANR	1298585	ExpressionStatement	p1 = 'w'	742:9:18659:18667	1298482	4	True				
ANR	1298586	AssignmentExpression	p1 = 'w'		1298482	0		=			
ANR	1298587	Identifier	p1		1298482	0					
ANR	1298588	PrimaryExpression	'w'		1298482	1					
ANR	1298589	BreakStatement	break ;	742:19:18669:18674	1298482	5	True				
ANR	1298590	Label	case 2 :	743:1:18677:18683	1298482	6	True				
ANR	1298591	ExpressionStatement	p1 = 'd'	743:9:18685:18693	1298482	7	True				
ANR	1298592	AssignmentExpression	p1 = 'd'		1298482	0		=			
ANR	1298593	Identifier	p1		1298482	0					
ANR	1298594	PrimaryExpression	'd'		1298482	1					
ANR	1298595	BreakStatement	break ;	743:19:18695:18700	1298482	8	True				
ANR	1298596	Label	case 3 :	744:1:18703:18709	1298482	9	True				
ANR	1298597	ExpressionStatement	p1 = 'q'	744:9:18711:18719	1298482	10	True				
ANR	1298598	AssignmentExpression	p1 = 'q'		1298482	0		=			
ANR	1298599	Identifier	p1		1298482	0					
ANR	1298600	PrimaryExpression	'q'		1298482	1					
ANR	1298601	BreakStatement	break ;	744:19:18721:18726	1298482	11	True				
ANR	1298602	ExpressionStatement	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s%c%c"" , instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ] , p1 , p2 )"	747:1:18733:18833	1298482	8	True				
ANR	1298603	CallExpression	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s%c%c"" , instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ] , p1 , p2 )"		1298482	0					
ANR	1298604	Callee	snprintf		1298482	0					
ANR	1298605	Identifier	snprintf		1298482	0					
ANR	1298606	ArgumentList	cmd -> instr		1298482	1					
ANR	1298607	Argument	cmd -> instr		1298482	0					
ANR	1298608	PtrMemberAccess	cmd -> instr		1298482	0					
ANR	1298609	Identifier	cmd		1298482	0					
ANR	1298610	Identifier	instr		1298482	1					
ANR	1298611	Argument	EBC_INSTR_MAXLEN		1298482	1					
ANR	1298612	Identifier	EBC_INSTR_MAXLEN		1298482	0					
ANR	1298613	Argument	"""%s%c%c"""		1298482	2					
ANR	1298614	PrimaryExpression	"""%s%c%c"""		1298482	0					
ANR	1298615	Argument	instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ]		1298482	3					
ANR	1298616	ArrayIndexing	instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ]		1298482	0					
ANR	1298617	Identifier	instr_names		1298482	0					
ANR	1298618	BitAndExpression	bytes [ 0 ] & EBC_OPCODE_MASK		1298482	1		&			
ANR	1298619	ArrayIndexing	bytes [ 0 ]		1298482	0					
ANR	1298620	Identifier	bytes		1298482	0					
ANR	1298621	PrimaryExpression	0		1298482	1					
ANR	1298622	Identifier	EBC_OPCODE_MASK		1298482	1					
ANR	1298623	Argument	p1		1298482	4					
ANR	1298624	Identifier	p1		1298482	0					
ANR	1298625	Argument	p2		1298482	5					
ANR	1298626	Identifier	p2		1298482	0					
ANR	1298627	IfStatement	"if ( TEST_BIT ( bytes [ 1 ] , 6 ) )"		1298482	9					
ANR	1298628	Condition	"TEST_BIT ( bytes [ 1 ] , 6 )"	750:5:18841:18861	1298482	0	True				
ANR	1298629	CallExpression	"TEST_BIT ( bytes [ 1 ] , 6 )"		1298482	0					
ANR	1298630	Callee	TEST_BIT		1298482	0					
ANR	1298631	Identifier	TEST_BIT		1298482	0					
ANR	1298632	ArgumentList	bytes [ 1 ]		1298482	1					
ANR	1298633	Argument	bytes [ 1 ]		1298482	0					
ANR	1298634	ArrayIndexing	bytes [ 1 ]		1298482	0					
ANR	1298635	Identifier	bytes		1298482	0					
ANR	1298636	PrimaryExpression	1		1298482	1					
ANR	1298637	Argument	6		1298482	1					
ANR	1298638	PrimaryExpression	6		1298482	0					
ANR	1298639	CompoundStatement		31:2:560:575	1298482	1					
ANR	1298640	IdentifierDeclStatement	char sign ;	751:2:18868:18877	1298482	0	True				
ANR	1298641	IdentifierDecl	sign		1298482	0					
ANR	1298642	IdentifierDeclType	char		1298482	0					
ANR	1298643	Identifier	sign		1298482	1					
ANR	1298644	IdentifierDeclStatement	ebc_index_t idx ;	752:2:18881:18896	1298482	1	True				
ANR	1298645	IdentifierDecl	idx		1298482	0					
ANR	1298646	IdentifierDeclType	ebc_index_t		1298482	0					
ANR	1298647	Identifier	idx		1298482	1					
ANR	1298648	ExpressionStatement	"decode_index16 ( bytes + 2 , & idx )"	754:2:18901:18932	1298482	2	True				
ANR	1298649	CallExpression	"decode_index16 ( bytes + 2 , & idx )"		1298482	0					
ANR	1298650	Callee	decode_index16		1298482	0					
ANR	1298651	Identifier	decode_index16		1298482	0					
ANR	1298652	ArgumentList	bytes + 2		1298482	1					
ANR	1298653	Argument	bytes + 2		1298482	0					
ANR	1298654	AdditiveExpression	bytes + 2		1298482	0		+			
ANR	1298655	Identifier	bytes		1298482	0					
ANR	1298656	PrimaryExpression	2		1298482	1					
ANR	1298657	Argument	& idx		1298482	1					
ANR	1298658	UnaryOperationExpression	& idx		1298482	0					
ANR	1298659	UnaryOperator	&		1298482	0					
ANR	1298660	Identifier	idx		1298482	1					
ANR	1298661	ExpressionStatement	sign = idx . sign ? '+' : '-'	755:2:18936:18963	1298482	3	True				
ANR	1298662	AssignmentExpression	sign = idx . sign ? '+' : '-'		1298482	0		=			
ANR	1298663	Identifier	sign		1298482	0					
ANR	1298664	ConditionalExpression	idx . sign ? '+' : '-'		1298482	1					
ANR	1298665	Condition	idx . sign		1298482	0					
ANR	1298666	MemberAccess	idx . sign		1298482	0					
ANR	1298667	Identifier	idx		1298482	0					
ANR	1298668	Identifier	sign		1298482	1					
ANR	1298669	PrimaryExpression	'+'		1298482	1					
ANR	1298670	PrimaryExpression	'-'		1298482	2					
ANR	1298671	ExpressionStatement	"snprintf ( indx , 32 , ""(%c%u, %c%u)"" , sign , idx . n , sign , idx . c )"	757:2:18968:19028	1298482	4	True				
ANR	1298672	CallExpression	"snprintf ( indx , 32 , ""(%c%u, %c%u)"" , sign , idx . n , sign , idx . c )"		1298482	0					
ANR	1298673	Callee	snprintf		1298482	0					
ANR	1298674	Identifier	snprintf		1298482	0					
ANR	1298675	ArgumentList	indx		1298482	1					
ANR	1298676	Argument	indx		1298482	0					
ANR	1298677	Identifier	indx		1298482	0					
ANR	1298678	Argument	32		1298482	1					
ANR	1298679	PrimaryExpression	32		1298482	0					
ANR	1298680	Argument	"""(%c%u, %c%u)"""		1298482	2					
ANR	1298681	PrimaryExpression	"""(%c%u, %c%u)"""		1298482	0					
ANR	1298682	Argument	sign		1298482	3					
ANR	1298683	Identifier	sign		1298482	0					
ANR	1298684	Argument	idx . n		1298482	4					
ANR	1298685	MemberAccess	idx . n		1298482	0					
ANR	1298686	Identifier	idx		1298482	0					
ANR	1298687	Identifier	n		1298482	1					
ANR	1298688	Argument	sign		1298482	5					
ANR	1298689	Identifier	sign		1298482	0					
ANR	1298690	Argument	idx . c		1298482	6					
ANR	1298691	MemberAccess	idx . c		1298482	0					
ANR	1298692	Identifier	idx		1298482	0					
ANR	1298693	Identifier	c		1298482	1					
ANR	1298694	ExpressionStatement	ret += 2	759:2:19033:19041	1298482	5	True				
ANR	1298695	AssignmentExpression	ret += 2		1298482	0		+=			
ANR	1298696	Identifier	ret		1298482	0					
ANR	1298697	PrimaryExpression	2		1298482	1					
ANR	1298698	SwitchStatement	switch ( p2 )		1298482	10					
ANR	1298699	Condition	p2	762:9:19056:19057	1298482	0	True				
ANR	1298700	Identifier	p2		1298482	0					
ANR	1298701	CompoundStatement		44:1:762:769	1298482	1					
ANR	1298702	IdentifierDeclStatement	ut16 i1 ;	763:1:19063:19070	1298482	0	True				
ANR	1298703	IdentifierDecl	i1		1298482	0					
ANR	1298704	IdentifierDeclType	ut16		1298482	0					
ANR	1298705	Identifier	i1		1298482	1					
ANR	1298706	IdentifierDeclStatement	ut32 i2 ;	764:1:19073:19080	1298482	1	True				
ANR	1298707	IdentifierDecl	i2		1298482	0					
ANR	1298708	IdentifierDeclType	ut32		1298482	0					
ANR	1298709	Identifier	i2		1298482	1					
ANR	1298710	IdentifierDeclStatement	ut64 i3 ;	765:1:19083:19090	1298482	2	True				
ANR	1298711	IdentifierDecl	i3		1298482	0					
ANR	1298712	IdentifierDeclType	ut64		1298482	0					
ANR	1298713	Identifier	i3		1298482	1					
ANR	1298714	Label	case 'w' :	766:1:19093:19101	1298482	3	True				
ANR	1298715	ExpressionStatement	i1 = * ( ut16 * ) ( bytes + ret )	767:2:19105:19131	1298482	4	True				
ANR	1298716	AssignmentExpression	i1 = * ( ut16 * ) ( bytes + ret )		1298482	0		=			
ANR	1298717	Identifier	i1		1298482	0					
ANR	1298718	UnaryOperationExpression	* ( ut16 * ) ( bytes + ret )		1298482	1					
ANR	1298719	UnaryOperator	*		1298482	0					
ANR	1298720	CastExpression	( ut16 * ) ( bytes + ret )		1298482	1					
ANR	1298721	CastTarget	ut16 *		1298482	0					
ANR	1298722	AdditiveExpression	bytes + ret		1298482	1		+			
ANR	1298723	Identifier	bytes		1298482	0					
ANR	1298724	Identifier	ret		1298482	1					
ANR	1298725	ExpressionStatement	immed = ( unsigned long ) i1	768:2:19135:19160	1298482	5	True				
ANR	1298726	AssignmentExpression	immed = ( unsigned long ) i1		1298482	0		=			
ANR	1298727	Identifier	immed		1298482	0					
ANR	1298728	CastExpression	( unsigned long ) i1		1298482	1					
ANR	1298729	CastTarget	unsigned long		1298482	0					
ANR	1298730	Identifier	i1		1298482	1					
ANR	1298731	ExpressionStatement	ret += 2	769:2:19164:19172	1298482	6	True				
ANR	1298732	AssignmentExpression	ret += 2		1298482	0		+=			
ANR	1298733	Identifier	ret		1298482	0					
ANR	1298734	PrimaryExpression	2		1298482	1					
ANR	1298735	BreakStatement	break ;	770:2:19176:19181	1298482	7	True				
ANR	1298736	Label	case 'd' :	771:1:19184:19192	1298482	8	True				
ANR	1298737	ExpressionStatement	i2 = * ( ut32 * ) ( bytes + ret )	772:2:19196:19222	1298482	9	True				
ANR	1298738	AssignmentExpression	i2 = * ( ut32 * ) ( bytes + ret )		1298482	0		=			
ANR	1298739	Identifier	i2		1298482	0					
ANR	1298740	UnaryOperationExpression	* ( ut32 * ) ( bytes + ret )		1298482	1					
ANR	1298741	UnaryOperator	*		1298482	0					
ANR	1298742	CastExpression	( ut32 * ) ( bytes + ret )		1298482	1					
ANR	1298743	CastTarget	ut32 *		1298482	0					
ANR	1298744	AdditiveExpression	bytes + ret		1298482	1		+			
ANR	1298745	Identifier	bytes		1298482	0					
ANR	1298746	Identifier	ret		1298482	1					
ANR	1298747	ExpressionStatement	immed = ( unsigned long ) i2	773:2:19226:19251	1298482	10	True				
ANR	1298748	AssignmentExpression	immed = ( unsigned long ) i2		1298482	0		=			
ANR	1298749	Identifier	immed		1298482	0					
ANR	1298750	CastExpression	( unsigned long ) i2		1298482	1					
ANR	1298751	CastTarget	unsigned long		1298482	0					
ANR	1298752	Identifier	i2		1298482	1					
ANR	1298753	ExpressionStatement	ret += 4	774:2:19255:19263	1298482	11	True				
ANR	1298754	AssignmentExpression	ret += 4		1298482	0		+=			
ANR	1298755	Identifier	ret		1298482	0					
ANR	1298756	PrimaryExpression	4		1298482	1					
ANR	1298757	BreakStatement	break ;	775:2:19267:19272	1298482	12	True				
ANR	1298758	Label	case 'q' :	776:1:19275:19283	1298482	13	True				
ANR	1298759	ExpressionStatement	i3 = * ( ut64 * ) ( bytes + ret )	777:2:19287:19313	1298482	14	True				
ANR	1298760	AssignmentExpression	i3 = * ( ut64 * ) ( bytes + ret )		1298482	0		=			
ANR	1298761	Identifier	i3		1298482	0					
ANR	1298762	UnaryOperationExpression	* ( ut64 * ) ( bytes + ret )		1298482	1					
ANR	1298763	UnaryOperator	*		1298482	0					
ANR	1298764	CastExpression	( ut64 * ) ( bytes + ret )		1298482	1					
ANR	1298765	CastTarget	ut64 *		1298482	0					
ANR	1298766	AdditiveExpression	bytes + ret		1298482	1		+			
ANR	1298767	Identifier	bytes		1298482	0					
ANR	1298768	Identifier	ret		1298482	1					
ANR	1298769	ExpressionStatement	immed = i3	778:2:19317:19327	1298482	15	True				
ANR	1298770	AssignmentExpression	immed = i3		1298482	0		=			
ANR	1298771	Identifier	immed		1298482	0					
ANR	1298772	Identifier	i3		1298482	1					
ANR	1298773	ExpressionStatement	ret += 8	779:2:19331:19339	1298482	16	True				
ANR	1298774	AssignmentExpression	ret += 8		1298482	0		+=			
ANR	1298775	Identifier	ret		1298482	0					
ANR	1298776	PrimaryExpression	8		1298482	1					
ANR	1298777	BreakStatement	break ;	780:2:19343:19348	1298482	17	True				
ANR	1298778	ExpressionStatement	"snprintf ( op1 , 32 , ""%sr%u"" , TEST_BIT ( bytes [ 1 ] , 3 ) ? ""@"" : """" , bytes [ 1 ] & 0x7 )"	783:1:19355:19433	1298482	11	True				
ANR	1298779	CallExpression	"snprintf ( op1 , 32 , ""%sr%u"" , TEST_BIT ( bytes [ 1 ] , 3 ) ? ""@"" : """" , bytes [ 1 ] & 0x7 )"		1298482	0					
ANR	1298780	Callee	snprintf		1298482	0					
ANR	1298781	Identifier	snprintf		1298482	0					
ANR	1298782	ArgumentList	op1		1298482	1					
ANR	1298783	Argument	op1		1298482	0					
ANR	1298784	Identifier	op1		1298482	0					
ANR	1298785	Argument	32		1298482	1					
ANR	1298786	PrimaryExpression	32		1298482	0					
ANR	1298787	Argument	"""%sr%u"""		1298482	2					
ANR	1298788	PrimaryExpression	"""%sr%u"""		1298482	0					
ANR	1298789	Argument	"TEST_BIT ( bytes [ 1 ] , 3 ) ? ""@"" : """""		1298482	3					
ANR	1298790	ConditionalExpression	"TEST_BIT ( bytes [ 1 ] , 3 ) ? ""@"" : """""		1298482	0					
ANR	1298791	Condition	"TEST_BIT ( bytes [ 1 ] , 3 )"		1298482	0					
ANR	1298792	CallExpression	"TEST_BIT ( bytes [ 1 ] , 3 )"		1298482	0					
ANR	1298793	Callee	TEST_BIT		1298482	0					
ANR	1298794	Identifier	TEST_BIT		1298482	0					
ANR	1298795	ArgumentList	bytes [ 1 ]		1298482	1					
ANR	1298796	Argument	bytes [ 1 ]		1298482	0					
ANR	1298797	ArrayIndexing	bytes [ 1 ]		1298482	0					
ANR	1298798	Identifier	bytes		1298482	0					
ANR	1298799	PrimaryExpression	1		1298482	1					
ANR	1298800	Argument	3		1298482	1					
ANR	1298801	PrimaryExpression	3		1298482	0					
ANR	1298802	PrimaryExpression	"""@"""		1298482	1					
ANR	1298803	PrimaryExpression	""""""		1298482	2					
ANR	1298804	Argument	bytes [ 1 ] & 0x7		1298482	4					
ANR	1298805	BitAndExpression	bytes [ 1 ] & 0x7		1298482	0		&			
ANR	1298806	ArrayIndexing	bytes [ 1 ]		1298482	0					
ANR	1298807	Identifier	bytes		1298482	0					
ANR	1298808	PrimaryExpression	1		1298482	1					
ANR	1298809	PrimaryExpression	0x7		1298482	1					
ANR	1298810	ExpressionStatement	"CHK_SNPRINTF ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""%s%s, %lu"" , op1 , indx , immed )"	784:1:19436:19516	1298482	12	True				
ANR	1298811	CallExpression	"CHK_SNPRINTF ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""%s%s, %lu"" , op1 , indx , immed )"		1298482	0					
ANR	1298812	Callee	CHK_SNPRINTF		1298482	0					
ANR	1298813	Identifier	CHK_SNPRINTF		1298482	0					
ANR	1298814	ArgumentList	cmd -> operands		1298482	1					
ANR	1298815	Argument	cmd -> operands		1298482	0					
ANR	1298816	PtrMemberAccess	cmd -> operands		1298482	0					
ANR	1298817	Identifier	cmd		1298482	0					
ANR	1298818	Identifier	operands		1298482	1					
ANR	1298819	Argument	EBC_OPERANDS_MAXLEN		1298482	1					
ANR	1298820	Identifier	EBC_OPERANDS_MAXLEN		1298482	0					
ANR	1298821	Argument	"""%s%s, %lu"""		1298482	2					
ANR	1298822	PrimaryExpression	"""%s%s, %lu"""		1298482	0					
ANR	1298823	Argument	op1		1298482	3					
ANR	1298824	Identifier	op1		1298482	0					
ANR	1298825	Argument	indx		1298482	4					
ANR	1298826	Identifier	indx		1298482	0					
ANR	1298827	Argument	immed		1298482	5					
ANR	1298828	Identifier	immed		1298482	0					
ANR	1298829	ReturnStatement	return ret ;	785:1:19519:19529	1298482	13	True				
ANR	1298830	Identifier	ret		1298482	0					
ANR	1298831	ReturnType	static int		1298482	1					
ANR	1298832	Identifier	decode_movi		1298482	2					
ANR	1298833	ParameterList	"const ut8 * bytes , ebc_command_t * cmd"		1298482	3					
ANR	1298834	Parameter	const ut8 * bytes	722:23:18282:18297	1298482	0	True				
ANR	1298835	ParameterType	const ut8 *		1298482	0					
ANR	1298836	Identifier	bytes		1298482	1					
ANR	1298837	Parameter	ebc_command_t * cmd	722:41:18300:18317	1298482	1	True				
ANR	1298838	ParameterType	ebc_command_t *		1298482	0					
ANR	1298839	Identifier	cmd		1298482	1					
ANR	1298840	CFGEntryNode	ENTRY		1298482		True				
ANR	1298841	CFGExitNode	EXIT		1298482		True				
ANR	1298842	Symbol	p1		1298482						
ANR	1298843	Symbol	p2		1298482						
ANR	1298844	Symbol	EBC_OPERANDS_MAXLEN		1298482						
ANR	1298845	Symbol	EBC_INSTR_MAXLEN		1298482						
ANR	1298846	Symbol	indx		1298482						
ANR	1298847	Symbol	sign		1298482						
ANR	1298848	Symbol	* bytes		1298482						
ANR	1298849	Symbol	* instr_names		1298482						
ANR	1298850	Symbol	* ret		1298482						
ANR	1298851	Symbol	immed		1298482						
ANR	1298852	Symbol	cmd -> operands		1298482						
ANR	1298853	Symbol	idx . sign		1298482						
ANR	1298854	Symbol	* EBC_OPCODE_MASK		1298482						
ANR	1298855	Symbol	* cmd		1298482						
ANR	1298856	Symbol	* ( ut64 * ) ( bytes + ret )		1298482						
ANR	1298857	Symbol	cmd -> instr		1298482						
ANR	1298858	Symbol	* ( ut16 * ) ( bytes + ret )		1298482						
ANR	1298859	Symbol	TEST_BIT		1298482						
ANR	1298860	Symbol	ret		1298482						
ANR	1298861	Symbol	* * bytes		1298482						
ANR	1298862	Symbol	& idx		1298482						
ANR	1298863	Symbol	idx . n		1298482						
ANR	1298864	Symbol	i1		1298482						
ANR	1298865	Symbol	i2		1298482						
ANR	1298866	Symbol	i3		1298482						
ANR	1298867	Symbol	* ( ut32 * ) ( bytes + ret )		1298482						
ANR	1298868	Symbol	op1		1298482						
ANR	1298869	Symbol	idx . c		1298482						
ANR	1298870	Symbol	instr_names		1298482						
ANR	1298871	Symbol	bytes		1298482						
ANR	1298872	Symbol	cmd		1298482						
ANR	1298873	Symbol	idx		1298482						
ANR	1298874	Symbol	EBC_OPCODE_MASK		1298482						
ANR	1298875	Function	decode_movin	788:0:19534:20674							
ANR	1298876	FunctionDef	"decode_movin (const ut8 * bytes , ebc_command_t * cmd)"		1298875	0					
ANR	1298877	CompoundStatement		788:62:19596:20674	1298875	0					
ANR	1298878	IdentifierDeclStatement	int ret = 2 ;	789:1:19599:19610	1298875	0	True				
ANR	1298879	IdentifierDecl	ret = 2		1298875	0					
ANR	1298880	IdentifierDeclType	int		1298875	0					
ANR	1298881	Identifier	ret		1298875	1					
ANR	1298882	AssignmentExpression	ret = 2		1298875	2		=			
ANR	1298883	Identifier	ret		1298875	0					
ANR	1298884	PrimaryExpression	2		1298875	1					
ANR	1298885	IdentifierDeclStatement	char p1 = 0 ;	790:1:19613:19624	1298875	1	True				
ANR	1298886	IdentifierDecl	p1 = 0		1298875	0					
ANR	1298887	IdentifierDeclType	char		1298875	0					
ANR	1298888	Identifier	p1		1298875	1					
ANR	1298889	AssignmentExpression	p1 = 0		1298875	2		=			
ANR	1298890	Identifier	p1		1298875	0					
ANR	1298891	PrimaryExpression	0		1298875	1					
ANR	1298892	IdentifierDeclStatement	char indx1 [ 32 ] = { 0 } ;	791:1:19627:19647	1298875	2	True				
ANR	1298893	IdentifierDecl	indx1 [ 32 ] = { 0 }		1298875	0					
ANR	1298894	IdentifierDeclType	char [ 32 ]		1298875	0					
ANR	1298895	Identifier	indx1		1298875	1					
ANR	1298896	PrimaryExpression	32		1298875	2					
ANR	1298897	AssignmentExpression	indx1 [ 32 ] = { 0 }		1298875	3		=			
ANR	1298898	Identifier	indx1		1298875	0					
ANR	1298899	InitializerList	0		1298875	1					
ANR	1298900	PrimaryExpression	0		1298875	0					
ANR	1298901	IdentifierDeclStatement	char indx2 [ 32 ] = { 0 } ;	792:1:19650:19670	1298875	3	True				
ANR	1298902	IdentifierDecl	indx2 [ 32 ] = { 0 }		1298875	0					
ANR	1298903	IdentifierDeclType	char [ 32 ]		1298875	0					
ANR	1298904	Identifier	indx2		1298875	1					
ANR	1298905	PrimaryExpression	32		1298875	2					
ANR	1298906	AssignmentExpression	indx2 [ 32 ] = { 0 }		1298875	3		=			
ANR	1298907	Identifier	indx2		1298875	0					
ANR	1298908	InitializerList	0		1298875	1					
ANR	1298909	PrimaryExpression	0		1298875	0					
ANR	1298910	IdentifierDeclStatement	char op1 [ 32 ] ;	793:1:19673:19685	1298875	4	True				
ANR	1298911	IdentifierDecl	op1 [ 32 ]		1298875	0					
ANR	1298912	IdentifierDeclType	char [ 32 ]		1298875	0					
ANR	1298913	Identifier	op1		1298875	1					
ANR	1298914	PrimaryExpression	32		1298875	2					
ANR	1298915	IdentifierDeclStatement	char sign ;	794:1:19688:19697	1298875	5	True				
ANR	1298916	IdentifierDecl	sign		1298875	0					
ANR	1298917	IdentifierDeclType	char		1298875	0					
ANR	1298918	Identifier	sign		1298875	1					
ANR	1298919	IdentifierDeclStatement	ebc_index_t idx = { 0 } ;	795:1:19700:19721	1298875	6	True				
ANR	1298920	IdentifierDecl	idx = { 0 }		1298875	0					
ANR	1298921	IdentifierDeclType	ebc_index_t		1298875	0					
ANR	1298922	Identifier	idx		1298875	1					
ANR	1298923	AssignmentExpression	idx = { 0 }		1298875	2		=			
ANR	1298924	Identifier	idx		1298875	0					
ANR	1298925	InitializerList	0		1298875	1					
ANR	1298926	PrimaryExpression	0		1298875	0					
ANR	1298927	SwitchStatement	switch ( bytes [ 0 ] >> 6 )		1298875	7					
ANR	1298928	Condition	bytes [ 0 ] >> 6	797:9:19733:19745	1298875	0	True				
ANR	1298929	ShiftExpression	bytes [ 0 ] >> 6		1298875	0		>>			
ANR	1298930	ArrayIndexing	bytes [ 0 ]		1298875	0					
ANR	1298931	Identifier	bytes		1298875	0					
ANR	1298932	PrimaryExpression	0		1298875	1					
ANR	1298933	PrimaryExpression	6		1298875	1					
ANR	1298934	CompoundStatement		10:24:151:151	1298875	1					
ANR	1298935	Label	case 0 :	798:1:19751:19757	1298875	0	True				
ANR	1298936	ExpressionStatement	ret = - 1	798:9:19759:19767	1298875	1	True				
ANR	1298937	AssignmentExpression	ret = - 1		1298875	0		=			
ANR	1298938	Identifier	ret		1298875	0					
ANR	1298939	UnaryOperationExpression	- 1		1298875	1					
ANR	1298940	UnaryOperator	-		1298875	0					
ANR	1298941	PrimaryExpression	1		1298875	1					
ANR	1298942	BreakStatement	break ;	798:19:19769:19774	1298875	2	True				
ANR	1298943	Label	case 1 :	799:1:19777:19783	1298875	3	True				
ANR	1298944	ExpressionStatement	p1 = 'w'	799:9:19785:19793	1298875	4	True				
ANR	1298945	AssignmentExpression	p1 = 'w'		1298875	0		=			
ANR	1298946	Identifier	p1		1298875	0					
ANR	1298947	PrimaryExpression	'w'		1298875	1					
ANR	1298948	BreakStatement	break ;	799:19:19795:19800	1298875	5	True				
ANR	1298949	Label	case 2 :	800:1:19803:19809	1298875	6	True				
ANR	1298950	ExpressionStatement	p1 = 'd'	800:9:19811:19819	1298875	7	True				
ANR	1298951	AssignmentExpression	p1 = 'd'		1298875	0		=			
ANR	1298952	Identifier	p1		1298875	0					
ANR	1298953	PrimaryExpression	'd'		1298875	1					
ANR	1298954	BreakStatement	break ;	800:19:19821:19826	1298875	8	True				
ANR	1298955	Label	case 3 :	801:1:19829:19835	1298875	9	True				
ANR	1298956	ExpressionStatement	p1 = 'q'	801:9:19837:19845	1298875	10	True				
ANR	1298957	AssignmentExpression	p1 = 'q'		1298875	0		=			
ANR	1298958	Identifier	p1		1298875	0					
ANR	1298959	PrimaryExpression	'q'		1298875	1					
ANR	1298960	BreakStatement	break ;	801:19:19847:19852	1298875	11	True				
ANR	1298961	IfStatement	if ( ret < 0 )		1298875	8					
ANR	1298962	Condition	ret < 0	804:5:19863:19869	1298875	0	True				
ANR	1298963	RelationalExpression	ret < 0		1298875	0		<			
ANR	1298964	Identifier	ret		1298875	0					
ANR	1298965	PrimaryExpression	0		1298875	1					
ANR	1298966	CompoundStatement		17:14:275:275	1298875	1					
ANR	1298967	ReturnStatement	return ret ;	805:2:19876:19886	1298875	0	True				
ANR	1298968	Identifier	ret		1298875	0					
ANR	1298969	ExpressionStatement	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s%c"" , instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ] , p1 )"	808:1:19893:19987	1298875	9	True				
ANR	1298970	CallExpression	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s%c"" , instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ] , p1 )"		1298875	0					
ANR	1298971	Callee	snprintf		1298875	0					
ANR	1298972	Identifier	snprintf		1298875	0					
ANR	1298973	ArgumentList	cmd -> instr		1298875	1					
ANR	1298974	Argument	cmd -> instr		1298875	0					
ANR	1298975	PtrMemberAccess	cmd -> instr		1298875	0					
ANR	1298976	Identifier	cmd		1298875	0					
ANR	1298977	Identifier	instr		1298875	1					
ANR	1298978	Argument	EBC_INSTR_MAXLEN		1298875	1					
ANR	1298979	Identifier	EBC_INSTR_MAXLEN		1298875	0					
ANR	1298980	Argument	"""%s%c"""		1298875	2					
ANR	1298981	PrimaryExpression	"""%s%c"""		1298875	0					
ANR	1298982	Argument	instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ]		1298875	3					
ANR	1298983	ArrayIndexing	instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ]		1298875	0					
ANR	1298984	Identifier	instr_names		1298875	0					
ANR	1298985	BitAndExpression	bytes [ 0 ] & EBC_OPCODE_MASK		1298875	1		&			
ANR	1298986	ArrayIndexing	bytes [ 0 ]		1298875	0					
ANR	1298987	Identifier	bytes		1298875	0					
ANR	1298988	PrimaryExpression	0		1298875	1					
ANR	1298989	Identifier	EBC_OPCODE_MASK		1298875	1					
ANR	1298990	Argument	p1		1298875	4					
ANR	1298991	Identifier	p1		1298875	0					
ANR	1298992	IfStatement	"if ( TEST_BIT ( bytes [ 1 ] , 6 ) )"		1298875	10					
ANR	1298993	Condition	"TEST_BIT ( bytes [ 1 ] , 6 )"	811:5:19995:20015	1298875	0	True				
ANR	1298994	CallExpression	"TEST_BIT ( bytes [ 1 ] , 6 )"		1298875	0					
ANR	1298995	Callee	TEST_BIT		1298875	0					
ANR	1298996	Identifier	TEST_BIT		1298875	0					
ANR	1298997	ArgumentList	bytes [ 1 ]		1298875	1					
ANR	1298998	Argument	bytes [ 1 ]		1298875	0					
ANR	1298999	ArrayIndexing	bytes [ 1 ]		1298875	0					
ANR	1299000	Identifier	bytes		1298875	0					
ANR	1299001	PrimaryExpression	1		1298875	1					
ANR	1299002	Argument	6		1298875	1					
ANR	1299003	PrimaryExpression	6		1298875	0					
ANR	1299004	CompoundStatement		24:28:421:421	1298875	1					
ANR	1299005	ExpressionStatement	"decode_index16 ( bytes + 2 , & idx )"	812:2:20022:20053	1298875	0	True				
ANR	1299006	CallExpression	"decode_index16 ( bytes + 2 , & idx )"		1298875	0					
ANR	1299007	Callee	decode_index16		1298875	0					
ANR	1299008	Identifier	decode_index16		1298875	0					
ANR	1299009	ArgumentList	bytes + 2		1298875	1					
ANR	1299010	Argument	bytes + 2		1298875	0					
ANR	1299011	AdditiveExpression	bytes + 2		1298875	0		+			
ANR	1299012	Identifier	bytes		1298875	0					
ANR	1299013	PrimaryExpression	2		1298875	1					
ANR	1299014	Argument	& idx		1298875	1					
ANR	1299015	UnaryOperationExpression	& idx		1298875	0					
ANR	1299016	UnaryOperator	&		1298875	0					
ANR	1299017	Identifier	idx		1298875	1					
ANR	1299018	ExpressionStatement	sign = idx . sign ? '+' : '-'	814:2:20058:20085	1298875	1	True				
ANR	1299019	AssignmentExpression	sign = idx . sign ? '+' : '-'		1298875	0		=			
ANR	1299020	Identifier	sign		1298875	0					
ANR	1299021	ConditionalExpression	idx . sign ? '+' : '-'		1298875	1					
ANR	1299022	Condition	idx . sign		1298875	0					
ANR	1299023	MemberAccess	idx . sign		1298875	0					
ANR	1299024	Identifier	idx		1298875	0					
ANR	1299025	Identifier	sign		1298875	1					
ANR	1299026	PrimaryExpression	'+'		1298875	1					
ANR	1299027	PrimaryExpression	'-'		1298875	2					
ANR	1299028	ExpressionStatement	"snprintf ( indx1 , 32 , ""(%c%u, %c%u)"" , sign , idx . n , sign , idx . c )"	816:2:20090:20155	1298875	2	True				
ANR	1299029	CallExpression	"snprintf ( indx1 , 32 , ""(%c%u, %c%u)"" , sign , idx . n , sign , idx . c )"		1298875	0					
ANR	1299030	Callee	snprintf		1298875	0					
ANR	1299031	Identifier	snprintf		1298875	0					
ANR	1299032	ArgumentList	indx1		1298875	1					
ANR	1299033	Argument	indx1		1298875	0					
ANR	1299034	Identifier	indx1		1298875	0					
ANR	1299035	Argument	32		1298875	1					
ANR	1299036	PrimaryExpression	32		1298875	0					
ANR	1299037	Argument	"""(%c%u, %c%u)"""		1298875	2					
ANR	1299038	PrimaryExpression	"""(%c%u, %c%u)"""		1298875	0					
ANR	1299039	Argument	sign		1298875	3					
ANR	1299040	Identifier	sign		1298875	0					
ANR	1299041	Argument	idx . n		1298875	4					
ANR	1299042	MemberAccess	idx . n		1298875	0					
ANR	1299043	Identifier	idx		1298875	0					
ANR	1299044	Identifier	n		1298875	1					
ANR	1299045	Argument	sign		1298875	5					
ANR	1299046	Identifier	sign		1298875	0					
ANR	1299047	Argument	idx . c		1298875	6					
ANR	1299048	MemberAccess	idx . c		1298875	0					
ANR	1299049	Identifier	idx		1298875	0					
ANR	1299050	Identifier	c		1298875	1					
ANR	1299051	ExpressionStatement	ret += 2	819:2:20160:20168	1298875	3	True				
ANR	1299052	AssignmentExpression	ret += 2		1298875	0		+=			
ANR	1299053	Identifier	ret		1298875	0					
ANR	1299054	PrimaryExpression	2		1298875	1					
ANR	1299055	SwitchStatement	switch ( p1 )		1298875	11					
ANR	1299056	Condition	p1	822:9:20183:20184	1298875	0	True				
ANR	1299057	Identifier	p1		1298875	0					
ANR	1299058	CompoundStatement		35:13:590:590	1298875	1					
ANR	1299059	Label	case 'w' :	823:1:20190:20198	1298875	0	True				
ANR	1299060	ExpressionStatement	"decode_index16 ( bytes + ret , & idx )"	824:2:20202:20235	1298875	1	True				
ANR	1299061	CallExpression	"decode_index16 ( bytes + ret , & idx )"		1298875	0					
ANR	1299062	Callee	decode_index16		1298875	0					
ANR	1299063	Identifier	decode_index16		1298875	0					
ANR	1299064	ArgumentList	bytes + ret		1298875	1					
ANR	1299065	Argument	bytes + ret		1298875	0					
ANR	1299066	AdditiveExpression	bytes + ret		1298875	0		+			
ANR	1299067	Identifier	bytes		1298875	0					
ANR	1299068	Identifier	ret		1298875	1					
ANR	1299069	Argument	& idx		1298875	1					
ANR	1299070	UnaryOperationExpression	& idx		1298875	0					
ANR	1299071	UnaryOperator	&		1298875	0					
ANR	1299072	Identifier	idx		1298875	1					
ANR	1299073	ExpressionStatement	ret += 2	825:2:20239:20247	1298875	2	True				
ANR	1299074	AssignmentExpression	ret += 2		1298875	0		+=			
ANR	1299075	Identifier	ret		1298875	0					
ANR	1299076	PrimaryExpression	2		1298875	1					
ANR	1299077	BreakStatement	break ;	826:2:20251:20256	1298875	3	True				
ANR	1299078	Label	case 'd' :	827:1:20259:20267	1298875	4	True				
ANR	1299079	ExpressionStatement	"decode_index32 ( bytes + ret , & idx )"	828:2:20271:20304	1298875	5	True				
ANR	1299080	CallExpression	"decode_index32 ( bytes + ret , & idx )"		1298875	0					
ANR	1299081	Callee	decode_index32		1298875	0					
ANR	1299082	Identifier	decode_index32		1298875	0					
ANR	1299083	ArgumentList	bytes + ret		1298875	1					
ANR	1299084	Argument	bytes + ret		1298875	0					
ANR	1299085	AdditiveExpression	bytes + ret		1298875	0		+			
ANR	1299086	Identifier	bytes		1298875	0					
ANR	1299087	Identifier	ret		1298875	1					
ANR	1299088	Argument	& idx		1298875	1					
ANR	1299089	UnaryOperationExpression	& idx		1298875	0					
ANR	1299090	UnaryOperator	&		1298875	0					
ANR	1299091	Identifier	idx		1298875	1					
ANR	1299092	ExpressionStatement	ret += 4	829:2:20308:20316	1298875	6	True				
ANR	1299093	AssignmentExpression	ret += 4		1298875	0		+=			
ANR	1299094	Identifier	ret		1298875	0					
ANR	1299095	PrimaryExpression	4		1298875	1					
ANR	1299096	BreakStatement	break ;	830:2:20320:20325	1298875	7	True				
ANR	1299097	Label	case 'q' :	831:1:20328:20336	1298875	8	True				
ANR	1299098	ExpressionStatement	"decode_index64 ( bytes + ret , & idx )"	832:2:20340:20373	1298875	9	True				
ANR	1299099	CallExpression	"decode_index64 ( bytes + ret , & idx )"		1298875	0					
ANR	1299100	Callee	decode_index64		1298875	0					
ANR	1299101	Identifier	decode_index64		1298875	0					
ANR	1299102	ArgumentList	bytes + ret		1298875	1					
ANR	1299103	Argument	bytes + ret		1298875	0					
ANR	1299104	AdditiveExpression	bytes + ret		1298875	0		+			
ANR	1299105	Identifier	bytes		1298875	0					
ANR	1299106	Identifier	ret		1298875	1					
ANR	1299107	Argument	& idx		1298875	1					
ANR	1299108	UnaryOperationExpression	& idx		1298875	0					
ANR	1299109	UnaryOperator	&		1298875	0					
ANR	1299110	Identifier	idx		1298875	1					
ANR	1299111	ExpressionStatement	ret += 8	833:2:20377:20385	1298875	10	True				
ANR	1299112	AssignmentExpression	ret += 8		1298875	0		+=			
ANR	1299113	Identifier	ret		1298875	0					
ANR	1299114	PrimaryExpression	8		1298875	1					
ANR	1299115	BreakStatement	break ;	834:2:20389:20394	1298875	11	True				
ANR	1299116	ExpressionStatement	sign = idx . sign ? '+' : '-'	837:1:20401:20428	1298875	12	True				
ANR	1299117	AssignmentExpression	sign = idx . sign ? '+' : '-'		1298875	0		=			
ANR	1299118	Identifier	sign		1298875	0					
ANR	1299119	ConditionalExpression	idx . sign ? '+' : '-'		1298875	1					
ANR	1299120	Condition	idx . sign		1298875	0					
ANR	1299121	MemberAccess	idx . sign		1298875	0					
ANR	1299122	Identifier	idx		1298875	0					
ANR	1299123	Identifier	sign		1298875	1					
ANR	1299124	PrimaryExpression	'+'		1298875	1					
ANR	1299125	PrimaryExpression	'-'		1298875	2					
ANR	1299126	ExpressionStatement	"snprintf ( indx2 , 32 , ""(%c%u, %c%u)"" , sign , idx . n , sign , idx . c )"	839:1:20432:20494	1298875	13	True				
ANR	1299127	CallExpression	"snprintf ( indx2 , 32 , ""(%c%u, %c%u)"" , sign , idx . n , sign , idx . c )"		1298875	0					
ANR	1299128	Callee	snprintf		1298875	0					
ANR	1299129	Identifier	snprintf		1298875	0					
ANR	1299130	ArgumentList	indx2		1298875	1					
ANR	1299131	Argument	indx2		1298875	0					
ANR	1299132	Identifier	indx2		1298875	0					
ANR	1299133	Argument	32		1298875	1					
ANR	1299134	PrimaryExpression	32		1298875	0					
ANR	1299135	Argument	"""(%c%u, %c%u)"""		1298875	2					
ANR	1299136	PrimaryExpression	"""(%c%u, %c%u)"""		1298875	0					
ANR	1299137	Argument	sign		1298875	3					
ANR	1299138	Identifier	sign		1298875	0					
ANR	1299139	Argument	idx . n		1298875	4					
ANR	1299140	MemberAccess	idx . n		1298875	0					
ANR	1299141	Identifier	idx		1298875	0					
ANR	1299142	Identifier	n		1298875	1					
ANR	1299143	Argument	sign		1298875	5					
ANR	1299144	Identifier	sign		1298875	0					
ANR	1299145	Argument	idx . c		1298875	6					
ANR	1299146	MemberAccess	idx . c		1298875	0					
ANR	1299147	Identifier	idx		1298875	0					
ANR	1299148	Identifier	c		1298875	1					
ANR	1299149	ExpressionStatement	"snprintf ( op1 , 32 , ""%sr%u"" , TEST_BIT ( bytes [ 1 ] , 3 ) ? ""@"" : """" , bytes [ 1 ] & 0x7 )"	841:1:20498:20576	1298875	14	True				
ANR	1299150	CallExpression	"snprintf ( op1 , 32 , ""%sr%u"" , TEST_BIT ( bytes [ 1 ] , 3 ) ? ""@"" : """" , bytes [ 1 ] & 0x7 )"		1298875	0					
ANR	1299151	Callee	snprintf		1298875	0					
ANR	1299152	Identifier	snprintf		1298875	0					
ANR	1299153	ArgumentList	op1		1298875	1					
ANR	1299154	Argument	op1		1298875	0					
ANR	1299155	Identifier	op1		1298875	0					
ANR	1299156	Argument	32		1298875	1					
ANR	1299157	PrimaryExpression	32		1298875	0					
ANR	1299158	Argument	"""%sr%u"""		1298875	2					
ANR	1299159	PrimaryExpression	"""%sr%u"""		1298875	0					
ANR	1299160	Argument	"TEST_BIT ( bytes [ 1 ] , 3 ) ? ""@"" : """""		1298875	3					
ANR	1299161	ConditionalExpression	"TEST_BIT ( bytes [ 1 ] , 3 ) ? ""@"" : """""		1298875	0					
ANR	1299162	Condition	"TEST_BIT ( bytes [ 1 ] , 3 )"		1298875	0					
ANR	1299163	CallExpression	"TEST_BIT ( bytes [ 1 ] , 3 )"		1298875	0					
ANR	1299164	Callee	TEST_BIT		1298875	0					
ANR	1299165	Identifier	TEST_BIT		1298875	0					
ANR	1299166	ArgumentList	bytes [ 1 ]		1298875	1					
ANR	1299167	Argument	bytes [ 1 ]		1298875	0					
ANR	1299168	ArrayIndexing	bytes [ 1 ]		1298875	0					
ANR	1299169	Identifier	bytes		1298875	0					
ANR	1299170	PrimaryExpression	1		1298875	1					
ANR	1299171	Argument	3		1298875	1					
ANR	1299172	PrimaryExpression	3		1298875	0					
ANR	1299173	PrimaryExpression	"""@"""		1298875	1					
ANR	1299174	PrimaryExpression	""""""		1298875	2					
ANR	1299175	Argument	bytes [ 1 ] & 0x7		1298875	4					
ANR	1299176	BitAndExpression	bytes [ 1 ] & 0x7		1298875	0		&			
ANR	1299177	ArrayIndexing	bytes [ 1 ]		1298875	0					
ANR	1299178	Identifier	bytes		1298875	0					
ANR	1299179	PrimaryExpression	1		1298875	1					
ANR	1299180	PrimaryExpression	0x7		1298875	1					
ANR	1299181	ExpressionStatement	"CHK_SNPRINTF ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""%s%s, %s"" , op1 , indx1 , indx2 )"	842:1:20579:20659	1298875	15	True				
ANR	1299182	CallExpression	"CHK_SNPRINTF ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""%s%s, %s"" , op1 , indx1 , indx2 )"		1298875	0					
ANR	1299183	Callee	CHK_SNPRINTF		1298875	0					
ANR	1299184	Identifier	CHK_SNPRINTF		1298875	0					
ANR	1299185	ArgumentList	cmd -> operands		1298875	1					
ANR	1299186	Argument	cmd -> operands		1298875	0					
ANR	1299187	PtrMemberAccess	cmd -> operands		1298875	0					
ANR	1299188	Identifier	cmd		1298875	0					
ANR	1299189	Identifier	operands		1298875	1					
ANR	1299190	Argument	EBC_OPERANDS_MAXLEN		1298875	1					
ANR	1299191	Identifier	EBC_OPERANDS_MAXLEN		1298875	0					
ANR	1299192	Argument	"""%s%s, %s"""		1298875	2					
ANR	1299193	PrimaryExpression	"""%s%s, %s"""		1298875	0					
ANR	1299194	Argument	op1		1298875	3					
ANR	1299195	Identifier	op1		1298875	0					
ANR	1299196	Argument	indx1		1298875	4					
ANR	1299197	Identifier	indx1		1298875	0					
ANR	1299198	Argument	indx2		1298875	5					
ANR	1299199	Identifier	indx2		1298875	0					
ANR	1299200	ReturnStatement	return ret ;	843:1:20662:20672	1298875	16	True				
ANR	1299201	Identifier	ret		1298875	0					
ANR	1299202	ReturnType	static int		1298875	1					
ANR	1299203	Identifier	decode_movin		1298875	2					
ANR	1299204	ParameterList	"const ut8 * bytes , ebc_command_t * cmd"		1298875	3					
ANR	1299205	Parameter	const ut8 * bytes	788:24:19558:19573	1298875	0	True				
ANR	1299206	ParameterType	const ut8 *		1298875	0					
ANR	1299207	Identifier	bytes		1298875	1					
ANR	1299208	Parameter	ebc_command_t * cmd	788:42:19576:19593	1298875	1	True				
ANR	1299209	ParameterType	ebc_command_t *		1298875	0					
ANR	1299210	Identifier	cmd		1298875	1					
ANR	1299211	CFGEntryNode	ENTRY		1298875		True				
ANR	1299212	CFGExitNode	EXIT		1298875		True				
ANR	1299213	Symbol	p1		1298875						
ANR	1299214	Symbol	EBC_OPERANDS_MAXLEN		1298875						
ANR	1299215	Symbol	EBC_INSTR_MAXLEN		1298875						
ANR	1299216	Symbol	sign		1298875						
ANR	1299217	Symbol	* bytes		1298875						
ANR	1299218	Symbol	* instr_names		1298875						
ANR	1299219	Symbol	cmd -> operands		1298875						
ANR	1299220	Symbol	idx . sign		1298875						
ANR	1299221	Symbol	* EBC_OPCODE_MASK		1298875						
ANR	1299222	Symbol	* cmd		1298875						
ANR	1299223	Symbol	cmd -> instr		1298875						
ANR	1299224	Symbol	TEST_BIT		1298875						
ANR	1299225	Symbol	ret		1298875						
ANR	1299226	Symbol	* * bytes		1298875						
ANR	1299227	Symbol	indx2		1298875						
ANR	1299228	Symbol	indx1		1298875						
ANR	1299229	Symbol	& idx		1298875						
ANR	1299230	Symbol	idx . n		1298875						
ANR	1299231	Symbol	op1		1298875						
ANR	1299232	Symbol	idx . c		1298875						
ANR	1299233	Symbol	instr_names		1298875						
ANR	1299234	Symbol	bytes		1298875						
ANR	1299235	Symbol	cmd		1298875						
ANR	1299236	Symbol	idx		1298875						
ANR	1299237	Symbol	EBC_OPCODE_MASK		1298875						
ANR	1299238	Function	decode_movrel	846:0:20677:21879							
ANR	1299239	FunctionDef	"decode_movrel (const ut8 * bytes , ebc_command_t * cmd)"		1299238	0					
ANR	1299240	CompoundStatement		846:63:20740:21879	1299238	0					
ANR	1299241	IdentifierDeclStatement	int ret = 2 ;	847:1:20743:20754	1299238	0	True				
ANR	1299242	IdentifierDecl	ret = 2		1299238	0					
ANR	1299243	IdentifierDeclType	int		1299238	0					
ANR	1299244	Identifier	ret		1299238	1					
ANR	1299245	AssignmentExpression	ret = 2		1299238	2		=			
ANR	1299246	Identifier	ret		1299238	0					
ANR	1299247	PrimaryExpression	2		1299238	1					
ANR	1299248	IdentifierDeclStatement	char p1 = 0 ;	848:1:20757:20768	1299238	1	True				
ANR	1299249	IdentifierDecl	p1 = 0		1299238	0					
ANR	1299250	IdentifierDeclType	char		1299238	0					
ANR	1299251	Identifier	p1		1299238	1					
ANR	1299252	AssignmentExpression	p1 = 0		1299238	2		=			
ANR	1299253	Identifier	p1		1299238	0					
ANR	1299254	PrimaryExpression	0		1299238	1					
ANR	1299255	IdentifierDeclStatement	char op1 [ 32 ] ;	849:1:20771:20783	1299238	2	True				
ANR	1299256	IdentifierDecl	op1 [ 32 ]		1299238	0					
ANR	1299257	IdentifierDeclType	char [ 32 ]		1299238	0					
ANR	1299258	Identifier	op1		1299238	1					
ANR	1299259	PrimaryExpression	32		1299238	2					
ANR	1299260	IdentifierDeclStatement	char indx [ 32 ] = { 0 } ;	850:1:20786:20805	1299238	3	True				
ANR	1299261	IdentifierDecl	indx [ 32 ] = { 0 }		1299238	0					
ANR	1299262	IdentifierDeclType	char [ 32 ]		1299238	0					
ANR	1299263	Identifier	indx		1299238	1					
ANR	1299264	PrimaryExpression	32		1299238	2					
ANR	1299265	AssignmentExpression	indx [ 32 ] = { 0 }		1299238	3		=			
ANR	1299266	Identifier	indx		1299238	0					
ANR	1299267	InitializerList	0		1299238	1					
ANR	1299268	PrimaryExpression	0		1299238	0					
ANR	1299269	IdentifierDeclStatement	unsigned long immed = 0 ;	851:1:20808:20831	1299238	4	True				
ANR	1299270	IdentifierDecl	immed = 0		1299238	0					
ANR	1299271	IdentifierDeclType	unsigned long		1299238	0					
ANR	1299272	Identifier	immed		1299238	1					
ANR	1299273	AssignmentExpression	immed = 0		1299238	2		=			
ANR	1299274	Identifier	immed		1299238	0					
ANR	1299275	PrimaryExpression	0		1299238	1					
ANR	1299276	IdentifierDeclStatement	unsigned formathex = 0 ;	852:1:20834:20856	1299238	5	True				
ANR	1299277	IdentifierDecl	formathex = 0		1299238	0					
ANR	1299278	IdentifierDeclType	unsigned		1299238	0					
ANR	1299279	Identifier	formathex		1299238	1					
ANR	1299280	AssignmentExpression	formathex = 0		1299238	2		=			
ANR	1299281	Identifier	formathex		1299238	0					
ANR	1299282	PrimaryExpression	0		1299238	1					
ANR	1299283	SwitchStatement	switch ( bytes [ 0 ] >> 6 )		1299238	6					
ANR	1299284	Condition	bytes [ 0 ] >> 6	854:9:20868:20880	1299238	0	True				
ANR	1299285	ShiftExpression	bytes [ 0 ] >> 6		1299238	0		>>			
ANR	1299286	ArrayIndexing	bytes [ 0 ]		1299238	0					
ANR	1299287	Identifier	bytes		1299238	0					
ANR	1299288	PrimaryExpression	0		1299238	1					
ANR	1299289	PrimaryExpression	6		1299238	1					
ANR	1299290	CompoundStatement		9:24:142:142	1299238	1					
ANR	1299291	Label	case 0 :	855:1:20886:20892	1299238	0	True				
ANR	1299292	ExpressionStatement	ret = - 1	856:2:20896:20904	1299238	1	True				
ANR	1299293	AssignmentExpression	ret = - 1		1299238	0		=			
ANR	1299294	Identifier	ret		1299238	0					
ANR	1299295	UnaryOperationExpression	- 1		1299238	1					
ANR	1299296	UnaryOperator	-		1299238	0					
ANR	1299297	PrimaryExpression	1		1299238	1					
ANR	1299298	BreakStatement	break ;	857:2:20908:20913	1299238	2	True				
ANR	1299299	Label	case 1 :	858:1:20916:20922	1299238	3	True				
ANR	1299300	ExpressionStatement	p1 = 'w'	859:2:20926:20934	1299238	4	True				
ANR	1299301	AssignmentExpression	p1 = 'w'		1299238	0		=			
ANR	1299302	Identifier	p1		1299238	0					
ANR	1299303	PrimaryExpression	'w'		1299238	1					
ANR	1299304	ExpressionStatement	formathex = 4	860:2:20938:20951	1299238	5	True				
ANR	1299305	AssignmentExpression	formathex = 4		1299238	0		=			
ANR	1299306	Identifier	formathex		1299238	0					
ANR	1299307	PrimaryExpression	4		1299238	1					
ANR	1299308	BreakStatement	break ;	861:2:20955:20960	1299238	6	True				
ANR	1299309	Label	case 2 :	862:1:20963:20969	1299238	7	True				
ANR	1299310	ExpressionStatement	p1 = 'd'	863:2:20973:20981	1299238	8	True				
ANR	1299311	AssignmentExpression	p1 = 'd'		1299238	0		=			
ANR	1299312	Identifier	p1		1299238	0					
ANR	1299313	PrimaryExpression	'd'		1299238	1					
ANR	1299314	ExpressionStatement	formathex = 8	864:2:20985:20998	1299238	9	True				
ANR	1299315	AssignmentExpression	formathex = 8		1299238	0		=			
ANR	1299316	Identifier	formathex		1299238	0					
ANR	1299317	PrimaryExpression	8		1299238	1					
ANR	1299318	BreakStatement	break ;	865:2:21002:21007	1299238	10	True				
ANR	1299319	Label	case 3 :	866:1:21010:21016	1299238	11	True				
ANR	1299320	ExpressionStatement	p1 = 'q'	867:2:21020:21028	1299238	12	True				
ANR	1299321	AssignmentExpression	p1 = 'q'		1299238	0		=			
ANR	1299322	Identifier	p1		1299238	0					
ANR	1299323	PrimaryExpression	'q'		1299238	1					
ANR	1299324	ExpressionStatement	formathex = 16	868:2:21032:21046	1299238	13	True				
ANR	1299325	AssignmentExpression	formathex = 16		1299238	0		=			
ANR	1299326	Identifier	formathex		1299238	0					
ANR	1299327	PrimaryExpression	16		1299238	1					
ANR	1299328	BreakStatement	break ;	869:2:21050:21055	1299238	14	True				
ANR	1299329	IfStatement	if ( ret < 0 )		1299238	7					
ANR	1299330	Condition	ret < 0	872:5:21066:21072	1299238	0	True				
ANR	1299331	RelationalExpression	ret < 0		1299238	0		<			
ANR	1299332	Identifier	ret		1299238	0					
ANR	1299333	PrimaryExpression	0		1299238	1					
ANR	1299334	CompoundStatement		27:14:334:334	1299238	1					
ANR	1299335	ReturnStatement	return ret ;	873:2:21079:21089	1299238	0	True				
ANR	1299336	Identifier	ret		1299238	0					
ANR	1299337	ExpressionStatement	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s%c"" , instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ] , p1 )"	876:1:21096:21190	1299238	8	True				
ANR	1299338	CallExpression	"snprintf ( cmd -> instr , EBC_INSTR_MAXLEN , ""%s%c"" , instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ] , p1 )"		1299238	0					
ANR	1299339	Callee	snprintf		1299238	0					
ANR	1299340	Identifier	snprintf		1299238	0					
ANR	1299341	ArgumentList	cmd -> instr		1299238	1					
ANR	1299342	Argument	cmd -> instr		1299238	0					
ANR	1299343	PtrMemberAccess	cmd -> instr		1299238	0					
ANR	1299344	Identifier	cmd		1299238	0					
ANR	1299345	Identifier	instr		1299238	1					
ANR	1299346	Argument	EBC_INSTR_MAXLEN		1299238	1					
ANR	1299347	Identifier	EBC_INSTR_MAXLEN		1299238	0					
ANR	1299348	Argument	"""%s%c"""		1299238	2					
ANR	1299349	PrimaryExpression	"""%s%c"""		1299238	0					
ANR	1299350	Argument	instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ]		1299238	3					
ANR	1299351	ArrayIndexing	instr_names [ bytes [ 0 ] & EBC_OPCODE_MASK ]		1299238	0					
ANR	1299352	Identifier	instr_names		1299238	0					
ANR	1299353	BitAndExpression	bytes [ 0 ] & EBC_OPCODE_MASK		1299238	1		&			
ANR	1299354	ArrayIndexing	bytes [ 0 ]		1299238	0					
ANR	1299355	Identifier	bytes		1299238	0					
ANR	1299356	PrimaryExpression	0		1299238	1					
ANR	1299357	Identifier	EBC_OPCODE_MASK		1299238	1					
ANR	1299358	Argument	p1		1299238	4					
ANR	1299359	Identifier	p1		1299238	0					
ANR	1299360	ExpressionStatement	"snprintf ( op1 , 32 , ""%sr%u"" , TEST_BIT ( bytes [ 1 ] , 3 ) ? ""@"" : """" , bytes [ 1 ] & 0x7 )"	878:1:21193:21269	1299238	9	True				
ANR	1299361	CallExpression	"snprintf ( op1 , 32 , ""%sr%u"" , TEST_BIT ( bytes [ 1 ] , 3 ) ? ""@"" : """" , bytes [ 1 ] & 0x7 )"		1299238	0					
ANR	1299362	Callee	snprintf		1299238	0					
ANR	1299363	Identifier	snprintf		1299238	0					
ANR	1299364	ArgumentList	op1		1299238	1					
ANR	1299365	Argument	op1		1299238	0					
ANR	1299366	Identifier	op1		1299238	0					
ANR	1299367	Argument	32		1299238	1					
ANR	1299368	PrimaryExpression	32		1299238	0					
ANR	1299369	Argument	"""%sr%u"""		1299238	2					
ANR	1299370	PrimaryExpression	"""%sr%u"""		1299238	0					
ANR	1299371	Argument	"TEST_BIT ( bytes [ 1 ] , 3 ) ? ""@"" : """""		1299238	3					
ANR	1299372	ConditionalExpression	"TEST_BIT ( bytes [ 1 ] , 3 ) ? ""@"" : """""		1299238	0					
ANR	1299373	Condition	"TEST_BIT ( bytes [ 1 ] , 3 )"		1299238	0					
ANR	1299374	CallExpression	"TEST_BIT ( bytes [ 1 ] , 3 )"		1299238	0					
ANR	1299375	Callee	TEST_BIT		1299238	0					
ANR	1299376	Identifier	TEST_BIT		1299238	0					
ANR	1299377	ArgumentList	bytes [ 1 ]		1299238	1					
ANR	1299378	Argument	bytes [ 1 ]		1299238	0					
ANR	1299379	ArrayIndexing	bytes [ 1 ]		1299238	0					
ANR	1299380	Identifier	bytes		1299238	0					
ANR	1299381	PrimaryExpression	1		1299238	1					
ANR	1299382	Argument	3		1299238	1					
ANR	1299383	PrimaryExpression	3		1299238	0					
ANR	1299384	PrimaryExpression	"""@"""		1299238	1					
ANR	1299385	PrimaryExpression	""""""		1299238	2					
ANR	1299386	Argument	bytes [ 1 ] & 0x7		1299238	4					
ANR	1299387	BitAndExpression	bytes [ 1 ] & 0x7		1299238	0		&			
ANR	1299388	ArrayIndexing	bytes [ 1 ]		1299238	0					
ANR	1299389	Identifier	bytes		1299238	0					
ANR	1299390	PrimaryExpression	1		1299238	1					
ANR	1299391	PrimaryExpression	0x7		1299238	1					
ANR	1299392	IfStatement	"if ( TEST_BIT ( bytes [ 1 ] , 6 ) )"		1299238	10					
ANR	1299393	Condition	"TEST_BIT ( bytes [ 1 ] , 6 )"	880:5:21277:21297	1299238	0	True				
ANR	1299394	CallExpression	"TEST_BIT ( bytes [ 1 ] , 6 )"		1299238	0					
ANR	1299395	Callee	TEST_BIT		1299238	0					
ANR	1299396	Identifier	TEST_BIT		1299238	0					
ANR	1299397	ArgumentList	bytes [ 1 ]		1299238	1					
ANR	1299398	Argument	bytes [ 1 ]		1299238	0					
ANR	1299399	ArrayIndexing	bytes [ 1 ]		1299238	0					
ANR	1299400	Identifier	bytes		1299238	0					
ANR	1299401	PrimaryExpression	1		1299238	1					
ANR	1299402	Argument	6		1299238	1					
ANR	1299403	PrimaryExpression	6		1299238	0					
ANR	1299404	CompoundStatement		37:2:582:591	1299238	1					
ANR	1299405	IdentifierDeclStatement	ebc_index_t idx ;	881:2:21304:21319	1299238	0	True				
ANR	1299406	IdentifierDecl	idx		1299238	0					
ANR	1299407	IdentifierDeclType	ebc_index_t		1299238	0					
ANR	1299408	Identifier	idx		1299238	1					
ANR	1299409	IdentifierDeclStatement	char sign ;	882:2:21323:21332	1299238	1	True				
ANR	1299410	IdentifierDecl	sign		1299238	0					
ANR	1299411	IdentifierDeclType	char		1299238	0					
ANR	1299412	Identifier	sign		1299238	1					
ANR	1299413	ExpressionStatement	"decode_index16 ( bytes + 2 , & idx )"	884:2:21337:21368	1299238	2	True				
ANR	1299414	CallExpression	"decode_index16 ( bytes + 2 , & idx )"		1299238	0					
ANR	1299415	Callee	decode_index16		1299238	0					
ANR	1299416	Identifier	decode_index16		1299238	0					
ANR	1299417	ArgumentList	bytes + 2		1299238	1					
ANR	1299418	Argument	bytes + 2		1299238	0					
ANR	1299419	AdditiveExpression	bytes + 2		1299238	0		+			
ANR	1299420	Identifier	bytes		1299238	0					
ANR	1299421	PrimaryExpression	2		1299238	1					
ANR	1299422	Argument	& idx		1299238	1					
ANR	1299423	UnaryOperationExpression	& idx		1299238	0					
ANR	1299424	UnaryOperator	&		1299238	0					
ANR	1299425	Identifier	idx		1299238	1					
ANR	1299426	ExpressionStatement	sign = idx . sign ? '+' : '-'	885:2:21372:21399	1299238	3	True				
ANR	1299427	AssignmentExpression	sign = idx . sign ? '+' : '-'		1299238	0		=			
ANR	1299428	Identifier	sign		1299238	0					
ANR	1299429	ConditionalExpression	idx . sign ? '+' : '-'		1299238	1					
ANR	1299430	Condition	idx . sign		1299238	0					
ANR	1299431	MemberAccess	idx . sign		1299238	0					
ANR	1299432	Identifier	idx		1299238	0					
ANR	1299433	Identifier	sign		1299238	1					
ANR	1299434	PrimaryExpression	'+'		1299238	1					
ANR	1299435	PrimaryExpression	'-'		1299238	2					
ANR	1299436	ExpressionStatement	"snprintf ( indx , 32 , ""(%c%u, %c%u)"" , sign , idx . n , sign , idx . c )"	887:2:21404:21464	1299238	4	True				
ANR	1299437	CallExpression	"snprintf ( indx , 32 , ""(%c%u, %c%u)"" , sign , idx . n , sign , idx . c )"		1299238	0					
ANR	1299438	Callee	snprintf		1299238	0					
ANR	1299439	Identifier	snprintf		1299238	0					
ANR	1299440	ArgumentList	indx		1299238	1					
ANR	1299441	Argument	indx		1299238	0					
ANR	1299442	Identifier	indx		1299238	0					
ANR	1299443	Argument	32		1299238	1					
ANR	1299444	PrimaryExpression	32		1299238	0					
ANR	1299445	Argument	"""(%c%u, %c%u)"""		1299238	2					
ANR	1299446	PrimaryExpression	"""(%c%u, %c%u)"""		1299238	0					
ANR	1299447	Argument	sign		1299238	3					
ANR	1299448	Identifier	sign		1299238	0					
ANR	1299449	Argument	idx . n		1299238	4					
ANR	1299450	MemberAccess	idx . n		1299238	0					
ANR	1299451	Identifier	idx		1299238	0					
ANR	1299452	Identifier	n		1299238	1					
ANR	1299453	Argument	sign		1299238	5					
ANR	1299454	Identifier	sign		1299238	0					
ANR	1299455	Argument	idx . c		1299238	6					
ANR	1299456	MemberAccess	idx . c		1299238	0					
ANR	1299457	Identifier	idx		1299238	0					
ANR	1299458	Identifier	c		1299238	1					
ANR	1299459	ExpressionStatement	ret += 2	889:2:21469:21477	1299238	5	True				
ANR	1299460	AssignmentExpression	ret += 2		1299238	0		+=			
ANR	1299461	Identifier	ret		1299238	0					
ANR	1299462	PrimaryExpression	2		1299238	1					
ANR	1299463	IdentifierDeclStatement	ut16 v16 ;	892:1:21484:21492	1299238	11	True				
ANR	1299464	IdentifierDecl	v16		1299238	0					
ANR	1299465	IdentifierDeclType	ut16		1299238	0					
ANR	1299466	Identifier	v16		1299238	1					
ANR	1299467	IdentifierDeclStatement	ut32 v32 ;	893:1:21495:21503	1299238	12	True				
ANR	1299468	IdentifierDecl	v32		1299238	0					
ANR	1299469	IdentifierDeclType	ut32		1299238	0					
ANR	1299470	Identifier	v32		1299238	1					
ANR	1299471	IdentifierDeclStatement	ut64 v64 ;	894:1:21506:21514	1299238	13	True				
ANR	1299472	IdentifierDecl	v64		1299238	0					
ANR	1299473	IdentifierDeclType	ut64		1299238	0					
ANR	1299474	Identifier	v64		1299238	1					
ANR	1299475	SwitchStatement	switch ( p1 )		1299238	14					
ANR	1299476	Condition	p1	895:9:21525:21526	1299238	0	True				
ANR	1299477	Identifier	p1		1299238	0					
ANR	1299478	CompoundStatement		50:13:788:788	1299238	1					
ANR	1299479	Label	case 'w' :	896:1:21532:21540	1299238	0	True				
ANR	1299480	ExpressionStatement	v16 = * ( ut16 * ) ( bytes + 2 )	897:2:21544:21570	1299238	1	True				
ANR	1299481	AssignmentExpression	v16 = * ( ut16 * ) ( bytes + 2 )		1299238	0		=			
ANR	1299482	Identifier	v16		1299238	0					
ANR	1299483	UnaryOperationExpression	* ( ut16 * ) ( bytes + 2 )		1299238	1					
ANR	1299484	UnaryOperator	*		1299238	0					
ANR	1299485	CastExpression	( ut16 * ) ( bytes + 2 )		1299238	1					
ANR	1299486	CastTarget	ut16 *		1299238	0					
ANR	1299487	AdditiveExpression	bytes + 2		1299238	1		+			
ANR	1299488	Identifier	bytes		1299238	0					
ANR	1299489	PrimaryExpression	2		1299238	1					
ANR	1299490	ExpressionStatement	immed = v16	898:2:21574:21585	1299238	2	True				
ANR	1299491	AssignmentExpression	immed = v16		1299238	0		=			
ANR	1299492	Identifier	immed		1299238	0					
ANR	1299493	Identifier	v16		1299238	1					
ANR	1299494	ExpressionStatement	ret += 2	899:2:21589:21597	1299238	3	True				
ANR	1299495	AssignmentExpression	ret += 2		1299238	0		+=			
ANR	1299496	Identifier	ret		1299238	0					
ANR	1299497	PrimaryExpression	2		1299238	1					
ANR	1299498	BreakStatement	break ;	900:2:21601:21606	1299238	4	True				
ANR	1299499	Label	case 'd' :	901:1:21609:21617	1299238	5	True				
ANR	1299500	ExpressionStatement	v32 = * ( ut32 * ) ( bytes + 2 )	902:2:21621:21647	1299238	6	True				
ANR	1299501	AssignmentExpression	v32 = * ( ut32 * ) ( bytes + 2 )		1299238	0		=			
ANR	1299502	Identifier	v32		1299238	0					
ANR	1299503	UnaryOperationExpression	* ( ut32 * ) ( bytes + 2 )		1299238	1					
ANR	1299504	UnaryOperator	*		1299238	0					
ANR	1299505	CastExpression	( ut32 * ) ( bytes + 2 )		1299238	1					
ANR	1299506	CastTarget	ut32 *		1299238	0					
ANR	1299507	AdditiveExpression	bytes + 2		1299238	1		+			
ANR	1299508	Identifier	bytes		1299238	0					
ANR	1299509	PrimaryExpression	2		1299238	1					
ANR	1299510	ExpressionStatement	immed = v32	903:2:21651:21662	1299238	7	True				
ANR	1299511	AssignmentExpression	immed = v32		1299238	0		=			
ANR	1299512	Identifier	immed		1299238	0					
ANR	1299513	Identifier	v32		1299238	1					
ANR	1299514	ExpressionStatement	ret += 4	904:2:21666:21674	1299238	8	True				
ANR	1299515	AssignmentExpression	ret += 4		1299238	0		+=			
ANR	1299516	Identifier	ret		1299238	0					
ANR	1299517	PrimaryExpression	4		1299238	1					
ANR	1299518	BreakStatement	break ;	905:2:21678:21683	1299238	9	True				
ANR	1299519	Label	case 'q' :	906:1:21686:21694	1299238	10	True				
ANR	1299520	ExpressionStatement	v64 = * ( ut64 * ) ( bytes + 2 )	907:2:21698:21724	1299238	11	True				
ANR	1299521	AssignmentExpression	v64 = * ( ut64 * ) ( bytes + 2 )		1299238	0		=			
ANR	1299522	Identifier	v64		1299238	0					
ANR	1299523	UnaryOperationExpression	* ( ut64 * ) ( bytes + 2 )		1299238	1					
ANR	1299524	UnaryOperator	*		1299238	0					
ANR	1299525	CastExpression	( ut64 * ) ( bytes + 2 )		1299238	1					
ANR	1299526	CastTarget	ut64 *		1299238	0					
ANR	1299527	AdditiveExpression	bytes + 2		1299238	1		+			
ANR	1299528	Identifier	bytes		1299238	0					
ANR	1299529	PrimaryExpression	2		1299238	1					
ANR	1299530	ExpressionStatement	immed = v64	908:2:21728:21739	1299238	12	True				
ANR	1299531	AssignmentExpression	immed = v64		1299238	0		=			
ANR	1299532	Identifier	immed		1299238	0					
ANR	1299533	Identifier	v64		1299238	1					
ANR	1299534	ExpressionStatement	ret += 8	909:2:21743:21751	1299238	13	True				
ANR	1299535	AssignmentExpression	ret += 8		1299238	0		+=			
ANR	1299536	Identifier	ret		1299238	0					
ANR	1299537	PrimaryExpression	8		1299238	1					
ANR	1299538	BreakStatement	break ;	910:2:21755:21760	1299238	14	True				
ANR	1299539	ExpressionStatement	"CHK_SNPRINTF ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""%s%s, 0x%0*lx"" , op1 , indx , formathex , immed )"	913:1:21767:21864	1299238	15	True				
ANR	1299540	CallExpression	"CHK_SNPRINTF ( cmd -> operands , EBC_OPERANDS_MAXLEN , ""%s%s, 0x%0*lx"" , op1 , indx , formathex , immed )"		1299238	0					
ANR	1299541	Callee	CHK_SNPRINTF		1299238	0					
ANR	1299542	Identifier	CHK_SNPRINTF		1299238	0					
ANR	1299543	ArgumentList	cmd -> operands		1299238	1					
ANR	1299544	Argument	cmd -> operands		1299238	0					
ANR	1299545	PtrMemberAccess	cmd -> operands		1299238	0					
ANR	1299546	Identifier	cmd		1299238	0					
ANR	1299547	Identifier	operands		1299238	1					
ANR	1299548	Argument	EBC_OPERANDS_MAXLEN		1299238	1					
ANR	1299549	Identifier	EBC_OPERANDS_MAXLEN		1299238	0					
ANR	1299550	Argument	"""%s%s, 0x%0*lx"""		1299238	2					
ANR	1299551	PrimaryExpression	"""%s%s, 0x%0*lx"""		1299238	0					
ANR	1299552	Argument	op1		1299238	3					
ANR	1299553	Identifier	op1		1299238	0					
ANR	1299554	Argument	indx		1299238	4					
ANR	1299555	Identifier	indx		1299238	0					
ANR	1299556	Argument	formathex		1299238	5					
ANR	1299557	Identifier	formathex		1299238	0					
ANR	1299558	Argument	immed		1299238	6					
ANR	1299559	Identifier	immed		1299238	0					
ANR	1299560	ReturnStatement	return ret ;	915:1:21867:21877	1299238	16	True				
ANR	1299561	Identifier	ret		1299238	0					
ANR	1299562	ReturnType	static int		1299238	1					
ANR	1299563	Identifier	decode_movrel		1299238	2					
ANR	1299564	ParameterList	"const ut8 * bytes , ebc_command_t * cmd"		1299238	3					
ANR	1299565	Parameter	const ut8 * bytes	846:25:20702:20717	1299238	0	True				
ANR	1299566	ParameterType	const ut8 *		1299238	0					
ANR	1299567	Identifier	bytes		1299238	1					
ANR	1299568	Parameter	ebc_command_t * cmd	846:43:20720:20737	1299238	1	True				
ANR	1299569	ParameterType	ebc_command_t *		1299238	0					
ANR	1299570	Identifier	cmd		1299238	1					
ANR	1299571	CFGEntryNode	ENTRY		1299238		True				
ANR	1299572	CFGExitNode	EXIT		1299238		True				
ANR	1299573	Symbol	p1		1299238						
ANR	1299574	Symbol	EBC_OPERANDS_MAXLEN		1299238						
ANR	1299575	Symbol	EBC_INSTR_MAXLEN		1299238						
ANR	1299576	Symbol	indx		1299238						
ANR	1299577	Symbol	sign		1299238						
ANR	1299578	Symbol	* bytes		1299238						
ANR	1299579	Symbol	* instr_names		1299238						
ANR	1299580	Symbol	immed		1299238						
ANR	1299581	Symbol	* ( ut16 * ) ( bytes + 2 )		1299238						
ANR	1299582	Symbol	cmd -> operands		1299238						
ANR	1299583	Symbol	idx . sign		1299238						
ANR	1299584	Symbol	v32		1299238						
ANR	1299585	Symbol	* ( ut64 * ) ( bytes + 2 )		1299238						
ANR	1299586	Symbol	* EBC_OPCODE_MASK		1299238						
ANR	1299587	Symbol	v16		1299238						
ANR	1299588	Symbol	* cmd		1299238						
ANR	1299589	Symbol	cmd -> instr		1299238						
ANR	1299590	Symbol	TEST_BIT		1299238						
ANR	1299591	Symbol	ret		1299238						
ANR	1299592	Symbol	* * bytes		1299238						
ANR	1299593	Symbol	& idx		1299238						
ANR	1299594	Symbol	idx . n		1299238						
ANR	1299595	Symbol	op1		1299238						
ANR	1299596	Symbol	idx . c		1299238						
ANR	1299597	Symbol	instr_names		1299238						
ANR	1299598	Symbol	v64		1299238						
ANR	1299599	Symbol	bytes		1299238						
ANR	1299600	Symbol	cmd		1299238						
ANR	1299601	Symbol	idx		1299238						
ANR	1299602	Symbol	EBC_OPCODE_MASK		1299238						
ANR	1299603	Symbol	formathex		1299238						
ANR	1299604	Symbol	* ( ut32 * ) ( bytes + 2 )		1299238						
ANR	1299605	Function	decode_invalid	918:0:21882:21960							
ANR	1299606	FunctionDef	"decode_invalid (const ut8 * bytes , ebc_command_t * cmd)"		1299605	0					
ANR	1299607	CompoundStatement		918:64:21946:21960	1299605	0					
ANR	1299608	ReturnStatement	return - 1 ;	919:1:21949:21958	1299605	0	True				
ANR	1299609	UnaryOperationExpression	- 1		1299605	0					
ANR	1299610	UnaryOperator	-		1299605	0					
ANR	1299611	PrimaryExpression	1		1299605	1					
ANR	1299612	ReturnType	static int		1299605	1					
ANR	1299613	Identifier	decode_invalid		1299605	2					
ANR	1299614	ParameterList	"const ut8 * bytes , ebc_command_t * cmd"		1299605	3					
ANR	1299615	Parameter	const ut8 * bytes	918:26:21908:21923	1299605	0	True				
ANR	1299616	ParameterType	const ut8 *		1299605	0					
ANR	1299617	Identifier	bytes		1299605	1					
ANR	1299618	Parameter	ebc_command_t * cmd	918:44:21926:21943	1299605	1	True				
ANR	1299619	ParameterType	ebc_command_t *		1299605	0					
ANR	1299620	Identifier	cmd		1299605	1					
ANR	1299621	CFGEntryNode	ENTRY		1299605		True				
ANR	1299622	CFGExitNode	EXIT		1299605		True				
ANR	1299623	Symbol	bytes		1299605						
ANR	1299624	Symbol	cmd		1299605						
ANR	1299625	DeclStmt									
ANR	1299626	Decl							decode	decode [ EBC_COMMAND_NUM ]	decodes
ANR	1299627	Function	ebc_decode_command	983:0:22859:23048							
ANR	1299628	FunctionDef	"ebc_decode_command (const ut8 * instr , ebc_command_t * cmd)"		1299627	0					
ANR	1299629	CompoundStatement		983:61:22920:23048	1299627	0					
ANR	1299630	IfStatement	if ( ( instr [ 0 ] & EBC_OPCODE_MASK ) > 0x39 )		1299627	0					
ANR	1299631	Condition	( instr [ 0 ] & EBC_OPCODE_MASK ) > 0x39	984:5:22927:22961	1299627	0	True				
ANR	1299632	RelationalExpression	( instr [ 0 ] & EBC_OPCODE_MASK ) > 0x39		1299627	0		>			
ANR	1299633	BitAndExpression	instr [ 0 ] & EBC_OPCODE_MASK		1299627	0		&			
ANR	1299634	ArrayIndexing	instr [ 0 ]		1299627	0					
ANR	1299635	Identifier	instr		1299627	0					
ANR	1299636	PrimaryExpression	0		1299627	1					
ANR	1299637	Identifier	EBC_OPCODE_MASK		1299627	1					
ANR	1299638	PrimaryExpression	0x39		1299627	1					
ANR	1299639	CompoundStatement		2:42:43:43	1299627	1					
ANR	1299640	CompoundStatement		3:2:47:47	1299627	0					
ANR	1299641	ReturnStatement	return - 1 ;	986:3:22973:22982	1299627	0	True				
ANR	1299642	UnaryOperationExpression	- 1		1299627	0					
ANR	1299643	UnaryOperator	-		1299627	0					
ANR	1299644	PrimaryExpression	1		1299627	1					
ANR	1299645	ReturnStatement	"return decodes [ instr [ 0 ] & EBC_OPCODE_MASK ] ( instr , cmd ) ;"	989:1:22992:23046	1299627	1	True				
ANR	1299646	CallExpression	"decodes [ instr [ 0 ] & EBC_OPCODE_MASK ] ( instr , cmd )"		1299627	0					
ANR	1299647	Callee	decodes [ instr [ 0 ] & EBC_OPCODE_MASK ]		1299627	0					
ANR	1299648	ArrayIndexing	decodes [ instr [ 0 ] & EBC_OPCODE_MASK ]		1299627	0					
ANR	1299649	Identifier	decodes		1299627	0					
ANR	1299650	BitAndExpression	instr [ 0 ] & EBC_OPCODE_MASK		1299627	1		&			
ANR	1299651	ArrayIndexing	instr [ 0 ]		1299627	0					
ANR	1299652	Identifier	instr		1299627	0					
ANR	1299653	PrimaryExpression	0		1299627	1					
ANR	1299654	Identifier	EBC_OPCODE_MASK		1299627	1					
ANR	1299655	ArgumentList	instr		1299627	1					
ANR	1299656	Argument	instr		1299627	0					
ANR	1299657	Identifier	instr		1299627	0					
ANR	1299658	Argument	cmd		1299627	1					
ANR	1299659	Identifier	cmd		1299627	0					
ANR	1299660	ReturnType	int		1299627	1					
ANR	1299661	Identifier	ebc_decode_command		1299627	2					
ANR	1299662	ParameterList	"const ut8 * instr , ebc_command_t * cmd"		1299627	3					
ANR	1299663	Parameter	const ut8 * instr	983:23:22882:22897	1299627	0	True				
ANR	1299664	ParameterType	const ut8 *		1299627	0					
ANR	1299665	Identifier	instr		1299627	1					
ANR	1299666	Parameter	ebc_command_t * cmd	983:41:22900:22917	1299627	1	True				
ANR	1299667	ParameterType	ebc_command_t *		1299627	0					
ANR	1299668	Identifier	cmd		1299627	1					
ANR	1299669	CFGEntryNode	ENTRY		1299627		True				
ANR	1299670	CFGExitNode	EXIT		1299627		True				
ANR	1299671	Symbol	* decodes		1299627						
ANR	1299672	Symbol	instr		1299627						
ANR	1299673	Symbol	* instr		1299627						
ANR	1299674	Symbol	decodes		1299627						
ANR	1299675	Symbol	* EBC_OPCODE_MASK		1299627						
ANR	1299676	Symbol	cmd		1299627						
ANR	1299677	Symbol	* * instr		1299627						
ANR	1299678	Symbol	EBC_OPCODE_MASK		1299627						
