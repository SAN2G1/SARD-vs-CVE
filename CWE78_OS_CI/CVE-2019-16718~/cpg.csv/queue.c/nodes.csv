command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5626582	File	data/converged/CVE-2019-16718~_radare2/queue.c								
ANR	5626583	Function	r_queue_new	5:0:75:356							
ANR	5626584	FunctionDef	r_queue_new (int n)		5626583	0					
ANR	5626585	CompoundStatement		5:34:109:356	5626583	0					
ANR	5626586	IfStatement	if ( n <= 0 )		5626583	0					
ANR	5626587	Condition	n <= 0	6:5:116:121	5626583	0	True				
ANR	5626588	RelationalExpression	n <= 0		5626583	0		<=			
ANR	5626589	Identifier	n		5626583	0					
ANR	5626590	PrimaryExpression	0		5626583	1					
ANR	5626591	CompoundStatement		2:13:14:14	5626583	1					
ANR	5626592	ReturnStatement	return NULL ;	7:2:128:139	5626583	0	True				
ANR	5626593	Identifier	NULL		5626583	0					
ANR	5626594	IdentifierDeclStatement	RQueue * q = R_NEW0 ( RQueue ) ;	9:1:145:172	5626583	1	True				
ANR	5626595	IdentifierDecl	* q = R_NEW0 ( RQueue )		5626583	0					
ANR	5626596	IdentifierDeclType	RQueue *		5626583	0					
ANR	5626597	Identifier	q		5626583	1					
ANR	5626598	AssignmentExpression	* q = R_NEW0 ( RQueue )		5626583	2		=			
ANR	5626599	Identifier	q		5626583	0					
ANR	5626600	CallExpression	R_NEW0 ( RQueue )		5626583	1					
ANR	5626601	Callee	R_NEW0		5626583	0					
ANR	5626602	Identifier	R_NEW0		5626583	0					
ANR	5626603	ArgumentList	RQueue		5626583	1					
ANR	5626604	Argument	RQueue		5626583	0					
ANR	5626605	Identifier	RQueue		5626583	0					
ANR	5626606	IfStatement	if ( ! q )		5626583	2					
ANR	5626607	Condition	! q	10:5:179:180	5626583	0	True				
ANR	5626608	UnaryOperationExpression	! q		5626583	0					
ANR	5626609	UnaryOperator	!		5626583	0					
ANR	5626610	Identifier	q		5626583	1					
ANR	5626611	CompoundStatement		6:9:73:73	5626583	1					
ANR	5626612	ReturnStatement	return NULL ;	11:2:187:198	5626583	0	True				
ANR	5626613	Identifier	NULL		5626583	0					
ANR	5626614	Statement	q	13:1:204:204	5626583	3	True				
ANR	5626615	Statement	->	13:2:205:206	5626583	4	True				
ANR	5626616	Statement	elems	13:4:207:211	5626583	5	True				
ANR	5626617	Statement	=	13:10:213:213	5626583	6	True				
ANR	5626618	Statement	R_NEWS0	13:12:215:221	5626583	7	True				
ANR	5626619	Statement	(	13:20:223:223	5626583	8	True				
ANR	5626620	Statement	void	13:21:224:227	5626583	9	True				
ANR	5626621	Statement	*	13:26:229:229	5626583	10	True				
ANR	5626622	Statement	","	13:27:230:230	5626583	11	True				
ANR	5626623	Statement	n	13:29:232:232	5626583	12	True				
ANR	5626624	Statement	)	13:30:233:233	5626583	13	True				
ANR	5626625	ExpressionStatement		13:31:234:234	5626583	14	True				
ANR	5626626	IfStatement	if ( ! q -> elems )		5626583	15					
ANR	5626627	Condition	! q -> elems	14:5:241:249	5626583	0	True				
ANR	5626628	UnaryOperationExpression	! q -> elems		5626583	0					
ANR	5626629	UnaryOperator	!		5626583	0					
ANR	5626630	PtrMemberAccess	q -> elems		5626583	1					
ANR	5626631	Identifier	q		5626583	0					
ANR	5626632	Identifier	elems		5626583	1					
ANR	5626633	CompoundStatement		10:15:141:141	5626583	1					
ANR	5626634	ExpressionStatement	free ( q )	15:2:255:263	5626583	0	True				
ANR	5626635	CallExpression	free ( q )		5626583	0					
ANR	5626636	Callee	free		5626583	0					
ANR	5626637	Identifier	free		5626583	0					
ANR	5626638	ArgumentList	q		5626583	1					
ANR	5626639	Argument	q		5626583	0					
ANR	5626640	Identifier	q		5626583	0					
ANR	5626641	ReturnStatement	return NULL ;	16:2:267:278	5626583	1	True				
ANR	5626642	Identifier	NULL		5626583	0					
ANR	5626643	ExpressionStatement	q -> front = 0	18:1:284:296	5626583	16	True				
ANR	5626644	AssignmentExpression	q -> front = 0		5626583	0		=			
ANR	5626645	PtrMemberAccess	q -> front		5626583	0					
ANR	5626646	Identifier	q		5626583	0					
ANR	5626647	Identifier	front		5626583	1					
ANR	5626648	PrimaryExpression	0		5626583	1					
ANR	5626649	ExpressionStatement	q -> rear = - 1	19:1:299:311	5626583	17	True				
ANR	5626650	AssignmentExpression	q -> rear = - 1		5626583	0		=			
ANR	5626651	PtrMemberAccess	q -> rear		5626583	0					
ANR	5626652	Identifier	q		5626583	0					
ANR	5626653	Identifier	rear		5626583	1					
ANR	5626654	UnaryOperationExpression	- 1		5626583	1					
ANR	5626655	UnaryOperator	-		5626583	0					
ANR	5626656	PrimaryExpression	1		5626583	1					
ANR	5626657	ExpressionStatement	q -> size = 0	20:1:314:325	5626583	18	True				
ANR	5626658	AssignmentExpression	q -> size = 0		5626583	0		=			
ANR	5626659	PtrMemberAccess	q -> size		5626583	0					
ANR	5626660	Identifier	q		5626583	0					
ANR	5626661	Identifier	size		5626583	1					
ANR	5626662	PrimaryExpression	0		5626583	1					
ANR	5626663	ExpressionStatement	q -> capacity = n	21:1:328:343	5626583	19	True				
ANR	5626664	AssignmentExpression	q -> capacity = n		5626583	0		=			
ANR	5626665	PtrMemberAccess	q -> capacity		5626583	0					
ANR	5626666	Identifier	q		5626583	0					
ANR	5626667	Identifier	capacity		5626583	1					
ANR	5626668	Identifier	n		5626583	1					
ANR	5626669	ReturnStatement	return q ;	22:1:346:354	5626583	20	True				
ANR	5626670	Identifier	q		5626583	0					
ANR	5626671	ReturnType	R_API RQueue *		5626583	1					
ANR	5626672	Identifier	r_queue_new		5626583	2					
ANR	5626673	ParameterList	int n		5626583	3					
ANR	5626674	Parameter	int n	5:27:102:106	5626583	0	True				
ANR	5626675	ParameterType	int		5626583	0					
ANR	5626676	Identifier	n		5626583	1					
ANR	5626677	CFGEntryNode	ENTRY		5626583		True				
ANR	5626678	CFGExitNode	EXIT		5626583		True				
ANR	5626679	Symbol	q -> capacity		5626583						
ANR	5626680	Symbol	R_NEW0		5626583						
ANR	5626681	Symbol	q		5626583						
ANR	5626682	Symbol	NULL		5626583						
ANR	5626683	Symbol	q -> rear		5626583						
ANR	5626684	Symbol	q -> front		5626583						
ANR	5626685	Symbol	RQueue		5626583						
ANR	5626686	Symbol	q -> elems		5626583						
ANR	5626687	Symbol	q -> size		5626583						
ANR	5626688	Symbol	* q		5626583						
ANR	5626689	Symbol	n		5626583						
ANR	5626690	Function	r_queue_free	25:0:359:425							
ANR	5626691	FunctionDef	r_queue_free (RQueue * q)		5626690	0					
ANR	5626692	CompoundStatement		25:35:394:425	5626690	0					
ANR	5626693	ExpressionStatement	free ( q -> elems )	26:1:397:412	5626690	0	True				
ANR	5626694	CallExpression	free ( q -> elems )		5626690	0					
ANR	5626695	Callee	free		5626690	0					
ANR	5626696	Identifier	free		5626690	0					
ANR	5626697	ArgumentList	q -> elems		5626690	1					
ANR	5626698	Argument	q -> elems		5626690	0					
ANR	5626699	PtrMemberAccess	q -> elems		5626690	0					
ANR	5626700	Identifier	q		5626690	0					
ANR	5626701	Identifier	elems		5626690	1					
ANR	5626702	ExpressionStatement	free ( q )	27:1:415:423	5626690	1	True				
ANR	5626703	CallExpression	free ( q )		5626690	0					
ANR	5626704	Callee	free		5626690	0					
ANR	5626705	Identifier	free		5626690	0					
ANR	5626706	ArgumentList	q		5626690	1					
ANR	5626707	Argument	q		5626690	0					
ANR	5626708	Identifier	q		5626690	0					
ANR	5626709	ReturnType	R_API void		5626690	1					
ANR	5626710	Identifier	r_queue_free		5626690	2					
ANR	5626711	ParameterList	RQueue * q		5626690	3					
ANR	5626712	Parameter	RQueue * q	25:24:383:391	5626690	0	True				
ANR	5626713	ParameterType	RQueue *		5626690	0					
ANR	5626714	Identifier	q		5626690	1					
ANR	5626715	CFGEntryNode	ENTRY		5626690		True				
ANR	5626716	CFGExitNode	EXIT		5626690		True				
ANR	5626717	Symbol	q		5626690						
ANR	5626718	Symbol	q -> elems		5626690						
ANR	5626719	Symbol	* q		5626690						
ANR	5626720	Function	is_full	30:0:428:493							
ANR	5626721	FunctionDef	is_full (RQueue * q)		5626720	0					
ANR	5626722	CompoundStatement		30:30:458:493	5626720	0					
ANR	5626723	ReturnStatement	return q -> size == q -> capacity ;	31:2:462:491	5626720	0	True				
ANR	5626724	EqualityExpression	q -> size == q -> capacity		5626720	0		==			
ANR	5626725	PtrMemberAccess	q -> size		5626720	0					
ANR	5626726	Identifier	q		5626720	0					
ANR	5626727	Identifier	size		5626720	1					
ANR	5626728	PtrMemberAccess	q -> capacity		5626720	1					
ANR	5626729	Identifier	q		5626720	0					
ANR	5626730	Identifier	capacity		5626720	1					
ANR	5626731	ReturnType	static int		5626720	1					
ANR	5626732	Identifier	is_full		5626720	2					
ANR	5626733	ParameterList	RQueue * q		5626720	3					
ANR	5626734	Parameter	RQueue * q	30:19:447:455	5626720	0	True				
ANR	5626735	ParameterType	RQueue *		5626720	0					
ANR	5626736	Identifier	q		5626720	1					
ANR	5626737	CFGEntryNode	ENTRY		5626720		True				
ANR	5626738	CFGExitNode	EXIT		5626720		True				
ANR	5626739	Symbol	q -> capacity		5626720						
ANR	5626740	Symbol	q		5626720						
ANR	5626741	Symbol	q -> size		5626720						
ANR	5626742	Symbol	* q		5626720						
ANR	5626743	Function	increase_capacity	34:0:496:967							
ANR	5626744	FunctionDef	increase_capacity (RQueue * q)		5626743	0					
ANR	5626745	CompoundStatement		34:40:536:967	5626743	0					
ANR	5626746	IdentifierDeclStatement	unsigned int new_capacity = q -> capacity * 2 ;	35:1:539:582	5626743	0	True				
ANR	5626747	IdentifierDecl	new_capacity = q -> capacity * 2		5626743	0					
ANR	5626748	IdentifierDeclType	unsigned int		5626743	0					
ANR	5626749	Identifier	new_capacity		5626743	1					
ANR	5626750	AssignmentExpression	new_capacity = q -> capacity * 2		5626743	2		=			
ANR	5626751	Identifier	new_capacity		5626743	0					
ANR	5626752	MultiplicativeExpression	q -> capacity * 2		5626743	1		*			
ANR	5626753	PtrMemberAccess	q -> capacity		5626743	0					
ANR	5626754	Identifier	q		5626743	0					
ANR	5626755	Identifier	capacity		5626743	1					
ANR	5626756	PrimaryExpression	2		5626743	1					
ANR	5626757	IdentifierDeclStatement	void * * newelems ;	36:1:585:600	5626743	1	True				
ANR	5626758	IdentifierDecl	* * newelems		5626743	0					
ANR	5626759	IdentifierDeclType	void * *		5626743	0					
ANR	5626760	Identifier	newelems		5626743	1					
ANR	5626761	IdentifierDeclStatement	"int i , tmp_front ;"	37:1:603:619	5626743	2	True				
ANR	5626762	IdentifierDecl	i		5626743	0					
ANR	5626763	IdentifierDeclType	int		5626743	0					
ANR	5626764	Identifier	i		5626743	1					
ANR	5626765	IdentifierDecl	tmp_front		5626743	1					
ANR	5626766	IdentifierDeclType	int		5626743	0					
ANR	5626767	Identifier	tmp_front		5626743	1					
ANR	5626768	Statement	newelems	39:1:623:630	5626743	3	True				
ANR	5626769	Statement	=	39:10:632:632	5626743	4	True				
ANR	5626770	Statement	R_NEWS0	39:12:634:640	5626743	5	True				
ANR	5626771	Statement	(	39:19:641:641	5626743	6	True				
ANR	5626772	Statement	void	39:20:642:645	5626743	7	True				
ANR	5626773	Statement	*	39:25:647:647	5626743	8	True				
ANR	5626774	Statement	","	39:26:648:648	5626743	9	True				
ANR	5626775	Statement	new_capacity	39:28:650:661	5626743	10	True				
ANR	5626776	Statement	)	39:40:662:662	5626743	11	True				
ANR	5626777	ExpressionStatement		39:41:663:663	5626743	12	True				
ANR	5626778	IfStatement	if ( ! newelems )		5626743	13					
ANR	5626779	Condition	! newelems	40:5:670:678	5626743	0	True				
ANR	5626780	UnaryOperationExpression	! newelems		5626743	0					
ANR	5626781	UnaryOperator	!		5626743	0					
ANR	5626782	Identifier	newelems		5626743	1					
ANR	5626783	CompoundStatement		7:16:144:144	5626743	1					
ANR	5626784	ReturnStatement	return false ;	41:2:685:697	5626743	0	True				
ANR	5626785	Identifier	false		5626743	0					
ANR	5626786	ExpressionStatement	i = - 1	44:1:704:710	5626743	14	True				
ANR	5626787	AssignmentExpression	i = - 1		5626743	0		=			
ANR	5626788	Identifier	i		5626743	0					
ANR	5626789	UnaryOperationExpression	- 1		5626743	1					
ANR	5626790	UnaryOperator	-		5626743	0					
ANR	5626791	PrimaryExpression	1		5626743	1					
ANR	5626792	ExpressionStatement	tmp_front = q -> front	45:1:713:733	5626743	15	True				
ANR	5626793	AssignmentExpression	tmp_front = q -> front		5626743	0		=			
ANR	5626794	Identifier	tmp_front		5626743	0					
ANR	5626795	PtrMemberAccess	q -> front		5626743	1					
ANR	5626796	Identifier	q		5626743	0					
ANR	5626797	Identifier	front		5626743	1					
ANR	5626798	WhileStatement	while ( i + 1 < q -> size )		5626743	16					
ANR	5626799	Condition	i + 1 < q -> size	46:8:743:757	5626743	0	True				
ANR	5626800	RelationalExpression	i + 1 < q -> size		5626743	0		<			
ANR	5626801	AdditiveExpression	i + 1		5626743	0		+			
ANR	5626802	Identifier	i		5626743	0					
ANR	5626803	PrimaryExpression	1		5626743	1					
ANR	5626804	PtrMemberAccess	q -> size		5626743	1					
ANR	5626805	Identifier	q		5626743	0					
ANR	5626806	Identifier	size		5626743	1					
ANR	5626807	CompoundStatement		13:25:223:223	5626743	1					
ANR	5626808	ExpressionStatement	i ++	47:2:764:767	5626743	0	True				
ANR	5626809	PostIncDecOperationExpression	i ++		5626743	0					
ANR	5626810	Identifier	i		5626743	0					
ANR	5626811	IncDec	++		5626743	1					
ANR	5626812	ExpressionStatement	newelems [ i ] = q -> elems [ tmp_front ]	48:2:771:804	5626743	1	True				
ANR	5626813	AssignmentExpression	newelems [ i ] = q -> elems [ tmp_front ]		5626743	0		=			
ANR	5626814	ArrayIndexing	newelems [ i ]		5626743	0					
ANR	5626815	Identifier	newelems		5626743	0					
ANR	5626816	Identifier	i		5626743	1					
ANR	5626817	ArrayIndexing	q -> elems [ tmp_front ]		5626743	1					
ANR	5626818	PtrMemberAccess	q -> elems		5626743	0					
ANR	5626819	Identifier	q		5626743	0					
ANR	5626820	Identifier	elems		5626743	1					
ANR	5626821	Identifier	tmp_front		5626743	1					
ANR	5626822	ExpressionStatement	tmp_front = ( tmp_front + 1 ) % q -> capacity	49:2:808:849	5626743	2	True				
ANR	5626823	AssignmentExpression	tmp_front = ( tmp_front + 1 ) % q -> capacity		5626743	0		=			
ANR	5626824	Identifier	tmp_front		5626743	0					
ANR	5626825	MultiplicativeExpression	( tmp_front + 1 ) % q -> capacity		5626743	1		%			
ANR	5626826	AdditiveExpression	tmp_front + 1		5626743	0		+			
ANR	5626827	Identifier	tmp_front		5626743	0					
ANR	5626828	PrimaryExpression	1		5626743	1					
ANR	5626829	PtrMemberAccess	q -> capacity		5626743	1					
ANR	5626830	Identifier	q		5626743	0					
ANR	5626831	Identifier	capacity		5626743	1					
ANR	5626832	ExpressionStatement	free ( q -> elems )	52:1:856:871	5626743	17	True				
ANR	5626833	CallExpression	free ( q -> elems )		5626743	0					
ANR	5626834	Callee	free		5626743	0					
ANR	5626835	Identifier	free		5626743	0					
ANR	5626836	ArgumentList	q -> elems		5626743	1					
ANR	5626837	Argument	q -> elems		5626743	0					
ANR	5626838	PtrMemberAccess	q -> elems		5626743	0					
ANR	5626839	Identifier	q		5626743	0					
ANR	5626840	Identifier	elems		5626743	1					
ANR	5626841	ExpressionStatement	q -> elems = newelems	53:1:874:893	5626743	18	True				
ANR	5626842	AssignmentExpression	q -> elems = newelems		5626743	0		=			
ANR	5626843	PtrMemberAccess	q -> elems		5626743	0					
ANR	5626844	Identifier	q		5626743	0					
ANR	5626845	Identifier	elems		5626743	1					
ANR	5626846	Identifier	newelems		5626743	1					
ANR	5626847	ExpressionStatement	q -> front = 0	54:1:896:908	5626743	19	True				
ANR	5626848	AssignmentExpression	q -> front = 0		5626743	0		=			
ANR	5626849	PtrMemberAccess	q -> front		5626743	0					
ANR	5626850	Identifier	q		5626743	0					
ANR	5626851	Identifier	front		5626743	1					
ANR	5626852	PrimaryExpression	0		5626743	1					
ANR	5626853	ExpressionStatement	q -> rear = i	55:1:911:922	5626743	20	True				
ANR	5626854	AssignmentExpression	q -> rear = i		5626743	0		=			
ANR	5626855	PtrMemberAccess	q -> rear		5626743	0					
ANR	5626856	Identifier	q		5626743	0					
ANR	5626857	Identifier	rear		5626743	1					
ANR	5626858	Identifier	i		5626743	1					
ANR	5626859	ExpressionStatement	q -> capacity = new_capacity	56:1:925:951	5626743	21	True				
ANR	5626860	AssignmentExpression	q -> capacity = new_capacity		5626743	0		=			
ANR	5626861	PtrMemberAccess	q -> capacity		5626743	0					
ANR	5626862	Identifier	q		5626743	0					
ANR	5626863	Identifier	capacity		5626743	1					
ANR	5626864	Identifier	new_capacity		5626743	1					
ANR	5626865	ReturnStatement	return true ;	57:1:954:965	5626743	22	True				
ANR	5626866	Identifier	true		5626743	0					
ANR	5626867	ReturnType	static int		5626743	1					
ANR	5626868	Identifier	increase_capacity		5626743	2					
ANR	5626869	ParameterList	RQueue * q		5626743	3					
ANR	5626870	Parameter	RQueue * q	34:29:525:533	5626743	0	True				
ANR	5626871	ParameterType	RQueue *		5626743	0					
ANR	5626872	Identifier	q		5626743	1					
ANR	5626873	CFGEntryNode	ENTRY		5626743		True				
ANR	5626874	CFGExitNode	EXIT		5626743		True				
ANR	5626875	Symbol	false		5626743						
ANR	5626876	Symbol	i		5626743						
ANR	5626877	Symbol	q -> elems		5626743						
ANR	5626878	Symbol	tmp_front		5626743						
ANR	5626879	Symbol	newelems		5626743						
ANR	5626880	Symbol	q -> capacity		5626743						
ANR	5626881	Symbol	q		5626743						
ANR	5626882	Symbol	* q -> elems		5626743						
ANR	5626883	Symbol	* i		5626743						
ANR	5626884	Symbol	q -> rear		5626743						
ANR	5626885	Symbol	new_capacity		5626743						
ANR	5626886	Symbol	q -> front		5626743						
ANR	5626887	Symbol	* tmp_front		5626743						
ANR	5626888	Symbol	true		5626743						
ANR	5626889	Symbol	q -> size		5626743						
ANR	5626890	Symbol	* newelems		5626743						
ANR	5626891	Symbol	* * q		5626743						
ANR	5626892	Symbol	* q		5626743						
ANR	5626893	Function	r_queue_enqueue	60:0:970:1203							
ANR	5626894	FunctionDef	"r_queue_enqueue (RQueue * q , void * el)"		5626893	0					
ANR	5626895	CompoundStatement		60:47:1017:1203	5626893	0					
ANR	5626896	IfStatement	if ( is_full ( q ) )		5626893	0					
ANR	5626897	Condition	is_full ( q )	61:5:1024:1033	5626893	0	True				
ANR	5626898	CallExpression	is_full ( q )		5626893	0					
ANR	5626899	Callee	is_full		5626893	0					
ANR	5626900	Identifier	is_full		5626893	0					
ANR	5626901	ArgumentList	q		5626893	1					
ANR	5626902	Argument	q		5626893	0					
ANR	5626903	Identifier	q		5626893	0					
ANR	5626904	CompoundStatement		3:2:22:53	5626893	1					
ANR	5626905	IdentifierDeclStatement	int res = increase_capacity ( q ) ;	62:2:1040:1071	5626893	0	True				
ANR	5626906	IdentifierDecl	res = increase_capacity ( q )		5626893	0					
ANR	5626907	IdentifierDeclType	int		5626893	0					
ANR	5626908	Identifier	res		5626893	1					
ANR	5626909	AssignmentExpression	res = increase_capacity ( q )		5626893	2		=			
ANR	5626910	Identifier	res		5626893	0					
ANR	5626911	CallExpression	increase_capacity ( q )		5626893	1					
ANR	5626912	Callee	increase_capacity		5626893	0					
ANR	5626913	Identifier	increase_capacity		5626893	0					
ANR	5626914	ArgumentList	q		5626893	1					
ANR	5626915	Argument	q		5626893	0					
ANR	5626916	Identifier	q		5626893	0					
ANR	5626917	IfStatement	if ( ! res )		5626893	1					
ANR	5626918	Condition	! res	63:6:1079:1082	5626893	0	True				
ANR	5626919	UnaryOperationExpression	! res		5626893	0					
ANR	5626920	UnaryOperator	!		5626893	0					
ANR	5626921	Identifier	res		5626893	1					
ANR	5626922	CompoundStatement		4:12:67:67	5626893	1					
ANR	5626923	ReturnStatement	return false ;	64:3:1090:1102	5626893	0	True				
ANR	5626924	Identifier	false		5626893	0					
ANR	5626925	ExpressionStatement	q -> rear = ( q -> rear + 1 ) % q -> capacity	68:1:1113:1150	5626893	1	True				
ANR	5626926	AssignmentExpression	q -> rear = ( q -> rear + 1 ) % q -> capacity		5626893	0		=			
ANR	5626927	PtrMemberAccess	q -> rear		5626893	0					
ANR	5626928	Identifier	q		5626893	0					
ANR	5626929	Identifier	rear		5626893	1					
ANR	5626930	MultiplicativeExpression	( q -> rear + 1 ) % q -> capacity		5626893	1		%			
ANR	5626931	AdditiveExpression	q -> rear + 1		5626893	0		+			
ANR	5626932	PtrMemberAccess	q -> rear		5626893	0					
ANR	5626933	Identifier	q		5626893	0					
ANR	5626934	Identifier	rear		5626893	1					
ANR	5626935	PrimaryExpression	1		5626893	1					
ANR	5626936	PtrMemberAccess	q -> capacity		5626893	1					
ANR	5626937	Identifier	q		5626893	0					
ANR	5626938	Identifier	capacity		5626893	1					
ANR	5626939	ExpressionStatement	q -> elems [ q -> rear ] = el	69:1:1153:1175	5626893	2	True				
ANR	5626940	AssignmentExpression	q -> elems [ q -> rear ] = el		5626893	0		=			
ANR	5626941	ArrayIndexing	q -> elems [ q -> rear ]		5626893	0					
ANR	5626942	PtrMemberAccess	q -> elems		5626893	0					
ANR	5626943	Identifier	q		5626893	0					
ANR	5626944	Identifier	elems		5626893	1					
ANR	5626945	PtrMemberAccess	q -> rear		5626893	1					
ANR	5626946	Identifier	q		5626893	0					
ANR	5626947	Identifier	rear		5626893	1					
ANR	5626948	Identifier	el		5626893	1					
ANR	5626949	ExpressionStatement	q -> size ++	70:1:1178:1187	5626893	3	True				
ANR	5626950	PostIncDecOperationExpression	q -> size ++		5626893	0					
ANR	5626951	PtrMemberAccess	q -> size		5626893	0					
ANR	5626952	Identifier	q		5626893	0					
ANR	5626953	Identifier	size		5626893	1					
ANR	5626954	IncDec	++		5626893	1					
ANR	5626955	ReturnStatement	return true ;	71:1:1190:1201	5626893	4	True				
ANR	5626956	Identifier	true		5626893	0					
ANR	5626957	ReturnType	R_API int		5626893	1					
ANR	5626958	Identifier	r_queue_enqueue		5626893	2					
ANR	5626959	ParameterList	"RQueue * q , void * el"		5626893	3					
ANR	5626960	Parameter	RQueue * q	60:26:996:1004	5626893	0	True				
ANR	5626961	ParameterType	RQueue *		5626893	0					
ANR	5626962	Identifier	q		5626893	1					
ANR	5626963	Parameter	void * el	60:37:1007:1014	5626893	1	True				
ANR	5626964	ParameterType	void *		5626893	0					
ANR	5626965	Identifier	el		5626893	1					
ANR	5626966	CFGEntryNode	ENTRY		5626893		True				
ANR	5626967	CFGExitNode	EXIT		5626893		True				
ANR	5626968	Symbol	res		5626893						
ANR	5626969	Symbol	* q -> rear		5626893						
ANR	5626970	Symbol	el		5626893						
ANR	5626971	Symbol	false		5626893						
ANR	5626972	Symbol	q -> elems		5626893						
ANR	5626973	Symbol	q -> capacity		5626893						
ANR	5626974	Symbol	q		5626893						
ANR	5626975	Symbol	is_full		5626893						
ANR	5626976	Symbol	* q -> elems		5626893						
ANR	5626977	Symbol	q -> rear		5626893						
ANR	5626978	Symbol	true		5626893						
ANR	5626979	Symbol	q -> size		5626893						
ANR	5626980	Symbol	* * q		5626893						
ANR	5626981	Symbol	* q		5626893						
ANR	5626982	Symbol	increase_capacity		5626893						
ANR	5626983	Function	r_queue_dequeue	74:0:1206:1401							
ANR	5626984	FunctionDef	r_queue_dequeue (RQueue * q)		5626983	0					
ANR	5626985	CompoundStatement		74:39:1245:1401	5626983	0					
ANR	5626986	IdentifierDeclStatement	void * res ;	75:1:1248:1257	5626983	0	True				
ANR	5626987	IdentifierDecl	* res		5626983	0					
ANR	5626988	IdentifierDeclType	void *		5626983	0					
ANR	5626989	Identifier	res		5626983	1					
ANR	5626990	IfStatement	if ( r_queue_is_empty ( q ) )		5626983	1					
ANR	5626991	Condition	r_queue_is_empty ( q )	77:5:1265:1284	5626983	0	True				
ANR	5626992	CallExpression	r_queue_is_empty ( q )		5626983	0					
ANR	5626993	Callee	r_queue_is_empty		5626983	0					
ANR	5626994	Identifier	r_queue_is_empty		5626983	0					
ANR	5626995	ArgumentList	q		5626983	1					
ANR	5626996	Argument	q		5626983	0					
ANR	5626997	Identifier	q		5626983	0					
ANR	5626998	CompoundStatement		4:27:41:41	5626983	1					
ANR	5626999	ReturnStatement	return NULL ;	78:2:1291:1302	5626983	0	True				
ANR	5627000	Identifier	NULL		5626983	0					
ANR	5627001	ExpressionStatement	res = q -> elems [ q -> front ]	80:1:1308:1332	5626983	2	True				
ANR	5627002	AssignmentExpression	res = q -> elems [ q -> front ]		5626983	0		=			
ANR	5627003	Identifier	res		5626983	0					
ANR	5627004	ArrayIndexing	q -> elems [ q -> front ]		5626983	1					
ANR	5627005	PtrMemberAccess	q -> elems		5626983	0					
ANR	5627006	Identifier	q		5626983	0					
ANR	5627007	Identifier	elems		5626983	1					
ANR	5627008	PtrMemberAccess	q -> front		5626983	1					
ANR	5627009	Identifier	q		5626983	0					
ANR	5627010	Identifier	front		5626983	1					
ANR	5627011	ExpressionStatement	q -> front = ( q -> front + 1 ) % q -> capacity	81:1:1335:1374	5626983	3	True				
ANR	5627012	AssignmentExpression	q -> front = ( q -> front + 1 ) % q -> capacity		5626983	0		=			
ANR	5627013	PtrMemberAccess	q -> front		5626983	0					
ANR	5627014	Identifier	q		5626983	0					
ANR	5627015	Identifier	front		5626983	1					
ANR	5627016	MultiplicativeExpression	( q -> front + 1 ) % q -> capacity		5626983	1		%			
ANR	5627017	AdditiveExpression	q -> front + 1		5626983	0		+			
ANR	5627018	PtrMemberAccess	q -> front		5626983	0					
ANR	5627019	Identifier	q		5626983	0					
ANR	5627020	Identifier	front		5626983	1					
ANR	5627021	PrimaryExpression	1		5626983	1					
ANR	5627022	PtrMemberAccess	q -> capacity		5626983	1					
ANR	5627023	Identifier	q		5626983	0					
ANR	5627024	Identifier	capacity		5626983	1					
ANR	5627025	ExpressionStatement	q -> size --	82:1:1377:1386	5626983	4	True				
ANR	5627026	PostIncDecOperationExpression	q -> size --		5626983	0					
ANR	5627027	PtrMemberAccess	q -> size		5626983	0					
ANR	5627028	Identifier	q		5626983	0					
ANR	5627029	Identifier	size		5626983	1					
ANR	5627030	IncDec	--		5626983	1					
ANR	5627031	ReturnStatement	return res ;	83:1:1389:1399	5626983	5	True				
ANR	5627032	Identifier	res		5626983	0					
ANR	5627033	ReturnType	R_API void *		5626983	1					
ANR	5627034	Identifier	r_queue_dequeue		5626983	2					
ANR	5627035	ParameterList	RQueue * q		5626983	3					
ANR	5627036	Parameter	RQueue * q	74:28:1234:1242	5626983	0	True				
ANR	5627037	ParameterType	RQueue *		5626983	0					
ANR	5627038	Identifier	q		5626983	1					
ANR	5627039	CFGEntryNode	ENTRY		5626983		True				
ANR	5627040	CFGExitNode	EXIT		5626983		True				
ANR	5627041	Symbol	q -> capacity		5626983						
ANR	5627042	Symbol	q		5626983						
ANR	5627043	Symbol	res		5626983						
ANR	5627044	Symbol	* q -> elems		5626983						
ANR	5627045	Symbol	NULL		5626983						
ANR	5627046	Symbol	q -> front		5626983						
ANR	5627047	Symbol	* q -> front		5626983						
ANR	5627048	Symbol	r_queue_is_empty		5626983						
ANR	5627049	Symbol	q -> elems		5626983						
ANR	5627050	Symbol	q -> size		5626983						
ANR	5627051	Symbol	* * q		5626983						
ANR	5627052	Symbol	* q		5626983						
ANR	5627053	Function	r_queue_is_empty	86:0:1404:1466							
ANR	5627054	FunctionDef	r_queue_is_empty (RQueue * q)		5627053	0					
ANR	5627055	CompoundStatement		86:38:1442:1466	5627053	0					
ANR	5627056	ReturnStatement	return q -> size == 0 ;	87:1:1445:1464	5627053	0	True				
ANR	5627057	EqualityExpression	q -> size == 0		5627053	0		==			
ANR	5627058	PtrMemberAccess	q -> size		5627053	0					
ANR	5627059	Identifier	q		5627053	0					
ANR	5627060	Identifier	size		5627053	1					
ANR	5627061	PrimaryExpression	0		5627053	1					
ANR	5627062	ReturnType	R_API int		5627053	1					
ANR	5627063	Identifier	r_queue_is_empty		5627053	2					
ANR	5627064	ParameterList	RQueue * q		5627053	3					
ANR	5627065	Parameter	RQueue * q	86:27:1431:1439	5627053	0	True				
ANR	5627066	ParameterType	RQueue *		5627053	0					
ANR	5627067	Identifier	q		5627053	1					
ANR	5627068	CFGEntryNode	ENTRY		5627053		True				
ANR	5627069	CFGExitNode	EXIT		5627053		True				
ANR	5627070	Symbol	q		5627053						
ANR	5627071	Symbol	q -> size		5627053						
ANR	5627072	Symbol	* q		5627053						
