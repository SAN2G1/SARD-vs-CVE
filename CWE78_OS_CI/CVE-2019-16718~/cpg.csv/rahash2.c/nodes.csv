command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5683683	File	data/converged/CVE-2019-16718~_radare2/rahash2.c								
ANR	5683684	DeclStmt									
ANR	5683685	Decl							ut64	ut64	from
ANR	5683686	DeclStmt									
ANR	5683687	Decl							ut64	ut64	to
ANR	5683688	DeclStmt									
ANR	5683689	Decl							bool	bool	incremental
ANR	5683690	DeclStmt									
ANR	5683691	Decl							int	int	iterations
ANR	5683692	DeclStmt									
ANR	5683693	Decl							int	int	quiet
ANR	5683694	DeclStmt									
ANR	5683695	Decl							RHashSeed	RHashSeed	s
ANR	5683696	Decl							RHashSeed	RHashSeed *	_s
ANR	5683697	Function	compare_hashes	21:0:390:745							
ANR	5683698	FunctionDef	"compare_hashes (const RHash * ctx , const ut8 * compare , int length , int * ret)"		5683697	0					
ANR	5683699	CompoundStatement		21:87:477:745	5683697	0					
ANR	5683700	IfStatement	if ( compare )		5683697	0					
ANR	5683701	Condition	compare	22:5:484:490	5683697	0	True				
ANR	5683702	Identifier	compare		5683697	0					
ANR	5683703	CompoundStatement		2:14:15:15	5683697	1					
ANR	5683704	IfStatement	"if ( ! memcmp ( ctx -> digest , compare , length ) )"		5683697	0					
ANR	5683705	Condition	"! memcmp ( ctx -> digest , compare , length )"	24:6:533:570	5683697	0	True				
ANR	5683706	UnaryOperationExpression	"! memcmp ( ctx -> digest , compare , length )"		5683697	0					
ANR	5683707	UnaryOperator	!		5683697	0					
ANR	5683708	CallExpression	"memcmp ( ctx -> digest , compare , length )"		5683697	1					
ANR	5683709	Callee	memcmp		5683697	0					
ANR	5683710	Identifier	memcmp		5683697	0					
ANR	5683711	ArgumentList	ctx -> digest		5683697	1					
ANR	5683712	Argument	ctx -> digest		5683697	0					
ANR	5683713	PtrMemberAccess	ctx -> digest		5683697	0					
ANR	5683714	Identifier	ctx		5683697	0					
ANR	5683715	Identifier	digest		5683697	1					
ANR	5683716	Argument	compare		5683697	1					
ANR	5683717	Identifier	compare		5683697	0					
ANR	5683718	Argument	length		5683697	2					
ANR	5683719	Identifier	length		5683697	0					
ANR	5683720	CompoundStatement		4:46:95:95	5683697	1					
ANR	5683721	ExpressionStatement	"printf ( ""rahash2: Computed hash matches the expected one.\\n"" )"	25:3:578:639	5683697	0	True				
ANR	5683722	CallExpression	"printf ( ""rahash2: Computed hash matches the expected one.\\n"" )"		5683697	0					
ANR	5683723	Callee	printf		5683697	0					
ANR	5683724	Identifier	printf		5683697	0					
ANR	5683725	ArgumentList	"""rahash2: Computed hash matches the expected one.\\n"""		5683697	1					
ANR	5683726	Argument	"""rahash2: Computed hash matches the expected one.\\n"""		5683697	0					
ANR	5683727	PrimaryExpression	"""rahash2: Computed hash matches the expected one.\\n"""		5683697	0					
ANR	5683728	ElseStatement	else		5683697	0					
ANR	5683729	CompoundStatement		6:9:172:172	5683697	0					
ANR	5683730	ExpressionStatement	"eprintf ( ""rahash2: Computed hash doesn't match the expected one.\\n"" )"	27:3:655:723	5683697	0	True				
ANR	5683731	CallExpression	"eprintf ( ""rahash2: Computed hash doesn't match the expected one.\\n"" )"		5683697	0					
ANR	5683732	Callee	eprintf		5683697	0					
ANR	5683733	Identifier	eprintf		5683697	0					
ANR	5683734	ArgumentList	"""rahash2: Computed hash doesn't match the expected one.\\n"""		5683697	1					
ANR	5683735	Argument	"""rahash2: Computed hash doesn't match the expected one.\\n"""		5683697	0					
ANR	5683736	PrimaryExpression	"""rahash2: Computed hash doesn't match the expected one.\\n"""		5683697	0					
ANR	5683737	ExpressionStatement	* ret = 1	28:3:728:736	5683697	1	True				
ANR	5683738	AssignmentExpression	* ret = 1		5683697	0		=			
ANR	5683739	UnaryOperationExpression	* ret		5683697	0					
ANR	5683740	UnaryOperator	*		5683697	0					
ANR	5683741	Identifier	ret		5683697	1					
ANR	5683742	PrimaryExpression	1		5683697	1					
ANR	5683743	ReturnType	static void		5683697	1					
ANR	5683744	Identifier	compare_hashes		5683697	2					
ANR	5683745	ParameterList	"const RHash * ctx , const ut8 * compare , int length , int * ret"		5683697	3					
ANR	5683746	Parameter	const RHash * ctx	21:27:417:432	5683697	0	True				
ANR	5683747	ParameterType	const RHash *		5683697	0					
ANR	5683748	Identifier	ctx		5683697	1					
ANR	5683749	Parameter	const ut8 * compare	21:45:435:452	5683697	1	True				
ANR	5683750	ParameterType	const ut8 *		5683697	0					
ANR	5683751	Identifier	compare		5683697	1					
ANR	5683752	Parameter	int length	21:65:455:464	5683697	2	True				
ANR	5683753	ParameterType	int		5683697	0					
ANR	5683754	Identifier	length		5683697	1					
ANR	5683755	Parameter	int * ret	21:77:467:474	5683697	3	True				
ANR	5683756	ParameterType	int *		5683697	0					
ANR	5683757	Identifier	ret		5683697	1					
ANR	5683758	CFGEntryNode	ENTRY		5683697		True				
ANR	5683759	CFGExitNode	EXIT		5683697		True				
ANR	5683760	Symbol	ret		5683697						
ANR	5683761	Symbol	compare		5683697						
ANR	5683762	Symbol	memcmp		5683697						
ANR	5683763	Symbol	ctx		5683697						
ANR	5683764	Symbol	length		5683697						
ANR	5683765	Symbol	ctx -> digest		5683697						
ANR	5683766	Symbol	* ret		5683697						
ANR	5683767	Symbol	* ctx		5683697						
ANR	5683768	Function	do_hash_seed	33:0:748:1545							
ANR	5683769	FunctionDef	do_hash_seed (const char * seed)		5683768	0					
ANR	5683770	CompoundStatement		33:43:791:1545	5683768	0					
ANR	5683771	IdentifierDeclStatement	const char * sptr = seed ;	34:1:794:817	5683768	0	True				
ANR	5683772	IdentifierDecl	* sptr = seed		5683768	0					
ANR	5683773	IdentifierDeclType	const char *		5683768	0					
ANR	5683774	Identifier	sptr		5683768	1					
ANR	5683775	AssignmentExpression	* sptr = seed		5683768	2		=			
ANR	5683776	Identifier	seed		5683768	0					
ANR	5683777	Identifier	seed		5683768	1					
ANR	5683778	IfStatement	if ( ! seed )		5683768	1					
ANR	5683779	Condition	! seed	35:5:824:828	5683768	0	True				
ANR	5683780	UnaryOperationExpression	! seed		5683768	0					
ANR	5683781	UnaryOperator	!		5683768	0					
ANR	5683782	Identifier	seed		5683768	1					
ANR	5683783	CompoundStatement		3:12:39:39	5683768	1					
ANR	5683784	ExpressionStatement	_s = NULL	36:2:835:844	5683768	0	True				
ANR	5683785	AssignmentExpression	_s = NULL		5683768	0		=			
ANR	5683786	Identifier	_s		5683768	0					
ANR	5683787	Identifier	NULL		5683768	1					
ANR	5683788	ReturnStatement	return ;	37:2:848:854	5683768	1	True				
ANR	5683789	ExpressionStatement	_s = & s	39:1:860:867	5683768	2	True				
ANR	5683790	AssignmentExpression	_s = & s		5683768	0		=			
ANR	5683791	Identifier	_s		5683768	0					
ANR	5683792	UnaryOperationExpression	& s		5683768	1					
ANR	5683793	UnaryOperator	&		5683768	0					
ANR	5683794	Identifier	s		5683768	1					
ANR	5683795	IfStatement	"if ( ! strcmp ( seed , ""-"" ) )"		5683768	3					
ANR	5683796	Condition	"! strcmp ( seed , ""-"" )"	40:5:874:892	5683768	0	True				
ANR	5683797	UnaryOperationExpression	"! strcmp ( seed , ""-"" )"		5683768	0					
ANR	5683798	UnaryOperator	!		5683768	0					
ANR	5683799	CallExpression	"strcmp ( seed , ""-"" )"		5683768	1					
ANR	5683800	Callee	strcmp		5683768	0					
ANR	5683801	Identifier	strcmp		5683768	0					
ANR	5683802	ArgumentList	seed		5683768	1					
ANR	5683803	Argument	seed		5683768	0					
ANR	5683804	Identifier	seed		5683768	0					
ANR	5683805	Argument	"""-"""		5683768	1					
ANR	5683806	PrimaryExpression	"""-"""		5683768	0					
ANR	5683807	CompoundStatement		8:26:103:103	5683768	1					
ANR	5683808	ExpressionStatement	s . buf = ( ut8 * ) r_stdin_slurp ( & s . len )	41:2:899:936	5683768	0	True				
ANR	5683809	AssignmentExpression	s . buf = ( ut8 * ) r_stdin_slurp ( & s . len )		5683768	0		=			
ANR	5683810	MemberAccess	s . buf		5683768	0					
ANR	5683811	Identifier	s		5683768	0					
ANR	5683812	Identifier	buf		5683768	1					
ANR	5683813	CastExpression	( ut8 * ) r_stdin_slurp ( & s . len )		5683768	1					
ANR	5683814	CastTarget	ut8 *		5683768	0					
ANR	5683815	CallExpression	r_stdin_slurp ( & s . len )		5683768	1					
ANR	5683816	Callee	r_stdin_slurp		5683768	0					
ANR	5683817	Identifier	r_stdin_slurp		5683768	0					
ANR	5683818	ArgumentList	& s . len		5683768	1					
ANR	5683819	Argument	& s . len		5683768	0					
ANR	5683820	UnaryOperationExpression	& s . len		5683768	0					
ANR	5683821	UnaryOperator	&		5683768	0					
ANR	5683822	MemberAccess	s . len		5683768	1					
ANR	5683823	Identifier	s		5683768	0					
ANR	5683824	Identifier	len		5683768	1					
ANR	5683825	ReturnStatement	return ;	42:2:940:946	5683768	1	True				
ANR	5683826	IfStatement	if ( seed [ 0 ] == '@' )		5683768	4					
ANR	5683827	Condition	seed [ 0 ] == '@'	44:5:956:969	5683768	0	True				
ANR	5683828	EqualityExpression	seed [ 0 ] == '@'		5683768	0		==			
ANR	5683829	ArrayIndexing	seed [ 0 ]		5683768	0					
ANR	5683830	Identifier	seed		5683768	0					
ANR	5683831	PrimaryExpression	0		5683768	1					
ANR	5683832	PrimaryExpression	'@'		5683768	1					
ANR	5683833	CompoundStatement		12:21:180:180	5683768	1					
ANR	5683834	ExpressionStatement	"s . buf = ( ut8 * ) r_file_slurp ( seed + 1 , & s . len )"	45:2:976:1022	5683768	0	True				
ANR	5683835	AssignmentExpression	"s . buf = ( ut8 * ) r_file_slurp ( seed + 1 , & s . len )"		5683768	0		=			
ANR	5683836	MemberAccess	s . buf		5683768	0					
ANR	5683837	Identifier	s		5683768	0					
ANR	5683838	Identifier	buf		5683768	1					
ANR	5683839	CastExpression	"( ut8 * ) r_file_slurp ( seed + 1 , & s . len )"		5683768	1					
ANR	5683840	CastTarget	ut8 *		5683768	0					
ANR	5683841	CallExpression	"r_file_slurp ( seed + 1 , & s . len )"		5683768	1					
ANR	5683842	Callee	r_file_slurp		5683768	0					
ANR	5683843	Identifier	r_file_slurp		5683768	0					
ANR	5683844	ArgumentList	seed + 1		5683768	1					
ANR	5683845	Argument	seed + 1		5683768	0					
ANR	5683846	AdditiveExpression	seed + 1		5683768	0		+			
ANR	5683847	Identifier	seed		5683768	0					
ANR	5683848	PrimaryExpression	1		5683768	1					
ANR	5683849	Argument	& s . len		5683768	1					
ANR	5683850	UnaryOperationExpression	& s . len		5683768	0					
ANR	5683851	UnaryOperator	&		5683768	0					
ANR	5683852	MemberAccess	s . len		5683768	1					
ANR	5683853	Identifier	s		5683768	0					
ANR	5683854	Identifier	len		5683768	1					
ANR	5683855	ReturnStatement	return ;	46:2:1026:1032	5683768	1	True				
ANR	5683856	ExpressionStatement	s . buf = ( ut8 * ) malloc ( strlen ( seed ) + 128 )	48:1:1038:1082	5683768	5	True				
ANR	5683857	AssignmentExpression	s . buf = ( ut8 * ) malloc ( strlen ( seed ) + 128 )		5683768	0		=			
ANR	5683858	MemberAccess	s . buf		5683768	0					
ANR	5683859	Identifier	s		5683768	0					
ANR	5683860	Identifier	buf		5683768	1					
ANR	5683861	CastExpression	( ut8 * ) malloc ( strlen ( seed ) + 128 )		5683768	1					
ANR	5683862	CastTarget	ut8 *		5683768	0					
ANR	5683863	CallExpression	malloc ( strlen ( seed ) + 128 )		5683768	1					
ANR	5683864	Callee	malloc		5683768	0					
ANR	5683865	Identifier	malloc		5683768	0					
ANR	5683866	ArgumentList	strlen ( seed ) + 128		5683768	1					
ANR	5683867	Argument	strlen ( seed ) + 128		5683768	0					
ANR	5683868	AdditiveExpression	strlen ( seed ) + 128		5683768	0		+			
ANR	5683869	CallExpression	strlen ( seed )		5683768	0					
ANR	5683870	Callee	strlen		5683768	0					
ANR	5683871	Identifier	strlen		5683768	0					
ANR	5683872	ArgumentList	seed		5683768	1					
ANR	5683873	Argument	seed		5683768	0					
ANR	5683874	Identifier	seed		5683768	0					
ANR	5683875	PrimaryExpression	128		5683768	1					
ANR	5683876	IfStatement	if ( ! s . buf )		5683768	6					
ANR	5683877	Condition	! s . buf	49:5:1089:1094	5683768	0	True				
ANR	5683878	UnaryOperationExpression	! s . buf		5683768	0					
ANR	5683879	UnaryOperator	!		5683768	0					
ANR	5683880	MemberAccess	s . buf		5683768	1					
ANR	5683881	Identifier	s		5683768	0					
ANR	5683882	Identifier	buf		5683768	1					
ANR	5683883	CompoundStatement		17:13:305:305	5683768	1					
ANR	5683884	ExpressionStatement	_s = NULL	50:2:1101:1110	5683768	0	True				
ANR	5683885	AssignmentExpression	_s = NULL		5683768	0		=			
ANR	5683886	Identifier	_s		5683768	0					
ANR	5683887	Identifier	NULL		5683768	1					
ANR	5683888	ReturnStatement	return ;	51:2:1114:1120	5683768	1	True				
ANR	5683889	IfStatement	if ( * seed == '^' )		5683768	7					
ANR	5683890	Condition	* seed == '^'	53:5:1130:1141	5683768	0	True				
ANR	5683891	EqualityExpression	* seed == '^'		5683768	0		==			
ANR	5683892	UnaryOperationExpression	* seed		5683768	0					
ANR	5683893	UnaryOperator	*		5683768	0					
ANR	5683894	Identifier	seed		5683768	1					
ANR	5683895	PrimaryExpression	'^'		5683768	1					
ANR	5683896	CompoundStatement		21:19:352:352	5683768	1					
ANR	5683897	ExpressionStatement	s . prefix = 1	54:2:1148:1160	5683768	0	True				
ANR	5683898	AssignmentExpression	s . prefix = 1		5683768	0		=			
ANR	5683899	MemberAccess	s . prefix		5683768	0					
ANR	5683900	Identifier	s		5683768	0					
ANR	5683901	Identifier	prefix		5683768	1					
ANR	5683902	PrimaryExpression	1		5683768	1					
ANR	5683903	ExpressionStatement	sptr ++	55:2:1164:1170	5683768	1	True				
ANR	5683904	PostIncDecOperationExpression	sptr ++		5683768	0					
ANR	5683905	Identifier	sptr		5683768	0					
ANR	5683906	IncDec	++		5683768	1					
ANR	5683907	ElseStatement	else		5683768	0					
ANR	5683908	CompoundStatement		24:8:388:388	5683768	0					
ANR	5683909	ExpressionStatement	s . prefix = 0	57:2:1184:1196	5683768	0	True				
ANR	5683910	AssignmentExpression	s . prefix = 0		5683768	0		=			
ANR	5683911	MemberAccess	s . prefix		5683768	0					
ANR	5683912	Identifier	s		5683768	0					
ANR	5683913	Identifier	prefix		5683768	1					
ANR	5683914	PrimaryExpression	0		5683768	1					
ANR	5683915	IfStatement	"if ( ! strncmp ( sptr , ""s:"" , 2 ) )"		5683768	8					
ANR	5683916	Condition	"! strncmp ( sptr , ""s:"" , 2 )"	59:5:1206:1229	5683768	0	True				
ANR	5683917	UnaryOperationExpression	"! strncmp ( sptr , ""s:"" , 2 )"		5683768	0					
ANR	5683918	UnaryOperator	!		5683768	0					
ANR	5683919	CallExpression	"strncmp ( sptr , ""s:"" , 2 )"		5683768	1					
ANR	5683920	Callee	strncmp		5683768	0					
ANR	5683921	Identifier	strncmp		5683768	0					
ANR	5683922	ArgumentList	sptr		5683768	1					
ANR	5683923	Argument	sptr		5683768	0					
ANR	5683924	Identifier	sptr		5683768	0					
ANR	5683925	Argument	"""s:"""		5683768	1					
ANR	5683926	PrimaryExpression	"""s:"""		5683768	0					
ANR	5683927	Argument	2		5683768	2					
ANR	5683928	PrimaryExpression	2		5683768	0					
ANR	5683929	CompoundStatement		27:31:440:440	5683768	1					
ANR	5683930	ExpressionStatement	"strcpy ( ( char * ) s . buf , sptr + 2 )"	60:2:1236:1269	5683768	0	True				
ANR	5683931	CallExpression	"strcpy ( ( char * ) s . buf , sptr + 2 )"		5683768	0					
ANR	5683932	Callee	strcpy		5683768	0					
ANR	5683933	Identifier	strcpy		5683768	0					
ANR	5683934	ArgumentList	( char * ) s . buf		5683768	1					
ANR	5683935	Argument	( char * ) s . buf		5683768	0					
ANR	5683936	CastExpression	( char * ) s . buf		5683768	0					
ANR	5683937	CastTarget	char *		5683768	0					
ANR	5683938	MemberAccess	s . buf		5683768	1					
ANR	5683939	Identifier	s		5683768	0					
ANR	5683940	Identifier	buf		5683768	1					
ANR	5683941	Argument	sptr + 2		5683768	1					
ANR	5683942	AdditiveExpression	sptr + 2		5683768	0		+			
ANR	5683943	Identifier	sptr		5683768	0					
ANR	5683944	PrimaryExpression	2		5683768	1					
ANR	5683945	ExpressionStatement	s . len = strlen ( sptr + 2 )	61:2:1273:1298	5683768	1	True				
ANR	5683946	AssignmentExpression	s . len = strlen ( sptr + 2 )		5683768	0		=			
ANR	5683947	MemberAccess	s . len		5683768	0					
ANR	5683948	Identifier	s		5683768	0					
ANR	5683949	Identifier	len		5683768	1					
ANR	5683950	CallExpression	strlen ( sptr + 2 )		5683768	1					
ANR	5683951	Callee	strlen		5683768	0					
ANR	5683952	Identifier	strlen		5683768	0					
ANR	5683953	ArgumentList	sptr + 2		5683768	1					
ANR	5683954	Argument	sptr + 2		5683768	0					
ANR	5683955	AdditiveExpression	sptr + 2		5683768	0		+			
ANR	5683956	Identifier	sptr		5683768	0					
ANR	5683957	PrimaryExpression	2		5683768	1					
ANR	5683958	ElseStatement	else		5683768	0					
ANR	5683959	CompoundStatement		30:8:516:516	5683768	0					
ANR	5683960	ExpressionStatement	"s . len = r_hex_str2bin ( sptr , s . buf )"	63:2:1312:1347	5683768	0	True				
ANR	5683961	AssignmentExpression	"s . len = r_hex_str2bin ( sptr , s . buf )"		5683768	0		=			
ANR	5683962	MemberAccess	s . len		5683768	0					
ANR	5683963	Identifier	s		5683768	0					
ANR	5683964	Identifier	len		5683768	1					
ANR	5683965	CallExpression	"r_hex_str2bin ( sptr , s . buf )"		5683768	1					
ANR	5683966	Callee	r_hex_str2bin		5683768	0					
ANR	5683967	Identifier	r_hex_str2bin		5683768	0					
ANR	5683968	ArgumentList	sptr		5683768	1					
ANR	5683969	Argument	sptr		5683768	0					
ANR	5683970	Identifier	sptr		5683768	0					
ANR	5683971	Argument	s . buf		5683768	1					
ANR	5683972	MemberAccess	s . buf		5683768	0					
ANR	5683973	Identifier	s		5683768	0					
ANR	5683974	Identifier	buf		5683768	1					
ANR	5683975	IfStatement	if ( s . len < 1 )		5683768	1					
ANR	5683976	Condition	s . len < 1	64:6:1355:1363	5683768	0	True				
ANR	5683977	RelationalExpression	s . len < 1		5683768	0		<			
ANR	5683978	MemberAccess	s . len		5683768	0					
ANR	5683979	Identifier	s		5683768	0					
ANR	5683980	Identifier	len		5683768	1					
ANR	5683981	PrimaryExpression	1		5683768	1					
ANR	5683982	CompoundStatement		32:17:574:574	5683768	1					
ANR	5683983	ExpressionStatement	"strcpy ( ( char * ) s . buf , sptr )"	65:3:1371:1400	5683768	0	True				
ANR	5683984	CallExpression	"strcpy ( ( char * ) s . buf , sptr )"		5683768	0					
ANR	5683985	Callee	strcpy		5683768	0					
ANR	5683986	Identifier	strcpy		5683768	0					
ANR	5683987	ArgumentList	( char * ) s . buf		5683768	1					
ANR	5683988	Argument	( char * ) s . buf		5683768	0					
ANR	5683989	CastExpression	( char * ) s . buf		5683768	0					
ANR	5683990	CastTarget	char *		5683768	0					
ANR	5683991	MemberAccess	s . buf		5683768	1					
ANR	5683992	Identifier	s		5683768	0					
ANR	5683993	Identifier	buf		5683768	1					
ANR	5683994	Argument	sptr		5683768	1					
ANR	5683995	Identifier	sptr		5683768	0					
ANR	5683996	ExpressionStatement	s . len = strlen ( sptr )	66:3:1405:1426	5683768	1	True				
ANR	5683997	AssignmentExpression	s . len = strlen ( sptr )		5683768	0		=			
ANR	5683998	MemberAccess	s . len		5683768	0					
ANR	5683999	Identifier	s		5683768	0					
ANR	5684000	Identifier	len		5683768	1					
ANR	5684001	CallExpression	strlen ( sptr )		5683768	1					
ANR	5684002	Callee	strlen		5683768	0					
ANR	5684003	Identifier	strlen		5683768	0					
ANR	5684004	ArgumentList	sptr		5683768	1					
ANR	5684005	Argument	sptr		5683768	0					
ANR	5684006	Identifier	sptr		5683768	0					
ANR	5684007	ExpressionStatement	"eprintf ( ""Warning: This is not an hexpair, assuming a string, prefix it with 's:' to skip this message."" )"	67:3:1431:1536	5683768	2	True				
ANR	5684008	CallExpression	"eprintf ( ""Warning: This is not an hexpair, assuming a string, prefix it with 's:' to skip this message."" )"		5683768	0					
ANR	5684009	Callee	eprintf		5683768	0					
ANR	5684010	Identifier	eprintf		5683768	0					
ANR	5684011	ArgumentList	"""Warning: This is not an hexpair, assuming a string, prefix it with 's:' to skip this message."""		5683768	1					
ANR	5684012	Argument	"""Warning: This is not an hexpair, assuming a string, prefix it with 's:' to skip this message."""		5683768	0					
ANR	5684013	PrimaryExpression	"""Warning: This is not an hexpair, assuming a string, prefix it with 's:' to skip this message."""		5683768	0					
ANR	5684014	ReturnType	static void		5683768	1					
ANR	5684015	Identifier	do_hash_seed		5683768	2					
ANR	5684016	ParameterList	const char * seed		5683768	3					
ANR	5684017	Parameter	const char * seed	33:25:773:788	5683768	0	True				
ANR	5684018	ParameterType	const char *		5683768	0					
ANR	5684019	Identifier	seed		5683768	1					
ANR	5684020	CFGEntryNode	ENTRY		5683768		True				
ANR	5684021	CFGExitNode	EXIT		5683768		True				
ANR	5684022	Symbol	strcmp		5683768						
ANR	5684023	Symbol	malloc		5683768						
ANR	5684024	Symbol	r_file_slurp		5683768						
ANR	5684025	Symbol	NULL		5683768						
ANR	5684026	Symbol	* seed		5683768						
ANR	5684027	Symbol	seed		5683768						
ANR	5684028	Symbol	r_stdin_slurp		5683768						
ANR	5684029	Symbol	s . buf		5683768						
ANR	5684030	Symbol	s . prefix		5683768						
ANR	5684031	Symbol	sptr		5683768						
ANR	5684032	Symbol	strlen		5683768						
ANR	5684033	Symbol	strncmp		5683768						
ANR	5684034	Symbol	& s . len		5683768						
ANR	5684035	Symbol	s		5683768						
ANR	5684036	Symbol	_s		5683768						
ANR	5684037	Symbol	s . len		5683768						
ANR	5684038	Symbol	& s		5683768						
ANR	5684039	Symbol	r_hex_str2bin		5683768						
ANR	5684040	Function	do_hash_hexprint	72:0:1548:1817							
ANR	5684041	FunctionDef	"do_hash_hexprint (const ut8 * c , int len , int ule , int rad)"		5684040	0					
ANR	5684042	CompoundStatement		72:70:1618:1817	5684040	0					
ANR	5684043	IdentifierDeclStatement	int i ;	73:1:1621:1626	5684040	0	True				
ANR	5684044	IdentifierDecl	i		5684040	0					
ANR	5684045	IdentifierDeclType	int		5684040	0					
ANR	5684046	Identifier	i		5684040	1					
ANR	5684047	IfStatement	if ( ule )		5684040	1					
ANR	5684048	Condition	ule	74:5:1633:1635	5684040	0	True				
ANR	5684049	Identifier	ule		5684040	0					
ANR	5684050	CompoundStatement		3:10:19:19	5684040	1					
ANR	5684051	ForStatement	for ( i = len - 1 ; i >= 0 ; i -- )		5684040	0					
ANR	5684052	ForInit	i = len - 1 ;	75:7:1647:1658	5684040	0	True				
ANR	5684053	AssignmentExpression	i = len - 1		5684040	0		=			
ANR	5684054	Identifier	i		5684040	0					
ANR	5684055	AdditiveExpression	len - 1		5684040	1		-			
ANR	5684056	Identifier	len		5684040	0					
ANR	5684057	PrimaryExpression	1		5684040	1					
ANR	5684058	Condition	i >= 0	75:20:1660:1665	5684040	1	True				
ANR	5684059	RelationalExpression	i >= 0		5684040	0		>=			
ANR	5684060	Identifier	i		5684040	0					
ANR	5684061	PrimaryExpression	0		5684040	1					
ANR	5684062	PostIncDecOperationExpression	i --	75:28:1668:1670	5684040	2	True				
ANR	5684063	Identifier	i		5684040	0					
ANR	5684064	IncDec	--		5684040	1					
ANR	5684065	CompoundStatement		4:33:54:54	5684040	3					
ANR	5684066	ExpressionStatement	"printf ( ""%02x"" , c [ i ] )"	76:3:1678:1699	5684040	0	True				
ANR	5684067	CallExpression	"printf ( ""%02x"" , c [ i ] )"		5684040	0					
ANR	5684068	Callee	printf		5684040	0					
ANR	5684069	Identifier	printf		5684040	0					
ANR	5684070	ArgumentList	"""%02x"""		5684040	1					
ANR	5684071	Argument	"""%02x"""		5684040	0					
ANR	5684072	PrimaryExpression	"""%02x"""		5684040	0					
ANR	5684073	Argument	c [ i ]		5684040	1					
ANR	5684074	ArrayIndexing	c [ i ]		5684040	0					
ANR	5684075	Identifier	c		5684040	0					
ANR	5684076	Identifier	i		5684040	1					
ANR	5684077	ElseStatement	else		5684040	0					
ANR	5684078	CompoundStatement		7:8:94:94	5684040	0					
ANR	5684079	ForStatement	for ( i = 0 ; i < len ; i ++ )		5684040	0					
ANR	5684080	ForInit	i = 0 ;	79:7:1722:1727	5684040	0	True				
ANR	5684081	AssignmentExpression	i = 0		5684040	0		=			
ANR	5684082	Identifier	i		5684040	0					
ANR	5684083	PrimaryExpression	0		5684040	1					
ANR	5684084	Condition	i < len	79:14:1729:1735	5684040	1	True				
ANR	5684085	RelationalExpression	i < len		5684040	0		<			
ANR	5684086	Identifier	i		5684040	0					
ANR	5684087	Identifier	len		5684040	1					
ANR	5684088	PostIncDecOperationExpression	i ++	79:23:1738:1740	5684040	2	True				
ANR	5684089	Identifier	i		5684040	0					
ANR	5684090	IncDec	++		5684040	1					
ANR	5684091	CompoundStatement		8:28:124:124	5684040	3					
ANR	5684092	ExpressionStatement	"printf ( ""%02x"" , c [ i ] )"	80:3:1748:1769	5684040	0	True				
ANR	5684093	CallExpression	"printf ( ""%02x"" , c [ i ] )"		5684040	0					
ANR	5684094	Callee	printf		5684040	0					
ANR	5684095	Identifier	printf		5684040	0					
ANR	5684096	ArgumentList	"""%02x"""		5684040	1					
ANR	5684097	Argument	"""%02x"""		5684040	0					
ANR	5684098	PrimaryExpression	"""%02x"""		5684040	0					
ANR	5684099	Argument	c [ i ]		5684040	1					
ANR	5684100	ArrayIndexing	c [ i ]		5684040	0					
ANR	5684101	Identifier	c		5684040	0					
ANR	5684102	Identifier	i		5684040	1					
ANR	5684103	IfStatement	if ( rad != 'j' )		5684040	2					
ANR	5684104	Condition	rad != 'j'	83:5:1783:1792	5684040	0	True				
ANR	5684105	EqualityExpression	rad != 'j'		5684040	0		!=			
ANR	5684106	Identifier	rad		5684040	0					
ANR	5684107	PrimaryExpression	'j'		5684040	1					
ANR	5684108	CompoundStatement		12:17:176:176	5684040	1					
ANR	5684109	ExpressionStatement	"printf ( ""\\n"" )"	84:2:1799:1812	5684040	0	True				
ANR	5684110	CallExpression	"printf ( ""\\n"" )"		5684040	0					
ANR	5684111	Callee	printf		5684040	0					
ANR	5684112	Identifier	printf		5684040	0					
ANR	5684113	ArgumentList	"""\\n"""		5684040	1					
ANR	5684114	Argument	"""\\n"""		5684040	0					
ANR	5684115	PrimaryExpression	"""\\n"""		5684040	0					
ANR	5684116	ReturnType	static void		5684040	1					
ANR	5684117	Identifier	do_hash_hexprint		5684040	2					
ANR	5684118	ParameterList	"const ut8 * c , int len , int ule , int rad"		5684040	3					
ANR	5684119	Parameter	const ut8 * c	72:29:1577:1588	5684040	0	True				
ANR	5684120	ParameterType	const ut8 *		5684040	0					
ANR	5684121	Identifier	c		5684040	1					
ANR	5684122	Parameter	int len	72:43:1591:1597	5684040	1	True				
ANR	5684123	ParameterType	int		5684040	0					
ANR	5684124	Identifier	len		5684040	1					
ANR	5684125	Parameter	int ule	72:52:1600:1606	5684040	2	True				
ANR	5684126	ParameterType	int		5684040	0					
ANR	5684127	Identifier	ule		5684040	1					
ANR	5684128	Parameter	int rad	72:61:1609:1615	5684040	3	True				
ANR	5684129	ParameterType	int		5684040	0					
ANR	5684130	Identifier	rad		5684040	1					
ANR	5684131	CFGEntryNode	ENTRY		5684040		True				
ANR	5684132	CFGExitNode	EXIT		5684040		True				
ANR	5684133	Symbol	c		5684040						
ANR	5684134	Symbol	* i		5684040						
ANR	5684135	Symbol	len		5684040						
ANR	5684136	Symbol	rad		5684040						
ANR	5684137	Symbol	i		5684040						
ANR	5684138	Symbol	* c		5684040						
ANR	5684139	Symbol	ule		5684040						
ANR	5684140	Function	do_hash_print	88:0:1820:2635							
ANR	5684141	FunctionDef	"do_hash_print (RHash * ctx , ut64 hash , int dlen , int rad , int ule)"		5684140	0					
ANR	5684142	CompoundStatement		88:77:1897:2635	5684140	0					
ANR	5684143	IdentifierDeclStatement	char * o ;	89:1:1900:1907	5684140	0	True				
ANR	5684144	IdentifierDecl	* o		5684140	0					
ANR	5684145	IdentifierDeclType	char *		5684140	0					
ANR	5684146	Identifier	o		5684140	1					
ANR	5684147	IdentifierDeclStatement	const ut8 * c = ctx -> digest ;	90:1:1910:1936	5684140	1	True				
ANR	5684148	IdentifierDecl	* c = ctx -> digest		5684140	0					
ANR	5684149	IdentifierDeclType	const ut8 *		5684140	0					
ANR	5684150	Identifier	c		5684140	1					
ANR	5684151	AssignmentExpression	* c = ctx -> digest		5684140	2		=			
ANR	5684152	Identifier	c		5684140	0					
ANR	5684153	PtrMemberAccess	ctx -> digest		5684140	1					
ANR	5684154	Identifier	ctx		5684140	0					
ANR	5684155	Identifier	digest		5684140	1					
ANR	5684156	IdentifierDeclStatement	const char * hname = r_hash_name ( hash ) ;	91:1:1939:1977	5684140	2	True				
ANR	5684157	IdentifierDecl	* hname = r_hash_name ( hash )		5684140	0					
ANR	5684158	IdentifierDeclType	const char *		5684140	0					
ANR	5684159	Identifier	hname		5684140	1					
ANR	5684160	AssignmentExpression	* hname = r_hash_name ( hash )		5684140	2		=			
ANR	5684161	Identifier	hname		5684140	0					
ANR	5684162	CallExpression	r_hash_name ( hash )		5684140	1					
ANR	5684163	Callee	r_hash_name		5684140	0					
ANR	5684164	Identifier	r_hash_name		5684140	0					
ANR	5684165	ArgumentList	hash		5684140	1					
ANR	5684166	Argument	hash		5684140	0					
ANR	5684167	Identifier	hash		5684140	0					
ANR	5684168	SwitchStatement	switch ( rad )		5684140	3					
ANR	5684169	Condition	rad	92:9:1988:1990	5684140	0	True				
ANR	5684170	Identifier	rad		5684140	0					
ANR	5684171	CompoundStatement		5:14:95:95	5684140	1					
ANR	5684172	Label	case 0 :	93:1:1996:2002	5684140	0	True				
ANR	5684173	IfStatement	if ( ! quiet )		5684140	1					
ANR	5684174	Condition	! quiet	94:6:2010:2015	5684140	0	True				
ANR	5684175	UnaryOperationExpression	! quiet		5684140	0					
ANR	5684176	UnaryOperator	!		5684140	0					
ANR	5684177	Identifier	quiet		5684140	1					
ANR	5684178	CompoundStatement		7:14:120:120	5684140	1					
ANR	5684179	Statement	printf	95:3:2023:2028	5684140	0	True				
ANR	5684180	Statement	(	95:10:2030:2030	5684140	1	True				
ANR	5684181	Statement	"""0x%08"""	95:11:2031:2037	5684140	2	True				
ANR	5684182	Statement	PFMT64x	95:18:2038:2044	5684140	3	True				
ANR	5684183	Statement	"""-0x%08"""	95:26:2046:2053	5684140	4	True				
ANR	5684184	Statement	PFMT64x	95:34:2054:2060	5684140	5	True				
ANR	5684185	Statement	""" %s: """	95:42:2062:2068	5684140	6	True				
ANR	5684186	Statement	","	95:49:2069:2069	5684140	7	True				
ANR	5684187	Statement	from	96:4:2075:2078	5684140	8	True				
ANR	5684188	Statement	","	96:8:2079:2079	5684140	9	True				
ANR	5684189	Statement	to	96:10:2081:2082	5684140	10	True				
ANR	5684190	Statement	>	96:13:2084:2084	5684140	11	True				
ANR	5684191	Statement	0	96:15:2086:2086	5684140	12	True				
ANR	5684192	Statement	?	96:16:2087:2087	5684140	13	True				
ANR	5684193	Statement	to	96:18:2089:2090	5684140	14	True				
ANR	5684194	Statement	-	96:21:2092:2092	5684140	15	True				
ANR	5684195	Label	1 :	96:23:2094:2095	5684140	16	True				
ANR	5684196	Statement	0	96:26:2097:2097	5684140	17	True				
ANR	5684197	Statement	","	96:27:2098:2098	5684140	18	True				
ANR	5684198	Statement	hname	96:29:2100:2104	5684140	19	True				
ANR	5684199	Statement	)	96:34:2105:2105	5684140	20	True				
ANR	5684200	ExpressionStatement		96:35:2106:2106	5684140	21	True				
ANR	5684201	IfStatement	if ( dlen == R_HASH_SIZE_ENTROPY )		5684140	2					
ANR	5684202	Condition	dlen == R_HASH_SIZE_ENTROPY	98:6:2118:2144	5684140	0	True				
ANR	5684203	EqualityExpression	dlen == R_HASH_SIZE_ENTROPY		5684140	0		==			
ANR	5684204	Identifier	dlen		5684140	0					
ANR	5684205	Identifier	R_HASH_SIZE_ENTROPY		5684140	1					
ANR	5684206	CompoundStatement		11:35:249:249	5684140	1					
ANR	5684207	ExpressionStatement	"printf ( ""%.8f\\n"" , ctx -> entropy )"	99:3:2152:2182	5684140	0	True				
ANR	5684208	CallExpression	"printf ( ""%.8f\\n"" , ctx -> entropy )"		5684140	0					
ANR	5684209	Callee	printf		5684140	0					
ANR	5684210	Identifier	printf		5684140	0					
ANR	5684211	ArgumentList	"""%.8f\\n"""		5684140	1					
ANR	5684212	Argument	"""%.8f\\n"""		5684140	0					
ANR	5684213	PrimaryExpression	"""%.8f\\n"""		5684140	0					
ANR	5684214	Argument	ctx -> entropy		5684140	1					
ANR	5684215	PtrMemberAccess	ctx -> entropy		5684140	0					
ANR	5684216	Identifier	ctx		5684140	0					
ANR	5684217	Identifier	entropy		5684140	1					
ANR	5684218	ElseStatement	else		5684140	0					
ANR	5684219	CompoundStatement		13:9:295:295	5684140	0					
ANR	5684220	ExpressionStatement	"do_hash_hexprint ( c , dlen , ule , rad )"	101:3:2198:2234	5684140	0	True				
ANR	5684221	CallExpression	"do_hash_hexprint ( c , dlen , ule , rad )"		5684140	0					
ANR	5684222	Callee	do_hash_hexprint		5684140	0					
ANR	5684223	Identifier	do_hash_hexprint		5684140	0					
ANR	5684224	ArgumentList	c		5684140	1					
ANR	5684225	Argument	c		5684140	0					
ANR	5684226	Identifier	c		5684140	0					
ANR	5684227	Argument	dlen		5684140	1					
ANR	5684228	Identifier	dlen		5684140	0					
ANR	5684229	Argument	ule		5684140	2					
ANR	5684230	Identifier	ule		5684140	0					
ANR	5684231	Argument	rad		5684140	3					
ANR	5684232	Identifier	rad		5684140	0					
ANR	5684233	BreakStatement	break ;	103:2:2242:2247	5684140	3	True				
ANR	5684234	Label	case 1 :	104:1:2250:2256	5684140	4	True				
ANR	5684235	ExpressionStatement	"printf ( ""e file.%s="" , hname )"	105:2:2260:2288	5684140	5	True				
ANR	5684236	CallExpression	"printf ( ""e file.%s="" , hname )"		5684140	0					
ANR	5684237	Callee	printf		5684140	0					
ANR	5684238	Identifier	printf		5684140	0					
ANR	5684239	ArgumentList	"""e file.%s="""		5684140	1					
ANR	5684240	Argument	"""e file.%s="""		5684140	0					
ANR	5684241	PrimaryExpression	"""e file.%s="""		5684140	0					
ANR	5684242	Argument	hname		5684140	1					
ANR	5684243	Identifier	hname		5684140	0					
ANR	5684244	ExpressionStatement	"do_hash_hexprint ( c , dlen , ule , rad )"	106:2:2292:2328	5684140	6	True				
ANR	5684245	CallExpression	"do_hash_hexprint ( c , dlen , ule , rad )"		5684140	0					
ANR	5684246	Callee	do_hash_hexprint		5684140	0					
ANR	5684247	Identifier	do_hash_hexprint		5684140	0					
ANR	5684248	ArgumentList	c		5684140	1					
ANR	5684249	Argument	c		5684140	0					
ANR	5684250	Identifier	c		5684140	0					
ANR	5684251	Argument	dlen		5684140	1					
ANR	5684252	Identifier	dlen		5684140	0					
ANR	5684253	Argument	ule		5684140	2					
ANR	5684254	Identifier	ule		5684140	0					
ANR	5684255	Argument	rad		5684140	3					
ANR	5684256	Identifier	rad		5684140	0					
ANR	5684257	BreakStatement	break ;	107:2:2332:2337	5684140	7	True				
ANR	5684258	Label	case 'n' :	108:1:2340:2348	5684140	8	True				
ANR	5684259	ExpressionStatement	"do_hash_hexprint ( c , dlen , ule , 'j' )"	109:2:2352:2388	5684140	9	True				
ANR	5684260	CallExpression	"do_hash_hexprint ( c , dlen , ule , 'j' )"		5684140	0					
ANR	5684261	Callee	do_hash_hexprint		5684140	0					
ANR	5684262	Identifier	do_hash_hexprint		5684140	0					
ANR	5684263	ArgumentList	c		5684140	1					
ANR	5684264	Argument	c		5684140	0					
ANR	5684265	Identifier	c		5684140	0					
ANR	5684266	Argument	dlen		5684140	1					
ANR	5684267	Identifier	dlen		5684140	0					
ANR	5684268	Argument	ule		5684140	2					
ANR	5684269	Identifier	ule		5684140	0					
ANR	5684270	Argument	'j'		5684140	3					
ANR	5684271	PrimaryExpression	'j'		5684140	0					
ANR	5684272	BreakStatement	break ;	110:2:2392:2397	5684140	10	True				
ANR	5684273	Label	case 'j' :	111:1:2400:2408	5684140	11	True				
ANR	5684274	ExpressionStatement	"printf ( ""{\\""name\\"":\\""%s\\"",\\""hash\\"":\\"""" , hname )"	112:2:2412:2458	5684140	12	True				
ANR	5684275	CallExpression	"printf ( ""{\\""name\\"":\\""%s\\"",\\""hash\\"":\\"""" , hname )"		5684140	0					
ANR	5684276	Callee	printf		5684140	0					
ANR	5684277	Identifier	printf		5684140	0					
ANR	5684278	ArgumentList	"""{\\""name\\"":\\""%s\\"",\\""hash\\"":\\"""""		5684140	1					
ANR	5684279	Argument	"""{\\""name\\"":\\""%s\\"",\\""hash\\"":\\"""""		5684140	0					
ANR	5684280	PrimaryExpression	"""{\\""name\\"":\\""%s\\"",\\""hash\\"":\\"""""		5684140	0					
ANR	5684281	Argument	hname		5684140	1					
ANR	5684282	Identifier	hname		5684140	0					
ANR	5684283	ExpressionStatement	"do_hash_hexprint ( c , dlen , ule , rad )"	113:2:2462:2498	5684140	13	True				
ANR	5684284	CallExpression	"do_hash_hexprint ( c , dlen , ule , rad )"		5684140	0					
ANR	5684285	Callee	do_hash_hexprint		5684140	0					
ANR	5684286	Identifier	do_hash_hexprint		5684140	0					
ANR	5684287	ArgumentList	c		5684140	1					
ANR	5684288	Argument	c		5684140	0					
ANR	5684289	Identifier	c		5684140	0					
ANR	5684290	Argument	dlen		5684140	1					
ANR	5684291	Identifier	dlen		5684140	0					
ANR	5684292	Argument	ule		5684140	2					
ANR	5684293	Identifier	ule		5684140	0					
ANR	5684294	Argument	rad		5684140	3					
ANR	5684295	Identifier	rad		5684140	0					
ANR	5684296	ExpressionStatement	"printf ( ""\\""}"" )"	114:2:2502:2516	5684140	14	True				
ANR	5684297	CallExpression	"printf ( ""\\""}"" )"		5684140	0					
ANR	5684298	Callee	printf		5684140	0					
ANR	5684299	Identifier	printf		5684140	0					
ANR	5684300	ArgumentList	"""\\""}"""		5684140	1					
ANR	5684301	Argument	"""\\""}"""		5684140	0					
ANR	5684302	PrimaryExpression	"""\\""}"""		5684140	0					
ANR	5684303	BreakStatement	break ;	115:2:2520:2525	5684140	15	True				
ANR	5684304	Label	default :	116:1:2528:2535	5684140	16	True				
ANR	5684305	Identifier	default		5684140	0					
ANR	5684306	ExpressionStatement	"o = r_print_randomart ( c , dlen , from )"	117:2:2539:2576	5684140	17	True				
ANR	5684307	AssignmentExpression	"o = r_print_randomart ( c , dlen , from )"		5684140	0		=			
ANR	5684308	Identifier	o		5684140	0					
ANR	5684309	CallExpression	"r_print_randomart ( c , dlen , from )"		5684140	1					
ANR	5684310	Callee	r_print_randomart		5684140	0					
ANR	5684311	Identifier	r_print_randomart		5684140	0					
ANR	5684312	ArgumentList	c		5684140	1					
ANR	5684313	Argument	c		5684140	0					
ANR	5684314	Identifier	c		5684140	0					
ANR	5684315	Argument	dlen		5684140	1					
ANR	5684316	Identifier	dlen		5684140	0					
ANR	5684317	Argument	from		5684140	2					
ANR	5684318	Identifier	from		5684140	0					
ANR	5684319	ExpressionStatement	"printf ( ""%s\\n%s\\n"" , hname , o )"	118:2:2580:2609	5684140	18	True				
ANR	5684320	CallExpression	"printf ( ""%s\\n%s\\n"" , hname , o )"		5684140	0					
ANR	5684321	Callee	printf		5684140	0					
ANR	5684322	Identifier	printf		5684140	0					
ANR	5684323	ArgumentList	"""%s\\n%s\\n"""		5684140	1					
ANR	5684324	Argument	"""%s\\n%s\\n"""		5684140	0					
ANR	5684325	PrimaryExpression	"""%s\\n%s\\n"""		5684140	0					
ANR	5684326	Argument	hname		5684140	1					
ANR	5684327	Identifier	hname		5684140	0					
ANR	5684328	Argument	o		5684140	2					
ANR	5684329	Identifier	o		5684140	0					
ANR	5684330	ExpressionStatement	free ( o )	119:2:2613:2621	5684140	19	True				
ANR	5684331	CallExpression	free ( o )		5684140	0					
ANR	5684332	Callee	free		5684140	0					
ANR	5684333	Identifier	free		5684140	0					
ANR	5684334	ArgumentList	o		5684140	1					
ANR	5684335	Argument	o		5684140	0					
ANR	5684336	Identifier	o		5684140	0					
ANR	5684337	BreakStatement	break ;	120:2:2625:2630	5684140	20	True				
ANR	5684338	ReturnType	static void		5684140	1					
ANR	5684339	Identifier	do_hash_print		5684140	2					
ANR	5684340	ParameterList	"RHash * ctx , ut64 hash , int dlen , int rad , int ule"		5684140	3					
ANR	5684341	Parameter	RHash * ctx	88:26:1846:1855	5684140	0	True				
ANR	5684342	ParameterType	RHash *		5684140	0					
ANR	5684343	Identifier	ctx		5684140	1					
ANR	5684344	Parameter	ut64 hash	88:38:1858:1866	5684140	1	True				
ANR	5684345	ParameterType	ut64		5684140	0					
ANR	5684346	Identifier	hash		5684140	1					
ANR	5684347	Parameter	int dlen	88:49:1869:1876	5684140	2	True				
ANR	5684348	ParameterType	int		5684140	0					
ANR	5684349	Identifier	dlen		5684140	1					
ANR	5684350	Parameter	int rad	88:59:1879:1885	5684140	3	True				
ANR	5684351	ParameterType	int		5684140	0					
ANR	5684352	Identifier	rad		5684140	1					
ANR	5684353	Parameter	int ule	88:68:1888:1894	5684140	4	True				
ANR	5684354	ParameterType	int		5684140	0					
ANR	5684355	Identifier	ule		5684140	1					
ANR	5684356	CFGEntryNode	ENTRY		5684140		True				
ANR	5684357	CFGExitNode	EXIT		5684140		True				
ANR	5684358	Symbol	c		5684140						
ANR	5684359	Symbol	r_hash_name		5684140						
ANR	5684360	Symbol	ctx		5684140						
ANR	5684361	Symbol	r_print_randomart		5684140						
ANR	5684362	Symbol	R_HASH_SIZE_ENTROPY		5684140						
ANR	5684363	Symbol	* ctx		5684140						
ANR	5684364	Symbol	ule		5684140						
ANR	5684365	Symbol	o		5684140						
ANR	5684366	Symbol	rad		5684140						
ANR	5684367	Symbol	ctx -> entropy		5684140						
ANR	5684368	Symbol	ctx -> digest		5684140						
ANR	5684369	Symbol	from		5684140						
ANR	5684370	Symbol	quiet		5684140						
ANR	5684371	Symbol	hash		5684140						
ANR	5684372	Symbol	dlen		5684140						
ANR	5684373	Symbol	hname		5684140						
ANR	5684374	Function	do_hash_internal	124:0:2638:2984							
ANR	5684375	FunctionDef	"do_hash_internal (RHash * ctx , ut64 hash , const ut8 * buf , int len , int rad , int print , int le)"		5684374	0					
ANR	5684376	CompoundStatement		124:104:2742:2984	5684374	0					
ANR	5684377	IfStatement	if ( len < 0 )		5684374	0					
ANR	5684378	Condition	len < 0	125:5:2749:2755	5684374	0	True				
ANR	5684379	RelationalExpression	len < 0		5684374	0		<			
ANR	5684380	Identifier	len		5684374	0					
ANR	5684381	PrimaryExpression	0		5684374	1					
ANR	5684382	CompoundStatement		2:14:15:15	5684374	1					
ANR	5684383	ReturnStatement	return 0 ;	126:2:2762:2770	5684374	0	True				
ANR	5684384	PrimaryExpression	0		5684374	0					
ANR	5684385	IdentifierDeclStatement	"int dlen = r_hash_calculate ( ctx , hash , buf , len ) ;"	128:1:2776:2825	5684374	1	True				
ANR	5684386	IdentifierDecl	"dlen = r_hash_calculate ( ctx , hash , buf , len )"		5684374	0					
ANR	5684387	IdentifierDeclType	int		5684374	0					
ANR	5684388	Identifier	dlen		5684374	1					
ANR	5684389	AssignmentExpression	"dlen = r_hash_calculate ( ctx , hash , buf , len )"		5684374	2		=			
ANR	5684390	Identifier	dlen		5684374	0					
ANR	5684391	CallExpression	"r_hash_calculate ( ctx , hash , buf , len )"		5684374	1					
ANR	5684392	Callee	r_hash_calculate		5684374	0					
ANR	5684393	Identifier	r_hash_calculate		5684374	0					
ANR	5684394	ArgumentList	ctx		5684374	1					
ANR	5684395	Argument	ctx		5684374	0					
ANR	5684396	Identifier	ctx		5684374	0					
ANR	5684397	Argument	hash		5684374	1					
ANR	5684398	Identifier	hash		5684374	0					
ANR	5684399	Argument	buf		5684374	2					
ANR	5684400	Identifier	buf		5684374	0					
ANR	5684401	Argument	len		5684374	3					
ANR	5684402	Identifier	len		5684374	0					
ANR	5684403	IfStatement	if ( ! print )		5684374	2					
ANR	5684404	Condition	! print	129:5:2832:2837	5684374	0	True				
ANR	5684405	UnaryOperationExpression	! print		5684374	0					
ANR	5684406	UnaryOperator	!		5684374	0					
ANR	5684407	Identifier	print		5684374	1					
ANR	5684408	CompoundStatement		6:13:97:97	5684374	1					
ANR	5684409	ReturnStatement	return 1 ;	130:2:2844:2852	5684374	0	True				
ANR	5684410	PrimaryExpression	1		5684374	0					
ANR	5684411	IfStatement	if ( iterations > 0 )		5684374	3					
ANR	5684412	Condition	iterations > 0	132:5:2862:2875	5684374	0	True				
ANR	5684413	RelationalExpression	iterations > 0		5684374	0		>			
ANR	5684414	Identifier	iterations		5684374	0					
ANR	5684415	PrimaryExpression	0		5684374	1					
ANR	5684416	CompoundStatement		9:21:135:135	5684374	1					
ANR	5684417	ExpressionStatement	"r_hash_do_spice ( ctx , hash , iterations , _s )"	133:2:2882:2925	5684374	0	True				
ANR	5684418	CallExpression	"r_hash_do_spice ( ctx , hash , iterations , _s )"		5684374	0					
ANR	5684419	Callee	r_hash_do_spice		5684374	0					
ANR	5684420	Identifier	r_hash_do_spice		5684374	0					
ANR	5684421	ArgumentList	ctx		5684374	1					
ANR	5684422	Argument	ctx		5684374	0					
ANR	5684423	Identifier	ctx		5684374	0					
ANR	5684424	Argument	hash		5684374	1					
ANR	5684425	Identifier	hash		5684374	0					
ANR	5684426	Argument	iterations		5684374	2					
ANR	5684427	Identifier	iterations		5684374	0					
ANR	5684428	Argument	_s		5684374	3					
ANR	5684429	Identifier	_s		5684374	0					
ANR	5684430	ExpressionStatement	"do_hash_print ( ctx , hash , dlen , rad , le )"	135:1:2931:2971	5684374	4	True				
ANR	5684431	CallExpression	"do_hash_print ( ctx , hash , dlen , rad , le )"		5684374	0					
ANR	5684432	Callee	do_hash_print		5684374	0					
ANR	5684433	Identifier	do_hash_print		5684374	0					
ANR	5684434	ArgumentList	ctx		5684374	1					
ANR	5684435	Argument	ctx		5684374	0					
ANR	5684436	Identifier	ctx		5684374	0					
ANR	5684437	Argument	hash		5684374	1					
ANR	5684438	Identifier	hash		5684374	0					
ANR	5684439	Argument	dlen		5684374	2					
ANR	5684440	Identifier	dlen		5684374	0					
ANR	5684441	Argument	rad		5684374	3					
ANR	5684442	Identifier	rad		5684374	0					
ANR	5684443	Argument	le		5684374	4					
ANR	5684444	Identifier	le		5684374	0					
ANR	5684445	ReturnStatement	return 1 ;	136:1:2974:2982	5684374	5	True				
ANR	5684446	PrimaryExpression	1		5684374	0					
ANR	5684447	ReturnType	static int		5684374	1					
ANR	5684448	Identifier	do_hash_internal		5684374	2					
ANR	5684449	ParameterList	"RHash * ctx , ut64 hash , const ut8 * buf , int len , int rad , int print , int le"		5684374	3					
ANR	5684450	Parameter	RHash * ctx	124:28:2666:2675	5684374	0	True				
ANR	5684451	ParameterType	RHash *		5684374	0					
ANR	5684452	Identifier	ctx		5684374	1					
ANR	5684453	Parameter	ut64 hash	124:40:2678:2686	5684374	1	True				
ANR	5684454	ParameterType	ut64		5684374	0					
ANR	5684455	Identifier	hash		5684374	1					
ANR	5684456	Parameter	const ut8 * buf	124:51:2689:2702	5684374	2	True				
ANR	5684457	ParameterType	const ut8 *		5684374	0					
ANR	5684458	Identifier	buf		5684374	1					
ANR	5684459	Parameter	int len	124:67:2705:2711	5684374	3	True				
ANR	5684460	ParameterType	int		5684374	0					
ANR	5684461	Identifier	len		5684374	1					
ANR	5684462	Parameter	int rad	124:76:2714:2720	5684374	4	True				
ANR	5684463	ParameterType	int		5684374	0					
ANR	5684464	Identifier	rad		5684374	1					
ANR	5684465	Parameter	int print	124:85:2723:2731	5684374	5	True				
ANR	5684466	ParameterType	int		5684374	0					
ANR	5684467	Identifier	print		5684374	1					
ANR	5684468	Parameter	int le	124:96:2734:2739	5684374	6	True				
ANR	5684469	ParameterType	int		5684374	0					
ANR	5684470	Identifier	le		5684374	1					
ANR	5684471	CFGEntryNode	ENTRY		5684374		True				
ANR	5684472	CFGExitNode	EXIT		5684374		True				
ANR	5684473	Symbol	buf		5684374						
ANR	5684474	Symbol	print		5684374						
ANR	5684475	Symbol	len		5684374						
ANR	5684476	Symbol	rad		5684374						
ANR	5684477	Symbol	_s		5684374						
ANR	5684478	Symbol	ctx		5684374						
ANR	5684479	Symbol	r_hash_calculate		5684374						
ANR	5684480	Symbol	le		5684374						
ANR	5684481	Symbol	hash		5684374						
ANR	5684482	Symbol	dlen		5684374						
ANR	5684483	Symbol	iterations		5684374						
ANR	5684484	Function	do_hash	139:0:2987:5860							
ANR	5684485	FunctionDef	"do_hash (const char * file , const char * algo , RIO * io , int bsize , int rad , int ule , const ut8 * compare)"		5684484	0					
ANR	5684486	CompoundStatement		139:113:3100:5860	5684484	0					
ANR	5684487	IdentifierDeclStatement	"ut64 j , fsize , algobit = r_hash_name_to_bits ( algo ) ;"	140:1:3103:3154	5684484	0	True				
ANR	5684488	IdentifierDecl	j		5684484	0					
ANR	5684489	IdentifierDeclType	ut64		5684484	0					
ANR	5684490	Identifier	j		5684484	1					
ANR	5684491	IdentifierDecl	fsize		5684484	1					
ANR	5684492	IdentifierDeclType	ut64		5684484	0					
ANR	5684493	Identifier	fsize		5684484	1					
ANR	5684494	IdentifierDecl	algobit = r_hash_name_to_bits ( algo )		5684484	2					
ANR	5684495	IdentifierDeclType	ut64		5684484	0					
ANR	5684496	Identifier	algobit		5684484	1					
ANR	5684497	AssignmentExpression	algobit = r_hash_name_to_bits ( algo )		5684484	2		=			
ANR	5684498	Identifier	algobit		5684484	0					
ANR	5684499	CallExpression	r_hash_name_to_bits ( algo )		5684484	1					
ANR	5684500	Callee	r_hash_name_to_bits		5684484	0					
ANR	5684501	Identifier	r_hash_name_to_bits		5684484	0					
ANR	5684502	ArgumentList	algo		5684484	1					
ANR	5684503	Argument	algo		5684484	0					
ANR	5684504	Identifier	algo		5684484	0					
ANR	5684505	IdentifierDeclStatement	RHash * ctx ;	141:1:3157:3167	5684484	1	True				
ANR	5684506	IdentifierDecl	* ctx		5684484	0					
ANR	5684507	IdentifierDeclType	RHash *		5684484	0					
ANR	5684508	Identifier	ctx		5684484	1					
ANR	5684509	IdentifierDeclStatement	ut8 * buf ;	142:1:3170:3178	5684484	2	True				
ANR	5684510	IdentifierDecl	* buf		5684484	0					
ANR	5684511	IdentifierDeclType	ut8 *		5684484	0					
ANR	5684512	Identifier	buf		5684484	1					
ANR	5684513	IdentifierDeclStatement	int ret = 0 ;	143:1:3181:3192	5684484	3	True				
ANR	5684514	IdentifierDecl	ret = 0		5684484	0					
ANR	5684515	IdentifierDeclType	int		5684484	0					
ANR	5684516	Identifier	ret		5684484	1					
ANR	5684517	AssignmentExpression	ret = 0		5684484	2		=			
ANR	5684518	Identifier	ret		5684484	0					
ANR	5684519	PrimaryExpression	0		5684484	1					
ANR	5684520	IdentifierDeclStatement	ut64 i ;	144:1:3195:3201	5684484	4	True				
ANR	5684521	IdentifierDecl	i		5684484	0					
ANR	5684522	IdentifierDeclType	ut64		5684484	0					
ANR	5684523	Identifier	i		5684484	1					
ANR	5684524	IdentifierDeclStatement	bool first = true ;	145:1:3204:3221	5684484	5	True				
ANR	5684525	IdentifierDecl	first = true		5684484	0					
ANR	5684526	IdentifierDeclType	bool		5684484	0					
ANR	5684527	Identifier	first		5684484	1					
ANR	5684528	AssignmentExpression	first = true		5684484	2		=			
ANR	5684529	Identifier	true		5684484	0					
ANR	5684530	Identifier	true		5684484	1					
ANR	5684531	IfStatement	if ( algobit == R_HASH_NONE )		5684484	6					
ANR	5684532	Condition	algobit == R_HASH_NONE	146:5:3228:3249	5684484	0	True				
ANR	5684533	EqualityExpression	algobit == R_HASH_NONE		5684484	0		==			
ANR	5684534	Identifier	algobit		5684484	0					
ANR	5684535	Identifier	R_HASH_NONE		5684484	1					
ANR	5684536	CompoundStatement		8:29:151:151	5684484	1					
ANR	5684537	ExpressionStatement	"eprintf ( ""rahash2: Invalid hashing algorithm specified\\n"" )"	147:2:3256:3314	5684484	0	True				
ANR	5684538	CallExpression	"eprintf ( ""rahash2: Invalid hashing algorithm specified\\n"" )"		5684484	0					
ANR	5684539	Callee	eprintf		5684484	0					
ANR	5684540	Identifier	eprintf		5684484	0					
ANR	5684541	ArgumentList	"""rahash2: Invalid hashing algorithm specified\\n"""		5684484	1					
ANR	5684542	Argument	"""rahash2: Invalid hashing algorithm specified\\n"""		5684484	0					
ANR	5684543	PrimaryExpression	"""rahash2: Invalid hashing algorithm specified\\n"""		5684484	0					
ANR	5684544	ReturnStatement	return 1 ;	148:2:3318:3326	5684484	1	True				
ANR	5684545	PrimaryExpression	1		5684484	0					
ANR	5684546	ExpressionStatement	fsize = r_io_desc_size ( io -> desc )	150:1:3332:3365	5684484	7	True				
ANR	5684547	AssignmentExpression	fsize = r_io_desc_size ( io -> desc )		5684484	0		=			
ANR	5684548	Identifier	fsize		5684484	0					
ANR	5684549	CallExpression	r_io_desc_size ( io -> desc )		5684484	1					
ANR	5684550	Callee	r_io_desc_size		5684484	0					
ANR	5684551	Identifier	r_io_desc_size		5684484	0					
ANR	5684552	ArgumentList	io -> desc		5684484	1					
ANR	5684553	Argument	io -> desc		5684484	0					
ANR	5684554	PtrMemberAccess	io -> desc		5684484	0					
ANR	5684555	Identifier	io		5684484	0					
ANR	5684556	Identifier	desc		5684484	1					
ANR	5684557	IfStatement	if ( fsize < 1 )		5684484	8					
ANR	5684558	Condition	fsize < 1	151:5:3372:3380	5684484	0	True				
ANR	5684559	RelationalExpression	fsize < 1		5684484	0		<			
ANR	5684560	Identifier	fsize		5684484	0					
ANR	5684561	PrimaryExpression	1		5684484	1					
ANR	5684562	CompoundStatement		13:16:282:282	5684484	1					
ANR	5684563	ExpressionStatement	"eprintf ( ""rahash2: Invalid file size\\n"" )"	152:2:3387:3427	5684484	0	True				
ANR	5684564	CallExpression	"eprintf ( ""rahash2: Invalid file size\\n"" )"		5684484	0					
ANR	5684565	Callee	eprintf		5684484	0					
ANR	5684566	Identifier	eprintf		5684484	0					
ANR	5684567	ArgumentList	"""rahash2: Invalid file size\\n"""		5684484	1					
ANR	5684568	Argument	"""rahash2: Invalid file size\\n"""		5684484	0					
ANR	5684569	PrimaryExpression	"""rahash2: Invalid file size\\n"""		5684484	0					
ANR	5684570	ReturnStatement	return 1 ;	153:2:3431:3439	5684484	1	True				
ANR	5684571	PrimaryExpression	1		5684484	0					
ANR	5684572	IfStatement	if ( bsize < 0 )		5684484	9					
ANR	5684573	Condition	bsize < 0	155:5:3449:3457	5684484	0	True				
ANR	5684574	RelationalExpression	bsize < 0		5684484	0		<			
ANR	5684575	Identifier	bsize		5684484	0					
ANR	5684576	PrimaryExpression	0		5684484	1					
ANR	5684577	CompoundStatement		17:16:359:359	5684484	1					
ANR	5684578	ExpressionStatement	bsize = fsize / - bsize	156:2:3464:3486	5684484	0	True				
ANR	5684579	AssignmentExpression	bsize = fsize / - bsize		5684484	0		=			
ANR	5684580	Identifier	bsize		5684484	0					
ANR	5684581	MultiplicativeExpression	fsize / - bsize		5684484	1		/			
ANR	5684582	Identifier	fsize		5684484	0					
ANR	5684583	UnaryOperationExpression	- bsize		5684484	1					
ANR	5684584	UnaryOperator	-		5684484	0					
ANR	5684585	Identifier	bsize		5684484	1					
ANR	5684586	IfStatement	if ( bsize == 0 || bsize > fsize )		5684484	10					
ANR	5684587	Condition	bsize == 0 || bsize > fsize	158:5:3496:3522	5684484	0	True				
ANR	5684588	OrExpression	bsize == 0 || bsize > fsize		5684484	0		||			
ANR	5684589	EqualityExpression	bsize == 0		5684484	0		==			
ANR	5684590	Identifier	bsize		5684484	0					
ANR	5684591	PrimaryExpression	0		5684484	1					
ANR	5684592	RelationalExpression	bsize > fsize		5684484	1		>			
ANR	5684593	Identifier	bsize		5684484	0					
ANR	5684594	Identifier	fsize		5684484	1					
ANR	5684595	CompoundStatement		20:34:424:424	5684484	1					
ANR	5684596	ExpressionStatement	bsize = fsize	159:2:3529:3542	5684484	0	True				
ANR	5684597	AssignmentExpression	bsize = fsize		5684484	0		=			
ANR	5684598	Identifier	bsize		5684484	0					
ANR	5684599	Identifier	fsize		5684484	1					
ANR	5684600	Statement	if	161:1:3548:3549	5684484	11	True				
ANR	5684601	Statement	(	161:4:3551:3551	5684484	12	True				
ANR	5684602	Statement	to	161:5:3552:3553	5684484	13	True				
ANR	5684603	Statement	==	161:8:3555:3556	5684484	14	True				
ANR	5684604	Statement	0L	161:11:3558:3559	5684484	15	True				
ANR	5684605	Statement	L	161:13:3560:3560	5684484	16	True				
ANR	5684606	Statement	)	161:14:3561:3561	5684484	17	True				
ANR	5684607	CompoundStatement		23:16:462:462	5684484	18					
ANR	5684608	ExpressionStatement	to = fsize	162:2:3567:3577	5684484	0	True				
ANR	5684609	AssignmentExpression	to = fsize		5684484	0		=			
ANR	5684610	Identifier	to		5684484	0					
ANR	5684611	Identifier	fsize		5684484	1					
ANR	5684612	IfStatement	if ( from > to )		5684484	19					
ANR	5684613	Condition	from > to	164:5:3587:3595	5684484	0	True				
ANR	5684614	RelationalExpression	from > to		5684484	0		>			
ANR	5684615	Identifier	from		5684484	0					
ANR	5684616	Identifier	to		5684484	1					
ANR	5684617	CompoundStatement		26:16:497:497	5684484	1					
ANR	5684618	ExpressionStatement	"eprintf ( ""rahash2: Invalid -f -t range\\n"" )"	165:2:3602:3644	5684484	0	True				
ANR	5684619	CallExpression	"eprintf ( ""rahash2: Invalid -f -t range\\n"" )"		5684484	0					
ANR	5684620	Callee	eprintf		5684484	0					
ANR	5684621	Identifier	eprintf		5684484	0					
ANR	5684622	ArgumentList	"""rahash2: Invalid -f -t range\\n"""		5684484	1					
ANR	5684623	Argument	"""rahash2: Invalid -f -t range\\n"""		5684484	0					
ANR	5684624	PrimaryExpression	"""rahash2: Invalid -f -t range\\n"""		5684484	0					
ANR	5684625	ReturnStatement	return 1 ;	166:2:3648:3656	5684484	1	True				
ANR	5684626	PrimaryExpression	1		5684484	0					
ANR	5684627	Statement	if	168:1:3662:3663	5684484	20	True				
ANR	5684628	Statement	(	168:4:3665:3665	5684484	21	True				
ANR	5684629	Statement	fsize	168:5:3666:3670	5684484	22	True				
ANR	5684630	Statement	==	168:11:3672:3673	5684484	23	True				
ANR	5684631	Statement	-	168:14:3675:3675	5684484	24	True				
ANR	5684632	Statement	1L	168:15:3676:3677	5684484	25	True				
ANR	5684633	Statement	L	168:17:3678:3678	5684484	26	True				
ANR	5684634	Statement	)	168:18:3679:3679	5684484	27	True				
ANR	5684635	CompoundStatement		30:20:580:580	5684484	28					
ANR	5684636	ExpressionStatement	"eprintf ( ""rahash2: Unknown file size\\n"" )"	169:2:3685:3725	5684484	0	True				
ANR	5684637	CallExpression	"eprintf ( ""rahash2: Unknown file size\\n"" )"		5684484	0					
ANR	5684638	Callee	eprintf		5684484	0					
ANR	5684639	Identifier	eprintf		5684484	0					
ANR	5684640	ArgumentList	"""rahash2: Unknown file size\\n"""		5684484	1					
ANR	5684641	Argument	"""rahash2: Unknown file size\\n"""		5684484	0					
ANR	5684642	PrimaryExpression	"""rahash2: Unknown file size\\n"""		5684484	0					
ANR	5684643	ReturnStatement	return 1 ;	170:2:3729:3737	5684484	1	True				
ANR	5684644	PrimaryExpression	1		5684484	0					
ANR	5684645	ExpressionStatement	"buf = calloc ( 1 , bsize + 1 )"	172:1:3743:3770	5684484	29	True				
ANR	5684646	AssignmentExpression	"buf = calloc ( 1 , bsize + 1 )"		5684484	0		=			
ANR	5684647	Identifier	buf		5684484	0					
ANR	5684648	CallExpression	"calloc ( 1 , bsize + 1 )"		5684484	1					
ANR	5684649	Callee	calloc		5684484	0					
ANR	5684650	Identifier	calloc		5684484	0					
ANR	5684651	ArgumentList	1		5684484	1					
ANR	5684652	Argument	1		5684484	0					
ANR	5684653	PrimaryExpression	1		5684484	0					
ANR	5684654	Argument	bsize + 1		5684484	1					
ANR	5684655	AdditiveExpression	bsize + 1		5684484	0		+			
ANR	5684656	Identifier	bsize		5684484	0					
ANR	5684657	PrimaryExpression	1		5684484	1					
ANR	5684658	IfStatement	if ( ! buf )		5684484	30					
ANR	5684659	Condition	! buf	173:5:3777:3780	5684484	0	True				
ANR	5684660	UnaryOperationExpression	! buf		5684484	0					
ANR	5684661	UnaryOperator	!		5684484	0					
ANR	5684662	Identifier	buf		5684484	1					
ANR	5684663	CompoundStatement		35:11:682:682	5684484	1					
ANR	5684664	ReturnStatement	return 1 ;	174:2:3787:3795	5684484	0	True				
ANR	5684665	PrimaryExpression	1		5684484	0					
ANR	5684666	ExpressionStatement	"ctx = r_hash_new ( true , algobit )"	176:1:3801:3833	5684484	31	True				
ANR	5684667	AssignmentExpression	"ctx = r_hash_new ( true , algobit )"		5684484	0		=			
ANR	5684668	Identifier	ctx		5684484	0					
ANR	5684669	CallExpression	"r_hash_new ( true , algobit )"		5684484	1					
ANR	5684670	Callee	r_hash_new		5684484	0					
ANR	5684671	Identifier	r_hash_new		5684484	0					
ANR	5684672	ArgumentList	true		5684484	1					
ANR	5684673	Argument	true		5684484	0					
ANR	5684674	Identifier	true		5684484	0					
ANR	5684675	Argument	algobit		5684484	1					
ANR	5684676	Identifier	algobit		5684484	0					
ANR	5684677	IfStatement	if ( rad == 'j' )		5684484	32					
ANR	5684678	Condition	rad == 'j'	178:5:3841:3850	5684484	0	True				
ANR	5684679	EqualityExpression	rad == 'j'		5684484	0		==			
ANR	5684680	Identifier	rad		5684484	0					
ANR	5684681	PrimaryExpression	'j'		5684484	1					
ANR	5684682	CompoundStatement		40:17:752:752	5684484	1					
ANR	5684683	ExpressionStatement	"printf ( ""["" )"	179:2:3857:3869	5684484	0	True				
ANR	5684684	CallExpression	"printf ( ""["" )"		5684484	0					
ANR	5684685	Callee	printf		5684484	0					
ANR	5684686	Identifier	printf		5684484	0					
ANR	5684687	ArgumentList	"""["""		5684484	1					
ANR	5684688	Argument	"""["""		5684484	0					
ANR	5684689	PrimaryExpression	"""["""		5684484	0					
ANR	5684690	IfStatement	if ( incremental )		5684484	33					
ANR	5684691	Condition	incremental	181:5:3879:3889	5684484	0	True				
ANR	5684692	Identifier	incremental		5684484	0					
ANR	5684693	CompoundStatement		43:18:791:791	5684484	1					
ANR	5684694	ForStatement	for ( i = 1 ; i < R_HASH_ALL ; i <<= 1 )		5684484	0					
ANR	5684695	ForInit	i = 1 ;	182:7:3901:3906	5684484	0	True				
ANR	5684696	AssignmentExpression	i = 1		5684484	0		=			
ANR	5684697	Identifier	i		5684484	0					
ANR	5684698	PrimaryExpression	1		5684484	1					
ANR	5684699	Condition	i < R_HASH_ALL	182:14:3908:3921	5684484	1	True				
ANR	5684700	RelationalExpression	i < R_HASH_ALL		5684484	0		<			
ANR	5684701	Identifier	i		5684484	0					
ANR	5684702	Identifier	R_HASH_ALL		5684484	1					
ANR	5684703	AssignmentExpression	i <<= 1	182:30:3924:3930	5684484	2	True	<<=			
ANR	5684704	Identifier	i		5684484	0					
ANR	5684705	PrimaryExpression	1		5684484	1					
ANR	5684706	CompoundStatement		44:39:832:832	5684484	3					
ANR	5684707	IfStatement	if ( algobit & i )		5684484	0					
ANR	5684708	Condition	algobit & i	183:7:3942:3952	5684484	0	True				
ANR	5684709	BitAndExpression	algobit & i		5684484	0		&			
ANR	5684710	Identifier	algobit		5684484	0					
ANR	5684711	Identifier	i		5684484	1					
ANR	5684712	CompoundStatement		47:4:892:924	5684484	1					
ANR	5684713	IdentifierDeclStatement	ut64 hashbit = i & algobit ;	184:4:3961:3987	5684484	0	True				
ANR	5684714	IdentifierDecl	hashbit = i & algobit		5684484	0					
ANR	5684715	IdentifierDeclType	ut64		5684484	0					
ANR	5684716	Identifier	hashbit		5684484	1					
ANR	5684717	AssignmentExpression	hashbit = i & algobit		5684484	2		=			
ANR	5684718	Identifier	hashbit		5684484	0					
ANR	5684719	BitAndExpression	i & algobit		5684484	1		&			
ANR	5684720	Identifier	i		5684484	0					
ANR	5684721	Identifier	algobit		5684484	1					
ANR	5684722	IdentifierDeclStatement	int dlen = r_hash_size ( hashbit ) ;	185:4:3993:4025	5684484	1	True				
ANR	5684723	IdentifierDecl	dlen = r_hash_size ( hashbit )		5684484	0					
ANR	5684724	IdentifierDeclType	int		5684484	0					
ANR	5684725	Identifier	dlen		5684484	1					
ANR	5684726	AssignmentExpression	dlen = r_hash_size ( hashbit )		5684484	2		=			
ANR	5684727	Identifier	dlen		5684484	0					
ANR	5684728	CallExpression	r_hash_size ( hashbit )		5684484	1					
ANR	5684729	Callee	r_hash_size		5684484	0					
ANR	5684730	Identifier	r_hash_size		5684484	0					
ANR	5684731	ArgumentList	hashbit		5684484	1					
ANR	5684732	Argument	hashbit		5684484	0					
ANR	5684733	Identifier	hashbit		5684484	0					
ANR	5684734	ExpressionStatement	"r_hash_do_begin ( ctx , i )"	186:4:4031:4055	5684484	2	True				
ANR	5684735	CallExpression	"r_hash_do_begin ( ctx , i )"		5684484	0					
ANR	5684736	Callee	r_hash_do_begin		5684484	0					
ANR	5684737	Identifier	r_hash_do_begin		5684484	0					
ANR	5684738	ArgumentList	ctx		5684484	1					
ANR	5684739	Argument	ctx		5684484	0					
ANR	5684740	Identifier	ctx		5684484	0					
ANR	5684741	Argument	i		5684484	1					
ANR	5684742	Identifier	i		5684484	0					
ANR	5684743	IfStatement	if ( s . buf && s . prefix )		5684484	3					
ANR	5684744	Condition	s . buf && s . prefix	187:8:4065:4081	5684484	0	True				
ANR	5684745	AndExpression	s . buf && s . prefix		5684484	0		&&			
ANR	5684746	MemberAccess	s . buf		5684484	0					
ANR	5684747	Identifier	s		5684484	0					
ANR	5684748	Identifier	buf		5684484	1					
ANR	5684749	MemberAccess	s . prefix		5684484	1					
ANR	5684750	Identifier	s		5684484	0					
ANR	5684751	Identifier	prefix		5684484	1					
ANR	5684752	CompoundStatement		49:27:983:983	5684484	1					
ANR	5684753	ExpressionStatement	"do_hash_internal ( ctx , hashbit , s . buf , s . len , rad , 0 , ule )"	188:5:4091:4149	5684484	0	True				
ANR	5684754	CallExpression	"do_hash_internal ( ctx , hashbit , s . buf , s . len , rad , 0 , ule )"		5684484	0					
ANR	5684755	Callee	do_hash_internal		5684484	0					
ANR	5684756	Identifier	do_hash_internal		5684484	0					
ANR	5684757	ArgumentList	ctx		5684484	1					
ANR	5684758	Argument	ctx		5684484	0					
ANR	5684759	Identifier	ctx		5684484	0					
ANR	5684760	Argument	hashbit		5684484	1					
ANR	5684761	Identifier	hashbit		5684484	0					
ANR	5684762	Argument	s . buf		5684484	2					
ANR	5684763	MemberAccess	s . buf		5684484	0					
ANR	5684764	Identifier	s		5684484	0					
ANR	5684765	Identifier	buf		5684484	1					
ANR	5684766	Argument	s . len		5684484	3					
ANR	5684767	MemberAccess	s . len		5684484	0					
ANR	5684768	Identifier	s		5684484	0					
ANR	5684769	Identifier	len		5684484	1					
ANR	5684770	Argument	rad		5684484	4					
ANR	5684771	Identifier	rad		5684484	0					
ANR	5684772	Argument	0		5684484	5					
ANR	5684773	PrimaryExpression	0		5684484	0					
ANR	5684774	Argument	ule		5684484	6					
ANR	5684775	Identifier	ule		5684484	0					
ANR	5684776	ForStatement	for ( j = from ; j < to ; j += bsize )		5684484	4					
ANR	5684777	ForInit	j = from ;	190:9:4166:4174	5684484	0	True				
ANR	5684778	AssignmentExpression	j = from		5684484	0		=			
ANR	5684779	Identifier	j		5684484	0					
ANR	5684780	Identifier	from		5684484	1					
ANR	5684781	Condition	j < to	190:19:4176:4181	5684484	1	True				
ANR	5684782	RelationalExpression	j < to		5684484	0		<			
ANR	5684783	Identifier	j		5684484	0					
ANR	5684784	Identifier	to		5684484	1					
ANR	5684785	AssignmentExpression	j += bsize	190:27:4184:4193	5684484	2	True	+=			
ANR	5684786	Identifier	j		5684484	0					
ANR	5684787	Identifier	bsize		5684484	1					
ANR	5684788	CompoundStatement		53:5:1102:1147	5684484	3					
ANR	5684789	IdentifierDeclStatement	int len = ( ( j + bsize ) > to ) ? ( to - j ) : bsize ;	191:5:4203:4248	5684484	0	True				
ANR	5684790	IdentifierDecl	len = ( ( j + bsize ) > to ) ? ( to - j ) : bsize		5684484	0					
ANR	5684791	IdentifierDeclType	int		5684484	0					
ANR	5684792	Identifier	len		5684484	1					
ANR	5684793	AssignmentExpression	len = ( ( j + bsize ) > to ) ? ( to - j ) : bsize		5684484	2		=			
ANR	5684794	Identifier	len		5684484	0					
ANR	5684795	ConditionalExpression	( ( j + bsize ) > to ) ? ( to - j ) : bsize		5684484	1					
ANR	5684796	Condition	( j + bsize ) > to		5684484	0					
ANR	5684797	RelationalExpression	( j + bsize ) > to		5684484	0		>			
ANR	5684798	AdditiveExpression	j + bsize		5684484	0		+			
ANR	5684799	Identifier	j		5684484	0					
ANR	5684800	Identifier	bsize		5684484	1					
ANR	5684801	Identifier	to		5684484	1					
ANR	5684802	AdditiveExpression	to - j		5684484	1		-			
ANR	5684803	Identifier	to		5684484	0					
ANR	5684804	Identifier	j		5684484	1					
ANR	5684805	Identifier	bsize		5684484	2					
ANR	5684806	ExpressionStatement	"r_io_pread_at ( io , j , buf , len )"	192:5:4255:4286	5684484	1	True				
ANR	5684807	CallExpression	"r_io_pread_at ( io , j , buf , len )"		5684484	0					
ANR	5684808	Callee	r_io_pread_at		5684484	0					
ANR	5684809	Identifier	r_io_pread_at		5684484	0					
ANR	5684810	ArgumentList	io		5684484	1					
ANR	5684811	Argument	io		5684484	0					
ANR	5684812	Identifier	io		5684484	0					
ANR	5684813	Argument	j		5684484	1					
ANR	5684814	Identifier	j		5684484	0					
ANR	5684815	Argument	buf		5684484	2					
ANR	5684816	Identifier	buf		5684484	0					
ANR	5684817	Argument	len		5684484	3					
ANR	5684818	Identifier	len		5684484	0					
ANR	5684819	ExpressionStatement	"do_hash_internal ( ctx , hashbit , buf , len , rad , 0 , ule )"	193:5:4293:4347	5684484	2	True				
ANR	5684820	CallExpression	"do_hash_internal ( ctx , hashbit , buf , len , rad , 0 , ule )"		5684484	0					
ANR	5684821	Callee	do_hash_internal		5684484	0					
ANR	5684822	Identifier	do_hash_internal		5684484	0					
ANR	5684823	ArgumentList	ctx		5684484	1					
ANR	5684824	Argument	ctx		5684484	0					
ANR	5684825	Identifier	ctx		5684484	0					
ANR	5684826	Argument	hashbit		5684484	1					
ANR	5684827	Identifier	hashbit		5684484	0					
ANR	5684828	Argument	buf		5684484	2					
ANR	5684829	Identifier	buf		5684484	0					
ANR	5684830	Argument	len		5684484	3					
ANR	5684831	Identifier	len		5684484	0					
ANR	5684832	Argument	rad		5684484	4					
ANR	5684833	Identifier	rad		5684484	0					
ANR	5684834	Argument	0		5684484	5					
ANR	5684835	PrimaryExpression	0		5684484	0					
ANR	5684836	Argument	ule		5684484	6					
ANR	5684837	Identifier	ule		5684484	0					
ANR	5684838	IfStatement	if ( s . buf && ! s . prefix )		5684484	5					
ANR	5684839	Condition	s . buf && ! s . prefix	195:8:4363:4380	5684484	0	True				
ANR	5684840	AndExpression	s . buf && ! s . prefix		5684484	0		&&			
ANR	5684841	MemberAccess	s . buf		5684484	0					
ANR	5684842	Identifier	s		5684484	0					
ANR	5684843	Identifier	buf		5684484	1					
ANR	5684844	UnaryOperationExpression	! s . prefix		5684484	1					
ANR	5684845	UnaryOperator	!		5684484	0					
ANR	5684846	MemberAccess	s . prefix		5684484	1					
ANR	5684847	Identifier	s		5684484	0					
ANR	5684848	Identifier	prefix		5684484	1					
ANR	5684849	CompoundStatement		57:28:1282:1282	5684484	1					
ANR	5684850	ExpressionStatement	"do_hash_internal ( ctx , hashbit , s . buf , s . len , rad , 0 , ule )"	196:5:4390:4448	5684484	0	True				
ANR	5684851	CallExpression	"do_hash_internal ( ctx , hashbit , s . buf , s . len , rad , 0 , ule )"		5684484	0					
ANR	5684852	Callee	do_hash_internal		5684484	0					
ANR	5684853	Identifier	do_hash_internal		5684484	0					
ANR	5684854	ArgumentList	ctx		5684484	1					
ANR	5684855	Argument	ctx		5684484	0					
ANR	5684856	Identifier	ctx		5684484	0					
ANR	5684857	Argument	hashbit		5684484	1					
ANR	5684858	Identifier	hashbit		5684484	0					
ANR	5684859	Argument	s . buf		5684484	2					
ANR	5684860	MemberAccess	s . buf		5684484	0					
ANR	5684861	Identifier	s		5684484	0					
ANR	5684862	Identifier	buf		5684484	1					
ANR	5684863	Argument	s . len		5684484	3					
ANR	5684864	MemberAccess	s . len		5684484	0					
ANR	5684865	Identifier	s		5684484	0					
ANR	5684866	Identifier	len		5684484	1					
ANR	5684867	Argument	rad		5684484	4					
ANR	5684868	Identifier	rad		5684484	0					
ANR	5684869	Argument	0		5684484	5					
ANR	5684870	PrimaryExpression	0		5684484	0					
ANR	5684871	Argument	ule		5684484	6					
ANR	5684872	Identifier	ule		5684484	0					
ANR	5684873	ExpressionStatement	"r_hash_do_end ( ctx , i )"	198:4:4460:4482	5684484	6	True				
ANR	5684874	CallExpression	"r_hash_do_end ( ctx , i )"		5684484	0					
ANR	5684875	Callee	r_hash_do_end		5684484	0					
ANR	5684876	Identifier	r_hash_do_end		5684484	0					
ANR	5684877	ArgumentList	ctx		5684484	1					
ANR	5684878	Argument	ctx		5684484	0					
ANR	5684879	Identifier	ctx		5684484	0					
ANR	5684880	Argument	i		5684484	1					
ANR	5684881	Identifier	i		5684484	0					
ANR	5684882	IfStatement	if ( iterations > 0 )		5684484	7					
ANR	5684883	Condition	iterations > 0	199:8:4492:4505	5684484	0	True				
ANR	5684884	RelationalExpression	iterations > 0		5684484	0		>			
ANR	5684885	Identifier	iterations		5684484	0					
ANR	5684886	PrimaryExpression	0		5684484	1					
ANR	5684887	CompoundStatement		61:24:1407:1407	5684484	1					
ANR	5684888	ExpressionStatement	"r_hash_do_spice ( ctx , i , iterations , _s )"	200:5:4515:4555	5684484	0	True				
ANR	5684889	CallExpression	"r_hash_do_spice ( ctx , i , iterations , _s )"		5684484	0					
ANR	5684890	Callee	r_hash_do_spice		5684484	0					
ANR	5684891	Identifier	r_hash_do_spice		5684484	0					
ANR	5684892	ArgumentList	ctx		5684484	1					
ANR	5684893	Argument	ctx		5684484	0					
ANR	5684894	Identifier	ctx		5684484	0					
ANR	5684895	Argument	i		5684484	1					
ANR	5684896	Identifier	i		5684484	0					
ANR	5684897	Argument	iterations		5684484	2					
ANR	5684898	Identifier	iterations		5684484	0					
ANR	5684899	Argument	_s		5684484	3					
ANR	5684900	Identifier	_s		5684484	0					
ANR	5684901	IfStatement	if ( ! * r_hash_name ( i ) )		5684484	8					
ANR	5684902	Condition	! * r_hash_name ( i )	202:8:4571:4587	5684484	0	True				
ANR	5684903	UnaryOperationExpression	! * r_hash_name ( i )		5684484	0					
ANR	5684904	UnaryOperator	!		5684484	0					
ANR	5684905	UnaryOperationExpression	* r_hash_name ( i )		5684484	1					
ANR	5684906	UnaryOperator	*		5684484	0					
ANR	5684907	CallExpression	r_hash_name ( i )		5684484	1					
ANR	5684908	Callee	r_hash_name		5684484	0					
ANR	5684909	Identifier	r_hash_name		5684484	0					
ANR	5684910	ArgumentList	i		5684484	1					
ANR	5684911	Argument	i		5684484	0					
ANR	5684912	Identifier	i		5684484	0					
ANR	5684913	CompoundStatement		64:27:1489:1489	5684484	1					
ANR	5684914	ContinueStatement	continue ;	203:5:4597:4605	5684484	0	True				
ANR	5684915	IfStatement	if ( rad == 'j' )		5684484	9					
ANR	5684916	Condition	rad == 'j'	205:8:4621:4630	5684484	0	True				
ANR	5684917	EqualityExpression	rad == 'j'		5684484	0		==			
ANR	5684918	Identifier	rad		5684484	0					
ANR	5684919	PrimaryExpression	'j'		5684484	1					
ANR	5684920	CompoundStatement		67:20:1532:1532	5684484	1					
ANR	5684921	IfStatement	if ( first )		5684484	0					
ANR	5684922	Condition	first	206:9:4644:4648	5684484	0	True				
ANR	5684923	Identifier	first		5684484	0					
ANR	5684924	CompoundStatement		68:16:1550:1550	5684484	1					
ANR	5684925	ExpressionStatement	first = false	207:6:4659:4672	5684484	0	True				
ANR	5684926	AssignmentExpression	first = false		5684484	0		=			
ANR	5684927	Identifier	first		5684484	0					
ANR	5684928	Identifier	false		5684484	1					
ANR	5684929	ElseStatement	else		5684484	0					
ANR	5684930	CompoundStatement		70:12:1585:1585	5684484	0					
ANR	5684931	ExpressionStatement	"printf ( "","" )"	209:6:4694:4706	5684484	0	True				
ANR	5684932	CallExpression	"printf ( "","" )"		5684484	0					
ANR	5684933	Callee	printf		5684484	0					
ANR	5684934	Identifier	printf		5684484	0					
ANR	5684935	ArgumentList	""","""		5684484	1					
ANR	5684936	Argument	""","""		5684484	0					
ANR	5684937	PrimaryExpression	""","""		5684484	0					
ANR	5684938	IfStatement	if ( ! quiet && rad != 'j' )		5684484	10					
ANR	5684939	Condition	! quiet && rad != 'j'	212:8:4729:4748	5684484	0	True				
ANR	5684940	AndExpression	! quiet && rad != 'j'		5684484	0		&&			
ANR	5684941	UnaryOperationExpression	! quiet		5684484	0					
ANR	5684942	UnaryOperator	!		5684484	0					
ANR	5684943	Identifier	quiet		5684484	1					
ANR	5684944	EqualityExpression	rad != 'j'		5684484	1		!=			
ANR	5684945	Identifier	rad		5684484	0					
ANR	5684946	PrimaryExpression	'j'		5684484	1					
ANR	5684947	CompoundStatement		74:30:1650:1650	5684484	1					
ANR	5684948	ExpressionStatement	"printf ( ""%s: "" , file )"	213:5:4758:4779	5684484	0	True				
ANR	5684949	CallExpression	"printf ( ""%s: "" , file )"		5684484	0					
ANR	5684950	Callee	printf		5684484	0					
ANR	5684951	Identifier	printf		5684484	0					
ANR	5684952	ArgumentList	"""%s: """		5684484	1					
ANR	5684953	Argument	"""%s: """		5684484	0					
ANR	5684954	PrimaryExpression	"""%s: """		5684484	0					
ANR	5684955	Argument	file		5684484	1					
ANR	5684956	Identifier	file		5684484	0					
ANR	5684957	ExpressionStatement	"do_hash_print ( ctx , i , dlen , quiet ? 'n' : rad , ule )"	215:4:4791:4841	5684484	11	True				
ANR	5684958	CallExpression	"do_hash_print ( ctx , i , dlen , quiet ? 'n' : rad , ule )"		5684484	0					
ANR	5684959	Callee	do_hash_print		5684484	0					
ANR	5684960	Identifier	do_hash_print		5684484	0					
ANR	5684961	ArgumentList	ctx		5684484	1					
ANR	5684962	Argument	ctx		5684484	0					
ANR	5684963	Identifier	ctx		5684484	0					
ANR	5684964	Argument	i		5684484	1					
ANR	5684965	Identifier	i		5684484	0					
ANR	5684966	Argument	dlen		5684484	2					
ANR	5684967	Identifier	dlen		5684484	0					
ANR	5684968	Argument	quiet ? 'n' : rad		5684484	3					
ANR	5684969	ConditionalExpression	quiet ? 'n' : rad		5684484	0					
ANR	5684970	Condition	quiet		5684484	0					
ANR	5684971	Identifier	quiet		5684484	0					
ANR	5684972	PrimaryExpression	'n'		5684484	1					
ANR	5684973	Identifier	rad		5684484	2					
ANR	5684974	Argument	ule		5684484	4					
ANR	5684975	Identifier	ule		5684484	0					
ANR	5684976	IfStatement	if ( quiet == 1 )		5684484	12					
ANR	5684977	Condition	quiet == 1	216:8:4851:4860	5684484	0	True				
ANR	5684978	EqualityExpression	quiet == 1		5684484	0		==			
ANR	5684979	Identifier	quiet		5684484	0					
ANR	5684980	PrimaryExpression	1		5684484	1					
ANR	5684981	CompoundStatement		78:20:1762:1762	5684484	1					
ANR	5684982	ExpressionStatement	"printf ( "" %s\\n"" , file )"	217:5:4870:4892	5684484	0	True				
ANR	5684983	CallExpression	"printf ( "" %s\\n"" , file )"		5684484	0					
ANR	5684984	Callee	printf		5684484	0					
ANR	5684985	Identifier	printf		5684484	0					
ANR	5684986	ArgumentList	""" %s\\n"""		5684484	1					
ANR	5684987	Argument	""" %s\\n"""		5684484	0					
ANR	5684988	PrimaryExpression	""" %s\\n"""		5684484	0					
ANR	5684989	Argument	file		5684484	1					
ANR	5684990	Identifier	file		5684484	0					
ANR	5684991	ElseStatement	else		5684484	0					
ANR	5684992	CompoundStatement		80:11:1804:1804	5684484	0					
ANR	5684993	IfStatement	if ( quiet && ! rad )		5684484	0					
ANR	5684994	Condition	quiet && ! rad	219:9:4916:4928	5684484	0	True				
ANR	5684995	AndExpression	quiet && ! rad		5684484	0		&&			
ANR	5684996	Identifier	quiet		5684484	0					
ANR	5684997	UnaryOperationExpression	! rad		5684484	1					
ANR	5684998	UnaryOperator	!		5684484	0					
ANR	5684999	Identifier	rad		5684484	1					
ANR	5685000	CompoundStatement		81:24:1830:1830	5684484	1					
ANR	5685001	ExpressionStatement	"printf ( ""\\n"" )"	220:6:4939:4952	5684484	0	True				
ANR	5685002	CallExpression	"printf ( ""\\n"" )"		5684484	0					
ANR	5685003	Callee	printf		5684484	0					
ANR	5685004	Identifier	printf		5684484	0					
ANR	5685005	ArgumentList	"""\\n"""		5684484	1					
ANR	5685006	Argument	"""\\n"""		5684484	0					
ANR	5685007	PrimaryExpression	"""\\n"""		5684484	0					
ANR	5685008	IfStatement	if ( _s )		5684484	1					
ANR	5685009	Condition	_s	225:6:4982:4983	5684484	0	True				
ANR	5685010	Identifier	_s		5684484	0					
ANR	5685011	CompoundStatement		87:10:1885:1885	5684484	1					
ANR	5685012	ExpressionStatement	free ( _s -> buf )	226:3:4991:5005	5684484	0	True				
ANR	5685013	CallExpression	free ( _s -> buf )		5684484	0					
ANR	5685014	Callee	free		5684484	0					
ANR	5685015	Identifier	free		5684484	0					
ANR	5685016	ArgumentList	_s -> buf		5684484	1					
ANR	5685017	Argument	_s -> buf		5684484	0					
ANR	5685018	PtrMemberAccess	_s -> buf		5684484	0					
ANR	5685019	Identifier	_s		5684484	0					
ANR	5685020	Identifier	buf		5684484	1					
ANR	5685021	ElseStatement	else		5684484	0					
ANR	5685022	CompoundStatement		90:8:1918:1918	5684484	0					
ANR	5685023	IfStatement	if ( s . buf )		5684484	0					
ANR	5685024	Condition	s . buf	230:6:5067:5071	5684484	0	True				
ANR	5685025	MemberAccess	s . buf		5684484	0					
ANR	5685026	Identifier	s		5684484	0					
ANR	5685027	Identifier	buf		5684484	1					
ANR	5685028	CompoundStatement		92:13:1973:1973	5684484	1					
ANR	5685029	ExpressionStatement	"eprintf ( ""Warning: Seed ignored on per-block hashing.\\n"" )"	231:3:5079:5136	5684484	0	True				
ANR	5685030	CallExpression	"eprintf ( ""Warning: Seed ignored on per-block hashing.\\n"" )"		5684484	0					
ANR	5685031	Callee	eprintf		5684484	0					
ANR	5685032	Identifier	eprintf		5684484	0					
ANR	5685033	ArgumentList	"""Warning: Seed ignored on per-block hashing.\\n"""		5684484	1					
ANR	5685034	Argument	"""Warning: Seed ignored on per-block hashing.\\n"""		5684484	0					
ANR	5685035	PrimaryExpression	"""Warning: Seed ignored on per-block hashing.\\n"""		5684484	0					
ANR	5685036	ForStatement	for ( i = 1 ; i < R_HASH_ALL ; i <<= 1 )		5684484	1					
ANR	5685037	ForInit	i = 1 ;	233:7:5149:5154	5684484	0	True				
ANR	5685038	AssignmentExpression	i = 1		5684484	0		=			
ANR	5685039	Identifier	i		5684484	0					
ANR	5685040	PrimaryExpression	1		5684484	1					
ANR	5685041	Condition	i < R_HASH_ALL	233:14:5156:5169	5684484	1	True				
ANR	5685042	RelationalExpression	i < R_HASH_ALL		5684484	0		<			
ANR	5685043	Identifier	i		5684484	0					
ANR	5685044	Identifier	R_HASH_ALL		5684484	1					
ANR	5685045	AssignmentExpression	i <<= 1	233:30:5172:5178	5684484	2	True	<<=			
ANR	5685046	Identifier	i		5684484	0					
ANR	5685047	PrimaryExpression	1		5684484	1					
ANR	5685048	CompoundStatement		96:3:2085:2106	5684484	3					
ANR	5685049	IdentifierDeclStatement	"ut64 f , t , ofrom , oto ;"	234:3:5186:5207	5684484	0	True				
ANR	5685050	IdentifierDecl	f		5684484	0					
ANR	5685051	IdentifierDeclType	ut64		5684484	0					
ANR	5685052	Identifier	f		5684484	1					
ANR	5685053	IdentifierDecl	t		5684484	1					
ANR	5685054	IdentifierDeclType	ut64		5684484	0					
ANR	5685055	Identifier	t		5684484	1					
ANR	5685056	IdentifierDecl	ofrom		5684484	2					
ANR	5685057	IdentifierDeclType	ut64		5684484	0					
ANR	5685058	Identifier	ofrom		5684484	1					
ANR	5685059	IdentifierDecl	oto		5684484	3					
ANR	5685060	IdentifierDeclType	ut64		5684484	0					
ANR	5685061	Identifier	oto		5684484	1					
ANR	5685062	IfStatement	if ( algobit & i )		5684484	1					
ANR	5685063	Condition	algobit & i	235:7:5216:5226	5684484	0	True				
ANR	5685064	BitAndExpression	algobit & i		5684484	0		&			
ANR	5685065	Identifier	algobit		5684484	0					
ANR	5685066	Identifier	i		5684484	1					
ANR	5685067	CompoundStatement		98:4:2134:2160	5684484	1					
ANR	5685068	IdentifierDeclStatement	ut64 hashbit = i & algobit ;	236:4:5235:5261	5684484	0	True				
ANR	5685069	IdentifierDecl	hashbit = i & algobit		5684484	0					
ANR	5685070	IdentifierDeclType	ut64		5684484	0					
ANR	5685071	Identifier	hashbit		5684484	1					
ANR	5685072	AssignmentExpression	hashbit = i & algobit		5684484	2		=			
ANR	5685073	Identifier	hashbit		5684484	0					
ANR	5685074	BitAndExpression	i & algobit		5684484	1		&			
ANR	5685075	Identifier	i		5684484	0					
ANR	5685076	Identifier	algobit		5684484	1					
ANR	5685077	ExpressionStatement	ofrom = from	237:4:5267:5279	5684484	1	True				
ANR	5685078	AssignmentExpression	ofrom = from		5684484	0		=			
ANR	5685079	Identifier	ofrom		5684484	0					
ANR	5685080	Identifier	from		5684484	1					
ANR	5685081	ExpressionStatement	oto = to	238:4:5285:5293	5684484	2	True				
ANR	5685082	AssignmentExpression	oto = to		5684484	0		=			
ANR	5685083	Identifier	oto		5684484	0					
ANR	5685084	Identifier	to		5684484	1					
ANR	5685085	ExpressionStatement	f = from	239:4:5299:5307	5684484	3	True				
ANR	5685086	AssignmentExpression	f = from		5684484	0		=			
ANR	5685087	Identifier	f		5684484	0					
ANR	5685088	Identifier	from		5684484	1					
ANR	5685089	ExpressionStatement	t = to	240:4:5313:5319	5684484	4	True				
ANR	5685090	AssignmentExpression	t = to		5684484	0		=			
ANR	5685091	Identifier	t		5684484	0					
ANR	5685092	Identifier	to		5684484	1					
ANR	5685093	ForStatement	for ( j = f ; j < t ; j += bsize )		5684484	5					
ANR	5685094	ForInit	j = f ;	241:9:5330:5335	5684484	0	True				
ANR	5685095	AssignmentExpression	j = f		5684484	0		=			
ANR	5685096	Identifier	j		5684484	0					
ANR	5685097	Identifier	f		5684484	1					
ANR	5685098	Condition	j < t	241:16:5337:5341	5684484	1	True				
ANR	5685099	RelationalExpression	j < t		5684484	0		<			
ANR	5685100	Identifier	j		5684484	0					
ANR	5685101	Identifier	t		5684484	1					
ANR	5685102	AssignmentExpression	j += bsize	241:23:5344:5353	5684484	2	True	+=			
ANR	5685103	Identifier	j		5684484	0					
ANR	5685104	Identifier	bsize		5684484	1					
ANR	5685105	CompoundStatement		104:5:2262:2313	5684484	3					
ANR	5685106	IdentifierDeclStatement	int nsize = ( j + bsize < fsize ) ? bsize : ( fsize - j ) ;	242:5:5363:5414	5684484	0	True				
ANR	5685107	IdentifierDecl	nsize = ( j + bsize < fsize ) ? bsize : ( fsize - j )		5684484	0					
ANR	5685108	IdentifierDeclType	int		5684484	0					
ANR	5685109	Identifier	nsize		5684484	1					
ANR	5685110	AssignmentExpression	nsize = ( j + bsize < fsize ) ? bsize : ( fsize - j )		5684484	2		=			
ANR	5685111	Identifier	nsize		5684484	0					
ANR	5685112	ConditionalExpression	( j + bsize < fsize ) ? bsize : ( fsize - j )		5684484	1					
ANR	5685113	Condition	j + bsize < fsize		5684484	0					
ANR	5685114	RelationalExpression	j + bsize < fsize		5684484	0		<			
ANR	5685115	AdditiveExpression	j + bsize		5684484	0		+			
ANR	5685116	Identifier	j		5684484	0					
ANR	5685117	Identifier	bsize		5684484	1					
ANR	5685118	Identifier	fsize		5684484	1					
ANR	5685119	Identifier	bsize		5684484	1					
ANR	5685120	AdditiveExpression	fsize - j		5684484	2		-			
ANR	5685121	Identifier	fsize		5684484	0					
ANR	5685122	Identifier	j		5684484	1					
ANR	5685123	ExpressionStatement	"r_io_pread_at ( io , j , buf , bsize )"	243:5:5421:5454	5684484	1	True				
ANR	5685124	CallExpression	"r_io_pread_at ( io , j , buf , bsize )"		5684484	0					
ANR	5685125	Callee	r_io_pread_at		5684484	0					
ANR	5685126	Identifier	r_io_pread_at		5684484	0					
ANR	5685127	ArgumentList	io		5684484	1					
ANR	5685128	Argument	io		5684484	0					
ANR	5685129	Identifier	io		5684484	0					
ANR	5685130	Argument	j		5684484	1					
ANR	5685131	Identifier	j		5684484	0					
ANR	5685132	Argument	buf		5684484	2					
ANR	5685133	Identifier	buf		5684484	0					
ANR	5685134	Argument	bsize		5684484	3					
ANR	5685135	Identifier	bsize		5684484	0					
ANR	5685136	ExpressionStatement	from = j	244:5:5461:5469	5684484	2	True				
ANR	5685137	AssignmentExpression	from = j		5684484	0		=			
ANR	5685138	Identifier	from		5684484	0					
ANR	5685139	Identifier	j		5684484	1					
ANR	5685140	ExpressionStatement	to = j + bsize	245:5:5476:5490	5684484	3	True				
ANR	5685141	AssignmentExpression	to = j + bsize		5684484	0		=			
ANR	5685142	Identifier	to		5684484	0					
ANR	5685143	AdditiveExpression	j + bsize		5684484	1		+			
ANR	5685144	Identifier	j		5684484	0					
ANR	5685145	Identifier	bsize		5684484	1					
ANR	5685146	IfStatement	if ( to > fsize )		5684484	4					
ANR	5685147	Condition	to > fsize	246:9:5501:5510	5684484	0	True				
ANR	5685148	RelationalExpression	to > fsize		5684484	0		>			
ANR	5685149	Identifier	to		5684484	0					
ANR	5685150	Identifier	fsize		5684484	1					
ANR	5685151	CompoundStatement		108:21:2412:2412	5684484	1					
ANR	5685152	ExpressionStatement	to = fsize	247:6:5521:5531	5684484	0	True				
ANR	5685153	AssignmentExpression	to = fsize		5684484	0		=			
ANR	5685154	Identifier	to		5684484	0					
ANR	5685155	Identifier	fsize		5684484	1					
ANR	5685156	ExpressionStatement	"do_hash_internal ( ctx , hashbit , buf , nsize , rad , 1 , ule )"	249:5:5545:5601	5684484	5	True				
ANR	5685157	CallExpression	"do_hash_internal ( ctx , hashbit , buf , nsize , rad , 1 , ule )"		5684484	0					
ANR	5685158	Callee	do_hash_internal		5684484	0					
ANR	5685159	Identifier	do_hash_internal		5684484	0					
ANR	5685160	ArgumentList	ctx		5684484	1					
ANR	5685161	Argument	ctx		5684484	0					
ANR	5685162	Identifier	ctx		5684484	0					
ANR	5685163	Argument	hashbit		5684484	1					
ANR	5685164	Identifier	hashbit		5684484	0					
ANR	5685165	Argument	buf		5684484	2					
ANR	5685166	Identifier	buf		5684484	0					
ANR	5685167	Argument	nsize		5684484	3					
ANR	5685168	Identifier	nsize		5684484	0					
ANR	5685169	Argument	rad		5684484	4					
ANR	5685170	Identifier	rad		5684484	0					
ANR	5685171	Argument	1		5684484	5					
ANR	5685172	PrimaryExpression	1		5684484	0					
ANR	5685173	Argument	ule		5684484	6					
ANR	5685174	Identifier	ule		5684484	0					
ANR	5685175	ExpressionStatement	"do_hash_internal ( ctx , hashbit , NULL , 0 , rad , 1 , ule )"	251:4:5613:5666	5684484	6	True				
ANR	5685176	CallExpression	"do_hash_internal ( ctx , hashbit , NULL , 0 , rad , 1 , ule )"		5684484	0					
ANR	5685177	Callee	do_hash_internal		5684484	0					
ANR	5685178	Identifier	do_hash_internal		5684484	0					
ANR	5685179	ArgumentList	ctx		5684484	1					
ANR	5685180	Argument	ctx		5684484	0					
ANR	5685181	Identifier	ctx		5684484	0					
ANR	5685182	Argument	hashbit		5684484	1					
ANR	5685183	Identifier	hashbit		5684484	0					
ANR	5685184	Argument	NULL		5684484	2					
ANR	5685185	Identifier	NULL		5684484	0					
ANR	5685186	Argument	0		5684484	3					
ANR	5685187	PrimaryExpression	0		5684484	0					
ANR	5685188	Argument	rad		5684484	4					
ANR	5685189	Identifier	rad		5684484	0					
ANR	5685190	Argument	1		5684484	5					
ANR	5685191	PrimaryExpression	1		5684484	0					
ANR	5685192	Argument	ule		5684484	6					
ANR	5685193	Identifier	ule		5684484	0					
ANR	5685194	ExpressionStatement	from = ofrom	252:4:5672:5684	5684484	7	True				
ANR	5685195	AssignmentExpression	from = ofrom		5684484	0		=			
ANR	5685196	Identifier	from		5684484	0					
ANR	5685197	Identifier	ofrom		5684484	1					
ANR	5685198	ExpressionStatement	to = oto	253:4:5690:5698	5684484	8	True				
ANR	5685199	AssignmentExpression	to = oto		5684484	0		=			
ANR	5685200	Identifier	to		5684484	0					
ANR	5685201	Identifier	oto		5684484	1					
ANR	5685202	IfStatement	if ( rad == 'j' )		5684484	34					
ANR	5685203	Condition	rad == 'j'	257:5:5717:5726	5684484	0	True				
ANR	5685204	EqualityExpression	rad == 'j'		5684484	0		==			
ANR	5685205	Identifier	rad		5684484	0					
ANR	5685206	PrimaryExpression	'j'		5684484	1					
ANR	5685207	CompoundStatement		119:17:2628:2628	5684484	1					
ANR	5685208	ExpressionStatement	"printf ( ""]\\n"" )"	258:2:5733:5747	5684484	0	True				
ANR	5685209	CallExpression	"printf ( ""]\\n"" )"		5684484	0					
ANR	5685210	Callee	printf		5684484	0					
ANR	5685211	Identifier	printf		5684484	0					
ANR	5685212	ArgumentList	"""]\\n"""		5684484	1					
ANR	5685213	Argument	"""]\\n"""		5684484	0					
ANR	5685214	PrimaryExpression	"""]\\n"""		5684484	0					
ANR	5685215	ExpressionStatement	"compare_hashes ( ctx , compare , r_hash_size ( algobit ) , & ret )"	261:1:5754:5812	5684484	35	True				
ANR	5685216	CallExpression	"compare_hashes ( ctx , compare , r_hash_size ( algobit ) , & ret )"		5684484	0					
ANR	5685217	Callee	compare_hashes		5684484	0					
ANR	5685218	Identifier	compare_hashes		5684484	0					
ANR	5685219	ArgumentList	ctx		5684484	1					
ANR	5685220	Argument	ctx		5684484	0					
ANR	5685221	Identifier	ctx		5684484	0					
ANR	5685222	Argument	compare		5684484	1					
ANR	5685223	Identifier	compare		5684484	0					
ANR	5685224	Argument	r_hash_size ( algobit )		5684484	2					
ANR	5685225	CallExpression	r_hash_size ( algobit )		5684484	0					
ANR	5685226	Callee	r_hash_size		5684484	0					
ANR	5685227	Identifier	r_hash_size		5684484	0					
ANR	5685228	ArgumentList	algobit		5684484	1					
ANR	5685229	Argument	algobit		5684484	0					
ANR	5685230	Identifier	algobit		5684484	0					
ANR	5685231	Argument	& ret		5684484	3					
ANR	5685232	UnaryOperationExpression	& ret		5684484	0					
ANR	5685233	UnaryOperator	&		5684484	0					
ANR	5685234	Identifier	ret		5684484	1					
ANR	5685235	ExpressionStatement	r_hash_free ( ctx )	262:1:5815:5832	5684484	36	True				
ANR	5685236	CallExpression	r_hash_free ( ctx )		5684484	0					
ANR	5685237	Callee	r_hash_free		5684484	0					
ANR	5685238	Identifier	r_hash_free		5684484	0					
ANR	5685239	ArgumentList	ctx		5684484	1					
ANR	5685240	Argument	ctx		5684484	0					
ANR	5685241	Identifier	ctx		5684484	0					
ANR	5685242	ExpressionStatement	free ( buf )	263:1:5835:5845	5684484	37	True				
ANR	5685243	CallExpression	free ( buf )		5684484	0					
ANR	5685244	Callee	free		5684484	0					
ANR	5685245	Identifier	free		5684484	0					
ANR	5685246	ArgumentList	buf		5684484	1					
ANR	5685247	Argument	buf		5684484	0					
ANR	5685248	Identifier	buf		5684484	0					
ANR	5685249	ReturnStatement	return ret ;	264:1:5848:5858	5684484	38	True				
ANR	5685250	Identifier	ret		5684484	0					
ANR	5685251	ReturnType	static int		5684484	1					
ANR	5685252	Identifier	do_hash		5684484	2					
ANR	5685253	ParameterList	"const char * file , const char * algo , RIO * io , int bsize , int rad , int ule , const ut8 * compare"		5684484	3					
ANR	5685254	Parameter	const char * file	139:19:3006:3021	5684484	0	True				
ANR	5685255	ParameterType	const char *		5684484	0					
ANR	5685256	Identifier	file		5684484	1					
ANR	5685257	Parameter	const char * algo	139:37:3024:3039	5684484	1	True				
ANR	5685258	ParameterType	const char *		5684484	0					
ANR	5685259	Identifier	algo		5684484	1					
ANR	5685260	Parameter	RIO * io	139:55:3042:3048	5684484	2	True				
ANR	5685261	ParameterType	RIO *		5684484	0					
ANR	5685262	Identifier	io		5684484	1					
ANR	5685263	Parameter	int bsize	139:64:3051:3059	5684484	3	True				
ANR	5685264	ParameterType	int		5684484	0					
ANR	5685265	Identifier	bsize		5684484	1					
ANR	5685266	Parameter	int rad	139:75:3062:3068	5684484	4	True				
ANR	5685267	ParameterType	int		5684484	0					
ANR	5685268	Identifier	rad		5684484	1					
ANR	5685269	Parameter	int ule	139:84:3071:3077	5684484	5	True				
ANR	5685270	ParameterType	int		5684484	0					
ANR	5685271	Identifier	ule		5684484	1					
ANR	5685272	Parameter	const ut8 * compare	139:93:3080:3097	5684484	6	True				
ANR	5685273	ParameterType	const ut8 *		5684484	0					
ANR	5685274	Identifier	compare		5684484	1					
ANR	5685275	CFGEntryNode	ENTRY		5684484		True				
ANR	5685276	CFGExitNode	EXIT		5684484		True				
ANR	5685277	Symbol	& ret		5684484						
ANR	5685278	Symbol	io -> desc		5684484						
ANR	5685279	Symbol	r_hash_name		5684484						
ANR	5685280	Symbol	r_hash_size		5684484						
ANR	5685281	Symbol	s . buf		5684484						
ANR	5685282	Symbol	s . prefix		5684484						
ANR	5685283	Symbol	r_hash_name_to_bits		5684484						
ANR	5685284	Symbol	rad		5684484						
ANR	5685285	Symbol	len		5684484						
ANR	5685286	Symbol	s . len		5684484						
ANR	5685287	Symbol	from		5684484						
ANR	5685288	Symbol	dlen		5684484						
ANR	5685289	Symbol	ret		5684484						
ANR	5685290	Symbol	NULL		5684484						
ANR	5685291	Symbol	io		5684484						
ANR	5685292	Symbol	ctx		5684484						
ANR	5685293	Symbol	* r_hash_name		5684484						
ANR	5685294	Symbol	_s -> buf		5684484						
ANR	5685295	Symbol	oto		5684484						
ANR	5685296	Symbol	hashbit		5684484						
ANR	5685297	Symbol	nsize		5684484						
ANR	5685298	Symbol	iterations		5684484						
ANR	5685299	Symbol	ule		5684484						
ANR	5685300	Symbol	fsize		5684484						
ANR	5685301	Symbol	true		5684484						
ANR	5685302	Symbol	* _s		5684484						
ANR	5685303	Symbol	algobit		5684484						
ANR	5685304	Symbol	compare		5684484						
ANR	5685305	Symbol	r_io_desc_size		5684484						
ANR	5685306	Symbol	calloc		5684484						
ANR	5685307	Symbol	* io		5684484						
ANR	5685308	Symbol	file		5684484						
ANR	5685309	Symbol	R_HASH_NONE		5684484						
ANR	5685310	Symbol	ofrom		5684484						
ANR	5685311	Symbol	quiet		5684484						
ANR	5685312	Symbol	f		5684484						
ANR	5685313	Symbol	R_HASH_ALL		5684484						
ANR	5685314	Symbol	false		5684484						
ANR	5685315	Symbol	i		5684484						
ANR	5685316	Symbol	j		5684484						
ANR	5685317	Symbol	* r_hash_name ( i )		5684484						
ANR	5685318	Symbol	incremental		5684484						
ANR	5685319	Symbol	r_hash_new		5684484						
ANR	5685320	Symbol	buf		5684484						
ANR	5685321	Symbol	s		5684484						
ANR	5685322	Symbol	_s		5684484						
ANR	5685323	Symbol	t		5684484						
ANR	5685324	Symbol	bsize		5684484						
ANR	5685325	Symbol	to		5684484						
ANR	5685326	Symbol	algo		5684484						
ANR	5685327	Symbol	first		5684484						
ANR	5685328	Function	do_help	267:0:5863:7225							
ANR	5685329	FunctionDef	do_help (int line)		5685328	0					
ANR	5685330	CompoundStatement		267:29:5892:7225	5685328	0					
ANR	5685331	ExpressionStatement	"printf ( ""Usage: rahash2 [-rBhLkv] [-b S] [-a A] [-c H] [-E A] [-s S] [-f O] [-t O] [file] ...\\n"" )"	268:1:5895:5992	5685328	0	True				
ANR	5685332	CallExpression	"printf ( ""Usage: rahash2 [-rBhLkv] [-b S] [-a A] [-c H] [-E A] [-s S] [-f O] [-t O] [file] ...\\n"" )"		5685328	0					
ANR	5685333	Callee	printf		5685328	0					
ANR	5685334	Identifier	printf		5685328	0					
ANR	5685335	ArgumentList	"""Usage: rahash2 [-rBhLkv] [-b S] [-a A] [-c H] [-E A] [-s S] [-f O] [-t O] [file] ...\\n"""		5685328	1					
ANR	5685336	Argument	"""Usage: rahash2 [-rBhLkv] [-b S] [-a A] [-c H] [-E A] [-s S] [-f O] [-t O] [file] ...\\n"""		5685328	0					
ANR	5685337	PrimaryExpression	"""Usage: rahash2 [-rBhLkv] [-b S] [-a A] [-c H] [-E A] [-s S] [-f O] [-t O] [file] ...\\n"""		5685328	0					
ANR	5685338	IfStatement	if ( line )		5685328	1					
ANR	5685339	Condition	line	269:5:5999:6002	5685328	0	True				
ANR	5685340	Identifier	line		5685328	0					
ANR	5685341	CompoundStatement		3:11:112:112	5685328	1					
ANR	5685342	ReturnStatement	return 0 ;	270:2:6009:6017	5685328	0	True				
ANR	5685343	PrimaryExpression	0		5685328	0					
ANR	5685344	Statement	printf	272:1:6023:6028	5685328	2	True				
ANR	5685345	Statement	(	272:8:6030:6030	5685328	3	True				
ANR	5685346	Statement	""" -a algo     comma separated list of algorithms (default is 'sha256')\\n"""	273:2:6034:6106	5685328	4	True				
ANR	5685347	Statement	""" -b bsize    specify the size of the block (instead of full file)\\n"""	274:2:6110:6178	5685328	5	True				
ANR	5685348	Statement	""" -B          show per-block hash\\n"""	275:2:6182:6217	5685328	6	True				
ANR	5685349	Statement	""" -c hash     compare with this hash\\n"""	276:2:6221:6259	5685328	7	True				
ANR	5685350	Statement	""" -e          swap endian (use little endian)\\n"""	277:2:6263:6310	5685328	8	True				
ANR	5685351	Statement	""" -E algo     encrypt. Use -S to set key and -I to set IV\\n"""	278:2:6314:6373	5685328	9	True				
ANR	5685352	Statement	""" -D algo     decrypt. Use -S to set key and -I to set IV\\n"""	279:2:6377:6436	5685328	10	True				
ANR	5685353	Statement	""" -f from     start hashing at given address\\n"""	280:2:6440:6486	5685328	11	True				
ANR	5685354	Statement	""" -i num      repeat hash N iterations\\n"""	281:2:6490:6530	5685328	12	True				
ANR	5685355	Statement	""" -I iv       use give initialization vector (IV) (hexa or s:string)\\n"""	282:2:6534:6604	5685328	13	True				
ANR	5685356	Statement	""" -S seed     use given seed (hexa or s:string) use ^ to prefix (key for -E)\\n"""	283:2:6608:6686	5685328	14	True				
ANR	5685357	Statement	"""             (- will slurp the key from stdin, the @ prefix points to a file\\n"""	284:2:6690:6769	5685328	15	True				
ANR	5685358	Statement	""" -k          show hash using the openssh's randomkey algorithm\\n"""	285:2:6773:6838	5685328	16	True				
ANR	5685359	Statement	""" -q          run in quiet mode (-qq to show only the hash)\\n"""	286:2:6842:6903	5685328	17	True				
ANR	5685360	Statement	""" -L          list all available algorithms (see -a)\\n"""	287:2:6907:6961	5685328	18	True				
ANR	5685361	Statement	""" -r          output radare commands\\n"""	288:2:6965:7003	5685328	19	True				
ANR	5685362	Statement	""" -s string   hash this string instead of files\\n"""	289:2:7007:7056	5685328	20	True				
ANR	5685363	Statement	""" -t to       stop hashing at given address\\n"""	290:2:7060:7105	5685328	21	True				
ANR	5685364	Statement	""" -x hexstr   hash this hexpair string instead of files\\n"""	291:2:7109:7166	5685328	22	True				
ANR	5685365	Statement	""" -v          show version information\\n"""	292:2:7170:7210	5685328	23	True				
ANR	5685366	Statement	)	292:43:7211:7211	5685328	24	True				
ANR	5685367	ExpressionStatement		292:44:7212:7212	5685328	25	True				
ANR	5685368	ReturnStatement	return 0 ;	293:1:7215:7223	5685328	26	True				
ANR	5685369	PrimaryExpression	0		5685328	0					
ANR	5685370	ReturnType	static int		5685328	1					
ANR	5685371	Identifier	do_help		5685328	2					
ANR	5685372	ParameterList	int line		5685328	3					
ANR	5685373	Parameter	int line	267:19:5882:5889	5685328	0	True				
ANR	5685374	ParameterType	int		5685328	0					
ANR	5685375	Identifier	line		5685328	1					
ANR	5685376	CFGEntryNode	ENTRY		5685328		True				
ANR	5685377	CFGExitNode	EXIT		5685328		True				
ANR	5685378	Symbol	line		5685328						
ANR	5685379	Function	algolist	296:0:7228:7821							
ANR	5685380	FunctionDef	algolist ()		5685379	0					
ANR	5685381	CompoundStatement		296:23:7251:7821	5685379	0					
ANR	5685382	IdentifierDeclStatement	ut64 bits ;	297:1:7254:7263	5685379	0	True				
ANR	5685383	IdentifierDecl	bits		5685379	0					
ANR	5685384	IdentifierDeclType	ut64		5685379	0					
ANR	5685385	Identifier	bits		5685379	1					
ANR	5685386	IdentifierDeclStatement	ut64 i ;	298:1:7266:7272	5685379	1	True				
ANR	5685387	IdentifierDecl	i		5685379	0					
ANR	5685388	IdentifierDeclType	ut64		5685379	0					
ANR	5685389	Identifier	i		5685379	1					
ANR	5685390	ExpressionStatement	"eprintf ( ""Available Hashes: \\n"" )"	299:1:7275:7307	5685379	2	True				
ANR	5685391	CallExpression	"eprintf ( ""Available Hashes: \\n"" )"		5685379	0					
ANR	5685392	Callee	eprintf		5685379	0					
ANR	5685393	Identifier	eprintf		5685379	0					
ANR	5685394	ArgumentList	"""Available Hashes: \\n"""		5685379	1					
ANR	5685395	Argument	"""Available Hashes: \\n"""		5685379	0					
ANR	5685396	PrimaryExpression	"""Available Hashes: \\n"""		5685379	0					
ANR	5685397	ForStatement	for ( i = 0 ; i < R_HASH_NBITS ; i ++ )		5685379	3					
ANR	5685398	ForInit	i = 0 ;	300:6:7315:7320	5685379	0	True				
ANR	5685399	AssignmentExpression	i = 0		5685379	0		=			
ANR	5685400	Identifier	i		5685379	0					
ANR	5685401	PrimaryExpression	0		5685379	1					
ANR	5685402	Condition	i < R_HASH_NBITS	300:13:7322:7337	5685379	1	True				
ANR	5685403	RelationalExpression	i < R_HASH_NBITS		5685379	0		<			
ANR	5685404	Identifier	i		5685379	0					
ANR	5685405	Identifier	R_HASH_NBITS		5685379	1					
ANR	5685406	PostIncDecOperationExpression	i ++	300:31:7340:7342	5685379	2	True				
ANR	5685407	Identifier	i		5685379	0					
ANR	5685408	IncDec	++		5685379	1					
ANR	5685409	CompoundStatement		7:2:117:154	5685379	3					
ANR	5685410	Statement	bits	301:2:7349:7352	5685379	0	True				
ANR	5685411	Statement	=	301:7:7354:7354	5685379	1	True				
ANR	5685412	Statement	1UL	301:9:7356:7358	5685379	2	True				
ANR	5685413	ExpressionStatement	L << i	301:12:7359:7365	5685379	3	True				
ANR	5685414	ShiftExpression	L << i		5685379	0		<<			
ANR	5685415	Identifier	L		5685379	0					
ANR	5685416	Identifier	i		5685379	1					
ANR	5685417	IdentifierDeclStatement	const char * name = r_hash_name ( bits ) ;	302:2:7369:7406	5685379	4	True				
ANR	5685418	IdentifierDecl	* name = r_hash_name ( bits )		5685379	0					
ANR	5685419	IdentifierDeclType	const char *		5685379	0					
ANR	5685420	Identifier	name		5685379	1					
ANR	5685421	AssignmentExpression	* name = r_hash_name ( bits )		5685379	2		=			
ANR	5685422	Identifier	name		5685379	0					
ANR	5685423	CallExpression	r_hash_name ( bits )		5685379	1					
ANR	5685424	Callee	r_hash_name		5685379	0					
ANR	5685425	Identifier	r_hash_name		5685379	0					
ANR	5685426	ArgumentList	bits		5685379	1					
ANR	5685427	Argument	bits		5685379	0					
ANR	5685428	Identifier	bits		5685379	0					
ANR	5685429	IfStatement	if ( name && * name )		5685379	5					
ANR	5685430	Condition	name && * name	303:6:7414:7426	5685379	0	True				
ANR	5685431	AndExpression	name && * name		5685379	0		&&			
ANR	5685432	Identifier	name		5685379	0					
ANR	5685433	UnaryOperationExpression	* name		5685379	1					
ANR	5685434	UnaryOperator	*		5685379	0					
ANR	5685435	Identifier	name		5685379	1					
ANR	5685436	CompoundStatement		8:21:177:177	5685379	1					
ANR	5685437	ExpressionStatement	"printf ( ""h  %s\\n"" , name )"	304:3:7434:7458	5685379	0	True				
ANR	5685438	CallExpression	"printf ( ""h  %s\\n"" , name )"		5685379	0					
ANR	5685439	Callee	printf		5685379	0					
ANR	5685440	Identifier	printf		5685379	0					
ANR	5685441	ArgumentList	"""h  %s\\n"""		5685379	1					
ANR	5685442	Argument	"""h  %s\\n"""		5685379	0					
ANR	5685443	PrimaryExpression	"""h  %s\\n"""		5685379	0					
ANR	5685444	Argument	name		5685379	1					
ANR	5685445	Identifier	name		5685379	0					
ANR	5685446	ExpressionStatement	"eprintf ( ""\\nAvailable Encoders/Decoders: \\n"" )"	307:1:7468:7513	5685379	4	True				
ANR	5685447	CallExpression	"eprintf ( ""\\nAvailable Encoders/Decoders: \\n"" )"		5685379	0					
ANR	5685448	Callee	eprintf		5685379	0					
ANR	5685449	Identifier	eprintf		5685379	0					
ANR	5685450	ArgumentList	"""\\nAvailable Encoders/Decoders: \\n"""		5685379	1					
ANR	5685451	Argument	"""\\nAvailable Encoders/Decoders: \\n"""		5685379	0					
ANR	5685452	PrimaryExpression	"""\\nAvailable Encoders/Decoders: \\n"""		5685379	0					
ANR	5685453	ExpressionStatement	"printf ( ""e  base64\\n"" )"	309:1:7542:7564	5685379	5	True				
ANR	5685454	CallExpression	"printf ( ""e  base64\\n"" )"		5685379	0					
ANR	5685455	Callee	printf		5685379	0					
ANR	5685456	Identifier	printf		5685379	0					
ANR	5685457	ArgumentList	"""e  base64\\n"""		5685379	1					
ANR	5685458	Argument	"""e  base64\\n"""		5685379	0					
ANR	5685459	PrimaryExpression	"""e  base64\\n"""		5685379	0					
ANR	5685460	ExpressionStatement	"printf ( ""e  base91\\n"" )"	310:1:7567:7589	5685379	6	True				
ANR	5685461	CallExpression	"printf ( ""e  base91\\n"" )"		5685379	0					
ANR	5685462	Callee	printf		5685379	0					
ANR	5685463	Identifier	printf		5685379	0					
ANR	5685464	ArgumentList	"""e  base91\\n"""		5685379	1					
ANR	5685465	Argument	"""e  base91\\n"""		5685379	0					
ANR	5685466	PrimaryExpression	"""e  base91\\n"""		5685379	0					
ANR	5685467	ExpressionStatement	"printf ( ""e  punycode\\n"" )"	311:1:7592:7616	5685379	7	True				
ANR	5685468	CallExpression	"printf ( ""e  punycode\\n"" )"		5685379	0					
ANR	5685469	Callee	printf		5685379	0					
ANR	5685470	Identifier	printf		5685379	0					
ANR	5685471	ArgumentList	"""e  punycode\\n"""		5685379	1					
ANR	5685472	Argument	"""e  punycode\\n"""		5685379	0					
ANR	5685473	PrimaryExpression	"""e  punycode\\n"""		5685379	0					
ANR	5685474	ExpressionStatement	"eprintf ( ""\\nAvailable Crypto Algos: \\n"" )"	312:1:7619:7659	5685379	8	True				
ANR	5685475	CallExpression	"eprintf ( ""\\nAvailable Crypto Algos: \\n"" )"		5685379	0					
ANR	5685476	Callee	eprintf		5685379	0					
ANR	5685477	Identifier	eprintf		5685379	0					
ANR	5685478	ArgumentList	"""\\nAvailable Crypto Algos: \\n"""		5685379	1					
ANR	5685479	Argument	"""\\nAvailable Crypto Algos: \\n"""		5685379	0					
ANR	5685480	PrimaryExpression	"""\\nAvailable Crypto Algos: \\n"""		5685379	0					
ANR	5685481	ForStatement	for ( i = 0 ; ; i ++ )		5685379	9					
ANR	5685482	ForInit	i = 0 ;	313:6:7667:7672	5685379	0	True				
ANR	5685483	AssignmentExpression	i = 0		5685379	0		=			
ANR	5685484	Identifier	i		5685379	0					
ANR	5685485	PrimaryExpression	0		5685379	1					
ANR	5685486	PostIncDecOperationExpression	i ++	313:14:7675:7677	5685379	1	True				
ANR	5685487	Identifier	i		5685379	0					
ANR	5685488	IncDec	++		5685379	1					
ANR	5685489	CompoundStatement		20:2:458:497	5685379	2					
ANR	5685490	ExpressionStatement	bits = ( ( ut64 ) 1 ) << i	314:2:7684:7706	5685379	0	True				
ANR	5685491	AssignmentExpression	bits = ( ( ut64 ) 1 ) << i		5685379	0		=			
ANR	5685492	Identifier	bits		5685379	0					
ANR	5685493	ShiftExpression	( ( ut64 ) 1 ) << i		5685379	1		<<			
ANR	5685494	CastExpression	( ut64 ) 1		5685379	0					
ANR	5685495	CastTarget	ut64		5685379	0					
ANR	5685496	PrimaryExpression	1		5685379	1					
ANR	5685497	Identifier	i		5685379	1					
ANR	5685498	IdentifierDeclStatement	const char * name = r_crypto_name ( bits ) ;	315:2:7710:7749	5685379	1	True				
ANR	5685499	IdentifierDecl	* name = r_crypto_name ( bits )		5685379	0					
ANR	5685500	IdentifierDeclType	const char *		5685379	0					
ANR	5685501	Identifier	name		5685379	1					
ANR	5685502	AssignmentExpression	* name = r_crypto_name ( bits )		5685379	2		=			
ANR	5685503	Identifier	name		5685379	0					
ANR	5685504	CallExpression	r_crypto_name ( bits )		5685379	1					
ANR	5685505	Callee	r_crypto_name		5685379	0					
ANR	5685506	Identifier	r_crypto_name		5685379	0					
ANR	5685507	ArgumentList	bits		5685379	1					
ANR	5685508	Argument	bits		5685379	0					
ANR	5685509	Identifier	bits		5685379	0					
ANR	5685510	IfStatement	if ( ! name || ! * name )		5685379	2					
ANR	5685511	Condition	! name || ! * name	316:6:7757:7771	5685379	0	True				
ANR	5685512	OrExpression	! name || ! * name		5685379	0		||			
ANR	5685513	UnaryOperationExpression	! name		5685379	0					
ANR	5685514	UnaryOperator	!		5685379	0					
ANR	5685515	Identifier	name		5685379	1					
ANR	5685516	UnaryOperationExpression	! * name		5685379	1					
ANR	5685517	UnaryOperator	!		5685379	0					
ANR	5685518	UnaryOperationExpression	* name		5685379	1					
ANR	5685519	UnaryOperator	*		5685379	0					
ANR	5685520	Identifier	name		5685379	1					
ANR	5685521	CompoundStatement		21:23:522:522	5685379	1					
ANR	5685522	BreakStatement	break ;	317:3:7779:7784	5685379	0	True				
ANR	5685523	ExpressionStatement	"printf ( ""c  %s\\n"" , name )"	319:2:7792:7816	5685379	3	True				
ANR	5685524	CallExpression	"printf ( ""c  %s\\n"" , name )"		5685379	0					
ANR	5685525	Callee	printf		5685379	0					
ANR	5685526	Identifier	printf		5685379	0					
ANR	5685527	ArgumentList	"""c  %s\\n"""		5685379	1					
ANR	5685528	Argument	"""c  %s\\n"""		5685379	0					
ANR	5685529	PrimaryExpression	"""c  %s\\n"""		5685379	0					
ANR	5685530	Argument	name		5685379	1					
ANR	5685531	Identifier	name		5685379	0					
ANR	5685532	ReturnType	static void		5685379	1					
ANR	5685533	Identifier	algolist		5685379	2					
ANR	5685534	ParameterList			5685379	3					
ANR	5685535	CFGEntryNode	ENTRY		5685379		True				
ANR	5685536	CFGExitNode	EXIT		5685379		True				
ANR	5685537	InfiniteForNode	true		5685379		True				
ANR	5685538	Symbol	* name		5685379						
ANR	5685539	Symbol	r_hash_name		5685379						
ANR	5685540	Symbol	R_HASH_NBITS		5685379						
ANR	5685541	Symbol	bits		5685379						
ANR	5685542	Symbol	name		5685379						
ANR	5685543	Symbol	i		5685379						
ANR	5685544	Symbol	r_crypto_name		5685379						
ANR	5685545	Function	is_power_of_two	332:0:7977:8050							
ANR	5685546	FunctionDef	is_power_of_two (const ut64 x)		5685545	0					
ANR	5685547	CompoundStatement		332:42:8019:8050	5685545	0					
ANR	5685548	ReturnStatement	return x && ! ( x & ( x - 1 ) ) ;	333:1:8022:8048	5685545	0	True				
ANR	5685549	AndExpression	x && ! ( x & ( x - 1 ) )		5685545	0		&&			
ANR	5685550	Identifier	x		5685545	0					
ANR	5685551	UnaryOperationExpression	! ( x & ( x - 1 ) )		5685545	1					
ANR	5685552	UnaryOperator	!		5685545	0					
ANR	5685553	BitAndExpression	x & ( x - 1 )		5685545	1		&			
ANR	5685554	Identifier	x		5685545	0					
ANR	5685555	AdditiveExpression	x - 1		5685545	1		-			
ANR	5685556	Identifier	x		5685545	0					
ANR	5685557	PrimaryExpression	1		5685545	1					
ANR	5685558	ReturnType	static bool		5685545	1					
ANR	5685559	Identifier	is_power_of_two		5685545	2					
ANR	5685560	ParameterList	const ut64 x		5685545	3					
ANR	5685561	Parameter	const ut64 x	332:28:8005:8016	5685545	0	True				
ANR	5685562	ParameterType	const ut64		5685545	0					
ANR	5685563	Identifier	x		5685545	1					
ANR	5685564	CFGEntryNode	ENTRY		5685545		True				
ANR	5685565	CFGExitNode	EXIT		5685545		True				
ANR	5685566	Symbol	x		5685545						
ANR	5685567	Function	encrypt_or_decrypt	337:0:8094:9292							
ANR	5685568	FunctionDef	"encrypt_or_decrypt (const char * algo , int direction , const char * hashstr , int hashstr_len , const ut8 * iv , int ivlen , int mode)"		5685567	0					
ANR	5685569	CompoundStatement		337:137:8231:9292	5685567	0					
ANR	5685570	IdentifierDeclStatement	"bool no_key_mode = ! strcmp ( ""base64"" , algo ) || ! strcmp ( ""base91"" , algo ) || ! strcmp ( ""punycode"" , algo ) ;"	338:1:8234:8335	5685567	0	True				
ANR	5685571	IdentifierDecl	"no_key_mode = ! strcmp ( ""base64"" , algo ) || ! strcmp ( ""base91"" , algo ) || ! strcmp ( ""punycode"" , algo )"		5685567	0					
ANR	5685572	IdentifierDeclType	bool		5685567	0					
ANR	5685573	Identifier	no_key_mode		5685567	1					
ANR	5685574	AssignmentExpression	"no_key_mode = ! strcmp ( ""base64"" , algo ) || ! strcmp ( ""base91"" , algo ) || ! strcmp ( ""punycode"" , algo )"		5685567	2		=			
ANR	5685575	Identifier	no_key_mode		5685567	0					
ANR	5685576	OrExpression	"! strcmp ( ""base64"" , algo ) || ! strcmp ( ""base91"" , algo ) || ! strcmp ( ""punycode"" , algo )"		5685567	1		||			
ANR	5685577	UnaryOperationExpression	"! strcmp ( ""base64"" , algo )"		5685567	0					
ANR	5685578	UnaryOperator	!		5685567	0					
ANR	5685579	CallExpression	"strcmp ( ""base64"" , algo )"		5685567	1					
ANR	5685580	Callee	strcmp		5685567	0					
ANR	5685581	Identifier	strcmp		5685567	0					
ANR	5685582	ArgumentList	"""base64"""		5685567	1					
ANR	5685583	Argument	"""base64"""		5685567	0					
ANR	5685584	PrimaryExpression	"""base64"""		5685567	0					
ANR	5685585	Argument	algo		5685567	1					
ANR	5685586	Identifier	algo		5685567	0					
ANR	5685587	OrExpression	"! strcmp ( ""base91"" , algo ) || ! strcmp ( ""punycode"" , algo )"		5685567	1		||			
ANR	5685588	UnaryOperationExpression	"! strcmp ( ""base91"" , algo )"		5685567	0					
ANR	5685589	UnaryOperator	!		5685567	0					
ANR	5685590	CallExpression	"strcmp ( ""base91"" , algo )"		5685567	1					
ANR	5685591	Callee	strcmp		5685567	0					
ANR	5685592	Identifier	strcmp		5685567	0					
ANR	5685593	ArgumentList	"""base91"""		5685567	1					
ANR	5685594	Argument	"""base91"""		5685567	0					
ANR	5685595	PrimaryExpression	"""base91"""		5685567	0					
ANR	5685596	Argument	algo		5685567	1					
ANR	5685597	Identifier	algo		5685567	0					
ANR	5685598	UnaryOperationExpression	"! strcmp ( ""punycode"" , algo )"		5685567	1					
ANR	5685599	UnaryOperator	!		5685567	0					
ANR	5685600	CallExpression	"strcmp ( ""punycode"" , algo )"		5685567	1					
ANR	5685601	Callee	strcmp		5685567	0					
ANR	5685602	Identifier	strcmp		5685567	0					
ANR	5685603	ArgumentList	"""punycode"""		5685567	1					
ANR	5685604	Argument	"""punycode"""		5685567	0					
ANR	5685605	PrimaryExpression	"""punycode"""		5685567	0					
ANR	5685606	Argument	algo		5685567	1					
ANR	5685607	Identifier	algo		5685567	0					
ANR	5685608	IfStatement	if ( no_key_mode || s . len > 0 )		5685567	1					
ANR	5685609	Condition	no_key_mode || s . len > 0	339:5:8402:8425	5685567	0	True				
ANR	5685610	OrExpression	no_key_mode || s . len > 0		5685567	0		||			
ANR	5685611	Identifier	no_key_mode		5685567	0					
ANR	5685612	RelationalExpression	s . len > 0		5685567	1		>			
ANR	5685613	MemberAccess	s . len		5685567	0					
ANR	5685614	Identifier	s		5685567	0					
ANR	5685615	Identifier	len		5685567	1					
ANR	5685616	PrimaryExpression	0		5685567	1					
ANR	5685617	CompoundStatement		4:2:200:230	5685567	1					
ANR	5685618	IdentifierDeclStatement	RCrypto * cry = r_crypto_new ( ) ;	340:2:8432:8462	5685567	0	True				
ANR	5685619	IdentifierDecl	* cry = r_crypto_new ( )		5685567	0					
ANR	5685620	IdentifierDeclType	RCrypto *		5685567	0					
ANR	5685621	Identifier	cry		5685567	1					
ANR	5685622	AssignmentExpression	* cry = r_crypto_new ( )		5685567	2		=			
ANR	5685623	Identifier	cry		5685567	0					
ANR	5685624	CallExpression	r_crypto_new ( )		5685567	1					
ANR	5685625	Callee	r_crypto_new		5685567	0					
ANR	5685626	Identifier	r_crypto_new		5685567	0					
ANR	5685627	ArgumentList			5685567	1					
ANR	5685628	IfStatement	"if ( r_crypto_use ( cry , algo ) )"		5685567	1					
ANR	5685629	Condition	"r_crypto_use ( cry , algo )"	341:6:8470:8493	5685567	0	True				
ANR	5685630	CallExpression	"r_crypto_use ( cry , algo )"		5685567	0					
ANR	5685631	Callee	r_crypto_use		5685567	0					
ANR	5685632	Identifier	r_crypto_use		5685567	0					
ANR	5685633	ArgumentList	cry		5685567	1					
ANR	5685634	Argument	cry		5685567	0					
ANR	5685635	Identifier	cry		5685567	0					
ANR	5685636	Argument	algo		5685567	1					
ANR	5685637	Identifier	algo		5685567	0					
ANR	5685638	CompoundStatement		5:32:264:264	5685567	1					
ANR	5685639	IfStatement	"if ( r_crypto_set_key ( cry , s . buf , s . len , 0 , direction ) )"		5685567	0					
ANR	5685640	Condition	"r_crypto_set_key ( cry , s . buf , s . len , 0 , direction )"	342:7:8505:8554	5685567	0	True				
ANR	5685641	CallExpression	"r_crypto_set_key ( cry , s . buf , s . len , 0 , direction )"		5685567	0					
ANR	5685642	Callee	r_crypto_set_key		5685567	0					
ANR	5685643	Identifier	r_crypto_set_key		5685567	0					
ANR	5685644	ArgumentList	cry		5685567	1					
ANR	5685645	Argument	cry		5685567	0					
ANR	5685646	Identifier	cry		5685567	0					
ANR	5685647	Argument	s . buf		5685567	1					
ANR	5685648	MemberAccess	s . buf		5685567	0					
ANR	5685649	Identifier	s		5685567	0					
ANR	5685650	Identifier	buf		5685567	1					
ANR	5685651	Argument	s . len		5685567	2					
ANR	5685652	MemberAccess	s . len		5685567	0					
ANR	5685653	Identifier	s		5685567	0					
ANR	5685654	Identifier	len		5685567	1					
ANR	5685655	Argument	0		5685567	3					
ANR	5685656	PrimaryExpression	0		5685567	0					
ANR	5685657	Argument	direction		5685567	4					
ANR	5685658	Identifier	direction		5685567	0					
ANR	5685659	CompoundStatement		19:4:613:666	5685567	1					
ANR	5685660	IdentifierDeclStatement	const char * buf = hashstr ;	343:4:8563:8588	5685567	0	True				
ANR	5685661	IdentifierDecl	* buf = hashstr		5685567	0					
ANR	5685662	IdentifierDeclType	const char *		5685567	0					
ANR	5685663	Identifier	buf		5685567	1					
ANR	5685664	AssignmentExpression	* buf = hashstr		5685567	2		=			
ANR	5685665	Identifier	hashstr		5685567	0					
ANR	5685666	Identifier	hashstr		5685567	1					
ANR	5685667	IdentifierDeclStatement	int buflen = hashstr_len ;	344:4:8594:8618	5685567	1	True				
ANR	5685668	IdentifierDecl	buflen = hashstr_len		5685567	0					
ANR	5685669	IdentifierDeclType	int		5685567	0					
ANR	5685670	Identifier	buflen		5685567	1					
ANR	5685671	AssignmentExpression	buflen = hashstr_len		5685567	2		=			
ANR	5685672	Identifier	hashstr_len		5685567	0					
ANR	5685673	Identifier	hashstr_len		5685567	1					
ANR	5685674	IfStatement	"if ( iv && ! r_crypto_set_iv ( cry , iv , ivlen ) )"		5685567	2					
ANR	5685675	Condition	"iv && ! r_crypto_set_iv ( cry , iv , ivlen )"	346:8:8629:8667	5685567	0	True				
ANR	5685676	AndExpression	"iv && ! r_crypto_set_iv ( cry , iv , ivlen )"		5685567	0		&&			
ANR	5685677	Identifier	iv		5685567	0					
ANR	5685678	UnaryOperationExpression	"! r_crypto_set_iv ( cry , iv , ivlen )"		5685567	1					
ANR	5685679	UnaryOperator	!		5685567	0					
ANR	5685680	CallExpression	"r_crypto_set_iv ( cry , iv , ivlen )"		5685567	1					
ANR	5685681	Callee	r_crypto_set_iv		5685567	0					
ANR	5685682	Identifier	r_crypto_set_iv		5685567	0					
ANR	5685683	ArgumentList	cry		5685567	1					
ANR	5685684	Argument	cry		5685567	0					
ANR	5685685	Identifier	cry		5685567	0					
ANR	5685686	Argument	iv		5685567	1					
ANR	5685687	Identifier	iv		5685567	0					
ANR	5685688	Argument	ivlen		5685567	2					
ANR	5685689	Identifier	ivlen		5685567	0					
ANR	5685690	CompoundStatement		10:49:438:438	5685567	1					
ANR	5685691	ExpressionStatement	"eprintf ( ""Invalid IV.\\n"" )"	347:5:8677:8702	5685567	0	True				
ANR	5685692	CallExpression	"eprintf ( ""Invalid IV.\\n"" )"		5685567	0					
ANR	5685693	Callee	eprintf		5685567	0					
ANR	5685694	Identifier	eprintf		5685567	0					
ANR	5685695	ArgumentList	"""Invalid IV.\\n"""		5685567	1					
ANR	5685696	Argument	"""Invalid IV.\\n"""		5685567	0					
ANR	5685697	PrimaryExpression	"""Invalid IV.\\n"""		5685567	0					
ANR	5685698	ReturnStatement	return 0 ;	348:5:8709:8717	5685567	1	True				
ANR	5685699	PrimaryExpression	0		5685567	0					
ANR	5685700	ExpressionStatement	"r_crypto_update ( cry , ( const ut8 * ) buf , buflen )"	351:4:8730:8778	5685567	3	True				
ANR	5685701	CallExpression	"r_crypto_update ( cry , ( const ut8 * ) buf , buflen )"		5685567	0					
ANR	5685702	Callee	r_crypto_update		5685567	0					
ANR	5685703	Identifier	r_crypto_update		5685567	0					
ANR	5685704	ArgumentList	cry		5685567	1					
ANR	5685705	Argument	cry		5685567	0					
ANR	5685706	Identifier	cry		5685567	0					
ANR	5685707	Argument	( const ut8 * ) buf		5685567	1					
ANR	5685708	CastExpression	( const ut8 * ) buf		5685567	0					
ANR	5685709	CastTarget	const ut8 *		5685567	0					
ANR	5685710	Identifier	buf		5685567	1					
ANR	5685711	Argument	buflen		5685567	2					
ANR	5685712	Identifier	buflen		5685567	0					
ANR	5685713	ExpressionStatement	"r_crypto_final ( cry , NULL , 0 )"	352:4:8784:8813	5685567	4	True				
ANR	5685714	CallExpression	"r_crypto_final ( cry , NULL , 0 )"		5685567	0					
ANR	5685715	Callee	r_crypto_final		5685567	0					
ANR	5685716	Identifier	r_crypto_final		5685567	0					
ANR	5685717	ArgumentList	cry		5685567	1					
ANR	5685718	Argument	cry		5685567	0					
ANR	5685719	Identifier	cry		5685567	0					
ANR	5685720	Argument	NULL		5685567	1					
ANR	5685721	Identifier	NULL		5685567	0					
ANR	5685722	Argument	0		5685567	2					
ANR	5685723	PrimaryExpression	0		5685567	0					
ANR	5685724	IdentifierDeclStatement	int result_size = 0 ;	354:4:8820:8839	5685567	5	True				
ANR	5685725	IdentifierDecl	result_size = 0		5685567	0					
ANR	5685726	IdentifierDeclType	int		5685567	0					
ANR	5685727	Identifier	result_size		5685567	1					
ANR	5685728	AssignmentExpression	result_size = 0		5685567	2		=			
ANR	5685729	Identifier	result_size		5685567	0					
ANR	5685730	PrimaryExpression	0		5685567	1					
ANR	5685731	IdentifierDeclStatement	"ut8 * result = r_crypto_get_output ( cry , & result_size ) ;"	355:4:8845:8898	5685567	6	True				
ANR	5685732	IdentifierDecl	"* result = r_crypto_get_output ( cry , & result_size )"		5685567	0					
ANR	5685733	IdentifierDeclType	ut8 *		5685567	0					
ANR	5685734	Identifier	result		5685567	1					
ANR	5685735	AssignmentExpression	"* result = r_crypto_get_output ( cry , & result_size )"		5685567	2		=			
ANR	5685736	Identifier	result		5685567	0					
ANR	5685737	CallExpression	"r_crypto_get_output ( cry , & result_size )"		5685567	1					
ANR	5685738	Callee	r_crypto_get_output		5685567	0					
ANR	5685739	Identifier	r_crypto_get_output		5685567	0					
ANR	5685740	ArgumentList	cry		5685567	1					
ANR	5685741	Argument	cry		5685567	0					
ANR	5685742	Identifier	cry		5685567	0					
ANR	5685743	Argument	& result_size		5685567	1					
ANR	5685744	UnaryOperationExpression	& result_size		5685567	0					
ANR	5685745	UnaryOperator	&		5685567	0					
ANR	5685746	Identifier	result_size		5685567	1					
ANR	5685747	IfStatement	if ( result )		5685567	7					
ANR	5685748	Condition	result	356:8:8908:8913	5685567	0	True				
ANR	5685749	Identifier	result		5685567	0					
ANR	5685750	CompoundStatement		20:16:684:684	5685567	1					
ANR	5685751	ExpressionStatement	"write ( 1 , result , result_size )"	357:5:8923:8953	5685567	0	True				
ANR	5685752	CallExpression	"write ( 1 , result , result_size )"		5685567	0					
ANR	5685753	Callee	write		5685567	0					
ANR	5685754	Identifier	write		5685567	0					
ANR	5685755	ArgumentList	1		5685567	1					
ANR	5685756	Argument	1		5685567	0					
ANR	5685757	PrimaryExpression	1		5685567	0					
ANR	5685758	Argument	result		5685567	1					
ANR	5685759	Identifier	result		5685567	0					
ANR	5685760	Argument	result_size		5685567	2					
ANR	5685761	Identifier	result_size		5685567	0					
ANR	5685762	ExpressionStatement	free ( result )	358:5:8960:8973	5685567	1	True				
ANR	5685763	CallExpression	free ( result )		5685567	0					
ANR	5685764	Callee	free		5685567	0					
ANR	5685765	Identifier	free		5685567	0					
ANR	5685766	ArgumentList	result		5685567	1					
ANR	5685767	Argument	result		5685567	0					
ANR	5685768	Identifier	result		5685567	0					
ANR	5685769	ElseStatement	else		5685567	0					
ANR	5685770	CompoundStatement		24:10:759:759	5685567	0					
ANR	5685771	ExpressionStatement	"eprintf ( ""Invalid key\\n"" )"	361:4:8997:9022	5685567	0	True				
ANR	5685772	CallExpression	"eprintf ( ""Invalid key\\n"" )"		5685567	0					
ANR	5685773	Callee	eprintf		5685567	0					
ANR	5685774	Identifier	eprintf		5685567	0					
ANR	5685775	ArgumentList	"""Invalid key\\n"""		5685567	1					
ANR	5685776	Argument	"""Invalid key\\n"""		5685567	0					
ANR	5685777	PrimaryExpression	"""Invalid key\\n"""		5685567	0					
ANR	5685778	ReturnStatement	return 0 ;	363:3:9032:9040	5685567	1	True				
ANR	5685779	PrimaryExpression	0		5685567	0					
ANR	5685780	ElseStatement	else		5685567	0					
ANR	5685781	CompoundStatement		28:9:819:819	5685567	0					
ANR	5685782	ExpressionStatement	"eprintf ( ""Unknown %s algorithm '%s'\\n"" , ( ( ! direction ) ? ""encryption"" : ""decryption"" ) , algo )"	365:3:9056:9145	5685567	0	True				
ANR	5685783	CallExpression	"eprintf ( ""Unknown %s algorithm '%s'\\n"" , ( ( ! direction ) ? ""encryption"" : ""decryption"" ) , algo )"		5685567	0					
ANR	5685784	Callee	eprintf		5685567	0					
ANR	5685785	Identifier	eprintf		5685567	0					
ANR	5685786	ArgumentList	"""Unknown %s algorithm '%s'\\n"""		5685567	1					
ANR	5685787	Argument	"""Unknown %s algorithm '%s'\\n"""		5685567	0					
ANR	5685788	PrimaryExpression	"""Unknown %s algorithm '%s'\\n"""		5685567	0					
ANR	5685789	Argument	"( ! direction ) ? ""encryption"" : ""decryption"""		5685567	1					
ANR	5685790	ConditionalExpression	"( ! direction ) ? ""encryption"" : ""decryption"""		5685567	0					
ANR	5685791	Condition	! direction		5685567	0					
ANR	5685792	UnaryOperationExpression	! direction		5685567	0					
ANR	5685793	UnaryOperator	!		5685567	0					
ANR	5685794	Identifier	direction		5685567	1					
ANR	5685795	PrimaryExpression	"""encryption"""		5685567	1					
ANR	5685796	PrimaryExpression	"""decryption"""		5685567	2					
ANR	5685797	Argument	algo		5685567	2					
ANR	5685798	Identifier	algo		5685567	0					
ANR	5685799	ExpressionStatement	r_crypto_free ( cry )	367:2:9153:9172	5685567	2	True				
ANR	5685800	CallExpression	r_crypto_free ( cry )		5685567	0					
ANR	5685801	Callee	r_crypto_free		5685567	0					
ANR	5685802	Identifier	r_crypto_free		5685567	0					
ANR	5685803	ArgumentList	cry		5685567	1					
ANR	5685804	Argument	cry		5685567	0					
ANR	5685805	Identifier	cry		5685567	0					
ANR	5685806	ElseStatement	else		5685567	0					
ANR	5685807	CompoundStatement		32:8:950:950	5685567	0					
ANR	5685808	ExpressionStatement	"eprintf ( ""%s key not defined. Use -S [key]\\n"" , ( ( ! direction ) ? ""Encryption"" : ""Decryption"" ) )"	369:2:9186:9276	5685567	0	True				
ANR	5685809	CallExpression	"eprintf ( ""%s key not defined. Use -S [key]\\n"" , ( ( ! direction ) ? ""Encryption"" : ""Decryption"" ) )"		5685567	0					
ANR	5685810	Callee	eprintf		5685567	0					
ANR	5685811	Identifier	eprintf		5685567	0					
ANR	5685812	ArgumentList	"""%s key not defined. Use -S [key]\\n"""		5685567	1					
ANR	5685813	Argument	"""%s key not defined. Use -S [key]\\n"""		5685567	0					
ANR	5685814	PrimaryExpression	"""%s key not defined. Use -S [key]\\n"""		5685567	0					
ANR	5685815	Argument	"( ! direction ) ? ""Encryption"" : ""Decryption"""		5685567	1					
ANR	5685816	ConditionalExpression	"( ! direction ) ? ""Encryption"" : ""Decryption"""		5685567	0					
ANR	5685817	Condition	! direction		5685567	0					
ANR	5685818	UnaryOperationExpression	! direction		5685567	0					
ANR	5685819	UnaryOperator	!		5685567	0					
ANR	5685820	Identifier	direction		5685567	1					
ANR	5685821	PrimaryExpression	"""Encryption"""		5685567	1					
ANR	5685822	PrimaryExpression	"""Decryption"""		5685567	2					
ANR	5685823	ReturnStatement	return 1 ;	371:1:9282:9290	5685567	2	True				
ANR	5685824	PrimaryExpression	1		5685567	0					
ANR	5685825	ReturnType	static int		5685567	1					
ANR	5685826	Identifier	encrypt_or_decrypt		5685567	2					
ANR	5685827	ParameterList	"const char * algo , int direction , const char * hashstr , int hashstr_len , const ut8 * iv , int ivlen , int mode"		5685567	3					
ANR	5685828	Parameter	const char * algo	337:30:8124:8139	5685567	0	True				
ANR	5685829	ParameterType	const char *		5685567	0					
ANR	5685830	Identifier	algo		5685567	1					
ANR	5685831	Parameter	int direction	337:48:8142:8154	5685567	1	True				
ANR	5685832	ParameterType	int		5685567	0					
ANR	5685833	Identifier	direction		5685567	1					
ANR	5685834	Parameter	const char * hashstr	337:63:8157:8175	5685567	2	True				
ANR	5685835	ParameterType	const char *		5685567	0					
ANR	5685836	Identifier	hashstr		5685567	1					
ANR	5685837	Parameter	int hashstr_len	337:84:8178:8192	5685567	3	True				
ANR	5685838	ParameterType	int		5685567	0					
ANR	5685839	Identifier	hashstr_len		5685567	1					
ANR	5685840	Parameter	const ut8 * iv	337:101:8195:8207	5685567	4	True				
ANR	5685841	ParameterType	const ut8 *		5685567	0					
ANR	5685842	Identifier	iv		5685567	1					
ANR	5685843	Parameter	int ivlen	337:116:8210:8218	5685567	5	True				
ANR	5685844	ParameterType	int		5685567	0					
ANR	5685845	Identifier	ivlen		5685567	1					
ANR	5685846	Parameter	int mode	337:127:8221:8228	5685567	6	True				
ANR	5685847	ParameterType	int		5685567	0					
ANR	5685848	Identifier	mode		5685567	1					
ANR	5685849	CFGEntryNode	ENTRY		5685567		True				
ANR	5685850	CFGExitNode	EXIT		5685567		True				
ANR	5685851	Symbol	strcmp		5685567						
ANR	5685852	Symbol	r_crypto_set_iv		5685567						
ANR	5685853	Symbol	NULL		5685567						
ANR	5685854	Symbol	r_crypto_get_output		5685567						
ANR	5685855	Symbol	& result_size		5685567						
ANR	5685856	Symbol	cry		5685567						
ANR	5685857	Symbol	r_crypto_use		5685567						
ANR	5685858	Symbol	s . buf		5685567						
ANR	5685859	Symbol	r_crypto_set_key		5685567						
ANR	5685860	Symbol	iv		5685567						
ANR	5685861	Symbol	hashstr		5685567						
ANR	5685862	Symbol	mode		5685567						
ANR	5685863	Symbol	result		5685567						
ANR	5685864	Symbol	r_crypto_new		5685567						
ANR	5685865	Symbol	buf		5685567						
ANR	5685866	Symbol	s		5685567						
ANR	5685867	Symbol	ivlen		5685567						
ANR	5685868	Symbol	s . len		5685567						
ANR	5685869	Symbol	buflen		5685567						
ANR	5685870	Symbol	no_key_mode		5685567						
ANR	5685871	Symbol	algo		5685567						
ANR	5685872	Symbol	direction		5685567						
ANR	5685873	Symbol	hashstr_len		5685567						
ANR	5685874	Symbol	result_size		5685567						
ANR	5685875	Function	encrypt_or_decrypt_file	374:0:9295:10695							
ANR	5685876	FunctionDef	"encrypt_or_decrypt_file (const char * algo , int direction , char * filename , const ut8 * iv , int ivlen , int mode)"		5685875	0					
ANR	5685877	CompoundStatement		374:120:9415:10695	5685875	0					
ANR	5685878	IdentifierDeclStatement	"bool no_key_mode = ! strcmp ( ""base64"" , algo ) || ! strcmp ( ""base91"" , algo ) || ! strcmp ( ""punycode"" , algo ) ;"	375:1:9418:9519	5685875	0	True				
ANR	5685879	IdentifierDecl	"no_key_mode = ! strcmp ( ""base64"" , algo ) || ! strcmp ( ""base91"" , algo ) || ! strcmp ( ""punycode"" , algo )"		5685875	0					
ANR	5685880	IdentifierDeclType	bool		5685875	0					
ANR	5685881	Identifier	no_key_mode		5685875	1					
ANR	5685882	AssignmentExpression	"no_key_mode = ! strcmp ( ""base64"" , algo ) || ! strcmp ( ""base91"" , algo ) || ! strcmp ( ""punycode"" , algo )"		5685875	2		=			
ANR	5685883	Identifier	no_key_mode		5685875	0					
ANR	5685884	OrExpression	"! strcmp ( ""base64"" , algo ) || ! strcmp ( ""base91"" , algo ) || ! strcmp ( ""punycode"" , algo )"		5685875	1		||			
ANR	5685885	UnaryOperationExpression	"! strcmp ( ""base64"" , algo )"		5685875	0					
ANR	5685886	UnaryOperator	!		5685875	0					
ANR	5685887	CallExpression	"strcmp ( ""base64"" , algo )"		5685875	1					
ANR	5685888	Callee	strcmp		5685875	0					
ANR	5685889	Identifier	strcmp		5685875	0					
ANR	5685890	ArgumentList	"""base64"""		5685875	1					
ANR	5685891	Argument	"""base64"""		5685875	0					
ANR	5685892	PrimaryExpression	"""base64"""		5685875	0					
ANR	5685893	Argument	algo		5685875	1					
ANR	5685894	Identifier	algo		5685875	0					
ANR	5685895	OrExpression	"! strcmp ( ""base91"" , algo ) || ! strcmp ( ""punycode"" , algo )"		5685875	1		||			
ANR	5685896	UnaryOperationExpression	"! strcmp ( ""base91"" , algo )"		5685875	0					
ANR	5685897	UnaryOperator	!		5685875	0					
ANR	5685898	CallExpression	"strcmp ( ""base91"" , algo )"		5685875	1					
ANR	5685899	Callee	strcmp		5685875	0					
ANR	5685900	Identifier	strcmp		5685875	0					
ANR	5685901	ArgumentList	"""base91"""		5685875	1					
ANR	5685902	Argument	"""base91"""		5685875	0					
ANR	5685903	PrimaryExpression	"""base91"""		5685875	0					
ANR	5685904	Argument	algo		5685875	1					
ANR	5685905	Identifier	algo		5685875	0					
ANR	5685906	UnaryOperationExpression	"! strcmp ( ""punycode"" , algo )"		5685875	1					
ANR	5685907	UnaryOperator	!		5685875	0					
ANR	5685908	CallExpression	"strcmp ( ""punycode"" , algo )"		5685875	1					
ANR	5685909	Callee	strcmp		5685875	0					
ANR	5685910	Identifier	strcmp		5685875	0					
ANR	5685911	ArgumentList	"""punycode"""		5685875	1					
ANR	5685912	Argument	"""punycode"""		5685875	0					
ANR	5685913	PrimaryExpression	"""punycode"""		5685875	0					
ANR	5685914	Argument	algo		5685875	1					
ANR	5685915	Identifier	algo		5685875	0					
ANR	5685916	IfStatement	if ( no_key_mode || s . len > 0 )		5685875	1					
ANR	5685917	Condition	no_key_mode || s . len > 0	376:5:9586:9609	5685875	0	True				
ANR	5685918	OrExpression	no_key_mode || s . len > 0		5685875	0		||			
ANR	5685919	Identifier	no_key_mode		5685875	0					
ANR	5685920	RelationalExpression	s . len > 0		5685875	1		>			
ANR	5685921	MemberAccess	s . len		5685875	0					
ANR	5685922	Identifier	s		5685875	0					
ANR	5685923	Identifier	len		5685875	1					
ANR	5685924	PrimaryExpression	0		5685875	1					
ANR	5685925	CompoundStatement		4:2:200:230	5685875	1					
ANR	5685926	IdentifierDeclStatement	RCrypto * cry = r_crypto_new ( ) ;	377:2:9616:9646	5685875	0	True				
ANR	5685927	IdentifierDecl	* cry = r_crypto_new ( )		5685875	0					
ANR	5685928	IdentifierDeclType	RCrypto *		5685875	0					
ANR	5685929	Identifier	cry		5685875	1					
ANR	5685930	AssignmentExpression	* cry = r_crypto_new ( )		5685875	2		=			
ANR	5685931	Identifier	cry		5685875	0					
ANR	5685932	CallExpression	r_crypto_new ( )		5685875	1					
ANR	5685933	Callee	r_crypto_new		5685875	0					
ANR	5685934	Identifier	r_crypto_new		5685875	0					
ANR	5685935	ArgumentList			5685875	1					
ANR	5685936	IfStatement	"if ( r_crypto_use ( cry , algo ) )"		5685875	1					
ANR	5685937	Condition	"r_crypto_use ( cry , algo )"	378:6:9654:9677	5685875	0	True				
ANR	5685938	CallExpression	"r_crypto_use ( cry , algo )"		5685875	0					
ANR	5685939	Callee	r_crypto_use		5685875	0					
ANR	5685940	Identifier	r_crypto_use		5685875	0					
ANR	5685941	ArgumentList	cry		5685875	1					
ANR	5685942	Argument	cry		5685875	0					
ANR	5685943	Identifier	cry		5685875	0					
ANR	5685944	Argument	algo		5685875	1					
ANR	5685945	Identifier	algo		5685875	0					
ANR	5685946	CompoundStatement		5:32:264:264	5685875	1					
ANR	5685947	IfStatement	"if ( r_crypto_set_key ( cry , s . buf , s . len , 0 , direction ) )"		5685875	0					
ANR	5685948	Condition	"r_crypto_set_key ( cry , s . buf , s . len , 0 , direction )"	379:7:9689:9738	5685875	0	True				
ANR	5685949	CallExpression	"r_crypto_set_key ( cry , s . buf , s . len , 0 , direction )"		5685875	0					
ANR	5685950	Callee	r_crypto_set_key		5685875	0					
ANR	5685951	Identifier	r_crypto_set_key		5685875	0					
ANR	5685952	ArgumentList	cry		5685875	1					
ANR	5685953	Argument	cry		5685875	0					
ANR	5685954	Identifier	cry		5685875	0					
ANR	5685955	Argument	s . buf		5685875	1					
ANR	5685956	MemberAccess	s . buf		5685875	0					
ANR	5685957	Identifier	s		5685875	0					
ANR	5685958	Identifier	buf		5685875	1					
ANR	5685959	Argument	s . len		5685875	2					
ANR	5685960	MemberAccess	s . len		5685875	0					
ANR	5685961	Identifier	s		5685875	0					
ANR	5685962	Identifier	len		5685875	1					
ANR	5685963	Argument	0		5685875	3					
ANR	5685964	PrimaryExpression	0		5685875	0					
ANR	5685965	Argument	direction		5685875	4					
ANR	5685966	Identifier	direction		5685875	0					
ANR	5685967	CompoundStatement		26:4:816:869	5685875	1					
ANR	5685968	IdentifierDeclStatement	int file_size ;	380:4:9747:9760	5685875	0	True				
ANR	5685969	IdentifierDecl	file_size		5685875	0					
ANR	5685970	IdentifierDeclType	int		5685875	0					
ANR	5685971	Identifier	file_size		5685875	1					
ANR	5685972	IdentifierDeclStatement	"ut8 * buf = strcmp ( filename , ""-"" ) ? ( ut8 * ) r_file_slurp ( filename , & file_size ) : ( ut8 * ) r_stdin_slurp ( & file_size ) ;"	381:4:9766:9905	5685875	1	True				
ANR	5685973	IdentifierDecl	"* buf = strcmp ( filename , ""-"" ) ? ( ut8 * ) r_file_slurp ( filename , & file_size ) : ( ut8 * ) r_stdin_slurp ( & file_size )"		5685875	0					
ANR	5685974	IdentifierDeclType	ut8 *		5685875	0					
ANR	5685975	Identifier	buf		5685875	1					
ANR	5685976	AssignmentExpression	"* buf = strcmp ( filename , ""-"" ) ? ( ut8 * ) r_file_slurp ( filename , & file_size ) : ( ut8 * ) r_stdin_slurp ( & file_size )"		5685875	2		=			
ANR	5685977	Identifier	buf		5685875	0					
ANR	5685978	ConditionalExpression	"strcmp ( filename , ""-"" ) ? ( ut8 * ) r_file_slurp ( filename , & file_size ) : ( ut8 * ) r_stdin_slurp ( & file_size )"		5685875	1					
ANR	5685979	Condition	"strcmp ( filename , ""-"" )"		5685875	0					
ANR	5685980	CallExpression	"strcmp ( filename , ""-"" )"		5685875	0					
ANR	5685981	Callee	strcmp		5685875	0					
ANR	5685982	Identifier	strcmp		5685875	0					
ANR	5685983	ArgumentList	filename		5685875	1					
ANR	5685984	Argument	filename		5685875	0					
ANR	5685985	Identifier	filename		5685875	0					
ANR	5685986	Argument	"""-"""		5685875	1					
ANR	5685987	PrimaryExpression	"""-"""		5685875	0					
ANR	5685988	CastExpression	"( ut8 * ) r_file_slurp ( filename , & file_size )"		5685875	1					
ANR	5685989	CastTarget	ut8 *		5685875	0					
ANR	5685990	CallExpression	"r_file_slurp ( filename , & file_size )"		5685875	1					
ANR	5685991	Callee	r_file_slurp		5685875	0					
ANR	5685992	Identifier	r_file_slurp		5685875	0					
ANR	5685993	ArgumentList	filename		5685875	1					
ANR	5685994	Argument	filename		5685875	0					
ANR	5685995	Identifier	filename		5685875	0					
ANR	5685996	Argument	& file_size		5685875	1					
ANR	5685997	UnaryOperationExpression	& file_size		5685875	0					
ANR	5685998	UnaryOperator	&		5685875	0					
ANR	5685999	Identifier	file_size		5685875	1					
ANR	5686000	CastExpression	( ut8 * ) r_stdin_slurp ( & file_size )		5685875	2					
ANR	5686001	CastTarget	ut8 *		5685875	0					
ANR	5686002	CallExpression	r_stdin_slurp ( & file_size )		5685875	1					
ANR	5686003	Callee	r_stdin_slurp		5685875	0					
ANR	5686004	Identifier	r_stdin_slurp		5685875	0					
ANR	5686005	ArgumentList	& file_size		5685875	1					
ANR	5686006	Argument	& file_size		5685875	0					
ANR	5686007	UnaryOperationExpression	& file_size		5685875	0					
ANR	5686008	UnaryOperator	&		5685875	0					
ANR	5686009	Identifier	file_size		5685875	1					
ANR	5686010	IfStatement	if ( ! buf )		5685875	2					
ANR	5686011	Condition	! buf	384:8:9915:9918	5685875	0	True				
ANR	5686012	UnaryOperationExpression	! buf		5685875	0					
ANR	5686013	UnaryOperator	!		5685875	0					
ANR	5686014	Identifier	buf		5685875	1					
ANR	5686015	CompoundStatement		11:14:505:505	5685875	1					
ANR	5686016	ExpressionStatement	"eprintf ( ""rahash2: Cannot open '%s'\\n"" , filename )"	385:5:9928:9977	5685875	0	True				
ANR	5686017	CallExpression	"eprintf ( ""rahash2: Cannot open '%s'\\n"" , filename )"		5685875	0					
ANR	5686018	Callee	eprintf		5685875	0					
ANR	5686019	Identifier	eprintf		5685875	0					
ANR	5686020	ArgumentList	"""rahash2: Cannot open '%s'\\n"""		5685875	1					
ANR	5686021	Argument	"""rahash2: Cannot open '%s'\\n"""		5685875	0					
ANR	5686022	PrimaryExpression	"""rahash2: Cannot open '%s'\\n"""		5685875	0					
ANR	5686023	Argument	filename		5685875	1					
ANR	5686024	Identifier	filename		5685875	0					
ANR	5686025	ReturnStatement	return - 1 ;	386:5:9984:9993	5685875	1	True				
ANR	5686026	UnaryOperationExpression	- 1		5685875	0					
ANR	5686027	UnaryOperator	-		5685875	0					
ANR	5686028	PrimaryExpression	1		5685875	1					
ANR	5686029	IfStatement	"if ( iv && ! r_crypto_set_iv ( cry , iv , ivlen ) )"		5685875	3					
ANR	5686030	Condition	"iv && ! r_crypto_set_iv ( cry , iv , ivlen )"	389:8:10010:10048	5685875	0	True				
ANR	5686031	AndExpression	"iv && ! r_crypto_set_iv ( cry , iv , ivlen )"		5685875	0		&&			
ANR	5686032	Identifier	iv		5685875	0					
ANR	5686033	UnaryOperationExpression	"! r_crypto_set_iv ( cry , iv , ivlen )"		5685875	1					
ANR	5686034	UnaryOperator	!		5685875	0					
ANR	5686035	CallExpression	"r_crypto_set_iv ( cry , iv , ivlen )"		5685875	1					
ANR	5686036	Callee	r_crypto_set_iv		5685875	0					
ANR	5686037	Identifier	r_crypto_set_iv		5685875	0					
ANR	5686038	ArgumentList	cry		5685875	1					
ANR	5686039	Argument	cry		5685875	0					
ANR	5686040	Identifier	cry		5685875	0					
ANR	5686041	Argument	iv		5685875	1					
ANR	5686042	Identifier	iv		5685875	0					
ANR	5686043	Argument	ivlen		5685875	2					
ANR	5686044	Identifier	ivlen		5685875	0					
ANR	5686045	CompoundStatement		16:49:635:635	5685875	1					
ANR	5686046	ExpressionStatement	"eprintf ( ""Invalid IV.\\n"" )"	390:5:10058:10083	5685875	0	True				
ANR	5686047	CallExpression	"eprintf ( ""Invalid IV.\\n"" )"		5685875	0					
ANR	5686048	Callee	eprintf		5685875	0					
ANR	5686049	Identifier	eprintf		5685875	0					
ANR	5686050	ArgumentList	"""Invalid IV.\\n"""		5685875	1					
ANR	5686051	Argument	"""Invalid IV.\\n"""		5685875	0					
ANR	5686052	PrimaryExpression	"""Invalid IV.\\n"""		5685875	0					
ANR	5686053	ExpressionStatement	free ( buf )	391:5:10090:10100	5685875	1	True				
ANR	5686054	CallExpression	free ( buf )		5685875	0					
ANR	5686055	Callee	free		5685875	0					
ANR	5686056	Identifier	free		5685875	0					
ANR	5686057	ArgumentList	buf		5685875	1					
ANR	5686058	Argument	buf		5685875	0					
ANR	5686059	Identifier	buf		5685875	0					
ANR	5686060	ReturnStatement	return 0 ;	392:5:10107:10115	5685875	2	True				
ANR	5686061	PrimaryExpression	0		5685875	0					
ANR	5686062	ExpressionStatement	"r_crypto_update ( cry , buf , file_size )"	395:4:10128:10165	5685875	4	True				
ANR	5686063	CallExpression	"r_crypto_update ( cry , buf , file_size )"		5685875	0					
ANR	5686064	Callee	r_crypto_update		5685875	0					
ANR	5686065	Identifier	r_crypto_update		5685875	0					
ANR	5686066	ArgumentList	cry		5685875	1					
ANR	5686067	Argument	cry		5685875	0					
ANR	5686068	Identifier	cry		5685875	0					
ANR	5686069	Argument	buf		5685875	1					
ANR	5686070	Identifier	buf		5685875	0					
ANR	5686071	Argument	file_size		5685875	2					
ANR	5686072	Identifier	file_size		5685875	0					
ANR	5686073	ExpressionStatement	"r_crypto_final ( cry , NULL , 0 )"	396:4:10171:10200	5685875	5	True				
ANR	5686074	CallExpression	"r_crypto_final ( cry , NULL , 0 )"		5685875	0					
ANR	5686075	Callee	r_crypto_final		5685875	0					
ANR	5686076	Identifier	r_crypto_final		5685875	0					
ANR	5686077	ArgumentList	cry		5685875	1					
ANR	5686078	Argument	cry		5685875	0					
ANR	5686079	Identifier	cry		5685875	0					
ANR	5686080	Argument	NULL		5685875	1					
ANR	5686081	Identifier	NULL		5685875	0					
ANR	5686082	Argument	0		5685875	2					
ANR	5686083	PrimaryExpression	0		5685875	0					
ANR	5686084	IdentifierDeclStatement	int result_size = 0 ;	398:4:10207:10226	5685875	6	True				
ANR	5686085	IdentifierDecl	result_size = 0		5685875	0					
ANR	5686086	IdentifierDeclType	int		5685875	0					
ANR	5686087	Identifier	result_size		5685875	1					
ANR	5686088	AssignmentExpression	result_size = 0		5685875	2		=			
ANR	5686089	Identifier	result_size		5685875	0					
ANR	5686090	PrimaryExpression	0		5685875	1					
ANR	5686091	IdentifierDeclStatement	"ut8 * result = r_crypto_get_output ( cry , & result_size ) ;"	399:4:10232:10285	5685875	7	True				
ANR	5686092	IdentifierDecl	"* result = r_crypto_get_output ( cry , & result_size )"		5685875	0					
ANR	5686093	IdentifierDeclType	ut8 *		5685875	0					
ANR	5686094	Identifier	result		5685875	1					
ANR	5686095	AssignmentExpression	"* result = r_crypto_get_output ( cry , & result_size )"		5685875	2		=			
ANR	5686096	Identifier	result		5685875	0					
ANR	5686097	CallExpression	"r_crypto_get_output ( cry , & result_size )"		5685875	1					
ANR	5686098	Callee	r_crypto_get_output		5685875	0					
ANR	5686099	Identifier	r_crypto_get_output		5685875	0					
ANR	5686100	ArgumentList	cry		5685875	1					
ANR	5686101	Argument	cry		5685875	0					
ANR	5686102	Identifier	cry		5685875	0					
ANR	5686103	Argument	& result_size		5685875	1					
ANR	5686104	UnaryOperationExpression	& result_size		5685875	0					
ANR	5686105	UnaryOperator	&		5685875	0					
ANR	5686106	Identifier	result_size		5685875	1					
ANR	5686107	IfStatement	if ( result )		5685875	8					
ANR	5686108	Condition	result	400:8:10295:10300	5685875	0	True				
ANR	5686109	Identifier	result		5685875	0					
ANR	5686110	CompoundStatement		27:16:887:887	5685875	1					
ANR	5686111	ExpressionStatement	"write ( 1 , result , result_size )"	401:5:10310:10340	5685875	0	True				
ANR	5686112	CallExpression	"write ( 1 , result , result_size )"		5685875	0					
ANR	5686113	Callee	write		5685875	0					
ANR	5686114	Identifier	write		5685875	0					
ANR	5686115	ArgumentList	1		5685875	1					
ANR	5686116	Argument	1		5685875	0					
ANR	5686117	PrimaryExpression	1		5685875	0					
ANR	5686118	Argument	result		5685875	1					
ANR	5686119	Identifier	result		5685875	0					
ANR	5686120	Argument	result_size		5685875	2					
ANR	5686121	Identifier	result_size		5685875	0					
ANR	5686122	ExpressionStatement	free ( result )	402:5:10347:10360	5685875	1	True				
ANR	5686123	CallExpression	free ( result )		5685875	0					
ANR	5686124	Callee	free		5685875	0					
ANR	5686125	Identifier	free		5685875	0					
ANR	5686126	ArgumentList	result		5685875	1					
ANR	5686127	Argument	result		5685875	0					
ANR	5686128	Identifier	result		5685875	0					
ANR	5686129	ExpressionStatement	free ( buf )	404:4:10372:10382	5685875	9	True				
ANR	5686130	CallExpression	free ( buf )		5685875	0					
ANR	5686131	Callee	free		5685875	0					
ANR	5686132	Identifier	free		5685875	0					
ANR	5686133	ArgumentList	buf		5685875	1					
ANR	5686134	Argument	buf		5685875	0					
ANR	5686135	Identifier	buf		5685875	0					
ANR	5686136	ElseStatement	else		5685875	0					
ANR	5686137	CompoundStatement		32:10:978:978	5685875	0					
ANR	5686138	ExpressionStatement	"eprintf ( ""Invalid key\\n"" )"	406:4:10400:10425	5685875	0	True				
ANR	5686139	CallExpression	"eprintf ( ""Invalid key\\n"" )"		5685875	0					
ANR	5686140	Callee	eprintf		5685875	0					
ANR	5686141	Identifier	eprintf		5685875	0					
ANR	5686142	ArgumentList	"""Invalid key\\n"""		5685875	1					
ANR	5686143	Argument	"""Invalid key\\n"""		5685875	0					
ANR	5686144	PrimaryExpression	"""Invalid key\\n"""		5685875	0					
ANR	5686145	ReturnStatement	return 0 ;	408:3:10435:10443	5685875	1	True				
ANR	5686146	PrimaryExpression	0		5685875	0					
ANR	5686147	ElseStatement	else		5685875	0					
ANR	5686148	CompoundStatement		36:9:1038:1038	5685875	0					
ANR	5686149	ExpressionStatement	"eprintf ( ""Unknown %s algorithm '%s'\\n"" , ( ( ! direction ) ? ""encryption"" : ""decryption"" ) , algo )"	410:3:10459:10548	5685875	0	True				
ANR	5686150	CallExpression	"eprintf ( ""Unknown %s algorithm '%s'\\n"" , ( ( ! direction ) ? ""encryption"" : ""decryption"" ) , algo )"		5685875	0					
ANR	5686151	Callee	eprintf		5685875	0					
ANR	5686152	Identifier	eprintf		5685875	0					
ANR	5686153	ArgumentList	"""Unknown %s algorithm '%s'\\n"""		5685875	1					
ANR	5686154	Argument	"""Unknown %s algorithm '%s'\\n"""		5685875	0					
ANR	5686155	PrimaryExpression	"""Unknown %s algorithm '%s'\\n"""		5685875	0					
ANR	5686156	Argument	"( ! direction ) ? ""encryption"" : ""decryption"""		5685875	1					
ANR	5686157	ConditionalExpression	"( ! direction ) ? ""encryption"" : ""decryption"""		5685875	0					
ANR	5686158	Condition	! direction		5685875	0					
ANR	5686159	UnaryOperationExpression	! direction		5685875	0					
ANR	5686160	UnaryOperator	!		5685875	0					
ANR	5686161	Identifier	direction		5685875	1					
ANR	5686162	PrimaryExpression	"""encryption"""		5685875	1					
ANR	5686163	PrimaryExpression	"""decryption"""		5685875	2					
ANR	5686164	Argument	algo		5685875	2					
ANR	5686165	Identifier	algo		5685875	0					
ANR	5686166	ExpressionStatement	r_crypto_free ( cry )	412:2:10556:10575	5685875	2	True				
ANR	5686167	CallExpression	r_crypto_free ( cry )		5685875	0					
ANR	5686168	Callee	r_crypto_free		5685875	0					
ANR	5686169	Identifier	r_crypto_free		5685875	0					
ANR	5686170	ArgumentList	cry		5685875	1					
ANR	5686171	Argument	cry		5685875	0					
ANR	5686172	Identifier	cry		5685875	0					
ANR	5686173	ElseStatement	else		5685875	0					
ANR	5686174	CompoundStatement		40:8:1169:1169	5685875	0					
ANR	5686175	ExpressionStatement	"eprintf ( ""%s key not defined. Use -S [key]\\n"" , ( ( ! direction ) ? ""Encryption"" : ""Decryption"" ) )"	414:2:10589:10679	5685875	0	True				
ANR	5686176	CallExpression	"eprintf ( ""%s key not defined. Use -S [key]\\n"" , ( ( ! direction ) ? ""Encryption"" : ""Decryption"" ) )"		5685875	0					
ANR	5686177	Callee	eprintf		5685875	0					
ANR	5686178	Identifier	eprintf		5685875	0					
ANR	5686179	ArgumentList	"""%s key not defined. Use -S [key]\\n"""		5685875	1					
ANR	5686180	Argument	"""%s key not defined. Use -S [key]\\n"""		5685875	0					
ANR	5686181	PrimaryExpression	"""%s key not defined. Use -S [key]\\n"""		5685875	0					
ANR	5686182	Argument	"( ! direction ) ? ""Encryption"" : ""Decryption"""		5685875	1					
ANR	5686183	ConditionalExpression	"( ! direction ) ? ""Encryption"" : ""Decryption"""		5685875	0					
ANR	5686184	Condition	! direction		5685875	0					
ANR	5686185	UnaryOperationExpression	! direction		5685875	0					
ANR	5686186	UnaryOperator	!		5685875	0					
ANR	5686187	Identifier	direction		5685875	1					
ANR	5686188	PrimaryExpression	"""Encryption"""		5685875	1					
ANR	5686189	PrimaryExpression	"""Decryption"""		5685875	2					
ANR	5686190	ReturnStatement	return 1 ;	416:1:10685:10693	5685875	2	True				
ANR	5686191	PrimaryExpression	1		5685875	0					
ANR	5686192	ReturnType	static int		5685875	1					
ANR	5686193	Identifier	encrypt_or_decrypt_file		5685875	2					
ANR	5686194	ParameterList	"const char * algo , int direction , char * filename , const ut8 * iv , int ivlen , int mode"		5685875	3					
ANR	5686195	Parameter	const char * algo	374:35:9330:9345	5685875	0	True				
ANR	5686196	ParameterType	const char *		5685875	0					
ANR	5686197	Identifier	algo		5685875	1					
ANR	5686198	Parameter	int direction	374:53:9348:9360	5685875	1	True				
ANR	5686199	ParameterType	int		5685875	0					
ANR	5686200	Identifier	direction		5685875	1					
ANR	5686201	Parameter	char * filename	374:68:9363:9376	5685875	2	True				
ANR	5686202	ParameterType	char *		5685875	0					
ANR	5686203	Identifier	filename		5685875	1					
ANR	5686204	Parameter	const ut8 * iv	374:84:9379:9391	5685875	3	True				
ANR	5686205	ParameterType	const ut8 *		5685875	0					
ANR	5686206	Identifier	iv		5685875	1					
ANR	5686207	Parameter	int ivlen	374:99:9394:9402	5685875	4	True				
ANR	5686208	ParameterType	int		5685875	0					
ANR	5686209	Identifier	ivlen		5685875	1					
ANR	5686210	Parameter	int mode	374:110:9405:9412	5685875	5	True				
ANR	5686211	ParameterType	int		5685875	0					
ANR	5686212	Identifier	mode		5685875	1					
ANR	5686213	CFGEntryNode	ENTRY		5685875		True				
ANR	5686214	CFGExitNode	EXIT		5685875		True				
ANR	5686215	Symbol	r_crypto_set_iv		5685875						
ANR	5686216	Symbol	& file_size		5685875						
ANR	5686217	Symbol	r_crypto_get_output		5685875						
ANR	5686218	Symbol	r_stdin_slurp		5685875						
ANR	5686219	Symbol	& result_size		5685875						
ANR	5686220	Symbol	r_crypto_use		5685875						
ANR	5686221	Symbol	s . buf		5685875						
ANR	5686222	Symbol	mode		5685875						
ANR	5686223	Symbol	result		5685875						
ANR	5686224	Symbol	s . len		5685875						
ANR	5686225	Symbol	no_key_mode		5685875						
ANR	5686226	Symbol	direction		5685875						
ANR	5686227	Symbol	result_size		5685875						
ANR	5686228	Symbol	strcmp		5685875						
ANR	5686229	Symbol	r_file_slurp		5685875						
ANR	5686230	Symbol	NULL		5685875						
ANR	5686231	Symbol	cry		5685875						
ANR	5686232	Symbol	r_crypto_set_key		5685875						
ANR	5686233	Symbol	iv		5685875						
ANR	5686234	Symbol	file_size		5685875						
ANR	5686235	Symbol	r_crypto_new		5685875						
ANR	5686236	Symbol	buf		5685875						
ANR	5686237	Symbol	filename		5685875						
ANR	5686238	Symbol	s		5685875						
ANR	5686239	Symbol	ivlen		5685875						
ANR	5686240	Symbol	algo		5685875						
ANR	5686241	Function	r_main_rahash2	419:0:10698:18547							
ANR	5686242	FunctionDef	"r_main_rahash2 (int argc , char * * argv)"		5686241	0					
ANR	5686243	CompoundStatement		419:42:10740:18547	5686241	0					
ANR	5686244	IdentifierDeclStatement	ut64 i ;	420:1:10743:10749	5686241	0	True				
ANR	5686245	IdentifierDecl	i		5686241	0					
ANR	5686246	IdentifierDeclType	ut64		5686241	0					
ANR	5686247	Identifier	i		5686241	1					
ANR	5686248	IdentifierDeclStatement	"int ret , c , rad = 0 , bsize = 0 , numblocks = 0 , ule = 0 ;"	421:1:10752:10806	5686241	1	True				
ANR	5686249	IdentifierDecl	ret		5686241	0					
ANR	5686250	IdentifierDeclType	int		5686241	0					
ANR	5686251	Identifier	ret		5686241	1					
ANR	5686252	IdentifierDecl	c		5686241	1					
ANR	5686253	IdentifierDeclType	int		5686241	0					
ANR	5686254	Identifier	c		5686241	1					
ANR	5686255	IdentifierDecl	rad = 0		5686241	2					
ANR	5686256	IdentifierDeclType	int		5686241	0					
ANR	5686257	Identifier	rad		5686241	1					
ANR	5686258	AssignmentExpression	rad = 0		5686241	2		=			
ANR	5686259	Identifier	rad		5686241	0					
ANR	5686260	PrimaryExpression	0		5686241	1					
ANR	5686261	IdentifierDecl	bsize = 0		5686241	3					
ANR	5686262	IdentifierDeclType	int		5686241	0					
ANR	5686263	Identifier	bsize		5686241	1					
ANR	5686264	AssignmentExpression	bsize = 0		5686241	2		=			
ANR	5686265	Identifier	bsize		5686241	0					
ANR	5686266	PrimaryExpression	0		5686241	1					
ANR	5686267	IdentifierDecl	numblocks = 0		5686241	4					
ANR	5686268	IdentifierDeclType	int		5686241	0					
ANR	5686269	Identifier	numblocks		5686241	1					
ANR	5686270	AssignmentExpression	numblocks = 0		5686241	2		=			
ANR	5686271	Identifier	numblocks		5686241	0					
ANR	5686272	PrimaryExpression	0		5686241	1					
ANR	5686273	IdentifierDecl	ule = 0		5686241	5					
ANR	5686274	IdentifierDeclType	int		5686241	0					
ANR	5686275	Identifier	ule		5686241	1					
ANR	5686276	AssignmentExpression	ule = 0		5686241	2		=			
ANR	5686277	Identifier	ule		5686241	0					
ANR	5686278	PrimaryExpression	0		5686241	1					
ANR	5686279	IdentifierDeclStatement	"const char * algo = ""sha256"" ;"	422:1:10809:10836	5686241	2	True				
ANR	5686280	IdentifierDecl	"* algo = ""sha256"""		5686241	0					
ANR	5686281	IdentifierDeclType	const char *		5686241	0					
ANR	5686282	Identifier	algo		5686241	1					
ANR	5686283	AssignmentExpression	"* algo = ""sha256"""		5686241	2		=			
ANR	5686284	Identifier	algo		5686241	0					
ANR	5686285	PrimaryExpression	"""sha256"""		5686241	1					
ANR	5686286	IdentifierDeclStatement	const char * seed = NULL ;	423:1:10871:10894	5686241	3	True				
ANR	5686287	IdentifierDecl	* seed = NULL		5686241	0					
ANR	5686288	IdentifierDeclType	const char *		5686241	0					
ANR	5686289	Identifier	seed		5686241	1					
ANR	5686290	AssignmentExpression	* seed = NULL		5686241	2		=			
ANR	5686291	Identifier	NULL		5686241	0					
ANR	5686292	Identifier	NULL		5686241	1					
ANR	5686293	IdentifierDeclStatement	const char * decrypt = NULL ;	424:1:10897:10923	5686241	4	True				
ANR	5686294	IdentifierDecl	* decrypt = NULL		5686241	0					
ANR	5686295	IdentifierDeclType	const char *		5686241	0					
ANR	5686296	Identifier	decrypt		5686241	1					
ANR	5686297	AssignmentExpression	* decrypt = NULL		5686241	2		=			
ANR	5686298	Identifier	NULL		5686241	0					
ANR	5686299	Identifier	NULL		5686241	1					
ANR	5686300	IdentifierDeclStatement	const char * encrypt = NULL ;	425:1:10926:10952	5686241	5	True				
ANR	5686301	IdentifierDecl	* encrypt = NULL		5686241	0					
ANR	5686302	IdentifierDeclType	const char *		5686241	0					
ANR	5686303	Identifier	encrypt		5686241	1					
ANR	5686304	AssignmentExpression	* encrypt = NULL		5686241	2		=			
ANR	5686305	Identifier	NULL		5686241	0					
ANR	5686306	Identifier	NULL		5686241	1					
ANR	5686307	IdentifierDeclStatement	char * hashstr = NULL ;	426:1:10955:10975	5686241	6	True				
ANR	5686308	IdentifierDecl	* hashstr = NULL		5686241	0					
ANR	5686309	IdentifierDeclType	char *		5686241	0					
ANR	5686310	Identifier	hashstr		5686241	1					
ANR	5686311	AssignmentExpression	* hashstr = NULL		5686241	2		=			
ANR	5686312	Identifier	NULL		5686241	0					
ANR	5686313	Identifier	NULL		5686241	1					
ANR	5686314	IdentifierDeclStatement	ut8 * iv = NULL ;	427:1:10978:10992	5686241	7	True				
ANR	5686315	IdentifierDecl	* iv = NULL		5686241	0					
ANR	5686316	IdentifierDeclType	ut8 *		5686241	0					
ANR	5686317	Identifier	iv		5686241	1					
ANR	5686318	AssignmentExpression	* iv = NULL		5686241	2		=			
ANR	5686319	Identifier	NULL		5686241	0					
ANR	5686320	Identifier	NULL		5686241	1					
ANR	5686321	IdentifierDeclStatement	int ivlen = - 1 ;	428:1:10995:11009	5686241	8	True				
ANR	5686322	IdentifierDecl	ivlen = - 1		5686241	0					
ANR	5686323	IdentifierDeclType	int		5686241	0					
ANR	5686324	Identifier	ivlen		5686241	1					
ANR	5686325	AssignmentExpression	ivlen = - 1		5686241	2		=			
ANR	5686326	Identifier	ivlen		5686241	0					
ANR	5686327	UnaryOperationExpression	- 1		5686241	1					
ANR	5686328	UnaryOperator	-		5686241	0					
ANR	5686329	PrimaryExpression	1		5686241	1					
ANR	5686330	IdentifierDeclStatement	char * ivseed = NULL ;	429:1:11012:11031	5686241	9	True				
ANR	5686331	IdentifierDecl	* ivseed = NULL		5686241	0					
ANR	5686332	IdentifierDeclType	char *		5686241	0					
ANR	5686333	Identifier	ivseed		5686241	1					
ANR	5686334	AssignmentExpression	* ivseed = NULL		5686241	2		=			
ANR	5686335	Identifier	NULL		5686241	0					
ANR	5686336	Identifier	NULL		5686241	1					
ANR	5686337	IdentifierDeclStatement	const char * compareStr = NULL ;	430:1:11034:11063	5686241	10	True				
ANR	5686338	IdentifierDecl	* compareStr = NULL		5686241	0					
ANR	5686339	IdentifierDeclType	const char *		5686241	0					
ANR	5686340	Identifier	compareStr		5686241	1					
ANR	5686341	AssignmentExpression	* compareStr = NULL		5686241	2		=			
ANR	5686342	Identifier	NULL		5686241	0					
ANR	5686343	Identifier	NULL		5686241	1					
ANR	5686344	IdentifierDeclStatement	const char * ptype = NULL ;	431:1:11066:11090	5686241	11	True				
ANR	5686345	IdentifierDecl	* ptype = NULL		5686241	0					
ANR	5686346	IdentifierDeclType	const char *		5686241	0					
ANR	5686347	Identifier	ptype		5686241	1					
ANR	5686348	AssignmentExpression	* ptype = NULL		5686241	2		=			
ANR	5686349	Identifier	NULL		5686241	0					
ANR	5686350	Identifier	NULL		5686241	1					
ANR	5686351	IdentifierDeclStatement	ut8 * compareBin = NULL ;	432:1:11093:11115	5686241	12	True				
ANR	5686352	IdentifierDecl	* compareBin = NULL		5686241	0					
ANR	5686353	IdentifierDeclType	ut8 *		5686241	0					
ANR	5686354	Identifier	compareBin		5686241	1					
ANR	5686355	AssignmentExpression	* compareBin = NULL		5686241	2		=			
ANR	5686356	Identifier	NULL		5686241	0					
ANR	5686357	Identifier	NULL		5686241	1					
ANR	5686358	IdentifierDeclStatement	int hashstr_len = - 1 ;	433:1:11118:11138	5686241	13	True				
ANR	5686359	IdentifierDecl	hashstr_len = - 1		5686241	0					
ANR	5686360	IdentifierDeclType	int		5686241	0					
ANR	5686361	Identifier	hashstr_len		5686241	1					
ANR	5686362	AssignmentExpression	hashstr_len = - 1		5686241	2		=			
ANR	5686363	Identifier	hashstr_len		5686241	0					
ANR	5686364	UnaryOperationExpression	- 1		5686241	1					
ANR	5686365	UnaryOperator	-		5686241	0					
ANR	5686366	PrimaryExpression	1		5686241	1					
ANR	5686367	IdentifierDeclStatement	int hashstr_hex = 0 ;	434:1:11141:11160	5686241	14	True				
ANR	5686368	IdentifierDecl	hashstr_hex = 0		5686241	0					
ANR	5686369	IdentifierDeclType	int		5686241	0					
ANR	5686370	Identifier	hashstr_hex		5686241	1					
ANR	5686371	AssignmentExpression	hashstr_hex = 0		5686241	2		=			
ANR	5686372	Identifier	hashstr_hex		5686241	0					
ANR	5686373	PrimaryExpression	0		5686241	1					
ANR	5686374	IdentifierDeclStatement	size_t bytes_read = 0 ;	435:1:11163:11184	5686241	15	True				
ANR	5686375	IdentifierDecl	bytes_read = 0		5686241	0					
ANR	5686376	IdentifierDeclType	size_t		5686241	0					
ANR	5686377	Identifier	bytes_read		5686241	1					
ANR	5686378	AssignmentExpression	bytes_read = 0		5686241	2		=			
ANR	5686379	Identifier	bytes_read		5686241	0					
ANR	5686380	PrimaryExpression	0		5686241	1					
ANR	5686381	IdentifierDeclStatement	ut64 algobit ;	436:1:11211:11223	5686241	16	True				
ANR	5686382	IdentifierDecl	algobit		5686241	0					
ANR	5686383	IdentifierDeclType	ut64		5686241	0					
ANR	5686384	Identifier	algobit		5686241	1					
ANR	5686385	IdentifierDeclStatement	RHash * ctx ;	437:1:11226:11236	5686241	17	True				
ANR	5686386	IdentifierDecl	* ctx		5686241	0					
ANR	5686387	IdentifierDeclType	RHash *		5686241	0					
ANR	5686388	Identifier	ctx		5686241	1					
ANR	5686389	IdentifierDeclStatement	RIO * io ;	438:1:11239:11246	5686241	18	True				
ANR	5686390	IdentifierDecl	* io		5686241	0					
ANR	5686391	IdentifierDeclType	RIO *		5686241	0					
ANR	5686392	Identifier	io		5686241	1					
ANR	5686393	WhileStatement	"while ( ( c = r_getopt ( argc , argv , ""p:jD:rveE:a:i:I:S:s:x:b:nBhf:t:kLqc:"" ) ) != - 1 )"		5686241	19					
ANR	5686394	Condition	"( c = r_getopt ( argc , argv , ""p:jD:rveE:a:i:I:S:s:x:b:nBhf:t:kLqc:"" ) ) != - 1"	440:8:11257:11329	5686241	0	True				
ANR	5686395	EqualityExpression	"( c = r_getopt ( argc , argv , ""p:jD:rveE:a:i:I:S:s:x:b:nBhf:t:kLqc:"" ) ) != - 1"		5686241	0		!=			
ANR	5686396	AssignmentExpression	"c = r_getopt ( argc , argv , ""p:jD:rveE:a:i:I:S:s:x:b:nBhf:t:kLqc:"" )"		5686241	0		=			
ANR	5686397	Identifier	c		5686241	0					
ANR	5686398	CallExpression	"r_getopt ( argc , argv , ""p:jD:rveE:a:i:I:S:s:x:b:nBhf:t:kLqc:"" )"		5686241	1					
ANR	5686399	Callee	r_getopt		5686241	0					
ANR	5686400	Identifier	r_getopt		5686241	0					
ANR	5686401	ArgumentList	argc		5686241	1					
ANR	5686402	Argument	argc		5686241	0					
ANR	5686403	Identifier	argc		5686241	0					
ANR	5686404	Argument	argv		5686241	1					
ANR	5686405	Identifier	argv		5686241	0					
ANR	5686406	Argument	"""p:jD:rveE:a:i:I:S:s:x:b:nBhf:t:kLqc:"""		5686241	2					
ANR	5686407	PrimaryExpression	"""p:jD:rveE:a:i:I:S:s:x:b:nBhf:t:kLqc:"""		5686241	0					
ANR	5686408	UnaryOperationExpression	- 1		5686241	1					
ANR	5686409	UnaryOperator	-		5686241	0					
ANR	5686410	PrimaryExpression	1		5686241	1					
ANR	5686411	CompoundStatement		22:83:591:591	5686241	1					
ANR	5686412	SwitchStatement	switch ( c )		5686241	0					
ANR	5686413	Condition	c	441:10:11344:11344	5686241	0	True				
ANR	5686414	Identifier	c		5686241	0					
ANR	5686415	CompoundStatement		23:13:606:606	5686241	1					
ANR	5686416	Label	case 'q' :	442:2:11351:11359	5686241	0	True				
ANR	5686417	ExpressionStatement	quiet ++	442:12:11361:11368	5686241	1	True				
ANR	5686418	PostIncDecOperationExpression	quiet ++		5686241	0					
ANR	5686419	Identifier	quiet		5686241	0					
ANR	5686420	IncDec	++		5686241	1					
ANR	5686421	BreakStatement	break ;	442:21:11370:11375	5686241	2	True				
ANR	5686422	Label	case 'i' :	443:2:11379:11387	5686241	3	True				
ANR	5686423	ExpressionStatement	iterations = atoi ( r_optarg )	444:3:11392:11420	5686241	4	True				
ANR	5686424	AssignmentExpression	iterations = atoi ( r_optarg )		5686241	0		=			
ANR	5686425	Identifier	iterations		5686241	0					
ANR	5686426	CallExpression	atoi ( r_optarg )		5686241	1					
ANR	5686427	Callee	atoi		5686241	0					
ANR	5686428	Identifier	atoi		5686241	0					
ANR	5686429	ArgumentList	r_optarg		5686241	1					
ANR	5686430	Argument	r_optarg		5686241	0					
ANR	5686431	Identifier	r_optarg		5686241	0					
ANR	5686432	IfStatement	if ( iterations < 0 )		5686241	5					
ANR	5686433	Condition	iterations < 0	445:7:11429:11442	5686241	0	True				
ANR	5686434	RelationalExpression	iterations < 0		5686241	0		<			
ANR	5686435	Identifier	iterations		5686241	0					
ANR	5686436	PrimaryExpression	0		5686241	1					
ANR	5686437	CompoundStatement		27:23:704:704	5686241	1					
ANR	5686438	ExpressionStatement	"eprintf ( ""error: -i argument must be positive\\n"" )"	446:4:11451:11500	5686241	0	True				
ANR	5686439	CallExpression	"eprintf ( ""error: -i argument must be positive\\n"" )"		5686241	0					
ANR	5686440	Callee	eprintf		5686241	0					
ANR	5686441	Identifier	eprintf		5686241	0					
ANR	5686442	ArgumentList	"""error: -i argument must be positive\\n"""		5686241	1					
ANR	5686443	Argument	"""error: -i argument must be positive\\n"""		5686241	0					
ANR	5686444	PrimaryExpression	"""error: -i argument must be positive\\n"""		5686241	0					
ANR	5686445	ReturnStatement	return 1 ;	447:4:11506:11514	5686241	1	True				
ANR	5686446	PrimaryExpression	1		5686241	0					
ANR	5686447	BreakStatement	break ;	449:3:11524:11529	5686241	6	True				
ANR	5686448	Label	case 'j' :	450:2:11533:11541	5686241	7	True				
ANR	5686449	ExpressionStatement	rad = 'j'	450:12:11543:11552	5686241	8	True				
ANR	5686450	AssignmentExpression	rad = 'j'		5686241	0		=			
ANR	5686451	Identifier	rad		5686241	0					
ANR	5686452	PrimaryExpression	'j'		5686241	1					
ANR	5686453	BreakStatement	break ;	450:23:11554:11559	5686241	9	True				
ANR	5686454	Label	case 'S' :	451:2:11563:11571	5686241	10	True				
ANR	5686455	ExpressionStatement	seed = r_optarg	451:12:11573:11588	5686241	11	True				
ANR	5686456	AssignmentExpression	seed = r_optarg		5686241	0		=			
ANR	5686457	Identifier	seed		5686241	0					
ANR	5686458	Identifier	r_optarg		5686241	1					
ANR	5686459	BreakStatement	break ;	451:29:11590:11595	5686241	12	True				
ANR	5686460	Label	case 'I' :	452:2:11599:11607	5686241	13	True				
ANR	5686461	ExpressionStatement	ivseed = r_optarg	452:12:11609:11626	5686241	14	True				
ANR	5686462	AssignmentExpression	ivseed = r_optarg		5686241	0		=			
ANR	5686463	Identifier	ivseed		5686241	0					
ANR	5686464	Identifier	r_optarg		5686241	1					
ANR	5686465	BreakStatement	break ;	452:31:11628:11633	5686241	15	True				
ANR	5686466	Label	case 'n' :	453:2:11637:11645	5686241	16	True				
ANR	5686467	ExpressionStatement	numblocks = 1	453:12:11647:11660	5686241	17	True				
ANR	5686468	AssignmentExpression	numblocks = 1		5686241	0		=			
ANR	5686469	Identifier	numblocks		5686241	0					
ANR	5686470	PrimaryExpression	1		5686241	1					
ANR	5686471	BreakStatement	break ;	453:27:11662:11667	5686241	18	True				
ANR	5686472	Label	case 'D' :	454:2:11671:11679	5686241	19	True				
ANR	5686473	ExpressionStatement	decrypt = r_optarg	454:12:11681:11699	5686241	20	True				
ANR	5686474	AssignmentExpression	decrypt = r_optarg		5686241	0		=			
ANR	5686475	Identifier	decrypt		5686241	0					
ANR	5686476	Identifier	r_optarg		5686241	1					
ANR	5686477	BreakStatement	break ;	454:32:11701:11706	5686241	21	True				
ANR	5686478	Label	case 'E' :	455:2:11710:11718	5686241	22	True				
ANR	5686479	ExpressionStatement	encrypt = r_optarg	455:12:11720:11738	5686241	23	True				
ANR	5686480	AssignmentExpression	encrypt = r_optarg		5686241	0		=			
ANR	5686481	Identifier	encrypt		5686241	0					
ANR	5686482	Identifier	r_optarg		5686241	1					
ANR	5686483	BreakStatement	break ;	455:32:11740:11745	5686241	24	True				
ANR	5686484	Label	case 'L' :	456:2:11749:11757	5686241	25	True				
ANR	5686485	ExpressionStatement	algolist ( )	456:12:11759:11770	5686241	26	True				
ANR	5686486	CallExpression	algolist ( )		5686241	0					
ANR	5686487	Callee	algolist		5686241	0					
ANR	5686488	Identifier	algolist		5686241	0					
ANR	5686489	ArgumentList			5686241	1					
ANR	5686490	ReturnStatement	return 0 ;	456:25:11772:11780	5686241	27	True				
ANR	5686491	PrimaryExpression	0		5686241	0					
ANR	5686492	Label	case 'e' :	457:2:11784:11792	5686241	28	True				
ANR	5686493	ExpressionStatement	ule = 1	457:12:11794:11801	5686241	29	True				
ANR	5686494	AssignmentExpression	ule = 1		5686241	0		=			
ANR	5686495	Identifier	ule		5686241	0					
ANR	5686496	PrimaryExpression	1		5686241	1					
ANR	5686497	BreakStatement	break ;	457:21:11803:11808	5686241	30	True				
ANR	5686498	Label	case 'r' :	458:2:11812:11820	5686241	31	True				
ANR	5686499	ExpressionStatement	rad = 1	458:12:11822:11829	5686241	32	True				
ANR	5686500	AssignmentExpression	rad = 1		5686241	0		=			
ANR	5686501	Identifier	rad		5686241	0					
ANR	5686502	PrimaryExpression	1		5686241	1					
ANR	5686503	BreakStatement	break ;	458:21:11831:11836	5686241	33	True				
ANR	5686504	Label	case 'k' :	459:2:11840:11848	5686241	34	True				
ANR	5686505	ExpressionStatement	rad = 2	459:12:11850:11857	5686241	35	True				
ANR	5686506	AssignmentExpression	rad = 2		5686241	0		=			
ANR	5686507	Identifier	rad		5686241	0					
ANR	5686508	PrimaryExpression	2		5686241	1					
ANR	5686509	BreakStatement	break ;	459:21:11859:11864	5686241	36	True				
ANR	5686510	Label	case 'p' :	460:2:11868:11876	5686241	37	True				
ANR	5686511	ExpressionStatement	ptype = r_optarg	460:12:11878:11894	5686241	38	True				
ANR	5686512	AssignmentExpression	ptype = r_optarg		5686241	0		=			
ANR	5686513	Identifier	ptype		5686241	0					
ANR	5686514	Identifier	r_optarg		5686241	1					
ANR	5686515	BreakStatement	break ;	460:30:11896:11901	5686241	39	True				
ANR	5686516	Label	case 'a' :	461:2:11905:11913	5686241	40	True				
ANR	5686517	ExpressionStatement	algo = r_optarg	461:12:11915:11930	5686241	41	True				
ANR	5686518	AssignmentExpression	algo = r_optarg		5686241	0		=			
ANR	5686519	Identifier	algo		5686241	0					
ANR	5686520	Identifier	r_optarg		5686241	1					
ANR	5686521	BreakStatement	break ;	461:29:11932:11937	5686241	42	True				
ANR	5686522	Label	case 'B' :	462:2:11941:11949	5686241	43	True				
ANR	5686523	ExpressionStatement	incremental = false	462:12:11951:11970	5686241	44	True				
ANR	5686524	AssignmentExpression	incremental = false		5686241	0		=			
ANR	5686525	Identifier	incremental		5686241	0					
ANR	5686526	Identifier	false		5686241	1					
ANR	5686527	BreakStatement	break ;	462:33:11972:11977	5686241	45	True				
ANR	5686528	Label	case 'b' :	463:2:11981:11989	5686241	46	True				
ANR	5686529	ExpressionStatement	"bsize = ( int ) r_num_math ( NULL , r_optarg )"	463:12:11991:12032	5686241	47	True				
ANR	5686530	AssignmentExpression	"bsize = ( int ) r_num_math ( NULL , r_optarg )"		5686241	0		=			
ANR	5686531	Identifier	bsize		5686241	0					
ANR	5686532	CastExpression	"( int ) r_num_math ( NULL , r_optarg )"		5686241	1					
ANR	5686533	CastTarget	int		5686241	0					
ANR	5686534	CallExpression	"r_num_math ( NULL , r_optarg )"		5686241	1					
ANR	5686535	Callee	r_num_math		5686241	0					
ANR	5686536	Identifier	r_num_math		5686241	0					
ANR	5686537	ArgumentList	NULL		5686241	1					
ANR	5686538	Argument	NULL		5686241	0					
ANR	5686539	Identifier	NULL		5686241	0					
ANR	5686540	Argument	r_optarg		5686241	1					
ANR	5686541	Identifier	r_optarg		5686241	0					
ANR	5686542	BreakStatement	break ;	463:55:12034:12039	5686241	48	True				
ANR	5686543	Label	case 'f' :	464:2:12043:12051	5686241	49	True				
ANR	5686544	ExpressionStatement	"from = r_num_math ( NULL , r_optarg )"	464:12:12053:12087	5686241	50	True				
ANR	5686545	AssignmentExpression	"from = r_num_math ( NULL , r_optarg )"		5686241	0		=			
ANR	5686546	Identifier	from		5686241	0					
ANR	5686547	CallExpression	"r_num_math ( NULL , r_optarg )"		5686241	1					
ANR	5686548	Callee	r_num_math		5686241	0					
ANR	5686549	Identifier	r_num_math		5686241	0					
ANR	5686550	ArgumentList	NULL		5686241	1					
ANR	5686551	Argument	NULL		5686241	0					
ANR	5686552	Identifier	NULL		5686241	0					
ANR	5686553	Argument	r_optarg		5686241	1					
ANR	5686554	Identifier	r_optarg		5686241	0					
ANR	5686555	BreakStatement	break ;	464:48:12089:12094	5686241	51	True				
ANR	5686556	Label	case 't' :	465:2:12098:12106	5686241	52	True				
ANR	5686557	ExpressionStatement	"to = 1 + r_num_math ( NULL , r_optarg )"	465:12:12108:12144	5686241	53	True				
ANR	5686558	AssignmentExpression	"to = 1 + r_num_math ( NULL , r_optarg )"		5686241	0		=			
ANR	5686559	Identifier	to		5686241	0					
ANR	5686560	AdditiveExpression	"1 + r_num_math ( NULL , r_optarg )"		5686241	1		+			
ANR	5686561	PrimaryExpression	1		5686241	0					
ANR	5686562	CallExpression	"r_num_math ( NULL , r_optarg )"		5686241	1					
ANR	5686563	Callee	r_num_math		5686241	0					
ANR	5686564	Identifier	r_num_math		5686241	0					
ANR	5686565	ArgumentList	NULL		5686241	1					
ANR	5686566	Argument	NULL		5686241	0					
ANR	5686567	Identifier	NULL		5686241	0					
ANR	5686568	Argument	r_optarg		5686241	1					
ANR	5686569	Identifier	r_optarg		5686241	0					
ANR	5686570	BreakStatement	break ;	465:50:12146:12151	5686241	54	True				
ANR	5686571	Label	case 'v' :	466:2:12155:12163	5686241	55	True				
ANR	5686572	ReturnStatement	"return r_main_version_print ( ""rahash2"" ) ;"	466:12:12165:12204	5686241	56	True				
ANR	5686573	CallExpression	"r_main_version_print ( ""rahash2"" )"		5686241	0					
ANR	5686574	Callee	r_main_version_print		5686241	0					
ANR	5686575	Identifier	r_main_version_print		5686241	0					
ANR	5686576	ArgumentList	"""rahash2"""		5686241	1					
ANR	5686577	Argument	"""rahash2"""		5686241	0					
ANR	5686578	PrimaryExpression	"""rahash2"""		5686241	0					
ANR	5686579	Label	case 'h' :	467:2:12208:12216	5686241	57	True				
ANR	5686580	ReturnStatement	return do_help ( 0 ) ;	467:12:12218:12236	5686241	58	True				
ANR	5686581	CallExpression	do_help ( 0 )		5686241	0					
ANR	5686582	Callee	do_help		5686241	0					
ANR	5686583	Identifier	do_help		5686241	0					
ANR	5686584	ArgumentList	0		5686241	1					
ANR	5686585	Argument	0		5686241	0					
ANR	5686586	PrimaryExpression	0		5686241	0					
ANR	5686587	Label	case 's' :	468:2:12240:12248	5686241	59	True				
ANR	5686588	ExpressionStatement	"setHashString ( r_optarg , 0 )"	468:12:12250:12277	5686241	60	True				
ANR	5686589	CallExpression	"setHashString ( r_optarg , 0 )"		5686241	0					
ANR	5686590	Callee	setHashString		5686241	0					
ANR	5686591	Identifier	setHashString		5686241	0					
ANR	5686592	ArgumentList	r_optarg		5686241	1					
ANR	5686593	Argument	r_optarg		5686241	0					
ANR	5686594	Identifier	r_optarg		5686241	0					
ANR	5686595	Argument	0		5686241	1					
ANR	5686596	PrimaryExpression	0		5686241	0					
ANR	5686597	BreakStatement	break ;	468:41:12279:12284	5686241	61	True				
ANR	5686598	Label	case 'x' :	469:2:12288:12296	5686241	62	True				
ANR	5686599	ExpressionStatement	"setHashString ( r_optarg , 1 )"	469:12:12298:12325	5686241	63	True				
ANR	5686600	CallExpression	"setHashString ( r_optarg , 1 )"		5686241	0					
ANR	5686601	Callee	setHashString		5686241	0					
ANR	5686602	Identifier	setHashString		5686241	0					
ANR	5686603	ArgumentList	r_optarg		5686241	1					
ANR	5686604	Argument	r_optarg		5686241	0					
ANR	5686605	Identifier	r_optarg		5686241	0					
ANR	5686606	Argument	1		5686241	1					
ANR	5686607	PrimaryExpression	1		5686241	0					
ANR	5686608	BreakStatement	break ;	469:41:12327:12332	5686241	64	True				
ANR	5686609	Label	case 'c' :	470:2:12336:12344	5686241	65	True				
ANR	5686610	ExpressionStatement	compareStr = r_optarg	470:12:12346:12367	5686241	66	True				
ANR	5686611	AssignmentExpression	compareStr = r_optarg		5686241	0		=			
ANR	5686612	Identifier	compareStr		5686241	0					
ANR	5686613	Identifier	r_optarg		5686241	1					
ANR	5686614	BreakStatement	break ;	470:35:12369:12374	5686241	67	True				
ANR	5686615	Label	default :	471:2:12378:12385	5686241	68	True				
ANR	5686616	Identifier	default		5686241	0					
ANR	5686617	ReturnStatement	return do_help ( 0 ) ;	471:11:12387:12405	5686241	69	True				
ANR	5686618	CallExpression	do_help ( 0 )		5686241	0					
ANR	5686619	Callee	do_help		5686241	0					
ANR	5686620	Identifier	do_help		5686241	0					
ANR	5686621	ArgumentList	0		5686241	1					
ANR	5686622	Argument	0		5686241	0					
ANR	5686623	PrimaryExpression	0		5686241	0					
ANR	5686624	IfStatement	if ( encrypt && decrypt )		5686241	20					
ANR	5686625	Condition	encrypt && decrypt	474:5:12419:12436	5686241	0	True				
ANR	5686626	AndExpression	encrypt && decrypt		5686241	0		&&			
ANR	5686627	Identifier	encrypt		5686241	0					
ANR	5686628	Identifier	decrypt		5686241	1					
ANR	5686629	CompoundStatement		56:25:1698:1698	5686241	1					
ANR	5686630	ExpressionStatement	"eprintf ( ""rahash2: Option -E and -D are incompatible with each other.\\n"" )"	475:2:12443:12516	5686241	0	True				
ANR	5686631	CallExpression	"eprintf ( ""rahash2: Option -E and -D are incompatible with each other.\\n"" )"		5686241	0					
ANR	5686632	Callee	eprintf		5686241	0					
ANR	5686633	Identifier	eprintf		5686241	0					
ANR	5686634	ArgumentList	"""rahash2: Option -E and -D are incompatible with each other.\\n"""		5686241	1					
ANR	5686635	Argument	"""rahash2: Option -E and -D are incompatible with each other.\\n"""		5686241	0					
ANR	5686636	PrimaryExpression	"""rahash2: Option -E and -D are incompatible with each other.\\n"""		5686241	0					
ANR	5686637	ReturnStatement	return 1 ;	476:2:12520:12528	5686241	1	True				
ANR	5686638	PrimaryExpression	1		5686241	0					
ANR	5686639	IfStatement	if ( compareStr )		5686241	21					
ANR	5686640	Condition	compareStr	478:5:12538:12547	5686241	0	True				
ANR	5686641	Identifier	compareStr		5686241	0					
ANR	5686642	CompoundStatement		66:2:1957:1974	5686241	1					
ANR	5686643	IdentifierDeclStatement	int compareBin_len ;	479:2:12554:12572	5686241	0	True				
ANR	5686644	IdentifierDecl	compareBin_len		5686241	0					
ANR	5686645	IdentifierDeclType	int		5686241	0					
ANR	5686646	Identifier	compareBin_len		5686241	1					
ANR	5686647	IfStatement	if ( bsize && ! incremental )		5686241	1					
ANR	5686648	Condition	bsize && ! incremental	480:6:12580:12600	5686241	0	True				
ANR	5686649	AndExpression	bsize && ! incremental		5686241	0		&&			
ANR	5686650	Identifier	bsize		5686241	0					
ANR	5686651	UnaryOperationExpression	! incremental		5686241	1					
ANR	5686652	UnaryOperator	!		5686241	0					
ANR	5686653	Identifier	incremental		5686241	1					
ANR	5686654	CompoundStatement		62:29:1862:1862	5686241	1					
ANR	5686655	ExpressionStatement	"eprintf ( ""rahash2: Option -c incompatible with -b and -B options.\\n"" )"	481:3:12608:12677	5686241	0	True				
ANR	5686656	CallExpression	"eprintf ( ""rahash2: Option -c incompatible with -b and -B options.\\n"" )"		5686241	0					
ANR	5686657	Callee	eprintf		5686241	0					
ANR	5686658	Identifier	eprintf		5686241	0					
ANR	5686659	ArgumentList	"""rahash2: Option -c incompatible with -b and -B options.\\n"""		5686241	1					
ANR	5686660	Argument	"""rahash2: Option -c incompatible with -b and -B options.\\n"""		5686241	0					
ANR	5686661	PrimaryExpression	"""rahash2: Option -c incompatible with -b and -B options.\\n"""		5686241	0					
ANR	5686662	ReturnStatement	return 1 ;	482:3:12682:12690	5686241	1	True				
ANR	5686663	PrimaryExpression	1		5686241	0					
ANR	5686664	IdentifierDeclStatement	bool flag = false ;	484:2:12698:12715	5686241	2	True				
ANR	5686665	IdentifierDecl	flag = false		5686241	0					
ANR	5686666	IdentifierDeclType	bool		5686241	0					
ANR	5686667	Identifier	flag		5686241	1					
ANR	5686668	AssignmentExpression	flag = false		5686241	2		=			
ANR	5686669	Identifier	false		5686241	0					
ANR	5686670	Identifier	false		5686241	1					
ANR	5686671	IfStatement	if ( encrypt )		5686241	3					
ANR	5686672	Condition	encrypt	485:6:12723:12729	5686241	0	True				
ANR	5686673	Identifier	encrypt		5686241	0					
ANR	5686674	CompoundStatement		67:15:1991:1991	5686241	1					
ANR	5686675	ExpressionStatement	"flag = ! strcmp ( encrypt , ""base64"" ) || ! strcmp ( encrypt , ""base91"" )"	486:3:12737:12802	5686241	0	True				
ANR	5686676	AssignmentExpression	"flag = ! strcmp ( encrypt , ""base64"" ) || ! strcmp ( encrypt , ""base91"" )"		5686241	0		=			
ANR	5686677	Identifier	flag		5686241	0					
ANR	5686678	OrExpression	"! strcmp ( encrypt , ""base64"" ) || ! strcmp ( encrypt , ""base91"" )"		5686241	1		||			
ANR	5686679	UnaryOperationExpression	"! strcmp ( encrypt , ""base64"" )"		5686241	0					
ANR	5686680	UnaryOperator	!		5686241	0					
ANR	5686681	CallExpression	"strcmp ( encrypt , ""base64"" )"		5686241	1					
ANR	5686682	Callee	strcmp		5686241	0					
ANR	5686683	Identifier	strcmp		5686241	0					
ANR	5686684	ArgumentList	encrypt		5686241	1					
ANR	5686685	Argument	encrypt		5686241	0					
ANR	5686686	Identifier	encrypt		5686241	0					
ANR	5686687	Argument	"""base64"""		5686241	1					
ANR	5686688	PrimaryExpression	"""base64"""		5686241	0					
ANR	5686689	UnaryOperationExpression	"! strcmp ( encrypt , ""base91"" )"		5686241	1					
ANR	5686690	UnaryOperator	!		5686241	0					
ANR	5686691	CallExpression	"strcmp ( encrypt , ""base91"" )"		5686241	1					
ANR	5686692	Callee	strcmp		5686241	0					
ANR	5686693	Identifier	strcmp		5686241	0					
ANR	5686694	ArgumentList	encrypt		5686241	1					
ANR	5686695	Argument	encrypt		5686241	0					
ANR	5686696	Identifier	encrypt		5686241	0					
ANR	5686697	Argument	"""base91"""		5686241	1					
ANR	5686698	PrimaryExpression	"""base91"""		5686241	0					
ANR	5686699	ElseStatement	else		5686241	0					
ANR	5686700	IfStatement	if ( decrypt )		5686241	0					
ANR	5686701	Condition	decrypt	487:13:12817:12823	5686241	0	True				
ANR	5686702	Identifier	decrypt		5686241	0					
ANR	5686703	CompoundStatement		69:22:2085:2085	5686241	1					
ANR	5686704	ExpressionStatement	"flag = ! strcmp ( decrypt , ""base64"" ) || ! strcmp ( decrypt , ""base91"" )"	488:3:12831:12896	5686241	0	True				
ANR	5686705	AssignmentExpression	"flag = ! strcmp ( decrypt , ""base64"" ) || ! strcmp ( decrypt , ""base91"" )"		5686241	0		=			
ANR	5686706	Identifier	flag		5686241	0					
ANR	5686707	OrExpression	"! strcmp ( decrypt , ""base64"" ) || ! strcmp ( decrypt , ""base91"" )"		5686241	1		||			
ANR	5686708	UnaryOperationExpression	"! strcmp ( decrypt , ""base64"" )"		5686241	0					
ANR	5686709	UnaryOperator	!		5686241	0					
ANR	5686710	CallExpression	"strcmp ( decrypt , ""base64"" )"		5686241	1					
ANR	5686711	Callee	strcmp		5686241	0					
ANR	5686712	Identifier	strcmp		5686241	0					
ANR	5686713	ArgumentList	decrypt		5686241	1					
ANR	5686714	Argument	decrypt		5686241	0					
ANR	5686715	Identifier	decrypt		5686241	0					
ANR	5686716	Argument	"""base64"""		5686241	1					
ANR	5686717	PrimaryExpression	"""base64"""		5686241	0					
ANR	5686718	UnaryOperationExpression	"! strcmp ( decrypt , ""base91"" )"		5686241	1					
ANR	5686719	UnaryOperator	!		5686241	0					
ANR	5686720	CallExpression	"strcmp ( decrypt , ""base91"" )"		5686241	1					
ANR	5686721	Callee	strcmp		5686241	0					
ANR	5686722	Identifier	strcmp		5686241	0					
ANR	5686723	ArgumentList	decrypt		5686241	1					
ANR	5686724	Argument	decrypt		5686241	0					
ANR	5686725	Identifier	decrypt		5686241	0					
ANR	5686726	Argument	"""base91"""		5686241	1					
ANR	5686727	PrimaryExpression	"""base91"""		5686241	0					
ANR	5686728	IfStatement	if ( flag )		5686241	4					
ANR	5686729	Condition	flag	490:6:12908:12911	5686241	0	True				
ANR	5686730	Identifier	flag		5686241	0					
ANR	5686731	CompoundStatement		72:12:2173:2173	5686241	1					
ANR	5686732	ExpressionStatement	"eprintf ( ""rahash2: Option -c incompatible with -E base64, -E base91, -D base64 or -D base91 options.\\n"" )"	491:3:12919:13023	5686241	0	True				
ANR	5686733	CallExpression	"eprintf ( ""rahash2: Option -c incompatible with -E base64, -E base91, -D base64 or -D base91 options.\\n"" )"		5686241	0					
ANR	5686734	Callee	eprintf		5686241	0					
ANR	5686735	Identifier	eprintf		5686241	0					
ANR	5686736	ArgumentList	"""rahash2: Option -c incompatible with -E base64, -E base91, -D base64 or -D base91 options.\\n"""		5686241	1					
ANR	5686737	Argument	"""rahash2: Option -c incompatible with -E base64, -E base91, -D base64 or -D base91 options.\\n"""		5686241	0					
ANR	5686738	PrimaryExpression	"""rahash2: Option -c incompatible with -E base64, -E base91, -D base64 or -D base91 options.\\n"""		5686241	0					
ANR	5686739	ReturnStatement	return 1 ;	492:3:13028:13036	5686241	1	True				
ANR	5686740	PrimaryExpression	1		5686241	0					
ANR	5686741	ExpressionStatement	algobit = r_hash_name_to_bits ( algo )	494:2:13044:13080	5686241	5	True				
ANR	5686742	AssignmentExpression	algobit = r_hash_name_to_bits ( algo )		5686241	0		=			
ANR	5686743	Identifier	algobit		5686241	0					
ANR	5686744	CallExpression	r_hash_name_to_bits ( algo )		5686241	1					
ANR	5686745	Callee	r_hash_name_to_bits		5686241	0					
ANR	5686746	Identifier	r_hash_name_to_bits		5686241	0					
ANR	5686747	ArgumentList	algo		5686241	1					
ANR	5686748	Argument	algo		5686241	0					
ANR	5686749	Identifier	algo		5686241	0					
ANR	5686750	IfStatement	if ( ! is_power_of_two ( algobit ) )		5686241	6					
ANR	5686751	Condition	! is_power_of_two ( algobit )	496:6:13157:13182	5686241	0	True				
ANR	5686752	UnaryOperationExpression	! is_power_of_two ( algobit )		5686241	0					
ANR	5686753	UnaryOperator	!		5686241	0					
ANR	5686754	CallExpression	is_power_of_two ( algobit )		5686241	1					
ANR	5686755	Callee	is_power_of_two		5686241	0					
ANR	5686756	Identifier	is_power_of_two		5686241	0					
ANR	5686757	ArgumentList	algobit		5686241	1					
ANR	5686758	Argument	algobit		5686241	0					
ANR	5686759	Identifier	algobit		5686241	0					
ANR	5686760	CompoundStatement		78:34:2444:2444	5686241	1					
ANR	5686761	ExpressionStatement	"eprintf ( ""rahash2: Option -c incompatible with multiple algorithms in -a.\\n"" )"	497:3:13190:13267	5686241	0	True				
ANR	5686762	CallExpression	"eprintf ( ""rahash2: Option -c incompatible with multiple algorithms in -a.\\n"" )"		5686241	0					
ANR	5686763	Callee	eprintf		5686241	0					
ANR	5686764	Identifier	eprintf		5686241	0					
ANR	5686765	ArgumentList	"""rahash2: Option -c incompatible with multiple algorithms in -a.\\n"""		5686241	1					
ANR	5686766	Argument	"""rahash2: Option -c incompatible with multiple algorithms in -a.\\n"""		5686241	0					
ANR	5686767	PrimaryExpression	"""rahash2: Option -c incompatible with multiple algorithms in -a.\\n"""		5686241	0					
ANR	5686768	ReturnStatement	return 1 ;	498:3:13272:13280	5686241	1	True				
ANR	5686769	PrimaryExpression	1		5686241	0					
ANR	5686770	ExpressionStatement	compareBin = malloc ( ( strlen ( compareStr ) + 1 ) * 2 )	500:2:13288:13339	5686241	7	True				
ANR	5686771	AssignmentExpression	compareBin = malloc ( ( strlen ( compareStr ) + 1 ) * 2 )		5686241	0		=			
ANR	5686772	Identifier	compareBin		5686241	0					
ANR	5686773	CallExpression	malloc ( ( strlen ( compareStr ) + 1 ) * 2 )		5686241	1					
ANR	5686774	Callee	malloc		5686241	0					
ANR	5686775	Identifier	malloc		5686241	0					
ANR	5686776	ArgumentList	( strlen ( compareStr ) + 1 ) * 2		5686241	1					
ANR	5686777	Argument	( strlen ( compareStr ) + 1 ) * 2		5686241	0					
ANR	5686778	MultiplicativeExpression	( strlen ( compareStr ) + 1 ) * 2		5686241	0		*			
ANR	5686779	AdditiveExpression	strlen ( compareStr ) + 1		5686241	0		+			
ANR	5686780	CallExpression	strlen ( compareStr )		5686241	0					
ANR	5686781	Callee	strlen		5686241	0					
ANR	5686782	Identifier	strlen		5686241	0					
ANR	5686783	ArgumentList	compareStr		5686241	1					
ANR	5686784	Argument	compareStr		5686241	0					
ANR	5686785	Identifier	compareStr		5686241	0					
ANR	5686786	PrimaryExpression	1		5686241	1					
ANR	5686787	PrimaryExpression	2		5686241	1					
ANR	5686788	IfStatement	if ( ! compareBin )		5686241	8					
ANR	5686789	Condition	! compareBin	501:6:13347:13357	5686241	0	True				
ANR	5686790	UnaryOperationExpression	! compareBin		5686241	0					
ANR	5686791	UnaryOperator	!		5686241	0					
ANR	5686792	Identifier	compareBin		5686241	1					
ANR	5686793	CompoundStatement		83:19:2619:2619	5686241	1					
ANR	5686794	ReturnStatement	return 1 ;	502:3:13365:13373	5686241	0	True				
ANR	5686795	PrimaryExpression	1		5686241	0					
ANR	5686796	ExpressionStatement	"compareBin_len = r_hex_str2bin ( compareStr , compareBin )"	504:2:13381:13436	5686241	9	True				
ANR	5686797	AssignmentExpression	"compareBin_len = r_hex_str2bin ( compareStr , compareBin )"		5686241	0		=			
ANR	5686798	Identifier	compareBin_len		5686241	0					
ANR	5686799	CallExpression	"r_hex_str2bin ( compareStr , compareBin )"		5686241	1					
ANR	5686800	Callee	r_hex_str2bin		5686241	0					
ANR	5686801	Identifier	r_hex_str2bin		5686241	0					
ANR	5686802	ArgumentList	compareStr		5686241	1					
ANR	5686803	Argument	compareStr		5686241	0					
ANR	5686804	Identifier	compareStr		5686241	0					
ANR	5686805	Argument	compareBin		5686241	1					
ANR	5686806	Identifier	compareBin		5686241	0					
ANR	5686807	IfStatement	if ( compareBin_len < 1 )		5686241	10					
ANR	5686808	Condition	compareBin_len < 1	505:6:13444:13461	5686241	0	True				
ANR	5686809	RelationalExpression	compareBin_len < 1		5686241	0		<			
ANR	5686810	Identifier	compareBin_len		5686241	0					
ANR	5686811	PrimaryExpression	1		5686241	1					
ANR	5686812	CompoundStatement		87:26:2723:2723	5686241	1					
ANR	5686813	ExpressionStatement	"eprintf ( ""rahash2: Invalid -c hex hash\\n"" )"	506:3:13469:13511	5686241	0	True				
ANR	5686814	CallExpression	"eprintf ( ""rahash2: Invalid -c hex hash\\n"" )"		5686241	0					
ANR	5686815	Callee	eprintf		5686241	0					
ANR	5686816	Identifier	eprintf		5686241	0					
ANR	5686817	ArgumentList	"""rahash2: Invalid -c hex hash\\n"""		5686241	1					
ANR	5686818	Argument	"""rahash2: Invalid -c hex hash\\n"""		5686241	0					
ANR	5686819	PrimaryExpression	"""rahash2: Invalid -c hex hash\\n"""		5686241	0					
ANR	5686820	ExpressionStatement	free ( compareBin )	507:3:13516:13533	5686241	1	True				
ANR	5686821	CallExpression	free ( compareBin )		5686241	0					
ANR	5686822	Callee	free		5686241	0					
ANR	5686823	Identifier	free		5686241	0					
ANR	5686824	ArgumentList	compareBin		5686241	1					
ANR	5686825	Argument	compareBin		5686241	0					
ANR	5686826	Identifier	compareBin		5686241	0					
ANR	5686827	ReturnStatement	return 1 ;	508:3:13538:13546	5686241	2	True				
ANR	5686828	PrimaryExpression	1		5686241	0					
ANR	5686829	ElseStatement	else		5686241	0					
ANR	5686830	IfStatement	if ( compareBin_len != r_hash_size ( algobit ) )		5686241	0					
ANR	5686831	Condition	compareBin_len != r_hash_size ( algobit )	509:13:13561:13599	5686241	0	True				
ANR	5686832	EqualityExpression	compareBin_len != r_hash_size ( algobit )		5686241	0		!=			
ANR	5686833	Identifier	compareBin_len		5686241	0					
ANR	5686834	CallExpression	r_hash_size ( algobit )		5686241	1					
ANR	5686835	Callee	r_hash_size		5686241	0					
ANR	5686836	Identifier	r_hash_size		5686241	0					
ANR	5686837	ArgumentList	algobit		5686241	1					
ANR	5686838	Argument	algobit		5686241	0					
ANR	5686839	Identifier	algobit		5686241	0					
ANR	5686840	CompoundStatement		91:56:2863:2863	5686241	1					
ANR	5686841	ExpressionStatement	"eprintf ( ""rahash2: Given -c hash has %d byte(s) but the selected algorithm returns %d byte(s).\\n"" , compareBin_len , r_hash_size ( algobit ) )"	510:3:13609:13759	5686241	0	True				
ANR	5686842	CallExpression	"eprintf ( ""rahash2: Given -c hash has %d byte(s) but the selected algorithm returns %d byte(s).\\n"" , compareBin_len , r_hash_size ( algobit ) )"		5686241	0					
ANR	5686843	Callee	eprintf		5686241	0					
ANR	5686844	Identifier	eprintf		5686241	0					
ANR	5686845	ArgumentList	"""rahash2: Given -c hash has %d byte(s) but the selected algorithm returns %d byte(s).\\n"""		5686241	1					
ANR	5686846	Argument	"""rahash2: Given -c hash has %d byte(s) but the selected algorithm returns %d byte(s).\\n"""		5686241	0					
ANR	5686847	PrimaryExpression	"""rahash2: Given -c hash has %d byte(s) but the selected algorithm returns %d byte(s).\\n"""		5686241	0					
ANR	5686848	Argument	compareBin_len		5686241	1					
ANR	5686849	Identifier	compareBin_len		5686241	0					
ANR	5686850	Argument	r_hash_size ( algobit )		5686241	2					
ANR	5686851	CallExpression	r_hash_size ( algobit )		5686241	0					
ANR	5686852	Callee	r_hash_size		5686241	0					
ANR	5686853	Identifier	r_hash_size		5686241	0					
ANR	5686854	ArgumentList	algobit		5686241	1					
ANR	5686855	Argument	algobit		5686241	0					
ANR	5686856	Identifier	algobit		5686241	0					
ANR	5686857	ExpressionStatement	free ( compareBin )	514:3:13764:13781	5686241	1	True				
ANR	5686858	CallExpression	free ( compareBin )		5686241	0					
ANR	5686859	Callee	free		5686241	0					
ANR	5686860	Identifier	free		5686241	0					
ANR	5686861	ArgumentList	compareBin		5686241	1					
ANR	5686862	Argument	compareBin		5686241	0					
ANR	5686863	Identifier	compareBin		5686241	0					
ANR	5686864	ReturnStatement	return 1 ;	515:3:13786:13794	5686241	2	True				
ANR	5686865	PrimaryExpression	1		5686241	0					
ANR	5686866	IfStatement	if ( ( st64 ) from >= 0 && ( st64 ) to < 0 )		5686241	22					
ANR	5686867	Condition	( st64 ) from >= 0 && ( st64 ) to < 0	518:5:13808:13840	5686241	0	True				
ANR	5686868	AndExpression	( st64 ) from >= 0 && ( st64 ) to < 0		5686241	0		&&			
ANR	5686869	RelationalExpression	( st64 ) from >= 0		5686241	0		>=			
ANR	5686870	CastExpression	( st64 ) from		5686241	0					
ANR	5686871	CastTarget	st64		5686241	0					
ANR	5686872	Identifier	from		5686241	1					
ANR	5686873	PrimaryExpression	0		5686241	1					
ANR	5686874	RelationalExpression	( st64 ) to < 0		5686241	1		<			
ANR	5686875	CastExpression	( st64 ) to		5686241	0					
ANR	5686876	CastTarget	st64		5686241	0					
ANR	5686877	Identifier	to		5686241	1					
ANR	5686878	PrimaryExpression	0		5686241	1					
ANR	5686879	CompoundStatement		100:40:3102:3102	5686241	1					
ANR	5686880	ExpressionStatement	to = 0	519:2:13847:13853	5686241	0	True				
ANR	5686881	AssignmentExpression	to = 0		5686241	0		=			
ANR	5686882	Identifier	to		5686241	0					
ANR	5686883	PrimaryExpression	0		5686241	1					
ANR	5686884	IfStatement	if ( from || to )		5686241	23					
ANR	5686885	Condition	from || to	521:5:13878:13887	5686241	0	True				
ANR	5686886	OrExpression	from || to		5686241	0		||			
ANR	5686887	Identifier	from		5686241	0					
ANR	5686888	Identifier	to		5686241	1					
ANR	5686889	CompoundStatement		103:17:3149:3149	5686241	1					
ANR	5686890	IfStatement	if ( to && from >= to )		5686241	0					
ANR	5686891	Condition	to && from >= to	522:6:13898:13913	5686241	0	True				
ANR	5686892	AndExpression	to && from >= to		5686241	0		&&			
ANR	5686893	Identifier	to		5686241	0					
ANR	5686894	RelationalExpression	from >= to		5686241	1		>=			
ANR	5686895	Identifier	from		5686241	0					
ANR	5686896	Identifier	to		5686241	1					
ANR	5686897	CompoundStatement		104:24:3175:3175	5686241	1					
ANR	5686898	ExpressionStatement	"eprintf ( ""Invalid -f or -t offsets\\n"" )"	523:3:13921:13959	5686241	0	True				
ANR	5686899	CallExpression	"eprintf ( ""Invalid -f or -t offsets\\n"" )"		5686241	0					
ANR	5686900	Callee	eprintf		5686241	0					
ANR	5686901	Identifier	eprintf		5686241	0					
ANR	5686902	ArgumentList	"""Invalid -f or -t offsets\\n"""		5686241	1					
ANR	5686903	Argument	"""Invalid -f or -t offsets\\n"""		5686241	0					
ANR	5686904	PrimaryExpression	"""Invalid -f or -t offsets\\n"""		5686241	0					
ANR	5686905	ReturnStatement	return 1 ;	524:3:13964:13972	5686241	1	True				
ANR	5686906	PrimaryExpression	1		5686241	0					
ANR	5686907	IfStatement	if ( ptype )		5686241	24					
ANR	5686908	Condition	ptype	527:5:13986:13990	5686241	0	True				
ANR	5686909	Identifier	ptype		5686241	0					
ANR	5686910	CompoundStatement		109:12:3252:3252	5686241	1					
ANR	5686911	ForStatement	for ( i = r_optind ; i < argc ; i ++ )		5686241	0					
ANR	5686912	ForInit	i = r_optind ;	531:7:14119:14131	5686241	0	True				
ANR	5686913	AssignmentExpression	i = r_optind		5686241	0		=			
ANR	5686914	Identifier	i		5686241	0					
ANR	5686915	Identifier	r_optind		5686241	1					
ANR	5686916	Condition	i < argc	531:21:14133:14140	5686241	1	True				
ANR	5686917	RelationalExpression	i < argc		5686241	0		<			
ANR	5686918	Identifier	i		5686241	0					
ANR	5686919	Identifier	argc		5686241	1					
ANR	5686920	PostIncDecOperationExpression	i ++	531:31:14143:14145	5686241	2	True				
ANR	5686921	Identifier	i		5686241	0					
ANR	5686922	IncDec	++		5686241	1					
ANR	5686923	CompoundStatement		113:36:3407:3407	5686241	3					
ANR	5686924	ExpressionStatement	"printf ( ""%s:\\n"" , argv [ i ] )"	532:3:14153:14178	5686241	0	True				
ANR	5686925	CallExpression	"printf ( ""%s:\\n"" , argv [ i ] )"		5686241	0					
ANR	5686926	Callee	printf		5686241	0					
ANR	5686927	Identifier	printf		5686241	0					
ANR	5686928	ArgumentList	"""%s:\\n"""		5686241	1					
ANR	5686929	Argument	"""%s:\\n"""		5686241	0					
ANR	5686930	PrimaryExpression	"""%s:\\n"""		5686241	0					
ANR	5686931	Argument	argv [ i ]		5686241	1					
ANR	5686932	ArrayIndexing	argv [ i ]		5686241	0					
ANR	5686933	Identifier	argv		5686241	0					
ANR	5686934	Identifier	i		5686241	1					
ANR	5686935	ExpressionStatement	"r_sys_cmdf ( ""r2 -qfnc \\""p==%s 100\\"" \\""%s\\"""" , ptype , argv [ i ] )"	533:3:14183:14243	5686241	1	True				
ANR	5686936	CallExpression	"r_sys_cmdf ( ""r2 -qfnc \\""p==%s 100\\"" \\""%s\\"""" , ptype , argv [ i ] )"		5686241	0					
ANR	5686937	Callee	r_sys_cmdf		5686241	0					
ANR	5686938	Identifier	r_sys_cmdf		5686241	0					
ANR	5686939	ArgumentList	"""r2 -qfnc \\""p==%s 100\\"" \\""%s\\"""""		5686241	1					
ANR	5686940	Argument	"""r2 -qfnc \\""p==%s 100\\"" \\""%s\\"""""		5686241	0					
ANR	5686941	PrimaryExpression	"""r2 -qfnc \\""p==%s 100\\"" \\""%s\\"""""		5686241	0					
ANR	5686942	Argument	ptype		5686241	1					
ANR	5686943	Identifier	ptype		5686241	0					
ANR	5686944	Argument	argv [ i ]		5686241	2					
ANR	5686945	ArrayIndexing	argv [ i ]		5686241	0					
ANR	5686946	Identifier	argv		5686241	0					
ANR	5686947	Identifier	i		5686241	1					
ANR	5686948	ReturnStatement	return 0 ;	535:2:14251:14259	5686241	1	True				
ANR	5686949	PrimaryExpression	0		5686241	0					
ANR	5686950	IfStatement	if ( ivseed )		5686241	25					
ANR	5686951	Condition	ivseed	538:5:14302:14307	5686241	0	True				
ANR	5686952	Identifier	ivseed		5686241	0					
ANR	5686953	CompoundStatement		120:13:3569:3569	5686241	1					
ANR	5686954	ExpressionStatement	iv = ( ut8 * ) malloc ( strlen ( ivseed ) + 128 )	539:2:14314:14357	5686241	0	True				
ANR	5686955	AssignmentExpression	iv = ( ut8 * ) malloc ( strlen ( ivseed ) + 128 )		5686241	0		=			
ANR	5686956	Identifier	iv		5686241	0					
ANR	5686957	CastExpression	( ut8 * ) malloc ( strlen ( ivseed ) + 128 )		5686241	1					
ANR	5686958	CastTarget	ut8 *		5686241	0					
ANR	5686959	CallExpression	malloc ( strlen ( ivseed ) + 128 )		5686241	1					
ANR	5686960	Callee	malloc		5686241	0					
ANR	5686961	Identifier	malloc		5686241	0					
ANR	5686962	ArgumentList	strlen ( ivseed ) + 128		5686241	1					
ANR	5686963	Argument	strlen ( ivseed ) + 128		5686241	0					
ANR	5686964	AdditiveExpression	strlen ( ivseed ) + 128		5686241	0		+			
ANR	5686965	CallExpression	strlen ( ivseed )		5686241	0					
ANR	5686966	Callee	strlen		5686241	0					
ANR	5686967	Identifier	strlen		5686241	0					
ANR	5686968	ArgumentList	ivseed		5686241	1					
ANR	5686969	Argument	ivseed		5686241	0					
ANR	5686970	Identifier	ivseed		5686241	0					
ANR	5686971	PrimaryExpression	128		5686241	1					
ANR	5686972	IfStatement	"if ( ! strncmp ( ivseed , ""s:"" , 2 ) )"		5686241	1					
ANR	5686973	Condition	"! strncmp ( ivseed , ""s:"" , 2 )"	540:6:14365:14390	5686241	0	True				
ANR	5686974	UnaryOperationExpression	"! strncmp ( ivseed , ""s:"" , 2 )"		5686241	0					
ANR	5686975	UnaryOperator	!		5686241	0					
ANR	5686976	CallExpression	"strncmp ( ivseed , ""s:"" , 2 )"		5686241	1					
ANR	5686977	Callee	strncmp		5686241	0					
ANR	5686978	Identifier	strncmp		5686241	0					
ANR	5686979	ArgumentList	ivseed		5686241	1					
ANR	5686980	Argument	ivseed		5686241	0					
ANR	5686981	Identifier	ivseed		5686241	0					
ANR	5686982	Argument	"""s:"""		5686241	1					
ANR	5686983	PrimaryExpression	"""s:"""		5686241	0					
ANR	5686984	Argument	2		5686241	2					
ANR	5686985	PrimaryExpression	2		5686241	0					
ANR	5686986	CompoundStatement		122:34:3652:3652	5686241	1					
ANR	5686987	ExpressionStatement	"strcpy ( ( char * ) iv , ivseed + 2 )"	541:3:14398:14430	5686241	0	True				
ANR	5686988	CallExpression	"strcpy ( ( char * ) iv , ivseed + 2 )"		5686241	0					
ANR	5686989	Callee	strcpy		5686241	0					
ANR	5686990	Identifier	strcpy		5686241	0					
ANR	5686991	ArgumentList	( char * ) iv		5686241	1					
ANR	5686992	Argument	( char * ) iv		5686241	0					
ANR	5686993	CastExpression	( char * ) iv		5686241	0					
ANR	5686994	CastTarget	char *		5686241	0					
ANR	5686995	Identifier	iv		5686241	1					
ANR	5686996	Argument	ivseed + 2		5686241	1					
ANR	5686997	AdditiveExpression	ivseed + 2		5686241	0		+			
ANR	5686998	Identifier	ivseed		5686241	0					
ANR	5686999	PrimaryExpression	2		5686241	1					
ANR	5687000	ExpressionStatement	ivlen = strlen ( ivseed + 2 )	542:3:14435:14462	5686241	1	True				
ANR	5687001	AssignmentExpression	ivlen = strlen ( ivseed + 2 )		5686241	0		=			
ANR	5687002	Identifier	ivlen		5686241	0					
ANR	5687003	CallExpression	strlen ( ivseed + 2 )		5686241	1					
ANR	5687004	Callee	strlen		5686241	0					
ANR	5687005	Identifier	strlen		5686241	0					
ANR	5687006	ArgumentList	ivseed + 2		5686241	1					
ANR	5687007	Argument	ivseed + 2		5686241	0					
ANR	5687008	AdditiveExpression	ivseed + 2		5686241	0		+			
ANR	5687009	Identifier	ivseed		5686241	0					
ANR	5687010	PrimaryExpression	2		5686241	1					
ANR	5687011	ElseStatement	else		5686241	0					
ANR	5687012	CompoundStatement		125:9:3732:3732	5686241	0					
ANR	5687013	ExpressionStatement	"ivlen = r_hex_str2bin ( ivseed , iv )"	544:3:14478:14512	5686241	0	True				
ANR	5687014	AssignmentExpression	"ivlen = r_hex_str2bin ( ivseed , iv )"		5686241	0		=			
ANR	5687015	Identifier	ivlen		5686241	0					
ANR	5687016	CallExpression	"r_hex_str2bin ( ivseed , iv )"		5686241	1					
ANR	5687017	Callee	r_hex_str2bin		5686241	0					
ANR	5687018	Identifier	r_hex_str2bin		5686241	0					
ANR	5687019	ArgumentList	ivseed		5686241	1					
ANR	5687020	Argument	ivseed		5686241	0					
ANR	5687021	Identifier	ivseed		5686241	0					
ANR	5687022	Argument	iv		5686241	1					
ANR	5687023	Identifier	iv		5686241	0					
ANR	5687024	IfStatement	if ( ivlen < 1 )		5686241	1					
ANR	5687025	Condition	ivlen < 1	545:7:14521:14529	5686241	0	True				
ANR	5687026	RelationalExpression	ivlen < 1		5686241	0		<			
ANR	5687027	Identifier	ivlen		5686241	0					
ANR	5687028	PrimaryExpression	1		5686241	1					
ANR	5687029	CompoundStatement		127:18:3791:3791	5686241	1					
ANR	5687030	ExpressionStatement	"strcpy ( ( char * ) iv , ivseed )"	546:4:14538:14566	5686241	0	True				
ANR	5687031	CallExpression	"strcpy ( ( char * ) iv , ivseed )"		5686241	0					
ANR	5687032	Callee	strcpy		5686241	0					
ANR	5687033	Identifier	strcpy		5686241	0					
ANR	5687034	ArgumentList	( char * ) iv		5686241	1					
ANR	5687035	Argument	( char * ) iv		5686241	0					
ANR	5687036	CastExpression	( char * ) iv		5686241	0					
ANR	5687037	CastTarget	char *		5686241	0					
ANR	5687038	Identifier	iv		5686241	1					
ANR	5687039	Argument	ivseed		5686241	1					
ANR	5687040	Identifier	ivseed		5686241	0					
ANR	5687041	ExpressionStatement	ivlen = strlen ( ivseed )	547:4:14572:14595	5686241	1	True				
ANR	5687042	AssignmentExpression	ivlen = strlen ( ivseed )		5686241	0		=			
ANR	5687043	Identifier	ivlen		5686241	0					
ANR	5687044	CallExpression	strlen ( ivseed )		5686241	1					
ANR	5687045	Callee	strlen		5686241	0					
ANR	5687046	Identifier	strlen		5686241	0					
ANR	5687047	ArgumentList	ivseed		5686241	1					
ANR	5687048	Argument	ivseed		5686241	0					
ANR	5687049	Identifier	ivseed		5686241	0					
ANR	5687050	ExpressionStatement	do_hash_seed ( seed )	551:1:14610:14629	5686241	26	True				
ANR	5687051	CallExpression	do_hash_seed ( seed )		5686241	0					
ANR	5687052	Callee	do_hash_seed		5686241	0					
ANR	5687053	Identifier	do_hash_seed		5686241	0					
ANR	5687054	ArgumentList	seed		5686241	1					
ANR	5687055	Argument	seed		5686241	0					
ANR	5687056	Identifier	seed		5686241	0					
ANR	5687057	IfStatement	if ( hashstr )		5686241	27					
ANR	5687058	Condition	hashstr	552:5:14636:14642	5686241	0	True				
ANR	5687059	Identifier	hashstr		5686241	0					
ANR	5687060	CompoundStatement		134:14:3904:3904	5686241	1					
ANR	5687061	Statement	define	553:1:14648:14653	5686241	0	True				
ANR	5687062	Statement	INSIZE	553:8:14655:14660	5686241	1	True				
ANR	5687063	Statement	32768	553:15:14662:14666	5686241	2	True				
ANR	5687064	ExpressionStatement	ret = 0	554:2:14670:14677	5686241	3	True				
ANR	5687065	AssignmentExpression	ret = 0		5686241	0		=			
ANR	5687066	Identifier	ret		5686241	0					
ANR	5687067	PrimaryExpression	0		5686241	1					
ANR	5687068	IfStatement	"if ( ! strcmp ( hashstr , ""-"" ) )"		5686241	4					
ANR	5687069	Condition	"! strcmp ( hashstr , ""-"" )"	555:6:14685:14706	5686241	0	True				
ANR	5687070	UnaryOperationExpression	"! strcmp ( hashstr , ""-"" )"		5686241	0					
ANR	5687071	UnaryOperator	!		5686241	0					
ANR	5687072	CallExpression	"strcmp ( hashstr , ""-"" )"		5686241	1					
ANR	5687073	Callee	strcmp		5686241	0					
ANR	5687074	Identifier	strcmp		5686241	0					
ANR	5687075	ArgumentList	hashstr		5686241	1					
ANR	5687076	Argument	hashstr		5686241	0					
ANR	5687077	Identifier	hashstr		5686241	0					
ANR	5687078	Argument	"""-"""		5686241	1					
ANR	5687079	PrimaryExpression	"""-"""		5686241	0					
ANR	5687080	CompoundStatement		137:30:3968:3968	5686241	1					
ANR	5687081	ExpressionStatement	hashstr = malloc ( INSIZE )	556:3:14714:14739	5686241	0	True				
ANR	5687082	AssignmentExpression	hashstr = malloc ( INSIZE )		5686241	0		=			
ANR	5687083	Identifier	hashstr		5686241	0					
ANR	5687084	CallExpression	malloc ( INSIZE )		5686241	1					
ANR	5687085	Callee	malloc		5686241	0					
ANR	5687086	Identifier	malloc		5686241	0					
ANR	5687087	ArgumentList	INSIZE		5686241	1					
ANR	5687088	Argument	INSIZE		5686241	0					
ANR	5687089	Identifier	INSIZE		5686241	0					
ANR	5687090	IfStatement	if ( ! hashstr )		5686241	1					
ANR	5687091	Condition	! hashstr	557:7:14748:14755	5686241	0	True				
ANR	5687092	UnaryOperationExpression	! hashstr		5686241	0					
ANR	5687093	UnaryOperator	!		5686241	0					
ANR	5687094	Identifier	hashstr		5686241	1					
ANR	5687095	CompoundStatement		139:17:4017:4017	5686241	1					
ANR	5687096	ExpressionStatement	free ( iv )	558:4:14764:14773	5686241	0	True				
ANR	5687097	CallExpression	free ( iv )		5686241	0					
ANR	5687098	Callee	free		5686241	0					
ANR	5687099	Identifier	free		5686241	0					
ANR	5687100	ArgumentList	iv		5686241	1					
ANR	5687101	Argument	iv		5686241	0					
ANR	5687102	Identifier	iv		5686241	0					
ANR	5687103	ReturnStatement	return 1 ;	559:4:14779:14787	5686241	1	True				
ANR	5687104	PrimaryExpression	1		5686241	0					
ANR	5687105	ExpressionStatement	"bytes_read = fread ( ( void * ) hashstr , 1 , INSIZE - 1 , stdin )"	561:3:14797:14856	5686241	2	True				
ANR	5687106	AssignmentExpression	"bytes_read = fread ( ( void * ) hashstr , 1 , INSIZE - 1 , stdin )"		5686241	0		=			
ANR	5687107	Identifier	bytes_read		5686241	0					
ANR	5687108	CallExpression	"fread ( ( void * ) hashstr , 1 , INSIZE - 1 , stdin )"		5686241	1					
ANR	5687109	Callee	fread		5686241	0					
ANR	5687110	Identifier	fread		5686241	0					
ANR	5687111	ArgumentList	( void * ) hashstr		5686241	1					
ANR	5687112	Argument	( void * ) hashstr		5686241	0					
ANR	5687113	CastExpression	( void * ) hashstr		5686241	0					
ANR	5687114	CastTarget	void *		5686241	0					
ANR	5687115	Identifier	hashstr		5686241	1					
ANR	5687116	Argument	1		5686241	1					
ANR	5687117	PrimaryExpression	1		5686241	0					
ANR	5687118	Argument	INSIZE - 1		5686241	2					
ANR	5687119	AdditiveExpression	INSIZE - 1		5686241	0		-			
ANR	5687120	Identifier	INSIZE		5686241	0					
ANR	5687121	PrimaryExpression	1		5686241	1					
ANR	5687122	Argument	stdin		5686241	3					
ANR	5687123	Identifier	stdin		5686241	0					
ANR	5687124	IfStatement	if ( bytes_read < 1 )		5686241	3					
ANR	5687125	Condition	bytes_read < 1	562:7:14865:14878	5686241	0	True				
ANR	5687126	RelationalExpression	bytes_read < 1		5686241	0		<			
ANR	5687127	Identifier	bytes_read		5686241	0					
ANR	5687128	PrimaryExpression	1		5686241	1					
ANR	5687129	CompoundStatement		144:23:4140:4140	5686241	1					
ANR	5687130	ExpressionStatement	bytes_read = 0	563:4:14887:14901	5686241	0	True				
ANR	5687131	AssignmentExpression	bytes_read = 0		5686241	0		=			
ANR	5687132	Identifier	bytes_read		5686241	0					
ANR	5687133	PrimaryExpression	0		5686241	1					
ANR	5687134	ExpressionStatement	hashstr [ bytes_read ] = '\\0'	565:3:14911:14937	5686241	4	True				
ANR	5687135	AssignmentExpression	hashstr [ bytes_read ] = '\\0'		5686241	0		=			
ANR	5687136	ArrayIndexing	hashstr [ bytes_read ]		5686241	0					
ANR	5687137	Identifier	hashstr		5686241	0					
ANR	5687138	Identifier	bytes_read		5686241	1					
ANR	5687139	PrimaryExpression	'\\0'		5686241	1					
ANR	5687140	ExpressionStatement	hashstr_len = bytes_read	566:3:14942:14966	5686241	5	True				
ANR	5687141	AssignmentExpression	hashstr_len = bytes_read		5686241	0		=			
ANR	5687142	Identifier	hashstr_len		5686241	0					
ANR	5687143	Identifier	bytes_read		5686241	1					
ANR	5687144	IfStatement	if ( hashstr_hex )		5686241	5					
ANR	5687145	Condition	hashstr_hex	568:6:14978:14988	5686241	0	True				
ANR	5687146	Identifier	hashstr_hex		5686241	0					
ANR	5687147	CompoundStatement		151:3:4255:4301	5686241	1					
ANR	5687148	IdentifierDeclStatement	ut8 * out = malloc ( ( strlen ( hashstr ) + 1 ) * 2 ) ;	569:3:14996:15042	5686241	0	True				
ANR	5687149	IdentifierDecl	* out = malloc ( ( strlen ( hashstr ) + 1 ) * 2 )		5686241	0					
ANR	5687150	IdentifierDeclType	ut8 *		5686241	0					
ANR	5687151	Identifier	out		5686241	1					
ANR	5687152	AssignmentExpression	* out = malloc ( ( strlen ( hashstr ) + 1 ) * 2 )		5686241	2		=			
ANR	5687153	Identifier	out		5686241	0					
ANR	5687154	CallExpression	malloc ( ( strlen ( hashstr ) + 1 ) * 2 )		5686241	1					
ANR	5687155	Callee	malloc		5686241	0					
ANR	5687156	Identifier	malloc		5686241	0					
ANR	5687157	ArgumentList	( strlen ( hashstr ) + 1 ) * 2		5686241	1					
ANR	5687158	Argument	( strlen ( hashstr ) + 1 ) * 2		5686241	0					
ANR	5687159	MultiplicativeExpression	( strlen ( hashstr ) + 1 ) * 2		5686241	0		*			
ANR	5687160	AdditiveExpression	strlen ( hashstr ) + 1		5686241	0		+			
ANR	5687161	CallExpression	strlen ( hashstr )		5686241	0					
ANR	5687162	Callee	strlen		5686241	0					
ANR	5687163	Identifier	strlen		5686241	0					
ANR	5687164	ArgumentList	hashstr		5686241	1					
ANR	5687165	Argument	hashstr		5686241	0					
ANR	5687166	Identifier	hashstr		5686241	0					
ANR	5687167	PrimaryExpression	1		5686241	1					
ANR	5687168	PrimaryExpression	2		5686241	1					
ANR	5687169	ExpressionStatement	"hashstr_len = r_hex_str2bin ( hashstr , out )"	570:3:15047:15089	5686241	1	True				
ANR	5687170	AssignmentExpression	"hashstr_len = r_hex_str2bin ( hashstr , out )"		5686241	0		=			
ANR	5687171	Identifier	hashstr_len		5686241	0					
ANR	5687172	CallExpression	"r_hex_str2bin ( hashstr , out )"		5686241	1					
ANR	5687173	Callee	r_hex_str2bin		5686241	0					
ANR	5687174	Identifier	r_hex_str2bin		5686241	0					
ANR	5687175	ArgumentList	hashstr		5686241	1					
ANR	5687176	Argument	hashstr		5686241	0					
ANR	5687177	Identifier	hashstr		5686241	0					
ANR	5687178	Argument	out		5686241	1					
ANR	5687179	Identifier	out		5686241	0					
ANR	5687180	IfStatement	if ( hashstr_len < 1 )		5686241	2					
ANR	5687181	Condition	hashstr_len < 1	571:7:15098:15112	5686241	0	True				
ANR	5687182	RelationalExpression	hashstr_len < 1		5686241	0		<			
ANR	5687183	Identifier	hashstr_len		5686241	0					
ANR	5687184	PrimaryExpression	1		5686241	1					
ANR	5687185	CompoundStatement		153:24:4374:4374	5686241	1					
ANR	5687186	ExpressionStatement	"eprintf ( ""Invalid hex string\\n"" )"	572:4:15121:15153	5686241	0	True				
ANR	5687187	CallExpression	"eprintf ( ""Invalid hex string\\n"" )"		5686241	0					
ANR	5687188	Callee	eprintf		5686241	0					
ANR	5687189	Identifier	eprintf		5686241	0					
ANR	5687190	ArgumentList	"""Invalid hex string\\n"""		5686241	1					
ANR	5687191	Argument	"""Invalid hex string\\n"""		5686241	0					
ANR	5687192	PrimaryExpression	"""Invalid hex string\\n"""		5686241	0					
ANR	5687193	ExpressionStatement	free ( out )	573:4:15159:15169	5686241	1	True				
ANR	5687194	CallExpression	free ( out )		5686241	0					
ANR	5687195	Callee	free		5686241	0					
ANR	5687196	Identifier	free		5686241	0					
ANR	5687197	ArgumentList	out		5686241	1					
ANR	5687198	Argument	out		5686241	0					
ANR	5687199	Identifier	out		5686241	0					
ANR	5687200	ExpressionStatement	free ( iv )	574:4:15175:15184	5686241	2	True				
ANR	5687201	CallExpression	free ( iv )		5686241	0					
ANR	5687202	Callee	free		5686241	0					
ANR	5687203	Identifier	free		5686241	0					
ANR	5687204	ArgumentList	iv		5686241	1					
ANR	5687205	Argument	iv		5686241	0					
ANR	5687206	Identifier	iv		5686241	0					
ANR	5687207	ReturnStatement	return 1 ;	575:4:15190:15198	5686241	3	True				
ANR	5687208	PrimaryExpression	1		5686241	0					
ANR	5687209	ExpressionStatement	hashstr = ( char * ) out	577:3:15208:15230	5686241	3	True				
ANR	5687210	AssignmentExpression	hashstr = ( char * ) out		5686241	0		=			
ANR	5687211	Identifier	hashstr		5686241	0					
ANR	5687212	CastExpression	( char * ) out		5686241	1					
ANR	5687213	CastTarget	char *		5686241	0					
ANR	5687214	Identifier	out		5686241	1					
ANR	5687215	ElseStatement	else		5686241	0					
ANR	5687216	CompoundStatement		161:9:4551:4551	5686241	0					
ANR	5687217	IfStatement	if ( ! bytes_read )		5686241	0					
ANR	5687218	Condition	! bytes_read	580:7:15301:15311	5686241	0	True				
ANR	5687219	UnaryOperationExpression	! bytes_read		5686241	0					
ANR	5687220	UnaryOperator	!		5686241	0					
ANR	5687221	Identifier	bytes_read		5686241	1					
ANR	5687222	CompoundStatement		162:20:4573:4573	5686241	1					
ANR	5687223	ExpressionStatement	hashstr_len = strlen ( hashstr )	581:4:15320:15350	5686241	0	True				
ANR	5687224	AssignmentExpression	hashstr_len = strlen ( hashstr )		5686241	0		=			
ANR	5687225	Identifier	hashstr_len		5686241	0					
ANR	5687226	CallExpression	strlen ( hashstr )		5686241	1					
ANR	5687227	Callee	strlen		5686241	0					
ANR	5687228	Identifier	strlen		5686241	0					
ANR	5687229	ArgumentList	hashstr		5686241	1					
ANR	5687230	Argument	hashstr		5686241	0					
ANR	5687231	Identifier	hashstr		5686241	0					
ANR	5687232	IfStatement	if ( from )		5686241	6					
ANR	5687233	Condition	from	584:6:15367:15370	5686241	0	True				
ANR	5687234	Identifier	from		5686241	0					
ANR	5687235	CompoundStatement		166:12:4632:4632	5686241	1					
ANR	5687236	IfStatement	if ( from >= hashstr_len )		5686241	0					
ANR	5687237	Condition	from >= hashstr_len	585:7:15382:15400	5686241	0	True				
ANR	5687238	RelationalExpression	from >= hashstr_len		5686241	0		>=			
ANR	5687239	Identifier	from		5686241	0					
ANR	5687240	Identifier	hashstr_len		5686241	1					
ANR	5687241	CompoundStatement		167:28:4662:4662	5686241	1					
ANR	5687242	ExpressionStatement	"eprintf ( ""Invalid -f.\\n"" )"	586:4:15409:15434	5686241	0	True				
ANR	5687243	CallExpression	"eprintf ( ""Invalid -f.\\n"" )"		5686241	0					
ANR	5687244	Callee	eprintf		5686241	0					
ANR	5687245	Identifier	eprintf		5686241	0					
ANR	5687246	ArgumentList	"""Invalid -f.\\n"""		5686241	1					
ANR	5687247	Argument	"""Invalid -f.\\n"""		5686241	0					
ANR	5687248	PrimaryExpression	"""Invalid -f.\\n"""		5686241	0					
ANR	5687249	ExpressionStatement	free ( iv )	587:4:15440:15449	5686241	1	True				
ANR	5687250	CallExpression	free ( iv )		5686241	0					
ANR	5687251	Callee	free		5686241	0					
ANR	5687252	Identifier	free		5686241	0					
ANR	5687253	ArgumentList	iv		5686241	1					
ANR	5687254	Argument	iv		5686241	0					
ANR	5687255	Identifier	iv		5686241	0					
ANR	5687256	ReturnStatement	return 1 ;	588:4:15455:15463	5686241	2	True				
ANR	5687257	PrimaryExpression	1		5686241	0					
ANR	5687258	IfStatement	if ( to )		5686241	7					
ANR	5687259	Condition	to	591:6:15480:15481	5686241	0	True				
ANR	5687260	Identifier	to		5686241	0					
ANR	5687261	CompoundStatement		173:10:4743:4743	5686241	1					
ANR	5687262	IfStatement	if ( to > hashstr_len )		5686241	0					
ANR	5687263	Condition	to > hashstr_len	592:7:15493:15508	5686241	0	True				
ANR	5687264	RelationalExpression	to > hashstr_len		5686241	0		>			
ANR	5687265	Identifier	to		5686241	0					
ANR	5687266	Identifier	hashstr_len		5686241	1					
ANR	5687267	CompoundStatement		174:25:4770:4770	5686241	1					
ANR	5687268	ExpressionStatement	"eprintf ( ""Invalid -t.\\n"" )"	593:4:15517:15542	5686241	0	True				
ANR	5687269	CallExpression	"eprintf ( ""Invalid -t.\\n"" )"		5686241	0					
ANR	5687270	Callee	eprintf		5686241	0					
ANR	5687271	Identifier	eprintf		5686241	0					
ANR	5687272	ArgumentList	"""Invalid -t.\\n"""		5686241	1					
ANR	5687273	Argument	"""Invalid -t.\\n"""		5686241	0					
ANR	5687274	PrimaryExpression	"""Invalid -t.\\n"""		5686241	0					
ANR	5687275	ReturnStatement	return 1 ;	594:4:15548:15556	5686241	1	True				
ANR	5687276	PrimaryExpression	1		5686241	0					
ANR	5687277	ElseStatement	else		5686241	0					
ANR	5687278	CompoundStatement		178:9:4831:4831	5686241	0					
ANR	5687279	ExpressionStatement	to = hashstr_len	597:3:15577:15593	5686241	0	True				
ANR	5687280	AssignmentExpression	to = hashstr_len		5686241	0		=			
ANR	5687281	Identifier	to		5686241	0					
ANR	5687282	Identifier	hashstr_len		5686241	1					
ANR	5687283	ExpressionStatement	hashstr = hashstr + from	599:2:15601:15625	5686241	8	True				
ANR	5687284	AssignmentExpression	hashstr = hashstr + from		5686241	0		=			
ANR	5687285	Identifier	hashstr		5686241	0					
ANR	5687286	AdditiveExpression	hashstr + from		5686241	1		+			
ANR	5687287	Identifier	hashstr		5686241	0					
ANR	5687288	Identifier	from		5686241	1					
ANR	5687289	ExpressionStatement	hashstr_len = to - from	600:2:15629:15652	5686241	9	True				
ANR	5687290	AssignmentExpression	hashstr_len = to - from		5686241	0		=			
ANR	5687291	Identifier	hashstr_len		5686241	0					
ANR	5687292	AdditiveExpression	to - from		5686241	1		-			
ANR	5687293	Identifier	to		5686241	0					
ANR	5687294	Identifier	from		5686241	1					
ANR	5687295	ExpressionStatement	hashstr [ hashstr_len ] = '\\0'	601:2:15656:15683	5686241	10	True				
ANR	5687296	AssignmentExpression	hashstr [ hashstr_len ] = '\\0'		5686241	0		=			
ANR	5687297	ArrayIndexing	hashstr [ hashstr_len ]		5686241	0					
ANR	5687298	Identifier	hashstr		5686241	0					
ANR	5687299	Identifier	hashstr_len		5686241	1					
ANR	5687300	PrimaryExpression	'\\0'		5686241	1					
ANR	5687301	IfStatement	if ( ! bytes_read && ! hashstr_hex )		5686241	11					
ANR	5687302	Condition	! bytes_read && ! hashstr_hex	602:6:15691:15717	5686241	0	True				
ANR	5687303	AndExpression	! bytes_read && ! hashstr_hex		5686241	0		&&			
ANR	5687304	UnaryOperationExpression	! bytes_read		5686241	0					
ANR	5687305	UnaryOperator	!		5686241	0					
ANR	5687306	Identifier	bytes_read		5686241	1					
ANR	5687307	UnaryOperationExpression	! hashstr_hex		5686241	1					
ANR	5687308	UnaryOperator	!		5686241	0					
ANR	5687309	Identifier	hashstr_hex		5686241	1					
ANR	5687310	CompoundStatement		184:35:4979:4979	5686241	1					
ANR	5687311	ExpressionStatement	hashstr_len = r_str_unescape ( hashstr )	603:3:15725:15763	5686241	0	True				
ANR	5687312	AssignmentExpression	hashstr_len = r_str_unescape ( hashstr )		5686241	0		=			
ANR	5687313	Identifier	hashstr_len		5686241	0					
ANR	5687314	CallExpression	r_str_unescape ( hashstr )		5686241	1					
ANR	5687315	Callee	r_str_unescape		5686241	0					
ANR	5687316	Identifier	r_str_unescape		5686241	0					
ANR	5687317	ArgumentList	hashstr		5686241	1					
ANR	5687318	Argument	hashstr		5686241	0					
ANR	5687319	Identifier	hashstr		5686241	0					
ANR	5687320	IfStatement	if ( encrypt )		5686241	12					
ANR	5687321	Condition	encrypt	605:6:15775:15781	5686241	0	True				
ANR	5687322	Identifier	encrypt		5686241	0					
ANR	5687323	CompoundStatement		187:15:5043:5043	5686241	1					
ANR	5687324	ReturnStatement	"return encrypt_or_decrypt ( encrypt , 0 , hashstr , hashstr_len , iv , ivlen , 0 ) ;"	606:3:15789:15863	5686241	0	True				
ANR	5687325	CallExpression	"encrypt_or_decrypt ( encrypt , 0 , hashstr , hashstr_len , iv , ivlen , 0 )"		5686241	0					
ANR	5687326	Callee	encrypt_or_decrypt		5686241	0					
ANR	5687327	Identifier	encrypt_or_decrypt		5686241	0					
ANR	5687328	ArgumentList	encrypt		5686241	1					
ANR	5687329	Argument	encrypt		5686241	0					
ANR	5687330	Identifier	encrypt		5686241	0					
ANR	5687331	Argument	0		5686241	1					
ANR	5687332	PrimaryExpression	0		5686241	0					
ANR	5687333	Argument	hashstr		5686241	2					
ANR	5687334	Identifier	hashstr		5686241	0					
ANR	5687335	Argument	hashstr_len		5686241	3					
ANR	5687336	Identifier	hashstr_len		5686241	0					
ANR	5687337	Argument	iv		5686241	4					
ANR	5687338	Identifier	iv		5686241	0					
ANR	5687339	Argument	ivlen		5686241	5					
ANR	5687340	Identifier	ivlen		5686241	0					
ANR	5687341	Argument	0		5686241	6					
ANR	5687342	PrimaryExpression	0		5686241	0					
ANR	5687343	ElseStatement	else		5686241	0					
ANR	5687344	IfStatement	if ( decrypt )		5686241	0					
ANR	5687345	Condition	decrypt	607:13:15878:15884	5686241	0	True				
ANR	5687346	Identifier	decrypt		5686241	0					
ANR	5687347	CompoundStatement		189:22:5146:5146	5686241	1					
ANR	5687348	ReturnStatement	"return encrypt_or_decrypt ( decrypt , 1 , hashstr , hashstr_len , iv , ivlen , 0 ) ;"	608:3:15892:15966	5686241	0	True				
ANR	5687349	CallExpression	"encrypt_or_decrypt ( decrypt , 1 , hashstr , hashstr_len , iv , ivlen , 0 )"		5686241	0					
ANR	5687350	Callee	encrypt_or_decrypt		5686241	0					
ANR	5687351	Identifier	encrypt_or_decrypt		5686241	0					
ANR	5687352	ArgumentList	decrypt		5686241	1					
ANR	5687353	Argument	decrypt		5686241	0					
ANR	5687354	Identifier	decrypt		5686241	0					
ANR	5687355	Argument	1		5686241	1					
ANR	5687356	PrimaryExpression	1		5686241	0					
ANR	5687357	Argument	hashstr		5686241	2					
ANR	5687358	Identifier	hashstr		5686241	0					
ANR	5687359	Argument	hashstr_len		5686241	3					
ANR	5687360	Identifier	hashstr_len		5686241	0					
ANR	5687361	Argument	iv		5686241	4					
ANR	5687362	Identifier	iv		5686241	0					
ANR	5687363	Argument	ivlen		5686241	5					
ANR	5687364	Identifier	ivlen		5686241	0					
ANR	5687365	Argument	0		5686241	6					
ANR	5687366	PrimaryExpression	0		5686241	0					
ANR	5687367	ElseStatement	else		5686241	0					
ANR	5687368	CompoundStatement		193:3:5274:5297	5686241	0					
ANR	5687369	IdentifierDeclStatement	char * str = ( char * ) hashstr ;	610:3:15982:16010	5686241	0	True				
ANR	5687370	IdentifierDecl	* str = ( char * ) hashstr		5686241	0					
ANR	5687371	IdentifierDeclType	char *		5686241	0					
ANR	5687372	Identifier	str		5686241	1					
ANR	5687373	AssignmentExpression	* str = ( char * ) hashstr		5686241	2		=			
ANR	5687374	Identifier	str		5686241	0					
ANR	5687375	CastExpression	( char * ) hashstr		5686241	1					
ANR	5687376	CastTarget	char *		5686241	0					
ANR	5687377	Identifier	hashstr		5686241	1					
ANR	5687378	IdentifierDeclStatement	int strsz = hashstr_len ;	611:3:16015:16038	5686241	1	True				
ANR	5687379	IdentifierDecl	strsz = hashstr_len		5686241	0					
ANR	5687380	IdentifierDeclType	int		5686241	0					
ANR	5687381	Identifier	strsz		5686241	1					
ANR	5687382	AssignmentExpression	strsz = hashstr_len		5686241	2		=			
ANR	5687383	Identifier	hashstr_len		5686241	0					
ANR	5687384	Identifier	hashstr_len		5686241	1					
ANR	5687385	IfStatement	if ( _s )		5686241	2					
ANR	5687386	Condition	_s	612:7:16047:16048	5686241	0	True				
ANR	5687387	Identifier	_s		5686241	0					
ANR	5687388	CompoundStatement		194:11:5310:5310	5686241	1					
ANR	5687389	ExpressionStatement	str = malloc ( strsz + s . len )	614:4:16084:16112	5686241	0	True				
ANR	5687390	AssignmentExpression	str = malloc ( strsz + s . len )		5686241	0		=			
ANR	5687391	Identifier	str		5686241	0					
ANR	5687392	CallExpression	malloc ( strsz + s . len )		5686241	1					
ANR	5687393	Callee	malloc		5686241	0					
ANR	5687394	Identifier	malloc		5686241	0					
ANR	5687395	ArgumentList	strsz + s . len		5686241	1					
ANR	5687396	Argument	strsz + s . len		5686241	0					
ANR	5687397	AdditiveExpression	strsz + s . len		5686241	0		+			
ANR	5687398	Identifier	strsz		5686241	0					
ANR	5687399	MemberAccess	s . len		5686241	1					
ANR	5687400	Identifier	s		5686241	0					
ANR	5687401	Identifier	len		5686241	1					
ANR	5687402	IfStatement	if ( s . prefix )		5686241	1					
ANR	5687403	Condition	s . prefix	615:8:16122:16129	5686241	0	True				
ANR	5687404	MemberAccess	s . prefix		5686241	0					
ANR	5687405	Identifier	s		5686241	0					
ANR	5687406	Identifier	prefix		5686241	1					
ANR	5687407	CompoundStatement		197:18:5391:5391	5686241	1					
ANR	5687408	ExpressionStatement	"memcpy ( str , s . buf , s . len )"	616:5:16139:16165	5686241	0	True				
ANR	5687409	CallExpression	"memcpy ( str , s . buf , s . len )"		5686241	0					
ANR	5687410	Callee	memcpy		5686241	0					
ANR	5687411	Identifier	memcpy		5686241	0					
ANR	5687412	ArgumentList	str		5686241	1					
ANR	5687413	Argument	str		5686241	0					
ANR	5687414	Identifier	str		5686241	0					
ANR	5687415	Argument	s . buf		5686241	1					
ANR	5687416	MemberAccess	s . buf		5686241	0					
ANR	5687417	Identifier	s		5686241	0					
ANR	5687418	Identifier	buf		5686241	1					
ANR	5687419	Argument	s . len		5686241	2					
ANR	5687420	MemberAccess	s . len		5686241	0					
ANR	5687421	Identifier	s		5686241	0					
ANR	5687422	Identifier	len		5686241	1					
ANR	5687423	ExpressionStatement	"memcpy ( str + s . len , hashstr , hashstr_len )"	617:5:16172:16214	5686241	1	True				
ANR	5687424	CallExpression	"memcpy ( str + s . len , hashstr , hashstr_len )"		5686241	0					
ANR	5687425	Callee	memcpy		5686241	0					
ANR	5687426	Identifier	memcpy		5686241	0					
ANR	5687427	ArgumentList	str + s . len		5686241	1					
ANR	5687428	Argument	str + s . len		5686241	0					
ANR	5687429	AdditiveExpression	str + s . len		5686241	0		+			
ANR	5687430	Identifier	str		5686241	0					
ANR	5687431	MemberAccess	s . len		5686241	1					
ANR	5687432	Identifier	s		5686241	0					
ANR	5687433	Identifier	len		5686241	1					
ANR	5687434	Argument	hashstr		5686241	1					
ANR	5687435	Identifier	hashstr		5686241	0					
ANR	5687436	Argument	hashstr_len		5686241	2					
ANR	5687437	Identifier	hashstr_len		5686241	0					
ANR	5687438	ElseStatement	else		5686241	0					
ANR	5687439	CompoundStatement		200:11:5486:5486	5686241	0					
ANR	5687440	ExpressionStatement	"memcpy ( str , hashstr , hashstr_len )"	619:5:16234:16268	5686241	0	True				
ANR	5687441	CallExpression	"memcpy ( str , hashstr , hashstr_len )"		5686241	0					
ANR	5687442	Callee	memcpy		5686241	0					
ANR	5687443	Identifier	memcpy		5686241	0					
ANR	5687444	ArgumentList	str		5686241	1					
ANR	5687445	Argument	str		5686241	0					
ANR	5687446	Identifier	str		5686241	0					
ANR	5687447	Argument	hashstr		5686241	1					
ANR	5687448	Identifier	hashstr		5686241	0					
ANR	5687449	Argument	hashstr_len		5686241	2					
ANR	5687450	Identifier	hashstr_len		5686241	0					
ANR	5687451	ExpressionStatement	"memcpy ( str + strsz , s . buf , s . len )"	620:5:16275:16309	5686241	1	True				
ANR	5687452	CallExpression	"memcpy ( str + strsz , s . buf , s . len )"		5686241	0					
ANR	5687453	Callee	memcpy		5686241	0					
ANR	5687454	Identifier	memcpy		5686241	0					
ANR	5687455	ArgumentList	str + strsz		5686241	1					
ANR	5687456	Argument	str + strsz		5686241	0					
ANR	5687457	AdditiveExpression	str + strsz		5686241	0		+			
ANR	5687458	Identifier	str		5686241	0					
ANR	5687459	Identifier	strsz		5686241	1					
ANR	5687460	Argument	s . buf		5686241	1					
ANR	5687461	MemberAccess	s . buf		5686241	0					
ANR	5687462	Identifier	s		5686241	0					
ANR	5687463	Identifier	buf		5686241	1					
ANR	5687464	Argument	s . len		5686241	2					
ANR	5687465	MemberAccess	s . len		5686241	0					
ANR	5687466	Identifier	s		5686241	0					
ANR	5687467	Identifier	len		5686241	1					
ANR	5687468	ExpressionStatement	strsz += s . len	622:4:16321:16335	5686241	2	True				
ANR	5687469	AssignmentExpression	strsz += s . len		5686241	0		+=			
ANR	5687470	Identifier	strsz		5686241	0					
ANR	5687471	MemberAccess	s . len		5686241	1					
ANR	5687472	Identifier	s		5686241	0					
ANR	5687473	Identifier	len		5686241	1					
ANR	5687474	ExpressionStatement	str [ strsz ] = 0	623:4:16341:16355	5686241	3	True				
ANR	5687475	AssignmentExpression	str [ strsz ] = 0		5686241	0		=			
ANR	5687476	ArrayIndexing	str [ strsz ]		5686241	0					
ANR	5687477	Identifier	str		5686241	0					
ANR	5687478	Identifier	strsz		5686241	1					
ANR	5687479	PrimaryExpression	0		5686241	1					
ANR	5687480	ExpressionStatement	algobit = r_hash_name_to_bits ( algo )	625:3:16365:16401	5686241	3	True				
ANR	5687481	AssignmentExpression	algobit = r_hash_name_to_bits ( algo )		5686241	0		=			
ANR	5687482	Identifier	algobit		5686241	0					
ANR	5687483	CallExpression	r_hash_name_to_bits ( algo )		5686241	1					
ANR	5687484	Callee	r_hash_name_to_bits		5686241	0					
ANR	5687485	Identifier	r_hash_name_to_bits		5686241	0					
ANR	5687486	ArgumentList	algo		5686241	1					
ANR	5687487	Argument	algo		5686241	0					
ANR	5687488	Identifier	algo		5686241	0					
ANR	5687489	IfStatement	if ( algobit == 0 )		5686241	4					
ANR	5687490	Condition	algobit == 0	626:7:16410:16421	5686241	0	True				
ANR	5687491	EqualityExpression	algobit == 0		5686241	0		==			
ANR	5687492	Identifier	algobit		5686241	0					
ANR	5687493	PrimaryExpression	0		5686241	1					
ANR	5687494	CompoundStatement		208:21:5683:5683	5686241	1					
ANR	5687495	ExpressionStatement	"eprintf ( ""Invalid algorithm. See -E, -D maybe?\\n"" )"	627:4:16430:16480	5686241	0	True				
ANR	5687496	CallExpression	"eprintf ( ""Invalid algorithm. See -E, -D maybe?\\n"" )"		5686241	0					
ANR	5687497	Callee	eprintf		5686241	0					
ANR	5687498	Identifier	eprintf		5686241	0					
ANR	5687499	ArgumentList	"""Invalid algorithm. See -E, -D maybe?\\n"""		5686241	1					
ANR	5687500	Argument	"""Invalid algorithm. See -E, -D maybe?\\n"""		5686241	0					
ANR	5687501	PrimaryExpression	"""Invalid algorithm. See -E, -D maybe?\\n"""		5686241	0					
ANR	5687502	IfStatement	if ( str != hashstr )		5686241	1					
ANR	5687503	Condition	str != hashstr	628:8:16490:16503	5686241	0	True				
ANR	5687504	EqualityExpression	str != hashstr		5686241	0		!=			
ANR	5687505	Identifier	str		5686241	0					
ANR	5687506	Identifier	hashstr		5686241	1					
ANR	5687507	CompoundStatement		210:24:5765:5765	5686241	1					
ANR	5687508	ExpressionStatement	free ( str )	629:5:16513:16523	5686241	0	True				
ANR	5687509	CallExpression	free ( str )		5686241	0					
ANR	5687510	Callee	free		5686241	0					
ANR	5687511	Identifier	free		5686241	0					
ANR	5687512	ArgumentList	str		5686241	1					
ANR	5687513	Argument	str		5686241	0					
ANR	5687514	Identifier	str		5686241	0					
ANR	5687515	ExpressionStatement	free ( iv )	631:4:16535:16544	5686241	2	True				
ANR	5687516	CallExpression	free ( iv )		5686241	0					
ANR	5687517	Callee	free		5686241	0					
ANR	5687518	Identifier	free		5686241	0					
ANR	5687519	ArgumentList	iv		5686241	1					
ANR	5687520	Argument	iv		5686241	0					
ANR	5687521	Identifier	iv		5686241	0					
ANR	5687522	ReturnStatement	return 1 ;	632:4:16550:16558	5686241	3	True				
ANR	5687523	PrimaryExpression	1		5686241	0					
ANR	5687524	ForStatement	for ( i = 1 ; i < R_HASH_ALL ; i <<= 1 )		5686241	5					
ANR	5687525	ForInit	i = 1 ;	634:8:16573:16578	5686241	0	True				
ANR	5687526	AssignmentExpression	i = 1		5686241	0		=			
ANR	5687527	Identifier	i		5686241	0					
ANR	5687528	PrimaryExpression	1		5686241	1					
ANR	5687529	Condition	i < R_HASH_ALL	634:15:16580:16593	5686241	1	True				
ANR	5687530	RelationalExpression	i < R_HASH_ALL		5686241	0		<			
ANR	5687531	Identifier	i		5686241	0					
ANR	5687532	Identifier	R_HASH_ALL		5686241	1					
ANR	5687533	AssignmentExpression	i <<= 1	634:31:16596:16602	5686241	2	True	<<=			
ANR	5687534	Identifier	i		5686241	0					
ANR	5687535	PrimaryExpression	1		5686241	1					
ANR	5687536	CompoundStatement		216:40:5864:5864	5686241	3					
ANR	5687537	IfStatement	if ( algobit & i )		5686241	0					
ANR	5687538	Condition	algobit & i	635:8:16615:16625	5686241	0	True				
ANR	5687539	BitAndExpression	algobit & i		5686241	0		&			
ANR	5687540	Identifier	algobit		5686241	0					
ANR	5687541	Identifier	i		5686241	1					
ANR	5687542	CompoundStatement		218:5:5894:5920	5686241	1					
ANR	5687543	IdentifierDeclStatement	ut64 hashbit = i & algobit ;	636:5:16635:16661	5686241	0	True				
ANR	5687544	IdentifierDecl	hashbit = i & algobit		5686241	0					
ANR	5687545	IdentifierDeclType	ut64		5686241	0					
ANR	5687546	Identifier	hashbit		5686241	1					
ANR	5687547	AssignmentExpression	hashbit = i & algobit		5686241	2		=			
ANR	5687548	Identifier	hashbit		5686241	0					
ANR	5687549	BitAndExpression	i & algobit		5686241	1		&			
ANR	5687550	Identifier	i		5686241	0					
ANR	5687551	Identifier	algobit		5686241	1					
ANR	5687552	ExpressionStatement	"ctx = r_hash_new ( true , hashbit )"	637:5:16668:16700	5686241	1	True				
ANR	5687553	AssignmentExpression	"ctx = r_hash_new ( true , hashbit )"		5686241	0		=			
ANR	5687554	Identifier	ctx		5686241	0					
ANR	5687555	CallExpression	"r_hash_new ( true , hashbit )"		5686241	1					
ANR	5687556	Callee	r_hash_new		5686241	0					
ANR	5687557	Identifier	r_hash_new		5686241	0					
ANR	5687558	ArgumentList	true		5686241	1					
ANR	5687559	Argument	true		5686241	0					
ANR	5687560	Identifier	true		5686241	0					
ANR	5687561	Argument	hashbit		5686241	1					
ANR	5687562	Identifier	hashbit		5686241	0					
ANR	5687563	ExpressionStatement	from = 0	638:5:16707:16715	5686241	2	True				
ANR	5687564	AssignmentExpression	from = 0		5686241	0		=			
ANR	5687565	Identifier	from		5686241	0					
ANR	5687566	PrimaryExpression	0		5686241	1					
ANR	5687567	ExpressionStatement	to = strsz	639:5:16722:16732	5686241	3	True				
ANR	5687568	AssignmentExpression	to = strsz		5686241	0		=			
ANR	5687569	Identifier	to		5686241	0					
ANR	5687570	Identifier	strsz		5686241	1					
ANR	5687571	ExpressionStatement	"do_hash_internal ( ctx , hashbit , ( const ut8 * ) str , strsz , rad , 1 , ule )"	640:5:16739:16809	5686241	4	True				
ANR	5687572	CallExpression	"do_hash_internal ( ctx , hashbit , ( const ut8 * ) str , strsz , rad , 1 , ule )"		5686241	0					
ANR	5687573	Callee	do_hash_internal		5686241	0					
ANR	5687574	Identifier	do_hash_internal		5686241	0					
ANR	5687575	ArgumentList	ctx		5686241	1					
ANR	5687576	Argument	ctx		5686241	0					
ANR	5687577	Identifier	ctx		5686241	0					
ANR	5687578	Argument	hashbit		5686241	1					
ANR	5687579	Identifier	hashbit		5686241	0					
ANR	5687580	Argument	( const ut8 * ) str		5686241	2					
ANR	5687581	CastExpression	( const ut8 * ) str		5686241	0					
ANR	5687582	CastTarget	const ut8 *		5686241	0					
ANR	5687583	Identifier	str		5686241	1					
ANR	5687584	Argument	strsz		5686241	3					
ANR	5687585	Identifier	strsz		5686241	0					
ANR	5687586	Argument	rad		5686241	4					
ANR	5687587	Identifier	rad		5686241	0					
ANR	5687588	Argument	1		5686241	5					
ANR	5687589	PrimaryExpression	1		5686241	0					
ANR	5687590	Argument	ule		5686241	6					
ANR	5687591	Identifier	ule		5686241	0					
ANR	5687592	ExpressionStatement	"compare_hashes ( ctx , compareBin , r_hash_size ( algobit ) , & ret )"	641:5:16816:16877	5686241	5	True				
ANR	5687593	CallExpression	"compare_hashes ( ctx , compareBin , r_hash_size ( algobit ) , & ret )"		5686241	0					
ANR	5687594	Callee	compare_hashes		5686241	0					
ANR	5687595	Identifier	compare_hashes		5686241	0					
ANR	5687596	ArgumentList	ctx		5686241	1					
ANR	5687597	Argument	ctx		5686241	0					
ANR	5687598	Identifier	ctx		5686241	0					
ANR	5687599	Argument	compareBin		5686241	1					
ANR	5687600	Identifier	compareBin		5686241	0					
ANR	5687601	Argument	r_hash_size ( algobit )		5686241	2					
ANR	5687602	CallExpression	r_hash_size ( algobit )		5686241	0					
ANR	5687603	Callee	r_hash_size		5686241	0					
ANR	5687604	Identifier	r_hash_size		5686241	0					
ANR	5687605	ArgumentList	algobit		5686241	1					
ANR	5687606	Argument	algobit		5686241	0					
ANR	5687607	Identifier	algobit		5686241	0					
ANR	5687608	Argument	& ret		5686241	3					
ANR	5687609	UnaryOperationExpression	& ret		5686241	0					
ANR	5687610	UnaryOperator	&		5686241	0					
ANR	5687611	Identifier	ret		5686241	1					
ANR	5687612	ExpressionStatement	r_hash_free ( ctx )	642:5:16884:16901	5686241	6	True				
ANR	5687613	CallExpression	r_hash_free ( ctx )		5686241	0					
ANR	5687614	Callee	r_hash_free		5686241	0					
ANR	5687615	Identifier	r_hash_free		5686241	0					
ANR	5687616	ArgumentList	ctx		5686241	1					
ANR	5687617	Argument	ctx		5686241	0					
ANR	5687618	Identifier	ctx		5686241	0					
ANR	5687619	IfStatement	if ( _s )		5686241	6					
ANR	5687620	Condition	_s	645:7:16921:16922	5686241	0	True				
ANR	5687621	Identifier	_s		5686241	0					
ANR	5687622	CompoundStatement		227:11:6184:6184	5686241	1					
ANR	5687623	IfStatement	if ( str != hashstr )		5686241	0					
ANR	5687624	Condition	str != hashstr	646:8:16935:16948	5686241	0	True				
ANR	5687625	EqualityExpression	str != hashstr		5686241	0		!=			
ANR	5687626	Identifier	str		5686241	0					
ANR	5687627	Identifier	hashstr		5686241	1					
ANR	5687628	CompoundStatement		228:24:6210:6210	5686241	1					
ANR	5687629	ExpressionStatement	free ( str )	647:5:16958:16968	5686241	0	True				
ANR	5687630	CallExpression	free ( str )		5686241	0					
ANR	5687631	Callee	free		5686241	0					
ANR	5687632	Identifier	free		5686241	0					
ANR	5687633	ArgumentList	str		5686241	1					
ANR	5687634	Argument	str		5686241	0					
ANR	5687635	Identifier	str		5686241	0					
ANR	5687636	ExpressionStatement	free ( s . buf )	649:4:16980:16992	5686241	1	True				
ANR	5687637	CallExpression	free ( s . buf )		5686241	0					
ANR	5687638	Callee	free		5686241	0					
ANR	5687639	Identifier	free		5686241	0					
ANR	5687640	ArgumentList	s . buf		5686241	1					
ANR	5687641	Argument	s . buf		5686241	0					
ANR	5687642	MemberAccess	s . buf		5686241	0					
ANR	5687643	Identifier	s		5686241	0					
ANR	5687644	Identifier	buf		5686241	1					
ANR	5687645	ReturnStatement	return ret ;	651:3:17002:17012	5686241	7	True				
ANR	5687646	Identifier	ret		5686241	0					
ANR	5687647	IfStatement	if ( r_optind >= argc )		5686241	28					
ANR	5687648	Condition	r_optind >= argc	654:5:17026:17041	5686241	0	True				
ANR	5687649	RelationalExpression	r_optind >= argc		5686241	0		>=			
ANR	5687650	Identifier	r_optind		5686241	0					
ANR	5687651	Identifier	argc		5686241	1					
ANR	5687652	CompoundStatement		236:23:6303:6303	5686241	1					
ANR	5687653	ExpressionStatement	free ( iv )	655:2:17048:17057	5686241	0	True				
ANR	5687654	CallExpression	free ( iv )		5686241	0					
ANR	5687655	Callee	free		5686241	0					
ANR	5687656	Identifier	free		5686241	0					
ANR	5687657	ArgumentList	iv		5686241	1					
ANR	5687658	Argument	iv		5686241	0					
ANR	5687659	Identifier	iv		5686241	0					
ANR	5687660	ReturnStatement	return do_help ( 1 ) ;	656:2:17061:17079	5686241	1	True				
ANR	5687661	CallExpression	do_help ( 1 )		5686241	0					
ANR	5687662	Callee	do_help		5686241	0					
ANR	5687663	Identifier	do_help		5686241	0					
ANR	5687664	ArgumentList	1		5686241	1					
ANR	5687665	Argument	1		5686241	0					
ANR	5687666	PrimaryExpression	1		5686241	0					
ANR	5687667	IfStatement	if ( numblocks )		5686241	29					
ANR	5687668	Condition	numblocks	658:5:17089:17097	5686241	0	True				
ANR	5687669	Identifier	numblocks		5686241	0					
ANR	5687670	CompoundStatement		240:16:6359:6359	5686241	1					
ANR	5687671	ExpressionStatement	bsize = - bsize	659:2:17104:17118	5686241	0	True				
ANR	5687672	AssignmentExpression	bsize = - bsize		5686241	0		=			
ANR	5687673	Identifier	bsize		5686241	0					
ANR	5687674	UnaryOperationExpression	- bsize		5686241	1					
ANR	5687675	UnaryOperator	-		5686241	0					
ANR	5687676	Identifier	bsize		5686241	1					
ANR	5687677	ElseStatement	else		5686241	0					
ANR	5687678	IfStatement	if ( bsize < 0 )		5686241	0					
ANR	5687679	Condition	bsize < 0	660:12:17132:17140	5686241	0	True				
ANR	5687680	RelationalExpression	bsize < 0		5686241	0		<			
ANR	5687681	Identifier	bsize		5686241	0					
ANR	5687682	PrimaryExpression	0		5686241	1					
ANR	5687683	CompoundStatement		242:23:6402:6402	5686241	1					
ANR	5687684	ExpressionStatement	"eprintf ( ""rahash2: Invalid block size\\n"" )"	661:2:17147:17188	5686241	0	True				
ANR	5687685	CallExpression	"eprintf ( ""rahash2: Invalid block size\\n"" )"		5686241	0					
ANR	5687686	Callee	eprintf		5686241	0					
ANR	5687687	Identifier	eprintf		5686241	0					
ANR	5687688	ArgumentList	"""rahash2: Invalid block size\\n"""		5686241	1					
ANR	5687689	Argument	"""rahash2: Invalid block size\\n"""		5686241	0					
ANR	5687690	PrimaryExpression	"""rahash2: Invalid block size\\n"""		5686241	0					
ANR	5687691	ExpressionStatement	free ( iv )	662:2:17192:17201	5686241	1	True				
ANR	5687692	CallExpression	free ( iv )		5686241	0					
ANR	5687693	Callee	free		5686241	0					
ANR	5687694	Identifier	free		5686241	0					
ANR	5687695	ArgumentList	iv		5686241	1					
ANR	5687696	Argument	iv		5686241	0					
ANR	5687697	Identifier	iv		5686241	0					
ANR	5687698	ReturnStatement	return 1 ;	663:2:17205:17213	5686241	2	True				
ANR	5687699	PrimaryExpression	1		5686241	0					
ANR	5687700	ExpressionStatement	io = r_io_new ( )	666:1:17220:17236	5686241	30	True				
ANR	5687701	AssignmentExpression	io = r_io_new ( )		5686241	0		=			
ANR	5687702	Identifier	io		5686241	0					
ANR	5687703	CallExpression	r_io_new ( )		5686241	1					
ANR	5687704	Callee	r_io_new		5686241	0					
ANR	5687705	Identifier	r_io_new		5686241	0					
ANR	5687706	ArgumentList			5686241	1					
ANR	5687707	ForStatement	"for ( ret = 0 , i = r_optind ; i < argc ; i ++ )"		5686241	31					
ANR	5687708	ForInit	"ret = 0 , i = r_optind ;"	667:6:17244:17265	5686241	0	True				
ANR	5687709	Expression	"ret = 0 , i = r_optind"		5686241	0					
ANR	5687710	AssignmentExpression	ret = 0		5686241	0		=			
ANR	5687711	Identifier	ret		5686241	0					
ANR	5687712	PrimaryExpression	0		5686241	1					
ANR	5687713	AssignmentExpression	i = r_optind		5686241	1		=			
ANR	5687714	Identifier	i		5686241	0					
ANR	5687715	Identifier	r_optind		5686241	1					
ANR	5687716	Condition	i < argc	667:29:17267:17274	5686241	1	True				
ANR	5687717	RelationalExpression	i < argc		5686241	0		<			
ANR	5687718	Identifier	i		5686241	0					
ANR	5687719	Identifier	argc		5686241	1					
ANR	5687720	PostIncDecOperationExpression	i ++	667:39:17277:17279	5686241	2	True				
ANR	5687721	Identifier	i		5686241	0					
ANR	5687722	IncDec	++		5686241	1					
ANR	5687723	CompoundStatement		249:44:6541:6541	5686241	3					
ANR	5687724	IfStatement	if ( encrypt )		5686241	0					
ANR	5687725	Condition	encrypt	668:6:17290:17296	5686241	0	True				
ANR	5687726	Identifier	encrypt		5686241	0					
ANR	5687727	CompoundStatement		251:3:6603:6671	5686241	1					
ANR	5687728	IdentifierDeclStatement	"int rt = encrypt_or_decrypt_file ( encrypt , 0 , argv [ i ] , iv , ivlen , 0 ) ;"	669:3:17344:17412	5686241	0	True				
ANR	5687729	IdentifierDecl	"rt = encrypt_or_decrypt_file ( encrypt , 0 , argv [ i ] , iv , ivlen , 0 )"		5686241	0					
ANR	5687730	IdentifierDeclType	int		5686241	0					
ANR	5687731	Identifier	rt		5686241	1					
ANR	5687732	AssignmentExpression	"rt = encrypt_or_decrypt_file ( encrypt , 0 , argv [ i ] , iv , ivlen , 0 )"		5686241	2		=			
ANR	5687733	Identifier	rt		5686241	0					
ANR	5687734	CallExpression	"encrypt_or_decrypt_file ( encrypt , 0 , argv [ i ] , iv , ivlen , 0 )"		5686241	1					
ANR	5687735	Callee	encrypt_or_decrypt_file		5686241	0					
ANR	5687736	Identifier	encrypt_or_decrypt_file		5686241	0					
ANR	5687737	ArgumentList	encrypt		5686241	1					
ANR	5687738	Argument	encrypt		5686241	0					
ANR	5687739	Identifier	encrypt		5686241	0					
ANR	5687740	Argument	0		5686241	1					
ANR	5687741	PrimaryExpression	0		5686241	0					
ANR	5687742	Argument	argv [ i ]		5686241	2					
ANR	5687743	ArrayIndexing	argv [ i ]		5686241	0					
ANR	5687744	Identifier	argv		5686241	0					
ANR	5687745	Identifier	i		5686241	1					
ANR	5687746	Argument	iv		5686241	3					
ANR	5687747	Identifier	iv		5686241	0					
ANR	5687748	Argument	ivlen		5686241	4					
ANR	5687749	Identifier	ivlen		5686241	0					
ANR	5687750	Argument	0		5686241	5					
ANR	5687751	PrimaryExpression	0		5686241	0					
ANR	5687752	IfStatement	if ( rt == - 1 )		5686241	1					
ANR	5687753	Condition	rt == - 1	670:7:17421:17428	5686241	0	True				
ANR	5687754	EqualityExpression	rt == - 1		5686241	0		==			
ANR	5687755	Identifier	rt		5686241	0					
ANR	5687756	UnaryOperationExpression	- 1		5686241	1					
ANR	5687757	UnaryOperator	-		5686241	0					
ANR	5687758	PrimaryExpression	1		5686241	1					
ANR	5687759	CompoundStatement		252:17:6690:6690	5686241	1					
ANR	5687760	ContinueStatement	continue ;	671:4:17437:17445	5686241	0	True				
ANR	5687761	ElseStatement	else		5686241	0					
ANR	5687762	CompoundStatement		254:10:6716:6716	5686241	0					
ANR	5687763	ReturnStatement	return rt ;	673:4:17463:17472	5686241	0	True				
ANR	5687764	Identifier	rt		5686241	0					
ANR	5687765	ElseStatement	else		5686241	0					
ANR	5687766	IfStatement	if ( decrypt )		5686241	0					
ANR	5687767	Condition	decrypt	675:13:17492:17498	5686241	0	True				
ANR	5687768	Identifier	decrypt		5686241	0					
ANR	5687769	CompoundStatement		258:3:6765:6833	5686241	1					
ANR	5687770	IdentifierDeclStatement	"int rt = encrypt_or_decrypt_file ( decrypt , 1 , argv [ i ] , iv , ivlen , 0 ) ;"	676:3:17506:17574	5686241	0	True				
ANR	5687771	IdentifierDecl	"rt = encrypt_or_decrypt_file ( decrypt , 1 , argv [ i ] , iv , ivlen , 0 )"		5686241	0					
ANR	5687772	IdentifierDeclType	int		5686241	0					
ANR	5687773	Identifier	rt		5686241	1					
ANR	5687774	AssignmentExpression	"rt = encrypt_or_decrypt_file ( decrypt , 1 , argv [ i ] , iv , ivlen , 0 )"		5686241	2		=			
ANR	5687775	Identifier	rt		5686241	0					
ANR	5687776	CallExpression	"encrypt_or_decrypt_file ( decrypt , 1 , argv [ i ] , iv , ivlen , 0 )"		5686241	1					
ANR	5687777	Callee	encrypt_or_decrypt_file		5686241	0					
ANR	5687778	Identifier	encrypt_or_decrypt_file		5686241	0					
ANR	5687779	ArgumentList	decrypt		5686241	1					
ANR	5687780	Argument	decrypt		5686241	0					
ANR	5687781	Identifier	decrypt		5686241	0					
ANR	5687782	Argument	1		5686241	1					
ANR	5687783	PrimaryExpression	1		5686241	0					
ANR	5687784	Argument	argv [ i ]		5686241	2					
ANR	5687785	ArrayIndexing	argv [ i ]		5686241	0					
ANR	5687786	Identifier	argv		5686241	0					
ANR	5687787	Identifier	i		5686241	1					
ANR	5687788	Argument	iv		5686241	3					
ANR	5687789	Identifier	iv		5686241	0					
ANR	5687790	Argument	ivlen		5686241	4					
ANR	5687791	Identifier	ivlen		5686241	0					
ANR	5687792	Argument	0		5686241	5					
ANR	5687793	PrimaryExpression	0		5686241	0					
ANR	5687794	IfStatement	if ( rt == - 1 )		5686241	1					
ANR	5687795	Condition	rt == - 1	677:7:17583:17590	5686241	0	True				
ANR	5687796	EqualityExpression	rt == - 1		5686241	0		==			
ANR	5687797	Identifier	rt		5686241	0					
ANR	5687798	UnaryOperationExpression	- 1		5686241	1					
ANR	5687799	UnaryOperator	-		5686241	0					
ANR	5687800	PrimaryExpression	1		5686241	1					
ANR	5687801	CompoundStatement		259:17:6852:6852	5686241	1					
ANR	5687802	ContinueStatement	continue ;	678:4:17599:17607	5686241	0	True				
ANR	5687803	ElseStatement	else		5686241	0					
ANR	5687804	CompoundStatement		261:10:6878:6878	5686241	0					
ANR	5687805	ReturnStatement	return rt ;	680:4:17625:17634	5686241	0	True				
ANR	5687806	Identifier	rt		5686241	0					
ANR	5687807	ElseStatement	else		5686241	0					
ANR	5687808	CompoundStatement		265:3:6914:6934	5686241	0					
ANR	5687809	IdentifierDeclStatement	RIODesc * desc = NULL ;	683:3:17655:17675	5686241	0	True				
ANR	5687810	IdentifierDecl	* desc = NULL		5686241	0					
ANR	5687811	IdentifierDeclType	RIODesc *		5686241	0					
ANR	5687812	Identifier	desc		5686241	1					
ANR	5687813	AssignmentExpression	* desc = NULL		5686241	2		=			
ANR	5687814	Identifier	NULL		5686241	0					
ANR	5687815	Identifier	NULL		5686241	1					
ANR	5687816	IfStatement	"if ( ! strcmp ( argv [ i ] , ""-"" ) )"		5686241	1					
ANR	5687817	Condition	"! strcmp ( argv [ i ] , ""-"" )"	684:7:17684:17705	5686241	0	True				
ANR	5687818	UnaryOperationExpression	"! strcmp ( argv [ i ] , ""-"" )"		5686241	0					
ANR	5687819	UnaryOperator	!		5686241	0					
ANR	5687820	CallExpression	"strcmp ( argv [ i ] , ""-"" )"		5686241	1					
ANR	5687821	Callee	strcmp		5686241	0					
ANR	5687822	Identifier	strcmp		5686241	0					
ANR	5687823	ArgumentList	argv [ i ]		5686241	1					
ANR	5687824	Argument	argv [ i ]		5686241	0					
ANR	5687825	ArrayIndexing	argv [ i ]		5686241	0					
ANR	5687826	Identifier	argv		5686241	0					
ANR	5687827	Identifier	i		5686241	1					
ANR	5687828	Argument	"""-"""		5686241	1					
ANR	5687829	PrimaryExpression	"""-"""		5686241	0					
ANR	5687830	CompoundStatement		269:4:7033:7075	5686241	1					
ANR	5687831	IdentifierDeclStatement	int sz = 0 ;	685:4:17714:17724	5686241	0	True				
ANR	5687832	IdentifierDecl	sz = 0		5686241	0					
ANR	5687833	IdentifierDeclType	int		5686241	0					
ANR	5687834	Identifier	sz		5686241	1					
ANR	5687835	AssignmentExpression	sz = 0		5686241	2		=			
ANR	5687836	Identifier	sz		5686241	0					
ANR	5687837	PrimaryExpression	0		5686241	1					
ANR	5687838	IdentifierDeclStatement	ut8 * buf = ( ut8 * ) r_stdin_slurp ( & sz ) ;	686:4:17730:17768	5686241	1	True				
ANR	5687839	IdentifierDecl	* buf = ( ut8 * ) r_stdin_slurp ( & sz )		5686241	0					
ANR	5687840	IdentifierDeclType	ut8 *		5686241	0					
ANR	5687841	Identifier	buf		5686241	1					
ANR	5687842	AssignmentExpression	* buf = ( ut8 * ) r_stdin_slurp ( & sz )		5686241	2		=			
ANR	5687843	Identifier	buf		5686241	0					
ANR	5687844	CastExpression	( ut8 * ) r_stdin_slurp ( & sz )		5686241	1					
ANR	5687845	CastTarget	ut8 *		5686241	0					
ANR	5687846	CallExpression	r_stdin_slurp ( & sz )		5686241	1					
ANR	5687847	Callee	r_stdin_slurp		5686241	0					
ANR	5687848	Identifier	r_stdin_slurp		5686241	0					
ANR	5687849	ArgumentList	& sz		5686241	1					
ANR	5687850	Argument	& sz		5686241	0					
ANR	5687851	UnaryOperationExpression	& sz		5686241	0					
ANR	5687852	UnaryOperator	&		5686241	0					
ANR	5687853	Identifier	sz		5686241	1					
ANR	5687854	IdentifierDeclStatement	"char * uri = r_str_newf ( ""malloc://%d"" , sz ) ;"	687:4:17774:17816	5686241	2	True				
ANR	5687855	IdentifierDecl	"* uri = r_str_newf ( ""malloc://%d"" , sz )"		5686241	0					
ANR	5687856	IdentifierDeclType	char *		5686241	0					
ANR	5687857	Identifier	uri		5686241	1					
ANR	5687858	AssignmentExpression	"* uri = r_str_newf ( ""malloc://%d"" , sz )"		5686241	2		=			
ANR	5687859	Identifier	uri		5686241	0					
ANR	5687860	CallExpression	"r_str_newf ( ""malloc://%d"" , sz )"		5686241	1					
ANR	5687861	Callee	r_str_newf		5686241	0					
ANR	5687862	Identifier	r_str_newf		5686241	0					
ANR	5687863	ArgumentList	"""malloc://%d"""		5686241	1					
ANR	5687864	Argument	"""malloc://%d"""		5686241	0					
ANR	5687865	PrimaryExpression	"""malloc://%d"""		5686241	0					
ANR	5687866	Argument	sz		5686241	1					
ANR	5687867	Identifier	sz		5686241	0					
ANR	5687868	IfStatement	if ( sz > 0 )		5686241	3					
ANR	5687869	Condition	sz > 0	688:8:17826:17831	5686241	0	True				
ANR	5687870	RelationalExpression	sz > 0		5686241	0		>			
ANR	5687871	Identifier	sz		5686241	0					
ANR	5687872	PrimaryExpression	0		5686241	1					
ANR	5687873	CompoundStatement		270:16:7093:7093	5686241	1					
ANR	5687874	ExpressionStatement	"desc = r_io_open_nomap ( io , uri , R_PERM_R , 0 )"	689:5:17841:17886	5686241	0	True				
ANR	5687875	AssignmentExpression	"desc = r_io_open_nomap ( io , uri , R_PERM_R , 0 )"		5686241	0		=			
ANR	5687876	Identifier	desc		5686241	0					
ANR	5687877	CallExpression	"r_io_open_nomap ( io , uri , R_PERM_R , 0 )"		5686241	1					
ANR	5687878	Callee	r_io_open_nomap		5686241	0					
ANR	5687879	Identifier	r_io_open_nomap		5686241	0					
ANR	5687880	ArgumentList	io		5686241	1					
ANR	5687881	Argument	io		5686241	0					
ANR	5687882	Identifier	io		5686241	0					
ANR	5687883	Argument	uri		5686241	1					
ANR	5687884	Identifier	uri		5686241	0					
ANR	5687885	Argument	R_PERM_R		5686241	2					
ANR	5687886	Identifier	R_PERM_R		5686241	0					
ANR	5687887	Argument	0		5686241	3					
ANR	5687888	PrimaryExpression	0		5686241	0					
ANR	5687889	IfStatement	if ( ! desc )		5686241	1					
ANR	5687890	Condition	! desc	690:9:17897:17901	5686241	0	True				
ANR	5687891	UnaryOperationExpression	! desc		5686241	0					
ANR	5687892	UnaryOperator	!		5686241	0					
ANR	5687893	Identifier	desc		5686241	1					
ANR	5687894	CompoundStatement		272:16:7163:7163	5686241	1					
ANR	5687895	ExpressionStatement	"eprintf ( ""rahash2: Cannot open malloc://1024\\n"" )"	691:6:17912:17960	5686241	0	True				
ANR	5687896	CallExpression	"eprintf ( ""rahash2: Cannot open malloc://1024\\n"" )"		5686241	0					
ANR	5687897	Callee	eprintf		5686241	0					
ANR	5687898	Identifier	eprintf		5686241	0					
ANR	5687899	ArgumentList	"""rahash2: Cannot open malloc://1024\\n"""		5686241	1					
ANR	5687900	Argument	"""rahash2: Cannot open malloc://1024\\n"""		5686241	0					
ANR	5687901	PrimaryExpression	"""rahash2: Cannot open malloc://1024\\n"""		5686241	0					
ANR	5687902	ExpressionStatement	free ( iv )	692:6:17968:17977	5686241	1	True				
ANR	5687903	CallExpression	free ( iv )		5686241	0					
ANR	5687904	Callee	free		5686241	0					
ANR	5687905	Identifier	free		5686241	0					
ANR	5687906	ArgumentList	iv		5686241	1					
ANR	5687907	Argument	iv		5686241	0					
ANR	5687908	Identifier	iv		5686241	0					
ANR	5687909	ReturnStatement	return 1 ;	693:6:17985:17993	5686241	2	True				
ANR	5687910	PrimaryExpression	1		5686241	0					
ANR	5687911	ExpressionStatement	"r_io_pwrite_at ( io , 0 , buf , sz )"	695:5:18007:18038	5686241	2	True				
ANR	5687912	CallExpression	"r_io_pwrite_at ( io , 0 , buf , sz )"		5686241	0					
ANR	5687913	Callee	r_io_pwrite_at		5686241	0					
ANR	5687914	Identifier	r_io_pwrite_at		5686241	0					
ANR	5687915	ArgumentList	io		5686241	1					
ANR	5687916	Argument	io		5686241	0					
ANR	5687917	Identifier	io		5686241	0					
ANR	5687918	Argument	0		5686241	1					
ANR	5687919	PrimaryExpression	0		5686241	0					
ANR	5687920	Argument	buf		5686241	2					
ANR	5687921	Identifier	buf		5686241	0					
ANR	5687922	Argument	sz		5686241	3					
ANR	5687923	Identifier	sz		5686241	0					
ANR	5687924	ExpressionStatement	free ( uri )	697:4:18050:18060	5686241	4	True				
ANR	5687925	CallExpression	free ( uri )		5686241	0					
ANR	5687926	Callee	free		5686241	0					
ANR	5687927	Identifier	free		5686241	0					
ANR	5687928	ArgumentList	uri		5686241	1					
ANR	5687929	Argument	uri		5686241	0					
ANR	5687930	Identifier	uri		5686241	0					
ANR	5687931	ElseStatement	else		5686241	0					
ANR	5687932	CompoundStatement		280:10:7331:7331	5686241	0					
ANR	5687933	IfStatement	if ( r_file_is_directory ( argv [ i ] ) )		5686241	0					
ANR	5687934	Condition	r_file_is_directory ( argv [ i ] )	699:8:18082:18110	5686241	0	True				
ANR	5687935	CallExpression	r_file_is_directory ( argv [ i ] )		5686241	0					
ANR	5687936	Callee	r_file_is_directory		5686241	0					
ANR	5687937	Identifier	r_file_is_directory		5686241	0					
ANR	5687938	ArgumentList	argv [ i ]		5686241	1					
ANR	5687939	Argument	argv [ i ]		5686241	0					
ANR	5687940	ArrayIndexing	argv [ i ]		5686241	0					
ANR	5687941	Identifier	argv		5686241	0					
ANR	5687942	Identifier	i		5686241	1					
ANR	5687943	CompoundStatement		281:39:7372:7372	5686241	1					
ANR	5687944	ExpressionStatement	"eprintf ( ""rahash2: Cannot hash directories\\n"" )"	700:5:18120:18166	5686241	0	True				
ANR	5687945	CallExpression	"eprintf ( ""rahash2: Cannot hash directories\\n"" )"		5686241	0					
ANR	5687946	Callee	eprintf		5686241	0					
ANR	5687947	Identifier	eprintf		5686241	0					
ANR	5687948	ArgumentList	"""rahash2: Cannot hash directories\\n"""		5686241	1					
ANR	5687949	Argument	"""rahash2: Cannot hash directories\\n"""		5686241	0					
ANR	5687950	PrimaryExpression	"""rahash2: Cannot hash directories\\n"""		5686241	0					
ANR	5687951	ExpressionStatement	free ( iv )	701:5:18173:18182	5686241	1	True				
ANR	5687952	CallExpression	free ( iv )		5686241	0					
ANR	5687953	Callee	free		5686241	0					
ANR	5687954	Identifier	free		5686241	0					
ANR	5687955	ArgumentList	iv		5686241	1					
ANR	5687956	Argument	iv		5686241	0					
ANR	5687957	Identifier	iv		5686241	0					
ANR	5687958	ReturnStatement	return 1 ;	702:5:18189:18197	5686241	2	True				
ANR	5687959	PrimaryExpression	1		5686241	0					
ANR	5687960	ExpressionStatement	"desc = r_io_open_nomap ( io , argv [ i ] , R_PERM_R , 0 )"	704:4:18209:18258	5686241	1	True				
ANR	5687961	AssignmentExpression	"desc = r_io_open_nomap ( io , argv [ i ] , R_PERM_R , 0 )"		5686241	0		=			
ANR	5687962	Identifier	desc		5686241	0					
ANR	5687963	CallExpression	"r_io_open_nomap ( io , argv [ i ] , R_PERM_R , 0 )"		5686241	1					
ANR	5687964	Callee	r_io_open_nomap		5686241	0					
ANR	5687965	Identifier	r_io_open_nomap		5686241	0					
ANR	5687966	ArgumentList	io		5686241	1					
ANR	5687967	Argument	io		5686241	0					
ANR	5687968	Identifier	io		5686241	0					
ANR	5687969	Argument	argv [ i ]		5686241	1					
ANR	5687970	ArrayIndexing	argv [ i ]		5686241	0					
ANR	5687971	Identifier	argv		5686241	0					
ANR	5687972	Identifier	i		5686241	1					
ANR	5687973	Argument	R_PERM_R		5686241	2					
ANR	5687974	Identifier	R_PERM_R		5686241	0					
ANR	5687975	Argument	0		5686241	3					
ANR	5687976	PrimaryExpression	0		5686241	0					
ANR	5687977	IfStatement	if ( ! desc )		5686241	2					
ANR	5687978	Condition	! desc	705:8:18268:18272	5686241	0	True				
ANR	5687979	UnaryOperationExpression	! desc		5686241	0					
ANR	5687980	UnaryOperator	!		5686241	0					
ANR	5687981	Identifier	desc		5686241	1					
ANR	5687982	CompoundStatement		287:15:7534:7534	5686241	1					
ANR	5687983	ExpressionStatement	"eprintf ( ""rahash2: Cannot open '%s'\\n"" , argv [ i ] )"	706:5:18282:18330	5686241	0	True				
ANR	5687984	CallExpression	"eprintf ( ""rahash2: Cannot open '%s'\\n"" , argv [ i ] )"		5686241	0					
ANR	5687985	Callee	eprintf		5686241	0					
ANR	5687986	Identifier	eprintf		5686241	0					
ANR	5687987	ArgumentList	"""rahash2: Cannot open '%s'\\n"""		5686241	1					
ANR	5687988	Argument	"""rahash2: Cannot open '%s'\\n"""		5686241	0					
ANR	5687989	PrimaryExpression	"""rahash2: Cannot open '%s'\\n"""		5686241	0					
ANR	5687990	Argument	argv [ i ]		5686241	1					
ANR	5687991	ArrayIndexing	argv [ i ]		5686241	0					
ANR	5687992	Identifier	argv		5686241	0					
ANR	5687993	Identifier	i		5686241	1					
ANR	5687994	ExpressionStatement	free ( iv )	707:5:18337:18346	5686241	1	True				
ANR	5687995	CallExpression	free ( iv )		5686241	0					
ANR	5687996	Callee	free		5686241	0					
ANR	5687997	Identifier	free		5686241	0					
ANR	5687998	ArgumentList	iv		5686241	1					
ANR	5687999	Argument	iv		5686241	0					
ANR	5688000	Identifier	iv		5686241	0					
ANR	5688001	ReturnStatement	return 1 ;	708:5:18353:18361	5686241	2	True				
ANR	5688002	PrimaryExpression	1		5686241	0					
ANR	5688003	ExpressionStatement	"ret |= do_hash ( argv [ i ] , algo , io , bsize , rad , ule , compareBin )"	711:3:18377:18440	5686241	2	True				
ANR	5688004	AssignmentExpression	"ret |= do_hash ( argv [ i ] , algo , io , bsize , rad , ule , compareBin )"		5686241	0		|=			
ANR	5688005	Identifier	ret		5686241	0					
ANR	5688006	CallExpression	"do_hash ( argv [ i ] , algo , io , bsize , rad , ule , compareBin )"		5686241	1					
ANR	5688007	Callee	do_hash		5686241	0					
ANR	5688008	Identifier	do_hash		5686241	0					
ANR	5688009	ArgumentList	argv [ i ]		5686241	1					
ANR	5688010	Argument	argv [ i ]		5686241	0					
ANR	5688011	ArrayIndexing	argv [ i ]		5686241	0					
ANR	5688012	Identifier	argv		5686241	0					
ANR	5688013	Identifier	i		5686241	1					
ANR	5688014	Argument	algo		5686241	1					
ANR	5688015	Identifier	algo		5686241	0					
ANR	5688016	Argument	io		5686241	2					
ANR	5688017	Identifier	io		5686241	0					
ANR	5688018	Argument	bsize		5686241	3					
ANR	5688019	Identifier	bsize		5686241	0					
ANR	5688020	Argument	rad		5686241	4					
ANR	5688021	Identifier	rad		5686241	0					
ANR	5688022	Argument	ule		5686241	5					
ANR	5688023	Identifier	ule		5686241	0					
ANR	5688024	Argument	compareBin		5686241	6					
ANR	5688025	Identifier	compareBin		5686241	0					
ANR	5688026	ExpressionStatement	to = 0	712:3:18445:18451	5686241	3	True				
ANR	5688027	AssignmentExpression	to = 0		5686241	0		=			
ANR	5688028	Identifier	to		5686241	0					
ANR	5688029	PrimaryExpression	0		5686241	1					
ANR	5688030	ExpressionStatement	r_io_desc_close ( desc )	713:3:18456:18478	5686241	4	True				
ANR	5688031	CallExpression	r_io_desc_close ( desc )		5686241	0					
ANR	5688032	Callee	r_io_desc_close		5686241	0					
ANR	5688033	Identifier	r_io_desc_close		5686241	0					
ANR	5688034	ArgumentList	desc		5686241	1					
ANR	5688035	Argument	desc		5686241	0					
ANR	5688036	Identifier	desc		5686241	0					
ANR	5688037	ExpressionStatement	free ( hashstr )	716:1:18488:18502	5686241	32	True				
ANR	5688038	CallExpression	free ( hashstr )		5686241	0					
ANR	5688039	Callee	free		5686241	0					
ANR	5688040	Identifier	free		5686241	0					
ANR	5688041	ArgumentList	hashstr		5686241	1					
ANR	5688042	Argument	hashstr		5686241	0					
ANR	5688043	Identifier	hashstr		5686241	0					
ANR	5688044	ExpressionStatement	r_io_free ( io )	717:1:18505:18519	5686241	33	True				
ANR	5688045	CallExpression	r_io_free ( io )		5686241	0					
ANR	5688046	Callee	r_io_free		5686241	0					
ANR	5688047	Identifier	r_io_free		5686241	0					
ANR	5688048	ArgumentList	io		5686241	1					
ANR	5688049	Argument	io		5686241	0					
ANR	5688050	Identifier	io		5686241	0					
ANR	5688051	ExpressionStatement	free ( iv )	718:1:18522:18531	5686241	34	True				
ANR	5688052	CallExpression	free ( iv )		5686241	0					
ANR	5688053	Callee	free		5686241	0					
ANR	5688054	Identifier	free		5686241	0					
ANR	5688055	ArgumentList	iv		5686241	1					
ANR	5688056	Argument	iv		5686241	0					
ANR	5688057	Identifier	iv		5686241	0					
ANR	5688058	ReturnStatement	return ret ;	720:1:18535:18545	5686241	35	True				
ANR	5688059	Identifier	ret		5686241	0					
ANR	5688060	ReturnType	int		5686241	1					
ANR	5688061	Identifier	r_main_rahash2		5686241	2					
ANR	5688062	ParameterList	"int argc , char * * argv"		5686241	3					
ANR	5688063	Parameter	int argc	419:19:10717:10724	5686241	0	True				
ANR	5688064	ParameterType	int		5686241	0					
ANR	5688065	Identifier	argc		5686241	1					
ANR	5688066	Parameter	char * * argv	419:29:10727:10737	5686241	1	True				
ANR	5688067	ParameterType	char * *		5686241	0					
ANR	5688068	Identifier	argv		5686241	1					
ANR	5688069	CFGEntryNode	ENTRY		5686241		True				
ANR	5688070	CFGExitNode	EXIT		5686241		True				
ANR	5688071	Symbol	& ret		5686241						
ANR	5688072	Symbol	stdin		5686241						
ANR	5688073	Symbol	do_hash		5686241						
ANR	5688074	Symbol	r_hash_size		5686241						
ANR	5688075	Symbol	* strsz		5686241						
ANR	5688076	Symbol	* argv		5686241						
ANR	5688077	Symbol	s . buf		5686241						
ANR	5688078	Symbol	s . prefix		5686241						
ANR	5688079	Symbol	r_hash_name_to_bits		5686241						
ANR	5688080	Symbol	strlen		5686241						
ANR	5688081	Symbol	strncmp		5686241						
ANR	5688082	Symbol	rad		5686241						
ANR	5688083	Symbol	compareBin_len		5686241						
ANR	5688084	Symbol	s . len		5686241						
ANR	5688085	Symbol	from		5686241						
ANR	5688086	Symbol	* bytes_read		5686241						
ANR	5688087	Symbol	* hashstr		5686241						
ANR	5688088	Symbol	ret		5686241						
ANR	5688089	Symbol	strcmp		5686241						
ANR	5688090	Symbol	NULL		5686241						
ANR	5688091	Symbol	compareStr		5686241						
ANR	5688092	Symbol	INSIZE		5686241						
ANR	5688093	Symbol	ctx		5686241						
ANR	5688094	Symbol	io		5686241						
ANR	5688095	Symbol	hashbit		5686241						
ANR	5688096	Symbol	iv		5686241						
ANR	5688097	Symbol	iterations		5686241						
ANR	5688098	Symbol	fread		5686241						
ANR	5688099	Symbol	ule		5686241						
ANR	5688100	Symbol	r_optarg		5686241						
ANR	5688101	Symbol	str		5686241						
ANR	5688102	Symbol	& sz		5686241						
ANR	5688103	Symbol	do_help		5686241						
ANR	5688104	Symbol	r_getopt		5686241						
ANR	5688105	Symbol	numblocks		5686241						
ANR	5688106	Symbol	ivlen		5686241						
ANR	5688107	Symbol	true		5686241						
ANR	5688108	Symbol	r_optind		5686241						
ANR	5688109	Symbol	* hashstr_len		5686241						
ANR	5688110	Symbol	algobit		5686241						
ANR	5688111	Symbol	desc		5686241						
ANR	5688112	Symbol	r_file_is_directory		5686241						
ANR	5688113	Symbol	rt		5686241						
ANR	5688114	Symbol	flag		5686241						
ANR	5688115	Symbol	seed		5686241						
ANR	5688116	Symbol	r_stdin_slurp		5686241						
ANR	5688117	Symbol	ptype		5686241						
ANR	5688118	Symbol	compareBin		5686241						
ANR	5688119	Symbol	r_str_unescape		5686241						
ANR	5688120	Symbol	encrypt_or_decrypt		5686241						
ANR	5688121	Symbol	r_str_newf		5686241						
ANR	5688122	Symbol	argv		5686241						
ANR	5688123	Symbol	r_num_math		5686241						
ANR	5688124	Symbol	out		5686241						
ANR	5688125	Symbol	encrypt_or_decrypt_file		5686241						
ANR	5688126	Symbol	strsz		5686241						
ANR	5688127	Symbol	encrypt		5686241						
ANR	5688128	Symbol	R_PERM_R		5686241						
ANR	5688129	Symbol	quiet		5686241						
ANR	5688130	Symbol	* str		5686241						
ANR	5688131	Symbol	r_hex_str2bin		5686241						
ANR	5688132	Symbol	r_io_new		5686241						
ANR	5688133	Symbol	argc		5686241						
ANR	5688134	Symbol	atoi		5686241						
ANR	5688135	Symbol	malloc		5686241						
ANR	5688136	Symbol	c		5686241						
ANR	5688137	Symbol	r_io_open_nomap		5686241						
ANR	5688138	Symbol	R_HASH_ALL		5686241						
ANR	5688139	Symbol	sz		5686241						
ANR	5688140	Symbol	false		5686241						
ANR	5688141	Symbol	i		5686241						
ANR	5688142	Symbol	bytes_read		5686241						
ANR	5688143	Symbol	incremental		5686241						
ANR	5688144	Symbol	uri		5686241						
ANR	5688145	Symbol	r_hash_new		5686241						
ANR	5688146	Symbol	hashstr		5686241						
ANR	5688147	Symbol	r_main_version_print		5686241						
ANR	5688148	Symbol	buf		5686241						
ANR	5688149	Symbol	* i		5686241						
ANR	5688150	Symbol	s		5686241						
ANR	5688151	Symbol	_s		5686241						
ANR	5688152	Symbol	bsize		5686241						
ANR	5688153	Symbol	hashstr_hex		5686241						
ANR	5688154	Symbol	to		5686241						
ANR	5688155	Symbol	decrypt		5686241						
ANR	5688156	Symbol	is_power_of_two		5686241						
ANR	5688157	Symbol	algo		5686241						
ANR	5688158	Symbol	ivseed		5686241						
ANR	5688159	Symbol	hashstr_len		5686241						
