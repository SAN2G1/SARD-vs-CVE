command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4937831	File	data/converged/CVE-2019-16718~_radare2/libr_magic_apprentice.c								
ANR	4937832	ClassDef	r_magic_entry	60:0:2231:2310							
ANR	4937833	DeclStmt									
ANR	4937834	Decl							struct r_magic	struct r_magic *	mp
ANR	4937835	DeclStmt									
ANR	4937836	Decl							ut32	ut32	cont_count
ANR	4937837	DeclStmt									
ANR	4937838	Decl							ut32	ut32	max_count
ANR	4937839	DeclStmt									
ANR	4937840	Decl							int	int [ FILE_NAMES_SIZE ]	magic_file_formats
ANR	4937841	DeclStmt									
ANR	4937842	Decl							const size_t	const size_t	file_nformats
ANR	4937843	DeclStmt									
ANR	4937844	Decl							const char	const char * [ FILE_NAMES_SIZE ]	magic_file_names
ANR	4937845	DeclStmt									
ANR	4937846	Decl							const size_t	const size_t	file_nnames
ANR	4937847	DeclStmt									
ANR	4937848	Decl							int	"int ( RMagic * ms , struct r_magic * , const char * * , int )"	getvalue
ANR	4937849	DeclStmt									
ANR	4937850	Decl							int	int ( int )	hextoint
ANR	4937851	DeclStmt									
ANR	4937852	Decl							const char	"const char * ( RMagic * , const char * , char * , int , int * , int )"	getstr
ANR	4937853	DeclStmt									
ANR	4937854	Decl							int	"int ( RMagic * , struct r_magic_entry * * , ut32 * , const char * , size_t , int )"	parse
ANR	4937855	DeclStmt									
ANR	4937856	Decl							int	"int ( RMagic * , struct r_magic_entry * * , ut32 * , const char * )"	parse_mime
ANR	4937857	DeclStmt									
ANR	4937858	Decl							void	void ( const char * * )	eatsize
ANR	4937859	DeclStmt									
ANR	4937860	Decl							int	"int ( RMagic * , const char * , int , struct mlist * )"	apprentice_1
ANR	4937861	DeclStmt									
ANR	4937862	Decl							size_t	size_t ( const struct r_magic * )	apprentice_r_magic_strength
ANR	4937863	DeclStmt									
ANR	4937864	Decl							int	"int ( const void * , const void * )"	apprentice_sort
ANR	4937865	DeclStmt									
ANR	4937866	Decl							int	"int ( RMagic * , struct r_magic * * , ut32 * , const char * , int )"	apprentice_load
ANR	4937867	DeclStmt									
ANR	4937868	Decl							void	"void ( struct r_magic * , ut32 )"	byteswap
ANR	4937869	DeclStmt									
ANR	4937870	Decl							void	void ( struct r_magic * )	bs1
ANR	4937871	DeclStmt									
ANR	4937872	Decl							ut16	ut16 ( ut16 )	swap2
ANR	4937873	DeclStmt									
ANR	4937874	Decl							ut32	ut32 ( ut32 )	swap4
ANR	4937875	DeclStmt									
ANR	4937876	Decl							ut64	ut64 ( ut64 )	swap8
ANR	4937877	DeclStmt									
ANR	4937878	Decl							char	"char * ( const char * , int )"	mkdbname
ANR	4937879	DeclStmt									
ANR	4937880	Decl							int	"int ( RMagic * , struct r_magic * * , ut32 * , const char * )"	apprentice_map
ANR	4937881	DeclStmt									
ANR	4937882	Decl							int	"int ( RMagic * , struct r_magic * * , ut32 * , const char * )"	apprentice_compile
ANR	4937883	DeclStmt									
ANR	4937884	Decl							int	"int ( const char * , int )"	check_format_type
ANR	4937885	DeclStmt									
ANR	4937886	Decl							int	"int ( RMagic * , struct r_magic * )"	check_format
ANR	4937887	DeclStmt									
ANR	4937888	Decl							int	int ( char )	get_op
ANR	4937889	DeclStmt									
ANR	4937890	Decl							size_t	size_t	maxmagic
ANR	4937891	DeclStmt									
ANR	4937892	Decl							size_t	size_t	magicsize
ANR	4937893	DeclStmt									
ANR	4937894	Decl							const char	const char [ ]	usg_hdr
ANR	4937895	DeclStmt									
ANR	4937896	Decl							const char	const char [ ]	mime_marker
ANR	4937897	DeclStmt									
ANR	4937898	Decl							const size_t	const size_t	mime_marker_len
ANR	4937899	ClassDef	type_tbl_s	100:13:3942:6039							
ANR	4937900	DeclStmt									
ANR	4937901	Decl							const char	const char [ 16 ]	name
ANR	4937902	DeclStmt									
ANR	4937903	Decl							const size_t	const size_t	len
ANR	4937904	DeclStmt									
ANR	4937905	Decl							const int	const int	type
ANR	4937906	DeclStmt									
ANR	4937907	Decl							const int	const int	format
ANR	4937908	DeclStmt									
ANR	4937909	Decl							type_tbl_s	type_tbl_s [ ]	type_tbl
ANR	4937910	Function	get_type	151:0:6042:6275							
ANR	4937911	FunctionDef	"get_type (const char * l , const char * * t)"		4937910	0					
ANR	4937912	CompoundStatement		151:51:6093:6275	4937910	0					
ANR	4937913	IdentifierDeclStatement	const struct type_tbl_s * p ;	152:1:6096:6122	4937910	0	True				
ANR	4937914	IdentifierDecl	* p		4937910	0					
ANR	4937915	IdentifierDeclType	const struct type_tbl_s *		4937910	0					
ANR	4937916	Identifier	p		4937910	1					
ANR	4937917	ForStatement	for ( p = type_tbl ; p -> len ; p ++ )		4937910	1					
ANR	4937918	ForInit	p = type_tbl ;	154:6:6131:6143	4937910	0	True				
ANR	4937919	AssignmentExpression	p = type_tbl		4937910	0		=			
ANR	4937920	Identifier	p		4937910	0					
ANR	4937921	Identifier	type_tbl		4937910	1					
ANR	4937922	Condition	p -> len	154:20:6145:6150	4937910	1	True				
ANR	4937923	PtrMemberAccess	p -> len		4937910	0					
ANR	4937924	Identifier	p		4937910	0					
ANR	4937925	Identifier	len		4937910	1					
ANR	4937926	PostIncDecOperationExpression	p ++	154:28:6153:6155	4937910	2	True				
ANR	4937927	Identifier	p		4937910	0					
ANR	4937928	IncDec	++		4937910	1					
ANR	4937929	CompoundStatement		4:33:64:64	4937910	3					
ANR	4937930	IfStatement	"if ( strncmp ( l , p -> name , p -> len ) == 0 )"		4937910	0					
ANR	4937931	Condition	"strncmp ( l , p -> name , p -> len ) == 0"	155:6:6166:6198	4937910	0	True				
ANR	4937932	EqualityExpression	"strncmp ( l , p -> name , p -> len ) == 0"		4937910	0		==			
ANR	4937933	CallExpression	"strncmp ( l , p -> name , p -> len )"		4937910	0					
ANR	4937934	Callee	strncmp		4937910	0					
ANR	4937935	Identifier	strncmp		4937910	0					
ANR	4937936	ArgumentList	l		4937910	1					
ANR	4937937	Argument	l		4937910	0					
ANR	4937938	Identifier	l		4937910	0					
ANR	4937939	Argument	p -> name		4937910	1					
ANR	4937940	PtrMemberAccess	p -> name		4937910	0					
ANR	4937941	Identifier	p		4937910	0					
ANR	4937942	Identifier	name		4937910	1					
ANR	4937943	Argument	p -> len		4937910	2					
ANR	4937944	PtrMemberAccess	p -> len		4937910	0					
ANR	4937945	Identifier	p		4937910	0					
ANR	4937946	Identifier	len		4937910	1					
ANR	4937947	PrimaryExpression	0		4937910	1					
ANR	4937948	CompoundStatement		5:41:107:107	4937910	1					
ANR	4937949	IfStatement	if ( t )		4937910	0					
ANR	4937950	Condition	t	156:7:6210:6210	4937910	0	True				
ANR	4937951	Identifier	t		4937910	0					
ANR	4937952	CompoundStatement		6:10:119:119	4937910	1					
ANR	4937953	ExpressionStatement	* t = l + p -> len	157:4:6219:6234	4937910	0	True				
ANR	4937954	AssignmentExpression	* t = l + p -> len		4937910	0		=			
ANR	4937955	UnaryOperationExpression	* t		4937910	0					
ANR	4937956	UnaryOperator	*		4937910	0					
ANR	4937957	Identifier	t		4937910	1					
ANR	4937958	AdditiveExpression	l + p -> len		4937910	1		+			
ANR	4937959	Identifier	l		4937910	0					
ANR	4937960	PtrMemberAccess	p -> len		4937910	1					
ANR	4937961	Identifier	p		4937910	0					
ANR	4937962	Identifier	len		4937910	1					
ANR	4937963	BreakStatement	break ;	159:3:6244:6249	4937910	1	True				
ANR	4937964	ReturnStatement	return p -> type ;	162:1:6259:6273	4937910	2	True				
ANR	4937965	PtrMemberAccess	p -> type		4937910	0					
ANR	4937966	Identifier	p		4937910	0					
ANR	4937967	Identifier	type		4937910	1					
ANR	4937968	ReturnType	static int		4937910	1					
ANR	4937969	Identifier	get_type		4937910	2					
ANR	4937970	ParameterList	"const char * l , const char * * t"		4937910	3					
ANR	4937971	Parameter	const char * l	151:20:6062:6074	4937910	0	True				
ANR	4937972	ParameterType	const char *		4937910	0					
ANR	4937973	Identifier	l		4937910	1					
ANR	4937974	Parameter	const char * * t	151:35:6077:6090	4937910	1	True				
ANR	4937975	ParameterType	const char * *		4937910	0					
ANR	4937976	Identifier	t		4937910	1					
ANR	4937977	CFGEntryNode	ENTRY		4937910		True				
ANR	4937978	CFGExitNode	EXIT		4937910		True				
ANR	4937979	Symbol	p		4937910						
ANR	4937980	Symbol	strncmp		4937910						
ANR	4937981	Symbol	t		4937910						
ANR	4937982	Symbol	p -> len		4937910						
ANR	4937983	Symbol	* p		4937910						
ANR	4937984	Symbol	p -> name		4937910						
ANR	4937985	Symbol	l		4937910						
ANR	4937986	Symbol	type_tbl		4937910						
ANR	4937987	Symbol	p -> type		4937910						
ANR	4937988	Symbol	* t		4937910						
ANR	4937989	Function	init_file_tables	165:0:6278:6574							
ANR	4937990	FunctionDef	init_file_tables ()		4937989	0					
ANR	4937991	CompoundStatement		165:35:6313:6574	4937989	0					
ANR	4937992	Statement	static	166:1:6316:6321	4937989	0	True				
ANR	4937993	IdentifierDeclStatement	int done = 0 ;	166:8:6323:6335	4937989	1	True				
ANR	4937994	IdentifierDecl	done = 0		4937989	0					
ANR	4937995	IdentifierDeclType	int		4937989	0					
ANR	4937996	Identifier	done		4937989	1					
ANR	4937997	AssignmentExpression	done = 0		4937989	2		=			
ANR	4937998	Identifier	done		4937989	0					
ANR	4937999	PrimaryExpression	0		4937989	1					
ANR	4938000	IdentifierDeclStatement	const struct type_tbl_s * p ;	167:1:6338:6364	4937989	2	True				
ANR	4938001	IdentifierDecl	* p		4937989	0					
ANR	4938002	IdentifierDeclType	const struct type_tbl_s *		4937989	0					
ANR	4938003	Identifier	p		4937989	1					
ANR	4938004	IfStatement	if ( done )		4937989	3					
ANR	4938005	Condition	done	168:5:6371:6374	4937989	0	True				
ANR	4938006	Identifier	done		4937989	0					
ANR	4938007	CompoundStatement		4:11:63:63	4937989	1					
ANR	4938008	ReturnStatement	return ;	169:2:6381:6387	4937989	0	True				
ANR	4938009	ExpressionStatement	done ++	171:1:6393:6399	4937989	4	True				
ANR	4938010	PostIncDecOperationExpression	done ++		4937989	0					
ANR	4938011	Identifier	done		4937989	0					
ANR	4938012	IncDec	++		4937989	1					
ANR	4938013	ForStatement	for ( p = type_tbl ; p -> len ; p ++ )		4937989	5					
ANR	4938014	ForInit	p = type_tbl ;	172:6:6407:6419	4937989	0	True				
ANR	4938015	AssignmentExpression	p = type_tbl		4937989	0		=			
ANR	4938016	Identifier	p		4937989	0					
ANR	4938017	Identifier	type_tbl		4937989	1					
ANR	4938018	Condition	p -> len	172:20:6421:6426	4937989	1	True				
ANR	4938019	PtrMemberAccess	p -> len		4937989	0					
ANR	4938020	Identifier	p		4937989	0					
ANR	4938021	Identifier	len		4937989	1					
ANR	4938022	PostIncDecOperationExpression	p ++	172:28:6429:6431	4937989	2	True				
ANR	4938023	Identifier	p		4937989	0					
ANR	4938024	IncDec	++		4937989	1					
ANR	4938025	CompoundStatement		8:33:120:120	4937989	3					
ANR	4938026	IfStatement	if ( p -> type >= FILE_NAMES_SIZE )		4937989	0					
ANR	4938027	Condition	p -> type >= FILE_NAMES_SIZE	173:6:6442:6467	4937989	0	True				
ANR	4938028	RelationalExpression	p -> type >= FILE_NAMES_SIZE		4937989	0		>=			
ANR	4938029	PtrMemberAccess	p -> type		4937989	0					
ANR	4938030	Identifier	p		4937989	0					
ANR	4938031	Identifier	type		4937989	1					
ANR	4938032	Identifier	FILE_NAMES_SIZE		4937989	1					
ANR	4938033	CompoundStatement		9:34:156:156	4937989	1					
ANR	4938034	ContinueStatement	continue ;	174:3:6475:6483	4937989	0	True				
ANR	4938035	ExpressionStatement	magic_file_names [ p -> type ] = p -> name	176:2:6491:6526	4937989	1	True				
ANR	4938036	AssignmentExpression	magic_file_names [ p -> type ] = p -> name		4937989	0		=			
ANR	4938037	ArrayIndexing	magic_file_names [ p -> type ]		4937989	0					
ANR	4938038	Identifier	magic_file_names		4937989	0					
ANR	4938039	PtrMemberAccess	p -> type		4937989	1					
ANR	4938040	Identifier	p		4937989	0					
ANR	4938041	Identifier	type		4937989	1					
ANR	4938042	PtrMemberAccess	p -> name		4937989	1					
ANR	4938043	Identifier	p		4937989	0					
ANR	4938044	Identifier	name		4937989	1					
ANR	4938045	ExpressionStatement	magic_file_formats [ p -> type ] = p -> format	177:2:6530:6569	4937989	2	True				
ANR	4938046	AssignmentExpression	magic_file_formats [ p -> type ] = p -> format		4937989	0		=			
ANR	4938047	ArrayIndexing	magic_file_formats [ p -> type ]		4937989	0					
ANR	4938048	Identifier	magic_file_formats		4937989	0					
ANR	4938049	PtrMemberAccess	p -> type		4937989	1					
ANR	4938050	Identifier	p		4937989	0					
ANR	4938051	Identifier	type		4937989	1					
ANR	4938052	PtrMemberAccess	p -> format		4937989	1					
ANR	4938053	Identifier	p		4937989	0					
ANR	4938054	Identifier	format		4937989	1					
ANR	4938055	ReturnType	static void		4937989	1					
ANR	4938056	Identifier	init_file_tables		4937989	2					
ANR	4938057	ParameterList			4937989	3					
ANR	4938058	CFGEntryNode	ENTRY		4937989		True				
ANR	4938059	CFGExitNode	EXIT		4937989		True				
ANR	4938060	Symbol	p -> format		4937989						
ANR	4938061	Symbol	magic_file_formats		4937989						
ANR	4938062	Symbol	* magic_file_formats		4937989						
ANR	4938063	Symbol	FILE_NAMES_SIZE		4937989						
ANR	4938064	Symbol	* p -> type		4937989						
ANR	4938065	Symbol	type_tbl		4937989						
ANR	4938066	Symbol	done		4937989						
ANR	4938067	Symbol	p -> type		4937989						
ANR	4938068	Symbol	p		4937989						
ANR	4938069	Symbol	p -> len		4937989						
ANR	4938070	Symbol	* magic_file_names		4937989						
ANR	4938071	Symbol	* p		4937989						
ANR	4938072	Symbol	p -> name		4937989						
ANR	4938073	Symbol	* * p		4937989						
ANR	4938074	Symbol	magic_file_names		4937989						
ANR	4938075	Function	apprentice_1	184:0:6617:7944							
ANR	4938076	FunctionDef	"apprentice_1 (RMagic * ms , const char * fn , int action , struct mlist * mlist)"		4938075	0					
ANR	4938077	CompoundStatement		184:85:6702:7944	4938075	0					
ANR	4938078	IdentifierDeclStatement	struct r_magic * magic = NULL ;	185:1:6705:6733	4938075	0	True				
ANR	4938079	IdentifierDecl	* magic = NULL		4938075	0					
ANR	4938080	IdentifierDeclType	struct r_magic *		4938075	0					
ANR	4938081	Identifier	magic		4938075	1					
ANR	4938082	AssignmentExpression	* magic = NULL		4938075	2		=			
ANR	4938083	Identifier	NULL		4938075	0					
ANR	4938084	Identifier	NULL		4938075	1					
ANR	4938085	IdentifierDeclStatement	ut32 nmagic = 0 ;	186:1:6736:6751	4938075	1	True				
ANR	4938086	IdentifierDecl	nmagic = 0		4938075	0					
ANR	4938087	IdentifierDeclType	ut32		4938075	0					
ANR	4938088	Identifier	nmagic		4938075	1					
ANR	4938089	AssignmentExpression	nmagic = 0		4938075	2		=			
ANR	4938090	Identifier	nmagic		4938075	0					
ANR	4938091	PrimaryExpression	0		4938075	1					
ANR	4938092	IdentifierDeclStatement	struct mlist * ml ;	187:1:6754:6770	4938075	2	True				
ANR	4938093	IdentifierDecl	* ml		4938075	0					
ANR	4938094	IdentifierDeclType	struct mlist *		4938075	0					
ANR	4938095	Identifier	ml		4938075	1					
ANR	4938096	IdentifierDeclStatement	int rv = - 1 ;	188:1:6773:6784	4938075	3	True				
ANR	4938097	IdentifierDecl	rv = - 1		4938075	0					
ANR	4938098	IdentifierDeclType	int		4938075	0					
ANR	4938099	Identifier	rv		4938075	1					
ANR	4938100	AssignmentExpression	rv = - 1		4938075	2		=			
ANR	4938101	Identifier	rv		4938075	0					
ANR	4938102	UnaryOperationExpression	- 1		4938075	1					
ANR	4938103	UnaryOperator	-		4938075	0					
ANR	4938104	PrimaryExpression	1		4938075	1					
ANR	4938105	IdentifierDeclStatement	int mapped ;	189:1:6787:6797	4938075	4	True				
ANR	4938106	IdentifierDecl	mapped		4938075	0					
ANR	4938107	IdentifierDeclType	int		4938075	0					
ANR	4938108	Identifier	mapped		4938075	1					
ANR	4938109	IfStatement	if ( ! ms )		4938075	5					
ANR	4938110	Condition	! ms	191:5:6805:6807	4938075	0	True				
ANR	4938111	UnaryOperationExpression	! ms		4938075	0					
ANR	4938112	UnaryOperator	!		4938075	0					
ANR	4938113	Identifier	ms		4938075	1					
ANR	4938114	CompoundStatement		8:10:107:107	4938075	1					
ANR	4938115	ReturnStatement	return - 1 ;	192:2:6814:6823	4938075	0	True				
ANR	4938116	UnaryOperationExpression	- 1		4938075	0					
ANR	4938117	UnaryOperator	-		4938075	0					
ANR	4938118	PrimaryExpression	1		4938075	1					
ANR	4938119	ExpressionStatement	ms -> haderr = 0	194:1:6829:6843	4938075	6	True				
ANR	4938120	AssignmentExpression	ms -> haderr = 0		4938075	0		=			
ANR	4938121	PtrMemberAccess	ms -> haderr		4938075	0					
ANR	4938122	Identifier	ms		4938075	0					
ANR	4938123	Identifier	haderr		4938075	1					
ANR	4938124	PrimaryExpression	0		4938075	1					
ANR	4938125	IfStatement	if ( magicsize != FILE_MAGICSIZE )		4938075	7					
ANR	4938126	Condition	magicsize != FILE_MAGICSIZE	195:5:6850:6876	4938075	0	True				
ANR	4938127	EqualityExpression	magicsize != FILE_MAGICSIZE		4938075	0		!=			
ANR	4938128	Identifier	magicsize		4938075	0					
ANR	4938129	Identifier	FILE_MAGICSIZE		4938075	1					
ANR	4938130	CompoundStatement		12:34:176:176	4938075	1					
ANR	4938131	ExpressionStatement	"file_error ( ms , 0 , ""magic element size %lu != %lu"" , ( unsigned long ) ( size_t ) sizeof ( * magic ) , ( unsigned long ) FILE_MAGICSIZE )"	196:2:6883:7016	4938075	0	True				
ANR	4938132	CallExpression	"file_error ( ms , 0 , ""magic element size %lu != %lu"" , ( unsigned long ) ( size_t ) sizeof ( * magic ) , ( unsigned long ) FILE_MAGICSIZE )"		4938075	0					
ANR	4938133	Callee	file_error		4938075	0					
ANR	4938134	Identifier	file_error		4938075	0					
ANR	4938135	ArgumentList	ms		4938075	1					
ANR	4938136	Argument	ms		4938075	0					
ANR	4938137	Identifier	ms		4938075	0					
ANR	4938138	Argument	0		4938075	1					
ANR	4938139	PrimaryExpression	0		4938075	0					
ANR	4938140	Argument	"""magic element size %lu != %lu"""		4938075	2					
ANR	4938141	PrimaryExpression	"""magic element size %lu != %lu"""		4938075	0					
ANR	4938142	Argument	( unsigned long ) ( size_t ) sizeof ( * magic )		4938075	3					
ANR	4938143	CastExpression	( unsigned long ) ( size_t ) sizeof ( * magic )		4938075	0					
ANR	4938144	CastTarget	unsigned long		4938075	0					
ANR	4938145	CastExpression	( size_t ) sizeof ( * magic )		4938075	1					
ANR	4938146	CastTarget	size_t		4938075	0					
ANR	4938147	SizeofExpression	sizeof ( * magic )		4938075	1					
ANR	4938148	Sizeof	sizeof		4938075	0					
ANR	4938149	UnaryOperationExpression	* magic		4938075	1					
ANR	4938150	UnaryOperator	*		4938075	0					
ANR	4938151	Identifier	magic		4938075	1					
ANR	4938152	Argument	( unsigned long ) FILE_MAGICSIZE		4938075	4					
ANR	4938153	CastExpression	( unsigned long ) FILE_MAGICSIZE		4938075	0					
ANR	4938154	CastTarget	unsigned long		4938075	0					
ANR	4938155	Identifier	FILE_MAGICSIZE		4938075	1					
ANR	4938156	ReturnStatement	return - 1 ;	199:2:7020:7029	4938075	1	True				
ANR	4938157	UnaryOperationExpression	- 1		4938075	0					
ANR	4938158	UnaryOperator	-		4938075	0					
ANR	4938159	PrimaryExpression	1		4938075	1					
ANR	4938160	ExpressionStatement	ms -> file = fn	202:1:7036:7049	4938075	8	True				
ANR	4938161	AssignmentExpression	ms -> file = fn		4938075	0		=			
ANR	4938162	PtrMemberAccess	ms -> file		4938075	0					
ANR	4938163	Identifier	ms		4938075	0					
ANR	4938164	Identifier	file		4938075	1					
ANR	4938165	Identifier	fn		4938075	1					
ANR	4938166	IfStatement	if ( action == FILE_COMPILE )		4938075	9					
ANR	4938167	Condition	action == FILE_COMPILE	203:5:7104:7125	4938075	0	True				
ANR	4938168	EqualityExpression	action == FILE_COMPILE		4938075	0		==			
ANR	4938169	Identifier	action		4938075	0					
ANR	4938170	Identifier	FILE_COMPILE		4938075	1					
ANR	4938171	CompoundStatement		20:29:425:425	4938075	1					
ANR	4938172	ExpressionStatement	"rv = apprentice_load ( ms , & magic , & nmagic , fn , action )"	204:2:7132:7186	4938075	0	True				
ANR	4938173	AssignmentExpression	"rv = apprentice_load ( ms , & magic , & nmagic , fn , action )"		4938075	0		=			
ANR	4938174	Identifier	rv		4938075	0					
ANR	4938175	CallExpression	"apprentice_load ( ms , & magic , & nmagic , fn , action )"		4938075	1					
ANR	4938176	Callee	apprentice_load		4938075	0					
ANR	4938177	Identifier	apprentice_load		4938075	0					
ANR	4938178	ArgumentList	ms		4938075	1					
ANR	4938179	Argument	ms		4938075	0					
ANR	4938180	Identifier	ms		4938075	0					
ANR	4938181	Argument	& magic		4938075	1					
ANR	4938182	UnaryOperationExpression	& magic		4938075	0					
ANR	4938183	UnaryOperator	&		4938075	0					
ANR	4938184	Identifier	magic		4938075	1					
ANR	4938185	Argument	& nmagic		4938075	2					
ANR	4938186	UnaryOperationExpression	& nmagic		4938075	0					
ANR	4938187	UnaryOperator	&		4938075	0					
ANR	4938188	Identifier	nmagic		4938075	1					
ANR	4938189	Argument	fn		4938075	3					
ANR	4938190	Identifier	fn		4938075	0					
ANR	4938191	Argument	action		4938075	4					
ANR	4938192	Identifier	action		4938075	0					
ANR	4938193	IfStatement	if ( rv != 0 )		4938075	1					
ANR	4938194	Condition	rv != 0	205:6:7194:7200	4938075	0	True				
ANR	4938195	EqualityExpression	rv != 0		4938075	0		!=			
ANR	4938196	Identifier	rv		4938075	0					
ANR	4938197	PrimaryExpression	0		4938075	1					
ANR	4938198	CompoundStatement		22:15:500:500	4938075	1					
ANR	4938199	ReturnStatement	return - 1 ;	206:3:7208:7217	4938075	0	True				
ANR	4938200	UnaryOperationExpression	- 1		4938075	0					
ANR	4938201	UnaryOperator	-		4938075	0					
ANR	4938202	PrimaryExpression	1		4938075	1					
ANR	4938203	ExpressionStatement	"rv = apprentice_compile ( ms , & magic , & nmagic , fn )"	208:2:7225:7274	4938075	2	True				
ANR	4938204	AssignmentExpression	"rv = apprentice_compile ( ms , & magic , & nmagic , fn )"		4938075	0		=			
ANR	4938205	Identifier	rv		4938075	0					
ANR	4938206	CallExpression	"apprentice_compile ( ms , & magic , & nmagic , fn )"		4938075	1					
ANR	4938207	Callee	apprentice_compile		4938075	0					
ANR	4938208	Identifier	apprentice_compile		4938075	0					
ANR	4938209	ArgumentList	ms		4938075	1					
ANR	4938210	Argument	ms		4938075	0					
ANR	4938211	Identifier	ms		4938075	0					
ANR	4938212	Argument	& magic		4938075	1					
ANR	4938213	UnaryOperationExpression	& magic		4938075	0					
ANR	4938214	UnaryOperator	&		4938075	0					
ANR	4938215	Identifier	magic		4938075	1					
ANR	4938216	Argument	& nmagic		4938075	2					
ANR	4938217	UnaryOperationExpression	& nmagic		4938075	0					
ANR	4938218	UnaryOperator	&		4938075	0					
ANR	4938219	Identifier	nmagic		4938075	1					
ANR	4938220	Argument	fn		4938075	3					
ANR	4938221	Identifier	fn		4938075	0					
ANR	4938222	ExpressionStatement	free ( magic )	209:2:7278:7290	4938075	3	True				
ANR	4938223	CallExpression	free ( magic )		4938075	0					
ANR	4938224	Callee	free		4938075	0					
ANR	4938225	Identifier	free		4938075	0					
ANR	4938226	ArgumentList	magic		4938075	1					
ANR	4938227	Argument	magic		4938075	0					
ANR	4938228	Identifier	magic		4938075	0					
ANR	4938229	ReturnStatement	return rv ;	210:2:7294:7303	4938075	4	True				
ANR	4938230	Identifier	rv		4938075	0					
ANR	4938231	IfStatement	"if ( ( rv = apprentice_map ( ms , & magic , & nmagic , fn ) ) == - 1 )"		4938075	10					
ANR	4938232	Condition	"( rv = apprentice_map ( ms , & magic , & nmagic , fn ) ) == - 1"	213:5:7314:7366	4938075	0	True				
ANR	4938233	EqualityExpression	"( rv = apprentice_map ( ms , & magic , & nmagic , fn ) ) == - 1"		4938075	0		==			
ANR	4938234	AssignmentExpression	"rv = apprentice_map ( ms , & magic , & nmagic , fn )"		4938075	0		=			
ANR	4938235	Identifier	rv		4938075	0					
ANR	4938236	CallExpression	"apprentice_map ( ms , & magic , & nmagic , fn )"		4938075	1					
ANR	4938237	Callee	apprentice_map		4938075	0					
ANR	4938238	Identifier	apprentice_map		4938075	0					
ANR	4938239	ArgumentList	ms		4938075	1					
ANR	4938240	Argument	ms		4938075	0					
ANR	4938241	Identifier	ms		4938075	0					
ANR	4938242	Argument	& magic		4938075	1					
ANR	4938243	UnaryOperationExpression	& magic		4938075	0					
ANR	4938244	UnaryOperator	&		4938075	0					
ANR	4938245	Identifier	magic		4938075	1					
ANR	4938246	Argument	& nmagic		4938075	2					
ANR	4938247	UnaryOperationExpression	& nmagic		4938075	0					
ANR	4938248	UnaryOperator	&		4938075	0					
ANR	4938249	Identifier	nmagic		4938075	1					
ANR	4938250	Argument	fn		4938075	3					
ANR	4938251	Identifier	fn		4938075	0					
ANR	4938252	UnaryOperationExpression	- 1		4938075	1					
ANR	4938253	UnaryOperator	-		4938075	0					
ANR	4938254	PrimaryExpression	1		4938075	1					
ANR	4938255	CompoundStatement		30:60:666:666	4938075	1					
ANR	4938256	ExpressionStatement	"rv = apprentice_load ( ms , & magic , & nmagic , fn , action )"	216:2:7468:7522	4938075	0	True				
ANR	4938257	AssignmentExpression	"rv = apprentice_load ( ms , & magic , & nmagic , fn , action )"		4938075	0		=			
ANR	4938258	Identifier	rv		4938075	0					
ANR	4938259	CallExpression	"apprentice_load ( ms , & magic , & nmagic , fn , action )"		4938075	1					
ANR	4938260	Callee	apprentice_load		4938075	0					
ANR	4938261	Identifier	apprentice_load		4938075	0					
ANR	4938262	ArgumentList	ms		4938075	1					
ANR	4938263	Argument	ms		4938075	0					
ANR	4938264	Identifier	ms		4938075	0					
ANR	4938265	Argument	& magic		4938075	1					
ANR	4938266	UnaryOperationExpression	& magic		4938075	0					
ANR	4938267	UnaryOperator	&		4938075	0					
ANR	4938268	Identifier	magic		4938075	1					
ANR	4938269	Argument	& nmagic		4938075	2					
ANR	4938270	UnaryOperationExpression	& nmagic		4938075	0					
ANR	4938271	UnaryOperator	&		4938075	0					
ANR	4938272	Identifier	nmagic		4938075	1					
ANR	4938273	Argument	fn		4938075	3					
ANR	4938274	Identifier	fn		4938075	0					
ANR	4938275	Argument	action		4938075	4					
ANR	4938276	Identifier	action		4938075	0					
ANR	4938277	IfStatement	if ( rv != 0 )		4938075	1					
ANR	4938278	Condition	rv != 0	217:6:7530:7536	4938075	0	True				
ANR	4938279	EqualityExpression	rv != 0		4938075	0		!=			
ANR	4938280	Identifier	rv		4938075	0					
ANR	4938281	PrimaryExpression	0		4938075	1					
ANR	4938282	CompoundStatement		34:15:836:836	4938075	1					
ANR	4938283	ReturnStatement	return - 1 ;	218:3:7544:7553	4938075	0	True				
ANR	4938284	UnaryOperationExpression	- 1		4938075	0					
ANR	4938285	UnaryOperator	-		4938075	0					
ANR	4938286	PrimaryExpression	1		4938075	1					
ANR	4938287	ExpressionStatement	mapped = rv	222:1:7564:7575	4938075	11	True				
ANR	4938288	AssignmentExpression	mapped = rv		4938075	0		=			
ANR	4938289	Identifier	mapped		4938075	0					
ANR	4938290	Identifier	rv		4938075	1					
ANR	4938291	IfStatement	if ( ! magic )		4938075	12					
ANR	4938292	Condition	! magic	224:5:7583:7588	4938075	0	True				
ANR	4938293	UnaryOperationExpression	! magic		4938075	0					
ANR	4938294	UnaryOperator	!		4938075	0					
ANR	4938295	Identifier	magic		4938075	1					
ANR	4938296	CompoundStatement		41:13:888:888	4938075	1					
ANR	4938297	ExpressionStatement	"file_delmagic ( magic , mapped , nmagic )"	225:2:7595:7632	4938075	0	True				
ANR	4938298	CallExpression	"file_delmagic ( magic , mapped , nmagic )"		4938075	0					
ANR	4938299	Callee	file_delmagic		4938075	0					
ANR	4938300	Identifier	file_delmagic		4938075	0					
ANR	4938301	ArgumentList	magic		4938075	1					
ANR	4938302	Argument	magic		4938075	0					
ANR	4938303	Identifier	magic		4938075	0					
ANR	4938304	Argument	mapped		4938075	1					
ANR	4938305	Identifier	mapped		4938075	0					
ANR	4938306	Argument	nmagic		4938075	2					
ANR	4938307	Identifier	nmagic		4938075	0					
ANR	4938308	ReturnStatement	return - 1 ;	226:2:7636:7645	4938075	1	True				
ANR	4938309	UnaryOperationExpression	- 1		4938075	0					
ANR	4938310	UnaryOperator	-		4938075	0					
ANR	4938311	PrimaryExpression	1		4938075	1					
ANR	4938312	IfStatement	if ( ! ( ml = malloc ( sizeof ( * ml ) ) ) )		4938075	13					
ANR	4938313	Condition	! ( ml = malloc ( sizeof ( * ml ) ) )	229:5:7656:7684	4938075	0	True				
ANR	4938314	UnaryOperationExpression	! ( ml = malloc ( sizeof ( * ml ) ) )		4938075	0					
ANR	4938315	UnaryOperator	!		4938075	0					
ANR	4938316	AssignmentExpression	ml = malloc ( sizeof ( * ml ) )		4938075	1		=			
ANR	4938317	Identifier	ml		4938075	0					
ANR	4938318	CallExpression	malloc ( sizeof ( * ml ) )		4938075	1					
ANR	4938319	Callee	malloc		4938075	0					
ANR	4938320	Identifier	malloc		4938075	0					
ANR	4938321	ArgumentList	sizeof ( * ml )		4938075	1					
ANR	4938322	Argument	sizeof ( * ml )		4938075	0					
ANR	4938323	SizeofExpression	sizeof ( * ml )		4938075	0					
ANR	4938324	Sizeof	sizeof		4938075	0					
ANR	4938325	UnaryOperationExpression	* ml		4938075	1					
ANR	4938326	UnaryOperator	*		4938075	0					
ANR	4938327	Identifier	ml		4938075	1					
ANR	4938328	CompoundStatement		46:36:984:984	4938075	1					
ANR	4938329	ExpressionStatement	"file_delmagic ( magic , mapped , nmagic )"	230:2:7691:7728	4938075	0	True				
ANR	4938330	CallExpression	"file_delmagic ( magic , mapped , nmagic )"		4938075	0					
ANR	4938331	Callee	file_delmagic		4938075	0					
ANR	4938332	Identifier	file_delmagic		4938075	0					
ANR	4938333	ArgumentList	magic		4938075	1					
ANR	4938334	Argument	magic		4938075	0					
ANR	4938335	Identifier	magic		4938075	0					
ANR	4938336	Argument	mapped		4938075	1					
ANR	4938337	Identifier	mapped		4938075	0					
ANR	4938338	Argument	nmagic		4938075	2					
ANR	4938339	Identifier	nmagic		4938075	0					
ANR	4938340	ExpressionStatement	"file_oomem ( ms , sizeof ( * ml ) )"	231:2:7732:7761	4938075	1	True				
ANR	4938341	CallExpression	"file_oomem ( ms , sizeof ( * ml ) )"		4938075	0					
ANR	4938342	Callee	file_oomem		4938075	0					
ANR	4938343	Identifier	file_oomem		4938075	0					
ANR	4938344	ArgumentList	ms		4938075	1					
ANR	4938345	Argument	ms		4938075	0					
ANR	4938346	Identifier	ms		4938075	0					
ANR	4938347	Argument	sizeof ( * ml )		4938075	1					
ANR	4938348	SizeofExpression	sizeof ( * ml )		4938075	0					
ANR	4938349	Sizeof	sizeof		4938075	0					
ANR	4938350	UnaryOperationExpression	* ml		4938075	1					
ANR	4938351	UnaryOperator	*		4938075	0					
ANR	4938352	Identifier	ml		4938075	1					
ANR	4938353	ReturnStatement	return - 1 ;	232:2:7765:7774	4938075	2	True				
ANR	4938354	UnaryOperationExpression	- 1		4938075	0					
ANR	4938355	UnaryOperator	-		4938075	0					
ANR	4938356	PrimaryExpression	1		4938075	1					
ANR	4938357	ExpressionStatement	ml -> magic = magic	235:1:7781:7798	4938075	14	True				
ANR	4938358	AssignmentExpression	ml -> magic = magic		4938075	0		=			
ANR	4938359	PtrMemberAccess	ml -> magic		4938075	0					
ANR	4938360	Identifier	ml		4938075	0					
ANR	4938361	Identifier	magic		4938075	1					
ANR	4938362	Identifier	magic		4938075	1					
ANR	4938363	ExpressionStatement	ml -> nmagic = nmagic	236:1:7801:7820	4938075	15	True				
ANR	4938364	AssignmentExpression	ml -> nmagic = nmagic		4938075	0		=			
ANR	4938365	PtrMemberAccess	ml -> nmagic		4938075	0					
ANR	4938366	Identifier	ml		4938075	0					
ANR	4938367	Identifier	nmagic		4938075	1					
ANR	4938368	Identifier	nmagic		4938075	1					
ANR	4938369	ExpressionStatement	ml -> mapped = mapped	237:1:7823:7842	4938075	16	True				
ANR	4938370	AssignmentExpression	ml -> mapped = mapped		4938075	0		=			
ANR	4938371	PtrMemberAccess	ml -> mapped		4938075	0					
ANR	4938372	Identifier	ml		4938075	0					
ANR	4938373	Identifier	mapped		4938075	1					
ANR	4938374	Identifier	mapped		4938075	1					
ANR	4938375	ExpressionStatement	mlist -> prev -> next = ml	239:1:7846:7868	4938075	17	True				
ANR	4938376	AssignmentExpression	mlist -> prev -> next = ml		4938075	0		=			
ANR	4938377	PtrMemberAccess	mlist -> prev -> next		4938075	0					
ANR	4938378	PtrMemberAccess	mlist -> prev		4938075	0					
ANR	4938379	Identifier	mlist		4938075	0					
ANR	4938380	Identifier	prev		4938075	1					
ANR	4938381	Identifier	next		4938075	1					
ANR	4938382	Identifier	ml		4938075	1					
ANR	4938383	ExpressionStatement	ml -> prev = mlist -> prev	240:1:7871:7893	4938075	18	True				
ANR	4938384	AssignmentExpression	ml -> prev = mlist -> prev		4938075	0		=			
ANR	4938385	PtrMemberAccess	ml -> prev		4938075	0					
ANR	4938386	Identifier	ml		4938075	0					
ANR	4938387	Identifier	prev		4938075	1					
ANR	4938388	PtrMemberAccess	mlist -> prev		4938075	1					
ANR	4938389	Identifier	mlist		4938075	0					
ANR	4938390	Identifier	prev		4938075	1					
ANR	4938391	ExpressionStatement	ml -> next = mlist	241:1:7896:7912	4938075	19	True				
ANR	4938392	AssignmentExpression	ml -> next = mlist		4938075	0		=			
ANR	4938393	PtrMemberAccess	ml -> next		4938075	0					
ANR	4938394	Identifier	ml		4938075	0					
ANR	4938395	Identifier	next		4938075	1					
ANR	4938396	Identifier	mlist		4938075	1					
ANR	4938397	ExpressionStatement	mlist -> prev = ml	242:1:7915:7931	4938075	20	True				
ANR	4938398	AssignmentExpression	mlist -> prev = ml		4938075	0		=			
ANR	4938399	PtrMemberAccess	mlist -> prev		4938075	0					
ANR	4938400	Identifier	mlist		4938075	0					
ANR	4938401	Identifier	prev		4938075	1					
ANR	4938402	Identifier	ml		4938075	1					
ANR	4938403	ReturnStatement	return 0 ;	243:1:7934:7942	4938075	21	True				
ANR	4938404	PrimaryExpression	0		4938075	0					
ANR	4938405	ReturnType	static int		4938075	1					
ANR	4938406	Identifier	apprentice_1		4938075	2					
ANR	4938407	ParameterList	"RMagic * ms , const char * fn , int action , struct mlist * mlist"		4938075	3					
ANR	4938408	Parameter	RMagic * ms	184:24:6641:6650	4938075	0	True				
ANR	4938409	ParameterType	RMagic *		4938075	0					
ANR	4938410	Identifier	ms		4938075	1					
ANR	4938411	Parameter	const char * fn	184:36:6653:6666	4938075	1	True				
ANR	4938412	ParameterType	const char *		4938075	0					
ANR	4938413	Identifier	fn		4938075	1					
ANR	4938414	Parameter	int action	184:52:6669:6678	4938075	2	True				
ANR	4938415	ParameterType	int		4938075	0					
ANR	4938416	Identifier	action		4938075	1					
ANR	4938417	Parameter	struct mlist * mlist	184:64:6681:6699	4938075	3	True				
ANR	4938418	ParameterType	struct mlist *		4938075	0					
ANR	4938419	Identifier	mlist		4938075	1					
ANR	4938420	CFGEntryNode	ENTRY		4938075		True				
ANR	4938421	CFGExitNode	EXIT		4938075		True				
ANR	4938422	Symbol	magic		4938075						
ANR	4938423	Symbol	magicsize		4938075						
ANR	4938424	Symbol	rv		4938075						
ANR	4938425	Symbol	ml -> next		4938075						
ANR	4938426	Symbol	& magic		4938075						
ANR	4938427	Symbol	* ml		4938075						
ANR	4938428	Symbol	* mlist		4938075						
ANR	4938429	Symbol	mlist -> prev		4938075						
ANR	4938430	Symbol	ml -> prev		4938075						
ANR	4938431	Symbol	fn		4938075						
ANR	4938432	Symbol	ml -> nmagic		4938075						
ANR	4938433	Symbol	* ms		4938075						
ANR	4938434	Symbol	* mlist -> prev		4938075						
ANR	4938435	Symbol	ml -> magic		4938075						
ANR	4938436	Symbol	action		4938075						
ANR	4938437	Symbol	FILE_COMPILE		4938075						
ANR	4938438	Symbol	nmagic		4938075						
ANR	4938439	Symbol	ml		4938075						
ANR	4938440	Symbol	malloc		4938075						
ANR	4938441	Symbol	FILE_MAGICSIZE		4938075						
ANR	4938442	Symbol	NULL		4938075						
ANR	4938443	Symbol	apprentice_load		4938075						
ANR	4938444	Symbol	ms		4938075						
ANR	4938445	Symbol	mlist -> prev -> next		4938075						
ANR	4938446	Symbol	ms -> haderr		4938075						
ANR	4938447	Symbol	* * mlist		4938075						
ANR	4938448	Symbol	& nmagic		4938075						
ANR	4938449	Symbol	apprentice_compile		4938075						
ANR	4938450	Symbol	ms -> file		4938075						
ANR	4938451	Symbol	ml -> mapped		4938075						
ANR	4938452	Symbol	mapped		4938075						
ANR	4938453	Symbol	mlist		4938075						
ANR	4938454	Symbol	* magic		4938075						
ANR	4938455	Symbol	apprentice_map		4938075						
ANR	4938456	Function	file_delmagic	246:0:7947:8237							
ANR	4938457	FunctionDef	"file_delmagic (struct r_magic * p , int type , size_t entries)"		4938456	0					
ANR	4938458	CompoundStatement		246:64:8011:8237	4938456	0					
ANR	4938459	IfStatement	if ( p )		4938456	0					
ANR	4938460	Condition	p	247:5:8018:8018	4938456	0	True				
ANR	4938461	Identifier	p		4938456	0					
ANR	4938462	CompoundStatement		2:8:9:9	4938456	1					
ANR	4938463	SwitchStatement	switch ( type )		4938456	0					
ANR	4938464	Condition	type	248:10:8033:8036	4938456	0	True				
ANR	4938465	Identifier	type		4938456	0					
ANR	4938466	CompoundStatement		3:16:27:27	4938456	1					
ANR	4938467	Label	case 2 :	250:1:8055:8061	4938456	0	True				
ANR	4938468	ExpressionStatement	p --	251:2:8065:8068	4938456	1	True				
ANR	4938469	PostIncDecOperationExpression	p --		4938456	0					
ANR	4938470	Identifier	p		4938456	0					
ANR	4938471	IncDec	--		4938456	1					
ANR	4938472	ExpressionStatement	"( void ) munmap ( ( void * ) p , sizeof ( * p ) * ( entries + 1 ) )"	252:2:8072:8125	4938456	2	True				
ANR	4938473	CastExpression	"( void ) munmap ( ( void * ) p , sizeof ( * p ) * ( entries + 1 ) )"		4938456	0					
ANR	4938474	CastTarget	void		4938456	0					
ANR	4938475	CallExpression	"munmap ( ( void * ) p , sizeof ( * p ) * ( entries + 1 ) )"		4938456	1					
ANR	4938476	Callee	munmap		4938456	0					
ANR	4938477	Identifier	munmap		4938456	0					
ANR	4938478	ArgumentList	( void * ) p		4938456	1					
ANR	4938479	Argument	( void * ) p		4938456	0					
ANR	4938480	CastExpression	( void * ) p		4938456	0					
ANR	4938481	CastTarget	void *		4938456	0					
ANR	4938482	Identifier	p		4938456	1					
ANR	4938483	Argument	sizeof ( * p ) * ( entries + 1 )		4938456	1					
ANR	4938484	MultiplicativeExpression	sizeof ( * p ) * ( entries + 1 )		4938456	0		*			
ANR	4938485	SizeofExpression	sizeof ( * p )		4938456	0					
ANR	4938486	Sizeof	sizeof		4938456	0					
ANR	4938487	UnaryOperationExpression	* p		4938456	1					
ANR	4938488	UnaryOperator	*		4938456	0					
ANR	4938489	Identifier	p		4938456	1					
ANR	4938490	AdditiveExpression	entries + 1		4938456	1		+			
ANR	4938491	Identifier	entries		4938456	0					
ANR	4938492	PrimaryExpression	1		4938456	1					
ANR	4938493	BreakStatement	break ;	253:2:8129:8134	4938456	3	True				
ANR	4938494	Label	case 1 :	255:1:8144:8150	4938456	4	True				
ANR	4938495	ExpressionStatement	p --	256:2:8154:8157	4938456	5	True				
ANR	4938496	PostIncDecOperationExpression	p --		4938456	0					
ANR	4938497	Identifier	p		4938456	0					
ANR	4938498	IncDec	--		4938456	1					
ANR	4938499	Label	case 0 :	258:1:8178:8184	4938456	6	True				
ANR	4938500	ExpressionStatement	R_FREE ( p )	259:2:8188:8198	4938456	7	True				
ANR	4938501	CallExpression	R_FREE ( p )		4938456	0					
ANR	4938502	Callee	R_FREE		4938456	0					
ANR	4938503	Identifier	R_FREE		4938456	0					
ANR	4938504	ArgumentList	p		4938456	1					
ANR	4938505	Argument	p		4938456	0					
ANR	4938506	Identifier	p		4938456	0					
ANR	4938507	BreakStatement	break ;	260:2:8202:8207	4938456	8	True				
ANR	4938508	Label	default :	261:1:8210:8217	4938456	9	True				
ANR	4938509	Identifier	default		4938456	0					
ANR	4938510	ExpressionStatement	abort ( )	262:2:8221:8229	4938456	10	True				
ANR	4938511	CallExpression	abort ( )		4938456	0					
ANR	4938512	Callee	abort		4938456	0					
ANR	4938513	Identifier	abort		4938456	0					
ANR	4938514	ArgumentList			4938456	1					
ANR	4938515	ReturnType	void		4938456	1					
ANR	4938516	Identifier	file_delmagic		4938456	2					
ANR	4938517	ParameterList	"struct r_magic * p , int type , size_t entries"		4938456	3					
ANR	4938518	Parameter	struct r_magic * p	246:19:7966:7982	4938456	0	True				
ANR	4938519	ParameterType	struct r_magic *		4938456	0					
ANR	4938520	Identifier	p		4938456	1					
ANR	4938521	Parameter	int type	246:38:7985:7992	4938456	1	True				
ANR	4938522	ParameterType	int		4938456	0					
ANR	4938523	Identifier	type		4938456	1					
ANR	4938524	Parameter	size_t entries	246:48:7995:8008	4938456	2	True				
ANR	4938525	ParameterType	size_t		4938456	0					
ANR	4938526	Identifier	entries		4938456	1					
ANR	4938527	CFGEntryNode	ENTRY		4938456		True				
ANR	4938528	CFGExitNode	EXIT		4938456		True				
ANR	4938529	Symbol	p		4938456						
ANR	4938530	Symbol	entries		4938456						
ANR	4938531	Symbol	* p		4938456						
ANR	4938532	Symbol	type		4938456						
ANR	4938533	Function	file_apprentice	268:0:8298:9132							
ANR	4938534	FunctionDef	"file_apprentice (RMagic * ms , const char * fn , int action)"		4938533	0					
ANR	4938535	CompoundStatement		268:71:8369:9132	4938533	0					
ANR	4938536	IdentifierDeclStatement	"char * p , * mfn ;"	269:1:8372:8385	4938533	0	True				
ANR	4938537	IdentifierDecl	* p		4938533	0					
ANR	4938538	IdentifierDeclType	char *		4938533	0					
ANR	4938539	Identifier	p		4938533	1					
ANR	4938540	IdentifierDecl	* mfn		4938533	1					
ANR	4938541	IdentifierDeclType	char *		4938533	0					
ANR	4938542	Identifier	mfn		4938533	1					
ANR	4938543	IdentifierDeclStatement	"int file_err , errs = - 1 ;"	270:1:8388:8411	4938533	1	True				
ANR	4938544	IdentifierDecl	file_err		4938533	0					
ANR	4938545	IdentifierDeclType	int		4938533	0					
ANR	4938546	Identifier	file_err		4938533	1					
ANR	4938547	IdentifierDecl	errs = - 1		4938533	1					
ANR	4938548	IdentifierDeclType	int		4938533	0					
ANR	4938549	Identifier	errs		4938533	1					
ANR	4938550	AssignmentExpression	errs = - 1		4938533	2		=			
ANR	4938551	Identifier	errs		4938533	0					
ANR	4938552	UnaryOperationExpression	- 1		4938533	1					
ANR	4938553	UnaryOperator	-		4938533	0					
ANR	4938554	PrimaryExpression	1		4938533	1					
ANR	4938555	IdentifierDeclStatement	struct mlist * mlist ;	271:1:8414:8433	4938533	2	True				
ANR	4938556	IdentifierDecl	* mlist		4938533	0					
ANR	4938557	IdentifierDeclType	struct mlist *		4938533	0					
ANR	4938558	Identifier	mlist		4938533	1					
ANR	4938559	ExpressionStatement	init_file_tables ( )	273:1:8437:8456	4938533	3	True				
ANR	4938560	CallExpression	init_file_tables ( )		4938533	0					
ANR	4938561	Callee	init_file_tables		4938533	0					
ANR	4938562	Identifier	init_file_tables		4938533	0					
ANR	4938563	ArgumentList			4938533	1					
ANR	4938564	IfStatement	if ( ! fn )		4938533	4					
ANR	4938565	Condition	! fn	275:5:8464:8466	4938533	0	True				
ANR	4938566	UnaryOperationExpression	! fn		4938533	0					
ANR	4938567	UnaryOperator	!		4938533	0					
ANR	4938568	Identifier	fn		4938533	1					
ANR	4938569	CompoundStatement		8:10:99:99	4938533	1					
ANR	4938570	ExpressionStatement	"fn = getenv ( ""MAGIC"" )"	276:2:8473:8494	4938533	0	True				
ANR	4938571	AssignmentExpression	"fn = getenv ( ""MAGIC"" )"		4938533	0		=			
ANR	4938572	Identifier	fn		4938533	0					
ANR	4938573	CallExpression	"getenv ( ""MAGIC"" )"		4938533	1					
ANR	4938574	Callee	getenv		4938533	0					
ANR	4938575	Identifier	getenv		4938533	0					
ANR	4938576	ArgumentList	"""MAGIC"""		4938533	1					
ANR	4938577	Argument	"""MAGIC"""		4938533	0					
ANR	4938578	PrimaryExpression	"""MAGIC"""		4938533	0					
ANR	4938579	IfStatement	if ( ! fn )		4938533	5					
ANR	4938580	Condition	! fn	278:5:8504:8506	4938533	0	True				
ANR	4938581	UnaryOperationExpression	! fn		4938533	0					
ANR	4938582	UnaryOperator	!		4938533	0					
ANR	4938583	Identifier	fn		4938533	1					
ANR	4938584	CompoundStatement		11:10:139:139	4938533	1					
ANR	4938585	ExpressionStatement	fn = MAGICFILE	279:2:8513:8527	4938533	0	True				
ANR	4938586	AssignmentExpression	fn = MAGICFILE		4938533	0		=			
ANR	4938587	Identifier	fn		4938533	0					
ANR	4938588	Identifier	MAGICFILE		4938533	1					
ANR	4938589	IfStatement	if ( ! ( mfn = strdup ( fn ) ) )		4938533	6					
ANR	4938590	Condition	! ( mfn = strdup ( fn ) )	282:5:8538:8557	4938533	0	True				
ANR	4938591	UnaryOperationExpression	! ( mfn = strdup ( fn ) )		4938533	0					
ANR	4938592	UnaryOperator	!		4938533	0					
ANR	4938593	AssignmentExpression	mfn = strdup ( fn )		4938533	1		=			
ANR	4938594	Identifier	mfn		4938533	0					
ANR	4938595	CallExpression	strdup ( fn )		4938533	1					
ANR	4938596	Callee	strdup		4938533	0					
ANR	4938597	Identifier	strdup		4938533	0					
ANR	4938598	ArgumentList	fn		4938533	1					
ANR	4938599	Argument	fn		4938533	0					
ANR	4938600	Identifier	fn		4938533	0					
ANR	4938601	CompoundStatement		15:27:190:190	4938533	1					
ANR	4938602	ExpressionStatement	"file_oomem ( ms , strlen ( fn ) )"	283:2:8564:8592	4938533	0	True				
ANR	4938603	CallExpression	"file_oomem ( ms , strlen ( fn ) )"		4938533	0					
ANR	4938604	Callee	file_oomem		4938533	0					
ANR	4938605	Identifier	file_oomem		4938533	0					
ANR	4938606	ArgumentList	ms		4938533	1					
ANR	4938607	Argument	ms		4938533	0					
ANR	4938608	Identifier	ms		4938533	0					
ANR	4938609	Argument	strlen ( fn )		4938533	1					
ANR	4938610	CallExpression	strlen ( fn )		4938533	0					
ANR	4938611	Callee	strlen		4938533	0					
ANR	4938612	Identifier	strlen		4938533	0					
ANR	4938613	ArgumentList	fn		4938533	1					
ANR	4938614	Argument	fn		4938533	0					
ANR	4938615	Identifier	fn		4938533	0					
ANR	4938616	ReturnStatement	return NULL ;	284:2:8596:8607	4938533	1	True				
ANR	4938617	Identifier	NULL		4938533	0					
ANR	4938618	ExpressionStatement	fn = mfn	286:1:8613:8621	4938533	7	True				
ANR	4938619	AssignmentExpression	fn = mfn		4938533	0		=			
ANR	4938620	Identifier	fn		4938533	0					
ANR	4938621	Identifier	mfn		4938533	1					
ANR	4938622	IfStatement	if ( ! ( mlist = malloc ( sizeof ( * mlist ) ) ) )		4938533	8					
ANR	4938623	Condition	! ( mlist = malloc ( sizeof ( * mlist ) ) )	288:5:8629:8663	4938533	0	True				
ANR	4938624	UnaryOperationExpression	! ( mlist = malloc ( sizeof ( * mlist ) ) )		4938533	0					
ANR	4938625	UnaryOperator	!		4938533	0					
ANR	4938626	AssignmentExpression	mlist = malloc ( sizeof ( * mlist ) )		4938533	1		=			
ANR	4938627	Identifier	mlist		4938533	0					
ANR	4938628	CallExpression	malloc ( sizeof ( * mlist ) )		4938533	1					
ANR	4938629	Callee	malloc		4938533	0					
ANR	4938630	Identifier	malloc		4938533	0					
ANR	4938631	ArgumentList	sizeof ( * mlist )		4938533	1					
ANR	4938632	Argument	sizeof ( * mlist )		4938533	0					
ANR	4938633	SizeofExpression	sizeof ( * mlist )		4938533	0					
ANR	4938634	Sizeof	sizeof		4938533	0					
ANR	4938635	UnaryOperationExpression	* mlist		4938533	1					
ANR	4938636	UnaryOperator	*		4938533	0					
ANR	4938637	Identifier	mlist		4938533	1					
ANR	4938638	CompoundStatement		21:42:296:296	4938533	1					
ANR	4938639	ExpressionStatement	free ( mfn )	289:2:8670:8680	4938533	0	True				
ANR	4938640	CallExpression	free ( mfn )		4938533	0					
ANR	4938641	Callee	free		4938533	0					
ANR	4938642	Identifier	free		4938533	0					
ANR	4938643	ArgumentList	mfn		4938533	1					
ANR	4938644	Argument	mfn		4938533	0					
ANR	4938645	Identifier	mfn		4938533	0					
ANR	4938646	ExpressionStatement	"file_oomem ( ms , sizeof ( * mlist ) )"	290:2:8684:8716	4938533	1	True				
ANR	4938647	CallExpression	"file_oomem ( ms , sizeof ( * mlist ) )"		4938533	0					
ANR	4938648	Callee	file_oomem		4938533	0					
ANR	4938649	Identifier	file_oomem		4938533	0					
ANR	4938650	ArgumentList	ms		4938533	1					
ANR	4938651	Argument	ms		4938533	0					
ANR	4938652	Identifier	ms		4938533	0					
ANR	4938653	Argument	sizeof ( * mlist )		4938533	1					
ANR	4938654	SizeofExpression	sizeof ( * mlist )		4938533	0					
ANR	4938655	Sizeof	sizeof		4938533	0					
ANR	4938656	UnaryOperationExpression	* mlist		4938533	1					
ANR	4938657	UnaryOperator	*		4938533	0					
ANR	4938658	Identifier	mlist		4938533	1					
ANR	4938659	ReturnStatement	return NULL ;	291:2:8720:8731	4938533	2	True				
ANR	4938660	Identifier	NULL		4938533	0					
ANR	4938661	ExpressionStatement	mlist -> next = mlist -> prev = mlist	293:1:8737:8770	4938533	9	True				
ANR	4938662	AssignmentExpression	mlist -> next = mlist -> prev = mlist		4938533	0		=			
ANR	4938663	PtrMemberAccess	mlist -> next		4938533	0					
ANR	4938664	Identifier	mlist		4938533	0					
ANR	4938665	Identifier	next		4938533	1					
ANR	4938666	AssignmentExpression	mlist -> prev = mlist		4938533	1		=			
ANR	4938667	PtrMemberAccess	mlist -> prev		4938533	0					
ANR	4938668	Identifier	mlist		4938533	0					
ANR	4938669	Identifier	prev		4938533	1					
ANR	4938670	Identifier	mlist		4938533	1					
ANR	4938671	WhileStatement	while ( fn )		4938533	10					
ANR	4938672	Condition	fn	295:8:8781:8782	4938533	0	True				
ANR	4938673	Identifier	fn		4938533	0					
ANR	4938674	CompoundStatement		28:12:415:415	4938533	1					
ANR	4938675	ExpressionStatement	"p = strchr ( fn , PATHSEP )"	296:2:8789:8813	4938533	0	True				
ANR	4938676	AssignmentExpression	"p = strchr ( fn , PATHSEP )"		4938533	0		=			
ANR	4938677	Identifier	p		4938533	0					
ANR	4938678	CallExpression	"strchr ( fn , PATHSEP )"		4938533	1					
ANR	4938679	Callee	strchr		4938533	0					
ANR	4938680	Identifier	strchr		4938533	0					
ANR	4938681	ArgumentList	fn		4938533	1					
ANR	4938682	Argument	fn		4938533	0					
ANR	4938683	Identifier	fn		4938533	0					
ANR	4938684	Argument	PATHSEP		4938533	1					
ANR	4938685	Identifier	PATHSEP		4938533	0					
ANR	4938686	IfStatement	if ( p )		4938533	1					
ANR	4938687	Condition	p	297:6:8821:8821	4938533	0	True				
ANR	4938688	Identifier	p		4938533	0					
ANR	4938689	CompoundStatement		30:9:454:454	4938533	1					
ANR	4938690	ExpressionStatement	* p ++ = '\\0'	298:3:8829:8840	4938533	0	True				
ANR	4938691	AssignmentExpression	* p ++ = '\\0'		4938533	0		=			
ANR	4938692	UnaryOperationExpression	* p ++		4938533	0					
ANR	4938693	UnaryOperator	*		4938533	0					
ANR	4938694	PostIncDecOperationExpression	p ++		4938533	1					
ANR	4938695	Identifier	p		4938533	0					
ANR	4938696	IncDec	++		4938533	1					
ANR	4938697	PrimaryExpression	'\\0'		4938533	1					
ANR	4938698	IfStatement	if ( * fn == '\\0' )		4938533	2					
ANR	4938699	Condition	* fn == '\\0'	300:6:8852:8862	4938533	0	True				
ANR	4938700	EqualityExpression	* fn == '\\0'		4938533	0		==			
ANR	4938701	UnaryOperationExpression	* fn		4938533	0					
ANR	4938702	UnaryOperator	*		4938533	0					
ANR	4938703	Identifier	fn		4938533	1					
ANR	4938704	PrimaryExpression	'\\0'		4938533	1					
ANR	4938705	CompoundStatement		33:19:495:495	4938533	1					
ANR	4938706	BreakStatement	break ;	301:3:8870:8875	4938533	0	True				
ANR	4938707	ExpressionStatement	"file_err = apprentice_1 ( ms , fn , action , mlist )"	303:2:8883:8930	4938533	3	True				
ANR	4938708	AssignmentExpression	"file_err = apprentice_1 ( ms , fn , action , mlist )"		4938533	0		=			
ANR	4938709	Identifier	file_err		4938533	0					
ANR	4938710	CallExpression	"apprentice_1 ( ms , fn , action , mlist )"		4938533	1					
ANR	4938711	Callee	apprentice_1		4938533	0					
ANR	4938712	Identifier	apprentice_1		4938533	0					
ANR	4938713	ArgumentList	ms		4938533	1					
ANR	4938714	Argument	ms		4938533	0					
ANR	4938715	Identifier	ms		4938533	0					
ANR	4938716	Argument	fn		4938533	1					
ANR	4938717	Identifier	fn		4938533	0					
ANR	4938718	Argument	action		4938533	2					
ANR	4938719	Identifier	action		4938533	0					
ANR	4938720	Argument	mlist		4938533	3					
ANR	4938721	Identifier	mlist		4938533	0					
ANR	4938722	ExpressionStatement	"errs = R_MAX ( errs , file_err )"	304:2:8934:8963	4938533	4	True				
ANR	4938723	AssignmentExpression	"errs = R_MAX ( errs , file_err )"		4938533	0		=			
ANR	4938724	Identifier	errs		4938533	0					
ANR	4938725	CallExpression	"R_MAX ( errs , file_err )"		4938533	1					
ANR	4938726	Callee	R_MAX		4938533	0					
ANR	4938727	Identifier	R_MAX		4938533	0					
ANR	4938728	ArgumentList	errs		4938533	1					
ANR	4938729	Argument	errs		4938533	0					
ANR	4938730	Identifier	errs		4938533	0					
ANR	4938731	Argument	file_err		4938533	1					
ANR	4938732	Identifier	file_err		4938533	0					
ANR	4938733	ExpressionStatement	fn = p	305:2:8967:8973	4938533	5	True				
ANR	4938734	AssignmentExpression	fn = p		4938533	0		=			
ANR	4938735	Identifier	fn		4938533	0					
ANR	4938736	Identifier	p		4938533	1					
ANR	4938737	IfStatement	if ( errs == - 1 )		4938533	11					
ANR	4938738	Condition	errs == - 1	307:5:8983:8992	4938533	0	True				
ANR	4938739	EqualityExpression	errs == - 1		4938533	0		==			
ANR	4938740	Identifier	errs		4938533	0					
ANR	4938741	UnaryOperationExpression	- 1		4938533	1					
ANR	4938742	UnaryOperator	-		4938533	0					
ANR	4938743	PrimaryExpression	1		4938533	1					
ANR	4938744	CompoundStatement		40:17:625:625	4938533	1					
ANR	4938745	ExpressionStatement	free ( mfn )	308:2:8999:9009	4938533	0	True				
ANR	4938746	CallExpression	free ( mfn )		4938533	0					
ANR	4938747	Callee	free		4938533	0					
ANR	4938748	Identifier	free		4938533	0					
ANR	4938749	ArgumentList	mfn		4938533	1					
ANR	4938750	Argument	mfn		4938533	0					
ANR	4938751	Identifier	mfn		4938533	0					
ANR	4938752	ExpressionStatement	R_FREE ( mlist )	309:2:9013:9027	4938533	1	True				
ANR	4938753	CallExpression	R_FREE ( mlist )		4938533	0					
ANR	4938754	Callee	R_FREE		4938533	0					
ANR	4938755	Identifier	R_FREE		4938533	0					
ANR	4938756	ArgumentList	mlist		4938533	1					
ANR	4938757	Argument	mlist		4938533	0					
ANR	4938758	Identifier	mlist		4938533	0					
ANR	4938759	ExpressionStatement	"file_error ( ms , 0 , ""could not find any magic files!"" )"	310:2:9031:9084	4938533	2	True				
ANR	4938760	CallExpression	"file_error ( ms , 0 , ""could not find any magic files!"" )"		4938533	0					
ANR	4938761	Callee	file_error		4938533	0					
ANR	4938762	Identifier	file_error		4938533	0					
ANR	4938763	ArgumentList	ms		4938533	1					
ANR	4938764	Argument	ms		4938533	0					
ANR	4938765	Identifier	ms		4938533	0					
ANR	4938766	Argument	0		4938533	1					
ANR	4938767	PrimaryExpression	0		4938533	0					
ANR	4938768	Argument	"""could not find any magic files!"""		4938533	2					
ANR	4938769	PrimaryExpression	"""could not find any magic files!"""		4938533	0					
ANR	4938770	ReturnStatement	return NULL ;	311:2:9088:9099	4938533	3	True				
ANR	4938771	Identifier	NULL		4938533	0					
ANR	4938772	ExpressionStatement	free ( mfn )	313:1:9105:9115	4938533	12	True				
ANR	4938773	CallExpression	free ( mfn )		4938533	0					
ANR	4938774	Callee	free		4938533	0					
ANR	4938775	Identifier	free		4938533	0					
ANR	4938776	ArgumentList	mfn		4938533	1					
ANR	4938777	Argument	mfn		4938533	0					
ANR	4938778	Identifier	mfn		4938533	0					
ANR	4938779	ReturnStatement	return mlist ;	314:1:9118:9130	4938533	13	True				
ANR	4938780	Identifier	mlist		4938533	0					
ANR	4938781	ReturnType	struct mlist *		4938533	1					
ANR	4938782	Identifier	file_apprentice		4938533	2					
ANR	4938783	ParameterList	"RMagic * ms , const char * fn , int action"		4938533	3					
ANR	4938784	Parameter	RMagic * ms	268:31:8329:8338	4938533	0	True				
ANR	4938785	ParameterType	RMagic *		4938533	0					
ANR	4938786	Identifier	ms		4938533	1					
ANR	4938787	Parameter	const char * fn	268:43:8341:8354	4938533	1	True				
ANR	4938788	ParameterType	const char *		4938533	0					
ANR	4938789	Identifier	fn		4938533	1					
ANR	4938790	Parameter	int action	268:59:8357:8366	4938533	2	True				
ANR	4938791	ParameterType	int		4938533	0					
ANR	4938792	Identifier	action		4938533	1					
ANR	4938793	CFGEntryNode	ENTRY		4938533		True				
ANR	4938794	CFGExitNode	EXIT		4938533		True				
ANR	4938795	Symbol	errs		4938533						
ANR	4938796	Symbol	malloc		4938533						
ANR	4938797	Symbol	NULL		4938533						
ANR	4938798	Symbol	mlist -> next		4938533						
ANR	4938799	Symbol	ms		4938533						
ANR	4938800	Symbol	* mlist		4938533						
ANR	4938801	Symbol	mlist -> prev		4938533						
ANR	4938802	Symbol	PATHSEP		4938533						
ANR	4938803	Symbol	apprentice_1		4938533						
ANR	4938804	Symbol	* p ++		4938533						
ANR	4938805	Symbol	fn		4938533						
ANR	4938806	Symbol	strchr		4938533						
ANR	4938807	Symbol	* fn		4938533						
ANR	4938808	Symbol	file_err		4938533						
ANR	4938809	Symbol	p		4938533						
ANR	4938810	Symbol	strlen		4938533						
ANR	4938811	Symbol	mfn		4938533						
ANR	4938812	Symbol	MAGICFILE		4938533						
ANR	4938813	Symbol	R_MAX		4938533						
ANR	4938814	Symbol	action		4938533						
ANR	4938815	Symbol	mlist		4938533						
ANR	4938816	Symbol	strdup		4938533						
ANR	4938817	Symbol	getenv		4938533						
ANR	4938818	Function	apprentice_r_magic_strength	320:0:9199:10984							
ANR	4938819	FunctionDef	apprentice_r_magic_strength (const struct r_magic * m)		4938818	0					
ANR	4938820	CompoundStatement		320:67:9266:10984	4938818	0					
ANR	4938821	Statement	define	321:1:9269:9274	4938818	0	True				
ANR	4938822	Statement	MULT	321:8:9276:9279	4938818	1	True				
ANR	4938823	Statement	10	321:13:9281:9282	4938818	2	True				
ANR	4938824	IdentifierDeclStatement	size_t val = 2 * MULT ;	322:1:9285:9306	4938818	3	True				
ANR	4938825	IdentifierDecl	val = 2 * MULT		4938818	0					
ANR	4938826	IdentifierDeclType	size_t		4938818	0					
ANR	4938827	Identifier	val		4938818	1					
ANR	4938828	AssignmentExpression	val = 2 * MULT		4938818	2		=			
ANR	4938829	Identifier	val		4938818	0					
ANR	4938830	MultiplicativeExpression	2 * MULT		4938818	1		*			
ANR	4938831	PrimaryExpression	2		4938818	0					
ANR	4938832	Identifier	MULT		4938818	1					
ANR	4938833	SwitchStatement	switch ( m -> type )		4938818	4					
ANR	4938834	Condition	m -> type	324:9:9342:9348	4938818	0	True				
ANR	4938835	PtrMemberAccess	m -> type		4938818	0					
ANR	4938836	Identifier	m		4938818	0					
ANR	4938837	Identifier	type		4938818	1					
ANR	4938838	CompoundStatement		5:18:84:84	4938818	1					
ANR	4938839	Label	case FILE_DEFAULT :	325:1:9354:9371	4938818	0	True				
ANR	4938840	Identifier	FILE_DEFAULT		4938818	0					
ANR	4938841	ReturnStatement	return 0 ;	326:2:9407:9415	4938818	1	True				
ANR	4938842	PrimaryExpression	0		4938818	0					
ANR	4938843	Label	case FILE_BYTE :	327:1:9418:9432	4938818	2	True				
ANR	4938844	Identifier	FILE_BYTE		4938818	0					
ANR	4938845	ExpressionStatement	val += 1 * MULT	328:2:9436:9451	4938818	3	True				
ANR	4938846	AssignmentExpression	val += 1 * MULT		4938818	0		+=			
ANR	4938847	Identifier	val		4938818	0					
ANR	4938848	MultiplicativeExpression	1 * MULT		4938818	1		*			
ANR	4938849	PrimaryExpression	1		4938818	0					
ANR	4938850	Identifier	MULT		4938818	1					
ANR	4938851	BreakStatement	break ;	329:2:9455:9460	4938818	4	True				
ANR	4938852	Label	case FILE_SHORT :	330:1:9463:9478	4938818	5	True				
ANR	4938853	Identifier	FILE_SHORT		4938818	0					
ANR	4938854	Label	case FILE_LESHORT :	331:1:9481:9498	4938818	6	True				
ANR	4938855	Identifier	FILE_LESHORT		4938818	0					
ANR	4938856	Label	case FILE_BESHORT :	332:1:9501:9518	4938818	7	True				
ANR	4938857	Identifier	FILE_BESHORT		4938818	0					
ANR	4938858	ExpressionStatement	val += 2 * MULT	333:2:9522:9537	4938818	8	True				
ANR	4938859	AssignmentExpression	val += 2 * MULT		4938818	0		+=			
ANR	4938860	Identifier	val		4938818	0					
ANR	4938861	MultiplicativeExpression	2 * MULT		4938818	1		*			
ANR	4938862	PrimaryExpression	2		4938818	0					
ANR	4938863	Identifier	MULT		4938818	1					
ANR	4938864	BreakStatement	break ;	334:2:9541:9546	4938818	9	True				
ANR	4938865	Label	case FILE_LONG :	335:1:9549:9563	4938818	10	True				
ANR	4938866	Identifier	FILE_LONG		4938818	0					
ANR	4938867	Label	case FILE_LELONG :	336:1:9566:9582	4938818	11	True				
ANR	4938868	Identifier	FILE_LELONG		4938818	0					
ANR	4938869	Label	case FILE_BELONG :	337:1:9585:9601	4938818	12	True				
ANR	4938870	Identifier	FILE_BELONG		4938818	0					
ANR	4938871	Label	case FILE_MELONG :	338:1:9604:9620	4938818	13	True				
ANR	4938872	Identifier	FILE_MELONG		4938818	0					
ANR	4938873	ExpressionStatement	val += 4 * MULT	339:2:9624:9639	4938818	14	True				
ANR	4938874	AssignmentExpression	val += 4 * MULT		4938818	0		+=			
ANR	4938875	Identifier	val		4938818	0					
ANR	4938876	MultiplicativeExpression	4 * MULT		4938818	1		*			
ANR	4938877	PrimaryExpression	4		4938818	0					
ANR	4938878	Identifier	MULT		4938818	1					
ANR	4938879	BreakStatement	break ;	340:2:9643:9648	4938818	15	True				
ANR	4938880	Label	case FILE_PSTRING :	341:1:9651:9668	4938818	16	True				
ANR	4938881	Identifier	FILE_PSTRING		4938818	0					
ANR	4938882	Label	case FILE_STRING :	342:1:9671:9687	4938818	17	True				
ANR	4938883	Identifier	FILE_STRING		4938818	0					
ANR	4938884	ExpressionStatement	val += m -> vallen * MULT	343:2:9691:9714	4938818	18	True				
ANR	4938885	AssignmentExpression	val += m -> vallen * MULT		4938818	0		+=			
ANR	4938886	Identifier	val		4938818	0					
ANR	4938887	MultiplicativeExpression	m -> vallen * MULT		4938818	1		*			
ANR	4938888	PtrMemberAccess	m -> vallen		4938818	0					
ANR	4938889	Identifier	m		4938818	0					
ANR	4938890	Identifier	vallen		4938818	1					
ANR	4938891	Identifier	MULT		4938818	1					
ANR	4938892	BreakStatement	break ;	344:2:9718:9723	4938818	19	True				
ANR	4938893	Label	case FILE_BESTRING16 :	345:1:9726:9746	4938818	20	True				
ANR	4938894	Identifier	FILE_BESTRING16		4938818	0					
ANR	4938895	Label	case FILE_LESTRING16 :	346:1:9749:9769	4938818	21	True				
ANR	4938896	Identifier	FILE_LESTRING16		4938818	0					
ANR	4938897	ExpressionStatement	val += m -> vallen * MULT / 2	347:2:9773:9800	4938818	22	True				
ANR	4938898	AssignmentExpression	val += m -> vallen * MULT / 2		4938818	0		+=			
ANR	4938899	Identifier	val		4938818	0					
ANR	4938900	MultiplicativeExpression	m -> vallen * MULT / 2		4938818	1		*			
ANR	4938901	PtrMemberAccess	m -> vallen		4938818	0					
ANR	4938902	Identifier	m		4938818	0					
ANR	4938903	Identifier	vallen		4938818	1					
ANR	4938904	MultiplicativeExpression	MULT / 2		4938818	1		/			
ANR	4938905	Identifier	MULT		4938818	0					
ANR	4938906	PrimaryExpression	2		4938818	1					
ANR	4938907	BreakStatement	break ;	348:2:9804:9809	4938818	23	True				
ANR	4938908	Label	case FILE_SEARCH :	349:1:9812:9828	4938818	24	True				
ANR	4938909	Identifier	FILE_SEARCH		4938818	0					
ANR	4938910	Label	case FILE_REGEX :	350:1:9831:9846	4938818	25	True				
ANR	4938911	Identifier	FILE_REGEX		4938818	0					
ANR	4938912	ExpressionStatement	"val += m -> vallen * R_MAX ( MULT / m -> vallen , 1 )"	351:2:9850:9896	4938818	26	True				
ANR	4938913	AssignmentExpression	"val += m -> vallen * R_MAX ( MULT / m -> vallen , 1 )"		4938818	0		+=			
ANR	4938914	Identifier	val		4938818	0					
ANR	4938915	MultiplicativeExpression	"m -> vallen * R_MAX ( MULT / m -> vallen , 1 )"		4938818	1		*			
ANR	4938916	PtrMemberAccess	m -> vallen		4938818	0					
ANR	4938917	Identifier	m		4938818	0					
ANR	4938918	Identifier	vallen		4938818	1					
ANR	4938919	CallExpression	"R_MAX ( MULT / m -> vallen , 1 )"		4938818	1					
ANR	4938920	Callee	R_MAX		4938818	0					
ANR	4938921	Identifier	R_MAX		4938818	0					
ANR	4938922	ArgumentList	MULT / m -> vallen		4938818	1					
ANR	4938923	Argument	MULT / m -> vallen		4938818	0					
ANR	4938924	MultiplicativeExpression	MULT / m -> vallen		4938818	0		/			
ANR	4938925	Identifier	MULT		4938818	0					
ANR	4938926	PtrMemberAccess	m -> vallen		4938818	1					
ANR	4938927	Identifier	m		4938818	0					
ANR	4938928	Identifier	vallen		4938818	1					
ANR	4938929	Argument	1		4938818	1					
ANR	4938930	PrimaryExpression	1		4938818	0					
ANR	4938931	BreakStatement	break ;	352:2:9900:9905	4938818	27	True				
ANR	4938932	Label	case FILE_DATE :	353:1:9908:9922	4938818	28	True				
ANR	4938933	Identifier	FILE_DATE		4938818	0					
ANR	4938934	Label	case FILE_LEDATE :	354:1:9925:9941	4938818	29	True				
ANR	4938935	Identifier	FILE_LEDATE		4938818	0					
ANR	4938936	Label	case FILE_BEDATE :	355:1:9944:9960	4938818	30	True				
ANR	4938937	Identifier	FILE_BEDATE		4938818	0					
ANR	4938938	Label	case FILE_MEDATE :	356:1:9963:9979	4938818	31	True				
ANR	4938939	Identifier	FILE_MEDATE		4938818	0					
ANR	4938940	Label	case FILE_LDATE :	357:1:9982:9997	4938818	32	True				
ANR	4938941	Identifier	FILE_LDATE		4938818	0					
ANR	4938942	Label	case FILE_LELDATE :	358:1:10000:10017	4938818	33	True				
ANR	4938943	Identifier	FILE_LELDATE		4938818	0					
ANR	4938944	Label	case FILE_BELDATE :	359:1:10020:10037	4938818	34	True				
ANR	4938945	Identifier	FILE_BELDATE		4938818	0					
ANR	4938946	Label	case FILE_MELDATE :	360:1:10040:10057	4938818	35	True				
ANR	4938947	Identifier	FILE_MELDATE		4938818	0					
ANR	4938948	Label	case FILE_FLOAT :	361:1:10060:10075	4938818	36	True				
ANR	4938949	Identifier	FILE_FLOAT		4938818	0					
ANR	4938950	Label	case FILE_BEFLOAT :	362:1:10078:10095	4938818	37	True				
ANR	4938951	Identifier	FILE_BEFLOAT		4938818	0					
ANR	4938952	Label	case FILE_LEFLOAT :	363:1:10098:10115	4938818	38	True				
ANR	4938953	Identifier	FILE_LEFLOAT		4938818	0					
ANR	4938954	ExpressionStatement	val += 4 * MULT	364:2:10119:10134	4938818	39	True				
ANR	4938955	AssignmentExpression	val += 4 * MULT		4938818	0		+=			
ANR	4938956	Identifier	val		4938818	0					
ANR	4938957	MultiplicativeExpression	4 * MULT		4938818	1		*			
ANR	4938958	PrimaryExpression	4		4938818	0					
ANR	4938959	Identifier	MULT		4938818	1					
ANR	4938960	BreakStatement	break ;	365:2:10138:10143	4938818	40	True				
ANR	4938961	Label	case FILE_QUAD :	366:1:10146:10160	4938818	41	True				
ANR	4938962	Identifier	FILE_QUAD		4938818	0					
ANR	4938963	Label	case FILE_BEQUAD :	367:1:10163:10179	4938818	42	True				
ANR	4938964	Identifier	FILE_BEQUAD		4938818	0					
ANR	4938965	Label	case FILE_LEQUAD :	368:1:10182:10198	4938818	43	True				
ANR	4938966	Identifier	FILE_LEQUAD		4938818	0					
ANR	4938967	Label	case FILE_QDATE :	369:1:10201:10216	4938818	44	True				
ANR	4938968	Identifier	FILE_QDATE		4938818	0					
ANR	4938969	Label	case FILE_LEQDATE :	370:1:10219:10236	4938818	45	True				
ANR	4938970	Identifier	FILE_LEQDATE		4938818	0					
ANR	4938971	Label	case FILE_BEQDATE :	371:1:10239:10256	4938818	46	True				
ANR	4938972	Identifier	FILE_BEQDATE		4938818	0					
ANR	4938973	Label	case FILE_QLDATE :	372:1:10259:10275	4938818	47	True				
ANR	4938974	Identifier	FILE_QLDATE		4938818	0					
ANR	4938975	Label	case FILE_LEQLDATE :	373:1:10278:10296	4938818	48	True				
ANR	4938976	Identifier	FILE_LEQLDATE		4938818	0					
ANR	4938977	Label	case FILE_BEQLDATE :	374:1:10299:10317	4938818	49	True				
ANR	4938978	Identifier	FILE_BEQLDATE		4938818	0					
ANR	4938979	Label	case FILE_DOUBLE :	375:1:10320:10336	4938818	50	True				
ANR	4938980	Identifier	FILE_DOUBLE		4938818	0					
ANR	4938981	Label	case FILE_BEDOUBLE :	376:1:10339:10357	4938818	51	True				
ANR	4938982	Identifier	FILE_BEDOUBLE		4938818	0					
ANR	4938983	Label	case FILE_LEDOUBLE :	377:1:10360:10378	4938818	52	True				
ANR	4938984	Identifier	FILE_LEDOUBLE		4938818	0					
ANR	4938985	ExpressionStatement	val += 8 * MULT	378:2:10382:10397	4938818	53	True				
ANR	4938986	AssignmentExpression	val += 8 * MULT		4938818	0		+=			
ANR	4938987	Identifier	val		4938818	0					
ANR	4938988	MultiplicativeExpression	8 * MULT		4938818	1		*			
ANR	4938989	PrimaryExpression	8		4938818	0					
ANR	4938990	Identifier	MULT		4938818	1					
ANR	4938991	BreakStatement	break ;	379:2:10401:10406	4938818	54	True				
ANR	4938992	Label	default :	380:1:10409:10416	4938818	55	True				
ANR	4938993	Identifier	default		4938818	0					
ANR	4938994	ExpressionStatement	"eprintf ( ""Bad type %d\\n"" , m -> type )"	381:2:10420:10454	4938818	56	True				
ANR	4938995	CallExpression	"eprintf ( ""Bad type %d\\n"" , m -> type )"		4938818	0					
ANR	4938996	Callee	eprintf		4938818	0					
ANR	4938997	Identifier	eprintf		4938818	0					
ANR	4938998	ArgumentList	"""Bad type %d\\n"""		4938818	1					
ANR	4938999	Argument	"""Bad type %d\\n"""		4938818	0					
ANR	4939000	PrimaryExpression	"""Bad type %d\\n"""		4938818	0					
ANR	4939001	Argument	m -> type		4938818	1					
ANR	4939002	PtrMemberAccess	m -> type		4938818	0					
ANR	4939003	Identifier	m		4938818	0					
ANR	4939004	Identifier	type		4938818	1					
ANR	4939005	ExpressionStatement	abort ( )	382:2:10458:10465	4938818	57	True				
ANR	4939006	CallExpression	abort ( )		4938818	0					
ANR	4939007	Callee	abort		4938818	0					
ANR	4939008	Identifier	abort		4938818	0					
ANR	4939009	ArgumentList			4938818	1					
ANR	4939010	SwitchStatement	switch ( m -> reln )		4938818	5					
ANR	4939011	Condition	m -> reln	385:9:10480:10486	4938818	0	True				
ANR	4939012	PtrMemberAccess	m -> reln		4938818	0					
ANR	4939013	Identifier	m		4938818	0					
ANR	4939014	Identifier	reln		4938818	1					
ANR	4939015	CompoundStatement		66:18:1222:1222	4938818	1					
ANR	4939016	Label	case 'x' :	386:1:10492:10500	4938818	0	True				
ANR	4939017	Label	case '!' :	387:1:10535:10543	4938818	1	True				
ANR	4939018	ExpressionStatement	val = 0	388:2:10592:10599	4938818	2	True				
ANR	4939019	AssignmentExpression	val = 0		4938818	0		=			
ANR	4939020	Identifier	val		4938818	0					
ANR	4939021	PrimaryExpression	0		4938818	1					
ANR	4939022	BreakStatement	break ;	389:2:10603:10608	4938818	3	True				
ANR	4939023	Label	case '=' :	390:1:10611:10619	4938818	4	True				
ANR	4939024	ExpressionStatement	val += MULT	391:2:10649:10660	4938818	5	True				
ANR	4939025	AssignmentExpression	val += MULT		4938818	0		+=			
ANR	4939026	Identifier	val		4938818	0					
ANR	4939027	Identifier	MULT		4938818	1					
ANR	4939028	BreakStatement	break ;	392:2:10664:10669	4938818	6	True				
ANR	4939029	Label	case '>' :	393:1:10672:10680	4938818	7	True				
ANR	4939030	Label	case '<' :	394:1:10683:10691	4938818	8	True				
ANR	4939031	ExpressionStatement	val -= 2 * MULT	395:2:10734:10749	4938818	9	True				
ANR	4939032	AssignmentExpression	val -= 2 * MULT		4938818	0		-=			
ANR	4939033	Identifier	val		4938818	0					
ANR	4939034	MultiplicativeExpression	2 * MULT		4938818	1		*			
ANR	4939035	PrimaryExpression	2		4938818	0					
ANR	4939036	Identifier	MULT		4938818	1					
ANR	4939037	BreakStatement	break ;	396:2:10753:10758	4938818	10	True				
ANR	4939038	Label	case '^' :	397:1:10761:10769	4938818	11	True				
ANR	4939039	Label	case '&' :	398:1:10772:10780	4938818	12	True				
ANR	4939040	ExpressionStatement	val -= MULT	399:2:10828:10839	4938818	13	True				
ANR	4939041	AssignmentExpression	val -= MULT		4938818	0		-=			
ANR	4939042	Identifier	val		4938818	0					
ANR	4939043	Identifier	MULT		4938818	1					
ANR	4939044	BreakStatement	break ;	400:2:10843:10848	4938818	14	True				
ANR	4939045	Label	default :	401:1:10851:10858	4938818	15	True				
ANR	4939046	Identifier	default		4938818	0					
ANR	4939047	ExpressionStatement	"eprintf ( ""Bad relation %c\\n"" , m -> reln )"	402:2:10862:10900	4938818	16	True				
ANR	4939048	CallExpression	"eprintf ( ""Bad relation %c\\n"" , m -> reln )"		4938818	0					
ANR	4939049	Callee	eprintf		4938818	0					
ANR	4939050	Identifier	eprintf		4938818	0					
ANR	4939051	ArgumentList	"""Bad relation %c\\n"""		4938818	1					
ANR	4939052	Argument	"""Bad relation %c\\n"""		4938818	0					
ANR	4939053	PrimaryExpression	"""Bad relation %c\\n"""		4938818	0					
ANR	4939054	Argument	m -> reln		4938818	1					
ANR	4939055	PtrMemberAccess	m -> reln		4938818	0					
ANR	4939056	Identifier	m		4938818	0					
ANR	4939057	Identifier	reln		4938818	1					
ANR	4939058	ExpressionStatement	abort ( )	403:2:10904:10911	4938818	17	True				
ANR	4939059	CallExpression	abort ( )		4938818	0					
ANR	4939060	Callee	abort		4938818	0					
ANR	4939061	Identifier	abort		4938818	0					
ANR	4939062	ArgumentList			4938818	1					
ANR	4939063	ReturnStatement	return val ? val : 1 ;	405:1:10917:10935	4938818	6	True				
ANR	4939064	ConditionalExpression	val ? val : 1		4938818	0					
ANR	4939065	Condition	val		4938818	0					
ANR	4939066	Identifier	val		4938818	0					
ANR	4939067	Identifier	val		4938818	1					
ANR	4939068	PrimaryExpression	1		4938818	2					
ANR	4939069	ReturnType	static size_t		4938818	1					
ANR	4939070	Identifier	apprentice_r_magic_strength		4938818	2					
ANR	4939071	ParameterList	const struct r_magic * m		4938818	3					
ANR	4939072	Parameter	const struct r_magic * m	320:42:9241:9263	4938818	0	True				
ANR	4939073	ParameterType	const struct r_magic *		4938818	0					
ANR	4939074	Identifier	m		4938818	1					
ANR	4939075	CFGEntryNode	ENTRY		4938818		True				
ANR	4939076	CFGExitNode	EXIT		4938818		True				
ANR	4939077	Symbol	val		4938818						
ANR	4939078	Symbol	m -> type		4938818						
ANR	4939079	Symbol	MULT		4938818						
ANR	4939080	Symbol	* m		4938818						
ANR	4939081	Symbol	m -> reln		4938818						
ANR	4939082	Symbol	R_MAX		4938818						
ANR	4939083	Symbol	m -> vallen		4938818						
ANR	4939084	Symbol	m		4938818						
ANR	4939085	Function	apprentice_sort	411:0:11064:11374							
ANR	4939086	FunctionDef	"apprentice_sort (const void * a , const void * b)"		4939085	0					
ANR	4939087	CompoundStatement		411:57:11121:11374	4939085	0					
ANR	4939088	IdentifierDeclStatement	const struct r_magic_entry * ma = a ;	412:1:11124:11158	4939085	0	True				
ANR	4939089	IdentifierDecl	* ma = a		4939085	0					
ANR	4939090	IdentifierDeclType	const struct r_magic_entry *		4939085	0					
ANR	4939091	Identifier	ma		4939085	1					
ANR	4939092	AssignmentExpression	* ma = a		4939085	2		=			
ANR	4939093	Identifier	a		4939085	0					
ANR	4939094	Identifier	a		4939085	1					
ANR	4939095	IdentifierDeclStatement	const struct r_magic_entry * mb = b ;	413:1:11161:11195	4939085	1	True				
ANR	4939096	IdentifierDecl	* mb = b		4939085	0					
ANR	4939097	IdentifierDeclType	const struct r_magic_entry *		4939085	0					
ANR	4939098	Identifier	mb		4939085	1					
ANR	4939099	AssignmentExpression	* mb = b		4939085	2		=			
ANR	4939100	Identifier	b		4939085	0					
ANR	4939101	Identifier	b		4939085	1					
ANR	4939102	IdentifierDeclStatement	size_t sa = apprentice_r_magic_strength ( ma -> mp ) ;	414:1:11198:11246	4939085	2	True				
ANR	4939103	IdentifierDecl	sa = apprentice_r_magic_strength ( ma -> mp )		4939085	0					
ANR	4939104	IdentifierDeclType	size_t		4939085	0					
ANR	4939105	Identifier	sa		4939085	1					
ANR	4939106	AssignmentExpression	sa = apprentice_r_magic_strength ( ma -> mp )		4939085	2		=			
ANR	4939107	Identifier	sa		4939085	0					
ANR	4939108	CallExpression	apprentice_r_magic_strength ( ma -> mp )		4939085	1					
ANR	4939109	Callee	apprentice_r_magic_strength		4939085	0					
ANR	4939110	Identifier	apprentice_r_magic_strength		4939085	0					
ANR	4939111	ArgumentList	ma -> mp		4939085	1					
ANR	4939112	Argument	ma -> mp		4939085	0					
ANR	4939113	PtrMemberAccess	ma -> mp		4939085	0					
ANR	4939114	Identifier	ma		4939085	0					
ANR	4939115	Identifier	mp		4939085	1					
ANR	4939116	IdentifierDeclStatement	size_t sb = apprentice_r_magic_strength ( mb -> mp ) ;	415:1:11249:11297	4939085	3	True				
ANR	4939117	IdentifierDecl	sb = apprentice_r_magic_strength ( mb -> mp )		4939085	0					
ANR	4939118	IdentifierDeclType	size_t		4939085	0					
ANR	4939119	Identifier	sb		4939085	1					
ANR	4939120	AssignmentExpression	sb = apprentice_r_magic_strength ( mb -> mp )		4939085	2		=			
ANR	4939121	Identifier	sb		4939085	0					
ANR	4939122	CallExpression	apprentice_r_magic_strength ( mb -> mp )		4939085	1					
ANR	4939123	Callee	apprentice_r_magic_strength		4939085	0					
ANR	4939124	Identifier	apprentice_r_magic_strength		4939085	0					
ANR	4939125	ArgumentList	mb -> mp		4939085	1					
ANR	4939126	Argument	mb -> mp		4939085	0					
ANR	4939127	PtrMemberAccess	mb -> mp		4939085	0					
ANR	4939128	Identifier	mb		4939085	0					
ANR	4939129	Identifier	mp		4939085	1					
ANR	4939130	IfStatement	if ( sa == sb )		4939085	4					
ANR	4939131	Condition	sa == sb	416:5:11304:11311	4939085	0	True				
ANR	4939132	EqualityExpression	sa == sb		4939085	0		==			
ANR	4939133	Identifier	sa		4939085	0					
ANR	4939134	Identifier	sb		4939085	1					
ANR	4939135	CompoundStatement		6:15:192:192	4939085	1					
ANR	4939136	ReturnStatement	return 0 ;	417:2:11318:11326	4939085	0	True				
ANR	4939137	PrimaryExpression	0		4939085	0					
ANR	4939138	IfStatement	if ( sa > sb )		4939085	5					
ANR	4939139	Condition	sa > sb	419:5:11336:11342	4939085	0	True				
ANR	4939140	RelationalExpression	sa > sb		4939085	0		>			
ANR	4939141	Identifier	sa		4939085	0					
ANR	4939142	Identifier	sb		4939085	1					
ANR	4939143	CompoundStatement		9:14:223:223	4939085	1					
ANR	4939144	ReturnStatement	return - 1 ;	420:2:11349:11358	4939085	0	True				
ANR	4939145	UnaryOperationExpression	- 1		4939085	0					
ANR	4939146	UnaryOperator	-		4939085	0					
ANR	4939147	PrimaryExpression	1		4939085	1					
ANR	4939148	ReturnStatement	return 1 ;	422:1:11364:11372	4939085	6	True				
ANR	4939149	PrimaryExpression	1		4939085	0					
ANR	4939150	ReturnType	static int		4939085	1					
ANR	4939151	Identifier	apprentice_sort		4939085	2					
ANR	4939152	ParameterList	"const void * a , const void * b"		4939085	3					
ANR	4939153	Parameter	const void * a	411:27:11091:11103	4939085	0	True				
ANR	4939154	ParameterType	const void *		4939085	0					
ANR	4939155	Identifier	a		4939085	1					
ANR	4939156	Parameter	const void * b	411:42:11106:11118	4939085	1	True				
ANR	4939157	ParameterType	const void *		4939085	0					
ANR	4939158	Identifier	b		4939085	1					
ANR	4939159	CFGEntryNode	ENTRY		4939085		True				
ANR	4939160	CFGExitNode	EXIT		4939085		True				
ANR	4939161	Symbol	a		4939085						
ANR	4939162	Symbol	apprentice_r_magic_strength		4939085						
ANR	4939163	Symbol	b		4939085						
ANR	4939164	Symbol	mb -> mp		4939085						
ANR	4939165	Symbol	ma		4939085						
ANR	4939166	Symbol	mb		4939085						
ANR	4939167	Symbol	ma -> mp		4939085						
ANR	4939168	Symbol	* mb		4939085						
ANR	4939169	Symbol	* ma		4939085						
ANR	4939170	Symbol	sa		4939085						
ANR	4939171	Symbol	sb		4939085						
ANR	4939172	Function	set_test_type	425:0:11377:12624							
ANR	4939173	FunctionDef	"set_test_type (struct r_magic * mstart , struct r_magic * m)"		4939172	0					
ANR	4939174	CompoundStatement		425:69:11446:12624	4939172	0					
ANR	4939175	SwitchStatement	switch ( m -> type )		4939172	0					
ANR	4939176	Condition	m -> type	426:9:11457:11463	4939172	0	True				
ANR	4939177	PtrMemberAccess	m -> type		4939172	0					
ANR	4939178	Identifier	m		4939172	0					
ANR	4939179	Identifier	type		4939172	1					
ANR	4939180	CompoundStatement		2:18:19:19	4939172	1					
ANR	4939181	Label	case FILE_BYTE :	427:1:11469:11483	4939172	0	True				
ANR	4939182	Identifier	FILE_BYTE		4939172	0					
ANR	4939183	Label	case FILE_SHORT :	428:1:11486:11501	4939172	1	True				
ANR	4939184	Identifier	FILE_SHORT		4939172	0					
ANR	4939185	Label	case FILE_LONG :	429:1:11504:11518	4939172	2	True				
ANR	4939186	Identifier	FILE_LONG		4939172	0					
ANR	4939187	Label	case FILE_DATE :	430:1:11521:11535	4939172	3	True				
ANR	4939188	Identifier	FILE_DATE		4939172	0					
ANR	4939189	Label	case FILE_BESHORT :	431:1:11538:11555	4939172	4	True				
ANR	4939190	Identifier	FILE_BESHORT		4939172	0					
ANR	4939191	Label	case FILE_BELONG :	432:1:11558:11574	4939172	5	True				
ANR	4939192	Identifier	FILE_BELONG		4939172	0					
ANR	4939193	Label	case FILE_BEDATE :	433:1:11577:11593	4939172	6	True				
ANR	4939194	Identifier	FILE_BEDATE		4939172	0					
ANR	4939195	Label	case FILE_LESHORT :	434:1:11596:11613	4939172	7	True				
ANR	4939196	Identifier	FILE_LESHORT		4939172	0					
ANR	4939197	Label	case FILE_LELONG :	435:1:11616:11632	4939172	8	True				
ANR	4939198	Identifier	FILE_LELONG		4939172	0					
ANR	4939199	Label	case FILE_LEDATE :	436:1:11635:11651	4939172	9	True				
ANR	4939200	Identifier	FILE_LEDATE		4939172	0					
ANR	4939201	Label	case FILE_LDATE :	437:1:11654:11669	4939172	10	True				
ANR	4939202	Identifier	FILE_LDATE		4939172	0					
ANR	4939203	Label	case FILE_BELDATE :	438:1:11672:11689	4939172	11	True				
ANR	4939204	Identifier	FILE_BELDATE		4939172	0					
ANR	4939205	Label	case FILE_LELDATE :	439:1:11692:11709	4939172	12	True				
ANR	4939206	Identifier	FILE_LELDATE		4939172	0					
ANR	4939207	Label	case FILE_MEDATE :	440:1:11712:11728	4939172	13	True				
ANR	4939208	Identifier	FILE_MEDATE		4939172	0					
ANR	4939209	Label	case FILE_MELDATE :	441:1:11731:11748	4939172	14	True				
ANR	4939210	Identifier	FILE_MELDATE		4939172	0					
ANR	4939211	Label	case FILE_MELONG :	442:1:11751:11767	4939172	15	True				
ANR	4939212	Identifier	FILE_MELONG		4939172	0					
ANR	4939213	Label	case FILE_QUAD :	443:1:11770:11784	4939172	16	True				
ANR	4939214	Identifier	FILE_QUAD		4939172	0					
ANR	4939215	Label	case FILE_LEQUAD :	444:1:11787:11803	4939172	17	True				
ANR	4939216	Identifier	FILE_LEQUAD		4939172	0					
ANR	4939217	Label	case FILE_BEQUAD :	445:1:11806:11822	4939172	18	True				
ANR	4939218	Identifier	FILE_BEQUAD		4939172	0					
ANR	4939219	Label	case FILE_QDATE :	446:1:11825:11840	4939172	19	True				
ANR	4939220	Identifier	FILE_QDATE		4939172	0					
ANR	4939221	Label	case FILE_LEQDATE :	447:1:11843:11860	4939172	20	True				
ANR	4939222	Identifier	FILE_LEQDATE		4939172	0					
ANR	4939223	Label	case FILE_BEQDATE :	448:1:11863:11880	4939172	21	True				
ANR	4939224	Identifier	FILE_BEQDATE		4939172	0					
ANR	4939225	Label	case FILE_QLDATE :	449:1:11883:11899	4939172	22	True				
ANR	4939226	Identifier	FILE_QLDATE		4939172	0					
ANR	4939227	Label	case FILE_LEQLDATE :	450:1:11902:11920	4939172	23	True				
ANR	4939228	Identifier	FILE_LEQLDATE		4939172	0					
ANR	4939229	Label	case FILE_BEQLDATE :	451:1:11923:11941	4939172	24	True				
ANR	4939230	Identifier	FILE_BEQLDATE		4939172	0					
ANR	4939231	Label	case FILE_FLOAT :	452:1:11944:11959	4939172	25	True				
ANR	4939232	Identifier	FILE_FLOAT		4939172	0					
ANR	4939233	Label	case FILE_BEFLOAT :	453:1:11962:11979	4939172	26	True				
ANR	4939234	Identifier	FILE_BEFLOAT		4939172	0					
ANR	4939235	Label	case FILE_LEFLOAT :	454:1:11982:11999	4939172	27	True				
ANR	4939236	Identifier	FILE_LEFLOAT		4939172	0					
ANR	4939237	Label	case FILE_DOUBLE :	455:1:12002:12018	4939172	28	True				
ANR	4939238	Identifier	FILE_DOUBLE		4939172	0					
ANR	4939239	Label	case FILE_BEDOUBLE :	456:1:12021:12039	4939172	29	True				
ANR	4939240	Identifier	FILE_BEDOUBLE		4939172	0					
ANR	4939241	Label	case FILE_LEDOUBLE :	457:1:12042:12060	4939172	30	True				
ANR	4939242	Identifier	FILE_LEDOUBLE		4939172	0					
ANR	4939243	Label	case FILE_STRING :	458:1:12063:12079	4939172	31	True				
ANR	4939244	Identifier	FILE_STRING		4939172	0					
ANR	4939245	Label	case FILE_PSTRING :	459:1:12082:12099	4939172	32	True				
ANR	4939246	Identifier	FILE_PSTRING		4939172	0					
ANR	4939247	Label	case FILE_BESTRING16 :	460:1:12102:12122	4939172	33	True				
ANR	4939248	Identifier	FILE_BESTRING16		4939172	0					
ANR	4939249	Label	case FILE_LESTRING16 :	461:1:12125:12145	4939172	34	True				
ANR	4939250	Identifier	FILE_LESTRING16		4939172	0					
ANR	4939251	ExpressionStatement	mstart -> flag |= BINTEST	463:2:12179:12202	4939172	35	True				
ANR	4939252	AssignmentExpression	mstart -> flag |= BINTEST		4939172	0		|=			
ANR	4939253	PtrMemberAccess	mstart -> flag		4939172	0					
ANR	4939254	Identifier	mstart		4939172	0					
ANR	4939255	Identifier	flag		4939172	1					
ANR	4939256	Identifier	BINTEST		4939172	1					
ANR	4939257	BreakStatement	break ;	464:2:12206:12211	4939172	36	True				
ANR	4939258	Label	case FILE_REGEX :	465:1:12214:12229	4939172	37	True				
ANR	4939259	Identifier	FILE_REGEX		4939172	0					
ANR	4939260	Label	case FILE_SEARCH :	466:1:12232:12248	4939172	38	True				
ANR	4939261	Identifier	FILE_SEARCH		4939172	0					
ANR	4939262	IfStatement	"if ( file_looks_utf8 ( ( const ut8 * ) m -> value . s , m -> vallen , NULL , NULL ) == 0 )"		4939172	39					
ANR	4939263	Condition	"file_looks_utf8 ( ( const ut8 * ) m -> value . s , m -> vallen , NULL , NULL ) == 0"	468:6:12299:12367	4939172	0	True				
ANR	4939264	EqualityExpression	"file_looks_utf8 ( ( const ut8 * ) m -> value . s , m -> vallen , NULL , NULL ) == 0"		4939172	0		==			
ANR	4939265	CallExpression	"file_looks_utf8 ( ( const ut8 * ) m -> value . s , m -> vallen , NULL , NULL )"		4939172	0					
ANR	4939266	Callee	file_looks_utf8		4939172	0					
ANR	4939267	Identifier	file_looks_utf8		4939172	0					
ANR	4939268	ArgumentList	( const ut8 * ) m -> value . s		4939172	1					
ANR	4939269	Argument	( const ut8 * ) m -> value . s		4939172	0					
ANR	4939270	CastExpression	( const ut8 * ) m -> value . s		4939172	0					
ANR	4939271	CastTarget	const ut8 *		4939172	0					
ANR	4939272	MemberAccess	m -> value . s		4939172	1					
ANR	4939273	PtrMemberAccess	m -> value		4939172	0					
ANR	4939274	Identifier	m		4939172	0					
ANR	4939275	Identifier	value		4939172	1					
ANR	4939276	Identifier	s		4939172	1					
ANR	4939277	Argument	m -> vallen		4939172	1					
ANR	4939278	PtrMemberAccess	m -> vallen		4939172	0					
ANR	4939279	Identifier	m		4939172	0					
ANR	4939280	Identifier	vallen		4939172	1					
ANR	4939281	Argument	NULL		4939172	2					
ANR	4939282	Identifier	NULL		4939172	0					
ANR	4939283	Argument	NULL		4939172	3					
ANR	4939284	Identifier	NULL		4939172	0					
ANR	4939285	PrimaryExpression	0		4939172	1					
ANR	4939286	CompoundStatement		44:77:923:923	4939172	1					
ANR	4939287	ExpressionStatement	mstart -> flag |= BINTEST	469:3:12375:12398	4939172	0	True				
ANR	4939288	AssignmentExpression	mstart -> flag |= BINTEST		4939172	0		|=			
ANR	4939289	PtrMemberAccess	mstart -> flag		4939172	0					
ANR	4939290	Identifier	mstart		4939172	0					
ANR	4939291	Identifier	flag		4939172	1					
ANR	4939292	Identifier	BINTEST		4939172	1					
ANR	4939293	BreakStatement	break ;	471:2:12406:12411	4939172	40	True				
ANR	4939294	Label	case FILE_DEFAULT :	472:1:12414:12431	4939172	41	True				
ANR	4939295	Identifier	FILE_DEFAULT		4939172	0					
ANR	4939296	BreakStatement	break ;	475:2:12517:12522	4939172	42	True				
ANR	4939297	Label	case FILE_INVALID :	476:1:12525:12542	4939172	43	True				
ANR	4939298	Identifier	FILE_INVALID		4939172	0					
ANR	4939299	Label	default :	477:1:12545:12552	4939172	44	True				
ANR	4939300	Identifier	default		4939172	0					
ANR	4939301	BreakStatement	break ;	479:2:12614:12619	4939172	45	True				
ANR	4939302	ReturnType	static void		4939172	1					
ANR	4939303	Identifier	set_test_type		4939172	2					
ANR	4939304	ParameterList	"struct r_magic * mstart , struct r_magic * m"		4939172	3					
ANR	4939305	Parameter	struct r_magic * mstart	425:26:11403:11424	4939172	0	True				
ANR	4939306	ParameterType	struct r_magic *		4939172	0					
ANR	4939307	Identifier	mstart		4939172	1					
ANR	4939308	Parameter	struct r_magic * m	425:50:11427:11443	4939172	1	True				
ANR	4939309	ParameterType	struct r_magic *		4939172	0					
ANR	4939310	Identifier	m		4939172	1					
ANR	4939311	CFGEntryNode	ENTRY		4939172		True				
ANR	4939312	CFGExitNode	EXIT		4939172		True				
ANR	4939313	Symbol	m -> type		4939172						
ANR	4939314	Symbol	NULL		4939172						
ANR	4939315	Symbol	m -> value		4939172						
ANR	4939316	Symbol	mstart -> flag		4939172						
ANR	4939317	Symbol	BINTEST		4939172						
ANR	4939318	Symbol	* m		4939172						
ANR	4939319	Symbol	* mstart		4939172						
ANR	4939320	Symbol	m -> value . s		4939172						
ANR	4939321	Symbol	m -> vallen		4939172						
ANR	4939322	Symbol	file_looks_utf8		4939172						
ANR	4939323	Symbol	m		4939172						
ANR	4939324	Symbol	mstart		4939172						
ANR	4939325	Function	load_1	486:0:12662:13800							
ANR	4939326	FunctionDef	"load_1 (RMagic * ms , int action , const char * file , int * errs , struct r_magic_entry * * marray , ut32 * marraycount)"		4939325	0					
ANR	4939327	CompoundStatement		486:122:12784:13800	4939325	0					
ANR	4939328	IdentifierDeclStatement	char line [ BUFSIZ ] ;	487:1:12787:12804	4939325	0	True				
ANR	4939329	IdentifierDecl	line [ BUFSIZ ]		4939325	0					
ANR	4939330	IdentifierDeclType	char [ BUFSIZ ]		4939325	0					
ANR	4939331	Identifier	line		4939325	1					
ANR	4939332	Identifier	BUFSIZ		4939325	2					
ANR	4939333	IdentifierDeclStatement	size_t lineno = 0 ;	488:1:12807:12824	4939325	1	True				
ANR	4939334	IdentifierDecl	lineno = 0		4939325	0					
ANR	4939335	IdentifierDeclType	size_t		4939325	0					
ANR	4939336	Identifier	lineno		4939325	1					
ANR	4939337	AssignmentExpression	lineno = 0		4939325	2		=			
ANR	4939338	Identifier	lineno		4939325	0					
ANR	4939339	PrimaryExpression	0		4939325	1					
ANR	4939340	IdentifierDeclStatement	"FILE * f = r_sandbox_fopen ( ms -> file = file , ""r"" ) ;"	489:1:12827:12875	4939325	2	True				
ANR	4939341	IdentifierDecl	"* f = r_sandbox_fopen ( ms -> file = file , ""r"" )"		4939325	0					
ANR	4939342	IdentifierDeclType	FILE *		4939325	0					
ANR	4939343	Identifier	f		4939325	1					
ANR	4939344	AssignmentExpression	"* f = r_sandbox_fopen ( ms -> file = file , ""r"" )"		4939325	2		=			
ANR	4939345	Identifier	f		4939325	0					
ANR	4939346	CallExpression	"r_sandbox_fopen ( ms -> file = file , ""r"" )"		4939325	1					
ANR	4939347	Callee	r_sandbox_fopen		4939325	0					
ANR	4939348	Identifier	r_sandbox_fopen		4939325	0					
ANR	4939349	ArgumentList	ms -> file = file		4939325	1					
ANR	4939350	Argument	ms -> file = file		4939325	0					
ANR	4939351	AssignmentExpression	ms -> file = file		4939325	0		=			
ANR	4939352	PtrMemberAccess	ms -> file		4939325	0					
ANR	4939353	Identifier	ms		4939325	0					
ANR	4939354	Identifier	file		4939325	1					
ANR	4939355	Identifier	file		4939325	1					
ANR	4939356	Argument	"""r"""		4939325	1					
ANR	4939357	PrimaryExpression	"""r"""		4939325	0					
ANR	4939358	IfStatement	if ( ! f )		4939325	3					
ANR	4939359	Condition	! f	490:5:12882:12883	4939325	0	True				
ANR	4939360	UnaryOperationExpression	! f		4939325	0					
ANR	4939361	UnaryOperator	!		4939325	0					
ANR	4939362	Identifier	f		4939325	1					
ANR	4939363	CompoundStatement		5:9:101:101	4939325	1					
ANR	4939364	IfStatement	if ( errno != ENOENT )		4939325	0					
ANR	4939365	Condition	errno != ENOENT	491:6:12894:12908	4939325	0	True				
ANR	4939366	EqualityExpression	errno != ENOENT		4939325	0		!=			
ANR	4939367	Identifier	errno		4939325	0					
ANR	4939368	Identifier	ENOENT		4939325	1					
ANR	4939369	CompoundStatement		6:23:126:126	4939325	1					
ANR	4939370	ExpressionStatement	"file_error ( ms , errno , ""cannot read magic file `%s'"" , file )"	492:3:12916:12975	4939325	0	True				
ANR	4939371	CallExpression	"file_error ( ms , errno , ""cannot read magic file `%s'"" , file )"		4939325	0					
ANR	4939372	Callee	file_error		4939325	0					
ANR	4939373	Identifier	file_error		4939325	0					
ANR	4939374	ArgumentList	ms		4939325	1					
ANR	4939375	Argument	ms		4939325	0					
ANR	4939376	Identifier	ms		4939325	0					
ANR	4939377	Argument	errno		4939325	1					
ANR	4939378	Identifier	errno		4939325	0					
ANR	4939379	Argument	"""cannot read magic file `%s'"""		4939325	2					
ANR	4939380	PrimaryExpression	"""cannot read magic file `%s'"""		4939325	0					
ANR	4939381	Argument	file		4939325	3					
ANR	4939382	Identifier	file		4939325	0					
ANR	4939383	ExpressionStatement	( * errs ) ++	494:2:12983:12992	4939325	1	True				
ANR	4939384	PostIncDecOperationExpression	( * errs ) ++		4939325	0					
ANR	4939385	UnaryOperationExpression	* errs		4939325	0					
ANR	4939386	UnaryOperator	*		4939325	0					
ANR	4939387	Identifier	errs		4939325	1					
ANR	4939388	IncDec	++		4939325	1					
ANR	4939389	ElseStatement	else		4939325	0					
ANR	4939390	CompoundStatement		10:8:217:217	4939325	0					
ANR	4939391	ForStatement	"for ( ms -> line = 1 ; fgets ( line , sizeof ( line ) , f ) != NULL ; ms -> line ++ )"		4939325	0					
ANR	4939392	ForInit	ms -> line = 1 ;	497:7:13044:13056	4939325	0	True				
ANR	4939393	AssignmentExpression	ms -> line = 1		4939325	0		=			
ANR	4939394	PtrMemberAccess	ms -> line		4939325	0					
ANR	4939395	Identifier	ms		4939325	0					
ANR	4939396	Identifier	line		4939325	1					
ANR	4939397	PrimaryExpression	1		4939325	1					
ANR	4939398	Condition	"fgets ( line , sizeof ( line ) , f ) != NULL"	497:21:13058:13095	4939325	1	True				
ANR	4939399	EqualityExpression	"fgets ( line , sizeof ( line ) , f ) != NULL"		4939325	0		!=			
ANR	4939400	CallExpression	"fgets ( line , sizeof ( line ) , f )"		4939325	0					
ANR	4939401	Callee	fgets		4939325	0					
ANR	4939402	Identifier	fgets		4939325	0					
ANR	4939403	ArgumentList	line		4939325	1					
ANR	4939404	Argument	line		4939325	0					
ANR	4939405	Identifier	line		4939325	0					
ANR	4939406	Argument	sizeof ( line )		4939325	1					
ANR	4939407	SizeofExpression	sizeof ( line )		4939325	0					
ANR	4939408	Sizeof	sizeof		4939325	0					
ANR	4939409	SizeofOperand	line		4939325	1					
ANR	4939410	Argument	f		4939325	2					
ANR	4939411	Identifier	f		4939325	0					
ANR	4939412	Identifier	NULL		4939325	1					
ANR	4939413	PostIncDecOperationExpression	ms -> line ++	497:61:13098:13107	4939325	2	True				
ANR	4939414	PtrMemberAccess	ms -> line		4939325	0					
ANR	4939415	Identifier	ms		4939325	0					
ANR	4939416	Identifier	line		4939325	1					
ANR	4939417	IncDec	++		4939325	1					
ANR	4939418	CompoundStatement		13:3:330:356	4939325	3					
ANR	4939419	IdentifierDeclStatement	size_t len = strlen ( line ) ;	498:3:13115:13141	4939325	0	True				
ANR	4939420	IdentifierDecl	len = strlen ( line )		4939325	0					
ANR	4939421	IdentifierDeclType	size_t		4939325	0					
ANR	4939422	Identifier	len		4939325	1					
ANR	4939423	AssignmentExpression	len = strlen ( line )		4939325	2		=			
ANR	4939424	Identifier	len		4939325	0					
ANR	4939425	CallExpression	strlen ( line )		4939325	1					
ANR	4939426	Callee	strlen		4939325	0					
ANR	4939427	Identifier	strlen		4939325	0					
ANR	4939428	ArgumentList	line		4939325	1					
ANR	4939429	Argument	line		4939325	0					
ANR	4939430	Identifier	line		4939325	0					
ANR	4939431	IfStatement	if ( len == 0 )		4939325	1					
ANR	4939432	Condition	len == 0	499:7:13150:13157	4939325	0	True				
ANR	4939433	EqualityExpression	len == 0		4939325	0		==			
ANR	4939434	Identifier	len		4939325	0					
ANR	4939435	PrimaryExpression	0		4939325	1					
ANR	4939436	CompoundStatement		14:17:375:375	4939325	1					
ANR	4939437	ContinueStatement	continue ;	500:4:13196:13204	4939325	0	True				
ANR	4939438	IfStatement	if ( line [ len - 1 ] == '\\n' )		4939325	2					
ANR	4939439	Condition	line [ len - 1 ] == '\\n'	502:7:13218:13238	4939325	0	True				
ANR	4939440	EqualityExpression	line [ len - 1 ] == '\\n'		4939325	0		==			
ANR	4939441	ArrayIndexing	line [ len - 1 ]		4939325	0					
ANR	4939442	Identifier	line		4939325	0					
ANR	4939443	AdditiveExpression	len - 1		4939325	1		-			
ANR	4939444	Identifier	len		4939325	0					
ANR	4939445	PrimaryExpression	1		4939325	1					
ANR	4939446	PrimaryExpression	'\\n'		4939325	1					
ANR	4939447	CompoundStatement		17:30:456:456	4939325	1					
ANR	4939448	ExpressionStatement	lineno ++	503:4:13247:13255	4939325	0	True				
ANR	4939449	PostIncDecOperationExpression	lineno ++		4939325	0					
ANR	4939450	Identifier	lineno		4939325	0					
ANR	4939451	IncDec	++		4939325	1					
ANR	4939452	ExpressionStatement	line [ len - 1 ] = '\\0'	504:4:13261:13281	4939325	1	True				
ANR	4939453	AssignmentExpression	line [ len - 1 ] = '\\0'		4939325	0		=			
ANR	4939454	ArrayIndexing	line [ len - 1 ]		4939325	0					
ANR	4939455	Identifier	line		4939325	0					
ANR	4939456	AdditiveExpression	len - 1		4939325	1		-			
ANR	4939457	Identifier	len		4939325	0					
ANR	4939458	PrimaryExpression	1		4939325	1					
ANR	4939459	PrimaryExpression	'\\0'		4939325	1					
ANR	4939460	IfStatement	if ( line [ 0 ] == '\\0' )		4939325	3					
ANR	4939461	Condition	line [ 0 ] == '\\0'	506:7:13316:13330	4939325	0	True				
ANR	4939462	EqualityExpression	line [ 0 ] == '\\0'		4939325	0		==			
ANR	4939463	ArrayIndexing	line [ 0 ]		4939325	0					
ANR	4939464	Identifier	line		4939325	0					
ANR	4939465	PrimaryExpression	0		4939325	1					
ANR	4939466	PrimaryExpression	'\\0'		4939325	1					
ANR	4939467	CompoundStatement		21:24:548:548	4939325	1					
ANR	4939468	ContinueStatement	continue ;	507:4:13365:13373	4939325	0	True				
ANR	4939469	IfStatement	if ( line [ 0 ] == '#' )		4939325	4					
ANR	4939470	Condition	line [ 0 ] == '#'	509:7:13387:13400	4939325	0	True				
ANR	4939471	EqualityExpression	line [ 0 ] == '#'		4939325	0		==			
ANR	4939472	ArrayIndexing	line [ 0 ]		4939325	0					
ANR	4939473	Identifier	line		4939325	0					
ANR	4939474	PrimaryExpression	0		4939325	1					
ANR	4939475	PrimaryExpression	'#'		4939325	1					
ANR	4939476	CompoundStatement		24:23:618:618	4939325	1					
ANR	4939477	ContinueStatement	continue ;	510:4:13437:13445	4939325	0	True				
ANR	4939478	IfStatement	"if ( len > mime_marker_len && memcmp ( line , mime_marker , mime_marker_len ) == 0 )"		4939325	5					
ANR	4939479	Condition	"len > mime_marker_len && memcmp ( line , mime_marker , mime_marker_len ) == 0"	512:7:13459:13538	4939325	0	True				
ANR	4939480	AndExpression	"len > mime_marker_len && memcmp ( line , mime_marker , mime_marker_len ) == 0"		4939325	0		&&			
ANR	4939481	RelationalExpression	len > mime_marker_len		4939325	0		>			
ANR	4939482	Identifier	len		4939325	0					
ANR	4939483	Identifier	mime_marker_len		4939325	1					
ANR	4939484	EqualityExpression	"memcmp ( line , mime_marker , mime_marker_len ) == 0"		4939325	1		==			
ANR	4939485	CallExpression	"memcmp ( line , mime_marker , mime_marker_len )"		4939325	0					
ANR	4939486	Callee	memcmp		4939325	0					
ANR	4939487	Identifier	memcmp		4939325	0					
ANR	4939488	ArgumentList	line		4939325	1					
ANR	4939489	Argument	line		4939325	0					
ANR	4939490	Identifier	line		4939325	0					
ANR	4939491	Argument	mime_marker		4939325	1					
ANR	4939492	Identifier	mime_marker		4939325	0					
ANR	4939493	Argument	mime_marker_len		4939325	2					
ANR	4939494	Identifier	mime_marker_len		4939325	0					
ANR	4939495	PrimaryExpression	0		4939325	1					
ANR	4939496	CompoundStatement		28:57:756:756	4939325	1					
ANR	4939497	IfStatement	"if ( parse_mime ( ms , marray , marraycount , line + mime_marker_len ) != 0 )"		4939325	0					
ANR	4939498	Condition	"parse_mime ( ms , marray , marraycount , line + mime_marker_len ) != 0"	515:8:13571:13644	4939325	0	True				
ANR	4939499	EqualityExpression	"parse_mime ( ms , marray , marraycount , line + mime_marker_len ) != 0"		4939325	0		!=			
ANR	4939500	CallExpression	"parse_mime ( ms , marray , marraycount , line + mime_marker_len )"		4939325	0					
ANR	4939501	Callee	parse_mime		4939325	0					
ANR	4939502	Identifier	parse_mime		4939325	0					
ANR	4939503	ArgumentList	ms		4939325	1					
ANR	4939504	Argument	ms		4939325	0					
ANR	4939505	Identifier	ms		4939325	0					
ANR	4939506	Argument	marray		4939325	1					
ANR	4939507	Identifier	marray		4939325	0					
ANR	4939508	Argument	marraycount		4939325	2					
ANR	4939509	Identifier	marraycount		4939325	0					
ANR	4939510	Argument	line + mime_marker_len		4939325	3					
ANR	4939511	AdditiveExpression	line + mime_marker_len		4939325	0		+			
ANR	4939512	Identifier	line		4939325	0					
ANR	4939513	Identifier	mime_marker_len		4939325	1					
ANR	4939514	PrimaryExpression	0		4939325	1					
ANR	4939515	CompoundStatement		31:39:862:862	4939325	1					
ANR	4939516	ExpressionStatement	( * errs ) ++	517:5:13654:13663	4939325	0	True				
ANR	4939517	PostIncDecOperationExpression	( * errs ) ++		4939325	0					
ANR	4939518	UnaryOperationExpression	* errs		4939325	0					
ANR	4939519	UnaryOperator	*		4939325	0					
ANR	4939520	Identifier	errs		4939325	1					
ANR	4939521	IncDec	++		4939325	1					
ANR	4939522	ContinueStatement	continue ;	519:4:13675:13683	4939325	1	True				
ANR	4939523	IfStatement	"if ( parse ( ms , marray , marraycount , line , lineno , action ) != 0 )"		4939325	6					
ANR	4939524	Condition	"parse ( ms , marray , marraycount , line , lineno , action ) != 0"	521:7:13697:13754	4939325	0	True				
ANR	4939525	EqualityExpression	"parse ( ms , marray , marraycount , line , lineno , action ) != 0"		4939325	0		!=			
ANR	4939526	CallExpression	"parse ( ms , marray , marraycount , line , lineno , action )"		4939325	0					
ANR	4939527	Callee	parse		4939325	0					
ANR	4939528	Identifier	parse		4939325	0					
ANR	4939529	ArgumentList	ms		4939325	1					
ANR	4939530	Argument	ms		4939325	0					
ANR	4939531	Identifier	ms		4939325	0					
ANR	4939532	Argument	marray		4939325	1					
ANR	4939533	Identifier	marray		4939325	0					
ANR	4939534	Argument	marraycount		4939325	2					
ANR	4939535	Identifier	marraycount		4939325	0					
ANR	4939536	Argument	line		4939325	3					
ANR	4939537	Identifier	line		4939325	0					
ANR	4939538	Argument	lineno		4939325	4					
ANR	4939539	Identifier	lineno		4939325	0					
ANR	4939540	Argument	action		4939325	5					
ANR	4939541	Identifier	action		4939325	0					
ANR	4939542	PrimaryExpression	0		4939325	1					
ANR	4939543	CompoundStatement		36:67:972:972	4939325	1					
ANR	4939544	ExpressionStatement	( * errs ) ++	522:4:13763:13772	4939325	0	True				
ANR	4939545	PostIncDecOperationExpression	( * errs ) ++		4939325	0					
ANR	4939546	UnaryOperationExpression	* errs		4939325	0					
ANR	4939547	UnaryOperator	*		4939325	0					
ANR	4939548	Identifier	errs		4939325	1					
ANR	4939549	IncDec	++		4939325	1					
ANR	4939550	ExpressionStatement	fclose ( f )	525:2:13785:13795	4939325	1	True				
ANR	4939551	CallExpression	fclose ( f )		4939325	0					
ANR	4939552	Callee	fclose		4939325	0					
ANR	4939553	Identifier	fclose		4939325	0					
ANR	4939554	ArgumentList	f		4939325	1					
ANR	4939555	Argument	f		4939325	0					
ANR	4939556	Identifier	f		4939325	0					
ANR	4939557	ReturnType	static void		4939325	1					
ANR	4939558	Identifier	load_1		4939325	2					
ANR	4939559	ParameterList	"RMagic * ms , int action , const char * file , int * errs , struct r_magic_entry * * marray , ut32 * marraycount"		4939325	3					
ANR	4939560	Parameter	RMagic * ms	486:19:12681:12690	4939325	0	True				
ANR	4939561	ParameterType	RMagic *		4939325	0					
ANR	4939562	Identifier	ms		4939325	1					
ANR	4939563	Parameter	int action	486:31:12693:12702	4939325	1	True				
ANR	4939564	ParameterType	int		4939325	0					
ANR	4939565	Identifier	action		4939325	1					
ANR	4939566	Parameter	const char * file	486:43:12705:12720	4939325	2	True				
ANR	4939567	ParameterType	const char *		4939325	0					
ANR	4939568	Identifier	file		4939325	1					
ANR	4939569	Parameter	int * errs	486:61:12723:12731	4939325	3	True				
ANR	4939570	ParameterType	int *		4939325	0					
ANR	4939571	Identifier	errs		4939325	1					
ANR	4939572	Parameter	struct r_magic_entry * * marray	486:72:12734:12762	4939325	4	True				
ANR	4939573	ParameterType	struct r_magic_entry * *		4939325	0					
ANR	4939574	Identifier	marray		4939325	1					
ANR	4939575	Parameter	ut32 * marraycount	486:103:12765:12781	4939325	5	True				
ANR	4939576	ParameterType	ut32 *		4939325	0					
ANR	4939577	Identifier	marraycount		4939325	1					
ANR	4939578	CFGEntryNode	ENTRY		4939325		True				
ANR	4939579	CFGExitNode	EXIT		4939325		True				
ANR	4939580	Symbol	marray		4939325						
ANR	4939581	Symbol	errs		4939325						
ANR	4939582	Symbol	line		4939325						
ANR	4939583	Symbol	parse_mime		4939325						
ANR	4939584	Symbol	* line		4939325						
ANR	4939585	Symbol	fgets		4939325						
ANR	4939586	Symbol	* ms		4939325						
ANR	4939587	Symbol	strlen		4939325						
ANR	4939588	Symbol	marraycount		4939325						
ANR	4939589	Symbol	file		4939325						
ANR	4939590	Symbol	mime_marker		4939325						
ANR	4939591	Symbol	memcmp		4939325						
ANR	4939592	Symbol	len		4939325						
ANR	4939593	Symbol	mime_marker_len		4939325						
ANR	4939594	Symbol	action		4939325						
ANR	4939595	Symbol	errno		4939325						
ANR	4939596	Symbol	NULL		4939325						
ANR	4939597	Symbol	ms		4939325						
ANR	4939598	Symbol	f		4939325						
ANR	4939599	Symbol	ms -> line		4939325						
ANR	4939600	Symbol	ENOENT		4939325						
ANR	4939601	Symbol	parse		4939325						
ANR	4939602	Symbol	ms -> file		4939325						
ANR	4939603	Symbol	lineno		4939325						
ANR	4939604	Symbol	r_sandbox_fopen		4939325						
ANR	4939605	Symbol	* errs		4939325						
ANR	4939606	Symbol	* len		4939325						
ANR	4939607	Function	apprentice_load	533:0:13899:18203							
ANR	4939608	FunctionDef	"apprentice_load (RMagic * ms , struct r_magic * * magicp , ut32 * nmagicp , const char * fn , int action)"		4939607	0					
ANR	4939609	CompoundStatement		533:107:14006:18203	4939607	0					
ANR	4939610	IdentifierDeclStatement	"ut32 marraycount , i , mentrycount = 0 , starttest ;"	534:1:14009:14056	4939607	0	True				
ANR	4939611	IdentifierDecl	marraycount		4939607	0					
ANR	4939612	IdentifierDeclType	ut32		4939607	0					
ANR	4939613	Identifier	marraycount		4939607	1					
ANR	4939614	IdentifierDecl	i		4939607	1					
ANR	4939615	IdentifierDeclType	ut32		4939607	0					
ANR	4939616	Identifier	i		4939607	1					
ANR	4939617	IdentifierDecl	mentrycount = 0		4939607	2					
ANR	4939618	IdentifierDeclType	ut32		4939607	0					
ANR	4939619	Identifier	mentrycount		4939607	1					
ANR	4939620	AssignmentExpression	mentrycount = 0		4939607	2		=			
ANR	4939621	Identifier	mentrycount		4939607	0					
ANR	4939622	PrimaryExpression	0		4939607	1					
ANR	4939623	IdentifierDecl	starttest		4939607	3					
ANR	4939624	IdentifierDeclType	ut32		4939607	0					
ANR	4939625	Identifier	starttest		4939607	1					
ANR	4939626	IdentifierDeclStatement	struct r_magic_entry * marray ;	535:1:14059:14087	4939607	1	True				
ANR	4939627	IdentifierDecl	* marray		4939607	0					
ANR	4939628	IdentifierDeclType	struct r_magic_entry *		4939607	0					
ANR	4939629	Identifier	marray		4939607	1					
ANR	4939630	IdentifierDeclStatement	struct stat st ;	536:1:14090:14104	4939607	2	True				
ANR	4939631	IdentifierDecl	st		4939607	0					
ANR	4939632	IdentifierDeclType	struct stat		4939607	0					
ANR	4939633	Identifier	st		4939607	1					
ANR	4939634	IdentifierDeclStatement	int errs = 0 ;	537:1:14107:14119	4939607	3	True				
ANR	4939635	IdentifierDecl	errs = 0		4939607	0					
ANR	4939636	IdentifierDeclType	int		4939607	0					
ANR	4939637	Identifier	errs		4939607	1					
ANR	4939638	AssignmentExpression	errs = 0		4939607	2		=			
ANR	4939639	Identifier	errs		4939607	0					
ANR	4939640	PrimaryExpression	0		4939607	1					
ANR	4939641	IdentifierDeclStatement	DIR * dir ;	539:1:14139:14147	4939607	4	True				
ANR	4939642	IdentifierDecl	* dir		4939607	0					
ANR	4939643	IdentifierDeclType	DIR *		4939607	0					
ANR	4939644	Identifier	dir		4939607	1					
ANR	4939645	IdentifierDeclStatement	struct dirent * d ;	540:1:14150:14166	4939607	5	True				
ANR	4939646	IdentifierDecl	* d		4939607	0					
ANR	4939647	IdentifierDeclType	struct dirent *		4939607	0					
ANR	4939648	Identifier	d		4939607	1					
ANR	4939649	IdentifierDeclStatement	char subfn [ MAXPATHLEN ] ;	541:1:14169:14191	4939607	6	True				
ANR	4939650	IdentifierDecl	subfn [ MAXPATHLEN ]		4939607	0					
ANR	4939651	IdentifierDeclType	char [ MAXPATHLEN ]		4939607	0					
ANR	4939652	Identifier	subfn		4939607	1					
ANR	4939653	Identifier	MAXPATHLEN		4939607	2					
ANR	4939654	ExpressionStatement	ms -> flags |= R_MAGIC_CHECK	550:1:14324:14350	4939607	7	True				
ANR	4939655	AssignmentExpression	ms -> flags |= R_MAGIC_CHECK		4939607	0		|=			
ANR	4939656	PtrMemberAccess	ms -> flags		4939607	0					
ANR	4939657	Identifier	ms		4939607	0					
ANR	4939658	Identifier	flags		4939607	1					
ANR	4939659	Identifier	R_MAGIC_CHECK		4939607	1					
ANR	4939660	ExpressionStatement	maxmagic = MAXMAGIS	552:8:14398:14417	4939607	8	True				
ANR	4939661	AssignmentExpression	maxmagic = MAXMAGIS		4939607	0		=			
ANR	4939662	Identifier	maxmagic		4939607	0					
ANR	4939663	Identifier	MAXMAGIS		4939607	1					
ANR	4939664	IfStatement	"if ( ! ( marray = calloc ( maxmagic , sizeof ( * marray ) ) ) )"		4939607	9					
ANR	4939665	Condition	"! ( marray = calloc ( maxmagic , sizeof ( * marray ) ) )"	553:5:14424:14470	4939607	0	True				
ANR	4939666	UnaryOperationExpression	"! ( marray = calloc ( maxmagic , sizeof ( * marray ) ) )"		4939607	0					
ANR	4939667	UnaryOperator	!		4939607	0					
ANR	4939668	AssignmentExpression	"marray = calloc ( maxmagic , sizeof ( * marray ) )"		4939607	1		=			
ANR	4939669	Identifier	marray		4939607	0					
ANR	4939670	CallExpression	"calloc ( maxmagic , sizeof ( * marray ) )"		4939607	1					
ANR	4939671	Callee	calloc		4939607	0					
ANR	4939672	Identifier	calloc		4939607	0					
ANR	4939673	ArgumentList	maxmagic		4939607	1					
ANR	4939674	Argument	maxmagic		4939607	0					
ANR	4939675	Identifier	maxmagic		4939607	0					
ANR	4939676	Argument	sizeof ( * marray )		4939607	1					
ANR	4939677	SizeofExpression	sizeof ( * marray )		4939607	0					
ANR	4939678	Sizeof	sizeof		4939607	0					
ANR	4939679	UnaryOperationExpression	* marray		4939607	1					
ANR	4939680	UnaryOperator	*		4939607	0					
ANR	4939681	Identifier	marray		4939607	1					
ANR	4939682	CompoundStatement		21:54:466:466	4939607	1					
ANR	4939683	ExpressionStatement	"file_oomem ( ms , maxmagic * sizeof ( * marray ) )"	554:2:14477:14521	4939607	0	True				
ANR	4939684	CallExpression	"file_oomem ( ms , maxmagic * sizeof ( * marray ) )"		4939607	0					
ANR	4939685	Callee	file_oomem		4939607	0					
ANR	4939686	Identifier	file_oomem		4939607	0					
ANR	4939687	ArgumentList	ms		4939607	1					
ANR	4939688	Argument	ms		4939607	0					
ANR	4939689	Identifier	ms		4939607	0					
ANR	4939690	Argument	maxmagic * sizeof ( * marray )		4939607	1					
ANR	4939691	MultiplicativeExpression	maxmagic * sizeof ( * marray )		4939607	0		*			
ANR	4939692	Identifier	maxmagic		4939607	0					
ANR	4939693	SizeofExpression	sizeof ( * marray )		4939607	1					
ANR	4939694	Sizeof	sizeof		4939607	0					
ANR	4939695	UnaryOperationExpression	* marray		4939607	1					
ANR	4939696	UnaryOperator	*		4939607	0					
ANR	4939697	Identifier	marray		4939607	1					
ANR	4939698	ReturnStatement	return - 1 ;	555:2:14525:14534	4939607	1	True				
ANR	4939699	UnaryOperationExpression	- 1		4939607	0					
ANR	4939700	UnaryOperator	-		4939607	0					
ANR	4939701	PrimaryExpression	1		4939607	1					
ANR	4939702	ExpressionStatement	marraycount = 0	557:1:14540:14555	4939607	10	True				
ANR	4939703	AssignmentExpression	marraycount = 0		4939607	0		=			
ANR	4939704	Identifier	marraycount		4939607	0					
ANR	4939705	PrimaryExpression	0		4939607	1					
ANR	4939706	IfStatement	if ( action == FILE_CHECK )		4939607	11					
ANR	4939707	Condition	action == FILE_CHECK	560:5:14613:14632	4939607	0	True				
ANR	4939708	EqualityExpression	action == FILE_CHECK		4939607	0		==			
ANR	4939709	Identifier	action		4939607	0					
ANR	4939710	Identifier	FILE_CHECK		4939607	1					
ANR	4939711	CompoundStatement		28:27:628:628	4939607	1					
ANR	4939712	ExpressionStatement	"eprintf ( ""%s\\n"" , usg_hdr )"	561:2:14639:14664	4939607	0	True				
ANR	4939713	CallExpression	"eprintf ( ""%s\\n"" , usg_hdr )"		4939607	0					
ANR	4939714	Callee	eprintf		4939607	0					
ANR	4939715	Identifier	eprintf		4939607	0					
ANR	4939716	ArgumentList	"""%s\\n"""		4939607	1					
ANR	4939717	Argument	"""%s\\n"""		4939607	0					
ANR	4939718	PrimaryExpression	"""%s\\n"""		4939607	0					
ANR	4939719	Argument	usg_hdr		4939607	1					
ANR	4939720	Identifier	usg_hdr		4939607	0					
ANR	4939721	IfStatement	"if ( stat ( fn , & st ) == 0 && S_ISDIR ( st . st_mode ) )"		4939607	12					
ANR	4939722	Condition	"stat ( fn , & st ) == 0 && S_ISDIR ( st . st_mode )"	565:5:14705:14747	4939607	0	True				
ANR	4939723	AndExpression	"stat ( fn , & st ) == 0 && S_ISDIR ( st . st_mode )"		4939607	0		&&			
ANR	4939724	EqualityExpression	"stat ( fn , & st ) == 0"		4939607	0		==			
ANR	4939725	CallExpression	"stat ( fn , & st )"		4939607	0					
ANR	4939726	Callee	stat		4939607	0					
ANR	4939727	Identifier	stat		4939607	0					
ANR	4939728	ArgumentList	fn		4939607	1					
ANR	4939729	Argument	fn		4939607	0					
ANR	4939730	Identifier	fn		4939607	0					
ANR	4939731	Argument	& st		4939607	1					
ANR	4939732	UnaryOperationExpression	& st		4939607	0					
ANR	4939733	UnaryOperator	&		4939607	0					
ANR	4939734	Identifier	st		4939607	1					
ANR	4939735	PrimaryExpression	0		4939607	1					
ANR	4939736	CallExpression	S_ISDIR ( st . st_mode )		4939607	1					
ANR	4939737	Callee	S_ISDIR		4939607	0					
ANR	4939738	Identifier	S_ISDIR		4939607	0					
ANR	4939739	ArgumentList	st . st_mode		4939607	1					
ANR	4939740	Argument	st . st_mode		4939607	0					
ANR	4939741	MemberAccess	st . st_mode		4939607	0					
ANR	4939742	Identifier	st		4939607	0					
ANR	4939743	Identifier	st_mode		4939607	1					
ANR	4939744	CompoundStatement		33:50:743:743	4939607	1					
ANR	4939745	IfStatement	if ( r_sandbox_enable ( 0 ) && ! r_sandbox_check_path ( fn ) )		4939607	0					
ANR	4939746	Condition	r_sandbox_enable ( 0 ) && ! r_sandbox_check_path ( fn )	566:6:14758:14807	4939607	0	True				
ANR	4939747	AndExpression	r_sandbox_enable ( 0 ) && ! r_sandbox_check_path ( fn )		4939607	0		&&			
ANR	4939748	CallExpression	r_sandbox_enable ( 0 )		4939607	0					
ANR	4939749	Callee	r_sandbox_enable		4939607	0					
ANR	4939750	Identifier	r_sandbox_enable		4939607	0					
ANR	4939751	ArgumentList	0		4939607	1					
ANR	4939752	Argument	0		4939607	0					
ANR	4939753	PrimaryExpression	0		4939607	0					
ANR	4939754	UnaryOperationExpression	! r_sandbox_check_path ( fn )		4939607	1					
ANR	4939755	UnaryOperator	!		4939607	0					
ANR	4939756	CallExpression	r_sandbox_check_path ( fn )		4939607	1					
ANR	4939757	Callee	r_sandbox_check_path		4939607	0					
ANR	4939758	Identifier	r_sandbox_check_path		4939607	0					
ANR	4939759	ArgumentList	fn		4939607	1					
ANR	4939760	Argument	fn		4939607	0					
ANR	4939761	Identifier	fn		4939607	0					
ANR	4939762	CompoundStatement		34:58:803:803	4939607	1					
ANR	4939763	ExpressionStatement	free ( marray )	567:3:14815:14828	4939607	0	True				
ANR	4939764	CallExpression	free ( marray )		4939607	0					
ANR	4939765	Callee	free		4939607	0					
ANR	4939766	Identifier	free		4939607	0					
ANR	4939767	ArgumentList	marray		4939607	1					
ANR	4939768	Argument	marray		4939607	0					
ANR	4939769	Identifier	marray		4939607	0					
ANR	4939770	ReturnStatement	return - 1 ;	568:3:14833:14843	4939607	1	True				
ANR	4939771	UnaryOperationExpression	- 1		4939607	0					
ANR	4939772	UnaryOperator	-		4939607	0					
ANR	4939773	PrimaryExpression	1		4939607	1					
ANR	4939774	IfStatement	if ( ( wcpath = r_utf8_to_utf16 ( fn ) ) )		4939607	1					
ANR	4939775	Condition	wcpath = r_utf8_to_utf16 ( fn )	571:6:14895:14925	4939607	0	True				
ANR	4939776	AssignmentExpression	wcpath = r_utf8_to_utf16 ( fn )		4939607	0		=			
ANR	4939777	Identifier	wcpath		4939607	0					
ANR	4939778	CallExpression	r_utf8_to_utf16 ( fn )		4939607	1					
ANR	4939779	Callee	r_utf8_to_utf16		4939607	0					
ANR	4939780	Identifier	r_utf8_to_utf16		4939607	0					
ANR	4939781	ArgumentList	fn		4939607	1					
ANR	4939782	Argument	fn		4939607	0					
ANR	4939783	Identifier	fn		4939607	0					
ANR	4939784	CompoundStatement		39:39:921:921	4939607	1					
ANR	4939785	Statement	swprintf	572:3:14933:14940	4939607	0	True				
ANR	4939786	Statement	(	572:12:14942:14942	4939607	1	True				
ANR	4939787	Statement	dir	572:13:14943:14945	4939607	2	True				
ANR	4939788	Statement	","	572:16:14946:14946	4939607	3	True				
ANR	4939789	Statement	_countof	572:18:14948:14955	4939607	4	True				
ANR	4939790	Statement	(	572:27:14957:14957	4939607	5	True				
ANR	4939791	Statement	dir	572:28:14958:14960	4939607	6	True				
ANR	4939792	Statement	)	572:31:14961:14961	4939607	7	True				
ANR	4939793	Statement	","	572:32:14962:14962	4939607	8	True				
ANR	4939794	Statement	L	572:34:14964:14964	4939607	9	True				
ANR	4939795	Statement	"""%ls\\\\*.*"""	572:35:14965:14974	4939607	10	True				
ANR	4939796	Statement	","	572:45:14975:14975	4939607	11	True				
ANR	4939797	Statement	wcpath	572:47:14977:14982	4939607	12	True				
ANR	4939798	Statement	)	572:53:14983:14983	4939607	13	True				
ANR	4939799	ExpressionStatement		572:54:14984:14984	4939607	14	True				
ANR	4939800	ExpressionStatement	"hdir = FindFirstFileW ( dir , & entry )"	573:3:14989:15024	4939607	15	True				
ANR	4939801	AssignmentExpression	"hdir = FindFirstFileW ( dir , & entry )"		4939607	0		=			
ANR	4939802	Identifier	hdir		4939607	0					
ANR	4939803	CallExpression	"FindFirstFileW ( dir , & entry )"		4939607	1					
ANR	4939804	Callee	FindFirstFileW		4939607	0					
ANR	4939805	Identifier	FindFirstFileW		4939607	0					
ANR	4939806	ArgumentList	dir		4939607	1					
ANR	4939807	Argument	dir		4939607	0					
ANR	4939808	Identifier	dir		4939607	0					
ANR	4939809	Argument	& entry		4939607	1					
ANR	4939810	UnaryOperationExpression	& entry		4939607	0					
ANR	4939811	UnaryOperator	&		4939607	0					
ANR	4939812	Identifier	entry		4939607	1					
ANR	4939813	IfStatement	if ( ! ( hdir == INVALID_HANDLE_VALUE ) )		4939607	16					
ANR	4939814	Condition	! ( hdir == INVALID_HANDLE_VALUE )	574:7:15033:15063	4939607	0	True				
ANR	4939815	UnaryOperationExpression	! ( hdir == INVALID_HANDLE_VALUE )		4939607	0					
ANR	4939816	UnaryOperator	!		4939607	0					
ANR	4939817	EqualityExpression	hdir == INVALID_HANDLE_VALUE		4939607	1		==			
ANR	4939818	Identifier	hdir		4939607	0					
ANR	4939819	Identifier	INVALID_HANDLE_VALUE		4939607	1					
ANR	4939820	CompoundStatement		42:40:1059:1059	4939607	1					
ANR	4939821	DoStatement	do		4939607	0					
ANR	4939822	CompoundStatement		43:7:1068:1068	4939607	0					
ANR	4939823	Statement	if	576:5:15082:15083	4939607	0	True				
ANR	4939824	Statement	(	576:8:15085:15085	4939607	1	True				
ANR	4939825	Statement	wcsncmp	576:9:15086:15092	4939607	2	True				
ANR	4939826	Statement	(	576:17:15094:15094	4939607	3	True				
ANR	4939827	Statement	entry	576:18:15095:15099	4939607	4	True				
ANR	4939828	Statement	.	576:23:15100:15100	4939607	5	True				
ANR	4939829	Statement	cFileName	576:24:15101:15109	4939607	6	True				
ANR	4939830	Statement	","	576:33:15110:15110	4939607	7	True				
ANR	4939831	Statement	L	576:35:15112:15112	4939607	8	True				
ANR	4939832	Statement	"""."""	576:36:15113:15115	4939607	9	True				
ANR	4939833	Statement	","	576:39:15116:15116	4939607	10	True				
ANR	4939834	Statement	1	576:41:15118:15118	4939607	11	True				
ANR	4939835	Statement	)	576:42:15119:15119	4939607	12	True				
ANR	4939836	Statement	==	576:44:15121:15122	4939607	13	True				
ANR	4939837	Statement	0	576:47:15124:15124	4939607	14	True				
ANR	4939838	Statement	)	576:48:15125:15125	4939607	15	True				
ANR	4939839	ContinueStatement	continue ;	576:50:15127:15135	4939607	16	True				
ANR	4939840	IfStatement	if ( ( cfname = r_utf16_to_utf8 ( entry . cFileName ) ) )		4939607	17					
ANR	4939841	Condition	cfname = r_utf16_to_utf8 ( entry . cFileName )	577:9:15146:15189	4939607	0	True				
ANR	4939842	AssignmentExpression	cfname = r_utf16_to_utf8 ( entry . cFileName )		4939607	0		=			
ANR	4939843	Identifier	cfname		4939607	0					
ANR	4939844	CallExpression	r_utf16_to_utf8 ( entry . cFileName )		4939607	1					
ANR	4939845	Callee	r_utf16_to_utf8		4939607	0					
ANR	4939846	Identifier	r_utf16_to_utf8		4939607	0					
ANR	4939847	ArgumentList	entry . cFileName		4939607	1					
ANR	4939848	Argument	entry . cFileName		4939607	0					
ANR	4939849	MemberAccess	entry . cFileName		4939607	0					
ANR	4939850	Identifier	entry		4939607	0					
ANR	4939851	Identifier	cFileName		4939607	1					
ANR	4939852	CompoundStatement		45:55:1185:1185	4939607	1					
ANR	4939853	ExpressionStatement	"snprintf ( subfn , sizeof ( subfn ) , ""%s/%s"" , fn , cfname )"	578:6:15200:15253	4939607	0	True				
ANR	4939854	CallExpression	"snprintf ( subfn , sizeof ( subfn ) , ""%s/%s"" , fn , cfname )"		4939607	0					
ANR	4939855	Callee	snprintf		4939607	0					
ANR	4939856	Identifier	snprintf		4939607	0					
ANR	4939857	ArgumentList	subfn		4939607	1					
ANR	4939858	Argument	subfn		4939607	0					
ANR	4939859	Identifier	subfn		4939607	0					
ANR	4939860	Argument	sizeof ( subfn )		4939607	1					
ANR	4939861	SizeofExpression	sizeof ( subfn )		4939607	0					
ANR	4939862	Sizeof	sizeof		4939607	0					
ANR	4939863	SizeofOperand	subfn		4939607	1					
ANR	4939864	Argument	"""%s/%s"""		4939607	2					
ANR	4939865	PrimaryExpression	"""%s/%s"""		4939607	0					
ANR	4939866	Argument	fn		4939607	3					
ANR	4939867	Identifier	fn		4939607	0					
ANR	4939868	Argument	cfname		4939607	4					
ANR	4939869	Identifier	cfname		4939607	0					
ANR	4939870	IfStatement	"if ( stat ( subfn , & st ) == 0 && S_ISREG ( st . st_mode ) )"		4939607	1					
ANR	4939871	Condition	"stat ( subfn , & st ) == 0 && S_ISREG ( st . st_mode )"	579:10:15265:15310	4939607	0	True				
ANR	4939872	AndExpression	"stat ( subfn , & st ) == 0 && S_ISREG ( st . st_mode )"		4939607	0		&&			
ANR	4939873	EqualityExpression	"stat ( subfn , & st ) == 0"		4939607	0		==			
ANR	4939874	CallExpression	"stat ( subfn , & st )"		4939607	0					
ANR	4939875	Callee	stat		4939607	0					
ANR	4939876	Identifier	stat		4939607	0					
ANR	4939877	ArgumentList	subfn		4939607	1					
ANR	4939878	Argument	subfn		4939607	0					
ANR	4939879	Identifier	subfn		4939607	0					
ANR	4939880	Argument	& st		4939607	1					
ANR	4939881	UnaryOperationExpression	& st		4939607	0					
ANR	4939882	UnaryOperator	&		4939607	0					
ANR	4939883	Identifier	st		4939607	1					
ANR	4939884	PrimaryExpression	0		4939607	1					
ANR	4939885	CallExpression	S_ISREG ( st . st_mode )		4939607	1					
ANR	4939886	Callee	S_ISREG		4939607	0					
ANR	4939887	Identifier	S_ISREG		4939607	0					
ANR	4939888	ArgumentList	st . st_mode		4939607	1					
ANR	4939889	Argument	st . st_mode		4939607	0					
ANR	4939890	MemberAccess	st . st_mode		4939607	0					
ANR	4939891	Identifier	st		4939607	0					
ANR	4939892	Identifier	st_mode		4939607	1					
ANR	4939893	CompoundStatement		47:58:1306:1306	4939607	1					
ANR	4939894	ExpressionStatement	"load_1 ( ms , action , subfn , & errs , & marray , & marraycount )"	580:7:15322:15378	4939607	0	True				
ANR	4939895	CallExpression	"load_1 ( ms , action , subfn , & errs , & marray , & marraycount )"		4939607	0					
ANR	4939896	Callee	load_1		4939607	0					
ANR	4939897	Identifier	load_1		4939607	0					
ANR	4939898	ArgumentList	ms		4939607	1					
ANR	4939899	Argument	ms		4939607	0					
ANR	4939900	Identifier	ms		4939607	0					
ANR	4939901	Argument	action		4939607	1					
ANR	4939902	Identifier	action		4939607	0					
ANR	4939903	Argument	subfn		4939607	2					
ANR	4939904	Identifier	subfn		4939607	0					
ANR	4939905	Argument	& errs		4939607	3					
ANR	4939906	UnaryOperationExpression	& errs		4939607	0					
ANR	4939907	UnaryOperator	&		4939607	0					
ANR	4939908	Identifier	errs		4939607	1					
ANR	4939909	Argument	& marray		4939607	4					
ANR	4939910	UnaryOperationExpression	& marray		4939607	0					
ANR	4939911	UnaryOperator	&		4939607	0					
ANR	4939912	Identifier	marray		4939607	1					
ANR	4939913	Argument	& marraycount		4939607	5					
ANR	4939914	UnaryOperationExpression	& marraycount		4939607	0					
ANR	4939915	UnaryOperator	&		4939607	0					
ANR	4939916	Identifier	marraycount		4939607	1					
ANR	4939917	ExpressionStatement	free ( cfname )	582:6:15394:15407	4939607	2	True				
ANR	4939918	CallExpression	free ( cfname )		4939607	0					
ANR	4939919	Callee	free		4939607	0					
ANR	4939920	Identifier	free		4939607	0					
ANR	4939921	ArgumentList	cfname		4939607	1					
ANR	4939922	Argument	cfname		4939607	0					
ANR	4939923	Identifier	cfname		4939607	0					
ANR	4939924	Condition	"FindNextFileW ( hdir , & entry )"	584:13:15429:15456	4939607	1	True				
ANR	4939925	CallExpression	"FindNextFileW ( hdir , & entry )"		4939607	0					
ANR	4939926	Callee	FindNextFileW		4939607	0					
ANR	4939927	Identifier	FindNextFileW		4939607	0					
ANR	4939928	ArgumentList	hdir		4939607	1					
ANR	4939929	Argument	hdir		4939607	0					
ANR	4939930	Identifier	hdir		4939607	0					
ANR	4939931	Argument	& entry		4939607	1					
ANR	4939932	UnaryOperationExpression	& entry		4939607	0					
ANR	4939933	UnaryOperator	&		4939607	0					
ANR	4939934	Identifier	entry		4939607	1					
ANR	4939935	ExpressionStatement	FindClose ( hdir )	585:4:15464:15480	4939607	1	True				
ANR	4939936	CallExpression	FindClose ( hdir )		4939607	0					
ANR	4939937	Callee	FindClose		4939607	0					
ANR	4939938	Identifier	FindClose		4939607	0					
ANR	4939939	ArgumentList	hdir		4939607	1					
ANR	4939940	Argument	hdir		4939607	0					
ANR	4939941	Identifier	hdir		4939607	0					
ANR	4939942	ExpressionStatement	free ( wcpath )	587:3:15490:15503	4939607	17	True				
ANR	4939943	CallExpression	free ( wcpath )		4939607	0					
ANR	4939944	Callee	free		4939607	0					
ANR	4939945	Identifier	free		4939607	0					
ANR	4939946	ArgumentList	wcpath		4939607	1					
ANR	4939947	Argument	wcpath		4939607	0					
ANR	4939948	Identifier	wcpath		4939607	0					
ANR	4939949	ElseStatement	else		4939607	0					
ANR	4939950	CompoundStatement		56:9:1507:1507	4939607	0					
ANR	4939951	ExpressionStatement	errs ++	589:3:15519:15525	4939607	0	True				
ANR	4939952	PostIncDecOperationExpression	errs ++		4939607	0					
ANR	4939953	Identifier	errs		4939607	0					
ANR	4939954	IncDec	++		4939607	1					
ANR	4939955	ElseStatement	else		4939607	0					
ANR	4939956	CompoundStatement		77:8:1929:1929	4939607	0					
ANR	4939957	ExpressionStatement	"load_1 ( ms , action , fn , & errs , & marray , & marraycount )"	610:2:15940:15993	4939607	0	True				
ANR	4939958	CallExpression	"load_1 ( ms , action , fn , & errs , & marray , & marraycount )"		4939607	0					
ANR	4939959	Callee	load_1		4939607	0					
ANR	4939960	Identifier	load_1		4939607	0					
ANR	4939961	ArgumentList	ms		4939607	1					
ANR	4939962	Argument	ms		4939607	0					
ANR	4939963	Identifier	ms		4939607	0					
ANR	4939964	Argument	action		4939607	1					
ANR	4939965	Identifier	action		4939607	0					
ANR	4939966	Argument	fn		4939607	2					
ANR	4939967	Identifier	fn		4939607	0					
ANR	4939968	Argument	& errs		4939607	3					
ANR	4939969	UnaryOperationExpression	& errs		4939607	0					
ANR	4939970	UnaryOperator	&		4939607	0					
ANR	4939971	Identifier	errs		4939607	1					
ANR	4939972	Argument	& marray		4939607	4					
ANR	4939973	UnaryOperationExpression	& marray		4939607	0					
ANR	4939974	UnaryOperator	&		4939607	0					
ANR	4939975	Identifier	marray		4939607	1					
ANR	4939976	Argument	& marraycount		4939607	5					
ANR	4939977	UnaryOperationExpression	& marraycount		4939607	0					
ANR	4939978	UnaryOperator	&		4939607	0					
ANR	4939979	Identifier	marraycount		4939607	1					
ANR	4939980	IfStatement	if ( errs )		4939607	13					
ANR	4939981	Condition	errs	612:5:16003:16006	4939607	0	True				
ANR	4939982	Identifier	errs		4939607	0					
ANR	4939983	CompoundStatement		80:11:2002:2002	4939607	1					
ANR	4939984	GotoStatement	goto out ;	613:2:16013:16021	4939607	0	True				
ANR	4939985	Identifier	out		4939607	0					
ANR	4939986	ForStatement	for ( i = 0 ; i < marraycount ; )		4939607	14					
ANR	4939987	ForInit	i = 0 ;	617:6:16059:16064	4939607	0	True				
ANR	4939988	AssignmentExpression	i = 0		4939607	0		=			
ANR	4939989	Identifier	i		4939607	0					
ANR	4939990	PrimaryExpression	0		4939607	1					
ANR	4939991	Condition	i < marraycount	617:13:16066:16080	4939607	1	True				
ANR	4939992	RelationalExpression	i < marraycount		4939607	0		<			
ANR	4939993	Identifier	i		4939607	0					
ANR	4939994	Identifier	marraycount		4939607	1					
ANR	4939995	CompoundStatement		85:32:2078:2078	4939607	2					
ANR	4939996	IfStatement	if ( marray [ i ] . mp -> cont_level != 0 )		4939607	0					
ANR	4939997	Condition	marray [ i ] . mp -> cont_level != 0	618:6:16093:16121	4939607	0	True				
ANR	4939998	EqualityExpression	marray [ i ] . mp -> cont_level != 0		4939607	0		!=			
ANR	4939999	PtrMemberAccess	marray [ i ] . mp -> cont_level		4939607	0					
ANR	4940000	MemberAccess	marray [ i ] . mp		4939607	0					
ANR	4940001	ArrayIndexing	marray [ i ]		4939607	0					
ANR	4940002	Identifier	marray		4939607	0					
ANR	4940003	Identifier	i		4939607	1					
ANR	4940004	Identifier	mp		4939607	1					
ANR	4940005	Identifier	cont_level		4939607	1					
ANR	4940006	PrimaryExpression	0		4939607	1					
ANR	4940007	CompoundStatement		86:37:2117:2117	4939607	1					
ANR	4940008	ExpressionStatement	i ++	619:3:16129:16132	4939607	0	True				
ANR	4940009	PostIncDecOperationExpression	i ++		4939607	0					
ANR	4940010	Identifier	i		4939607	0					
ANR	4940011	IncDec	++		4939607	1					
ANR	4940012	ContinueStatement	continue ;	620:3:16137:16145	4939607	1	True				
ANR	4940013	ExpressionStatement	starttest = i	623:2:16154:16167	4939607	1	True				
ANR	4940014	AssignmentExpression	starttest = i		4939607	0		=			
ANR	4940015	Identifier	starttest		4939607	0					
ANR	4940016	Identifier	i		4939607	1					
ANR	4940017	DoStatement	do		4939607	2					
ANR	4940018	CompoundStatement		92:5:2167:2167	4939607	0					
ANR	4940019	ExpressionStatement	"set_test_type ( marray [ starttest ] . mp , marray [ i ] . mp )"	625:3:16179:16228	4939607	0	True				
ANR	4940020	CallExpression	"set_test_type ( marray [ starttest ] . mp , marray [ i ] . mp )"		4939607	0					
ANR	4940021	Callee	set_test_type		4939607	0					
ANR	4940022	Identifier	set_test_type		4939607	0					
ANR	4940023	ArgumentList	marray [ starttest ] . mp		4939607	1					
ANR	4940024	Argument	marray [ starttest ] . mp		4939607	0					
ANR	4940025	MemberAccess	marray [ starttest ] . mp		4939607	0					
ANR	4940026	ArrayIndexing	marray [ starttest ]		4939607	0					
ANR	4940027	Identifier	marray		4939607	0					
ANR	4940028	Identifier	starttest		4939607	1					
ANR	4940029	Identifier	mp		4939607	1					
ANR	4940030	Argument	marray [ i ] . mp		4939607	1					
ANR	4940031	MemberAccess	marray [ i ] . mp		4939607	0					
ANR	4940032	ArrayIndexing	marray [ i ]		4939607	0					
ANR	4940033	Identifier	marray		4939607	0					
ANR	4940034	Identifier	i		4939607	1					
ANR	4940035	Identifier	mp		4939607	1					
ANR	4940036	IfStatement	if ( ms -> flags & R_MAGIC_DEBUG )		4939607	1					
ANR	4940037	Condition	ms -> flags & R_MAGIC_DEBUG	626:7:16237:16261	4939607	0	True				
ANR	4940038	BitAndExpression	ms -> flags & R_MAGIC_DEBUG		4939607	0		&			
ANR	4940039	PtrMemberAccess	ms -> flags		4939607	0					
ANR	4940040	Identifier	ms		4939607	0					
ANR	4940041	Identifier	flags		4939607	1					
ANR	4940042	Identifier	R_MAGIC_DEBUG		4939607	1					
ANR	4940043	CompoundStatement		94:34:2257:2257	4939607	1					
ANR	4940044	ExpressionStatement	"( void ) fprintf ( stderr , ""%s%s%s: %s\\n"" , marray [ i ] . mp -> mimetype , marray [ i ] . mp -> mimetype [ 0 ] == '\\0' ? """" : ""; "" , marray [ i ] . mp -> desc [ 0 ] ? marray [ i ] . mp -> desc : ""(no description)"" , marray [ i ] . mp -> flag & BINTEST ? ""binary"" : ""text"" )"	627:4:16270:16513	4939607	0	True				
ANR	4940045	CastExpression	"( void ) fprintf ( stderr , ""%s%s%s: %s\\n"" , marray [ i ] . mp -> mimetype , marray [ i ] . mp -> mimetype [ 0 ] == '\\0' ? """" : ""; "" , marray [ i ] . mp -> desc [ 0 ] ? marray [ i ] . mp -> desc : ""(no description)"" , marray [ i ] . mp -> flag & BINTEST ? ""binary"" : ""text"" )"		4939607	0					
ANR	4940046	CastTarget	void		4939607	0					
ANR	4940047	CallExpression	"fprintf ( stderr , ""%s%s%s: %s\\n"" , marray [ i ] . mp -> mimetype , marray [ i ] . mp -> mimetype [ 0 ] == '\\0' ? """" : ""; "" , marray [ i ] . mp -> desc [ 0 ] ? marray [ i ] . mp -> desc : ""(no description)"" , marray [ i ] . mp -> flag & BINTEST ? ""binary"" : ""text"" )"		4939607	1					
ANR	4940048	Callee	fprintf		4939607	0					
ANR	4940049	Identifier	fprintf		4939607	0					
ANR	4940050	ArgumentList	stderr		4939607	1					
ANR	4940051	Argument	stderr		4939607	0					
ANR	4940052	Identifier	stderr		4939607	0					
ANR	4940053	Argument	"""%s%s%s: %s\\n"""		4939607	1					
ANR	4940054	PrimaryExpression	"""%s%s%s: %s\\n"""		4939607	0					
ANR	4940055	Argument	marray [ i ] . mp -> mimetype		4939607	2					
ANR	4940056	PtrMemberAccess	marray [ i ] . mp -> mimetype		4939607	0					
ANR	4940057	MemberAccess	marray [ i ] . mp		4939607	0					
ANR	4940058	ArrayIndexing	marray [ i ]		4939607	0					
ANR	4940059	Identifier	marray		4939607	0					
ANR	4940060	Identifier	i		4939607	1					
ANR	4940061	Identifier	mp		4939607	1					
ANR	4940062	Identifier	mimetype		4939607	1					
ANR	4940063	Argument	"marray [ i ] . mp -> mimetype [ 0 ] == '\\0' ? """" : ""; """		4939607	3					
ANR	4940064	ConditionalExpression	"marray [ i ] . mp -> mimetype [ 0 ] == '\\0' ? """" : ""; """		4939607	0					
ANR	4940065	Condition	marray [ i ] . mp -> mimetype [ 0 ] == '\\0'		4939607	0					
ANR	4940066	EqualityExpression	marray [ i ] . mp -> mimetype [ 0 ] == '\\0'		4939607	0		==			
ANR	4940067	ArrayIndexing	marray [ i ] . mp -> mimetype [ 0 ]		4939607	0					
ANR	4940068	PtrMemberAccess	marray [ i ] . mp -> mimetype		4939607	0					
ANR	4940069	MemberAccess	marray [ i ] . mp		4939607	0					
ANR	4940070	ArrayIndexing	marray [ i ]		4939607	0					
ANR	4940071	Identifier	marray		4939607	0					
ANR	4940072	Identifier	i		4939607	1					
ANR	4940073	Identifier	mp		4939607	1					
ANR	4940074	Identifier	mimetype		4939607	1					
ANR	4940075	PrimaryExpression	0		4939607	1					
ANR	4940076	PrimaryExpression	'\\0'		4939607	1					
ANR	4940077	PrimaryExpression	""""""		4939607	1					
ANR	4940078	PrimaryExpression	"""; """		4939607	2					
ANR	4940079	Argument	"marray [ i ] . mp -> desc [ 0 ] ? marray [ i ] . mp -> desc : ""(no description)"""		4939607	4					
ANR	4940080	ConditionalExpression	"marray [ i ] . mp -> desc [ 0 ] ? marray [ i ] . mp -> desc : ""(no description)"""		4939607	0					
ANR	4940081	Condition	marray [ i ] . mp -> desc [ 0 ]		4939607	0					
ANR	4940082	ArrayIndexing	marray [ i ] . mp -> desc [ 0 ]		4939607	0					
ANR	4940083	PtrMemberAccess	marray [ i ] . mp -> desc		4939607	0					
ANR	4940084	MemberAccess	marray [ i ] . mp		4939607	0					
ANR	4940085	ArrayIndexing	marray [ i ]		4939607	0					
ANR	4940086	Identifier	marray		4939607	0					
ANR	4940087	Identifier	i		4939607	1					
ANR	4940088	Identifier	mp		4939607	1					
ANR	4940089	Identifier	desc		4939607	1					
ANR	4940090	PrimaryExpression	0		4939607	1					
ANR	4940091	PtrMemberAccess	marray [ i ] . mp -> desc		4939607	1					
ANR	4940092	MemberAccess	marray [ i ] . mp		4939607	0					
ANR	4940093	ArrayIndexing	marray [ i ]		4939607	0					
ANR	4940094	Identifier	marray		4939607	0					
ANR	4940095	Identifier	i		4939607	1					
ANR	4940096	Identifier	mp		4939607	1					
ANR	4940097	Identifier	desc		4939607	1					
ANR	4940098	PrimaryExpression	"""(no description)"""		4939607	2					
ANR	4940099	Argument	"marray [ i ] . mp -> flag & BINTEST ? ""binary"" : ""text"""		4939607	5					
ANR	4940100	ConditionalExpression	"marray [ i ] . mp -> flag & BINTEST ? ""binary"" : ""text"""		4939607	0					
ANR	4940101	Condition	marray [ i ] . mp -> flag & BINTEST		4939607	0					
ANR	4940102	BitAndExpression	marray [ i ] . mp -> flag & BINTEST		4939607	0		&			
ANR	4940103	PtrMemberAccess	marray [ i ] . mp -> flag		4939607	0					
ANR	4940104	MemberAccess	marray [ i ] . mp		4939607	0					
ANR	4940105	ArrayIndexing	marray [ i ]		4939607	0					
ANR	4940106	Identifier	marray		4939607	0					
ANR	4940107	Identifier	i		4939607	1					
ANR	4940108	Identifier	mp		4939607	1					
ANR	4940109	Identifier	flag		4939607	1					
ANR	4940110	Identifier	BINTEST		4939607	1					
ANR	4940111	PrimaryExpression	"""binary"""		4939607	1					
ANR	4940112	PrimaryExpression	"""text"""		4939607	2					
ANR	4940113	IfStatement	if ( marray [ i ] . mp -> flag & BINTEST )		4939607	1					
ANR	4940114	Condition	marray [ i ] . mp -> flag & BINTEST	632:8:16523:16550	4939607	0	True				
ANR	4940115	BitAndExpression	marray [ i ] . mp -> flag & BINTEST		4939607	0		&			
ANR	4940116	PtrMemberAccess	marray [ i ] . mp -> flag		4939607	0					
ANR	4940117	MemberAccess	marray [ i ] . mp		4939607	0					
ANR	4940118	ArrayIndexing	marray [ i ]		4939607	0					
ANR	4940119	Identifier	marray		4939607	0					
ANR	4940120	Identifier	i		4939607	1					
ANR	4940121	Identifier	mp		4939607	1					
ANR	4940122	Identifier	flag		4939607	1					
ANR	4940123	Identifier	BINTEST		4939607	1					
ANR	4940124	CompoundStatement		100:38:2546:2546	4939607	1					
ANR	4940125	Statement	define	633:1:16556:16561	4939607	0	True				
ANR	4940126	Statement	SYMBOL	633:8:16563:16568	4939607	1	True				
ANR	4940127	Statement	"""text"""	633:15:16570:16575	4939607	2	True				
ANR	4940128	Statement	define	634:1:16578:16583	4939607	3	True				
ANR	4940129	Statement	SYMLEN	634:8:16585:16590	4939607	4	True				
ANR	4940130	Statement	sizeof	634:15:16592:16597	4939607	5	True				
ANR	4940131	ExpressionStatement	"( SYMBOL ) char * p = strstr ( marray [ i ] . mp -> desc , ""text"" )"	634:22:16599:16657	4939607	6	True				
ANR	4940132	AssignmentExpression	"( SYMBOL ) char * p = strstr ( marray [ i ] . mp -> desc , ""text"" )"		4939607	0		=			
ANR	4940133	MultiplicativeExpression	( SYMBOL ) char * p		4939607	0		*			
ANR	4940134	CastExpression	( SYMBOL ) char		4939607	0					
ANR	4940135	CastTarget	SYMBOL		4939607	0					
ANR	4940136	Identifier	char		4939607	1					
ANR	4940137	Identifier	p		4939607	1					
ANR	4940138	CallExpression	"strstr ( marray [ i ] . mp -> desc , ""text"" )"		4939607	1					
ANR	4940139	Callee	strstr		4939607	0					
ANR	4940140	Identifier	strstr		4939607	0					
ANR	4940141	ArgumentList	marray [ i ] . mp -> desc		4939607	1					
ANR	4940142	Argument	marray [ i ] . mp -> desc		4939607	0					
ANR	4940143	PtrMemberAccess	marray [ i ] . mp -> desc		4939607	0					
ANR	4940144	MemberAccess	marray [ i ] . mp		4939607	0					
ANR	4940145	ArrayIndexing	marray [ i ]		4939607	0					
ANR	4940146	Identifier	marray		4939607	0					
ANR	4940147	Identifier	i		4939607	1					
ANR	4940148	Identifier	mp		4939607	1					
ANR	4940149	Identifier	desc		4939607	1					
ANR	4940150	Argument	"""text"""		4939607	1					
ANR	4940151	PrimaryExpression	"""text"""		4939607	0					
ANR	4940152	IfStatement	if ( p && ( p == marray [ i ] . mp -> desc || isspace ( ( unsigned char ) p [ - 1 ] ) ) && ( p + SYMLEN - marray [ i ] . mp -> desc == MAXstring || ( p [ SYMLEN ] == '\\0' || isspace ( ( unsigned char ) p [ SYMLEN ] ) ) ) )		4939607	7					
ANR	4940153	Condition	p && ( p == marray [ i ] . mp -> desc || isspace ( ( unsigned char ) p [ - 1 ] ) ) && ( p + SYMLEN - marray [ i ] . mp -> desc == MAXstring || ( p [ SYMLEN ] == '\\0' || isspace ( ( unsigned char ) p [ SYMLEN ] ) ) )	636:9:16668:16859	4939607	0	True				
ANR	4940154	AndExpression	p && ( p == marray [ i ] . mp -> desc || isspace ( ( unsigned char ) p [ - 1 ] ) ) && ( p + SYMLEN - marray [ i ] . mp -> desc == MAXstring || ( p [ SYMLEN ] == '\\0' || isspace ( ( unsigned char ) p [ SYMLEN ] ) ) )		4939607	0		&&			
ANR	4940155	Identifier	p		4939607	0					
ANR	4940156	AndExpression	( p == marray [ i ] . mp -> desc || isspace ( ( unsigned char ) p [ - 1 ] ) ) && ( p + SYMLEN - marray [ i ] . mp -> desc == MAXstring || ( p [ SYMLEN ] == '\\0' || isspace ( ( unsigned char ) p [ SYMLEN ] ) ) )		4939607	1		&&			
ANR	4940157	OrExpression	p == marray [ i ] . mp -> desc || isspace ( ( unsigned char ) p [ - 1 ] )		4939607	0		||			
ANR	4940158	EqualityExpression	p == marray [ i ] . mp -> desc		4939607	0		==			
ANR	4940159	Identifier	p		4939607	0					
ANR	4940160	PtrMemberAccess	marray [ i ] . mp -> desc		4939607	1					
ANR	4940161	MemberAccess	marray [ i ] . mp		4939607	0					
ANR	4940162	ArrayIndexing	marray [ i ]		4939607	0					
ANR	4940163	Identifier	marray		4939607	0					
ANR	4940164	Identifier	i		4939607	1					
ANR	4940165	Identifier	mp		4939607	1					
ANR	4940166	Identifier	desc		4939607	1					
ANR	4940167	CallExpression	isspace ( ( unsigned char ) p [ - 1 ] )		4939607	1					
ANR	4940168	Callee	isspace		4939607	0					
ANR	4940169	Identifier	isspace		4939607	0					
ANR	4940170	ArgumentList	( unsigned char ) p [ - 1 ]		4939607	1					
ANR	4940171	Argument	( unsigned char ) p [ - 1 ]		4939607	0					
ANR	4940172	CastExpression	( unsigned char ) p [ - 1 ]		4939607	0					
ANR	4940173	CastTarget	unsigned char		4939607	0					
ANR	4940174	ArrayIndexing	p [ - 1 ]		4939607	1					
ANR	4940175	Identifier	p		4939607	0					
ANR	4940176	UnaryOperationExpression	- 1		4939607	1					
ANR	4940177	UnaryOperator	-		4939607	0					
ANR	4940178	PrimaryExpression	1		4939607	1					
ANR	4940179	OrExpression	p + SYMLEN - marray [ i ] . mp -> desc == MAXstring || ( p [ SYMLEN ] == '\\0' || isspace ( ( unsigned char ) p [ SYMLEN ] ) )		4939607	1		||			
ANR	4940180	EqualityExpression	p + SYMLEN - marray [ i ] . mp -> desc == MAXstring		4939607	0		==			
ANR	4940181	AdditiveExpression	p + SYMLEN - marray [ i ] . mp -> desc		4939607	0		+			
ANR	4940182	Identifier	p		4939607	0					
ANR	4940183	AdditiveExpression	SYMLEN - marray [ i ] . mp -> desc		4939607	1		-			
ANR	4940184	Identifier	SYMLEN		4939607	0					
ANR	4940185	PtrMemberAccess	marray [ i ] . mp -> desc		4939607	1					
ANR	4940186	MemberAccess	marray [ i ] . mp		4939607	0					
ANR	4940187	ArrayIndexing	marray [ i ]		4939607	0					
ANR	4940188	Identifier	marray		4939607	0					
ANR	4940189	Identifier	i		4939607	1					
ANR	4940190	Identifier	mp		4939607	1					
ANR	4940191	Identifier	desc		4939607	1					
ANR	4940192	Identifier	MAXstring		4939607	1					
ANR	4940193	OrExpression	p [ SYMLEN ] == '\\0' || isspace ( ( unsigned char ) p [ SYMLEN ] )		4939607	1		||			
ANR	4940194	EqualityExpression	p [ SYMLEN ] == '\\0'		4939607	0		==			
ANR	4940195	ArrayIndexing	p [ SYMLEN ]		4939607	0					
ANR	4940196	Identifier	p		4939607	0					
ANR	4940197	Identifier	SYMLEN		4939607	1					
ANR	4940198	PrimaryExpression	'\\0'		4939607	1					
ANR	4940199	CallExpression	isspace ( ( unsigned char ) p [ SYMLEN ] )		4939607	1					
ANR	4940200	Callee	isspace		4939607	0					
ANR	4940201	Identifier	isspace		4939607	0					
ANR	4940202	ArgumentList	( unsigned char ) p [ SYMLEN ]		4939607	1					
ANR	4940203	Argument	( unsigned char ) p [ SYMLEN ]		4939607	0					
ANR	4940204	CastExpression	( unsigned char ) p [ SYMLEN ]		4939607	0					
ANR	4940205	CastTarget	unsigned char		4939607	0					
ANR	4940206	ArrayIndexing	p [ SYMLEN ]		4939607	1					
ANR	4940207	Identifier	p		4939607	0					
ANR	4940208	Identifier	SYMLEN		4939607	1					
ANR	4940209	CompoundStatement		106:69:2855:2855	4939607	1					
ANR	4940210	ExpressionStatement	"( void ) fprintf ( stderr , ""*** Possible binary test for text type\\n"" )"	639:6:16870:16948	4939607	0	True				
ANR	4940211	CastExpression	"( void ) fprintf ( stderr , ""*** Possible binary test for text type\\n"" )"		4939607	0					
ANR	4940212	CastTarget	void		4939607	0					
ANR	4940213	CallExpression	"fprintf ( stderr , ""*** Possible binary test for text type\\n"" )"		4939607	1					
ANR	4940214	Callee	fprintf		4939607	0					
ANR	4940215	Identifier	fprintf		4939607	0					
ANR	4940216	ArgumentList	stderr		4939607	1					
ANR	4940217	Argument	stderr		4939607	0					
ANR	4940218	Identifier	stderr		4939607	0					
ANR	4940219	Argument	"""*** Possible binary test for text type\\n"""		4939607	1					
ANR	4940220	PrimaryExpression	"""*** Possible binary test for text type\\n"""		4939607	0					
ANR	4940221	Statement	undef	642:1:16958:16962	4939607	8	True				
ANR	4940222	Statement	SYMBOL	642:7:16964:16969	4939607	9	True				
ANR	4940223	Statement	undef	643:1:16972:16976	4939607	10	True				
ANR	4940224	Statement	SYMLEN	643:7:16978:16983	4939607	11	True				
ANR	4940225	Condition	++ i < marraycount && marray [ i ] . mp -> cont_level != 0	646:11:17007:17056	4939607	1	True				
ANR	4940226	AndExpression	++ i < marraycount && marray [ i ] . mp -> cont_level != 0		4939607	0		&&			
ANR	4940227	RelationalExpression	++ i < marraycount		4939607	0		<			
ANR	4940228	UnaryExpression	++ i		4939607	0					
ANR	4940229	IncDec	++		4939607	0					
ANR	4940230	Identifier	i		4939607	1					
ANR	4940231	Identifier	marraycount		4939607	1					
ANR	4940232	EqualityExpression	marray [ i ] . mp -> cont_level != 0		4939607	1		!=			
ANR	4940233	PtrMemberAccess	marray [ i ] . mp -> cont_level		4939607	0					
ANR	4940234	MemberAccess	marray [ i ] . mp		4939607	0					
ANR	4940235	ArrayIndexing	marray [ i ]		4939607	0					
ANR	4940236	Identifier	marray		4939607	0					
ANR	4940237	Identifier	i		4939607	1					
ANR	4940238	Identifier	mp		4939607	1					
ANR	4940239	Identifier	cont_level		4939607	1					
ANR	4940240	PrimaryExpression	0		4939607	1					
ANR	4940241	ExpressionStatement	"qsort ( marray , marraycount , sizeof ( * marray ) , apprentice_sort )"	649:1:17065:17127	4939607	15	True				
ANR	4940242	CallExpression	"qsort ( marray , marraycount , sizeof ( * marray ) , apprentice_sort )"		4939607	0					
ANR	4940243	Callee	qsort		4939607	0					
ANR	4940244	Identifier	qsort		4939607	0					
ANR	4940245	ArgumentList	marray		4939607	1					
ANR	4940246	Argument	marray		4939607	0					
ANR	4940247	Identifier	marray		4939607	0					
ANR	4940248	Argument	marraycount		4939607	1					
ANR	4940249	Identifier	marraycount		4939607	0					
ANR	4940250	Argument	sizeof ( * marray )		4939607	2					
ANR	4940251	SizeofExpression	sizeof ( * marray )		4939607	0					
ANR	4940252	Sizeof	sizeof		4939607	0					
ANR	4940253	UnaryOperationExpression	* marray		4939607	1					
ANR	4940254	UnaryOperator	*		4939607	0					
ANR	4940255	Identifier	marray		4939607	1					
ANR	4940256	Argument	apprentice_sort		4939607	3					
ANR	4940257	Identifier	apprentice_sort		4939607	0					
ANR	4940258	ForStatement	for ( i = 0 ; i < marraycount ; i ++ )		4939607	16					
ANR	4940259	ForInit	i = 0 ;	654:6:17216:17221	4939607	0	True				
ANR	4940260	AssignmentExpression	i = 0		4939607	0		=			
ANR	4940261	Identifier	i		4939607	0					
ANR	4940262	PrimaryExpression	0		4939607	1					
ANR	4940263	Condition	i < marraycount	654:13:17223:17237	4939607	1	True				
ANR	4940264	RelationalExpression	i < marraycount		4939607	0		<			
ANR	4940265	Identifier	i		4939607	0					
ANR	4940266	Identifier	marraycount		4939607	1					
ANR	4940267	PostIncDecOperationExpression	i ++	654:30:17240:17242	4939607	2	True				
ANR	4940268	Identifier	i		4939607	0					
ANR	4940269	IncDec	++		4939607	1					
ANR	4940270	CompoundStatement		122:35:3238:3238	4939607	3					
ANR	4940271	IfStatement	if ( marray [ i ] . mp -> cont_level == 0 && marray [ i ] . mp -> type == FILE_DEFAULT )		4939607	0					
ANR	4940272	Condition	marray [ i ] . mp -> cont_level == 0 && marray [ i ] . mp -> type == FILE_DEFAULT	655:6:17253:17325	4939607	0	True				
ANR	4940273	AndExpression	marray [ i ] . mp -> cont_level == 0 && marray [ i ] . mp -> type == FILE_DEFAULT		4939607	0		&&			
ANR	4940274	EqualityExpression	marray [ i ] . mp -> cont_level == 0		4939607	0		==			
ANR	4940275	PtrMemberAccess	marray [ i ] . mp -> cont_level		4939607	0					
ANR	4940276	MemberAccess	marray [ i ] . mp		4939607	0					
ANR	4940277	ArrayIndexing	marray [ i ]		4939607	0					
ANR	4940278	Identifier	marray		4939607	0					
ANR	4940279	Identifier	i		4939607	1					
ANR	4940280	Identifier	mp		4939607	1					
ANR	4940281	Identifier	cont_level		4939607	1					
ANR	4940282	PrimaryExpression	0		4939607	1					
ANR	4940283	EqualityExpression	marray [ i ] . mp -> type == FILE_DEFAULT		4939607	1		==			
ANR	4940284	PtrMemberAccess	marray [ i ] . mp -> type		4939607	0					
ANR	4940285	MemberAccess	marray [ i ] . mp		4939607	0					
ANR	4940286	ArrayIndexing	marray [ i ]		4939607	0					
ANR	4940287	Identifier	marray		4939607	0					
ANR	4940288	Identifier	i		4939607	1					
ANR	4940289	Identifier	mp		4939607	1					
ANR	4940290	Identifier	type		4939607	1					
ANR	4940291	Identifier	FILE_DEFAULT		4939607	1					
ANR	4940292	CompoundStatement		124:42:3321:3321	4939607	1					
ANR	4940293	WhileStatement	while ( ++ i < marraycount )		4939607	0					
ANR	4940294	Condition	++ i < marraycount	657:10:17340:17356	4939607	0	True				
ANR	4940295	RelationalExpression	++ i < marraycount		4939607	0		<			
ANR	4940296	UnaryExpression	++ i		4939607	0					
ANR	4940297	IncDec	++		4939607	0					
ANR	4940298	Identifier	i		4939607	1					
ANR	4940299	Identifier	marraycount		4939607	1					
ANR	4940300	CompoundStatement		125:29:3352:3352	4939607	1					
ANR	4940301	IfStatement	if ( marray [ i ] . mp -> cont_level == 0 )		4939607	0					
ANR	4940302	Condition	marray [ i ] . mp -> cont_level == 0	658:8:17369:17397	4939607	0	True				
ANR	4940303	EqualityExpression	marray [ i ] . mp -> cont_level == 0		4939607	0		==			
ANR	4940304	PtrMemberAccess	marray [ i ] . mp -> cont_level		4939607	0					
ANR	4940305	MemberAccess	marray [ i ] . mp		4939607	0					
ANR	4940306	ArrayIndexing	marray [ i ]		4939607	0					
ANR	4940307	Identifier	marray		4939607	0					
ANR	4940308	Identifier	i		4939607	1					
ANR	4940309	Identifier	mp		4939607	1					
ANR	4940310	Identifier	cont_level		4939607	1					
ANR	4940311	PrimaryExpression	0		4939607	1					
ANR	4940312	CompoundStatement		126:39:3393:3393	4939607	1					
ANR	4940313	BreakStatement	break ;	659:5:17407:17412	4939607	0	True				
ANR	4940314	IfStatement	if ( i != marraycount )		4939607	1					
ANR	4940315	Condition	i != marraycount	662:7:17432:17447	4939607	0	True				
ANR	4940316	EqualityExpression	i != marraycount		4939607	0		!=			
ANR	4940317	Identifier	i		4939607	0					
ANR	4940318	Identifier	marraycount		4939607	1					
ANR	4940319	CompoundStatement		130:25:3443:3443	4939607	1					
ANR	4940320	ExpressionStatement	ms -> line = marray [ i ] . mp -> lineno	663:4:17456:17487	4939607	0	True				
ANR	4940321	AssignmentExpression	ms -> line = marray [ i ] . mp -> lineno		4939607	0		=			
ANR	4940322	PtrMemberAccess	ms -> line		4939607	0					
ANR	4940323	Identifier	ms		4939607	0					
ANR	4940324	Identifier	line		4939607	1					
ANR	4940325	PtrMemberAccess	marray [ i ] . mp -> lineno		4939607	1					
ANR	4940326	MemberAccess	marray [ i ] . mp		4939607	0					
ANR	4940327	ArrayIndexing	marray [ i ]		4939607	0					
ANR	4940328	Identifier	marray		4939607	0					
ANR	4940329	Identifier	i		4939607	1					
ANR	4940330	Identifier	mp		4939607	1					
ANR	4940331	Identifier	lineno		4939607	1					
ANR	4940332	ExpressionStatement	"file_magwarn ( ms , ""level 0 \\""default\\"" did not sort last"" )"	664:4:17510:17568	4939607	1	True				
ANR	4940333	CallExpression	"file_magwarn ( ms , ""level 0 \\""default\\"" did not sort last"" )"		4939607	0					
ANR	4940334	Callee	file_magwarn		4939607	0					
ANR	4940335	Identifier	file_magwarn		4939607	0					
ANR	4940336	ArgumentList	ms		4939607	1					
ANR	4940337	Argument	ms		4939607	0					
ANR	4940338	Identifier	ms		4939607	0					
ANR	4940339	Argument	"""level 0 \\""default\\"" did not sort last"""		4939607	1					
ANR	4940340	PrimaryExpression	"""level 0 \\""default\\"" did not sort last"""		4939607	0					
ANR	4940341	BreakStatement	break ;	666:3:17578:17583	4939607	2	True				
ANR	4940342	ForStatement	for ( i = 0 ; i < marraycount ; i ++ )		4939607	17					
ANR	4940343	ForInit	i = 0 ;	670:6:17599:17604	4939607	0	True				
ANR	4940344	AssignmentExpression	i = 0		4939607	0		=			
ANR	4940345	Identifier	i		4939607	0					
ANR	4940346	PrimaryExpression	0		4939607	1					
ANR	4940347	Condition	i < marraycount	670:13:17606:17620	4939607	1	True				
ANR	4940348	RelationalExpression	i < marraycount		4939607	0		<			
ANR	4940349	Identifier	i		4939607	0					
ANR	4940350	Identifier	marraycount		4939607	1					
ANR	4940351	PostIncDecOperationExpression	i ++	670:30:17623:17625	4939607	2	True				
ANR	4940352	Identifier	i		4939607	0					
ANR	4940353	IncDec	++		4939607	1					
ANR	4940354	CompoundStatement		138:35:3621:3621	4939607	3					
ANR	4940355	ExpressionStatement	mentrycount += marray [ i ] . cont_count	671:2:17632:17667	4939607	0	True				
ANR	4940356	AssignmentExpression	mentrycount += marray [ i ] . cont_count		4939607	0		+=			
ANR	4940357	Identifier	mentrycount		4939607	0					
ANR	4940358	MemberAccess	marray [ i ] . cont_count		4939607	1					
ANR	4940359	ArrayIndexing	marray [ i ]		4939607	0					
ANR	4940360	Identifier	marray		4939607	0					
ANR	4940361	Identifier	i		4939607	1					
ANR	4940362	Identifier	cont_count		4939607	1					
ANR	4940363	IfStatement	if ( ! ( * magicp = malloc ( 1 + ( sizeof ( * * magicp ) * mentrycount ) ) ) )		4939607	18					
ANR	4940364	Condition	! ( * magicp = malloc ( 1 + ( sizeof ( * * magicp ) * mentrycount ) ) )	674:5:17678:17736	4939607	0	True				
ANR	4940365	UnaryOperationExpression	! ( * magicp = malloc ( 1 + ( sizeof ( * * magicp ) * mentrycount ) ) )		4939607	0					
ANR	4940366	UnaryOperator	!		4939607	0					
ANR	4940367	AssignmentExpression	* magicp = malloc ( 1 + ( sizeof ( * * magicp ) * mentrycount ) )		4939607	1		=			
ANR	4940368	UnaryOperationExpression	* magicp		4939607	0					
ANR	4940369	UnaryOperator	*		4939607	0					
ANR	4940370	Identifier	magicp		4939607	1					
ANR	4940371	CallExpression	malloc ( 1 + ( sizeof ( * * magicp ) * mentrycount ) )		4939607	1					
ANR	4940372	Callee	malloc		4939607	0					
ANR	4940373	Identifier	malloc		4939607	0					
ANR	4940374	ArgumentList	1 + ( sizeof ( * * magicp ) * mentrycount )		4939607	1					
ANR	4940375	Argument	1 + ( sizeof ( * * magicp ) * mentrycount )		4939607	0					
ANR	4940376	AdditiveExpression	1 + ( sizeof ( * * magicp ) * mentrycount )		4939607	0		+			
ANR	4940377	PrimaryExpression	1		4939607	0					
ANR	4940378	MultiplicativeExpression	sizeof ( * * magicp ) * mentrycount		4939607	1		*			
ANR	4940379	SizeofExpression	sizeof ( * * magicp )		4939607	0					
ANR	4940380	Sizeof	sizeof		4939607	0					
ANR	4940381	UnaryOperationExpression	* * magicp		4939607	1					
ANR	4940382	UnaryOperator	*		4939607	0					
ANR	4940383	UnaryOperationExpression	* magicp		4939607	1					
ANR	4940384	UnaryOperator	*		4939607	0					
ANR	4940385	Identifier	magicp		4939607	1					
ANR	4940386	Identifier	mentrycount		4939607	1					
ANR	4940387	CompoundStatement		142:66:3732:3732	4939607	1					
ANR	4940388	ExpressionStatement	"file_oomem ( ms , sizeof ( * * magicp ) * mentrycount )"	675:2:17743:17791	4939607	0	True				
ANR	4940389	CallExpression	"file_oomem ( ms , sizeof ( * * magicp ) * mentrycount )"		4939607	0					
ANR	4940390	Callee	file_oomem		4939607	0					
ANR	4940391	Identifier	file_oomem		4939607	0					
ANR	4940392	ArgumentList	ms		4939607	1					
ANR	4940393	Argument	ms		4939607	0					
ANR	4940394	Identifier	ms		4939607	0					
ANR	4940395	Argument	sizeof ( * * magicp ) * mentrycount		4939607	1					
ANR	4940396	MultiplicativeExpression	sizeof ( * * magicp ) * mentrycount		4939607	0		*			
ANR	4940397	SizeofExpression	sizeof ( * * magicp )		4939607	0					
ANR	4940398	Sizeof	sizeof		4939607	0					
ANR	4940399	UnaryOperationExpression	* * magicp		4939607	1					
ANR	4940400	UnaryOperator	*		4939607	0					
ANR	4940401	UnaryOperationExpression	* magicp		4939607	1					
ANR	4940402	UnaryOperator	*		4939607	0					
ANR	4940403	Identifier	magicp		4939607	1					
ANR	4940404	Identifier	mentrycount		4939607	1					
ANR	4940405	ExpressionStatement	errs ++	676:2:17795:17801	4939607	1	True				
ANR	4940406	PostIncDecOperationExpression	errs ++		4939607	0					
ANR	4940407	Identifier	errs		4939607	0					
ANR	4940408	IncDec	++		4939607	1					
ANR	4940409	GotoStatement	goto out ;	677:2:17805:17813	4939607	2	True				
ANR	4940410	Identifier	out		4939607	0					
ANR	4940411	ExpressionStatement	mentrycount = 0	680:1:17820:17835	4939607	19	True				
ANR	4940412	AssignmentExpression	mentrycount = 0		4939607	0		=			
ANR	4940413	Identifier	mentrycount		4939607	0					
ANR	4940414	PrimaryExpression	0		4939607	1					
ANR	4940415	ForStatement	for ( i = 0 ; i < marraycount ; i ++ )		4939607	20					
ANR	4940416	ForInit	i = 0 ;	681:6:17843:17848	4939607	0	True				
ANR	4940417	AssignmentExpression	i = 0		4939607	0		=			
ANR	4940418	Identifier	i		4939607	0					
ANR	4940419	PrimaryExpression	0		4939607	1					
ANR	4940420	Condition	i < marraycount	681:13:17850:17864	4939607	1	True				
ANR	4940421	RelationalExpression	i < marraycount		4939607	0		<			
ANR	4940422	Identifier	i		4939607	0					
ANR	4940423	Identifier	marraycount		4939607	1					
ANR	4940424	PostIncDecOperationExpression	i ++	681:30:17867:17869	4939607	2	True				
ANR	4940425	Identifier	i		4939607	0					
ANR	4940426	IncDec	++		4939607	1					
ANR	4940427	CompoundStatement		149:35:3865:3865	4939607	3					
ANR	4940428	ExpressionStatement	"( void ) memcpy ( * magicp + mentrycount , marray [ i ] . mp , marray [ i ] . cont_count * sizeof ( * * magicp ) )"	682:2:17876:17974	4939607	0	True				
ANR	4940429	CastExpression	"( void ) memcpy ( * magicp + mentrycount , marray [ i ] . mp , marray [ i ] . cont_count * sizeof ( * * magicp ) )"		4939607	0					
ANR	4940430	CastTarget	void		4939607	0					
ANR	4940431	CallExpression	"memcpy ( * magicp + mentrycount , marray [ i ] . mp , marray [ i ] . cont_count * sizeof ( * * magicp ) )"		4939607	1					
ANR	4940432	Callee	memcpy		4939607	0					
ANR	4940433	Identifier	memcpy		4939607	0					
ANR	4940434	ArgumentList	* magicp + mentrycount		4939607	1					
ANR	4940435	Argument	* magicp + mentrycount		4939607	0					
ANR	4940436	AdditiveExpression	* magicp + mentrycount		4939607	0		+			
ANR	4940437	UnaryOperationExpression	* magicp		4939607	0					
ANR	4940438	UnaryOperator	*		4939607	0					
ANR	4940439	Identifier	magicp		4939607	1					
ANR	4940440	Identifier	mentrycount		4939607	1					
ANR	4940441	Argument	marray [ i ] . mp		4939607	1					
ANR	4940442	MemberAccess	marray [ i ] . mp		4939607	0					
ANR	4940443	ArrayIndexing	marray [ i ]		4939607	0					
ANR	4940444	Identifier	marray		4939607	0					
ANR	4940445	Identifier	i		4939607	1					
ANR	4940446	Identifier	mp		4939607	1					
ANR	4940447	Argument	marray [ i ] . cont_count * sizeof ( * * magicp )		4939607	2					
ANR	4940448	MultiplicativeExpression	marray [ i ] . cont_count * sizeof ( * * magicp )		4939607	0		*			
ANR	4940449	MemberAccess	marray [ i ] . cont_count		4939607	0					
ANR	4940450	ArrayIndexing	marray [ i ]		4939607	0					
ANR	4940451	Identifier	marray		4939607	0					
ANR	4940452	Identifier	i		4939607	1					
ANR	4940453	Identifier	cont_count		4939607	1					
ANR	4940454	SizeofExpression	sizeof ( * * magicp )		4939607	1					
ANR	4940455	Sizeof	sizeof		4939607	0					
ANR	4940456	UnaryOperationExpression	* * magicp		4939607	1					
ANR	4940457	UnaryOperator	*		4939607	0					
ANR	4940458	UnaryOperationExpression	* magicp		4939607	1					
ANR	4940459	UnaryOperator	*		4939607	0					
ANR	4940460	Identifier	magicp		4939607	1					
ANR	4940461	ExpressionStatement	mentrycount += marray [ i ] . cont_count	684:2:17978:18013	4939607	1	True				
ANR	4940462	AssignmentExpression	mentrycount += marray [ i ] . cont_count		4939607	0		+=			
ANR	4940463	Identifier	mentrycount		4939607	0					
ANR	4940464	MemberAccess	marray [ i ] . cont_count		4939607	1					
ANR	4940465	ArrayIndexing	marray [ i ]		4939607	0					
ANR	4940466	Identifier	marray		4939607	0					
ANR	4940467	Identifier	i		4939607	1					
ANR	4940468	Identifier	cont_count		4939607	1					
ANR	4940469	Label	out :	686:0:18018:18021	4939607	21	True				
ANR	4940470	Identifier	out		4939607	0					
ANR	4940471	ForStatement	for ( i = 0 ; i < marraycount ; i ++ )		4939607	22					
ANR	4940472	ForInit	i = 0 ;	687:6:18029:18034	4939607	0	True				
ANR	4940473	AssignmentExpression	i = 0		4939607	0		=			
ANR	4940474	Identifier	i		4939607	0					
ANR	4940475	PrimaryExpression	0		4939607	1					
ANR	4940476	Condition	i < marraycount	687:13:18036:18050	4939607	1	True				
ANR	4940477	RelationalExpression	i < marraycount		4939607	0		<			
ANR	4940478	Identifier	i		4939607	0					
ANR	4940479	Identifier	marraycount		4939607	1					
ANR	4940480	PostIncDecOperationExpression	i ++	687:30:18053:18055	4939607	2	True				
ANR	4940481	Identifier	i		4939607	0					
ANR	4940482	IncDec	++		4939607	1					
ANR	4940483	CompoundStatement		155:35:4051:4051	4939607	3					
ANR	4940484	ExpressionStatement	free ( marray [ i ] . mp )	688:2:18062:18081	4939607	0	True				
ANR	4940485	CallExpression	free ( marray [ i ] . mp )		4939607	0					
ANR	4940486	Callee	free		4939607	0					
ANR	4940487	Identifier	free		4939607	0					
ANR	4940488	ArgumentList	marray [ i ] . mp		4939607	1					
ANR	4940489	Argument	marray [ i ] . mp		4939607	0					
ANR	4940490	MemberAccess	marray [ i ] . mp		4939607	0					
ANR	4940491	ArrayIndexing	marray [ i ]		4939607	0					
ANR	4940492	Identifier	marray		4939607	0					
ANR	4940493	Identifier	i		4939607	1					
ANR	4940494	Identifier	mp		4939607	1					
ANR	4940495	ExpressionStatement	free ( marray )	690:1:18087:18100	4939607	23	True				
ANR	4940496	CallExpression	free ( marray )		4939607	0					
ANR	4940497	Callee	free		4939607	0					
ANR	4940498	Identifier	free		4939607	0					
ANR	4940499	ArgumentList	marray		4939607	1					
ANR	4940500	Argument	marray		4939607	0					
ANR	4940501	Identifier	marray		4939607	0					
ANR	4940502	IfStatement	if ( errs )		4939607	24					
ANR	4940503	Condition	errs	691:5:18107:18110	4939607	0	True				
ANR	4940504	Identifier	errs		4939607	0					
ANR	4940505	CompoundStatement		159:11:4106:4106	4939607	1					
ANR	4940506	ExpressionStatement	* magicp = NULL	692:2:18117:18131	4939607	0	True				
ANR	4940507	AssignmentExpression	* magicp = NULL		4939607	0		=			
ANR	4940508	UnaryOperationExpression	* magicp		4939607	0					
ANR	4940509	UnaryOperator	*		4939607	0					
ANR	4940510	Identifier	magicp		4939607	1					
ANR	4940511	Identifier	NULL		4939607	1					
ANR	4940512	ExpressionStatement	* nmagicp = 0	693:2:18135:18147	4939607	1	True				
ANR	4940513	AssignmentExpression	* nmagicp = 0		4939607	0		=			
ANR	4940514	UnaryOperationExpression	* nmagicp		4939607	0					
ANR	4940515	UnaryOperator	*		4939607	0					
ANR	4940516	Identifier	nmagicp		4939607	1					
ANR	4940517	PrimaryExpression	0		4939607	1					
ANR	4940518	ReturnStatement	return errs ;	694:2:18151:18162	4939607	2	True				
ANR	4940519	Identifier	errs		4939607	0					
ANR	4940520	ExpressionStatement	* nmagicp = mentrycount	696:1:18168:18190	4939607	25	True				
ANR	4940521	AssignmentExpression	* nmagicp = mentrycount		4939607	0		=			
ANR	4940522	UnaryOperationExpression	* nmagicp		4939607	0					
ANR	4940523	UnaryOperator	*		4939607	0					
ANR	4940524	Identifier	nmagicp		4939607	1					
ANR	4940525	Identifier	mentrycount		4939607	1					
ANR	4940526	ReturnStatement	return 0 ;	697:1:18193:18201	4939607	26	True				
ANR	4940527	PrimaryExpression	0		4939607	0					
ANR	4940528	ReturnType	static int		4939607	1					
ANR	4940529	Identifier	apprentice_load		4939607	2					
ANR	4940530	ParameterList	"RMagic * ms , struct r_magic * * magicp , ut32 * nmagicp , const char * fn , int action"		4939607	3					
ANR	4940531	Parameter	RMagic * ms	533:27:13926:13935	4939607	0	True				
ANR	4940532	ParameterType	RMagic *		4939607	0					
ANR	4940533	Identifier	ms		4939607	1					
ANR	4940534	Parameter	struct r_magic * * magicp	533:39:13938:13960	4939607	1	True				
ANR	4940535	ParameterType	struct r_magic * *		4939607	0					
ANR	4940536	Identifier	magicp		4939607	1					
ANR	4940537	Parameter	ut32 * nmagicp	533:64:13963:13975	4939607	2	True				
ANR	4940538	ParameterType	ut32 *		4939607	0					
ANR	4940539	Identifier	nmagicp		4939607	1					
ANR	4940540	Parameter	const char * fn	533:79:13978:13991	4939607	3	True				
ANR	4940541	ParameterType	const char *		4939607	0					
ANR	4940542	Identifier	fn		4939607	1					
ANR	4940543	Parameter	int action	533:95:13994:14003	4939607	4	True				
ANR	4940544	ParameterType	int		4939607	0					
ANR	4940545	Identifier	action		4939607	1					
ANR	4940546	CFGEntryNode	ENTRY		4939607		True				
ANR	4940547	CFGExitNode	EXIT		4939607		True				
ANR	4940548	Symbol	marray		4939607						
ANR	4940549	Symbol	errs		4939607						
ANR	4940550	Symbol	subfn		4939607						
ANR	4940551	Symbol	* * marray [ i ] . mp		4939607						
ANR	4940552	Symbol	& marray		4939607						
ANR	4940553	Symbol	* marray		4939607						
ANR	4940554	Symbol	marray [ i ] . mp -> flag		4939607						
ANR	4940555	Symbol	& st		4939607						
ANR	4940556	Symbol	st . st_mode		4939607						
ANR	4940557	Symbol	FILE_CHECK		4939607						
ANR	4940558	Symbol	* marray [ i ] . mp -> mimetype		4939607						
ANR	4940559	Symbol	dir		4939607						
ANR	4940560	Symbol	usg_hdr		4939607						
ANR	4940561	Symbol	* nmagicp		4939607						
ANR	4940562	Symbol	marray [ i ] . mp		4939607						
ANR	4940563	Symbol	hdir		4939607						
ANR	4940564	Symbol	* * magicp		4939607						
ANR	4940565	Symbol	action		4939607						
ANR	4940566	Symbol	FindFirstFileW		4939607						
ANR	4940567	Symbol	& errs		4939607						
ANR	4940568	Symbol	* * i		4939607						
ANR	4940569	Symbol	NULL		4939607						
ANR	4940570	Symbol	nmagicp		4939607						
ANR	4940571	Symbol	marray [ i ] . mp -> cont_level		4939607						
ANR	4940572	Symbol	ms		4939607						
ANR	4940573	Symbol	BINTEST		4939607						
ANR	4940574	Symbol	FILE_DEFAULT		4939607						
ANR	4940575	Symbol	* * marray		4939607						
ANR	4940576	Symbol	isspace		4939607						
ANR	4940577	Symbol	* starttest		4939607						
ANR	4940578	Symbol	stderr		4939607						
ANR	4940579	Symbol	cfname		4939607						
ANR	4940580	Symbol	entry		4939607						
ANR	4940581	Symbol	marray [ starttest ] . mp		4939607						
ANR	4940582	Symbol	* * * marray		4939607						
ANR	4940583	Symbol	strstr		4939607						
ANR	4940584	Symbol	* * * i		4939607						
ANR	4940585	Symbol	ms -> flags		4939607						
ANR	4940586	Symbol	apprentice_sort		4939607						
ANR	4940587	Symbol	* SYMLEN		4939607						
ANR	4940588	Symbol	SYMLEN		4939607						
ANR	4940589	Symbol	marray [ i ] . mp -> type		4939607						
ANR	4940590	Symbol	maxmagic		4939607						
ANR	4940591	Symbol	r_sandbox_enable		4939607						
ANR	4940592	Symbol	fn		4939607						
ANR	4940593	Symbol	wcpath		4939607						
ANR	4940594	Symbol	r_utf16_to_utf8		4939607						
ANR	4940595	Symbol	calloc		4939607						
ANR	4940596	Symbol	entry . cFileName		4939607						
ANR	4940597	Symbol	* ms		4939607						
ANR	4940598	Symbol	starttest		4939607						
ANR	4940599	Symbol	r_utf8_to_utf16		4939607						
ANR	4940600	Symbol	marraycount		4939607						
ANR	4940601	Symbol	marray [ i ] . mp -> lineno		4939607						
ANR	4940602	Symbol	R_MAGIC_DEBUG		4939607						
ANR	4940603	Symbol	* marray [ i ] . mp		4939607						
ANR	4940604	Symbol	* magicp		4939607						
ANR	4940605	Symbol	st		4939607						
ANR	4940606	Symbol	malloc		4939607						
ANR	4940607	Symbol	stat		4939607						
ANR	4940608	Symbol	marray [ i ] . mp -> desc		4939607						
ANR	4940609	Symbol	magicp		4939607						
ANR	4940610	Symbol	d		4939607						
ANR	4940611	Symbol	marray [ i ] . cont_count		4939607						
ANR	4940612	Symbol	i		4939607						
ANR	4940613	Symbol	r_sandbox_check_path		4939607						
ANR	4940614	Symbol	ms -> line		4939607						
ANR	4940615	Symbol	MAXMAGIS		4939607						
ANR	4940616	Symbol	INVALID_HANDLE_VALUE		4939607						
ANR	4940617	Symbol	MAXstring		4939607						
ANR	4940618	Symbol	FindNextFileW		4939607						
ANR	4940619	Symbol	& marraycount		4939607						
ANR	4940620	Symbol	p		4939607						
ANR	4940621	Symbol	& entry		4939607						
ANR	4940622	Symbol	S_ISREG		4939607						
ANR	4940623	Symbol	* i		4939607						
ANR	4940624	Symbol	* marray [ i ] . mp -> desc		4939607						
ANR	4940625	Symbol	char		4939607						
ANR	4940626	Symbol	S_ISDIR		4939607						
ANR	4940627	Symbol	* p		4939607						
ANR	4940628	Symbol	mentrycount		4939607						
ANR	4940629	Symbol	marray [ i ] . mp -> mimetype		4939607						
ANR	4940630	Symbol	R_MAGIC_CHECK		4939607						
ANR	4940631	Function	file_signextend	703:0:18270:19584							
ANR	4940632	FunctionDef	"file_signextend (RMagic * ms , struct r_magic * m , ut64 v)"		4940631	0					
ANR	4940633	CompoundStatement		703:60:18330:19584	4940631	0					
ANR	4940634	IfStatement	if ( ! ( m -> flag & UNSIGNED ) )		4940631	0					
ANR	4940635	Condition	! ( m -> flag & UNSIGNED )	704:5:18337:18357	4940631	0	True				
ANR	4940636	UnaryOperationExpression	! ( m -> flag & UNSIGNED )		4940631	0					
ANR	4940637	UnaryOperator	!		4940631	0					
ANR	4940638	BitAndExpression	m -> flag & UNSIGNED		4940631	1		&			
ANR	4940639	PtrMemberAccess	m -> flag		4940631	0					
ANR	4940640	Identifier	m		4940631	0					
ANR	4940641	Identifier	flag		4940631	1					
ANR	4940642	Identifier	UNSIGNED		4940631	1					
ANR	4940643	CompoundStatement		2:28:29:29	4940631	1					
ANR	4940644	SwitchStatement	switch ( m -> type )		4940631	0					
ANR	4940645	Condition	m -> type	705:10:18372:18378	4940631	0	True				
ANR	4940646	PtrMemberAccess	m -> type		4940631	0					
ANR	4940647	Identifier	m		4940631	0					
ANR	4940648	Identifier	type		4940631	1					
ANR	4940649	CompoundStatement		3:19:50:50	4940631	1					
ANR	4940650	Label	case FILE_BYTE :	711:2:18534:18548	4940631	0	True				
ANR	4940651	Identifier	FILE_BYTE		4940631	0					
ANR	4940652	ExpressionStatement	v = ( char ) v	712:3:18553:18565	4940631	1	True				
ANR	4940653	AssignmentExpression	v = ( char ) v		4940631	0		=			
ANR	4940654	Identifier	v		4940631	0					
ANR	4940655	CastExpression	( char ) v		4940631	1					
ANR	4940656	CastTarget	char		4940631	0					
ANR	4940657	Identifier	v		4940631	1					
ANR	4940658	BreakStatement	break ;	713:3:18570:18575	4940631	2	True				
ANR	4940659	Label	case FILE_SHORT :	714:2:18579:18594	4940631	3	True				
ANR	4940660	Identifier	FILE_SHORT		4940631	0					
ANR	4940661	Label	case FILE_BESHORT :	715:2:18598:18615	4940631	4	True				
ANR	4940662	Identifier	FILE_BESHORT		4940631	0					
ANR	4940663	Label	case FILE_LESHORT :	716:2:18619:18636	4940631	5	True				
ANR	4940664	Identifier	FILE_LESHORT		4940631	0					
ANR	4940665	ExpressionStatement	v = ( short ) v	717:3:18641:18654	4940631	6	True				
ANR	4940666	AssignmentExpression	v = ( short ) v		4940631	0		=			
ANR	4940667	Identifier	v		4940631	0					
ANR	4940668	CastExpression	( short ) v		4940631	1					
ANR	4940669	CastTarget	short		4940631	0					
ANR	4940670	Identifier	v		4940631	1					
ANR	4940671	BreakStatement	break ;	718:3:18659:18664	4940631	7	True				
ANR	4940672	Label	case FILE_DATE :	719:2:18668:18682	4940631	8	True				
ANR	4940673	Identifier	FILE_DATE		4940631	0					
ANR	4940674	Label	case FILE_BEDATE :	720:2:18686:18702	4940631	9	True				
ANR	4940675	Identifier	FILE_BEDATE		4940631	0					
ANR	4940676	Label	case FILE_LEDATE :	721:2:18706:18722	4940631	10	True				
ANR	4940677	Identifier	FILE_LEDATE		4940631	0					
ANR	4940678	Label	case FILE_MEDATE :	722:2:18726:18742	4940631	11	True				
ANR	4940679	Identifier	FILE_MEDATE		4940631	0					
ANR	4940680	Label	case FILE_LDATE :	723:2:18746:18761	4940631	12	True				
ANR	4940681	Identifier	FILE_LDATE		4940631	0					
ANR	4940682	Label	case FILE_BELDATE :	724:2:18765:18782	4940631	13	True				
ANR	4940683	Identifier	FILE_BELDATE		4940631	0					
ANR	4940684	Label	case FILE_LELDATE :	725:2:18786:18803	4940631	14	True				
ANR	4940685	Identifier	FILE_LELDATE		4940631	0					
ANR	4940686	Label	case FILE_MELDATE :	726:2:18807:18824	4940631	15	True				
ANR	4940687	Identifier	FILE_MELDATE		4940631	0					
ANR	4940688	Label	case FILE_LONG :	727:2:18828:18842	4940631	16	True				
ANR	4940689	Identifier	FILE_LONG		4940631	0					
ANR	4940690	Label	case FILE_BELONG :	728:2:18846:18862	4940631	17	True				
ANR	4940691	Identifier	FILE_BELONG		4940631	0					
ANR	4940692	Label	case FILE_LELONG :	729:2:18866:18882	4940631	18	True				
ANR	4940693	Identifier	FILE_LELONG		4940631	0					
ANR	4940694	Label	case FILE_MELONG :	730:2:18886:18902	4940631	19	True				
ANR	4940695	Identifier	FILE_MELONG		4940631	0					
ANR	4940696	Label	case FILE_FLOAT :	731:2:18906:18921	4940631	20	True				
ANR	4940697	Identifier	FILE_FLOAT		4940631	0					
ANR	4940698	Label	case FILE_BEFLOAT :	732:2:18925:18942	4940631	21	True				
ANR	4940699	Identifier	FILE_BEFLOAT		4940631	0					
ANR	4940700	Label	case FILE_LEFLOAT :	733:2:18946:18963	4940631	22	True				
ANR	4940701	Identifier	FILE_LEFLOAT		4940631	0					
ANR	4940702	ExpressionStatement	v = ( int32_t ) v	734:3:18968:18983	4940631	23	True				
ANR	4940703	AssignmentExpression	v = ( int32_t ) v		4940631	0		=			
ANR	4940704	Identifier	v		4940631	0					
ANR	4940705	CastExpression	( int32_t ) v		4940631	1					
ANR	4940706	CastTarget	int32_t		4940631	0					
ANR	4940707	Identifier	v		4940631	1					
ANR	4940708	BreakStatement	break ;	735:3:18988:18993	4940631	24	True				
ANR	4940709	Label	case FILE_QUAD :	736:2:18997:19011	4940631	25	True				
ANR	4940710	Identifier	FILE_QUAD		4940631	0					
ANR	4940711	Label	case FILE_BEQUAD :	737:2:19015:19031	4940631	26	True				
ANR	4940712	Identifier	FILE_BEQUAD		4940631	0					
ANR	4940713	Label	case FILE_LEQUAD :	738:2:19035:19051	4940631	27	True				
ANR	4940714	Identifier	FILE_LEQUAD		4940631	0					
ANR	4940715	Label	case FILE_QDATE :	739:2:19055:19070	4940631	28	True				
ANR	4940716	Identifier	FILE_QDATE		4940631	0					
ANR	4940717	Label	case FILE_QLDATE :	740:2:19074:19090	4940631	29	True				
ANR	4940718	Identifier	FILE_QLDATE		4940631	0					
ANR	4940719	Label	case FILE_BEQDATE :	741:2:19094:19111	4940631	30	True				
ANR	4940720	Identifier	FILE_BEQDATE		4940631	0					
ANR	4940721	Label	case FILE_BEQLDATE :	742:2:19115:19133	4940631	31	True				
ANR	4940722	Identifier	FILE_BEQLDATE		4940631	0					
ANR	4940723	Label	case FILE_LEQDATE :	743:2:19137:19154	4940631	32	True				
ANR	4940724	Identifier	FILE_LEQDATE		4940631	0					
ANR	4940725	Label	case FILE_LEQLDATE :	744:2:19158:19176	4940631	33	True				
ANR	4940726	Identifier	FILE_LEQLDATE		4940631	0					
ANR	4940727	Label	case FILE_DOUBLE :	745:2:19180:19196	4940631	34	True				
ANR	4940728	Identifier	FILE_DOUBLE		4940631	0					
ANR	4940729	Label	case FILE_BEDOUBLE :	746:2:19200:19218	4940631	35	True				
ANR	4940730	Identifier	FILE_BEDOUBLE		4940631	0					
ANR	4940731	Label	case FILE_LEDOUBLE :	747:2:19222:19240	4940631	36	True				
ANR	4940732	Identifier	FILE_LEDOUBLE		4940631	0					
ANR	4940733	ExpressionStatement	v = ( int64_t ) v	748:3:19245:19260	4940631	37	True				
ANR	4940734	AssignmentExpression	v = ( int64_t ) v		4940631	0		=			
ANR	4940735	Identifier	v		4940631	0					
ANR	4940736	CastExpression	( int64_t ) v		4940631	1					
ANR	4940737	CastTarget	int64_t		4940631	0					
ANR	4940738	Identifier	v		4940631	1					
ANR	4940739	BreakStatement	break ;	749:3:19265:19270	4940631	38	True				
ANR	4940740	Label	case FILE_STRING :	750:2:19274:19290	4940631	39	True				
ANR	4940741	Identifier	FILE_STRING		4940631	0					
ANR	4940742	Label	case FILE_PSTRING :	751:2:19294:19311	4940631	40	True				
ANR	4940743	Identifier	FILE_PSTRING		4940631	0					
ANR	4940744	Label	case FILE_BESTRING16 :	752:2:19315:19335	4940631	41	True				
ANR	4940745	Identifier	FILE_BESTRING16		4940631	0					
ANR	4940746	Label	case FILE_LESTRING16 :	753:2:19339:19359	4940631	42	True				
ANR	4940747	Identifier	FILE_LESTRING16		4940631	0					
ANR	4940748	Label	case FILE_REGEX :	754:2:19363:19378	4940631	43	True				
ANR	4940749	Identifier	FILE_REGEX		4940631	0					
ANR	4940750	Label	case FILE_SEARCH :	755:2:19382:19398	4940631	44	True				
ANR	4940751	Identifier	FILE_SEARCH		4940631	0					
ANR	4940752	Label	case FILE_DEFAULT :	756:2:19402:19419	4940631	45	True				
ANR	4940753	Identifier	FILE_DEFAULT		4940631	0					
ANR	4940754	BreakStatement	break ;	757:3:19424:19429	4940631	46	True				
ANR	4940755	Label	default :	758:2:19433:19440	4940631	47	True				
ANR	4940756	Identifier	default		4940631	0					
ANR	4940757	IfStatement	if ( ms -> flags & R_MAGIC_CHECK )		4940631	48					
ANR	4940758	Condition	ms -> flags & R_MAGIC_CHECK	759:7:19449:19473	4940631	0	True				
ANR	4940759	BitAndExpression	ms -> flags & R_MAGIC_CHECK		4940631	0		&			
ANR	4940760	PtrMemberAccess	ms -> flags		4940631	0					
ANR	4940761	Identifier	ms		4940631	0					
ANR	4940762	Identifier	flags		4940631	1					
ANR	4940763	Identifier	R_MAGIC_CHECK		4940631	1					
ANR	4940764	CompoundStatement		57:34:1145:1145	4940631	1					
ANR	4940765	ExpressionStatement	"file_magwarn ( ms , ""cannot happen: m->type=%d\\n"" , m -> type )"	760:4:19482:19544	4940631	0	True				
ANR	4940766	CallExpression	"file_magwarn ( ms , ""cannot happen: m->type=%d\\n"" , m -> type )"		4940631	0					
ANR	4940767	Callee	file_magwarn		4940631	0					
ANR	4940768	Identifier	file_magwarn		4940631	0					
ANR	4940769	ArgumentList	ms		4940631	1					
ANR	4940770	Argument	ms		4940631	0					
ANR	4940771	Identifier	ms		4940631	0					
ANR	4940772	Argument	"""cannot happen: m->type=%d\\n"""		4940631	1					
ANR	4940773	PrimaryExpression	"""cannot happen: m->type=%d\\n"""		4940631	0					
ANR	4940774	Argument	m -> type		4940631	2					
ANR	4940775	PtrMemberAccess	m -> type		4940631	0					
ANR	4940776	Identifier	m		4940631	0					
ANR	4940777	Identifier	type		4940631	1					
ANR	4940778	ReturnStatement	return ~0U ;	763:3:19554:19564	4940631	49	True				
ANR	4940779	Identifier	~0U		4940631	0					
ANR	4940780	ReturnStatement	return v ;	766:1:19574:19582	4940631	1	True				
ANR	4940781	Identifier	v		4940631	0					
ANR	4940782	ReturnType	ut64		4940631	1					
ANR	4940783	Identifier	file_signextend		4940631	2					
ANR	4940784	ParameterList	"RMagic * ms , struct r_magic * m , ut64 v"		4940631	3					
ANR	4940785	Parameter	RMagic * ms	703:21:18291:18300	4940631	0	True				
ANR	4940786	ParameterType	RMagic *		4940631	0					
ANR	4940787	Identifier	ms		4940631	1					
ANR	4940788	Parameter	struct r_magic * m	703:33:18303:18319	4940631	1	True				
ANR	4940789	ParameterType	struct r_magic *		4940631	0					
ANR	4940790	Identifier	m		4940631	1					
ANR	4940791	Parameter	ut64 v	703:52:18322:18327	4940631	2	True				
ANR	4940792	ParameterType	ut64		4940631	0					
ANR	4940793	Identifier	v		4940631	1					
ANR	4940794	CFGEntryNode	ENTRY		4940631		True				
ANR	4940795	CFGExitNode	EXIT		4940631		True				
ANR	4940796	Symbol	m -> type		4940631						
ANR	4940797	Symbol	~0U		4940631						
ANR	4940798	Symbol	ms		4940631						
ANR	4940799	Symbol	v		4940631						
ANR	4940800	Symbol	* m		4940631						
ANR	4940801	Symbol	UNSIGNED		4940631						
ANR	4940802	Symbol	m -> flag		4940631						
ANR	4940803	Symbol	ms -> flags		4940631						
ANR	4940804	Symbol	m		4940631						
ANR	4940805	Symbol	R_MAGIC_CHECK		4940631						
ANR	4940806	Symbol	* ms		4940631						
ANR	4940807	Function	string_modifier_check	769:0:19587:20799							
ANR	4940808	FunctionDef	"string_modifier_check (RMagic * ms , struct r_magic * m)"		4940807	0					
ANR	4940809	CompoundStatement		769:64:19651:20799	4940807	0					
ANR	4940810	IfStatement	if ( ( ms -> flags & R_MAGIC_CHECK ) == 0 )		4940807	0					
ANR	4940811	Condition	( ms -> flags & R_MAGIC_CHECK ) == 0	770:5:19658:19689	4940807	0	True				
ANR	4940812	EqualityExpression	( ms -> flags & R_MAGIC_CHECK ) == 0		4940807	0		==			
ANR	4940813	BitAndExpression	ms -> flags & R_MAGIC_CHECK		4940807	0		&			
ANR	4940814	PtrMemberAccess	ms -> flags		4940807	0					
ANR	4940815	Identifier	ms		4940807	0					
ANR	4940816	Identifier	flags		4940807	1					
ANR	4940817	Identifier	R_MAGIC_CHECK		4940807	1					
ANR	4940818	PrimaryExpression	0		4940807	1					
ANR	4940819	CompoundStatement		2:39:40:40	4940807	1					
ANR	4940820	ReturnStatement	return 0 ;	771:2:19696:19704	4940807	0	True				
ANR	4940821	PrimaryExpression	0		4940807	0					
ANR	4940822	SwitchStatement	switch ( m -> type )		4940807	1					
ANR	4940823	Condition	m -> type	774:9:19719:19725	4940807	0	True				
ANR	4940824	PtrMemberAccess	m -> type		4940807	0					
ANR	4940825	Identifier	m		4940807	0					
ANR	4940826	Identifier	type		4940807	1					
ANR	4940827	CompoundStatement		6:18:76:76	4940807	1					
ANR	4940828	Label	case FILE_BESTRING16 :	775:1:19731:19751	4940807	0	True				
ANR	4940829	Identifier	FILE_BESTRING16		4940807	0					
ANR	4940830	Label	case FILE_LESTRING16 :	776:1:19754:19774	4940807	1	True				
ANR	4940831	Identifier	FILE_LESTRING16		4940807	0					
ANR	4940832	IfStatement	if ( m -> str_flags != 0 )		4940807	2					
ANR	4940833	Condition	m -> str_flags != 0	777:6:19782:19798	4940807	0	True				
ANR	4940834	EqualityExpression	m -> str_flags != 0		4940807	0		!=			
ANR	4940835	PtrMemberAccess	m -> str_flags		4940807	0					
ANR	4940836	Identifier	m		4940807	0					
ANR	4940837	Identifier	str_flags		4940807	1					
ANR	4940838	PrimaryExpression	0		4940807	1					
ANR	4940839	CompoundStatement		9:25:149:149	4940807	1					
ANR	4940840	ExpressionStatement	"file_magwarn ( ms , ""no modifiers allowed for 16-bit strings\\n"" )"	778:3:19806:19874	4940807	0	True				
ANR	4940841	CallExpression	"file_magwarn ( ms , ""no modifiers allowed for 16-bit strings\\n"" )"		4940807	0					
ANR	4940842	Callee	file_magwarn		4940807	0					
ANR	4940843	Identifier	file_magwarn		4940807	0					
ANR	4940844	ArgumentList	ms		4940807	1					
ANR	4940845	Argument	ms		4940807	0					
ANR	4940846	Identifier	ms		4940807	0					
ANR	4940847	Argument	"""no modifiers allowed for 16-bit strings\\n"""		4940807	1					
ANR	4940848	PrimaryExpression	"""no modifiers allowed for 16-bit strings\\n"""		4940807	0					
ANR	4940849	ReturnStatement	return - 1 ;	780:3:19879:19888	4940807	1	True				
ANR	4940850	UnaryOperationExpression	- 1		4940807	0					
ANR	4940851	UnaryOperator	-		4940807	0					
ANR	4940852	PrimaryExpression	1		4940807	1					
ANR	4940853	BreakStatement	break ;	782:2:19896:19901	4940807	3	True				
ANR	4940854	Label	case FILE_STRING :	783:1:19904:19920	4940807	4	True				
ANR	4940855	Identifier	FILE_STRING		4940807	0					
ANR	4940856	Label	case FILE_PSTRING :	784:1:19923:19940	4940807	5	True				
ANR	4940857	Identifier	FILE_PSTRING		4940807	0					
ANR	4940858	IfStatement	if ( ( m -> str_flags & REGEX_OFFSET_START ) != 0 )		4940807	6					
ANR	4940859	Condition	( m -> str_flags & REGEX_OFFSET_START ) != 0	785:6:19948:19987	4940807	0	True				
ANR	4940860	EqualityExpression	( m -> str_flags & REGEX_OFFSET_START ) != 0		4940807	0		!=			
ANR	4940861	BitAndExpression	m -> str_flags & REGEX_OFFSET_START		4940807	0		&			
ANR	4940862	PtrMemberAccess	m -> str_flags		4940807	0					
ANR	4940863	Identifier	m		4940807	0					
ANR	4940864	Identifier	str_flags		4940807	1					
ANR	4940865	Identifier	REGEX_OFFSET_START		4940807	1					
ANR	4940866	PrimaryExpression	0		4940807	1					
ANR	4940867	CompoundStatement		17:48:338:338	4940807	1					
ANR	4940868	ExpressionStatement	"file_magwarn ( ms , ""'/%c' only allowed on regex and search\\n"" , CHAR_REGEX_OFFSET_START )"	786:3:19995:20094	4940807	0	True				
ANR	4940869	CallExpression	"file_magwarn ( ms , ""'/%c' only allowed on regex and search\\n"" , CHAR_REGEX_OFFSET_START )"		4940807	0					
ANR	4940870	Callee	file_magwarn		4940807	0					
ANR	4940871	Identifier	file_magwarn		4940807	0					
ANR	4940872	ArgumentList	ms		4940807	1					
ANR	4940873	Argument	ms		4940807	0					
ANR	4940874	Identifier	ms		4940807	0					
ANR	4940875	Argument	"""'/%c' only allowed on regex and search\\n"""		4940807	1					
ANR	4940876	PrimaryExpression	"""'/%c' only allowed on regex and search\\n"""		4940807	0					
ANR	4940877	Argument	CHAR_REGEX_OFFSET_START		4940807	2					
ANR	4940878	Identifier	CHAR_REGEX_OFFSET_START		4940807	0					
ANR	4940879	ReturnStatement	return - 1 ;	789:3:20099:20108	4940807	1	True				
ANR	4940880	UnaryOperationExpression	- 1		4940807	0					
ANR	4940881	UnaryOperator	-		4940807	0					
ANR	4940882	PrimaryExpression	1		4940807	1					
ANR	4940883	BreakStatement	break ;	791:2:20116:20121	4940807	7	True				
ANR	4940884	Label	case FILE_SEARCH :	792:1:20124:20140	4940807	8	True				
ANR	4940885	Identifier	FILE_SEARCH		4940807	0					
ANR	4940886	IfStatement	if ( m -> str_range == 0 )		4940807	9					
ANR	4940887	Condition	m -> str_range == 0	793:6:20148:20164	4940807	0	True				
ANR	4940888	EqualityExpression	m -> str_range == 0		4940807	0		==			
ANR	4940889	PtrMemberAccess	m -> str_range		4940807	0					
ANR	4940890	Identifier	m		4940807	0					
ANR	4940891	Identifier	str_range		4940807	1					
ANR	4940892	PrimaryExpression	0		4940807	1					
ANR	4940893	CompoundStatement		25:25:515:515	4940807	1					
ANR	4940894	ExpressionStatement	"file_magwarn ( ms , ""missing range; defaulting to %d\\n"" , STRING_DEFAULT_RANGE )"	794:3:20172:20282	4940807	0	True				
ANR	4940895	CallExpression	"file_magwarn ( ms , ""missing range; defaulting to %d\\n"" , STRING_DEFAULT_RANGE )"		4940807	0					
ANR	4940896	Callee	file_magwarn		4940807	0					
ANR	4940897	Identifier	file_magwarn		4940807	0					
ANR	4940898	ArgumentList	ms		4940807	1					
ANR	4940899	Argument	ms		4940807	0					
ANR	4940900	Identifier	ms		4940807	0					
ANR	4940901	Argument	"""missing range; defaulting to %d\\n"""		4940807	1					
ANR	4940902	PrimaryExpression	"""missing range; defaulting to %d\\n"""		4940807	0					
ANR	4940903	Argument	STRING_DEFAULT_RANGE		4940807	2					
ANR	4940904	Identifier	STRING_DEFAULT_RANGE		4940807	0					
ANR	4940905	ExpressionStatement	m -> str_range = STRING_DEFAULT_RANGE	797:3:20287:20322	4940807	1	True				
ANR	4940906	AssignmentExpression	m -> str_range = STRING_DEFAULT_RANGE		4940807	0		=			
ANR	4940907	PtrMemberAccess	m -> str_range		4940807	0					
ANR	4940908	Identifier	m		4940807	0					
ANR	4940909	Identifier	str_range		4940807	1					
ANR	4940910	Identifier	STRING_DEFAULT_RANGE		4940807	1					
ANR	4940911	ReturnStatement	return - 1 ;	798:3:20327:20336	4940807	2	True				
ANR	4940912	UnaryOperationExpression	- 1		4940807	0					
ANR	4940913	UnaryOperator	-		4940807	0					
ANR	4940914	PrimaryExpression	1		4940807	1					
ANR	4940915	BreakStatement	break ;	800:2:20344:20349	4940807	10	True				
ANR	4940916	Label	case FILE_REGEX :	801:1:20352:20367	4940807	11	True				
ANR	4940917	Identifier	FILE_REGEX		4940807	0					
ANR	4940918	IfStatement	if ( ( m -> str_flags & STRING_COMPACT_BLANK ) != 0 )		4940807	12					
ANR	4940919	Condition	( m -> str_flags & STRING_COMPACT_BLANK ) != 0	802:6:20375:20416	4940807	0	True				
ANR	4940920	EqualityExpression	( m -> str_flags & STRING_COMPACT_BLANK ) != 0		4940807	0		!=			
ANR	4940921	BitAndExpression	m -> str_flags & STRING_COMPACT_BLANK		4940807	0		&			
ANR	4940922	PtrMemberAccess	m -> str_flags		4940807	0					
ANR	4940923	Identifier	m		4940807	0					
ANR	4940924	Identifier	str_flags		4940807	1					
ANR	4940925	Identifier	STRING_COMPACT_BLANK		4940807	1					
ANR	4940926	PrimaryExpression	0		4940807	1					
ANR	4940927	CompoundStatement		34:50:767:767	4940807	1					
ANR	4940928	ExpressionStatement	"file_magwarn ( ms , ""'/%c' not allowed on regex\\n"" , CHAR_COMPACT_BLANK )"	803:3:20424:20499	4940807	0	True				
ANR	4940929	CallExpression	"file_magwarn ( ms , ""'/%c' not allowed on regex\\n"" , CHAR_COMPACT_BLANK )"		4940807	0					
ANR	4940930	Callee	file_magwarn		4940807	0					
ANR	4940931	Identifier	file_magwarn		4940807	0					
ANR	4940932	ArgumentList	ms		4940807	1					
ANR	4940933	Argument	ms		4940807	0					
ANR	4940934	Identifier	ms		4940807	0					
ANR	4940935	Argument	"""'/%c' not allowed on regex\\n"""		4940807	1					
ANR	4940936	PrimaryExpression	"""'/%c' not allowed on regex\\n"""		4940807	0					
ANR	4940937	Argument	CHAR_COMPACT_BLANK		4940807	2					
ANR	4940938	Identifier	CHAR_COMPACT_BLANK		4940807	0					
ANR	4940939	ReturnStatement	return - 1 ;	805:3:20504:20513	4940807	1	True				
ANR	4940940	UnaryOperationExpression	- 1		4940807	0					
ANR	4940941	UnaryOperator	-		4940807	0					
ANR	4940942	PrimaryExpression	1		4940807	1					
ANR	4940943	IfStatement	if ( ( m -> str_flags & STRING_COMPACT_OPTIONAL_BLANK ) != 0 )		4940807	13					
ANR	4940944	Condition	( m -> str_flags & STRING_COMPACT_OPTIONAL_BLANK ) != 0	807:6:20525:20575	4940807	0	True				
ANR	4940945	EqualityExpression	( m -> str_flags & STRING_COMPACT_OPTIONAL_BLANK ) != 0		4940807	0		!=			
ANR	4940946	BitAndExpression	m -> str_flags & STRING_COMPACT_OPTIONAL_BLANK		4940807	0		&			
ANR	4940947	PtrMemberAccess	m -> str_flags		4940807	0					
ANR	4940948	Identifier	m		4940807	0					
ANR	4940949	Identifier	str_flags		4940807	1					
ANR	4940950	Identifier	STRING_COMPACT_OPTIONAL_BLANK		4940807	1					
ANR	4940951	PrimaryExpression	0		4940807	1					
ANR	4940952	CompoundStatement		39:59:926:926	4940807	1					
ANR	4940953	ExpressionStatement	"file_magwarn ( ms , ""'/%c' not allowed on regex\\n"" , CHAR_COMPACT_OPTIONAL_BLANK )"	808:3:20583:20667	4940807	0	True				
ANR	4940954	CallExpression	"file_magwarn ( ms , ""'/%c' not allowed on regex\\n"" , CHAR_COMPACT_OPTIONAL_BLANK )"		4940807	0					
ANR	4940955	Callee	file_magwarn		4940807	0					
ANR	4940956	Identifier	file_magwarn		4940807	0					
ANR	4940957	ArgumentList	ms		4940807	1					
ANR	4940958	Argument	ms		4940807	0					
ANR	4940959	Identifier	ms		4940807	0					
ANR	4940960	Argument	"""'/%c' not allowed on regex\\n"""		4940807	1					
ANR	4940961	PrimaryExpression	"""'/%c' not allowed on regex\\n"""		4940807	0					
ANR	4940962	Argument	CHAR_COMPACT_OPTIONAL_BLANK		4940807	2					
ANR	4940963	Identifier	CHAR_COMPACT_OPTIONAL_BLANK		4940807	0					
ANR	4940964	ReturnStatement	return - 1 ;	810:3:20672:20681	4940807	1	True				
ANR	4940965	UnaryOperationExpression	- 1		4940807	0					
ANR	4940966	UnaryOperator	-		4940807	0					
ANR	4940967	PrimaryExpression	1		4940807	1					
ANR	4940968	BreakStatement	break ;	812:2:20689:20694	4940807	14	True				
ANR	4940969	Label	default :	813:1:20697:20704	4940807	15	True				
ANR	4940970	Identifier	default		4940807	0					
ANR	4940971	ExpressionStatement	"file_magwarn ( ms , ""coding error: m->type=%d\\n"" , m -> type )"	814:2:20708:20770	4940807	16	True				
ANR	4940972	CallExpression	"file_magwarn ( ms , ""coding error: m->type=%d\\n"" , m -> type )"		4940807	0					
ANR	4940973	Callee	file_magwarn		4940807	0					
ANR	4940974	Identifier	file_magwarn		4940807	0					
ANR	4940975	ArgumentList	ms		4940807	1					
ANR	4940976	Argument	ms		4940807	0					
ANR	4940977	Identifier	ms		4940807	0					
ANR	4940978	Argument	"""coding error: m->type=%d\\n"""		4940807	1					
ANR	4940979	PrimaryExpression	"""coding error: m->type=%d\\n"""		4940807	0					
ANR	4940980	Argument	m -> type		4940807	2					
ANR	4940981	PtrMemberAccess	m -> type		4940807	0					
ANR	4940982	Identifier	m		4940807	0					
ANR	4940983	Identifier	type		4940807	1					
ANR	4940984	ReturnStatement	return - 1 ;	816:2:20774:20783	4940807	17	True				
ANR	4940985	UnaryOperationExpression	- 1		4940807	0					
ANR	4940986	UnaryOperator	-		4940807	0					
ANR	4940987	PrimaryExpression	1		4940807	1					
ANR	4940988	ReturnStatement	return 0 ;	818:1:20789:20797	4940807	2	True				
ANR	4940989	PrimaryExpression	0		4940807	0					
ANR	4940990	ReturnType	static int		4940807	1					
ANR	4940991	Identifier	string_modifier_check		4940807	2					
ANR	4940992	ParameterList	"RMagic * ms , struct r_magic * m"		4940807	3					
ANR	4940993	Parameter	RMagic * ms	769:33:19620:19629	4940807	0	True				
ANR	4940994	ParameterType	RMagic *		4940807	0					
ANR	4940995	Identifier	ms		4940807	1					
ANR	4940996	Parameter	struct r_magic * m	769:45:19632:19648	4940807	1	True				
ANR	4940997	ParameterType	struct r_magic *		4940807	0					
ANR	4940998	Identifier	m		4940807	1					
ANR	4940999	CFGEntryNode	ENTRY		4940807		True				
ANR	4941000	CFGExitNode	EXIT		4940807		True				
ANR	4941001	Symbol	CHAR_COMPACT_OPTIONAL_BLANK		4940807						
ANR	4941002	Symbol	CHAR_COMPACT_BLANK		4940807						
ANR	4941003	Symbol	ms		4940807						
ANR	4941004	Symbol	REGEX_OFFSET_START		4940807						
ANR	4941005	Symbol	m -> str_flags		4940807						
ANR	4941006	Symbol	m -> str_range		4940807						
ANR	4941007	Symbol	STRING_COMPACT_OPTIONAL_BLANK		4940807						
ANR	4941008	Symbol	m		4940807						
ANR	4941009	Symbol	STRING_DEFAULT_RANGE		4940807						
ANR	4941010	Symbol	* ms		4940807						
ANR	4941011	Symbol	m -> type		4940807						
ANR	4941012	Symbol	STRING_COMPACT_BLANK		4940807						
ANR	4941013	Symbol	* m		4940807						
ANR	4941014	Symbol	ms -> flags		4940807						
ANR	4941015	Symbol	R_MAGIC_CHECK		4940807						
ANR	4941016	Symbol	CHAR_REGEX_OFFSET_START		4940807						
ANR	4941017	Function	get_op	821:0:20802:21121							
ANR	4941018	FunctionDef	get_op (char c)		4941017	0					
ANR	4941019	CompoundStatement		821:26:20828:21121	4941017	0					
ANR	4941020	SwitchStatement	switch ( c )		4941017	0					
ANR	4941021	Condition	c	822:9:20839:20839	4941017	0	True				
ANR	4941022	Identifier	c		4941017	0					
ANR	4941023	CompoundStatement		2:12:13:13	4941017	1					
ANR	4941024	Label	case '&' :	823:1:20845:20853	4941017	0	True				
ANR	4941025	ReturnStatement	return FILE_OPAND ;	823:11:20855:20872	4941017	1	True				
ANR	4941026	Identifier	FILE_OPAND		4941017	0					
ANR	4941027	Label	case '|' :	824:1:20875:20883	4941017	2	True				
ANR	4941028	ReturnStatement	return FILE_OPOR ;	824:11:20885:20901	4941017	3	True				
ANR	4941029	Identifier	FILE_OPOR		4941017	0					
ANR	4941030	Label	case '^' :	825:1:20904:20912	4941017	4	True				
ANR	4941031	ReturnStatement	return FILE_OPXOR ;	825:11:20914:20931	4941017	5	True				
ANR	4941032	Identifier	FILE_OPXOR		4941017	0					
ANR	4941033	Label	case '+' :	826:1:20934:20942	4941017	6	True				
ANR	4941034	ReturnStatement	return FILE_OPADD ;	826:11:20944:20961	4941017	7	True				
ANR	4941035	Identifier	FILE_OPADD		4941017	0					
ANR	4941036	Label	case '-' :	827:1:20964:20972	4941017	8	True				
ANR	4941037	ReturnStatement	return FILE_OPMINUS ;	827:11:20974:20993	4941017	9	True				
ANR	4941038	Identifier	FILE_OPMINUS		4941017	0					
ANR	4941039	Label	case '*' :	828:1:20996:21004	4941017	10	True				
ANR	4941040	ReturnStatement	return FILE_OPMULTIPLY ;	828:11:21006:21028	4941017	11	True				
ANR	4941041	Identifier	FILE_OPMULTIPLY		4941017	0					
ANR	4941042	Label	case '/' :	829:1:21031:21039	4941017	12	True				
ANR	4941043	ReturnStatement	return FILE_OPDIVIDE ;	829:11:21041:21061	4941017	13	True				
ANR	4941044	Identifier	FILE_OPDIVIDE		4941017	0					
ANR	4941045	Label	case '%' :	830:1:21064:21072	4941017	14	True				
ANR	4941046	ReturnStatement	return FILE_OPMODULO ;	830:11:21074:21094	4941017	15	True				
ANR	4941047	Identifier	FILE_OPMODULO		4941017	0					
ANR	4941048	Label	default :	831:1:21097:21104	4941017	16	True				
ANR	4941049	Identifier	default		4941017	0					
ANR	4941050	ReturnStatement	return - 1 ;	831:11:21107:21116	4941017	17	True				
ANR	4941051	UnaryOperationExpression	- 1		4941017	0					
ANR	4941052	UnaryOperator	-		4941017	0					
ANR	4941053	PrimaryExpression	1		4941017	1					
ANR	4941054	ReturnType	static int		4941017	1					
ANR	4941055	Identifier	get_op		4941017	2					
ANR	4941056	ParameterList	char c		4941017	3					
ANR	4941057	Parameter	char c	821:18:20820:20825	4941017	0	True				
ANR	4941058	ParameterType	char		4941017	0					
ANR	4941059	Identifier	c		4941017	1					
ANR	4941060	CFGEntryNode	ENTRY		4941017		True				
ANR	4941061	CFGExitNode	EXIT		4941017		True				
ANR	4941062	Symbol	c		4941017						
ANR	4941063	Symbol	FILE_OPOR		4941017						
ANR	4941064	Symbol	FILE_OPMINUS		4941017						
ANR	4941065	Symbol	FILE_OPMODULO		4941017						
ANR	4941066	Symbol	FILE_OPMULTIPLY		4941017						
ANR	4941067	Symbol	FILE_OPADD		4941017						
ANR	4941068	Symbol	FILE_OPAND		4941017						
ANR	4941069	Symbol	FILE_OPDIVIDE		4941017						
ANR	4941070	Symbol	FILE_OPXOR		4941017						
ANR	4941071	Function	get_cond	835:0:21124:21593							
ANR	4941072	FunctionDef	"get_cond (const char * l , const char * * t)"		4941071	0					
ANR	4941073	CompoundStatement		835:51:21175:21593	4941071	0					
ANR	4941074	IdentifierDeclStatement	const struct cond_tbl_s * p ;	836:1:21178:21204	4941071	0	True				
ANR	4941075	IdentifierDecl	* p		4941071	0					
ANR	4941076	IdentifierDeclType	const struct cond_tbl_s *		4941071	0					
ANR	4941077	Identifier	p		4941071	1					
ANR	4941078	Statement	static	837:1:21207:21212	4941071	1	True				
ANR	4941079	Statement	const	837:8:21214:21218	4941071	2	True				
ANR	4941080	ClassDefStatement	struct cond_tbl_s { char name [ 8 ] ; size_t len ; int cond ; }	837:14:21220:21283	4941071	3	True				
ANR	4941081	Identifier	cond_tbl_s		4941071	0					
ANR	4941082	Statement	cond_tbl	841:3:21285:21292	4941071	4	True				
ANR	4941083	Statement	[	841:11:21293:21293	4941071	5	True				
ANR	4941084	Statement	]	841:12:21294:21294	4941071	6	True				
ANR	4941085	Statement	=	841:14:21296:21296	4941071	7	True				
ANR	4941086	CompoundStatement		7:16:122:122	4941071	8					
ANR	4941087	CompoundStatement		8:2:126:126	4941071	0					
ANR	4941088	Statement	"""if"""	842:4:21304:21307	4941071	0	True				
ANR	4941089	Statement	","	842:8:21308:21308	4941071	1	True				
ANR	4941090	Statement	2	842:11:21311:21311	4941071	2	True				
ANR	4941091	Statement	","	842:12:21312:21312	4941071	3	True				
ANR	4941092	Statement	COND_IF	842:14:21314:21320	4941071	4	True				
ANR	4941093	Statement	","	842:23:21323:21323	4941071	1	True				
ANR	4941094	CompoundStatement		9:2:151:151	4941071	2					
ANR	4941095	Statement	"""elif"""	843:4:21329:21334	4941071	0	True				
ANR	4941096	Statement	","	843:10:21335:21335	4941071	1	True				
ANR	4941097	Statement	4	843:12:21337:21337	4941071	2	True				
ANR	4941098	Statement	","	843:13:21338:21338	4941071	3	True				
ANR	4941099	Statement	COND_ELIF	843:15:21340:21348	4941071	4	True				
ANR	4941100	Statement	","	843:26:21351:21351	4941071	3	True				
ANR	4941101	CompoundStatement		10:2:179:179	4941071	4					
ANR	4941102	Statement	"""else"""	844:4:21357:21362	4941071	0	True				
ANR	4941103	Statement	","	844:10:21363:21363	4941071	1	True				
ANR	4941104	Statement	4	844:12:21365:21365	4941071	2	True				
ANR	4941105	Statement	","	844:13:21366:21366	4941071	3	True				
ANR	4941106	Statement	COND_ELSE	844:15:21368:21376	4941071	4	True				
ANR	4941107	Statement	","	844:26:21379:21379	4941071	5	True				
ANR	4941108	CompoundStatement		11:2:207:207	4941071	6					
ANR	4941109	Statement	""""""	845:4:21385:21386	4941071	0	True				
ANR	4941110	Statement	","	845:6:21387:21387	4941071	1	True				
ANR	4941111	Statement	0	845:9:21390:21390	4941071	2	True				
ANR	4941112	Statement	","	845:10:21391:21391	4941071	3	True				
ANR	4941113	Statement	COND_NONE	845:12:21393:21401	4941071	4	True				
ANR	4941114	Statement	","	845:23:21404:21404	4941071	7	True				
ANR	4941115	ExpressionStatement		846:2:21408:21408	4941071	9	True				
ANR	4941116	ForStatement	for ( p = cond_tbl ; p -> len ; p ++ )		4941071	10					
ANR	4941117	ForInit	p = cond_tbl ;	848:6:21417:21429	4941071	0	True				
ANR	4941118	AssignmentExpression	p = cond_tbl		4941071	0		=			
ANR	4941119	Identifier	p		4941071	0					
ANR	4941120	Identifier	cond_tbl		4941071	1					
ANR	4941121	Condition	p -> len	848:20:21431:21436	4941071	1	True				
ANR	4941122	PtrMemberAccess	p -> len		4941071	0					
ANR	4941123	Identifier	p		4941071	0					
ANR	4941124	Identifier	len		4941071	1					
ANR	4941125	PostIncDecOperationExpression	p ++	848:28:21439:21441	4941071	2	True				
ANR	4941126	Identifier	p		4941071	0					
ANR	4941127	IncDec	++		4941071	1					
ANR	4941128	CompoundStatement		14:33:268:268	4941071	3					
ANR	4941129	IfStatement	"if ( strncmp ( l , p -> name , p -> len ) == 0 && isspace ( ( ut8 ) l [ p -> len ] ) )"		4941071	0					
ANR	4941130	Condition	"strncmp ( l , p -> name , p -> len ) == 0 && isspace ( ( ut8 ) l [ p -> len ] )"	849:6:21452:21516	4941071	0	True				
ANR	4941131	AndExpression	"strncmp ( l , p -> name , p -> len ) == 0 && isspace ( ( ut8 ) l [ p -> len ] )"		4941071	0		&&			
ANR	4941132	EqualityExpression	"strncmp ( l , p -> name , p -> len ) == 0"		4941071	0		==			
ANR	4941133	CallExpression	"strncmp ( l , p -> name , p -> len )"		4941071	0					
ANR	4941134	Callee	strncmp		4941071	0					
ANR	4941135	Identifier	strncmp		4941071	0					
ANR	4941136	ArgumentList	l		4941071	1					
ANR	4941137	Argument	l		4941071	0					
ANR	4941138	Identifier	l		4941071	0					
ANR	4941139	Argument	p -> name		4941071	1					
ANR	4941140	PtrMemberAccess	p -> name		4941071	0					
ANR	4941141	Identifier	p		4941071	0					
ANR	4941142	Identifier	name		4941071	1					
ANR	4941143	Argument	p -> len		4941071	2					
ANR	4941144	PtrMemberAccess	p -> len		4941071	0					
ANR	4941145	Identifier	p		4941071	0					
ANR	4941146	Identifier	len		4941071	1					
ANR	4941147	PrimaryExpression	0		4941071	1					
ANR	4941148	CallExpression	isspace ( ( ut8 ) l [ p -> len ] )		4941071	1					
ANR	4941149	Callee	isspace		4941071	0					
ANR	4941150	Identifier	isspace		4941071	0					
ANR	4941151	ArgumentList	( ut8 ) l [ p -> len ]		4941071	1					
ANR	4941152	Argument	( ut8 ) l [ p -> len ]		4941071	0					
ANR	4941153	CastExpression	( ut8 ) l [ p -> len ]		4941071	0					
ANR	4941154	CastTarget	ut8		4941071	0					
ANR	4941155	ArrayIndexing	l [ p -> len ]		4941071	1					
ANR	4941156	Identifier	l		4941071	0					
ANR	4941157	PtrMemberAccess	p -> len		4941071	1					
ANR	4941158	Identifier	p		4941071	0					
ANR	4941159	Identifier	len		4941071	1					
ANR	4941160	CompoundStatement		16:30:343:343	4941071	1					
ANR	4941161	IfStatement	if ( t )		4941071	0					
ANR	4941162	Condition	t	851:7:21528:21528	4941071	0	True				
ANR	4941163	Identifier	t		4941071	0					
ANR	4941164	CompoundStatement		17:10:355:355	4941071	1					
ANR	4941165	ExpressionStatement	* t = l + p -> len	852:4:21537:21552	4941071	0	True				
ANR	4941166	AssignmentExpression	* t = l + p -> len		4941071	0		=			
ANR	4941167	UnaryOperationExpression	* t		4941071	0					
ANR	4941168	UnaryOperator	*		4941071	0					
ANR	4941169	Identifier	t		4941071	1					
ANR	4941170	AdditiveExpression	l + p -> len		4941071	1		+			
ANR	4941171	Identifier	l		4941071	0					
ANR	4941172	PtrMemberAccess	p -> len		4941071	1					
ANR	4941173	Identifier	p		4941071	0					
ANR	4941174	Identifier	len		4941071	1					
ANR	4941175	BreakStatement	break ;	854:3:21562:21567	4941071	1	True				
ANR	4941176	ReturnStatement	return p -> cond ;	857:1:21577:21591	4941071	11	True				
ANR	4941177	PtrMemberAccess	p -> cond		4941071	0					
ANR	4941178	Identifier	p		4941071	0					
ANR	4941179	Identifier	cond		4941071	1					
ANR	4941180	ReturnType	static int		4941071	1					
ANR	4941181	Identifier	get_cond		4941071	2					
ANR	4941182	ParameterList	"const char * l , const char * * t"		4941071	3					
ANR	4941183	Parameter	const char * l	835:20:21144:21156	4941071	0	True				
ANR	4941184	ParameterType	const char *		4941071	0					
ANR	4941185	Identifier	l		4941071	1					
ANR	4941186	Parameter	const char * * t	835:35:21159:21172	4941071	1	True				
ANR	4941187	ParameterType	const char * *		4941071	0					
ANR	4941188	Identifier	t		4941071	1					
ANR	4941189	CFGEntryNode	ENTRY		4941071		True				
ANR	4941190	CFGExitNode	EXIT		4941071		True				
ANR	4941191	Symbol	* p -> len		4941071						
ANR	4941192	Symbol	isspace		4941071						
ANR	4941193	Symbol	cond_tbl		4941071						
ANR	4941194	Symbol	l		4941071						
ANR	4941195	Symbol	p -> cond		4941071						
ANR	4941196	Symbol	p		4941071						
ANR	4941197	Symbol	strncmp		4941071						
ANR	4941198	Symbol	t		4941071						
ANR	4941199	Symbol	* l		4941071						
ANR	4941200	Symbol	p -> len		4941071						
ANR	4941201	Symbol	* p		4941071						
ANR	4941202	Symbol	* * p		4941071						
ANR	4941203	Symbol	p -> name		4941071						
ANR	4941204	Symbol	* t		4941071						
ANR	4941205	Function	check_cond	860:0:21596:22484							
ANR	4941206	FunctionDef	"check_cond (RMagic * ms , int cond , ut32 cont_level)"		4941205	0					
ANR	4941207	CompoundStatement		860:61:21657:22484	4941205	0					
ANR	4941208	IdentifierDeclStatement	int last_cond ;	861:1:21660:21673	4941205	0	True				
ANR	4941209	IdentifierDecl	last_cond		4941205	0					
ANR	4941210	IdentifierDeclType	int		4941205	0					
ANR	4941211	Identifier	last_cond		4941205	1					
ANR	4941212	ExpressionStatement	last_cond = ms -> c . li [ cont_level ] . last_cond	862:1:21676:21718	4941205	1	True				
ANR	4941213	AssignmentExpression	last_cond = ms -> c . li [ cont_level ] . last_cond		4941205	0		=			
ANR	4941214	Identifier	last_cond		4941205	0					
ANR	4941215	MemberAccess	ms -> c . li [ cont_level ] . last_cond		4941205	1					
ANR	4941216	ArrayIndexing	ms -> c . li [ cont_level ]		4941205	0					
ANR	4941217	MemberAccess	ms -> c . li		4941205	0					
ANR	4941218	PtrMemberAccess	ms -> c		4941205	0					
ANR	4941219	Identifier	ms		4941205	0					
ANR	4941220	Identifier	c		4941205	1					
ANR	4941221	Identifier	li		4941205	1					
ANR	4941222	Identifier	cont_level		4941205	1					
ANR	4941223	Identifier	last_cond		4941205	1					
ANR	4941224	SwitchStatement	switch ( cond )		4941205	2					
ANR	4941225	Condition	cond	864:9:21730:21733	4941205	0	True				
ANR	4941226	Identifier	cond		4941205	0					
ANR	4941227	CompoundStatement		5:15:78:78	4941205	1					
ANR	4941228	Label	case COND_IF :	865:1:21739:21751	4941205	0	True				
ANR	4941229	Identifier	COND_IF		4941205	0					
ANR	4941230	IfStatement	if ( last_cond != COND_NONE && last_cond != COND_ELIF )		4941205	1					
ANR	4941231	Condition	last_cond != COND_NONE && last_cond != COND_ELIF	866:6:21759:21806	4941205	0	True				
ANR	4941232	AndExpression	last_cond != COND_NONE && last_cond != COND_ELIF		4941205	0		&&			
ANR	4941233	EqualityExpression	last_cond != COND_NONE		4941205	0		!=			
ANR	4941234	Identifier	last_cond		4941205	0					
ANR	4941235	Identifier	COND_NONE		4941205	1					
ANR	4941236	EqualityExpression	last_cond != COND_ELIF		4941205	1		!=			
ANR	4941237	Identifier	last_cond		4941205	0					
ANR	4941238	Identifier	COND_ELIF		4941205	1					
ANR	4941239	CompoundStatement		7:56:151:151	4941205	1					
ANR	4941240	IfStatement	if ( ms -> flags & R_MAGIC_CHECK )		4941205	0					
ANR	4941241	Condition	ms -> flags & R_MAGIC_CHECK	867:7:21818:21842	4941205	0	True				
ANR	4941242	BitAndExpression	ms -> flags & R_MAGIC_CHECK		4941205	0		&			
ANR	4941243	PtrMemberAccess	ms -> flags		4941205	0					
ANR	4941244	Identifier	ms		4941205	0					
ANR	4941245	Identifier	flags		4941205	1					
ANR	4941246	Identifier	R_MAGIC_CHECK		4941205	1					
ANR	4941247	CompoundStatement		8:34:187:187	4941205	1					
ANR	4941248	ExpressionStatement	"file_magwarn ( ms , ""syntax error: `if'"" )"	868:4:21851:21890	4941205	0	True				
ANR	4941249	CallExpression	"file_magwarn ( ms , ""syntax error: `if'"" )"		4941205	0					
ANR	4941250	Callee	file_magwarn		4941205	0					
ANR	4941251	Identifier	file_magwarn		4941205	0					
ANR	4941252	ArgumentList	ms		4941205	1					
ANR	4941253	Argument	ms		4941205	0					
ANR	4941254	Identifier	ms		4941205	0					
ANR	4941255	Argument	"""syntax error: `if'"""		4941205	1					
ANR	4941256	PrimaryExpression	"""syntax error: `if'"""		4941205	0					
ANR	4941257	ReturnStatement	return - 1 ;	870:3:21900:21909	4941205	1	True				
ANR	4941258	UnaryOperationExpression	- 1		4941205	0					
ANR	4941259	UnaryOperator	-		4941205	0					
ANR	4941260	PrimaryExpression	1		4941205	1					
ANR	4941261	ExpressionStatement	last_cond = COND_IF	872:2:21917:21936	4941205	2	True				
ANR	4941262	AssignmentExpression	last_cond = COND_IF		4941205	0		=			
ANR	4941263	Identifier	last_cond		4941205	0					
ANR	4941264	Identifier	COND_IF		4941205	1					
ANR	4941265	BreakStatement	break ;	873:2:21940:21945	4941205	3	True				
ANR	4941266	Label	case COND_ELIF :	874:1:21948:21962	4941205	4	True				
ANR	4941267	Identifier	COND_ELIF		4941205	0					
ANR	4941268	IfStatement	if ( last_cond != COND_IF && last_cond != COND_ELIF )		4941205	5					
ANR	4941269	Condition	last_cond != COND_IF && last_cond != COND_ELIF	875:6:21970:22015	4941205	0	True				
ANR	4941270	AndExpression	last_cond != COND_IF && last_cond != COND_ELIF		4941205	0		&&			
ANR	4941271	EqualityExpression	last_cond != COND_IF		4941205	0		!=			
ANR	4941272	Identifier	last_cond		4941205	0					
ANR	4941273	Identifier	COND_IF		4941205	1					
ANR	4941274	EqualityExpression	last_cond != COND_ELIF		4941205	1		!=			
ANR	4941275	Identifier	last_cond		4941205	0					
ANR	4941276	Identifier	COND_ELIF		4941205	1					
ANR	4941277	CompoundStatement		16:54:360:360	4941205	1					
ANR	4941278	IfStatement	if ( ms -> flags & R_MAGIC_CHECK )		4941205	0					
ANR	4941279	Condition	ms -> flags & R_MAGIC_CHECK	876:7:22027:22051	4941205	0	True				
ANR	4941280	BitAndExpression	ms -> flags & R_MAGIC_CHECK		4941205	0		&			
ANR	4941281	PtrMemberAccess	ms -> flags		4941205	0					
ANR	4941282	Identifier	ms		4941205	0					
ANR	4941283	Identifier	flags		4941205	1					
ANR	4941284	Identifier	R_MAGIC_CHECK		4941205	1					
ANR	4941285	CompoundStatement		17:34:396:396	4941205	1					
ANR	4941286	ExpressionStatement	"file_magwarn ( ms , ""syntax error: `elif'"" )"	877:4:22060:22101	4941205	0	True				
ANR	4941287	CallExpression	"file_magwarn ( ms , ""syntax error: `elif'"" )"		4941205	0					
ANR	4941288	Callee	file_magwarn		4941205	0					
ANR	4941289	Identifier	file_magwarn		4941205	0					
ANR	4941290	ArgumentList	ms		4941205	1					
ANR	4941291	Argument	ms		4941205	0					
ANR	4941292	Identifier	ms		4941205	0					
ANR	4941293	Argument	"""syntax error: `elif'"""		4941205	1					
ANR	4941294	PrimaryExpression	"""syntax error: `elif'"""		4941205	0					
ANR	4941295	ReturnStatement	return - 1 ;	879:3:22111:22120	4941205	1	True				
ANR	4941296	UnaryOperationExpression	- 1		4941205	0					
ANR	4941297	UnaryOperator	-		4941205	0					
ANR	4941298	PrimaryExpression	1		4941205	1					
ANR	4941299	ExpressionStatement	last_cond = COND_ELIF	881:2:22128:22149	4941205	6	True				
ANR	4941300	AssignmentExpression	last_cond = COND_ELIF		4941205	0		=			
ANR	4941301	Identifier	last_cond		4941205	0					
ANR	4941302	Identifier	COND_ELIF		4941205	1					
ANR	4941303	BreakStatement	break ;	882:2:22153:22158	4941205	7	True				
ANR	4941304	Label	case COND_ELSE :	883:1:22161:22175	4941205	8	True				
ANR	4941305	Identifier	COND_ELSE		4941205	0					
ANR	4941306	IfStatement	if ( last_cond != COND_IF && last_cond != COND_ELIF )		4941205	9					
ANR	4941307	Condition	last_cond != COND_IF && last_cond != COND_ELIF	884:6:22183:22228	4941205	0	True				
ANR	4941308	AndExpression	last_cond != COND_IF && last_cond != COND_ELIF		4941205	0		&&			
ANR	4941309	EqualityExpression	last_cond != COND_IF		4941205	0		!=			
ANR	4941310	Identifier	last_cond		4941205	0					
ANR	4941311	Identifier	COND_IF		4941205	1					
ANR	4941312	EqualityExpression	last_cond != COND_ELIF		4941205	1		!=			
ANR	4941313	Identifier	last_cond		4941205	0					
ANR	4941314	Identifier	COND_ELIF		4941205	1					
ANR	4941315	CompoundStatement		25:54:573:573	4941205	1					
ANR	4941316	IfStatement	if ( ms -> flags & R_MAGIC_CHECK )		4941205	0					
ANR	4941317	Condition	ms -> flags & R_MAGIC_CHECK	885:7:22240:22264	4941205	0	True				
ANR	4941318	BitAndExpression	ms -> flags & R_MAGIC_CHECK		4941205	0		&			
ANR	4941319	PtrMemberAccess	ms -> flags		4941205	0					
ANR	4941320	Identifier	ms		4941205	0					
ANR	4941321	Identifier	flags		4941205	1					
ANR	4941322	Identifier	R_MAGIC_CHECK		4941205	1					
ANR	4941323	CompoundStatement		26:34:609:609	4941205	1					
ANR	4941324	ExpressionStatement	"file_magwarn ( ms , ""syntax error: `else'"" )"	886:4:22273:22314	4941205	0	True				
ANR	4941325	CallExpression	"file_magwarn ( ms , ""syntax error: `else'"" )"		4941205	0					
ANR	4941326	Callee	file_magwarn		4941205	0					
ANR	4941327	Identifier	file_magwarn		4941205	0					
ANR	4941328	ArgumentList	ms		4941205	1					
ANR	4941329	Argument	ms		4941205	0					
ANR	4941330	Identifier	ms		4941205	0					
ANR	4941331	Argument	"""syntax error: `else'"""		4941205	1					
ANR	4941332	PrimaryExpression	"""syntax error: `else'"""		4941205	0					
ANR	4941333	ReturnStatement	return - 1 ;	888:3:22324:22333	4941205	1	True				
ANR	4941334	UnaryOperationExpression	- 1		4941205	0					
ANR	4941335	UnaryOperator	-		4941205	0					
ANR	4941336	PrimaryExpression	1		4941205	1					
ANR	4941337	ExpressionStatement	last_cond = COND_NONE	890:2:22341:22362	4941205	10	True				
ANR	4941338	AssignmentExpression	last_cond = COND_NONE		4941205	0		=			
ANR	4941339	Identifier	last_cond		4941205	0					
ANR	4941340	Identifier	COND_NONE		4941205	1					
ANR	4941341	BreakStatement	break ;	891:2:22366:22371	4941205	11	True				
ANR	4941342	Label	case COND_NONE :	892:1:22374:22388	4941205	12	True				
ANR	4941343	Identifier	COND_NONE		4941205	0					
ANR	4941344	ExpressionStatement	last_cond = COND_NONE	893:2:22392:22413	4941205	13	True				
ANR	4941345	AssignmentExpression	last_cond = COND_NONE		4941205	0		=			
ANR	4941346	Identifier	last_cond		4941205	0					
ANR	4941347	Identifier	COND_NONE		4941205	1					
ANR	4941348	BreakStatement	break ;	894:2:22417:22422	4941205	14	True				
ANR	4941349	ExpressionStatement	ms -> c . li [ cont_level ] . last_cond = last_cond	897:1:22429:22471	4941205	3	True				
ANR	4941350	AssignmentExpression	ms -> c . li [ cont_level ] . last_cond = last_cond		4941205	0		=			
ANR	4941351	MemberAccess	ms -> c . li [ cont_level ] . last_cond		4941205	0					
ANR	4941352	ArrayIndexing	ms -> c . li [ cont_level ]		4941205	0					
ANR	4941353	MemberAccess	ms -> c . li		4941205	0					
ANR	4941354	PtrMemberAccess	ms -> c		4941205	0					
ANR	4941355	Identifier	ms		4941205	0					
ANR	4941356	Identifier	c		4941205	1					
ANR	4941357	Identifier	li		4941205	1					
ANR	4941358	Identifier	cont_level		4941205	1					
ANR	4941359	Identifier	last_cond		4941205	1					
ANR	4941360	Identifier	last_cond		4941205	1					
ANR	4941361	ReturnStatement	return 0 ;	898:1:22474:22482	4941205	4	True				
ANR	4941362	PrimaryExpression	0		4941205	0					
ANR	4941363	ReturnType	static int		4941205	1					
ANR	4941364	Identifier	check_cond		4941205	2					
ANR	4941365	ParameterList	"RMagic * ms , int cond , ut32 cont_level"		4941205	3					
ANR	4941366	Parameter	RMagic * ms	860:22:21618:21627	4941205	0	True				
ANR	4941367	ParameterType	RMagic *		4941205	0					
ANR	4941368	Identifier	ms		4941205	1					
ANR	4941369	Parameter	int cond	860:34:21630:21637	4941205	1	True				
ANR	4941370	ParameterType	int		4941205	0					
ANR	4941371	Identifier	cond		4941205	1					
ANR	4941372	Parameter	ut32 cont_level	860:44:21640:21654	4941205	2	True				
ANR	4941373	ParameterType	ut32		4941205	0					
ANR	4941374	Identifier	cont_level		4941205	1					
ANR	4941375	CFGEntryNode	ENTRY		4941205		True				
ANR	4941376	CFGExitNode	EXIT		4941205		True				
ANR	4941377	Symbol	COND_NONE		4941205						
ANR	4941378	Symbol	COND_IF		4941205						
ANR	4941379	Symbol	* ms -> c		4941205						
ANR	4941380	Symbol	ms		4941205						
ANR	4941381	Symbol	* ms -> c . li		4941205						
ANR	4941382	Symbol	cond		4941205						
ANR	4941383	Symbol	ms -> c . li		4941205						
ANR	4941384	Symbol	* cont_level		4941205						
ANR	4941385	Symbol	ms -> c . li [ cont_level ] . last_cond		4941205						
ANR	4941386	Symbol	* ms		4941205						
ANR	4941387	Symbol	* * ms		4941205						
ANR	4941388	Symbol	COND_ELIF		4941205						
ANR	4941389	Symbol	cont_level		4941205						
ANR	4941390	Symbol	last_cond		4941205						
ANR	4941391	Symbol	ms -> c		4941205						
ANR	4941392	Symbol	ms -> flags		4941205						
ANR	4941393	Symbol	R_MAGIC_CHECK		4941205						
ANR	4941394	Function	parse	904:0:22562:30678							
ANR	4941395	FunctionDef	"parse (RMagic * ms , struct r_magic_entry * * mentryp , ut32 * nmentryp , const char * line , size_t lineno , int action)"		4941394	0					
ANR	4941396	CompoundStatement		904:122:22684:30678	4941394	0					
ANR	4941397	Statement	static	905:1:22687:22692	4941394	0	True				
ANR	4941398	IdentifierDeclStatement	ut32 last_cont_level = 0 ;	905:8:22694:22718	4941394	1	True				
ANR	4941399	IdentifierDecl	last_cont_level = 0		4941394	0					
ANR	4941400	IdentifierDeclType	ut32		4941394	0					
ANR	4941401	Identifier	last_cont_level		4941394	1					
ANR	4941402	AssignmentExpression	last_cont_level = 0		4941394	2		=			
ANR	4941403	Identifier	last_cont_level		4941394	0					
ANR	4941404	PrimaryExpression	0		4941394	1					
ANR	4941405	IdentifierDeclStatement	size_t i ;	906:1:22721:22729	4941394	2	True				
ANR	4941406	IdentifierDecl	i		4941394	0					
ANR	4941407	IdentifierDeclType	size_t		4941394	0					
ANR	4941408	Identifier	i		4941394	1					
ANR	4941409	IdentifierDeclStatement	struct r_magic_entry * me ;	907:1:22732:22756	4941394	3	True				
ANR	4941410	IdentifierDecl	* me		4941394	0					
ANR	4941411	IdentifierDeclType	struct r_magic_entry *		4941394	0					
ANR	4941412	Identifier	me		4941394	1					
ANR	4941413	IdentifierDeclStatement	struct r_magic * m ;	908:1:22759:22776	4941394	4	True				
ANR	4941414	IdentifierDecl	* m		4941394	0					
ANR	4941415	IdentifierDeclType	struct r_magic *		4941394	0					
ANR	4941416	Identifier	m		4941394	1					
ANR	4941417	IdentifierDeclStatement	const char * l = line ;	909:1:22779:22799	4941394	5	True				
ANR	4941418	IdentifierDecl	* l = line		4941394	0					
ANR	4941419	IdentifierDeclType	const char *		4941394	0					
ANR	4941420	Identifier	l		4941394	1					
ANR	4941421	AssignmentExpression	* l = line		4941394	2		=			
ANR	4941422	Identifier	line		4941394	0					
ANR	4941423	Identifier	line		4941394	1					
ANR	4941424	IdentifierDeclStatement	char * t ;	910:1:22802:22809	4941394	6	True				
ANR	4941425	IdentifierDecl	* t		4941394	0					
ANR	4941426	IdentifierDeclType	char *		4941394	0					
ANR	4941427	Identifier	t		4941394	1					
ANR	4941428	IdentifierDeclStatement	int op ;	911:1:22812:22818	4941394	7	True				
ANR	4941429	IdentifierDecl	op		4941394	0					
ANR	4941430	IdentifierDeclType	int		4941394	0					
ANR	4941431	Identifier	op		4941394	1					
ANR	4941432	IdentifierDeclStatement	ut32 cont_level = 0 ;	912:1:22821:22840	4941394	8	True				
ANR	4941433	IdentifierDecl	cont_level = 0		4941394	0					
ANR	4941434	IdentifierDeclType	ut32		4941394	0					
ANR	4941435	Identifier	cont_level		4941394	1					
ANR	4941436	AssignmentExpression	cont_level = 0		4941394	2		=			
ANR	4941437	Identifier	cont_level		4941394	0					
ANR	4941438	PrimaryExpression	0		4941394	1					
ANR	4941439	ForStatement	"for ( ; * l == '>' ; l ++ , cont_level ++ )"		4941394	9					
ANR	4941440	Condition	* l == '>'	914:8:22851:22859	4941394	0	True				
ANR	4941441	EqualityExpression	* l == '>'		4941394	0		==			
ANR	4941442	UnaryOperationExpression	* l		4941394	0					
ANR	4941443	UnaryOperator	*		4941394	0					
ANR	4941444	Identifier	l		4941394	1					
ANR	4941445	PrimaryExpression	'>'		4941394	1					
ANR	4941446	Expression	"l ++ , cont_level ++"	914:19:22862:22878	4941394	1	True				
ANR	4941447	PostIncDecOperationExpression	l ++		4941394	0					
ANR	4941448	Identifier	l		4941394	0					
ANR	4941449	IncDec	++		4941394	1					
ANR	4941450	PostIncDecOperationExpression	cont_level ++		4941394	1					
ANR	4941451	Identifier	cont_level		4941394	0					
ANR	4941452	IncDec	++		4941394	1					
ANR	4941453	CompoundStatement		11:38:196:196	4941394	2					
ANR	4941454	ExpressionStatement		915:2:22885:22885	4941394	0	True				
ANR	4941455	IfStatement	if ( cont_level == 0 || cont_level > last_cont_level )		4941394	10					
ANR	4941456	Condition	cont_level == 0 || cont_level > last_cont_level	917:5:22895:22941	4941394	0	True				
ANR	4941457	OrExpression	cont_level == 0 || cont_level > last_cont_level		4941394	0		||			
ANR	4941458	EqualityExpression	cont_level == 0		4941394	0		==			
ANR	4941459	Identifier	cont_level		4941394	0					
ANR	4941460	PrimaryExpression	0		4941394	1					
ANR	4941461	RelationalExpression	cont_level > last_cont_level		4941394	1		>			
ANR	4941462	Identifier	cont_level		4941394	0					
ANR	4941463	Identifier	last_cont_level		4941394	1					
ANR	4941464	CompoundStatement		14:54:259:259	4941394	1					
ANR	4941465	IfStatement	"if ( file_check_mem ( ms , cont_level ) == - 1 )"		4941394	0					
ANR	4941466	Condition	"file_check_mem ( ms , cont_level ) == - 1"	918:6:22952:22988	4941394	0	True				
ANR	4941467	EqualityExpression	"file_check_mem ( ms , cont_level ) == - 1"		4941394	0		==			
ANR	4941468	CallExpression	"file_check_mem ( ms , cont_level )"		4941394	0					
ANR	4941469	Callee	file_check_mem		4941394	0					
ANR	4941470	Identifier	file_check_mem		4941394	0					
ANR	4941471	ArgumentList	ms		4941394	1					
ANR	4941472	Argument	ms		4941394	0					
ANR	4941473	Identifier	ms		4941394	0					
ANR	4941474	Argument	cont_level		4941394	1					
ANR	4941475	Identifier	cont_level		4941394	0					
ANR	4941476	UnaryOperationExpression	- 1		4941394	1					
ANR	4941477	UnaryOperator	-		4941394	0					
ANR	4941478	PrimaryExpression	1		4941394	1					
ANR	4941479	CompoundStatement		15:45:306:306	4941394	1					
ANR	4941480	ReturnStatement	return - 1 ;	919:3:22996:23005	4941394	0	True				
ANR	4941481	UnaryOperationExpression	- 1		4941394	0					
ANR	4941482	UnaryOperator	-		4941394	0					
ANR	4941483	PrimaryExpression	1		4941394	1					
ANR	4941484	ExpressionStatement	last_cont_level = cont_level	922:1:23015:23043	4941394	11	True				
ANR	4941485	AssignmentExpression	last_cont_level = cont_level		4941394	0		=			
ANR	4941486	Identifier	last_cont_level		4941394	0					
ANR	4941487	Identifier	cont_level		4941394	1					
ANR	4941488	Statement	define	923:1:23046:23051	4941394	12	True				
ANR	4941489	Statement	ALLOC_CHUNK	923:8:23053:23063	4941394	13	True				
ANR	4941490	Statement	(	923:20:23065:23065	4941394	14	True				
ANR	4941491	Statement	size_t	923:21:23066:23071	4941394	15	True				
ANR	4941492	Statement	)	923:27:23072:23072	4941394	16	True				
ANR	4941493	Statement	10	923:28:23073:23074	4941394	17	True				
ANR	4941494	Statement	define	924:1:23077:23082	4941394	18	True				
ANR	4941495	Statement	ALLOC_INCR	924:8:23084:23093	4941394	19	True				
ANR	4941496	Statement	(	924:19:23095:23095	4941394	20	True				
ANR	4941497	Statement	size_t	924:20:23096:23101	4941394	21	True				
ANR	4941498	Statement	)	924:26:23102:23102	4941394	22	True				
ANR	4941499	Statement	200	924:27:23103:23105	4941394	23	True				
ANR	4941500	IfStatement	if ( cont_level != 0 )		4941394	24					
ANR	4941501	Condition	cont_level != 0	925:5:23112:23126	4941394	0	True				
ANR	4941502	EqualityExpression	cont_level != 0		4941394	0		!=			
ANR	4941503	Identifier	cont_level		4941394	0					
ANR	4941504	PrimaryExpression	0		4941394	1					
ANR	4941505	CompoundStatement		22:22:444:444	4941394	1					
ANR	4941506	IfStatement	if ( * nmentryp == 0 )		4941394	0					
ANR	4941507	Condition	* nmentryp == 0	926:6:23137:23150	4941394	0	True				
ANR	4941508	EqualityExpression	* nmentryp == 0		4941394	0		==			
ANR	4941509	UnaryOperationExpression	* nmentryp		4941394	0					
ANR	4941510	UnaryOperator	*		4941394	0					
ANR	4941511	Identifier	nmentryp		4941394	1					
ANR	4941512	PrimaryExpression	0		4941394	1					
ANR	4941513	CompoundStatement		23:22:468:468	4941394	1					
ANR	4941514	ExpressionStatement	"file_error ( ms , 0 , ""No current entry for continuation"" )"	927:3:23158:23212	4941394	0	True				
ANR	4941515	CallExpression	"file_error ( ms , 0 , ""No current entry for continuation"" )"		4941394	0					
ANR	4941516	Callee	file_error		4941394	0					
ANR	4941517	Identifier	file_error		4941394	0					
ANR	4941518	ArgumentList	ms		4941394	1					
ANR	4941519	Argument	ms		4941394	0					
ANR	4941520	Identifier	ms		4941394	0					
ANR	4941521	Argument	0		4941394	1					
ANR	4941522	PrimaryExpression	0		4941394	0					
ANR	4941523	Argument	"""No current entry for continuation"""		4941394	2					
ANR	4941524	PrimaryExpression	"""No current entry for continuation"""		4941394	0					
ANR	4941525	ReturnStatement	return - 1 ;	928:3:23217:23226	4941394	1	True				
ANR	4941526	UnaryOperationExpression	- 1		4941394	0					
ANR	4941527	UnaryOperator	-		4941394	0					
ANR	4941528	PrimaryExpression	1		4941394	1					
ANR	4941529	ExpressionStatement	me = & ( * mentryp ) [ * nmentryp - 1 ]	930:2:23234:23265	4941394	1	True				
ANR	4941530	AssignmentExpression	me = & ( * mentryp ) [ * nmentryp - 1 ]		4941394	0		=			
ANR	4941531	Identifier	me		4941394	0					
ANR	4941532	UnaryOperationExpression	& ( * mentryp ) [ * nmentryp - 1 ]		4941394	1					
ANR	4941533	UnaryOperator	&		4941394	0					
ANR	4941534	ArrayIndexing	( * mentryp ) [ * nmentryp - 1 ]		4941394	1					
ANR	4941535	UnaryOperationExpression	* mentryp		4941394	0					
ANR	4941536	UnaryOperator	*		4941394	0					
ANR	4941537	Identifier	mentryp		4941394	1					
ANR	4941538	AdditiveExpression	* nmentryp - 1		4941394	1		-			
ANR	4941539	UnaryOperationExpression	* nmentryp		4941394	0					
ANR	4941540	UnaryOperator	*		4941394	0					
ANR	4941541	Identifier	nmentryp		4941394	1					
ANR	4941542	PrimaryExpression	1		4941394	1					
ANR	4941543	IfStatement	if ( me -> cont_count == me -> max_count )		4941394	2					
ANR	4941544	Condition	me -> cont_count == me -> max_count	931:6:23273:23303	4941394	0	True				
ANR	4941545	EqualityExpression	me -> cont_count == me -> max_count		4941394	0		==			
ANR	4941546	PtrMemberAccess	me -> cont_count		4941394	0					
ANR	4941547	Identifier	me		4941394	0					
ANR	4941548	Identifier	cont_count		4941394	1					
ANR	4941549	PtrMemberAccess	me -> max_count		4941394	1					
ANR	4941550	Identifier	me		4941394	0					
ANR	4941551	Identifier	max_count		4941394	1					
ANR	4941552	CompoundStatement		30:3:649:689	4941394	1					
ANR	4941553	IdentifierDeclStatement	struct r_magic * nm ;	932:3:23311:23329	4941394	0	True				
ANR	4941554	IdentifierDecl	* nm		4941394	0					
ANR	4941555	IdentifierDeclType	struct r_magic *		4941394	0					
ANR	4941556	Identifier	nm		4941394	1					
ANR	4941557	IdentifierDeclStatement	size_t cnt = me -> max_count + ALLOC_CHUNK ;	933:3:23334:23374	4941394	1	True				
ANR	4941558	IdentifierDecl	cnt = me -> max_count + ALLOC_CHUNK		4941394	0					
ANR	4941559	IdentifierDeclType	size_t		4941394	0					
ANR	4941560	Identifier	cnt		4941394	1					
ANR	4941561	AssignmentExpression	cnt = me -> max_count + ALLOC_CHUNK		4941394	2		=			
ANR	4941562	Identifier	cnt		4941394	0					
ANR	4941563	AdditiveExpression	me -> max_count + ALLOC_CHUNK		4941394	1		+			
ANR	4941564	PtrMemberAccess	me -> max_count		4941394	0					
ANR	4941565	Identifier	me		4941394	0					
ANR	4941566	Identifier	max_count		4941394	1					
ANR	4941567	Identifier	ALLOC_CHUNK		4941394	1					
ANR	4941568	IfStatement	"if ( ! ( nm = realloc ( me -> mp , sizeof ( * nm ) * cnt ) ) )"		4941394	2					
ANR	4941569	Condition	"! ( nm = realloc ( me -> mp , sizeof ( * nm ) * cnt ) )"	934:7:23383:23425	4941394	0	True				
ANR	4941570	UnaryOperationExpression	"! ( nm = realloc ( me -> mp , sizeof ( * nm ) * cnt ) )"		4941394	0					
ANR	4941571	UnaryOperator	!		4941394	0					
ANR	4941572	AssignmentExpression	"nm = realloc ( me -> mp , sizeof ( * nm ) * cnt )"		4941394	1		=			
ANR	4941573	Identifier	nm		4941394	0					
ANR	4941574	CallExpression	"realloc ( me -> mp , sizeof ( * nm ) * cnt )"		4941394	1					
ANR	4941575	Callee	realloc		4941394	0					
ANR	4941576	Identifier	realloc		4941394	0					
ANR	4941577	ArgumentList	me -> mp		4941394	1					
ANR	4941578	Argument	me -> mp		4941394	0					
ANR	4941579	PtrMemberAccess	me -> mp		4941394	0					
ANR	4941580	Identifier	me		4941394	0					
ANR	4941581	Identifier	mp		4941394	1					
ANR	4941582	Argument	sizeof ( * nm ) * cnt		4941394	1					
ANR	4941583	MultiplicativeExpression	sizeof ( * nm ) * cnt		4941394	0		*			
ANR	4941584	SizeofExpression	sizeof ( * nm )		4941394	0					
ANR	4941585	Sizeof	sizeof		4941394	0					
ANR	4941586	UnaryOperationExpression	* nm		4941394	1					
ANR	4941587	UnaryOperator	*		4941394	0					
ANR	4941588	Identifier	nm		4941394	1					
ANR	4941589	Identifier	cnt		4941394	1					
ANR	4941590	CompoundStatement		31:52:743:743	4941394	1					
ANR	4941591	ExpressionStatement	"file_oomem ( ms , sizeof ( * nm ) * cnt )"	935:4:23434:23468	4941394	0	True				
ANR	4941592	CallExpression	"file_oomem ( ms , sizeof ( * nm ) * cnt )"		4941394	0					
ANR	4941593	Callee	file_oomem		4941394	0					
ANR	4941594	Identifier	file_oomem		4941394	0					
ANR	4941595	ArgumentList	ms		4941394	1					
ANR	4941596	Argument	ms		4941394	0					
ANR	4941597	Identifier	ms		4941394	0					
ANR	4941598	Argument	sizeof ( * nm ) * cnt		4941394	1					
ANR	4941599	MultiplicativeExpression	sizeof ( * nm ) * cnt		4941394	0		*			
ANR	4941600	SizeofExpression	sizeof ( * nm )		4941394	0					
ANR	4941601	Sizeof	sizeof		4941394	0					
ANR	4941602	UnaryOperationExpression	* nm		4941394	1					
ANR	4941603	UnaryOperator	*		4941394	0					
ANR	4941604	Identifier	nm		4941394	1					
ANR	4941605	Identifier	cnt		4941394	1					
ANR	4941606	ReturnStatement	return - 1 ;	936:4:23474:23483	4941394	1	True				
ANR	4941607	UnaryOperationExpression	- 1		4941394	0					
ANR	4941608	UnaryOperator	-		4941394	0					
ANR	4941609	PrimaryExpression	1		4941394	1					
ANR	4941610	ExpressionStatement	me -> mp = nm	938:3:23493:23504	4941394	3	True				
ANR	4941611	AssignmentExpression	me -> mp = nm		4941394	0		=			
ANR	4941612	PtrMemberAccess	me -> mp		4941394	0					
ANR	4941613	Identifier	me		4941394	0					
ANR	4941614	Identifier	mp		4941394	1					
ANR	4941615	Identifier	nm		4941394	1					
ANR	4941616	ExpressionStatement	me -> max_count = cnt	939:3:23509:23528	4941394	4	True				
ANR	4941617	AssignmentExpression	me -> max_count = cnt		4941394	0		=			
ANR	4941618	PtrMemberAccess	me -> max_count		4941394	0					
ANR	4941619	Identifier	me		4941394	0					
ANR	4941620	Identifier	max_count		4941394	1					
ANR	4941621	Identifier	cnt		4941394	1					
ANR	4941622	ExpressionStatement	m = & me -> mp [ me -> cont_count ++ ]	941:2:23536:23565	4941394	3	True				
ANR	4941623	AssignmentExpression	m = & me -> mp [ me -> cont_count ++ ]		4941394	0		=			
ANR	4941624	Identifier	m		4941394	0					
ANR	4941625	UnaryOperationExpression	& me -> mp [ me -> cont_count ++ ]		4941394	1					
ANR	4941626	UnaryOperator	&		4941394	0					
ANR	4941627	ArrayIndexing	me -> mp [ me -> cont_count ++ ]		4941394	1					
ANR	4941628	PtrMemberAccess	me -> mp		4941394	0					
ANR	4941629	Identifier	me		4941394	0					
ANR	4941630	Identifier	mp		4941394	1					
ANR	4941631	PostIncDecOperationExpression	me -> cont_count ++		4941394	1					
ANR	4941632	PtrMemberAccess	me -> cont_count		4941394	0					
ANR	4941633	Identifier	me		4941394	0					
ANR	4941634	Identifier	cont_count		4941394	1					
ANR	4941635	IncDec	++		4941394	1					
ANR	4941636	ExpressionStatement	"( void ) memset ( m , 0 , sizeof ( * m ) )"	942:2:23569:23600	4941394	4	True				
ANR	4941637	CastExpression	"( void ) memset ( m , 0 , sizeof ( * m ) )"		4941394	0					
ANR	4941638	CastTarget	void		4941394	0					
ANR	4941639	CallExpression	"memset ( m , 0 , sizeof ( * m ) )"		4941394	1					
ANR	4941640	Callee	memset		4941394	0					
ANR	4941641	Identifier	memset		4941394	0					
ANR	4941642	ArgumentList	m		4941394	1					
ANR	4941643	Argument	m		4941394	0					
ANR	4941644	Identifier	m		4941394	0					
ANR	4941645	Argument	0		4941394	1					
ANR	4941646	PrimaryExpression	0		4941394	0					
ANR	4941647	Argument	sizeof ( * m )		4941394	2					
ANR	4941648	SizeofExpression	sizeof ( * m )		4941394	0					
ANR	4941649	Sizeof	sizeof		4941394	0					
ANR	4941650	UnaryOperationExpression	* m		4941394	1					
ANR	4941651	UnaryOperator	*		4941394	0					
ANR	4941652	Identifier	m		4941394	1					
ANR	4941653	ExpressionStatement	m -> cont_level = cont_level	943:2:23604:23630	4941394	5	True				
ANR	4941654	AssignmentExpression	m -> cont_level = cont_level		4941394	0		=			
ANR	4941655	PtrMemberAccess	m -> cont_level		4941394	0					
ANR	4941656	Identifier	m		4941394	0					
ANR	4941657	Identifier	cont_level		4941394	1					
ANR	4941658	Identifier	cont_level		4941394	1					
ANR	4941659	ElseStatement	else		4941394	0					
ANR	4941660	CompoundStatement		41:8:955:955	4941394	0					
ANR	4941661	IfStatement	if ( * nmentryp == maxmagic )		4941394	0					
ANR	4941662	Condition	* nmentryp == maxmagic	945:6:23648:23668	4941394	0	True				
ANR	4941663	EqualityExpression	* nmentryp == maxmagic		4941394	0		==			
ANR	4941664	UnaryOperationExpression	* nmentryp		4941394	0					
ANR	4941665	UnaryOperator	*		4941394	0					
ANR	4941666	Identifier	nmentryp		4941394	1					
ANR	4941667	Identifier	maxmagic		4941394	1					
ANR	4941668	CompoundStatement		43:3:991:1015	4941394	1					
ANR	4941669	IdentifierDeclStatement	struct r_magic_entry * mp ;	946:3:23676:23700	4941394	0	True				
ANR	4941670	IdentifierDecl	* mp		4941394	0					
ANR	4941671	IdentifierDeclType	struct r_magic_entry *		4941394	0					
ANR	4941672	Identifier	mp		4941394	1					
ANR	4941673	ExpressionStatement	maxmagic += ALLOC_INCR	948:3:23706:23728	4941394	1	True				
ANR	4941674	AssignmentExpression	maxmagic += ALLOC_INCR		4941394	0		+=			
ANR	4941675	Identifier	maxmagic		4941394	0					
ANR	4941676	Identifier	ALLOC_INCR		4941394	1					
ANR	4941677	IfStatement	"if ( ! ( mp = realloc ( * mentryp , sizeof ( * mp ) * maxmagic ) ) )"		4941394	2					
ANR	4941678	Condition	"! ( mp = realloc ( * mentryp , sizeof ( * mp ) * maxmagic ) )"	949:7:23737:23787	4941394	0	True				
ANR	4941679	UnaryOperationExpression	"! ( mp = realloc ( * mentryp , sizeof ( * mp ) * maxmagic ) )"		4941394	0					
ANR	4941680	UnaryOperator	!		4941394	0					
ANR	4941681	AssignmentExpression	"mp = realloc ( * mentryp , sizeof ( * mp ) * maxmagic )"		4941394	1		=			
ANR	4941682	Identifier	mp		4941394	0					
ANR	4941683	CallExpression	"realloc ( * mentryp , sizeof ( * mp ) * maxmagic )"		4941394	1					
ANR	4941684	Callee	realloc		4941394	0					
ANR	4941685	Identifier	realloc		4941394	0					
ANR	4941686	ArgumentList	* mentryp		4941394	1					
ANR	4941687	Argument	* mentryp		4941394	0					
ANR	4941688	UnaryOperationExpression	* mentryp		4941394	0					
ANR	4941689	UnaryOperator	*		4941394	0					
ANR	4941690	Identifier	mentryp		4941394	1					
ANR	4941691	Argument	sizeof ( * mp ) * maxmagic		4941394	1					
ANR	4941692	MultiplicativeExpression	sizeof ( * mp ) * maxmagic		4941394	0		*			
ANR	4941693	SizeofExpression	sizeof ( * mp )		4941394	0					
ANR	4941694	Sizeof	sizeof		4941394	0					
ANR	4941695	UnaryOperationExpression	* mp		4941394	1					
ANR	4941696	UnaryOperator	*		4941394	0					
ANR	4941697	Identifier	mp		4941394	1					
ANR	4941698	Identifier	maxmagic		4941394	1					
ANR	4941699	CompoundStatement		46:60:1105:1105	4941394	1					
ANR	4941700	ExpressionStatement	"file_oomem ( ms , sizeof ( * mp ) * maxmagic )"	950:4:23796:23836	4941394	0	True				
ANR	4941701	CallExpression	"file_oomem ( ms , sizeof ( * mp ) * maxmagic )"		4941394	0					
ANR	4941702	Callee	file_oomem		4941394	0					
ANR	4941703	Identifier	file_oomem		4941394	0					
ANR	4941704	ArgumentList	ms		4941394	1					
ANR	4941705	Argument	ms		4941394	0					
ANR	4941706	Identifier	ms		4941394	0					
ANR	4941707	Argument	sizeof ( * mp ) * maxmagic		4941394	1					
ANR	4941708	MultiplicativeExpression	sizeof ( * mp ) * maxmagic		4941394	0		*			
ANR	4941709	SizeofExpression	sizeof ( * mp )		4941394	0					
ANR	4941710	Sizeof	sizeof		4941394	0					
ANR	4941711	UnaryOperationExpression	* mp		4941394	1					
ANR	4941712	UnaryOperator	*		4941394	0					
ANR	4941713	Identifier	mp		4941394	1					
ANR	4941714	Identifier	maxmagic		4941394	1					
ANR	4941715	ReturnStatement	return - 1 ;	951:4:23842:23851	4941394	1	True				
ANR	4941716	UnaryOperationExpression	- 1		4941394	0					
ANR	4941717	UnaryOperator	-		4941394	0					
ANR	4941718	PrimaryExpression	1		4941394	1					
ANR	4941719	ExpressionStatement	"( void ) memset ( & mp [ * nmentryp ] , 0 , sizeof ( * mp ) * ALLOC_INCR )"	953:3:23861:23919	4941394	3	True				
ANR	4941720	CastExpression	"( void ) memset ( & mp [ * nmentryp ] , 0 , sizeof ( * mp ) * ALLOC_INCR )"		4941394	0					
ANR	4941721	CastTarget	void		4941394	0					
ANR	4941722	CallExpression	"memset ( & mp [ * nmentryp ] , 0 , sizeof ( * mp ) * ALLOC_INCR )"		4941394	1					
ANR	4941723	Callee	memset		4941394	0					
ANR	4941724	Identifier	memset		4941394	0					
ANR	4941725	ArgumentList	& mp [ * nmentryp ]		4941394	1					
ANR	4941726	Argument	& mp [ * nmentryp ]		4941394	0					
ANR	4941727	UnaryOperationExpression	& mp [ * nmentryp ]		4941394	0					
ANR	4941728	UnaryOperator	&		4941394	0					
ANR	4941729	ArrayIndexing	mp [ * nmentryp ]		4941394	1					
ANR	4941730	Identifier	mp		4941394	0					
ANR	4941731	UnaryOperationExpression	* nmentryp		4941394	1					
ANR	4941732	UnaryOperator	*		4941394	0					
ANR	4941733	Identifier	nmentryp		4941394	1					
ANR	4941734	Argument	0		4941394	1					
ANR	4941735	PrimaryExpression	0		4941394	0					
ANR	4941736	Argument	sizeof ( * mp ) * ALLOC_INCR		4941394	2					
ANR	4941737	MultiplicativeExpression	sizeof ( * mp ) * ALLOC_INCR		4941394	0		*			
ANR	4941738	SizeofExpression	sizeof ( * mp )		4941394	0					
ANR	4941739	Sizeof	sizeof		4941394	0					
ANR	4941740	UnaryOperationExpression	* mp		4941394	1					
ANR	4941741	UnaryOperator	*		4941394	0					
ANR	4941742	Identifier	mp		4941394	1					
ANR	4941743	Identifier	ALLOC_INCR		4941394	1					
ANR	4941744	ExpressionStatement	* mentryp = mp	954:3:23924:23937	4941394	4	True				
ANR	4941745	AssignmentExpression	* mentryp = mp		4941394	0		=			
ANR	4941746	UnaryOperationExpression	* mentryp		4941394	0					
ANR	4941747	UnaryOperator	*		4941394	0					
ANR	4941748	Identifier	mentryp		4941394	1					
ANR	4941749	Identifier	mp		4941394	1					
ANR	4941750	ExpressionStatement	me = & ( * mentryp ) [ * nmentryp ]	956:2:23945:23972	4941394	1	True				
ANR	4941751	AssignmentExpression	me = & ( * mentryp ) [ * nmentryp ]		4941394	0		=			
ANR	4941752	Identifier	me		4941394	0					
ANR	4941753	UnaryOperationExpression	& ( * mentryp ) [ * nmentryp ]		4941394	1					
ANR	4941754	UnaryOperator	&		4941394	0					
ANR	4941755	ArrayIndexing	( * mentryp ) [ * nmentryp ]		4941394	1					
ANR	4941756	UnaryOperationExpression	* mentryp		4941394	0					
ANR	4941757	UnaryOperator	*		4941394	0					
ANR	4941758	Identifier	mentryp		4941394	1					
ANR	4941759	UnaryOperationExpression	* nmentryp		4941394	1					
ANR	4941760	UnaryOperator	*		4941394	0					
ANR	4941761	Identifier	nmentryp		4941394	1					
ANR	4941762	IfStatement	if ( ! me -> mp )		4941394	2					
ANR	4941763	Condition	! me -> mp	957:6:23980:23986	4941394	0	True				
ANR	4941764	UnaryOperationExpression	! me -> mp		4941394	0					
ANR	4941765	UnaryOperator	!		4941394	0					
ANR	4941766	PtrMemberAccess	me -> mp		4941394	1					
ANR	4941767	Identifier	me		4941394	0					
ANR	4941768	Identifier	mp		4941394	1					
ANR	4941769	CompoundStatement		54:15:1304:1304	4941394	1					
ANR	4941770	IfStatement	if ( ! ( m = malloc ( sizeof ( * m ) * ALLOC_CHUNK ) ) )		4941394	0					
ANR	4941771	Condition	! ( m = malloc ( sizeof ( * m ) * ALLOC_CHUNK ) )	958:7:23998:24038	4941394	0	True				
ANR	4941772	UnaryOperationExpression	! ( m = malloc ( sizeof ( * m ) * ALLOC_CHUNK ) )		4941394	0					
ANR	4941773	UnaryOperator	!		4941394	0					
ANR	4941774	AssignmentExpression	m = malloc ( sizeof ( * m ) * ALLOC_CHUNK )		4941394	1		=			
ANR	4941775	Identifier	m		4941394	0					
ANR	4941776	CallExpression	malloc ( sizeof ( * m ) * ALLOC_CHUNK )		4941394	1					
ANR	4941777	Callee	malloc		4941394	0					
ANR	4941778	Identifier	malloc		4941394	0					
ANR	4941779	ArgumentList	sizeof ( * m ) * ALLOC_CHUNK		4941394	1					
ANR	4941780	Argument	sizeof ( * m ) * ALLOC_CHUNK		4941394	0					
ANR	4941781	MultiplicativeExpression	sizeof ( * m ) * ALLOC_CHUNK		4941394	0		*			
ANR	4941782	SizeofExpression	sizeof ( * m )		4941394	0					
ANR	4941783	Sizeof	sizeof		4941394	0					
ANR	4941784	UnaryOperationExpression	* m		4941394	1					
ANR	4941785	UnaryOperator	*		4941394	0					
ANR	4941786	Identifier	m		4941394	1					
ANR	4941787	Identifier	ALLOC_CHUNK		4941394	1					
ANR	4941788	CompoundStatement		55:50:1356:1356	4941394	1					
ANR	4941789	ExpressionStatement	"file_oomem ( ms , sizeof ( * m ) * ALLOC_CHUNK )"	959:4:24047:24089	4941394	0	True				
ANR	4941790	CallExpression	"file_oomem ( ms , sizeof ( * m ) * ALLOC_CHUNK )"		4941394	0					
ANR	4941791	Callee	file_oomem		4941394	0					
ANR	4941792	Identifier	file_oomem		4941394	0					
ANR	4941793	ArgumentList	ms		4941394	1					
ANR	4941794	Argument	ms		4941394	0					
ANR	4941795	Identifier	ms		4941394	0					
ANR	4941796	Argument	sizeof ( * m ) * ALLOC_CHUNK		4941394	1					
ANR	4941797	MultiplicativeExpression	sizeof ( * m ) * ALLOC_CHUNK		4941394	0		*			
ANR	4941798	SizeofExpression	sizeof ( * m )		4941394	0					
ANR	4941799	Sizeof	sizeof		4941394	0					
ANR	4941800	UnaryOperationExpression	* m		4941394	1					
ANR	4941801	UnaryOperator	*		4941394	0					
ANR	4941802	Identifier	m		4941394	1					
ANR	4941803	Identifier	ALLOC_CHUNK		4941394	1					
ANR	4941804	ReturnStatement	return - 1 ;	960:4:24095:24104	4941394	1	True				
ANR	4941805	UnaryOperationExpression	- 1		4941394	0					
ANR	4941806	UnaryOperator	-		4941394	0					
ANR	4941807	PrimaryExpression	1		4941394	1					
ANR	4941808	ExpressionStatement	me -> mp = m	962:3:24114:24124	4941394	1	True				
ANR	4941809	AssignmentExpression	me -> mp = m		4941394	0		=			
ANR	4941810	PtrMemberAccess	me -> mp		4941394	0					
ANR	4941811	Identifier	me		4941394	0					
ANR	4941812	Identifier	mp		4941394	1					
ANR	4941813	Identifier	m		4941394	1					
ANR	4941814	ExpressionStatement	me -> max_count = ALLOC_CHUNK	963:3:24129:24156	4941394	2	True				
ANR	4941815	AssignmentExpression	me -> max_count = ALLOC_CHUNK		4941394	0		=			
ANR	4941816	PtrMemberAccess	me -> max_count		4941394	0					
ANR	4941817	Identifier	me		4941394	0					
ANR	4941818	Identifier	max_count		4941394	1					
ANR	4941819	Identifier	ALLOC_CHUNK		4941394	1					
ANR	4941820	ElseStatement	else		4941394	0					
ANR	4941821	CompoundStatement		61:9:1482:1482	4941394	0					
ANR	4941822	ExpressionStatement	m = me -> mp	965:3:24172:24182	4941394	0	True				
ANR	4941823	AssignmentExpression	m = me -> mp		4941394	0		=			
ANR	4941824	Identifier	m		4941394	0					
ANR	4941825	PtrMemberAccess	me -> mp		4941394	1					
ANR	4941826	Identifier	me		4941394	0					
ANR	4941827	Identifier	mp		4941394	1					
ANR	4941828	ExpressionStatement	"( void ) memset ( m , 0 , sizeof ( * m ) )"	967:2:24190:24221	4941394	3	True				
ANR	4941829	CastExpression	"( void ) memset ( m , 0 , sizeof ( * m ) )"		4941394	0					
ANR	4941830	CastTarget	void		4941394	0					
ANR	4941831	CallExpression	"memset ( m , 0 , sizeof ( * m ) )"		4941394	1					
ANR	4941832	Callee	memset		4941394	0					
ANR	4941833	Identifier	memset		4941394	0					
ANR	4941834	ArgumentList	m		4941394	1					
ANR	4941835	Argument	m		4941394	0					
ANR	4941836	Identifier	m		4941394	0					
ANR	4941837	Argument	0		4941394	1					
ANR	4941838	PrimaryExpression	0		4941394	0					
ANR	4941839	Argument	sizeof ( * m )		4941394	2					
ANR	4941840	SizeofExpression	sizeof ( * m )		4941394	0					
ANR	4941841	Sizeof	sizeof		4941394	0					
ANR	4941842	UnaryOperationExpression	* m		4941394	1					
ANR	4941843	UnaryOperator	*		4941394	0					
ANR	4941844	Identifier	m		4941394	1					
ANR	4941845	ExpressionStatement	m -> cont_level = 0	968:2:24225:24242	4941394	4	True				
ANR	4941846	AssignmentExpression	m -> cont_level = 0		4941394	0		=			
ANR	4941847	PtrMemberAccess	m -> cont_level		4941394	0					
ANR	4941848	Identifier	m		4941394	0					
ANR	4941849	Identifier	cont_level		4941394	1					
ANR	4941850	PrimaryExpression	0		4941394	1					
ANR	4941851	ExpressionStatement	me -> cont_count = 1	969:2:24246:24264	4941394	5	True				
ANR	4941852	AssignmentExpression	me -> cont_count = 1		4941394	0		=			
ANR	4941853	PtrMemberAccess	me -> cont_count		4941394	0					
ANR	4941854	Identifier	me		4941394	0					
ANR	4941855	Identifier	cont_count		4941394	1					
ANR	4941856	PrimaryExpression	1		4941394	1					
ANR	4941857	ExpressionStatement	m -> lineno = lineno	971:1:24270:24288	4941394	25	True				
ANR	4941858	AssignmentExpression	m -> lineno = lineno		4941394	0		=			
ANR	4941859	PtrMemberAccess	m -> lineno		4941394	0					
ANR	4941860	Identifier	m		4941394	0					
ANR	4941861	Identifier	lineno		4941394	1					
ANR	4941862	Identifier	lineno		4941394	1					
ANR	4941863	IfStatement	if ( * l == '&' )		4941394	26					
ANR	4941864	Condition	* l == '&'	973:5:24296:24304	4941394	0	True				
ANR	4941865	EqualityExpression	* l == '&'		4941394	0		==			
ANR	4941866	UnaryOperationExpression	* l		4941394	0					
ANR	4941867	UnaryOperator	*		4941394	0					
ANR	4941868	Identifier	l		4941394	1					
ANR	4941869	PrimaryExpression	'&'		4941394	1					
ANR	4941870	CompoundStatement		70:16:1622:1622	4941394	1					
ANR	4941871	ExpressionStatement	++ l	974:16:24366:24369	4941394	0	True				
ANR	4941872	UnaryExpression	++ l		4941394	0					
ANR	4941873	IncDec	++		4941394	0					
ANR	4941874	Identifier	l		4941394	1					
ANR	4941875	ExpressionStatement	m -> flag |= OFFADD	975:16:24414:24431	4941394	1	True				
ANR	4941876	AssignmentExpression	m -> flag |= OFFADD		4941394	0		|=			
ANR	4941877	PtrMemberAccess	m -> flag		4941394	0					
ANR	4941878	Identifier	m		4941394	0					
ANR	4941879	Identifier	flag		4941394	1					
ANR	4941880	Identifier	OFFADD		4941394	1					
ANR	4941881	IfStatement	if ( * l == '(' )		4941394	27					
ANR	4941882	Condition	* l == '('	977:5:24448:24456	4941394	0	True				
ANR	4941883	EqualityExpression	* l == '('		4941394	0		==			
ANR	4941884	UnaryOperationExpression	* l		4941394	0					
ANR	4941885	UnaryOperator	*		4941394	0					
ANR	4941886	Identifier	l		4941394	1					
ANR	4941887	PrimaryExpression	'('		4941394	1					
ANR	4941888	CompoundStatement		74:16:1774:1774	4941394	1					
ANR	4941889	ExpressionStatement	++ l	978:2:24463:24466	4941394	0	True				
ANR	4941890	UnaryExpression	++ l		4941394	0					
ANR	4941891	IncDec	++		4941394	0					
ANR	4941892	Identifier	l		4941394	1					
ANR	4941893	ExpressionStatement	m -> flag |= INDIR	979:2:24487:24503	4941394	1	True				
ANR	4941894	AssignmentExpression	m -> flag |= INDIR		4941394	0		|=			
ANR	4941895	PtrMemberAccess	m -> flag		4941394	0					
ANR	4941896	Identifier	m		4941394	0					
ANR	4941897	Identifier	flag		4941394	1					
ANR	4941898	Identifier	INDIR		4941394	1					
ANR	4941899	IfStatement	if ( m -> flag & OFFADD )		4941394	2					
ANR	4941900	Condition	m -> flag & OFFADD	980:6:24511:24526	4941394	0	True				
ANR	4941901	BitAndExpression	m -> flag & OFFADD		4941394	0		&			
ANR	4941902	PtrMemberAccess	m -> flag		4941394	0					
ANR	4941903	Identifier	m		4941394	0					
ANR	4941904	Identifier	flag		4941394	1					
ANR	4941905	Identifier	OFFADD		4941394	1					
ANR	4941906	CompoundStatement		77:24:1844:1844	4941394	1					
ANR	4941907	ExpressionStatement	m -> flag = ( m -> flag & ~OFFADD ) | INDIROFFADD	981:3:24534:24577	4941394	0	True				
ANR	4941908	AssignmentExpression	m -> flag = ( m -> flag & ~OFFADD ) | INDIROFFADD		4941394	0		=			
ANR	4941909	PtrMemberAccess	m -> flag		4941394	0					
ANR	4941910	Identifier	m		4941394	0					
ANR	4941911	Identifier	flag		4941394	1					
ANR	4941912	InclusiveOrExpression	( m -> flag & ~OFFADD ) | INDIROFFADD		4941394	1		|			
ANR	4941913	BitAndExpression	m -> flag & ~OFFADD		4941394	0		&			
ANR	4941914	PtrMemberAccess	m -> flag		4941394	0					
ANR	4941915	Identifier	m		4941394	0					
ANR	4941916	Identifier	flag		4941394	1					
ANR	4941917	Identifier	~OFFADD		4941394	1					
ANR	4941918	Identifier	INDIROFFADD		4941394	1					
ANR	4941919	IfStatement	if ( * l == '&' )		4941394	3					
ANR	4941920	Condition	* l == '&'	984:6:24590:24598	4941394	0	True				
ANR	4941921	EqualityExpression	* l == '&'		4941394	0		==			
ANR	4941922	UnaryOperationExpression	* l		4941394	0					
ANR	4941923	UnaryOperator	*		4941394	0					
ANR	4941924	Identifier	l		4941394	1					
ANR	4941925	PrimaryExpression	'&'		4941394	1					
ANR	4941926	CompoundStatement		81:17:1916:1916	4941394	1					
ANR	4941927	ExpressionStatement	++ l	985:3:24646:24649	4941394	0	True				
ANR	4941928	UnaryExpression	++ l		4941394	0					
ANR	4941929	IncDec	++		4941394	0					
ANR	4941930	Identifier	l		4941394	1					
ANR	4941931	ExpressionStatement	m -> flag |= OFFADD	986:3:24681:24698	4941394	1	True				
ANR	4941932	AssignmentExpression	m -> flag |= OFFADD		4941394	0		|=			
ANR	4941933	PtrMemberAccess	m -> flag		4941394	0					
ANR	4941934	Identifier	m		4941394	0					
ANR	4941935	Identifier	flag		4941394	1					
ANR	4941936	Identifier	OFFADD		4941394	1					
ANR	4941937	IfStatement	if ( m -> cont_level == 0 && ( m -> flag & ( OFFADD | INDIROFFADD ) ) )		4941394	28					
ANR	4941938	Condition	m -> cont_level == 0 && ( m -> flag & ( OFFADD | INDIROFFADD ) )	990:5:24762:24817	4941394	0	True				
ANR	4941939	AndExpression	m -> cont_level == 0 && ( m -> flag & ( OFFADD | INDIROFFADD ) )		4941394	0		&&			
ANR	4941940	EqualityExpression	m -> cont_level == 0		4941394	0		==			
ANR	4941941	PtrMemberAccess	m -> cont_level		4941394	0					
ANR	4941942	Identifier	m		4941394	0					
ANR	4941943	Identifier	cont_level		4941394	1					
ANR	4941944	PrimaryExpression	0		4941394	1					
ANR	4941945	BitAndExpression	m -> flag & ( OFFADD | INDIROFFADD )		4941394	1		&			
ANR	4941946	PtrMemberAccess	m -> flag		4941394	0					
ANR	4941947	Identifier	m		4941394	0					
ANR	4941948	Identifier	flag		4941394	1					
ANR	4941949	InclusiveOrExpression	OFFADD | INDIROFFADD		4941394	1		|			
ANR	4941950	Identifier	OFFADD		4941394	0					
ANR	4941951	Identifier	INDIROFFADD		4941394	1					
ANR	4941952	CompoundStatement		87:63:2135:2135	4941394	1					
ANR	4941953	IfStatement	if ( ms -> flags & R_MAGIC_CHECK )		4941394	0					
ANR	4941954	Condition	ms -> flags & R_MAGIC_CHECK	991:6:24828:24852	4941394	0	True				
ANR	4941955	BitAndExpression	ms -> flags & R_MAGIC_CHECK		4941394	0		&			
ANR	4941956	PtrMemberAccess	ms -> flags		4941394	0					
ANR	4941957	Identifier	ms		4941394	0					
ANR	4941958	Identifier	flags		4941394	1					
ANR	4941959	Identifier	R_MAGIC_CHECK		4941394	1					
ANR	4941960	CompoundStatement		88:33:2170:2170	4941394	1					
ANR	4941961	ExpressionStatement	"file_magwarn ( ms , ""relative offset at level 0"" )"	992:3:24860:24907	4941394	0	True				
ANR	4941962	CallExpression	"file_magwarn ( ms , ""relative offset at level 0"" )"		4941394	0					
ANR	4941963	Callee	file_magwarn		4941394	0					
ANR	4941964	Identifier	file_magwarn		4941394	0					
ANR	4941965	ArgumentList	ms		4941394	1					
ANR	4941966	Argument	ms		4941394	0					
ANR	4941967	Identifier	ms		4941394	0					
ANR	4941968	Argument	"""relative offset at level 0"""		4941394	1					
ANR	4941969	PrimaryExpression	"""relative offset at level 0"""		4941394	0					
ANR	4941970	ExpressionStatement	"m -> offset = ( ut32 ) strtoul ( l , & t , 0 )"	997:1:24955:24990	4941394	29	True				
ANR	4941971	AssignmentExpression	"m -> offset = ( ut32 ) strtoul ( l , & t , 0 )"		4941394	0		=			
ANR	4941972	PtrMemberAccess	m -> offset		4941394	0					
ANR	4941973	Identifier	m		4941394	0					
ANR	4941974	Identifier	offset		4941394	1					
ANR	4941975	CastExpression	"( ut32 ) strtoul ( l , & t , 0 )"		4941394	1					
ANR	4941976	CastTarget	ut32		4941394	0					
ANR	4941977	CallExpression	"strtoul ( l , & t , 0 )"		4941394	1					
ANR	4941978	Callee	strtoul		4941394	0					
ANR	4941979	Identifier	strtoul		4941394	0					
ANR	4941980	ArgumentList	l		4941394	1					
ANR	4941981	Argument	l		4941394	0					
ANR	4941982	Identifier	l		4941394	0					
ANR	4941983	Argument	& t		4941394	1					
ANR	4941984	UnaryOperationExpression	& t		4941394	0					
ANR	4941985	UnaryOperator	&		4941394	0					
ANR	4941986	Identifier	t		4941394	1					
ANR	4941987	Argument	0		4941394	2					
ANR	4941988	PrimaryExpression	0		4941394	0					
ANR	4941989	IfStatement	if ( ( l == t ) && ( ms -> flags & R_MAGIC_CHECK ) )		4941394	30					
ANR	4941990	Condition	( l == t ) && ( ms -> flags & R_MAGIC_CHECK )	998:5:24997:25035	4941394	0	True				
ANR	4941991	AndExpression	( l == t ) && ( ms -> flags & R_MAGIC_CHECK )		4941394	0		&&			
ANR	4941992	EqualityExpression	l == t		4941394	0		==			
ANR	4941993	Identifier	l		4941394	0					
ANR	4941994	Identifier	t		4941394	1					
ANR	4941995	BitAndExpression	ms -> flags & R_MAGIC_CHECK		4941394	1		&			
ANR	4941996	PtrMemberAccess	ms -> flags		4941394	0					
ANR	4941997	Identifier	ms		4941394	0					
ANR	4941998	Identifier	flags		4941394	1					
ANR	4941999	Identifier	R_MAGIC_CHECK		4941394	1					
ANR	4942000	CompoundStatement		95:46:2353:2353	4941394	1					
ANR	4942001	ExpressionStatement	"file_magwarn ( ms , ""offset `%s' invalid"" , l )"	999:2:25042:25085	4941394	0	True				
ANR	4942002	CallExpression	"file_magwarn ( ms , ""offset `%s' invalid"" , l )"		4941394	0					
ANR	4942003	Callee	file_magwarn		4941394	0					
ANR	4942004	Identifier	file_magwarn		4941394	0					
ANR	4942005	ArgumentList	ms		4941394	1					
ANR	4942006	Argument	ms		4941394	0					
ANR	4942007	Identifier	ms		4941394	0					
ANR	4942008	Argument	"""offset `%s' invalid"""		4941394	1					
ANR	4942009	PrimaryExpression	"""offset `%s' invalid"""		4941394	0					
ANR	4942010	Argument	l		4941394	2					
ANR	4942011	Identifier	l		4941394	0					
ANR	4942012	ExpressionStatement	l = t	1001:1:25091:25096	4941394	31	True				
ANR	4942013	AssignmentExpression	l = t		4941394	0		=			
ANR	4942014	Identifier	l		4941394	0					
ANR	4942015	Identifier	t		4941394	1					
ANR	4942016	IfStatement	if ( m -> flag & INDIR )		4941394	32					
ANR	4942017	Condition	m -> flag & INDIR	1003:5:25104:25118	4941394	0	True				
ANR	4942018	BitAndExpression	m -> flag & INDIR		4941394	0		&			
ANR	4942019	PtrMemberAccess	m -> flag		4941394	0					
ANR	4942020	Identifier	m		4941394	0					
ANR	4942021	Identifier	flag		4941394	1					
ANR	4942022	Identifier	INDIR		4941394	1					
ANR	4942023	CompoundStatement		100:22:2436:2436	4941394	1					
ANR	4942024	ExpressionStatement	m -> in_type = FILE_LONG	1004:2:25125:25147	4941394	0	True				
ANR	4942025	AssignmentExpression	m -> in_type = FILE_LONG		4941394	0		=			
ANR	4942026	PtrMemberAccess	m -> in_type		4941394	0					
ANR	4942027	Identifier	m		4941394	0					
ANR	4942028	Identifier	in_type		4941394	1					
ANR	4942029	Identifier	FILE_LONG		4941394	1					
ANR	4942030	ExpressionStatement	m -> in_offset = 0	1005:2:25151:25167	4941394	1	True				
ANR	4942031	AssignmentExpression	m -> in_offset = 0		4941394	0		=			
ANR	4942032	PtrMemberAccess	m -> in_offset		4941394	0					
ANR	4942033	Identifier	m		4941394	0					
ANR	4942034	Identifier	in_offset		4941394	1					
ANR	4942035	PrimaryExpression	0		4941394	1					
ANR	4942036	IfStatement	if ( * l == '.' )		4941394	2					
ANR	4942037	Condition	* l == '.'	1009:6:25213:25221	4941394	0	True				
ANR	4942038	EqualityExpression	* l == '.'		4941394	0		==			
ANR	4942039	UnaryOperationExpression	* l		4941394	0					
ANR	4942040	UnaryOperator	*		4941394	0					
ANR	4942041	Identifier	l		4941394	1					
ANR	4942042	PrimaryExpression	'.'		4941394	1					
ANR	4942043	CompoundStatement		106:17:2539:2539	4941394	1					
ANR	4942044	ExpressionStatement	l ++	1010:3:25229:25232	4941394	0	True				
ANR	4942045	PostIncDecOperationExpression	l ++		4941394	0					
ANR	4942046	Identifier	l		4941394	0					
ANR	4942047	IncDec	++		4941394	1					
ANR	4942048	SwitchStatement	switch ( * l )		4941394	1					
ANR	4942049	Condition	* l	1011:11:25245:25246	4941394	0	True				
ANR	4942050	UnaryOperationExpression	* l		4941394	0					
ANR	4942051	UnaryOperator	*		4941394	0					
ANR	4942052	Identifier	l		4941394	1					
ANR	4942053	CompoundStatement		108:15:2564:2564	4941394	1					
ANR	4942054	Label	case 'l' :	1012:3:25254:25262	4941394	0	True				
ANR	4942055	ExpressionStatement	m -> in_type = FILE_LELONG	1013:4:25268:25292	4941394	1	True				
ANR	4942056	AssignmentExpression	m -> in_type = FILE_LELONG		4941394	0		=			
ANR	4942057	PtrMemberAccess	m -> in_type		4941394	0					
ANR	4942058	Identifier	m		4941394	0					
ANR	4942059	Identifier	in_type		4941394	1					
ANR	4942060	Identifier	FILE_LELONG		4941394	1					
ANR	4942061	BreakStatement	break ;	1014:4:25298:25303	4941394	2	True				
ANR	4942062	Label	case 'L' :	1015:3:25308:25316	4941394	3	True				
ANR	4942063	ExpressionStatement	m -> in_type = FILE_BELONG	1016:4:25322:25346	4941394	4	True				
ANR	4942064	AssignmentExpression	m -> in_type = FILE_BELONG		4941394	0		=			
ANR	4942065	PtrMemberAccess	m -> in_type		4941394	0					
ANR	4942066	Identifier	m		4941394	0					
ANR	4942067	Identifier	in_type		4941394	1					
ANR	4942068	Identifier	FILE_BELONG		4941394	1					
ANR	4942069	BreakStatement	break ;	1017:4:25352:25357	4941394	5	True				
ANR	4942070	Label	case 'm' :	1018:3:25362:25370	4941394	6	True				
ANR	4942071	ExpressionStatement	m -> in_type = FILE_MELONG	1019:4:25376:25400	4941394	7	True				
ANR	4942072	AssignmentExpression	m -> in_type = FILE_MELONG		4941394	0		=			
ANR	4942073	PtrMemberAccess	m -> in_type		4941394	0					
ANR	4942074	Identifier	m		4941394	0					
ANR	4942075	Identifier	in_type		4941394	1					
ANR	4942076	Identifier	FILE_MELONG		4941394	1					
ANR	4942077	BreakStatement	break ;	1020:4:25406:25411	4941394	8	True				
ANR	4942078	Label	case 'h' :	1021:3:25416:25424	4941394	9	True				
ANR	4942079	Label	case 's' :	1022:3:25429:25437	4941394	10	True				
ANR	4942080	ExpressionStatement	m -> in_type = FILE_LESHORT	1023:4:25443:25468	4941394	11	True				
ANR	4942081	AssignmentExpression	m -> in_type = FILE_LESHORT		4941394	0		=			
ANR	4942082	PtrMemberAccess	m -> in_type		4941394	0					
ANR	4942083	Identifier	m		4941394	0					
ANR	4942084	Identifier	in_type		4941394	1					
ANR	4942085	Identifier	FILE_LESHORT		4941394	1					
ANR	4942086	BreakStatement	break ;	1024:4:25474:25479	4941394	12	True				
ANR	4942087	Label	case 'H' :	1025:3:25484:25492	4941394	13	True				
ANR	4942088	Label	case 'S' :	1026:3:25497:25505	4941394	14	True				
ANR	4942089	ExpressionStatement	m -> in_type = FILE_BESHORT	1027:4:25511:25536	4941394	15	True				
ANR	4942090	AssignmentExpression	m -> in_type = FILE_BESHORT		4941394	0		=			
ANR	4942091	PtrMemberAccess	m -> in_type		4941394	0					
ANR	4942092	Identifier	m		4941394	0					
ANR	4942093	Identifier	in_type		4941394	1					
ANR	4942094	Identifier	FILE_BESHORT		4941394	1					
ANR	4942095	BreakStatement	break ;	1028:4:25542:25547	4941394	16	True				
ANR	4942096	Label	case 'c' :	1029:3:25552:25560	4941394	17	True				
ANR	4942097	Label	case 'b' :	1030:3:25565:25573	4941394	18	True				
ANR	4942098	Label	case 'C' :	1031:3:25578:25586	4941394	19	True				
ANR	4942099	Label	case 'B' :	1032:3:25591:25599	4941394	20	True				
ANR	4942100	ExpressionStatement	m -> in_type = FILE_BYTE	1033:4:25605:25627	4941394	21	True				
ANR	4942101	AssignmentExpression	m -> in_type = FILE_BYTE		4941394	0		=			
ANR	4942102	PtrMemberAccess	m -> in_type		4941394	0					
ANR	4942103	Identifier	m		4941394	0					
ANR	4942104	Identifier	in_type		4941394	1					
ANR	4942105	Identifier	FILE_BYTE		4941394	1					
ANR	4942106	BreakStatement	break ;	1034:4:25633:25638	4941394	22	True				
ANR	4942107	Label	case 'e' :	1035:3:25643:25651	4941394	23	True				
ANR	4942108	Label	case 'f' :	1036:3:25656:25664	4941394	24	True				
ANR	4942109	Label	case 'g' :	1037:3:25669:25677	4941394	25	True				
ANR	4942110	ExpressionStatement	m -> in_type = FILE_LEDOUBLE	1038:4:25683:25709	4941394	26	True				
ANR	4942111	AssignmentExpression	m -> in_type = FILE_LEDOUBLE		4941394	0		=			
ANR	4942112	PtrMemberAccess	m -> in_type		4941394	0					
ANR	4942113	Identifier	m		4941394	0					
ANR	4942114	Identifier	in_type		4941394	1					
ANR	4942115	Identifier	FILE_LEDOUBLE		4941394	1					
ANR	4942116	BreakStatement	break ;	1039:4:25715:25720	4941394	27	True				
ANR	4942117	Label	case 'E' :	1040:3:25725:25733	4941394	28	True				
ANR	4942118	Label	case 'F' :	1041:3:25738:25746	4941394	29	True				
ANR	4942119	Label	case 'G' :	1042:3:25751:25759	4941394	30	True				
ANR	4942120	ExpressionStatement	m -> in_type = FILE_BEDOUBLE	1043:4:25765:25791	4941394	31	True				
ANR	4942121	AssignmentExpression	m -> in_type = FILE_BEDOUBLE		4941394	0		=			
ANR	4942122	PtrMemberAccess	m -> in_type		4941394	0					
ANR	4942123	Identifier	m		4941394	0					
ANR	4942124	Identifier	in_type		4941394	1					
ANR	4942125	Identifier	FILE_BEDOUBLE		4941394	1					
ANR	4942126	BreakStatement	break ;	1044:4:25797:25802	4941394	32	True				
ANR	4942127	Label	default :	1045:3:25807:25814	4941394	33	True				
ANR	4942128	Identifier	default		4941394	0					
ANR	4942129	IfStatement	if ( ms -> flags & R_MAGIC_CHECK )		4941394	34					
ANR	4942130	Condition	ms -> flags & R_MAGIC_CHECK	1046:8:25824:25848	4941394	0	True				
ANR	4942131	BitAndExpression	ms -> flags & R_MAGIC_CHECK		4941394	0		&			
ANR	4942132	PtrMemberAccess	ms -> flags		4941394	0					
ANR	4942133	Identifier	ms		4941394	0					
ANR	4942134	Identifier	flags		4941394	1					
ANR	4942135	Identifier	R_MAGIC_CHECK		4941394	1					
ANR	4942136	CompoundStatement		143:35:3166:3166	4941394	1					
ANR	4942137	ExpressionStatement	"file_magwarn ( ms , ""indirect offset type `%c' invalid"" , * l )"	1047:5:25858:25928	4941394	0	True				
ANR	4942138	CallExpression	"file_magwarn ( ms , ""indirect offset type `%c' invalid"" , * l )"		4941394	0					
ANR	4942139	Callee	file_magwarn		4941394	0					
ANR	4942140	Identifier	file_magwarn		4941394	0					
ANR	4942141	ArgumentList	ms		4941394	1					
ANR	4942142	Argument	ms		4941394	0					
ANR	4942143	Identifier	ms		4941394	0					
ANR	4942144	Argument	"""indirect offset type `%c' invalid"""		4941394	1					
ANR	4942145	PrimaryExpression	"""indirect offset type `%c' invalid"""		4941394	0					
ANR	4942146	Argument	* l		4941394	2					
ANR	4942147	UnaryOperationExpression	* l		4941394	0					
ANR	4942148	UnaryOperator	*		4941394	0					
ANR	4942149	Identifier	l		4941394	1					
ANR	4942150	BreakStatement	break ;	1051:4:25940:25945	4941394	35	True				
ANR	4942151	ExpressionStatement	l ++	1053:3:25955:25958	4941394	2	True				
ANR	4942152	PostIncDecOperationExpression	l ++		4941394	0					
ANR	4942153	Identifier	l		4941394	0					
ANR	4942154	IncDec	++		4941394	1					
ANR	4942155	ExpressionStatement	m -> in_op = 0	1056:2:25967:25979	4941394	3	True				
ANR	4942156	AssignmentExpression	m -> in_op = 0		4941394	0		=			
ANR	4942157	PtrMemberAccess	m -> in_op		4941394	0					
ANR	4942158	Identifier	m		4941394	0					
ANR	4942159	Identifier	in_op		4941394	1					
ANR	4942160	PrimaryExpression	0		4941394	1					
ANR	4942161	IfStatement	if ( * l == '~' )		4941394	4					
ANR	4942162	Condition	* l == '~'	1057:6:25987:25995	4941394	0	True				
ANR	4942163	EqualityExpression	* l == '~'		4941394	0		==			
ANR	4942164	UnaryOperationExpression	* l		4941394	0					
ANR	4942165	UnaryOperator	*		4941394	0					
ANR	4942166	Identifier	l		4941394	1					
ANR	4942167	PrimaryExpression	'~'		4941394	1					
ANR	4942168	CompoundStatement		154:17:3313:3313	4941394	1					
ANR	4942169	ExpressionStatement	m -> in_op |= FILE_OPINVERSE	1058:3:26003:26029	4941394	0	True				
ANR	4942170	AssignmentExpression	m -> in_op |= FILE_OPINVERSE		4941394	0		|=			
ANR	4942171	PtrMemberAccess	m -> in_op		4941394	0					
ANR	4942172	Identifier	m		4941394	0					
ANR	4942173	Identifier	in_op		4941394	1					
ANR	4942174	Identifier	FILE_OPINVERSE		4941394	1					
ANR	4942175	ExpressionStatement	l ++	1059:3:26034:26037	4941394	1	True				
ANR	4942176	PostIncDecOperationExpression	l ++		4941394	0					
ANR	4942177	Identifier	l		4941394	0					
ANR	4942178	IncDec	++		4941394	1					
ANR	4942179	IfStatement	if ( ( op = get_op ( * l ) ) != - 1 )		4941394	5					
ANR	4942180	Condition	( op = get_op ( * l ) ) != - 1	1061:6:26049:26071	4941394	0	True				
ANR	4942181	EqualityExpression	( op = get_op ( * l ) ) != - 1		4941394	0		!=			
ANR	4942182	AssignmentExpression	op = get_op ( * l )		4941394	0		=			
ANR	4942183	Identifier	op		4941394	0					
ANR	4942184	CallExpression	get_op ( * l )		4941394	1					
ANR	4942185	Callee	get_op		4941394	0					
ANR	4942186	Identifier	get_op		4941394	0					
ANR	4942187	ArgumentList	* l		4941394	1					
ANR	4942188	Argument	* l		4941394	0					
ANR	4942189	UnaryOperationExpression	* l		4941394	0					
ANR	4942190	UnaryOperator	*		4941394	0					
ANR	4942191	Identifier	l		4941394	1					
ANR	4942192	UnaryOperationExpression	- 1		4941394	1					
ANR	4942193	UnaryOperator	-		4941394	0					
ANR	4942194	PrimaryExpression	1		4941394	1					
ANR	4942195	CompoundStatement		158:31:3389:3389	4941394	1					
ANR	4942196	ExpressionStatement	m -> in_op |= op	1062:3:26079:26093	4941394	0	True				
ANR	4942197	AssignmentExpression	m -> in_op |= op		4941394	0		|=			
ANR	4942198	PtrMemberAccess	m -> in_op		4941394	0					
ANR	4942199	Identifier	m		4941394	0					
ANR	4942200	Identifier	in_op		4941394	1					
ANR	4942201	Identifier	op		4941394	1					
ANR	4942202	ExpressionStatement	l ++	1063:3:26098:26101	4941394	1	True				
ANR	4942203	PostIncDecOperationExpression	l ++		4941394	0					
ANR	4942204	Identifier	l		4941394	0					
ANR	4942205	IncDec	++		4941394	1					
ANR	4942206	IfStatement	if ( * l == '(' )		4941394	6					
ANR	4942207	Condition	* l == '('	1065:6:26113:26121	4941394	0	True				
ANR	4942208	EqualityExpression	* l == '('		4941394	0		==			
ANR	4942209	UnaryOperationExpression	* l		4941394	0					
ANR	4942210	UnaryOperator	*		4941394	0					
ANR	4942211	Identifier	l		4941394	1					
ANR	4942212	PrimaryExpression	'('		4941394	1					
ANR	4942213	CompoundStatement		162:17:3439:3439	4941394	1					
ANR	4942214	ExpressionStatement	m -> in_op |= FILE_OPINDIRECT	1066:3:26129:26156	4941394	0	True				
ANR	4942215	AssignmentExpression	m -> in_op |= FILE_OPINDIRECT		4941394	0		|=			
ANR	4942216	PtrMemberAccess	m -> in_op		4941394	0					
ANR	4942217	Identifier	m		4941394	0					
ANR	4942218	Identifier	in_op		4941394	1					
ANR	4942219	Identifier	FILE_OPINDIRECT		4941394	1					
ANR	4942220	ExpressionStatement	l ++	1067:3:26161:26164	4941394	1	True				
ANR	4942221	PostIncDecOperationExpression	l ++		4941394	0					
ANR	4942222	Identifier	l		4941394	0					
ANR	4942223	IncDec	++		4941394	1					
ANR	4942224	IfStatement	if ( isdigit ( ( ut8 ) * l ) || * l == '-' )		4941394	7					
ANR	4942225	Condition	isdigit ( ( ut8 ) * l ) || * l == '-'	1069:6:26176:26204	4941394	0	True				
ANR	4942226	OrExpression	isdigit ( ( ut8 ) * l ) || * l == '-'		4941394	0		||			
ANR	4942227	CallExpression	isdigit ( ( ut8 ) * l )		4941394	0					
ANR	4942228	Callee	isdigit		4941394	0					
ANR	4942229	Identifier	isdigit		4941394	0					
ANR	4942230	ArgumentList	( ut8 ) * l		4941394	1					
ANR	4942231	Argument	( ut8 ) * l		4941394	0					
ANR	4942232	CastExpression	( ut8 ) * l		4941394	0					
ANR	4942233	CastTarget	ut8		4941394	0					
ANR	4942234	UnaryOperationExpression	* l		4941394	1					
ANR	4942235	UnaryOperator	*		4941394	0					
ANR	4942236	Identifier	l		4941394	1					
ANR	4942237	EqualityExpression	* l == '-'		4941394	1		==			
ANR	4942238	UnaryOperationExpression	* l		4941394	0					
ANR	4942239	UnaryOperator	*		4941394	0					
ANR	4942240	Identifier	l		4941394	1					
ANR	4942241	PrimaryExpression	'-'		4941394	1					
ANR	4942242	CompoundStatement		166:37:3522:3522	4941394	1					
ANR	4942243	ExpressionStatement	"m -> in_offset = ( int32_t ) strtol ( l , & t , 0 )"	1070:3:26212:26252	4941394	0	True				
ANR	4942244	AssignmentExpression	"m -> in_offset = ( int32_t ) strtol ( l , & t , 0 )"		4941394	0		=			
ANR	4942245	PtrMemberAccess	m -> in_offset		4941394	0					
ANR	4942246	Identifier	m		4941394	0					
ANR	4942247	Identifier	in_offset		4941394	1					
ANR	4942248	CastExpression	"( int32_t ) strtol ( l , & t , 0 )"		4941394	1					
ANR	4942249	CastTarget	int32_t		4941394	0					
ANR	4942250	CallExpression	"strtol ( l , & t , 0 )"		4941394	1					
ANR	4942251	Callee	strtol		4941394	0					
ANR	4942252	Identifier	strtol		4941394	0					
ANR	4942253	ArgumentList	l		4941394	1					
ANR	4942254	Argument	l		4941394	0					
ANR	4942255	Identifier	l		4941394	0					
ANR	4942256	Argument	& t		4941394	1					
ANR	4942257	UnaryOperationExpression	& t		4941394	0					
ANR	4942258	UnaryOperator	&		4941394	0					
ANR	4942259	Identifier	t		4941394	1					
ANR	4942260	Argument	0		4941394	2					
ANR	4942261	PrimaryExpression	0		4941394	0					
ANR	4942262	IfStatement	if ( l == t )		4941394	1					
ANR	4942263	Condition	l == t	1071:7:26261:26266	4941394	0	True				
ANR	4942264	EqualityExpression	l == t		4941394	0		==			
ANR	4942265	Identifier	l		4941394	0					
ANR	4942266	Identifier	t		4941394	1					
ANR	4942267	CompoundStatement		168:15:3584:3584	4941394	1					
ANR	4942268	IfStatement	if ( ms -> flags & R_MAGIC_CHECK )		4941394	0					
ANR	4942269	Condition	ms -> flags & R_MAGIC_CHECK	1072:8:26279:26303	4941394	0	True				
ANR	4942270	BitAndExpression	ms -> flags & R_MAGIC_CHECK		4941394	0		&			
ANR	4942271	PtrMemberAccess	ms -> flags		4941394	0					
ANR	4942272	Identifier	ms		4941394	0					
ANR	4942273	Identifier	flags		4941394	1					
ANR	4942274	Identifier	R_MAGIC_CHECK		4941394	1					
ANR	4942275	CompoundStatement		169:35:3621:3621	4941394	1					
ANR	4942276	ExpressionStatement	"file_magwarn ( ms , ""in_offset `%s' invalid"" , l )"	1073:5:26313:26365	4941394	0	True				
ANR	4942277	CallExpression	"file_magwarn ( ms , ""in_offset `%s' invalid"" , l )"		4941394	0					
ANR	4942278	Callee	file_magwarn		4941394	0					
ANR	4942279	Identifier	file_magwarn		4941394	0					
ANR	4942280	ArgumentList	ms		4941394	1					
ANR	4942281	Argument	ms		4941394	0					
ANR	4942282	Identifier	ms		4941394	0					
ANR	4942283	Argument	"""in_offset `%s' invalid"""		4941394	1					
ANR	4942284	PrimaryExpression	"""in_offset `%s' invalid"""		4941394	0					
ANR	4942285	Argument	l		4941394	2					
ANR	4942286	Identifier	l		4941394	0					
ANR	4942287	ExpressionStatement	l = t	1077:3:26381:26386	4941394	2	True				
ANR	4942288	AssignmentExpression	l = t		4941394	0		=			
ANR	4942289	Identifier	l		4941394	0					
ANR	4942290	Identifier	t		4941394	1					
ANR	4942291	IfStatement	if ( * l ++ != ')' || ( ( m -> in_op & FILE_OPINDIRECT ) && * l ++ != ')' ) )		4941394	8					
ANR	4942292	Condition	* l ++ != ')' || ( ( m -> in_op & FILE_OPINDIRECT ) && * l ++ != ')' )	1079:6:26398:26460	4941394	0	True				
ANR	4942293	OrExpression	* l ++ != ')' || ( ( m -> in_op & FILE_OPINDIRECT ) && * l ++ != ')' )		4941394	0		||			
ANR	4942294	EqualityExpression	* l ++ != ')'		4941394	0		!=			
ANR	4942295	UnaryOperationExpression	* l ++		4941394	0					
ANR	4942296	UnaryOperator	*		4941394	0					
ANR	4942297	PostIncDecOperationExpression	l ++		4941394	1					
ANR	4942298	Identifier	l		4941394	0					
ANR	4942299	IncDec	++		4941394	1					
ANR	4942300	PrimaryExpression	')'		4941394	1					
ANR	4942301	AndExpression	( m -> in_op & FILE_OPINDIRECT ) && * l ++ != ')'		4941394	1		&&			
ANR	4942302	BitAndExpression	m -> in_op & FILE_OPINDIRECT		4941394	0		&			
ANR	4942303	PtrMemberAccess	m -> in_op		4941394	0					
ANR	4942304	Identifier	m		4941394	0					
ANR	4942305	Identifier	in_op		4941394	1					
ANR	4942306	Identifier	FILE_OPINDIRECT		4941394	1					
ANR	4942307	EqualityExpression	* l ++ != ')'		4941394	1		!=			
ANR	4942308	UnaryOperationExpression	* l ++		4941394	0					
ANR	4942309	UnaryOperator	*		4941394	0					
ANR	4942310	PostIncDecOperationExpression	l ++		4941394	1					
ANR	4942311	Identifier	l		4941394	0					
ANR	4942312	IncDec	++		4941394	1					
ANR	4942313	PrimaryExpression	')'		4941394	1					
ANR	4942314	CompoundStatement		177:50:3778:3778	4941394	1					
ANR	4942315	IfStatement	if ( ms -> flags & R_MAGIC_CHECK )		4941394	0					
ANR	4942316	Condition	ms -> flags & R_MAGIC_CHECK	1081:7:26472:26496	4941394	0	True				
ANR	4942317	BitAndExpression	ms -> flags & R_MAGIC_CHECK		4941394	0		&			
ANR	4942318	PtrMemberAccess	ms -> flags		4941394	0					
ANR	4942319	Identifier	ms		4941394	0					
ANR	4942320	Identifier	flags		4941394	1					
ANR	4942321	Identifier	R_MAGIC_CHECK		4941394	1					
ANR	4942322	CompoundStatement		178:34:3814:3814	4941394	1					
ANR	4942323	ExpressionStatement	"file_magwarn ( ms , ""missing ')' in indirect offset"" )"	1082:4:26505:26561	4941394	0	True				
ANR	4942324	CallExpression	"file_magwarn ( ms , ""missing ')' in indirect offset"" )"		4941394	0					
ANR	4942325	Callee	file_magwarn		4941394	0					
ANR	4942326	Identifier	file_magwarn		4941394	0					
ANR	4942327	ArgumentList	ms		4941394	1					
ANR	4942328	Argument	ms		4941394	0					
ANR	4942329	Identifier	ms		4941394	0					
ANR	4942330	Argument	"""missing ')' in indirect offset"""		4941394	1					
ANR	4942331	PrimaryExpression	"""missing ')' in indirect offset"""		4941394	0					
ANR	4942332	ExpressionStatement	EATAB	1087:1:26576:26581	4941394	33	True				
ANR	4942333	Identifier	EATAB		4941394	0					
ANR	4942334	ExpressionStatement	"m -> cond = get_cond ( l , & l )"	1089:1:26585:26610	4941394	34	True				
ANR	4942335	AssignmentExpression	"m -> cond = get_cond ( l , & l )"		4941394	0		=			
ANR	4942336	PtrMemberAccess	m -> cond		4941394	0					
ANR	4942337	Identifier	m		4941394	0					
ANR	4942338	Identifier	cond		4941394	1					
ANR	4942339	CallExpression	"get_cond ( l , & l )"		4941394	1					
ANR	4942340	Callee	get_cond		4941394	0					
ANR	4942341	Identifier	get_cond		4941394	0					
ANR	4942342	ArgumentList	l		4941394	1					
ANR	4942343	Argument	l		4941394	0					
ANR	4942344	Identifier	l		4941394	0					
ANR	4942345	Argument	& l		4941394	1					
ANR	4942346	UnaryOperationExpression	& l		4941394	0					
ANR	4942347	UnaryOperator	&		4941394	0					
ANR	4942348	Identifier	l		4941394	1					
ANR	4942349	IfStatement	"if ( check_cond ( ms , m -> cond , cont_level ) == - 1 )"		4941394	35					
ANR	4942350	Condition	"check_cond ( ms , m -> cond , cont_level ) == - 1"	1090:5:26617:26658	4941394	0	True				
ANR	4942351	EqualityExpression	"check_cond ( ms , m -> cond , cont_level ) == - 1"		4941394	0		==			
ANR	4942352	CallExpression	"check_cond ( ms , m -> cond , cont_level )"		4941394	0					
ANR	4942353	Callee	check_cond		4941394	0					
ANR	4942354	Identifier	check_cond		4941394	0					
ANR	4942355	ArgumentList	ms		4941394	1					
ANR	4942356	Argument	ms		4941394	0					
ANR	4942357	Identifier	ms		4941394	0					
ANR	4942358	Argument	m -> cond		4941394	1					
ANR	4942359	PtrMemberAccess	m -> cond		4941394	0					
ANR	4942360	Identifier	m		4941394	0					
ANR	4942361	Identifier	cond		4941394	1					
ANR	4942362	Argument	cont_level		4941394	2					
ANR	4942363	Identifier	cont_level		4941394	0					
ANR	4942364	UnaryOperationExpression	- 1		4941394	1					
ANR	4942365	UnaryOperator	-		4941394	0					
ANR	4942366	PrimaryExpression	1		4941394	1					
ANR	4942367	CompoundStatement		187:49:3976:3976	4941394	1					
ANR	4942368	ReturnStatement	return - 1 ;	1091:2:26665:26674	4941394	0	True				
ANR	4942369	UnaryOperationExpression	- 1		4941394	0					
ANR	4942370	UnaryOperator	-		4941394	0					
ANR	4942371	PrimaryExpression	1		4941394	1					
ANR	4942372	ExpressionStatement	EATAB	1093:1:26680:26685	4941394	36	True				
ANR	4942373	Identifier	EATAB		4941394	0					
ANR	4942374	IfStatement	if ( * l == 'u' )		4941394	37					
ANR	4942375	Condition	* l == 'u'	1095:5:26693:26701	4941394	0	True				
ANR	4942376	EqualityExpression	* l == 'u'		4941394	0		==			
ANR	4942377	UnaryOperationExpression	* l		4941394	0					
ANR	4942378	UnaryOperator	*		4941394	0					
ANR	4942379	Identifier	l		4941394	1					
ANR	4942380	PrimaryExpression	'u'		4941394	1					
ANR	4942381	CompoundStatement		192:16:4019:4019	4941394	1					
ANR	4942382	ExpressionStatement	++ l	1096:2:26708:26711	4941394	0	True				
ANR	4942383	UnaryExpression	++ l		4941394	0					
ANR	4942384	IncDec	++		4941394	0					
ANR	4942385	Identifier	l		4941394	1					
ANR	4942386	ExpressionStatement	m -> flag |= UNSIGNED	1097:2:26715:26734	4941394	1	True				
ANR	4942387	AssignmentExpression	m -> flag |= UNSIGNED		4941394	0		|=			
ANR	4942388	PtrMemberAccess	m -> flag		4941394	0					
ANR	4942389	Identifier	m		4941394	0					
ANR	4942390	Identifier	flag		4941394	1					
ANR	4942391	Identifier	UNSIGNED		4941394	1					
ANR	4942392	ExpressionStatement	"m -> type = get_type ( l , & l )"	1100:1:26741:26766	4941394	38	True				
ANR	4942393	AssignmentExpression	"m -> type = get_type ( l , & l )"		4941394	0		=			
ANR	4942394	PtrMemberAccess	m -> type		4941394	0					
ANR	4942395	Identifier	m		4941394	0					
ANR	4942396	Identifier	type		4941394	1					
ANR	4942397	CallExpression	"get_type ( l , & l )"		4941394	1					
ANR	4942398	Callee	get_type		4941394	0					
ANR	4942399	Identifier	get_type		4941394	0					
ANR	4942400	ArgumentList	l		4941394	1					
ANR	4942401	Argument	l		4941394	0					
ANR	4942402	Identifier	l		4941394	0					
ANR	4942403	Argument	& l		4941394	1					
ANR	4942404	UnaryOperationExpression	& l		4941394	0					
ANR	4942405	UnaryOperator	&		4941394	0					
ANR	4942406	Identifier	l		4941394	1					
ANR	4942407	IfStatement	if ( m -> type == FILE_INVALID )		4941394	39					
ANR	4942408	Condition	m -> type == FILE_INVALID	1101:5:26773:26795	4941394	0	True				
ANR	4942409	EqualityExpression	m -> type == FILE_INVALID		4941394	0		==			
ANR	4942410	PtrMemberAccess	m -> type		4941394	0					
ANR	4942411	Identifier	m		4941394	0					
ANR	4942412	Identifier	type		4941394	1					
ANR	4942413	Identifier	FILE_INVALID		4941394	1					
ANR	4942414	CompoundStatement		198:30:4113:4113	4941394	1					
ANR	4942415	IfStatement	if ( ms -> flags & R_MAGIC_CHECK )		4941394	0					
ANR	4942416	Condition	ms -> flags & R_MAGIC_CHECK	1102:6:26806:26830	4941394	0	True				
ANR	4942417	BitAndExpression	ms -> flags & R_MAGIC_CHECK		4941394	0		&			
ANR	4942418	PtrMemberAccess	ms -> flags		4941394	0					
ANR	4942419	Identifier	ms		4941394	0					
ANR	4942420	Identifier	flags		4941394	1					
ANR	4942421	Identifier	R_MAGIC_CHECK		4941394	1					
ANR	4942422	CompoundStatement		199:33:4148:4148	4941394	1					
ANR	4942423	ExpressionStatement	"file_magwarn ( ms , ""type `%s' invalid"" , l )"	1103:3:26838:26879	4941394	0	True				
ANR	4942424	CallExpression	"file_magwarn ( ms , ""type `%s' invalid"" , l )"		4941394	0					
ANR	4942425	Callee	file_magwarn		4941394	0					
ANR	4942426	Identifier	file_magwarn		4941394	0					
ANR	4942427	ArgumentList	ms		4941394	1					
ANR	4942428	Argument	ms		4941394	0					
ANR	4942429	Identifier	ms		4941394	0					
ANR	4942430	Argument	"""type `%s' invalid"""		4941394	1					
ANR	4942431	PrimaryExpression	"""type `%s' invalid"""		4941394	0					
ANR	4942432	Argument	l		4941394	2					
ANR	4942433	Identifier	l		4941394	0					
ANR	4942434	ReturnStatement	return - 1 ;	1105:2:26887:26896	4941394	1	True				
ANR	4942435	UnaryOperationExpression	- 1		4941394	0					
ANR	4942436	UnaryOperator	-		4941394	0					
ANR	4942437	PrimaryExpression	1		4941394	1					
ANR	4942438	ExpressionStatement	m -> mask_op = 0	1111:1:27034:27048	4941394	40	True				
ANR	4942439	AssignmentExpression	m -> mask_op = 0		4941394	0		=			
ANR	4942440	PtrMemberAccess	m -> mask_op		4941394	0					
ANR	4942441	Identifier	m		4941394	0					
ANR	4942442	Identifier	mask_op		4941394	1					
ANR	4942443	PrimaryExpression	0		4941394	1					
ANR	4942444	IfStatement	if ( * l == '~' )		4941394	41					
ANR	4942445	Condition	* l == '~'	1112:5:27055:27063	4941394	0	True				
ANR	4942446	EqualityExpression	* l == '~'		4941394	0		==			
ANR	4942447	UnaryOperationExpression	* l		4941394	0					
ANR	4942448	UnaryOperator	*		4941394	0					
ANR	4942449	Identifier	l		4941394	1					
ANR	4942450	PrimaryExpression	'~'		4941394	1					
ANR	4942451	CompoundStatement		209:16:4381:4381	4941394	1					
ANR	4942452	IfStatement	if ( ! MAGIC_IS_STRING ( m -> type ) )		4941394	0					
ANR	4942453	Condition	! MAGIC_IS_STRING ( m -> type )	1113:6:27074:27099	4941394	0	True				
ANR	4942454	UnaryOperationExpression	! MAGIC_IS_STRING ( m -> type )		4941394	0					
ANR	4942455	UnaryOperator	!		4941394	0					
ANR	4942456	CallExpression	MAGIC_IS_STRING ( m -> type )		4941394	1					
ANR	4942457	Callee	MAGIC_IS_STRING		4941394	0					
ANR	4942458	Identifier	MAGIC_IS_STRING		4941394	0					
ANR	4942459	ArgumentList	m -> type		4941394	1					
ANR	4942460	Argument	m -> type		4941394	0					
ANR	4942461	PtrMemberAccess	m -> type		4941394	0					
ANR	4942462	Identifier	m		4941394	0					
ANR	4942463	Identifier	type		4941394	1					
ANR	4942464	CompoundStatement		210:34:4417:4417	4941394	1					
ANR	4942465	ExpressionStatement	m -> mask_op |= FILE_OPINVERSE	1114:3:27107:27135	4941394	0	True				
ANR	4942466	AssignmentExpression	m -> mask_op |= FILE_OPINVERSE		4941394	0		|=			
ANR	4942467	PtrMemberAccess	m -> mask_op		4941394	0					
ANR	4942468	Identifier	m		4941394	0					
ANR	4942469	Identifier	mask_op		4941394	1					
ANR	4942470	Identifier	FILE_OPINVERSE		4941394	1					
ANR	4942471	ElseStatement	else		4941394	0					
ANR	4942472	IfStatement	if ( ms -> flags & R_MAGIC_CHECK )		4941394	0					
ANR	4942473	Condition	ms -> flags & R_MAGIC_CHECK	1115:13:27150:27174	4941394	0	True				
ANR	4942474	BitAndExpression	ms -> flags & R_MAGIC_CHECK		4941394	0		&			
ANR	4942475	PtrMemberAccess	ms -> flags		4941394	0					
ANR	4942476	Identifier	ms		4941394	0					
ANR	4942477	Identifier	flags		4941394	1					
ANR	4942478	Identifier	R_MAGIC_CHECK		4941394	1					
ANR	4942479	CompoundStatement		212:40:4492:4492	4941394	1					
ANR	4942480	ExpressionStatement	"file_magwarn ( ms , ""'~' invalid for string types"" )"	1116:3:27182:27231	4941394	0	True				
ANR	4942481	CallExpression	"file_magwarn ( ms , ""'~' invalid for string types"" )"		4941394	0					
ANR	4942482	Callee	file_magwarn		4941394	0					
ANR	4942483	Identifier	file_magwarn		4941394	0					
ANR	4942484	ArgumentList	ms		4941394	1					
ANR	4942485	Argument	ms		4941394	0					
ANR	4942486	Identifier	ms		4941394	0					
ANR	4942487	Argument	"""'~' invalid for string types"""		4941394	1					
ANR	4942488	PrimaryExpression	"""'~' invalid for string types"""		4941394	0					
ANR	4942489	ExpressionStatement	++ l	1118:2:27239:27242	4941394	1	True				
ANR	4942490	UnaryExpression	++ l		4941394	0					
ANR	4942491	IncDec	++		4941394	0					
ANR	4942492	Identifier	l		4941394	1					
ANR	4942493	ExpressionStatement	m -> str_range = 0	1120:1:27248:27264	4941394	42	True				
ANR	4942494	AssignmentExpression	m -> str_range = 0		4941394	0		=			
ANR	4942495	PtrMemberAccess	m -> str_range		4941394	0					
ANR	4942496	Identifier	m		4941394	0					
ANR	4942497	Identifier	str_range		4941394	1					
ANR	4942498	PrimaryExpression	0		4941394	1					
ANR	4942499	ExpressionStatement	m -> str_flags = 0	1121:1:27267:27283	4941394	43	True				
ANR	4942500	AssignmentExpression	m -> str_flags = 0		4941394	0		=			
ANR	4942501	PtrMemberAccess	m -> str_flags		4941394	0					
ANR	4942502	Identifier	m		4941394	0					
ANR	4942503	Identifier	str_flags		4941394	1					
ANR	4942504	PrimaryExpression	0		4941394	1					
ANR	4942505	ExpressionStatement	m -> num_mask = 0	1122:1:27286:27301	4941394	44	True				
ANR	4942506	AssignmentExpression	m -> num_mask = 0		4941394	0		=			
ANR	4942507	PtrMemberAccess	m -> num_mask		4941394	0					
ANR	4942508	Identifier	m		4941394	0					
ANR	4942509	Identifier	num_mask		4941394	1					
ANR	4942510	PrimaryExpression	0		4941394	1					
ANR	4942511	IfStatement	if ( ( op = get_op ( * l ) ) != - 1 )		4941394	45					
ANR	4942512	Condition	( op = get_op ( * l ) ) != - 1	1123:5:27308:27331	4941394	0	True				
ANR	4942513	EqualityExpression	( op = get_op ( * l ) ) != - 1		4941394	0		!=			
ANR	4942514	AssignmentExpression	op = get_op ( * l )		4941394	0		=			
ANR	4942515	Identifier	op		4941394	0					
ANR	4942516	CallExpression	get_op ( * l )		4941394	1					
ANR	4942517	Callee	get_op		4941394	0					
ANR	4942518	Identifier	get_op		4941394	0					
ANR	4942519	ArgumentList	* l		4941394	1					
ANR	4942520	Argument	* l		4941394	0					
ANR	4942521	UnaryOperationExpression	* l		4941394	0					
ANR	4942522	UnaryOperator	*		4941394	0					
ANR	4942523	Identifier	l		4941394	1					
ANR	4942524	UnaryOperationExpression	- 1		4941394	1					
ANR	4942525	UnaryOperator	-		4941394	0					
ANR	4942526	PrimaryExpression	1		4941394	1					
ANR	4942527	CompoundStatement		220:31:4649:4649	4941394	1					
ANR	4942528	IfStatement	if ( ! MAGIC_IS_STRING ( m -> type ) )		4941394	0					
ANR	4942529	Condition	! MAGIC_IS_STRING ( m -> type )	1124:6:27342:27367	4941394	0	True				
ANR	4942530	UnaryOperationExpression	! MAGIC_IS_STRING ( m -> type )		4941394	0					
ANR	4942531	UnaryOperator	!		4941394	0					
ANR	4942532	CallExpression	MAGIC_IS_STRING ( m -> type )		4941394	1					
ANR	4942533	Callee	MAGIC_IS_STRING		4941394	0					
ANR	4942534	Identifier	MAGIC_IS_STRING		4941394	0					
ANR	4942535	ArgumentList	m -> type		4941394	1					
ANR	4942536	Argument	m -> type		4941394	0					
ANR	4942537	PtrMemberAccess	m -> type		4941394	0					
ANR	4942538	Identifier	m		4941394	0					
ANR	4942539	Identifier	type		4941394	1					
ANR	4942540	CompoundStatement		222:3:4690:4698	4941394	1					
ANR	4942541	IdentifierDeclStatement	ut64 val ;	1125:3:27375:27383	4941394	0	True				
ANR	4942542	IdentifierDecl	val		4941394	0					
ANR	4942543	IdentifierDeclType	ut64		4941394	0					
ANR	4942544	Identifier	val		4941394	1					
ANR	4942545	ExpressionStatement	++ l	1126:3:27388:27391	4941394	1	True				
ANR	4942546	UnaryExpression	++ l		4941394	0					
ANR	4942547	IncDec	++		4941394	0					
ANR	4942548	Identifier	l		4941394	1					
ANR	4942549	ExpressionStatement	m -> mask_op |= op	1127:3:27396:27412	4941394	2	True				
ANR	4942550	AssignmentExpression	m -> mask_op |= op		4941394	0		|=			
ANR	4942551	PtrMemberAccess	m -> mask_op		4941394	0					
ANR	4942552	Identifier	m		4941394	0					
ANR	4942553	Identifier	mask_op		4941394	1					
ANR	4942554	Identifier	op		4941394	1					
ANR	4942555	ExpressionStatement	"val = ( ut64 ) strtoull ( l , & t , 0 )"	1128:3:27417:27448	4941394	3	True				
ANR	4942556	AssignmentExpression	"val = ( ut64 ) strtoull ( l , & t , 0 )"		4941394	0		=			
ANR	4942557	Identifier	val		4941394	0					
ANR	4942558	CastExpression	"( ut64 ) strtoull ( l , & t , 0 )"		4941394	1					
ANR	4942559	CastTarget	ut64		4941394	0					
ANR	4942560	CallExpression	"strtoull ( l , & t , 0 )"		4941394	1					
ANR	4942561	Callee	strtoull		4941394	0					
ANR	4942562	Identifier	strtoull		4941394	0					
ANR	4942563	ArgumentList	l		4941394	1					
ANR	4942564	Argument	l		4941394	0					
ANR	4942565	Identifier	l		4941394	0					
ANR	4942566	Argument	& t		4941394	1					
ANR	4942567	UnaryOperationExpression	& t		4941394	0					
ANR	4942568	UnaryOperator	&		4941394	0					
ANR	4942569	Identifier	t		4941394	1					
ANR	4942570	Argument	0		4941394	2					
ANR	4942571	PrimaryExpression	0		4941394	0					
ANR	4942572	ExpressionStatement	l = t	1129:3:27453:27458	4941394	4	True				
ANR	4942573	AssignmentExpression	l = t		4941394	0		=			
ANR	4942574	Identifier	l		4941394	0					
ANR	4942575	Identifier	t		4941394	1					
ANR	4942576	ExpressionStatement	"m -> num_mask = file_signextend ( ms , m , val )"	1130:3:27463:27505	4941394	5	True				
ANR	4942577	AssignmentExpression	"m -> num_mask = file_signextend ( ms , m , val )"		4941394	0		=			
ANR	4942578	PtrMemberAccess	m -> num_mask		4941394	0					
ANR	4942579	Identifier	m		4941394	0					
ANR	4942580	Identifier	num_mask		4941394	1					
ANR	4942581	CallExpression	"file_signextend ( ms , m , val )"		4941394	1					
ANR	4942582	Callee	file_signextend		4941394	0					
ANR	4942583	Identifier	file_signextend		4941394	0					
ANR	4942584	ArgumentList	ms		4941394	1					
ANR	4942585	Argument	ms		4941394	0					
ANR	4942586	Identifier	ms		4941394	0					
ANR	4942587	Argument	m		4941394	1					
ANR	4942588	Identifier	m		4941394	0					
ANR	4942589	Argument	val		4941394	2					
ANR	4942590	Identifier	val		4941394	0					
ANR	4942591	ExpressionStatement	eatsize ( & l )	1131:3:27510:27522	4941394	6	True				
ANR	4942592	CallExpression	eatsize ( & l )		4941394	0					
ANR	4942593	Callee	eatsize		4941394	0					
ANR	4942594	Identifier	eatsize		4941394	0					
ANR	4942595	ArgumentList	& l		4941394	1					
ANR	4942596	Argument	& l		4941394	0					
ANR	4942597	UnaryOperationExpression	& l		4941394	0					
ANR	4942598	UnaryOperator	&		4941394	0					
ANR	4942599	Identifier	l		4941394	1					
ANR	4942600	ElseStatement	else		4941394	0					
ANR	4942601	IfStatement	if ( op == FILE_OPDIVIDE )		4941394	0					
ANR	4942602	Condition	op == FILE_OPDIVIDE	1133:11:27539:27557	4941394	0	True				
ANR	4942603	EqualityExpression	op == FILE_OPDIVIDE		4941394	0		==			
ANR	4942604	Identifier	op		4941394	0					
ANR	4942605	Identifier	FILE_OPDIVIDE		4941394	1					
ANR	4942606	CompoundStatement		231:3:4880:4898	4941394	1					
ANR	4942607	IdentifierDeclStatement	int have_range = 0 ;	1134:3:27565:27583	4941394	0	True				
ANR	4942608	IdentifierDecl	have_range = 0		4941394	0					
ANR	4942609	IdentifierDeclType	int		4941394	0					
ANR	4942610	Identifier	have_range		4941394	1					
ANR	4942611	AssignmentExpression	have_range = 0		4941394	2		=			
ANR	4942612	Identifier	have_range		4941394	0					
ANR	4942613	PrimaryExpression	0		4941394	1					
ANR	4942614	WhileStatement	while ( ! isspace ( ( ut8 ) * ++ l ) )		4941394	1					
ANR	4942615	Condition	! isspace ( ( ut8 ) * ++ l )	1135:10:27595:27614	4941394	0	True				
ANR	4942616	UnaryOperationExpression	! isspace ( ( ut8 ) * ++ l )		4941394	0					
ANR	4942617	UnaryOperator	!		4941394	0					
ANR	4942618	CallExpression	isspace ( ( ut8 ) * ++ l )		4941394	1					
ANR	4942619	Callee	isspace		4941394	0					
ANR	4942620	Identifier	isspace		4941394	0					
ANR	4942621	ArgumentList	( ut8 ) * ++ l		4941394	1					
ANR	4942622	Argument	( ut8 ) * ++ l		4941394	0					
ANR	4942623	CastExpression	( ut8 ) * ++ l		4941394	0					
ANR	4942624	CastTarget	ut8		4941394	0					
ANR	4942625	UnaryOperationExpression	* ++ l		4941394	1					
ANR	4942626	UnaryOperator	*		4941394	0					
ANR	4942627	UnaryExpression	++ l		4941394	1					
ANR	4942628	IncDec	++		4941394	0					
ANR	4942629	Identifier	l		4941394	1					
ANR	4942630	CompoundStatement		232:32:4932:4932	4941394	1					
ANR	4942631	SwitchStatement	switch ( * l )		4941394	0					
ANR	4942632	Condition	* l	1136:12:27631:27632	4941394	0	True				
ANR	4942633	UnaryOperationExpression	* l		4941394	0					
ANR	4942634	UnaryOperator	*		4941394	0					
ANR	4942635	Identifier	l		4941394	1					
ANR	4942636	CompoundStatement		233:16:4950:4950	4941394	1					
ANR	4942637	Label	case '0' :	1137:4:27641:27649	4941394	0	True				
ANR	4942638	Label	case '1' :	1137:15:27652:27660	4941394	1	True				
ANR	4942639	Label	case '2' :	1137:26:27663:27671	4941394	2	True				
ANR	4942640	Label	case '3' :	1138:4:27677:27685	4941394	3	True				
ANR	4942641	Label	case '4' :	1138:15:27688:27696	4941394	4	True				
ANR	4942642	Label	case '5' :	1138:26:27699:27707	4941394	5	True				
ANR	4942643	Label	case '6' :	1139:4:27713:27721	4941394	6	True				
ANR	4942644	Label	case '7' :	1139:15:27724:27732	4941394	7	True				
ANR	4942645	Label	case '8' :	1139:26:27735:27743	4941394	8	True				
ANR	4942646	Label	case '9' :	1140:4:27749:27757	4941394	9	True				
ANR	4942647	IfStatement	if ( have_range && ( ms -> flags & R_MAGIC_CHECK ) )		4941394	10					
ANR	4942648	Condition	have_range && ( ms -> flags & R_MAGIC_CHECK )	1141:9:27768:27814	4941394	0	True				
ANR	4942649	AndExpression	have_range && ( ms -> flags & R_MAGIC_CHECK )		4941394	0		&&			
ANR	4942650	Identifier	have_range		4941394	0					
ANR	4942651	BitAndExpression	ms -> flags & R_MAGIC_CHECK		4941394	1		&			
ANR	4942652	PtrMemberAccess	ms -> flags		4941394	0					
ANR	4942653	Identifier	ms		4941394	0					
ANR	4942654	Identifier	flags		4941394	1					
ANR	4942655	Identifier	R_MAGIC_CHECK		4941394	1					
ANR	4942656	CompoundStatement		239:35:5132:5132	4941394	1					
ANR	4942657	ExpressionStatement	"file_magwarn ( ms , ""multiple ranges"" )"	1143:6:27825:27868	4941394	0	True				
ANR	4942658	CallExpression	"file_magwarn ( ms , ""multiple ranges"" )"		4941394	0					
ANR	4942659	Callee	file_magwarn		4941394	0					
ANR	4942660	Identifier	file_magwarn		4941394	0					
ANR	4942661	ArgumentList	ms		4941394	1					
ANR	4942662	Argument	ms		4941394	0					
ANR	4942663	Identifier	ms		4941394	0					
ANR	4942664	Argument	"""multiple ranges"""		4941394	1					
ANR	4942665	PrimaryExpression	"""multiple ranges"""		4941394	0					
ANR	4942666	ExpressionStatement	have_range = 1	1146:5:27882:27896	4941394	11	True				
ANR	4942667	AssignmentExpression	have_range = 1		4941394	0		=			
ANR	4942668	Identifier	have_range		4941394	0					
ANR	4942669	PrimaryExpression	1		4941394	1					
ANR	4942670	ExpressionStatement	"m -> str_range = strtoul ( l , & t , 0 )"	1147:5:27903:27935	4941394	12	True				
ANR	4942671	AssignmentExpression	"m -> str_range = strtoul ( l , & t , 0 )"		4941394	0		=			
ANR	4942672	PtrMemberAccess	m -> str_range		4941394	0					
ANR	4942673	Identifier	m		4941394	0					
ANR	4942674	Identifier	str_range		4941394	1					
ANR	4942675	CallExpression	"strtoul ( l , & t , 0 )"		4941394	1					
ANR	4942676	Callee	strtoul		4941394	0					
ANR	4942677	Identifier	strtoul		4941394	0					
ANR	4942678	ArgumentList	l		4941394	1					
ANR	4942679	Argument	l		4941394	0					
ANR	4942680	Identifier	l		4941394	0					
ANR	4942681	Argument	& t		4941394	1					
ANR	4942682	UnaryOperationExpression	& t		4941394	0					
ANR	4942683	UnaryOperator	&		4941394	0					
ANR	4942684	Identifier	t		4941394	1					
ANR	4942685	Argument	0		4941394	2					
ANR	4942686	PrimaryExpression	0		4941394	0					
ANR	4942687	IfStatement	if ( m -> str_range == 0 )		4941394	13					
ANR	4942688	Condition	m -> str_range == 0	1148:9:27946:27962	4941394	0	True				
ANR	4942689	EqualityExpression	m -> str_range == 0		4941394	0		==			
ANR	4942690	PtrMemberAccess	m -> str_range		4941394	0					
ANR	4942691	Identifier	m		4941394	0					
ANR	4942692	Identifier	str_range		4941394	1					
ANR	4942693	PrimaryExpression	0		4941394	1					
ANR	4942694	CompoundStatement		245:28:5280:5280	4941394	1					
ANR	4942695	ExpressionStatement	"file_magwarn ( ms , ""zero range"" )"	1149:6:27973:28011	4941394	0	True				
ANR	4942696	CallExpression	"file_magwarn ( ms , ""zero range"" )"		4941394	0					
ANR	4942697	Callee	file_magwarn		4941394	0					
ANR	4942698	Identifier	file_magwarn		4941394	0					
ANR	4942699	ArgumentList	ms		4941394	1					
ANR	4942700	Argument	ms		4941394	0					
ANR	4942701	Identifier	ms		4941394	0					
ANR	4942702	Argument	"""zero range"""		4941394	1					
ANR	4942703	PrimaryExpression	"""zero range"""		4941394	0					
ANR	4942704	ExpressionStatement	l = t - 1	1152:5:28025:28034	4941394	14	True				
ANR	4942705	AssignmentExpression	l = t - 1		4941394	0		=			
ANR	4942706	Identifier	l		4941394	0					
ANR	4942707	AdditiveExpression	t - 1		4941394	1		-			
ANR	4942708	Identifier	t		4941394	0					
ANR	4942709	PrimaryExpression	1		4941394	1					
ANR	4942710	BreakStatement	break ;	1153:5:28041:28046	4941394	15	True				
ANR	4942711	Label	case CHAR_COMPACT_BLANK :	1154:4:28052:28075	4941394	16	True				
ANR	4942712	Identifier	CHAR_COMPACT_BLANK		4941394	0					
ANR	4942713	ExpressionStatement	m -> str_flags |= STRING_COMPACT_BLANK	1155:5:28082:28118	4941394	17	True				
ANR	4942714	AssignmentExpression	m -> str_flags |= STRING_COMPACT_BLANK		4941394	0		|=			
ANR	4942715	PtrMemberAccess	m -> str_flags		4941394	0					
ANR	4942716	Identifier	m		4941394	0					
ANR	4942717	Identifier	str_flags		4941394	1					
ANR	4942718	Identifier	STRING_COMPACT_BLANK		4941394	1					
ANR	4942719	BreakStatement	break ;	1156:5:28125:28130	4941394	18	True				
ANR	4942720	Label	case CHAR_COMPACT_OPTIONAL_BLANK :	1157:4:28136:28168	4941394	19	True				
ANR	4942721	Identifier	CHAR_COMPACT_OPTIONAL_BLANK		4941394	0					
ANR	4942722	ExpressionStatement	m -> str_flags |= STRING_COMPACT_OPTIONAL_BLANK	1158:5:28175:28229	4941394	20	True				
ANR	4942723	AssignmentExpression	m -> str_flags |= STRING_COMPACT_OPTIONAL_BLANK		4941394	0		|=			
ANR	4942724	PtrMemberAccess	m -> str_flags		4941394	0					
ANR	4942725	Identifier	m		4941394	0					
ANR	4942726	Identifier	str_flags		4941394	1					
ANR	4942727	Identifier	STRING_COMPACT_OPTIONAL_BLANK		4941394	1					
ANR	4942728	BreakStatement	break ;	1160:5:28236:28241	4941394	21	True				
ANR	4942729	Label	case CHAR_IGNORE_LOWERCASE :	1161:4:28247:28273	4941394	22	True				
ANR	4942730	Identifier	CHAR_IGNORE_LOWERCASE		4941394	0					
ANR	4942731	ExpressionStatement	m -> str_flags |= STRING_IGNORE_LOWERCASE	1162:5:28280:28319	4941394	23	True				
ANR	4942732	AssignmentExpression	m -> str_flags |= STRING_IGNORE_LOWERCASE		4941394	0		|=			
ANR	4942733	PtrMemberAccess	m -> str_flags		4941394	0					
ANR	4942734	Identifier	m		4941394	0					
ANR	4942735	Identifier	str_flags		4941394	1					
ANR	4942736	Identifier	STRING_IGNORE_LOWERCASE		4941394	1					
ANR	4942737	BreakStatement	break ;	1163:5:28326:28331	4941394	24	True				
ANR	4942738	Label	case CHAR_IGNORE_UPPERCASE :	1164:4:28337:28363	4941394	25	True				
ANR	4942739	Identifier	CHAR_IGNORE_UPPERCASE		4941394	0					
ANR	4942740	ExpressionStatement	m -> str_flags |= STRING_IGNORE_UPPERCASE	1165:5:28370:28409	4941394	26	True				
ANR	4942741	AssignmentExpression	m -> str_flags |= STRING_IGNORE_UPPERCASE		4941394	0		|=			
ANR	4942742	PtrMemberAccess	m -> str_flags		4941394	0					
ANR	4942743	Identifier	m		4941394	0					
ANR	4942744	Identifier	str_flags		4941394	1					
ANR	4942745	Identifier	STRING_IGNORE_UPPERCASE		4941394	1					
ANR	4942746	BreakStatement	break ;	1166:5:28416:28421	4941394	27	True				
ANR	4942747	Label	case CHAR_REGEX_OFFSET_START :	1167:4:28427:28455	4941394	28	True				
ANR	4942748	Identifier	CHAR_REGEX_OFFSET_START		4941394	0					
ANR	4942749	ExpressionStatement	m -> str_flags |= REGEX_OFFSET_START	1168:5:28462:28496	4941394	29	True				
ANR	4942750	AssignmentExpression	m -> str_flags |= REGEX_OFFSET_START		4941394	0		|=			
ANR	4942751	PtrMemberAccess	m -> str_flags		4941394	0					
ANR	4942752	Identifier	m		4941394	0					
ANR	4942753	Identifier	str_flags		4941394	1					
ANR	4942754	Identifier	REGEX_OFFSET_START		4941394	1					
ANR	4942755	BreakStatement	break ;	1169:5:28503:28508	4941394	30	True				
ANR	4942756	Label	default :	1170:4:28514:28521	4941394	31	True				
ANR	4942757	Identifier	default		4941394	0					
ANR	4942758	IfStatement	if ( ms -> flags & R_MAGIC_CHECK )		4941394	32					
ANR	4942759	Condition	ms -> flags & R_MAGIC_CHECK	1171:9:28532:28556	4941394	0	True				
ANR	4942760	BitAndExpression	ms -> flags & R_MAGIC_CHECK		4941394	0		&			
ANR	4942761	PtrMemberAccess	ms -> flags		4941394	0					
ANR	4942762	Identifier	ms		4941394	0					
ANR	4942763	Identifier	flags		4941394	1					
ANR	4942764	Identifier	R_MAGIC_CHECK		4941394	1					
ANR	4942765	CompoundStatement		268:36:5874:5874	4941394	1					
ANR	4942766	ExpressionStatement	"file_magwarn ( ms , ""string extension `%c' invalid"" , * l )"	1172:6:28567:28635	4941394	0	True				
ANR	4942767	CallExpression	"file_magwarn ( ms , ""string extension `%c' invalid"" , * l )"		4941394	0					
ANR	4942768	Callee	file_magwarn		4941394	0					
ANR	4942769	Identifier	file_magwarn		4941394	0					
ANR	4942770	ArgumentList	ms		4941394	1					
ANR	4942771	Argument	ms		4941394	0					
ANR	4942772	Identifier	ms		4941394	0					
ANR	4942773	Argument	"""string extension `%c' invalid"""		4941394	1					
ANR	4942774	PrimaryExpression	"""string extension `%c' invalid"""		4941394	0					
ANR	4942775	Argument	* l		4941394	2					
ANR	4942776	UnaryOperationExpression	* l		4941394	0					
ANR	4942777	UnaryOperator	*		4941394	0					
ANR	4942778	Identifier	l		4941394	1					
ANR	4942779	ReturnStatement	return - 1 ;	1176:5:28649:28658	4941394	33	True				
ANR	4942780	UnaryOperationExpression	- 1		4941394	0					
ANR	4942781	UnaryOperator	-		4941394	0					
ANR	4942782	PrimaryExpression	1		4941394	1					
ANR	4942783	IfStatement	if ( l [ 1 ] == '/' && ! isspace ( ( ut8 ) l [ 2 ] ) )		4941394	1					
ANR	4942784	Condition	l [ 1 ] == '/' && ! isspace ( ( ut8 ) l [ 2 ] )	1179:8:28719:28753	4941394	0	True				
ANR	4942785	AndExpression	l [ 1 ] == '/' && ! isspace ( ( ut8 ) l [ 2 ] )		4941394	0		&&			
ANR	4942786	EqualityExpression	l [ 1 ] == '/'		4941394	0		==			
ANR	4942787	ArrayIndexing	l [ 1 ]		4941394	0					
ANR	4942788	Identifier	l		4941394	0					
ANR	4942789	PrimaryExpression	1		4941394	1					
ANR	4942790	PrimaryExpression	'/'		4941394	1					
ANR	4942791	UnaryOperationExpression	! isspace ( ( ut8 ) l [ 2 ] )		4941394	1					
ANR	4942792	UnaryOperator	!		4941394	0					
ANR	4942793	CallExpression	isspace ( ( ut8 ) l [ 2 ] )		4941394	1					
ANR	4942794	Callee	isspace		4941394	0					
ANR	4942795	Identifier	isspace		4941394	0					
ANR	4942796	ArgumentList	( ut8 ) l [ 2 ]		4941394	1					
ANR	4942797	Argument	( ut8 ) l [ 2 ]		4941394	0					
ANR	4942798	CastExpression	( ut8 ) l [ 2 ]		4941394	0					
ANR	4942799	CastTarget	ut8		4941394	0					
ANR	4942800	ArrayIndexing	l [ 2 ]		4941394	1					
ANR	4942801	Identifier	l		4941394	0					
ANR	4942802	PrimaryExpression	2		4941394	1					
ANR	4942803	CompoundStatement		276:45:6071:6071	4941394	1					
ANR	4942804	ExpressionStatement	l ++	1180:5:28763:28766	4941394	0	True				
ANR	4942805	PostIncDecOperationExpression	l ++		4941394	0					
ANR	4942806	Identifier	l		4941394	0					
ANR	4942807	IncDec	++		4941394	1					
ANR	4942808	IfStatement	"if ( string_modifier_check ( ms , m ) == - 1 )"		4941394	2					
ANR	4942809	Condition	"string_modifier_check ( ms , m ) == - 1"	1183:7:28786:28820	4941394	0	True				
ANR	4942810	EqualityExpression	"string_modifier_check ( ms , m ) == - 1"		4941394	0		==			
ANR	4942811	CallExpression	"string_modifier_check ( ms , m )"		4941394	0					
ANR	4942812	Callee	string_modifier_check		4941394	0					
ANR	4942813	Identifier	string_modifier_check		4941394	0					
ANR	4942814	ArgumentList	ms		4941394	1					
ANR	4942815	Argument	ms		4941394	0					
ANR	4942816	Identifier	ms		4941394	0					
ANR	4942817	Argument	m		4941394	1					
ANR	4942818	Identifier	m		4941394	0					
ANR	4942819	UnaryOperationExpression	- 1		4941394	1					
ANR	4942820	UnaryOperator	-		4941394	0					
ANR	4942821	PrimaryExpression	1		4941394	1					
ANR	4942822	CompoundStatement		280:44:6138:6138	4941394	1					
ANR	4942823	ReturnStatement	return - 1 ;	1184:4:28829:28838	4941394	0	True				
ANR	4942824	UnaryOperationExpression	- 1		4941394	0					
ANR	4942825	UnaryOperator	-		4941394	0					
ANR	4942826	PrimaryExpression	1		4941394	1					
ANR	4942827	ElseStatement	else		4941394	0					
ANR	4942828	CompoundStatement		283:9:6169:6169	4941394	0					
ANR	4942829	IfStatement	if ( ms -> flags & R_MAGIC_CHECK )		4941394	0					
ANR	4942830	Condition	ms -> flags & R_MAGIC_CHECK	1187:7:28863:28887	4941394	0	True				
ANR	4942831	BitAndExpression	ms -> flags & R_MAGIC_CHECK		4941394	0		&			
ANR	4942832	PtrMemberAccess	ms -> flags		4941394	0					
ANR	4942833	Identifier	ms		4941394	0					
ANR	4942834	Identifier	flags		4941394	1					
ANR	4942835	Identifier	R_MAGIC_CHECK		4941394	1					
ANR	4942836	CompoundStatement		284:34:6205:6205	4941394	1					
ANR	4942837	ExpressionStatement	"file_magwarn ( ms , ""invalid string op: %c"" , * t )"	1188:4:28896:28942	4941394	0	True				
ANR	4942838	CallExpression	"file_magwarn ( ms , ""invalid string op: %c"" , * t )"		4941394	0					
ANR	4942839	Callee	file_magwarn		4941394	0					
ANR	4942840	Identifier	file_magwarn		4941394	0					
ANR	4942841	ArgumentList	ms		4941394	1					
ANR	4942842	Argument	ms		4941394	0					
ANR	4942843	Identifier	ms		4941394	0					
ANR	4942844	Argument	"""invalid string op: %c"""		4941394	1					
ANR	4942845	PrimaryExpression	"""invalid string op: %c"""		4941394	0					
ANR	4942846	Argument	* t		4941394	2					
ANR	4942847	UnaryOperationExpression	* t		4941394	0					
ANR	4942848	UnaryOperator	*		4941394	0					
ANR	4942849	Identifier	t		4941394	1					
ANR	4942850	ReturnStatement	return - 1 ;	1190:3:28952:28961	4941394	1	True				
ANR	4942851	UnaryOperationExpression	- 1		4941394	0					
ANR	4942852	UnaryOperator	-		4941394	0					
ANR	4942853	PrimaryExpression	1		4941394	1					
ANR	4942854	ExpressionStatement	EATAB	1197:1:29104:29109	4941394	46	True				
ANR	4942855	Identifier	EATAB		4941394	0					
ANR	4942856	SwitchStatement	switch ( * l )		4941394	47					
ANR	4942857	Condition	* l	1199:9:29121:29122	4941394	0	True				
ANR	4942858	UnaryOperationExpression	* l		4941394	0					
ANR	4942859	UnaryOperator	*		4941394	0					
ANR	4942860	Identifier	l		4941394	1					
ANR	4942861	CompoundStatement		296:13:6440:6440	4941394	1					
ANR	4942862	Label	case '>' :	1200:1:29128:29136	4941394	0	True				
ANR	4942863	Label	case '<' :	1201:1:29139:29147	4941394	1	True				
ANR	4942864	Label	case '&' :	1203:1:29209:29217	4941394	2	True				
ANR	4942865	Label	case '^' :	1204:1:29220:29228	4941394	3	True				
ANR	4942866	Label	case '=' :	1205:1:29231:29239	4941394	4	True				
ANR	4942867	ExpressionStatement	m -> reln = * l	1206:4:29245:29257	4941394	5	True				
ANR	4942868	AssignmentExpression	m -> reln = * l		4941394	0		=			
ANR	4942869	PtrMemberAccess	m -> reln		4941394	0					
ANR	4942870	Identifier	m		4941394	0					
ANR	4942871	Identifier	reln		4941394	1					
ANR	4942872	UnaryOperationExpression	* l		4941394	1					
ANR	4942873	UnaryOperator	*		4941394	0					
ANR	4942874	Identifier	l		4941394	1					
ANR	4942875	ExpressionStatement	++ l	1207:4:29263:29266	4941394	6	True				
ANR	4942876	UnaryExpression	++ l		4941394	0					
ANR	4942877	IncDec	++		4941394	0					
ANR	4942878	Identifier	l		4941394	1					
ANR	4942879	IfStatement	if ( * l == '=' )		4941394	7					
ANR	4942880	Condition	* l == '='	1208:6:29274:29282	4941394	0	True				
ANR	4942881	EqualityExpression	* l == '='		4941394	0		==			
ANR	4942882	UnaryOperationExpression	* l		4941394	0					
ANR	4942883	UnaryOperator	*		4941394	0					
ANR	4942884	Identifier	l		4941394	1					
ANR	4942885	PrimaryExpression	'='		4941394	1					
ANR	4942886	CompoundStatement		305:17:6600:6600	4941394	1					
ANR	4942887	ExpressionStatement	++ l	1210:5:29329:29332	4941394	0	True				
ANR	4942888	UnaryExpression	++ l		4941394	0					
ANR	4942889	IncDec	++		4941394	0					
ANR	4942890	Identifier	l		4941394	1					
ANR	4942891	BreakStatement	break ;	1212:2:29340:29345	4941394	8	True				
ANR	4942892	Label	case '!' :	1213:1:29348:29356	4941394	9	True				
ANR	4942893	ExpressionStatement	m -> reln = * l	1214:2:29360:29372	4941394	10	True				
ANR	4942894	AssignmentExpression	m -> reln = * l		4941394	0		=			
ANR	4942895	PtrMemberAccess	m -> reln		4941394	0					
ANR	4942896	Identifier	m		4941394	0					
ANR	4942897	Identifier	reln		4941394	1					
ANR	4942898	UnaryOperationExpression	* l		4941394	1					
ANR	4942899	UnaryOperator	*		4941394	0					
ANR	4942900	Identifier	l		4941394	1					
ANR	4942901	ExpressionStatement	++ l	1215:2:29376:29379	4941394	11	True				
ANR	4942902	UnaryExpression	++ l		4941394	0					
ANR	4942903	IncDec	++		4941394	0					
ANR	4942904	Identifier	l		4941394	1					
ANR	4942905	BreakStatement	break ;	1216:2:29383:29388	4941394	12	True				
ANR	4942906	Label	default :	1217:1:29391:29398	4941394	13	True				
ANR	4942907	Identifier	default		4941394	0					
ANR	4942908	ExpressionStatement	m -> reln = '='	1218:4:29404:29417	4941394	14	True				
ANR	4942909	AssignmentExpression	m -> reln = '='		4941394	0		=			
ANR	4942910	PtrMemberAccess	m -> reln		4941394	0					
ANR	4942911	Identifier	m		4941394	0					
ANR	4942912	Identifier	reln		4941394	1					
ANR	4942913	PrimaryExpression	'='		4941394	1					
ANR	4942914	IfStatement	if ( * l == 'x' && ( ( isascii ( ( ut8 ) l [ 1 ] ) && isspace ( ( ut8 ) l [ 1 ] ) ) || ! l [ 1 ] ) )		4941394	15					
ANR	4942915	Condition	* l == 'x' && ( ( isascii ( ( ut8 ) l [ 1 ] ) && isspace ( ( ut8 ) l [ 1 ] ) ) || ! l [ 1 ] )	1219:6:29452:29522	4941394	0	True				
ANR	4942916	AndExpression	* l == 'x' && ( ( isascii ( ( ut8 ) l [ 1 ] ) && isspace ( ( ut8 ) l [ 1 ] ) ) || ! l [ 1 ] )		4941394	0		&&			
ANR	4942917	EqualityExpression	* l == 'x'		4941394	0		==			
ANR	4942918	UnaryOperationExpression	* l		4941394	0					
ANR	4942919	UnaryOperator	*		4941394	0					
ANR	4942920	Identifier	l		4941394	1					
ANR	4942921	PrimaryExpression	'x'		4941394	1					
ANR	4942922	OrExpression	( isascii ( ( ut8 ) l [ 1 ] ) && isspace ( ( ut8 ) l [ 1 ] ) ) || ! l [ 1 ]		4941394	1		||			
ANR	4942923	AndExpression	isascii ( ( ut8 ) l [ 1 ] ) && isspace ( ( ut8 ) l [ 1 ] )		4941394	0		&&			
ANR	4942924	CallExpression	isascii ( ( ut8 ) l [ 1 ] )		4941394	0					
ANR	4942925	Callee	isascii		4941394	0					
ANR	4942926	Identifier	isascii		4941394	0					
ANR	4942927	ArgumentList	( ut8 ) l [ 1 ]		4941394	1					
ANR	4942928	Argument	( ut8 ) l [ 1 ]		4941394	0					
ANR	4942929	CastExpression	( ut8 ) l [ 1 ]		4941394	0					
ANR	4942930	CastTarget	ut8		4941394	0					
ANR	4942931	ArrayIndexing	l [ 1 ]		4941394	1					
ANR	4942932	Identifier	l		4941394	0					
ANR	4942933	PrimaryExpression	1		4941394	1					
ANR	4942934	CallExpression	isspace ( ( ut8 ) l [ 1 ] )		4941394	1					
ANR	4942935	Callee	isspace		4941394	0					
ANR	4942936	Identifier	isspace		4941394	0					
ANR	4942937	ArgumentList	( ut8 ) l [ 1 ]		4941394	1					
ANR	4942938	Argument	( ut8 ) l [ 1 ]		4941394	0					
ANR	4942939	CastExpression	( ut8 ) l [ 1 ]		4941394	0					
ANR	4942940	CastTarget	ut8		4941394	0					
ANR	4942941	ArrayIndexing	l [ 1 ]		4941394	1					
ANR	4942942	Identifier	l		4941394	0					
ANR	4942943	PrimaryExpression	1		4941394	1					
ANR	4942944	UnaryOperationExpression	! l [ 1 ]		4941394	1					
ANR	4942945	UnaryOperator	!		4941394	0					
ANR	4942946	ArrayIndexing	l [ 1 ]		4941394	1					
ANR	4942947	Identifier	l		4941394	0					
ANR	4942948	PrimaryExpression	1		4941394	1					
ANR	4942949	CompoundStatement		317:36:6840:6840	4941394	1					
ANR	4942950	ExpressionStatement	m -> reln = * l	1221:3:29530:29542	4941394	0	True				
ANR	4942951	AssignmentExpression	m -> reln = * l		4941394	0		=			
ANR	4942952	PtrMemberAccess	m -> reln		4941394	0					
ANR	4942953	Identifier	m		4941394	0					
ANR	4942954	Identifier	reln		4941394	1					
ANR	4942955	UnaryOperationExpression	* l		4941394	1					
ANR	4942956	UnaryOperator	*		4941394	0					
ANR	4942957	Identifier	l		4941394	1					
ANR	4942958	ExpressionStatement	++ l	1222:3:29547:29550	4941394	1	True				
ANR	4942959	UnaryExpression	++ l		4941394	0					
ANR	4942960	IncDec	++		4941394	0					
ANR	4942961	Identifier	l		4941394	1					
ANR	4942962	BreakStatement	break ;	1224:2:29558:29563	4941394	16	True				
ANR	4942963	IfStatement	"if ( m -> reln != 'x' && getvalue ( ms , m , & l , action ) )"		4941394	48					
ANR	4942964	Condition	"m -> reln != 'x' && getvalue ( ms , m , & l , action )"	1229:5:29631:29676	4941394	0	True				
ANR	4942965	AndExpression	"m -> reln != 'x' && getvalue ( ms , m , & l , action )"		4941394	0		&&			
ANR	4942966	EqualityExpression	m -> reln != 'x'		4941394	0		!=			
ANR	4942967	PtrMemberAccess	m -> reln		4941394	0					
ANR	4942968	Identifier	m		4941394	0					
ANR	4942969	Identifier	reln		4941394	1					
ANR	4942970	PrimaryExpression	'x'		4941394	1					
ANR	4942971	CallExpression	"getvalue ( ms , m , & l , action )"		4941394	1					
ANR	4942972	Callee	getvalue		4941394	0					
ANR	4942973	Identifier	getvalue		4941394	0					
ANR	4942974	ArgumentList	ms		4941394	1					
ANR	4942975	Argument	ms		4941394	0					
ANR	4942976	Identifier	ms		4941394	0					
ANR	4942977	Argument	m		4941394	1					
ANR	4942978	Identifier	m		4941394	0					
ANR	4942979	Argument	& l		4941394	2					
ANR	4942980	UnaryOperationExpression	& l		4941394	0					
ANR	4942981	UnaryOperator	&		4941394	0					
ANR	4942982	Identifier	l		4941394	1					
ANR	4942983	Argument	action		4941394	3					
ANR	4942984	Identifier	action		4941394	0					
ANR	4942985	CompoundStatement		326:53:6994:6994	4941394	1					
ANR	4942986	ReturnStatement	return - 1 ;	1230:2:29683:29692	4941394	0	True				
ANR	4942987	UnaryOperationExpression	- 1		4941394	0					
ANR	4942988	UnaryOperator	-		4941394	0					
ANR	4942989	PrimaryExpression	1		4941394	1					
ANR	4942990	ExpressionStatement	EATAB	1242:1:29887:29892	4941394	49	True				
ANR	4942991	Identifier	EATAB		4941394	0					
ANR	4942992	IfStatement	if ( l [ 0 ] == '\\b' )		4941394	50					
ANR	4942993	Condition	l [ 0 ] == '\\b'	1243:5:29899:29910	4941394	0	True				
ANR	4942994	EqualityExpression	l [ 0 ] == '\\b'		4941394	0		==			
ANR	4942995	ArrayIndexing	l [ 0 ]		4941394	0					
ANR	4942996	Identifier	l		4941394	0					
ANR	4942997	PrimaryExpression	0		4941394	1					
ANR	4942998	PrimaryExpression	'\\b'		4941394	1					
ANR	4942999	CompoundStatement		340:19:7228:7228	4941394	1					
ANR	4943000	ExpressionStatement	++ l	1244:2:29917:29920	4941394	0	True				
ANR	4943001	UnaryExpression	++ l		4941394	0					
ANR	4943002	IncDec	++		4941394	0					
ANR	4943003	Identifier	l		4941394	1					
ANR	4943004	ExpressionStatement	m -> flag |= NOSPACE	1245:2:29924:29942	4941394	1	True				
ANR	4943005	AssignmentExpression	m -> flag |= NOSPACE		4941394	0		|=			
ANR	4943006	PtrMemberAccess	m -> flag		4941394	0					
ANR	4943007	Identifier	m		4941394	0					
ANR	4943008	Identifier	flag		4941394	1					
ANR	4943009	Identifier	NOSPACE		4941394	1					
ANR	4943010	ElseStatement	else		4941394	0					
ANR	4943011	IfStatement	if ( ( l [ 0 ] == '\\\\' ) && ( l [ 1 ] == 'b' ) )		4941394	0					
ANR	4943012	Condition	( l [ 0 ] == '\\\\' ) && ( l [ 1 ] == 'b' )	1246:12:29956:29986	4941394	0	True				
ANR	4943013	AndExpression	( l [ 0 ] == '\\\\' ) && ( l [ 1 ] == 'b' )		4941394	0		&&			
ANR	4943014	EqualityExpression	l [ 0 ] == '\\\\'		4941394	0		==			
ANR	4943015	ArrayIndexing	l [ 0 ]		4941394	0					
ANR	4943016	Identifier	l		4941394	0					
ANR	4943017	PrimaryExpression	0		4941394	1					
ANR	4943018	PrimaryExpression	'\\\\'		4941394	1					
ANR	4943019	EqualityExpression	l [ 1 ] == 'b'		4941394	1		==			
ANR	4943020	ArrayIndexing	l [ 1 ]		4941394	0					
ANR	4943021	Identifier	l		4941394	0					
ANR	4943022	PrimaryExpression	1		4941394	1					
ANR	4943023	PrimaryExpression	'b'		4941394	1					
ANR	4943024	CompoundStatement		343:45:7304:7304	4941394	1					
ANR	4943025	ExpressionStatement	++ l	1247:2:29993:29996	4941394	0	True				
ANR	4943026	UnaryExpression	++ l		4941394	0					
ANR	4943027	IncDec	++		4941394	0					
ANR	4943028	Identifier	l		4941394	1					
ANR	4943029	ExpressionStatement	++ l	1248:2:30000:30003	4941394	1	True				
ANR	4943030	UnaryExpression	++ l		4941394	0					
ANR	4943031	IncDec	++		4941394	0					
ANR	4943032	Identifier	l		4941394	1					
ANR	4943033	ExpressionStatement	m -> flag |= NOSPACE	1249:2:30007:30025	4941394	2	True				
ANR	4943034	AssignmentExpression	m -> flag |= NOSPACE		4941394	0		|=			
ANR	4943035	PtrMemberAccess	m -> flag		4941394	0					
ANR	4943036	Identifier	m		4941394	0					
ANR	4943037	Identifier	flag		4941394	1					
ANR	4943038	Identifier	NOSPACE		4941394	1					
ANR	4943039	ForStatement	for ( i = 0 ; ( m -> desc [ i ++ ] = * l ++ ) != '\\0' && i < sizeof ( m -> desc ) ; )		4941394	51					
ANR	4943040	ForInit	i = 0 ;	1251:6:30036:30041	4941394	0	True				
ANR	4943041	AssignmentExpression	i = 0		4941394	0		=			
ANR	4943042	Identifier	i		4941394	0					
ANR	4943043	PrimaryExpression	0		4941394	1					
ANR	4943044	Condition	( m -> desc [ i ++ ] = * l ++ ) != '\\0' && i < sizeof ( m -> desc )	1251:13:30043:30095	4941394	1	True				
ANR	4943045	AndExpression	( m -> desc [ i ++ ] = * l ++ ) != '\\0' && i < sizeof ( m -> desc )		4941394	0		&&			
ANR	4943046	EqualityExpression	( m -> desc [ i ++ ] = * l ++ ) != '\\0'		4941394	0		!=			
ANR	4943047	AssignmentExpression	m -> desc [ i ++ ] = * l ++		4941394	0		=			
ANR	4943048	ArrayIndexing	m -> desc [ i ++ ]		4941394	0					
ANR	4943049	PtrMemberAccess	m -> desc		4941394	0					
ANR	4943050	Identifier	m		4941394	0					
ANR	4943051	Identifier	desc		4941394	1					
ANR	4943052	PostIncDecOperationExpression	i ++		4941394	1					
ANR	4943053	Identifier	i		4941394	0					
ANR	4943054	IncDec	++		4941394	1					
ANR	4943055	UnaryOperationExpression	* l ++		4941394	1					
ANR	4943056	UnaryOperator	*		4941394	0					
ANR	4943057	PostIncDecOperationExpression	l ++		4941394	1					
ANR	4943058	Identifier	l		4941394	0					
ANR	4943059	IncDec	++		4941394	1					
ANR	4943060	PrimaryExpression	'\\0'		4941394	1					
ANR	4943061	RelationalExpression	i < sizeof ( m -> desc )		4941394	1		<			
ANR	4943062	Identifier	i		4941394	0					
ANR	4943063	SizeofExpression	sizeof ( m -> desc )		4941394	1					
ANR	4943064	Sizeof	sizeof		4941394	0					
ANR	4943065	PtrMemberAccess	m -> desc		4941394	1					
ANR	4943066	Identifier	m		4941394	0					
ANR	4943067	Identifier	desc		4941394	1					
ANR	4943068	CompoundStatement		348:69:7414:7414	4941394	2					
ANR	4943069	IfStatement	if ( i == sizeof ( m -> desc ) )		4941394	52					
ANR	4943070	Condition	i == sizeof ( m -> desc )	1252:5:30107:30127	4941394	0	True				
ANR	4943071	EqualityExpression	i == sizeof ( m -> desc )		4941394	0		==			
ANR	4943072	Identifier	i		4941394	0					
ANR	4943073	SizeofExpression	sizeof ( m -> desc )		4941394	1					
ANR	4943074	Sizeof	sizeof		4941394	0					
ANR	4943075	PtrMemberAccess	m -> desc		4941394	1					
ANR	4943076	Identifier	m		4941394	0					
ANR	4943077	Identifier	desc		4941394	1					
ANR	4943078	CompoundStatement		349:28:7445:7445	4941394	1					
ANR	4943079	ExpressionStatement	m -> desc [ sizeof ( m -> desc ) - 1 ] = '\\0'	1253:2:30134:30170	4941394	0	True				
ANR	4943080	AssignmentExpression	m -> desc [ sizeof ( m -> desc ) - 1 ] = '\\0'		4941394	0		=			
ANR	4943081	ArrayIndexing	m -> desc [ sizeof ( m -> desc ) - 1 ]		4941394	0					
ANR	4943082	PtrMemberAccess	m -> desc		4941394	0					
ANR	4943083	Identifier	m		4941394	0					
ANR	4943084	Identifier	desc		4941394	1					
ANR	4943085	AdditiveExpression	sizeof ( m -> desc ) - 1		4941394	1		-			
ANR	4943086	SizeofExpression	sizeof ( m -> desc )		4941394	0					
ANR	4943087	Sizeof	sizeof		4941394	0					
ANR	4943088	PtrMemberAccess	m -> desc		4941394	1					
ANR	4943089	Identifier	m		4941394	0					
ANR	4943090	Identifier	desc		4941394	1					
ANR	4943091	PrimaryExpression	1		4941394	1					
ANR	4943092	PrimaryExpression	'\\0'		4941394	1					
ANR	4943093	IfStatement	if ( ms -> flags & R_MAGIC_CHECK )		4941394	1					
ANR	4943094	Condition	ms -> flags & R_MAGIC_CHECK	1254:6:30178:30202	4941394	0	True				
ANR	4943095	BitAndExpression	ms -> flags & R_MAGIC_CHECK		4941394	0		&			
ANR	4943096	PtrMemberAccess	ms -> flags		4941394	0					
ANR	4943097	Identifier	ms		4941394	0					
ANR	4943098	Identifier	flags		4941394	1					
ANR	4943099	Identifier	R_MAGIC_CHECK		4941394	1					
ANR	4943100	CompoundStatement		351:33:7520:7520	4941394	1					
ANR	4943101	ExpressionStatement	"file_magwarn ( ms , ""description `%s' truncated"" , m -> desc )"	1255:3:30210:30266	4941394	0	True				
ANR	4943102	CallExpression	"file_magwarn ( ms , ""description `%s' truncated"" , m -> desc )"		4941394	0					
ANR	4943103	Callee	file_magwarn		4941394	0					
ANR	4943104	Identifier	file_magwarn		4941394	0					
ANR	4943105	ArgumentList	ms		4941394	1					
ANR	4943106	Argument	ms		4941394	0					
ANR	4943107	Identifier	ms		4941394	0					
ANR	4943108	Argument	"""description `%s' truncated"""		4941394	1					
ANR	4943109	PrimaryExpression	"""description `%s' truncated"""		4941394	0					
ANR	4943110	Argument	m -> desc		4941394	2					
ANR	4943111	PtrMemberAccess	m -> desc		4941394	0					
ANR	4943112	Identifier	m		4941394	0					
ANR	4943113	Identifier	desc		4941394	1					
ANR	4943114	IfStatement	if ( ms -> flags & R_MAGIC_CHECK )		4941394	53					
ANR	4943115	Condition	ms -> flags & R_MAGIC_CHECK	1263:5:30399:30423	4941394	0	True				
ANR	4943116	BitAndExpression	ms -> flags & R_MAGIC_CHECK		4941394	0		&			
ANR	4943117	PtrMemberAccess	ms -> flags		4941394	0					
ANR	4943118	Identifier	ms		4941394	0					
ANR	4943119	Identifier	flags		4941394	1					
ANR	4943120	Identifier	R_MAGIC_CHECK		4941394	1					
ANR	4943121	CompoundStatement		360:32:7741:7741	4941394	1					
ANR	4943122	IfStatement	"if ( check_format ( ms , m ) == - 1 )"		4941394	0					
ANR	4943123	Condition	"check_format ( ms , m ) == - 1"	1264:6:30434:30459	4941394	0	True				
ANR	4943124	EqualityExpression	"check_format ( ms , m ) == - 1"		4941394	0		==			
ANR	4943125	CallExpression	"check_format ( ms , m )"		4941394	0					
ANR	4943126	Callee	check_format		4941394	0					
ANR	4943127	Identifier	check_format		4941394	0					
ANR	4943128	ArgumentList	ms		4941394	1					
ANR	4943129	Argument	ms		4941394	0					
ANR	4943130	Identifier	ms		4941394	0					
ANR	4943131	Argument	m		4941394	1					
ANR	4943132	Identifier	m		4941394	0					
ANR	4943133	UnaryOperationExpression	- 1		4941394	1					
ANR	4943134	UnaryOperator	-		4941394	0					
ANR	4943135	PrimaryExpression	1		4941394	1					
ANR	4943136	CompoundStatement		361:34:7777:7777	4941394	1					
ANR	4943137	ReturnStatement	return - 1 ;	1265:3:30467:30476	4941394	0	True				
ANR	4943138	UnaryOperationExpression	- 1		4941394	0					
ANR	4943139	UnaryOperator	-		4941394	0					
ANR	4943140	PrimaryExpression	1		4941394	1					
ANR	4943141	IfStatement	if ( action == FILE_CHECK )		4941394	54					
ANR	4943142	Condition	action == FILE_CHECK	1268:5:30490:30509	4941394	0	True				
ANR	4943143	EqualityExpression	action == FILE_CHECK		4941394	0		==			
ANR	4943144	Identifier	action		4941394	0					
ANR	4943145	Identifier	FILE_CHECK		4941394	1					
ANR	4943146	CompoundStatement		365:27:7827:7827	4941394	1					
ANR	4943147	ExpressionStatement	file_mdump ( m )	1269:2:30516:30530	4941394	0	True				
ANR	4943148	CallExpression	file_mdump ( m )		4941394	0					
ANR	4943149	Callee	file_mdump		4941394	0					
ANR	4943150	Identifier	file_mdump		4941394	0					
ANR	4943151	ArgumentList	m		4941394	1					
ANR	4943152	Argument	m		4941394	0					
ANR	4943153	Identifier	m		4941394	0					
ANR	4943154	ExpressionStatement	m -> mimetype [ 0 ] = '\\0'	1271:1:30536:30557	4941394	55	True				
ANR	4943155	AssignmentExpression	m -> mimetype [ 0 ] = '\\0'		4941394	0		=			
ANR	4943156	ArrayIndexing	m -> mimetype [ 0 ]		4941394	0					
ANR	4943157	PtrMemberAccess	m -> mimetype		4941394	0					
ANR	4943158	Identifier	m		4941394	0					
ANR	4943159	Identifier	mimetype		4941394	1					
ANR	4943160	PrimaryExpression	0		4941394	1					
ANR	4943161	PrimaryExpression	'\\0'		4941394	1					
ANR	4943162	IfStatement	if ( m -> cont_level == 0 )		4941394	56					
ANR	4943163	Condition	m -> cont_level == 0	1272:5:30600:30617	4941394	0	True				
ANR	4943164	EqualityExpression	m -> cont_level == 0		4941394	0		==			
ANR	4943165	PtrMemberAccess	m -> cont_level		4941394	0					
ANR	4943166	Identifier	m		4941394	0					
ANR	4943167	Identifier	cont_level		4941394	1					
ANR	4943168	PrimaryExpression	0		4941394	1					
ANR	4943169	CompoundStatement		369:25:7935:7935	4941394	1					
ANR	4943170	ExpressionStatement	++ ( * nmentryp )	1273:2:30624:30637	4941394	0	True				
ANR	4943171	UnaryExpression	++ ( * nmentryp )		4941394	0					
ANR	4943172	IncDec	++		4941394	0					
ANR	4943173	UnaryOperationExpression	* nmentryp		4941394	1					
ANR	4943174	UnaryOperator	*		4941394	0					
ANR	4943175	Identifier	nmentryp		4941394	1					
ANR	4943176	ReturnStatement	return 0 ;	1275:1:30668:30676	4941394	57	True				
ANR	4943177	PrimaryExpression	0		4941394	0					
ANR	4943178	ReturnType	static int		4941394	1					
ANR	4943179	Identifier	parse		4941394	2					
ANR	4943180	ParameterList	"RMagic * ms , struct r_magic_entry * * mentryp , ut32 * nmentryp , const char * line , size_t lineno , int action"		4941394	3					
ANR	4943181	Parameter	RMagic * ms	904:17:22579:22588	4941394	0	True				
ANR	4943182	ParameterType	RMagic *		4941394	0					
ANR	4943183	Identifier	ms		4941394	1					
ANR	4943184	Parameter	struct r_magic_entry * * mentryp	904:29:22591:22620	4941394	1	True				
ANR	4943185	ParameterType	struct r_magic_entry * *		4941394	0					
ANR	4943186	Identifier	mentryp		4941394	1					
ANR	4943187	Parameter	ut32 * nmentryp	904:61:22623:22636	4941394	2	True				
ANR	4943188	ParameterType	ut32 *		4941394	0					
ANR	4943189	Identifier	nmentryp		4941394	1					
ANR	4943190	Parameter	const char * line	904:77:22639:22654	4941394	3	True				
ANR	4943191	ParameterType	const char *		4941394	0					
ANR	4943192	Identifier	line		4941394	1					
ANR	4943193	Parameter	size_t lineno	904:95:22657:22669	4941394	4	True				
ANR	4943194	ParameterType	size_t		4941394	0					
ANR	4943195	Identifier	lineno		4941394	1					
ANR	4943196	Parameter	int action	904:110:22672:22681	4941394	5	True				
ANR	4943197	ParameterType	int		4941394	0					
ANR	4943198	Identifier	action		4941394	1					
ANR	4943199	CFGEntryNode	ENTRY		4941394		True				
ANR	4943200	CFGExitNode	EXIT		4941394		True				
ANR	4943201	Symbol	FILE_BEDOUBLE		4941394						
ANR	4943202	Symbol	INDIR		4941394						
ANR	4943203	Symbol	m -> cond		4941394						
ANR	4943204	Symbol	* m -> mimetype		4941394						
ANR	4943205	Symbol	m -> in_offset		4941394						
ANR	4943206	Symbol	REGEX_OFFSET_START		4941394						
ANR	4943207	Symbol	FILE_CHECK		4941394						
ANR	4943208	Symbol	me -> mp		4941394						
ANR	4943209	Symbol	m -> type		4941394						
ANR	4943210	Symbol	FILE_LELONG		4941394						
ANR	4943211	Symbol	OFFADD		4941394						
ANR	4943212	Symbol	action		4941394						
ANR	4943213	Symbol	isdigit		4941394						
ANR	4943214	Symbol	FILE_BELONG		4941394						
ANR	4943215	Symbol	FILE_INVALID		4941394						
ANR	4943216	Symbol	val		4941394						
ANR	4943217	Symbol	isspace		4941394						
ANR	4943218	Symbol	string_modifier_check		4941394						
ANR	4943219	Symbol	ms -> flags		4941394						
ANR	4943220	Symbol	m -> lineno		4941394						
ANR	4943221	Symbol	FILE_LONG		4941394						
ANR	4943222	Symbol	* m -> desc		4941394						
ANR	4943223	Symbol	UNSIGNED		4941394						
ANR	4943224	Symbol	m -> flag		4941394						
ANR	4943225	Symbol	* mp		4941394						
ANR	4943226	Symbol	file_check_mem		4941394						
ANR	4943227	Symbol	mentryp		4941394						
ANR	4943228	Symbol	* ms		4941394						
ANR	4943229	Symbol	FILE_BESHORT		4941394						
ANR	4943230	Symbol	strtoull		4941394						
ANR	4943231	Symbol	cont_level		4941394						
ANR	4943232	Symbol	FILE_OPINDIRECT		4941394						
ANR	4943233	Symbol	get_type		4941394						
ANR	4943234	Symbol	have_range		4941394						
ANR	4943235	Symbol	MAGIC_IS_STRING		4941394						
ANR	4943236	Symbol	strtol		4941394						
ANR	4943237	Symbol	m -> in_type		4941394						
ANR	4943238	Symbol	m -> mimetype		4941394						
ANR	4943239	Symbol	* me		4941394						
ANR	4943240	Symbol	* * m		4941394						
ANR	4943241	Symbol	isascii		4941394						
ANR	4943242	Symbol	* ++ l		4941394						
ANR	4943243	Symbol	malloc		4941394						
ANR	4943244	Symbol	* nm		4941394						
ANR	4943245	Symbol	cnt		4941394						
ANR	4943246	Symbol	i		4941394						
ANR	4943247	Symbol	* l ++		4941394						
ANR	4943248	Symbol	l		4941394						
ANR	4943249	Symbol	m		4941394						
ANR	4943250	Symbol	NOSPACE		4941394						
ANR	4943251	Symbol	me -> max_count		4941394						
ANR	4943252	Symbol	t		4941394						
ANR	4943253	Symbol	FILE_MELONG		4941394						
ANR	4943254	Symbol	INDIROFFADD		4941394						
ANR	4943255	Symbol	ALLOC_CHUNK		4941394						
ANR	4943256	Symbol	realloc		4941394						
ANR	4943257	Symbol	STRING_COMPACT_OPTIONAL_BLANK		4941394						
ANR	4943258	Symbol	m -> num_mask		4941394						
ANR	4943259	Symbol	m -> desc		4941394						
ANR	4943260	Symbol	me		4941394						
ANR	4943261	Symbol	m -> in_op		4941394						
ANR	4943262	Symbol	get_cond		4941394						
ANR	4943263	Symbol	mp		4941394						
ANR	4943264	Symbol	FILE_LESHORT		4941394						
ANR	4943265	Symbol	ms		4941394						
ANR	4943266	Symbol	m -> str_range		4941394						
ANR	4943267	Symbol	ALLOC_INCR		4941394						
ANR	4943268	Symbol	FILE_OPINVERSE		4941394						
ANR	4943269	Symbol	FILE_BYTE		4941394						
ANR	4943270	Symbol	last_cont_level		4941394						
ANR	4943271	Symbol	m -> cont_level		4941394						
ANR	4943272	Symbol	nm		4941394						
ANR	4943273	Symbol	line		4941394						
ANR	4943274	Symbol	maxmagic		4941394						
ANR	4943275	Symbol	m -> str_flags		4941394						
ANR	4943276	Symbol	FILE_OPDIVIDE		4941394						
ANR	4943277	Symbol	~OFFADD		4941394						
ANR	4943278	Symbol	getvalue		4941394						
ANR	4943279	Symbol	m -> mask_op		4941394						
ANR	4943280	Symbol	m -> reln		4941394						
ANR	4943281	Symbol	strtoul		4941394						
ANR	4943282	Symbol	nmentryp		4941394						
ANR	4943283	Symbol	STRING_IGNORE_UPPERCASE		4941394						
ANR	4943284	Symbol	STRING_IGNORE_LOWERCASE		4941394						
ANR	4943285	Symbol	op		4941394						
ANR	4943286	Symbol	get_op		4941394						
ANR	4943287	Symbol	file_signextend		4941394						
ANR	4943288	Symbol	check_cond		4941394						
ANR	4943289	Symbol	FILE_LEDOUBLE		4941394						
ANR	4943290	Symbol	* mentryp		4941394						
ANR	4943291	Symbol	STRING_COMPACT_BLANK		4941394						
ANR	4943292	Symbol	m -> offset		4941394						
ANR	4943293	Symbol	& l		4941394						
ANR	4943294	Symbol	lineno		4941394						
ANR	4943295	Symbol	* nmentryp		4941394						
ANR	4943296	Symbol	* l		4941394						
ANR	4943297	Symbol	* m		4941394						
ANR	4943298	Symbol	check_format		4941394						
ANR	4943299	Symbol	& t		4941394						
ANR	4943300	Symbol	me -> cont_count		4941394						
ANR	4943301	Symbol	R_MAGIC_CHECK		4941394						
ANR	4943302	Symbol	* t		4941394						
ANR	4943303	Function	parse_mime	1282:0:30775:31734							
ANR	4943304	FunctionDef	"parse_mime (RMagic * ms , struct r_magic_entry * * mentryp , ut32 * nmentryp , const char * line)"		4943303	0					
ANR	4943305	CompoundStatement		1282:100:30875:31734	4943303	0					
ANR	4943306	IdentifierDeclStatement	size_t i ;	1283:1:30878:30886	4943303	0	True				
ANR	4943307	IdentifierDecl	i		4943303	0					
ANR	4943308	IdentifierDeclType	size_t		4943303	0					
ANR	4943309	Identifier	i		4943303	1					
ANR	4943310	IdentifierDeclStatement	const char * l = line ;	1284:1:30889:30909	4943303	1	True				
ANR	4943311	IdentifierDecl	* l = line		4943303	0					
ANR	4943312	IdentifierDeclType	const char *		4943303	0					
ANR	4943313	Identifier	l		4943303	1					
ANR	4943314	AssignmentExpression	* l = line		4943303	2		=			
ANR	4943315	Identifier	line		4943303	0					
ANR	4943316	Identifier	line		4943303	1					
ANR	4943317	IdentifierDeclStatement	struct r_magic * m ;	1285:1:30912:30929	4943303	2	True				
ANR	4943318	IdentifierDecl	* m		4943303	0					
ANR	4943319	IdentifierDeclType	struct r_magic *		4943303	0					
ANR	4943320	Identifier	m		4943303	1					
ANR	4943321	IdentifierDeclStatement	struct r_magic_entry * me ;	1286:1:30932:30956	4943303	3	True				
ANR	4943322	IdentifierDecl	* me		4943303	0					
ANR	4943323	IdentifierDeclType	struct r_magic_entry *		4943303	0					
ANR	4943324	Identifier	me		4943303	1					
ANR	4943325	IfStatement	if ( * nmentryp == 0 )		4943303	4					
ANR	4943326	Condition	* nmentryp == 0	1288:5:30964:30977	4943303	0	True				
ANR	4943327	EqualityExpression	* nmentryp == 0		4943303	0		==			
ANR	4943328	UnaryOperationExpression	* nmentryp		4943303	0					
ANR	4943329	UnaryOperator	*		4943303	0					
ANR	4943330	Identifier	nmentryp		4943303	1					
ANR	4943331	PrimaryExpression	0		4943303	1					
ANR	4943332	CompoundStatement		7:21:104:104	4943303	1					
ANR	4943333	ExpressionStatement	"file_error ( ms , 0 , ""No current entry for MIME type"" )"	1289:2:30984:31035	4943303	0	True				
ANR	4943334	CallExpression	"file_error ( ms , 0 , ""No current entry for MIME type"" )"		4943303	0					
ANR	4943335	Callee	file_error		4943303	0					
ANR	4943336	Identifier	file_error		4943303	0					
ANR	4943337	ArgumentList	ms		4943303	1					
ANR	4943338	Argument	ms		4943303	0					
ANR	4943339	Identifier	ms		4943303	0					
ANR	4943340	Argument	0		4943303	1					
ANR	4943341	PrimaryExpression	0		4943303	0					
ANR	4943342	Argument	"""No current entry for MIME type"""		4943303	2					
ANR	4943343	PrimaryExpression	"""No current entry for MIME type"""		4943303	0					
ANR	4943344	ReturnStatement	return - 1 ;	1290:2:31039:31048	4943303	1	True				
ANR	4943345	UnaryOperationExpression	- 1		4943303	0					
ANR	4943346	UnaryOperator	-		4943303	0					
ANR	4943347	PrimaryExpression	1		4943303	1					
ANR	4943348	ExpressionStatement	me = & ( * mentryp ) [ * nmentryp - 1 ]	1293:1:31055:31086	4943303	5	True				
ANR	4943349	AssignmentExpression	me = & ( * mentryp ) [ * nmentryp - 1 ]		4943303	0		=			
ANR	4943350	Identifier	me		4943303	0					
ANR	4943351	UnaryOperationExpression	& ( * mentryp ) [ * nmentryp - 1 ]		4943303	1					
ANR	4943352	UnaryOperator	&		4943303	0					
ANR	4943353	ArrayIndexing	( * mentryp ) [ * nmentryp - 1 ]		4943303	1					
ANR	4943354	UnaryOperationExpression	* mentryp		4943303	0					
ANR	4943355	UnaryOperator	*		4943303	0					
ANR	4943356	Identifier	mentryp		4943303	1					
ANR	4943357	AdditiveExpression	* nmentryp - 1		4943303	1		-			
ANR	4943358	UnaryOperationExpression	* nmentryp		4943303	0					
ANR	4943359	UnaryOperator	*		4943303	0					
ANR	4943360	Identifier	nmentryp		4943303	1					
ANR	4943361	PrimaryExpression	1		4943303	1					
ANR	4943362	ExpressionStatement	m = & me -> mp [ me -> cont_count == 0 ? 0 : me -> cont_count - 1 ]	1294:1:31089:31146	4943303	6	True				
ANR	4943363	AssignmentExpression	m = & me -> mp [ me -> cont_count == 0 ? 0 : me -> cont_count - 1 ]		4943303	0		=			
ANR	4943364	Identifier	m		4943303	0					
ANR	4943365	UnaryOperationExpression	& me -> mp [ me -> cont_count == 0 ? 0 : me -> cont_count - 1 ]		4943303	1					
ANR	4943366	UnaryOperator	&		4943303	0					
ANR	4943367	ArrayIndexing	me -> mp [ me -> cont_count == 0 ? 0 : me -> cont_count - 1 ]		4943303	1					
ANR	4943368	PtrMemberAccess	me -> mp		4943303	0					
ANR	4943369	Identifier	me		4943303	0					
ANR	4943370	Identifier	mp		4943303	1					
ANR	4943371	ConditionalExpression	me -> cont_count == 0 ? 0 : me -> cont_count - 1		4943303	1					
ANR	4943372	Condition	me -> cont_count == 0		4943303	0					
ANR	4943373	EqualityExpression	me -> cont_count == 0		4943303	0		==			
ANR	4943374	PtrMemberAccess	me -> cont_count		4943303	0					
ANR	4943375	Identifier	me		4943303	0					
ANR	4943376	Identifier	cont_count		4943303	1					
ANR	4943377	PrimaryExpression	0		4943303	1					
ANR	4943378	PrimaryExpression	0		4943303	1					
ANR	4943379	AdditiveExpression	me -> cont_count - 1		4943303	2		-			
ANR	4943380	PtrMemberAccess	me -> cont_count		4943303	0					
ANR	4943381	Identifier	me		4943303	0					
ANR	4943382	Identifier	cont_count		4943303	1					
ANR	4943383	PrimaryExpression	1		4943303	1					
ANR	4943384	IfStatement	if ( m -> mimetype [ 0 ] != '\\0' )		4943303	7					
ANR	4943385	Condition	m -> mimetype [ 0 ] != '\\0'	1296:5:31154:31175	4943303	0	True				
ANR	4943386	EqualityExpression	m -> mimetype [ 0 ] != '\\0'		4943303	0		!=			
ANR	4943387	ArrayIndexing	m -> mimetype [ 0 ]		4943303	0					
ANR	4943388	PtrMemberAccess	m -> mimetype		4943303	0					
ANR	4943389	Identifier	m		4943303	0					
ANR	4943390	Identifier	mimetype		4943303	1					
ANR	4943391	PrimaryExpression	0		4943303	1					
ANR	4943392	PrimaryExpression	'\\0'		4943303	1					
ANR	4943393	CompoundStatement		15:29:302:302	4943303	1					
ANR	4943394	Statement	file_error	1297:2:31182:31191	4943303	0	True				
ANR	4943395	Statement	(	1297:12:31192:31192	4943303	1	True				
ANR	4943396	Statement	ms	1297:13:31193:31194	4943303	2	True				
ANR	4943397	Statement	","	1297:15:31195:31195	4943303	3	True				
ANR	4943398	Statement	0	1297:17:31197:31197	4943303	4	True				
ANR	4943399	Statement	","	1297:18:31198:31198	4943303	5	True				
ANR	4943400	Statement	"""Current entry already has a MIME type: %s\\n"""	1297:20:31200:31244	4943303	6	True				
ANR	4943401	Statement	"""Description: %s\\nNew type: %s"""	1298:6:31252:31282	4943303	7	True				
ANR	4943402	Statement	","	1298:37:31283:31283	4943303	8	True				
ANR	4943403	Statement	m	1298:39:31285:31285	4943303	9	True				
ANR	4943404	Statement	->	1298:40:31286:31287	4943303	10	True				
ANR	4943405	Statement	mimetype	1298:42:31288:31295	4943303	11	True				
ANR	4943406	Statement	","	1298:50:31296:31296	4943303	12	True				
ANR	4943407	Statement	m	1298:52:31298:31298	4943303	13	True				
ANR	4943408	Statement	->	1298:53:31299:31300	4943303	14	True				
ANR	4943409	Statement	desc	1298:55:31301:31304	4943303	15	True				
ANR	4943410	Statement	","	1298:59:31305:31305	4943303	16	True				
ANR	4943411	Statement	l	1298:61:31307:31307	4943303	17	True				
ANR	4943412	Statement	)	1298:62:31308:31308	4943303	18	True				
ANR	4943413	ExpressionStatement		1298:63:31309:31309	4943303	19	True				
ANR	4943414	ReturnStatement	return - 1 ;	1299:2:31313:31322	4943303	20	True				
ANR	4943415	UnaryOperationExpression	- 1		4943303	0					
ANR	4943416	UnaryOperator	-		4943303	0					
ANR	4943417	PrimaryExpression	1		4943303	1					
ANR	4943418	ExpressionStatement	EATAB	1302:1:31329:31334	4943303	8	True				
ANR	4943419	Identifier	EATAB		4943303	0					
ANR	4943420	ForStatement	"for ( i = 0 ; * l && ( ( isascii ( ( ut8 ) * l ) && isalnum ( ( ut8 ) * l ) ) || strchr ( ""-+/."" , * l ) ) && i < sizeof ( m -> mimetype ) ; m -> mimetype [ i ++ ] = * l ++ )"		4943303	9					
ANR	4943421	ForInit	i = 0 ;	1303:6:31342:31347	4943303	0	True				
ANR	4943422	AssignmentExpression	i = 0		4943303	0		=			
ANR	4943423	Identifier	i		4943303	0					
ANR	4943424	PrimaryExpression	0		4943303	1					
ANR	4943425	Condition	"* l && ( ( isascii ( ( ut8 ) * l ) && isalnum ( ( ut8 ) * l ) ) || strchr ( ""-+/."" , * l ) ) && i < sizeof ( m -> mimetype )"	1304:2:31351:31449	4943303	1	True				
ANR	4943426	AndExpression	"* l && ( ( isascii ( ( ut8 ) * l ) && isalnum ( ( ut8 ) * l ) ) || strchr ( ""-+/."" , * l ) ) && i < sizeof ( m -> mimetype )"		4943303	0		&&			
ANR	4943427	UnaryOperationExpression	* l		4943303	0					
ANR	4943428	UnaryOperator	*		4943303	0					
ANR	4943429	Identifier	l		4943303	1					
ANR	4943430	AndExpression	"( ( isascii ( ( ut8 ) * l ) && isalnum ( ( ut8 ) * l ) ) || strchr ( ""-+/."" , * l ) ) && i < sizeof ( m -> mimetype )"		4943303	1		&&			
ANR	4943431	OrExpression	"( isascii ( ( ut8 ) * l ) && isalnum ( ( ut8 ) * l ) ) || strchr ( ""-+/."" , * l )"		4943303	0		||			
ANR	4943432	AndExpression	isascii ( ( ut8 ) * l ) && isalnum ( ( ut8 ) * l )		4943303	0		&&			
ANR	4943433	CallExpression	isascii ( ( ut8 ) * l )		4943303	0					
ANR	4943434	Callee	isascii		4943303	0					
ANR	4943435	Identifier	isascii		4943303	0					
ANR	4943436	ArgumentList	( ut8 ) * l		4943303	1					
ANR	4943437	Argument	( ut8 ) * l		4943303	0					
ANR	4943438	CastExpression	( ut8 ) * l		4943303	0					
ANR	4943439	CastTarget	ut8		4943303	0					
ANR	4943440	UnaryOperationExpression	* l		4943303	1					
ANR	4943441	UnaryOperator	*		4943303	0					
ANR	4943442	Identifier	l		4943303	1					
ANR	4943443	CallExpression	isalnum ( ( ut8 ) * l )		4943303	1					
ANR	4943444	Callee	isalnum		4943303	0					
ANR	4943445	Identifier	isalnum		4943303	0					
ANR	4943446	ArgumentList	( ut8 ) * l		4943303	1					
ANR	4943447	Argument	( ut8 ) * l		4943303	0					
ANR	4943448	CastExpression	( ut8 ) * l		4943303	0					
ANR	4943449	CastTarget	ut8		4943303	0					
ANR	4943450	UnaryOperationExpression	* l		4943303	1					
ANR	4943451	UnaryOperator	*		4943303	0					
ANR	4943452	Identifier	l		4943303	1					
ANR	4943453	CallExpression	"strchr ( ""-+/."" , * l )"		4943303	1					
ANR	4943454	Callee	strchr		4943303	0					
ANR	4943455	Identifier	strchr		4943303	0					
ANR	4943456	ArgumentList	"""-+/."""		4943303	1					
ANR	4943457	Argument	"""-+/."""		4943303	0					
ANR	4943458	PrimaryExpression	"""-+/."""		4943303	0					
ANR	4943459	Argument	* l		4943303	1					
ANR	4943460	UnaryOperationExpression	* l		4943303	0					
ANR	4943461	UnaryOperator	*		4943303	0					
ANR	4943462	Identifier	l		4943303	1					
ANR	4943463	RelationalExpression	i < sizeof ( m -> mimetype )		4943303	1		<			
ANR	4943464	Identifier	i		4943303	0					
ANR	4943465	SizeofExpression	sizeof ( m -> mimetype )		4943303	1					
ANR	4943466	Sizeof	sizeof		4943303	0					
ANR	4943467	PtrMemberAccess	m -> mimetype		4943303	1					
ANR	4943468	Identifier	m		4943303	0					
ANR	4943469	Identifier	mimetype		4943303	1					
ANR	4943470	AssignmentExpression	m -> mimetype [ i ++ ] = * l ++	1305:2:31454:31476	4943303	2	True	=			
ANR	4943471	ArrayIndexing	m -> mimetype [ i ++ ]		4943303	0					
ANR	4943472	PtrMemberAccess	m -> mimetype		4943303	0					
ANR	4943473	Identifier	m		4943303	0					
ANR	4943474	Identifier	mimetype		4943303	1					
ANR	4943475	PostIncDecOperationExpression	i ++		4943303	1					
ANR	4943476	Identifier	i		4943303	0					
ANR	4943477	IncDec	++		4943303	1					
ANR	4943478	UnaryOperationExpression	* l ++		4943303	1					
ANR	4943479	UnaryOperator	*		4943303	0					
ANR	4943480	PostIncDecOperationExpression	l ++		4943303	1					
ANR	4943481	Identifier	l		4943303	0					
ANR	4943482	IncDec	++		4943303	1					
ANR	4943483	CompoundStatement		24:27:603:603	4943303	3					
ANR	4943484	IfStatement	if ( i == sizeof ( m -> mimetype ) )		4943303	10					
ANR	4943485	Condition	i == sizeof ( m -> mimetype )	1306:5:31487:31511	4943303	0	True				
ANR	4943486	EqualityExpression	i == sizeof ( m -> mimetype )		4943303	0		==			
ANR	4943487	Identifier	i		4943303	0					
ANR	4943488	SizeofExpression	sizeof ( m -> mimetype )		4943303	1					
ANR	4943489	Sizeof	sizeof		4943303	0					
ANR	4943490	PtrMemberAccess	m -> mimetype		4943303	1					
ANR	4943491	Identifier	m		4943303	0					
ANR	4943492	Identifier	mimetype		4943303	1					
ANR	4943493	CompoundStatement		25:32:638:638	4943303	1					
ANR	4943494	ExpressionStatement	m -> desc [ sizeof ( m -> mimetype ) - 1 ] = '\\0'	1307:2:31518:31558	4943303	0	True				
ANR	4943495	AssignmentExpression	m -> desc [ sizeof ( m -> mimetype ) - 1 ] = '\\0'		4943303	0		=			
ANR	4943496	ArrayIndexing	m -> desc [ sizeof ( m -> mimetype ) - 1 ]		4943303	0					
ANR	4943497	PtrMemberAccess	m -> desc		4943303	0					
ANR	4943498	Identifier	m		4943303	0					
ANR	4943499	Identifier	desc		4943303	1					
ANR	4943500	AdditiveExpression	sizeof ( m -> mimetype ) - 1		4943303	1		-			
ANR	4943501	SizeofExpression	sizeof ( m -> mimetype )		4943303	0					
ANR	4943502	Sizeof	sizeof		4943303	0					
ANR	4943503	PtrMemberAccess	m -> mimetype		4943303	1					
ANR	4943504	Identifier	m		4943303	0					
ANR	4943505	Identifier	mimetype		4943303	1					
ANR	4943506	PrimaryExpression	1		4943303	1					
ANR	4943507	PrimaryExpression	'\\0'		4943303	1					
ANR	4943508	IfStatement	if ( ms -> flags & R_MAGIC_CHECK )		4943303	1					
ANR	4943509	Condition	ms -> flags & R_MAGIC_CHECK	1308:6:31566:31590	4943303	0	True				
ANR	4943510	BitAndExpression	ms -> flags & R_MAGIC_CHECK		4943303	0		&			
ANR	4943511	PtrMemberAccess	ms -> flags		4943303	0					
ANR	4943512	Identifier	ms		4943303	0					
ANR	4943513	Identifier	flags		4943303	1					
ANR	4943514	Identifier	R_MAGIC_CHECK		4943303	1					
ANR	4943515	CompoundStatement		27:33:717:717	4943303	1					
ANR	4943516	ExpressionStatement	"file_magwarn ( ms , ""MIME type `%s' truncated %zu"" , m -> mimetype , i )"	1309:3:31598:31667	4943303	0	True				
ANR	4943517	CallExpression	"file_magwarn ( ms , ""MIME type `%s' truncated %zu"" , m -> mimetype , i )"		4943303	0					
ANR	4943518	Callee	file_magwarn		4943303	0					
ANR	4943519	Identifier	file_magwarn		4943303	0					
ANR	4943520	ArgumentList	ms		4943303	1					
ANR	4943521	Argument	ms		4943303	0					
ANR	4943522	Identifier	ms		4943303	0					
ANR	4943523	Argument	"""MIME type `%s' truncated %zu"""		4943303	1					
ANR	4943524	PrimaryExpression	"""MIME type `%s' truncated %zu"""		4943303	0					
ANR	4943525	Argument	m -> mimetype		4943303	2					
ANR	4943526	PtrMemberAccess	m -> mimetype		4943303	0					
ANR	4943527	Identifier	m		4943303	0					
ANR	4943528	Identifier	mimetype		4943303	1					
ANR	4943529	Argument	i		4943303	3					
ANR	4943530	Identifier	i		4943303	0					
ANR	4943531	ElseStatement	else		4943303	0					
ANR	4943532	CompoundStatement		31:8:805:805	4943303	0					
ANR	4943533	ExpressionStatement	m -> mimetype [ i ] = '\\0'	1313:2:31685:31706	4943303	0	True				
ANR	4943534	AssignmentExpression	m -> mimetype [ i ] = '\\0'		4943303	0		=			
ANR	4943535	ArrayIndexing	m -> mimetype [ i ]		4943303	0					
ANR	4943536	PtrMemberAccess	m -> mimetype		4943303	0					
ANR	4943537	Identifier	m		4943303	0					
ANR	4943538	Identifier	mimetype		4943303	1					
ANR	4943539	Identifier	i		4943303	1					
ANR	4943540	PrimaryExpression	'\\0'		4943303	1					
ANR	4943541	ReturnStatement	return ( i > 0 ) ? 0 : - 1 ;	1316:1:31713:31732	4943303	11	True				
ANR	4943542	ConditionalExpression	( i > 0 ) ? 0 : - 1		4943303	0					
ANR	4943543	Condition	i > 0		4943303	0					
ANR	4943544	RelationalExpression	i > 0		4943303	0		>			
ANR	4943545	Identifier	i		4943303	0					
ANR	4943546	PrimaryExpression	0		4943303	1					
ANR	4943547	PrimaryExpression	0		4943303	1					
ANR	4943548	UnaryOperationExpression	- 1		4943303	2					
ANR	4943549	UnaryOperator	-		4943303	0					
ANR	4943550	PrimaryExpression	1		4943303	1					
ANR	4943551	ReturnType	static int		4943303	1					
ANR	4943552	Identifier	parse_mime		4943303	2					
ANR	4943553	ParameterList	"RMagic * ms , struct r_magic_entry * * mentryp , ut32 * nmentryp , const char * line"		4943303	3					
ANR	4943554	Parameter	RMagic * ms	1282:22:30797:30806	4943303	0	True				
ANR	4943555	ParameterType	RMagic *		4943303	0					
ANR	4943556	Identifier	ms		4943303	1					
ANR	4943557	Parameter	struct r_magic_entry * * mentryp	1282:34:30809:30838	4943303	1	True				
ANR	4943558	ParameterType	struct r_magic_entry * *		4943303	0					
ANR	4943559	Identifier	mentryp		4943303	1					
ANR	4943560	Parameter	ut32 * nmentryp	1282:66:30841:30854	4943303	2	True				
ANR	4943561	ParameterType	ut32 *		4943303	0					
ANR	4943562	Identifier	nmentryp		4943303	1					
ANR	4943563	Parameter	const char * line	1282:82:30857:30872	4943303	3	True				
ANR	4943564	ParameterType	const char *		4943303	0					
ANR	4943565	Identifier	line		4943303	1					
ANR	4943566	CFGEntryNode	ENTRY		4943303		True				
ANR	4943567	CFGExitNode	EXIT		4943303		True				
ANR	4943568	Symbol	* m -> mimetype		4943303						
ANR	4943569	Symbol	* m -> desc		4943303						
ANR	4943570	Symbol	line		4943303						
ANR	4943571	Symbol	strchr		4943303						
ANR	4943572	Symbol	me -> mp		4943303						
ANR	4943573	Symbol	mentryp		4943303						
ANR	4943574	Symbol	* ms		4943303						
ANR	4943575	Symbol	m -> desc		4943303						
ANR	4943576	Symbol	m -> mimetype		4943303						
ANR	4943577	Symbol	me		4943303						
ANR	4943578	Symbol	nmentryp		4943303						
ANR	4943579	Symbol	* me		4943303						
ANR	4943580	Symbol	* * m		4943303						
ANR	4943581	Symbol	isascii		4943303						
ANR	4943582	Symbol	isalnum		4943303						
ANR	4943583	Symbol	ms		4943303						
ANR	4943584	Symbol	i		4943303						
ANR	4943585	Symbol	* l ++		4943303						
ANR	4943586	Symbol	l		4943303						
ANR	4943587	Symbol	m		4943303						
ANR	4943588	Symbol	* mentryp		4943303						
ANR	4943589	Symbol	* nmentryp		4943303						
ANR	4943590	Symbol	* i		4943303						
ANR	4943591	Symbol	* l		4943303						
ANR	4943592	Symbol	* m		4943303						
ANR	4943593	Symbol	ms -> flags		4943303						
ANR	4943594	Symbol	me -> cont_count		4943303						
ANR	4943595	Symbol	R_MAGIC_CHECK		4943303						
ANR	4943596	Function	check_format_type	1319:0:31737:33492							
ANR	4943597	FunctionDef	"check_format_type (const char * ptr , int type)"		4943596	0					
ANR	4943598	CompoundStatement		1319:56:31793:33492	4943596	0					
ANR	4943599	IdentifierDeclStatement	int quad = 0 ;	1320:1:31796:31808	4943596	0	True				
ANR	4943600	IdentifierDecl	quad = 0		4943596	0					
ANR	4943601	IdentifierDeclType	int		4943596	0					
ANR	4943602	Identifier	quad		4943596	1					
ANR	4943603	AssignmentExpression	quad = 0		4943596	2		=			
ANR	4943604	Identifier	quad		4943596	0					
ANR	4943605	PrimaryExpression	0		4943596	1					
ANR	4943606	IfStatement	if ( * ptr == '\\0' )		4943596	1					
ANR	4943607	Condition	* ptr == '\\0'	1321:5:31815:31826	4943596	0	True				
ANR	4943608	EqualityExpression	* ptr == '\\0'		4943596	0		==			
ANR	4943609	UnaryOperationExpression	* ptr		4943596	0					
ANR	4943610	UnaryOperator	*		4943596	0					
ANR	4943611	Identifier	ptr		4943596	1					
ANR	4943612	PrimaryExpression	'\\0'		4943596	1					
ANR	4943613	CompoundStatement		3:19:35:35	4943596	1					
ANR	4943614	ReturnStatement	return - 1 ;	1323:2:31868:31877	4943596	0	True				
ANR	4943615	UnaryOperationExpression	- 1		4943596	0					
ANR	4943616	UnaryOperator	-		4943596	0					
ANR	4943617	PrimaryExpression	1		4943596	1					
ANR	4943618	SwitchStatement	switch ( type )		4943596	2					
ANR	4943619	Condition	type	1326:9:31892:31895	4943596	0	True				
ANR	4943620	Identifier	type		4943596	0					
ANR	4943621	CompoundStatement		8:15:104:104	4943596	1					
ANR	4943622	Label	case FILE_FMT_QUAD :	1327:1:31901:31919	4943596	0	True				
ANR	4943623	Identifier	FILE_FMT_QUAD		4943596	0					
ANR	4943624	ExpressionStatement	quad = 1	1328:2:31923:31931	4943596	1	True				
ANR	4943625	AssignmentExpression	quad = 1		4943596	0		=			
ANR	4943626	Identifier	quad		4943596	0					
ANR	4943627	PrimaryExpression	1		4943596	1					
ANR	4943628	Label	case FILE_FMT_NUM :	1330:1:31952:31969	4943596	2	True				
ANR	4943629	Identifier	FILE_FMT_NUM		4943596	0					
ANR	4943630	IfStatement	if ( * ptr == '-' )		4943596	3					
ANR	4943631	Condition	* ptr == '-'	1331:6:31977:31987	4943596	0	True				
ANR	4943632	EqualityExpression	* ptr == '-'		4943596	0		==			
ANR	4943633	UnaryOperationExpression	* ptr		4943596	0					
ANR	4943634	UnaryOperator	*		4943596	0					
ANR	4943635	Identifier	ptr		4943596	1					
ANR	4943636	PrimaryExpression	'-'		4943596	1					
ANR	4943637	CompoundStatement		13:19:196:196	4943596	1					
ANR	4943638	ExpressionStatement	ptr ++	1332:3:31995:32000	4943596	0	True				
ANR	4943639	PostIncDecOperationExpression	ptr ++		4943596	0					
ANR	4943640	Identifier	ptr		4943596	0					
ANR	4943641	IncDec	++		4943596	1					
ANR	4943642	IfStatement	if ( * ptr == '.' )		4943596	4					
ANR	4943643	Condition	* ptr == '.'	1334:6:32012:32022	4943596	0	True				
ANR	4943644	EqualityExpression	* ptr == '.'		4943596	0		==			
ANR	4943645	UnaryOperationExpression	* ptr		4943596	0					
ANR	4943646	UnaryOperator	*		4943596	0					
ANR	4943647	Identifier	ptr		4943596	1					
ANR	4943648	PrimaryExpression	'.'		4943596	1					
ANR	4943649	CompoundStatement		16:19:231:231	4943596	1					
ANR	4943650	ExpressionStatement	ptr ++	1335:3:32030:32035	4943596	0	True				
ANR	4943651	PostIncDecOperationExpression	ptr ++		4943596	0					
ANR	4943652	Identifier	ptr		4943596	0					
ANR	4943653	IncDec	++		4943596	1					
ANR	4943654	WhileStatement	while ( isdigit ( ( ut8 ) * ptr ) )		4943596	5					
ANR	4943655	Condition	isdigit ( ( ut8 ) * ptr )	1337:9:32050:32068	4943596	0	True				
ANR	4943656	CallExpression	isdigit ( ( ut8 ) * ptr )		4943596	0					
ANR	4943657	Callee	isdigit		4943596	0					
ANR	4943658	Identifier	isdigit		4943596	0					
ANR	4943659	ArgumentList	( ut8 ) * ptr		4943596	1					
ANR	4943660	Argument	( ut8 ) * ptr		4943596	0					
ANR	4943661	CastExpression	( ut8 ) * ptr		4943596	0					
ANR	4943662	CastTarget	ut8		4943596	0					
ANR	4943663	UnaryOperationExpression	* ptr		4943596	1					
ANR	4943664	UnaryOperator	*		4943596	0					
ANR	4943665	Identifier	ptr		4943596	1					
ANR	4943666	CompoundStatement		19:30:277:277	4943596	1					
ANR	4943667	ExpressionStatement	ptr ++	1338:3:32076:32081	4943596	0	True				
ANR	4943668	PostIncDecOperationExpression	ptr ++		4943596	0					
ANR	4943669	Identifier	ptr		4943596	0					
ANR	4943670	IncDec	++		4943596	1					
ANR	4943671	IfStatement	if ( * ptr == '.' )		4943596	6					
ANR	4943672	Condition	* ptr == '.'	1340:6:32093:32103	4943596	0	True				
ANR	4943673	EqualityExpression	* ptr == '.'		4943596	0		==			
ANR	4943674	UnaryOperationExpression	* ptr		4943596	0					
ANR	4943675	UnaryOperator	*		4943596	0					
ANR	4943676	Identifier	ptr		4943596	1					
ANR	4943677	PrimaryExpression	'.'		4943596	1					
ANR	4943678	CompoundStatement		22:19:312:312	4943596	1					
ANR	4943679	ExpressionStatement	ptr ++	1341:3:32111:32116	4943596	0	True				
ANR	4943680	PostIncDecOperationExpression	ptr ++		4943596	0					
ANR	4943681	Identifier	ptr		4943596	0					
ANR	4943682	IncDec	++		4943596	1					
ANR	4943683	WhileStatement	while ( isdigit ( ( ut8 ) * ptr ) )		4943596	7					
ANR	4943684	Condition	isdigit ( ( ut8 ) * ptr )	1343:9:32131:32149	4943596	0	True				
ANR	4943685	CallExpression	isdigit ( ( ut8 ) * ptr )		4943596	0					
ANR	4943686	Callee	isdigit		4943596	0					
ANR	4943687	Identifier	isdigit		4943596	0					
ANR	4943688	ArgumentList	( ut8 ) * ptr		4943596	1					
ANR	4943689	Argument	( ut8 ) * ptr		4943596	0					
ANR	4943690	CastExpression	( ut8 ) * ptr		4943596	0					
ANR	4943691	CastTarget	ut8		4943596	0					
ANR	4943692	UnaryOperationExpression	* ptr		4943596	1					
ANR	4943693	UnaryOperator	*		4943596	0					
ANR	4943694	Identifier	ptr		4943596	1					
ANR	4943695	CompoundStatement		25:30:358:358	4943596	1					
ANR	4943696	ExpressionStatement	ptr ++	1344:3:32157:32162	4943596	0	True				
ANR	4943697	PostIncDecOperationExpression	ptr ++		4943596	0					
ANR	4943698	Identifier	ptr		4943596	0					
ANR	4943699	IncDec	++		4943596	1					
ANR	4943700	IfStatement	if ( quad )		4943596	8					
ANR	4943701	Condition	quad	1346:6:32174:32177	4943596	0	True				
ANR	4943702	Identifier	quad		4943596	0					
ANR	4943703	CompoundStatement		28:12:386:386	4943596	1					
ANR	4943704	IfStatement	if ( * ptr ++ != 'l' )		4943596	0					
ANR	4943705	Condition	* ptr ++ != 'l'	1347:7:32189:32201	4943596	0	True				
ANR	4943706	EqualityExpression	* ptr ++ != 'l'		4943596	0		!=			
ANR	4943707	UnaryOperationExpression	* ptr ++		4943596	0					
ANR	4943708	UnaryOperator	*		4943596	0					
ANR	4943709	PostIncDecOperationExpression	ptr ++		4943596	1					
ANR	4943710	Identifier	ptr		4943596	0					
ANR	4943711	IncDec	++		4943596	1					
ANR	4943712	PrimaryExpression	'l'		4943596	1					
ANR	4943713	CompoundStatement		29:22:410:410	4943596	1					
ANR	4943714	ReturnStatement	return - 1 ;	1348:4:32210:32219	4943596	0	True				
ANR	4943715	UnaryOperationExpression	- 1		4943596	0					
ANR	4943716	UnaryOperator	-		4943596	0					
ANR	4943717	PrimaryExpression	1		4943596	1					
ANR	4943718	IfStatement	if ( * ptr ++ != 'l' )		4943596	1					
ANR	4943719	Condition	* ptr ++ != 'l'	1350:7:32233:32245	4943596	0	True				
ANR	4943720	EqualityExpression	* ptr ++ != 'l'		4943596	0		!=			
ANR	4943721	UnaryOperationExpression	* ptr ++		4943596	0					
ANR	4943722	UnaryOperator	*		4943596	0					
ANR	4943723	PostIncDecOperationExpression	ptr ++		4943596	1					
ANR	4943724	Identifier	ptr		4943596	0					
ANR	4943725	IncDec	++		4943596	1					
ANR	4943726	PrimaryExpression	'l'		4943596	1					
ANR	4943727	CompoundStatement		32:22:454:454	4943596	1					
ANR	4943728	ReturnStatement	return - 1 ;	1351:4:32254:32263	4943596	0	True				
ANR	4943729	UnaryOperationExpression	- 1		4943596	0					
ANR	4943730	UnaryOperator	-		4943596	0					
ANR	4943731	PrimaryExpression	1		4943596	1					
ANR	4943732	SwitchStatement	switch ( * ptr ++ )		4943596	9					
ANR	4943733	Condition	* ptr ++	1354:10:32284:32289	4943596	0	True				
ANR	4943734	UnaryOperationExpression	* ptr ++		4943596	0					
ANR	4943735	UnaryOperator	*		4943596	0					
ANR	4943736	PostIncDecOperationExpression	ptr ++		4943596	1					
ANR	4943737	Identifier	ptr		4943596	0					
ANR	4943738	IncDec	++		4943596	1					
ANR	4943739	CompoundStatement		36:18:498:498	4943596	1					
ANR	4943740	Label	case 'l' :	1355:2:32296:32304	4943596	0	True				
ANR	4943741	SwitchStatement	switch ( * ptr ++ )		4943596	1					
ANR	4943742	Condition	* ptr ++	1356:11:32317:32322	4943596	0	True				
ANR	4943743	UnaryOperationExpression	* ptr ++		4943596	0					
ANR	4943744	UnaryOperator	*		4943596	0					
ANR	4943745	PostIncDecOperationExpression	ptr ++		4943596	1					
ANR	4943746	Identifier	ptr		4943596	0					
ANR	4943747	IncDec	++		4943596	1					
ANR	4943748	CompoundStatement		38:19:531:531	4943596	1					
ANR	4943749	Label	case 'i' :	1357:3:32330:32338	4943596	0	True				
ANR	4943750	Label	case 'd' :	1358:3:32343:32351	4943596	1	True				
ANR	4943751	Label	case 'u' :	1359:3:32356:32364	4943596	2	True				
ANR	4943752	Label	case 'x' :	1360:3:32369:32377	4943596	3	True				
ANR	4943753	Label	case 'X' :	1361:3:32382:32390	4943596	4	True				
ANR	4943754	ReturnStatement	return 0 ;	1362:4:32396:32404	4943596	5	True				
ANR	4943755	PrimaryExpression	0		4943596	0					
ANR	4943756	Label	default :	1363:3:32409:32416	4943596	6	True				
ANR	4943757	Identifier	default		4943596	0					
ANR	4943758	ReturnStatement	return - 1 ;	1364:4:32422:32431	4943596	7	True				
ANR	4943759	UnaryOperationExpression	- 1		4943596	0					
ANR	4943760	UnaryOperator	-		4943596	0					
ANR	4943761	PrimaryExpression	1		4943596	1					
ANR	4943762	Label	case 'h' :	1366:2:32440:32448	4943596	2	True				
ANR	4943763	SwitchStatement	switch ( * ptr ++ )		4943596	3					
ANR	4943764	Condition	* ptr ++	1367:11:32461:32466	4943596	0	True				
ANR	4943765	UnaryOperationExpression	* ptr ++		4943596	0					
ANR	4943766	UnaryOperator	*		4943596	0					
ANR	4943767	PostIncDecOperationExpression	ptr ++		4943596	1					
ANR	4943768	Identifier	ptr		4943596	0					
ANR	4943769	IncDec	++		4943596	1					
ANR	4943770	CompoundStatement		49:19:675:675	4943596	1					
ANR	4943771	Label	case 'h' :	1368:3:32474:32482	4943596	0	True				
ANR	4943772	SwitchStatement	switch ( * ptr ++ )		4943596	1					
ANR	4943773	Condition	* ptr ++	1369:12:32496:32501	4943596	0	True				
ANR	4943774	UnaryOperationExpression	* ptr ++		4943596	0					
ANR	4943775	UnaryOperator	*		4943596	0					
ANR	4943776	PostIncDecOperationExpression	ptr ++		4943596	1					
ANR	4943777	Identifier	ptr		4943596	0					
ANR	4943778	IncDec	++		4943596	1					
ANR	4943779	CompoundStatement		51:20:710:710	4943596	1					
ANR	4943780	Label	case 'i' :	1370:4:32510:32518	4943596	0	True				
ANR	4943781	Label	case 'd' :	1371:4:32524:32532	4943596	1	True				
ANR	4943782	Label	case 'u' :	1372:4:32538:32546	4943596	2	True				
ANR	4943783	Label	case 'x' :	1373:4:32552:32560	4943596	3	True				
ANR	4943784	Label	case 'X' :	1374:4:32566:32574	4943596	4	True				
ANR	4943785	ReturnStatement	return 0 ;	1375:5:32581:32589	4943596	5	True				
ANR	4943786	PrimaryExpression	0		4943596	0					
ANR	4943787	Label	default :	1376:4:32595:32602	4943596	6	True				
ANR	4943788	Identifier	default		4943596	0					
ANR	4943789	ReturnStatement	return - 1 ;	1377:5:32609:32618	4943596	7	True				
ANR	4943790	UnaryOperationExpression	- 1		4943596	0					
ANR	4943791	UnaryOperator	-		4943596	0					
ANR	4943792	PrimaryExpression	1		4943596	1					
ANR	4943793	Label	case 'd' :	1379:3:32629:32637	4943596	2	True				
ANR	4943794	ReturnStatement	return 0 ;	1380:4:32643:32651	4943596	3	True				
ANR	4943795	PrimaryExpression	0		4943596	0					
ANR	4943796	Label	default :	1381:3:32656:32663	4943596	4	True				
ANR	4943797	Identifier	default		4943596	0					
ANR	4943798	ReturnStatement	return - 1 ;	1382:4:32669:32678	4943596	5	True				
ANR	4943799	UnaryOperationExpression	- 1		4943596	0					
ANR	4943800	UnaryOperator	-		4943596	0					
ANR	4943801	PrimaryExpression	1		4943596	1					
ANR	4943802	Label	case 'i' :	1384:2:32687:32695	4943596	4	True				
ANR	4943803	Label	case 'c' :	1385:2:32699:32707	4943596	5	True				
ANR	4943804	Label	case 'd' :	1386:2:32711:32719	4943596	6	True				
ANR	4943805	Label	case 'u' :	1387:2:32723:32731	4943596	7	True				
ANR	4943806	Label	case 'x' :	1388:2:32735:32743	4943596	8	True				
ANR	4943807	Label	case 'X' :	1389:2:32747:32755	4943596	9	True				
ANR	4943808	ReturnStatement	return 0 ;	1390:3:32760:32768	4943596	10	True				
ANR	4943809	PrimaryExpression	0		4943596	0					
ANR	4943810	Label	default :	1391:2:32772:32779	4943596	11	True				
ANR	4943811	Identifier	default		4943596	0					
ANR	4943812	ReturnStatement	return - 1 ;	1392:3:32784:32793	4943596	12	True				
ANR	4943813	UnaryOperationExpression	- 1		4943596	0					
ANR	4943814	UnaryOperator	-		4943596	0					
ANR	4943815	PrimaryExpression	1		4943596	1					
ANR	4943816	Label	case FILE_FMT_FLOAT :	1394:1:32800:32819	4943596	10	True				
ANR	4943817	Identifier	FILE_FMT_FLOAT		4943596	0					
ANR	4943818	Label	case FILE_FMT_DOUBLE :	1395:1:32822:32842	4943596	11	True				
ANR	4943819	Identifier	FILE_FMT_DOUBLE		4943596	0					
ANR	4943820	IfStatement	if ( * ptr == '-' )		4943596	12					
ANR	4943821	Condition	* ptr == '-'	1396:6:32850:32860	4943596	0	True				
ANR	4943822	EqualityExpression	* ptr == '-'		4943596	0		==			
ANR	4943823	UnaryOperationExpression	* ptr		4943596	0					
ANR	4943824	UnaryOperator	*		4943596	0					
ANR	4943825	Identifier	ptr		4943596	1					
ANR	4943826	PrimaryExpression	'-'		4943596	1					
ANR	4943827	CompoundStatement		78:19:1069:1069	4943596	1					
ANR	4943828	ExpressionStatement	ptr ++	1397:3:32868:32873	4943596	0	True				
ANR	4943829	PostIncDecOperationExpression	ptr ++		4943596	0					
ANR	4943830	Identifier	ptr		4943596	0					
ANR	4943831	IncDec	++		4943596	1					
ANR	4943832	IfStatement	if ( * ptr == '.' )		4943596	13					
ANR	4943833	Condition	* ptr == '.'	1399:6:32885:32895	4943596	0	True				
ANR	4943834	EqualityExpression	* ptr == '.'		4943596	0		==			
ANR	4943835	UnaryOperationExpression	* ptr		4943596	0					
ANR	4943836	UnaryOperator	*		4943596	0					
ANR	4943837	Identifier	ptr		4943596	1					
ANR	4943838	PrimaryExpression	'.'		4943596	1					
ANR	4943839	CompoundStatement		81:19:1104:1104	4943596	1					
ANR	4943840	ExpressionStatement	ptr ++	1400:3:32903:32908	4943596	0	True				
ANR	4943841	PostIncDecOperationExpression	ptr ++		4943596	0					
ANR	4943842	Identifier	ptr		4943596	0					
ANR	4943843	IncDec	++		4943596	1					
ANR	4943844	WhileStatement	while ( isdigit ( ( ut8 ) * ptr ) )		4943596	14					
ANR	4943845	Condition	isdigit ( ( ut8 ) * ptr )	1402:9:32923:32941	4943596	0	True				
ANR	4943846	CallExpression	isdigit ( ( ut8 ) * ptr )		4943596	0					
ANR	4943847	Callee	isdigit		4943596	0					
ANR	4943848	Identifier	isdigit		4943596	0					
ANR	4943849	ArgumentList	( ut8 ) * ptr		4943596	1					
ANR	4943850	Argument	( ut8 ) * ptr		4943596	0					
ANR	4943851	CastExpression	( ut8 ) * ptr		4943596	0					
ANR	4943852	CastTarget	ut8		4943596	0					
ANR	4943853	UnaryOperationExpression	* ptr		4943596	1					
ANR	4943854	UnaryOperator	*		4943596	0					
ANR	4943855	Identifier	ptr		4943596	1					
ANR	4943856	CompoundStatement		84:30:1150:1150	4943596	1					
ANR	4943857	ExpressionStatement	ptr ++	1403:3:32949:32954	4943596	0	True				
ANR	4943858	PostIncDecOperationExpression	ptr ++		4943596	0					
ANR	4943859	Identifier	ptr		4943596	0					
ANR	4943860	IncDec	++		4943596	1					
ANR	4943861	IfStatement	if ( * ptr == '.' )		4943596	15					
ANR	4943862	Condition	* ptr == '.'	1405:6:32966:32976	4943596	0	True				
ANR	4943863	EqualityExpression	* ptr == '.'		4943596	0		==			
ANR	4943864	UnaryOperationExpression	* ptr		4943596	0					
ANR	4943865	UnaryOperator	*		4943596	0					
ANR	4943866	Identifier	ptr		4943596	1					
ANR	4943867	PrimaryExpression	'.'		4943596	1					
ANR	4943868	CompoundStatement		87:19:1185:1185	4943596	1					
ANR	4943869	ExpressionStatement	ptr ++	1406:3:32984:32989	4943596	0	True				
ANR	4943870	PostIncDecOperationExpression	ptr ++		4943596	0					
ANR	4943871	Identifier	ptr		4943596	0					
ANR	4943872	IncDec	++		4943596	1					
ANR	4943873	WhileStatement	while ( isdigit ( ( ut8 ) * ptr ) )		4943596	16					
ANR	4943874	Condition	isdigit ( ( ut8 ) * ptr )	1408:9:33004:33022	4943596	0	True				
ANR	4943875	CallExpression	isdigit ( ( ut8 ) * ptr )		4943596	0					
ANR	4943876	Callee	isdigit		4943596	0					
ANR	4943877	Identifier	isdigit		4943596	0					
ANR	4943878	ArgumentList	( ut8 ) * ptr		4943596	1					
ANR	4943879	Argument	( ut8 ) * ptr		4943596	0					
ANR	4943880	CastExpression	( ut8 ) * ptr		4943596	0					
ANR	4943881	CastTarget	ut8		4943596	0					
ANR	4943882	UnaryOperationExpression	* ptr		4943596	1					
ANR	4943883	UnaryOperator	*		4943596	0					
ANR	4943884	Identifier	ptr		4943596	1					
ANR	4943885	CompoundStatement		90:30:1231:1231	4943596	1					
ANR	4943886	ExpressionStatement	ptr ++	1409:3:33030:33035	4943596	0	True				
ANR	4943887	PostIncDecOperationExpression	ptr ++		4943596	0					
ANR	4943888	Identifier	ptr		4943596	0					
ANR	4943889	IncDec	++		4943596	1					
ANR	4943890	SwitchStatement	switch ( * ptr ++ )		4943596	17					
ANR	4943891	Condition	* ptr ++	1412:10:33052:33057	4943596	0	True				
ANR	4943892	UnaryOperationExpression	* ptr ++		4943596	0					
ANR	4943893	UnaryOperator	*		4943596	0					
ANR	4943894	PostIncDecOperationExpression	ptr ++		4943596	1					
ANR	4943895	Identifier	ptr		4943596	0					
ANR	4943896	IncDec	++		4943596	1					
ANR	4943897	CompoundStatement		94:18:1266:1266	4943596	1					
ANR	4943898	Label	case 'e' :	1413:2:33064:33072	4943596	0	True				
ANR	4943899	Label	case 'E' :	1414:2:33076:33084	4943596	1	True				
ANR	4943900	Label	case 'f' :	1415:2:33088:33096	4943596	2	True				
ANR	4943901	Label	case 'F' :	1416:2:33100:33108	4943596	3	True				
ANR	4943902	Label	case 'g' :	1417:2:33112:33120	4943596	4	True				
ANR	4943903	Label	case 'G' :	1418:2:33124:33132	4943596	5	True				
ANR	4943904	ReturnStatement	return 0 ;	1419:3:33137:33145	4943596	6	True				
ANR	4943905	PrimaryExpression	0		4943596	0					
ANR	4943906	Label	default :	1421:2:33150:33157	4943596	7	True				
ANR	4943907	Identifier	default		4943596	0					
ANR	4943908	ReturnStatement	return - 1 ;	1422:3:33162:33171	4943596	8	True				
ANR	4943909	UnaryOperationExpression	- 1		4943596	0					
ANR	4943910	UnaryOperator	-		4943596	0					
ANR	4943911	PrimaryExpression	1		4943596	1					
ANR	4943912	Label	case FILE_FMT_STR :	1424:1:33178:33195	4943596	18	True				
ANR	4943913	Identifier	FILE_FMT_STR		4943596	0					
ANR	4943914	IfStatement	if ( * ptr == '-' )		4943596	19					
ANR	4943915	Condition	* ptr == '-'	1425:6:33203:33213	4943596	0	True				
ANR	4943916	EqualityExpression	* ptr == '-'		4943596	0		==			
ANR	4943917	UnaryOperationExpression	* ptr		4943596	0					
ANR	4943918	UnaryOperator	*		4943596	0					
ANR	4943919	Identifier	ptr		4943596	1					
ANR	4943920	PrimaryExpression	'-'		4943596	1					
ANR	4943921	CompoundStatement		107:19:1422:1422	4943596	1					
ANR	4943922	ExpressionStatement	ptr ++	1426:3:33221:33226	4943596	0	True				
ANR	4943923	PostIncDecOperationExpression	ptr ++		4943596	0					
ANR	4943924	Identifier	ptr		4943596	0					
ANR	4943925	IncDec	++		4943596	1					
ANR	4943926	WhileStatement	while ( isdigit ( ( ut8 ) * ptr ) )		4943596	20					
ANR	4943927	Condition	isdigit ( ( ut8 ) * ptr )	1428:9:33241:33259	4943596	0	True				
ANR	4943928	CallExpression	isdigit ( ( ut8 ) * ptr )		4943596	0					
ANR	4943929	Callee	isdigit		4943596	0					
ANR	4943930	Identifier	isdigit		4943596	0					
ANR	4943931	ArgumentList	( ut8 ) * ptr		4943596	1					
ANR	4943932	Argument	( ut8 ) * ptr		4943596	0					
ANR	4943933	CastExpression	( ut8 ) * ptr		4943596	0					
ANR	4943934	CastTarget	ut8		4943596	0					
ANR	4943935	UnaryOperationExpression	* ptr		4943596	1					
ANR	4943936	UnaryOperator	*		4943596	0					
ANR	4943937	Identifier	ptr		4943596	1					
ANR	4943938	CompoundStatement		110:30:1468:1468	4943596	1					
ANR	4943939	ExpressionStatement	ptr ++	1429:3:33267:33272	4943596	0	True				
ANR	4943940	PostIncDecOperationExpression	ptr ++		4943596	0					
ANR	4943941	Identifier	ptr		4943596	0					
ANR	4943942	IncDec	++		4943596	1					
ANR	4943943	IfStatement	if ( * ptr == '.' )		4943596	21					
ANR	4943944	Condition	* ptr == '.'	1431:6:33284:33294	4943596	0	True				
ANR	4943945	EqualityExpression	* ptr == '.'		4943596	0		==			
ANR	4943946	UnaryOperationExpression	* ptr		4943596	0					
ANR	4943947	UnaryOperator	*		4943596	0					
ANR	4943948	Identifier	ptr		4943596	1					
ANR	4943949	PrimaryExpression	'.'		4943596	1					
ANR	4943950	CompoundStatement		113:19:1503:1503	4943596	1					
ANR	4943951	ExpressionStatement	ptr ++	1432:3:33302:33307	4943596	0	True				
ANR	4943952	PostIncDecOperationExpression	ptr ++		4943596	0					
ANR	4943953	Identifier	ptr		4943596	0					
ANR	4943954	IncDec	++		4943596	1					
ANR	4943955	WhileStatement	while ( isdigit ( ( ut8 ) * ptr ) )		4943596	1					
ANR	4943956	Condition	isdigit ( ( ut8 ) * ptr )	1433:10:33319:33337	4943596	0	True				
ANR	4943957	CallExpression	isdigit ( ( ut8 ) * ptr )		4943596	0					
ANR	4943958	Callee	isdigit		4943596	0					
ANR	4943959	Identifier	isdigit		4943596	0					
ANR	4943960	ArgumentList	( ut8 ) * ptr		4943596	1					
ANR	4943961	Argument	( ut8 ) * ptr		4943596	0					
ANR	4943962	CastExpression	( ut8 ) * ptr		4943596	0					
ANR	4943963	CastTarget	ut8		4943596	0					
ANR	4943964	UnaryOperationExpression	* ptr		4943596	1					
ANR	4943965	UnaryOperator	*		4943596	0					
ANR	4943966	Identifier	ptr		4943596	1					
ANR	4943967	CompoundStatement		115:31:1546:1546	4943596	1					
ANR	4943968	ExpressionStatement	ptr ++	1434:4:33346:33351	4943596	0	True				
ANR	4943969	PostIncDecOperationExpression	ptr ++		4943596	0					
ANR	4943970	Identifier	ptr		4943596	0					
ANR	4943971	IncDec	++		4943596	1					
ANR	4943972	IfStatement	if ( * ptr ++ == 's' )		4943596	22					
ANR	4943973	Condition	* ptr ++ == 's'	1438:6:33369:33381	4943596	0	True				
ANR	4943974	EqualityExpression	* ptr ++ == 's'		4943596	0		==			
ANR	4943975	UnaryOperationExpression	* ptr ++		4943596	0					
ANR	4943976	UnaryOperator	*		4943596	0					
ANR	4943977	PostIncDecOperationExpression	ptr ++		4943596	1					
ANR	4943978	Identifier	ptr		4943596	0					
ANR	4943979	IncDec	++		4943596	1					
ANR	4943980	PrimaryExpression	's'		4943596	1					
ANR	4943981	CompoundStatement		120:21:1590:1590	4943596	1					
ANR	4943982	ReturnStatement	return 0 ;	1439:3:33389:33397	4943596	0	True				
ANR	4943983	PrimaryExpression	0		4943596	0					
ANR	4943984	ReturnStatement	return - 1 ;	1441:2:33405:33414	4943596	23	True				
ANR	4943985	UnaryOperationExpression	- 1		4943596	0					
ANR	4943986	UnaryOperator	-		4943596	0					
ANR	4943987	PrimaryExpression	1		4943596	1					
ANR	4943988	Label	default :	1442:1:33417:33424	4943596	24	True				
ANR	4943989	Identifier	default		4943596	0					
ANR	4943990	ExpressionStatement	abort ( )	1444:2:33451:33459	4943596	25	True				
ANR	4943991	CallExpression	abort ( )		4943596	0					
ANR	4943992	Callee	abort		4943596	0					
ANR	4943993	Identifier	abort		4943596	0					
ANR	4943994	ArgumentList			4943596	1					
ANR	4943995	ReturnStatement	return - 1 ;	1447:1:33481:33490	4943596	3	True				
ANR	4943996	UnaryOperationExpression	- 1		4943596	0					
ANR	4943997	UnaryOperator	-		4943596	0					
ANR	4943998	PrimaryExpression	1		4943596	1					
ANR	4943999	ReturnType	static int		4943596	1					
ANR	4944000	Identifier	check_format_type		4943596	2					
ANR	4944001	ParameterList	"const char * ptr , int type"		4943596	3					
ANR	4944002	Parameter	const char * ptr	1319:29:31766:31780	4943596	0	True				
ANR	4944003	ParameterType	const char *		4943596	0					
ANR	4944004	Identifier	ptr		4943596	1					
ANR	4944005	Parameter	int type	1319:46:31783:31790	4943596	1	True				
ANR	4944006	ParameterType	int		4943596	0					
ANR	4944007	Identifier	type		4943596	1					
ANR	4944008	CFGEntryNode	ENTRY		4943596		True				
ANR	4944009	CFGExitNode	EXIT		4943596		True				
ANR	4944010	Symbol	quad		4943596						
ANR	4944011	Symbol	* ptr ++		4943596						
ANR	4944012	Symbol	* ptr		4943596						
ANR	4944013	Symbol	type		4943596						
ANR	4944014	Symbol	isdigit		4943596						
ANR	4944015	Symbol	ptr		4943596						
ANR	4944016	Function	check_format	1454:0:33592:34807							
ANR	4944017	FunctionDef	"check_format (RMagic * ms , struct r_magic * m)"		4944016	0					
ANR	4944018	CompoundStatement		1454:55:33647:34807	4944016	0					
ANR	4944019	IdentifierDeclStatement	char * ptr ;	1455:1:33650:33659	4944016	0	True				
ANR	4944020	IdentifierDecl	* ptr		4944016	0					
ANR	4944021	IdentifierDeclType	char *		4944016	0					
ANR	4944022	Identifier	ptr		4944016	1					
ANR	4944023	ForStatement	for ( ptr = m -> desc ; * ptr ; ptr ++ )		4944016	1					
ANR	4944024	ForInit	ptr = m -> desc ;	1457:6:33668:33681	4944016	0	True				
ANR	4944025	AssignmentExpression	ptr = m -> desc		4944016	0		=			
ANR	4944026	Identifier	ptr		4944016	0					
ANR	4944027	PtrMemberAccess	m -> desc		4944016	1					
ANR	4944028	Identifier	m		4944016	0					
ANR	4944029	Identifier	desc		4944016	1					
ANR	4944030	Condition	* ptr	1457:21:33683:33686	4944016	1	True				
ANR	4944031	UnaryOperationExpression	* ptr		4944016	0					
ANR	4944032	UnaryOperator	*		4944016	0					
ANR	4944033	Identifier	ptr		4944016	1					
ANR	4944034	PostIncDecOperationExpression	ptr ++	1457:27:33689:33693	4944016	2	True				
ANR	4944035	Identifier	ptr		4944016	0					
ANR	4944036	IncDec	++		4944016	1					
ANR	4944037	CompoundStatement		4:34:48:48	4944016	3					
ANR	4944038	IfStatement	if ( * ptr == '%' )		4944016	0					
ANR	4944039	Condition	* ptr == '%'	1458:6:33704:33714	4944016	0	True				
ANR	4944040	EqualityExpression	* ptr == '%'		4944016	0		==			
ANR	4944041	UnaryOperationExpression	* ptr		4944016	0					
ANR	4944042	UnaryOperator	*		4944016	0					
ANR	4944043	Identifier	ptr		4944016	1					
ANR	4944044	PrimaryExpression	'%'		4944016	1					
ANR	4944045	CompoundStatement		5:19:69:69	4944016	1					
ANR	4944046	BreakStatement	break ;	1459:3:33722:33727	4944016	0	True				
ANR	4944047	IfStatement	if ( * ptr == '\\0' )		4944016	2					
ANR	4944048	Condition	* ptr == '\\0'	1462:5:33741:33752	4944016	0	True				
ANR	4944049	EqualityExpression	* ptr == '\\0'		4944016	0		==			
ANR	4944050	UnaryOperationExpression	* ptr		4944016	0					
ANR	4944051	UnaryOperator	*		4944016	0					
ANR	4944052	Identifier	ptr		4944016	1					
ANR	4944053	PrimaryExpression	'\\0'		4944016	1					
ANR	4944054	CompoundStatement		9:19:107:107	4944016	1					
ANR	4944055	ReturnStatement	return 1 ;	1464:2:33788:33796	4944016	0	True				
ANR	4944056	PrimaryExpression	1		4944016	0					
ANR	4944057	IfStatement	if ( file_nformats != file_nnames )		4944016	3					
ANR	4944058	Condition	file_nformats != file_nnames	1467:5:33807:33834	4944016	0	True				
ANR	4944059	EqualityExpression	file_nformats != file_nnames		4944016	0		!=			
ANR	4944060	Identifier	file_nformats		4944016	0					
ANR	4944061	Identifier	file_nnames		4944016	1					
ANR	4944062	CompoundStatement		14:35:189:189	4944016	1					
ANR	4944063	ReturnStatement	return - 1 ;	1468:2:33841:33850	4944016	0	True				
ANR	4944064	UnaryOperationExpression	- 1		4944016	0					
ANR	4944065	UnaryOperator	-		4944016	0					
ANR	4944066	PrimaryExpression	1		4944016	1					
ANR	4944067	IfStatement	if ( m -> type >= file_nformats )		4944016	4					
ANR	4944068	Condition	m -> type >= file_nformats	1471:5:33863:33886	4944016	0	True				
ANR	4944069	RelationalExpression	m -> type >= file_nformats		4944016	0		>=			
ANR	4944070	PtrMemberAccess	m -> type		4944016	0					
ANR	4944071	Identifier	m		4944016	0					
ANR	4944072	Identifier	type		4944016	1					
ANR	4944073	Identifier	file_nformats		4944016	1					
ANR	4944074	CompoundStatement		18:31:241:241	4944016	1					
ANR	4944075	Statement	file_magwarn	1472:2:33893:33904	4944016	0	True				
ANR	4944076	Statement	(	1472:14:33905:33905	4944016	1	True				
ANR	4944077	Statement	ms	1472:15:33906:33907	4944016	2	True				
ANR	4944078	Statement	","	1472:17:33908:33908	4944016	3	True				
ANR	4944079	Statement	"""Internal error inconsistency between """	1472:19:33910:33948	4944016	4	True				
ANR	4944080	Statement	"""m->type and format strings"""	1473:6:33956:33983	4944016	5	True				
ANR	4944081	Statement	)	1473:34:33984:33984	4944016	6	True				
ANR	4944082	ExpressionStatement		1473:35:33985:33985	4944016	7	True				
ANR	4944083	ReturnStatement	return - 1 ;	1474:2:33989:33998	4944016	8	True				
ANR	4944084	UnaryOperationExpression	- 1		4944016	0					
ANR	4944085	UnaryOperator	-		4944016	0					
ANR	4944086	PrimaryExpression	1		4944016	1					
ANR	4944087	IfStatement	if ( magic_file_formats [ m -> type ] == FILE_FMT_NONE )		4944016	5					
ANR	4944088	Condition	magic_file_formats [ m -> type ] == FILE_FMT_NONE	1476:5:34008:34051	4944016	0	True				
ANR	4944089	EqualityExpression	magic_file_formats [ m -> type ] == FILE_FMT_NONE		4944016	0		==			
ANR	4944090	ArrayIndexing	magic_file_formats [ m -> type ]		4944016	0					
ANR	4944091	Identifier	magic_file_formats		4944016	0					
ANR	4944092	PtrMemberAccess	m -> type		4944016	1					
ANR	4944093	Identifier	m		4944016	0					
ANR	4944094	Identifier	type		4944016	1					
ANR	4944095	Identifier	FILE_FMT_NONE		4944016	1					
ANR	4944096	CompoundStatement		23:51:406:406	4944016	1					
ANR	4944097	Statement	file_magwarn	1477:2:34058:34069	4944016	0	True				
ANR	4944098	Statement	(	1477:14:34070:34070	4944016	1	True				
ANR	4944099	Statement	ms	1477:15:34071:34072	4944016	2	True				
ANR	4944100	Statement	","	1477:17:34073:34073	4944016	3	True				
ANR	4944101	Statement	"""No format string for `%s' with description """	1477:19:34075:34119	4944016	4	True				
ANR	4944102	Statement	"""`%s'"""	1478:6:34127:34132	4944016	5	True				
ANR	4944103	Statement	","	1478:12:34133:34133	4944016	6	True				
ANR	4944104	Statement	m	1478:14:34135:34135	4944016	7	True				
ANR	4944105	Statement	->	1478:15:34136:34137	4944016	8	True				
ANR	4944106	Statement	desc	1478:17:34138:34141	4944016	9	True				
ANR	4944107	Statement	","	1478:21:34142:34142	4944016	10	True				
ANR	4944108	Statement	magic_file_names	1478:23:34144:34159	4944016	11	True				
ANR	4944109	Statement	[	1478:39:34160:34160	4944016	12	True				
ANR	4944110	Statement	m	1478:40:34161:34161	4944016	13	True				
ANR	4944111	Statement	->	1478:41:34162:34163	4944016	14	True				
ANR	4944112	Statement	type	1478:43:34164:34167	4944016	15	True				
ANR	4944113	Statement	]	1478:47:34168:34168	4944016	16	True				
ANR	4944114	Statement	)	1478:48:34169:34169	4944016	17	True				
ANR	4944115	ExpressionStatement		1478:49:34170:34170	4944016	18	True				
ANR	4944116	ReturnStatement	return - 1 ;	1479:2:34174:34183	4944016	19	True				
ANR	4944117	UnaryOperationExpression	- 1		4944016	0					
ANR	4944118	UnaryOperator	-		4944016	0					
ANR	4944119	PrimaryExpression	1		4944016	1					
ANR	4944120	ExpressionStatement	ptr ++	1482:1:34190:34195	4944016	6	True				
ANR	4944121	PostIncDecOperationExpression	ptr ++		4944016	0					
ANR	4944122	Identifier	ptr		4944016	0					
ANR	4944123	IncDec	++		4944016	1					
ANR	4944124	IfStatement	"if ( ptr && check_format_type ( ptr , magic_file_formats [ m -> type ] ) == - 1 )"		4944016	7					
ANR	4944125	Condition	"ptr && check_format_type ( ptr , magic_file_formats [ m -> type ] ) == - 1"	1483:5:34202:34265	4944016	0	True				
ANR	4944126	AndExpression	"ptr && check_format_type ( ptr , magic_file_formats [ m -> type ] ) == - 1"		4944016	0		&&			
ANR	4944127	Identifier	ptr		4944016	0					
ANR	4944128	EqualityExpression	"check_format_type ( ptr , magic_file_formats [ m -> type ] ) == - 1"		4944016	1		==			
ANR	4944129	CallExpression	"check_format_type ( ptr , magic_file_formats [ m -> type ] )"		4944016	0					
ANR	4944130	Callee	check_format_type		4944016	0					
ANR	4944131	Identifier	check_format_type		4944016	0					
ANR	4944132	ArgumentList	ptr		4944016	1					
ANR	4944133	Argument	ptr		4944016	0					
ANR	4944134	Identifier	ptr		4944016	0					
ANR	4944135	Argument	magic_file_formats [ m -> type ]		4944016	1					
ANR	4944136	ArrayIndexing	magic_file_formats [ m -> type ]		4944016	0					
ANR	4944137	Identifier	magic_file_formats		4944016	0					
ANR	4944138	PtrMemberAccess	m -> type		4944016	1					
ANR	4944139	Identifier	m		4944016	0					
ANR	4944140	Identifier	type		4944016	1					
ANR	4944141	UnaryOperationExpression	- 1		4944016	1					
ANR	4944142	UnaryOperator	-		4944016	0					
ANR	4944143	PrimaryExpression	1		4944016	1					
ANR	4944144	CompoundStatement		30:71:620:620	4944016	1					
ANR	4944145	Statement	file_magwarn	1488:2:34378:34389	4944016	0	True				
ANR	4944146	Statement	(	1488:14:34390:34390	4944016	1	True				
ANR	4944147	Statement	ms	1488:15:34391:34392	4944016	2	True				
ANR	4944148	Statement	","	1488:17:34393:34393	4944016	3	True				
ANR	4944149	Statement	"""Printf format `%c' is not valid for type """	1488:19:34395:34437	4944016	4	True				
ANR	4944150	Statement	"""`%s' in description `%s'"""	1489:6:34445:34470	4944016	5	True				
ANR	4944151	Statement	","	1489:32:34471:34471	4944016	6	True				
ANR	4944152	Statement	ptr	1490:6:34479:34481	4944016	7	True				
ANR	4944153	Statement	&&	1490:10:34483:34484	4944016	8	True				
ANR	4944154	Statement	*	1490:13:34486:34486	4944016	9	True				
ANR	4944155	Statement	ptr	1490:14:34487:34489	4944016	10	True				
ANR	4944156	Statement	?	1490:18:34491:34491	4944016	11	True				
ANR	4944157	Statement	*	1490:20:34493:34493	4944016	12	True				
ANR	4944158	Label	ptr :	1490:21:34494:34498	4944016	13	True				
ANR	4944159	Identifier	ptr		4944016	0					
ANR	4944160	Statement	'?'	1490:27:34500:34502	4944016	14	True				
ANR	4944161	Statement	","	1490:30:34503:34503	4944016	15	True				
ANR	4944162	Statement	magic_file_names	1491:6:34511:34526	4944016	16	True				
ANR	4944163	Statement	[	1491:22:34527:34527	4944016	17	True				
ANR	4944164	Statement	m	1491:23:34528:34528	4944016	18	True				
ANR	4944165	Statement	->	1491:24:34529:34530	4944016	19	True				
ANR	4944166	Statement	type	1491:26:34531:34534	4944016	20	True				
ANR	4944167	Statement	]	1491:30:34535:34535	4944016	21	True				
ANR	4944168	Statement	","	1491:31:34536:34536	4944016	22	True				
ANR	4944169	Statement	m	1491:33:34538:34538	4944016	23	True				
ANR	4944170	Statement	->	1491:34:34539:34540	4944016	24	True				
ANR	4944171	Statement	desc	1491:36:34541:34544	4944016	25	True				
ANR	4944172	Statement	)	1491:40:34545:34545	4944016	26	True				
ANR	4944173	ExpressionStatement		1491:41:34546:34546	4944016	27	True				
ANR	4944174	ReturnStatement	return - 1 ;	1492:2:34550:34559	4944016	28	True				
ANR	4944175	UnaryOperationExpression	- 1		4944016	0					
ANR	4944176	UnaryOperator	-		4944016	0					
ANR	4944177	PrimaryExpression	1		4944016	1					
ANR	4944178	ForStatement	for ( ; * ptr ; ptr ++ )		4944016	8					
ANR	4944179	Condition	* ptr	1495:8:34573:34576	4944016	0	True				
ANR	4944180	UnaryOperationExpression	* ptr		4944016	0					
ANR	4944181	UnaryOperator	*		4944016	0					
ANR	4944182	Identifier	ptr		4944016	1					
ANR	4944183	PostIncDecOperationExpression	ptr ++	1495:14:34579:34583	4944016	1	True				
ANR	4944184	Identifier	ptr		4944016	0					
ANR	4944185	IncDec	++		4944016	1					
ANR	4944186	CompoundStatement		42:21:938:938	4944016	2					
ANR	4944187	IfStatement	if ( * ptr == '%' )		4944016	0					
ANR	4944188	Condition	* ptr == '%'	1496:6:34594:34604	4944016	0	True				
ANR	4944189	EqualityExpression	* ptr == '%'		4944016	0		==			
ANR	4944190	UnaryOperationExpression	* ptr		4944016	0					
ANR	4944191	UnaryOperator	*		4944016	0					
ANR	4944192	Identifier	ptr		4944016	1					
ANR	4944193	PrimaryExpression	'%'		4944016	1					
ANR	4944194	CompoundStatement		43:19:959:959	4944016	1					
ANR	4944195	Statement	file_magwarn	1497:3:34612:34623	4944016	0	True				
ANR	4944196	Statement	(	1497:16:34625:34625	4944016	1	True				
ANR	4944197	Statement	ms	1497:17:34626:34627	4944016	2	True				
ANR	4944198	Statement	","	1497:19:34628:34628	4944016	3	True				
ANR	4944199	Statement	"""Too many format strings (should have at most one) """	1498:7:34637:34688	4944016	4	True				
ANR	4944200	Statement	"""for `%s' with description `%s'"""	1499:7:34697:34728	4944016	5	True				
ANR	4944201	Statement	","	1499:39:34729:34729	4944016	6	True				
ANR	4944202	Statement	magic_file_names	1500:7:34738:34753	4944016	7	True				
ANR	4944203	Statement	[	1500:23:34754:34754	4944016	8	True				
ANR	4944204	Statement	m	1500:24:34755:34755	4944016	9	True				
ANR	4944205	Statement	->	1500:25:34756:34757	4944016	10	True				
ANR	4944206	Statement	type	1500:27:34758:34761	4944016	11	True				
ANR	4944207	Statement	]	1500:31:34762:34762	4944016	12	True				
ANR	4944208	Statement	","	1500:32:34763:34763	4944016	13	True				
ANR	4944209	Statement	m	1500:34:34765:34765	4944016	14	True				
ANR	4944210	Statement	->	1500:35:34766:34767	4944016	15	True				
ANR	4944211	Statement	desc	1500:37:34768:34771	4944016	16	True				
ANR	4944212	Statement	)	1500:41:34772:34772	4944016	17	True				
ANR	4944213	ExpressionStatement		1500:42:34773:34773	4944016	18	True				
ANR	4944214	ReturnStatement	return - 1 ;	1501:3:34778:34787	4944016	19	True				
ANR	4944215	UnaryOperationExpression	- 1		4944016	0					
ANR	4944216	UnaryOperator	-		4944016	0					
ANR	4944217	PrimaryExpression	1		4944016	1					
ANR	4944218	ReturnStatement	return 0 ;	1504:1:34797:34805	4944016	9	True				
ANR	4944219	PrimaryExpression	0		4944016	0					
ANR	4944220	ReturnType	static int		4944016	1					
ANR	4944221	Identifier	check_format		4944016	2					
ANR	4944222	ParameterList	"RMagic * ms , struct r_magic * m"		4944016	3					
ANR	4944223	Parameter	RMagic * ms	1454:24:33616:33625	4944016	0	True				
ANR	4944224	ParameterType	RMagic *		4944016	0					
ANR	4944225	Identifier	ms		4944016	1					
ANR	4944226	Parameter	struct r_magic * m	1454:36:33628:33644	4944016	1	True				
ANR	4944227	ParameterType	struct r_magic *		4944016	0					
ANR	4944228	Identifier	m		4944016	1					
ANR	4944229	CFGEntryNode	ENTRY		4944016		True				
ANR	4944230	CFGExitNode	EXIT		4944016		True				
ANR	4944231	Symbol	check_format_type		4944016						
ANR	4944232	Symbol	ms		4944016						
ANR	4944233	Symbol	magic_file_formats		4944016						
ANR	4944234	Symbol	* magic_file_formats		4944016						
ANR	4944235	Symbol	file_nnames		4944016						
ANR	4944236	Symbol	m		4944016						
ANR	4944237	Symbol	ptr		4944016						
ANR	4944238	Symbol	m -> type		4944016						
ANR	4944239	Symbol	m -> desc		4944016						
ANR	4944240	Symbol	* m		4944016						
ANR	4944241	Symbol	FILE_FMT_NONE		4944016						
ANR	4944242	Symbol	* ptr		4944016						
ANR	4944243	Symbol	file_nformats		4944016						
ANR	4944244	Symbol	* m -> type		4944016						
ANR	4944245	Symbol	* * m		4944016						
ANR	4944246	Function	getvalue	1512:0:35042:36131							
ANR	4944247	FunctionDef	"getvalue (RMagic * ms , struct r_magic * m , const char * * p , int action)"		4944246	0					
ANR	4944248	CompoundStatement		1512:79:35121:36131	4944246	0					
ANR	4944249	IdentifierDeclStatement	int slen ;	1513:1:35124:35132	4944246	0	True				
ANR	4944250	IdentifierDecl	slen		4944246	0					
ANR	4944251	IdentifierDeclType	int		4944246	0					
ANR	4944252	Identifier	slen		4944246	1					
ANR	4944253	SwitchStatement	switch ( m -> type )		4944246	1					
ANR	4944254	Condition	m -> type	1515:9:35144:35150	4944246	0	True				
ANR	4944255	PtrMemberAccess	m -> type		4944246	0					
ANR	4944256	Identifier	m		4944246	0					
ANR	4944257	Identifier	type		4944246	1					
ANR	4944258	CompoundStatement		4:18:31:31	4944246	1					
ANR	4944259	Label	case FILE_BESTRING16 :	1516:1:35156:35176	4944246	0	True				
ANR	4944260	Identifier	FILE_BESTRING16		4944246	0					
ANR	4944261	Label	case FILE_LESTRING16 :	1517:1:35179:35199	4944246	1	True				
ANR	4944262	Identifier	FILE_LESTRING16		4944246	0					
ANR	4944263	Label	case FILE_STRING :	1518:1:35202:35218	4944246	2	True				
ANR	4944264	Identifier	FILE_STRING		4944246	0					
ANR	4944265	Label	case FILE_PSTRING :	1519:1:35221:35238	4944246	3	True				
ANR	4944266	Identifier	FILE_PSTRING		4944246	0					
ANR	4944267	Label	case FILE_REGEX :	1520:1:35241:35256	4944246	4	True				
ANR	4944268	Identifier	FILE_REGEX		4944246	0					
ANR	4944269	Label	case FILE_SEARCH :	1521:1:35259:35275	4944246	5	True				
ANR	4944270	Identifier	FILE_SEARCH		4944246	0					
ANR	4944271	ExpressionStatement	"* p = getstr ( ms , * p , m -> value . s , sizeof ( m -> value . s ) , & slen , action )"	1522:2:35279:35346	4944246	6	True				
ANR	4944272	AssignmentExpression	"* p = getstr ( ms , * p , m -> value . s , sizeof ( m -> value . s ) , & slen , action )"		4944246	0		=			
ANR	4944273	UnaryOperationExpression	* p		4944246	0					
ANR	4944274	UnaryOperator	*		4944246	0					
ANR	4944275	Identifier	p		4944246	1					
ANR	4944276	CallExpression	"getstr ( ms , * p , m -> value . s , sizeof ( m -> value . s ) , & slen , action )"		4944246	1					
ANR	4944277	Callee	getstr		4944246	0					
ANR	4944278	Identifier	getstr		4944246	0					
ANR	4944279	ArgumentList	ms		4944246	1					
ANR	4944280	Argument	ms		4944246	0					
ANR	4944281	Identifier	ms		4944246	0					
ANR	4944282	Argument	* p		4944246	1					
ANR	4944283	UnaryOperationExpression	* p		4944246	0					
ANR	4944284	UnaryOperator	*		4944246	0					
ANR	4944285	Identifier	p		4944246	1					
ANR	4944286	Argument	m -> value . s		4944246	2					
ANR	4944287	MemberAccess	m -> value . s		4944246	0					
ANR	4944288	PtrMemberAccess	m -> value		4944246	0					
ANR	4944289	Identifier	m		4944246	0					
ANR	4944290	Identifier	value		4944246	1					
ANR	4944291	Identifier	s		4944246	1					
ANR	4944292	Argument	sizeof ( m -> value . s )		4944246	3					
ANR	4944293	SizeofExpression	sizeof ( m -> value . s )		4944246	0					
ANR	4944294	Sizeof	sizeof		4944246	0					
ANR	4944295	MemberAccess	m -> value . s		4944246	1					
ANR	4944296	PtrMemberAccess	m -> value		4944246	0					
ANR	4944297	Identifier	m		4944246	0					
ANR	4944298	Identifier	value		4944246	1					
ANR	4944299	Identifier	s		4944246	1					
ANR	4944300	Argument	& slen		4944246	4					
ANR	4944301	UnaryOperationExpression	& slen		4944246	0					
ANR	4944302	UnaryOperator	&		4944246	0					
ANR	4944303	Identifier	slen		4944246	1					
ANR	4944304	Argument	action		4944246	5					
ANR	4944305	Identifier	action		4944246	0					
ANR	4944306	IfStatement	if ( ! * p )		4944246	7					
ANR	4944307	Condition	! * p	1523:6:35354:35356	4944246	0	True				
ANR	4944308	UnaryOperationExpression	! * p		4944246	0					
ANR	4944309	UnaryOperator	!		4944246	0					
ANR	4944310	UnaryOperationExpression	* p		4944246	1					
ANR	4944311	UnaryOperator	*		4944246	0					
ANR	4944312	Identifier	p		4944246	1					
ANR	4944313	CompoundStatement		12:11:237:237	4944246	1					
ANR	4944314	IfStatement	if ( ms -> flags & R_MAGIC_CHECK )		4944246	0					
ANR	4944315	Condition	ms -> flags & R_MAGIC_CHECK	1524:7:35368:35392	4944246	0	True				
ANR	4944316	BitAndExpression	ms -> flags & R_MAGIC_CHECK		4944246	0		&			
ANR	4944317	PtrMemberAccess	ms -> flags		4944246	0					
ANR	4944318	Identifier	ms		4944246	0					
ANR	4944319	Identifier	flags		4944246	1					
ANR	4944320	Identifier	R_MAGIC_CHECK		4944246	1					
ANR	4944321	CompoundStatement		13:34:273:273	4944246	1					
ANR	4944322	ExpressionStatement	"file_magwarn ( ms , ""cannot get string from `%s'"" , m -> value . s )"	1525:4:35401:35466	4944246	0	True				
ANR	4944323	CallExpression	"file_magwarn ( ms , ""cannot get string from `%s'"" , m -> value . s )"		4944246	0					
ANR	4944324	Callee	file_magwarn		4944246	0					
ANR	4944325	Identifier	file_magwarn		4944246	0					
ANR	4944326	ArgumentList	ms		4944246	1					
ANR	4944327	Argument	ms		4944246	0					
ANR	4944328	Identifier	ms		4944246	0					
ANR	4944329	Argument	"""cannot get string from `%s'"""		4944246	1					
ANR	4944330	PrimaryExpression	"""cannot get string from `%s'"""		4944246	0					
ANR	4944331	Argument	m -> value . s		4944246	2					
ANR	4944332	MemberAccess	m -> value . s		4944246	0					
ANR	4944333	PtrMemberAccess	m -> value		4944246	0					
ANR	4944334	Identifier	m		4944246	0					
ANR	4944335	Identifier	value		4944246	1					
ANR	4944336	Identifier	s		4944246	1					
ANR	4944337	ReturnStatement	return - 1 ;	1528:3:35476:35485	4944246	1	True				
ANR	4944338	UnaryOperationExpression	- 1		4944246	0					
ANR	4944339	UnaryOperator	-		4944246	0					
ANR	4944340	PrimaryExpression	1		4944246	1					
ANR	4944341	ExpressionStatement	m -> vallen = slen	1530:2:35493:35509	4944246	8	True				
ANR	4944342	AssignmentExpression	m -> vallen = slen		4944246	0		=			
ANR	4944343	PtrMemberAccess	m -> vallen		4944246	0					
ANR	4944344	Identifier	m		4944246	0					
ANR	4944345	Identifier	vallen		4944246	1					
ANR	4944346	Identifier	slen		4944246	1					
ANR	4944347	IfStatement	if ( m -> type == FILE_PSTRING )		4944246	9					
ANR	4944348	Condition	m -> type == FILE_PSTRING	1531:6:35517:35539	4944246	0	True				
ANR	4944349	EqualityExpression	m -> type == FILE_PSTRING		4944246	0		==			
ANR	4944350	PtrMemberAccess	m -> type		4944246	0					
ANR	4944351	Identifier	m		4944246	0					
ANR	4944352	Identifier	type		4944246	1					
ANR	4944353	Identifier	FILE_PSTRING		4944246	1					
ANR	4944354	CompoundStatement		20:31:420:420	4944246	1					
ANR	4944355	ExpressionStatement	m -> vallen ++	1532:3:35547:35558	4944246	0	True				
ANR	4944356	PostIncDecOperationExpression	m -> vallen ++		4944246	0					
ANR	4944357	PtrMemberAccess	m -> vallen		4944246	0					
ANR	4944358	Identifier	m		4944246	0					
ANR	4944359	Identifier	vallen		4944246	1					
ANR	4944360	IncDec	++		4944246	1					
ANR	4944361	ReturnStatement	return 0 ;	1534:2:35566:35574	4944246	10	True				
ANR	4944362	PrimaryExpression	0		4944246	0					
ANR	4944363	Label	case FILE_FLOAT :	1535:1:35577:35592	4944246	11	True				
ANR	4944364	Identifier	FILE_FLOAT		4944246	0					
ANR	4944365	Label	case FILE_BEFLOAT :	1536:1:35595:35612	4944246	12	True				
ANR	4944366	Identifier	FILE_BEFLOAT		4944246	0					
ANR	4944367	Label	case FILE_LEFLOAT :	1537:1:35615:35632	4944246	13	True				
ANR	4944368	Identifier	FILE_LEFLOAT		4944246	0					
ANR	4944369	IfStatement	if ( m -> reln != 'x' )		4944246	14					
ANR	4944370	Condition	m -> reln != 'x'	1538:6:35640:35653	4944246	0	True				
ANR	4944371	EqualityExpression	m -> reln != 'x'		4944246	0		!=			
ANR	4944372	PtrMemberAccess	m -> reln		4944246	0					
ANR	4944373	Identifier	m		4944246	0					
ANR	4944374	Identifier	reln		4944246	1					
ANR	4944375	PrimaryExpression	'x'		4944246	1					
ANR	4944376	CompoundStatement		28:3:539:547	4944246	1					
ANR	4944377	IdentifierDeclStatement	char * ep ;	1539:3:35661:35669	4944246	0	True				
ANR	4944378	IdentifierDecl	* ep		4944246	0					
ANR	4944379	IdentifierDeclType	char *		4944246	0					
ANR	4944380	Identifier	ep		4944246	1					
ANR	4944381	ExpressionStatement	"m -> value . f = strtof ( * p , & ep )"	1541:3:35693:35721	4944246	1	True				
ANR	4944382	AssignmentExpression	"m -> value . f = strtof ( * p , & ep )"		4944246	0		=			
ANR	4944383	MemberAccess	m -> value . f		4944246	0					
ANR	4944384	PtrMemberAccess	m -> value		4944246	0					
ANR	4944385	Identifier	m		4944246	0					
ANR	4944386	Identifier	value		4944246	1					
ANR	4944387	Identifier	f		4944246	1					
ANR	4944388	CallExpression	"strtof ( * p , & ep )"		4944246	1					
ANR	4944389	Callee	strtof		4944246	0					
ANR	4944390	Identifier	strtof		4944246	0					
ANR	4944391	ArgumentList	* p		4944246	1					
ANR	4944392	Argument	* p		4944246	0					
ANR	4944393	UnaryOperationExpression	* p		4944246	0					
ANR	4944394	UnaryOperator	*		4944246	0					
ANR	4944395	Identifier	p		4944246	1					
ANR	4944396	Argument	& ep		4944246	1					
ANR	4944397	UnaryOperationExpression	& ep		4944246	0					
ANR	4944398	UnaryOperator	&		4944246	0					
ANR	4944399	Identifier	ep		4944246	1					
ANR	4944400	ExpressionStatement	* p = ep	1545:3:35779:35786	4944246	2	True				
ANR	4944401	AssignmentExpression	* p = ep		4944246	0		=			
ANR	4944402	UnaryOperationExpression	* p		4944246	0					
ANR	4944403	UnaryOperator	*		4944246	0					
ANR	4944404	Identifier	p		4944246	1					
ANR	4944405	Identifier	ep		4944246	1					
ANR	4944406	ReturnStatement	return 0 ;	1547:2:35794:35802	4944246	15	True				
ANR	4944407	PrimaryExpression	0		4944246	0					
ANR	4944408	Label	case FILE_DOUBLE :	1548:1:35805:35821	4944246	16	True				
ANR	4944409	Identifier	FILE_DOUBLE		4944246	0					
ANR	4944410	Label	case FILE_BEDOUBLE :	1549:1:35824:35842	4944246	17	True				
ANR	4944411	Identifier	FILE_BEDOUBLE		4944246	0					
ANR	4944412	Label	case FILE_LEDOUBLE :	1550:1:35845:35863	4944246	18	True				
ANR	4944413	Identifier	FILE_LEDOUBLE		4944246	0					
ANR	4944414	IfStatement	if ( m -> reln != 'x' )		4944246	19					
ANR	4944415	Condition	m -> reln != 'x'	1551:6:35871:35884	4944246	0	True				
ANR	4944416	EqualityExpression	m -> reln != 'x'		4944246	0		!=			
ANR	4944417	PtrMemberAccess	m -> reln		4944246	0					
ANR	4944418	Identifier	m		4944246	0					
ANR	4944419	Identifier	reln		4944246	1					
ANR	4944420	PrimaryExpression	'x'		4944246	1					
ANR	4944421	CompoundStatement		41:3:770:778	4944246	1					
ANR	4944422	IdentifierDeclStatement	char * ep ;	1552:3:35892:35900	4944246	0	True				
ANR	4944423	IdentifierDecl	* ep		4944246	0					
ANR	4944424	IdentifierDeclType	char *		4944246	0					
ANR	4944425	Identifier	ep		4944246	1					
ANR	4944426	ExpressionStatement	"m -> value . d = strtod ( * p , & ep )"	1553:3:35905:35933	4944246	1	True				
ANR	4944427	AssignmentExpression	"m -> value . d = strtod ( * p , & ep )"		4944246	0		=			
ANR	4944428	MemberAccess	m -> value . d		4944246	0					
ANR	4944429	PtrMemberAccess	m -> value		4944246	0					
ANR	4944430	Identifier	m		4944246	0					
ANR	4944431	Identifier	value		4944246	1					
ANR	4944432	Identifier	d		4944246	1					
ANR	4944433	CallExpression	"strtod ( * p , & ep )"		4944246	1					
ANR	4944434	Callee	strtod		4944246	0					
ANR	4944435	Identifier	strtod		4944246	0					
ANR	4944436	ArgumentList	* p		4944246	1					
ANR	4944437	Argument	* p		4944246	0					
ANR	4944438	UnaryOperationExpression	* p		4944246	0					
ANR	4944439	UnaryOperator	*		4944246	0					
ANR	4944440	Identifier	p		4944246	1					
ANR	4944441	Argument	& ep		4944246	1					
ANR	4944442	UnaryOperationExpression	& ep		4944246	0					
ANR	4944443	UnaryOperator	&		4944246	0					
ANR	4944444	Identifier	ep		4944246	1					
ANR	4944445	ExpressionStatement	* p = ep	1554:3:35938:35945	4944246	2	True				
ANR	4944446	AssignmentExpression	* p = ep		4944246	0		=			
ANR	4944447	UnaryOperationExpression	* p		4944246	0					
ANR	4944448	UnaryOperator	*		4944246	0					
ANR	4944449	Identifier	p		4944246	1					
ANR	4944450	Identifier	ep		4944246	1					
ANR	4944451	ReturnStatement	return 0 ;	1556:2:35953:35961	4944246	20	True				
ANR	4944452	PrimaryExpression	0		4944246	0					
ANR	4944453	Label	default :	1557:1:35964:35971	4944246	21	True				
ANR	4944454	Identifier	default		4944246	0					
ANR	4944455	IfStatement	if ( m -> reln != 'x' )		4944246	22					
ANR	4944456	Condition	m -> reln != 'x'	1558:6:35979:35992	4944246	0	True				
ANR	4944457	EqualityExpression	m -> reln != 'x'		4944246	0		!=			
ANR	4944458	PtrMemberAccess	m -> reln		4944246	0					
ANR	4944459	Identifier	m		4944246	0					
ANR	4944460	Identifier	reln		4944246	1					
ANR	4944461	PrimaryExpression	'x'		4944246	1					
ANR	4944462	CompoundStatement		48:3:878:886	4944246	1					
ANR	4944463	IdentifierDeclStatement	char * ep ;	1559:3:36000:36008	4944246	0	True				
ANR	4944464	IdentifierDecl	* ep		4944246	0					
ANR	4944465	IdentifierDeclType	char *		4944246	0					
ANR	4944466	Identifier	ep		4944246	1					
ANR	4944467	ExpressionStatement	"m -> value . q = file_signextend ( ms , m , ( ut64 ) strtoull ( * p , & ep , 0 ) )"	1560:3:36013:36083	4944246	1	True				
ANR	4944468	AssignmentExpression	"m -> value . q = file_signextend ( ms , m , ( ut64 ) strtoull ( * p , & ep , 0 ) )"		4944246	0		=			
ANR	4944469	MemberAccess	m -> value . q		4944246	0					
ANR	4944470	PtrMemberAccess	m -> value		4944246	0					
ANR	4944471	Identifier	m		4944246	0					
ANR	4944472	Identifier	value		4944246	1					
ANR	4944473	Identifier	q		4944246	1					
ANR	4944474	CallExpression	"file_signextend ( ms , m , ( ut64 ) strtoull ( * p , & ep , 0 ) )"		4944246	1					
ANR	4944475	Callee	file_signextend		4944246	0					
ANR	4944476	Identifier	file_signextend		4944246	0					
ANR	4944477	ArgumentList	ms		4944246	1					
ANR	4944478	Argument	ms		4944246	0					
ANR	4944479	Identifier	ms		4944246	0					
ANR	4944480	Argument	m		4944246	1					
ANR	4944481	Identifier	m		4944246	0					
ANR	4944482	Argument	"( ut64 ) strtoull ( * p , & ep , 0 )"		4944246	2					
ANR	4944483	CastExpression	"( ut64 ) strtoull ( * p , & ep , 0 )"		4944246	0					
ANR	4944484	CastTarget	ut64		4944246	0					
ANR	4944485	CallExpression	"strtoull ( * p , & ep , 0 )"		4944246	1					
ANR	4944486	Callee	strtoull		4944246	0					
ANR	4944487	Identifier	strtoull		4944246	0					
ANR	4944488	ArgumentList	* p		4944246	1					
ANR	4944489	Argument	* p		4944246	0					
ANR	4944490	UnaryOperationExpression	* p		4944246	0					
ANR	4944491	UnaryOperator	*		4944246	0					
ANR	4944492	Identifier	p		4944246	1					
ANR	4944493	Argument	& ep		4944246	1					
ANR	4944494	UnaryOperationExpression	& ep		4944246	0					
ANR	4944495	UnaryOperator	&		4944246	0					
ANR	4944496	Identifier	ep		4944246	1					
ANR	4944497	Argument	0		4944246	2					
ANR	4944498	PrimaryExpression	0		4944246	0					
ANR	4944499	ExpressionStatement	* p = ep	1562:3:36088:36095	4944246	2	True				
ANR	4944500	AssignmentExpression	* p = ep		4944246	0		=			
ANR	4944501	UnaryOperationExpression	* p		4944246	0					
ANR	4944502	UnaryOperator	*		4944246	0					
ANR	4944503	Identifier	p		4944246	1					
ANR	4944504	Identifier	ep		4944246	1					
ANR	4944505	ExpressionStatement	eatsize ( p )	1563:3:36100:36110	4944246	3	True				
ANR	4944506	CallExpression	eatsize ( p )		4944246	0					
ANR	4944507	Callee	eatsize		4944246	0					
ANR	4944508	Identifier	eatsize		4944246	0					
ANR	4944509	ArgumentList	p		4944246	1					
ANR	4944510	Argument	p		4944246	0					
ANR	4944511	Identifier	p		4944246	0					
ANR	4944512	ReturnStatement	return 0 ;	1565:2:36118:36126	4944246	23	True				
ANR	4944513	PrimaryExpression	0		4944246	0					
ANR	4944514	ReturnType	static int		4944246	1					
ANR	4944515	Identifier	getvalue		4944246	2					
ANR	4944516	ParameterList	"RMagic * ms , struct r_magic * m , const char * * p , int action"		4944246	3					
ANR	4944517	Parameter	RMagic * ms	1512:20:35062:35071	4944246	0	True				
ANR	4944518	ParameterType	RMagic *		4944246	0					
ANR	4944519	Identifier	ms		4944246	1					
ANR	4944520	Parameter	struct r_magic * m	1512:32:35074:35090	4944246	1	True				
ANR	4944521	ParameterType	struct r_magic *		4944246	0					
ANR	4944522	Identifier	m		4944246	1					
ANR	4944523	Parameter	const char * * p	1512:51:35093:35106	4944246	2	True				
ANR	4944524	ParameterType	const char * *		4944246	0					
ANR	4944525	Identifier	p		4944246	1					
ANR	4944526	Parameter	int action	1512:67:35109:35118	4944246	3	True				
ANR	4944527	ParameterType	int		4944246	0					
ANR	4944528	Identifier	action		4944246	1					
ANR	4944529	CFGEntryNode	ENTRY		4944246		True				
ANR	4944530	CFGExitNode	EXIT		4944246		True				
ANR	4944531	Symbol	* ms		4944246						
ANR	4944532	Symbol	strtoull		4944246						
ANR	4944533	Symbol	m -> type		4944246						
ANR	4944534	Symbol	getstr		4944246						
ANR	4944535	Symbol	m -> reln		4944246						
ANR	4944536	Symbol	action		4944246						
ANR	4944537	Symbol	m -> value		4944246						
ANR	4944538	Symbol	file_signextend		4944246						
ANR	4944539	Symbol	ms		4944246						
ANR	4944540	Symbol	m -> value . s		4944246						
ANR	4944541	Symbol	FILE_PSTRING		4944246						
ANR	4944542	Symbol	m -> value . q		4944246						
ANR	4944543	Symbol	ep		4944246						
ANR	4944544	Symbol	m		4944246						
ANR	4944545	Symbol	& slen		4944246						
ANR	4944546	Symbol	strtod		4944246						
ANR	4944547	Symbol	strtof		4944246						
ANR	4944548	Symbol	p		4944246						
ANR	4944549	Symbol	& ep		4944246						
ANR	4944550	Symbol	slen		4944246						
ANR	4944551	Symbol	* m		4944246						
ANR	4944552	Symbol	m -> value . f		4944246						
ANR	4944553	Symbol	m -> value . d		4944246						
ANR	4944554	Symbol	* p		4944246						
ANR	4944555	Symbol	m -> vallen		4944246						
ANR	4944556	Symbol	ms -> flags		4944246						
ANR	4944557	Symbol	R_MAGIC_CHECK		4944246						
ANR	4944558	Function	getstr	1575:0:36352:38755							
ANR	4944559	FunctionDef	"getstr (RMagic * ms , const char * s , char * p , int plen , int * slen , int action)"		4944558	0					
ANR	4944560	CompoundStatement		1575:96:36448:38755	4944558	0					
ANR	4944561	IdentifierDeclStatement	const char * origs = s ;	1576:1:36451:36472	4944558	0	True				
ANR	4944562	IdentifierDecl	* origs = s		4944558	0					
ANR	4944563	IdentifierDeclType	const char *		4944558	0					
ANR	4944564	Identifier	origs		4944558	1					
ANR	4944565	AssignmentExpression	* origs = s		4944558	2		=			
ANR	4944566	Identifier	s		4944558	0					
ANR	4944567	Identifier	s		4944558	1					
ANR	4944568	IdentifierDeclStatement	char * origp = p ;	1577:1:36475:36490	4944558	1	True				
ANR	4944569	IdentifierDecl	* origp = p		4944558	0					
ANR	4944570	IdentifierDeclType	char *		4944558	0					
ANR	4944571	Identifier	origp		4944558	1					
ANR	4944572	AssignmentExpression	* origp = p		4944558	2		=			
ANR	4944573	Identifier	p		4944558	0					
ANR	4944574	Identifier	p		4944558	1					
ANR	4944575	IdentifierDeclStatement	char * pmax = p + plen - 1 ;	1578:1:36493:36518	4944558	2	True				
ANR	4944576	IdentifierDecl	* pmax = p + plen - 1		4944558	0					
ANR	4944577	IdentifierDeclType	char *		4944558	0					
ANR	4944578	Identifier	pmax		4944558	1					
ANR	4944579	AssignmentExpression	* pmax = p + plen - 1		4944558	2		=			
ANR	4944580	Identifier	pmax		4944558	0					
ANR	4944581	AdditiveExpression	p + plen - 1		4944558	1		+			
ANR	4944582	Identifier	p		4944558	0					
ANR	4944583	AdditiveExpression	plen - 1		4944558	1		-			
ANR	4944584	Identifier	plen		4944558	0					
ANR	4944585	PrimaryExpression	1		4944558	1					
ANR	4944586	IdentifierDeclStatement	"int c , val ;"	1579:1:36521:36531	4944558	3	True				
ANR	4944587	IdentifierDecl	c		4944558	0					
ANR	4944588	IdentifierDeclType	int		4944558	0					
ANR	4944589	Identifier	c		4944558	1					
ANR	4944590	IdentifierDecl	val		4944558	1					
ANR	4944591	IdentifierDeclType	int		4944558	0					
ANR	4944592	Identifier	val		4944558	1					
ANR	4944593	WhileStatement	while ( ( c = * s ++ ) != '\\0' )		4944558	4					
ANR	4944594	Condition	( c = * s ++ ) != '\\0'	1581:8:36542:36559	4944558	0	True				
ANR	4944595	EqualityExpression	( c = * s ++ ) != '\\0'		4944558	0		!=			
ANR	4944596	AssignmentExpression	c = * s ++		4944558	0		=			
ANR	4944597	Identifier	c		4944558	0					
ANR	4944598	UnaryOperationExpression	* s ++		4944558	1					
ANR	4944599	UnaryOperator	*		4944558	0					
ANR	4944600	PostIncDecOperationExpression	s ++		4944558	1					
ANR	4944601	Identifier	s		4944558	0					
ANR	4944602	IncDec	++		4944558	1					
ANR	4944603	PrimaryExpression	'\\0'		4944558	1					
ANR	4944604	CompoundStatement		7:28:113:113	4944558	1					
ANR	4944605	IfStatement	if ( isspace ( ( ut8 ) c ) )		4944558	0					
ANR	4944606	Condition	isspace ( ( ut8 ) c )	1582:6:36570:36585	4944558	0	True				
ANR	4944607	CallExpression	isspace ( ( ut8 ) c )		4944558	0					
ANR	4944608	Callee	isspace		4944558	0					
ANR	4944609	Identifier	isspace		4944558	0					
ANR	4944610	ArgumentList	( ut8 ) c		4944558	1					
ANR	4944611	Argument	( ut8 ) c		4944558	0					
ANR	4944612	CastExpression	( ut8 ) c		4944558	0					
ANR	4944613	CastTarget	ut8		4944558	0					
ANR	4944614	Identifier	c		4944558	1					
ANR	4944615	CompoundStatement		8:24:139:139	4944558	1					
ANR	4944616	BreakStatement	break ;	1583:3:36593:36598	4944558	0	True				
ANR	4944617	IfStatement	if ( p >= pmax )		4944558	1					
ANR	4944618	Condition	p >= pmax	1585:6:36610:36618	4944558	0	True				
ANR	4944619	RelationalExpression	p >= pmax		4944558	0		>=			
ANR	4944620	Identifier	p		4944558	0					
ANR	4944621	Identifier	pmax		4944558	1					
ANR	4944622	CompoundStatement		11:17:172:172	4944558	1					
ANR	4944623	ExpressionStatement	"file_error ( ms , 0 , ""string too long: `%s'"" , origs )"	1586:3:36626:36675	4944558	0	True				
ANR	4944624	CallExpression	"file_error ( ms , 0 , ""string too long: `%s'"" , origs )"		4944558	0					
ANR	4944625	Callee	file_error		4944558	0					
ANR	4944626	Identifier	file_error		4944558	0					
ANR	4944627	ArgumentList	ms		4944558	1					
ANR	4944628	Argument	ms		4944558	0					
ANR	4944629	Identifier	ms		4944558	0					
ANR	4944630	Argument	0		4944558	1					
ANR	4944631	PrimaryExpression	0		4944558	0					
ANR	4944632	Argument	"""string too long: `%s'"""		4944558	2					
ANR	4944633	PrimaryExpression	"""string too long: `%s'"""		4944558	0					
ANR	4944634	Argument	origs		4944558	3					
ANR	4944635	Identifier	origs		4944558	0					
ANR	4944636	ReturnStatement	return NULL ;	1587:3:36680:36691	4944558	1	True				
ANR	4944637	Identifier	NULL		4944558	0					
ANR	4944638	IfStatement	if ( c == '\\\\' )		4944558	2					
ANR	4944639	Condition	c == '\\\\'	1589:6:36703:36711	4944558	0	True				
ANR	4944640	EqualityExpression	c == '\\\\'		4944558	0		==			
ANR	4944641	Identifier	c		4944558	0					
ANR	4944642	PrimaryExpression	'\\\\'		4944558	1					
ANR	4944643	CompoundStatement		15:17:265:265	4944558	1					
ANR	4944644	SwitchStatement	switch ( ( c = * s ++ ) )		4944558	0					
ANR	4944645	Condition	c = * s ++	1590:11:36727:36736	4944558	0	True				
ANR	4944646	AssignmentExpression	c = * s ++		4944558	0		=			
ANR	4944647	Identifier	c		4944558	0					
ANR	4944648	UnaryOperationExpression	* s ++		4944558	1					
ANR	4944649	UnaryOperator	*		4944558	0					
ANR	4944650	PostIncDecOperationExpression	s ++		4944558	1					
ANR	4944651	Identifier	s		4944558	0					
ANR	4944652	IncDec	++		4944558	1					
ANR	4944653	CompoundStatement		16:23:290:290	4944558	1					
ANR	4944654	Label	case '\\0' :	1591:3:36744:36753	4944558	0	True				
ANR	4944655	IfStatement	if ( action == FILE_COMPILE )		4944558	1					
ANR	4944656	Condition	action == FILE_COMPILE	1592:8:36763:36784	4944558	0	True				
ANR	4944657	EqualityExpression	action == FILE_COMPILE		4944558	0		==			
ANR	4944658	Identifier	action		4944558	0					
ANR	4944659	Identifier	FILE_COMPILE		4944558	1					
ANR	4944660	CompoundStatement		18:32:338:338	4944558	1					
ANR	4944661	ExpressionStatement	"file_magwarn ( ms , ""incomplete escape"" )"	1593:5:36794:36832	4944558	0	True				
ANR	4944662	CallExpression	"file_magwarn ( ms , ""incomplete escape"" )"		4944558	0					
ANR	4944663	Callee	file_magwarn		4944558	0					
ANR	4944664	Identifier	file_magwarn		4944558	0					
ANR	4944665	ArgumentList	ms		4944558	1					
ANR	4944666	Argument	ms		4944558	0					
ANR	4944667	Identifier	ms		4944558	0					
ANR	4944668	Argument	"""incomplete escape"""		4944558	1					
ANR	4944669	PrimaryExpression	"""incomplete escape"""		4944558	0					
ANR	4944670	GotoStatement	goto out ;	1595:4:36844:36852	4944558	2	True				
ANR	4944671	Identifier	out		4944558	0					
ANR	4944672	Label	case '\\t' :	1596:3:36857:36866	4944558	3	True				
ANR	4944673	IfStatement	if ( action == FILE_COMPILE )		4944558	4					
ANR	4944674	Condition	action == FILE_COMPILE	1597:8:36876:36897	4944558	0	True				
ANR	4944675	EqualityExpression	action == FILE_COMPILE		4944558	0		==			
ANR	4944676	Identifier	action		4944558	0					
ANR	4944677	Identifier	FILE_COMPILE		4944558	1					
ANR	4944678	CompoundStatement		23:32:451:451	4944558	1					
ANR	4944679	ExpressionStatement	"file_magwarn ( ms , ""escaped tab found, use \\\\t instead"" )"	1598:5:36907:36970	4944558	0	True				
ANR	4944680	CallExpression	"file_magwarn ( ms , ""escaped tab found, use \\\\t instead"" )"		4944558	0					
ANR	4944681	Callee	file_magwarn		4944558	0					
ANR	4944682	Identifier	file_magwarn		4944558	0					
ANR	4944683	ArgumentList	ms		4944558	1					
ANR	4944684	Argument	ms		4944558	0					
ANR	4944685	Identifier	ms		4944558	0					
ANR	4944686	Argument	"""escaped tab found, use \\\\t instead"""		4944558	1					
ANR	4944687	PrimaryExpression	"""escaped tab found, use \\\\t instead"""		4944558	0					
ANR	4944688	ExpressionStatement	action ++	1600:5:36977:36985	4944558	1	True				
ANR	4944689	PostIncDecOperationExpression	action ++		4944558	0					
ANR	4944690	Identifier	action		4944558	0					
ANR	4944691	IncDec	++		4944558	1					
ANR	4944692	Label	default :	1603:3:37016:37023	4944558	5	True				
ANR	4944693	Identifier	default		4944558	0					
ANR	4944694	IfStatement	if ( action == FILE_COMPILE )		4944558	6					
ANR	4944695	Condition	action == FILE_COMPILE	1604:8:37033:37054	4944558	0	True				
ANR	4944696	EqualityExpression	action == FILE_COMPILE		4944558	0		==			
ANR	4944697	Identifier	action		4944558	0					
ANR	4944698	Identifier	FILE_COMPILE		4944558	1					
ANR	4944699	CompoundStatement		30:32:608:608	4944558	1					
ANR	4944700	IfStatement	if ( isprint ( ( ut8 ) c ) )		4944558	0					
ANR	4944701	Condition	isprint ( ( ut8 ) c )	1605:9:37068:37083	4944558	0	True				
ANR	4944702	CallExpression	isprint ( ( ut8 ) c )		4944558	0					
ANR	4944703	Callee	isprint		4944558	0					
ANR	4944704	Identifier	isprint		4944558	0					
ANR	4944705	ArgumentList	( ut8 ) c		4944558	1					
ANR	4944706	Argument	( ut8 ) c		4944558	0					
ANR	4944707	CastExpression	( ut8 ) c		4944558	0					
ANR	4944708	CastTarget	ut8		4944558	0					
ANR	4944709	Identifier	c		4944558	1					
ANR	4944710	CompoundStatement		31:27:637:637	4944558	1					
ANR	4944711	ExpressionStatement	"file_magwarn ( ms , ""no need to escape `%c'"" , c )"	1606:6:37094:37147	4944558	0	True				
ANR	4944712	CallExpression	"file_magwarn ( ms , ""no need to escape `%c'"" , c )"		4944558	0					
ANR	4944713	Callee	file_magwarn		4944558	0					
ANR	4944714	Identifier	file_magwarn		4944558	0					
ANR	4944715	ArgumentList	ms		4944558	1					
ANR	4944716	Argument	ms		4944558	0					
ANR	4944717	Identifier	ms		4944558	0					
ANR	4944718	Argument	"""no need to escape `%c'"""		4944558	1					
ANR	4944719	PrimaryExpression	"""no need to escape `%c'"""		4944558	0					
ANR	4944720	Argument	c		4944558	2					
ANR	4944721	Identifier	c		4944558	0					
ANR	4944722	ElseStatement	else		4944558	0					
ANR	4944723	CompoundStatement		34:12:712:712	4944558	0					
ANR	4944724	ExpressionStatement	"file_magwarn ( ms , ""unknown escape sequence: \\\\%03o"" , c )"	1609:6:37169:37231	4944558	0	True				
ANR	4944725	CallExpression	"file_magwarn ( ms , ""unknown escape sequence: \\\\%03o"" , c )"		4944558	0					
ANR	4944726	Callee	file_magwarn		4944558	0					
ANR	4944727	Identifier	file_magwarn		4944558	0					
ANR	4944728	ArgumentList	ms		4944558	1					
ANR	4944729	Argument	ms		4944558	0					
ANR	4944730	Identifier	ms		4944558	0					
ANR	4944731	Argument	"""unknown escape sequence: \\\\%03o"""		4944558	1					
ANR	4944732	PrimaryExpression	"""unknown escape sequence: \\\\%03o"""		4944558	0					
ANR	4944733	Argument	c		4944558	2					
ANR	4944734	Identifier	c		4944558	0					
ANR	4944735	Label	case ' ' :	1615:3:37319:37327	4944558	7	True				
ANR	4944736	Label	case '\\'' :	1621:3:37434:37443	4944558	8	True				
ANR	4944737	Label	"case '""' :"	1622:3:37448:37456	4944558	9	True				
ANR	4944738	Label	case '?' :	1623:3:37461:37469	4944558	10	True				
ANR	4944739	Label	case '>' :	1626:3:37500:37508	4944558	11	True				
ANR	4944740	Label	case '<' :	1627:3:37513:37521	4944558	12	True				
ANR	4944741	Label	case '&' :	1628:3:37526:37534	4944558	13	True				
ANR	4944742	Label	case '^' :	1629:3:37539:37547	4944558	14	True				
ANR	4944743	Label	case '=' :	1630:3:37552:37560	4944558	15	True				
ANR	4944744	Label	case '!' :	1631:3:37565:37573	4944558	16	True				
ANR	4944745	Label	case '\\\\' :	1633:3:37608:37617	4944558	17	True				
ANR	4944746	ExpressionStatement	* p ++ = ( char ) c	1634:4:37623:37638	4944558	18	True				
ANR	4944747	AssignmentExpression	* p ++ = ( char ) c		4944558	0		=			
ANR	4944748	UnaryOperationExpression	* p ++		4944558	0					
ANR	4944749	UnaryOperator	*		4944558	0					
ANR	4944750	PostIncDecOperationExpression	p ++		4944558	1					
ANR	4944751	Identifier	p		4944558	0					
ANR	4944752	IncDec	++		4944558	1					
ANR	4944753	CastExpression	( char ) c		4944558	1					
ANR	4944754	CastTarget	char		4944558	0					
ANR	4944755	Identifier	c		4944558	1					
ANR	4944756	BreakStatement	break ;	1635:4:37644:37649	4944558	19	True				
ANR	4944757	Label	case 'a' :	1636:3:37654:37662	4944558	20	True				
ANR	4944758	ExpressionStatement	* p ++ = '\\a'	1636:13:37664:37675	4944558	21	True				
ANR	4944759	AssignmentExpression	* p ++ = '\\a'		4944558	0		=			
ANR	4944760	UnaryOperationExpression	* p ++		4944558	0					
ANR	4944761	UnaryOperator	*		4944558	0					
ANR	4944762	PostIncDecOperationExpression	p ++		4944558	1					
ANR	4944763	Identifier	p		4944558	0					
ANR	4944764	IncDec	++		4944558	1					
ANR	4944765	PrimaryExpression	'\\a'		4944558	1					
ANR	4944766	BreakStatement	break ;	1636:26:37677:37682	4944558	22	True				
ANR	4944767	Label	case 'b' :	1637:3:37687:37695	4944558	23	True				
ANR	4944768	ExpressionStatement	* p ++ = '\\b'	1637:13:37697:37708	4944558	24	True				
ANR	4944769	AssignmentExpression	* p ++ = '\\b'		4944558	0		=			
ANR	4944770	UnaryOperationExpression	* p ++		4944558	0					
ANR	4944771	UnaryOperator	*		4944558	0					
ANR	4944772	PostIncDecOperationExpression	p ++		4944558	1					
ANR	4944773	Identifier	p		4944558	0					
ANR	4944774	IncDec	++		4944558	1					
ANR	4944775	PrimaryExpression	'\\b'		4944558	1					
ANR	4944776	BreakStatement	break ;	1637:26:37710:37715	4944558	25	True				
ANR	4944777	Label	case 'f' :	1638:3:37720:37728	4944558	26	True				
ANR	4944778	ExpressionStatement	* p ++ = '\\f'	1638:13:37730:37741	4944558	27	True				
ANR	4944779	AssignmentExpression	* p ++ = '\\f'		4944558	0		=			
ANR	4944780	UnaryOperationExpression	* p ++		4944558	0					
ANR	4944781	UnaryOperator	*		4944558	0					
ANR	4944782	PostIncDecOperationExpression	p ++		4944558	1					
ANR	4944783	Identifier	p		4944558	0					
ANR	4944784	IncDec	++		4944558	1					
ANR	4944785	PrimaryExpression	'\\f'		4944558	1					
ANR	4944786	BreakStatement	break ;	1638:26:37743:37748	4944558	28	True				
ANR	4944787	Label	case 'n' :	1639:3:37753:37761	4944558	29	True				
ANR	4944788	ExpressionStatement	* p ++ = '\\n'	1639:13:37763:37774	4944558	30	True				
ANR	4944789	AssignmentExpression	* p ++ = '\\n'		4944558	0		=			
ANR	4944790	UnaryOperationExpression	* p ++		4944558	0					
ANR	4944791	UnaryOperator	*		4944558	0					
ANR	4944792	PostIncDecOperationExpression	p ++		4944558	1					
ANR	4944793	Identifier	p		4944558	0					
ANR	4944794	IncDec	++		4944558	1					
ANR	4944795	PrimaryExpression	'\\n'		4944558	1					
ANR	4944796	BreakStatement	break ;	1639:26:37776:37781	4944558	31	True				
ANR	4944797	Label	case 'r' :	1640:3:37786:37794	4944558	32	True				
ANR	4944798	ExpressionStatement	* p ++ = '\\r'	1640:13:37796:37807	4944558	33	True				
ANR	4944799	AssignmentExpression	* p ++ = '\\r'		4944558	0		=			
ANR	4944800	UnaryOperationExpression	* p ++		4944558	0					
ANR	4944801	UnaryOperator	*		4944558	0					
ANR	4944802	PostIncDecOperationExpression	p ++		4944558	1					
ANR	4944803	Identifier	p		4944558	0					
ANR	4944804	IncDec	++		4944558	1					
ANR	4944805	PrimaryExpression	'\\r'		4944558	1					
ANR	4944806	BreakStatement	break ;	1640:26:37809:37814	4944558	34	True				
ANR	4944807	Label	case 't' :	1641:3:37819:37827	4944558	35	True				
ANR	4944808	ExpressionStatement	* p ++ = '\\t'	1641:13:37829:37840	4944558	36	True				
ANR	4944809	AssignmentExpression	* p ++ = '\\t'		4944558	0		=			
ANR	4944810	UnaryOperationExpression	* p ++		4944558	0					
ANR	4944811	UnaryOperator	*		4944558	0					
ANR	4944812	PostIncDecOperationExpression	p ++		4944558	1					
ANR	4944813	Identifier	p		4944558	0					
ANR	4944814	IncDec	++		4944558	1					
ANR	4944815	PrimaryExpression	'\\t'		4944558	1					
ANR	4944816	BreakStatement	break ;	1641:26:37842:37847	4944558	37	True				
ANR	4944817	Label	case 'v' :	1642:3:37852:37860	4944558	38	True				
ANR	4944818	ExpressionStatement	* p ++ = '\\v'	1642:13:37862:37873	4944558	39	True				
ANR	4944819	AssignmentExpression	* p ++ = '\\v'		4944558	0		=			
ANR	4944820	UnaryOperationExpression	* p ++		4944558	0					
ANR	4944821	UnaryOperator	*		4944558	0					
ANR	4944822	PostIncDecOperationExpression	p ++		4944558	1					
ANR	4944823	Identifier	p		4944558	0					
ANR	4944824	IncDec	++		4944558	1					
ANR	4944825	PrimaryExpression	'\\v'		4944558	1					
ANR	4944826	BreakStatement	break ;	1642:26:37875:37880	4944558	40	True				
ANR	4944827	Label	case '0' :	1644:3:37921:37929	4944558	41	True				
ANR	4944828	Label	case '1' :	1645:3:37934:37942	4944558	42	True				
ANR	4944829	Label	case '2' :	1646:3:37947:37955	4944558	43	True				
ANR	4944830	Label	case '3' :	1647:3:37960:37968	4944558	44	True				
ANR	4944831	Label	case '4' :	1648:3:37973:37981	4944558	45	True				
ANR	4944832	Label	case '5' :	1649:3:37986:37994	4944558	46	True				
ANR	4944833	Label	case '6' :	1650:3:37999:38007	4944558	47	True				
ANR	4944834	Label	case '7' :	1651:3:38012:38020	4944558	48	True				
ANR	4944835	ExpressionStatement	val = c - '0'	1652:4:38026:38039	4944558	49	True				
ANR	4944836	AssignmentExpression	val = c - '0'		4944558	0		=			
ANR	4944837	Identifier	val		4944558	0					
ANR	4944838	AdditiveExpression	c - '0'		4944558	1		-			
ANR	4944839	Identifier	c		4944558	0					
ANR	4944840	PrimaryExpression	'0'		4944558	1					
ANR	4944841	ExpressionStatement	c = * s ++	1653:4:38045:38053	4944558	50	True				
ANR	4944842	AssignmentExpression	c = * s ++		4944558	0		=			
ANR	4944843	Identifier	c		4944558	0					
ANR	4944844	UnaryOperationExpression	* s ++		4944558	1					
ANR	4944845	UnaryOperator	*		4944558	0					
ANR	4944846	PostIncDecOperationExpression	s ++		4944558	1					
ANR	4944847	Identifier	s		4944558	0					
ANR	4944848	IncDec	++		4944558	1					
ANR	4944849	IfStatement	if ( c >= '0' && c <= '7' )		4944558	51					
ANR	4944850	Condition	c >= '0' && c <= '7'	1654:8:38080:38099	4944558	0	True				
ANR	4944851	AndExpression	c >= '0' && c <= '7'		4944558	0		&&			
ANR	4944852	RelationalExpression	c >= '0'		4944558	0		>=			
ANR	4944853	Identifier	c		4944558	0					
ANR	4944854	PrimaryExpression	'0'		4944558	1					
ANR	4944855	RelationalExpression	c <= '7'		4944558	1		<=			
ANR	4944856	Identifier	c		4944558	0					
ANR	4944857	PrimaryExpression	'7'		4944558	1					
ANR	4944858	CompoundStatement		80:30:1653:1653	4944558	1					
ANR	4944859	ExpressionStatement	val = ( val << 3 ) | ( c - '0' )	1655:5:38109:38137	4944558	0	True				
ANR	4944860	AssignmentExpression	val = ( val << 3 ) | ( c - '0' )		4944558	0		=			
ANR	4944861	Identifier	val		4944558	0					
ANR	4944862	InclusiveOrExpression	( val << 3 ) | ( c - '0' )		4944558	1		|			
ANR	4944863	ShiftExpression	val << 3		4944558	0		<<			
ANR	4944864	Identifier	val		4944558	0					
ANR	4944865	PrimaryExpression	3		4944558	1					
ANR	4944866	AdditiveExpression	c - '0'		4944558	1		-			
ANR	4944867	Identifier	c		4944558	0					
ANR	4944868	PrimaryExpression	'0'		4944558	1					
ANR	4944869	ExpressionStatement	c = * s ++	1656:5:38144:38152	4944558	1	True				
ANR	4944870	AssignmentExpression	c = * s ++		4944558	0		=			
ANR	4944871	Identifier	c		4944558	0					
ANR	4944872	UnaryOperationExpression	* s ++		4944558	1					
ANR	4944873	UnaryOperator	*		4944558	0					
ANR	4944874	PostIncDecOperationExpression	s ++		4944558	1					
ANR	4944875	Identifier	s		4944558	0					
ANR	4944876	IncDec	++		4944558	1					
ANR	4944877	IfStatement	if ( c >= '0' && c <= '7' )		4944558	2					
ANR	4944878	Condition	c >= '0' && c <= '7'	1657:9:38180:38199	4944558	0	True				
ANR	4944879	AndExpression	c >= '0' && c <= '7'		4944558	0		&&			
ANR	4944880	RelationalExpression	c >= '0'		4944558	0		>=			
ANR	4944881	Identifier	c		4944558	0					
ANR	4944882	PrimaryExpression	'0'		4944558	1					
ANR	4944883	RelationalExpression	c <= '7'		4944558	1		<=			
ANR	4944884	Identifier	c		4944558	0					
ANR	4944885	PrimaryExpression	'7'		4944558	1					
ANR	4944886	CompoundStatement		83:31:1753:1753	4944558	1					
ANR	4944887	ExpressionStatement	val = ( val << 3 ) | ( c - '0' )	1658:6:38210:38236	4944558	0	True				
ANR	4944888	AssignmentExpression	val = ( val << 3 ) | ( c - '0' )		4944558	0		=			
ANR	4944889	Identifier	val		4944558	0					
ANR	4944890	InclusiveOrExpression	( val << 3 ) | ( c - '0' )		4944558	1		|			
ANR	4944891	ShiftExpression	val << 3		4944558	0		<<			
ANR	4944892	Identifier	val		4944558	0					
ANR	4944893	PrimaryExpression	3		4944558	1					
ANR	4944894	AdditiveExpression	c - '0'		4944558	1		-			
ANR	4944895	Identifier	c		4944558	0					
ANR	4944896	PrimaryExpression	'0'		4944558	1					
ANR	4944897	ElseStatement	else		4944558	0					
ANR	4944898	CompoundStatement		85:12:1801:1801	4944558	0					
ANR	4944899	ExpressionStatement	-- s	1660:6:38258:38261	4944558	0	True				
ANR	4944900	UnaryExpression	-- s		4944558	0					
ANR	4944901	IncDec	--		4944558	0					
ANR	4944902	Identifier	s		4944558	1					
ANR	4944903	ElseStatement	else		4944558	0					
ANR	4944904	CompoundStatement		88:11:1832:1832	4944558	0					
ANR	4944905	ExpressionStatement	-- s	1663:5:38288:38291	4944558	0	True				
ANR	4944906	UnaryExpression	-- s		4944558	0					
ANR	4944907	IncDec	--		4944558	0					
ANR	4944908	Identifier	s		4944558	1					
ANR	4944909	ExpressionStatement	* p ++ = ( char ) val	1665:4:38303:38319	4944558	52	True				
ANR	4944910	AssignmentExpression	* p ++ = ( char ) val		4944558	0		=			
ANR	4944911	UnaryOperationExpression	* p ++		4944558	0					
ANR	4944912	UnaryOperator	*		4944558	0					
ANR	4944913	PostIncDecOperationExpression	p ++		4944558	1					
ANR	4944914	Identifier	p		4944558	0					
ANR	4944915	IncDec	++		4944558	1					
ANR	4944916	CastExpression	( char ) val		4944558	1					
ANR	4944917	CastTarget	char		4944558	0					
ANR	4944918	Identifier	val		4944558	1					
ANR	4944919	BreakStatement	break ;	1666:4:38325:38330	4944558	53	True				
ANR	4944920	Label	case 'x' :	1669:3:38371:38379	4944558	54	True				
ANR	4944921	ExpressionStatement	val = 'x'	1670:4:38385:38394	4944558	55	True				
ANR	4944922	AssignmentExpression	val = 'x'		4944558	0		=			
ANR	4944923	Identifier	val		4944558	0					
ANR	4944924	PrimaryExpression	'x'		4944558	1					
ANR	4944925	ExpressionStatement	c = hextoint ( * s ++ )	1671:4:38427:38445	4944558	56	True				
ANR	4944926	AssignmentExpression	c = hextoint ( * s ++ )		4944558	0		=			
ANR	4944927	Identifier	c		4944558	0					
ANR	4944928	CallExpression	hextoint ( * s ++ )		4944558	1					
ANR	4944929	Callee	hextoint		4944558	0					
ANR	4944930	Identifier	hextoint		4944558	0					
ANR	4944931	ArgumentList	* s ++		4944558	1					
ANR	4944932	Argument	* s ++		4944558	0					
ANR	4944933	UnaryOperationExpression	* s ++		4944558	0					
ANR	4944934	UnaryOperator	*		4944558	0					
ANR	4944935	PostIncDecOperationExpression	s ++		4944558	1					
ANR	4944936	Identifier	s		4944558	0					
ANR	4944937	IncDec	++		4944558	1					
ANR	4944938	IfStatement	if ( c >= 0 )		4944558	57					
ANR	4944939	Condition	c >= 0	1672:8:38475:38480	4944558	0	True				
ANR	4944940	RelationalExpression	c >= 0		4944558	0		>=			
ANR	4944941	Identifier	c		4944558	0					
ANR	4944942	PrimaryExpression	0		4944558	1					
ANR	4944943	CompoundStatement		98:16:2034:2034	4944558	1					
ANR	4944944	ExpressionStatement	val = c	1673:5:38490:38497	4944558	0	True				
ANR	4944945	AssignmentExpression	val = c		4944558	0		=			
ANR	4944946	Identifier	val		4944558	0					
ANR	4944947	Identifier	c		4944558	1					
ANR	4944948	ExpressionStatement	c = hextoint ( * s ++ )	1674:5:38504:38522	4944558	1	True				
ANR	4944949	AssignmentExpression	c = hextoint ( * s ++ )		4944558	0		=			
ANR	4944950	Identifier	c		4944558	0					
ANR	4944951	CallExpression	hextoint ( * s ++ )		4944558	1					
ANR	4944952	Callee	hextoint		4944558	0					
ANR	4944953	Identifier	hextoint		4944558	0					
ANR	4944954	ArgumentList	* s ++		4944558	1					
ANR	4944955	Argument	* s ++		4944558	0					
ANR	4944956	UnaryOperationExpression	* s ++		4944558	0					
ANR	4944957	UnaryOperator	*		4944558	0					
ANR	4944958	PostIncDecOperationExpression	s ++		4944558	1					
ANR	4944959	Identifier	s		4944558	0					
ANR	4944960	IncDec	++		4944558	1					
ANR	4944961	IfStatement	if ( c >= 0 )		4944558	2					
ANR	4944962	Condition	c >= 0	1675:9:38533:38538	4944558	0	True				
ANR	4944963	RelationalExpression	c >= 0		4944558	0		>=			
ANR	4944964	Identifier	c		4944558	0					
ANR	4944965	PrimaryExpression	0		4944558	1					
ANR	4944966	CompoundStatement		101:17:2092:2092	4944558	1					
ANR	4944967	ExpressionStatement	val = ( val << 4 ) + c	1676:6:38549:38569	4944558	0	True				
ANR	4944968	AssignmentExpression	val = ( val << 4 ) + c		4944558	0		=			
ANR	4944969	Identifier	val		4944558	0					
ANR	4944970	AdditiveExpression	( val << 4 ) + c		4944558	1		+			
ANR	4944971	ShiftExpression	val << 4		4944558	0		<<			
ANR	4944972	Identifier	val		4944558	0					
ANR	4944973	PrimaryExpression	4		4944558	1					
ANR	4944974	Identifier	c		4944558	1					
ANR	4944975	ElseStatement	else		4944558	0					
ANR	4944976	CompoundStatement		103:12:2134:2134	4944558	0					
ANR	4944977	ExpressionStatement	-- s	1678:6:38591:38594	4944558	0	True				
ANR	4944978	UnaryExpression	-- s		4944558	0					
ANR	4944979	IncDec	--		4944558	0					
ANR	4944980	Identifier	s		4944558	1					
ANR	4944981	ElseStatement	else		4944558	0					
ANR	4944982	CompoundStatement		106:11:2165:2165	4944558	0					
ANR	4944983	ExpressionStatement	-- s	1681:5:38621:38624	4944558	0	True				
ANR	4944984	UnaryExpression	-- s		4944558	0					
ANR	4944985	IncDec	--		4944558	0					
ANR	4944986	Identifier	s		4944558	1					
ANR	4944987	ExpressionStatement	* p ++ = ( char ) val	1683:4:38636:38652	4944558	58	True				
ANR	4944988	AssignmentExpression	* p ++ = ( char ) val		4944558	0		=			
ANR	4944989	UnaryOperationExpression	* p ++		4944558	0					
ANR	4944990	UnaryOperator	*		4944558	0					
ANR	4944991	PostIncDecOperationExpression	p ++		4944558	1					
ANR	4944992	Identifier	p		4944558	0					
ANR	4944993	IncDec	++		4944558	1					
ANR	4944994	CastExpression	( char ) val		4944558	1					
ANR	4944995	CastTarget	char		4944558	0					
ANR	4944996	Identifier	val		4944558	1					
ANR	4944997	BreakStatement	break ;	1684:4:38658:38663	4944558	59	True				
ANR	4944998	ElseStatement	else		4944558	0					
ANR	4944999	CompoundStatement		112:9:2230:2230	4944558	0					
ANR	4945000	ExpressionStatement	* p ++ = ( char ) c	1687:3:38684:38698	4944558	0	True				
ANR	4945001	AssignmentExpression	* p ++ = ( char ) c		4944558	0		=			
ANR	4945002	UnaryOperationExpression	* p ++		4944558	0					
ANR	4945003	UnaryOperator	*		4944558	0					
ANR	4945004	PostIncDecOperationExpression	p ++		4944558	1					
ANR	4945005	Identifier	p		4944558	0					
ANR	4945006	IncDec	++		4944558	1					
ANR	4945007	CastExpression	( char ) c		4944558	1					
ANR	4945008	CastTarget	char		4944558	0					
ANR	4945009	Identifier	c		4944558	1					
ANR	4945010	Label	out :	1690:0:38707:38710	4944558	5	True				
ANR	4945011	Identifier	out		4944558	0					
ANR	4945012	ExpressionStatement	* p = '\\0'	1691:1:38713:38722	4944558	6	True				
ANR	4945013	AssignmentExpression	* p = '\\0'		4944558	0		=			
ANR	4945014	UnaryOperationExpression	* p		4944558	0					
ANR	4945015	UnaryOperator	*		4944558	0					
ANR	4945016	Identifier	p		4944558	1					
ANR	4945017	PrimaryExpression	'\\0'		4944558	1					
ANR	4945018	ExpressionStatement	* slen = p - origp	1692:1:38725:38742	4944558	7	True				
ANR	4945019	AssignmentExpression	* slen = p - origp		4944558	0		=			
ANR	4945020	UnaryOperationExpression	* slen		4944558	0					
ANR	4945021	UnaryOperator	*		4944558	0					
ANR	4945022	Identifier	slen		4944558	1					
ANR	4945023	AdditiveExpression	p - origp		4944558	1		-			
ANR	4945024	Identifier	p		4944558	0					
ANR	4945025	Identifier	origp		4944558	1					
ANR	4945026	ReturnStatement	return s ;	1693:1:38745:38753	4944558	8	True				
ANR	4945027	Identifier	s		4944558	0					
ANR	4945028	ReturnType	static const char *		4944558	1					
ANR	4945029	Identifier	getstr		4944558	2					
ANR	4945030	ParameterList	"RMagic * ms , const char * s , char * p , int plen , int * slen , int action"		4944558	3					
ANR	4945031	Parameter	RMagic * ms	1575:27:36379:36388	4944558	0	True				
ANR	4945032	ParameterType	RMagic *		4944558	0					
ANR	4945033	Identifier	ms		4944558	1					
ANR	4945034	Parameter	const char * s	1575:39:36391:36403	4944558	1	True				
ANR	4945035	ParameterType	const char *		4944558	0					
ANR	4945036	Identifier	s		4944558	1					
ANR	4945037	Parameter	char * p	1575:54:36406:36412	4944558	2	True				
ANR	4945038	ParameterType	char *		4944558	0					
ANR	4945039	Identifier	p		4944558	1					
ANR	4945040	Parameter	int plen	1575:63:36415:36422	4944558	3	True				
ANR	4945041	ParameterType	int		4944558	0					
ANR	4945042	Identifier	plen		4944558	1					
ANR	4945043	Parameter	int * slen	1575:73:36425:36433	4944558	4	True				
ANR	4945044	ParameterType	int *		4944558	0					
ANR	4945045	Identifier	slen		4944558	1					
ANR	4945046	Parameter	int action	1575:84:36436:36445	4944558	5	True				
ANR	4945047	ParameterType	int		4944558	0					
ANR	4945048	Identifier	action		4944558	1					
ANR	4945049	CFGEntryNode	ENTRY		4944558		True				
ANR	4945050	CFGExitNode	EXIT		4944558		True				
ANR	4945051	Symbol	pmax		4944558						
ANR	4945052	Symbol	val		4944558						
ANR	4945053	Symbol	* s ++		4944558						
ANR	4945054	Symbol	origs		4944558						
ANR	4945055	Symbol	c		4944558						
ANR	4945056	Symbol	NULL		4944558						
ANR	4945057	Symbol	ms		4944558						
ANR	4945058	Symbol	* p ++		4944558						
ANR	4945059	Symbol	isspace		4944558						
ANR	4945060	Symbol	isprint		4944558						
ANR	4945061	Symbol	p		4944558						
ANR	4945062	Symbol	plen		4944558						
ANR	4945063	Symbol	hextoint		4944558						
ANR	4945064	Symbol	s		4944558						
ANR	4945065	Symbol	slen		4944558						
ANR	4945066	Symbol	action		4944558						
ANR	4945067	Symbol	* p		4944558						
ANR	4945068	Symbol	FILE_COMPILE		4944558						
ANR	4945069	Symbol	* slen		4944558						
ANR	4945070	Symbol	origp		4944558						
ANR	4945071	Function	hextoint	1698:0:38811:39058							
ANR	4945072	FunctionDef	hextoint (int c)		4945071	0					
ANR	4945073	CompoundStatement		1698:27:38838:39058	4945071	0					
ANR	4945074	IfStatement	if ( ! isascii ( ( ut8 ) c ) )		4945071	0					
ANR	4945075	Condition	! isascii ( ( ut8 ) c )	1699:5:38845:38861	4945071	0	True				
ANR	4945076	UnaryOperationExpression	! isascii ( ( ut8 ) c )		4945071	0					
ANR	4945077	UnaryOperator	!		4945071	0					
ANR	4945078	CallExpression	isascii ( ( ut8 ) c )		4945071	1					
ANR	4945079	Callee	isascii		4945071	0					
ANR	4945080	Identifier	isascii		4945071	0					
ANR	4945081	ArgumentList	( ut8 ) c		4945071	1					
ANR	4945082	Argument	( ut8 ) c		4945071	0					
ANR	4945083	CastExpression	( ut8 ) c		4945071	0					
ANR	4945084	CastTarget	ut8		4945071	0					
ANR	4945085	Identifier	c		4945071	1					
ANR	4945086	CompoundStatement		2:24:25:25	4945071	1					
ANR	4945087	ReturnStatement	return - 1 ;	1700:2:38868:38877	4945071	0	True				
ANR	4945088	UnaryOperationExpression	- 1		4945071	0					
ANR	4945089	UnaryOperator	-		4945071	0					
ANR	4945090	PrimaryExpression	1		4945071	1					
ANR	4945091	IfStatement	if ( isdigit ( ( ut8 ) c ) )		4945071	1					
ANR	4945092	Condition	isdigit ( ( ut8 ) c )	1702:5:38887:38902	4945071	0	True				
ANR	4945093	CallExpression	isdigit ( ( ut8 ) c )		4945071	0					
ANR	4945094	Callee	isdigit		4945071	0					
ANR	4945095	Identifier	isdigit		4945071	0					
ANR	4945096	ArgumentList	( ut8 ) c		4945071	1					
ANR	4945097	Argument	( ut8 ) c		4945071	0					
ANR	4945098	CastExpression	( ut8 ) c		4945071	0					
ANR	4945099	CastTarget	ut8		4945071	0					
ANR	4945100	Identifier	c		4945071	1					
ANR	4945101	CompoundStatement		5:23:66:66	4945071	1					
ANR	4945102	ReturnStatement	return c - '0' ;	1703:2:38909:38923	4945071	0	True				
ANR	4945103	AdditiveExpression	c - '0'		4945071	0		-			
ANR	4945104	Identifier	c		4945071	0					
ANR	4945105	PrimaryExpression	'0'		4945071	1					
ANR	4945106	IfStatement	if ( ( c >= 'a' ) && ( c <= 'f' ) )		4945071	2					
ANR	4945107	Condition	( c >= 'a' ) && ( c <= 'f' )	1705:5:38933:38956	4945071	0	True				
ANR	4945108	AndExpression	( c >= 'a' ) && ( c <= 'f' )		4945071	0		&&			
ANR	4945109	RelationalExpression	c >= 'a'		4945071	0		>=			
ANR	4945110	Identifier	c		4945071	0					
ANR	4945111	PrimaryExpression	'a'		4945071	1					
ANR	4945112	RelationalExpression	c <= 'f'		4945071	1		<=			
ANR	4945113	Identifier	c		4945071	0					
ANR	4945114	PrimaryExpression	'f'		4945071	1					
ANR	4945115	CompoundStatement		8:31:120:120	4945071	1					
ANR	4945116	ReturnStatement	return c + 10 - 'a' ;	1706:2:38963:38982	4945071	0	True				
ANR	4945117	AdditiveExpression	c + 10 - 'a'		4945071	0		+			
ANR	4945118	Identifier	c		4945071	0					
ANR	4945119	AdditiveExpression	10 - 'a'		4945071	1		-			
ANR	4945120	PrimaryExpression	10		4945071	0					
ANR	4945121	PrimaryExpression	'a'		4945071	1					
ANR	4945122	IfStatement	if ( ( c >= 'A' ) && ( c <= 'F' ) )		4945071	3					
ANR	4945123	Condition	( c >= 'A' ) && ( c <= 'F' )	1708:5:38992:39015	4945071	0	True				
ANR	4945124	AndExpression	( c >= 'A' ) && ( c <= 'F' )		4945071	0		&&			
ANR	4945125	RelationalExpression	c >= 'A'		4945071	0		>=			
ANR	4945126	Identifier	c		4945071	0					
ANR	4945127	PrimaryExpression	'A'		4945071	1					
ANR	4945128	RelationalExpression	c <= 'F'		4945071	1		<=			
ANR	4945129	Identifier	c		4945071	0					
ANR	4945130	PrimaryExpression	'F'		4945071	1					
ANR	4945131	CompoundStatement		11:31:179:179	4945071	1					
ANR	4945132	ReturnStatement	return c + 10 - 'A' ;	1709:2:39022:39041	4945071	0	True				
ANR	4945133	AdditiveExpression	c + 10 - 'A'		4945071	0		+			
ANR	4945134	Identifier	c		4945071	0					
ANR	4945135	AdditiveExpression	10 - 'A'		4945071	1		-			
ANR	4945136	PrimaryExpression	10		4945071	0					
ANR	4945137	PrimaryExpression	'A'		4945071	1					
ANR	4945138	ReturnStatement	return - 1 ;	1711:1:39047:39056	4945071	4	True				
ANR	4945139	UnaryOperationExpression	- 1		4945071	0					
ANR	4945140	UnaryOperator	-		4945071	0					
ANR	4945141	PrimaryExpression	1		4945071	1					
ANR	4945142	ReturnType	static int		4945071	1					
ANR	4945143	Identifier	hextoint		4945071	2					
ANR	4945144	ParameterList	int c		4945071	3					
ANR	4945145	Parameter	int c	1698:20:38831:38835	4945071	0	True				
ANR	4945146	ParameterType	int		4945071	0					
ANR	4945147	Identifier	c		4945071	1					
ANR	4945148	CFGEntryNode	ENTRY		4945071		True				
ANR	4945149	CFGExitNode	EXIT		4945071		True				
ANR	4945150	Symbol	c		4945071						
ANR	4945151	Symbol	isdigit		4945071						
ANR	4945152	Symbol	isascii		4945071						
ANR	4945153	Function	file_showstr	1718:0:39119:39764							
ANR	4945154	FunctionDef	"file_showstr (FILE * fp , const char * s , size_t len)"		4945153	0					
ANR	4945155	CompoundStatement		1718:55:39174:39764	4945153	0					
ANR	4945156	ForStatement	for ( ; ; )		4945153	0					
ANR	4945157	CompoundStatement		3:2:15:28	4945153	0					
ANR	4945158	IdentifierDeclStatement	char c = * s ++ ;	1720:2:39190:39203	4945153	0	True				
ANR	4945159	IdentifierDecl	c = * s ++		4945153	0					
ANR	4945160	IdentifierDeclType	char		4945153	0					
ANR	4945161	Identifier	c		4945153	1					
ANR	4945162	AssignmentExpression	c = * s ++		4945153	2		=			
ANR	4945163	Identifier	c		4945153	0					
ANR	4945164	UnaryOperationExpression	* s ++		4945153	1					
ANR	4945165	UnaryOperator	*		4945153	0					
ANR	4945166	PostIncDecOperationExpression	s ++		4945153	1					
ANR	4945167	Identifier	s		4945153	0					
ANR	4945168	IncDec	++		4945153	1					
ANR	4945169	IfStatement	if ( len == ~0U )		4945153	1					
ANR	4945170	Condition	len == ~0U	1721:6:39211:39220	4945153	0	True				
ANR	4945171	EqualityExpression	len == ~0U		4945153	0		==			
ANR	4945172	Identifier	len		4945153	0					
ANR	4945173	Identifier	~0U		4945153	1					
ANR	4945174	CompoundStatement		4:18:48:48	4945153	1					
ANR	4945175	IfStatement	if ( c == '\\0' )		4945153	0					
ANR	4945176	Condition	c == '\\0'	1722:7:39232:39240	4945153	0	True				
ANR	4945177	EqualityExpression	c == '\\0'		4945153	0		==			
ANR	4945178	Identifier	c		4945153	0					
ANR	4945179	PrimaryExpression	'\\0'		4945153	1					
ANR	4945180	CompoundStatement		5:18:68:68	4945153	1					
ANR	4945181	BreakStatement	break ;	1723:4:39249:39254	4945153	0	True				
ANR	4945182	ElseStatement	else		4945153	0					
ANR	4945183	CompoundStatement		8:9:95:95	4945153	0					
ANR	4945184	IfStatement	if ( len -- == 0 )		4945153	0					
ANR	4945185	Condition	len -- == 0	1726:7:39279:39288	4945153	0	True				
ANR	4945186	EqualityExpression	len -- == 0		4945153	0		==			
ANR	4945187	PostIncDecOperationExpression	len --		4945153	0					
ANR	4945188	Identifier	len		4945153	0					
ANR	4945189	IncDec	--		4945153	1					
ANR	4945190	PrimaryExpression	0		4945153	1					
ANR	4945191	CompoundStatement		9:19:116:116	4945153	1					
ANR	4945192	BreakStatement	break ;	1727:4:39297:39302	4945153	0	True				
ANR	4945193	IfStatement	if ( c >= 040 && c <= 0176 )		4945153	2					
ANR	4945194	Condition	c >= 040 && c <= 0176	1730:6:39319:39339	4945153	0	True				
ANR	4945195	AndExpression	c >= 040 && c <= 0176		4945153	0		&&			
ANR	4945196	RelationalExpression	c >= 040		4945153	0		>=			
ANR	4945197	Identifier	c		4945153	0					
ANR	4945198	PrimaryExpression	040		4945153	1					
ANR	4945199	RelationalExpression	c <= 0176		4945153	1		<=			
ANR	4945200	Identifier	c		4945153	0					
ANR	4945201	PrimaryExpression	0176		4945153	1					
ANR	4945202	CompoundStatement		13:29:167:167	4945153	1					
ANR	4945203	ExpressionStatement	"fputc ( c , fp )"	1731:3:39378:39391	4945153	0	True				
ANR	4945204	CallExpression	"fputc ( c , fp )"		4945153	0					
ANR	4945205	Callee	fputc		4945153	0					
ANR	4945206	Identifier	fputc		4945153	0					
ANR	4945207	ArgumentList	c		4945153	1					
ANR	4945208	Argument	c		4945153	0					
ANR	4945209	Identifier	c		4945153	0					
ANR	4945210	Argument	fp		4945153	1					
ANR	4945211	Identifier	fp		4945153	0					
ANR	4945212	ElseStatement	else		4945153	0					
ANR	4945213	CompoundStatement		15:9:227:227	4945153	0					
ANR	4945214	ExpressionStatement	"fputc ( '\\\\' , fp )"	1733:3:39407:39423	4945153	0	True				
ANR	4945215	CallExpression	"fputc ( '\\\\' , fp )"		4945153	0					
ANR	4945216	Callee	fputc		4945153	0					
ANR	4945217	Identifier	fputc		4945153	0					
ANR	4945218	ArgumentList	'\\\\'		4945153	1					
ANR	4945219	Argument	'\\\\'		4945153	0					
ANR	4945220	PrimaryExpression	'\\\\'		4945153	0					
ANR	4945221	Argument	fp		4945153	1					
ANR	4945222	Identifier	fp		4945153	0					
ANR	4945223	SwitchStatement	switch ( c )		4945153	1					
ANR	4945224	Condition	c	1734:11:39436:39436	4945153	0	True				
ANR	4945225	Identifier	c		4945153	0					
ANR	4945226	CompoundStatement		17:14:264:264	4945153	1					
ANR	4945227	Label	case '\\a' :	1735:3:39444:39453	4945153	0	True				
ANR	4945228	ExpressionStatement	"fputc ( 'a' , fp )"	1735:14:39455:39469	4945153	1	True				
ANR	4945229	CallExpression	"fputc ( 'a' , fp )"		4945153	0					
ANR	4945230	Callee	fputc		4945153	0					
ANR	4945231	Identifier	fputc		4945153	0					
ANR	4945232	ArgumentList	'a'		4945153	1					
ANR	4945233	Argument	'a'		4945153	0					
ANR	4945234	PrimaryExpression	'a'		4945153	0					
ANR	4945235	Argument	fp		4945153	1					
ANR	4945236	Identifier	fp		4945153	0					
ANR	4945237	BreakStatement	break ;	1735:30:39471:39476	4945153	2	True				
ANR	4945238	Label	case '\\b' :	1736:3:39481:39490	4945153	3	True				
ANR	4945239	ExpressionStatement	"fputc ( 'b' , fp )"	1736:14:39492:39506	4945153	4	True				
ANR	4945240	CallExpression	"fputc ( 'b' , fp )"		4945153	0					
ANR	4945241	Callee	fputc		4945153	0					
ANR	4945242	Identifier	fputc		4945153	0					
ANR	4945243	ArgumentList	'b'		4945153	1					
ANR	4945244	Argument	'b'		4945153	0					
ANR	4945245	PrimaryExpression	'b'		4945153	0					
ANR	4945246	Argument	fp		4945153	1					
ANR	4945247	Identifier	fp		4945153	0					
ANR	4945248	BreakStatement	break ;	1736:30:39508:39513	4945153	5	True				
ANR	4945249	Label	case '\\f' :	1737:3:39518:39527	4945153	6	True				
ANR	4945250	ExpressionStatement	"fputc ( 'f' , fp )"	1737:14:39529:39543	4945153	7	True				
ANR	4945251	CallExpression	"fputc ( 'f' , fp )"		4945153	0					
ANR	4945252	Callee	fputc		4945153	0					
ANR	4945253	Identifier	fputc		4945153	0					
ANR	4945254	ArgumentList	'f'		4945153	1					
ANR	4945255	Argument	'f'		4945153	0					
ANR	4945256	PrimaryExpression	'f'		4945153	0					
ANR	4945257	Argument	fp		4945153	1					
ANR	4945258	Identifier	fp		4945153	0					
ANR	4945259	BreakStatement	break ;	1737:30:39545:39550	4945153	8	True				
ANR	4945260	Label	case '\\n' :	1738:3:39555:39564	4945153	9	True				
ANR	4945261	ExpressionStatement	"fputc ( 'n' , fp )"	1738:14:39566:39580	4945153	10	True				
ANR	4945262	CallExpression	"fputc ( 'n' , fp )"		4945153	0					
ANR	4945263	Callee	fputc		4945153	0					
ANR	4945264	Identifier	fputc		4945153	0					
ANR	4945265	ArgumentList	'n'		4945153	1					
ANR	4945266	Argument	'n'		4945153	0					
ANR	4945267	PrimaryExpression	'n'		4945153	0					
ANR	4945268	Argument	fp		4945153	1					
ANR	4945269	Identifier	fp		4945153	0					
ANR	4945270	BreakStatement	break ;	1738:30:39582:39587	4945153	11	True				
ANR	4945271	Label	case '\\r' :	1739:3:39592:39601	4945153	12	True				
ANR	4945272	ExpressionStatement	"fputc ( 'r' , fp )"	1739:14:39603:39617	4945153	13	True				
ANR	4945273	CallExpression	"fputc ( 'r' , fp )"		4945153	0					
ANR	4945274	Callee	fputc		4945153	0					
ANR	4945275	Identifier	fputc		4945153	0					
ANR	4945276	ArgumentList	'r'		4945153	1					
ANR	4945277	Argument	'r'		4945153	0					
ANR	4945278	PrimaryExpression	'r'		4945153	0					
ANR	4945279	Argument	fp		4945153	1					
ANR	4945280	Identifier	fp		4945153	0					
ANR	4945281	BreakStatement	break ;	1739:30:39619:39624	4945153	14	True				
ANR	4945282	Label	case '\\t' :	1740:3:39629:39638	4945153	15	True				
ANR	4945283	ExpressionStatement	"fputc ( 't' , fp )"	1740:14:39640:39654	4945153	16	True				
ANR	4945284	CallExpression	"fputc ( 't' , fp )"		4945153	0					
ANR	4945285	Callee	fputc		4945153	0					
ANR	4945286	Identifier	fputc		4945153	0					
ANR	4945287	ArgumentList	't'		4945153	1					
ANR	4945288	Argument	't'		4945153	0					
ANR	4945289	PrimaryExpression	't'		4945153	0					
ANR	4945290	Argument	fp		4945153	1					
ANR	4945291	Identifier	fp		4945153	0					
ANR	4945292	BreakStatement	break ;	1740:30:39656:39661	4945153	17	True				
ANR	4945293	Label	case '\\v' :	1741:3:39666:39675	4945153	18	True				
ANR	4945294	ExpressionStatement	"fputc ( 'v' , fp )"	1741:14:39677:39691	4945153	19	True				
ANR	4945295	CallExpression	"fputc ( 'v' , fp )"		4945153	0					
ANR	4945296	Callee	fputc		4945153	0					
ANR	4945297	Identifier	fputc		4945153	0					
ANR	4945298	ArgumentList	'v'		4945153	1					
ANR	4945299	Argument	'v'		4945153	0					
ANR	4945300	PrimaryExpression	'v'		4945153	0					
ANR	4945301	Argument	fp		4945153	1					
ANR	4945302	Identifier	fp		4945153	0					
ANR	4945303	BreakStatement	break ;	1741:30:39693:39698	4945153	20	True				
ANR	4945304	Label	default :	1742:3:39703:39710	4945153	21	True				
ANR	4945305	Identifier	default		4945153	0					
ANR	4945306	ExpressionStatement	"fprintf ( fp , ""%.3o"" , c & 0377 )"	1742:14:39714:39743	4945153	22	True				
ANR	4945307	CallExpression	"fprintf ( fp , ""%.3o"" , c & 0377 )"		4945153	0					
ANR	4945308	Callee	fprintf		4945153	0					
ANR	4945309	Identifier	fprintf		4945153	0					
ANR	4945310	ArgumentList	fp		4945153	1					
ANR	4945311	Argument	fp		4945153	0					
ANR	4945312	Identifier	fp		4945153	0					
ANR	4945313	Argument	"""%.3o"""		4945153	1					
ANR	4945314	PrimaryExpression	"""%.3o"""		4945153	0					
ANR	4945315	Argument	c & 0377		4945153	2					
ANR	4945316	BitAndExpression	c & 0377		4945153	0		&			
ANR	4945317	Identifier	c		4945153	0					
ANR	4945318	PrimaryExpression	0377		4945153	1					
ANR	4945319	BreakStatement	break ;	1742:45:39745:39750	4945153	23	True				
ANR	4945320	ReturnType	void		4945153	1					
ANR	4945321	Identifier	file_showstr		4945153	2					
ANR	4945322	ParameterList	"FILE * fp , const char * s , size_t len"		4945153	3					
ANR	4945323	Parameter	FILE * fp	1718:18:39137:39144	4945153	0	True				
ANR	4945324	ParameterType	FILE *		4945153	0					
ANR	4945325	Identifier	fp		4945153	1					
ANR	4945326	Parameter	const char * s	1718:28:39147:39159	4945153	1	True				
ANR	4945327	ParameterType	const char *		4945153	0					
ANR	4945328	Identifier	s		4945153	1					
ANR	4945329	Parameter	size_t len	1718:43:39162:39171	4945153	2	True				
ANR	4945330	ParameterType	size_t		4945153	0					
ANR	4945331	Identifier	len		4945153	1					
ANR	4945332	CFGEntryNode	ENTRY		4945153		True				
ANR	4945333	CFGExitNode	EXIT		4945153		True				
ANR	4945334	InfiniteForNode	true		4945153		True				
ANR	4945335	Symbol	* s ++		4945153						
ANR	4945336	Symbol	~0U		4945153						
ANR	4945337	Symbol	s		4945153						
ANR	4945338	Symbol	c		4945153						
ANR	4945339	Symbol	len		4945153						
ANR	4945340	Symbol	fp		4945153						
ANR	4945341	Function	eatsize	1751:0:39831:40149							
ANR	4945342	FunctionDef	eatsize (const char * * p)		4945341	0					
ANR	4945343	CompoundStatement		1751:36:39867:40149	4945341	0					
ANR	4945344	IdentifierDeclStatement	const char * l = * p ;	1752:1:39870:39888	4945341	0	True				
ANR	4945345	IdentifierDecl	* l = * p		4945341	0					
ANR	4945346	IdentifierDeclType	const char *		4945341	0					
ANR	4945347	Identifier	l		4945341	1					
ANR	4945348	AssignmentExpression	* l = * p		4945341	2		=			
ANR	4945349	Identifier	l		4945341	0					
ANR	4945350	UnaryOperationExpression	* p		4945341	1					
ANR	4945351	UnaryOperator	*		4945341	0					
ANR	4945352	Identifier	p		4945341	1					
ANR	4945353	IfStatement	if ( LOWCASE ( * l ) == 'u' )		4945341	1					
ANR	4945354	Condition	LOWCASE ( * l ) == 'u'	1754:5:39896:39914	4945341	0	True				
ANR	4945355	EqualityExpression	LOWCASE ( * l ) == 'u'		4945341	0		==			
ANR	4945356	CallExpression	LOWCASE ( * l )		4945341	0					
ANR	4945357	Callee	LOWCASE		4945341	0					
ANR	4945358	Identifier	LOWCASE		4945341	0					
ANR	4945359	ArgumentList	* l		4945341	1					
ANR	4945360	Argument	* l		4945341	0					
ANR	4945361	UnaryOperationExpression	* l		4945341	0					
ANR	4945362	UnaryOperator	*		4945341	0					
ANR	4945363	Identifier	l		4945341	1					
ANR	4945364	PrimaryExpression	'u'		4945341	1					
ANR	4945365	CompoundStatement		4:26:49:49	4945341	1					
ANR	4945366	ExpressionStatement	l ++	1755:2:39921:39924	4945341	0	True				
ANR	4945367	PostIncDecOperationExpression	l ++		4945341	0					
ANR	4945368	Identifier	l		4945341	0					
ANR	4945369	IncDec	++		4945341	1					
ANR	4945370	SwitchStatement	switch ( LOWCASE ( * l ) )		4945341	2					
ANR	4945371	Condition	LOWCASE ( * l )	1758:9:39939:39950	4945341	0	True				
ANR	4945372	CallExpression	LOWCASE ( * l )		4945341	0					
ANR	4945373	Callee	LOWCASE		4945341	0					
ANR	4945374	Identifier	LOWCASE		4945341	0					
ANR	4945375	ArgumentList	* l		4945341	1					
ANR	4945376	Argument	* l		4945341	0					
ANR	4945377	UnaryOperationExpression	* l		4945341	0					
ANR	4945378	UnaryOperator	*		4945341	0					
ANR	4945379	Identifier	l		4945341	1					
ANR	4945380	CompoundStatement		8:23:85:85	4945341	1					
ANR	4945381	Label	case 'l' :	1759:1:39956:39964	4945341	0	True				
ANR	4945382	Label	case 's' :	1760:1:39981:39989	4945341	1	True				
ANR	4945383	Label	case 'h' :	1761:1:40007:40015	4945341	2	True				
ANR	4945384	Label	case 'b' :	1762:1:40033:40041	4945341	3	True				
ANR	4945385	Label	case 'c' :	1763:1:40063:40071	4945341	4	True				
ANR	4945386	ExpressionStatement	l ++	1764:2:40094:40097	4945341	5	True				
ANR	4945387	PostIncDecOperationExpression	l ++		4945341	0					
ANR	4945388	Identifier	l		4945341	0					
ANR	4945389	IncDec	++		4945341	1					
ANR	4945390	Label	default :	1766:1:40118:40125	4945341	6	True				
ANR	4945391	Identifier	default		4945341	0					
ANR	4945392	BreakStatement	break ;	1767:2:40129:40134	4945341	7	True				
ANR	4945393	ExpressionStatement	* p = l	1770:1:40141:40147	4945341	3	True				
ANR	4945394	AssignmentExpression	* p = l		4945341	0		=			
ANR	4945395	UnaryOperationExpression	* p		4945341	0					
ANR	4945396	UnaryOperator	*		4945341	0					
ANR	4945397	Identifier	p		4945341	1					
ANR	4945398	Identifier	l		4945341	1					
ANR	4945399	ReturnType	static void		4945341	1					
ANR	4945400	Identifier	eatsize		4945341	2					
ANR	4945401	ParameterList	const char * * p		4945341	3					
ANR	4945402	Parameter	const char * * p	1751:20:39851:39864	4945341	0	True				
ANR	4945403	ParameterType	const char * *		4945341	0					
ANR	4945404	Identifier	p		4945341	1					
ANR	4945405	CFGEntryNode	ENTRY		4945341		True				
ANR	4945406	CFGExitNode	EXIT		4945341		True				
ANR	4945407	Symbol	p		4945341						
ANR	4945408	Symbol	LOWCASE		4945341						
ANR	4945409	Symbol	* l		4945341						
ANR	4945410	Symbol	* p		4945341						
ANR	4945411	Symbol	l		4945341						
ANR	4945412	Function	apprentice_map	1776:0:40186:42215							
ANR	4945413	FunctionDef	"apprentice_map (RMagic * ms , struct r_magic * * magicp , ut32 * nmagicp , const char * fn)"		4945412	0					
ANR	4945414	CompoundStatement		1776:94:40280:42215	4945412	0					
ANR	4945415	IdentifierDeclStatement	int fd ;	1777:1:40283:40289	4945412	0	True				
ANR	4945416	IdentifierDecl	fd		4945412	0					
ANR	4945417	IdentifierDeclType	int		4945412	0					
ANR	4945418	Identifier	fd		4945412	1					
ANR	4945419	IdentifierDeclStatement	struct stat st ;	1778:1:40292:40306	4945412	1	True				
ANR	4945420	IdentifierDecl	st		4945412	0					
ANR	4945421	IdentifierDeclType	struct stat		4945412	0					
ANR	4945422	Identifier	st		4945412	1					
ANR	4945423	IdentifierDeclStatement	ut32 * ptr ;	1779:1:40309:40318	4945412	2	True				
ANR	4945424	IdentifierDecl	* ptr		4945412	0					
ANR	4945425	IdentifierDeclType	ut32 *		4945412	0					
ANR	4945426	Identifier	ptr		4945412	1					
ANR	4945427	IdentifierDeclStatement	ut32 version ;	1780:1:40321:40333	4945412	3	True				
ANR	4945428	IdentifierDecl	version		4945412	0					
ANR	4945429	IdentifierDeclType	ut32		4945412	0					
ANR	4945430	Identifier	version		4945412	1					
ANR	4945431	IdentifierDeclStatement	int needsbyteswap ;	1781:1:40336:40353	4945412	4	True				
ANR	4945432	IdentifierDecl	needsbyteswap		4945412	0					
ANR	4945433	IdentifierDeclType	int		4945412	0					
ANR	4945434	Identifier	needsbyteswap		4945412	1					
ANR	4945435	IdentifierDeclStatement	char * dbname = NULL ;	1782:1:40356:40375	4945412	5	True				
ANR	4945436	IdentifierDecl	* dbname = NULL		4945412	0					
ANR	4945437	IdentifierDeclType	char *		4945412	0					
ANR	4945438	Identifier	dbname		4945412	1					
ANR	4945439	AssignmentExpression	* dbname = NULL		4945412	2		=			
ANR	4945440	Identifier	NULL		4945412	0					
ANR	4945441	Identifier	NULL		4945412	1					
ANR	4945442	IdentifierDeclStatement	void * mm = NULL ;	1783:1:40378:40393	4945412	6	True				
ANR	4945443	IdentifierDecl	* mm = NULL		4945412	0					
ANR	4945444	IdentifierDeclType	void *		4945412	0					
ANR	4945445	Identifier	mm		4945412	1					
ANR	4945446	AssignmentExpression	* mm = NULL		4945412	2		=			
ANR	4945447	Identifier	NULL		4945412	0					
ANR	4945448	Identifier	NULL		4945412	1					
ANR	4945449	ExpressionStatement	"dbname = mkdbname ( fn , 0 )"	1785:1:40397:40422	4945412	7	True				
ANR	4945450	AssignmentExpression	"dbname = mkdbname ( fn , 0 )"		4945412	0		=			
ANR	4945451	Identifier	dbname		4945412	0					
ANR	4945452	CallExpression	"mkdbname ( fn , 0 )"		4945412	1					
ANR	4945453	Callee	mkdbname		4945412	0					
ANR	4945454	Identifier	mkdbname		4945412	0					
ANR	4945455	ArgumentList	fn		4945412	1					
ANR	4945456	Argument	fn		4945412	0					
ANR	4945457	Identifier	fn		4945412	0					
ANR	4945458	Argument	0		4945412	1					
ANR	4945459	PrimaryExpression	0		4945412	0					
ANR	4945460	IfStatement	if ( ! dbname )		4945412	8					
ANR	4945461	Condition	! dbname	1786:5:40429:40435	4945412	0	True				
ANR	4945462	UnaryOperationExpression	! dbname		4945412	0					
ANR	4945463	UnaryOperator	!		4945412	0					
ANR	4945464	Identifier	dbname		4945412	1					
ANR	4945465	CompoundStatement		11:14:157:157	4945412	1					
ANR	4945466	GotoStatement	goto error2 ;	1787:2:40442:40453	4945412	0	True				
ANR	4945467	Identifier	error2		4945412	0					
ANR	4945468	IfStatement	"if ( ( fd = r_sandbox_open ( dbname , O_RDONLY | O_BINARY , 0 ) ) == - 1 )"		4945412	9					
ANR	4945469	Condition	"( fd = r_sandbox_open ( dbname , O_RDONLY | O_BINARY , 0 ) ) == - 1"	1790:5:40464:40523	4945412	0	True				
ANR	4945470	EqualityExpression	"( fd = r_sandbox_open ( dbname , O_RDONLY | O_BINARY , 0 ) ) == - 1"		4945412	0		==			
ANR	4945471	AssignmentExpression	"fd = r_sandbox_open ( dbname , O_RDONLY | O_BINARY , 0 )"		4945412	0		=			
ANR	4945472	Identifier	fd		4945412	0					
ANR	4945473	CallExpression	"r_sandbox_open ( dbname , O_RDONLY | O_BINARY , 0 )"		4945412	1					
ANR	4945474	Callee	r_sandbox_open		4945412	0					
ANR	4945475	Identifier	r_sandbox_open		4945412	0					
ANR	4945476	ArgumentList	dbname		4945412	1					
ANR	4945477	Argument	dbname		4945412	0					
ANR	4945478	Identifier	dbname		4945412	0					
ANR	4945479	Argument	O_RDONLY | O_BINARY		4945412	1					
ANR	4945480	InclusiveOrExpression	O_RDONLY | O_BINARY		4945412	0		|			
ANR	4945481	Identifier	O_RDONLY		4945412	0					
ANR	4945482	Identifier	O_BINARY		4945412	1					
ANR	4945483	Argument	0		4945412	2					
ANR	4945484	PrimaryExpression	0		4945412	0					
ANR	4945485	UnaryOperationExpression	- 1		4945412	1					
ANR	4945486	UnaryOperator	-		4945412	0					
ANR	4945487	PrimaryExpression	1		4945412	1					
ANR	4945488	CompoundStatement		15:67:245:245	4945412	1					
ANR	4945489	GotoStatement	goto error2 ;	1791:2:40530:40541	4945412	0	True				
ANR	4945490	Identifier	error2		4945412	0					
ANR	4945491	IfStatement	"if ( fstat ( fd , & st ) == - 1 )"		4945412	10					
ANR	4945492	Condition	"fstat ( fd , & st ) == - 1"	1794:5:40552:40571	4945412	0	True				
ANR	4945493	EqualityExpression	"fstat ( fd , & st ) == - 1"		4945412	0		==			
ANR	4945494	CallExpression	"fstat ( fd , & st )"		4945412	0					
ANR	4945495	Callee	fstat		4945412	0					
ANR	4945496	Identifier	fstat		4945412	0					
ANR	4945497	ArgumentList	fd		4945412	1					
ANR	4945498	Argument	fd		4945412	0					
ANR	4945499	Identifier	fd		4945412	0					
ANR	4945500	Argument	& st		4945412	1					
ANR	4945501	UnaryOperationExpression	& st		4945412	0					
ANR	4945502	UnaryOperator	&		4945412	0					
ANR	4945503	Identifier	st		4945412	1					
ANR	4945504	UnaryOperationExpression	- 1		4945412	1					
ANR	4945505	UnaryOperator	-		4945412	0					
ANR	4945506	PrimaryExpression	1		4945412	1					
ANR	4945507	CompoundStatement		19:27:293:293	4945412	1					
ANR	4945508	ExpressionStatement	"file_error ( ms , errno , ""cannot stat `%s'"" , dbname )"	1795:2:40578:40628	4945412	0	True				
ANR	4945509	CallExpression	"file_error ( ms , errno , ""cannot stat `%s'"" , dbname )"		4945412	0					
ANR	4945510	Callee	file_error		4945412	0					
ANR	4945511	Identifier	file_error		4945412	0					
ANR	4945512	ArgumentList	ms		4945412	1					
ANR	4945513	Argument	ms		4945412	0					
ANR	4945514	Identifier	ms		4945412	0					
ANR	4945515	Argument	errno		4945412	1					
ANR	4945516	Identifier	errno		4945412	0					
ANR	4945517	Argument	"""cannot stat `%s'"""		4945412	2					
ANR	4945518	PrimaryExpression	"""cannot stat `%s'"""		4945412	0					
ANR	4945519	Argument	dbname		4945412	3					
ANR	4945520	Identifier	dbname		4945412	0					
ANR	4945521	GotoStatement	goto error1 ;	1796:2:40632:40643	4945412	1	True				
ANR	4945522	Identifier	error1		4945412	0					
ANR	4945523	IfStatement	if ( st . st_size < 8 )		4945412	11					
ANR	4945524	Condition	st . st_size < 8	1798:5:40653:40666	4945412	0	True				
ANR	4945525	RelationalExpression	st . st_size < 8		4945412	0		<			
ANR	4945526	MemberAccess	st . st_size		4945412	0					
ANR	4945527	Identifier	st		4945412	0					
ANR	4945528	Identifier	st_size		4945412	1					
ANR	4945529	PrimaryExpression	8		4945412	1					
ANR	4945530	CompoundStatement		23:21:388:388	4945412	1					
ANR	4945531	ExpressionStatement	"file_error ( ms , 0 , ""file `%s' is too small"" , dbname )"	1799:2:40673:40725	4945412	0	True				
ANR	4945532	CallExpression	"file_error ( ms , 0 , ""file `%s' is too small"" , dbname )"		4945412	0					
ANR	4945533	Callee	file_error		4945412	0					
ANR	4945534	Identifier	file_error		4945412	0					
ANR	4945535	ArgumentList	ms		4945412	1					
ANR	4945536	Argument	ms		4945412	0					
ANR	4945537	Identifier	ms		4945412	0					
ANR	4945538	Argument	0		4945412	1					
ANR	4945539	PrimaryExpression	0		4945412	0					
ANR	4945540	Argument	"""file `%s' is too small"""		4945412	2					
ANR	4945541	PrimaryExpression	"""file `%s' is too small"""		4945412	0					
ANR	4945542	Argument	dbname		4945412	3					
ANR	4945543	Identifier	dbname		4945412	0					
ANR	4945544	GotoStatement	goto error1 ;	1800:2:40729:40740	4945412	1	True				
ANR	4945545	Identifier	error1		4945412	0					
ANR	4945546	IfStatement	"if ( ( mm = mmap ( 0 , ( size_t ) st . st_size , PROT_READ , MAP_PRIVATE | MAP_FILE , fd , ( off_t ) 0 ) ) == MAP_FAILED )"		4945412	12					
ANR	4945547	Condition	"( mm = mmap ( 0 , ( size_t ) st . st_size , PROT_READ , MAP_PRIVATE | MAP_FILE , fd , ( off_t ) 0 ) ) == MAP_FAILED"	1804:5:40764:40891	4945412	0	True				
ANR	4945548	EqualityExpression	"( mm = mmap ( 0 , ( size_t ) st . st_size , PROT_READ , MAP_PRIVATE | MAP_FILE , fd , ( off_t ) 0 ) ) == MAP_FAILED"		4945412	0		==			
ANR	4945549	AssignmentExpression	"mm = mmap ( 0 , ( size_t ) st . st_size , PROT_READ , MAP_PRIVATE | MAP_FILE , fd , ( off_t ) 0 )"		4945412	0		=			
ANR	4945550	Identifier	mm		4945412	0					
ANR	4945551	CallExpression	"mmap ( 0 , ( size_t ) st . st_size , PROT_READ , MAP_PRIVATE | MAP_FILE , fd , ( off_t ) 0 )"		4945412	1					
ANR	4945552	Callee	mmap		4945412	0					
ANR	4945553	Identifier	mmap		4945412	0					
ANR	4945554	ArgumentList	0		4945412	1					
ANR	4945555	Argument	0		4945412	0					
ANR	4945556	PrimaryExpression	0		4945412	0					
ANR	4945557	Argument	( size_t ) st . st_size		4945412	1					
ANR	4945558	CastExpression	( size_t ) st . st_size		4945412	0					
ANR	4945559	CastTarget	size_t		4945412	0					
ANR	4945560	MemberAccess	st . st_size		4945412	1					
ANR	4945561	Identifier	st		4945412	0					
ANR	4945562	Identifier	st_size		4945412	1					
ANR	4945563	Argument	PROT_READ		4945412	2					
ANR	4945564	Identifier	PROT_READ		4945412	0					
ANR	4945565	Argument	MAP_PRIVATE | MAP_FILE		4945412	3					
ANR	4945566	InclusiveOrExpression	MAP_PRIVATE | MAP_FILE		4945412	0		|			
ANR	4945567	Identifier	MAP_PRIVATE		4945412	0					
ANR	4945568	Identifier	MAP_FILE		4945412	1					
ANR	4945569	Argument	fd		4945412	4					
ANR	4945570	Identifier	fd		4945412	0					
ANR	4945571	Argument	( off_t ) 0		4945412	5					
ANR	4945572	CastExpression	( off_t ) 0		4945412	0					
ANR	4945573	CastTarget	off_t		4945412	0					
ANR	4945574	PrimaryExpression	0		4945412	1					
ANR	4945575	Identifier	MAP_FAILED		4945412	1					
ANR	4945576	CompoundStatement		30:57:613:613	4945412	1					
ANR	4945577	ExpressionStatement	"file_error ( ms , errno , ""cannot map `%s'"" , dbname )"	1806:2:40898:40947	4945412	0	True				
ANR	4945578	CallExpression	"file_error ( ms , errno , ""cannot map `%s'"" , dbname )"		4945412	0					
ANR	4945579	Callee	file_error		4945412	0					
ANR	4945580	Identifier	file_error		4945412	0					
ANR	4945581	ArgumentList	ms		4945412	1					
ANR	4945582	Argument	ms		4945412	0					
ANR	4945583	Identifier	ms		4945412	0					
ANR	4945584	Argument	errno		4945412	1					
ANR	4945585	Identifier	errno		4945412	0					
ANR	4945586	Argument	"""cannot map `%s'"""		4945412	2					
ANR	4945587	PrimaryExpression	"""cannot map `%s'"""		4945412	0					
ANR	4945588	Argument	dbname		4945412	3					
ANR	4945589	Identifier	dbname		4945412	0					
ANR	4945590	GotoStatement	goto error1 ;	1807:2:40951:40962	4945412	1	True				
ANR	4945591	Identifier	error1		4945412	0					
ANR	4945592	Statement	define	1809:1:40968:40973	4945412	13	True				
ANR	4945593	Statement	RET	1809:8:40975:40977	4945412	14	True				
ANR	4945594	Statement	2	1809:12:40979:40979	4945412	15	True				
ANR	4945595	ExpressionStatement	* magicp = mm	1821:1:41211:41223	4945412	16	True				
ANR	4945596	AssignmentExpression	* magicp = mm		4945412	0		=			
ANR	4945597	UnaryOperationExpression	* magicp		4945412	0					
ANR	4945598	UnaryOperator	*		4945412	0					
ANR	4945599	Identifier	magicp		4945412	1					
ANR	4945600	Identifier	mm		4945412	1					
ANR	4945601	ExpressionStatement	( void ) close ( fd )	1822:1:41226:41242	4945412	17	True				
ANR	4945602	CastExpression	( void ) close ( fd )		4945412	0					
ANR	4945603	CastTarget	void		4945412	0					
ANR	4945604	CallExpression	close ( fd )		4945412	1					
ANR	4945605	Callee	close		4945412	0					
ANR	4945606	Identifier	close		4945412	0					
ANR	4945607	ArgumentList	fd		4945412	1					
ANR	4945608	Argument	fd		4945412	0					
ANR	4945609	Identifier	fd		4945412	0					
ANR	4945610	ExpressionStatement	fd = - 1	1823:1:41245:41252	4945412	18	True				
ANR	4945611	AssignmentExpression	fd = - 1		4945412	0		=			
ANR	4945612	Identifier	fd		4945412	0					
ANR	4945613	UnaryOperationExpression	- 1		4945412	1					
ANR	4945614	UnaryOperator	-		4945412	0					
ANR	4945615	PrimaryExpression	1		4945412	1					
ANR	4945616	ExpressionStatement	ptr = ( ut32 * ) ( void * ) * magicp	1824:1:41255:41284	4945412	19	True				
ANR	4945617	AssignmentExpression	ptr = ( ut32 * ) ( void * ) * magicp		4945412	0		=			
ANR	4945618	Identifier	ptr		4945412	0					
ANR	4945619	CastExpression	( ut32 * ) ( void * ) * magicp		4945412	1					
ANR	4945620	CastTarget	ut32 *		4945412	0					
ANR	4945621	CastExpression	( void * ) * magicp		4945412	1					
ANR	4945622	CastTarget	void *		4945412	0					
ANR	4945623	UnaryOperationExpression	* magicp		4945412	1					
ANR	4945624	UnaryOperator	*		4945412	0					
ANR	4945625	Identifier	magicp		4945412	1					
ANR	4945626	IfStatement	if ( * ptr != MAGICNO )		4945412	20					
ANR	4945627	Condition	* ptr != MAGICNO	1826:5:41292:41306	4945412	0	True				
ANR	4945628	EqualityExpression	* ptr != MAGICNO		4945412	0		!=			
ANR	4945629	UnaryOperationExpression	* ptr		4945412	0					
ANR	4945630	UnaryOperator	*		4945412	0					
ANR	4945631	Identifier	ptr		4945412	1					
ANR	4945632	Identifier	MAGICNO		4945412	1					
ANR	4945633	CompoundStatement		51:22:1028:1028	4945412	1					
ANR	4945634	IfStatement	if ( swap4 ( * ptr ) != MAGICNO )		4945412	0					
ANR	4945635	Condition	swap4 ( * ptr ) != MAGICNO	1827:6:41317:41338	4945412	0	True				
ANR	4945636	EqualityExpression	swap4 ( * ptr ) != MAGICNO		4945412	0		!=			
ANR	4945637	CallExpression	swap4 ( * ptr )		4945412	0					
ANR	4945638	Callee	swap4		4945412	0					
ANR	4945639	Identifier	swap4		4945412	0					
ANR	4945640	ArgumentList	* ptr		4945412	1					
ANR	4945641	Argument	* ptr		4945412	0					
ANR	4945642	UnaryOperationExpression	* ptr		4945412	0					
ANR	4945643	UnaryOperator	*		4945412	0					
ANR	4945644	Identifier	ptr		4945412	1					
ANR	4945645	Identifier	MAGICNO		4945412	1					
ANR	4945646	CompoundStatement		52:30:1060:1060	4945412	1					
ANR	4945647	ExpressionStatement	"file_error ( ms , 0 , ""bad magic in `%s'"" , dbname )"	1829:3:41401:41447	4945412	0	True				
ANR	4945648	CallExpression	"file_error ( ms , 0 , ""bad magic in `%s'"" , dbname )"		4945412	0					
ANR	4945649	Callee	file_error		4945412	0					
ANR	4945650	Identifier	file_error		4945412	0					
ANR	4945651	ArgumentList	ms		4945412	1					
ANR	4945652	Argument	ms		4945412	0					
ANR	4945653	Identifier	ms		4945412	0					
ANR	4945654	Argument	0		4945412	1					
ANR	4945655	PrimaryExpression	0		4945412	0					
ANR	4945656	Argument	"""bad magic in `%s'"""		4945412	2					
ANR	4945657	PrimaryExpression	"""bad magic in `%s'"""		4945412	0					
ANR	4945658	Argument	dbname		4945412	3					
ANR	4945659	Identifier	dbname		4945412	0					
ANR	4945660	GotoStatement	goto error1 ;	1830:3:41452:41463	4945412	1	True				
ANR	4945661	Identifier	error1		4945412	0					
ANR	4945662	ExpressionStatement	needsbyteswap = 1	1832:2:41471:41488	4945412	1	True				
ANR	4945663	AssignmentExpression	needsbyteswap = 1		4945412	0		=			
ANR	4945664	Identifier	needsbyteswap		4945412	0					
ANR	4945665	PrimaryExpression	1		4945412	1					
ANR	4945666	ElseStatement	else		4945412	0					
ANR	4945667	CompoundStatement		58:8:1217:1217	4945412	0					
ANR	4945668	ExpressionStatement	needsbyteswap = 0	1834:2:41502:41519	4945412	0	True				
ANR	4945669	AssignmentExpression	needsbyteswap = 0		4945412	0		=			
ANR	4945670	Identifier	needsbyteswap		4945412	0					
ANR	4945671	PrimaryExpression	0		4945412	1					
ANR	4945672	ExpressionStatement	version = needsbyteswap ? swap4 ( ptr [ 1 ] ) : ptr [ 1 ]	1837:1:41526:41572	4945412	21	True				
ANR	4945673	AssignmentExpression	version = needsbyteswap ? swap4 ( ptr [ 1 ] ) : ptr [ 1 ]		4945412	0		=			
ANR	4945674	Identifier	version		4945412	0					
ANR	4945675	ConditionalExpression	needsbyteswap ? swap4 ( ptr [ 1 ] ) : ptr [ 1 ]		4945412	1					
ANR	4945676	Condition	needsbyteswap		4945412	0					
ANR	4945677	Identifier	needsbyteswap		4945412	0					
ANR	4945678	CallExpression	swap4 ( ptr [ 1 ] )		4945412	1					
ANR	4945679	Callee	swap4		4945412	0					
ANR	4945680	Identifier	swap4		4945412	0					
ANR	4945681	ArgumentList	ptr [ 1 ]		4945412	1					
ANR	4945682	Argument	ptr [ 1 ]		4945412	0					
ANR	4945683	ArrayIndexing	ptr [ 1 ]		4945412	0					
ANR	4945684	Identifier	ptr		4945412	0					
ANR	4945685	PrimaryExpression	1		4945412	1					
ANR	4945686	ArrayIndexing	ptr [ 1 ]		4945412	2					
ANR	4945687	Identifier	ptr		4945412	0					
ANR	4945688	PrimaryExpression	1		4945412	1					
ANR	4945689	IfStatement	if ( version != VERSIONNO )		4945412	22					
ANR	4945690	Condition	version != VERSIONNO	1838:5:41579:41598	4945412	0	True				
ANR	4945691	EqualityExpression	version != VERSIONNO		4945412	0		!=			
ANR	4945692	Identifier	version		4945412	0					
ANR	4945693	Identifier	VERSIONNO		4945412	1					
ANR	4945694	CompoundStatement		63:27:1320:1320	4945412	1					
ANR	4945695	Statement	file_error	1839:2:41605:41614	4945412	0	True				
ANR	4945696	Statement	(	1839:12:41615:41615	4945412	1	True				
ANR	4945697	Statement	ms	1839:13:41616:41617	4945412	2	True				
ANR	4945698	Statement	","	1839:15:41618:41618	4945412	3	True				
ANR	4945699	Statement	0	1839:17:41620:41620	4945412	4	True				
ANR	4945700	Statement	","	1839:18:41621:41621	4945412	5	True				
ANR	4945701	Statement	"""File %d.%d supports only %d version magic """	1839:20:41623:41666	4945412	6	True				
ANR	4945702	Statement	"""files. `%s' is version %d"""	1840:6:41674:41700	4945412	7	True				
ANR	4945703	Statement	","	1840:33:41701:41701	4945412	8	True				
ANR	4945704	Statement	FILE_VERSION_MAJOR	1840:35:41703:41720	4945412	9	True				
ANR	4945705	Statement	","	1840:53:41721:41721	4945412	10	True				
ANR	4945706	Statement	patchlevel	1840:55:41723:41732	4945412	11	True				
ANR	4945707	Statement	","	1840:65:41733:41733	4945412	12	True				
ANR	4945708	Statement	VERSIONNO	1841:6:41741:41749	4945412	13	True				
ANR	4945709	Statement	","	1841:15:41750:41750	4945412	14	True				
ANR	4945710	Statement	dbname	1841:17:41752:41757	4945412	15	True				
ANR	4945711	Statement	","	1841:23:41758:41758	4945412	16	True				
ANR	4945712	Statement	version	1841:25:41760:41766	4945412	17	True				
ANR	4945713	Statement	)	1841:32:41767:41767	4945412	18	True				
ANR	4945714	ExpressionStatement		1841:33:41768:41768	4945412	19	True				
ANR	4945715	GotoStatement	goto error1 ;	1842:2:41772:41783	4945412	20	True				
ANR	4945716	Identifier	error1		4945412	0					
ANR	4945717	ExpressionStatement	* nmagicp = ( ut32 ) ( st . st_size / sizeof ( struct r_magic ) )	1844:1:41789:41844	4945412	23	True				
ANR	4945718	AssignmentExpression	* nmagicp = ( ut32 ) ( st . st_size / sizeof ( struct r_magic ) )		4945412	0		=			
ANR	4945719	UnaryOperationExpression	* nmagicp		4945412	0					
ANR	4945720	UnaryOperator	*		4945412	0					
ANR	4945721	Identifier	nmagicp		4945412	1					
ANR	4945722	CastExpression	( ut32 ) ( st . st_size / sizeof ( struct r_magic ) )		4945412	1					
ANR	4945723	CastTarget	ut32		4945412	0					
ANR	4945724	MultiplicativeExpression	st . st_size / sizeof ( struct r_magic )		4945412	1		/			
ANR	4945725	MemberAccess	st . st_size		4945412	0					
ANR	4945726	Identifier	st		4945412	0					
ANR	4945727	Identifier	st_size		4945412	1					
ANR	4945728	SizeofExpression	sizeof ( struct r_magic )		4945412	1					
ANR	4945729	Sizeof	sizeof		4945412	0					
ANR	4945730	SizeofOperand	struct r_magic		4945412	1					
ANR	4945731	IfStatement	if ( * nmagicp > 0 )		4945412	24					
ANR	4945732	Condition	* nmagicp > 0	1845:5:41851:41862	4945412	0	True				
ANR	4945733	RelationalExpression	* nmagicp > 0		4945412	0		>			
ANR	4945734	UnaryOperationExpression	* nmagicp		4945412	0					
ANR	4945735	UnaryOperator	*		4945412	0					
ANR	4945736	Identifier	nmagicp		4945412	1					
ANR	4945737	PrimaryExpression	0		4945412	1					
ANR	4945738	CompoundStatement		70:19:1584:1584	4945412	1					
ANR	4945739	ExpressionStatement	( * nmagicp ) --	1846:2:41869:41881	4945412	0	True				
ANR	4945740	PostIncDecOperationExpression	( * nmagicp ) --		4945412	0					
ANR	4945741	UnaryOperationExpression	* nmagicp		4945412	0					
ANR	4945742	UnaryOperator	*		4945412	0					
ANR	4945743	Identifier	nmagicp		4945412	1					
ANR	4945744	IncDec	--		4945412	1					
ANR	4945745	ExpressionStatement	( * magicp ) ++	1848:1:41887:41898	4945412	25	True				
ANR	4945746	PostIncDecOperationExpression	( * magicp ) ++		4945412	0					
ANR	4945747	UnaryOperationExpression	* magicp		4945412	0					
ANR	4945748	UnaryOperator	*		4945412	0					
ANR	4945749	Identifier	magicp		4945412	1					
ANR	4945750	IncDec	++		4945412	1					
ANR	4945751	IfStatement	if ( needsbyteswap )		4945412	26					
ANR	4945752	Condition	needsbyteswap	1849:5:41905:41917	4945412	0	True				
ANR	4945753	Identifier	needsbyteswap		4945412	0					
ANR	4945754	CompoundStatement		74:20:1639:1639	4945412	1					
ANR	4945755	ExpressionStatement	"byteswap ( * magicp , * nmagicp )"	1850:2:41924:41952	4945412	0	True				
ANR	4945756	CallExpression	"byteswap ( * magicp , * nmagicp )"		4945412	0					
ANR	4945757	Callee	byteswap		4945412	0					
ANR	4945758	Identifier	byteswap		4945412	0					
ANR	4945759	ArgumentList	* magicp		4945412	1					
ANR	4945760	Argument	* magicp		4945412	0					
ANR	4945761	UnaryOperationExpression	* magicp		4945412	0					
ANR	4945762	UnaryOperator	*		4945412	0					
ANR	4945763	Identifier	magicp		4945412	1					
ANR	4945764	Argument	* nmagicp		4945412	1					
ANR	4945765	UnaryOperationExpression	* nmagicp		4945412	0					
ANR	4945766	UnaryOperator	*		4945412	0					
ANR	4945767	Identifier	nmagicp		4945412	1					
ANR	4945768	ExpressionStatement	free ( dbname )	1852:1:41958:41971	4945412	27	True				
ANR	4945769	CallExpression	free ( dbname )		4945412	0					
ANR	4945770	Callee	free		4945412	0					
ANR	4945771	Identifier	free		4945412	0					
ANR	4945772	ArgumentList	dbname		4945412	1					
ANR	4945773	Argument	dbname		4945412	0					
ANR	4945774	Identifier	dbname		4945412	0					
ANR	4945775	ReturnStatement	return RET ;	1853:1:41974:41984	4945412	28	True				
ANR	4945776	Identifier	RET		4945412	0					
ANR	4945777	Label	error1 :	1855:0:41987:41993	4945412	29	True				
ANR	4945778	Identifier	error1		4945412	0					
ANR	4945779	IfStatement	if ( fd != - 1 )		4945412	30					
ANR	4945780	Condition	fd != - 1	1856:5:42000:42007	4945412	0	True				
ANR	4945781	EqualityExpression	fd != - 1		4945412	0		!=			
ANR	4945782	Identifier	fd		4945412	0					
ANR	4945783	UnaryOperationExpression	- 1		4945412	1					
ANR	4945784	UnaryOperator	-		4945412	0					
ANR	4945785	PrimaryExpression	1		4945412	1					
ANR	4945786	CompoundStatement		81:15:1729:1729	4945412	1					
ANR	4945787	ExpressionStatement	( void ) close ( fd )	1857:2:42014:42030	4945412	0	True				
ANR	4945788	CastExpression	( void ) close ( fd )		4945412	0					
ANR	4945789	CastTarget	void		4945412	0					
ANR	4945790	CallExpression	close ( fd )		4945412	1					
ANR	4945791	Callee	close		4945412	0					
ANR	4945792	Identifier	close		4945412	0					
ANR	4945793	ArgumentList	fd		4945412	1					
ANR	4945794	Argument	fd		4945412	0					
ANR	4945795	Identifier	fd		4945412	0					
ANR	4945796	IfStatement	if ( mm )		4945412	31					
ANR	4945797	Condition	mm	1859:5:42040:42041	4945412	0	True				
ANR	4945798	Identifier	mm		4945412	0					
ANR	4945799	CompoundStatement		84:9:1763:1763	4945412	1					
ANR	4945800	ExpressionStatement	"( void ) munmap ( ( void * ) mm , ( size_t ) st . st_size )"	1861:2:42061:42105	4945412	0	True				
ANR	4945801	CastExpression	"( void ) munmap ( ( void * ) mm , ( size_t ) st . st_size )"		4945412	0					
ANR	4945802	CastTarget	void		4945412	0					
ANR	4945803	CallExpression	"munmap ( ( void * ) mm , ( size_t ) st . st_size )"		4945412	1					
ANR	4945804	Callee	munmap		4945412	0					
ANR	4945805	Identifier	munmap		4945412	0					
ANR	4945806	ArgumentList	( void * ) mm		4945412	1					
ANR	4945807	Argument	( void * ) mm		4945412	0					
ANR	4945808	CastExpression	( void * ) mm		4945412	0					
ANR	4945809	CastTarget	void *		4945412	0					
ANR	4945810	Identifier	mm		4945412	1					
ANR	4945811	Argument	( size_t ) st . st_size		4945412	1					
ANR	4945812	CastExpression	( size_t ) st . st_size		4945412	0					
ANR	4945813	CastTarget	size_t		4945412	0					
ANR	4945814	MemberAccess	st . st_size		4945412	1					
ANR	4945815	Identifier	st		4945412	0					
ANR	4945816	Identifier	st_size		4945412	1					
ANR	4945817	ElseStatement	else		4945412	0					
ANR	4945818	CompoundStatement		90:8:1859:1859	4945412	0					
ANR	4945819	ExpressionStatement	* magicp = NULL	1866:2:42144:42158	4945412	0	True				
ANR	4945820	AssignmentExpression	* magicp = NULL		4945412	0		=			
ANR	4945821	UnaryOperationExpression	* magicp		4945412	0					
ANR	4945822	UnaryOperator	*		4945412	0					
ANR	4945823	Identifier	magicp		4945412	1					
ANR	4945824	Identifier	NULL		4945412	1					
ANR	4945825	ExpressionStatement	* nmagicp = 0	1867:2:42162:42174	4945412	1	True				
ANR	4945826	AssignmentExpression	* nmagicp = 0		4945412	0		=			
ANR	4945827	UnaryOperationExpression	* nmagicp		4945412	0					
ANR	4945828	UnaryOperator	*		4945412	0					
ANR	4945829	Identifier	nmagicp		4945412	1					
ANR	4945830	PrimaryExpression	0		4945412	1					
ANR	4945831	Label	error2 :	1869:0:42179:42185	4945412	32	True				
ANR	4945832	Identifier	error2		4945412	0					
ANR	4945833	ExpressionStatement	free ( dbname )	1870:1:42188:42201	4945412	33	True				
ANR	4945834	CallExpression	free ( dbname )		4945412	0					
ANR	4945835	Callee	free		4945412	0					
ANR	4945836	Identifier	free		4945412	0					
ANR	4945837	ArgumentList	dbname		4945412	1					
ANR	4945838	Argument	dbname		4945412	0					
ANR	4945839	Identifier	dbname		4945412	0					
ANR	4945840	ReturnStatement	return - 1 ;	1871:1:42204:42213	4945412	34	True				
ANR	4945841	UnaryOperationExpression	- 1		4945412	0					
ANR	4945842	UnaryOperator	-		4945412	0					
ANR	4945843	PrimaryExpression	1		4945412	1					
ANR	4945844	ReturnType	static int		4945412	1					
ANR	4945845	Identifier	apprentice_map		4945412	2					
ANR	4945846	ParameterList	"RMagic * ms , struct r_magic * * magicp , ut32 * nmagicp , const char * fn"		4945412	3					
ANR	4945847	Parameter	RMagic * ms	1776:26:40212:40221	4945412	0	True				
ANR	4945848	ParameterType	RMagic *		4945412	0					
ANR	4945849	Identifier	ms		4945412	1					
ANR	4945850	Parameter	struct r_magic * * magicp	1776:38:40224:40246	4945412	1	True				
ANR	4945851	ParameterType	struct r_magic * *		4945412	0					
ANR	4945852	Identifier	magicp		4945412	1					
ANR	4945853	Parameter	ut32 * nmagicp	1776:63:40249:40261	4945412	2	True				
ANR	4945854	ParameterType	ut32 *		4945412	0					
ANR	4945855	Identifier	nmagicp		4945412	1					
ANR	4945856	Parameter	const char * fn	1776:78:40264:40277	4945412	3	True				
ANR	4945857	ParameterType	const char *		4945412	0					
ANR	4945858	Identifier	fn		4945412	1					
ANR	4945859	CFGEntryNode	ENTRY		4945412		True				
ANR	4945860	CFGExitNode	EXIT		4945412		True				
ANR	4945861	Symbol	VERSIONNO		4945412						
ANR	4945862	Symbol	RET		4945412						
ANR	4945863	Symbol	O_BINARY		4945412						
ANR	4945864	Symbol	fn		4945412						
ANR	4945865	Symbol	& st		4945412						
ANR	4945866	Symbol	swap4		4945412						
ANR	4945867	Symbol	MAP_PRIVATE		4945412						
ANR	4945868	Symbol	MAP_FAILED		4945412						
ANR	4945869	Symbol	* nmagicp		4945412						
ANR	4945870	Symbol	MAP_FILE		4945412						
ANR	4945871	Symbol	* ptr		4945412						
ANR	4945872	Symbol	* magicp		4945412						
ANR	4945873	Symbol	mm		4945412						
ANR	4945874	Symbol	st		4945412						
ANR	4945875	Symbol	errno		4945412						
ANR	4945876	Symbol	NULL		4945412						
ANR	4945877	Symbol	magicp		4945412						
ANR	4945878	Symbol	nmagicp		4945412						
ANR	4945879	Symbol	ms		4945412						
ANR	4945880	Symbol	fstat		4945412						
ANR	4945881	Symbol	PROT_READ		4945412						
ANR	4945882	Symbol	version		4945412						
ANR	4945883	Symbol	ptr		4945412						
ANR	4945884	Symbol	needsbyteswap		4945412						
ANR	4945885	Symbol	mkdbname		4945412						
ANR	4945886	Symbol	r_sandbox_open		4945412						
ANR	4945887	Symbol	O_RDONLY		4945412						
ANR	4945888	Symbol	st . st_size		4945412						
ANR	4945889	Symbol	dbname		4945412						
ANR	4945890	Symbol	MAGICNO		4945412						
ANR	4945891	Symbol	mmap		4945412						
ANR	4945892	Symbol	fd		4945412						
ANR	4945893	DeclStmt									
ANR	4945894	Decl							const ut32	const ut32 [ ]	ar
ANR	4945895	Function	apprentice_compile	1881:0:42305:43205							
ANR	4945896	FunctionDef	"apprentice_compile (RMagic * ms , struct r_magic * * magicp , ut32 * nmagicp , const char * fn)"		4945895	0					
ANR	4945897	CompoundStatement		1881:98:42403:43205	4945895	0					
ANR	4945898	IdentifierDeclStatement	int fd ;	1882:1:42406:42412	4945895	0	True				
ANR	4945899	IdentifierDecl	fd		4945895	0					
ANR	4945900	IdentifierDeclType	int		4945895	0					
ANR	4945901	Identifier	fd		4945895	1					
ANR	4945902	IdentifierDeclStatement	char * dbname ;	1883:1:42415:42427	4945895	1	True				
ANR	4945903	IdentifierDecl	* dbname		4945895	0					
ANR	4945904	IdentifierDeclType	char *		4945895	0					
ANR	4945905	Identifier	dbname		4945895	1					
ANR	4945906	IdentifierDeclStatement	int rv = - 1 ;	1884:1:42430:42441	4945895	2	True				
ANR	4945907	IdentifierDecl	rv = - 1		4945895	0					
ANR	4945908	IdentifierDeclType	int		4945895	0					
ANR	4945909	Identifier	rv		4945895	1					
ANR	4945910	AssignmentExpression	rv = - 1		4945895	2		=			
ANR	4945911	Identifier	rv		4945895	0					
ANR	4945912	UnaryOperationExpression	- 1		4945895	1					
ANR	4945913	UnaryOperator	-		4945895	0					
ANR	4945914	PrimaryExpression	1		4945895	1					
ANR	4945915	ExpressionStatement	"dbname = mkdbname ( fn , 1 )"	1886:1:42445:42469	4945895	3	True				
ANR	4945916	AssignmentExpression	"dbname = mkdbname ( fn , 1 )"		4945895	0		=			
ANR	4945917	Identifier	dbname		4945895	0					
ANR	4945918	CallExpression	"mkdbname ( fn , 1 )"		4945895	1					
ANR	4945919	Callee	mkdbname		4945895	0					
ANR	4945920	Identifier	mkdbname		4945895	0					
ANR	4945921	ArgumentList	fn		4945895	1					
ANR	4945922	Argument	fn		4945895	0					
ANR	4945923	Identifier	fn		4945895	0					
ANR	4945924	Argument	1		4945895	1					
ANR	4945925	PrimaryExpression	1		4945895	0					
ANR	4945926	IfStatement	if ( ! dbname )		4945895	4					
ANR	4945927	Condition	! dbname	1888:5:42477:42483	4945895	0	True				
ANR	4945928	UnaryOperationExpression	! dbname		4945895	0					
ANR	4945929	UnaryOperator	!		4945895	0					
ANR	4945930	Identifier	dbname		4945895	1					
ANR	4945931	CompoundStatement		8:14:82:82	4945895	1					
ANR	4945932	GotoStatement	goto out ;	1889:2:42490:42498	4945895	0	True				
ANR	4945933	Identifier	out		4945895	0					
ANR	4945934	IfStatement	"if ( ( fd = r_sandbox_open ( dbname , O_WRONLY | O_CREAT | O_TRUNC | O_BINARY , 0644 ) ) == - 1 )"		4945895	5					
ANR	4945935	Condition	"( fd = r_sandbox_open ( dbname , O_WRONLY | O_CREAT | O_TRUNC | O_BINARY , 0644 ) ) == - 1"	1892:5:42509:42584	4945895	0	True				
ANR	4945936	EqualityExpression	"( fd = r_sandbox_open ( dbname , O_WRONLY | O_CREAT | O_TRUNC | O_BINARY , 0644 ) ) == - 1"		4945895	0		==			
ANR	4945937	AssignmentExpression	"fd = r_sandbox_open ( dbname , O_WRONLY | O_CREAT | O_TRUNC | O_BINARY , 0644 )"		4945895	0		=			
ANR	4945938	Identifier	fd		4945895	0					
ANR	4945939	CallExpression	"r_sandbox_open ( dbname , O_WRONLY | O_CREAT | O_TRUNC | O_BINARY , 0644 )"		4945895	1					
ANR	4945940	Callee	r_sandbox_open		4945895	0					
ANR	4945941	Identifier	r_sandbox_open		4945895	0					
ANR	4945942	ArgumentList	dbname		4945895	1					
ANR	4945943	Argument	dbname		4945895	0					
ANR	4945944	Identifier	dbname		4945895	0					
ANR	4945945	Argument	O_WRONLY | O_CREAT | O_TRUNC | O_BINARY		4945895	1					
ANR	4945946	InclusiveOrExpression	O_WRONLY | O_CREAT | O_TRUNC | O_BINARY		4945895	0		|			
ANR	4945947	Identifier	O_WRONLY		4945895	0					
ANR	4945948	InclusiveOrExpression	O_CREAT | O_TRUNC | O_BINARY		4945895	1		|			
ANR	4945949	Identifier	O_CREAT		4945895	0					
ANR	4945950	InclusiveOrExpression	O_TRUNC | O_BINARY		4945895	1		|			
ANR	4945951	Identifier	O_TRUNC		4945895	0					
ANR	4945952	Identifier	O_BINARY		4945895	1					
ANR	4945953	Argument	0644		4945895	2					
ANR	4945954	PrimaryExpression	0644		4945895	0					
ANR	4945955	UnaryOperationExpression	- 1		4945895	1					
ANR	4945956	UnaryOperator	-		4945895	0					
ANR	4945957	PrimaryExpression	1		4945895	1					
ANR	4945958	CompoundStatement		12:83:183:183	4945895	1					
ANR	4945959	ExpressionStatement	"file_error ( ms , errno , ""cannot open `%s'"" , dbname )"	1893:2:42591:42640	4945895	0	True				
ANR	4945960	CallExpression	"file_error ( ms , errno , ""cannot open `%s'"" , dbname )"		4945895	0					
ANR	4945961	Callee	file_error		4945895	0					
ANR	4945962	Identifier	file_error		4945895	0					
ANR	4945963	ArgumentList	ms		4945895	1					
ANR	4945964	Argument	ms		4945895	0					
ANR	4945965	Identifier	ms		4945895	0					
ANR	4945966	Argument	errno		4945895	1					
ANR	4945967	Identifier	errno		4945895	0					
ANR	4945968	Argument	"""cannot open `%s'"""		4945895	2					
ANR	4945969	PrimaryExpression	"""cannot open `%s'"""		4945895	0					
ANR	4945970	Argument	dbname		4945895	3					
ANR	4945971	Identifier	dbname		4945895	0					
ANR	4945972	GotoStatement	goto out ;	1894:2:42644:42652	4945895	1	True				
ANR	4945973	Identifier	out		4945895	0					
ANR	4945974	IfStatement	"if ( write ( fd , ar , sizeof ( ar ) ) != ( int ) sizeof ( ar ) )"		4945895	6					
ANR	4945975	Condition	"write ( fd , ar , sizeof ( ar ) ) != ( int ) sizeof ( ar )"	1897:5:42663:42708	4945895	0	True				
ANR	4945976	EqualityExpression	"write ( fd , ar , sizeof ( ar ) ) != ( int ) sizeof ( ar )"		4945895	0		!=			
ANR	4945977	CallExpression	"write ( fd , ar , sizeof ( ar ) )"		4945895	0					
ANR	4945978	Callee	write		4945895	0					
ANR	4945979	Identifier	write		4945895	0					
ANR	4945980	ArgumentList	fd		4945895	1					
ANR	4945981	Argument	fd		4945895	0					
ANR	4945982	Identifier	fd		4945895	0					
ANR	4945983	Argument	ar		4945895	1					
ANR	4945984	Identifier	ar		4945895	0					
ANR	4945985	Argument	sizeof ( ar )		4945895	2					
ANR	4945986	SizeofExpression	sizeof ( ar )		4945895	0					
ANR	4945987	Sizeof	sizeof		4945895	0					
ANR	4945988	SizeofOperand	ar		4945895	1					
ANR	4945989	CastExpression	( int ) sizeof ( ar )		4945895	1					
ANR	4945990	CastTarget	int		4945895	0					
ANR	4945991	SizeofExpression	sizeof ( ar )		4945895	1					
ANR	4945992	Sizeof	sizeof		4945895	0					
ANR	4945993	SizeofOperand	ar		4945895	1					
ANR	4945994	CompoundStatement		17:53:307:307	4945895	1					
ANR	4945995	ExpressionStatement	"file_error ( ms , errno , ""error writing `%s'"" , dbname )"	1898:2:42715:42766	4945895	0	True				
ANR	4945996	CallExpression	"file_error ( ms , errno , ""error writing `%s'"" , dbname )"		4945895	0					
ANR	4945997	Callee	file_error		4945895	0					
ANR	4945998	Identifier	file_error		4945895	0					
ANR	4945999	ArgumentList	ms		4945895	1					
ANR	4946000	Argument	ms		4945895	0					
ANR	4946001	Identifier	ms		4945895	0					
ANR	4946002	Argument	errno		4945895	1					
ANR	4946003	Identifier	errno		4945895	0					
ANR	4946004	Argument	"""error writing `%s'"""		4945895	2					
ANR	4946005	PrimaryExpression	"""error writing `%s'"""		4945895	0					
ANR	4946006	Argument	dbname		4945895	3					
ANR	4946007	Identifier	dbname		4945895	0					
ANR	4946008	GotoStatement	goto beach ;	1899:2:42770:42780	4945895	1	True				
ANR	4946009	Identifier	beach		4945895	0					
ANR	4946010	IfStatement	"if ( lseek ( fd , ( off_t ) sizeof ( struct r_magic ) , SEEK_SET ) != sizeof ( struct r_magic ) )"		4945895	7					
ANR	4946011	Condition	"lseek ( fd , ( off_t ) sizeof ( struct r_magic ) , SEEK_SET ) != sizeof ( struct r_magic )"	1902:5:42791:42873	4945895	0	True				
ANR	4946012	EqualityExpression	"lseek ( fd , ( off_t ) sizeof ( struct r_magic ) , SEEK_SET ) != sizeof ( struct r_magic )"		4945895	0		!=			
ANR	4946013	CallExpression	"lseek ( fd , ( off_t ) sizeof ( struct r_magic ) , SEEK_SET )"		4945895	0					
ANR	4946014	Callee	lseek		4945895	0					
ANR	4946015	Identifier	lseek		4945895	0					
ANR	4946016	ArgumentList	fd		4945895	1					
ANR	4946017	Argument	fd		4945895	0					
ANR	4946018	Identifier	fd		4945895	0					
ANR	4946019	Argument	( off_t ) sizeof ( struct r_magic )		4945895	1					
ANR	4946020	CastExpression	( off_t ) sizeof ( struct r_magic )		4945895	0					
ANR	4946021	CastTarget	off_t		4945895	0					
ANR	4946022	SizeofExpression	sizeof ( struct r_magic )		4945895	1					
ANR	4946023	Sizeof	sizeof		4945895	0					
ANR	4946024	SizeofOperand	struct r_magic		4945895	1					
ANR	4946025	Argument	SEEK_SET		4945895	2					
ANR	4946026	Identifier	SEEK_SET		4945895	0					
ANR	4946027	SizeofExpression	sizeof ( struct r_magic )		4945895	1					
ANR	4946028	Sizeof	sizeof		4945895	0					
ANR	4946029	SizeofOperand	struct r_magic		4945895	1					
ANR	4946030	CompoundStatement		23:33:472:472	4945895	1					
ANR	4946031	ExpressionStatement	"file_error ( ms , errno , ""error seeking `%s'"" , dbname )"	1904:2:42880:42931	4945895	0	True				
ANR	4946032	CallExpression	"file_error ( ms , errno , ""error seeking `%s'"" , dbname )"		4945895	0					
ANR	4946033	Callee	file_error		4945895	0					
ANR	4946034	Identifier	file_error		4945895	0					
ANR	4946035	ArgumentList	ms		4945895	1					
ANR	4946036	Argument	ms		4945895	0					
ANR	4946037	Identifier	ms		4945895	0					
ANR	4946038	Argument	errno		4945895	1					
ANR	4946039	Identifier	errno		4945895	0					
ANR	4946040	Argument	"""error seeking `%s'"""		4945895	2					
ANR	4946041	PrimaryExpression	"""error seeking `%s'"""		4945895	0					
ANR	4946042	Argument	dbname		4945895	3					
ANR	4946043	Identifier	dbname		4945895	0					
ANR	4946044	GotoStatement	goto beach ;	1905:2:42935:42945	4945895	1	True				
ANR	4946045	Identifier	beach		4945895	0					
ANR	4946046	IfStatement	"if ( write ( fd , * magicp , ( sizeof ( struct r_magic ) * * nmagicp ) ) != ( int ) ( sizeof ( struct r_magic ) * * nmagicp ) )"		4945895	8					
ANR	4946047	Condition	"write ( fd , * magicp , ( sizeof ( struct r_magic ) * * nmagicp ) ) != ( int ) ( sizeof ( struct r_magic ) * * nmagicp )"	1908:5:42956:43061	4945895	0	True				
ANR	4946048	EqualityExpression	"write ( fd , * magicp , ( sizeof ( struct r_magic ) * * nmagicp ) ) != ( int ) ( sizeof ( struct r_magic ) * * nmagicp )"		4945895	0		!=			
ANR	4946049	CallExpression	"write ( fd , * magicp , ( sizeof ( struct r_magic ) * * nmagicp ) )"		4945895	0					
ANR	4946050	Callee	write		4945895	0					
ANR	4946051	Identifier	write		4945895	0					
ANR	4946052	ArgumentList	fd		4945895	1					
ANR	4946053	Argument	fd		4945895	0					
ANR	4946054	Identifier	fd		4945895	0					
ANR	4946055	Argument	* magicp		4945895	1					
ANR	4946056	UnaryOperationExpression	* magicp		4945895	0					
ANR	4946057	UnaryOperator	*		4945895	0					
ANR	4946058	Identifier	magicp		4945895	1					
ANR	4946059	Argument	sizeof ( struct r_magic ) * * nmagicp		4945895	2					
ANR	4946060	MultiplicativeExpression	sizeof ( struct r_magic ) * * nmagicp		4945895	0		*			
ANR	4946061	SizeofExpression	sizeof ( struct r_magic )		4945895	0					
ANR	4946062	Sizeof	sizeof		4945895	0					
ANR	4946063	SizeofOperand	struct r_magic		4945895	1					
ANR	4946064	UnaryOperationExpression	* nmagicp		4945895	1					
ANR	4946065	UnaryOperator	*		4945895	0					
ANR	4946066	Identifier	nmagicp		4945895	1					
ANR	4946067	CastExpression	( int ) ( sizeof ( struct r_magic ) * * nmagicp )		4945895	1					
ANR	4946068	CastTarget	int		4945895	0					
ANR	4946069	MultiplicativeExpression	sizeof ( struct r_magic ) * * nmagicp		4945895	1		*			
ANR	4946070	SizeofExpression	sizeof ( struct r_magic )		4945895	0					
ANR	4946071	Sizeof	sizeof		4945895	0					
ANR	4946072	SizeofOperand	struct r_magic		4945895	1					
ANR	4946073	UnaryOperationExpression	* nmagicp		4945895	1					
ANR	4946074	UnaryOperator	*		4945895	0					
ANR	4946075	Identifier	nmagicp		4945895	1					
ANR	4946076	CompoundStatement		29:51:660:660	4945895	1					
ANR	4946077	ExpressionStatement	"file_error ( ms , errno , ""error writing `%s'"" , dbname )"	1910:2:43068:43119	4945895	0	True				
ANR	4946078	CallExpression	"file_error ( ms , errno , ""error writing `%s'"" , dbname )"		4945895	0					
ANR	4946079	Callee	file_error		4945895	0					
ANR	4946080	Identifier	file_error		4945895	0					
ANR	4946081	ArgumentList	ms		4945895	1					
ANR	4946082	Argument	ms		4945895	0					
ANR	4946083	Identifier	ms		4945895	0					
ANR	4946084	Argument	errno		4945895	1					
ANR	4946085	Identifier	errno		4945895	0					
ANR	4946086	Argument	"""error writing `%s'"""		4945895	2					
ANR	4946087	PrimaryExpression	"""error writing `%s'"""		4945895	0					
ANR	4946088	Argument	dbname		4945895	3					
ANR	4946089	Identifier	dbname		4945895	0					
ANR	4946090	GotoStatement	goto beach ;	1911:2:43123:43133	4945895	1	True				
ANR	4946091	Identifier	beach		4945895	0					
ANR	4946092	ExpressionStatement	rv = 0	1914:1:43140:43146	4945895	9	True				
ANR	4946093	AssignmentExpression	rv = 0		4945895	0		=			
ANR	4946094	Identifier	rv		4945895	0					
ANR	4946095	PrimaryExpression	0		4945895	1					
ANR	4946096	Label	beach :	1915:0:43148:43153	4945895	10	True				
ANR	4946097	Identifier	beach		4945895	0					
ANR	4946098	ExpressionStatement	( void ) close ( fd )	1916:1:43156:43171	4945895	11	True				
ANR	4946099	CastExpression	( void ) close ( fd )		4945895	0					
ANR	4946100	CastTarget	void		4945895	0					
ANR	4946101	CallExpression	close ( fd )		4945895	1					
ANR	4946102	Callee	close		4945895	0					
ANR	4946103	Identifier	close		4945895	0					
ANR	4946104	ArgumentList	fd		4945895	1					
ANR	4946105	Argument	fd		4945895	0					
ANR	4946106	Identifier	fd		4945895	0					
ANR	4946107	Label	out :	1917:0:43173:43176	4945895	12	True				
ANR	4946108	Identifier	out		4945895	0					
ANR	4946109	ExpressionStatement	free ( dbname )	1918:1:43179:43191	4945895	13	True				
ANR	4946110	CallExpression	free ( dbname )		4945895	0					
ANR	4946111	Callee	free		4945895	0					
ANR	4946112	Identifier	free		4945895	0					
ANR	4946113	ArgumentList	dbname		4945895	1					
ANR	4946114	Argument	dbname		4945895	0					
ANR	4946115	Identifier	dbname		4945895	0					
ANR	4946116	ReturnStatement	return rv ;	1919:1:43194:43203	4945895	14	True				
ANR	4946117	Identifier	rv		4945895	0					
ANR	4946118	ReturnType	static int		4945895	1					
ANR	4946119	Identifier	apprentice_compile		4945895	2					
ANR	4946120	ParameterList	"RMagic * ms , struct r_magic * * magicp , ut32 * nmagicp , const char * fn"		4945895	3					
ANR	4946121	Parameter	RMagic * ms	1881:30:42335:42344	4945895	0	True				
ANR	4946122	ParameterType	RMagic *		4945895	0					
ANR	4946123	Identifier	ms		4945895	1					
ANR	4946124	Parameter	struct r_magic * * magicp	1881:42:42347:42369	4945895	1	True				
ANR	4946125	ParameterType	struct r_magic * *		4945895	0					
ANR	4946126	Identifier	magicp		4945895	1					
ANR	4946127	Parameter	ut32 * nmagicp	1881:67:42372:42384	4945895	2	True				
ANR	4946128	ParameterType	ut32 *		4945895	0					
ANR	4946129	Identifier	nmagicp		4945895	1					
ANR	4946130	Parameter	const char * fn	1881:82:42387:42400	4945895	3	True				
ANR	4946131	ParameterType	const char *		4945895	0					
ANR	4946132	Identifier	fn		4945895	1					
ANR	4946133	CFGEntryNode	ENTRY		4945895		True				
ANR	4946134	CFGExitNode	EXIT		4945895		True				
ANR	4946135	Symbol	SEEK_SET		4945895						
ANR	4946136	Symbol	errno		4945895						
ANR	4946137	Symbol	lseek		4945895						
ANR	4946138	Symbol	magicp		4945895						
ANR	4946139	Symbol	nmagicp		4945895						
ANR	4946140	Symbol	rv		4945895						
ANR	4946141	Symbol	O_BINARY		4945895						
ANR	4946142	Symbol	ms		4945895						
ANR	4946143	Symbol	O_CREAT		4945895						
ANR	4946144	Symbol	fn		4945895						
ANR	4946145	Symbol	* nmagicp		4945895						
ANR	4946146	Symbol	mkdbname		4945895						
ANR	4946147	Symbol	ar		4945895						
ANR	4946148	Symbol	r_sandbox_open		4945895						
ANR	4946149	Symbol	O_TRUNC		4945895						
ANR	4946150	Symbol	dbname		4945895						
ANR	4946151	Symbol	* magicp		4945895						
ANR	4946152	Symbol	O_WRONLY		4945895						
ANR	4946153	Symbol	write		4945895						
ANR	4946154	Symbol	fd		4945895						
ANR	4946155	DeclStmt									
ANR	4946156	Decl							const char	const char [ ]	ext
ANR	4946157	Function	mkdbname	1926:0:43266:43703							
ANR	4946158	FunctionDef	"mkdbname (const char * fn , int strip)"		4946157	0					
ANR	4946159	CompoundStatement		1926:49:43315:43703	4946157	0					
ANR	4946160	IdentifierDeclStatement	char * buf = NULL ;	1927:1:43318:43334	4946157	0	True				
ANR	4946161	IdentifierDecl	* buf = NULL		4946157	0					
ANR	4946162	IdentifierDeclType	char *		4946157	0					
ANR	4946163	Identifier	buf		4946157	1					
ANR	4946164	AssignmentExpression	* buf = NULL		4946157	2		=			
ANR	4946165	Identifier	NULL		4946157	0					
ANR	4946166	Identifier	NULL		4946157	1					
ANR	4946167	IdentifierDeclStatement	"int fnlen , extlen ;"	1928:1:43337:43354	4946157	1	True				
ANR	4946168	IdentifierDecl	fnlen		4946157	0					
ANR	4946169	IdentifierDeclType	int		4946157	0					
ANR	4946170	Identifier	fnlen		4946157	1					
ANR	4946171	IdentifierDecl	extlen		4946157	1					
ANR	4946172	IdentifierDeclType	int		4946157	0					
ANR	4946173	Identifier	extlen		4946157	1					
ANR	4946174	IfStatement	if ( strip )		4946157	2					
ANR	4946175	Condition	strip	1929:5:43361:43365	4946157	0	True				
ANR	4946176	Identifier	strip		4946157	0					
ANR	4946177	CompoundStatement		5:2:56:69	4946157	1					
ANR	4946178	IdentifierDeclStatement	const char * p ;	1930:2:43372:43385	4946157	0	True				
ANR	4946179	IdentifierDecl	* p		4946157	0					
ANR	4946180	IdentifierDeclType	const char *		4946157	0					
ANR	4946181	Identifier	p		4946157	1					
ANR	4946182	IfStatement	"if ( ( p = strrchr ( fn , '/' ) ) != NULL )"		4946157	1					
ANR	4946183	Condition	"( p = strrchr ( fn , '/' ) ) != NULL"	1931:6:43393:43423	4946157	0	True				
ANR	4946184	EqualityExpression	"( p = strrchr ( fn , '/' ) ) != NULL"		4946157	0		!=			
ANR	4946185	AssignmentExpression	"p = strrchr ( fn , '/' )"		4946157	0		=			
ANR	4946186	Identifier	p		4946157	0					
ANR	4946187	CallExpression	"strrchr ( fn , '/' )"		4946157	1					
ANR	4946188	Callee	strrchr		4946157	0					
ANR	4946189	Identifier	strrchr		4946157	0					
ANR	4946190	ArgumentList	fn		4946157	1					
ANR	4946191	Argument	fn		4946157	0					
ANR	4946192	Identifier	fn		4946157	0					
ANR	4946193	Argument	'/'		4946157	1					
ANR	4946194	PrimaryExpression	'/'		4946157	0					
ANR	4946195	Identifier	NULL		4946157	1					
ANR	4946196	CompoundStatement		6:39:110:110	4946157	1					
ANR	4946197	ExpressionStatement	fn = ++ p	1932:3:43431:43439	4946157	0	True				
ANR	4946198	AssignmentExpression	fn = ++ p		4946157	0		=			
ANR	4946199	Identifier	fn		4946157	0					
ANR	4946200	UnaryExpression	++ p		4946157	1					
ANR	4946201	IncDec	++		4946157	0					
ANR	4946202	Identifier	p		4946157	1					
ANR	4946203	ExpressionStatement	fnlen = strlen ( fn )	1935:1:43449:43468	4946157	3	True				
ANR	4946204	AssignmentExpression	fnlen = strlen ( fn )		4946157	0		=			
ANR	4946205	Identifier	fnlen		4946157	0					
ANR	4946206	CallExpression	strlen ( fn )		4946157	1					
ANR	4946207	Callee	strlen		4946157	0					
ANR	4946208	Identifier	strlen		4946157	0					
ANR	4946209	ArgumentList	fn		4946157	1					
ANR	4946210	Argument	fn		4946157	0					
ANR	4946211	Identifier	fn		4946157	0					
ANR	4946212	ExpressionStatement	extlen = strlen ( ext )	1936:1:43471:43492	4946157	4	True				
ANR	4946213	AssignmentExpression	extlen = strlen ( ext )		4946157	0		=			
ANR	4946214	Identifier	extlen		4946157	0					
ANR	4946215	CallExpression	strlen ( ext )		4946157	1					
ANR	4946216	Callee	strlen		4946157	0					
ANR	4946217	Identifier	strlen		4946157	0					
ANR	4946218	ArgumentList	ext		4946157	1					
ANR	4946219	Argument	ext		4946157	0					
ANR	4946220	Identifier	ext		4946157	0					
ANR	4946221	IfStatement	if ( fnlen + extlen + 1 > MAXPATHLEN )		4946157	5					
ANR	4946222	Condition	fnlen + extlen + 1 > MAXPATHLEN	1937:5:43499:43529	4946157	0	True				
ANR	4946223	RelationalExpression	fnlen + extlen + 1 > MAXPATHLEN		4946157	0		>			
ANR	4946224	AdditiveExpression	fnlen + extlen + 1		4946157	0		+			
ANR	4946225	Identifier	fnlen		4946157	0					
ANR	4946226	AdditiveExpression	extlen + 1		4946157	1		+			
ANR	4946227	Identifier	extlen		4946157	0					
ANR	4946228	PrimaryExpression	1		4946157	1					
ANR	4946229	Identifier	MAXPATHLEN		4946157	1					
ANR	4946230	CompoundStatement		12:38:216:216	4946157	1					
ANR	4946231	ReturnStatement	return NULL ;	1938:2:43536:43547	4946157	0	True				
ANR	4946232	Identifier	NULL		4946157	0					
ANR	4946233	ExpressionStatement	buf = malloc ( fnlen + extlen + 1 )	1940:1:43553:43586	4946157	6	True				
ANR	4946234	AssignmentExpression	buf = malloc ( fnlen + extlen + 1 )		4946157	0		=			
ANR	4946235	Identifier	buf		4946157	0					
ANR	4946236	CallExpression	malloc ( fnlen + extlen + 1 )		4946157	1					
ANR	4946237	Callee	malloc		4946157	0					
ANR	4946238	Identifier	malloc		4946157	0					
ANR	4946239	ArgumentList	fnlen + extlen + 1		4946157	1					
ANR	4946240	Argument	fnlen + extlen + 1		4946157	0					
ANR	4946241	AdditiveExpression	fnlen + extlen + 1		4946157	0		+			
ANR	4946242	Identifier	fnlen		4946157	0					
ANR	4946243	AdditiveExpression	extlen + 1		4946157	1		+			
ANR	4946244	Identifier	extlen		4946157	0					
ANR	4946245	PrimaryExpression	1		4946157	1					
ANR	4946246	IfStatement	if ( buf )		4946157	7					
ANR	4946247	Condition	buf	1941:5:43593:43595	4946157	0	True				
ANR	4946248	Identifier	buf		4946157	0					
ANR	4946249	CompoundStatement		16:10:282:282	4946157	1					
ANR	4946250	ExpressionStatement	"memcpy ( buf , fn , fnlen )"	1942:2:43602:43625	4946157	0	True				
ANR	4946251	CallExpression	"memcpy ( buf , fn , fnlen )"		4946157	0					
ANR	4946252	Callee	memcpy		4946157	0					
ANR	4946253	Identifier	memcpy		4946157	0					
ANR	4946254	ArgumentList	buf		4946157	1					
ANR	4946255	Argument	buf		4946157	0					
ANR	4946256	Identifier	buf		4946157	0					
ANR	4946257	Argument	fn		4946157	1					
ANR	4946258	Identifier	fn		4946157	0					
ANR	4946259	Argument	fnlen		4946157	2					
ANR	4946260	Identifier	fnlen		4946157	0					
ANR	4946261	ExpressionStatement	"memcpy ( buf + fnlen , ext , extlen )"	1943:2:43629:43660	4946157	1	True				
ANR	4946262	CallExpression	"memcpy ( buf + fnlen , ext , extlen )"		4946157	0					
ANR	4946263	Callee	memcpy		4946157	0					
ANR	4946264	Identifier	memcpy		4946157	0					
ANR	4946265	ArgumentList	buf + fnlen		4946157	1					
ANR	4946266	Argument	buf + fnlen		4946157	0					
ANR	4946267	AdditiveExpression	buf + fnlen		4946157	0		+			
ANR	4946268	Identifier	buf		4946157	0					
ANR	4946269	Identifier	fnlen		4946157	1					
ANR	4946270	Argument	ext		4946157	1					
ANR	4946271	Identifier	ext		4946157	0					
ANR	4946272	Argument	extlen		4946157	2					
ANR	4946273	Identifier	extlen		4946157	0					
ANR	4946274	ExpressionStatement	buf [ fnlen + extlen ] = 0	1944:2:43664:43685	4946157	2	True				
ANR	4946275	AssignmentExpression	buf [ fnlen + extlen ] = 0		4946157	0		=			
ANR	4946276	ArrayIndexing	buf [ fnlen + extlen ]		4946157	0					
ANR	4946277	Identifier	buf		4946157	0					
ANR	4946278	AdditiveExpression	fnlen + extlen		4946157	1		+			
ANR	4946279	Identifier	fnlen		4946157	0					
ANR	4946280	Identifier	extlen		4946157	1					
ANR	4946281	PrimaryExpression	0		4946157	1					
ANR	4946282	ReturnStatement	return buf ;	1946:1:43691:43701	4946157	8	True				
ANR	4946283	Identifier	buf		4946157	0					
ANR	4946284	ReturnType	static char *		4946157	1					
ANR	4946285	Identifier	mkdbname		4946157	2					
ANR	4946286	ParameterList	"const char * fn , int strip"		4946157	3					
ANR	4946287	Parameter	const char * fn	1926:22:43288:43301	4946157	0	True				
ANR	4946288	ParameterType	const char *		4946157	0					
ANR	4946289	Identifier	fn		4946157	1					
ANR	4946290	Parameter	int strip	1926:38:43304:43312	4946157	1	True				
ANR	4946291	ParameterType	int		4946157	0					
ANR	4946292	Identifier	strip		4946157	1					
ANR	4946293	CFGEntryNode	ENTRY		4946157		True				
ANR	4946294	CFGExitNode	EXIT		4946157		True				
ANR	4946295	Symbol	ext		4946157						
ANR	4946296	Symbol	malloc		4946157						
ANR	4946297	Symbol	* buf		4946157						
ANR	4946298	Symbol	NULL		4946157						
ANR	4946299	Symbol	* fnlen		4946157						
ANR	4946300	Symbol	fn		4946157						
ANR	4946301	Symbol	* extlen		4946157						
ANR	4946302	Symbol	p		4946157						
ANR	4946303	Symbol	strlen		4946157						
ANR	4946304	Symbol	MAXPATHLEN		4946157						
ANR	4946305	Symbol	buf		4946157						
ANR	4946306	Symbol	strip		4946157						
ANR	4946307	Symbol	strrchr		4946157						
ANR	4946308	Symbol	fnlen		4946157						
ANR	4946309	Symbol	extlen		4946157						
ANR	4946310	Function	byteswap	1952:0:43751:43873							
ANR	4946311	FunctionDef	"byteswap (struct r_magic * magic , ut32 nmagic)"		4946310	0					
ANR	4946312	CompoundStatement		1952:57:43808:43873	4946310	0					
ANR	4946313	IdentifierDeclStatement	ut32 i ;	1953:1:43811:43817	4946310	0	True				
ANR	4946314	IdentifierDecl	i		4946310	0					
ANR	4946315	IdentifierDeclType	ut32		4946310	0					
ANR	4946316	Identifier	i		4946310	1					
ANR	4946317	ForStatement	for ( i = 0 ; i < nmagic ; i ++ )		4946310	1					
ANR	4946318	ForInit	i = 0 ;	1954:6:43825:43830	4946310	0	True				
ANR	4946319	AssignmentExpression	i = 0		4946310	0		=			
ANR	4946320	Identifier	i		4946310	0					
ANR	4946321	PrimaryExpression	0		4946310	1					
ANR	4946322	Condition	i < nmagic	1954:13:43832:43841	4946310	1	True				
ANR	4946323	RelationalExpression	i < nmagic		4946310	0		<			
ANR	4946324	Identifier	i		4946310	0					
ANR	4946325	Identifier	nmagic		4946310	1					
ANR	4946326	PostIncDecOperationExpression	i ++	1954:25:43844:43846	4946310	2	True				
ANR	4946327	Identifier	i		4946310	0					
ANR	4946328	IncDec	++		4946310	1					
ANR	4946329	CompoundStatement		3:30:40:40	4946310	3					
ANR	4946330	ExpressionStatement	bs1 ( & magic [ i ] )	1955:2:43853:43868	4946310	0	True				
ANR	4946331	CallExpression	bs1 ( & magic [ i ] )		4946310	0					
ANR	4946332	Callee	bs1		4946310	0					
ANR	4946333	Identifier	bs1		4946310	0					
ANR	4946334	ArgumentList	& magic [ i ]		4946310	1					
ANR	4946335	Argument	& magic [ i ]		4946310	0					
ANR	4946336	UnaryOperationExpression	& magic [ i ]		4946310	0					
ANR	4946337	UnaryOperator	&		4946310	0					
ANR	4946338	ArrayIndexing	magic [ i ]		4946310	1					
ANR	4946339	Identifier	magic		4946310	0					
ANR	4946340	Identifier	i		4946310	1					
ANR	4946341	ReturnType	static void		4946310	1					
ANR	4946342	Identifier	byteswap		4946310	2					
ANR	4946343	ParameterList	"struct r_magic * magic , ut32 nmagic"		4946310	3					
ANR	4946344	Parameter	struct r_magic * magic	1952:21:43772:43792	4946310	0	True				
ANR	4946345	ParameterType	struct r_magic *		4946310	0					
ANR	4946346	Identifier	magic		4946310	1					
ANR	4946347	Parameter	ut32 nmagic	1952:44:43795:43805	4946310	1	True				
ANR	4946348	ParameterType	ut32		4946310	0					
ANR	4946349	Identifier	nmagic		4946310	1					
ANR	4946350	CFGEntryNode	ENTRY		4946310		True				
ANR	4946351	CFGExitNode	EXIT		4946310		True				
ANR	4946352	Symbol	magic		4946310						
ANR	4946353	Symbol	i		4946310						
ANR	4946354	Symbol	nmagic		4946310						
ANR	4946355	Function	swap2	1962:0:43899:44038							
ANR	4946356	FunctionDef	swap2 (ut16 sv)		4946355	0					
ANR	4946357	CompoundStatement		1962:27:43926:44038	4946355	0					
ANR	4946358	IdentifierDeclStatement	ut16 rv ;	1963:1:43929:43936	4946355	0	True				
ANR	4946359	IdentifierDecl	rv		4946355	0					
ANR	4946360	IdentifierDeclType	ut16		4946355	0					
ANR	4946361	Identifier	rv		4946355	1					
ANR	4946362	IdentifierDeclStatement	ut8 * s = ( ut8 * ) ( void * ) & sv ;	1964:1:43939:43966	4946355	1	True				
ANR	4946363	IdentifierDecl	* s = ( ut8 * ) ( void * ) & sv		4946355	0					
ANR	4946364	IdentifierDeclType	ut8 *		4946355	0					
ANR	4946365	Identifier	s		4946355	1					
ANR	4946366	AssignmentExpression	* s = ( ut8 * ) ( void * ) & sv		4946355	2		=			
ANR	4946367	Identifier	s		4946355	0					
ANR	4946368	CastExpression	( ut8 * ) ( void * ) & sv		4946355	1					
ANR	4946369	CastTarget	ut8 *		4946355	0					
ANR	4946370	CastExpression	( void * ) & sv		4946355	1					
ANR	4946371	CastTarget	void *		4946355	0					
ANR	4946372	UnaryOperationExpression	& sv		4946355	1					
ANR	4946373	UnaryOperator	&		4946355	0					
ANR	4946374	Identifier	sv		4946355	1					
ANR	4946375	IdentifierDeclStatement	ut8 * d = ( ut8 * ) ( void * ) & rv ;	1965:1:43969:43996	4946355	2	True				
ANR	4946376	IdentifierDecl	* d = ( ut8 * ) ( void * ) & rv		4946355	0					
ANR	4946377	IdentifierDeclType	ut8 *		4946355	0					
ANR	4946378	Identifier	d		4946355	1					
ANR	4946379	AssignmentExpression	* d = ( ut8 * ) ( void * ) & rv		4946355	2		=			
ANR	4946380	Identifier	d		4946355	0					
ANR	4946381	CastExpression	( ut8 * ) ( void * ) & rv		4946355	1					
ANR	4946382	CastTarget	ut8 *		4946355	0					
ANR	4946383	CastExpression	( void * ) & rv		4946355	1					
ANR	4946384	CastTarget	void *		4946355	0					
ANR	4946385	UnaryOperationExpression	& rv		4946355	1					
ANR	4946386	UnaryOperator	&		4946355	0					
ANR	4946387	Identifier	rv		4946355	1					
ANR	4946388	ExpressionStatement	d [ 0 ] = s [ 1 ]	1966:1:43999:44010	4946355	3	True				
ANR	4946389	AssignmentExpression	d [ 0 ] = s [ 1 ]		4946355	0		=			
ANR	4946390	ArrayIndexing	d [ 0 ]		4946355	0					
ANR	4946391	Identifier	d		4946355	0					
ANR	4946392	PrimaryExpression	0		4946355	1					
ANR	4946393	ArrayIndexing	s [ 1 ]		4946355	1					
ANR	4946394	Identifier	s		4946355	0					
ANR	4946395	PrimaryExpression	1		4946355	1					
ANR	4946396	ExpressionStatement	d [ 1 ] = s [ 0 ]	1967:1:44013:44024	4946355	4	True				
ANR	4946397	AssignmentExpression	d [ 1 ] = s [ 0 ]		4946355	0		=			
ANR	4946398	ArrayIndexing	d [ 1 ]		4946355	0					
ANR	4946399	Identifier	d		4946355	0					
ANR	4946400	PrimaryExpression	1		4946355	1					
ANR	4946401	ArrayIndexing	s [ 0 ]		4946355	1					
ANR	4946402	Identifier	s		4946355	0					
ANR	4946403	PrimaryExpression	0		4946355	1					
ANR	4946404	ReturnStatement	return rv ;	1968:1:44027:44036	4946355	5	True				
ANR	4946405	Identifier	rv		4946355	0					
ANR	4946406	ReturnType	static ut16		4946355	1					
ANR	4946407	Identifier	swap2		4946355	2					
ANR	4946408	ParameterList	ut16 sv		4946355	3					
ANR	4946409	Parameter	ut16 sv	1962:18:43917:43923	4946355	0	True				
ANR	4946410	ParameterType	ut16		4946355	0					
ANR	4946411	Identifier	sv		4946355	1					
ANR	4946412	CFGEntryNode	ENTRY		4946355		True				
ANR	4946413	CFGExitNode	EXIT		4946355		True				
ANR	4946414	Symbol	sv		4946355						
ANR	4946415	Symbol	s		4946355						
ANR	4946416	Symbol	rv		4946355						
ANR	4946417	Symbol	d		4946355						
ANR	4946418	Symbol	& sv		4946355						
ANR	4946419	Symbol	* s		4946355						
ANR	4946420	Symbol	* d		4946355						
ANR	4946421	Symbol	& rv		4946355						
ANR	4946422	Function	swap4	1974:0:44063:44230							
ANR	4946423	FunctionDef	swap4 (ut32 sv)		4946422	0					
ANR	4946424	CompoundStatement		1974:27:44090:44230	4946422	0					
ANR	4946425	IdentifierDeclStatement	ut32 rv ;	1975:1:44093:44100	4946422	0	True				
ANR	4946426	IdentifierDecl	rv		4946422	0					
ANR	4946427	IdentifierDeclType	ut32		4946422	0					
ANR	4946428	Identifier	rv		4946422	1					
ANR	4946429	IdentifierDeclStatement	ut8 * s = ( ut8 * ) ( void * ) & sv ;	1976:1:44103:44130	4946422	1	True				
ANR	4946430	IdentifierDecl	* s = ( ut8 * ) ( void * ) & sv		4946422	0					
ANR	4946431	IdentifierDeclType	ut8 *		4946422	0					
ANR	4946432	Identifier	s		4946422	1					
ANR	4946433	AssignmentExpression	* s = ( ut8 * ) ( void * ) & sv		4946422	2		=			
ANR	4946434	Identifier	s		4946422	0					
ANR	4946435	CastExpression	( ut8 * ) ( void * ) & sv		4946422	1					
ANR	4946436	CastTarget	ut8 *		4946422	0					
ANR	4946437	CastExpression	( void * ) & sv		4946422	1					
ANR	4946438	CastTarget	void *		4946422	0					
ANR	4946439	UnaryOperationExpression	& sv		4946422	1					
ANR	4946440	UnaryOperator	&		4946422	0					
ANR	4946441	Identifier	sv		4946422	1					
ANR	4946442	IdentifierDeclStatement	ut8 * d = ( ut8 * ) ( void * ) & rv ;	1977:1:44133:44160	4946422	2	True				
ANR	4946443	IdentifierDecl	* d = ( ut8 * ) ( void * ) & rv		4946422	0					
ANR	4946444	IdentifierDeclType	ut8 *		4946422	0					
ANR	4946445	Identifier	d		4946422	1					
ANR	4946446	AssignmentExpression	* d = ( ut8 * ) ( void * ) & rv		4946422	2		=			
ANR	4946447	Identifier	d		4946422	0					
ANR	4946448	CastExpression	( ut8 * ) ( void * ) & rv		4946422	1					
ANR	4946449	CastTarget	ut8 *		4946422	0					
ANR	4946450	CastExpression	( void * ) & rv		4946422	1					
ANR	4946451	CastTarget	void *		4946422	0					
ANR	4946452	UnaryOperationExpression	& rv		4946422	1					
ANR	4946453	UnaryOperator	&		4946422	0					
ANR	4946454	Identifier	rv		4946422	1					
ANR	4946455	ExpressionStatement	d [ 0 ] = s [ 3 ]	1978:1:44163:44174	4946422	3	True				
ANR	4946456	AssignmentExpression	d [ 0 ] = s [ 3 ]		4946422	0		=			
ANR	4946457	ArrayIndexing	d [ 0 ]		4946422	0					
ANR	4946458	Identifier	d		4946422	0					
ANR	4946459	PrimaryExpression	0		4946422	1					
ANR	4946460	ArrayIndexing	s [ 3 ]		4946422	1					
ANR	4946461	Identifier	s		4946422	0					
ANR	4946462	PrimaryExpression	3		4946422	1					
ANR	4946463	ExpressionStatement	d [ 1 ] = s [ 2 ]	1979:1:44177:44188	4946422	4	True				
ANR	4946464	AssignmentExpression	d [ 1 ] = s [ 2 ]		4946422	0		=			
ANR	4946465	ArrayIndexing	d [ 1 ]		4946422	0					
ANR	4946466	Identifier	d		4946422	0					
ANR	4946467	PrimaryExpression	1		4946422	1					
ANR	4946468	ArrayIndexing	s [ 2 ]		4946422	1					
ANR	4946469	Identifier	s		4946422	0					
ANR	4946470	PrimaryExpression	2		4946422	1					
ANR	4946471	ExpressionStatement	d [ 2 ] = s [ 1 ]	1980:1:44191:44202	4946422	5	True				
ANR	4946472	AssignmentExpression	d [ 2 ] = s [ 1 ]		4946422	0		=			
ANR	4946473	ArrayIndexing	d [ 2 ]		4946422	0					
ANR	4946474	Identifier	d		4946422	0					
ANR	4946475	PrimaryExpression	2		4946422	1					
ANR	4946476	ArrayIndexing	s [ 1 ]		4946422	1					
ANR	4946477	Identifier	s		4946422	0					
ANR	4946478	PrimaryExpression	1		4946422	1					
ANR	4946479	ExpressionStatement	d [ 3 ] = s [ 0 ]	1981:1:44205:44216	4946422	6	True				
ANR	4946480	AssignmentExpression	d [ 3 ] = s [ 0 ]		4946422	0		=			
ANR	4946481	ArrayIndexing	d [ 3 ]		4946422	0					
ANR	4946482	Identifier	d		4946422	0					
ANR	4946483	PrimaryExpression	3		4946422	1					
ANR	4946484	ArrayIndexing	s [ 0 ]		4946422	1					
ANR	4946485	Identifier	s		4946422	0					
ANR	4946486	PrimaryExpression	0		4946422	1					
ANR	4946487	ReturnStatement	return rv ;	1982:1:44219:44228	4946422	7	True				
ANR	4946488	Identifier	rv		4946422	0					
ANR	4946489	ReturnType	static ut32		4946422	1					
ANR	4946490	Identifier	swap4		4946422	2					
ANR	4946491	ParameterList	ut32 sv		4946422	3					
ANR	4946492	Parameter	ut32 sv	1974:18:44081:44087	4946422	0	True				
ANR	4946493	ParameterType	ut32		4946422	0					
ANR	4946494	Identifier	sv		4946422	1					
ANR	4946495	CFGEntryNode	ENTRY		4946422		True				
ANR	4946496	CFGExitNode	EXIT		4946422		True				
ANR	4946497	Symbol	sv		4946422						
ANR	4946498	Symbol	s		4946422						
ANR	4946499	Symbol	rv		4946422						
ANR	4946500	Symbol	d		4946422						
ANR	4946501	Symbol	& sv		4946422						
ANR	4946502	Symbol	* s		4946422						
ANR	4946503	Symbol	* d		4946422						
ANR	4946504	Symbol	& rv		4946422						
ANR	4946505	Function	swap8	1988:0:44255:44609							
ANR	4946506	FunctionDef	swap8 (ut64 sv)		4946505	0					
ANR	4946507	CompoundStatement		1988:27:44282:44609	4946505	0					
ANR	4946508	IdentifierDeclStatement	ut64 rv ;	1989:1:44285:44292	4946505	0	True				
ANR	4946509	IdentifierDecl	rv		4946505	0					
ANR	4946510	IdentifierDeclType	ut64		4946505	0					
ANR	4946511	Identifier	rv		4946505	1					
ANR	4946512	IdentifierDeclStatement	ut8 * s = ( ut8 * ) ( void * ) & sv ;	1990:1:44295:44322	4946505	1	True				
ANR	4946513	IdentifierDecl	* s = ( ut8 * ) ( void * ) & sv		4946505	0					
ANR	4946514	IdentifierDeclType	ut8 *		4946505	0					
ANR	4946515	Identifier	s		4946505	1					
ANR	4946516	AssignmentExpression	* s = ( ut8 * ) ( void * ) & sv		4946505	2		=			
ANR	4946517	Identifier	s		4946505	0					
ANR	4946518	CastExpression	( ut8 * ) ( void * ) & sv		4946505	1					
ANR	4946519	CastTarget	ut8 *		4946505	0					
ANR	4946520	CastExpression	( void * ) & sv		4946505	1					
ANR	4946521	CastTarget	void *		4946505	0					
ANR	4946522	UnaryOperationExpression	& sv		4946505	1					
ANR	4946523	UnaryOperator	&		4946505	0					
ANR	4946524	Identifier	sv		4946505	1					
ANR	4946525	IdentifierDeclStatement	ut8 * d = ( ut8 * ) ( void * ) & rv ;	1991:1:44325:44352	4946505	2	True				
ANR	4946526	IdentifierDecl	* d = ( ut8 * ) ( void * ) & rv		4946505	0					
ANR	4946527	IdentifierDeclType	ut8 *		4946505	0					
ANR	4946528	Identifier	d		4946505	1					
ANR	4946529	AssignmentExpression	* d = ( ut8 * ) ( void * ) & rv		4946505	2		=			
ANR	4946530	Identifier	d		4946505	0					
ANR	4946531	CastExpression	( ut8 * ) ( void * ) & rv		4946505	1					
ANR	4946532	CastTarget	ut8 *		4946505	0					
ANR	4946533	CastExpression	( void * ) & rv		4946505	1					
ANR	4946534	CastTarget	void *		4946505	0					
ANR	4946535	UnaryOperationExpression	& rv		4946505	1					
ANR	4946536	UnaryOperator	&		4946505	0					
ANR	4946537	Identifier	rv		4946505	1					
ANR	4946538	ExpressionStatement	d [ 0 ] = s [ 3 ]	1993:1:44361:44372	4946505	3	True				
ANR	4946539	AssignmentExpression	d [ 0 ] = s [ 3 ]		4946505	0		=			
ANR	4946540	ArrayIndexing	d [ 0 ]		4946505	0					
ANR	4946541	Identifier	d		4946505	0					
ANR	4946542	PrimaryExpression	0		4946505	1					
ANR	4946543	ArrayIndexing	s [ 3 ]		4946505	1					
ANR	4946544	Identifier	s		4946505	0					
ANR	4946545	PrimaryExpression	3		4946505	1					
ANR	4946546	ExpressionStatement	d [ 1 ] = s [ 2 ]	1994:1:44375:44386	4946505	4	True				
ANR	4946547	AssignmentExpression	d [ 1 ] = s [ 2 ]		4946505	0		=			
ANR	4946548	ArrayIndexing	d [ 1 ]		4946505	0					
ANR	4946549	Identifier	d		4946505	0					
ANR	4946550	PrimaryExpression	1		4946505	1					
ANR	4946551	ArrayIndexing	s [ 2 ]		4946505	1					
ANR	4946552	Identifier	s		4946505	0					
ANR	4946553	PrimaryExpression	2		4946505	1					
ANR	4946554	ExpressionStatement	d [ 2 ] = s [ 1 ]	1995:1:44389:44400	4946505	5	True				
ANR	4946555	AssignmentExpression	d [ 2 ] = s [ 1 ]		4946505	0		=			
ANR	4946556	ArrayIndexing	d [ 2 ]		4946505	0					
ANR	4946557	Identifier	d		4946505	0					
ANR	4946558	PrimaryExpression	2		4946505	1					
ANR	4946559	ArrayIndexing	s [ 1 ]		4946505	1					
ANR	4946560	Identifier	s		4946505	0					
ANR	4946561	PrimaryExpression	1		4946505	1					
ANR	4946562	ExpressionStatement	d [ 3 ] = s [ 0 ]	1996:1:44403:44414	4946505	6	True				
ANR	4946563	AssignmentExpression	d [ 3 ] = s [ 0 ]		4946505	0		=			
ANR	4946564	ArrayIndexing	d [ 3 ]		4946505	0					
ANR	4946565	Identifier	d		4946505	0					
ANR	4946566	PrimaryExpression	3		4946505	1					
ANR	4946567	ArrayIndexing	s [ 0 ]		4946505	1					
ANR	4946568	Identifier	s		4946505	0					
ANR	4946569	PrimaryExpression	0		4946505	1					
ANR	4946570	ExpressionStatement	d [ 4 ] = s [ 7 ]	1997:1:44417:44428	4946505	7	True				
ANR	4946571	AssignmentExpression	d [ 4 ] = s [ 7 ]		4946505	0		=			
ANR	4946572	ArrayIndexing	d [ 4 ]		4946505	0					
ANR	4946573	Identifier	d		4946505	0					
ANR	4946574	PrimaryExpression	4		4946505	1					
ANR	4946575	ArrayIndexing	s [ 7 ]		4946505	1					
ANR	4946576	Identifier	s		4946505	0					
ANR	4946577	PrimaryExpression	7		4946505	1					
ANR	4946578	ExpressionStatement	d [ 5 ] = s [ 6 ]	1998:1:44431:44442	4946505	8	True				
ANR	4946579	AssignmentExpression	d [ 5 ] = s [ 6 ]		4946505	0		=			
ANR	4946580	ArrayIndexing	d [ 5 ]		4946505	0					
ANR	4946581	Identifier	d		4946505	0					
ANR	4946582	PrimaryExpression	5		4946505	1					
ANR	4946583	ArrayIndexing	s [ 6 ]		4946505	1					
ANR	4946584	Identifier	s		4946505	0					
ANR	4946585	PrimaryExpression	6		4946505	1					
ANR	4946586	ExpressionStatement	d [ 6 ] = s [ 5 ]	1999:1:44445:44456	4946505	9	True				
ANR	4946587	AssignmentExpression	d [ 6 ] = s [ 5 ]		4946505	0		=			
ANR	4946588	ArrayIndexing	d [ 6 ]		4946505	0					
ANR	4946589	Identifier	d		4946505	0					
ANR	4946590	PrimaryExpression	6		4946505	1					
ANR	4946591	ArrayIndexing	s [ 5 ]		4946505	1					
ANR	4946592	Identifier	s		4946505	0					
ANR	4946593	PrimaryExpression	5		4946505	1					
ANR	4946594	ExpressionStatement	d [ 7 ] = s [ 4 ]	2000:1:44459:44470	4946505	10	True				
ANR	4946595	AssignmentExpression	d [ 7 ] = s [ 4 ]		4946505	0		=			
ANR	4946596	ArrayIndexing	d [ 7 ]		4946505	0					
ANR	4946597	Identifier	d		4946505	0					
ANR	4946598	PrimaryExpression	7		4946505	1					
ANR	4946599	ArrayIndexing	s [ 4 ]		4946505	1					
ANR	4946600	Identifier	s		4946505	0					
ANR	4946601	PrimaryExpression	4		4946505	1					
ANR	4946602	ReturnStatement	return rv ;	2011:1:44598:44607	4946505	11	True				
ANR	4946603	Identifier	rv		4946505	0					
ANR	4946604	ReturnType	static ut64		4946505	1					
ANR	4946605	Identifier	swap8		4946505	2					
ANR	4946606	ParameterList	ut64 sv		4946505	3					
ANR	4946607	Parameter	ut64 sv	1988:18:44273:44279	4946505	0	True				
ANR	4946608	ParameterType	ut64		4946505	0					
ANR	4946609	Identifier	sv		4946505	1					
ANR	4946610	CFGEntryNode	ENTRY		4946505		True				
ANR	4946611	CFGExitNode	EXIT		4946505		True				
ANR	4946612	Symbol	sv		4946505						
ANR	4946613	Symbol	s		4946505						
ANR	4946614	Symbol	rv		4946505						
ANR	4946615	Symbol	d		4946505						
ANR	4946616	Symbol	& sv		4946505						
ANR	4946617	Symbol	* s		4946505						
ANR	4946618	Symbol	* d		4946505						
ANR	4946619	Symbol	& rv		4946505						
ANR	4946620	Function	bs1	2017:0:44652:45038							
ANR	4946621	FunctionDef	bs1 (struct r_magic * m)		4946620	0					
ANR	4946622	CompoundStatement		2017:35:44687:45038	4946620	0					
ANR	4946623	ExpressionStatement	m -> cont_level = swap2 ( m -> cont_level )	2018:1:44690:44726	4946620	0	True				
ANR	4946624	AssignmentExpression	m -> cont_level = swap2 ( m -> cont_level )		4946620	0		=			
ANR	4946625	PtrMemberAccess	m -> cont_level		4946620	0					
ANR	4946626	Identifier	m		4946620	0					
ANR	4946627	Identifier	cont_level		4946620	1					
ANR	4946628	CallExpression	swap2 ( m -> cont_level )		4946620	1					
ANR	4946629	Callee	swap2		4946620	0					
ANR	4946630	Identifier	swap2		4946620	0					
ANR	4946631	ArgumentList	m -> cont_level		4946620	1					
ANR	4946632	Argument	m -> cont_level		4946620	0					
ANR	4946633	PtrMemberAccess	m -> cont_level		4946620	0					
ANR	4946634	Identifier	m		4946620	0					
ANR	4946635	Identifier	cont_level		4946620	1					
ANR	4946636	ExpressionStatement	m -> offset = swap4 ( ( ut32 ) m -> offset )	2019:1:44729:44763	4946620	1	True				
ANR	4946637	AssignmentExpression	m -> offset = swap4 ( ( ut32 ) m -> offset )		4946620	0		=			
ANR	4946638	PtrMemberAccess	m -> offset		4946620	0					
ANR	4946639	Identifier	m		4946620	0					
ANR	4946640	Identifier	offset		4946620	1					
ANR	4946641	CallExpression	swap4 ( ( ut32 ) m -> offset )		4946620	1					
ANR	4946642	Callee	swap4		4946620	0					
ANR	4946643	Identifier	swap4		4946620	0					
ANR	4946644	ArgumentList	( ut32 ) m -> offset		4946620	1					
ANR	4946645	Argument	( ut32 ) m -> offset		4946620	0					
ANR	4946646	CastExpression	( ut32 ) m -> offset		4946620	0					
ANR	4946647	CastTarget	ut32		4946620	0					
ANR	4946648	PtrMemberAccess	m -> offset		4946620	1					
ANR	4946649	Identifier	m		4946620	0					
ANR	4946650	Identifier	offset		4946620	1					
ANR	4946651	ExpressionStatement	m -> in_offset = swap4 ( ( ut32 ) m -> in_offset )	2020:1:44766:44806	4946620	2	True				
ANR	4946652	AssignmentExpression	m -> in_offset = swap4 ( ( ut32 ) m -> in_offset )		4946620	0		=			
ANR	4946653	PtrMemberAccess	m -> in_offset		4946620	0					
ANR	4946654	Identifier	m		4946620	0					
ANR	4946655	Identifier	in_offset		4946620	1					
ANR	4946656	CallExpression	swap4 ( ( ut32 ) m -> in_offset )		4946620	1					
ANR	4946657	Callee	swap4		4946620	0					
ANR	4946658	Identifier	swap4		4946620	0					
ANR	4946659	ArgumentList	( ut32 ) m -> in_offset		4946620	1					
ANR	4946660	Argument	( ut32 ) m -> in_offset		4946620	0					
ANR	4946661	CastExpression	( ut32 ) m -> in_offset		4946620	0					
ANR	4946662	CastTarget	ut32		4946620	0					
ANR	4946663	PtrMemberAccess	m -> in_offset		4946620	1					
ANR	4946664	Identifier	m		4946620	0					
ANR	4946665	Identifier	in_offset		4946620	1					
ANR	4946666	ExpressionStatement	m -> lineno = swap4 ( ( ut32 ) m -> lineno )	2021:1:44809:44843	4946620	3	True				
ANR	4946667	AssignmentExpression	m -> lineno = swap4 ( ( ut32 ) m -> lineno )		4946620	0		=			
ANR	4946668	PtrMemberAccess	m -> lineno		4946620	0					
ANR	4946669	Identifier	m		4946620	0					
ANR	4946670	Identifier	lineno		4946620	1					
ANR	4946671	CallExpression	swap4 ( ( ut32 ) m -> lineno )		4946620	1					
ANR	4946672	Callee	swap4		4946620	0					
ANR	4946673	Identifier	swap4		4946620	0					
ANR	4946674	ArgumentList	( ut32 ) m -> lineno		4946620	1					
ANR	4946675	Argument	( ut32 ) m -> lineno		4946620	0					
ANR	4946676	CastExpression	( ut32 ) m -> lineno		4946620	0					
ANR	4946677	CastTarget	ut32		4946620	0					
ANR	4946678	PtrMemberAccess	m -> lineno		4946620	1					
ANR	4946679	Identifier	m		4946620	0					
ANR	4946680	Identifier	lineno		4946620	1					
ANR	4946681	IfStatement	if ( MAGIC_IS_STRING ( m -> type ) )		4946620	4					
ANR	4946682	Condition	MAGIC_IS_STRING ( m -> type )	2022:5:44850:44874	4946620	0	True				
ANR	4946683	CallExpression	MAGIC_IS_STRING ( m -> type )		4946620	0					
ANR	4946684	Callee	MAGIC_IS_STRING		4946620	0					
ANR	4946685	Identifier	MAGIC_IS_STRING		4946620	0					
ANR	4946686	ArgumentList	m -> type		4946620	1					
ANR	4946687	Argument	m -> type		4946620	0					
ANR	4946688	PtrMemberAccess	m -> type		4946620	0					
ANR	4946689	Identifier	m		4946620	0					
ANR	4946690	Identifier	type		4946620	1					
ANR	4946691	CompoundStatement		6:32:189:189	4946620	1					
ANR	4946692	ExpressionStatement	m -> str_range = swap4 ( m -> str_range )	2023:2:44881:44915	4946620	0	True				
ANR	4946693	AssignmentExpression	m -> str_range = swap4 ( m -> str_range )		4946620	0		=			
ANR	4946694	PtrMemberAccess	m -> str_range		4946620	0					
ANR	4946695	Identifier	m		4946620	0					
ANR	4946696	Identifier	str_range		4946620	1					
ANR	4946697	CallExpression	swap4 ( m -> str_range )		4946620	1					
ANR	4946698	Callee	swap4		4946620	0					
ANR	4946699	Identifier	swap4		4946620	0					
ANR	4946700	ArgumentList	m -> str_range		4946620	1					
ANR	4946701	Argument	m -> str_range		4946620	0					
ANR	4946702	PtrMemberAccess	m -> str_range		4946620	0					
ANR	4946703	Identifier	m		4946620	0					
ANR	4946704	Identifier	str_range		4946620	1					
ANR	4946705	ExpressionStatement	m -> str_flags = swap4 ( m -> str_flags )	2024:2:44919:44953	4946620	1	True				
ANR	4946706	AssignmentExpression	m -> str_flags = swap4 ( m -> str_flags )		4946620	0		=			
ANR	4946707	PtrMemberAccess	m -> str_flags		4946620	0					
ANR	4946708	Identifier	m		4946620	0					
ANR	4946709	Identifier	str_flags		4946620	1					
ANR	4946710	CallExpression	swap4 ( m -> str_flags )		4946620	1					
ANR	4946711	Callee	swap4		4946620	0					
ANR	4946712	Identifier	swap4		4946620	0					
ANR	4946713	ArgumentList	m -> str_flags		4946620	1					
ANR	4946714	Argument	m -> str_flags		4946620	0					
ANR	4946715	PtrMemberAccess	m -> str_flags		4946620	0					
ANR	4946716	Identifier	m		4946620	0					
ANR	4946717	Identifier	str_flags		4946620	1					
ANR	4946718	ElseStatement	else		4946620	0					
ANR	4946719	CompoundStatement		9:8:275:275	4946620	0					
ANR	4946720	ExpressionStatement	m -> value . q = swap8 ( m -> value . q )	2026:2:44967:44997	4946620	0	True				
ANR	4946721	AssignmentExpression	m -> value . q = swap8 ( m -> value . q )		4946620	0		=			
ANR	4946722	MemberAccess	m -> value . q		4946620	0					
ANR	4946723	PtrMemberAccess	m -> value		4946620	0					
ANR	4946724	Identifier	m		4946620	0					
ANR	4946725	Identifier	value		4946620	1					
ANR	4946726	Identifier	q		4946620	1					
ANR	4946727	CallExpression	swap8 ( m -> value . q )		4946620	1					
ANR	4946728	Callee	swap8		4946620	0					
ANR	4946729	Identifier	swap8		4946620	0					
ANR	4946730	ArgumentList	m -> value . q		4946620	1					
ANR	4946731	Argument	m -> value . q		4946620	0					
ANR	4946732	MemberAccess	m -> value . q		4946620	0					
ANR	4946733	PtrMemberAccess	m -> value		4946620	0					
ANR	4946734	Identifier	m		4946620	0					
ANR	4946735	Identifier	value		4946620	1					
ANR	4946736	Identifier	q		4946620	1					
ANR	4946737	ExpressionStatement	m -> num_mask = swap8 ( m -> num_mask )	2027:2:45001:45033	4946620	1	True				
ANR	4946738	AssignmentExpression	m -> num_mask = swap8 ( m -> num_mask )		4946620	0		=			
ANR	4946739	PtrMemberAccess	m -> num_mask		4946620	0					
ANR	4946740	Identifier	m		4946620	0					
ANR	4946741	Identifier	num_mask		4946620	1					
ANR	4946742	CallExpression	swap8 ( m -> num_mask )		4946620	1					
ANR	4946743	Callee	swap8		4946620	0					
ANR	4946744	Identifier	swap8		4946620	0					
ANR	4946745	ArgumentList	m -> num_mask		4946620	1					
ANR	4946746	Argument	m -> num_mask		4946620	0					
ANR	4946747	PtrMemberAccess	m -> num_mask		4946620	0					
ANR	4946748	Identifier	m		4946620	0					
ANR	4946749	Identifier	num_mask		4946620	1					
ANR	4946750	ReturnType	static void		4946620	1					
ANR	4946751	Identifier	bs1		4946620	2					
ANR	4946752	ParameterList	struct r_magic * m		4946620	3					
ANR	4946753	Parameter	struct r_magic * m	2017:16:44668:44684	4946620	0	True				
ANR	4946754	ParameterType	struct r_magic *		4946620	0					
ANR	4946755	Identifier	m		4946620	1					
ANR	4946756	CFGEntryNode	ENTRY		4946620		True				
ANR	4946757	CFGExitNode	EXIT		4946620		True				
ANR	4946758	Symbol	m -> in_offset		4946620						
ANR	4946759	Symbol	m -> value		4946620						
ANR	4946760	Symbol	m -> str_flags		4946620						
ANR	4946761	Symbol	swap8		4946620						
ANR	4946762	Symbol	m -> value . q		4946620						
ANR	4946763	Symbol	m -> str_range		4946620						
ANR	4946764	Symbol	m		4946620						
ANR	4946765	Symbol	swap4		4946620						
ANR	4946766	Symbol	m -> num_mask		4946620						
ANR	4946767	Symbol	m -> type		4946620						
ANR	4946768	Symbol	m -> offset		4946620						
ANR	4946769	Symbol	swap2		4946620						
ANR	4946770	Symbol	MAGIC_IS_STRING		4946620						
ANR	4946771	Symbol	* m		4946620						
ANR	4946772	Symbol	m -> cont_level		4946620						
ANR	4946773	Symbol	m -> lineno		4946620						
