command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6403004	File	data/converged/CVE-2019-16718~_radare2/vector.c								
ANR	6403005	DeclStmt									
ANR	6403006	Decl							size_t	size_t	new_capacity
ANR	6403007	DeclStmt									
ANR	6403008	Decl							void	void * *	new_a
ANR	6403009	Function	r_vector_init	30:0:837:1055							
ANR	6403010	FunctionDef	"r_vector_init (RVector * vec , size_t elem_size , RVectorFree free , void * free_user)"		6403009	0					
ANR	6403011	CompoundStatement		30:92:929:1055	6403009	0					
ANR	6403012	ExpressionStatement	vec -> a = NULL	31:1:932:945	6403009	0	True				
ANR	6403013	AssignmentExpression	vec -> a = NULL		6403009	0		=			
ANR	6403014	PtrMemberAccess	vec -> a		6403009	0					
ANR	6403015	Identifier	vec		6403009	0					
ANR	6403016	Identifier	a		6403009	1					
ANR	6403017	Identifier	NULL		6403009	1					
ANR	6403018	ExpressionStatement	vec -> capacity = vec -> len = 0	32:1:948:976	6403009	1	True				
ANR	6403019	AssignmentExpression	vec -> capacity = vec -> len = 0		6403009	0		=			
ANR	6403020	PtrMemberAccess	vec -> capacity		6403009	0					
ANR	6403021	Identifier	vec		6403009	0					
ANR	6403022	Identifier	capacity		6403009	1					
ANR	6403023	AssignmentExpression	vec -> len = 0		6403009	1		=			
ANR	6403024	PtrMemberAccess	vec -> len		6403009	0					
ANR	6403025	Identifier	vec		6403009	0					
ANR	6403026	Identifier	len		6403009	1					
ANR	6403027	PrimaryExpression	0		6403009	1					
ANR	6403028	ExpressionStatement	vec -> elem_size = elem_size	33:1:979:1005	6403009	2	True				
ANR	6403029	AssignmentExpression	vec -> elem_size = elem_size		6403009	0		=			
ANR	6403030	PtrMemberAccess	vec -> elem_size		6403009	0					
ANR	6403031	Identifier	vec		6403009	0					
ANR	6403032	Identifier	elem_size		6403009	1					
ANR	6403033	Identifier	elem_size		6403009	1					
ANR	6403034	ExpressionStatement	vec -> free = free	34:1:1008:1024	6403009	3	True				
ANR	6403035	AssignmentExpression	vec -> free = free		6403009	0		=			
ANR	6403036	PtrMemberAccess	vec -> free		6403009	0					
ANR	6403037	Identifier	vec		6403009	0					
ANR	6403038	Identifier	free		6403009	1					
ANR	6403039	Identifier	free		6403009	1					
ANR	6403040	ExpressionStatement	vec -> free_user = free_user	35:1:1027:1053	6403009	4	True				
ANR	6403041	AssignmentExpression	vec -> free_user = free_user		6403009	0		=			
ANR	6403042	PtrMemberAccess	vec -> free_user		6403009	0					
ANR	6403043	Identifier	vec		6403009	0					
ANR	6403044	Identifier	free_user		6403009	1					
ANR	6403045	Identifier	free_user		6403009	1					
ANR	6403046	ReturnType	R_API void		6403009	1					
ANR	6403047	Identifier	r_vector_init		6403009	2					
ANR	6403048	ParameterList	"RVector * vec , size_t elem_size , RVectorFree free , void * free_user"		6403009	3					
ANR	6403049	Parameter	RVector * vec	30:25:862:873	6403009	0	True				
ANR	6403050	ParameterType	RVector *		6403009	0					
ANR	6403051	Identifier	vec		6403009	1					
ANR	6403052	Parameter	size_t elem_size	30:39:876:891	6403009	1	True				
ANR	6403053	ParameterType	size_t		6403009	0					
ANR	6403054	Identifier	elem_size		6403009	1					
ANR	6403055	Parameter	RVectorFree free	30:57:894:909	6403009	2	True				
ANR	6403056	ParameterType	RVectorFree		6403009	0					
ANR	6403057	Identifier	free		6403009	1					
ANR	6403058	Parameter	void * free_user	30:75:912:926	6403009	3	True				
ANR	6403059	ParameterType	void *		6403009	0					
ANR	6403060	Identifier	free_user		6403009	1					
ANR	6403061	CFGEntryNode	ENTRY		6403009		True				
ANR	6403062	CFGExitNode	EXIT		6403009		True				
ANR	6403063	Symbol	vec -> free_user		6403009						
ANR	6403064	Symbol	NULL		6403009						
ANR	6403065	Symbol	free_user		6403009						
ANR	6403066	Symbol	vec		6403009						
ANR	6403067	Symbol	elem_size		6403009						
ANR	6403068	Symbol	vec -> a		6403009						
ANR	6403069	Symbol	vec -> free		6403009						
ANR	6403070	Symbol	vec -> len		6403009						
ANR	6403071	Symbol	free		6403009						
ANR	6403072	Symbol	vec -> elem_size		6403009						
ANR	6403073	Symbol	* vec		6403009						
ANR	6403074	Symbol	vec -> capacity		6403009						
ANR	6403075	Function	r_vector_new	38:0:1058:1268							
ANR	6403076	FunctionDef	"r_vector_new (size_t elem_size , RVectorFree free , void * free_user)"		6403075	0					
ANR	6403077	CompoundStatement		38:81:1139:1268	6403075	0					
ANR	6403078	IdentifierDeclStatement	RVector * vec = R_NEW ( RVector ) ;	39:1:1142:1172	6403075	0	True				
ANR	6403079	IdentifierDecl	* vec = R_NEW ( RVector )		6403075	0					
ANR	6403080	IdentifierDeclType	RVector *		6403075	0					
ANR	6403081	Identifier	vec		6403075	1					
ANR	6403082	AssignmentExpression	* vec = R_NEW ( RVector )		6403075	2		=			
ANR	6403083	Identifier	vec		6403075	0					
ANR	6403084	CallExpression	R_NEW ( RVector )		6403075	1					
ANR	6403085	Callee	R_NEW		6403075	0					
ANR	6403086	Identifier	R_NEW		6403075	0					
ANR	6403087	ArgumentList	RVector		6403075	1					
ANR	6403088	Argument	RVector		6403075	0					
ANR	6403089	Identifier	RVector		6403075	0					
ANR	6403090	IfStatement	if ( ! vec )		6403075	1					
ANR	6403091	Condition	! vec	40:5:1179:1182	6403075	0	True				
ANR	6403092	UnaryOperationExpression	! vec		6403075	0					
ANR	6403093	UnaryOperator	!		6403075	0					
ANR	6403094	Identifier	vec		6403075	1					
ANR	6403095	CompoundStatement		3:11:45:45	6403075	1					
ANR	6403096	ReturnStatement	return NULL ;	41:2:1189:1200	6403075	0	True				
ANR	6403097	Identifier	NULL		6403075	0					
ANR	6403098	ExpressionStatement	"r_vector_init ( vec , elem_size , free , free_user )"	43:1:1206:1253	6403075	2	True				
ANR	6403099	CallExpression	"r_vector_init ( vec , elem_size , free , free_user )"		6403075	0					
ANR	6403100	Callee	r_vector_init		6403075	0					
ANR	6403101	Identifier	r_vector_init		6403075	0					
ANR	6403102	ArgumentList	vec		6403075	1					
ANR	6403103	Argument	vec		6403075	0					
ANR	6403104	Identifier	vec		6403075	0					
ANR	6403105	Argument	elem_size		6403075	1					
ANR	6403106	Identifier	elem_size		6403075	0					
ANR	6403107	Argument	free		6403075	2					
ANR	6403108	Identifier	free		6403075	0					
ANR	6403109	Argument	free_user		6403075	3					
ANR	6403110	Identifier	free_user		6403075	0					
ANR	6403111	ReturnStatement	return vec ;	44:1:1256:1266	6403075	3	True				
ANR	6403112	Identifier	vec		6403075	0					
ANR	6403113	ReturnType	R_API RVector *		6403075	1					
ANR	6403114	Identifier	r_vector_new		6403075	2					
ANR	6403115	ParameterList	"size_t elem_size , RVectorFree free , void * free_user"		6403075	3					
ANR	6403116	Parameter	size_t elem_size	38:28:1086:1101	6403075	0	True				
ANR	6403117	ParameterType	size_t		6403075	0					
ANR	6403118	Identifier	elem_size		6403075	1					
ANR	6403119	Parameter	RVectorFree free	38:46:1104:1119	6403075	1	True				
ANR	6403120	ParameterType	RVectorFree		6403075	0					
ANR	6403121	Identifier	free		6403075	1					
ANR	6403122	Parameter	void * free_user	38:64:1122:1136	6403075	2	True				
ANR	6403123	ParameterType	void *		6403075	0					
ANR	6403124	Identifier	free_user		6403075	1					
ANR	6403125	CFGEntryNode	ENTRY		6403075		True				
ANR	6403126	CFGExitNode	EXIT		6403075		True				
ANR	6403127	Symbol	NULL		6403075						
ANR	6403128	Symbol	free_user		6403075						
ANR	6403129	Symbol	elem_size		6403075						
ANR	6403130	Symbol	vec		6403075						
ANR	6403131	Symbol	RVector		6403075						
ANR	6403132	Symbol	free		6403075						
ANR	6403133	Symbol	R_NEW		6403075						
ANR	6403134	Function	vector_free_elems	47:0:1271:1462							
ANR	6403135	FunctionDef	vector_free_elems (RVector * vec)		6403134	0					
ANR	6403136	CompoundStatement		47:44:1315:1462	6403134	0					
ANR	6403137	IfStatement	if ( vec -> free )		6403134	0					
ANR	6403138	Condition	vec -> free	48:5:1322:1330	6403134	0	True				
ANR	6403139	PtrMemberAccess	vec -> free		6403134	0					
ANR	6403140	Identifier	vec		6403134	0					
ANR	6403141	Identifier	free		6403134	1					
ANR	6403142	CompoundStatement		2:16:17:17	6403134	1					
ANR	6403143	WhileStatement	while ( vec -> len > 0 )		6403134	0					
ANR	6403144	Condition	vec -> len > 0	49:9:1344:1355	6403134	0	True				
ANR	6403145	RelationalExpression	vec -> len > 0		6403134	0		>			
ANR	6403146	PtrMemberAccess	vec -> len		6403134	0					
ANR	6403147	Identifier	vec		6403134	0					
ANR	6403148	Identifier	len		6403134	1					
ANR	6403149	PrimaryExpression	0		6403134	1					
ANR	6403150	CompoundStatement		3:23:42:42	6403134	1					
ANR	6403151	ExpressionStatement	"vec -> free ( r_vector_index_ptr ( vec , -- vec -> len ) , vec -> free_user )"	50:3:1363:1427	6403134	0	True				
ANR	6403152	CallExpression	"vec -> free ( r_vector_index_ptr ( vec , -- vec -> len ) , vec -> free_user )"		6403134	0					
ANR	6403153	Callee	vec -> free		6403134	0					
ANR	6403154	PtrMemberAccess	vec -> free		6403134	0					
ANR	6403155	Identifier	vec		6403134	0					
ANR	6403156	Identifier	free		6403134	1					
ANR	6403157	ArgumentList	"r_vector_index_ptr ( vec , -- vec -> len )"		6403134	1					
ANR	6403158	Argument	"r_vector_index_ptr ( vec , -- vec -> len )"		6403134	0					
ANR	6403159	CallExpression	"r_vector_index_ptr ( vec , -- vec -> len )"		6403134	0					
ANR	6403160	Callee	r_vector_index_ptr		6403134	0					
ANR	6403161	Identifier	r_vector_index_ptr		6403134	0					
ANR	6403162	ArgumentList	vec		6403134	1					
ANR	6403163	Argument	vec		6403134	0					
ANR	6403164	Identifier	vec		6403134	0					
ANR	6403165	Argument	-- vec -> len		6403134	1					
ANR	6403166	UnaryExpression	-- vec -> len		6403134	0					
ANR	6403167	IncDec	--		6403134	0					
ANR	6403168	PtrMemberAccess	vec -> len		6403134	1					
ANR	6403169	Identifier	vec		6403134	0					
ANR	6403170	Identifier	len		6403134	1					
ANR	6403171	Argument	vec -> free_user		6403134	1					
ANR	6403172	PtrMemberAccess	vec -> free_user		6403134	0					
ANR	6403173	Identifier	vec		6403134	0					
ANR	6403174	Identifier	free_user		6403134	1					
ANR	6403175	ElseStatement	else		6403134	0					
ANR	6403176	CompoundStatement		6:8:125:125	6403134	0					
ANR	6403177	ExpressionStatement	vec -> len = 0	53:2:1445:1457	6403134	0	True				
ANR	6403178	AssignmentExpression	vec -> len = 0		6403134	0		=			
ANR	6403179	PtrMemberAccess	vec -> len		6403134	0					
ANR	6403180	Identifier	vec		6403134	0					
ANR	6403181	Identifier	len		6403134	1					
ANR	6403182	PrimaryExpression	0		6403134	1					
ANR	6403183	ReturnType	static void		6403134	1					
ANR	6403184	Identifier	vector_free_elems		6403134	2					
ANR	6403185	ParameterList	RVector * vec		6403134	3					
ANR	6403186	Parameter	RVector * vec	47:30:1301:1312	6403134	0	True				
ANR	6403187	ParameterType	RVector *		6403134	0					
ANR	6403188	Identifier	vec		6403134	1					
ANR	6403189	CFGEntryNode	ENTRY		6403134		True				
ANR	6403190	CFGExitNode	EXIT		6403134		True				
ANR	6403191	Symbol	r_vector_index_ptr		6403134						
ANR	6403192	Symbol	vec -> free_user		6403134						
ANR	6403193	Symbol	vec		6403134						
ANR	6403194	Symbol	vec -> free		6403134						
ANR	6403195	Symbol	vec -> len		6403134						
ANR	6403196	Symbol	* vec		6403134						
ANR	6403197	Function	r_vector_clear	57:0:1465:1571							
ANR	6403198	FunctionDef	r_vector_clear (RVector * vec)		6403197	0					
ANR	6403199	CompoundStatement		57:40:1505:1571	6403197	0					
ANR	6403200	ExpressionStatement	vector_free_elems ( vec )	58:1:1508:1531	6403197	0	True				
ANR	6403201	CallExpression	vector_free_elems ( vec )		6403197	0					
ANR	6403202	Callee	vector_free_elems		6403197	0					
ANR	6403203	Identifier	vector_free_elems		6403197	0					
ANR	6403204	ArgumentList	vec		6403197	1					
ANR	6403205	Argument	vec		6403197	0					
ANR	6403206	Identifier	vec		6403197	0					
ANR	6403207	ExpressionStatement	R_FREE ( vec -> a )	59:1:1534:1549	6403197	1	True				
ANR	6403208	CallExpression	R_FREE ( vec -> a )		6403197	0					
ANR	6403209	Callee	R_FREE		6403197	0					
ANR	6403210	Identifier	R_FREE		6403197	0					
ANR	6403211	ArgumentList	vec -> a		6403197	1					
ANR	6403212	Argument	vec -> a		6403197	0					
ANR	6403213	PtrMemberAccess	vec -> a		6403197	0					
ANR	6403214	Identifier	vec		6403197	0					
ANR	6403215	Identifier	a		6403197	1					
ANR	6403216	ExpressionStatement	vec -> capacity = 0	60:1:1552:1569	6403197	2	True				
ANR	6403217	AssignmentExpression	vec -> capacity = 0		6403197	0		=			
ANR	6403218	PtrMemberAccess	vec -> capacity		6403197	0					
ANR	6403219	Identifier	vec		6403197	0					
ANR	6403220	Identifier	capacity		6403197	1					
ANR	6403221	PrimaryExpression	0		6403197	1					
ANR	6403222	ReturnType	R_API void		6403197	1					
ANR	6403223	Identifier	r_vector_clear		6403197	2					
ANR	6403224	ParameterList	RVector * vec		6403197	3					
ANR	6403225	Parameter	RVector * vec	57:26:1491:1502	6403197	0	True				
ANR	6403226	ParameterType	RVector *		6403197	0					
ANR	6403227	Identifier	vec		6403197	1					
ANR	6403228	CFGEntryNode	ENTRY		6403197		True				
ANR	6403229	CFGExitNode	EXIT		6403197		True				
ANR	6403230	Symbol	vec		6403197						
ANR	6403231	Symbol	vec -> a		6403197						
ANR	6403232	Symbol	* vec		6403197						
ANR	6403233	Symbol	vec -> capacity		6403197						
ANR	6403234	Function	r_vector_free	63:0:1574:1670							
ANR	6403235	FunctionDef	r_vector_free (RVector * vec)		6403234	0					
ANR	6403236	CompoundStatement		63:39:1613:1670	6403234	0					
ANR	6403237	ExpressionStatement	vector_free_elems ( vec )	64:1:1616:1639	6403234	0	True				
ANR	6403238	CallExpression	vector_free_elems ( vec )		6403234	0					
ANR	6403239	Callee	vector_free_elems		6403234	0					
ANR	6403240	Identifier	vector_free_elems		6403234	0					
ANR	6403241	ArgumentList	vec		6403234	1					
ANR	6403242	Argument	vec		6403234	0					
ANR	6403243	Identifier	vec		6403234	0					
ANR	6403244	ExpressionStatement	free ( vec -> a )	65:1:1642:1655	6403234	1	True				
ANR	6403245	CallExpression	free ( vec -> a )		6403234	0					
ANR	6403246	Callee	free		6403234	0					
ANR	6403247	Identifier	free		6403234	0					
ANR	6403248	ArgumentList	vec -> a		6403234	1					
ANR	6403249	Argument	vec -> a		6403234	0					
ANR	6403250	PtrMemberAccess	vec -> a		6403234	0					
ANR	6403251	Identifier	vec		6403234	0					
ANR	6403252	Identifier	a		6403234	1					
ANR	6403253	ExpressionStatement	free ( vec )	66:1:1658:1668	6403234	2	True				
ANR	6403254	CallExpression	free ( vec )		6403234	0					
ANR	6403255	Callee	free		6403234	0					
ANR	6403256	Identifier	free		6403234	0					
ANR	6403257	ArgumentList	vec		6403234	1					
ANR	6403258	Argument	vec		6403234	0					
ANR	6403259	Identifier	vec		6403234	0					
ANR	6403260	ReturnType	R_API void		6403234	1					
ANR	6403261	Identifier	r_vector_free		6403234	2					
ANR	6403262	ParameterList	RVector * vec		6403234	3					
ANR	6403263	Parameter	RVector * vec	63:25:1599:1610	6403234	0	True				
ANR	6403264	ParameterType	RVector *		6403234	0					
ANR	6403265	Identifier	vec		6403234	1					
ANR	6403266	CFGEntryNode	ENTRY		6403234		True				
ANR	6403267	CFGExitNode	EXIT		6403234		True				
ANR	6403268	Symbol	vec		6403234						
ANR	6403269	Symbol	vec -> a		6403234						
ANR	6403270	Symbol	* vec		6403234						
ANR	6403271	Function	vector_clone	69:0:1673:2080							
ANR	6403272	FunctionDef	"vector_clone (RVector * dst , RVector * src)"		6403271	0					
ANR	6403273	CompoundStatement		69:53:1726:2080	6403271	0					
ANR	6403274	ExpressionStatement	dst -> capacity = src -> capacity	70:1:1729:1758	6403271	0	True				
ANR	6403275	AssignmentExpression	dst -> capacity = src -> capacity		6403271	0		=			
ANR	6403276	PtrMemberAccess	dst -> capacity		6403271	0					
ANR	6403277	Identifier	dst		6403271	0					
ANR	6403278	Identifier	capacity		6403271	1					
ANR	6403279	PtrMemberAccess	src -> capacity		6403271	1					
ANR	6403280	Identifier	src		6403271	0					
ANR	6403281	Identifier	capacity		6403271	1					
ANR	6403282	ExpressionStatement	dst -> len = src -> len	71:1:1761:1780	6403271	1	True				
ANR	6403283	AssignmentExpression	dst -> len = src -> len		6403271	0		=			
ANR	6403284	PtrMemberAccess	dst -> len		6403271	0					
ANR	6403285	Identifier	dst		6403271	0					
ANR	6403286	Identifier	len		6403271	1					
ANR	6403287	PtrMemberAccess	src -> len		6403271	1					
ANR	6403288	Identifier	src		6403271	0					
ANR	6403289	Identifier	len		6403271	1					
ANR	6403290	ExpressionStatement	dst -> elem_size = src -> elem_size	72:1:1783:1814	6403271	2	True				
ANR	6403291	AssignmentExpression	dst -> elem_size = src -> elem_size		6403271	0		=			
ANR	6403292	PtrMemberAccess	dst -> elem_size		6403271	0					
ANR	6403293	Identifier	dst		6403271	0					
ANR	6403294	Identifier	elem_size		6403271	1					
ANR	6403295	PtrMemberAccess	src -> elem_size		6403271	1					
ANR	6403296	Identifier	src		6403271	0					
ANR	6403297	Identifier	elem_size		6403271	1					
ANR	6403298	ExpressionStatement	dst -> free = src -> free	73:1:1817:1838	6403271	3	True				
ANR	6403299	AssignmentExpression	dst -> free = src -> free		6403271	0		=			
ANR	6403300	PtrMemberAccess	dst -> free		6403271	0					
ANR	6403301	Identifier	dst		6403271	0					
ANR	6403302	Identifier	free		6403271	1					
ANR	6403303	PtrMemberAccess	src -> free		6403271	1					
ANR	6403304	Identifier	src		6403271	0					
ANR	6403305	Identifier	free		6403271	1					
ANR	6403306	ExpressionStatement	dst -> free_user = src -> free_user	74:1:1841:1872	6403271	4	True				
ANR	6403307	AssignmentExpression	dst -> free_user = src -> free_user		6403271	0		=			
ANR	6403308	PtrMemberAccess	dst -> free_user		6403271	0					
ANR	6403309	Identifier	dst		6403271	0					
ANR	6403310	Identifier	free_user		6403271	1					
ANR	6403311	PtrMemberAccess	src -> free_user		6403271	1					
ANR	6403312	Identifier	src		6403271	0					
ANR	6403313	Identifier	free_user		6403271	1					
ANR	6403314	IfStatement	if ( ! dst -> len )		6403271	5					
ANR	6403315	Condition	! dst -> len	75:5:1879:1887	6403271	0	True				
ANR	6403316	UnaryOperationExpression	! dst -> len		6403271	0					
ANR	6403317	UnaryOperator	!		6403271	0					
ANR	6403318	PtrMemberAccess	dst -> len		6403271	1					
ANR	6403319	Identifier	dst		6403271	0					
ANR	6403320	Identifier	len		6403271	1					
ANR	6403321	CompoundStatement		7:16:163:163	6403271	1					
ANR	6403322	ExpressionStatement	dst -> a = NULL	76:2:1894:1907	6403271	0	True				
ANR	6403323	AssignmentExpression	dst -> a = NULL		6403271	0		=			
ANR	6403324	PtrMemberAccess	dst -> a		6403271	0					
ANR	6403325	Identifier	dst		6403271	0					
ANR	6403326	Identifier	a		6403271	1					
ANR	6403327	Identifier	NULL		6403271	1					
ANR	6403328	ElseStatement	else		6403271	0					
ANR	6403329	CompoundStatement		9:8:190:190	6403271	0					
ANR	6403330	ExpressionStatement	dst -> a = malloc ( src -> elem_size * src -> capacity )	78:2:1921:1969	6403271	0	True				
ANR	6403331	AssignmentExpression	dst -> a = malloc ( src -> elem_size * src -> capacity )		6403271	0		=			
ANR	6403332	PtrMemberAccess	dst -> a		6403271	0					
ANR	6403333	Identifier	dst		6403271	0					
ANR	6403334	Identifier	a		6403271	1					
ANR	6403335	CallExpression	malloc ( src -> elem_size * src -> capacity )		6403271	1					
ANR	6403336	Callee	malloc		6403271	0					
ANR	6403337	Identifier	malloc		6403271	0					
ANR	6403338	ArgumentList	src -> elem_size * src -> capacity		6403271	1					
ANR	6403339	Argument	src -> elem_size * src -> capacity		6403271	0					
ANR	6403340	MultiplicativeExpression	src -> elem_size * src -> capacity		6403271	0		*			
ANR	6403341	PtrMemberAccess	src -> elem_size		6403271	0					
ANR	6403342	Identifier	src		6403271	0					
ANR	6403343	Identifier	elem_size		6403271	1					
ANR	6403344	PtrMemberAccess	src -> capacity		6403271	1					
ANR	6403345	Identifier	src		6403271	0					
ANR	6403346	Identifier	capacity		6403271	1					
ANR	6403347	IfStatement	if ( ! dst -> a )		6403271	1					
ANR	6403348	Condition	! dst -> a	79:6:1977:1983	6403271	0	True				
ANR	6403349	UnaryOperationExpression	! dst -> a		6403271	0					
ANR	6403350	UnaryOperator	!		6403271	0					
ANR	6403351	PtrMemberAccess	dst -> a		6403271	1					
ANR	6403352	Identifier	dst		6403271	0					
ANR	6403353	Identifier	a		6403271	1					
ANR	6403354	CompoundStatement		11:15:259:259	6403271	1					
ANR	6403355	ReturnStatement	return false ;	80:3:1991:2003	6403271	0	True				
ANR	6403356	Identifier	false		6403271	0					
ANR	6403357	ExpressionStatement	"memcpy ( dst -> a , src -> a , src -> elem_size * src -> len )"	82:2:2011:2061	6403271	2	True				
ANR	6403358	CallExpression	"memcpy ( dst -> a , src -> a , src -> elem_size * src -> len )"		6403271	0					
ANR	6403359	Callee	memcpy		6403271	0					
ANR	6403360	Identifier	memcpy		6403271	0					
ANR	6403361	ArgumentList	dst -> a		6403271	1					
ANR	6403362	Argument	dst -> a		6403271	0					
ANR	6403363	PtrMemberAccess	dst -> a		6403271	0					
ANR	6403364	Identifier	dst		6403271	0					
ANR	6403365	Identifier	a		6403271	1					
ANR	6403366	Argument	src -> a		6403271	1					
ANR	6403367	PtrMemberAccess	src -> a		6403271	0					
ANR	6403368	Identifier	src		6403271	0					
ANR	6403369	Identifier	a		6403271	1					
ANR	6403370	Argument	src -> elem_size * src -> len		6403271	2					
ANR	6403371	MultiplicativeExpression	src -> elem_size * src -> len		6403271	0		*			
ANR	6403372	PtrMemberAccess	src -> elem_size		6403271	0					
ANR	6403373	Identifier	src		6403271	0					
ANR	6403374	Identifier	elem_size		6403271	1					
ANR	6403375	PtrMemberAccess	src -> len		6403271	1					
ANR	6403376	Identifier	src		6403271	0					
ANR	6403377	Identifier	len		6403271	1					
ANR	6403378	ReturnStatement	return true ;	84:1:2067:2078	6403271	6	True				
ANR	6403379	Identifier	true		6403271	0					
ANR	6403380	ReturnType	static bool		6403271	1					
ANR	6403381	Identifier	vector_clone		6403271	2					
ANR	6403382	ParameterList	"RVector * dst , RVector * src"		6403271	3					
ANR	6403383	Parameter	RVector * dst	69:25:1698:1709	6403271	0	True				
ANR	6403384	ParameterType	RVector *		6403271	0					
ANR	6403385	Identifier	dst		6403271	1					
ANR	6403386	Parameter	RVector * src	69:39:1712:1723	6403271	1	True				
ANR	6403387	ParameterType	RVector *		6403271	0					
ANR	6403388	Identifier	src		6403271	1					
ANR	6403389	CFGEntryNode	ENTRY		6403271		True				
ANR	6403390	CFGExitNode	EXIT		6403271		True				
ANR	6403391	Symbol	dst -> len		6403271						
ANR	6403392	Symbol	dst -> elem_size		6403271						
ANR	6403393	Symbol	dst -> a		6403271						
ANR	6403394	Symbol	malloc		6403271						
ANR	6403395	Symbol	NULL		6403271						
ANR	6403396	Symbol	dst		6403271						
ANR	6403397	Symbol	dst -> capacity		6403271						
ANR	6403398	Symbol	src		6403271						
ANR	6403399	Symbol	false		6403271						
ANR	6403400	Symbol	dst -> free_user		6403271						
ANR	6403401	Symbol	src -> elem_size		6403271						
ANR	6403402	Symbol	* src		6403271						
ANR	6403403	Symbol	* dst		6403271						
ANR	6403404	Symbol	dst -> free		6403271						
ANR	6403405	Symbol	src -> len		6403271						
ANR	6403406	Symbol	true		6403271						
ANR	6403407	Symbol	src -> capacity		6403271						
ANR	6403408	Symbol	src -> free		6403271						
ANR	6403409	Symbol	src -> a		6403271						
ANR	6403410	Symbol	src -> free_user		6403271						
ANR	6403411	Function	r_vector_clone	87:0:2083:2271							
ANR	6403412	FunctionDef	r_vector_clone (RVector * vec)		6403411	0					
ANR	6403413	CompoundStatement		87:44:2127:2271	6403411	0					
ANR	6403414	IdentifierDeclStatement	RVector * ret = R_NEW ( RVector ) ;	88:1:2130:2160	6403411	0	True				
ANR	6403415	IdentifierDecl	* ret = R_NEW ( RVector )		6403411	0					
ANR	6403416	IdentifierDeclType	RVector *		6403411	0					
ANR	6403417	Identifier	ret		6403411	1					
ANR	6403418	AssignmentExpression	* ret = R_NEW ( RVector )		6403411	2		=			
ANR	6403419	Identifier	ret		6403411	0					
ANR	6403420	CallExpression	R_NEW ( RVector )		6403411	1					
ANR	6403421	Callee	R_NEW		6403411	0					
ANR	6403422	Identifier	R_NEW		6403411	0					
ANR	6403423	ArgumentList	RVector		6403411	1					
ANR	6403424	Argument	RVector		6403411	0					
ANR	6403425	Identifier	RVector		6403411	0					
ANR	6403426	IfStatement	if ( ! ret )		6403411	1					
ANR	6403427	Condition	! ret	89:5:2167:2170	6403411	0	True				
ANR	6403428	UnaryOperationExpression	! ret		6403411	0					
ANR	6403429	UnaryOperator	!		6403411	0					
ANR	6403430	Identifier	ret		6403411	1					
ANR	6403431	CompoundStatement		3:11:45:45	6403411	1					
ANR	6403432	ReturnStatement	return NULL ;	90:2:2177:2188	6403411	0	True				
ANR	6403433	Identifier	NULL		6403411	0					
ANR	6403434	IfStatement	"if ( ! vector_clone ( ret , vec ) )"		6403411	2					
ANR	6403435	Condition	"! vector_clone ( ret , vec )"	92:5:2198:2221	6403411	0	True				
ANR	6403436	UnaryOperationExpression	"! vector_clone ( ret , vec )"		6403411	0					
ANR	6403437	UnaryOperator	!		6403411	0					
ANR	6403438	CallExpression	"vector_clone ( ret , vec )"		6403411	1					
ANR	6403439	Callee	vector_clone		6403411	0					
ANR	6403440	Identifier	vector_clone		6403411	0					
ANR	6403441	ArgumentList	ret		6403411	1					
ANR	6403442	Argument	ret		6403411	0					
ANR	6403443	Identifier	ret		6403411	0					
ANR	6403444	Argument	vec		6403411	1					
ANR	6403445	Identifier	vec		6403411	0					
ANR	6403446	CompoundStatement		6:31:96:96	6403411	1					
ANR	6403447	ExpressionStatement	free ( ret )	93:2:2228:2238	6403411	0	True				
ANR	6403448	CallExpression	free ( ret )		6403411	0					
ANR	6403449	Callee	free		6403411	0					
ANR	6403450	Identifier	free		6403411	0					
ANR	6403451	ArgumentList	ret		6403411	1					
ANR	6403452	Argument	ret		6403411	0					
ANR	6403453	Identifier	ret		6403411	0					
ANR	6403454	ReturnStatement	return NULL ;	94:2:2242:2253	6403411	1	True				
ANR	6403455	Identifier	NULL		6403411	0					
ANR	6403456	ReturnStatement	return ret ;	96:1:2259:2269	6403411	3	True				
ANR	6403457	Identifier	ret		6403411	0					
ANR	6403458	ReturnType	R_API RVector *		6403411	1					
ANR	6403459	Identifier	r_vector_clone		6403411	2					
ANR	6403460	ParameterList	RVector * vec		6403411	3					
ANR	6403461	Parameter	RVector * vec	87:30:2113:2124	6403411	0	True				
ANR	6403462	ParameterType	RVector *		6403411	0					
ANR	6403463	Identifier	vec		6403411	1					
ANR	6403464	CFGEntryNode	ENTRY		6403411		True				
ANR	6403465	CFGExitNode	EXIT		6403411		True				
ANR	6403466	Symbol	ret		6403411						
ANR	6403467	Symbol	vector_clone		6403411						
ANR	6403468	Symbol	NULL		6403411						
ANR	6403469	Symbol	vec		6403411						
ANR	6403470	Symbol	RVector		6403411						
ANR	6403471	Symbol	R_NEW		6403411						
ANR	6403472	Function	r_vector_index_ptr	99:0:2274:2384							
ANR	6403473	FunctionDef	"r_vector_index_ptr (RVector * vec , size_t index)"		6403472	0					
ANR	6403474	CompoundStatement		99:59:2333:2384	6403472	0					
ANR	6403475	ReturnStatement	return ( char * ) vec -> a + vec -> elem_size * index ;	100:1:2336:2382	6403472	0	True				
ANR	6403476	AdditiveExpression	( char * ) vec -> a + vec -> elem_size * index		6403472	0		+			
ANR	6403477	CastExpression	( char * ) vec -> a		6403472	0					
ANR	6403478	CastTarget	char *		6403472	0					
ANR	6403479	PtrMemberAccess	vec -> a		6403472	1					
ANR	6403480	Identifier	vec		6403472	0					
ANR	6403481	Identifier	a		6403472	1					
ANR	6403482	MultiplicativeExpression	vec -> elem_size * index		6403472	1		*			
ANR	6403483	PtrMemberAccess	vec -> elem_size		6403472	0					
ANR	6403484	Identifier	vec		6403472	0					
ANR	6403485	Identifier	elem_size		6403472	1					
ANR	6403486	Identifier	index		6403472	1					
ANR	6403487	ReturnType	R_API void *		6403472	1					
ANR	6403488	Identifier	r_vector_index_ptr		6403472	2					
ANR	6403489	ParameterList	"RVector * vec , size_t index"		6403472	3					
ANR	6403490	Parameter	RVector * vec	99:31:2305:2316	6403472	0	True				
ANR	6403491	ParameterType	RVector *		6403472	0					
ANR	6403492	Identifier	vec		6403472	1					
ANR	6403493	Parameter	size_t index	99:45:2319:2330	6403472	1	True				
ANR	6403494	ParameterType	size_t		6403472	0					
ANR	6403495	Identifier	index		6403472	1					
ANR	6403496	CFGEntryNode	ENTRY		6403472		True				
ANR	6403497	CFGExitNode	EXIT		6403472		True				
ANR	6403498	Symbol	vec		6403472						
ANR	6403499	Symbol	vec -> a		6403472						
ANR	6403500	Symbol	index		6403472						
ANR	6403501	Symbol	vec -> elem_size		6403472						
ANR	6403502	Symbol	* vec		6403472						
ANR	6403503	Function	r_vector_assign	103:0:2387:2486							
ANR	6403504	FunctionDef	"r_vector_assign (RVector * vec , void * p , void * elem)"		6403503	0					
ANR	6403505	CompoundStatement		103:62:2449:2486	6403503	0					
ANR	6403506	ExpressionStatement	"memcpy ( p , elem , vec -> elem_size )"	104:1:2452:2484	6403503	0	True				
ANR	6403507	CallExpression	"memcpy ( p , elem , vec -> elem_size )"		6403503	0					
ANR	6403508	Callee	memcpy		6403503	0					
ANR	6403509	Identifier	memcpy		6403503	0					
ANR	6403510	ArgumentList	p		6403503	1					
ANR	6403511	Argument	p		6403503	0					
ANR	6403512	Identifier	p		6403503	0					
ANR	6403513	Argument	elem		6403503	1					
ANR	6403514	Identifier	elem		6403503	0					
ANR	6403515	Argument	vec -> elem_size		6403503	2					
ANR	6403516	PtrMemberAccess	vec -> elem_size		6403503	0					
ANR	6403517	Identifier	vec		6403503	0					
ANR	6403518	Identifier	elem_size		6403503	1					
ANR	6403519	ReturnType	R_API void		6403503	1					
ANR	6403520	Identifier	r_vector_assign		6403503	2					
ANR	6403521	ParameterList	"RVector * vec , void * p , void * elem"		6403503	3					
ANR	6403522	Parameter	RVector * vec	103:27:2414:2425	6403503	0	True				
ANR	6403523	ParameterType	RVector *		6403503	0					
ANR	6403524	Identifier	vec		6403503	1					
ANR	6403525	Parameter	void * p	103:41:2428:2434	6403503	1	True				
ANR	6403526	ParameterType	void *		6403503	0					
ANR	6403527	Identifier	p		6403503	1					
ANR	6403528	Parameter	void * elem	103:50:2437:2446	6403503	2	True				
ANR	6403529	ParameterType	void *		6403503	0					
ANR	6403530	Identifier	elem		6403503	1					
ANR	6403531	CFGEntryNode	ENTRY		6403503		True				
ANR	6403532	CFGExitNode	EXIT		6403503		True				
ANR	6403533	Symbol	p		6403503						
ANR	6403534	Symbol	elem		6403503						
ANR	6403535	Symbol	vec		6403503						
ANR	6403536	Symbol	vec -> elem_size		6403503						
ANR	6403537	Symbol	* vec		6403503						
ANR	6403538	Function	r_vector_assign_at	107:0:2489:2667							
ANR	6403539	FunctionDef	"r_vector_assign_at (RVector * vec , size_t index , void * elem)"		6403538	0					
ANR	6403540	CompoundStatement		107:71:2560:2667	6403538	0					
ANR	6403541	IdentifierDeclStatement	"void * p = r_vector_index_ptr ( vec , index ) ;"	108:1:2563:2604	6403538	0	True				
ANR	6403542	IdentifierDecl	"* p = r_vector_index_ptr ( vec , index )"		6403538	0					
ANR	6403543	IdentifierDeclType	void *		6403538	0					
ANR	6403544	Identifier	p		6403538	1					
ANR	6403545	AssignmentExpression	"* p = r_vector_index_ptr ( vec , index )"		6403538	2		=			
ANR	6403546	Identifier	p		6403538	0					
ANR	6403547	CallExpression	"r_vector_index_ptr ( vec , index )"		6403538	1					
ANR	6403548	Callee	r_vector_index_ptr		6403538	0					
ANR	6403549	Identifier	r_vector_index_ptr		6403538	0					
ANR	6403550	ArgumentList	vec		6403538	1					
ANR	6403551	Argument	vec		6403538	0					
ANR	6403552	Identifier	vec		6403538	0					
ANR	6403553	Argument	index		6403538	1					
ANR	6403554	Identifier	index		6403538	0					
ANR	6403555	IfStatement	if ( elem )		6403538	1					
ANR	6403556	Condition	elem	109:5:2611:2614	6403538	0	True				
ANR	6403557	Identifier	elem		6403538	0					
ANR	6403558	CompoundStatement		3:11:56:56	6403538	1					
ANR	6403559	ExpressionStatement	"r_vector_assign ( vec , p , elem )"	110:2:2621:2651	6403538	0	True				
ANR	6403560	CallExpression	"r_vector_assign ( vec , p , elem )"		6403538	0					
ANR	6403561	Callee	r_vector_assign		6403538	0					
ANR	6403562	Identifier	r_vector_assign		6403538	0					
ANR	6403563	ArgumentList	vec		6403538	1					
ANR	6403564	Argument	vec		6403538	0					
ANR	6403565	Identifier	vec		6403538	0					
ANR	6403566	Argument	p		6403538	1					
ANR	6403567	Identifier	p		6403538	0					
ANR	6403568	Argument	elem		6403538	2					
ANR	6403569	Identifier	elem		6403538	0					
ANR	6403570	ReturnStatement	return p ;	112:1:2657:2665	6403538	2	True				
ANR	6403571	Identifier	p		6403538	0					
ANR	6403572	ReturnType	R_API void *		6403538	1					
ANR	6403573	Identifier	r_vector_assign_at		6403538	2					
ANR	6403574	ParameterList	"RVector * vec , size_t index , void * elem"		6403538	3					
ANR	6403575	Parameter	RVector * vec	107:31:2520:2531	6403538	0	True				
ANR	6403576	ParameterType	RVector *		6403538	0					
ANR	6403577	Identifier	vec		6403538	1					
ANR	6403578	Parameter	size_t index	107:45:2534:2545	6403538	1	True				
ANR	6403579	ParameterType	size_t		6403538	0					
ANR	6403580	Identifier	index		6403538	1					
ANR	6403581	Parameter	void * elem	107:59:2548:2557	6403538	2	True				
ANR	6403582	ParameterType	void *		6403538	0					
ANR	6403583	Identifier	elem		6403538	1					
ANR	6403584	CFGEntryNode	ENTRY		6403538		True				
ANR	6403585	CFGExitNode	EXIT		6403538		True				
ANR	6403586	Symbol	elem		6403538						
ANR	6403587	Symbol	p		6403538						
ANR	6403588	Symbol	r_vector_index_ptr		6403538						
ANR	6403589	Symbol	vec		6403538						
ANR	6403590	Symbol	index		6403538						
ANR	6403591	Function	r_vector_remove_at	115:0:2670:2957							
ANR	6403592	FunctionDef	"r_vector_remove_at (RVector * vec , size_t index , void * into)"		6403591	0					
ANR	6403593	CompoundStatement		115:70:2740:2957	6403591	0					
ANR	6403594	IdentifierDeclStatement	"void * p = r_vector_index_ptr ( vec , index ) ;"	116:1:2743:2784	6403591	0	True				
ANR	6403595	IdentifierDecl	"* p = r_vector_index_ptr ( vec , index )"		6403591	0					
ANR	6403596	IdentifierDeclType	void *		6403591	0					
ANR	6403597	Identifier	p		6403591	1					
ANR	6403598	AssignmentExpression	"* p = r_vector_index_ptr ( vec , index )"		6403591	2		=			
ANR	6403599	Identifier	p		6403591	0					
ANR	6403600	CallExpression	"r_vector_index_ptr ( vec , index )"		6403591	1					
ANR	6403601	Callee	r_vector_index_ptr		6403591	0					
ANR	6403602	Identifier	r_vector_index_ptr		6403591	0					
ANR	6403603	ArgumentList	vec		6403591	1					
ANR	6403604	Argument	vec		6403591	0					
ANR	6403605	Identifier	vec		6403591	0					
ANR	6403606	Argument	index		6403591	1					
ANR	6403607	Identifier	index		6403591	0					
ANR	6403608	IfStatement	if ( into )		6403591	1					
ANR	6403609	Condition	into	117:5:2791:2794	6403591	0	True				
ANR	6403610	Identifier	into		6403591	0					
ANR	6403611	CompoundStatement		3:11:56:56	6403591	1					
ANR	6403612	ExpressionStatement	"r_vector_assign ( vec , into , p )"	118:2:2801:2831	6403591	0	True				
ANR	6403613	CallExpression	"r_vector_assign ( vec , into , p )"		6403591	0					
ANR	6403614	Callee	r_vector_assign		6403591	0					
ANR	6403615	Identifier	r_vector_assign		6403591	0					
ANR	6403616	ArgumentList	vec		6403591	1					
ANR	6403617	Argument	vec		6403591	0					
ANR	6403618	Identifier	vec		6403591	0					
ANR	6403619	Argument	into		6403591	1					
ANR	6403620	Identifier	into		6403591	0					
ANR	6403621	Argument	p		6403591	2					
ANR	6403622	Identifier	p		6403591	0					
ANR	6403623	ExpressionStatement	vec -> len --	120:1:2837:2847	6403591	2	True				
ANR	6403624	PostIncDecOperationExpression	vec -> len --		6403591	0					
ANR	6403625	PtrMemberAccess	vec -> len		6403591	0					
ANR	6403626	Identifier	vec		6403591	0					
ANR	6403627	Identifier	len		6403591	1					
ANR	6403628	IncDec	--		6403591	1					
ANR	6403629	IfStatement	if ( index < vec -> len )		6403591	3					
ANR	6403630	Condition	index < vec -> len	121:5:2854:2869	6403591	0	True				
ANR	6403631	RelationalExpression	index < vec -> len		6403591	0		<			
ANR	6403632	Identifier	index		6403591	0					
ANR	6403633	PtrMemberAccess	vec -> len		6403591	1					
ANR	6403634	Identifier	vec		6403591	0					
ANR	6403635	Identifier	len		6403591	1					
ANR	6403636	CompoundStatement		7:23:131:131	6403591	1					
ANR	6403637	ExpressionStatement	"memmove ( p , ( char * ) p + vec -> elem_size , vec -> elem_size * ( vec -> len - index ) )"	122:2:2876:2952	6403591	0	True				
ANR	6403638	CallExpression	"memmove ( p , ( char * ) p + vec -> elem_size , vec -> elem_size * ( vec -> len - index ) )"		6403591	0					
ANR	6403639	Callee	memmove		6403591	0					
ANR	6403640	Identifier	memmove		6403591	0					
ANR	6403641	ArgumentList	p		6403591	1					
ANR	6403642	Argument	p		6403591	0					
ANR	6403643	Identifier	p		6403591	0					
ANR	6403644	Argument	( char * ) p + vec -> elem_size		6403591	1					
ANR	6403645	AdditiveExpression	( char * ) p + vec -> elem_size		6403591	0		+			
ANR	6403646	CastExpression	( char * ) p		6403591	0					
ANR	6403647	CastTarget	char *		6403591	0					
ANR	6403648	Identifier	p		6403591	1					
ANR	6403649	PtrMemberAccess	vec -> elem_size		6403591	1					
ANR	6403650	Identifier	vec		6403591	0					
ANR	6403651	Identifier	elem_size		6403591	1					
ANR	6403652	Argument	vec -> elem_size * ( vec -> len - index )		6403591	2					
ANR	6403653	MultiplicativeExpression	vec -> elem_size * ( vec -> len - index )		6403591	0		*			
ANR	6403654	PtrMemberAccess	vec -> elem_size		6403591	0					
ANR	6403655	Identifier	vec		6403591	0					
ANR	6403656	Identifier	elem_size		6403591	1					
ANR	6403657	AdditiveExpression	vec -> len - index		6403591	1		-			
ANR	6403658	PtrMemberAccess	vec -> len		6403591	0					
ANR	6403659	Identifier	vec		6403591	0					
ANR	6403660	Identifier	len		6403591	1					
ANR	6403661	Identifier	index		6403591	1					
ANR	6403662	ReturnType	R_API void		6403591	1					
ANR	6403663	Identifier	r_vector_remove_at		6403591	2					
ANR	6403664	ParameterList	"RVector * vec , size_t index , void * into"		6403591	3					
ANR	6403665	Parameter	RVector * vec	115:30:2700:2711	6403591	0	True				
ANR	6403666	ParameterType	RVector *		6403591	0					
ANR	6403667	Identifier	vec		6403591	1					
ANR	6403668	Parameter	size_t index	115:44:2714:2725	6403591	1	True				
ANR	6403669	ParameterType	size_t		6403591	0					
ANR	6403670	Identifier	index		6403591	1					
ANR	6403671	Parameter	void * into	115:58:2728:2737	6403591	2	True				
ANR	6403672	ParameterType	void *		6403591	0					
ANR	6403673	Identifier	into		6403591	1					
ANR	6403674	CFGEntryNode	ENTRY		6403591		True				
ANR	6403675	CFGExitNode	EXIT		6403591		True				
ANR	6403676	Symbol	p		6403591						
ANR	6403677	Symbol	into		6403591						
ANR	6403678	Symbol	r_vector_index_ptr		6403591						
ANR	6403679	Symbol	vec		6403591						
ANR	6403680	Symbol	index		6403591						
ANR	6403681	Symbol	vec -> len		6403591						
ANR	6403682	Symbol	vec -> elem_size		6403591						
ANR	6403683	Symbol	* vec		6403591						
ANR	6403684	Function	r_vector_insert	126:0:2960:3332							
ANR	6403685	FunctionDef	"r_vector_insert (RVector * vec , size_t index , void * x)"		6403684	0					
ANR	6403686	CompoundStatement		126:65:3025:3332	6403684	0					
ANR	6403687	IfStatement	if ( vec -> len >= vec -> capacity )		6403684	0					
ANR	6403688	Condition	vec -> len >= vec -> capacity	127:5:3032:3056	6403684	0	True				
ANR	6403689	RelationalExpression	vec -> len >= vec -> capacity		6403684	0		>=			
ANR	6403690	PtrMemberAccess	vec -> len		6403684	0					
ANR	6403691	Identifier	vec		6403684	0					
ANR	6403692	Identifier	len		6403684	1					
ANR	6403693	PtrMemberAccess	vec -> capacity		6403684	1					
ANR	6403694	Identifier	vec		6403684	0					
ANR	6403695	Identifier	capacity		6403684	1					
ANR	6403696	CompoundStatement		2:32:33:33	6403684	1					
ANR	6403697	ExpressionStatement	RESIZE_OR_RETURN_NULL ( NEXT_VECTOR_CAPACITY )	128:2:3063:3107	6403684	0	True				
ANR	6403698	CallExpression	RESIZE_OR_RETURN_NULL ( NEXT_VECTOR_CAPACITY )		6403684	0					
ANR	6403699	Callee	RESIZE_OR_RETURN_NULL		6403684	0					
ANR	6403700	Identifier	RESIZE_OR_RETURN_NULL		6403684	0					
ANR	6403701	ArgumentList	NEXT_VECTOR_CAPACITY		6403684	1					
ANR	6403702	Argument	NEXT_VECTOR_CAPACITY		6403684	0					
ANR	6403703	Identifier	NEXT_VECTOR_CAPACITY		6403684	0					
ANR	6403704	IdentifierDeclStatement	"void * p = r_vector_index_ptr ( vec , index ) ;"	130:1:3113:3154	6403684	1	True				
ANR	6403705	IdentifierDecl	"* p = r_vector_index_ptr ( vec , index )"		6403684	0					
ANR	6403706	IdentifierDeclType	void *		6403684	0					
ANR	6403707	Identifier	p		6403684	1					
ANR	6403708	AssignmentExpression	"* p = r_vector_index_ptr ( vec , index )"		6403684	2		=			
ANR	6403709	Identifier	p		6403684	0					
ANR	6403710	CallExpression	"r_vector_index_ptr ( vec , index )"		6403684	1					
ANR	6403711	Callee	r_vector_index_ptr		6403684	0					
ANR	6403712	Identifier	r_vector_index_ptr		6403684	0					
ANR	6403713	ArgumentList	vec		6403684	1					
ANR	6403714	Argument	vec		6403684	0					
ANR	6403715	Identifier	vec		6403684	0					
ANR	6403716	Argument	index		6403684	1					
ANR	6403717	Identifier	index		6403684	0					
ANR	6403718	IfStatement	if ( index < vec -> len )		6403684	2					
ANR	6403719	Condition	index < vec -> len	131:5:3161:3176	6403684	0	True				
ANR	6403720	RelationalExpression	index < vec -> len		6403684	0		<			
ANR	6403721	Identifier	index		6403684	0					
ANR	6403722	PtrMemberAccess	vec -> len		6403684	1					
ANR	6403723	Identifier	vec		6403684	0					
ANR	6403724	Identifier	len		6403684	1					
ANR	6403725	CompoundStatement		6:23:153:153	6403684	1					
ANR	6403726	ExpressionStatement	"memmove ( ( char * ) p + vec -> elem_size , p , vec -> elem_size * ( vec -> len - index ) )"	132:2:3183:3259	6403684	0	True				
ANR	6403727	CallExpression	"memmove ( ( char * ) p + vec -> elem_size , p , vec -> elem_size * ( vec -> len - index ) )"		6403684	0					
ANR	6403728	Callee	memmove		6403684	0					
ANR	6403729	Identifier	memmove		6403684	0					
ANR	6403730	ArgumentList	( char * ) p + vec -> elem_size		6403684	1					
ANR	6403731	Argument	( char * ) p + vec -> elem_size		6403684	0					
ANR	6403732	AdditiveExpression	( char * ) p + vec -> elem_size		6403684	0		+			
ANR	6403733	CastExpression	( char * ) p		6403684	0					
ANR	6403734	CastTarget	char *		6403684	0					
ANR	6403735	Identifier	p		6403684	1					
ANR	6403736	PtrMemberAccess	vec -> elem_size		6403684	1					
ANR	6403737	Identifier	vec		6403684	0					
ANR	6403738	Identifier	elem_size		6403684	1					
ANR	6403739	Argument	p		6403684	1					
ANR	6403740	Identifier	p		6403684	0					
ANR	6403741	Argument	vec -> elem_size * ( vec -> len - index )		6403684	2					
ANR	6403742	MultiplicativeExpression	vec -> elem_size * ( vec -> len - index )		6403684	0		*			
ANR	6403743	PtrMemberAccess	vec -> elem_size		6403684	0					
ANR	6403744	Identifier	vec		6403684	0					
ANR	6403745	Identifier	elem_size		6403684	1					
ANR	6403746	AdditiveExpression	vec -> len - index		6403684	1		-			
ANR	6403747	PtrMemberAccess	vec -> len		6403684	0					
ANR	6403748	Identifier	vec		6403684	0					
ANR	6403749	Identifier	len		6403684	1					
ANR	6403750	Identifier	index		6403684	1					
ANR	6403751	ExpressionStatement	vec -> len ++	134:1:3265:3275	6403684	3	True				
ANR	6403752	PostIncDecOperationExpression	vec -> len ++		6403684	0					
ANR	6403753	PtrMemberAccess	vec -> len		6403684	0					
ANR	6403754	Identifier	vec		6403684	0					
ANR	6403755	Identifier	len		6403684	1					
ANR	6403756	IncDec	++		6403684	1					
ANR	6403757	IfStatement	if ( x )		6403684	4					
ANR	6403758	Condition	x	135:5:3282:3282	6403684	0	True				
ANR	6403759	Identifier	x		6403684	0					
ANR	6403760	CompoundStatement		10:8:259:259	6403684	1					
ANR	6403761	ExpressionStatement	"r_vector_assign ( vec , p , x )"	136:2:3289:3316	6403684	0	True				
ANR	6403762	CallExpression	"r_vector_assign ( vec , p , x )"		6403684	0					
ANR	6403763	Callee	r_vector_assign		6403684	0					
ANR	6403764	Identifier	r_vector_assign		6403684	0					
ANR	6403765	ArgumentList	vec		6403684	1					
ANR	6403766	Argument	vec		6403684	0					
ANR	6403767	Identifier	vec		6403684	0					
ANR	6403768	Argument	p		6403684	1					
ANR	6403769	Identifier	p		6403684	0					
ANR	6403770	Argument	x		6403684	2					
ANR	6403771	Identifier	x		6403684	0					
ANR	6403772	ReturnStatement	return p ;	138:1:3322:3330	6403684	5	True				
ANR	6403773	Identifier	p		6403684	0					
ANR	6403774	ReturnType	R_API void *		6403684	1					
ANR	6403775	Identifier	r_vector_insert		6403684	2					
ANR	6403776	ParameterList	"RVector * vec , size_t index , void * x"		6403684	3					
ANR	6403777	Parameter	RVector * vec	126:28:2988:2999	6403684	0	True				
ANR	6403778	ParameterType	RVector *		6403684	0					
ANR	6403779	Identifier	vec		6403684	1					
ANR	6403780	Parameter	size_t index	126:42:3002:3013	6403684	1	True				
ANR	6403781	ParameterType	size_t		6403684	0					
ANR	6403782	Identifier	index		6403684	1					
ANR	6403783	Parameter	void * x	126:56:3016:3022	6403684	2	True				
ANR	6403784	ParameterType	void *		6403684	0					
ANR	6403785	Identifier	x		6403684	1					
ANR	6403786	CFGEntryNode	ENTRY		6403684		True				
ANR	6403787	CFGExitNode	EXIT		6403684		True				
ANR	6403788	Symbol	p		6403684						
ANR	6403789	Symbol	NEXT_VECTOR_CAPACITY		6403684						
ANR	6403790	Symbol	r_vector_index_ptr		6403684						
ANR	6403791	Symbol	vec		6403684						
ANR	6403792	Symbol	x		6403684						
ANR	6403793	Symbol	index		6403684						
ANR	6403794	Symbol	vec -> len		6403684						
ANR	6403795	Symbol	vec -> elem_size		6403684						
ANR	6403796	Symbol	* vec		6403684						
ANR	6403797	Symbol	vec -> capacity		6403684						
ANR	6403798	Function	r_vector_insert_range	141:0:3335:3794							
ANR	6403799	FunctionDef	"r_vector_insert_range (RVector * vec , size_t index , void * first , size_t count)"		6403798	0					
ANR	6403800	CompoundStatement		141:89:3424:3794	6403798	0					
ANR	6403801	IfStatement	if ( vec -> len + count > vec -> capacity )		6403798	0					
ANR	6403802	Condition	vec -> len + count > vec -> capacity	142:5:3431:3462	6403798	0	True				
ANR	6403803	RelationalExpression	vec -> len + count > vec -> capacity		6403798	0		>			
ANR	6403804	AdditiveExpression	vec -> len + count		6403798	0		+			
ANR	6403805	PtrMemberAccess	vec -> len		6403798	0					
ANR	6403806	Identifier	vec		6403798	0					
ANR	6403807	Identifier	len		6403798	1					
ANR	6403808	Identifier	count		6403798	1					
ANR	6403809	PtrMemberAccess	vec -> capacity		6403798	1					
ANR	6403810	Identifier	vec		6403798	0					
ANR	6403811	Identifier	capacity		6403798	1					
ANR	6403812	CompoundStatement		2:39:40:40	6403798	1					
ANR	6403813	ExpressionStatement	"RESIZE_OR_RETURN_NULL ( R_MAX ( NEXT_VECTOR_CAPACITY , vec -> len + count ) )"	143:2:3469:3539	6403798	0	True				
ANR	6403814	CallExpression	"RESIZE_OR_RETURN_NULL ( R_MAX ( NEXT_VECTOR_CAPACITY , vec -> len + count ) )"		6403798	0					
ANR	6403815	Callee	RESIZE_OR_RETURN_NULL		6403798	0					
ANR	6403816	Identifier	RESIZE_OR_RETURN_NULL		6403798	0					
ANR	6403817	ArgumentList	"R_MAX ( NEXT_VECTOR_CAPACITY , vec -> len + count )"		6403798	1					
ANR	6403818	Argument	"R_MAX ( NEXT_VECTOR_CAPACITY , vec -> len + count )"		6403798	0					
ANR	6403819	CallExpression	"R_MAX ( NEXT_VECTOR_CAPACITY , vec -> len + count )"		6403798	0					
ANR	6403820	Callee	R_MAX		6403798	0					
ANR	6403821	Identifier	R_MAX		6403798	0					
ANR	6403822	ArgumentList	NEXT_VECTOR_CAPACITY		6403798	1					
ANR	6403823	Argument	NEXT_VECTOR_CAPACITY		6403798	0					
ANR	6403824	Identifier	NEXT_VECTOR_CAPACITY		6403798	0					
ANR	6403825	Argument	vec -> len + count		6403798	1					
ANR	6403826	AdditiveExpression	vec -> len + count		6403798	0		+			
ANR	6403827	PtrMemberAccess	vec -> len		6403798	0					
ANR	6403828	Identifier	vec		6403798	0					
ANR	6403829	Identifier	len		6403798	1					
ANR	6403830	Identifier	count		6403798	1					
ANR	6403831	IdentifierDeclStatement	size_t sz = count * vec -> elem_size ;	145:1:3545:3579	6403798	1	True				
ANR	6403832	IdentifierDecl	sz = count * vec -> elem_size		6403798	0					
ANR	6403833	IdentifierDeclType	size_t		6403798	0					
ANR	6403834	Identifier	sz		6403798	1					
ANR	6403835	AssignmentExpression	sz = count * vec -> elem_size		6403798	2		=			
ANR	6403836	Identifier	sz		6403798	0					
ANR	6403837	MultiplicativeExpression	count * vec -> elem_size		6403798	1		*			
ANR	6403838	Identifier	count		6403798	0					
ANR	6403839	PtrMemberAccess	vec -> elem_size		6403798	1					
ANR	6403840	Identifier	vec		6403798	0					
ANR	6403841	Identifier	elem_size		6403798	1					
ANR	6403842	IdentifierDeclStatement	"void * p = r_vector_index_ptr ( vec , index ) ;"	146:1:3582:3623	6403798	2	True				
ANR	6403843	IdentifierDecl	"* p = r_vector_index_ptr ( vec , index )"		6403798	0					
ANR	6403844	IdentifierDeclType	void *		6403798	0					
ANR	6403845	Identifier	p		6403798	1					
ANR	6403846	AssignmentExpression	"* p = r_vector_index_ptr ( vec , index )"		6403798	2		=			
ANR	6403847	Identifier	p		6403798	0					
ANR	6403848	CallExpression	"r_vector_index_ptr ( vec , index )"		6403798	1					
ANR	6403849	Callee	r_vector_index_ptr		6403798	0					
ANR	6403850	Identifier	r_vector_index_ptr		6403798	0					
ANR	6403851	ArgumentList	vec		6403798	1					
ANR	6403852	Argument	vec		6403798	0					
ANR	6403853	Identifier	vec		6403798	0					
ANR	6403854	Argument	index		6403798	1					
ANR	6403855	Identifier	index		6403798	0					
ANR	6403856	IfStatement	if ( index < vec -> len )		6403798	3					
ANR	6403857	Condition	index < vec -> len	147:5:3630:3645	6403798	0	True				
ANR	6403858	RelationalExpression	index < vec -> len		6403798	0		<			
ANR	6403859	Identifier	index		6403798	0					
ANR	6403860	PtrMemberAccess	vec -> len		6403798	1					
ANR	6403861	Identifier	vec		6403798	0					
ANR	6403862	Identifier	len		6403798	1					
ANR	6403863	CompoundStatement		7:23:223:223	6403798	1					
ANR	6403864	ExpressionStatement	"memmove ( ( char * ) p + sz , p , vec -> elem_size * ( vec -> len - index ) )"	148:2:3652:3716	6403798	0	True				
ANR	6403865	CallExpression	"memmove ( ( char * ) p + sz , p , vec -> elem_size * ( vec -> len - index ) )"		6403798	0					
ANR	6403866	Callee	memmove		6403798	0					
ANR	6403867	Identifier	memmove		6403798	0					
ANR	6403868	ArgumentList	( char * ) p + sz		6403798	1					
ANR	6403869	Argument	( char * ) p + sz		6403798	0					
ANR	6403870	AdditiveExpression	( char * ) p + sz		6403798	0		+			
ANR	6403871	CastExpression	( char * ) p		6403798	0					
ANR	6403872	CastTarget	char *		6403798	0					
ANR	6403873	Identifier	p		6403798	1					
ANR	6403874	Identifier	sz		6403798	1					
ANR	6403875	Argument	p		6403798	1					
ANR	6403876	Identifier	p		6403798	0					
ANR	6403877	Argument	vec -> elem_size * ( vec -> len - index )		6403798	2					
ANR	6403878	MultiplicativeExpression	vec -> elem_size * ( vec -> len - index )		6403798	0		*			
ANR	6403879	PtrMemberAccess	vec -> elem_size		6403798	0					
ANR	6403880	Identifier	vec		6403798	0					
ANR	6403881	Identifier	elem_size		6403798	1					
ANR	6403882	AdditiveExpression	vec -> len - index		6403798	1		-			
ANR	6403883	PtrMemberAccess	vec -> len		6403798	0					
ANR	6403884	Identifier	vec		6403798	0					
ANR	6403885	Identifier	len		6403798	1					
ANR	6403886	Identifier	index		6403798	1					
ANR	6403887	ExpressionStatement	vec -> len += count	150:1:3722:3739	6403798	4	True				
ANR	6403888	AssignmentExpression	vec -> len += count		6403798	0		+=			
ANR	6403889	PtrMemberAccess	vec -> len		6403798	0					
ANR	6403890	Identifier	vec		6403798	0					
ANR	6403891	Identifier	len		6403798	1					
ANR	6403892	Identifier	count		6403798	1					
ANR	6403893	IfStatement	if ( first )		6403798	5					
ANR	6403894	Condition	first	151:5:3746:3750	6403798	0	True				
ANR	6403895	Identifier	first		6403798	0					
ANR	6403896	CompoundStatement		11:12:328:328	6403798	1					
ANR	6403897	ExpressionStatement	"memcpy ( p , first , sz )"	152:2:3757:3778	6403798	0	True				
ANR	6403898	CallExpression	"memcpy ( p , first , sz )"		6403798	0					
ANR	6403899	Callee	memcpy		6403798	0					
ANR	6403900	Identifier	memcpy		6403798	0					
ANR	6403901	ArgumentList	p		6403798	1					
ANR	6403902	Argument	p		6403798	0					
ANR	6403903	Identifier	p		6403798	0					
ANR	6403904	Argument	first		6403798	1					
ANR	6403905	Identifier	first		6403798	0					
ANR	6403906	Argument	sz		6403798	2					
ANR	6403907	Identifier	sz		6403798	0					
ANR	6403908	ReturnStatement	return p ;	154:1:3784:3792	6403798	6	True				
ANR	6403909	Identifier	p		6403798	0					
ANR	6403910	ReturnType	R_API void *		6403798	1					
ANR	6403911	Identifier	r_vector_insert_range		6403798	2					
ANR	6403912	ParameterList	"RVector * vec , size_t index , void * first , size_t count"		6403798	3					
ANR	6403913	Parameter	RVector * vec	141:34:3369:3380	6403798	0	True				
ANR	6403914	ParameterType	RVector *		6403798	0					
ANR	6403915	Identifier	vec		6403798	1					
ANR	6403916	Parameter	size_t index	141:48:3383:3394	6403798	1	True				
ANR	6403917	ParameterType	size_t		6403798	0					
ANR	6403918	Identifier	index		6403798	1					
ANR	6403919	Parameter	void * first	141:62:3397:3407	6403798	2	True				
ANR	6403920	ParameterType	void *		6403798	0					
ANR	6403921	Identifier	first		6403798	1					
ANR	6403922	Parameter	size_t count	141:75:3410:3421	6403798	3	True				
ANR	6403923	ParameterType	size_t		6403798	0					
ANR	6403924	Identifier	count		6403798	1					
ANR	6403925	CFGEntryNode	ENTRY		6403798		True				
ANR	6403926	CFGExitNode	EXIT		6403798		True				
ANR	6403927	Symbol	NEXT_VECTOR_CAPACITY		6403798						
ANR	6403928	Symbol	r_vector_index_ptr		6403798						
ANR	6403929	Symbol	sz		6403798						
ANR	6403930	Symbol	count		6403798						
ANR	6403931	Symbol	index		6403798						
ANR	6403932	Symbol	vec -> len		6403798						
ANR	6403933	Symbol	vec -> elem_size		6403798						
ANR	6403934	Symbol	p		6403798						
ANR	6403935	Symbol	vec		6403798						
ANR	6403936	Symbol	R_MAX		6403798						
ANR	6403937	Symbol	first		6403798						
ANR	6403938	Symbol	vec -> capacity		6403798						
ANR	6403939	Symbol	* vec		6403798						
ANR	6403940	Function	r_vector_pop	157:0:3797:3949							
ANR	6403941	FunctionDef	"r_vector_pop (RVector * vec , void * into)"		6403940	0					
ANR	6403942	CompoundStatement		157:50:3847:3949	6403940	0					
ANR	6403943	IfStatement	if ( into )		6403940	0					
ANR	6403944	Condition	into	158:5:3854:3857	6403940	0	True				
ANR	6403945	Identifier	into		6403940	0					
ANR	6403946	CompoundStatement		2:11:12:12	6403940	1					
ANR	6403947	ExpressionStatement	"r_vector_assign ( vec , into , r_vector_index_ptr ( vec , vec -> len - 1 ) )"	159:2:3864:3931	6403940	0	True				
ANR	6403948	CallExpression	"r_vector_assign ( vec , into , r_vector_index_ptr ( vec , vec -> len - 1 ) )"		6403940	0					
ANR	6403949	Callee	r_vector_assign		6403940	0					
ANR	6403950	Identifier	r_vector_assign		6403940	0					
ANR	6403951	ArgumentList	vec		6403940	1					
ANR	6403952	Argument	vec		6403940	0					
ANR	6403953	Identifier	vec		6403940	0					
ANR	6403954	Argument	into		6403940	1					
ANR	6403955	Identifier	into		6403940	0					
ANR	6403956	Argument	"r_vector_index_ptr ( vec , vec -> len - 1 )"		6403940	2					
ANR	6403957	CallExpression	"r_vector_index_ptr ( vec , vec -> len - 1 )"		6403940	0					
ANR	6403958	Callee	r_vector_index_ptr		6403940	0					
ANR	6403959	Identifier	r_vector_index_ptr		6403940	0					
ANR	6403960	ArgumentList	vec		6403940	1					
ANR	6403961	Argument	vec		6403940	0					
ANR	6403962	Identifier	vec		6403940	0					
ANR	6403963	Argument	vec -> len - 1		6403940	1					
ANR	6403964	AdditiveExpression	vec -> len - 1		6403940	0		-			
ANR	6403965	PtrMemberAccess	vec -> len		6403940	0					
ANR	6403966	Identifier	vec		6403940	0					
ANR	6403967	Identifier	len		6403940	1					
ANR	6403968	PrimaryExpression	1		6403940	1					
ANR	6403969	ExpressionStatement	vec -> len --	161:1:3937:3947	6403940	1	True				
ANR	6403970	PostIncDecOperationExpression	vec -> len --		6403940	0					
ANR	6403971	PtrMemberAccess	vec -> len		6403940	0					
ANR	6403972	Identifier	vec		6403940	0					
ANR	6403973	Identifier	len		6403940	1					
ANR	6403974	IncDec	--		6403940	1					
ANR	6403975	ReturnType	R_API void		6403940	1					
ANR	6403976	Identifier	r_vector_pop		6403940	2					
ANR	6403977	ParameterList	"RVector * vec , void * into"		6403940	3					
ANR	6403978	Parameter	RVector * vec	157:24:3821:3832	6403940	0	True				
ANR	6403979	ParameterType	RVector *		6403940	0					
ANR	6403980	Identifier	vec		6403940	1					
ANR	6403981	Parameter	void * into	157:38:3835:3844	6403940	1	True				
ANR	6403982	ParameterType	void *		6403940	0					
ANR	6403983	Identifier	into		6403940	1					
ANR	6403984	CFGEntryNode	ENTRY		6403940		True				
ANR	6403985	CFGExitNode	EXIT		6403940		True				
ANR	6403986	Symbol	into		6403940						
ANR	6403987	Symbol	r_vector_index_ptr		6403940						
ANR	6403988	Symbol	vec		6403940						
ANR	6403989	Symbol	vec -> len		6403940						
ANR	6403990	Symbol	* vec		6403940						
ANR	6403991	Function	r_vector_pop_front	164:0:3952:4046							
ANR	6403992	FunctionDef	"r_vector_pop_front (RVector * vec , void * into)"		6403991	0					
ANR	6403993	CompoundStatement		164:56:4008:4046	6403991	0					
ANR	6403994	ExpressionStatement	"r_vector_remove_at ( vec , 0 , into )"	165:1:4011:4044	6403991	0	True				
ANR	6403995	CallExpression	"r_vector_remove_at ( vec , 0 , into )"		6403991	0					
ANR	6403996	Callee	r_vector_remove_at		6403991	0					
ANR	6403997	Identifier	r_vector_remove_at		6403991	0					
ANR	6403998	ArgumentList	vec		6403991	1					
ANR	6403999	Argument	vec		6403991	0					
ANR	6404000	Identifier	vec		6403991	0					
ANR	6404001	Argument	0		6403991	1					
ANR	6404002	PrimaryExpression	0		6403991	0					
ANR	6404003	Argument	into		6403991	2					
ANR	6404004	Identifier	into		6403991	0					
ANR	6404005	ReturnType	R_API void		6403991	1					
ANR	6404006	Identifier	r_vector_pop_front		6403991	2					
ANR	6404007	ParameterList	"RVector * vec , void * into"		6403991	3					
ANR	6404008	Parameter	RVector * vec	164:30:3982:3993	6403991	0	True				
ANR	6404009	ParameterType	RVector *		6403991	0					
ANR	6404010	Identifier	vec		6403991	1					
ANR	6404011	Parameter	void * into	164:44:3996:4005	6403991	1	True				
ANR	6404012	ParameterType	void *		6403991	0					
ANR	6404013	Identifier	into		6403991	1					
ANR	6404014	CFGEntryNode	ENTRY		6403991		True				
ANR	6404015	CFGExitNode	EXIT		6403991		True				
ANR	6404016	Symbol	into		6403991						
ANR	6404017	Symbol	vec		6403991						
ANR	6404018	Function	r_vector_push	168:0:4049:4289							
ANR	6404019	FunctionDef	"r_vector_push (RVector * vec , void * x)"		6404018	0					
ANR	6404020	CompoundStatement		168:49:4098:4289	6404018	0					
ANR	6404021	IfStatement	if ( vec -> len >= vec -> capacity )		6404018	0					
ANR	6404022	Condition	vec -> len >= vec -> capacity	169:5:4105:4129	6404018	0	True				
ANR	6404023	RelationalExpression	vec -> len >= vec -> capacity		6404018	0		>=			
ANR	6404024	PtrMemberAccess	vec -> len		6404018	0					
ANR	6404025	Identifier	vec		6404018	0					
ANR	6404026	Identifier	len		6404018	1					
ANR	6404027	PtrMemberAccess	vec -> capacity		6404018	1					
ANR	6404028	Identifier	vec		6404018	0					
ANR	6404029	Identifier	capacity		6404018	1					
ANR	6404030	CompoundStatement		2:32:33:33	6404018	1					
ANR	6404031	ExpressionStatement	RESIZE_OR_RETURN_NULL ( NEXT_VECTOR_CAPACITY )	170:2:4136:4180	6404018	0	True				
ANR	6404032	CallExpression	RESIZE_OR_RETURN_NULL ( NEXT_VECTOR_CAPACITY )		6404018	0					
ANR	6404033	Callee	RESIZE_OR_RETURN_NULL		6404018	0					
ANR	6404034	Identifier	RESIZE_OR_RETURN_NULL		6404018	0					
ANR	6404035	ArgumentList	NEXT_VECTOR_CAPACITY		6404018	1					
ANR	6404036	Argument	NEXT_VECTOR_CAPACITY		6404018	0					
ANR	6404037	Identifier	NEXT_VECTOR_CAPACITY		6404018	0					
ANR	6404038	IdentifierDeclStatement	"void * p = r_vector_index_ptr ( vec , vec -> len ++ ) ;"	172:1:4186:4232	6404018	1	True				
ANR	6404039	IdentifierDecl	"* p = r_vector_index_ptr ( vec , vec -> len ++ )"		6404018	0					
ANR	6404040	IdentifierDeclType	void *		6404018	0					
ANR	6404041	Identifier	p		6404018	1					
ANR	6404042	AssignmentExpression	"* p = r_vector_index_ptr ( vec , vec -> len ++ )"		6404018	2		=			
ANR	6404043	Identifier	p		6404018	0					
ANR	6404044	CallExpression	"r_vector_index_ptr ( vec , vec -> len ++ )"		6404018	1					
ANR	6404045	Callee	r_vector_index_ptr		6404018	0					
ANR	6404046	Identifier	r_vector_index_ptr		6404018	0					
ANR	6404047	ArgumentList	vec		6404018	1					
ANR	6404048	Argument	vec		6404018	0					
ANR	6404049	Identifier	vec		6404018	0					
ANR	6404050	Argument	vec -> len ++		6404018	1					
ANR	6404051	PostIncDecOperationExpression	vec -> len ++		6404018	0					
ANR	6404052	PtrMemberAccess	vec -> len		6404018	0					
ANR	6404053	Identifier	vec		6404018	0					
ANR	6404054	Identifier	len		6404018	1					
ANR	6404055	IncDec	++		6404018	1					
ANR	6404056	IfStatement	if ( x )		6404018	2					
ANR	6404057	Condition	x	173:5:4239:4239	6404018	0	True				
ANR	6404058	Identifier	x		6404018	0					
ANR	6404059	CompoundStatement		6:8:143:143	6404018	1					
ANR	6404060	ExpressionStatement	"r_vector_assign ( vec , p , x )"	174:2:4246:4273	6404018	0	True				
ANR	6404061	CallExpression	"r_vector_assign ( vec , p , x )"		6404018	0					
ANR	6404062	Callee	r_vector_assign		6404018	0					
ANR	6404063	Identifier	r_vector_assign		6404018	0					
ANR	6404064	ArgumentList	vec		6404018	1					
ANR	6404065	Argument	vec		6404018	0					
ANR	6404066	Identifier	vec		6404018	0					
ANR	6404067	Argument	p		6404018	1					
ANR	6404068	Identifier	p		6404018	0					
ANR	6404069	Argument	x		6404018	2					
ANR	6404070	Identifier	x		6404018	0					
ANR	6404071	ReturnStatement	return p ;	176:1:4279:4287	6404018	3	True				
ANR	6404072	Identifier	p		6404018	0					
ANR	6404073	ReturnType	R_API void *		6404018	1					
ANR	6404074	Identifier	r_vector_push		6404018	2					
ANR	6404075	ParameterList	"RVector * vec , void * x"		6404018	3					
ANR	6404076	Parameter	RVector * vec	168:26:4075:4086	6404018	0	True				
ANR	6404077	ParameterType	RVector *		6404018	0					
ANR	6404078	Identifier	vec		6404018	1					
ANR	6404079	Parameter	void * x	168:40:4089:4095	6404018	1	True				
ANR	6404080	ParameterType	void *		6404018	0					
ANR	6404081	Identifier	x		6404018	1					
ANR	6404082	CFGEntryNode	ENTRY		6404018		True				
ANR	6404083	CFGExitNode	EXIT		6404018		True				
ANR	6404084	Symbol	p		6404018						
ANR	6404085	Symbol	NEXT_VECTOR_CAPACITY		6404018						
ANR	6404086	Symbol	r_vector_index_ptr		6404018						
ANR	6404087	Symbol	vec		6404018						
ANR	6404088	Symbol	x		6404018						
ANR	6404089	Symbol	vec -> len		6404018						
ANR	6404090	Symbol	vec -> capacity		6404018						
ANR	6404091	Symbol	* vec		6404018						
ANR	6404092	Function	r_vector_push_front	179:0:4292:4386							
ANR	6404093	FunctionDef	"r_vector_push_front (RVector * vec , void * x)"		6404092	0					
ANR	6404094	CompoundStatement		179:55:4347:4386	6404092	0					
ANR	6404095	ReturnStatement	"return r_vector_insert ( vec , 0 , x ) ;"	180:1:4350:4384	6404092	0	True				
ANR	6404096	CallExpression	"r_vector_insert ( vec , 0 , x )"		6404092	0					
ANR	6404097	Callee	r_vector_insert		6404092	0					
ANR	6404098	Identifier	r_vector_insert		6404092	0					
ANR	6404099	ArgumentList	vec		6404092	1					
ANR	6404100	Argument	vec		6404092	0					
ANR	6404101	Identifier	vec		6404092	0					
ANR	6404102	Argument	0		6404092	1					
ANR	6404103	PrimaryExpression	0		6404092	0					
ANR	6404104	Argument	x		6404092	2					
ANR	6404105	Identifier	x		6404092	0					
ANR	6404106	ReturnType	R_API void *		6404092	1					
ANR	6404107	Identifier	r_vector_push_front		6404092	2					
ANR	6404108	ParameterList	"RVector * vec , void * x"		6404092	3					
ANR	6404109	Parameter	RVector * vec	179:32:4324:4335	6404092	0	True				
ANR	6404110	ParameterType	RVector *		6404092	0					
ANR	6404111	Identifier	vec		6404092	1					
ANR	6404112	Parameter	void * x	179:46:4338:4344	6404092	1	True				
ANR	6404113	ParameterType	void *		6404092	0					
ANR	6404114	Identifier	x		6404092	1					
ANR	6404115	CFGEntryNode	ENTRY		6404092		True				
ANR	6404116	CFGExitNode	EXIT		6404092		True				
ANR	6404117	Symbol	r_vector_insert		6404092						
ANR	6404118	Symbol	vec		6404092						
ANR	6404119	Symbol	x		6404092						
ANR	6404120	Function	r_vector_reserve	183:0:4389:4539							
ANR	6404121	FunctionDef	"r_vector_reserve (RVector * vec , size_t capacity)"		6404120	0					
ANR	6404122	CompoundStatement		183:60:4449:4539	6404120	0					
ANR	6404123	IfStatement	if ( vec -> capacity < capacity )		6404120	0					
ANR	6404124	Condition	vec -> capacity < capacity	184:5:4456:4479	6404120	0	True				
ANR	6404125	RelationalExpression	vec -> capacity < capacity		6404120	0		<			
ANR	6404126	PtrMemberAccess	vec -> capacity		6404120	0					
ANR	6404127	Identifier	vec		6404120	0					
ANR	6404128	Identifier	capacity		6404120	1					
ANR	6404129	Identifier	capacity		6404120	1					
ANR	6404130	CompoundStatement		2:31:32:32	6404120	1					
ANR	6404131	ExpressionStatement	RESIZE_OR_RETURN_NULL ( capacity )	185:2:4486:4518	6404120	0	True				
ANR	6404132	CallExpression	RESIZE_OR_RETURN_NULL ( capacity )		6404120	0					
ANR	6404133	Callee	RESIZE_OR_RETURN_NULL		6404120	0					
ANR	6404134	Identifier	RESIZE_OR_RETURN_NULL		6404120	0					
ANR	6404135	ArgumentList	capacity		6404120	1					
ANR	6404136	Argument	capacity		6404120	0					
ANR	6404137	Identifier	capacity		6404120	0					
ANR	6404138	ReturnStatement	return vec -> a ;	187:1:4524:4537	6404120	1	True				
ANR	6404139	PtrMemberAccess	vec -> a		6404120	0					
ANR	6404140	Identifier	vec		6404120	0					
ANR	6404141	Identifier	a		6404120	1					
ANR	6404142	ReturnType	R_API void *		6404120	1					
ANR	6404143	Identifier	r_vector_reserve		6404120	2					
ANR	6404144	ParameterList	"RVector * vec , size_t capacity"		6404120	3					
ANR	6404145	Parameter	RVector * vec	183:29:4418:4429	6404120	0	True				
ANR	6404146	ParameterType	RVector *		6404120	0					
ANR	6404147	Identifier	vec		6404120	1					
ANR	6404148	Parameter	size_t capacity	183:43:4432:4446	6404120	1	True				
ANR	6404149	ParameterType	size_t		6404120	0					
ANR	6404150	Identifier	capacity		6404120	1					
ANR	6404151	CFGEntryNode	ENTRY		6404120		True				
ANR	6404152	CFGExitNode	EXIT		6404120		True				
ANR	6404153	Symbol	vec		6404120						
ANR	6404154	Symbol	vec -> a		6404120						
ANR	6404155	Symbol	* vec		6404120						
ANR	6404156	Symbol	vec -> capacity		6404120						
ANR	6404157	Symbol	capacity		6404120						
ANR	6404158	Function	r_vector_shrink	190:0:4542:4674							
ANR	6404159	FunctionDef	r_vector_shrink (RVector * vec)		6404158	0					
ANR	6404160	CompoundStatement		190:42:4584:4674	6404158	0					
ANR	6404161	IfStatement	if ( vec -> len < vec -> capacity )		6404158	0					
ANR	6404162	Condition	vec -> len < vec -> capacity	191:5:4591:4614	6404158	0	True				
ANR	6404163	RelationalExpression	vec -> len < vec -> capacity		6404158	0		<			
ANR	6404164	PtrMemberAccess	vec -> len		6404158	0					
ANR	6404165	Identifier	vec		6404158	0					
ANR	6404166	Identifier	len		6404158	1					
ANR	6404167	PtrMemberAccess	vec -> capacity		6404158	1					
ANR	6404168	Identifier	vec		6404158	0					
ANR	6404169	Identifier	capacity		6404158	1					
ANR	6404170	CompoundStatement		2:31:32:32	6404158	1					
ANR	6404171	ExpressionStatement	RESIZE_OR_RETURN_NULL ( vec -> len )	192:2:4621:4653	6404158	0	True				
ANR	6404172	CallExpression	RESIZE_OR_RETURN_NULL ( vec -> len )		6404158	0					
ANR	6404173	Callee	RESIZE_OR_RETURN_NULL		6404158	0					
ANR	6404174	Identifier	RESIZE_OR_RETURN_NULL		6404158	0					
ANR	6404175	ArgumentList	vec -> len		6404158	1					
ANR	6404176	Argument	vec -> len		6404158	0					
ANR	6404177	PtrMemberAccess	vec -> len		6404158	0					
ANR	6404178	Identifier	vec		6404158	0					
ANR	6404179	Identifier	len		6404158	1					
ANR	6404180	ReturnStatement	return vec -> a ;	194:1:4659:4672	6404158	1	True				
ANR	6404181	PtrMemberAccess	vec -> a		6404158	0					
ANR	6404182	Identifier	vec		6404158	0					
ANR	6404183	Identifier	a		6404158	1					
ANR	6404184	ReturnType	R_API void *		6404158	1					
ANR	6404185	Identifier	r_vector_shrink		6404158	2					
ANR	6404186	ParameterList	RVector * vec		6404158	3					
ANR	6404187	Parameter	RVector * vec	190:28:4570:4581	6404158	0	True				
ANR	6404188	ParameterType	RVector *		6404158	0					
ANR	6404189	Identifier	vec		6404158	1					
ANR	6404190	CFGEntryNode	ENTRY		6404158		True				
ANR	6404191	CFGExitNode	EXIT		6404158		True				
ANR	6404192	Symbol	vec		6404158						
ANR	6404193	Symbol	vec -> a		6404158						
ANR	6404194	Symbol	vec -> len		6404158						
ANR	6404195	Symbol	* vec		6404158						
ANR	6404196	Symbol	vec -> capacity		6404158						
ANR	6404197	Function	pvector_free_elem	201:0:4681:4822							
ANR	6404198	FunctionDef	"pvector_free_elem (void * e , void * user)"		6404197	0					
ANR	6404199	CompoundStatement		201:51:4732:4822	6404197	0					
ANR	6404200	IdentifierDeclStatement	void * p = * ( ( void * * ) e ) ;	202:1:4735:4758	6404197	0	True				
ANR	6404201	IdentifierDecl	* p = * ( ( void * * ) e )		6404197	0					
ANR	6404202	IdentifierDeclType	void *		6404197	0					
ANR	6404203	Identifier	p		6404197	1					
ANR	6404204	AssignmentExpression	* p = * ( ( void * * ) e )		6404197	2		=			
ANR	6404205	Identifier	p		6404197	0					
ANR	6404206	UnaryOperationExpression	* ( ( void * * ) e )		6404197	1					
ANR	6404207	UnaryOperator	*		6404197	0					
ANR	6404208	CastExpression	( void * * ) e		6404197	1					
ANR	6404209	CastTarget	void * *		6404197	0					
ANR	6404210	Identifier	e		6404197	1					
ANR	6404211	IdentifierDeclStatement	RPVectorFree elem_free = ( RPVectorFree ) user ;	203:1:4761:4804	6404197	1	True				
ANR	6404212	IdentifierDecl	elem_free = ( RPVectorFree ) user		6404197	0					
ANR	6404213	IdentifierDeclType	RPVectorFree		6404197	0					
ANR	6404214	Identifier	elem_free		6404197	1					
ANR	6404215	AssignmentExpression	elem_free = ( RPVectorFree ) user		6404197	2		=			
ANR	6404216	Identifier	elem_free		6404197	0					
ANR	6404217	CastExpression	( RPVectorFree ) user		6404197	1					
ANR	6404218	CastTarget	RPVectorFree		6404197	0					
ANR	6404219	Identifier	user		6404197	1					
ANR	6404220	ExpressionStatement	elem_free ( p )	204:1:4807:4820	6404197	2	True				
ANR	6404221	CallExpression	elem_free ( p )		6404197	0					
ANR	6404222	Callee	elem_free		6404197	0					
ANR	6404223	Identifier	elem_free		6404197	0					
ANR	6404224	ArgumentList	p		6404197	1					
ANR	6404225	Argument	p		6404197	0					
ANR	6404226	Identifier	p		6404197	0					
ANR	6404227	ReturnType	static void		6404197	1					
ANR	6404228	Identifier	pvector_free_elem		6404197	2					
ANR	6404229	ParameterList	"void * e , void * user"		6404197	3					
ANR	6404230	Parameter	void * e	201:30:4711:4717	6404197	0	True				
ANR	6404231	ParameterType	void *		6404197	0					
ANR	6404232	Identifier	e		6404197	1					
ANR	6404233	Parameter	void * user	201:39:4720:4729	6404197	1	True				
ANR	6404234	ParameterType	void *		6404197	0					
ANR	6404235	Identifier	user		6404197	1					
ANR	6404236	CFGEntryNode	ENTRY		6404197		True				
ANR	6404237	CFGExitNode	EXIT		6404197		True				
ANR	6404238	Symbol	p		6404197						
ANR	6404239	Symbol	* ( ( void * * ) e )		6404197						
ANR	6404240	Symbol	elem_free		6404197						
ANR	6404241	Symbol	e		6404197						
ANR	6404242	Symbol	user		6404197						
ANR	6404243	Symbol	* e		6404197						
ANR	6404244	Function	r_pvector_init	208:0:4826:4970							
ANR	6404245	FunctionDef	"r_pvector_init (RPVector * vec , RPVectorFree free)"		6404244	0					
ANR	6404246	CompoundStatement		208:60:4886:4970	6404244	0					
ANR	6404247	ExpressionStatement	"r_vector_init ( & vec -> v , sizeof ( void * ) , free ? pvector_free_elem : NULL , free )"	209:1:4889:4968	6404244	0	True				
ANR	6404248	CallExpression	"r_vector_init ( & vec -> v , sizeof ( void * ) , free ? pvector_free_elem : NULL , free )"		6404244	0					
ANR	6404249	Callee	r_vector_init		6404244	0					
ANR	6404250	Identifier	r_vector_init		6404244	0					
ANR	6404251	ArgumentList	& vec -> v		6404244	1					
ANR	6404252	Argument	& vec -> v		6404244	0					
ANR	6404253	UnaryOperationExpression	& vec -> v		6404244	0					
ANR	6404254	UnaryOperator	&		6404244	0					
ANR	6404255	PtrMemberAccess	vec -> v		6404244	1					
ANR	6404256	Identifier	vec		6404244	0					
ANR	6404257	Identifier	v		6404244	1					
ANR	6404258	Argument	sizeof ( void * )		6404244	1					
ANR	6404259	SizeofExpression	sizeof ( void * )		6404244	0					
ANR	6404260	Sizeof	sizeof		6404244	0					
ANR	6404261	SizeofOperand	void *		6404244	1					
ANR	6404262	Argument	free ? pvector_free_elem : NULL		6404244	2					
ANR	6404263	ConditionalExpression	free ? pvector_free_elem : NULL		6404244	0					
ANR	6404264	Condition	free		6404244	0					
ANR	6404265	Identifier	free		6404244	0					
ANR	6404266	Identifier	pvector_free_elem		6404244	1					
ANR	6404267	Identifier	NULL		6404244	2					
ANR	6404268	Argument	free		6404244	3					
ANR	6404269	Identifier	free		6404244	0					
ANR	6404270	ReturnType	R_API void		6404244	1					
ANR	6404271	Identifier	r_pvector_init		6404244	2					
ANR	6404272	ParameterList	"RPVector * vec , RPVectorFree free"		6404244	3					
ANR	6404273	Parameter	RPVector * vec	208:26:4852:4864	6404244	0	True				
ANR	6404274	ParameterType	RPVector *		6404244	0					
ANR	6404275	Identifier	vec		6404244	1					
ANR	6404276	Parameter	RPVectorFree free	208:41:4867:4883	6404244	1	True				
ANR	6404277	ParameterType	RPVectorFree		6404244	0					
ANR	6404278	Identifier	free		6404244	1					
ANR	6404279	CFGEntryNode	ENTRY		6404244		True				
ANR	6404280	CFGExitNode	EXIT		6404244		True				
ANR	6404281	Symbol	& vec -> v		6404244						
ANR	6404282	Symbol	pvector_free_elem		6404244						
ANR	6404283	Symbol	NULL		6404244						
ANR	6404284	Symbol	vec		6404244						
ANR	6404285	Symbol	free		6404244						
ANR	6404286	Function	r_pvector_new	212:0:4973:5124							
ANR	6404287	FunctionDef	r_pvector_new (RPVectorFree free)		6404286	0					
ANR	6404288	CompoundStatement		212:49:5022:5124	6404286	0					
ANR	6404289	IdentifierDeclStatement	RPVector * v = R_NEW ( RPVector ) ;	213:1:5025:5055	6404286	0	True				
ANR	6404290	IdentifierDecl	* v = R_NEW ( RPVector )		6404286	0					
ANR	6404291	IdentifierDeclType	RPVector *		6404286	0					
ANR	6404292	Identifier	v		6404286	1					
ANR	6404293	AssignmentExpression	* v = R_NEW ( RPVector )		6404286	2		=			
ANR	6404294	Identifier	v		6404286	0					
ANR	6404295	CallExpression	R_NEW ( RPVector )		6404286	1					
ANR	6404296	Callee	R_NEW		6404286	0					
ANR	6404297	Identifier	R_NEW		6404286	0					
ANR	6404298	ArgumentList	RPVector		6404286	1					
ANR	6404299	Argument	RPVector		6404286	0					
ANR	6404300	Identifier	RPVector		6404286	0					
ANR	6404301	IfStatement	if ( ! v )		6404286	1					
ANR	6404302	Condition	! v	214:5:5062:5063	6404286	0	True				
ANR	6404303	UnaryOperationExpression	! v		6404286	0					
ANR	6404304	UnaryOperator	!		6404286	0					
ANR	6404305	Identifier	v		6404286	1					
ANR	6404306	CompoundStatement		3:9:43:43	6404286	1					
ANR	6404307	ReturnStatement	return NULL ;	215:2:5070:5081	6404286	0	True				
ANR	6404308	Identifier	NULL		6404286	0					
ANR	6404309	ExpressionStatement	"r_pvector_init ( v , free )"	217:1:5087:5111	6404286	2	True				
ANR	6404310	CallExpression	"r_pvector_init ( v , free )"		6404286	0					
ANR	6404311	Callee	r_pvector_init		6404286	0					
ANR	6404312	Identifier	r_pvector_init		6404286	0					
ANR	6404313	ArgumentList	v		6404286	1					
ANR	6404314	Argument	v		6404286	0					
ANR	6404315	Identifier	v		6404286	0					
ANR	6404316	Argument	free		6404286	1					
ANR	6404317	Identifier	free		6404286	0					
ANR	6404318	ReturnStatement	return v ;	218:1:5114:5122	6404286	3	True				
ANR	6404319	Identifier	v		6404286	0					
ANR	6404320	ReturnType	R_API RPVector *		6404286	1					
ANR	6404321	Identifier	r_pvector_new		6404286	2					
ANR	6404322	ParameterList	RPVectorFree free		6404286	3					
ANR	6404323	Parameter	RPVectorFree free	212:30:5003:5019	6404286	0	True				
ANR	6404324	ParameterType	RPVectorFree		6404286	0					
ANR	6404325	Identifier	free		6404286	1					
ANR	6404326	CFGEntryNode	ENTRY		6404286		True				
ANR	6404327	CFGExitNode	EXIT		6404286		True				
ANR	6404328	Symbol	RPVector		6404286						
ANR	6404329	Symbol	NULL		6404286						
ANR	6404330	Symbol	v		6404286						
ANR	6404331	Symbol	free		6404286						
ANR	6404332	Symbol	R_NEW		6404286						
ANR	6404333	Function	r_pvector_clear	221:0:5127:5198							
ANR	6404334	FunctionDef	r_pvector_clear (RPVector * vec)		6404333	0					
ANR	6404335	CompoundStatement		221:42:5169:5198	6404333	0					
ANR	6404336	ExpressionStatement	r_vector_clear ( & vec -> v )	222:1:5172:5196	6404333	0	True				
ANR	6404337	CallExpression	r_vector_clear ( & vec -> v )		6404333	0					
ANR	6404338	Callee	r_vector_clear		6404333	0					
ANR	6404339	Identifier	r_vector_clear		6404333	0					
ANR	6404340	ArgumentList	& vec -> v		6404333	1					
ANR	6404341	Argument	& vec -> v		6404333	0					
ANR	6404342	UnaryOperationExpression	& vec -> v		6404333	0					
ANR	6404343	UnaryOperator	&		6404333	0					
ANR	6404344	PtrMemberAccess	vec -> v		6404333	1					
ANR	6404345	Identifier	vec		6404333	0					
ANR	6404346	Identifier	v		6404333	1					
ANR	6404347	ReturnType	R_API void		6404333	1					
ANR	6404348	Identifier	r_pvector_clear		6404333	2					
ANR	6404349	ParameterList	RPVector * vec		6404333	3					
ANR	6404350	Parameter	RPVector * vec	221:27:5154:5166	6404333	0	True				
ANR	6404351	ParameterType	RPVector *		6404333	0					
ANR	6404352	Identifier	vec		6404333	1					
ANR	6404353	CFGEntryNode	ENTRY		6404333		True				
ANR	6404354	CFGExitNode	EXIT		6404333		True				
ANR	6404355	Symbol	& vec -> v		6404333						
ANR	6404356	Symbol	vec		6404333						
ANR	6404357	Function	r_pvector_free	225:0:5201:5310							
ANR	6404358	FunctionDef	r_pvector_free (RPVector * vec)		6404357	0					
ANR	6404359	CompoundStatement		225:41:5242:5310	6404357	0					
ANR	6404360	IfStatement	if ( ! vec )		6404357	0					
ANR	6404361	Condition	! vec	226:5:5249:5252	6404357	0	True				
ANR	6404362	UnaryOperationExpression	! vec		6404357	0					
ANR	6404363	UnaryOperator	!		6404357	0					
ANR	6404364	Identifier	vec		6404357	1					
ANR	6404365	CompoundStatement		2:11:12:12	6404357	1					
ANR	6404366	ReturnStatement	return ;	227:2:5259:5265	6404357	0	True				
ANR	6404367	ExpressionStatement	r_vector_clear ( & vec -> v )	229:1:5271:5295	6404357	1	True				
ANR	6404368	CallExpression	r_vector_clear ( & vec -> v )		6404357	0					
ANR	6404369	Callee	r_vector_clear		6404357	0					
ANR	6404370	Identifier	r_vector_clear		6404357	0					
ANR	6404371	ArgumentList	& vec -> v		6404357	1					
ANR	6404372	Argument	& vec -> v		6404357	0					
ANR	6404373	UnaryOperationExpression	& vec -> v		6404357	0					
ANR	6404374	UnaryOperator	&		6404357	0					
ANR	6404375	PtrMemberAccess	vec -> v		6404357	1					
ANR	6404376	Identifier	vec		6404357	0					
ANR	6404377	Identifier	v		6404357	1					
ANR	6404378	ExpressionStatement	free ( vec )	230:1:5298:5308	6404357	2	True				
ANR	6404379	CallExpression	free ( vec )		6404357	0					
ANR	6404380	Callee	free		6404357	0					
ANR	6404381	Identifier	free		6404357	0					
ANR	6404382	ArgumentList	vec		6404357	1					
ANR	6404383	Argument	vec		6404357	0					
ANR	6404384	Identifier	vec		6404357	0					
ANR	6404385	ReturnType	R_API void		6404357	1					
ANR	6404386	Identifier	r_pvector_free		6404357	2					
ANR	6404387	ParameterList	RPVector * vec		6404357	3					
ANR	6404388	Parameter	RPVector * vec	225:26:5227:5239	6404357	0	True				
ANR	6404389	ParameterType	RPVector *		6404357	0					
ANR	6404390	Identifier	vec		6404357	1					
ANR	6404391	CFGEntryNode	ENTRY		6404357		True				
ANR	6404392	CFGExitNode	EXIT		6404357		True				
ANR	6404393	Symbol	& vec -> v		6404357						
ANR	6404394	Symbol	vec		6404357						
ANR	6404395	Function	r_pvector_contains	233:0:5313:5511							
ANR	6404396	FunctionDef	"r_pvector_contains (RPVector * vec , void * x)"		6404395	0					
ANR	6404397	CompoundStatement		233:56:5369:5511	6404395	0					
ANR	6404398	IdentifierDeclStatement	size_t i ;	234:1:5372:5380	6404395	0	True				
ANR	6404399	IdentifierDecl	i		6404395	0					
ANR	6404400	IdentifierDeclType	size_t		6404395	0					
ANR	6404401	Identifier	i		6404395	1					
ANR	6404402	ForStatement	for ( i = 0 ; i < vec -> v . len ; i ++ )		6404395	1					
ANR	6404403	ForInit	i = 0 ;	235:6:5388:5393	6404395	0	True				
ANR	6404404	AssignmentExpression	i = 0		6404395	0		=			
ANR	6404405	Identifier	i		6404395	0					
ANR	6404406	PrimaryExpression	0		6404395	1					
ANR	6404407	Condition	i < vec -> v . len	235:13:5395:5408	6404395	1	True				
ANR	6404408	RelationalExpression	i < vec -> v . len		6404395	0		<			
ANR	6404409	Identifier	i		6404395	0					
ANR	6404410	MemberAccess	vec -> v . len		6404395	1					
ANR	6404411	PtrMemberAccess	vec -> v		6404395	0					
ANR	6404412	Identifier	vec		6404395	0					
ANR	6404413	Identifier	v		6404395	1					
ANR	6404414	Identifier	len		6404395	1					
ANR	6404415	PostIncDecOperationExpression	i ++	235:29:5411:5413	6404395	2	True				
ANR	6404416	Identifier	i		6404395	0					
ANR	6404417	IncDec	++		6404395	1					
ANR	6404418	CompoundStatement		3:34:46:46	6404395	3					
ANR	6404419	IfStatement	if ( ( ( void * * ) vec -> v . a ) [ i ] == x )		6404395	0					
ANR	6404420	Condition	( ( void * * ) vec -> v . a ) [ i ] == x	236:6:5424:5450	6404395	0	True				
ANR	6404421	EqualityExpression	( ( void * * ) vec -> v . a ) [ i ] == x		6404395	0		==			
ANR	6404422	ArrayIndexing	( ( void * * ) vec -> v . a ) [ i ]		6404395	0					
ANR	6404423	CastExpression	( void * * ) vec -> v . a		6404395	0					
ANR	6404424	CastTarget	void * *		6404395	0					
ANR	6404425	MemberAccess	vec -> v . a		6404395	1					
ANR	6404426	PtrMemberAccess	vec -> v		6404395	0					
ANR	6404427	Identifier	vec		6404395	0					
ANR	6404428	Identifier	v		6404395	1					
ANR	6404429	Identifier	a		6404395	1					
ANR	6404430	Identifier	i		6404395	1					
ANR	6404431	Identifier	x		6404395	1					
ANR	6404432	CompoundStatement		4:35:83:83	6404395	1					
ANR	6404433	ReturnStatement	return & ( ( void * * ) vec -> v . a ) [ i ] ;	237:3:5458:5488	6404395	0	True				
ANR	6404434	UnaryOperationExpression	& ( ( void * * ) vec -> v . a ) [ i ]		6404395	0					
ANR	6404435	UnaryOperator	&		6404395	0					
ANR	6404436	ArrayIndexing	( ( void * * ) vec -> v . a ) [ i ]		6404395	1					
ANR	6404437	CastExpression	( void * * ) vec -> v . a		6404395	0					
ANR	6404438	CastTarget	void * *		6404395	0					
ANR	6404439	MemberAccess	vec -> v . a		6404395	1					
ANR	6404440	PtrMemberAccess	vec -> v		6404395	0					
ANR	6404441	Identifier	vec		6404395	0					
ANR	6404442	Identifier	v		6404395	1					
ANR	6404443	Identifier	a		6404395	1					
ANR	6404444	Identifier	i		6404395	1					
ANR	6404445	ReturnStatement	return NULL ;	240:1:5498:5509	6404395	2	True				
ANR	6404446	Identifier	NULL		6404395	0					
ANR	6404447	ReturnType	R_API void * *		6404395	1					
ANR	6404448	Identifier	r_pvector_contains		6404395	2					
ANR	6404449	ParameterList	"RPVector * vec , void * x"		6404395	3					
ANR	6404450	Parameter	RPVector * vec	233:32:5345:5357	6404395	0	True				
ANR	6404451	ParameterType	RPVector *		6404395	0					
ANR	6404452	Identifier	vec		6404395	1					
ANR	6404453	Parameter	void * x	233:47:5360:5366	6404395	1	True				
ANR	6404454	ParameterType	void *		6404395	0					
ANR	6404455	Identifier	x		6404395	1					
ANR	6404456	CFGEntryNode	ENTRY		6404395		True				
ANR	6404457	CFGExitNode	EXIT		6404395		True				
ANR	6404458	Symbol	* i		6404395						
ANR	6404459	Symbol	vec -> v . a		6404395						
ANR	6404460	Symbol	NULL		6404395						
ANR	6404461	Symbol	vec		6404395						
ANR	6404462	Symbol	x		6404395						
ANR	6404463	Symbol	* * vec		6404395						
ANR	6404464	Symbol	i		6404395						
ANR	6404465	Symbol	vec -> v		6404395						
ANR	6404466	Symbol	* vec -> v		6404395						
ANR	6404467	Symbol	* vec -> v . a		6404395						
ANR	6404468	Symbol	* vec		6404395						
ANR	6404469	Symbol	vec -> v . len		6404395						
ANR	6404470	Function	r_pvector_remove_at	243:0:5514:5670							
ANR	6404471	FunctionDef	"r_pvector_remove_at (RPVector * vec , size_t index)"		6404470	0					
ANR	6404472	CompoundStatement		243:61:5575:5670	6404470	0					
ANR	6404473	IdentifierDeclStatement	"void * r = r_pvector_at ( vec , index ) ;"	244:1:5578:5613	6404470	0	True				
ANR	6404474	IdentifierDecl	"* r = r_pvector_at ( vec , index )"		6404470	0					
ANR	6404475	IdentifierDeclType	void *		6404470	0					
ANR	6404476	Identifier	r		6404470	1					
ANR	6404477	AssignmentExpression	"* r = r_pvector_at ( vec , index )"		6404470	2		=			
ANR	6404478	Identifier	r		6404470	0					
ANR	6404479	CallExpression	"r_pvector_at ( vec , index )"		6404470	1					
ANR	6404480	Callee	r_pvector_at		6404470	0					
ANR	6404481	Identifier	r_pvector_at		6404470	0					
ANR	6404482	ArgumentList	vec		6404470	1					
ANR	6404483	Argument	vec		6404470	0					
ANR	6404484	Identifier	vec		6404470	0					
ANR	6404485	Argument	index		6404470	1					
ANR	6404486	Identifier	index		6404470	0					
ANR	6404487	ExpressionStatement	"r_vector_remove_at ( & vec -> v , index , NULL )"	245:1:5616:5657	6404470	1	True				
ANR	6404488	CallExpression	"r_vector_remove_at ( & vec -> v , index , NULL )"		6404470	0					
ANR	6404489	Callee	r_vector_remove_at		6404470	0					
ANR	6404490	Identifier	r_vector_remove_at		6404470	0					
ANR	6404491	ArgumentList	& vec -> v		6404470	1					
ANR	6404492	Argument	& vec -> v		6404470	0					
ANR	6404493	UnaryOperationExpression	& vec -> v		6404470	0					
ANR	6404494	UnaryOperator	&		6404470	0					
ANR	6404495	PtrMemberAccess	vec -> v		6404470	1					
ANR	6404496	Identifier	vec		6404470	0					
ANR	6404497	Identifier	v		6404470	1					
ANR	6404498	Argument	index		6404470	1					
ANR	6404499	Identifier	index		6404470	0					
ANR	6404500	Argument	NULL		6404470	2					
ANR	6404501	Identifier	NULL		6404470	0					
ANR	6404502	ReturnStatement	return r ;	246:1:5660:5668	6404470	2	True				
ANR	6404503	Identifier	r		6404470	0					
ANR	6404504	ReturnType	R_API void *		6404470	1					
ANR	6404505	Identifier	r_pvector_remove_at		6404470	2					
ANR	6404506	ParameterList	"RPVector * vec , size_t index"		6404470	3					
ANR	6404507	Parameter	RPVector * vec	243:32:5546:5558	6404470	0	True				
ANR	6404508	ParameterType	RPVector *		6404470	0					
ANR	6404509	Identifier	vec		6404470	1					
ANR	6404510	Parameter	size_t index	243:47:5561:5572	6404470	1	True				
ANR	6404511	ParameterType	size_t		6404470	0					
ANR	6404512	Identifier	index		6404470	1					
ANR	6404513	CFGEntryNode	ENTRY		6404470		True				
ANR	6404514	CFGExitNode	EXIT		6404470		True				
ANR	6404515	Symbol	& vec -> v		6404470						
ANR	6404516	Symbol	r		6404470						
ANR	6404517	Symbol	NULL		6404470						
ANR	6404518	Symbol	vec		6404470						
ANR	6404519	Symbol	r_pvector_at		6404470						
ANR	6404520	Symbol	index		6404470						
ANR	6404521	Function	r_pvector_remove_data	249:0:5673:5884							
ANR	6404522	FunctionDef	"r_pvector_remove_data (RPVector * vec , void * x)"		6404521	0					
ANR	6404523	CompoundStatement		249:57:5730:5884	6404521	0					
ANR	6404524	IdentifierDeclStatement	"void * * el = r_pvector_contains ( vec , x ) ;"	250:1:5733:5772	6404521	0	True				
ANR	6404525	IdentifierDecl	"* * el = r_pvector_contains ( vec , x )"		6404521	0					
ANR	6404526	IdentifierDeclType	void * *		6404521	0					
ANR	6404527	Identifier	el		6404521	1					
ANR	6404528	AssignmentExpression	"* * el = r_pvector_contains ( vec , x )"		6404521	2		=			
ANR	6404529	Identifier	el		6404521	0					
ANR	6404530	CallExpression	"r_pvector_contains ( vec , x )"		6404521	1					
ANR	6404531	Callee	r_pvector_contains		6404521	0					
ANR	6404532	Identifier	r_pvector_contains		6404521	0					
ANR	6404533	ArgumentList	vec		6404521	1					
ANR	6404534	Argument	vec		6404521	0					
ANR	6404535	Identifier	vec		6404521	0					
ANR	6404536	Argument	x		6404521	1					
ANR	6404537	Identifier	x		6404521	0					
ANR	6404538	IfStatement	if ( ! el )		6404521	1					
ANR	6404539	Condition	! el	251:5:5779:5781	6404521	0	True				
ANR	6404540	UnaryOperationExpression	! el		6404521	0					
ANR	6404541	UnaryOperator	!		6404521	0					
ANR	6404542	Identifier	el		6404521	1					
ANR	6404543	CompoundStatement		3:10:53:53	6404521	1					
ANR	6404544	ReturnStatement	return ;	252:2:5788:5794	6404521	0	True				
ANR	6404545	IdentifierDeclStatement	size_t index = el - ( void * * ) vec -> v . a ;	255:1:5801:5838	6404521	2	True				
ANR	6404546	IdentifierDecl	index = el - ( void * * ) vec -> v . a		6404521	0					
ANR	6404547	IdentifierDeclType	size_t		6404521	0					
ANR	6404548	Identifier	index		6404521	1					
ANR	6404549	AssignmentExpression	index = el - ( void * * ) vec -> v . a		6404521	2		=			
ANR	6404550	Identifier	index		6404521	0					
ANR	6404551	AdditiveExpression	el - ( void * * ) vec -> v . a		6404521	1		-			
ANR	6404552	Identifier	el		6404521	0					
ANR	6404553	CastExpression	( void * * ) vec -> v . a		6404521	1					
ANR	6404554	CastTarget	void * *		6404521	0					
ANR	6404555	MemberAccess	vec -> v . a		6404521	1					
ANR	6404556	PtrMemberAccess	vec -> v		6404521	0					
ANR	6404557	Identifier	vec		6404521	0					
ANR	6404558	Identifier	v		6404521	1					
ANR	6404559	Identifier	a		6404521	1					
ANR	6404560	ExpressionStatement	"r_vector_remove_at ( & vec -> v , index , NULL )"	256:1:5841:5882	6404521	3	True				
ANR	6404561	CallExpression	"r_vector_remove_at ( & vec -> v , index , NULL )"		6404521	0					
ANR	6404562	Callee	r_vector_remove_at		6404521	0					
ANR	6404563	Identifier	r_vector_remove_at		6404521	0					
ANR	6404564	ArgumentList	& vec -> v		6404521	1					
ANR	6404565	Argument	& vec -> v		6404521	0					
ANR	6404566	UnaryOperationExpression	& vec -> v		6404521	0					
ANR	6404567	UnaryOperator	&		6404521	0					
ANR	6404568	PtrMemberAccess	vec -> v		6404521	1					
ANR	6404569	Identifier	vec		6404521	0					
ANR	6404570	Identifier	v		6404521	1					
ANR	6404571	Argument	index		6404521	1					
ANR	6404572	Identifier	index		6404521	0					
ANR	6404573	Argument	NULL		6404521	2					
ANR	6404574	Identifier	NULL		6404521	0					
ANR	6404575	ReturnType	R_API void		6404521	1					
ANR	6404576	Identifier	r_pvector_remove_data		6404521	2					
ANR	6404577	ParameterList	"RPVector * vec , void * x"		6404521	3					
ANR	6404578	Parameter	RPVector * vec	249:33:5706:5718	6404521	0	True				
ANR	6404579	ParameterType	RPVector *		6404521	0					
ANR	6404580	Identifier	vec		6404521	1					
ANR	6404581	Parameter	void * x	249:48:5721:5727	6404521	1	True				
ANR	6404582	ParameterType	void *		6404521	0					
ANR	6404583	Identifier	x		6404521	1					
ANR	6404584	CFGEntryNode	ENTRY		6404521		True				
ANR	6404585	CFGExitNode	EXIT		6404521		True				
ANR	6404586	Symbol	& vec -> v		6404521						
ANR	6404587	Symbol	vec -> v . a		6404521						
ANR	6404588	Symbol	NULL		6404521						
ANR	6404589	Symbol	vec		6404521						
ANR	6404590	Symbol	el		6404521						
ANR	6404591	Symbol	r_pvector_contains		6404521						
ANR	6404592	Symbol	x		6404521						
ANR	6404593	Symbol	index		6404521						
ANR	6404594	Symbol	vec -> v		6404521						
ANR	6404595	Symbol	* vec		6404521						
ANR	6404596	Function	r_pvector_pop	259:0:5887:6019							
ANR	6404597	FunctionDef	r_pvector_pop (RPVector * vec)		6404596	0					
ANR	6404598	CompoundStatement		259:41:5928:6019	6404596	0					
ANR	6404599	IdentifierDeclStatement	"void * r = r_pvector_at ( vec , vec -> v . len - 1 ) ;"	260:1:5931:5975	6404596	0	True				
ANR	6404600	IdentifierDecl	"* r = r_pvector_at ( vec , vec -> v . len - 1 )"		6404596	0					
ANR	6404601	IdentifierDeclType	void *		6404596	0					
ANR	6404602	Identifier	r		6404596	1					
ANR	6404603	AssignmentExpression	"* r = r_pvector_at ( vec , vec -> v . len - 1 )"		6404596	2		=			
ANR	6404604	Identifier	r		6404596	0					
ANR	6404605	CallExpression	"r_pvector_at ( vec , vec -> v . len - 1 )"		6404596	1					
ANR	6404606	Callee	r_pvector_at		6404596	0					
ANR	6404607	Identifier	r_pvector_at		6404596	0					
ANR	6404608	ArgumentList	vec		6404596	1					
ANR	6404609	Argument	vec		6404596	0					
ANR	6404610	Identifier	vec		6404596	0					
ANR	6404611	Argument	vec -> v . len - 1		6404596	1					
ANR	6404612	AdditiveExpression	vec -> v . len - 1		6404596	0		-			
ANR	6404613	MemberAccess	vec -> v . len		6404596	0					
ANR	6404614	PtrMemberAccess	vec -> v		6404596	0					
ANR	6404615	Identifier	vec		6404596	0					
ANR	6404616	Identifier	v		6404596	1					
ANR	6404617	Identifier	len		6404596	1					
ANR	6404618	PrimaryExpression	1		6404596	1					
ANR	6404619	ExpressionStatement	"r_vector_pop ( & vec -> v , NULL )"	261:1:5978:6006	6404596	1	True				
ANR	6404620	CallExpression	"r_vector_pop ( & vec -> v , NULL )"		6404596	0					
ANR	6404621	Callee	r_vector_pop		6404596	0					
ANR	6404622	Identifier	r_vector_pop		6404596	0					
ANR	6404623	ArgumentList	& vec -> v		6404596	1					
ANR	6404624	Argument	& vec -> v		6404596	0					
ANR	6404625	UnaryOperationExpression	& vec -> v		6404596	0					
ANR	6404626	UnaryOperator	&		6404596	0					
ANR	6404627	PtrMemberAccess	vec -> v		6404596	1					
ANR	6404628	Identifier	vec		6404596	0					
ANR	6404629	Identifier	v		6404596	1					
ANR	6404630	Argument	NULL		6404596	1					
ANR	6404631	Identifier	NULL		6404596	0					
ANR	6404632	ReturnStatement	return r ;	262:1:6009:6017	6404596	2	True				
ANR	6404633	Identifier	r		6404596	0					
ANR	6404634	ReturnType	R_API void *		6404596	1					
ANR	6404635	Identifier	r_pvector_pop		6404596	2					
ANR	6404636	ParameterList	RPVector * vec		6404596	3					
ANR	6404637	Parameter	RPVector * vec	259:26:5913:5925	6404596	0	True				
ANR	6404638	ParameterType	RPVector *		6404596	0					
ANR	6404639	Identifier	vec		6404596	1					
ANR	6404640	CFGEntryNode	ENTRY		6404596		True				
ANR	6404641	CFGExitNode	EXIT		6404596		True				
ANR	6404642	Symbol	& vec -> v		6404596						
ANR	6404643	Symbol	r		6404596						
ANR	6404644	Symbol	NULL		6404596						
ANR	6404645	Symbol	vec		6404596						
ANR	6404646	Symbol	r_pvector_at		6404596						
ANR	6404647	Symbol	vec -> v		6404596						
ANR	6404648	Symbol	* vec		6404596						
ANR	6404649	Symbol	vec -> v . len		6404596						
ANR	6404650	Function	r_pvector_pop_front	265:0:6022:6153							
ANR	6404651	FunctionDef	r_pvector_pop_front (RPVector * vec)		6404650	0					
ANR	6404652	CompoundStatement		265:47:6069:6153	6404650	0					
ANR	6404653	IdentifierDeclStatement	"void * r = r_pvector_at ( vec , 0 ) ;"	266:1:6072:6103	6404650	0	True				
ANR	6404654	IdentifierDecl	"* r = r_pvector_at ( vec , 0 )"		6404650	0					
ANR	6404655	IdentifierDeclType	void *		6404650	0					
ANR	6404656	Identifier	r		6404650	1					
ANR	6404657	AssignmentExpression	"* r = r_pvector_at ( vec , 0 )"		6404650	2		=			
ANR	6404658	Identifier	r		6404650	0					
ANR	6404659	CallExpression	"r_pvector_at ( vec , 0 )"		6404650	1					
ANR	6404660	Callee	r_pvector_at		6404650	0					
ANR	6404661	Identifier	r_pvector_at		6404650	0					
ANR	6404662	ArgumentList	vec		6404650	1					
ANR	6404663	Argument	vec		6404650	0					
ANR	6404664	Identifier	vec		6404650	0					
ANR	6404665	Argument	0		6404650	1					
ANR	6404666	PrimaryExpression	0		6404650	0					
ANR	6404667	ExpressionStatement	"r_vector_pop_front ( & vec -> v , NULL )"	267:1:6106:6140	6404650	1	True				
ANR	6404668	CallExpression	"r_vector_pop_front ( & vec -> v , NULL )"		6404650	0					
ANR	6404669	Callee	r_vector_pop_front		6404650	0					
ANR	6404670	Identifier	r_vector_pop_front		6404650	0					
ANR	6404671	ArgumentList	& vec -> v		6404650	1					
ANR	6404672	Argument	& vec -> v		6404650	0					
ANR	6404673	UnaryOperationExpression	& vec -> v		6404650	0					
ANR	6404674	UnaryOperator	&		6404650	0					
ANR	6404675	PtrMemberAccess	vec -> v		6404650	1					
ANR	6404676	Identifier	vec		6404650	0					
ANR	6404677	Identifier	v		6404650	1					
ANR	6404678	Argument	NULL		6404650	1					
ANR	6404679	Identifier	NULL		6404650	0					
ANR	6404680	ReturnStatement	return r ;	268:1:6143:6151	6404650	2	True				
ANR	6404681	Identifier	r		6404650	0					
ANR	6404682	ReturnType	R_API void *		6404650	1					
ANR	6404683	Identifier	r_pvector_pop_front		6404650	2					
ANR	6404684	ParameterList	RPVector * vec		6404650	3					
ANR	6404685	Parameter	RPVector * vec	265:32:6054:6066	6404650	0	True				
ANR	6404686	ParameterType	RPVector *		6404650	0					
ANR	6404687	Identifier	vec		6404650	1					
ANR	6404688	CFGEntryNode	ENTRY		6404650		True				
ANR	6404689	CFGExitNode	EXIT		6404650		True				
ANR	6404690	Symbol	& vec -> v		6404650						
ANR	6404691	Symbol	r		6404650						
ANR	6404692	Symbol	NULL		6404650						
ANR	6404693	Symbol	vec		6404650						
ANR	6404694	Symbol	r_pvector_at		6404650						
ANR	6404695	Function	quick_sort	272:0:6199:6585							
ANR	6404696	FunctionDef	"quick_sort (void * * a , size_t n , RPVectorComparator cmp)"		6404695	0					
ANR	6404697	CompoundStatement		272:67:6266:6585	6404695	0					
ANR	6404698	IfStatement	if ( n <= 1 )		6404695	0					
ANR	6404699	Condition	n <= 1	273:5:6273:6278	6404695	0	True				
ANR	6404700	RelationalExpression	n <= 1		6404695	0		<=			
ANR	6404701	Identifier	n		6404695	0					
ANR	6404702	PrimaryExpression	1		6404695	1					
ANR	6404703	CompoundStatement		2:13:14:14	6404695	1					
ANR	6404704	ReturnStatement	return ;	274:2:6285:6291	6404695	0	True				
ANR	6404705	IdentifierDeclStatement	"int i = rand ( ) % n , j = 0 ;"	276:1:6297:6322	6404695	1	True				
ANR	6404706	IdentifierDecl	i = rand ( ) % n		6404695	0					
ANR	6404707	IdentifierDeclType	int		6404695	0					
ANR	6404708	Identifier	i		6404695	1					
ANR	6404709	AssignmentExpression	i = rand ( ) % n		6404695	2		=			
ANR	6404710	Identifier	i		6404695	0					
ANR	6404711	MultiplicativeExpression	rand ( ) % n		6404695	1		%			
ANR	6404712	CallExpression	rand ( )		6404695	0					
ANR	6404713	Callee	rand		6404695	0					
ANR	6404714	Identifier	rand		6404695	0					
ANR	6404715	ArgumentList			6404695	1					
ANR	6404716	Identifier	n		6404695	1					
ANR	6404717	IdentifierDecl	j = 0		6404695	1					
ANR	6404718	IdentifierDeclType	int		6404695	0					
ANR	6404719	Identifier	j		6404695	1					
ANR	6404720	AssignmentExpression	j = 0		6404695	2		=			
ANR	6404721	Identifier	j		6404695	0					
ANR	6404722	PrimaryExpression	0		6404695	1					
ANR	6404723	IdentifierDeclStatement	"void * t , * pivot = a [ i ] ;"	277:1:6325:6347	6404695	2	True				
ANR	6404724	IdentifierDecl	* t		6404695	0					
ANR	6404725	IdentifierDeclType	void *		6404695	0					
ANR	6404726	Identifier	t		6404695	1					
ANR	6404727	IdentifierDecl	* pivot = a [ i ]		6404695	1					
ANR	6404728	IdentifierDeclType	void *		6404695	0					
ANR	6404729	Identifier	pivot		6404695	1					
ANR	6404730	AssignmentExpression	* pivot = a [ i ]		6404695	2		=			
ANR	6404731	Identifier	pivot		6404695	0					
ANR	6404732	ArrayIndexing	a [ i ]		6404695	1					
ANR	6404733	Identifier	a		6404695	0					
ANR	6404734	Identifier	i		6404695	1					
ANR	6404735	ExpressionStatement	a [ i ] = a [ n - 1 ]	278:1:6350:6365	6404695	3	True				
ANR	6404736	AssignmentExpression	a [ i ] = a [ n - 1 ]		6404695	0		=			
ANR	6404737	ArrayIndexing	a [ i ]		6404695	0					
ANR	6404738	Identifier	a		6404695	0					
ANR	6404739	Identifier	i		6404695	1					
ANR	6404740	ArrayIndexing	a [ n - 1 ]		6404695	1					
ANR	6404741	Identifier	a		6404695	0					
ANR	6404742	AdditiveExpression	n - 1		6404695	1		-			
ANR	6404743	Identifier	n		6404695	0					
ANR	6404744	PrimaryExpression	1		6404695	1					
ANR	6404745	ForStatement	for ( i = 0 ; i < n - 1 ; i ++ )		6404695	4					
ANR	6404746	ForInit	i = 0 ;	279:6:6373:6378	6404695	0	True				
ANR	6404747	AssignmentExpression	i = 0		6404695	0		=			
ANR	6404748	Identifier	i		6404695	0					
ANR	6404749	PrimaryExpression	0		6404695	1					
ANR	6404750	Condition	i < n - 1	279:13:6380:6388	6404695	1	True				
ANR	6404751	RelationalExpression	i < n - 1		6404695	0		<			
ANR	6404752	Identifier	i		6404695	0					
ANR	6404753	AdditiveExpression	n - 1		6404695	1		-			
ANR	6404754	Identifier	n		6404695	0					
ANR	6404755	PrimaryExpression	1		6404695	1					
ANR	6404756	PostIncDecOperationExpression	i ++	279:24:6391:6393	6404695	2	True				
ANR	6404757	Identifier	i		6404695	0					
ANR	6404758	IncDec	++		6404695	1					
ANR	6404759	CompoundStatement		8:29:129:129	6404695	3					
ANR	6404760	IfStatement	"if ( cmp ( a [ i ] , pivot ) < 0 )"		6404695	0					
ANR	6404761	Condition	"cmp ( a [ i ] , pivot ) < 0"	280:6:6404:6424	6404695	0	True				
ANR	6404762	RelationalExpression	"cmp ( a [ i ] , pivot ) < 0"		6404695	0		<			
ANR	6404763	CallExpression	"cmp ( a [ i ] , pivot )"		6404695	0					
ANR	6404764	Callee	cmp		6404695	0					
ANR	6404765	Identifier	cmp		6404695	0					
ANR	6404766	ArgumentList	a [ i ]		6404695	1					
ANR	6404767	Argument	a [ i ]		6404695	0					
ANR	6404768	ArrayIndexing	a [ i ]		6404695	0					
ANR	6404769	Identifier	a		6404695	0					
ANR	6404770	Identifier	i		6404695	1					
ANR	6404771	Argument	pivot		6404695	1					
ANR	6404772	Identifier	pivot		6404695	0					
ANR	6404773	PrimaryExpression	0		6404695	1					
ANR	6404774	CompoundStatement		9:29:160:160	6404695	1					
ANR	6404775	ExpressionStatement	t = a [ i ]	281:3:6432:6440	6404695	0	True				
ANR	6404776	AssignmentExpression	t = a [ i ]		6404695	0		=			
ANR	6404777	Identifier	t		6404695	0					
ANR	6404778	ArrayIndexing	a [ i ]		6404695	1					
ANR	6404779	Identifier	a		6404695	0					
ANR	6404780	Identifier	i		6404695	1					
ANR	6404781	ExpressionStatement	a [ i ] = a [ j ]	282:3:6445:6456	6404695	1	True				
ANR	6404782	AssignmentExpression	a [ i ] = a [ j ]		6404695	0		=			
ANR	6404783	ArrayIndexing	a [ i ]		6404695	0					
ANR	6404784	Identifier	a		6404695	0					
ANR	6404785	Identifier	i		6404695	1					
ANR	6404786	ArrayIndexing	a [ j ]		6404695	1					
ANR	6404787	Identifier	a		6404695	0					
ANR	6404788	Identifier	j		6404695	1					
ANR	6404789	ExpressionStatement	a [ j ] = t	283:3:6461:6469	6404695	2	True				
ANR	6404790	AssignmentExpression	a [ j ] = t		6404695	0		=			
ANR	6404791	ArrayIndexing	a [ j ]		6404695	0					
ANR	6404792	Identifier	a		6404695	0					
ANR	6404793	Identifier	j		6404695	1					
ANR	6404794	Identifier	t		6404695	1					
ANR	6404795	ExpressionStatement	j ++	284:3:6474:6477	6404695	3	True				
ANR	6404796	PostIncDecOperationExpression	j ++		6404695	0					
ANR	6404797	Identifier	j		6404695	0					
ANR	6404798	IncDec	++		6404695	1					
ANR	6404799	ExpressionStatement	a [ n - 1 ] = a [ j ]	287:1:6487:6502	6404695	5	True				
ANR	6404800	AssignmentExpression	a [ n - 1 ] = a [ j ]		6404695	0		=			
ANR	6404801	ArrayIndexing	a [ n - 1 ]		6404695	0					
ANR	6404802	Identifier	a		6404695	0					
ANR	6404803	AdditiveExpression	n - 1		6404695	1		-			
ANR	6404804	Identifier	n		6404695	0					
ANR	6404805	PrimaryExpression	1		6404695	1					
ANR	6404806	ArrayIndexing	a [ j ]		6404695	1					
ANR	6404807	Identifier	a		6404695	0					
ANR	6404808	Identifier	j		6404695	1					
ANR	6404809	ExpressionStatement	a [ j ] = pivot	288:1:6505:6517	6404695	6	True				
ANR	6404810	AssignmentExpression	a [ j ] = pivot		6404695	0		=			
ANR	6404811	ArrayIndexing	a [ j ]		6404695	0					
ANR	6404812	Identifier	a		6404695	0					
ANR	6404813	Identifier	j		6404695	1					
ANR	6404814	Identifier	pivot		6404695	1					
ANR	6404815	ExpressionStatement	"quick_sort ( a , j , cmp )"	289:1:6520:6542	6404695	7	True				
ANR	6404816	CallExpression	"quick_sort ( a , j , cmp )"		6404695	0					
ANR	6404817	Callee	quick_sort		6404695	0					
ANR	6404818	Identifier	quick_sort		6404695	0					
ANR	6404819	ArgumentList	a		6404695	1					
ANR	6404820	Argument	a		6404695	0					
ANR	6404821	Identifier	a		6404695	0					
ANR	6404822	Argument	j		6404695	1					
ANR	6404823	Identifier	j		6404695	0					
ANR	6404824	Argument	cmp		6404695	2					
ANR	6404825	Identifier	cmp		6404695	0					
ANR	6404826	ExpressionStatement	"quick_sort ( a + j + 1 , n - j - 1 , cmp )"	290:1:6545:6583	6404695	8	True				
ANR	6404827	CallExpression	"quick_sort ( a + j + 1 , n - j - 1 , cmp )"		6404695	0					
ANR	6404828	Callee	quick_sort		6404695	0					
ANR	6404829	Identifier	quick_sort		6404695	0					
ANR	6404830	ArgumentList	a + j + 1		6404695	1					
ANR	6404831	Argument	a + j + 1		6404695	0					
ANR	6404832	AdditiveExpression	a + j + 1		6404695	0		+			
ANR	6404833	Identifier	a		6404695	0					
ANR	6404834	AdditiveExpression	j + 1		6404695	1		+			
ANR	6404835	Identifier	j		6404695	0					
ANR	6404836	PrimaryExpression	1		6404695	1					
ANR	6404837	Argument	n - j - 1		6404695	1					
ANR	6404838	AdditiveExpression	n - j - 1		6404695	0		-			
ANR	6404839	Identifier	n		6404695	0					
ANR	6404840	AdditiveExpression	j - 1		6404695	1		-			
ANR	6404841	Identifier	j		6404695	0					
ANR	6404842	PrimaryExpression	1		6404695	1					
ANR	6404843	Argument	cmp		6404695	2					
ANR	6404844	Identifier	cmp		6404695	0					
ANR	6404845	ReturnType	static void		6404695	1					
ANR	6404846	Identifier	quick_sort		6404695	2					
ANR	6404847	ParameterList	"void * * a , size_t n , RPVectorComparator cmp"		6404695	3					
ANR	6404848	Parameter	void * * a	272:23:6222:6229	6404695	0	True				
ANR	6404849	ParameterType	void * *		6404695	0					
ANR	6404850	Identifier	a		6404695	1					
ANR	6404851	Parameter	size_t n	272:33:6232:6239	6404695	1	True				
ANR	6404852	ParameterType	size_t		6404695	0					
ANR	6404853	Identifier	n		6404695	1					
ANR	6404854	Parameter	RPVectorComparator cmp	272:43:6242:6263	6404695	2	True				
ANR	6404855	ParameterType	RPVectorComparator		6404695	0					
ANR	6404856	Identifier	cmp		6404695	1					
ANR	6404857	CFGEntryNode	ENTRY		6404695		True				
ANR	6404858	CFGExitNode	EXIT		6404695		True				
ANR	6404859	Symbol	rand		6404695						
ANR	6404860	Symbol	a		6404695						
ANR	6404861	Symbol	* i		6404695						
ANR	6404862	Symbol	t		6404695						
ANR	6404863	Symbol	* j		6404695						
ANR	6404864	Symbol	cmp		6404695						
ANR	6404865	Symbol	* n		6404695						
ANR	6404866	Symbol	i		6404695						
ANR	6404867	Symbol	pivot		6404695						
ANR	6404868	Symbol	j		6404695						
ANR	6404869	Symbol	* a		6404695						
ANR	6404870	Symbol	n		6404695						
ANR	6404871	Function	r_pvector_sort	293:0:6588:6696							
ANR	6404872	FunctionDef	"r_pvector_sort (RPVector * vec , RPVectorComparator cmp)"		6404871	0					
ANR	6404873	CompoundStatement		293:65:6653:6696	6404871	0					
ANR	6404874	ExpressionStatement	"quick_sort ( vec -> v . a , vec -> v . len , cmp )"	294:1:6656:6694	6404871	0	True				
ANR	6404875	CallExpression	"quick_sort ( vec -> v . a , vec -> v . len , cmp )"		6404871	0					
ANR	6404876	Callee	quick_sort		6404871	0					
ANR	6404877	Identifier	quick_sort		6404871	0					
ANR	6404878	ArgumentList	vec -> v . a		6404871	1					
ANR	6404879	Argument	vec -> v . a		6404871	0					
ANR	6404880	MemberAccess	vec -> v . a		6404871	0					
ANR	6404881	PtrMemberAccess	vec -> v		6404871	0					
ANR	6404882	Identifier	vec		6404871	0					
ANR	6404883	Identifier	v		6404871	1					
ANR	6404884	Identifier	a		6404871	1					
ANR	6404885	Argument	vec -> v . len		6404871	1					
ANR	6404886	MemberAccess	vec -> v . len		6404871	0					
ANR	6404887	PtrMemberAccess	vec -> v		6404871	0					
ANR	6404888	Identifier	vec		6404871	0					
ANR	6404889	Identifier	v		6404871	1					
ANR	6404890	Identifier	len		6404871	1					
ANR	6404891	Argument	cmp		6404871	2					
ANR	6404892	Identifier	cmp		6404871	0					
ANR	6404893	ReturnType	R_API void		6404871	1					
ANR	6404894	Identifier	r_pvector_sort		6404871	2					
ANR	6404895	ParameterList	"RPVector * vec , RPVectorComparator cmp"		6404871	3					
ANR	6404896	Parameter	RPVector * vec	293:26:6614:6626	6404871	0	True				
ANR	6404897	ParameterType	RPVector *		6404871	0					
ANR	6404898	Identifier	vec		6404871	1					
ANR	6404899	Parameter	RPVectorComparator cmp	293:41:6629:6650	6404871	1	True				
ANR	6404900	ParameterType	RPVectorComparator		6404871	0					
ANR	6404901	Identifier	cmp		6404871	1					
ANR	6404902	CFGEntryNode	ENTRY		6404871		True				
ANR	6404903	CFGExitNode	EXIT		6404871		True				
ANR	6404904	Symbol	vec -> v . a		6404871						
ANR	6404905	Symbol	vec		6404871						
ANR	6404906	Symbol	cmp		6404871						
ANR	6404907	Symbol	vec -> v		6404871						
ANR	6404908	Symbol	* vec		6404871						
ANR	6404909	Symbol	vec -> v . len		6404871						
