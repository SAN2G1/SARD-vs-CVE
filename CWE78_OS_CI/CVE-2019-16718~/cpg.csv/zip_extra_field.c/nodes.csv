command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6628403	File	data/converged/CVE-2019-16718~_radare2/zip_extra_field.c								
ANR	6628404	Function	_zip_ef_clone	44:0:1716:2286							
ANR	6628405	FunctionDef	"_zip_ef_clone (const struct zip_extra_field * ef , struct zip_error * error)"		6628404	0					
ANR	6628406	CompoundStatement		46:0:1814:2286	6628404	0					
ANR	6628407	IdentifierDeclStatement	"struct zip_extra_field * head , * prev , * def ;"	47:4:1820:1861	6628404	0	True				
ANR	6628408	IdentifierDecl	* head		6628404	0					
ANR	6628409	IdentifierDeclType	struct zip_extra_field *		6628404	0					
ANR	6628410	Identifier	head		6628404	1					
ANR	6628411	IdentifierDecl	* prev		6628404	1					
ANR	6628412	IdentifierDeclType	struct zip_extra_field *		6628404	0					
ANR	6628413	Identifier	prev		6628404	1					
ANR	6628414	IdentifierDecl	* def		6628404	2					
ANR	6628415	IdentifierDeclType	struct zip_extra_field *		6628404	0					
ANR	6628416	Identifier	def		6628404	1					
ANR	6628417	ExpressionStatement	head = prev = NULL	49:4:1872:1890	6628404	1	True				
ANR	6628418	AssignmentExpression	head = prev = NULL		6628404	0		=			
ANR	6628419	Identifier	head		6628404	0					
ANR	6628420	AssignmentExpression	prev = NULL		6628404	1		=			
ANR	6628421	Identifier	prev		6628404	0					
ANR	6628422	Identifier	NULL		6628404	1					
ANR	6628423	WhileStatement	while ( ef )		6628404	2					
ANR	6628424	Condition	ef	51:11:1908:1909	6628404	0	True				
ANR	6628425	Identifier	ef		6628404	0					
ANR	6628426	CompoundStatement		6:15:97:97	6628404	1					
ANR	6628427	IfStatement	"if ( ( def = _zip_ef_new ( ef -> id , ef -> size , ef -> data , ef -> flags ) ) == NULL )"		6628404	0					
ANR	6628428	Condition	"( def = _zip_ef_new ( ef -> id , ef -> size , ef -> data , ef -> flags ) ) == NULL"	52:12:1926:1989	6628404	0	True				
ANR	6628429	EqualityExpression	"( def = _zip_ef_new ( ef -> id , ef -> size , ef -> data , ef -> flags ) ) == NULL"		6628404	0		==			
ANR	6628430	AssignmentExpression	"def = _zip_ef_new ( ef -> id , ef -> size , ef -> data , ef -> flags )"		6628404	0		=			
ANR	6628431	Identifier	def		6628404	0					
ANR	6628432	CallExpression	"_zip_ef_new ( ef -> id , ef -> size , ef -> data , ef -> flags )"		6628404	1					
ANR	6628433	Callee	_zip_ef_new		6628404	0					
ANR	6628434	Identifier	_zip_ef_new		6628404	0					
ANR	6628435	ArgumentList	ef -> id		6628404	1					
ANR	6628436	Argument	ef -> id		6628404	0					
ANR	6628437	PtrMemberAccess	ef -> id		6628404	0					
ANR	6628438	Identifier	ef		6628404	0					
ANR	6628439	Identifier	id		6628404	1					
ANR	6628440	Argument	ef -> size		6628404	1					
ANR	6628441	PtrMemberAccess	ef -> size		6628404	0					
ANR	6628442	Identifier	ef		6628404	0					
ANR	6628443	Identifier	size		6628404	1					
ANR	6628444	Argument	ef -> data		6628404	2					
ANR	6628445	PtrMemberAccess	ef -> data		6628404	0					
ANR	6628446	Identifier	ef		6628404	0					
ANR	6628447	Identifier	data		6628404	1					
ANR	6628448	Argument	ef -> flags		6628404	3					
ANR	6628449	PtrMemberAccess	ef -> flags		6628404	0					
ANR	6628450	Identifier	ef		6628404	0					
ANR	6628451	Identifier	flags		6628404	1					
ANR	6628452	Identifier	NULL		6628404	1					
ANR	6628453	CompoundStatement		7:78:177:177	6628404	1					
ANR	6628454	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_MEMORY , 0 )"	53:12:2006:2045	6628404	0	True				
ANR	6628455	CallExpression	"_zip_error_set ( error , ZIP_ER_MEMORY , 0 )"		6628404	0					
ANR	6628456	Callee	_zip_error_set		6628404	0					
ANR	6628457	Identifier	_zip_error_set		6628404	0					
ANR	6628458	ArgumentList	error		6628404	1					
ANR	6628459	Argument	error		6628404	0					
ANR	6628460	Identifier	error		6628404	0					
ANR	6628461	Argument	ZIP_ER_MEMORY		6628404	1					
ANR	6628462	Identifier	ZIP_ER_MEMORY		6628404	0					
ANR	6628463	Argument	0		6628404	2					
ANR	6628464	PrimaryExpression	0		6628404	0					
ANR	6628465	ExpressionStatement	_zip_ef_free ( head )	54:12:2059:2077	6628404	1	True				
ANR	6628466	CallExpression	_zip_ef_free ( head )		6628404	0					
ANR	6628467	Callee	_zip_ef_free		6628404	0					
ANR	6628468	Identifier	_zip_ef_free		6628404	0					
ANR	6628469	ArgumentList	head		6628404	1					
ANR	6628470	Argument	head		6628404	0					
ANR	6628471	Identifier	head		6628404	0					
ANR	6628472	ReturnStatement	return NULL ;	55:12:2091:2102	6628404	2	True				
ANR	6628473	Identifier	NULL		6628404	0					
ANR	6628474	IfStatement	if ( head == NULL )		6628404	1					
ANR	6628475	Condition	head == NULL	58:12:2135:2146	6628404	0	True				
ANR	6628476	EqualityExpression	head == NULL		6628404	0		==			
ANR	6628477	Identifier	head		6628404	0					
ANR	6628478	Identifier	NULL		6628404	1					
ANR	6628479	ExpressionStatement	head = def	59:12:2161:2171	6628404	1	True				
ANR	6628480	AssignmentExpression	head = def		6628404	0		=			
ANR	6628481	Identifier	head		6628404	0					
ANR	6628482	Identifier	def		6628404	1					
ANR	6628483	IfStatement	if ( prev )		6628404	2					
ANR	6628484	Condition	prev	60:12:2185:2188	6628404	0	True				
ANR	6628485	Identifier	prev		6628404	0					
ANR	6628486	ExpressionStatement	prev -> next = def	61:12:2203:2219	6628404	1	True				
ANR	6628487	AssignmentExpression	prev -> next = def		6628404	0		=			
ANR	6628488	PtrMemberAccess	prev -> next		6628404	0					
ANR	6628489	Identifier	prev		6628404	0					
ANR	6628490	Identifier	next		6628404	1					
ANR	6628491	Identifier	def		6628404	1					
ANR	6628492	ExpressionStatement	prev = def	62:8:2229:2239	6628404	3	True				
ANR	6628493	AssignmentExpression	prev = def		6628404	0		=			
ANR	6628494	Identifier	prev		6628404	0					
ANR	6628495	Identifier	def		6628404	1					
ANR	6628496	ExpressionStatement	ef = ef -> next	64:1:2243:2256	6628404	4	True				
ANR	6628497	AssignmentExpression	ef = ef -> next		6628404	0		=			
ANR	6628498	Identifier	ef		6628404	0					
ANR	6628499	PtrMemberAccess	ef -> next		6628404	1					
ANR	6628500	Identifier	ef		6628404	0					
ANR	6628501	Identifier	next		6628404	1					
ANR	6628502	ReturnStatement	return head ;	67:4:2273:2284	6628404	3	True				
ANR	6628503	Identifier	head		6628404	0					
ANR	6628504	ReturnType	struct zip_extra_field *		6628404	1					
ANR	6628505	Identifier	_zip_ef_clone		6628404	2					
ANR	6628506	ParameterList	"const struct zip_extra_field * ef , struct zip_error * error"		6628404	3					
ANR	6628507	Parameter	const struct zip_extra_field * ef	45:14:1755:1786	6628404	0	True				
ANR	6628508	ParameterType	const struct zip_extra_field *		6628404	0					
ANR	6628509	Identifier	ef		6628404	1					
ANR	6628510	Parameter	struct zip_error * error	45:48:1789:1811	6628404	1	True				
ANR	6628511	ParameterType	struct zip_error *		6628404	0					
ANR	6628512	Identifier	error		6628404	1					
ANR	6628513	CFGEntryNode	ENTRY		6628404		True				
ANR	6628514	CFGExitNode	EXIT		6628404		True				
ANR	6628515	Symbol	ef -> data		6628404						
ANR	6628516	Symbol	prev -> next		6628404						
ANR	6628517	Symbol	ef		6628404						
ANR	6628518	Symbol	NULL		6628404						
ANR	6628519	Symbol	def		6628404						
ANR	6628520	Symbol	* ef		6628404						
ANR	6628521	Symbol	prev		6628404						
ANR	6628522	Symbol	* prev		6628404						
ANR	6628523	Symbol	error		6628404						
ANR	6628524	Symbol	ef -> id		6628404						
ANR	6628525	Symbol	head		6628404						
ANR	6628526	Symbol	ef -> size		6628404						
ANR	6628527	Symbol	_zip_ef_new		6628404						
ANR	6628528	Symbol	ef -> flags		6628404						
ANR	6628529	Symbol	ZIP_ER_MEMORY		6628404						
ANR	6628530	Symbol	ef -> next		6628404						
ANR	6628531	Function	_zip_ef_delete_by_id	71:0:2290:3032							
ANR	6628532	FunctionDef	"_zip_ef_delete_by_id (struct zip_extra_field * ef , zip_uint16_t id , zip_uint16_t id_idx , zip_flags_t flags)"		6628531	0					
ANR	6628533	CompoundStatement		73:0:2421:3032	6628531	0					
ANR	6628534	IdentifierDeclStatement	"struct zip_extra_field * head , * prev ;"	74:4:2427:2462	6628531	0	True				
ANR	6628535	IdentifierDecl	* head		6628531	0					
ANR	6628536	IdentifierDeclType	struct zip_extra_field *		6628531	0					
ANR	6628537	Identifier	head		6628531	1					
ANR	6628538	IdentifierDecl	* prev		6628531	1					
ANR	6628539	IdentifierDeclType	struct zip_extra_field *		6628531	0					
ANR	6628540	Identifier	prev		6628531	1					
ANR	6628541	IdentifierDeclStatement	int i ;	75:4:2468:2473	6628531	1	True				
ANR	6628542	IdentifierDecl	i		6628531	0					
ANR	6628543	IdentifierDeclType	int		6628531	0					
ANR	6628544	Identifier	i		6628531	1					
ANR	6628545	ExpressionStatement	i = 0	77:4:2480:2485	6628531	2	True				
ANR	6628546	AssignmentExpression	i = 0		6628531	0		=			
ANR	6628547	Identifier	i		6628531	0					
ANR	6628548	PrimaryExpression	0		6628531	1					
ANR	6628549	ExpressionStatement	head = ef	78:4:2491:2500	6628531	3	True				
ANR	6628550	AssignmentExpression	head = ef		6628531	0		=			
ANR	6628551	Identifier	head		6628531	0					
ANR	6628552	Identifier	ef		6628531	1					
ANR	6628553	ExpressionStatement	prev = NULL	79:4:2506:2517	6628531	4	True				
ANR	6628554	AssignmentExpression	prev = NULL		6628531	0		=			
ANR	6628555	Identifier	prev		6628531	0					
ANR	6628556	Identifier	NULL		6628531	1					
ANR	6628557	ForStatement	for ( ; ef ; ef = ( prev ? prev -> next : head ) )		6628531	5					
ANR	6628558	Condition	ef	80:11:2530:2531	6628531	0	True				
ANR	6628559	Identifier	ef		6628531	0					
ANR	6628560	AssignmentExpression	ef = ( prev ? prev -> next : head )	80:15:2534:2562	6628531	1	True	=			
ANR	6628561	Identifier	ef		6628531	0					
ANR	6628562	ConditionalExpression	prev ? prev -> next : head		6628531	1					
ANR	6628563	Condition	prev		6628531	0					
ANR	6628564	Identifier	prev		6628531	0					
ANR	6628565	PtrMemberAccess	prev -> next		6628531	1					
ANR	6628566	Identifier	prev		6628531	0					
ANR	6628567	Identifier	next		6628531	1					
ANR	6628568	Identifier	head		6628531	2					
ANR	6628569	CompoundStatement		8:46:143:143	6628531	2					
ANR	6628570	IfStatement	if ( ( ef -> flags & flags & ZIP_EF_BOTH ) && ef -> id == id )		6628531	0					
ANR	6628571	Condition	( ef -> flags & flags & ZIP_EF_BOTH ) && ef -> id == id	81:5:2572:2620	6628531	0	True				
ANR	6628572	AndExpression	( ef -> flags & flags & ZIP_EF_BOTH ) && ef -> id == id		6628531	0		&&			
ANR	6628573	BitAndExpression	ef -> flags & flags & ZIP_EF_BOTH		6628531	0		&			
ANR	6628574	PtrMemberAccess	ef -> flags		6628531	0					
ANR	6628575	Identifier	ef		6628531	0					
ANR	6628576	Identifier	flags		6628531	1					
ANR	6628577	BitAndExpression	flags & ZIP_EF_BOTH		6628531	1		&			
ANR	6628578	Identifier	flags		6628531	0					
ANR	6628579	Identifier	ZIP_EF_BOTH		6628531	1					
ANR	6628580	EqualityExpression	ef -> id == id		6628531	1		==			
ANR	6628581	PtrMemberAccess	ef -> id		6628531	0					
ANR	6628582	Identifier	ef		6628531	0					
ANR	6628583	Identifier	id		6628531	1					
ANR	6628584	Identifier	id		6628531	1					
ANR	6628585	CompoundStatement		9:56:201:201	6628531	1					
ANR	6628586	IfStatement	if ( id_idx == ZIP_EXTRA_FIELD_ALL || i == id_idx )		6628531	0					
ANR	6628587	Condition	id_idx == ZIP_EXTRA_FIELD_ALL || i == id_idx	82:9:2634:2677	6628531	0	True				
ANR	6628588	OrExpression	id_idx == ZIP_EXTRA_FIELD_ALL || i == id_idx		6628531	0		||			
ANR	6628589	EqualityExpression	id_idx == ZIP_EXTRA_FIELD_ALL		6628531	0		==			
ANR	6628590	Identifier	id_idx		6628531	0					
ANR	6628591	Identifier	ZIP_EXTRA_FIELD_ALL		6628531	1					
ANR	6628592	EqualityExpression	i == id_idx		6628531	1		==			
ANR	6628593	Identifier	i		6628531	0					
ANR	6628594	Identifier	id_idx		6628531	1					
ANR	6628595	CompoundStatement		10:55:258:258	6628531	1					
ANR	6628596	ExpressionStatement	ef -> flags &= ~ ( flags & ZIP_EF_BOTH )	83:2:2684:2719	6628531	0	True				
ANR	6628597	AssignmentExpression	ef -> flags &= ~ ( flags & ZIP_EF_BOTH )		6628531	0		&=			
ANR	6628598	PtrMemberAccess	ef -> flags		6628531	0					
ANR	6628599	Identifier	ef		6628531	0					
ANR	6628600	Identifier	flags		6628531	1					
ANR	6628601	UnaryOperationExpression	~ ( flags & ZIP_EF_BOTH )		6628531	1					
ANR	6628602	UnaryOperator	~		6628531	0					
ANR	6628603	BitAndExpression	flags & ZIP_EF_BOTH		6628531	1		&			
ANR	6628604	Identifier	flags		6628531	0					
ANR	6628605	Identifier	ZIP_EF_BOTH		6628531	1					
ANR	6628606	IfStatement	if ( ( ef -> flags & ZIP_EF_BOTH ) == 0 )		6628531	1					
ANR	6628607	Condition	( ef -> flags & ZIP_EF_BOTH ) == 0	84:6:2727:2756	6628531	0	True				
ANR	6628608	EqualityExpression	( ef -> flags & ZIP_EF_BOTH ) == 0		6628531	0		==			
ANR	6628609	BitAndExpression	ef -> flags & ZIP_EF_BOTH		6628531	0		&			
ANR	6628610	PtrMemberAccess	ef -> flags		6628531	0					
ANR	6628611	Identifier	ef		6628531	0					
ANR	6628612	Identifier	flags		6628531	1					
ANR	6628613	Identifier	ZIP_EF_BOTH		6628531	1					
ANR	6628614	PrimaryExpression	0		6628531	1					
ANR	6628615	CompoundStatement		12:38:337:337	6628531	1					
ANR	6628616	IfStatement	if ( prev )		6628531	0					
ANR	6628617	Condition	prev	85:10:2771:2774	6628531	0	True				
ANR	6628618	Identifier	prev		6628531	0					
ANR	6628619	ExpressionStatement	prev -> next = ef -> next	86:3:2780:2801	6628531	1	True				
ANR	6628620	AssignmentExpression	prev -> next = ef -> next		6628531	0		=			
ANR	6628621	PtrMemberAccess	prev -> next		6628531	0					
ANR	6628622	Identifier	prev		6628531	0					
ANR	6628623	Identifier	next		6628531	1					
ANR	6628624	PtrMemberAccess	ef -> next		6628531	1					
ANR	6628625	Identifier	ef		6628531	0					
ANR	6628626	Identifier	next		6628531	1					
ANR	6628627	ElseStatement	else		6628531	0					
ANR	6628628	ExpressionStatement	head = ef -> next	88:3:2817:2832	6628531	0	True				
ANR	6628629	AssignmentExpression	head = ef -> next		6628531	0		=			
ANR	6628630	Identifier	head		6628531	0					
ANR	6628631	PtrMemberAccess	ef -> next		6628531	1					
ANR	6628632	Identifier	ef		6628531	0					
ANR	6628633	Identifier	next		6628531	1					
ANR	6628634	ExpressionStatement	ef -> next = NULL	89:6:2840:2855	6628531	1	True				
ANR	6628635	AssignmentExpression	ef -> next = NULL		6628531	0		=			
ANR	6628636	PtrMemberAccess	ef -> next		6628531	0					
ANR	6628637	Identifier	ef		6628531	0					
ANR	6628638	Identifier	next		6628531	1					
ANR	6628639	Identifier	NULL		6628531	1					
ANR	6628640	ExpressionStatement	_zip_ef_free ( ef )	90:6:2863:2879	6628531	2	True				
ANR	6628641	CallExpression	_zip_ef_free ( ef )		6628531	0					
ANR	6628642	Callee	_zip_ef_free		6628531	0					
ANR	6628643	Identifier	_zip_ef_free		6628531	0					
ANR	6628644	ArgumentList	ef		6628531	1					
ANR	6628645	Argument	ef		6628531	0					
ANR	6628646	Identifier	ef		6628531	0					
ANR	6628647	IfStatement	if ( id_idx == ZIP_EXTRA_FIELD_ALL )		6628531	3					
ANR	6628648	Condition	id_idx == ZIP_EXTRA_FIELD_ALL	92:10:2892:2920	6628531	0	True				
ANR	6628649	EqualityExpression	id_idx == ZIP_EXTRA_FIELD_ALL		6628531	0		==			
ANR	6628650	Identifier	id_idx		6628531	0					
ANR	6628651	Identifier	ZIP_EXTRA_FIELD_ALL		6628531	1					
ANR	6628652	ContinueStatement	continue ;	93:3:2926:2934	6628531	1	True				
ANR	6628653	ExpressionStatement	i ++	97:5:2958:2961	6628531	1	True				
ANR	6628654	PostIncDecOperationExpression	i ++		6628531	0					
ANR	6628655	Identifier	i		6628531	0					
ANR	6628656	IncDec	++		6628531	1					
ANR	6628657	IfStatement	if ( i > id_idx )		6628531	2					
ANR	6628658	Condition	i > id_idx	98:9:2972:2981	6628531	0	True				
ANR	6628659	RelationalExpression	i > id_idx		6628531	0		>			
ANR	6628660	Identifier	i		6628531	0					
ANR	6628661	Identifier	id_idx		6628531	1					
ANR	6628662	BreakStatement	break ;	99:2:2986:2991	6628531	1	True				
ANR	6628663	ExpressionStatement	prev = ef	101:1:2997:3006	6628531	1	True				
ANR	6628664	AssignmentExpression	prev = ef		6628531	0		=			
ANR	6628665	Identifier	prev		6628531	0					
ANR	6628666	Identifier	ef		6628531	1					
ANR	6628667	ReturnStatement	return head ;	104:4:3019:3030	6628531	6	True				
ANR	6628668	Identifier	head		6628531	0					
ANR	6628669	ReturnType	struct zip_extra_field *		6628531	1					
ANR	6628670	Identifier	_zip_ef_delete_by_id		6628531	2					
ANR	6628671	ParameterList	"struct zip_extra_field * ef , zip_uint16_t id , zip_uint16_t id_idx , zip_flags_t flags"		6628531	3					
ANR	6628672	Parameter	struct zip_extra_field * ef	72:21:2336:2361	6628531	0	True				
ANR	6628673	ParameterType	struct zip_extra_field *		6628531	0					
ANR	6628674	Identifier	ef		6628531	1					
ANR	6628675	Parameter	zip_uint16_t id	72:49:2364:2378	6628531	1	True				
ANR	6628676	ParameterType	zip_uint16_t		6628531	0					
ANR	6628677	Identifier	id		6628531	1					
ANR	6628678	Parameter	zip_uint16_t id_idx	72:66:2381:2399	6628531	2	True				
ANR	6628679	ParameterType	zip_uint16_t		6628531	0					
ANR	6628680	Identifier	id_idx		6628531	1					
ANR	6628681	Parameter	zip_flags_t flags	72:87:2402:2418	6628531	3	True				
ANR	6628682	ParameterType	zip_flags_t		6628531	0					
ANR	6628683	Identifier	flags		6628531	1					
ANR	6628684	CFGEntryNode	ENTRY		6628531		True				
ANR	6628685	CFGExitNode	EXIT		6628531		True				
ANR	6628686	Symbol	prev -> next		6628531						
ANR	6628687	Symbol	ef		6628531						
ANR	6628688	Symbol	id_idx		6628531						
ANR	6628689	Symbol	NULL		6628531						
ANR	6628690	Symbol	* ef		6628531						
ANR	6628691	Symbol	ZIP_EF_BOTH		6628531						
ANR	6628692	Symbol	prev		6628531						
ANR	6628693	Symbol	flags		6628531						
ANR	6628694	Symbol	i		6628531						
ANR	6628695	Symbol	* prev		6628531						
ANR	6628696	Symbol	ZIP_EXTRA_FIELD_ALL		6628531						
ANR	6628697	Symbol	ef -> id		6628531						
ANR	6628698	Symbol	head		6628531						
ANR	6628699	Symbol	ef -> flags		6628531						
ANR	6628700	Symbol	id		6628531						
ANR	6628701	Symbol	ef -> next		6628531						
ANR	6628702	Function	_zip_ef_free	110:0:3039:3200							
ANR	6628703	FunctionDef	_zip_ef_free (struct zip_extra_field * ef)		6628702	0					
ANR	6628704	CompoundStatement		112:0:3085:3200	6628702	0					
ANR	6628705	IdentifierDeclStatement	struct zip_extra_field * ef2 ;	113:4:3091:3118	6628702	0	True				
ANR	6628706	IdentifierDecl	* ef2		6628702	0					
ANR	6628707	IdentifierDeclType	struct zip_extra_field *		6628702	0					
ANR	6628708	Identifier	ef2		6628702	1					
ANR	6628709	WhileStatement	while ( ef )		6628702	1					
ANR	6628710	Condition	ef	115:11:3132:3133	6628702	0	True				
ANR	6628711	Identifier	ef		6628702	0					
ANR	6628712	CompoundStatement		4:15:50:50	6628702	1					
ANR	6628713	ExpressionStatement	ef2 = ef -> next	116:1:3139:3153	6628702	0	True				
ANR	6628714	AssignmentExpression	ef2 = ef -> next		6628702	0		=			
ANR	6628715	Identifier	ef2		6628702	0					
ANR	6628716	PtrMemberAccess	ef -> next		6628702	1					
ANR	6628717	Identifier	ef		6628702	0					
ANR	6628718	Identifier	next		6628702	1					
ANR	6628719	ExpressionStatement	free ( ef -> data )	117:1:3156:3170	6628702	1	True				
ANR	6628720	CallExpression	free ( ef -> data )		6628702	0					
ANR	6628721	Callee	free		6628702	0					
ANR	6628722	Identifier	free		6628702	0					
ANR	6628723	ArgumentList	ef -> data		6628702	1					
ANR	6628724	Argument	ef -> data		6628702	0					
ANR	6628725	PtrMemberAccess	ef -> data		6628702	0					
ANR	6628726	Identifier	ef		6628702	0					
ANR	6628727	Identifier	data		6628702	1					
ANR	6628728	ExpressionStatement	free ( ef )	118:1:3173:3181	6628702	2	True				
ANR	6628729	CallExpression	free ( ef )		6628702	0					
ANR	6628730	Callee	free		6628702	0					
ANR	6628731	Identifier	free		6628702	0					
ANR	6628732	ArgumentList	ef		6628702	1					
ANR	6628733	Argument	ef		6628702	0					
ANR	6628734	Identifier	ef		6628702	0					
ANR	6628735	ExpressionStatement	ef = ef2	119:1:3184:3192	6628702	3	True				
ANR	6628736	AssignmentExpression	ef = ef2		6628702	0		=			
ANR	6628737	Identifier	ef		6628702	0					
ANR	6628738	Identifier	ef2		6628702	1					
ANR	6628739	ReturnType	void		6628702	1					
ANR	6628740	Identifier	_zip_ef_free		6628702	2					
ANR	6628741	ParameterList	struct zip_extra_field * ef		6628702	3					
ANR	6628742	Parameter	struct zip_extra_field * ef	111:13:3057:3082	6628702	0	True				
ANR	6628743	ParameterType	struct zip_extra_field *		6628702	0					
ANR	6628744	Identifier	ef		6628702	1					
ANR	6628745	CFGEntryNode	ENTRY		6628702		True				
ANR	6628746	CFGExitNode	EXIT		6628702		True				
ANR	6628747	Symbol	ef2		6628702						
ANR	6628748	Symbol	ef -> data		6628702						
ANR	6628749	Symbol	ef		6628702						
ANR	6628750	Symbol	* ef		6628702						
ANR	6628751	Symbol	ef -> next		6628702						
ANR	6628752	Function	_zip_ef_get_by_id	125:0:3206:3772							
ANR	6628753	FunctionDef	"_zip_ef_get_by_id (const struct zip_extra_field * ef , zip_uint16_t * lenp , zip_uint16_t id , zip_uint16_t id_idx , zip_flags_t flags , struct zip_error * error)"		6628752	0					
ANR	6628754	CompoundStatement		127:0:3380:3772	6628752	0					
ANR	6628755	Statement	static	128:4:3386:3391	6628752	0	True				
ANR	6628756	IdentifierDeclStatement	const zip_uint8_t empty [ 1 ] = { '\\0' } ;	128:11:3393:3430	6628752	1	True				
ANR	6628757	IdentifierDecl	empty [ 1 ] = { '\\0' }		6628752	0					
ANR	6628758	IdentifierDeclType	const zip_uint8_t [ 1 ]		6628752	0					
ANR	6628759	Identifier	empty		6628752	1					
ANR	6628760	PrimaryExpression	1		6628752	2					
ANR	6628761	AssignmentExpression	empty [ 1 ] = { '\\0' }		6628752	3		=			
ANR	6628762	Identifier	empty		6628752	0					
ANR	6628763	InitializerList	'\\0'		6628752	1					
ANR	6628764	PrimaryExpression	'\\0'		6628752	0					
ANR	6628765	IdentifierDeclStatement	int i ;	130:4:3441:3446	6628752	2	True				
ANR	6628766	IdentifierDecl	i		6628752	0					
ANR	6628767	IdentifierDeclType	int		6628752	0					
ANR	6628768	Identifier	i		6628752	1					
ANR	6628769	ExpressionStatement	i = 0	132:4:3453:3458	6628752	3	True				
ANR	6628770	AssignmentExpression	i = 0		6628752	0		=			
ANR	6628771	Identifier	i		6628752	0					
ANR	6628772	PrimaryExpression	0		6628752	1					
ANR	6628773	ForStatement	for ( ; ef ; ef = ef -> next )		6628752	4					
ANR	6628774	Condition	ef	133:11:3471:3472	6628752	0	True				
ANR	6628775	Identifier	ef		6628752	0					
ANR	6628776	AssignmentExpression	ef = ef -> next	133:15:3475:3485	6628752	1	True	=			
ANR	6628777	Identifier	ef		6628752	0					
ANR	6628778	PtrMemberAccess	ef -> next		6628752	1					
ANR	6628779	Identifier	ef		6628752	0					
ANR	6628780	Identifier	next		6628752	1					
ANR	6628781	CompoundStatement		7:28:107:107	6628752	2					
ANR	6628782	IfStatement	if ( ef -> id == id && ( ef -> flags & flags & ZIP_EF_BOTH ) )		6628752	0					
ANR	6628783	Condition	ef -> id == id && ( ef -> flags & flags & ZIP_EF_BOTH )	134:5:3495:3543	6628752	0	True				
ANR	6628784	AndExpression	ef -> id == id && ( ef -> flags & flags & ZIP_EF_BOTH )		6628752	0		&&			
ANR	6628785	EqualityExpression	ef -> id == id		6628752	0		==			
ANR	6628786	PtrMemberAccess	ef -> id		6628752	0					
ANR	6628787	Identifier	ef		6628752	0					
ANR	6628788	Identifier	id		6628752	1					
ANR	6628789	Identifier	id		6628752	1					
ANR	6628790	BitAndExpression	ef -> flags & flags & ZIP_EF_BOTH		6628752	1		&			
ANR	6628791	PtrMemberAccess	ef -> flags		6628752	0					
ANR	6628792	Identifier	ef		6628752	0					
ANR	6628793	Identifier	flags		6628752	1					
ANR	6628794	BitAndExpression	flags & ZIP_EF_BOTH		6628752	1		&			
ANR	6628795	Identifier	flags		6628752	0					
ANR	6628796	Identifier	ZIP_EF_BOTH		6628752	1					
ANR	6628797	CompoundStatement		8:56:165:165	6628752	1					
ANR	6628798	IfStatement	if ( i < id_idx )		6628752	0					
ANR	6628799	Condition	i < id_idx	135:9:3557:3566	6628752	0	True				
ANR	6628800	RelationalExpression	i < id_idx		6628752	0		<			
ANR	6628801	Identifier	i		6628752	0					
ANR	6628802	Identifier	id_idx		6628752	1					
ANR	6628803	CompoundStatement		9:21:188:188	6628752	1					
ANR	6628804	ExpressionStatement	i ++	136:2:3573:3576	6628752	0	True				
ANR	6628805	PostIncDecOperationExpression	i ++		6628752	0					
ANR	6628806	Identifier	i		6628752	0					
ANR	6628807	IncDec	++		6628752	1					
ANR	6628808	ContinueStatement	continue ;	137:2:3580:3588	6628752	1	True				
ANR	6628809	IfStatement	if ( lenp )		6628752	1					
ANR	6628810	Condition	lenp	140:9:3607:3610	6628752	0	True				
ANR	6628811	Identifier	lenp		6628752	0					
ANR	6628812	ExpressionStatement	* lenp = ef -> size	141:2:3615:3631	6628752	1	True				
ANR	6628813	AssignmentExpression	* lenp = ef -> size		6628752	0		=			
ANR	6628814	UnaryOperationExpression	* lenp		6628752	0					
ANR	6628815	UnaryOperator	*		6628752	0					
ANR	6628816	Identifier	lenp		6628752	1					
ANR	6628817	PtrMemberAccess	ef -> size		6628752	1					
ANR	6628818	Identifier	ef		6628752	0					
ANR	6628819	Identifier	size		6628752	1					
ANR	6628820	IfStatement	if ( ef -> size > 0 )		6628752	2					
ANR	6628821	Condition	ef -> size > 0	142:9:3642:3653	6628752	0	True				
ANR	6628822	RelationalExpression	ef -> size > 0		6628752	0		>			
ANR	6628823	PtrMemberAccess	ef -> size		6628752	0					
ANR	6628824	Identifier	ef		6628752	0					
ANR	6628825	Identifier	size		6628752	1					
ANR	6628826	PrimaryExpression	0		6628752	1					
ANR	6628827	ReturnStatement	return ef -> data ;	143:2:3658:3673	6628752	1	True				
ANR	6628828	PtrMemberAccess	ef -> data		6628752	0					
ANR	6628829	Identifier	ef		6628752	0					
ANR	6628830	Identifier	data		6628752	1					
ANR	6628831	ElseStatement	else		6628752	0					
ANR	6628832	ReturnStatement	return empty ;	145:2:3687:3699	6628752	0	True				
ANR	6628833	Identifier	empty		6628752	0					
ANR	6628834	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_NOENT , 0 )"	149:4:3715:3753	6628752	5	True				
ANR	6628835	CallExpression	"_zip_error_set ( error , ZIP_ER_NOENT , 0 )"		6628752	0					
ANR	6628836	Callee	_zip_error_set		6628752	0					
ANR	6628837	Identifier	_zip_error_set		6628752	0					
ANR	6628838	ArgumentList	error		6628752	1					
ANR	6628839	Argument	error		6628752	0					
ANR	6628840	Identifier	error		6628752	0					
ANR	6628841	Argument	ZIP_ER_NOENT		6628752	1					
ANR	6628842	Identifier	ZIP_ER_NOENT		6628752	0					
ANR	6628843	Argument	0		6628752	2					
ANR	6628844	PrimaryExpression	0		6628752	0					
ANR	6628845	ReturnStatement	return NULL ;	150:4:3759:3770	6628752	6	True				
ANR	6628846	Identifier	NULL		6628752	0					
ANR	6628847	ReturnType	const zip_uint8_t *		6628752	1					
ANR	6628848	Identifier	_zip_ef_get_by_id		6628752	2					
ANR	6628849	ParameterList	"const struct zip_extra_field * ef , zip_uint16_t * lenp , zip_uint16_t id , zip_uint16_t id_idx , zip_flags_t flags , struct zip_error * error"		6628752	3					
ANR	6628850	Parameter	const struct zip_extra_field * ef	126:18:3244:3275	6628752	0	True				
ANR	6628851	ParameterType	const struct zip_extra_field *		6628752	0					
ANR	6628852	Identifier	ef		6628752	1					
ANR	6628853	Parameter	zip_uint16_t * lenp	126:52:3278:3295	6628752	1	True				
ANR	6628854	ParameterType	zip_uint16_t *		6628752	0					
ANR	6628855	Identifier	lenp		6628752	1					
ANR	6628856	Parameter	zip_uint16_t id	126:72:3298:3312	6628752	2	True				
ANR	6628857	ParameterType	zip_uint16_t		6628752	0					
ANR	6628858	Identifier	id		6628752	1					
ANR	6628859	Parameter	zip_uint16_t id_idx	126:89:3315:3333	6628752	3	True				
ANR	6628860	ParameterType	zip_uint16_t		6628752	0					
ANR	6628861	Identifier	id_idx		6628752	1					
ANR	6628862	Parameter	zip_flags_t flags	126:110:3336:3352	6628752	4	True				
ANR	6628863	ParameterType	zip_flags_t		6628752	0					
ANR	6628864	Identifier	flags		6628752	1					
ANR	6628865	Parameter	struct zip_error * error	126:129:3355:3377	6628752	5	True				
ANR	6628866	ParameterType	struct zip_error *		6628752	0					
ANR	6628867	Identifier	error		6628752	1					
ANR	6628868	CFGEntryNode	ENTRY		6628752		True				
ANR	6628869	CFGExitNode	EXIT		6628752		True				
ANR	6628870	Symbol	ef -> data		6628752						
ANR	6628871	Symbol	ef		6628752						
ANR	6628872	Symbol	id_idx		6628752						
ANR	6628873	Symbol	NULL		6628752						
ANR	6628874	Symbol	* ef		6628752						
ANR	6628875	Symbol	ZIP_EF_BOTH		6628752						
ANR	6628876	Symbol	flags		6628752						
ANR	6628877	Symbol	lenp		6628752						
ANR	6628878	Symbol	i		6628752						
ANR	6628879	Symbol	error		6628752						
ANR	6628880	Symbol	empty		6628752						
ANR	6628881	Symbol	ef -> id		6628752						
ANR	6628882	Symbol	ef -> size		6628752						
ANR	6628883	Symbol	* lenp		6628752						
ANR	6628884	Symbol	ZIP_ER_NOENT		6628752						
ANR	6628885	Symbol	ef -> flags		6628752						
ANR	6628886	Symbol	id		6628752						
ANR	6628887	Symbol	ef -> next		6628752						
ANR	6628888	Function	_zip_ef_merge	155:0:3778:4465							
ANR	6628889	FunctionDef	"_zip_ef_merge (struct zip_extra_field * to , struct zip_extra_field * from)"		6628888	0					
ANR	6628890	CompoundStatement		157:0:3875:4465	6628888	0					
ANR	6628891	IdentifierDeclStatement	"struct zip_extra_field * ef2 , * tt , * tail ;"	158:4:3881:3920	6628888	0	True				
ANR	6628892	IdentifierDecl	* ef2		6628888	0					
ANR	6628893	IdentifierDeclType	struct zip_extra_field *		6628888	0					
ANR	6628894	Identifier	ef2		6628888	1					
ANR	6628895	IdentifierDecl	* tt		6628888	1					
ANR	6628896	IdentifierDeclType	struct zip_extra_field *		6628888	0					
ANR	6628897	Identifier	tt		6628888	1					
ANR	6628898	IdentifierDecl	* tail		6628888	2					
ANR	6628899	IdentifierDeclType	struct zip_extra_field *		6628888	0					
ANR	6628900	Identifier	tail		6628888	1					
ANR	6628901	IdentifierDeclStatement	int duplicate ;	159:4:3926:3939	6628888	1	True				
ANR	6628902	IdentifierDecl	duplicate		6628888	0					
ANR	6628903	IdentifierDeclType	int		6628888	0					
ANR	6628904	Identifier	duplicate		6628888	1					
ANR	6628905	IfStatement	if ( to == NULL )		6628888	2					
ANR	6628906	Condition	to == NULL	161:8:3950:3959	6628888	0	True				
ANR	6628907	EqualityExpression	to == NULL		6628888	0		==			
ANR	6628908	Identifier	to		6628888	0					
ANR	6628909	Identifier	NULL		6628888	1					
ANR	6628910	ReturnStatement	return from ;	162:1:3963:3974	6628888	1	True				
ANR	6628911	Identifier	from		6628888	0					
ANR	6628912	ForStatement	for ( tail = to ; tail -> next ; tail = tail -> next )		6628888	3					
ANR	6628913	ForInit	tail = to ;	164:9:3986:3993	6628888	0	True				
ANR	6628914	AssignmentExpression	tail = to		6628888	0		=			
ANR	6628915	Identifier	tail		6628888	0					
ANR	6628916	Identifier	to		6628888	1					
ANR	6628917	Condition	tail -> next	164:18:3995:4004	6628888	1	True				
ANR	6628918	PtrMemberAccess	tail -> next		6628888	0					
ANR	6628919	Identifier	tail		6628888	0					
ANR	6628920	Identifier	next		6628888	1					
ANR	6628921	AssignmentExpression	tail = tail -> next	164:30:4007:4021	6628888	2	True	=			
ANR	6628922	Identifier	tail		6628888	0					
ANR	6628923	PtrMemberAccess	tail -> next		6628888	1					
ANR	6628924	Identifier	tail		6628888	0					
ANR	6628925	Identifier	next		6628888	1					
ANR	6628926	ExpressionStatement		165:1:4025:4025	6628888	3	True				
ANR	6628927	ForStatement	for ( ; from ; from = ef2 )		6628888	4					
ANR	6628928	Condition	from	167:11:4039:4042	6628888	0	True				
ANR	6628929	Identifier	from		6628888	0					
ANR	6628930	AssignmentExpression	from = ef2	167:17:4045:4052	6628888	1	True	=			
ANR	6628931	Identifier	from		6628888	0					
ANR	6628932	Identifier	ef2		6628888	1					
ANR	6628933	CompoundStatement		11:27:179:179	6628888	2					
ANR	6628934	ExpressionStatement	ef2 = from -> next	168:1:4058:4074	6628888	0	True				
ANR	6628935	AssignmentExpression	ef2 = from -> next		6628888	0		=			
ANR	6628936	Identifier	ef2		6628888	0					
ANR	6628937	PtrMemberAccess	from -> next		6628888	1					
ANR	6628938	Identifier	from		6628888	0					
ANR	6628939	Identifier	next		6628888	1					
ANR	6628940	ExpressionStatement	duplicate = 0	170:1:4078:4091	6628888	1	True				
ANR	6628941	AssignmentExpression	duplicate = 0		6628888	0		=			
ANR	6628942	Identifier	duplicate		6628888	0					
ANR	6628943	PrimaryExpression	0		6628888	1					
ANR	6628944	ForStatement	for ( tt = to ; tt ; tt = tt -> next )		6628888	2					
ANR	6628945	ForInit	tt = to ;	171:6:4099:4104	6628888	0	True				
ANR	6628946	AssignmentExpression	tt = to		6628888	0		=			
ANR	6628947	Identifier	tt		6628888	0					
ANR	6628948	Identifier	to		6628888	1					
ANR	6628949	Condition	tt	171:13:4106:4107	6628888	1	True				
ANR	6628950	Identifier	tt		6628888	0					
ANR	6628951	AssignmentExpression	tt = tt -> next	171:17:4110:4120	6628888	2	True	=			
ANR	6628952	Identifier	tt		6628888	0					
ANR	6628953	PtrMemberAccess	tt -> next		6628888	1					
ANR	6628954	Identifier	tt		6628888	0					
ANR	6628955	Identifier	next		6628888	1					
ANR	6628956	CompoundStatement		15:30:247:247	6628888	3					
ANR	6628957	IfStatement	if ( tt -> id == from -> id && tt -> size == from -> size )		6628888	0					
ANR	6628958	Condition	tt -> id == from -> id && tt -> size == from -> size	172:9:4134:4177	6628888	0	True				
ANR	6628959	AndExpression	tt -> id == from -> id && tt -> size == from -> size		6628888	0		&&			
ANR	6628960	EqualityExpression	tt -> id == from -> id		6628888	0		==			
ANR	6628961	PtrMemberAccess	tt -> id		6628888	0					
ANR	6628962	Identifier	tt		6628888	0					
ANR	6628963	Identifier	id		6628888	1					
ANR	6628964	PtrMemberAccess	from -> id		6628888	1					
ANR	6628965	Identifier	from		6628888	0					
ANR	6628966	Identifier	id		6628888	1					
ANR	6628967	EqualityExpression	tt -> size == from -> size		6628888	1		==			
ANR	6628968	PtrMemberAccess	tt -> size		6628888	0					
ANR	6628969	Identifier	tt		6628888	0					
ANR	6628970	Identifier	size		6628888	1					
ANR	6628971	PtrMemberAccess	from -> size		6628888	1					
ANR	6628972	Identifier	from		6628888	0					
ANR	6628973	Identifier	size		6628888	1					
ANR	6628974	CompoundStatement		16:55:304:304	6628888	1					
ANR	6628975	IfStatement	"if ( tt -> data && from -> data && ! memcmp ( tt -> data , from -> data , tt -> size ) )"		6628888	0					
ANR	6628976	Condition	"tt -> data && from -> data && ! memcmp ( tt -> data , from -> data , tt -> size )"	173:6:4188:4252	6628888	0	True				
ANR	6628977	AndExpression	"tt -> data && from -> data && ! memcmp ( tt -> data , from -> data , tt -> size )"		6628888	0		&&			
ANR	6628978	PtrMemberAccess	tt -> data		6628888	0					
ANR	6628979	Identifier	tt		6628888	0					
ANR	6628980	Identifier	data		6628888	1					
ANR	6628981	AndExpression	"from -> data && ! memcmp ( tt -> data , from -> data , tt -> size )"		6628888	1		&&			
ANR	6628982	PtrMemberAccess	from -> data		6628888	0					
ANR	6628983	Identifier	from		6628888	0					
ANR	6628984	Identifier	data		6628888	1					
ANR	6628985	UnaryOperationExpression	"! memcmp ( tt -> data , from -> data , tt -> size )"		6628888	1					
ANR	6628986	UnaryOperator	!		6628888	0					
ANR	6628987	CallExpression	"memcmp ( tt -> data , from -> data , tt -> size )"		6628888	1					
ANR	6628988	Callee	memcmp		6628888	0					
ANR	6628989	Identifier	memcmp		6628888	0					
ANR	6628990	ArgumentList	tt -> data		6628888	1					
ANR	6628991	Argument	tt -> data		6628888	0					
ANR	6628992	PtrMemberAccess	tt -> data		6628888	0					
ANR	6628993	Identifier	tt		6628888	0					
ANR	6628994	Identifier	data		6628888	1					
ANR	6628995	Argument	from -> data		6628888	1					
ANR	6628996	PtrMemberAccess	from -> data		6628888	0					
ANR	6628997	Identifier	from		6628888	0					
ANR	6628998	Identifier	data		6628888	1					
ANR	6628999	Argument	tt -> size		6628888	2					
ANR	6629000	PtrMemberAccess	tt -> size		6628888	0					
ANR	6629001	Identifier	tt		6628888	0					
ANR	6629002	Identifier	size		6628888	1					
ANR	6629003	CompoundStatement		17:73:379:379	6628888	1					
ANR	6629004	ExpressionStatement	tt -> flags |= ( from -> flags & ZIP_EF_BOTH )	174:3:4260:4300	6628888	0	True				
ANR	6629005	AssignmentExpression	tt -> flags |= ( from -> flags & ZIP_EF_BOTH )		6628888	0		|=			
ANR	6629006	PtrMemberAccess	tt -> flags		6628888	0					
ANR	6629007	Identifier	tt		6628888	0					
ANR	6629008	Identifier	flags		6628888	1					
ANR	6629009	BitAndExpression	from -> flags & ZIP_EF_BOTH		6628888	1		&			
ANR	6629010	PtrMemberAccess	from -> flags		6628888	0					
ANR	6629011	Identifier	from		6628888	0					
ANR	6629012	Identifier	flags		6628888	1					
ANR	6629013	Identifier	ZIP_EF_BOTH		6628888	1					
ANR	6629014	ExpressionStatement	duplicate = 1	175:3:4305:4318	6628888	1	True				
ANR	6629015	AssignmentExpression	duplicate = 1		6628888	0		=			
ANR	6629016	Identifier	duplicate		6628888	0					
ANR	6629017	PrimaryExpression	1		6628888	1					
ANR	6629018	BreakStatement	break ;	176:3:4323:4328	6628888	2	True				
ANR	6629019	ExpressionStatement	from -> next = NULL	181:1:4346:4363	6628888	3	True				
ANR	6629020	AssignmentExpression	from -> next = NULL		6628888	0		=			
ANR	6629021	PtrMemberAccess	from -> next		6628888	0					
ANR	6629022	Identifier	from		6628888	0					
ANR	6629023	Identifier	next		6628888	1					
ANR	6629024	Identifier	NULL		6628888	1					
ANR	6629025	IfStatement	if ( duplicate )		6628888	4					
ANR	6629026	Condition	duplicate	182:5:4370:4378	6628888	0	True				
ANR	6629027	Identifier	duplicate		6628888	0					
ANR	6629028	ExpressionStatement	_zip_ef_free ( from )	183:5:4386:4404	6628888	1	True				
ANR	6629029	CallExpression	_zip_ef_free ( from )		6628888	0					
ANR	6629030	Callee	_zip_ef_free		6628888	0					
ANR	6629031	Identifier	_zip_ef_free		6628888	0					
ANR	6629032	ArgumentList	from		6628888	1					
ANR	6629033	Argument	from		6628888	0					
ANR	6629034	Identifier	from		6628888	0					
ANR	6629035	ElseStatement	else		6628888	0					
ANR	6629036	ExpressionStatement	tail = tail -> next = from	185:5:4417:4441	6628888	0	True				
ANR	6629037	AssignmentExpression	tail = tail -> next = from		6628888	0		=			
ANR	6629038	Identifier	tail		6628888	0					
ANR	6629039	AssignmentExpression	tail -> next = from		6628888	1		=			
ANR	6629040	PtrMemberAccess	tail -> next		6628888	0					
ANR	6629041	Identifier	tail		6628888	0					
ANR	6629042	Identifier	next		6628888	1					
ANR	6629043	Identifier	from		6628888	1					
ANR	6629044	ReturnStatement	return to ;	188:4:4454:4463	6628888	5	True				
ANR	6629045	Identifier	to		6628888	0					
ANR	6629046	ReturnType	struct zip_extra_field *		6628888	1					
ANR	6629047	Identifier	_zip_ef_merge		6628888	2					
ANR	6629048	ParameterList	"struct zip_extra_field * to , struct zip_extra_field * from"		6628888	3					
ANR	6629049	Parameter	struct zip_extra_field * to	156:14:3817:3842	6628888	0	True				
ANR	6629050	ParameterType	struct zip_extra_field *		6628888	0					
ANR	6629051	Identifier	to		6628888	1					
ANR	6629052	Parameter	struct zip_extra_field * from	156:42:3845:3872	6628888	1	True				
ANR	6629053	ParameterType	struct zip_extra_field *		6628888	0					
ANR	6629054	Identifier	from		6628888	1					
ANR	6629055	CFGEntryNode	ENTRY		6628888		True				
ANR	6629056	CFGExitNode	EXIT		6628888		True				
ANR	6629057	Symbol	tt		6628888						
ANR	6629058	Symbol	tt -> flags		6628888						
ANR	6629059	Symbol	from -> flags		6628888						
ANR	6629060	Symbol	* tail		6628888						
ANR	6629061	Symbol	NULL		6628888						
ANR	6629062	Symbol	from -> size		6628888						
ANR	6629063	Symbol	ZIP_EF_BOTH		6628888						
ANR	6629064	Symbol	* tt		6628888						
ANR	6629065	Symbol	tail		6628888						
ANR	6629066	Symbol	tt -> id		6628888						
ANR	6629067	Symbol	tt -> next		6628888						
ANR	6629068	Symbol	duplicate		6628888						
ANR	6629069	Symbol	from -> id		6628888						
ANR	6629070	Symbol	ef2		6628888						
ANR	6629071	Symbol	memcmp		6628888						
ANR	6629072	Symbol	from -> data		6628888						
ANR	6629073	Symbol	tail -> next		6628888						
ANR	6629074	Symbol	from -> next		6628888						
ANR	6629075	Symbol	from		6628888						
ANR	6629076	Symbol	to		6628888						
ANR	6629077	Symbol	tt -> size		6628888						
ANR	6629078	Symbol	tt -> data		6628888						
ANR	6629079	Symbol	* from		6628888						
ANR	6629080	Function	_zip_ef_new	193:0:4471:4980							
ANR	6629081	FunctionDef	"_zip_ef_new (zip_uint16_t id , zip_uint16_t size , const zip_uint8_t * data , zip_flags_t flags)"		6629080	0					
ANR	6629082	CompoundStatement		195:0:4588:4980	6629080	0					
ANR	6629083	IdentifierDeclStatement	struct zip_extra_field * ef ;	196:4:4594:4620	6629080	0	True				
ANR	6629084	IdentifierDecl	* ef		6629080	0					
ANR	6629085	IdentifierDeclType	struct zip_extra_field *		6629080	0					
ANR	6629086	Identifier	ef		6629080	1					
ANR	6629087	IfStatement	if ( ( ef = ( struct zip_extra_field * ) malloc ( sizeof ( * ef ) ) ) == NULL )		6629080	1					
ANR	6629088	Condition	( ef = ( struct zip_extra_field * ) malloc ( sizeof ( * ef ) ) ) == NULL	198:8:4631:4688	6629080	0	True				
ANR	6629089	EqualityExpression	( ef = ( struct zip_extra_field * ) malloc ( sizeof ( * ef ) ) ) == NULL		6629080	0		==			
ANR	6629090	AssignmentExpression	ef = ( struct zip_extra_field * ) malloc ( sizeof ( * ef ) )		6629080	0		=			
ANR	6629091	Identifier	ef		6629080	0					
ANR	6629092	CastExpression	( struct zip_extra_field * ) malloc ( sizeof ( * ef ) )		6629080	1					
ANR	6629093	CastTarget	struct zip_extra_field *		6629080	0					
ANR	6629094	CallExpression	malloc ( sizeof ( * ef ) )		6629080	1					
ANR	6629095	Callee	malloc		6629080	0					
ANR	6629096	Identifier	malloc		6629080	0					
ANR	6629097	ArgumentList	sizeof ( * ef )		6629080	1					
ANR	6629098	Argument	sizeof ( * ef )		6629080	0					
ANR	6629099	SizeofExpression	sizeof ( * ef )		6629080	0					
ANR	6629100	Sizeof	sizeof		6629080	0					
ANR	6629101	UnaryOperationExpression	* ef		6629080	1					
ANR	6629102	UnaryOperator	*		6629080	0					
ANR	6629103	Identifier	ef		6629080	1					
ANR	6629104	Identifier	NULL		6629080	1					
ANR	6629105	ReturnStatement	return NULL ;	199:1:4692:4703	6629080	1	True				
ANR	6629106	Identifier	NULL		6629080	0					
ANR	6629107	ExpressionStatement	ef -> next = NULL	201:4:4710:4725	6629080	2	True				
ANR	6629108	AssignmentExpression	ef -> next = NULL		6629080	0		=			
ANR	6629109	PtrMemberAccess	ef -> next		6629080	0					
ANR	6629110	Identifier	ef		6629080	0					
ANR	6629111	Identifier	next		6629080	1					
ANR	6629112	Identifier	NULL		6629080	1					
ANR	6629113	ExpressionStatement	ef -> flags = flags	202:4:4731:4748	6629080	3	True				
ANR	6629114	AssignmentExpression	ef -> flags = flags		6629080	0		=			
ANR	6629115	PtrMemberAccess	ef -> flags		6629080	0					
ANR	6629116	Identifier	ef		6629080	0					
ANR	6629117	Identifier	flags		6629080	1					
ANR	6629118	Identifier	flags		6629080	1					
ANR	6629119	ExpressionStatement	ef -> data = NULL	203:1:4751:4766	6629080	4	True				
ANR	6629120	AssignmentExpression	ef -> data = NULL		6629080	0		=			
ANR	6629121	PtrMemberAccess	ef -> data		6629080	0					
ANR	6629122	Identifier	ef		6629080	0					
ANR	6629123	Identifier	data		6629080	1					
ANR	6629124	Identifier	NULL		6629080	1					
ANR	6629125	ExpressionStatement	ef -> id = id	204:4:4772:4783	6629080	5	True				
ANR	6629126	AssignmentExpression	ef -> id = id		6629080	0		=			
ANR	6629127	PtrMemberAccess	ef -> id		6629080	0					
ANR	6629128	Identifier	ef		6629080	0					
ANR	6629129	Identifier	id		6629080	1					
ANR	6629130	Identifier	id		6629080	1					
ANR	6629131	ExpressionStatement	ef -> size = size	205:4:4789:4804	6629080	6	True				
ANR	6629132	AssignmentExpression	ef -> size = size		6629080	0		=			
ANR	6629133	PtrMemberAccess	ef -> size		6629080	0					
ANR	6629134	Identifier	ef		6629080	0					
ANR	6629135	Identifier	size		6629080	1					
ANR	6629136	Identifier	size		6629080	1					
ANR	6629137	IfStatement	if ( size > 0 )		6629080	7					
ANR	6629138	Condition	size > 0	206:8:4814:4821	6629080	0	True				
ANR	6629139	RelationalExpression	size > 0		6629080	0		>			
ANR	6629140	Identifier	size		6629080	0					
ANR	6629141	PrimaryExpression	0		6629080	1					
ANR	6629142	CompoundStatement		13:1:238:268	6629080	1					
ANR	6629143	IdentifierDeclStatement	zip_uint8_t * p = malloc ( size ) ;	207:1:4827:4857	6629080	0	True				
ANR	6629144	IdentifierDecl	* p = malloc ( size )		6629080	0					
ANR	6629145	IdentifierDeclType	zip_uint8_t *		6629080	0					
ANR	6629146	Identifier	p		6629080	1					
ANR	6629147	AssignmentExpression	* p = malloc ( size )		6629080	2		=			
ANR	6629148	Identifier	p		6629080	0					
ANR	6629149	CallExpression	malloc ( size )		6629080	1					
ANR	6629150	Callee	malloc		6629080	0					
ANR	6629151	Identifier	malloc		6629080	0					
ANR	6629152	ArgumentList	size		6629080	1					
ANR	6629153	Argument	size		6629080	0					
ANR	6629154	Identifier	size		6629080	0					
ANR	6629155	IfStatement	if ( p )		6629080	1					
ANR	6629156	Condition	p	208:5:4864:4864	6629080	0	True				
ANR	6629157	Identifier	p		6629080	0					
ANR	6629158	CompoundStatement		14:8:278:278	6629080	1					
ANR	6629159	ExpressionStatement	ef -> data = p	209:2:4871:4883	6629080	0	True				
ANR	6629160	AssignmentExpression	ef -> data = p		6629080	0		=			
ANR	6629161	PtrMemberAccess	ef -> data		6629080	0					
ANR	6629162	Identifier	ef		6629080	0					
ANR	6629163	Identifier	data		6629080	1					
ANR	6629164	Identifier	p		6629080	1					
ANR	6629165	ExpressionStatement	"memcpy ( p , data , size )"	210:2:4888:4910	6629080	1	True				
ANR	6629166	CallExpression	"memcpy ( p , data , size )"		6629080	0					
ANR	6629167	Callee	memcpy		6629080	0					
ANR	6629168	Identifier	memcpy		6629080	0					
ANR	6629169	ArgumentList	p		6629080	1					
ANR	6629170	Argument	p		6629080	0					
ANR	6629171	Identifier	p		6629080	0					
ANR	6629172	Argument	data		6629080	1					
ANR	6629173	Identifier	data		6629080	0					
ANR	6629174	Argument	size		6629080	2					
ANR	6629175	Identifier	size		6629080	0					
ANR	6629176	ElseStatement	else		6629080	0					
ANR	6629177	CompoundStatement		17:8:331:331	6629080	0					
ANR	6629178	ExpressionStatement	free ( ef )	212:5:4927:4935	6629080	0	True				
ANR	6629179	CallExpression	free ( ef )		6629080	0					
ANR	6629180	Callee	free		6629080	0					
ANR	6629181	Identifier	free		6629080	0					
ANR	6629182	ArgumentList	ef		6629080	1					
ANR	6629183	Argument	ef		6629080	0					
ANR	6629184	Identifier	ef		6629080	0					
ANR	6629185	ReturnStatement	return NULL ;	213:5:4942:4953	6629080	1	True				
ANR	6629186	Identifier	NULL		6629080	0					
ANR	6629187	ReturnStatement	return ef ;	217:4:4969:4978	6629080	8	True				
ANR	6629188	Identifier	ef		6629080	0					
ANR	6629189	ReturnType	struct zip_extra_field *		6629080	1					
ANR	6629190	Identifier	_zip_ef_new		6629080	2					
ANR	6629191	ParameterList	"zip_uint16_t id , zip_uint16_t size , const zip_uint8_t * data , zip_flags_t flags"		6629080	3					
ANR	6629192	Parameter	zip_uint16_t id	194:12:4508:4522	6629080	0	True				
ANR	6629193	ParameterType	zip_uint16_t		6629080	0					
ANR	6629194	Identifier	id		6629080	1					
ANR	6629195	Parameter	zip_uint16_t size	194:29:4525:4541	6629080	1	True				
ANR	6629196	ParameterType	zip_uint16_t		6629080	0					
ANR	6629197	Identifier	size		6629080	1					
ANR	6629198	Parameter	const zip_uint8_t * data	194:48:4544:4566	6629080	2	True				
ANR	6629199	ParameterType	const zip_uint8_t *		6629080	0					
ANR	6629200	Identifier	data		6629080	1					
ANR	6629201	Parameter	zip_flags_t flags	194:73:4569:4585	6629080	3	True				
ANR	6629202	ParameterType	zip_flags_t		6629080	0					
ANR	6629203	Identifier	flags		6629080	1					
ANR	6629204	CFGEntryNode	ENTRY		6629080		True				
ANR	6629205	CFGExitNode	EXIT		6629080		True				
ANR	6629206	Symbol	ef -> data		6629080						
ANR	6629207	Symbol	ef		6629080						
ANR	6629208	Symbol	malloc		6629080						
ANR	6629209	Symbol	NULL		6629080						
ANR	6629210	Symbol	data		6629080						
ANR	6629211	Symbol	* ef		6629080						
ANR	6629212	Symbol	flags		6629080						
ANR	6629213	Symbol	ef -> id		6629080						
ANR	6629214	Symbol	ef -> size		6629080						
ANR	6629215	Symbol	p		6629080						
ANR	6629216	Symbol	size		6629080						
ANR	6629217	Symbol	ef -> flags		6629080						
ANR	6629218	Symbol	id		6629080						
ANR	6629219	Symbol	ef -> next		6629080						
ANR	6629220	Function	_zip_ef_parse	222:0:4986:5830							
ANR	6629221	FunctionDef	"_zip_ef_parse (const zip_uint8_t * data , zip_uint16_t len , zip_flags_t flags , struct zip_error * error)"		6629220	0					
ANR	6629222	CompoundStatement		224:0:5112:5830	6629220	0					
ANR	6629223	IdentifierDeclStatement	"struct zip_extra_field * ef , * ef2 , * ef_head ;"	225:4:5118:5160	6629220	0	True				
ANR	6629224	IdentifierDecl	* ef		6629220	0					
ANR	6629225	IdentifierDeclType	struct zip_extra_field *		6629220	0					
ANR	6629226	Identifier	ef		6629220	1					
ANR	6629227	IdentifierDecl	* ef2		6629220	1					
ANR	6629228	IdentifierDeclType	struct zip_extra_field *		6629220	0					
ANR	6629229	Identifier	ef2		6629220	1					
ANR	6629230	IdentifierDecl	* ef_head		6629220	2					
ANR	6629231	IdentifierDeclType	struct zip_extra_field *		6629220	0					
ANR	6629232	Identifier	ef_head		6629220	1					
ANR	6629233	IdentifierDeclStatement	const zip_uint8_t * p ;	226:4:5166:5186	6629220	1	True				
ANR	6629234	IdentifierDecl	* p		6629220	0					
ANR	6629235	IdentifierDeclType	const zip_uint8_t *		6629220	0					
ANR	6629236	Identifier	p		6629220	1					
ANR	6629237	IdentifierDeclStatement	"zip_uint16_t fid , flen ;"	227:4:5192:5214	6629220	2	True				
ANR	6629238	IdentifierDecl	fid		6629220	0					
ANR	6629239	IdentifierDeclType	zip_uint16_t		6629220	0					
ANR	6629240	Identifier	fid		6629220	1					
ANR	6629241	IdentifierDecl	flen		6629220	1					
ANR	6629242	IdentifierDeclType	zip_uint16_t		6629220	0					
ANR	6629243	Identifier	flen		6629220	1					
ANR	6629244	ExpressionStatement	ef_head = NULL	229:4:5221:5235	6629220	3	True				
ANR	6629245	AssignmentExpression	ef_head = NULL		6629220	0		=			
ANR	6629246	Identifier	ef_head		6629220	0					
ANR	6629247	Identifier	NULL		6629220	1					
ANR	6629248	ForStatement	for ( p = data ; p < data + len ; p += flen )		6629220	4					
ANR	6629249	ForInit	p = data ;	230:9:5246:5252	6629220	0	True				
ANR	6629250	AssignmentExpression	p = data		6629220	0		=			
ANR	6629251	Identifier	p		6629220	0					
ANR	6629252	Identifier	data		6629220	1					
ANR	6629253	Condition	p < data + len	230:17:5254:5263	6629220	1	True				
ANR	6629254	RelationalExpression	p < data + len		6629220	0		<			
ANR	6629255	Identifier	p		6629220	0					
ANR	6629256	AdditiveExpression	data + len		6629220	1		+			
ANR	6629257	Identifier	data		6629220	0					
ANR	6629258	Identifier	len		6629220	1					
ANR	6629259	AssignmentExpression	p += flen	230:29:5266:5272	6629220	2	True	+=			
ANR	6629260	Identifier	p		6629220	0					
ANR	6629261	Identifier	flen		6629220	1					
ANR	6629262	CompoundStatement		7:38:162:162	6629220	3					
ANR	6629263	IfStatement	if ( p + 4 > data + len )		6629220	0					
ANR	6629264	Condition	p + 4 > data + len	231:5:5282:5295	6629220	0	True				
ANR	6629265	RelationalExpression	p + 4 > data + len		6629220	0		>			
ANR	6629266	AdditiveExpression	p + 4		6629220	0		+			
ANR	6629267	Identifier	p		6629220	0					
ANR	6629268	PrimaryExpression	4		6629220	1					
ANR	6629269	AdditiveExpression	data + len		6629220	1		+			
ANR	6629270	Identifier	data		6629220	0					
ANR	6629271	Identifier	len		6629220	1					
ANR	6629272	CompoundStatement		8:21:185:185	6629220	1					
ANR	6629273	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_INCONS , 0 )"	232:5:5305:5344	6629220	0	True				
ANR	6629274	CallExpression	"_zip_error_set ( error , ZIP_ER_INCONS , 0 )"		6629220	0					
ANR	6629275	Callee	_zip_error_set		6629220	0					
ANR	6629276	Identifier	_zip_error_set		6629220	0					
ANR	6629277	ArgumentList	error		6629220	1					
ANR	6629278	Argument	error		6629220	0					
ANR	6629279	Identifier	error		6629220	0					
ANR	6629280	Argument	ZIP_ER_INCONS		6629220	1					
ANR	6629281	Identifier	ZIP_ER_INCONS		6629220	0					
ANR	6629282	Argument	0		6629220	2					
ANR	6629283	PrimaryExpression	0		6629220	0					
ANR	6629284	ExpressionStatement	_zip_ef_free ( ef_head )	233:5:5351:5372	6629220	1	True				
ANR	6629285	CallExpression	_zip_ef_free ( ef_head )		6629220	0					
ANR	6629286	Callee	_zip_ef_free		6629220	0					
ANR	6629287	Identifier	_zip_ef_free		6629220	0					
ANR	6629288	ArgumentList	ef_head		6629220	1					
ANR	6629289	Argument	ef_head		6629220	0					
ANR	6629290	Identifier	ef_head		6629220	0					
ANR	6629291	ReturnStatement	return NULL ;	234:5:5379:5390	6629220	2	True				
ANR	6629292	Identifier	NULL		6629220	0					
ANR	6629293	ExpressionStatement	fid = _zip_read2 ( & p )	237:1:5397:5417	6629220	1	True				
ANR	6629294	AssignmentExpression	fid = _zip_read2 ( & p )		6629220	0		=			
ANR	6629295	Identifier	fid		6629220	0					
ANR	6629296	CallExpression	_zip_read2 ( & p )		6629220	1					
ANR	6629297	Callee	_zip_read2		6629220	0					
ANR	6629298	Identifier	_zip_read2		6629220	0					
ANR	6629299	ArgumentList	& p		6629220	1					
ANR	6629300	Argument	& p		6629220	0					
ANR	6629301	UnaryOperationExpression	& p		6629220	0					
ANR	6629302	UnaryOperator	&		6629220	0					
ANR	6629303	Identifier	p		6629220	1					
ANR	6629304	ExpressionStatement	flen = _zip_read2 ( & p )	238:1:5420:5441	6629220	2	True				
ANR	6629305	AssignmentExpression	flen = _zip_read2 ( & p )		6629220	0		=			
ANR	6629306	Identifier	flen		6629220	0					
ANR	6629307	CallExpression	_zip_read2 ( & p )		6629220	1					
ANR	6629308	Callee	_zip_read2		6629220	0					
ANR	6629309	Identifier	_zip_read2		6629220	0					
ANR	6629310	ArgumentList	& p		6629220	1					
ANR	6629311	Argument	& p		6629220	0					
ANR	6629312	UnaryOperationExpression	& p		6629220	0					
ANR	6629313	UnaryOperator	&		6629220	0					
ANR	6629314	Identifier	p		6629220	1					
ANR	6629315	IfStatement	if ( p + flen > data + len )		6629220	3					
ANR	6629316	Condition	p + flen > data + len	240:5:5449:5465	6629220	0	True				
ANR	6629317	RelationalExpression	p + flen > data + len		6629220	0		>			
ANR	6629318	AdditiveExpression	p + flen		6629220	0		+			
ANR	6629319	Identifier	p		6629220	0					
ANR	6629320	Identifier	flen		6629220	1					
ANR	6629321	AdditiveExpression	data + len		6629220	1		+			
ANR	6629322	Identifier	data		6629220	0					
ANR	6629323	Identifier	len		6629220	1					
ANR	6629324	CompoundStatement		17:24:355:355	6629220	1					
ANR	6629325	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_INCONS , 0 )"	241:5:5475:5514	6629220	0	True				
ANR	6629326	CallExpression	"_zip_error_set ( error , ZIP_ER_INCONS , 0 )"		6629220	0					
ANR	6629327	Callee	_zip_error_set		6629220	0					
ANR	6629328	Identifier	_zip_error_set		6629220	0					
ANR	6629329	ArgumentList	error		6629220	1					
ANR	6629330	Argument	error		6629220	0					
ANR	6629331	Identifier	error		6629220	0					
ANR	6629332	Argument	ZIP_ER_INCONS		6629220	1					
ANR	6629333	Identifier	ZIP_ER_INCONS		6629220	0					
ANR	6629334	Argument	0		6629220	2					
ANR	6629335	PrimaryExpression	0		6629220	0					
ANR	6629336	ExpressionStatement	_zip_ef_free ( ef_head )	242:5:5521:5542	6629220	1	True				
ANR	6629337	CallExpression	_zip_ef_free ( ef_head )		6629220	0					
ANR	6629338	Callee	_zip_ef_free		6629220	0					
ANR	6629339	Identifier	_zip_ef_free		6629220	0					
ANR	6629340	ArgumentList	ef_head		6629220	1					
ANR	6629341	Argument	ef_head		6629220	0					
ANR	6629342	Identifier	ef_head		6629220	0					
ANR	6629343	ReturnStatement	return NULL ;	243:5:5549:5560	6629220	2	True				
ANR	6629344	Identifier	NULL		6629220	0					
ANR	6629345	IfStatement	"if ( ( ef2 = _zip_ef_new ( fid , flen , p , flags ) ) == NULL )"		6629220	4					
ANR	6629346	Condition	"( ef2 = _zip_ef_new ( fid , flen , p , flags ) ) == NULL"	246:5:5571:5616	6629220	0	True				
ANR	6629347	EqualityExpression	"( ef2 = _zip_ef_new ( fid , flen , p , flags ) ) == NULL"		6629220	0		==			
ANR	6629348	AssignmentExpression	"ef2 = _zip_ef_new ( fid , flen , p , flags )"		6629220	0		=			
ANR	6629349	Identifier	ef2		6629220	0					
ANR	6629350	CallExpression	"_zip_ef_new ( fid , flen , p , flags )"		6629220	1					
ANR	6629351	Callee	_zip_ef_new		6629220	0					
ANR	6629352	Identifier	_zip_ef_new		6629220	0					
ANR	6629353	ArgumentList	fid		6629220	1					
ANR	6629354	Argument	fid		6629220	0					
ANR	6629355	Identifier	fid		6629220	0					
ANR	6629356	Argument	flen		6629220	1					
ANR	6629357	Identifier	flen		6629220	0					
ANR	6629358	Argument	p		6629220	2					
ANR	6629359	Identifier	p		6629220	0					
ANR	6629360	Argument	flags		6629220	3					
ANR	6629361	Identifier	flags		6629220	0					
ANR	6629362	Identifier	NULL		6629220	1					
ANR	6629363	CompoundStatement		23:53:506:506	6629220	1					
ANR	6629364	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_MEMORY , 0 )"	247:5:5626:5665	6629220	0	True				
ANR	6629365	CallExpression	"_zip_error_set ( error , ZIP_ER_MEMORY , 0 )"		6629220	0					
ANR	6629366	Callee	_zip_error_set		6629220	0					
ANR	6629367	Identifier	_zip_error_set		6629220	0					
ANR	6629368	ArgumentList	error		6629220	1					
ANR	6629369	Argument	error		6629220	0					
ANR	6629370	Identifier	error		6629220	0					
ANR	6629371	Argument	ZIP_ER_MEMORY		6629220	1					
ANR	6629372	Identifier	ZIP_ER_MEMORY		6629220	0					
ANR	6629373	Argument	0		6629220	2					
ANR	6629374	PrimaryExpression	0		6629220	0					
ANR	6629375	ExpressionStatement	_zip_ef_free ( ef_head )	248:5:5672:5693	6629220	1	True				
ANR	6629376	CallExpression	_zip_ef_free ( ef_head )		6629220	0					
ANR	6629377	Callee	_zip_ef_free		6629220	0					
ANR	6629378	Identifier	_zip_ef_free		6629220	0					
ANR	6629379	ArgumentList	ef_head		6629220	1					
ANR	6629380	Argument	ef_head		6629220	0					
ANR	6629381	Identifier	ef_head		6629220	0					
ANR	6629382	ReturnStatement	return NULL ;	249:5:5700:5711	6629220	2	True				
ANR	6629383	Identifier	NULL		6629220	0					
ANR	6629384	IfStatement	if ( ef_head )		6629220	5					
ANR	6629385	Condition	ef_head	252:5:5722:5728	6629220	0	True				
ANR	6629386	Identifier	ef_head		6629220	0					
ANR	6629387	CompoundStatement		29:14:618:618	6629220	1					
ANR	6629388	ExpressionStatement	ef -> next = ef2	253:5:5738:5752	6629220	0	True				
ANR	6629389	AssignmentExpression	ef -> next = ef2		6629220	0		=			
ANR	6629390	PtrMemberAccess	ef -> next		6629220	0					
ANR	6629391	Identifier	ef		6629220	0					
ANR	6629392	Identifier	next		6629220	1					
ANR	6629393	Identifier	ef2		6629220	1					
ANR	6629394	ExpressionStatement	ef = ef2	254:5:5759:5767	6629220	1	True				
ANR	6629395	AssignmentExpression	ef = ef2		6629220	0		=			
ANR	6629396	Identifier	ef		6629220	0					
ANR	6629397	Identifier	ef2		6629220	1					
ANR	6629398	ElseStatement	else		6629220	0					
ANR	6629399	ExpressionStatement	ef_head = ef = ef2	257:5:5783:5801	6629220	0	True				
ANR	6629400	AssignmentExpression	ef_head = ef = ef2		6629220	0		=			
ANR	6629401	Identifier	ef_head		6629220	0					
ANR	6629402	AssignmentExpression	ef = ef2		6629220	1		=			
ANR	6629403	Identifier	ef		6629220	0					
ANR	6629404	Identifier	ef2		6629220	1					
ANR	6629405	ReturnStatement	return ef_head ;	260:4:5814:5828	6629220	5	True				
ANR	6629406	Identifier	ef_head		6629220	0					
ANR	6629407	ReturnType	struct zip_extra_field *		6629220	1					
ANR	6629408	Identifier	_zip_ef_parse		6629220	2					
ANR	6629409	ParameterList	"const zip_uint8_t * data , zip_uint16_t len , zip_flags_t flags , struct zip_error * error"		6629220	3					
ANR	6629410	Parameter	const zip_uint8_t * data	223:14:5025:5047	6629220	0	True				
ANR	6629411	ParameterType	const zip_uint8_t *		6629220	0					
ANR	6629412	Identifier	data		6629220	1					
ANR	6629413	Parameter	zip_uint16_t len	223:39:5050:5065	6629220	1	True				
ANR	6629414	ParameterType	zip_uint16_t		6629220	0					
ANR	6629415	Identifier	len		6629220	1					
ANR	6629416	Parameter	zip_flags_t flags	223:57:5068:5084	6629220	2	True				
ANR	6629417	ParameterType	zip_flags_t		6629220	0					
ANR	6629418	Identifier	flags		6629220	1					
ANR	6629419	Parameter	struct zip_error * error	223:76:5087:5109	6629220	3	True				
ANR	6629420	ParameterType	struct zip_error *		6629220	0					
ANR	6629421	Identifier	error		6629220	1					
ANR	6629422	CFGEntryNode	ENTRY		6629220		True				
ANR	6629423	CFGExitNode	EXIT		6629220		True				
ANR	6629424	Symbol	fid		6629220						
ANR	6629425	Symbol	flen		6629220						
ANR	6629426	Symbol	ef		6629220						
ANR	6629427	Symbol	NULL		6629220						
ANR	6629428	Symbol	data		6629220						
ANR	6629429	Symbol	* ef		6629220						
ANR	6629430	Symbol	flags		6629220						
ANR	6629431	Symbol	error		6629220						
ANR	6629432	Symbol	ef2		6629220						
ANR	6629433	Symbol	p		6629220						
ANR	6629434	Symbol	ef_head		6629220						
ANR	6629435	Symbol	len		6629220						
ANR	6629436	Symbol	& p		6629220						
ANR	6629437	Symbol	_zip_ef_new		6629220						
ANR	6629438	Symbol	ZIP_ER_INCONS		6629220						
ANR	6629439	Symbol	_zip_read2		6629220						
ANR	6629440	Symbol	ZIP_ER_MEMORY		6629220						
ANR	6629441	Symbol	ef -> next		6629220						
ANR	6629442	Function	_zip_ef_remove_internal	265:0:5836:6444							
ANR	6629443	FunctionDef	_zip_ef_remove_internal (struct zip_extra_field * ef)		6629442	0					
ANR	6629444	CompoundStatement		267:0:5913:6444	6629442	0					
ANR	6629445	IdentifierDeclStatement	struct zip_extra_field * ef_head ;	268:4:5919:5950	6629442	0	True				
ANR	6629446	IdentifierDecl	* ef_head		6629442	0					
ANR	6629447	IdentifierDeclType	struct zip_extra_field *		6629442	0					
ANR	6629448	Identifier	ef_head		6629442	1					
ANR	6629449	IdentifierDeclStatement	"struct zip_extra_field * prev , * next ;"	269:4:5956:5991	6629442	1	True				
ANR	6629450	IdentifierDecl	* prev		6629442	0					
ANR	6629451	IdentifierDeclType	struct zip_extra_field *		6629442	0					
ANR	6629452	Identifier	prev		6629442	1					
ANR	6629453	IdentifierDecl	* next		6629442	1					
ANR	6629454	IdentifierDeclType	struct zip_extra_field *		6629442	0					
ANR	6629455	Identifier	next		6629442	1					
ANR	6629456	ExpressionStatement	ef_head = ef	271:4:6002:6014	6629442	2	True				
ANR	6629457	AssignmentExpression	ef_head = ef		6629442	0		=			
ANR	6629458	Identifier	ef_head		6629442	0					
ANR	6629459	Identifier	ef		6629442	1					
ANR	6629460	ExpressionStatement	prev = NULL	272:4:6020:6031	6629442	3	True				
ANR	6629461	AssignmentExpression	prev = NULL		6629442	0		=			
ANR	6629462	Identifier	prev		6629442	0					
ANR	6629463	Identifier	NULL		6629442	1					
ANR	6629464	WhileStatement	while ( ef )		6629442	4					
ANR	6629465	Condition	ef	274:11:6049:6050	6629442	0	True				
ANR	6629466	Identifier	ef		6629442	0					
ANR	6629467	CompoundStatement		8:15:139:139	6629442	1					
ANR	6629468	IfStatement	if ( ZIP_EF_IS_INTERNAL ( ef -> id ) )		6629442	0					
ANR	6629469	Condition	ZIP_EF_IS_INTERNAL ( ef -> id )	275:12:6067:6092	6629442	0	True				
ANR	6629470	CallExpression	ZIP_EF_IS_INTERNAL ( ef -> id )		6629442	0					
ANR	6629471	Callee	ZIP_EF_IS_INTERNAL		6629442	0					
ANR	6629472	Identifier	ZIP_EF_IS_INTERNAL		6629442	0					
ANR	6629473	ArgumentList	ef -> id		6629442	1					
ANR	6629474	Argument	ef -> id		6629442	0					
ANR	6629475	PtrMemberAccess	ef -> id		6629442	0					
ANR	6629476	Identifier	ef		6629442	0					
ANR	6629477	Identifier	id		6629442	1					
ANR	6629478	CompoundStatement		9:40:181:181	6629442	1					
ANR	6629479	ExpressionStatement	next = ef -> next	276:12:6109:6124	6629442	0	True				
ANR	6629480	AssignmentExpression	next = ef -> next		6629442	0		=			
ANR	6629481	Identifier	next		6629442	0					
ANR	6629482	PtrMemberAccess	ef -> next		6629442	1					
ANR	6629483	Identifier	ef		6629442	0					
ANR	6629484	Identifier	next		6629442	1					
ANR	6629485	IfStatement	if ( ef_head == ef )		6629442	1					
ANR	6629486	Condition	ef_head == ef	277:16:6142:6154	6629442	0	True				
ANR	6629487	EqualityExpression	ef_head == ef		6629442	0		==			
ANR	6629488	Identifier	ef_head		6629442	0					
ANR	6629489	Identifier	ef		6629442	1					
ANR	6629490	ExpressionStatement	ef_head = next	278:16:6173:6187	6629442	1	True				
ANR	6629491	AssignmentExpression	ef_head = next		6629442	0		=			
ANR	6629492	Identifier	ef_head		6629442	0					
ANR	6629493	Identifier	next		6629442	1					
ANR	6629494	ExpressionStatement	ef -> next = NULL	279:12:6201:6216	6629442	2	True				
ANR	6629495	AssignmentExpression	ef -> next = NULL		6629442	0		=			
ANR	6629496	PtrMemberAccess	ef -> next		6629442	0					
ANR	6629497	Identifier	ef		6629442	0					
ANR	6629498	Identifier	next		6629442	1					
ANR	6629499	Identifier	NULL		6629442	1					
ANR	6629500	ExpressionStatement	_zip_ef_free ( ef )	280:12:6230:6246	6629442	3	True				
ANR	6629501	CallExpression	_zip_ef_free ( ef )		6629442	0					
ANR	6629502	Callee	_zip_ef_free		6629442	0					
ANR	6629503	Identifier	_zip_ef_free		6629442	0					
ANR	6629504	ArgumentList	ef		6629442	1					
ANR	6629505	Argument	ef		6629442	0					
ANR	6629506	Identifier	ef		6629442	0					
ANR	6629507	IfStatement	if ( prev )		6629442	4					
ANR	6629508	Condition	prev	281:16:6264:6267	6629442	0	True				
ANR	6629509	Identifier	prev		6629442	0					
ANR	6629510	ExpressionStatement	prev -> next = next	282:16:6286:6303	6629442	1	True				
ANR	6629511	AssignmentExpression	prev -> next = next		6629442	0		=			
ANR	6629512	PtrMemberAccess	prev -> next		6629442	0					
ANR	6629513	Identifier	prev		6629442	0					
ANR	6629514	Identifier	next		6629442	1					
ANR	6629515	Identifier	next		6629442	1					
ANR	6629516	ExpressionStatement	ef = next	283:12:6317:6326	6629442	5	True				
ANR	6629517	AssignmentExpression	ef = next		6629442	0		=			
ANR	6629518	Identifier	ef		6629442	0					
ANR	6629519	Identifier	next		6629442	1					
ANR	6629520	ElseStatement	else		6629442	0					
ANR	6629521	CompoundStatement		19:13:437:437	6629442	0					
ANR	6629522	ExpressionStatement	prev = ef	286:12:6365:6374	6629442	0	True				
ANR	6629523	AssignmentExpression	prev = ef		6629442	0		=			
ANR	6629524	Identifier	prev		6629442	0					
ANR	6629525	Identifier	ef		6629442	1					
ANR	6629526	ExpressionStatement	ef = ef -> next	287:12:6388:6401	6629442	1	True				
ANR	6629527	AssignmentExpression	ef = ef -> next		6629442	0		=			
ANR	6629528	Identifier	ef		6629442	0					
ANR	6629529	PtrMemberAccess	ef -> next		6629442	1					
ANR	6629530	Identifier	ef		6629442	0					
ANR	6629531	Identifier	next		6629442	1					
ANR	6629532	ReturnStatement	return ef_head ;	291:4:6428:6442	6629442	5	True				
ANR	6629533	Identifier	ef_head		6629442	0					
ANR	6629534	ReturnType	struct zip_extra_field *		6629442	1					
ANR	6629535	Identifier	_zip_ef_remove_internal		6629442	2					
ANR	6629536	ParameterList	struct zip_extra_field * ef		6629442	3					
ANR	6629537	Parameter	struct zip_extra_field * ef	266:24:5885:5910	6629442	0	True				
ANR	6629538	ParameterType	struct zip_extra_field *		6629442	0					
ANR	6629539	Identifier	ef		6629442	1					
ANR	6629540	CFGEntryNode	ENTRY		6629442		True				
ANR	6629541	CFGExitNode	EXIT		6629442		True				
ANR	6629542	Symbol	next		6629442						
ANR	6629543	Symbol	prev -> next		6629442						
ANR	6629544	Symbol	ef		6629442						
ANR	6629545	Symbol	ef_head		6629442						
ANR	6629546	Symbol	NULL		6629442						
ANR	6629547	Symbol	* ef		6629442						
ANR	6629548	Symbol	ZIP_EF_IS_INTERNAL		6629442						
ANR	6629549	Symbol	prev		6629442						
ANR	6629550	Symbol	* prev		6629442						
ANR	6629551	Symbol	ef -> next		6629442						
ANR	6629552	Symbol	ef -> id		6629442						
ANR	6629553	Function	_zip_ef_size	295:0:6448:6684							
ANR	6629554	FunctionDef	"_zip_ef_size (const struct zip_extra_field * ef , zip_flags_t flags)"		6629553	0					
ANR	6629555	CompoundStatement		297:0:6527:6684	6629553	0					
ANR	6629556	IdentifierDeclStatement	zip_uint16_t size ;	298:4:6533:6550	6629553	0	True				
ANR	6629557	IdentifierDecl	size		6629553	0					
ANR	6629558	IdentifierDeclType	zip_uint16_t		6629553	0					
ANR	6629559	Identifier	size		6629553	1					
ANR	6629560	ExpressionStatement	size = 0	300:4:6557:6565	6629553	1	True				
ANR	6629561	AssignmentExpression	size = 0		6629553	0		=			
ANR	6629562	Identifier	size		6629553	0					
ANR	6629563	PrimaryExpression	0		6629553	1					
ANR	6629564	ForStatement	for ( ; ef ; ef = ef -> next )		6629553	2					
ANR	6629565	Condition	ef	301:11:6578:6579	6629553	0	True				
ANR	6629566	Identifier	ef		6629553	0					
ANR	6629567	AssignmentExpression	ef = ef -> next	301:15:6582:6592	6629553	1	True	=			
ANR	6629568	Identifier	ef		6629553	0					
ANR	6629569	PtrMemberAccess	ef -> next		6629553	1					
ANR	6629570	Identifier	ef		6629553	0					
ANR	6629571	Identifier	next		6629553	1					
ANR	6629572	CompoundStatement		5:28:67:67	6629553	2					
ANR	6629573	IfStatement	if ( ef -> flags & flags & ZIP_EF_BOTH )		6629553	0					
ANR	6629574	Condition	ef -> flags & flags & ZIP_EF_BOTH	302:5:6602:6632	6629553	0	True				
ANR	6629575	BitAndExpression	ef -> flags & flags & ZIP_EF_BOTH		6629553	0		&			
ANR	6629576	PtrMemberAccess	ef -> flags		6629553	0					
ANR	6629577	Identifier	ef		6629553	0					
ANR	6629578	Identifier	flags		6629553	1					
ANR	6629579	BitAndExpression	flags & ZIP_EF_BOTH		6629553	1		&			
ANR	6629580	Identifier	flags		6629553	0					
ANR	6629581	Identifier	ZIP_EF_BOTH		6629553	1					
ANR	6629582	ExpressionStatement	size += 4 + ef -> size	303:5:6640:6658	6629553	1	True				
ANR	6629583	AssignmentExpression	size += 4 + ef -> size		6629553	0		+=			
ANR	6629584	Identifier	size		6629553	0					
ANR	6629585	AdditiveExpression	4 + ef -> size		6629553	1		+			
ANR	6629586	PrimaryExpression	4		6629553	0					
ANR	6629587	PtrMemberAccess	ef -> size		6629553	1					
ANR	6629588	Identifier	ef		6629553	0					
ANR	6629589	Identifier	size		6629553	1					
ANR	6629590	ReturnStatement	return size ;	306:4:6671:6682	6629553	3	True				
ANR	6629591	Identifier	size		6629553	0					
ANR	6629592	ReturnType	zip_uint16_t		6629553	1					
ANR	6629593	Identifier	_zip_ef_size		6629553	2					
ANR	6629594	ParameterList	"const struct zip_extra_field * ef , zip_flags_t flags"		6629553	3					
ANR	6629595	Parameter	const struct zip_extra_field * ef	296:13:6474:6505	6629553	0	True				
ANR	6629596	ParameterType	const struct zip_extra_field *		6629553	0					
ANR	6629597	Identifier	ef		6629553	1					
ANR	6629598	Parameter	zip_flags_t flags	296:47:6508:6524	6629553	1	True				
ANR	6629599	ParameterType	zip_flags_t		6629553	0					
ANR	6629600	Identifier	flags		6629553	1					
ANR	6629601	CFGEntryNode	ENTRY		6629553		True				
ANR	6629602	CFGExitNode	EXIT		6629553		True				
ANR	6629603	Symbol	ef -> size		6629553						
ANR	6629604	Symbol	ef		6629553						
ANR	6629605	Symbol	size		6629553						
ANR	6629606	Symbol	* ef		6629553						
ANR	6629607	Symbol	ZIP_EF_BOTH		6629553						
ANR	6629608	Symbol	flags		6629553						
ANR	6629609	Symbol	ef -> flags		6629553						
ANR	6629610	Symbol	ef -> next		6629553						
ANR	6629611	Function	_zip_ef_write	311:0:6690:6971							
ANR	6629612	FunctionDef	"_zip_ef_write (const struct zip_extra_field * ef , zip_flags_t flags , FILE * f)"		6629611	0					
ANR	6629613	CompoundStatement		313:0:6771:6971	6629611	0					
ANR	6629614	ForStatement	for ( ; ef ; ef = ef -> next )		6629611	0					
ANR	6629615	Condition	ef	314:11:6784:6785	6629611	0	True				
ANR	6629616	Identifier	ef		6629611	0					
ANR	6629617	AssignmentExpression	ef = ef -> next	314:15:6788:6798	6629611	1	True	=			
ANR	6629618	Identifier	ef		6629611	0					
ANR	6629619	PtrMemberAccess	ef -> next		6629611	1					
ANR	6629620	Identifier	ef		6629611	0					
ANR	6629621	Identifier	next		6629611	1					
ANR	6629622	CompoundStatement		2:28:29:29	6629611	2					
ANR	6629623	IfStatement	if ( ef -> flags & flags & ZIP_EF_BOTH )		6629611	0					
ANR	6629624	Condition	ef -> flags & flags & ZIP_EF_BOTH	315:5:6808:6838	6629611	0	True				
ANR	6629625	BitAndExpression	ef -> flags & flags & ZIP_EF_BOTH		6629611	0		&			
ANR	6629626	PtrMemberAccess	ef -> flags		6629611	0					
ANR	6629627	Identifier	ef		6629611	0					
ANR	6629628	Identifier	flags		6629611	1					
ANR	6629629	BitAndExpression	flags & ZIP_EF_BOTH		6629611	1		&			
ANR	6629630	Identifier	flags		6629611	0					
ANR	6629631	Identifier	ZIP_EF_BOTH		6629611	1					
ANR	6629632	CompoundStatement		3:38:69:69	6629611	1					
ANR	6629633	ExpressionStatement	"_zip_write2 ( ef -> id , f )"	316:5:6848:6870	6629611	0	True				
ANR	6629634	CallExpression	"_zip_write2 ( ef -> id , f )"		6629611	0					
ANR	6629635	Callee	_zip_write2		6629611	0					
ANR	6629636	Identifier	_zip_write2		6629611	0					
ANR	6629637	ArgumentList	ef -> id		6629611	1					
ANR	6629638	Argument	ef -> id		6629611	0					
ANR	6629639	PtrMemberAccess	ef -> id		6629611	0					
ANR	6629640	Identifier	ef		6629611	0					
ANR	6629641	Identifier	id		6629611	1					
ANR	6629642	Argument	f		6629611	1					
ANR	6629643	Identifier	f		6629611	0					
ANR	6629644	ExpressionStatement	"_zip_write2 ( ef -> size , f )"	317:5:6877:6901	6629611	1	True				
ANR	6629645	CallExpression	"_zip_write2 ( ef -> size , f )"		6629611	0					
ANR	6629646	Callee	_zip_write2		6629611	0					
ANR	6629647	Identifier	_zip_write2		6629611	0					
ANR	6629648	ArgumentList	ef -> size		6629611	1					
ANR	6629649	Argument	ef -> size		6629611	0					
ANR	6629650	PtrMemberAccess	ef -> size		6629611	0					
ANR	6629651	Identifier	ef		6629611	0					
ANR	6629652	Identifier	size		6629611	1					
ANR	6629653	Argument	f		6629611	1					
ANR	6629654	Identifier	f		6629611	0					
ANR	6629655	IfStatement	if ( ef -> size > 0 )		6629611	2					
ANR	6629656	Condition	ef -> size > 0	318:9:6912:6923	6629611	0	True				
ANR	6629657	RelationalExpression	ef -> size > 0		6629611	0		>			
ANR	6629658	PtrMemberAccess	ef -> size		6629611	0					
ANR	6629659	Identifier	ef		6629611	0					
ANR	6629660	Identifier	size		6629611	1					
ANR	6629661	PrimaryExpression	0		6629611	1					
ANR	6629662	ExpressionStatement	"fwrite ( ef -> data , ef -> size , 1 , f )"	319:2:6928:6960	6629611	1	True				
ANR	6629663	CallExpression	"fwrite ( ef -> data , ef -> size , 1 , f )"		6629611	0					
ANR	6629664	Callee	fwrite		6629611	0					
ANR	6629665	Identifier	fwrite		6629611	0					
ANR	6629666	ArgumentList	ef -> data		6629611	1					
ANR	6629667	Argument	ef -> data		6629611	0					
ANR	6629668	PtrMemberAccess	ef -> data		6629611	0					
ANR	6629669	Identifier	ef		6629611	0					
ANR	6629670	Identifier	data		6629611	1					
ANR	6629671	Argument	ef -> size		6629611	1					
ANR	6629672	PtrMemberAccess	ef -> size		6629611	0					
ANR	6629673	Identifier	ef		6629611	0					
ANR	6629674	Identifier	size		6629611	1					
ANR	6629675	Argument	1		6629611	2					
ANR	6629676	PrimaryExpression	1		6629611	0					
ANR	6629677	Argument	f		6629611	3					
ANR	6629678	Identifier	f		6629611	0					
ANR	6629679	ReturnType	void		6629611	1					
ANR	6629680	Identifier	_zip_ef_write		6629611	2					
ANR	6629681	ParameterList	"const struct zip_extra_field * ef , zip_flags_t flags , FILE * f"		6629611	3					
ANR	6629682	Parameter	const struct zip_extra_field * ef	312:14:6709:6740	6629611	0	True				
ANR	6629683	ParameterType	const struct zip_extra_field *		6629611	0					
ANR	6629684	Identifier	ef		6629611	1					
ANR	6629685	Parameter	zip_flags_t flags	312:48:6743:6759	6629611	1	True				
ANR	6629686	ParameterType	zip_flags_t		6629611	0					
ANR	6629687	Identifier	flags		6629611	1					
ANR	6629688	Parameter	FILE * f	312:67:6762:6768	6629611	2	True				
ANR	6629689	ParameterType	FILE *		6629611	0					
ANR	6629690	Identifier	f		6629611	1					
ANR	6629691	CFGEntryNode	ENTRY		6629611		True				
ANR	6629692	CFGExitNode	EXIT		6629611		True				
ANR	6629693	Symbol	ef -> size		6629611						
ANR	6629694	Symbol	ef -> data		6629611						
ANR	6629695	Symbol	ef		6629611						
ANR	6629696	Symbol	* ef		6629611						
ANR	6629697	Symbol	ZIP_EF_BOTH		6629611						
ANR	6629698	Symbol	f		6629611						
ANR	6629699	Symbol	flags		6629611						
ANR	6629700	Symbol	ef -> flags		6629611						
ANR	6629701	Symbol	ef -> next		6629611						
ANR	6629702	Symbol	ef -> id		6629611						
ANR	6629703	Function	_zip_read_local_ef	326:0:6977:8440							
ANR	6629704	FunctionDef	"_zip_read_local_ef (struct zip * za , zip_uint64_t idx)"		6629703	0					
ANR	6629705	CompoundStatement		328:0:7034:8440	6629703	0					
ANR	6629706	IdentifierDeclStatement	struct zip_entry * e ;	329:4:7040:7059	6629703	0	True				
ANR	6629707	IdentifierDecl	* e		6629703	0					
ANR	6629708	IdentifierDeclType	struct zip_entry *		6629703	0					
ANR	6629709	Identifier	e		6629703	1					
ANR	6629710	IdentifierDeclStatement	unsigned char b [ 4 ] ;	330:4:7065:7083	6629703	1	True				
ANR	6629711	IdentifierDecl	b [ 4 ]		6629703	0					
ANR	6629712	IdentifierDeclType	unsigned char [ 4 ]		6629703	0					
ANR	6629713	Identifier	b		6629703	1					
ANR	6629714	PrimaryExpression	4		6629703	2					
ANR	6629715	IdentifierDeclStatement	const unsigned char * p ;	331:4:7089:7111	6629703	2	True				
ANR	6629716	IdentifierDecl	* p		6629703	0					
ANR	6629717	IdentifierDeclType	const unsigned char *		6629703	0					
ANR	6629718	Identifier	p		6629703	1					
ANR	6629719	IdentifierDeclStatement	"zip_uint16_t fname_len , ef_len ;"	332:4:7117:7147	6629703	3	True				
ANR	6629720	IdentifierDecl	fname_len		6629703	0					
ANR	6629721	IdentifierDeclType	zip_uint16_t		6629703	0					
ANR	6629722	Identifier	fname_len		6629703	1					
ANR	6629723	IdentifierDecl	ef_len		6629703	1					
ANR	6629724	IdentifierDeclType	zip_uint16_t		6629703	0					
ANR	6629725	Identifier	ef_len		6629703	1					
ANR	6629726	IfStatement	if ( idx >= za -> nentry )		6629703	4					
ANR	6629727	Condition	idx >= za -> nentry	334:8:7158:7174	6629703	0	True				
ANR	6629728	RelationalExpression	idx >= za -> nentry		6629703	0		>=			
ANR	6629729	Identifier	idx		6629703	0					
ANR	6629730	PtrMemberAccess	za -> nentry		6629703	1					
ANR	6629731	Identifier	za		6629703	0					
ANR	6629732	Identifier	nentry		6629703	1					
ANR	6629733	CompoundStatement		7:27:142:142	6629703	1					
ANR	6629734	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_INVAL , 0 )"	335:1:7180:7223	6629703	0	True				
ANR	6629735	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_INVAL , 0 )"		6629703	0					
ANR	6629736	Callee	_zip_error_set		6629703	0					
ANR	6629737	Identifier	_zip_error_set		6629703	0					
ANR	6629738	ArgumentList	& za -> error		6629703	1					
ANR	6629739	Argument	& za -> error		6629703	0					
ANR	6629740	UnaryOperationExpression	& za -> error		6629703	0					
ANR	6629741	UnaryOperator	&		6629703	0					
ANR	6629742	PtrMemberAccess	za -> error		6629703	1					
ANR	6629743	Identifier	za		6629703	0					
ANR	6629744	Identifier	error		6629703	1					
ANR	6629745	Argument	ZIP_ER_INVAL		6629703	1					
ANR	6629746	Identifier	ZIP_ER_INVAL		6629703	0					
ANR	6629747	Argument	0		6629703	2					
ANR	6629748	PrimaryExpression	0		6629703	0					
ANR	6629749	ReturnStatement	return - 1 ;	336:1:7226:7235	6629703	1	True				
ANR	6629750	UnaryOperationExpression	- 1		6629703	0					
ANR	6629751	UnaryOperator	-		6629703	0					
ANR	6629752	PrimaryExpression	1		6629703	1					
ANR	6629753	ExpressionStatement	e = za -> entry + idx	339:4:7248:7265	6629703	5	True				
ANR	6629754	AssignmentExpression	e = za -> entry + idx		6629703	0		=			
ANR	6629755	Identifier	e		6629703	0					
ANR	6629756	AdditiveExpression	za -> entry + idx		6629703	1		+			
ANR	6629757	PtrMemberAccess	za -> entry		6629703	0					
ANR	6629758	Identifier	za		6629703	0					
ANR	6629759	Identifier	entry		6629703	1					
ANR	6629760	Identifier	idx		6629703	1					
ANR	6629761	IfStatement	if ( e -> orig == NULL || e -> orig -> local_extra_fields_read )		6629703	6					
ANR	6629762	Condition	e -> orig == NULL || e -> orig -> local_extra_fields_read	341:8:7276:7326	6629703	0	True				
ANR	6629763	OrExpression	e -> orig == NULL || e -> orig -> local_extra_fields_read		6629703	0		||			
ANR	6629764	EqualityExpression	e -> orig == NULL		6629703	0		==			
ANR	6629765	PtrMemberAccess	e -> orig		6629703	0					
ANR	6629766	Identifier	e		6629703	0					
ANR	6629767	Identifier	orig		6629703	1					
ANR	6629768	Identifier	NULL		6629703	1					
ANR	6629769	PtrMemberAccess	e -> orig -> local_extra_fields_read		6629703	1					
ANR	6629770	PtrMemberAccess	e -> orig		6629703	0					
ANR	6629771	Identifier	e		6629703	0					
ANR	6629772	Identifier	orig		6629703	1					
ANR	6629773	Identifier	local_extra_fields_read		6629703	1					
ANR	6629774	ReturnStatement	return 0 ;	342:1:7330:7338	6629703	1	True				
ANR	6629775	PrimaryExpression	0		6629703	0					
ANR	6629776	IfStatement	"if ( fseeko ( za -> zp , ( off_t ) ( e -> orig -> offset + 26 ) , SEEK_SET ) < 0 )"		6629703	7					
ANR	6629777	Condition	"fseeko ( za -> zp , ( off_t ) ( e -> orig -> offset + 26 ) , SEEK_SET ) < 0"	345:8:7350:7408	6629703	0	True				
ANR	6629778	RelationalExpression	"fseeko ( za -> zp , ( off_t ) ( e -> orig -> offset + 26 ) , SEEK_SET ) < 0"		6629703	0		<			
ANR	6629779	CallExpression	"fseeko ( za -> zp , ( off_t ) ( e -> orig -> offset + 26 ) , SEEK_SET )"		6629703	0					
ANR	6629780	Callee	fseeko		6629703	0					
ANR	6629781	Identifier	fseeko		6629703	0					
ANR	6629782	ArgumentList	za -> zp		6629703	1					
ANR	6629783	Argument	za -> zp		6629703	0					
ANR	6629784	PtrMemberAccess	za -> zp		6629703	0					
ANR	6629785	Identifier	za		6629703	0					
ANR	6629786	Identifier	zp		6629703	1					
ANR	6629787	Argument	( off_t ) ( e -> orig -> offset + 26 )		6629703	1					
ANR	6629788	CastExpression	( off_t ) ( e -> orig -> offset + 26 )		6629703	0					
ANR	6629789	CastTarget	off_t		6629703	0					
ANR	6629790	AdditiveExpression	e -> orig -> offset + 26		6629703	1		+			
ANR	6629791	PtrMemberAccess	e -> orig -> offset		6629703	0					
ANR	6629792	PtrMemberAccess	e -> orig		6629703	0					
ANR	6629793	Identifier	e		6629703	0					
ANR	6629794	Identifier	orig		6629703	1					
ANR	6629795	Identifier	offset		6629703	1					
ANR	6629796	PrimaryExpression	26		6629703	1					
ANR	6629797	Argument	SEEK_SET		6629703	2					
ANR	6629798	Identifier	SEEK_SET		6629703	0					
ANR	6629799	PrimaryExpression	0		6629703	1					
ANR	6629800	CompoundStatement		18:69:376:376	6629703	1					
ANR	6629801	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_SEEK , errno )"	346:1:7414:7460	6629703	0	True				
ANR	6629802	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_SEEK , errno )"		6629703	0					
ANR	6629803	Callee	_zip_error_set		6629703	0					
ANR	6629804	Identifier	_zip_error_set		6629703	0					
ANR	6629805	ArgumentList	& za -> error		6629703	1					
ANR	6629806	Argument	& za -> error		6629703	0					
ANR	6629807	UnaryOperationExpression	& za -> error		6629703	0					
ANR	6629808	UnaryOperator	&		6629703	0					
ANR	6629809	PtrMemberAccess	za -> error		6629703	1					
ANR	6629810	Identifier	za		6629703	0					
ANR	6629811	Identifier	error		6629703	1					
ANR	6629812	Argument	ZIP_ER_SEEK		6629703	1					
ANR	6629813	Identifier	ZIP_ER_SEEK		6629703	0					
ANR	6629814	Argument	errno		6629703	2					
ANR	6629815	Identifier	errno		6629703	0					
ANR	6629816	ReturnStatement	return - 1 ;	347:1:7463:7472	6629703	1	True				
ANR	6629817	UnaryOperationExpression	- 1		6629703	0					
ANR	6629818	UnaryOperator	-		6629703	0					
ANR	6629819	PrimaryExpression	1		6629703	1					
ANR	6629820	IfStatement	"if ( fread ( b , sizeof ( b ) , 1 , za -> zp ) != 1 )"		6629703	8					
ANR	6629821	Condition	"fread ( b , sizeof ( b ) , 1 , za -> zp ) != 1"	350:8:7489:7523	6629703	0	True				
ANR	6629822	EqualityExpression	"fread ( b , sizeof ( b ) , 1 , za -> zp ) != 1"		6629703	0		!=			
ANR	6629823	CallExpression	"fread ( b , sizeof ( b ) , 1 , za -> zp )"		6629703	0					
ANR	6629824	Callee	fread		6629703	0					
ANR	6629825	Identifier	fread		6629703	0					
ANR	6629826	ArgumentList	b		6629703	1					
ANR	6629827	Argument	b		6629703	0					
ANR	6629828	Identifier	b		6629703	0					
ANR	6629829	Argument	sizeof ( b )		6629703	1					
ANR	6629830	SizeofExpression	sizeof ( b )		6629703	0					
ANR	6629831	Sizeof	sizeof		6629703	0					
ANR	6629832	SizeofOperand	b		6629703	1					
ANR	6629833	Argument	1		6629703	2					
ANR	6629834	PrimaryExpression	1		6629703	0					
ANR	6629835	Argument	za -> zp		6629703	3					
ANR	6629836	PtrMemberAccess	za -> zp		6629703	0					
ANR	6629837	Identifier	za		6629703	0					
ANR	6629838	Identifier	zp		6629703	1					
ANR	6629839	PrimaryExpression	1		6629703	1					
ANR	6629840	CompoundStatement		23:45:491:491	6629703	1					
ANR	6629841	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_READ , errno )"	351:1:7529:7575	6629703	0	True				
ANR	6629842	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_READ , errno )"		6629703	0					
ANR	6629843	Callee	_zip_error_set		6629703	0					
ANR	6629844	Identifier	_zip_error_set		6629703	0					
ANR	6629845	ArgumentList	& za -> error		6629703	1					
ANR	6629846	Argument	& za -> error		6629703	0					
ANR	6629847	UnaryOperationExpression	& za -> error		6629703	0					
ANR	6629848	UnaryOperator	&		6629703	0					
ANR	6629849	PtrMemberAccess	za -> error		6629703	1					
ANR	6629850	Identifier	za		6629703	0					
ANR	6629851	Identifier	error		6629703	1					
ANR	6629852	Argument	ZIP_ER_READ		6629703	1					
ANR	6629853	Identifier	ZIP_ER_READ		6629703	0					
ANR	6629854	Argument	errno		6629703	2					
ANR	6629855	Identifier	errno		6629703	0					
ANR	6629856	ReturnStatement	return - 1 ;	352:1:7578:7587	6629703	1	True				
ANR	6629857	UnaryOperationExpression	- 1		6629703	0					
ANR	6629858	UnaryOperator	-		6629703	0					
ANR	6629859	PrimaryExpression	1		6629703	1					
ANR	6629860	ExpressionStatement	p = b	355:4:7600:7605	6629703	9	True				
ANR	6629861	AssignmentExpression	p = b		6629703	0		=			
ANR	6629862	Identifier	p		6629703	0					
ANR	6629863	Identifier	b		6629703	1					
ANR	6629864	ExpressionStatement	fname_len = _zip_read2 ( & p )	356:4:7611:7637	6629703	10	True				
ANR	6629865	AssignmentExpression	fname_len = _zip_read2 ( & p )		6629703	0		=			
ANR	6629866	Identifier	fname_len		6629703	0					
ANR	6629867	CallExpression	_zip_read2 ( & p )		6629703	1					
ANR	6629868	Callee	_zip_read2		6629703	0					
ANR	6629869	Identifier	_zip_read2		6629703	0					
ANR	6629870	ArgumentList	& p		6629703	1					
ANR	6629871	Argument	& p		6629703	0					
ANR	6629872	UnaryOperationExpression	& p		6629703	0					
ANR	6629873	UnaryOperator	&		6629703	0					
ANR	6629874	Identifier	p		6629703	1					
ANR	6629875	ExpressionStatement	ef_len = _zip_read2 ( & p )	357:4:7643:7666	6629703	11	True				
ANR	6629876	AssignmentExpression	ef_len = _zip_read2 ( & p )		6629703	0		=			
ANR	6629877	Identifier	ef_len		6629703	0					
ANR	6629878	CallExpression	_zip_read2 ( & p )		6629703	1					
ANR	6629879	Callee	_zip_read2		6629703	0					
ANR	6629880	Identifier	_zip_read2		6629703	0					
ANR	6629881	ArgumentList	& p		6629703	1					
ANR	6629882	Argument	& p		6629703	0					
ANR	6629883	UnaryOperationExpression	& p		6629703	0					
ANR	6629884	UnaryOperator	&		6629703	0					
ANR	6629885	Identifier	p		6629703	1					
ANR	6629886	IfStatement	if ( ef_len > 0 )		6629703	12					
ANR	6629887	Condition	ef_len > 0	359:8:7677:7686	6629703	0	True				
ANR	6629888	RelationalExpression	ef_len > 0		6629703	0		>			
ANR	6629889	Identifier	ef_len		6629703	0					
ANR	6629890	PrimaryExpression	0		6629703	1					
ANR	6629891	CompoundStatement		34:1:686:705	6629703	1					
ANR	6629892	IdentifierDeclStatement	struct zip_extra_field * ef ;	360:1:7692:7718	6629703	0	True				
ANR	6629893	IdentifierDecl	* ef		6629703	0					
ANR	6629894	IdentifierDeclType	struct zip_extra_field *		6629703	0					
ANR	6629895	Identifier	ef		6629703	1					
ANR	6629896	IdentifierDeclStatement	zip_uint8_t * ef_raw ;	361:1:7721:7740	6629703	1	True				
ANR	6629897	IdentifierDecl	* ef_raw		6629703	0					
ANR	6629898	IdentifierDeclType	zip_uint8_t *		6629703	0					
ANR	6629899	Identifier	ef_raw		6629703	1					
ANR	6629900	IfStatement	"if ( fseek ( za -> zp , fname_len , SEEK_CUR ) < 0 )"		6629703	2					
ANR	6629901	Condition	"fseek ( za -> zp , fname_len , SEEK_CUR ) < 0"	363:5:7748:7785	6629703	0	True				
ANR	6629902	RelationalExpression	"fseek ( za -> zp , fname_len , SEEK_CUR ) < 0"		6629703	0		<			
ANR	6629903	CallExpression	"fseek ( za -> zp , fname_len , SEEK_CUR )"		6629703	0					
ANR	6629904	Callee	fseek		6629703	0					
ANR	6629905	Identifier	fseek		6629703	0					
ANR	6629906	ArgumentList	za -> zp		6629703	1					
ANR	6629907	Argument	za -> zp		6629703	0					
ANR	6629908	PtrMemberAccess	za -> zp		6629703	0					
ANR	6629909	Identifier	za		6629703	0					
ANR	6629910	Identifier	zp		6629703	1					
ANR	6629911	Argument	fname_len		6629703	1					
ANR	6629912	Identifier	fname_len		6629703	0					
ANR	6629913	Argument	SEEK_CUR		6629703	2					
ANR	6629914	Identifier	SEEK_CUR		6629703	0					
ANR	6629915	PrimaryExpression	0		6629703	1					
ANR	6629916	CompoundStatement		36:45:753:753	6629703	1					
ANR	6629917	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_SEEK , errno )"	364:5:7795:7841	6629703	0	True				
ANR	6629918	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_SEEK , errno )"		6629703	0					
ANR	6629919	Callee	_zip_error_set		6629703	0					
ANR	6629920	Identifier	_zip_error_set		6629703	0					
ANR	6629921	ArgumentList	& za -> error		6629703	1					
ANR	6629922	Argument	& za -> error		6629703	0					
ANR	6629923	UnaryOperationExpression	& za -> error		6629703	0					
ANR	6629924	UnaryOperator	&		6629703	0					
ANR	6629925	PtrMemberAccess	za -> error		6629703	1					
ANR	6629926	Identifier	za		6629703	0					
ANR	6629927	Identifier	error		6629703	1					
ANR	6629928	Argument	ZIP_ER_SEEK		6629703	1					
ANR	6629929	Identifier	ZIP_ER_SEEK		6629703	0					
ANR	6629930	Argument	errno		6629703	2					
ANR	6629931	Identifier	errno		6629703	0					
ANR	6629932	ReturnStatement	return - 1 ;	365:5:7848:7857	6629703	1	True				
ANR	6629933	UnaryOperationExpression	- 1		6629703	0					
ANR	6629934	UnaryOperator	-		6629703	0					
ANR	6629935	PrimaryExpression	1		6629703	1					
ANR	6629936	ExpressionStatement	"ef_raw = _zip_read_data ( NULL , za -> zp , ef_len , 0 , & za -> error )"	368:1:7864:7924	6629703	3	True				
ANR	6629937	AssignmentExpression	"ef_raw = _zip_read_data ( NULL , za -> zp , ef_len , 0 , & za -> error )"		6629703	0		=			
ANR	6629938	Identifier	ef_raw		6629703	0					
ANR	6629939	CallExpression	"_zip_read_data ( NULL , za -> zp , ef_len , 0 , & za -> error )"		6629703	1					
ANR	6629940	Callee	_zip_read_data		6629703	0					
ANR	6629941	Identifier	_zip_read_data		6629703	0					
ANR	6629942	ArgumentList	NULL		6629703	1					
ANR	6629943	Argument	NULL		6629703	0					
ANR	6629944	Identifier	NULL		6629703	0					
ANR	6629945	Argument	za -> zp		6629703	1					
ANR	6629946	PtrMemberAccess	za -> zp		6629703	0					
ANR	6629947	Identifier	za		6629703	0					
ANR	6629948	Identifier	zp		6629703	1					
ANR	6629949	Argument	ef_len		6629703	2					
ANR	6629950	Identifier	ef_len		6629703	0					
ANR	6629951	Argument	0		6629703	3					
ANR	6629952	PrimaryExpression	0		6629703	0					
ANR	6629953	Argument	& za -> error		6629703	4					
ANR	6629954	UnaryOperationExpression	& za -> error		6629703	0					
ANR	6629955	UnaryOperator	&		6629703	0					
ANR	6629956	PtrMemberAccess	za -> error		6629703	1					
ANR	6629957	Identifier	za		6629703	0					
ANR	6629958	Identifier	error		6629703	1					
ANR	6629959	IfStatement	if ( ef_raw == NULL )		6629703	4					
ANR	6629960	Condition	ef_raw == NULL	370:5:7932:7945	6629703	0	True				
ANR	6629961	EqualityExpression	ef_raw == NULL		6629703	0		==			
ANR	6629962	Identifier	ef_raw		6629703	0					
ANR	6629963	Identifier	NULL		6629703	1					
ANR	6629964	ReturnStatement	return - 1 ;	371:5:7953:7962	6629703	1	True				
ANR	6629965	UnaryOperationExpression	- 1		6629703	0					
ANR	6629966	UnaryOperator	-		6629703	0					
ANR	6629967	PrimaryExpression	1		6629703	1					
ANR	6629968	IfStatement	"if ( ( ef = _zip_ef_parse ( ef_raw , ef_len , ZIP_EF_LOCAL , & za -> error ) ) == NULL )"		6629703	5					
ANR	6629969	Condition	"( ef = _zip_ef_parse ( ef_raw , ef_len , ZIP_EF_LOCAL , & za -> error ) ) == NULL"	373:5:7970:8037	6629703	0	True				
ANR	6629970	EqualityExpression	"( ef = _zip_ef_parse ( ef_raw , ef_len , ZIP_EF_LOCAL , & za -> error ) ) == NULL"		6629703	0		==			
ANR	6629971	AssignmentExpression	"ef = _zip_ef_parse ( ef_raw , ef_len , ZIP_EF_LOCAL , & za -> error )"		6629703	0		=			
ANR	6629972	Identifier	ef		6629703	0					
ANR	6629973	CallExpression	"_zip_ef_parse ( ef_raw , ef_len , ZIP_EF_LOCAL , & za -> error )"		6629703	1					
ANR	6629974	Callee	_zip_ef_parse		6629703	0					
ANR	6629975	Identifier	_zip_ef_parse		6629703	0					
ANR	6629976	ArgumentList	ef_raw		6629703	1					
ANR	6629977	Argument	ef_raw		6629703	0					
ANR	6629978	Identifier	ef_raw		6629703	0					
ANR	6629979	Argument	ef_len		6629703	1					
ANR	6629980	Identifier	ef_len		6629703	0					
ANR	6629981	Argument	ZIP_EF_LOCAL		6629703	2					
ANR	6629982	Identifier	ZIP_EF_LOCAL		6629703	0					
ANR	6629983	Argument	& za -> error		6629703	3					
ANR	6629984	UnaryOperationExpression	& za -> error		6629703	0					
ANR	6629985	UnaryOperator	&		6629703	0					
ANR	6629986	PtrMemberAccess	za -> error		6629703	1					
ANR	6629987	Identifier	za		6629703	0					
ANR	6629988	Identifier	error		6629703	1					
ANR	6629989	Identifier	NULL		6629703	1					
ANR	6629990	CompoundStatement		46:75:1005:1005	6629703	1					
ANR	6629991	ExpressionStatement	free ( ef_raw )	374:5:8047:8059	6629703	0	True				
ANR	6629992	CallExpression	free ( ef_raw )		6629703	0					
ANR	6629993	Callee	free		6629703	0					
ANR	6629994	Identifier	free		6629703	0					
ANR	6629995	ArgumentList	ef_raw		6629703	1					
ANR	6629996	Argument	ef_raw		6629703	0					
ANR	6629997	Identifier	ef_raw		6629703	0					
ANR	6629998	ReturnStatement	return - 1 ;	375:5:8066:8075	6629703	1	True				
ANR	6629999	UnaryOperationExpression	- 1		6629703	0					
ANR	6630000	UnaryOperator	-		6629703	0					
ANR	6630001	PrimaryExpression	1		6629703	1					
ANR	6630002	ExpressionStatement	free ( ef_raw )	377:1:8081:8093	6629703	6	True				
ANR	6630003	CallExpression	free ( ef_raw )		6629703	0					
ANR	6630004	Callee	free		6629703	0					
ANR	6630005	Identifier	free		6629703	0					
ANR	6630006	ArgumentList	ef_raw		6629703	1					
ANR	6630007	Argument	ef_raw		6629703	0					
ANR	6630008	Identifier	ef_raw		6629703	0					
ANR	6630009	ExpressionStatement	ef = _zip_ef_remove_internal ( ef )	379:8:8105:8137	6629703	7	True				
ANR	6630010	AssignmentExpression	ef = _zip_ef_remove_internal ( ef )		6629703	0		=			
ANR	6630011	Identifier	ef		6629703	0					
ANR	6630012	CallExpression	_zip_ef_remove_internal ( ef )		6629703	1					
ANR	6630013	Callee	_zip_ef_remove_internal		6629703	0					
ANR	6630014	Identifier	_zip_ef_remove_internal		6629703	0					
ANR	6630015	ArgumentList	ef		6629703	1					
ANR	6630016	Argument	ef		6629703	0					
ANR	6630017	Identifier	ef		6629703	0					
ANR	6630018	ExpressionStatement	"e -> orig -> extra_fields = _zip_ef_merge ( e -> orig -> extra_fields , ef )"	380:1:8140:8204	6629703	8	True				
ANR	6630019	AssignmentExpression	"e -> orig -> extra_fields = _zip_ef_merge ( e -> orig -> extra_fields , ef )"		6629703	0		=			
ANR	6630020	PtrMemberAccess	e -> orig -> extra_fields		6629703	0					
ANR	6630021	PtrMemberAccess	e -> orig		6629703	0					
ANR	6630022	Identifier	e		6629703	0					
ANR	6630023	Identifier	orig		6629703	1					
ANR	6630024	Identifier	extra_fields		6629703	1					
ANR	6630025	CallExpression	"_zip_ef_merge ( e -> orig -> extra_fields , ef )"		6629703	1					
ANR	6630026	Callee	_zip_ef_merge		6629703	0					
ANR	6630027	Identifier	_zip_ef_merge		6629703	0					
ANR	6630028	ArgumentList	e -> orig -> extra_fields		6629703	1					
ANR	6630029	Argument	e -> orig -> extra_fields		6629703	0					
ANR	6630030	PtrMemberAccess	e -> orig -> extra_fields		6629703	0					
ANR	6630031	PtrMemberAccess	e -> orig		6629703	0					
ANR	6630032	Identifier	e		6629703	0					
ANR	6630033	Identifier	orig		6629703	1					
ANR	6630034	Identifier	extra_fields		6629703	1					
ANR	6630035	Argument	ef		6629703	1					
ANR	6630036	Identifier	ef		6629703	0					
ANR	6630037	ExpressionStatement	e -> orig -> local_extra_fields_read = 1	383:4:8217:8253	6629703	13	True				
ANR	6630038	AssignmentExpression	e -> orig -> local_extra_fields_read = 1		6629703	0		=			
ANR	6630039	PtrMemberAccess	e -> orig -> local_extra_fields_read		6629703	0					
ANR	6630040	PtrMemberAccess	e -> orig		6629703	0					
ANR	6630041	Identifier	e		6629703	0					
ANR	6630042	Identifier	orig		6629703	1					
ANR	6630043	Identifier	local_extra_fields_read		6629703	1					
ANR	6630044	PrimaryExpression	1		6629703	1					
ANR	6630045	IfStatement	if ( e -> changes && e -> changes -> local_extra_fields_read == 0 )		6629703	14					
ANR	6630046	Condition	e -> changes && e -> changes -> local_extra_fields_read == 0	385:8:8268:8321	6629703	0	True				
ANR	6630047	AndExpression	e -> changes && e -> changes -> local_extra_fields_read == 0		6629703	0		&&			
ANR	6630048	PtrMemberAccess	e -> changes		6629703	0					
ANR	6630049	Identifier	e		6629703	0					
ANR	6630050	Identifier	changes		6629703	1					
ANR	6630051	EqualityExpression	e -> changes -> local_extra_fields_read == 0		6629703	1		==			
ANR	6630052	PtrMemberAccess	e -> changes -> local_extra_fields_read		6629703	0					
ANR	6630053	PtrMemberAccess	e -> changes		6629703	0					
ANR	6630054	Identifier	e		6629703	0					
ANR	6630055	Identifier	changes		6629703	1					
ANR	6630056	Identifier	local_extra_fields_read		6629703	1					
ANR	6630057	PrimaryExpression	0		6629703	1					
ANR	6630058	CompoundStatement		58:64:1289:1289	6629703	1					
ANR	6630059	ExpressionStatement	e -> changes -> extra_fields = e -> orig -> extra_fields	386:1:8327:8375	6629703	0	True				
ANR	6630060	AssignmentExpression	e -> changes -> extra_fields = e -> orig -> extra_fields		6629703	0		=			
ANR	6630061	PtrMemberAccess	e -> changes -> extra_fields		6629703	0					
ANR	6630062	PtrMemberAccess	e -> changes		6629703	0					
ANR	6630063	Identifier	e		6629703	0					
ANR	6630064	Identifier	changes		6629703	1					
ANR	6630065	Identifier	extra_fields		6629703	1					
ANR	6630066	PtrMemberAccess	e -> orig -> extra_fields		6629703	1					
ANR	6630067	PtrMemberAccess	e -> orig		6629703	0					
ANR	6630068	Identifier	e		6629703	0					
ANR	6630069	Identifier	orig		6629703	1					
ANR	6630070	Identifier	extra_fields		6629703	1					
ANR	6630071	ExpressionStatement	e -> changes -> local_extra_fields_read = 1	387:1:8378:8417	6629703	1	True				
ANR	6630072	AssignmentExpression	e -> changes -> local_extra_fields_read = 1		6629703	0		=			
ANR	6630073	PtrMemberAccess	e -> changes -> local_extra_fields_read		6629703	0					
ANR	6630074	PtrMemberAccess	e -> changes		6629703	0					
ANR	6630075	Identifier	e		6629703	0					
ANR	6630076	Identifier	changes		6629703	1					
ANR	6630077	Identifier	local_extra_fields_read		6629703	1					
ANR	6630078	PrimaryExpression	1		6629703	1					
ANR	6630079	ReturnStatement	return 0 ;	390:4:8430:8438	6629703	15	True				
ANR	6630080	PrimaryExpression	0		6629703	0					
ANR	6630081	ReturnType	int		6629703	1					
ANR	6630082	Identifier	_zip_read_local_ef		6629703	2					
ANR	6630083	ParameterList	"struct zip * za , zip_uint64_t idx"		6629703	3					
ANR	6630084	Parameter	struct zip * za	327:19:7000:7013	6629703	0	True				
ANR	6630085	ParameterType	struct zip *		6629703	0					
ANR	6630086	Identifier	za		6629703	1					
ANR	6630087	Parameter	zip_uint64_t idx	327:35:7016:7031	6629703	1	True				
ANR	6630088	ParameterType	zip_uint64_t		6629703	0					
ANR	6630089	Identifier	idx		6629703	1					
ANR	6630090	CFGEntryNode	ENTRY		6629703		True				
ANR	6630091	CFGExitNode	EXIT		6629703		True				
ANR	6630092	Symbol	fseeko		6629703						
ANR	6630093	Symbol	SEEK_CUR		6629703						
ANR	6630094	Symbol	& za -> error		6629703						
ANR	6630095	Symbol	za -> entry		6629703						
ANR	6630096	Symbol	* e -> orig		6629703						
ANR	6630097	Symbol	ZIP_ER_READ		6629703						
ANR	6630098	Symbol	fseek		6629703						
ANR	6630099	Symbol	* za		6629703						
ANR	6630100	Symbol	ZIP_ER_INVAL		6629703						
ANR	6630101	Symbol	_zip_read_data		6629703						
ANR	6630102	Symbol	ef_len		6629703						
ANR	6630103	Symbol	za -> nentry		6629703						
ANR	6630104	Symbol	SEEK_SET		6629703						
ANR	6630105	Symbol	ef		6629703						
ANR	6630106	Symbol	b		6629703						
ANR	6630107	Symbol	errno		6629703						
ANR	6630108	Symbol	NULL		6629703						
ANR	6630109	Symbol	_zip_ef_remove_internal		6629703						
ANR	6630110	Symbol	e -> orig -> offset		6629703						
ANR	6630111	Symbol	e		6629703						
ANR	6630112	Symbol	* * e		6629703						
ANR	6630113	Symbol	e -> orig -> extra_fields		6629703						
ANR	6630114	Symbol	e -> changes -> local_extra_fields_read		6629703						
ANR	6630115	Symbol	za		6629703						
ANR	6630116	Symbol	ef_raw		6629703						
ANR	6630117	Symbol	ZIP_ER_SEEK		6629703						
ANR	6630118	Symbol	e -> orig -> local_extra_fields_read		6629703						
ANR	6630119	Symbol	_zip_ef_merge		6629703						
ANR	6630120	Symbol	fread		6629703						
ANR	6630121	Symbol	* e		6629703						
ANR	6630122	Symbol	p		6629703						
ANR	6630123	Symbol	za -> zp		6629703						
ANR	6630124	Symbol	_zip_ef_parse		6629703						
ANR	6630125	Symbol	ZIP_EF_LOCAL		6629703						
ANR	6630126	Symbol	e -> changes -> extra_fields		6629703						
ANR	6630127	Symbol	e -> orig		6629703						
ANR	6630128	Symbol	& p		6629703						
ANR	6630129	Symbol	e -> changes		6629703						
ANR	6630130	Symbol	* e -> changes		6629703						
ANR	6630131	Symbol	fname_len		6629703						
ANR	6630132	Symbol	_zip_read2		6629703						
ANR	6630133	Symbol	idx		6629703						
