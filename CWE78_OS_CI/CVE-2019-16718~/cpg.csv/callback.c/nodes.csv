command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	643475	File	data/converged/CVE-2019-16718~_radare2/callback.c								
ANR	643476	Function	r_config_setter_q	5:0:76:197							
ANR	643477	FunctionDef	r_config_setter_q (void * data)		643476	0					
ANR	643478	CompoundStatement		5:42:118:197	643476	0					
ANR	643479	IdentifierDeclStatement	RConfigNode * node = data ;	6:1:121:145	643476	0	True				
ANR	643480	IdentifierDecl	* node = data		643476	0					
ANR	643481	IdentifierDeclType	RConfigNode *		643476	0					
ANR	643482	Identifier	node		643476	1					
ANR	643483	AssignmentExpression	* node = data		643476	2		=			
ANR	643484	Identifier	data		643476	0					
ANR	643485	Identifier	data		643476	1					
ANR	643486	ExpressionStatement	* ( node -> cb_ptr_q ) = node -> i_value	7:1:148:181	643476	1	True				
ANR	643487	AssignmentExpression	* ( node -> cb_ptr_q ) = node -> i_value		643476	0		=			
ANR	643488	UnaryOperationExpression	* ( node -> cb_ptr_q )		643476	0					
ANR	643489	UnaryOperator	*		643476	0					
ANR	643490	PtrMemberAccess	node -> cb_ptr_q		643476	1					
ANR	643491	Identifier	node		643476	0					
ANR	643492	Identifier	cb_ptr_q		643476	1					
ANR	643493	PtrMemberAccess	node -> i_value		643476	1					
ANR	643494	Identifier	node		643476	0					
ANR	643495	Identifier	i_value		643476	1					
ANR	643496	ReturnStatement	return true ;	8:1:184:195	643476	2	True				
ANR	643497	Identifier	true		643476	0					
ANR	643498	ReturnType	static bool		643476	1					
ANR	643499	Identifier	r_config_setter_q		643476	2					
ANR	643500	ParameterList	void * data		643476	3					
ANR	643501	Parameter	void * data	5:30:106:115	643476	0	True				
ANR	643502	ParameterType	void *		643476	0					
ANR	643503	Identifier	data		643476	1					
ANR	643504	CFGEntryNode	ENTRY		643476		True				
ANR	643505	CFGExitNode	EXIT		643476		True				
ANR	643506	Symbol	node		643476						
ANR	643507	Symbol	data		643476						
ANR	643508	Symbol	* node -> cb_ptr_q		643476						
ANR	643509	Symbol	* * node		643476						
ANR	643510	Symbol	* ( node -> cb_ptr_q )		643476						
ANR	643511	Symbol	true		643476						
ANR	643512	Symbol	node -> cb_ptr_q		643476						
ANR	643513	Symbol	* node		643476						
ANR	643514	Symbol	node -> i_value		643476						
ANR	643515	Function	r_config_setter_i	11:0:200:321							
ANR	643516	FunctionDef	r_config_setter_i (void * data)		643515	0					
ANR	643517	CompoundStatement		11:42:242:321	643515	0					
ANR	643518	IdentifierDeclStatement	RConfigNode * node = data ;	12:1:245:269	643515	0	True				
ANR	643519	IdentifierDecl	* node = data		643515	0					
ANR	643520	IdentifierDeclType	RConfigNode *		643515	0					
ANR	643521	Identifier	node		643515	1					
ANR	643522	AssignmentExpression	* node = data		643515	2		=			
ANR	643523	Identifier	data		643515	0					
ANR	643524	Identifier	data		643515	1					
ANR	643525	ExpressionStatement	* ( node -> cb_ptr_i ) = node -> i_value	13:1:272:305	643515	1	True				
ANR	643526	AssignmentExpression	* ( node -> cb_ptr_i ) = node -> i_value		643515	0		=			
ANR	643527	UnaryOperationExpression	* ( node -> cb_ptr_i )		643515	0					
ANR	643528	UnaryOperator	*		643515	0					
ANR	643529	PtrMemberAccess	node -> cb_ptr_i		643515	1					
ANR	643530	Identifier	node		643515	0					
ANR	643531	Identifier	cb_ptr_i		643515	1					
ANR	643532	PtrMemberAccess	node -> i_value		643515	1					
ANR	643533	Identifier	node		643515	0					
ANR	643534	Identifier	i_value		643515	1					
ANR	643535	ReturnStatement	return true ;	14:1:308:319	643515	2	True				
ANR	643536	Identifier	true		643515	0					
ANR	643537	ReturnType	static bool		643515	1					
ANR	643538	Identifier	r_config_setter_i		643515	2					
ANR	643539	ParameterList	void * data		643515	3					
ANR	643540	Parameter	void * data	11:30:230:239	643515	0	True				
ANR	643541	ParameterType	void *		643515	0					
ANR	643542	Identifier	data		643515	1					
ANR	643543	CFGEntryNode	ENTRY		643515		True				
ANR	643544	CFGExitNode	EXIT		643515		True				
ANR	643545	Symbol	node		643515						
ANR	643546	Symbol	node -> cb_ptr_i		643515						
ANR	643547	Symbol	data		643515						
ANR	643548	Symbol	* * node		643515						
ANR	643549	Symbol	true		643515						
ANR	643550	Symbol	* node		643515						
ANR	643551	Symbol	* ( node -> cb_ptr_i )		643515						
ANR	643552	Symbol	* node -> cb_ptr_i		643515						
ANR	643553	Symbol	node -> i_value		643515						
ANR	643554	Function	r_config_setter_s	17:0:324:574							
ANR	643555	FunctionDef	r_config_setter_s (void * data)		643554	0					
ANR	643556	CompoundStatement		17:42:366:574	643554	0					
ANR	643557	IdentifierDeclStatement	RConfigNode * node = data ;	18:1:369:393	643554	0	True				
ANR	643558	IdentifierDecl	* node = data		643554	0					
ANR	643559	IdentifierDeclType	RConfigNode *		643554	0					
ANR	643560	Identifier	node		643554	1					
ANR	643561	AssignmentExpression	* node = data		643554	2		=			
ANR	643562	Identifier	data		643554	0					
ANR	643563	Identifier	data		643554	1					
ANR	643564	IfStatement	if ( ! node -> value || ! * node -> value )		643554	1					
ANR	643565	Condition	! node -> value || ! * node -> value	19:5:400:428	643554	0	True				
ANR	643566	OrExpression	! node -> value || ! * node -> value		643554	0		||			
ANR	643567	UnaryOperationExpression	! node -> value		643554	0					
ANR	643568	UnaryOperator	!		643554	0					
ANR	643569	PtrMemberAccess	node -> value		643554	1					
ANR	643570	Identifier	node		643554	0					
ANR	643571	Identifier	value		643554	1					
ANR	643572	UnaryOperationExpression	! * node -> value		643554	1					
ANR	643573	UnaryOperator	!		643554	0					
ANR	643574	UnaryOperationExpression	* node -> value		643554	1					
ANR	643575	UnaryOperator	*		643554	0					
ANR	643576	PtrMemberAccess	node -> value		643554	1					
ANR	643577	Identifier	node		643554	0					
ANR	643578	Identifier	value		643554	1					
ANR	643579	CompoundStatement		3:36:64:64	643554	1					
ANR	643580	ExpressionStatement	free ( * node -> cb_ptr_s )	20:2:435:457	643554	0	True				
ANR	643581	CallExpression	free ( * node -> cb_ptr_s )		643554	0					
ANR	643582	Callee	free		643554	0					
ANR	643583	Identifier	free		643554	0					
ANR	643584	ArgumentList	* node -> cb_ptr_s		643554	1					
ANR	643585	Argument	* node -> cb_ptr_s		643554	0					
ANR	643586	UnaryOperationExpression	* node -> cb_ptr_s		643554	0					
ANR	643587	UnaryOperator	*		643554	0					
ANR	643588	PtrMemberAccess	node -> cb_ptr_s		643554	1					
ANR	643589	Identifier	node		643554	0					
ANR	643590	Identifier	cb_ptr_s		643554	1					
ANR	643591	ExpressionStatement	* node -> cb_ptr_s = NULL	21:2:461:483	643554	1	True				
ANR	643592	AssignmentExpression	* node -> cb_ptr_s = NULL		643554	0		=			
ANR	643593	UnaryOperationExpression	* node -> cb_ptr_s		643554	0					
ANR	643594	UnaryOperator	*		643554	0					
ANR	643595	PtrMemberAccess	node -> cb_ptr_s		643554	1					
ANR	643596	Identifier	node		643554	0					
ANR	643597	Identifier	cb_ptr_s		643554	1					
ANR	643598	Identifier	NULL		643554	1					
ANR	643599	ElseStatement	else		643554	0					
ANR	643600	CompoundStatement		6:8:126:126	643554	0					
ANR	643601	ExpressionStatement	"* node -> cb_ptr_s = r_str_dup ( * node -> cb_ptr_s , node -> value )"	23:2:497:555	643554	0	True				
ANR	643602	AssignmentExpression	"* node -> cb_ptr_s = r_str_dup ( * node -> cb_ptr_s , node -> value )"		643554	0		=			
ANR	643603	UnaryOperationExpression	* node -> cb_ptr_s		643554	0					
ANR	643604	UnaryOperator	*		643554	0					
ANR	643605	PtrMemberAccess	node -> cb_ptr_s		643554	1					
ANR	643606	Identifier	node		643554	0					
ANR	643607	Identifier	cb_ptr_s		643554	1					
ANR	643608	CallExpression	"r_str_dup ( * node -> cb_ptr_s , node -> value )"		643554	1					
ANR	643609	Callee	r_str_dup		643554	0					
ANR	643610	Identifier	r_str_dup		643554	0					
ANR	643611	ArgumentList	* node -> cb_ptr_s		643554	1					
ANR	643612	Argument	* node -> cb_ptr_s		643554	0					
ANR	643613	UnaryOperationExpression	* node -> cb_ptr_s		643554	0					
ANR	643614	UnaryOperator	*		643554	0					
ANR	643615	PtrMemberAccess	node -> cb_ptr_s		643554	1					
ANR	643616	Identifier	node		643554	0					
ANR	643617	Identifier	cb_ptr_s		643554	1					
ANR	643618	Argument	node -> value		643554	1					
ANR	643619	PtrMemberAccess	node -> value		643554	0					
ANR	643620	Identifier	node		643554	0					
ANR	643621	Identifier	value		643554	1					
ANR	643622	ReturnStatement	return true ;	25:1:561:572	643554	2	True				
ANR	643623	Identifier	true		643554	0					
ANR	643624	ReturnType	static bool		643554	1					
ANR	643625	Identifier	r_config_setter_s		643554	2					
ANR	643626	ParameterList	void * data		643554	3					
ANR	643627	Parameter	void * data	17:30:354:363	643554	0	True				
ANR	643628	ParameterType	void *		643554	0					
ANR	643629	Identifier	data		643554	1					
ANR	643630	CFGEntryNode	ENTRY		643554		True				
ANR	643631	CFGExitNode	EXIT		643554		True				
ANR	643632	Symbol	node		643554						
ANR	643633	Symbol	* node -> value		643554						
ANR	643634	Symbol	NULL		643554						
ANR	643635	Symbol	data		643554						
ANR	643636	Symbol	* * node		643554						
ANR	643637	Symbol	true		643554						
ANR	643638	Symbol	* node		643554						
ANR	643639	Symbol	* node -> cb_ptr_s		643554						
ANR	643640	Symbol	node -> cb_ptr_s		643554						
ANR	643641	Symbol	node -> value		643554						
ANR	643642	Symbol	r_str_dup		643554						
ANR	643643	Function	r_config_set_setter_q	28:0:577:823							
ANR	643644	FunctionDef	"r_config_set_setter_q (RConfig * cfg , const char * name , ut64 * ptr)"		643643	0					
ANR	643645	CompoundStatement		28:76:653:823	643643	0					
ANR	643646	IdentifierDeclStatement	"RConfigNode * node = r_config_node_get ( cfg , name ) ;"	29:1:656:705	643643	0	True				
ANR	643647	IdentifierDecl	"* node = r_config_node_get ( cfg , name )"		643643	0					
ANR	643648	IdentifierDeclType	RConfigNode *		643643	0					
ANR	643649	Identifier	node		643643	1					
ANR	643650	AssignmentExpression	"* node = r_config_node_get ( cfg , name )"		643643	2		=			
ANR	643651	Identifier	node		643643	0					
ANR	643652	CallExpression	"r_config_node_get ( cfg , name )"		643643	1					
ANR	643653	Callee	r_config_node_get		643643	0					
ANR	643654	Identifier	r_config_node_get		643643	0					
ANR	643655	ArgumentList	cfg		643643	1					
ANR	643656	Argument	cfg		643643	0					
ANR	643657	Identifier	cfg		643643	0					
ANR	643658	Argument	name		643643	1					
ANR	643659	Identifier	name		643643	0					
ANR	643660	IfStatement	if ( node )		643643	1					
ANR	643661	Condition	node	30:5:712:715	643643	0	True				
ANR	643662	Identifier	node		643643	0					
ANR	643663	CompoundStatement		3:11:64:64	643643	1					
ANR	643664	ExpressionStatement	node -> cb_ptr_q = ptr	31:2:722:742	643643	0	True				
ANR	643665	AssignmentExpression	node -> cb_ptr_q = ptr		643643	0		=			
ANR	643666	PtrMemberAccess	node -> cb_ptr_q		643643	0					
ANR	643667	Identifier	node		643643	0					
ANR	643668	Identifier	cb_ptr_q		643643	1					
ANR	643669	Identifier	ptr		643643	1					
ANR	643670	ExpressionStatement	node -> setter = ( void * ) & r_config_setter_q	32:2:746:788	643643	1	True				
ANR	643671	AssignmentExpression	node -> setter = ( void * ) & r_config_setter_q		643643	0		=			
ANR	643672	PtrMemberAccess	node -> setter		643643	0					
ANR	643673	Identifier	node		643643	0					
ANR	643674	Identifier	setter		643643	1					
ANR	643675	CastExpression	( void * ) & r_config_setter_q		643643	1					
ANR	643676	CastTarget	void *		643643	0					
ANR	643677	UnaryOperationExpression	& r_config_setter_q		643643	1					
ANR	643678	UnaryOperator	&		643643	0					
ANR	643679	Identifier	r_config_setter_q		643643	1					
ANR	643680	ReturnStatement	return true ;	33:2:792:803	643643	2	True				
ANR	643681	Identifier	true		643643	0					
ANR	643682	ReturnStatement	return false ;	35:1:809:821	643643	2	True				
ANR	643683	Identifier	false		643643	0					
ANR	643684	ReturnType	R_API bool		643643	1					
ANR	643685	Identifier	r_config_set_setter_q		643643	2					
ANR	643686	ParameterList	"RConfig * cfg , const char * name , ut64 * ptr"		643643	3					
ANR	643687	Parameter	RConfig * cfg	28:33:610:621	643643	0	True				
ANR	643688	ParameterType	RConfig *		643643	0					
ANR	643689	Identifier	cfg		643643	1					
ANR	643690	Parameter	const char * name	28:47:624:639	643643	1	True				
ANR	643691	ParameterType	const char *		643643	0					
ANR	643692	Identifier	name		643643	1					
ANR	643693	Parameter	ut64 * ptr	28:65:642:650	643643	2	True				
ANR	643694	ParameterType	ut64 *		643643	0					
ANR	643695	Identifier	ptr		643643	1					
ANR	643696	CFGEntryNode	ENTRY		643643		True				
ANR	643697	CFGExitNode	EXIT		643643		True				
ANR	643698	Symbol	node		643643						
ANR	643699	Symbol	& r_config_setter_q		643643						
ANR	643700	Symbol	node -> setter		643643						
ANR	643701	Symbol	cfg		643643						
ANR	643702	Symbol	name		643643						
ANR	643703	Symbol	true		643643						
ANR	643704	Symbol	false		643643						
ANR	643705	Symbol	node -> cb_ptr_q		643643						
ANR	643706	Symbol	* node		643643						
ANR	643707	Symbol	r_config_node_get		643643						
ANR	643708	Symbol	ptr		643643						
ANR	643709	Function	r_config_set_setter_i	38:0:826:1071							
ANR	643710	FunctionDef	"r_config_set_setter_i (RConfig * cfg , const char * name , int * ptr)"		643709	0					
ANR	643711	CompoundStatement		38:75:901:1071	643709	0					
ANR	643712	IdentifierDeclStatement	"RConfigNode * node = r_config_node_get ( cfg , name ) ;"	39:1:904:953	643709	0	True				
ANR	643713	IdentifierDecl	"* node = r_config_node_get ( cfg , name )"		643709	0					
ANR	643714	IdentifierDeclType	RConfigNode *		643709	0					
ANR	643715	Identifier	node		643709	1					
ANR	643716	AssignmentExpression	"* node = r_config_node_get ( cfg , name )"		643709	2		=			
ANR	643717	Identifier	node		643709	0					
ANR	643718	CallExpression	"r_config_node_get ( cfg , name )"		643709	1					
ANR	643719	Callee	r_config_node_get		643709	0					
ANR	643720	Identifier	r_config_node_get		643709	0					
ANR	643721	ArgumentList	cfg		643709	1					
ANR	643722	Argument	cfg		643709	0					
ANR	643723	Identifier	cfg		643709	0					
ANR	643724	Argument	name		643709	1					
ANR	643725	Identifier	name		643709	0					
ANR	643726	IfStatement	if ( node )		643709	1					
ANR	643727	Condition	node	40:5:960:963	643709	0	True				
ANR	643728	Identifier	node		643709	0					
ANR	643729	CompoundStatement		3:11:64:64	643709	1					
ANR	643730	ExpressionStatement	node -> cb_ptr_i = ptr	41:2:970:990	643709	0	True				
ANR	643731	AssignmentExpression	node -> cb_ptr_i = ptr		643709	0		=			
ANR	643732	PtrMemberAccess	node -> cb_ptr_i		643709	0					
ANR	643733	Identifier	node		643709	0					
ANR	643734	Identifier	cb_ptr_i		643709	1					
ANR	643735	Identifier	ptr		643709	1					
ANR	643736	ExpressionStatement	node -> setter = ( void * ) & r_config_setter_i	42:2:994:1036	643709	1	True				
ANR	643737	AssignmentExpression	node -> setter = ( void * ) & r_config_setter_i		643709	0		=			
ANR	643738	PtrMemberAccess	node -> setter		643709	0					
ANR	643739	Identifier	node		643709	0					
ANR	643740	Identifier	setter		643709	1					
ANR	643741	CastExpression	( void * ) & r_config_setter_i		643709	1					
ANR	643742	CastTarget	void *		643709	0					
ANR	643743	UnaryOperationExpression	& r_config_setter_i		643709	1					
ANR	643744	UnaryOperator	&		643709	0					
ANR	643745	Identifier	r_config_setter_i		643709	1					
ANR	643746	ReturnStatement	return true ;	43:2:1040:1051	643709	2	True				
ANR	643747	Identifier	true		643709	0					
ANR	643748	ReturnStatement	return false ;	45:1:1057:1069	643709	2	True				
ANR	643749	Identifier	false		643709	0					
ANR	643750	ReturnType	R_API bool		643709	1					
ANR	643751	Identifier	r_config_set_setter_i		643709	2					
ANR	643752	ParameterList	"RConfig * cfg , const char * name , int * ptr"		643709	3					
ANR	643753	Parameter	RConfig * cfg	38:33:859:870	643709	0	True				
ANR	643754	ParameterType	RConfig *		643709	0					
ANR	643755	Identifier	cfg		643709	1					
ANR	643756	Parameter	const char * name	38:47:873:888	643709	1	True				
ANR	643757	ParameterType	const char *		643709	0					
ANR	643758	Identifier	name		643709	1					
ANR	643759	Parameter	int * ptr	38:65:891:898	643709	2	True				
ANR	643760	ParameterType	int *		643709	0					
ANR	643761	Identifier	ptr		643709	1					
ANR	643762	CFGEntryNode	ENTRY		643709		True				
ANR	643763	CFGExitNode	EXIT		643709		True				
ANR	643764	Symbol	node		643709						
ANR	643765	Symbol	node -> cb_ptr_i		643709						
ANR	643766	Symbol	node -> setter		643709						
ANR	643767	Symbol	cfg		643709						
ANR	643768	Symbol	name		643709						
ANR	643769	Symbol	true		643709						
ANR	643770	Symbol	false		643709						
ANR	643771	Symbol	& r_config_setter_i		643709						
ANR	643772	Symbol	* node		643709						
ANR	643773	Symbol	r_config_node_get		643709						
ANR	643774	Symbol	ptr		643709						
ANR	643775	Function	r_config_set_setter_s	48:0:1074:1322							
ANR	643776	FunctionDef	"r_config_set_setter_s (RConfig * cfg , const char * name , char * * ptr)"		643775	0					
ANR	643777	CompoundStatement		48:78:1152:1322	643775	0					
ANR	643778	IdentifierDeclStatement	"RConfigNode * node = r_config_node_get ( cfg , name ) ;"	49:1:1155:1204	643775	0	True				
ANR	643779	IdentifierDecl	"* node = r_config_node_get ( cfg , name )"		643775	0					
ANR	643780	IdentifierDeclType	RConfigNode *		643775	0					
ANR	643781	Identifier	node		643775	1					
ANR	643782	AssignmentExpression	"* node = r_config_node_get ( cfg , name )"		643775	2		=			
ANR	643783	Identifier	node		643775	0					
ANR	643784	CallExpression	"r_config_node_get ( cfg , name )"		643775	1					
ANR	643785	Callee	r_config_node_get		643775	0					
ANR	643786	Identifier	r_config_node_get		643775	0					
ANR	643787	ArgumentList	cfg		643775	1					
ANR	643788	Argument	cfg		643775	0					
ANR	643789	Identifier	cfg		643775	0					
ANR	643790	Argument	name		643775	1					
ANR	643791	Identifier	name		643775	0					
ANR	643792	IfStatement	if ( node )		643775	1					
ANR	643793	Condition	node	50:5:1211:1214	643775	0	True				
ANR	643794	Identifier	node		643775	0					
ANR	643795	CompoundStatement		3:11:64:64	643775	1					
ANR	643796	ExpressionStatement	node -> cb_ptr_s = ptr	51:2:1221:1241	643775	0	True				
ANR	643797	AssignmentExpression	node -> cb_ptr_s = ptr		643775	0		=			
ANR	643798	PtrMemberAccess	node -> cb_ptr_s		643775	0					
ANR	643799	Identifier	node		643775	0					
ANR	643800	Identifier	cb_ptr_s		643775	1					
ANR	643801	Identifier	ptr		643775	1					
ANR	643802	ExpressionStatement	node -> setter = ( void * ) & r_config_setter_s	52:2:1245:1287	643775	1	True				
ANR	643803	AssignmentExpression	node -> setter = ( void * ) & r_config_setter_s		643775	0		=			
ANR	643804	PtrMemberAccess	node -> setter		643775	0					
ANR	643805	Identifier	node		643775	0					
ANR	643806	Identifier	setter		643775	1					
ANR	643807	CastExpression	( void * ) & r_config_setter_s		643775	1					
ANR	643808	CastTarget	void *		643775	0					
ANR	643809	UnaryOperationExpression	& r_config_setter_s		643775	1					
ANR	643810	UnaryOperator	&		643775	0					
ANR	643811	Identifier	r_config_setter_s		643775	1					
ANR	643812	ReturnStatement	return true ;	53:2:1291:1302	643775	2	True				
ANR	643813	Identifier	true		643775	0					
ANR	643814	ReturnStatement	return false ;	55:1:1308:1320	643775	2	True				
ANR	643815	Identifier	false		643775	0					
ANR	643816	ReturnType	R_API bool		643775	1					
ANR	643817	Identifier	r_config_set_setter_s		643775	2					
ANR	643818	ParameterList	"RConfig * cfg , const char * name , char * * ptr"		643775	3					
ANR	643819	Parameter	RConfig * cfg	48:33:1107:1118	643775	0	True				
ANR	643820	ParameterType	RConfig *		643775	0					
ANR	643821	Identifier	cfg		643775	1					
ANR	643822	Parameter	const char * name	48:47:1121:1136	643775	1	True				
ANR	643823	ParameterType	const char *		643775	0					
ANR	643824	Identifier	name		643775	1					
ANR	643825	Parameter	char * * ptr	48:65:1139:1149	643775	2	True				
ANR	643826	ParameterType	char * *		643775	0					
ANR	643827	Identifier	ptr		643775	1					
ANR	643828	CFGEntryNode	ENTRY		643775		True				
ANR	643829	CFGExitNode	EXIT		643775		True				
ANR	643830	Symbol	node		643775						
ANR	643831	Symbol	node -> setter		643775						
ANR	643832	Symbol	cfg		643775						
ANR	643833	Symbol	name		643775						
ANR	643834	Symbol	true		643775						
ANR	643835	Symbol	false		643775						
ANR	643836	Symbol	* node		643775						
ANR	643837	Symbol	node -> cb_ptr_s		643775						
ANR	643838	Symbol	r_config_node_get		643775						
ANR	643839	Symbol	ptr		643775						
ANR	643840	Symbol	& r_config_setter_s		643775						
