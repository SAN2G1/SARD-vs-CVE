command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6400788	File	data/converged/CVE-2019-16718~_radare2/vasm.c								
ANR	6400789	ClassDef	<unnamed>	7:8:117:302							
ANR	6400790	DeclStmt									
ANR	6400791	Decl							RCore	RCore *	core
ANR	6400792	DeclStmt									
ANR	6400793	Decl							char	char [ R_VISUAL_ASM_BUFSIZE ]	blockbuf
ANR	6400794	DeclStmt									
ANR	6400795	Decl							char	char [ R_VISUAL_ASM_BUFSIZE ]	codebuf
ANR	6400796	DeclStmt									
ANR	6400797	Decl							int	int	oplen
ANR	6400798	DeclStmt									
ANR	6400799	Decl							ut8	ut8 [ 128 ]	buf
ANR	6400800	DeclStmt									
ANR	6400801	Decl							RAsmCode	RAsmCode *	acode
ANR	6400802	DeclStmt									
ANR	6400803	Decl							int	int	blocklen
ANR	6400804	DeclStmt									
ANR	6400805	Decl							ut64	ut64	off
ANR	6400806	DeclStmt									
ANR	6400807	Decl									RCoreVisualAsm
ANR	6400808	Function	readline_callback	18:0:305:2054							
ANR	6400809	FunctionDef	"readline_callback (void * _a , const char * str)"		6400808	0					
ANR	6400810	CompoundStatement		18:56:361:2054	6400808	0					
ANR	6400811	IdentifierDeclStatement	RCoreVisualAsm * a = _a ;	19:1:364:386	6400808	0	True				
ANR	6400812	IdentifierDecl	* a = _a		6400808	0					
ANR	6400813	IdentifierDeclType	RCoreVisualAsm *		6400808	0					
ANR	6400814	Identifier	a		6400808	1					
ANR	6400815	AssignmentExpression	* a = _a		6400808	2		=			
ANR	6400816	Identifier	_a		6400808	0					
ANR	6400817	Identifier	_a		6400808	1					
ANR	6400818	IdentifierDeclStatement	RCore * core = a -> core ;	20:1:389:410	6400808	1	True				
ANR	6400819	IdentifierDecl	* core = a -> core		6400808	0					
ANR	6400820	IdentifierDeclType	RCore *		6400808	0					
ANR	6400821	Identifier	core		6400808	1					
ANR	6400822	AssignmentExpression	* core = a -> core		6400808	2		=			
ANR	6400823	Identifier	core		6400808	0					
ANR	6400824	PtrMemberAccess	a -> core		6400808	1					
ANR	6400825	Identifier	a		6400808	0					
ANR	6400826	Identifier	core		6400808	1					
ANR	6400827	ExpressionStatement	r_cons_clear00 ( )	21:1:413:430	6400808	2	True				
ANR	6400828	CallExpression	r_cons_clear00 ( )		6400808	0					
ANR	6400829	Callee	r_cons_clear00		6400808	0					
ANR	6400830	Identifier	r_cons_clear00		6400808	0					
ANR	6400831	ArgumentList			6400808	1					
ANR	6400832	ExpressionStatement	"r_cons_printf ( ""Write some %s-%d assembly...\\n\\n"" , r_config_get ( a -> core -> config , ""asm.arch"" ) , r_config_get_i ( a -> core -> config , ""asm.bits"" ) )"	22:1:433:577	6400808	3	True				
ANR	6400833	CallExpression	"r_cons_printf ( ""Write some %s-%d assembly...\\n\\n"" , r_config_get ( a -> core -> config , ""asm.arch"" ) , r_config_get_i ( a -> core -> config , ""asm.bits"" ) )"		6400808	0					
ANR	6400834	Callee	r_cons_printf		6400808	0					
ANR	6400835	Identifier	r_cons_printf		6400808	0					
ANR	6400836	ArgumentList	"""Write some %s-%d assembly...\\n\\n"""		6400808	1					
ANR	6400837	Argument	"""Write some %s-%d assembly...\\n\\n"""		6400808	0					
ANR	6400838	PrimaryExpression	"""Write some %s-%d assembly...\\n\\n"""		6400808	0					
ANR	6400839	Argument	"r_config_get ( a -> core -> config , ""asm.arch"" )"		6400808	1					
ANR	6400840	CallExpression	"r_config_get ( a -> core -> config , ""asm.arch"" )"		6400808	0					
ANR	6400841	Callee	r_config_get		6400808	0					
ANR	6400842	Identifier	r_config_get		6400808	0					
ANR	6400843	ArgumentList	a -> core -> config		6400808	1					
ANR	6400844	Argument	a -> core -> config		6400808	0					
ANR	6400845	PtrMemberAccess	a -> core -> config		6400808	0					
ANR	6400846	PtrMemberAccess	a -> core		6400808	0					
ANR	6400847	Identifier	a		6400808	0					
ANR	6400848	Identifier	core		6400808	1					
ANR	6400849	Identifier	config		6400808	1					
ANR	6400850	Argument	"""asm.arch"""		6400808	1					
ANR	6400851	PrimaryExpression	"""asm.arch"""		6400808	0					
ANR	6400852	Argument	"r_config_get_i ( a -> core -> config , ""asm.bits"" )"		6400808	2					
ANR	6400853	CallExpression	"r_config_get_i ( a -> core -> config , ""asm.bits"" )"		6400808	0					
ANR	6400854	Callee	r_config_get_i		6400808	0					
ANR	6400855	Identifier	r_config_get_i		6400808	0					
ANR	6400856	ArgumentList	a -> core -> config		6400808	1					
ANR	6400857	Argument	a -> core -> config		6400808	0					
ANR	6400858	PtrMemberAccess	a -> core -> config		6400808	0					
ANR	6400859	PtrMemberAccess	a -> core		6400808	0					
ANR	6400860	Identifier	a		6400808	0					
ANR	6400861	Identifier	core		6400808	1					
ANR	6400862	Identifier	config		6400808	1					
ANR	6400863	Argument	"""asm.bits"""		6400808	1					
ANR	6400864	PrimaryExpression	"""asm.bits"""		6400808	0					
ANR	6400865	IfStatement	if ( * str == '?' )		6400808	4					
ANR	6400866	Condition	* str == '?'	25:5:584:594	6400808	0	True				
ANR	6400867	EqualityExpression	* str == '?'		6400808	0		==			
ANR	6400868	UnaryOperationExpression	* str		6400808	0					
ANR	6400869	UnaryOperator	*		6400808	0					
ANR	6400870	Identifier	str		6400808	1					
ANR	6400871	PrimaryExpression	'?'		6400808	1					
ANR	6400872	CompoundStatement		8:18:235:235	6400808	1					
ANR	6400873	Statement	r_cons_printf	26:2:601:613	6400808	0	True				
ANR	6400874	Statement	(	26:16:615:615	6400808	1	True				
ANR	6400875	Statement	"""0> ?\\n\\n"""	26:17:616:625	6400808	2	True				
ANR	6400876	Statement	"""Visual assembler help:\\n\\n"""	27:3:630:657	6400808	3	True				
ANR	6400877	Statement	"""  assemble input while typing using asm.arch, asm.bits and cfg.bigendian\\n"""	28:3:662:737	6400808	4	True				
ANR	6400878	Statement	"""  press enter to quit (prompt if there are bytes to be written)\\n"""	29:3:742:808	6400808	5	True				
ANR	6400879	Statement	"""  this assembler supports various directives like .hex ...\\n"""	30:3:813:874	6400808	6	True				
ANR	6400880	Statement	)	30:65:875:875	6400808	7	True				
ANR	6400881	ExpressionStatement		30:66:876:876	6400808	8	True				
ANR	6400882	ElseStatement	else		6400808	0					
ANR	6400883	CompoundStatement		14:8:524:524	6400808	0					
ANR	6400884	ExpressionStatement	r_asm_code_free ( a -> acode )	32:2:890:916	6400808	0	True				
ANR	6400885	CallExpression	r_asm_code_free ( a -> acode )		6400808	0					
ANR	6400886	Callee	r_asm_code_free		6400808	0					
ANR	6400887	Identifier	r_asm_code_free		6400808	0					
ANR	6400888	ArgumentList	a -> acode		6400808	1					
ANR	6400889	Argument	a -> acode		6400808	0					
ANR	6400890	PtrMemberAccess	a -> acode		6400808	0					
ANR	6400891	Identifier	a		6400808	0					
ANR	6400892	Identifier	acode		6400808	1					
ANR	6400893	ExpressionStatement	"r_asm_set_pc ( a -> core -> assembler , a -> off )"	33:2:920:961	6400808	1	True				
ANR	6400894	CallExpression	"r_asm_set_pc ( a -> core -> assembler , a -> off )"		6400808	0					
ANR	6400895	Callee	r_asm_set_pc		6400808	0					
ANR	6400896	Identifier	r_asm_set_pc		6400808	0					
ANR	6400897	ArgumentList	a -> core -> assembler		6400808	1					
ANR	6400898	Argument	a -> core -> assembler		6400808	0					
ANR	6400899	PtrMemberAccess	a -> core -> assembler		6400808	0					
ANR	6400900	PtrMemberAccess	a -> core		6400808	0					
ANR	6400901	Identifier	a		6400808	0					
ANR	6400902	Identifier	core		6400808	1					
ANR	6400903	Identifier	assembler		6400808	1					
ANR	6400904	Argument	a -> off		6400808	1					
ANR	6400905	PtrMemberAccess	a -> off		6400808	0					
ANR	6400906	Identifier	a		6400808	0					
ANR	6400907	Identifier	off		6400808	1					
ANR	6400908	ExpressionStatement	"a -> acode = r_asm_massemble ( a -> core -> assembler , str )"	34:2:965:1017	6400808	2	True				
ANR	6400909	AssignmentExpression	"a -> acode = r_asm_massemble ( a -> core -> assembler , str )"		6400808	0		=			
ANR	6400910	PtrMemberAccess	a -> acode		6400808	0					
ANR	6400911	Identifier	a		6400808	0					
ANR	6400912	Identifier	acode		6400808	1					
ANR	6400913	CallExpression	"r_asm_massemble ( a -> core -> assembler , str )"		6400808	1					
ANR	6400914	Callee	r_asm_massemble		6400808	0					
ANR	6400915	Identifier	r_asm_massemble		6400808	0					
ANR	6400916	ArgumentList	a -> core -> assembler		6400808	1					
ANR	6400917	Argument	a -> core -> assembler		6400808	0					
ANR	6400918	PtrMemberAccess	a -> core -> assembler		6400808	0					
ANR	6400919	PtrMemberAccess	a -> core		6400808	0					
ANR	6400920	Identifier	a		6400808	0					
ANR	6400921	Identifier	core		6400808	1					
ANR	6400922	Identifier	assembler		6400808	1					
ANR	6400923	Argument	str		6400808	1					
ANR	6400924	Identifier	str		6400808	0					
ANR	6400925	IfStatement	if ( a -> acode )		6400808	3					
ANR	6400926	Condition	a -> acode	35:6:1025:1032	6400808	0	True				
ANR	6400927	PtrMemberAccess	a -> acode		6400808	0					
ANR	6400928	Identifier	a		6400808	0					
ANR	6400929	Identifier	acode		6400808	1					
ANR	6400930	CompoundStatement		26:3:910:967	6400808	1					
ANR	6400931	IdentifierDeclStatement	char * hex = r_asm_code_get_hex ( a -> acode ) ;	36:3:1040:1081	6400808	0	True				
ANR	6400932	IdentifierDecl	* hex = r_asm_code_get_hex ( a -> acode )		6400808	0					
ANR	6400933	IdentifierDeclType	char *		6400808	0					
ANR	6400934	Identifier	hex		6400808	1					
ANR	6400935	AssignmentExpression	* hex = r_asm_code_get_hex ( a -> acode )		6400808	2		=			
ANR	6400936	Identifier	hex		6400808	0					
ANR	6400937	CallExpression	r_asm_code_get_hex ( a -> acode )		6400808	1					
ANR	6400938	Callee	r_asm_code_get_hex		6400808	0					
ANR	6400939	Identifier	r_asm_code_get_hex		6400808	0					
ANR	6400940	ArgumentList	a -> acode		6400808	1					
ANR	6400941	Argument	a -> acode		6400808	0					
ANR	6400942	PtrMemberAccess	a -> acode		6400808	0					
ANR	6400943	Identifier	a		6400808	0					
ANR	6400944	Identifier	acode		6400808	1					
ANR	6400945	ExpressionStatement	"r_cons_printf ( ""[VA:%d]> %s\\n"" , a -> acode ? a -> acode -> len : 0 , str )"	37:3:1086:1150	6400808	1	True				
ANR	6400946	CallExpression	"r_cons_printf ( ""[VA:%d]> %s\\n"" , a -> acode ? a -> acode -> len : 0 , str )"		6400808	0					
ANR	6400947	Callee	r_cons_printf		6400808	0					
ANR	6400948	Identifier	r_cons_printf		6400808	0					
ANR	6400949	ArgumentList	"""[VA:%d]> %s\\n"""		6400808	1					
ANR	6400950	Argument	"""[VA:%d]> %s\\n"""		6400808	0					
ANR	6400951	PrimaryExpression	"""[VA:%d]> %s\\n"""		6400808	0					
ANR	6400952	Argument	a -> acode ? a -> acode -> len : 0		6400808	1					
ANR	6400953	ConditionalExpression	a -> acode ? a -> acode -> len : 0		6400808	0					
ANR	6400954	Condition	a -> acode		6400808	0					
ANR	6400955	PtrMemberAccess	a -> acode		6400808	0					
ANR	6400956	Identifier	a		6400808	0					
ANR	6400957	Identifier	acode		6400808	1					
ANR	6400958	PtrMemberAccess	a -> acode -> len		6400808	1					
ANR	6400959	PtrMemberAccess	a -> acode		6400808	0					
ANR	6400960	Identifier	a		6400808	0					
ANR	6400961	Identifier	acode		6400808	1					
ANR	6400962	Identifier	len		6400808	1					
ANR	6400963	PrimaryExpression	0		6400808	2					
ANR	6400964	Argument	str		6400808	2					
ANR	6400965	Identifier	str		6400808	0					
ANR	6400966	IfStatement	if ( a -> acode && a -> acode -> len )		6400808	2					
ANR	6400967	Condition	a -> acode && a -> acode -> len	38:7:1159:1183	6400808	0	True				
ANR	6400968	AndExpression	a -> acode && a -> acode -> len		6400808	0		&&			
ANR	6400969	PtrMemberAccess	a -> acode		6400808	0					
ANR	6400970	Identifier	a		6400808	0					
ANR	6400971	Identifier	acode		6400808	1					
ANR	6400972	PtrMemberAccess	a -> acode -> len		6400808	1					
ANR	6400973	PtrMemberAccess	a -> acode		6400808	0					
ANR	6400974	Identifier	a		6400808	0					
ANR	6400975	Identifier	acode		6400808	1					
ANR	6400976	Identifier	len		6400808	1					
ANR	6400977	CompoundStatement		21:34:824:824	6400808	1					
ANR	6400978	ExpressionStatement	"r_cons_printf ( ""* %s\\n\\n"" , hex )"	39:4:1192:1223	6400808	0	True				
ANR	6400979	CallExpression	"r_cons_printf ( ""* %s\\n\\n"" , hex )"		6400808	0					
ANR	6400980	Callee	r_cons_printf		6400808	0					
ANR	6400981	Identifier	r_cons_printf		6400808	0					
ANR	6400982	ArgumentList	"""* %s\\n\\n"""		6400808	1					
ANR	6400983	Argument	"""* %s\\n\\n"""		6400808	0					
ANR	6400984	PrimaryExpression	"""* %s\\n\\n"""		6400808	0					
ANR	6400985	Argument	hex		6400808	1					
ANR	6400986	Identifier	hex		6400808	0					
ANR	6400987	ElseStatement	else		6400808	0					
ANR	6400988	CompoundStatement		23:10:873:873	6400808	0					
ANR	6400989	ExpressionStatement	"r_cons_print ( ""\\n\\n"" )"	41:4:1241:1262	6400808	0	True				
ANR	6400990	CallExpression	"r_cons_print ( ""\\n\\n"" )"		6400808	0					
ANR	6400991	Callee	r_cons_print		6400808	0					
ANR	6400992	Identifier	r_cons_print		6400808	0					
ANR	6400993	ArgumentList	"""\\n\\n"""		6400808	1					
ANR	6400994	Argument	"""\\n\\n"""		6400808	0					
ANR	6400995	PrimaryExpression	"""\\n\\n"""		6400808	0					
ANR	6400996	IdentifierDeclStatement	"int xlen = R_MIN ( strlen ( hex ) , R_VISUAL_ASM_BUFSIZE - 2 ) ;"	43:3:1272:1329	6400808	3	True				
ANR	6400997	IdentifierDecl	"xlen = R_MIN ( strlen ( hex ) , R_VISUAL_ASM_BUFSIZE - 2 )"		6400808	0					
ANR	6400998	IdentifierDeclType	int		6400808	0					
ANR	6400999	Identifier	xlen		6400808	1					
ANR	6401000	AssignmentExpression	"xlen = R_MIN ( strlen ( hex ) , R_VISUAL_ASM_BUFSIZE - 2 )"		6400808	2		=			
ANR	6401001	Identifier	xlen		6400808	0					
ANR	6401002	CallExpression	"R_MIN ( strlen ( hex ) , R_VISUAL_ASM_BUFSIZE - 2 )"		6400808	1					
ANR	6401003	Callee	R_MIN		6400808	0					
ANR	6401004	Identifier	R_MIN		6400808	0					
ANR	6401005	ArgumentList	strlen ( hex )		6400808	1					
ANR	6401006	Argument	strlen ( hex )		6400808	0					
ANR	6401007	CallExpression	strlen ( hex )		6400808	0					
ANR	6401008	Callee	strlen		6400808	0					
ANR	6401009	Identifier	strlen		6400808	0					
ANR	6401010	ArgumentList	hex		6400808	1					
ANR	6401011	Argument	hex		6400808	0					
ANR	6401012	Identifier	hex		6400808	0					
ANR	6401013	Argument	R_VISUAL_ASM_BUFSIZE - 2		6400808	1					
ANR	6401014	AdditiveExpression	R_VISUAL_ASM_BUFSIZE - 2		6400808	0		-			
ANR	6401015	Identifier	R_VISUAL_ASM_BUFSIZE		6400808	0					
ANR	6401016	PrimaryExpression	2		6400808	1					
ANR	6401017	ExpressionStatement	"strcpy ( a -> codebuf , a -> blockbuf )"	44:3:1334:1366	6400808	4	True				
ANR	6401018	CallExpression	"strcpy ( a -> codebuf , a -> blockbuf )"		6400808	0					
ANR	6401019	Callee	strcpy		6400808	0					
ANR	6401020	Identifier	strcpy		6400808	0					
ANR	6401021	ArgumentList	a -> codebuf		6400808	1					
ANR	6401022	Argument	a -> codebuf		6400808	0					
ANR	6401023	PtrMemberAccess	a -> codebuf		6400808	0					
ANR	6401024	Identifier	a		6400808	0					
ANR	6401025	Identifier	codebuf		6400808	1					
ANR	6401026	Argument	a -> blockbuf		6400808	1					
ANR	6401027	PtrMemberAccess	a -> blockbuf		6400808	0					
ANR	6401028	Identifier	a		6400808	0					
ANR	6401029	Identifier	blockbuf		6400808	1					
ANR	6401030	ExpressionStatement	"memcpy ( a -> codebuf , hex , xlen )"	45:3:1371:1401	6400808	5	True				
ANR	6401031	CallExpression	"memcpy ( a -> codebuf , hex , xlen )"		6400808	0					
ANR	6401032	Callee	memcpy		6400808	0					
ANR	6401033	Identifier	memcpy		6400808	0					
ANR	6401034	ArgumentList	a -> codebuf		6400808	1					
ANR	6401035	Argument	a -> codebuf		6400808	0					
ANR	6401036	PtrMemberAccess	a -> codebuf		6400808	0					
ANR	6401037	Identifier	a		6400808	0					
ANR	6401038	Identifier	codebuf		6400808	1					
ANR	6401039	Argument	hex		6400808	1					
ANR	6401040	Identifier	hex		6400808	0					
ANR	6401041	Argument	xlen		6400808	2					
ANR	6401042	Identifier	xlen		6400808	0					
ANR	6401043	IfStatement	if ( xlen >= strlen ( a -> blockbuf ) )		6400808	6					
ANR	6401044	Condition	xlen >= strlen ( a -> blockbuf )	46:7:1410:1437	6400808	0	True				
ANR	6401045	RelationalExpression	xlen >= strlen ( a -> blockbuf )		6400808	0		>=			
ANR	6401046	Identifier	xlen		6400808	0					
ANR	6401047	CallExpression	strlen ( a -> blockbuf )		6400808	1					
ANR	6401048	Callee	strlen		6400808	0					
ANR	6401049	Identifier	strlen		6400808	0					
ANR	6401050	ArgumentList	a -> blockbuf		6400808	1					
ANR	6401051	Argument	a -> blockbuf		6400808	0					
ANR	6401052	PtrMemberAccess	a -> blockbuf		6400808	0					
ANR	6401053	Identifier	a		6400808	0					
ANR	6401054	Identifier	blockbuf		6400808	1					
ANR	6401055	CompoundStatement		29:37:1078:1078	6400808	1					
ANR	6401056	ExpressionStatement	a -> codebuf [ xlen ] = '\\0'	47:4:1446:1469	6400808	0	True				
ANR	6401057	AssignmentExpression	a -> codebuf [ xlen ] = '\\0'		6400808	0		=			
ANR	6401058	ArrayIndexing	a -> codebuf [ xlen ]		6400808	0					
ANR	6401059	PtrMemberAccess	a -> codebuf		6400808	0					
ANR	6401060	Identifier	a		6400808	0					
ANR	6401061	Identifier	codebuf		6400808	1					
ANR	6401062	Identifier	xlen		6400808	1					
ANR	6401063	PrimaryExpression	'\\0'		6400808	1					
ANR	6401064	ExpressionStatement	free ( hex )	49:3:1479:1489	6400808	7	True				
ANR	6401065	CallExpression	free ( hex )		6400808	0					
ANR	6401066	Callee	free		6400808	0					
ANR	6401067	Identifier	free		6400808	0					
ANR	6401068	ArgumentList	hex		6400808	1					
ANR	6401069	Argument	hex		6400808	0					
ANR	6401070	Identifier	hex		6400808	0					
ANR	6401071	ElseStatement	else		6400808	0					
ANR	6401072	CompoundStatement		33:9:1138:1138	6400808	0					
ANR	6401073	ExpressionStatement	"r_cons_printf ( ""[VA:0]> %s\\n* ?\\n\\n"" , str )"	51:3:1505:1547	6400808	0	True				
ANR	6401074	CallExpression	"r_cons_printf ( ""[VA:0]> %s\\n* ?\\n\\n"" , str )"		6400808	0					
ANR	6401075	Callee	r_cons_printf		6400808	0					
ANR	6401076	Identifier	r_cons_printf		6400808	0					
ANR	6401077	ArgumentList	"""[VA:0]> %s\\n* ?\\n\\n"""		6400808	1					
ANR	6401078	Argument	"""[VA:0]> %s\\n* ?\\n\\n"""		6400808	0					
ANR	6401079	PrimaryExpression	"""[VA:0]> %s\\n* ?\\n\\n"""		6400808	0					
ANR	6401080	Argument	str		6400808	1					
ANR	6401081	Identifier	str		6400808	0					
ANR	6401082	CompoundStatement		44:3:1519:1577	6400808	4					
ANR	6401083	IdentifierDeclStatement	int rows = 0 ;	54:3:1560:1572	6400808	0	True				
ANR	6401084	IdentifierDecl	rows = 0		6400808	0					
ANR	6401085	IdentifierDeclType	int		6400808	0					
ANR	6401086	Identifier	rows		6400808	1					
ANR	6401087	AssignmentExpression	rows = 0		6400808	2		=			
ANR	6401088	Identifier	rows		6400808	0					
ANR	6401089	PrimaryExpression	0		6400808	1					
ANR	6401090	IdentifierDeclStatement	int cols = r_cons_get_size ( & rows ) ;	55:3:1577:1611	6400808	1	True				
ANR	6401091	IdentifierDecl	cols = r_cons_get_size ( & rows )		6400808	0					
ANR	6401092	IdentifierDeclType	int		6400808	0					
ANR	6401093	Identifier	cols		6400808	1					
ANR	6401094	AssignmentExpression	cols = r_cons_get_size ( & rows )		6400808	2		=			
ANR	6401095	Identifier	cols		6400808	0					
ANR	6401096	CallExpression	r_cons_get_size ( & rows )		6400808	1					
ANR	6401097	Callee	r_cons_get_size		6400808	0					
ANR	6401098	Identifier	r_cons_get_size		6400808	0					
ANR	6401099	ArgumentList	& rows		6400808	1					
ANR	6401100	Argument	& rows		6400808	0					
ANR	6401101	UnaryOperationExpression	& rows		6400808	0					
ANR	6401102	UnaryOperator	&		6400808	0					
ANR	6401103	Identifier	rows		6400808	1					
ANR	6401104	ExpressionStatement	core -> print -> cur_enabled = 1	56:3:1616:1644	6400808	2	True				
ANR	6401105	AssignmentExpression	core -> print -> cur_enabled = 1		6400808	0		=			
ANR	6401106	PtrMemberAccess	core -> print -> cur_enabled		6400808	0					
ANR	6401107	PtrMemberAccess	core -> print		6400808	0					
ANR	6401108	Identifier	core		6400808	0					
ANR	6401109	Identifier	print		6400808	1					
ANR	6401110	Identifier	cur_enabled		6400808	1					
ANR	6401111	PrimaryExpression	1		6400808	1					
ANR	6401112	ExpressionStatement	core -> print -> ocur = 0	57:3:1649:1670	6400808	3	True				
ANR	6401113	AssignmentExpression	core -> print -> ocur = 0		6400808	0		=			
ANR	6401114	PtrMemberAccess	core -> print -> ocur		6400808	0					
ANR	6401115	PtrMemberAccess	core -> print		6400808	0					
ANR	6401116	Identifier	core		6400808	0					
ANR	6401117	Identifier	print		6400808	1					
ANR	6401118	Identifier	ocur		6400808	1					
ANR	6401119	PrimaryExpression	0		6400808	1					
ANR	6401120	ExpressionStatement	core -> print -> cur = ( a -> acode && a -> acode -> len ) ? a -> acode -> len - 1 : 0	58:3:1675:1744	6400808	4	True				
ANR	6401121	AssignmentExpression	core -> print -> cur = ( a -> acode && a -> acode -> len ) ? a -> acode -> len - 1 : 0		6400808	0		=			
ANR	6401122	PtrMemberAccess	core -> print -> cur		6400808	0					
ANR	6401123	PtrMemberAccess	core -> print		6400808	0					
ANR	6401124	Identifier	core		6400808	0					
ANR	6401125	Identifier	print		6400808	1					
ANR	6401126	Identifier	cur		6400808	1					
ANR	6401127	ConditionalExpression	( a -> acode && a -> acode -> len ) ? a -> acode -> len - 1 : 0		6400808	1					
ANR	6401128	Condition	a -> acode && a -> acode -> len		6400808	0					
ANR	6401129	AndExpression	a -> acode && a -> acode -> len		6400808	0		&&			
ANR	6401130	PtrMemberAccess	a -> acode		6400808	0					
ANR	6401131	Identifier	a		6400808	0					
ANR	6401132	Identifier	acode		6400808	1					
ANR	6401133	PtrMemberAccess	a -> acode -> len		6400808	1					
ANR	6401134	PtrMemberAccess	a -> acode		6400808	0					
ANR	6401135	Identifier	a		6400808	0					
ANR	6401136	Identifier	acode		6400808	1					
ANR	6401137	Identifier	len		6400808	1					
ANR	6401138	AdditiveExpression	a -> acode -> len - 1		6400808	1		-			
ANR	6401139	PtrMemberAccess	a -> acode -> len		6400808	0					
ANR	6401140	PtrMemberAccess	a -> acode		6400808	0					
ANR	6401141	Identifier	a		6400808	0					
ANR	6401142	Identifier	acode		6400808	1					
ANR	6401143	Identifier	len		6400808	1					
ANR	6401144	PrimaryExpression	1		6400808	1					
ANR	6401145	PrimaryExpression	0		6400808	2					
ANR	6401146	Statement	char	59:3:1749:1752	6400808	5	True				
ANR	6401147	Statement	*	59:8:1754:1754	6400808	6	True				
ANR	6401148	Statement	cmd	59:9:1755:1757	6400808	7	True				
ANR	6401149	Statement	=	59:13:1759:1759	6400808	8	True				
ANR	6401150	Statement	r_str_newf	59:15:1761:1770	6400808	9	True				
ANR	6401151	Statement	(	59:26:1772:1772	6400808	10	True				
ANR	6401152	Statement	"""pd %d @x:%s @0x%"""	59:27:1773:1790	6400808	11	True				
ANR	6401153	Statement	PFMT64x	59:45:1791:1797	6400808	12	True				
ANR	6401154	Statement	","	59:52:1798:1798	6400808	13	True				
ANR	6401155	Statement	rows	59:54:1800:1803	6400808	14	True				
ANR	6401156	Statement	-	59:59:1805:1805	6400808	15	True				
ANR	6401157	Statement	11	59:61:1807:1808	6400808	16	True				
ANR	6401158	Statement	","	59:63:1809:1809	6400808	17	True				
ANR	6401159	Statement	a	59:65:1811:1811	6400808	18	True				
ANR	6401160	Statement	->	59:66:1812:1813	6400808	19	True				
ANR	6401161	Statement	codebuf	59:68:1814:1820	6400808	20	True				
ANR	6401162	Statement	","	59:75:1821:1821	6400808	21	True				
ANR	6401163	Statement	a	59:77:1823:1823	6400808	22	True				
ANR	6401164	Statement	->	59:78:1824:1825	6400808	23	True				
ANR	6401165	Statement	off	59:80:1826:1828	6400808	24	True				
ANR	6401166	Statement	)	59:83:1829:1829	6400808	25	True				
ANR	6401167	ExpressionStatement		59:84:1830:1830	6400808	26	True				
ANR	6401168	IdentifierDeclStatement	"char * res = r_core_cmd_str ( a -> core , cmd ) ;"	60:3:1835:1876	6400808	27	True				
ANR	6401169	IdentifierDecl	"* res = r_core_cmd_str ( a -> core , cmd )"		6400808	0					
ANR	6401170	IdentifierDeclType	char *		6400808	0					
ANR	6401171	Identifier	res		6400808	1					
ANR	6401172	AssignmentExpression	"* res = r_core_cmd_str ( a -> core , cmd )"		6400808	2		=			
ANR	6401173	Identifier	res		6400808	0					
ANR	6401174	CallExpression	"r_core_cmd_str ( a -> core , cmd )"		6400808	1					
ANR	6401175	Callee	r_core_cmd_str		6400808	0					
ANR	6401176	Identifier	r_core_cmd_str		6400808	0					
ANR	6401177	ArgumentList	a -> core		6400808	1					
ANR	6401178	Argument	a -> core		6400808	0					
ANR	6401179	PtrMemberAccess	a -> core		6400808	0					
ANR	6401180	Identifier	a		6400808	0					
ANR	6401181	Identifier	core		6400808	1					
ANR	6401182	Argument	cmd		6400808	1					
ANR	6401183	Identifier	cmd		6400808	0					
ANR	6401184	IdentifierDeclStatement	"char * msg = r_str_ansi_crop ( res , 0 , 0 , cols - 2 , rows - 5 ) ;"	61:3:1881:1939	6400808	28	True				
ANR	6401185	IdentifierDecl	"* msg = r_str_ansi_crop ( res , 0 , 0 , cols - 2 , rows - 5 )"		6400808	0					
ANR	6401186	IdentifierDeclType	char *		6400808	0					
ANR	6401187	Identifier	msg		6400808	1					
ANR	6401188	AssignmentExpression	"* msg = r_str_ansi_crop ( res , 0 , 0 , cols - 2 , rows - 5 )"		6400808	2		=			
ANR	6401189	Identifier	msg		6400808	0					
ANR	6401190	CallExpression	"r_str_ansi_crop ( res , 0 , 0 , cols - 2 , rows - 5 )"		6400808	1					
ANR	6401191	Callee	r_str_ansi_crop		6400808	0					
ANR	6401192	Identifier	r_str_ansi_crop		6400808	0					
ANR	6401193	ArgumentList	res		6400808	1					
ANR	6401194	Argument	res		6400808	0					
ANR	6401195	Identifier	res		6400808	0					
ANR	6401196	Argument	0		6400808	1					
ANR	6401197	PrimaryExpression	0		6400808	0					
ANR	6401198	Argument	0		6400808	2					
ANR	6401199	PrimaryExpression	0		6400808	0					
ANR	6401200	Argument	cols - 2		6400808	3					
ANR	6401201	AdditiveExpression	cols - 2		6400808	0		-			
ANR	6401202	Identifier	cols		6400808	0					
ANR	6401203	PrimaryExpression	2		6400808	1					
ANR	6401204	Argument	rows - 5		6400808	4					
ANR	6401205	AdditiveExpression	rows - 5		6400808	0		-			
ANR	6401206	Identifier	rows		6400808	0					
ANR	6401207	PrimaryExpression	5		6400808	1					
ANR	6401208	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , msg )"	62:3:1944:1971	6400808	29	True				
ANR	6401209	CallExpression	"r_cons_printf ( ""%s\\n"" , msg )"		6400808	0					
ANR	6401210	Callee	r_cons_printf		6400808	0					
ANR	6401211	Identifier	r_cons_printf		6400808	0					
ANR	6401212	ArgumentList	"""%s\\n"""		6400808	1					
ANR	6401213	Argument	"""%s\\n"""		6400808	0					
ANR	6401214	PrimaryExpression	"""%s\\n"""		6400808	0					
ANR	6401215	Argument	msg		6400808	1					
ANR	6401216	Identifier	msg		6400808	0					
ANR	6401217	ExpressionStatement	free ( msg )	63:3:1976:1986	6400808	30	True				
ANR	6401218	CallExpression	free ( msg )		6400808	0					
ANR	6401219	Callee	free		6400808	0					
ANR	6401220	Identifier	free		6400808	0					
ANR	6401221	ArgumentList	msg		6400808	1					
ANR	6401222	Argument	msg		6400808	0					
ANR	6401223	Identifier	msg		6400808	0					
ANR	6401224	ExpressionStatement	free ( res )	64:3:1991:2001	6400808	31	True				
ANR	6401225	CallExpression	free ( res )		6400808	0					
ANR	6401226	Callee	free		6400808	0					
ANR	6401227	Identifier	free		6400808	0					
ANR	6401228	ArgumentList	res		6400808	1					
ANR	6401229	Argument	res		6400808	0					
ANR	6401230	Identifier	res		6400808	0					
ANR	6401231	ExpressionStatement	free ( cmd )	65:3:2006:2016	6400808	32	True				
ANR	6401232	CallExpression	free ( cmd )		6400808	0					
ANR	6401233	Callee	free		6400808	0					
ANR	6401234	Identifier	free		6400808	0					
ANR	6401235	ArgumentList	cmd		6400808	1					
ANR	6401236	Argument	cmd		6400808	0					
ANR	6401237	Identifier	cmd		6400808	0					
ANR	6401238	ExpressionStatement	r_cons_flush ( )	68:1:2026:2041	6400808	5	True				
ANR	6401239	CallExpression	r_cons_flush ( )		6400808	0					
ANR	6401240	Callee	r_cons_flush		6400808	0					
ANR	6401241	Identifier	r_cons_flush		6400808	0					
ANR	6401242	ArgumentList			6400808	1					
ANR	6401243	ReturnStatement	return 1 ;	69:1:2044:2052	6400808	6	True				
ANR	6401244	PrimaryExpression	1		6400808	0					
ANR	6401245	ReturnType	static int		6400808	1					
ANR	6401246	Identifier	readline_callback		6400808	2					
ANR	6401247	ParameterList	"void * _a , const char * str"		6400808	3					
ANR	6401248	Parameter	void * _a	18:29:334:341	6400808	0	True				
ANR	6401249	ParameterType	void *		6400808	0					
ANR	6401250	Identifier	_a		6400808	1					
ANR	6401251	Parameter	const char * str	18:39:344:358	6400808	1	True				
ANR	6401252	ParameterType	const char *		6400808	0					
ANR	6401253	Identifier	str		6400808	1					
ANR	6401254	CFGEntryNode	ENTRY		6400808		True				
ANR	6401255	CFGExitNode	EXIT		6400808		True				
ANR	6401256	Symbol	msg		6400808						
ANR	6401257	Symbol	a -> off		6400808						
ANR	6401258	Symbol	& rows		6400808						
ANR	6401259	Symbol	r_core_cmd_str		6400808						
ANR	6401260	Symbol	* a -> core		6400808						
ANR	6401261	Symbol	R_VISUAL_ASM_BUFSIZE		6400808						
ANR	6401262	Symbol	r_config_get		6400808						
ANR	6401263	Symbol	* core		6400808						
ANR	6401264	Symbol	strlen		6400808						
ANR	6401265	Symbol	core -> print -> ocur		6400808						
ANR	6401266	Symbol	r_asm_massemble		6400808						
ANR	6401267	Symbol	r_str_ansi_crop		6400808						
ANR	6401268	Symbol	a -> core -> assembler		6400808						
ANR	6401269	Symbol	hex		6400808						
ANR	6401270	Symbol	* str		6400808						
ANR	6401271	Symbol	r_asm_code_get_hex		6400808						
ANR	6401272	Symbol	cols		6400808						
ANR	6401273	Symbol	a -> blockbuf		6400808						
ANR	6401274	Symbol	* * core		6400808						
ANR	6401275	Symbol	a		6400808						
ANR	6401276	Symbol	* a -> acode		6400808						
ANR	6401277	Symbol	res		6400808						
ANR	6401278	Symbol	_a		6400808						
ANR	6401279	Symbol	* a -> codebuf		6400808						
ANR	6401280	Symbol	a -> core		6400808						
ANR	6401281	Symbol	xlen		6400808						
ANR	6401282	Symbol	r_cons_get_size		6400808						
ANR	6401283	Symbol	a -> acode		6400808						
ANR	6401284	Symbol	* * a		6400808						
ANR	6401285	Symbol	R_MIN		6400808						
ANR	6401286	Symbol	* a		6400808						
ANR	6401287	Symbol	rows		6400808						
ANR	6401288	Symbol	str		6400808						
ANR	6401289	Symbol	a -> acode -> len		6400808						
ANR	6401290	Symbol	core		6400808						
ANR	6401291	Symbol	* core -> print		6400808						
ANR	6401292	Symbol	core -> print -> cur		6400808						
ANR	6401293	Symbol	* xlen		6400808						
ANR	6401294	Symbol	r_config_get_i		6400808						
ANR	6401295	Symbol	a -> core -> config		6400808						
ANR	6401296	Symbol	cmd		6400808						
ANR	6401297	Symbol	a -> codebuf		6400808						
ANR	6401298	Symbol	core -> print		6400808						
ANR	6401299	Symbol	core -> print -> cur_enabled		6400808						
ANR	6401300	Function	r_core_visual_asm	72:0:2057:2902							
ANR	6401301	FunctionDef	"r_core_visual_asm (RCore * core , ut64 off)"		6401300	0					
ANR	6401302	CompoundStatement		72:52:2109:2902	6401300	0					
ANR	6401303	Statement	RCoreVisualAsm	73:1:2112:2125	6401300	0	True				
ANR	6401304	Statement	cva	73:16:2127:2129	6401300	1	True				
ANR	6401305	Statement	=	73:20:2131:2131	6401300	2	True				
ANR	6401306	CompoundStatement		2:22:23:23	6401300	3					
ANR	6401307	Statement	.	74:2:2137:2137	6401300	0	True				
ANR	6401308	Statement	core	74:3:2138:2141	6401300	1	True				
ANR	6401309	Statement	=	74:8:2143:2143	6401300	2	True				
ANR	6401310	Statement	core	74:10:2145:2148	6401300	3	True				
ANR	6401311	Statement	","	74:14:2149:2149	6401300	4	True				
ANR	6401312	Statement	.	75:2:2153:2153	6401300	5	True				
ANR	6401313	Statement	off	75:3:2154:2156	6401300	6	True				
ANR	6401314	Statement	=	75:7:2158:2158	6401300	7	True				
ANR	6401315	Statement	off	75:9:2160:2162	6401300	8	True				
ANR	6401316	ExpressionStatement		76:2:2166:2166	6401300	4	True				
ANR	6401317	ExpressionStatement	"r_io_read_at ( core -> io , off , cva . buf , sizeof ( cva . buf ) )"	77:1:2169:2224	6401300	5	True				
ANR	6401318	CallExpression	"r_io_read_at ( core -> io , off , cva . buf , sizeof ( cva . buf ) )"		6401300	0					
ANR	6401319	Callee	r_io_read_at		6401300	0					
ANR	6401320	Identifier	r_io_read_at		6401300	0					
ANR	6401321	ArgumentList	core -> io		6401300	1					
ANR	6401322	Argument	core -> io		6401300	0					
ANR	6401323	PtrMemberAccess	core -> io		6401300	0					
ANR	6401324	Identifier	core		6401300	0					
ANR	6401325	Identifier	io		6401300	1					
ANR	6401326	Argument	off		6401300	1					
ANR	6401327	Identifier	off		6401300	0					
ANR	6401328	Argument	cva . buf		6401300	2					
ANR	6401329	MemberAccess	cva . buf		6401300	0					
ANR	6401330	Identifier	cva		6401300	0					
ANR	6401331	Identifier	buf		6401300	1					
ANR	6401332	Argument	sizeof ( cva . buf )		6401300	3					
ANR	6401333	SizeofExpression	sizeof ( cva . buf )		6401300	0					
ANR	6401334	Sizeof	sizeof		6401300	0					
ANR	6401335	MemberAccess	cva . buf		6401300	1					
ANR	6401336	Identifier	cva		6401300	0					
ANR	6401337	Identifier	buf		6401300	1					
ANR	6401338	ExpressionStatement	"cva . blocklen = r_hex_bin2str ( cva . buf , sizeof ( cva . buf ) , cva . blockbuf )"	78:1:2227:2297	6401300	6	True				
ANR	6401339	AssignmentExpression	"cva . blocklen = r_hex_bin2str ( cva . buf , sizeof ( cva . buf ) , cva . blockbuf )"		6401300	0		=			
ANR	6401340	MemberAccess	cva . blocklen		6401300	0					
ANR	6401341	Identifier	cva		6401300	0					
ANR	6401342	Identifier	blocklen		6401300	1					
ANR	6401343	CallExpression	"r_hex_bin2str ( cva . buf , sizeof ( cva . buf ) , cva . blockbuf )"		6401300	1					
ANR	6401344	Callee	r_hex_bin2str		6401300	0					
ANR	6401345	Identifier	r_hex_bin2str		6401300	0					
ANR	6401346	ArgumentList	cva . buf		6401300	1					
ANR	6401347	Argument	cva . buf		6401300	0					
ANR	6401348	MemberAccess	cva . buf		6401300	0					
ANR	6401349	Identifier	cva		6401300	0					
ANR	6401350	Identifier	buf		6401300	1					
ANR	6401351	Argument	sizeof ( cva . buf )		6401300	1					
ANR	6401352	SizeofExpression	sizeof ( cva . buf )		6401300	0					
ANR	6401353	Sizeof	sizeof		6401300	0					
ANR	6401354	MemberAccess	cva . buf		6401300	1					
ANR	6401355	Identifier	cva		6401300	0					
ANR	6401356	Identifier	buf		6401300	1					
ANR	6401357	Argument	cva . blockbuf		6401300	2					
ANR	6401358	MemberAccess	cva . blockbuf		6401300	0					
ANR	6401359	Identifier	cva		6401300	0					
ANR	6401360	Identifier	blockbuf		6401300	1					
ANR	6401361	ExpressionStatement	"r_line_readline_cb ( readline_callback , & cva )"	80:1:2301:2345	6401300	7	True				
ANR	6401362	CallExpression	"r_line_readline_cb ( readline_callback , & cva )"		6401300	0					
ANR	6401363	Callee	r_line_readline_cb		6401300	0					
ANR	6401364	Identifier	r_line_readline_cb		6401300	0					
ANR	6401365	ArgumentList	readline_callback		6401300	1					
ANR	6401366	Argument	readline_callback		6401300	0					
ANR	6401367	Identifier	readline_callback		6401300	0					
ANR	6401368	Argument	& cva		6401300	1					
ANR	6401369	UnaryOperationExpression	& cva		6401300	0					
ANR	6401370	UnaryOperator	&		6401300	0					
ANR	6401371	Identifier	cva		6401300	1					
ANR	6401372	IfStatement	if ( cva . acode && cva . acode -> len > 0 )		6401300	8					
ANR	6401373	Condition	cva . acode && cva . acode -> len > 0	82:5:2353:2383	6401300	0	True				
ANR	6401374	AndExpression	cva . acode && cva . acode -> len > 0		6401300	0		&&			
ANR	6401375	MemberAccess	cva . acode		6401300	0					
ANR	6401376	Identifier	cva		6401300	0					
ANR	6401377	Identifier	acode		6401300	1					
ANR	6401378	RelationalExpression	cva . acode -> len > 0		6401300	1		>			
ANR	6401379	PtrMemberAccess	cva . acode -> len		6401300	0					
ANR	6401380	MemberAccess	cva . acode		6401300	0					
ANR	6401381	Identifier	cva		6401300	0					
ANR	6401382	Identifier	acode		6401300	1					
ANR	6401383	Identifier	len		6401300	1					
ANR	6401384	PrimaryExpression	0		6401300	1					
ANR	6401385	CompoundStatement		11:38:276:276	6401300	1					
ANR	6401386	IfStatement	"if ( r_cons_yesno ( 'y' , ""Save changes? (Y/n)"" ) )"		6401300	0					
ANR	6401387	Condition	"r_cons_yesno ( 'y' , ""Save changes? (Y/n)"" )"	83:6:2394:2434	6401300	0	True				
ANR	6401388	CallExpression	"r_cons_yesno ( 'y' , ""Save changes? (Y/n)"" )"		6401300	0					
ANR	6401389	Callee	r_cons_yesno		6401300	0					
ANR	6401390	Identifier	r_cons_yesno		6401300	0					
ANR	6401391	ArgumentList	'y'		6401300	1					
ANR	6401392	Argument	'y'		6401300	0					
ANR	6401393	PrimaryExpression	'y'		6401300	0					
ANR	6401394	Argument	"""Save changes? (Y/n)"""		6401300	1					
ANR	6401395	PrimaryExpression	"""Save changes? (Y/n)"""		6401300	0					
ANR	6401396	CompoundStatement		12:49:327:327	6401300	1					
ANR	6401397	IfStatement	"if ( ! r_io_write_at ( core -> io , off , cva . acode -> bytes , cva . acode -> len ) )"		6401300	0					
ANR	6401398	Condition	"! r_io_write_at ( core -> io , off , cva . acode -> bytes , cva . acode -> len )"	84:7:2446:2509	6401300	0	True				
ANR	6401399	UnaryOperationExpression	"! r_io_write_at ( core -> io , off , cva . acode -> bytes , cva . acode -> len )"		6401300	0					
ANR	6401400	UnaryOperator	!		6401300	0					
ANR	6401401	CallExpression	"r_io_write_at ( core -> io , off , cva . acode -> bytes , cva . acode -> len )"		6401300	1					
ANR	6401402	Callee	r_io_write_at		6401300	0					
ANR	6401403	Identifier	r_io_write_at		6401300	0					
ANR	6401404	ArgumentList	core -> io		6401300	1					
ANR	6401405	Argument	core -> io		6401300	0					
ANR	6401406	PtrMemberAccess	core -> io		6401300	0					
ANR	6401407	Identifier	core		6401300	0					
ANR	6401408	Identifier	io		6401300	1					
ANR	6401409	Argument	off		6401300	1					
ANR	6401410	Identifier	off		6401300	0					
ANR	6401411	Argument	cva . acode -> bytes		6401300	2					
ANR	6401412	PtrMemberAccess	cva . acode -> bytes		6401300	0					
ANR	6401413	MemberAccess	cva . acode		6401300	0					
ANR	6401414	Identifier	cva		6401300	0					
ANR	6401415	Identifier	acode		6401300	1					
ANR	6401416	Identifier	bytes		6401300	1					
ANR	6401417	Argument	cva . acode -> len		6401300	3					
ANR	6401418	PtrMemberAccess	cva . acode -> len		6401300	0					
ANR	6401419	MemberAccess	cva . acode		6401300	0					
ANR	6401420	Identifier	cva		6401300	0					
ANR	6401421	Identifier	acode		6401300	1					
ANR	6401422	Identifier	len		6401300	1					
ANR	6401423	CompoundStatement		13:73:402:402	6401300	1					
ANR	6401424	ExpressionStatement	"eprintf ( ""ERROR: Cannot write in here, check map permissions or reopen the file with oo+\\n"" )"	85:4:2518:2610	6401300	0	True				
ANR	6401425	CallExpression	"eprintf ( ""ERROR: Cannot write in here, check map permissions or reopen the file with oo+\\n"" )"		6401300	0					
ANR	6401426	Callee	eprintf		6401300	0					
ANR	6401427	Identifier	eprintf		6401300	0					
ANR	6401428	ArgumentList	"""ERROR: Cannot write in here, check map permissions or reopen the file with oo+\\n"""		6401300	1					
ANR	6401429	Argument	"""ERROR: Cannot write in here, check map permissions or reopen the file with oo+\\n"""		6401300	0					
ANR	6401430	PrimaryExpression	"""ERROR: Cannot write in here, check map permissions or reopen the file with oo+\\n"""		6401300	0					
ANR	6401431	ExpressionStatement	r_cons_any_key ( NULL )	86:4:2616:2637	6401300	1	True				
ANR	6401432	CallExpression	r_cons_any_key ( NULL )		6401300	0					
ANR	6401433	Callee	r_cons_any_key		6401300	0					
ANR	6401434	Identifier	r_cons_any_key		6401300	0					
ANR	6401435	ArgumentList	NULL		6401300	1					
ANR	6401436	Argument	NULL		6401300	0					
ANR	6401437	Identifier	NULL		6401300	0					
ANR	6401438	ElseStatement	else		6401300	0					
ANR	6401439	IfStatement	if ( ! cva . acode || cva . acode -> len == 0 )		6401300	0					
ANR	6401440	Condition	! cva . acode || cva . acode -> len == 0	91:12:2739:2771	6401300	0	True				
ANR	6401441	OrExpression	! cva . acode || cva . acode -> len == 0		6401300	0		||			
ANR	6401442	UnaryOperationExpression	! cva . acode		6401300	0					
ANR	6401443	UnaryOperator	!		6401300	0					
ANR	6401444	MemberAccess	cva . acode		6401300	1					
ANR	6401445	Identifier	cva		6401300	0					
ANR	6401446	Identifier	acode		6401300	1					
ANR	6401447	EqualityExpression	cva . acode -> len == 0		6401300	1		==			
ANR	6401448	PtrMemberAccess	cva . acode -> len		6401300	0					
ANR	6401449	MemberAccess	cva . acode		6401300	0					
ANR	6401450	Identifier	cva		6401300	0					
ANR	6401451	Identifier	acode		6401300	1					
ANR	6401452	Identifier	len		6401300	1					
ANR	6401453	PrimaryExpression	0		6401300	1					
ANR	6401454	CompoundStatement		20:47:664:664	6401300	1					
ANR	6401455	ExpressionStatement	"eprintf ( ""ERROR: Cannot assemble those instructions\\n"" )"	92:2:2778:2833	6401300	0	True				
ANR	6401456	CallExpression	"eprintf ( ""ERROR: Cannot assemble those instructions\\n"" )"		6401300	0					
ANR	6401457	Callee	eprintf		6401300	0					
ANR	6401458	Identifier	eprintf		6401300	0					
ANR	6401459	ArgumentList	"""ERROR: Cannot assemble those instructions\\n"""		6401300	1					
ANR	6401460	Argument	"""ERROR: Cannot assemble those instructions\\n"""		6401300	0					
ANR	6401461	PrimaryExpression	"""ERROR: Cannot assemble those instructions\\n"""		6401300	0					
ANR	6401462	ExpressionStatement	r_asm_code_free ( cva . acode )	96:1:2873:2900	6401300	9	True				
ANR	6401463	CallExpression	r_asm_code_free ( cva . acode )		6401300	0					
ANR	6401464	Callee	r_asm_code_free		6401300	0					
ANR	6401465	Identifier	r_asm_code_free		6401300	0					
ANR	6401466	ArgumentList	cva . acode		6401300	1					
ANR	6401467	Argument	cva . acode		6401300	0					
ANR	6401468	MemberAccess	cva . acode		6401300	0					
ANR	6401469	Identifier	cva		6401300	0					
ANR	6401470	Identifier	acode		6401300	1					
ANR	6401471	ReturnType	R_API void		6401300	1					
ANR	6401472	Identifier	r_core_visual_asm		6401300	2					
ANR	6401473	ParameterList	"RCore * core , ut64 off"		6401300	3					
ANR	6401474	Parameter	RCore * core	72:29:2086:2096	6401300	0	True				
ANR	6401475	ParameterType	RCore *		6401300	0					
ANR	6401476	Identifier	core		6401300	1					
ANR	6401477	Parameter	ut64 off	72:42:2099:2106	6401300	1	True				
ANR	6401478	ParameterType	ut64		6401300	0					
ANR	6401479	Identifier	off		6401300	1					
ANR	6401480	CFGEntryNode	ENTRY		6401300		True				
ANR	6401481	CFGExitNode	EXIT		6401300		True				
ANR	6401482	Symbol	readline_callback		6401300						
ANR	6401483	Symbol	NULL		6401300						
ANR	6401484	Symbol	* cva . acode		6401300						
ANR	6401485	Symbol	cva . acode -> len		6401300						
ANR	6401486	Symbol	* cva		6401300						
ANR	6401487	Symbol	* core		6401300						
ANR	6401488	Symbol	r_cons_yesno		6401300						
ANR	6401489	Symbol	off		6401300						
ANR	6401490	Symbol	cva		6401300						
ANR	6401491	Symbol	core		6401300						
ANR	6401492	Symbol	& cva		6401300						
ANR	6401493	Symbol	core -> io		6401300						
ANR	6401494	Symbol	r_hex_bin2str		6401300						
ANR	6401495	Symbol	cva . acode		6401300						
ANR	6401496	Symbol	cva . blockbuf		6401300						
ANR	6401497	Symbol	cva . buf		6401300						
ANR	6401498	Symbol	cva . blocklen		6401300						
ANR	6401499	Symbol	cva . acode -> bytes		6401300						
ANR	6401500	Symbol	r_io_write_at		6401300						
