command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1185610	File	data/converged/CVE-2019-16718~_radare2/crypto_rot.c								
ANR	1185611	Function	mod	6:0:95:221							
ANR	1185612	FunctionDef	"mod (int a , int b)"		1185611	0					
ANR	1185613	CompoundStatement		6:22:117:221	1185611	0					
ANR	1185614	IfStatement	if ( b < 0 )		1185611	0					
ANR	1185615	Condition	b < 0	7:5:124:128	1185611	0	True				
ANR	1185616	RelationalExpression	b < 0		1185611	0		<			
ANR	1185617	Identifier	b		1185611	0					
ANR	1185618	PrimaryExpression	0		1185611	1					
ANR	1185619	CompoundStatement		2:12:13:13	1185611	1					
ANR	1185620	ReturnStatement	"return mod ( - a , - b ) ;"	8:2:135:154	1185611	0	True				
ANR	1185621	CallExpression	"mod ( - a , - b )"		1185611	0					
ANR	1185622	Callee	mod		1185611	0					
ANR	1185623	Identifier	mod		1185611	0					
ANR	1185624	ArgumentList	- a		1185611	1					
ANR	1185625	Argument	- a		1185611	0					
ANR	1185626	UnaryOperationExpression	- a		1185611	0					
ANR	1185627	UnaryOperator	-		1185611	0					
ANR	1185628	Identifier	a		1185611	1					
ANR	1185629	Argument	- b		1185611	1					
ANR	1185630	UnaryOperationExpression	- b		1185611	0					
ANR	1185631	UnaryOperator	-		1185611	0					
ANR	1185632	Identifier	b		1185611	1					
ANR	1185633	IdentifierDeclStatement	int ret = a % b ;	10:1:160:175	1185611	1	True				
ANR	1185634	IdentifierDecl	ret = a % b		1185611	0					
ANR	1185635	IdentifierDeclType	int		1185611	0					
ANR	1185636	Identifier	ret		1185611	1					
ANR	1185637	AssignmentExpression	ret = a % b		1185611	2		=			
ANR	1185638	Identifier	ret		1185611	0					
ANR	1185639	MultiplicativeExpression	a % b		1185611	1		%			
ANR	1185640	Identifier	a		1185611	0					
ANR	1185641	Identifier	b		1185611	1					
ANR	1185642	IfStatement	if ( ret < 0 )		1185611	2					
ANR	1185643	Condition	ret < 0	11:5:182:188	1185611	0	True				
ANR	1185644	RelationalExpression	ret < 0		1185611	0		<			
ANR	1185645	Identifier	ret		1185611	0					
ANR	1185646	PrimaryExpression	0		1185611	1					
ANR	1185647	CompoundStatement		6:14:73:73	1185611	1					
ANR	1185648	ExpressionStatement	ret += b	12:2:195:203	1185611	0	True				
ANR	1185649	AssignmentExpression	ret += b		1185611	0		+=			
ANR	1185650	Identifier	ret		1185611	0					
ANR	1185651	Identifier	b		1185611	1					
ANR	1185652	ReturnStatement	return ret ;	14:1:209:219	1185611	3	True				
ANR	1185653	Identifier	ret		1185611	0					
ANR	1185654	ReturnType	int		1185611	1					
ANR	1185655	Identifier	mod		1185611	2					
ANR	1185656	ParameterList	"int a , int b"		1185611	3					
ANR	1185657	Parameter	int a	6:8:103:107	1185611	0	True				
ANR	1185658	ParameterType	int		1185611	0					
ANR	1185659	Identifier	a		1185611	1					
ANR	1185660	Parameter	int b	6:15:110:114	1185611	1	True				
ANR	1185661	ParameterType	int		1185611	0					
ANR	1185662	Identifier	b		1185611	1					
ANR	1185663	CFGEntryNode	ENTRY		1185611		True				
ANR	1185664	CFGExitNode	EXIT		1185611		True				
ANR	1185665	Symbol	ret		1185611						
ANR	1185666	Symbol	a		1185611						
ANR	1185667	Symbol	b		1185611						
ANR	1185668	Symbol	mod		1185611						
ANR	1185669	Function	rot_init	17:0:224:423							
ANR	1185670	FunctionDef	"rot_init (ut8 * rotkey , const ut8 * key , int keylen)"		1185669	0					
ANR	1185671	CompoundStatement		17:62:286:423	1185669	0					
ANR	1185672	IfStatement	if ( rotkey && key && keylen > 0 )		1185669	0					
ANR	1185673	Condition	rotkey && key && keylen > 0	18:5:293:319	1185669	0	True				
ANR	1185674	AndExpression	rotkey && key && keylen > 0		1185669	0		&&			
ANR	1185675	Identifier	rotkey		1185669	0					
ANR	1185676	AndExpression	key && keylen > 0		1185669	1		&&			
ANR	1185677	Identifier	key		1185669	0					
ANR	1185678	RelationalExpression	keylen > 0		1185669	1		>			
ANR	1185679	Identifier	keylen		1185669	0					
ANR	1185680	PrimaryExpression	0		1185669	1					
ANR	1185681	CompoundStatement		3:2:39:71	1185669	1					
ANR	1185682	IdentifierDeclStatement	int i = atoi ( ( const char * ) key ) ;	19:2:326:358	1185669	0	True				
ANR	1185683	IdentifierDecl	i = atoi ( ( const char * ) key )		1185669	0					
ANR	1185684	IdentifierDeclType	int		1185669	0					
ANR	1185685	Identifier	i		1185669	1					
ANR	1185686	AssignmentExpression	i = atoi ( ( const char * ) key )		1185669	2		=			
ANR	1185687	Identifier	i		1185669	0					
ANR	1185688	CallExpression	atoi ( ( const char * ) key )		1185669	1					
ANR	1185689	Callee	atoi		1185669	0					
ANR	1185690	Identifier	atoi		1185669	0					
ANR	1185691	ArgumentList	( const char * ) key		1185669	1					
ANR	1185692	Argument	( const char * ) key		1185669	0					
ANR	1185693	CastExpression	( const char * ) key		1185669	0					
ANR	1185694	CastTarget	const char *		1185669	0					
ANR	1185695	Identifier	key		1185669	1					
ANR	1185696	ExpressionStatement	"* rotkey = ( ut8 ) mod ( i , 26 )"	20:2:362:388	1185669	1	True				
ANR	1185697	AssignmentExpression	"* rotkey = ( ut8 ) mod ( i , 26 )"		1185669	0		=			
ANR	1185698	UnaryOperationExpression	* rotkey		1185669	0					
ANR	1185699	UnaryOperator	*		1185669	0					
ANR	1185700	Identifier	rotkey		1185669	1					
ANR	1185701	CastExpression	"( ut8 ) mod ( i , 26 )"		1185669	1					
ANR	1185702	CastTarget	ut8		1185669	0					
ANR	1185703	CallExpression	"mod ( i , 26 )"		1185669	1					
ANR	1185704	Callee	mod		1185669	0					
ANR	1185705	Identifier	mod		1185669	0					
ANR	1185706	ArgumentList	i		1185669	1					
ANR	1185707	Argument	i		1185669	0					
ANR	1185708	Identifier	i		1185669	0					
ANR	1185709	Argument	26		1185669	1					
ANR	1185710	PrimaryExpression	26		1185669	0					
ANR	1185711	ReturnStatement	return true ;	21:2:392:403	1185669	2	True				
ANR	1185712	Identifier	true		1185669	0					
ANR	1185713	ReturnStatement	return false ;	23:1:409:421	1185669	1	True				
ANR	1185714	Identifier	false		1185669	0					
ANR	1185715	ReturnType	static bool		1185669	1					
ANR	1185716	Identifier	rot_init		1185669	2					
ANR	1185717	ParameterList	"ut8 * rotkey , const ut8 * key , int keylen"		1185669	3					
ANR	1185718	Parameter	ut8 * rotkey	17:21:245:255	1185669	0	True				
ANR	1185719	ParameterType	ut8 *		1185669	0					
ANR	1185720	Identifier	rotkey		1185669	1					
ANR	1185721	Parameter	const ut8 * key	17:34:258:271	1185669	1	True				
ANR	1185722	ParameterType	const ut8 *		1185669	0					
ANR	1185723	Identifier	key		1185669	1					
ANR	1185724	Parameter	int keylen	17:50:274:283	1185669	2	True				
ANR	1185725	ParameterType	int		1185669	0					
ANR	1185726	Identifier	keylen		1185669	1					
ANR	1185727	CFGEntryNode	ENTRY		1185669		True				
ANR	1185728	CFGExitNode	EXIT		1185669		True				
ANR	1185729	Symbol	atoi		1185669						
ANR	1185730	Symbol	rotkey		1185669						
ANR	1185731	Symbol	mod		1185669						
ANR	1185732	Symbol	keylen		1185669						
ANR	1185733	Symbol	true		1185669						
ANR	1185734	Symbol	false		1185669						
ANR	1185735	Symbol	i		1185669						
ANR	1185736	Symbol	* rotkey		1185669						
ANR	1185737	Symbol	key		1185669						
ANR	1185738	Function	rot_crypt	26:0:426:853							
ANR	1185739	FunctionDef	"rot_crypt (ut8 key , const ut8 * inbuf , ut8 * outbuf , int buflen)"		1185738	0					
ANR	1185740	CompoundStatement		26:74:500:853	1185738	0					
ANR	1185741	IdentifierDeclStatement	int i ;	27:1:503:508	1185738	0	True				
ANR	1185742	IdentifierDecl	i		1185738	0					
ANR	1185743	IdentifierDeclType	int		1185738	0					
ANR	1185744	Identifier	i		1185738	1					
ANR	1185745	ForStatement	for ( i = 0 ; i < buflen ; i ++ )		1185738	1					
ANR	1185746	ForInit	i = 0 ;	28:6:516:521	1185738	0	True				
ANR	1185747	AssignmentExpression	i = 0		1185738	0		=			
ANR	1185748	Identifier	i		1185738	0					
ANR	1185749	PrimaryExpression	0		1185738	1					
ANR	1185750	Condition	i < buflen	28:13:523:532	1185738	1	True				
ANR	1185751	RelationalExpression	i < buflen		1185738	0		<			
ANR	1185752	Identifier	i		1185738	0					
ANR	1185753	Identifier	buflen		1185738	1					
ANR	1185754	PostIncDecOperationExpression	i ++	28:25:535:537	1185738	2	True				
ANR	1185755	Identifier	i		1185738	0					
ANR	1185756	IncDec	++		1185738	1					
ANR	1185757	CompoundStatement		3:30:39:39	1185738	3					
ANR	1185758	ExpressionStatement	outbuf [ i ] = inbuf [ i ]	29:2:544:564	1185738	0	True				
ANR	1185759	AssignmentExpression	outbuf [ i ] = inbuf [ i ]		1185738	0		=			
ANR	1185760	ArrayIndexing	outbuf [ i ]		1185738	0					
ANR	1185761	Identifier	outbuf		1185738	0					
ANR	1185762	Identifier	i		1185738	1					
ANR	1185763	ArrayIndexing	inbuf [ i ]		1185738	1					
ANR	1185764	Identifier	inbuf		1185738	0					
ANR	1185765	Identifier	i		1185738	1					
ANR	1185766	IfStatement	if ( ( inbuf [ i ] < 'a' || inbuf [ i ] > 'z' ) && ( inbuf [ i ] < 'A' || inbuf [ i ] > 'Z' ) )		1185738	1					
ANR	1185767	Condition	( inbuf [ i ] < 'a' || inbuf [ i ] > 'z' ) && ( inbuf [ i ] < 'A' || inbuf [ i ] > 'Z' )	30:6:572:643	1185738	0	True				
ANR	1185768	AndExpression	( inbuf [ i ] < 'a' || inbuf [ i ] > 'z' ) && ( inbuf [ i ] < 'A' || inbuf [ i ] > 'Z' )		1185738	0		&&			
ANR	1185769	OrExpression	inbuf [ i ] < 'a' || inbuf [ i ] > 'z'		1185738	0		||			
ANR	1185770	RelationalExpression	inbuf [ i ] < 'a'		1185738	0		<			
ANR	1185771	ArrayIndexing	inbuf [ i ]		1185738	0					
ANR	1185772	Identifier	inbuf		1185738	0					
ANR	1185773	Identifier	i		1185738	1					
ANR	1185774	PrimaryExpression	'a'		1185738	1					
ANR	1185775	RelationalExpression	inbuf [ i ] > 'z'		1185738	1		>			
ANR	1185776	ArrayIndexing	inbuf [ i ]		1185738	0					
ANR	1185777	Identifier	inbuf		1185738	0					
ANR	1185778	Identifier	i		1185738	1					
ANR	1185779	PrimaryExpression	'z'		1185738	1					
ANR	1185780	OrExpression	inbuf [ i ] < 'A' || inbuf [ i ] > 'Z'		1185738	1		||			
ANR	1185781	RelationalExpression	inbuf [ i ] < 'A'		1185738	0		<			
ANR	1185782	ArrayIndexing	inbuf [ i ]		1185738	0					
ANR	1185783	Identifier	inbuf		1185738	0					
ANR	1185784	Identifier	i		1185738	1					
ANR	1185785	PrimaryExpression	'A'		1185738	1					
ANR	1185786	RelationalExpression	inbuf [ i ] > 'Z'		1185738	1		>			
ANR	1185787	ArrayIndexing	inbuf [ i ]		1185738	0					
ANR	1185788	Identifier	inbuf		1185738	0					
ANR	1185789	Identifier	i		1185738	1					
ANR	1185790	PrimaryExpression	'Z'		1185738	1					
ANR	1185791	CompoundStatement		5:80:145:145	1185738	1					
ANR	1185792	ContinueStatement	continue ;	31:3:651:659	1185738	0	True				
ANR	1185793	ExpressionStatement	outbuf [ i ] += key	33:2:667:683	1185738	2	True				
ANR	1185794	AssignmentExpression	outbuf [ i ] += key		1185738	0		+=			
ANR	1185795	ArrayIndexing	outbuf [ i ]		1185738	0					
ANR	1185796	Identifier	outbuf		1185738	0					
ANR	1185797	Identifier	i		1185738	1					
ANR	1185798	Identifier	key		1185738	1					
ANR	1185799	ExpressionStatement	outbuf [ i ] -= ( inbuf [ i ] >= 'a' && inbuf [ i ] <= 'z' ) ? 'a' : 'A'	34:2:687:748	1185738	3	True				
ANR	1185800	AssignmentExpression	outbuf [ i ] -= ( inbuf [ i ] >= 'a' && inbuf [ i ] <= 'z' ) ? 'a' : 'A'		1185738	0		-=			
ANR	1185801	ArrayIndexing	outbuf [ i ]		1185738	0					
ANR	1185802	Identifier	outbuf		1185738	0					
ANR	1185803	Identifier	i		1185738	1					
ANR	1185804	ConditionalExpression	( inbuf [ i ] >= 'a' && inbuf [ i ] <= 'z' ) ? 'a' : 'A'		1185738	1					
ANR	1185805	Condition	inbuf [ i ] >= 'a' && inbuf [ i ] <= 'z'		1185738	0					
ANR	1185806	AndExpression	inbuf [ i ] >= 'a' && inbuf [ i ] <= 'z'		1185738	0		&&			
ANR	1185807	RelationalExpression	inbuf [ i ] >= 'a'		1185738	0		>=			
ANR	1185808	ArrayIndexing	inbuf [ i ]		1185738	0					
ANR	1185809	Identifier	inbuf		1185738	0					
ANR	1185810	Identifier	i		1185738	1					
ANR	1185811	PrimaryExpression	'a'		1185738	1					
ANR	1185812	RelationalExpression	inbuf [ i ] <= 'z'		1185738	1		<=			
ANR	1185813	ArrayIndexing	inbuf [ i ]		1185738	0					
ANR	1185814	Identifier	inbuf		1185738	0					
ANR	1185815	Identifier	i		1185738	1					
ANR	1185816	PrimaryExpression	'z'		1185738	1					
ANR	1185817	PrimaryExpression	'a'		1185738	1					
ANR	1185818	PrimaryExpression	'A'		1185738	2					
ANR	1185819	ExpressionStatement	"outbuf [ i ] = mod ( outbuf [ i ] , 26 )"	35:2:752:783	1185738	4	True				
ANR	1185820	AssignmentExpression	"outbuf [ i ] = mod ( outbuf [ i ] , 26 )"		1185738	0		=			
ANR	1185821	ArrayIndexing	outbuf [ i ]		1185738	0					
ANR	1185822	Identifier	outbuf		1185738	0					
ANR	1185823	Identifier	i		1185738	1					
ANR	1185824	CallExpression	"mod ( outbuf [ i ] , 26 )"		1185738	1					
ANR	1185825	Callee	mod		1185738	0					
ANR	1185826	Identifier	mod		1185738	0					
ANR	1185827	ArgumentList	outbuf [ i ]		1185738	1					
ANR	1185828	Argument	outbuf [ i ]		1185738	0					
ANR	1185829	ArrayIndexing	outbuf [ i ]		1185738	0					
ANR	1185830	Identifier	outbuf		1185738	0					
ANR	1185831	Identifier	i		1185738	1					
ANR	1185832	Argument	26		1185738	1					
ANR	1185833	PrimaryExpression	26		1185738	0					
ANR	1185834	ExpressionStatement	outbuf [ i ] += ( inbuf [ i ] >= 'a' && inbuf [ i ] <= 'z' ) ? 'a' : 'A'	36:2:787:848	1185738	5	True				
ANR	1185835	AssignmentExpression	outbuf [ i ] += ( inbuf [ i ] >= 'a' && inbuf [ i ] <= 'z' ) ? 'a' : 'A'		1185738	0		+=			
ANR	1185836	ArrayIndexing	outbuf [ i ]		1185738	0					
ANR	1185837	Identifier	outbuf		1185738	0					
ANR	1185838	Identifier	i		1185738	1					
ANR	1185839	ConditionalExpression	( inbuf [ i ] >= 'a' && inbuf [ i ] <= 'z' ) ? 'a' : 'A'		1185738	1					
ANR	1185840	Condition	inbuf [ i ] >= 'a' && inbuf [ i ] <= 'z'		1185738	0					
ANR	1185841	AndExpression	inbuf [ i ] >= 'a' && inbuf [ i ] <= 'z'		1185738	0		&&			
ANR	1185842	RelationalExpression	inbuf [ i ] >= 'a'		1185738	0		>=			
ANR	1185843	ArrayIndexing	inbuf [ i ]		1185738	0					
ANR	1185844	Identifier	inbuf		1185738	0					
ANR	1185845	Identifier	i		1185738	1					
ANR	1185846	PrimaryExpression	'a'		1185738	1					
ANR	1185847	RelationalExpression	inbuf [ i ] <= 'z'		1185738	1		<=			
ANR	1185848	ArrayIndexing	inbuf [ i ]		1185738	0					
ANR	1185849	Identifier	inbuf		1185738	0					
ANR	1185850	Identifier	i		1185738	1					
ANR	1185851	PrimaryExpression	'z'		1185738	1					
ANR	1185852	PrimaryExpression	'a'		1185738	1					
ANR	1185853	PrimaryExpression	'A'		1185738	2					
ANR	1185854	ReturnType	static void		1185738	1					
ANR	1185855	Identifier	rot_crypt		1185738	2					
ANR	1185856	ParameterList	"ut8 key , const ut8 * inbuf , ut8 * outbuf , int buflen"		1185738	3					
ANR	1185857	Parameter	ut8 key	26:22:448:454	1185738	0	True				
ANR	1185858	ParameterType	ut8		1185738	0					
ANR	1185859	Identifier	key		1185738	1					
ANR	1185860	Parameter	const ut8 * inbuf	26:31:457:472	1185738	1	True				
ANR	1185861	ParameterType	const ut8 *		1185738	0					
ANR	1185862	Identifier	inbuf		1185738	1					
ANR	1185863	Parameter	ut8 * outbuf	26:49:475:485	1185738	2	True				
ANR	1185864	ParameterType	ut8 *		1185738	0					
ANR	1185865	Identifier	outbuf		1185738	1					
ANR	1185866	Parameter	int buflen	26:62:488:497	1185738	3	True				
ANR	1185867	ParameterType	int		1185738	0					
ANR	1185868	Identifier	buflen		1185738	1					
ANR	1185869	CFGEntryNode	ENTRY		1185738		True				
ANR	1185870	CFGExitNode	EXIT		1185738		True				
ANR	1185871	Symbol	* outbuf		1185738						
ANR	1185872	Symbol	* i		1185738						
ANR	1185873	Symbol	* inbuf		1185738						
ANR	1185874	Symbol	mod		1185738						
ANR	1185875	Symbol	inbuf		1185738						
ANR	1185876	Symbol	outbuf		1185738						
ANR	1185877	Symbol	buflen		1185738						
ANR	1185878	Symbol	i		1185738						
ANR	1185879	Symbol	key		1185738						
ANR	1185880	Function	rot_decrypt	40:0:856:1359							
ANR	1185881	FunctionDef	"rot_decrypt (ut8 key , const ut8 * inbuf , ut8 * outbuf , int buflen)"		1185880	0					
ANR	1185882	CompoundStatement		40:76:932:1359	1185880	0					
ANR	1185883	IdentifierDeclStatement	int i ;	41:1:935:940	1185880	0	True				
ANR	1185884	IdentifierDecl	i		1185880	0					
ANR	1185885	IdentifierDeclType	int		1185880	0					
ANR	1185886	Identifier	i		1185880	1					
ANR	1185887	ForStatement	for ( i = 0 ; i < buflen ; i ++ )		1185880	1					
ANR	1185888	ForInit	i = 0 ;	42:6:948:953	1185880	0	True				
ANR	1185889	AssignmentExpression	i = 0		1185880	0		=			
ANR	1185890	Identifier	i		1185880	0					
ANR	1185891	PrimaryExpression	0		1185880	1					
ANR	1185892	Condition	i < buflen	42:13:955:964	1185880	1	True				
ANR	1185893	RelationalExpression	i < buflen		1185880	0		<			
ANR	1185894	Identifier	i		1185880	0					
ANR	1185895	Identifier	buflen		1185880	1					
ANR	1185896	PostIncDecOperationExpression	i ++	42:25:967:969	1185880	2	True				
ANR	1185897	Identifier	i		1185880	0					
ANR	1185898	IncDec	++		1185880	1					
ANR	1185899	CompoundStatement		3:30:39:39	1185880	3					
ANR	1185900	ExpressionStatement	outbuf [ i ] = inbuf [ i ]	43:2:976:996	1185880	0	True				
ANR	1185901	AssignmentExpression	outbuf [ i ] = inbuf [ i ]		1185880	0		=			
ANR	1185902	ArrayIndexing	outbuf [ i ]		1185880	0					
ANR	1185903	Identifier	outbuf		1185880	0					
ANR	1185904	Identifier	i		1185880	1					
ANR	1185905	ArrayIndexing	inbuf [ i ]		1185880	1					
ANR	1185906	Identifier	inbuf		1185880	0					
ANR	1185907	Identifier	i		1185880	1					
ANR	1185908	IfStatement	if ( ( inbuf [ i ] < 'a' || inbuf [ i ] > 'z' ) && ( inbuf [ i ] < 'A' || inbuf [ i ] > 'Z' ) )		1185880	1					
ANR	1185909	Condition	( inbuf [ i ] < 'a' || inbuf [ i ] > 'z' ) && ( inbuf [ i ] < 'A' || inbuf [ i ] > 'Z' )	44:6:1004:1075	1185880	0	True				
ANR	1185910	AndExpression	( inbuf [ i ] < 'a' || inbuf [ i ] > 'z' ) && ( inbuf [ i ] < 'A' || inbuf [ i ] > 'Z' )		1185880	0		&&			
ANR	1185911	OrExpression	inbuf [ i ] < 'a' || inbuf [ i ] > 'z'		1185880	0		||			
ANR	1185912	RelationalExpression	inbuf [ i ] < 'a'		1185880	0		<			
ANR	1185913	ArrayIndexing	inbuf [ i ]		1185880	0					
ANR	1185914	Identifier	inbuf		1185880	0					
ANR	1185915	Identifier	i		1185880	1					
ANR	1185916	PrimaryExpression	'a'		1185880	1					
ANR	1185917	RelationalExpression	inbuf [ i ] > 'z'		1185880	1		>			
ANR	1185918	ArrayIndexing	inbuf [ i ]		1185880	0					
ANR	1185919	Identifier	inbuf		1185880	0					
ANR	1185920	Identifier	i		1185880	1					
ANR	1185921	PrimaryExpression	'z'		1185880	1					
ANR	1185922	OrExpression	inbuf [ i ] < 'A' || inbuf [ i ] > 'Z'		1185880	1		||			
ANR	1185923	RelationalExpression	inbuf [ i ] < 'A'		1185880	0		<			
ANR	1185924	ArrayIndexing	inbuf [ i ]		1185880	0					
ANR	1185925	Identifier	inbuf		1185880	0					
ANR	1185926	Identifier	i		1185880	1					
ANR	1185927	PrimaryExpression	'A'		1185880	1					
ANR	1185928	RelationalExpression	inbuf [ i ] > 'Z'		1185880	1		>			
ANR	1185929	ArrayIndexing	inbuf [ i ]		1185880	0					
ANR	1185930	Identifier	inbuf		1185880	0					
ANR	1185931	Identifier	i		1185880	1					
ANR	1185932	PrimaryExpression	'Z'		1185880	1					
ANR	1185933	CompoundStatement		5:80:145:145	1185880	1					
ANR	1185934	ContinueStatement	continue ;	45:3:1083:1091	1185880	0	True				
ANR	1185935	ExpressionStatement	outbuf [ i ] += 26	47:2:1099:1114	1185880	2	True				
ANR	1185936	AssignmentExpression	outbuf [ i ] += 26		1185880	0		+=			
ANR	1185937	ArrayIndexing	outbuf [ i ]		1185880	0					
ANR	1185938	Identifier	outbuf		1185880	0					
ANR	1185939	Identifier	i		1185880	1					
ANR	1185940	PrimaryExpression	26		1185880	1					
ANR	1185941	ExpressionStatement	outbuf [ i ] -= key	48:2:1173:1189	1185880	3	True				
ANR	1185942	AssignmentExpression	outbuf [ i ] -= key		1185880	0		-=			
ANR	1185943	ArrayIndexing	outbuf [ i ]		1185880	0					
ANR	1185944	Identifier	outbuf		1185880	0					
ANR	1185945	Identifier	i		1185880	1					
ANR	1185946	Identifier	key		1185880	1					
ANR	1185947	ExpressionStatement	outbuf [ i ] -= ( inbuf [ i ] >= 'a' && inbuf [ i ] <= 'z' ) ? 'a' : 'A'	49:2:1193:1254	1185880	4	True				
ANR	1185948	AssignmentExpression	outbuf [ i ] -= ( inbuf [ i ] >= 'a' && inbuf [ i ] <= 'z' ) ? 'a' : 'A'		1185880	0		-=			
ANR	1185949	ArrayIndexing	outbuf [ i ]		1185880	0					
ANR	1185950	Identifier	outbuf		1185880	0					
ANR	1185951	Identifier	i		1185880	1					
ANR	1185952	ConditionalExpression	( inbuf [ i ] >= 'a' && inbuf [ i ] <= 'z' ) ? 'a' : 'A'		1185880	1					
ANR	1185953	Condition	inbuf [ i ] >= 'a' && inbuf [ i ] <= 'z'		1185880	0					
ANR	1185954	AndExpression	inbuf [ i ] >= 'a' && inbuf [ i ] <= 'z'		1185880	0		&&			
ANR	1185955	RelationalExpression	inbuf [ i ] >= 'a'		1185880	0		>=			
ANR	1185956	ArrayIndexing	inbuf [ i ]		1185880	0					
ANR	1185957	Identifier	inbuf		1185880	0					
ANR	1185958	Identifier	i		1185880	1					
ANR	1185959	PrimaryExpression	'a'		1185880	1					
ANR	1185960	RelationalExpression	inbuf [ i ] <= 'z'		1185880	1		<=			
ANR	1185961	ArrayIndexing	inbuf [ i ]		1185880	0					
ANR	1185962	Identifier	inbuf		1185880	0					
ANR	1185963	Identifier	i		1185880	1					
ANR	1185964	PrimaryExpression	'z'		1185880	1					
ANR	1185965	PrimaryExpression	'a'		1185880	1					
ANR	1185966	PrimaryExpression	'A'		1185880	2					
ANR	1185967	ExpressionStatement	"outbuf [ i ] = mod ( outbuf [ i ] , 26 )"	50:2:1258:1289	1185880	5	True				
ANR	1185968	AssignmentExpression	"outbuf [ i ] = mod ( outbuf [ i ] , 26 )"		1185880	0		=			
ANR	1185969	ArrayIndexing	outbuf [ i ]		1185880	0					
ANR	1185970	Identifier	outbuf		1185880	0					
ANR	1185971	Identifier	i		1185880	1					
ANR	1185972	CallExpression	"mod ( outbuf [ i ] , 26 )"		1185880	1					
ANR	1185973	Callee	mod		1185880	0					
ANR	1185974	Identifier	mod		1185880	0					
ANR	1185975	ArgumentList	outbuf [ i ]		1185880	1					
ANR	1185976	Argument	outbuf [ i ]		1185880	0					
ANR	1185977	ArrayIndexing	outbuf [ i ]		1185880	0					
ANR	1185978	Identifier	outbuf		1185880	0					
ANR	1185979	Identifier	i		1185880	1					
ANR	1185980	Argument	26		1185880	1					
ANR	1185981	PrimaryExpression	26		1185880	0					
ANR	1185982	ExpressionStatement	outbuf [ i ] += ( inbuf [ i ] >= 'a' && inbuf [ i ] <= 'z' ) ? 'a' : 'A'	51:2:1293:1354	1185880	6	True				
ANR	1185983	AssignmentExpression	outbuf [ i ] += ( inbuf [ i ] >= 'a' && inbuf [ i ] <= 'z' ) ? 'a' : 'A'		1185880	0		+=			
ANR	1185984	ArrayIndexing	outbuf [ i ]		1185880	0					
ANR	1185985	Identifier	outbuf		1185880	0					
ANR	1185986	Identifier	i		1185880	1					
ANR	1185987	ConditionalExpression	( inbuf [ i ] >= 'a' && inbuf [ i ] <= 'z' ) ? 'a' : 'A'		1185880	1					
ANR	1185988	Condition	inbuf [ i ] >= 'a' && inbuf [ i ] <= 'z'		1185880	0					
ANR	1185989	AndExpression	inbuf [ i ] >= 'a' && inbuf [ i ] <= 'z'		1185880	0		&&			
ANR	1185990	RelationalExpression	inbuf [ i ] >= 'a'		1185880	0		>=			
ANR	1185991	ArrayIndexing	inbuf [ i ]		1185880	0					
ANR	1185992	Identifier	inbuf		1185880	0					
ANR	1185993	Identifier	i		1185880	1					
ANR	1185994	PrimaryExpression	'a'		1185880	1					
ANR	1185995	RelationalExpression	inbuf [ i ] <= 'z'		1185880	1		<=			
ANR	1185996	ArrayIndexing	inbuf [ i ]		1185880	0					
ANR	1185997	Identifier	inbuf		1185880	0					
ANR	1185998	Identifier	i		1185880	1					
ANR	1185999	PrimaryExpression	'z'		1185880	1					
ANR	1186000	PrimaryExpression	'a'		1185880	1					
ANR	1186001	PrimaryExpression	'A'		1185880	2					
ANR	1186002	ReturnType	static void		1185880	1					
ANR	1186003	Identifier	rot_decrypt		1185880	2					
ANR	1186004	ParameterList	"ut8 key , const ut8 * inbuf , ut8 * outbuf , int buflen"		1185880	3					
ANR	1186005	Parameter	ut8 key	40:24:880:886	1185880	0	True				
ANR	1186006	ParameterType	ut8		1185880	0					
ANR	1186007	Identifier	key		1185880	1					
ANR	1186008	Parameter	const ut8 * inbuf	40:33:889:904	1185880	1	True				
ANR	1186009	ParameterType	const ut8 *		1185880	0					
ANR	1186010	Identifier	inbuf		1185880	1					
ANR	1186011	Parameter	ut8 * outbuf	40:51:907:917	1185880	2	True				
ANR	1186012	ParameterType	ut8 *		1185880	0					
ANR	1186013	Identifier	outbuf		1185880	1					
ANR	1186014	Parameter	int buflen	40:64:920:929	1185880	3	True				
ANR	1186015	ParameterType	int		1185880	0					
ANR	1186016	Identifier	buflen		1185880	1					
ANR	1186017	CFGEntryNode	ENTRY		1185880		True				
ANR	1186018	CFGExitNode	EXIT		1185880		True				
ANR	1186019	Symbol	* outbuf		1185880						
ANR	1186020	Symbol	* i		1185880						
ANR	1186021	Symbol	* inbuf		1185880						
ANR	1186022	Symbol	mod		1185880						
ANR	1186023	Symbol	inbuf		1185880						
ANR	1186024	Symbol	outbuf		1185880						
ANR	1186025	Symbol	buflen		1185880						
ANR	1186026	Symbol	i		1185880						
ANR	1186027	Symbol	key		1185880						
ANR	1186028	DeclStmt									
ANR	1186029	Decl							ut8	ut8	rot_key
ANR	1186030	DeclStmt									
ANR	1186031	Decl							int	int	flag
ANR	1186032	Function	rot_set_key	58:0:1404:1558							
ANR	1186033	FunctionDef	"rot_set_key (RCrypto * cry , const ut8 * key , int keylen , int mode , int direction)"		1186032	0					
ANR	1186034	CompoundStatement		58:91:1495:1558	1186032	0					
ANR	1186035	ExpressionStatement	flag = direction	59:1:1498:1514	1186032	0	True				
ANR	1186036	AssignmentExpression	flag = direction		1186032	0		=			
ANR	1186037	Identifier	flag		1186032	0					
ANR	1186038	Identifier	direction		1186032	1					
ANR	1186039	ReturnStatement	"return rot_init ( & rot_key , key , keylen ) ;"	60:1:1517:1556	1186032	1	True				
ANR	1186040	CallExpression	"rot_init ( & rot_key , key , keylen )"		1186032	0					
ANR	1186041	Callee	rot_init		1186032	0					
ANR	1186042	Identifier	rot_init		1186032	0					
ANR	1186043	ArgumentList	& rot_key		1186032	1					
ANR	1186044	Argument	& rot_key		1186032	0					
ANR	1186045	UnaryOperationExpression	& rot_key		1186032	0					
ANR	1186046	UnaryOperator	&		1186032	0					
ANR	1186047	Identifier	rot_key		1186032	1					
ANR	1186048	Argument	key		1186032	1					
ANR	1186049	Identifier	key		1186032	0					
ANR	1186050	Argument	keylen		1186032	2					
ANR	1186051	Identifier	keylen		1186032	0					
ANR	1186052	ReturnType	static bool		1186032	1					
ANR	1186053	Identifier	rot_set_key		1186032	2					
ANR	1186054	ParameterList	"RCrypto * cry , const ut8 * key , int keylen , int mode , int direction"		1186032	3					
ANR	1186055	Parameter	RCrypto * cry	58:24:1428:1439	1186032	0	True				
ANR	1186056	ParameterType	RCrypto *		1186032	0					
ANR	1186057	Identifier	cry		1186032	1					
ANR	1186058	Parameter	const ut8 * key	58:38:1442:1455	1186032	1	True				
ANR	1186059	ParameterType	const ut8 *		1186032	0					
ANR	1186060	Identifier	key		1186032	1					
ANR	1186061	Parameter	int keylen	58:54:1458:1467	1186032	2	True				
ANR	1186062	ParameterType	int		1186032	0					
ANR	1186063	Identifier	keylen		1186032	1					
ANR	1186064	Parameter	int mode	58:66:1470:1477	1186032	3	True				
ANR	1186065	ParameterType	int		1186032	0					
ANR	1186066	Identifier	mode		1186032	1					
ANR	1186067	Parameter	int direction	58:76:1480:1492	1186032	4	True				
ANR	1186068	ParameterType	int		1186032	0					
ANR	1186069	Identifier	direction		1186032	1					
ANR	1186070	CFGEntryNode	ENTRY		1186032		True				
ANR	1186071	CFGExitNode	EXIT		1186032		True				
ANR	1186072	Symbol	mode		1186032						
ANR	1186073	Symbol	& rot_key		1186032						
ANR	1186074	Symbol	flag		1186032						
ANR	1186075	Symbol	keylen		1186032						
ANR	1186076	Symbol	cry		1186032						
ANR	1186077	Symbol	key		1186032						
ANR	1186078	Symbol	direction		1186032						
ANR	1186079	Symbol	rot_init		1186032						
ANR	1186080	Function	rot_get_key_size	63:0:1561:1661							
ANR	1186081	FunctionDef	rot_get_key_size (RCrypto * cry)		1186080	0					
ANR	1186082	CompoundStatement		63:42:1603:1661	1186080	0					
ANR	1186083	ReturnStatement	return 1 ;	65:1:1651:1659	1186080	0	True				
ANR	1186084	PrimaryExpression	1		1186080	0					
ANR	1186085	ReturnType	static int		1186080	1					
ANR	1186086	Identifier	rot_get_key_size		1186080	2					
ANR	1186087	ParameterList	RCrypto * cry		1186080	3					
ANR	1186088	Parameter	RCrypto * cry	63:28:1589:1600	1186080	0	True				
ANR	1186089	ParameterType	RCrypto *		1186080	0					
ANR	1186090	Identifier	cry		1186080	1					
ANR	1186091	CFGEntryNode	ENTRY		1186080		True				
ANR	1186092	CFGExitNode	EXIT		1186080		True				
ANR	1186093	Symbol	cry		1186080						
ANR	1186094	Function	rot_use	68:0:1664:1735							
ANR	1186095	FunctionDef	rot_use (const char * algo)		1186094	0					
ANR	1186096	CompoundStatement		68:38:1702:1735	1186094	0					
ANR	1186097	ReturnStatement	"return ! strcmp ( algo , ""rot"" ) ;"	69:1:1705:1733	1186094	0	True				
ANR	1186098	UnaryOperationExpression	"! strcmp ( algo , ""rot"" )"		1186094	0					
ANR	1186099	UnaryOperator	!		1186094	0					
ANR	1186100	CallExpression	"strcmp ( algo , ""rot"" )"		1186094	1					
ANR	1186101	Callee	strcmp		1186094	0					
ANR	1186102	Identifier	strcmp		1186094	0					
ANR	1186103	ArgumentList	algo		1186094	1					
ANR	1186104	Argument	algo		1186094	0					
ANR	1186105	Identifier	algo		1186094	0					
ANR	1186106	Argument	"""rot"""		1186094	1					
ANR	1186107	PrimaryExpression	"""rot"""		1186094	0					
ANR	1186108	ReturnType	static bool		1186094	1					
ANR	1186109	Identifier	rot_use		1186094	2					
ANR	1186110	ParameterList	const char * algo		1186094	3					
ANR	1186111	Parameter	const char * algo	68:20:1684:1699	1186094	0	True				
ANR	1186112	ParameterType	const char *		1186094	0					
ANR	1186113	Identifier	algo		1186094	1					
ANR	1186114	CFGEntryNode	ENTRY		1186094		True				
ANR	1186115	CFGExitNode	EXIT		1186094		True				
ANR	1186116	Symbol	strcmp		1186094						
ANR	1186117	Symbol	algo		1186094						
ANR	1186118	Function	update	72:0:1738:2050							
ANR	1186119	FunctionDef	"update (RCrypto * cry , const ut8 * buf , int len)"		1186118	0					
ANR	1186120	CompoundStatement		72:58:1796:2050	1186118	0					
ANR	1186121	IdentifierDeclStatement	"ut8 * obuf = calloc ( 1 , len ) ;"	73:1:1799:1826	1186118	0	True				
ANR	1186122	IdentifierDecl	"* obuf = calloc ( 1 , len )"		1186118	0					
ANR	1186123	IdentifierDeclType	ut8 *		1186118	0					
ANR	1186124	Identifier	obuf		1186118	1					
ANR	1186125	AssignmentExpression	"* obuf = calloc ( 1 , len )"		1186118	2		=			
ANR	1186126	Identifier	obuf		1186118	0					
ANR	1186127	CallExpression	"calloc ( 1 , len )"		1186118	1					
ANR	1186128	Callee	calloc		1186118	0					
ANR	1186129	Identifier	calloc		1186118	0					
ANR	1186130	ArgumentList	1		1186118	1					
ANR	1186131	Argument	1		1186118	0					
ANR	1186132	PrimaryExpression	1		1186118	0					
ANR	1186133	Argument	len		1186118	1					
ANR	1186134	Identifier	len		1186118	0					
ANR	1186135	IfStatement	if ( ! obuf )		1186118	1					
ANR	1186136	Condition	! obuf	74:5:1833:1837	1186118	0	True				
ANR	1186137	UnaryOperationExpression	! obuf		1186118	0					
ANR	1186138	UnaryOperator	!		1186118	0					
ANR	1186139	Identifier	obuf		1186118	1					
ANR	1186140	CompoundStatement		3:12:43:43	1186118	1					
ANR	1186141	ReturnStatement	return false ;	75:2:1844:1856	1186118	0	True				
ANR	1186142	Identifier	false		1186118	0					
ANR	1186143	IfStatement	if ( flag == 0 )		1186118	2					
ANR	1186144	Condition	flag == 0	77:5:1866:1874	1186118	0	True				
ANR	1186145	EqualityExpression	flag == 0		1186118	0		==			
ANR	1186146	Identifier	flag		1186118	0					
ANR	1186147	PrimaryExpression	0		1186118	1					
ANR	1186148	CompoundStatement		6:16:80:80	1186118	1					
ANR	1186149	ExpressionStatement	"rot_crypt ( rot_key , buf , obuf , len )"	78:2:1881:1916	1186118	0	True				
ANR	1186150	CallExpression	"rot_crypt ( rot_key , buf , obuf , len )"		1186118	0					
ANR	1186151	Callee	rot_crypt		1186118	0					
ANR	1186152	Identifier	rot_crypt		1186118	0					
ANR	1186153	ArgumentList	rot_key		1186118	1					
ANR	1186154	Argument	rot_key		1186118	0					
ANR	1186155	Identifier	rot_key		1186118	0					
ANR	1186156	Argument	buf		1186118	1					
ANR	1186157	Identifier	buf		1186118	0					
ANR	1186158	Argument	obuf		1186118	2					
ANR	1186159	Identifier	obuf		1186118	0					
ANR	1186160	Argument	len		1186118	3					
ANR	1186161	Identifier	len		1186118	0					
ANR	1186162	ElseStatement	else		1186118	0					
ANR	1186163	IfStatement	if ( flag == 1 )		1186118	0					
ANR	1186164	Condition	flag == 1	79:12:1930:1938	1186118	0	True				
ANR	1186165	EqualityExpression	flag == 1		1186118	0		==			
ANR	1186166	Identifier	flag		1186118	0					
ANR	1186167	PrimaryExpression	1		1186118	1					
ANR	1186168	CompoundStatement		8:23:144:144	1186118	1					
ANR	1186169	ExpressionStatement	"rot_decrypt ( rot_key , buf , obuf , len )"	80:2:1945:1982	1186118	0	True				
ANR	1186170	CallExpression	"rot_decrypt ( rot_key , buf , obuf , len )"		1186118	0					
ANR	1186171	Callee	rot_decrypt		1186118	0					
ANR	1186172	Identifier	rot_decrypt		1186118	0					
ANR	1186173	ArgumentList	rot_key		1186118	1					
ANR	1186174	Argument	rot_key		1186118	0					
ANR	1186175	Identifier	rot_key		1186118	0					
ANR	1186176	Argument	buf		1186118	1					
ANR	1186177	Identifier	buf		1186118	0					
ANR	1186178	Argument	obuf		1186118	2					
ANR	1186179	Identifier	obuf		1186118	0					
ANR	1186180	Argument	len		1186118	3					
ANR	1186181	Identifier	len		1186118	0					
ANR	1186182	ExpressionStatement	"r_crypto_append ( cry , obuf , len )"	82:1:1988:2020	1186118	3	True				
ANR	1186183	CallExpression	"r_crypto_append ( cry , obuf , len )"		1186118	0					
ANR	1186184	Callee	r_crypto_append		1186118	0					
ANR	1186185	Identifier	r_crypto_append		1186118	0					
ANR	1186186	ArgumentList	cry		1186118	1					
ANR	1186187	Argument	cry		1186118	0					
ANR	1186188	Identifier	cry		1186118	0					
ANR	1186189	Argument	obuf		1186118	1					
ANR	1186190	Identifier	obuf		1186118	0					
ANR	1186191	Argument	len		1186118	2					
ANR	1186192	Identifier	len		1186118	0					
ANR	1186193	ExpressionStatement	free ( obuf )	83:1:2023:2034	1186118	4	True				
ANR	1186194	CallExpression	free ( obuf )		1186118	0					
ANR	1186195	Callee	free		1186118	0					
ANR	1186196	Identifier	free		1186118	0					
ANR	1186197	ArgumentList	obuf		1186118	1					
ANR	1186198	Argument	obuf		1186118	0					
ANR	1186199	Identifier	obuf		1186118	0					
ANR	1186200	ReturnStatement	return true ;	84:1:2037:2048	1186118	5	True				
ANR	1186201	Identifier	true		1186118	0					
ANR	1186202	ReturnType	static bool		1186118	1					
ANR	1186203	Identifier	update		1186118	2					
ANR	1186204	ParameterList	"RCrypto * cry , const ut8 * buf , int len"		1186118	3					
ANR	1186205	Parameter	RCrypto * cry	72:19:1757:1768	1186118	0	True				
ANR	1186206	ParameterType	RCrypto *		1186118	0					
ANR	1186207	Identifier	cry		1186118	1					
ANR	1186208	Parameter	const ut8 * buf	72:33:1771:1784	1186118	1	True				
ANR	1186209	ParameterType	const ut8 *		1186118	0					
ANR	1186210	Identifier	buf		1186118	1					
ANR	1186211	Parameter	int len	72:49:1787:1793	1186118	2	True				
ANR	1186212	ParameterType	int		1186118	0					
ANR	1186213	Identifier	len		1186118	1					
ANR	1186214	CFGEntryNode	ENTRY		1186118		True				
ANR	1186215	CFGExitNode	EXIT		1186118		True				
ANR	1186216	Symbol	buf		1186118						
ANR	1186217	Symbol	flag		1186118						
ANR	1186218	Symbol	len		1186118						
ANR	1186219	Symbol	obuf		1186118						
ANR	1186220	Symbol	false		1186118						
ANR	1186221	Symbol	rot_key		1186118						
ANR	1186222	Symbol	true		1186118						
ANR	1186223	Symbol	cry		1186118						
ANR	1186224	Symbol	calloc		1186118						
ANR	1186225	Function	final	87:0:2053:2144							
ANR	1186226	FunctionDef	"final (RCrypto * cry , const ut8 * buf , int len)"		1186225	0					
ANR	1186227	CompoundStatement		87:57:2110:2144	1186225	0					
ANR	1186228	ReturnStatement	"return update ( cry , buf , len ) ;"	88:1:2113:2142	1186225	0	True				
ANR	1186229	CallExpression	"update ( cry , buf , len )"		1186225	0					
ANR	1186230	Callee	update		1186225	0					
ANR	1186231	Identifier	update		1186225	0					
ANR	1186232	ArgumentList	cry		1186225	1					
ANR	1186233	Argument	cry		1186225	0					
ANR	1186234	Identifier	cry		1186225	0					
ANR	1186235	Argument	buf		1186225	1					
ANR	1186236	Identifier	buf		1186225	0					
ANR	1186237	Argument	len		1186225	2					
ANR	1186238	Identifier	len		1186225	0					
ANR	1186239	ReturnType	static bool		1186225	1					
ANR	1186240	Identifier	final		1186225	2					
ANR	1186241	ParameterList	"RCrypto * cry , const ut8 * buf , int len"		1186225	3					
ANR	1186242	Parameter	RCrypto * cry	87:18:2071:2082	1186225	0	True				
ANR	1186243	ParameterType	RCrypto *		1186225	0					
ANR	1186244	Identifier	cry		1186225	1					
ANR	1186245	Parameter	const ut8 * buf	87:32:2085:2098	1186225	1	True				
ANR	1186246	ParameterType	const ut8 *		1186225	0					
ANR	1186247	Identifier	buf		1186225	1					
ANR	1186248	Parameter	int len	87:48:2101:2107	1186225	2	True				
ANR	1186249	ParameterType	int		1186225	0					
ANR	1186250	Identifier	len		1186225	1					
ANR	1186251	CFGEntryNode	ENTRY		1186225		True				
ANR	1186252	CFGExitNode	EXIT		1186225		True				
ANR	1186253	Symbol	buf		1186225						
ANR	1186254	Symbol	len		1186225						
ANR	1186255	Symbol	update		1186225						
ANR	1186256	Symbol	cry		1186225						
ANR	1186257	DeclStmt									
ANR	1186258	Decl							RCryptoPlugin	RCryptoPlugin	r_crypto_plugin_rot
ANR	1186259	DeclStmt									
ANR	1186260	Decl							R_API RLibStruct	R_API RLibStruct	radare_plugin
