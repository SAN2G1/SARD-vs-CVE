command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5066069	File	data/converged/CVE-2019-16718~_radare2/libr_socket_run.c								
ANR	5066070	Function	r_run_new	66:0:1510:1669							
ANR	5066071	FunctionDef	r_run_new (const char * str)		5066070	0					
ANR	5066072	CompoundStatement		66:46:1556:1669	5066070	0					
ANR	5066073	IdentifierDeclStatement	RRunProfile * p = R_NEW0 ( RRunProfile ) ;	67:1:1559:1596	5066070	0	True				
ANR	5066074	IdentifierDecl	* p = R_NEW0 ( RRunProfile )		5066070	0					
ANR	5066075	IdentifierDeclType	RRunProfile *		5066070	0					
ANR	5066076	Identifier	p		5066070	1					
ANR	5066077	AssignmentExpression	* p = R_NEW0 ( RRunProfile )		5066070	2		=			
ANR	5066078	Identifier	p		5066070	0					
ANR	5066079	CallExpression	R_NEW0 ( RRunProfile )		5066070	1					
ANR	5066080	Callee	R_NEW0		5066070	0					
ANR	5066081	Identifier	R_NEW0		5066070	0					
ANR	5066082	ArgumentList	RRunProfile		5066070	1					
ANR	5066083	Argument	RRunProfile		5066070	0					
ANR	5066084	Identifier	RRunProfile		5066070	0					
ANR	5066085	IfStatement	if ( p )		5066070	1					
ANR	5066086	Condition	p	68:5:1603:1603	5066070	0	True				
ANR	5066087	Identifier	p		5066070	0					
ANR	5066088	CompoundStatement		3:8:49:49	5066070	1					
ANR	5066089	ExpressionStatement	r_run_reset ( p )	69:2:1610:1625	5066070	0	True				
ANR	5066090	CallExpression	r_run_reset ( p )		5066070	0					
ANR	5066091	Callee	r_run_reset		5066070	0					
ANR	5066092	Identifier	r_run_reset		5066070	0					
ANR	5066093	ArgumentList	p		5066070	1					
ANR	5066094	Argument	p		5066070	0					
ANR	5066095	Identifier	p		5066070	0					
ANR	5066096	ExpressionStatement	"r_run_parsefile ( p , str )"	70:2:1629:1653	5066070	1	True				
ANR	5066097	CallExpression	"r_run_parsefile ( p , str )"		5066070	0					
ANR	5066098	Callee	r_run_parsefile		5066070	0					
ANR	5066099	Identifier	r_run_parsefile		5066070	0					
ANR	5066100	ArgumentList	p		5066070	1					
ANR	5066101	Argument	p		5066070	0					
ANR	5066102	Identifier	p		5066070	0					
ANR	5066103	Argument	str		5066070	1					
ANR	5066104	Identifier	str		5066070	0					
ANR	5066105	ReturnStatement	return p ;	72:1:1659:1667	5066070	2	True				
ANR	5066106	Identifier	p		5066070	0					
ANR	5066107	ReturnType	R_API RRunProfile *		5066070	1					
ANR	5066108	Identifier	r_run_new		5066070	2					
ANR	5066109	ParameterList	const char * str		5066070	3					
ANR	5066110	Parameter	const char * str	66:29:1539:1553	5066070	0	True				
ANR	5066111	ParameterType	const char *		5066070	0					
ANR	5066112	Identifier	str		5066070	1					
ANR	5066113	CFGEntryNode	ENTRY		5066070		True				
ANR	5066114	CFGExitNode	EXIT		5066070		True				
ANR	5066115	Symbol	str		5066070						
ANR	5066116	Symbol	p		5066070						
ANR	5066117	Symbol	R_NEW0		5066070						
ANR	5066118	Symbol	RRunProfile		5066070						
ANR	5066119	Function	r_run_reset	75:0:1672:1767							
ANR	5066120	FunctionDef	r_run_reset (RRunProfile * p)		5066119	0					
ANR	5066121	CompoundStatement		75:39:1711:1767	5066119	0					
ANR	5066122	ExpressionStatement	"memset ( p , 0 , sizeof ( RRunProfile ) )"	76:1:1714:1749	5066119	0	True				
ANR	5066123	CallExpression	"memset ( p , 0 , sizeof ( RRunProfile ) )"		5066119	0					
ANR	5066124	Callee	memset		5066119	0					
ANR	5066125	Identifier	memset		5066119	0					
ANR	5066126	ArgumentList	p		5066119	1					
ANR	5066127	Argument	p		5066119	0					
ANR	5066128	Identifier	p		5066119	0					
ANR	5066129	Argument	0		5066119	1					
ANR	5066130	PrimaryExpression	0		5066119	0					
ANR	5066131	Argument	sizeof ( RRunProfile )		5066119	2					
ANR	5066132	SizeofExpression	sizeof ( RRunProfile )		5066119	0					
ANR	5066133	Sizeof	sizeof		5066119	0					
ANR	5066134	SizeofOperand	RRunProfile		5066119	1					
ANR	5066135	ExpressionStatement	p -> _aslr = - 1	77:1:1752:1765	5066119	1	True				
ANR	5066136	AssignmentExpression	p -> _aslr = - 1		5066119	0		=			
ANR	5066137	PtrMemberAccess	p -> _aslr		5066119	0					
ANR	5066138	Identifier	p		5066119	0					
ANR	5066139	Identifier	_aslr		5066119	1					
ANR	5066140	UnaryOperationExpression	- 1		5066119	1					
ANR	5066141	UnaryOperator	-		5066119	0					
ANR	5066142	PrimaryExpression	1		5066119	1					
ANR	5066143	ReturnType	R_API void		5066119	1					
ANR	5066144	Identifier	r_run_reset		5066119	2					
ANR	5066145	ParameterList	RRunProfile * p		5066119	3					
ANR	5066146	Parameter	RRunProfile * p	75:23:1695:1708	5066119	0	True				
ANR	5066147	ParameterType	RRunProfile *		5066119	0					
ANR	5066148	Identifier	p		5066119	1					
ANR	5066149	CFGEntryNode	ENTRY		5066119		True				
ANR	5066150	CFGExitNode	EXIT		5066119		True				
ANR	5066151	Symbol	p		5066119						
ANR	5066152	Symbol	p -> _aslr		5066119						
ANR	5066153	Symbol	* p		5066119						
ANR	5066154	Function	r_run_parse	80:0:1770:2099							
ANR	5066155	FunctionDef	"r_run_parse (RRunProfile * pf , const char * profile)"		5066154	0					
ANR	5066156	CompoundStatement		80:61:1831:2099	5066154	0					
ANR	5066157	IfStatement	if ( ! pf || ! profile )		5066154	0					
ANR	5066158	Condition	! pf || ! profile	81:5:1838:1852	5066154	0	True				
ANR	5066159	OrExpression	! pf || ! profile		5066154	0		||			
ANR	5066160	UnaryOperationExpression	! pf		5066154	0					
ANR	5066161	UnaryOperator	!		5066154	0					
ANR	5066162	Identifier	pf		5066154	1					
ANR	5066163	UnaryOperationExpression	! profile		5066154	1					
ANR	5066164	UnaryOperator	!		5066154	0					
ANR	5066165	Identifier	profile		5066154	1					
ANR	5066166	CompoundStatement		2:22:23:23	5066154	1					
ANR	5066167	ReturnStatement	return false ;	82:2:1859:1871	5066154	0	True				
ANR	5066168	Identifier	false		5066154	0					
ANR	5066169	IdentifierDeclStatement	"char * p , * o , * str = strdup ( profile ) ;"	84:1:1877:1913	5066154	1	True				
ANR	5066170	IdentifierDecl	* p		5066154	0					
ANR	5066171	IdentifierDeclType	char *		5066154	0					
ANR	5066172	Identifier	p		5066154	1					
ANR	5066173	IdentifierDecl	* o		5066154	1					
ANR	5066174	IdentifierDeclType	char *		5066154	0					
ANR	5066175	Identifier	o		5066154	1					
ANR	5066176	IdentifierDecl	* str = strdup ( profile )		5066154	2					
ANR	5066177	IdentifierDeclType	char *		5066154	0					
ANR	5066178	Identifier	str		5066154	1					
ANR	5066179	AssignmentExpression	* str = strdup ( profile )		5066154	2		=			
ANR	5066180	Identifier	str		5066154	0					
ANR	5066181	CallExpression	strdup ( profile )		5066154	1					
ANR	5066182	Callee	strdup		5066154	0					
ANR	5066183	Identifier	strdup		5066154	0					
ANR	5066184	ArgumentList	profile		5066154	1					
ANR	5066185	Argument	profile		5066154	0					
ANR	5066186	Identifier	profile		5066154	0					
ANR	5066187	IfStatement	if ( ! str )		5066154	2					
ANR	5066188	Condition	! str	85:5:1920:1923	5066154	0	True				
ANR	5066189	UnaryOperationExpression	! str		5066154	0					
ANR	5066190	UnaryOperator	!		5066154	0					
ANR	5066191	Identifier	str		5066154	1					
ANR	5066192	CompoundStatement		6:11:94:94	5066154	1					
ANR	5066193	ReturnStatement	return false ;	86:2:1930:1942	5066154	0	True				
ANR	5066194	Identifier	false		5066154	0					
ANR	5066195	ExpressionStatement	"r_str_replace_char ( str , '\\r' , 0 )"	88:1:1948:1980	5066154	3	True				
ANR	5066196	CallExpression	"r_str_replace_char ( str , '\\r' , 0 )"		5066154	0					
ANR	5066197	Callee	r_str_replace_char		5066154	0					
ANR	5066198	Identifier	r_str_replace_char		5066154	0					
ANR	5066199	ArgumentList	str		5066154	1					
ANR	5066200	Argument	str		5066154	0					
ANR	5066201	Identifier	str		5066154	0					
ANR	5066202	Argument	'\\r'		5066154	1					
ANR	5066203	PrimaryExpression	'\\r'		5066154	0					
ANR	5066204	Argument	0		5066154	2					
ANR	5066205	PrimaryExpression	0		5066154	0					
ANR	5066206	ForStatement	"for ( p = str ; ( o = strchr ( p , '\\n' ) ) ; p = o )"		5066154	4					
ANR	5066207	ForInit	p = str ;	89:6:1988:1995	5066154	0	True				
ANR	5066208	AssignmentExpression	p = str		5066154	0		=			
ANR	5066209	Identifier	p		5066154	0					
ANR	5066210	Identifier	str		5066154	1					
ANR	5066211	Condition	"o = strchr ( p , '\\n' )"	89:15:1997:2018	5066154	1	True				
ANR	5066212	AssignmentExpression	"o = strchr ( p , '\\n' )"		5066154	0		=			
ANR	5066213	Identifier	o		5066154	0					
ANR	5066214	CallExpression	"strchr ( p , '\\n' )"		5066154	1					
ANR	5066215	Callee	strchr		5066154	0					
ANR	5066216	Identifier	strchr		5066154	0					
ANR	5066217	ArgumentList	p		5066154	1					
ANR	5066218	Argument	p		5066154	0					
ANR	5066219	Identifier	p		5066154	0					
ANR	5066220	Argument	'\\n'		5066154	1					
ANR	5066221	PrimaryExpression	'\\n'		5066154	0					
ANR	5066222	AssignmentExpression	p = o	89:39:2021:2025	5066154	2	True	=			
ANR	5066223	Identifier	p		5066154	0					
ANR	5066224	Identifier	o		5066154	1					
ANR	5066225	CompoundStatement		10:46:196:196	5066154	3					
ANR	5066226	ExpressionStatement	* o ++ = 0	90:2:2032:2040	5066154	0	True				
ANR	5066227	AssignmentExpression	* o ++ = 0		5066154	0		=			
ANR	5066228	UnaryOperationExpression	* o ++		5066154	0					
ANR	5066229	UnaryOperator	*		5066154	0					
ANR	5066230	PostIncDecOperationExpression	o ++		5066154	1					
ANR	5066231	Identifier	o		5066154	0					
ANR	5066232	IncDec	++		5066154	1					
ANR	5066233	PrimaryExpression	0		5066154	1					
ANR	5066234	ExpressionStatement	"r_run_parseline ( pf , p )"	91:2:2044:2067	5066154	1	True				
ANR	5066235	CallExpression	"r_run_parseline ( pf , p )"		5066154	0					
ANR	5066236	Callee	r_run_parseline		5066154	0					
ANR	5066237	Identifier	r_run_parseline		5066154	0					
ANR	5066238	ArgumentList	pf		5066154	1					
ANR	5066239	Argument	pf		5066154	0					
ANR	5066240	Identifier	pf		5066154	0					
ANR	5066241	Argument	p		5066154	1					
ANR	5066242	Identifier	p		5066154	0					
ANR	5066243	ExpressionStatement	free ( str )	93:1:2073:2083	5066154	5	True				
ANR	5066244	CallExpression	free ( str )		5066154	0					
ANR	5066245	Callee	free		5066154	0					
ANR	5066246	Identifier	free		5066154	0					
ANR	5066247	ArgumentList	str		5066154	1					
ANR	5066248	Argument	str		5066154	0					
ANR	5066249	Identifier	str		5066154	0					
ANR	5066250	ReturnStatement	return true ;	94:1:2086:2097	5066154	6	True				
ANR	5066251	Identifier	true		5066154	0					
ANR	5066252	ReturnType	R_API bool		5066154	1					
ANR	5066253	Identifier	r_run_parse		5066154	2					
ANR	5066254	ParameterList	"RRunProfile * pf , const char * profile"		5066154	3					
ANR	5066255	Parameter	RRunProfile * pf	80:23:1793:1807	5066154	0	True				
ANR	5066256	ParameterType	RRunProfile *		5066154	0					
ANR	5066257	Identifier	pf		5066154	1					
ANR	5066258	Parameter	const char * profile	80:40:1810:1828	5066154	1	True				
ANR	5066259	ParameterType	const char *		5066154	0					
ANR	5066260	Identifier	profile		5066154	1					
ANR	5066261	CFGEntryNode	ENTRY		5066154		True				
ANR	5066262	CFGExitNode	EXIT		5066154		True				
ANR	5066263	Symbol	str		5066154						
ANR	5066264	Symbol	p		5066154						
ANR	5066265	Symbol	pf		5066154						
ANR	5066266	Symbol	* o ++		5066154						
ANR	5066267	Symbol	profile		5066154						
ANR	5066268	Symbol	false		5066154						
ANR	5066269	Symbol	true		5066154						
ANR	5066270	Symbol	strchr		5066154						
ANR	5066271	Symbol	strdup		5066154						
ANR	5066272	Symbol	o		5066154						
ANR	5066273	Function	r_run_free	97:0:2102:2399							
ANR	5066274	FunctionDef	r_run_free (RRunProfile * r)		5066273	0					
ANR	5066275	CompoundStatement		97:39:2141:2399	5066273	0					
ANR	5066276	ExpressionStatement	free ( r -> _system )	98:1:2144:2161	5066273	0	True				
ANR	5066277	CallExpression	free ( r -> _system )		5066273	0					
ANR	5066278	Callee	free		5066273	0					
ANR	5066279	Identifier	free		5066273	0					
ANR	5066280	ArgumentList	r -> _system		5066273	1					
ANR	5066281	Argument	r -> _system		5066273	0					
ANR	5066282	PtrMemberAccess	r -> _system		5066273	0					
ANR	5066283	Identifier	r		5066273	0					
ANR	5066284	Identifier	_system		5066273	1					
ANR	5066285	ExpressionStatement	free ( r -> _program )	99:1:2164:2182	5066273	1	True				
ANR	5066286	CallExpression	free ( r -> _program )		5066273	0					
ANR	5066287	Callee	free		5066273	0					
ANR	5066288	Identifier	free		5066273	0					
ANR	5066289	ArgumentList	r -> _program		5066273	1					
ANR	5066290	Argument	r -> _program		5066273	0					
ANR	5066291	PtrMemberAccess	r -> _program		5066273	0					
ANR	5066292	Identifier	r		5066273	0					
ANR	5066293	Identifier	_program		5066273	1					
ANR	5066294	ExpressionStatement	free ( r -> _runlib )	100:1:2185:2202	5066273	2	True				
ANR	5066295	CallExpression	free ( r -> _runlib )		5066273	0					
ANR	5066296	Callee	free		5066273	0					
ANR	5066297	Identifier	free		5066273	0					
ANR	5066298	ArgumentList	r -> _runlib		5066273	1					
ANR	5066299	Argument	r -> _runlib		5066273	0					
ANR	5066300	PtrMemberAccess	r -> _runlib		5066273	0					
ANR	5066301	Identifier	r		5066273	0					
ANR	5066302	Identifier	_runlib		5066273	1					
ANR	5066303	ExpressionStatement	free ( r -> _runlib_fcn )	101:1:2205:2226	5066273	3	True				
ANR	5066304	CallExpression	free ( r -> _runlib_fcn )		5066273	0					
ANR	5066305	Callee	free		5066273	0					
ANR	5066306	Identifier	free		5066273	0					
ANR	5066307	ArgumentList	r -> _runlib_fcn		5066273	1					
ANR	5066308	Argument	r -> _runlib_fcn		5066273	0					
ANR	5066309	PtrMemberAccess	r -> _runlib_fcn		5066273	0					
ANR	5066310	Identifier	r		5066273	0					
ANR	5066311	Identifier	_runlib_fcn		5066273	1					
ANR	5066312	ExpressionStatement	free ( r -> _stdio )	102:1:2229:2245	5066273	4	True				
ANR	5066313	CallExpression	free ( r -> _stdio )		5066273	0					
ANR	5066314	Callee	free		5066273	0					
ANR	5066315	Identifier	free		5066273	0					
ANR	5066316	ArgumentList	r -> _stdio		5066273	1					
ANR	5066317	Argument	r -> _stdio		5066273	0					
ANR	5066318	PtrMemberAccess	r -> _stdio		5066273	0					
ANR	5066319	Identifier	r		5066273	0					
ANR	5066320	Identifier	_stdio		5066273	1					
ANR	5066321	ExpressionStatement	free ( r -> _stdin )	103:1:2248:2264	5066273	5	True				
ANR	5066322	CallExpression	free ( r -> _stdin )		5066273	0					
ANR	5066323	Callee	free		5066273	0					
ANR	5066324	Identifier	free		5066273	0					
ANR	5066325	ArgumentList	r -> _stdin		5066273	1					
ANR	5066326	Argument	r -> _stdin		5066273	0					
ANR	5066327	PtrMemberAccess	r -> _stdin		5066273	0					
ANR	5066328	Identifier	r		5066273	0					
ANR	5066329	Identifier	_stdin		5066273	1					
ANR	5066330	ExpressionStatement	free ( r -> _stdout )	104:1:2267:2284	5066273	6	True				
ANR	5066331	CallExpression	free ( r -> _stdout )		5066273	0					
ANR	5066332	Callee	free		5066273	0					
ANR	5066333	Identifier	free		5066273	0					
ANR	5066334	ArgumentList	r -> _stdout		5066273	1					
ANR	5066335	Argument	r -> _stdout		5066273	0					
ANR	5066336	PtrMemberAccess	r -> _stdout		5066273	0					
ANR	5066337	Identifier	r		5066273	0					
ANR	5066338	Identifier	_stdout		5066273	1					
ANR	5066339	ExpressionStatement	free ( r -> _stderr )	105:1:2287:2304	5066273	7	True				
ANR	5066340	CallExpression	free ( r -> _stderr )		5066273	0					
ANR	5066341	Callee	free		5066273	0					
ANR	5066342	Identifier	free		5066273	0					
ANR	5066343	ArgumentList	r -> _stderr		5066273	1					
ANR	5066344	Argument	r -> _stderr		5066273	0					
ANR	5066345	PtrMemberAccess	r -> _stderr		5066273	0					
ANR	5066346	Identifier	r		5066273	0					
ANR	5066347	Identifier	_stderr		5066273	1					
ANR	5066348	ExpressionStatement	free ( r -> _chgdir )	106:1:2307:2324	5066273	8	True				
ANR	5066349	CallExpression	free ( r -> _chgdir )		5066273	0					
ANR	5066350	Callee	free		5066273	0					
ANR	5066351	Identifier	free		5066273	0					
ANR	5066352	ArgumentList	r -> _chgdir		5066273	1					
ANR	5066353	Argument	r -> _chgdir		5066273	0					
ANR	5066354	PtrMemberAccess	r -> _chgdir		5066273	0					
ANR	5066355	Identifier	r		5066273	0					
ANR	5066356	Identifier	_chgdir		5066273	1					
ANR	5066357	ExpressionStatement	free ( r -> _chroot )	107:1:2327:2344	5066273	9	True				
ANR	5066358	CallExpression	free ( r -> _chroot )		5066273	0					
ANR	5066359	Callee	free		5066273	0					
ANR	5066360	Identifier	free		5066273	0					
ANR	5066361	ArgumentList	r -> _chroot		5066273	1					
ANR	5066362	Argument	r -> _chroot		5066273	0					
ANR	5066363	PtrMemberAccess	r -> _chroot		5066273	0					
ANR	5066364	Identifier	r		5066273	0					
ANR	5066365	Identifier	_chroot		5066273	1					
ANR	5066366	ExpressionStatement	free ( r -> _libpath )	108:1:2347:2365	5066273	10	True				
ANR	5066367	CallExpression	free ( r -> _libpath )		5066273	0					
ANR	5066368	Callee	free		5066273	0					
ANR	5066369	Identifier	free		5066273	0					
ANR	5066370	ArgumentList	r -> _libpath		5066273	1					
ANR	5066371	Argument	r -> _libpath		5066273	0					
ANR	5066372	PtrMemberAccess	r -> _libpath		5066273	0					
ANR	5066373	Identifier	r		5066273	0					
ANR	5066374	Identifier	_libpath		5066273	1					
ANR	5066375	ExpressionStatement	free ( r -> _preload )	109:1:2368:2386	5066273	11	True				
ANR	5066376	CallExpression	free ( r -> _preload )		5066273	0					
ANR	5066377	Callee	free		5066273	0					
ANR	5066378	Identifier	free		5066273	0					
ANR	5066379	ArgumentList	r -> _preload		5066273	1					
ANR	5066380	Argument	r -> _preload		5066273	0					
ANR	5066381	PtrMemberAccess	r -> _preload		5066273	0					
ANR	5066382	Identifier	r		5066273	0					
ANR	5066383	Identifier	_preload		5066273	1					
ANR	5066384	ExpressionStatement	free ( r )	110:1:2389:2397	5066273	12	True				
ANR	5066385	CallExpression	free ( r )		5066273	0					
ANR	5066386	Callee	free		5066273	0					
ANR	5066387	Identifier	free		5066273	0					
ANR	5066388	ArgumentList	r		5066273	1					
ANR	5066389	Argument	r		5066273	0					
ANR	5066390	Identifier	r		5066273	0					
ANR	5066391	ReturnType	R_API void		5066273	1					
ANR	5066392	Identifier	r_run_free		5066273	2					
ANR	5066393	ParameterList	RRunProfile * r		5066273	3					
ANR	5066394	Parameter	RRunProfile * r	97:23:2125:2138	5066273	0	True				
ANR	5066395	ParameterType	RRunProfile *		5066273	0					
ANR	5066396	Identifier	r		5066273	1					
ANR	5066397	CFGEntryNode	ENTRY		5066273		True				
ANR	5066398	CFGExitNode	EXIT		5066273		True				
ANR	5066399	Symbol	r -> _runlib_fcn		5066273						
ANR	5066400	Symbol	r -> _libpath		5066273						
ANR	5066401	Symbol	r -> _chroot		5066273						
ANR	5066402	Symbol	r -> _preload		5066273						
ANR	5066403	Symbol	r -> _runlib		5066273						
ANR	5066404	Symbol	r -> _stdin		5066273						
ANR	5066405	Symbol	r -> _stdio		5066273						
ANR	5066406	Symbol	r -> _program		5066273						
ANR	5066407	Symbol	r		5066273						
ANR	5066408	Symbol	r -> _system		5066273						
ANR	5066409	Symbol	r -> _stderr		5066273						
ANR	5066410	Symbol	r -> _chgdir		5066273						
ANR	5066411	Symbol	r -> _stdout		5066273						
ANR	5066412	Symbol	* r		5066273						
ANR	5066413	Function	set_limit	114:0:2415:2596							
ANR	5066414	FunctionDef	"set_limit (int n , int a , ut64 b)"		5066413	0					
ANR	5066415	CompoundStatement		114:44:2459:2596	5066413	0					
ANR	5066416	IfStatement	if ( n )		5066413	0					
ANR	5066417	Condition	n	115:5:2466:2466	5066413	0	True				
ANR	5066418	Identifier	n		5066413	0					
ANR	5066419	CompoundStatement		3:2:13:38	5066413	1					
ANR	5066420	IdentifierDeclStatement	"struct rlimit cl = { b , b } ;"	116:2:2473:2498	5066413	0	True				
ANR	5066421	IdentifierDecl	"cl = { b , b }"		5066413	0					
ANR	5066422	IdentifierDeclType	struct rlimit		5066413	0					
ANR	5066423	Identifier	cl		5066413	1					
ANR	5066424	AssignmentExpression	"cl = { b , b }"		5066413	2		=			
ANR	5066425	Identifier	cl		5066413	0					
ANR	5066426	InitializerList	b		5066413	1					
ANR	5066427	Identifier	b		5066413	0					
ANR	5066428	Identifier	b		5066413	1					
ANR	5066429	ExpressionStatement	"setrlimit ( RLIMIT_CORE , & cl )"	117:2:2502:2530	5066413	1	True				
ANR	5066430	CallExpression	"setrlimit ( RLIMIT_CORE , & cl )"		5066413	0					
ANR	5066431	Callee	setrlimit		5066413	0					
ANR	5066432	Identifier	setrlimit		5066413	0					
ANR	5066433	ArgumentList	RLIMIT_CORE		5066413	1					
ANR	5066434	Argument	RLIMIT_CORE		5066413	0					
ANR	5066435	Identifier	RLIMIT_CORE		5066413	0					
ANR	5066436	Argument	& cl		5066413	1					
ANR	5066437	UnaryOperationExpression	& cl		5066413	0					
ANR	5066438	UnaryOperator	&		5066413	0					
ANR	5066439	Identifier	cl		5066413	1					
ANR	5066440	ElseStatement	else		5066413	0					
ANR	5066441	CompoundStatement		6:2:84:109	5066413	0					
ANR	5066442	IdentifierDeclStatement	"struct rlimit cl = { 0 , 0 } ;"	119:2:2544:2569	5066413	0	True				
ANR	5066443	IdentifierDecl	"cl = { 0 , 0 }"		5066413	0					
ANR	5066444	IdentifierDeclType	struct rlimit		5066413	0					
ANR	5066445	Identifier	cl		5066413	1					
ANR	5066446	AssignmentExpression	"cl = { 0 , 0 }"		5066413	2		=			
ANR	5066447	Identifier	cl		5066413	0					
ANR	5066448	InitializerList	0		5066413	1					
ANR	5066449	PrimaryExpression	0		5066413	0					
ANR	5066450	PrimaryExpression	0		5066413	1					
ANR	5066451	ExpressionStatement	"setrlimit ( a , & cl )"	120:2:2573:2591	5066413	1	True				
ANR	5066452	CallExpression	"setrlimit ( a , & cl )"		5066413	0					
ANR	5066453	Callee	setrlimit		5066413	0					
ANR	5066454	Identifier	setrlimit		5066413	0					
ANR	5066455	ArgumentList	a		5066413	1					
ANR	5066456	Argument	a		5066413	0					
ANR	5066457	Identifier	a		5066413	0					
ANR	5066458	Argument	& cl		5066413	1					
ANR	5066459	UnaryOperationExpression	& cl		5066413	0					
ANR	5066460	UnaryOperator	&		5066413	0					
ANR	5066461	Identifier	cl		5066413	1					
ANR	5066462	ReturnType	static void		5066413	1					
ANR	5066463	Identifier	set_limit		5066413	2					
ANR	5066464	ParameterList	"int n , int a , ut64 b"		5066413	3					
ANR	5066465	Parameter	int n	114:22:2437:2441	5066413	0	True				
ANR	5066466	ParameterType	int		5066413	0					
ANR	5066467	Identifier	n		5066413	1					
ANR	5066468	Parameter	int a	114:29:2444:2448	5066413	1	True				
ANR	5066469	ParameterType	int		5066413	0					
ANR	5066470	Identifier	a		5066413	1					
ANR	5066471	Parameter	ut64 b	114:36:2451:2456	5066413	2	True				
ANR	5066472	ParameterType	ut64		5066413	0					
ANR	5066473	Identifier	b		5066413	1					
ANR	5066474	CFGEntryNode	ENTRY		5066413		True				
ANR	5066475	CFGExitNode	EXIT		5066413		True				
ANR	5066476	Symbol	RLIMIT_CORE		5066413						
ANR	5066477	Symbol	a		5066413						
ANR	5066478	Symbol	b		5066413						
ANR	5066479	Symbol	& cl		5066413						
ANR	5066480	Symbol	cl		5066413						
ANR	5066481	Symbol	n		5066413						
ANR	5066482	Function	getstr	125:0:2606:4375							
ANR	5066483	FunctionDef	getstr (const char * src)		5066482	0					
ANR	5066484	CompoundStatement		125:37:2643:4375	5066482	0					
ANR	5066485	IdentifierDeclStatement	int len ;	126:1:2646:2653	5066482	0	True				
ANR	5066486	IdentifierDecl	len		5066482	0					
ANR	5066487	IdentifierDeclType	int		5066482	0					
ANR	5066488	Identifier	len		5066482	1					
ANR	5066489	IdentifierDeclStatement	char * ret = NULL ;	127:1:2656:2672	5066482	1	True				
ANR	5066490	IdentifierDecl	* ret = NULL		5066482	0					
ANR	5066491	IdentifierDeclType	char *		5066482	0					
ANR	5066492	Identifier	ret		5066482	1					
ANR	5066493	AssignmentExpression	* ret = NULL		5066482	2		=			
ANR	5066494	Identifier	NULL		5066482	0					
ANR	5066495	Identifier	NULL		5066482	1					
ANR	5066496	SwitchStatement	switch ( * src )		5066482	2					
ANR	5066497	Condition	* src	129:9:2684:2687	5066482	0	True				
ANR	5066498	UnaryOperationExpression	* src		5066482	0					
ANR	5066499	UnaryOperator	*		5066482	0					
ANR	5066500	Identifier	src		5066482	1					
ANR	5066501	CompoundStatement		5:15:46:46	5066482	1					
ANR	5066502	Label	case '\\'' :	130:1:2693:2702	5066482	0	True				
ANR	5066503	ExpressionStatement	ret = strdup ( src + 1 )	131:2:2706:2726	5066482	1	True				
ANR	5066504	AssignmentExpression	ret = strdup ( src + 1 )		5066482	0		=			
ANR	5066505	Identifier	ret		5066482	0					
ANR	5066506	CallExpression	strdup ( src + 1 )		5066482	1					
ANR	5066507	Callee	strdup		5066482	0					
ANR	5066508	Identifier	strdup		5066482	0					
ANR	5066509	ArgumentList	src + 1		5066482	1					
ANR	5066510	Argument	src + 1		5066482	0					
ANR	5066511	AdditiveExpression	src + 1		5066482	0		+			
ANR	5066512	Identifier	src		5066482	0					
ANR	5066513	PrimaryExpression	1		5066482	1					
ANR	5066514	IfStatement	if ( ret )		5066482	2					
ANR	5066515	Condition	ret	132:6:2734:2736	5066482	0	True				
ANR	5066516	Identifier	ret		5066482	0					
ANR	5066517	CompoundStatement		8:11:95:95	5066482	1					
ANR	5066518	ExpressionStatement	len = strlen ( ret )	133:3:2744:2762	5066482	0	True				
ANR	5066519	AssignmentExpression	len = strlen ( ret )		5066482	0		=			
ANR	5066520	Identifier	len		5066482	0					
ANR	5066521	CallExpression	strlen ( ret )		5066482	1					
ANR	5066522	Callee	strlen		5066482	0					
ANR	5066523	Identifier	strlen		5066482	0					
ANR	5066524	ArgumentList	ret		5066482	1					
ANR	5066525	Argument	ret		5066482	0					
ANR	5066526	Identifier	ret		5066482	0					
ANR	5066527	IfStatement	if ( len > 0 )		5066482	1					
ANR	5066528	Condition	len > 0	134:7:2771:2777	5066482	0	True				
ANR	5066529	RelationalExpression	len > 0		5066482	0		>			
ANR	5066530	Identifier	len		5066482	0					
ANR	5066531	PrimaryExpression	0		5066482	1					
ANR	5066532	CompoundStatement		10:16:136:136	5066482	1					
ANR	5066533	ExpressionStatement	len --	135:4:2786:2791	5066482	0	True				
ANR	5066534	PostIncDecOperationExpression	len --		5066482	0					
ANR	5066535	Identifier	len		5066482	0					
ANR	5066536	IncDec	--		5066482	1					
ANR	5066537	IfStatement	if ( ret [ len ] == '\\'' )		5066482	1					
ANR	5066538	Condition	ret [ len ] == '\\''	136:8:2801:2816	5066482	0	True				
ANR	5066539	EqualityExpression	ret [ len ] == '\\''		5066482	0		==			
ANR	5066540	ArrayIndexing	ret [ len ]		5066482	0					
ANR	5066541	Identifier	ret		5066482	0					
ANR	5066542	Identifier	len		5066482	1					
ANR	5066543	PrimaryExpression	'\\''		5066482	1					
ANR	5066544	CompoundStatement		12:26:175:175	5066482	1					
ANR	5066545	ExpressionStatement	ret [ len ] = 0	137:5:2826:2838	5066482	0	True				
ANR	5066546	AssignmentExpression	ret [ len ] = 0		5066482	0		=			
ANR	5066547	ArrayIndexing	ret [ len ]		5066482	0					
ANR	5066548	Identifier	ret		5066482	0					
ANR	5066549	Identifier	len		5066482	1					
ANR	5066550	PrimaryExpression	0		5066482	1					
ANR	5066551	ReturnStatement	return ret ;	138:5:2845:2855	5066482	1	True				
ANR	5066552	Identifier	ret		5066482	0					
ANR	5066553	ExpressionStatement	"eprintf ( ""Missing \\""\\n"" )"	140:4:2867:2891	5066482	2	True				
ANR	5066554	CallExpression	"eprintf ( ""Missing \\""\\n"" )"		5066482	0					
ANR	5066555	Callee	eprintf		5066482	0					
ANR	5066556	Identifier	eprintf		5066482	0					
ANR	5066557	ArgumentList	"""Missing \\""\\n"""		5066482	1					
ANR	5066558	Argument	"""Missing \\""\\n"""		5066482	0					
ANR	5066559	PrimaryExpression	"""Missing \\""\\n"""		5066482	0					
ANR	5066560	ExpressionStatement	free ( ret )	142:3:2901:2911	5066482	2	True				
ANR	5066561	CallExpression	free ( ret )		5066482	0					
ANR	5066562	Callee	free		5066482	0					
ANR	5066563	Identifier	free		5066482	0					
ANR	5066564	ArgumentList	ret		5066482	1					
ANR	5066565	Argument	ret		5066482	0					
ANR	5066566	Identifier	ret		5066482	0					
ANR	5066567	ReturnStatement	return NULL ;	144:2:2919:2930	5066482	3	True				
ANR	5066568	Identifier	NULL		5066482	0					
ANR	5066569	Label	"case '""' :"	145:1:2933:2941	5066482	4	True				
ANR	5066570	ExpressionStatement	ret = strdup ( src + 1 )	146:2:2945:2967	5066482	5	True				
ANR	5066571	AssignmentExpression	ret = strdup ( src + 1 )		5066482	0		=			
ANR	5066572	Identifier	ret		5066482	0					
ANR	5066573	CallExpression	strdup ( src + 1 )		5066482	1					
ANR	5066574	Callee	strdup		5066482	0					
ANR	5066575	Identifier	strdup		5066482	0					
ANR	5066576	ArgumentList	src + 1		5066482	1					
ANR	5066577	Argument	src + 1		5066482	0					
ANR	5066578	AdditiveExpression	src + 1		5066482	0		+			
ANR	5066579	Identifier	src		5066482	0					
ANR	5066580	PrimaryExpression	1		5066482	1					
ANR	5066581	IfStatement	if ( ret )		5066482	6					
ANR	5066582	Condition	ret	147:6:2975:2977	5066482	0	True				
ANR	5066583	Identifier	ret		5066482	0					
ANR	5066584	CompoundStatement		23:11:336:336	5066482	1					
ANR	5066585	ExpressionStatement	len = strlen ( ret )	148:3:2985:3003	5066482	0	True				
ANR	5066586	AssignmentExpression	len = strlen ( ret )		5066482	0		=			
ANR	5066587	Identifier	len		5066482	0					
ANR	5066588	CallExpression	strlen ( ret )		5066482	1					
ANR	5066589	Callee	strlen		5066482	0					
ANR	5066590	Identifier	strlen		5066482	0					
ANR	5066591	ArgumentList	ret		5066482	1					
ANR	5066592	Argument	ret		5066482	0					
ANR	5066593	Identifier	ret		5066482	0					
ANR	5066594	IfStatement	if ( len > 0 )		5066482	1					
ANR	5066595	Condition	len > 0	149:7:3012:3018	5066482	0	True				
ANR	5066596	RelationalExpression	len > 0		5066482	0		>			
ANR	5066597	Identifier	len		5066482	0					
ANR	5066598	PrimaryExpression	0		5066482	1					
ANR	5066599	CompoundStatement		25:16:377:377	5066482	1					
ANR	5066600	ExpressionStatement	len --	150:4:3027:3032	5066482	0	True				
ANR	5066601	PostIncDecOperationExpression	len --		5066482	0					
ANR	5066602	Identifier	len		5066482	0					
ANR	5066603	IncDec	--		5066482	1					
ANR	5066604	IfStatement	"if ( ret [ len ] == '""' )"		5066482	1					
ANR	5066605	Condition	"ret [ len ] == '""'"	151:8:3042:3056	5066482	0	True				
ANR	5066606	EqualityExpression	"ret [ len ] == '""'"		5066482	0		==			
ANR	5066607	ArrayIndexing	ret [ len ]		5066482	0					
ANR	5066608	Identifier	ret		5066482	0					
ANR	5066609	Identifier	len		5066482	1					
ANR	5066610	PrimaryExpression	"'""'"		5066482	1					
ANR	5066611	CompoundStatement		27:25:415:415	5066482	1					
ANR	5066612	ExpressionStatement	ret [ len ] = 0	152:5:3066:3078	5066482	0	True				
ANR	5066613	AssignmentExpression	ret [ len ] = 0		5066482	0		=			
ANR	5066614	ArrayIndexing	ret [ len ]		5066482	0					
ANR	5066615	Identifier	ret		5066482	0					
ANR	5066616	Identifier	len		5066482	1					
ANR	5066617	PrimaryExpression	0		5066482	1					
ANR	5066618	ExpressionStatement	r_str_unescape ( ret )	153:5:3085:3105	5066482	1	True				
ANR	5066619	CallExpression	r_str_unescape ( ret )		5066482	0					
ANR	5066620	Callee	r_str_unescape		5066482	0					
ANR	5066621	Identifier	r_str_unescape		5066482	0					
ANR	5066622	ArgumentList	ret		5066482	1					
ANR	5066623	Argument	ret		5066482	0					
ANR	5066624	Identifier	ret		5066482	0					
ANR	5066625	ReturnStatement	return ret ;	154:5:3112:3122	5066482	2	True				
ANR	5066626	Identifier	ret		5066482	0					
ANR	5066627	ExpressionStatement	"eprintf ( ""Missing \\""\\n"" )"	156:4:3134:3158	5066482	2	True				
ANR	5066628	CallExpression	"eprintf ( ""Missing \\""\\n"" )"		5066482	0					
ANR	5066629	Callee	eprintf		5066482	0					
ANR	5066630	Identifier	eprintf		5066482	0					
ANR	5066631	ArgumentList	"""Missing \\""\\n"""		5066482	1					
ANR	5066632	Argument	"""Missing \\""\\n"""		5066482	0					
ANR	5066633	PrimaryExpression	"""Missing \\""\\n"""		5066482	0					
ANR	5066634	ExpressionStatement	free ( ret )	158:3:3168:3178	5066482	2	True				
ANR	5066635	CallExpression	free ( ret )		5066482	0					
ANR	5066636	Callee	free		5066482	0					
ANR	5066637	Identifier	free		5066482	0					
ANR	5066638	ArgumentList	ret		5066482	1					
ANR	5066639	Argument	ret		5066482	0					
ANR	5066640	Identifier	ret		5066482	0					
ANR	5066641	ReturnStatement	return NULL ;	160:2:3186:3197	5066482	7	True				
ANR	5066642	Identifier	NULL		5066482	0					
ANR	5066643	Label	case '@' :	161:1:3200:3208	5066482	8	True				
ANR	5066644	CompoundStatement		39:3:573:606	5066482	9					
ANR	5066645	IdentifierDeclStatement	"char * pat = strchr ( src + 1 , '@' ) ;"	163:3:3217:3250	5066482	0	True				
ANR	5066646	IdentifierDecl	"* pat = strchr ( src + 1 , '@' )"		5066482	0					
ANR	5066647	IdentifierDeclType	char *		5066482	0					
ANR	5066648	Identifier	pat		5066482	1					
ANR	5066649	AssignmentExpression	"* pat = strchr ( src + 1 , '@' )"		5066482	2		=			
ANR	5066650	Identifier	pat		5066482	0					
ANR	5066651	CallExpression	"strchr ( src + 1 , '@' )"		5066482	1					
ANR	5066652	Callee	strchr		5066482	0					
ANR	5066653	Identifier	strchr		5066482	0					
ANR	5066654	ArgumentList	src + 1		5066482	1					
ANR	5066655	Argument	src + 1		5066482	0					
ANR	5066656	AdditiveExpression	src + 1		5066482	0		+			
ANR	5066657	Identifier	src		5066482	0					
ANR	5066658	PrimaryExpression	1		5066482	1					
ANR	5066659	Argument	'@'		5066482	1					
ANR	5066660	PrimaryExpression	'@'		5066482	0					
ANR	5066661	IfStatement	if ( pat )		5066482	1					
ANR	5066662	Condition	pat	164:7:3259:3261	5066482	0	True				
ANR	5066663	Identifier	pat		5066482	0					
ANR	5066664	CompoundStatement		41:4:626:641	5066482	1					
ANR	5066665	IdentifierDeclStatement	"int i , len , rep ;"	165:4:3270:3285	5066482	0	True				
ANR	5066666	IdentifierDecl	i		5066482	0					
ANR	5066667	IdentifierDeclType	int		5066482	0					
ANR	5066668	Identifier	i		5066482	1					
ANR	5066669	IdentifierDecl	len		5066482	1					
ANR	5066670	IdentifierDeclType	int		5066482	0					
ANR	5066671	Identifier	len		5066482	1					
ANR	5066672	IdentifierDecl	rep		5066482	2					
ANR	5066673	IdentifierDeclType	int		5066482	0					
ANR	5066674	Identifier	rep		5066482	1					
ANR	5066675	ExpressionStatement	* pat ++ = 0	166:4:3291:3301	5066482	1	True				
ANR	5066676	AssignmentExpression	* pat ++ = 0		5066482	0		=			
ANR	5066677	UnaryOperationExpression	* pat ++		5066482	0					
ANR	5066678	UnaryOperator	*		5066482	0					
ANR	5066679	PostIncDecOperationExpression	pat ++		5066482	1					
ANR	5066680	Identifier	pat		5066482	0					
ANR	5066681	IncDec	++		5066482	1					
ANR	5066682	PrimaryExpression	0		5066482	1					
ANR	5066683	ExpressionStatement	rep = atoi ( src + 1 )	167:4:3307:3327	5066482	2	True				
ANR	5066684	AssignmentExpression	rep = atoi ( src + 1 )		5066482	0		=			
ANR	5066685	Identifier	rep		5066482	0					
ANR	5066686	CallExpression	atoi ( src + 1 )		5066482	1					
ANR	5066687	Callee	atoi		5066482	0					
ANR	5066688	Identifier	atoi		5066482	0					
ANR	5066689	ArgumentList	src + 1		5066482	1					
ANR	5066690	Argument	src + 1		5066482	0					
ANR	5066691	AdditiveExpression	src + 1		5066482	0		+			
ANR	5066692	Identifier	src		5066482	0					
ANR	5066693	PrimaryExpression	1		5066482	1					
ANR	5066694	ExpressionStatement	len = strlen ( pat )	168:4:3333:3351	5066482	3	True				
ANR	5066695	AssignmentExpression	len = strlen ( pat )		5066482	0		=			
ANR	5066696	Identifier	len		5066482	0					
ANR	5066697	CallExpression	strlen ( pat )		5066482	1					
ANR	5066698	Callee	strlen		5066482	0					
ANR	5066699	Identifier	strlen		5066482	0					
ANR	5066700	ArgumentList	pat		5066482	1					
ANR	5066701	Argument	pat		5066482	0					
ANR	5066702	Identifier	pat		5066482	0					
ANR	5066703	IfStatement	if ( rep > 0 )		5066482	4					
ANR	5066704	Condition	rep > 0	169:8:3361:3367	5066482	0	True				
ANR	5066705	RelationalExpression	rep > 0		5066482	0		>			
ANR	5066706	Identifier	rep		5066482	0					
ANR	5066707	PrimaryExpression	0		5066482	1					
ANR	5066708	CompoundStatement		46:5:733:757	5066482	1					
ANR	5066709	IdentifierDeclStatement	char * buf = malloc ( rep ) ;	170:5:3377:3401	5066482	0	True				
ANR	5066710	IdentifierDecl	* buf = malloc ( rep )		5066482	0					
ANR	5066711	IdentifierDeclType	char *		5066482	0					
ANR	5066712	Identifier	buf		5066482	1					
ANR	5066713	AssignmentExpression	* buf = malloc ( rep )		5066482	2		=			
ANR	5066714	Identifier	buf		5066482	0					
ANR	5066715	CallExpression	malloc ( rep )		5066482	1					
ANR	5066716	Callee	malloc		5066482	0					
ANR	5066717	Identifier	malloc		5066482	0					
ANR	5066718	ArgumentList	rep		5066482	1					
ANR	5066719	Argument	rep		5066482	0					
ANR	5066720	Identifier	rep		5066482	0					
ANR	5066721	IfStatement	if ( buf )		5066482	1					
ANR	5066722	Condition	buf	171:9:3412:3414	5066482	0	True				
ANR	5066723	Identifier	buf		5066482	0					
ANR	5066724	CompoundStatement		47:14:773:773	5066482	1					
ANR	5066725	ForStatement	for ( i = 0 ; i < rep ; i ++ )		5066482	0					
ANR	5066726	ForInit	i = 0 ;	172:11:3430:3435	5066482	0	True				
ANR	5066727	AssignmentExpression	i = 0		5066482	0		=			
ANR	5066728	Identifier	i		5066482	0					
ANR	5066729	PrimaryExpression	0		5066482	1					
ANR	5066730	Condition	i < rep	172:18:3437:3443	5066482	1	True				
ANR	5066731	RelationalExpression	i < rep		5066482	0		<			
ANR	5066732	Identifier	i		5066482	0					
ANR	5066733	Identifier	rep		5066482	1					
ANR	5066734	PostIncDecOperationExpression	i ++	172:27:3446:3448	5066482	2	True				
ANR	5066735	Identifier	i		5066482	0					
ANR	5066736	IncDec	++		5066482	1					
ANR	5066737	CompoundStatement		48:32:807:807	5066482	3					
ANR	5066738	ExpressionStatement	buf [ i ] = pat [ i % len ]	173:7:3460:3479	5066482	0	True				
ANR	5066739	AssignmentExpression	buf [ i ] = pat [ i % len ]		5066482	0		=			
ANR	5066740	ArrayIndexing	buf [ i ]		5066482	0					
ANR	5066741	Identifier	buf		5066482	0					
ANR	5066742	Identifier	i		5066482	1					
ANR	5066743	ArrayIndexing	pat [ i % len ]		5066482	1					
ANR	5066744	Identifier	pat		5066482	0					
ANR	5066745	MultiplicativeExpression	i % len		5066482	1		%			
ANR	5066746	Identifier	i		5066482	0					
ANR	5066747	Identifier	len		5066482	1					
ANR	5066748	ReturnStatement	return buf ;	176:5:3501:3511	5066482	2	True				
ANR	5066749	Identifier	buf		5066482	0					
ANR	5066750	ReturnStatement	"return r_file_slurp ( src + 1 , NULL ) ;"	180:3:3544:3579	5066482	2	True				
ANR	5066751	CallExpression	"r_file_slurp ( src + 1 , NULL )"		5066482	0					
ANR	5066752	Callee	r_file_slurp		5066482	0					
ANR	5066753	Identifier	r_file_slurp		5066482	0					
ANR	5066754	ArgumentList	src + 1		5066482	1					
ANR	5066755	Argument	src + 1		5066482	0					
ANR	5066756	AdditiveExpression	src + 1		5066482	0		+			
ANR	5066757	Identifier	src		5066482	0					
ANR	5066758	PrimaryExpression	1		5066482	1					
ANR	5066759	Argument	NULL		5066482	1					
ANR	5066760	Identifier	NULL		5066482	0					
ANR	5066761	Label	case '`' :	182:1:3586:3594	5066482	10	True				
ANR	5066762	CompoundStatement		61:2:990:1016	5066482	11					
ANR	5066763	IdentifierDeclStatement	char * msg = strdup ( src + 1 ) ;	184:2:3602:3630	5066482	0	True				
ANR	5066764	IdentifierDecl	* msg = strdup ( src + 1 )		5066482	0					
ANR	5066765	IdentifierDeclType	char *		5066482	0					
ANR	5066766	Identifier	msg		5066482	1					
ANR	5066767	AssignmentExpression	* msg = strdup ( src + 1 )		5066482	2		=			
ANR	5066768	Identifier	msg		5066482	0					
ANR	5066769	CallExpression	strdup ( src + 1 )		5066482	1					
ANR	5066770	Callee	strdup		5066482	0					
ANR	5066771	Identifier	strdup		5066482	0					
ANR	5066772	ArgumentList	src + 1		5066482	1					
ANR	5066773	Argument	src + 1		5066482	0					
ANR	5066774	AdditiveExpression	src + 1		5066482	0		+			
ANR	5066775	Identifier	src		5066482	0					
ANR	5066776	PrimaryExpression	1		5066482	1					
ANR	5066777	IdentifierDeclStatement	int msg_len = strlen ( msg ) ;	185:2:3634:3660	5066482	1	True				
ANR	5066778	IdentifierDecl	msg_len = strlen ( msg )		5066482	0					
ANR	5066779	IdentifierDeclType	int		5066482	0					
ANR	5066780	Identifier	msg_len		5066482	1					
ANR	5066781	AssignmentExpression	msg_len = strlen ( msg )		5066482	2		=			
ANR	5066782	Identifier	msg_len		5066482	0					
ANR	5066783	CallExpression	strlen ( msg )		5066482	1					
ANR	5066784	Callee	strlen		5066482	0					
ANR	5066785	Identifier	strlen		5066482	0					
ANR	5066786	ArgumentList	msg		5066482	1					
ANR	5066787	Argument	msg		5066482	0					
ANR	5066788	Identifier	msg		5066482	0					
ANR	5066789	IfStatement	if ( msg_len > 0 )		5066482	2					
ANR	5066790	Condition	msg_len > 0	186:6:3668:3678	5066482	0	True				
ANR	5066791	RelationalExpression	msg_len > 0		5066482	0		>			
ANR	5066792	Identifier	msg_len		5066482	0					
ANR	5066793	PrimaryExpression	0		5066482	1					
ANR	5066794	CompoundStatement		64:3:1068:1129	5066482	1					
ANR	5066795	ExpressionStatement	msg [ msg_len - 1 ] = 0	187:3:3686:3707	5066482	0	True				
ANR	5066796	AssignmentExpression	msg [ msg_len - 1 ] = 0		5066482	0		=			
ANR	5066797	ArrayIndexing	msg [ msg_len - 1 ]		5066482	0					
ANR	5066798	Identifier	msg		5066482	0					
ANR	5066799	AdditiveExpression	msg_len - 1		5066482	1		-			
ANR	5066800	Identifier	msg_len		5066482	0					
ANR	5066801	PrimaryExpression	1		5066482	1					
ANR	5066802	PrimaryExpression	0		5066482	1					
ANR	5066803	IdentifierDeclStatement	"char * ret = r_str_trim_tail ( r_sys_cmd_str ( msg , NULL , NULL ) ) ;"	188:3:3712:3773	5066482	1	True				
ANR	5066804	IdentifierDecl	"* ret = r_str_trim_tail ( r_sys_cmd_str ( msg , NULL , NULL ) )"		5066482	0					
ANR	5066805	IdentifierDeclType	char *		5066482	0					
ANR	5066806	Identifier	ret		5066482	1					
ANR	5066807	AssignmentExpression	"* ret = r_str_trim_tail ( r_sys_cmd_str ( msg , NULL , NULL ) )"		5066482	2		=			
ANR	5066808	Identifier	ret		5066482	0					
ANR	5066809	CallExpression	"r_str_trim_tail ( r_sys_cmd_str ( msg , NULL , NULL ) )"		5066482	1					
ANR	5066810	Callee	r_str_trim_tail		5066482	0					
ANR	5066811	Identifier	r_str_trim_tail		5066482	0					
ANR	5066812	ArgumentList	"r_sys_cmd_str ( msg , NULL , NULL )"		5066482	1					
ANR	5066813	Argument	"r_sys_cmd_str ( msg , NULL , NULL )"		5066482	0					
ANR	5066814	CallExpression	"r_sys_cmd_str ( msg , NULL , NULL )"		5066482	0					
ANR	5066815	Callee	r_sys_cmd_str		5066482	0					
ANR	5066816	Identifier	r_sys_cmd_str		5066482	0					
ANR	5066817	ArgumentList	msg		5066482	1					
ANR	5066818	Argument	msg		5066482	0					
ANR	5066819	Identifier	msg		5066482	0					
ANR	5066820	Argument	NULL		5066482	1					
ANR	5066821	Identifier	NULL		5066482	0					
ANR	5066822	Argument	NULL		5066482	2					
ANR	5066823	Identifier	NULL		5066482	0					
ANR	5066824	ExpressionStatement	free ( msg )	189:3:3778:3788	5066482	2	True				
ANR	5066825	CallExpression	free ( msg )		5066482	0					
ANR	5066826	Callee	free		5066482	0					
ANR	5066827	Identifier	free		5066482	0					
ANR	5066828	ArgumentList	msg		5066482	1					
ANR	5066829	Argument	msg		5066482	0					
ANR	5066830	Identifier	msg		5066482	0					
ANR	5066831	ReturnStatement	return ret ;	190:3:3793:3803	5066482	3	True				
ANR	5066832	Identifier	ret		5066482	0					
ANR	5066833	ExpressionStatement	free ( msg )	192:2:3811:3821	5066482	3	True				
ANR	5066834	CallExpression	free ( msg )		5066482	0					
ANR	5066835	Callee	free		5066482	0					
ANR	5066836	Identifier	free		5066482	0					
ANR	5066837	ArgumentList	msg		5066482	1					
ANR	5066838	Argument	msg		5066482	0					
ANR	5066839	Identifier	msg		5066482	0					
ANR	5066840	ReturnStatement	"return strdup ( """" ) ;"	193:2:3825:3843	5066482	4	True				
ANR	5066841	CallExpression	"strdup ( """" )"		5066482	0					
ANR	5066842	Callee	strdup		5066482	0					
ANR	5066843	Identifier	strdup		5066482	0					
ANR	5066844	ArgumentList	""""""		5066482	1					
ANR	5066845	Argument	""""""		5066482	0					
ANR	5066846	PrimaryExpression	""""""		5066482	0					
ANR	5066847	Label	case '!' :	195:1:3850:3858	5066482	12	True				
ANR	5066848	ReturnStatement	"return r_str_trim_tail ( r_sys_cmd_str ( src + 1 , NULL , NULL ) ) ;"	196:2:3862:3922	5066482	13	True				
ANR	5066849	CallExpression	"r_str_trim_tail ( r_sys_cmd_str ( src + 1 , NULL , NULL ) )"		5066482	0					
ANR	5066850	Callee	r_str_trim_tail		5066482	0					
ANR	5066851	Identifier	r_str_trim_tail		5066482	0					
ANR	5066852	ArgumentList	"r_sys_cmd_str ( src + 1 , NULL , NULL )"		5066482	1					
ANR	5066853	Argument	"r_sys_cmd_str ( src + 1 , NULL , NULL )"		5066482	0					
ANR	5066854	CallExpression	"r_sys_cmd_str ( src + 1 , NULL , NULL )"		5066482	0					
ANR	5066855	Callee	r_sys_cmd_str		5066482	0					
ANR	5066856	Identifier	r_sys_cmd_str		5066482	0					
ANR	5066857	ArgumentList	src + 1		5066482	1					
ANR	5066858	Argument	src + 1		5066482	0					
ANR	5066859	AdditiveExpression	src + 1		5066482	0		+			
ANR	5066860	Identifier	src		5066482	0					
ANR	5066861	PrimaryExpression	1		5066482	1					
ANR	5066862	Argument	NULL		5066482	1					
ANR	5066863	Identifier	NULL		5066482	0					
ANR	5066864	Argument	NULL		5066482	2					
ANR	5066865	Identifier	NULL		5066482	0					
ANR	5066866	Label	case ':' :	197:1:3925:3933	5066482	14	True				
ANR	5066867	IfStatement	if ( src [ 1 ] == '!' )		5066482	15					
ANR	5066868	Condition	src [ 1 ] == '!'	198:6:3941:3953	5066482	0	True				
ANR	5066869	EqualityExpression	src [ 1 ] == '!'		5066482	0		==			
ANR	5066870	ArrayIndexing	src [ 1 ]		5066482	0					
ANR	5066871	Identifier	src		5066482	0					
ANR	5066872	PrimaryExpression	1		5066482	1					
ANR	5066873	PrimaryExpression	'!'		5066482	1					
ANR	5066874	CompoundStatement		74:21:1312:1312	5066482	1					
ANR	5066875	ExpressionStatement	"ret = r_str_trim_tail ( r_sys_cmd_str ( src + 1 , NULL , NULL ) )"	199:3:3961:4020	5066482	0	True				
ANR	5066876	AssignmentExpression	"ret = r_str_trim_tail ( r_sys_cmd_str ( src + 1 , NULL , NULL ) )"		5066482	0		=			
ANR	5066877	Identifier	ret		5066482	0					
ANR	5066878	CallExpression	"r_str_trim_tail ( r_sys_cmd_str ( src + 1 , NULL , NULL ) )"		5066482	1					
ANR	5066879	Callee	r_str_trim_tail		5066482	0					
ANR	5066880	Identifier	r_str_trim_tail		5066482	0					
ANR	5066881	ArgumentList	"r_sys_cmd_str ( src + 1 , NULL , NULL )"		5066482	1					
ANR	5066882	Argument	"r_sys_cmd_str ( src + 1 , NULL , NULL )"		5066482	0					
ANR	5066883	CallExpression	"r_sys_cmd_str ( src + 1 , NULL , NULL )"		5066482	0					
ANR	5066884	Callee	r_sys_cmd_str		5066482	0					
ANR	5066885	Identifier	r_sys_cmd_str		5066482	0					
ANR	5066886	ArgumentList	src + 1		5066482	1					
ANR	5066887	Argument	src + 1		5066482	0					
ANR	5066888	AdditiveExpression	src + 1		5066482	0		+			
ANR	5066889	Identifier	src		5066482	0					
ANR	5066890	PrimaryExpression	1		5066482	1					
ANR	5066891	Argument	NULL		5066482	1					
ANR	5066892	Identifier	NULL		5066482	0					
ANR	5066893	Argument	NULL		5066482	2					
ANR	5066894	Identifier	NULL		5066482	0					
ANR	5066895	ElseStatement	else		5066482	0					
ANR	5066896	CompoundStatement		76:9:1387:1387	5066482	0					
ANR	5066897	ExpressionStatement	ret = strdup ( src )	201:3:4036:4054	5066482	0	True				
ANR	5066898	AssignmentExpression	ret = strdup ( src )		5066482	0		=			
ANR	5066899	Identifier	ret		5066482	0					
ANR	5066900	CallExpression	strdup ( src )		5066482	1					
ANR	5066901	Callee	strdup		5066482	0					
ANR	5066902	Identifier	strdup		5066482	0					
ANR	5066903	ArgumentList	src		5066482	1					
ANR	5066904	Argument	src		5066482	0					
ANR	5066905	Identifier	src		5066482	0					
ANR	5066906	ExpressionStatement	"len = r_hex_str2bin ( src + 1 , ( ut8 * ) ret )"	203:2:4062:4102	5066482	16	True				
ANR	5066907	AssignmentExpression	"len = r_hex_str2bin ( src + 1 , ( ut8 * ) ret )"		5066482	0		=			
ANR	5066908	Identifier	len		5066482	0					
ANR	5066909	CallExpression	"r_hex_str2bin ( src + 1 , ( ut8 * ) ret )"		5066482	1					
ANR	5066910	Callee	r_hex_str2bin		5066482	0					
ANR	5066911	Identifier	r_hex_str2bin		5066482	0					
ANR	5066912	ArgumentList	src + 1		5066482	1					
ANR	5066913	Argument	src + 1		5066482	0					
ANR	5066914	AdditiveExpression	src + 1		5066482	0		+			
ANR	5066915	Identifier	src		5066482	0					
ANR	5066916	PrimaryExpression	1		5066482	1					
ANR	5066917	Argument	( ut8 * ) ret		5066482	1					
ANR	5066918	CastExpression	( ut8 * ) ret		5066482	0					
ANR	5066919	CastTarget	ut8 *		5066482	0					
ANR	5066920	Identifier	ret		5066482	1					
ANR	5066921	IfStatement	if ( len > 0 )		5066482	17					
ANR	5066922	Condition	len > 0	204:6:4110:4116	5066482	0	True				
ANR	5066923	RelationalExpression	len > 0		5066482	0		>			
ANR	5066924	Identifier	len		5066482	0					
ANR	5066925	PrimaryExpression	0		5066482	1					
ANR	5066926	CompoundStatement		80:15:1475:1475	5066482	1					
ANR	5066927	ExpressionStatement	ret [ len ] = 0	205:3:4124:4136	5066482	0	True				
ANR	5066928	AssignmentExpression	ret [ len ] = 0		5066482	0		=			
ANR	5066929	ArrayIndexing	ret [ len ]		5066482	0					
ANR	5066930	Identifier	ret		5066482	0					
ANR	5066931	Identifier	len		5066482	1					
ANR	5066932	PrimaryExpression	0		5066482	1					
ANR	5066933	ReturnStatement	return ret ;	206:3:4141:4151	5066482	1	True				
ANR	5066934	Identifier	ret		5066482	0					
ANR	5066935	ExpressionStatement	"eprintf ( ""Invalid hexpair string\\n"" )"	208:2:4159:4195	5066482	18	True				
ANR	5066936	CallExpression	"eprintf ( ""Invalid hexpair string\\n"" )"		5066482	0					
ANR	5066937	Callee	eprintf		5066482	0					
ANR	5066938	Identifier	eprintf		5066482	0					
ANR	5066939	ArgumentList	"""Invalid hexpair string\\n"""		5066482	1					
ANR	5066940	Argument	"""Invalid hexpair string\\n"""		5066482	0					
ANR	5066941	PrimaryExpression	"""Invalid hexpair string\\n"""		5066482	0					
ANR	5066942	ExpressionStatement	free ( ret )	209:2:4199:4209	5066482	19	True				
ANR	5066943	CallExpression	free ( ret )		5066482	0					
ANR	5066944	Callee	free		5066482	0					
ANR	5066945	Identifier	free		5066482	0					
ANR	5066946	ArgumentList	ret		5066482	1					
ANR	5066947	Argument	ret		5066482	0					
ANR	5066948	Identifier	ret		5066482	0					
ANR	5066949	ReturnStatement	return NULL ;	210:2:4213:4224	5066482	20	True				
ANR	5066950	Identifier	NULL		5066482	0					
ANR	5066951	Label	case '%' :	213:1:4256:4264	5066482	21	True				
ANR	5066952	ReturnStatement	"return ( char * ) strtoul ( src + 1 , NULL , 0 ) ;"	214:2:4268:4310	5066482	22	True				
ANR	5066953	CastExpression	"( char * ) strtoul ( src + 1 , NULL , 0 )"		5066482	0					
ANR	5066954	CastTarget	char *		5066482	0					
ANR	5066955	CallExpression	"strtoul ( src + 1 , NULL , 0 )"		5066482	1					
ANR	5066956	Callee	strtoul		5066482	0					
ANR	5066957	Identifier	strtoul		5066482	0					
ANR	5066958	ArgumentList	src + 1		5066482	1					
ANR	5066959	Argument	src + 1		5066482	0					
ANR	5066960	AdditiveExpression	src + 1		5066482	0		+			
ANR	5066961	Identifier	src		5066482	0					
ANR	5066962	PrimaryExpression	1		5066482	1					
ANR	5066963	Argument	NULL		5066482	1					
ANR	5066964	Identifier	NULL		5066482	0					
ANR	5066965	Argument	0		5066482	2					
ANR	5066966	PrimaryExpression	0		5066482	0					
ANR	5066967	ExpressionStatement	r_str_unescape ( ( ret = strdup ( src ) ) )	217:1:4323:4360	5066482	3	True				
ANR	5066968	CallExpression	r_str_unescape ( ( ret = strdup ( src ) ) )		5066482	0					
ANR	5066969	Callee	r_str_unescape		5066482	0					
ANR	5066970	Identifier	r_str_unescape		5066482	0					
ANR	5066971	ArgumentList	ret = strdup ( src )		5066482	1					
ANR	5066972	Argument	ret = strdup ( src )		5066482	0					
ANR	5066973	AssignmentExpression	ret = strdup ( src )		5066482	0		=			
ANR	5066974	Identifier	ret		5066482	0					
ANR	5066975	CallExpression	strdup ( src )		5066482	1					
ANR	5066976	Callee	strdup		5066482	0					
ANR	5066977	Identifier	strdup		5066482	0					
ANR	5066978	ArgumentList	src		5066482	1					
ANR	5066979	Argument	src		5066482	0					
ANR	5066980	Identifier	src		5066482	0					
ANR	5066981	ReturnStatement	return ret ;	218:1:4363:4373	5066482	4	True				
ANR	5066982	Identifier	ret		5066482	0					
ANR	5066983	ReturnType	static char *		5066482	1					
ANR	5066984	Identifier	getstr		5066482	2					
ANR	5066985	ParameterList	const char * src		5066482	3					
ANR	5066986	Parameter	const char * src	125:20:2626:2640	5066482	0	True				
ANR	5066987	ParameterType	const char *		5066482	0					
ANR	5066988	Identifier	src		5066482	1					
ANR	5066989	CFGEntryNode	ENTRY		5066482		True				
ANR	5066990	CFGExitNode	EXIT		5066482		True				
ANR	5066991	Symbol	msg		5066482						
ANR	5066992	Symbol	strchr		5066482						
ANR	5066993	Symbol	* ret		5066482						
ANR	5066994	Symbol	msg_len		5066482						
ANR	5066995	Symbol	* pat		5066482						
ANR	5066996	Symbol	* src		5066482						
ANR	5066997	Symbol	* pat ++		5066482						
ANR	5066998	Symbol	strlen		5066482						
ANR	5066999	Symbol	r_sys_cmd_str		5066482						
ANR	5067000	Symbol	len		5066482						
ANR	5067001	Symbol	strtoul		5066482						
ANR	5067002	Symbol	rep		5066482						
ANR	5067003	Symbol	* msg_len		5066482						
ANR	5067004	Symbol	r_hex_str2bin		5066482						
ANR	5067005	Symbol	ret		5066482						
ANR	5067006	Symbol	atoi		5066482						
ANR	5067007	Symbol	malloc		5066482						
ANR	5067008	Symbol	pat		5066482						
ANR	5067009	Symbol	* buf		5066482						
ANR	5067010	Symbol	r_file_slurp		5066482						
ANR	5067011	Symbol	NULL		5066482						
ANR	5067012	Symbol	src		5066482						
ANR	5067013	Symbol	i		5066482						
ANR	5067014	Symbol	* msg		5066482						
ANR	5067015	Symbol	r_str_trim_tail		5066482						
ANR	5067016	Symbol	buf		5066482						
ANR	5067017	Symbol	* i		5066482						
ANR	5067018	Symbol	strdup		5066482						
ANR	5067019	Symbol	* len		5066482						
ANR	5067020	Function	parseBool	221:0:4378:4529							
ANR	5067021	FunctionDef	parseBool (const char * e)		5067020	0					
ANR	5067022	CompoundStatement		221:36:4414:4529	5067020	0					
ANR	5067023	ReturnStatement	"return ( strcmp ( e , ""yes"" ) ? ( strcmp ( e , ""on"" ) ? ( strcmp ( e , ""true"" ) ? ( strcmp ( e , ""1"" ) ? 0 : 1 ) : 1 ) : 1 ) : 1 ) ;"	222:1:4417:4527	5067020	0	True				
ANR	5067024	ConditionalExpression	"strcmp ( e , ""yes"" ) ? ( strcmp ( e , ""on"" ) ? ( strcmp ( e , ""true"" ) ? ( strcmp ( e , ""1"" ) ? 0 : 1 ) : 1 ) : 1 ) : 1"		5067020	0					
ANR	5067025	Condition	"strcmp ( e , ""yes"" )"		5067020	0					
ANR	5067026	CallExpression	"strcmp ( e , ""yes"" )"		5067020	0					
ANR	5067027	Callee	strcmp		5067020	0					
ANR	5067028	Identifier	strcmp		5067020	0					
ANR	5067029	ArgumentList	e		5067020	1					
ANR	5067030	Argument	e		5067020	0					
ANR	5067031	Identifier	e		5067020	0					
ANR	5067032	Argument	"""yes"""		5067020	1					
ANR	5067033	PrimaryExpression	"""yes"""		5067020	0					
ANR	5067034	ConditionalExpression	"strcmp ( e , ""on"" ) ? ( strcmp ( e , ""true"" ) ? ( strcmp ( e , ""1"" ) ? 0 : 1 ) : 1 ) : 1"		5067020	1					
ANR	5067035	Condition	"strcmp ( e , ""on"" )"		5067020	0					
ANR	5067036	CallExpression	"strcmp ( e , ""on"" )"		5067020	0					
ANR	5067037	Callee	strcmp		5067020	0					
ANR	5067038	Identifier	strcmp		5067020	0					
ANR	5067039	ArgumentList	e		5067020	1					
ANR	5067040	Argument	e		5067020	0					
ANR	5067041	Identifier	e		5067020	0					
ANR	5067042	Argument	"""on"""		5067020	1					
ANR	5067043	PrimaryExpression	"""on"""		5067020	0					
ANR	5067044	ConditionalExpression	"strcmp ( e , ""true"" ) ? ( strcmp ( e , ""1"" ) ? 0 : 1 ) : 1"		5067020	1					
ANR	5067045	Condition	"strcmp ( e , ""true"" )"		5067020	0					
ANR	5067046	CallExpression	"strcmp ( e , ""true"" )"		5067020	0					
ANR	5067047	Callee	strcmp		5067020	0					
ANR	5067048	Identifier	strcmp		5067020	0					
ANR	5067049	ArgumentList	e		5067020	1					
ANR	5067050	Argument	e		5067020	0					
ANR	5067051	Identifier	e		5067020	0					
ANR	5067052	Argument	"""true"""		5067020	1					
ANR	5067053	PrimaryExpression	"""true"""		5067020	0					
ANR	5067054	ConditionalExpression	"strcmp ( e , ""1"" ) ? 0 : 1"		5067020	1					
ANR	5067055	Condition	"strcmp ( e , ""1"" )"		5067020	0					
ANR	5067056	CallExpression	"strcmp ( e , ""1"" )"		5067020	0					
ANR	5067057	Callee	strcmp		5067020	0					
ANR	5067058	Identifier	strcmp		5067020	0					
ANR	5067059	ArgumentList	e		5067020	1					
ANR	5067060	Argument	e		5067020	0					
ANR	5067061	Identifier	e		5067020	0					
ANR	5067062	Argument	"""1"""		5067020	1					
ANR	5067063	PrimaryExpression	"""1"""		5067020	0					
ANR	5067064	PrimaryExpression	0		5067020	1					
ANR	5067065	PrimaryExpression	1		5067020	2					
ANR	5067066	PrimaryExpression	1		5067020	2					
ANR	5067067	PrimaryExpression	1		5067020	2					
ANR	5067068	PrimaryExpression	1		5067020	2					
ANR	5067069	ReturnType	static int		5067020	1					
ANR	5067070	Identifier	parseBool		5067020	2					
ANR	5067071	ParameterList	const char * e		5067020	3					
ANR	5067072	Parameter	const char * e	221:21:4399:4411	5067020	0	True				
ANR	5067073	ParameterType	const char *		5067020	0					
ANR	5067074	Identifier	e		5067020	1					
ANR	5067075	CFGEntryNode	ENTRY		5067020		True				
ANR	5067076	CFGExitNode	EXIT		5067020		True				
ANR	5067077	Symbol	strcmp		5067020						
ANR	5067078	Symbol	e		5067020						
ANR	5067079	Function	setASLR	230:0:4595:5490							
ANR	5067080	FunctionDef	"setASLR (RRunProfile * r , int enabled)"		5067079	0					
ANR	5067081	CompoundStatement		230:49:4644:5490	5067079	0					
ANR	5067082	ExpressionStatement	r_sys_aslr ( enabled )	232:1:4661:4681	5067079	0	True				
ANR	5067083	CallExpression	r_sys_aslr ( enabled )		5067079	0					
ANR	5067084	Callee	r_sys_aslr		5067079	0					
ANR	5067085	Identifier	r_sys_aslr		5067079	0					
ANR	5067086	ArgumentList	enabled		5067079	1					
ANR	5067087	Argument	enabled		5067079	0					
ANR	5067088	Identifier	enabled		5067079	0					
ANR	5067089	IfStatement	if ( personality ( ADDR_NO_RANDOMIZE ) == - 1 )		5067079	1					
ANR	5067090	Condition	personality ( ADDR_NO_RANDOMIZE ) == - 1	234:5:4736:4772	5067079	0	True				
ANR	5067091	EqualityExpression	personality ( ADDR_NO_RANDOMIZE ) == - 1		5067079	0		==			
ANR	5067092	CallExpression	personality ( ADDR_NO_RANDOMIZE )		5067079	0					
ANR	5067093	Callee	personality		5067079	0					
ANR	5067094	Identifier	personality		5067079	0					
ANR	5067095	ArgumentList	ADDR_NO_RANDOMIZE		5067079	1					
ANR	5067096	Argument	ADDR_NO_RANDOMIZE		5067079	0					
ANR	5067097	Identifier	ADDR_NO_RANDOMIZE		5067079	0					
ANR	5067098	UnaryOperationExpression	- 1		5067079	1					
ANR	5067099	UnaryOperator	-		5067079	0					
ANR	5067100	PrimaryExpression	1		5067079	1					
ANR	5067101	CompoundStatement		5:44:130:130	5067079	1					
ANR	5067102	ExpressionStatement	r_sys_aslr ( 0 )	236:2:4786:4800	5067079	0	True				
ANR	5067103	CallExpression	r_sys_aslr ( 0 )		5067079	0					
ANR	5067104	Callee	r_sys_aslr		5067079	0					
ANR	5067105	Identifier	r_sys_aslr		5067079	0					
ANR	5067106	ArgumentList	0		5067079	1					
ANR	5067107	Argument	0		5067079	0					
ANR	5067108	PrimaryExpression	0		5067079	0					
ANR	5067109	ReturnType	static void		5067079	1					
ANR	5067110	Identifier	setASLR		5067079	2					
ANR	5067111	ParameterList	"RRunProfile * r , int enabled"		5067079	3					
ANR	5067112	Parameter	RRunProfile * r	230:20:4615:4628	5067079	0	True				
ANR	5067113	ParameterType	RRunProfile *		5067079	0					
ANR	5067114	Identifier	r		5067079	1					
ANR	5067115	Parameter	int enabled	230:36:4631:4641	5067079	1	True				
ANR	5067116	ParameterType	int		5067079	0					
ANR	5067117	Identifier	enabled		5067079	1					
ANR	5067118	CFGEntryNode	ENTRY		5067079		True				
ANR	5067119	CFGExitNode	EXIT		5067079		True				
ANR	5067120	Symbol	r		5067079						
ANR	5067121	Symbol	personality		5067079						
ANR	5067122	Symbol	ADDR_NO_RANDOMIZE		5067079						
ANR	5067123	Symbol	enabled		5067079						
ANR	5067124	Function	restore_saved_fd	261:0:5506:5658							
ANR	5067125	FunctionDef	"restore_saved_fd (int saved , bool restore , int fd)"		5067124	0					
ANR	5067126	CompoundStatement		261:62:5568:5658	5067124	0					
ANR	5067127	IfStatement	if ( saved == - 1 )		5067124	0					
ANR	5067128	Condition	saved == - 1	262:5:5575:5585	5067124	0	True				
ANR	5067129	EqualityExpression	saved == - 1		5067124	0		==			
ANR	5067130	Identifier	saved		5067124	0					
ANR	5067131	UnaryOperationExpression	- 1		5067124	1					
ANR	5067132	UnaryOperator	-		5067124	0					
ANR	5067133	PrimaryExpression	1		5067124	1					
ANR	5067134	CompoundStatement		2:18:19:19	5067124	1					
ANR	5067135	ReturnStatement	return ;	263:2:5592:5598	5067124	0	True				
ANR	5067136	IfStatement	if ( restore )		5067124	1					
ANR	5067137	Condition	restore	265:5:5608:5614	5067124	0	True				
ANR	5067138	Identifier	restore		5067124	0					
ANR	5067139	CompoundStatement		5:14:48:48	5067124	1					
ANR	5067140	ExpressionStatement	"dup2 ( saved , fd )"	266:2:5621:5637	5067124	0	True				
ANR	5067141	CallExpression	"dup2 ( saved , fd )"		5067124	0					
ANR	5067142	Callee	dup2		5067124	0					
ANR	5067143	Identifier	dup2		5067124	0					
ANR	5067144	ArgumentList	saved		5067124	1					
ANR	5067145	Argument	saved		5067124	0					
ANR	5067146	Identifier	saved		5067124	0					
ANR	5067147	Argument	fd		5067124	1					
ANR	5067148	Identifier	fd		5067124	0					
ANR	5067149	ExpressionStatement	close ( saved )	268:1:5643:5656	5067124	2	True				
ANR	5067150	CallExpression	close ( saved )		5067124	0					
ANR	5067151	Callee	close		5067124	0					
ANR	5067152	Identifier	close		5067124	0					
ANR	5067153	ArgumentList	saved		5067124	1					
ANR	5067154	Argument	saved		5067124	0					
ANR	5067155	Identifier	saved		5067124	0					
ANR	5067156	ReturnType	static void		5067124	1					
ANR	5067157	Identifier	restore_saved_fd		5067124	2					
ANR	5067158	ParameterList	"int saved , bool restore , int fd"		5067124	3					
ANR	5067159	Parameter	int saved	261:29:5535:5543	5067124	0	True				
ANR	5067160	ParameterType	int		5067124	0					
ANR	5067161	Identifier	saved		5067124	1					
ANR	5067162	Parameter	bool restore	261:40:5546:5557	5067124	1	True				
ANR	5067163	ParameterType	bool		5067124	0					
ANR	5067164	Identifier	restore		5067124	1					
ANR	5067165	Parameter	int fd	261:54:5560:5565	5067124	2	True				
ANR	5067166	ParameterType	int		5067124	0					
ANR	5067167	Identifier	fd		5067124	1					
ANR	5067168	CFGEntryNode	ENTRY		5067124		True				
ANR	5067169	CFGExitNode	EXIT		5067124		True				
ANR	5067170	Symbol	restore		5067124						
ANR	5067171	Symbol	saved		5067124						
ANR	5067172	Symbol	fd		5067124						
ANR	5067173	Function	handle_redirection_proc	272:0:5668:7358							
ANR	5067174	FunctionDef	"handle_redirection_proc (const char * cmd , bool in , bool out , bool err)"		5067173	0					
ANR	5067175	CompoundStatement		272:81:5749:7358	5067173	0					
ANR	5067176	IdentifierDeclStatement	int saved_stdin = dup ( STDIN_FILENO ) ;	276:1:5863:5899	5067173	0	True				
ANR	5067177	IdentifierDecl	saved_stdin = dup ( STDIN_FILENO )		5067173	0					
ANR	5067178	IdentifierDeclType	int		5067173	0					
ANR	5067179	Identifier	saved_stdin		5067173	1					
ANR	5067180	AssignmentExpression	saved_stdin = dup ( STDIN_FILENO )		5067173	2		=			
ANR	5067181	Identifier	saved_stdin		5067173	0					
ANR	5067182	CallExpression	dup ( STDIN_FILENO )		5067173	1					
ANR	5067183	Callee	dup		5067173	0					
ANR	5067184	Identifier	dup		5067173	0					
ANR	5067185	ArgumentList	STDIN_FILENO		5067173	1					
ANR	5067186	Argument	STDIN_FILENO		5067173	0					
ANR	5067187	Identifier	STDIN_FILENO		5067173	0					
ANR	5067188	IfStatement	if ( saved_stdin == - 1 )		5067173	1					
ANR	5067189	Condition	saved_stdin == - 1	277:5:5906:5922	5067173	0	True				
ANR	5067190	EqualityExpression	saved_stdin == - 1		5067173	0		==			
ANR	5067191	Identifier	saved_stdin		5067173	0					
ANR	5067192	UnaryOperationExpression	- 1		5067173	1					
ANR	5067193	UnaryOperator	-		5067173	0					
ANR	5067194	PrimaryExpression	1		5067173	1					
ANR	5067195	CompoundStatement		6:24:175:175	5067173	1					
ANR	5067196	ReturnStatement	return - 1 ;	278:2:5929:5938	5067173	0	True				
ANR	5067197	UnaryOperationExpression	- 1		5067173	0					
ANR	5067198	UnaryOperator	-		5067173	0					
ANR	5067199	PrimaryExpression	1		5067173	1					
ANR	5067200	IdentifierDeclStatement	int saved_stdout = dup ( STDOUT_FILENO ) ;	280:1:5944:5982	5067173	2	True				
ANR	5067201	IdentifierDecl	saved_stdout = dup ( STDOUT_FILENO )		5067173	0					
ANR	5067202	IdentifierDeclType	int		5067173	0					
ANR	5067203	Identifier	saved_stdout		5067173	1					
ANR	5067204	AssignmentExpression	saved_stdout = dup ( STDOUT_FILENO )		5067173	2		=			
ANR	5067205	Identifier	saved_stdout		5067173	0					
ANR	5067206	CallExpression	dup ( STDOUT_FILENO )		5067173	1					
ANR	5067207	Callee	dup		5067173	0					
ANR	5067208	Identifier	dup		5067173	0					
ANR	5067209	ArgumentList	STDOUT_FILENO		5067173	1					
ANR	5067210	Argument	STDOUT_FILENO		5067173	0					
ANR	5067211	Identifier	STDOUT_FILENO		5067173	0					
ANR	5067212	IfStatement	if ( saved_stdout == - 1 )		5067173	3					
ANR	5067213	Condition	saved_stdout == - 1	281:5:5989:6005	5067173	0	True				
ANR	5067214	EqualityExpression	saved_stdout == - 1		5067173	0		==			
ANR	5067215	Identifier	saved_stdout		5067173	0					
ANR	5067216	UnaryOperationExpression	- 1		5067173	1					
ANR	5067217	UnaryOperator	-		5067173	0					
ANR	5067218	PrimaryExpression	1		5067173	1					
ANR	5067219	CompoundStatement		10:24:258:258	5067173	1					
ANR	5067220	ExpressionStatement	close ( saved_stdin )	282:2:6012:6031	5067173	0	True				
ANR	5067221	CallExpression	close ( saved_stdin )		5067173	0					
ANR	5067222	Callee	close		5067173	0					
ANR	5067223	Identifier	close		5067173	0					
ANR	5067224	ArgumentList	saved_stdin		5067173	1					
ANR	5067225	Argument	saved_stdin		5067173	0					
ANR	5067226	Identifier	saved_stdin		5067173	0					
ANR	5067227	ReturnStatement	return - 1 ;	283:2:6035:6044	5067173	1	True				
ANR	5067228	UnaryOperationExpression	- 1		5067173	0					
ANR	5067229	UnaryOperator	-		5067173	0					
ANR	5067230	PrimaryExpression	1		5067173	1					
ANR	5067231	IdentifierDeclStatement	"int fdm , pid = forkpty ( & fdm , NULL , NULL , NULL ) ;"	285:1:6050:6097	5067173	4	True				
ANR	5067232	IdentifierDecl	fdm		5067173	0					
ANR	5067233	IdentifierDeclType	int		5067173	0					
ANR	5067234	Identifier	fdm		5067173	1					
ANR	5067235	IdentifierDecl	"pid = forkpty ( & fdm , NULL , NULL , NULL )"		5067173	1					
ANR	5067236	IdentifierDeclType	int		5067173	0					
ANR	5067237	Identifier	pid		5067173	1					
ANR	5067238	AssignmentExpression	"pid = forkpty ( & fdm , NULL , NULL , NULL )"		5067173	2		=			
ANR	5067239	Identifier	pid		5067173	0					
ANR	5067240	CallExpression	"forkpty ( & fdm , NULL , NULL , NULL )"		5067173	1					
ANR	5067241	Callee	forkpty		5067173	0					
ANR	5067242	Identifier	forkpty		5067173	0					
ANR	5067243	ArgumentList	& fdm		5067173	1					
ANR	5067244	Argument	& fdm		5067173	0					
ANR	5067245	UnaryOperationExpression	& fdm		5067173	0					
ANR	5067246	UnaryOperator	&		5067173	0					
ANR	5067247	Identifier	fdm		5067173	1					
ANR	5067248	Argument	NULL		5067173	1					
ANR	5067249	Identifier	NULL		5067173	0					
ANR	5067250	Argument	NULL		5067173	2					
ANR	5067251	Identifier	NULL		5067173	0					
ANR	5067252	Argument	NULL		5067173	3					
ANR	5067253	Identifier	NULL		5067173	0					
ANR	5067254	IfStatement	if ( pid == - 1 )		5067173	5					
ANR	5067255	Condition	pid == - 1	286:5:6104:6112	5067173	0	True				
ANR	5067256	EqualityExpression	pid == - 1		5067173	0		==			
ANR	5067257	Identifier	pid		5067173	0					
ANR	5067258	UnaryOperationExpression	- 1		5067173	1					
ANR	5067259	UnaryOperator	-		5067173	0					
ANR	5067260	PrimaryExpression	1		5067173	1					
ANR	5067261	CompoundStatement		15:16:365:365	5067173	1					
ANR	5067262	ExpressionStatement	close ( saved_stdin )	287:2:6119:6138	5067173	0	True				
ANR	5067263	CallExpression	close ( saved_stdin )		5067173	0					
ANR	5067264	Callee	close		5067173	0					
ANR	5067265	Identifier	close		5067173	0					
ANR	5067266	ArgumentList	saved_stdin		5067173	1					
ANR	5067267	Argument	saved_stdin		5067173	0					
ANR	5067268	Identifier	saved_stdin		5067173	0					
ANR	5067269	ExpressionStatement	close ( saved_stdout )	288:2:6142:6162	5067173	1	True				
ANR	5067270	CallExpression	close ( saved_stdout )		5067173	0					
ANR	5067271	Callee	close		5067173	0					
ANR	5067272	Identifier	close		5067173	0					
ANR	5067273	ArgumentList	saved_stdout		5067173	1					
ANR	5067274	Argument	saved_stdout		5067173	0					
ANR	5067275	Identifier	saved_stdout		5067173	0					
ANR	5067276	ReturnStatement	return - 1 ;	289:2:6166:6175	5067173	2	True				
ANR	5067277	UnaryOperationExpression	- 1		5067173	0					
ANR	5067278	UnaryOperator	-		5067173	0					
ANR	5067279	PrimaryExpression	1		5067173	1					
ANR	5067280	IdentifierDeclStatement	const char * tn = ttyname ( fdm ) ;	291:1:6181:6211	5067173	6	True				
ANR	5067281	IdentifierDecl	* tn = ttyname ( fdm )		5067173	0					
ANR	5067282	IdentifierDeclType	const char *		5067173	0					
ANR	5067283	Identifier	tn		5067173	1					
ANR	5067284	AssignmentExpression	* tn = ttyname ( fdm )		5067173	2		=			
ANR	5067285	Identifier	tn		5067173	0					
ANR	5067286	CallExpression	ttyname ( fdm )		5067173	1					
ANR	5067287	Callee	ttyname		5067173	0					
ANR	5067288	Identifier	ttyname		5067173	0					
ANR	5067289	ArgumentList	fdm		5067173	1					
ANR	5067290	Argument	fdm		5067173	0					
ANR	5067291	Identifier	fdm		5067173	0					
ANR	5067292	IfStatement	if ( ! tn )		5067173	7					
ANR	5067293	Condition	! tn	292:5:6218:6220	5067173	0	True				
ANR	5067294	UnaryOperationExpression	! tn		5067173	0					
ANR	5067295	UnaryOperator	!		5067173	0					
ANR	5067296	Identifier	tn		5067173	1					
ANR	5067297	CompoundStatement		21:10:473:473	5067173	1					
ANR	5067298	ExpressionStatement	close ( saved_stdin )	293:2:6227:6246	5067173	0	True				
ANR	5067299	CallExpression	close ( saved_stdin )		5067173	0					
ANR	5067300	Callee	close		5067173	0					
ANR	5067301	Identifier	close		5067173	0					
ANR	5067302	ArgumentList	saved_stdin		5067173	1					
ANR	5067303	Argument	saved_stdin		5067173	0					
ANR	5067304	Identifier	saved_stdin		5067173	0					
ANR	5067305	ExpressionStatement	close ( saved_stdout )	294:2:6250:6270	5067173	1	True				
ANR	5067306	CallExpression	close ( saved_stdout )		5067173	0					
ANR	5067307	Callee	close		5067173	0					
ANR	5067308	Identifier	close		5067173	0					
ANR	5067309	ArgumentList	saved_stdout		5067173	1					
ANR	5067310	Argument	saved_stdout		5067173	0					
ANR	5067311	Identifier	saved_stdout		5067173	0					
ANR	5067312	ReturnStatement	return - 1 ;	295:2:6274:6283	5067173	2	True				
ANR	5067313	UnaryOperationExpression	- 1		5067173	0					
ANR	5067314	UnaryOperator	-		5067173	0					
ANR	5067315	PrimaryExpression	1		5067173	1					
ANR	5067316	IdentifierDeclStatement	"int fds = open ( tn , O_RDWR ) ;"	297:1:6289:6316	5067173	8	True				
ANR	5067317	IdentifierDecl	"fds = open ( tn , O_RDWR )"		5067173	0					
ANR	5067318	IdentifierDeclType	int		5067173	0					
ANR	5067319	Identifier	fds		5067173	1					
ANR	5067320	AssignmentExpression	"fds = open ( tn , O_RDWR )"		5067173	2		=			
ANR	5067321	Identifier	fds		5067173	0					
ANR	5067322	CallExpression	"open ( tn , O_RDWR )"		5067173	1					
ANR	5067323	Callee	open		5067173	0					
ANR	5067324	Identifier	open		5067173	0					
ANR	5067325	ArgumentList	tn		5067173	1					
ANR	5067326	Argument	tn		5067173	0					
ANR	5067327	Identifier	tn		5067173	0					
ANR	5067328	Argument	O_RDWR		5067173	1					
ANR	5067329	Identifier	O_RDWR		5067173	0					
ANR	5067330	IfStatement	if ( fds == - 1 )		5067173	9					
ANR	5067331	Condition	fds == - 1	298:5:6323:6331	5067173	0	True				
ANR	5067332	EqualityExpression	fds == - 1		5067173	0		==			
ANR	5067333	Identifier	fds		5067173	0					
ANR	5067334	UnaryOperationExpression	- 1		5067173	1					
ANR	5067335	UnaryOperator	-		5067173	0					
ANR	5067336	PrimaryExpression	1		5067173	1					
ANR	5067337	CompoundStatement		27:16:584:584	5067173	1					
ANR	5067338	ExpressionStatement	close ( saved_stdin )	299:2:6338:6357	5067173	0	True				
ANR	5067339	CallExpression	close ( saved_stdin )		5067173	0					
ANR	5067340	Callee	close		5067173	0					
ANR	5067341	Identifier	close		5067173	0					
ANR	5067342	ArgumentList	saved_stdin		5067173	1					
ANR	5067343	Argument	saved_stdin		5067173	0					
ANR	5067344	Identifier	saved_stdin		5067173	0					
ANR	5067345	ExpressionStatement	close ( saved_stdout )	300:2:6361:6381	5067173	1	True				
ANR	5067346	CallExpression	close ( saved_stdout )		5067173	0					
ANR	5067347	Callee	close		5067173	0					
ANR	5067348	Identifier	close		5067173	0					
ANR	5067349	ArgumentList	saved_stdout		5067173	1					
ANR	5067350	Argument	saved_stdout		5067173	0					
ANR	5067351	Identifier	saved_stdout		5067173	0					
ANR	5067352	ReturnStatement	return - 1 ;	301:2:6385:6394	5067173	2	True				
ANR	5067353	UnaryOperationExpression	- 1		5067173	0					
ANR	5067354	UnaryOperator	-		5067173	0					
ANR	5067355	PrimaryExpression	1		5067173	1					
ANR	5067356	IfStatement	if ( pid == 0 )		5067173	10					
ANR	5067357	Condition	pid == 0	303:5:6404:6411	5067173	0	True				
ANR	5067358	EqualityExpression	pid == 0		5067173	0		==			
ANR	5067359	Identifier	pid		5067173	0					
ANR	5067360	PrimaryExpression	0		5067173	1					
ANR	5067361	CompoundStatement		50:2:1001:1027	5067173	1					
ANR	5067362	ExpressionStatement	close ( fdm )	304:2:6418:6429	5067173	0	True				
ANR	5067363	CallExpression	close ( fdm )		5067173	0					
ANR	5067364	Callee	close		5067173	0					
ANR	5067365	Identifier	close		5067173	0					
ANR	5067366	ArgumentList	fdm		5067173	1					
ANR	5067367	Argument	fdm		5067173	0					
ANR	5067368	Identifier	fdm		5067173	0					
ANR	5067369	IfStatement	if ( in )		5067173	1					
ANR	5067370	Condition	in	306:6:6456:6457	5067173	0	True				
ANR	5067371	Identifier	in		5067173	0					
ANR	5067372	CompoundStatement		35:10:710:710	5067173	1					
ANR	5067373	ExpressionStatement	"dup2 ( fds , STDIN_FILENO )"	307:3:6465:6489	5067173	0	True				
ANR	5067374	CallExpression	"dup2 ( fds , STDIN_FILENO )"		5067173	0					
ANR	5067375	Callee	dup2		5067173	0					
ANR	5067376	Identifier	dup2		5067173	0					
ANR	5067377	ArgumentList	fds		5067173	1					
ANR	5067378	Argument	fds		5067173	0					
ANR	5067379	Identifier	fds		5067173	0					
ANR	5067380	Argument	STDIN_FILENO		5067173	1					
ANR	5067381	Identifier	STDIN_FILENO		5067173	0					
ANR	5067382	IfStatement	if ( out )		5067173	2					
ANR	5067383	Condition	out	309:6:6501:6503	5067173	0	True				
ANR	5067384	Identifier	out		5067173	0					
ANR	5067385	CompoundStatement		38:11:756:756	5067173	1					
ANR	5067386	ExpressionStatement	"dup2 ( fds , STDOUT_FILENO )"	310:3:6511:6536	5067173	0	True				
ANR	5067387	CallExpression	"dup2 ( fds , STDOUT_FILENO )"		5067173	0					
ANR	5067388	Callee	dup2		5067173	0					
ANR	5067389	Identifier	dup2		5067173	0					
ANR	5067390	ArgumentList	fds		5067173	1					
ANR	5067391	Argument	fds		5067173	0					
ANR	5067392	Identifier	fds		5067173	0					
ANR	5067393	Argument	STDOUT_FILENO		5067173	1					
ANR	5067394	Identifier	STDOUT_FILENO		5067173	0					
ANR	5067395	IdentifierDeclStatement	struct termios t ;	316:2:6657:6673	5067173	3	True				
ANR	5067396	IdentifierDecl	t		5067173	0					
ANR	5067397	IdentifierDeclType	struct termios		5067173	0					
ANR	5067398	Identifier	t		5067173	1					
ANR	5067399	ExpressionStatement	"tcgetattr ( fds , & t )"	317:2:6677:6696	5067173	4	True				
ANR	5067400	CallExpression	"tcgetattr ( fds , & t )"		5067173	0					
ANR	5067401	Callee	tcgetattr		5067173	0					
ANR	5067402	Identifier	tcgetattr		5067173	0					
ANR	5067403	ArgumentList	fds		5067173	1					
ANR	5067404	Argument	fds		5067173	0					
ANR	5067405	Identifier	fds		5067173	0					
ANR	5067406	Argument	& t		5067173	1					
ANR	5067407	UnaryOperationExpression	& t		5067173	0					
ANR	5067408	UnaryOperator	&		5067173	0					
ANR	5067409	Identifier	t		5067173	1					
ANR	5067410	ExpressionStatement	cfmakeraw ( & t )	318:2:6700:6714	5067173	5	True				
ANR	5067411	CallExpression	cfmakeraw ( & t )		5067173	0					
ANR	5067412	Callee	cfmakeraw		5067173	0					
ANR	5067413	Identifier	cfmakeraw		5067173	0					
ANR	5067414	ArgumentList	& t		5067173	1					
ANR	5067415	Argument	& t		5067173	0					
ANR	5067416	UnaryOperationExpression	& t		5067173	0					
ANR	5067417	UnaryOperator	&		5067173	0					
ANR	5067418	Identifier	t		5067173	1					
ANR	5067419	ExpressionStatement	"tcsetattr ( fds , TCSANOW , & t )"	319:2:6718:6746	5067173	6	True				
ANR	5067420	CallExpression	"tcsetattr ( fds , TCSANOW , & t )"		5067173	0					
ANR	5067421	Callee	tcsetattr		5067173	0					
ANR	5067422	Identifier	tcsetattr		5067173	0					
ANR	5067423	ArgumentList	fds		5067173	1					
ANR	5067424	Argument	fds		5067173	0					
ANR	5067425	Identifier	fds		5067173	0					
ANR	5067426	Argument	TCSANOW		5067173	1					
ANR	5067427	Identifier	TCSANOW		5067173	0					
ANR	5067428	Argument	& t		5067173	2					
ANR	5067429	UnaryOperationExpression	& t		5067173	0					
ANR	5067430	UnaryOperator	&		5067173	0					
ANR	5067431	Identifier	t		5067173	1					
ANR	5067432	IdentifierDeclStatement	int code = r_sys_cmd ( cmd ) ;	321:2:6751:6777	5067173	7	True				
ANR	5067433	IdentifierDecl	code = r_sys_cmd ( cmd )		5067173	0					
ANR	5067434	IdentifierDeclType	int		5067173	0					
ANR	5067435	Identifier	code		5067173	1					
ANR	5067436	AssignmentExpression	code = r_sys_cmd ( cmd )		5067173	2		=			
ANR	5067437	Identifier	code		5067173	0					
ANR	5067438	CallExpression	r_sys_cmd ( cmd )		5067173	1					
ANR	5067439	Callee	r_sys_cmd		5067173	0					
ANR	5067440	Identifier	r_sys_cmd		5067173	0					
ANR	5067441	ArgumentList	cmd		5067173	1					
ANR	5067442	Argument	cmd		5067173	0					
ANR	5067443	Identifier	cmd		5067173	0					
ANR	5067444	ExpressionStatement	"restore_saved_fd ( saved_stdin , in , STDIN_FILENO )"	322:2:6781:6829	5067173	8	True				
ANR	5067445	CallExpression	"restore_saved_fd ( saved_stdin , in , STDIN_FILENO )"		5067173	0					
ANR	5067446	Callee	restore_saved_fd		5067173	0					
ANR	5067447	Identifier	restore_saved_fd		5067173	0					
ANR	5067448	ArgumentList	saved_stdin		5067173	1					
ANR	5067449	Argument	saved_stdin		5067173	0					
ANR	5067450	Identifier	saved_stdin		5067173	0					
ANR	5067451	Argument	in		5067173	1					
ANR	5067452	Identifier	in		5067173	0					
ANR	5067453	Argument	STDIN_FILENO		5067173	2					
ANR	5067454	Identifier	STDIN_FILENO		5067173	0					
ANR	5067455	ExpressionStatement	"restore_saved_fd ( saved_stdout , out , STDOUT_FILENO )"	323:2:6833:6884	5067173	9	True				
ANR	5067456	CallExpression	"restore_saved_fd ( saved_stdout , out , STDOUT_FILENO )"		5067173	0					
ANR	5067457	Callee	restore_saved_fd		5067173	0					
ANR	5067458	Identifier	restore_saved_fd		5067173	0					
ANR	5067459	ArgumentList	saved_stdout		5067173	1					
ANR	5067460	Argument	saved_stdout		5067173	0					
ANR	5067461	Identifier	saved_stdout		5067173	0					
ANR	5067462	Argument	out		5067173	1					
ANR	5067463	Identifier	out		5067173	0					
ANR	5067464	Argument	STDOUT_FILENO		5067173	2					
ANR	5067465	Identifier	STDOUT_FILENO		5067173	0					
ANR	5067466	ExpressionStatement	exit ( code )	324:2:6888:6899	5067173	10	True				
ANR	5067467	CallExpression	exit ( code )		5067173	0					
ANR	5067468	Callee	exit		5067173	0					
ANR	5067469	Identifier	exit		5067173	0					
ANR	5067470	ArgumentList	code		5067173	1					
ANR	5067471	Argument	code		5067173	0					
ANR	5067472	Identifier	code		5067173	0					
ANR	5067473	ElseStatement	else		5067173	0					
ANR	5067474	CompoundStatement		63:2:1290:1300	5067173	0					
ANR	5067475	ExpressionStatement	close ( fds )	326:2:6913:6924	5067173	0	True				
ANR	5067476	CallExpression	close ( fds )		5067173	0					
ANR	5067477	Callee	close		5067173	0					
ANR	5067478	Identifier	close		5067173	0					
ANR	5067479	ArgumentList	fds		5067173	1					
ANR	5067480	Argument	fds		5067173	0					
ANR	5067481	Identifier	fds		5067173	0					
ANR	5067482	IfStatement	if ( in )		5067173	1					
ANR	5067483	Condition	in	327:6:6932:6933	5067173	0	True				
ANR	5067484	Identifier	in		5067173	0					
ANR	5067485	CompoundStatement		56:10:1186:1186	5067173	1					
ANR	5067486	ExpressionStatement	"dup2 ( fdm , STDIN_FILENO )"	328:3:6941:6965	5067173	0	True				
ANR	5067487	CallExpression	"dup2 ( fdm , STDIN_FILENO )"		5067173	0					
ANR	5067488	Callee	dup2		5067173	0					
ANR	5067489	Identifier	dup2		5067173	0					
ANR	5067490	ArgumentList	fdm		5067173	1					
ANR	5067491	Argument	fdm		5067173	0					
ANR	5067492	Identifier	fdm		5067173	0					
ANR	5067493	Argument	STDIN_FILENO		5067173	1					
ANR	5067494	Identifier	STDIN_FILENO		5067173	0					
ANR	5067495	IfStatement	if ( out )		5067173	2					
ANR	5067496	Condition	out	330:6:6977:6979	5067173	0	True				
ANR	5067497	Identifier	out		5067173	0					
ANR	5067498	CompoundStatement		59:11:1232:1232	5067173	1					
ANR	5067499	ExpressionStatement	"dup2 ( fdm , STDOUT_FILENO )"	331:3:6987:7012	5067173	0	True				
ANR	5067500	CallExpression	"dup2 ( fdm , STDOUT_FILENO )"		5067173	0					
ANR	5067501	Callee	dup2		5067173	0					
ANR	5067502	Identifier	dup2		5067173	0					
ANR	5067503	ArgumentList	fdm		5067173	1					
ANR	5067504	Argument	fdm		5067173	0					
ANR	5067505	Identifier	fdm		5067173	0					
ANR	5067506	Argument	STDOUT_FILENO		5067173	1					
ANR	5067507	Identifier	STDOUT_FILENO		5067173	0					
ANR	5067508	IdentifierDeclStatement	int status ;	334:2:7040:7050	5067173	3	True				
ANR	5067509	IdentifierDecl	status		5067173	0					
ANR	5067510	IdentifierDeclType	int		5067173	0					
ANR	5067511	Identifier	status		5067173	1					
ANR	5067512	ExpressionStatement	"waitpid ( pid , & status , 0 )"	335:2:7054:7079	5067173	4	True				
ANR	5067513	CallExpression	"waitpid ( pid , & status , 0 )"		5067173	0					
ANR	5067514	Callee	waitpid		5067173	0					
ANR	5067515	Identifier	waitpid		5067173	0					
ANR	5067516	ArgumentList	pid		5067173	1					
ANR	5067517	Argument	pid		5067173	0					
ANR	5067518	Identifier	pid		5067173	0					
ANR	5067519	Argument	& status		5067173	1					
ANR	5067520	UnaryOperationExpression	& status		5067173	0					
ANR	5067521	UnaryOperator	&		5067173	0					
ANR	5067522	Identifier	status		5067173	1					
ANR	5067523	Argument	0		5067173	2					
ANR	5067524	PrimaryExpression	0		5067173	0					
ANR	5067525	ExpressionStatement	close ( saved_stdin )	339:1:7097:7116	5067173	11	True				
ANR	5067526	CallExpression	close ( saved_stdin )		5067173	0					
ANR	5067527	Callee	close		5067173	0					
ANR	5067528	Identifier	close		5067173	0					
ANR	5067529	ArgumentList	saved_stdin		5067173	1					
ANR	5067530	Argument	saved_stdin		5067173	0					
ANR	5067531	Identifier	saved_stdin		5067173	0					
ANR	5067532	ExpressionStatement	close ( saved_stdout )	340:1:7119:7139	5067173	12	True				
ANR	5067533	CallExpression	close ( saved_stdout )		5067173	0					
ANR	5067534	Callee	close		5067173	0					
ANR	5067535	Identifier	close		5067173	0					
ANR	5067536	ArgumentList	saved_stdout		5067173	1					
ANR	5067537	Argument	saved_stdout		5067173	0					
ANR	5067538	Identifier	saved_stdout		5067173	0					
ANR	5067539	ReturnStatement	return 0 ;	341:1:7142:7150	5067173	13	True				
ANR	5067540	PrimaryExpression	0		5067173	0					
ANR	5067541	ReturnType	static int		5067173	1					
ANR	5067542	Identifier	handle_redirection_proc		5067173	2					
ANR	5067543	ParameterList	"const char * cmd , bool in , bool out , bool err"		5067173	3					
ANR	5067544	Parameter	const char * cmd	272:35:5703:5717	5067173	0	True				
ANR	5067545	ParameterType	const char *		5067173	0					
ANR	5067546	Identifier	cmd		5067173	1					
ANR	5067547	Parameter	bool in	272:52:5720:5726	5067173	1	True				
ANR	5067548	ParameterType	bool		5067173	0					
ANR	5067549	Identifier	in		5067173	1					
ANR	5067550	Parameter	bool out	272:61:5729:5736	5067173	2	True				
ANR	5067551	ParameterType	bool		5067173	0					
ANR	5067552	Identifier	out		5067173	1					
ANR	5067553	Parameter	bool err	272:71:5739:5746	5067173	3	True				
ANR	5067554	ParameterType	bool		5067173	0					
ANR	5067555	Identifier	err		5067173	1					
ANR	5067556	CFGEntryNode	ENTRY		5067173		True				
ANR	5067557	CFGExitNode	EXIT		5067173		True				
ANR	5067558	Symbol	saved_stdout		5067173						
ANR	5067559	Symbol	code		5067173						
ANR	5067560	Symbol	TCSANOW		5067173						
ANR	5067561	Symbol	pid		5067173						
ANR	5067562	Symbol	r_sys_cmd		5067173						
ANR	5067563	Symbol	out		5067173						
ANR	5067564	Symbol	& fdm		5067173						
ANR	5067565	Symbol	O_RDWR		5067173						
ANR	5067566	Symbol	saved_stdin		5067173						
ANR	5067567	Symbol	NULL		5067173						
ANR	5067568	Symbol	err		5067173						
ANR	5067569	Symbol	STDIN_FILENO		5067173						
ANR	5067570	Symbol	STDOUT_FILENO		5067173						
ANR	5067571	Symbol	in		5067173						
ANR	5067572	Symbol	ttyname		5067173						
ANR	5067573	Symbol	forkpty		5067173						
ANR	5067574	Symbol	& status		5067173						
ANR	5067575	Symbol	fdm		5067173						
ANR	5067576	Symbol	fds		5067173						
ANR	5067577	Symbol	t		5067173						
ANR	5067578	Symbol	tn		5067173						
ANR	5067579	Symbol	& t		5067173						
ANR	5067580	Symbol	cmd		5067173						
ANR	5067581	Symbol	dup		5067173						
ANR	5067582	Symbol	open		5067173						
ANR	5067583	Symbol	status		5067173						
ANR	5067584	Function	handle_redirection	352:0:7361:9008							
ANR	5067585	FunctionDef	"handle_redirection (const char * cmd , bool in , bool out , bool err)"		5067584	0					
ANR	5067586	CompoundStatement		352:76:7437:9008	5067584	0					
ANR	5067587	IfStatement	if ( ! cmd || cmd [ 0 ] == '\\0' )		5067584	0					
ANR	5067588	Condition	! cmd || cmd [ 0 ] == '\\0'	353:5:7444:7465	5067584	0	True				
ANR	5067589	OrExpression	! cmd || cmd [ 0 ] == '\\0'		5067584	0		||			
ANR	5067590	UnaryOperationExpression	! cmd		5067584	0					
ANR	5067591	UnaryOperator	!		5067584	0					
ANR	5067592	Identifier	cmd		5067584	1					
ANR	5067593	EqualityExpression	cmd [ 0 ] == '\\0'		5067584	1		==			
ANR	5067594	ArrayIndexing	cmd [ 0 ]		5067584	0					
ANR	5067595	Identifier	cmd		5067584	0					
ANR	5067596	PrimaryExpression	0		5067584	1					
ANR	5067597	PrimaryExpression	'\\0'		5067584	1					
ANR	5067598	CompoundStatement		2:29:30:30	5067584	1					
ANR	5067599	ReturnStatement	return 0 ;	354:2:7472:7480	5067584	0	True				
ANR	5067600	PrimaryExpression	0		5067584	0					
ANR	5067601	ReturnStatement	return 0 ;	360:1:7642:7650	5067584	1	True				
ANR	5067602	PrimaryExpression	0		5067584	0					
ANR	5067603	IfStatement	"if ( cmd [ 0 ] == '""' )"		5067584	2					
ANR	5067604	Condition	"cmd [ 0 ] == '""'"	362:5:7664:7676	5067584	0	True				
ANR	5067605	EqualityExpression	"cmd [ 0 ] == '""'"		5067584	0		==			
ANR	5067606	ArrayIndexing	cmd [ 0 ]		5067584	0					
ANR	5067607	Identifier	cmd		5067584	0					
ANR	5067608	PrimaryExpression	0		5067584	1					
ANR	5067609	PrimaryExpression	"'""'"		5067584	1					
ANR	5067610	CompoundStatement		11:20:241:241	5067584	1					
ANR	5067611	IfStatement	if ( in )		5067584	0					
ANR	5067612	Condition	in	364:6:7700:7701	5067584	0	True				
ANR	5067613	Identifier	in		5067584	0					
ANR	5067614	CompoundStatement		14:3:271:283	5067584	1					
ANR	5067615	IdentifierDeclStatement	int pipes [ 2 ] ;	365:3:7709:7721	5067584	0	True				
ANR	5067616	IdentifierDecl	pipes [ 2 ]		5067584	0					
ANR	5067617	IdentifierDeclType	int [ 2 ]		5067584	0					
ANR	5067618	Identifier	pipes		5067584	1					
ANR	5067619	PrimaryExpression	2		5067584	2					
ANR	5067620	IfStatement	if ( pipe ( pipes ) != - 1 )		5067584	1					
ANR	5067621	Condition	pipe ( pipes ) != - 1	366:7:7730:7747	5067584	0	True				
ANR	5067622	EqualityExpression	pipe ( pipes ) != - 1		5067584	0		!=			
ANR	5067623	CallExpression	pipe ( pipes )		5067584	0					
ANR	5067624	Callee	pipe		5067584	0					
ANR	5067625	Identifier	pipe		5067584	0					
ANR	5067626	ArgumentList	pipes		5067584	1					
ANR	5067627	Argument	pipes		5067584	0					
ANR	5067628	Identifier	pipes		5067584	0					
ANR	5067629	UnaryOperationExpression	- 1		5067584	1					
ANR	5067630	UnaryOperator	-		5067584	0					
ANR	5067631	PrimaryExpression	1		5067584	1					
ANR	5067632	CompoundStatement		16:4:318:346	5067584	1					
ANR	5067633	IdentifierDeclStatement	size_t cmdl = strlen ( cmd ) - 2 ;	367:4:7756:7784	5067584	0	True				
ANR	5067634	IdentifierDecl	cmdl = strlen ( cmd ) - 2		5067584	0					
ANR	5067635	IdentifierDeclType	size_t		5067584	0					
ANR	5067636	Identifier	cmdl		5067584	1					
ANR	5067637	AssignmentExpression	cmdl = strlen ( cmd ) - 2		5067584	2		=			
ANR	5067638	Identifier	cmdl		5067584	0					
ANR	5067639	AdditiveExpression	strlen ( cmd ) - 2		5067584	1		-			
ANR	5067640	CallExpression	strlen ( cmd )		5067584	0					
ANR	5067641	Callee	strlen		5067584	0					
ANR	5067642	Identifier	strlen		5067584	0					
ANR	5067643	ArgumentList	cmd		5067584	1					
ANR	5067644	Argument	cmd		5067584	0					
ANR	5067645	Identifier	cmd		5067584	0					
ANR	5067646	PrimaryExpression	2		5067584	1					
ANR	5067647	IfStatement	"if ( write ( pipes [ 1 ] , cmd + 1 , cmdl ) != cmdl )"		5067584	1					
ANR	5067648	Condition	"write ( pipes [ 1 ] , cmd + 1 , cmdl ) != cmdl"	368:8:7794:7832	5067584	0	True				
ANR	5067649	EqualityExpression	"write ( pipes [ 1 ] , cmd + 1 , cmdl ) != cmdl"		5067584	0		!=			
ANR	5067650	CallExpression	"write ( pipes [ 1 ] , cmd + 1 , cmdl )"		5067584	0					
ANR	5067651	Callee	write		5067584	0					
ANR	5067652	Identifier	write		5067584	0					
ANR	5067653	ArgumentList	pipes [ 1 ]		5067584	1					
ANR	5067654	Argument	pipes [ 1 ]		5067584	0					
ANR	5067655	ArrayIndexing	pipes [ 1 ]		5067584	0					
ANR	5067656	Identifier	pipes		5067584	0					
ANR	5067657	PrimaryExpression	1		5067584	1					
ANR	5067658	Argument	cmd + 1		5067584	1					
ANR	5067659	AdditiveExpression	cmd + 1		5067584	0		+			
ANR	5067660	Identifier	cmd		5067584	0					
ANR	5067661	PrimaryExpression	1		5067584	1					
ANR	5067662	Argument	cmdl		5067584	2					
ANR	5067663	Identifier	cmdl		5067584	0					
ANR	5067664	Identifier	cmdl		5067584	1					
ANR	5067665	CompoundStatement		17:49:397:397	5067584	1					
ANR	5067666	ExpressionStatement	"eprintf ( ""[ERROR] rarun2: Cannot write to the pipe\\n"" )"	369:5:7842:7896	5067584	0	True				
ANR	5067667	CallExpression	"eprintf ( ""[ERROR] rarun2: Cannot write to the pipe\\n"" )"		5067584	0					
ANR	5067668	Callee	eprintf		5067584	0					
ANR	5067669	Identifier	eprintf		5067584	0					
ANR	5067670	ArgumentList	"""[ERROR] rarun2: Cannot write to the pipe\\n"""		5067584	1					
ANR	5067671	Argument	"""[ERROR] rarun2: Cannot write to the pipe\\n"""		5067584	0					
ANR	5067672	PrimaryExpression	"""[ERROR] rarun2: Cannot write to the pipe\\n"""		5067584	0					
ANR	5067673	ExpressionStatement	close ( 0 )	370:5:7903:7912	5067584	1	True				
ANR	5067674	CallExpression	close ( 0 )		5067584	0					
ANR	5067675	Callee	close		5067584	0					
ANR	5067676	Identifier	close		5067584	0					
ANR	5067677	ArgumentList	0		5067584	1					
ANR	5067678	Argument	0		5067584	0					
ANR	5067679	PrimaryExpression	0		5067584	0					
ANR	5067680	ReturnStatement	return 1 ;	371:5:7919:7927	5067584	2	True				
ANR	5067681	PrimaryExpression	1		5067584	0					
ANR	5067682	IfStatement	"if ( write ( pipes [ 1 ] , ""\\n"" , 1 ) != 1 )"		5067584	2					
ANR	5067683	Condition	"write ( pipes [ 1 ] , ""\\n"" , 1 ) != 1"	373:8:7943:7972	5067584	0	True				
ANR	5067684	EqualityExpression	"write ( pipes [ 1 ] , ""\\n"" , 1 ) != 1"		5067584	0		!=			
ANR	5067685	CallExpression	"write ( pipes [ 1 ] , ""\\n"" , 1 )"		5067584	0					
ANR	5067686	Callee	write		5067584	0					
ANR	5067687	Identifier	write		5067584	0					
ANR	5067688	ArgumentList	pipes [ 1 ]		5067584	1					
ANR	5067689	Argument	pipes [ 1 ]		5067584	0					
ANR	5067690	ArrayIndexing	pipes [ 1 ]		5067584	0					
ANR	5067691	Identifier	pipes		5067584	0					
ANR	5067692	PrimaryExpression	1		5067584	1					
ANR	5067693	Argument	"""\\n"""		5067584	1					
ANR	5067694	PrimaryExpression	"""\\n"""		5067584	0					
ANR	5067695	Argument	1		5067584	2					
ANR	5067696	PrimaryExpression	1		5067584	0					
ANR	5067697	PrimaryExpression	1		5067584	1					
ANR	5067698	CompoundStatement		22:40:537:537	5067584	1					
ANR	5067699	ExpressionStatement	"eprintf ( ""[ERROR] rarun2: Cannot write to the pipe\\n"" )"	374:5:7982:8036	5067584	0	True				
ANR	5067700	CallExpression	"eprintf ( ""[ERROR] rarun2: Cannot write to the pipe\\n"" )"		5067584	0					
ANR	5067701	Callee	eprintf		5067584	0					
ANR	5067702	Identifier	eprintf		5067584	0					
ANR	5067703	ArgumentList	"""[ERROR] rarun2: Cannot write to the pipe\\n"""		5067584	1					
ANR	5067704	Argument	"""[ERROR] rarun2: Cannot write to the pipe\\n"""		5067584	0					
ANR	5067705	PrimaryExpression	"""[ERROR] rarun2: Cannot write to the pipe\\n"""		5067584	0					
ANR	5067706	ExpressionStatement	close ( 0 )	375:5:8043:8052	5067584	1	True				
ANR	5067707	CallExpression	close ( 0 )		5067584	0					
ANR	5067708	Callee	close		5067584	0					
ANR	5067709	Identifier	close		5067584	0					
ANR	5067710	ArgumentList	0		5067584	1					
ANR	5067711	Argument	0		5067584	0					
ANR	5067712	PrimaryExpression	0		5067584	0					
ANR	5067713	ReturnStatement	return 1 ;	376:5:8059:8067	5067584	2	True				
ANR	5067714	PrimaryExpression	1		5067584	0					
ANR	5067715	ExpressionStatement	close ( 0 )	378:4:8079:8088	5067584	3	True				
ANR	5067716	CallExpression	close ( 0 )		5067584	0					
ANR	5067717	Callee	close		5067584	0					
ANR	5067718	Identifier	close		5067584	0					
ANR	5067719	ArgumentList	0		5067584	1					
ANR	5067720	Argument	0		5067584	0					
ANR	5067721	PrimaryExpression	0		5067584	0					
ANR	5067722	ExpressionStatement	"dup2 ( pipes [ 0 ] , 0 )"	379:4:8094:8112	5067584	4	True				
ANR	5067723	CallExpression	"dup2 ( pipes [ 0 ] , 0 )"		5067584	0					
ANR	5067724	Callee	dup2		5067584	0					
ANR	5067725	Identifier	dup2		5067584	0					
ANR	5067726	ArgumentList	pipes [ 0 ]		5067584	1					
ANR	5067727	Argument	pipes [ 0 ]		5067584	0					
ANR	5067728	ArrayIndexing	pipes [ 0 ]		5067584	0					
ANR	5067729	Identifier	pipes		5067584	0					
ANR	5067730	PrimaryExpression	0		5067584	1					
ANR	5067731	Argument	0		5067584	1					
ANR	5067732	PrimaryExpression	0		5067584	0					
ANR	5067733	ElseStatement	else		5067584	0					
ANR	5067734	CompoundStatement		29:10:686:686	5067584	0					
ANR	5067735	ExpressionStatement	"eprintf ( ""[ERROR] rarun2: Cannot create pipe\\n"" )"	381:4:8130:8178	5067584	0	True				
ANR	5067736	CallExpression	"eprintf ( ""[ERROR] rarun2: Cannot create pipe\\n"" )"		5067584	0					
ANR	5067737	Callee	eprintf		5067584	0					
ANR	5067738	Identifier	eprintf		5067584	0					
ANR	5067739	ArgumentList	"""[ERROR] rarun2: Cannot create pipe\\n"""		5067584	1					
ANR	5067740	Argument	"""[ERROR] rarun2: Cannot create pipe\\n"""		5067584	0					
ANR	5067741	PrimaryExpression	"""[ERROR] rarun2: Cannot create pipe\\n"""		5067584	0					
ANR	5067742	ReturnStatement	return 0 ;	391:2:8347:8355	5067584	1	True				
ANR	5067743	PrimaryExpression	0		5067584	0					
ANR	5067744	ElseStatement	else		5067584	0					
ANR	5067745	IfStatement	if ( cmd [ 0 ] == '!' )		5067584	0					
ANR	5067746	Condition	cmd [ 0 ] == '!'	392:12:8369:8381	5067584	0	True				
ANR	5067747	EqualityExpression	cmd [ 0 ] == '!'		5067584	0		==			
ANR	5067748	ArrayIndexing	cmd [ 0 ]		5067584	0					
ANR	5067749	Identifier	cmd		5067584	0					
ANR	5067750	PrimaryExpression	0		5067584	1					
ANR	5067751	PrimaryExpression	'!'		5067584	1					
ANR	5067752	CompoundStatement		41:27:946:946	5067584	1					
ANR	5067753	ReturnStatement	"return handle_redirection_proc ( cmd + 1 , in , out , err ) ;"	394:2:8418:8472	5067584	0	True				
ANR	5067754	CallExpression	"handle_redirection_proc ( cmd + 1 , in , out , err )"		5067584	0					
ANR	5067755	Callee	handle_redirection_proc		5067584	0					
ANR	5067756	Identifier	handle_redirection_proc		5067584	0					
ANR	5067757	ArgumentList	cmd + 1		5067584	1					
ANR	5067758	Argument	cmd + 1		5067584	0					
ANR	5067759	AdditiveExpression	cmd + 1		5067584	0		+			
ANR	5067760	Identifier	cmd		5067584	0					
ANR	5067761	PrimaryExpression	1		5067584	1					
ANR	5067762	Argument	in		5067584	1					
ANR	5067763	Identifier	in		5067584	0					
ANR	5067764	Argument	out		5067584	2					
ANR	5067765	Identifier	out		5067584	0					
ANR	5067766	Argument	err		5067584	3					
ANR	5067767	Identifier	err		5067584	0					
ANR	5067768	ElseStatement	else		5067584	0					
ANR	5067769	CompoundStatement		46:2:1075:1100	5067584	0					
ANR	5067770	IdentifierDeclStatement	"int f , flag = 0 , mode = 0 ;"	397:2:8513:8538	5067584	0	True				
ANR	5067771	IdentifierDecl	f		5067584	0					
ANR	5067772	IdentifierDeclType	int		5067584	0					
ANR	5067773	Identifier	f		5067584	1					
ANR	5067774	IdentifierDecl	flag = 0		5067584	1					
ANR	5067775	IdentifierDeclType	int		5067584	0					
ANR	5067776	Identifier	flag		5067584	1					
ANR	5067777	AssignmentExpression	flag = 0		5067584	2		=			
ANR	5067778	Identifier	flag		5067584	0					
ANR	5067779	PrimaryExpression	0		5067584	1					
ANR	5067780	IdentifierDecl	mode = 0		5067584	2					
ANR	5067781	IdentifierDeclType	int		5067584	0					
ANR	5067782	Identifier	mode		5067584	1					
ANR	5067783	AssignmentExpression	mode = 0		5067584	2		=			
ANR	5067784	Identifier	mode		5067584	0					
ANR	5067785	PrimaryExpression	0		5067584	1					
ANR	5067786	ExpressionStatement	flag |= in ? O_RDONLY : 0	398:2:8542:8567	5067584	1	True				
ANR	5067787	AssignmentExpression	flag |= in ? O_RDONLY : 0		5067584	0		|=			
ANR	5067788	Identifier	flag		5067584	0					
ANR	5067789	ConditionalExpression	in ? O_RDONLY : 0		5067584	1					
ANR	5067790	Condition	in		5067584	0					
ANR	5067791	Identifier	in		5067584	0					
ANR	5067792	Identifier	O_RDONLY		5067584	1					
ANR	5067793	PrimaryExpression	0		5067584	2					
ANR	5067794	ExpressionStatement	flag |= out ? O_WRONLY | O_CREAT : 0	399:2:8571:8607	5067584	2	True				
ANR	5067795	AssignmentExpression	flag |= out ? O_WRONLY | O_CREAT : 0		5067584	0		|=			
ANR	5067796	Identifier	flag		5067584	0					
ANR	5067797	ConditionalExpression	out ? O_WRONLY | O_CREAT : 0		5067584	1					
ANR	5067798	Condition	out		5067584	0					
ANR	5067799	Identifier	out		5067584	0					
ANR	5067800	InclusiveOrExpression	O_WRONLY | O_CREAT		5067584	1		|			
ANR	5067801	Identifier	O_WRONLY		5067584	0					
ANR	5067802	Identifier	O_CREAT		5067584	1					
ANR	5067803	PrimaryExpression	0		5067584	2					
ANR	5067804	ExpressionStatement	flag |= err ? O_WRONLY | O_CREAT : 0	400:2:8611:8647	5067584	3	True				
ANR	5067805	AssignmentExpression	flag |= err ? O_WRONLY | O_CREAT : 0		5067584	0		|=			
ANR	5067806	Identifier	flag		5067584	0					
ANR	5067807	ConditionalExpression	err ? O_WRONLY | O_CREAT : 0		5067584	1					
ANR	5067808	Condition	err		5067584	0					
ANR	5067809	Identifier	err		5067584	0					
ANR	5067810	InclusiveOrExpression	O_WRONLY | O_CREAT		5067584	1		|			
ANR	5067811	Identifier	O_WRONLY		5067584	0					
ANR	5067812	Identifier	O_CREAT		5067584	1					
ANR	5067813	PrimaryExpression	0		5067584	2					
ANR	5067814	ExpressionStatement	mode = _S_IREAD | _S_IWRITE	402:2:8670:8697	5067584	4	True				
ANR	5067815	AssignmentExpression	mode = _S_IREAD | _S_IWRITE		5067584	0		=			
ANR	5067816	Identifier	mode		5067584	0					
ANR	5067817	InclusiveOrExpression	_S_IREAD | _S_IWRITE		5067584	1		|			
ANR	5067818	Identifier	_S_IREAD		5067584	0					
ANR	5067819	Identifier	_S_IWRITE		5067584	1					
ANR	5067820	ExpressionStatement	"f = open ( cmd , flag , mode )"	406:2:8742:8768	5067584	5	True				
ANR	5067821	AssignmentExpression	"f = open ( cmd , flag , mode )"		5067584	0		=			
ANR	5067822	Identifier	f		5067584	0					
ANR	5067823	CallExpression	"open ( cmd , flag , mode )"		5067584	1					
ANR	5067824	Callee	open		5067584	0					
ANR	5067825	Identifier	open		5067584	0					
ANR	5067826	ArgumentList	cmd		5067584	1					
ANR	5067827	Argument	cmd		5067584	0					
ANR	5067828	Identifier	cmd		5067584	0					
ANR	5067829	Argument	flag		5067584	1					
ANR	5067830	Identifier	flag		5067584	0					
ANR	5067831	Argument	mode		5067584	2					
ANR	5067832	Identifier	mode		5067584	0					
ANR	5067833	IfStatement	if ( f < 0 )		5067584	6					
ANR	5067834	Condition	f < 0	407:6:8776:8780	5067584	0	True				
ANR	5067835	RelationalExpression	f < 0		5067584	0		<			
ANR	5067836	Identifier	f		5067584	0					
ANR	5067837	PrimaryExpression	0		5067584	1					
ANR	5067838	CompoundStatement		56:13:1345:1345	5067584	1					
ANR	5067839	ExpressionStatement	"eprintf ( ""[ERROR] rarun2: Cannot open: %s\\n"" , cmd )"	408:3:8788:8838	5067584	0	True				
ANR	5067840	CallExpression	"eprintf ( ""[ERROR] rarun2: Cannot open: %s\\n"" , cmd )"		5067584	0					
ANR	5067841	Callee	eprintf		5067584	0					
ANR	5067842	Identifier	eprintf		5067584	0					
ANR	5067843	ArgumentList	"""[ERROR] rarun2: Cannot open: %s\\n"""		5067584	1					
ANR	5067844	Argument	"""[ERROR] rarun2: Cannot open: %s\\n"""		5067584	0					
ANR	5067845	PrimaryExpression	"""[ERROR] rarun2: Cannot open: %s\\n"""		5067584	0					
ANR	5067846	Argument	cmd		5067584	1					
ANR	5067847	Identifier	cmd		5067584	0					
ANR	5067848	ReturnStatement	return 1 ;	409:3:8843:8851	5067584	1	True				
ANR	5067849	PrimaryExpression	1		5067584	0					
ANR	5067850	Statement	define	411:1:8858:8863	5067584	7	True				
ANR	5067851	Statement	DUP	411:8:8865:8867	5067584	8	True				
ANR	5067852	Statement	(	411:11:8868:8868	5067584	9	True				
ANR	5067853	Statement	x	411:12:8869:8869	5067584	10	True				
ANR	5067854	Statement	)	411:13:8870:8870	5067584	11	True				
ANR	5067855	CompoundStatement		60:15:1434:1434	5067584	12					
ANR	5067856	ExpressionStatement	close ( x )	411:17:8874:8882	5067584	0	True				
ANR	5067857	CallExpression	close ( x )		5067584	0					
ANR	5067858	Callee	close		5067584	0					
ANR	5067859	Identifier	close		5067584	0					
ANR	5067860	ArgumentList	x		5067584	1					
ANR	5067861	Argument	x		5067584	0					
ANR	5067862	Identifier	x		5067584	0					
ANR	5067863	ExpressionStatement	"dup2 ( f , x )"	411:27:8884:8893	5067584	1	True				
ANR	5067864	CallExpression	"dup2 ( f , x )"		5067584	0					
ANR	5067865	Callee	dup2		5067584	0					
ANR	5067866	Identifier	dup2		5067584	0					
ANR	5067867	ArgumentList	f		5067584	1					
ANR	5067868	Argument	f		5067584	0					
ANR	5067869	Identifier	f		5067584	0					
ANR	5067870	Argument	x		5067584	1					
ANR	5067871	Identifier	x		5067584	0					
ANR	5067872	IfStatement	if ( in )		5067584	13					
ANR	5067873	Condition	in	412:6:8903:8904	5067584	0	True				
ANR	5067874	Identifier	in		5067584	0					
ANR	5067875	CompoundStatement		61:10:1469:1469	5067584	1					
ANR	5067876	ExpressionStatement	DUP ( 0 )	413:3:8912:8918	5067584	0	True				
ANR	5067877	CallExpression	DUP ( 0 )		5067584	0					
ANR	5067878	Callee	DUP		5067584	0					
ANR	5067879	Identifier	DUP		5067584	0					
ANR	5067880	ArgumentList	0		5067584	1					
ANR	5067881	Argument	0		5067584	0					
ANR	5067882	PrimaryExpression	0		5067584	0					
ANR	5067883	IfStatement	if ( out )		5067584	14					
ANR	5067884	Condition	out	415:6:8930:8932	5067584	0	True				
ANR	5067885	Identifier	out		5067584	0					
ANR	5067886	CompoundStatement		64:11:1497:1497	5067584	1					
ANR	5067887	ExpressionStatement	DUP ( 1 )	416:3:8940:8946	5067584	0	True				
ANR	5067888	CallExpression	DUP ( 1 )		5067584	0					
ANR	5067889	Callee	DUP		5067584	0					
ANR	5067890	Identifier	DUP		5067584	0					
ANR	5067891	ArgumentList	1		5067584	1					
ANR	5067892	Argument	1		5067584	0					
ANR	5067893	PrimaryExpression	1		5067584	0					
ANR	5067894	IfStatement	if ( err )		5067584	15					
ANR	5067895	Condition	err	418:6:8958:8960	5067584	0	True				
ANR	5067896	Identifier	err		5067584	0					
ANR	5067897	CompoundStatement		67:11:1525:1525	5067584	1					
ANR	5067898	ExpressionStatement	DUP ( 2 )	419:3:8968:8974	5067584	0	True				
ANR	5067899	CallExpression	DUP ( 2 )		5067584	0					
ANR	5067900	Callee	DUP		5067584	0					
ANR	5067901	Identifier	DUP		5067584	0					
ANR	5067902	ArgumentList	2		5067584	1					
ANR	5067903	Argument	2		5067584	0					
ANR	5067904	PrimaryExpression	2		5067584	0					
ANR	5067905	ExpressionStatement	close ( f )	421:2:8982:8991	5067584	16	True				
ANR	5067906	CallExpression	close ( f )		5067584	0					
ANR	5067907	Callee	close		5067584	0					
ANR	5067908	Identifier	close		5067584	0					
ANR	5067909	ArgumentList	f		5067584	1					
ANR	5067910	Argument	f		5067584	0					
ANR	5067911	Identifier	f		5067584	0					
ANR	5067912	ReturnStatement	return 0 ;	422:2:8995:9003	5067584	17	True				
ANR	5067913	PrimaryExpression	0		5067584	0					
ANR	5067914	ReturnType	static int		5067584	1					
ANR	5067915	Identifier	handle_redirection		5067584	2					
ANR	5067916	ParameterList	"const char * cmd , bool in , bool out , bool err"		5067584	3					
ANR	5067917	Parameter	const char * cmd	352:30:7391:7405	5067584	0	True				
ANR	5067918	ParameterType	const char *		5067584	0					
ANR	5067919	Identifier	cmd		5067584	1					
ANR	5067920	Parameter	bool in	352:47:7408:7414	5067584	1	True				
ANR	5067921	ParameterType	bool		5067584	0					
ANR	5067922	Identifier	in		5067584	1					
ANR	5067923	Parameter	bool out	352:56:7417:7424	5067584	2	True				
ANR	5067924	ParameterType	bool		5067584	0					
ANR	5067925	Identifier	out		5067584	1					
ANR	5067926	Parameter	bool err	352:66:7427:7434	5067584	3	True				
ANR	5067927	ParameterType	bool		5067584	0					
ANR	5067928	Identifier	err		5067584	1					
ANR	5067929	CFGEntryNode	ENTRY		5067584		True				
ANR	5067930	CFGExitNode	EXIT		5067584		True				
ANR	5067931	Symbol	flag		5067584						
ANR	5067932	Symbol	err		5067584						
ANR	5067933	Symbol	in		5067584						
ANR	5067934	Symbol	f		5067584						
ANR	5067935	Symbol	O_CREAT		5067584						
ANR	5067936	Symbol	_S_IREAD		5067584						
ANR	5067937	Symbol	out		5067584						
ANR	5067938	Symbol	mode		5067584						
ANR	5067939	Symbol	strlen		5067584						
ANR	5067940	Symbol	* pipes		5067584						
ANR	5067941	Symbol	O_RDONLY		5067584						
ANR	5067942	Symbol	handle_redirection_proc		5067584						
ANR	5067943	Symbol	x		5067584						
ANR	5067944	Symbol	_S_IWRITE		5067584						
ANR	5067945	Symbol	pipe		5067584						
ANR	5067946	Symbol	cmd		5067584						
ANR	5067947	Symbol	* cmd		5067584						
ANR	5067948	Symbol	cmdl		5067584						
ANR	5067949	Symbol	O_WRONLY		5067584						
ANR	5067950	Symbol	write		5067584						
ANR	5067951	Symbol	pipes		5067584						
ANR	5067952	Symbol	open		5067584						
ANR	5067953	Function	r_run_parsefile	426:0:9011:9187							
ANR	5067954	FunctionDef	"r_run_parsefile (RRunProfile * p , const char * b)"		5067953	0					
ANR	5067955	CompoundStatement		426:57:9068:9187	5067953	0					
ANR	5067956	IdentifierDeclStatement	"char * s = r_file_slurp ( b , NULL ) ;"	427:1:9071:9103	5067953	0	True				
ANR	5067957	IdentifierDecl	"* s = r_file_slurp ( b , NULL )"		5067953	0					
ANR	5067958	IdentifierDeclType	char *		5067953	0					
ANR	5067959	Identifier	s		5067953	1					
ANR	5067960	AssignmentExpression	"* s = r_file_slurp ( b , NULL )"		5067953	2		=			
ANR	5067961	Identifier	s		5067953	0					
ANR	5067962	CallExpression	"r_file_slurp ( b , NULL )"		5067953	1					
ANR	5067963	Callee	r_file_slurp		5067953	0					
ANR	5067964	Identifier	r_file_slurp		5067953	0					
ANR	5067965	ArgumentList	b		5067953	1					
ANR	5067966	Argument	b		5067953	0					
ANR	5067967	Identifier	b		5067953	0					
ANR	5067968	Argument	NULL		5067953	1					
ANR	5067969	Identifier	NULL		5067953	0					
ANR	5067970	IfStatement	if ( s )		5067953	1					
ANR	5067971	Condition	s	428:5:9110:9110	5067953	0	True				
ANR	5067972	Identifier	s		5067953	0					
ANR	5067973	CompoundStatement		4:2:48:76	5067953	1					
ANR	5067974	IdentifierDeclStatement	"int ret = r_run_parse ( p , s ) ;"	429:2:9117:9145	5067953	0	True				
ANR	5067975	IdentifierDecl	"ret = r_run_parse ( p , s )"		5067953	0					
ANR	5067976	IdentifierDeclType	int		5067953	0					
ANR	5067977	Identifier	ret		5067953	1					
ANR	5067978	AssignmentExpression	"ret = r_run_parse ( p , s )"		5067953	2		=			
ANR	5067979	Identifier	ret		5067953	0					
ANR	5067980	CallExpression	"r_run_parse ( p , s )"		5067953	1					
ANR	5067981	Callee	r_run_parse		5067953	0					
ANR	5067982	Identifier	r_run_parse		5067953	0					
ANR	5067983	ArgumentList	p		5067953	1					
ANR	5067984	Argument	p		5067953	0					
ANR	5067985	Identifier	p		5067953	0					
ANR	5067986	Argument	s		5067953	1					
ANR	5067987	Identifier	s		5067953	0					
ANR	5067988	ExpressionStatement	free ( s )	430:2:9149:9157	5067953	1	True				
ANR	5067989	CallExpression	free ( s )		5067953	0					
ANR	5067990	Callee	free		5067953	0					
ANR	5067991	Identifier	free		5067953	0					
ANR	5067992	ArgumentList	s		5067953	1					
ANR	5067993	Argument	s		5067953	0					
ANR	5067994	Identifier	s		5067953	0					
ANR	5067995	ReturnStatement	return ret ;	431:2:9161:9171	5067953	2	True				
ANR	5067996	Identifier	ret		5067953	0					
ANR	5067997	ReturnStatement	return 0 ;	433:1:9177:9185	5067953	2	True				
ANR	5067998	PrimaryExpression	0		5067953	0					
ANR	5067999	ReturnType	R_API int		5067953	1					
ANR	5068000	Identifier	r_run_parsefile		5067953	2					
ANR	5068001	ParameterList	"RRunProfile * p , const char * b"		5067953	3					
ANR	5068002	Parameter	RRunProfile * p	426:26:9037:9050	5067953	0	True				
ANR	5068003	ParameterType	RRunProfile *		5067953	0					
ANR	5068004	Identifier	p		5067953	1					
ANR	5068005	Parameter	const char * b	426:42:9053:9065	5067953	1	True				
ANR	5068006	ParameterType	const char *		5067953	0					
ANR	5068007	Identifier	b		5067953	1					
ANR	5068008	CFGEntryNode	ENTRY		5067953		True				
ANR	5068009	CFGExitNode	EXIT		5067953		True				
ANR	5068010	Symbol	p		5067953						
ANR	5068011	Symbol	ret		5067953						
ANR	5068012	Symbol	b		5067953						
ANR	5068013	Symbol	r_file_slurp		5067953						
ANR	5068014	Symbol	NULL		5067953						
ANR	5068015	Symbol	s		5067953						
ANR	5068016	Symbol	r_run_parse		5067953						
ANR	5068017	Function	r_run_parseline	436:0:9190:12988							
ANR	5068018	FunctionDef	"r_run_parseline (RRunProfile * p , char * b)"		5068017	0					
ANR	5068019	CompoundStatement		436:52:9242:12988	5068017	0					
ANR	5068020	IdentifierDeclStatement	int must_free = false ;	437:1:9245:9266	5068017	0	True				
ANR	5068021	IdentifierDecl	must_free = false		5068017	0					
ANR	5068022	IdentifierDeclType	int		5068017	0					
ANR	5068023	Identifier	must_free		5068017	1					
ANR	5068024	AssignmentExpression	must_free = false		5068017	2		=			
ANR	5068025	Identifier	false		5068017	0					
ANR	5068026	Identifier	false		5068017	1					
ANR	5068027	IdentifierDeclStatement	"char * e = strchr ( b , '=' ) ;"	438:1:9269:9294	5068017	1	True				
ANR	5068028	IdentifierDecl	"* e = strchr ( b , '=' )"		5068017	0					
ANR	5068029	IdentifierDeclType	char *		5068017	0					
ANR	5068030	Identifier	e		5068017	1					
ANR	5068031	AssignmentExpression	"* e = strchr ( b , '=' )"		5068017	2		=			
ANR	5068032	Identifier	e		5068017	0					
ANR	5068033	CallExpression	"strchr ( b , '=' )"		5068017	1					
ANR	5068034	Callee	strchr		5068017	0					
ANR	5068035	Identifier	strchr		5068017	0					
ANR	5068036	ArgumentList	b		5068017	1					
ANR	5068037	Argument	b		5068017	0					
ANR	5068038	Identifier	b		5068017	0					
ANR	5068039	Argument	'='		5068017	1					
ANR	5068040	PrimaryExpression	'='		5068017	0					
ANR	5068041	IfStatement	if ( ! e || * b == '#' )		5068017	2					
ANR	5068042	Condition	! e || * b == '#'	439:5:9301:9315	5068017	0	True				
ANR	5068043	OrExpression	! e || * b == '#'		5068017	0		||			
ANR	5068044	UnaryOperationExpression	! e		5068017	0					
ANR	5068045	UnaryOperator	!		5068017	0					
ANR	5068046	Identifier	e		5068017	1					
ANR	5068047	EqualityExpression	* b == '#'		5068017	1		==			
ANR	5068048	UnaryOperationExpression	* b		5068017	0					
ANR	5068049	UnaryOperator	*		5068017	0					
ANR	5068050	Identifier	b		5068017	1					
ANR	5068051	PrimaryExpression	'#'		5068017	1					
ANR	5068052	CompoundStatement		4:22:75:75	5068017	1					
ANR	5068053	ReturnStatement	return 0 ;	440:2:9322:9330	5068017	0	True				
ANR	5068054	PrimaryExpression	0		5068017	0					
ANR	5068055	ExpressionStatement	* e ++ = 0	442:1:9336:9344	5068017	3	True				
ANR	5068056	AssignmentExpression	* e ++ = 0		5068017	0		=			
ANR	5068057	UnaryOperationExpression	* e ++		5068017	0					
ANR	5068058	UnaryOperator	*		5068017	0					
ANR	5068059	PostIncDecOperationExpression	e ++		5068017	1					
ANR	5068060	Identifier	e		5068017	0					
ANR	5068061	IncDec	++		5068017	1					
ANR	5068062	PrimaryExpression	0		5068017	1					
ANR	5068063	IfStatement	if ( * e == '$' )		5068017	4					
ANR	5068064	Condition	* e == '$'	443:5:9351:9357	5068017	0	True				
ANR	5068065	EqualityExpression	* e == '$'		5068017	0		==			
ANR	5068066	UnaryOperationExpression	* e		5068017	0					
ANR	5068067	UnaryOperator	*		5068017	0					
ANR	5068068	Identifier	e		5068017	1					
ANR	5068069	PrimaryExpression	'$'		5068017	1					
ANR	5068070	CompoundStatement		8:14:117:117	5068017	1					
ANR	5068071	ExpressionStatement	must_free = true	444:2:9364:9380	5068017	0	True				
ANR	5068072	AssignmentExpression	must_free = true		5068017	0		=			
ANR	5068073	Identifier	must_free		5068017	0					
ANR	5068074	Identifier	true		5068017	1					
ANR	5068075	ExpressionStatement	e = r_sys_getenv ( e )	445:2:9384:9404	5068017	1	True				
ANR	5068076	AssignmentExpression	e = r_sys_getenv ( e )		5068017	0		=			
ANR	5068077	Identifier	e		5068017	0					
ANR	5068078	CallExpression	r_sys_getenv ( e )		5068017	1					
ANR	5068079	Callee	r_sys_getenv		5068017	0					
ANR	5068080	Identifier	r_sys_getenv		5068017	0					
ANR	5068081	ArgumentList	e		5068017	1					
ANR	5068082	Argument	e		5068017	0					
ANR	5068083	Identifier	e		5068017	0					
ANR	5068084	IfStatement	if ( ! e )		5068017	5					
ANR	5068085	Condition	! e	447:5:9414:9415	5068017	0	True				
ANR	5068086	UnaryOperationExpression	! e		5068017	0					
ANR	5068087	UnaryOperator	!		5068017	0					
ANR	5068088	Identifier	e		5068017	1					
ANR	5068089	CompoundStatement		12:9:175:175	5068017	1					
ANR	5068090	ReturnStatement	return 0 ;	448:2:9422:9430	5068017	0	True				
ANR	5068091	PrimaryExpression	0		5068017	0					
ANR	5068092	IfStatement	"if ( ! strcmp ( b , ""program"" ) )"		5068017	6					
ANR	5068093	Condition	"! strcmp ( b , ""program"" )"	450:5:9440:9461	5068017	0	True				
ANR	5068094	UnaryOperationExpression	"! strcmp ( b , ""program"" )"		5068017	0					
ANR	5068095	UnaryOperator	!		5068017	0					
ANR	5068096	CallExpression	"strcmp ( b , ""program"" )"		5068017	1					
ANR	5068097	Callee	strcmp		5068017	0					
ANR	5068098	Identifier	strcmp		5068017	0					
ANR	5068099	ArgumentList	b		5068017	1					
ANR	5068100	Argument	b		5068017	0					
ANR	5068101	Identifier	b		5068017	0					
ANR	5068102	Argument	"""program"""		5068017	1					
ANR	5068103	PrimaryExpression	"""program"""		5068017	0					
ANR	5068104	CompoundStatement		15:29:221:221	5068017	1					
ANR	5068105	ExpressionStatement	p -> _args [ 0 ] = p -> _program = strdup ( e )	451:2:9468:9506	5068017	0	True				
ANR	5068106	AssignmentExpression	p -> _args [ 0 ] = p -> _program = strdup ( e )		5068017	0		=			
ANR	5068107	ArrayIndexing	p -> _args [ 0 ]		5068017	0					
ANR	5068108	PtrMemberAccess	p -> _args		5068017	0					
ANR	5068109	Identifier	p		5068017	0					
ANR	5068110	Identifier	_args		5068017	1					
ANR	5068111	PrimaryExpression	0		5068017	1					
ANR	5068112	AssignmentExpression	p -> _program = strdup ( e )		5068017	1		=			
ANR	5068113	PtrMemberAccess	p -> _program		5068017	0					
ANR	5068114	Identifier	p		5068017	0					
ANR	5068115	Identifier	_program		5068017	1					
ANR	5068116	CallExpression	strdup ( e )		5068017	1					
ANR	5068117	Callee	strdup		5068017	0					
ANR	5068118	Identifier	strdup		5068017	0					
ANR	5068119	ArgumentList	e		5068017	1					
ANR	5068120	Argument	e		5068017	0					
ANR	5068121	Identifier	e		5068017	0					
ANR	5068122	ElseStatement	else		5068017	0					
ANR	5068123	IfStatement	"if ( ! strcmp ( b , ""system"" ) )"		5068017	0					
ANR	5068124	Condition	"! strcmp ( b , ""system"" )"	452:12:9520:9540	5068017	0	True				
ANR	5068125	UnaryOperationExpression	"! strcmp ( b , ""system"" )"		5068017	0					
ANR	5068126	UnaryOperator	!		5068017	0					
ANR	5068127	CallExpression	"strcmp ( b , ""system"" )"		5068017	1					
ANR	5068128	Callee	strcmp		5068017	0					
ANR	5068129	Identifier	strcmp		5068017	0					
ANR	5068130	ArgumentList	b		5068017	1					
ANR	5068131	Argument	b		5068017	0					
ANR	5068132	Identifier	b		5068017	0					
ANR	5068133	Argument	"""system"""		5068017	1					
ANR	5068134	PrimaryExpression	"""system"""		5068017	0					
ANR	5068135	CompoundStatement		17:35:300:300	5068017	1					
ANR	5068136	ExpressionStatement	p -> _system = strdup ( e )	453:2:9547:9570	5068017	0	True				
ANR	5068137	AssignmentExpression	p -> _system = strdup ( e )		5068017	0		=			
ANR	5068138	PtrMemberAccess	p -> _system		5068017	0					
ANR	5068139	Identifier	p		5068017	0					
ANR	5068140	Identifier	_system		5068017	1					
ANR	5068141	CallExpression	strdup ( e )		5068017	1					
ANR	5068142	Callee	strdup		5068017	0					
ANR	5068143	Identifier	strdup		5068017	0					
ANR	5068144	ArgumentList	e		5068017	1					
ANR	5068145	Argument	e		5068017	0					
ANR	5068146	Identifier	e		5068017	0					
ANR	5068147	ElseStatement	else		5068017	0					
ANR	5068148	IfStatement	"if ( ! strcmp ( b , ""runlib"" ) )"		5068017	0					
ANR	5068149	Condition	"! strcmp ( b , ""runlib"" )"	454:12:9584:9604	5068017	0	True				
ANR	5068150	UnaryOperationExpression	"! strcmp ( b , ""runlib"" )"		5068017	0					
ANR	5068151	UnaryOperator	!		5068017	0					
ANR	5068152	CallExpression	"strcmp ( b , ""runlib"" )"		5068017	1					
ANR	5068153	Callee	strcmp		5068017	0					
ANR	5068154	Identifier	strcmp		5068017	0					
ANR	5068155	ArgumentList	b		5068017	1					
ANR	5068156	Argument	b		5068017	0					
ANR	5068157	Identifier	b		5068017	0					
ANR	5068158	Argument	"""runlib"""		5068017	1					
ANR	5068159	PrimaryExpression	"""runlib"""		5068017	0					
ANR	5068160	CompoundStatement		19:35:364:364	5068017	1					
ANR	5068161	ExpressionStatement	p -> _runlib = strdup ( e )	455:2:9611:9634	5068017	0	True				
ANR	5068162	AssignmentExpression	p -> _runlib = strdup ( e )		5068017	0		=			
ANR	5068163	PtrMemberAccess	p -> _runlib		5068017	0					
ANR	5068164	Identifier	p		5068017	0					
ANR	5068165	Identifier	_runlib		5068017	1					
ANR	5068166	CallExpression	strdup ( e )		5068017	1					
ANR	5068167	Callee	strdup		5068017	0					
ANR	5068168	Identifier	strdup		5068017	0					
ANR	5068169	ArgumentList	e		5068017	1					
ANR	5068170	Argument	e		5068017	0					
ANR	5068171	Identifier	e		5068017	0					
ANR	5068172	ElseStatement	else		5068017	0					
ANR	5068173	IfStatement	"if ( ! strcmp ( b , ""runlib.fcn"" ) )"		5068017	0					
ANR	5068174	Condition	"! strcmp ( b , ""runlib.fcn"" )"	456:12:9648:9672	5068017	0	True				
ANR	5068175	UnaryOperationExpression	"! strcmp ( b , ""runlib.fcn"" )"		5068017	0					
ANR	5068176	UnaryOperator	!		5068017	0					
ANR	5068177	CallExpression	"strcmp ( b , ""runlib.fcn"" )"		5068017	1					
ANR	5068178	Callee	strcmp		5068017	0					
ANR	5068179	Identifier	strcmp		5068017	0					
ANR	5068180	ArgumentList	b		5068017	1					
ANR	5068181	Argument	b		5068017	0					
ANR	5068182	Identifier	b		5068017	0					
ANR	5068183	Argument	"""runlib.fcn"""		5068017	1					
ANR	5068184	PrimaryExpression	"""runlib.fcn"""		5068017	0					
ANR	5068185	CompoundStatement		21:39:432:432	5068017	1					
ANR	5068186	ExpressionStatement	p -> _runlib_fcn = strdup ( e )	457:2:9679:9706	5068017	0	True				
ANR	5068187	AssignmentExpression	p -> _runlib_fcn = strdup ( e )		5068017	0		=			
ANR	5068188	PtrMemberAccess	p -> _runlib_fcn		5068017	0					
ANR	5068189	Identifier	p		5068017	0					
ANR	5068190	Identifier	_runlib_fcn		5068017	1					
ANR	5068191	CallExpression	strdup ( e )		5068017	1					
ANR	5068192	Callee	strdup		5068017	0					
ANR	5068193	Identifier	strdup		5068017	0					
ANR	5068194	ArgumentList	e		5068017	1					
ANR	5068195	Argument	e		5068017	0					
ANR	5068196	Identifier	e		5068017	0					
ANR	5068197	ElseStatement	else		5068017	0					
ANR	5068198	IfStatement	"if ( ! strcmp ( b , ""aslr"" ) )"		5068017	0					
ANR	5068199	Condition	"! strcmp ( b , ""aslr"" )"	458:12:9720:9738	5068017	0	True				
ANR	5068200	UnaryOperationExpression	"! strcmp ( b , ""aslr"" )"		5068017	0					
ANR	5068201	UnaryOperator	!		5068017	0					
ANR	5068202	CallExpression	"strcmp ( b , ""aslr"" )"		5068017	1					
ANR	5068203	Callee	strcmp		5068017	0					
ANR	5068204	Identifier	strcmp		5068017	0					
ANR	5068205	ArgumentList	b		5068017	1					
ANR	5068206	Argument	b		5068017	0					
ANR	5068207	Identifier	b		5068017	0					
ANR	5068208	Argument	"""aslr"""		5068017	1					
ANR	5068209	PrimaryExpression	"""aslr"""		5068017	0					
ANR	5068210	CompoundStatement		23:33:498:498	5068017	1					
ANR	5068211	ExpressionStatement	p -> _aslr = parseBool ( e )	459:2:9745:9769	5068017	0	True				
ANR	5068212	AssignmentExpression	p -> _aslr = parseBool ( e )		5068017	0		=			
ANR	5068213	PtrMemberAccess	p -> _aslr		5068017	0					
ANR	5068214	Identifier	p		5068017	0					
ANR	5068215	Identifier	_aslr		5068017	1					
ANR	5068216	CallExpression	parseBool ( e )		5068017	1					
ANR	5068217	Callee	parseBool		5068017	0					
ANR	5068218	Identifier	parseBool		5068017	0					
ANR	5068219	ArgumentList	e		5068017	1					
ANR	5068220	Argument	e		5068017	0					
ANR	5068221	Identifier	e		5068017	0					
ANR	5068222	ElseStatement	else		5068017	0					
ANR	5068223	IfStatement	"if ( ! strcmp ( b , ""pid"" ) )"		5068017	0					
ANR	5068224	Condition	"! strcmp ( b , ""pid"" )"	460:12:9783:9800	5068017	0	True				
ANR	5068225	UnaryOperationExpression	"! strcmp ( b , ""pid"" )"		5068017	0					
ANR	5068226	UnaryOperator	!		5068017	0					
ANR	5068227	CallExpression	"strcmp ( b , ""pid"" )"		5068017	1					
ANR	5068228	Callee	strcmp		5068017	0					
ANR	5068229	Identifier	strcmp		5068017	0					
ANR	5068230	ArgumentList	b		5068017	1					
ANR	5068231	Argument	b		5068017	0					
ANR	5068232	Identifier	b		5068017	0					
ANR	5068233	Argument	"""pid"""		5068017	1					
ANR	5068234	PrimaryExpression	"""pid"""		5068017	0					
ANR	5068235	CompoundStatement		25:32:560:560	5068017	1					
ANR	5068236	ExpressionStatement	p -> _pid = atoi ( e )	461:2:9807:9825	5068017	0	True				
ANR	5068237	AssignmentExpression	p -> _pid = atoi ( e )		5068017	0		=			
ANR	5068238	PtrMemberAccess	p -> _pid		5068017	0					
ANR	5068239	Identifier	p		5068017	0					
ANR	5068240	Identifier	_pid		5068017	1					
ANR	5068241	CallExpression	atoi ( e )		5068017	1					
ANR	5068242	Callee	atoi		5068017	0					
ANR	5068243	Identifier	atoi		5068017	0					
ANR	5068244	ArgumentList	e		5068017	1					
ANR	5068245	Argument	e		5068017	0					
ANR	5068246	Identifier	e		5068017	0					
ANR	5068247	ElseStatement	else		5068017	0					
ANR	5068248	IfStatement	"if ( ! strcmp ( b , ""pidfile"" ) )"		5068017	0					
ANR	5068249	Condition	"! strcmp ( b , ""pidfile"" )"	462:12:9839:9860	5068017	0	True				
ANR	5068250	UnaryOperationExpression	"! strcmp ( b , ""pidfile"" )"		5068017	0					
ANR	5068251	UnaryOperator	!		5068017	0					
ANR	5068252	CallExpression	"strcmp ( b , ""pidfile"" )"		5068017	1					
ANR	5068253	Callee	strcmp		5068017	0					
ANR	5068254	Identifier	strcmp		5068017	0					
ANR	5068255	ArgumentList	b		5068017	1					
ANR	5068256	Argument	b		5068017	0					
ANR	5068257	Identifier	b		5068017	0					
ANR	5068258	Argument	"""pidfile"""		5068017	1					
ANR	5068259	PrimaryExpression	"""pidfile"""		5068017	0					
ANR	5068260	CompoundStatement		27:36:620:620	5068017	1					
ANR	5068261	ExpressionStatement	p -> _pidfile = strdup ( e )	463:2:9867:9891	5068017	0	True				
ANR	5068262	AssignmentExpression	p -> _pidfile = strdup ( e )		5068017	0		=			
ANR	5068263	PtrMemberAccess	p -> _pidfile		5068017	0					
ANR	5068264	Identifier	p		5068017	0					
ANR	5068265	Identifier	_pidfile		5068017	1					
ANR	5068266	CallExpression	strdup ( e )		5068017	1					
ANR	5068267	Callee	strdup		5068017	0					
ANR	5068268	Identifier	strdup		5068017	0					
ANR	5068269	ArgumentList	e		5068017	1					
ANR	5068270	Argument	e		5068017	0					
ANR	5068271	Identifier	e		5068017	0					
ANR	5068272	ElseStatement	else		5068017	0					
ANR	5068273	IfStatement	"if ( ! strcmp ( b , ""connect"" ) )"		5068017	0					
ANR	5068274	Condition	"! strcmp ( b , ""connect"" )"	464:12:9905:9926	5068017	0	True				
ANR	5068275	UnaryOperationExpression	"! strcmp ( b , ""connect"" )"		5068017	0					
ANR	5068276	UnaryOperator	!		5068017	0					
ANR	5068277	CallExpression	"strcmp ( b , ""connect"" )"		5068017	1					
ANR	5068278	Callee	strcmp		5068017	0					
ANR	5068279	Identifier	strcmp		5068017	0					
ANR	5068280	ArgumentList	b		5068017	1					
ANR	5068281	Argument	b		5068017	0					
ANR	5068282	Identifier	b		5068017	0					
ANR	5068283	Argument	"""connect"""		5068017	1					
ANR	5068284	PrimaryExpression	"""connect"""		5068017	0					
ANR	5068285	CompoundStatement		29:36:686:686	5068017	1					
ANR	5068286	ExpressionStatement	p -> _connect = strdup ( e )	465:2:9933:9957	5068017	0	True				
ANR	5068287	AssignmentExpression	p -> _connect = strdup ( e )		5068017	0		=			
ANR	5068288	PtrMemberAccess	p -> _connect		5068017	0					
ANR	5068289	Identifier	p		5068017	0					
ANR	5068290	Identifier	_connect		5068017	1					
ANR	5068291	CallExpression	strdup ( e )		5068017	1					
ANR	5068292	Callee	strdup		5068017	0					
ANR	5068293	Identifier	strdup		5068017	0					
ANR	5068294	ArgumentList	e		5068017	1					
ANR	5068295	Argument	e		5068017	0					
ANR	5068296	Identifier	e		5068017	0					
ANR	5068297	ElseStatement	else		5068017	0					
ANR	5068298	IfStatement	"if ( ! strcmp ( b , ""listen"" ) )"		5068017	0					
ANR	5068299	Condition	"! strcmp ( b , ""listen"" )"	466:12:9971:9991	5068017	0	True				
ANR	5068300	UnaryOperationExpression	"! strcmp ( b , ""listen"" )"		5068017	0					
ANR	5068301	UnaryOperator	!		5068017	0					
ANR	5068302	CallExpression	"strcmp ( b , ""listen"" )"		5068017	1					
ANR	5068303	Callee	strcmp		5068017	0					
ANR	5068304	Identifier	strcmp		5068017	0					
ANR	5068305	ArgumentList	b		5068017	1					
ANR	5068306	Argument	b		5068017	0					
ANR	5068307	Identifier	b		5068017	0					
ANR	5068308	Argument	"""listen"""		5068017	1					
ANR	5068309	PrimaryExpression	"""listen"""		5068017	0					
ANR	5068310	CompoundStatement		31:35:751:751	5068017	1					
ANR	5068311	ExpressionStatement	p -> _listen = strdup ( e )	467:2:9998:10021	5068017	0	True				
ANR	5068312	AssignmentExpression	p -> _listen = strdup ( e )		5068017	0		=			
ANR	5068313	PtrMemberAccess	p -> _listen		5068017	0					
ANR	5068314	Identifier	p		5068017	0					
ANR	5068315	Identifier	_listen		5068017	1					
ANR	5068316	CallExpression	strdup ( e )		5068017	1					
ANR	5068317	Callee	strdup		5068017	0					
ANR	5068318	Identifier	strdup		5068017	0					
ANR	5068319	ArgumentList	e		5068017	1					
ANR	5068320	Argument	e		5068017	0					
ANR	5068321	Identifier	e		5068017	0					
ANR	5068322	ElseStatement	else		5068017	0					
ANR	5068323	IfStatement	"if ( ! strcmp ( b , ""pty"" ) )"		5068017	0					
ANR	5068324	Condition	"! strcmp ( b , ""pty"" )"	468:12:10035:10052	5068017	0	True				
ANR	5068325	UnaryOperationExpression	"! strcmp ( b , ""pty"" )"		5068017	0					
ANR	5068326	UnaryOperator	!		5068017	0					
ANR	5068327	CallExpression	"strcmp ( b , ""pty"" )"		5068017	1					
ANR	5068328	Callee	strcmp		5068017	0					
ANR	5068329	Identifier	strcmp		5068017	0					
ANR	5068330	ArgumentList	b		5068017	1					
ANR	5068331	Argument	b		5068017	0					
ANR	5068332	Identifier	b		5068017	0					
ANR	5068333	Argument	"""pty"""		5068017	1					
ANR	5068334	PrimaryExpression	"""pty"""		5068017	0					
ANR	5068335	CompoundStatement		33:32:812:812	5068017	1					
ANR	5068336	ExpressionStatement	p -> _pty = parseBool ( e )	469:2:10059:10082	5068017	0	True				
ANR	5068337	AssignmentExpression	p -> _pty = parseBool ( e )		5068017	0		=			
ANR	5068338	PtrMemberAccess	p -> _pty		5068017	0					
ANR	5068339	Identifier	p		5068017	0					
ANR	5068340	Identifier	_pty		5068017	1					
ANR	5068341	CallExpression	parseBool ( e )		5068017	1					
ANR	5068342	Callee	parseBool		5068017	0					
ANR	5068343	Identifier	parseBool		5068017	0					
ANR	5068344	ArgumentList	e		5068017	1					
ANR	5068345	Argument	e		5068017	0					
ANR	5068346	Identifier	e		5068017	0					
ANR	5068347	ElseStatement	else		5068017	0					
ANR	5068348	IfStatement	"if ( ! strcmp ( b , ""stdio"" ) )"		5068017	0					
ANR	5068349	Condition	"! strcmp ( b , ""stdio"" )"	470:12:10096:10115	5068017	0	True				
ANR	5068350	UnaryOperationExpression	"! strcmp ( b , ""stdio"" )"		5068017	0					
ANR	5068351	UnaryOperator	!		5068017	0					
ANR	5068352	CallExpression	"strcmp ( b , ""stdio"" )"		5068017	1					
ANR	5068353	Callee	strcmp		5068017	0					
ANR	5068354	Identifier	strcmp		5068017	0					
ANR	5068355	ArgumentList	b		5068017	1					
ANR	5068356	Argument	b		5068017	0					
ANR	5068357	Identifier	b		5068017	0					
ANR	5068358	Argument	"""stdio"""		5068017	1					
ANR	5068359	PrimaryExpression	"""stdio"""		5068017	0					
ANR	5068360	CompoundStatement		35:34:875:875	5068017	1					
ANR	5068361	IfStatement	if ( e [ 0 ] == '!' )		5068017	0					
ANR	5068362	Condition	e [ 0 ] == '!'	471:6:10126:10136	5068017	0	True				
ANR	5068363	EqualityExpression	e [ 0 ] == '!'		5068017	0		==			
ANR	5068364	ArrayIndexing	e [ 0 ]		5068017	0					
ANR	5068365	Identifier	e		5068017	0					
ANR	5068366	PrimaryExpression	0		5068017	1					
ANR	5068367	PrimaryExpression	'!'		5068017	1					
ANR	5068368	CompoundStatement		36:19:896:896	5068017	1					
ANR	5068369	ExpressionStatement	p -> _stdio = strdup ( e )	472:3:10144:10166	5068017	0	True				
ANR	5068370	AssignmentExpression	p -> _stdio = strdup ( e )		5068017	0		=			
ANR	5068371	PtrMemberAccess	p -> _stdio		5068017	0					
ANR	5068372	Identifier	p		5068017	0					
ANR	5068373	Identifier	_stdio		5068017	1					
ANR	5068374	CallExpression	strdup ( e )		5068017	1					
ANR	5068375	Callee	strdup		5068017	0					
ANR	5068376	Identifier	strdup		5068017	0					
ANR	5068377	ArgumentList	e		5068017	1					
ANR	5068378	Argument	e		5068017	0					
ANR	5068379	Identifier	e		5068017	0					
ANR	5068380	ElseStatement	else		5068017	0					
ANR	5068381	CompoundStatement		38:9:934:934	5068017	0					
ANR	5068382	ExpressionStatement	p -> _stdout = strdup ( e )	474:3:10182:10205	5068017	0	True				
ANR	5068383	AssignmentExpression	p -> _stdout = strdup ( e )		5068017	0		=			
ANR	5068384	PtrMemberAccess	p -> _stdout		5068017	0					
ANR	5068385	Identifier	p		5068017	0					
ANR	5068386	Identifier	_stdout		5068017	1					
ANR	5068387	CallExpression	strdup ( e )		5068017	1					
ANR	5068388	Callee	strdup		5068017	0					
ANR	5068389	Identifier	strdup		5068017	0					
ANR	5068390	ArgumentList	e		5068017	1					
ANR	5068391	Argument	e		5068017	0					
ANR	5068392	Identifier	e		5068017	0					
ANR	5068393	ExpressionStatement	p -> _stderr = strdup ( e )	475:3:10210:10233	5068017	1	True				
ANR	5068394	AssignmentExpression	p -> _stderr = strdup ( e )		5068017	0		=			
ANR	5068395	PtrMemberAccess	p -> _stderr		5068017	0					
ANR	5068396	Identifier	p		5068017	0					
ANR	5068397	Identifier	_stderr		5068017	1					
ANR	5068398	CallExpression	strdup ( e )		5068017	1					
ANR	5068399	Callee	strdup		5068017	0					
ANR	5068400	Identifier	strdup		5068017	0					
ANR	5068401	ArgumentList	e		5068017	1					
ANR	5068402	Argument	e		5068017	0					
ANR	5068403	Identifier	e		5068017	0					
ANR	5068404	ExpressionStatement	p -> _stdin = strdup ( e )	476:3:10238:10260	5068017	2	True				
ANR	5068405	AssignmentExpression	p -> _stdin = strdup ( e )		5068017	0		=			
ANR	5068406	PtrMemberAccess	p -> _stdin		5068017	0					
ANR	5068407	Identifier	p		5068017	0					
ANR	5068408	Identifier	_stdin		5068017	1					
ANR	5068409	CallExpression	strdup ( e )		5068017	1					
ANR	5068410	Callee	strdup		5068017	0					
ANR	5068411	Identifier	strdup		5068017	0					
ANR	5068412	ArgumentList	e		5068017	1					
ANR	5068413	Argument	e		5068017	0					
ANR	5068414	Identifier	e		5068017	0					
ANR	5068415	ElseStatement	else		5068017	0					
ANR	5068416	IfStatement	"if ( ! strcmp ( b , ""stdout"" ) )"		5068017	0					
ANR	5068417	Condition	"! strcmp ( b , ""stdout"" )"	478:12:10278:10298	5068017	0	True				
ANR	5068418	UnaryOperationExpression	"! strcmp ( b , ""stdout"" )"		5068017	0					
ANR	5068419	UnaryOperator	!		5068017	0					
ANR	5068420	CallExpression	"strcmp ( b , ""stdout"" )"		5068017	1					
ANR	5068421	Callee	strcmp		5068017	0					
ANR	5068422	Identifier	strcmp		5068017	0					
ANR	5068423	ArgumentList	b		5068017	1					
ANR	5068424	Argument	b		5068017	0					
ANR	5068425	Identifier	b		5068017	0					
ANR	5068426	Argument	"""stdout"""		5068017	1					
ANR	5068427	PrimaryExpression	"""stdout"""		5068017	0					
ANR	5068428	CompoundStatement		43:35:1058:1058	5068017	1					
ANR	5068429	ExpressionStatement	p -> _stdout = strdup ( e )	479:2:10305:10328	5068017	0	True				
ANR	5068430	AssignmentExpression	p -> _stdout = strdup ( e )		5068017	0		=			
ANR	5068431	PtrMemberAccess	p -> _stdout		5068017	0					
ANR	5068432	Identifier	p		5068017	0					
ANR	5068433	Identifier	_stdout		5068017	1					
ANR	5068434	CallExpression	strdup ( e )		5068017	1					
ANR	5068435	Callee	strdup		5068017	0					
ANR	5068436	Identifier	strdup		5068017	0					
ANR	5068437	ArgumentList	e		5068017	1					
ANR	5068438	Argument	e		5068017	0					
ANR	5068439	Identifier	e		5068017	0					
ANR	5068440	ElseStatement	else		5068017	0					
ANR	5068441	IfStatement	"if ( ! strcmp ( b , ""stdin"" ) )"		5068017	0					
ANR	5068442	Condition	"! strcmp ( b , ""stdin"" )"	480:12:10342:10361	5068017	0	True				
ANR	5068443	UnaryOperationExpression	"! strcmp ( b , ""stdin"" )"		5068017	0					
ANR	5068444	UnaryOperator	!		5068017	0					
ANR	5068445	CallExpression	"strcmp ( b , ""stdin"" )"		5068017	1					
ANR	5068446	Callee	strcmp		5068017	0					
ANR	5068447	Identifier	strcmp		5068017	0					
ANR	5068448	ArgumentList	b		5068017	1					
ANR	5068449	Argument	b		5068017	0					
ANR	5068450	Identifier	b		5068017	0					
ANR	5068451	Argument	"""stdin"""		5068017	1					
ANR	5068452	PrimaryExpression	"""stdin"""		5068017	0					
ANR	5068453	CompoundStatement		45:34:1121:1121	5068017	1					
ANR	5068454	ExpressionStatement	p -> _stdin = strdup ( e )	481:2:10368:10390	5068017	0	True				
ANR	5068455	AssignmentExpression	p -> _stdin = strdup ( e )		5068017	0		=			
ANR	5068456	PtrMemberAccess	p -> _stdin		5068017	0					
ANR	5068457	Identifier	p		5068017	0					
ANR	5068458	Identifier	_stdin		5068017	1					
ANR	5068459	CallExpression	strdup ( e )		5068017	1					
ANR	5068460	Callee	strdup		5068017	0					
ANR	5068461	Identifier	strdup		5068017	0					
ANR	5068462	ArgumentList	e		5068017	1					
ANR	5068463	Argument	e		5068017	0					
ANR	5068464	Identifier	e		5068017	0					
ANR	5068465	ElseStatement	else		5068017	0					
ANR	5068466	IfStatement	"if ( ! strcmp ( b , ""stderr"" ) )"		5068017	0					
ANR	5068467	Condition	"! strcmp ( b , ""stderr"" )"	482:12:10404:10424	5068017	0	True				
ANR	5068468	UnaryOperationExpression	"! strcmp ( b , ""stderr"" )"		5068017	0					
ANR	5068469	UnaryOperator	!		5068017	0					
ANR	5068470	CallExpression	"strcmp ( b , ""stderr"" )"		5068017	1					
ANR	5068471	Callee	strcmp		5068017	0					
ANR	5068472	Identifier	strcmp		5068017	0					
ANR	5068473	ArgumentList	b		5068017	1					
ANR	5068474	Argument	b		5068017	0					
ANR	5068475	Identifier	b		5068017	0					
ANR	5068476	Argument	"""stderr"""		5068017	1					
ANR	5068477	PrimaryExpression	"""stderr"""		5068017	0					
ANR	5068478	CompoundStatement		47:35:1184:1184	5068017	1					
ANR	5068479	ExpressionStatement	p -> _stderr = strdup ( e )	483:2:10431:10454	5068017	0	True				
ANR	5068480	AssignmentExpression	p -> _stderr = strdup ( e )		5068017	0		=			
ANR	5068481	PtrMemberAccess	p -> _stderr		5068017	0					
ANR	5068482	Identifier	p		5068017	0					
ANR	5068483	Identifier	_stderr		5068017	1					
ANR	5068484	CallExpression	strdup ( e )		5068017	1					
ANR	5068485	Callee	strdup		5068017	0					
ANR	5068486	Identifier	strdup		5068017	0					
ANR	5068487	ArgumentList	e		5068017	1					
ANR	5068488	Argument	e		5068017	0					
ANR	5068489	Identifier	e		5068017	0					
ANR	5068490	ElseStatement	else		5068017	0					
ANR	5068491	IfStatement	"if ( ! strcmp ( b , ""input"" ) )"		5068017	0					
ANR	5068492	Condition	"! strcmp ( b , ""input"" )"	484:12:10468:10487	5068017	0	True				
ANR	5068493	UnaryOperationExpression	"! strcmp ( b , ""input"" )"		5068017	0					
ANR	5068494	UnaryOperator	!		5068017	0					
ANR	5068495	CallExpression	"strcmp ( b , ""input"" )"		5068017	1					
ANR	5068496	Callee	strcmp		5068017	0					
ANR	5068497	Identifier	strcmp		5068017	0					
ANR	5068498	ArgumentList	b		5068017	1					
ANR	5068499	Argument	b		5068017	0					
ANR	5068500	Identifier	b		5068017	0					
ANR	5068501	Argument	"""input"""		5068017	1					
ANR	5068502	PrimaryExpression	"""input"""		5068017	0					
ANR	5068503	CompoundStatement		49:34:1247:1247	5068017	1					
ANR	5068504	ExpressionStatement	p -> _input = strdup ( e )	485:2:10494:10516	5068017	0	True				
ANR	5068505	AssignmentExpression	p -> _input = strdup ( e )		5068017	0		=			
ANR	5068506	PtrMemberAccess	p -> _input		5068017	0					
ANR	5068507	Identifier	p		5068017	0					
ANR	5068508	Identifier	_input		5068017	1					
ANR	5068509	CallExpression	strdup ( e )		5068017	1					
ANR	5068510	Callee	strdup		5068017	0					
ANR	5068511	Identifier	strdup		5068017	0					
ANR	5068512	ArgumentList	e		5068017	1					
ANR	5068513	Argument	e		5068017	0					
ANR	5068514	Identifier	e		5068017	0					
ANR	5068515	ElseStatement	else		5068017	0					
ANR	5068516	IfStatement	"if ( ! strcmp ( b , ""chdir"" ) )"		5068017	0					
ANR	5068517	Condition	"! strcmp ( b , ""chdir"" )"	486:12:10530:10549	5068017	0	True				
ANR	5068518	UnaryOperationExpression	"! strcmp ( b , ""chdir"" )"		5068017	0					
ANR	5068519	UnaryOperator	!		5068017	0					
ANR	5068520	CallExpression	"strcmp ( b , ""chdir"" )"		5068017	1					
ANR	5068521	Callee	strcmp		5068017	0					
ANR	5068522	Identifier	strcmp		5068017	0					
ANR	5068523	ArgumentList	b		5068017	1					
ANR	5068524	Argument	b		5068017	0					
ANR	5068525	Identifier	b		5068017	0					
ANR	5068526	Argument	"""chdir"""		5068017	1					
ANR	5068527	PrimaryExpression	"""chdir"""		5068017	0					
ANR	5068528	CompoundStatement		51:34:1309:1309	5068017	1					
ANR	5068529	ExpressionStatement	p -> _chgdir = strdup ( e )	487:2:10556:10579	5068017	0	True				
ANR	5068530	AssignmentExpression	p -> _chgdir = strdup ( e )		5068017	0		=			
ANR	5068531	PtrMemberAccess	p -> _chgdir		5068017	0					
ANR	5068532	Identifier	p		5068017	0					
ANR	5068533	Identifier	_chgdir		5068017	1					
ANR	5068534	CallExpression	strdup ( e )		5068017	1					
ANR	5068535	Callee	strdup		5068017	0					
ANR	5068536	Identifier	strdup		5068017	0					
ANR	5068537	ArgumentList	e		5068017	1					
ANR	5068538	Argument	e		5068017	0					
ANR	5068539	Identifier	e		5068017	0					
ANR	5068540	ElseStatement	else		5068017	0					
ANR	5068541	IfStatement	"if ( ! strcmp ( b , ""core"" ) )"		5068017	0					
ANR	5068542	Condition	"! strcmp ( b , ""core"" )"	488:12:10593:10611	5068017	0	True				
ANR	5068543	UnaryOperationExpression	"! strcmp ( b , ""core"" )"		5068017	0					
ANR	5068544	UnaryOperator	!		5068017	0					
ANR	5068545	CallExpression	"strcmp ( b , ""core"" )"		5068017	1					
ANR	5068546	Callee	strcmp		5068017	0					
ANR	5068547	Identifier	strcmp		5068017	0					
ANR	5068548	ArgumentList	b		5068017	1					
ANR	5068549	Argument	b		5068017	0					
ANR	5068550	Identifier	b		5068017	0					
ANR	5068551	Argument	"""core"""		5068017	1					
ANR	5068552	PrimaryExpression	"""core"""		5068017	0					
ANR	5068553	CompoundStatement		53:33:1371:1371	5068017	1					
ANR	5068554	ExpressionStatement	p -> _docore = parseBool ( e )	489:2:10618:10644	5068017	0	True				
ANR	5068555	AssignmentExpression	p -> _docore = parseBool ( e )		5068017	0		=			
ANR	5068556	PtrMemberAccess	p -> _docore		5068017	0					
ANR	5068557	Identifier	p		5068017	0					
ANR	5068558	Identifier	_docore		5068017	1					
ANR	5068559	CallExpression	parseBool ( e )		5068017	1					
ANR	5068560	Callee	parseBool		5068017	0					
ANR	5068561	Identifier	parseBool		5068017	0					
ANR	5068562	ArgumentList	e		5068017	1					
ANR	5068563	Argument	e		5068017	0					
ANR	5068564	Identifier	e		5068017	0					
ANR	5068565	ElseStatement	else		5068017	0					
ANR	5068566	IfStatement	"if ( ! strcmp ( b , ""fork"" ) )"		5068017	0					
ANR	5068567	Condition	"! strcmp ( b , ""fork"" )"	490:12:10658:10676	5068017	0	True				
ANR	5068568	UnaryOperationExpression	"! strcmp ( b , ""fork"" )"		5068017	0					
ANR	5068569	UnaryOperator	!		5068017	0					
ANR	5068570	CallExpression	"strcmp ( b , ""fork"" )"		5068017	1					
ANR	5068571	Callee	strcmp		5068017	0					
ANR	5068572	Identifier	strcmp		5068017	0					
ANR	5068573	ArgumentList	b		5068017	1					
ANR	5068574	Argument	b		5068017	0					
ANR	5068575	Identifier	b		5068017	0					
ANR	5068576	Argument	"""fork"""		5068017	1					
ANR	5068577	PrimaryExpression	"""fork"""		5068017	0					
ANR	5068578	CompoundStatement		55:33:1436:1436	5068017	1					
ANR	5068579	ExpressionStatement	p -> _dofork = parseBool ( e )	491:2:10683:10709	5068017	0	True				
ANR	5068580	AssignmentExpression	p -> _dofork = parseBool ( e )		5068017	0		=			
ANR	5068581	PtrMemberAccess	p -> _dofork		5068017	0					
ANR	5068582	Identifier	p		5068017	0					
ANR	5068583	Identifier	_dofork		5068017	1					
ANR	5068584	CallExpression	parseBool ( e )		5068017	1					
ANR	5068585	Callee	parseBool		5068017	0					
ANR	5068586	Identifier	parseBool		5068017	0					
ANR	5068587	ArgumentList	e		5068017	1					
ANR	5068588	Argument	e		5068017	0					
ANR	5068589	Identifier	e		5068017	0					
ANR	5068590	ElseStatement	else		5068017	0					
ANR	5068591	IfStatement	"if ( ! strcmp ( b , ""sleep"" ) )"		5068017	0					
ANR	5068592	Condition	"! strcmp ( b , ""sleep"" )"	492:12:10723:10742	5068017	0	True				
ANR	5068593	UnaryOperationExpression	"! strcmp ( b , ""sleep"" )"		5068017	0					
ANR	5068594	UnaryOperator	!		5068017	0					
ANR	5068595	CallExpression	"strcmp ( b , ""sleep"" )"		5068017	1					
ANR	5068596	Callee	strcmp		5068017	0					
ANR	5068597	Identifier	strcmp		5068017	0					
ANR	5068598	ArgumentList	b		5068017	1					
ANR	5068599	Argument	b		5068017	0					
ANR	5068600	Identifier	b		5068017	0					
ANR	5068601	Argument	"""sleep"""		5068017	1					
ANR	5068602	PrimaryExpression	"""sleep"""		5068017	0					
ANR	5068603	CompoundStatement		57:34:1502:1502	5068017	1					
ANR	5068604	ExpressionStatement	p -> _r2sleep = atoi ( e )	493:2:10749:10771	5068017	0	True				
ANR	5068605	AssignmentExpression	p -> _r2sleep = atoi ( e )		5068017	0		=			
ANR	5068606	PtrMemberAccess	p -> _r2sleep		5068017	0					
ANR	5068607	Identifier	p		5068017	0					
ANR	5068608	Identifier	_r2sleep		5068017	1					
ANR	5068609	CallExpression	atoi ( e )		5068017	1					
ANR	5068610	Callee	atoi		5068017	0					
ANR	5068611	Identifier	atoi		5068017	0					
ANR	5068612	ArgumentList	e		5068017	1					
ANR	5068613	Argument	e		5068017	0					
ANR	5068614	Identifier	e		5068017	0					
ANR	5068615	ElseStatement	else		5068017	0					
ANR	5068616	IfStatement	"if ( ! strcmp ( b , ""maxstack"" ) )"		5068017	0					
ANR	5068617	Condition	"! strcmp ( b , ""maxstack"" )"	494:12:10785:10807	5068017	0	True				
ANR	5068618	UnaryOperationExpression	"! strcmp ( b , ""maxstack"" )"		5068017	0					
ANR	5068619	UnaryOperator	!		5068017	0					
ANR	5068620	CallExpression	"strcmp ( b , ""maxstack"" )"		5068017	1					
ANR	5068621	Callee	strcmp		5068017	0					
ANR	5068622	Identifier	strcmp		5068017	0					
ANR	5068623	ArgumentList	b		5068017	1					
ANR	5068624	Argument	b		5068017	0					
ANR	5068625	Identifier	b		5068017	0					
ANR	5068626	Argument	"""maxstack"""		5068017	1					
ANR	5068627	PrimaryExpression	"""maxstack"""		5068017	0					
ANR	5068628	CompoundStatement		59:37:1567:1567	5068017	1					
ANR	5068629	ExpressionStatement	p -> _maxstack = atoi ( e )	495:2:10814:10837	5068017	0	True				
ANR	5068630	AssignmentExpression	p -> _maxstack = atoi ( e )		5068017	0		=			
ANR	5068631	PtrMemberAccess	p -> _maxstack		5068017	0					
ANR	5068632	Identifier	p		5068017	0					
ANR	5068633	Identifier	_maxstack		5068017	1					
ANR	5068634	CallExpression	atoi ( e )		5068017	1					
ANR	5068635	Callee	atoi		5068017	0					
ANR	5068636	Identifier	atoi		5068017	0					
ANR	5068637	ArgumentList	e		5068017	1					
ANR	5068638	Argument	e		5068017	0					
ANR	5068639	Identifier	e		5068017	0					
ANR	5068640	ElseStatement	else		5068017	0					
ANR	5068641	IfStatement	"if ( ! strcmp ( b , ""maxproc"" ) )"		5068017	0					
ANR	5068642	Condition	"! strcmp ( b , ""maxproc"" )"	496:12:10851:10872	5068017	0	True				
ANR	5068643	UnaryOperationExpression	"! strcmp ( b , ""maxproc"" )"		5068017	0					
ANR	5068644	UnaryOperator	!		5068017	0					
ANR	5068645	CallExpression	"strcmp ( b , ""maxproc"" )"		5068017	1					
ANR	5068646	Callee	strcmp		5068017	0					
ANR	5068647	Identifier	strcmp		5068017	0					
ANR	5068648	ArgumentList	b		5068017	1					
ANR	5068649	Argument	b		5068017	0					
ANR	5068650	Identifier	b		5068017	0					
ANR	5068651	Argument	"""maxproc"""		5068017	1					
ANR	5068652	PrimaryExpression	"""maxproc"""		5068017	0					
ANR	5068653	CompoundStatement		61:36:1632:1632	5068017	1					
ANR	5068654	ExpressionStatement	p -> _maxproc = atoi ( e )	497:2:10879:10901	5068017	0	True				
ANR	5068655	AssignmentExpression	p -> _maxproc = atoi ( e )		5068017	0		=			
ANR	5068656	PtrMemberAccess	p -> _maxproc		5068017	0					
ANR	5068657	Identifier	p		5068017	0					
ANR	5068658	Identifier	_maxproc		5068017	1					
ANR	5068659	CallExpression	atoi ( e )		5068017	1					
ANR	5068660	Callee	atoi		5068017	0					
ANR	5068661	Identifier	atoi		5068017	0					
ANR	5068662	ArgumentList	e		5068017	1					
ANR	5068663	Argument	e		5068017	0					
ANR	5068664	Identifier	e		5068017	0					
ANR	5068665	ElseStatement	else		5068017	0					
ANR	5068666	IfStatement	"if ( ! strcmp ( b , ""maxfd"" ) )"		5068017	0					
ANR	5068667	Condition	"! strcmp ( b , ""maxfd"" )"	498:12:10915:10934	5068017	0	True				
ANR	5068668	UnaryOperationExpression	"! strcmp ( b , ""maxfd"" )"		5068017	0					
ANR	5068669	UnaryOperator	!		5068017	0					
ANR	5068670	CallExpression	"strcmp ( b , ""maxfd"" )"		5068017	1					
ANR	5068671	Callee	strcmp		5068017	0					
ANR	5068672	Identifier	strcmp		5068017	0					
ANR	5068673	ArgumentList	b		5068017	1					
ANR	5068674	Argument	b		5068017	0					
ANR	5068675	Identifier	b		5068017	0					
ANR	5068676	Argument	"""maxfd"""		5068017	1					
ANR	5068677	PrimaryExpression	"""maxfd"""		5068017	0					
ANR	5068678	CompoundStatement		63:34:1694:1694	5068017	1					
ANR	5068679	ExpressionStatement	p -> _maxfd = atoi ( e )	499:2:10941:10961	5068017	0	True				
ANR	5068680	AssignmentExpression	p -> _maxfd = atoi ( e )		5068017	0		=			
ANR	5068681	PtrMemberAccess	p -> _maxfd		5068017	0					
ANR	5068682	Identifier	p		5068017	0					
ANR	5068683	Identifier	_maxfd		5068017	1					
ANR	5068684	CallExpression	atoi ( e )		5068017	1					
ANR	5068685	Callee	atoi		5068017	0					
ANR	5068686	Identifier	atoi		5068017	0					
ANR	5068687	ArgumentList	e		5068017	1					
ANR	5068688	Argument	e		5068017	0					
ANR	5068689	Identifier	e		5068017	0					
ANR	5068690	ElseStatement	else		5068017	0					
ANR	5068691	IfStatement	"if ( ! strcmp ( b , ""bits"" ) )"		5068017	0					
ANR	5068692	Condition	"! strcmp ( b , ""bits"" )"	500:12:10975:10993	5068017	0	True				
ANR	5068693	UnaryOperationExpression	"! strcmp ( b , ""bits"" )"		5068017	0					
ANR	5068694	UnaryOperator	!		5068017	0					
ANR	5068695	CallExpression	"strcmp ( b , ""bits"" )"		5068017	1					
ANR	5068696	Callee	strcmp		5068017	0					
ANR	5068697	Identifier	strcmp		5068017	0					
ANR	5068698	ArgumentList	b		5068017	1					
ANR	5068699	Argument	b		5068017	0					
ANR	5068700	Identifier	b		5068017	0					
ANR	5068701	Argument	"""bits"""		5068017	1					
ANR	5068702	PrimaryExpression	"""bits"""		5068017	0					
ANR	5068703	CompoundStatement		65:33:1753:1753	5068017	1					
ANR	5068704	ExpressionStatement	p -> _bits = atoi ( e )	501:2:11000:11019	5068017	0	True				
ANR	5068705	AssignmentExpression	p -> _bits = atoi ( e )		5068017	0		=			
ANR	5068706	PtrMemberAccess	p -> _bits		5068017	0					
ANR	5068707	Identifier	p		5068017	0					
ANR	5068708	Identifier	_bits		5068017	1					
ANR	5068709	CallExpression	atoi ( e )		5068017	1					
ANR	5068710	Callee	atoi		5068017	0					
ANR	5068711	Identifier	atoi		5068017	0					
ANR	5068712	ArgumentList	e		5068017	1					
ANR	5068713	Argument	e		5068017	0					
ANR	5068714	Identifier	e		5068017	0					
ANR	5068715	ElseStatement	else		5068017	0					
ANR	5068716	IfStatement	"if ( ! strcmp ( b , ""chroot"" ) )"		5068017	0					
ANR	5068717	Condition	"! strcmp ( b , ""chroot"" )"	502:12:11033:11053	5068017	0	True				
ANR	5068718	UnaryOperationExpression	"! strcmp ( b , ""chroot"" )"		5068017	0					
ANR	5068719	UnaryOperator	!		5068017	0					
ANR	5068720	CallExpression	"strcmp ( b , ""chroot"" )"		5068017	1					
ANR	5068721	Callee	strcmp		5068017	0					
ANR	5068722	Identifier	strcmp		5068017	0					
ANR	5068723	ArgumentList	b		5068017	1					
ANR	5068724	Argument	b		5068017	0					
ANR	5068725	Identifier	b		5068017	0					
ANR	5068726	Argument	"""chroot"""		5068017	1					
ANR	5068727	PrimaryExpression	"""chroot"""		5068017	0					
ANR	5068728	CompoundStatement		67:35:1813:1813	5068017	1					
ANR	5068729	ExpressionStatement	p -> _chroot = strdup ( e )	503:2:11060:11083	5068017	0	True				
ANR	5068730	AssignmentExpression	p -> _chroot = strdup ( e )		5068017	0		=			
ANR	5068731	PtrMemberAccess	p -> _chroot		5068017	0					
ANR	5068732	Identifier	p		5068017	0					
ANR	5068733	Identifier	_chroot		5068017	1					
ANR	5068734	CallExpression	strdup ( e )		5068017	1					
ANR	5068735	Callee	strdup		5068017	0					
ANR	5068736	Identifier	strdup		5068017	0					
ANR	5068737	ArgumentList	e		5068017	1					
ANR	5068738	Argument	e		5068017	0					
ANR	5068739	Identifier	e		5068017	0					
ANR	5068740	ElseStatement	else		5068017	0					
ANR	5068741	IfStatement	"if ( ! strcmp ( b , ""libpath"" ) )"		5068017	0					
ANR	5068742	Condition	"! strcmp ( b , ""libpath"" )"	504:12:11097:11118	5068017	0	True				
ANR	5068743	UnaryOperationExpression	"! strcmp ( b , ""libpath"" )"		5068017	0					
ANR	5068744	UnaryOperator	!		5068017	0					
ANR	5068745	CallExpression	"strcmp ( b , ""libpath"" )"		5068017	1					
ANR	5068746	Callee	strcmp		5068017	0					
ANR	5068747	Identifier	strcmp		5068017	0					
ANR	5068748	ArgumentList	b		5068017	1					
ANR	5068749	Argument	b		5068017	0					
ANR	5068750	Identifier	b		5068017	0					
ANR	5068751	Argument	"""libpath"""		5068017	1					
ANR	5068752	PrimaryExpression	"""libpath"""		5068017	0					
ANR	5068753	CompoundStatement		69:36:1878:1878	5068017	1					
ANR	5068754	ExpressionStatement	p -> _libpath = strdup ( e )	505:2:11125:11149	5068017	0	True				
ANR	5068755	AssignmentExpression	p -> _libpath = strdup ( e )		5068017	0		=			
ANR	5068756	PtrMemberAccess	p -> _libpath		5068017	0					
ANR	5068757	Identifier	p		5068017	0					
ANR	5068758	Identifier	_libpath		5068017	1					
ANR	5068759	CallExpression	strdup ( e )		5068017	1					
ANR	5068760	Callee	strdup		5068017	0					
ANR	5068761	Identifier	strdup		5068017	0					
ANR	5068762	ArgumentList	e		5068017	1					
ANR	5068763	Argument	e		5068017	0					
ANR	5068764	Identifier	e		5068017	0					
ANR	5068765	ElseStatement	else		5068017	0					
ANR	5068766	IfStatement	"if ( ! strcmp ( b , ""preload"" ) )"		5068017	0					
ANR	5068767	Condition	"! strcmp ( b , ""preload"" )"	506:12:11163:11184	5068017	0	True				
ANR	5068768	UnaryOperationExpression	"! strcmp ( b , ""preload"" )"		5068017	0					
ANR	5068769	UnaryOperator	!		5068017	0					
ANR	5068770	CallExpression	"strcmp ( b , ""preload"" )"		5068017	1					
ANR	5068771	Callee	strcmp		5068017	0					
ANR	5068772	Identifier	strcmp		5068017	0					
ANR	5068773	ArgumentList	b		5068017	1					
ANR	5068774	Argument	b		5068017	0					
ANR	5068775	Identifier	b		5068017	0					
ANR	5068776	Argument	"""preload"""		5068017	1					
ANR	5068777	PrimaryExpression	"""preload"""		5068017	0					
ANR	5068778	CompoundStatement		71:36:1944:1944	5068017	1					
ANR	5068779	ExpressionStatement	p -> _preload = strdup ( e )	507:2:11191:11215	5068017	0	True				
ANR	5068780	AssignmentExpression	p -> _preload = strdup ( e )		5068017	0		=			
ANR	5068781	PtrMemberAccess	p -> _preload		5068017	0					
ANR	5068782	Identifier	p		5068017	0					
ANR	5068783	Identifier	_preload		5068017	1					
ANR	5068784	CallExpression	strdup ( e )		5068017	1					
ANR	5068785	Callee	strdup		5068017	0					
ANR	5068786	Identifier	strdup		5068017	0					
ANR	5068787	ArgumentList	e		5068017	1					
ANR	5068788	Argument	e		5068017	0					
ANR	5068789	Identifier	e		5068017	0					
ANR	5068790	ElseStatement	else		5068017	0					
ANR	5068791	IfStatement	"if ( ! strcmp ( b , ""r2preload"" ) )"		5068017	0					
ANR	5068792	Condition	"! strcmp ( b , ""r2preload"" )"	508:12:11229:11252	5068017	0	True				
ANR	5068793	UnaryOperationExpression	"! strcmp ( b , ""r2preload"" )"		5068017	0					
ANR	5068794	UnaryOperator	!		5068017	0					
ANR	5068795	CallExpression	"strcmp ( b , ""r2preload"" )"		5068017	1					
ANR	5068796	Callee	strcmp		5068017	0					
ANR	5068797	Identifier	strcmp		5068017	0					
ANR	5068798	ArgumentList	b		5068017	1					
ANR	5068799	Argument	b		5068017	0					
ANR	5068800	Identifier	b		5068017	0					
ANR	5068801	Argument	"""r2preload"""		5068017	1					
ANR	5068802	PrimaryExpression	"""r2preload"""		5068017	0					
ANR	5068803	CompoundStatement		73:38:2012:2012	5068017	1					
ANR	5068804	ExpressionStatement	p -> _r2preload = parseBool ( e )	509:2:11259:11288	5068017	0	True				
ANR	5068805	AssignmentExpression	p -> _r2preload = parseBool ( e )		5068017	0		=			
ANR	5068806	PtrMemberAccess	p -> _r2preload		5068017	0					
ANR	5068807	Identifier	p		5068017	0					
ANR	5068808	Identifier	_r2preload		5068017	1					
ANR	5068809	CallExpression	parseBool ( e )		5068017	1					
ANR	5068810	Callee	parseBool		5068017	0					
ANR	5068811	Identifier	parseBool		5068017	0					
ANR	5068812	ArgumentList	e		5068017	1					
ANR	5068813	Argument	e		5068017	0					
ANR	5068814	Identifier	e		5068017	0					
ANR	5068815	ElseStatement	else		5068017	0					
ANR	5068816	IfStatement	"if ( ! strcmp ( b , ""r2preweb"" ) )"		5068017	0					
ANR	5068817	Condition	"! strcmp ( b , ""r2preweb"" )"	510:12:11302:11324	5068017	0	True				
ANR	5068818	UnaryOperationExpression	"! strcmp ( b , ""r2preweb"" )"		5068017	0					
ANR	5068819	UnaryOperator	!		5068017	0					
ANR	5068820	CallExpression	"strcmp ( b , ""r2preweb"" )"		5068017	1					
ANR	5068821	Callee	strcmp		5068017	0					
ANR	5068822	Identifier	strcmp		5068017	0					
ANR	5068823	ArgumentList	b		5068017	1					
ANR	5068824	Argument	b		5068017	0					
ANR	5068825	Identifier	b		5068017	0					
ANR	5068826	Argument	"""r2preweb"""		5068017	1					
ANR	5068827	PrimaryExpression	"""r2preweb"""		5068017	0					
ANR	5068828	CompoundStatement		75:37:2084:2084	5068017	1					
ANR	5068829	ExpressionStatement	"r_sys_setenv ( ""RARUN2_WEB"" , ""yes"" )"	511:2:11331:11365	5068017	0	True				
ANR	5068830	CallExpression	"r_sys_setenv ( ""RARUN2_WEB"" , ""yes"" )"		5068017	0					
ANR	5068831	Callee	r_sys_setenv		5068017	0					
ANR	5068832	Identifier	r_sys_setenv		5068017	0					
ANR	5068833	ArgumentList	"""RARUN2_WEB"""		5068017	1					
ANR	5068834	Argument	"""RARUN2_WEB"""		5068017	0					
ANR	5068835	PrimaryExpression	"""RARUN2_WEB"""		5068017	0					
ANR	5068836	Argument	"""yes"""		5068017	1					
ANR	5068837	PrimaryExpression	"""yes"""		5068017	0					
ANR	5068838	ElseStatement	else		5068017	0					
ANR	5068839	IfStatement	"if ( ! strcmp ( b , ""setuid"" ) )"		5068017	0					
ANR	5068840	Condition	"! strcmp ( b , ""setuid"" )"	512:12:11379:11399	5068017	0	True				
ANR	5068841	UnaryOperationExpression	"! strcmp ( b , ""setuid"" )"		5068017	0					
ANR	5068842	UnaryOperator	!		5068017	0					
ANR	5068843	CallExpression	"strcmp ( b , ""setuid"" )"		5068017	1					
ANR	5068844	Callee	strcmp		5068017	0					
ANR	5068845	Identifier	strcmp		5068017	0					
ANR	5068846	ArgumentList	b		5068017	1					
ANR	5068847	Argument	b		5068017	0					
ANR	5068848	Identifier	b		5068017	0					
ANR	5068849	Argument	"""setuid"""		5068017	1					
ANR	5068850	PrimaryExpression	"""setuid"""		5068017	0					
ANR	5068851	CompoundStatement		77:35:2159:2159	5068017	1					
ANR	5068852	ExpressionStatement	p -> _setuid = strdup ( e )	513:2:11406:11429	5068017	0	True				
ANR	5068853	AssignmentExpression	p -> _setuid = strdup ( e )		5068017	0		=			
ANR	5068854	PtrMemberAccess	p -> _setuid		5068017	0					
ANR	5068855	Identifier	p		5068017	0					
ANR	5068856	Identifier	_setuid		5068017	1					
ANR	5068857	CallExpression	strdup ( e )		5068017	1					
ANR	5068858	Callee	strdup		5068017	0					
ANR	5068859	Identifier	strdup		5068017	0					
ANR	5068860	ArgumentList	e		5068017	1					
ANR	5068861	Argument	e		5068017	0					
ANR	5068862	Identifier	e		5068017	0					
ANR	5068863	ElseStatement	else		5068017	0					
ANR	5068864	IfStatement	"if ( ! strcmp ( b , ""seteuid"" ) )"		5068017	0					
ANR	5068865	Condition	"! strcmp ( b , ""seteuid"" )"	514:12:11443:11464	5068017	0	True				
ANR	5068866	UnaryOperationExpression	"! strcmp ( b , ""seteuid"" )"		5068017	0					
ANR	5068867	UnaryOperator	!		5068017	0					
ANR	5068868	CallExpression	"strcmp ( b , ""seteuid"" )"		5068017	1					
ANR	5068869	Callee	strcmp		5068017	0					
ANR	5068870	Identifier	strcmp		5068017	0					
ANR	5068871	ArgumentList	b		5068017	1					
ANR	5068872	Argument	b		5068017	0					
ANR	5068873	Identifier	b		5068017	0					
ANR	5068874	Argument	"""seteuid"""		5068017	1					
ANR	5068875	PrimaryExpression	"""seteuid"""		5068017	0					
ANR	5068876	CompoundStatement		79:36:2224:2224	5068017	1					
ANR	5068877	ExpressionStatement	p -> _seteuid = strdup ( e )	515:2:11471:11495	5068017	0	True				
ANR	5068878	AssignmentExpression	p -> _seteuid = strdup ( e )		5068017	0		=			
ANR	5068879	PtrMemberAccess	p -> _seteuid		5068017	0					
ANR	5068880	Identifier	p		5068017	0					
ANR	5068881	Identifier	_seteuid		5068017	1					
ANR	5068882	CallExpression	strdup ( e )		5068017	1					
ANR	5068883	Callee	strdup		5068017	0					
ANR	5068884	Identifier	strdup		5068017	0					
ANR	5068885	ArgumentList	e		5068017	1					
ANR	5068886	Argument	e		5068017	0					
ANR	5068887	Identifier	e		5068017	0					
ANR	5068888	ElseStatement	else		5068017	0					
ANR	5068889	IfStatement	"if ( ! strcmp ( b , ""setgid"" ) )"		5068017	0					
ANR	5068890	Condition	"! strcmp ( b , ""setgid"" )"	516:12:11509:11529	5068017	0	True				
ANR	5068891	UnaryOperationExpression	"! strcmp ( b , ""setgid"" )"		5068017	0					
ANR	5068892	UnaryOperator	!		5068017	0					
ANR	5068893	CallExpression	"strcmp ( b , ""setgid"" )"		5068017	1					
ANR	5068894	Callee	strcmp		5068017	0					
ANR	5068895	Identifier	strcmp		5068017	0					
ANR	5068896	ArgumentList	b		5068017	1					
ANR	5068897	Argument	b		5068017	0					
ANR	5068898	Identifier	b		5068017	0					
ANR	5068899	Argument	"""setgid"""		5068017	1					
ANR	5068900	PrimaryExpression	"""setgid"""		5068017	0					
ANR	5068901	CompoundStatement		81:35:2289:2289	5068017	1					
ANR	5068902	ExpressionStatement	p -> _setgid = strdup ( e )	517:2:11536:11559	5068017	0	True				
ANR	5068903	AssignmentExpression	p -> _setgid = strdup ( e )		5068017	0		=			
ANR	5068904	PtrMemberAccess	p -> _setgid		5068017	0					
ANR	5068905	Identifier	p		5068017	0					
ANR	5068906	Identifier	_setgid		5068017	1					
ANR	5068907	CallExpression	strdup ( e )		5068017	1					
ANR	5068908	Callee	strdup		5068017	0					
ANR	5068909	Identifier	strdup		5068017	0					
ANR	5068910	ArgumentList	e		5068017	1					
ANR	5068911	Argument	e		5068017	0					
ANR	5068912	Identifier	e		5068017	0					
ANR	5068913	ElseStatement	else		5068017	0					
ANR	5068914	IfStatement	"if ( ! strcmp ( b , ""setegid"" ) )"		5068017	0					
ANR	5068915	Condition	"! strcmp ( b , ""setegid"" )"	518:12:11573:11594	5068017	0	True				
ANR	5068916	UnaryOperationExpression	"! strcmp ( b , ""setegid"" )"		5068017	0					
ANR	5068917	UnaryOperator	!		5068017	0					
ANR	5068918	CallExpression	"strcmp ( b , ""setegid"" )"		5068017	1					
ANR	5068919	Callee	strcmp		5068017	0					
ANR	5068920	Identifier	strcmp		5068017	0					
ANR	5068921	ArgumentList	b		5068017	1					
ANR	5068922	Argument	b		5068017	0					
ANR	5068923	Identifier	b		5068017	0					
ANR	5068924	Argument	"""setegid"""		5068017	1					
ANR	5068925	PrimaryExpression	"""setegid"""		5068017	0					
ANR	5068926	CompoundStatement		83:36:2354:2354	5068017	1					
ANR	5068927	ExpressionStatement	p -> _setegid = strdup ( e )	519:2:11601:11625	5068017	0	True				
ANR	5068928	AssignmentExpression	p -> _setegid = strdup ( e )		5068017	0		=			
ANR	5068929	PtrMemberAccess	p -> _setegid		5068017	0					
ANR	5068930	Identifier	p		5068017	0					
ANR	5068931	Identifier	_setegid		5068017	1					
ANR	5068932	CallExpression	strdup ( e )		5068017	1					
ANR	5068933	Callee	strdup		5068017	0					
ANR	5068934	Identifier	strdup		5068017	0					
ANR	5068935	ArgumentList	e		5068017	1					
ANR	5068936	Argument	e		5068017	0					
ANR	5068937	Identifier	e		5068017	0					
ANR	5068938	ElseStatement	else		5068017	0					
ANR	5068939	IfStatement	"if ( ! strcmp ( b , ""nice"" ) )"		5068017	0					
ANR	5068940	Condition	"! strcmp ( b , ""nice"" )"	520:12:11639:11657	5068017	0	True				
ANR	5068941	UnaryOperationExpression	"! strcmp ( b , ""nice"" )"		5068017	0					
ANR	5068942	UnaryOperator	!		5068017	0					
ANR	5068943	CallExpression	"strcmp ( b , ""nice"" )"		5068017	1					
ANR	5068944	Callee	strcmp		5068017	0					
ANR	5068945	Identifier	strcmp		5068017	0					
ANR	5068946	ArgumentList	b		5068017	1					
ANR	5068947	Argument	b		5068017	0					
ANR	5068948	Identifier	b		5068017	0					
ANR	5068949	Argument	"""nice"""		5068017	1					
ANR	5068950	PrimaryExpression	"""nice"""		5068017	0					
ANR	5068951	CompoundStatement		85:33:2417:2417	5068017	1					
ANR	5068952	ExpressionStatement	p -> _nice = atoi ( e )	521:2:11664:11683	5068017	0	True				
ANR	5068953	AssignmentExpression	p -> _nice = atoi ( e )		5068017	0		=			
ANR	5068954	PtrMemberAccess	p -> _nice		5068017	0					
ANR	5068955	Identifier	p		5068017	0					
ANR	5068956	Identifier	_nice		5068017	1					
ANR	5068957	CallExpression	atoi ( e )		5068017	1					
ANR	5068958	Callee	atoi		5068017	0					
ANR	5068959	Identifier	atoi		5068017	0					
ANR	5068960	ArgumentList	e		5068017	1					
ANR	5068961	Argument	e		5068017	0					
ANR	5068962	Identifier	e		5068017	0					
ANR	5068963	ElseStatement	else		5068017	0					
ANR	5068964	IfStatement	"if ( ! strcmp ( b , ""timeout"" ) )"		5068017	0					
ANR	5068965	Condition	"! strcmp ( b , ""timeout"" )"	522:12:11697:11718	5068017	0	True				
ANR	5068966	UnaryOperationExpression	"! strcmp ( b , ""timeout"" )"		5068017	0					
ANR	5068967	UnaryOperator	!		5068017	0					
ANR	5068968	CallExpression	"strcmp ( b , ""timeout"" )"		5068017	1					
ANR	5068969	Callee	strcmp		5068017	0					
ANR	5068970	Identifier	strcmp		5068017	0					
ANR	5068971	ArgumentList	b		5068017	1					
ANR	5068972	Argument	b		5068017	0					
ANR	5068973	Identifier	b		5068017	0					
ANR	5068974	Argument	"""timeout"""		5068017	1					
ANR	5068975	PrimaryExpression	"""timeout"""		5068017	0					
ANR	5068976	CompoundStatement		87:36:2478:2478	5068017	1					
ANR	5068977	ExpressionStatement	p -> _timeout = atoi ( e )	523:2:11725:11747	5068017	0	True				
ANR	5068978	AssignmentExpression	p -> _timeout = atoi ( e )		5068017	0		=			
ANR	5068979	PtrMemberAccess	p -> _timeout		5068017	0					
ANR	5068980	Identifier	p		5068017	0					
ANR	5068981	Identifier	_timeout		5068017	1					
ANR	5068982	CallExpression	atoi ( e )		5068017	1					
ANR	5068983	Callee	atoi		5068017	0					
ANR	5068984	Identifier	atoi		5068017	0					
ANR	5068985	ArgumentList	e		5068017	1					
ANR	5068986	Argument	e		5068017	0					
ANR	5068987	Identifier	e		5068017	0					
ANR	5068988	ElseStatement	else		5068017	0					
ANR	5068989	IfStatement	"if ( ! strcmp ( b , ""timeoutsig"" ) )"		5068017	0					
ANR	5068990	Condition	"! strcmp ( b , ""timeoutsig"" )"	524:12:11761:11785	5068017	0	True				
ANR	5068991	UnaryOperationExpression	"! strcmp ( b , ""timeoutsig"" )"		5068017	0					
ANR	5068992	UnaryOperator	!		5068017	0					
ANR	5068993	CallExpression	"strcmp ( b , ""timeoutsig"" )"		5068017	1					
ANR	5068994	Callee	strcmp		5068017	0					
ANR	5068995	Identifier	strcmp		5068017	0					
ANR	5068996	ArgumentList	b		5068017	1					
ANR	5068997	Argument	b		5068017	0					
ANR	5068998	Identifier	b		5068017	0					
ANR	5068999	Argument	"""timeoutsig"""		5068017	1					
ANR	5069000	PrimaryExpression	"""timeoutsig"""		5068017	0					
ANR	5069001	CompoundStatement		89:39:2545:2545	5068017	1					
ANR	5069002	ExpressionStatement	p -> _timeout_sig = r_signal_from_string ( e )	525:2:11792:11834	5068017	0	True				
ANR	5069003	AssignmentExpression	p -> _timeout_sig = r_signal_from_string ( e )		5068017	0		=			
ANR	5069004	PtrMemberAccess	p -> _timeout_sig		5068017	0					
ANR	5069005	Identifier	p		5068017	0					
ANR	5069006	Identifier	_timeout_sig		5068017	1					
ANR	5069007	CallExpression	r_signal_from_string ( e )		5068017	1					
ANR	5069008	Callee	r_signal_from_string		5068017	0					
ANR	5069009	Identifier	r_signal_from_string		5068017	0					
ANR	5069010	ArgumentList	e		5068017	1					
ANR	5069011	Argument	e		5068017	0					
ANR	5069012	Identifier	e		5068017	0					
ANR	5069013	ElseStatement	else		5068017	0					
ANR	5069014	IfStatement	"if ( ! memcmp ( b , ""arg"" , 3 ) )"		5068017	0					
ANR	5069015	Condition	"! memcmp ( b , ""arg"" , 3 )"	526:12:11848:11868	5068017	0	True				
ANR	5069016	UnaryOperationExpression	"! memcmp ( b , ""arg"" , 3 )"		5068017	0					
ANR	5069017	UnaryOperator	!		5068017	0					
ANR	5069018	CallExpression	"memcmp ( b , ""arg"" , 3 )"		5068017	1					
ANR	5069019	Callee	memcmp		5068017	0					
ANR	5069020	Identifier	memcmp		5068017	0					
ANR	5069021	ArgumentList	b		5068017	1					
ANR	5069022	Argument	b		5068017	0					
ANR	5069023	Identifier	b		5068017	0					
ANR	5069024	Argument	"""arg"""		5068017	1					
ANR	5069025	PrimaryExpression	"""arg"""		5068017	0					
ANR	5069026	Argument	3		5068017	2					
ANR	5069027	PrimaryExpression	3		5068017	0					
ANR	5069028	CompoundStatement		92:2:2632:2652	5068017	1					
ANR	5069029	IdentifierDeclStatement	int n = atoi ( b + 3 ) ;	527:2:11875:11895	5068017	0	True				
ANR	5069030	IdentifierDecl	n = atoi ( b + 3 )		5068017	0					
ANR	5069031	IdentifierDeclType	int		5068017	0					
ANR	5069032	Identifier	n		5068017	1					
ANR	5069033	AssignmentExpression	n = atoi ( b + 3 )		5068017	2		=			
ANR	5069034	Identifier	n		5068017	0					
ANR	5069035	CallExpression	atoi ( b + 3 )		5068017	1					
ANR	5069036	Callee	atoi		5068017	0					
ANR	5069037	Identifier	atoi		5068017	0					
ANR	5069038	ArgumentList	b + 3		5068017	1					
ANR	5069039	Argument	b + 3		5068017	0					
ANR	5069040	AdditiveExpression	b + 3		5068017	0		+			
ANR	5069041	Identifier	b		5068017	0					
ANR	5069042	PrimaryExpression	3		5068017	1					
ANR	5069043	IfStatement	if ( n >= 0 && n < R_RUN_PROFILE_NARGS )		5068017	1					
ANR	5069044	Condition	n >= 0 && n < R_RUN_PROFILE_NARGS	528:6:11903:11935	5068017	0	True				
ANR	5069045	AndExpression	n >= 0 && n < R_RUN_PROFILE_NARGS		5068017	0		&&			
ANR	5069046	RelationalExpression	n >= 0		5068017	0		>=			
ANR	5069047	Identifier	n		5068017	0					
ANR	5069048	PrimaryExpression	0		5068017	1					
ANR	5069049	RelationalExpression	n < R_RUN_PROFILE_NARGS		5068017	1		<			
ANR	5069050	Identifier	n		5068017	0					
ANR	5069051	Identifier	R_RUN_PROFILE_NARGS		5068017	1					
ANR	5069052	CompoundStatement		93:41:2695:2695	5068017	1					
ANR	5069053	ExpressionStatement	p -> _args [ n ] = getstr ( e )	529:3:11943:11967	5068017	0	True				
ANR	5069054	AssignmentExpression	p -> _args [ n ] = getstr ( e )		5068017	0		=			
ANR	5069055	ArrayIndexing	p -> _args [ n ]		5068017	0					
ANR	5069056	PtrMemberAccess	p -> _args		5068017	0					
ANR	5069057	Identifier	p		5068017	0					
ANR	5069058	Identifier	_args		5068017	1					
ANR	5069059	Identifier	n		5068017	1					
ANR	5069060	CallExpression	getstr ( e )		5068017	1					
ANR	5069061	Callee	getstr		5068017	0					
ANR	5069062	Identifier	getstr		5068017	0					
ANR	5069063	ArgumentList	e		5068017	1					
ANR	5069064	Argument	e		5068017	0					
ANR	5069065	Identifier	e		5068017	0					
ANR	5069066	ExpressionStatement	p -> _argc ++	530:3:11972:11982	5068017	1	True				
ANR	5069067	PostIncDecOperationExpression	p -> _argc ++		5068017	0					
ANR	5069068	PtrMemberAccess	p -> _argc		5068017	0					
ANR	5069069	Identifier	p		5068017	0					
ANR	5069070	Identifier	_argc		5068017	1					
ANR	5069071	IncDec	++		5068017	1					
ANR	5069072	ElseStatement	else		5068017	0					
ANR	5069073	CompoundStatement		96:9:2750:2750	5068017	0					
ANR	5069074	ExpressionStatement	"eprintf ( ""Out of bounds args index: %d\\n"" , n )"	532:3:11998:12043	5068017	0	True				
ANR	5069075	CallExpression	"eprintf ( ""Out of bounds args index: %d\\n"" , n )"		5068017	0					
ANR	5069076	Callee	eprintf		5068017	0					
ANR	5069077	Identifier	eprintf		5068017	0					
ANR	5069078	ArgumentList	"""Out of bounds args index: %d\\n"""		5068017	1					
ANR	5069079	Argument	"""Out of bounds args index: %d\\n"""		5068017	0					
ANR	5069080	PrimaryExpression	"""Out of bounds args index: %d\\n"""		5068017	0					
ANR	5069081	Argument	n		5068017	1					
ANR	5069082	Identifier	n		5068017	0					
ANR	5069083	ElseStatement	else		5068017	0					
ANR	5069084	IfStatement	"if ( ! strcmp ( b , ""envfile"" ) )"		5068017	0					
ANR	5069085	Condition	"! strcmp ( b , ""envfile"" )"	534:12:12061:12082	5068017	0	True				
ANR	5069086	UnaryOperationExpression	"! strcmp ( b , ""envfile"" )"		5068017	0					
ANR	5069087	UnaryOperator	!		5068017	0					
ANR	5069088	CallExpression	"strcmp ( b , ""envfile"" )"		5068017	1					
ANR	5069089	Callee	strcmp		5068017	0					
ANR	5069090	Identifier	strcmp		5068017	0					
ANR	5069091	ArgumentList	b		5068017	1					
ANR	5069092	Argument	b		5068017	0					
ANR	5069093	Identifier	b		5068017	0					
ANR	5069094	Argument	"""envfile"""		5068017	1					
ANR	5069095	PrimaryExpression	"""envfile"""		5068017	0					
ANR	5069096	CompoundStatement		102:2:2882:2917	5068017	1					
ANR	5069097	IdentifierDeclStatement	"char * p , buf [ 1024 ] ;"	535:2:12089:12107	5068017	0	True				
ANR	5069098	IdentifierDecl	* p		5068017	0					
ANR	5069099	IdentifierDeclType	char *		5068017	0					
ANR	5069100	Identifier	p		5068017	1					
ANR	5069101	IdentifierDecl	buf [ 1024 ]		5068017	1					
ANR	5069102	IdentifierDeclType	char [ 1024 ]		5068017	0					
ANR	5069103	Identifier	buf		5068017	1					
ANR	5069104	PrimaryExpression	1024		5068017	2					
ANR	5069105	IdentifierDeclStatement	size_t len ;	536:2:12111:12121	5068017	1	True				
ANR	5069106	IdentifierDecl	len		5068017	0					
ANR	5069107	IdentifierDeclType	size_t		5068017	0					
ANR	5069108	Identifier	len		5068017	1					
ANR	5069109	IdentifierDeclStatement	"FILE * fd = r_sandbox_fopen ( e , ""r"" ) ;"	537:2:12125:12160	5068017	2	True				
ANR	5069110	IdentifierDecl	"* fd = r_sandbox_fopen ( e , ""r"" )"		5068017	0					
ANR	5069111	IdentifierDeclType	FILE *		5068017	0					
ANR	5069112	Identifier	fd		5068017	1					
ANR	5069113	AssignmentExpression	"* fd = r_sandbox_fopen ( e , ""r"" )"		5068017	2		=			
ANR	5069114	Identifier	fd		5068017	0					
ANR	5069115	CallExpression	"r_sandbox_fopen ( e , ""r"" )"		5068017	1					
ANR	5069116	Callee	r_sandbox_fopen		5068017	0					
ANR	5069117	Identifier	r_sandbox_fopen		5068017	0					
ANR	5069118	ArgumentList	e		5068017	1					
ANR	5069119	Argument	e		5068017	0					
ANR	5069120	Identifier	e		5068017	0					
ANR	5069121	Argument	"""r"""		5068017	1					
ANR	5069122	PrimaryExpression	"""r"""		5068017	0					
ANR	5069123	IfStatement	if ( ! fd )		5068017	3					
ANR	5069124	Condition	! fd	538:6:12168:12170	5068017	0	True				
ANR	5069125	UnaryOperationExpression	! fd		5068017	0					
ANR	5069126	UnaryOperator	!		5068017	0					
ANR	5069127	Identifier	fd		5068017	1					
ANR	5069128	CompoundStatement		103:11:2930:2930	5068017	1					
ANR	5069129	ExpressionStatement	"eprintf ( ""Cannot open '%s'\\n"" , e )"	539:3:12178:12211	5068017	0	True				
ANR	5069130	CallExpression	"eprintf ( ""Cannot open '%s'\\n"" , e )"		5068017	0					
ANR	5069131	Callee	eprintf		5068017	0					
ANR	5069132	Identifier	eprintf		5068017	0					
ANR	5069133	ArgumentList	"""Cannot open '%s'\\n"""		5068017	1					
ANR	5069134	Argument	"""Cannot open '%s'\\n"""		5068017	0					
ANR	5069135	PrimaryExpression	"""Cannot open '%s'\\n"""		5068017	0					
ANR	5069136	Argument	e		5068017	1					
ANR	5069137	Identifier	e		5068017	0					
ANR	5069138	IfStatement	if ( must_free == true )		5068017	1					
ANR	5069139	Condition	must_free == true	540:7:12220:12236	5068017	0	True				
ANR	5069140	EqualityExpression	must_free == true		5068017	0		==			
ANR	5069141	Identifier	must_free		5068017	0					
ANR	5069142	Identifier	true		5068017	1					
ANR	5069143	CompoundStatement		105:26:2996:2996	5068017	1					
ANR	5069144	ExpressionStatement	free ( e )	541:4:12245:12253	5068017	0	True				
ANR	5069145	CallExpression	free ( e )		5068017	0					
ANR	5069146	Callee	free		5068017	0					
ANR	5069147	Identifier	free		5068017	0					
ANR	5069148	ArgumentList	e		5068017	1					
ANR	5069149	Argument	e		5068017	0					
ANR	5069150	Identifier	e		5068017	0					
ANR	5069151	ReturnStatement	return false ;	543:3:12263:12275	5068017	2	True				
ANR	5069152	Identifier	false		5068017	0					
ANR	5069153	ForStatement	for ( ; ; )		5068017	4					
ANR	5069154	CompoundStatement		110:11:3049:3049	5068017	0					
ANR	5069155	IfStatement	"if ( ! fgets ( buf , sizeof ( buf ) - 1 , fd ) )"		5068017	0					
ANR	5069156	Condition	"! fgets ( buf , sizeof ( buf ) - 1 , fd )"	546:7:12301:12334	5068017	0	True				
ANR	5069157	UnaryOperationExpression	"! fgets ( buf , sizeof ( buf ) - 1 , fd )"		5068017	0					
ANR	5069158	UnaryOperator	!		5068017	0					
ANR	5069159	CallExpression	"fgets ( buf , sizeof ( buf ) - 1 , fd )"		5068017	1					
ANR	5069160	Callee	fgets		5068017	0					
ANR	5069161	Identifier	fgets		5068017	0					
ANR	5069162	ArgumentList	buf		5068017	1					
ANR	5069163	Argument	buf		5068017	0					
ANR	5069164	Identifier	buf		5068017	0					
ANR	5069165	Argument	sizeof ( buf ) - 1		5068017	1					
ANR	5069166	AdditiveExpression	sizeof ( buf ) - 1		5068017	0		-			
ANR	5069167	SizeofExpression	sizeof ( buf )		5068017	0					
ANR	5069168	Sizeof	sizeof		5068017	0					
ANR	5069169	SizeofOperand	buf		5068017	1					
ANR	5069170	PrimaryExpression	1		5068017	1					
ANR	5069171	Argument	fd		5068017	2					
ANR	5069172	Identifier	fd		5068017	0					
ANR	5069173	CompoundStatement		111:43:3094:3094	5068017	1					
ANR	5069174	BreakStatement	break ;	547:4:12343:12348	5068017	0	True				
ANR	5069175	IfStatement	if ( feof ( fd ) )		5068017	1					
ANR	5069176	Condition	feof ( fd )	549:7:12362:12370	5068017	0	True				
ANR	5069177	CallExpression	feof ( fd )		5068017	0					
ANR	5069178	Callee	feof		5068017	0					
ANR	5069179	Identifier	feof		5068017	0					
ANR	5069180	ArgumentList	fd		5068017	1					
ANR	5069181	Argument	fd		5068017	0					
ANR	5069182	Identifier	fd		5068017	0					
ANR	5069183	CompoundStatement		114:18:3130:3130	5068017	1					
ANR	5069184	BreakStatement	break ;	550:4:12379:12384	5068017	0	True				
ANR	5069185	ExpressionStatement	"p = strchr ( buf , '=' )"	552:3:12394:12415	5068017	2	True				
ANR	5069186	AssignmentExpression	"p = strchr ( buf , '=' )"		5068017	0		=			
ANR	5069187	Identifier	p		5068017	0					
ANR	5069188	CallExpression	"strchr ( buf , '=' )"		5068017	1					
ANR	5069189	Callee	strchr		5068017	0					
ANR	5069190	Identifier	strchr		5068017	0					
ANR	5069191	ArgumentList	buf		5068017	1					
ANR	5069192	Argument	buf		5068017	0					
ANR	5069193	Identifier	buf		5068017	0					
ANR	5069194	Argument	'='		5068017	1					
ANR	5069195	PrimaryExpression	'='		5068017	0					
ANR	5069196	IfStatement	if ( p )		5068017	3					
ANR	5069197	Condition	p	553:7:12424:12424	5068017	0	True				
ANR	5069198	Identifier	p		5068017	0					
ANR	5069199	CompoundStatement		118:10:3184:3184	5068017	1					
ANR	5069200	ExpressionStatement	* p ++ = 0	554:4:12433:12441	5068017	0	True				
ANR	5069201	AssignmentExpression	* p ++ = 0		5068017	0		=			
ANR	5069202	UnaryOperationExpression	* p ++		5068017	0					
ANR	5069203	UnaryOperator	*		5068017	0					
ANR	5069204	PostIncDecOperationExpression	p ++		5068017	1					
ANR	5069205	Identifier	p		5068017	0					
ANR	5069206	IncDec	++		5068017	1					
ANR	5069207	PrimaryExpression	0		5068017	1					
ANR	5069208	ExpressionStatement	len = strlen ( p )	555:4:12447:12463	5068017	1	True				
ANR	5069209	AssignmentExpression	len = strlen ( p )		5068017	0		=			
ANR	5069210	Identifier	len		5068017	0					
ANR	5069211	CallExpression	strlen ( p )		5068017	1					
ANR	5069212	Callee	strlen		5068017	0					
ANR	5069213	Identifier	strlen		5068017	0					
ANR	5069214	ArgumentList	p		5068017	1					
ANR	5069215	Argument	p		5068017	0					
ANR	5069216	Identifier	p		5068017	0					
ANR	5069217	IfStatement	if ( len > 0 && p [ len - 1 ] == '\\n' )		5068017	2					
ANR	5069218	Condition	len > 0 && p [ len - 1 ] == '\\n'	556:8:12473:12501	5068017	0	True				
ANR	5069219	AndExpression	len > 0 && p [ len - 1 ] == '\\n'		5068017	0		&&			
ANR	5069220	RelationalExpression	len > 0		5068017	0		>			
ANR	5069221	Identifier	len		5068017	0					
ANR	5069222	PrimaryExpression	0		5068017	1					
ANR	5069223	EqualityExpression	p [ len - 1 ] == '\\n'		5068017	1		==			
ANR	5069224	ArrayIndexing	p [ len - 1 ]		5068017	0					
ANR	5069225	Identifier	p		5068017	0					
ANR	5069226	AdditiveExpression	len - 1		5068017	1		-			
ANR	5069227	Identifier	len		5068017	0					
ANR	5069228	PrimaryExpression	1		5068017	1					
ANR	5069229	PrimaryExpression	'\\n'		5068017	1					
ANR	5069230	CompoundStatement		121:39:3261:3261	5068017	1					
ANR	5069231	ExpressionStatement	p [ len - 1 ] = 0	557:5:12511:12525	5068017	0	True				
ANR	5069232	AssignmentExpression	p [ len - 1 ] = 0		5068017	0		=			
ANR	5069233	ArrayIndexing	p [ len - 1 ]		5068017	0					
ANR	5069234	Identifier	p		5068017	0					
ANR	5069235	AdditiveExpression	len - 1		5068017	1		-			
ANR	5069236	Identifier	len		5068017	0					
ANR	5069237	PrimaryExpression	1		5068017	1					
ANR	5069238	PrimaryExpression	0		5068017	1					
ANR	5069239	IfStatement	if ( len > 1 && p [ len - 2 ] == '\\r' )		5068017	3					
ANR	5069240	Condition	len > 1 && p [ len - 2 ] == '\\r'	559:8:12541:12569	5068017	0	True				
ANR	5069241	AndExpression	len > 1 && p [ len - 2 ] == '\\r'		5068017	0		&&			
ANR	5069242	RelationalExpression	len > 1		5068017	0		>			
ANR	5069243	Identifier	len		5068017	0					
ANR	5069244	PrimaryExpression	1		5068017	1					
ANR	5069245	EqualityExpression	p [ len - 2 ] == '\\r'		5068017	1		==			
ANR	5069246	ArrayIndexing	p [ len - 2 ]		5068017	0					
ANR	5069247	Identifier	p		5068017	0					
ANR	5069248	AdditiveExpression	len - 2		5068017	1		-			
ANR	5069249	Identifier	len		5068017	0					
ANR	5069250	PrimaryExpression	2		5068017	1					
ANR	5069251	PrimaryExpression	'\\r'		5068017	1					
ANR	5069252	CompoundStatement		124:39:3329:3329	5068017	1					
ANR	5069253	ExpressionStatement	p [ len - 2 ] = 0	560:5:12579:12593	5068017	0	True				
ANR	5069254	AssignmentExpression	p [ len - 2 ] = 0		5068017	0		=			
ANR	5069255	ArrayIndexing	p [ len - 2 ]		5068017	0					
ANR	5069256	Identifier	p		5068017	0					
ANR	5069257	AdditiveExpression	len - 2		5068017	1		-			
ANR	5069258	Identifier	len		5068017	0					
ANR	5069259	PrimaryExpression	2		5068017	1					
ANR	5069260	PrimaryExpression	0		5068017	1					
ANR	5069261	ExpressionStatement	"r_sys_setenv ( buf , p )"	562:4:12605:12626	5068017	4	True				
ANR	5069262	CallExpression	"r_sys_setenv ( buf , p )"		5068017	0					
ANR	5069263	Callee	r_sys_setenv		5068017	0					
ANR	5069264	Identifier	r_sys_setenv		5068017	0					
ANR	5069265	ArgumentList	buf		5068017	1					
ANR	5069266	Argument	buf		5068017	0					
ANR	5069267	Identifier	buf		5068017	0					
ANR	5069268	Argument	p		5068017	1					
ANR	5069269	Identifier	p		5068017	0					
ANR	5069270	ExpressionStatement	fclose ( fd )	565:2:12639:12650	5068017	5	True				
ANR	5069271	CallExpression	fclose ( fd )		5068017	0					
ANR	5069272	Callee	fclose		5068017	0					
ANR	5069273	Identifier	fclose		5068017	0					
ANR	5069274	ArgumentList	fd		5068017	1					
ANR	5069275	Argument	fd		5068017	0					
ANR	5069276	Identifier	fd		5068017	0					
ANR	5069277	ElseStatement	else		5068017	0					
ANR	5069278	IfStatement	"if ( ! strcmp ( b , ""unsetenv"" ) )"		5068017	0					
ANR	5069279	Condition	"! strcmp ( b , ""unsetenv"" )"	566:12:12664:12686	5068017	0	True				
ANR	5069280	UnaryOperationExpression	"! strcmp ( b , ""unsetenv"" )"		5068017	0					
ANR	5069281	UnaryOperator	!		5068017	0					
ANR	5069282	CallExpression	"strcmp ( b , ""unsetenv"" )"		5068017	1					
ANR	5069283	Callee	strcmp		5068017	0					
ANR	5069284	Identifier	strcmp		5068017	0					
ANR	5069285	ArgumentList	b		5068017	1					
ANR	5069286	Argument	b		5068017	0					
ANR	5069287	Identifier	b		5068017	0					
ANR	5069288	Argument	"""unsetenv"""		5068017	1					
ANR	5069289	PrimaryExpression	"""unsetenv"""		5068017	0					
ANR	5069290	CompoundStatement		131:37:3446:3446	5068017	1					
ANR	5069291	ExpressionStatement	"r_sys_setenv ( e , NULL )"	567:2:12693:12715	5068017	0	True				
ANR	5069292	CallExpression	"r_sys_setenv ( e , NULL )"		5068017	0					
ANR	5069293	Callee	r_sys_setenv		5068017	0					
ANR	5069294	Identifier	r_sys_setenv		5068017	0					
ANR	5069295	ArgumentList	e		5068017	1					
ANR	5069296	Argument	e		5068017	0					
ANR	5069297	Identifier	e		5068017	0					
ANR	5069298	Argument	NULL		5068017	1					
ANR	5069299	Identifier	NULL		5068017	0					
ANR	5069300	ElseStatement	else		5068017	0					
ANR	5069301	IfStatement	"if ( ! strcmp ( b , ""setenv"" ) )"		5068017	0					
ANR	5069302	Condition	"! strcmp ( b , ""setenv"" )"	568:12:12729:12749	5068017	0	True				
ANR	5069303	UnaryOperationExpression	"! strcmp ( b , ""setenv"" )"		5068017	0					
ANR	5069304	UnaryOperator	!		5068017	0					
ANR	5069305	CallExpression	"strcmp ( b , ""setenv"" )"		5068017	1					
ANR	5069306	Callee	strcmp		5068017	0					
ANR	5069307	Identifier	strcmp		5068017	0					
ANR	5069308	ArgumentList	b		5068017	1					
ANR	5069309	Argument	b		5068017	0					
ANR	5069310	Identifier	b		5068017	0					
ANR	5069311	Argument	"""setenv"""		5068017	1					
ANR	5069312	PrimaryExpression	"""setenv"""		5068017	0					
ANR	5069313	CompoundStatement		134:2:3513:3542	5068017	1					
ANR	5069314	IdentifierDeclStatement	"char * V , * v = strchr ( e , '=' ) ;"	569:2:12756:12785	5068017	0	True				
ANR	5069315	IdentifierDecl	* V		5068017	0					
ANR	5069316	IdentifierDeclType	char *		5068017	0					
ANR	5069317	Identifier	V		5068017	1					
ANR	5069318	IdentifierDecl	"* v = strchr ( e , '=' )"		5068017	1					
ANR	5069319	IdentifierDeclType	char *		5068017	0					
ANR	5069320	Identifier	v		5068017	1					
ANR	5069321	AssignmentExpression	"* v = strchr ( e , '=' )"		5068017	2		=			
ANR	5069322	Identifier	v		5068017	0					
ANR	5069323	CallExpression	"strchr ( e , '=' )"		5068017	1					
ANR	5069324	Callee	strchr		5068017	0					
ANR	5069325	Identifier	strchr		5068017	0					
ANR	5069326	ArgumentList	e		5068017	1					
ANR	5069327	Argument	e		5068017	0					
ANR	5069328	Identifier	e		5068017	0					
ANR	5069329	Argument	'='		5068017	1					
ANR	5069330	PrimaryExpression	'='		5068017	0					
ANR	5069331	IfStatement	if ( v )		5068017	1					
ANR	5069332	Condition	v	570:6:12793:12793	5068017	0	True				
ANR	5069333	Identifier	v		5068017	0					
ANR	5069334	CompoundStatement		135:9:3553:3553	5068017	1					
ANR	5069335	ExpressionStatement	* v ++ = 0	571:3:12801:12809	5068017	0	True				
ANR	5069336	AssignmentExpression	* v ++ = 0		5068017	0		=			
ANR	5069337	UnaryOperationExpression	* v ++		5068017	0					
ANR	5069338	UnaryOperator	*		5068017	0					
ANR	5069339	PostIncDecOperationExpression	v ++		5068017	1					
ANR	5069340	Identifier	v		5068017	0					
ANR	5069341	IncDec	++		5068017	1					
ANR	5069342	PrimaryExpression	0		5068017	1					
ANR	5069343	ExpressionStatement	V = getstr ( v )	572:3:12814:12828	5068017	1	True				
ANR	5069344	AssignmentExpression	V = getstr ( v )		5068017	0		=			
ANR	5069345	Identifier	V		5068017	0					
ANR	5069346	CallExpression	getstr ( v )		5068017	1					
ANR	5069347	Callee	getstr		5068017	0					
ANR	5069348	Identifier	getstr		5068017	0					
ANR	5069349	ArgumentList	v		5068017	1					
ANR	5069350	Argument	v		5068017	0					
ANR	5069351	Identifier	v		5068017	0					
ANR	5069352	ExpressionStatement	"r_sys_setenv ( e , V )"	573:3:12833:12852	5068017	2	True				
ANR	5069353	CallExpression	"r_sys_setenv ( e , V )"		5068017	0					
ANR	5069354	Callee	r_sys_setenv		5068017	0					
ANR	5069355	Identifier	r_sys_setenv		5068017	0					
ANR	5069356	ArgumentList	e		5068017	1					
ANR	5069357	Argument	e		5068017	0					
ANR	5069358	Identifier	e		5068017	0					
ANR	5069359	Argument	V		5068017	1					
ANR	5069360	Identifier	V		5068017	0					
ANR	5069361	ExpressionStatement	free ( V )	574:3:12857:12865	5068017	3	True				
ANR	5069362	CallExpression	free ( V )		5068017	0					
ANR	5069363	Callee	free		5068017	0					
ANR	5069364	Identifier	free		5068017	0					
ANR	5069365	ArgumentList	V		5068017	1					
ANR	5069366	Argument	V		5068017	0					
ANR	5069367	Identifier	V		5068017	0					
ANR	5069368	ElseStatement	else		5068017	0					
ANR	5069369	IfStatement	"if ( ! strcmp ( b , ""clearenv"" ) )"		5068017	0					
ANR	5069370	Condition	"! strcmp ( b , ""clearenv"" )"	576:12:12883:12904	5068017	0	True				
ANR	5069371	UnaryOperationExpression	"! strcmp ( b , ""clearenv"" )"		5068017	0					
ANR	5069372	UnaryOperator	!		5068017	0					
ANR	5069373	CallExpression	"strcmp ( b , ""clearenv"" )"		5068017	1					
ANR	5069374	Callee	strcmp		5068017	0					
ANR	5069375	Identifier	strcmp		5068017	0					
ANR	5069376	ArgumentList	b		5068017	1					
ANR	5069377	Argument	b		5068017	0					
ANR	5069378	Identifier	b		5068017	0					
ANR	5069379	Argument	"""clearenv"""		5068017	1					
ANR	5069380	PrimaryExpression	"""clearenv"""		5068017	0					
ANR	5069381	CompoundStatement		141:36:3664:3664	5068017	1					
ANR	5069382	ExpressionStatement	r_sys_clearenv ( )	577:2:12911:12928	5068017	0	True				
ANR	5069383	CallExpression	r_sys_clearenv ( )		5068017	0					
ANR	5069384	Callee	r_sys_clearenv		5068017	0					
ANR	5069385	Identifier	r_sys_clearenv		5068017	0					
ANR	5069386	ArgumentList			5068017	1					
ANR	5069387	IfStatement	if ( must_free == true )		5068017	7					
ANR	5069388	Condition	must_free == true	579:5:12938:12954	5068017	0	True				
ANR	5069389	EqualityExpression	must_free == true		5068017	0		==			
ANR	5069390	Identifier	must_free		5068017	0					
ANR	5069391	Identifier	true		5068017	1					
ANR	5069392	CompoundStatement		144:24:3714:3714	5068017	1					
ANR	5069393	ExpressionStatement	free ( e )	580:2:12961:12969	5068017	0	True				
ANR	5069394	CallExpression	free ( e )		5068017	0					
ANR	5069395	Callee	free		5068017	0					
ANR	5069396	Identifier	free		5068017	0					
ANR	5069397	ArgumentList	e		5068017	1					
ANR	5069398	Argument	e		5068017	0					
ANR	5069399	Identifier	e		5068017	0					
ANR	5069400	ReturnStatement	return true ;	582:1:12975:12986	5068017	8	True				
ANR	5069401	Identifier	true		5068017	0					
ANR	5069402	ReturnType	R_API bool		5068017	1					
ANR	5069403	Identifier	r_run_parseline		5068017	2					
ANR	5069404	ParameterList	"RRunProfile * p , char * b"		5068017	3					
ANR	5069405	Parameter	RRunProfile * p	436:27:9217:9230	5068017	0	True				
ANR	5069406	ParameterType	RRunProfile *		5068017	0					
ANR	5069407	Identifier	p		5068017	1					
ANR	5069408	Parameter	char * b	436:43:9233:9239	5068017	1	True				
ANR	5069409	ParameterType	char *		5068017	0					
ANR	5069410	Identifier	b		5068017	1					
ANR	5069411	CFGEntryNode	ENTRY		5068017		True				
ANR	5069412	CFGExitNode	EXIT		5068017		True				
ANR	5069413	InfiniteForNode	true		5068017		True				
ANR	5069414	Symbol	p -> _maxstack		5068017						
ANR	5069415	Symbol	p -> _stdout		5068017						
ANR	5069416	Symbol	r_sys_getenv		5068017						
ANR	5069417	Symbol	parseBool		5068017						
ANR	5069418	Symbol	strchr		5068017						
ANR	5069419	Symbol	p -> _listen		5068017						
ANR	5069420	Symbol	fgets		5068017						
ANR	5069421	Symbol	p -> _preload		5068017						
ANR	5069422	Symbol	strlen		5068017						
ANR	5069423	Symbol	p -> _aslr		5068017						
ANR	5069424	Symbol	p -> _stdio		5068017						
ANR	5069425	Symbol	p -> _stdin		5068017						
ANR	5069426	Symbol	memcmp		5068017						
ANR	5069427	Symbol	getstr		5068017						
ANR	5069428	Symbol	p -> _program		5068017						
ANR	5069429	Symbol	len		5068017						
ANR	5069430	Symbol	p -> _chroot		5068017						
ANR	5069431	Symbol	p -> _maxfd		5068017						
ANR	5069432	Symbol	p -> _pidfile		5068017						
ANR	5069433	Symbol	strcmp		5068017						
ANR	5069434	Symbol	NULL		5068017						
ANR	5069435	Symbol	p -> _maxproc		5068017						
ANR	5069436	Symbol	* v ++		5068017						
ANR	5069437	Symbol	p -> _argc		5068017						
ANR	5069438	Symbol	p -> _runlib_fcn		5068017						
ANR	5069439	Symbol	* e ++		5068017						
ANR	5069440	Symbol	p -> _chgdir		5068017						
ANR	5069441	Symbol	p -> _nice		5068017						
ANR	5069442	Symbol	must_free		5068017						
ANR	5069443	Symbol	* p -> _args		5068017						
ANR	5069444	Symbol	p -> _args		5068017						
ANR	5069445	Symbol	p -> _seteuid		5068017						
ANR	5069446	Symbol	true		5068017						
ANR	5069447	Symbol	p -> _r2preload		5068017						
ANR	5069448	Symbol	fd		5068017						
ANR	5069449	Symbol	p -> _input		5068017						
ANR	5069450	Symbol	p -> _libpath		5068017						
ANR	5069451	Symbol	p -> _docore		5068017						
ANR	5069452	Symbol	p -> _setegid		5068017						
ANR	5069453	Symbol	r_signal_from_string		5068017						
ANR	5069454	Symbol	p -> _timeout		5068017						
ANR	5069455	Symbol	V		5068017						
ANR	5069456	Symbol	* * p		5068017						
ANR	5069457	Symbol	p -> _connect		5068017						
ANR	5069458	Symbol	R_RUN_PROFILE_NARGS		5068017						
ANR	5069459	Symbol	p -> _pty		5068017						
ANR	5069460	Symbol	atoi		5068017						
ANR	5069461	Symbol	p -> _pid		5068017						
ANR	5069462	Symbol	b		5068017						
ANR	5069463	Symbol	p -> _setgid		5068017						
ANR	5069464	Symbol	e		5068017						
ANR	5069465	Symbol	* p ++		5068017						
ANR	5069466	Symbol	false		5068017						
ANR	5069467	Symbol	* b		5068017						
ANR	5069468	Symbol	p -> _bits		5068017						
ANR	5069469	Symbol	p -> _stderr		5068017						
ANR	5069470	Symbol	p -> _setuid		5068017						
ANR	5069471	Symbol	n		5068017						
ANR	5069472	Symbol	* e		5068017						
ANR	5069473	Symbol	p		5068017						
ANR	5069474	Symbol	buf		5068017						
ANR	5069475	Symbol	p -> _system		5068017						
ANR	5069476	Symbol	p -> _timeout_sig		5068017						
ANR	5069477	Symbol	p -> _runlib		5068017						
ANR	5069478	Symbol	p -> _r2sleep		5068017						
ANR	5069479	Symbol	v		5068017						
ANR	5069480	Symbol	* n		5068017						
ANR	5069481	Symbol	r_sandbox_fopen		5068017						
ANR	5069482	Symbol	feof		5068017						
ANR	5069483	Symbol	* p		5068017						
ANR	5069484	Symbol	strdup		5068017						
ANR	5069485	Symbol	p -> _dofork		5068017						
ANR	5069486	Symbol	* len		5068017						
ANR	5069487	Function	r_run_help	585:6:12997:14071							
ANR	5069488	FunctionDef	r_run_help ()		5069487	0					
ANR	5069489	CompoundStatement		585:31:13022:14071	5069487	0					
ANR	5069490	Statement	return	586:1:13025:13030	5069487	0	True				
ANR	5069491	Statement	"""program=/bin/ls\\n"""	587:1:13033:13051	5069487	1	True				
ANR	5069492	Statement	"""arg1=/bin\\n"""	588:1:13054:13066	5069487	2	True				
ANR	5069493	Statement	"""# arg2=hello\\n"""	589:1:13069:13084	5069487	3	True				
ANR	5069494	Statement	"""# arg3=\\""hello\\\\nworld\\""\\n"""	590:1:13087:13114	5069487	4	True				
ANR	5069495	Statement	"""# arg4=:048490184058104849\\n"""	591:1:13117:13146	5069487	5	True				
ANR	5069496	Statement	"""# arg5=:!ragg2 -p n50 -d 10:0x8048123\\n"""	592:1:13149:13189	5069487	6	True				
ANR	5069497	Statement	"""# arg6=@arg.txt\\n"""	593:1:13192:13210	5069487	7	True				
ANR	5069498	Statement	"""# arg7=@300@ABCD # 300 chars filled with ABCD pattern\\n"""	594:1:13213:13269	5069487	8	True				
ANR	5069499	Statement	"""# system=r2 -\\n"""	595:1:13272:13288	5069487	9	True				
ANR	5069500	Statement	"""# aslr=no\\n"""	596:1:13291:13303	5069487	10	True				
ANR	5069501	Statement	"""setenv=FOO=BAR\\n"""	597:1:13306:13323	5069487	11	True				
ANR	5069502	Statement	"""# unsetenv=FOO\\n"""	598:1:13326:13343	5069487	12	True				
ANR	5069503	Statement	"""# clearenv=true\\n"""	599:1:13346:13364	5069487	13	True				
ANR	5069504	Statement	"""# envfile=environ.txt\\n"""	600:1:13367:13391	5069487	14	True				
ANR	5069505	Statement	"""timeout=3\\n"""	601:1:13394:13406	5069487	15	True				
ANR	5069506	Statement	"""# timeoutsig=SIGTERM # or 15\\n"""	602:1:13409:13440	5069487	16	True				
ANR	5069507	Statement	"""# connect=localhost:8080\\n"""	603:1:13443:13470	5069487	17	True				
ANR	5069508	Statement	"""# listen=8080\\n"""	604:1:13473:13489	5069487	18	True				
ANR	5069509	Statement	"""# pty=false\\n"""	605:1:13492:13506	5069487	19	True				
ANR	5069510	Statement	"""# fork=true\\n"""	606:1:13509:13523	5069487	20	True				
ANR	5069511	Statement	"""# bits=32\\n"""	607:1:13526:13538	5069487	21	True				
ANR	5069512	Statement	"""# pid=0\\n"""	608:1:13541:13551	5069487	22	True				
ANR	5069513	Statement	"""# pidfile=/tmp/foo.pid\\n"""	609:1:13554:13579	5069487	23	True				
ANR	5069514	Statement	"""# #sleep=0\\n"""	610:1:13582:13595	5069487	24	True				
ANR	5069515	Statement	"""# #maxfd=0\\n"""	611:1:13598:13611	5069487	25	True				
ANR	5069516	Statement	"""# #execve=false\\n"""	612:1:13614:13632	5069487	26	True				
ANR	5069517	Statement	"""# #maxproc=0\\n"""	613:1:13635:13650	5069487	27	True				
ANR	5069518	Statement	"""# #maxstack=0\\n"""	614:1:13653:13669	5069487	28	True				
ANR	5069519	Statement	"""# #core=false\\n"""	615:1:13672:13688	5069487	29	True				
ANR	5069520	Statement	"""# #stdio=blah.txt\\n"""	616:1:13691:13711	5069487	30	True				
ANR	5069521	Statement	"""# #stderr=foo.txt\\n"""	617:1:13714:13734	5069487	31	True				
ANR	5069522	Statement	"""# stdout=foo.txt\\n"""	618:1:13737:13756	5069487	32	True				
ANR	5069523	Statement	"""# stdin=input.txt # or !program to redirect input from another program\\n"""	619:1:13759:13832	5069487	33	True				
ANR	5069524	Statement	"""# input=input.txt\\n"""	620:1:13835:13855	5069487	34	True				
ANR	5069525	Statement	"""# chdir=/\\n"""	621:1:13858:13870	5069487	35	True				
ANR	5069526	Statement	"""# chroot=/mnt/chroot\\n"""	622:1:13873:13896	5069487	36	True				
ANR	5069527	Statement	"""# libpath=$PWD:/tmp/lib\\n"""	623:1:13899:13925	5069487	37	True				
ANR	5069528	Statement	"""# r2preload=yes\\n"""	624:1:13928:13946	5069487	38	True				
ANR	5069529	Statement	"""# preload=/lib/libfoo.so\\n"""	625:1:13949:13976	5069487	39	True				
ANR	5069530	Statement	"""# setuid=2000\\n"""	626:1:13979:13995	5069487	40	True				
ANR	5069531	Statement	"""# seteuid=2000\\n"""	627:1:13998:14015	5069487	41	True				
ANR	5069532	Statement	"""# setgid=2001\\n"""	628:1:14018:14034	5069487	42	True				
ANR	5069533	Statement	"""# setegid=2001\\n"""	629:1:14037:14054	5069487	43	True				
ANR	5069534	ExpressionStatement	"""# nice=5\\n"""	630:1:14057:14069	5069487	44	True				
ANR	5069535	PrimaryExpression	"""# nice=5\\n"""		5069487	0					
ANR	5069536	ReturnType	const char *		5069487	1					
ANR	5069537	Identifier	r_run_help		5069487	2					
ANR	5069538	ParameterList			5069487	3					
ANR	5069539	CFGEntryNode	ENTRY		5069487		True				
ANR	5069540	CFGExitNode	EXIT		5069487		True				
ANR	5069541	Function	fd_forward	634:0:14087:14639							
ANR	5069542	FunctionDef	"fd_forward (int in_fd , int out_fd , char * * buff)"		5069541	0					
ANR	5069543	CompoundStatement		634:58:14145:14639	5069541	0					
ANR	5069544	IdentifierDeclStatement	int size = 0 ;	635:1:14148:14160	5069541	0	True				
ANR	5069545	IdentifierDecl	size = 0		5069541	0					
ANR	5069546	IdentifierDeclType	int		5069541	0					
ANR	5069547	Identifier	size		5069541	1					
ANR	5069548	AssignmentExpression	size = 0		5069541	2		=			
ANR	5069549	Identifier	size		5069541	0					
ANR	5069550	PrimaryExpression	0		5069541	1					
ANR	5069551	IfStatement	"if ( ioctl ( in_fd , FIONREAD , & size ) == - 1 )"		5069541	1					
ANR	5069552	Condition	"ioctl ( in_fd , FIONREAD , & size ) == - 1"	637:5:14168:14203	5069541	0	True				
ANR	5069553	EqualityExpression	"ioctl ( in_fd , FIONREAD , & size ) == - 1"		5069541	0		==			
ANR	5069554	CallExpression	"ioctl ( in_fd , FIONREAD , & size )"		5069541	0					
ANR	5069555	Callee	ioctl		5069541	0					
ANR	5069556	Identifier	ioctl		5069541	0					
ANR	5069557	ArgumentList	in_fd		5069541	1					
ANR	5069558	Argument	in_fd		5069541	0					
ANR	5069559	Identifier	in_fd		5069541	0					
ANR	5069560	Argument	FIONREAD		5069541	1					
ANR	5069561	Identifier	FIONREAD		5069541	0					
ANR	5069562	Argument	& size		5069541	2					
ANR	5069563	UnaryOperationExpression	& size		5069541	0					
ANR	5069564	UnaryOperator	&		5069541	0					
ANR	5069565	Identifier	size		5069541	1					
ANR	5069566	UnaryOperationExpression	- 1		5069541	1					
ANR	5069567	UnaryOperator	-		5069541	0					
ANR	5069568	PrimaryExpression	1		5069541	1					
ANR	5069569	CompoundStatement		4:43:60:60	5069541	1					
ANR	5069570	ExpressionStatement	"perror ( ""ioctl"" )"	638:2:14210:14226	5069541	0	True				
ANR	5069571	CallExpression	"perror ( ""ioctl"" )"		5069541	0					
ANR	5069572	Callee	perror		5069541	0					
ANR	5069573	Identifier	perror		5069541	0					
ANR	5069574	ArgumentList	"""ioctl"""		5069541	1					
ANR	5069575	Argument	"""ioctl"""		5069541	0					
ANR	5069576	PrimaryExpression	"""ioctl"""		5069541	0					
ANR	5069577	ReturnStatement	return - 1 ;	639:2:14230:14239	5069541	1	True				
ANR	5069578	UnaryOperationExpression	- 1		5069541	0					
ANR	5069579	UnaryOperator	-		5069541	0					
ANR	5069580	PrimaryExpression	1		5069541	1					
ANR	5069581	IfStatement	if ( ! size )		5069541	2					
ANR	5069582	Condition	! size	641:5:14249:14253	5069541	0	True				
ANR	5069583	UnaryOperationExpression	! size		5069541	0					
ANR	5069584	UnaryOperator	!		5069541	0					
ANR	5069585	Identifier	size		5069541	1					
ANR	5069586	CompoundStatement		8:12:110:110	5069541	1					
ANR	5069587	ReturnStatement	return - 1 ;	642:2:14304:14313	5069541	0	True				
ANR	5069588	UnaryOperationExpression	- 1		5069541	0					
ANR	5069589	UnaryOperator	-		5069541	0					
ANR	5069590	PrimaryExpression	1		5069541	1					
ANR	5069591	IdentifierDeclStatement	"char * new_buff = realloc ( * buff , size ) ;"	645:1:14320:14358	5069541	3	True				
ANR	5069592	IdentifierDecl	"* new_buff = realloc ( * buff , size )"		5069541	0					
ANR	5069593	IdentifierDeclType	char *		5069541	0					
ANR	5069594	Identifier	new_buff		5069541	1					
ANR	5069595	AssignmentExpression	"* new_buff = realloc ( * buff , size )"		5069541	2		=			
ANR	5069596	Identifier	new_buff		5069541	0					
ANR	5069597	CallExpression	"realloc ( * buff , size )"		5069541	1					
ANR	5069598	Callee	realloc		5069541	0					
ANR	5069599	Identifier	realloc		5069541	0					
ANR	5069600	ArgumentList	* buff		5069541	1					
ANR	5069601	Argument	* buff		5069541	0					
ANR	5069602	UnaryOperationExpression	* buff		5069541	0					
ANR	5069603	UnaryOperator	*		5069541	0					
ANR	5069604	Identifier	buff		5069541	1					
ANR	5069605	Argument	size		5069541	1					
ANR	5069606	Identifier	size		5069541	0					
ANR	5069607	IfStatement	if ( ! new_buff )		5069541	4					
ANR	5069608	Condition	! new_buff	646:5:14365:14373	5069541	0	True				
ANR	5069609	UnaryOperationExpression	! new_buff		5069541	0					
ANR	5069610	UnaryOperator	!		5069541	0					
ANR	5069611	Identifier	new_buff		5069541	1					
ANR	5069612	CompoundStatement		13:16:230:230	5069541	1					
ANR	5069613	ExpressionStatement	"eprintf ( ""Failed to allocate buffer for redirection"" )"	647:2:14380:14433	5069541	0	True				
ANR	5069614	CallExpression	"eprintf ( ""Failed to allocate buffer for redirection"" )"		5069541	0					
ANR	5069615	Callee	eprintf		5069541	0					
ANR	5069616	Identifier	eprintf		5069541	0					
ANR	5069617	ArgumentList	"""Failed to allocate buffer for redirection"""		5069541	1					
ANR	5069618	Argument	"""Failed to allocate buffer for redirection"""		5069541	0					
ANR	5069619	PrimaryExpression	"""Failed to allocate buffer for redirection"""		5069541	0					
ANR	5069620	ReturnStatement	return - 1 ;	648:2:14437:14446	5069541	1	True				
ANR	5069621	UnaryOperationExpression	- 1		5069541	0					
ANR	5069622	UnaryOperator	-		5069541	0					
ANR	5069623	PrimaryExpression	1		5069541	1					
ANR	5069624	ExpressionStatement	* buff = new_buff	650:1:14452:14468	5069541	5	True				
ANR	5069625	AssignmentExpression	* buff = new_buff		5069541	0		=			
ANR	5069626	UnaryOperationExpression	* buff		5069541	0					
ANR	5069627	UnaryOperator	*		5069541	0					
ANR	5069628	Identifier	buff		5069541	1					
ANR	5069629	Identifier	new_buff		5069541	1					
ANR	5069630	IfStatement	"if ( read ( in_fd , * buff , size ) != size )"		5069541	6					
ANR	5069631	Condition	"read ( in_fd , * buff , size ) != size"	651:5:14475:14507	5069541	0	True				
ANR	5069632	EqualityExpression	"read ( in_fd , * buff , size ) != size"		5069541	0		!=			
ANR	5069633	CallExpression	"read ( in_fd , * buff , size )"		5069541	0					
ANR	5069634	Callee	read		5069541	0					
ANR	5069635	Identifier	read		5069541	0					
ANR	5069636	ArgumentList	in_fd		5069541	1					
ANR	5069637	Argument	in_fd		5069541	0					
ANR	5069638	Identifier	in_fd		5069541	0					
ANR	5069639	Argument	* buff		5069541	1					
ANR	5069640	UnaryOperationExpression	* buff		5069541	0					
ANR	5069641	UnaryOperator	*		5069541	0					
ANR	5069642	Identifier	buff		5069541	1					
ANR	5069643	Argument	size		5069541	2					
ANR	5069644	Identifier	size		5069541	0					
ANR	5069645	Identifier	size		5069541	1					
ANR	5069646	CompoundStatement		18:40:364:364	5069541	1					
ANR	5069647	ExpressionStatement	"perror ( ""read"" )"	652:2:14514:14529	5069541	0	True				
ANR	5069648	CallExpression	"perror ( ""read"" )"		5069541	0					
ANR	5069649	Callee	perror		5069541	0					
ANR	5069650	Identifier	perror		5069541	0					
ANR	5069651	ArgumentList	"""read"""		5069541	1					
ANR	5069652	Argument	"""read"""		5069541	0					
ANR	5069653	PrimaryExpression	"""read"""		5069541	0					
ANR	5069654	ReturnStatement	return - 1 ;	653:2:14533:14542	5069541	1	True				
ANR	5069655	UnaryOperationExpression	- 1		5069541	0					
ANR	5069656	UnaryOperator	-		5069541	0					
ANR	5069657	PrimaryExpression	1		5069541	1					
ANR	5069658	IfStatement	"if ( write ( out_fd , * buff , size ) != size )"		5069541	7					
ANR	5069659	Condition	"write ( out_fd , * buff , size ) != size"	655:5:14552:14586	5069541	0	True				
ANR	5069660	EqualityExpression	"write ( out_fd , * buff , size ) != size"		5069541	0		!=			
ANR	5069661	CallExpression	"write ( out_fd , * buff , size )"		5069541	0					
ANR	5069662	Callee	write		5069541	0					
ANR	5069663	Identifier	write		5069541	0					
ANR	5069664	ArgumentList	out_fd		5069541	1					
ANR	5069665	Argument	out_fd		5069541	0					
ANR	5069666	Identifier	out_fd		5069541	0					
ANR	5069667	Argument	* buff		5069541	1					
ANR	5069668	UnaryOperationExpression	* buff		5069541	0					
ANR	5069669	UnaryOperator	*		5069541	0					
ANR	5069670	Identifier	buff		5069541	1					
ANR	5069671	Argument	size		5069541	2					
ANR	5069672	Identifier	size		5069541	0					
ANR	5069673	Identifier	size		5069541	1					
ANR	5069674	CompoundStatement		22:42:443:443	5069541	1					
ANR	5069675	ExpressionStatement	"perror ( ""write"" )"	656:2:14593:14609	5069541	0	True				
ANR	5069676	CallExpression	"perror ( ""write"" )"		5069541	0					
ANR	5069677	Callee	perror		5069541	0					
ANR	5069678	Identifier	perror		5069541	0					
ANR	5069679	ArgumentList	"""write"""		5069541	1					
ANR	5069680	Argument	"""write"""		5069541	0					
ANR	5069681	PrimaryExpression	"""write"""		5069541	0					
ANR	5069682	ReturnStatement	return - 1 ;	657:2:14613:14622	5069541	1	True				
ANR	5069683	UnaryOperationExpression	- 1		5069541	0					
ANR	5069684	UnaryOperator	-		5069541	0					
ANR	5069685	PrimaryExpression	1		5069541	1					
ANR	5069686	ReturnStatement	return 0 ;	660:1:14629:14637	5069541	8	True				
ANR	5069687	PrimaryExpression	0		5069541	0					
ANR	5069688	ReturnType	static int		5069541	1					
ANR	5069689	Identifier	fd_forward		5069541	2					
ANR	5069690	ParameterList	"int in_fd , int out_fd , char * * buff"		5069541	3					
ANR	5069691	Parameter	int in_fd	634:22:14109:14117	5069541	0	True				
ANR	5069692	ParameterType	int		5069541	0					
ANR	5069693	Identifier	in_fd		5069541	1					
ANR	5069694	Parameter	int out_fd	634:33:14120:14129	5069541	1	True				
ANR	5069695	ParameterType	int		5069541	0					
ANR	5069696	Identifier	out_fd		5069541	1					
ANR	5069697	Parameter	char * * buff	634:45:14132:14142	5069541	2	True				
ANR	5069698	ParameterType	char * *		5069541	0					
ANR	5069699	Identifier	buff		5069541	1					
ANR	5069700	CFGEntryNode	ENTRY		5069541		True				
ANR	5069701	CFGExitNode	EXIT		5069541		True				
ANR	5069702	Symbol	FIONREAD		5069541						
ANR	5069703	Symbol	new_buff		5069541						
ANR	5069704	Symbol	in_fd		5069541						
ANR	5069705	Symbol	read		5069541						
ANR	5069706	Symbol	size		5069541						
ANR	5069707	Symbol	* buff		5069541						
ANR	5069708	Symbol	& size		5069541						
ANR	5069709	Symbol	realloc		5069541						
ANR	5069710	Symbol	buff		5069541						
ANR	5069711	Symbol	write		5069541						
ANR	5069712	Symbol	ioctl		5069541						
ANR	5069713	Symbol	out_fd		5069541						
ANR	5069714	Function	redirect_socket_to_stdio	664:0:14649:14814							
ANR	5069715	FunctionDef	redirect_socket_to_stdio (RSocket * sock)		5069714	0					
ANR	5069716	CompoundStatement		664:51:14700:14814	5069714	0					
ANR	5069717	ExpressionStatement	close ( 0 )	665:1:14703:14712	5069714	0	True				
ANR	5069718	CallExpression	close ( 0 )		5069714	0					
ANR	5069719	Callee	close		5069714	0					
ANR	5069720	Identifier	close		5069714	0					
ANR	5069721	ArgumentList	0		5069714	1					
ANR	5069722	Argument	0		5069714	0					
ANR	5069723	PrimaryExpression	0		5069714	0					
ANR	5069724	ExpressionStatement	close ( 1 )	666:1:14715:14724	5069714	1	True				
ANR	5069725	CallExpression	close ( 1 )		5069714	0					
ANR	5069726	Callee	close		5069714	0					
ANR	5069727	Identifier	close		5069714	0					
ANR	5069728	ArgumentList	1		5069714	1					
ANR	5069729	Argument	1		5069714	0					
ANR	5069730	PrimaryExpression	1		5069714	0					
ANR	5069731	ExpressionStatement	close ( 2 )	667:1:14727:14736	5069714	2	True				
ANR	5069732	CallExpression	close ( 2 )		5069714	0					
ANR	5069733	Callee	close		5069714	0					
ANR	5069734	Identifier	close		5069714	0					
ANR	5069735	ArgumentList	2		5069714	1					
ANR	5069736	Argument	2		5069714	0					
ANR	5069737	PrimaryExpression	2		5069714	0					
ANR	5069738	ExpressionStatement	"dup2 ( sock -> fd , 0 )"	669:1:14740:14758	5069714	3	True				
ANR	5069739	CallExpression	"dup2 ( sock -> fd , 0 )"		5069714	0					
ANR	5069740	Callee	dup2		5069714	0					
ANR	5069741	Identifier	dup2		5069714	0					
ANR	5069742	ArgumentList	sock -> fd		5069714	1					
ANR	5069743	Argument	sock -> fd		5069714	0					
ANR	5069744	PtrMemberAccess	sock -> fd		5069714	0					
ANR	5069745	Identifier	sock		5069714	0					
ANR	5069746	Identifier	fd		5069714	1					
ANR	5069747	Argument	0		5069714	1					
ANR	5069748	PrimaryExpression	0		5069714	0					
ANR	5069749	ExpressionStatement	"dup2 ( sock -> fd , 1 )"	670:1:14761:14779	5069714	4	True				
ANR	5069750	CallExpression	"dup2 ( sock -> fd , 1 )"		5069714	0					
ANR	5069751	Callee	dup2		5069714	0					
ANR	5069752	Identifier	dup2		5069714	0					
ANR	5069753	ArgumentList	sock -> fd		5069714	1					
ANR	5069754	Argument	sock -> fd		5069714	0					
ANR	5069755	PtrMemberAccess	sock -> fd		5069714	0					
ANR	5069756	Identifier	sock		5069714	0					
ANR	5069757	Identifier	fd		5069714	1					
ANR	5069758	Argument	1		5069714	1					
ANR	5069759	PrimaryExpression	1		5069714	0					
ANR	5069760	ExpressionStatement	"dup2 ( sock -> fd , 2 )"	671:1:14782:14800	5069714	5	True				
ANR	5069761	CallExpression	"dup2 ( sock -> fd , 2 )"		5069714	0					
ANR	5069762	Callee	dup2		5069714	0					
ANR	5069763	Identifier	dup2		5069714	0					
ANR	5069764	ArgumentList	sock -> fd		5069714	1					
ANR	5069765	Argument	sock -> fd		5069714	0					
ANR	5069766	PtrMemberAccess	sock -> fd		5069714	0					
ANR	5069767	Identifier	sock		5069714	0					
ANR	5069768	Identifier	fd		5069714	1					
ANR	5069769	Argument	2		5069714	1					
ANR	5069770	PrimaryExpression	2		5069714	0					
ANR	5069771	ReturnStatement	return 0 ;	673:1:14804:14812	5069714	6	True				
ANR	5069772	PrimaryExpression	0		5069714	0					
ANR	5069773	ReturnType	static int		5069714	1					
ANR	5069774	Identifier	redirect_socket_to_stdio		5069714	2					
ANR	5069775	ParameterList	RSocket * sock		5069714	3					
ANR	5069776	Parameter	RSocket * sock	664:36:14685:14697	5069714	0	True				
ANR	5069777	ParameterType	RSocket *		5069714	0					
ANR	5069778	Identifier	sock		5069714	1					
ANR	5069779	CFGEntryNode	ENTRY		5069714		True				
ANR	5069780	CFGExitNode	EXIT		5069714		True				
ANR	5069781	Symbol	sock		5069714						
ANR	5069782	Symbol	sock -> fd		5069714						
ANR	5069783	Symbol	* sock		5069714						
ANR	5069784	Function	redirect_socket_to_pty	676:0:14817:16196							
ANR	5069785	FunctionDef	redirect_socket_to_pty (RSocket * sock)		5069784	0					
ANR	5069786	CompoundStatement		676:49:14866:16196	5069784	0					
ANR	5069787	IdentifierDeclStatement	"int fdm , fds ;"	680:1:14985:14997	5069784	0	True				
ANR	5069788	IdentifierDecl	fdm		5069784	0					
ANR	5069789	IdentifierDeclType	int		5069784	0					
ANR	5069790	Identifier	fdm		5069784	1					
ANR	5069791	IdentifierDecl	fds		5069784	1					
ANR	5069792	IdentifierDeclType	int		5069784	0					
ANR	5069793	Identifier	fds		5069784	1					
ANR	5069794	IfStatement	"if ( openpty ( & fdm , & fds , NULL , NULL , NULL ) == - 1 )"		5069784	1					
ANR	5069795	Condition	"openpty ( & fdm , & fds , NULL , NULL , NULL ) == - 1"	682:5:15005:15048	5069784	0	True				
ANR	5069796	EqualityExpression	"openpty ( & fdm , & fds , NULL , NULL , NULL ) == - 1"		5069784	0		==			
ANR	5069797	CallExpression	"openpty ( & fdm , & fds , NULL , NULL , NULL )"		5069784	0					
ANR	5069798	Callee	openpty		5069784	0					
ANR	5069799	Identifier	openpty		5069784	0					
ANR	5069800	ArgumentList	& fdm		5069784	1					
ANR	5069801	Argument	& fdm		5069784	0					
ANR	5069802	UnaryOperationExpression	& fdm		5069784	0					
ANR	5069803	UnaryOperator	&		5069784	0					
ANR	5069804	Identifier	fdm		5069784	1					
ANR	5069805	Argument	& fds		5069784	1					
ANR	5069806	UnaryOperationExpression	& fds		5069784	0					
ANR	5069807	UnaryOperator	&		5069784	0					
ANR	5069808	Identifier	fds		5069784	1					
ANR	5069809	Argument	NULL		5069784	2					
ANR	5069810	Identifier	NULL		5069784	0					
ANR	5069811	Argument	NULL		5069784	3					
ANR	5069812	Identifier	NULL		5069784	0					
ANR	5069813	Argument	NULL		5069784	4					
ANR	5069814	Identifier	NULL		5069784	0					
ANR	5069815	UnaryOperationExpression	- 1		5069784	1					
ANR	5069816	UnaryOperator	-		5069784	0					
ANR	5069817	PrimaryExpression	1		5069784	1					
ANR	5069818	CompoundStatement		7:51:184:184	5069784	1					
ANR	5069819	ExpressionStatement	"perror ( ""opening pty"" )"	683:2:15055:15077	5069784	0	True				
ANR	5069820	CallExpression	"perror ( ""opening pty"" )"		5069784	0					
ANR	5069821	Callee	perror		5069784	0					
ANR	5069822	Identifier	perror		5069784	0					
ANR	5069823	ArgumentList	"""opening pty"""		5069784	1					
ANR	5069824	Argument	"""opening pty"""		5069784	0					
ANR	5069825	PrimaryExpression	"""opening pty"""		5069784	0					
ANR	5069826	ReturnStatement	return - 1 ;	684:2:15081:15090	5069784	1	True				
ANR	5069827	UnaryOperationExpression	- 1		5069784	0					
ANR	5069828	UnaryOperator	-		5069784	0					
ANR	5069829	PrimaryExpression	1		5069784	1					
ANR	5069830	IdentifierDeclStatement	pid_t child_pid = r_sys_fork ( ) ;	687:1:15097:15128	5069784	2	True				
ANR	5069831	IdentifierDecl	child_pid = r_sys_fork ( )		5069784	0					
ANR	5069832	IdentifierDeclType	pid_t		5069784	0					
ANR	5069833	Identifier	child_pid		5069784	1					
ANR	5069834	AssignmentExpression	child_pid = r_sys_fork ( )		5069784	2		=			
ANR	5069835	Identifier	child_pid		5069784	0					
ANR	5069836	CallExpression	r_sys_fork ( )		5069784	1					
ANR	5069837	Callee	r_sys_fork		5069784	0					
ANR	5069838	Identifier	r_sys_fork		5069784	0					
ANR	5069839	ArgumentList			5069784	1					
ANR	5069840	IfStatement	if ( child_pid == - 1 )		5069784	3					
ANR	5069841	Condition	child_pid == - 1	689:5:15136:15150	5069784	0	True				
ANR	5069842	EqualityExpression	child_pid == - 1		5069784	0		==			
ANR	5069843	Identifier	child_pid		5069784	0					
ANR	5069844	UnaryOperationExpression	- 1		5069784	1					
ANR	5069845	UnaryOperator	-		5069784	0					
ANR	5069846	PrimaryExpression	1		5069784	1					
ANR	5069847	CompoundStatement		14:22:286:286	5069784	1					
ANR	5069848	ExpressionStatement	"eprintf ( ""cannot fork\\n"" )"	690:2:15157:15182	5069784	0	True				
ANR	5069849	CallExpression	"eprintf ( ""cannot fork\\n"" )"		5069784	0					
ANR	5069850	Callee	eprintf		5069784	0					
ANR	5069851	Identifier	eprintf		5069784	0					
ANR	5069852	ArgumentList	"""cannot fork\\n"""		5069784	1					
ANR	5069853	Argument	"""cannot fork\\n"""		5069784	0					
ANR	5069854	PrimaryExpression	"""cannot fork\\n"""		5069784	0					
ANR	5069855	ExpressionStatement	close ( fdm )	691:2:15186:15196	5069784	1	True				
ANR	5069856	CallExpression	close ( fdm )		5069784	0					
ANR	5069857	Callee	close		5069784	0					
ANR	5069858	Identifier	close		5069784	0					
ANR	5069859	ArgumentList	fdm		5069784	1					
ANR	5069860	Argument	fdm		5069784	0					
ANR	5069861	Identifier	fdm		5069784	0					
ANR	5069862	ExpressionStatement	close ( fds )	692:2:15200:15210	5069784	2	True				
ANR	5069863	CallExpression	close ( fds )		5069784	0					
ANR	5069864	Callee	close		5069784	0					
ANR	5069865	Identifier	close		5069784	0					
ANR	5069866	ArgumentList	fds		5069784	1					
ANR	5069867	Argument	fds		5069784	0					
ANR	5069868	Identifier	fds		5069784	0					
ANR	5069869	ReturnStatement	return - 1 ;	693:2:15214:15223	5069784	3	True				
ANR	5069870	UnaryOperationExpression	- 1		5069784	0					
ANR	5069871	UnaryOperator	-		5069784	0					
ANR	5069872	PrimaryExpression	1		5069784	1					
ANR	5069873	IfStatement	if ( child_pid == 0 )		5069784	4					
ANR	5069874	Condition	child_pid == 0	696:5:15234:15247	5069784	0	True				
ANR	5069875	EqualityExpression	child_pid == 0		5069784	0		==			
ANR	5069876	Identifier	child_pid		5069784	0					
ANR	5069877	PrimaryExpression	0		5069784	1					
ANR	5069878	CompoundStatement		27:2:468:508	5069784	1					
ANR	5069879	ExpressionStatement	close ( fds )	698:2:15273:15284	5069784	0	True				
ANR	5069880	CallExpression	close ( fds )		5069784	0					
ANR	5069881	Callee	close		5069784	0					
ANR	5069882	Identifier	close		5069784	0					
ANR	5069883	ArgumentList	fds		5069784	1					
ANR	5069884	Argument	fds		5069784	0					
ANR	5069885	Identifier	fds		5069784	0					
ANR	5069886	IdentifierDeclStatement	char * buff = NULL ;	700:2:15289:15306	5069784	1	True				
ANR	5069887	IdentifierDecl	* buff = NULL		5069784	0					
ANR	5069888	IdentifierDeclType	char *		5069784	0					
ANR	5069889	Identifier	buff		5069784	1					
ANR	5069890	AssignmentExpression	* buff = NULL		5069784	2		=			
ANR	5069891	Identifier	NULL		5069784	0					
ANR	5069892	Identifier	NULL		5069784	1					
ANR	5069893	IdentifierDeclStatement	int sockfd = sock -> fd ;	701:2:15310:15331	5069784	2	True				
ANR	5069894	IdentifierDecl	sockfd = sock -> fd		5069784	0					
ANR	5069895	IdentifierDeclType	int		5069784	0					
ANR	5069896	Identifier	sockfd		5069784	1					
ANR	5069897	AssignmentExpression	sockfd = sock -> fd		5069784	2		=			
ANR	5069898	Identifier	sockfd		5069784	0					
ANR	5069899	PtrMemberAccess	sock -> fd		5069784	1					
ANR	5069900	Identifier	sock		5069784	0					
ANR	5069901	Identifier	fd		5069784	1					
ANR	5069902	IdentifierDeclStatement	int max_fd = fdm > sockfd ? fdm : sockfd ;	702:2:15335:15375	5069784	3	True				
ANR	5069903	IdentifierDecl	max_fd = fdm > sockfd ? fdm : sockfd		5069784	0					
ANR	5069904	IdentifierDeclType	int		5069784	0					
ANR	5069905	Identifier	max_fd		5069784	1					
ANR	5069906	AssignmentExpression	max_fd = fdm > sockfd ? fdm : sockfd		5069784	2		=			
ANR	5069907	Identifier	max_fd		5069784	0					
ANR	5069908	ConditionalExpression	fdm > sockfd ? fdm : sockfd		5069784	1					
ANR	5069909	Condition	fdm > sockfd		5069784	0					
ANR	5069910	RelationalExpression	fdm > sockfd		5069784	0		>			
ANR	5069911	Identifier	fdm		5069784	0					
ANR	5069912	Identifier	sockfd		5069784	1					
ANR	5069913	Identifier	fdm		5069784	1					
ANR	5069914	Identifier	sockfd		5069784	2					
ANR	5069915	WhileStatement	while ( true )		5069784	4					
ANR	5069916	Condition	true	704:9:15387:15390	5069784	0	True				
ANR	5069917	Identifier	true		5069784	0					
ANR	5069918	CompoundStatement		30:3:531:545	5069784	1					
ANR	5069919	IdentifierDeclStatement	fd_set readfds ;	705:3:15398:15412	5069784	0	True				
ANR	5069920	IdentifierDecl	readfds		5069784	0					
ANR	5069921	IdentifierDeclType	fd_set		5069784	0					
ANR	5069922	Identifier	readfds		5069784	1					
ANR	5069923	ExpressionStatement	FD_ZERO ( & readfds )	706:3:15417:15435	5069784	1	True				
ANR	5069924	CallExpression	FD_ZERO ( & readfds )		5069784	0					
ANR	5069925	Callee	FD_ZERO		5069784	0					
ANR	5069926	Identifier	FD_ZERO		5069784	0					
ANR	5069927	ArgumentList	& readfds		5069784	1					
ANR	5069928	Argument	& readfds		5069784	0					
ANR	5069929	UnaryOperationExpression	& readfds		5069784	0					
ANR	5069930	UnaryOperator	&		5069784	0					
ANR	5069931	Identifier	readfds		5069784	1					
ANR	5069932	ExpressionStatement	"FD_SET ( fdm , & readfds )"	707:3:15440:15462	5069784	2	True				
ANR	5069933	CallExpression	"FD_SET ( fdm , & readfds )"		5069784	0					
ANR	5069934	Callee	FD_SET		5069784	0					
ANR	5069935	Identifier	FD_SET		5069784	0					
ANR	5069936	ArgumentList	fdm		5069784	1					
ANR	5069937	Argument	fdm		5069784	0					
ANR	5069938	Identifier	fdm		5069784	0					
ANR	5069939	Argument	& readfds		5069784	1					
ANR	5069940	UnaryOperationExpression	& readfds		5069784	0					
ANR	5069941	UnaryOperator	&		5069784	0					
ANR	5069942	Identifier	readfds		5069784	1					
ANR	5069943	ExpressionStatement	"FD_SET ( sockfd , & readfds )"	708:3:15467:15492	5069784	3	True				
ANR	5069944	CallExpression	"FD_SET ( sockfd , & readfds )"		5069784	0					
ANR	5069945	Callee	FD_SET		5069784	0					
ANR	5069946	Identifier	FD_SET		5069784	0					
ANR	5069947	ArgumentList	sockfd		5069784	1					
ANR	5069948	Argument	sockfd		5069784	0					
ANR	5069949	Identifier	sockfd		5069784	0					
ANR	5069950	Argument	& readfds		5069784	1					
ANR	5069951	UnaryOperationExpression	& readfds		5069784	0					
ANR	5069952	UnaryOperator	&		5069784	0					
ANR	5069953	Identifier	readfds		5069784	1					
ANR	5069954	IfStatement	"if ( select ( max_fd + 1 , & readfds , NULL , NULL , NULL ) == - 1 )"		5069784	4					
ANR	5069955	Condition	"select ( max_fd + 1 , & readfds , NULL , NULL , NULL ) == - 1"	710:7:15502:15554	5069784	0	True				
ANR	5069956	EqualityExpression	"select ( max_fd + 1 , & readfds , NULL , NULL , NULL ) == - 1"		5069784	0		==			
ANR	5069957	CallExpression	"select ( max_fd + 1 , & readfds , NULL , NULL , NULL )"		5069784	0					
ANR	5069958	Callee	select		5069784	0					
ANR	5069959	Identifier	select		5069784	0					
ANR	5069960	ArgumentList	max_fd + 1		5069784	1					
ANR	5069961	Argument	max_fd + 1		5069784	0					
ANR	5069962	AdditiveExpression	max_fd + 1		5069784	0		+			
ANR	5069963	Identifier	max_fd		5069784	0					
ANR	5069964	PrimaryExpression	1		5069784	1					
ANR	5069965	Argument	& readfds		5069784	1					
ANR	5069966	UnaryOperationExpression	& readfds		5069784	0					
ANR	5069967	UnaryOperator	&		5069784	0					
ANR	5069968	Identifier	readfds		5069784	1					
ANR	5069969	Argument	NULL		5069784	2					
ANR	5069970	Identifier	NULL		5069784	0					
ANR	5069971	Argument	NULL		5069784	3					
ANR	5069972	Identifier	NULL		5069784	0					
ANR	5069973	Argument	NULL		5069784	4					
ANR	5069974	Identifier	NULL		5069784	0					
ANR	5069975	UnaryOperationExpression	- 1		5069784	1					
ANR	5069976	UnaryOperator	-		5069784	0					
ANR	5069977	PrimaryExpression	1		5069784	1					
ANR	5069978	CompoundStatement		35:62:690:690	5069784	1					
ANR	5069979	ExpressionStatement	"perror ( ""select error"" )"	711:4:15563:15586	5069784	0	True				
ANR	5069980	CallExpression	"perror ( ""select error"" )"		5069784	0					
ANR	5069981	Callee	perror		5069784	0					
ANR	5069982	Identifier	perror		5069784	0					
ANR	5069983	ArgumentList	"""select error"""		5069784	1					
ANR	5069984	Argument	"""select error"""		5069784	0					
ANR	5069985	PrimaryExpression	"""select error"""		5069784	0					
ANR	5069986	BreakStatement	break ;	712:4:15592:15597	5069784	1	True				
ANR	5069987	IfStatement	"if ( FD_ISSET ( fdm , & readfds ) )"		5069784	5					
ANR	5069988	Condition	"FD_ISSET ( fdm , & readfds )"	715:7:15612:15635	5069784	0	True				
ANR	5069989	CallExpression	"FD_ISSET ( fdm , & readfds )"		5069784	0					
ANR	5069990	Callee	FD_ISSET		5069784	0					
ANR	5069991	Identifier	FD_ISSET		5069784	0					
ANR	5069992	ArgumentList	fdm		5069784	1					
ANR	5069993	Argument	fdm		5069784	0					
ANR	5069994	Identifier	fdm		5069784	0					
ANR	5069995	Argument	& readfds		5069784	1					
ANR	5069996	UnaryOperationExpression	& readfds		5069784	0					
ANR	5069997	UnaryOperator	&		5069784	0					
ANR	5069998	Identifier	readfds		5069784	1					
ANR	5069999	CompoundStatement		40:33:771:771	5069784	1					
ANR	5070000	IfStatement	"if ( fd_forward ( fdm , sockfd , & buff ) != 0 )"		5069784	0					
ANR	5070001	Condition	"fd_forward ( fdm , sockfd , & buff ) != 0"	716:8:15648:15683	5069784	0	True				
ANR	5070002	EqualityExpression	"fd_forward ( fdm , sockfd , & buff ) != 0"		5069784	0		!=			
ANR	5070003	CallExpression	"fd_forward ( fdm , sockfd , & buff )"		5069784	0					
ANR	5070004	Callee	fd_forward		5069784	0					
ANR	5070005	Identifier	fd_forward		5069784	0					
ANR	5070006	ArgumentList	fdm		5069784	1					
ANR	5070007	Argument	fdm		5069784	0					
ANR	5070008	Identifier	fdm		5069784	0					
ANR	5070009	Argument	sockfd		5069784	1					
ANR	5070010	Identifier	sockfd		5069784	0					
ANR	5070011	Argument	& buff		5069784	2					
ANR	5070012	UnaryOperationExpression	& buff		5069784	0					
ANR	5070013	UnaryOperator	&		5069784	0					
ANR	5070014	Identifier	buff		5069784	1					
ANR	5070015	PrimaryExpression	0		5069784	1					
ANR	5070016	CompoundStatement		41:46:819:819	5069784	1					
ANR	5070017	BreakStatement	break ;	717:5:15693:15698	5069784	0	True				
ANR	5070018	IfStatement	"if ( FD_ISSET ( sockfd , & readfds ) )"		5069784	6					
ANR	5070019	Condition	"FD_ISSET ( sockfd , & readfds )"	721:7:15719:15745	5069784	0	True				
ANR	5070020	CallExpression	"FD_ISSET ( sockfd , & readfds )"		5069784	0					
ANR	5070021	Callee	FD_ISSET		5069784	0					
ANR	5070022	Identifier	FD_ISSET		5069784	0					
ANR	5070023	ArgumentList	sockfd		5069784	1					
ANR	5070024	Argument	sockfd		5069784	0					
ANR	5070025	Identifier	sockfd		5069784	0					
ANR	5070026	Argument	& readfds		5069784	1					
ANR	5070027	UnaryOperationExpression	& readfds		5069784	0					
ANR	5070028	UnaryOperator	&		5069784	0					
ANR	5070029	Identifier	readfds		5069784	1					
ANR	5070030	CompoundStatement		46:36:881:881	5069784	1					
ANR	5070031	IfStatement	"if ( fd_forward ( sockfd , fdm , & buff ) != 0 )"		5069784	0					
ANR	5070032	Condition	"fd_forward ( sockfd , fdm , & buff ) != 0"	722:8:15758:15793	5069784	0	True				
ANR	5070033	EqualityExpression	"fd_forward ( sockfd , fdm , & buff ) != 0"		5069784	0		!=			
ANR	5070034	CallExpression	"fd_forward ( sockfd , fdm , & buff )"		5069784	0					
ANR	5070035	Callee	fd_forward		5069784	0					
ANR	5070036	Identifier	fd_forward		5069784	0					
ANR	5070037	ArgumentList	sockfd		5069784	1					
ANR	5070038	Argument	sockfd		5069784	0					
ANR	5070039	Identifier	sockfd		5069784	0					
ANR	5070040	Argument	fdm		5069784	1					
ANR	5070041	Identifier	fdm		5069784	0					
ANR	5070042	Argument	& buff		5069784	2					
ANR	5070043	UnaryOperationExpression	& buff		5069784	0					
ANR	5070044	UnaryOperator	&		5069784	0					
ANR	5070045	Identifier	buff		5069784	1					
ANR	5070046	PrimaryExpression	0		5069784	1					
ANR	5070047	CompoundStatement		47:46:929:929	5069784	1					
ANR	5070048	BreakStatement	break ;	723:5:15803:15808	5069784	0	True				
ANR	5070049	ExpressionStatement	free ( buff )	728:2:15828:15839	5069784	5	True				
ANR	5070050	CallExpression	free ( buff )		5069784	0					
ANR	5070051	Callee	free		5069784	0					
ANR	5070052	Identifier	free		5069784	0					
ANR	5070053	ArgumentList	buff		5069784	1					
ANR	5070054	Argument	buff		5069784	0					
ANR	5070055	Identifier	buff		5069784	0					
ANR	5070056	ExpressionStatement	close ( fdm )	729:2:15843:15854	5069784	6	True				
ANR	5070057	CallExpression	close ( fdm )		5069784	0					
ANR	5070058	Callee	close		5069784	0					
ANR	5070059	Identifier	close		5069784	0					
ANR	5070060	ArgumentList	fdm		5069784	1					
ANR	5070061	Argument	fdm		5069784	0					
ANR	5070062	Identifier	fdm		5069784	0					
ANR	5070063	ExpressionStatement	r_socket_free ( sock )	730:2:15858:15878	5069784	7	True				
ANR	5070064	CallExpression	r_socket_free ( sock )		5069784	0					
ANR	5070065	Callee	r_socket_free		5069784	0					
ANR	5070066	Identifier	r_socket_free		5069784	0					
ANR	5070067	ArgumentList	sock		5069784	1					
ANR	5070068	Argument	sock		5069784	0					
ANR	5070069	Identifier	sock		5069784	0					
ANR	5070070	ExpressionStatement	exit ( 0 )	731:2:15882:15890	5069784	8	True				
ANR	5070071	CallExpression	exit ( 0 )		5069784	0					
ANR	5070072	Callee	exit		5069784	0					
ANR	5070073	Identifier	exit		5069784	0					
ANR	5070074	ArgumentList	0		5069784	1					
ANR	5070075	Argument	0		5069784	0					
ANR	5070076	PrimaryExpression	0		5069784	0					
ANR	5070077	ExpressionStatement	r_socket_close_fd ( sock )	735:1:15908:15932	5069784	5	True				
ANR	5070078	CallExpression	r_socket_close_fd ( sock )		5069784	0					
ANR	5070079	Callee	r_socket_close_fd		5069784	0					
ANR	5070080	Identifier	r_socket_close_fd		5069784	0					
ANR	5070081	ArgumentList	sock		5069784	1					
ANR	5070082	Argument	sock		5069784	0					
ANR	5070083	Identifier	sock		5069784	0					
ANR	5070084	ExpressionStatement	login_tty ( fds )	736:1:15935:15950	5069784	6	True				
ANR	5070085	CallExpression	login_tty ( fds )		5069784	0					
ANR	5070086	Callee	login_tty		5069784	0					
ANR	5070087	Identifier	login_tty		5069784	0					
ANR	5070088	ArgumentList	fds		5069784	1					
ANR	5070089	Argument	fds		5069784	0					
ANR	5070090	Identifier	fds		5069784	0					
ANR	5070091	ExpressionStatement	close ( fdm )	737:1:15953:15964	5069784	7	True				
ANR	5070092	CallExpression	close ( fdm )		5069784	0					
ANR	5070093	Callee	close		5069784	0					
ANR	5070094	Identifier	close		5069784	0					
ANR	5070095	ArgumentList	fdm		5069784	1					
ANR	5070096	Argument	fdm		5069784	0					
ANR	5070097	Identifier	fdm		5069784	0					
ANR	5070098	IdentifierDeclStatement	struct termios t ;	740:1:16004:16020	5069784	8	True				
ANR	5070099	IdentifierDecl	t		5069784	0					
ANR	5070100	IdentifierDeclType	struct termios		5069784	0					
ANR	5070101	Identifier	t		5069784	1					
ANR	5070102	ExpressionStatement	"tcgetattr ( 0 , & t )"	741:1:16023:16040	5069784	9	True				
ANR	5070103	CallExpression	"tcgetattr ( 0 , & t )"		5069784	0					
ANR	5070104	Callee	tcgetattr		5069784	0					
ANR	5070105	Identifier	tcgetattr		5069784	0					
ANR	5070106	ArgumentList	0		5069784	1					
ANR	5070107	Argument	0		5069784	0					
ANR	5070108	PrimaryExpression	0		5069784	0					
ANR	5070109	Argument	& t		5069784	1					
ANR	5070110	UnaryOperationExpression	& t		5069784	0					
ANR	5070111	UnaryOperator	&		5069784	0					
ANR	5070112	Identifier	t		5069784	1					
ANR	5070113	ExpressionStatement	cfmakeraw ( & t )	742:1:16043:16057	5069784	10	True				
ANR	5070114	CallExpression	cfmakeraw ( & t )		5069784	0					
ANR	5070115	Callee	cfmakeraw		5069784	0					
ANR	5070116	Identifier	cfmakeraw		5069784	0					
ANR	5070117	ArgumentList	& t		5069784	1					
ANR	5070118	Argument	& t		5069784	0					
ANR	5070119	UnaryOperationExpression	& t		5069784	0					
ANR	5070120	UnaryOperator	&		5069784	0					
ANR	5070121	Identifier	t		5069784	1					
ANR	5070122	ExpressionStatement	"tcsetattr ( 0 , TCSANOW , & t )"	743:1:16060:16086	5069784	11	True				
ANR	5070123	CallExpression	"tcsetattr ( 0 , TCSANOW , & t )"		5069784	0					
ANR	5070124	Callee	tcsetattr		5069784	0					
ANR	5070125	Identifier	tcsetattr		5069784	0					
ANR	5070126	ArgumentList	0		5069784	1					
ANR	5070127	Argument	0		5069784	0					
ANR	5070128	PrimaryExpression	0		5069784	0					
ANR	5070129	Argument	TCSANOW		5069784	1					
ANR	5070130	Identifier	TCSANOW		5069784	0					
ANR	5070131	Argument	& t		5069784	2					
ANR	5070132	UnaryOperationExpression	& t		5069784	0					
ANR	5070133	UnaryOperator	&		5069784	0					
ANR	5070134	Identifier	t		5069784	1					
ANR	5070135	ReturnStatement	return 0 ;	745:1:16090:16098	5069784	12	True				
ANR	5070136	PrimaryExpression	0		5069784	0					
ANR	5070137	ReturnType	static int		5069784	1					
ANR	5070138	Identifier	redirect_socket_to_pty		5069784	2					
ANR	5070139	ParameterList	RSocket * sock		5069784	3					
ANR	5070140	Parameter	RSocket * sock	676:34:14851:14863	5069784	0	True				
ANR	5070141	ParameterType	RSocket *		5069784	0					
ANR	5070142	Identifier	sock		5069784	1					
ANR	5070143	CFGEntryNode	ENTRY		5069784		True				
ANR	5070144	CFGExitNode	EXIT		5069784		True				
ANR	5070145	Symbol	NULL		5069784						
ANR	5070146	Symbol	select		5069784						
ANR	5070147	Symbol	& buff		5069784						
ANR	5070148	Symbol	TCSANOW		5069784						
ANR	5070149	Symbol	sockfd		5069784						
ANR	5070150	Symbol	fdm		5069784						
ANR	5070151	Symbol	child_pid		5069784						
ANR	5070152	Symbol	sock		5069784						
ANR	5070153	Symbol	& fdm		5069784						
ANR	5070154	Symbol	fds		5069784						
ANR	5070155	Symbol	t		5069784						
ANR	5070156	Symbol	FD_ISSET		5069784						
ANR	5070157	Symbol	fd_forward		5069784						
ANR	5070158	Symbol	max_fd		5069784						
ANR	5070159	Symbol	& readfds		5069784						
ANR	5070160	Symbol	true		5069784						
ANR	5070161	Symbol	readfds		5069784						
ANR	5070162	Symbol	& t		5069784						
ANR	5070163	Symbol	r_sys_fork		5069784						
ANR	5070164	Symbol	sock -> fd		5069784						
ANR	5070165	Symbol	& fds		5069784						
ANR	5070166	Symbol	buff		5069784						
ANR	5070167	Symbol	openpty		5069784						
ANR	5070168	Symbol	* sock		5069784						
ANR	5070169	Function	r_run_config_env	752:0:16199:21853							
ANR	5070170	FunctionDef	r_run_config_env (RRunProfile * p)		5070169	0					
ANR	5070171	CompoundStatement		752:43:16242:21853	5070169	0					
ANR	5070172	IdentifierDeclStatement	int ret ;	753:1:16245:16252	5070169	0	True				
ANR	5070173	IdentifierDecl	ret		5070169	0					
ANR	5070174	IdentifierDeclType	int		5070169	0					
ANR	5070175	Identifier	ret		5070169	1					
ANR	5070176	IfStatement	if ( ! p -> _program && ! p -> _system && ! p -> _runlib )		5070169	1					
ANR	5070177	Condition	! p -> _program && ! p -> _system && ! p -> _runlib	755:5:16260:16301	5070169	0	True				
ANR	5070178	AndExpression	! p -> _program && ! p -> _system && ! p -> _runlib		5070169	0		&&			
ANR	5070179	UnaryOperationExpression	! p -> _program		5070169	0					
ANR	5070180	UnaryOperator	!		5070169	0					
ANR	5070181	PtrMemberAccess	p -> _program		5070169	1					
ANR	5070182	Identifier	p		5070169	0					
ANR	5070183	Identifier	_program		5070169	1					
ANR	5070184	AndExpression	! p -> _system && ! p -> _runlib		5070169	1		&&			
ANR	5070185	UnaryOperationExpression	! p -> _system		5070169	0					
ANR	5070186	UnaryOperator	!		5070169	0					
ANR	5070187	PtrMemberAccess	p -> _system		5070169	1					
ANR	5070188	Identifier	p		5070169	0					
ANR	5070189	Identifier	_system		5070169	1					
ANR	5070190	UnaryOperationExpression	! p -> _runlib		5070169	1					
ANR	5070191	UnaryOperator	!		5070169	0					
ANR	5070192	PtrMemberAccess	p -> _runlib		5070169	1					
ANR	5070193	Identifier	p		5070169	0					
ANR	5070194	Identifier	_runlib		5070169	1					
ANR	5070195	CompoundStatement		4:49:61:61	5070169	1					
ANR	5070196	ExpressionStatement	"printf ( ""No program, system or runlib rule defined\\n"" )"	756:2:16308:16362	5070169	0	True				
ANR	5070197	CallExpression	"printf ( ""No program, system or runlib rule defined\\n"" )"		5070169	0					
ANR	5070198	Callee	printf		5070169	0					
ANR	5070199	Identifier	printf		5070169	0					
ANR	5070200	ArgumentList	"""No program, system or runlib rule defined\\n"""		5070169	1					
ANR	5070201	Argument	"""No program, system or runlib rule defined\\n"""		5070169	0					
ANR	5070202	PrimaryExpression	"""No program, system or runlib rule defined\\n"""		5070169	0					
ANR	5070203	ReturnStatement	return 1 ;	757:2:16366:16374	5070169	1	True				
ANR	5070204	PrimaryExpression	1		5070169	0					
ANR	5070205	IfStatement	"if ( handle_redirection ( p -> _stdio , true , true , false ) != 0 )"		5070169	2					
ANR	5070206	Condition	"handle_redirection ( p -> _stdio , true , true , false ) != 0"	760:5:16445:16498	5070169	0	True				
ANR	5070207	EqualityExpression	"handle_redirection ( p -> _stdio , true , true , false ) != 0"		5070169	0		!=			
ANR	5070208	CallExpression	"handle_redirection ( p -> _stdio , true , true , false )"		5070169	0					
ANR	5070209	Callee	handle_redirection		5070169	0					
ANR	5070210	Identifier	handle_redirection		5070169	0					
ANR	5070211	ArgumentList	p -> _stdio		5070169	1					
ANR	5070212	Argument	p -> _stdio		5070169	0					
ANR	5070213	PtrMemberAccess	p -> _stdio		5070169	0					
ANR	5070214	Identifier	p		5070169	0					
ANR	5070215	Identifier	_stdio		5070169	1					
ANR	5070216	Argument	true		5070169	1					
ANR	5070217	Identifier	true		5070169	0					
ANR	5070218	Argument	true		5070169	2					
ANR	5070219	Identifier	true		5070169	0					
ANR	5070220	Argument	false		5070169	3					
ANR	5070221	Identifier	false		5070169	0					
ANR	5070222	PrimaryExpression	0		5070169	1					
ANR	5070223	CompoundStatement		9:61:258:258	5070169	1					
ANR	5070224	ReturnStatement	return 1 ;	761:2:16505:16513	5070169	0	True				
ANR	5070225	PrimaryExpression	1		5070169	0					
ANR	5070226	IfStatement	"if ( handle_redirection ( p -> _stdin , true , false , false ) != 0 )"		5070169	3					
ANR	5070227	Condition	"handle_redirection ( p -> _stdin , true , false , false ) != 0"	763:5:16523:16577	5070169	0	True				
ANR	5070228	EqualityExpression	"handle_redirection ( p -> _stdin , true , false , false ) != 0"		5070169	0		!=			
ANR	5070229	CallExpression	"handle_redirection ( p -> _stdin , true , false , false )"		5070169	0					
ANR	5070230	Callee	handle_redirection		5070169	0					
ANR	5070231	Identifier	handle_redirection		5070169	0					
ANR	5070232	ArgumentList	p -> _stdin		5070169	1					
ANR	5070233	Argument	p -> _stdin		5070169	0					
ANR	5070234	PtrMemberAccess	p -> _stdin		5070169	0					
ANR	5070235	Identifier	p		5070169	0					
ANR	5070236	Identifier	_stdin		5070169	1					
ANR	5070237	Argument	true		5070169	1					
ANR	5070238	Identifier	true		5070169	0					
ANR	5070239	Argument	false		5070169	2					
ANR	5070240	Identifier	false		5070169	0					
ANR	5070241	Argument	false		5070169	3					
ANR	5070242	Identifier	false		5070169	0					
ANR	5070243	PrimaryExpression	0		5070169	1					
ANR	5070244	CompoundStatement		12:62:337:337	5070169	1					
ANR	5070245	ReturnStatement	return 1 ;	764:2:16584:16592	5070169	0	True				
ANR	5070246	PrimaryExpression	1		5070169	0					
ANR	5070247	IfStatement	"if ( handle_redirection ( p -> _stdout , false , true , false ) != 0 )"		5070169	4					
ANR	5070248	Condition	"handle_redirection ( p -> _stdout , false , true , false ) != 0"	766:5:16602:16657	5070169	0	True				
ANR	5070249	EqualityExpression	"handle_redirection ( p -> _stdout , false , true , false ) != 0"		5070169	0		!=			
ANR	5070250	CallExpression	"handle_redirection ( p -> _stdout , false , true , false )"		5070169	0					
ANR	5070251	Callee	handle_redirection		5070169	0					
ANR	5070252	Identifier	handle_redirection		5070169	0					
ANR	5070253	ArgumentList	p -> _stdout		5070169	1					
ANR	5070254	Argument	p -> _stdout		5070169	0					
ANR	5070255	PtrMemberAccess	p -> _stdout		5070169	0					
ANR	5070256	Identifier	p		5070169	0					
ANR	5070257	Identifier	_stdout		5070169	1					
ANR	5070258	Argument	false		5070169	1					
ANR	5070259	Identifier	false		5070169	0					
ANR	5070260	Argument	true		5070169	2					
ANR	5070261	Identifier	true		5070169	0					
ANR	5070262	Argument	false		5070169	3					
ANR	5070263	Identifier	false		5070169	0					
ANR	5070264	PrimaryExpression	0		5070169	1					
ANR	5070265	CompoundStatement		15:63:417:417	5070169	1					
ANR	5070266	ReturnStatement	return 1 ;	767:2:16664:16672	5070169	0	True				
ANR	5070267	PrimaryExpression	1		5070169	0					
ANR	5070268	IfStatement	"if ( handle_redirection ( p -> _stderr , false , false , true ) != 0 )"		5070169	5					
ANR	5070269	Condition	"handle_redirection ( p -> _stderr , false , false , true ) != 0"	769:5:16682:16737	5070169	0	True				
ANR	5070270	EqualityExpression	"handle_redirection ( p -> _stderr , false , false , true ) != 0"		5070169	0		!=			
ANR	5070271	CallExpression	"handle_redirection ( p -> _stderr , false , false , true )"		5070169	0					
ANR	5070272	Callee	handle_redirection		5070169	0					
ANR	5070273	Identifier	handle_redirection		5070169	0					
ANR	5070274	ArgumentList	p -> _stderr		5070169	1					
ANR	5070275	Argument	p -> _stderr		5070169	0					
ANR	5070276	PtrMemberAccess	p -> _stderr		5070169	0					
ANR	5070277	Identifier	p		5070169	0					
ANR	5070278	Identifier	_stderr		5070169	1					
ANR	5070279	Argument	false		5070169	1					
ANR	5070280	Identifier	false		5070169	0					
ANR	5070281	Argument	false		5070169	2					
ANR	5070282	Identifier	false		5070169	0					
ANR	5070283	Argument	true		5070169	3					
ANR	5070284	Identifier	true		5070169	0					
ANR	5070285	PrimaryExpression	0		5070169	1					
ANR	5070286	CompoundStatement		18:63:497:497	5070169	1					
ANR	5070287	ReturnStatement	return 1 ;	770:2:16744:16752	5070169	0	True				
ANR	5070288	PrimaryExpression	1		5070169	0					
ANR	5070289	IfStatement	if ( p -> _aslr != - 1 )		5070169	6					
ANR	5070290	Condition	p -> _aslr != - 1	772:5:16762:16775	5070169	0	True				
ANR	5070291	EqualityExpression	p -> _aslr != - 1		5070169	0		!=			
ANR	5070292	PtrMemberAccess	p -> _aslr		5070169	0					
ANR	5070293	Identifier	p		5070169	0					
ANR	5070294	Identifier	_aslr		5070169	1					
ANR	5070295	UnaryOperationExpression	- 1		5070169	1					
ANR	5070296	UnaryOperator	-		5070169	0					
ANR	5070297	PrimaryExpression	1		5070169	1					
ANR	5070298	CompoundStatement		21:21:535:535	5070169	1					
ANR	5070299	ExpressionStatement	"setASLR ( p , p -> _aslr )"	773:2:16782:16803	5070169	0	True				
ANR	5070300	CallExpression	"setASLR ( p , p -> _aslr )"		5070169	0					
ANR	5070301	Callee	setASLR		5070169	0					
ANR	5070302	Identifier	setASLR		5070169	0					
ANR	5070303	ArgumentList	p		5070169	1					
ANR	5070304	Argument	p		5070169	0					
ANR	5070305	Identifier	p		5070169	0					
ANR	5070306	Argument	p -> _aslr		5070169	1					
ANR	5070307	PtrMemberAccess	p -> _aslr		5070169	0					
ANR	5070308	Identifier	p		5070169	0					
ANR	5070309	Identifier	_aslr		5070169	1					
ANR	5070310	ExpressionStatement	"set_limit ( p -> _docore , RLIMIT_CORE , RLIM_INFINITY )"	776:1:16822:16872	5070169	7	True				
ANR	5070311	CallExpression	"set_limit ( p -> _docore , RLIMIT_CORE , RLIM_INFINITY )"		5070169	0					
ANR	5070312	Callee	set_limit		5070169	0					
ANR	5070313	Identifier	set_limit		5070169	0					
ANR	5070314	ArgumentList	p -> _docore		5070169	1					
ANR	5070315	Argument	p -> _docore		5070169	0					
ANR	5070316	PtrMemberAccess	p -> _docore		5070169	0					
ANR	5070317	Identifier	p		5070169	0					
ANR	5070318	Identifier	_docore		5070169	1					
ANR	5070319	Argument	RLIMIT_CORE		5070169	1					
ANR	5070320	Identifier	RLIMIT_CORE		5070169	0					
ANR	5070321	Argument	RLIM_INFINITY		5070169	2					
ANR	5070322	Identifier	RLIM_INFINITY		5070169	0					
ANR	5070323	IfStatement	if ( p -> _maxfd )		5070169	8					
ANR	5070324	Condition	p -> _maxfd	777:5:16879:16887	5070169	0	True				
ANR	5070325	PtrMemberAccess	p -> _maxfd		5070169	0					
ANR	5070326	Identifier	p		5070169	0					
ANR	5070327	Identifier	_maxfd		5070169	1					
ANR	5070328	CompoundStatement		26:16:647:647	5070169	1					
ANR	5070329	ExpressionStatement	"set_limit ( p -> _maxfd , RLIMIT_NOFILE , p -> _maxfd )"	778:2:16894:16941	5070169	0	True				
ANR	5070330	CallExpression	"set_limit ( p -> _maxfd , RLIMIT_NOFILE , p -> _maxfd )"		5070169	0					
ANR	5070331	Callee	set_limit		5070169	0					
ANR	5070332	Identifier	set_limit		5070169	0					
ANR	5070333	ArgumentList	p -> _maxfd		5070169	1					
ANR	5070334	Argument	p -> _maxfd		5070169	0					
ANR	5070335	PtrMemberAccess	p -> _maxfd		5070169	0					
ANR	5070336	Identifier	p		5070169	0					
ANR	5070337	Identifier	_maxfd		5070169	1					
ANR	5070338	Argument	RLIMIT_NOFILE		5070169	1					
ANR	5070339	Identifier	RLIMIT_NOFILE		5070169	0					
ANR	5070340	Argument	p -> _maxfd		5070169	2					
ANR	5070341	PtrMemberAccess	p -> _maxfd		5070169	0					
ANR	5070342	Identifier	p		5070169	0					
ANR	5070343	Identifier	_maxfd		5070169	1					
ANR	5070344	IfStatement	if ( p -> _maxproc )		5070169	9					
ANR	5070345	Condition	p -> _maxproc	781:5:16971:16981	5070169	0	True				
ANR	5070346	PtrMemberAccess	p -> _maxproc		5070169	0					
ANR	5070347	Identifier	p		5070169	0					
ANR	5070348	Identifier	_maxproc		5070169	1					
ANR	5070349	CompoundStatement		30:18:741:741	5070169	1					
ANR	5070350	ExpressionStatement	"set_limit ( p -> _maxproc , RLIMIT_NPROC , p -> _maxproc )"	782:2:16988:17038	5070169	0	True				
ANR	5070351	CallExpression	"set_limit ( p -> _maxproc , RLIMIT_NPROC , p -> _maxproc )"		5070169	0					
ANR	5070352	Callee	set_limit		5070169	0					
ANR	5070353	Identifier	set_limit		5070169	0					
ANR	5070354	ArgumentList	p -> _maxproc		5070169	1					
ANR	5070355	Argument	p -> _maxproc		5070169	0					
ANR	5070356	PtrMemberAccess	p -> _maxproc		5070169	0					
ANR	5070357	Identifier	p		5070169	0					
ANR	5070358	Identifier	_maxproc		5070169	1					
ANR	5070359	Argument	RLIMIT_NPROC		5070169	1					
ANR	5070360	Identifier	RLIMIT_NPROC		5070169	0					
ANR	5070361	Argument	p -> _maxproc		5070169	2					
ANR	5070362	PtrMemberAccess	p -> _maxproc		5070169	0					
ANR	5070363	Identifier	p		5070169	0					
ANR	5070364	Identifier	_maxproc		5070169	1					
ANR	5070365	IfStatement	if ( p -> _maxstack )		5070169	10					
ANR	5070366	Condition	p -> _maxstack	785:5:17055:17066	5070169	0	True				
ANR	5070367	PtrMemberAccess	p -> _maxstack		5070169	0					
ANR	5070368	Identifier	p		5070169	0					
ANR	5070369	Identifier	_maxstack		5070169	1					
ANR	5070370	CompoundStatement		34:19:826:826	5070169	1					
ANR	5070371	ExpressionStatement	"set_limit ( p -> _maxstack , RLIMIT_STACK , p -> _maxstack )"	786:2:17073:17125	5070169	0	True				
ANR	5070372	CallExpression	"set_limit ( p -> _maxstack , RLIMIT_STACK , p -> _maxstack )"		5070169	0					
ANR	5070373	Callee	set_limit		5070169	0					
ANR	5070374	Identifier	set_limit		5070169	0					
ANR	5070375	ArgumentList	p -> _maxstack		5070169	1					
ANR	5070376	Argument	p -> _maxstack		5070169	0					
ANR	5070377	PtrMemberAccess	p -> _maxstack		5070169	0					
ANR	5070378	Identifier	p		5070169	0					
ANR	5070379	Identifier	_maxstack		5070169	1					
ANR	5070380	Argument	RLIMIT_STACK		5070169	1					
ANR	5070381	Identifier	RLIMIT_STACK		5070169	0					
ANR	5070382	Argument	p -> _maxstack		5070169	2					
ANR	5070383	PtrMemberAccess	p -> _maxstack		5070169	0					
ANR	5070384	Identifier	p		5070169	0					
ANR	5070385	Identifier	_maxstack		5070169	1					
ANR	5070386	IfStatement	if ( p -> _connect )		5070169	11					
ANR	5070387	Condition	p -> _connect	792:5:17278:17288	5070169	0	True				
ANR	5070388	PtrMemberAccess	p -> _connect		5070169	0					
ANR	5070389	Identifier	p		5070169	0					
ANR	5070390	Identifier	_connect		5070169	1					
ANR	5070391	CompoundStatement		42:2:1052:1087	5070169	1					
ANR	5070392	IdentifierDeclStatement	"char * q = strchr ( p -> _connect , ':' ) ;"	793:2:17295:17330	5070169	0	True				
ANR	5070393	IdentifierDecl	"* q = strchr ( p -> _connect , ':' )"		5070169	0					
ANR	5070394	IdentifierDeclType	char *		5070169	0					
ANR	5070395	Identifier	q		5070169	1					
ANR	5070396	AssignmentExpression	"* q = strchr ( p -> _connect , ':' )"		5070169	2		=			
ANR	5070397	Identifier	q		5070169	0					
ANR	5070398	CallExpression	"strchr ( p -> _connect , ':' )"		5070169	1					
ANR	5070399	Callee	strchr		5070169	0					
ANR	5070400	Identifier	strchr		5070169	0					
ANR	5070401	ArgumentList	p -> _connect		5070169	1					
ANR	5070402	Argument	p -> _connect		5070169	0					
ANR	5070403	PtrMemberAccess	p -> _connect		5070169	0					
ANR	5070404	Identifier	p		5070169	0					
ANR	5070405	Identifier	_connect		5070169	1					
ANR	5070406	Argument	':'		5070169	1					
ANR	5070407	PrimaryExpression	':'		5070169	0					
ANR	5070408	IfStatement	if ( q )		5070169	1					
ANR	5070409	Condition	q	794:6:17338:17338	5070169	0	True				
ANR	5070410	Identifier	q		5070169	0					
ANR	5070411	CompoundStatement		44:3:1103:1133	5070169	1					
ANR	5070412	IdentifierDeclStatement	RSocket * fd = r_socket_new ( 0 ) ;	795:3:17346:17376	5070169	0	True				
ANR	5070413	IdentifierDecl	* fd = r_socket_new ( 0 )		5070169	0					
ANR	5070414	IdentifierDeclType	RSocket *		5070169	0					
ANR	5070415	Identifier	fd		5070169	1					
ANR	5070416	AssignmentExpression	* fd = r_socket_new ( 0 )		5070169	2		=			
ANR	5070417	Identifier	fd		5070169	0					
ANR	5070418	CallExpression	r_socket_new ( 0 )		5070169	1					
ANR	5070419	Callee	r_socket_new		5070169	0					
ANR	5070420	Identifier	r_socket_new		5070169	0					
ANR	5070421	ArgumentList	0		5070169	1					
ANR	5070422	Argument	0		5070169	0					
ANR	5070423	PrimaryExpression	0		5070169	0					
ANR	5070424	ExpressionStatement	* q = 0	796:3:17381:17387	5070169	1	True				
ANR	5070425	AssignmentExpression	* q = 0		5070169	0		=			
ANR	5070426	UnaryOperationExpression	* q		5070169	0					
ANR	5070427	UnaryOperator	*		5070169	0					
ANR	5070428	Identifier	q		5070169	1					
ANR	5070429	PrimaryExpression	0		5070169	1					
ANR	5070430	IfStatement	"if ( ! r_socket_connect_tcp ( fd , p -> _connect , q + 1 , 30 ) )"		5070169	2					
ANR	5070431	Condition	"! r_socket_connect_tcp ( fd , p -> _connect , q + 1 , 30 )"	797:7:17396:17443	5070169	0	True				
ANR	5070432	UnaryOperationExpression	"! r_socket_connect_tcp ( fd , p -> _connect , q + 1 , 30 )"		5070169	0					
ANR	5070433	UnaryOperator	!		5070169	0					
ANR	5070434	CallExpression	"r_socket_connect_tcp ( fd , p -> _connect , q + 1 , 30 )"		5070169	1					
ANR	5070435	Callee	r_socket_connect_tcp		5070169	0					
ANR	5070436	Identifier	r_socket_connect_tcp		5070169	0					
ANR	5070437	ArgumentList	fd		5070169	1					
ANR	5070438	Argument	fd		5070169	0					
ANR	5070439	Identifier	fd		5070169	0					
ANR	5070440	Argument	p -> _connect		5070169	1					
ANR	5070441	PtrMemberAccess	p -> _connect		5070169	0					
ANR	5070442	Identifier	p		5070169	0					
ANR	5070443	Identifier	_connect		5070169	1					
ANR	5070444	Argument	q + 1		5070169	2					
ANR	5070445	AdditiveExpression	q + 1		5070169	0		+			
ANR	5070446	Identifier	q		5070169	0					
ANR	5070447	PrimaryExpression	1		5070169	1					
ANR	5070448	Argument	30		5070169	3					
ANR	5070449	PrimaryExpression	30		5070169	0					
ANR	5070450	CompoundStatement		46:57:1203:1203	5070169	1					
ANR	5070451	ExpressionStatement	"eprintf ( ""Cannot connect\\n"" )"	798:4:17452:17480	5070169	0	True				
ANR	5070452	CallExpression	"eprintf ( ""Cannot connect\\n"" )"		5070169	0					
ANR	5070453	Callee	eprintf		5070169	0					
ANR	5070454	Identifier	eprintf		5070169	0					
ANR	5070455	ArgumentList	"""Cannot connect\\n"""		5070169	1					
ANR	5070456	Argument	"""Cannot connect\\n"""		5070169	0					
ANR	5070457	PrimaryExpression	"""Cannot connect\\n"""		5070169	0					
ANR	5070458	ReturnStatement	return 1 ;	799:4:17486:17494	5070169	1	True				
ANR	5070459	PrimaryExpression	1		5070169	0					
ANR	5070460	IfStatement	if ( p -> _pty )		5070169	3					
ANR	5070461	Condition	p -> _pty	801:7:17508:17514	5070169	0	True				
ANR	5070462	PtrMemberAccess	p -> _pty		5070169	0					
ANR	5070463	Identifier	p		5070169	0					
ANR	5070464	Identifier	_pty		5070169	1					
ANR	5070465	CompoundStatement		50:16:1274:1274	5070169	1					
ANR	5070466	IfStatement	if ( redirect_socket_to_pty ( fd ) != 0 )		5070169	0					
ANR	5070467	Condition	redirect_socket_to_pty ( fd ) != 0	802:8:17527:17558	5070169	0	True				
ANR	5070468	EqualityExpression	redirect_socket_to_pty ( fd ) != 0		5070169	0		!=			
ANR	5070469	CallExpression	redirect_socket_to_pty ( fd )		5070169	0					
ANR	5070470	Callee	redirect_socket_to_pty		5070169	0					
ANR	5070471	Identifier	redirect_socket_to_pty		5070169	0					
ANR	5070472	ArgumentList	fd		5070169	1					
ANR	5070473	Argument	fd		5070169	0					
ANR	5070474	Identifier	fd		5070169	0					
ANR	5070475	PrimaryExpression	0		5070169	1					
ANR	5070476	CompoundStatement		51:42:1318:1318	5070169	1					
ANR	5070477	ExpressionStatement	"eprintf ( ""socket redirection failed\\n"" )"	803:5:17568:17607	5070169	0	True				
ANR	5070478	CallExpression	"eprintf ( ""socket redirection failed\\n"" )"		5070169	0					
ANR	5070479	Callee	eprintf		5070169	0					
ANR	5070480	Identifier	eprintf		5070169	0					
ANR	5070481	ArgumentList	"""socket redirection failed\\n"""		5070169	1					
ANR	5070482	Argument	"""socket redirection failed\\n"""		5070169	0					
ANR	5070483	PrimaryExpression	"""socket redirection failed\\n"""		5070169	0					
ANR	5070484	ExpressionStatement	r_socket_free ( fd )	804:5:17614:17632	5070169	1	True				
ANR	5070485	CallExpression	r_socket_free ( fd )		5070169	0					
ANR	5070486	Callee	r_socket_free		5070169	0					
ANR	5070487	Identifier	r_socket_free		5070169	0					
ANR	5070488	ArgumentList	fd		5070169	1					
ANR	5070489	Argument	fd		5070169	0					
ANR	5070490	Identifier	fd		5070169	0					
ANR	5070491	ReturnStatement	return 1 ;	805:5:17639:17647	5070169	2	True				
ANR	5070492	PrimaryExpression	1		5070169	0					
ANR	5070493	ElseStatement	else		5070169	0					
ANR	5070494	CompoundStatement		56:10:1422:1422	5070169	0					
ANR	5070495	ExpressionStatement	redirect_socket_to_stdio ( fd )	808:4:17671:17700	5070169	0	True				
ANR	5070496	CallExpression	redirect_socket_to_stdio ( fd )		5070169	0					
ANR	5070497	Callee	redirect_socket_to_stdio		5070169	0					
ANR	5070498	Identifier	redirect_socket_to_stdio		5070169	0					
ANR	5070499	ArgumentList	fd		5070169	1					
ANR	5070500	Argument	fd		5070169	0					
ANR	5070501	Identifier	fd		5070169	0					
ANR	5070502	ElseStatement	else		5070169	0					
ANR	5070503	CompoundStatement		59:9:1473:1473	5070169	0					
ANR	5070504	ExpressionStatement	"eprintf ( ""Invalid format for connect. missing ':'\\n"" )"	811:3:17721:17774	5070169	0	True				
ANR	5070505	CallExpression	"eprintf ( ""Invalid format for connect. missing ':'\\n"" )"		5070169	0					
ANR	5070506	Callee	eprintf		5070169	0					
ANR	5070507	Identifier	eprintf		5070169	0					
ANR	5070508	ArgumentList	"""Invalid format for connect. missing ':'\\n"""		5070169	1					
ANR	5070509	Argument	"""Invalid format for connect. missing ':'\\n"""		5070169	0					
ANR	5070510	PrimaryExpression	"""Invalid format for connect. missing ':'\\n"""		5070169	0					
ANR	5070511	ReturnStatement	return 1 ;	812:3:17779:17787	5070169	1	True				
ANR	5070512	PrimaryExpression	1		5070169	0					
ANR	5070513	IfStatement	if ( p -> _listen )		5070169	12					
ANR	5070514	Condition	p -> _listen	815:5:17801:17810	5070169	0	True				
ANR	5070515	PtrMemberAccess	p -> _listen		5070169	0					
ANR	5070516	Identifier	p		5070169	0					
ANR	5070517	Identifier	_listen		5070169	1					
ANR	5070518	CompoundStatement		66:2:1616:1637	5070169	1					
ANR	5070519	IdentifierDeclStatement	"RSocket * child , * fd = r_socket_new ( 0 ) ;"	816:2:17817:17855	5070169	0	True				
ANR	5070520	IdentifierDecl	* child		5070169	0					
ANR	5070521	IdentifierDeclType	RSocket *		5070169	0					
ANR	5070522	Identifier	child		5070169	1					
ANR	5070523	IdentifierDecl	* fd = r_socket_new ( 0 )		5070169	1					
ANR	5070524	IdentifierDeclType	RSocket *		5070169	0					
ANR	5070525	Identifier	fd		5070169	1					
ANR	5070526	AssignmentExpression	* fd = r_socket_new ( 0 )		5070169	2		=			
ANR	5070527	Identifier	fd		5070169	0					
ANR	5070528	CallExpression	r_socket_new ( 0 )		5070169	1					
ANR	5070529	Callee	r_socket_new		5070169	0					
ANR	5070530	Identifier	r_socket_new		5070169	0					
ANR	5070531	ArgumentList	0		5070169	1					
ANR	5070532	Argument	0		5070169	0					
ANR	5070533	PrimaryExpression	0		5070169	0					
ANR	5070534	IdentifierDeclStatement	bool is_child = false ;	817:2:17859:17880	5070169	1	True				
ANR	5070535	IdentifierDecl	is_child = false		5070169	0					
ANR	5070536	IdentifierDeclType	bool		5070169	0					
ANR	5070537	Identifier	is_child		5070169	1					
ANR	5070538	AssignmentExpression	is_child = false		5070169	2		=			
ANR	5070539	Identifier	false		5070169	0					
ANR	5070540	Identifier	false		5070169	1					
ANR	5070541	IfStatement	"if ( ! r_socket_listen ( fd , p -> _listen , NULL ) )"		5070169	2					
ANR	5070542	Condition	"! r_socket_listen ( fd , p -> _listen , NULL )"	818:6:17888:17926	5070169	0	True				
ANR	5070543	UnaryOperationExpression	"! r_socket_listen ( fd , p -> _listen , NULL )"		5070169	0					
ANR	5070544	UnaryOperator	!		5070169	0					
ANR	5070545	CallExpression	"r_socket_listen ( fd , p -> _listen , NULL )"		5070169	1					
ANR	5070546	Callee	r_socket_listen		5070169	0					
ANR	5070547	Identifier	r_socket_listen		5070169	0					
ANR	5070548	ArgumentList	fd		5070169	1					
ANR	5070549	Argument	fd		5070169	0					
ANR	5070550	Identifier	fd		5070169	0					
ANR	5070551	Argument	p -> _listen		5070169	1					
ANR	5070552	PtrMemberAccess	p -> _listen		5070169	0					
ANR	5070553	Identifier	p		5070169	0					
ANR	5070554	Identifier	_listen		5070169	1					
ANR	5070555	Argument	NULL		5070169	2					
ANR	5070556	Identifier	NULL		5070169	0					
ANR	5070557	CompoundStatement		67:47:1686:1686	5070169	1					
ANR	5070558	ExpressionStatement	"eprintf ( ""rarun2: cannot listen\\n"" )"	819:3:17934:17969	5070169	0	True				
ANR	5070559	CallExpression	"eprintf ( ""rarun2: cannot listen\\n"" )"		5070169	0					
ANR	5070560	Callee	eprintf		5070169	0					
ANR	5070561	Identifier	eprintf		5070169	0					
ANR	5070562	ArgumentList	"""rarun2: cannot listen\\n"""		5070169	1					
ANR	5070563	Argument	"""rarun2: cannot listen\\n"""		5070169	0					
ANR	5070564	PrimaryExpression	"""rarun2: cannot listen\\n"""		5070169	0					
ANR	5070565	ExpressionStatement	r_socket_free ( fd )	820:3:17974:17992	5070169	1	True				
ANR	5070566	CallExpression	r_socket_free ( fd )		5070169	0					
ANR	5070567	Callee	r_socket_free		5070169	0					
ANR	5070568	Identifier	r_socket_free		5070169	0					
ANR	5070569	ArgumentList	fd		5070169	1					
ANR	5070570	Argument	fd		5070169	0					
ANR	5070571	Identifier	fd		5070169	0					
ANR	5070572	ReturnStatement	return 1 ;	821:3:17997:18005	5070169	2	True				
ANR	5070573	PrimaryExpression	1		5070169	0					
ANR	5070574	WhileStatement	while ( true )		5070169	3					
ANR	5070575	Condition	true	823:9:18020:18023	5070169	0	True				
ANR	5070576	Identifier	true		5070169	0					
ANR	5070577	CompoundStatement		72:15:1783:1783	5070169	1					
ANR	5070578	ExpressionStatement	child = r_socket_accept ( fd )	824:3:18031:18059	5070169	0	True				
ANR	5070579	AssignmentExpression	child = r_socket_accept ( fd )		5070169	0		=			
ANR	5070580	Identifier	child		5070169	0					
ANR	5070581	CallExpression	r_socket_accept ( fd )		5070169	1					
ANR	5070582	Callee	r_socket_accept		5070169	0					
ANR	5070583	Identifier	r_socket_accept		5070169	0					
ANR	5070584	ArgumentList	fd		5070169	1					
ANR	5070585	Argument	fd		5070169	0					
ANR	5070586	Identifier	fd		5070169	0					
ANR	5070587	IfStatement	if ( child )		5070169	1					
ANR	5070588	Condition	child	825:7:18068:18072	5070169	0	True				
ANR	5070589	Identifier	child		5070169	0					
ANR	5070590	CompoundStatement		74:14:1832:1832	5070169	1					
ANR	5070591	ExpressionStatement	is_child = true	826:4:18081:18096	5070169	0	True				
ANR	5070592	AssignmentExpression	is_child = true		5070169	0		=			
ANR	5070593	Identifier	is_child		5070169	0					
ANR	5070594	Identifier	true		5070169	1					
ANR	5070595	IfStatement	if ( p -> _dofork && ! p -> _dodebug )		5070169	1					
ANR	5070596	Condition	p -> _dofork && ! p -> _dodebug	828:8:18107:18132	5070169	0	True				
ANR	5070597	AndExpression	p -> _dofork && ! p -> _dodebug		5070169	0		&&			
ANR	5070598	PtrMemberAccess	p -> _dofork		5070169	0					
ANR	5070599	Identifier	p		5070169	0					
ANR	5070600	Identifier	_dofork		5070169	1					
ANR	5070601	UnaryOperationExpression	! p -> _dodebug		5070169	1					
ANR	5070602	UnaryOperator	!		5070169	0					
ANR	5070603	PtrMemberAccess	p -> _dodebug		5070169	1					
ANR	5070604	Identifier	p		5070169	0					
ANR	5070605	Identifier	_dodebug		5070169	1					
ANR	5070606	CompoundStatement		79:5:1915:1944	5070169	1					
ANR	5070607	IdentifierDeclStatement	int child_pid = r_sys_fork ( ) ;	830:5:18158:18187	5070169	0	True				
ANR	5070608	IdentifierDecl	child_pid = r_sys_fork ( )		5070169	0					
ANR	5070609	IdentifierDeclType	int		5070169	0					
ANR	5070610	Identifier	child_pid		5070169	1					
ANR	5070611	AssignmentExpression	child_pid = r_sys_fork ( )		5070169	2		=			
ANR	5070612	Identifier	child_pid		5070169	0					
ANR	5070613	CallExpression	r_sys_fork ( )		5070169	1					
ANR	5070614	Callee	r_sys_fork		5070169	0					
ANR	5070615	Identifier	r_sys_fork		5070169	0					
ANR	5070616	ArgumentList			5070169	1					
ANR	5070617	IfStatement	if ( child_pid == - 1 )		5070169	1					
ANR	5070618	Condition	child_pid == - 1	834:9:18249:18263	5070169	0	True				
ANR	5070619	EqualityExpression	child_pid == - 1		5070169	0		==			
ANR	5070620	Identifier	child_pid		5070169	0					
ANR	5070621	UnaryOperationExpression	- 1		5070169	1					
ANR	5070622	UnaryOperator	-		5070169	0					
ANR	5070623	PrimaryExpression	1		5070169	1					
ANR	5070624	CompoundStatement		83:26:2023:2023	5070169	1					
ANR	5070625	ExpressionStatement	"eprintf ( ""rarun2: cannot fork\\n"" )"	835:6:18274:18306	5070169	0	True				
ANR	5070626	CallExpression	"eprintf ( ""rarun2: cannot fork\\n"" )"		5070169	0					
ANR	5070627	Callee	eprintf		5070169	0					
ANR	5070628	Identifier	eprintf		5070169	0					
ANR	5070629	ArgumentList	"""rarun2: cannot fork\\n"""		5070169	1					
ANR	5070630	Argument	"""rarun2: cannot fork\\n"""		5070169	0					
ANR	5070631	PrimaryExpression	"""rarun2: cannot fork\\n"""		5070169	0					
ANR	5070632	ExpressionStatement	r_socket_free ( child )	836:6:18314:18335	5070169	1	True				
ANR	5070633	CallExpression	r_socket_free ( child )		5070169	0					
ANR	5070634	Callee	r_socket_free		5070169	0					
ANR	5070635	Identifier	r_socket_free		5070169	0					
ANR	5070636	ArgumentList	child		5070169	1					
ANR	5070637	Argument	child		5070169	0					
ANR	5070638	Identifier	child		5070169	0					
ANR	5070639	ExpressionStatement	r_socket_free ( fd )	837:6:18343:18361	5070169	2	True				
ANR	5070640	CallExpression	r_socket_free ( fd )		5070169	0					
ANR	5070641	Callee	r_socket_free		5070169	0					
ANR	5070642	Identifier	r_socket_free		5070169	0					
ANR	5070643	ArgumentList	fd		5070169	1					
ANR	5070644	Argument	fd		5070169	0					
ANR	5070645	Identifier	fd		5070169	0					
ANR	5070646	ReturnStatement	return 1 ;	838:6:18369:18377	5070169	3	True				
ANR	5070647	PrimaryExpression	1		5070169	0					
ANR	5070648	ElseStatement	else		5070169	0					
ANR	5070649	IfStatement	if ( child_pid != 0 )		5070169	0					
ANR	5070650	Condition	child_pid != 0	839:16:18395:18408	5070169	0	True				
ANR	5070651	EqualityExpression	child_pid != 0		5070169	0		!=			
ANR	5070652	Identifier	child_pid		5070169	0					
ANR	5070653	PrimaryExpression	0		5070169	1					
ANR	5070654	CompoundStatement		88:31:2167:2167	5070169	1					
ANR	5070655	ExpressionStatement	is_child = false	841:6:18439:18455	5070169	0	True				
ANR	5070656	AssignmentExpression	is_child = false		5070169	0		=			
ANR	5070657	Identifier	is_child		5070169	0					
ANR	5070658	Identifier	false		5070169	1					
ANR	5070659	IfStatement	if ( is_child )		5070169	2					
ANR	5070660	Condition	is_child	845:8:18479:18486	5070169	0	True				
ANR	5070661	Identifier	is_child		5070169	0					
ANR	5070662	CompoundStatement		94:18:2246:2246	5070169	1					
ANR	5070663	ExpressionStatement	r_socket_close_fd ( fd )	846:5:18496:18518	5070169	0	True				
ANR	5070664	CallExpression	r_socket_close_fd ( fd )		5070169	0					
ANR	5070665	Callee	r_socket_close_fd		5070169	0					
ANR	5070666	Identifier	r_socket_close_fd		5070169	0					
ANR	5070667	ArgumentList	fd		5070169	1					
ANR	5070668	Argument	fd		5070169	0					
ANR	5070669	Identifier	fd		5070169	0					
ANR	5070670	ExpressionStatement	"eprintf ( ""connected\\n"" )"	847:5:18525:18548	5070169	1	True				
ANR	5070671	CallExpression	"eprintf ( ""connected\\n"" )"		5070169	0					
ANR	5070672	Callee	eprintf		5070169	0					
ANR	5070673	Identifier	eprintf		5070169	0					
ANR	5070674	ArgumentList	"""connected\\n"""		5070169	1					
ANR	5070675	Argument	"""connected\\n"""		5070169	0					
ANR	5070676	PrimaryExpression	"""connected\\n"""		5070169	0					
ANR	5070677	IfStatement	if ( p -> _pty )		5070169	2					
ANR	5070678	Condition	p -> _pty	848:9:18559:18565	5070169	0	True				
ANR	5070679	PtrMemberAccess	p -> _pty		5070169	0					
ANR	5070680	Identifier	p		5070169	0					
ANR	5070681	Identifier	_pty		5070169	1					
ANR	5070682	CompoundStatement		97:18:2325:2325	5070169	1					
ANR	5070683	IfStatement	if ( redirect_socket_to_pty ( child ) != 0 )		5070169	0					
ANR	5070684	Condition	redirect_socket_to_pty ( child ) != 0	849:10:18580:18614	5070169	0	True				
ANR	5070685	EqualityExpression	redirect_socket_to_pty ( child ) != 0		5070169	0		!=			
ANR	5070686	CallExpression	redirect_socket_to_pty ( child )		5070169	0					
ANR	5070687	Callee	redirect_socket_to_pty		5070169	0					
ANR	5070688	Identifier	redirect_socket_to_pty		5070169	0					
ANR	5070689	ArgumentList	child		5070169	1					
ANR	5070690	Argument	child		5070169	0					
ANR	5070691	Identifier	child		5070169	0					
ANR	5070692	PrimaryExpression	0		5070169	1					
ANR	5070693	CompoundStatement		98:47:2374:2374	5070169	1					
ANR	5070694	ExpressionStatement	"eprintf ( ""socket redirection failed\\n"" )"	850:7:18626:18665	5070169	0	True				
ANR	5070695	CallExpression	"eprintf ( ""socket redirection failed\\n"" )"		5070169	0					
ANR	5070696	Callee	eprintf		5070169	0					
ANR	5070697	Identifier	eprintf		5070169	0					
ANR	5070698	ArgumentList	"""socket redirection failed\\n"""		5070169	1					
ANR	5070699	Argument	"""socket redirection failed\\n"""		5070169	0					
ANR	5070700	PrimaryExpression	"""socket redirection failed\\n"""		5070169	0					
ANR	5070701	ExpressionStatement	r_socket_free ( child )	851:7:18674:18695	5070169	1	True				
ANR	5070702	CallExpression	r_socket_free ( child )		5070169	0					
ANR	5070703	Callee	r_socket_free		5070169	0					
ANR	5070704	Identifier	r_socket_free		5070169	0					
ANR	5070705	ArgumentList	child		5070169	1					
ANR	5070706	Argument	child		5070169	0					
ANR	5070707	Identifier	child		5070169	0					
ANR	5070708	ExpressionStatement	r_socket_free ( fd )	852:7:18704:18722	5070169	2	True				
ANR	5070709	CallExpression	r_socket_free ( fd )		5070169	0					
ANR	5070710	Callee	r_socket_free		5070169	0					
ANR	5070711	Identifier	r_socket_free		5070169	0					
ANR	5070712	ArgumentList	fd		5070169	1					
ANR	5070713	Argument	fd		5070169	0					
ANR	5070714	Identifier	fd		5070169	0					
ANR	5070715	ReturnStatement	return 1 ;	853:7:18731:18739	5070169	3	True				
ANR	5070716	PrimaryExpression	1		5070169	0					
ANR	5070717	ElseStatement	else		5070169	0					
ANR	5070718	CompoundStatement		104:12:2518:2518	5070169	0					
ANR	5070719	ExpressionStatement	redirect_socket_to_stdio ( child )	856:6:18769:18801	5070169	0	True				
ANR	5070720	CallExpression	redirect_socket_to_stdio ( child )		5070169	0					
ANR	5070721	Callee	redirect_socket_to_stdio		5070169	0					
ANR	5070722	Identifier	redirect_socket_to_stdio		5070169	0					
ANR	5070723	ArgumentList	child		5070169	1					
ANR	5070724	Argument	child		5070169	0					
ANR	5070725	Identifier	child		5070169	0					
ANR	5070726	BreakStatement	break ;	858:5:18815:18820	5070169	3	True				
ANR	5070727	ElseStatement	else		5070169	0					
ANR	5070728	CompoundStatement		108:11:2590:2590	5070169	0					
ANR	5070729	ExpressionStatement	r_socket_close_fd ( child )	860:5:18840:18865	5070169	0	True				
ANR	5070730	CallExpression	r_socket_close_fd ( child )		5070169	0					
ANR	5070731	Callee	r_socket_close_fd		5070169	0					
ANR	5070732	Identifier	r_socket_close_fd		5070169	0					
ANR	5070733	ArgumentList	child		5070169	1					
ANR	5070734	Argument	child		5070169	0					
ANR	5070735	Identifier	child		5070169	0					
ANR	5070736	IfStatement	if ( ! is_child )		5070169	4					
ANR	5070737	Condition	! is_child	864:6:18888:18896	5070169	0	True				
ANR	5070738	UnaryOperationExpression	! is_child		5070169	0					
ANR	5070739	UnaryOperator	!		5070169	0					
ANR	5070740	Identifier	is_child		5070169	1					
ANR	5070741	CompoundStatement		113:17:2656:2656	5070169	1					
ANR	5070742	ExpressionStatement	r_socket_free ( child )	865:3:18904:18925	5070169	0	True				
ANR	5070743	CallExpression	r_socket_free ( child )		5070169	0					
ANR	5070744	Callee	r_socket_free		5070169	0					
ANR	5070745	Identifier	r_socket_free		5070169	0					
ANR	5070746	ArgumentList	child		5070169	1					
ANR	5070747	Argument	child		5070169	0					
ANR	5070748	Identifier	child		5070169	0					
ANR	5070749	ExpressionStatement	r_socket_free ( fd )	867:2:18933:18951	5070169	5	True				
ANR	5070750	CallExpression	r_socket_free ( fd )		5070169	0					
ANR	5070751	Callee	r_socket_free		5070169	0					
ANR	5070752	Identifier	r_socket_free		5070169	0					
ANR	5070753	ArgumentList	fd		5070169	1					
ANR	5070754	Argument	fd		5070169	0					
ANR	5070755	Identifier	fd		5070169	0					
ANR	5070756	IfStatement	if ( p -> _r2sleep != 0 )		5070169	13					
ANR	5070757	Condition	p -> _r2sleep != 0	869:5:18961:18976	5070169	0	True				
ANR	5070758	EqualityExpression	p -> _r2sleep != 0		5070169	0		!=			
ANR	5070759	PtrMemberAccess	p -> _r2sleep		5070169	0					
ANR	5070760	Identifier	p		5070169	0					
ANR	5070761	Identifier	_r2sleep		5070169	1					
ANR	5070762	PrimaryExpression	0		5070169	1					
ANR	5070763	CompoundStatement		118:23:2736:2736	5070169	1					
ANR	5070764	ExpressionStatement	r_sys_sleep ( p -> _r2sleep )	870:2:18983:19008	5070169	0	True				
ANR	5070765	CallExpression	r_sys_sleep ( p -> _r2sleep )		5070169	0					
ANR	5070766	Callee	r_sys_sleep		5070169	0					
ANR	5070767	Identifier	r_sys_sleep		5070169	0					
ANR	5070768	ArgumentList	p -> _r2sleep		5070169	1					
ANR	5070769	Argument	p -> _r2sleep		5070169	0					
ANR	5070770	PtrMemberAccess	p -> _r2sleep		5070169	0					
ANR	5070771	Identifier	p		5070169	0					
ANR	5070772	Identifier	_r2sleep		5070169	1					
ANR	5070773	IfStatement	if ( p -> _chroot )		5070169	14					
ANR	5070774	Condition	p -> _chroot	873:5:19031:19040	5070169	0	True				
ANR	5070775	PtrMemberAccess	p -> _chroot		5070169	0					
ANR	5070776	Identifier	p		5070169	0					
ANR	5070777	Identifier	_chroot		5070169	1					
ANR	5070778	CompoundStatement		122:17:2800:2800	5070169	1					
ANR	5070779	IfStatement	if ( chdir ( p -> _chroot ) == - 1 )		5070169	0					
ANR	5070780	Condition	chdir ( p -> _chroot ) == - 1	874:6:19051:19074	5070169	0	True				
ANR	5070781	EqualityExpression	chdir ( p -> _chroot ) == - 1		5070169	0		==			
ANR	5070782	CallExpression	chdir ( p -> _chroot )		5070169	0					
ANR	5070783	Callee	chdir		5070169	0					
ANR	5070784	Identifier	chdir		5070169	0					
ANR	5070785	ArgumentList	p -> _chroot		5070169	1					
ANR	5070786	Argument	p -> _chroot		5070169	0					
ANR	5070787	PtrMemberAccess	p -> _chroot		5070169	0					
ANR	5070788	Identifier	p		5070169	0					
ANR	5070789	Identifier	_chroot		5070169	1					
ANR	5070790	UnaryOperationExpression	- 1		5070169	1					
ANR	5070791	UnaryOperator	-		5070169	0					
ANR	5070792	PrimaryExpression	1		5070169	1					
ANR	5070793	CompoundStatement		123:32:2834:2834	5070169	1					
ANR	5070794	ExpressionStatement	"eprintf ( ""Cannot chdir to chroot in %s\\n"" , p -> _chroot )"	875:3:19082:19136	5070169	0	True				
ANR	5070795	CallExpression	"eprintf ( ""Cannot chdir to chroot in %s\\n"" , p -> _chroot )"		5070169	0					
ANR	5070796	Callee	eprintf		5070169	0					
ANR	5070797	Identifier	eprintf		5070169	0					
ANR	5070798	ArgumentList	"""Cannot chdir to chroot in %s\\n"""		5070169	1					
ANR	5070799	Argument	"""Cannot chdir to chroot in %s\\n"""		5070169	0					
ANR	5070800	PrimaryExpression	"""Cannot chdir to chroot in %s\\n"""		5070169	0					
ANR	5070801	Argument	p -> _chroot		5070169	1					
ANR	5070802	PtrMemberAccess	p -> _chroot		5070169	0					
ANR	5070803	Identifier	p		5070169	0					
ANR	5070804	Identifier	_chroot		5070169	1					
ANR	5070805	ReturnStatement	return 1 ;	876:3:19141:19149	5070169	1	True				
ANR	5070806	PrimaryExpression	1		5070169	0					
ANR	5070807	ElseStatement	else		5070169	0					
ANR	5070808	CompoundStatement		126:9:2917:2917	5070169	0					
ANR	5070809	IfStatement	"if ( chroot ( ""."" ) == - 1 )"		5070169	0					
ANR	5070810	Condition	"chroot ( ""."" ) == - 1"	878:7:19169:19186	5070169	0	True				
ANR	5070811	EqualityExpression	"chroot ( ""."" ) == - 1"		5070169	0		==			
ANR	5070812	CallExpression	"chroot ( ""."" )"		5070169	0					
ANR	5070813	Callee	chroot		5070169	0					
ANR	5070814	Identifier	chroot		5070169	0					
ANR	5070815	ArgumentList	"""."""		5070169	1					
ANR	5070816	Argument	"""."""		5070169	0					
ANR	5070817	PrimaryExpression	"""."""		5070169	0					
ANR	5070818	UnaryOperationExpression	- 1		5070169	1					
ANR	5070819	UnaryOperator	-		5070169	0					
ANR	5070820	PrimaryExpression	1		5070169	1					
ANR	5070821	CompoundStatement		127:27:2946:2946	5070169	1					
ANR	5070822	ExpressionStatement	"eprintf ( ""Cannot chroot to %s\\n"" , p -> _chroot )"	879:4:19195:19240	5070169	0	True				
ANR	5070823	CallExpression	"eprintf ( ""Cannot chroot to %s\\n"" , p -> _chroot )"		5070169	0					
ANR	5070824	Callee	eprintf		5070169	0					
ANR	5070825	Identifier	eprintf		5070169	0					
ANR	5070826	ArgumentList	"""Cannot chroot to %s\\n"""		5070169	1					
ANR	5070827	Argument	"""Cannot chroot to %s\\n"""		5070169	0					
ANR	5070828	PrimaryExpression	"""Cannot chroot to %s\\n"""		5070169	0					
ANR	5070829	Argument	p -> _chroot		5070169	1					
ANR	5070830	PtrMemberAccess	p -> _chroot		5070169	0					
ANR	5070831	Identifier	p		5070169	0					
ANR	5070832	Identifier	_chroot		5070169	1					
ANR	5070833	ReturnStatement	return 1 ;	880:4:19246:19254	5070169	1	True				
ANR	5070834	PrimaryExpression	1		5070169	0					
ANR	5070835	ElseStatement	else		5070169	0					
ANR	5070836	CompoundStatement		130:10:3023:3023	5070169	0					
ANR	5070837	IfStatement	"if ( chdir ( ""/"" ) == - 1 )"		5070169	0					
ANR	5070838	Condition	"chdir ( ""/"" ) == - 1"	883:8:19317:19333	5070169	0	True				
ANR	5070839	EqualityExpression	"chdir ( ""/"" ) == - 1"		5070169	0		==			
ANR	5070840	CallExpression	"chdir ( ""/"" )"		5070169	0					
ANR	5070841	Callee	chdir		5070169	0					
ANR	5070842	Identifier	chdir		5070169	0					
ANR	5070843	ArgumentList	"""/"""		5070169	1					
ANR	5070844	Argument	"""/"""		5070169	0					
ANR	5070845	PrimaryExpression	"""/"""		5070169	0					
ANR	5070846	UnaryOperationExpression	- 1		5070169	1					
ANR	5070847	UnaryOperator	-		5070169	0					
ANR	5070848	PrimaryExpression	1		5070169	1					
ANR	5070849	CompoundStatement		132:27:3093:3093	5070169	1					
ANR	5070850	ExpressionStatement	"eprintf ( ""Cannot chdir to /\\n"" )"	884:5:19343:19374	5070169	0	True				
ANR	5070851	CallExpression	"eprintf ( ""Cannot chdir to /\\n"" )"		5070169	0					
ANR	5070852	Callee	eprintf		5070169	0					
ANR	5070853	Identifier	eprintf		5070169	0					
ANR	5070854	ArgumentList	"""Cannot chdir to /\\n"""		5070169	1					
ANR	5070855	Argument	"""Cannot chdir to /\\n"""		5070169	0					
ANR	5070856	PrimaryExpression	"""Cannot chdir to /\\n"""		5070169	0					
ANR	5070857	ReturnStatement	return 1 ;	885:5:19381:19389	5070169	1	True				
ANR	5070858	PrimaryExpression	1		5070169	0					
ANR	5070859	IfStatement	if ( p -> _chgdir )		5070169	1					
ANR	5070860	Condition	p -> _chgdir	887:8:19405:19414	5070169	0	True				
ANR	5070861	PtrMemberAccess	p -> _chgdir		5070169	0					
ANR	5070862	Identifier	p		5070169	0					
ANR	5070863	Identifier	_chgdir		5070169	1					
ANR	5070864	CompoundStatement		136:20:3174:3174	5070169	1					
ANR	5070865	IfStatement	if ( chdir ( p -> _chgdir ) == - 1 )		5070169	0					
ANR	5070866	Condition	chdir ( p -> _chgdir ) == - 1	888:9:19428:19451	5070169	0	True				
ANR	5070867	EqualityExpression	chdir ( p -> _chgdir ) == - 1		5070169	0		==			
ANR	5070868	CallExpression	chdir ( p -> _chgdir )		5070169	0					
ANR	5070869	Callee	chdir		5070169	0					
ANR	5070870	Identifier	chdir		5070169	0					
ANR	5070871	ArgumentList	p -> _chgdir		5070169	1					
ANR	5070872	Argument	p -> _chgdir		5070169	0					
ANR	5070873	PtrMemberAccess	p -> _chgdir		5070169	0					
ANR	5070874	Identifier	p		5070169	0					
ANR	5070875	Identifier	_chgdir		5070169	1					
ANR	5070876	UnaryOperationExpression	- 1		5070169	1					
ANR	5070877	UnaryOperator	-		5070169	0					
ANR	5070878	PrimaryExpression	1		5070169	1					
ANR	5070879	CompoundStatement		137:35:3211:3211	5070169	1					
ANR	5070880	ExpressionStatement	"eprintf ( ""Cannot chdir after chroot to %s\\n"" , p -> _chgdir )"	889:6:19462:19519	5070169	0	True				
ANR	5070881	CallExpression	"eprintf ( ""Cannot chdir after chroot to %s\\n"" , p -> _chgdir )"		5070169	0					
ANR	5070882	Callee	eprintf		5070169	0					
ANR	5070883	Identifier	eprintf		5070169	0					
ANR	5070884	ArgumentList	"""Cannot chdir after chroot to %s\\n"""		5070169	1					
ANR	5070885	Argument	"""Cannot chdir after chroot to %s\\n"""		5070169	0					
ANR	5070886	PrimaryExpression	"""Cannot chdir after chroot to %s\\n"""		5070169	0					
ANR	5070887	Argument	p -> _chgdir		5070169	1					
ANR	5070888	PtrMemberAccess	p -> _chgdir		5070169	0					
ANR	5070889	Identifier	p		5070169	0					
ANR	5070890	Identifier	_chgdir		5070169	1					
ANR	5070891	ReturnStatement	return 1 ;	890:6:19527:19535	5070169	1	True				
ANR	5070892	PrimaryExpression	1		5070169	0					
ANR	5070893	ElseStatement	else		5070169	0					
ANR	5070894	IfStatement	if ( p -> _chgdir )		5070169	0					
ANR	5070895	Condition	p -> _chgdir	895:12:19571:19580	5070169	0	True				
ANR	5070896	PtrMemberAccess	p -> _chgdir		5070169	0					
ANR	5070897	Identifier	p		5070169	0					
ANR	5070898	Identifier	_chgdir		5070169	1					
ANR	5070899	CompoundStatement		144:24:3340:3340	5070169	1					
ANR	5070900	IfStatement	if ( chdir ( p -> _chgdir ) == - 1 )		5070169	0					
ANR	5070901	Condition	chdir ( p -> _chgdir ) == - 1	896:6:19591:19614	5070169	0	True				
ANR	5070902	EqualityExpression	chdir ( p -> _chgdir ) == - 1		5070169	0		==			
ANR	5070903	CallExpression	chdir ( p -> _chgdir )		5070169	0					
ANR	5070904	Callee	chdir		5070169	0					
ANR	5070905	Identifier	chdir		5070169	0					
ANR	5070906	ArgumentList	p -> _chgdir		5070169	1					
ANR	5070907	Argument	p -> _chgdir		5070169	0					
ANR	5070908	PtrMemberAccess	p -> _chgdir		5070169	0					
ANR	5070909	Identifier	p		5070169	0					
ANR	5070910	Identifier	_chgdir		5070169	1					
ANR	5070911	UnaryOperationExpression	- 1		5070169	1					
ANR	5070912	UnaryOperator	-		5070169	0					
ANR	5070913	PrimaryExpression	1		5070169	1					
ANR	5070914	CompoundStatement		145:32:3374:3374	5070169	1					
ANR	5070915	ExpressionStatement	"eprintf ( ""Cannot chdir after chroot to %s\\n"" , p -> _chgdir )"	897:3:19622:19679	5070169	0	True				
ANR	5070916	CallExpression	"eprintf ( ""Cannot chdir after chroot to %s\\n"" , p -> _chgdir )"		5070169	0					
ANR	5070917	Callee	eprintf		5070169	0					
ANR	5070918	Identifier	eprintf		5070169	0					
ANR	5070919	ArgumentList	"""Cannot chdir after chroot to %s\\n"""		5070169	1					
ANR	5070920	Argument	"""Cannot chdir after chroot to %s\\n"""		5070169	0					
ANR	5070921	PrimaryExpression	"""Cannot chdir after chroot to %s\\n"""		5070169	0					
ANR	5070922	Argument	p -> _chgdir		5070169	1					
ANR	5070923	PtrMemberAccess	p -> _chgdir		5070169	0					
ANR	5070924	Identifier	p		5070169	0					
ANR	5070925	Identifier	_chgdir		5070169	1					
ANR	5070926	ReturnStatement	return 1 ;	898:3:19684:19692	5070169	1	True				
ANR	5070927	PrimaryExpression	1		5070169	0					
ANR	5070928	IfStatement	if ( p -> _setuid )		5070169	15					
ANR	5070929	Condition	p -> _setuid	916:5:19900:19909	5070169	0	True				
ANR	5070930	PtrMemberAccess	p -> _setuid		5070169	0					
ANR	5070931	Identifier	p		5070169	0					
ANR	5070932	Identifier	_setuid		5070169	1					
ANR	5070933	CompoundStatement		165:17:3669:3669	5070169	1					
ANR	5070934	ExpressionStatement	"ret = setgroups ( 0 , NULL )"	917:2:19916:19941	5070169	0	True				
ANR	5070935	AssignmentExpression	"ret = setgroups ( 0 , NULL )"		5070169	0		=			
ANR	5070936	Identifier	ret		5070169	0					
ANR	5070937	CallExpression	"setgroups ( 0 , NULL )"		5070169	1					
ANR	5070938	Callee	setgroups		5070169	0					
ANR	5070939	Identifier	setgroups		5070169	0					
ANR	5070940	ArgumentList	0		5070169	1					
ANR	5070941	Argument	0		5070169	0					
ANR	5070942	PrimaryExpression	0		5070169	0					
ANR	5070943	Argument	NULL		5070169	1					
ANR	5070944	Identifier	NULL		5070169	0					
ANR	5070945	IfStatement	if ( ret < 0 )		5070169	1					
ANR	5070946	Condition	ret < 0	918:6:19949:19955	5070169	0	True				
ANR	5070947	RelationalExpression	ret < 0		5070169	0		<			
ANR	5070948	Identifier	ret		5070169	0					
ANR	5070949	PrimaryExpression	0		5070169	1					
ANR	5070950	CompoundStatement		167:15:3715:3715	5070169	1					
ANR	5070951	ReturnStatement	return 1 ;	919:3:19963:19971	5070169	0	True				
ANR	5070952	PrimaryExpression	1		5070169	0					
ANR	5070953	ExpressionStatement	ret = setuid ( atoi ( p -> _setuid ) )	921:2:19979:20011	5070169	2	True				
ANR	5070954	AssignmentExpression	ret = setuid ( atoi ( p -> _setuid ) )		5070169	0		=			
ANR	5070955	Identifier	ret		5070169	0					
ANR	5070956	CallExpression	setuid ( atoi ( p -> _setuid ) )		5070169	1					
ANR	5070957	Callee	setuid		5070169	0					
ANR	5070958	Identifier	setuid		5070169	0					
ANR	5070959	ArgumentList	atoi ( p -> _setuid )		5070169	1					
ANR	5070960	Argument	atoi ( p -> _setuid )		5070169	0					
ANR	5070961	CallExpression	atoi ( p -> _setuid )		5070169	0					
ANR	5070962	Callee	atoi		5070169	0					
ANR	5070963	Identifier	atoi		5070169	0					
ANR	5070964	ArgumentList	p -> _setuid		5070169	1					
ANR	5070965	Argument	p -> _setuid		5070169	0					
ANR	5070966	PtrMemberAccess	p -> _setuid		5070169	0					
ANR	5070967	Identifier	p		5070169	0					
ANR	5070968	Identifier	_setuid		5070169	1					
ANR	5070969	IfStatement	if ( ret < 0 )		5070169	3					
ANR	5070970	Condition	ret < 0	922:6:20019:20025	5070169	0	True				
ANR	5070971	RelationalExpression	ret < 0		5070169	0		<			
ANR	5070972	Identifier	ret		5070169	0					
ANR	5070973	PrimaryExpression	0		5070169	1					
ANR	5070974	CompoundStatement		171:15:3785:3785	5070169	1					
ANR	5070975	ReturnStatement	return 1 ;	923:3:20033:20041	5070169	0	True				
ANR	5070976	PrimaryExpression	1		5070169	0					
ANR	5070977	IfStatement	if ( p -> _seteuid )		5070169	16					
ANR	5070978	Condition	p -> _seteuid	926:5:20055:20065	5070169	0	True				
ANR	5070979	PtrMemberAccess	p -> _seteuid		5070169	0					
ANR	5070980	Identifier	p		5070169	0					
ANR	5070981	Identifier	_seteuid		5070169	1					
ANR	5070982	CompoundStatement		175:18:3825:3825	5070169	1					
ANR	5070983	ExpressionStatement	ret = seteuid ( atoi ( p -> _seteuid ) )	927:2:20072:20106	5070169	0	True				
ANR	5070984	AssignmentExpression	ret = seteuid ( atoi ( p -> _seteuid ) )		5070169	0		=			
ANR	5070985	Identifier	ret		5070169	0					
ANR	5070986	CallExpression	seteuid ( atoi ( p -> _seteuid ) )		5070169	1					
ANR	5070987	Callee	seteuid		5070169	0					
ANR	5070988	Identifier	seteuid		5070169	0					
ANR	5070989	ArgumentList	atoi ( p -> _seteuid )		5070169	1					
ANR	5070990	Argument	atoi ( p -> _seteuid )		5070169	0					
ANR	5070991	CallExpression	atoi ( p -> _seteuid )		5070169	0					
ANR	5070992	Callee	atoi		5070169	0					
ANR	5070993	Identifier	atoi		5070169	0					
ANR	5070994	ArgumentList	p -> _seteuid		5070169	1					
ANR	5070995	Argument	p -> _seteuid		5070169	0					
ANR	5070996	PtrMemberAccess	p -> _seteuid		5070169	0					
ANR	5070997	Identifier	p		5070169	0					
ANR	5070998	Identifier	_seteuid		5070169	1					
ANR	5070999	IfStatement	if ( ret < 0 )		5070169	1					
ANR	5071000	Condition	ret < 0	928:6:20114:20120	5070169	0	True				
ANR	5071001	RelationalExpression	ret < 0		5070169	0		<			
ANR	5071002	Identifier	ret		5070169	0					
ANR	5071003	PrimaryExpression	0		5070169	1					
ANR	5071004	CompoundStatement		177:15:3880:3880	5070169	1					
ANR	5071005	ReturnStatement	return 1 ;	929:3:20128:20136	5070169	0	True				
ANR	5071006	PrimaryExpression	1		5070169	0					
ANR	5071007	IfStatement	if ( p -> _setgid )		5070169	17					
ANR	5071008	Condition	p -> _setgid	932:5:20150:20159	5070169	0	True				
ANR	5071009	PtrMemberAccess	p -> _setgid		5070169	0					
ANR	5071010	Identifier	p		5070169	0					
ANR	5071011	Identifier	_setgid		5070169	1					
ANR	5071012	CompoundStatement		181:17:3919:3919	5070169	1					
ANR	5071013	ExpressionStatement	ret = setgid ( atoi ( p -> _setgid ) )	933:2:20166:20198	5070169	0	True				
ANR	5071014	AssignmentExpression	ret = setgid ( atoi ( p -> _setgid ) )		5070169	0		=			
ANR	5071015	Identifier	ret		5070169	0					
ANR	5071016	CallExpression	setgid ( atoi ( p -> _setgid ) )		5070169	1					
ANR	5071017	Callee	setgid		5070169	0					
ANR	5071018	Identifier	setgid		5070169	0					
ANR	5071019	ArgumentList	atoi ( p -> _setgid )		5070169	1					
ANR	5071020	Argument	atoi ( p -> _setgid )		5070169	0					
ANR	5071021	CallExpression	atoi ( p -> _setgid )		5070169	0					
ANR	5071022	Callee	atoi		5070169	0					
ANR	5071023	Identifier	atoi		5070169	0					
ANR	5071024	ArgumentList	p -> _setgid		5070169	1					
ANR	5071025	Argument	p -> _setgid		5070169	0					
ANR	5071026	PtrMemberAccess	p -> _setgid		5070169	0					
ANR	5071027	Identifier	p		5070169	0					
ANR	5071028	Identifier	_setgid		5070169	1					
ANR	5071029	IfStatement	if ( ret < 0 )		5070169	1					
ANR	5071030	Condition	ret < 0	934:6:20206:20212	5070169	0	True				
ANR	5071031	RelationalExpression	ret < 0		5070169	0		<			
ANR	5071032	Identifier	ret		5070169	0					
ANR	5071033	PrimaryExpression	0		5070169	1					
ANR	5071034	CompoundStatement		183:15:3972:3972	5070169	1					
ANR	5071035	ReturnStatement	return 1 ;	935:3:20220:20228	5070169	0	True				
ANR	5071036	PrimaryExpression	1		5070169	0					
ANR	5071037	IfStatement	if ( p -> _input )		5070169	18					
ANR	5071038	Condition	p -> _input	938:5:20242:20250	5070169	0	True				
ANR	5071039	PtrMemberAccess	p -> _input		5070169	0					
ANR	5071040	Identifier	p		5070169	0					
ANR	5071041	Identifier	_input		5070169	1					
ANR	5071042	CompoundStatement		189:2:4027:4036	5070169	1					
ANR	5071043	IdentifierDeclStatement	char * inp ;	939:2:20257:20266	5070169	0	True				
ANR	5071044	IdentifierDecl	* inp		5070169	0					
ANR	5071045	IdentifierDeclType	char *		5070169	0					
ANR	5071046	Identifier	inp		5070169	1					
ANR	5071047	IdentifierDeclStatement	int f2 [ 2 ] ;	940:2:20270:20279	5070169	1	True				
ANR	5071048	IdentifierDecl	f2 [ 2 ]		5070169	0					
ANR	5071049	IdentifierDeclType	int [ 2 ]		5070169	0					
ANR	5071050	Identifier	f2		5070169	1					
ANR	5071051	PrimaryExpression	2		5070169	2					
ANR	5071052	IfStatement	if ( pipe ( f2 ) != - 1 )		5070169	2					
ANR	5071053	Condition	pipe ( f2 ) != - 1	941:6:20287:20301	5070169	0	True				
ANR	5071054	EqualityExpression	pipe ( f2 ) != - 1		5070169	0		!=			
ANR	5071055	CallExpression	pipe ( f2 )		5070169	0					
ANR	5071056	Callee	pipe		5070169	0					
ANR	5071057	Identifier	pipe		5070169	0					
ANR	5071058	ArgumentList	f2		5070169	1					
ANR	5071059	Argument	f2		5070169	0					
ANR	5071060	Identifier	f2		5070169	0					
ANR	5071061	UnaryOperationExpression	- 1		5070169	1					
ANR	5071062	UnaryOperator	-		5070169	0					
ANR	5071063	PrimaryExpression	1		5070169	1					
ANR	5071064	CompoundStatement		190:23:4061:4061	5070169	1					
ANR	5071065	ExpressionStatement	close ( 0 )	942:3:20309:20318	5070169	0	True				
ANR	5071066	CallExpression	close ( 0 )		5070169	0					
ANR	5071067	Callee	close		5070169	0					
ANR	5071068	Identifier	close		5070169	0					
ANR	5071069	ArgumentList	0		5070169	1					
ANR	5071070	Argument	0		5070169	0					
ANR	5071071	PrimaryExpression	0		5070169	0					
ANR	5071072	ExpressionStatement	"dup2 ( f2 [ 0 ] , 0 )"	943:3:20323:20338	5070169	1	True				
ANR	5071073	CallExpression	"dup2 ( f2 [ 0 ] , 0 )"		5070169	0					
ANR	5071074	Callee	dup2		5070169	0					
ANR	5071075	Identifier	dup2		5070169	0					
ANR	5071076	ArgumentList	f2 [ 0 ]		5070169	1					
ANR	5071077	Argument	f2 [ 0 ]		5070169	0					
ANR	5071078	ArrayIndexing	f2 [ 0 ]		5070169	0					
ANR	5071079	Identifier	f2		5070169	0					
ANR	5071080	PrimaryExpression	0		5070169	1					
ANR	5071081	Argument	0		5070169	1					
ANR	5071082	PrimaryExpression	0		5070169	0					
ANR	5071083	ElseStatement	else		5070169	0					
ANR	5071084	CompoundStatement		193:9:4106:4106	5070169	0					
ANR	5071085	ExpressionStatement	"eprintf ( ""[ERROR] rarun2: Cannot create pipe\\n"" )"	945:3:20354:20402	5070169	0	True				
ANR	5071086	CallExpression	"eprintf ( ""[ERROR] rarun2: Cannot create pipe\\n"" )"		5070169	0					
ANR	5071087	Callee	eprintf		5070169	0					
ANR	5071088	Identifier	eprintf		5070169	0					
ANR	5071089	ArgumentList	"""[ERROR] rarun2: Cannot create pipe\\n"""		5070169	1					
ANR	5071090	Argument	"""[ERROR] rarun2: Cannot create pipe\\n"""		5070169	0					
ANR	5071091	PrimaryExpression	"""[ERROR] rarun2: Cannot create pipe\\n"""		5070169	0					
ANR	5071092	ReturnStatement	return 1 ;	946:3:20407:20415	5070169	1	True				
ANR	5071093	PrimaryExpression	1		5070169	0					
ANR	5071094	ExpressionStatement	inp = getstr ( p -> _input )	948:2:20423:20447	5070169	3	True				
ANR	5071095	AssignmentExpression	inp = getstr ( p -> _input )		5070169	0		=			
ANR	5071096	Identifier	inp		5070169	0					
ANR	5071097	CallExpression	getstr ( p -> _input )		5070169	1					
ANR	5071098	Callee	getstr		5070169	0					
ANR	5071099	Identifier	getstr		5070169	0					
ANR	5071100	ArgumentList	p -> _input		5070169	1					
ANR	5071101	Argument	p -> _input		5070169	0					
ANR	5071102	PtrMemberAccess	p -> _input		5070169	0					
ANR	5071103	Identifier	p		5070169	0					
ANR	5071104	Identifier	_input		5070169	1					
ANR	5071105	IfStatement	if ( inp )		5070169	4					
ANR	5071106	Condition	inp	949:6:20455:20457	5070169	0	True				
ANR	5071107	Identifier	inp		5070169	0					
ANR	5071108	CompoundStatement		199:3:4222:4248	5070169	1					
ANR	5071109	IdentifierDeclStatement	size_t inpl = strlen ( inp ) ;	950:3:20465:20491	5070169	0	True				
ANR	5071110	IdentifierDecl	inpl = strlen ( inp )		5070169	0					
ANR	5071111	IdentifierDeclType	size_t		5070169	0					
ANR	5071112	Identifier	inpl		5070169	1					
ANR	5071113	AssignmentExpression	inpl = strlen ( inp )		5070169	2		=			
ANR	5071114	Identifier	inpl		5070169	0					
ANR	5071115	CallExpression	strlen ( inp )		5070169	1					
ANR	5071116	Callee	strlen		5070169	0					
ANR	5071117	Identifier	strlen		5070169	0					
ANR	5071118	ArgumentList	inp		5070169	1					
ANR	5071119	Argument	inp		5070169	0					
ANR	5071120	Identifier	inp		5070169	0					
ANR	5071121	IfStatement	"if ( write ( f2 [ 1 ] , inp , inpl ) != inpl )"		5070169	1					
ANR	5071122	Condition	"write ( f2 [ 1 ] , inp , inpl ) != inpl"	951:8:20501:20532	5070169	0	True				
ANR	5071123	EqualityExpression	"write ( f2 [ 1 ] , inp , inpl ) != inpl"		5070169	0		!=			
ANR	5071124	CallExpression	"write ( f2 [ 1 ] , inp , inpl )"		5070169	0					
ANR	5071125	Callee	write		5070169	0					
ANR	5071126	Identifier	write		5070169	0					
ANR	5071127	ArgumentList	f2 [ 1 ]		5070169	1					
ANR	5071128	Argument	f2 [ 1 ]		5070169	0					
ANR	5071129	ArrayIndexing	f2 [ 1 ]		5070169	0					
ANR	5071130	Identifier	f2		5070169	0					
ANR	5071131	PrimaryExpression	1		5070169	1					
ANR	5071132	Argument	inp		5070169	1					
ANR	5071133	Identifier	inp		5070169	0					
ANR	5071134	Argument	inpl		5070169	2					
ANR	5071135	Identifier	inpl		5070169	0					
ANR	5071136	Identifier	inpl		5070169	1					
ANR	5071137	CompoundStatement		200:42:4292:4292	5070169	1					
ANR	5071138	ExpressionStatement	"eprintf ( ""[ERROR] rarun2: Cannot write to the pipe\\n"" )"	952:4:20541:20595	5070169	0	True				
ANR	5071139	CallExpression	"eprintf ( ""[ERROR] rarun2: Cannot write to the pipe\\n"" )"		5070169	0					
ANR	5071140	Callee	eprintf		5070169	0					
ANR	5071141	Identifier	eprintf		5070169	0					
ANR	5071142	ArgumentList	"""[ERROR] rarun2: Cannot write to the pipe\\n"""		5070169	1					
ANR	5071143	Argument	"""[ERROR] rarun2: Cannot write to the pipe\\n"""		5070169	0					
ANR	5071144	PrimaryExpression	"""[ERROR] rarun2: Cannot write to the pipe\\n"""		5070169	0					
ANR	5071145	ExpressionStatement	close ( f2 [ 1 ] )	954:3:20605:20618	5070169	2	True				
ANR	5071146	CallExpression	close ( f2 [ 1 ] )		5070169	0					
ANR	5071147	Callee	close		5070169	0					
ANR	5071148	Identifier	close		5070169	0					
ANR	5071149	ArgumentList	f2 [ 1 ]		5070169	1					
ANR	5071150	Argument	f2 [ 1 ]		5070169	0					
ANR	5071151	ArrayIndexing	f2 [ 1 ]		5070169	0					
ANR	5071152	Identifier	f2		5070169	0					
ANR	5071153	PrimaryExpression	1		5070169	1					
ANR	5071154	ExpressionStatement	free ( inp )	955:3:20623:20633	5070169	3	True				
ANR	5071155	CallExpression	free ( inp )		5070169	0					
ANR	5071156	Callee	free		5070169	0					
ANR	5071157	Identifier	free		5070169	0					
ANR	5071158	ArgumentList	inp		5070169	1					
ANR	5071159	Argument	inp		5070169	0					
ANR	5071160	Identifier	inp		5070169	0					
ANR	5071161	ElseStatement	else		5070169	0					
ANR	5071162	CompoundStatement		205:9:4401:4401	5070169	0					
ANR	5071163	ExpressionStatement	"eprintf ( ""Invalid input\\n"" )"	957:3:20649:20676	5070169	0	True				
ANR	5071164	CallExpression	"eprintf ( ""Invalid input\\n"" )"		5070169	0					
ANR	5071165	Callee	eprintf		5070169	0					
ANR	5071166	Identifier	eprintf		5070169	0					
ANR	5071167	ArgumentList	"""Invalid input\\n"""		5070169	1					
ANR	5071168	Argument	"""Invalid input\\n"""		5070169	0					
ANR	5071169	PrimaryExpression	"""Invalid input\\n"""		5070169	0					
ANR	5071170	IfStatement	if ( p -> _r2preload )		5070169	19					
ANR	5071171	Condition	p -> _r2preload	961:5:20697:20709	5070169	0	True				
ANR	5071172	PtrMemberAccess	p -> _r2preload		5070169	0					
ANR	5071173	Identifier	p		5070169	0					
ANR	5071174	Identifier	_r2preload		5070169	1					
ANR	5071175	CompoundStatement		210:20:4469:4469	5070169	1					
ANR	5071176	IfStatement	if ( p -> _preload )		5070169	0					
ANR	5071177	Condition	p -> _preload	962:6:20720:20730	5070169	0	True				
ANR	5071178	PtrMemberAccess	p -> _preload		5070169	0					
ANR	5071179	Identifier	p		5070169	0					
ANR	5071180	Identifier	_preload		5070169	1					
ANR	5071181	CompoundStatement		211:19:4490:4490	5070169	1					
ANR	5071182	ExpressionStatement	"eprintf ( ""WARNING: Only one library can be opened at a time\\n"" )"	963:3:20738:20801	5070169	0	True				
ANR	5071183	CallExpression	"eprintf ( ""WARNING: Only one library can be opened at a time\\n"" )"		5070169	0					
ANR	5071184	Callee	eprintf		5070169	0					
ANR	5071185	Identifier	eprintf		5070169	0					
ANR	5071186	ArgumentList	"""WARNING: Only one library can be opened at a time\\n"""		5070169	1					
ANR	5071187	Argument	"""WARNING: Only one library can be opened at a time\\n"""		5070169	0					
ANR	5071188	PrimaryExpression	"""WARNING: Only one library can be opened at a time\\n"""		5070169	0					
ANR	5071189	Statement	p	965:2:20809:20809	5070169	1	True				
ANR	5071190	Statement	->	965:3:20810:20811	5070169	2	True				
ANR	5071191	Statement	_preload	965:5:20812:20819	5070169	3	True				
ANR	5071192	Statement	=	965:14:20821:20821	5070169	4	True				
ANR	5071193	Statement	R2_LIBDIR	965:16:20823:20831	5070169	5	True				
ANR	5071194	Statement	"""/libr2."""	965:25:20832:20840	5070169	6	True				
ANR	5071195	ExpressionStatement	R_LIB_EXT	965:34:20841:20850	5070169	7	True				
ANR	5071196	Identifier	R_LIB_EXT		5070169	0					
ANR	5071197	IfStatement	if ( p -> _libpath )		5070169	20					
ANR	5071198	Condition	p -> _libpath	967:5:20860:20870	5070169	0	True				
ANR	5071199	PtrMemberAccess	p -> _libpath		5070169	0					
ANR	5071200	Identifier	p		5070169	0					
ANR	5071201	Identifier	_libpath		5070169	1					
ANR	5071202	CompoundStatement		216:18:4630:4630	5070169	1					
ANR	5071203	ExpressionStatement	"eprintf ( ""rarun2: libpath unsupported for this platform\\n"" )"	969:2:20893:20952	5070169	0	True				
ANR	5071204	CallExpression	"eprintf ( ""rarun2: libpath unsupported for this platform\\n"" )"		5070169	0					
ANR	5071205	Callee	eprintf		5070169	0					
ANR	5071206	Identifier	eprintf		5070169	0					
ANR	5071207	ArgumentList	"""rarun2: libpath unsupported for this platform\\n"""		5070169	1					
ANR	5071208	Argument	"""rarun2: libpath unsupported for this platform\\n"""		5070169	0					
ANR	5071209	PrimaryExpression	"""rarun2: libpath unsupported for this platform\\n"""		5070169	0					
ANR	5071210	IfStatement	if ( p -> _preload )		5070169	21					
ANR	5071211	Condition	p -> _preload	978:5:21153:21163	5070169	0	True				
ANR	5071212	PtrMemberAccess	p -> _preload		5070169	0					
ANR	5071213	Identifier	p		5070169	0					
ANR	5071214	Identifier	_preload		5070169	1					
ANR	5071215	CompoundStatement		227:18:4923:4923	5070169	1					
ANR	5071216	ExpressionStatement	"r_sys_setenv ( ""DYLD_PRELOAD"" , p -> _preload )"	982:2:21213:21255	5070169	0	True				
ANR	5071217	CallExpression	"r_sys_setenv ( ""DYLD_PRELOAD"" , p -> _preload )"		5070169	0					
ANR	5071218	Callee	r_sys_setenv		5070169	0					
ANR	5071219	Identifier	r_sys_setenv		5070169	0					
ANR	5071220	ArgumentList	"""DYLD_PRELOAD"""		5070169	1					
ANR	5071221	Argument	"""DYLD_PRELOAD"""		5070169	0					
ANR	5071222	PrimaryExpression	"""DYLD_PRELOAD"""		5070169	0					
ANR	5071223	Argument	p -> _preload		5070169	1					
ANR	5071224	PtrMemberAccess	p -> _preload		5070169	0					
ANR	5071225	Identifier	p		5070169	0					
ANR	5071226	Identifier	_preload		5070169	1					
ANR	5071227	ExpressionStatement	"r_sys_setenv ( ""DYLD_INSERT_LIBRARIES"" , p -> _preload )"	984:2:21266:21317	5070169	1	True				
ANR	5071228	CallExpression	"r_sys_setenv ( ""DYLD_INSERT_LIBRARIES"" , p -> _preload )"		5070169	0					
ANR	5071229	Callee	r_sys_setenv		5070169	0					
ANR	5071230	Identifier	r_sys_setenv		5070169	0					
ANR	5071231	ArgumentList	"""DYLD_INSERT_LIBRARIES"""		5070169	1					
ANR	5071232	Argument	"""DYLD_INSERT_LIBRARIES"""		5070169	0					
ANR	5071233	PrimaryExpression	"""DYLD_INSERT_LIBRARIES"""		5070169	0					
ANR	5071234	Argument	p -> _preload		5070169	1					
ANR	5071235	PtrMemberAccess	p -> _preload		5070169	0					
ANR	5071236	Identifier	p		5070169	0					
ANR	5071237	Identifier	_preload		5070169	1					
ANR	5071238	ExpressionStatement	"r_sys_setenv ( ""DYLD_FORCE_FLAT_NAMESPACE"" , ""1"" )"	986:2:21331:21378	5070169	2	True				
ANR	5071239	CallExpression	"r_sys_setenv ( ""DYLD_FORCE_FLAT_NAMESPACE"" , ""1"" )"		5070169	0					
ANR	5071240	Callee	r_sys_setenv		5070169	0					
ANR	5071241	Identifier	r_sys_setenv		5070169	0					
ANR	5071242	ArgumentList	"""DYLD_FORCE_FLAT_NAMESPACE"""		5070169	1					
ANR	5071243	Argument	"""DYLD_FORCE_FLAT_NAMESPACE"""		5070169	0					
ANR	5071244	PrimaryExpression	"""DYLD_FORCE_FLAT_NAMESPACE"""		5070169	0					
ANR	5071245	Argument	"""1"""		5070169	1					
ANR	5071246	PrimaryExpression	"""1"""		5070169	0					
ANR	5071247	IfStatement	if ( p -> _timeout )		5070169	22					
ANR	5071248	Condition	p -> _timeout	991:5:21445:21455	5070169	0	True				
ANR	5071249	PtrMemberAccess	p -> _timeout		5070169	0					
ANR	5071250	Identifier	p		5070169	0					
ANR	5071251	Identifier	_timeout		5070169	1					
ANR	5071252	CompoundStatement		242:2:5232:5253	5070169	1					
ANR	5071253	IdentifierDeclStatement	int mypid = getpid ( ) ;	993:2:21475:21496	5070169	0	True				
ANR	5071254	IdentifierDecl	mypid = getpid ( )		5070169	0					
ANR	5071255	IdentifierDeclType	int		5070169	0					
ANR	5071256	Identifier	mypid		5070169	1					
ANR	5071257	AssignmentExpression	mypid = getpid ( )		5070169	2		=			
ANR	5071258	Identifier	mypid		5070169	0					
ANR	5071259	CallExpression	getpid ( )		5070169	1					
ANR	5071260	Callee	getpid		5070169	0					
ANR	5071261	Identifier	getpid		5070169	0					
ANR	5071262	ArgumentList			5070169	1					
ANR	5071263	IfStatement	if ( ! r_sys_fork ( ) )		5070169	1					
ANR	5071264	Condition	! r_sys_fork ( )	994:6:21504:21517	5070169	0	True				
ANR	5071265	UnaryOperationExpression	! r_sys_fork ( )		5070169	0					
ANR	5071266	UnaryOperator	!		5070169	0					
ANR	5071267	CallExpression	r_sys_fork ( )		5070169	1					
ANR	5071268	Callee	r_sys_fork		5070169	0					
ANR	5071269	Identifier	r_sys_fork		5070169	0					
ANR	5071270	ArgumentList			5070169	1					
ANR	5071271	CompoundStatement		244:3:5282:5314	5070169	1					
ANR	5071272	IdentifierDeclStatement	int use_signal = p -> _timeout_sig ;	995:3:21525:21557	5070169	0	True				
ANR	5071273	IdentifierDecl	use_signal = p -> _timeout_sig		5070169	0					
ANR	5071274	IdentifierDeclType	int		5070169	0					
ANR	5071275	Identifier	use_signal		5070169	1					
ANR	5071276	AssignmentExpression	use_signal = p -> _timeout_sig		5070169	2		=			
ANR	5071277	Identifier	use_signal		5070169	0					
ANR	5071278	PtrMemberAccess	p -> _timeout_sig		5070169	1					
ANR	5071279	Identifier	p		5070169	0					
ANR	5071280	Identifier	_timeout_sig		5070169	1					
ANR	5071281	IfStatement	if ( use_signal < 1 )		5070169	1					
ANR	5071282	Condition	use_signal < 1	996:7:21566:21579	5070169	0	True				
ANR	5071283	RelationalExpression	use_signal < 1		5070169	0		<			
ANR	5071284	Identifier	use_signal		5070169	0					
ANR	5071285	PrimaryExpression	1		5070169	1					
ANR	5071286	CompoundStatement		245:23:5339:5339	5070169	1					
ANR	5071287	ExpressionStatement	use_signal = SIGKILL	997:4:21588:21608	5070169	0	True				
ANR	5071288	AssignmentExpression	use_signal = SIGKILL		5070169	0		=			
ANR	5071289	Identifier	use_signal		5070169	0					
ANR	5071290	Identifier	SIGKILL		5070169	1					
ANR	5071291	ExpressionStatement	sleep ( p -> _timeout )	999:3:21618:21637	5070169	2	True				
ANR	5071292	CallExpression	sleep ( p -> _timeout )		5070169	0					
ANR	5071293	Callee	sleep		5070169	0					
ANR	5071294	Identifier	sleep		5070169	0					
ANR	5071295	ArgumentList	p -> _timeout		5070169	1					
ANR	5071296	Argument	p -> _timeout		5070169	0					
ANR	5071297	PtrMemberAccess	p -> _timeout		5070169	0					
ANR	5071298	Identifier	p		5070169	0					
ANR	5071299	Identifier	_timeout		5070169	1					
ANR	5071300	IfStatement	"if ( ! kill ( mypid , 0 ) )"		5070169	3					
ANR	5071301	Condition	"! kill ( mypid , 0 )"	1000:7:21646:21661	5070169	0	True				
ANR	5071302	UnaryOperationExpression	"! kill ( mypid , 0 )"		5070169	0					
ANR	5071303	UnaryOperator	!		5070169	0					
ANR	5071304	CallExpression	"kill ( mypid , 0 )"		5070169	1					
ANR	5071305	Callee	kill		5070169	0					
ANR	5071306	Identifier	kill		5070169	0					
ANR	5071307	ArgumentList	mypid		5070169	1					
ANR	5071308	Argument	mypid		5070169	0					
ANR	5071309	Identifier	mypid		5070169	0					
ANR	5071310	Argument	0		5070169	1					
ANR	5071311	PrimaryExpression	0		5070169	0					
ANR	5071312	CompoundStatement		249:25:5421:5421	5070169	1					
ANR	5071313	ExpressionStatement	"eprintf ( ""\\nrarun2: Interrupted by timeout\\n"" )"	1001:4:21670:21716	5070169	0	True				
ANR	5071314	CallExpression	"eprintf ( ""\\nrarun2: Interrupted by timeout\\n"" )"		5070169	0					
ANR	5071315	Callee	eprintf		5070169	0					
ANR	5071316	Identifier	eprintf		5070169	0					
ANR	5071317	ArgumentList	"""\\nrarun2: Interrupted by timeout\\n"""		5070169	1					
ANR	5071318	Argument	"""\\nrarun2: Interrupted by timeout\\n"""		5070169	0					
ANR	5071319	PrimaryExpression	"""\\nrarun2: Interrupted by timeout\\n"""		5070169	0					
ANR	5071320	ExpressionStatement	"kill ( mypid , use_signal )"	1003:3:21726:21750	5070169	4	True				
ANR	5071321	CallExpression	"kill ( mypid , use_signal )"		5070169	0					
ANR	5071322	Callee	kill		5070169	0					
ANR	5071323	Identifier	kill		5070169	0					
ANR	5071324	ArgumentList	mypid		5070169	1					
ANR	5071325	Argument	mypid		5070169	0					
ANR	5071326	Identifier	mypid		5070169	0					
ANR	5071327	Argument	use_signal		5070169	1					
ANR	5071328	Identifier	use_signal		5070169	0					
ANR	5071329	ExpressionStatement	exit ( 0 )	1004:3:21755:21763	5070169	5	True				
ANR	5071330	CallExpression	exit ( 0 )		5070169	0					
ANR	5071331	Callee	exit		5070169	0					
ANR	5071332	Identifier	exit		5070169	0					
ANR	5071333	ArgumentList	0		5070169	1					
ANR	5071334	Argument	0		5070169	0					
ANR	5071335	PrimaryExpression	0		5070169	0					
ANR	5071336	ReturnStatement	return 0 ;	1010:1:21843:21851	5070169	23	True				
ANR	5071337	PrimaryExpression	0		5070169	0					
ANR	5071338	ReturnType	R_API int		5070169	1					
ANR	5071339	Identifier	r_run_config_env		5070169	2					
ANR	5071340	ParameterList	RRunProfile * p		5070169	3					
ANR	5071341	Parameter	RRunProfile * p	752:27:16226:16239	5070169	0	True				
ANR	5071342	ParameterType	RRunProfile *		5070169	0					
ANR	5071343	Identifier	p		5070169	1					
ANR	5071344	CFGEntryNode	ENTRY		5070169		True				
ANR	5071345	CFGExitNode	EXIT		5070169		True				
ANR	5071346	Symbol	r_socket_connect_tcp		5070169						
ANR	5071347	Symbol	p -> _maxstack		5070169						
ANR	5071348	Symbol	p -> _stdout		5070169						
ANR	5071349	Symbol	RLIM_INFINITY		5070169						
ANR	5071350	Symbol	strchr		5070169						
ANR	5071351	Symbol	f2		5070169						
ANR	5071352	Symbol	redirect_socket_to_pty		5070169						
ANR	5071353	Symbol	p -> _listen		5070169						
ANR	5071354	Symbol	p -> _preload		5070169						
ANR	5071355	Symbol	strlen		5070169						
ANR	5071356	Symbol	p -> _stdio		5070169						
ANR	5071357	Symbol	p -> _aslr		5070169						
ANR	5071358	Symbol	p -> _stdin		5070169						
ANR	5071359	Symbol	setgroups		5070169						
ANR	5071360	Symbol	getstr		5070169						
ANR	5071361	Symbol	p -> _program		5070169						
ANR	5071362	Symbol	p -> _chroot		5070169						
ANR	5071363	Symbol	chroot		5070169						
ANR	5071364	Symbol	pipe		5070169						
ANR	5071365	Symbol	r_sys_fork		5070169						
ANR	5071366	Symbol	p -> _maxfd		5070169						
ANR	5071367	Symbol	r_socket_new		5070169						
ANR	5071368	Symbol	write		5070169						
ANR	5071369	Symbol	ret		5070169						
ANR	5071370	Symbol	setgid		5070169						
ANR	5071371	Symbol	NULL		5070169						
ANR	5071372	Symbol	p -> _maxproc		5070169						
ANR	5071373	Symbol	use_signal		5070169						
ANR	5071374	Symbol	chdir		5070169						
ANR	5071375	Symbol	setuid		5070169						
ANR	5071376	Symbol	RLIMIT_CORE		5070169						
ANR	5071377	Symbol	child_pid		5070169						
ANR	5071378	Symbol	handle_redirection		5070169						
ANR	5071379	Symbol	p -> _chgdir		5070169						
ANR	5071380	Symbol	p -> _seteuid		5070169						
ANR	5071381	Symbol	true		5070169						
ANR	5071382	Symbol	p -> _r2preload		5070169						
ANR	5071383	Symbol	fd		5070169						
ANR	5071384	Symbol	child		5070169						
ANR	5071385	Symbol	p -> _input		5070169						
ANR	5071386	Symbol	p -> _libpath		5070169						
ANR	5071387	Symbol	p -> _docore		5070169						
ANR	5071388	Symbol	r_socket_listen		5070169						
ANR	5071389	Symbol	SIGKILL		5070169						
ANR	5071390	Symbol	RLIMIT_NPROC		5070169						
ANR	5071391	Symbol	is_child		5070169						
ANR	5071392	Symbol	inpl		5070169						
ANR	5071393	Symbol	p -> _timeout		5070169						
ANR	5071394	Symbol	* f2		5070169						
ANR	5071395	Symbol	RLIMIT_STACK		5070169						
ANR	5071396	Symbol	p -> _connect		5070169						
ANR	5071397	Symbol	RLIMIT_NOFILE		5070169						
ANR	5071398	Symbol	p -> _pty		5070169						
ANR	5071399	Symbol	atoi		5070169						
ANR	5071400	Symbol	p -> _setgid		5070169						
ANR	5071401	Symbol	p -> _dodebug		5070169						
ANR	5071402	Symbol	mypid		5070169						
ANR	5071403	Symbol	false		5070169						
ANR	5071404	Symbol	inp		5070169						
ANR	5071405	Symbol	kill		5070169						
ANR	5071406	Symbol	p -> _stderr		5070169						
ANR	5071407	Symbol	p -> _setuid		5070169						
ANR	5071408	Symbol	r_socket_accept		5070169						
ANR	5071409	Symbol	p		5070169						
ANR	5071410	Symbol	q		5070169						
ANR	5071411	Symbol	p -> _system		5070169						
ANR	5071412	Symbol	p -> _timeout_sig		5070169						
ANR	5071413	Symbol	seteuid		5070169						
ANR	5071414	Symbol	p -> _runlib		5070169						
ANR	5071415	Symbol	p -> _r2sleep		5070169						
ANR	5071416	Symbol	* p		5070169						
ANR	5071417	Symbol	* q		5070169						
ANR	5071418	Symbol	p -> _dofork		5070169						
ANR	5071419	Symbol	getpid		5070169						
ANR	5071420	Function	r_run_start	1013:0:21856:26081							
ANR	5071421	FunctionDef	r_run_start (RRunProfile * p)		5071420	0					
ANR	5071422	CompoundStatement		1013:38:21894:26081	5071420	0					
ANR	5071423	IfStatement	if ( p -> _execve )		5071420	0					
ANR	5071424	Condition	p -> _execve	1015:5:21920:21929	5071420	0	True				
ANR	5071425	PtrMemberAccess	p -> _execve		5071420	0					
ANR	5071426	Identifier	p		5071420	0					
ANR	5071427	Identifier	_execve		5071420	1					
ANR	5071428	CompoundStatement		3:17:37:37	5071420	1					
ANR	5071429	Statement	exit	1016:2:21936:21939	5071420	0	True				
ANR	5071430	Statement	(	1016:7:21941:21941	5071420	1	True				
ANR	5071431	Statement	execv	1016:8:21942:21946	5071420	2	True				
ANR	5071432	Statement	(	1016:14:21948:21948	5071420	3	True				
ANR	5071433	Statement	p	1016:15:21949:21949	5071420	4	True				
ANR	5071434	Statement	->	1016:16:21950:21951	5071420	5	True				
ANR	5071435	Statement	_program	1016:18:21952:21959	5071420	6	True				
ANR	5071436	Statement	","	1016:26:21960:21960	5071420	7	True				
ANR	5071437	Statement	(	1016:28:21962:21962	5071420	8	True				
ANR	5071438	Statement	char	1016:29:21963:21966	5071420	9	True				
ANR	5071439	Statement	*	1016:33:21967:21967	5071420	10	True				
ANR	5071440	Statement	const	1016:35:21969:21973	5071420	11	True				
ANR	5071441	Statement	*	1016:40:21974:21974	5071420	12	True				
ANR	5071442	Statement	)	1016:41:21975:21975	5071420	13	True				
ANR	5071443	Statement	p	1016:42:21976:21976	5071420	14	True				
ANR	5071444	Statement	->	1016:43:21977:21978	5071420	15	True				
ANR	5071445	Statement	_args	1016:45:21979:21983	5071420	16	True				
ANR	5071446	Statement	)	1016:50:21984:21984	5071420	17	True				
ANR	5071447	Statement	)	1016:51:21985:21985	5071420	18	True				
ANR	5071448	ExpressionStatement		1016:52:21986:21986	5071420	19	True				
ANR	5071449	IdentifierDeclStatement	posix_spawnattr_t attr = { 0 } ;	1020:1:22047:22075	5071420	1	True				
ANR	5071450	IdentifierDecl	attr = { 0 }		5071420	0					
ANR	5071451	IdentifierDeclType	posix_spawnattr_t		5071420	0					
ANR	5071452	Identifier	attr		5071420	1					
ANR	5071453	AssignmentExpression	attr = { 0 }		5071420	2		=			
ANR	5071454	Identifier	attr		5071420	0					
ANR	5071455	InitializerList	0		5071420	1					
ANR	5071456	PrimaryExpression	0		5071420	0					
ANR	5071457	IdentifierDeclStatement	pid_t pid = - 1 ;	1021:1:22078:22092	5071420	2	True				
ANR	5071458	IdentifierDecl	pid = - 1		5071420	0					
ANR	5071459	IdentifierDeclType	pid_t		5071420	0					
ANR	5071460	Identifier	pid		5071420	1					
ANR	5071461	AssignmentExpression	pid = - 1		5071420	2		=			
ANR	5071462	Identifier	pid		5071420	0					
ANR	5071463	UnaryOperationExpression	- 1		5071420	1					
ANR	5071464	UnaryOperator	-		5071420	0					
ANR	5071465	PrimaryExpression	1		5071420	1					
ANR	5071466	IdentifierDeclStatement	int ret ;	1022:1:22095:22102	5071420	3	True				
ANR	5071467	IdentifierDecl	ret		5071420	0					
ANR	5071468	IdentifierDeclType	int		5071420	0					
ANR	5071469	Identifier	ret		5071420	1					
ANR	5071470	ExpressionStatement	posix_spawnattr_init ( & attr )	1023:1:22105:22133	5071420	4	True				
ANR	5071471	CallExpression	posix_spawnattr_init ( & attr )		5071420	0					
ANR	5071472	Callee	posix_spawnattr_init		5071420	0					
ANR	5071473	Identifier	posix_spawnattr_init		5071420	0					
ANR	5071474	ArgumentList	& attr		5071420	1					
ANR	5071475	Argument	& attr		5071420	0					
ANR	5071476	UnaryOperationExpression	& attr		5071420	0					
ANR	5071477	UnaryOperator	&		5071420	0					
ANR	5071478	Identifier	attr		5071420	1					
ANR	5071479	IfStatement	if ( p -> _args [ 0 ] )		5071420	5					
ANR	5071480	Condition	p -> _args [ 0 ]	1024:5:22140:22150	5071420	0	True				
ANR	5071481	ArrayIndexing	p -> _args [ 0 ]		5071420	0					
ANR	5071482	PtrMemberAccess	p -> _args		5071420	0					
ANR	5071483	Identifier	p		5071420	0					
ANR	5071484	Identifier	_args		5071420	1					
ANR	5071485	PrimaryExpression	0		5071420	1					
ANR	5071486	CompoundStatement		14:2:299:315	5071420	1					
ANR	5071487	IdentifierDeclStatement	char * * envp = r_sys_get_environ ( ) ;	1025:2:22157:22190	5071420	0	True				
ANR	5071488	IdentifierDecl	* * envp = r_sys_get_environ ( )		5071420	0					
ANR	5071489	IdentifierDeclType	char * *		5071420	0					
ANR	5071490	Identifier	envp		5071420	1					
ANR	5071491	AssignmentExpression	* * envp = r_sys_get_environ ( )		5071420	2		=			
ANR	5071492	Identifier	envp		5071420	0					
ANR	5071493	CallExpression	r_sys_get_environ ( )		5071420	1					
ANR	5071494	Callee	r_sys_get_environ		5071420	0					
ANR	5071495	Identifier	r_sys_get_environ		5071420	0					
ANR	5071496	ArgumentList			5071420	1					
ANR	5071497	IdentifierDeclStatement	ut32 spflags = 0 ;	1026:2:22194:22210	5071420	1	True				
ANR	5071498	IdentifierDecl	spflags = 0		5071420	0					
ANR	5071499	IdentifierDeclType	ut32		5071420	0					
ANR	5071500	Identifier	spflags		5071420	1					
ANR	5071501	AssignmentExpression	spflags = 0		5071420	2		=			
ANR	5071502	Identifier	spflags		5071420	0					
ANR	5071503	PrimaryExpression	0		5071420	1					
ANR	5071504	ExpressionStatement	spflags |= POSIX_SPAWN_SETEXEC	1027:2:22245:22275	5071420	2	True				
ANR	5071505	AssignmentExpression	spflags |= POSIX_SPAWN_SETEXEC		5071420	0		|=			
ANR	5071506	Identifier	spflags		5071420	0					
ANR	5071507	Identifier	POSIX_SPAWN_SETEXEC		5071420	1					
ANR	5071508	IfStatement	if ( p -> _aslr == 0 )		5071420	3					
ANR	5071509	Condition	p -> _aslr == 0	1028:6:22283:22295	5071420	0	True				
ANR	5071510	EqualityExpression	p -> _aslr == 0		5071420	0		==			
ANR	5071511	PtrMemberAccess	p -> _aslr		5071420	0					
ANR	5071512	Identifier	p		5071420	0					
ANR	5071513	Identifier	_aslr		5071420	1					
ANR	5071514	PrimaryExpression	0		5071420	1					
ANR	5071515	CompoundStatement		16:21:403:403	5071420	1					
ANR	5071516	Statement	define	1029:1:22301:22306	5071420	0	True				
ANR	5071517	Statement	_POSIX_SPAWN_DISABLE_ASLR	1029:8:22308:22332	5071420	1	True				
ANR	5071518	Statement	0x0100	1029:34:22334:22339	5071420	2	True				
ANR	5071519	ExpressionStatement	spflags |= _POSIX_SPAWN_DISABLE_ASLR	1030:3:22344:22380	5071420	3	True				
ANR	5071520	AssignmentExpression	spflags |= _POSIX_SPAWN_DISABLE_ASLR		5071420	0		|=			
ANR	5071521	Identifier	spflags		5071420	0					
ANR	5071522	Identifier	_POSIX_SPAWN_DISABLE_ASLR		5071420	1					
ANR	5071523	ExpressionStatement	"( void ) posix_spawnattr_setflags ( & attr , spflags )"	1032:2:22388:22435	5071420	4	True				
ANR	5071524	CastExpression	"( void ) posix_spawnattr_setflags ( & attr , spflags )"		5071420	0					
ANR	5071525	CastTarget	void		5071420	0					
ANR	5071526	CallExpression	"posix_spawnattr_setflags ( & attr , spflags )"		5071420	1					
ANR	5071527	Callee	posix_spawnattr_setflags		5071420	0					
ANR	5071528	Identifier	posix_spawnattr_setflags		5071420	0					
ANR	5071529	ArgumentList	& attr		5071420	1					
ANR	5071530	Argument	& attr		5071420	0					
ANR	5071531	UnaryOperationExpression	& attr		5071420	0					
ANR	5071532	UnaryOperator	&		5071420	0					
ANR	5071533	Identifier	attr		5071420	1					
ANR	5071534	Argument	spflags		5071420	1					
ANR	5071535	Identifier	spflags		5071420	0					
ANR	5071536	IfStatement	if ( p -> _bits )		5071420	5					
ANR	5071537	Condition	p -> _bits	1033:6:22443:22450	5071420	0	True				
ANR	5071538	PtrMemberAccess	p -> _bits		5071420	0					
ANR	5071539	Identifier	p		5071420	0					
ANR	5071540	Identifier	_bits		5071420	1					
ANR	5071541	CompoundStatement		23:3:585:599	5071420	1					
ANR	5071542	IdentifierDeclStatement	size_t copied = 1 ;	1034:3:22458:22475	5071420	0	True				
ANR	5071543	IdentifierDecl	copied = 1		5071420	0					
ANR	5071544	IdentifierDeclType	size_t		5071420	0					
ANR	5071545	Identifier	copied		5071420	1					
ANR	5071546	AssignmentExpression	copied = 1		5071420	2		=			
ANR	5071547	Identifier	copied		5071420	0					
ANR	5071548	PrimaryExpression	1		5071420	1					
ANR	5071549	IdentifierDeclStatement	cpu_type_t cpu ;	1035:3:22480:22494	5071420	1	True				
ANR	5071550	IdentifierDecl	cpu		5071420	0					
ANR	5071551	IdentifierDeclType	cpu_type_t		5071420	0					
ANR	5071552	Identifier	cpu		5071420	1					
ANR	5071553	ExpressionStatement	cpu = CPU_TYPE_I386	1037:3:22526:22545	5071420	2	True				
ANR	5071554	AssignmentExpression	cpu = CPU_TYPE_I386		5071420	0		=			
ANR	5071555	Identifier	cpu		5071420	0					
ANR	5071556	Identifier	CPU_TYPE_I386		5071420	1					
ANR	5071557	IfStatement	if ( p -> _bits == 64 )		5071420	3					
ANR	5071558	Condition	p -> _bits == 64	1038:7:22554:22567	5071420	0	True				
ANR	5071559	EqualityExpression	p -> _bits == 64		5071420	0		==			
ANR	5071560	PtrMemberAccess	p -> _bits		5071420	0					
ANR	5071561	Identifier	p		5071420	0					
ANR	5071562	Identifier	_bits		5071420	1					
ANR	5071563	PrimaryExpression	64		5071420	1					
ANR	5071564	CompoundStatement		26:23:675:675	5071420	1					
ANR	5071565	ExpressionStatement	cpu |= CPU_ARCH_ABI64	1039:4:22576:22597	5071420	0	True				
ANR	5071566	AssignmentExpression	cpu |= CPU_ARCH_ABI64		5071420	0		|=			
ANR	5071567	Identifier	cpu		5071420	0					
ANR	5071568	Identifier	CPU_ARCH_ABI64		5071420	1					
ANR	5071569	ExpressionStatement	"posix_spawnattr_setbinpref_np ( & attr , 1 , & cpu , & copied )"	1044:3:22643:22704	5071420	4	True				
ANR	5071570	CallExpression	"posix_spawnattr_setbinpref_np ( & attr , 1 , & cpu , & copied )"		5071420	0					
ANR	5071571	Callee	posix_spawnattr_setbinpref_np		5071420	0					
ANR	5071572	Identifier	posix_spawnattr_setbinpref_np		5071420	0					
ANR	5071573	ArgumentList	& attr		5071420	1					
ANR	5071574	Argument	& attr		5071420	0					
ANR	5071575	UnaryOperationExpression	& attr		5071420	0					
ANR	5071576	UnaryOperator	&		5071420	0					
ANR	5071577	Identifier	attr		5071420	1					
ANR	5071578	Argument	1		5071420	1					
ANR	5071579	PrimaryExpression	1		5071420	0					
ANR	5071580	Argument	& cpu		5071420	2					
ANR	5071581	UnaryOperationExpression	& cpu		5071420	0					
ANR	5071582	UnaryOperator	&		5071420	0					
ANR	5071583	Identifier	cpu		5071420	1					
ANR	5071584	Argument	& copied		5071420	3					
ANR	5071585	UnaryOperationExpression	& copied		5071420	0					
ANR	5071586	UnaryOperator	&		5071420	0					
ANR	5071587	Identifier	copied		5071420	1					
ANR	5071588	ExpressionStatement	"ret = posix_spawnp ( & pid , p -> _args [ 0 ] , NULL , & attr , p -> _args , envp )"	1047:2:22712:22782	5071420	6	True				
ANR	5071589	AssignmentExpression	"ret = posix_spawnp ( & pid , p -> _args [ 0 ] , NULL , & attr , p -> _args , envp )"		5071420	0		=			
ANR	5071590	Identifier	ret		5071420	0					
ANR	5071591	CallExpression	"posix_spawnp ( & pid , p -> _args [ 0 ] , NULL , & attr , p -> _args , envp )"		5071420	1					
ANR	5071592	Callee	posix_spawnp		5071420	0					
ANR	5071593	Identifier	posix_spawnp		5071420	0					
ANR	5071594	ArgumentList	& pid		5071420	1					
ANR	5071595	Argument	& pid		5071420	0					
ANR	5071596	UnaryOperationExpression	& pid		5071420	0					
ANR	5071597	UnaryOperator	&		5071420	0					
ANR	5071598	Identifier	pid		5071420	1					
ANR	5071599	Argument	p -> _args [ 0 ]		5071420	1					
ANR	5071600	ArrayIndexing	p -> _args [ 0 ]		5071420	0					
ANR	5071601	PtrMemberAccess	p -> _args		5071420	0					
ANR	5071602	Identifier	p		5071420	0					
ANR	5071603	Identifier	_args		5071420	1					
ANR	5071604	PrimaryExpression	0		5071420	1					
ANR	5071605	Argument	NULL		5071420	2					
ANR	5071606	Identifier	NULL		5071420	0					
ANR	5071607	Argument	& attr		5071420	3					
ANR	5071608	UnaryOperationExpression	& attr		5071420	0					
ANR	5071609	UnaryOperator	&		5071420	0					
ANR	5071610	Identifier	attr		5071420	1					
ANR	5071611	Argument	p -> _args		5071420	4					
ANR	5071612	PtrMemberAccess	p -> _args		5071420	0					
ANR	5071613	Identifier	p		5071420	0					
ANR	5071614	Identifier	_args		5071420	1					
ANR	5071615	Argument	envp		5071420	5					
ANR	5071616	Identifier	envp		5071420	0					
ANR	5071617	SwitchStatement	switch ( ret )		5071420	7					
ANR	5071618	Condition	ret	1049:10:22794:22796	5071420	0	True				
ANR	5071619	Identifier	ret		5071420	0					
ANR	5071620	CompoundStatement		37:15:904:904	5071420	1					
ANR	5071621	Label	case 0 :	1050:2:22803:22809	5071420	0	True				
ANR	5071622	BreakStatement	break ;	1051:3:22814:22819	5071420	1	True				
ANR	5071623	Label	case 22 :	1052:2:22823:22830	5071420	2	True				
ANR	5071624	ExpressionStatement	"eprintf ( ""posix_spawnp: Invalid argument\\n"" )"	1053:3:22835:22879	5071420	3	True				
ANR	5071625	CallExpression	"eprintf ( ""posix_spawnp: Invalid argument\\n"" )"		5071420	0					
ANR	5071626	Callee	eprintf		5071420	0					
ANR	5071627	Identifier	eprintf		5071420	0					
ANR	5071628	ArgumentList	"""posix_spawnp: Invalid argument\\n"""		5071420	1					
ANR	5071629	Argument	"""posix_spawnp: Invalid argument\\n"""		5071420	0					
ANR	5071630	PrimaryExpression	"""posix_spawnp: Invalid argument\\n"""		5071420	0					
ANR	5071631	BreakStatement	break ;	1054:3:22884:22889	5071420	4	True				
ANR	5071632	Label	case 86 :	1055:2:22893:22900	5071420	5	True				
ANR	5071633	ExpressionStatement	"eprintf ( ""posix_spawnp: Unsupported architecture\\n"" )"	1056:3:22905:22957	5071420	6	True				
ANR	5071634	CallExpression	"eprintf ( ""posix_spawnp: Unsupported architecture\\n"" )"		5071420	0					
ANR	5071635	Callee	eprintf		5071420	0					
ANR	5071636	Identifier	eprintf		5071420	0					
ANR	5071637	ArgumentList	"""posix_spawnp: Unsupported architecture\\n"""		5071420	1					
ANR	5071638	Argument	"""posix_spawnp: Unsupported architecture\\n"""		5071420	0					
ANR	5071639	PrimaryExpression	"""posix_spawnp: Unsupported architecture\\n"""		5071420	0					
ANR	5071640	BreakStatement	break ;	1057:3:22962:22967	5071420	7	True				
ANR	5071641	Label	default :	1058:2:22971:22978	5071420	8	True				
ANR	5071642	Identifier	default		5071420	0					
ANR	5071643	ExpressionStatement	"eprintf ( ""posix_spawnp: unknown error %d\\n"" , ret )"	1059:3:22983:23032	5071420	9	True				
ANR	5071644	CallExpression	"eprintf ( ""posix_spawnp: unknown error %d\\n"" , ret )"		5071420	0					
ANR	5071645	Callee	eprintf		5071420	0					
ANR	5071646	Identifier	eprintf		5071420	0					
ANR	5071647	ArgumentList	"""posix_spawnp: unknown error %d\\n"""		5071420	1					
ANR	5071648	Argument	"""posix_spawnp: unknown error %d\\n"""		5071420	0					
ANR	5071649	PrimaryExpression	"""posix_spawnp: unknown error %d\\n"""		5071420	0					
ANR	5071650	Argument	ret		5071420	1					
ANR	5071651	Identifier	ret		5071420	0					
ANR	5071652	ExpressionStatement	"perror ( ""posix_spawnp"" )"	1060:3:23037:23060	5071420	10	True				
ANR	5071653	CallExpression	"perror ( ""posix_spawnp"" )"		5071420	0					
ANR	5071654	Callee	perror		5071420	0					
ANR	5071655	Identifier	perror		5071420	0					
ANR	5071656	ArgumentList	"""posix_spawnp"""		5071420	1					
ANR	5071657	Argument	"""posix_spawnp"""		5071420	0					
ANR	5071658	PrimaryExpression	"""posix_spawnp"""		5071420	0					
ANR	5071659	BreakStatement	break ;	1061:3:23065:23070	5071420	11	True				
ANR	5071660	ExpressionStatement	exit ( ret )	1063:2:23078:23088	5071420	8	True				
ANR	5071661	CallExpression	exit ( ret )		5071420	0					
ANR	5071662	Callee	exit		5071420	0					
ANR	5071663	Identifier	exit		5071420	0					
ANR	5071664	ArgumentList	ret		5071420	1					
ANR	5071665	Argument	ret		5071420	0					
ANR	5071666	Identifier	ret		5071420	0					
ANR	5071667	IfStatement	if ( p -> _system )		5071420	6					
ANR	5071668	Condition	p -> _system	1066:5:23105:23114	5071420	0	True				
ANR	5071669	PtrMemberAccess	p -> _system		5071420	0					
ANR	5071670	Identifier	p		5071420	0					
ANR	5071671	Identifier	_system		5071420	1					
ANR	5071672	CompoundStatement		54:17:1222:1222	5071420	1					
ANR	5071673	IfStatement	if ( p -> _pid )		5071420	0					
ANR	5071674	Condition	p -> _pid	1067:6:23125:23131	5071420	0	True				
ANR	5071675	PtrMemberAccess	p -> _pid		5071420	0					
ANR	5071676	Identifier	p		5071420	0					
ANR	5071677	Identifier	_pid		5071420	1					
ANR	5071678	CompoundStatement		55:15:1239:1239	5071420	1					
ANR	5071679	ExpressionStatement	"eprintf ( ""PID: Cannot determine pid with 'system' directive. Use 'program'.\\n"" )"	1068:3:23139:23218	5071420	0	True				
ANR	5071680	CallExpression	"eprintf ( ""PID: Cannot determine pid with 'system' directive. Use 'program'.\\n"" )"		5071420	0					
ANR	5071681	Callee	eprintf		5071420	0					
ANR	5071682	Identifier	eprintf		5071420	0					
ANR	5071683	ArgumentList	"""PID: Cannot determine pid with 'system' directive. Use 'program'.\\n"""		5071420	1					
ANR	5071684	Argument	"""PID: Cannot determine pid with 'system' directive. Use 'program'.\\n"""		5071420	0					
ANR	5071685	PrimaryExpression	"""PID: Cannot determine pid with 'system' directive. Use 'program'.\\n"""		5071420	0					
ANR	5071686	ExpressionStatement	exit ( r_sys_cmd ( p -> _system ) )	1070:2:23226:23255	5071420	1	True				
ANR	5071687	CallExpression	exit ( r_sys_cmd ( p -> _system ) )		5071420	0					
ANR	5071688	Callee	exit		5071420	0					
ANR	5071689	Identifier	exit		5071420	0					
ANR	5071690	ArgumentList	r_sys_cmd ( p -> _system )		5071420	1					
ANR	5071691	Argument	r_sys_cmd ( p -> _system )		5071420	0					
ANR	5071692	CallExpression	r_sys_cmd ( p -> _system )		5071420	0					
ANR	5071693	Callee	r_sys_cmd		5071420	0					
ANR	5071694	Identifier	r_sys_cmd		5071420	0					
ANR	5071695	ArgumentList	p -> _system		5071420	1					
ANR	5071696	Argument	p -> _system		5071420	0					
ANR	5071697	PtrMemberAccess	p -> _system		5071420	0					
ANR	5071698	Identifier	p		5071420	0					
ANR	5071699	Identifier	_system		5071420	1					
ANR	5071700	IfStatement	if ( p -> _program )		5071420	7					
ANR	5071701	Condition	p -> _program	1072:5:23265:23275	5071420	0	True				
ANR	5071702	PtrMemberAccess	p -> _program		5071420	0					
ANR	5071703	Identifier	p		5071420	0					
ANR	5071704	Identifier	_program		5071420	1					
ANR	5071705	CompoundStatement		60:18:1383:1383	5071420	1					
ANR	5071706	IfStatement	if ( ! r_file_exists ( p -> _program ) )		5071420	0					
ANR	5071707	Condition	! r_file_exists ( p -> _program )	1073:6:23286:23313	5071420	0	True				
ANR	5071708	UnaryOperationExpression	! r_file_exists ( p -> _program )		5071420	0					
ANR	5071709	UnaryOperator	!		5071420	0					
ANR	5071710	CallExpression	r_file_exists ( p -> _program )		5071420	1					
ANR	5071711	Callee	r_file_exists		5071420	0					
ANR	5071712	Identifier	r_file_exists		5071420	0					
ANR	5071713	ArgumentList	p -> _program		5071420	1					
ANR	5071714	Argument	p -> _program		5071420	0					
ANR	5071715	PtrMemberAccess	p -> _program		5071420	0					
ANR	5071716	Identifier	p		5071420	0					
ANR	5071717	Identifier	_program		5071420	1					
ANR	5071718	CompoundStatement		62:3:1426:1468	5071420	1					
ANR	5071719	IdentifierDeclStatement	char * progpath = r_file_path ( p -> _program ) ;	1074:3:23321:23363	5071420	0	True				
ANR	5071720	IdentifierDecl	* progpath = r_file_path ( p -> _program )		5071420	0					
ANR	5071721	IdentifierDeclType	char *		5071420	0					
ANR	5071722	Identifier	progpath		5071420	1					
ANR	5071723	AssignmentExpression	* progpath = r_file_path ( p -> _program )		5071420	2		=			
ANR	5071724	Identifier	progpath		5071420	0					
ANR	5071725	CallExpression	r_file_path ( p -> _program )		5071420	1					
ANR	5071726	Callee	r_file_path		5071420	0					
ANR	5071727	Identifier	r_file_path		5071420	0					
ANR	5071728	ArgumentList	p -> _program		5071420	1					
ANR	5071729	Argument	p -> _program		5071420	0					
ANR	5071730	PtrMemberAccess	p -> _program		5071420	0					
ANR	5071731	Identifier	p		5071420	0					
ANR	5071732	Identifier	_program		5071420	1					
ANR	5071733	IfStatement	if ( progpath && * progpath )		5071420	1					
ANR	5071734	Condition	progpath && * progpath	1075:7:23372:23392	5071420	0	True				
ANR	5071735	AndExpression	progpath && * progpath		5071420	0		&&			
ANR	5071736	Identifier	progpath		5071420	0					
ANR	5071737	UnaryOperationExpression	* progpath		5071420	1					
ANR	5071738	UnaryOperator	*		5071420	0					
ANR	5071739	Identifier	progpath		5071420	1					
ANR	5071740	CompoundStatement		63:30:1500:1500	5071420	1					
ANR	5071741	ExpressionStatement	free ( p -> _program )	1076:4:23401:23419	5071420	0	True				
ANR	5071742	CallExpression	free ( p -> _program )		5071420	0					
ANR	5071743	Callee	free		5071420	0					
ANR	5071744	Identifier	free		5071420	0					
ANR	5071745	ArgumentList	p -> _program		5071420	1					
ANR	5071746	Argument	p -> _program		5071420	0					
ANR	5071747	PtrMemberAccess	p -> _program		5071420	0					
ANR	5071748	Identifier	p		5071420	0					
ANR	5071749	Identifier	_program		5071420	1					
ANR	5071750	ExpressionStatement	p -> _program = progpath	1077:4:23425:23447	5071420	1	True				
ANR	5071751	AssignmentExpression	p -> _program = progpath		5071420	0		=			
ANR	5071752	PtrMemberAccess	p -> _program		5071420	0					
ANR	5071753	Identifier	p		5071420	0					
ANR	5071754	Identifier	_program		5071420	1					
ANR	5071755	Identifier	progpath		5071420	1					
ANR	5071756	ElseStatement	else		5071420	0					
ANR	5071757	CompoundStatement		66:10:1564:1564	5071420	0					
ANR	5071758	ExpressionStatement	free ( progpath )	1079:4:23465:23480	5071420	0	True				
ANR	5071759	CallExpression	free ( progpath )		5071420	0					
ANR	5071760	Callee	free		5071420	0					
ANR	5071761	Identifier	free		5071420	0					
ANR	5071762	ArgumentList	progpath		5071420	1					
ANR	5071763	Argument	progpath		5071420	0					
ANR	5071764	Identifier	progpath		5071420	0					
ANR	5071765	ExpressionStatement	"eprintf ( ""rarun2: %s: file not found\\n"" , p -> _program )"	1080:4:23486:23539	5071420	1	True				
ANR	5071766	CallExpression	"eprintf ( ""rarun2: %s: file not found\\n"" , p -> _program )"		5071420	0					
ANR	5071767	Callee	eprintf		5071420	0					
ANR	5071768	Identifier	eprintf		5071420	0					
ANR	5071769	ArgumentList	"""rarun2: %s: file not found\\n"""		5071420	1					
ANR	5071770	Argument	"""rarun2: %s: file not found\\n"""		5071420	0					
ANR	5071771	PrimaryExpression	"""rarun2: %s: file not found\\n"""		5071420	0					
ANR	5071772	Argument	p -> _program		5071420	1					
ANR	5071773	PtrMemberAccess	p -> _program		5071420	0					
ANR	5071774	Identifier	p		5071420	0					
ANR	5071775	Identifier	_program		5071420	1					
ANR	5071776	ReturnStatement	return 1 ;	1081:4:23545:23553	5071420	2	True				
ANR	5071777	PrimaryExpression	1		5071420	0					
ANR	5071778	CompoundStatement		74:4:1722:1727	5071420	1					
ANR	5071779	IdentifierDeclStatement	int i ;	1086:4:23617:23622	5071420	0	True				
ANR	5071780	IdentifierDecl	i		5071420	0					
ANR	5071781	IdentifierDeclType	int		5071420	0					
ANR	5071782	Identifier	i		5071420	1					
ANR	5071783	ForStatement	for ( i = 3 ; i < 10 ; i ++ )		5071420	1					
ANR	5071784	ForInit	i = 3 ;	1087:8:23632:23637	5071420	0	True				
ANR	5071785	AssignmentExpression	i = 3		5071420	0		=			
ANR	5071786	Identifier	i		5071420	0					
ANR	5071787	PrimaryExpression	3		5071420	1					
ANR	5071788	Condition	i < 10	1087:15:23639:23644	5071420	1	True				
ANR	5071789	RelationalExpression	i < 10		5071420	0		<			
ANR	5071790	Identifier	i		5071420	0					
ANR	5071791	PrimaryExpression	10		5071420	1					
ANR	5071792	PostIncDecOperationExpression	i ++	1087:23:23647:23649	5071420	2	True				
ANR	5071793	Identifier	i		5071420	0					
ANR	5071794	IncDec	++		5071420	1					
ANR	5071795	CompoundStatement		75:28:1757:1757	5071420	3					
ANR	5071796	ExpressionStatement	close ( i )	1088:4:23658:23667	5071420	0	True				
ANR	5071797	CallExpression	close ( i )		5071420	0					
ANR	5071798	Callee	close		5071420	0					
ANR	5071799	Identifier	close		5071420	0					
ANR	5071800	ArgumentList	i		5071420	1					
ANR	5071801	Argument	i		5071420	0					
ANR	5071802	Identifier	i		5071420	0					
ANR	5071803	IfStatement	if ( p -> _setgid )		5071420	2					
ANR	5071804	Condition	p -> _setgid	1092:6:23711:23720	5071420	0	True				
ANR	5071805	PtrMemberAccess	p -> _setgid		5071420	0					
ANR	5071806	Identifier	p		5071420	0					
ANR	5071807	Identifier	_setgid		5071420	1					
ANR	5071808	CompoundStatement		81:3:1833:1869	5071420	1					
ANR	5071809	IdentifierDeclStatement	int ret = setgid ( atoi ( p -> _setgid ) ) ;	1093:3:23728:23764	5071420	0	True				
ANR	5071810	IdentifierDecl	ret = setgid ( atoi ( p -> _setgid ) )		5071420	0					
ANR	5071811	IdentifierDeclType	int		5071420	0					
ANR	5071812	Identifier	ret		5071420	1					
ANR	5071813	AssignmentExpression	ret = setgid ( atoi ( p -> _setgid ) )		5071420	2		=			
ANR	5071814	Identifier	ret		5071420	0					
ANR	5071815	CallExpression	setgid ( atoi ( p -> _setgid ) )		5071420	1					
ANR	5071816	Callee	setgid		5071420	0					
ANR	5071817	Identifier	setgid		5071420	0					
ANR	5071818	ArgumentList	atoi ( p -> _setgid )		5071420	1					
ANR	5071819	Argument	atoi ( p -> _setgid )		5071420	0					
ANR	5071820	CallExpression	atoi ( p -> _setgid )		5071420	0					
ANR	5071821	Callee	atoi		5071420	0					
ANR	5071822	Identifier	atoi		5071420	0					
ANR	5071823	ArgumentList	p -> _setgid		5071420	1					
ANR	5071824	Argument	p -> _setgid		5071420	0					
ANR	5071825	PtrMemberAccess	p -> _setgid		5071420	0					
ANR	5071826	Identifier	p		5071420	0					
ANR	5071827	Identifier	_setgid		5071420	1					
ANR	5071828	IfStatement	if ( ret < 0 )		5071420	1					
ANR	5071829	Condition	ret < 0	1094:7:23773:23779	5071420	0	True				
ANR	5071830	RelationalExpression	ret < 0		5071420	0		<			
ANR	5071831	Identifier	ret		5071420	0					
ANR	5071832	PrimaryExpression	0		5071420	1					
ANR	5071833	CompoundStatement		82:16:1887:1887	5071420	1					
ANR	5071834	ReturnStatement	return 1 ;	1095:4:23788:23796	5071420	0	True				
ANR	5071835	PrimaryExpression	1		5071420	0					
ANR	5071836	IfStatement	if ( p -> _pid )		5071420	3					
ANR	5071837	Condition	p -> _pid	1098:6:23813:23819	5071420	0	True				
ANR	5071838	PtrMemberAccess	p -> _pid		5071420	0					
ANR	5071839	Identifier	p		5071420	0					
ANR	5071840	Identifier	_pid		5071420	1					
ANR	5071841	CompoundStatement		86:15:1927:1927	5071420	1					
ANR	5071842	ExpressionStatement	"eprintf ( ""PID: %d\\n"" , getpid ( ) )"	1099:3:23827:23859	5071420	0	True				
ANR	5071843	CallExpression	"eprintf ( ""PID: %d\\n"" , getpid ( ) )"		5071420	0					
ANR	5071844	Callee	eprintf		5071420	0					
ANR	5071845	Identifier	eprintf		5071420	0					
ANR	5071846	ArgumentList	"""PID: %d\\n"""		5071420	1					
ANR	5071847	Argument	"""PID: %d\\n"""		5071420	0					
ANR	5071848	PrimaryExpression	"""PID: %d\\n"""		5071420	0					
ANR	5071849	Argument	getpid ( )		5071420	1					
ANR	5071850	CallExpression	getpid ( )		5071420	0					
ANR	5071851	Callee	getpid		5071420	0					
ANR	5071852	Identifier	getpid		5071420	0					
ANR	5071853	ArgumentList			5071420	1					
ANR	5071854	IfStatement	if ( p -> _pidfile )		5071420	4					
ANR	5071855	Condition	p -> _pidfile	1101:6:23871:23881	5071420	0	True				
ANR	5071856	PtrMemberAccess	p -> _pidfile		5071420	0					
ANR	5071857	Identifier	p		5071420	0					
ANR	5071858	Identifier	_pidfile		5071420	1					
ANR	5071859	CompoundStatement		90:3:1994:2009	5071420	1					
ANR	5071860	IdentifierDeclStatement	char pidstr [ 32 ] ;	1102:3:23889:23904	5071420	0	True				
ANR	5071861	IdentifierDecl	pidstr [ 32 ]		5071420	0					
ANR	5071862	IdentifierDeclType	char [ 32 ]		5071420	0					
ANR	5071863	Identifier	pidstr		5071420	1					
ANR	5071864	PrimaryExpression	32		5071420	2					
ANR	5071865	ExpressionStatement	"snprintf ( pidstr , sizeof ( pidstr ) , ""%d\\n"" , getpid ( ) )"	1103:3:23909:23962	5071420	1	True				
ANR	5071866	CallExpression	"snprintf ( pidstr , sizeof ( pidstr ) , ""%d\\n"" , getpid ( ) )"		5071420	0					
ANR	5071867	Callee	snprintf		5071420	0					
ANR	5071868	Identifier	snprintf		5071420	0					
ANR	5071869	ArgumentList	pidstr		5071420	1					
ANR	5071870	Argument	pidstr		5071420	0					
ANR	5071871	Identifier	pidstr		5071420	0					
ANR	5071872	Argument	sizeof ( pidstr )		5071420	1					
ANR	5071873	SizeofExpression	sizeof ( pidstr )		5071420	0					
ANR	5071874	Sizeof	sizeof		5071420	0					
ANR	5071875	SizeofOperand	pidstr		5071420	1					
ANR	5071876	Argument	"""%d\\n"""		5071420	2					
ANR	5071877	PrimaryExpression	"""%d\\n"""		5071420	0					
ANR	5071878	Argument	getpid ( )		5071420	3					
ANR	5071879	CallExpression	getpid ( )		5071420	0					
ANR	5071880	Callee	getpid		5071420	0					
ANR	5071881	Identifier	getpid		5071420	0					
ANR	5071882	ArgumentList			5071420	1					
ANR	5071883	ExpressionStatement	"r_file_dump ( p -> _pidfile , ( const ut8 * ) pidstr , strlen ( pidstr ) , 0 )"	1104:3:23967:24040	5071420	2	True				
ANR	5071884	CallExpression	"r_file_dump ( p -> _pidfile , ( const ut8 * ) pidstr , strlen ( pidstr ) , 0 )"		5071420	0					
ANR	5071885	Callee	r_file_dump		5071420	0					
ANR	5071886	Identifier	r_file_dump		5071420	0					
ANR	5071887	ArgumentList	p -> _pidfile		5071420	1					
ANR	5071888	Argument	p -> _pidfile		5071420	0					
ANR	5071889	PtrMemberAccess	p -> _pidfile		5071420	0					
ANR	5071890	Identifier	p		5071420	0					
ANR	5071891	Identifier	_pidfile		5071420	1					
ANR	5071892	Argument	( const ut8 * ) pidstr		5071420	1					
ANR	5071893	CastExpression	( const ut8 * ) pidstr		5071420	0					
ANR	5071894	CastTarget	const ut8 *		5071420	0					
ANR	5071895	Identifier	pidstr		5071420	1					
ANR	5071896	Argument	strlen ( pidstr )		5071420	2					
ANR	5071897	CallExpression	strlen ( pidstr )		5071420	0					
ANR	5071898	Callee	strlen		5071420	0					
ANR	5071899	Identifier	strlen		5071420	0					
ANR	5071900	ArgumentList	pidstr		5071420	1					
ANR	5071901	Argument	pidstr		5071420	0					
ANR	5071902	Identifier	pidstr		5071420	0					
ANR	5071903	Argument	0		5071420	3					
ANR	5071904	PrimaryExpression	0		5071420	0					
ANR	5071905	IfStatement	if ( p -> _nice )		5071420	5					
ANR	5071906	Condition	p -> _nice	1110:6:24060:24067	5071420	0	True				
ANR	5071907	PtrMemberAccess	p -> _nice		5071420	0					
ANR	5071908	Identifier	p		5071420	0					
ANR	5071909	Identifier	_nice		5071420	1					
ANR	5071910	CompoundStatement		98:16:2175:2175	5071420	1					
ANR	5071911	IfStatement	if ( nice ( p -> _nice ) == - 1 )		5071420	0					
ANR	5071912	Condition	nice ( p -> _nice ) == - 1	1112:7:24115:24135	5071420	0	True				
ANR	5071913	EqualityExpression	nice ( p -> _nice ) == - 1		5071420	0		==			
ANR	5071914	CallExpression	nice ( p -> _nice )		5071420	0					
ANR	5071915	Callee	nice		5071420	0					
ANR	5071916	Identifier	nice		5071420	0					
ANR	5071917	ArgumentList	p -> _nice		5071420	1					
ANR	5071918	Argument	p -> _nice		5071420	0					
ANR	5071919	PtrMemberAccess	p -> _nice		5071420	0					
ANR	5071920	Identifier	p		5071420	0					
ANR	5071921	Identifier	_nice		5071420	1					
ANR	5071922	UnaryOperationExpression	- 1		5071420	1					
ANR	5071923	UnaryOperator	-		5071420	0					
ANR	5071924	PrimaryExpression	1		5071420	1					
ANR	5071925	CompoundStatement		100:30:2243:2243	5071420	1					
ANR	5071926	ReturnStatement	return 1 ;	1113:4:24144:24152	5071420	0	True				
ANR	5071927	PrimaryExpression	1		5071420	0					
ANR	5071928	Statement	exit	1121:2:24281:24284	5071420	6	True				
ANR	5071929	Statement	(	1121:7:24286:24286	5071420	7	True				
ANR	5071930	Statement	execv	1121:8:24287:24291	5071420	8	True				
ANR	5071931	Statement	(	1121:14:24293:24293	5071420	9	True				
ANR	5071932	Statement	p	1121:15:24294:24294	5071420	10	True				
ANR	5071933	Statement	->	1121:16:24295:24296	5071420	11	True				
ANR	5071934	Statement	_program	1121:18:24297:24304	5071420	12	True				
ANR	5071935	Statement	","	1121:26:24305:24305	5071420	13	True				
ANR	5071936	Statement	(	1121:28:24307:24307	5071420	14	True				
ANR	5071937	Statement	char	1121:29:24308:24311	5071420	15	True				
ANR	5071938	Statement	*	1121:33:24312:24312	5071420	16	True				
ANR	5071939	Statement	const	1121:35:24314:24318	5071420	17	True				
ANR	5071940	Statement	*	1121:40:24319:24319	5071420	18	True				
ANR	5071941	Statement	)	1121:41:24320:24320	5071420	19	True				
ANR	5071942	Statement	p	1121:42:24321:24321	5071420	20	True				
ANR	5071943	Statement	->	1121:43:24322:24323	5071420	21	True				
ANR	5071944	Statement	_args	1121:45:24324:24328	5071420	22	True				
ANR	5071945	Statement	)	1121:50:24329:24329	5071420	23	True				
ANR	5071946	Statement	)	1121:51:24330:24330	5071420	24	True				
ANR	5071947	ExpressionStatement		1121:52:24331:24331	5071420	25	True				
ANR	5071948	IfStatement	if ( p -> _runlib )		5071420	8					
ANR	5071949	Condition	p -> _runlib	1124:5:24348:24357	5071420	0	True				
ANR	5071950	PtrMemberAccess	p -> _runlib		5071420	0					
ANR	5071951	Identifier	p		5071420	0					
ANR	5071952	Identifier	_runlib		5071420	1					
ANR	5071953	CompoundStatement		122:2:2711:2766	5071420	1					
ANR	5071954	IfStatement	if ( ! p -> _runlib_fcn )		5071420	0					
ANR	5071955	Condition	! p -> _runlib_fcn	1125:6:24368:24382	5071420	0	True				
ANR	5071956	UnaryOperationExpression	! p -> _runlib_fcn		5071420	0					
ANR	5071957	UnaryOperator	!		5071420	0					
ANR	5071958	PtrMemberAccess	p -> _runlib_fcn		5071420	1					
ANR	5071959	Identifier	p		5071420	0					
ANR	5071960	Identifier	_runlib_fcn		5071420	1					
ANR	5071961	CompoundStatement		113:23:2490:2490	5071420	1					
ANR	5071962	ExpressionStatement	"eprintf ( ""No function specified. Please set runlib.fcn\\n"" )"	1126:3:24390:24448	5071420	0	True				
ANR	5071963	CallExpression	"eprintf ( ""No function specified. Please set runlib.fcn\\n"" )"		5071420	0					
ANR	5071964	Callee	eprintf		5071420	0					
ANR	5071965	Identifier	eprintf		5071420	0					
ANR	5071966	ArgumentList	"""No function specified. Please set runlib.fcn\\n"""		5071420	1					
ANR	5071967	Argument	"""No function specified. Please set runlib.fcn\\n"""		5071420	0					
ANR	5071968	PrimaryExpression	"""No function specified. Please set runlib.fcn\\n"""		5071420	0					
ANR	5071969	ReturnStatement	return 1 ;	1127:3:24453:24461	5071420	1	True				
ANR	5071970	PrimaryExpression	1		5071420	0					
ANR	5071971	IdentifierDeclStatement	void * addr = r_lib_dl_open ( p -> _runlib ) ;	1129:2:24469:24508	5071420	1	True				
ANR	5071972	IdentifierDecl	* addr = r_lib_dl_open ( p -> _runlib )		5071420	0					
ANR	5071973	IdentifierDeclType	void *		5071420	0					
ANR	5071974	Identifier	addr		5071420	1					
ANR	5071975	AssignmentExpression	* addr = r_lib_dl_open ( p -> _runlib )		5071420	2		=			
ANR	5071976	Identifier	addr		5071420	0					
ANR	5071977	CallExpression	r_lib_dl_open ( p -> _runlib )		5071420	1					
ANR	5071978	Callee	r_lib_dl_open		5071420	0					
ANR	5071979	Identifier	r_lib_dl_open		5071420	0					
ANR	5071980	ArgumentList	p -> _runlib		5071420	1					
ANR	5071981	Argument	p -> _runlib		5071420	0					
ANR	5071982	PtrMemberAccess	p -> _runlib		5071420	0					
ANR	5071983	Identifier	p		5071420	0					
ANR	5071984	Identifier	_runlib		5071420	1					
ANR	5071985	IfStatement	if ( ! addr )		5071420	2					
ANR	5071986	Condition	! addr	1130:6:24516:24520	5071420	0	True				
ANR	5071987	UnaryOperationExpression	! addr		5071420	0					
ANR	5071988	UnaryOperator	!		5071420	0					
ANR	5071989	Identifier	addr		5071420	1					
ANR	5071990	CompoundStatement		118:13:2628:2628	5071420	1					
ANR	5071991	ExpressionStatement	"eprintf ( ""Could not load the library '%s'\\n"" , p -> _runlib )"	1131:3:24528:24585	5071420	0	True				
ANR	5071992	CallExpression	"eprintf ( ""Could not load the library '%s'\\n"" , p -> _runlib )"		5071420	0					
ANR	5071993	Callee	eprintf		5071420	0					
ANR	5071994	Identifier	eprintf		5071420	0					
ANR	5071995	ArgumentList	"""Could not load the library '%s'\\n"""		5071420	1					
ANR	5071996	Argument	"""Could not load the library '%s'\\n"""		5071420	0					
ANR	5071997	PrimaryExpression	"""Could not load the library '%s'\\n"""		5071420	0					
ANR	5071998	Argument	p -> _runlib		5071420	1					
ANR	5071999	PtrMemberAccess	p -> _runlib		5071420	0					
ANR	5072000	Identifier	p		5071420	0					
ANR	5072001	Identifier	_runlib		5071420	1					
ANR	5072002	ReturnStatement	return 1 ;	1132:3:24590:24598	5071420	1	True				
ANR	5072003	PrimaryExpression	1		5071420	0					
ANR	5072004	IdentifierDeclStatement	"void ( * fcn ) ( void ) = r_lib_dl_sym ( addr , p -> _runlib_fcn ) ;"	1134:2:24606:24661	5071420	3	True				
ANR	5072005	IdentifierDecl	"( * fcn ) ( void ) = r_lib_dl_sym ( addr , p -> _runlib_fcn )"		5071420	0					
ANR	5072006	IdentifierDeclType	void ( * ) ( void )		5071420	0					
ANR	5072007	Identifier	fcn		5071420	1					
ANR	5072008	AssignmentExpression	"( * fcn ) ( void ) = r_lib_dl_sym ( addr , p -> _runlib_fcn )"		5071420	2		=			
ANR	5072009	Identifier	fcn		5071420	0					
ANR	5072010	CallExpression	"r_lib_dl_sym ( addr , p -> _runlib_fcn )"		5071420	1					
ANR	5072011	Callee	r_lib_dl_sym		5071420	0					
ANR	5072012	Identifier	r_lib_dl_sym		5071420	0					
ANR	5072013	ArgumentList	addr		5071420	1					
ANR	5072014	Argument	addr		5071420	0					
ANR	5072015	Identifier	addr		5071420	0					
ANR	5072016	Argument	p -> _runlib_fcn		5071420	1					
ANR	5072017	PtrMemberAccess	p -> _runlib_fcn		5071420	0					
ANR	5072018	Identifier	p		5071420	0					
ANR	5072019	Identifier	_runlib_fcn		5071420	1					
ANR	5072020	IfStatement	if ( ! fcn )		5071420	4					
ANR	5072021	Condition	! fcn	1135:6:24669:24672	5071420	0	True				
ANR	5072022	UnaryOperationExpression	! fcn		5071420	0					
ANR	5072023	UnaryOperator	!		5071420	0					
ANR	5072024	Identifier	fcn		5071420	1					
ANR	5072025	CompoundStatement		123:12:2780:2780	5071420	1					
ANR	5072026	ExpressionStatement	"eprintf ( ""Could not find the function '%s'\\n"" , p -> _runlib_fcn )"	1136:3:24680:24742	5071420	0	True				
ANR	5072027	CallExpression	"eprintf ( ""Could not find the function '%s'\\n"" , p -> _runlib_fcn )"		5071420	0					
ANR	5072028	Callee	eprintf		5071420	0					
ANR	5072029	Identifier	eprintf		5071420	0					
ANR	5072030	ArgumentList	"""Could not find the function '%s'\\n"""		5071420	1					
ANR	5072031	Argument	"""Could not find the function '%s'\\n"""		5071420	0					
ANR	5072032	PrimaryExpression	"""Could not find the function '%s'\\n"""		5071420	0					
ANR	5072033	Argument	p -> _runlib_fcn		5071420	1					
ANR	5072034	PtrMemberAccess	p -> _runlib_fcn		5071420	0					
ANR	5072035	Identifier	p		5071420	0					
ANR	5072036	Identifier	_runlib_fcn		5071420	1					
ANR	5072037	ReturnStatement	return 1 ;	1137:3:24747:24755	5071420	1	True				
ANR	5072038	PrimaryExpression	1		5071420	0					
ANR	5072039	SwitchStatement	switch ( p -> _argc )		5071420	5					
ANR	5072040	Condition	p -> _argc	1139:10:24771:24778	5071420	0	True				
ANR	5072041	PtrMemberAccess	p -> _argc		5071420	0					
ANR	5072042	Identifier	p		5071420	0					
ANR	5072043	Identifier	_argc		5071420	1					
ANR	5072044	CompoundStatement		127:20:2886:2886	5071420	1					
ANR	5072045	Label	case 0 :	1140:2:24785:24791	5071420	0	True				
ANR	5072046	ExpressionStatement	fcn ( )	1141:3:24796:24802	5071420	1	True				
ANR	5072047	CallExpression	fcn ( )		5071420	0					
ANR	5072048	Callee	fcn		5071420	0					
ANR	5072049	Identifier	fcn		5071420	0					
ANR	5072050	ArgumentList			5071420	1					
ANR	5072051	BreakStatement	break ;	1142:3:24807:24812	5071420	2	True				
ANR	5072052	Label	case 1 :	1143:2:24816:24822	5071420	3	True				
ANR	5072053	ExpressionStatement	"r_run_call1 ( fcn , p -> _args [ 1 ] )"	1144:3:24827:24857	5071420	4	True				
ANR	5072054	CallExpression	"r_run_call1 ( fcn , p -> _args [ 1 ] )"		5071420	0					
ANR	5072055	Callee	r_run_call1		5071420	0					
ANR	5072056	Identifier	r_run_call1		5071420	0					
ANR	5072057	ArgumentList	fcn		5071420	1					
ANR	5072058	Argument	fcn		5071420	0					
ANR	5072059	Identifier	fcn		5071420	0					
ANR	5072060	Argument	p -> _args [ 1 ]		5071420	1					
ANR	5072061	ArrayIndexing	p -> _args [ 1 ]		5071420	0					
ANR	5072062	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072063	Identifier	p		5071420	0					
ANR	5072064	Identifier	_args		5071420	1					
ANR	5072065	PrimaryExpression	1		5071420	1					
ANR	5072066	BreakStatement	break ;	1145:3:24862:24867	5071420	5	True				
ANR	5072067	Label	case 2 :	1146:2:24871:24877	5071420	6	True				
ANR	5072068	ExpressionStatement	"r_run_call2 ( fcn , p -> _args [ 1 ] , p -> _args [ 2 ] )"	1147:3:24882:24925	5071420	7	True				
ANR	5072069	CallExpression	"r_run_call2 ( fcn , p -> _args [ 1 ] , p -> _args [ 2 ] )"		5071420	0					
ANR	5072070	Callee	r_run_call2		5071420	0					
ANR	5072071	Identifier	r_run_call2		5071420	0					
ANR	5072072	ArgumentList	fcn		5071420	1					
ANR	5072073	Argument	fcn		5071420	0					
ANR	5072074	Identifier	fcn		5071420	0					
ANR	5072075	Argument	p -> _args [ 1 ]		5071420	1					
ANR	5072076	ArrayIndexing	p -> _args [ 1 ]		5071420	0					
ANR	5072077	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072078	Identifier	p		5071420	0					
ANR	5072079	Identifier	_args		5071420	1					
ANR	5072080	PrimaryExpression	1		5071420	1					
ANR	5072081	Argument	p -> _args [ 2 ]		5071420	2					
ANR	5072082	ArrayIndexing	p -> _args [ 2 ]		5071420	0					
ANR	5072083	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072084	Identifier	p		5071420	0					
ANR	5072085	Identifier	_args		5071420	1					
ANR	5072086	PrimaryExpression	2		5071420	1					
ANR	5072087	BreakStatement	break ;	1148:3:24930:24935	5071420	8	True				
ANR	5072088	Label	case 3 :	1149:2:24939:24945	5071420	9	True				
ANR	5072089	ExpressionStatement	"r_run_call3 ( fcn , p -> _args [ 1 ] , p -> _args [ 2 ] , p -> _args [ 3 ] )"	1150:3:24950:25006	5071420	10	True				
ANR	5072090	CallExpression	"r_run_call3 ( fcn , p -> _args [ 1 ] , p -> _args [ 2 ] , p -> _args [ 3 ] )"		5071420	0					
ANR	5072091	Callee	r_run_call3		5071420	0					
ANR	5072092	Identifier	r_run_call3		5071420	0					
ANR	5072093	ArgumentList	fcn		5071420	1					
ANR	5072094	Argument	fcn		5071420	0					
ANR	5072095	Identifier	fcn		5071420	0					
ANR	5072096	Argument	p -> _args [ 1 ]		5071420	1					
ANR	5072097	ArrayIndexing	p -> _args [ 1 ]		5071420	0					
ANR	5072098	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072099	Identifier	p		5071420	0					
ANR	5072100	Identifier	_args		5071420	1					
ANR	5072101	PrimaryExpression	1		5071420	1					
ANR	5072102	Argument	p -> _args [ 2 ]		5071420	2					
ANR	5072103	ArrayIndexing	p -> _args [ 2 ]		5071420	0					
ANR	5072104	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072105	Identifier	p		5071420	0					
ANR	5072106	Identifier	_args		5071420	1					
ANR	5072107	PrimaryExpression	2		5071420	1					
ANR	5072108	Argument	p -> _args [ 3 ]		5071420	3					
ANR	5072109	ArrayIndexing	p -> _args [ 3 ]		5071420	0					
ANR	5072110	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072111	Identifier	p		5071420	0					
ANR	5072112	Identifier	_args		5071420	1					
ANR	5072113	PrimaryExpression	3		5071420	1					
ANR	5072114	BreakStatement	break ;	1151:3:25011:25016	5071420	11	True				
ANR	5072115	Label	case 4 :	1152:2:25020:25026	5071420	12	True				
ANR	5072116	ExpressionStatement	"r_run_call4 ( fcn , p -> _args [ 1 ] , p -> _args [ 2 ] , p -> _args [ 3 ] , p -> _args [ 4 ] )"	1153:3:25031:25100	5071420	13	True				
ANR	5072117	CallExpression	"r_run_call4 ( fcn , p -> _args [ 1 ] , p -> _args [ 2 ] , p -> _args [ 3 ] , p -> _args [ 4 ] )"		5071420	0					
ANR	5072118	Callee	r_run_call4		5071420	0					
ANR	5072119	Identifier	r_run_call4		5071420	0					
ANR	5072120	ArgumentList	fcn		5071420	1					
ANR	5072121	Argument	fcn		5071420	0					
ANR	5072122	Identifier	fcn		5071420	0					
ANR	5072123	Argument	p -> _args [ 1 ]		5071420	1					
ANR	5072124	ArrayIndexing	p -> _args [ 1 ]		5071420	0					
ANR	5072125	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072126	Identifier	p		5071420	0					
ANR	5072127	Identifier	_args		5071420	1					
ANR	5072128	PrimaryExpression	1		5071420	1					
ANR	5072129	Argument	p -> _args [ 2 ]		5071420	2					
ANR	5072130	ArrayIndexing	p -> _args [ 2 ]		5071420	0					
ANR	5072131	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072132	Identifier	p		5071420	0					
ANR	5072133	Identifier	_args		5071420	1					
ANR	5072134	PrimaryExpression	2		5071420	1					
ANR	5072135	Argument	p -> _args [ 3 ]		5071420	3					
ANR	5072136	ArrayIndexing	p -> _args [ 3 ]		5071420	0					
ANR	5072137	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072138	Identifier	p		5071420	0					
ANR	5072139	Identifier	_args		5071420	1					
ANR	5072140	PrimaryExpression	3		5071420	1					
ANR	5072141	Argument	p -> _args [ 4 ]		5071420	4					
ANR	5072142	ArrayIndexing	p -> _args [ 4 ]		5071420	0					
ANR	5072143	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072144	Identifier	p		5071420	0					
ANR	5072145	Identifier	_args		5071420	1					
ANR	5072146	PrimaryExpression	4		5071420	1					
ANR	5072147	BreakStatement	break ;	1154:3:25105:25110	5071420	14	True				
ANR	5072148	Label	case 5 :	1155:2:25114:25120	5071420	15	True				
ANR	5072149	ExpressionStatement	"r_run_call5 ( fcn , p -> _args [ 1 ] , p -> _args [ 2 ] , p -> _args [ 3 ] , p -> _args [ 4 ] , p -> _args [ 5 ] )"	1156:3:25125:25211	5071420	16	True				
ANR	5072150	CallExpression	"r_run_call5 ( fcn , p -> _args [ 1 ] , p -> _args [ 2 ] , p -> _args [ 3 ] , p -> _args [ 4 ] , p -> _args [ 5 ] )"		5071420	0					
ANR	5072151	Callee	r_run_call5		5071420	0					
ANR	5072152	Identifier	r_run_call5		5071420	0					
ANR	5072153	ArgumentList	fcn		5071420	1					
ANR	5072154	Argument	fcn		5071420	0					
ANR	5072155	Identifier	fcn		5071420	0					
ANR	5072156	Argument	p -> _args [ 1 ]		5071420	1					
ANR	5072157	ArrayIndexing	p -> _args [ 1 ]		5071420	0					
ANR	5072158	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072159	Identifier	p		5071420	0					
ANR	5072160	Identifier	_args		5071420	1					
ANR	5072161	PrimaryExpression	1		5071420	1					
ANR	5072162	Argument	p -> _args [ 2 ]		5071420	2					
ANR	5072163	ArrayIndexing	p -> _args [ 2 ]		5071420	0					
ANR	5072164	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072165	Identifier	p		5071420	0					
ANR	5072166	Identifier	_args		5071420	1					
ANR	5072167	PrimaryExpression	2		5071420	1					
ANR	5072168	Argument	p -> _args [ 3 ]		5071420	3					
ANR	5072169	ArrayIndexing	p -> _args [ 3 ]		5071420	0					
ANR	5072170	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072171	Identifier	p		5071420	0					
ANR	5072172	Identifier	_args		5071420	1					
ANR	5072173	PrimaryExpression	3		5071420	1					
ANR	5072174	Argument	p -> _args [ 4 ]		5071420	4					
ANR	5072175	ArrayIndexing	p -> _args [ 4 ]		5071420	0					
ANR	5072176	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072177	Identifier	p		5071420	0					
ANR	5072178	Identifier	_args		5071420	1					
ANR	5072179	PrimaryExpression	4		5071420	1					
ANR	5072180	Argument	p -> _args [ 5 ]		5071420	5					
ANR	5072181	ArrayIndexing	p -> _args [ 5 ]		5071420	0					
ANR	5072182	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072183	Identifier	p		5071420	0					
ANR	5072184	Identifier	_args		5071420	1					
ANR	5072185	PrimaryExpression	5		5071420	1					
ANR	5072186	BreakStatement	break ;	1158:3:25216:25221	5071420	17	True				
ANR	5072187	Label	case 6 :	1159:2:25225:25231	5071420	18	True				
ANR	5072188	ExpressionStatement	"r_run_call6 ( fcn , p -> _args [ 1 ] , p -> _args [ 2 ] , p -> _args [ 3 ] , p -> _args [ 4 ] , p -> _args [ 5 ] , p -> _args [ 6 ] )"	1160:3:25236:25335	5071420	19	True				
ANR	5072189	CallExpression	"r_run_call6 ( fcn , p -> _args [ 1 ] , p -> _args [ 2 ] , p -> _args [ 3 ] , p -> _args [ 4 ] , p -> _args [ 5 ] , p -> _args [ 6 ] )"		5071420	0					
ANR	5072190	Callee	r_run_call6		5071420	0					
ANR	5072191	Identifier	r_run_call6		5071420	0					
ANR	5072192	ArgumentList	fcn		5071420	1					
ANR	5072193	Argument	fcn		5071420	0					
ANR	5072194	Identifier	fcn		5071420	0					
ANR	5072195	Argument	p -> _args [ 1 ]		5071420	1					
ANR	5072196	ArrayIndexing	p -> _args [ 1 ]		5071420	0					
ANR	5072197	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072198	Identifier	p		5071420	0					
ANR	5072199	Identifier	_args		5071420	1					
ANR	5072200	PrimaryExpression	1		5071420	1					
ANR	5072201	Argument	p -> _args [ 2 ]		5071420	2					
ANR	5072202	ArrayIndexing	p -> _args [ 2 ]		5071420	0					
ANR	5072203	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072204	Identifier	p		5071420	0					
ANR	5072205	Identifier	_args		5071420	1					
ANR	5072206	PrimaryExpression	2		5071420	1					
ANR	5072207	Argument	p -> _args [ 3 ]		5071420	3					
ANR	5072208	ArrayIndexing	p -> _args [ 3 ]		5071420	0					
ANR	5072209	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072210	Identifier	p		5071420	0					
ANR	5072211	Identifier	_args		5071420	1					
ANR	5072212	PrimaryExpression	3		5071420	1					
ANR	5072213	Argument	p -> _args [ 4 ]		5071420	4					
ANR	5072214	ArrayIndexing	p -> _args [ 4 ]		5071420	0					
ANR	5072215	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072216	Identifier	p		5071420	0					
ANR	5072217	Identifier	_args		5071420	1					
ANR	5072218	PrimaryExpression	4		5071420	1					
ANR	5072219	Argument	p -> _args [ 5 ]		5071420	5					
ANR	5072220	ArrayIndexing	p -> _args [ 5 ]		5071420	0					
ANR	5072221	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072222	Identifier	p		5071420	0					
ANR	5072223	Identifier	_args		5071420	1					
ANR	5072224	PrimaryExpression	5		5071420	1					
ANR	5072225	Argument	p -> _args [ 6 ]		5071420	6					
ANR	5072226	ArrayIndexing	p -> _args [ 6 ]		5071420	0					
ANR	5072227	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072228	Identifier	p		5071420	0					
ANR	5072229	Identifier	_args		5071420	1					
ANR	5072230	PrimaryExpression	6		5071420	1					
ANR	5072231	BreakStatement	break ;	1162:3:25340:25345	5071420	20	True				
ANR	5072232	Label	case 7 :	1163:2:25349:25355	5071420	21	True				
ANR	5072233	ExpressionStatement	"r_run_call7 ( fcn , p -> _args [ 1 ] , p -> _args [ 2 ] , p -> _args [ 3 ] , p -> _args [ 4 ] , p -> _args [ 5 ] , p -> _args [ 6 ] , p -> _args [ 7 ] )"	1164:3:25360:25472	5071420	22	True				
ANR	5072234	CallExpression	"r_run_call7 ( fcn , p -> _args [ 1 ] , p -> _args [ 2 ] , p -> _args [ 3 ] , p -> _args [ 4 ] , p -> _args [ 5 ] , p -> _args [ 6 ] , p -> _args [ 7 ] )"		5071420	0					
ANR	5072235	Callee	r_run_call7		5071420	0					
ANR	5072236	Identifier	r_run_call7		5071420	0					
ANR	5072237	ArgumentList	fcn		5071420	1					
ANR	5072238	Argument	fcn		5071420	0					
ANR	5072239	Identifier	fcn		5071420	0					
ANR	5072240	Argument	p -> _args [ 1 ]		5071420	1					
ANR	5072241	ArrayIndexing	p -> _args [ 1 ]		5071420	0					
ANR	5072242	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072243	Identifier	p		5071420	0					
ANR	5072244	Identifier	_args		5071420	1					
ANR	5072245	PrimaryExpression	1		5071420	1					
ANR	5072246	Argument	p -> _args [ 2 ]		5071420	2					
ANR	5072247	ArrayIndexing	p -> _args [ 2 ]		5071420	0					
ANR	5072248	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072249	Identifier	p		5071420	0					
ANR	5072250	Identifier	_args		5071420	1					
ANR	5072251	PrimaryExpression	2		5071420	1					
ANR	5072252	Argument	p -> _args [ 3 ]		5071420	3					
ANR	5072253	ArrayIndexing	p -> _args [ 3 ]		5071420	0					
ANR	5072254	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072255	Identifier	p		5071420	0					
ANR	5072256	Identifier	_args		5071420	1					
ANR	5072257	PrimaryExpression	3		5071420	1					
ANR	5072258	Argument	p -> _args [ 4 ]		5071420	4					
ANR	5072259	ArrayIndexing	p -> _args [ 4 ]		5071420	0					
ANR	5072260	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072261	Identifier	p		5071420	0					
ANR	5072262	Identifier	_args		5071420	1					
ANR	5072263	PrimaryExpression	4		5071420	1					
ANR	5072264	Argument	p -> _args [ 5 ]		5071420	5					
ANR	5072265	ArrayIndexing	p -> _args [ 5 ]		5071420	0					
ANR	5072266	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072267	Identifier	p		5071420	0					
ANR	5072268	Identifier	_args		5071420	1					
ANR	5072269	PrimaryExpression	5		5071420	1					
ANR	5072270	Argument	p -> _args [ 6 ]		5071420	6					
ANR	5072271	ArrayIndexing	p -> _args [ 6 ]		5071420	0					
ANR	5072272	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072273	Identifier	p		5071420	0					
ANR	5072274	Identifier	_args		5071420	1					
ANR	5072275	PrimaryExpression	6		5071420	1					
ANR	5072276	Argument	p -> _args [ 7 ]		5071420	7					
ANR	5072277	ArrayIndexing	p -> _args [ 7 ]		5071420	0					
ANR	5072278	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072279	Identifier	p		5071420	0					
ANR	5072280	Identifier	_args		5071420	1					
ANR	5072281	PrimaryExpression	7		5071420	1					
ANR	5072282	BreakStatement	break ;	1166:3:25477:25482	5071420	23	True				
ANR	5072283	Label	case 8 :	1167:2:25486:25492	5071420	24	True				
ANR	5072284	ExpressionStatement	"r_run_call8 ( fcn , p -> _args [ 1 ] , p -> _args [ 2 ] , p -> _args [ 3 ] , p -> _args [ 4 ] , p -> _args [ 5 ] , p -> _args [ 6 ] , p -> _args [ 7 ] , p -> _args [ 8 ] )"	1168:3:25497:25622	5071420	25	True				
ANR	5072285	CallExpression	"r_run_call8 ( fcn , p -> _args [ 1 ] , p -> _args [ 2 ] , p -> _args [ 3 ] , p -> _args [ 4 ] , p -> _args [ 5 ] , p -> _args [ 6 ] , p -> _args [ 7 ] , p -> _args [ 8 ] )"		5071420	0					
ANR	5072286	Callee	r_run_call8		5071420	0					
ANR	5072287	Identifier	r_run_call8		5071420	0					
ANR	5072288	ArgumentList	fcn		5071420	1					
ANR	5072289	Argument	fcn		5071420	0					
ANR	5072290	Identifier	fcn		5071420	0					
ANR	5072291	Argument	p -> _args [ 1 ]		5071420	1					
ANR	5072292	ArrayIndexing	p -> _args [ 1 ]		5071420	0					
ANR	5072293	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072294	Identifier	p		5071420	0					
ANR	5072295	Identifier	_args		5071420	1					
ANR	5072296	PrimaryExpression	1		5071420	1					
ANR	5072297	Argument	p -> _args [ 2 ]		5071420	2					
ANR	5072298	ArrayIndexing	p -> _args [ 2 ]		5071420	0					
ANR	5072299	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072300	Identifier	p		5071420	0					
ANR	5072301	Identifier	_args		5071420	1					
ANR	5072302	PrimaryExpression	2		5071420	1					
ANR	5072303	Argument	p -> _args [ 3 ]		5071420	3					
ANR	5072304	ArrayIndexing	p -> _args [ 3 ]		5071420	0					
ANR	5072305	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072306	Identifier	p		5071420	0					
ANR	5072307	Identifier	_args		5071420	1					
ANR	5072308	PrimaryExpression	3		5071420	1					
ANR	5072309	Argument	p -> _args [ 4 ]		5071420	4					
ANR	5072310	ArrayIndexing	p -> _args [ 4 ]		5071420	0					
ANR	5072311	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072312	Identifier	p		5071420	0					
ANR	5072313	Identifier	_args		5071420	1					
ANR	5072314	PrimaryExpression	4		5071420	1					
ANR	5072315	Argument	p -> _args [ 5 ]		5071420	5					
ANR	5072316	ArrayIndexing	p -> _args [ 5 ]		5071420	0					
ANR	5072317	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072318	Identifier	p		5071420	0					
ANR	5072319	Identifier	_args		5071420	1					
ANR	5072320	PrimaryExpression	5		5071420	1					
ANR	5072321	Argument	p -> _args [ 6 ]		5071420	6					
ANR	5072322	ArrayIndexing	p -> _args [ 6 ]		5071420	0					
ANR	5072323	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072324	Identifier	p		5071420	0					
ANR	5072325	Identifier	_args		5071420	1					
ANR	5072326	PrimaryExpression	6		5071420	1					
ANR	5072327	Argument	p -> _args [ 7 ]		5071420	7					
ANR	5072328	ArrayIndexing	p -> _args [ 7 ]		5071420	0					
ANR	5072329	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072330	Identifier	p		5071420	0					
ANR	5072331	Identifier	_args		5071420	1					
ANR	5072332	PrimaryExpression	7		5071420	1					
ANR	5072333	Argument	p -> _args [ 8 ]		5071420	8					
ANR	5072334	ArrayIndexing	p -> _args [ 8 ]		5071420	0					
ANR	5072335	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072336	Identifier	p		5071420	0					
ANR	5072337	Identifier	_args		5071420	1					
ANR	5072338	PrimaryExpression	8		5071420	1					
ANR	5072339	BreakStatement	break ;	1170:3:25627:25632	5071420	26	True				
ANR	5072340	Label	case 9 :	1171:2:25636:25642	5071420	27	True				
ANR	5072341	ExpressionStatement	"r_run_call9 ( fcn , p -> _args [ 1 ] , p -> _args [ 2 ] , p -> _args [ 3 ] , p -> _args [ 4 ] , p -> _args [ 5 ] , p -> _args [ 6 ] , p -> _args [ 7 ] , p -> _args [ 8 ] , p -> _args [ 9 ] )"	1172:3:25647:25785	5071420	28	True				
ANR	5072342	CallExpression	"r_run_call9 ( fcn , p -> _args [ 1 ] , p -> _args [ 2 ] , p -> _args [ 3 ] , p -> _args [ 4 ] , p -> _args [ 5 ] , p -> _args [ 6 ] , p -> _args [ 7 ] , p -> _args [ 8 ] , p -> _args [ 9 ] )"		5071420	0					
ANR	5072343	Callee	r_run_call9		5071420	0					
ANR	5072344	Identifier	r_run_call9		5071420	0					
ANR	5072345	ArgumentList	fcn		5071420	1					
ANR	5072346	Argument	fcn		5071420	0					
ANR	5072347	Identifier	fcn		5071420	0					
ANR	5072348	Argument	p -> _args [ 1 ]		5071420	1					
ANR	5072349	ArrayIndexing	p -> _args [ 1 ]		5071420	0					
ANR	5072350	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072351	Identifier	p		5071420	0					
ANR	5072352	Identifier	_args		5071420	1					
ANR	5072353	PrimaryExpression	1		5071420	1					
ANR	5072354	Argument	p -> _args [ 2 ]		5071420	2					
ANR	5072355	ArrayIndexing	p -> _args [ 2 ]		5071420	0					
ANR	5072356	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072357	Identifier	p		5071420	0					
ANR	5072358	Identifier	_args		5071420	1					
ANR	5072359	PrimaryExpression	2		5071420	1					
ANR	5072360	Argument	p -> _args [ 3 ]		5071420	3					
ANR	5072361	ArrayIndexing	p -> _args [ 3 ]		5071420	0					
ANR	5072362	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072363	Identifier	p		5071420	0					
ANR	5072364	Identifier	_args		5071420	1					
ANR	5072365	PrimaryExpression	3		5071420	1					
ANR	5072366	Argument	p -> _args [ 4 ]		5071420	4					
ANR	5072367	ArrayIndexing	p -> _args [ 4 ]		5071420	0					
ANR	5072368	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072369	Identifier	p		5071420	0					
ANR	5072370	Identifier	_args		5071420	1					
ANR	5072371	PrimaryExpression	4		5071420	1					
ANR	5072372	Argument	p -> _args [ 5 ]		5071420	5					
ANR	5072373	ArrayIndexing	p -> _args [ 5 ]		5071420	0					
ANR	5072374	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072375	Identifier	p		5071420	0					
ANR	5072376	Identifier	_args		5071420	1					
ANR	5072377	PrimaryExpression	5		5071420	1					
ANR	5072378	Argument	p -> _args [ 6 ]		5071420	6					
ANR	5072379	ArrayIndexing	p -> _args [ 6 ]		5071420	0					
ANR	5072380	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072381	Identifier	p		5071420	0					
ANR	5072382	Identifier	_args		5071420	1					
ANR	5072383	PrimaryExpression	6		5071420	1					
ANR	5072384	Argument	p -> _args [ 7 ]		5071420	7					
ANR	5072385	ArrayIndexing	p -> _args [ 7 ]		5071420	0					
ANR	5072386	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072387	Identifier	p		5071420	0					
ANR	5072388	Identifier	_args		5071420	1					
ANR	5072389	PrimaryExpression	7		5071420	1					
ANR	5072390	Argument	p -> _args [ 8 ]		5071420	8					
ANR	5072391	ArrayIndexing	p -> _args [ 8 ]		5071420	0					
ANR	5072392	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072393	Identifier	p		5071420	0					
ANR	5072394	Identifier	_args		5071420	1					
ANR	5072395	PrimaryExpression	8		5071420	1					
ANR	5072396	Argument	p -> _args [ 9 ]		5071420	9					
ANR	5072397	ArrayIndexing	p -> _args [ 9 ]		5071420	0					
ANR	5072398	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072399	Identifier	p		5071420	0					
ANR	5072400	Identifier	_args		5071420	1					
ANR	5072401	PrimaryExpression	9		5071420	1					
ANR	5072402	BreakStatement	break ;	1174:3:25790:25795	5071420	29	True				
ANR	5072403	Label	case 10 :	1175:2:25799:25806	5071420	30	True				
ANR	5072404	ExpressionStatement	"r_run_call10 ( fcn , p -> _args [ 1 ] , p -> _args [ 2 ] , p -> _args [ 3 ] , p -> _args [ 4 ] , p -> _args [ 5 ] , p -> _args [ 6 ] , p -> _args [ 7 ] , p -> _args [ 8 ] , p -> _args [ 9 ] , p -> _args [ 10 ] )"	1176:3:25811:25964	5071420	31	True				
ANR	5072405	CallExpression	"r_run_call10 ( fcn , p -> _args [ 1 ] , p -> _args [ 2 ] , p -> _args [ 3 ] , p -> _args [ 4 ] , p -> _args [ 5 ] , p -> _args [ 6 ] , p -> _args [ 7 ] , p -> _args [ 8 ] , p -> _args [ 9 ] , p -> _args [ 10 ] )"		5071420	0					
ANR	5072406	Callee	r_run_call10		5071420	0					
ANR	5072407	Identifier	r_run_call10		5071420	0					
ANR	5072408	ArgumentList	fcn		5071420	1					
ANR	5072409	Argument	fcn		5071420	0					
ANR	5072410	Identifier	fcn		5071420	0					
ANR	5072411	Argument	p -> _args [ 1 ]		5071420	1					
ANR	5072412	ArrayIndexing	p -> _args [ 1 ]		5071420	0					
ANR	5072413	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072414	Identifier	p		5071420	0					
ANR	5072415	Identifier	_args		5071420	1					
ANR	5072416	PrimaryExpression	1		5071420	1					
ANR	5072417	Argument	p -> _args [ 2 ]		5071420	2					
ANR	5072418	ArrayIndexing	p -> _args [ 2 ]		5071420	0					
ANR	5072419	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072420	Identifier	p		5071420	0					
ANR	5072421	Identifier	_args		5071420	1					
ANR	5072422	PrimaryExpression	2		5071420	1					
ANR	5072423	Argument	p -> _args [ 3 ]		5071420	3					
ANR	5072424	ArrayIndexing	p -> _args [ 3 ]		5071420	0					
ANR	5072425	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072426	Identifier	p		5071420	0					
ANR	5072427	Identifier	_args		5071420	1					
ANR	5072428	PrimaryExpression	3		5071420	1					
ANR	5072429	Argument	p -> _args [ 4 ]		5071420	4					
ANR	5072430	ArrayIndexing	p -> _args [ 4 ]		5071420	0					
ANR	5072431	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072432	Identifier	p		5071420	0					
ANR	5072433	Identifier	_args		5071420	1					
ANR	5072434	PrimaryExpression	4		5071420	1					
ANR	5072435	Argument	p -> _args [ 5 ]		5071420	5					
ANR	5072436	ArrayIndexing	p -> _args [ 5 ]		5071420	0					
ANR	5072437	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072438	Identifier	p		5071420	0					
ANR	5072439	Identifier	_args		5071420	1					
ANR	5072440	PrimaryExpression	5		5071420	1					
ANR	5072441	Argument	p -> _args [ 6 ]		5071420	6					
ANR	5072442	ArrayIndexing	p -> _args [ 6 ]		5071420	0					
ANR	5072443	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072444	Identifier	p		5071420	0					
ANR	5072445	Identifier	_args		5071420	1					
ANR	5072446	PrimaryExpression	6		5071420	1					
ANR	5072447	Argument	p -> _args [ 7 ]		5071420	7					
ANR	5072448	ArrayIndexing	p -> _args [ 7 ]		5071420	0					
ANR	5072449	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072450	Identifier	p		5071420	0					
ANR	5072451	Identifier	_args		5071420	1					
ANR	5072452	PrimaryExpression	7		5071420	1					
ANR	5072453	Argument	p -> _args [ 8 ]		5071420	8					
ANR	5072454	ArrayIndexing	p -> _args [ 8 ]		5071420	0					
ANR	5072455	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072456	Identifier	p		5071420	0					
ANR	5072457	Identifier	_args		5071420	1					
ANR	5072458	PrimaryExpression	8		5071420	1					
ANR	5072459	Argument	p -> _args [ 9 ]		5071420	9					
ANR	5072460	ArrayIndexing	p -> _args [ 9 ]		5071420	0					
ANR	5072461	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072462	Identifier	p		5071420	0					
ANR	5072463	Identifier	_args		5071420	1					
ANR	5072464	PrimaryExpression	9		5071420	1					
ANR	5072465	Argument	p -> _args [ 10 ]		5071420	10					
ANR	5072466	ArrayIndexing	p -> _args [ 10 ]		5071420	0					
ANR	5072467	PtrMemberAccess	p -> _args		5071420	0					
ANR	5072468	Identifier	p		5071420	0					
ANR	5072469	Identifier	_args		5071420	1					
ANR	5072470	PrimaryExpression	10		5071420	1					
ANR	5072471	BreakStatement	break ;	1178:3:25969:25974	5071420	32	True				
ANR	5072472	Label	default :	1179:2:25978:25985	5071420	33	True				
ANR	5072473	Identifier	default		5071420	0					
ANR	5072474	ExpressionStatement	"eprintf ( ""Too many arguments.\\n"" )"	1180:3:25990:26023	5071420	34	True				
ANR	5072475	CallExpression	"eprintf ( ""Too many arguments.\\n"" )"		5071420	0					
ANR	5072476	Callee	eprintf		5071420	0					
ANR	5072477	Identifier	eprintf		5071420	0					
ANR	5072478	ArgumentList	"""Too many arguments.\\n"""		5071420	1					
ANR	5072479	Argument	"""Too many arguments.\\n"""		5071420	0					
ANR	5072480	PrimaryExpression	"""Too many arguments.\\n"""		5071420	0					
ANR	5072481	ReturnStatement	return 1 ;	1181:3:26028:26036	5071420	35	True				
ANR	5072482	PrimaryExpression	1		5071420	0					
ANR	5072483	ExpressionStatement	r_lib_dl_close ( addr )	1183:2:26044:26065	5071420	6	True				
ANR	5072484	CallExpression	r_lib_dl_close ( addr )		5071420	0					
ANR	5072485	Callee	r_lib_dl_close		5071420	0					
ANR	5072486	Identifier	r_lib_dl_close		5071420	0					
ANR	5072487	ArgumentList	addr		5071420	1					
ANR	5072488	Argument	addr		5071420	0					
ANR	5072489	Identifier	addr		5071420	0					
ANR	5072490	ReturnStatement	return 0 ;	1185:1:26071:26079	5071420	9	True				
ANR	5072491	PrimaryExpression	0		5071420	0					
ANR	5072492	ReturnType	R_API int		5071420	1					
ANR	5072493	Identifier	r_run_start		5071420	2					
ANR	5072494	ParameterList	RRunProfile * p		5071420	3					
ANR	5072495	Parameter	RRunProfile * p	1013:22:21878:21891	5071420	0	True				
ANR	5072496	ParameterType	RRunProfile *		5071420	0					
ANR	5072497	Identifier	p		5071420	1					
ANR	5072498	CFGEntryNode	ENTRY		5071420		True				
ANR	5072499	CFGExitNode	EXIT		5071420		True				
ANR	5072500	Symbol	copied		5071420						
ANR	5072501	Symbol	& cpu		5071420						
ANR	5072502	Symbol	pid		5071420						
ANR	5072503	Symbol	& copied		5071420						
ANR	5072504	Symbol	r_sys_cmd		5071420						
ANR	5072505	Symbol	envp		5071420						
ANR	5072506	Symbol	spflags		5071420						
ANR	5072507	Symbol	strlen		5071420						
ANR	5072508	Symbol	p -> _aslr		5071420						
ANR	5072509	Symbol	posix_spawnp		5071420						
ANR	5072510	Symbol	p -> _program		5071420						
ANR	5072511	Symbol	r_lib_dl_sym		5071420						
ANR	5072512	Symbol	CPU_ARCH_ABI64		5071420						
ANR	5072513	Symbol	p -> _pidfile		5071420						
ANR	5072514	Symbol	ret		5071420						
ANR	5072515	Symbol	setgid		5071420						
ANR	5072516	Symbol	NULL		5071420						
ANR	5072517	Symbol	p -> _argc		5071420						
ANR	5072518	Symbol	cpu		5071420						
ANR	5072519	Symbol	p -> _runlib_fcn		5071420						
ANR	5072520	Symbol	progpath		5071420						
ANR	5072521	Symbol	POSIX_SPAWN_SETEXEC		5071420						
ANR	5072522	Symbol	r_sys_get_environ		5071420						
ANR	5072523	Symbol	p -> _nice		5071420						
ANR	5072524	Symbol	* p -> _args		5071420						
ANR	5072525	Symbol	& pid		5071420						
ANR	5072526	Symbol	p -> _args		5071420						
ANR	5072527	Symbol	_POSIX_SPAWN_DISABLE_ASLR		5071420						
ANR	5072528	Symbol	CPU_TYPE_I386		5071420						
ANR	5072529	Symbol	fcn		5071420						
ANR	5072530	Symbol	r_lib_dl_open		5071420						
ANR	5072531	Symbol	pidstr		5071420						
ANR	5072532	Symbol	r_file_path		5071420						
ANR	5072533	Symbol	* * p		5071420						
ANR	5072534	Symbol	* progpath		5071420						
ANR	5072535	Symbol	attr		5071420						
ANR	5072536	Symbol	addr		5071420						
ANR	5072537	Symbol	atoi		5071420						
ANR	5072538	Symbol	p -> _pid		5071420						
ANR	5072539	Symbol	p -> _setgid		5071420						
ANR	5072540	Symbol	p -> _execve		5071420						
ANR	5072541	Symbol	& attr		5071420						
ANR	5072542	Symbol	i		5071420						
ANR	5072543	Symbol	p -> _bits		5071420						
ANR	5072544	Symbol	nice		5071420						
ANR	5072545	Symbol	p		5071420						
ANR	5072546	Symbol	p -> _system		5071420						
ANR	5072547	Symbol	p -> _runlib		5071420						
ANR	5072548	Symbol	* p		5071420						
ANR	5072549	Symbol	r_file_exists		5071420						
ANR	5072550	Symbol	getpid		5071420						
