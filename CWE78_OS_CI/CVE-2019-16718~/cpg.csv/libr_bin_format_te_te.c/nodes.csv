command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3674968	File	data/converged/CVE-2019-16718~_radare2/libr_bin_format_te_te.c								
ANR	3674969	Function	r_bin_te_get_stripped_delta	11:0:206:380							
ANR	3674970	FunctionDef	r_bin_te_get_stripped_delta (struct r_bin_te_obj_t * bin)		3674969	0					
ANR	3674971	CompoundStatement		11:61:267:380	3674969	0					
ANR	3674972	IfStatement	if ( bin && bin -> header )		3674969	0					
ANR	3674973	Condition	bin && bin -> header	12:5:274:291	3674969	0	True				
ANR	3674974	AndExpression	bin && bin -> header		3674969	0		&&			
ANR	3674975	Identifier	bin		3674969	0					
ANR	3674976	PtrMemberAccess	bin -> header		3674969	1					
ANR	3674977	Identifier	bin		3674969	0					
ANR	3674978	Identifier	header		3674969	1					
ANR	3674979	CompoundStatement		2:25:26:26	3674969	1					
ANR	3674980	ReturnStatement	return bin -> header -> StrippedSize - sizeof ( TE_image_file_header ) ;	13:2:298:362	3674969	0	True				
ANR	3674981	AdditiveExpression	bin -> header -> StrippedSize - sizeof ( TE_image_file_header )		3674969	0		-			
ANR	3674982	PtrMemberAccess	bin -> header -> StrippedSize		3674969	0					
ANR	3674983	PtrMemberAccess	bin -> header		3674969	0					
ANR	3674984	Identifier	bin		3674969	0					
ANR	3674985	Identifier	header		3674969	1					
ANR	3674986	Identifier	StrippedSize		3674969	1					
ANR	3674987	SizeofExpression	sizeof ( TE_image_file_header )		3674969	1					
ANR	3674988	Sizeof	sizeof		3674969	0					
ANR	3674989	SizeofOperand	TE_image_file_header		3674969	1					
ANR	3674990	Statement	return	15:1:368:373	3674969	1	True				
ANR	3674991	Statement	0L	15:8:375:376	3674969	2	True				
ANR	3674992	ExpressionStatement	L	15:10:377:378	3674969	3	True				
ANR	3674993	Identifier	L		3674969	0					
ANR	3674994	ReturnType	ut64		3674969	1					
ANR	3674995	Identifier	r_bin_te_get_stripped_delta		3674969	2					
ANR	3674996	ParameterList	struct r_bin_te_obj_t * bin		3674969	3					
ANR	3674997	Parameter	struct r_bin_te_obj_t * bin	11:33:239:264	3674969	0	True				
ANR	3674998	ParameterType	struct r_bin_te_obj_t *		3674969	0					
ANR	3674999	Identifier	bin		3674969	1					
ANR	3675000	CFGEntryNode	ENTRY		3674969		True				
ANR	3675001	CFGExitNode	EXIT		3674969		True				
ANR	3675002	Symbol	* bin -> header		3674969						
ANR	3675003	Symbol	bin		3674969						
ANR	3675004	Symbol	bin -> header		3674969						
ANR	3675005	Symbol	* * bin		3674969						
ANR	3675006	Symbol	bin -> header -> StrippedSize		3674969						
ANR	3675007	Symbol	* bin		3674969						
ANR	3675008	Function	r_bin_te_init_hdr	18:0:383:3102							
ANR	3675009	FunctionDef	r_bin_te_init_hdr (struct r_bin_te_obj_t * bin)		3675008	0					
ANR	3675010	CompoundStatement		18:57:440:3102	3675008	0					
ANR	3675011	IfStatement	if ( ! bin )		3675008	0					
ANR	3675012	Condition	! bin	19:5:447:450	3675008	0	True				
ANR	3675013	UnaryOperationExpression	! bin		3675008	0					
ANR	3675014	UnaryOperator	!		3675008	0					
ANR	3675015	Identifier	bin		3675008	1					
ANR	3675016	CompoundStatement		2:11:12:12	3675008	1					
ANR	3675017	ReturnStatement	return false ;	20:2:457:469	3675008	0	True				
ANR	3675018	Identifier	false		3675008	0					
ANR	3675019	IfStatement	if ( ! ( bin -> header = malloc ( sizeof ( TE_image_file_header ) ) ) )		3675008	1					
ANR	3675020	Condition	! ( bin -> header = malloc ( sizeof ( TE_image_file_header ) ) )	22:5:479:532	3675008	0	True				
ANR	3675021	UnaryOperationExpression	! ( bin -> header = malloc ( sizeof ( TE_image_file_header ) ) )		3675008	0					
ANR	3675022	UnaryOperator	!		3675008	0					
ANR	3675023	AssignmentExpression	bin -> header = malloc ( sizeof ( TE_image_file_header ) )		3675008	1		=			
ANR	3675024	PtrMemberAccess	bin -> header		3675008	0					
ANR	3675025	Identifier	bin		3675008	0					
ANR	3675026	Identifier	header		3675008	1					
ANR	3675027	CallExpression	malloc ( sizeof ( TE_image_file_header ) )		3675008	1					
ANR	3675028	Callee	malloc		3675008	0					
ANR	3675029	Identifier	malloc		3675008	0					
ANR	3675030	ArgumentList	sizeof ( TE_image_file_header )		3675008	1					
ANR	3675031	Argument	sizeof ( TE_image_file_header )		3675008	0					
ANR	3675032	SizeofExpression	sizeof ( TE_image_file_header )		3675008	0					
ANR	3675033	Sizeof	sizeof		3675008	0					
ANR	3675034	SizeofOperand	TE_image_file_header		3675008	1					
ANR	3675035	CompoundStatement		5:61:94:94	3675008	1					
ANR	3675036	ExpressionStatement	"r_sys_perror ( ""malloc (header)"" )"	23:2:539:571	3675008	0	True				
ANR	3675037	CallExpression	"r_sys_perror ( ""malloc (header)"" )"		3675008	0					
ANR	3675038	Callee	r_sys_perror		3675008	0					
ANR	3675039	Identifier	r_sys_perror		3675008	0					
ANR	3675040	ArgumentList	"""malloc (header)"""		3675008	1					
ANR	3675041	Argument	"""malloc (header)"""		3675008	0					
ANR	3675042	PrimaryExpression	"""malloc (header)"""		3675008	0					
ANR	3675043	ReturnStatement	return false ;	24:2:575:587	3675008	1	True				
ANR	3675044	Identifier	false		3675008	0					
ANR	3675045	IfStatement	"if ( r_buf_read_at ( bin -> b , 0 , ( ut8 * ) bin -> header , sizeof ( TE_image_file_header ) ) == - 1 )"		3675008	2					
ANR	3675046	Condition	"r_buf_read_at ( bin -> b , 0 , ( ut8 * ) bin -> header , sizeof ( TE_image_file_header ) ) == - 1"	26:5:597:677	3675008	0	True				
ANR	3675047	EqualityExpression	"r_buf_read_at ( bin -> b , 0 , ( ut8 * ) bin -> header , sizeof ( TE_image_file_header ) ) == - 1"		3675008	0		==			
ANR	3675048	CallExpression	"r_buf_read_at ( bin -> b , 0 , ( ut8 * ) bin -> header , sizeof ( TE_image_file_header ) )"		3675008	0					
ANR	3675049	Callee	r_buf_read_at		3675008	0					
ANR	3675050	Identifier	r_buf_read_at		3675008	0					
ANR	3675051	ArgumentList	bin -> b		3675008	1					
ANR	3675052	Argument	bin -> b		3675008	0					
ANR	3675053	PtrMemberAccess	bin -> b		3675008	0					
ANR	3675054	Identifier	bin		3675008	0					
ANR	3675055	Identifier	b		3675008	1					
ANR	3675056	Argument	0		3675008	1					
ANR	3675057	PrimaryExpression	0		3675008	0					
ANR	3675058	Argument	( ut8 * ) bin -> header		3675008	2					
ANR	3675059	CastExpression	( ut8 * ) bin -> header		3675008	0					
ANR	3675060	CastTarget	ut8 *		3675008	0					
ANR	3675061	PtrMemberAccess	bin -> header		3675008	1					
ANR	3675062	Identifier	bin		3675008	0					
ANR	3675063	Identifier	header		3675008	1					
ANR	3675064	Argument	sizeof ( TE_image_file_header )		3675008	3					
ANR	3675065	SizeofExpression	sizeof ( TE_image_file_header )		3675008	0					
ANR	3675066	Sizeof	sizeof		3675008	0					
ANR	3675067	SizeofOperand	TE_image_file_header		3675008	1					
ANR	3675068	UnaryOperationExpression	- 1		3675008	1					
ANR	3675069	UnaryOperator	-		3675008	0					
ANR	3675070	PrimaryExpression	1		3675008	1					
ANR	3675071	CompoundStatement		9:88:239:239	3675008	1					
ANR	3675072	ExpressionStatement	"eprintf ( ""Error: read (header)\\n"" )"	27:2:684:717	3675008	0	True				
ANR	3675073	CallExpression	"eprintf ( ""Error: read (header)\\n"" )"		3675008	0					
ANR	3675074	Callee	eprintf		3675008	0					
ANR	3675075	Identifier	eprintf		3675008	0					
ANR	3675076	ArgumentList	"""Error: read (header)\\n"""		3675008	1					
ANR	3675077	Argument	"""Error: read (header)\\n"""		3675008	0					
ANR	3675078	PrimaryExpression	"""Error: read (header)\\n"""		3675008	0					
ANR	3675079	ReturnStatement	return false ;	28:2:721:733	3675008	1	True				
ANR	3675080	Identifier	false		3675008	0					
ANR	3675081	IfStatement	if ( ! bin -> kv )		3675008	3					
ANR	3675082	Condition	! bin -> kv	30:5:743:750	3675008	0	True				
ANR	3675083	UnaryOperationExpression	! bin -> kv		3675008	0					
ANR	3675084	UnaryOperator	!		3675008	0					
ANR	3675085	PtrMemberAccess	bin -> kv		3675008	1					
ANR	3675086	Identifier	bin		3675008	0					
ANR	3675087	Identifier	kv		3675008	1					
ANR	3675088	CompoundStatement		13:15:312:312	3675008	1					
ANR	3675089	ExpressionStatement	"eprintf ( ""Error: sdb instance is empty\\n"" )"	31:2:757:798	3675008	0	True				
ANR	3675090	CallExpression	"eprintf ( ""Error: sdb instance is empty\\n"" )"		3675008	0					
ANR	3675091	Callee	eprintf		3675008	0					
ANR	3675092	Identifier	eprintf		3675008	0					
ANR	3675093	ArgumentList	"""Error: sdb instance is empty\\n"""		3675008	1					
ANR	3675094	Argument	"""Error: sdb instance is empty\\n"""		3675008	0					
ANR	3675095	PrimaryExpression	"""Error: sdb instance is empty\\n"""		3675008	0					
ANR	3675096	ReturnStatement	return false ;	32:2:802:814	3675008	1	True				
ANR	3675097	Identifier	false		3675008	0					
ANR	3675098	Statement	sdb_set	35:1:821:827	3675008	4	True				
ANR	3675099	Statement	(	35:9:829:829	3675008	5	True				
ANR	3675100	Statement	bin	35:10:830:832	3675008	6	True				
ANR	3675101	Statement	->	35:13:833:834	3675008	7	True				
ANR	3675102	Statement	kv	35:15:835:836	3675008	8	True				
ANR	3675103	Statement	","	35:17:837:837	3675008	9	True				
ANR	3675104	Statement	"""te_machine.cparse"""	35:19:839:857	3675008	10	True				
ANR	3675105	Statement	","	35:38:858:858	3675008	11	True				
ANR	3675106	Statement	"""enum te_machine { TE_IMAGE_FILE_MACHINE_UNKNOWN=0x0, TE_IMAGE_FILE_MACHINE_ALPHA=0x184, """	35:40:860:949	3675008	12	True				
ANR	3675107	Statement	"""TE_IMAGE_FILE_MACHINE_ALPHA64=0x284, TE_IMAGE_FILE_MACHINE_AM33=0x1d3, TE_IMAGE_FILE_MACHINE_AMD64=0x8664, """	36:1:952:1060	3675008	13	True				
ANR	3675108	Statement	"""TE_IMAGE_FILE_MACHINE_ARM=0x1c0, TE_IMAGE_FILE_MACHINE_AXP64=0x184, TE_IMAGE_FILE_MACHINE_CEE=0xc0ee, """	37:1:1063:1166	3675008	14	True				
ANR	3675109	Statement	"""TE_IMAGE_FILE_MACHINE_CEF=0x0cef, TE_IMAGE_FILE_MACHINE_EBC=0x0ebc, TE_IMAGE_FILE_MACHINE_I386=0x014c, """	38:1:1169:1273	3675008	15	True				
ANR	3675110	Statement	"""TE_IMAGE_FILE_MACHINE_IA64=0x0200, TE_IMAGE_FILE_MACHINE_M32R=0x9041, TE_IMAGE_FILE_MACHINE_M68K=0x0268, """	39:1:1276:1382	3675008	16	True				
ANR	3675111	Statement	"""TE_IMAGE_FILE_MACHINE_MIPS16=0x0266, TE_IMAGE_FILE_MACHINE_MIPSFPU=0x0366, TE_IMAGE_FILE_MACHINE_MIPSFPU16=0x0466, """	40:1:1385:1501	3675008	17	True				
ANR	3675112	Statement	"""TE_IMAGE_FILE_MACHINE_POWERPC=0x01f0, TE_IMAGE_FILE_MACHINE_POWERPCFP=0x01f1, TE_IMAGE_FILE_MACHINE_R10000=0x0168, """	41:1:1504:1620	3675008	18	True				
ANR	3675113	Statement	"""TE_IMAGE_FILE_MACHINE_R3000=0x0162, TE_IMAGE_FILE_MACHINE_R4000=0x0166, TE_IMAGE_FILE_MACHINE_SH3=0x01a2, """	42:1:1623:1730	3675008	19	True				
ANR	3675114	Statement	"""TE_IMAGE_FILE_MACHINE_SH3DSP=0x01a3, TE_IMAGE_FILE_MACHINE_SH3E=0x01a4, TE_IMAGE_FILE_MACHINE_SH4=0x01a6, """	43:1:1733:1840	3675008	20	True				
ANR	3675115	Statement	"""TE_IMAGE_FILE_MACHINE_SH5=0x01a8, TE_IMAGE_FILE_MACHINE_THUMB=0x01c2, TE_IMAGE_FILE_MACHINE_TRICORE=0x0520, """	44:1:1843:1952	3675008	21	True				
ANR	3675116	Statement	"""TE_IMAGE_FILE_MACHINE_WCEMIPSV2=0x0169};"""	45:1:1955:1996	3675008	22	True				
ANR	3675117	Statement	","	45:43:1997:1997	3675008	23	True				
ANR	3675118	Statement	0	45:45:1999:1999	3675008	24	True				
ANR	3675119	Statement	)	45:46:2000:2000	3675008	25	True				
ANR	3675120	ExpressionStatement		45:47:2001:2001	3675008	26	True				
ANR	3675121	Statement	sdb_set	46:1:2004:2010	3675008	27	True				
ANR	3675122	Statement	(	46:9:2012:2012	3675008	28	True				
ANR	3675123	Statement	bin	46:10:2013:2015	3675008	29	True				
ANR	3675124	Statement	->	46:13:2016:2017	3675008	30	True				
ANR	3675125	Statement	kv	46:15:2018:2019	3675008	31	True				
ANR	3675126	Statement	","	46:17:2020:2020	3675008	32	True				
ANR	3675127	Statement	"""te_subsystem.cparse"""	46:19:2022:2042	3675008	33	True				
ANR	3675128	Statement	","	46:40:2043:2043	3675008	34	True				
ANR	3675129	Statement	"""enum te_subsystem { TE_IMAGE_SUBSYSTEM_UNKNOWN=0, TE_IMAGE_SUBSYSTEM_NATIVE=1, """	46:42:2045:2125	3675008	35	True				
ANR	3675130	Statement	"""TE_IMAGE_SUBSYSTEM_WINDOWS_GUI=2, TE_IMAGE_SUBSYSTEM_WINDOWS_CUI=3, """	47:1:2128:2197	3675008	36	True				
ANR	3675131	Statement	"""TE_IMAGE_SUBSYSTEM_POSIX_CUI=7, TE_IMAGE_SUBSYSTEM_WINDOWS_CE_GU=9, """	48:1:2200:2269	3675008	37	True				
ANR	3675132	Statement	"""TE_IMAGE_SUBSYSTEM_EFI_APPLICATION=10, TE_IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER=11, TE_IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER=12, """	49:1:2272:2401	3675008	38	True				
ANR	3675133	Statement	"""TE_IMAGE_SUBSYSTEM_EFI_ROM=13, TE_IMAGE_SUBSYSTEM_XBOX=14};"""	50:1:2404:2464	3675008	39	True				
ANR	3675134	Statement	","	50:62:2465:2465	3675008	40	True				
ANR	3675135	Statement	0	50:64:2467:2467	3675008	41	True				
ANR	3675136	Statement	)	50:65:2468:2468	3675008	42	True				
ANR	3675137	ExpressionStatement		50:66:2469:2469	3675008	43	True				
ANR	3675138	ExpressionStatement	"sdb_num_set ( bin -> kv , ""te_header.offset"" , 0 , 0 )"	51:1:2472:2519	3675008	44	True				
ANR	3675139	CallExpression	"sdb_num_set ( bin -> kv , ""te_header.offset"" , 0 , 0 )"		3675008	0					
ANR	3675140	Callee	sdb_num_set		3675008	0					
ANR	3675141	Identifier	sdb_num_set		3675008	0					
ANR	3675142	ArgumentList	bin -> kv		3675008	1					
ANR	3675143	Argument	bin -> kv		3675008	0					
ANR	3675144	PtrMemberAccess	bin -> kv		3675008	0					
ANR	3675145	Identifier	bin		3675008	0					
ANR	3675146	Identifier	kv		3675008	1					
ANR	3675147	Argument	"""te_header.offset"""		3675008	1					
ANR	3675148	PrimaryExpression	"""te_header.offset"""		3675008	0					
ANR	3675149	Argument	0		3675008	2					
ANR	3675150	PrimaryExpression	0		3675008	0					
ANR	3675151	Argument	0		3675008	3					
ANR	3675152	PrimaryExpression	0		3675008	0					
ANR	3675153	Statement	sdb_set	52:1:2522:2528	3675008	45	True				
ANR	3675154	Statement	(	52:9:2530:2530	3675008	46	True				
ANR	3675155	Statement	bin	52:10:2531:2533	3675008	47	True				
ANR	3675156	Statement	->	52:13:2534:2535	3675008	48	True				
ANR	3675157	Statement	kv	52:15:2536:2537	3675008	49	True				
ANR	3675158	Statement	","	52:17:2538:2538	3675008	50	True				
ANR	3675159	Statement	"""te_header.format"""	52:19:2540:2557	3675008	51	True				
ANR	3675160	Statement	","	52:37:2558:2558	3675008	52	True				
ANR	3675161	Statement	"""[2]z[2]Eb[1]Ewxxq"""	52:39:2560:2578	3675008	53	True				
ANR	3675162	Statement	""" Signature (te_machine)Machine NumberOfSections (te_subsystem)Subsystem StrippedSize AddressOfEntryPoint BaseOfCode ImageBase"""	53:2:2582:2708	3675008	54	True				
ANR	3675163	Statement	","	53:129:2709:2709	3675008	55	True				
ANR	3675164	Statement	0	53:131:2711:2711	3675008	56	True				
ANR	3675165	Statement	)	53:132:2712:2712	3675008	57	True				
ANR	3675166	ExpressionStatement		53:133:2713:2713	3675008	58	True				
ANR	3675167	ExpressionStatement	"sdb_num_set ( bin -> kv , ""te_directory1_header.offset"" , 24 , 0 )"	54:1:2716:2775	3675008	59	True				
ANR	3675168	CallExpression	"sdb_num_set ( bin -> kv , ""te_directory1_header.offset"" , 24 , 0 )"		3675008	0					
ANR	3675169	Callee	sdb_num_set		3675008	0					
ANR	3675170	Identifier	sdb_num_set		3675008	0					
ANR	3675171	ArgumentList	bin -> kv		3675008	1					
ANR	3675172	Argument	bin -> kv		3675008	0					
ANR	3675173	PtrMemberAccess	bin -> kv		3675008	0					
ANR	3675174	Identifier	bin		3675008	0					
ANR	3675175	Identifier	kv		3675008	1					
ANR	3675176	Argument	"""te_directory1_header.offset"""		3675008	1					
ANR	3675177	PrimaryExpression	"""te_directory1_header.offset"""		3675008	0					
ANR	3675178	Argument	24		3675008	2					
ANR	3675179	PrimaryExpression	24		3675008	0					
ANR	3675180	Argument	0		3675008	3					
ANR	3675181	PrimaryExpression	0		3675008	0					
ANR	3675182	Statement	sdb_set	55:1:2778:2784	3675008	60	True				
ANR	3675183	Statement	(	55:9:2786:2786	3675008	61	True				
ANR	3675184	Statement	bin	55:10:2787:2789	3675008	62	True				
ANR	3675185	Statement	->	55:13:2790:2791	3675008	63	True				
ANR	3675186	Statement	kv	55:15:2792:2793	3675008	64	True				
ANR	3675187	Statement	","	55:17:2794:2794	3675008	65	True				
ANR	3675188	Statement	"""te_directory1_header.format"""	55:19:2796:2824	3675008	66	True				
ANR	3675189	Statement	","	55:48:2825:2825	3675008	67	True				
ANR	3675190	Statement	"""xx"""	55:50:2827:2830	3675008	68	True				
ANR	3675191	Statement	""" VirtualAddress Size"""	56:2:2834:2855	3675008	69	True				
ANR	3675192	Statement	","	56:24:2856:2856	3675008	70	True				
ANR	3675193	Statement	0	56:26:2858:2858	3675008	71	True				
ANR	3675194	Statement	)	56:27:2859:2859	3675008	72	True				
ANR	3675195	ExpressionStatement		56:28:2860:2860	3675008	73	True				
ANR	3675196	ExpressionStatement	"sdb_num_set ( bin -> kv , ""te_directory2_header.offset"" , 32 , 0 )"	57:1:2863:2922	3675008	74	True				
ANR	3675197	CallExpression	"sdb_num_set ( bin -> kv , ""te_directory2_header.offset"" , 32 , 0 )"		3675008	0					
ANR	3675198	Callee	sdb_num_set		3675008	0					
ANR	3675199	Identifier	sdb_num_set		3675008	0					
ANR	3675200	ArgumentList	bin -> kv		3675008	1					
ANR	3675201	Argument	bin -> kv		3675008	0					
ANR	3675202	PtrMemberAccess	bin -> kv		3675008	0					
ANR	3675203	Identifier	bin		3675008	0					
ANR	3675204	Identifier	kv		3675008	1					
ANR	3675205	Argument	"""te_directory2_header.offset"""		3675008	1					
ANR	3675206	PrimaryExpression	"""te_directory2_header.offset"""		3675008	0					
ANR	3675207	Argument	32		3675008	2					
ANR	3675208	PrimaryExpression	32		3675008	0					
ANR	3675209	Argument	0		3675008	3					
ANR	3675210	PrimaryExpression	0		3675008	0					
ANR	3675211	Statement	sdb_set	58:1:2925:2931	3675008	75	True				
ANR	3675212	Statement	(	58:9:2933:2933	3675008	76	True				
ANR	3675213	Statement	bin	58:10:2934:2936	3675008	77	True				
ANR	3675214	Statement	->	58:13:2937:2938	3675008	78	True				
ANR	3675215	Statement	kv	58:15:2939:2940	3675008	79	True				
ANR	3675216	Statement	","	58:17:2941:2941	3675008	80	True				
ANR	3675217	Statement	"""te_directory2_header.format"""	58:19:2943:2971	3675008	81	True				
ANR	3675218	Statement	","	58:48:2972:2972	3675008	82	True				
ANR	3675219	Statement	"""xx"""	58:50:2974:2977	3675008	83	True				
ANR	3675220	Statement	""" VirtualAddress Size"""	59:2:2981:3002	3675008	84	True				
ANR	3675221	Statement	","	59:24:3003:3003	3675008	85	True				
ANR	3675222	Statement	0	59:26:3005:3005	3675008	86	True				
ANR	3675223	Statement	)	59:27:3006:3006	3675008	87	True				
ANR	3675224	ExpressionStatement		59:28:3007:3007	3675008	88	True				
ANR	3675225	IfStatement	"if ( strncmp ( ( char * ) & bin -> header -> Signature , ""VZ"" , 2 ) )"		3675008	89					
ANR	3675226	Condition	"strncmp ( ( char * ) & bin -> header -> Signature , ""VZ"" , 2 )"	61:5:3015:3064	3675008	0	True				
ANR	3675227	CallExpression	"strncmp ( ( char * ) & bin -> header -> Signature , ""VZ"" , 2 )"		3675008	0					
ANR	3675228	Callee	strncmp		3675008	0					
ANR	3675229	Identifier	strncmp		3675008	0					
ANR	3675230	ArgumentList	( char * ) & bin -> header -> Signature		3675008	1					
ANR	3675231	Argument	( char * ) & bin -> header -> Signature		3675008	0					
ANR	3675232	CastExpression	( char * ) & bin -> header -> Signature		3675008	0					
ANR	3675233	CastTarget	char *		3675008	0					
ANR	3675234	UnaryOperationExpression	& bin -> header -> Signature		3675008	1					
ANR	3675235	UnaryOperator	&		3675008	0					
ANR	3675236	PtrMemberAccess	bin -> header -> Signature		3675008	1					
ANR	3675237	PtrMemberAccess	bin -> header		3675008	0					
ANR	3675238	Identifier	bin		3675008	0					
ANR	3675239	Identifier	header		3675008	1					
ANR	3675240	Identifier	Signature		3675008	1					
ANR	3675241	Argument	"""VZ"""		3675008	1					
ANR	3675242	PrimaryExpression	"""VZ"""		3675008	0					
ANR	3675243	Argument	2		3675008	2					
ANR	3675244	PrimaryExpression	2		3675008	0					
ANR	3675245	CompoundStatement		44:57:2626:2626	3675008	1					
ANR	3675246	ReturnStatement	return false ;	62:2:3071:3083	3675008	0	True				
ANR	3675247	Identifier	false		3675008	0					
ANR	3675248	ReturnStatement	return true ;	64:1:3089:3100	3675008	90	True				
ANR	3675249	Identifier	true		3675008	0					
ANR	3675250	ReturnType	static int		3675008	1					
ANR	3675251	Identifier	r_bin_te_init_hdr		3675008	2					
ANR	3675252	ParameterList	struct r_bin_te_obj_t * bin		3675008	3					
ANR	3675253	Parameter	struct r_bin_te_obj_t * bin	18:29:412:437	3675008	0	True				
ANR	3675254	ParameterType	struct r_bin_te_obj_t *		3675008	0					
ANR	3675255	Identifier	bin		3675008	1					
ANR	3675256	CFGEntryNode	ENTRY		3675008		True				
ANR	3675257	CFGExitNode	EXIT		3675008		True				
ANR	3675258	Symbol	malloc		3675008						
ANR	3675259	Symbol	strncmp		3675008						
ANR	3675260	Symbol	bin -> b		3675008						
ANR	3675261	Symbol	bin		3675008						
ANR	3675262	Symbol	bin -> header		3675008						
ANR	3675263	Symbol	false		3675008						
ANR	3675264	Symbol	r_buf_read_at		3675008						
ANR	3675265	Symbol	true		3675008						
ANR	3675266	Symbol	bin -> kv		3675008						
ANR	3675267	Symbol	* bin		3675008						
ANR	3675268	Symbol	& bin -> header -> Signature		3675008						
ANR	3675269	Function	r_bin_te_get_main_paddr	67:0:3105:3671							
ANR	3675270	FunctionDef	r_bin_te_get_main_paddr (struct r_bin_te_obj_t * bin)		3675269	0					
ANR	3675271	CompoundStatement		67:57:3162:3671	3675269	0					
ANR	3675272	IdentifierDeclStatement	RBinAddr * entry = r_bin_te_get_entrypoint ( bin ) ;	68:1:3165:3212	3675269	0	True				
ANR	3675273	IdentifierDecl	* entry = r_bin_te_get_entrypoint ( bin )		3675269	0					
ANR	3675274	IdentifierDeclType	RBinAddr *		3675269	0					
ANR	3675275	Identifier	entry		3675269	1					
ANR	3675276	AssignmentExpression	* entry = r_bin_te_get_entrypoint ( bin )		3675269	2		=			
ANR	3675277	Identifier	entry		3675269	0					
ANR	3675278	CallExpression	r_bin_te_get_entrypoint ( bin )		3675269	1					
ANR	3675279	Callee	r_bin_te_get_entrypoint		3675269	0					
ANR	3675280	Identifier	r_bin_te_get_entrypoint		3675269	0					
ANR	3675281	ArgumentList	bin		3675269	1					
ANR	3675282	Argument	bin		3675269	0					
ANR	3675283	Identifier	bin		3675269	0					
ANR	3675284	Statement	ut64	69:1:3215:3218	3675269	1	True				
ANR	3675285	Statement	addr	69:6:3220:3223	3675269	2	True				
ANR	3675286	Statement	=	69:11:3225:3225	3675269	3	True				
ANR	3675287	Statement	0L	69:13:3227:3228	3675269	4	True				
ANR	3675288	ExpressionStatement	L	69:15:3229:3230	3675269	5	True				
ANR	3675289	Identifier	L		3675269	0					
ANR	3675290	IdentifierDeclStatement	ut8 buf [ 512 ] ;	70:1:3233:3245	3675269	6	True				
ANR	3675291	IdentifierDecl	buf [ 512 ]		3675269	0					
ANR	3675292	IdentifierDeclType	ut8 [ 512 ]		3675269	0					
ANR	3675293	Identifier	buf		3675269	1					
ANR	3675294	PrimaryExpression	512		3675269	2					
ANR	3675295	IfStatement	if ( ! bin )		3675269	7					
ANR	3675296	Condition	! bin	71:5:3252:3255	3675269	0	True				
ANR	3675297	UnaryOperationExpression	! bin		3675269	0					
ANR	3675298	UnaryOperator	!		3675269	0					
ANR	3675299	Identifier	bin		3675269	1					
ANR	3675300	CompoundStatement		5:11:95:95	3675269	1					
ANR	3675301	Statement	return	72:2:3262:3267	3675269	0	True				
ANR	3675302	Statement	0L	72:9:3269:3270	3675269	1	True				
ANR	3675303	ExpressionStatement	L	72:11:3271:3272	3675269	2	True				
ANR	3675304	Identifier	L		3675269	0					
ANR	3675305	IfStatement	"if ( r_buf_read_at ( bin -> b , entry -> paddr , buf , sizeof ( buf ) ) == - 1 )"		3675269	8					
ANR	3675306	Condition	"r_buf_read_at ( bin -> b , entry -> paddr , buf , sizeof ( buf ) ) == - 1"	74:5:3282:3342	3675269	0	True				
ANR	3675307	EqualityExpression	"r_buf_read_at ( bin -> b , entry -> paddr , buf , sizeof ( buf ) ) == - 1"		3675269	0		==			
ANR	3675308	CallExpression	"r_buf_read_at ( bin -> b , entry -> paddr , buf , sizeof ( buf ) )"		3675269	0					
ANR	3675309	Callee	r_buf_read_at		3675269	0					
ANR	3675310	Identifier	r_buf_read_at		3675269	0					
ANR	3675311	ArgumentList	bin -> b		3675269	1					
ANR	3675312	Argument	bin -> b		3675269	0					
ANR	3675313	PtrMemberAccess	bin -> b		3675269	0					
ANR	3675314	Identifier	bin		3675269	0					
ANR	3675315	Identifier	b		3675269	1					
ANR	3675316	Argument	entry -> paddr		3675269	1					
ANR	3675317	PtrMemberAccess	entry -> paddr		3675269	0					
ANR	3675318	Identifier	entry		3675269	0					
ANR	3675319	Identifier	paddr		3675269	1					
ANR	3675320	Argument	buf		3675269	2					
ANR	3675321	Identifier	buf		3675269	0					
ANR	3675322	Argument	sizeof ( buf )		3675269	3					
ANR	3675323	SizeofExpression	sizeof ( buf )		3675269	0					
ANR	3675324	Sizeof	sizeof		3675269	0					
ANR	3675325	SizeofOperand	buf		3675269	1					
ANR	3675326	UnaryOperationExpression	- 1		3675269	1					
ANR	3675327	UnaryOperator	-		3675269	0					
ANR	3675328	PrimaryExpression	1		3675269	1					
ANR	3675329	CompoundStatement		8:68:182:182	3675269	1					
ANR	3675330	ExpressionStatement	"eprintf ( ""Error: read (entry)\\n"" )"	75:2:3349:3382	3675269	0	True				
ANR	3675331	CallExpression	"eprintf ( ""Error: read (entry)\\n"" )"		3675269	0					
ANR	3675332	Callee	eprintf		3675269	0					
ANR	3675333	Identifier	eprintf		3675269	0					
ANR	3675334	ArgumentList	"""Error: read (entry)\\n"""		3675269	1					
ANR	3675335	Argument	"""Error: read (entry)\\n"""		3675269	0					
ANR	3675336	PrimaryExpression	"""Error: read (entry)\\n"""		3675269	0					
ANR	3675337	ElseStatement	else		3675269	0					
ANR	3675338	CompoundStatement		10:8:229:229	3675269	0					
ANR	3675339	IfStatement	if ( buf [ 367 ] == 0xe8 )		3675269	0					
ANR	3675340	Condition	buf [ 367 ] == 0xe8	77:6:3400:3415	3675269	0	True				
ANR	3675341	EqualityExpression	buf [ 367 ] == 0xe8		3675269	0		==			
ANR	3675342	ArrayIndexing	buf [ 367 ]		3675269	0					
ANR	3675343	Identifier	buf		3675269	0					
ANR	3675344	PrimaryExpression	367		3675269	1					
ANR	3675345	PrimaryExpression	0xe8		3675269	1					
ANR	3675346	CompoundStatement		12:3:260:326	3675269	1					
ANR	3675347	IdentifierDeclStatement	int delta = ( buf [ 368 ] | buf [ 369 ] << 8 | buf [ 370 ] << 16 | buf [ 371 ] << 24 ) ;	78:3:3423:3489	3675269	0	True				
ANR	3675348	IdentifierDecl	delta = ( buf [ 368 ] | buf [ 369 ] << 8 | buf [ 370 ] << 16 | buf [ 371 ] << 24 )		3675269	0					
ANR	3675349	IdentifierDeclType	int		3675269	0					
ANR	3675350	Identifier	delta		3675269	1					
ANR	3675351	AssignmentExpression	delta = ( buf [ 368 ] | buf [ 369 ] << 8 | buf [ 370 ] << 16 | buf [ 371 ] << 24 )		3675269	2		=			
ANR	3675352	Identifier	delta		3675269	0					
ANR	3675353	InclusiveOrExpression	buf [ 368 ] | buf [ 369 ] << 8 | buf [ 370 ] << 16 | buf [ 371 ] << 24		3675269	1		|			
ANR	3675354	ArrayIndexing	buf [ 368 ]		3675269	0					
ANR	3675355	Identifier	buf		3675269	0					
ANR	3675356	PrimaryExpression	368		3675269	1					
ANR	3675357	InclusiveOrExpression	buf [ 369 ] << 8 | buf [ 370 ] << 16 | buf [ 371 ] << 24		3675269	1		|			
ANR	3675358	ShiftExpression	buf [ 369 ] << 8		3675269	0		<<			
ANR	3675359	ArrayIndexing	buf [ 369 ]		3675269	0					
ANR	3675360	Identifier	buf		3675269	0					
ANR	3675361	PrimaryExpression	369		3675269	1					
ANR	3675362	PrimaryExpression	8		3675269	1					
ANR	3675363	InclusiveOrExpression	buf [ 370 ] << 16 | buf [ 371 ] << 24		3675269	1		|			
ANR	3675364	ShiftExpression	buf [ 370 ] << 16		3675269	0		<<			
ANR	3675365	ArrayIndexing	buf [ 370 ]		3675269	0					
ANR	3675366	Identifier	buf		3675269	0					
ANR	3675367	PrimaryExpression	370		3675269	1					
ANR	3675368	PrimaryExpression	16		3675269	1					
ANR	3675369	ShiftExpression	buf [ 371 ] << 24		3675269	1		<<			
ANR	3675370	ArrayIndexing	buf [ 371 ]		3675269	0					
ANR	3675371	Identifier	buf		3675269	0					
ANR	3675372	PrimaryExpression	371		3675269	1					
ANR	3675373	PrimaryExpression	24		3675269	1					
ANR	3675374	ExpressionStatement	delta += 367 + 5	79:3:3494:3510	3675269	1	True				
ANR	3675375	AssignmentExpression	delta += 367 + 5		3675269	0		+=			
ANR	3675376	Identifier	delta		3675269	0					
ANR	3675377	AdditiveExpression	367 + 5		3675269	1		+			
ANR	3675378	PrimaryExpression	367		3675269	0					
ANR	3675379	PrimaryExpression	5		3675269	1					
ANR	3675380	ExpressionStatement	addr = entry -> vaddr	80:3:3515:3534	3675269	2	True				
ANR	3675381	AssignmentExpression	addr = entry -> vaddr		3675269	0		=			
ANR	3675382	Identifier	addr		3675269	0					
ANR	3675383	PtrMemberAccess	entry -> vaddr		3675269	1					
ANR	3675384	Identifier	entry		3675269	0					
ANR	3675385	Identifier	vaddr		3675269	1					
ANR	3675386	IfStatement	if ( delta >= ( UT64_MAX - addr ) )		3675269	3					
ANR	3675387	Condition	delta >= ( UT64_MAX - addr )	81:7:3543:3568	3675269	0	True				
ANR	3675388	RelationalExpression	delta >= ( UT64_MAX - addr )		3675269	0		>=			
ANR	3675389	Identifier	delta		3675269	0					
ANR	3675390	AdditiveExpression	UT64_MAX - addr		3675269	1		-			
ANR	3675391	Identifier	UT64_MAX		3675269	0					
ANR	3675392	Identifier	addr		3675269	1					
ANR	3675393	CompoundStatement		15:35:408:408	3675269	1					
ANR	3675394	ExpressionStatement	free ( entry )	82:4:3577:3589	3675269	0	True				
ANR	3675395	CallExpression	free ( entry )		3675269	0					
ANR	3675396	Callee	free		3675269	0					
ANR	3675397	Identifier	free		3675269	0					
ANR	3675398	ArgumentList	entry		3675269	1					
ANR	3675399	Argument	entry		3675269	0					
ANR	3675400	Identifier	entry		3675269	0					
ANR	3675401	ReturnStatement	return UT64_MAX ;	83:4:3595:3610	3675269	1	True				
ANR	3675402	Identifier	UT64_MAX		3675269	0					
ANR	3675403	ExpressionStatement	addr += delta	85:3:3620:3633	3675269	4	True				
ANR	3675404	AssignmentExpression	addr += delta		3675269	0		+=			
ANR	3675405	Identifier	addr		3675269	0					
ANR	3675406	Identifier	delta		3675269	1					
ANR	3675407	ExpressionStatement	free ( entry )	88:1:3643:3655	3675269	9	True				
ANR	3675408	CallExpression	free ( entry )		3675269	0					
ANR	3675409	Callee	free		3675269	0					
ANR	3675410	Identifier	free		3675269	0					
ANR	3675411	ArgumentList	entry		3675269	1					
ANR	3675412	Argument	entry		3675269	0					
ANR	3675413	Identifier	entry		3675269	0					
ANR	3675414	ReturnStatement	return addr ;	89:1:3658:3669	3675269	10	True				
ANR	3675415	Identifier	addr		3675269	0					
ANR	3675416	ReturnType	ut64		3675269	1					
ANR	3675417	Identifier	r_bin_te_get_main_paddr		3675269	2					
ANR	3675418	ParameterList	struct r_bin_te_obj_t * bin		3675269	3					
ANR	3675419	Parameter	struct r_bin_te_obj_t * bin	67:29:3134:3159	3675269	0	True				
ANR	3675420	ParameterType	struct r_bin_te_obj_t *		3675269	0					
ANR	3675421	Identifier	bin		3675269	1					
ANR	3675422	CFGEntryNode	ENTRY		3675269		True				
ANR	3675423	CFGExitNode	EXIT		3675269		True				
ANR	3675424	Symbol	entry -> vaddr		3675269						
ANR	3675425	Symbol	bin -> b		3675269						
ANR	3675426	Symbol	* buf		3675269						
ANR	3675427	Symbol	bin		3675269						
ANR	3675428	Symbol	delta		3675269						
ANR	3675429	Symbol	* bin		3675269						
ANR	3675430	Symbol	entry		3675269						
ANR	3675431	Symbol	buf		3675269						
ANR	3675432	Symbol	entry -> paddr		3675269						
ANR	3675433	Symbol	r_bin_te_get_entrypoint		3675269						
ANR	3675434	Symbol	r_buf_read_at		3675269						
ANR	3675435	Symbol	addr		3675269						
ANR	3675436	Symbol	UT64_MAX		3675269						
ANR	3675437	Symbol	* entry		3675269						
ANR	3675438	Function	r_bin_te_vaddr_to_paddr	92:0:3674:4135							
ANR	3675439	FunctionDef	"r_bin_te_vaddr_to_paddr (struct r_bin_te_obj_t * bin , TE_DWord vaddr)"		3675438	0					
ANR	3675440	CompoundStatement		92:84:3758:4135	3675438	0					
ANR	3675441	IdentifierDeclStatement	TE_DWord section_base ;	93:1:3761:3782	3675438	0	True				
ANR	3675442	IdentifierDecl	section_base		3675438	0					
ANR	3675443	IdentifierDeclType	TE_DWord		3675438	0					
ANR	3675444	Identifier	section_base		3675438	1					
ANR	3675445	IdentifierDeclStatement	"int i , section_size ;"	94:1:3785:3804	3675438	1	True				
ANR	3675446	IdentifierDecl	i		3675438	0					
ANR	3675447	IdentifierDeclType	int		3675438	0					
ANR	3675448	Identifier	i		3675438	1					
ANR	3675449	IdentifierDecl	section_size		3675438	1					
ANR	3675450	IdentifierDeclType	int		3675438	0					
ANR	3675451	Identifier	section_size		3675438	1					
ANR	3675452	ForStatement	for ( i = 0 ; i < bin -> header -> NumberOfSections ; i ++ )		3675438	2					
ANR	3675453	ForInit	i = 0 ;	96:6:3813:3818	3675438	0	True				
ANR	3675454	AssignmentExpression	i = 0		3675438	0		=			
ANR	3675455	Identifier	i		3675438	0					
ANR	3675456	PrimaryExpression	0		3675438	1					
ANR	3675457	Condition	i < bin -> header -> NumberOfSections	96:13:3820:3852	3675438	1	True				
ANR	3675458	RelationalExpression	i < bin -> header -> NumberOfSections		3675438	0		<			
ANR	3675459	Identifier	i		3675438	0					
ANR	3675460	PtrMemberAccess	bin -> header -> NumberOfSections		3675438	1					
ANR	3675461	PtrMemberAccess	bin -> header		3675438	0					
ANR	3675462	Identifier	bin		3675438	0					
ANR	3675463	Identifier	header		3675438	1					
ANR	3675464	Identifier	NumberOfSections		3675438	1					
ANR	3675465	PostIncDecOperationExpression	i ++	96:48:3855:3857	3675438	2	True				
ANR	3675466	Identifier	i		3675438	0					
ANR	3675467	IncDec	++		3675438	1					
ANR	3675468	CompoundStatement		5:53:101:101	3675438	3					
ANR	3675469	ExpressionStatement	section_base = bin -> section_header [ i ] . VirtualAddress	97:2:3864:3916	3675438	0	True				
ANR	3675470	AssignmentExpression	section_base = bin -> section_header [ i ] . VirtualAddress		3675438	0		=			
ANR	3675471	Identifier	section_base		3675438	0					
ANR	3675472	MemberAccess	bin -> section_header [ i ] . VirtualAddress		3675438	1					
ANR	3675473	ArrayIndexing	bin -> section_header [ i ]		3675438	0					
ANR	3675474	PtrMemberAccess	bin -> section_header		3675438	0					
ANR	3675475	Identifier	bin		3675438	0					
ANR	3675476	Identifier	section_header		3675438	1					
ANR	3675477	Identifier	i		3675438	1					
ANR	3675478	Identifier	VirtualAddress		3675438	1					
ANR	3675479	ExpressionStatement	section_size = bin -> section_header [ i ] . VirtualSize	98:2:3920:3969	3675438	1	True				
ANR	3675480	AssignmentExpression	section_size = bin -> section_header [ i ] . VirtualSize		3675438	0		=			
ANR	3675481	Identifier	section_size		3675438	0					
ANR	3675482	MemberAccess	bin -> section_header [ i ] . VirtualSize		3675438	1					
ANR	3675483	ArrayIndexing	bin -> section_header [ i ]		3675438	0					
ANR	3675484	PtrMemberAccess	bin -> section_header		3675438	0					
ANR	3675485	Identifier	bin		3675438	0					
ANR	3675486	Identifier	section_header		3675438	1					
ANR	3675487	Identifier	i		3675438	1					
ANR	3675488	Identifier	VirtualSize		3675438	1					
ANR	3675489	IfStatement	if ( vaddr >= section_base && vaddr < section_base + section_size )		3675438	2					
ANR	3675490	Condition	vaddr >= section_base && vaddr < section_base + section_size	99:6:3977:4036	3675438	0	True				
ANR	3675491	AndExpression	vaddr >= section_base && vaddr < section_base + section_size		3675438	0		&&			
ANR	3675492	RelationalExpression	vaddr >= section_base		3675438	0		>=			
ANR	3675493	Identifier	vaddr		3675438	0					
ANR	3675494	Identifier	section_base		3675438	1					
ANR	3675495	RelationalExpression	vaddr < section_base + section_size		3675438	1		<			
ANR	3675496	Identifier	vaddr		3675438	0					
ANR	3675497	AdditiveExpression	section_base + section_size		3675438	1		+			
ANR	3675498	Identifier	section_base		3675438	0					
ANR	3675499	Identifier	section_size		3675438	1					
ANR	3675500	CompoundStatement		8:68:280:280	3675438	1					
ANR	3675501	ReturnStatement	return bin -> section_header [ i ] . PointerToRawData + ( vaddr - section_base ) ;	100:3:4044:4115	3675438	0	True				
ANR	3675502	AdditiveExpression	bin -> section_header [ i ] . PointerToRawData + ( vaddr - section_base )		3675438	0		+			
ANR	3675503	MemberAccess	bin -> section_header [ i ] . PointerToRawData		3675438	0					
ANR	3675504	ArrayIndexing	bin -> section_header [ i ]		3675438	0					
ANR	3675505	PtrMemberAccess	bin -> section_header		3675438	0					
ANR	3675506	Identifier	bin		3675438	0					
ANR	3675507	Identifier	section_header		3675438	1					
ANR	3675508	Identifier	i		3675438	1					
ANR	3675509	Identifier	PointerToRawData		3675438	1					
ANR	3675510	AdditiveExpression	vaddr - section_base		3675438	1		-			
ANR	3675511	Identifier	vaddr		3675438	0					
ANR	3675512	Identifier	section_base		3675438	1					
ANR	3675513	ReturnStatement	return 0 ;	103:1:4125:4133	3675438	3	True				
ANR	3675514	PrimaryExpression	0		3675438	0					
ANR	3675515	ReturnType	static TE_DWord		3675438	1					
ANR	3675516	Identifier	r_bin_te_vaddr_to_paddr		3675438	2					
ANR	3675517	ParameterList	"struct r_bin_te_obj_t * bin , TE_DWord vaddr"		3675438	3					
ANR	3675518	Parameter	struct r_bin_te_obj_t * bin	92:40:3714:3739	3675438	0	True				
ANR	3675519	ParameterType	struct r_bin_te_obj_t *		3675438	0					
ANR	3675520	Identifier	bin		3675438	1					
ANR	3675521	Parameter	TE_DWord vaddr	92:68:3742:3755	3675438	1	True				
ANR	3675522	ParameterType	TE_DWord		3675438	0					
ANR	3675523	Identifier	vaddr		3675438	1					
ANR	3675524	CFGEntryNode	ENTRY		3675438		True				
ANR	3675525	CFGExitNode	EXIT		3675438		True				
ANR	3675526	Symbol	bin -> section_header [ i ] . VirtualSize		3675438						
ANR	3675527	Symbol	bin		3675438						
ANR	3675528	Symbol	bin -> header		3675438						
ANR	3675529	Symbol	i		3675438						
ANR	3675530	Symbol	bin -> section_header [ i ] . PointerToRawData		3675438						
ANR	3675531	Symbol	vaddr		3675438						
ANR	3675532	Symbol	bin -> section_header		3675438						
ANR	3675533	Symbol	* bin		3675438						
ANR	3675534	Symbol	bin -> section_header [ i ] . VirtualAddress		3675438						
ANR	3675535	Symbol	* bin -> header		3675438						
ANR	3675536	Symbol	* i		3675438						
ANR	3675537	Symbol	section_base		3675438						
ANR	3675538	Symbol	* bin -> section_header		3675438						
ANR	3675539	Symbol	* * bin		3675438						
ANR	3675540	Symbol	bin -> header -> NumberOfSections		3675438						
ANR	3675541	Symbol	section_size		3675438						
ANR	3675542	Function	r_bin_te_init_sections	106:0:4138:4698							
ANR	3675543	FunctionDef	r_bin_te_init_sections (struct r_bin_te_obj_t * bin)		3675542	0					
ANR	3675544	CompoundStatement		106:62:4200:4698	3675542	0					
ANR	3675545	IdentifierDeclStatement	int sections_size = sizeof ( TE_image_section_header ) * bin -> header -> NumberOfSections ;	107:1:4203:4286	3675542	0	True				
ANR	3675546	IdentifierDecl	sections_size = sizeof ( TE_image_section_header ) * bin -> header -> NumberOfSections		3675542	0					
ANR	3675547	IdentifierDeclType	int		3675542	0					
ANR	3675548	Identifier	sections_size		3675542	1					
ANR	3675549	AssignmentExpression	sections_size = sizeof ( TE_image_section_header ) * bin -> header -> NumberOfSections		3675542	2		=			
ANR	3675550	Identifier	sections_size		3675542	0					
ANR	3675551	MultiplicativeExpression	sizeof ( TE_image_section_header ) * bin -> header -> NumberOfSections		3675542	1		*			
ANR	3675552	SizeofExpression	sizeof ( TE_image_section_header )		3675542	0					
ANR	3675553	Sizeof	sizeof		3675542	0					
ANR	3675554	SizeofOperand	TE_image_section_header		3675542	1					
ANR	3675555	PtrMemberAccess	bin -> header -> NumberOfSections		3675542	1					
ANR	3675556	PtrMemberAccess	bin -> header		3675542	0					
ANR	3675557	Identifier	bin		3675542	0					
ANR	3675558	Identifier	header		3675542	1					
ANR	3675559	Identifier	NumberOfSections		3675542	1					
ANR	3675560	IfStatement	if ( sections_size > bin -> size )		3675542	1					
ANR	3675561	Condition	sections_size > bin -> size	108:5:4293:4317	3675542	0	True				
ANR	3675562	RelationalExpression	sections_size > bin -> size		3675542	0		>			
ANR	3675563	Identifier	sections_size		3675542	0					
ANR	3675564	PtrMemberAccess	bin -> size		3675542	1					
ANR	3675565	Identifier	bin		3675542	0					
ANR	3675566	Identifier	size		3675542	1					
ANR	3675567	CompoundStatement		3:32:119:119	3675542	1					
ANR	3675568	ExpressionStatement	"eprintf ( ""Invalid NumberOfSections value\\n"" )"	109:2:4324:4368	3675542	0	True				
ANR	3675569	CallExpression	"eprintf ( ""Invalid NumberOfSections value\\n"" )"		3675542	0					
ANR	3675570	Callee	eprintf		3675542	0					
ANR	3675571	Identifier	eprintf		3675542	0					
ANR	3675572	ArgumentList	"""Invalid NumberOfSections value\\n"""		3675542	1					
ANR	3675573	Argument	"""Invalid NumberOfSections value\\n"""		3675542	0					
ANR	3675574	PrimaryExpression	"""Invalid NumberOfSections value\\n"""		3675542	0					
ANR	3675575	ReturnStatement	return false ;	110:2:4372:4384	3675542	1	True				
ANR	3675576	Identifier	false		3675542	0					
ANR	3675577	IfStatement	if ( ! ( bin -> section_header = malloc ( sections_size ) ) )		3675542	2					
ANR	3675578	Condition	! ( bin -> section_header = malloc ( sections_size ) )	112:5:4394:4440	3675542	0	True				
ANR	3675579	UnaryOperationExpression	! ( bin -> section_header = malloc ( sections_size ) )		3675542	0					
ANR	3675580	UnaryOperator	!		3675542	0					
ANR	3675581	AssignmentExpression	bin -> section_header = malloc ( sections_size )		3675542	1		=			
ANR	3675582	PtrMemberAccess	bin -> section_header		3675542	0					
ANR	3675583	Identifier	bin		3675542	0					
ANR	3675584	Identifier	section_header		3675542	1					
ANR	3675585	CallExpression	malloc ( sections_size )		3675542	1					
ANR	3675586	Callee	malloc		3675542	0					
ANR	3675587	Identifier	malloc		3675542	0					
ANR	3675588	ArgumentList	sections_size		3675542	1					
ANR	3675589	Argument	sections_size		3675542	0					
ANR	3675590	Identifier	sections_size		3675542	0					
ANR	3675591	CompoundStatement		7:54:242:242	3675542	1					
ANR	3675592	ExpressionStatement	"perror ( ""malloc (sections headers)"" )"	113:2:4447:4483	3675542	0	True				
ANR	3675593	CallExpression	"perror ( ""malloc (sections headers)"" )"		3675542	0					
ANR	3675594	Callee	perror		3675542	0					
ANR	3675595	Identifier	perror		3675542	0					
ANR	3675596	ArgumentList	"""malloc (sections headers)"""		3675542	1					
ANR	3675597	Argument	"""malloc (sections headers)"""		3675542	0					
ANR	3675598	PrimaryExpression	"""malloc (sections headers)"""		3675542	0					
ANR	3675599	ReturnStatement	return false ;	114:2:4487:4499	3675542	1	True				
ANR	3675600	Identifier	false		3675542	0					
ANR	3675601	IfStatement	"if ( r_buf_read_at ( bin -> b , sizeof ( TE_image_file_header ) , ( ut8 * ) bin -> section_header , sections_size ) == - 1 )"		3675542	3					
ANR	3675602	Condition	"r_buf_read_at ( bin -> b , sizeof ( TE_image_file_header ) , ( ut8 * ) bin -> section_header , sections_size ) == - 1"	116:5:4509:4612	3675542	0	True				
ANR	3675603	EqualityExpression	"r_buf_read_at ( bin -> b , sizeof ( TE_image_file_header ) , ( ut8 * ) bin -> section_header , sections_size ) == - 1"		3675542	0		==			
ANR	3675604	CallExpression	"r_buf_read_at ( bin -> b , sizeof ( TE_image_file_header ) , ( ut8 * ) bin -> section_header , sections_size )"		3675542	0					
ANR	3675605	Callee	r_buf_read_at		3675542	0					
ANR	3675606	Identifier	r_buf_read_at		3675542	0					
ANR	3675607	ArgumentList	bin -> b		3675542	1					
ANR	3675608	Argument	bin -> b		3675542	0					
ANR	3675609	PtrMemberAccess	bin -> b		3675542	0					
ANR	3675610	Identifier	bin		3675542	0					
ANR	3675611	Identifier	b		3675542	1					
ANR	3675612	Argument	sizeof ( TE_image_file_header )		3675542	1					
ANR	3675613	SizeofExpression	sizeof ( TE_image_file_header )		3675542	0					
ANR	3675614	Sizeof	sizeof		3675542	0					
ANR	3675615	SizeofOperand	TE_image_file_header		3675542	1					
ANR	3675616	Argument	( ut8 * ) bin -> section_header		3675542	2					
ANR	3675617	CastExpression	( ut8 * ) bin -> section_header		3675542	0					
ANR	3675618	CastTarget	ut8 *		3675542	0					
ANR	3675619	PtrMemberAccess	bin -> section_header		3675542	1					
ANR	3675620	Identifier	bin		3675542	0					
ANR	3675621	Identifier	section_header		3675542	1					
ANR	3675622	Argument	sections_size		3675542	3					
ANR	3675623	Identifier	sections_size		3675542	0					
ANR	3675624	UnaryOperationExpression	- 1		3675542	1					
ANR	3675625	UnaryOperator	-		3675542	0					
ANR	3675626	PrimaryExpression	1		3675542	1					
ANR	3675627	CompoundStatement		12:53:414:414	3675542	1					
ANR	3675628	ExpressionStatement	"eprintf ( ""Error: read (sections headers)\\n"" )"	118:2:4619:4663	3675542	0	True				
ANR	3675629	CallExpression	"eprintf ( ""Error: read (sections headers)\\n"" )"		3675542	0					
ANR	3675630	Callee	eprintf		3675542	0					
ANR	3675631	Identifier	eprintf		3675542	0					
ANR	3675632	ArgumentList	"""Error: read (sections headers)\\n"""		3675542	1					
ANR	3675633	Argument	"""Error: read (sections headers)\\n"""		3675542	0					
ANR	3675634	PrimaryExpression	"""Error: read (sections headers)\\n"""		3675542	0					
ANR	3675635	ReturnStatement	return false ;	119:2:4667:4679	3675542	1	True				
ANR	3675636	Identifier	false		3675542	0					
ANR	3675637	ReturnStatement	return true ;	121:1:4685:4696	3675542	4	True				
ANR	3675638	Identifier	true		3675542	0					
ANR	3675639	ReturnType	static int		3675542	1					
ANR	3675640	Identifier	r_bin_te_init_sections		3675542	2					
ANR	3675641	ParameterList	struct r_bin_te_obj_t * bin		3675542	3					
ANR	3675642	Parameter	struct r_bin_te_obj_t * bin	106:34:4172:4197	3675542	0	True				
ANR	3675643	ParameterType	struct r_bin_te_obj_t *		3675542	0					
ANR	3675644	Identifier	bin		3675542	1					
ANR	3675645	CFGEntryNode	ENTRY		3675542		True				
ANR	3675646	CFGExitNode	EXIT		3675542		True				
ANR	3675647	Symbol	bin -> size		3675542						
ANR	3675648	Symbol	malloc		3675542						
ANR	3675649	Symbol	bin -> b		3675542						
ANR	3675650	Symbol	bin		3675542						
ANR	3675651	Symbol	bin -> header		3675542						
ANR	3675652	Symbol	false		3675542						
ANR	3675653	Symbol	sections_size		3675542						
ANR	3675654	Symbol	bin -> section_header		3675542						
ANR	3675655	Symbol	* bin		3675542						
ANR	3675656	Symbol	* bin -> header		3675542						
ANR	3675657	Symbol	r_buf_read_at		3675542						
ANR	3675658	Symbol	true		3675542						
ANR	3675659	Symbol	* * bin		3675542						
ANR	3675660	Symbol	bin -> header -> NumberOfSections		3675542						
ANR	3675661	Function	r_bin_te_init	124:0:4701:5039							
ANR	3675662	FunctionDef	r_bin_te_init (struct r_bin_te_obj_t * bin)		3675661	0					
ANR	3675663	CompoundStatement		124:53:4754:5039	3675661	0					
ANR	3675664	ExpressionStatement	bin -> header = NULL	125:1:4757:4775	3675661	0	True				
ANR	3675665	AssignmentExpression	bin -> header = NULL		3675661	0		=			
ANR	3675666	PtrMemberAccess	bin -> header		3675661	0					
ANR	3675667	Identifier	bin		3675661	0					
ANR	3675668	Identifier	header		3675661	1					
ANR	3675669	Identifier	NULL		3675661	1					
ANR	3675670	ExpressionStatement	bin -> section_header = NULL	126:1:4778:4804	3675661	1	True				
ANR	3675671	AssignmentExpression	bin -> section_header = NULL		3675661	0		=			
ANR	3675672	PtrMemberAccess	bin -> section_header		3675661	0					
ANR	3675673	Identifier	bin		3675661	0					
ANR	3675674	Identifier	section_header		3675661	1					
ANR	3675675	Identifier	NULL		3675661	1					
ANR	3675676	ExpressionStatement	bin -> endian = 0	127:1:4807:4822	3675661	2	True				
ANR	3675677	AssignmentExpression	bin -> endian = 0		3675661	0		=			
ANR	3675678	PtrMemberAccess	bin -> endian		3675661	0					
ANR	3675679	Identifier	bin		3675661	0					
ANR	3675680	Identifier	endian		3675661	1					
ANR	3675681	PrimaryExpression	0		3675661	1					
ANR	3675682	IfStatement	if ( ! r_bin_te_init_hdr ( bin ) )		3675661	3					
ANR	3675683	Condition	! r_bin_te_init_hdr ( bin )	128:5:4829:4852	3675661	0	True				
ANR	3675684	UnaryOperationExpression	! r_bin_te_init_hdr ( bin )		3675661	0					
ANR	3675685	UnaryOperator	!		3675661	0					
ANR	3675686	CallExpression	r_bin_te_init_hdr ( bin )		3675661	1					
ANR	3675687	Callee	r_bin_te_init_hdr		3675661	0					
ANR	3675688	Identifier	r_bin_te_init_hdr		3675661	0					
ANR	3675689	ArgumentList	bin		3675661	1					
ANR	3675690	Argument	bin		3675661	0					
ANR	3675691	Identifier	bin		3675661	0					
ANR	3675692	CompoundStatement		5:31:100:100	3675661	1					
ANR	3675693	ExpressionStatement	"eprintf ( ""Warning: File is not TE\\n"" )"	129:2:4859:4895	3675661	0	True				
ANR	3675694	CallExpression	"eprintf ( ""Warning: File is not TE\\n"" )"		3675661	0					
ANR	3675695	Callee	eprintf		3675661	0					
ANR	3675696	Identifier	eprintf		3675661	0					
ANR	3675697	ArgumentList	"""Warning: File is not TE\\n"""		3675661	1					
ANR	3675698	Argument	"""Warning: File is not TE\\n"""		3675661	0					
ANR	3675699	PrimaryExpression	"""Warning: File is not TE\\n"""		3675661	0					
ANR	3675700	ReturnStatement	return false ;	130:2:4899:4911	3675661	1	True				
ANR	3675701	Identifier	false		3675661	0					
ANR	3675702	IfStatement	if ( ! r_bin_te_init_sections ( bin ) )		3675661	4					
ANR	3675703	Condition	! r_bin_te_init_sections ( bin )	132:5:4921:4949	3675661	0	True				
ANR	3675704	UnaryOperationExpression	! r_bin_te_init_sections ( bin )		3675661	0					
ANR	3675705	UnaryOperator	!		3675661	0					
ANR	3675706	CallExpression	r_bin_te_init_sections ( bin )		3675661	1					
ANR	3675707	Callee	r_bin_te_init_sections		3675661	0					
ANR	3675708	Identifier	r_bin_te_init_sections		3675661	0					
ANR	3675709	ArgumentList	bin		3675661	1					
ANR	3675710	Argument	bin		3675661	0					
ANR	3675711	Identifier	bin		3675661	0					
ANR	3675712	CompoundStatement		9:36:197:197	3675661	1					
ANR	3675713	ExpressionStatement	"eprintf ( ""Warning: Cannot initialize sections\\n"" )"	133:2:4956:5004	3675661	0	True				
ANR	3675714	CallExpression	"eprintf ( ""Warning: Cannot initialize sections\\n"" )"		3675661	0					
ANR	3675715	Callee	eprintf		3675661	0					
ANR	3675716	Identifier	eprintf		3675661	0					
ANR	3675717	ArgumentList	"""Warning: Cannot initialize sections\\n"""		3675661	1					
ANR	3675718	Argument	"""Warning: Cannot initialize sections\\n"""		3675661	0					
ANR	3675719	PrimaryExpression	"""Warning: Cannot initialize sections\\n"""		3675661	0					
ANR	3675720	ReturnStatement	return false ;	134:2:5008:5020	3675661	1	True				
ANR	3675721	Identifier	false		3675661	0					
ANR	3675722	ReturnStatement	return true ;	136:1:5026:5037	3675661	5	True				
ANR	3675723	Identifier	true		3675661	0					
ANR	3675724	ReturnType	static int		3675661	1					
ANR	3675725	Identifier	r_bin_te_init		3675661	2					
ANR	3675726	ParameterList	struct r_bin_te_obj_t * bin		3675661	3					
ANR	3675727	Parameter	struct r_bin_te_obj_t * bin	124:25:4726:4751	3675661	0	True				
ANR	3675728	ParameterType	struct r_bin_te_obj_t *		3675661	0					
ANR	3675729	Identifier	bin		3675661	1					
ANR	3675730	CFGEntryNode	ENTRY		3675661		True				
ANR	3675731	CFGExitNode	EXIT		3675661		True				
ANR	3675732	Symbol	NULL		3675661						
ANR	3675733	Symbol	bin		3675661						
ANR	3675734	Symbol	bin -> header		3675661						
ANR	3675735	Symbol	bin -> endian		3675661						
ANR	3675736	Symbol	r_bin_te_init_sections		3675661						
ANR	3675737	Symbol	false		3675661						
ANR	3675738	Symbol	true		3675661						
ANR	3675739	Symbol	r_bin_te_init_hdr		3675661						
ANR	3675740	Symbol	bin -> section_header		3675661						
ANR	3675741	Symbol	* bin		3675661						
ANR	3675742	Function	r_bin_te_get_arch	139:0:5042:5800							
ANR	3675743	FunctionDef	r_bin_te_get_arch (struct r_bin_te_obj_t * bin)		3675742	0					
ANR	3675744	CompoundStatement		139:52:5094:5800	3675742	0					
ANR	3675745	IdentifierDeclStatement	char * arch ;	140:1:5097:5107	3675742	0	True				
ANR	3675746	IdentifierDecl	* arch		3675742	0					
ANR	3675747	IdentifierDeclType	char *		3675742	0					
ANR	3675748	Identifier	arch		3675742	1					
ANR	3675749	IfStatement	if ( ! bin )		3675742	1					
ANR	3675750	Condition	! bin	141:5:5114:5117	3675742	0	True				
ANR	3675751	UnaryOperationExpression	! bin		3675742	0					
ANR	3675752	UnaryOperator	!		3675742	0					
ANR	3675753	Identifier	bin		3675742	1					
ANR	3675754	CompoundStatement		3:11:25:25	3675742	1					
ANR	3675755	ReturnStatement	return NULL ;	142:2:5124:5135	3675742	0	True				
ANR	3675756	Identifier	NULL		3675742	0					
ANR	3675757	SwitchStatement	switch ( bin -> header -> Machine )		3675742	2					
ANR	3675758	Condition	bin -> header -> Machine	144:9:5149:5168	3675742	0	True				
ANR	3675759	PtrMemberAccess	bin -> header -> Machine		3675742	0					
ANR	3675760	PtrMemberAccess	bin -> header		3675742	0					
ANR	3675761	Identifier	bin		3675742	0					
ANR	3675762	Identifier	header		3675742	1					
ANR	3675763	Identifier	Machine		3675742	1					
ANR	3675764	CompoundStatement		6:31:76:76	3675742	1					
ANR	3675765	Label	case TE_IMAGE_FILE_MACHINE_ALPHA :	145:1:5174:5206	3675742	0	True				
ANR	3675766	Identifier	TE_IMAGE_FILE_MACHINE_ALPHA		3675742	0					
ANR	3675767	Label	case TE_IMAGE_FILE_MACHINE_ALPHA64 :	146:1:5209:5243	3675742	1	True				
ANR	3675768	Identifier	TE_IMAGE_FILE_MACHINE_ALPHA64		3675742	0					
ANR	3675769	ExpressionStatement	"arch = strdup ( ""alpha"" )"	147:2:5247:5270	3675742	2	True				
ANR	3675770	AssignmentExpression	"arch = strdup ( ""alpha"" )"		3675742	0		=			
ANR	3675771	Identifier	arch		3675742	0					
ANR	3675772	CallExpression	"strdup ( ""alpha"" )"		3675742	1					
ANR	3675773	Callee	strdup		3675742	0					
ANR	3675774	Identifier	strdup		3675742	0					
ANR	3675775	ArgumentList	"""alpha"""		3675742	1					
ANR	3675776	Argument	"""alpha"""		3675742	0					
ANR	3675777	PrimaryExpression	"""alpha"""		3675742	0					
ANR	3675778	BreakStatement	break ;	148:2:5274:5279	3675742	3	True				
ANR	3675779	Label	case TE_IMAGE_FILE_MACHINE_ARM :	149:1:5282:5312	3675742	4	True				
ANR	3675780	Identifier	TE_IMAGE_FILE_MACHINE_ARM		3675742	0					
ANR	3675781	Label	case TE_IMAGE_FILE_MACHINE_THUMB :	150:1:5315:5347	3675742	5	True				
ANR	3675782	Identifier	TE_IMAGE_FILE_MACHINE_THUMB		3675742	0					
ANR	3675783	ExpressionStatement	"arch = strdup ( ""arm"" )"	151:2:5351:5372	3675742	6	True				
ANR	3675784	AssignmentExpression	"arch = strdup ( ""arm"" )"		3675742	0		=			
ANR	3675785	Identifier	arch		3675742	0					
ANR	3675786	CallExpression	"strdup ( ""arm"" )"		3675742	1					
ANR	3675787	Callee	strdup		3675742	0					
ANR	3675788	Identifier	strdup		3675742	0					
ANR	3675789	ArgumentList	"""arm"""		3675742	1					
ANR	3675790	Argument	"""arm"""		3675742	0					
ANR	3675791	PrimaryExpression	"""arm"""		3675742	0					
ANR	3675792	BreakStatement	break ;	152:2:5376:5381	3675742	7	True				
ANR	3675793	Label	case TE_IMAGE_FILE_MACHINE_M68K :	153:1:5384:5415	3675742	8	True				
ANR	3675794	Identifier	TE_IMAGE_FILE_MACHINE_M68K		3675742	0					
ANR	3675795	ExpressionStatement	"arch = strdup ( ""m68k"" )"	154:2:5419:5441	3675742	9	True				
ANR	3675796	AssignmentExpression	"arch = strdup ( ""m68k"" )"		3675742	0		=			
ANR	3675797	Identifier	arch		3675742	0					
ANR	3675798	CallExpression	"strdup ( ""m68k"" )"		3675742	1					
ANR	3675799	Callee	strdup		3675742	0					
ANR	3675800	Identifier	strdup		3675742	0					
ANR	3675801	ArgumentList	"""m68k"""		3675742	1					
ANR	3675802	Argument	"""m68k"""		3675742	0					
ANR	3675803	PrimaryExpression	"""m68k"""		3675742	0					
ANR	3675804	BreakStatement	break ;	155:2:5445:5450	3675742	10	True				
ANR	3675805	Label	case TE_IMAGE_FILE_MACHINE_MIPS16 :	156:1:5453:5486	3675742	11	True				
ANR	3675806	Identifier	TE_IMAGE_FILE_MACHINE_MIPS16		3675742	0					
ANR	3675807	Label	case TE_IMAGE_FILE_MACHINE_MIPSFPU :	157:1:5489:5523	3675742	12	True				
ANR	3675808	Identifier	TE_IMAGE_FILE_MACHINE_MIPSFPU		3675742	0					
ANR	3675809	Label	case TE_IMAGE_FILE_MACHINE_MIPSFPU16 :	158:1:5526:5562	3675742	13	True				
ANR	3675810	Identifier	TE_IMAGE_FILE_MACHINE_MIPSFPU16		3675742	0					
ANR	3675811	Label	case TE_IMAGE_FILE_MACHINE_WCEMIPSV2 :	159:1:5565:5601	3675742	14	True				
ANR	3675812	Identifier	TE_IMAGE_FILE_MACHINE_WCEMIPSV2		3675742	0					
ANR	3675813	ExpressionStatement	"arch = strdup ( ""mips"" )"	160:2:5605:5627	3675742	15	True				
ANR	3675814	AssignmentExpression	"arch = strdup ( ""mips"" )"		3675742	0		=			
ANR	3675815	Identifier	arch		3675742	0					
ANR	3675816	CallExpression	"strdup ( ""mips"" )"		3675742	1					
ANR	3675817	Callee	strdup		3675742	0					
ANR	3675818	Identifier	strdup		3675742	0					
ANR	3675819	ArgumentList	"""mips"""		3675742	1					
ANR	3675820	Argument	"""mips"""		3675742	0					
ANR	3675821	PrimaryExpression	"""mips"""		3675742	0					
ANR	3675822	BreakStatement	break ;	161:2:5631:5636	3675742	16	True				
ANR	3675823	Label	case TE_IMAGE_FILE_MACHINE_POWERPC :	162:1:5639:5673	3675742	17	True				
ANR	3675824	Identifier	TE_IMAGE_FILE_MACHINE_POWERPC		3675742	0					
ANR	3675825	Label	case TE_IMAGE_FILE_MACHINE_POWERPCFP :	163:1:5676:5712	3675742	18	True				
ANR	3675826	Identifier	TE_IMAGE_FILE_MACHINE_POWERPCFP		3675742	0					
ANR	3675827	ExpressionStatement	"arch = strdup ( ""ppc"" )"	164:2:5716:5737	3675742	19	True				
ANR	3675828	AssignmentExpression	"arch = strdup ( ""ppc"" )"		3675742	0		=			
ANR	3675829	Identifier	arch		3675742	0					
ANR	3675830	CallExpression	"strdup ( ""ppc"" )"		3675742	1					
ANR	3675831	Callee	strdup		3675742	0					
ANR	3675832	Identifier	strdup		3675742	0					
ANR	3675833	ArgumentList	"""ppc"""		3675742	1					
ANR	3675834	Argument	"""ppc"""		3675742	0					
ANR	3675835	PrimaryExpression	"""ppc"""		3675742	0					
ANR	3675836	BreakStatement	break ;	165:2:5741:5746	3675742	20	True				
ANR	3675837	Label	default :	166:1:5749:5756	3675742	21	True				
ANR	3675838	Identifier	default		3675742	0					
ANR	3675839	ExpressionStatement	"arch = strdup ( ""x86"" )"	167:2:5760:5781	3675742	22	True				
ANR	3675840	AssignmentExpression	"arch = strdup ( ""x86"" )"		3675742	0		=			
ANR	3675841	Identifier	arch		3675742	0					
ANR	3675842	CallExpression	"strdup ( ""x86"" )"		3675742	1					
ANR	3675843	Callee	strdup		3675742	0					
ANR	3675844	Identifier	strdup		3675742	0					
ANR	3675845	ArgumentList	"""x86"""		3675742	1					
ANR	3675846	Argument	"""x86"""		3675742	0					
ANR	3675847	PrimaryExpression	"""x86"""		3675742	0					
ANR	3675848	ReturnStatement	return arch ;	169:1:5787:5798	3675742	3	True				
ANR	3675849	Identifier	arch		3675742	0					
ANR	3675850	ReturnType	char *		3675742	1					
ANR	3675851	Identifier	r_bin_te_get_arch		3675742	2					
ANR	3675852	ParameterList	struct r_bin_te_obj_t * bin		3675742	3					
ANR	3675853	Parameter	struct r_bin_te_obj_t * bin	139:24:5066:5091	3675742	0	True				
ANR	3675854	ParameterType	struct r_bin_te_obj_t *		3675742	0					
ANR	3675855	Identifier	bin		3675742	1					
ANR	3675856	CFGEntryNode	ENTRY		3675742		True				
ANR	3675857	CFGExitNode	EXIT		3675742		True				
ANR	3675858	Symbol	* bin -> header		3675742						
ANR	3675859	Symbol	NULL		3675742						
ANR	3675860	Symbol	bin		3675742						
ANR	3675861	Symbol	bin -> header		3675742						
ANR	3675862	Symbol	arch		3675742						
ANR	3675863	Symbol	* * bin		3675742						
ANR	3675864	Symbol	strdup		3675742						
ANR	3675865	Symbol	* bin		3675742						
ANR	3675866	Symbol	bin -> header -> Machine		3675742						
ANR	3675867	Function	r_bin_te_get_bits	172:0:5803:5897							
ANR	3675868	FunctionDef	r_bin_te_get_bits (struct r_bin_te_obj_t * bin)		3675867	0					
ANR	3675869	CompoundStatement		172:50:5853:5897	3675867	0					
ANR	3675870	ReturnStatement	return 32 ;	173:1:5856:5865	3675867	0	True				
ANR	3675871	PrimaryExpression	32		3675867	0					
ANR	3675872	ReturnType	int		3675867	1					
ANR	3675873	Identifier	r_bin_te_get_bits		3675867	2					
ANR	3675874	ParameterList	struct r_bin_te_obj_t * bin		3675867	3					
ANR	3675875	Parameter	struct r_bin_te_obj_t * bin	172:22:5825:5850	3675867	0	True				
ANR	3675876	ParameterType	struct r_bin_te_obj_t *		3675867	0					
ANR	3675877	Identifier	bin		3675867	1					
ANR	3675878	CFGEntryNode	ENTRY		3675867		True				
ANR	3675879	CFGExitNode	EXIT		3675867		True				
ANR	3675880	Symbol	bin		3675867						
ANR	3675881	Function	r_bin_te_get_entrypoint	177:0:5901:6402							
ANR	3675882	FunctionDef	r_bin_te_get_entrypoint (struct r_bin_te_obj_t * bin)		3675881	0					
ANR	3675883	CompoundStatement		177:62:5963:6402	3675881	0					
ANR	3675884	IdentifierDeclStatement	RBinAddr * entry = NULL ;	178:1:5966:5988	3675881	0	True				
ANR	3675885	IdentifierDecl	* entry = NULL		3675881	0					
ANR	3675886	IdentifierDeclType	RBinAddr *		3675881	0					
ANR	3675887	Identifier	entry		3675881	1					
ANR	3675888	AssignmentExpression	* entry = NULL		3675881	2		=			
ANR	3675889	Identifier	NULL		3675881	0					
ANR	3675890	Identifier	NULL		3675881	1					
ANR	3675891	IfStatement	if ( ! bin || ! bin -> header )		3675881	1					
ANR	3675892	Condition	! bin || ! bin -> header	180:5:5996:6015	3675881	0	True				
ANR	3675893	OrExpression	! bin || ! bin -> header		3675881	0		||			
ANR	3675894	UnaryOperationExpression	! bin		3675881	0					
ANR	3675895	UnaryOperator	!		3675881	0					
ANR	3675896	Identifier	bin		3675881	1					
ANR	3675897	UnaryOperationExpression	! bin -> header		3675881	1					
ANR	3675898	UnaryOperator	!		3675881	0					
ANR	3675899	PtrMemberAccess	bin -> header		3675881	1					
ANR	3675900	Identifier	bin		3675881	0					
ANR	3675901	Identifier	header		3675881	1					
ANR	3675902	CompoundStatement		4:27:54:54	3675881	1					
ANR	3675903	ReturnStatement	return NULL ;	181:2:6022:6033	3675881	0	True				
ANR	3675904	Identifier	NULL		3675881	0					
ANR	3675905	IfStatement	if ( ! ( entry = malloc ( sizeof ( RBinAddr ) ) ) )		3675881	2					
ANR	3675906	Condition	! ( entry = malloc ( sizeof ( RBinAddr ) ) )	183:5:6043:6079	3675881	0	True				
ANR	3675907	UnaryOperationExpression	! ( entry = malloc ( sizeof ( RBinAddr ) ) )		3675881	0					
ANR	3675908	UnaryOperator	!		3675881	0					
ANR	3675909	AssignmentExpression	entry = malloc ( sizeof ( RBinAddr ) )		3675881	1		=			
ANR	3675910	Identifier	entry		3675881	0					
ANR	3675911	CallExpression	malloc ( sizeof ( RBinAddr ) )		3675881	1					
ANR	3675912	Callee	malloc		3675881	0					
ANR	3675913	Identifier	malloc		3675881	0					
ANR	3675914	ArgumentList	sizeof ( RBinAddr )		3675881	1					
ANR	3675915	Argument	sizeof ( RBinAddr )		3675881	0					
ANR	3675916	SizeofExpression	sizeof ( RBinAddr )		3675881	0					
ANR	3675917	Sizeof	sizeof		3675881	0					
ANR	3675918	SizeofOperand	RBinAddr		3675881	1					
ANR	3675919	CompoundStatement		7:44:118:118	3675881	1					
ANR	3675920	ExpressionStatement	"perror ( ""malloc (entrypoint)"" )"	184:2:6086:6115	3675881	0	True				
ANR	3675921	CallExpression	"perror ( ""malloc (entrypoint)"" )"		3675881	0					
ANR	3675922	Callee	perror		3675881	0					
ANR	3675923	Identifier	perror		3675881	0					
ANR	3675924	ArgumentList	"""malloc (entrypoint)"""		3675881	1					
ANR	3675925	Argument	"""malloc (entrypoint)"""		3675881	0					
ANR	3675926	PrimaryExpression	"""malloc (entrypoint)"""		3675881	0					
ANR	3675927	ReturnStatement	return NULL ;	185:2:6119:6130	3675881	1	True				
ANR	3675928	Identifier	NULL		3675881	0					
ANR	3675929	ExpressionStatement	entry -> vaddr = bin -> header -> AddressOfEntryPoint - r_bin_te_get_stripped_delta ( bin )	187:1:6136:6219	3675881	3	True				
ANR	3675930	AssignmentExpression	entry -> vaddr = bin -> header -> AddressOfEntryPoint - r_bin_te_get_stripped_delta ( bin )		3675881	0		=			
ANR	3675931	PtrMemberAccess	entry -> vaddr		3675881	0					
ANR	3675932	Identifier	entry		3675881	0					
ANR	3675933	Identifier	vaddr		3675881	1					
ANR	3675934	AdditiveExpression	bin -> header -> AddressOfEntryPoint - r_bin_te_get_stripped_delta ( bin )		3675881	1		-			
ANR	3675935	PtrMemberAccess	bin -> header -> AddressOfEntryPoint		3675881	0					
ANR	3675936	PtrMemberAccess	bin -> header		3675881	0					
ANR	3675937	Identifier	bin		3675881	0					
ANR	3675938	Identifier	header		3675881	1					
ANR	3675939	Identifier	AddressOfEntryPoint		3675881	1					
ANR	3675940	CallExpression	r_bin_te_get_stripped_delta ( bin )		3675881	1					
ANR	3675941	Callee	r_bin_te_get_stripped_delta		3675881	0					
ANR	3675942	Identifier	r_bin_te_get_stripped_delta		3675881	0					
ANR	3675943	ArgumentList	bin		3675881	1					
ANR	3675944	Argument	bin		3675881	0					
ANR	3675945	Identifier	bin		3675881	0					
ANR	3675946	IfStatement	if ( entry -> vaddr == 0 )		3675881	4					
ANR	3675947	Condition	entry -> vaddr == 0	188:5:6226:6242	3675881	0	True				
ANR	3675948	EqualityExpression	entry -> vaddr == 0		3675881	0		==			
ANR	3675949	PtrMemberAccess	entry -> vaddr		3675881	0					
ANR	3675950	Identifier	entry		3675881	0					
ANR	3675951	Identifier	vaddr		3675881	1					
ANR	3675952	PrimaryExpression	0		3675881	1					
ANR	3675953	CompoundStatement		12:24:281:281	3675881	1					
ANR	3675954	ExpressionStatement	entry -> vaddr = bin -> header -> ImageBase	189:2:6284:6321	3675881	0	True				
ANR	3675955	AssignmentExpression	entry -> vaddr = bin -> header -> ImageBase		3675881	0		=			
ANR	3675956	PtrMemberAccess	entry -> vaddr		3675881	0					
ANR	3675957	Identifier	entry		3675881	0					
ANR	3675958	Identifier	vaddr		3675881	1					
ANR	3675959	PtrMemberAccess	bin -> header -> ImageBase		3675881	1					
ANR	3675960	PtrMemberAccess	bin -> header		3675881	0					
ANR	3675961	Identifier	bin		3675881	0					
ANR	3675962	Identifier	header		3675881	1					
ANR	3675963	Identifier	ImageBase		3675881	1					
ANR	3675964	ExpressionStatement	"entry -> paddr = r_bin_te_vaddr_to_paddr ( bin , entry -> vaddr )"	191:1:6327:6385	3675881	5	True				
ANR	3675965	AssignmentExpression	"entry -> paddr = r_bin_te_vaddr_to_paddr ( bin , entry -> vaddr )"		3675881	0		=			
ANR	3675966	PtrMemberAccess	entry -> paddr		3675881	0					
ANR	3675967	Identifier	entry		3675881	0					
ANR	3675968	Identifier	paddr		3675881	1					
ANR	3675969	CallExpression	"r_bin_te_vaddr_to_paddr ( bin , entry -> vaddr )"		3675881	1					
ANR	3675970	Callee	r_bin_te_vaddr_to_paddr		3675881	0					
ANR	3675971	Identifier	r_bin_te_vaddr_to_paddr		3675881	0					
ANR	3675972	ArgumentList	bin		3675881	1					
ANR	3675973	Argument	bin		3675881	0					
ANR	3675974	Identifier	bin		3675881	0					
ANR	3675975	Argument	entry -> vaddr		3675881	1					
ANR	3675976	PtrMemberAccess	entry -> vaddr		3675881	0					
ANR	3675977	Identifier	entry		3675881	0					
ANR	3675978	Identifier	vaddr		3675881	1					
ANR	3675979	ReturnStatement	return entry ;	192:1:6388:6400	3675881	6	True				
ANR	3675980	Identifier	entry		3675881	0					
ANR	3675981	ReturnType	RBinAddr *		3675881	1					
ANR	3675982	Identifier	r_bin_te_get_entrypoint		3675881	2					
ANR	3675983	ParameterList	struct r_bin_te_obj_t * bin		3675881	3					
ANR	3675984	Parameter	struct r_bin_te_obj_t * bin	177:34:5935:5960	3675881	0	True				
ANR	3675985	ParameterType	struct r_bin_te_obj_t *		3675881	0					
ANR	3675986	Identifier	bin		3675881	1					
ANR	3675987	CFGEntryNode	ENTRY		3675881		True				
ANR	3675988	CFGExitNode	EXIT		3675881		True				
ANR	3675989	Symbol	entry -> vaddr		3675881						
ANR	3675990	Symbol	malloc		3675881						
ANR	3675991	Symbol	bin -> header -> ImageBase		3675881						
ANR	3675992	Symbol	NULL		3675881						
ANR	3675993	Symbol	bin -> header -> AddressOfEntryPoint		3675881						
ANR	3675994	Symbol	bin		3675881						
ANR	3675995	Symbol	bin -> header		3675881						
ANR	3675996	Symbol	r_bin_te_vaddr_to_paddr		3675881						
ANR	3675997	Symbol	* bin		3675881						
ANR	3675998	Symbol	* bin -> header		3675881						
ANR	3675999	Symbol	entry		3675881						
ANR	3676000	Symbol	entry -> paddr		3675881						
ANR	3676001	Symbol	* * bin		3675881						
ANR	3676002	Symbol	* entry		3675881						
ANR	3676003	Symbol	r_bin_te_get_stripped_delta		3675881						
ANR	3676004	Function	r_bin_te_get_image_base	195:0:6405:6546							
ANR	3676005	FunctionDef	r_bin_te_get_image_base (struct r_bin_te_obj_t * bin)		3676004	0					
ANR	3676006	CompoundStatement		196:0:6462:6546	3676004	0					
ANR	3676007	IfStatement	if ( bin && bin -> header )		3676004	0					
ANR	3676008	Condition	bin && bin -> header	197:5:6469:6486	3676004	0	True				
ANR	3676009	AndExpression	bin && bin -> header		3676004	0		&&			
ANR	3676010	Identifier	bin		3676004	0					
ANR	3676011	PtrMemberAccess	bin -> header		3676004	1					
ANR	3676012	Identifier	bin		3676004	0					
ANR	3676013	Identifier	header		3676004	1					
ANR	3676014	CompoundStatement		2:25:26:26	3676004	1					
ANR	3676015	ReturnStatement	return ( ut64 ) bin -> header -> ImageBase ;	198:2:6493:6528	3676004	0	True				
ANR	3676016	CastExpression	( ut64 ) bin -> header -> ImageBase		3676004	0					
ANR	3676017	CastTarget	ut64		3676004	0					
ANR	3676018	PtrMemberAccess	bin -> header -> ImageBase		3676004	1					
ANR	3676019	PtrMemberAccess	bin -> header		3676004	0					
ANR	3676020	Identifier	bin		3676004	0					
ANR	3676021	Identifier	header		3676004	1					
ANR	3676022	Identifier	ImageBase		3676004	1					
ANR	3676023	Statement	return	200:1:6534:6539	3676004	1	True				
ANR	3676024	Statement	0L	200:8:6541:6542	3676004	2	True				
ANR	3676025	ExpressionStatement	L	200:10:6543:6544	3676004	3	True				
ANR	3676026	Identifier	L		3676004	0					
ANR	3676027	ReturnType	ut64		3676004	1					
ANR	3676028	Identifier	r_bin_te_get_image_base		3676004	2					
ANR	3676029	ParameterList	struct r_bin_te_obj_t * bin		3676004	3					
ANR	3676030	Parameter	struct r_bin_te_obj_t * bin	195:29:6434:6459	3676004	0	True				
ANR	3676031	ParameterType	struct r_bin_te_obj_t *		3676004	0					
ANR	3676032	Identifier	bin		3676004	1					
ANR	3676033	CFGEntryNode	ENTRY		3676004		True				
ANR	3676034	CFGExitNode	EXIT		3676004		True				
ANR	3676035	Symbol	* bin -> header		3676004						
ANR	3676036	Symbol	bin -> header -> ImageBase		3676004						
ANR	3676037	Symbol	bin		3676004						
ANR	3676038	Symbol	bin -> header		3676004						
ANR	3676039	Symbol	* * bin		3676004						
ANR	3676040	Symbol	* bin		3676004						
ANR	3676041	Function	r_bin_te_get_machine	203:0:6549:8835							
ANR	3676042	FunctionDef	r_bin_te_get_machine (struct r_bin_te_obj_t * bin)		3676041	0					
ANR	3676043	CompoundStatement		203:55:6604:8835	3676041	0					
ANR	3676044	IdentifierDeclStatement	char * machine ;	204:1:6607:6620	3676041	0	True				
ANR	3676045	IdentifierDecl	* machine		3676041	0					
ANR	3676046	IdentifierDeclType	char *		3676041	0					
ANR	3676047	Identifier	machine		3676041	1					
ANR	3676048	IfStatement	if ( ! bin )		3676041	1					
ANR	3676049	Condition	! bin	205:5:6627:6630	3676041	0	True				
ANR	3676050	UnaryOperationExpression	! bin		3676041	0					
ANR	3676051	UnaryOperator	!		3676041	0					
ANR	3676052	Identifier	bin		3676041	1					
ANR	3676053	CompoundStatement		3:11:28:28	3676041	1					
ANR	3676054	ReturnStatement	return NULL ;	206:2:6637:6648	3676041	0	True				
ANR	3676055	Identifier	NULL		3676041	0					
ANR	3676056	SwitchStatement	switch ( bin -> header -> Machine )		3676041	2					
ANR	3676057	Condition	bin -> header -> Machine	208:9:6662:6681	3676041	0	True				
ANR	3676058	PtrMemberAccess	bin -> header -> Machine		3676041	0					
ANR	3676059	PtrMemberAccess	bin -> header		3676041	0					
ANR	3676060	Identifier	bin		3676041	0					
ANR	3676061	Identifier	header		3676041	1					
ANR	3676062	Identifier	Machine		3676041	1					
ANR	3676063	CompoundStatement		6:31:79:79	3676041	1					
ANR	3676064	Label	case TE_IMAGE_FILE_MACHINE_ALPHA :	209:1:6687:6719	3676041	0	True				
ANR	3676065	Identifier	TE_IMAGE_FILE_MACHINE_ALPHA		3676041	0					
ANR	3676066	ExpressionStatement	"machine = strdup ( ""Alpha"" )"	210:2:6723:6749	3676041	1	True				
ANR	3676067	AssignmentExpression	"machine = strdup ( ""Alpha"" )"		3676041	0		=			
ANR	3676068	Identifier	machine		3676041	0					
ANR	3676069	CallExpression	"strdup ( ""Alpha"" )"		3676041	1					
ANR	3676070	Callee	strdup		3676041	0					
ANR	3676071	Identifier	strdup		3676041	0					
ANR	3676072	ArgumentList	"""Alpha"""		3676041	1					
ANR	3676073	Argument	"""Alpha"""		3676041	0					
ANR	3676074	PrimaryExpression	"""Alpha"""		3676041	0					
ANR	3676075	BreakStatement	break ;	211:2:6753:6758	3676041	2	True				
ANR	3676076	Label	case TE_IMAGE_FILE_MACHINE_ALPHA64 :	212:1:6761:6795	3676041	3	True				
ANR	3676077	Identifier	TE_IMAGE_FILE_MACHINE_ALPHA64		3676041	0					
ANR	3676078	ExpressionStatement	"machine = strdup ( ""Alpha 64"" )"	213:2:6799:6828	3676041	4	True				
ANR	3676079	AssignmentExpression	"machine = strdup ( ""Alpha 64"" )"		3676041	0		=			
ANR	3676080	Identifier	machine		3676041	0					
ANR	3676081	CallExpression	"strdup ( ""Alpha 64"" )"		3676041	1					
ANR	3676082	Callee	strdup		3676041	0					
ANR	3676083	Identifier	strdup		3676041	0					
ANR	3676084	ArgumentList	"""Alpha 64"""		3676041	1					
ANR	3676085	Argument	"""Alpha 64"""		3676041	0					
ANR	3676086	PrimaryExpression	"""Alpha 64"""		3676041	0					
ANR	3676087	BreakStatement	break ;	214:2:6832:6837	3676041	5	True				
ANR	3676088	Label	case TE_IMAGE_FILE_MACHINE_AM33 :	215:1:6840:6871	3676041	6	True				
ANR	3676089	Identifier	TE_IMAGE_FILE_MACHINE_AM33		3676041	0					
ANR	3676090	ExpressionStatement	"machine = strdup ( ""AM33"" )"	216:2:6875:6900	3676041	7	True				
ANR	3676091	AssignmentExpression	"machine = strdup ( ""AM33"" )"		3676041	0		=			
ANR	3676092	Identifier	machine		3676041	0					
ANR	3676093	CallExpression	"strdup ( ""AM33"" )"		3676041	1					
ANR	3676094	Callee	strdup		3676041	0					
ANR	3676095	Identifier	strdup		3676041	0					
ANR	3676096	ArgumentList	"""AM33"""		3676041	1					
ANR	3676097	Argument	"""AM33"""		3676041	0					
ANR	3676098	PrimaryExpression	"""AM33"""		3676041	0					
ANR	3676099	BreakStatement	break ;	217:2:6904:6909	3676041	8	True				
ANR	3676100	Label	case TE_IMAGE_FILE_MACHINE_AMD64 :	218:1:6912:6944	3676041	9	True				
ANR	3676101	Identifier	TE_IMAGE_FILE_MACHINE_AMD64		3676041	0					
ANR	3676102	ExpressionStatement	"machine = strdup ( ""AMD 64"" )"	219:2:6948:6975	3676041	10	True				
ANR	3676103	AssignmentExpression	"machine = strdup ( ""AMD 64"" )"		3676041	0		=			
ANR	3676104	Identifier	machine		3676041	0					
ANR	3676105	CallExpression	"strdup ( ""AMD 64"" )"		3676041	1					
ANR	3676106	Callee	strdup		3676041	0					
ANR	3676107	Identifier	strdup		3676041	0					
ANR	3676108	ArgumentList	"""AMD 64"""		3676041	1					
ANR	3676109	Argument	"""AMD 64"""		3676041	0					
ANR	3676110	PrimaryExpression	"""AMD 64"""		3676041	0					
ANR	3676111	BreakStatement	break ;	220:2:6979:6984	3676041	11	True				
ANR	3676112	Label	case TE_IMAGE_FILE_MACHINE_ARM :	221:1:6987:7017	3676041	12	True				
ANR	3676113	Identifier	TE_IMAGE_FILE_MACHINE_ARM		3676041	0					
ANR	3676114	ExpressionStatement	"machine = strdup ( ""ARM"" )"	222:2:7021:7045	3676041	13	True				
ANR	3676115	AssignmentExpression	"machine = strdup ( ""ARM"" )"		3676041	0		=			
ANR	3676116	Identifier	machine		3676041	0					
ANR	3676117	CallExpression	"strdup ( ""ARM"" )"		3676041	1					
ANR	3676118	Callee	strdup		3676041	0					
ANR	3676119	Identifier	strdup		3676041	0					
ANR	3676120	ArgumentList	"""ARM"""		3676041	1					
ANR	3676121	Argument	"""ARM"""		3676041	0					
ANR	3676122	PrimaryExpression	"""ARM"""		3676041	0					
ANR	3676123	BreakStatement	break ;	223:2:7049:7054	3676041	14	True				
ANR	3676124	Label	case TE_IMAGE_FILE_MACHINE_CEE :	224:1:7057:7087	3676041	15	True				
ANR	3676125	Identifier	TE_IMAGE_FILE_MACHINE_CEE		3676041	0					
ANR	3676126	ExpressionStatement	"machine = strdup ( ""CEE"" )"	225:2:7091:7115	3676041	16	True				
ANR	3676127	AssignmentExpression	"machine = strdup ( ""CEE"" )"		3676041	0		=			
ANR	3676128	Identifier	machine		3676041	0					
ANR	3676129	CallExpression	"strdup ( ""CEE"" )"		3676041	1					
ANR	3676130	Callee	strdup		3676041	0					
ANR	3676131	Identifier	strdup		3676041	0					
ANR	3676132	ArgumentList	"""CEE"""		3676041	1					
ANR	3676133	Argument	"""CEE"""		3676041	0					
ANR	3676134	PrimaryExpression	"""CEE"""		3676041	0					
ANR	3676135	BreakStatement	break ;	226:2:7119:7124	3676041	17	True				
ANR	3676136	Label	case TE_IMAGE_FILE_MACHINE_CEF :	227:1:7127:7157	3676041	18	True				
ANR	3676137	Identifier	TE_IMAGE_FILE_MACHINE_CEF		3676041	0					
ANR	3676138	ExpressionStatement	"machine = strdup ( ""CEF"" )"	228:2:7161:7185	3676041	19	True				
ANR	3676139	AssignmentExpression	"machine = strdup ( ""CEF"" )"		3676041	0		=			
ANR	3676140	Identifier	machine		3676041	0					
ANR	3676141	CallExpression	"strdup ( ""CEF"" )"		3676041	1					
ANR	3676142	Callee	strdup		3676041	0					
ANR	3676143	Identifier	strdup		3676041	0					
ANR	3676144	ArgumentList	"""CEF"""		3676041	1					
ANR	3676145	Argument	"""CEF"""		3676041	0					
ANR	3676146	PrimaryExpression	"""CEF"""		3676041	0					
ANR	3676147	BreakStatement	break ;	229:2:7189:7194	3676041	20	True				
ANR	3676148	Label	case TE_IMAGE_FILE_MACHINE_EBC :	230:1:7197:7227	3676041	21	True				
ANR	3676149	Identifier	TE_IMAGE_FILE_MACHINE_EBC		3676041	0					
ANR	3676150	ExpressionStatement	"machine = strdup ( ""EBC"" )"	231:2:7231:7255	3676041	22	True				
ANR	3676151	AssignmentExpression	"machine = strdup ( ""EBC"" )"		3676041	0		=			
ANR	3676152	Identifier	machine		3676041	0					
ANR	3676153	CallExpression	"strdup ( ""EBC"" )"		3676041	1					
ANR	3676154	Callee	strdup		3676041	0					
ANR	3676155	Identifier	strdup		3676041	0					
ANR	3676156	ArgumentList	"""EBC"""		3676041	1					
ANR	3676157	Argument	"""EBC"""		3676041	0					
ANR	3676158	PrimaryExpression	"""EBC"""		3676041	0					
ANR	3676159	BreakStatement	break ;	232:2:7259:7264	3676041	23	True				
ANR	3676160	Label	case TE_IMAGE_FILE_MACHINE_I386 :	233:1:7267:7298	3676041	24	True				
ANR	3676161	Identifier	TE_IMAGE_FILE_MACHINE_I386		3676041	0					
ANR	3676162	ExpressionStatement	"machine = strdup ( ""i386"" )"	234:2:7302:7327	3676041	25	True				
ANR	3676163	AssignmentExpression	"machine = strdup ( ""i386"" )"		3676041	0		=			
ANR	3676164	Identifier	machine		3676041	0					
ANR	3676165	CallExpression	"strdup ( ""i386"" )"		3676041	1					
ANR	3676166	Callee	strdup		3676041	0					
ANR	3676167	Identifier	strdup		3676041	0					
ANR	3676168	ArgumentList	"""i386"""		3676041	1					
ANR	3676169	Argument	"""i386"""		3676041	0					
ANR	3676170	PrimaryExpression	"""i386"""		3676041	0					
ANR	3676171	BreakStatement	break ;	235:2:7331:7336	3676041	26	True				
ANR	3676172	Label	case TE_IMAGE_FILE_MACHINE_IA64 :	236:1:7339:7370	3676041	27	True				
ANR	3676173	Identifier	TE_IMAGE_FILE_MACHINE_IA64		3676041	0					
ANR	3676174	ExpressionStatement	"machine = strdup ( ""ia64"" )"	237:2:7374:7399	3676041	28	True				
ANR	3676175	AssignmentExpression	"machine = strdup ( ""ia64"" )"		3676041	0		=			
ANR	3676176	Identifier	machine		3676041	0					
ANR	3676177	CallExpression	"strdup ( ""ia64"" )"		3676041	1					
ANR	3676178	Callee	strdup		3676041	0					
ANR	3676179	Identifier	strdup		3676041	0					
ANR	3676180	ArgumentList	"""ia64"""		3676041	1					
ANR	3676181	Argument	"""ia64"""		3676041	0					
ANR	3676182	PrimaryExpression	"""ia64"""		3676041	0					
ANR	3676183	BreakStatement	break ;	238:2:7403:7408	3676041	29	True				
ANR	3676184	Label	case TE_IMAGE_FILE_MACHINE_M32R :	239:1:7411:7442	3676041	30	True				
ANR	3676185	Identifier	TE_IMAGE_FILE_MACHINE_M32R		3676041	0					
ANR	3676186	ExpressionStatement	"machine = strdup ( ""M32R"" )"	240:2:7446:7471	3676041	31	True				
ANR	3676187	AssignmentExpression	"machine = strdup ( ""M32R"" )"		3676041	0		=			
ANR	3676188	Identifier	machine		3676041	0					
ANR	3676189	CallExpression	"strdup ( ""M32R"" )"		3676041	1					
ANR	3676190	Callee	strdup		3676041	0					
ANR	3676191	Identifier	strdup		3676041	0					
ANR	3676192	ArgumentList	"""M32R"""		3676041	1					
ANR	3676193	Argument	"""M32R"""		3676041	0					
ANR	3676194	PrimaryExpression	"""M32R"""		3676041	0					
ANR	3676195	BreakStatement	break ;	241:2:7475:7480	3676041	32	True				
ANR	3676196	Label	case TE_IMAGE_FILE_MACHINE_M68K :	242:1:7483:7514	3676041	33	True				
ANR	3676197	Identifier	TE_IMAGE_FILE_MACHINE_M68K		3676041	0					
ANR	3676198	ExpressionStatement	"machine = strdup ( ""M68K"" )"	243:2:7518:7543	3676041	34	True				
ANR	3676199	AssignmentExpression	"machine = strdup ( ""M68K"" )"		3676041	0		=			
ANR	3676200	Identifier	machine		3676041	0					
ANR	3676201	CallExpression	"strdup ( ""M68K"" )"		3676041	1					
ANR	3676202	Callee	strdup		3676041	0					
ANR	3676203	Identifier	strdup		3676041	0					
ANR	3676204	ArgumentList	"""M68K"""		3676041	1					
ANR	3676205	Argument	"""M68K"""		3676041	0					
ANR	3676206	PrimaryExpression	"""M68K"""		3676041	0					
ANR	3676207	BreakStatement	break ;	244:2:7547:7552	3676041	35	True				
ANR	3676208	Label	case TE_IMAGE_FILE_MACHINE_MIPS16 :	245:1:7555:7588	3676041	36	True				
ANR	3676209	Identifier	TE_IMAGE_FILE_MACHINE_MIPS16		3676041	0					
ANR	3676210	ExpressionStatement	"machine = strdup ( ""Mips 16"" )"	246:2:7592:7620	3676041	37	True				
ANR	3676211	AssignmentExpression	"machine = strdup ( ""Mips 16"" )"		3676041	0		=			
ANR	3676212	Identifier	machine		3676041	0					
ANR	3676213	CallExpression	"strdup ( ""Mips 16"" )"		3676041	1					
ANR	3676214	Callee	strdup		3676041	0					
ANR	3676215	Identifier	strdup		3676041	0					
ANR	3676216	ArgumentList	"""Mips 16"""		3676041	1					
ANR	3676217	Argument	"""Mips 16"""		3676041	0					
ANR	3676218	PrimaryExpression	"""Mips 16"""		3676041	0					
ANR	3676219	BreakStatement	break ;	247:2:7624:7629	3676041	38	True				
ANR	3676220	Label	case TE_IMAGE_FILE_MACHINE_MIPSFPU :	248:1:7632:7666	3676041	39	True				
ANR	3676221	Identifier	TE_IMAGE_FILE_MACHINE_MIPSFPU		3676041	0					
ANR	3676222	ExpressionStatement	"machine = strdup ( ""Mips FPU"" )"	249:2:7670:7699	3676041	40	True				
ANR	3676223	AssignmentExpression	"machine = strdup ( ""Mips FPU"" )"		3676041	0		=			
ANR	3676224	Identifier	machine		3676041	0					
ANR	3676225	CallExpression	"strdup ( ""Mips FPU"" )"		3676041	1					
ANR	3676226	Callee	strdup		3676041	0					
ANR	3676227	Identifier	strdup		3676041	0					
ANR	3676228	ArgumentList	"""Mips FPU"""		3676041	1					
ANR	3676229	Argument	"""Mips FPU"""		3676041	0					
ANR	3676230	PrimaryExpression	"""Mips FPU"""		3676041	0					
ANR	3676231	BreakStatement	break ;	250:2:7703:7708	3676041	41	True				
ANR	3676232	Label	case TE_IMAGE_FILE_MACHINE_MIPSFPU16 :	251:1:7711:7747	3676041	42	True				
ANR	3676233	Identifier	TE_IMAGE_FILE_MACHINE_MIPSFPU16		3676041	0					
ANR	3676234	ExpressionStatement	"machine = strdup ( ""Mips FPU 16"" )"	252:2:7751:7783	3676041	43	True				
ANR	3676235	AssignmentExpression	"machine = strdup ( ""Mips FPU 16"" )"		3676041	0		=			
ANR	3676236	Identifier	machine		3676041	0					
ANR	3676237	CallExpression	"strdup ( ""Mips FPU 16"" )"		3676041	1					
ANR	3676238	Callee	strdup		3676041	0					
ANR	3676239	Identifier	strdup		3676041	0					
ANR	3676240	ArgumentList	"""Mips FPU 16"""		3676041	1					
ANR	3676241	Argument	"""Mips FPU 16"""		3676041	0					
ANR	3676242	PrimaryExpression	"""Mips FPU 16"""		3676041	0					
ANR	3676243	BreakStatement	break ;	253:2:7787:7792	3676041	44	True				
ANR	3676244	Label	case TE_IMAGE_FILE_MACHINE_POWERPC :	254:1:7795:7829	3676041	45	True				
ANR	3676245	Identifier	TE_IMAGE_FILE_MACHINE_POWERPC		3676041	0					
ANR	3676246	ExpressionStatement	"machine = strdup ( ""PowerPC"" )"	255:2:7833:7861	3676041	46	True				
ANR	3676247	AssignmentExpression	"machine = strdup ( ""PowerPC"" )"		3676041	0		=			
ANR	3676248	Identifier	machine		3676041	0					
ANR	3676249	CallExpression	"strdup ( ""PowerPC"" )"		3676041	1					
ANR	3676250	Callee	strdup		3676041	0					
ANR	3676251	Identifier	strdup		3676041	0					
ANR	3676252	ArgumentList	"""PowerPC"""		3676041	1					
ANR	3676253	Argument	"""PowerPC"""		3676041	0					
ANR	3676254	PrimaryExpression	"""PowerPC"""		3676041	0					
ANR	3676255	BreakStatement	break ;	256:2:7865:7870	3676041	47	True				
ANR	3676256	Label	case TE_IMAGE_FILE_MACHINE_POWERPCFP :	257:1:7873:7909	3676041	48	True				
ANR	3676257	Identifier	TE_IMAGE_FILE_MACHINE_POWERPCFP		3676041	0					
ANR	3676258	ExpressionStatement	"machine = strdup ( ""PowerPC FP"" )"	258:2:7913:7944	3676041	49	True				
ANR	3676259	AssignmentExpression	"machine = strdup ( ""PowerPC FP"" )"		3676041	0		=			
ANR	3676260	Identifier	machine		3676041	0					
ANR	3676261	CallExpression	"strdup ( ""PowerPC FP"" )"		3676041	1					
ANR	3676262	Callee	strdup		3676041	0					
ANR	3676263	Identifier	strdup		3676041	0					
ANR	3676264	ArgumentList	"""PowerPC FP"""		3676041	1					
ANR	3676265	Argument	"""PowerPC FP"""		3676041	0					
ANR	3676266	PrimaryExpression	"""PowerPC FP"""		3676041	0					
ANR	3676267	BreakStatement	break ;	259:2:7948:7953	3676041	50	True				
ANR	3676268	Label	case TE_IMAGE_FILE_MACHINE_R10000 :	260:1:7956:7989	3676041	51	True				
ANR	3676269	Identifier	TE_IMAGE_FILE_MACHINE_R10000		3676041	0					
ANR	3676270	ExpressionStatement	"machine = strdup ( ""R10000"" )"	261:2:7993:8020	3676041	52	True				
ANR	3676271	AssignmentExpression	"machine = strdup ( ""R10000"" )"		3676041	0		=			
ANR	3676272	Identifier	machine		3676041	0					
ANR	3676273	CallExpression	"strdup ( ""R10000"" )"		3676041	1					
ANR	3676274	Callee	strdup		3676041	0					
ANR	3676275	Identifier	strdup		3676041	0					
ANR	3676276	ArgumentList	"""R10000"""		3676041	1					
ANR	3676277	Argument	"""R10000"""		3676041	0					
ANR	3676278	PrimaryExpression	"""R10000"""		3676041	0					
ANR	3676279	BreakStatement	break ;	262:2:8024:8029	3676041	53	True				
ANR	3676280	Label	case TE_IMAGE_FILE_MACHINE_R3000 :	263:1:8032:8064	3676041	54	True				
ANR	3676281	Identifier	TE_IMAGE_FILE_MACHINE_R3000		3676041	0					
ANR	3676282	ExpressionStatement	"machine = strdup ( ""R3000"" )"	264:2:8068:8094	3676041	55	True				
ANR	3676283	AssignmentExpression	"machine = strdup ( ""R3000"" )"		3676041	0		=			
ANR	3676284	Identifier	machine		3676041	0					
ANR	3676285	CallExpression	"strdup ( ""R3000"" )"		3676041	1					
ANR	3676286	Callee	strdup		3676041	0					
ANR	3676287	Identifier	strdup		3676041	0					
ANR	3676288	ArgumentList	"""R3000"""		3676041	1					
ANR	3676289	Argument	"""R3000"""		3676041	0					
ANR	3676290	PrimaryExpression	"""R3000"""		3676041	0					
ANR	3676291	BreakStatement	break ;	265:2:8098:8103	3676041	56	True				
ANR	3676292	Label	case TE_IMAGE_FILE_MACHINE_R4000 :	266:1:8106:8138	3676041	57	True				
ANR	3676293	Identifier	TE_IMAGE_FILE_MACHINE_R4000		3676041	0					
ANR	3676294	ExpressionStatement	"machine = strdup ( ""R4000"" )"	267:2:8142:8168	3676041	58	True				
ANR	3676295	AssignmentExpression	"machine = strdup ( ""R4000"" )"		3676041	0		=			
ANR	3676296	Identifier	machine		3676041	0					
ANR	3676297	CallExpression	"strdup ( ""R4000"" )"		3676041	1					
ANR	3676298	Callee	strdup		3676041	0					
ANR	3676299	Identifier	strdup		3676041	0					
ANR	3676300	ArgumentList	"""R4000"""		3676041	1					
ANR	3676301	Argument	"""R4000"""		3676041	0					
ANR	3676302	PrimaryExpression	"""R4000"""		3676041	0					
ANR	3676303	BreakStatement	break ;	268:2:8172:8177	3676041	59	True				
ANR	3676304	Label	case TE_IMAGE_FILE_MACHINE_SH3 :	269:1:8180:8210	3676041	60	True				
ANR	3676305	Identifier	TE_IMAGE_FILE_MACHINE_SH3		3676041	0					
ANR	3676306	ExpressionStatement	"machine = strdup ( ""SH3"" )"	270:2:8214:8238	3676041	61	True				
ANR	3676307	AssignmentExpression	"machine = strdup ( ""SH3"" )"		3676041	0		=			
ANR	3676308	Identifier	machine		3676041	0					
ANR	3676309	CallExpression	"strdup ( ""SH3"" )"		3676041	1					
ANR	3676310	Callee	strdup		3676041	0					
ANR	3676311	Identifier	strdup		3676041	0					
ANR	3676312	ArgumentList	"""SH3"""		3676041	1					
ANR	3676313	Argument	"""SH3"""		3676041	0					
ANR	3676314	PrimaryExpression	"""SH3"""		3676041	0					
ANR	3676315	BreakStatement	break ;	271:2:8242:8247	3676041	62	True				
ANR	3676316	Label	case TE_IMAGE_FILE_MACHINE_SH3DSP :	272:1:8250:8283	3676041	63	True				
ANR	3676317	Identifier	TE_IMAGE_FILE_MACHINE_SH3DSP		3676041	0					
ANR	3676318	ExpressionStatement	"machine = strdup ( ""SH3DSP"" )"	273:2:8287:8314	3676041	64	True				
ANR	3676319	AssignmentExpression	"machine = strdup ( ""SH3DSP"" )"		3676041	0		=			
ANR	3676320	Identifier	machine		3676041	0					
ANR	3676321	CallExpression	"strdup ( ""SH3DSP"" )"		3676041	1					
ANR	3676322	Callee	strdup		3676041	0					
ANR	3676323	Identifier	strdup		3676041	0					
ANR	3676324	ArgumentList	"""SH3DSP"""		3676041	1					
ANR	3676325	Argument	"""SH3DSP"""		3676041	0					
ANR	3676326	PrimaryExpression	"""SH3DSP"""		3676041	0					
ANR	3676327	BreakStatement	break ;	274:2:8318:8323	3676041	65	True				
ANR	3676328	Label	case TE_IMAGE_FILE_MACHINE_SH3E :	275:1:8326:8357	3676041	66	True				
ANR	3676329	Identifier	TE_IMAGE_FILE_MACHINE_SH3E		3676041	0					
ANR	3676330	ExpressionStatement	"machine = strdup ( ""SH3E"" )"	276:2:8361:8386	3676041	67	True				
ANR	3676331	AssignmentExpression	"machine = strdup ( ""SH3E"" )"		3676041	0		=			
ANR	3676332	Identifier	machine		3676041	0					
ANR	3676333	CallExpression	"strdup ( ""SH3E"" )"		3676041	1					
ANR	3676334	Callee	strdup		3676041	0					
ANR	3676335	Identifier	strdup		3676041	0					
ANR	3676336	ArgumentList	"""SH3E"""		3676041	1					
ANR	3676337	Argument	"""SH3E"""		3676041	0					
ANR	3676338	PrimaryExpression	"""SH3E"""		3676041	0					
ANR	3676339	BreakStatement	break ;	277:2:8390:8395	3676041	68	True				
ANR	3676340	Label	case TE_IMAGE_FILE_MACHINE_SH4 :	278:1:8398:8428	3676041	69	True				
ANR	3676341	Identifier	TE_IMAGE_FILE_MACHINE_SH4		3676041	0					
ANR	3676342	ExpressionStatement	"machine = strdup ( ""SH4"" )"	279:2:8432:8456	3676041	70	True				
ANR	3676343	AssignmentExpression	"machine = strdup ( ""SH4"" )"		3676041	0		=			
ANR	3676344	Identifier	machine		3676041	0					
ANR	3676345	CallExpression	"strdup ( ""SH4"" )"		3676041	1					
ANR	3676346	Callee	strdup		3676041	0					
ANR	3676347	Identifier	strdup		3676041	0					
ANR	3676348	ArgumentList	"""SH4"""		3676041	1					
ANR	3676349	Argument	"""SH4"""		3676041	0					
ANR	3676350	PrimaryExpression	"""SH4"""		3676041	0					
ANR	3676351	BreakStatement	break ;	280:2:8460:8465	3676041	71	True				
ANR	3676352	Label	case TE_IMAGE_FILE_MACHINE_SH5 :	281:1:8468:8498	3676041	72	True				
ANR	3676353	Identifier	TE_IMAGE_FILE_MACHINE_SH5		3676041	0					
ANR	3676354	ExpressionStatement	"machine = strdup ( ""SH5"" )"	282:2:8502:8526	3676041	73	True				
ANR	3676355	AssignmentExpression	"machine = strdup ( ""SH5"" )"		3676041	0		=			
ANR	3676356	Identifier	machine		3676041	0					
ANR	3676357	CallExpression	"strdup ( ""SH5"" )"		3676041	1					
ANR	3676358	Callee	strdup		3676041	0					
ANR	3676359	Identifier	strdup		3676041	0					
ANR	3676360	ArgumentList	"""SH5"""		3676041	1					
ANR	3676361	Argument	"""SH5"""		3676041	0					
ANR	3676362	PrimaryExpression	"""SH5"""		3676041	0					
ANR	3676363	BreakStatement	break ;	283:2:8530:8535	3676041	74	True				
ANR	3676364	Label	case TE_IMAGE_FILE_MACHINE_THUMB :	284:1:8538:8570	3676041	75	True				
ANR	3676365	Identifier	TE_IMAGE_FILE_MACHINE_THUMB		3676041	0					
ANR	3676366	ExpressionStatement	"machine = strdup ( ""Thumb"" )"	285:2:8574:8600	3676041	76	True				
ANR	3676367	AssignmentExpression	"machine = strdup ( ""Thumb"" )"		3676041	0		=			
ANR	3676368	Identifier	machine		3676041	0					
ANR	3676369	CallExpression	"strdup ( ""Thumb"" )"		3676041	1					
ANR	3676370	Callee	strdup		3676041	0					
ANR	3676371	Identifier	strdup		3676041	0					
ANR	3676372	ArgumentList	"""Thumb"""		3676041	1					
ANR	3676373	Argument	"""Thumb"""		3676041	0					
ANR	3676374	PrimaryExpression	"""Thumb"""		3676041	0					
ANR	3676375	BreakStatement	break ;	286:2:8604:8609	3676041	77	True				
ANR	3676376	Label	case TE_IMAGE_FILE_MACHINE_TRICORE :	287:1:8612:8646	3676041	78	True				
ANR	3676377	Identifier	TE_IMAGE_FILE_MACHINE_TRICORE		3676041	0					
ANR	3676378	ExpressionStatement	"machine = strdup ( ""Tricore"" )"	288:2:8650:8678	3676041	79	True				
ANR	3676379	AssignmentExpression	"machine = strdup ( ""Tricore"" )"		3676041	0		=			
ANR	3676380	Identifier	machine		3676041	0					
ANR	3676381	CallExpression	"strdup ( ""Tricore"" )"		3676041	1					
ANR	3676382	Callee	strdup		3676041	0					
ANR	3676383	Identifier	strdup		3676041	0					
ANR	3676384	ArgumentList	"""Tricore"""		3676041	1					
ANR	3676385	Argument	"""Tricore"""		3676041	0					
ANR	3676386	PrimaryExpression	"""Tricore"""		3676041	0					
ANR	3676387	BreakStatement	break ;	289:2:8682:8687	3676041	80	True				
ANR	3676388	Label	case TE_IMAGE_FILE_MACHINE_WCEMIPSV2 :	290:1:8690:8726	3676041	81	True				
ANR	3676389	Identifier	TE_IMAGE_FILE_MACHINE_WCEMIPSV2		3676041	0					
ANR	3676390	ExpressionStatement	"machine = strdup ( ""WCE Mips V2"" )"	291:2:8730:8762	3676041	82	True				
ANR	3676391	AssignmentExpression	"machine = strdup ( ""WCE Mips V2"" )"		3676041	0		=			
ANR	3676392	Identifier	machine		3676041	0					
ANR	3676393	CallExpression	"strdup ( ""WCE Mips V2"" )"		3676041	1					
ANR	3676394	Callee	strdup		3676041	0					
ANR	3676395	Identifier	strdup		3676041	0					
ANR	3676396	ArgumentList	"""WCE Mips V2"""		3676041	1					
ANR	3676397	Argument	"""WCE Mips V2"""		3676041	0					
ANR	3676398	PrimaryExpression	"""WCE Mips V2"""		3676041	0					
ANR	3676399	BreakStatement	break ;	292:2:8766:8771	3676041	83	True				
ANR	3676400	Label	default :	293:1:8774:8781	3676041	84	True				
ANR	3676401	Identifier	default		3676041	0					
ANR	3676402	ExpressionStatement	"machine = strdup ( ""unknown"" )"	294:2:8785:8813	3676041	85	True				
ANR	3676403	AssignmentExpression	"machine = strdup ( ""unknown"" )"		3676041	0		=			
ANR	3676404	Identifier	machine		3676041	0					
ANR	3676405	CallExpression	"strdup ( ""unknown"" )"		3676041	1					
ANR	3676406	Callee	strdup		3676041	0					
ANR	3676407	Identifier	strdup		3676041	0					
ANR	3676408	ArgumentList	"""unknown"""		3676041	1					
ANR	3676409	Argument	"""unknown"""		3676041	0					
ANR	3676410	PrimaryExpression	"""unknown"""		3676041	0					
ANR	3676411	ReturnStatement	return machine ;	296:1:8819:8833	3676041	3	True				
ANR	3676412	Identifier	machine		3676041	0					
ANR	3676413	ReturnType	char *		3676041	1					
ANR	3676414	Identifier	r_bin_te_get_machine		3676041	2					
ANR	3676415	ParameterList	struct r_bin_te_obj_t * bin		3676041	3					
ANR	3676416	Parameter	struct r_bin_te_obj_t * bin	203:27:6576:6601	3676041	0	True				
ANR	3676417	ParameterType	struct r_bin_te_obj_t *		3676041	0					
ANR	3676418	Identifier	bin		3676041	1					
ANR	3676419	CFGEntryNode	ENTRY		3676041		True				
ANR	3676420	CFGExitNode	EXIT		3676041		True				
ANR	3676421	Symbol	* bin -> header		3676041						
ANR	3676422	Symbol	NULL		3676041						
ANR	3676423	Symbol	bin		3676041						
ANR	3676424	Symbol	machine		3676041						
ANR	3676425	Symbol	bin -> header		3676041						
ANR	3676426	Symbol	* * bin		3676041						
ANR	3676427	Symbol	strdup		3676041						
ANR	3676428	Symbol	* bin		3676041						
ANR	3676429	Symbol	bin -> header -> Machine		3676041						
ANR	3676430	Function	r_bin_te_get_os	299:0:8838:9604							
ANR	3676431	FunctionDef	r_bin_te_get_os (struct r_bin_te_obj_t * bin)		3676430	0					
ANR	3676432	CompoundStatement		299:50:8888:9604	3676430	0					
ANR	3676433	IdentifierDeclStatement	char * os ;	300:1:8891:8899	3676430	0	True				
ANR	3676434	IdentifierDecl	* os		3676430	0					
ANR	3676435	IdentifierDeclType	char *		3676430	0					
ANR	3676436	Identifier	os		3676430	1					
ANR	3676437	IfStatement	if ( ! bin )		3676430	1					
ANR	3676438	Condition	! bin	301:5:8906:8909	3676430	0	True				
ANR	3676439	UnaryOperationExpression	! bin		3676430	0					
ANR	3676440	UnaryOperator	!		3676430	0					
ANR	3676441	Identifier	bin		3676430	1					
ANR	3676442	CompoundStatement		3:11:23:23	3676430	1					
ANR	3676443	ReturnStatement	return NULL ;	302:2:8916:8927	3676430	0	True				
ANR	3676444	Identifier	NULL		3676430	0					
ANR	3676445	SwitchStatement	switch ( bin -> header -> Subsystem )		3676430	2					
ANR	3676446	Condition	bin -> header -> Subsystem	305:9:8942:8963	3676430	0	True				
ANR	3676447	PtrMemberAccess	bin -> header -> Subsystem		3676430	0					
ANR	3676448	PtrMemberAccess	bin -> header		3676430	0					
ANR	3676449	Identifier	bin		3676430	0					
ANR	3676450	Identifier	header		3676430	1					
ANR	3676451	Identifier	Subsystem		3676430	1					
ANR	3676452	CompoundStatement		7:33:77:77	3676430	1					
ANR	3676453	Label	case TE_IMAGE_SUBSYSTEM_NATIVE :	306:1:8969:8999	3676430	0	True				
ANR	3676454	Identifier	TE_IMAGE_SUBSYSTEM_NATIVE		3676430	0					
ANR	3676455	ExpressionStatement	"os = strdup ( ""native"" )"	307:2:9003:9025	3676430	1	True				
ANR	3676456	AssignmentExpression	"os = strdup ( ""native"" )"		3676430	0		=			
ANR	3676457	Identifier	os		3676430	0					
ANR	3676458	CallExpression	"strdup ( ""native"" )"		3676430	1					
ANR	3676459	Callee	strdup		3676430	0					
ANR	3676460	Identifier	strdup		3676430	0					
ANR	3676461	ArgumentList	"""native"""		3676430	1					
ANR	3676462	Argument	"""native"""		3676430	0					
ANR	3676463	PrimaryExpression	"""native"""		3676430	0					
ANR	3676464	BreakStatement	break ;	308:2:9029:9034	3676430	2	True				
ANR	3676465	Label	case TE_IMAGE_SUBSYSTEM_WINDOWS_GUI :	309:1:9037:9072	3676430	3	True				
ANR	3676466	Identifier	TE_IMAGE_SUBSYSTEM_WINDOWS_GUI		3676430	0					
ANR	3676467	Label	case TE_IMAGE_SUBSYSTEM_WINDOWS_CUI :	310:1:9075:9110	3676430	4	True				
ANR	3676468	Identifier	TE_IMAGE_SUBSYSTEM_WINDOWS_CUI		3676430	0					
ANR	3676469	Label	case TE_IMAGE_SUBSYSTEM_WINDOWS_CE_GUI :	311:1:9113:9151	3676430	5	True				
ANR	3676470	Identifier	TE_IMAGE_SUBSYSTEM_WINDOWS_CE_GUI		3676430	0					
ANR	3676471	ExpressionStatement	"os = strdup ( ""windows"" )"	312:2:9155:9178	3676430	6	True				
ANR	3676472	AssignmentExpression	"os = strdup ( ""windows"" )"		3676430	0		=			
ANR	3676473	Identifier	os		3676430	0					
ANR	3676474	CallExpression	"strdup ( ""windows"" )"		3676430	1					
ANR	3676475	Callee	strdup		3676430	0					
ANR	3676476	Identifier	strdup		3676430	0					
ANR	3676477	ArgumentList	"""windows"""		3676430	1					
ANR	3676478	Argument	"""windows"""		3676430	0					
ANR	3676479	PrimaryExpression	"""windows"""		3676430	0					
ANR	3676480	BreakStatement	break ;	313:2:9182:9187	3676430	7	True				
ANR	3676481	Label	case TE_IMAGE_SUBSYSTEM_POSIX_CUI :	314:1:9190:9223	3676430	8	True				
ANR	3676482	Identifier	TE_IMAGE_SUBSYSTEM_POSIX_CUI		3676430	0					
ANR	3676483	ExpressionStatement	"os = strdup ( ""posix"" )"	315:2:9227:9248	3676430	9	True				
ANR	3676484	AssignmentExpression	"os = strdup ( ""posix"" )"		3676430	0		=			
ANR	3676485	Identifier	os		3676430	0					
ANR	3676486	CallExpression	"strdup ( ""posix"" )"		3676430	1					
ANR	3676487	Callee	strdup		3676430	0					
ANR	3676488	Identifier	strdup		3676430	0					
ANR	3676489	ArgumentList	"""posix"""		3676430	1					
ANR	3676490	Argument	"""posix"""		3676430	0					
ANR	3676491	PrimaryExpression	"""posix"""		3676430	0					
ANR	3676492	BreakStatement	break ;	316:2:9252:9257	3676430	10	True				
ANR	3676493	Label	case TE_IMAGE_SUBSYSTEM_EFI_APPLICATION :	317:1:9260:9299	3676430	11	True				
ANR	3676494	Identifier	TE_IMAGE_SUBSYSTEM_EFI_APPLICATION		3676430	0					
ANR	3676495	Label	case TE_IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER :	318:1:9302:9349	3676430	12	True				
ANR	3676496	Identifier	TE_IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER		3676430	0					
ANR	3676497	Label	case TE_IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER :	319:1:9352:9394	3676430	13	True				
ANR	3676498	Identifier	TE_IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER		3676430	0					
ANR	3676499	Label	case TE_IMAGE_SUBSYSTEM_EFI_ROM :	320:1:9397:9428	3676430	14	True				
ANR	3676500	Identifier	TE_IMAGE_SUBSYSTEM_EFI_ROM		3676430	0					
ANR	3676501	ExpressionStatement	"os = strdup ( ""efi"" )"	321:2:9432:9451	3676430	15	True				
ANR	3676502	AssignmentExpression	"os = strdup ( ""efi"" )"		3676430	0		=			
ANR	3676503	Identifier	os		3676430	0					
ANR	3676504	CallExpression	"strdup ( ""efi"" )"		3676430	1					
ANR	3676505	Callee	strdup		3676430	0					
ANR	3676506	Identifier	strdup		3676430	0					
ANR	3676507	ArgumentList	"""efi"""		3676430	1					
ANR	3676508	Argument	"""efi"""		3676430	0					
ANR	3676509	PrimaryExpression	"""efi"""		3676430	0					
ANR	3676510	BreakStatement	break ;	322:2:9455:9460	3676430	16	True				
ANR	3676511	Label	case TE_IMAGE_SUBSYSTEM_XBOX :	323:1:9463:9491	3676430	17	True				
ANR	3676512	Identifier	TE_IMAGE_SUBSYSTEM_XBOX		3676430	0					
ANR	3676513	ExpressionStatement	"os = strdup ( ""xbox"" )"	324:2:9495:9515	3676430	18	True				
ANR	3676514	AssignmentExpression	"os = strdup ( ""xbox"" )"		3676430	0		=			
ANR	3676515	Identifier	os		3676430	0					
ANR	3676516	CallExpression	"strdup ( ""xbox"" )"		3676430	1					
ANR	3676517	Callee	strdup		3676430	0					
ANR	3676518	Identifier	strdup		3676430	0					
ANR	3676519	ArgumentList	"""xbox"""		3676430	1					
ANR	3676520	Argument	"""xbox"""		3676430	0					
ANR	3676521	PrimaryExpression	"""xbox"""		3676430	0					
ANR	3676522	BreakStatement	break ;	325:2:9519:9524	3676430	19	True				
ANR	3676523	Label	default :	326:1:9527:9534	3676430	20	True				
ANR	3676524	Identifier	default		3676430	0					
ANR	3676525	ExpressionStatement	"os = strdup ( ""windows"" )"	328:2:9564:9587	3676430	21	True				
ANR	3676526	AssignmentExpression	"os = strdup ( ""windows"" )"		3676430	0		=			
ANR	3676527	Identifier	os		3676430	0					
ANR	3676528	CallExpression	"strdup ( ""windows"" )"		3676430	1					
ANR	3676529	Callee	strdup		3676430	0					
ANR	3676530	Identifier	strdup		3676430	0					
ANR	3676531	ArgumentList	"""windows"""		3676430	1					
ANR	3676532	Argument	"""windows"""		3676430	0					
ANR	3676533	PrimaryExpression	"""windows"""		3676430	0					
ANR	3676534	ReturnStatement	return os ;	330:1:9593:9602	3676430	3	True				
ANR	3676535	Identifier	os		3676430	0					
ANR	3676536	ReturnType	char *		3676430	1					
ANR	3676537	Identifier	r_bin_te_get_os		3676430	2					
ANR	3676538	ParameterList	struct r_bin_te_obj_t * bin		3676430	3					
ANR	3676539	Parameter	struct r_bin_te_obj_t * bin	299:22:8860:8885	3676430	0	True				
ANR	3676540	ParameterType	struct r_bin_te_obj_t *		3676430	0					
ANR	3676541	Identifier	bin		3676430	1					
ANR	3676542	CFGEntryNode	ENTRY		3676430		True				
ANR	3676543	CFGExitNode	EXIT		3676430		True				
ANR	3676544	Symbol	* bin -> header		3676430						
ANR	3676545	Symbol	bin -> header -> Subsystem		3676430						
ANR	3676546	Symbol	NULL		3676430						
ANR	3676547	Symbol	os		3676430						
ANR	3676548	Symbol	bin		3676430						
ANR	3676549	Symbol	bin -> header		3676430						
ANR	3676550	Symbol	* * bin		3676430						
ANR	3676551	Symbol	strdup		3676430						
ANR	3676552	Symbol	* bin		3676430						
ANR	3676553	Function	r_bin_te_get_sections	333:0:9607:10608							
ANR	3676554	FunctionDef	r_bin_te_get_sections (struct r_bin_te_obj_t * bin)		3676553	0					
ANR	3676555	CompoundStatement		333:77:9684:10608	3676553	0					
ANR	3676556	IdentifierDeclStatement	struct r_bin_te_section_t * sections = NULL ;	334:1:9687:9729	3676553	0	True				
ANR	3676557	IdentifierDecl	* sections = NULL		3676553	0					
ANR	3676558	IdentifierDeclType	struct r_bin_te_section_t *		3676553	0					
ANR	3676559	Identifier	sections		3676553	1					
ANR	3676560	AssignmentExpression	* sections = NULL		3676553	2		=			
ANR	3676561	Identifier	NULL		3676553	0					
ANR	3676562	Identifier	NULL		3676553	1					
ANR	3676563	IdentifierDeclStatement	TE_image_section_header * shdr ;	335:1:9732:9761	3676553	1	True				
ANR	3676564	IdentifierDecl	* shdr		3676553	0					
ANR	3676565	IdentifierDeclType	TE_image_section_header *		3676553	0					
ANR	3676566	Identifier	shdr		3676553	1					
ANR	3676567	IdentifierDeclStatement	"int i , sections_count ;"	336:1:9764:9785	3676553	2	True				
ANR	3676568	IdentifierDecl	i		3676553	0					
ANR	3676569	IdentifierDeclType	int		3676553	0					
ANR	3676570	Identifier	i		3676553	1					
ANR	3676571	IdentifierDecl	sections_count		3676553	1					
ANR	3676572	IdentifierDeclType	int		3676553	0					
ANR	3676573	Identifier	sections_count		3676553	1					
ANR	3676574	IfStatement	if ( ! bin )		3676553	3					
ANR	3676575	Condition	! bin	337:5:9792:9795	3676553	0	True				
ANR	3676576	UnaryOperationExpression	! bin		3676553	0					
ANR	3676577	UnaryOperator	!		3676553	0					
ANR	3676578	Identifier	bin		3676553	1					
ANR	3676579	CompoundStatement		5:11:113:113	3676553	1					
ANR	3676580	ReturnStatement	return NULL ;	338:2:9802:9813	3676553	0	True				
ANR	3676581	Identifier	NULL		3676553	0					
ANR	3676582	ExpressionStatement	shdr = bin -> section_header	340:1:9819:9845	3676553	4	True				
ANR	3676583	AssignmentExpression	shdr = bin -> section_header		3676553	0		=			
ANR	3676584	Identifier	shdr		3676553	0					
ANR	3676585	PtrMemberAccess	bin -> section_header		3676553	1					
ANR	3676586	Identifier	bin		3676553	0					
ANR	3676587	Identifier	section_header		3676553	1					
ANR	3676588	ExpressionStatement	sections_count = bin -> header -> NumberOfSections	341:1:9848:9894	3676553	5	True				
ANR	3676589	AssignmentExpression	sections_count = bin -> header -> NumberOfSections		3676553	0		=			
ANR	3676590	Identifier	sections_count		3676553	0					
ANR	3676591	PtrMemberAccess	bin -> header -> NumberOfSections		3676553	1					
ANR	3676592	PtrMemberAccess	bin -> header		3676553	0					
ANR	3676593	Identifier	bin		3676553	0					
ANR	3676594	Identifier	header		3676553	1					
ANR	3676595	Identifier	NumberOfSections		3676553	1					
ANR	3676596	IfStatement	"if ( ! ( sections = calloc ( ( sections_count + 1 ) , sizeof ( struct r_bin_te_section_t ) ) ) )"		3676553	6					
ANR	3676597	Condition	"! ( sections = calloc ( ( sections_count + 1 ) , sizeof ( struct r_bin_te_section_t ) ) )"	343:5:9902:9980	3676553	0	True				
ANR	3676598	UnaryOperationExpression	"! ( sections = calloc ( ( sections_count + 1 ) , sizeof ( struct r_bin_te_section_t ) ) )"		3676553	0					
ANR	3676599	UnaryOperator	!		3676553	0					
ANR	3676600	AssignmentExpression	"sections = calloc ( ( sections_count + 1 ) , sizeof ( struct r_bin_te_section_t ) )"		3676553	1		=			
ANR	3676601	Identifier	sections		3676553	0					
ANR	3676602	CallExpression	"calloc ( ( sections_count + 1 ) , sizeof ( struct r_bin_te_section_t ) )"		3676553	1					
ANR	3676603	Callee	calloc		3676553	0					
ANR	3676604	Identifier	calloc		3676553	0					
ANR	3676605	ArgumentList	sections_count + 1		3676553	1					
ANR	3676606	Argument	sections_count + 1		3676553	0					
ANR	3676607	AdditiveExpression	sections_count + 1		3676553	0		+			
ANR	3676608	Identifier	sections_count		3676553	0					
ANR	3676609	PrimaryExpression	1		3676553	1					
ANR	3676610	Argument	sizeof ( struct r_bin_te_section_t )		3676553	1					
ANR	3676611	SizeofExpression	sizeof ( struct r_bin_te_section_t )		3676553	0					
ANR	3676612	Sizeof	sizeof		3676553	0					
ANR	3676613	SizeofOperand	struct r_bin_te_section_t		3676553	1					
ANR	3676614	CompoundStatement		11:86:298:298	3676553	1					
ANR	3676615	ExpressionStatement	"perror ( ""malloc (sections)"" )"	344:2:9987:10015	3676553	0	True				
ANR	3676616	CallExpression	"perror ( ""malloc (sections)"" )"		3676553	0					
ANR	3676617	Callee	perror		3676553	0					
ANR	3676618	Identifier	perror		3676553	0					
ANR	3676619	ArgumentList	"""malloc (sections)"""		3676553	1					
ANR	3676620	Argument	"""malloc (sections)"""		3676553	0					
ANR	3676621	PrimaryExpression	"""malloc (sections)"""		3676553	0					
ANR	3676622	ReturnStatement	return NULL ;	345:2:10019:10030	3676553	1	True				
ANR	3676623	Identifier	NULL		3676553	0					
ANR	3676624	ForStatement	for ( i = 0 ; i < sections_count ; i ++ )		3676553	7					
ANR	3676625	ForInit	i = 0 ;	347:6:10041:10046	3676553	0	True				
ANR	3676626	AssignmentExpression	i = 0		3676553	0		=			
ANR	3676627	Identifier	i		3676553	0					
ANR	3676628	PrimaryExpression	0		3676553	1					
ANR	3676629	Condition	i < sections_count	347:13:10048:10065	3676553	1	True				
ANR	3676630	RelationalExpression	i < sections_count		3676553	0		<			
ANR	3676631	Identifier	i		3676553	0					
ANR	3676632	Identifier	sections_count		3676553	1					
ANR	3676633	PostIncDecOperationExpression	i ++	347:33:10068:10070	3676553	2	True				
ANR	3676634	Identifier	i		3676553	0					
ANR	3676635	IncDec	++		3676553	1					
ANR	3676636	CompoundStatement		15:38:388:388	3676553	3					
ANR	3676637	ExpressionStatement	"memcpy ( sections [ i ] . name , shdr [ i ] . Name , TE_IMAGE_SIZEOF_NAME )"	348:2:10077:10138	3676553	0	True				
ANR	3676638	CallExpression	"memcpy ( sections [ i ] . name , shdr [ i ] . Name , TE_IMAGE_SIZEOF_NAME )"		3676553	0					
ANR	3676639	Callee	memcpy		3676553	0					
ANR	3676640	Identifier	memcpy		3676553	0					
ANR	3676641	ArgumentList	sections [ i ] . name		3676553	1					
ANR	3676642	Argument	sections [ i ] . name		3676553	0					
ANR	3676643	MemberAccess	sections [ i ] . name		3676553	0					
ANR	3676644	ArrayIndexing	sections [ i ]		3676553	0					
ANR	3676645	Identifier	sections		3676553	0					
ANR	3676646	Identifier	i		3676553	1					
ANR	3676647	Identifier	name		3676553	1					
ANR	3676648	Argument	shdr [ i ] . Name		3676553	1					
ANR	3676649	MemberAccess	shdr [ i ] . Name		3676553	0					
ANR	3676650	ArrayIndexing	shdr [ i ]		3676553	0					
ANR	3676651	Identifier	shdr		3676553	0					
ANR	3676652	Identifier	i		3676553	1					
ANR	3676653	Identifier	Name		3676553	1					
ANR	3676654	Argument	TE_IMAGE_SIZEOF_NAME		3676553	2					
ANR	3676655	Identifier	TE_IMAGE_SIZEOF_NAME		3676553	0					
ANR	3676656	ExpressionStatement	sections [ i ] . vaddr = shdr [ i ] . VirtualAddress - r_bin_te_get_stripped_delta ( bin )	351:2:10242:10320	3676553	1	True				
ANR	3676657	AssignmentExpression	sections [ i ] . vaddr = shdr [ i ] . VirtualAddress - r_bin_te_get_stripped_delta ( bin )		3676553	0		=			
ANR	3676658	MemberAccess	sections [ i ] . vaddr		3676553	0					
ANR	3676659	ArrayIndexing	sections [ i ]		3676553	0					
ANR	3676660	Identifier	sections		3676553	0					
ANR	3676661	Identifier	i		3676553	1					
ANR	3676662	Identifier	vaddr		3676553	1					
ANR	3676663	AdditiveExpression	shdr [ i ] . VirtualAddress - r_bin_te_get_stripped_delta ( bin )		3676553	1		-			
ANR	3676664	MemberAccess	shdr [ i ] . VirtualAddress		3676553	0					
ANR	3676665	ArrayIndexing	shdr [ i ]		3676553	0					
ANR	3676666	Identifier	shdr		3676553	0					
ANR	3676667	Identifier	i		3676553	1					
ANR	3676668	Identifier	VirtualAddress		3676553	1					
ANR	3676669	CallExpression	r_bin_te_get_stripped_delta ( bin )		3676553	1					
ANR	3676670	Callee	r_bin_te_get_stripped_delta		3676553	0					
ANR	3676671	Identifier	r_bin_te_get_stripped_delta		3676553	0					
ANR	3676672	ArgumentList	bin		3676553	1					
ANR	3676673	Argument	bin		3676553	0					
ANR	3676674	Identifier	bin		3676553	0					
ANR	3676675	ExpressionStatement	sections [ i ] . size = shdr [ i ] . SizeOfRawData	352:2:10324:10364	3676553	2	True				
ANR	3676676	AssignmentExpression	sections [ i ] . size = shdr [ i ] . SizeOfRawData		3676553	0		=			
ANR	3676677	MemberAccess	sections [ i ] . size		3676553	0					
ANR	3676678	ArrayIndexing	sections [ i ]		3676553	0					
ANR	3676679	Identifier	sections		3676553	0					
ANR	3676680	Identifier	i		3676553	1					
ANR	3676681	Identifier	size		3676553	1					
ANR	3676682	MemberAccess	shdr [ i ] . SizeOfRawData		3676553	1					
ANR	3676683	ArrayIndexing	shdr [ i ]		3676553	0					
ANR	3676684	Identifier	shdr		3676553	0					
ANR	3676685	Identifier	i		3676553	1					
ANR	3676686	Identifier	SizeOfRawData		3676553	1					
ANR	3676687	ExpressionStatement	sections [ i ] . vsize = shdr [ i ] . VirtualSize	353:2:10368:10407	3676553	3	True				
ANR	3676688	AssignmentExpression	sections [ i ] . vsize = shdr [ i ] . VirtualSize		3676553	0		=			
ANR	3676689	MemberAccess	sections [ i ] . vsize		3676553	0					
ANR	3676690	ArrayIndexing	sections [ i ]		3676553	0					
ANR	3676691	Identifier	sections		3676553	0					
ANR	3676692	Identifier	i		3676553	1					
ANR	3676693	Identifier	vsize		3676553	1					
ANR	3676694	MemberAccess	shdr [ i ] . VirtualSize		3676553	1					
ANR	3676695	ArrayIndexing	shdr [ i ]		3676553	0					
ANR	3676696	Identifier	shdr		3676553	0					
ANR	3676697	Identifier	i		3676553	1					
ANR	3676698	Identifier	VirtualSize		3676553	1					
ANR	3676699	ExpressionStatement	sections [ i ] . paddr = shdr [ i ] . PointerToRawData - r_bin_te_get_stripped_delta ( bin )	354:2:10411:10491	3676553	4	True				
ANR	3676700	AssignmentExpression	sections [ i ] . paddr = shdr [ i ] . PointerToRawData - r_bin_te_get_stripped_delta ( bin )		3676553	0		=			
ANR	3676701	MemberAccess	sections [ i ] . paddr		3676553	0					
ANR	3676702	ArrayIndexing	sections [ i ]		3676553	0					
ANR	3676703	Identifier	sections		3676553	0					
ANR	3676704	Identifier	i		3676553	1					
ANR	3676705	Identifier	paddr		3676553	1					
ANR	3676706	AdditiveExpression	shdr [ i ] . PointerToRawData - r_bin_te_get_stripped_delta ( bin )		3676553	1		-			
ANR	3676707	MemberAccess	shdr [ i ] . PointerToRawData		3676553	0					
ANR	3676708	ArrayIndexing	shdr [ i ]		3676553	0					
ANR	3676709	Identifier	shdr		3676553	0					
ANR	3676710	Identifier	i		3676553	1					
ANR	3676711	Identifier	PointerToRawData		3676553	1					
ANR	3676712	CallExpression	r_bin_te_get_stripped_delta ( bin )		3676553	1					
ANR	3676713	Callee	r_bin_te_get_stripped_delta		3676553	0					
ANR	3676714	Identifier	r_bin_te_get_stripped_delta		3676553	0					
ANR	3676715	ArgumentList	bin		3676553	1					
ANR	3676716	Argument	bin		3676553	0					
ANR	3676717	Identifier	bin		3676553	0					
ANR	3676718	ExpressionStatement	sections [ i ] . flags = shdr [ i ] . Characteristics	355:2:10495:10538	3676553	5	True				
ANR	3676719	AssignmentExpression	sections [ i ] . flags = shdr [ i ] . Characteristics		3676553	0		=			
ANR	3676720	MemberAccess	sections [ i ] . flags		3676553	0					
ANR	3676721	ArrayIndexing	sections [ i ]		3676553	0					
ANR	3676722	Identifier	sections		3676553	0					
ANR	3676723	Identifier	i		3676553	1					
ANR	3676724	Identifier	flags		3676553	1					
ANR	3676725	MemberAccess	shdr [ i ] . Characteristics		3676553	1					
ANR	3676726	ArrayIndexing	shdr [ i ]		3676553	0					
ANR	3676727	Identifier	shdr		3676553	0					
ANR	3676728	Identifier	i		3676553	1					
ANR	3676729	Identifier	Characteristics		3676553	1					
ANR	3676730	ExpressionStatement	sections [ i ] . last = 0	356:2:10542:10562	3676553	6	True				
ANR	3676731	AssignmentExpression	sections [ i ] . last = 0		3676553	0		=			
ANR	3676732	MemberAccess	sections [ i ] . last		3676553	0					
ANR	3676733	ArrayIndexing	sections [ i ]		3676553	0					
ANR	3676734	Identifier	sections		3676553	0					
ANR	3676735	Identifier	i		3676553	1					
ANR	3676736	Identifier	last		3676553	1					
ANR	3676737	PrimaryExpression	0		3676553	1					
ANR	3676738	ExpressionStatement	sections [ i ] . last = 1	358:1:10568:10588	3676553	8	True				
ANR	3676739	AssignmentExpression	sections [ i ] . last = 1		3676553	0		=			
ANR	3676740	MemberAccess	sections [ i ] . last		3676553	0					
ANR	3676741	ArrayIndexing	sections [ i ]		3676553	0					
ANR	3676742	Identifier	sections		3676553	0					
ANR	3676743	Identifier	i		3676553	1					
ANR	3676744	Identifier	last		3676553	1					
ANR	3676745	PrimaryExpression	1		3676553	1					
ANR	3676746	ReturnStatement	return sections ;	359:1:10591:10606	3676553	9	True				
ANR	3676747	Identifier	sections		3676553	0					
ANR	3676748	ReturnType	struct r_bin_te_section_t *		3676553	1					
ANR	3676749	Identifier	r_bin_te_get_sections		3676553	2					
ANR	3676750	ParameterList	struct r_bin_te_obj_t * bin		3676553	3					
ANR	3676751	Parameter	struct r_bin_te_obj_t * bin	333:49:9656:9681	3676553	0	True				
ANR	3676752	ParameterType	struct r_bin_te_obj_t *		3676553	0					
ANR	3676753	Identifier	bin		3676553	1					
ANR	3676754	CFGEntryNode	ENTRY		3676553		True				
ANR	3676755	CFGExitNode	EXIT		3676553		True				
ANR	3676756	Symbol	shdr [ i ] . VirtualSize		3676553						
ANR	3676757	Symbol	shdr [ i ] . VirtualAddress		3676553						
ANR	3676758	Symbol	bin		3676553						
ANR	3676759	Symbol	bin -> header		3676553						
ANR	3676760	Symbol	shdr [ i ] . PointerToRawData		3676553						
ANR	3676761	Symbol	sections [ i ] . vsize		3676553						
ANR	3676762	Symbol	bin -> section_header		3676553						
ANR	3676763	Symbol	calloc		3676553						
ANR	3676764	Symbol	* bin		3676553						
ANR	3676765	Symbol	sections [ i ] . vaddr		3676553						
ANR	3676766	Symbol	shdr		3676553						
ANR	3676767	Symbol	shdr [ i ] . Name		3676553						
ANR	3676768	Symbol	sections_count		3676553						
ANR	3676769	Symbol	* * bin		3676553						
ANR	3676770	Symbol	shdr [ i ] . SizeOfRawData		3676553						
ANR	3676771	Symbol	bin -> header -> NumberOfSections		3676553						
ANR	3676772	Symbol	sections [ i ] . flags		3676553						
ANR	3676773	Symbol	NULL		3676553						
ANR	3676774	Symbol	shdr [ i ] . Characteristics		3676553						
ANR	3676775	Symbol	TE_IMAGE_SIZEOF_NAME		3676553						
ANR	3676776	Symbol	i		3676553						
ANR	3676777	Symbol	sections [ i ] . last		3676553						
ANR	3676778	Symbol	sections		3676553						
ANR	3676779	Symbol	* bin -> header		3676553						
ANR	3676780	Symbol	* i		3676553						
ANR	3676781	Symbol	sections [ i ] . name		3676553						
ANR	3676782	Symbol	* shdr		3676553						
ANR	3676783	Symbol	sections [ i ] . size		3676553						
ANR	3676784	Symbol	* sections		3676553						
ANR	3676785	Symbol	r_bin_te_get_stripped_delta		3676553						
ANR	3676786	Symbol	sections [ i ] . paddr		3676553						
ANR	3676787	Function	r_bin_te_get_subsystem	362:0:10611:11687							
ANR	3676788	FunctionDef	r_bin_te_get_subsystem (struct r_bin_te_obj_t * bin)		3676787	0					
ANR	3676789	CompoundStatement		362:57:10668:11687	3676787	0					
ANR	3676790	IdentifierDeclStatement	char * subsystem ;	363:1:10671:10686	3676787	0	True				
ANR	3676791	IdentifierDecl	* subsystem		3676787	0					
ANR	3676792	IdentifierDeclType	char *		3676787	0					
ANR	3676793	Identifier	subsystem		3676787	1					
ANR	3676794	IfStatement	if ( ! bin )		3676787	1					
ANR	3676795	Condition	! bin	365:5:10694:10697	3676787	0	True				
ANR	3676796	UnaryOperationExpression	! bin		3676787	0					
ANR	3676797	UnaryOperator	!		3676787	0					
ANR	3676798	Identifier	bin		3676787	1					
ANR	3676799	CompoundStatement		4:11:31:31	3676787	1					
ANR	3676800	ReturnStatement	return NULL ;	366:2:10704:10715	3676787	0	True				
ANR	3676801	Identifier	NULL		3676787	0					
ANR	3676802	SwitchStatement	switch ( bin -> header -> Subsystem )		3676787	2					
ANR	3676803	Condition	bin -> header -> Subsystem	368:9:10729:10750	3676787	0	True				
ANR	3676804	PtrMemberAccess	bin -> header -> Subsystem		3676787	0					
ANR	3676805	PtrMemberAccess	bin -> header		3676787	0					
ANR	3676806	Identifier	bin		3676787	0					
ANR	3676807	Identifier	header		3676787	1					
ANR	3676808	Identifier	Subsystem		3676787	1					
ANR	3676809	CompoundStatement		7:33:84:84	3676787	1					
ANR	3676810	Label	case TE_IMAGE_SUBSYSTEM_NATIVE :	369:1:10756:10786	3676787	0	True				
ANR	3676811	Identifier	TE_IMAGE_SUBSYSTEM_NATIVE		3676787	0					
ANR	3676812	ExpressionStatement	"subsystem = strdup ( ""Native"" )"	370:2:10790:10819	3676787	1	True				
ANR	3676813	AssignmentExpression	"subsystem = strdup ( ""Native"" )"		3676787	0		=			
ANR	3676814	Identifier	subsystem		3676787	0					
ANR	3676815	CallExpression	"strdup ( ""Native"" )"		3676787	1					
ANR	3676816	Callee	strdup		3676787	0					
ANR	3676817	Identifier	strdup		3676787	0					
ANR	3676818	ArgumentList	"""Native"""		3676787	1					
ANR	3676819	Argument	"""Native"""		3676787	0					
ANR	3676820	PrimaryExpression	"""Native"""		3676787	0					
ANR	3676821	BreakStatement	break ;	371:2:10823:10828	3676787	2	True				
ANR	3676822	Label	case TE_IMAGE_SUBSYSTEM_WINDOWS_GUI :	372:1:10831:10866	3676787	3	True				
ANR	3676823	Identifier	TE_IMAGE_SUBSYSTEM_WINDOWS_GUI		3676787	0					
ANR	3676824	ExpressionStatement	"subsystem = strdup ( ""Windows GUI"" )"	373:2:10870:10904	3676787	4	True				
ANR	3676825	AssignmentExpression	"subsystem = strdup ( ""Windows GUI"" )"		3676787	0		=			
ANR	3676826	Identifier	subsystem		3676787	0					
ANR	3676827	CallExpression	"strdup ( ""Windows GUI"" )"		3676787	1					
ANR	3676828	Callee	strdup		3676787	0					
ANR	3676829	Identifier	strdup		3676787	0					
ANR	3676830	ArgumentList	"""Windows GUI"""		3676787	1					
ANR	3676831	Argument	"""Windows GUI"""		3676787	0					
ANR	3676832	PrimaryExpression	"""Windows GUI"""		3676787	0					
ANR	3676833	BreakStatement	break ;	374:2:10908:10913	3676787	5	True				
ANR	3676834	Label	case TE_IMAGE_SUBSYSTEM_WINDOWS_CUI :	375:1:10916:10951	3676787	6	True				
ANR	3676835	Identifier	TE_IMAGE_SUBSYSTEM_WINDOWS_CUI		3676787	0					
ANR	3676836	ExpressionStatement	"subsystem = strdup ( ""Windows CUI"" )"	376:2:10955:10989	3676787	7	True				
ANR	3676837	AssignmentExpression	"subsystem = strdup ( ""Windows CUI"" )"		3676787	0		=			
ANR	3676838	Identifier	subsystem		3676787	0					
ANR	3676839	CallExpression	"strdup ( ""Windows CUI"" )"		3676787	1					
ANR	3676840	Callee	strdup		3676787	0					
ANR	3676841	Identifier	strdup		3676787	0					
ANR	3676842	ArgumentList	"""Windows CUI"""		3676787	1					
ANR	3676843	Argument	"""Windows CUI"""		3676787	0					
ANR	3676844	PrimaryExpression	"""Windows CUI"""		3676787	0					
ANR	3676845	BreakStatement	break ;	377:2:10993:10998	3676787	8	True				
ANR	3676846	Label	case TE_IMAGE_SUBSYSTEM_POSIX_CUI :	378:1:11001:11034	3676787	9	True				
ANR	3676847	Identifier	TE_IMAGE_SUBSYSTEM_POSIX_CUI		3676787	0					
ANR	3676848	ExpressionStatement	"subsystem = strdup ( ""POSIX CUI"" )"	379:2:11038:11070	3676787	10	True				
ANR	3676849	AssignmentExpression	"subsystem = strdup ( ""POSIX CUI"" )"		3676787	0		=			
ANR	3676850	Identifier	subsystem		3676787	0					
ANR	3676851	CallExpression	"strdup ( ""POSIX CUI"" )"		3676787	1					
ANR	3676852	Callee	strdup		3676787	0					
ANR	3676853	Identifier	strdup		3676787	0					
ANR	3676854	ArgumentList	"""POSIX CUI"""		3676787	1					
ANR	3676855	Argument	"""POSIX CUI"""		3676787	0					
ANR	3676856	PrimaryExpression	"""POSIX CUI"""		3676787	0					
ANR	3676857	BreakStatement	break ;	380:2:11074:11079	3676787	11	True				
ANR	3676858	Label	case TE_IMAGE_SUBSYSTEM_WINDOWS_CE_GUI :	381:1:11082:11120	3676787	12	True				
ANR	3676859	Identifier	TE_IMAGE_SUBSYSTEM_WINDOWS_CE_GUI		3676787	0					
ANR	3676860	ExpressionStatement	"subsystem = strdup ( ""Windows CE GUI"" )"	382:2:11124:11161	3676787	13	True				
ANR	3676861	AssignmentExpression	"subsystem = strdup ( ""Windows CE GUI"" )"		3676787	0		=			
ANR	3676862	Identifier	subsystem		3676787	0					
ANR	3676863	CallExpression	"strdup ( ""Windows CE GUI"" )"		3676787	1					
ANR	3676864	Callee	strdup		3676787	0					
ANR	3676865	Identifier	strdup		3676787	0					
ANR	3676866	ArgumentList	"""Windows CE GUI"""		3676787	1					
ANR	3676867	Argument	"""Windows CE GUI"""		3676787	0					
ANR	3676868	PrimaryExpression	"""Windows CE GUI"""		3676787	0					
ANR	3676869	BreakStatement	break ;	383:2:11165:11170	3676787	14	True				
ANR	3676870	Label	case TE_IMAGE_SUBSYSTEM_EFI_APPLICATION :	384:1:11173:11212	3676787	15	True				
ANR	3676871	Identifier	TE_IMAGE_SUBSYSTEM_EFI_APPLICATION		3676787	0					
ANR	3676872	ExpressionStatement	"subsystem = strdup ( ""EFI Application"" )"	385:2:11216:11254	3676787	16	True				
ANR	3676873	AssignmentExpression	"subsystem = strdup ( ""EFI Application"" )"		3676787	0		=			
ANR	3676874	Identifier	subsystem		3676787	0					
ANR	3676875	CallExpression	"strdup ( ""EFI Application"" )"		3676787	1					
ANR	3676876	Callee	strdup		3676787	0					
ANR	3676877	Identifier	strdup		3676787	0					
ANR	3676878	ArgumentList	"""EFI Application"""		3676787	1					
ANR	3676879	Argument	"""EFI Application"""		3676787	0					
ANR	3676880	PrimaryExpression	"""EFI Application"""		3676787	0					
ANR	3676881	BreakStatement	break ;	386:2:11258:11263	3676787	17	True				
ANR	3676882	Label	case TE_IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER :	387:1:11266:11313	3676787	18	True				
ANR	3676883	Identifier	TE_IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER		3676787	0					
ANR	3676884	ExpressionStatement	"subsystem = strdup ( ""EFI Boot Service Driver"" )"	388:2:11317:11363	3676787	19	True				
ANR	3676885	AssignmentExpression	"subsystem = strdup ( ""EFI Boot Service Driver"" )"		3676787	0		=			
ANR	3676886	Identifier	subsystem		3676787	0					
ANR	3676887	CallExpression	"strdup ( ""EFI Boot Service Driver"" )"		3676787	1					
ANR	3676888	Callee	strdup		3676787	0					
ANR	3676889	Identifier	strdup		3676787	0					
ANR	3676890	ArgumentList	"""EFI Boot Service Driver"""		3676787	1					
ANR	3676891	Argument	"""EFI Boot Service Driver"""		3676787	0					
ANR	3676892	PrimaryExpression	"""EFI Boot Service Driver"""		3676787	0					
ANR	3676893	BreakStatement	break ;	389:2:11367:11372	3676787	20	True				
ANR	3676894	Label	case TE_IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER :	390:1:11375:11417	3676787	21	True				
ANR	3676895	Identifier	TE_IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER		3676787	0					
ANR	3676896	ExpressionStatement	"subsystem = strdup ( ""EFI Runtime Driver"" )"	391:2:11421:11462	3676787	22	True				
ANR	3676897	AssignmentExpression	"subsystem = strdup ( ""EFI Runtime Driver"" )"		3676787	0		=			
ANR	3676898	Identifier	subsystem		3676787	0					
ANR	3676899	CallExpression	"strdup ( ""EFI Runtime Driver"" )"		3676787	1					
ANR	3676900	Callee	strdup		3676787	0					
ANR	3676901	Identifier	strdup		3676787	0					
ANR	3676902	ArgumentList	"""EFI Runtime Driver"""		3676787	1					
ANR	3676903	Argument	"""EFI Runtime Driver"""		3676787	0					
ANR	3676904	PrimaryExpression	"""EFI Runtime Driver"""		3676787	0					
ANR	3676905	BreakStatement	break ;	392:2:11466:11471	3676787	23	True				
ANR	3676906	Label	case TE_IMAGE_SUBSYSTEM_EFI_ROM :	393:1:11474:11505	3676787	24	True				
ANR	3676907	Identifier	TE_IMAGE_SUBSYSTEM_EFI_ROM		3676787	0					
ANR	3676908	ExpressionStatement	"subsystem = strdup ( ""EFI ROM"" )"	394:2:11509:11539	3676787	25	True				
ANR	3676909	AssignmentExpression	"subsystem = strdup ( ""EFI ROM"" )"		3676787	0		=			
ANR	3676910	Identifier	subsystem		3676787	0					
ANR	3676911	CallExpression	"strdup ( ""EFI ROM"" )"		3676787	1					
ANR	3676912	Callee	strdup		3676787	0					
ANR	3676913	Identifier	strdup		3676787	0					
ANR	3676914	ArgumentList	"""EFI ROM"""		3676787	1					
ANR	3676915	Argument	"""EFI ROM"""		3676787	0					
ANR	3676916	PrimaryExpression	"""EFI ROM"""		3676787	0					
ANR	3676917	BreakStatement	break ;	395:2:11543:11548	3676787	26	True				
ANR	3676918	Label	case TE_IMAGE_SUBSYSTEM_XBOX :	396:1:11551:11579	3676787	27	True				
ANR	3676919	Identifier	TE_IMAGE_SUBSYSTEM_XBOX		3676787	0					
ANR	3676920	ExpressionStatement	"subsystem = strdup ( ""XBOX"" )"	397:2:11583:11610	3676787	28	True				
ANR	3676921	AssignmentExpression	"subsystem = strdup ( ""XBOX"" )"		3676787	0		=			
ANR	3676922	Identifier	subsystem		3676787	0					
ANR	3676923	CallExpression	"strdup ( ""XBOX"" )"		3676787	1					
ANR	3676924	Callee	strdup		3676787	0					
ANR	3676925	Identifier	strdup		3676787	0					
ANR	3676926	ArgumentList	"""XBOX"""		3676787	1					
ANR	3676927	Argument	"""XBOX"""		3676787	0					
ANR	3676928	PrimaryExpression	"""XBOX"""		3676787	0					
ANR	3676929	BreakStatement	break ;	398:2:11614:11619	3676787	29	True				
ANR	3676930	Label	default :	399:1:11622:11629	3676787	30	True				
ANR	3676931	Identifier	default		3676787	0					
ANR	3676932	ExpressionStatement	"subsystem = strdup ( ""Unknown"" )"	400:2:11633:11663	3676787	31	True				
ANR	3676933	AssignmentExpression	"subsystem = strdup ( ""Unknown"" )"		3676787	0		=			
ANR	3676934	Identifier	subsystem		3676787	0					
ANR	3676935	CallExpression	"strdup ( ""Unknown"" )"		3676787	1					
ANR	3676936	Callee	strdup		3676787	0					
ANR	3676937	Identifier	strdup		3676787	0					
ANR	3676938	ArgumentList	"""Unknown"""		3676787	1					
ANR	3676939	Argument	"""Unknown"""		3676787	0					
ANR	3676940	PrimaryExpression	"""Unknown"""		3676787	0					
ANR	3676941	ReturnStatement	return subsystem ;	402:1:11669:11685	3676787	3	True				
ANR	3676942	Identifier	subsystem		3676787	0					
ANR	3676943	ReturnType	char *		3676787	1					
ANR	3676944	Identifier	r_bin_te_get_subsystem		3676787	2					
ANR	3676945	ParameterList	struct r_bin_te_obj_t * bin		3676787	3					
ANR	3676946	Parameter	struct r_bin_te_obj_t * bin	362:29:10640:10665	3676787	0	True				
ANR	3676947	ParameterType	struct r_bin_te_obj_t *		3676787	0					
ANR	3676948	Identifier	bin		3676787	1					
ANR	3676949	CFGEntryNode	ENTRY		3676787		True				
ANR	3676950	CFGExitNode	EXIT		3676787		True				
ANR	3676951	Symbol	* bin -> header		3676787						
ANR	3676952	Symbol	bin -> header -> Subsystem		3676787						
ANR	3676953	Symbol	NULL		3676787						
ANR	3676954	Symbol	bin		3676787						
ANR	3676955	Symbol	bin -> header		3676787						
ANR	3676956	Symbol	subsystem		3676787						
ANR	3676957	Symbol	* * bin		3676787						
ANR	3676958	Symbol	strdup		3676787						
ANR	3676959	Symbol	* bin		3676787						
ANR	3676960	Function	r_bin_te_free	405:0:11690:11870							
ANR	3676961	FunctionDef	r_bin_te_free (struct r_bin_te_obj_t * bin)		3676960	0					
ANR	3676962	CompoundStatement		405:48:11738:11870	3676960	0					
ANR	3676963	IfStatement	if ( ! bin )		3676960	0					
ANR	3676964	Condition	! bin	406:5:11745:11748	3676960	0	True				
ANR	3676965	UnaryOperationExpression	! bin		3676960	0					
ANR	3676966	UnaryOperator	!		3676960	0					
ANR	3676967	Identifier	bin		3676960	1					
ANR	3676968	CompoundStatement		2:11:12:12	3676960	1					
ANR	3676969	ReturnStatement	return NULL ;	407:2:11755:11766	3676960	0	True				
ANR	3676970	Identifier	NULL		3676960	0					
ANR	3676971	ExpressionStatement	free ( bin -> header )	409:1:11772:11790	3676960	1	True				
ANR	3676972	CallExpression	free ( bin -> header )		3676960	0					
ANR	3676973	Callee	free		3676960	0					
ANR	3676974	Identifier	free		3676960	0					
ANR	3676975	ArgumentList	bin -> header		3676960	1					
ANR	3676976	Argument	bin -> header		3676960	0					
ANR	3676977	PtrMemberAccess	bin -> header		3676960	0					
ANR	3676978	Identifier	bin		3676960	0					
ANR	3676979	Identifier	header		3676960	1					
ANR	3676980	ExpressionStatement	free ( bin -> section_header )	410:1:11793:11819	3676960	2	True				
ANR	3676981	CallExpression	free ( bin -> section_header )		3676960	0					
ANR	3676982	Callee	free		3676960	0					
ANR	3676983	Identifier	free		3676960	0					
ANR	3676984	ArgumentList	bin -> section_header		3676960	1					
ANR	3676985	Argument	bin -> section_header		3676960	0					
ANR	3676986	PtrMemberAccess	bin -> section_header		3676960	0					
ANR	3676987	Identifier	bin		3676960	0					
ANR	3676988	Identifier	section_header		3676960	1					
ANR	3676989	ExpressionStatement	r_buf_free ( bin -> b )	411:1:11822:11841	3676960	3	True				
ANR	3676990	CallExpression	r_buf_free ( bin -> b )		3676960	0					
ANR	3676991	Callee	r_buf_free		3676960	0					
ANR	3676992	Identifier	r_buf_free		3676960	0					
ANR	3676993	ArgumentList	bin -> b		3676960	1					
ANR	3676994	Argument	bin -> b		3676960	0					
ANR	3676995	PtrMemberAccess	bin -> b		3676960	0					
ANR	3676996	Identifier	bin		3676960	0					
ANR	3676997	Identifier	b		3676960	1					
ANR	3676998	ExpressionStatement	free ( bin )	412:1:11844:11854	3676960	4	True				
ANR	3676999	CallExpression	free ( bin )		3676960	0					
ANR	3677000	Callee	free		3676960	0					
ANR	3677001	Identifier	free		3676960	0					
ANR	3677002	ArgumentList	bin		3676960	1					
ANR	3677003	Argument	bin		3676960	0					
ANR	3677004	Identifier	bin		3676960	0					
ANR	3677005	ReturnStatement	return NULL ;	413:1:11857:11868	3676960	5	True				
ANR	3677006	Identifier	NULL		3676960	0					
ANR	3677007	ReturnType	void *		3676960	1					
ANR	3677008	Identifier	r_bin_te_free		3676960	2					
ANR	3677009	ParameterList	struct r_bin_te_obj_t * bin		3676960	3					
ANR	3677010	Parameter	struct r_bin_te_obj_t * bin	405:20:11710:11735	3676960	0	True				
ANR	3677011	ParameterType	struct r_bin_te_obj_t *		3676960	0					
ANR	3677012	Identifier	bin		3676960	1					
ANR	3677013	CFGEntryNode	ENTRY		3676960		True				
ANR	3677014	CFGExitNode	EXIT		3676960		True				
ANR	3677015	Symbol	bin -> b		3676960						
ANR	3677016	Symbol	NULL		3676960						
ANR	3677017	Symbol	bin		3676960						
ANR	3677018	Symbol	bin -> header		3676960						
ANR	3677019	Symbol	bin -> section_header		3676960						
ANR	3677020	Symbol	* bin		3676960						
ANR	3677021	Function	r_bin_te_new	416:0:11873:12350							
ANR	3677022	FunctionDef	r_bin_te_new (const char * file)		3677021	0					
ANR	3677023	CompoundStatement		416:54:11927:12350	3677021	0					
ANR	3677024	IdentifierDeclStatement	ut8 * buf ;	417:1:11930:11938	3677021	0	True				
ANR	3677025	IdentifierDecl	* buf		3677021	0					
ANR	3677026	IdentifierDeclType	ut8 *		3677021	0					
ANR	3677027	Identifier	buf		3677021	1					
ANR	3677028	Statement	struct	418:1:11941:11946	3677021	1	True				
ANR	3677029	Statement	r_bin_te_obj_t	418:8:11948:11961	3677021	2	True				
ANR	3677030	Statement	*	418:23:11963:11963	3677021	3	True				
ANR	3677031	Statement	bin	418:24:11964:11966	3677021	4	True				
ANR	3677032	Statement	=	418:28:11968:11968	3677021	5	True				
ANR	3677033	Statement	R_NEW0	418:30:11970:11975	3677021	6	True				
ANR	3677034	Statement	(	418:37:11977:11977	3677021	7	True				
ANR	3677035	Statement	struct	418:38:11978:11983	3677021	8	True				
ANR	3677036	Statement	r_bin_te_obj_t	418:45:11985:11998	3677021	9	True				
ANR	3677037	Statement	)	418:59:11999:11999	3677021	10	True				
ANR	3677038	ExpressionStatement		418:60:12000:12000	3677021	11	True				
ANR	3677039	IfStatement	if ( ! bin )		3677021	12					
ANR	3677040	Condition	! bin	419:5:12007:12010	3677021	0	True				
ANR	3677041	UnaryOperationExpression	! bin		3677021	0					
ANR	3677042	UnaryOperator	!		3677021	0					
ANR	3677043	Identifier	bin		3677021	1					
ANR	3677044	CompoundStatement		4:11:85:85	3677021	1					
ANR	3677045	ReturnStatement	return NULL ;	420:2:12017:12028	3677021	0	True				
ANR	3677046	Identifier	NULL		3677021	0					
ANR	3677047	ExpressionStatement	bin -> file = file	422:1:12034:12050	3677021	13	True				
ANR	3677048	AssignmentExpression	bin -> file = file		3677021	0		=			
ANR	3677049	PtrMemberAccess	bin -> file		3677021	0					
ANR	3677050	Identifier	bin		3677021	0					
ANR	3677051	Identifier	file		3677021	1					
ANR	3677052	Identifier	file		3677021	1					
ANR	3677053	IfStatement	"if ( ! ( buf = ( ut8 * ) r_file_slurp ( file , & bin -> size ) ) )"		3677021	14					
ANR	3677054	Condition	"! ( buf = ( ut8 * ) r_file_slurp ( file , & bin -> size ) )"	423:5:12057:12103	3677021	0	True				
ANR	3677055	UnaryOperationExpression	"! ( buf = ( ut8 * ) r_file_slurp ( file , & bin -> size ) )"		3677021	0					
ANR	3677056	UnaryOperator	!		3677021	0					
ANR	3677057	AssignmentExpression	"buf = ( ut8 * ) r_file_slurp ( file , & bin -> size )"		3677021	1		=			
ANR	3677058	Identifier	buf		3677021	0					
ANR	3677059	CastExpression	"( ut8 * ) r_file_slurp ( file , & bin -> size )"		3677021	1					
ANR	3677060	CastTarget	ut8 *		3677021	0					
ANR	3677061	CallExpression	"r_file_slurp ( file , & bin -> size )"		3677021	1					
ANR	3677062	Callee	r_file_slurp		3677021	0					
ANR	3677063	Identifier	r_file_slurp		3677021	0					
ANR	3677064	ArgumentList	file		3677021	1					
ANR	3677065	Argument	file		3677021	0					
ANR	3677066	Identifier	file		3677021	0					
ANR	3677067	Argument	& bin -> size		3677021	1					
ANR	3677068	UnaryOperationExpression	& bin -> size		3677021	0					
ANR	3677069	UnaryOperator	&		3677021	0					
ANR	3677070	PtrMemberAccess	bin -> size		3677021	1					
ANR	3677071	Identifier	bin		3677021	0					
ANR	3677072	Identifier	size		3677021	1					
ANR	3677073	CompoundStatement		8:54:178:178	3677021	1					
ANR	3677074	ReturnStatement	return r_bin_te_free ( bin ) ;	424:2:12110:12136	3677021	0	True				
ANR	3677075	CallExpression	r_bin_te_free ( bin )		3677021	0					
ANR	3677076	Callee	r_bin_te_free		3677021	0					
ANR	3677077	Identifier	r_bin_te_free		3677021	0					
ANR	3677078	ArgumentList	bin		3677021	1					
ANR	3677079	Argument	bin		3677021	0					
ANR	3677080	Identifier	bin		3677021	0					
ANR	3677081	ExpressionStatement	bin -> b = r_buf_new ( )	426:1:12142:12163	3677021	15	True				
ANR	3677082	AssignmentExpression	bin -> b = r_buf_new ( )		3677021	0		=			
ANR	3677083	PtrMemberAccess	bin -> b		3677021	0					
ANR	3677084	Identifier	bin		3677021	0					
ANR	3677085	Identifier	b		3677021	1					
ANR	3677086	CallExpression	r_buf_new ( )		3677021	1					
ANR	3677087	Callee	r_buf_new		3677021	0					
ANR	3677088	Identifier	r_buf_new		3677021	0					
ANR	3677089	ArgumentList			3677021	1					
ANR	3677090	IfStatement	"if ( ! r_buf_set_bytes ( bin -> b , buf , bin -> size ) )"		3677021	16					
ANR	3677091	Condition	"! r_buf_set_bytes ( bin -> b , buf , bin -> size )"	427:5:12170:12210	3677021	0	True				
ANR	3677092	UnaryOperationExpression	"! r_buf_set_bytes ( bin -> b , buf , bin -> size )"		3677021	0					
ANR	3677093	UnaryOperator	!		3677021	0					
ANR	3677094	CallExpression	"r_buf_set_bytes ( bin -> b , buf , bin -> size )"		3677021	1					
ANR	3677095	Callee	r_buf_set_bytes		3677021	0					
ANR	3677096	Identifier	r_buf_set_bytes		3677021	0					
ANR	3677097	ArgumentList	bin -> b		3677021	1					
ANR	3677098	Argument	bin -> b		3677021	0					
ANR	3677099	PtrMemberAccess	bin -> b		3677021	0					
ANR	3677100	Identifier	bin		3677021	0					
ANR	3677101	Identifier	b		3677021	1					
ANR	3677102	Argument	buf		3677021	1					
ANR	3677103	Identifier	buf		3677021	0					
ANR	3677104	Argument	bin -> size		3677021	2					
ANR	3677105	PtrMemberAccess	bin -> size		3677021	0					
ANR	3677106	Identifier	bin		3677021	0					
ANR	3677107	Identifier	size		3677021	1					
ANR	3677108	CompoundStatement		12:48:285:285	3677021	1					
ANR	3677109	ExpressionStatement	free ( buf )	428:2:12217:12227	3677021	0	True				
ANR	3677110	CallExpression	free ( buf )		3677021	0					
ANR	3677111	Callee	free		3677021	0					
ANR	3677112	Identifier	free		3677021	0					
ANR	3677113	ArgumentList	buf		3677021	1					
ANR	3677114	Argument	buf		3677021	0					
ANR	3677115	Identifier	buf		3677021	0					
ANR	3677116	ReturnStatement	return r_bin_te_free ( bin ) ;	429:2:12231:12257	3677021	1	True				
ANR	3677117	CallExpression	r_bin_te_free ( bin )		3677021	0					
ANR	3677118	Callee	r_bin_te_free		3677021	0					
ANR	3677119	Identifier	r_bin_te_free		3677021	0					
ANR	3677120	ArgumentList	bin		3677021	1					
ANR	3677121	Argument	bin		3677021	0					
ANR	3677122	Identifier	bin		3677021	0					
ANR	3677123	ExpressionStatement	free ( buf )	431:1:12263:12273	3677021	17	True				
ANR	3677124	CallExpression	free ( buf )		3677021	0					
ANR	3677125	Callee	free		3677021	0					
ANR	3677126	Identifier	free		3677021	0					
ANR	3677127	ArgumentList	buf		3677021	1					
ANR	3677128	Argument	buf		3677021	0					
ANR	3677129	Identifier	buf		3677021	0					
ANR	3677130	IfStatement	if ( ! r_bin_te_init ( bin ) )		3677021	18					
ANR	3677131	Condition	! r_bin_te_init ( bin )	432:5:12280:12299	3677021	0	True				
ANR	3677132	UnaryOperationExpression	! r_bin_te_init ( bin )		3677021	0					
ANR	3677133	UnaryOperator	!		3677021	0					
ANR	3677134	CallExpression	r_bin_te_init ( bin )		3677021	1					
ANR	3677135	Callee	r_bin_te_init		3677021	0					
ANR	3677136	Identifier	r_bin_te_init		3677021	0					
ANR	3677137	ArgumentList	bin		3677021	1					
ANR	3677138	Argument	bin		3677021	0					
ANR	3677139	Identifier	bin		3677021	0					
ANR	3677140	CompoundStatement		17:27:374:374	3677021	1					
ANR	3677141	ReturnStatement	return r_bin_te_free ( bin ) ;	433:2:12306:12332	3677021	0	True				
ANR	3677142	CallExpression	r_bin_te_free ( bin )		3677021	0					
ANR	3677143	Callee	r_bin_te_free		3677021	0					
ANR	3677144	Identifier	r_bin_te_free		3677021	0					
ANR	3677145	ArgumentList	bin		3677021	1					
ANR	3677146	Argument	bin		3677021	0					
ANR	3677147	Identifier	bin		3677021	0					
ANR	3677148	ReturnStatement	return bin ;	435:1:12338:12348	3677021	19	True				
ANR	3677149	Identifier	bin		3677021	0					
ANR	3677150	ReturnType	struct r_bin_te_obj_t *		3677021	1					
ANR	3677151	Identifier	r_bin_te_new		3677021	2					
ANR	3677152	ParameterList	const char * file		3677021	3					
ANR	3677153	Parameter	const char * file	416:36:11909:11924	3677021	0	True				
ANR	3677154	ParameterType	const char *		3677021	0					
ANR	3677155	Identifier	file		3677021	1					
ANR	3677156	CFGEntryNode	ENTRY		3677021		True				
ANR	3677157	CFGExitNode	EXIT		3677021		True				
ANR	3677158	Symbol	bin -> size		3677021						
ANR	3677159	Symbol	bin -> file		3677021						
ANR	3677160	Symbol	r_file_slurp		3677021						
ANR	3677161	Symbol	bin -> b		3677021						
ANR	3677162	Symbol	NULL		3677021						
ANR	3677163	Symbol	& bin -> size		3677021						
ANR	3677164	Symbol	bin		3677021						
ANR	3677165	Symbol	r_buf_set_bytes		3677021						
ANR	3677166	Symbol	r_bin_te_free		3677021						
ANR	3677167	Symbol	* bin		3677021						
ANR	3677168	Symbol	buf		3677021						
ANR	3677169	Symbol	file		3677021						
ANR	3677170	Symbol	r_bin_te_init		3677021						
ANR	3677171	Symbol	r_buf_new		3677021						
ANR	3677172	Function	r_bin_te_new_buf	438:0:12353:12717							
ANR	3677173	FunctionDef	r_bin_te_new_buf (RBuffer * buf)		3677172	0					
ANR	3677174	CompoundStatement		438:54:12407:12717	3677172	0					
ANR	3677175	Statement	struct	439:1:12410:12415	3677172	0	True				
ANR	3677176	Statement	r_bin_te_obj_t	439:8:12417:12430	3677172	1	True				
ANR	3677177	Statement	*	439:23:12432:12432	3677172	2	True				
ANR	3677178	Statement	bin	439:24:12433:12435	3677172	3	True				
ANR	3677179	Statement	=	439:28:12437:12437	3677172	4	True				
ANR	3677180	Statement	R_NEW0	439:30:12439:12444	3677172	5	True				
ANR	3677181	Statement	(	439:37:12446:12446	3677172	6	True				
ANR	3677182	Statement	struct	439:38:12447:12452	3677172	7	True				
ANR	3677183	Statement	r_bin_te_obj_t	439:45:12454:12467	3677172	8	True				
ANR	3677184	Statement	)	439:59:12468:12468	3677172	9	True				
ANR	3677185	ExpressionStatement		439:60:12469:12469	3677172	10	True				
ANR	3677186	IfStatement	if ( ! bin )		3677172	11					
ANR	3677187	Condition	! bin	440:5:12476:12479	3677172	0	True				
ANR	3677188	UnaryOperationExpression	! bin		3677172	0					
ANR	3677189	UnaryOperator	!		3677172	0					
ANR	3677190	Identifier	bin		3677172	1					
ANR	3677191	CompoundStatement		3:11:74:74	3677172	1					
ANR	3677192	ReturnStatement	return NULL ;	441:2:12486:12497	3677172	0	True				
ANR	3677193	Identifier	NULL		3677172	0					
ANR	3677194	ExpressionStatement	bin -> kv = sdb_new0 ( )	443:1:12503:12524	3677172	12	True				
ANR	3677195	AssignmentExpression	bin -> kv = sdb_new0 ( )		3677172	0		=			
ANR	3677196	PtrMemberAccess	bin -> kv		3677172	0					
ANR	3677197	Identifier	bin		3677172	0					
ANR	3677198	Identifier	kv		3677172	1					
ANR	3677199	CallExpression	sdb_new0 ( )		3677172	1					
ANR	3677200	Callee	sdb_new0		3677172	0					
ANR	3677201	Identifier	sdb_new0		3677172	0					
ANR	3677202	ArgumentList			3677172	1					
ANR	3677203	ExpressionStatement	bin -> size = r_buf_size ( buf )	444:1:12527:12555	3677172	13	True				
ANR	3677204	AssignmentExpression	bin -> size = r_buf_size ( buf )		3677172	0		=			
ANR	3677205	PtrMemberAccess	bin -> size		3677172	0					
ANR	3677206	Identifier	bin		3677172	0					
ANR	3677207	Identifier	size		3677172	1					
ANR	3677208	CallExpression	r_buf_size ( buf )		3677172	1					
ANR	3677209	Callee	r_buf_size		3677172	0					
ANR	3677210	Identifier	r_buf_size		3677172	0					
ANR	3677211	ArgumentList	buf		3677172	1					
ANR	3677212	Argument	buf		3677172	0					
ANR	3677213	Identifier	buf		3677172	0					
ANR	3677214	ExpressionStatement	bin -> b = r_buf_new_with_buf ( buf )	445:1:12558:12591	3677172	14	True				
ANR	3677215	AssignmentExpression	bin -> b = r_buf_new_with_buf ( buf )		3677172	0		=			
ANR	3677216	PtrMemberAccess	bin -> b		3677172	0					
ANR	3677217	Identifier	bin		3677172	0					
ANR	3677218	Identifier	b		3677172	1					
ANR	3677219	CallExpression	r_buf_new_with_buf ( buf )		3677172	1					
ANR	3677220	Callee	r_buf_new_with_buf		3677172	0					
ANR	3677221	Identifier	r_buf_new_with_buf		3677172	0					
ANR	3677222	ArgumentList	buf		3677172	1					
ANR	3677223	Argument	buf		3677172	0					
ANR	3677224	Identifier	buf		3677172	0					
ANR	3677225	IfStatement	if ( ! bin -> b )		3677172	15					
ANR	3677226	Condition	! bin -> b	446:5:12598:12604	3677172	0	True				
ANR	3677227	UnaryOperationExpression	! bin -> b		3677172	0					
ANR	3677228	UnaryOperator	!		3677172	0					
ANR	3677229	PtrMemberAccess	bin -> b		3677172	1					
ANR	3677230	Identifier	bin		3677172	0					
ANR	3677231	Identifier	b		3677172	1					
ANR	3677232	CompoundStatement		9:14:199:199	3677172	1					
ANR	3677233	ReturnStatement	return r_bin_te_free ( bin ) ;	447:2:12611:12637	3677172	0	True				
ANR	3677234	CallExpression	r_bin_te_free ( bin )		3677172	0					
ANR	3677235	Callee	r_bin_te_free		3677172	0					
ANR	3677236	Identifier	r_bin_te_free		3677172	0					
ANR	3677237	ArgumentList	bin		3677172	1					
ANR	3677238	Argument	bin		3677172	0					
ANR	3677239	Identifier	bin		3677172	0					
ANR	3677240	IfStatement	if ( ! r_bin_te_init ( bin ) )		3677172	16					
ANR	3677241	Condition	! r_bin_te_init ( bin )	449:5:12647:12666	3677172	0	True				
ANR	3677242	UnaryOperationExpression	! r_bin_te_init ( bin )		3677172	0					
ANR	3677243	UnaryOperator	!		3677172	0					
ANR	3677244	CallExpression	r_bin_te_init ( bin )		3677172	1					
ANR	3677245	Callee	r_bin_te_init		3677172	0					
ANR	3677246	Identifier	r_bin_te_init		3677172	0					
ANR	3677247	ArgumentList	bin		3677172	1					
ANR	3677248	Argument	bin		3677172	0					
ANR	3677249	Identifier	bin		3677172	0					
ANR	3677250	CompoundStatement		12:27:261:261	3677172	1					
ANR	3677251	ReturnStatement	return r_bin_te_free ( bin ) ;	450:2:12673:12699	3677172	0	True				
ANR	3677252	CallExpression	r_bin_te_free ( bin )		3677172	0					
ANR	3677253	Callee	r_bin_te_free		3677172	0					
ANR	3677254	Identifier	r_bin_te_free		3677172	0					
ANR	3677255	ArgumentList	bin		3677172	1					
ANR	3677256	Argument	bin		3677172	0					
ANR	3677257	Identifier	bin		3677172	0					
ANR	3677258	ReturnStatement	return bin ;	452:1:12705:12715	3677172	17	True				
ANR	3677259	Identifier	bin		3677172	0					
ANR	3677260	ReturnType	struct r_bin_te_obj_t *		3677172	1					
ANR	3677261	Identifier	r_bin_te_new_buf		3677172	2					
ANR	3677262	ParameterList	RBuffer * buf		3677172	3					
ANR	3677263	Parameter	RBuffer * buf	438:40:12393:12404	3677172	0	True				
ANR	3677264	ParameterType	RBuffer *		3677172	0					
ANR	3677265	Identifier	buf		3677172	1					
ANR	3677266	CFGEntryNode	ENTRY		3677172		True				
ANR	3677267	CFGExitNode	EXIT		3677172		True				
ANR	3677268	Symbol	sdb_new0		3677172						
ANR	3677269	Symbol	bin -> size		3677172						
ANR	3677270	Symbol	buf		3677172						
ANR	3677271	Symbol	bin -> b		3677172						
ANR	3677272	Symbol	NULL		3677172						
ANR	3677273	Symbol	r_buf_new_with_buf		3677172						
ANR	3677274	Symbol	bin		3677172						
ANR	3677275	Symbol	r_bin_te_init		3677172						
ANR	3677276	Symbol	r_bin_te_free		3677172						
ANR	3677277	Symbol	bin -> kv		3677172						
ANR	3677278	Symbol	* bin		3677172						
ANR	3677279	Symbol	r_buf_size		3677172						
