command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	289476	File	data/converged/CVE-2019-16718~_radare2/arc-ext.c								
ANR	289477	ClassDef	ExtInstruction	71:0:2975:3157							
ANR	289478	DeclStmt									
ANR	289479	Decl							char	char	major
ANR	289480	DeclStmt									
ANR	289481	Decl							char	char	minor
ANR	289482	DeclStmt									
ANR	289483	Decl							char	char	flags
ANR	289484	DeclStmt									
ANR	289485	Decl							char	char *	name
ANR	289486	DeclStmt									
ANR	289487	Decl							struct ExtInstruction	struct ExtInstruction *	next
ANR	289488	ClassDef	ExtAuxRegister	80:0:3161:3281							
ANR	289489	DeclStmt									
ANR	289490	Decl							long	long	address
ANR	289491	DeclStmt									
ANR	289492	Decl							char	char *	name
ANR	289493	DeclStmt									
ANR	289494	Decl							struct ExtAuxRegister	struct ExtAuxRegister *	next
ANR	289495	ClassDef	ExtCoreRegister	87:0:3285:3388							
ANR	289496	DeclStmt									
ANR	289497	Decl							short	short	number
ANR	289498	DeclStmt									
ANR	289499	Decl							enum ExtReadWrite	enum ExtReadWrite	rw
ANR	289500	DeclStmt									
ANR	289501	Decl							char	char *	name
ANR	289502	ClassDef	arcExtMap	94:0:3392:3609							
ANR	289503	DeclStmt									
ANR	289504	Decl							struct ExtAuxRegister	struct ExtAuxRegister *	auxRegisters
ANR	289505	DeclStmt									
ANR	289506	Decl							struct ExtInstruction	struct ExtInstruction * [ INST_HASH_SIZE ]	instructions
ANR	289507	DeclStmt									
ANR	289508	Decl							struct ExtCoreRegister	struct ExtCoreRegister [ NUM_EXT_CORE ]	coreRegisters
ANR	289509	DeclStmt									
ANR	289510	Decl							char	char * [ NUM_EXT_COND ]	condCodes
ANR	289511	DeclStmt									
ANR	289512	Decl							struct arcExtMap	struct arcExtMap	arc_extension_map
ANR	289513	Function	create_map	124:0:4564:7463							
ANR	289514	FunctionDef	"create_map (unsigned char * block , unsigned long length)"		289513	0					
ANR	289515	CompoundStatement		125:0:4631:7463	289513	0					
ANR	289516	IdentifierDeclStatement	unsigned char * p = block ;	126:2:4635:4659	289513	0	True				
ANR	289517	IdentifierDecl	* p = block		289513	0					
ANR	289518	IdentifierDeclType	unsigned char *		289513	0					
ANR	289519	Identifier	p		289513	1					
ANR	289520	AssignmentExpression	* p = block		289513	2		=			
ANR	289521	Identifier	block		289513	0					
ANR	289522	Identifier	block		289513	1					
ANR	289523	WhileStatement	while ( p && p < ( block + length ) )		289513	1					
ANR	289524	Condition	p && p < ( block + length )	130:9:4707:4731	289513	0	True				
ANR	289525	AndExpression	p && p < ( block + length )		289513	0		&&			
ANR	289526	Identifier	p		289513	0					
ANR	289527	RelationalExpression	p < ( block + length )		289513	1		<			
ANR	289528	Identifier	p		289513	0					
ANR	289529	AdditiveExpression	block + length		289513	1		+			
ANR	289530	Identifier	block		289513	0					
ANR	289531	Identifier	length		289513	1					
ANR	289532	CompoundStatement		7:4:106:106	289513	1					
ANR	289533	IfStatement	if ( p [ 0 ] == 0 )		289513	0					
ANR	289534	Condition	p [ 0 ] == 0	148:10:5181:5189	289513	0	True				
ANR	289535	EqualityExpression	p [ 0 ] == 0		289513	0		==			
ANR	289536	ArrayIndexing	p [ 0 ]		289513	0					
ANR	289537	Identifier	p		289513	0					
ANR	289538	PrimaryExpression	0		289513	1					
ANR	289539	PrimaryExpression	0		289513	1					
ANR	289540	BreakStatement	break ;	149:1:5193:5198	289513	1	True				
ANR	289541	SwitchStatement	switch ( p [ 1 ] )		289513	1					
ANR	289542	Condition	p [ 1 ]	153:14:5270:5273	289513	0	True				
ANR	289543	ArrayIndexing	p [ 1 ]		289513	0					
ANR	289544	Identifier	p		289513	0					
ANR	289545	PrimaryExpression	1		289513	1					
ANR	289546	CompoundStatement		30:1:645:645	289513	1					
ANR	289547	Label	case EXT_INSTRUCTION :	155:1:5291:5311	289513	0	True				
ANR	289548	Identifier	EXT_INSTRUCTION		289513	0					
ANR	289549	CompoundStatement		36:5:843:952	289513	1					
ANR	289550	Statement	struct	157:5:5323:5328	289513	0	True				
ANR	289551	Statement	ExtInstruction	157:12:5330:5343	289513	1	True				
ANR	289552	Statement	*	157:28:5346:5346	289513	2	True				
ANR	289553	Statement	insn	157:29:5347:5350	289513	3	True				
ANR	289554	Statement	=	157:34:5352:5352	289513	4	True				
ANR	289555	Statement	XNEW	157:36:5354:5357	289513	5	True				
ANR	289556	Statement	(	157:41:5359:5359	289513	6	True				
ANR	289557	Statement	struct	157:42:5360:5365	289513	7	True				
ANR	289558	Statement	ExtInstruction	157:49:5367:5380	289513	8	True				
ANR	289559	Statement	)	157:63:5381:5381	289513	9	True				
ANR	289560	ExpressionStatement		157:64:5382:5382	289513	10	True				
ANR	289561	IdentifierDeclStatement	int major = p [ 2 ] ;	158:5:5389:5425	289513	11	True				
ANR	289562	IdentifierDecl	major = p [ 2 ]		289513	0					
ANR	289563	IdentifierDeclType	int		289513	0					
ANR	289564	Identifier	major		289513	1					
ANR	289565	AssignmentExpression	major = p [ 2 ]		289513	2		=			
ANR	289566	Identifier	major		289513	0					
ANR	289567	ArrayIndexing	p [ 2 ]		289513	1					
ANR	289568	Identifier	p		289513	0					
ANR	289569	PrimaryExpression	2		289513	1					
ANR	289570	IdentifierDeclStatement	int minor = p [ 3 ] ;	159:5:5432:5468	289513	12	True				
ANR	289571	IdentifierDecl	minor = p [ 3 ]		289513	0					
ANR	289572	IdentifierDeclType	int		289513	0					
ANR	289573	Identifier	minor		289513	1					
ANR	289574	AssignmentExpression	minor = p [ 3 ]		289513	2		=			
ANR	289575	Identifier	minor		289513	0					
ANR	289576	ArrayIndexing	p [ 3 ]		289513	1					
ANR	289577	Identifier	p		289513	0					
ANR	289578	PrimaryExpression	3		289513	1					
ANR	289579	IdentifierDeclStatement	"struct ExtInstruction * * bucket = & arc_extension_map . instructions [ INST_HASH ( major , minor ) ] ;"	160:5:5475:5584	289513	13	True				
ANR	289580	IdentifierDecl	"* * bucket = & arc_extension_map . instructions [ INST_HASH ( major , minor ) ]"		289513	0					
ANR	289581	IdentifierDeclType	struct ExtInstruction * *		289513	0					
ANR	289582	Identifier	bucket		289513	1					
ANR	289583	AssignmentExpression	"* * bucket = & arc_extension_map . instructions [ INST_HASH ( major , minor ) ]"		289513	2		=			
ANR	289584	Identifier	bucket		289513	0					
ANR	289585	UnaryOperationExpression	"& arc_extension_map . instructions [ INST_HASH ( major , minor ) ]"		289513	1					
ANR	289586	UnaryOperator	&		289513	0					
ANR	289587	ArrayIndexing	"arc_extension_map . instructions [ INST_HASH ( major , minor ) ]"		289513	1					
ANR	289588	MemberAccess	arc_extension_map . instructions		289513	0					
ANR	289589	Identifier	arc_extension_map		289513	0					
ANR	289590	Identifier	instructions		289513	1					
ANR	289591	CallExpression	"INST_HASH ( major , minor )"		289513	1					
ANR	289592	Callee	INST_HASH		289513	0					
ANR	289593	Identifier	INST_HASH		289513	0					
ANR	289594	ArgumentList	major		289513	1					
ANR	289595	Argument	major		289513	0					
ANR	289596	Identifier	major		289513	0					
ANR	289597	Argument	minor		289513	1					
ANR	289598	Identifier	minor		289513	0					
ANR	289599	ExpressionStatement	insn -> name = strdup ( ( char * ) ( p + 5 ) )	163:5:5592:5629	289513	14	True				
ANR	289600	AssignmentExpression	insn -> name = strdup ( ( char * ) ( p + 5 ) )		289513	0		=			
ANR	289601	PtrMemberAccess	insn -> name		289513	0					
ANR	289602	Identifier	insn		289513	0					
ANR	289603	Identifier	name		289513	1					
ANR	289604	CallExpression	strdup ( ( char * ) ( p + 5 ) )		289513	1					
ANR	289605	Callee	strdup		289513	0					
ANR	289606	Identifier	strdup		289513	0					
ANR	289607	ArgumentList	( char * ) ( p + 5 )		289513	1					
ANR	289608	Argument	( char * ) ( p + 5 )		289513	0					
ANR	289609	CastExpression	( char * ) ( p + 5 )		289513	0					
ANR	289610	CastTarget	char *		289513	0					
ANR	289611	AdditiveExpression	p + 5		289513	1		+			
ANR	289612	Identifier	p		289513	0					
ANR	289613	PrimaryExpression	5		289513	1					
ANR	289614	ExpressionStatement	insn -> major = major	164:5:5636:5655	289513	15	True				
ANR	289615	AssignmentExpression	insn -> major = major		289513	0		=			
ANR	289616	PtrMemberAccess	insn -> major		289513	0					
ANR	289617	Identifier	insn		289513	0					
ANR	289618	Identifier	major		289513	1					
ANR	289619	Identifier	major		289513	1					
ANR	289620	ExpressionStatement	insn -> minor = minor	165:5:5662:5681	289513	16	True				
ANR	289621	AssignmentExpression	insn -> minor = minor		289513	0		=			
ANR	289622	PtrMemberAccess	insn -> minor		289513	0					
ANR	289623	Identifier	insn		289513	0					
ANR	289624	Identifier	minor		289513	1					
ANR	289625	Identifier	minor		289513	1					
ANR	289626	ExpressionStatement	insn -> flags = p [ 4 ]	166:5:5688:5706	289513	17	True				
ANR	289627	AssignmentExpression	insn -> flags = p [ 4 ]		289513	0		=			
ANR	289628	PtrMemberAccess	insn -> flags		289513	0					
ANR	289629	Identifier	insn		289513	0					
ANR	289630	Identifier	flags		289513	1					
ANR	289631	ArrayIndexing	p [ 4 ]		289513	1					
ANR	289632	Identifier	p		289513	0					
ANR	289633	PrimaryExpression	4		289513	1					
ANR	289634	ExpressionStatement	insn -> next = * bucket	167:5:5713:5734	289513	18	True				
ANR	289635	AssignmentExpression	insn -> next = * bucket		289513	0		=			
ANR	289636	PtrMemberAccess	insn -> next		289513	0					
ANR	289637	Identifier	insn		289513	0					
ANR	289638	Identifier	next		289513	1					
ANR	289639	UnaryOperationExpression	* bucket		289513	1					
ANR	289640	UnaryOperator	*		289513	0					
ANR	289641	Identifier	bucket		289513	1					
ANR	289642	ExpressionStatement	* bucket = insn	168:5:5741:5755	289513	19	True				
ANR	289643	AssignmentExpression	* bucket = insn		289513	0		=			
ANR	289644	UnaryOperationExpression	* bucket		289513	0					
ANR	289645	UnaryOperator	*		289513	0					
ANR	289646	Identifier	bucket		289513	1					
ANR	289647	Identifier	insn		289513	1					
ANR	289648	BreakStatement	break ;	169:5:5762:5767	289513	20	True				
ANR	289649	Label	case EXT_CORE_REGISTER :	172:1:5776:5798	289513	2	True				
ANR	289650	Identifier	EXT_CORE_REGISTER		289513	0					
ANR	289651	CompoundStatement		51:5:1212:1247	289513	3					
ANR	289652	IdentifierDeclStatement	unsigned char number = p [ 2 ] ;	174:5:5810:5837	289513	0	True				
ANR	289653	IdentifierDecl	number = p [ 2 ]		289513	0					
ANR	289654	IdentifierDeclType	unsigned char		289513	0					
ANR	289655	Identifier	number		289513	1					
ANR	289656	AssignmentExpression	number = p [ 2 ]		289513	2		=			
ANR	289657	Identifier	number		289513	0					
ANR	289658	ArrayIndexing	p [ 2 ]		289513	1					
ANR	289659	Identifier	p		289513	0					
ANR	289660	PrimaryExpression	2		289513	1					
ANR	289661	IdentifierDeclStatement	char * name = ( char * ) p + 3 ;	175:5:5844:5879	289513	1	True				
ANR	289662	IdentifierDecl	* name = ( char * ) p + 3		289513	0					
ANR	289663	IdentifierDeclType	char *		289513	0					
ANR	289664	Identifier	name		289513	1					
ANR	289665	AssignmentExpression	* name = ( char * ) p + 3		289513	2		=			
ANR	289666	Identifier	name		289513	0					
ANR	289667	AdditiveExpression	( char * ) p + 3		289513	1		+			
ANR	289668	CastExpression	( char * ) p		289513	0					
ANR	289669	CastTarget	char *		289513	0					
ANR	289670	Identifier	p		289513	1					
ANR	289671	PrimaryExpression	3		289513	1					
ANR	289672	ExpressionStatement	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ] . number = number	177:5:5887:5974	289513	2	True				
ANR	289673	AssignmentExpression	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ] . number = number		289513	0		=			
ANR	289674	MemberAccess	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ] . number		289513	0					
ANR	289675	ArrayIndexing	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ]		289513	0					
ANR	289676	MemberAccess	arc_extension_map . coreRegisters		289513	0					
ANR	289677	Identifier	arc_extension_map		289513	0					
ANR	289678	Identifier	coreRegisters		289513	1					
ANR	289679	AdditiveExpression	number - FIRST_EXTENSION_CORE_REGISTER		289513	1		-			
ANR	289680	Identifier	number		289513	0					
ANR	289681	Identifier	FIRST_EXTENSION_CORE_REGISTER		289513	1					
ANR	289682	Identifier	number		289513	1					
ANR	289683	Identifier	number		289513	1					
ANR	289684	ExpressionStatement	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ] . rw = REG_READWRITE	178:5:5981:6075	289513	3	True				
ANR	289685	AssignmentExpression	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ] . rw = REG_READWRITE		289513	0		=			
ANR	289686	MemberAccess	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ] . rw		289513	0					
ANR	289687	ArrayIndexing	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ]		289513	0					
ANR	289688	MemberAccess	arc_extension_map . coreRegisters		289513	0					
ANR	289689	Identifier	arc_extension_map		289513	0					
ANR	289690	Identifier	coreRegisters		289513	1					
ANR	289691	AdditiveExpression	number - FIRST_EXTENSION_CORE_REGISTER		289513	1		-			
ANR	289692	Identifier	number		289513	0					
ANR	289693	Identifier	FIRST_EXTENSION_CORE_REGISTER		289513	1					
ANR	289694	Identifier	rw		289513	1					
ANR	289695	Identifier	REG_READWRITE		289513	1					
ANR	289696	ExpressionStatement	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ] . name = strdup ( name )	179:5:6082:6176	289513	4	True				
ANR	289697	AssignmentExpression	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ] . name = strdup ( name )		289513	0		=			
ANR	289698	MemberAccess	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ] . name		289513	0					
ANR	289699	ArrayIndexing	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ]		289513	0					
ANR	289700	MemberAccess	arc_extension_map . coreRegisters		289513	0					
ANR	289701	Identifier	arc_extension_map		289513	0					
ANR	289702	Identifier	coreRegisters		289513	1					
ANR	289703	AdditiveExpression	number - FIRST_EXTENSION_CORE_REGISTER		289513	1		-			
ANR	289704	Identifier	number		289513	0					
ANR	289705	Identifier	FIRST_EXTENSION_CORE_REGISTER		289513	1					
ANR	289706	Identifier	name		289513	1					
ANR	289707	CallExpression	strdup ( name )		289513	1					
ANR	289708	Callee	strdup		289513	0					
ANR	289709	Identifier	strdup		289513	0					
ANR	289710	ArgumentList	name		289513	1					
ANR	289711	Argument	name		289513	0					
ANR	289712	Identifier	name		289513	0					
ANR	289713	BreakStatement	break ;	180:5:6183:6188	289513	5	True				
ANR	289714	Label	case EXT_LONG_CORE_REGISTER :	183:1:6197:6224	289513	4	True				
ANR	289715	Identifier	EXT_LONG_CORE_REGISTER		289513	0					
ANR	289716	CompoundStatement		63:5:1688:1719	289513	5					
ANR	289717	IdentifierDeclStatement	unsigned char number = p [ 2 ] ;	185:5:6236:6267	289513	0	True				
ANR	289718	IdentifierDecl	number = p [ 2 ]		289513	0					
ANR	289719	IdentifierDeclType	unsigned char		289513	0					
ANR	289720	Identifier	number		289513	1					
ANR	289721	AssignmentExpression	number = p [ 2 ]		289513	2		=			
ANR	289722	Identifier	number		289513	0					
ANR	289723	ArrayIndexing	p [ 2 ]		289513	1					
ANR	289724	Identifier	p		289513	0					
ANR	289725	PrimaryExpression	2		289513	1					
ANR	289726	IdentifierDeclStatement	char * name = ( char * ) p + 7 ;	186:5:6274:6313	289513	1	True				
ANR	289727	IdentifierDecl	* name = ( char * ) p + 7		289513	0					
ANR	289728	IdentifierDeclType	char *		289513	0					
ANR	289729	Identifier	name		289513	1					
ANR	289730	AssignmentExpression	* name = ( char * ) p + 7		289513	2		=			
ANR	289731	Identifier	name		289513	0					
ANR	289732	AdditiveExpression	( char * ) p + 7		289513	1		+			
ANR	289733	CastExpression	( char * ) p		289513	0					
ANR	289734	CastTarget	char *		289513	0					
ANR	289735	Identifier	p		289513	1					
ANR	289736	PrimaryExpression	7		289513	1					
ANR	289737	IdentifierDeclStatement	enum ExtReadWrite rw = p [ 6 ] ;	187:5:6320:6351	289513	2	True				
ANR	289738	IdentifierDecl	rw = p [ 6 ]		289513	0					
ANR	289739	IdentifierDeclType	enum ExtReadWrite		289513	0					
ANR	289740	Identifier	rw		289513	1					
ANR	289741	AssignmentExpression	rw = p [ 6 ]		289513	2		=			
ANR	289742	Identifier	rw		289513	0					
ANR	289743	ArrayIndexing	p [ 6 ]		289513	1					
ANR	289744	Identifier	p		289513	0					
ANR	289745	PrimaryExpression	6		289513	1					
ANR	289746	ExpressionStatement	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ] . number = number	189:5:6359:6446	289513	3	True				
ANR	289747	AssignmentExpression	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ] . number = number		289513	0		=			
ANR	289748	MemberAccess	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ] . number		289513	0					
ANR	289749	ArrayIndexing	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ]		289513	0					
ANR	289750	MemberAccess	arc_extension_map . coreRegisters		289513	0					
ANR	289751	Identifier	arc_extension_map		289513	0					
ANR	289752	Identifier	coreRegisters		289513	1					
ANR	289753	AdditiveExpression	number - FIRST_EXTENSION_CORE_REGISTER		289513	1		-			
ANR	289754	Identifier	number		289513	0					
ANR	289755	Identifier	FIRST_EXTENSION_CORE_REGISTER		289513	1					
ANR	289756	Identifier	number		289513	1					
ANR	289757	Identifier	number		289513	1					
ANR	289758	ExpressionStatement	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ] . rw = rw	190:5:6453:6536	289513	4	True				
ANR	289759	AssignmentExpression	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ] . rw = rw		289513	0		=			
ANR	289760	MemberAccess	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ] . rw		289513	0					
ANR	289761	ArrayIndexing	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ]		289513	0					
ANR	289762	MemberAccess	arc_extension_map . coreRegisters		289513	0					
ANR	289763	Identifier	arc_extension_map		289513	0					
ANR	289764	Identifier	coreRegisters		289513	1					
ANR	289765	AdditiveExpression	number - FIRST_EXTENSION_CORE_REGISTER		289513	1		-			
ANR	289766	Identifier	number		289513	0					
ANR	289767	Identifier	FIRST_EXTENSION_CORE_REGISTER		289513	1					
ANR	289768	Identifier	rw		289513	1					
ANR	289769	Identifier	rw		289513	1					
ANR	289770	ExpressionStatement	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ] . name = strdup ( name )	191:5:6543:6637	289513	5	True				
ANR	289771	AssignmentExpression	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ] . name = strdup ( name )		289513	0		=			
ANR	289772	MemberAccess	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ] . name		289513	0					
ANR	289773	ArrayIndexing	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ]		289513	0					
ANR	289774	MemberAccess	arc_extension_map . coreRegisters		289513	0					
ANR	289775	Identifier	arc_extension_map		289513	0					
ANR	289776	Identifier	coreRegisters		289513	1					
ANR	289777	AdditiveExpression	number - FIRST_EXTENSION_CORE_REGISTER		289513	1		-			
ANR	289778	Identifier	number		289513	0					
ANR	289779	Identifier	FIRST_EXTENSION_CORE_REGISTER		289513	1					
ANR	289780	Identifier	name		289513	1					
ANR	289781	CallExpression	strdup ( name )		289513	1					
ANR	289782	Callee	strdup		289513	0					
ANR	289783	Identifier	strdup		289513	0					
ANR	289784	ArgumentList	name		289513	1					
ANR	289785	Argument	name		289513	0					
ANR	289786	Identifier	name		289513	0					
ANR	289787	Label	case EXT_COND_CODE :	194:1:6646:6664	289513	6	True				
ANR	289788	Identifier	EXT_COND_CODE		289513	0					
ANR	289789	CompoundStatement		72:5:2044:2083	289513	7					
ANR	289790	IdentifierDeclStatement	char * cc_name = strdup ( ( char * ) ( p + 3 ) ) ;	196:5:6676:6715	289513	0	True				
ANR	289791	IdentifierDecl	* cc_name = strdup ( ( char * ) ( p + 3 ) )		289513	0					
ANR	289792	IdentifierDeclType	char *		289513	0					
ANR	289793	Identifier	cc_name		289513	1					
ANR	289794	AssignmentExpression	* cc_name = strdup ( ( char * ) ( p + 3 ) )		289513	2		=			
ANR	289795	Identifier	cc_name		289513	0					
ANR	289796	CallExpression	strdup ( ( char * ) ( p + 3 ) )		289513	1					
ANR	289797	Callee	strdup		289513	0					
ANR	289798	Identifier	strdup		289513	0					
ANR	289799	ArgumentList	( char * ) ( p + 3 )		289513	1					
ANR	289800	Argument	( char * ) ( p + 3 )		289513	0					
ANR	289801	CastExpression	( char * ) ( p + 3 )		289513	0					
ANR	289802	CastTarget	char *		289513	0					
ANR	289803	AdditiveExpression	p + 3		289513	1		+			
ANR	289804	Identifier	p		289513	0					
ANR	289805	PrimaryExpression	3		289513	1					
ANR	289806	ExpressionStatement	arc_extension_map . condCodes [ p [ 2 ] - FIRST_EXTENSION_CONDITION_CODE ] = cc_name	198:5:6723:6799	289513	1	True				
ANR	289807	AssignmentExpression	arc_extension_map . condCodes [ p [ 2 ] - FIRST_EXTENSION_CONDITION_CODE ] = cc_name		289513	0		=			
ANR	289808	ArrayIndexing	arc_extension_map . condCodes [ p [ 2 ] - FIRST_EXTENSION_CONDITION_CODE ]		289513	0					
ANR	289809	MemberAccess	arc_extension_map . condCodes		289513	0					
ANR	289810	Identifier	arc_extension_map		289513	0					
ANR	289811	Identifier	condCodes		289513	1					
ANR	289812	AdditiveExpression	p [ 2 ] - FIRST_EXTENSION_CONDITION_CODE		289513	1		-			
ANR	289813	ArrayIndexing	p [ 2 ]		289513	0					
ANR	289814	Identifier	p		289513	0					
ANR	289815	PrimaryExpression	2		289513	1					
ANR	289816	Identifier	FIRST_EXTENSION_CONDITION_CODE		289513	1					
ANR	289817	Identifier	cc_name		289513	1					
ANR	289818	BreakStatement	break ;	199:5:6806:6811	289513	2	True				
ANR	289819	Label	case EXT_AUX_REGISTER :	202:1:6820:6841	289513	8	True				
ANR	289820	Identifier	EXT_AUX_REGISTER		289513	0					
ANR	289821	CompoundStatement		82:5:2354:2394	289513	9					
ANR	289822	Statement	struct	205:5:6911:6916	289513	0	True				
ANR	289823	Statement	ExtAuxRegister	205:12:6918:6931	289513	1	True				
ANR	289824	Statement	*	205:27:6933:6933	289513	2	True				
ANR	289825	Statement	newAuxRegister	205:28:6934:6947	289513	3	True				
ANR	289826	Statement	=	205:43:6949:6949	289513	4	True				
ANR	289827	Statement	XNEW	205:45:6951:6954	289513	5	True				
ANR	289828	Statement	(	205:50:6956:6956	289513	6	True				
ANR	289829	Statement	struct	205:51:6957:6962	289513	7	True				
ANR	289830	Statement	ExtAuxRegister	205:58:6964:6977	289513	8	True				
ANR	289831	Statement	)	205:72:6978:6978	289513	9	True				
ANR	289832	ExpressionStatement		205:73:6979:6979	289513	10	True				
ANR	289833	IdentifierDeclStatement	char * aux_name = strdup ( ( char * ) ( p + 6 ) ) ;	206:5:6986:7026	289513	11	True				
ANR	289834	IdentifierDecl	* aux_name = strdup ( ( char * ) ( p + 6 ) )		289513	0					
ANR	289835	IdentifierDeclType	char *		289513	0					
ANR	289836	Identifier	aux_name		289513	1					
ANR	289837	AssignmentExpression	* aux_name = strdup ( ( char * ) ( p + 6 ) )		289513	2		=			
ANR	289838	Identifier	aux_name		289513	0					
ANR	289839	CallExpression	strdup ( ( char * ) ( p + 6 ) )		289513	1					
ANR	289840	Callee	strdup		289513	0					
ANR	289841	Identifier	strdup		289513	0					
ANR	289842	ArgumentList	( char * ) ( p + 6 )		289513	1					
ANR	289843	Argument	( char * ) ( p + 6 )		289513	0					
ANR	289844	CastExpression	( char * ) ( p + 6 )		289513	0					
ANR	289845	CastTarget	char *		289513	0					
ANR	289846	AdditiveExpression	p + 6		289513	1		+			
ANR	289847	Identifier	p		289513	0					
ANR	289848	PrimaryExpression	6		289513	1					
ANR	289849	ExpressionStatement	newAuxRegister -> name = aux_name	208:5:7034:7075	289513	12	True				
ANR	289850	AssignmentExpression	newAuxRegister -> name = aux_name		289513	0		=			
ANR	289851	PtrMemberAccess	newAuxRegister -> name		289513	0					
ANR	289852	Identifier	newAuxRegister		289513	0					
ANR	289853	Identifier	name		289513	1					
ANR	289854	Identifier	aux_name		289513	1					
ANR	289855	ExpressionStatement	newAuxRegister -> address = p [ 2 ] << 24 | p [ 3 ] << 16 | p [ 4 ] << 8 | p [ 5 ]	209:5:7082:7151	289513	13	True				
ANR	289856	AssignmentExpression	newAuxRegister -> address = p [ 2 ] << 24 | p [ 3 ] << 16 | p [ 4 ] << 8 | p [ 5 ]		289513	0		=			
ANR	289857	PtrMemberAccess	newAuxRegister -> address		289513	0					
ANR	289858	Identifier	newAuxRegister		289513	0					
ANR	289859	Identifier	address		289513	1					
ANR	289860	InclusiveOrExpression	p [ 2 ] << 24 | p [ 3 ] << 16 | p [ 4 ] << 8 | p [ 5 ]		289513	1		|			
ANR	289861	ShiftExpression	p [ 2 ] << 24		289513	0		<<			
ANR	289862	ArrayIndexing	p [ 2 ]		289513	0					
ANR	289863	Identifier	p		289513	0					
ANR	289864	PrimaryExpression	2		289513	1					
ANR	289865	PrimaryExpression	24		289513	1					
ANR	289866	InclusiveOrExpression	p [ 3 ] << 16 | p [ 4 ] << 8 | p [ 5 ]		289513	1		|			
ANR	289867	ShiftExpression	p [ 3 ] << 16		289513	0		<<			
ANR	289868	ArrayIndexing	p [ 3 ]		289513	0					
ANR	289869	Identifier	p		289513	0					
ANR	289870	PrimaryExpression	3		289513	1					
ANR	289871	PrimaryExpression	16		289513	1					
ANR	289872	InclusiveOrExpression	p [ 4 ] << 8 | p [ 5 ]		289513	1		|			
ANR	289873	ShiftExpression	p [ 4 ] << 8		289513	0		<<			
ANR	289874	ArrayIndexing	p [ 4 ]		289513	0					
ANR	289875	Identifier	p		289513	0					
ANR	289876	PrimaryExpression	4		289513	1					
ANR	289877	PrimaryExpression	8		289513	1					
ANR	289878	ArrayIndexing	p [ 5 ]		289513	1					
ANR	289879	Identifier	p		289513	0					
ANR	289880	PrimaryExpression	5		289513	1					
ANR	289881	ExpressionStatement	newAuxRegister -> next = arc_extension_map . auxRegisters	210:5:7158:7221	289513	14	True				
ANR	289882	AssignmentExpression	newAuxRegister -> next = arc_extension_map . auxRegisters		289513	0		=			
ANR	289883	PtrMemberAccess	newAuxRegister -> next		289513	0					
ANR	289884	Identifier	newAuxRegister		289513	0					
ANR	289885	Identifier	next		289513	1					
ANR	289886	MemberAccess	arc_extension_map . auxRegisters		289513	1					
ANR	289887	Identifier	arc_extension_map		289513	0					
ANR	289888	Identifier	auxRegisters		289513	1					
ANR	289889	ExpressionStatement	arc_extension_map . auxRegisters = newAuxRegister	211:5:7228:7275	289513	15	True				
ANR	289890	AssignmentExpression	arc_extension_map . auxRegisters = newAuxRegister		289513	0		=			
ANR	289891	MemberAccess	arc_extension_map . auxRegisters		289513	0					
ANR	289892	Identifier	arc_extension_map		289513	0					
ANR	289893	Identifier	auxRegisters		289513	1					
ANR	289894	Identifier	newAuxRegister		289513	1					
ANR	289895	BreakStatement	break ;	212:5:7282:7287	289513	16	True				
ANR	289896	Label	default :	215:1:7296:7303	289513	10	True				
ANR	289897	Identifier	default		289513	0					
ANR	289898	BreakStatement	break ;	217:3:7370:7375	289513	11	True				
ANR	289899	ExpressionStatement	p += p [ 0 ]	220:6:7387:7396	289513	2	True				
ANR	289900	AssignmentExpression	p += p [ 0 ]		289513	0		+=			
ANR	289901	Identifier	p		289513	0					
ANR	289902	ArrayIndexing	p [ 0 ]		289513	1					
ANR	289903	Identifier	p		289513	0					
ANR	289904	PrimaryExpression	0		289513	1					
ANR	289905	ReturnType	static void		289513	1					
ANR	289906	Identifier	create_map		289513	2					
ANR	289907	ParameterList	"unsigned char * block , unsigned long length"		289513	3					
ANR	289908	Parameter	unsigned char * block	124:23:4587:4606	289513	0	True				
ANR	289909	ParameterType	unsigned char *		289513	0					
ANR	289910	Identifier	block		289513	1					
ANR	289911	Parameter	unsigned long length	124:45:4609:4628	289513	1	True				
ANR	289912	ParameterType	unsigned long		289513	0					
ANR	289913	Identifier	length		289513	1					
ANR	289914	CFGEntryNode	ENTRY		289513		True				
ANR	289915	CFGExitNode	EXIT		289513		True				
ANR	289916	Symbol	arc_extension_map		289513						
ANR	289917	Symbol	minor		289513						
ANR	289918	Symbol	rw		289513						
ANR	289919	Symbol	insn -> next		289513						
ANR	289920	Symbol	REG_READWRITE		289513						
ANR	289921	Symbol	number		289513						
ANR	289922	Symbol	insn -> name		289513						
ANR	289923	Symbol	FIRST_EXTENSION_CONDITION_CODE		289513						
ANR	289924	Symbol	major		289513						
ANR	289925	Symbol	insn -> flags		289513						
ANR	289926	Symbol	aux_name		289513						
ANR	289927	Symbol	block		289513						
ANR	289928	Symbol	* * p		289513						
ANR	289929	Symbol	arc_extension_map . auxRegisters		289513						
ANR	289930	Symbol	newAuxRegister -> address		289513						
ANR	289931	Symbol	INST_HASH		289513						
ANR	289932	Symbol	newAuxRegister -> name		289513						
ANR	289933	Symbol	arc_extension_map . condCodes		289513						
ANR	289934	Symbol	insn -> major		289513						
ANR	289935	Symbol	FIRST_EXTENSION_CORE_REGISTER		289513						
ANR	289936	Symbol	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ] . name		289513						
ANR	289937	Symbol	* FIRST_EXTENSION_CORE_REGISTER		289513						
ANR	289938	Symbol	* FIRST_EXTENSION_CONDITION_CODE		289513						
ANR	289939	Symbol	* arc_extension_map		289513						
ANR	289940	Symbol	* newAuxRegister		289513						
ANR	289941	Symbol	length		289513						
ANR	289942	Symbol	* insn		289513						
ANR	289943	Symbol	insn -> minor		289513						
ANR	289944	Symbol	arc_extension_map . coreRegisters		289513						
ANR	289945	Symbol	cc_name		289513						
ANR	289946	Symbol	* arc_extension_map . condCodes		289513						
ANR	289947	Symbol	* number		289513						
ANR	289948	Symbol	p		289513						
ANR	289949	Symbol	bucket		289513						
ANR	289950	Symbol	arc_extension_map . instructions		289513						
ANR	289951	Symbol	insn		289513						
ANR	289952	Symbol	* arc_extension_map . coreRegisters		289513						
ANR	289953	Symbol	* bucket		289513						
ANR	289954	Symbol	newAuxRegister -> next		289513						
ANR	289955	Symbol	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ] . number		289513						
ANR	289956	Symbol	name		289513						
ANR	289957	Symbol	newAuxRegister		289513						
ANR	289958	Symbol	* p		289513						
ANR	289959	Symbol	strdup		289513						
ANR	289960	Symbol	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ] . rw		289513						
ANR	289961	Function	destroy_map	228:0:7529:8679							
ANR	289962	FunctionDef	destroy_map ()		289961	0					
ANR	289963	CompoundStatement		229:0:7559:8679	289961	0					
ANR	289964	IdentifierDeclStatement	struct ExtAuxRegister * r ;	230:2:7563:7587	289961	0	True				
ANR	289965	IdentifierDecl	* r		289961	0					
ANR	289966	IdentifierDeclType	struct ExtAuxRegister *		289961	0					
ANR	289967	Identifier	r		289961	1					
ANR	289968	IdentifierDeclStatement	unsigned int i ;	231:2:7591:7615	289961	1	True				
ANR	289969	IdentifierDecl	i		289961	0					
ANR	289970	IdentifierDeclType	unsigned int		289961	0					
ANR	289971	Identifier	i		289961	1					
ANR	289972	ExpressionStatement	r = arc_extension_map . auxRegisters	234:2:7653:7687	289961	2	True				
ANR	289973	AssignmentExpression	r = arc_extension_map . auxRegisters		289961	0		=			
ANR	289974	Identifier	r		289961	0					
ANR	289975	MemberAccess	arc_extension_map . auxRegisters		289961	1					
ANR	289976	Identifier	arc_extension_map		289961	0					
ANR	289977	Identifier	auxRegisters		289961	1					
ANR	289978	WhileStatement	while ( r )		289961	3					
ANR	289979	Condition	r	235:9:7698:7698	289961	0	True				
ANR	289980	Identifier	r		289961	0					
ANR	289981	CompoundStatement		10:6:214:251	289961	1					
ANR	289982	IdentifierDeclStatement	struct ExtAuxRegister * next = r -> next ;	238:6:7774:7811	289961	0	True				
ANR	289983	IdentifierDecl	* next = r -> next		289961	0					
ANR	289984	IdentifierDeclType	struct ExtAuxRegister *		289961	0					
ANR	289985	Identifier	next		289961	1					
ANR	289986	AssignmentExpression	* next = r -> next		289961	2		=			
ANR	289987	Identifier	next		289961	0					
ANR	289988	PtrMemberAccess	r -> next		289961	1					
ANR	289989	Identifier	r		289961	0					
ANR	289990	Identifier	next		289961	1					
ANR	289991	ExpressionStatement	free ( r -> name )	240:6:7820:7834	289961	1	True				
ANR	289992	CallExpression	free ( r -> name )		289961	0					
ANR	289993	Callee	free		289961	0					
ANR	289994	Identifier	free		289961	0					
ANR	289995	ArgumentList	r -> name		289961	1					
ANR	289996	Argument	r -> name		289961	0					
ANR	289997	PtrMemberAccess	r -> name		289961	0					
ANR	289998	Identifier	r		289961	0					
ANR	289999	Identifier	name		289961	1					
ANR	290000	ExpressionStatement	free ( r )	241:6:7842:7850	289961	2	True				
ANR	290001	CallExpression	free ( r )		289961	0					
ANR	290002	Callee	free		289961	0					
ANR	290003	Identifier	free		289961	0					
ANR	290004	ArgumentList	r		289961	1					
ANR	290005	Argument	r		289961	0					
ANR	290006	Identifier	r		289961	0					
ANR	290007	ExpressionStatement	r = next	242:6:7858:7866	289961	3	True				
ANR	290008	AssignmentExpression	r = next		289961	0		=			
ANR	290009	Identifier	r		289961	0					
ANR	290010	Identifier	next		289961	1					
ANR	290011	ForStatement	for ( i = 0 ; i < INST_HASH_SIZE ; i ++ )		289961	4					
ANR	290012	ForInit	i = 0 ;	246:7:7909:7914	289961	0	True				
ANR	290013	AssignmentExpression	i = 0		289961	0		=			
ANR	290014	Identifier	i		289961	0					
ANR	290015	PrimaryExpression	0		289961	1					
ANR	290016	Condition	i < INST_HASH_SIZE	246:14:7916:7933	289961	1	True				
ANR	290017	RelationalExpression	i < INST_HASH_SIZE		289961	0		<			
ANR	290018	Identifier	i		289961	0					
ANR	290019	Identifier	INST_HASH_SIZE		289961	1					
ANR	290020	PostIncDecOperationExpression	i ++	246:34:7936:7938	289961	2	True				
ANR	290021	Identifier	i		289961	0					
ANR	290022	IncDec	++		289961	1					
ANR	290023	CompoundStatement		20:6:393:456	289961	3					
ANR	290024	IdentifierDeclStatement	struct ExtInstruction * insn = arc_extension_map . instructions [ i ] ;	248:6:7953:8016	289961	0	True				
ANR	290025	IdentifierDecl	* insn = arc_extension_map . instructions [ i ]		289961	0					
ANR	290026	IdentifierDeclType	struct ExtInstruction *		289961	0					
ANR	290027	Identifier	insn		289961	1					
ANR	290028	AssignmentExpression	* insn = arc_extension_map . instructions [ i ]		289961	2		=			
ANR	290029	Identifier	insn		289961	0					
ANR	290030	ArrayIndexing	arc_extension_map . instructions [ i ]		289961	1					
ANR	290031	MemberAccess	arc_extension_map . instructions		289961	0					
ANR	290032	Identifier	arc_extension_map		289961	0					
ANR	290033	Identifier	instructions		289961	1					
ANR	290034	Identifier	i		289961	1					
ANR	290035	WhileStatement	while ( insn )		289961	1					
ANR	290036	Condition	insn	250:13:8032:8035	289961	0	True				
ANR	290037	Identifier	insn		289961	0					
ANR	290038	CompoundStatement		25:10:569:609	289961	1					
ANR	290039	IdentifierDeclStatement	struct ExtInstruction * next = insn -> next ;	253:10:8129:8169	289961	0	True				
ANR	290040	IdentifierDecl	* next = insn -> next		289961	0					
ANR	290041	IdentifierDeclType	struct ExtInstruction *		289961	0					
ANR	290042	Identifier	next		289961	1					
ANR	290043	AssignmentExpression	* next = insn -> next		289961	2		=			
ANR	290044	Identifier	next		289961	0					
ANR	290045	PtrMemberAccess	insn -> next		289961	1					
ANR	290046	Identifier	insn		289961	0					
ANR	290047	Identifier	next		289961	1					
ANR	290048	ExpressionStatement	free ( insn -> name )	255:10:8182:8199	289961	1	True				
ANR	290049	CallExpression	free ( insn -> name )		289961	0					
ANR	290050	Callee	free		289961	0					
ANR	290051	Identifier	free		289961	0					
ANR	290052	ArgumentList	insn -> name		289961	1					
ANR	290053	Argument	insn -> name		289961	0					
ANR	290054	PtrMemberAccess	insn -> name		289961	0					
ANR	290055	Identifier	insn		289961	0					
ANR	290056	Identifier	name		289961	1					
ANR	290057	ExpressionStatement	free ( insn )	256:10:8211:8222	289961	2	True				
ANR	290058	CallExpression	free ( insn )		289961	0					
ANR	290059	Callee	free		289961	0					
ANR	290060	Identifier	free		289961	0					
ANR	290061	ArgumentList	insn		289961	1					
ANR	290062	Argument	insn		289961	0					
ANR	290063	Identifier	insn		289961	0					
ANR	290064	ExpressionStatement	insn = next	257:10:8234:8245	289961	3	True				
ANR	290065	AssignmentExpression	insn = next		289961	0		=			
ANR	290066	Identifier	insn		289961	0					
ANR	290067	Identifier	next		289961	1					
ANR	290068	ForStatement	for ( i = 0 ; i < NUM_EXT_CORE ; i ++ )		289961	5					
ANR	290069	ForInit	i = 0 ;	262:7:8299:8304	289961	0	True				
ANR	290070	AssignmentExpression	i = 0		289961	0		=			
ANR	290071	Identifier	i		289961	0					
ANR	290072	PrimaryExpression	0		289961	1					
ANR	290073	Condition	i < NUM_EXT_CORE	262:14:8306:8321	289961	1	True				
ANR	290074	RelationalExpression	i < NUM_EXT_CORE		289961	0		<			
ANR	290075	Identifier	i		289961	0					
ANR	290076	Identifier	NUM_EXT_CORE		289961	1					
ANR	290077	PostIncDecOperationExpression	i ++	262:32:8324:8326	289961	2	True				
ANR	290078	Identifier	i		289961	0					
ANR	290079	IncDec	++		289961	1					
ANR	290080	CompoundStatement		35:4:773:773	289961	3					
ANR	290081	IfStatement	if ( arc_extension_map . coreRegisters [ i ] . name )		289961	0					
ANR	290082	Condition	arc_extension_map . coreRegisters [ i ] . name	264:10:8345:8383	289961	0	True				
ANR	290083	MemberAccess	arc_extension_map . coreRegisters [ i ] . name		289961	0					
ANR	290084	ArrayIndexing	arc_extension_map . coreRegisters [ i ]		289961	0					
ANR	290085	MemberAccess	arc_extension_map . coreRegisters		289961	0					
ANR	290086	Identifier	arc_extension_map		289961	0					
ANR	290087	Identifier	coreRegisters		289961	1					
ANR	290088	Identifier	i		289961	1					
ANR	290089	Identifier	name		289961	1					
ANR	290090	ExpressionStatement	free ( arc_extension_map . coreRegisters [ i ] . name )	265:8:8394:8440	289961	1	True				
ANR	290091	CallExpression	free ( arc_extension_map . coreRegisters [ i ] . name )		289961	0					
ANR	290092	Callee	free		289961	0					
ANR	290093	Identifier	free		289961	0					
ANR	290094	ArgumentList	arc_extension_map . coreRegisters [ i ] . name		289961	1					
ANR	290095	Argument	arc_extension_map . coreRegisters [ i ] . name		289961	0					
ANR	290096	MemberAccess	arc_extension_map . coreRegisters [ i ] . name		289961	0					
ANR	290097	ArrayIndexing	arc_extension_map . coreRegisters [ i ]		289961	0					
ANR	290098	MemberAccess	arc_extension_map . coreRegisters		289961	0					
ANR	290099	Identifier	arc_extension_map		289961	0					
ANR	290100	Identifier	coreRegisters		289961	1					
ANR	290101	Identifier	i		289961	1					
ANR	290102	Identifier	name		289961	1					
ANR	290103	ForStatement	for ( i = 0 ; i < NUM_EXT_COND ; i ++ )		289961	6					
ANR	290104	ForInit	i = 0 ;	269:7:8485:8490	289961	0	True				
ANR	290105	AssignmentExpression	i = 0		289961	0		=			
ANR	290106	Identifier	i		289961	0					
ANR	290107	PrimaryExpression	0		289961	1					
ANR	290108	Condition	i < NUM_EXT_COND	269:14:8492:8507	289961	1	True				
ANR	290109	RelationalExpression	i < NUM_EXT_COND		289961	0		<			
ANR	290110	Identifier	i		289961	0					
ANR	290111	Identifier	NUM_EXT_COND		289961	1					
ANR	290112	PostIncDecOperationExpression	i ++	269:32:8510:8512	289961	2	True				
ANR	290113	Identifier	i		289961	0					
ANR	290114	IncDec	++		289961	1					
ANR	290115	CompoundStatement		42:4:959:959	289961	3					
ANR	290116	IfStatement	if ( arc_extension_map . condCodes [ i ] )		289961	0					
ANR	290117	Condition	arc_extension_map . condCodes [ i ]	271:10:8531:8560	289961	0	True				
ANR	290118	ArrayIndexing	arc_extension_map . condCodes [ i ]		289961	0					
ANR	290119	MemberAccess	arc_extension_map . condCodes		289961	0					
ANR	290120	Identifier	arc_extension_map		289961	0					
ANR	290121	Identifier	condCodes		289961	1					
ANR	290122	Identifier	i		289961	1					
ANR	290123	ExpressionStatement	free ( arc_extension_map . condCodes [ i ] )	272:8:8571:8608	289961	1	True				
ANR	290124	CallExpression	free ( arc_extension_map . condCodes [ i ] )		289961	0					
ANR	290125	Callee	free		289961	0					
ANR	290126	Identifier	free		289961	0					
ANR	290127	ArgumentList	arc_extension_map . condCodes [ i ]		289961	1					
ANR	290128	Argument	arc_extension_map . condCodes [ i ]		289961	0					
ANR	290129	ArrayIndexing	arc_extension_map . condCodes [ i ]		289961	0					
ANR	290130	MemberAccess	arc_extension_map . condCodes		289961	0					
ANR	290131	Identifier	arc_extension_map		289961	0					
ANR	290132	Identifier	condCodes		289961	1					
ANR	290133	Identifier	i		289961	1					
ANR	290134	ExpressionStatement	"memset ( & arc_extension_map , 0 , sizeof ( arc_extension_map ) )"	275:2:8619:8677	289961	7	True				
ANR	290135	CallExpression	"memset ( & arc_extension_map , 0 , sizeof ( arc_extension_map ) )"		289961	0					
ANR	290136	Callee	memset		289961	0					
ANR	290137	Identifier	memset		289961	0					
ANR	290138	ArgumentList	& arc_extension_map		289961	1					
ANR	290139	Argument	& arc_extension_map		289961	0					
ANR	290140	UnaryOperationExpression	& arc_extension_map		289961	0					
ANR	290141	UnaryOperator	&		289961	0					
ANR	290142	Identifier	arc_extension_map		289961	1					
ANR	290143	Argument	0		289961	1					
ANR	290144	PrimaryExpression	0		289961	0					
ANR	290145	Argument	sizeof ( arc_extension_map )		289961	2					
ANR	290146	SizeofExpression	sizeof ( arc_extension_map )		289961	0					
ANR	290147	Sizeof	sizeof		289961	0					
ANR	290148	SizeofOperand	arc_extension_map		289961	1					
ANR	290149	ReturnType	static void		289961	1					
ANR	290150	Identifier	destroy_map		289961	2					
ANR	290151	ParameterList			289961	3					
ANR	290152	CFGEntryNode	ENTRY		289961		True				
ANR	290153	CFGExitNode	EXIT		289961		True				
ANR	290154	Symbol	next		289961						
ANR	290155	Symbol	& arc_extension_map		289961						
ANR	290156	Symbol	arc_extension_map		289961						
ANR	290157	Symbol	NUM_EXT_CORE		289961						
ANR	290158	Symbol	INST_HASH_SIZE		289961						
ANR	290159	Symbol	insn -> next		289961						
ANR	290160	Symbol	NUM_EXT_COND		289961						
ANR	290161	Symbol	r -> next		289961						
ANR	290162	Symbol	insn -> name		289961						
ANR	290163	Symbol	* arc_extension_map . instructions		289961						
ANR	290164	Symbol	arc_extension_map . auxRegisters		289961						
ANR	290165	Symbol	arc_extension_map . condCodes		289961						
ANR	290166	Symbol	arc_extension_map . coreRegisters [ i ] . name		289961						
ANR	290167	Symbol	* arc_extension_map		289961						
ANR	290168	Symbol	i		289961						
ANR	290169	Symbol	* insn		289961						
ANR	290170	Symbol	arc_extension_map . coreRegisters		289961						
ANR	290171	Symbol	* arc_extension_map . condCodes		289961						
ANR	290172	Symbol	insn		289961						
ANR	290173	Symbol	arc_extension_map . instructions		289961						
ANR	290174	Symbol	r		289961						
ANR	290175	Symbol	* arc_extension_map . coreRegisters		289961						
ANR	290176	Symbol	* i		289961						
ANR	290177	Symbol	r -> name		289961						
ANR	290178	Symbol	* r		289961						
ANR	290179	Function	ExtReadWrite_image	280:0:8690:8994							
ANR	290180	FunctionDef	ExtReadWrite_image (enum ExtReadWrite val)		290179	0					
ANR	290181	CompoundStatement		281:0:8751:8994	290179	0					
ANR	290182	SwitchStatement	switch ( val )		290179	0					
ANR	290183	Condition	val	282:12:8765:8767	290179	0	True				
ANR	290184	Identifier	val		290179	0					
ANR	290185	CompoundStatement		3:4:22:22	290179	1					
ANR	290186	Label	case REG_INVALID :	284:8:8784:8802	290179	0	True				
ANR	290187	Identifier	REG_INVALID		290179	0					
ANR	290188	ReturnStatement	"return ""INVALID"" ;"	284:28:8804:8820	290179	1	True				
ANR	290189	PrimaryExpression	"""INVALID"""		290179	0					
ANR	290190	Label	case REG_READ :	285:8:8830:8848	290179	2	True				
ANR	290191	Identifier	REG_READ		290179	0					
ANR	290192	ReturnStatement	"return ""RO"" ;"	285:28:8850:8861	290179	3	True				
ANR	290193	PrimaryExpression	"""RO"""		290179	0					
ANR	290194	Label	case REG_WRITE :	286:8:8871:8889	290179	4	True				
ANR	290195	Identifier	REG_WRITE		290179	0					
ANR	290196	ReturnStatement	"return ""WO"" ;"	286:28:8891:8902	290179	5	True				
ANR	290197	PrimaryExpression	"""WO"""		290179	0					
ANR	290198	Label	case REG_READWRITE :	287:8:8912:8930	290179	6	True				
ANR	290199	Identifier	REG_READWRITE		290179	0					
ANR	290200	ReturnStatement	"return ""R/W"" ;"	287:28:8932:8944	290179	7	True				
ANR	290201	PrimaryExpression	"""R/W"""		290179	0					
ANR	290202	Label	default :	288:8:8954:8972	290179	8	True				
ANR	290203	Identifier	default		290179	0					
ANR	290204	ReturnStatement	"return ""???"" ;"	288:28:8974:8986	290179	9	True				
ANR	290205	PrimaryExpression	"""???"""		290179	0					
ANR	290206	ReturnType	static const char *		290179	1					
ANR	290207	Identifier	ExtReadWrite_image		290179	2					
ANR	290208	ParameterList	enum ExtReadWrite val		290179	3					
ANR	290209	Parameter	enum ExtReadWrite val	280:38:8728:8748	290179	0	True				
ANR	290210	ParameterType	enum ExtReadWrite		290179	0					
ANR	290211	Identifier	val		290179	1					
ANR	290212	CFGEntryNode	ENTRY		290179		True				
ANR	290213	CFGExitNode	EXIT		290179		True				
ANR	290214	Symbol	val		290179						
ANR	290215	Function	arcExtMap_instName	299:0:9292:11738							
ANR	290216	FunctionDef	"arcExtMap_instName (int opcode , int insn , int * flags)"		290215	0					
ANR	290217	CompoundStatement		301:0:9359:11738	290215	0					
ANR	290218	IdentifierDeclStatement	unsigned char minor ;	316:2:10194:10213	290215	0	True				
ANR	290219	IdentifierDecl	minor		290215	0					
ANR	290220	IdentifierDeclType	unsigned char		290215	0					
ANR	290221	Identifier	minor		290215	1					
ANR	290222	IdentifierDeclStatement	struct ExtInstruction * temp ;	317:2:10217:10244	290215	1	True				
ANR	290223	IdentifierDecl	* temp		290215	0					
ANR	290224	IdentifierDeclType	struct ExtInstruction *		290215	0					
ANR	290225	Identifier	temp		290215	1					
ANR	290226	IfStatement	if ( * flags != E_ARC_MACH_A4 )		290215	2					
ANR	290227	Condition	* flags != E_ARC_MACH_A4	319:6:10253:10275	290215	0	True				
ANR	290228	EqualityExpression	* flags != E_ARC_MACH_A4		290215	0		!=			
ANR	290229	UnaryOperationExpression	* flags		290215	0					
ANR	290230	UnaryOperator	*		290215	0					
ANR	290231	Identifier	flags		290215	1					
ANR	290232	Identifier	E_ARC_MACH_A4		290215	1					
ANR	290233	CompoundStatement		20:4:963:963	290215	1					
ANR	290234	IfStatement	if ( 0x08 <= opcode && opcode <= 0x0b )		290215	0					
ANR	290235	Condition	0x08 <= opcode && opcode <= 0x0b	322:10:10369:10400	290215	0	True				
ANR	290236	AndExpression	0x08 <= opcode && opcode <= 0x0b		290215	0		&&			
ANR	290237	RelationalExpression	0x08 <= opcode		290215	0		<=			
ANR	290238	PrimaryExpression	0x08		290215	0					
ANR	290239	Identifier	opcode		290215	1					
ANR	290240	RelationalExpression	opcode <= 0x0b		290215	1		<=			
ANR	290241	Identifier	opcode		290215	0					
ANR	290242	PrimaryExpression	0x0b		290215	1					
ANR	290243	CompoundStatement		25:3:1079:1109	290215	1					
ANR	290244	IdentifierDeclStatement	"unsigned char b , c , i ;"	325:3:10439:10469	290215	0	True				
ANR	290245	IdentifierDecl	b		290215	0					
ANR	290246	IdentifierDeclType	unsigned char		290215	0					
ANR	290247	Identifier	b		290215	1					
ANR	290248	IdentifierDecl	c		290215	1					
ANR	290249	IdentifierDeclType	unsigned char		290215	0					
ANR	290250	Identifier	c		290215	1					
ANR	290251	IdentifierDecl	i		290215	2					
ANR	290252	IdentifierDeclType	unsigned char		290215	0					
ANR	290253	Identifier	i		290215	1					
ANR	290254	ExpressionStatement	b = ( insn & 0x0700 ) >> 8	328:3:10511:10535	290215	1	True				
ANR	290255	AssignmentExpression	b = ( insn & 0x0700 ) >> 8		290215	0		=			
ANR	290256	Identifier	b		290215	0					
ANR	290257	ShiftExpression	( insn & 0x0700 ) >> 8		290215	1		>>			
ANR	290258	BitAndExpression	insn & 0x0700		290215	0		&			
ANR	290259	Identifier	insn		290215	0					
ANR	290260	PrimaryExpression	0x0700		290215	1					
ANR	290261	PrimaryExpression	8		290215	1					
ANR	290262	ExpressionStatement	c = ( insn & 0x00e0 ) >> 5	329:3:10540:10564	290215	2	True				
ANR	290263	AssignmentExpression	c = ( insn & 0x00e0 ) >> 5		290215	0		=			
ANR	290264	Identifier	c		290215	0					
ANR	290265	ShiftExpression	( insn & 0x00e0 ) >> 5		290215	1		>>			
ANR	290266	BitAndExpression	insn & 0x00e0		290215	0		&			
ANR	290267	Identifier	insn		290215	0					
ANR	290268	PrimaryExpression	0x00e0		290215	1					
ANR	290269	PrimaryExpression	5		290215	1					
ANR	290270	ExpressionStatement	i = ( insn & 0x001f )	330:3:10569:10588	290215	3	True				
ANR	290271	AssignmentExpression	i = ( insn & 0x001f )		290215	0		=			
ANR	290272	Identifier	i		290215	0					
ANR	290273	BitAndExpression	insn & 0x001f		290215	1		&			
ANR	290274	Identifier	insn		290215	0					
ANR	290275	PrimaryExpression	0x001f		290215	1					
ANR	290276	IfStatement	if ( i )		290215	4					
ANR	290277	Condition	i	332:7:10598:10598	290215	0	True				
ANR	290278	Identifier	i		290215	0					
ANR	290279	CompoundStatement		32:10:1241:1241	290215	1					
ANR	290280	ExpressionStatement	minor = i	333:4:10607:10616	290215	0	True				
ANR	290281	AssignmentExpression	minor = i		290215	0		=			
ANR	290282	Identifier	minor		290215	0					
ANR	290283	Identifier	i		290215	1					
ANR	290284	ElseStatement	else		290215	0					
ANR	290285	CompoundStatement		34:10:1268:1268	290215	0					
ANR	290286	ExpressionStatement	minor = ( c == 0x07 ) ? b : c	335:4:10634:10661	290215	0	True				
ANR	290287	AssignmentExpression	minor = ( c == 0x07 ) ? b : c		290215	0		=			
ANR	290288	Identifier	minor		290215	0					
ANR	290289	ConditionalExpression	( c == 0x07 ) ? b : c		290215	1					
ANR	290290	Condition	c == 0x07		290215	0					
ANR	290291	EqualityExpression	c == 0x07		290215	0		==			
ANR	290292	Identifier	c		290215	0					
ANR	290293	PrimaryExpression	0x07		290215	1					
ANR	290294	Identifier	b		290215	1					
ANR	290295	Identifier	c		290215	2					
ANR	290296	ElseStatement	else		290215	0					
ANR	290297	CompoundStatement		42:3:1395:1428	290215	0					
ANR	290298	IdentifierDeclStatement	"unsigned char I , A , B ;"	342:3:10755:10788	290215	0	True				
ANR	290299	IdentifierDecl	I		290215	0					
ANR	290300	IdentifierDeclType	unsigned char		290215	0					
ANR	290301	Identifier	I		290215	1					
ANR	290302	IdentifierDecl	A		290215	1					
ANR	290303	IdentifierDeclType	unsigned char		290215	0					
ANR	290304	Identifier	A		290215	1					
ANR	290305	IdentifierDecl	B		290215	2					
ANR	290306	IdentifierDeclType	unsigned char		290215	0					
ANR	290307	Identifier	B		290215	1					
ANR	290308	ExpressionStatement	I = ( insn & 0x003f0000 ) >> 16	346:3:10868:10897	290215	1	True				
ANR	290309	AssignmentExpression	I = ( insn & 0x003f0000 ) >> 16		290215	0		=			
ANR	290310	Identifier	I		290215	0					
ANR	290311	ShiftExpression	( insn & 0x003f0000 ) >> 16		290215	1		>>			
ANR	290312	BitAndExpression	insn & 0x003f0000		290215	0		&			
ANR	290313	Identifier	insn		290215	0					
ANR	290314	PrimaryExpression	0x003f0000		290215	1					
ANR	290315	PrimaryExpression	16		290215	1					
ANR	290316	ExpressionStatement	A = ( insn & 0x0000003f )	347:3:10902:10925	290215	2	True				
ANR	290317	AssignmentExpression	A = ( insn & 0x0000003f )		290215	0		=			
ANR	290318	Identifier	A		290215	0					
ANR	290319	BitAndExpression	insn & 0x0000003f		290215	1		&			
ANR	290320	Identifier	insn		290215	0					
ANR	290321	PrimaryExpression	0x0000003f		290215	1					
ANR	290322	ExpressionStatement	B = ( ( insn & 0x07000000 ) >> 24 ) | ( ( insn & 0x00007000 ) >> 9 )	348:3:10930:10990	290215	3	True				
ANR	290323	AssignmentExpression	B = ( ( insn & 0x07000000 ) >> 24 ) | ( ( insn & 0x00007000 ) >> 9 )		290215	0		=			
ANR	290324	Identifier	B		290215	0					
ANR	290325	InclusiveOrExpression	( ( insn & 0x07000000 ) >> 24 ) | ( ( insn & 0x00007000 ) >> 9 )		290215	1		|			
ANR	290326	ShiftExpression	( insn & 0x07000000 ) >> 24		290215	0		>>			
ANR	290327	BitAndExpression	insn & 0x07000000		290215	0		&			
ANR	290328	Identifier	insn		290215	0					
ANR	290329	PrimaryExpression	0x07000000		290215	1					
ANR	290330	PrimaryExpression	24		290215	1					
ANR	290331	ShiftExpression	( insn & 0x00007000 ) >> 9		290215	1		>>			
ANR	290332	BitAndExpression	insn & 0x00007000		290215	0		&			
ANR	290333	Identifier	insn		290215	0					
ANR	290334	PrimaryExpression	0x00007000		290215	1					
ANR	290335	PrimaryExpression	9		290215	1					
ANR	290336	IfStatement	if ( I != 0x2f )		290215	4					
ANR	290337	Condition	I != 0x2f	350:7:11000:11008	290215	0	True				
ANR	290338	EqualityExpression	I != 0x2f		290215	0		!=			
ANR	290339	Identifier	I		290215	0					
ANR	290340	PrimaryExpression	0x2f		290215	1					
ANR	290341	CompoundStatement		51:5:1656:1656	290215	1					
ANR	290342	SwitchStatement	switch ( P )		290215	0					
ANR	290343	Condition	P	353:15:11051:11051	290215	0	True				
ANR	290344	Identifier	P		290215	0					
ANR	290345	CompoundStatement		54:2:1696:1696	290215	1					
ANR	290346	Label	case 3 :	355:2:11060:11066	290215	0	True				
ANR	290347	IfStatement	if ( M )		290215	1					
ANR	290348	Condition	M	356:8:11076:11076	290215	0	True				
ANR	290349	Identifier	M		290215	0					
ANR	290350	CompoundStatement		57:6:1725:1725	290215	1					
ANR	290351	ExpressionStatement	minor = I	358:8:11095:11104	290215	0	True				
ANR	290352	AssignmentExpression	minor = I		290215	0		=			
ANR	290353	Identifier	minor		290215	0					
ANR	290354	Identifier	I		290215	1					
ANR	290355	BreakStatement	break ;	359:8:11114:11119	290215	1	True				
ANR	290356	Label	case 0 :	361:2:11131:11137	290215	2	True				
ANR	290357	Label	case 2 :	362:2:11141:11147	290215	3	True				
ANR	290358	ExpressionStatement	minor = ( I >> 1 ) | ( ( I & 0x1 ) << 5 )	363:4:11153:11188	290215	4	True				
ANR	290359	AssignmentExpression	minor = ( I >> 1 ) | ( ( I & 0x1 ) << 5 )		290215	0		=			
ANR	290360	Identifier	minor		290215	0					
ANR	290361	InclusiveOrExpression	( I >> 1 ) | ( ( I & 0x1 ) << 5 )		290215	1		|			
ANR	290362	ShiftExpression	I >> 1		290215	0		>>			
ANR	290363	Identifier	I		290215	0					
ANR	290364	PrimaryExpression	1		290215	1					
ANR	290365	ShiftExpression	( I & 0x1 ) << 5		290215	1		<<			
ANR	290366	BitAndExpression	I & 0x1		290215	0		&			
ANR	290367	Identifier	I		290215	0					
ANR	290368	PrimaryExpression	0x1		290215	1					
ANR	290369	PrimaryExpression	5		290215	1					
ANR	290370	BreakStatement	break ;	364:4:11194:11199	290215	5	True				
ANR	290371	Label	case 1 :	365:2:11203:11209	290215	6	True				
ANR	290372	ExpressionStatement	minor = ( I >> 1 ) | ( I & 0x1 ) | ( ( I & 0x2 ) << 4 )	366:4:11215:11262	290215	7	True				
ANR	290373	AssignmentExpression	minor = ( I >> 1 ) | ( I & 0x1 ) | ( ( I & 0x2 ) << 4 )		290215	0		=			
ANR	290374	Identifier	minor		290215	0					
ANR	290375	InclusiveOrExpression	( I >> 1 ) | ( I & 0x1 ) | ( ( I & 0x2 ) << 4 )		290215	1		|			
ANR	290376	ShiftExpression	I >> 1		290215	0		>>			
ANR	290377	Identifier	I		290215	0					
ANR	290378	PrimaryExpression	1		290215	1					
ANR	290379	InclusiveOrExpression	( I & 0x1 ) | ( ( I & 0x2 ) << 4 )		290215	1		|			
ANR	290380	BitAndExpression	I & 0x1		290215	0		&			
ANR	290381	Identifier	I		290215	0					
ANR	290382	PrimaryExpression	0x1		290215	1					
ANR	290383	ShiftExpression	( I & 0x2 ) << 4		290215	1		<<			
ANR	290384	BitAndExpression	I & 0x2		290215	0		&			
ANR	290385	Identifier	I		290215	0					
ANR	290386	PrimaryExpression	0x2		290215	1					
ANR	290387	PrimaryExpression	4		290215	1					
ANR	290388	ElseStatement	else		290215	0					
ANR	290389	CompoundStatement		73:5:1959:1959	290215	0					
ANR	290390	IfStatement	if ( A != 0x3f )		290215	0					
ANR	290391	Condition	A != 0x3f	374:10:11331:11339	290215	0	True				
ANR	290392	EqualityExpression	A != 0x3f		290215	0		!=			
ANR	290393	Identifier	A		290215	0					
ANR	290394	PrimaryExpression	0x3f		290215	1					
ANR	290395	CompoundStatement		74:21:1982:1982	290215	1					
ANR	290396	ExpressionStatement	minor = A	375:7:11351:11360	290215	0	True				
ANR	290397	AssignmentExpression	minor = A		290215	0		=			
ANR	290398	Identifier	minor		290215	0					
ANR	290399	Identifier	A		290215	1					
ANR	290400	ElseStatement	else		290215	0					
ANR	290401	CompoundStatement		76:13:2015:2015	290215	0					
ANR	290402	ExpressionStatement	minor = B	377:7:11384:11393	290215	0	True				
ANR	290403	AssignmentExpression	minor = B		290215	0		=			
ANR	290404	Identifier	minor		290215	0					
ANR	290405	Identifier	B		290215	1					
ANR	290406	ElseStatement	else		290215	0					
ANR	290407	CompoundStatement		81:9:2062:2062	290215	0					
ANR	290408	ExpressionStatement	minor = insn	382:3:11469:11481	290215	0	True				
ANR	290409	AssignmentExpression	minor = insn		290215	0		=			
ANR	290410	Identifier	minor		290215	0					
ANR	290411	Identifier	insn		290215	1					
ANR	290412	ExpressionStatement	"temp = arc_extension_map . instructions [ INST_HASH ( opcode , minor ) ]"	385:2:11490:11554	290215	3	True				
ANR	290413	AssignmentExpression	"temp = arc_extension_map . instructions [ INST_HASH ( opcode , minor ) ]"		290215	0		=			
ANR	290414	Identifier	temp		290215	0					
ANR	290415	ArrayIndexing	"arc_extension_map . instructions [ INST_HASH ( opcode , minor ) ]"		290215	1					
ANR	290416	MemberAccess	arc_extension_map . instructions		290215	0					
ANR	290417	Identifier	arc_extension_map		290215	0					
ANR	290418	Identifier	instructions		290215	1					
ANR	290419	CallExpression	"INST_HASH ( opcode , minor )"		290215	1					
ANR	290420	Callee	INST_HASH		290215	0					
ANR	290421	Identifier	INST_HASH		290215	0					
ANR	290422	ArgumentList	opcode		290215	1					
ANR	290423	Argument	opcode		290215	0					
ANR	290424	Identifier	opcode		290215	0					
ANR	290425	Argument	minor		290215	1					
ANR	290426	Identifier	minor		290215	0					
ANR	290427	WhileStatement	while ( temp )		290215	4					
ANR	290428	Condition	temp	386:9:11565:11568	290215	0	True				
ANR	290429	Identifier	temp		290215	0					
ANR	290430	CompoundStatement		87:4:2215:2215	290215	1					
ANR	290431	IfStatement	if ( ( temp -> major == opcode ) && ( temp -> minor == minor ) )		290215	0					
ANR	290432	Condition	( temp -> major == opcode ) && ( temp -> minor == minor )	388:10:11587:11635	290215	0	True				
ANR	290433	AndExpression	( temp -> major == opcode ) && ( temp -> minor == minor )		290215	0		&&			
ANR	290434	EqualityExpression	temp -> major == opcode		290215	0		==			
ANR	290435	PtrMemberAccess	temp -> major		290215	0					
ANR	290436	Identifier	temp		290215	0					
ANR	290437	Identifier	major		290215	1					
ANR	290438	Identifier	opcode		290215	1					
ANR	290439	EqualityExpression	temp -> minor == minor		290215	1		==			
ANR	290440	PtrMemberAccess	temp -> minor		290215	0					
ANR	290441	Identifier	temp		290215	0					
ANR	290442	Identifier	minor		290215	1					
ANR	290443	Identifier	minor		290215	1					
ANR	290444	CompoundStatement		89:1:2279:2279	290215	1					
ANR	290445	ExpressionStatement	* flags = temp -> flags	390:3:11644:11664	290215	0	True				
ANR	290446	AssignmentExpression	* flags = temp -> flags		290215	0		=			
ANR	290447	UnaryOperationExpression	* flags		290215	0					
ANR	290448	UnaryOperator	*		290215	0					
ANR	290449	Identifier	flags		290215	1					
ANR	290450	PtrMemberAccess	temp -> flags		290215	1					
ANR	290451	Identifier	temp		290215	0					
ANR	290452	Identifier	flags		290215	1					
ANR	290453	ReturnStatement	return temp -> name ;	391:3:11669:11686	290215	1	True				
ANR	290454	PtrMemberAccess	temp -> name		290215	0					
ANR	290455	Identifier	temp		290215	0					
ANR	290456	Identifier	name		290215	1					
ANR	290457	ExpressionStatement	temp = temp -> next	393:6:11697:11714	290215	1	True				
ANR	290458	AssignmentExpression	temp = temp -> next		290215	0		=			
ANR	290459	Identifier	temp		290215	0					
ANR	290460	PtrMemberAccess	temp -> next		290215	1					
ANR	290461	Identifier	temp		290215	0					
ANR	290462	Identifier	next		290215	1					
ANR	290463	ReturnStatement	return NULL ;	396:2:11725:11736	290215	5	True				
ANR	290464	Identifier	NULL		290215	0					
ANR	290465	ReturnType	const char *		290215	1					
ANR	290466	Identifier	arcExtMap_instName		290215	2					
ANR	290467	ParameterList	"int opcode , int insn , int * flags"		290215	3					
ANR	290468	Parameter	int opcode	300:20:9325:9334	290215	0	True				
ANR	290469	ParameterType	int		290215	0					
ANR	290470	Identifier	opcode		290215	1					
ANR	290471	Parameter	int insn	300:32:9337:9344	290215	1	True				
ANR	290472	ParameterType	int		290215	0					
ANR	290473	Identifier	insn		290215	1					
ANR	290474	Parameter	int * flags	300:42:9347:9356	290215	2	True				
ANR	290475	ParameterType	int *		290215	0					
ANR	290476	Identifier	flags		290215	1					
ANR	290477	CFGEntryNode	ENTRY		290215		True				
ANR	290478	CFGExitNode	EXIT		290215		True				
ANR	290479	Symbol	A		290215						
ANR	290480	Symbol	B		290215						
ANR	290481	Symbol	arc_extension_map		290215						
ANR	290482	Symbol	minor		290215						
ANR	290483	Symbol	flags		290215						
ANR	290484	Symbol	I		290215						
ANR	290485	Symbol	opcode		290215						
ANR	290486	Symbol	M		290215						
ANR	290487	Symbol	P		290215						
ANR	290488	Symbol	E_ARC_MACH_A4		290215						
ANR	290489	Symbol	* arc_extension_map . instructions		290215						
ANR	290490	Symbol	* INST_HASH		290215						
ANR	290491	Symbol	temp -> name		290215						
ANR	290492	Symbol	INST_HASH		290215						
ANR	290493	Symbol	* flags		290215						
ANR	290494	Symbol	temp		290215						
ANR	290495	Symbol	b		290215						
ANR	290496	Symbol	temp -> flags		290215						
ANR	290497	Symbol	c		290215						
ANR	290498	Symbol	NULL		290215						
ANR	290499	Symbol	* arc_extension_map		290215						
ANR	290500	Symbol	temp -> next		290215						
ANR	290501	Symbol	i		290215						
ANR	290502	Symbol	* temp		290215						
ANR	290503	Symbol	insn		290215						
ANR	290504	Symbol	arc_extension_map . instructions		290215						
ANR	290505	Symbol	temp -> major		290215						
ANR	290506	Symbol	temp -> minor		290215						
ANR	290507	Function	arcExtMap_coreRegName	401:0:11791:12033							
ANR	290508	FunctionDef	arcExtMap_coreRegName (int regnum)		290507	0					
ANR	290509	CompoundStatement		403:0:11839:12033	290507	0					
ANR	290510	IfStatement	if ( regnum < FIRST_EXTENSION_CORE_REGISTER || regnum > LAST_EXTENSION_CORE_REGISTER )		290507	0					
ANR	290511	Condition	regnum < FIRST_EXTENSION_CORE_REGISTER || regnum > LAST_EXTENSION_CORE_REGISTER	404:5:11846:11924	290507	0	True				
ANR	290512	OrExpression	regnum < FIRST_EXTENSION_CORE_REGISTER || regnum > LAST_EXTENSION_CORE_REGISTER		290507	0		||			
ANR	290513	RelationalExpression	regnum < FIRST_EXTENSION_CORE_REGISTER		290507	0		<			
ANR	290514	Identifier	regnum		290507	0					
ANR	290515	Identifier	FIRST_EXTENSION_CORE_REGISTER		290507	1					
ANR	290516	RelationalExpression	regnum > LAST_EXTENSION_CORE_REGISTER		290507	1		>			
ANR	290517	Identifier	regnum		290507	0					
ANR	290518	Identifier	LAST_EXTENSION_CORE_REGISTER		290507	1					
ANR	290519	CompoundStatement		2:86:87:87	290507	1					
ANR	290520	ReturnStatement	return NULL ;	405:2:11931:11942	290507	0	True				
ANR	290521	Identifier	NULL		290507	0					
ANR	290522	ReturnStatement	return arc_extension_map . coreRegisters [ regnum - FIRST_EXTENSION_CORE_REGISTER ] . name ;	407:1:11948:12031	290507	1	True				
ANR	290523	MemberAccess	arc_extension_map . coreRegisters [ regnum - FIRST_EXTENSION_CORE_REGISTER ] . name		290507	0					
ANR	290524	ArrayIndexing	arc_extension_map . coreRegisters [ regnum - FIRST_EXTENSION_CORE_REGISTER ]		290507	0					
ANR	290525	MemberAccess	arc_extension_map . coreRegisters		290507	0					
ANR	290526	Identifier	arc_extension_map		290507	0					
ANR	290527	Identifier	coreRegisters		290507	1					
ANR	290528	AdditiveExpression	regnum - FIRST_EXTENSION_CORE_REGISTER		290507	1		-			
ANR	290529	Identifier	regnum		290507	0					
ANR	290530	Identifier	FIRST_EXTENSION_CORE_REGISTER		290507	1					
ANR	290531	Identifier	name		290507	1					
ANR	290532	ReturnType	const char *		290507	1					
ANR	290533	Identifier	arcExtMap_coreRegName		290507	2					
ANR	290534	ParameterList	int regnum		290507	3					
ANR	290535	Parameter	int regnum	402:23:11827:11836	290507	0	True				
ANR	290536	ParameterType	int		290507	0					
ANR	290537	Identifier	regnum		290507	1					
ANR	290538	CFGEntryNode	ENTRY		290507		True				
ANR	290539	CFGExitNode	EXIT		290507		True				
ANR	290540	Symbol	FIRST_EXTENSION_CORE_REGISTER		290507						
ANR	290541	Symbol	arc_extension_map		290507						
ANR	290542	Symbol	* arc_extension_map . coreRegisters		290507						
ANR	290543	Symbol	NULL		290507						
ANR	290544	Symbol	* FIRST_EXTENSION_CORE_REGISTER		290507						
ANR	290545	Symbol	* arc_extension_map		290507						
ANR	290546	Symbol	LAST_EXTENSION_CORE_REGISTER		290507						
ANR	290547	Symbol	* regnum		290507						
ANR	290548	Symbol	regnum		290507						
ANR	290549	Symbol	arc_extension_map . coreRegisters		290507						
ANR	290550	Symbol	arc_extension_map . coreRegisters [ regnum - FIRST_EXTENSION_CORE_REGISTER ] . name		290507						
ANR	290551	Function	arcExtMap_coreReadWrite	412:0:12093:12347							
ANR	290552	FunctionDef	arcExtMap_coreReadWrite (int regnum)		290551	0					
ANR	290553	CompoundStatement		414:0:12148:12347	290551	0					
ANR	290554	IfStatement	if ( regnum < FIRST_EXTENSION_CORE_REGISTER || regnum > LAST_EXTENSION_CORE_REGISTER )		290551	0					
ANR	290555	Condition	regnum < FIRST_EXTENSION_CORE_REGISTER || regnum > LAST_EXTENSION_CORE_REGISTER	415:5:12155:12233	290551	0	True				
ANR	290556	OrExpression	regnum < FIRST_EXTENSION_CORE_REGISTER || regnum > LAST_EXTENSION_CORE_REGISTER		290551	0		||			
ANR	290557	RelationalExpression	regnum < FIRST_EXTENSION_CORE_REGISTER		290551	0		<			
ANR	290558	Identifier	regnum		290551	0					
ANR	290559	Identifier	FIRST_EXTENSION_CORE_REGISTER		290551	1					
ANR	290560	RelationalExpression	regnum > LAST_EXTENSION_CORE_REGISTER		290551	1		>			
ANR	290561	Identifier	regnum		290551	0					
ANR	290562	Identifier	LAST_EXTENSION_CORE_REGISTER		290551	1					
ANR	290563	CompoundStatement		2:86:87:87	290551	1					
ANR	290564	ReturnStatement	return REG_INVALID ;	416:2:12240:12258	290551	0	True				
ANR	290565	Identifier	REG_INVALID		290551	0					
ANR	290566	ReturnStatement	return arc_extension_map . coreRegisters [ regnum - FIRST_EXTENSION_CORE_REGISTER ] . rw ;	418:1:12264:12345	290551	1	True				
ANR	290567	MemberAccess	arc_extension_map . coreRegisters [ regnum - FIRST_EXTENSION_CORE_REGISTER ] . rw		290551	0					
ANR	290568	ArrayIndexing	arc_extension_map . coreRegisters [ regnum - FIRST_EXTENSION_CORE_REGISTER ]		290551	0					
ANR	290569	MemberAccess	arc_extension_map . coreRegisters		290551	0					
ANR	290570	Identifier	arc_extension_map		290551	0					
ANR	290571	Identifier	coreRegisters		290551	1					
ANR	290572	AdditiveExpression	regnum - FIRST_EXTENSION_CORE_REGISTER		290551	1		-			
ANR	290573	Identifier	regnum		290551	0					
ANR	290574	Identifier	FIRST_EXTENSION_CORE_REGISTER		290551	1					
ANR	290575	Identifier	rw		290551	1					
ANR	290576	ReturnType	enum ExtReadWrite		290551	1					
ANR	290577	Identifier	arcExtMap_coreReadWrite		290551	2					
ANR	290578	ParameterList	int regnum		290551	3					
ANR	290579	Parameter	int regnum	413:25:12136:12145	290551	0	True				
ANR	290580	ParameterType	int		290551	0					
ANR	290581	Identifier	regnum		290551	1					
ANR	290582	CFGEntryNode	ENTRY		290551		True				
ANR	290583	CFGExitNode	EXIT		290551		True				
ANR	290584	Symbol	FIRST_EXTENSION_CORE_REGISTER		290551						
ANR	290585	Symbol	arc_extension_map		290551						
ANR	290586	Symbol	* arc_extension_map . coreRegisters		290551						
ANR	290587	Symbol	* FIRST_EXTENSION_CORE_REGISTER		290551						
ANR	290588	Symbol	* arc_extension_map		290551						
ANR	290589	Symbol	LAST_EXTENSION_CORE_REGISTER		290551						
ANR	290590	Symbol	arc_extension_map . coreRegisters [ regnum - FIRST_EXTENSION_CORE_REGISTER ] . rw		290551						
ANR	290591	Symbol	* regnum		290551						
ANR	290592	Symbol	regnum		290551						
ANR	290593	Symbol	arc_extension_map . coreRegisters		290551						
ANR	290594	Symbol	REG_INVALID		290551						
ANR	290595	Function	arcExtMap_condCodeName	423:0:12401:12630							
ANR	290596	FunctionDef	arcExtMap_condCodeName (int code)		290595	0					
ANR	290597	CompoundStatement		425:0:12448:12630	290595	0					
ANR	290598	IfStatement	if ( code < FIRST_EXTENSION_CONDITION_CODE || code > LAST_EXTENSION_CONDITION_CODE )		290595	0					
ANR	290599	Condition	code < FIRST_EXTENSION_CONDITION_CODE || code > LAST_EXTENSION_CONDITION_CODE	426:5:12455:12531	290595	0	True				
ANR	290600	OrExpression	code < FIRST_EXTENSION_CONDITION_CODE || code > LAST_EXTENSION_CONDITION_CODE		290595	0		||			
ANR	290601	RelationalExpression	code < FIRST_EXTENSION_CONDITION_CODE		290595	0		<			
ANR	290602	Identifier	code		290595	0					
ANR	290603	Identifier	FIRST_EXTENSION_CONDITION_CODE		290595	1					
ANR	290604	RelationalExpression	code > LAST_EXTENSION_CONDITION_CODE		290595	1		>			
ANR	290605	Identifier	code		290595	0					
ANR	290606	Identifier	LAST_EXTENSION_CONDITION_CODE		290595	1					
ANR	290607	CompoundStatement		2:84:85:85	290595	1					
ANR	290608	ReturnStatement	return NULL ;	427:2:12538:12549	290595	0	True				
ANR	290609	Identifier	NULL		290595	0					
ANR	290610	ReturnStatement	return arc_extension_map . condCodes [ code - FIRST_EXTENSION_CONDITION_CODE ] ;	429:1:12555:12628	290595	1	True				
ANR	290611	ArrayIndexing	arc_extension_map . condCodes [ code - FIRST_EXTENSION_CONDITION_CODE ]		290595	0					
ANR	290612	MemberAccess	arc_extension_map . condCodes		290595	0					
ANR	290613	Identifier	arc_extension_map		290595	0					
ANR	290614	Identifier	condCodes		290595	1					
ANR	290615	AdditiveExpression	code - FIRST_EXTENSION_CONDITION_CODE		290595	1		-			
ANR	290616	Identifier	code		290595	0					
ANR	290617	Identifier	FIRST_EXTENSION_CONDITION_CODE		290595	1					
ANR	290618	ReturnType	const char *		290595	1					
ANR	290619	Identifier	arcExtMap_condCodeName		290595	2					
ANR	290620	ParameterList	int code		290595	3					
ANR	290621	Parameter	int code	424:24:12438:12445	290595	0	True				
ANR	290622	ParameterType	int		290595	0					
ANR	290623	Identifier	code		290595	1					
ANR	290624	CFGEntryNode	ENTRY		290595		True				
ANR	290625	CFGExitNode	EXIT		290595		True				
ANR	290626	Symbol	arc_extension_map . condCodes		290595						
ANR	290627	Symbol	FIRST_EXTENSION_CONDITION_CODE		290595						
ANR	290628	Symbol	arc_extension_map		290595						
ANR	290629	Symbol	code		290595						
ANR	290630	Symbol	LAST_EXTENSION_CONDITION_CODE		290595						
ANR	290631	Symbol	NULL		290595						
ANR	290632	Symbol	* FIRST_EXTENSION_CONDITION_CODE		290595						
ANR	290633	Symbol	* arc_extension_map		290595						
ANR	290634	Symbol	* arc_extension_map . condCodes		290595						
ANR	290635	Symbol	* code		290595						
ANR	290636	Function	arcExtMap_auxRegName	434:0:12690:12997							
ANR	290637	FunctionDef	arcExtMap_auxRegName (long address)		290636	0					
ANR	290638	CompoundStatement		436:0:12739:12997	290636	0					
ANR	290639	IdentifierDeclStatement	struct ExtAuxRegister * r ;	438:2:12813:12837	290636	0	True				
ANR	290640	IdentifierDecl	* r		290636	0					
ANR	290641	IdentifierDeclType	struct ExtAuxRegister *		290636	0					
ANR	290642	Identifier	r		290636	1					
ANR	290643	ForStatement	for ( r = arc_extension_map . auxRegisters ; r ; r = r -> next )		290636	1					
ANR	290644	ForInit	r = arc_extension_map . auxRegisters ;	440:7:12847:12881	290636	0	True				
ANR	290645	AssignmentExpression	r = arc_extension_map . auxRegisters		290636	0		=			
ANR	290646	Identifier	r		290636	0					
ANR	290647	MemberAccess	arc_extension_map . auxRegisters		290636	1					
ANR	290648	Identifier	arc_extension_map		290636	0					
ANR	290649	Identifier	auxRegisters		290636	1					
ANR	290650	Condition	r	440:43:12883:12883	290636	1	True				
ANR	290651	Identifier	r		290636	0					
ANR	290652	AssignmentExpression	r = r -> next	440:46:12886:12896	290636	2	True	=			
ANR	290653	Identifier	r		290636	0					
ANR	290654	PtrMemberAccess	r -> next		290636	1					
ANR	290655	Identifier	r		290636	0					
ANR	290656	Identifier	next		290636	1					
ANR	290657	CompoundStatement		6:4:163:163	290636	3					
ANR	290658	IfStatement	if ( r -> address == address )		290636	0					
ANR	290659	Condition	r -> address == address	442:7:12912:12932	290636	0	True				
ANR	290660	EqualityExpression	r -> address == address		290636	0		==			
ANR	290661	PtrMemberAccess	r -> address		290636	0					
ANR	290662	Identifier	r		290636	0					
ANR	290663	Identifier	address		290636	1					
ANR	290664	Identifier	address		290636	1					
ANR	290665	CompoundStatement		7:30:195:195	290636	1					
ANR	290666	ReturnStatement	return ( const char * ) r -> name ;	443:4:12941:12969	290636	0	True				
ANR	290667	CastExpression	( const char * ) r -> name		290636	0					
ANR	290668	CastTarget	const char *		290636	0					
ANR	290669	PtrMemberAccess	r -> name		290636	1					
ANR	290670	Identifier	r		290636	0					
ANR	290671	Identifier	name		290636	1					
ANR	290672	ReturnStatement	return NULL ;	446:2:12984:12995	290636	2	True				
ANR	290673	Identifier	NULL		290636	0					
ANR	290674	ReturnType	const char *		290636	1					
ANR	290675	Identifier	arcExtMap_auxRegName		290636	2					
ANR	290676	ParameterList	long address		290636	3					
ANR	290677	Parameter	long address	435:22:12725:12736	290636	0	True				
ANR	290678	ParameterType	long		290636	0					
ANR	290679	Identifier	address		290636	1					
ANR	290680	CFGEntryNode	ENTRY		290636		True				
ANR	290681	CFGExitNode	EXIT		290636		True				
ANR	290682	Symbol	r		290636						
ANR	290683	Symbol	arc_extension_map		290636						
ANR	290684	Symbol	address		290636						
ANR	290685	Symbol	NULL		290636						
ANR	290686	Symbol	r -> name		290636						
ANR	290687	Symbol	r -> address		290636						
ANR	290688	Symbol	* r		290636						
ANR	290689	Symbol	arc_extension_map . auxRegisters		290636						
ANR	290690	Symbol	r -> next		290636						
ANR	290691	Function	build_ARC_extmap	452:0:13094:13900							
ANR	290692	FunctionDef	build_ARC_extmap (void * text_bfd)		290691	0					
ANR	290693	CompoundStatement		454:0:13133:13900	290691	0					
ANR	290694	IdentifierDeclStatement	asection * sect ;	456:2:13143:13157	290691	0	True				
ANR	290695	IdentifierDecl	* sect		290691	0					
ANR	290696	IdentifierDeclType	asection *		290691	0					
ANR	290697	Identifier	sect		290691	1					
ANR	290698	ExpressionStatement	destroy_map ( )	461:2:13321:13334	290691	1	True				
ANR	290699	CallExpression	destroy_map ( )		290691	0					
ANR	290700	Callee	destroy_map		290691	0					
ANR	290701	Identifier	destroy_map		290691	0					
ANR	290702	ArgumentList			290691	1					
ANR	290703	ForStatement	for ( sect = text_bfd -> sections ; sect != NULL ; sect = sect -> next )		290691	2					
ANR	290704	ForInit	sect = text_bfd -> sections ;	463:7:13344:13369	290691	0	True				
ANR	290705	AssignmentExpression	sect = text_bfd -> sections		290691	0		=			
ANR	290706	Identifier	sect		290691	0					
ANR	290707	PtrMemberAccess	text_bfd -> sections		290691	1					
ANR	290708	Identifier	text_bfd		290691	0					
ANR	290709	Identifier	sections		290691	1					
ANR	290710	Condition	sect != NULL	463:34:13371:13382	290691	1	True				
ANR	290711	EqualityExpression	sect != NULL		290691	0		!=			
ANR	290712	Identifier	sect		290691	0					
ANR	290713	Identifier	NULL		290691	1					
ANR	290714	AssignmentExpression	sect = sect -> next	463:48:13385:13401	290691	2	True	=			
ANR	290715	Identifier	sect		290691	0					
ANR	290716	PtrMemberAccess	sect -> next		290691	1					
ANR	290717	Identifier	sect		290691	0					
ANR	290718	Identifier	next		290691	1					
ANR	290719	IfStatement	"if ( ! strncmp ( sect -> name , "".gnu.linkonce.arcextmap."" , sizeof ( "".gnu.linkonce.arcextmap."" ) - 1 ) || ! strcmp ( sect -> name , "".arcextmap"" ) )"		290691	3					
ANR	290720	Condition	"! strncmp ( sect -> name , "".gnu.linkonce.arcextmap."" , sizeof ( "".gnu.linkonce.arcextmap."" ) - 1 ) || ! strcmp ( sect -> name , "".arcextmap"" )"	464:8:13412:13574	290691	0	True				
ANR	290721	OrExpression	"! strncmp ( sect -> name , "".gnu.linkonce.arcextmap."" , sizeof ( "".gnu.linkonce.arcextmap."" ) - 1 ) || ! strcmp ( sect -> name , "".arcextmap"" )"		290691	0		||			
ANR	290722	UnaryOperationExpression	"! strncmp ( sect -> name , "".gnu.linkonce.arcextmap."" , sizeof ( "".gnu.linkonce.arcextmap."" ) - 1 )"		290691	0					
ANR	290723	UnaryOperator	!		290691	0					
ANR	290724	CallExpression	"strncmp ( sect -> name , "".gnu.linkonce.arcextmap."" , sizeof ( "".gnu.linkonce.arcextmap."" ) - 1 )"		290691	1					
ANR	290725	Callee	strncmp		290691	0					
ANR	290726	Identifier	strncmp		290691	0					
ANR	290727	ArgumentList	sect -> name		290691	1					
ANR	290728	Argument	sect -> name		290691	0					
ANR	290729	PtrMemberAccess	sect -> name		290691	0					
ANR	290730	Identifier	sect		290691	0					
ANR	290731	Identifier	name		290691	1					
ANR	290732	Argument	""".gnu.linkonce.arcextmap."""		290691	1					
ANR	290733	PrimaryExpression	""".gnu.linkonce.arcextmap."""		290691	0					
ANR	290734	Argument	"sizeof ( "".gnu.linkonce.arcextmap."" ) - 1"		290691	2					
ANR	290735	AdditiveExpression	"sizeof ( "".gnu.linkonce.arcextmap."" ) - 1"		290691	0		-			
ANR	290736	SizeofExpression	"sizeof ( "".gnu.linkonce.arcextmap."" )"		290691	0					
ANR	290737	Sizeof	sizeof		290691	0					
ANR	290738	PrimaryExpression	""".gnu.linkonce.arcextmap."""		290691	1					
ANR	290739	PrimaryExpression	1		290691	1					
ANR	290740	UnaryOperationExpression	"! strcmp ( sect -> name , "".arcextmap"" )"		290691	1					
ANR	290741	UnaryOperator	!		290691	0					
ANR	290742	CallExpression	"strcmp ( sect -> name , "".arcextmap"" )"		290691	1					
ANR	290743	Callee	strcmp		290691	0					
ANR	290744	Identifier	strcmp		290691	0					
ANR	290745	ArgumentList	sect -> name		290691	1					
ANR	290746	Argument	sect -> name		290691	0					
ANR	290747	PtrMemberAccess	sect -> name		290691	0					
ANR	290748	Identifier	sect		290691	0					
ANR	290749	Identifier	name		290691	1					
ANR	290750	Argument	""".arcextmap"""		290691	1					
ANR	290751	PrimaryExpression	""".arcextmap"""		290691	0					
ANR	290752	CompoundStatement		17:8:520:559	290691	1					
ANR	290753	IdentifierDeclStatement	bfd_size_type count = bfd_get_section_size ( sect ) ;	469:8:13593:13644	290691	0	True				
ANR	290754	IdentifierDecl	count = bfd_get_section_size ( sect )		290691	0					
ANR	290755	IdentifierDeclType	bfd_size_type		290691	0					
ANR	290756	Identifier	count		290691	1					
ANR	290757	AssignmentExpression	count = bfd_get_section_size ( sect )		290691	2		=			
ANR	290758	Identifier	count		290691	0					
ANR	290759	CallExpression	bfd_get_section_size ( sect )		290691	1					
ANR	290760	Callee	bfd_get_section_size		290691	0					
ANR	290761	Identifier	bfd_get_section_size		290691	0					
ANR	290762	ArgumentList	sect		290691	1					
ANR	290763	Argument	sect		290691	0					
ANR	290764	Identifier	sect		290691	0					
ANR	290765	IdentifierDeclStatement	unsigned char * buffer = xmalloc ( count ) ;	470:8:13654:13693	290691	1	True				
ANR	290766	IdentifierDecl	* buffer = xmalloc ( count )		290691	0					
ANR	290767	IdentifierDeclType	unsigned char *		290691	0					
ANR	290768	Identifier	buffer		290691	1					
ANR	290769	AssignmentExpression	* buffer = xmalloc ( count )		290691	2		=			
ANR	290770	Identifier	buffer		290691	0					
ANR	290771	CallExpression	xmalloc ( count )		290691	1					
ANR	290772	Callee	xmalloc		290691	0					
ANR	290773	Identifier	xmalloc		290691	0					
ANR	290774	ArgumentList	count		290691	1					
ANR	290775	Argument	count		290691	0					
ANR	290776	Identifier	count		290691	0					
ANR	290777	IfStatement	if ( buffer )		290691	2					
ANR	290778	Condition	buffer	472:12:13708:13713	290691	0	True				
ANR	290779	Identifier	buffer		290691	0					
ANR	290780	CompoundStatement		20:10:592:592	290691	1					
ANR	290781	IfStatement	"if ( bfd_get_section_contents ( text_bfd , sect , buffer , 0 , count ) )"		290691	0					
ANR	290782	Condition	"bfd_get_section_contents ( text_bfd , sect , buffer , 0 , count )"	474:16:13744:13802	290691	0	True				
ANR	290783	CallExpression	"bfd_get_section_contents ( text_bfd , sect , buffer , 0 , count )"		290691	0					
ANR	290784	Callee	bfd_get_section_contents		290691	0					
ANR	290785	Identifier	bfd_get_section_contents		290691	0					
ANR	290786	ArgumentList	text_bfd		290691	1					
ANR	290787	Argument	text_bfd		290691	0					
ANR	290788	Identifier	text_bfd		290691	0					
ANR	290789	Argument	sect		290691	1					
ANR	290790	Identifier	sect		290691	0					
ANR	290791	Argument	buffer		290691	2					
ANR	290792	Identifier	buffer		290691	0					
ANR	290793	Argument	0		290691	3					
ANR	290794	PrimaryExpression	0		290691	0					
ANR	290795	Argument	count		290691	4					
ANR	290796	Identifier	count		290691	0					
ANR	290797	ExpressionStatement	"create_map ( buffer , count )"	475:14:13819:13844	290691	1	True				
ANR	290798	CallExpression	"create_map ( buffer , count )"		290691	0					
ANR	290799	Callee	create_map		290691	0					
ANR	290800	Identifier	create_map		290691	0					
ANR	290801	ArgumentList	buffer		290691	1					
ANR	290802	Argument	buffer		290691	0					
ANR	290803	Identifier	buffer		290691	0					
ANR	290804	Argument	count		290691	1					
ANR	290805	Identifier	count		290691	0					
ANR	290806	ExpressionStatement	free ( buffer )	476:12:13858:13871	290691	1	True				
ANR	290807	CallExpression	free ( buffer )		290691	0					
ANR	290808	Callee	free		290691	0					
ANR	290809	Identifier	free		290691	0					
ANR	290810	ArgumentList	buffer		290691	1					
ANR	290811	Argument	buffer		290691	0					
ANR	290812	Identifier	buffer		290691	0					
ANR	290813	ReturnType	void		290691	1					
ANR	290814	Identifier	build_ARC_extmap		290691	2					
ANR	290815	ParameterList	void * text_bfd		290691	3					
ANR	290816	Parameter	void * text_bfd	453:18:13117:13130	290691	0	True				
ANR	290817	ParameterType	void *		290691	0					
ANR	290818	Identifier	text_bfd		290691	1					
ANR	290819	CFGEntryNode	ENTRY		290691		True				
ANR	290820	CFGExitNode	EXIT		290691		True				
ANR	290821	Symbol	strcmp		290691						
ANR	290822	Symbol	bfd_get_section_size		290691						
ANR	290823	Symbol	NULL		290691						
ANR	290824	Symbol	bfd_get_section_contents		290691						
ANR	290825	Symbol	count		290691						
ANR	290826	Symbol	* text_bfd		290691						
ANR	290827	Symbol	sect -> name		290691						
ANR	290828	Symbol	strncmp		290691						
ANR	290829	Symbol	sect -> next		290691						
ANR	290830	Symbol	xmalloc		290691						
ANR	290831	Symbol	sect		290691						
ANR	290832	Symbol	buffer		290691						
ANR	290833	Symbol	text_bfd		290691						
ANR	290834	Symbol	* sect		290691						
ANR	290835	Symbol	text_bfd -> sections		290691						
ANR	290836	Function	dump_ARC_extmap	483:0:13904:14788							
ANR	290837	FunctionDef	dump_ARC_extmap ()		290836	0					
ANR	290838	CompoundStatement		484:0:13932:14788	290836	0					
ANR	290839	IdentifierDeclStatement	struct ExtAuxRegister * r ;	485:4:13938:13962	290836	0	True				
ANR	290840	IdentifierDecl	* r		290836	0					
ANR	290841	IdentifierDeclType	struct ExtAuxRegister *		290836	0					
ANR	290842	Identifier	r		290836	1					
ANR	290843	IdentifierDeclStatement	int i ;	486:4:13968:13992	290836	1	True				
ANR	290844	IdentifierDecl	i		290836	0					
ANR	290845	IdentifierDeclType	int		290836	0					
ANR	290846	Identifier	i		290836	1					
ANR	290847	ExpressionStatement	r = arc_extension_map . auxRegisters	488:4:13999:14033	290836	2	True				
ANR	290848	AssignmentExpression	r = arc_extension_map . auxRegisters		290836	0		=			
ANR	290849	Identifier	r		290836	0					
ANR	290850	MemberAccess	arc_extension_map . auxRegisters		290836	1					
ANR	290851	Identifier	arc_extension_map		290836	0					
ANR	290852	Identifier	auxRegisters		290836	1					
ANR	290853	WhileStatement	while ( r )		290836	3					
ANR	290854	Condition	r	490:11:14047:14047	290836	0	True				
ANR	290855	Identifier	r		290836	0					
ANR	290856	CompoundStatement		8:4:121:121	290836	1					
ANR	290857	ExpressionStatement	"printf ( ""AUX : %s %ld\\n"" , r -> name , r -> address )"	492:8:14064:14109	290836	0	True				
ANR	290858	CallExpression	"printf ( ""AUX : %s %ld\\n"" , r -> name , r -> address )"		290836	0					
ANR	290859	Callee	printf		290836	0					
ANR	290860	Identifier	printf		290836	0					
ANR	290861	ArgumentList	"""AUX : %s %ld\\n"""		290836	1					
ANR	290862	Argument	"""AUX : %s %ld\\n"""		290836	0					
ANR	290863	PrimaryExpression	"""AUX : %s %ld\\n"""		290836	0					
ANR	290864	Argument	r -> name		290836	1					
ANR	290865	PtrMemberAccess	r -> name		290836	0					
ANR	290866	Identifier	r		290836	0					
ANR	290867	Identifier	name		290836	1					
ANR	290868	Argument	r -> address		290836	2					
ANR	290869	PtrMemberAccess	r -> address		290836	0					
ANR	290870	Identifier	r		290836	0					
ANR	290871	Identifier	address		290836	1					
ANR	290872	ExpressionStatement	r = r -> next	493:8:14119:14130	290836	1	True				
ANR	290873	AssignmentExpression	r = r -> next		290836	0		=			
ANR	290874	Identifier	r		290836	0					
ANR	290875	PtrMemberAccess	r -> next		290836	1					
ANR	290876	Identifier	r		290836	0					
ANR	290877	Identifier	next		290836	1					
ANR	290878	ForStatement	for ( i = 0 ; i < INST_HASH_SIZE ; i ++ )		290836	4					
ANR	290879	ForInit	i = 0 ;	496:9:14148:14153	290836	0	True				
ANR	290880	AssignmentExpression	i = 0		290836	0		=			
ANR	290881	Identifier	i		290836	0					
ANR	290882	PrimaryExpression	0		290836	1					
ANR	290883	Condition	i < INST_HASH_SIZE	496:16:14155:14172	290836	1	True				
ANR	290884	RelationalExpression	i < INST_HASH_SIZE		290836	0		<			
ANR	290885	Identifier	i		290836	0					
ANR	290886	Identifier	INST_HASH_SIZE		290836	1					
ANR	290887	PostIncDecOperationExpression	i ++	496:36:14175:14177	290836	2	True				
ANR	290888	Identifier	i		290836	0					
ANR	290889	IncDec	++		290836	1					
ANR	290890	CompoundStatement		15:8:261:288	290836	3					
ANR	290891	IdentifierDeclStatement	struct ExtInstruction * insn ;	498:8:14194:14221	290836	0	True				
ANR	290892	IdentifierDecl	* insn		290836	0					
ANR	290893	IdentifierDeclType	struct ExtInstruction *		290836	0					
ANR	290894	Identifier	insn		290836	1					
ANR	290895	ForStatement	for ( insn = arc_extension_map . instructions [ i ] ; insn != NULL ; insn = insn -> next )		290836	1					
ANR	290896	ForInit	insn = arc_extension_map . instructions [ i ] ;	500:6:14230:14270	290836	0	True				
ANR	290897	AssignmentExpression	insn = arc_extension_map . instructions [ i ]		290836	0		=			
ANR	290898	Identifier	insn		290836	0					
ANR	290899	ArrayIndexing	arc_extension_map . instructions [ i ]		290836	1					
ANR	290900	MemberAccess	arc_extension_map . instructions		290836	0					
ANR	290901	Identifier	arc_extension_map		290836	0					
ANR	290902	Identifier	instructions		290836	1					
ANR	290903	Identifier	i		290836	1					
ANR	290904	Condition	insn != NULL	500:48:14272:14283	290836	1	True				
ANR	290905	EqualityExpression	insn != NULL		290836	0		!=			
ANR	290906	Identifier	insn		290836	0					
ANR	290907	Identifier	NULL		290836	1					
ANR	290908	AssignmentExpression	insn = insn -> next	500:62:14286:14302	290836	2	True	=			
ANR	290909	Identifier	insn		290836	0					
ANR	290910	PtrMemberAccess	insn -> next		290836	1					
ANR	290911	Identifier	insn		290836	0					
ANR	290912	Identifier	next		290836	1					
ANR	290913	CompoundStatement		17:81:372:372	290836	3					
ANR	290914	ExpressionStatement	"printf ( ""INST: %d %d %x %s\\n"" , insn -> major , insn -> minor , insn -> flags , insn -> name )"	501:2:14309:14390	290836	0	True				
ANR	290915	CallExpression	"printf ( ""INST: %d %d %x %s\\n"" , insn -> major , insn -> minor , insn -> flags , insn -> name )"		290836	0					
ANR	290916	Callee	printf		290836	0					
ANR	290917	Identifier	printf		290836	0					
ANR	290918	ArgumentList	"""INST: %d %d %x %s\\n"""		290836	1					
ANR	290919	Argument	"""INST: %d %d %x %s\\n"""		290836	0					
ANR	290920	PrimaryExpression	"""INST: %d %d %x %s\\n"""		290836	0					
ANR	290921	Argument	insn -> major		290836	1					
ANR	290922	PtrMemberAccess	insn -> major		290836	0					
ANR	290923	Identifier	insn		290836	0					
ANR	290924	Identifier	major		290836	1					
ANR	290925	Argument	insn -> minor		290836	2					
ANR	290926	PtrMemberAccess	insn -> minor		290836	0					
ANR	290927	Identifier	insn		290836	0					
ANR	290928	Identifier	minor		290836	1					
ANR	290929	Argument	insn -> flags		290836	3					
ANR	290930	PtrMemberAccess	insn -> flags		290836	0					
ANR	290931	Identifier	insn		290836	0					
ANR	290932	Identifier	flags		290836	1					
ANR	290933	Argument	insn -> name		290836	4					
ANR	290934	PtrMemberAccess	insn -> name		290836	0					
ANR	290935	Identifier	insn		290836	0					
ANR	290936	Identifier	name		290836	1					
ANR	290937	ForStatement	for ( i = 0 ; i < NUM_EXT_CORE ; i ++ )		290836	5					
ANR	290938	ForInit	i = 0 ;	505:9:14411:14416	290836	0	True				
ANR	290939	AssignmentExpression	i = 0		290836	0		=			
ANR	290940	Identifier	i		290836	0					
ANR	290941	PrimaryExpression	0		290836	1					
ANR	290942	Condition	i < NUM_EXT_CORE	505:16:14418:14433	290836	1	True				
ANR	290943	RelationalExpression	i < NUM_EXT_CORE		290836	0		<			
ANR	290944	Identifier	i		290836	0					
ANR	290945	Identifier	NUM_EXT_CORE		290836	1					
ANR	290946	PostIncDecOperationExpression	i ++	505:34:14436:14438	290836	2	True				
ANR	290947	Identifier	i		290836	0					
ANR	290948	IncDec	++		290836	1					
ANR	290949	CompoundStatement		24:8:522:585	290836	3					
ANR	290950	IdentifierDeclStatement	struct ExtCoreRegister reg = arc_extension_map . coreRegisters [ i ] ;	507:8:14455:14518	290836	0	True				
ANR	290951	IdentifierDecl	reg = arc_extension_map . coreRegisters [ i ]		290836	0					
ANR	290952	IdentifierDeclType	struct ExtCoreRegister		290836	0					
ANR	290953	Identifier	reg		290836	1					
ANR	290954	AssignmentExpression	reg = arc_extension_map . coreRegisters [ i ]		290836	2		=			
ANR	290955	Identifier	reg		290836	0					
ANR	290956	ArrayIndexing	arc_extension_map . coreRegisters [ i ]		290836	1					
ANR	290957	MemberAccess	arc_extension_map . coreRegisters		290836	0					
ANR	290958	Identifier	arc_extension_map		290836	0					
ANR	290959	Identifier	coreRegisters		290836	1					
ANR	290960	Identifier	i		290836	1					
ANR	290961	IfStatement	if ( reg . name )		290836	1					
ANR	290962	Condition	reg . name	509:5:14526:14533	290836	0	True				
ANR	290963	MemberAccess	reg . name		290836	0					
ANR	290964	Identifier	reg		290836	0					
ANR	290965	Identifier	name		290836	1					
ANR	290966	CompoundStatement		26:15:603:603	290836	1					
ANR	290967	ExpressionStatement	"printf ( ""CORE: %s %d %s\\n"" , reg . name , reg . number , ExtReadWrite_image ( reg . rw ) )"	510:2:14540:14618	290836	0	True				
ANR	290968	CallExpression	"printf ( ""CORE: %s %d %s\\n"" , reg . name , reg . number , ExtReadWrite_image ( reg . rw ) )"		290836	0					
ANR	290969	Callee	printf		290836	0					
ANR	290970	Identifier	printf		290836	0					
ANR	290971	ArgumentList	"""CORE: %s %d %s\\n"""		290836	1					
ANR	290972	Argument	"""CORE: %s %d %s\\n"""		290836	0					
ANR	290973	PrimaryExpression	"""CORE: %s %d %s\\n"""		290836	0					
ANR	290974	Argument	reg . name		290836	1					
ANR	290975	MemberAccess	reg . name		290836	0					
ANR	290976	Identifier	reg		290836	0					
ANR	290977	Identifier	name		290836	1					
ANR	290978	Argument	reg . number		290836	2					
ANR	290979	MemberAccess	reg . number		290836	0					
ANR	290980	Identifier	reg		290836	0					
ANR	290981	Identifier	number		290836	1					
ANR	290982	Argument	ExtReadWrite_image ( reg . rw )		290836	3					
ANR	290983	CallExpression	ExtReadWrite_image ( reg . rw )		290836	0					
ANR	290984	Callee	ExtReadWrite_image		290836	0					
ANR	290985	Identifier	ExtReadWrite_image		290836	0					
ANR	290986	ArgumentList	reg . rw		290836	1					
ANR	290987	Argument	reg . rw		290836	0					
ANR	290988	MemberAccess	reg . rw		290836	0					
ANR	290989	Identifier	reg		290836	0					
ANR	290990	Identifier	rw		290836	1					
ANR	290991	ForStatement	for ( i = 0 ; i < NUM_EXT_COND ; i ++ )		290836	6					
ANR	290992	ForInit	i = 0 ;	514:9:14639:14644	290836	0	True				
ANR	290993	AssignmentExpression	i = 0		290836	0		=			
ANR	290994	Identifier	i		290836	0					
ANR	290995	PrimaryExpression	0		290836	1					
ANR	290996	Condition	i < NUM_EXT_COND	514:16:14646:14661	290836	1	True				
ANR	290997	RelationalExpression	i < NUM_EXT_COND		290836	0		<			
ANR	290998	Identifier	i		290836	0					
ANR	290999	Identifier	NUM_EXT_COND		290836	1					
ANR	291000	PostIncDecOperationExpression	i ++	514:34:14664:14666	290836	2	True				
ANR	291001	Identifier	i		290836	0					
ANR	291002	IncDec	++		290836	1					
ANR	291003	CompoundStatement		31:39:736:736	290836	3					
ANR	291004	IfStatement	if ( arc_extension_map . condCodes [ i ] )		290836	0					
ANR	291005	Condition	arc_extension_map . condCodes [ i ]	515:9:14680:14709	290836	0	True				
ANR	291006	ArrayIndexing	arc_extension_map . condCodes [ i ]		290836	0					
ANR	291007	MemberAccess	arc_extension_map . condCodes		290836	0					
ANR	291008	Identifier	arc_extension_map		290836	0					
ANR	291009	Identifier	condCodes		290836	1					
ANR	291010	Identifier	i		290836	1					
ANR	291011	CompoundStatement		32:41:779:779	290836	1					
ANR	291012	ExpressionStatement	"printf ( ""COND: %s\\n"" , arc_extension_map . condCodes [ i ] )"	516:6:14720:14773	290836	0	True				
ANR	291013	CallExpression	"printf ( ""COND: %s\\n"" , arc_extension_map . condCodes [ i ] )"		290836	0					
ANR	291014	Callee	printf		290836	0					
ANR	291015	Identifier	printf		290836	0					
ANR	291016	ArgumentList	"""COND: %s\\n"""		290836	1					
ANR	291017	Argument	"""COND: %s\\n"""		290836	0					
ANR	291018	PrimaryExpression	"""COND: %s\\n"""		290836	0					
ANR	291019	Argument	arc_extension_map . condCodes [ i ]		290836	1					
ANR	291020	ArrayIndexing	arc_extension_map . condCodes [ i ]		290836	0					
ANR	291021	MemberAccess	arc_extension_map . condCodes		290836	0					
ANR	291022	Identifier	arc_extension_map		290836	0					
ANR	291023	Identifier	condCodes		290836	1					
ANR	291024	Identifier	i		290836	1					
ANR	291025	ReturnType	void		290836	1					
ANR	291026	Identifier	dump_ARC_extmap		290836	2					
ANR	291027	ParameterList			290836	3					
ANR	291028	CFGEntryNode	ENTRY		290836		True				
ANR	291029	CFGExitNode	EXIT		290836		True				
ANR	291030	Symbol	reg . name		290836						
ANR	291031	Symbol	reg . number		290836						
ANR	291032	Symbol	arc_extension_map		290836						
ANR	291033	Symbol	NUM_EXT_CORE		290836						
ANR	291034	Symbol	INST_HASH_SIZE		290836						
ANR	291035	Symbol	insn -> next		290836						
ANR	291036	Symbol	NUM_EXT_COND		290836						
ANR	291037	Symbol	r -> next		290836						
ANR	291038	Symbol	insn -> name		290836						
ANR	291039	Symbol	ExtReadWrite_image		290836						
ANR	291040	Symbol	insn -> flags		290836						
ANR	291041	Symbol	reg		290836						
ANR	291042	Symbol	r -> address		290836						
ANR	291043	Symbol	* arc_extension_map . instructions		290836						
ANR	291044	Symbol	arc_extension_map . auxRegisters		290836						
ANR	291045	Symbol	arc_extension_map . condCodes		290836						
ANR	291046	Symbol	insn -> major		290836						
ANR	291047	Symbol	NULL		290836						
ANR	291048	Symbol	* arc_extension_map		290836						
ANR	291049	Symbol	i		290836						
ANR	291050	Symbol	* insn		290836						
ANR	291051	Symbol	insn -> minor		290836						
ANR	291052	Symbol	arc_extension_map . coreRegisters		290836						
ANR	291053	Symbol	* arc_extension_map . condCodes		290836						
ANR	291054	Symbol	insn		290836						
ANR	291055	Symbol	arc_extension_map . instructions		290836						
ANR	291056	Symbol	r		290836						
ANR	291057	Symbol	* arc_extension_map . coreRegisters		290836						
ANR	291058	Symbol	* i		290836						
ANR	291059	Symbol	reg . rw		290836						
ANR	291060	Symbol	r -> name		290836						
ANR	291061	Symbol	* r		290836						
