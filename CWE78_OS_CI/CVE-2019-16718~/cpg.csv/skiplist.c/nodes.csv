command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6213005	File	data/converged/CVE-2019-16718~_radare2/skiplist.c								
ANR	6213006	Function	r_skiplist_node_new	14:0:336:622							
ANR	6213007	FunctionDef	"r_skiplist_node_new (void * data , int level)"		6213006	0					
ANR	6213008	CompoundStatement		14:66:402:622	6213006	0					
ANR	6213009	IdentifierDeclStatement	RSkipListNode * res = R_NEW0 ( RSkipListNode ) ;	15:1:405:448	6213006	0	True				
ANR	6213010	IdentifierDecl	* res = R_NEW0 ( RSkipListNode )		6213006	0					
ANR	6213011	IdentifierDeclType	RSkipListNode *		6213006	0					
ANR	6213012	Identifier	res		6213006	1					
ANR	6213013	AssignmentExpression	* res = R_NEW0 ( RSkipListNode )		6213006	2		=			
ANR	6213014	Identifier	res		6213006	0					
ANR	6213015	CallExpression	R_NEW0 ( RSkipListNode )		6213006	1					
ANR	6213016	Callee	R_NEW0		6213006	0					
ANR	6213017	Identifier	R_NEW0		6213006	0					
ANR	6213018	ArgumentList	RSkipListNode		6213006	1					
ANR	6213019	Argument	RSkipListNode		6213006	0					
ANR	6213020	Identifier	RSkipListNode		6213006	0					
ANR	6213021	IfStatement	if ( ! res )		6213006	1					
ANR	6213022	Condition	! res	16:5:455:458	6213006	0	True				
ANR	6213023	UnaryOperationExpression	! res		6213006	0					
ANR	6213024	UnaryOperator	!		6213006	0					
ANR	6213025	Identifier	res		6213006	1					
ANR	6213026	CompoundStatement		3:11:58:58	6213006	1					
ANR	6213027	ReturnStatement	return NULL ;	17:2:465:476	6213006	0	True				
ANR	6213028	Identifier	NULL		6213006	0					
ANR	6213029	Statement	res	19:1:482:484	6213006	2	True				
ANR	6213030	Statement	->	19:4:485:486	6213006	3	True				
ANR	6213031	Statement	forward	19:6:487:493	6213006	4	True				
ANR	6213032	Statement	=	19:14:495:495	6213006	5	True				
ANR	6213033	Statement	R_NEWS0	19:16:497:503	6213006	6	True				
ANR	6213034	Statement	(	19:24:505:505	6213006	7	True				
ANR	6213035	Statement	RSkipListNode	19:25:506:518	6213006	8	True				
ANR	6213036	Statement	*	19:39:520:520	6213006	9	True				
ANR	6213037	Statement	","	19:40:521:521	6213006	10	True				
ANR	6213038	Statement	level	19:42:523:527	6213006	11	True				
ANR	6213039	Statement	+	19:48:529:529	6213006	12	True				
ANR	6213040	Statement	1	19:50:531:531	6213006	13	True				
ANR	6213041	Statement	)	19:51:532:532	6213006	14	True				
ANR	6213042	ExpressionStatement		19:52:533:533	6213006	15	True				
ANR	6213043	IfStatement	if ( ! res -> forward )		6213006	16					
ANR	6213044	Condition	! res -> forward	20:5:540:552	6213006	0	True				
ANR	6213045	UnaryOperationExpression	! res -> forward		6213006	0					
ANR	6213046	UnaryOperator	!		6213006	0					
ANR	6213047	PtrMemberAccess	res -> forward		6213006	1					
ANR	6213048	Identifier	res		6213006	0					
ANR	6213049	Identifier	forward		6213006	1					
ANR	6213050	CompoundStatement		7:21:153:153	6213006	1					
ANR	6213051	ExpressionStatement	free ( res )	21:2:560:570	6213006	0	True				
ANR	6213052	CallExpression	free ( res )		6213006	0					
ANR	6213053	Callee	free		6213006	0					
ANR	6213054	Identifier	free		6213006	0					
ANR	6213055	ArgumentList	res		6213006	1					
ANR	6213056	Argument	res		6213006	0					
ANR	6213057	Identifier	res		6213006	0					
ANR	6213058	ReturnStatement	return NULL ;	22:2:574:585	6213006	1	True				
ANR	6213059	Identifier	NULL		6213006	0					
ANR	6213060	ExpressionStatement	res -> data = data	24:1:591:607	6213006	17	True				
ANR	6213061	AssignmentExpression	res -> data = data		6213006	0		=			
ANR	6213062	PtrMemberAccess	res -> data		6213006	0					
ANR	6213063	Identifier	res		6213006	0					
ANR	6213064	Identifier	data		6213006	1					
ANR	6213065	Identifier	data		6213006	1					
ANR	6213066	ReturnStatement	return res ;	25:1:610:620	6213006	18	True				
ANR	6213067	Identifier	res		6213006	0					
ANR	6213068	ReturnType	static RSkipListNode *		6213006	1					
ANR	6213069	Identifier	r_skiplist_node_new		6213006	2					
ANR	6213070	ParameterList	"void * data , int level"		6213006	3					
ANR	6213071	Parameter	void * data	14:43:379:388	6213006	0	True				
ANR	6213072	ParameterType	void *		6213006	0					
ANR	6213073	Identifier	data		6213006	1					
ANR	6213074	Parameter	int level	14:55:391:399	6213006	1	True				
ANR	6213075	ParameterType	int		6213006	0					
ANR	6213076	Identifier	level		6213006	1					
ANR	6213077	CFGEntryNode	ENTRY		6213006		True				
ANR	6213078	CFGExitNode	EXIT		6213006		True				
ANR	6213079	Symbol	res		6213006						
ANR	6213080	Symbol	R_NEW0		6213006						
ANR	6213081	Symbol	res -> data		6213006						
ANR	6213082	Symbol	NULL		6213006						
ANR	6213083	Symbol	data		6213006						
ANR	6213084	Symbol	level		6213006						
ANR	6213085	Symbol	RSkipListNode		6213006						
ANR	6213086	Symbol	* res		6213006						
ANR	6213087	Symbol	res -> forward		6213006						
ANR	6213088	Function	r_skiplist_node_free	28:0:625:824							
ANR	6213089	FunctionDef	"r_skiplist_node_free (RSkipList * list , RSkipListNode * node)"		6213088	0					
ANR	6213090	CompoundStatement		28:72:697:824	6213088	0					
ANR	6213091	IfStatement	if ( node )		6213088	0					
ANR	6213092	Condition	node	29:5:704:707	6213088	0	True				
ANR	6213093	Identifier	node		6213088	0					
ANR	6213094	CompoundStatement		2:11:12:12	6213088	1					
ANR	6213095	IfStatement	if ( list -> freefn && node -> data )		6213088	0					
ANR	6213096	Condition	list -> freefn && node -> data	30:6:718:743	6213088	0	True				
ANR	6213097	AndExpression	list -> freefn && node -> data		6213088	0		&&			
ANR	6213098	PtrMemberAccess	list -> freefn		6213088	0					
ANR	6213099	Identifier	list		6213088	0					
ANR	6213100	Identifier	freefn		6213088	1					
ANR	6213101	PtrMemberAccess	node -> data		6213088	1					
ANR	6213102	Identifier	node		6213088	0					
ANR	6213103	Identifier	data		6213088	1					
ANR	6213104	CompoundStatement		3:34:48:48	6213088	1					
ANR	6213105	ExpressionStatement	list -> freefn ( node -> data )	31:3:751:776	6213088	0	True				
ANR	6213106	CallExpression	list -> freefn ( node -> data )		6213088	0					
ANR	6213107	Callee	list -> freefn		6213088	0					
ANR	6213108	PtrMemberAccess	list -> freefn		6213088	0					
ANR	6213109	Identifier	list		6213088	0					
ANR	6213110	Identifier	freefn		6213088	1					
ANR	6213111	ArgumentList	node -> data		6213088	1					
ANR	6213112	Argument	node -> data		6213088	0					
ANR	6213113	PtrMemberAccess	node -> data		6213088	0					
ANR	6213114	Identifier	node		6213088	0					
ANR	6213115	Identifier	data		6213088	1					
ANR	6213116	ExpressionStatement	free ( node -> forward )	33:2:784:804	6213088	1	True				
ANR	6213117	CallExpression	free ( node -> forward )		6213088	0					
ANR	6213118	Callee	free		6213088	0					
ANR	6213119	Identifier	free		6213088	0					
ANR	6213120	ArgumentList	node -> forward		6213088	1					
ANR	6213121	Argument	node -> forward		6213088	0					
ANR	6213122	PtrMemberAccess	node -> forward		6213088	0					
ANR	6213123	Identifier	node		6213088	0					
ANR	6213124	Identifier	forward		6213088	1					
ANR	6213125	ExpressionStatement	free ( node )	34:2:808:819	6213088	2	True				
ANR	6213126	CallExpression	free ( node )		6213088	0					
ANR	6213127	Callee	free		6213088	0					
ANR	6213128	Identifier	free		6213088	0					
ANR	6213129	ArgumentList	node		6213088	1					
ANR	6213130	Argument	node		6213088	0					
ANR	6213131	Identifier	node		6213088	0					
ANR	6213132	ReturnType	static void		6213088	1					
ANR	6213133	Identifier	r_skiplist_node_free		6213088	2					
ANR	6213134	ParameterList	"RSkipList * list , RSkipListNode * node"		6213088	3					
ANR	6213135	Parameter	RSkipList * list	28:34:659:673	6213088	0	True				
ANR	6213136	ParameterType	RSkipList *		6213088	0					
ANR	6213137	Identifier	list		6213088	1					
ANR	6213138	Parameter	RSkipListNode * node	28:51:676:694	6213088	1	True				
ANR	6213139	ParameterType	RSkipListNode *		6213088	0					
ANR	6213140	Identifier	node		6213088	1					
ANR	6213141	CFGEntryNode	ENTRY		6213088		True				
ANR	6213142	CFGExitNode	EXIT		6213088		True				
ANR	6213143	Symbol	node		6213088						
ANR	6213144	Symbol	node -> data		6213088						
ANR	6213145	Symbol	* list		6213088						
ANR	6213146	Symbol	list -> freefn		6213088						
ANR	6213147	Symbol	node -> forward		6213088						
ANR	6213148	Symbol	* node		6213088						
ANR	6213149	Symbol	list		6213088						
ANR	6213150	Function	init_head	38:0:827:956							
ANR	6213151	FunctionDef	init_head (RSkipListNode * head)		6213150	0					
ANR	6213152	CompoundStatement		38:44:871:956	6213150	0					
ANR	6213153	IdentifierDeclStatement	int i ;	39:1:874:879	6213150	0	True				
ANR	6213154	IdentifierDecl	i		6213150	0					
ANR	6213155	IdentifierDeclType	int		6213150	0					
ANR	6213156	Identifier	i		6213150	1					
ANR	6213157	ForStatement	for ( i = 0 ; i <= SKIPLIST_MAX_DEPTH ; i ++ )		6213150	1					
ANR	6213158	ForInit	i = 0 ;	40:6:887:892	6213150	0	True				
ANR	6213159	AssignmentExpression	i = 0		6213150	0		=			
ANR	6213160	Identifier	i		6213150	0					
ANR	6213161	PrimaryExpression	0		6213150	1					
ANR	6213162	Condition	i <= SKIPLIST_MAX_DEPTH	40:13:894:916	6213150	1	True				
ANR	6213163	RelationalExpression	i <= SKIPLIST_MAX_DEPTH		6213150	0		<=			
ANR	6213164	Identifier	i		6213150	0					
ANR	6213165	Identifier	SKIPLIST_MAX_DEPTH		6213150	1					
ANR	6213166	PostIncDecOperationExpression	i ++	40:38:919:921	6213150	2	True				
ANR	6213167	Identifier	i		6213150	0					
ANR	6213168	IncDec	++		6213150	1					
ANR	6213169	CompoundStatement		3:43:52:52	6213150	3					
ANR	6213170	ExpressionStatement	head -> forward [ i ] = head	41:2:928:951	6213150	0	True				
ANR	6213171	AssignmentExpression	head -> forward [ i ] = head		6213150	0		=			
ANR	6213172	ArrayIndexing	head -> forward [ i ]		6213150	0					
ANR	6213173	PtrMemberAccess	head -> forward		6213150	0					
ANR	6213174	Identifier	head		6213150	0					
ANR	6213175	Identifier	forward		6213150	1					
ANR	6213176	Identifier	i		6213150	1					
ANR	6213177	Identifier	head		6213150	1					
ANR	6213178	ReturnType	static void		6213150	1					
ANR	6213179	Identifier	init_head		6213150	2					
ANR	6213180	ParameterList	RSkipListNode * head		6213150	3					
ANR	6213181	Parameter	RSkipListNode * head	38:23:850:868	6213150	0	True				
ANR	6213182	ParameterType	RSkipListNode *		6213150	0					
ANR	6213183	Identifier	head		6213150	1					
ANR	6213184	CFGEntryNode	ENTRY		6213150		True				
ANR	6213185	CFGExitNode	EXIT		6213150		True				
ANR	6213186	Symbol	head		6213150						
ANR	6213187	Symbol	SKIPLIST_MAX_DEPTH		6213150						
ANR	6213188	Symbol	* i		6213150						
ANR	6213189	Symbol	* head -> forward		6213150						
ANR	6213190	Symbol	* * head		6213150						
ANR	6213191	Symbol	i		6213150						
ANR	6213192	Symbol	* head		6213150						
ANR	6213193	Symbol	head -> forward		6213150						
ANR	6213194	Function	find_insertpoint	51:0:1248:1763							
ANR	6213195	FunctionDef	"find_insertpoint (RSkipList * list , void * data , RSkipListNode * * updates , bool by_data)"		6213194	0					
ANR	6213196	CompoundStatement		51:107:1355:1763	6213194	0					
ANR	6213197	IdentifierDeclStatement	RSkipListNode * x = list -> head ;	52:1:1358:1387	6213194	0	True				
ANR	6213198	IdentifierDecl	* x = list -> head		6213194	0					
ANR	6213199	IdentifierDeclType	RSkipListNode *		6213194	0					
ANR	6213200	Identifier	x		6213194	1					
ANR	6213201	AssignmentExpression	* x = list -> head		6213194	2		=			
ANR	6213202	Identifier	x		6213194	0					
ANR	6213203	PtrMemberAccess	list -> head		6213194	1					
ANR	6213204	Identifier	list		6213194	0					
ANR	6213205	Identifier	head		6213194	1					
ANR	6213206	IdentifierDeclStatement	int i ;	53:1:1390:1395	6213194	1	True				
ANR	6213207	IdentifierDecl	i		6213194	0					
ANR	6213208	IdentifierDeclType	int		6213194	0					
ANR	6213209	Identifier	i		6213194	1					
ANR	6213210	ForStatement	for ( i = list -> list_level ; i >= 0 ; i -- )		6213194	2					
ANR	6213211	ForInit	i = list -> list_level ;	55:6:1404:1424	6213194	0	True				
ANR	6213212	AssignmentExpression	i = list -> list_level		6213194	0		=			
ANR	6213213	Identifier	i		6213194	0					
ANR	6213214	PtrMemberAccess	list -> list_level		6213194	1					
ANR	6213215	Identifier	list		6213194	0					
ANR	6213216	Identifier	list_level		6213194	1					
ANR	6213217	Condition	i >= 0	55:28:1426:1431	6213194	1	True				
ANR	6213218	RelationalExpression	i >= 0		6213194	0		>=			
ANR	6213219	Identifier	i		6213194	0					
ANR	6213220	PrimaryExpression	0		6213194	1					
ANR	6213221	PostIncDecOperationExpression	i --	55:36:1434:1436	6213194	2	True				
ANR	6213222	Identifier	i		6213194	0					
ANR	6213223	IncDec	--		6213194	1					
ANR	6213224	CompoundStatement		5:41:83:83	6213194	3					
ANR	6213225	IfStatement	if ( by_data )		6213194	0					
ANR	6213226	Condition	by_data	56:6:1447:1453	6213194	0	True				
ANR	6213227	Identifier	by_data		6213194	0					
ANR	6213228	CompoundStatement		6:15:100:100	6213194	1					
ANR	6213229	WhileStatement	"while ( x -> forward [ i ] != list -> head && list -> compare ( x -> forward [ i ] -> data , data ) < 0 )"		6213194	0					
ANR	6213230	Condition	"x -> forward [ i ] != list -> head && list -> compare ( x -> forward [ i ] -> data , data ) < 0"	57:10:1468:1547	6213194	0	True				
ANR	6213231	AndExpression	"x -> forward [ i ] != list -> head && list -> compare ( x -> forward [ i ] -> data , data ) < 0"		6213194	0		&&			
ANR	6213232	EqualityExpression	x -> forward [ i ] != list -> head		6213194	0		!=			
ANR	6213233	ArrayIndexing	x -> forward [ i ]		6213194	0					
ANR	6213234	PtrMemberAccess	x -> forward		6213194	0					
ANR	6213235	Identifier	x		6213194	0					
ANR	6213236	Identifier	forward		6213194	1					
ANR	6213237	Identifier	i		6213194	1					
ANR	6213238	PtrMemberAccess	list -> head		6213194	1					
ANR	6213239	Identifier	list		6213194	0					
ANR	6213240	Identifier	head		6213194	1					
ANR	6213241	RelationalExpression	"list -> compare ( x -> forward [ i ] -> data , data ) < 0"		6213194	1		<			
ANR	6213242	CallExpression	"list -> compare ( x -> forward [ i ] -> data , data )"		6213194	0					
ANR	6213243	Callee	list -> compare		6213194	0					
ANR	6213244	PtrMemberAccess	list -> compare		6213194	0					
ANR	6213245	Identifier	list		6213194	0					
ANR	6213246	Identifier	compare		6213194	1					
ANR	6213247	ArgumentList	x -> forward [ i ] -> data		6213194	1					
ANR	6213248	Argument	x -> forward [ i ] -> data		6213194	0					
ANR	6213249	PtrMemberAccess	x -> forward [ i ] -> data		6213194	0					
ANR	6213250	ArrayIndexing	x -> forward [ i ]		6213194	0					
ANR	6213251	PtrMemberAccess	x -> forward		6213194	0					
ANR	6213252	Identifier	x		6213194	0					
ANR	6213253	Identifier	forward		6213194	1					
ANR	6213254	Identifier	i		6213194	1					
ANR	6213255	Identifier	data		6213194	1					
ANR	6213256	Argument	data		6213194	1					
ANR	6213257	Identifier	data		6213194	0					
ANR	6213258	PrimaryExpression	0		6213194	1					
ANR	6213259	CompoundStatement		8:54:194:194	6213194	1					
ANR	6213260	ExpressionStatement	x = x -> forward [ i ]	59:4:1556:1573	6213194	0	True				
ANR	6213261	AssignmentExpression	x = x -> forward [ i ]		6213194	0		=			
ANR	6213262	Identifier	x		6213194	0					
ANR	6213263	ArrayIndexing	x -> forward [ i ]		6213194	1					
ANR	6213264	PtrMemberAccess	x -> forward		6213194	0					
ANR	6213265	Identifier	x		6213194	0					
ANR	6213266	Identifier	forward		6213194	1					
ANR	6213267	Identifier	i		6213194	1					
ANR	6213268	ElseStatement	else		6213194	0					
ANR	6213269	CompoundStatement		11:9:233:233	6213194	0					
ANR	6213270	WhileStatement	while ( x -> forward [ i ] != list -> head && x -> forward [ i ] != data )		6213194	0					
ANR	6213271	Condition	x -> forward [ i ] != list -> head && x -> forward [ i ] != data	62:10:1601:1652	6213194	0	True				
ANR	6213272	AndExpression	x -> forward [ i ] != list -> head && x -> forward [ i ] != data		6213194	0		&&			
ANR	6213273	EqualityExpression	x -> forward [ i ] != list -> head		6213194	0		!=			
ANR	6213274	ArrayIndexing	x -> forward [ i ]		6213194	0					
ANR	6213275	PtrMemberAccess	x -> forward		6213194	0					
ANR	6213276	Identifier	x		6213194	0					
ANR	6213277	Identifier	forward		6213194	1					
ANR	6213278	Identifier	i		6213194	1					
ANR	6213279	PtrMemberAccess	list -> head		6213194	1					
ANR	6213280	Identifier	list		6213194	0					
ANR	6213281	Identifier	head		6213194	1					
ANR	6213282	EqualityExpression	x -> forward [ i ] != data		6213194	1		!=			
ANR	6213283	ArrayIndexing	x -> forward [ i ]		6213194	0					
ANR	6213284	PtrMemberAccess	x -> forward		6213194	0					
ANR	6213285	Identifier	x		6213194	0					
ANR	6213286	Identifier	forward		6213194	1					
ANR	6213287	Identifier	i		6213194	1					
ANR	6213288	Identifier	data		6213194	1					
ANR	6213289	CompoundStatement		12:64:299:299	6213194	1					
ANR	6213290	ExpressionStatement	x = x -> forward [ i ]	63:4:1661:1678	6213194	0	True				
ANR	6213291	AssignmentExpression	x = x -> forward [ i ]		6213194	0		=			
ANR	6213292	Identifier	x		6213194	0					
ANR	6213293	ArrayIndexing	x -> forward [ i ]		6213194	1					
ANR	6213294	PtrMemberAccess	x -> forward		6213194	0					
ANR	6213295	Identifier	x		6213194	0					
ANR	6213296	Identifier	forward		6213194	1					
ANR	6213297	Identifier	i		6213194	1					
ANR	6213298	IfStatement	if ( updates )		6213194	1					
ANR	6213299	Condition	updates	66:6:1695:1701	6213194	0	True				
ANR	6213300	Identifier	updates		6213194	0					
ANR	6213301	CompoundStatement		16:15:348:348	6213194	1					
ANR	6213302	ExpressionStatement	updates [ i ] = x	67:3:1709:1723	6213194	0	True				
ANR	6213303	AssignmentExpression	updates [ i ] = x		6213194	0		=			
ANR	6213304	ArrayIndexing	updates [ i ]		6213194	0					
ANR	6213305	Identifier	updates		6213194	0					
ANR	6213306	Identifier	i		6213194	1					
ANR	6213307	Identifier	x		6213194	1					
ANR	6213308	ExpressionStatement	x = x -> forward [ 0 ]	70:1:1733:1750	6213194	3	True				
ANR	6213309	AssignmentExpression	x = x -> forward [ 0 ]		6213194	0		=			
ANR	6213310	Identifier	x		6213194	0					
ANR	6213311	ArrayIndexing	x -> forward [ 0 ]		6213194	1					
ANR	6213312	PtrMemberAccess	x -> forward		6213194	0					
ANR	6213313	Identifier	x		6213194	0					
ANR	6213314	Identifier	forward		6213194	1					
ANR	6213315	PrimaryExpression	0		6213194	1					
ANR	6213316	ReturnStatement	return x ;	71:1:1753:1761	6213194	4	True				
ANR	6213317	Identifier	x		6213194	0					
ANR	6213318	ReturnType	static RSkipListNode *		6213194	1					
ANR	6213319	Identifier	find_insertpoint		6213194	2					
ANR	6213320	ParameterList	"RSkipList * list , void * data , RSkipListNode * * updates , bool by_data"		6213194	3					
ANR	6213321	Parameter	RSkipList * list	51:39:1287:1301	6213194	0	True				
ANR	6213322	ParameterType	RSkipList *		6213194	0					
ANR	6213323	Identifier	list		6213194	1					
ANR	6213324	Parameter	void * data	51:56:1304:1313	6213194	1	True				
ANR	6213325	ParameterType	void *		6213194	0					
ANR	6213326	Identifier	data		6213194	1					
ANR	6213327	Parameter	RSkipListNode * * updates	51:68:1316:1338	6213194	2	True				
ANR	6213328	ParameterType	RSkipListNode * *		6213194	0					
ANR	6213329	Identifier	updates		6213194	1					
ANR	6213330	Parameter	bool by_data	51:93:1341:1352	6213194	3	True				
ANR	6213331	ParameterType	bool		6213194	0					
ANR	6213332	Identifier	by_data		6213194	1					
ANR	6213333	CFGEntryNode	ENTRY		6213194		True				
ANR	6213334	CFGExitNode	EXIT		6213194		True				
ANR	6213335	Symbol	* * i		6213194						
ANR	6213336	Symbol	* x		6213194						
ANR	6213337	Symbol	data		6213194						
ANR	6213338	Symbol	i		6213194						
ANR	6213339	Symbol	* * * x		6213194						
ANR	6213340	Symbol	* * x -> forward		6213194						
ANR	6213341	Symbol	x -> forward [ i ] -> data		6213194						
ANR	6213342	Symbol	list		6213194						
ANR	6213343	Symbol	updates		6213194						
ANR	6213344	Symbol	list -> head		6213194						
ANR	6213345	Symbol	* x -> forward		6213194						
ANR	6213346	Symbol	* updates		6213194						
ANR	6213347	Symbol	* * x		6213194						
ANR	6213348	Symbol	* i		6213194						
ANR	6213349	Symbol	by_data		6213194						
ANR	6213350	Symbol	* list		6213194						
ANR	6213351	Symbol	x		6213194						
ANR	6213352	Symbol	list -> compare		6213194						
ANR	6213353	Symbol	list -> list_level		6213194						
ANR	6213354	Symbol	x -> forward		6213194						
ANR	6213355	Function	delete_element	74:0:1766:2599							
ANR	6213356	FunctionDef	"delete_element (RSkipList * list , void * data , bool by_data)"		6213355	0					
ANR	6213357	CompoundStatement		74:70:1836:2599	6213355	0					
ANR	6213358	IdentifierDeclStatement	int i ;	75:1:1839:1844	6213355	0	True				
ANR	6213359	IdentifierDecl	i		6213355	0					
ANR	6213360	IdentifierDeclType	int		6213355	0					
ANR	6213361	Identifier	i		6213355	1					
ANR	6213362	IdentifierDeclStatement	"RSkipListNode * update [ SKIPLIST_MAX_DEPTH + 1 ] , * x ;"	76:1:1847:1896	6213355	1	True				
ANR	6213363	IdentifierDecl	* update [ SKIPLIST_MAX_DEPTH + 1 ]		6213355	0					
ANR	6213364	IdentifierDeclType	RSkipListNode * [ SKIPLIST_MAX_DEPTH + 1 ]		6213355	0					
ANR	6213365	Identifier	update		6213355	1					
ANR	6213366	AdditiveExpression	SKIPLIST_MAX_DEPTH + 1		6213355	2		+			
ANR	6213367	Identifier	SKIPLIST_MAX_DEPTH		6213355	0					
ANR	6213368	PrimaryExpression	1		6213355	1					
ANR	6213369	IdentifierDecl	* x		6213355	1					
ANR	6213370	IdentifierDeclType	RSkipListNode *		6213355	0					
ANR	6213371	Identifier	x		6213355	1					
ANR	6213372	ExpressionStatement	"x = find_insertpoint ( list , data , update , by_data )"	79:1:1952:2002	6213355	2	True				
ANR	6213373	AssignmentExpression	"x = find_insertpoint ( list , data , update , by_data )"		6213355	0		=			
ANR	6213374	Identifier	x		6213355	0					
ANR	6213375	CallExpression	"find_insertpoint ( list , data , update , by_data )"		6213355	1					
ANR	6213376	Callee	find_insertpoint		6213355	0					
ANR	6213377	Identifier	find_insertpoint		6213355	0					
ANR	6213378	ArgumentList	list		6213355	1					
ANR	6213379	Argument	list		6213355	0					
ANR	6213380	Identifier	list		6213355	0					
ANR	6213381	Argument	data		6213355	1					
ANR	6213382	Identifier	data		6213355	0					
ANR	6213383	Argument	update		6213355	2					
ANR	6213384	Identifier	update		6213355	0					
ANR	6213385	Argument	by_data		6213355	3					
ANR	6213386	Identifier	by_data		6213355	0					
ANR	6213387	IfStatement	"if ( x == list -> head || list -> compare ( x -> data , data ) != 0 )"		6213355	3					
ANR	6213388	Condition	"x == list -> head || list -> compare ( x -> data , data ) != 0"	81:5:2066:2117	6213355	0	True				
ANR	6213389	OrExpression	"x == list -> head || list -> compare ( x -> data , data ) != 0"		6213355	0		||			
ANR	6213390	EqualityExpression	x == list -> head		6213355	0		==			
ANR	6213391	Identifier	x		6213355	0					
ANR	6213392	PtrMemberAccess	list -> head		6213355	1					
ANR	6213393	Identifier	list		6213355	0					
ANR	6213394	Identifier	head		6213355	1					
ANR	6213395	EqualityExpression	"list -> compare ( x -> data , data ) != 0"		6213355	1		!=			
ANR	6213396	CallExpression	"list -> compare ( x -> data , data )"		6213355	0					
ANR	6213397	Callee	list -> compare		6213355	0					
ANR	6213398	PtrMemberAccess	list -> compare		6213355	0					
ANR	6213399	Identifier	list		6213355	0					
ANR	6213400	Identifier	compare		6213355	1					
ANR	6213401	ArgumentList	x -> data		6213355	1					
ANR	6213402	Argument	x -> data		6213355	0					
ANR	6213403	PtrMemberAccess	x -> data		6213355	0					
ANR	6213404	Identifier	x		6213355	0					
ANR	6213405	Identifier	data		6213355	1					
ANR	6213406	Argument	data		6213355	1					
ANR	6213407	Identifier	data		6213355	0					
ANR	6213408	PrimaryExpression	0		6213355	1					
ANR	6213409	CompoundStatement		8:59:283:283	6213355	1					
ANR	6213410	ReturnStatement	return false ;	82:2:2124:2136	6213355	0	True				
ANR	6213411	Identifier	false		6213355	0					
ANR	6213412	ForStatement	for ( i = 0 ; i <= list -> list_level ; i ++ )		6213355	4					
ANR	6213413	ForInit	i = 0 ;	87:6:2254:2259	6213355	0	True				
ANR	6213414	AssignmentExpression	i = 0		6213355	0		=			
ANR	6213415	Identifier	i		6213355	0					
ANR	6213416	PrimaryExpression	0		6213355	1					
ANR	6213417	Condition	i <= list -> list_level	87:13:2261:2281	6213355	1	True				
ANR	6213418	RelationalExpression	i <= list -> list_level		6213355	0		<=			
ANR	6213419	Identifier	i		6213355	0					
ANR	6213420	PtrMemberAccess	list -> list_level		6213355	1					
ANR	6213421	Identifier	list		6213355	0					
ANR	6213422	Identifier	list_level		6213355	1					
ANR	6213423	PostIncDecOperationExpression	i ++	87:36:2284:2286	6213355	2	True				
ANR	6213424	Identifier	i		6213355	0					
ANR	6213425	IncDec	++		6213355	1					
ANR	6213426	CompoundStatement		14:41:452:452	6213355	3					
ANR	6213427	IfStatement	if ( update [ i ] -> forward [ i ] != x )		6213355	0					
ANR	6213428	Condition	update [ i ] -> forward [ i ] != x	88:6:2297:2322	6213355	0	True				
ANR	6213429	EqualityExpression	update [ i ] -> forward [ i ] != x		6213355	0		!=			
ANR	6213430	ArrayIndexing	update [ i ] -> forward [ i ]		6213355	0					
ANR	6213431	PtrMemberAccess	update [ i ] -> forward		6213355	0					
ANR	6213432	ArrayIndexing	update [ i ]		6213355	0					
ANR	6213433	Identifier	update		6213355	0					
ANR	6213434	Identifier	i		6213355	1					
ANR	6213435	Identifier	forward		6213355	1					
ANR	6213436	Identifier	i		6213355	1					
ANR	6213437	Identifier	x		6213355	1					
ANR	6213438	CompoundStatement		15:34:488:488	6213355	1					
ANR	6213439	BreakStatement	break ;	89:3:2330:2335	6213355	0	True				
ANR	6213440	ExpressionStatement	update [ i ] -> forward [ i ] = x -> forward [ i ]	91:2:2343:2380	6213355	1	True				
ANR	6213441	AssignmentExpression	update [ i ] -> forward [ i ] = x -> forward [ i ]		6213355	0		=			
ANR	6213442	ArrayIndexing	update [ i ] -> forward [ i ]		6213355	0					
ANR	6213443	PtrMemberAccess	update [ i ] -> forward		6213355	0					
ANR	6213444	ArrayIndexing	update [ i ]		6213355	0					
ANR	6213445	Identifier	update		6213355	0					
ANR	6213446	Identifier	i		6213355	1					
ANR	6213447	Identifier	forward		6213355	1					
ANR	6213448	Identifier	i		6213355	1					
ANR	6213449	ArrayIndexing	x -> forward [ i ]		6213355	1					
ANR	6213450	PtrMemberAccess	x -> forward		6213355	0					
ANR	6213451	Identifier	x		6213355	0					
ANR	6213452	Identifier	forward		6213355	1					
ANR	6213453	Identifier	i		6213355	1					
ANR	6213454	ExpressionStatement	"r_skiplist_node_free ( list , x )"	93:1:2386:2416	6213355	5	True				
ANR	6213455	CallExpression	"r_skiplist_node_free ( list , x )"		6213355	0					
ANR	6213456	Callee	r_skiplist_node_free		6213355	0					
ANR	6213457	Identifier	r_skiplist_node_free		6213355	0					
ANR	6213458	ArgumentList	list		6213355	1					
ANR	6213459	Argument	list		6213355	0					
ANR	6213460	Identifier	list		6213355	0					
ANR	6213461	Argument	x		6213355	1					
ANR	6213462	Identifier	x		6213355	0					
ANR	6213463	WhileStatement	while ( ( list -> list_level > 0 ) && ( list -> head -> forward [ list -> list_level ] == list -> head ) )		6213355	6					
ANR	6213464	Condition	( list -> list_level > 0 ) && ( list -> head -> forward [ list -> list_level ] == list -> head )	96:8:2460:2540	6213355	0	True				
ANR	6213465	AndExpression	( list -> list_level > 0 ) && ( list -> head -> forward [ list -> list_level ] == list -> head )		6213355	0		&&			
ANR	6213466	RelationalExpression	list -> list_level > 0		6213355	0		>			
ANR	6213467	PtrMemberAccess	list -> list_level		6213355	0					
ANR	6213468	Identifier	list		6213355	0					
ANR	6213469	Identifier	list_level		6213355	1					
ANR	6213470	PrimaryExpression	0		6213355	1					
ANR	6213471	EqualityExpression	list -> head -> forward [ list -> list_level ] == list -> head		6213355	1		==			
ANR	6213472	ArrayIndexing	list -> head -> forward [ list -> list_level ]		6213355	0					
ANR	6213473	PtrMemberAccess	list -> head -> forward		6213355	0					
ANR	6213474	PtrMemberAccess	list -> head		6213355	0					
ANR	6213475	Identifier	list		6213355	0					
ANR	6213476	Identifier	head		6213355	1					
ANR	6213477	Identifier	forward		6213355	1					
ANR	6213478	PtrMemberAccess	list -> list_level		6213355	1					
ANR	6213479	Identifier	list		6213355	0					
ANR	6213480	Identifier	list_level		6213355	1					
ANR	6213481	PtrMemberAccess	list -> head		6213355	1					
ANR	6213482	Identifier	list		6213355	0					
ANR	6213483	Identifier	head		6213355	1					
ANR	6213484	CompoundStatement		24:57:706:706	6213355	1					
ANR	6213485	ExpressionStatement	list -> list_level --	98:2:2547:2565	6213355	0	True				
ANR	6213486	PostIncDecOperationExpression	list -> list_level --		6213355	0					
ANR	6213487	PtrMemberAccess	list -> list_level		6213355	0					
ANR	6213488	Identifier	list		6213355	0					
ANR	6213489	Identifier	list_level		6213355	1					
ANR	6213490	IncDec	--		6213355	1					
ANR	6213491	ExpressionStatement	list -> size --	100:1:2571:2583	6213355	7	True				
ANR	6213492	PostIncDecOperationExpression	list -> size --		6213355	0					
ANR	6213493	PtrMemberAccess	list -> size		6213355	0					
ANR	6213494	Identifier	list		6213355	0					
ANR	6213495	Identifier	size		6213355	1					
ANR	6213496	IncDec	--		6213355	1					
ANR	6213497	ReturnStatement	return true ;	101:1:2586:2597	6213355	8	True				
ANR	6213498	Identifier	true		6213355	0					
ANR	6213499	ReturnType	static bool		6213355	1					
ANR	6213500	Identifier	delete_element		6213355	2					
ANR	6213501	ParameterList	"RSkipList * list , void * data , bool by_data"		6213355	3					
ANR	6213502	Parameter	RSkipList * list	74:27:1793:1807	6213355	0	True				
ANR	6213503	ParameterType	RSkipList *		6213355	0					
ANR	6213504	Identifier	list		6213355	1					
ANR	6213505	Parameter	void * data	74:44:1810:1819	6213355	1	True				
ANR	6213506	ParameterType	void *		6213355	0					
ANR	6213507	Identifier	data		6213355	1					
ANR	6213508	Parameter	bool by_data	74:56:1822:1833	6213355	2	True				
ANR	6213509	ParameterType	bool		6213355	0					
ANR	6213510	Identifier	by_data		6213355	1					
ANR	6213511	CFGEntryNode	ENTRY		6213355		True				
ANR	6213512	CFGExitNode	EXIT		6213355		True				
ANR	6213513	Symbol	* list -> list_level		6213355						
ANR	6213514	Symbol	* x		6213355						
ANR	6213515	Symbol	list -> head -> forward		6213355						
ANR	6213516	Symbol	* list -> head		6213355						
ANR	6213517	Symbol	data		6213355						
ANR	6213518	Symbol	* update		6213355						
ANR	6213519	Symbol	update		6213355						
ANR	6213520	Symbol	* x -> forward		6213355						
ANR	6213521	Symbol	* * x		6213355						
ANR	6213522	Symbol	* * list		6213355						
ANR	6213523	Symbol	by_data		6213355						
ANR	6213524	Symbol	x -> forward		6213355						
ANR	6213525	Symbol	x -> data		6213355						
ANR	6213526	Symbol	* * i		6213355						
ANR	6213527	Symbol	* * list -> head		6213355						
ANR	6213528	Symbol	* * * update		6213355						
ANR	6213529	Symbol	* * update		6213355						
ANR	6213530	Symbol	false		6213355						
ANR	6213531	Symbol	i		6213355						
ANR	6213532	Symbol	* update [ i ] -> forward		6213355						
ANR	6213533	Symbol	list		6213355						
ANR	6213534	Symbol	list -> size		6213355						
ANR	6213535	Symbol	update [ i ] -> forward		6213355						
ANR	6213536	Symbol	list -> head		6213355						
ANR	6213537	Symbol	* i		6213355						
ANR	6213538	Symbol	* * * list		6213355						
ANR	6213539	Symbol	* list		6213355						
ANR	6213540	Symbol	x		6213355						
ANR	6213541	Symbol	* * * i		6213355						
ANR	6213542	Symbol	true		6213355						
ANR	6213543	Symbol	find_insertpoint		6213355						
ANR	6213544	Symbol	list -> compare		6213355						
ANR	6213545	Symbol	* list -> head -> forward		6213355						
ANR	6213546	Symbol	list -> list_level		6213355						
ANR	6213547	Function	r_skiplist_new	108:0:2829:3227							
ANR	6213548	FunctionDef	"r_skiplist_new (RListFree freefn , RListComparator comparefn)"		6213547	0					
ANR	6213549	CompoundStatement		108:77:2906:3227	6213547	0					
ANR	6213550	IdentifierDeclStatement	RSkipList * list = R_NEW0 ( RSkipList ) ;	109:1:2909:2945	6213547	0	True				
ANR	6213551	IdentifierDecl	* list = R_NEW0 ( RSkipList )		6213547	0					
ANR	6213552	IdentifierDeclType	RSkipList *		6213547	0					
ANR	6213553	Identifier	list		6213547	1					
ANR	6213554	AssignmentExpression	* list = R_NEW0 ( RSkipList )		6213547	2		=			
ANR	6213555	Identifier	list		6213547	0					
ANR	6213556	CallExpression	R_NEW0 ( RSkipList )		6213547	1					
ANR	6213557	Callee	R_NEW0		6213547	0					
ANR	6213558	Identifier	R_NEW0		6213547	0					
ANR	6213559	ArgumentList	RSkipList		6213547	1					
ANR	6213560	Argument	RSkipList		6213547	0					
ANR	6213561	Identifier	RSkipList		6213547	0					
ANR	6213562	IfStatement	if ( ! list )		6213547	1					
ANR	6213563	Condition	! list	110:5:2952:2956	6213547	0	True				
ANR	6213564	UnaryOperationExpression	! list		6213547	0					
ANR	6213565	UnaryOperator	!		6213547	0					
ANR	6213566	Identifier	list		6213547	1					
ANR	6213567	CompoundStatement		3:12:52:52	6213547	1					
ANR	6213568	ReturnStatement	return NULL ;	111:2:2963:2974	6213547	0	True				
ANR	6213569	Identifier	NULL		6213547	0					
ANR	6213570	ExpressionStatement	"list -> head = r_skiplist_node_new ( NULL , SKIPLIST_MAX_DEPTH )"	114:1:2981:3040	6213547	2	True				
ANR	6213571	AssignmentExpression	"list -> head = r_skiplist_node_new ( NULL , SKIPLIST_MAX_DEPTH )"		6213547	0		=			
ANR	6213572	PtrMemberAccess	list -> head		6213547	0					
ANR	6213573	Identifier	list		6213547	0					
ANR	6213574	Identifier	head		6213547	1					
ANR	6213575	CallExpression	"r_skiplist_node_new ( NULL , SKIPLIST_MAX_DEPTH )"		6213547	1					
ANR	6213576	Callee	r_skiplist_node_new		6213547	0					
ANR	6213577	Identifier	r_skiplist_node_new		6213547	0					
ANR	6213578	ArgumentList	NULL		6213547	1					
ANR	6213579	Argument	NULL		6213547	0					
ANR	6213580	Identifier	NULL		6213547	0					
ANR	6213581	Argument	SKIPLIST_MAX_DEPTH		6213547	1					
ANR	6213582	Identifier	SKIPLIST_MAX_DEPTH		6213547	0					
ANR	6213583	IfStatement	if ( ! list -> head )		6213547	3					
ANR	6213584	Condition	! list -> head	115:5:3047:3057	6213547	0	True				
ANR	6213585	UnaryOperationExpression	! list -> head		6213547	0					
ANR	6213586	UnaryOperator	!		6213547	0					
ANR	6213587	PtrMemberAccess	list -> head		6213547	1					
ANR	6213588	Identifier	list		6213547	0					
ANR	6213589	Identifier	head		6213547	1					
ANR	6213590	CompoundStatement		8:18:153:153	6213547	1					
ANR	6213591	ExpressionStatement	free ( list )	116:2:3064:3075	6213547	0	True				
ANR	6213592	CallExpression	free ( list )		6213547	0					
ANR	6213593	Callee	free		6213547	0					
ANR	6213594	Identifier	free		6213547	0					
ANR	6213595	ArgumentList	list		6213547	1					
ANR	6213596	Argument	list		6213547	0					
ANR	6213597	Identifier	list		6213547	0					
ANR	6213598	ReturnStatement	return NULL ;	117:2:3079:3090	6213547	1	True				
ANR	6213599	Identifier	NULL		6213547	0					
ANR	6213600	ExpressionStatement	init_head ( list -> head )	120:1:3097:3119	6213547	4	True				
ANR	6213601	CallExpression	init_head ( list -> head )		6213547	0					
ANR	6213602	Callee	init_head		6213547	0					
ANR	6213603	Identifier	init_head		6213547	0					
ANR	6213604	ArgumentList	list -> head		6213547	1					
ANR	6213605	Argument	list -> head		6213547	0					
ANR	6213606	PtrMemberAccess	list -> head		6213547	0					
ANR	6213607	Identifier	list		6213547	0					
ANR	6213608	Identifier	head		6213547	1					
ANR	6213609	ExpressionStatement	list -> list_level = 0	121:1:3122:3142	6213547	5	True				
ANR	6213610	AssignmentExpression	list -> list_level = 0		6213547	0		=			
ANR	6213611	PtrMemberAccess	list -> list_level		6213547	0					
ANR	6213612	Identifier	list		6213547	0					
ANR	6213613	Identifier	list_level		6213547	1					
ANR	6213614	PrimaryExpression	0		6213547	1					
ANR	6213615	ExpressionStatement	list -> size = 0	122:1:3145:3159	6213547	6	True				
ANR	6213616	AssignmentExpression	list -> size = 0		6213547	0		=			
ANR	6213617	PtrMemberAccess	list -> size		6213547	0					
ANR	6213618	Identifier	list		6213547	0					
ANR	6213619	Identifier	size		6213547	1					
ANR	6213620	PrimaryExpression	0		6213547	1					
ANR	6213621	ExpressionStatement	list -> freefn = freefn	123:1:3162:3183	6213547	7	True				
ANR	6213622	AssignmentExpression	list -> freefn = freefn		6213547	0		=			
ANR	6213623	PtrMemberAccess	list -> freefn		6213547	0					
ANR	6213624	Identifier	list		6213547	0					
ANR	6213625	Identifier	freefn		6213547	1					
ANR	6213626	Identifier	freefn		6213547	1					
ANR	6213627	ExpressionStatement	list -> compare = comparefn	124:1:3186:3211	6213547	8	True				
ANR	6213628	AssignmentExpression	list -> compare = comparefn		6213547	0		=			
ANR	6213629	PtrMemberAccess	list -> compare		6213547	0					
ANR	6213630	Identifier	list		6213547	0					
ANR	6213631	Identifier	compare		6213547	1					
ANR	6213632	Identifier	comparefn		6213547	1					
ANR	6213633	ReturnStatement	return list ;	125:1:3214:3225	6213547	9	True				
ANR	6213634	Identifier	list		6213547	0					
ANR	6213635	ReturnType	R_API RSkipList *		6213547	1					
ANR	6213636	Identifier	r_skiplist_new		6213547	2					
ANR	6213637	ParameterList	"RListFree freefn , RListComparator comparefn"		6213547	3					
ANR	6213638	Parameter	RListFree freefn	108:32:2861:2876	6213547	0	True				
ANR	6213639	ParameterType	RListFree		6213547	0					
ANR	6213640	Identifier	freefn		6213547	1					
ANR	6213641	Parameter	RListComparator comparefn	108:50:2879:2903	6213547	1	True				
ANR	6213642	ParameterType	RListComparator		6213547	0					
ANR	6213643	Identifier	comparefn		6213547	1					
ANR	6213644	CFGEntryNode	ENTRY		6213547		True				
ANR	6213645	CFGExitNode	EXIT		6213547		True				
ANR	6213646	Symbol	NULL		6213547						
ANR	6213647	Symbol	comparefn		6213547						
ANR	6213648	Symbol	list -> freefn		6213547						
ANR	6213649	Symbol	r_skiplist_node_new		6213547						
ANR	6213650	Symbol	list		6213547						
ANR	6213651	Symbol	RSkipList		6213547						
ANR	6213652	Symbol	list -> size		6213547						
ANR	6213653	Symbol	freefn		6213547						
ANR	6213654	Symbol	list -> head		6213547						
ANR	6213655	Symbol	R_NEW0		6213547						
ANR	6213656	Symbol	SKIPLIST_MAX_DEPTH		6213547						
ANR	6213657	Symbol	* list		6213547						
ANR	6213658	Symbol	list -> compare		6213547						
ANR	6213659	Symbol	list -> list_level		6213547						
ANR	6213660	Function	r_skiplist_purge	129:0:3267:3563							
ANR	6213661	FunctionDef	r_skiplist_purge (RSkipList * list)		6213660	0					
ANR	6213662	CompoundStatement		129:45:3312:3563	6213660	0					
ANR	6213663	IdentifierDeclStatement	RSkipListNode * n ;	130:1:3315:3331	6213660	0	True				
ANR	6213664	IdentifierDecl	* n		6213660	0					
ANR	6213665	IdentifierDeclType	RSkipListNode *		6213660	0					
ANR	6213666	Identifier	n		6213660	1					
ANR	6213667	IfStatement	if ( ! list )		6213660	1					
ANR	6213668	Condition	! list	131:5:3338:3342	6213660	0	True				
ANR	6213669	UnaryOperationExpression	! list		6213660	0					
ANR	6213670	UnaryOperator	!		6213660	0					
ANR	6213671	Identifier	list		6213660	1					
ANR	6213672	CompoundStatement		3:12:32:32	6213660	1					
ANR	6213673	ReturnStatement	return ;	132:2:3349:3355	6213660	0	True				
ANR	6213674	ExpressionStatement	n = list -> head -> forward [ 0 ]	134:1:3361:3387	6213660	2	True				
ANR	6213675	AssignmentExpression	n = list -> head -> forward [ 0 ]		6213660	0		=			
ANR	6213676	Identifier	n		6213660	0					
ANR	6213677	ArrayIndexing	list -> head -> forward [ 0 ]		6213660	1					
ANR	6213678	PtrMemberAccess	list -> head -> forward		6213660	0					
ANR	6213679	PtrMemberAccess	list -> head		6213660	0					
ANR	6213680	Identifier	list		6213660	0					
ANR	6213681	Identifier	head		6213660	1					
ANR	6213682	Identifier	forward		6213660	1					
ANR	6213683	PrimaryExpression	0		6213660	1					
ANR	6213684	WhileStatement	while ( n != list -> head )		6213660	3					
ANR	6213685	Condition	n != list -> head	135:8:3397:3411	6213660	0	True				
ANR	6213686	EqualityExpression	n != list -> head		6213660	0		!=			
ANR	6213687	Identifier	n		6213660	0					
ANR	6213688	PtrMemberAccess	list -> head		6213660	1					
ANR	6213689	Identifier	list		6213660	0					
ANR	6213690	Identifier	head		6213660	1					
ANR	6213691	CompoundStatement		8:2:105:125	6213660	1					
ANR	6213692	IdentifierDeclStatement	RSkipListNode * x = n ;	136:2:3418:3438	6213660	0	True				
ANR	6213693	IdentifierDecl	* x = n		6213660	0					
ANR	6213694	IdentifierDeclType	RSkipListNode *		6213660	0					
ANR	6213695	Identifier	x		6213660	1					
ANR	6213696	AssignmentExpression	* x = n		6213660	2		=			
ANR	6213697	Identifier	n		6213660	0					
ANR	6213698	Identifier	n		6213660	1					
ANR	6213699	ExpressionStatement	n = n -> forward [ 0 ]	137:2:3442:3459	6213660	1	True				
ANR	6213700	AssignmentExpression	n = n -> forward [ 0 ]		6213660	0		=			
ANR	6213701	Identifier	n		6213660	0					
ANR	6213702	ArrayIndexing	n -> forward [ 0 ]		6213660	1					
ANR	6213703	PtrMemberAccess	n -> forward		6213660	0					
ANR	6213704	Identifier	n		6213660	0					
ANR	6213705	Identifier	forward		6213660	1					
ANR	6213706	PrimaryExpression	0		6213660	1					
ANR	6213707	ExpressionStatement	"r_skiplist_node_free ( list , x )"	138:2:3463:3493	6213660	2	True				
ANR	6213708	CallExpression	"r_skiplist_node_free ( list , x )"		6213660	0					
ANR	6213709	Callee	r_skiplist_node_free		6213660	0					
ANR	6213710	Identifier	r_skiplist_node_free		6213660	0					
ANR	6213711	ArgumentList	list		6213660	1					
ANR	6213712	Argument	list		6213660	0					
ANR	6213713	Identifier	list		6213660	0					
ANR	6213714	Argument	x		6213660	1					
ANR	6213715	Identifier	x		6213660	0					
ANR	6213716	ExpressionStatement	init_head ( list -> head )	140:1:3499:3521	6213660	4	True				
ANR	6213717	CallExpression	init_head ( list -> head )		6213660	0					
ANR	6213718	Callee	init_head		6213660	0					
ANR	6213719	Identifier	init_head		6213660	0					
ANR	6213720	ArgumentList	list -> head		6213660	1					
ANR	6213721	Argument	list -> head		6213660	0					
ANR	6213722	PtrMemberAccess	list -> head		6213660	0					
ANR	6213723	Identifier	list		6213660	0					
ANR	6213724	Identifier	head		6213660	1					
ANR	6213725	ExpressionStatement	list -> size = 0	141:1:3524:3538	6213660	5	True				
ANR	6213726	AssignmentExpression	list -> size = 0		6213660	0		=			
ANR	6213727	PtrMemberAccess	list -> size		6213660	0					
ANR	6213728	Identifier	list		6213660	0					
ANR	6213729	Identifier	size		6213660	1					
ANR	6213730	PrimaryExpression	0		6213660	1					
ANR	6213731	ExpressionStatement	list -> list_level = 0	142:1:3541:3561	6213660	6	True				
ANR	6213732	AssignmentExpression	list -> list_level = 0		6213660	0		=			
ANR	6213733	PtrMemberAccess	list -> list_level		6213660	0					
ANR	6213734	Identifier	list		6213660	0					
ANR	6213735	Identifier	list_level		6213660	1					
ANR	6213736	PrimaryExpression	0		6213660	1					
ANR	6213737	ReturnType	R_API void		6213660	1					
ANR	6213738	Identifier	r_skiplist_purge		6213660	2					
ANR	6213739	ParameterList	RSkipList * list		6213660	3					
ANR	6213740	Parameter	RSkipList * list	129:28:3295:3309	6213660	0	True				
ANR	6213741	ParameterType	RSkipList *		6213660	0					
ANR	6213742	Identifier	list		6213660	1					
ANR	6213743	CFGEntryNode	ENTRY		6213660		True				
ANR	6213744	CFGExitNode	EXIT		6213660		True				
ANR	6213745	Symbol	* list -> head		6213660						
ANR	6213746	Symbol	list -> head -> forward		6213660						
ANR	6213747	Symbol	* * list -> head		6213660						
ANR	6213748	Symbol	* n -> forward		6213660						
ANR	6213749	Symbol	list		6213660						
ANR	6213750	Symbol	list -> size		6213660						
ANR	6213751	Symbol	n		6213660						
ANR	6213752	Symbol	list -> head		6213660						
ANR	6213753	Symbol	* * list		6213660						
ANR	6213754	Symbol	* * * list		6213660						
ANR	6213755	Symbol	* list		6213660						
ANR	6213756	Symbol	x		6213660						
ANR	6213757	Symbol	n -> forward		6213660						
ANR	6213758	Symbol	* n		6213660						
ANR	6213759	Symbol	* list -> head -> forward		6213660						
ANR	6213760	Symbol	* * n		6213660						
ANR	6213761	Symbol	list -> list_level		6213660						
ANR	6213762	Function	r_skiplist_free	146:0:3632:3787							
ANR	6213763	FunctionDef	r_skiplist_free (RSkipList * list)		6213762	0					
ANR	6213764	CompoundStatement		146:44:3676:3787	6213762	0					
ANR	6213765	IfStatement	if ( ! list )		6213762	0					
ANR	6213766	Condition	! list	147:5:3683:3687	6213762	0	True				
ANR	6213767	UnaryOperationExpression	! list		6213762	0					
ANR	6213768	UnaryOperator	!		6213762	0					
ANR	6213769	Identifier	list		6213762	1					
ANR	6213770	CompoundStatement		2:12:13:13	6213762	1					
ANR	6213771	ReturnStatement	return ;	148:2:3694:3700	6213762	0	True				
ANR	6213772	ExpressionStatement	r_skiplist_purge ( list )	150:1:3706:3729	6213762	1	True				
ANR	6213773	CallExpression	r_skiplist_purge ( list )		6213762	0					
ANR	6213774	Callee	r_skiplist_purge		6213762	0					
ANR	6213775	Identifier	r_skiplist_purge		6213762	0					
ANR	6213776	ArgumentList	list		6213762	1					
ANR	6213777	Argument	list		6213762	0					
ANR	6213778	Identifier	list		6213762	0					
ANR	6213779	ExpressionStatement	"r_skiplist_node_free ( list , list -> head )"	151:1:3732:3771	6213762	2	True				
ANR	6213780	CallExpression	"r_skiplist_node_free ( list , list -> head )"		6213762	0					
ANR	6213781	Callee	r_skiplist_node_free		6213762	0					
ANR	6213782	Identifier	r_skiplist_node_free		6213762	0					
ANR	6213783	ArgumentList	list		6213762	1					
ANR	6213784	Argument	list		6213762	0					
ANR	6213785	Identifier	list		6213762	0					
ANR	6213786	Argument	list -> head		6213762	1					
ANR	6213787	PtrMemberAccess	list -> head		6213762	0					
ANR	6213788	Identifier	list		6213762	0					
ANR	6213789	Identifier	head		6213762	1					
ANR	6213790	ExpressionStatement	free ( list )	152:1:3774:3785	6213762	3	True				
ANR	6213791	CallExpression	free ( list )		6213762	0					
ANR	6213792	Callee	free		6213762	0					
ANR	6213793	Identifier	free		6213762	0					
ANR	6213794	ArgumentList	list		6213762	1					
ANR	6213795	Argument	list		6213762	0					
ANR	6213796	Identifier	list		6213762	0					
ANR	6213797	ReturnType	R_API void		6213762	1					
ANR	6213798	Identifier	r_skiplist_free		6213762	2					
ANR	6213799	ParameterList	RSkipList * list		6213762	3					
ANR	6213800	Parameter	RSkipList * list	146:27:3659:3673	6213762	0	True				
ANR	6213801	ParameterType	RSkipList *		6213762	0					
ANR	6213802	Identifier	list		6213762	1					
ANR	6213803	CFGEntryNode	ENTRY		6213762		True				
ANR	6213804	CFGExitNode	EXIT		6213762		True				
ANR	6213805	Symbol	list -> head		6213762						
ANR	6213806	Symbol	* list		6213762						
ANR	6213807	Symbol	list		6213762						
ANR	6213808	Function	r_skiplist_insert	157:0:3877:5080							
ANR	6213809	FunctionDef	"r_skiplist_insert (RSkipList * list , void * data)"		6213808	0					
ANR	6213810	CompoundStatement		157:68:3945:5080	6213808	0					
ANR	6213811	IdentifierDeclStatement	RSkipListNode * update [ SKIPLIST_MAX_DEPTH + 1 ] ;	158:1:3948:3993	6213808	0	True				
ANR	6213812	IdentifierDecl	* update [ SKIPLIST_MAX_DEPTH + 1 ]		6213808	0					
ANR	6213813	IdentifierDeclType	RSkipListNode * [ SKIPLIST_MAX_DEPTH + 1 ]		6213808	0					
ANR	6213814	Identifier	update		6213808	1					
ANR	6213815	AdditiveExpression	SKIPLIST_MAX_DEPTH + 1		6213808	2		+			
ANR	6213816	Identifier	SKIPLIST_MAX_DEPTH		6213808	0					
ANR	6213817	PrimaryExpression	1		6213808	1					
ANR	6213818	IdentifierDeclStatement	RSkipListNode * x ;	159:1:3996:4012	6213808	1	True				
ANR	6213819	IdentifierDecl	* x		6213808	0					
ANR	6213820	IdentifierDeclType	RSkipListNode *		6213808	0					
ANR	6213821	Identifier	x		6213808	1					
ANR	6213822	IdentifierDeclStatement	"int i , x_level , new_level ;"	160:1:4015:4040	6213808	2	True				
ANR	6213823	IdentifierDecl	i		6213808	0					
ANR	6213824	IdentifierDeclType	int		6213808	0					
ANR	6213825	Identifier	i		6213808	1					
ANR	6213826	IdentifierDecl	x_level		6213808	1					
ANR	6213827	IdentifierDeclType	int		6213808	0					
ANR	6213828	Identifier	x_level		6213808	1					
ANR	6213829	IdentifierDecl	new_level		6213808	2					
ANR	6213830	IdentifierDeclType	int		6213808	0					
ANR	6213831	Identifier	new_level		6213808	1					
ANR	6213832	ExpressionStatement	"x = find_insertpoint ( list , data , update , true )"	163:1:4099:4146	6213808	3	True				
ANR	6213833	AssignmentExpression	"x = find_insertpoint ( list , data , update , true )"		6213808	0		=			
ANR	6213834	Identifier	x		6213808	0					
ANR	6213835	CallExpression	"find_insertpoint ( list , data , update , true )"		6213808	1					
ANR	6213836	Callee	find_insertpoint		6213808	0					
ANR	6213837	Identifier	find_insertpoint		6213808	0					
ANR	6213838	ArgumentList	list		6213808	1					
ANR	6213839	Argument	list		6213808	0					
ANR	6213840	Identifier	list		6213808	0					
ANR	6213841	Argument	data		6213808	1					
ANR	6213842	Identifier	data		6213808	0					
ANR	6213843	Argument	update		6213808	2					
ANR	6213844	Identifier	update		6213808	0					
ANR	6213845	Argument	true		6213808	3					
ANR	6213846	Identifier	true		6213808	0					
ANR	6213847	IfStatement	"if ( x != list -> head && ! list -> compare ( x -> data , data ) )"		6213808	4					
ANR	6213848	Condition	"x != list -> head && ! list -> compare ( x -> data , data )"	165:5:4206:4253	6213808	0	True				
ANR	6213849	AndExpression	"x != list -> head && ! list -> compare ( x -> data , data )"		6213808	0		&&			
ANR	6213850	EqualityExpression	x != list -> head		6213808	0		!=			
ANR	6213851	Identifier	x		6213808	0					
ANR	6213852	PtrMemberAccess	list -> head		6213808	1					
ANR	6213853	Identifier	list		6213808	0					
ANR	6213854	Identifier	head		6213808	1					
ANR	6213855	UnaryOperationExpression	"! list -> compare ( x -> data , data )"		6213808	1					
ANR	6213856	UnaryOperator	!		6213808	0					
ANR	6213857	CallExpression	"list -> compare ( x -> data , data )"		6213808	1					
ANR	6213858	Callee	list -> compare		6213808	0					
ANR	6213859	PtrMemberAccess	list -> compare		6213808	0					
ANR	6213860	Identifier	list		6213808	0					
ANR	6213861	Identifier	compare		6213808	1					
ANR	6213862	ArgumentList	x -> data		6213808	1					
ANR	6213863	Argument	x -> data		6213808	0					
ANR	6213864	PtrMemberAccess	x -> data		6213808	0					
ANR	6213865	Identifier	x		6213808	0					
ANR	6213866	Identifier	data		6213808	1					
ANR	6213867	Argument	data		6213808	1					
ANR	6213868	Identifier	data		6213808	0					
ANR	6213869	CompoundStatement		9:55:310:310	6213808	1					
ANR	6213870	ReturnStatement	return x ;	166:2:4260:4268	6213808	0	True				
ANR	6213871	Identifier	x		6213808	0					
ANR	6213872	ForStatement	for ( x_level = 0 ; rand ( ) < RAND_MAX / 2 && x_level < SKIPLIST_MAX_DEPTH ; x_level ++ )		6213808	5					
ANR	6213873	ForInit	x_level = 0 ;	170:6:4349:4360	6213808	0	True				
ANR	6213874	AssignmentExpression	x_level = 0		6213808	0		=			
ANR	6213875	Identifier	x_level		6213808	0					
ANR	6213876	PrimaryExpression	0		6213808	1					
ANR	6213877	Condition	rand ( ) < RAND_MAX / 2 && x_level < SKIPLIST_MAX_DEPTH	170:19:4362:4415	6213808	1	True				
ANR	6213878	AndExpression	rand ( ) < RAND_MAX / 2 && x_level < SKIPLIST_MAX_DEPTH		6213808	0		&&			
ANR	6213879	RelationalExpression	rand ( ) < RAND_MAX / 2		6213808	0		<			
ANR	6213880	CallExpression	rand ( )		6213808	0					
ANR	6213881	Callee	rand		6213808	0					
ANR	6213882	Identifier	rand		6213808	0					
ANR	6213883	ArgumentList			6213808	1					
ANR	6213884	MultiplicativeExpression	RAND_MAX / 2		6213808	1		/			
ANR	6213885	Identifier	RAND_MAX		6213808	0					
ANR	6213886	PrimaryExpression	2		6213808	1					
ANR	6213887	RelationalExpression	x_level < SKIPLIST_MAX_DEPTH		6213808	1		<			
ANR	6213888	Identifier	x_level		6213808	0					
ANR	6213889	Identifier	SKIPLIST_MAX_DEPTH		6213808	1					
ANR	6213890	PostIncDecOperationExpression	x_level ++	170:75:4418:4426	6213808	2	True				
ANR	6213891	Identifier	x_level		6213808	0					
ANR	6213892	IncDec	++		6213808	1					
ANR	6213893	CompoundStatement		14:86:483:483	6213808	3					
ANR	6213894	ExpressionStatement		171:2:4433:4433	6213808	0	True				
ANR	6213895	ExpressionStatement	new_level = list -> list_level	176:1:4557:4585	6213808	6	True				
ANR	6213896	AssignmentExpression	new_level = list -> list_level		6213808	0		=			
ANR	6213897	Identifier	new_level		6213808	0					
ANR	6213898	PtrMemberAccess	list -> list_level		6213808	1					
ANR	6213899	Identifier	list		6213808	0					
ANR	6213900	Identifier	list_level		6213808	1					
ANR	6213901	IfStatement	if ( x_level > list -> list_level )		6213808	7					
ANR	6213902	Condition	x_level > list -> list_level	177:5:4592:4617	6213808	0	True				
ANR	6213903	RelationalExpression	x_level > list -> list_level		6213808	0		>			
ANR	6213904	Identifier	x_level		6213808	0					
ANR	6213905	PtrMemberAccess	list -> list_level		6213808	1					
ANR	6213906	Identifier	list		6213808	0					
ANR	6213907	Identifier	list_level		6213808	1					
ANR	6213908	CompoundStatement		21:33:674:674	6213808	1					
ANR	6213909	ForStatement	for ( i = list -> list_level + 1 ; i <= x_level ; i ++ )		6213808	0					
ANR	6213910	ForInit	i = list -> list_level + 1 ;	178:7:4629:4653	6213808	0	True				
ANR	6213911	AssignmentExpression	i = list -> list_level + 1		6213808	0		=			
ANR	6213912	Identifier	i		6213808	0					
ANR	6213913	AdditiveExpression	list -> list_level + 1		6213808	1		+			
ANR	6213914	PtrMemberAccess	list -> list_level		6213808	0					
ANR	6213915	Identifier	list		6213808	0					
ANR	6213916	Identifier	list_level		6213808	1					
ANR	6213917	PrimaryExpression	1		6213808	1					
ANR	6213918	Condition	i <= x_level	178:33:4655:4666	6213808	1	True				
ANR	6213919	RelationalExpression	i <= x_level		6213808	0		<=			
ANR	6213920	Identifier	i		6213808	0					
ANR	6213921	Identifier	x_level		6213808	1					
ANR	6213922	PostIncDecOperationExpression	i ++	178:47:4669:4671	6213808	2	True				
ANR	6213923	Identifier	i		6213808	0					
ANR	6213924	IncDec	++		6213808	1					
ANR	6213925	CompoundStatement		22:52:728:728	6213808	3					
ANR	6213926	ExpressionStatement	update [ i ] = list -> head	179:3:4679:4701	6213808	0	True				
ANR	6213927	AssignmentExpression	update [ i ] = list -> head		6213808	0		=			
ANR	6213928	ArrayIndexing	update [ i ]		6213808	0					
ANR	6213929	Identifier	update		6213808	0					
ANR	6213930	Identifier	i		6213808	1					
ANR	6213931	PtrMemberAccess	list -> head		6213808	1					
ANR	6213932	Identifier	list		6213808	0					
ANR	6213933	Identifier	head		6213808	1					
ANR	6213934	ExpressionStatement	new_level = x_level	181:2:4709:4728	6213808	1	True				
ANR	6213935	AssignmentExpression	new_level = x_level		6213808	0		=			
ANR	6213936	Identifier	new_level		6213808	0					
ANR	6213937	Identifier	x_level		6213808	1					
ANR	6213938	ExpressionStatement	"x = r_skiplist_node_new ( data , x_level )"	184:1:4735:4774	6213808	8	True				
ANR	6213939	AssignmentExpression	"x = r_skiplist_node_new ( data , x_level )"		6213808	0		=			
ANR	6213940	Identifier	x		6213808	0					
ANR	6213941	CallExpression	"r_skiplist_node_new ( data , x_level )"		6213808	1					
ANR	6213942	Callee	r_skiplist_node_new		6213808	0					
ANR	6213943	Identifier	r_skiplist_node_new		6213808	0					
ANR	6213944	ArgumentList	data		6213808	1					
ANR	6213945	Argument	data		6213808	0					
ANR	6213946	Identifier	data		6213808	0					
ANR	6213947	Argument	x_level		6213808	1					
ANR	6213948	Identifier	x_level		6213808	0					
ANR	6213949	IfStatement	if ( ! x )		6213808	9					
ANR	6213950	Condition	! x	185:5:4781:4782	6213808	0	True				
ANR	6213951	UnaryOperationExpression	! x		6213808	0					
ANR	6213952	UnaryOperator	!		6213808	0					
ANR	6213953	Identifier	x		6213808	1					
ANR	6213954	CompoundStatement		29:9:839:839	6213808	1					
ANR	6213955	ReturnStatement	return NULL ;	186:2:4789:4800	6213808	0	True				
ANR	6213956	Identifier	NULL		6213808	0					
ANR	6213957	ForStatement	for ( i = 0 ; i <= x_level ; i ++ )		6213808	10					
ANR	6213958	ForInit	i = 0 ;	191:6:4921:4926	6213808	0	True				
ANR	6213959	AssignmentExpression	i = 0		6213808	0		=			
ANR	6213960	Identifier	i		6213808	0					
ANR	6213961	PrimaryExpression	0		6213808	1					
ANR	6213962	Condition	i <= x_level	191:13:4928:4939	6213808	1	True				
ANR	6213963	RelationalExpression	i <= x_level		6213808	0		<=			
ANR	6213964	Identifier	i		6213808	0					
ANR	6213965	Identifier	x_level		6213808	1					
ANR	6213966	PostIncDecOperationExpression	i ++	191:27:4942:4944	6213808	2	True				
ANR	6213967	Identifier	i		6213808	0					
ANR	6213968	IncDec	++		6213808	1					
ANR	6213969	CompoundStatement		35:32:1001:1001	6213808	3					
ANR	6213970	ExpressionStatement	x -> forward [ i ] = update [ i ] -> forward [ i ]	192:2:4951:4988	6213808	0	True				
ANR	6213971	AssignmentExpression	x -> forward [ i ] = update [ i ] -> forward [ i ]		6213808	0		=			
ANR	6213972	ArrayIndexing	x -> forward [ i ]		6213808	0					
ANR	6213973	PtrMemberAccess	x -> forward		6213808	0					
ANR	6213974	Identifier	x		6213808	0					
ANR	6213975	Identifier	forward		6213808	1					
ANR	6213976	Identifier	i		6213808	1					
ANR	6213977	ArrayIndexing	update [ i ] -> forward [ i ]		6213808	1					
ANR	6213978	PtrMemberAccess	update [ i ] -> forward		6213808	0					
ANR	6213979	ArrayIndexing	update [ i ]		6213808	0					
ANR	6213980	Identifier	update		6213808	0					
ANR	6213981	Identifier	i		6213808	1					
ANR	6213982	Identifier	forward		6213808	1					
ANR	6213983	Identifier	i		6213808	1					
ANR	6213984	ExpressionStatement	update [ i ] -> forward [ i ] = x	193:2:4992:5017	6213808	1	True				
ANR	6213985	AssignmentExpression	update [ i ] -> forward [ i ] = x		6213808	0		=			
ANR	6213986	ArrayIndexing	update [ i ] -> forward [ i ]		6213808	0					
ANR	6213987	PtrMemberAccess	update [ i ] -> forward		6213808	0					
ANR	6213988	ArrayIndexing	update [ i ]		6213808	0					
ANR	6213989	Identifier	update		6213808	0					
ANR	6213990	Identifier	i		6213808	1					
ANR	6213991	Identifier	forward		6213808	1					
ANR	6213992	Identifier	i		6213808	1					
ANR	6213993	Identifier	x		6213808	1					
ANR	6213994	ExpressionStatement	list -> list_level = new_level	196:1:5024:5052	6213808	11	True				
ANR	6213995	AssignmentExpression	list -> list_level = new_level		6213808	0		=			
ANR	6213996	PtrMemberAccess	list -> list_level		6213808	0					
ANR	6213997	Identifier	list		6213808	0					
ANR	6213998	Identifier	list_level		6213808	1					
ANR	6213999	Identifier	new_level		6213808	1					
ANR	6214000	ExpressionStatement	list -> size ++	197:1:5055:5067	6213808	12	True				
ANR	6214001	PostIncDecOperationExpression	list -> size ++		6213808	0					
ANR	6214002	PtrMemberAccess	list -> size		6213808	0					
ANR	6214003	Identifier	list		6213808	0					
ANR	6214004	Identifier	size		6213808	1					
ANR	6214005	IncDec	++		6213808	1					
ANR	6214006	ReturnStatement	return x ;	198:1:5070:5078	6213808	13	True				
ANR	6214007	Identifier	x		6213808	0					
ANR	6214008	ReturnType	R_API RSkipListNode *		6213808	1					
ANR	6214009	Identifier	r_skiplist_insert		6213808	2					
ANR	6214010	ParameterList	"RSkipList * list , void * data"		6213808	3					
ANR	6214011	Parameter	RSkipList * list	157:39:3916:3930	6213808	0	True				
ANR	6214012	ParameterType	RSkipList *		6213808	0					
ANR	6214013	Identifier	list		6213808	1					
ANR	6214014	Parameter	void * data	157:56:3933:3942	6213808	1	True				
ANR	6214015	ParameterType	void *		6213808	0					
ANR	6214016	Identifier	data		6213808	1					
ANR	6214017	CFGEntryNode	ENTRY		6213808		True				
ANR	6214018	CFGExitNode	EXIT		6213808		True				
ANR	6214019	Symbol	* x		6213808						
ANR	6214020	Symbol	data		6213808						
ANR	6214021	Symbol	* update		6213808						
ANR	6214022	Symbol	update		6213808						
ANR	6214023	Symbol	rand		6213808						
ANR	6214024	Symbol	* x -> forward		6213808						
ANR	6214025	Symbol	* * x		6213808						
ANR	6214026	Symbol	x_level		6213808						
ANR	6214027	Symbol	x -> forward		6213808						
ANR	6214028	Symbol	x -> data		6213808						
ANR	6214029	Symbol	* * i		6213808						
ANR	6214030	Symbol	NULL		6213808						
ANR	6214031	Symbol	new_level		6213808						
ANR	6214032	Symbol	* * * update		6213808						
ANR	6214033	Symbol	* * update		6213808						
ANR	6214034	Symbol	i		6213808						
ANR	6214035	Symbol	r_skiplist_node_new		6213808						
ANR	6214036	Symbol	* update [ i ] -> forward		6213808						
ANR	6214037	Symbol	list		6213808						
ANR	6214038	Symbol	list -> size		6213808						
ANR	6214039	Symbol	update [ i ] -> forward		6213808						
ANR	6214040	Symbol	list -> head		6213808						
ANR	6214041	Symbol	RAND_MAX		6213808						
ANR	6214042	Symbol	SKIPLIST_MAX_DEPTH		6213808						
ANR	6214043	Symbol	* i		6213808						
ANR	6214044	Symbol	* list		6213808						
ANR	6214045	Symbol	x		6213808						
ANR	6214046	Symbol	true		6213808						
ANR	6214047	Symbol	* * * i		6213808						
ANR	6214048	Symbol	find_insertpoint		6213808						
ANR	6214049	Symbol	list -> compare		6213808						
ANR	6214050	Symbol	list -> list_level		6213808						
ANR	6214051	Function	r_skiplist_delete	202:0:5125:5228							
ANR	6214052	FunctionDef	"r_skiplist_delete (RSkipList * list , void * data)"		6214051	0					
ANR	6214053	CompoundStatement		202:58:5183:5228	6214051	0					
ANR	6214054	ReturnStatement	"return delete_element ( list , data , true ) ;"	203:1:5186:5226	6214051	0	True				
ANR	6214055	CallExpression	"delete_element ( list , data , true )"		6214051	0					
ANR	6214056	Callee	delete_element		6214051	0					
ANR	6214057	Identifier	delete_element		6214051	0					
ANR	6214058	ArgumentList	list		6214051	1					
ANR	6214059	Argument	list		6214051	0					
ANR	6214060	Identifier	list		6214051	0					
ANR	6214061	Argument	data		6214051	1					
ANR	6214062	Identifier	data		6214051	0					
ANR	6214063	Argument	true		6214051	2					
ANR	6214064	Identifier	true		6214051	0					
ANR	6214065	ReturnType	R_API bool		6214051	1					
ANR	6214066	Identifier	r_skiplist_delete		6214051	2					
ANR	6214067	ParameterList	"RSkipList * list , void * data"		6214051	3					
ANR	6214068	Parameter	RSkipList * list	202:29:5154:5168	6214051	0	True				
ANR	6214069	ParameterType	RSkipList *		6214051	0					
ANR	6214070	Identifier	list		6214051	1					
ANR	6214071	Parameter	void * data	202:46:5171:5180	6214051	1	True				
ANR	6214072	ParameterType	void *		6214051	0					
ANR	6214073	Identifier	data		6214051	1					
ANR	6214074	CFGEntryNode	ENTRY		6214051		True				
ANR	6214075	CFGExitNode	EXIT		6214051		True				
ANR	6214076	Symbol	delete_element		6214051						
ANR	6214077	Symbol	data		6214051						
ANR	6214078	Symbol	true		6214051						
ANR	6214079	Symbol	list		6214051						
ANR	6214080	Function	r_skiplist_delete_node	207:0:5283:5401							
ANR	6214081	FunctionDef	"r_skiplist_delete_node (RSkipList * list , RSkipListNode * node)"		6214080	0					
ANR	6214082	CompoundStatement		207:72:5355:5401	6214080	0					
ANR	6214083	ReturnStatement	"return delete_element ( list , node , false ) ;"	208:1:5358:5399	6214080	0	True				
ANR	6214084	CallExpression	"delete_element ( list , node , false )"		6214080	0					
ANR	6214085	Callee	delete_element		6214080	0					
ANR	6214086	Identifier	delete_element		6214080	0					
ANR	6214087	ArgumentList	list		6214080	1					
ANR	6214088	Argument	list		6214080	0					
ANR	6214089	Identifier	list		6214080	0					
ANR	6214090	Argument	node		6214080	1					
ANR	6214091	Identifier	node		6214080	0					
ANR	6214092	Argument	false		6214080	2					
ANR	6214093	Identifier	false		6214080	0					
ANR	6214094	ReturnType	R_API bool		6214080	1					
ANR	6214095	Identifier	r_skiplist_delete_node		6214080	2					
ANR	6214096	ParameterList	"RSkipList * list , RSkipListNode * node"		6214080	3					
ANR	6214097	Parameter	RSkipList * list	207:34:5317:5331	6214080	0	True				
ANR	6214098	ParameterType	RSkipList *		6214080	0					
ANR	6214099	Identifier	list		6214080	1					
ANR	6214100	Parameter	RSkipListNode * node	207:51:5334:5352	6214080	1	True				
ANR	6214101	ParameterType	RSkipListNode *		6214080	0					
ANR	6214102	Identifier	node		6214080	1					
ANR	6214103	CFGEntryNode	ENTRY		6214080		True				
ANR	6214104	CFGExitNode	EXIT		6214080		True				
ANR	6214105	Symbol	node		6214080						
ANR	6214106	Symbol	delete_element		6214080						
ANR	6214107	Symbol	false		6214080						
ANR	6214108	Symbol	list		6214080						
ANR	6214109	Function	r_skiplist_find	211:0:5404:5626							
ANR	6214110	FunctionDef	"r_skiplist_find (RSkipList * list , void * data)"		6214109	0					
ANR	6214111	CompoundStatement		211:66:5470:5626	6214109	0					
ANR	6214112	IdentifierDeclStatement	"RSkipListNode * x = find_insertpoint ( list , data , NULL , true ) ;"	212:1:5473:5533	6214109	0	True				
ANR	6214113	IdentifierDecl	"* x = find_insertpoint ( list , data , NULL , true )"		6214109	0					
ANR	6214114	IdentifierDeclType	RSkipListNode *		6214109	0					
ANR	6214115	Identifier	x		6214109	1					
ANR	6214116	AssignmentExpression	"* x = find_insertpoint ( list , data , NULL , true )"		6214109	2		=			
ANR	6214117	Identifier	x		6214109	0					
ANR	6214118	CallExpression	"find_insertpoint ( list , data , NULL , true )"		6214109	1					
ANR	6214119	Callee	find_insertpoint		6214109	0					
ANR	6214120	Identifier	find_insertpoint		6214109	0					
ANR	6214121	ArgumentList	list		6214109	1					
ANR	6214122	Argument	list		6214109	0					
ANR	6214123	Identifier	list		6214109	0					
ANR	6214124	Argument	data		6214109	1					
ANR	6214125	Identifier	data		6214109	0					
ANR	6214126	Argument	NULL		6214109	2					
ANR	6214127	Identifier	NULL		6214109	0					
ANR	6214128	Argument	true		6214109	3					
ANR	6214129	Identifier	true		6214109	0					
ANR	6214130	IfStatement	"if ( x != list -> head && list -> compare ( x -> data , data ) == 0 )"		6214109	1					
ANR	6214131	Condition	"x != list -> head && list -> compare ( x -> data , data ) == 0"	213:5:5540:5592	6214109	0	True				
ANR	6214132	AndExpression	"x != list -> head && list -> compare ( x -> data , data ) == 0"		6214109	0		&&			
ANR	6214133	EqualityExpression	x != list -> head		6214109	0		!=			
ANR	6214134	Identifier	x		6214109	0					
ANR	6214135	PtrMemberAccess	list -> head		6214109	1					
ANR	6214136	Identifier	list		6214109	0					
ANR	6214137	Identifier	head		6214109	1					
ANR	6214138	EqualityExpression	"list -> compare ( x -> data , data ) == 0"		6214109	1		==			
ANR	6214139	CallExpression	"list -> compare ( x -> data , data )"		6214109	0					
ANR	6214140	Callee	list -> compare		6214109	0					
ANR	6214141	PtrMemberAccess	list -> compare		6214109	0					
ANR	6214142	Identifier	list		6214109	0					
ANR	6214143	Identifier	compare		6214109	1					
ANR	6214144	ArgumentList	x -> data		6214109	1					
ANR	6214145	Argument	x -> data		6214109	0					
ANR	6214146	PtrMemberAccess	x -> data		6214109	0					
ANR	6214147	Identifier	x		6214109	0					
ANR	6214148	Identifier	data		6214109	1					
ANR	6214149	Argument	data		6214109	1					
ANR	6214150	Identifier	data		6214109	0					
ANR	6214151	PrimaryExpression	0		6214109	1					
ANR	6214152	CompoundStatement		3:60:124:124	6214109	1					
ANR	6214153	ReturnStatement	return x ;	214:2:5599:5607	6214109	0	True				
ANR	6214154	Identifier	x		6214109	0					
ANR	6214155	ReturnStatement	return NULL ;	216:1:5613:5624	6214109	2	True				
ANR	6214156	Identifier	NULL		6214109	0					
ANR	6214157	ReturnType	R_API RSkipListNode *		6214109	1					
ANR	6214158	Identifier	r_skiplist_find		6214109	2					
ANR	6214159	ParameterList	"RSkipList * list , void * data"		6214109	3					
ANR	6214160	Parameter	RSkipList * list	211:37:5441:5455	6214109	0	True				
ANR	6214161	ParameterType	RSkipList *		6214109	0					
ANR	6214162	Identifier	list		6214109	1					
ANR	6214163	Parameter	void * data	211:54:5458:5467	6214109	1	True				
ANR	6214164	ParameterType	void *		6214109	0					
ANR	6214165	Identifier	data		6214109	1					
ANR	6214166	CFGEntryNode	ENTRY		6214109		True				
ANR	6214167	CFGExitNode	EXIT		6214109		True				
ANR	6214168	Symbol	list -> head		6214109						
ANR	6214169	Symbol	x -> data		6214109						
ANR	6214170	Symbol	* x		6214109						
ANR	6214171	Symbol	NULL		6214109						
ANR	6214172	Symbol	data		6214109						
ANR	6214173	Symbol	* list		6214109						
ANR	6214174	Symbol	x		6214109						
ANR	6214175	Symbol	true		6214109						
ANR	6214176	Symbol	find_insertpoint		6214109						
ANR	6214177	Symbol	list -> compare		6214109						
ANR	6214178	Symbol	list		6214109						
ANR	6214179	Function	r_skiplist_find_geq	219:0:5629:5800							
ANR	6214180	FunctionDef	"r_skiplist_find_geq (RSkipList * list , void * data)"		6214179	0					
ANR	6214181	CompoundStatement		219:70:5699:5800	6214179	0					
ANR	6214182	IdentifierDeclStatement	"RSkipListNode * x = find_insertpoint ( list , data , NULL , true ) ;"	220:1:5702:5762	6214179	0	True				
ANR	6214183	IdentifierDecl	"* x = find_insertpoint ( list , data , NULL , true )"		6214179	0					
ANR	6214184	IdentifierDeclType	RSkipListNode *		6214179	0					
ANR	6214185	Identifier	x		6214179	1					
ANR	6214186	AssignmentExpression	"* x = find_insertpoint ( list , data , NULL , true )"		6214179	2		=			
ANR	6214187	Identifier	x		6214179	0					
ANR	6214188	CallExpression	"find_insertpoint ( list , data , NULL , true )"		6214179	1					
ANR	6214189	Callee	find_insertpoint		6214179	0					
ANR	6214190	Identifier	find_insertpoint		6214179	0					
ANR	6214191	ArgumentList	list		6214179	1					
ANR	6214192	Argument	list		6214179	0					
ANR	6214193	Identifier	list		6214179	0					
ANR	6214194	Argument	data		6214179	1					
ANR	6214195	Identifier	data		6214179	0					
ANR	6214196	Argument	NULL		6214179	2					
ANR	6214197	Identifier	NULL		6214179	0					
ANR	6214198	Argument	true		6214179	3					
ANR	6214199	Identifier	true		6214179	0					
ANR	6214200	ReturnStatement	return x != list -> head ? x : NULL ;	221:1:5765:5798	6214179	1	True				
ANR	6214201	ConditionalExpression	x != list -> head ? x : NULL		6214179	0					
ANR	6214202	Condition	x != list -> head		6214179	0					
ANR	6214203	EqualityExpression	x != list -> head		6214179	0		!=			
ANR	6214204	Identifier	x		6214179	0					
ANR	6214205	PtrMemberAccess	list -> head		6214179	1					
ANR	6214206	Identifier	list		6214179	0					
ANR	6214207	Identifier	head		6214179	1					
ANR	6214208	Identifier	x		6214179	1					
ANR	6214209	Identifier	NULL		6214179	2					
ANR	6214210	ReturnType	R_API RSkipListNode *		6214179	1					
ANR	6214211	Identifier	r_skiplist_find_geq		6214179	2					
ANR	6214212	ParameterList	"RSkipList * list , void * data"		6214179	3					
ANR	6214213	Parameter	RSkipList * list	219:41:5670:5684	6214179	0	True				
ANR	6214214	ParameterType	RSkipList *		6214179	0					
ANR	6214215	Identifier	list		6214179	1					
ANR	6214216	Parameter	void * data	219:58:5687:5696	6214179	1	True				
ANR	6214217	ParameterType	void *		6214179	0					
ANR	6214218	Identifier	data		6214179	1					
ANR	6214219	CFGEntryNode	ENTRY		6214179		True				
ANR	6214220	CFGExitNode	EXIT		6214179		True				
ANR	6214221	Symbol	list -> head		6214179						
ANR	6214222	Symbol	NULL		6214179						
ANR	6214223	Symbol	data		6214179						
ANR	6214224	Symbol	* list		6214179						
ANR	6214225	Symbol	x		6214179						
ANR	6214226	Symbol	true		6214179						
ANR	6214227	Symbol	find_insertpoint		6214179						
ANR	6214228	Symbol	list		6214179						
ANR	6214229	Function	r_skiplist_find_leq	224:0:5803:6118							
ANR	6214230	FunctionDef	"r_skiplist_find_leq (RSkipList * list , void * data)"		6214229	0					
ANR	6214231	CompoundStatement		224:70:5873:6118	6214229	0					
ANR	6214232	IdentifierDeclStatement	RSkipListNode * x = list -> head ;	225:1:5876:5905	6214229	0	True				
ANR	6214233	IdentifierDecl	* x = list -> head		6214229	0					
ANR	6214234	IdentifierDeclType	RSkipListNode *		6214229	0					
ANR	6214235	Identifier	x		6214229	1					
ANR	6214236	AssignmentExpression	* x = list -> head		6214229	2		=			
ANR	6214237	Identifier	x		6214229	0					
ANR	6214238	PtrMemberAccess	list -> head		6214229	1					
ANR	6214239	Identifier	list		6214229	0					
ANR	6214240	Identifier	head		6214229	1					
ANR	6214241	IdentifierDeclStatement	int i ;	226:1:5908:5913	6214229	1	True				
ANR	6214242	IdentifierDecl	i		6214229	0					
ANR	6214243	IdentifierDeclType	int		6214229	0					
ANR	6214244	Identifier	i		6214229	1					
ANR	6214245	ForStatement	for ( i = list -> list_level ; i >= 0 ; i -- )		6214229	2					
ANR	6214246	ForInit	i = list -> list_level ;	228:6:5922:5942	6214229	0	True				
ANR	6214247	AssignmentExpression	i = list -> list_level		6214229	0		=			
ANR	6214248	Identifier	i		6214229	0					
ANR	6214249	PtrMemberAccess	list -> list_level		6214229	1					
ANR	6214250	Identifier	list		6214229	0					
ANR	6214251	Identifier	list_level		6214229	1					
ANR	6214252	Condition	i >= 0	228:28:5944:5949	6214229	1	True				
ANR	6214253	RelationalExpression	i >= 0		6214229	0		>=			
ANR	6214254	Identifier	i		6214229	0					
ANR	6214255	PrimaryExpression	0		6214229	1					
ANR	6214256	PostIncDecOperationExpression	i --	228:36:5952:5954	6214229	2	True				
ANR	6214257	Identifier	i		6214229	0					
ANR	6214258	IncDec	--		6214229	1					
ANR	6214259	CompoundStatement		5:41:83:83	6214229	3					
ANR	6214260	WhileStatement	"while ( x -> forward [ i ] != list -> head && list -> compare ( x -> forward [ i ] -> data , data ) <= 0 )"		6214229	0					
ANR	6214261	Condition	"x -> forward [ i ] != list -> head && list -> compare ( x -> forward [ i ] -> data , data ) <= 0"	229:9:5968:6048	6214229	0	True				
ANR	6214262	AndExpression	"x -> forward [ i ] != list -> head && list -> compare ( x -> forward [ i ] -> data , data ) <= 0"		6214229	0		&&			
ANR	6214263	EqualityExpression	x -> forward [ i ] != list -> head		6214229	0		!=			
ANR	6214264	ArrayIndexing	x -> forward [ i ]		6214229	0					
ANR	6214265	PtrMemberAccess	x -> forward		6214229	0					
ANR	6214266	Identifier	x		6214229	0					
ANR	6214267	Identifier	forward		6214229	1					
ANR	6214268	Identifier	i		6214229	1					
ANR	6214269	PtrMemberAccess	list -> head		6214229	1					
ANR	6214270	Identifier	list		6214229	0					
ANR	6214271	Identifier	head		6214229	1					
ANR	6214272	RelationalExpression	"list -> compare ( x -> forward [ i ] -> data , data ) <= 0"		6214229	1		<=			
ANR	6214273	CallExpression	"list -> compare ( x -> forward [ i ] -> data , data )"		6214229	0					
ANR	6214274	Callee	list -> compare		6214229	0					
ANR	6214275	PtrMemberAccess	list -> compare		6214229	0					
ANR	6214276	Identifier	list		6214229	0					
ANR	6214277	Identifier	compare		6214229	1					
ANR	6214278	ArgumentList	x -> forward [ i ] -> data		6214229	1					
ANR	6214279	Argument	x -> forward [ i ] -> data		6214229	0					
ANR	6214280	PtrMemberAccess	x -> forward [ i ] -> data		6214229	0					
ANR	6214281	ArrayIndexing	x -> forward [ i ]		6214229	0					
ANR	6214282	PtrMemberAccess	x -> forward		6214229	0					
ANR	6214283	Identifier	x		6214229	0					
ANR	6214284	Identifier	forward		6214229	1					
ANR	6214285	Identifier	i		6214229	1					
ANR	6214286	Identifier	data		6214229	1					
ANR	6214287	Argument	data		6214229	1					
ANR	6214288	Identifier	data		6214229	0					
ANR	6214289	PrimaryExpression	0		6214229	1					
ANR	6214290	CompoundStatement		7:54:177:177	6214229	1					
ANR	6214291	ExpressionStatement	x = x -> forward [ i ]	231:3:6056:6073	6214229	0	True				
ANR	6214292	AssignmentExpression	x = x -> forward [ i ]		6214229	0		=			
ANR	6214293	Identifier	x		6214229	0					
ANR	6214294	ArrayIndexing	x -> forward [ i ]		6214229	1					
ANR	6214295	PtrMemberAccess	x -> forward		6214229	0					
ANR	6214296	Identifier	x		6214229	0					
ANR	6214297	Identifier	forward		6214229	1					
ANR	6214298	Identifier	i		6214229	1					
ANR	6214299	ReturnStatement	return x != list -> head ? x : NULL ;	234:1:6083:6116	6214229	3	True				
ANR	6214300	ConditionalExpression	x != list -> head ? x : NULL		6214229	0					
ANR	6214301	Condition	x != list -> head		6214229	0					
ANR	6214302	EqualityExpression	x != list -> head		6214229	0		!=			
ANR	6214303	Identifier	x		6214229	0					
ANR	6214304	PtrMemberAccess	list -> head		6214229	1					
ANR	6214305	Identifier	list		6214229	0					
ANR	6214306	Identifier	head		6214229	1					
ANR	6214307	Identifier	x		6214229	1					
ANR	6214308	Identifier	NULL		6214229	2					
ANR	6214309	ReturnType	R_API RSkipListNode *		6214229	1					
ANR	6214310	Identifier	r_skiplist_find_leq		6214229	2					
ANR	6214311	ParameterList	"RSkipList * list , void * data"		6214229	3					
ANR	6214312	Parameter	RSkipList * list	224:41:5844:5858	6214229	0	True				
ANR	6214313	ParameterType	RSkipList *		6214229	0					
ANR	6214314	Identifier	list		6214229	1					
ANR	6214315	Parameter	void * data	224:58:5861:5870	6214229	1	True				
ANR	6214316	ParameterType	void *		6214229	0					
ANR	6214317	Identifier	data		6214229	1					
ANR	6214318	CFGEntryNode	ENTRY		6214229		True				
ANR	6214319	CFGExitNode	EXIT		6214229		True				
ANR	6214320	Symbol	* * i		6214229						
ANR	6214321	Symbol	* x		6214229						
ANR	6214322	Symbol	NULL		6214229						
ANR	6214323	Symbol	data		6214229						
ANR	6214324	Symbol	i		6214229						
ANR	6214325	Symbol	* * * x		6214229						
ANR	6214326	Symbol	* * x -> forward		6214229						
ANR	6214327	Symbol	x -> forward [ i ] -> data		6214229						
ANR	6214328	Symbol	list		6214229						
ANR	6214329	Symbol	list -> head		6214229						
ANR	6214330	Symbol	* x -> forward		6214229						
ANR	6214331	Symbol	* * x		6214229						
ANR	6214332	Symbol	* i		6214229						
ANR	6214333	Symbol	* list		6214229						
ANR	6214334	Symbol	x		6214229						
ANR	6214335	Symbol	list -> compare		6214229						
ANR	6214336	Symbol	list -> list_level		6214229						
ANR	6214337	Symbol	x -> forward		6214229						
ANR	6214338	Function	r_skiplist_join	238:0:6163:6353							
ANR	6214339	FunctionDef	"r_skiplist_join (RSkipList * l1 , RSkipList * l2)"		6214338	0					
ANR	6214340	CompoundStatement		238:57:6220:6353	6214338	0					
ANR	6214341	IdentifierDeclStatement	RSkipListNode * it ;	239:1:6223:6240	6214338	0	True				
ANR	6214342	IdentifierDecl	* it		6214338	0					
ANR	6214343	IdentifierDeclType	RSkipListNode *		6214338	0					
ANR	6214344	Identifier	it		6214338	1					
ANR	6214345	IdentifierDeclStatement	void * data ;	240:1:6243:6253	6214338	1	True				
ANR	6214346	IdentifierDecl	* data		6214338	0					
ANR	6214347	IdentifierDeclType	void *		6214338	0					
ANR	6214348	Identifier	data		6214338	1					
ANR	6214349	Statement	r_skiplist_foreach	242:1:6257:6274	6214338	2	True				
ANR	6214350	Statement	(	242:20:6276:6276	6214338	3	True				
ANR	6214351	Statement	l2	242:21:6277:6278	6214338	4	True				
ANR	6214352	Statement	","	242:23:6279:6279	6214338	5	True				
ANR	6214353	Statement	it	242:25:6281:6282	6214338	6	True				
ANR	6214354	Statement	","	242:27:6283:6283	6214338	7	True				
ANR	6214355	Statement	data	242:29:6285:6288	6214338	8	True				
ANR	6214356	Statement	)	242:33:6289:6289	6214338	9	True				
ANR	6214357	CompoundStatement		5:35:70:70	6214338	10					
ANR	6214358	ExpressionStatement	"r_skiplist_insert ( l1 , data )"	243:2:6295:6323	6214338	0	True				
ANR	6214359	CallExpression	"r_skiplist_insert ( l1 , data )"		6214338	0					
ANR	6214360	Callee	r_skiplist_insert		6214338	0					
ANR	6214361	Identifier	r_skiplist_insert		6214338	0					
ANR	6214362	ArgumentList	l1		6214338	1					
ANR	6214363	Argument	l1		6214338	0					
ANR	6214364	Identifier	l1		6214338	0					
ANR	6214365	Argument	data		6214338	1					
ANR	6214366	Identifier	data		6214338	0					
ANR	6214367	ExpressionStatement	r_skiplist_purge ( l2 )	246:1:6330:6351	6214338	11	True				
ANR	6214368	CallExpression	r_skiplist_purge ( l2 )		6214338	0					
ANR	6214369	Callee	r_skiplist_purge		6214338	0					
ANR	6214370	Identifier	r_skiplist_purge		6214338	0					
ANR	6214371	ArgumentList	l2		6214338	1					
ANR	6214372	Argument	l2		6214338	0					
ANR	6214373	Identifier	l2		6214338	0					
ANR	6214374	ReturnType	R_API void		6214338	1					
ANR	6214375	Identifier	r_skiplist_join		6214338	2					
ANR	6214376	ParameterList	"RSkipList * l1 , RSkipList * l2"		6214338	3					
ANR	6214377	Parameter	RSkipList * l1	238:27:6190:6202	6214338	0	True				
ANR	6214378	ParameterType	RSkipList *		6214338	0					
ANR	6214379	Identifier	l1		6214338	1					
ANR	6214380	Parameter	RSkipList * l2	238:42:6205:6217	6214338	1	True				
ANR	6214381	ParameterType	RSkipList *		6214338	0					
ANR	6214382	Identifier	l2		6214338	1					
ANR	6214383	CFGEntryNode	ENTRY		6214338		True				
ANR	6214384	CFGExitNode	EXIT		6214338		True				
ANR	6214385	Symbol	data		6214338						
ANR	6214386	Symbol	l1		6214338						
ANR	6214387	Symbol	l2		6214338						
ANR	6214388	Symbol	it		6214338						
ANR	6214389	Function	r_skiplist_get_first	250:0:6430:6606							
ANR	6214390	FunctionDef	r_skiplist_get_first (RSkipList * list)		6214389	0					
ANR	6214391	CompoundStatement		250:50:6480:6606	6214389	0					
ANR	6214392	IfStatement	if ( ! list )		6214389	0					
ANR	6214393	Condition	! list	251:5:6487:6491	6214389	0	True				
ANR	6214394	UnaryOperationExpression	! list		6214389	0					
ANR	6214395	UnaryOperator	!		6214389	0					
ANR	6214396	Identifier	list		6214389	1					
ANR	6214397	CompoundStatement		2:12:13:13	6214389	1					
ANR	6214398	ReturnStatement	return NULL ;	252:2:6498:6509	6214389	0	True				
ANR	6214399	Identifier	NULL		6214389	0					
ANR	6214400	IdentifierDeclStatement	RSkipListNode * res = list -> head -> forward [ 0 ] ;	254:1:6515:6558	6214389	1	True				
ANR	6214401	IdentifierDecl	* res = list -> head -> forward [ 0 ]		6214389	0					
ANR	6214402	IdentifierDeclType	RSkipListNode *		6214389	0					
ANR	6214403	Identifier	res		6214389	1					
ANR	6214404	AssignmentExpression	* res = list -> head -> forward [ 0 ]		6214389	2		=			
ANR	6214405	Identifier	res		6214389	0					
ANR	6214406	ArrayIndexing	list -> head -> forward [ 0 ]		6214389	1					
ANR	6214407	PtrMemberAccess	list -> head -> forward		6214389	0					
ANR	6214408	PtrMemberAccess	list -> head		6214389	0					
ANR	6214409	Identifier	list		6214389	0					
ANR	6214410	Identifier	head		6214389	1					
ANR	6214411	Identifier	forward		6214389	1					
ANR	6214412	PrimaryExpression	0		6214389	1					
ANR	6214413	ReturnStatement	return res == list -> head ? NULL : res -> data ;	255:1:6561:6604	6214389	2	True				
ANR	6214414	ConditionalExpression	res == list -> head ? NULL : res -> data		6214389	0					
ANR	6214415	Condition	res == list -> head		6214389	0					
ANR	6214416	EqualityExpression	res == list -> head		6214389	0		==			
ANR	6214417	Identifier	res		6214389	0					
ANR	6214418	PtrMemberAccess	list -> head		6214389	1					
ANR	6214419	Identifier	list		6214389	0					
ANR	6214420	Identifier	head		6214389	1					
ANR	6214421	Identifier	NULL		6214389	1					
ANR	6214422	PtrMemberAccess	res -> data		6214389	2					
ANR	6214423	Identifier	res		6214389	0					
ANR	6214424	Identifier	data		6214389	1					
ANR	6214425	ReturnType	R_API void *		6214389	1					
ANR	6214426	Identifier	r_skiplist_get_first		6214389	2					
ANR	6214427	ParameterList	RSkipList * list		6214389	3					
ANR	6214428	Parameter	RSkipList * list	250:33:6463:6477	6214389	0	True				
ANR	6214429	ParameterType	RSkipList *		6214389	0					
ANR	6214430	Identifier	list		6214389	1					
ANR	6214431	CFGEntryNode	ENTRY		6214389		True				
ANR	6214432	CFGExitNode	EXIT		6214389		True				
ANR	6214433	Symbol	res		6214389						
ANR	6214434	Symbol	* list -> head		6214389						
ANR	6214435	Symbol	list -> head -> forward		6214389						
ANR	6214436	Symbol	NULL		6214389						
ANR	6214437	Symbol	* * list -> head		6214389						
ANR	6214438	Symbol	* res		6214389						
ANR	6214439	Symbol	list		6214389						
ANR	6214440	Symbol	list -> head		6214389						
ANR	6214441	Symbol	res -> data		6214389						
ANR	6214442	Symbol	* * list		6214389						
ANR	6214443	Symbol	* * * list		6214389						
ANR	6214444	Symbol	* list		6214389						
ANR	6214445	Symbol	* list -> head -> forward		6214389						
ANR	6214446	Function	r_skiplist_get_n	259:0:6681:6937							
ANR	6214447	FunctionDef	"r_skiplist_get_n (RSkipList * list , int n)"		6214446	0					
ANR	6214448	CompoundStatement		259:53:6734:6937	6214446	0					
ANR	6214449	IdentifierDeclStatement	int count = 0 ;	260:1:6737:6750	6214446	0	True				
ANR	6214450	IdentifierDecl	count = 0		6214446	0					
ANR	6214451	IdentifierDeclType	int		6214446	0					
ANR	6214452	Identifier	count		6214446	1					
ANR	6214453	AssignmentExpression	count = 0		6214446	2		=			
ANR	6214454	Identifier	count		6214446	0					
ANR	6214455	PrimaryExpression	0		6214446	1					
ANR	6214456	IdentifierDeclStatement	RSkipListNode * node ;	261:1:6753:6772	6214446	1	True				
ANR	6214457	IdentifierDecl	* node		6214446	0					
ANR	6214458	IdentifierDeclType	RSkipListNode *		6214446	0					
ANR	6214459	Identifier	node		6214446	1					
ANR	6214460	IdentifierDeclStatement	void * data ;	262:1:6775:6785	6214446	2	True				
ANR	6214461	IdentifierDecl	* data		6214446	0					
ANR	6214462	IdentifierDeclType	void *		6214446	0					
ANR	6214463	Identifier	data		6214446	1					
ANR	6214464	IfStatement	if ( ! list || n < 0 )		6214446	3					
ANR	6214465	Condition	! list || n < 0	263:5:6792:6805	6214446	0	True				
ANR	6214466	OrExpression	! list || n < 0		6214446	0		||			
ANR	6214467	UnaryOperationExpression	! list		6214446	0					
ANR	6214468	UnaryOperator	!		6214446	0					
ANR	6214469	Identifier	list		6214446	1					
ANR	6214470	RelationalExpression	n < 0		6214446	1		<			
ANR	6214471	Identifier	n		6214446	0					
ANR	6214472	PrimaryExpression	0		6214446	1					
ANR	6214473	CompoundStatement		5:21:73:73	6214446	1					
ANR	6214474	ReturnStatement	return NULL ;	264:2:6812:6823	6214446	0	True				
ANR	6214475	Identifier	NULL		6214446	0					
ANR	6214476	Statement	r_skiplist_foreach	266:1:6829:6846	6214446	4	True				
ANR	6214477	Statement	(	266:20:6848:6848	6214446	5	True				
ANR	6214478	Statement	list	266:21:6849:6852	6214446	6	True				
ANR	6214479	Statement	","	266:25:6853:6853	6214446	7	True				
ANR	6214480	Statement	node	266:27:6855:6858	6214446	8	True				
ANR	6214481	Statement	","	266:31:6859:6859	6214446	9	True				
ANR	6214482	Statement	data	266:33:6861:6864	6214446	10	True				
ANR	6214483	Statement	)	266:37:6865:6865	6214446	11	True				
ANR	6214484	CompoundStatement		8:39:132:132	6214446	12					
ANR	6214485	IfStatement	if ( count == n )		6214446	0					
ANR	6214486	Condition	count == n	267:6:6875:6884	6214446	0	True				
ANR	6214487	EqualityExpression	count == n		6214446	0		==			
ANR	6214488	Identifier	count		6214446	0					
ANR	6214489	Identifier	n		6214446	1					
ANR	6214490	CompoundStatement		9:18:152:152	6214446	1					
ANR	6214491	ReturnStatement	return data ;	268:3:6892:6903	6214446	0	True				
ANR	6214492	Identifier	data		6214446	0					
ANR	6214493	ExpressionStatement	++ count	270:2:6911:6918	6214446	1	True				
ANR	6214494	UnaryExpression	++ count		6214446	0					
ANR	6214495	IncDec	++		6214446	0					
ANR	6214496	Identifier	count		6214446	1					
ANR	6214497	ReturnStatement	return NULL ;	272:1:6924:6935	6214446	13	True				
ANR	6214498	Identifier	NULL		6214446	0					
ANR	6214499	ReturnType	R_API void *		6214446	1					
ANR	6214500	Identifier	r_skiplist_get_n		6214446	2					
ANR	6214501	ParameterList	"RSkipList * list , int n"		6214446	3					
ANR	6214502	Parameter	RSkipList * list	259:29:6710:6724	6214446	0	True				
ANR	6214503	ParameterType	RSkipList *		6214446	0					
ANR	6214504	Identifier	list		6214446	1					
ANR	6214505	Parameter	int n	259:46:6727:6731	6214446	1	True				
ANR	6214506	ParameterType	int		6214446	0					
ANR	6214507	Identifier	n		6214446	1					
ANR	6214508	CFGEntryNode	ENTRY		6214446		True				
ANR	6214509	CFGExitNode	EXIT		6214446		True				
ANR	6214510	Symbol	node		6214446						
ANR	6214511	Symbol	NULL		6214446						
ANR	6214512	Symbol	data		6214446						
ANR	6214513	Symbol	count		6214446						
ANR	6214514	Symbol	list		6214446						
ANR	6214515	Symbol	n		6214446						
ANR	6214516	Function	r_skiplist_get_geq	276:0:6941:7085							
ANR	6214517	FunctionDef	"r_skiplist_get_geq (RSkipList * list , void * data)"		6214516	0					
ANR	6214518	CompoundStatement		276:60:7001:7085	6214516	0					
ANR	6214519	IdentifierDeclStatement	"RSkipListNode * x = r_skiplist_find_geq ( list , data ) ;"	277:1:7004:7055	6214516	0	True				
ANR	6214520	IdentifierDecl	"* x = r_skiplist_find_geq ( list , data )"		6214516	0					
ANR	6214521	IdentifierDeclType	RSkipListNode *		6214516	0					
ANR	6214522	Identifier	x		6214516	1					
ANR	6214523	AssignmentExpression	"* x = r_skiplist_find_geq ( list , data )"		6214516	2		=			
ANR	6214524	Identifier	x		6214516	0					
ANR	6214525	CallExpression	"r_skiplist_find_geq ( list , data )"		6214516	1					
ANR	6214526	Callee	r_skiplist_find_geq		6214516	0					
ANR	6214527	Identifier	r_skiplist_find_geq		6214516	0					
ANR	6214528	ArgumentList	list		6214516	1					
ANR	6214529	Argument	list		6214516	0					
ANR	6214530	Identifier	list		6214516	0					
ANR	6214531	Argument	data		6214516	1					
ANR	6214532	Identifier	data		6214516	0					
ANR	6214533	ReturnStatement	return x ? x -> data : NULL ;	278:1:7058:7083	6214516	1	True				
ANR	6214534	ConditionalExpression	x ? x -> data : NULL		6214516	0					
ANR	6214535	Condition	x		6214516	0					
ANR	6214536	Identifier	x		6214516	0					
ANR	6214537	PtrMemberAccess	x -> data		6214516	1					
ANR	6214538	Identifier	x		6214516	0					
ANR	6214539	Identifier	data		6214516	1					
ANR	6214540	Identifier	NULL		6214516	2					
ANR	6214541	ReturnType	R_API void *		6214516	1					
ANR	6214542	Identifier	r_skiplist_get_geq		6214516	2					
ANR	6214543	ParameterList	"RSkipList * list , void * data"		6214516	3					
ANR	6214544	Parameter	RSkipList * list	276:31:6972:6986	6214516	0	True				
ANR	6214545	ParameterType	RSkipList *		6214516	0					
ANR	6214546	Identifier	list		6214516	1					
ANR	6214547	Parameter	void * data	276:48:6989:6998	6214516	1	True				
ANR	6214548	ParameterType	void *		6214516	0					
ANR	6214549	Identifier	data		6214516	1					
ANR	6214550	CFGEntryNode	ENTRY		6214516		True				
ANR	6214551	CFGExitNode	EXIT		6214516		True				
ANR	6214552	Symbol	x -> data		6214516						
ANR	6214553	Symbol	* x		6214516						
ANR	6214554	Symbol	NULL		6214516						
ANR	6214555	Symbol	data		6214516						
ANR	6214556	Symbol	r_skiplist_find_geq		6214516						
ANR	6214557	Symbol	x		6214516						
ANR	6214558	Symbol	list		6214516						
ANR	6214559	Function	r_skiplist_get_leq	281:0:7088:7232							
ANR	6214560	FunctionDef	"r_skiplist_get_leq (RSkipList * list , void * data)"		6214559	0					
ANR	6214561	CompoundStatement		281:60:7148:7232	6214559	0					
ANR	6214562	IdentifierDeclStatement	"RSkipListNode * x = r_skiplist_find_leq ( list , data ) ;"	282:1:7151:7202	6214559	0	True				
ANR	6214563	IdentifierDecl	"* x = r_skiplist_find_leq ( list , data )"		6214559	0					
ANR	6214564	IdentifierDeclType	RSkipListNode *		6214559	0					
ANR	6214565	Identifier	x		6214559	1					
ANR	6214566	AssignmentExpression	"* x = r_skiplist_find_leq ( list , data )"		6214559	2		=			
ANR	6214567	Identifier	x		6214559	0					
ANR	6214568	CallExpression	"r_skiplist_find_leq ( list , data )"		6214559	1					
ANR	6214569	Callee	r_skiplist_find_leq		6214559	0					
ANR	6214570	Identifier	r_skiplist_find_leq		6214559	0					
ANR	6214571	ArgumentList	list		6214559	1					
ANR	6214572	Argument	list		6214559	0					
ANR	6214573	Identifier	list		6214559	0					
ANR	6214574	Argument	data		6214559	1					
ANR	6214575	Identifier	data		6214559	0					
ANR	6214576	ReturnStatement	return x ? x -> data : NULL ;	283:1:7205:7230	6214559	1	True				
ANR	6214577	ConditionalExpression	x ? x -> data : NULL		6214559	0					
ANR	6214578	Condition	x		6214559	0					
ANR	6214579	Identifier	x		6214559	0					
ANR	6214580	PtrMemberAccess	x -> data		6214559	1					
ANR	6214581	Identifier	x		6214559	0					
ANR	6214582	Identifier	data		6214559	1					
ANR	6214583	Identifier	NULL		6214559	2					
ANR	6214584	ReturnType	R_API void *		6214559	1					
ANR	6214585	Identifier	r_skiplist_get_leq		6214559	2					
ANR	6214586	ParameterList	"RSkipList * list , void * data"		6214559	3					
ANR	6214587	Parameter	RSkipList * list	281:31:7119:7133	6214559	0	True				
ANR	6214588	ParameterType	RSkipList *		6214559	0					
ANR	6214589	Identifier	list		6214559	1					
ANR	6214590	Parameter	void * data	281:48:7136:7145	6214559	1	True				
ANR	6214591	ParameterType	void *		6214559	0					
ANR	6214592	Identifier	data		6214559	1					
ANR	6214593	CFGEntryNode	ENTRY		6214559		True				
ANR	6214594	CFGExitNode	EXIT		6214559		True				
ANR	6214595	Symbol	x -> data		6214559						
ANR	6214596	Symbol	r_skiplist_find_leq		6214559						
ANR	6214597	Symbol	* x		6214559						
ANR	6214598	Symbol	NULL		6214559						
ANR	6214599	Symbol	data		6214559						
ANR	6214600	Symbol	x		6214559						
ANR	6214601	Symbol	list		6214559						
ANR	6214602	Function	r_skiplist_empty	287:0:7271:7343							
ANR	6214603	FunctionDef	r_skiplist_empty (RSkipList * list)		6214602	0					
ANR	6214604	CompoundStatement		287:45:7316:7343	6214602	0					
ANR	6214605	ReturnStatement	return list -> size == 0 ;	288:1:7319:7341	6214602	0	True				
ANR	6214606	EqualityExpression	list -> size == 0		6214602	0		==			
ANR	6214607	PtrMemberAccess	list -> size		6214602	0					
ANR	6214608	Identifier	list		6214602	0					
ANR	6214609	Identifier	size		6214602	1					
ANR	6214610	PrimaryExpression	0		6214602	1					
ANR	6214611	ReturnType	R_API bool		6214602	1					
ANR	6214612	Identifier	r_skiplist_empty		6214602	2					
ANR	6214613	ParameterList	RSkipList * list		6214602	3					
ANR	6214614	Parameter	RSkipList * list	287:28:7299:7313	6214602	0	True				
ANR	6214615	ParameterType	RSkipList *		6214602	0					
ANR	6214616	Identifier	list		6214602	1					
ANR	6214617	CFGEntryNode	ENTRY		6214602		True				
ANR	6214618	CFGExitNode	EXIT		6214602		True				
ANR	6214619	Symbol	* list		6214602						
ANR	6214620	Symbol	list		6214602						
ANR	6214621	Symbol	list -> size		6214602						
ANR	6214622	Function	r_skiplist_to_list	295:0:7557:7754							
ANR	6214623	FunctionDef	r_skiplist_to_list (RSkipList * list)		6214622	0					
ANR	6214624	CompoundStatement		295:49:7606:7754	6214622	0					
ANR	6214625	IdentifierDeclStatement	RList * res = r_list_new ( ) ;	296:1:7609:7635	6214622	0	True				
ANR	6214626	IdentifierDecl	* res = r_list_new ( )		6214622	0					
ANR	6214627	IdentifierDeclType	RList *		6214622	0					
ANR	6214628	Identifier	res		6214622	1					
ANR	6214629	AssignmentExpression	* res = r_list_new ( )		6214622	2		=			
ANR	6214630	Identifier	res		6214622	0					
ANR	6214631	CallExpression	r_list_new ( )		6214622	1					
ANR	6214632	Callee	r_list_new		6214622	0					
ANR	6214633	Identifier	r_list_new		6214622	0					
ANR	6214634	ArgumentList			6214622	1					
ANR	6214635	IdentifierDeclStatement	RSkipListNode * n ;	297:1:7638:7654	6214622	1	True				
ANR	6214636	IdentifierDecl	* n		6214622	0					
ANR	6214637	IdentifierDeclType	RSkipListNode *		6214622	0					
ANR	6214638	Identifier	n		6214622	1					
ANR	6214639	IdentifierDeclStatement	void * data ;	298:1:7657:7667	6214622	2	True				
ANR	6214640	IdentifierDecl	* data		6214622	0					
ANR	6214641	IdentifierDeclType	void *		6214622	0					
ANR	6214642	Identifier	data		6214622	1					
ANR	6214643	Statement	r_skiplist_foreach	300:1:7671:7688	6214622	3	True				
ANR	6214644	Statement	(	300:20:7690:7690	6214622	4	True				
ANR	6214645	Statement	list	300:21:7691:7694	6214622	5	True				
ANR	6214646	Statement	","	300:25:7695:7695	6214622	6	True				
ANR	6214647	Statement	n	300:27:7697:7697	6214622	7	True				
ANR	6214648	Statement	","	300:28:7698:7698	6214622	8	True				
ANR	6214649	Statement	data	300:30:7700:7703	6214622	9	True				
ANR	6214650	Statement	)	300:34:7704:7704	6214622	10	True				
ANR	6214651	CompoundStatement		6:36:99:99	6214622	11					
ANR	6214652	ExpressionStatement	"r_list_append ( res , data )"	301:2:7710:7735	6214622	0	True				
ANR	6214653	CallExpression	"r_list_append ( res , data )"		6214622	0					
ANR	6214654	Callee	r_list_append		6214622	0					
ANR	6214655	Identifier	r_list_append		6214622	0					
ANR	6214656	ArgumentList	res		6214622	1					
ANR	6214657	Argument	res		6214622	0					
ANR	6214658	Identifier	res		6214622	0					
ANR	6214659	Argument	data		6214622	1					
ANR	6214660	Identifier	data		6214622	0					
ANR	6214661	ReturnStatement	return res ;	304:1:7742:7752	6214622	12	True				
ANR	6214662	Identifier	res		6214622	0					
ANR	6214663	ReturnType	R_API RList *		6214622	1					
ANR	6214664	Identifier	r_skiplist_to_list		6214622	2					
ANR	6214665	ParameterList	RSkipList * list		6214622	3					
ANR	6214666	Parameter	RSkipList * list	295:32:7589:7603	6214622	0	True				
ANR	6214667	ParameterType	RSkipList *		6214622	0					
ANR	6214668	Identifier	list		6214622	1					
ANR	6214669	CFGEntryNode	ENTRY		6214622		True				
ANR	6214670	CFGExitNode	EXIT		6214622		True				
ANR	6214671	Symbol	res		6214622						
ANR	6214672	Symbol	data		6214622						
ANR	6214673	Symbol	list		6214622						
ANR	6214674	Symbol	n		6214622						
ANR	6214675	Symbol	r_list_new		6214622						
