command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6536092	File	data/converged/CVE-2019-16718~_radare2/xnu_excthreads.c								
ANR	6536093	Function	modify_trace_bit	16:0:493:1261							
ANR	6536094	FunctionDef	"modify_trace_bit (RDebug * dbg , xnu_thread_t * th , int enable)"		6536093	0					
ANR	6536095	CompoundStatement		16:72:565:1261	6536093	0					
ANR	6536096	IdentifierDeclStatement	R_REG_T * state ;	17:1:568:582	6536093	0	True				
ANR	6536097	IdentifierDecl	* state		6536093	0					
ANR	6536098	IdentifierDeclType	R_REG_T *		6536093	0					
ANR	6536099	Identifier	state		6536093	1					
ANR	6536100	IdentifierDeclStatement	int ret ;	18:1:585:592	6536093	1	True				
ANR	6536101	IdentifierDecl	ret		6536093	0					
ANR	6536102	IdentifierDeclType	int		6536093	0					
ANR	6536103	Identifier	ret		6536093	1					
ANR	6536104	ExpressionStatement	"ret = xnu_thread_get_gpr ( dbg , th )"	19:1:595:629	6536093	2	True				
ANR	6536105	AssignmentExpression	"ret = xnu_thread_get_gpr ( dbg , th )"		6536093	0		=			
ANR	6536106	Identifier	ret		6536093	0					
ANR	6536107	CallExpression	"xnu_thread_get_gpr ( dbg , th )"		6536093	1					
ANR	6536108	Callee	xnu_thread_get_gpr		6536093	0					
ANR	6536109	Identifier	xnu_thread_get_gpr		6536093	0					
ANR	6536110	ArgumentList	dbg		6536093	1					
ANR	6536111	Argument	dbg		6536093	0					
ANR	6536112	Identifier	dbg		6536093	0					
ANR	6536113	Argument	th		6536093	1					
ANR	6536114	Identifier	th		6536093	0					
ANR	6536115	IfStatement	if ( ! ret )		6536093	3					
ANR	6536116	Condition	! ret	20:5:636:639	6536093	0	True				
ANR	6536117	UnaryOperationExpression	! ret		6536093	0					
ANR	6536118	UnaryOperator	!		6536093	0					
ANR	6536119	Identifier	ret		6536093	1					
ANR	6536120	CompoundStatement		5:11:76:76	6536093	1					
ANR	6536121	ExpressionStatement	"eprintf ( ""error to get gpr registers in trace bit intel\\n"" )"	21:2:646:705	6536093	0	True				
ANR	6536122	CallExpression	"eprintf ( ""error to get gpr registers in trace bit intel\\n"" )"		6536093	0					
ANR	6536123	Callee	eprintf		6536093	0					
ANR	6536124	Identifier	eprintf		6536093	0					
ANR	6536125	ArgumentList	"""error to get gpr registers in trace bit intel\\n"""		6536093	1					
ANR	6536126	Argument	"""error to get gpr registers in trace bit intel\\n"""		6536093	0					
ANR	6536127	PrimaryExpression	"""error to get gpr registers in trace bit intel\\n"""		6536093	0					
ANR	6536128	ReturnStatement	return false ;	22:2:709:721	6536093	1	True				
ANR	6536129	Identifier	false		6536093	0					
ANR	6536130	ExpressionStatement	state = ( R_REG_T * ) & th -> gpr	24:1:727:754	6536093	4	True				
ANR	6536131	AssignmentExpression	state = ( R_REG_T * ) & th -> gpr		6536093	0		=			
ANR	6536132	Identifier	state		6536093	0					
ANR	6536133	CastExpression	( R_REG_T * ) & th -> gpr		6536093	1					
ANR	6536134	CastTarget	R_REG_T *		6536093	0					
ANR	6536135	UnaryOperationExpression	& th -> gpr		6536093	1					
ANR	6536136	UnaryOperator	&		6536093	0					
ANR	6536137	PtrMemberAccess	th -> gpr		6536093	1					
ANR	6536138	Identifier	th		6536093	0					
ANR	6536139	Identifier	gpr		6536093	1					
ANR	6536140	IfStatement	if ( state -> tsh . flavor == x86_THREAD_STATE32 )		6536093	5					
ANR	6536141	Condition	state -> tsh . flavor == x86_THREAD_STATE32	25:5:761:799	6536093	0	True				
ANR	6536142	EqualityExpression	state -> tsh . flavor == x86_THREAD_STATE32		6536093	0		==			
ANR	6536143	MemberAccess	state -> tsh . flavor		6536093	0					
ANR	6536144	PtrMemberAccess	state -> tsh		6536093	0					
ANR	6536145	Identifier	state		6536093	0					
ANR	6536146	Identifier	tsh		6536093	1					
ANR	6536147	Identifier	flavor		6536093	1					
ANR	6536148	Identifier	x86_THREAD_STATE32		6536093	1					
ANR	6536149	CompoundStatement		10:46:236:236	6536093	1					
ANR	6536150	ExpressionStatement	state -> uts . ts32 . __eflags = ( state -> uts . ts32 . __eflags & ~0x100UL ) | ( enable ? 0x100UL : 0 )	26:2:806:902	6536093	0	True				
ANR	6536151	AssignmentExpression	state -> uts . ts32 . __eflags = ( state -> uts . ts32 . __eflags & ~0x100UL ) | ( enable ? 0x100UL : 0 )		6536093	0		=			
ANR	6536152	MemberAccess	state -> uts . ts32 . __eflags		6536093	0					
ANR	6536153	MemberAccess	state -> uts . ts32		6536093	0					
ANR	6536154	PtrMemberAccess	state -> uts		6536093	0					
ANR	6536155	Identifier	state		6536093	0					
ANR	6536156	Identifier	uts		6536093	1					
ANR	6536157	Identifier	ts32		6536093	1					
ANR	6536158	Identifier	__eflags		6536093	1					
ANR	6536159	InclusiveOrExpression	( state -> uts . ts32 . __eflags & ~0x100UL ) | ( enable ? 0x100UL : 0 )		6536093	1		|			
ANR	6536160	BitAndExpression	state -> uts . ts32 . __eflags & ~0x100UL		6536093	0		&			
ANR	6536161	MemberAccess	state -> uts . ts32 . __eflags		6536093	0					
ANR	6536162	MemberAccess	state -> uts . ts32		6536093	0					
ANR	6536163	PtrMemberAccess	state -> uts		6536093	0					
ANR	6536164	Identifier	state		6536093	0					
ANR	6536165	Identifier	uts		6536093	1					
ANR	6536166	Identifier	ts32		6536093	1					
ANR	6536167	Identifier	__eflags		6536093	1					
ANR	6536168	Identifier	~0x100UL		6536093	1					
ANR	6536169	ConditionalExpression	enable ? 0x100UL : 0		6536093	1					
ANR	6536170	Condition	enable		6536093	0					
ANR	6536171	Identifier	enable		6536093	0					
ANR	6536172	PrimaryExpression	0x100UL		6536093	1					
ANR	6536173	PrimaryExpression	0		6536093	2					
ANR	6536174	ElseStatement	else		6536093	0					
ANR	6536175	IfStatement	if ( state -> tsh . flavor == x86_THREAD_STATE64 )		6536093	0					
ANR	6536176	Condition	state -> tsh . flavor == x86_THREAD_STATE64	28:12:916:954	6536093	0	True				
ANR	6536177	EqualityExpression	state -> tsh . flavor == x86_THREAD_STATE64		6536093	0		==			
ANR	6536178	MemberAccess	state -> tsh . flavor		6536093	0					
ANR	6536179	PtrMemberAccess	state -> tsh		6536093	0					
ANR	6536180	Identifier	state		6536093	0					
ANR	6536181	Identifier	tsh		6536093	1					
ANR	6536182	Identifier	flavor		6536093	1					
ANR	6536183	Identifier	x86_THREAD_STATE64		6536093	1					
ANR	6536184	CompoundStatement		13:53:391:391	6536093	1					
ANR	6536185	ExpressionStatement	state -> uts . ts64 . __rflags = ( state -> uts . ts64 . __rflags & ~0x100UL ) | ( enable ? 0x100UL : 0 )	29:2:961:1057	6536093	0	True				
ANR	6536186	AssignmentExpression	state -> uts . ts64 . __rflags = ( state -> uts . ts64 . __rflags & ~0x100UL ) | ( enable ? 0x100UL : 0 )		6536093	0		=			
ANR	6536187	MemberAccess	state -> uts . ts64 . __rflags		6536093	0					
ANR	6536188	MemberAccess	state -> uts . ts64		6536093	0					
ANR	6536189	PtrMemberAccess	state -> uts		6536093	0					
ANR	6536190	Identifier	state		6536093	0					
ANR	6536191	Identifier	uts		6536093	1					
ANR	6536192	Identifier	ts64		6536093	1					
ANR	6536193	Identifier	__rflags		6536093	1					
ANR	6536194	InclusiveOrExpression	( state -> uts . ts64 . __rflags & ~0x100UL ) | ( enable ? 0x100UL : 0 )		6536093	1		|			
ANR	6536195	BitAndExpression	state -> uts . ts64 . __rflags & ~0x100UL		6536093	0		&			
ANR	6536196	MemberAccess	state -> uts . ts64 . __rflags		6536093	0					
ANR	6536197	MemberAccess	state -> uts . ts64		6536093	0					
ANR	6536198	PtrMemberAccess	state -> uts		6536093	0					
ANR	6536199	Identifier	state		6536093	0					
ANR	6536200	Identifier	uts		6536093	1					
ANR	6536201	Identifier	ts64		6536093	1					
ANR	6536202	Identifier	__rflags		6536093	1					
ANR	6536203	Identifier	~0x100UL		6536093	1					
ANR	6536204	ConditionalExpression	enable ? 0x100UL : 0		6536093	1					
ANR	6536205	Condition	enable		6536093	0					
ANR	6536206	Identifier	enable		6536093	0					
ANR	6536207	PrimaryExpression	0x100UL		6536093	1					
ANR	6536208	PrimaryExpression	0		6536093	2					
ANR	6536209	ElseStatement	else		6536093	0					
ANR	6536210	CompoundStatement		16:8:501:501	6536093	0					
ANR	6536211	ExpressionStatement	"eprintf ( ""Invalid bit size\\n"" )"	32:2:1071:1101	6536093	0	True				
ANR	6536212	CallExpression	"eprintf ( ""Invalid bit size\\n"" )"		6536093	0					
ANR	6536213	Callee	eprintf		6536093	0					
ANR	6536214	Identifier	eprintf		6536093	0					
ANR	6536215	ArgumentList	"""Invalid bit size\\n"""		6536093	1					
ANR	6536216	Argument	"""Invalid bit size\\n"""		6536093	0					
ANR	6536217	PrimaryExpression	"""Invalid bit size\\n"""		6536093	0					
ANR	6536218	ReturnStatement	return false ;	33:2:1105:1117	6536093	1	True				
ANR	6536219	Identifier	false		6536093	0					
ANR	6536220	IfStatement	"if ( ! xnu_thread_set_gpr ( dbg , th ) )"		6536093	6					
ANR	6536221	Condition	"! xnu_thread_set_gpr ( dbg , th )"	35:5:1127:1155	6536093	0	True				
ANR	6536222	UnaryOperationExpression	"! xnu_thread_set_gpr ( dbg , th )"		6536093	0					
ANR	6536223	UnaryOperator	!		6536093	0					
ANR	6536224	CallExpression	"xnu_thread_set_gpr ( dbg , th )"		6536093	1					
ANR	6536225	Callee	xnu_thread_set_gpr		6536093	0					
ANR	6536226	Identifier	xnu_thread_set_gpr		6536093	0					
ANR	6536227	ArgumentList	dbg		6536093	1					
ANR	6536228	Argument	dbg		6536093	0					
ANR	6536229	Identifier	dbg		6536093	0					
ANR	6536230	Argument	th		6536093	1					
ANR	6536231	Identifier	th		6536093	0					
ANR	6536232	CompoundStatement		20:36:592:592	6536093	1					
ANR	6536233	ExpressionStatement	"eprintf ( ""error xnu_thread_set_gpr in modify_trace_bit intel\\n"" )"	36:2:1162:1226	6536093	0	True				
ANR	6536234	CallExpression	"eprintf ( ""error xnu_thread_set_gpr in modify_trace_bit intel\\n"" )"		6536093	0					
ANR	6536235	Callee	eprintf		6536093	0					
ANR	6536236	Identifier	eprintf		6536093	0					
ANR	6536237	ArgumentList	"""error xnu_thread_set_gpr in modify_trace_bit intel\\n"""		6536093	1					
ANR	6536238	Argument	"""error xnu_thread_set_gpr in modify_trace_bit intel\\n"""		6536093	0					
ANR	6536239	PrimaryExpression	"""error xnu_thread_set_gpr in modify_trace_bit intel\\n"""		6536093	0					
ANR	6536240	ReturnStatement	return false ;	37:2:1230:1242	6536093	1	True				
ANR	6536241	Identifier	false		6536093	0					
ANR	6536242	ReturnStatement	return true ;	39:1:1248:1259	6536093	7	True				
ANR	6536243	Identifier	true		6536093	0					
ANR	6536244	ReturnType	static bool		6536093	1					
ANR	6536245	Identifier	modify_trace_bit		6536093	2					
ANR	6536246	ParameterList	"RDebug * dbg , xnu_thread_t * th , int enable"		6536093	3					
ANR	6536247	Parameter	RDebug * dbg	16:29:522:532	6536093	0	True				
ANR	6536248	ParameterType	RDebug *		6536093	0					
ANR	6536249	Identifier	dbg		6536093	1					
ANR	6536250	Parameter	xnu_thread_t * th	16:42:535:550	6536093	1	True				
ANR	6536251	ParameterType	xnu_thread_t *		6536093	0					
ANR	6536252	Identifier	th		6536093	1					
ANR	6536253	Parameter	int enable	16:60:553:562	6536093	2	True				
ANR	6536254	ParameterType	int		6536093	0					
ANR	6536255	Identifier	enable		6536093	1					
ANR	6536256	CFGEntryNode	ENTRY		6536093		True				
ANR	6536257	CFGExitNode	EXIT		6536093		True				
ANR	6536258	Symbol	ret		6536093						
ANR	6536259	Symbol	x86_THREAD_STATE64		6536093						
ANR	6536260	Symbol	state -> uts . ts32 . __eflags		6536093						
ANR	6536261	Symbol	xnu_thread_get_gpr		6536093						
ANR	6536262	Symbol	& th -> gpr		6536093						
ANR	6536263	Symbol	x86_THREAD_STATE32		6536093						
ANR	6536264	Symbol	dbg		6536093						
ANR	6536265	Symbol	false		6536093						
ANR	6536266	Symbol	xnu_thread_set_gpr		6536093						
ANR	6536267	Symbol	state -> tsh . flavor		6536093						
ANR	6536268	Symbol	state -> tsh		6536093						
ANR	6536269	Symbol	~0x100UL		6536093						
ANR	6536270	Symbol	* state		6536093						
ANR	6536271	Symbol	state -> uts		6536093						
ANR	6536272	Symbol	th		6536093						
ANR	6536273	Symbol	enable		6536093						
ANR	6536274	Symbol	true		6536093						
ANR	6536275	Symbol	state -> uts . ts64		6536093						
ANR	6536276	Symbol	state -> uts . ts64 . __rflags		6536093						
ANR	6536277	Symbol	state		6536093						
ANR	6536278	Symbol	state -> uts . ts32		6536093						
ANR	6536279	Function	modify_trace_bit	45:0:1428:1509							
ANR	6536280	FunctionDef	"modify_trace_bit (RDebug * dbg , void * th , int enable)"		6536279	0					
ANR	6536281	CompoundStatement		45:64:1492:1509	6536279	0					
ANR	6536282	ReturnStatement	return false ;	46:1:1495:1507	6536279	0	True				
ANR	6536283	Identifier	false		6536279	0					
ANR	6536284	ReturnType	static bool		6536279	1					
ANR	6536285	Identifier	modify_trace_bit		6536279	2					
ANR	6536286	ParameterList	"RDebug * dbg , void * th , int enable"		6536279	3					
ANR	6536287	Parameter	RDebug * dbg	45:29:1457:1467	6536279	0	True				
ANR	6536288	ParameterType	RDebug *		6536279	0					
ANR	6536289	Identifier	dbg		6536279	1					
ANR	6536290	Parameter	void * th	45:42:1470:1477	6536279	1	True				
ANR	6536291	ParameterType	void *		6536279	0					
ANR	6536292	Identifier	th		6536279	1					
ANR	6536293	Parameter	int enable	45:52:1480:1489	6536279	2	True				
ANR	6536294	ParameterType	int		6536279	0					
ANR	6536295	Identifier	enable		6536279	1					
ANR	6536296	CFGEntryNode	ENTRY		6536279		True				
ANR	6536297	CFGExitNode	EXIT		6536279		True				
ANR	6536298	Symbol	th		6536279						
ANR	6536299	Symbol	enable		6536279						
ANR	6536300	Symbol	dbg		6536279						
ANR	6536301	Symbol	false		6536279						
ANR	6536302	Function	modify_trace_bit	49:0:1517:2138							
ANR	6536303	FunctionDef	"modify_trace_bit (RDebug * dbg , xnu_thread * th , int enable)"		6536302	0					
ANR	6536304	CompoundStatement		49:70:1587:2138	6536302	0					
ANR	6536305	ReturnStatement	return false ;	50:1:1590:1602	6536302	0	True				
ANR	6536306	Identifier	false		6536302	0					
ANR	6536307	IdentifierDeclStatement	R_REG_T state ;	51:1:1605:1618	6536302	1	True				
ANR	6536308	IdentifierDecl	state		6536302	0					
ANR	6536309	IdentifierDeclType	R_REG_T		6536302	0					
ANR	6536310	Identifier	state		6536302	1					
ANR	6536311	IdentifierDeclStatement	unsigned int state_count = R_REG_STATE_SZ ;	52:1:1621:1662	6536302	2	True				
ANR	6536312	IdentifierDecl	state_count = R_REG_STATE_SZ		6536302	0					
ANR	6536313	IdentifierDeclType	unsigned int		6536302	0					
ANR	6536314	Identifier	state_count		6536302	1					
ANR	6536315	AssignmentExpression	state_count = R_REG_STATE_SZ		6536302	2		=			
ANR	6536316	Identifier	R_REG_STATE_SZ		6536302	0					
ANR	6536317	Identifier	R_REG_STATE_SZ		6536302	1					
ANR	6536318	IdentifierDeclStatement	kern_return_t kr ;	53:1:1665:1681	6536302	3	True				
ANR	6536319	IdentifierDecl	kr		6536302	0					
ANR	6536320	IdentifierDeclType	kern_return_t		6536302	0					
ANR	6536321	Identifier	kr		6536302	1					
ANR	6536322	ExpressionStatement	"kr = thread_get_state ( th -> tid , R_REG_STATE_T , ( thread_state_t ) & state , & state_count )"	54:1:1684:1771	6536302	4	True				
ANR	6536323	AssignmentExpression	"kr = thread_get_state ( th -> tid , R_REG_STATE_T , ( thread_state_t ) & state , & state_count )"		6536302	0		=			
ANR	6536324	Identifier	kr		6536302	0					
ANR	6536325	CallExpression	"thread_get_state ( th -> tid , R_REG_STATE_T , ( thread_state_t ) & state , & state_count )"		6536302	1					
ANR	6536326	Callee	thread_get_state		6536302	0					
ANR	6536327	Identifier	thread_get_state		6536302	0					
ANR	6536328	ArgumentList	th -> tid		6536302	1					
ANR	6536329	Argument	th -> tid		6536302	0					
ANR	6536330	PtrMemberAccess	th -> tid		6536302	0					
ANR	6536331	Identifier	th		6536302	0					
ANR	6536332	Identifier	tid		6536302	1					
ANR	6536333	Argument	R_REG_STATE_T		6536302	1					
ANR	6536334	Identifier	R_REG_STATE_T		6536302	0					
ANR	6536335	Argument	( thread_state_t ) & state		6536302	2					
ANR	6536336	CastExpression	( thread_state_t ) & state		6536302	0					
ANR	6536337	CastTarget	thread_state_t		6536302	0					
ANR	6536338	UnaryOperationExpression	& state		6536302	1					
ANR	6536339	UnaryOperator	&		6536302	0					
ANR	6536340	Identifier	state		6536302	1					
ANR	6536341	Argument	& state_count		6536302	3					
ANR	6536342	UnaryOperationExpression	& state_count		6536302	0					
ANR	6536343	UnaryOperator	&		6536302	0					
ANR	6536344	Identifier	state_count		6536302	1					
ANR	6536345	IfStatement	if ( kr != KERN_SUCCESS )		6536302	5					
ANR	6536346	Condition	kr != KERN_SUCCESS	56:5:1778:1795	6536302	0	True				
ANR	6536347	EqualityExpression	kr != KERN_SUCCESS		6536302	0		!=			
ANR	6536348	Identifier	kr		6536302	0					
ANR	6536349	Identifier	KERN_SUCCESS		6536302	1					
ANR	6536350	CompoundStatement		8:25:210:210	6536302	1					
ANR	6536351	ExpressionStatement	"eprintf ( ""error modify_trace_bit\\n"" )"	57:2:1802:1838	6536302	0	True				
ANR	6536352	CallExpression	"eprintf ( ""error modify_trace_bit\\n"" )"		6536302	0					
ANR	6536353	Callee	eprintf		6536302	0					
ANR	6536354	Identifier	eprintf		6536302	0					
ANR	6536355	ArgumentList	"""error modify_trace_bit\\n"""		6536302	1					
ANR	6536356	Argument	"""error modify_trace_bit\\n"""		6536302	0					
ANR	6536357	PrimaryExpression	"""error modify_trace_bit\\n"""		6536302	0					
ANR	6536358	ReturnStatement	return false ;	58:2:1842:1854	6536302	1	True				
ANR	6536359	Identifier	false		6536302	0					
ANR	6536360	ExpressionStatement	state . srr1 = ( state . srr1 & ~0x400UL ) | ( enable ? 0x400UL : 0 )	60:1:1860:1921	6536302	6	True				
ANR	6536361	AssignmentExpression	state . srr1 = ( state . srr1 & ~0x400UL ) | ( enable ? 0x400UL : 0 )		6536302	0		=			
ANR	6536362	MemberAccess	state . srr1		6536302	0					
ANR	6536363	Identifier	state		6536302	0					
ANR	6536364	Identifier	srr1		6536302	1					
ANR	6536365	InclusiveOrExpression	( state . srr1 & ~0x400UL ) | ( enable ? 0x400UL : 0 )		6536302	1		|			
ANR	6536366	BitAndExpression	state . srr1 & ~0x400UL		6536302	0		&			
ANR	6536367	MemberAccess	state . srr1		6536302	0					
ANR	6536368	Identifier	state		6536302	0					
ANR	6536369	Identifier	srr1		6536302	1					
ANR	6536370	Identifier	~0x400UL		6536302	1					
ANR	6536371	ConditionalExpression	enable ? 0x400UL : 0		6536302	1					
ANR	6536372	Condition	enable		6536302	0					
ANR	6536373	Identifier	enable		6536302	0					
ANR	6536374	PrimaryExpression	0x400UL		6536302	1					
ANR	6536375	PrimaryExpression	0		6536302	2					
ANR	6536376	ExpressionStatement	"kr = thread_set_state ( th -> tid , R_REG_STATE_T , ( thread_state_t ) & state , state_count )"	61:1:1924:2010	6536302	7	True				
ANR	6536377	AssignmentExpression	"kr = thread_set_state ( th -> tid , R_REG_STATE_T , ( thread_state_t ) & state , state_count )"		6536302	0		=			
ANR	6536378	Identifier	kr		6536302	0					
ANR	6536379	CallExpression	"thread_set_state ( th -> tid , R_REG_STATE_T , ( thread_state_t ) & state , state_count )"		6536302	1					
ANR	6536380	Callee	thread_set_state		6536302	0					
ANR	6536381	Identifier	thread_set_state		6536302	0					
ANR	6536382	ArgumentList	th -> tid		6536302	1					
ANR	6536383	Argument	th -> tid		6536302	0					
ANR	6536384	PtrMemberAccess	th -> tid		6536302	0					
ANR	6536385	Identifier	th		6536302	0					
ANR	6536386	Identifier	tid		6536302	1					
ANR	6536387	Argument	R_REG_STATE_T		6536302	1					
ANR	6536388	Identifier	R_REG_STATE_T		6536302	0					
ANR	6536389	Argument	( thread_state_t ) & state		6536302	2					
ANR	6536390	CastExpression	( thread_state_t ) & state		6536302	0					
ANR	6536391	CastTarget	thread_state_t		6536302	0					
ANR	6536392	UnaryOperationExpression	& state		6536302	1					
ANR	6536393	UnaryOperator	&		6536302	0					
ANR	6536394	Identifier	state		6536302	1					
ANR	6536395	Argument	state_count		6536302	3					
ANR	6536396	Identifier	state_count		6536302	0					
ANR	6536397	IfStatement	if ( kr != KERN_SUCCESS )		6536302	8					
ANR	6536398	Condition	kr != KERN_SUCCESS	63:5:2017:2034	6536302	0	True				
ANR	6536399	EqualityExpression	kr != KERN_SUCCESS		6536302	0		!=			
ANR	6536400	Identifier	kr		6536302	0					
ANR	6536401	Identifier	KERN_SUCCESS		6536302	1					
ANR	6536402	CompoundStatement		15:25:449:449	6536302	1					
ANR	6536403	ExpressionStatement	"eprintf ( ""Error to set thread state modificy_trace_bit ppc\\n"" )"	64:2:2041:2103	6536302	0	True				
ANR	6536404	CallExpression	"eprintf ( ""Error to set thread state modificy_trace_bit ppc\\n"" )"		6536302	0					
ANR	6536405	Callee	eprintf		6536302	0					
ANR	6536406	Identifier	eprintf		6536302	0					
ANR	6536407	ArgumentList	"""Error to set thread state modificy_trace_bit ppc\\n"""		6536302	1					
ANR	6536408	Argument	"""Error to set thread state modificy_trace_bit ppc\\n"""		6536302	0					
ANR	6536409	PrimaryExpression	"""Error to set thread state modificy_trace_bit ppc\\n"""		6536302	0					
ANR	6536410	ReturnStatement	return false ;	65:2:2107:2119	6536302	1	True				
ANR	6536411	Identifier	false		6536302	0					
ANR	6536412	ReturnStatement	return true ;	67:1:2125:2136	6536302	9	True				
ANR	6536413	Identifier	true		6536302	0					
ANR	6536414	ReturnType	static bool		6536302	1					
ANR	6536415	Identifier	modify_trace_bit		6536302	2					
ANR	6536416	ParameterList	"RDebug * dbg , xnu_thread * th , int enable"		6536302	3					
ANR	6536417	Parameter	RDebug * dbg	49:29:1546:1556	6536302	0	True				
ANR	6536418	ParameterType	RDebug *		6536302	0					
ANR	6536419	Identifier	dbg		6536302	1					
ANR	6536420	Parameter	xnu_thread * th	49:42:1559:1572	6536302	1	True				
ANR	6536421	ParameterType	xnu_thread *		6536302	0					
ANR	6536422	Identifier	th		6536302	1					
ANR	6536423	Parameter	int enable	49:58:1575:1584	6536302	2	True				
ANR	6536424	ParameterType	int		6536302	0					
ANR	6536425	Identifier	enable		6536302	1					
ANR	6536426	CFGEntryNode	ENTRY		6536302		True				
ANR	6536427	CFGExitNode	EXIT		6536302		True				
ANR	6536428	Symbol	thread_get_state		6536302						
ANR	6536429	Symbol	th -> tid		6536302						
ANR	6536430	Symbol	& state		6536302						
ANR	6536431	Symbol	state . srr1		6536302						
ANR	6536432	Symbol	kr		6536302						
ANR	6536433	Symbol	dbg		6536302						
ANR	6536434	Symbol	false		6536302						
ANR	6536435	Symbol	state_count		6536302						
ANR	6536436	Symbol	th		6536302						
ANR	6536437	Symbol	enable		6536302						
ANR	6536438	Symbol	true		6536302						
ANR	6536439	Symbol	* th		6536302						
ANR	6536440	Symbol	thread_set_state		6536302						
ANR	6536441	Symbol	KERN_SUCCESS		6536302						
ANR	6536442	Symbol	state		6536302						
ANR	6536443	Symbol	R_REG_STATE_SZ		6536302						
ANR	6536444	Symbol	& state_count		6536302						
ANR	6536445	Symbol	R_REG_STATE_T		6536302						
ANR	6536446	Symbol	~0x400UL		6536302						
ANR	6536447	Function	is_thumb_32	109:0:3417:3506							
ANR	6536448	FunctionDef	is_thumb_32 (ut16 op)		6536447	0					
ANR	6536449	CompoundStatement		109:33:3450:3506	6536447	0					
ANR	6536450	ReturnStatement	return ( ( ( op & 0xE000 ) == 0xE000 ) && ( op & 0x1800 ) ) ;	110:1:3453:3504	6536447	0	True				
ANR	6536451	AndExpression	( ( op & 0xE000 ) == 0xE000 ) && ( op & 0x1800 )		6536447	0		&&			
ANR	6536452	EqualityExpression	( op & 0xE000 ) == 0xE000		6536447	0		==			
ANR	6536453	BitAndExpression	op & 0xE000		6536447	0		&			
ANR	6536454	Identifier	op		6536447	0					
ANR	6536455	PrimaryExpression	0xE000		6536447	1					
ANR	6536456	PrimaryExpression	0xE000		6536447	1					
ANR	6536457	BitAndExpression	op & 0x1800		6536447	1		&			
ANR	6536458	Identifier	op		6536447	0					
ANR	6536459	PrimaryExpression	0x1800		6536447	1					
ANR	6536460	ReturnType	static bool		6536447	1					
ANR	6536461	Identifier	is_thumb_32		6536447	2					
ANR	6536462	ParameterList	ut16 op		6536447	3					
ANR	6536463	Parameter	ut16 op	109:24:3441:3447	6536447	0	True				
ANR	6536464	ParameterType	ut16		6536447	0					
ANR	6536465	Identifier	op		6536447	1					
ANR	6536466	CFGEntryNode	ENTRY		6536447		True				
ANR	6536467	CFGExitNode	EXIT		6536447		True				
ANR	6536468	Symbol	op		6536447						
ANR	6536469	Function	modify_trace_bit	114:0:3516:6284							
ANR	6536470	FunctionDef	"modify_trace_bit (RDebug * dbg , xnu_thread_t * th , int enable)"		6536469	0					
ANR	6536471	CompoundStatement		114:71:3587:6284	6536469	0					
ANR	6536472	IdentifierDeclStatement	int i = 0 ;	115:1:3590:3599	6536469	0	True				
ANR	6536473	IdentifierDecl	i = 0		6536469	0					
ANR	6536474	IdentifierDeclType	int		6536469	0					
ANR	6536475	Identifier	i		6536469	1					
ANR	6536476	AssignmentExpression	i = 0		6536469	2		=			
ANR	6536477	Identifier	i		6536469	0					
ANR	6536478	PrimaryExpression	0		6536469	1					
ANR	6536479	IdentifierDeclStatement	"int ret = xnu_thread_get_drx ( dbg , th ) ;"	116:1:3602:3640	6536469	1	True				
ANR	6536480	IdentifierDecl	"ret = xnu_thread_get_drx ( dbg , th )"		6536469	0					
ANR	6536481	IdentifierDeclType	int		6536469	0					
ANR	6536482	Identifier	ret		6536469	1					
ANR	6536483	AssignmentExpression	"ret = xnu_thread_get_drx ( dbg , th )"		6536469	2		=			
ANR	6536484	Identifier	ret		6536469	0					
ANR	6536485	CallExpression	"xnu_thread_get_drx ( dbg , th )"		6536469	1					
ANR	6536486	Callee	xnu_thread_get_drx		6536469	0					
ANR	6536487	Identifier	xnu_thread_get_drx		6536469	0					
ANR	6536488	ArgumentList	dbg		6536469	1					
ANR	6536489	Argument	dbg		6536469	0					
ANR	6536490	Identifier	dbg		6536469	0					
ANR	6536491	Argument	th		6536469	1					
ANR	6536492	Identifier	th		6536469	0					
ANR	6536493	IfStatement	if ( ! ret )		6536469	2					
ANR	6536494	Condition	! ret	117:5:3647:3650	6536469	0	True				
ANR	6536495	UnaryOperationExpression	! ret		6536469	0					
ANR	6536496	UnaryOperator	!		6536469	0					
ANR	6536497	Identifier	ret		6536469	1					
ANR	6536498	CompoundStatement		4:11:65:65	6536469	1					
ANR	6536499	ExpressionStatement	"eprintf ( ""error to get drx registers modificy_trace_bit arm\\n"" )"	118:2:3657:3720	6536469	0	True				
ANR	6536500	CallExpression	"eprintf ( ""error to get drx registers modificy_trace_bit arm\\n"" )"		6536469	0					
ANR	6536501	Callee	eprintf		6536469	0					
ANR	6536502	Identifier	eprintf		6536469	0					
ANR	6536503	ArgumentList	"""error to get drx registers modificy_trace_bit arm\\n"""		6536469	1					
ANR	6536504	Argument	"""error to get drx registers modificy_trace_bit arm\\n"""		6536469	0					
ANR	6536505	PrimaryExpression	"""error to get drx registers modificy_trace_bit arm\\n"""		6536469	0					
ANR	6536506	ReturnStatement	return false ;	119:2:3724:3736	6536469	1	True				
ANR	6536507	Identifier	false		6536469	0					
ANR	6536508	IfStatement	if ( th -> flavor == ARM_DEBUG_STATE32 )		6536469	3					
ANR	6536509	Condition	th -> flavor == ARM_DEBUG_STATE32	122:5:3799:3829	6536469	0	True				
ANR	6536510	EqualityExpression	th -> flavor == ARM_DEBUG_STATE32		6536469	0		==			
ANR	6536511	PtrMemberAccess	th -> flavor		6536469	0					
ANR	6536512	Identifier	th		6536469	0					
ANR	6536513	Identifier	flavor		6536469	1					
ANR	6536514	Identifier	ARM_DEBUG_STATE32		6536469	1					
ANR	6536515	CompoundStatement		10:2:248:293	6536469	1					
ANR	6536516	IdentifierDeclStatement	arm_debug_state32_t * state = & th -> debug . drx32 ;	123:2:3836:3881	6536469	0	True				
ANR	6536517	IdentifierDecl	* state = & th -> debug . drx32		6536469	0					
ANR	6536518	IdentifierDeclType	arm_debug_state32_t *		6536469	0					
ANR	6536519	Identifier	state		6536469	1					
ANR	6536520	AssignmentExpression	* state = & th -> debug . drx32		6536469	2		=			
ANR	6536521	Identifier	state		6536469	0					
ANR	6536522	UnaryOperationExpression	& th -> debug . drx32		6536469	1					
ANR	6536523	UnaryOperator	&		6536469	0					
ANR	6536524	MemberAccess	th -> debug . drx32		6536469	1					
ANR	6536525	PtrMemberAccess	th -> debug		6536469	0					
ANR	6536526	Identifier	th		6536469	0					
ANR	6536527	Identifier	debug		6536469	1					
ANR	6536528	Identifier	drx32		6536469	1					
ANR	6536529	IfStatement	if ( enable )		6536469	1					
ANR	6536530	Condition	enable	124:6:3889:3894	6536469	0	True				
ANR	6536531	Identifier	enable		6536469	0					
ANR	6536532	CompoundStatement		11:14:309:309	6536469	1					
ANR	6536533	ExpressionStatement	state -> __mdscr_el1 = state -> __mdscr_el1 | SS_ENABLE	125:3:3902:3953	6536469	0	True				
ANR	6536534	AssignmentExpression	state -> __mdscr_el1 = state -> __mdscr_el1 | SS_ENABLE		6536469	0		=			
ANR	6536535	PtrMemberAccess	state -> __mdscr_el1		6536469	0					
ANR	6536536	Identifier	state		6536469	0					
ANR	6536537	Identifier	__mdscr_el1		6536469	1					
ANR	6536538	InclusiveOrExpression	state -> __mdscr_el1 | SS_ENABLE		6536469	1		|			
ANR	6536539	PtrMemberAccess	state -> __mdscr_el1		6536469	0					
ANR	6536540	Identifier	state		6536469	0					
ANR	6536541	Identifier	__mdscr_el1		6536469	1					
ANR	6536542	Identifier	SS_ENABLE		6536469	1					
ANR	6536543	ElseStatement	else		6536469	0					
ANR	6536544	CompoundStatement		13:9:376:376	6536469	0					
ANR	6536545	ExpressionStatement	state -> __mdscr_el1 = state -> __mdscr_el1 & ~SS_ENABLE	127:3:3969:4021	6536469	0	True				
ANR	6536546	AssignmentExpression	state -> __mdscr_el1 = state -> __mdscr_el1 & ~SS_ENABLE		6536469	0		=			
ANR	6536547	PtrMemberAccess	state -> __mdscr_el1		6536469	0					
ANR	6536548	Identifier	state		6536469	0					
ANR	6536549	Identifier	__mdscr_el1		6536469	1					
ANR	6536550	BitAndExpression	state -> __mdscr_el1 & ~SS_ENABLE		6536469	1		&			
ANR	6536551	PtrMemberAccess	state -> __mdscr_el1		6536469	0					
ANR	6536552	Identifier	state		6536469	0					
ANR	6536553	Identifier	__mdscr_el1		6536469	1					
ANR	6536554	Identifier	~SS_ENABLE		6536469	1					
ANR	6536555	ElseStatement	else		6536469	0					
ANR	6536556	IfStatement	if ( th -> flavor == ARM_DEBUG_STATE64 )		6536469	0					
ANR	6536557	Condition	th -> flavor == ARM_DEBUG_STATE64	129:12:4039:4069	6536469	0	True				
ANR	6536558	EqualityExpression	th -> flavor == ARM_DEBUG_STATE64		6536469	0		==			
ANR	6536559	PtrMemberAccess	th -> flavor		6536469	0					
ANR	6536560	Identifier	th		6536469	0					
ANR	6536561	Identifier	flavor		6536469	1					
ANR	6536562	Identifier	ARM_DEBUG_STATE64		6536469	1					
ANR	6536563	CompoundStatement		17:2:488:533	6536469	1					
ANR	6536564	IdentifierDeclStatement	arm_debug_state64_t * state = & th -> debug . drx64 ;	130:2:4076:4121	6536469	0	True				
ANR	6536565	IdentifierDecl	* state = & th -> debug . drx64		6536469	0					
ANR	6536566	IdentifierDeclType	arm_debug_state64_t *		6536469	0					
ANR	6536567	Identifier	state		6536469	1					
ANR	6536568	AssignmentExpression	* state = & th -> debug . drx64		6536469	2		=			
ANR	6536569	Identifier	state		6536469	0					
ANR	6536570	UnaryOperationExpression	& th -> debug . drx64		6536469	1					
ANR	6536571	UnaryOperator	&		6536469	0					
ANR	6536572	MemberAccess	th -> debug . drx64		6536469	1					
ANR	6536573	PtrMemberAccess	th -> debug		6536469	0					
ANR	6536574	Identifier	th		6536469	0					
ANR	6536575	Identifier	debug		6536469	1					
ANR	6536576	Identifier	drx64		6536469	1					
ANR	6536577	IfStatement	if ( enable )		6536469	1					
ANR	6536578	Condition	enable	131:6:4129:4134	6536469	0	True				
ANR	6536579	Identifier	enable		6536469	0					
ANR	6536580	CompoundStatement		18:14:549:549	6536469	1					
ANR	6536581	ExpressionStatement	state -> __mdscr_el1 = state -> __mdscr_el1 | SS_ENABLE	132:3:4142:4193	6536469	0	True				
ANR	6536582	AssignmentExpression	state -> __mdscr_el1 = state -> __mdscr_el1 | SS_ENABLE		6536469	0		=			
ANR	6536583	PtrMemberAccess	state -> __mdscr_el1		6536469	0					
ANR	6536584	Identifier	state		6536469	0					
ANR	6536585	Identifier	__mdscr_el1		6536469	1					
ANR	6536586	InclusiveOrExpression	state -> __mdscr_el1 | SS_ENABLE		6536469	1		|			
ANR	6536587	PtrMemberAccess	state -> __mdscr_el1		6536469	0					
ANR	6536588	Identifier	state		6536469	0					
ANR	6536589	Identifier	__mdscr_el1		6536469	1					
ANR	6536590	Identifier	SS_ENABLE		6536469	1					
ANR	6536591	ElseStatement	else		6536469	0					
ANR	6536592	CompoundStatement		20:9:616:616	6536469	0					
ANR	6536593	ExpressionStatement	state -> __mdscr_el1 = state -> __mdscr_el1 & ~SS_ENABLE	134:3:4209:4261	6536469	0	True				
ANR	6536594	AssignmentExpression	state -> __mdscr_el1 = state -> __mdscr_el1 & ~SS_ENABLE		6536469	0		=			
ANR	6536595	PtrMemberAccess	state -> __mdscr_el1		6536469	0					
ANR	6536596	Identifier	state		6536469	0					
ANR	6536597	Identifier	__mdscr_el1		6536469	1					
ANR	6536598	BitAndExpression	state -> __mdscr_el1 & ~SS_ENABLE		6536469	1		&			
ANR	6536599	PtrMemberAccess	state -> __mdscr_el1		6536469	0					
ANR	6536600	Identifier	state		6536469	0					
ANR	6536601	Identifier	__mdscr_el1		6536469	1					
ANR	6536602	Identifier	~SS_ENABLE		6536469	1					
ANR	6536603	ElseStatement	else		6536469	0					
ANR	6536604	CompoundStatement		86:1:2483:2483	6536469	0					
ANR	6536605	ExpressionStatement	"eprintf ( ""Bad flavor modificy_trace_bit arm\\n"" )"	200:2:6075:6122	6536469	0	True				
ANR	6536606	CallExpression	"eprintf ( ""Bad flavor modificy_trace_bit arm\\n"" )"		6536469	0					
ANR	6536607	Callee	eprintf		6536469	0					
ANR	6536608	Identifier	eprintf		6536469	0					
ANR	6536609	ArgumentList	"""Bad flavor modificy_trace_bit arm\\n"""		6536469	1					
ANR	6536610	Argument	"""Bad flavor modificy_trace_bit arm\\n"""		6536469	0					
ANR	6536611	PrimaryExpression	"""Bad flavor modificy_trace_bit arm\\n"""		6536469	0					
ANR	6536612	ReturnStatement	return false ;	201:2:6126:6138	6536469	1	True				
ANR	6536613	Identifier	false		6536469	0					
ANR	6536614	IfStatement	"if ( ! xnu_thread_set_drx ( dbg , th ) )"		6536469	4					
ANR	6536615	Condition	"! xnu_thread_set_drx ( dbg , th )"	204:5:6161:6189	6536469	0	True				
ANR	6536616	UnaryOperationExpression	"! xnu_thread_set_drx ( dbg , th )"		6536469	0					
ANR	6536617	UnaryOperator	!		6536469	0					
ANR	6536618	CallExpression	"xnu_thread_set_drx ( dbg , th )"		6536469	1					
ANR	6536619	Callee	xnu_thread_set_drx		6536469	0					
ANR	6536620	Identifier	xnu_thread_set_drx		6536469	0					
ANR	6536621	ArgumentList	dbg		6536469	1					
ANR	6536622	Argument	dbg		6536469	0					
ANR	6536623	Identifier	dbg		6536469	0					
ANR	6536624	Argument	th		6536469	1					
ANR	6536625	Identifier	th		6536469	0					
ANR	6536626	CompoundStatement		91:36:2604:2604	6536469	1					
ANR	6536627	ExpressionStatement	"eprintf ( ""error to set drx modificy_trace_bit arm\\n"" )"	205:2:6196:6249	6536469	0	True				
ANR	6536628	CallExpression	"eprintf ( ""error to set drx modificy_trace_bit arm\\n"" )"		6536469	0					
ANR	6536629	Callee	eprintf		6536469	0					
ANR	6536630	Identifier	eprintf		6536469	0					
ANR	6536631	ArgumentList	"""error to set drx modificy_trace_bit arm\\n"""		6536469	1					
ANR	6536632	Argument	"""error to set drx modificy_trace_bit arm\\n"""		6536469	0					
ANR	6536633	PrimaryExpression	"""error to set drx modificy_trace_bit arm\\n"""		6536469	0					
ANR	6536634	ReturnStatement	return false ;	206:2:6253:6265	6536469	1	True				
ANR	6536635	Identifier	false		6536469	0					
ANR	6536636	ReturnStatement	return true ;	208:1:6271:6282	6536469	5	True				
ANR	6536637	Identifier	true		6536469	0					
ANR	6536638	ReturnType	static int		6536469	1					
ANR	6536639	Identifier	modify_trace_bit		6536469	2					
ANR	6536640	ParameterList	"RDebug * dbg , xnu_thread_t * th , int enable"		6536469	3					
ANR	6536641	Parameter	RDebug * dbg	114:28:3544:3554	6536469	0	True				
ANR	6536642	ParameterType	RDebug *		6536469	0					
ANR	6536643	Identifier	dbg		6536469	1					
ANR	6536644	Parameter	xnu_thread_t * th	114:41:3557:3572	6536469	1	True				
ANR	6536645	ParameterType	xnu_thread_t *		6536469	0					
ANR	6536646	Identifier	th		6536469	1					
ANR	6536647	Parameter	int enable	114:59:3575:3584	6536469	2	True				
ANR	6536648	ParameterType	int		6536469	0					
ANR	6536649	Identifier	enable		6536469	1					
ANR	6536650	CFGEntryNode	ENTRY		6536469		True				
ANR	6536651	CFGExitNode	EXIT		6536469		True				
ANR	6536652	Symbol	ret		6536469						
ANR	6536653	Symbol	xnu_thread_set_drx		6536469						
ANR	6536654	Symbol	xnu_thread_get_drx		6536469						
ANR	6536655	Symbol	state -> __mdscr_el1		6536469						
ANR	6536656	Symbol	dbg		6536469						
ANR	6536657	Symbol	false		6536469						
ANR	6536658	Symbol	& th -> debug . drx64		6536469						
ANR	6536659	Symbol	i		6536469						
ANR	6536660	Symbol	& th -> debug . drx32		6536469						
ANR	6536661	Symbol	SS_ENABLE		6536469						
ANR	6536662	Symbol	~SS_ENABLE		6536469						
ANR	6536663	Symbol	ARM_DEBUG_STATE32		6536469						
ANR	6536664	Symbol	* state		6536469						
ANR	6536665	Symbol	ARM_DEBUG_STATE64		6536469						
ANR	6536666	Symbol	th		6536469						
ANR	6536667	Symbol	enable		6536469						
ANR	6536668	Symbol	th -> debug		6536469						
ANR	6536669	Symbol	true		6536469						
ANR	6536670	Symbol	* th		6536469						
ANR	6536671	Symbol	& th -> debug		6536469						
ANR	6536672	Symbol	th -> flavor		6536469						
ANR	6536673	Symbol	state		6536469						
ANR	6536674	Function	modify_trace_bit	213:0:6333:6418							
ANR	6536675	FunctionDef	"modify_trace_bit (RDebug * dbg , xnu_thread * th , int enable)"		6536674	0					
ANR	6536676	CompoundStatement		213:69:6402:6418	6536674	0					
ANR	6536677	ReturnStatement	return true ;	214:1:6405:6416	6536674	0	True				
ANR	6536678	Identifier	true		6536674	0					
ANR	6536679	ReturnType	static int		6536674	1					
ANR	6536680	Identifier	modify_trace_bit		6536674	2					
ANR	6536681	ParameterList	"RDebug * dbg , xnu_thread * th , int enable"		6536674	3					
ANR	6536682	Parameter	RDebug * dbg	213:28:6361:6371	6536674	0	True				
ANR	6536683	ParameterType	RDebug *		6536674	0					
ANR	6536684	Identifier	dbg		6536674	1					
ANR	6536685	Parameter	xnu_thread * th	213:41:6374:6387	6536674	1	True				
ANR	6536686	ParameterType	xnu_thread *		6536674	0					
ANR	6536687	Identifier	th		6536674	1					
ANR	6536688	Parameter	int enable	213:57:6390:6399	6536674	2	True				
ANR	6536689	ParameterType	int		6536674	0					
ANR	6536690	Identifier	enable		6536674	1					
ANR	6536691	CFGEntryNode	ENTRY		6536674		True				
ANR	6536692	CFGExitNode	EXIT		6536674		True				
ANR	6536693	Symbol	th		6536674						
ANR	6536694	Symbol	enable		6536674						
ANR	6536695	Symbol	dbg		6536674						
ANR	6536696	Symbol	true		6536674						
ANR	6536697	DeclStmt									
ANR	6536698	Decl							xnu_exception_info	xnu_exception_info	ex
ANR	6536699	Function	xnu_restore_exception_ports	223:0:6581:7148							
ANR	6536700	FunctionDef	xnu_restore_exception_ports (int pid)		6536699	0					
ANR	6536701	CompoundStatement		223:50:6631:7148	6536699	0					
ANR	6536702	IdentifierDeclStatement	kern_return_t kr ;	224:1:6634:6650	6536699	0	True				
ANR	6536703	IdentifierDecl	kr		6536699	0					
ANR	6536704	IdentifierDeclType	kern_return_t		6536699	0					
ANR	6536705	Identifier	kr		6536699	1					
ANR	6536706	IdentifierDeclStatement	int i ;	225:1:6653:6658	6536699	1	True				
ANR	6536707	IdentifierDecl	i		6536699	0					
ANR	6536708	IdentifierDeclType	int		6536699	0					
ANR	6536709	Identifier	i		6536699	1					
ANR	6536710	IdentifierDeclStatement	task_t task = pid_to_task ( pid ) ;	226:1:6661:6692	6536699	2	True				
ANR	6536711	IdentifierDecl	task = pid_to_task ( pid )		6536699	0					
ANR	6536712	IdentifierDeclType	task_t		6536699	0					
ANR	6536713	Identifier	task		6536699	1					
ANR	6536714	AssignmentExpression	task = pid_to_task ( pid )		6536699	2		=			
ANR	6536715	Identifier	task		6536699	0					
ANR	6536716	CallExpression	pid_to_task ( pid )		6536699	1					
ANR	6536717	Callee	pid_to_task		6536699	0					
ANR	6536718	Identifier	pid_to_task		6536699	0					
ANR	6536719	ArgumentList	pid		6536699	1					
ANR	6536720	Argument	pid		6536699	0					
ANR	6536721	Identifier	pid		6536699	0					
ANR	6536722	IfStatement	if ( ! task )		6536699	3					
ANR	6536723	Condition	! task	227:5:6699:6703	6536699	0	True				
ANR	6536724	UnaryOperationExpression	! task		6536699	0					
ANR	6536725	UnaryOperator	!		6536699	0					
ANR	6536726	Identifier	task		6536699	1					
ANR	6536727	ReturnStatement	return false ;	228:2:6708:6720	6536699	1	True				
ANR	6536728	Identifier	false		6536699	0					
ANR	6536729	ForStatement	for ( i = 0 ; i < ex . count ; i ++ )		6536699	4					
ANR	6536730	ForInit	i = 0 ;	229:6:6728:6733	6536699	0	True				
ANR	6536731	AssignmentExpression	i = 0		6536699	0		=			
ANR	6536732	Identifier	i		6536699	0					
ANR	6536733	PrimaryExpression	0		6536699	1					
ANR	6536734	Condition	i < ex . count	229:13:6735:6746	6536699	1	True				
ANR	6536735	RelationalExpression	i < ex . count		6536699	0		<			
ANR	6536736	Identifier	i		6536699	0					
ANR	6536737	MemberAccess	ex . count		6536699	1					
ANR	6536738	Identifier	ex		6536699	0					
ANR	6536739	Identifier	count		6536699	1					
ANR	6536740	PostIncDecOperationExpression	i ++	229:27:6749:6751	6536699	2	True				
ANR	6536741	Identifier	i		6536699	0					
ANR	6536742	IncDec	++		6536699	1					
ANR	6536743	CompoundStatement		7:32:122:122	6536699	3					
ANR	6536744	ExpressionStatement	"kr = task_set_exception_ports ( task , ex . masks [ i ] , ex . ports [ i ] , ex . behaviors [ i ] , ex . flavors [ i ] )"	230:2:6758:6864	6536699	0	True				
ANR	6536745	AssignmentExpression	"kr = task_set_exception_ports ( task , ex . masks [ i ] , ex . ports [ i ] , ex . behaviors [ i ] , ex . flavors [ i ] )"		6536699	0		=			
ANR	6536746	Identifier	kr		6536699	0					
ANR	6536747	CallExpression	"task_set_exception_ports ( task , ex . masks [ i ] , ex . ports [ i ] , ex . behaviors [ i ] , ex . flavors [ i ] )"		6536699	1					
ANR	6536748	Callee	task_set_exception_ports		6536699	0					
ANR	6536749	Identifier	task_set_exception_ports		6536699	0					
ANR	6536750	ArgumentList	task		6536699	1					
ANR	6536751	Argument	task		6536699	0					
ANR	6536752	Identifier	task		6536699	0					
ANR	6536753	Argument	ex . masks [ i ]		6536699	1					
ANR	6536754	ArrayIndexing	ex . masks [ i ]		6536699	0					
ANR	6536755	MemberAccess	ex . masks		6536699	0					
ANR	6536756	Identifier	ex		6536699	0					
ANR	6536757	Identifier	masks		6536699	1					
ANR	6536758	Identifier	i		6536699	1					
ANR	6536759	Argument	ex . ports [ i ]		6536699	2					
ANR	6536760	ArrayIndexing	ex . ports [ i ]		6536699	0					
ANR	6536761	MemberAccess	ex . ports		6536699	0					
ANR	6536762	Identifier	ex		6536699	0					
ANR	6536763	Identifier	ports		6536699	1					
ANR	6536764	Identifier	i		6536699	1					
ANR	6536765	Argument	ex . behaviors [ i ]		6536699	3					
ANR	6536766	ArrayIndexing	ex . behaviors [ i ]		6536699	0					
ANR	6536767	MemberAccess	ex . behaviors		6536699	0					
ANR	6536768	Identifier	ex		6536699	0					
ANR	6536769	Identifier	behaviors		6536699	1					
ANR	6536770	Identifier	i		6536699	1					
ANR	6536771	Argument	ex . flavors [ i ]		6536699	4					
ANR	6536772	ArrayIndexing	ex . flavors [ i ]		6536699	0					
ANR	6536773	MemberAccess	ex . flavors		6536699	0					
ANR	6536774	Identifier	ex		6536699	0					
ANR	6536775	Identifier	flavors		6536699	1					
ANR	6536776	Identifier	i		6536699	1					
ANR	6536777	IfStatement	if ( kr != KERN_SUCCESS )		6536699	1					
ANR	6536778	Condition	kr != KERN_SUCCESS	232:6:6872:6889	6536699	0	True				
ANR	6536779	EqualityExpression	kr != KERN_SUCCESS		6536699	0		!=			
ANR	6536780	Identifier	kr		6536699	0					
ANR	6536781	Identifier	KERN_SUCCESS		6536699	1					
ANR	6536782	CompoundStatement		10:26:260:260	6536699	1					
ANR	6536783	ExpressionStatement	"eprintf ( ""fail to restore exception ports\\n"" )"	233:3:6897:6942	6536699	0	True				
ANR	6536784	CallExpression	"eprintf ( ""fail to restore exception ports\\n"" )"		6536699	0					
ANR	6536785	Callee	eprintf		6536699	0					
ANR	6536786	Identifier	eprintf		6536699	0					
ANR	6536787	ArgumentList	"""fail to restore exception ports\\n"""		6536699	1					
ANR	6536788	Argument	"""fail to restore exception ports\\n"""		6536699	0					
ANR	6536789	PrimaryExpression	"""fail to restore exception ports\\n"""		6536699	0					
ANR	6536790	ReturnStatement	return false ;	234:3:6947:6959	6536699	1	True				
ANR	6536791	Identifier	false		6536699	0					
ANR	6536792	ExpressionStatement	"kr = mach_port_deallocate ( mach_task_self ( ) , ex . exception_port )"	237:1:6969:7033	6536699	5	True				
ANR	6536793	AssignmentExpression	"kr = mach_port_deallocate ( mach_task_self ( ) , ex . exception_port )"		6536699	0		=			
ANR	6536794	Identifier	kr		6536699	0					
ANR	6536795	CallExpression	"mach_port_deallocate ( mach_task_self ( ) , ex . exception_port )"		6536699	1					
ANR	6536796	Callee	mach_port_deallocate		6536699	0					
ANR	6536797	Identifier	mach_port_deallocate		6536699	0					
ANR	6536798	ArgumentList	mach_task_self ( )		6536699	1					
ANR	6536799	Argument	mach_task_self ( )		6536699	0					
ANR	6536800	CallExpression	mach_task_self ( )		6536699	0					
ANR	6536801	Callee	mach_task_self		6536699	0					
ANR	6536802	Identifier	mach_task_self		6536699	0					
ANR	6536803	ArgumentList			6536699	1					
ANR	6536804	Argument	ex . exception_port		6536699	1					
ANR	6536805	MemberAccess	ex . exception_port		6536699	0					
ANR	6536806	Identifier	ex		6536699	0					
ANR	6536807	Identifier	exception_port		6536699	1					
ANR	6536808	IfStatement	if ( kr != KERN_SUCCESS )		6536699	6					
ANR	6536809	Condition	kr != KERN_SUCCESS	238:5:7040:7057	6536699	0	True				
ANR	6536810	EqualityExpression	kr != KERN_SUCCESS		6536699	0		!=			
ANR	6536811	Identifier	kr		6536699	0					
ANR	6536812	Identifier	KERN_SUCCESS		6536699	1					
ANR	6536813	CompoundStatement		16:25:428:428	6536699	1					
ANR	6536814	ExpressionStatement	"eprintf ( ""failed to deallocate exception port\\n"" )"	239:2:7064:7113	6536699	0	True				
ANR	6536815	CallExpression	"eprintf ( ""failed to deallocate exception port\\n"" )"		6536699	0					
ANR	6536816	Callee	eprintf		6536699	0					
ANR	6536817	Identifier	eprintf		6536699	0					
ANR	6536818	ArgumentList	"""failed to deallocate exception port\\n"""		6536699	1					
ANR	6536819	Argument	"""failed to deallocate exception port\\n"""		6536699	0					
ANR	6536820	PrimaryExpression	"""failed to deallocate exception port\\n"""		6536699	0					
ANR	6536821	ReturnStatement	return false ;	240:2:7117:7129	6536699	1	True				
ANR	6536822	Identifier	false		6536699	0					
ANR	6536823	ReturnStatement	return true ;	242:1:7135:7146	6536699	7	True				
ANR	6536824	Identifier	true		6536699	0					
ANR	6536825	ReturnType	static bool		6536699	1					
ANR	6536826	Identifier	xnu_restore_exception_ports		6536699	2					
ANR	6536827	ParameterList	int pid		6536699	3					
ANR	6536828	Parameter	int pid	223:41:6622:6628	6536699	0	True				
ANR	6536829	ParameterType	int		6536699	0					
ANR	6536830	Identifier	pid		6536699	1					
ANR	6536831	CFGEntryNode	ENTRY		6536699		True				
ANR	6536832	CFGExitNode	EXIT		6536699		True				
ANR	6536833	Symbol	ex . count		6536699						
ANR	6536834	Symbol	kr		6536699						
ANR	6536835	Symbol	false		6536699						
ANR	6536836	Symbol	* ex . masks		6536699						
ANR	6536837	Symbol	ex . flavors		6536699						
ANR	6536838	Symbol	i		6536699						
ANR	6536839	Symbol	pid		6536699						
ANR	6536840	Symbol	mach_port_deallocate		6536699						
ANR	6536841	Symbol	ex . behaviors		6536699						
ANR	6536842	Symbol	* ex . flavors		6536699						
ANR	6536843	Symbol	* ex . ports		6536699						
ANR	6536844	Symbol	* ex . behaviors		6536699						
ANR	6536845	Symbol	ex . masks		6536699						
ANR	6536846	Symbol	task		6536699						
ANR	6536847	Symbol	pid_to_task		6536699						
ANR	6536848	Symbol	ex		6536699						
ANR	6536849	Symbol	* i		6536699						
ANR	6536850	Symbol	task_set_exception_ports		6536699						
ANR	6536851	Symbol	ex . ports		6536699						
ANR	6536852	Symbol	mach_task_self		6536699						
ANR	6536853	Symbol	true		6536699						
ANR	6536854	Symbol	ex . exception_port		6536699						
ANR	6536855	Symbol	* ex		6536699						
ANR	6536856	Symbol	KERN_SUCCESS		6536699						
ANR	6536857	Function	encode_reply	247:0:7199:7635							
ANR	6536858	FunctionDef	"encode_reply (mig_reply_error_t * reply , mach_msg_header_t * hdr , int code)"		6536857	0					
ANR	6536859	CompoundStatement		247:85:7284:7635	6536857	0					
ANR	6536860	IdentifierDeclStatement	mach_msg_header_t * rh = & reply -> Head ;	248:1:7287:7323	6536857	0	True				
ANR	6536861	IdentifierDecl	* rh = & reply -> Head		6536857	0					
ANR	6536862	IdentifierDeclType	mach_msg_header_t *		6536857	0					
ANR	6536863	Identifier	rh		6536857	1					
ANR	6536864	AssignmentExpression	* rh = & reply -> Head		6536857	2		=			
ANR	6536865	Identifier	rh		6536857	0					
ANR	6536866	UnaryOperationExpression	& reply -> Head		6536857	1					
ANR	6536867	UnaryOperator	&		6536857	0					
ANR	6536868	PtrMemberAccess	reply -> Head		6536857	1					
ANR	6536869	Identifier	reply		6536857	0					
ANR	6536870	Identifier	Head		6536857	1					
ANR	6536871	ExpressionStatement	"rh -> msgh_bits = MACH_MSGH_BITS ( MACH_MSGH_BITS_REMOTE ( hdr -> msgh_bits ) , 0 )"	249:1:7326:7399	6536857	1	True				
ANR	6536872	AssignmentExpression	"rh -> msgh_bits = MACH_MSGH_BITS ( MACH_MSGH_BITS_REMOTE ( hdr -> msgh_bits ) , 0 )"		6536857	0		=			
ANR	6536873	PtrMemberAccess	rh -> msgh_bits		6536857	0					
ANR	6536874	Identifier	rh		6536857	0					
ANR	6536875	Identifier	msgh_bits		6536857	1					
ANR	6536876	CallExpression	"MACH_MSGH_BITS ( MACH_MSGH_BITS_REMOTE ( hdr -> msgh_bits ) , 0 )"		6536857	1					
ANR	6536877	Callee	MACH_MSGH_BITS		6536857	0					
ANR	6536878	Identifier	MACH_MSGH_BITS		6536857	0					
ANR	6536879	ArgumentList	MACH_MSGH_BITS_REMOTE ( hdr -> msgh_bits )		6536857	1					
ANR	6536880	Argument	MACH_MSGH_BITS_REMOTE ( hdr -> msgh_bits )		6536857	0					
ANR	6536881	CallExpression	MACH_MSGH_BITS_REMOTE ( hdr -> msgh_bits )		6536857	0					
ANR	6536882	Callee	MACH_MSGH_BITS_REMOTE		6536857	0					
ANR	6536883	Identifier	MACH_MSGH_BITS_REMOTE		6536857	0					
ANR	6536884	ArgumentList	hdr -> msgh_bits		6536857	1					
ANR	6536885	Argument	hdr -> msgh_bits		6536857	0					
ANR	6536886	PtrMemberAccess	hdr -> msgh_bits		6536857	0					
ANR	6536887	Identifier	hdr		6536857	0					
ANR	6536888	Identifier	msgh_bits		6536857	1					
ANR	6536889	Argument	0		6536857	1					
ANR	6536890	PrimaryExpression	0		6536857	0					
ANR	6536891	ExpressionStatement	rh -> msgh_remote_port = hdr -> msgh_remote_port	250:1:7402:7446	6536857	2	True				
ANR	6536892	AssignmentExpression	rh -> msgh_remote_port = hdr -> msgh_remote_port		6536857	0		=			
ANR	6536893	PtrMemberAccess	rh -> msgh_remote_port		6536857	0					
ANR	6536894	Identifier	rh		6536857	0					
ANR	6536895	Identifier	msgh_remote_port		6536857	1					
ANR	6536896	PtrMemberAccess	hdr -> msgh_remote_port		6536857	1					
ANR	6536897	Identifier	hdr		6536857	0					
ANR	6536898	Identifier	msgh_remote_port		6536857	1					
ANR	6536899	ExpressionStatement	rh -> msgh_size = ( mach_msg_size_t ) sizeof ( mig_reply_error_t )	251:1:7449:7509	6536857	3	True				
ANR	6536900	AssignmentExpression	rh -> msgh_size = ( mach_msg_size_t ) sizeof ( mig_reply_error_t )		6536857	0		=			
ANR	6536901	PtrMemberAccess	rh -> msgh_size		6536857	0					
ANR	6536902	Identifier	rh		6536857	0					
ANR	6536903	Identifier	msgh_size		6536857	1					
ANR	6536904	CastExpression	( mach_msg_size_t ) sizeof ( mig_reply_error_t )		6536857	1					
ANR	6536905	CastTarget	mach_msg_size_t		6536857	0					
ANR	6536906	SizeofExpression	sizeof ( mig_reply_error_t )		6536857	1					
ANR	6536907	Sizeof	sizeof		6536857	0					
ANR	6536908	SizeofOperand	mig_reply_error_t		6536857	1					
ANR	6536909	ExpressionStatement	rh -> msgh_local_port = MACH_PORT_NULL	252:1:7512:7548	6536857	4	True				
ANR	6536910	AssignmentExpression	rh -> msgh_local_port = MACH_PORT_NULL		6536857	0		=			
ANR	6536911	PtrMemberAccess	rh -> msgh_local_port		6536857	0					
ANR	6536912	Identifier	rh		6536857	0					
ANR	6536913	Identifier	msgh_local_port		6536857	1					
ANR	6536914	Identifier	MACH_PORT_NULL		6536857	1					
ANR	6536915	ExpressionStatement	rh -> msgh_id = hdr -> msgh_id + 100	253:1:7551:7583	6536857	5	True				
ANR	6536916	AssignmentExpression	rh -> msgh_id = hdr -> msgh_id + 100		6536857	0		=			
ANR	6536917	PtrMemberAccess	rh -> msgh_id		6536857	0					
ANR	6536918	Identifier	rh		6536857	0					
ANR	6536919	Identifier	msgh_id		6536857	1					
ANR	6536920	AdditiveExpression	hdr -> msgh_id + 100		6536857	1		+			
ANR	6536921	PtrMemberAccess	hdr -> msgh_id		6536857	0					
ANR	6536922	Identifier	hdr		6536857	0					
ANR	6536923	Identifier	msgh_id		6536857	1					
ANR	6536924	PrimaryExpression	100		6536857	1					
ANR	6536925	ExpressionStatement	reply -> NDR = NDR_record	254:1:7586:7609	6536857	6	True				
ANR	6536926	AssignmentExpression	reply -> NDR = NDR_record		6536857	0		=			
ANR	6536927	PtrMemberAccess	reply -> NDR		6536857	0					
ANR	6536928	Identifier	reply		6536857	0					
ANR	6536929	Identifier	NDR		6536857	1					
ANR	6536930	Identifier	NDR_record		6536857	1					
ANR	6536931	ExpressionStatement	reply -> RetCode = code	255:1:7612:7633	6536857	7	True				
ANR	6536932	AssignmentExpression	reply -> RetCode = code		6536857	0		=			
ANR	6536933	PtrMemberAccess	reply -> RetCode		6536857	0					
ANR	6536934	Identifier	reply		6536857	0					
ANR	6536935	Identifier	RetCode		6536857	1					
ANR	6536936	Identifier	code		6536857	1					
ANR	6536937	ReturnType	static void		6536857	1					
ANR	6536938	Identifier	encode_reply		6536857	2					
ANR	6536939	ParameterList	"mig_reply_error_t * reply , mach_msg_header_t * hdr , int code"		6536857	3					
ANR	6536940	Parameter	mig_reply_error_t * reply	247:25:7224:7247	6536857	0	True				
ANR	6536941	ParameterType	mig_reply_error_t *		6536857	0					
ANR	6536942	Identifier	reply		6536857	1					
ANR	6536943	Parameter	mach_msg_header_t * hdr	247:51:7250:7271	6536857	1	True				
ANR	6536944	ParameterType	mach_msg_header_t *		6536857	0					
ANR	6536945	Identifier	hdr		6536857	1					
ANR	6536946	Parameter	int code	247:75:7274:7281	6536857	2	True				
ANR	6536947	ParameterType	int		6536857	0					
ANR	6536948	Identifier	code		6536857	1					
ANR	6536949	CFGEntryNode	ENTRY		6536857		True				
ANR	6536950	CFGExitNode	EXIT		6536857		True				
ANR	6536951	Symbol	* reply		6536857						
ANR	6536952	Symbol	code		6536857						
ANR	6536953	Symbol	rh -> msgh_size		6536857						
ANR	6536954	Symbol	hdr -> msgh_remote_port		6536857						
ANR	6536955	Symbol	rh -> msgh_local_port		6536857						
ANR	6536956	Symbol	MACH_MSGH_BITS		6536857						
ANR	6536957	Symbol	reply -> RetCode		6536857						
ANR	6536958	Symbol	reply -> NDR		6536857						
ANR	6536959	Symbol	hdr -> msgh_bits		6536857						
ANR	6536960	Symbol	NDR_record		6536857						
ANR	6536961	Symbol	rh -> msgh_bits		6536857						
ANR	6536962	Symbol	rh -> msgh_id		6536857						
ANR	6536963	Symbol	hdr -> msgh_id		6536857						
ANR	6536964	Symbol	& reply -> Head		6536857						
ANR	6536965	Symbol	MACH_MSGH_BITS_REMOTE		6536857						
ANR	6536966	Symbol	rh		6536857						
ANR	6536967	Symbol	rh -> msgh_remote_port		6536857						
ANR	6536968	Symbol	hdr		6536857						
ANR	6536969	Symbol	reply		6536857						
ANR	6536970	Symbol	* hdr		6536857						
ANR	6536971	Symbol	* rh		6536857						
ANR	6536972	Symbol	MACH_PORT_NULL		6536857						
ANR	6536973	Function	validate_mach_message	258:0:7638:9445							
ANR	6536974	FunctionDef	"validate_mach_message (RDebug * dbg , exc_msg * msg)"		6536973	0					
ANR	6536975	CompoundStatement		258:62:7700:9445	6536973	0					
ANR	6536976	IdentifierDeclStatement	kern_return_t kr ;	259:1:7703:7719	6536973	0	True				
ANR	6536977	IdentifierDecl	kr		6536973	0					
ANR	6536978	IdentifierDeclType	kern_return_t		6536973	0					
ANR	6536979	Identifier	kr		6536973	1					
ANR	6536980	ReturnStatement	return false ;	261:1:7738:7750	6536973	1	True				
ANR	6536981	Identifier	false		6536973	0					
ANR	6536982	ReturnType	static bool		6536973	1					
ANR	6536983	Identifier	validate_mach_message		6536973	2					
ANR	6536984	ParameterList	"RDebug * dbg , exc_msg * msg"		6536973	3					
ANR	6536985	Parameter	RDebug * dbg	258:35:7673:7683	6536973	0	True				
ANR	6536986	ParameterType	RDebug *		6536973	0					
ANR	6536987	Identifier	dbg		6536973	1					
ANR	6536988	Parameter	exc_msg * msg	258:48:7686:7697	6536973	1	True				
ANR	6536989	ParameterType	exc_msg *		6536973	0					
ANR	6536990	Identifier	msg		6536973	1					
ANR	6536991	CFGEntryNode	ENTRY		6536973		True				
ANR	6536992	CFGExitNode	EXIT		6536973		True				
ANR	6536993	Symbol	msg		6536973						
ANR	6536994	Symbol	kr		6536973						
ANR	6536995	Symbol	dbg		6536973						
ANR	6536996	Symbol	false		6536973						
ANR	6536997	Function	handle_dead_notify	312:0:9448:9592							
ANR	6536998	FunctionDef	"handle_dead_notify (RDebug * dbg , exc_msg * msg)"		6536997	0					
ANR	6536999	CompoundStatement		312:59:9507:9592	6536997	0					
ANR	6537000	IfStatement	if ( msg -> hdr . msgh_id == 0x48 )		6536997	0					
ANR	6537001	Condition	msg -> hdr . msgh_id == 0x48	313:5:9514:9537	6536997	0	True				
ANR	6537002	EqualityExpression	msg -> hdr . msgh_id == 0x48		6536997	0		==			
ANR	6537003	MemberAccess	msg -> hdr . msgh_id		6536997	0					
ANR	6537004	PtrMemberAccess	msg -> hdr		6536997	0					
ANR	6537005	Identifier	msg		6536997	0					
ANR	6537006	Identifier	hdr		6536997	1					
ANR	6537007	Identifier	msgh_id		6536997	1					
ANR	6537008	PrimaryExpression	0x48		6536997	1					
ANR	6537009	CompoundStatement		2:31:32:32	6536997	1					
ANR	6537010	ExpressionStatement	dbg -> pid = - 1	314:2:9544:9557	6536997	0	True				
ANR	6537011	AssignmentExpression	dbg -> pid = - 1		6536997	0		=			
ANR	6537012	PtrMemberAccess	dbg -> pid		6536997	0					
ANR	6537013	Identifier	dbg		6536997	0					
ANR	6537014	Identifier	pid		6536997	1					
ANR	6537015	UnaryOperationExpression	- 1		6536997	1					
ANR	6537016	UnaryOperator	-		6536997	0					
ANR	6537017	PrimaryExpression	1		6536997	1					
ANR	6537018	ReturnStatement	return true ;	315:2:9561:9572	6536997	1	True				
ANR	6537019	Identifier	true		6536997	0					
ANR	6537020	ReturnStatement	return false ;	317:1:9578:9590	6536997	1	True				
ANR	6537021	Identifier	false		6536997	0					
ANR	6537022	ReturnType	static bool		6536997	1					
ANR	6537023	Identifier	handle_dead_notify		6536997	2					
ANR	6537024	ParameterList	"RDebug * dbg , exc_msg * msg"		6536997	3					
ANR	6537025	Parameter	RDebug * dbg	312:32:9480:9490	6536997	0	True				
ANR	6537026	ParameterType	RDebug *		6536997	0					
ANR	6537027	Identifier	dbg		6536997	1					
ANR	6537028	Parameter	exc_msg * msg	312:45:9493:9504	6536997	1	True				
ANR	6537029	ParameterType	exc_msg *		6536997	0					
ANR	6537030	Identifier	msg		6536997	1					
ANR	6537031	CFGEntryNode	ENTRY		6536997		True				
ANR	6537032	CFGExitNode	EXIT		6536997		True				
ANR	6537033	Symbol	msg		6536997						
ANR	6537034	Symbol	msg -> hdr		6536997						
ANR	6537035	Symbol	dbg -> pid		6536997						
ANR	6537036	Symbol	dbg		6536997						
ANR	6537037	Symbol	true		6536997						
ANR	6537038	Symbol	false		6536997						
ANR	6537039	Symbol	* msg		6536997						
ANR	6537040	Symbol	* dbg		6536997						
ANR	6537041	Symbol	msg -> hdr . msgh_id		6536997						
ANR	6537042	Function	handle_exception_message	320:0:9595:11008							
ANR	6537043	FunctionDef	"handle_exception_message (RDebug * dbg , exc_msg * msg , int * ret_code)"		6537042	0					
ANR	6537044	CompoundStatement		320:79:9674:11008	6537042	0					
ANR	6537045	IdentifierDeclStatement	int ret = R_DEBUG_REASON_UNKNOWN ;	321:1:9677:9709	6537042	0	True				
ANR	6537046	IdentifierDecl	ret = R_DEBUG_REASON_UNKNOWN		6537042	0					
ANR	6537047	IdentifierDeclType	int		6537042	0					
ANR	6537048	Identifier	ret		6537042	1					
ANR	6537049	AssignmentExpression	ret = R_DEBUG_REASON_UNKNOWN		6537042	2		=			
ANR	6537050	Identifier	R_DEBUG_REASON_UNKNOWN		6537042	0					
ANR	6537051	Identifier	R_DEBUG_REASON_UNKNOWN		6537042	1					
ANR	6537052	IdentifierDeclStatement	kern_return_t kr ;	322:1:9712:9728	6537042	1	True				
ANR	6537053	IdentifierDecl	kr		6537042	0					
ANR	6537054	IdentifierDeclType	kern_return_t		6537042	0					
ANR	6537055	Identifier	kr		6537042	1					
ANR	6537056	ExpressionStatement	* ret_code = KERN_SUCCESS	323:1:9731:9755	6537042	2	True				
ANR	6537057	AssignmentExpression	* ret_code = KERN_SUCCESS		6537042	0		=			
ANR	6537058	UnaryOperationExpression	* ret_code		6537042	0					
ANR	6537059	UnaryOperator	*		6537042	0					
ANR	6537060	Identifier	ret_code		6537042	1					
ANR	6537061	Identifier	KERN_SUCCESS		6537042	1					
ANR	6537062	SwitchStatement	switch ( msg -> exception )		6537042	3					
ANR	6537063	Condition	msg -> exception	324:9:9766:9779	6537042	0	True				
ANR	6537064	PtrMemberAccess	msg -> exception		6537042	0					
ANR	6537065	Identifier	msg		6537042	0					
ANR	6537066	Identifier	exception		6537042	1					
ANR	6537067	CompoundStatement		5:25:107:107	6537042	1					
ANR	6537068	Label	case EXC_BAD_ACCESS :	325:1:9785:9804	6537042	0	True				
ANR	6537069	Identifier	EXC_BAD_ACCESS		6537042	0					
ANR	6537070	ExpressionStatement	ret = R_DEBUG_REASON_SEGFAULT	326:2:9808:9837	6537042	1	True				
ANR	6537071	AssignmentExpression	ret = R_DEBUG_REASON_SEGFAULT		6537042	0		=			
ANR	6537072	Identifier	ret		6537042	0					
ANR	6537073	Identifier	R_DEBUG_REASON_SEGFAULT		6537042	1					
ANR	6537074	ExpressionStatement	* ret_code = KERN_FAILURE	327:2:9841:9865	6537042	2	True				
ANR	6537075	AssignmentExpression	* ret_code = KERN_FAILURE		6537042	0		=			
ANR	6537076	UnaryOperationExpression	* ret_code		6537042	0					
ANR	6537077	UnaryOperator	*		6537042	0					
ANR	6537078	Identifier	ret_code		6537042	1					
ANR	6537079	Identifier	KERN_FAILURE		6537042	1					
ANR	6537080	ExpressionStatement	kr = task_suspend ( msg -> task . name )	328:2:9869:9903	6537042	3	True				
ANR	6537081	AssignmentExpression	kr = task_suspend ( msg -> task . name )		6537042	0		=			
ANR	6537082	Identifier	kr		6537042	0					
ANR	6537083	CallExpression	task_suspend ( msg -> task . name )		6537042	1					
ANR	6537084	Callee	task_suspend		6537042	0					
ANR	6537085	Identifier	task_suspend		6537042	0					
ANR	6537086	ArgumentList	msg -> task . name		6537042	1					
ANR	6537087	Argument	msg -> task . name		6537042	0					
ANR	6537088	MemberAccess	msg -> task . name		6537042	0					
ANR	6537089	PtrMemberAccess	msg -> task		6537042	0					
ANR	6537090	Identifier	msg		6537042	0					
ANR	6537091	Identifier	task		6537042	1					
ANR	6537092	Identifier	name		6537042	1					
ANR	6537093	IfStatement	if ( kr != KERN_SUCCESS )		6537042	4					
ANR	6537094	Condition	kr != KERN_SUCCESS	329:6:9911:9928	6537042	0	True				
ANR	6537095	EqualityExpression	kr != KERN_SUCCESS		6537042	0		!=			
ANR	6537096	Identifier	kr		6537042	0					
ANR	6537097	Identifier	KERN_SUCCESS		6537042	1					
ANR	6537098	CompoundStatement		10:26:256:256	6537042	1					
ANR	6537099	ExpressionStatement	"eprintf ( ""failed to suspend task bad access\\n"" )"	330:3:9936:9983	6537042	0	True				
ANR	6537100	CallExpression	"eprintf ( ""failed to suspend task bad access\\n"" )"		6537042	0					
ANR	6537101	Callee	eprintf		6537042	0					
ANR	6537102	Identifier	eprintf		6537042	0					
ANR	6537103	ArgumentList	"""failed to suspend task bad access\\n"""		6537042	1					
ANR	6537104	Argument	"""failed to suspend task bad access\\n"""		6537042	0					
ANR	6537105	PrimaryExpression	"""failed to suspend task bad access\\n"""		6537042	0					
ANR	6537106	ExpressionStatement	"eprintf ( ""EXC_BAD_ACCESS\\n"" )"	332:2:9991:10019	6537042	5	True				
ANR	6537107	CallExpression	"eprintf ( ""EXC_BAD_ACCESS\\n"" )"		6537042	0					
ANR	6537108	Callee	eprintf		6537042	0					
ANR	6537109	Identifier	eprintf		6537042	0					
ANR	6537110	ArgumentList	"""EXC_BAD_ACCESS\\n"""		6537042	1					
ANR	6537111	Argument	"""EXC_BAD_ACCESS\\n"""		6537042	0					
ANR	6537112	PrimaryExpression	"""EXC_BAD_ACCESS\\n"""		6537042	0					
ANR	6537113	BreakStatement	break ;	333:2:10023:10028	6537042	6	True				
ANR	6537114	Label	case EXC_BAD_INSTRUCTION :	334:1:10031:10055	6537042	7	True				
ANR	6537115	Identifier	EXC_BAD_INSTRUCTION		6537042	0					
ANR	6537116	ExpressionStatement	ret = R_DEBUG_REASON_ILLEGAL	335:2:10059:10087	6537042	8	True				
ANR	6537117	AssignmentExpression	ret = R_DEBUG_REASON_ILLEGAL		6537042	0		=			
ANR	6537118	Identifier	ret		6537042	0					
ANR	6537119	Identifier	R_DEBUG_REASON_ILLEGAL		6537042	1					
ANR	6537120	ExpressionStatement	* ret_code = KERN_FAILURE	336:2:10091:10115	6537042	9	True				
ANR	6537121	AssignmentExpression	* ret_code = KERN_FAILURE		6537042	0		=			
ANR	6537122	UnaryOperationExpression	* ret_code		6537042	0					
ANR	6537123	UnaryOperator	*		6537042	0					
ANR	6537124	Identifier	ret_code		6537042	1					
ANR	6537125	Identifier	KERN_FAILURE		6537042	1					
ANR	6537126	ExpressionStatement	kr = task_suspend ( msg -> task . name )	337:2:10119:10153	6537042	10	True				
ANR	6537127	AssignmentExpression	kr = task_suspend ( msg -> task . name )		6537042	0		=			
ANR	6537128	Identifier	kr		6537042	0					
ANR	6537129	CallExpression	task_suspend ( msg -> task . name )		6537042	1					
ANR	6537130	Callee	task_suspend		6537042	0					
ANR	6537131	Identifier	task_suspend		6537042	0					
ANR	6537132	ArgumentList	msg -> task . name		6537042	1					
ANR	6537133	Argument	msg -> task . name		6537042	0					
ANR	6537134	MemberAccess	msg -> task . name		6537042	0					
ANR	6537135	PtrMemberAccess	msg -> task		6537042	0					
ANR	6537136	Identifier	msg		6537042	0					
ANR	6537137	Identifier	task		6537042	1					
ANR	6537138	Identifier	name		6537042	1					
ANR	6537139	IfStatement	if ( kr != KERN_SUCCESS )		6537042	11					
ANR	6537140	Condition	kr != KERN_SUCCESS	338:6:10161:10178	6537042	0	True				
ANR	6537141	EqualityExpression	kr != KERN_SUCCESS		6537042	0		!=			
ANR	6537142	Identifier	kr		6537042	0					
ANR	6537143	Identifier	KERN_SUCCESS		6537042	1					
ANR	6537144	CompoundStatement		19:26:506:506	6537042	1					
ANR	6537145	ExpressionStatement	"eprintf ( ""failed to suspend task bad instruction\\n"" )"	339:3:10186:10238	6537042	0	True				
ANR	6537146	CallExpression	"eprintf ( ""failed to suspend task bad instruction\\n"" )"		6537042	0					
ANR	6537147	Callee	eprintf		6537042	0					
ANR	6537148	Identifier	eprintf		6537042	0					
ANR	6537149	ArgumentList	"""failed to suspend task bad instruction\\n"""		6537042	1					
ANR	6537150	Argument	"""failed to suspend task bad instruction\\n"""		6537042	0					
ANR	6537151	PrimaryExpression	"""failed to suspend task bad instruction\\n"""		6537042	0					
ANR	6537152	ExpressionStatement	"eprintf ( ""EXC_BAD_INSTRUCTION\\n"" )"	341:2:10246:10279	6537042	12	True				
ANR	6537153	CallExpression	"eprintf ( ""EXC_BAD_INSTRUCTION\\n"" )"		6537042	0					
ANR	6537154	Callee	eprintf		6537042	0					
ANR	6537155	Identifier	eprintf		6537042	0					
ANR	6537156	ArgumentList	"""EXC_BAD_INSTRUCTION\\n"""		6537042	1					
ANR	6537157	Argument	"""EXC_BAD_INSTRUCTION\\n"""		6537042	0					
ANR	6537158	PrimaryExpression	"""EXC_BAD_INSTRUCTION\\n"""		6537042	0					
ANR	6537159	BreakStatement	break ;	342:2:10283:10288	6537042	13	True				
ANR	6537160	Label	case EXC_ARITHMETIC :	343:1:10291:10310	6537042	14	True				
ANR	6537161	Identifier	EXC_ARITHMETIC		6537042	0					
ANR	6537162	ExpressionStatement	"eprintf ( ""EXC_ARITHMETIC\\n"" )"	344:2:10314:10342	6537042	15	True				
ANR	6537163	CallExpression	"eprintf ( ""EXC_ARITHMETIC\\n"" )"		6537042	0					
ANR	6537164	Callee	eprintf		6537042	0					
ANR	6537165	Identifier	eprintf		6537042	0					
ANR	6537166	ArgumentList	"""EXC_ARITHMETIC\\n"""		6537042	1					
ANR	6537167	Argument	"""EXC_ARITHMETIC\\n"""		6537042	0					
ANR	6537168	PrimaryExpression	"""EXC_ARITHMETIC\\n"""		6537042	0					
ANR	6537169	BreakStatement	break ;	345:2:10346:10351	6537042	16	True				
ANR	6537170	Label	case EXC_EMULATION :	346:1:10354:10372	6537042	17	True				
ANR	6537171	Identifier	EXC_EMULATION		6537042	0					
ANR	6537172	ExpressionStatement	"eprintf ( ""EXC_EMULATION\\n"" )"	347:2:10376:10403	6537042	18	True				
ANR	6537173	CallExpression	"eprintf ( ""EXC_EMULATION\\n"" )"		6537042	0					
ANR	6537174	Callee	eprintf		6537042	0					
ANR	6537175	Identifier	eprintf		6537042	0					
ANR	6537176	ArgumentList	"""EXC_EMULATION\\n"""		6537042	1					
ANR	6537177	Argument	"""EXC_EMULATION\\n"""		6537042	0					
ANR	6537178	PrimaryExpression	"""EXC_EMULATION\\n"""		6537042	0					
ANR	6537179	BreakStatement	break ;	348:2:10407:10412	6537042	19	True				
ANR	6537180	Label	case EXC_SOFTWARE :	349:1:10415:10432	6537042	20	True				
ANR	6537181	Identifier	EXC_SOFTWARE		6537042	0					
ANR	6537182	ExpressionStatement	"eprintf ( ""EXC_SOFTWARE\\n"" )"	350:2:10436:10462	6537042	21	True				
ANR	6537183	CallExpression	"eprintf ( ""EXC_SOFTWARE\\n"" )"		6537042	0					
ANR	6537184	Callee	eprintf		6537042	0					
ANR	6537185	Identifier	eprintf		6537042	0					
ANR	6537186	ArgumentList	"""EXC_SOFTWARE\\n"""		6537042	1					
ANR	6537187	Argument	"""EXC_SOFTWARE\\n"""		6537042	0					
ANR	6537188	PrimaryExpression	"""EXC_SOFTWARE\\n"""		6537042	0					
ANR	6537189	BreakStatement	break ;	351:2:10466:10471	6537042	22	True				
ANR	6537190	Label	case EXC_BREAKPOINT :	352:1:10474:10493	6537042	23	True				
ANR	6537191	Identifier	EXC_BREAKPOINT		6537042	0					
ANR	6537192	ExpressionStatement	kr = task_suspend ( msg -> task . name )	353:2:10497:10531	6537042	24	True				
ANR	6537193	AssignmentExpression	kr = task_suspend ( msg -> task . name )		6537042	0		=			
ANR	6537194	Identifier	kr		6537042	0					
ANR	6537195	CallExpression	task_suspend ( msg -> task . name )		6537042	1					
ANR	6537196	Callee	task_suspend		6537042	0					
ANR	6537197	Identifier	task_suspend		6537042	0					
ANR	6537198	ArgumentList	msg -> task . name		6537042	1					
ANR	6537199	Argument	msg -> task . name		6537042	0					
ANR	6537200	MemberAccess	msg -> task . name		6537042	0					
ANR	6537201	PtrMemberAccess	msg -> task		6537042	0					
ANR	6537202	Identifier	msg		6537042	0					
ANR	6537203	Identifier	task		6537042	1					
ANR	6537204	Identifier	name		6537042	1					
ANR	6537205	IfStatement	if ( kr != KERN_SUCCESS )		6537042	25					
ANR	6537206	Condition	kr != KERN_SUCCESS	354:6:10539:10556	6537042	0	True				
ANR	6537207	EqualityExpression	kr != KERN_SUCCESS		6537042	0		!=			
ANR	6537208	Identifier	kr		6537042	0					
ANR	6537209	Identifier	KERN_SUCCESS		6537042	1					
ANR	6537210	CompoundStatement		35:26:884:884	6537042	1					
ANR	6537211	ExpressionStatement	"eprintf ( ""failed to suspend task breakpoint\\n"" )"	355:3:10564:10611	6537042	0	True				
ANR	6537212	CallExpression	"eprintf ( ""failed to suspend task breakpoint\\n"" )"		6537042	0					
ANR	6537213	Callee	eprintf		6537042	0					
ANR	6537214	Identifier	eprintf		6537042	0					
ANR	6537215	ArgumentList	"""failed to suspend task breakpoint\\n"""		6537042	1					
ANR	6537216	Argument	"""failed to suspend task breakpoint\\n"""		6537042	0					
ANR	6537217	PrimaryExpression	"""failed to suspend task breakpoint\\n"""		6537042	0					
ANR	6537218	ExpressionStatement	ret = R_DEBUG_REASON_BREAKPOINT	357:2:10619:10650	6537042	26	True				
ANR	6537219	AssignmentExpression	ret = R_DEBUG_REASON_BREAKPOINT		6537042	0		=			
ANR	6537220	Identifier	ret		6537042	0					
ANR	6537221	Identifier	R_DEBUG_REASON_BREAKPOINT		6537042	1					
ANR	6537222	BreakStatement	break ;	358:2:10654:10659	6537042	27	True				
ANR	6537223	Label	default :	359:1:10662:10669	6537042	28	True				
ANR	6537224	Identifier	default		6537042	0					
ANR	6537225	ExpressionStatement	"eprintf ( ""UNKNOWN\\n"" )"	360:2:10673:10694	6537042	29	True				
ANR	6537226	CallExpression	"eprintf ( ""UNKNOWN\\n"" )"		6537042	0					
ANR	6537227	Callee	eprintf		6537042	0					
ANR	6537228	Identifier	eprintf		6537042	0					
ANR	6537229	ArgumentList	"""UNKNOWN\\n"""		6537042	1					
ANR	6537230	Argument	"""UNKNOWN\\n"""		6537042	0					
ANR	6537231	PrimaryExpression	"""UNKNOWN\\n"""		6537042	0					
ANR	6537232	BreakStatement	break ;	361:2:10698:10703	6537042	30	True				
ANR	6537233	ExpressionStatement	"kr = mach_port_deallocate ( mach_task_self ( ) , msg -> task . name )"	363:1:10709:10770	6537042	4	True				
ANR	6537234	AssignmentExpression	"kr = mach_port_deallocate ( mach_task_self ( ) , msg -> task . name )"		6537042	0		=			
ANR	6537235	Identifier	kr		6537042	0					
ANR	6537236	CallExpression	"mach_port_deallocate ( mach_task_self ( ) , msg -> task . name )"		6537042	1					
ANR	6537237	Callee	mach_port_deallocate		6537042	0					
ANR	6537238	Identifier	mach_port_deallocate		6537042	0					
ANR	6537239	ArgumentList	mach_task_self ( )		6537042	1					
ANR	6537240	Argument	mach_task_self ( )		6537042	0					
ANR	6537241	CallExpression	mach_task_self ( )		6537042	0					
ANR	6537242	Callee	mach_task_self		6537042	0					
ANR	6537243	Identifier	mach_task_self		6537042	0					
ANR	6537244	ArgumentList			6537042	1					
ANR	6537245	Argument	msg -> task . name		6537042	1					
ANR	6537246	MemberAccess	msg -> task . name		6537042	0					
ANR	6537247	PtrMemberAccess	msg -> task		6537042	0					
ANR	6537248	Identifier	msg		6537042	0					
ANR	6537249	Identifier	task		6537042	1					
ANR	6537250	Identifier	name		6537042	1					
ANR	6537251	IfStatement	if ( kr != KERN_SUCCESS )		6537042	5					
ANR	6537252	Condition	kr != KERN_SUCCESS	364:5:10777:10794	6537042	0	True				
ANR	6537253	EqualityExpression	kr != KERN_SUCCESS		6537042	0		!=			
ANR	6537254	Identifier	kr		6537042	0					
ANR	6537255	Identifier	KERN_SUCCESS		6537042	1					
ANR	6537256	CompoundStatement		45:25:1122:1122	6537042	1					
ANR	6537257	ExpressionStatement	"eprintf ( ""failed to deallocate task port\\n"" )"	365:2:10801:10845	6537042	0	True				
ANR	6537258	CallExpression	"eprintf ( ""failed to deallocate task port\\n"" )"		6537042	0					
ANR	6537259	Callee	eprintf		6537042	0					
ANR	6537260	Identifier	eprintf		6537042	0					
ANR	6537261	ArgumentList	"""failed to deallocate task port\\n"""		6537042	1					
ANR	6537262	Argument	"""failed to deallocate task port\\n"""		6537042	0					
ANR	6537263	PrimaryExpression	"""failed to deallocate task port\\n"""		6537042	0					
ANR	6537264	ExpressionStatement	"kr = mach_port_deallocate ( mach_task_self ( ) , msg -> thread . name )"	367:1:10851:10914	6537042	6	True				
ANR	6537265	AssignmentExpression	"kr = mach_port_deallocate ( mach_task_self ( ) , msg -> thread . name )"		6537042	0		=			
ANR	6537266	Identifier	kr		6537042	0					
ANR	6537267	CallExpression	"mach_port_deallocate ( mach_task_self ( ) , msg -> thread . name )"		6537042	1					
ANR	6537268	Callee	mach_port_deallocate		6537042	0					
ANR	6537269	Identifier	mach_port_deallocate		6537042	0					
ANR	6537270	ArgumentList	mach_task_self ( )		6537042	1					
ANR	6537271	Argument	mach_task_self ( )		6537042	0					
ANR	6537272	CallExpression	mach_task_self ( )		6537042	0					
ANR	6537273	Callee	mach_task_self		6537042	0					
ANR	6537274	Identifier	mach_task_self		6537042	0					
ANR	6537275	ArgumentList			6537042	1					
ANR	6537276	Argument	msg -> thread . name		6537042	1					
ANR	6537277	MemberAccess	msg -> thread . name		6537042	0					
ANR	6537278	PtrMemberAccess	msg -> thread		6537042	0					
ANR	6537279	Identifier	msg		6537042	0					
ANR	6537280	Identifier	thread		6537042	1					
ANR	6537281	Identifier	name		6537042	1					
ANR	6537282	IfStatement	if ( kr != KERN_SUCCESS )		6537042	7					
ANR	6537283	Condition	kr != KERN_SUCCESS	368:5:10921:10938	6537042	0	True				
ANR	6537284	EqualityExpression	kr != KERN_SUCCESS		6537042	0		!=			
ANR	6537285	Identifier	kr		6537042	0					
ANR	6537286	Identifier	KERN_SUCCESS		6537042	1					
ANR	6537287	CompoundStatement		49:25:1266:1266	6537042	1					
ANR	6537288	ExpressionStatement	"eprintf ( ""failed to deallocated task port\\n"" )"	369:2:10945:10990	6537042	0	True				
ANR	6537289	CallExpression	"eprintf ( ""failed to deallocated task port\\n"" )"		6537042	0					
ANR	6537290	Callee	eprintf		6537042	0					
ANR	6537291	Identifier	eprintf		6537042	0					
ANR	6537292	ArgumentList	"""failed to deallocated task port\\n"""		6537042	1					
ANR	6537293	Argument	"""failed to deallocated task port\\n"""		6537042	0					
ANR	6537294	PrimaryExpression	"""failed to deallocated task port\\n"""		6537042	0					
ANR	6537295	ReturnStatement	return ret ;	371:1:10996:11006	6537042	8	True				
ANR	6537296	Identifier	ret		6537042	0					
ANR	6537297	ReturnType	static int		6537042	1					
ANR	6537298	Identifier	handle_exception_message		6537042	2					
ANR	6537299	ParameterList	"RDebug * dbg , exc_msg * msg , int * ret_code"		6537042	3					
ANR	6537300	Parameter	RDebug * dbg	320:37:9632:9642	6537042	0	True				
ANR	6537301	ParameterType	RDebug *		6537042	0					
ANR	6537302	Identifier	dbg		6537042	1					
ANR	6537303	Parameter	exc_msg * msg	320:50:9645:9656	6537042	1	True				
ANR	6537304	ParameterType	exc_msg *		6537042	0					
ANR	6537305	Identifier	msg		6537042	1					
ANR	6537306	Parameter	int * ret_code	320:64:9659:9671	6537042	2	True				
ANR	6537307	ParameterType	int *		6537042	0					
ANR	6537308	Identifier	ret_code		6537042	1					
ANR	6537309	CFGEntryNode	ENTRY		6537042		True				
ANR	6537310	CFGExitNode	EXIT		6537042		True				
ANR	6537311	Symbol	msg		6537042						
ANR	6537312	Symbol	ret		6537042						
ANR	6537313	Symbol	KERN_FAILURE		6537042						
ANR	6537314	Symbol	kr		6537042						
ANR	6537315	Symbol	dbg		6537042						
ANR	6537316	Symbol	R_DEBUG_REASON_ILLEGAL		6537042						
ANR	6537317	Symbol	task_suspend		6537042						
ANR	6537318	Symbol	* msg		6537042						
ANR	6537319	Symbol	msg -> task . name		6537042						
ANR	6537320	Symbol	mach_port_deallocate		6537042						
ANR	6537321	Symbol	R_DEBUG_REASON_UNKNOWN		6537042						
ANR	6537322	Symbol	* ret_code		6537042						
ANR	6537323	Symbol	R_DEBUG_REASON_BREAKPOINT		6537042						
ANR	6537324	Symbol	mach_task_self		6537042						
ANR	6537325	Symbol	KERN_SUCCESS		6537042						
ANR	6537326	Symbol	msg -> exception		6537042						
ANR	6537327	Symbol	R_DEBUG_REASON_SEGFAULT		6537042						
ANR	6537328	Symbol	msg -> thread		6537042						
ANR	6537329	Symbol	ret_code		6537042						
ANR	6537330	Symbol	msg -> task		6537042						
ANR	6537331	Symbol	msg -> thread . name		6537042						
ANR	6537332	Function	__xnu_wait	375:0:11036:12939							
ANR	6537333	FunctionDef	"__xnu_wait (RDebug * dbg , int pid)"		6537332	0					
ANR	6537334	CompoundStatement		375:45:11081:12939	6537332	0					
ANR	6537335	IdentifierDeclStatement	kern_return_t kr ;	377:1:11119:11135	6537332	0	True				
ANR	6537336	IdentifierDecl	kr		6537332	0					
ANR	6537337	IdentifierDeclType	kern_return_t		6537332	0					
ANR	6537338	Identifier	kr		6537332	1					
ANR	6537339	IdentifierDeclStatement	"int ret_code , reason = R_DEBUG_REASON_UNKNOWN ;"	378:1:11138:11183	6537332	1	True				
ANR	6537340	IdentifierDecl	ret_code		6537332	0					
ANR	6537341	IdentifierDeclType	int		6537332	0					
ANR	6537342	Identifier	ret_code		6537332	1					
ANR	6537343	IdentifierDecl	reason = R_DEBUG_REASON_UNKNOWN		6537332	1					
ANR	6537344	IdentifierDeclType	int		6537332	0					
ANR	6537345	Identifier	reason		6537332	1					
ANR	6537346	AssignmentExpression	reason = R_DEBUG_REASON_UNKNOWN		6537332	2		=			
ANR	6537347	Identifier	R_DEBUG_REASON_UNKNOWN		6537332	0					
ANR	6537348	Identifier	R_DEBUG_REASON_UNKNOWN		6537332	1					
ANR	6537349	IdentifierDeclStatement	mig_reply_error_t reply ;	379:1:11186:11209	6537332	2	True				
ANR	6537350	IdentifierDecl	reply		6537332	0					
ANR	6537351	IdentifierDeclType	mig_reply_error_t		6537332	0					
ANR	6537352	Identifier	reply		6537332	1					
ANR	6537353	IdentifierDeclStatement	bool ret ;	380:1:11212:11220	6537332	3	True				
ANR	6537354	IdentifierDecl	ret		6537332	0					
ANR	6537355	IdentifierDeclType	bool		6537332	0					
ANR	6537356	Identifier	ret		6537332	1					
ANR	6537357	IdentifierDeclStatement	exc_msg msg ;	381:1:11223:11234	6537332	4	True				
ANR	6537358	IdentifierDecl	msg		6537332	0					
ANR	6537359	IdentifierDeclType	exc_msg		6537332	0					
ANR	6537360	Identifier	msg		6537332	1					
ANR	6537361	IfStatement	if ( ! dbg )		6537332	5					
ANR	6537362	Condition	! dbg	382:5:11241:11244	6537332	0	True				
ANR	6537363	UnaryOperationExpression	! dbg		6537332	0					
ANR	6537364	UnaryOperator	!		6537332	0					
ANR	6537365	Identifier	dbg		6537332	1					
ANR	6537366	CompoundStatement		8:11:165:165	6537332	1					
ANR	6537367	ReturnStatement	return reason ;	383:2:11251:11264	6537332	0	True				
ANR	6537368	Identifier	reason		6537332	0					
ANR	6537369	ExpressionStatement	msg . hdr . msgh_local_port = ex . exception_port	385:1:11270:11313	6537332	6	True				
ANR	6537370	AssignmentExpression	msg . hdr . msgh_local_port = ex . exception_port		6537332	0		=			
ANR	6537371	MemberAccess	msg . hdr . msgh_local_port		6537332	0					
ANR	6537372	MemberAccess	msg . hdr		6537332	0					
ANR	6537373	Identifier	msg		6537332	0					
ANR	6537374	Identifier	hdr		6537332	1					
ANR	6537375	Identifier	msgh_local_port		6537332	1					
ANR	6537376	MemberAccess	ex . exception_port		6537332	1					
ANR	6537377	Identifier	ex		6537332	0					
ANR	6537378	Identifier	exception_port		6537332	1					
ANR	6537379	ExpressionStatement	msg . hdr . msgh_size = sizeof ( exc_msg )	386:1:11316:11352	6537332	7	True				
ANR	6537380	AssignmentExpression	msg . hdr . msgh_size = sizeof ( exc_msg )		6537332	0		=			
ANR	6537381	MemberAccess	msg . hdr . msgh_size		6537332	0					
ANR	6537382	MemberAccess	msg . hdr		6537332	0					
ANR	6537383	Identifier	msg		6537332	0					
ANR	6537384	Identifier	hdr		6537332	1					
ANR	6537385	Identifier	msgh_size		6537332	1					
ANR	6537386	SizeofExpression	sizeof ( exc_msg )		6537332	1					
ANR	6537387	Sizeof	sizeof		6537332	0					
ANR	6537388	SizeofOperand	exc_msg		6537332	1					
ANR	6537389	ForStatement	for ( ; ; )		6537332	8					
ANR	6537390	CompoundStatement		13:10:282:282	6537332	0					
ANR	6537391	ExpressionStatement	"kr = mach_msg ( & msg . hdr , MACH_RCV_MSG | MACH_RCV_INTERRUPT , 0 , sizeof ( exc_msg ) , ex . exception_port , MACH_MSG_TIMEOUT_NONE , MACH_PORT_NULL )"	388:2:11368:11519	6537332	0	True				
ANR	6537392	AssignmentExpression	"kr = mach_msg ( & msg . hdr , MACH_RCV_MSG | MACH_RCV_INTERRUPT , 0 , sizeof ( exc_msg ) , ex . exception_port , MACH_MSG_TIMEOUT_NONE , MACH_PORT_NULL )"		6537332	0		=			
ANR	6537393	Identifier	kr		6537332	0					
ANR	6537394	CallExpression	"mach_msg ( & msg . hdr , MACH_RCV_MSG | MACH_RCV_INTERRUPT , 0 , sizeof ( exc_msg ) , ex . exception_port , MACH_MSG_TIMEOUT_NONE , MACH_PORT_NULL )"		6537332	1					
ANR	6537395	Callee	mach_msg		6537332	0					
ANR	6537396	Identifier	mach_msg		6537332	0					
ANR	6537397	ArgumentList	& msg . hdr		6537332	1					
ANR	6537398	Argument	& msg . hdr		6537332	0					
ANR	6537399	UnaryOperationExpression	& msg . hdr		6537332	0					
ANR	6537400	UnaryOperator	&		6537332	0					
ANR	6537401	MemberAccess	msg . hdr		6537332	1					
ANR	6537402	Identifier	msg		6537332	0					
ANR	6537403	Identifier	hdr		6537332	1					
ANR	6537404	Argument	MACH_RCV_MSG | MACH_RCV_INTERRUPT		6537332	1					
ANR	6537405	InclusiveOrExpression	MACH_RCV_MSG | MACH_RCV_INTERRUPT		6537332	0		|			
ANR	6537406	Identifier	MACH_RCV_MSG		6537332	0					
ANR	6537407	Identifier	MACH_RCV_INTERRUPT		6537332	1					
ANR	6537408	Argument	0		6537332	2					
ANR	6537409	PrimaryExpression	0		6537332	0					
ANR	6537410	Argument	sizeof ( exc_msg )		6537332	3					
ANR	6537411	SizeofExpression	sizeof ( exc_msg )		6537332	0					
ANR	6537412	Sizeof	sizeof		6537332	0					
ANR	6537413	SizeofOperand	exc_msg		6537332	1					
ANR	6537414	Argument	ex . exception_port		6537332	4					
ANR	6537415	MemberAccess	ex . exception_port		6537332	0					
ANR	6537416	Identifier	ex		6537332	0					
ANR	6537417	Identifier	exception_port		6537332	1					
ANR	6537418	Argument	MACH_MSG_TIMEOUT_NONE		6537332	5					
ANR	6537419	Identifier	MACH_MSG_TIMEOUT_NONE		6537332	0					
ANR	6537420	Argument	MACH_PORT_NULL		6537332	6					
ANR	6537421	Identifier	MACH_PORT_NULL		6537332	0					
ANR	6537422	IfStatement	if ( kr == MACH_RCV_INTERRUPTED )		6537332	1					
ANR	6537423	Condition	kr == MACH_RCV_INTERRUPTED	393:6:11527:11552	6537332	0	True				
ANR	6537424	EqualityExpression	kr == MACH_RCV_INTERRUPTED		6537332	0		==			
ANR	6537425	Identifier	kr		6537332	0					
ANR	6537426	Identifier	MACH_RCV_INTERRUPTED		6537332	1					
ANR	6537427	CompoundStatement		19:34:473:473	6537332	1					
ANR	6537428	ExpressionStatement	reason = R_DEBUG_REASON_MACH_RCV_INTERRUPTED	394:3:11560:11604	6537332	0	True				
ANR	6537429	AssignmentExpression	reason = R_DEBUG_REASON_MACH_RCV_INTERRUPTED		6537332	0		=			
ANR	6537430	Identifier	reason		6537332	0					
ANR	6537431	Identifier	R_DEBUG_REASON_MACH_RCV_INTERRUPTED		6537332	1					
ANR	6537432	BreakStatement	break ;	395:3:11609:11614	6537332	1	True				
ANR	6537433	ElseStatement	else		6537332	0					
ANR	6537434	IfStatement	if ( kr != MACH_MSG_SUCCESS )		6537332	0					
ANR	6537435	Condition	kr != MACH_MSG_SUCCESS	396:13:11629:11650	6537332	0	True				
ANR	6537436	EqualityExpression	kr != MACH_MSG_SUCCESS		6537332	0		!=			
ANR	6537437	Identifier	kr		6537332	0					
ANR	6537438	Identifier	MACH_MSG_SUCCESS		6537332	1					
ANR	6537439	CompoundStatement		22:37:571:571	6537332	1					
ANR	6537440	ExpressionStatement	"eprintf ( ""message didn't succeeded\\n"" )"	397:3:11658:11696	6537332	0	True				
ANR	6537441	CallExpression	"eprintf ( ""message didn't succeeded\\n"" )"		6537332	0					
ANR	6537442	Callee	eprintf		6537332	0					
ANR	6537443	Identifier	eprintf		6537332	0					
ANR	6537444	ArgumentList	"""message didn't succeeded\\n"""		6537332	1					
ANR	6537445	Argument	"""message didn't succeeded\\n"""		6537332	0					
ANR	6537446	PrimaryExpression	"""message didn't succeeded\\n"""		6537332	0					
ANR	6537447	BreakStatement	break ;	398:3:11701:11706	6537332	1	True				
ANR	6537448	ExpressionStatement	"ret = validate_mach_message ( dbg , & msg )"	400:2:11714:11753	6537332	2	True				
ANR	6537449	AssignmentExpression	"ret = validate_mach_message ( dbg , & msg )"		6537332	0		=			
ANR	6537450	Identifier	ret		6537332	0					
ANR	6537451	CallExpression	"validate_mach_message ( dbg , & msg )"		6537332	1					
ANR	6537452	Callee	validate_mach_message		6537332	0					
ANR	6537453	Identifier	validate_mach_message		6537332	0					
ANR	6537454	ArgumentList	dbg		6537332	1					
ANR	6537455	Argument	dbg		6537332	0					
ANR	6537456	Identifier	dbg		6537332	0					
ANR	6537457	Argument	& msg		6537332	1					
ANR	6537458	UnaryOperationExpression	& msg		6537332	0					
ANR	6537459	UnaryOperator	&		6537332	0					
ANR	6537460	Identifier	msg		6537332	1					
ANR	6537461	IfStatement	if ( ! ret )		6537332	3					
ANR	6537462	Condition	! ret	401:6:11761:11764	6537332	0	True				
ANR	6537463	UnaryOperationExpression	! ret		6537332	0					
ANR	6537464	UnaryOperator	!		6537332	0					
ANR	6537465	Identifier	ret		6537332	1					
ANR	6537466	CompoundStatement		27:12:685:685	6537332	1					
ANR	6537467	ExpressionStatement	"ret = handle_dead_notify ( dbg , & msg )"	402:3:11772:11808	6537332	0	True				
ANR	6537468	AssignmentExpression	"ret = handle_dead_notify ( dbg , & msg )"		6537332	0		=			
ANR	6537469	Identifier	ret		6537332	0					
ANR	6537470	CallExpression	"handle_dead_notify ( dbg , & msg )"		6537332	1					
ANR	6537471	Callee	handle_dead_notify		6537332	0					
ANR	6537472	Identifier	handle_dead_notify		6537332	0					
ANR	6537473	ArgumentList	dbg		6537332	1					
ANR	6537474	Argument	dbg		6537332	0					
ANR	6537475	Identifier	dbg		6537332	0					
ANR	6537476	Argument	& msg		6537332	1					
ANR	6537477	UnaryOperationExpression	& msg		6537332	0					
ANR	6537478	UnaryOperator	&		6537332	0					
ANR	6537479	Identifier	msg		6537332	1					
ANR	6537480	IfStatement	if ( ret )		6537332	1					
ANR	6537481	Condition	ret	403:7:11817:11819	6537332	0	True				
ANR	6537482	Identifier	ret		6537332	0					
ANR	6537483	CompoundStatement		29:12:740:740	6537332	1					
ANR	6537484	ExpressionStatement	reason = R_DEBUG_REASON_DEAD	404:4:11828:11856	6537332	0	True				
ANR	6537485	AssignmentExpression	reason = R_DEBUG_REASON_DEAD		6537332	0		=			
ANR	6537486	Identifier	reason		6537332	0					
ANR	6537487	Identifier	R_DEBUG_REASON_DEAD		6537332	1					
ANR	6537488	BreakStatement	break ;	405:4:11862:11867	6537332	1	True				
ANR	6537489	IfStatement	if ( ! ret )		6537332	4					
ANR	6537490	Condition	! ret	408:6:11884:11887	6537332	0	True				
ANR	6537491	UnaryOperationExpression	! ret		6537332	0					
ANR	6537492	UnaryOperator	!		6537332	0					
ANR	6537493	Identifier	ret		6537332	1					
ANR	6537494	CompoundStatement		34:12:808:808	6537332	1					
ANR	6537495	ExpressionStatement	"encode_reply ( & reply , & msg . hdr , KERN_FAILURE )"	409:3:11895:11940	6537332	0	True				
ANR	6537496	CallExpression	"encode_reply ( & reply , & msg . hdr , KERN_FAILURE )"		6537332	0					
ANR	6537497	Callee	encode_reply		6537332	0					
ANR	6537498	Identifier	encode_reply		6537332	0					
ANR	6537499	ArgumentList	& reply		6537332	1					
ANR	6537500	Argument	& reply		6537332	0					
ANR	6537501	UnaryOperationExpression	& reply		6537332	0					
ANR	6537502	UnaryOperator	&		6537332	0					
ANR	6537503	Identifier	reply		6537332	1					
ANR	6537504	Argument	& msg . hdr		6537332	1					
ANR	6537505	UnaryOperationExpression	& msg . hdr		6537332	0					
ANR	6537506	UnaryOperator	&		6537332	0					
ANR	6537507	MemberAccess	msg . hdr		6537332	1					
ANR	6537508	Identifier	msg		6537332	0					
ANR	6537509	Identifier	hdr		6537332	1					
ANR	6537510	Argument	KERN_FAILURE		6537332	2					
ANR	6537511	Identifier	KERN_FAILURE		6537332	0					
ANR	6537512	ExpressionStatement	"kr = mach_msg ( & reply . Head , MACH_SEND_MSG | MACH_SEND_INTERRUPT , reply . Head . msgh_size , 0 , MACH_PORT_NULL , MACH_MSG_TIMEOUT_NONE , MACH_PORT_NULL )"	410:3:11945:12104	6537332	1	True				
ANR	6537513	AssignmentExpression	"kr = mach_msg ( & reply . Head , MACH_SEND_MSG | MACH_SEND_INTERRUPT , reply . Head . msgh_size , 0 , MACH_PORT_NULL , MACH_MSG_TIMEOUT_NONE , MACH_PORT_NULL )"		6537332	0		=			
ANR	6537514	Identifier	kr		6537332	0					
ANR	6537515	CallExpression	"mach_msg ( & reply . Head , MACH_SEND_MSG | MACH_SEND_INTERRUPT , reply . Head . msgh_size , 0 , MACH_PORT_NULL , MACH_MSG_TIMEOUT_NONE , MACH_PORT_NULL )"		6537332	1					
ANR	6537516	Callee	mach_msg		6537332	0					
ANR	6537517	Identifier	mach_msg		6537332	0					
ANR	6537518	ArgumentList	& reply . Head		6537332	1					
ANR	6537519	Argument	& reply . Head		6537332	0					
ANR	6537520	UnaryOperationExpression	& reply . Head		6537332	0					
ANR	6537521	UnaryOperator	&		6537332	0					
ANR	6537522	MemberAccess	reply . Head		6537332	1					
ANR	6537523	Identifier	reply		6537332	0					
ANR	6537524	Identifier	Head		6537332	1					
ANR	6537525	Argument	MACH_SEND_MSG | MACH_SEND_INTERRUPT		6537332	1					
ANR	6537526	InclusiveOrExpression	MACH_SEND_MSG | MACH_SEND_INTERRUPT		6537332	0		|			
ANR	6537527	Identifier	MACH_SEND_MSG		6537332	0					
ANR	6537528	Identifier	MACH_SEND_INTERRUPT		6537332	1					
ANR	6537529	Argument	reply . Head . msgh_size		6537332	2					
ANR	6537530	MemberAccess	reply . Head . msgh_size		6537332	0					
ANR	6537531	MemberAccess	reply . Head		6537332	0					
ANR	6537532	Identifier	reply		6537332	0					
ANR	6537533	Identifier	Head		6537332	1					
ANR	6537534	Identifier	msgh_size		6537332	1					
ANR	6537535	Argument	0		6537332	3					
ANR	6537536	PrimaryExpression	0		6537332	0					
ANR	6537537	Argument	MACH_PORT_NULL		6537332	4					
ANR	6537538	Identifier	MACH_PORT_NULL		6537332	0					
ANR	6537539	Argument	MACH_MSG_TIMEOUT_NONE		6537332	5					
ANR	6537540	Identifier	MACH_MSG_TIMEOUT_NONE		6537332	0					
ANR	6537541	Argument	MACH_PORT_NULL		6537332	6					
ANR	6537542	Identifier	MACH_PORT_NULL		6537332	0					
ANR	6537543	IfStatement	if ( reply . Head . msgh_remote_port != 0 && kr != MACH_MSG_SUCCESS )		6537332	2					
ANR	6537544	Condition	reply . Head . msgh_remote_port != 0 && kr != MACH_MSG_SUCCESS	414:7:12113:12170	6537332	0	True				
ANR	6537545	AndExpression	reply . Head . msgh_remote_port != 0 && kr != MACH_MSG_SUCCESS		6537332	0		&&			
ANR	6537546	EqualityExpression	reply . Head . msgh_remote_port != 0		6537332	0		!=			
ANR	6537547	MemberAccess	reply . Head . msgh_remote_port		6537332	0					
ANR	6537548	MemberAccess	reply . Head		6537332	0					
ANR	6537549	Identifier	reply		6537332	0					
ANR	6537550	Identifier	Head		6537332	1					
ANR	6537551	Identifier	msgh_remote_port		6537332	1					
ANR	6537552	PrimaryExpression	0		6537332	1					
ANR	6537553	EqualityExpression	kr != MACH_MSG_SUCCESS		6537332	1		!=			
ANR	6537554	Identifier	kr		6537332	0					
ANR	6537555	Identifier	MACH_MSG_SUCCESS		6537332	1					
ANR	6537556	CompoundStatement		40:67:1091:1091	6537332	1					
ANR	6537557	ExpressionStatement	"kr = mach_port_deallocate ( mach_task_self ( ) , reply . Head . msgh_remote_port )"	415:4:12179:12252	6537332	0	True				
ANR	6537558	AssignmentExpression	"kr = mach_port_deallocate ( mach_task_self ( ) , reply . Head . msgh_remote_port )"		6537332	0		=			
ANR	6537559	Identifier	kr		6537332	0					
ANR	6537560	CallExpression	"mach_port_deallocate ( mach_task_self ( ) , reply . Head . msgh_remote_port )"		6537332	1					
ANR	6537561	Callee	mach_port_deallocate		6537332	0					
ANR	6537562	Identifier	mach_port_deallocate		6537332	0					
ANR	6537563	ArgumentList	mach_task_self ( )		6537332	1					
ANR	6537564	Argument	mach_task_self ( )		6537332	0					
ANR	6537565	CallExpression	mach_task_self ( )		6537332	0					
ANR	6537566	Callee	mach_task_self		6537332	0					
ANR	6537567	Identifier	mach_task_self		6537332	0					
ANR	6537568	ArgumentList			6537332	1					
ANR	6537569	Argument	reply . Head . msgh_remote_port		6537332	1					
ANR	6537570	MemberAccess	reply . Head . msgh_remote_port		6537332	0					
ANR	6537571	MemberAccess	reply . Head		6537332	0					
ANR	6537572	Identifier	reply		6537332	0					
ANR	6537573	Identifier	Head		6537332	1					
ANR	6537574	Identifier	msgh_remote_port		6537332	1					
ANR	6537575	IfStatement	if ( kr != KERN_SUCCESS )		6537332	1					
ANR	6537576	Condition	kr != KERN_SUCCESS	416:8:12262:12279	6537332	0	True				
ANR	6537577	EqualityExpression	kr != KERN_SUCCESS		6537332	0		!=			
ANR	6537578	Identifier	kr		6537332	0					
ANR	6537579	Identifier	KERN_SUCCESS		6537332	1					
ANR	6537580	CompoundStatement		42:28:1200:1200	6537332	1					
ANR	6537581	ExpressionStatement	"eprintf ( ""failed to deallocate reply port\\n"" )"	417:5:12289:12334	6537332	0	True				
ANR	6537582	CallExpression	"eprintf ( ""failed to deallocate reply port\\n"" )"		6537332	0					
ANR	6537583	Callee	eprintf		6537332	0					
ANR	6537584	Identifier	eprintf		6537332	0					
ANR	6537585	ArgumentList	"""failed to deallocate reply port\\n"""		6537332	1					
ANR	6537586	Argument	"""failed to deallocate reply port\\n"""		6537332	0					
ANR	6537587	PrimaryExpression	"""failed to deallocate reply port\\n"""		6537332	0					
ANR	6537588	ContinueStatement	continue ;	420:3:12350:12358	6537332	3	True				
ANR	6537589	ExpressionStatement	"reason = handle_exception_message ( dbg , & msg , & ret_code )"	423:2:12367:12423	6537332	5	True				
ANR	6537590	AssignmentExpression	"reason = handle_exception_message ( dbg , & msg , & ret_code )"		6537332	0		=			
ANR	6537591	Identifier	reason		6537332	0					
ANR	6537592	CallExpression	"handle_exception_message ( dbg , & msg , & ret_code )"		6537332	1					
ANR	6537593	Callee	handle_exception_message		6537332	0					
ANR	6537594	Identifier	handle_exception_message		6537332	0					
ANR	6537595	ArgumentList	dbg		6537332	1					
ANR	6537596	Argument	dbg		6537332	0					
ANR	6537597	Identifier	dbg		6537332	0					
ANR	6537598	Argument	& msg		6537332	1					
ANR	6537599	UnaryOperationExpression	& msg		6537332	0					
ANR	6537600	UnaryOperator	&		6537332	0					
ANR	6537601	Identifier	msg		6537332	1					
ANR	6537602	Argument	& ret_code		6537332	2					
ANR	6537603	UnaryOperationExpression	& ret_code		6537332	0					
ANR	6537604	UnaryOperator	&		6537332	0					
ANR	6537605	Identifier	ret_code		6537332	1					
ANR	6537606	ExpressionStatement	"encode_reply ( & reply , & msg . hdr , ret_code )"	424:2:12427:12468	6537332	6	True				
ANR	6537607	CallExpression	"encode_reply ( & reply , & msg . hdr , ret_code )"		6537332	0					
ANR	6537608	Callee	encode_reply		6537332	0					
ANR	6537609	Identifier	encode_reply		6537332	0					
ANR	6537610	ArgumentList	& reply		6537332	1					
ANR	6537611	Argument	& reply		6537332	0					
ANR	6537612	UnaryOperationExpression	& reply		6537332	0					
ANR	6537613	UnaryOperator	&		6537332	0					
ANR	6537614	Identifier	reply		6537332	1					
ANR	6537615	Argument	& msg . hdr		6537332	1					
ANR	6537616	UnaryOperationExpression	& msg . hdr		6537332	0					
ANR	6537617	UnaryOperator	&		6537332	0					
ANR	6537618	MemberAccess	msg . hdr		6537332	1					
ANR	6537619	Identifier	msg		6537332	0					
ANR	6537620	Identifier	hdr		6537332	1					
ANR	6537621	Argument	ret_code		6537332	2					
ANR	6537622	Identifier	ret_code		6537332	0					
ANR	6537623	ExpressionStatement	"kr = mach_msg ( & reply . Head , MACH_SEND_MSG | MACH_SEND_INTERRUPT , reply . Head . msgh_size , 0 , MACH_PORT_NULL , 0 , MACH_PORT_NULL )"	425:2:12472:12608	6537332	7	True				
ANR	6537624	AssignmentExpression	"kr = mach_msg ( & reply . Head , MACH_SEND_MSG | MACH_SEND_INTERRUPT , reply . Head . msgh_size , 0 , MACH_PORT_NULL , 0 , MACH_PORT_NULL )"		6537332	0		=			
ANR	6537625	Identifier	kr		6537332	0					
ANR	6537626	CallExpression	"mach_msg ( & reply . Head , MACH_SEND_MSG | MACH_SEND_INTERRUPT , reply . Head . msgh_size , 0 , MACH_PORT_NULL , 0 , MACH_PORT_NULL )"		6537332	1					
ANR	6537627	Callee	mach_msg		6537332	0					
ANR	6537628	Identifier	mach_msg		6537332	0					
ANR	6537629	ArgumentList	& reply . Head		6537332	1					
ANR	6537630	Argument	& reply . Head		6537332	0					
ANR	6537631	UnaryOperationExpression	& reply . Head		6537332	0					
ANR	6537632	UnaryOperator	&		6537332	0					
ANR	6537633	MemberAccess	reply . Head		6537332	1					
ANR	6537634	Identifier	reply		6537332	0					
ANR	6537635	Identifier	Head		6537332	1					
ANR	6537636	Argument	MACH_SEND_MSG | MACH_SEND_INTERRUPT		6537332	1					
ANR	6537637	InclusiveOrExpression	MACH_SEND_MSG | MACH_SEND_INTERRUPT		6537332	0		|			
ANR	6537638	Identifier	MACH_SEND_MSG		6537332	0					
ANR	6537639	Identifier	MACH_SEND_INTERRUPT		6537332	1					
ANR	6537640	Argument	reply . Head . msgh_size		6537332	2					
ANR	6537641	MemberAccess	reply . Head . msgh_size		6537332	0					
ANR	6537642	MemberAccess	reply . Head		6537332	0					
ANR	6537643	Identifier	reply		6537332	0					
ANR	6537644	Identifier	Head		6537332	1					
ANR	6537645	Identifier	msgh_size		6537332	1					
ANR	6537646	Argument	0		6537332	3					
ANR	6537647	PrimaryExpression	0		6537332	0					
ANR	6537648	Argument	MACH_PORT_NULL		6537332	4					
ANR	6537649	Identifier	MACH_PORT_NULL		6537332	0					
ANR	6537650	Argument	0		6537332	5					
ANR	6537651	PrimaryExpression	0		6537332	0					
ANR	6537652	Argument	MACH_PORT_NULL		6537332	6					
ANR	6537653	Identifier	MACH_PORT_NULL		6537332	0					
ANR	6537654	IfStatement	if ( reply . Head . msgh_remote_port != 0 && kr != MACH_MSG_SUCCESS )		6537332	8					
ANR	6537655	Condition	reply . Head . msgh_remote_port != 0 && kr != MACH_MSG_SUCCESS	429:6:12616:12673	6537332	0	True				
ANR	6537656	AndExpression	reply . Head . msgh_remote_port != 0 && kr != MACH_MSG_SUCCESS		6537332	0		&&			
ANR	6537657	EqualityExpression	reply . Head . msgh_remote_port != 0		6537332	0		!=			
ANR	6537658	MemberAccess	reply . Head . msgh_remote_port		6537332	0					
ANR	6537659	MemberAccess	reply . Head		6537332	0					
ANR	6537660	Identifier	reply		6537332	0					
ANR	6537661	Identifier	Head		6537332	1					
ANR	6537662	Identifier	msgh_remote_port		6537332	1					
ANR	6537663	PrimaryExpression	0		6537332	1					
ANR	6537664	EqualityExpression	kr != MACH_MSG_SUCCESS		6537332	1		!=			
ANR	6537665	Identifier	kr		6537332	0					
ANR	6537666	Identifier	MACH_MSG_SUCCESS		6537332	1					
ANR	6537667	CompoundStatement		55:66:1594:1594	6537332	1					
ANR	6537668	ExpressionStatement	"kr = mach_port_deallocate ( mach_task_self ( ) , reply . Head . msgh_remote_port )"	430:3:12681:12754	6537332	0	True				
ANR	6537669	AssignmentExpression	"kr = mach_port_deallocate ( mach_task_self ( ) , reply . Head . msgh_remote_port )"		6537332	0		=			
ANR	6537670	Identifier	kr		6537332	0					
ANR	6537671	CallExpression	"mach_port_deallocate ( mach_task_self ( ) , reply . Head . msgh_remote_port )"		6537332	1					
ANR	6537672	Callee	mach_port_deallocate		6537332	0					
ANR	6537673	Identifier	mach_port_deallocate		6537332	0					
ANR	6537674	ArgumentList	mach_task_self ( )		6537332	1					
ANR	6537675	Argument	mach_task_self ( )		6537332	0					
ANR	6537676	CallExpression	mach_task_self ( )		6537332	0					
ANR	6537677	Callee	mach_task_self		6537332	0					
ANR	6537678	Identifier	mach_task_self		6537332	0					
ANR	6537679	ArgumentList			6537332	1					
ANR	6537680	Argument	reply . Head . msgh_remote_port		6537332	1					
ANR	6537681	MemberAccess	reply . Head . msgh_remote_port		6537332	0					
ANR	6537682	MemberAccess	reply . Head		6537332	0					
ANR	6537683	Identifier	reply		6537332	0					
ANR	6537684	Identifier	Head		6537332	1					
ANR	6537685	Identifier	msgh_remote_port		6537332	1					
ANR	6537686	IfStatement	if ( kr != KERN_SUCCESS )		6537332	1					
ANR	6537687	Condition	kr != KERN_SUCCESS	431:7:12763:12780	6537332	0	True				
ANR	6537688	EqualityExpression	kr != KERN_SUCCESS		6537332	0		!=			
ANR	6537689	Identifier	kr		6537332	0					
ANR	6537690	Identifier	KERN_SUCCESS		6537332	1					
ANR	6537691	ExpressionStatement	"eprintf ( ""failed to deallocate reply port\\n"" )"	432:4:12787:12832	6537332	1	True				
ANR	6537692	CallExpression	"eprintf ( ""failed to deallocate reply port\\n"" )"		6537332	0					
ANR	6537693	Callee	eprintf		6537332	0					
ANR	6537694	Identifier	eprintf		6537332	0					
ANR	6537695	ArgumentList	"""failed to deallocate reply port\\n"""		6537332	1					
ANR	6537696	Argument	"""failed to deallocate reply port\\n"""		6537332	0					
ANR	6537697	PrimaryExpression	"""failed to deallocate reply port\\n"""		6537332	0					
ANR	6537698	BreakStatement	break ;	434:2:12840:12845	6537332	9	True				
ANR	6537699	ExpressionStatement	"dbg -> stopaddr = r_debug_reg_get ( dbg , ""PC"" )"	436:1:12878:12921	6537332	9	True				
ANR	6537700	AssignmentExpression	"dbg -> stopaddr = r_debug_reg_get ( dbg , ""PC"" )"		6537332	0		=			
ANR	6537701	PtrMemberAccess	dbg -> stopaddr		6537332	0					
ANR	6537702	Identifier	dbg		6537332	0					
ANR	6537703	Identifier	stopaddr		6537332	1					
ANR	6537704	CallExpression	"r_debug_reg_get ( dbg , ""PC"" )"		6537332	1					
ANR	6537705	Callee	r_debug_reg_get		6537332	0					
ANR	6537706	Identifier	r_debug_reg_get		6537332	0					
ANR	6537707	ArgumentList	dbg		6537332	1					
ANR	6537708	Argument	dbg		6537332	0					
ANR	6537709	Identifier	dbg		6537332	0					
ANR	6537710	Argument	"""PC"""		6537332	1					
ANR	6537711	PrimaryExpression	"""PC"""		6537332	0					
ANR	6537712	ReturnStatement	return reason ;	437:1:12924:12937	6537332	10	True				
ANR	6537713	Identifier	reason		6537332	0					
ANR	6537714	ReturnType	static int		6537332	1					
ANR	6537715	Identifier	__xnu_wait		6537332	2					
ANR	6537716	ParameterList	"RDebug * dbg , int pid"		6537332	3					
ANR	6537717	Parameter	RDebug * dbg	375:23:11059:11069	6537332	0	True				
ANR	6537718	ParameterType	RDebug *		6537332	0					
ANR	6537719	Identifier	dbg		6537332	1					
ANR	6537720	Parameter	int pid	375:36:11072:11078	6537332	1	True				
ANR	6537721	ParameterType	int		6537332	0					
ANR	6537722	Identifier	pid		6537332	1					
ANR	6537723	CFGEntryNode	ENTRY		6537332		True				
ANR	6537724	CFGExitNode	EXIT		6537332		True				
ANR	6537725	InfiniteForNode	true		6537332		True				
ANR	6537726	Symbol	msg		6537332						
ANR	6537727	Symbol	reason		6537332						
ANR	6537728	Symbol	msg . hdr . msgh_local_port		6537332						
ANR	6537729	Symbol	msg . hdr . msgh_size		6537332						
ANR	6537730	Symbol	R_DEBUG_REASON_MACH_RCV_INTERRUPTED		6537332						
ANR	6537731	Symbol	dbg -> stopaddr		6537332						
ANR	6537732	Symbol	r_debug_reg_get		6537332						
ANR	6537733	Symbol	mach_msg		6537332						
ANR	6537734	Symbol	pid		6537332						
ANR	6537735	Symbol	R_DEBUG_REASON_DEAD		6537332						
ANR	6537736	Symbol	MACH_MSG_TIMEOUT_NONE		6537332						
ANR	6537737	Symbol	MACH_SEND_INTERRUPT		6537332						
ANR	6537738	Symbol	& reply		6537332						
ANR	6537739	Symbol	MACH_SEND_MSG		6537332						
ANR	6537740	Symbol	MACH_RCV_INTERRUPT		6537332						
ANR	6537741	Symbol	reply . Head		6537332						
ANR	6537742	Symbol	KERN_SUCCESS		6537332						
ANR	6537743	Symbol	reply		6537332						
ANR	6537744	Symbol	handle_exception_message		6537332						
ANR	6537745	Symbol	& reply . Head		6537332						
ANR	6537746	Symbol	MACH_PORT_NULL		6537332						
ANR	6537747	Symbol	ret		6537332						
ANR	6537748	Symbol	& msg		6537332						
ANR	6537749	Symbol	MACH_RCV_MSG		6537332						
ANR	6537750	Symbol	MACH_RCV_INTERRUPTED		6537332						
ANR	6537751	Symbol	validate_mach_message		6537332						
ANR	6537752	Symbol	reply . Head . msgh_remote_port		6537332						
ANR	6537753	Symbol	KERN_FAILURE		6537332						
ANR	6537754	Symbol	kr		6537332						
ANR	6537755	Symbol	reply . Head . msgh_size		6537332						
ANR	6537756	Symbol	dbg		6537332						
ANR	6537757	Symbol	& msg . hdr		6537332						
ANR	6537758	Symbol	mach_port_deallocate		6537332						
ANR	6537759	Symbol	* dbg		6537332						
ANR	6537760	Symbol	& ret_code		6537332						
ANR	6537761	Symbol	R_DEBUG_REASON_UNKNOWN		6537332						
ANR	6537762	Symbol	handle_dead_notify		6537332						
ANR	6537763	Symbol	ex		6537332						
ANR	6537764	Symbol	MACH_MSG_SUCCESS		6537332						
ANR	6537765	Symbol	mach_task_self		6537332						
ANR	6537766	Symbol	ex . exception_port		6537332						
ANR	6537767	Symbol	msg . hdr		6537332						
ANR	6537768	Symbol	ret_code		6537332						
ANR	6537769	Function	xnu_create_exception_thread	440:0:12942:14853							
ANR	6537770	FunctionDef	xnu_create_exception_thread (RDebug * dbg)		6537769	0					
ANR	6537771	CompoundStatement		440:46:12988:14853	6537769	0					
ANR	6537772	ReturnStatement	return false ;	442:1:13007:13019	6537769	0	True				
ANR	6537773	Identifier	false		6537769	0					
ANR	6537774	ReturnType	bool		6537769	1					
ANR	6537775	Identifier	xnu_create_exception_thread		6537769	2					
ANR	6537776	ParameterList	RDebug * dbg		6537769	3					
ANR	6537777	Parameter	RDebug * dbg	440:33:12975:12985	6537769	0	True				
ANR	6537778	ParameterType	RDebug *		6537769	0					
ANR	6537779	Identifier	dbg		6537769	1					
ANR	6537780	CFGEntryNode	ENTRY		6537769		True				
ANR	6537781	CFGExitNode	EXIT		6537769		True				
ANR	6537782	Symbol	dbg		6537769						
ANR	6537783	Symbol	false		6537769						
