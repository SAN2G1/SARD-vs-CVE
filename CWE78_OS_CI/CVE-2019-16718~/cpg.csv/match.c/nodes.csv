command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5352749	File	data/converged/CVE-2019-16718~_radare2/match.c								
ANR	5352750	Function	haveSuffix	6:0:86:269							
ANR	5352751	FunctionDef	"haveSuffix (const char * glob , int glob_len , const char * sfx)"		5352750	0					
ANR	5352752	CompoundStatement		6:78:164:269	5352750	0					
ANR	5352753	IdentifierDeclStatement	const int sfx_len = strlen ( sfx ) ;	7:1:167:199	5352750	0	True				
ANR	5352754	IdentifierDecl	sfx_len = strlen ( sfx )		5352750	0					
ANR	5352755	IdentifierDeclType	const int		5352750	0					
ANR	5352756	Identifier	sfx_len		5352750	1					
ANR	5352757	AssignmentExpression	sfx_len = strlen ( sfx )		5352750	2		=			
ANR	5352758	Identifier	sfx_len		5352750	0					
ANR	5352759	CallExpression	strlen ( sfx )		5352750	1					
ANR	5352760	Callee	strlen		5352750	0					
ANR	5352761	Identifier	strlen		5352750	0					
ANR	5352762	ArgumentList	sfx		5352750	1					
ANR	5352763	Argument	sfx		5352750	0					
ANR	5352764	Identifier	sfx		5352750	0					
ANR	5352765	ReturnStatement	"return ( glob_len > sfx_len && ! strcmp ( glob + glob_len - sfx_len , sfx ) ) ;"	8:1:202:267	5352750	1	True				
ANR	5352766	AndExpression	"glob_len > sfx_len && ! strcmp ( glob + glob_len - sfx_len , sfx )"		5352750	0		&&			
ANR	5352767	RelationalExpression	glob_len > sfx_len		5352750	0		>			
ANR	5352768	Identifier	glob_len		5352750	0					
ANR	5352769	Identifier	sfx_len		5352750	1					
ANR	5352770	UnaryOperationExpression	"! strcmp ( glob + glob_len - sfx_len , sfx )"		5352750	1					
ANR	5352771	UnaryOperator	!		5352750	0					
ANR	5352772	CallExpression	"strcmp ( glob + glob_len - sfx_len , sfx )"		5352750	1					
ANR	5352773	Callee	strcmp		5352750	0					
ANR	5352774	Identifier	strcmp		5352750	0					
ANR	5352775	ArgumentList	glob + glob_len - sfx_len		5352750	1					
ANR	5352776	Argument	glob + glob_len - sfx_len		5352750	0					
ANR	5352777	AdditiveExpression	glob + glob_len - sfx_len		5352750	0		+			
ANR	5352778	Identifier	glob		5352750	0					
ANR	5352779	AdditiveExpression	glob_len - sfx_len		5352750	1		-			
ANR	5352780	Identifier	glob_len		5352750	0					
ANR	5352781	Identifier	sfx_len		5352750	1					
ANR	5352782	Argument	sfx		5352750	1					
ANR	5352783	Identifier	sfx		5352750	0					
ANR	5352784	ReturnType	static inline int		5352750	1					
ANR	5352785	Identifier	haveSuffix		5352750	2					
ANR	5352786	ParameterList	"const char * glob , int glob_len , const char * sfx"		5352750	3					
ANR	5352787	Parameter	const char * glob	6:29:115:130	5352750	0	True				
ANR	5352788	ParameterType	const char *		5352750	0					
ANR	5352789	Identifier	glob		5352750	1					
ANR	5352790	Parameter	int glob_len	6:47:133:144	5352750	1	True				
ANR	5352791	ParameterType	int		5352750	0					
ANR	5352792	Identifier	glob_len		5352750	1					
ANR	5352793	Parameter	const char * sfx	6:61:147:161	5352750	2	True				
ANR	5352794	ParameterType	const char *		5352750	0					
ANR	5352795	Identifier	sfx		5352750	1					
ANR	5352796	CFGEntryNode	ENTRY		5352750		True				
ANR	5352797	CFGExitNode	EXIT		5352750		True				
ANR	5352798	Symbol	strcmp		5352750						
ANR	5352799	Symbol	strlen		5352750						
ANR	5352800	Symbol	sfx		5352750						
ANR	5352801	Symbol	glob		5352750						
ANR	5352802	Symbol	sfx_len		5352750						
ANR	5352803	Symbol	glob_len		5352750						
ANR	5352804	Function	havePrefix	11:0:272:448							
ANR	5352805	FunctionDef	"havePrefix (const char * glob , int glob_len , const char * pfx)"		5352804	0					
ANR	5352806	CompoundStatement		11:78:350:448	5352804	0					
ANR	5352807	IdentifierDeclStatement	const int pfx_len = strlen ( pfx ) ;	12:1:353:385	5352804	0	True				
ANR	5352808	IdentifierDecl	pfx_len = strlen ( pfx )		5352804	0					
ANR	5352809	IdentifierDeclType	const int		5352804	0					
ANR	5352810	Identifier	pfx_len		5352804	1					
ANR	5352811	AssignmentExpression	pfx_len = strlen ( pfx )		5352804	2		=			
ANR	5352812	Identifier	pfx_len		5352804	0					
ANR	5352813	CallExpression	strlen ( pfx )		5352804	1					
ANR	5352814	Callee	strlen		5352804	0					
ANR	5352815	Identifier	strlen		5352804	0					
ANR	5352816	ArgumentList	pfx		5352804	1					
ANR	5352817	Argument	pfx		5352804	0					
ANR	5352818	Identifier	pfx		5352804	0					
ANR	5352819	ReturnStatement	"return ( pfx_len < glob_len && ! strncmp ( glob , pfx , pfx_len ) ) ;"	13:1:388:446	5352804	1	True				
ANR	5352820	AndExpression	"pfx_len < glob_len && ! strncmp ( glob , pfx , pfx_len )"		5352804	0		&&			
ANR	5352821	RelationalExpression	pfx_len < glob_len		5352804	0		<			
ANR	5352822	Identifier	pfx_len		5352804	0					
ANR	5352823	Identifier	glob_len		5352804	1					
ANR	5352824	UnaryOperationExpression	"! strncmp ( glob , pfx , pfx_len )"		5352804	1					
ANR	5352825	UnaryOperator	!		5352804	0					
ANR	5352826	CallExpression	"strncmp ( glob , pfx , pfx_len )"		5352804	1					
ANR	5352827	Callee	strncmp		5352804	0					
ANR	5352828	Identifier	strncmp		5352804	0					
ANR	5352829	ArgumentList	glob		5352804	1					
ANR	5352830	Argument	glob		5352804	0					
ANR	5352831	Identifier	glob		5352804	0					
ANR	5352832	Argument	pfx		5352804	1					
ANR	5352833	Identifier	pfx		5352804	0					
ANR	5352834	Argument	pfx_len		5352804	2					
ANR	5352835	Identifier	pfx_len		5352804	0					
ANR	5352836	ReturnType	static inline int		5352804	1					
ANR	5352837	Identifier	havePrefix		5352804	2					
ANR	5352838	ParameterList	"const char * glob , int glob_len , const char * pfx"		5352804	3					
ANR	5352839	Parameter	const char * glob	11:29:301:316	5352804	0	True				
ANR	5352840	ParameterType	const char *		5352804	0					
ANR	5352841	Identifier	glob		5352804	1					
ANR	5352842	Parameter	int glob_len	11:47:319:330	5352804	1	True				
ANR	5352843	ParameterType	int		5352804	0					
ANR	5352844	Identifier	glob_len		5352804	1					
ANR	5352845	Parameter	const char * pfx	11:61:333:347	5352804	2	True				
ANR	5352846	ParameterType	const char *		5352804	0					
ANR	5352847	Identifier	pfx		5352804	1					
ANR	5352848	CFGEntryNode	ENTRY		5352804		True				
ANR	5352849	CFGExitNode	EXIT		5352804		True				
ANR	5352850	Symbol	strlen		5352804						
ANR	5352851	Symbol	strncmp		5352804						
ANR	5352852	Symbol	pfx		5352804						
ANR	5352853	Symbol	glob		5352804						
ANR	5352854	Symbol	pfx_len		5352804						
ANR	5352855	Symbol	glob_len		5352804						
ANR	5352856	ClassDef	MatchFlag	16:0:451:593							
ANR	5352857	Function	mycmp	24:0:597:885							
ANR	5352858	FunctionDef	"mycmp (const char * a , const char * b , int n , int any)"		5352857	0					
ANR	5352859	CompoundStatement		24:70:667:885	5352857	0					
ANR	5352860	IdentifierDeclStatement	"int i , j ;"	25:1:670:678	5352857	0	True				
ANR	5352861	IdentifierDecl	i		5352857	0					
ANR	5352862	IdentifierDeclType	int		5352857	0					
ANR	5352863	Identifier	i		5352857	1					
ANR	5352864	IdentifierDecl	j		5352857	1					
ANR	5352865	IdentifierDeclType	int		5352857	0					
ANR	5352866	Identifier	j		5352857	1					
ANR	5352867	ForStatement	for ( i = j = 0 ; a [ i ] && b [ j ] && j < n ; i ++ )		5352857	1					
ANR	5352868	ForInit	i = j = 0 ;	26:6:686:695	5352857	0	True				
ANR	5352869	AssignmentExpression	i = j = 0		5352857	0		=			
ANR	5352870	Identifier	i		5352857	0					
ANR	5352871	AssignmentExpression	j = 0		5352857	1		=			
ANR	5352872	Identifier	j		5352857	0					
ANR	5352873	PrimaryExpression	0		5352857	1					
ANR	5352874	Condition	a [ i ] && b [ j ] && j < n	26:17:697:717	5352857	1	True				
ANR	5352875	AndExpression	a [ i ] && b [ j ] && j < n		5352857	0		&&			
ANR	5352876	ArrayIndexing	a [ i ]		5352857	0					
ANR	5352877	Identifier	a		5352857	0					
ANR	5352878	Identifier	i		5352857	1					
ANR	5352879	AndExpression	b [ j ] && j < n		5352857	1		&&			
ANR	5352880	ArrayIndexing	b [ j ]		5352857	0					
ANR	5352881	Identifier	b		5352857	0					
ANR	5352882	Identifier	j		5352857	1					
ANR	5352883	RelationalExpression	j < n		5352857	1		<			
ANR	5352884	Identifier	j		5352857	0					
ANR	5352885	Identifier	n		5352857	1					
ANR	5352886	PostIncDecOperationExpression	i ++	26:40:720:722	5352857	2	True				
ANR	5352887	Identifier	i		5352857	0					
ANR	5352888	IncDec	++		5352857	1					
ANR	5352889	CompoundStatement		3:45:57:57	5352857	3					
ANR	5352890	IfStatement	if ( tolower ( ( const ut8 ) a [ i ] ) == tolower ( ( const ut8 ) b [ j ] ) )		5352857	0					
ANR	5352891	Condition	tolower ( ( const ut8 ) a [ i ] ) == tolower ( ( const ut8 ) b [ j ] )	27:6:733:786	5352857	0	True				
ANR	5352892	EqualityExpression	tolower ( ( const ut8 ) a [ i ] ) == tolower ( ( const ut8 ) b [ j ] )		5352857	0		==			
ANR	5352893	CallExpression	tolower ( ( const ut8 ) a [ i ] )		5352857	0					
ANR	5352894	Callee	tolower		5352857	0					
ANR	5352895	Identifier	tolower		5352857	0					
ANR	5352896	ArgumentList	( const ut8 ) a [ i ]		5352857	1					
ANR	5352897	Argument	( const ut8 ) a [ i ]		5352857	0					
ANR	5352898	CastExpression	( const ut8 ) a [ i ]		5352857	0					
ANR	5352899	CastTarget	const ut8		5352857	0					
ANR	5352900	ArrayIndexing	a [ i ]		5352857	1					
ANR	5352901	Identifier	a		5352857	0					
ANR	5352902	Identifier	i		5352857	1					
ANR	5352903	CallExpression	tolower ( ( const ut8 ) b [ j ] )		5352857	1					
ANR	5352904	Callee	tolower		5352857	0					
ANR	5352905	Identifier	tolower		5352857	0					
ANR	5352906	ArgumentList	( const ut8 ) b [ j ]		5352857	1					
ANR	5352907	Argument	( const ut8 ) b [ j ]		5352857	0					
ANR	5352908	CastExpression	( const ut8 ) b [ j ]		5352857	0					
ANR	5352909	CastTarget	const ut8		5352857	0					
ANR	5352910	ArrayIndexing	b [ j ]		5352857	1					
ANR	5352911	Identifier	b		5352857	0					
ANR	5352912	Identifier	j		5352857	1					
ANR	5352913	CompoundStatement		4:62:121:121	5352857	1					
ANR	5352914	ExpressionStatement	j ++	28:3:794:797	5352857	0	True				
ANR	5352915	PostIncDecOperationExpression	j ++		5352857	0					
ANR	5352916	Identifier	j		5352857	0					
ANR	5352917	IncDec	++		5352857	1					
ANR	5352918	ElseStatement	else		5352857	0					
ANR	5352919	CompoundStatement		6:9:140:140	5352857	0					
ANR	5352920	IfStatement	if ( ! any )		5352857	0					
ANR	5352921	Condition	! any	30:7:817:820	5352857	0	True				
ANR	5352922	UnaryOperationExpression	! any		5352857	0					
ANR	5352923	UnaryOperator	!		5352857	0					
ANR	5352924	Identifier	any		5352857	1					
ANR	5352925	CompoundStatement		7:13:155:155	5352857	1					
ANR	5352926	ReturnStatement	return 0 ;	31:4:829:837	5352857	0	True				
ANR	5352927	PrimaryExpression	0		5352857	0					
ANR	5352928	ExpressionStatement	j = 0	33:3:847:852	5352857	1	True				
ANR	5352929	AssignmentExpression	j = 0		5352857	0		=			
ANR	5352930	Identifier	j		5352857	0					
ANR	5352931	PrimaryExpression	0		5352857	1					
ANR	5352932	ReturnStatement	return any ? j != n : 1 ;	36:1:862:883	5352857	2	True				
ANR	5352933	ConditionalExpression	any ? j != n : 1		5352857	0					
ANR	5352934	Condition	any		5352857	0					
ANR	5352935	Identifier	any		5352857	0					
ANR	5352936	EqualityExpression	j != n		5352857	1		!=			
ANR	5352937	Identifier	j		5352857	0					
ANR	5352938	Identifier	n		5352857	1					
ANR	5352939	PrimaryExpression	1		5352857	2					
ANR	5352940	ReturnType	static inline int		5352857	1					
ANR	5352941	Identifier	mycmp		5352857	2					
ANR	5352942	ParameterList	"const char * a , const char * b , int n , int any"		5352857	3					
ANR	5352943	Parameter	const char * a	24:24:621:633	5352857	0	True				
ANR	5352944	ParameterType	const char *		5352857	0					
ANR	5352945	Identifier	a		5352857	1					
ANR	5352946	Parameter	const char * b	24:39:636:648	5352857	1	True				
ANR	5352947	ParameterType	const char *		5352857	0					
ANR	5352948	Identifier	b		5352857	1					
ANR	5352949	Parameter	int n	24:54:651:655	5352857	2	True				
ANR	5352950	ParameterType	int		5352857	0					
ANR	5352951	Identifier	n		5352857	1					
ANR	5352952	Parameter	int any	24:61:658:664	5352857	3	True				
ANR	5352953	ParameterType	int		5352857	0					
ANR	5352954	Identifier	any		5352857	1					
ANR	5352955	CFGEntryNode	ENTRY		5352857		True				
ANR	5352956	CFGExitNode	EXIT		5352857		True				
ANR	5352957	Symbol	a		5352857						
ANR	5352958	Symbol	b		5352857						
ANR	5352959	Symbol	* i		5352857						
ANR	5352960	Symbol	* j		5352857						
ANR	5352961	Symbol	tolower		5352857						
ANR	5352962	Symbol	i		5352857						
ANR	5352963	Symbol	j		5352857						
ANR	5352964	Symbol	* a		5352857						
ANR	5352965	Symbol	* b		5352857						
ANR	5352966	Symbol	any		5352857						
ANR	5352967	Symbol	n		5352857						
ANR	5352968	Function	strstr2	39:0:888:1085							
ANR	5352969	FunctionDef	"strstr2 (const char * a , const char * b , int n)"		5352968	0					
ANR	5352970	CompoundStatement		39:63:951:1085	5352968	0					
ANR	5352971	IdentifierDeclStatement	"int i , j ;"	40:1:954:962	5352968	0	True				
ANR	5352972	IdentifierDecl	i		5352968	0					
ANR	5352973	IdentifierDeclType	int		5352968	0					
ANR	5352974	Identifier	i		5352968	1					
ANR	5352975	IdentifierDecl	j		5352968	1					
ANR	5352976	IdentifierDeclType	int		5352968	0					
ANR	5352977	Identifier	j		5352968	1					
ANR	5352978	ForStatement	for ( i = j = 0 ; a [ i ] && b [ j ] && j < n ; i ++ )		5352968	1					
ANR	5352979	ForInit	i = j = 0 ;	41:6:970:979	5352968	0	True				
ANR	5352980	AssignmentExpression	i = j = 0		5352968	0		=			
ANR	5352981	Identifier	i		5352968	0					
ANR	5352982	AssignmentExpression	j = 0		5352968	1		=			
ANR	5352983	Identifier	j		5352968	0					
ANR	5352984	PrimaryExpression	0		5352968	1					
ANR	5352985	Condition	a [ i ] && b [ j ] && j < n	41:17:981:1001	5352968	1	True				
ANR	5352986	AndExpression	a [ i ] && b [ j ] && j < n		5352968	0		&&			
ANR	5352987	ArrayIndexing	a [ i ]		5352968	0					
ANR	5352988	Identifier	a		5352968	0					
ANR	5352989	Identifier	i		5352968	1					
ANR	5352990	AndExpression	b [ j ] && j < n		5352968	1		&&			
ANR	5352991	ArrayIndexing	b [ j ]		5352968	0					
ANR	5352992	Identifier	b		5352968	0					
ANR	5352993	Identifier	j		5352968	1					
ANR	5352994	RelationalExpression	j < n		5352968	1		<			
ANR	5352995	Identifier	j		5352968	0					
ANR	5352996	Identifier	n		5352968	1					
ANR	5352997	PostIncDecOperationExpression	i ++	41:40:1004:1006	5352968	2	True				
ANR	5352998	Identifier	i		5352968	0					
ANR	5352999	IncDec	++		5352968	1					
ANR	5353000	CompoundStatement		3:45:57:57	5352968	3					
ANR	5353001	IfStatement	if ( a [ i ] == b [ j ] )		5352968	0					
ANR	5353002	Condition	a [ i ] == b [ j ]	42:6:1017:1028	5352968	0	True				
ANR	5353003	EqualityExpression	a [ i ] == b [ j ]		5352968	0		==			
ANR	5353004	ArrayIndexing	a [ i ]		5352968	0					
ANR	5353005	Identifier	a		5352968	0					
ANR	5353006	Identifier	i		5352968	1					
ANR	5353007	ArrayIndexing	b [ j ]		5352968	1					
ANR	5353008	Identifier	b		5352968	0					
ANR	5353009	Identifier	j		5352968	1					
ANR	5353010	CompoundStatement		4:20:79:79	5352968	1					
ANR	5353011	ExpressionStatement	j ++	43:3:1036:1039	5352968	0	True				
ANR	5353012	PostIncDecOperationExpression	j ++		5352968	0					
ANR	5353013	Identifier	j		5352968	0					
ANR	5353014	IncDec	++		5352968	1					
ANR	5353015	ElseStatement	else		5352968	0					
ANR	5353016	CompoundStatement		6:9:98:98	5352968	0					
ANR	5353017	ExpressionStatement	j = 0	45:3:1055:1060	5352968	0	True				
ANR	5353018	AssignmentExpression	j = 0		5352968	0		=			
ANR	5353019	Identifier	j		5352968	0					
ANR	5353020	PrimaryExpression	0		5352968	1					
ANR	5353021	ReturnStatement	return j == n ;	48:1:1070:1083	5352968	2	True				
ANR	5353022	EqualityExpression	j == n		5352968	0		==			
ANR	5353023	Identifier	j		5352968	0					
ANR	5353024	Identifier	n		5352968	1					
ANR	5353025	ReturnType	static inline int		5352968	1					
ANR	5353026	Identifier	strstr2		5352968	2					
ANR	5353027	ParameterList	"const char * a , const char * b , int n"		5352968	3					
ANR	5353028	Parameter	const char * a	39:26:914:926	5352968	0	True				
ANR	5353029	ParameterType	const char *		5352968	0					
ANR	5353030	Identifier	a		5352968	1					
ANR	5353031	Parameter	const char * b	39:41:929:941	5352968	1	True				
ANR	5353032	ParameterType	const char *		5352968	0					
ANR	5353033	Identifier	b		5352968	1					
ANR	5353034	Parameter	int n	39:56:944:948	5352968	2	True				
ANR	5353035	ParameterType	int		5352968	0					
ANR	5353036	Identifier	n		5352968	1					
ANR	5353037	CFGEntryNode	ENTRY		5352968		True				
ANR	5353038	CFGExitNode	EXIT		5352968		True				
ANR	5353039	Symbol	a		5352968						
ANR	5353040	Symbol	b		5352968						
ANR	5353041	Symbol	* i		5352968						
ANR	5353042	Symbol	* j		5352968						
ANR	5353043	Symbol	i		5352968						
ANR	5353044	Symbol	j		5352968						
ANR	5353045	Symbol	* a		5352968						
ANR	5353046	Symbol	* b		5352968						
ANR	5353047	Symbol	n		5352968						
ANR	5353048	Function	compareString	51:0:1088:2022							
ANR	5353049	FunctionDef	"compareString (const char * a , const char * b , int blen , int flags)"		5353048	0					
ANR	5353050	CompoundStatement		51:84:1172:2022	5353048	0					
ANR	5353051	IdentifierDeclStatement	const int start = flags & SDB_LIKE_START ;	52:1:1175:1215	5353048	0	True				
ANR	5353052	IdentifierDecl	start = flags & SDB_LIKE_START		5353048	0					
ANR	5353053	IdentifierDeclType	const int		5353048	0					
ANR	5353054	Identifier	start		5353048	1					
ANR	5353055	AssignmentExpression	start = flags & SDB_LIKE_START		5353048	2		=			
ANR	5353056	Identifier	start		5353048	0					
ANR	5353057	BitAndExpression	flags & SDB_LIKE_START		5353048	1		&			
ANR	5353058	Identifier	flags		5353048	0					
ANR	5353059	Identifier	SDB_LIKE_START		5353048	1					
ANR	5353060	IdentifierDeclStatement	const int end = flags & SDB_LIKE_END ;	53:1:1218:1254	5353048	1	True				
ANR	5353061	IdentifierDecl	end = flags & SDB_LIKE_END		5353048	0					
ANR	5353062	IdentifierDeclType	const int		5353048	0					
ANR	5353063	Identifier	end		5353048	1					
ANR	5353064	AssignmentExpression	end = flags & SDB_LIKE_END		5353048	2		=			
ANR	5353065	Identifier	end		5353048	0					
ANR	5353066	BitAndExpression	flags & SDB_LIKE_END		5353048	1		&			
ANR	5353067	Identifier	flags		5353048	0					
ANR	5353068	Identifier	SDB_LIKE_END		5353048	1					
ANR	5353069	IdentifierDeclStatement	char * aa = NULL ;	54:1:1257:1272	5353048	2	True				
ANR	5353070	IdentifierDecl	* aa = NULL		5353048	0					
ANR	5353071	IdentifierDeclType	char *		5353048	0					
ANR	5353072	Identifier	aa		5353048	1					
ANR	5353073	AssignmentExpression	* aa = NULL		5353048	2		=			
ANR	5353074	Identifier	NULL		5353048	0					
ANR	5353075	Identifier	NULL		5353048	1					
ANR	5353076	IdentifierDeclStatement	int alen ;	55:1:1275:1283	5353048	3	True				
ANR	5353077	IdentifierDecl	alen		5353048	0					
ANR	5353078	IdentifierDeclType	int		5353048	0					
ANR	5353079	Identifier	alen		5353048	1					
ANR	5353080	IdentifierDeclStatement	bool ret = false ;	56:1:1286:1302	5353048	4	True				
ANR	5353081	IdentifierDecl	ret = false		5353048	0					
ANR	5353082	IdentifierDeclType	bool		5353048	0					
ANR	5353083	Identifier	ret		5353048	1					
ANR	5353084	AssignmentExpression	ret = false		5353048	2		=			
ANR	5353085	Identifier	false		5353048	0					
ANR	5353086	Identifier	false		5353048	1					
ANR	5353087	IfStatement	if ( ! a || ! b || blen < 0 )		5353048	5					
ANR	5353088	Condition	! a || ! b || blen < 0	57:5:1309:1328	5353048	0	True				
ANR	5353089	OrExpression	! a || ! b || blen < 0		5353048	0		||			
ANR	5353090	UnaryOperationExpression	! a		5353048	0					
ANR	5353091	UnaryOperator	!		5353048	0					
ANR	5353092	Identifier	a		5353048	1					
ANR	5353093	OrExpression	! b || blen < 0		5353048	1		||			
ANR	5353094	UnaryOperationExpression	! b		5353048	0					
ANR	5353095	UnaryOperator	!		5353048	0					
ANR	5353096	Identifier	b		5353048	1					
ANR	5353097	RelationalExpression	blen < 0		5353048	1		<			
ANR	5353098	Identifier	blen		5353048	0					
ANR	5353099	PrimaryExpression	0		5353048	1					
ANR	5353100	CompoundStatement		7:27:158:158	5353048	1					
ANR	5353101	ReturnStatement	return 0 ;	58:2:1335:1343	5353048	0	True				
ANR	5353102	PrimaryExpression	0		5353048	0					
ANR	5353103	IfStatement	if ( flags & SDB_LIKE_BASE64 )		5353048	6					
ANR	5353104	Condition	flags & SDB_LIKE_BASE64	60:5:1353:1375	5353048	0	True				
ANR	5353105	BitAndExpression	flags & SDB_LIKE_BASE64		5353048	0		&			
ANR	5353106	Identifier	flags		5353048	0					
ANR	5353107	Identifier	SDB_LIKE_BASE64		5353048	1					
ANR	5353108	CompoundStatement		10:30:205:205	5353048	1					
ANR	5353109	ExpressionStatement	"aa = ( char * ) sdb_decode ( a , & alen )"	61:2:1382:1415	5353048	0	True				
ANR	5353110	AssignmentExpression	"aa = ( char * ) sdb_decode ( a , & alen )"		5353048	0		=			
ANR	5353111	Identifier	aa		5353048	0					
ANR	5353112	CastExpression	"( char * ) sdb_decode ( a , & alen )"		5353048	1					
ANR	5353113	CastTarget	char *		5353048	0					
ANR	5353114	CallExpression	"sdb_decode ( a , & alen )"		5353048	1					
ANR	5353115	Callee	sdb_decode		5353048	0					
ANR	5353116	Identifier	sdb_decode		5353048	0					
ANR	5353117	ArgumentList	a		5353048	1					
ANR	5353118	Argument	a		5353048	0					
ANR	5353119	Identifier	a		5353048	0					
ANR	5353120	Argument	& alen		5353048	1					
ANR	5353121	UnaryOperationExpression	& alen		5353048	0					
ANR	5353122	UnaryOperator	&		5353048	0					
ANR	5353123	Identifier	alen		5353048	1					
ANR	5353124	IfStatement	if ( ! aa )		5353048	1					
ANR	5353125	Condition	! aa	62:6:1423:1425	5353048	0	True				
ANR	5353126	UnaryOperationExpression	! aa		5353048	0					
ANR	5353127	UnaryOperator	!		5353048	0					
ANR	5353128	Identifier	aa		5353048	1					
ANR	5353129	CompoundStatement		12:11:255:255	5353048	1					
ANR	5353130	ReturnStatement	return 0 ;	63:3:1433:1441	5353048	0	True				
ANR	5353131	PrimaryExpression	0		5353048	0					
ANR	5353132	ExpressionStatement	a = ( const char * ) aa	65:2:1449:1469	5353048	2	True				
ANR	5353133	AssignmentExpression	a = ( const char * ) aa		5353048	0		=			
ANR	5353134	Identifier	a		5353048	0					
ANR	5353135	CastExpression	( const char * ) aa		5353048	1					
ANR	5353136	CastTarget	const char *		5353048	0					
ANR	5353137	Identifier	aa		5353048	1					
ANR	5353138	ElseStatement	else		5353048	0					
ANR	5353139	CompoundStatement		16:8:306:306	5353048	0					
ANR	5353140	ExpressionStatement	alen = strlen ( a )	67:2:1483:1500	5353048	0	True				
ANR	5353141	AssignmentExpression	alen = strlen ( a )		5353048	0		=			
ANR	5353142	Identifier	alen		5353048	0					
ANR	5353143	CallExpression	strlen ( a )		5353048	1					
ANR	5353144	Callee	strlen		5353048	0					
ANR	5353145	Identifier	strlen		5353048	0					
ANR	5353146	ArgumentList	a		5353048	1					
ANR	5353147	Argument	a		5353048	0					
ANR	5353148	Identifier	a		5353048	0					
ANR	5353149	IfStatement	if ( blen <= alen )		5353048	7					
ANR	5353150	Condition	blen <= alen	69:5:1510:1521	5353048	0	True				
ANR	5353151	RelationalExpression	blen <= alen		5353048	0		<=			
ANR	5353152	Identifier	blen		5353048	0					
ANR	5353153	Identifier	alen		5353048	1					
ANR	5353154	CompoundStatement		19:19:351:351	5353048	1					
ANR	5353155	IfStatement	if ( flags & SDB_LIKE_ICASE )		5353048	0					
ANR	5353156	Condition	flags & SDB_LIKE_ICASE	70:6:1532:1553	5353048	0	True				
ANR	5353157	BitAndExpression	flags & SDB_LIKE_ICASE		5353048	0		&			
ANR	5353158	Identifier	flags		5353048	0					
ANR	5353159	Identifier	SDB_LIKE_ICASE		5353048	1					
ANR	5353160	CompoundStatement		20:30:383:383	5353048	1					
ANR	5353161	IfStatement	if ( start && end )		5353048	0					
ANR	5353162	Condition	start && end	71:7:1565:1576	5353048	0	True				
ANR	5353163	AndExpression	start && end		5353048	0		&&			
ANR	5353164	Identifier	start		5353048	0					
ANR	5353165	Identifier	end		5353048	1					
ANR	5353166	ExpressionStatement	"ret = ( alen == blen && ! mycmp ( a , b , blen , 0 ) )"	71:21:1579:1623	5353048	1	True				
ANR	5353167	AssignmentExpression	"ret = ( alen == blen && ! mycmp ( a , b , blen , 0 ) )"		5353048	0		=			
ANR	5353168	Identifier	ret		5353048	0					
ANR	5353169	AndExpression	"alen == blen && ! mycmp ( a , b , blen , 0 )"		5353048	1		&&			
ANR	5353170	EqualityExpression	alen == blen		5353048	0		==			
ANR	5353171	Identifier	alen		5353048	0					
ANR	5353172	Identifier	blen		5353048	1					
ANR	5353173	UnaryOperationExpression	"! mycmp ( a , b , blen , 0 )"		5353048	1					
ANR	5353174	UnaryOperator	!		5353048	0					
ANR	5353175	CallExpression	"mycmp ( a , b , blen , 0 )"		5353048	1					
ANR	5353176	Callee	mycmp		5353048	0					
ANR	5353177	Identifier	mycmp		5353048	0					
ANR	5353178	ArgumentList	a		5353048	1					
ANR	5353179	Argument	a		5353048	0					
ANR	5353180	Identifier	a		5353048	0					
ANR	5353181	Argument	b		5353048	1					
ANR	5353182	Identifier	b		5353048	0					
ANR	5353183	Argument	blen		5353048	2					
ANR	5353184	Identifier	blen		5353048	0					
ANR	5353185	Argument	0		5353048	3					
ANR	5353186	PrimaryExpression	0		5353048	0					
ANR	5353187	ElseStatement	else		5353048	0					
ANR	5353188	IfStatement	if ( start )		5353048	0					
ANR	5353189	Condition	start	72:12:1637:1641	5353048	0	True				
ANR	5353190	Identifier	start		5353048	0					
ANR	5353191	ExpressionStatement	"ret = ! mycmp ( a , b , blen , 0 )"	72:19:1644:1672	5353048	1	True				
ANR	5353192	AssignmentExpression	"ret = ! mycmp ( a , b , blen , 0 )"		5353048	0		=			
ANR	5353193	Identifier	ret		5353048	0					
ANR	5353194	UnaryOperationExpression	"! mycmp ( a , b , blen , 0 )"		5353048	1					
ANR	5353195	UnaryOperator	!		5353048	0					
ANR	5353196	CallExpression	"mycmp ( a , b , blen , 0 )"		5353048	1					
ANR	5353197	Callee	mycmp		5353048	0					
ANR	5353198	Identifier	mycmp		5353048	0					
ANR	5353199	ArgumentList	a		5353048	1					
ANR	5353200	Argument	a		5353048	0					
ANR	5353201	Identifier	a		5353048	0					
ANR	5353202	Argument	b		5353048	1					
ANR	5353203	Identifier	b		5353048	0					
ANR	5353204	Argument	blen		5353048	2					
ANR	5353205	Identifier	blen		5353048	0					
ANR	5353206	Argument	0		5353048	3					
ANR	5353207	PrimaryExpression	0		5353048	0					
ANR	5353208	ElseStatement	else		5353048	0					
ANR	5353209	IfStatement	if ( end )		5353048	0					
ANR	5353210	Condition	end	73:12:1686:1688	5353048	0	True				
ANR	5353211	Identifier	end		5353048	0					
ANR	5353212	ExpressionStatement	"ret = ! mycmp ( a + ( alen - blen ) , b , blen , 0 )"	73:17:1691:1731	5353048	1	True				
ANR	5353213	AssignmentExpression	"ret = ! mycmp ( a + ( alen - blen ) , b , blen , 0 )"		5353048	0		=			
ANR	5353214	Identifier	ret		5353048	0					
ANR	5353215	UnaryOperationExpression	"! mycmp ( a + ( alen - blen ) , b , blen , 0 )"		5353048	1					
ANR	5353216	UnaryOperator	!		5353048	0					
ANR	5353217	CallExpression	"mycmp ( a + ( alen - blen ) , b , blen , 0 )"		5353048	1					
ANR	5353218	Callee	mycmp		5353048	0					
ANR	5353219	Identifier	mycmp		5353048	0					
ANR	5353220	ArgumentList	a + ( alen - blen )		5353048	1					
ANR	5353221	Argument	a + ( alen - blen )		5353048	0					
ANR	5353222	AdditiveExpression	a + ( alen - blen )		5353048	0		+			
ANR	5353223	Identifier	a		5353048	0					
ANR	5353224	AdditiveExpression	alen - blen		5353048	1		-			
ANR	5353225	Identifier	alen		5353048	0					
ANR	5353226	Identifier	blen		5353048	1					
ANR	5353227	Argument	b		5353048	1					
ANR	5353228	Identifier	b		5353048	0					
ANR	5353229	Argument	blen		5353048	2					
ANR	5353230	Identifier	blen		5353048	0					
ANR	5353231	Argument	0		5353048	3					
ANR	5353232	PrimaryExpression	0		5353048	0					
ANR	5353233	ElseStatement	else		5353048	0					
ANR	5353234	ExpressionStatement	"ret = ! mycmp ( a , b , blen , 1 )"	74:8:1741:1769	5353048	0	True				
ANR	5353235	AssignmentExpression	"ret = ! mycmp ( a , b , blen , 1 )"		5353048	0		=			
ANR	5353236	Identifier	ret		5353048	0					
ANR	5353237	UnaryOperationExpression	"! mycmp ( a , b , blen , 1 )"		5353048	1					
ANR	5353238	UnaryOperator	!		5353048	0					
ANR	5353239	CallExpression	"mycmp ( a , b , blen , 1 )"		5353048	1					
ANR	5353240	Callee	mycmp		5353048	0					
ANR	5353241	Identifier	mycmp		5353048	0					
ANR	5353242	ArgumentList	a		5353048	1					
ANR	5353243	Argument	a		5353048	0					
ANR	5353244	Identifier	a		5353048	0					
ANR	5353245	Argument	b		5353048	1					
ANR	5353246	Identifier	b		5353048	0					
ANR	5353247	Argument	blen		5353048	2					
ANR	5353248	Identifier	blen		5353048	0					
ANR	5353249	Argument	1		5353048	3					
ANR	5353250	PrimaryExpression	1		5353048	0					
ANR	5353251	ElseStatement	else		5353048	0					
ANR	5353252	CompoundStatement		25:9:607:607	5353048	0					
ANR	5353253	IfStatement	if ( start && end )		5353048	0					
ANR	5353254	Condition	start && end	76:7:1789:1800	5353048	0	True				
ANR	5353255	AndExpression	start && end		5353048	0		&&			
ANR	5353256	Identifier	start		5353048	0					
ANR	5353257	Identifier	end		5353048	1					
ANR	5353258	ExpressionStatement	"ret = ( alen == blen && ! strncmp ( a , b , blen ) )"	76:21:1803:1846	5353048	1	True				
ANR	5353259	AssignmentExpression	"ret = ( alen == blen && ! strncmp ( a , b , blen ) )"		5353048	0		=			
ANR	5353260	Identifier	ret		5353048	0					
ANR	5353261	AndExpression	"alen == blen && ! strncmp ( a , b , blen )"		5353048	1		&&			
ANR	5353262	EqualityExpression	alen == blen		5353048	0		==			
ANR	5353263	Identifier	alen		5353048	0					
ANR	5353264	Identifier	blen		5353048	1					
ANR	5353265	UnaryOperationExpression	"! strncmp ( a , b , blen )"		5353048	1					
ANR	5353266	UnaryOperator	!		5353048	0					
ANR	5353267	CallExpression	"strncmp ( a , b , blen )"		5353048	1					
ANR	5353268	Callee	strncmp		5353048	0					
ANR	5353269	Identifier	strncmp		5353048	0					
ANR	5353270	ArgumentList	a		5353048	1					
ANR	5353271	Argument	a		5353048	0					
ANR	5353272	Identifier	a		5353048	0					
ANR	5353273	Argument	b		5353048	1					
ANR	5353274	Identifier	b		5353048	0					
ANR	5353275	Argument	blen		5353048	2					
ANR	5353276	Identifier	blen		5353048	0					
ANR	5353277	ElseStatement	else		5353048	0					
ANR	5353278	IfStatement	if ( start )		5353048	0					
ANR	5353279	Condition	start	77:12:1860:1864	5353048	0	True				
ANR	5353280	Identifier	start		5353048	0					
ANR	5353281	ExpressionStatement	"ret = ! strncmp ( a , b , blen )"	77:19:1867:1894	5353048	1	True				
ANR	5353282	AssignmentExpression	"ret = ! strncmp ( a , b , blen )"		5353048	0		=			
ANR	5353283	Identifier	ret		5353048	0					
ANR	5353284	UnaryOperationExpression	"! strncmp ( a , b , blen )"		5353048	1					
ANR	5353285	UnaryOperator	!		5353048	0					
ANR	5353286	CallExpression	"strncmp ( a , b , blen )"		5353048	1					
ANR	5353287	Callee	strncmp		5353048	0					
ANR	5353288	Identifier	strncmp		5353048	0					
ANR	5353289	ArgumentList	a		5353048	1					
ANR	5353290	Argument	a		5353048	0					
ANR	5353291	Identifier	a		5353048	0					
ANR	5353292	Argument	b		5353048	1					
ANR	5353293	Identifier	b		5353048	0					
ANR	5353294	Argument	blen		5353048	2					
ANR	5353295	Identifier	blen		5353048	0					
ANR	5353296	ElseStatement	else		5353048	0					
ANR	5353297	IfStatement	if ( end )		5353048	0					
ANR	5353298	Condition	end	78:12:1908:1910	5353048	0	True				
ANR	5353299	Identifier	end		5353048	0					
ANR	5353300	ExpressionStatement	"ret = ! strncmp ( a + ( alen - blen ) , b , blen )"	78:17:1913:1952	5353048	1	True				
ANR	5353301	AssignmentExpression	"ret = ! strncmp ( a + ( alen - blen ) , b , blen )"		5353048	0		=			
ANR	5353302	Identifier	ret		5353048	0					
ANR	5353303	UnaryOperationExpression	"! strncmp ( a + ( alen - blen ) , b , blen )"		5353048	1					
ANR	5353304	UnaryOperator	!		5353048	0					
ANR	5353305	CallExpression	"strncmp ( a + ( alen - blen ) , b , blen )"		5353048	1					
ANR	5353306	Callee	strncmp		5353048	0					
ANR	5353307	Identifier	strncmp		5353048	0					
ANR	5353308	ArgumentList	a + ( alen - blen )		5353048	1					
ANR	5353309	Argument	a + ( alen - blen )		5353048	0					
ANR	5353310	AdditiveExpression	a + ( alen - blen )		5353048	0		+			
ANR	5353311	Identifier	a		5353048	0					
ANR	5353312	AdditiveExpression	alen - blen		5353048	1		-			
ANR	5353313	Identifier	alen		5353048	0					
ANR	5353314	Identifier	blen		5353048	1					
ANR	5353315	Argument	b		5353048	1					
ANR	5353316	Identifier	b		5353048	0					
ANR	5353317	Argument	blen		5353048	2					
ANR	5353318	Identifier	blen		5353048	0					
ANR	5353319	ElseStatement	else		5353048	0					
ANR	5353320	ExpressionStatement	"ret = strstr2 ( a , b , blen )"	79:8:1962:1988	5353048	0	True				
ANR	5353321	AssignmentExpression	"ret = strstr2 ( a , b , blen )"		5353048	0		=			
ANR	5353322	Identifier	ret		5353048	0					
ANR	5353323	CallExpression	"strstr2 ( a , b , blen )"		5353048	1					
ANR	5353324	Callee	strstr2		5353048	0					
ANR	5353325	Identifier	strstr2		5353048	0					
ANR	5353326	ArgumentList	a		5353048	1					
ANR	5353327	Argument	a		5353048	0					
ANR	5353328	Identifier	a		5353048	0					
ANR	5353329	Argument	b		5353048	1					
ANR	5353330	Identifier	b		5353048	0					
ANR	5353331	Argument	blen		5353048	2					
ANR	5353332	Identifier	blen		5353048	0					
ANR	5353333	ExpressionStatement	free ( aa )	82:1:1998:2007	5353048	8	True				
ANR	5353334	CallExpression	free ( aa )		5353048	0					
ANR	5353335	Callee	free		5353048	0					
ANR	5353336	Identifier	free		5353048	0					
ANR	5353337	ArgumentList	aa		5353048	1					
ANR	5353338	Argument	aa		5353048	0					
ANR	5353339	Identifier	aa		5353048	0					
ANR	5353340	ReturnStatement	return ret ;	83:1:2010:2020	5353048	9	True				
ANR	5353341	Identifier	ret		5353048	0					
ANR	5353342	ReturnType	static inline bool		5353048	1					
ANR	5353343	Identifier	compareString		5353048	2					
ANR	5353344	ParameterList	"const char * a , const char * b , int blen , int flags"		5353048	3					
ANR	5353345	Parameter	const char * a	51:33:1121:1133	5353048	0	True				
ANR	5353346	ParameterType	const char *		5353048	0					
ANR	5353347	Identifier	a		5353048	1					
ANR	5353348	Parameter	const char * b	51:48:1136:1148	5353048	1	True				
ANR	5353349	ParameterType	const char *		5353048	0					
ANR	5353350	Identifier	b		5353048	1					
ANR	5353351	Parameter	int blen	51:63:1151:1158	5353048	2	True				
ANR	5353352	ParameterType	int		5353048	0					
ANR	5353353	Identifier	blen		5353048	1					
ANR	5353354	Parameter	int flags	51:73:1161:1169	5353048	3	True				
ANR	5353355	ParameterType	int		5353048	0					
ANR	5353356	Identifier	flags		5353048	1					
ANR	5353357	CFGEntryNode	ENTRY		5353048		True				
ANR	5353358	CFGExitNode	EXIT		5353048		True				
ANR	5353359	Symbol	aa		5353048						
ANR	5353360	Symbol	ret		5353048						
ANR	5353361	Symbol	a		5353048						
ANR	5353362	Symbol	SDB_LIKE_END		5353048						
ANR	5353363	Symbol	b		5353048						
ANR	5353364	Symbol	sdb_decode		5353048						
ANR	5353365	Symbol	mycmp		5353048						
ANR	5353366	Symbol	NULL		5353048						
ANR	5353367	Symbol	SDB_LIKE_START		5353048						
ANR	5353368	Symbol	& alen		5353048						
ANR	5353369	Symbol	SDB_LIKE_ICASE		5353048						
ANR	5353370	Symbol	flags		5353048						
ANR	5353371	Symbol	start		5353048						
ANR	5353372	Symbol	false		5353048						
ANR	5353373	Symbol	strstr2		5353048						
ANR	5353374	Symbol	strlen		5353048						
ANR	5353375	Symbol	strncmp		5353048						
ANR	5353376	Symbol	SDB_LIKE_BASE64		5353048						
ANR	5353377	Symbol	alen		5353048						
ANR	5353378	Symbol	end		5353048						
ANR	5353379	Symbol	blen		5353048						
ANR	5353380	Function	sdb_match	86:0:2025:2607							
ANR	5353381	FunctionDef	"sdb_match (const char * str , const char * glob)"		5353380	0					
ANR	5353382	CompoundStatement		86:59:2084:2607	5353380	0					
ANR	5353383	IdentifierDeclStatement	"int glob_len , flags = SDB_LIKE_NONE ;"	87:1:2087:2122	5353380	0	True				
ANR	5353384	IdentifierDecl	glob_len		5353380	0					
ANR	5353385	IdentifierDeclType	int		5353380	0					
ANR	5353386	Identifier	glob_len		5353380	1					
ANR	5353387	IdentifierDecl	flags = SDB_LIKE_NONE		5353380	1					
ANR	5353388	IdentifierDeclType	int		5353380	0					
ANR	5353389	Identifier	flags		5353380	1					
ANR	5353390	AssignmentExpression	flags = SDB_LIKE_NONE		5353380	2		=			
ANR	5353391	Identifier	SDB_LIKE_NONE		5353380	0					
ANR	5353392	Identifier	SDB_LIKE_NONE		5353380	1					
ANR	5353393	IfStatement	if ( ! str || ! glob )		5353380	1					
ANR	5353394	Condition	! str || ! glob	88:5:2129:2141	5353380	0	True				
ANR	5353395	OrExpression	! str || ! glob		5353380	0		||			
ANR	5353396	UnaryOperationExpression	! str		5353380	0					
ANR	5353397	UnaryOperator	!		5353380	0					
ANR	5353398	Identifier	str		5353380	1					
ANR	5353399	UnaryOperationExpression	! glob		5353380	1					
ANR	5353400	UnaryOperator	!		5353380	0					
ANR	5353401	Identifier	glob		5353380	1					
ANR	5353402	CompoundStatement		3:20:59:59	5353380	1					
ANR	5353403	ReturnStatement	return false ;	89:2:2148:2160	5353380	0	True				
ANR	5353404	Identifier	false		5353380	0					
ANR	5353405	ExpressionStatement	glob_len = strlen ( glob )	91:1:2166:2190	5353380	2	True				
ANR	5353406	AssignmentExpression	glob_len = strlen ( glob )		5353380	0		=			
ANR	5353407	Identifier	glob_len		5353380	0					
ANR	5353408	CallExpression	strlen ( glob )		5353380	1					
ANR	5353409	Callee	strlen		5353380	0					
ANR	5353410	Identifier	strlen		5353380	0					
ANR	5353411	ArgumentList	glob		5353380	1					
ANR	5353412	Argument	glob		5353380	0					
ANR	5353413	Identifier	glob		5353380	0					
ANR	5353414	IfStatement	"if ( haveSuffix ( glob , glob_len , ""?i"" ) )"		5353380	3					
ANR	5353415	Condition	"haveSuffix ( glob , glob_len , ""?i"" )"	92:5:2197:2229	5353380	0	True				
ANR	5353416	CallExpression	"haveSuffix ( glob , glob_len , ""?i"" )"		5353380	0					
ANR	5353417	Callee	haveSuffix		5353380	0					
ANR	5353418	Identifier	haveSuffix		5353380	0					
ANR	5353419	ArgumentList	glob		5353380	1					
ANR	5353420	Argument	glob		5353380	0					
ANR	5353421	Identifier	glob		5353380	0					
ANR	5353422	Argument	glob_len		5353380	1					
ANR	5353423	Identifier	glob_len		5353380	0					
ANR	5353424	Argument	"""?i"""		5353380	2					
ANR	5353425	PrimaryExpression	"""?i"""		5353380	0					
ANR	5353426	CompoundStatement		7:40:147:147	5353380	1					
ANR	5353427	ExpressionStatement	glob_len -= 2	93:2:2236:2249	5353380	0	True				
ANR	5353428	AssignmentExpression	glob_len -= 2		5353380	0		-=			
ANR	5353429	Identifier	glob_len		5353380	0					
ANR	5353430	PrimaryExpression	2		5353380	1					
ANR	5353431	ExpressionStatement	flags |= SDB_LIKE_ICASE	94:2:2253:2276	5353380	1	True				
ANR	5353432	AssignmentExpression	flags |= SDB_LIKE_ICASE		5353380	0		|=			
ANR	5353433	Identifier	flags		5353380	0					
ANR	5353434	Identifier	SDB_LIKE_ICASE		5353380	1					
ANR	5353435	IfStatement	"if ( havePrefix ( glob , glob_len , ""%"" ) )"		5353380	4					
ANR	5353436	Condition	"havePrefix ( glob , glob_len , ""%"" )"	96:5:2286:2317	5353380	0	True				
ANR	5353437	CallExpression	"havePrefix ( glob , glob_len , ""%"" )"		5353380	0					
ANR	5353438	Callee	havePrefix		5353380	0					
ANR	5353439	Identifier	havePrefix		5353380	0					
ANR	5353440	ArgumentList	glob		5353380	1					
ANR	5353441	Argument	glob		5353380	0					
ANR	5353442	Identifier	glob		5353380	0					
ANR	5353443	Argument	glob_len		5353380	1					
ANR	5353444	Identifier	glob_len		5353380	0					
ANR	5353445	Argument	"""%"""		5353380	2					
ANR	5353446	PrimaryExpression	"""%"""		5353380	0					
ANR	5353447	CompoundStatement		11:39:235:235	5353380	1					
ANR	5353448	ExpressionStatement	glob ++	97:2:2324:2330	5353380	0	True				
ANR	5353449	PostIncDecOperationExpression	glob ++		5353380	0					
ANR	5353450	Identifier	glob		5353380	0					
ANR	5353451	IncDec	++		5353380	1					
ANR	5353452	ExpressionStatement	glob_len --	98:2:2334:2344	5353380	1	True				
ANR	5353453	PostIncDecOperationExpression	glob_len --		5353380	0					
ANR	5353454	Identifier	glob_len		5353380	0					
ANR	5353455	IncDec	--		5353380	1					
ANR	5353456	ExpressionStatement	flags |= SDB_LIKE_BASE64	99:2:2348:2372	5353380	2	True				
ANR	5353457	AssignmentExpression	flags |= SDB_LIKE_BASE64		5353380	0		|=			
ANR	5353458	Identifier	flags		5353380	0					
ANR	5353459	Identifier	SDB_LIKE_BASE64		5353380	1					
ANR	5353460	IfStatement	"if ( havePrefix ( glob , glob_len , ""^"" ) )"		5353380	5					
ANR	5353461	Condition	"havePrefix ( glob , glob_len , ""^"" )"	101:5:2382:2413	5353380	0	True				
ANR	5353462	CallExpression	"havePrefix ( glob , glob_len , ""^"" )"		5353380	0					
ANR	5353463	Callee	havePrefix		5353380	0					
ANR	5353464	Identifier	havePrefix		5353380	0					
ANR	5353465	ArgumentList	glob		5353380	1					
ANR	5353466	Argument	glob		5353380	0					
ANR	5353467	Identifier	glob		5353380	0					
ANR	5353468	Argument	glob_len		5353380	1					
ANR	5353469	Identifier	glob_len		5353380	0					
ANR	5353470	Argument	"""^"""		5353380	2					
ANR	5353471	PrimaryExpression	"""^"""		5353380	0					
ANR	5353472	CompoundStatement		16:39:331:331	5353380	1					
ANR	5353473	ExpressionStatement	glob ++	102:2:2420:2426	5353380	0	True				
ANR	5353474	PostIncDecOperationExpression	glob ++		5353380	0					
ANR	5353475	Identifier	glob		5353380	0					
ANR	5353476	IncDec	++		5353380	1					
ANR	5353477	ExpressionStatement	glob_len --	103:2:2430:2440	5353380	1	True				
ANR	5353478	PostIncDecOperationExpression	glob_len --		5353380	0					
ANR	5353479	Identifier	glob_len		5353380	0					
ANR	5353480	IncDec	--		5353380	1					
ANR	5353481	ExpressionStatement	flags |= SDB_LIKE_START	104:2:2444:2467	5353380	2	True				
ANR	5353482	AssignmentExpression	flags |= SDB_LIKE_START		5353380	0		|=			
ANR	5353483	Identifier	flags		5353380	0					
ANR	5353484	Identifier	SDB_LIKE_START		5353380	1					
ANR	5353485	IfStatement	"if ( haveSuffix ( glob , glob_len , ""$"" ) )"		5353380	6					
ANR	5353486	Condition	"haveSuffix ( glob , glob_len , ""$"" )"	106:5:2477:2508	5353380	0	True				
ANR	5353487	CallExpression	"haveSuffix ( glob , glob_len , ""$"" )"		5353380	0					
ANR	5353488	Callee	haveSuffix		5353380	0					
ANR	5353489	Identifier	haveSuffix		5353380	0					
ANR	5353490	ArgumentList	glob		5353380	1					
ANR	5353491	Argument	glob		5353380	0					
ANR	5353492	Identifier	glob		5353380	0					
ANR	5353493	Argument	glob_len		5353380	1					
ANR	5353494	Identifier	glob_len		5353380	0					
ANR	5353495	Argument	"""$"""		5353380	2					
ANR	5353496	PrimaryExpression	"""$"""		5353380	0					
ANR	5353497	CompoundStatement		21:39:426:426	5353380	1					
ANR	5353498	ExpressionStatement	glob_len --	107:2:2515:2525	5353380	0	True				
ANR	5353499	PostIncDecOperationExpression	glob_len --		5353380	0					
ANR	5353500	Identifier	glob_len		5353380	0					
ANR	5353501	IncDec	--		5353380	1					
ANR	5353502	ExpressionStatement	flags |= SDB_LIKE_END	108:2:2529:2550	5353380	1	True				
ANR	5353503	AssignmentExpression	flags |= SDB_LIKE_END		5353380	0		|=			
ANR	5353504	Identifier	flags		5353380	0					
ANR	5353505	Identifier	SDB_LIKE_END		5353380	1					
ANR	5353506	ReturnStatement	"return compareString ( str , glob , glob_len , flags ) ;"	110:1:2556:2605	5353380	7	True				
ANR	5353507	CallExpression	"compareString ( str , glob , glob_len , flags )"		5353380	0					
ANR	5353508	Callee	compareString		5353380	0					
ANR	5353509	Identifier	compareString		5353380	0					
ANR	5353510	ArgumentList	str		5353380	1					
ANR	5353511	Argument	str		5353380	0					
ANR	5353512	Identifier	str		5353380	0					
ANR	5353513	Argument	glob		5353380	1					
ANR	5353514	Identifier	glob		5353380	0					
ANR	5353515	Argument	glob_len		5353380	2					
ANR	5353516	Identifier	glob_len		5353380	0					
ANR	5353517	Argument	flags		5353380	3					
ANR	5353518	Identifier	flags		5353380	0					
ANR	5353519	ReturnType	SDB_API bool		5353380	1					
ANR	5353520	Identifier	sdb_match		5353380	2					
ANR	5353521	ParameterList	"const char * str , const char * glob"		5353380	3					
ANR	5353522	Parameter	const char * str	86:24:2049:2063	5353380	0	True				
ANR	5353523	ParameterType	const char *		5353380	0					
ANR	5353524	Identifier	str		5353380	1					
ANR	5353525	Parameter	const char * glob	86:41:2066:2081	5353380	1	True				
ANR	5353526	ParameterType	const char *		5353380	0					
ANR	5353527	Identifier	glob		5353380	1					
ANR	5353528	CFGEntryNode	ENTRY		5353380		True				
ANR	5353529	CFGExitNode	EXIT		5353380		True				
ANR	5353530	Symbol	SDB_LIKE_END		5353380						
ANR	5353531	Symbol	compareString		5353380						
ANR	5353532	Symbol	SDB_LIKE_START		5353380						
ANR	5353533	Symbol	SDB_LIKE_ICASE		5353380						
ANR	5353534	Symbol	havePrefix		5353380						
ANR	5353535	Symbol	glob		5353380						
ANR	5353536	Symbol	flags		5353380						
ANR	5353537	Symbol	false		5353380						
ANR	5353538	Symbol	SDB_LIKE_NONE		5353380						
ANR	5353539	Symbol	str		5353380						
ANR	5353540	Symbol	strlen		5353380						
ANR	5353541	Symbol	SDB_LIKE_BASE64		5353380						
ANR	5353542	Symbol	glob_len		5353380						
ANR	5353543	Symbol	haveSuffix		5353380						
